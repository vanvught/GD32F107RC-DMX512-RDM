
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08008565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, pc}
 8007008:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800700c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007010:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007014:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007018:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 800702c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007030:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800703c:	080125e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, sp}
 8007040:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007044:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007048:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800704c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007050:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007054:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007058:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800705c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007060:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007064:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007068:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800706c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007070:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007074:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007078:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800707c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007080:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007084:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007088:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800708c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007090:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007094:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007098:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800709c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ac:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070bc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070cc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070dc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ec:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 8007100:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800710c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007110:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007114:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007118:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800711c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007120:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007124:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007128:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800712c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007130:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007134:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007138:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800713c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007140:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007144:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007148:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800714c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f009 fadb 	bl	801075c <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f007 fdf8 	bl	800eda4 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f009 fcec 	bl	8010b9c <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20002f70 	andcs	r2, r0, r0, ror pc
 80071e8:	20002f64 	andcs	r2, r0, r4, ror #30
 80071ec:	20002f76 	andcs	r2, r0, r6, ror pc

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f009 bbb4 	b.w	801096c <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20002f76 	andcs	r2, r0, r6, ror pc

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20002f80 	andcs	r2, r0, r0, lsl #31

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f007 fe13 	bl	800ee58 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f007 fe07 	bl	800ee58 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20003b48 	andcs	r3, r0, r8, asr #22
 800725c:	20002f70 	andcs	r2, r0, r0, ror pc
 8007260:	20002f64 	andcs	r2, r0, r4, ror #30
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f007 ff66 	bl	800f160 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f007 ff87 	bl	800f1b0 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20004164 	andcs	r4, r0, r4, ror #2
 80072ac:	20004144 	andcs	r4, r0, r4, asr #2
 80072b0:	20009e04 	andcs	r9, r0, r4, lsl #28
 80072b4:	20004140 	andcs	r4, r0, r0, asr #2
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f009 f8c2 	bl	8010460 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f009 f8af 	bl	8010460 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f009 f8a3 	bl	8010460 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f009 f892 	bl	8010460 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f009 f886 	bl	8010460 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f009 f87a 	bl	8010460 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f009 b87f 	b.w	8010474 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	2000a83a 	andcs	sl, r0, sl, lsr r8
 8007394:	2000a834 	andcs	sl, r0, r4, lsr r8
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	2000a84a 	andcs	sl, r0, sl, asr #16
 80073a4:	2000a854 	andcs	sl, r0, r4, asr r8
 80073a8:	2000a892 	mulcs	r0, r2, r8
 80073ac:	2000a88c 	andcs	sl, r0, ip, lsl #17
 80073b0:	2000a8a2 	andcs	sl, r0, r2, lsr #17
 80073b4:	2000a8ac 	andcs	sl, r0, ip, lsr #17
 80073b8:	2000a860 	andcs	sl, r0, r0, ror #16

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	2000aa38 	andcs	sl, r0, r8, lsr sl
 80073ec:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f009 fb1e 	bl	8010a5c <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f009 faca 	bl	80109c8 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f009 fab0 	bl	80109c8 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	2000ac70 	andcs	sl, r0, r0, ror ip
 8007490:	2000ad94 	mulcs	r0, r4, sp
 8007494:	2000add0 	ldrdcs	sl, [r0], -r0
 8007498:	2000ad90 	mulcs	r0, r0, sp
 800749c:	2000adc8 	andcs	sl, r0, r8, asr #27
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	2000ad98 	mulcs	r0, r8, sp
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f009 fb28 	bl	8010b14 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	2000ac70 	andcs	sl, r0, r0, ror ip

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f00b f813 	bl	801252c <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f00b f840 	bl	801258c <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f00b f83d 	bl	801258c <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	080144d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, lr}
 800751c:	08016ee4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, fp, sp, lr}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f00b fceb 	bl	8012f00 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f00b fcf5 	bl	8012f28 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f007 bc1f 	b.w	800ed84 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20002f78 	andcs	r2, r0, r8, ror pc

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f007 fc7b 	bl	800ee6c <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f007 fc5c 	bl	800ee58 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f007 fc4d 	bl	800ee58 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f007 fc45 	bl	800ee58 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f007 fcee 	bl	800f004 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f007 fc06 	bl	800ee58 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f007 fbff 	bl	800ee58 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f007 fc1e 	bl	800eeb8 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f007 fbb9 	bl	800ee24 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f007 fb9a 	bl	800ee24 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f007 fbd7 	bl	800eeb8 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f007 fc74 	bl	800f004 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f007 fc52 	bl	800f004 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f007 fb61 	bl	800ee58 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f007 fb7d 	bl	800eeb8 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f007 fb5f 	bl	800eeb8 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20003b04 	andcs	r3, r0, r4, lsl #22
 8007814:	20003b0c 	andcs	r3, r0, ip, lsl #22
 8007818:	20002f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f007 fad5 	bl	800ee24 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f007 fb10 	bl	800eeb8 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20003b04 	andcs	r3, r0, r4, lsl #22

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f007 fc1e 	bl	800f160 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f007 fc17 	bl	800f160 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20004144 	andcs	r4, r0, r4, asr #2
 800795c:	20004164 	andcs	r4, r0, r4, ror #2

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f008 bd8a 	b.w	8010488 <arp_handle_request>
 8007974:	f008 bdb0 	b.w	80104d8 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	2000ad94 	mulcs	r0, r4, sp
 8007a14:	2000ac70 	andcs	sl, r0, r0, ror ip

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f009 f8bb 	bl	8010be0 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f009 f8b6 	bl	8010be0 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f009 f8ab 	bl	8010be0 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f009 f8a0 	bl	8010be0 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f009 f881 	bl	8010bae <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f009 f874 	bl	8010bae <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f00b fa2d 	bl	8012f30 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20002f70 	andcs	r2, r0, r0, ror pc
 8007ae0:	20002f64 	andcs	r2, r0, r4, ror #30

08007ae4 <__aeabi_d2f>:
 8007ae4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ae8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007aec:	bf24      	itt	cs
 8007aee:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007af2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007af6:	d90d      	bls.n	8007b14 <__aeabi_d2f+0x30>
 8007af8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007afc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b00:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b04:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b08:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b0c:	bf08      	it	eq
 8007b0e:	f020 0001 	biceq.w	r0, r0, #1
 8007b12:	4770      	bx	lr
 8007b14:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b18:	d121      	bne.n	8007b5e <__aeabi_d2f+0x7a>
 8007b1a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b1e:	bfbc      	itt	lt
 8007b20:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b24:	4770      	bxlt	lr
 8007b26:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b2a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b2e:	f1c2 0218 	rsb	r2, r2, #24
 8007b32:	f1c2 0c20 	rsb	ip, r2, #32
 8007b36:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b3a:	fa20 f002 	lsr.w	r0, r0, r2
 8007b3e:	bf18      	it	ne
 8007b40:	f040 0001 	orrne.w	r0, r0, #1
 8007b44:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b48:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b4c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b50:	ea40 000c 	orr.w	r0, r0, ip
 8007b54:	fa23 f302 	lsr.w	r3, r3, r2
 8007b58:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b5c:	e7cc      	b.n	8007af8 <__aeabi_d2f+0x14>
 8007b5e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b62:	d107      	bne.n	8007b74 <__aeabi_d2f+0x90>
 8007b64:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b68:	bf1e      	ittt	ne
 8007b6a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b6e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b72:	4770      	bxne	lr
 8007b74:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b78:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b7c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b80:	4770      	bx	lr
 8007b82:	bf00      	nop

08007b84 <__aeabi_frsub>:
 8007b84:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b88:	e002      	b.n	8007b90 <__addsf3>
 8007b8a:	bf00      	nop

08007b8c <__aeabi_fsub>:
 8007b8c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b90 <__addsf3>:
 8007b90:	0042      	lsls	r2, r0, #1
 8007b92:	bf1f      	itttt	ne
 8007b94:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007b98:	ea92 0f03 	teqne	r2, r3
 8007b9c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007ba0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ba4:	d06a      	beq.n	8007c7c <__addsf3+0xec>
 8007ba6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007baa:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bae:	bfc1      	itttt	gt
 8007bb0:	18d2      	addgt	r2, r2, r3
 8007bb2:	4041      	eorgt	r1, r0
 8007bb4:	4048      	eorgt	r0, r1
 8007bb6:	4041      	eorgt	r1, r0
 8007bb8:	bfb8      	it	lt
 8007bba:	425b      	neglt	r3, r3
 8007bbc:	2b19      	cmp	r3, #25
 8007bbe:	bf88      	it	hi
 8007bc0:	4770      	bxhi	lr
 8007bc2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bc6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bca:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bce:	bf18      	it	ne
 8007bd0:	4240      	negne	r0, r0
 8007bd2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bd6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007bda:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bde:	bf18      	it	ne
 8007be0:	4249      	negne	r1, r1
 8007be2:	ea92 0f03 	teq	r2, r3
 8007be6:	d03f      	beq.n	8007c68 <__addsf3+0xd8>
 8007be8:	f1a2 0201 	sub.w	r2, r2, #1
 8007bec:	fa41 fc03 	asr.w	ip, r1, r3
 8007bf0:	eb10 000c 	adds.w	r0, r0, ip
 8007bf4:	f1c3 0320 	rsb	r3, r3, #32
 8007bf8:	fa01 f103 	lsl.w	r1, r1, r3
 8007bfc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c00:	d502      	bpl.n	8007c08 <__addsf3+0x78>
 8007c02:	4249      	negs	r1, r1
 8007c04:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c08:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c0c:	d313      	bcc.n	8007c36 <__addsf3+0xa6>
 8007c0e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c12:	d306      	bcc.n	8007c22 <__addsf3+0x92>
 8007c14:	0840      	lsrs	r0, r0, #1
 8007c16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c1a:	f102 0201 	add.w	r2, r2, #1
 8007c1e:	2afe      	cmp	r2, #254	; 0xfe
 8007c20:	d251      	bcs.n	8007cc6 <__addsf3+0x136>
 8007c22:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c26:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c2a:	bf08      	it	eq
 8007c2c:	f020 0001 	biceq.w	r0, r0, #1
 8007c30:	ea40 0003 	orr.w	r0, r0, r3
 8007c34:	4770      	bx	lr
 8007c36:	0049      	lsls	r1, r1, #1
 8007c38:	eb40 0000 	adc.w	r0, r0, r0
 8007c3c:	3a01      	subs	r2, #1
 8007c3e:	bf28      	it	cs
 8007c40:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c44:	d2ed      	bcs.n	8007c22 <__addsf3+0x92>
 8007c46:	fab0 fc80 	clz	ip, r0
 8007c4a:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c4e:	ebb2 020c 	subs.w	r2, r2, ip
 8007c52:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c56:	bfaa      	itet	ge
 8007c58:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c5c:	4252      	neglt	r2, r2
 8007c5e:	4318      	orrge	r0, r3
 8007c60:	bfbc      	itt	lt
 8007c62:	40d0      	lsrlt	r0, r2
 8007c64:	4318      	orrlt	r0, r3
 8007c66:	4770      	bx	lr
 8007c68:	f092 0f00 	teq	r2, #0
 8007c6c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c70:	bf06      	itte	eq
 8007c72:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c76:	3201      	addeq	r2, #1
 8007c78:	3b01      	subne	r3, #1
 8007c7a:	e7b5      	b.n	8007be8 <__addsf3+0x58>
 8007c7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c84:	bf18      	it	ne
 8007c86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c8a:	d021      	beq.n	8007cd0 <__addsf3+0x140>
 8007c8c:	ea92 0f03 	teq	r2, r3
 8007c90:	d004      	beq.n	8007c9c <__addsf3+0x10c>
 8007c92:	f092 0f00 	teq	r2, #0
 8007c96:	bf08      	it	eq
 8007c98:	4608      	moveq	r0, r1
 8007c9a:	4770      	bx	lr
 8007c9c:	ea90 0f01 	teq	r0, r1
 8007ca0:	bf1c      	itt	ne
 8007ca2:	2000      	movne	r0, #0
 8007ca4:	4770      	bxne	lr
 8007ca6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007caa:	d104      	bne.n	8007cb6 <__addsf3+0x126>
 8007cac:	0040      	lsls	r0, r0, #1
 8007cae:	bf28      	it	cs
 8007cb0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cb4:	4770      	bx	lr
 8007cb6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cba:	bf3c      	itt	cc
 8007cbc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007cc0:	4770      	bxcc	lr
 8007cc2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cc6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007cd4:	bf16      	itet	ne
 8007cd6:	4608      	movne	r0, r1
 8007cd8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007cdc:	4601      	movne	r1, r0
 8007cde:	0242      	lsls	r2, r0, #9
 8007ce0:	bf06      	itte	eq
 8007ce2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007ce6:	ea90 0f01 	teqeq	r0, r1
 8007cea:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cee:	4770      	bx	lr

08007cf0 <__aeabi_ui2f>:
 8007cf0:	f04f 0300 	mov.w	r3, #0
 8007cf4:	e004      	b.n	8007d00 <__aeabi_i2f+0x8>
 8007cf6:	bf00      	nop

08007cf8 <__aeabi_i2f>:
 8007cf8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007cfc:	bf48      	it	mi
 8007cfe:	4240      	negmi	r0, r0
 8007d00:	ea5f 0c00 	movs.w	ip, r0
 8007d04:	bf08      	it	eq
 8007d06:	4770      	bxeq	lr
 8007d08:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d0c:	4601      	mov	r1, r0
 8007d0e:	f04f 0000 	mov.w	r0, #0
 8007d12:	e01c      	b.n	8007d4e <__aeabi_l2f+0x2a>

08007d14 <__aeabi_ul2f>:
 8007d14:	ea50 0201 	orrs.w	r2, r0, r1
 8007d18:	bf08      	it	eq
 8007d1a:	4770      	bxeq	lr
 8007d1c:	f04f 0300 	mov.w	r3, #0
 8007d20:	e00a      	b.n	8007d38 <__aeabi_l2f+0x14>
 8007d22:	bf00      	nop

08007d24 <__aeabi_l2f>:
 8007d24:	ea50 0201 	orrs.w	r2, r0, r1
 8007d28:	bf08      	it	eq
 8007d2a:	4770      	bxeq	lr
 8007d2c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d30:	d502      	bpl.n	8007d38 <__aeabi_l2f+0x14>
 8007d32:	4240      	negs	r0, r0
 8007d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d38:	ea5f 0c01 	movs.w	ip, r1
 8007d3c:	bf02      	ittt	eq
 8007d3e:	4684      	moveq	ip, r0
 8007d40:	4601      	moveq	r1, r0
 8007d42:	2000      	moveq	r0, #0
 8007d44:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d48:	bf08      	it	eq
 8007d4a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d4e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d52:	fabc f28c 	clz	r2, ip
 8007d56:	3a08      	subs	r2, #8
 8007d58:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d5c:	db10      	blt.n	8007d80 <__aeabi_l2f+0x5c>
 8007d5e:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d62:	4463      	add	r3, ip
 8007d64:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d68:	f1c2 0220 	rsb	r2, r2, #32
 8007d6c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d70:	fa20 f202 	lsr.w	r2, r0, r2
 8007d74:	eb43 0002 	adc.w	r0, r3, r2
 8007d78:	bf08      	it	eq
 8007d7a:	f020 0001 	biceq.w	r0, r0, #1
 8007d7e:	4770      	bx	lr
 8007d80:	f102 0220 	add.w	r2, r2, #32
 8007d84:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d88:	f1c2 0220 	rsb	r2, r2, #32
 8007d8c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d90:	fa21 f202 	lsr.w	r2, r1, r2
 8007d94:	eb43 0002 	adc.w	r0, r3, r2
 8007d98:	bf08      	it	eq
 8007d9a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007d9e:	4770      	bx	lr

08007da0 <__gesf2>:
 8007da0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007da4:	e006      	b.n	8007db4 <__cmpsf2+0x4>
 8007da6:	bf00      	nop

08007da8 <__lesf2>:
 8007da8:	f04f 0c01 	mov.w	ip, #1
 8007dac:	e002      	b.n	8007db4 <__cmpsf2+0x4>
 8007dae:	bf00      	nop

08007db0 <__cmpsf2>:
 8007db0:	f04f 0c01 	mov.w	ip, #1
 8007db4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007db8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dbc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dc0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dc4:	bf18      	it	ne
 8007dc6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dca:	d011      	beq.n	8007df0 <__cmpsf2+0x40>
 8007dcc:	b001      	add	sp, #4
 8007dce:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dd2:	bf18      	it	ne
 8007dd4:	ea90 0f01 	teqne	r0, r1
 8007dd8:	bf58      	it	pl
 8007dda:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dde:	bf88      	it	hi
 8007de0:	17c8      	asrhi	r0, r1, #31
 8007de2:	bf38      	it	cc
 8007de4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007de8:	bf18      	it	ne
 8007dea:	f040 0001 	orrne.w	r0, r0, #1
 8007dee:	4770      	bx	lr
 8007df0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007df4:	d102      	bne.n	8007dfc <__cmpsf2+0x4c>
 8007df6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007dfa:	d105      	bne.n	8007e08 <__cmpsf2+0x58>
 8007dfc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e00:	d1e4      	bne.n	8007dcc <__cmpsf2+0x1c>
 8007e02:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e06:	d0e1      	beq.n	8007dcc <__cmpsf2+0x1c>
 8007e08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e0c:	4770      	bx	lr
 8007e0e:	bf00      	nop

08007e10 <__aeabi_cfrcmple>:
 8007e10:	4684      	mov	ip, r0
 8007e12:	4608      	mov	r0, r1
 8007e14:	4661      	mov	r1, ip
 8007e16:	e7ff      	b.n	8007e18 <__aeabi_cfcmpeq>

08007e18 <__aeabi_cfcmpeq>:
 8007e18:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e1a:	f7ff ffc9 	bl	8007db0 <__cmpsf2>
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	bf48      	it	mi
 8007e22:	f110 0f00 	cmnmi.w	r0, #0
 8007e26:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e28 <__aeabi_fcmpeq>:
 8007e28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e2c:	f7ff fff4 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e30:	bf0c      	ite	eq
 8007e32:	2001      	moveq	r0, #1
 8007e34:	2000      	movne	r0, #0
 8007e36:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e3a:	bf00      	nop

08007e3c <__aeabi_fcmplt>:
 8007e3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e40:	f7ff ffea 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e44:	bf34      	ite	cc
 8007e46:	2001      	movcc	r0, #1
 8007e48:	2000      	movcs	r0, #0
 8007e4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e4e:	bf00      	nop

08007e50 <__aeabi_fcmple>:
 8007e50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e54:	f7ff ffe0 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e58:	bf94      	ite	ls
 8007e5a:	2001      	movls	r0, #1
 8007e5c:	2000      	movhi	r0, #0
 8007e5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e62:	bf00      	nop

08007e64 <__aeabi_fcmpge>:
 8007e64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e68:	f7ff ffd2 	bl	8007e10 <__aeabi_cfrcmple>
 8007e6c:	bf94      	ite	ls
 8007e6e:	2001      	movls	r0, #1
 8007e70:	2000      	movhi	r0, #0
 8007e72:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e76:	bf00      	nop

08007e78 <__aeabi_fcmpgt>:
 8007e78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e7c:	f7ff ffc8 	bl	8007e10 <__aeabi_cfrcmple>
 8007e80:	bf34      	ite	cc
 8007e82:	2001      	movcc	r0, #1
 8007e84:	2000      	movcs	r0, #0
 8007e86:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e8a:	bf00      	nop

08007e8c <__aeabi_f2iz>:
 8007e8c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e90:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007e94:	d30f      	bcc.n	8007eb6 <__aeabi_f2iz+0x2a>
 8007e96:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007e9a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007e9e:	d90d      	bls.n	8007ebc <__aeabi_f2iz+0x30>
 8007ea0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007ea8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eac:	fa23 f002 	lsr.w	r0, r3, r2
 8007eb0:	bf18      	it	ne
 8007eb2:	4240      	negne	r0, r0
 8007eb4:	4770      	bx	lr
 8007eb6:	f04f 0000 	mov.w	r0, #0
 8007eba:	4770      	bx	lr
 8007ebc:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ec0:	d101      	bne.n	8007ec6 <__aeabi_f2iz+0x3a>
 8007ec2:	0242      	lsls	r2, r0, #9
 8007ec4:	d105      	bne.n	8007ed2 <__aeabi_f2iz+0x46>
 8007ec6:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007eca:	bf08      	it	eq
 8007ecc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007ed0:	4770      	bx	lr
 8007ed2:	f04f 0000 	mov.w	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <__aeabi_uldivmod>:
 8007ed8:	b953      	cbnz	r3, 8007ef0 <__aeabi_uldivmod+0x18>
 8007eda:	b94a      	cbnz	r2, 8007ef0 <__aeabi_uldivmod+0x18>
 8007edc:	2900      	cmp	r1, #0
 8007ede:	bf08      	it	eq
 8007ee0:	2800      	cmpeq	r0, #0
 8007ee2:	bf1c      	itt	ne
 8007ee4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ee8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007eec:	f000 b80c 	b.w	8007f08 <__aeabi_idiv0>
 8007ef0:	f1ad 0c08 	sub.w	ip, sp, #8
 8007ef4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007ef8:	f001 fa0c 	bl	8009314 <__udivmoddi4>
 8007efc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f04:	b004      	add	sp, #16
 8007f06:	4770      	bx	lr

08007f08 <__aeabi_idiv0>:
 8007f08:	4770      	bx	lr
 8007f0a:	bf00      	nop

08007f0c <__aeabi_drsub>:
 8007f0c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f10:	e002      	b.n	8007f18 <__adddf3>
 8007f12:	bf00      	nop

08007f14 <__aeabi_dsub>:
 8007f14:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f18 <__adddf3>:
 8007f18:	b530      	push	{r4, r5, lr}
 8007f1a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f1e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f22:	ea94 0f05 	teq	r4, r5
 8007f26:	bf08      	it	eq
 8007f28:	ea90 0f02 	teqeq	r0, r2
 8007f2c:	bf1f      	itttt	ne
 8007f2e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f32:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f36:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f3a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f3e:	f000 80e2 	beq.w	8008106 <__adddf3+0x1ee>
 8007f42:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f46:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007f4a:	bfb8      	it	lt
 8007f4c:	426d      	neglt	r5, r5
 8007f4e:	dd0c      	ble.n	8007f6a <__adddf3+0x52>
 8007f50:	442c      	add	r4, r5
 8007f52:	ea80 0202 	eor.w	r2, r0, r2
 8007f56:	ea81 0303 	eor.w	r3, r1, r3
 8007f5a:	ea82 0000 	eor.w	r0, r2, r0
 8007f5e:	ea83 0101 	eor.w	r1, r3, r1
 8007f62:	ea80 0202 	eor.w	r2, r0, r2
 8007f66:	ea81 0303 	eor.w	r3, r1, r3
 8007f6a:	2d36      	cmp	r5, #54	; 0x36
 8007f6c:	bf88      	it	hi
 8007f6e:	bd30      	pophi	{r4, r5, pc}
 8007f70:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007f74:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007f78:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007f7c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007f80:	d002      	beq.n	8007f88 <__adddf3+0x70>
 8007f82:	4240      	negs	r0, r0
 8007f84:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007f88:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007f8c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007f90:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007f94:	d002      	beq.n	8007f9c <__adddf3+0x84>
 8007f96:	4252      	negs	r2, r2
 8007f98:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007f9c:	ea94 0f05 	teq	r4, r5
 8007fa0:	f000 80a7 	beq.w	80080f2 <__adddf3+0x1da>
 8007fa4:	f1a4 0401 	sub.w	r4, r4, #1
 8007fa8:	f1d5 0e20 	rsbs	lr, r5, #32
 8007fac:	db0d      	blt.n	8007fca <__adddf3+0xb2>
 8007fae:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007fb2:	fa22 f205 	lsr.w	r2, r2, r5
 8007fb6:	1880      	adds	r0, r0, r2
 8007fb8:	f141 0100 	adc.w	r1, r1, #0
 8007fbc:	fa03 f20e 	lsl.w	r2, r3, lr
 8007fc0:	1880      	adds	r0, r0, r2
 8007fc2:	fa43 f305 	asr.w	r3, r3, r5
 8007fc6:	4159      	adcs	r1, r3
 8007fc8:	e00e      	b.n	8007fe8 <__adddf3+0xd0>
 8007fca:	f1a5 0520 	sub.w	r5, r5, #32
 8007fce:	f10e 0e20 	add.w	lr, lr, #32
 8007fd2:	2a01      	cmp	r2, #1
 8007fd4:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007fd8:	bf28      	it	cs
 8007fda:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007fde:	fa43 f305 	asr.w	r3, r3, r5
 8007fe2:	18c0      	adds	r0, r0, r3
 8007fe4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007fe8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007fec:	d507      	bpl.n	8007ffe <__adddf3+0xe6>
 8007fee:	f04f 0e00 	mov.w	lr, #0
 8007ff2:	f1dc 0c00 	rsbs	ip, ip, #0
 8007ff6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007ffa:	eb6e 0101 	sbc.w	r1, lr, r1
 8007ffe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008002:	d31b      	bcc.n	800803c <__adddf3+0x124>
 8008004:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008008:	d30c      	bcc.n	8008024 <__adddf3+0x10c>
 800800a:	0849      	lsrs	r1, r1, #1
 800800c:	ea5f 0030 	movs.w	r0, r0, rrx
 8008010:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008014:	f104 0401 	add.w	r4, r4, #1
 8008018:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800801c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008020:	f080 809a 	bcs.w	8008158 <__adddf3+0x240>
 8008024:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008028:	bf08      	it	eq
 800802a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800802e:	f150 0000 	adcs.w	r0, r0, #0
 8008032:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008036:	ea41 0105 	orr.w	r1, r1, r5
 800803a:	bd30      	pop	{r4, r5, pc}
 800803c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008040:	4140      	adcs	r0, r0
 8008042:	eb41 0101 	adc.w	r1, r1, r1
 8008046:	3c01      	subs	r4, #1
 8008048:	bf28      	it	cs
 800804a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800804e:	d2e9      	bcs.n	8008024 <__adddf3+0x10c>
 8008050:	f091 0f00 	teq	r1, #0
 8008054:	bf04      	itt	eq
 8008056:	4601      	moveq	r1, r0
 8008058:	2000      	moveq	r0, #0
 800805a:	fab1 f381 	clz	r3, r1
 800805e:	bf08      	it	eq
 8008060:	3320      	addeq	r3, #32
 8008062:	f1a3 030b 	sub.w	r3, r3, #11
 8008066:	f1b3 0220 	subs.w	r2, r3, #32
 800806a:	da0c      	bge.n	8008086 <__adddf3+0x16e>
 800806c:	320c      	adds	r2, #12
 800806e:	dd08      	ble.n	8008082 <__adddf3+0x16a>
 8008070:	f102 0c14 	add.w	ip, r2, #20
 8008074:	f1c2 020c 	rsb	r2, r2, #12
 8008078:	fa01 f00c 	lsl.w	r0, r1, ip
 800807c:	fa21 f102 	lsr.w	r1, r1, r2
 8008080:	e00c      	b.n	800809c <__adddf3+0x184>
 8008082:	f102 0214 	add.w	r2, r2, #20
 8008086:	bfd8      	it	le
 8008088:	f1c2 0c20 	rsble	ip, r2, #32
 800808c:	fa01 f102 	lsl.w	r1, r1, r2
 8008090:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008094:	bfdc      	itt	le
 8008096:	ea41 010c 	orrle.w	r1, r1, ip
 800809a:	4090      	lslle	r0, r2
 800809c:	1ae4      	subs	r4, r4, r3
 800809e:	bfa2      	ittt	ge
 80080a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080a4:	4329      	orrge	r1, r5
 80080a6:	bd30      	popge	{r4, r5, pc}
 80080a8:	ea6f 0404 	mvn.w	r4, r4
 80080ac:	3c1f      	subs	r4, #31
 80080ae:	da1c      	bge.n	80080ea <__adddf3+0x1d2>
 80080b0:	340c      	adds	r4, #12
 80080b2:	dc0e      	bgt.n	80080d2 <__adddf3+0x1ba>
 80080b4:	f104 0414 	add.w	r4, r4, #20
 80080b8:	f1c4 0220 	rsb	r2, r4, #32
 80080bc:	fa20 f004 	lsr.w	r0, r0, r4
 80080c0:	fa01 f302 	lsl.w	r3, r1, r2
 80080c4:	ea40 0003 	orr.w	r0, r0, r3
 80080c8:	fa21 f304 	lsr.w	r3, r1, r4
 80080cc:	ea45 0103 	orr.w	r1, r5, r3
 80080d0:	bd30      	pop	{r4, r5, pc}
 80080d2:	f1c4 040c 	rsb	r4, r4, #12
 80080d6:	f1c4 0220 	rsb	r2, r4, #32
 80080da:	fa20 f002 	lsr.w	r0, r0, r2
 80080de:	fa01 f304 	lsl.w	r3, r1, r4
 80080e2:	ea40 0003 	orr.w	r0, r0, r3
 80080e6:	4629      	mov	r1, r5
 80080e8:	bd30      	pop	{r4, r5, pc}
 80080ea:	fa21 f004 	lsr.w	r0, r1, r4
 80080ee:	4629      	mov	r1, r5
 80080f0:	bd30      	pop	{r4, r5, pc}
 80080f2:	f094 0f00 	teq	r4, #0
 80080f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80080fa:	bf06      	itte	eq
 80080fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008100:	3401      	addeq	r4, #1
 8008102:	3d01      	subne	r5, #1
 8008104:	e74e      	b.n	8007fa4 <__adddf3+0x8c>
 8008106:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800810a:	bf18      	it	ne
 800810c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008110:	d029      	beq.n	8008166 <__adddf3+0x24e>
 8008112:	ea94 0f05 	teq	r4, r5
 8008116:	bf08      	it	eq
 8008118:	ea90 0f02 	teqeq	r0, r2
 800811c:	d005      	beq.n	800812a <__adddf3+0x212>
 800811e:	ea54 0c00 	orrs.w	ip, r4, r0
 8008122:	bf04      	itt	eq
 8008124:	4619      	moveq	r1, r3
 8008126:	4610      	moveq	r0, r2
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	ea91 0f03 	teq	r1, r3
 800812e:	bf1e      	ittt	ne
 8008130:	2100      	movne	r1, #0
 8008132:	2000      	movne	r0, #0
 8008134:	bd30      	popne	{r4, r5, pc}
 8008136:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800813a:	d105      	bne.n	8008148 <__adddf3+0x230>
 800813c:	0040      	lsls	r0, r0, #1
 800813e:	4149      	adcs	r1, r1
 8008140:	bf28      	it	cs
 8008142:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008146:	bd30      	pop	{r4, r5, pc}
 8008148:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800814c:	bf3c      	itt	cc
 800814e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008152:	bd30      	popcc	{r4, r5, pc}
 8008154:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008158:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800815c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008160:	f04f 0000 	mov.w	r0, #0
 8008164:	bd30      	pop	{r4, r5, pc}
 8008166:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800816a:	bf1a      	itte	ne
 800816c:	4619      	movne	r1, r3
 800816e:	4610      	movne	r0, r2
 8008170:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008174:	bf1c      	itt	ne
 8008176:	460b      	movne	r3, r1
 8008178:	4602      	movne	r2, r0
 800817a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800817e:	bf06      	itte	eq
 8008180:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008184:	ea91 0f03 	teqeq	r1, r3
 8008188:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800818c:	bd30      	pop	{r4, r5, pc}
 800818e:	bf00      	nop

08008190 <__aeabi_ui2d>:
 8008190:	f090 0f00 	teq	r0, #0
 8008194:	bf04      	itt	eq
 8008196:	2100      	moveq	r1, #0
 8008198:	4770      	bxeq	lr
 800819a:	b530      	push	{r4, r5, lr}
 800819c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081a4:	f04f 0500 	mov.w	r5, #0
 80081a8:	f04f 0100 	mov.w	r1, #0
 80081ac:	e750      	b.n	8008050 <__adddf3+0x138>
 80081ae:	bf00      	nop

080081b0 <__aeabi_i2d>:
 80081b0:	f090 0f00 	teq	r0, #0
 80081b4:	bf04      	itt	eq
 80081b6:	2100      	moveq	r1, #0
 80081b8:	4770      	bxeq	lr
 80081ba:	b530      	push	{r4, r5, lr}
 80081bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081c4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80081c8:	bf48      	it	mi
 80081ca:	4240      	negmi	r0, r0
 80081cc:	f04f 0100 	mov.w	r1, #0
 80081d0:	e73e      	b.n	8008050 <__adddf3+0x138>
 80081d2:	bf00      	nop

080081d4 <__aeabi_f2d>:
 80081d4:	0042      	lsls	r2, r0, #1
 80081d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80081da:	ea4f 0131 	mov.w	r1, r1, rrx
 80081de:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80081e2:	bf1f      	itttt	ne
 80081e4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80081e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80081ec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80081f0:	4770      	bxne	lr
 80081f2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80081f6:	bf08      	it	eq
 80081f8:	4770      	bxeq	lr
 80081fa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80081fe:	bf04      	itt	eq
 8008200:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008204:	4770      	bxeq	lr
 8008206:	b530      	push	{r4, r5, lr}
 8008208:	f44f 7460 	mov.w	r4, #896	; 0x380
 800820c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008210:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008214:	e71c      	b.n	8008050 <__adddf3+0x138>
 8008216:	bf00      	nop

08008218 <__aeabi_ul2d>:
 8008218:	ea50 0201 	orrs.w	r2, r0, r1
 800821c:	bf08      	it	eq
 800821e:	4770      	bxeq	lr
 8008220:	b530      	push	{r4, r5, lr}
 8008222:	f04f 0500 	mov.w	r5, #0
 8008226:	e00a      	b.n	800823e <__aeabi_l2d+0x16>

08008228 <__aeabi_l2d>:
 8008228:	ea50 0201 	orrs.w	r2, r0, r1
 800822c:	bf08      	it	eq
 800822e:	4770      	bxeq	lr
 8008230:	b530      	push	{r4, r5, lr}
 8008232:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008236:	d502      	bpl.n	800823e <__aeabi_l2d+0x16>
 8008238:	4240      	negs	r0, r0
 800823a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800823e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008242:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008246:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800824a:	f43f aed8 	beq.w	8007ffe <__adddf3+0xe6>
 800824e:	f04f 0203 	mov.w	r2, #3
 8008252:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008256:	bf18      	it	ne
 8008258:	3203      	addne	r2, #3
 800825a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800825e:	bf18      	it	ne
 8008260:	3203      	addne	r2, #3
 8008262:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008266:	f1c2 0320 	rsb	r3, r2, #32
 800826a:	fa00 fc03 	lsl.w	ip, r0, r3
 800826e:	fa20 f002 	lsr.w	r0, r0, r2
 8008272:	fa01 fe03 	lsl.w	lr, r1, r3
 8008276:	ea40 000e 	orr.w	r0, r0, lr
 800827a:	fa21 f102 	lsr.w	r1, r1, r2
 800827e:	4414      	add	r4, r2
 8008280:	e6bd      	b.n	8007ffe <__adddf3+0xe6>
 8008282:	bf00      	nop

08008284 <__aeabi_fmul>:
 8008284:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008288:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800828c:	bf1e      	ittt	ne
 800828e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008292:	ea92 0f0c 	teqne	r2, ip
 8008296:	ea93 0f0c 	teqne	r3, ip
 800829a:	d06f      	beq.n	800837c <__aeabi_fmul+0xf8>
 800829c:	441a      	add	r2, r3
 800829e:	ea80 0c01 	eor.w	ip, r0, r1
 80082a2:	0240      	lsls	r0, r0, #9
 80082a4:	bf18      	it	ne
 80082a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80082aa:	d01e      	beq.n	80082ea <__aeabi_fmul+0x66>
 80082ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80082b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80082b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80082b8:	fba0 3101 	umull	r3, r1, r0, r1
 80082bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80082c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80082c4:	bf3e      	ittt	cc
 80082c6:	0049      	lslcc	r1, r1, #1
 80082c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80082cc:	005b      	lslcc	r3, r3, #1
 80082ce:	ea40 0001 	orr.w	r0, r0, r1
 80082d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80082d6:	2afd      	cmp	r2, #253	; 0xfd
 80082d8:	d81d      	bhi.n	8008316 <__aeabi_fmul+0x92>
 80082da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80082de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80082e2:	bf08      	it	eq
 80082e4:	f020 0001 	biceq.w	r0, r0, #1
 80082e8:	4770      	bx	lr
 80082ea:	f090 0f00 	teq	r0, #0
 80082ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80082f2:	bf08      	it	eq
 80082f4:	0249      	lsleq	r1, r1, #9
 80082f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80082fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80082fe:	3a7f      	subs	r2, #127	; 0x7f
 8008300:	bfc2      	ittt	gt
 8008302:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008306:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800830a:	4770      	bxgt	lr
 800830c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008310:	f04f 0300 	mov.w	r3, #0
 8008314:	3a01      	subs	r2, #1
 8008316:	dc5d      	bgt.n	80083d4 <__aeabi_fmul+0x150>
 8008318:	f112 0f19 	cmn.w	r2, #25
 800831c:	bfdc      	itt	le
 800831e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008322:	4770      	bxle	lr
 8008324:	f1c2 0200 	rsb	r2, r2, #0
 8008328:	0041      	lsls	r1, r0, #1
 800832a:	fa21 f102 	lsr.w	r1, r1, r2
 800832e:	f1c2 0220 	rsb	r2, r2, #32
 8008332:	fa00 fc02 	lsl.w	ip, r0, r2
 8008336:	ea5f 0031 	movs.w	r0, r1, rrx
 800833a:	f140 0000 	adc.w	r0, r0, #0
 800833e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008342:	bf08      	it	eq
 8008344:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008348:	4770      	bx	lr
 800834a:	f092 0f00 	teq	r2, #0
 800834e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008352:	bf02      	ittt	eq
 8008354:	0040      	lsleq	r0, r0, #1
 8008356:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800835a:	3a01      	subeq	r2, #1
 800835c:	d0f9      	beq.n	8008352 <__aeabi_fmul+0xce>
 800835e:	ea40 000c 	orr.w	r0, r0, ip
 8008362:	f093 0f00 	teq	r3, #0
 8008366:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800836a:	bf02      	ittt	eq
 800836c:	0049      	lsleq	r1, r1, #1
 800836e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008372:	3b01      	subeq	r3, #1
 8008374:	d0f9      	beq.n	800836a <__aeabi_fmul+0xe6>
 8008376:	ea41 010c 	orr.w	r1, r1, ip
 800837a:	e78f      	b.n	800829c <__aeabi_fmul+0x18>
 800837c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008380:	ea92 0f0c 	teq	r2, ip
 8008384:	bf18      	it	ne
 8008386:	ea93 0f0c 	teqne	r3, ip
 800838a:	d00a      	beq.n	80083a2 <__aeabi_fmul+0x11e>
 800838c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008390:	bf18      	it	ne
 8008392:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008396:	d1d8      	bne.n	800834a <__aeabi_fmul+0xc6>
 8008398:	ea80 0001 	eor.w	r0, r0, r1
 800839c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083a0:	4770      	bx	lr
 80083a2:	f090 0f00 	teq	r0, #0
 80083a6:	bf17      	itett	ne
 80083a8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80083ac:	4608      	moveq	r0, r1
 80083ae:	f091 0f00 	teqne	r1, #0
 80083b2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80083b6:	d014      	beq.n	80083e2 <__aeabi_fmul+0x15e>
 80083b8:	ea92 0f0c 	teq	r2, ip
 80083bc:	d101      	bne.n	80083c2 <__aeabi_fmul+0x13e>
 80083be:	0242      	lsls	r2, r0, #9
 80083c0:	d10f      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083c2:	ea93 0f0c 	teq	r3, ip
 80083c6:	d103      	bne.n	80083d0 <__aeabi_fmul+0x14c>
 80083c8:	024b      	lsls	r3, r1, #9
 80083ca:	bf18      	it	ne
 80083cc:	4608      	movne	r0, r1
 80083ce:	d108      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083d0:	ea80 0001 	eor.w	r0, r0, r1
 80083d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80083e0:	4770      	bx	lr
 80083e2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083e6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80083ea:	4770      	bx	lr

080083ec <__aeabi_fdiv>:
 80083ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80083f0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80083f4:	bf1e      	ittt	ne
 80083f6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80083fa:	ea92 0f0c 	teqne	r2, ip
 80083fe:	ea93 0f0c 	teqne	r3, ip
 8008402:	d069      	beq.n	80084d8 <__aeabi_fdiv+0xec>
 8008404:	eba2 0203 	sub.w	r2, r2, r3
 8008408:	ea80 0c01 	eor.w	ip, r0, r1
 800840c:	0249      	lsls	r1, r1, #9
 800840e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8008412:	d037      	beq.n	8008484 <__aeabi_fdiv+0x98>
 8008414:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008418:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800841c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008420:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008424:	428b      	cmp	r3, r1
 8008426:	bf38      	it	cc
 8008428:	005b      	lslcc	r3, r3, #1
 800842a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800842e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008432:	428b      	cmp	r3, r1
 8008434:	bf24      	itt	cs
 8008436:	1a5b      	subcs	r3, r3, r1
 8008438:	ea40 000c 	orrcs.w	r0, r0, ip
 800843c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008440:	bf24      	itt	cs
 8008442:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008446:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800844a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800844e:	bf24      	itt	cs
 8008450:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008454:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008458:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800845c:	bf24      	itt	cs
 800845e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008462:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008466:	011b      	lsls	r3, r3, #4
 8008468:	bf18      	it	ne
 800846a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800846e:	d1e0      	bne.n	8008432 <__aeabi_fdiv+0x46>
 8008470:	2afd      	cmp	r2, #253	; 0xfd
 8008472:	f63f af50 	bhi.w	8008316 <__aeabi_fmul+0x92>
 8008476:	428b      	cmp	r3, r1
 8008478:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800847c:	bf08      	it	eq
 800847e:	f020 0001 	biceq.w	r0, r0, #1
 8008482:	4770      	bx	lr
 8008484:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008488:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800848c:	327f      	adds	r2, #127	; 0x7f
 800848e:	bfc2      	ittt	gt
 8008490:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008494:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008498:	4770      	bxgt	lr
 800849a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800849e:	f04f 0300 	mov.w	r3, #0
 80084a2:	3a01      	subs	r2, #1
 80084a4:	e737      	b.n	8008316 <__aeabi_fmul+0x92>
 80084a6:	f092 0f00 	teq	r2, #0
 80084aa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80084ae:	bf02      	ittt	eq
 80084b0:	0040      	lsleq	r0, r0, #1
 80084b2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80084b6:	3a01      	subeq	r2, #1
 80084b8:	d0f9      	beq.n	80084ae <__aeabi_fdiv+0xc2>
 80084ba:	ea40 000c 	orr.w	r0, r0, ip
 80084be:	f093 0f00 	teq	r3, #0
 80084c2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80084c6:	bf02      	ittt	eq
 80084c8:	0049      	lsleq	r1, r1, #1
 80084ca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80084ce:	3b01      	subeq	r3, #1
 80084d0:	d0f9      	beq.n	80084c6 <__aeabi_fdiv+0xda>
 80084d2:	ea41 010c 	orr.w	r1, r1, ip
 80084d6:	e795      	b.n	8008404 <__aeabi_fdiv+0x18>
 80084d8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80084dc:	ea92 0f0c 	teq	r2, ip
 80084e0:	d108      	bne.n	80084f4 <__aeabi_fdiv+0x108>
 80084e2:	0242      	lsls	r2, r0, #9
 80084e4:	f47f af7d 	bne.w	80083e2 <__aeabi_fmul+0x15e>
 80084e8:	ea93 0f0c 	teq	r3, ip
 80084ec:	f47f af70 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 80084f0:	4608      	mov	r0, r1
 80084f2:	e776      	b.n	80083e2 <__aeabi_fmul+0x15e>
 80084f4:	ea93 0f0c 	teq	r3, ip
 80084f8:	d104      	bne.n	8008504 <__aeabi_fdiv+0x118>
 80084fa:	024b      	lsls	r3, r1, #9
 80084fc:	f43f af4c 	beq.w	8008398 <__aeabi_fmul+0x114>
 8008500:	4608      	mov	r0, r1
 8008502:	e76e      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008504:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008508:	bf18      	it	ne
 800850a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800850e:	d1ca      	bne.n	80084a6 <__aeabi_fdiv+0xba>
 8008510:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8008514:	f47f af5c 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 8008518:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800851c:	f47f af3c 	bne.w	8008398 <__aeabi_fmul+0x114>
 8008520:	e75f      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008522:	bf00      	nop

08008524 <__aeabi_f2uiz>:
 8008524:	0042      	lsls	r2, r0, #1
 8008526:	d20e      	bcs.n	8008546 <__aeabi_f2uiz+0x22>
 8008528:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800852c:	d30b      	bcc.n	8008546 <__aeabi_f2uiz+0x22>
 800852e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008532:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8008536:	d409      	bmi.n	800854c <__aeabi_f2uiz+0x28>
 8008538:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800853c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008540:	fa23 f002 	lsr.w	r0, r3, r2
 8008544:	4770      	bx	lr
 8008546:	f04f 0000 	mov.w	r0, #0
 800854a:	4770      	bx	lr
 800854c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008550:	d101      	bne.n	8008556 <__aeabi_f2uiz+0x32>
 8008552:	0242      	lsls	r2, r0, #9
 8008554:	d102      	bne.n	800855c <__aeabi_f2uiz+0x38>
 8008556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800855a:	4770      	bx	lr
 800855c:	f04f 0000 	mov.w	r0, #0
 8008560:	4770      	bx	lr
 8008562:	bf00      	nop

08008564 <Reset_Handler>:
 8008564:	480c      	ldr	r0, [pc, #48]	; (8008598 <Zerobss+0x10>)
 8008566:	4685      	mov	sp, r0
 8008568:	2100      	movs	r1, #0
 800856a:	e003      	b.n	8008574 <DataInit>

0800856c <CopyData>:
 800856c:	4b0b      	ldr	r3, [pc, #44]	; (800859c <Zerobss+0x14>)
 800856e:	585b      	ldr	r3, [r3, r1]
 8008570:	5043      	str	r3, [r0, r1]
 8008572:	3104      	adds	r1, #4

08008574 <DataInit>:
 8008574:	480a      	ldr	r0, [pc, #40]	; (80085a0 <Zerobss+0x18>)
 8008576:	4b0b      	ldr	r3, [pc, #44]	; (80085a4 <Zerobss+0x1c>)
 8008578:	1842      	adds	r2, r0, r1
 800857a:	429a      	cmp	r2, r3
 800857c:	d3f6      	bcc.n	800856c <CopyData>
 800857e:	4a0a      	ldr	r2, [pc, #40]	; (80085a8 <Zerobss+0x20>)
 8008580:	e002      	b.n	8008588 <Zerobss>

08008582 <FillZerobss>:
 8008582:	2300      	movs	r3, #0
 8008584:	f842 3b04 	str.w	r3, [r2], #4

08008588 <Zerobss>:
 8008588:	4b08      	ldr	r3, [pc, #32]	; (80085ac <Zerobss+0x24>)
 800858a:	429a      	cmp	r2, r3
 800858c:	d3f9      	bcc.n	8008582 <FillZerobss>
 800858e:	f00a f833 	bl	80125f8 <SystemInit>
 8008592:	f000 f90f 	bl	80087b4 <main>
 8008596:	4770      	bx	lr
 8008598:	20018000 	andcs	r8, r1, r0
 800859c:	08016fe0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, fp, sp, lr}
 80085a0:	20000000 	andcs	r0, r0, r0
 80085a4:	200000e4 	andcs	r0, r0, r4, ror #1
 80085a8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085ac:	20014b88 	andcs	r4, r1, r8, lsl #23

080085b0 <ADC0_1_IRQHandler>:
 80085b0:	e7fe      	b.n	80085b0 <ADC0_1_IRQHandler>

080085b2 <DisplayHandler::~DisplayHandler()>:
 80085b2:	4770      	bx	lr

080085b4 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085b4:	4770      	bx	lr
	...

080085b8 <PixelDmxStartStop::Start()>:
 80085b8:	2204      	movs	r2, #4
 80085ba:	4b01      	ldr	r3, [pc, #4]	; (80085c0 <PixelDmxStartStop::Start()+0x8>)
 80085bc:	611a      	str	r2, [r3, #16]
 80085be:	4770      	bx	lr
 80085c0:	40011000 	andmi	r1, r1, r0

080085c4 <PixelDmxStartStop::Stop()>:
 80085c4:	2204      	movs	r2, #4
 80085c6:	4b01      	ldr	r3, [pc, #4]	; (80085cc <PixelDmxStartStop::Stop()+0x8>)
 80085c8:	615a      	str	r2, [r3, #20]
 80085ca:	4770      	bx	lr
 80085cc:	40011000 	andmi	r1, r1, r0

080085d0 <DisplayHandler::~DisplayHandler()>:
 80085d0:	b510      	push	{r4, lr}
 80085d2:	4604      	mov	r4, r0
 80085d4:	f009 fdbc 	bl	8012150 <operator delete(void*)>
 80085d8:	4620      	mov	r0, r4
 80085da:	bd10      	pop	{r4, pc}

080085dc <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085dc:	b510      	push	{r4, lr}
 80085de:	4604      	mov	r4, r0
 80085e0:	f009 fdb6 	bl	8012150 <operator delete(void*)>
 80085e4:	4620      	mov	r0, r4
 80085e6:	bd10      	pop	{r4, pc}

080085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80085e8:	b110      	cbz	r0, 80085f0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80085ea:	6803      	ldr	r3, [r0, #0]
 80085ec:	6a1b      	ldr	r3, [r3, #32]
 80085ee:	4718      	bx	r3
 80085f0:	4770      	bx	lr

080085f2 <Display::PutChar(int) [clone .isra.0]>:
 80085f2:	b110      	cbz	r0, 80085fa <Display::PutChar(int) [clone .isra.0]+0x8>
 80085f4:	6803      	ldr	r3, [r0, #0]
 80085f6:	695b      	ldr	r3, [r3, #20]
 80085f8:	4718      	bx	r3
 80085fa:	4770      	bx	lr

080085fc <DisplayHandler::Print(unsigned int)>:
 80085fc:	b538      	push	{r3, r4, r5, lr}
 80085fe:	7903      	ldrb	r3, [r0, #4]
 8008600:	b1f3      	cbz	r3, 8008640 <DisplayHandler::Print(unsigned int)+0x44>
 8008602:	2904      	cmp	r1, #4
 8008604:	bf98      	it	ls
 8008606:	4b0f      	ldrls	r3, [pc, #60]	; (8008644 <DisplayHandler::Print(unsigned int)+0x48>)
 8008608:	4d0f      	ldr	r5, [pc, #60]	; (8008648 <DisplayHandler::Print(unsigned int)+0x4c>)
 800860a:	bf98      	it	ls
 800860c:	5c5c      	ldrbls	r4, [r3, r1]
 800860e:	682b      	ldr	r3, [r5, #0]
 8008610:	bf88      	it	hi
 8008612:	2455      	movhi	r4, #85	; 0x55
 8008614:	6998      	ldr	r0, [r3, #24]
 8008616:	b178      	cbz	r0, 8008638 <DisplayHandler::Print(unsigned int)+0x3c>
 8008618:	7901      	ldrb	r1, [r0, #4]
 800861a:	3901      	subs	r1, #1
 800861c:	b2c9      	uxtb	r1, r1
 800861e:	b168      	cbz	r0, 800863c <DisplayHandler::Print(unsigned int)+0x40>
 8008620:	7942      	ldrb	r2, [r0, #5]
 8008622:	3a01      	subs	r2, #1
 8008624:	b2d2      	uxtb	r2, r2
 8008626:	f7ff ffdf 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800862a:	682b      	ldr	r3, [r5, #0]
 800862c:	4621      	mov	r1, r4
 800862e:	6998      	ldr	r0, [r3, #24]
 8008630:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008634:	f7ff bfdd 	b.w	80085f2 <Display::PutChar(int) [clone .isra.0]>
 8008638:	4601      	mov	r1, r0
 800863a:	e7ee      	b.n	800861a <DisplayHandler::Print(unsigned int)+0x1e>
 800863c:	4602      	mov	r2, r0
 800863e:	e7f0      	b.n	8008622 <DisplayHandler::Print(unsigned int)+0x26>
 8008640:	bd38      	pop	{r3, r4, r5, pc}
 8008642:	bf00      	nop
 8008644:	08014550 	stmdaeq	r1, {r4, r6, r8, sl, lr}
 8008648:	2000ae08 	andcs	sl, r0, r8, lsl #28

0800864c <Display::Printf(unsigned char, char const*, ...)>:
 800864c:	b40c      	push	{r2, r3}
 800864e:	b570      	push	{r4, r5, r6, lr}
 8008650:	6984      	ldr	r4, [r0, #24]
 8008652:	4605      	mov	r5, r0
 8008654:	460e      	mov	r6, r1
 8008656:	b08a      	sub	sp, #40	; 0x28
 8008658:	b174      	cbz	r4, 8008678 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800865a:	ab0f      	add	r3, sp, #60	; 0x3c
 800865c:	2120      	movs	r1, #32
 800865e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008660:	a802      	add	r0, sp, #8
 8008662:	9301      	str	r3, [sp, #4]
 8008664:	f000 fe46 	bl	80092f4 <vsnprintf>
 8008668:	4604      	mov	r4, r0
 800866a:	69a8      	ldr	r0, [r5, #24]
 800866c:	4631      	mov	r1, r6
 800866e:	6803      	ldr	r3, [r0, #0]
 8008670:	aa02      	add	r2, sp, #8
 8008672:	69dd      	ldr	r5, [r3, #28]
 8008674:	b2a3      	uxth	r3, r4
 8008676:	47a8      	blx	r5
 8008678:	4620      	mov	r0, r4
 800867a:	b00a      	add	sp, #40	; 0x28
 800867c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008680:	b002      	add	sp, #8
 8008682:	4770      	bx	lr

08008684 <Display::TextStatus(char const*)>:
 8008684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008688:	4604      	mov	r4, r0
 800868a:	6980      	ldr	r0, [r0, #24]
 800868c:	460d      	mov	r5, r1
 800868e:	b360      	cbz	r0, 80086ea <Display::TextStatus(char const*)+0x66>
 8008690:	7947      	ldrb	r7, [r0, #5]
 8008692:	2100      	movs	r1, #0
 8008694:	1e7e      	subs	r6, r7, #1
 8008696:	b2f6      	uxtb	r6, r6
 8008698:	4632      	mov	r2, r6
 800869a:	f890 9004 	ldrb.w	r9, [r0, #4]
 800869e:	f04f 0800 	mov.w	r8, #0
 80086a2:	f7ff ffa1 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086a6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80086aa:	45c1      	cmp	r9, r8
 80086ac:	69a0      	ldr	r0, [r4, #24]
 80086ae:	d816      	bhi.n	80086de <Display::TextStatus(char const*)+0x5a>
 80086b0:	4632      	mov	r2, r6
 80086b2:	2100      	movs	r1, #0
 80086b4:	f7ff ff98 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086b8:	69a0      	ldr	r0, [r4, #24]
 80086ba:	b1b0      	cbz	r0, 80086ea <Display::TextStatus(char const*)+0x66>
 80086bc:	2300      	movs	r3, #0
 80086be:	7901      	ldrb	r1, [r0, #4]
 80086c0:	5cea      	ldrb	r2, [r5, r3]
 80086c2:	b11a      	cbz	r2, 80086cc <Display::TextStatus(char const*)+0x48>
 80086c4:	1c5a      	adds	r2, r3, #1
 80086c6:	4299      	cmp	r1, r3
 80086c8:	4613      	mov	r3, r2
 80086ca:	dcf9      	bgt.n	80086c0 <Display::TextStatus(char const*)+0x3c>
 80086cc:	6802      	ldr	r2, [r0, #0]
 80086ce:	4639      	mov	r1, r7
 80086d0:	69d4      	ldr	r4, [r2, #28]
 80086d2:	b2db      	uxtb	r3, r3
 80086d4:	462a      	mov	r2, r5
 80086d6:	46a4      	mov	ip, r4
 80086d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086dc:	4760      	bx	ip
 80086de:	2120      	movs	r1, #32
 80086e0:	f7ff ff87 	bl	80085f2 <Display::PutChar(int) [clone .isra.0]>
 80086e4:	f108 0801 	add.w	r8, r8, #1
 80086e8:	e7df      	b.n	80086aa <Display::TextStatus(char const*)+0x26>
 80086ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80086ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80086f0:	4605      	mov	r5, r0
 80086f2:	461e      	mov	r6, r3
 80086f4:	460f      	mov	r7, r1
 80086f6:	4614      	mov	r4, r2
 80086f8:	f7ff ffc4 	bl	8008684 <Display::TextStatus(char const*)>
 80086fc:	7c6b      	ldrb	r3, [r5, #17]
 80086fe:	b19b      	cbz	r3, 8008728 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008700:	43e2      	mvns	r2, r4
 8008702:	2312      	movs	r3, #18
 8008704:	7a28      	ldrb	r0, [r5, #8]
 8008706:	f88d 3004 	strb.w	r3, [sp, #4]
 800870a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800870e:	f88d 3005 	strb.w	r3, [sp, #5]
 8008712:	f88d 2006 	strb.w	r2, [sp, #6]
 8008716:	f00a fca3 	bl	8013060 <gd32_i2c_set_address>
 800871a:	68e8      	ldr	r0, [r5, #12]
 800871c:	f00a fc98 	bl	8013050 <gd32_i2c_set_baudrate>
 8008720:	2103      	movs	r1, #3
 8008722:	a801      	add	r0, sp, #4
 8008724:	f00a fca2 	bl	801306c <gd32_i2c_write>
 8008728:	1c73      	adds	r3, r6, #1
 800872a:	d006      	beq.n	800873a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800872c:	4639      	mov	r1, r7
 800872e:	4630      	mov	r0, r6
 8008730:	b003      	add	sp, #12
 8008732:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008736:	f009 bbaf 	b.w	8011e98 <console_status>
 800873a:	b003      	add	sp, #12
 800873c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008740 <Display::SetSleep(bool)>:
 8008740:	b538      	push	{r3, r4, r5, lr}
 8008742:	4604      	mov	r4, r0
 8008744:	6980      	ldr	r0, [r0, #24]
 8008746:	460d      	mov	r5, r1
 8008748:	b138      	cbz	r0, 800875a <Display::SetSleep(bool)+0x1a>
 800874a:	6803      	ldr	r3, [r0, #0]
 800874c:	7421      	strb	r1, [r4, #16]
 800874e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008750:	4798      	blx	r3
 8008752:	b915      	cbnz	r5, 800875a <Display::SetSleep(bool)+0x1a>
 8008754:	4b01      	ldr	r3, [pc, #4]	; (800875c <Display::SetSleep(bool)+0x1c>)
 8008756:	681b      	ldr	r3, [r3, #0]
 8008758:	6063      	str	r3, [r4, #4]
 800875a:	bd38      	pop	{r3, r4, r5, pc}
 800875c:	2000af0c 	andcs	sl, r0, ip, lsl #30

08008760 <display::timeout::gpio_init()>:
 8008760:	b510      	push	{r4, lr}
 8008762:	f240 6003 	movw	r0, #1539	; 0x603
 8008766:	f00a f90f 	bl	8012988 <rcu_periph_clock_enable>
 800876a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800876e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008772:	2203      	movs	r2, #3
 8008774:	2148      	movs	r1, #72	; 0x48
 8008776:	4801      	ldr	r0, [pc, #4]	; (800877c <display::timeout::gpio_init()+0x1c>)
 8008778:	f00a b86e 	b.w	8012858 <gpio_init>
 800877c:	40010c00 	andmi	r0, r1, r0, lsl #24

08008780 <display::timeout::gpio_renew()>:
 8008780:	4b03      	ldr	r3, [pc, #12]	; (8008790 <display::timeout::gpio_renew()+0x10>)
 8008782:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008786:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800878a:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800878e:	4770      	bx	lr
 8008790:	40010000 	andmi	r0, r1, r0

08008794 <Hardware::RebootHandler()>:
 8008794:	b508      	push	{r3, lr}
 8008796:	4b05      	ldr	r3, [pc, #20]	; (80087ac <Hardware::RebootHandler()+0x18>)
 8008798:	6818      	ldr	r0, [r3, #0]
 800879a:	f005 fd0d 	bl	800e1b8 <WS28xx::Blackout()>
 800879e:	4b04      	ldr	r3, [pc, #16]	; (80087b0 <Hardware::RebootHandler()+0x1c>)
 80087a0:	6818      	ldr	r0, [r3, #0]
 80087a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80087a6:	f002 ba87 	b.w	800acb8 <E131Bridge::Stop()>
 80087aa:	bf00      	nop
 80087ac:	20001f14 	andcs	r1, r0, r4, lsl pc
 80087b0:	20001ecc 	andcs	r1, r0, ip, asr #29

080087b4 <main>:
 80087b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087b8:	2501      	movs	r5, #1
 80087ba:	f6ad 1d3c 	subw	sp, sp, #2364	; 0x93c
 80087be:	a804      	add	r0, sp, #16
 80087c0:	f009 fc1e 	bl	8012000 <Hardware::Hardware()>
 80087c4:	a886      	add	r0, sp, #536	; 0x218
 80087c6:	f007 fa3f 	bl	800fc48 <Network::Network()>
 80087ca:	a811      	add	r0, sp, #68	; 0x44
 80087cc:	f009 fbc2 	bl	8011f54 <LedBlink::LedBlink()>
 80087d0:	a859      	add	r0, sp, #356	; 0x164
 80087d2:	f008 fa27 	bl	8010c24 <DisplayUdf::DisplayUdf()>
 80087d6:	4bb4      	ldr	r3, [pc, #720]	; (8008aa8 <main+0x2f4>)
 80087d8:	4ab4      	ldr	r2, [pc, #720]	; (8008aac <main+0x2f8>)
 80087da:	49b5      	ldr	r1, [pc, #724]	; (8008ab0 <main+0x2fc>)
 80087dc:	a805      	add	r0, sp, #20
 80087de:	f009 fb73 	bl	8011ec8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80087e2:	a806      	add	r0, sp, #24
 80087e4:	f006 f956 	bl	800ea94 <FlashRom::FlashRom()>
 80087e8:	4eb2      	ldr	r6, [pc, #712]	; (8008ab4 <main+0x300>)
 80087ea:	a807      	add	r0, sp, #28
 80087ec:	f005 fe1e 	bl	800e42c <SpiFlashStore::SpiFlashStore()>
 80087f0:	49b1      	ldr	r1, [pc, #708]	; (8008ab8 <main+0x304>)
 80087f2:	a805      	add	r0, sp, #20
 80087f4:	f009 fba0 	bl	8011f38 <FirmwareVersion::Print(char const*)>
 80087f8:	2008      	movs	r0, #8
 80087fa:	6135      	str	r5, [r6, #16]
 80087fc:	f009 fcac 	bl	8012158 <operator new(unsigned int)>
 8008800:	4bae      	ldr	r3, [pc, #696]	; (8008abc <main+0x308>)
 8008802:	2400      	movs	r4, #0
 8008804:	6003      	str	r3, [r0, #0]
 8008806:	4bae      	ldr	r3, [pc, #696]	; (8008ac0 <main+0x30c>)
 8008808:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800880c:	681b      	ldr	r3, [r3, #0]
 800880e:	49ad      	ldr	r1, [pc, #692]	; (8008ac4 <main+0x310>)
 8008810:	3b00      	subs	r3, #0
 8008812:	bf18      	it	ne
 8008814:	2301      	movne	r3, #1
 8008816:	9013      	str	r0, [sp, #76]	; 0x4c
 8008818:	7103      	strb	r3, [r0, #4]
 800881a:	2303      	movs	r3, #3
 800881c:	a859      	add	r0, sp, #356	; 0x164
 800881e:	f7ff ff66 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008822:	a80d      	add	r0, sp, #52	; 0x34
 8008824:	f005 ffe0 	bl	800e7e8 <StoreNetwork::StoreNetwork()>
 8008828:	ab0e      	add	r3, sp, #56	; 0x38
 800882a:	a90d      	add	r1, sp, #52	; 0x34
 800882c:	a886      	add	r0, sp, #536	; 0x218
 800882e:	93b4      	str	r3, [sp, #720]	; 0x2d0
 8008830:	f007 fa64 	bl	800fcfc <Network::Init(NetworkParamsStore*)>
 8008834:	a886      	add	r0, sp, #536	; 0x218
 8008836:	f007 fba7 	bl	800ff88 <Network::Print()>
 800883a:	2303      	movs	r3, #3
 800883c:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008840:	49a1      	ldr	r1, [pc, #644]	; (8008ac8 <main+0x314>)
 8008842:	a859      	add	r0, sp, #356	; 0x164
 8008844:	f7ff ff53 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008848:	a808      	add	r0, sp, #32
 800884a:	f006 fe3f 	bl	800f4cc <MDNS::MDNS()>
 800884e:	a808      	add	r0, sp, #32
 8008850:	f006 fefc 	bl	800f64c <MDNS::Start()>
 8008854:	f642 1305 	movw	r3, #10501	; 0x2905
 8008858:	4621      	mov	r1, r4
 800885a:	4a9c      	ldr	r2, [pc, #624]	; (8008acc <main+0x318>)
 800885c:	e9cd 4400 	strd	r4, r4, [sp]
 8008860:	a808      	add	r0, sp, #32
 8008862:	f007 f85d 	bl	800f920 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008866:	4b9a      	ldr	r3, [pc, #616]	; (8008ad0 <main+0x31c>)
 8008868:	4621      	mov	r1, r4
 800886a:	4a9a      	ldr	r2, [pc, #616]	; (8008ad4 <main+0x320>)
 800886c:	e9cd 5300 	strd	r5, r3, [sp]
 8008870:	a808      	add	r0, sp, #32
 8008872:	2350      	movs	r3, #80	; 0x50
 8008874:	f007 f854 	bl	800f920 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008878:	a808      	add	r0, sp, #32
 800887a:	f007 f997 	bl	800fbac <MDNS::Print()>
 800887e:	a839      	add	r0, sp, #228	; 0xe4
 8008880:	f001 fcf8 	bl	800a274 <HttpDaemon::HttpDaemon()>
 8008884:	a839      	add	r0, sp, #228	; 0xe4
 8008886:	f001 fd09 	bl	800a29c <HttpDaemon::Start()>
 800888a:	2303      	movs	r3, #3
 800888c:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008890:	4991      	ldr	r1, [pc, #580]	; (8008ad8 <main+0x324>)
 8008892:	a859      	add	r0, sp, #356	; 0x164
 8008894:	f7ff ff2b 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008898:	a80a      	add	r0, sp, #40	; 0x28
 800889a:	f006 f813 	bl	800e8c4 <StoreE131::StoreE131()>
 800889e:	a90a      	add	r1, sp, #40	; 0x28
 80088a0:	a81e      	add	r0, sp, #120	; 0x78
 80088a2:	f003 f8f3 	bl	800ba8c <E131Params::E131Params(E131ParamsStore*)>
 80088a6:	a8b9      	add	r0, sp, #740	; 0x2e4
 80088a8:	f002 f962 	bl	800ab70 <E131Bridge::E131Bridge()>
 80088ac:	a81e      	add	r0, sp, #120	; 0x78
 80088ae:	f003 f911 	bl	800bad4 <E131Params::Load()>
 80088b2:	b130      	cbz	r0, 80088c2 <main+0x10e>
 80088b4:	a81e      	add	r0, sp, #120	; 0x78
 80088b6:	4621      	mov	r1, r4
 80088b8:	f003 fbea 	bl	800c090 <E131Params::Set(unsigned int)>
 80088bc:	a81e      	add	r0, sp, #120	; 0x78
 80088be:	f003 fc3d 	bl	800c13c <E131Params::Dump()>
 80088c2:	22aa      	movs	r2, #170	; 0xaa
 80088c4:	2303      	movs	r3, #3
 80088c6:	2106      	movs	r1, #6
 80088c8:	e9cd 324d 	strd	r3, r2, [sp, #308]	; 0x134
 80088cc:	2300      	movs	r3, #0
 80088ce:	e9cd 134f 	strd	r1, r3, [sp, #316]	; 0x13c
 80088d2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80088d6:	9351      	str	r3, [sp, #324]	; 0x144
 80088d8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80088dc:	f8ad 3148 	strh.w	r3, [sp, #328]	; 0x148
 80088e0:	4b7e      	ldr	r3, [pc, #504]	; (8008adc <main+0x328>)
 80088e2:	a80f      	add	r0, sp, #60	; 0x3c
 80088e4:	9353      	str	r3, [sp, #332]	; 0x14c
 80088e6:	2301      	movs	r3, #1
 80088e8:	9256      	str	r2, [sp, #344]	; 0x158
 80088ea:	e9cd 3354 	strd	r3, r3, [sp, #336]	; 0x150
 80088ee:	f8ad 3160 	strh.w	r3, [sp, #352]	; 0x160
 80088f2:	f006 f8c3 	bl	800ea7c <StorePixelDmx::StorePixelDmx()>
 80088f6:	a90f      	add	r1, sp, #60	; 0x3c
 80088f8:	a817      	add	r0, sp, #92	; 0x5c
 80088fa:	f003 fecb 	bl	800c694 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 80088fe:	a817      	add	r0, sp, #92	; 0x5c
 8008900:	f003 fede 	bl	800c6c0 <PixelDmxParams::Load()>
 8008904:	b130      	cbz	r0, 8008914 <main+0x160>
 8008906:	a817      	add	r0, sp, #92	; 0x5c
 8008908:	f004 fa10 	bl	800cd2c <PixelDmxParams::Dump()>
 800890c:	a94d      	add	r1, sp, #308	; 0x134
 800890e:	a817      	add	r0, sp, #92	; 0x5c
 8008910:	f004 f9cf 	bl	800ccb2 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8008914:	a94d      	add	r1, sp, #308	; 0x134
 8008916:	a86f      	add	r0, sp, #444	; 0x1bc
 8008918:	f003 fdc8 	bl	800c4ac <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 800891c:	2004      	movs	r0, #4
 800891e:	f009 fc1b 	bl	8012158 <operator new(unsigned int)>
 8008922:	4b6f      	ldr	r3, [pc, #444]	; (8008ae0 <main+0x32c>)
 8008924:	4604      	mov	r4, r0
 8008926:	6003      	str	r3, [r0, #0]
 8008928:	2203      	movs	r2, #3
 800892a:	2304      	movs	r3, #4
 800892c:	2110      	movs	r1, #16
 800892e:	4861      	ldr	r0, [pc, #388]	; (8008ab4 <main+0x300>)
 8008930:	f009 ff92 	bl	8012858 <gpio_init>
 8008934:	2304      	movs	r3, #4
 8008936:	6173      	str	r3, [r6, #20]
 8008938:	9484      	str	r4, [sp, #528]	; 0x210
 800893a:	2400      	movs	r4, #0
 800893c:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800893e:	9f7a      	ldr	r7, [sp, #488]	; 0x1e8
 8008940:	f8bd 8076 	ldrh.w	r8, [sp, #118]	; 0x76
 8008944:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
 8008948:	42bc      	cmp	r4, r7
 800894a:	f040 8115 	bne.w	8008b78 <main+0x3c4>
 800894e:	f89d 5070 	ldrb.w	r5, [sp, #112]	; 0x70
 8008952:	2101      	movs	r1, #1
 8008954:	a809      	add	r0, sp, #36	; 0x24
 8008956:	f004 fc0f 	bl	800d178 <PixelPatterns::PixelPatterns(unsigned int)>
 800895a:	4b62      	ldr	r3, [pc, #392]	; (8008ae4 <main+0x330>)
 800895c:	2d05      	cmp	r5, #5
 800895e:	601d      	str	r5, [r3, #0]
 8008960:	f340 816e 	ble.w	8008c40 <main+0x48c>
 8008964:	4b5f      	ldr	r3, [pc, #380]	; (8008ae4 <main+0x330>)
 8008966:	681b      	ldr	r3, [r3, #0]
 8008968:	2b00      	cmp	r3, #0
 800896a:	f040 8161 	bne.w	8008c30 <main+0x47c>
 800896e:	ab6f      	add	r3, sp, #444	; 0x1bc
 8008970:	a8b9      	add	r0, sp, #740	; 0x2e4
 8008972:	93ba      	str	r3, [sp, #744]	; 0x2e8
 8008974:	f002 ffd4 	bl	800b920 <E131Bridge::Print()>
 8008978:	a870      	add	r0, sp, #448	; 0x1c0
 800897a:	f003 fc69 	bl	800c250 <PixelDmxConfiguration::Print()>
 800897e:	495a      	ldr	r1, [pc, #360]	; (8008ae8 <main+0x334>)
 8008980:	a859      	add	r0, sp, #356	; 0x164
 8008982:	f008 f965 	bl	8010c50 <DisplayUdf::SetTitle(char const*, ...)>
 8008986:	2202      	movs	r2, #2
 8008988:	a859      	add	r0, sp, #356	; 0x164
 800898a:	4611      	mov	r1, r2
 800898c:	f008 f973 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008990:	2207      	movs	r2, #7
 8008992:	2103      	movs	r1, #3
 8008994:	a859      	add	r0, sp, #356	; 0x164
 8008996:	f008 f96e 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800899a:	2203      	movs	r2, #3
 800899c:	2104      	movs	r1, #4
 800899e:	a859      	add	r0, sp, #356	; 0x164
 80089a0:	f008 f969 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089a4:	2208      	movs	r2, #8
 80089a6:	2105      	movs	r1, #5
 80089a8:	a859      	add	r0, sp, #356	; 0x164
 80089aa:	f008 f964 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089ae:	2201      	movs	r2, #1
 80089b0:	2106      	movs	r1, #6
 80089b2:	a859      	add	r0, sp, #356	; 0x164
 80089b4:	f008 f95f 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089b8:	984d      	ldr	r0, [sp, #308]	; 0x134
 80089ba:	f004 fabf 	bl	800cf3c <PixelType::GetType(pixel::Type)>
 80089be:	4604      	mov	r4, r0
 80089c0:	984f      	ldr	r0, [sp, #316]	; 0x13c
 80089c2:	9f4e      	ldr	r7, [sp, #312]	; 0x138
 80089c4:	f8dd 8154 	ldr.w	r8, [sp, #340]	; 0x154
 80089c8:	f004 fb10 	bl	800cfec <PixelType::GetMap(pixel::Map)>
 80089cc:	4623      	mov	r3, r4
 80089ce:	2107      	movs	r1, #7
 80089d0:	4a46      	ldr	r2, [pc, #280]	; (8008aec <main+0x338>)
 80089d2:	e9cd 8001 	strd	r8, r0, [sp, #4]
 80089d6:	9700      	str	r7, [sp, #0]
 80089d8:	a859      	add	r0, sp, #356	; 0x164
 80089da:	f7ff fe37 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80089de:	a80b      	add	r0, sp, #44	; 0x2c
 80089e0:	f005 fe54 	bl	800e68c <StoreDisplayUdf::StoreDisplayUdf()>
 80089e4:	a90b      	add	r1, sp, #44	; 0x2c
 80089e6:	a843      	add	r0, sp, #268	; 0x10c
 80089e8:	f008 fac6 	bl	8010f78 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80089ec:	a843      	add	r0, sp, #268	; 0x10c
 80089ee:	f008 fad0 	bl	8010f92 <DisplayUdfParams::Load()>
 80089f2:	b130      	cbz	r0, 8008a02 <main+0x24e>
 80089f4:	a843      	add	r0, sp, #268	; 0x10c
 80089f6:	f008 fc37 	bl	8011268 <DisplayUdfParams::Dump()>
 80089fa:	a959      	add	r1, sp, #356	; 0x164
 80089fc:	a843      	add	r0, sp, #268	; 0x10c
 80089fe:	f008 fc00 	bl	8011202 <DisplayUdfParams::Set(DisplayUdf*)>
 8008a02:	a9b9      	add	r1, sp, #740	; 0x2e4
 8008a04:	a859      	add	r0, sp, #356	; 0x164
 8008a06:	f008 fc31 	bl	801126c <DisplayUdf::Show(E131Bridge*)>
 8008a0a:	b17d      	cbz	r5, 8008a2c <main+0x278>
 8008a0c:	985f      	ldr	r0, [sp, #380]	; 0x17c
 8008a0e:	b118      	cbz	r0, 8008a18 <main+0x264>
 8008a10:	6803      	ldr	r3, [r0, #0]
 8008a12:	2106      	movs	r1, #6
 8008a14:	691b      	ldr	r3, [r3, #16]
 8008a16:	4798      	blx	r3
 8008a18:	4628      	mov	r0, r5
 8008a1a:	f004 fbcd 	bl	800d1b8 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008a1e:	2106      	movs	r1, #6
 8008a20:	4603      	mov	r3, r0
 8008a22:	4a33      	ldr	r2, [pc, #204]	; (8008af0 <main+0x33c>)
 8008a24:	9500      	str	r5, [sp, #0]
 8008a26:	a859      	add	r0, sp, #356	; 0x164
 8008a28:	f7ff fe10 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8008a2c:	2203      	movs	r2, #3
 8008a2e:	2101      	movs	r1, #1
 8008a30:	f89d 37ef 	ldrb.w	r3, [sp, #2031]	; 0x7ef
 8008a34:	a827      	add	r0, sp, #156	; 0x9c
 8008a36:	f000 ff37 	bl	80098a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008a3a:	a80c      	add	r0, sp, #48	; 0x30
 8008a3c:	f005 ff0c 	bl	800e858 <StoreRemoteConfig::StoreRemoteConfig()>
 8008a40:	a90c      	add	r1, sp, #48	; 0x30
 8008a42:	a830      	add	r0, sp, #192	; 0xc0
 8008a44:	f001 fa00 	bl	8009e48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008a48:	a830      	add	r0, sp, #192	; 0xc0
 8008a4a:	f001 fa07 	bl	8009e5c <RemoteConfigParams::Load()>
 8008a4e:	b130      	cbz	r0, 8008a5e <main+0x2aa>
 8008a50:	a830      	add	r0, sp, #192	; 0xc0
 8008a52:	f001 fb4a 	bl	800a0ea <RemoteConfigParams::Dump()>
 8008a56:	a927      	add	r1, sp, #156	; 0x9c
 8008a58:	a830      	add	r0, sp, #192	; 0xc0
 8008a5a:	f001 fb26 	bl	800a0aa <RemoteConfigParams::Set(RemoteConfig*)>
 8008a5e:	a807      	add	r0, sp, #28
 8008a60:	f005 fd8e 	bl	800e580 <SpiFlashStore::Flash()>
 8008a64:	2800      	cmp	r0, #0
 8008a66:	d1fa      	bne.n	8008a5e <main+0x2aa>
 8008a68:	2303      	movs	r3, #3
 8008a6a:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008a6e:	4921      	ldr	r1, [pc, #132]	; (8008af4 <main+0x340>)
 8008a70:	a859      	add	r0, sp, #356	; 0x164
 8008a72:	f7ff fe3c 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a76:	a8b9      	add	r0, sp, #740	; 0x2e4
 8008a78:	f002 f8e2 	bl	800ac40 <E131Bridge::Start()>
 8008a7c:	2302      	movs	r3, #2
 8008a7e:	f248 0280 	movw	r2, #32896	; 0x8080
 8008a82:	491d      	ldr	r1, [pc, #116]	; (8008af8 <main+0x344>)
 8008a84:	a859      	add	r0, sp, #356	; 0x164
 8008a86:	f7ff fe32 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a8a:	2102      	movs	r1, #2
 8008a8c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008a90:	f009 feb8 	bl	8012804 <fwdgt_config>
 8008a94:	2801      	cmp	r0, #1
 8008a96:	bf0c      	ite	eq
 8008a98:	2301      	moveq	r3, #1
 8008a9a:	2300      	movne	r3, #0
 8008a9c:	f88d 3010 	strb.w	r3, [sp, #16]
 8008aa0:	d12c      	bne.n	8008afc <main+0x348>
 8008aa2:	f009 fe9f 	bl	80127e4 <fwdgt_enable>
 8008aa6:	e029      	b.n	8008afc <main+0x348>
 8008aa8:	0801448c 	stmdaeq	r1, {r2, r3, r7, sl, lr}
 8008aac:	08014495 	stmdaeq	r1, {r0, r2, r4, r7, sl, lr}
 8008ab0:	08014555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, lr}
 8008ab4:	40011000 	andmi	r1, r1, r0
 8008ab8:	080144a1 	stmdaeq	r1, {r0, r5, r7, sl, lr}
 8008abc:	0801452c 	stmdaeq	r1, {r2, r3, r5, r8, sl, lr}
 8008ac0:	2000ae08 	andcs	sl, r0, r8, lsl #28
 8008ac4:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 8008ac8:	080166a0 	stmdaeq	r1, {r5, r7, r9, sl, sp, lr}
 8008acc:	080144d8 	stmdaeq	r1, {r3, r4, r6, r7, sl, lr}
 8008ad0:	080144e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, lr}
 8008ad4:	080144e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, lr}
 8008ad8:	080157cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, lr}
 8008adc:	08014559 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, lr}
 8008ae0:	08014540 	stmdaeq	r1, {r6, r8, sl, lr}
 8008ae4:	20001f0c 	andcs	r1, r0, ip, lsl #30
 8008ae8:	080144fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, lr}
 8008aec:	0801450e 	stmdaeq	r1, {r1, r2, r3, r8, sl, lr}
 8008af0:	0801451b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, lr}
 8008af4:	080157b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, ip, lr}
 8008af8:	080157e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, sl, ip, lr}
 8008afc:	4d59      	ldr	r5, [pc, #356]	; (8008c64 <main+0x4b0>)
 8008afe:	4c5a      	ldr	r4, [pc, #360]	; (8008c68 <main+0x4b4>)
 8008b00:	f009 fe78 	bl	80127f4 <fwdgt_counter_reload>
 8008b04:	f7fe fd0c 	bl	8007520 <net_handle>
 8008b08:	a8b9      	add	r0, sp, #740	; 0x2e4
 8008b0a:	f002 fcb7 	bl	800b47c <E131Bridge::Run()>
 8008b0e:	a827      	add	r0, sp, #156	; 0x9c
 8008b10:	f001 f85e 	bl	8009bd0 <RemoteConfig::Run()>
 8008b14:	a807      	add	r0, sp, #28
 8008b16:	f005 fd33 	bl	800e580 <SpiFlashStore::Flash()>
 8008b1a:	682b      	ldr	r3, [r5, #0]
 8008b1c:	b113      	cbz	r3, 8008b24 <main+0x370>
 8008b1e:	a809      	add	r0, sp, #36	; 0x24
 8008b20:	f004 fd64 	bl	800d5ec <PixelPatterns::Run()>
 8008b24:	a808      	add	r0, sp, #32
 8008b26:	f007 f81d 	bl	800fb64 <MDNS::Run()>
 8008b2a:	a839      	add	r0, sp, #228	; 0xe4
 8008b2c:	f001 fe22 	bl	800a774 <HttpDaemon::Run()>
 8008b30:	9a5e      	ldr	r2, [sp, #376]	; 0x178
 8008b32:	b162      	cbz	r2, 8008b4e <main+0x39a>
 8008b34:	f89d 3174 	ldrb.w	r3, [sp, #372]	; 0x174
 8008b38:	2b00      	cmp	r3, #0
 8008b3a:	d17b      	bne.n	8008c34 <main+0x480>
 8008b3c:	6823      	ldr	r3, [r4, #0]
 8008b3e:	995a      	ldr	r1, [sp, #360]	; 0x168
 8008b40:	1a5b      	subs	r3, r3, r1
 8008b42:	429a      	cmp	r2, r3
 8008b44:	d203      	bcs.n	8008b4e <main+0x39a>
 8008b46:	2101      	movs	r1, #1
 8008b48:	a859      	add	r0, sp, #356	; 0x164
 8008b4a:	f7ff fdf9 	bl	8008740 <Display::SetSleep(bool)>
 8008b4e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008b50:	2a00      	cmp	r2, #0
 8008b52:	d0d5      	beq.n	8008b00 <main+0x34c>
 8008b54:	6823      	ldr	r3, [r4, #0]
 8008b56:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008b58:	1a5b      	subs	r3, r3, r1
 8008b5a:	429a      	cmp	r2, r3
 8008b5c:	d8d0      	bhi.n	8008b00 <main+0x34c>
 8008b5e:	6823      	ldr	r3, [r4, #0]
 8008b60:	9316      	str	r3, [sp, #88]	; 0x58
 8008b62:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008b64:	2b01      	cmp	r3, #1
 8008b66:	f083 0201 	eor.w	r2, r3, #1
 8008b6a:	bf18      	it	ne
 8008b6c:	2301      	movne	r3, #1
 8008b6e:	9215      	str	r2, [sp, #84]	; 0x54
 8008b70:	bf14      	ite	ne
 8008b72:	6133      	strne	r3, [r6, #16]
 8008b74:	6173      	streq	r3, [r6, #20]
 8008b76:	e7c3      	b.n	8008b00 <main+0x34c>
 8008b78:	b13d      	cbz	r5, 8008b8a <main+0x3d6>
 8008b7a:	eb08 0304 	add.w	r3, r8, r4
 8008b7e:	2201      	movs	r2, #1
 8008b80:	4621      	mov	r1, r4
 8008b82:	b29b      	uxth	r3, r3
 8008b84:	a8b9      	add	r0, sp, #740	; 0x2e4
 8008b86:	f002 f917 	bl	800adb8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008b8a:	3401      	adds	r4, #1
 8008b8c:	e6dc      	b.n	8008948 <main+0x194>
 8008b8e:	2300      	movs	r3, #0
 8008b90:	2264      	movs	r2, #100	; 0x64
 8008b92:	4619      	mov	r1, r3
 8008b94:	a809      	add	r0, sp, #36	; 0x24
 8008b96:	f004 fb1b 	bl	800d1d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008b9a:	e6e3      	b.n	8008964 <main+0x1b0>
 8008b9c:	2200      	movs	r2, #0
 8008b9e:	2364      	movs	r3, #100	; 0x64
 8008ba0:	4611      	mov	r1, r2
 8008ba2:	e9cd 3200 	strd	r3, r2, [sp]
 8008ba6:	a809      	add	r0, sp, #36	; 0x24
 8008ba8:	4b30      	ldr	r3, [pc, #192]	; (8008c6c <main+0x4b8>)
 8008baa:	f004 fb25 	bl	800d1f8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bae:	e6d9      	b.n	8008964 <main+0x1b0>
 8008bb0:	2100      	movs	r1, #0
 8008bb2:	2364      	movs	r3, #100	; 0x64
 8008bb4:	4a2d      	ldr	r2, [pc, #180]	; (8008c6c <main+0x4b8>)
 8008bb6:	9100      	str	r1, [sp, #0]
 8008bb8:	a809      	add	r0, sp, #36	; 0x24
 8008bba:	f004 fb39 	bl	800d230 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bbe:	e6d1      	b.n	8008964 <main+0x1b0>
 8008bc0:	2364      	movs	r3, #100	; 0x64
 8008bc2:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008bc6:	2100      	movs	r1, #0
 8008bc8:	a809      	add	r0, sp, #36	; 0x24
 8008bca:	f004 fb4b 	bl	800d264 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008bce:	e6c9      	b.n	8008964 <main+0x1b0>
 8008bd0:	2200      	movs	r2, #0
 8008bd2:	2364      	movs	r3, #100	; 0x64
 8008bd4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008bd8:	230a      	movs	r3, #10
 8008bda:	4611      	mov	r1, r2
 8008bdc:	9300      	str	r3, [sp, #0]
 8008bde:	a809      	add	r0, sp, #36	; 0x24
 8008be0:	4b22      	ldr	r3, [pc, #136]	; (8008c6c <main+0x4b8>)
 8008be2:	f004 fb71 	bl	800d2c8 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008be6:	e6bd      	b.n	8008964 <main+0x1b0>
 8008be8:	2400      	movs	r4, #0
 8008bea:	4627      	mov	r7, r4
 8008bec:	4b20      	ldr	r3, [pc, #128]	; (8008c70 <main+0x4bc>)
 8008bee:	f8df 9084 	ldr.w	r9, [pc, #132]	; 8008c74 <main+0x4c0>
 8008bf2:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8008c78 <main+0x4c4>
 8008bf6:	61dc      	str	r4, [r3, #28]
 8008bf8:	f8d8 3000 	ldr.w	r3, [r8]
 8008bfc:	f8d9 0000 	ldr.w	r0, [r9]
 8008c00:	429c      	cmp	r4, r3
 8008c02:	d302      	bcc.n	8008c0a <main+0x456>
 8008c04:	f005 fabc 	bl	800e180 <WS28xx::Update()>
 8008c08:	e6ac      	b.n	8008964 <main+0x1b0>
 8008c0a:	6803      	ldr	r3, [r0, #0]
 8008c0c:	2b07      	cmp	r3, #7
 8008c0e:	d007      	beq.n	8008c20 <main+0x46c>
 8008c10:	2300      	movs	r3, #0
 8008c12:	4621      	mov	r1, r4
 8008c14:	461a      	mov	r2, r3
 8008c16:	9700      	str	r7, [sp, #0]
 8008c18:	f004 fd10 	bl	800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008c1c:	3401      	adds	r4, #1
 8008c1e:	e7eb      	b.n	8008bf8 <main+0x444>
 8008c20:	2300      	movs	r3, #0
 8008c22:	4621      	mov	r1, r4
 8008c24:	461a      	mov	r2, r3
 8008c26:	e9cd 7700 	strd	r7, r7, [sp]
 8008c2a:	f005 f939 	bl	800dea0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008c2e:	e7f5      	b.n	8008c1c <main+0x468>
 8008c30:	2300      	movs	r3, #0
 8008c32:	e69d      	b.n	8008970 <main+0x1bc>
 8008c34:	f7ff fda4 	bl	8008780 <display::timeout::gpio_renew()>
 8008c38:	2800      	cmp	r0, #0
 8008c3a:	d088      	beq.n	8008b4e <main+0x39a>
 8008c3c:	2100      	movs	r1, #0
 8008c3e:	e783      	b.n	8008b48 <main+0x394>
 8008c40:	2d05      	cmp	r5, #5
 8008c42:	f63f ae8f 	bhi.w	8008964 <main+0x1b0>
 8008c46:	a301      	add	r3, pc, #4	; (adr r3, 8008c4c <main+0x498>)
 8008c48:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
 8008c4c:	08008be9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, fp, pc}
 8008c50:	08008b8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, r9, fp, pc}
 8008c54:	08008b9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, fp, pc}
 8008c58:	08008bb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, pc}
 8008c5c:	08008bc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, fp, pc}
 8008c60:	08008bd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, fp, pc}
 8008c64:	20001f0c 	andcs	r1, r0, ip, lsl #30
 8008c68:	2000af0c 	andcs	sl, r0, ip, lsl #30
 8008c6c:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008c70:	20001edc 	ldrdcs	r1, [r0], -ip
 8008c74:	20001f08 	andcs	r1, r0, r8, lsl #30
 8008c78:	20001f04 	andcs	r1, r0, r4, lsl #30

08008c7c <_itostr>:
 8008c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c7e:	0fc7      	lsrs	r7, r0, #31
 8008c80:	b091      	sub	sp, #68	; 0x44
 8008c82:	bf18      	it	ne
 8008c84:	4240      	negne	r0, r0
 8008c86:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008c8a:	b9c8      	cbnz	r0, 8008cc0 <_itostr+0x44>
 8008c8c:	2330      	movs	r3, #48	; 0x30
 8008c8e:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008c92:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008c96:	b132      	cbz	r2, 8008ca6 <_itostr+0x2a>
 8008c98:	4668      	mov	r0, sp
 8008c9a:	2530      	movs	r5, #48	; 0x30
 8008c9c:	1ae6      	subs	r6, r4, r3
 8008c9e:	4296      	cmp	r6, r2
 8008ca0:	da01      	bge.n	8008ca6 <_itostr+0x2a>
 8008ca2:	4283      	cmp	r3, r0
 8008ca4:	d81c      	bhi.n	8008ce0 <_itostr+0x64>
 8008ca6:	b117      	cbz	r7, 8008cae <_itostr+0x32>
 8008ca8:	222d      	movs	r2, #45	; 0x2d
 8008caa:	f803 2901 	strb.w	r2, [r3], #-1
 8008cae:	3301      	adds	r3, #1
 8008cb0:	1ae0      	subs	r0, r4, r3
 8008cb2:	3901      	subs	r1, #1
 8008cb4:	aa10      	add	r2, sp, #64	; 0x40
 8008cb6:	4293      	cmp	r3, r2
 8008cb8:	d315      	bcc.n	8008ce6 <_itostr+0x6a>
 8008cba:	3001      	adds	r0, #1
 8008cbc:	b011      	add	sp, #68	; 0x44
 8008cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008cc0:	4623      	mov	r3, r4
 8008cc2:	250a      	movs	r5, #10
 8008cc4:	46ec      	mov	ip, sp
 8008cc6:	fb90 f6f5 	sdiv	r6, r0, r5
 8008cca:	fb05 0016 	mls	r0, r5, r6, r0
 8008cce:	3030      	adds	r0, #48	; 0x30
 8008cd0:	f803 0901 	strb.w	r0, [r3], #-1
 8008cd4:	4630      	mov	r0, r6
 8008cd6:	2e00      	cmp	r6, #0
 8008cd8:	d0dd      	beq.n	8008c96 <_itostr+0x1a>
 8008cda:	4563      	cmp	r3, ip
 8008cdc:	d1f3      	bne.n	8008cc6 <_itostr+0x4a>
 8008cde:	e7da      	b.n	8008c96 <_itostr+0x1a>
 8008ce0:	f803 5901 	strb.w	r5, [r3], #-1
 8008ce4:	e7da      	b.n	8008c9c <_itostr+0x20>
 8008ce6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008cea:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008cee:	e7e1      	b.n	8008cb4 <_itostr+0x38>

08008cf0 <_xputch>:
 8008cf0:	4603      	mov	r3, r0
 8008cf2:	b410      	push	{r4}
 8008cf4:	4c08      	ldr	r4, [pc, #32]	; (8008d18 <_xputch+0x28>)
 8008cf6:	68da      	ldr	r2, [r3, #12]
 8008cf8:	4608      	mov	r0, r1
 8008cfa:	6821      	ldr	r1, [r4, #0]
 8008cfc:	3201      	adds	r2, #1
 8008cfe:	60da      	str	r2, [r3, #12]
 8008d00:	b139      	cbz	r1, 8008d12 <_xputch+0x22>
 8008d02:	691b      	ldr	r3, [r3, #16]
 8008d04:	429a      	cmp	r2, r3
 8008d06:	da02      	bge.n	8008d0e <_xputch+0x1e>
 8008d08:	1c4b      	adds	r3, r1, #1
 8008d0a:	6023      	str	r3, [r4, #0]
 8008d0c:	7008      	strb	r0, [r1, #0]
 8008d0e:	bc10      	pop	{r4}
 8008d10:	4770      	bx	lr
 8008d12:	bc10      	pop	{r4}
 8008d14:	f009 b888 	b.w	8011e28 <console_putc>
 8008d18:	200000e8 	andcs	r0, r0, r8, ror #1

08008d1c <_format_int>:
 8008d1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008d20:	4698      	mov	r8, r3
 8008d22:	b091      	sub	sp, #68	; 0x44
 8008d24:	ea52 0308 	orrs.w	r3, r2, r8
 8008d28:	4606      	mov	r6, r0
 8008d2a:	4617      	mov	r7, r2
 8008d2c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008d30:	d133      	bne.n	8008d9a <_format_int+0x7e>
 8008d32:	2330      	movs	r3, #48	; 0x30
 8008d34:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008d38:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008d3c:	6833      	ldr	r3, [r6, #0]
 8008d3e:	07d8      	lsls	r0, r3, #31
 8008d40:	d507      	bpl.n	8008d52 <_format_int+0x36>
 8008d42:	466a      	mov	r2, sp
 8008d44:	2030      	movs	r0, #48	; 0x30
 8008d46:	6871      	ldr	r1, [r6, #4]
 8008d48:	1b2f      	subs	r7, r5, r4
 8008d4a:	428f      	cmp	r7, r1
 8008d4c:	da01      	bge.n	8008d52 <_format_int+0x36>
 8008d4e:	4294      	cmp	r4, r2
 8008d50:	d839      	bhi.n	8008dc6 <_format_int+0xaa>
 8008d52:	0699      	lsls	r1, r3, #26
 8008d54:	d507      	bpl.n	8008d66 <_format_int+0x4a>
 8008d56:	466a      	mov	r2, sp
 8008d58:	2030      	movs	r0, #48	; 0x30
 8008d5a:	68b1      	ldr	r1, [r6, #8]
 8008d5c:	1b2f      	subs	r7, r5, r4
 8008d5e:	428f      	cmp	r7, r1
 8008d60:	da01      	bge.n	8008d66 <_format_int+0x4a>
 8008d62:	4294      	cmp	r4, r2
 8008d64:	d832      	bhi.n	8008dcc <_format_int+0xb0>
 8008d66:	071a      	lsls	r2, r3, #28
 8008d68:	bf44      	itt	mi
 8008d6a:	222d      	movmi	r2, #45	; 0x2d
 8008d6c:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008d70:	065b      	lsls	r3, r3, #25
 8008d72:	d407      	bmi.n	8008d84 <_format_int+0x68>
 8008d74:	466b      	mov	r3, sp
 8008d76:	2120      	movs	r1, #32
 8008d78:	68b2      	ldr	r2, [r6, #8]
 8008d7a:	1b28      	subs	r0, r5, r4
 8008d7c:	4290      	cmp	r0, r2
 8008d7e:	da01      	bge.n	8008d84 <_format_int+0x68>
 8008d80:	429c      	cmp	r4, r3
 8008d82:	d826      	bhi.n	8008dd2 <_format_int+0xb6>
 8008d84:	1b2d      	subs	r5, r5, r4
 8008d86:	3401      	adds	r4, #1
 8008d88:	ab10      	add	r3, sp, #64	; 0x40
 8008d8a:	429c      	cmp	r4, r3
 8008d8c:	d324      	bcc.n	8008dd8 <_format_int+0xbc>
 8008d8e:	68b3      	ldr	r3, [r6, #8]
 8008d90:	42ab      	cmp	r3, r5
 8008d92:	dc27      	bgt.n	8008de4 <_format_int+0xc8>
 8008d94:	b011      	add	sp, #68	; 0x44
 8008d96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008d9a:	462c      	mov	r4, r5
 8008d9c:	46e9      	mov	r9, sp
 8008d9e:	4638      	mov	r0, r7
 8008da0:	4641      	mov	r1, r8
 8008da2:	220a      	movs	r2, #10
 8008da4:	2300      	movs	r3, #0
 8008da6:	f7ff f897 	bl	8007ed8 <__aeabi_uldivmod>
 8008daa:	3230      	adds	r2, #48	; 0x30
 8008dac:	f804 2901 	strb.w	r2, [r4], #-1
 8008db0:	463a      	mov	r2, r7
 8008db2:	4643      	mov	r3, r8
 8008db4:	2a0a      	cmp	r2, #10
 8008db6:	f173 0300 	sbcs.w	r3, r3, #0
 8008dba:	4607      	mov	r7, r0
 8008dbc:	4688      	mov	r8, r1
 8008dbe:	d3bd      	bcc.n	8008d3c <_format_int+0x20>
 8008dc0:	454c      	cmp	r4, r9
 8008dc2:	d1ec      	bne.n	8008d9e <_format_int+0x82>
 8008dc4:	e7ba      	b.n	8008d3c <_format_int+0x20>
 8008dc6:	f804 0901 	strb.w	r0, [r4], #-1
 8008dca:	e7bd      	b.n	8008d48 <_format_int+0x2c>
 8008dcc:	f804 0901 	strb.w	r0, [r4], #-1
 8008dd0:	e7c4      	b.n	8008d5c <_format_int+0x40>
 8008dd2:	f804 1901 	strb.w	r1, [r4], #-1
 8008dd6:	e7d0      	b.n	8008d7a <_format_int+0x5e>
 8008dd8:	4630      	mov	r0, r6
 8008dda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008dde:	f7ff ff87 	bl	8008cf0 <_xputch>
 8008de2:	e7d1      	b.n	8008d88 <_format_int+0x6c>
 8008de4:	2120      	movs	r1, #32
 8008de6:	4630      	mov	r0, r6
 8008de8:	f7ff ff82 	bl	8008cf0 <_xputch>
 8008dec:	3501      	adds	r5, #1
 8008dee:	e7ce      	b.n	8008d8e <_format_int+0x72>

08008df0 <_format_hex>:
 8008df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008df2:	b091      	sub	sp, #68	; 0x44
 8008df4:	4606      	mov	r6, r0
 8008df6:	6804      	ldr	r4, [r0, #0]
 8008df8:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008dfc:	bb61      	cbnz	r1, 8008e58 <_format_hex+0x68>
 8008dfe:	2330      	movs	r3, #48	; 0x30
 8008e00:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008e04:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008e08:	07e5      	lsls	r5, r4, #31
 8008e0a:	d507      	bpl.n	8008e1c <_format_hex+0x2c>
 8008e0c:	4669      	mov	r1, sp
 8008e0e:	2530      	movs	r5, #48	; 0x30
 8008e10:	6870      	ldr	r0, [r6, #4]
 8008e12:	1ad7      	subs	r7, r2, r3
 8008e14:	4287      	cmp	r7, r0
 8008e16:	da01      	bge.n	8008e1c <_format_hex+0x2c>
 8008e18:	428b      	cmp	r3, r1
 8008e1a:	d831      	bhi.n	8008e80 <_format_hex+0x90>
 8008e1c:	06a0      	lsls	r0, r4, #26
 8008e1e:	d507      	bpl.n	8008e30 <_format_hex+0x40>
 8008e20:	4669      	mov	r1, sp
 8008e22:	2530      	movs	r5, #48	; 0x30
 8008e24:	68b0      	ldr	r0, [r6, #8]
 8008e26:	1ad7      	subs	r7, r2, r3
 8008e28:	4287      	cmp	r7, r0
 8008e2a:	da01      	bge.n	8008e30 <_format_hex+0x40>
 8008e2c:	428b      	cmp	r3, r1
 8008e2e:	d82a      	bhi.n	8008e86 <_format_hex+0x96>
 8008e30:	0661      	lsls	r1, r4, #25
 8008e32:	d407      	bmi.n	8008e44 <_format_hex+0x54>
 8008e34:	4669      	mov	r1, sp
 8008e36:	2420      	movs	r4, #32
 8008e38:	68b0      	ldr	r0, [r6, #8]
 8008e3a:	1ad5      	subs	r5, r2, r3
 8008e3c:	4285      	cmp	r5, r0
 8008e3e:	da01      	bge.n	8008e44 <_format_hex+0x54>
 8008e40:	428b      	cmp	r3, r1
 8008e42:	d823      	bhi.n	8008e8c <_format_hex+0x9c>
 8008e44:	1ad5      	subs	r5, r2, r3
 8008e46:	1c5c      	adds	r4, r3, #1
 8008e48:	ab10      	add	r3, sp, #64	; 0x40
 8008e4a:	429c      	cmp	r4, r3
 8008e4c:	d321      	bcc.n	8008e92 <_format_hex+0xa2>
 8008e4e:	68b3      	ldr	r3, [r6, #8]
 8008e50:	429d      	cmp	r5, r3
 8008e52:	db24      	blt.n	8008e9e <_format_hex+0xae>
 8008e54:	b011      	add	sp, #68	; 0x44
 8008e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e58:	f014 0f02 	tst.w	r4, #2
 8008e5c:	bf0c      	ite	eq
 8008e5e:	2757      	moveq	r7, #87	; 0x57
 8008e60:	2737      	movne	r7, #55	; 0x37
 8008e62:	4613      	mov	r3, r2
 8008e64:	466d      	mov	r5, sp
 8008e66:	f001 000f 	and.w	r0, r1, #15
 8008e6a:	2809      	cmp	r0, #9
 8008e6c:	bf94      	ite	ls
 8008e6e:	3030      	addls	r0, #48	; 0x30
 8008e70:	19c0      	addhi	r0, r0, r7
 8008e72:	0909      	lsrs	r1, r1, #4
 8008e74:	f803 0901 	strb.w	r0, [r3], #-1
 8008e78:	d0c6      	beq.n	8008e08 <_format_hex+0x18>
 8008e7a:	42ab      	cmp	r3, r5
 8008e7c:	d1f3      	bne.n	8008e66 <_format_hex+0x76>
 8008e7e:	e7c3      	b.n	8008e08 <_format_hex+0x18>
 8008e80:	f803 5901 	strb.w	r5, [r3], #-1
 8008e84:	e7c5      	b.n	8008e12 <_format_hex+0x22>
 8008e86:	f803 5901 	strb.w	r5, [r3], #-1
 8008e8a:	e7cc      	b.n	8008e26 <_format_hex+0x36>
 8008e8c:	f803 4901 	strb.w	r4, [r3], #-1
 8008e90:	e7d3      	b.n	8008e3a <_format_hex+0x4a>
 8008e92:	4630      	mov	r0, r6
 8008e94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008e98:	f7ff ff2a 	bl	8008cf0 <_xputch>
 8008e9c:	e7d4      	b.n	8008e48 <_format_hex+0x58>
 8008e9e:	2120      	movs	r1, #32
 8008ea0:	4630      	mov	r0, r6
 8008ea2:	f7ff ff25 	bl	8008cf0 <_xputch>
 8008ea6:	3501      	adds	r5, #1
 8008ea8:	e7d1      	b.n	8008e4e <_format_hex+0x5e>
	...

08008eac <_vprintf>:
 8008eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008eb0:	4614      	mov	r4, r2
 8008eb2:	2200      	movs	r2, #0
 8008eb4:	460b      	mov	r3, r1
 8008eb6:	f04f 0800 	mov.w	r8, #0
 8008eba:	b099      	sub	sp, #100	; 0x64
 8008ebc:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008ec0:	af08      	add	r7, sp, #32
 8008ec2:	7819      	ldrb	r1, [r3, #0]
 8008ec4:	b919      	cbnz	r1, 8008ece <_vprintf+0x22>
 8008ec6:	9806      	ldr	r0, [sp, #24]
 8008ec8:	b019      	add	sp, #100	; 0x64
 8008eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ece:	2925      	cmp	r1, #37	; 0x25
 8008ed0:	f103 0601 	add.w	r6, r3, #1
 8008ed4:	d004      	beq.n	8008ee0 <_vprintf+0x34>
 8008ed6:	a803      	add	r0, sp, #12
 8008ed8:	f7ff ff0a 	bl	8008cf0 <_xputch>
 8008edc:	4633      	mov	r3, r6
 8008ede:	e7f0      	b.n	8008ec2 <_vprintf+0x16>
 8008ee0:	2200      	movs	r2, #0
 8008ee2:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008ee6:	9205      	str	r2, [sp, #20]
 8008ee8:	785a      	ldrb	r2, [r3, #1]
 8008eea:	2a30      	cmp	r2, #48	; 0x30
 8008eec:	d129      	bne.n	8008f42 <_vprintf+0x96>
 8008eee:	2220      	movs	r2, #32
 8008ef0:	9203      	str	r2, [sp, #12]
 8008ef2:	1c9e      	adds	r6, r3, #2
 8008ef4:	2200      	movs	r2, #0
 8008ef6:	4635      	mov	r5, r6
 8008ef8:	4613      	mov	r3, r2
 8008efa:	f04f 0c0a 	mov.w	ip, #10
 8008efe:	7829      	ldrb	r1, [r5, #0]
 8008f00:	462e      	mov	r6, r5
 8008f02:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008f06:	2809      	cmp	r0, #9
 8008f08:	f105 0501 	add.w	r5, r5, #1
 8008f0c:	d91d      	bls.n	8008f4a <_vprintf+0x9e>
 8008f0e:	b12a      	cbz	r2, 8008f1c <_vprintf+0x70>
 8008f10:	9305      	str	r3, [sp, #20]
 8008f12:	b11b      	cbz	r3, 8008f1c <_vprintf+0x70>
 8008f14:	9b03      	ldr	r3, [sp, #12]
 8008f16:	f043 0310 	orr.w	r3, r3, #16
 8008f1a:	9303      	str	r3, [sp, #12]
 8008f1c:	292e      	cmp	r1, #46	; 0x2e
 8008f1e:	d123      	bne.n	8008f68 <_vprintf+0xbc>
 8008f20:	7873      	ldrb	r3, [r6, #1]
 8008f22:	2b2a      	cmp	r3, #42	; 0x2a
 8008f24:	d015      	beq.n	8008f52 <_vprintf+0xa6>
 8008f26:	2100      	movs	r1, #0
 8008f28:	250a      	movs	r5, #10
 8008f2a:	460a      	mov	r2, r1
 8008f2c:	1c70      	adds	r0, r6, #1
 8008f2e:	7803      	ldrb	r3, [r0, #0]
 8008f30:	4606      	mov	r6, r0
 8008f32:	3b30      	subs	r3, #48	; 0x30
 8008f34:	2b09      	cmp	r3, #9
 8008f36:	f100 0001 	add.w	r0, r0, #1
 8008f3a:	d959      	bls.n	8008ff0 <_vprintf+0x144>
 8008f3c:	b181      	cbz	r1, 8008f60 <_vprintf+0xb4>
 8008f3e:	9204      	str	r2, [sp, #16]
 8008f40:	e00e      	b.n	8008f60 <_vprintf+0xb4>
 8008f42:	2a2d      	cmp	r2, #45	; 0x2d
 8008f44:	d1d6      	bne.n	8008ef4 <_vprintf+0x48>
 8008f46:	2240      	movs	r2, #64	; 0x40
 8008f48:	e7d2      	b.n	8008ef0 <_vprintf+0x44>
 8008f4a:	2201      	movs	r2, #1
 8008f4c:	fb0c 0303 	mla	r3, ip, r3, r0
 8008f50:	e7d5      	b.n	8008efe <_vprintf+0x52>
 8008f52:	f854 3b04 	ldr.w	r3, [r4], #4
 8008f56:	3602      	adds	r6, #2
 8008f58:	2b00      	cmp	r3, #0
 8008f5a:	bfb8      	it	lt
 8008f5c:	425b      	neglt	r3, r3
 8008f5e:	9304      	str	r3, [sp, #16]
 8008f60:	9b03      	ldr	r3, [sp, #12]
 8008f62:	f043 0301 	orr.w	r3, r3, #1
 8008f66:	9303      	str	r3, [sp, #12]
 8008f68:	7833      	ldrb	r3, [r6, #0]
 8008f6a:	2b6c      	cmp	r3, #108	; 0x6c
 8008f6c:	bf04      	itt	eq
 8008f6e:	9b03      	ldreq	r3, [sp, #12]
 8008f70:	3601      	addeq	r6, #1
 8008f72:	7831      	ldrb	r1, [r6, #0]
 8008f74:	bf04      	itt	eq
 8008f76:	f043 0304 	orreq.w	r3, r3, #4
 8008f7a:	9303      	streq	r3, [sp, #12]
 8008f7c:	2958      	cmp	r1, #88	; 0x58
 8008f7e:	f000 8171 	beq.w	8009264 <_vprintf+0x3b8>
 8008f82:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008f86:	b2da      	uxtb	r2, r3
 8008f88:	2a15      	cmp	r2, #21
 8008f8a:	d8a4      	bhi.n	8008ed6 <_vprintf+0x2a>
 8008f8c:	2b15      	cmp	r3, #21
 8008f8e:	d8a2      	bhi.n	8008ed6 <_vprintf+0x2a>
 8008f90:	a201      	add	r2, pc, #4	; (adr r2, 8008f98 <_vprintf+0xec>)
 8008f92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f96:	bf00      	nop
 8008f98:	08008ff9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f9c:	0800900b 	stmdaeq	r0, {r0, r1, r3, ip, pc}
 8008fa0:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fa4:	08009041 	stmdaeq	r0, {r0, r6, ip, pc}
 8008fa8:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fac:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fb0:	0800900b 	stmdaeq	r0, {r0, r1, r3, ip, pc}
 8008fb4:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fb8:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fbc:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fc0:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fc4:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fc8:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fcc:	080091a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, ip, pc}
 8008fd0:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fd4:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fd8:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 8008fdc:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fe0:	08009245 	stmdaeq	r0, {r0, r2, r6, r9, ip, pc}
 8008fe4:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fe8:	08008ed7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r9, sl, fp, pc}
 8008fec:	0800926d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, ip, pc}
 8008ff0:	2101      	movs	r1, #1
 8008ff2:	fb05 3202 	mla	r2, r5, r2, r3
 8008ff6:	e79a      	b.n	8008f2e <_vprintf+0x82>
 8008ff8:	4625      	mov	r5, r4
 8008ffa:	a803      	add	r0, sp, #12
 8008ffc:	f855 1b04 	ldr.w	r1, [r5], #4
 8009000:	f7ff fe76 	bl	8008cf0 <_xputch>
 8009004:	462c      	mov	r4, r5
 8009006:	3601      	adds	r6, #1
 8009008:	e768      	b.n	8008edc <_vprintf+0x30>
 800900a:	9903      	ldr	r1, [sp, #12]
 800900c:	074d      	lsls	r5, r1, #29
 800900e:	bf51      	iteee	pl
 8009010:	4625      	movpl	r5, r4
 8009012:	3407      	addmi	r4, #7
 8009014:	f024 0407 	bicmi.w	r4, r4, #7
 8009018:	4625      	movmi	r5, r4
 800901a:	bf55      	itete	pl
 800901c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8009020:	6863      	ldrmi	r3, [r4, #4]
 8009022:	17d3      	asrpl	r3, r2, #31
 8009024:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009028:	2b00      	cmp	r3, #0
 800902a:	da05      	bge.n	8009038 <_vprintf+0x18c>
 800902c:	f041 0108 	orr.w	r1, r1, #8
 8009030:	4252      	negs	r2, r2
 8009032:	9103      	str	r1, [sp, #12]
 8009034:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009038:	a803      	add	r0, sp, #12
 800903a:	f7ff fe6f 	bl	8008d1c <_format_int>
 800903e:	e7e1      	b.n	8009004 <_vprintf+0x158>
 8009040:	3407      	adds	r4, #7
 8009042:	f024 0507 	bic.w	r5, r4, #7
 8009046:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800904a:	f7fe fd4b 	bl	8007ae4 <__aeabi_d2f>
 800904e:	9b03      	ldr	r3, [sp, #12]
 8009050:	4641      	mov	r1, r8
 8009052:	07dc      	lsls	r4, r3, #31
 8009054:	bf54      	ite	pl
 8009056:	f04f 0a06 	movpl.w	sl, #6
 800905a:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 800905e:	4681      	mov	r9, r0
 8009060:	f7fe feec 	bl	8007e3c <__aeabi_fcmplt>
 8009064:	2800      	cmp	r0, #0
 8009066:	d063      	beq.n	8009130 <_vprintf+0x284>
 8009068:	232d      	movs	r3, #45	; 0x2d
 800906a:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 800906e:	f88d 3020 	strb.w	r3, [sp, #32]
 8009072:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009076:	4648      	mov	r0, r9
 8009078:	f7fe ff08 	bl	8007e8c <__aeabi_f2iz>
 800907c:	4659      	mov	r1, fp
 800907e:	2200      	movs	r2, #0
 8009080:	4604      	mov	r4, r0
 8009082:	f7ff fdfb 	bl	8008c7c <_itostr>
 8009086:	eb0b 0200 	add.w	r2, fp, r0
 800908a:	e9cd 2000 	strd	r2, r0, [sp]
 800908e:	4620      	mov	r0, r4
 8009090:	f7fe fe32 	bl	8007cf8 <__aeabi_i2f>
 8009094:	4601      	mov	r1, r0
 8009096:	4648      	mov	r0, r9
 8009098:	f7fe fd78 	bl	8007b8c <__aeabi_fsub>
 800909c:	222e      	movs	r2, #46	; 0x2e
 800909e:	4601      	mov	r1, r0
 80090a0:	200a      	movs	r0, #10
 80090a2:	9b00      	ldr	r3, [sp, #0]
 80090a4:	f10a 0901 	add.w	r9, sl, #1
 80090a8:	1c5c      	adds	r4, r3, #1
 80090aa:	9b01      	ldr	r3, [sp, #4]
 80090ac:	f80b 2003 	strb.w	r2, [fp, r3]
 80090b0:	4603      	mov	r3, r0
 80090b2:	f1ba 0f00 	cmp.w	sl, #0
 80090b6:	dc3d      	bgt.n	8009134 <_vprintf+0x288>
 80090b8:	9100      	str	r1, [sp, #0]
 80090ba:	f7fe fe1d 	bl	8007cf8 <__aeabi_i2f>
 80090be:	9900      	ldr	r1, [sp, #0]
 80090c0:	f7ff f8e0 	bl	8008284 <__aeabi_fmul>
 80090c4:	f7fe fee2 	bl	8007e8c <__aeabi_f2iz>
 80090c8:	464a      	mov	r2, r9
 80090ca:	4621      	mov	r1, r4
 80090cc:	f7ff fdd6 	bl	8008c7c <_itostr>
 80090d0:	4404      	add	r4, r0
 80090d2:	1be0      	subs	r0, r4, r7
 80090d4:	1e44      	subs	r4, r0, #1
 80090d6:	5d3b      	ldrb	r3, [r7, r4]
 80090d8:	193a      	adds	r2, r7, r4
 80090da:	2b34      	cmp	r3, #52	; 0x34
 80090dc:	d910      	bls.n	8009100 <_vprintf+0x254>
 80090de:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80090e2:	1e53      	subs	r3, r2, #1
 80090e4:	292e      	cmp	r1, #46	; 0x2e
 80090e6:	d02c      	beq.n	8009142 <_vprintf+0x296>
 80090e8:	469c      	mov	ip, r3
 80090ea:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80090ee:	4663      	mov	r3, ip
 80090f0:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80090f4:	2939      	cmp	r1, #57	; 0x39
 80090f6:	d021      	beq.n	800913c <_vprintf+0x290>
 80090f8:	292e      	cmp	r1, #46	; 0x2e
 80090fa:	d022      	beq.n	8009142 <_vprintf+0x296>
 80090fc:	3101      	adds	r1, #1
 80090fe:	7019      	strb	r1, [r3, #0]
 8009100:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8009104:	446b      	add	r3, sp
 8009106:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800910a:	2b2e      	cmp	r3, #46	; 0x2e
 800910c:	bf08      	it	eq
 800910e:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009112:	46a1      	mov	r9, r4
 8009114:	9b05      	ldr	r3, [sp, #20]
 8009116:	4599      	cmp	r9, r3
 8009118:	db3e      	blt.n	8009198 <_vprintf+0x2ec>
 800911a:	46b9      	mov	r9, r7
 800911c:	2c00      	cmp	r4, #0
 800911e:	f77f af71 	ble.w	8009004 <_vprintf+0x158>
 8009122:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009126:	a803      	add	r0, sp, #12
 8009128:	f7ff fde2 	bl	8008cf0 <_xputch>
 800912c:	3c01      	subs	r4, #1
 800912e:	e7f5      	b.n	800911c <_vprintf+0x270>
 8009130:	46bb      	mov	fp, r7
 8009132:	e7a0      	b.n	8009076 <_vprintf+0x1ca>
 8009134:	4358      	muls	r0, r3
 8009136:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800913a:	e7ba      	b.n	80090b2 <_vprintf+0x206>
 800913c:	f88c e001 	strb.w	lr, [ip, #1]
 8009140:	e7d5      	b.n	80090ee <_vprintf+0x242>
 8009142:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8009146:	3b01      	subs	r3, #1
 8009148:	7819      	ldrb	r1, [r3, #0]
 800914a:	2939      	cmp	r1, #57	; 0x39
 800914c:	d112      	bne.n	8009174 <_vprintf+0x2c8>
 800914e:	42bb      	cmp	r3, r7
 8009150:	d20d      	bcs.n	800916e <_vprintf+0x2c2>
 8009152:	1c5c      	adds	r4, r3, #1
 8009154:	1c99      	adds	r1, r3, #2
 8009156:	428c      	cmp	r4, r1
 8009158:	eba2 0203 	sub.w	r2, r2, r3
 800915c:	d913      	bls.n	8009186 <_vprintf+0x2da>
 800915e:	4619      	mov	r1, r3
 8009160:	441a      	add	r2, r3
 8009162:	428a      	cmp	r2, r1
 8009164:	d10b      	bne.n	800917e <_vprintf+0x2d2>
 8009166:	2231      	movs	r2, #49	; 0x31
 8009168:	4604      	mov	r4, r0
 800916a:	705a      	strb	r2, [r3, #1]
 800916c:	e7c8      	b.n	8009100 <_vprintf+0x254>
 800916e:	f803 c901 	strb.w	ip, [r3], #-1
 8009172:	e7e9      	b.n	8009148 <_vprintf+0x29c>
 8009174:	42bb      	cmp	r3, r7
 8009176:	d3ec      	bcc.n	8009152 <_vprintf+0x2a6>
 8009178:	292d      	cmp	r1, #45	; 0x2d
 800917a:	d0ea      	beq.n	8009152 <_vprintf+0x2a6>
 800917c:	e7be      	b.n	80090fc <_vprintf+0x250>
 800917e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009182:	704c      	strb	r4, [r1, #1]
 8009184:	e7ed      	b.n	8009162 <_vprintf+0x2b6>
 8009186:	4414      	add	r4, r2
 8009188:	440a      	add	r2, r1
 800918a:	428a      	cmp	r2, r1
 800918c:	d0eb      	beq.n	8009166 <_vprintf+0x2ba>
 800918e:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 8009192:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8009196:	e7f8      	b.n	800918a <_vprintf+0x2de>
 8009198:	2120      	movs	r1, #32
 800919a:	a803      	add	r0, sp, #12
 800919c:	f7ff fda8 	bl	8008cf0 <_xputch>
 80091a0:	f109 0901 	add.w	r9, r9, #1
 80091a4:	e7b6      	b.n	8009114 <_vprintf+0x268>
 80091a6:	2308      	movs	r3, #8
 80091a8:	4625      	mov	r5, r4
 80091aa:	9305      	str	r3, [sp, #20]
 80091ac:	2320      	movs	r3, #32
 80091ae:	2130      	movs	r1, #48	; 0x30
 80091b0:	f855 4b04 	ldr.w	r4, [r5], #4
 80091b4:	a803      	add	r0, sp, #12
 80091b6:	9303      	str	r3, [sp, #12]
 80091b8:	f7ff fd9a 	bl	8008cf0 <_xputch>
 80091bc:	2178      	movs	r1, #120	; 0x78
 80091be:	a803      	add	r0, sp, #12
 80091c0:	f7ff fd96 	bl	8008cf0 <_xputch>
 80091c4:	4621      	mov	r1, r4
 80091c6:	a803      	add	r0, sp, #12
 80091c8:	f7ff fe12 	bl	8008df0 <_format_hex>
 80091cc:	e71a      	b.n	8009004 <_vprintf+0x158>
 80091ce:	4625      	mov	r5, r4
 80091d0:	2400      	movs	r4, #0
 80091d2:	f855 9b04 	ldr.w	r9, [r5], #4
 80091d6:	f819 3004 	ldrb.w	r3, [r9, r4]
 80091da:	b993      	cbnz	r3, 8009202 <_vprintf+0x356>
 80091dc:	9b03      	ldr	r3, [sp, #12]
 80091de:	07d9      	lsls	r1, r3, #31
 80091e0:	d503      	bpl.n	80091ea <_vprintf+0x33e>
 80091e2:	9b04      	ldr	r3, [sp, #16]
 80091e4:	429c      	cmp	r4, r3
 80091e6:	bfa8      	it	ge
 80091e8:	461c      	movge	r4, r3
 80091ea:	9b03      	ldr	r3, [sp, #12]
 80091ec:	f104 0a01 	add.w	sl, r4, #1
 80091f0:	065a      	lsls	r2, r3, #25
 80091f2:	d403      	bmi.n	80091fc <_vprintf+0x350>
 80091f4:	9b05      	ldr	r3, [sp, #20]
 80091f6:	429c      	cmp	r4, r3
 80091f8:	db05      	blt.n	8009206 <_vprintf+0x35a>
 80091fa:	4654      	mov	r4, sl
 80091fc:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009200:	e00d      	b.n	800921e <_vprintf+0x372>
 8009202:	3401      	adds	r4, #1
 8009204:	e7e7      	b.n	80091d6 <_vprintf+0x32a>
 8009206:	2120      	movs	r1, #32
 8009208:	a803      	add	r0, sp, #12
 800920a:	f7ff fd71 	bl	8008cf0 <_xputch>
 800920e:	4654      	mov	r4, sl
 8009210:	e7eb      	b.n	80091ea <_vprintf+0x33e>
 8009212:	a803      	add	r0, sp, #12
 8009214:	f7ff fd6c 	bl	8008cf0 <_xputch>
 8009218:	9b04      	ldr	r3, [sp, #16]
 800921a:	3b01      	subs	r3, #1
 800921c:	9304      	str	r3, [sp, #16]
 800921e:	9b03      	ldr	r3, [sp, #12]
 8009220:	07db      	lsls	r3, r3, #31
 8009222:	d501      	bpl.n	8009228 <_vprintf+0x37c>
 8009224:	9b04      	ldr	r3, [sp, #16]
 8009226:	b11b      	cbz	r3, 8009230 <_vprintf+0x384>
 8009228:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800922c:	2900      	cmp	r1, #0
 800922e:	d1f0      	bne.n	8009212 <_vprintf+0x366>
 8009230:	9b05      	ldr	r3, [sp, #20]
 8009232:	429c      	cmp	r4, r3
 8009234:	f6bf aee6 	bge.w	8009004 <_vprintf+0x158>
 8009238:	2120      	movs	r1, #32
 800923a:	a803      	add	r0, sp, #12
 800923c:	f7ff fd58 	bl	8008cf0 <_xputch>
 8009240:	3401      	adds	r4, #1
 8009242:	e7f5      	b.n	8009230 <_vprintf+0x384>
 8009244:	9b03      	ldr	r3, [sp, #12]
 8009246:	f013 0304 	ands.w	r3, r3, #4
 800924a:	bf1d      	ittte	ne
 800924c:	3407      	addne	r4, #7
 800924e:	f024 0407 	bicne.w	r4, r4, #7
 8009252:	4625      	movne	r5, r4
 8009254:	4625      	moveq	r5, r4
 8009256:	bf1a      	itte	ne
 8009258:	f855 2b08 	ldrne.w	r2, [r5], #8
 800925c:	6863      	ldrne	r3, [r4, #4]
 800925e:	f855 2b04 	ldreq.w	r2, [r5], #4
 8009262:	e6e9      	b.n	8009038 <_vprintf+0x18c>
 8009264:	9b03      	ldr	r3, [sp, #12]
 8009266:	f043 0302 	orr.w	r3, r3, #2
 800926a:	9303      	str	r3, [sp, #12]
 800926c:	4625      	mov	r5, r4
 800926e:	f855 1b04 	ldr.w	r1, [r5], #4
 8009272:	e7a8      	b.n	80091c6 <_vprintf+0x31a>

08009274 <printf>:
 8009274:	b40f      	push	{r0, r1, r2, r3}
 8009276:	b507      	push	{r0, r1, r2, lr}
 8009278:	aa04      	add	r2, sp, #16
 800927a:	f852 1b04 	ldr.w	r1, [r2], #4
 800927e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8009282:	9201      	str	r2, [sp, #4]
 8009284:	f7ff fe12 	bl	8008eac <_vprintf>
 8009288:	b003      	add	sp, #12
 800928a:	f85d eb04 	ldr.w	lr, [sp], #4
 800928e:	b004      	add	sp, #16
 8009290:	4770      	bx	lr
	...

08009294 <sprintf>:
 8009294:	b40e      	push	{r1, r2, r3}
 8009296:	b517      	push	{r0, r1, r2, r4, lr}
 8009298:	4c09      	ldr	r4, [pc, #36]	; (80092c0 <sprintf+0x2c>)
 800929a:	aa05      	add	r2, sp, #20
 800929c:	f852 1b04 	ldr.w	r1, [r2], #4
 80092a0:	6020      	str	r0, [r4, #0]
 80092a2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80092a6:	9201      	str	r2, [sp, #4]
 80092a8:	f7ff fe00 	bl	8008eac <_vprintf>
 80092ac:	2300      	movs	r3, #0
 80092ae:	6822      	ldr	r2, [r4, #0]
 80092b0:	6023      	str	r3, [r4, #0]
 80092b2:	7013      	strb	r3, [r2, #0]
 80092b4:	b003      	add	sp, #12
 80092b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092ba:	b003      	add	sp, #12
 80092bc:	4770      	bx	lr
 80092be:	bf00      	nop
 80092c0:	200000e8 	andcs	r0, r0, r8, ror #1

080092c4 <snprintf>:
 80092c4:	b40c      	push	{r2, r3}
 80092c6:	460b      	mov	r3, r1
 80092c8:	b513      	push	{r0, r1, r4, lr}
 80092ca:	4c09      	ldr	r4, [pc, #36]	; (80092f0 <snprintf+0x2c>)
 80092cc:	aa04      	add	r2, sp, #16
 80092ce:	f852 1b04 	ldr.w	r1, [r2], #4
 80092d2:	6020      	str	r0, [r4, #0]
 80092d4:	4618      	mov	r0, r3
 80092d6:	9201      	str	r2, [sp, #4]
 80092d8:	f7ff fde8 	bl	8008eac <_vprintf>
 80092dc:	2300      	movs	r3, #0
 80092de:	6822      	ldr	r2, [r4, #0]
 80092e0:	6023      	str	r3, [r4, #0]
 80092e2:	7013      	strb	r3, [r2, #0]
 80092e4:	b002      	add	sp, #8
 80092e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092ea:	b002      	add	sp, #8
 80092ec:	4770      	bx	lr
 80092ee:	bf00      	nop
 80092f0:	200000e8 	andcs	r0, r0, r8, ror #1

080092f4 <vsnprintf>:
 80092f4:	b538      	push	{r3, r4, r5, lr}
 80092f6:	4605      	mov	r5, r0
 80092f8:	4c05      	ldr	r4, [pc, #20]	; (8009310 <vsnprintf+0x1c>)
 80092fa:	4608      	mov	r0, r1
 80092fc:	4611      	mov	r1, r2
 80092fe:	461a      	mov	r2, r3
 8009300:	6025      	str	r5, [r4, #0]
 8009302:	f7ff fdd3 	bl	8008eac <_vprintf>
 8009306:	2300      	movs	r3, #0
 8009308:	6822      	ldr	r2, [r4, #0]
 800930a:	6023      	str	r3, [r4, #0]
 800930c:	7013      	strb	r3, [r2, #0]
 800930e:	bd38      	pop	{r3, r4, r5, pc}
 8009310:	200000e8 	andcs	r0, r0, r8, ror #1

08009314 <__udivmoddi4>:
 8009314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009318:	9e08      	ldr	r6, [sp, #32]
 800931a:	460d      	mov	r5, r1
 800931c:	4604      	mov	r4, r0
 800931e:	468e      	mov	lr, r1
 8009320:	2b00      	cmp	r3, #0
 8009322:	d14c      	bne.n	80093be <__udivmoddi4+0xaa>
 8009324:	428a      	cmp	r2, r1
 8009326:	4694      	mov	ip, r2
 8009328:	d967      	bls.n	80093fa <__udivmoddi4+0xe6>
 800932a:	fab2 f382 	clz	r3, r2
 800932e:	b153      	cbz	r3, 8009346 <__udivmoddi4+0x32>
 8009330:	fa02 fc03 	lsl.w	ip, r2, r3
 8009334:	f1c3 0220 	rsb	r2, r3, #32
 8009338:	fa01 fe03 	lsl.w	lr, r1, r3
 800933c:	fa20 f202 	lsr.w	r2, r0, r2
 8009340:	ea42 0e0e 	orr.w	lr, r2, lr
 8009344:	409c      	lsls	r4, r3
 8009346:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800934a:	fbbe f1f7 	udiv	r1, lr, r7
 800934e:	fa1f f58c 	uxth.w	r5, ip
 8009352:	fb07 ee11 	mls	lr, r7, r1, lr
 8009356:	fb01 f005 	mul.w	r0, r1, r5
 800935a:	0c22      	lsrs	r2, r4, #16
 800935c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8009360:	4290      	cmp	r0, r2
 8009362:	d90a      	bls.n	800937a <__udivmoddi4+0x66>
 8009364:	eb1c 0202 	adds.w	r2, ip, r2
 8009368:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 800936c:	f080 8119 	bcs.w	80095a2 <__udivmoddi4+0x28e>
 8009370:	4290      	cmp	r0, r2
 8009372:	f240 8116 	bls.w	80095a2 <__udivmoddi4+0x28e>
 8009376:	3902      	subs	r1, #2
 8009378:	4462      	add	r2, ip
 800937a:	1a12      	subs	r2, r2, r0
 800937c:	fbb2 f0f7 	udiv	r0, r2, r7
 8009380:	fb07 2210 	mls	r2, r7, r0, r2
 8009384:	fb00 f505 	mul.w	r5, r0, r5
 8009388:	b2a4      	uxth	r4, r4
 800938a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800938e:	42a5      	cmp	r5, r4
 8009390:	d90a      	bls.n	80093a8 <__udivmoddi4+0x94>
 8009392:	eb1c 0404 	adds.w	r4, ip, r4
 8009396:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800939a:	f080 8104 	bcs.w	80095a6 <__udivmoddi4+0x292>
 800939e:	42a5      	cmp	r5, r4
 80093a0:	f240 8101 	bls.w	80095a6 <__udivmoddi4+0x292>
 80093a4:	4464      	add	r4, ip
 80093a6:	3802      	subs	r0, #2
 80093a8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80093ac:	2100      	movs	r1, #0
 80093ae:	1b64      	subs	r4, r4, r5
 80093b0:	b11e      	cbz	r6, 80093ba <__udivmoddi4+0xa6>
 80093b2:	40dc      	lsrs	r4, r3
 80093b4:	2300      	movs	r3, #0
 80093b6:	e9c6 4300 	strd	r4, r3, [r6]
 80093ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093be:	428b      	cmp	r3, r1
 80093c0:	d908      	bls.n	80093d4 <__udivmoddi4+0xc0>
 80093c2:	2e00      	cmp	r6, #0
 80093c4:	f000 80ea 	beq.w	800959c <__udivmoddi4+0x288>
 80093c8:	2100      	movs	r1, #0
 80093ca:	e9c6 0500 	strd	r0, r5, [r6]
 80093ce:	4608      	mov	r0, r1
 80093d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093d4:	fab3 f183 	clz	r1, r3
 80093d8:	2900      	cmp	r1, #0
 80093da:	d148      	bne.n	800946e <__udivmoddi4+0x15a>
 80093dc:	42ab      	cmp	r3, r5
 80093de:	d302      	bcc.n	80093e6 <__udivmoddi4+0xd2>
 80093e0:	4282      	cmp	r2, r0
 80093e2:	f200 80f8 	bhi.w	80095d6 <__udivmoddi4+0x2c2>
 80093e6:	1a84      	subs	r4, r0, r2
 80093e8:	eb65 0203 	sbc.w	r2, r5, r3
 80093ec:	2001      	movs	r0, #1
 80093ee:	4696      	mov	lr, r2
 80093f0:	2e00      	cmp	r6, #0
 80093f2:	d0e2      	beq.n	80093ba <__udivmoddi4+0xa6>
 80093f4:	e9c6 4e00 	strd	r4, lr, [r6]
 80093f8:	e7df      	b.n	80093ba <__udivmoddi4+0xa6>
 80093fa:	b902      	cbnz	r2, 80093fe <__udivmoddi4+0xea>
 80093fc:	deff      	udf	#255	; 0xff
 80093fe:	fab2 f382 	clz	r3, r2
 8009402:	2b00      	cmp	r3, #0
 8009404:	f040 808e 	bne.w	8009524 <__udivmoddi4+0x210>
 8009408:	1a88      	subs	r0, r1, r2
 800940a:	2101      	movs	r1, #1
 800940c:	0c17      	lsrs	r7, r2, #16
 800940e:	fa1f fe82 	uxth.w	lr, r2
 8009412:	fbb0 f5f7 	udiv	r5, r0, r7
 8009416:	fb07 0015 	mls	r0, r7, r5, r0
 800941a:	0c22      	lsrs	r2, r4, #16
 800941c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009420:	fb0e f005 	mul.w	r0, lr, r5
 8009424:	4290      	cmp	r0, r2
 8009426:	d908      	bls.n	800943a <__udivmoddi4+0x126>
 8009428:	eb1c 0202 	adds.w	r2, ip, r2
 800942c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009430:	d202      	bcs.n	8009438 <__udivmoddi4+0x124>
 8009432:	4290      	cmp	r0, r2
 8009434:	f200 80cc 	bhi.w	80095d0 <__udivmoddi4+0x2bc>
 8009438:	4645      	mov	r5, r8
 800943a:	1a12      	subs	r2, r2, r0
 800943c:	fbb2 f0f7 	udiv	r0, r2, r7
 8009440:	fb07 2210 	mls	r2, r7, r0, r2
 8009444:	fb0e fe00 	mul.w	lr, lr, r0
 8009448:	b2a4      	uxth	r4, r4
 800944a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800944e:	45a6      	cmp	lr, r4
 8009450:	d908      	bls.n	8009464 <__udivmoddi4+0x150>
 8009452:	eb1c 0404 	adds.w	r4, ip, r4
 8009456:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800945a:	d202      	bcs.n	8009462 <__udivmoddi4+0x14e>
 800945c:	45a6      	cmp	lr, r4
 800945e:	f200 80b4 	bhi.w	80095ca <__udivmoddi4+0x2b6>
 8009462:	4610      	mov	r0, r2
 8009464:	eba4 040e 	sub.w	r4, r4, lr
 8009468:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800946c:	e7a0      	b.n	80093b0 <__udivmoddi4+0x9c>
 800946e:	f1c1 0720 	rsb	r7, r1, #32
 8009472:	408b      	lsls	r3, r1
 8009474:	fa22 fc07 	lsr.w	ip, r2, r7
 8009478:	ea4c 0c03 	orr.w	ip, ip, r3
 800947c:	fa25 fa07 	lsr.w	sl, r5, r7
 8009480:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8009484:	fbba f8f9 	udiv	r8, sl, r9
 8009488:	408d      	lsls	r5, r1
 800948a:	fa20 f307 	lsr.w	r3, r0, r7
 800948e:	fb09 aa18 	mls	sl, r9, r8, sl
 8009492:	fa1f fe8c 	uxth.w	lr, ip
 8009496:	432b      	orrs	r3, r5
 8009498:	fa00 f501 	lsl.w	r5, r0, r1
 800949c:	fb08 f00e 	mul.w	r0, r8, lr
 80094a0:	0c1c      	lsrs	r4, r3, #16
 80094a2:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80094a6:	42a0      	cmp	r0, r4
 80094a8:	fa02 f201 	lsl.w	r2, r2, r1
 80094ac:	d90b      	bls.n	80094c6 <__udivmoddi4+0x1b2>
 80094ae:	eb1c 0404 	adds.w	r4, ip, r4
 80094b2:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80094b6:	f080 8086 	bcs.w	80095c6 <__udivmoddi4+0x2b2>
 80094ba:	42a0      	cmp	r0, r4
 80094bc:	f240 8083 	bls.w	80095c6 <__udivmoddi4+0x2b2>
 80094c0:	f1a8 0802 	sub.w	r8, r8, #2
 80094c4:	4464      	add	r4, ip
 80094c6:	1a24      	subs	r4, r4, r0
 80094c8:	b298      	uxth	r0, r3
 80094ca:	fbb4 f3f9 	udiv	r3, r4, r9
 80094ce:	fb09 4413 	mls	r4, r9, r3, r4
 80094d2:	fb03 fe0e 	mul.w	lr, r3, lr
 80094d6:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80094da:	45a6      	cmp	lr, r4
 80094dc:	d908      	bls.n	80094f0 <__udivmoddi4+0x1dc>
 80094de:	eb1c 0404 	adds.w	r4, ip, r4
 80094e2:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80094e6:	d26a      	bcs.n	80095be <__udivmoddi4+0x2aa>
 80094e8:	45a6      	cmp	lr, r4
 80094ea:	d968      	bls.n	80095be <__udivmoddi4+0x2aa>
 80094ec:	3b02      	subs	r3, #2
 80094ee:	4464      	add	r4, ip
 80094f0:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80094f4:	fba0 9302 	umull	r9, r3, r0, r2
 80094f8:	eba4 040e 	sub.w	r4, r4, lr
 80094fc:	429c      	cmp	r4, r3
 80094fe:	46c8      	mov	r8, r9
 8009500:	469e      	mov	lr, r3
 8009502:	d354      	bcc.n	80095ae <__udivmoddi4+0x29a>
 8009504:	d051      	beq.n	80095aa <__udivmoddi4+0x296>
 8009506:	2e00      	cmp	r6, #0
 8009508:	d067      	beq.n	80095da <__udivmoddi4+0x2c6>
 800950a:	ebb5 0308 	subs.w	r3, r5, r8
 800950e:	eb64 040e 	sbc.w	r4, r4, lr
 8009512:	40cb      	lsrs	r3, r1
 8009514:	fa04 f707 	lsl.w	r7, r4, r7
 8009518:	431f      	orrs	r7, r3
 800951a:	40cc      	lsrs	r4, r1
 800951c:	e9c6 7400 	strd	r7, r4, [r6]
 8009520:	2100      	movs	r1, #0
 8009522:	e74a      	b.n	80093ba <__udivmoddi4+0xa6>
 8009524:	fa02 fc03 	lsl.w	ip, r2, r3
 8009528:	f1c3 0020 	rsb	r0, r3, #32
 800952c:	40c1      	lsrs	r1, r0
 800952e:	409d      	lsls	r5, r3
 8009530:	fa24 f000 	lsr.w	r0, r4, r0
 8009534:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009538:	4328      	orrs	r0, r5
 800953a:	fbb1 f5f7 	udiv	r5, r1, r7
 800953e:	fb07 1115 	mls	r1, r7, r5, r1
 8009542:	fa1f fe8c 	uxth.w	lr, ip
 8009546:	0c02      	lsrs	r2, r0, #16
 8009548:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800954c:	fb05 f10e 	mul.w	r1, r5, lr
 8009550:	4291      	cmp	r1, r2
 8009552:	fa04 f403 	lsl.w	r4, r4, r3
 8009556:	d908      	bls.n	800956a <__udivmoddi4+0x256>
 8009558:	eb1c 0202 	adds.w	r2, ip, r2
 800955c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009560:	d22f      	bcs.n	80095c2 <__udivmoddi4+0x2ae>
 8009562:	4291      	cmp	r1, r2
 8009564:	d92d      	bls.n	80095c2 <__udivmoddi4+0x2ae>
 8009566:	3d02      	subs	r5, #2
 8009568:	4462      	add	r2, ip
 800956a:	1a52      	subs	r2, r2, r1
 800956c:	fbb2 f1f7 	udiv	r1, r2, r7
 8009570:	fb07 2211 	mls	r2, r7, r1, r2
 8009574:	b280      	uxth	r0, r0
 8009576:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800957a:	fb01 f20e 	mul.w	r2, r1, lr
 800957e:	4282      	cmp	r2, r0
 8009580:	d908      	bls.n	8009594 <__udivmoddi4+0x280>
 8009582:	eb1c 0000 	adds.w	r0, ip, r0
 8009586:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 800958a:	d216      	bcs.n	80095ba <__udivmoddi4+0x2a6>
 800958c:	4282      	cmp	r2, r0
 800958e:	d914      	bls.n	80095ba <__udivmoddi4+0x2a6>
 8009590:	3902      	subs	r1, #2
 8009592:	4460      	add	r0, ip
 8009594:	1a80      	subs	r0, r0, r2
 8009596:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800959a:	e73a      	b.n	8009412 <__udivmoddi4+0xfe>
 800959c:	4631      	mov	r1, r6
 800959e:	4630      	mov	r0, r6
 80095a0:	e70b      	b.n	80093ba <__udivmoddi4+0xa6>
 80095a2:	4671      	mov	r1, lr
 80095a4:	e6e9      	b.n	800937a <__udivmoddi4+0x66>
 80095a6:	4610      	mov	r0, r2
 80095a8:	e6fe      	b.n	80093a8 <__udivmoddi4+0x94>
 80095aa:	454d      	cmp	r5, r9
 80095ac:	d2ab      	bcs.n	8009506 <__udivmoddi4+0x1f2>
 80095ae:	ebb9 0802 	subs.w	r8, r9, r2
 80095b2:	eb63 0e0c 	sbc.w	lr, r3, ip
 80095b6:	3801      	subs	r0, #1
 80095b8:	e7a5      	b.n	8009506 <__udivmoddi4+0x1f2>
 80095ba:	4641      	mov	r1, r8
 80095bc:	e7ea      	b.n	8009594 <__udivmoddi4+0x280>
 80095be:	4603      	mov	r3, r0
 80095c0:	e796      	b.n	80094f0 <__udivmoddi4+0x1dc>
 80095c2:	4645      	mov	r5, r8
 80095c4:	e7d1      	b.n	800956a <__udivmoddi4+0x256>
 80095c6:	46d0      	mov	r8, sl
 80095c8:	e77d      	b.n	80094c6 <__udivmoddi4+0x1b2>
 80095ca:	4464      	add	r4, ip
 80095cc:	3802      	subs	r0, #2
 80095ce:	e749      	b.n	8009464 <__udivmoddi4+0x150>
 80095d0:	3d02      	subs	r5, #2
 80095d2:	4462      	add	r2, ip
 80095d4:	e731      	b.n	800943a <__udivmoddi4+0x126>
 80095d6:	4608      	mov	r0, r1
 80095d8:	e70a      	b.n	80093f0 <__udivmoddi4+0xdc>
 80095da:	4631      	mov	r1, r6
 80095dc:	e6ed      	b.n	80093ba <__udivmoddi4+0xa6>
 80095de:	bf00      	nop

080095e0 <RemoteConfig::HandleList()>:
 80095e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80095e4:	6801      	ldr	r1, [r0, #0]
 80095e6:	4604      	mov	r4, r0
 80095e8:	2012      	movs	r0, #18
 80095ea:	f04f 080c 	mov.w	r8, #12
 80095ee:	4a29      	ldr	r2, [pc, #164]	; (8009694 <RemoteConfig::HandleList()+0xb4>)
 80095f0:	4b29      	ldr	r3, [pc, #164]	; (8009698 <RemoteConfig::HandleList()+0xb8>)
 80095f2:	fb00 2201 	mla	r2, r0, r1, r2
 80095f6:	6860      	ldr	r0, [r4, #4]
 80095f8:	4928      	ldr	r1, [pc, #160]	; (800969c <RemoteConfig::HandleList()+0xbc>)
 80095fa:	681b      	ldr	r3, [r3, #0]
 80095fc:	fb08 1100 	mla	r1, r8, r0, r1
 8009600:	4e27      	ldr	r6, [pc, #156]	; (80096a0 <RemoteConfig::HandleList()+0xc0>)
 8009602:	4828      	ldr	r0, [pc, #160]	; (80096a4 <RemoteConfig::HandleList()+0xc4>)
 8009604:	695f      	ldr	r7, [r3, #20]
 8009606:	6835      	ldr	r5, [r6, #0]
 8009608:	f890 9009 	ldrb.w	r9, [r0, #9]
 800960c:	b2fb      	uxtb	r3, r7
 800960e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8009612:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8009616:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800961a:	b089      	sub	sp, #36	; 0x24
 800961c:	3507      	adds	r5, #7
 800961e:	0e3f      	lsrs	r7, r7, #24
 8009620:	f1b9 0f00 	cmp.w	r9, #0
 8009624:	d01d      	beq.n	8009662 <RemoteConfig::HandleList()+0x82>
 8009626:	3009      	adds	r0, #9
 8009628:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800962c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8009630:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009634:	4628      	mov	r0, r5
 8009636:	e9cd e701 	strd	lr, r7, [sp, #4]
 800963a:	4a1b      	ldr	r2, [pc, #108]	; (80096a8 <RemoteConfig::HandleList()+0xc8>)
 800963c:	f8cd c000 	str.w	ip, [sp]
 8009640:	f7ff fe40 	bl	80092c4 <snprintf>
 8009644:	69e3      	ldr	r3, [r4, #28]
 8009646:	2b05      	cmp	r3, #5
 8009648:	d118      	bne.n	800967c <RemoteConfig::HandleList()+0x9c>
 800964a:	f642 1305 	movw	r3, #10501	; 0x2905
 800964e:	9300      	str	r3, [sp, #0]
 8009650:	69a3      	ldr	r3, [r4, #24]
 8009652:	b282      	uxth	r2, r0
 8009654:	4629      	mov	r1, r5
 8009656:	7d20      	ldrb	r0, [r4, #20]
 8009658:	f005 fe60 	bl	800f31c <udp_send>
 800965c:	b009      	add	sp, #36	; 0x24
 800965e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009662:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8009666:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800966a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800966e:	4628      	mov	r0, r5
 8009670:	e9cd ce00 	strd	ip, lr, [sp]
 8009674:	4a0d      	ldr	r2, [pc, #52]	; (80096ac <RemoteConfig::HandleList()+0xcc>)
 8009676:	f7ff fe25 	bl	80092c4 <snprintf>
 800967a:	e7e3      	b.n	8009644 <RemoteConfig::HandleList()+0x64>
 800967c:	2b06      	cmp	r3, #6
 800967e:	d1ed      	bne.n	800965c <RemoteConfig::HandleList()+0x7c>
 8009680:	6833      	ldr	r3, [r6, #0]
 8009682:	799b      	ldrb	r3, [r3, #6]
 8009684:	2b2a      	cmp	r3, #42	; 0x2a
 8009686:	d1e9      	bne.n	800965c <RemoteConfig::HandleList()+0x7c>
 8009688:	f642 1305 	movw	r3, #10501	; 0x2905
 800968c:	9300      	str	r3, [sp, #0]
 800968e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009692:	e7de      	b.n	8009652 <RemoteConfig::HandleList()+0x72>
 8009694:	08014744 	stmdaeq	r1, {r2, r6, r8, r9, sl, lr}
 8009698:	2000a830 	andcs	sl, r0, r0, lsr r8
 800969c:	0801480a 	stmdaeq	r1, {r1, r3, fp, lr}
 80096a0:	200000ec 	andcs	r0, r0, ip, ror #1
 80096a4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80096a8:	08014659 	stmdaeq	r1, {r0, r3, r4, r6, r9, sl, lr}
 80096ac:	08014672 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, lr}

080096b0 <RemoteConfig::HandleDisplayGet()>:
 80096b0:	69c3      	ldr	r3, [r0, #28]
 80096b2:	2b08      	cmp	r3, #8
 80096b4:	d11b      	bne.n	80096ee <RemoteConfig::HandleDisplayGet()+0x3e>
 80096b6:	4b0e      	ldr	r3, [pc, #56]	; (80096f0 <RemoteConfig::HandleDisplayGet()+0x40>)
 80096b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	4d0d      	ldr	r5, [pc, #52]	; (80096f4 <RemoteConfig::HandleDisplayGet()+0x44>)
 80096be:	7c19      	ldrb	r1, [r3, #16]
 80096c0:	4a0d      	ldr	r2, [pc, #52]	; (80096f8 <RemoteConfig::HandleDisplayGet()+0x48>)
 80096c2:	4b0e      	ldr	r3, [pc, #56]	; (80096fc <RemoteConfig::HandleDisplayGet()+0x4c>)
 80096c4:	4604      	mov	r4, r0
 80096c6:	2900      	cmp	r1, #0
 80096c8:	bf18      	it	ne
 80096ca:	4613      	movne	r3, r2
 80096cc:	6828      	ldr	r0, [r5, #0]
 80096ce:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80096d2:	4a0b      	ldr	r2, [pc, #44]	; (8009700 <RemoteConfig::HandleDisplayGet()+0x50>)
 80096d4:	f7ff fdf6 	bl	80092c4 <snprintf>
 80096d8:	f642 1305 	movw	r3, #10501	; 0x2905
 80096dc:	9300      	str	r3, [sp, #0]
 80096de:	b282      	uxth	r2, r0
 80096e0:	69a3      	ldr	r3, [r4, #24]
 80096e2:	6829      	ldr	r1, [r5, #0]
 80096e4:	7d20      	ldrb	r0, [r4, #20]
 80096e6:	f005 fe19 	bl	800f31c <udp_send>
 80096ea:	b003      	add	sp, #12
 80096ec:	bd30      	pop	{r4, r5, pc}
 80096ee:	4770      	bx	lr
 80096f0:	2000ae08 	andcs	sl, r0, r8, lsl #28
 80096f4:	200000ec 	andcs	r0, r0, ip, ror #1
 80096f8:	0801468b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, lr}
 80096fc:	08014688 	stmdaeq	r1, {r3, r7, r9, sl, lr}
 8009700:	0801468f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, lr}

08009704 <RemoteConfig::HandleTftpGet()>:
 8009704:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009706:	4604      	mov	r4, r0
 8009708:	f000 fd74 	bl	800a1f4 <RemoteConfig::PlatformHandleTftpGet()>
 800970c:	69e3      	ldr	r3, [r4, #28]
 800970e:	2b05      	cmp	r3, #5
 8009710:	d116      	bne.n	8009740 <RemoteConfig::HandleTftpGet()+0x3c>
 8009712:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009716:	4d0b      	ldr	r5, [pc, #44]	; (8009744 <RemoteConfig::HandleTftpGet()+0x40>)
 8009718:	4a0b      	ldr	r2, [pc, #44]	; (8009748 <RemoteConfig::HandleTftpGet()+0x44>)
 800971a:	4b0c      	ldr	r3, [pc, #48]	; (800974c <RemoteConfig::HandleTftpGet()+0x48>)
 800971c:	6828      	ldr	r0, [r5, #0]
 800971e:	2900      	cmp	r1, #0
 8009720:	bf08      	it	eq
 8009722:	4613      	moveq	r3, r2
 8009724:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009728:	4a09      	ldr	r2, [pc, #36]	; (8009750 <RemoteConfig::HandleTftpGet()+0x4c>)
 800972a:	f7ff fdcb 	bl	80092c4 <snprintf>
 800972e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009732:	b282      	uxth	r2, r0
 8009734:	9300      	str	r3, [sp, #0]
 8009736:	6829      	ldr	r1, [r5, #0]
 8009738:	69a3      	ldr	r3, [r4, #24]
 800973a:	7d20      	ldrb	r0, [r4, #20]
 800973c:	f005 fdee 	bl	800f31c <udp_send>
 8009740:	b003      	add	sp, #12
 8009742:	bd30      	pop	{r4, r5, pc}
 8009744:	200000ec 	andcs	r0, r0, ip, ror #1
 8009748:	0801468b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, lr}
 800974c:	08014688 	stmdaeq	r1, {r3, r7, r9, sl, lr}
 8009750:	0801469b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, lr}

08009754 <RemoteConfig::HandleVersion()>:
 8009754:	69c3      	ldr	r3, [r0, #28]
 8009756:	2b08      	cmp	r3, #8
 8009758:	d114      	bne.n	8009784 <RemoteConfig::HandleVersion()+0x30>
 800975a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800975c:	4d0a      	ldr	r5, [pc, #40]	; (8009788 <RemoteConfig::HandleVersion()+0x34>)
 800975e:	4604      	mov	r4, r0
 8009760:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009764:	4b09      	ldr	r3, [pc, #36]	; (800978c <RemoteConfig::HandleVersion()+0x38>)
 8009766:	4a0a      	ldr	r2, [pc, #40]	; (8009790 <RemoteConfig::HandleVersion()+0x3c>)
 8009768:	6828      	ldr	r0, [r5, #0]
 800976a:	f7ff fdab 	bl	80092c4 <snprintf>
 800976e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009772:	9300      	str	r3, [sp, #0]
 8009774:	b282      	uxth	r2, r0
 8009776:	69a3      	ldr	r3, [r4, #24]
 8009778:	6829      	ldr	r1, [r5, #0]
 800977a:	7d20      	ldrb	r0, [r4, #20]
 800977c:	f005 fdce 	bl	800f31c <udp_send>
 8009780:	b003      	add	sp, #12
 8009782:	bd30      	pop	{r4, r5, pc}
 8009784:	4770      	bx	lr
 8009786:	bf00      	nop
 8009788:	200000ec 	andcs	r0, r0, ip, ror #1
 800978c:	2000aeae 	andcs	sl, r0, lr, lsr #29
 8009790:	080146a4 	stmdaeq	r1, {r2, r5, r7, r9, sl, lr}

08009794 <RemoteConfig::HandleUptime()>:
 8009794:	7bc3      	ldrb	r3, [r0, #15]
 8009796:	b1e3      	cbz	r3, 80097d2 <RemoteConfig::HandleUptime()+0x3e>
 8009798:	4b0e      	ldr	r3, [pc, #56]	; (80097d4 <RemoteConfig::HandleUptime()+0x40>)
 800979a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800979c:	681a      	ldr	r2, [r3, #0]
 800979e:	69c3      	ldr	r3, [r0, #28]
 80097a0:	4604      	mov	r4, r0
 80097a2:	2b07      	cmp	r3, #7
 80097a4:	d113      	bne.n	80097ce <RemoteConfig::HandleUptime()+0x3a>
 80097a6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80097aa:	4d0b      	ldr	r5, [pc, #44]	; (80097d8 <RemoteConfig::HandleUptime()+0x44>)
 80097ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80097b0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80097b4:	4a09      	ldr	r2, [pc, #36]	; (80097dc <RemoteConfig::HandleUptime()+0x48>)
 80097b6:	6828      	ldr	r0, [r5, #0]
 80097b8:	f7ff fd84 	bl	80092c4 <snprintf>
 80097bc:	f642 1305 	movw	r3, #10501	; 0x2905
 80097c0:	9300      	str	r3, [sp, #0]
 80097c2:	b282      	uxth	r2, r0
 80097c4:	69a3      	ldr	r3, [r4, #24]
 80097c6:	6829      	ldr	r1, [r5, #0]
 80097c8:	7d20      	ldrb	r0, [r4, #20]
 80097ca:	f005 fda7 	bl	800f31c <udp_send>
 80097ce:	b003      	add	sp, #12
 80097d0:	bd30      	pop	{r4, r5, pc}
 80097d2:	4770      	bx	lr
 80097d4:	2000af0c 	andcs	sl, r0, ip, lsl #30
 80097d8:	200000ec 	andcs	r0, r0, ip, ror #1
 80097dc:	080146af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, lr}

080097e0 <Display::Status(Display7SegmentMessage)>:
 80097e0:	7c43      	ldrb	r3, [r0, #17]
 80097e2:	b1bb      	cbz	r3, 8009814 <Display::Status(Display7SegmentMessage)+0x34>
 80097e4:	b513      	push	{r0, r1, r4, lr}
 80097e6:	2312      	movs	r3, #18
 80097e8:	43c9      	mvns	r1, r1
 80097ea:	4604      	mov	r4, r0
 80097ec:	f88d 3004 	strb.w	r3, [sp, #4]
 80097f0:	7a00      	ldrb	r0, [r0, #8]
 80097f2:	f3c1 2307 	ubfx	r3, r1, #8, #8
 80097f6:	f88d 3005 	strb.w	r3, [sp, #5]
 80097fa:	f88d 1006 	strb.w	r1, [sp, #6]
 80097fe:	f009 fc2f 	bl	8013060 <gd32_i2c_set_address>
 8009802:	68e0      	ldr	r0, [r4, #12]
 8009804:	f009 fc24 	bl	8013050 <gd32_i2c_set_baudrate>
 8009808:	2103      	movs	r1, #3
 800980a:	a801      	add	r0, sp, #4
 800980c:	f009 fc2e 	bl	801306c <gd32_i2c_write>
 8009810:	b002      	add	sp, #8
 8009812:	bd10      	pop	{r4, pc}
 8009814:	4770      	bx	lr
	...

08009818 <RemoteConfig::HandleDisplaySet()>:
 8009818:	b508      	push	{r3, lr}
 800981a:	69c3      	ldr	r3, [r0, #28]
 800981c:	2b09      	cmp	r3, #9
 800981e:	d10a      	bne.n	8009836 <RemoteConfig::HandleDisplaySet()+0x1e>
 8009820:	4b05      	ldr	r3, [pc, #20]	; (8009838 <RemoteConfig::HandleDisplaySet()+0x20>)
 8009822:	681b      	ldr	r3, [r3, #0]
 8009824:	7a59      	ldrb	r1, [r3, #9]
 8009826:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800982a:	4259      	negs	r1, r3
 800982c:	4159      	adcs	r1, r3
 800982e:	4b03      	ldr	r3, [pc, #12]	; (800983c <RemoteConfig::HandleDisplaySet()+0x24>)
 8009830:	6818      	ldr	r0, [r3, #0]
 8009832:	f7fe ff85 	bl	8008740 <Display::SetSleep(bool)>
 8009836:	bd08      	pop	{r3, pc}
 8009838:	200000ec 	andcs	r0, r0, ip, ror #1
 800983c:	2000ae08 	andcs	sl, r0, r8, lsl #28

08009840 <RemoteConfig::HandleTftpSet()>:
 8009840:	69c3      	ldr	r3, [r0, #28]
 8009842:	2b06      	cmp	r3, #6
 8009844:	d127      	bne.n	8009896 <RemoteConfig::HandleTftpSet()+0x56>
 8009846:	b570      	push	{r4, r5, r6, lr}
 8009848:	4b13      	ldr	r3, [pc, #76]	; (8009898 <RemoteConfig::HandleTftpSet()+0x58>)
 800984a:	4e14      	ldr	r6, [pc, #80]	; (800989c <RemoteConfig::HandleTftpSet()+0x5c>)
 800984c:	681b      	ldr	r3, [r3, #0]
 800984e:	4604      	mov	r4, r0
 8009850:	799b      	ldrb	r3, [r3, #6]
 8009852:	6835      	ldr	r5, [r6, #0]
 8009854:	2b30      	cmp	r3, #48	; 0x30
 8009856:	bf14      	ite	ne
 8009858:	2301      	movne	r3, #1
 800985a:	2300      	moveq	r3, #0
 800985c:	f880 3020 	strb.w	r3, [r0, #32]
 8009860:	d012      	beq.n	8009888 <RemoteConfig::HandleTftpSet()+0x48>
 8009862:	4628      	mov	r0, r5
 8009864:	2100      	movs	r1, #0
 8009866:	f7fe ff6b 	bl	8008740 <Display::SetSleep(bool)>
 800986a:	6835      	ldr	r5, [r6, #0]
 800986c:	490c      	ldr	r1, [pc, #48]	; (80098a0 <RemoteConfig::HandleTftpSet()+0x60>)
 800986e:	4628      	mov	r0, r5
 8009870:	f7fe ff08 	bl	8008684 <Display::TextStatus(char const*)>
 8009874:	f244 0171 	movw	r1, #16497	; 0x4071
 8009878:	4628      	mov	r0, r5
 800987a:	f7ff ffb1 	bl	80097e0 <Display::Status(Display7SegmentMessage)>
 800987e:	4620      	mov	r0, r4
 8009880:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009884:	f000 bcae 	b.w	800a1e4 <RemoteConfig::PlatformHandleTftpSet()>
 8009888:	4906      	ldr	r1, [pc, #24]	; (80098a4 <RemoteConfig::HandleTftpSet()+0x64>)
 800988a:	4628      	mov	r0, r5
 800988c:	f7fe fefa 	bl	8008684 <Display::TextStatus(char const*)>
 8009890:	f248 0171 	movw	r1, #32881	; 0x8071
 8009894:	e7f0      	b.n	8009878 <RemoteConfig::HandleTftpSet()+0x38>
 8009896:	4770      	bx	lr
 8009898:	200000ec 	andcs	r0, r0, ip, ror #1
 800989c:	2000ae08 	andcs	sl, r0, r8, lsl #28
 80098a0:	080146bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, lr}
 80098a4:	080146ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, lr}

080098a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80098a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098ac:	2500      	movs	r5, #0
 80098ae:	461f      	mov	r7, r3
 80098b0:	6083      	str	r3, [r0, #8]
 80098b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80098b6:	4690      	mov	r8, r2
 80098b8:	4689      	mov	r9, r1
 80098ba:	4e12      	ldr	r6, [pc, #72]	; (8009904 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 80098bc:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80098c0:	f8df a044 	ldr.w	sl, [pc, #68]	; 8009908 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 80098c4:	4b11      	ldr	r3, [pc, #68]	; (800990c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 80098c6:	e9c0 1200 	strd	r1, r2, [r0]
 80098ca:	4604      	mov	r4, r0
 80098cc:	6018      	str	r0, [r3, #0]
 80098ce:	4631      	mov	r1, r6
 80098d0:	60c5      	str	r5, [r0, #12]
 80098d2:	8205      	strh	r5, [r0, #16]
 80098d4:	61c5      	str	r5, [r0, #28]
 80098d6:	f880 5020 	strb.w	r5, [r0, #32]
 80098da:	f8da 0000 	ldr.w	r0, [sl]
 80098de:	f006 f9eb 	bl	800fcb8 <Network::MacAddressCopyTo(unsigned char*)>
 80098e2:	f642 1105 	movw	r1, #10501	; 0x2905
 80098e6:	f8da 0000 	ldr.w	r0, [sl]
 80098ea:	f886 9006 	strb.w	r9, [r6, #6]
 80098ee:	f886 8007 	strb.w	r8, [r6, #7]
 80098f2:	7237      	strb	r7, [r6, #8]
 80098f4:	7275      	strb	r5, [r6, #9]
 80098f6:	f006 f9d9 	bl	800fcac <Network::Begin(unsigned short)>
 80098fa:	6160      	str	r0, [r4, #20]
 80098fc:	4620      	mov	r0, r4
 80098fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009902:	bf00      	nop
 8009904:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009908:	2000a830 	andcs	sl, r0, r0, lsr r8
 800990c:	20000114 	andcs	r0, r0, r4, lsl r1

08009910 <RemoteConfig::GetStringNode() const>:
 8009910:	2012      	movs	r0, #18
 8009912:	4b03      	ldr	r3, [pc, #12]	; (8009920 <RemoteConfig::GetStringNode() const+0x10>)
 8009914:	799a      	ldrb	r2, [r3, #6]
 8009916:	4b03      	ldr	r3, [pc, #12]	; (8009924 <RemoteConfig::GetStringNode() const+0x14>)
 8009918:	fb00 3002 	mla	r0, r0, r2, r3
 800991c:	4770      	bx	lr
 800991e:	bf00      	nop
 8009920:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009924:	08014744 	stmdaeq	r1, {r2, r6, r8, r9, sl, lr}

08009928 <RemoteConfig::GetStringOutput() const>:
 8009928:	200c      	movs	r0, #12
 800992a:	4b03      	ldr	r3, [pc, #12]	; (8009938 <RemoteConfig::GetStringOutput() const+0x10>)
 800992c:	79da      	ldrb	r2, [r3, #7]
 800992e:	4b03      	ldr	r3, [pc, #12]	; (800993c <RemoteConfig::GetStringOutput() const+0x14>)
 8009930:	fb00 3002 	mla	r0, r0, r2, r3
 8009934:	4770      	bx	lr
 8009936:	bf00      	nop
 8009938:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800993c:	0801480a 	stmdaeq	r1, {r1, r3, fp, lr}

08009940 <RemoteConfig::SetDisable(bool)>:
 8009940:	b538      	push	{r3, r4, r5, lr}
 8009942:	4604      	mov	r4, r0
 8009944:	7b03      	ldrb	r3, [r0, #12]
 8009946:	b161      	cbz	r1, 8009962 <RemoteConfig::SetDisable(bool)+0x22>
 8009948:	b953      	cbnz	r3, 8009960 <RemoteConfig::SetDisable(bool)+0x20>
 800994a:	4b0c      	ldr	r3, [pc, #48]	; (800997c <RemoteConfig::SetDisable(bool)+0x3c>)
 800994c:	f642 1105 	movw	r1, #10501	; 0x2905
 8009950:	6818      	ldr	r0, [r3, #0]
 8009952:	f006 f9ae 	bl	800fcb2 <Network::End(unsigned short)>
 8009956:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800995a:	6163      	str	r3, [r4, #20]
 800995c:	2301      	movs	r3, #1
 800995e:	7323      	strb	r3, [r4, #12]
 8009960:	bd38      	pop	{r3, r4, r5, pc}
 8009962:	2b00      	cmp	r3, #0
 8009964:	d0fc      	beq.n	8009960 <RemoteConfig::SetDisable(bool)+0x20>
 8009966:	4b05      	ldr	r3, [pc, #20]	; (800997c <RemoteConfig::SetDisable(bool)+0x3c>)
 8009968:	460d      	mov	r5, r1
 800996a:	6818      	ldr	r0, [r3, #0]
 800996c:	f642 1105 	movw	r1, #10501	; 0x2905
 8009970:	f006 f99c 	bl	800fcac <Network::Begin(unsigned short)>
 8009974:	7325      	strb	r5, [r4, #12]
 8009976:	6160      	str	r0, [r4, #20]
 8009978:	e7f2      	b.n	8009960 <RemoteConfig::SetDisable(bool)+0x20>
 800997a:	bf00      	nop
 800997c:	2000a830 	andcs	sl, r0, r0, lsr r8

08009980 <RemoteConfig::SetDisplayName(char const*)>:
 8009980:	2217      	movs	r2, #23
 8009982:	4809      	ldr	r0, [pc, #36]	; (80099a8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009984:	b508      	push	{r3, lr}
 8009986:	1e4b      	subs	r3, r1, #1
 8009988:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800998c:	b911      	cbnz	r1, 8009994 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800998e:	f008 fcb9 	bl	8012304 <memset>
 8009992:	e003      	b.n	800999c <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009994:	3a01      	subs	r2, #1
 8009996:	f800 1b01 	strb.w	r1, [r0], #1
 800999a:	d1f5      	bne.n	8009988 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800999c:	2200      	movs	r2, #0
 800999e:	4b03      	ldr	r3, [pc, #12]	; (80099ac <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80099a0:	f883 2020 	strb.w	r2, [r3, #32]
 80099a4:	bd08      	pop	{r3, pc}
 80099a6:	bf00      	nop
 80099a8:	200000f9 	strdcs	r0, [r0], -r9
 80099ac:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080099b0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80099b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80099b2:	4604      	mov	r4, r0
 80099b4:	4616      	mov	r6, r2
 80099b6:	460d      	mov	r5, r1
 80099b8:	4f28      	ldr	r7, [pc, #160]	; (8009a5c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 80099ba:	b085      	sub	sp, #20
 80099bc:	b9a9      	cbnz	r1, 80099ea <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 80099be:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80099c2:	6839      	ldr	r1, [r7, #0]
 80099c4:	aa03      	add	r2, sp, #12
 80099c6:	3105      	adds	r1, #5
 80099c8:	9303      	str	r3, [sp, #12]
 80099ca:	f000 fbe1 	bl	800a190 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80099ce:	1e03      	subs	r3, r0, #0
 80099d0:	da1b      	bge.n	8009a0a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80099d2:	f642 1305 	movw	r3, #10501	; 0x2905
 80099d6:	220b      	movs	r2, #11
 80099d8:	9300      	str	r3, [sp, #0]
 80099da:	4921      	ldr	r1, [pc, #132]	; (8009a60 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80099dc:	69a3      	ldr	r3, [r4, #24]
 80099de:	7d20      	ldrb	r0, [r4, #20]
 80099e0:	f005 fc9c 	bl	800f31c <udp_send>
 80099e4:	200c      	movs	r0, #12
 80099e6:	b005      	add	sp, #20
 80099e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099ea:	9203      	str	r2, [sp, #12]
 80099ec:	aa03      	add	r2, sp, #12
 80099ee:	6039      	str	r1, [r7, #0]
 80099f0:	f000 fbce 	bl	800a190 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80099f4:	1e03      	subs	r3, r0, #0
 80099f6:	da08      	bge.n	8009a0a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80099f8:	2e0b      	cmp	r6, #11
 80099fa:	4632      	mov	r2, r6
 80099fc:	4628      	mov	r0, r5
 80099fe:	bf28      	it	cs
 8009a00:	220b      	movcs	r2, #11
 8009a02:	4917      	ldr	r1, [pc, #92]	; (8009a60 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009a04:	f008 fc5c 	bl	80122c0 <memcpy>
 8009a08:	e7ec      	b.n	80099e4 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009a0a:	221c      	movs	r2, #28
 8009a0c:	4353      	muls	r3, r2
 8009a0e:	4915      	ldr	r1, [pc, #84]	; (8009a64 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009a10:	18ca      	adds	r2, r1, r3
 8009a12:	6852      	ldr	r2, [r2, #4]
 8009a14:	58cb      	ldr	r3, [r1, r3]
 8009a16:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009a1a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009a1e:	07d2      	lsls	r2, r2, #31
 8009a20:	bf48      	it	mi
 8009a22:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009a26:	a903      	add	r1, sp, #12
 8009a28:	bf48      	it	mi
 8009a2a:	58d3      	ldrmi	r3, [r2, r3]
 8009a2c:	4798      	blx	r3
 8009a2e:	b95d      	cbnz	r5, 8009a48 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009a30:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a34:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009a38:	9300      	str	r3, [sp, #0]
 8009a3a:	6839      	ldr	r1, [r7, #0]
 8009a3c:	69a3      	ldr	r3, [r4, #24]
 8009a3e:	7d20      	ldrb	r0, [r4, #20]
 8009a40:	f005 fc6c 	bl	800f31c <udp_send>
 8009a44:	9803      	ldr	r0, [sp, #12]
 8009a46:	e7ce      	b.n	80099e6 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009a48:	9a03      	ldr	r2, [sp, #12]
 8009a4a:	4628      	mov	r0, r5
 8009a4c:	42b2      	cmp	r2, r6
 8009a4e:	bf28      	it	cs
 8009a50:	4632      	movcs	r2, r6
 8009a52:	6839      	ldr	r1, [r7, #0]
 8009a54:	f008 fc3f 	bl	80122d6 <memmove>
 8009a58:	e7f4      	b.n	8009a44 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009a5a:	bf00      	nop
 8009a5c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a60:	080146e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, lr}
 8009a64:	080149c8 	stmdaeq	r1, {r3, r6, r7, r8, fp, lr}

08009a68 <RemoteConfig::HandleGetNoParams()>:
 8009a68:	2200      	movs	r2, #0
 8009a6a:	4611      	mov	r1, r2
 8009a6c:	f7ff bfa0 	b.w	80099b0 <RemoteConfig::HandleGet(void*, unsigned int)>

08009a70 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009a70:	b510      	push	{r4, lr}
 8009a72:	460c      	mov	r4, r1
 8009a74:	4b07      	ldr	r3, [pc, #28]	; (8009a94 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009a76:	b08a      	sub	sp, #40	; 0x28
 8009a78:	6819      	ldr	r1, [r3, #0]
 8009a7a:	a801      	add	r0, sp, #4
 8009a7c:	f000 f9e4 	bl	8009e48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009a80:	4905      	ldr	r1, [pc, #20]	; (8009a98 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009a82:	4623      	mov	r3, r4
 8009a84:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009a88:	6809      	ldr	r1, [r1, #0]
 8009a8a:	a801      	add	r0, sp, #4
 8009a8c:	f000 fb00 	bl	800a090 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009a90:	b00a      	add	sp, #40	; 0x28
 8009a92:	bd10      	pop	{r4, pc}
 8009a94:	20002f3c 	andcs	r2, r0, ip, lsr pc
 8009a98:	200000ec 	andcs	r0, r0, ip, ror #1

08009a9c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009a9c:	b510      	push	{r4, lr}
 8009a9e:	460c      	mov	r4, r1
 8009aa0:	4b07      	ldr	r3, [pc, #28]	; (8009ac0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009aa2:	b09a      	sub	sp, #104	; 0x68
 8009aa4:	6819      	ldr	r1, [r3, #0]
 8009aa6:	a801      	add	r0, sp, #4
 8009aa8:	f006 faf6 	bl	8010098 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009aac:	4905      	ldr	r1, [pc, #20]	; (8009ac4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009aae:	4623      	mov	r3, r4
 8009ab0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ab4:	6809      	ldr	r1, [r1, #0]
 8009ab6:	a801      	add	r0, sp, #4
 8009ab8:	f006 fcc4 	bl	8010444 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009abc:	b01a      	add	sp, #104	; 0x68
 8009abe:	bd10      	pop	{r4, pc}
 8009ac0:	20002f38 	andcs	r2, r0, r8, lsr pc
 8009ac4:	200000ec 	andcs	r0, r0, ip, ror #1

08009ac8 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8009ac8:	b510      	push	{r4, lr}
 8009aca:	460c      	mov	r4, r1
 8009acc:	4b07      	ldr	r3, [pc, #28]	; (8009aec <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8009ace:	b08a      	sub	sp, #40	; 0x28
 8009ad0:	6819      	ldr	r1, [r3, #0]
 8009ad2:	a801      	add	r0, sp, #4
 8009ad4:	f001 ffda 	bl	800ba8c <E131Params::E131Params(E131ParamsStore*)>
 8009ad8:	4905      	ldr	r1, [pc, #20]	; (8009af0 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8009ada:	4623      	mov	r3, r4
 8009adc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ae0:	6809      	ldr	r1, [r1, #0]
 8009ae2:	a801      	add	r0, sp, #4
 8009ae4:	f002 fac6 	bl	800c074 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009ae8:	b00a      	add	sp, #40	; 0x28
 8009aea:	bd10      	pop	{r4, pc}
 8009aec:	20002f40 	andcs	r2, r0, r0, asr #30
 8009af0:	200000ec 	andcs	r0, r0, ip, ror #1

08009af4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009af4:	b510      	push	{r4, lr}
 8009af6:	460c      	mov	r4, r1
 8009af8:	4b07      	ldr	r3, [pc, #28]	; (8009b18 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009afa:	b088      	sub	sp, #32
 8009afc:	6819      	ldr	r1, [r3, #0]
 8009afe:	a801      	add	r0, sp, #4
 8009b00:	f002 fdc8 	bl	800c694 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009b04:	4905      	ldr	r1, [pc, #20]	; (8009b1c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009b06:	4623      	mov	r3, r4
 8009b08:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b0c:	6809      	ldr	r1, [r1, #0]
 8009b0e:	a801      	add	r0, sp, #4
 8009b10:	f003 f8c2 	bl	800cc98 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009b14:	b008      	add	sp, #32
 8009b16:	bd10      	pop	{r4, pc}
 8009b18:	20002f44 	andcs	r2, r0, r4, asr #30
 8009b1c:	200000ec 	andcs	r0, r0, ip, ror #1

08009b20 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009b20:	b510      	push	{r4, lr}
 8009b22:	460c      	mov	r4, r1
 8009b24:	4b07      	ldr	r3, [pc, #28]	; (8009b44 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009b26:	b08a      	sub	sp, #40	; 0x28
 8009b28:	6819      	ldr	r1, [r3, #0]
 8009b2a:	4668      	mov	r0, sp
 8009b2c:	f007 fa24 	bl	8010f78 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009b30:	4905      	ldr	r1, [pc, #20]	; (8009b48 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009b32:	4623      	mov	r3, r4
 8009b34:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b38:	4668      	mov	r0, sp
 8009b3a:	6809      	ldr	r1, [r1, #0]
 8009b3c:	f007 fb54 	bl	80111e8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009b40:	b00a      	add	sp, #40	; 0x28
 8009b42:	bd10      	pop	{r4, pc}
 8009b44:	20002f34 	andcs	r2, r0, r4, lsr pc
 8009b48:	200000ec 	andcs	r0, r0, ip, ror #1

08009b4c <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009b4c:	b530      	push	{r4, r5, lr}
 8009b4e:	b085      	sub	sp, #20
 8009b50:	4604      	mov	r4, r0
 8009b52:	9201      	str	r2, [sp, #4]
 8009b54:	b9d1      	cbnz	r1, 8009b8c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009b56:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009b5a:	9303      	str	r3, [sp, #12]
 8009b5c:	4b19      	ldr	r3, [pc, #100]	; (8009bc4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009b5e:	aa03      	add	r2, sp, #12
 8009b60:	6819      	ldr	r1, [r3, #0]
 8009b62:	3101      	adds	r1, #1
 8009b64:	f000 fb14 	bl	800a190 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009b68:	2800      	cmp	r0, #0
 8009b6a:	db0d      	blt.n	8009b88 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009b6c:	221c      	movs	r2, #28
 8009b6e:	4b16      	ldr	r3, [pc, #88]	; (8009bc8 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009b70:	fb02 3300 	mla	r3, r2, r0, r3
 8009b74:	68da      	ldr	r2, [r3, #12]
 8009b76:	689b      	ldr	r3, [r3, #8]
 8009b78:	1051      	asrs	r1, r2, #1
 8009b7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009b7e:	07d2      	lsls	r2, r2, #31
 8009b80:	bf44      	itt	mi
 8009b82:	5862      	ldrmi	r2, [r4, r1]
 8009b84:	58d3      	ldrmi	r3, [r2, r3]
 8009b86:	4798      	blx	r3
 8009b88:	b005      	add	sp, #20
 8009b8a:	bd30      	pop	{r4, r5, pc}
 8009b8c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009b90:	d8fa      	bhi.n	8009b88 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009b92:	4b0e      	ldr	r3, [pc, #56]	; (8009bcc <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009b94:	460d      	mov	r5, r1
 8009b96:	781b      	ldrb	r3, [r3, #0]
 8009b98:	07d9      	lsls	r1, r3, #31
 8009b9a:	d50b      	bpl.n	8009bb4 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009b9c:	782b      	ldrb	r3, [r5, #0]
 8009b9e:	2b7b      	cmp	r3, #123	; 0x7b
 8009ba0:	d108      	bne.n	8009bb4 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009ba2:	1e51      	subs	r1, r2, #1
 8009ba4:	4628      	mov	r0, r5
 8009ba6:	2200      	movs	r2, #0
 8009ba8:	b289      	uxth	r1, r1
 8009baa:	f007 fbd9 	bl	8011360 <properties::convert_json_file(char*, unsigned short, bool)>
 8009bae:	1e02      	subs	r2, r0, #0
 8009bb0:	ddea      	ble.n	8009b88 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009bb2:	b292      	uxth	r2, r2
 8009bb4:	4b03      	ldr	r3, [pc, #12]	; (8009bc4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009bb6:	61e2      	str	r2, [r4, #28]
 8009bb8:	4620      	mov	r0, r4
 8009bba:	601d      	str	r5, [r3, #0]
 8009bbc:	aa01      	add	r2, sp, #4
 8009bbe:	1c69      	adds	r1, r5, #1
 8009bc0:	e7d0      	b.n	8009b64 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009bc2:	bf00      	nop
 8009bc4:	200000ec 	andcs	r0, r0, ip, ror #1
 8009bc8:	080149c8 	stmdaeq	r1, {r3, r6, r7, r8, fp, lr}
 8009bcc:	2000ae04 	andcs	sl, r0, r4, lsl #28

08009bd0 <RemoteConfig::Run()>:
 8009bd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009bd4:	7b05      	ldrb	r5, [r0, #12]
 8009bd6:	2d00      	cmp	r5, #0
 8009bd8:	d156      	bne.n	8009c88 <RemoteConfig::Run()+0xb8>
 8009bda:	4e45      	ldr	r6, [pc, #276]	; (8009cf0 <RemoteConfig::Run()+0x120>)
 8009bdc:	4604      	mov	r4, r0
 8009bde:	f100 0218 	add.w	r2, r0, #24
 8009be2:	4631      	mov	r1, r6
 8009be4:	7d00      	ldrb	r0, [r0, #20]
 8009be6:	f10d 030e 	add.w	r3, sp, #14
 8009bea:	f005 fb71 	bl	800f2d0 <udp_recv2>
 8009bee:	2803      	cmp	r0, #3
 8009bf0:	61e0      	str	r0, [r4, #28]
 8009bf2:	d949      	bls.n	8009c88 <RemoteConfig::Run()+0xb8>
 8009bf4:	6831      	ldr	r1, [r6, #0]
 8009bf6:	1e43      	subs	r3, r0, #1
 8009bf8:	5cca      	ldrb	r2, [r1, r3]
 8009bfa:	2a0a      	cmp	r2, #10
 8009bfc:	bf18      	it	ne
 8009bfe:	4603      	movne	r3, r0
 8009c00:	61e3      	str	r3, [r4, #28]
 8009c02:	7808      	ldrb	r0, [r1, #0]
 8009c04:	283f      	cmp	r0, #63	; 0x3f
 8009c06:	d137      	bne.n	8009c78 <RemoteConfig::Run()+0xa8>
 8009c08:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009cf4 <RemoteConfig::Run()+0x124>
 8009c0c:	462a      	mov	r2, r5
 8009c0e:	4667      	mov	r7, ip
 8009c10:	3b01      	subs	r3, #1
 8009c12:	61e3      	str	r3, [r4, #28]
 8009c14:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009c18:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009c1c:	b16d      	cbz	r5, 8009c3a <RemoteConfig::Run()+0x6a>
 8009c1e:	4283      	cmp	r3, r0
 8009c20:	d80d      	bhi.n	8009c3e <RemoteConfig::Run()+0x6e>
 8009c22:	3201      	adds	r2, #1
 8009c24:	2a09      	cmp	r2, #9
 8009c26:	f10c 0c10 	add.w	ip, ip, #16
 8009c2a:	d1f3      	bne.n	8009c14 <RemoteConfig::Run()+0x44>
 8009c2c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c30:	9300      	str	r3, [sp, #0]
 8009c32:	2208      	movs	r2, #8
 8009c34:	69a3      	ldr	r3, [r4, #24]
 8009c36:	4930      	ldr	r1, [pc, #192]	; (8009cf8 <RemoteConfig::Run()+0x128>)
 8009c38:	e04e      	b.n	8009cd8 <RemoteConfig::Run()+0x108>
 8009c3a:	4283      	cmp	r3, r0
 8009c3c:	d1f1      	bne.n	8009c22 <RemoteConfig::Run()+0x52>
 8009c3e:	460e      	mov	r6, r1
 8009c40:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009c44:	4408      	add	r0, r1
 8009c46:	3d01      	subs	r5, #1
 8009c48:	4286      	cmp	r6, r0
 8009c4a:	d10b      	bne.n	8009c64 <RemoteConfig::Run()+0x94>
 8009c4c:	0113      	lsls	r3, r2, #4
 8009c4e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009c52:	6852      	ldr	r2, [r2, #4]
 8009c54:	58fb      	ldr	r3, [r7, r3]
 8009c56:	1051      	asrs	r1, r2, #1
 8009c58:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009c5c:	07d2      	lsls	r2, r2, #31
 8009c5e:	d408      	bmi.n	8009c72 <RemoteConfig::Run()+0xa2>
 8009c60:	4798      	blx	r3
 8009c62:	e011      	b.n	8009c88 <RemoteConfig::Run()+0xb8>
 8009c64:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009c68:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009c6c:	45f0      	cmp	r8, lr
 8009c6e:	d0eb      	beq.n	8009c48 <RemoteConfig::Run()+0x78>
 8009c70:	e7d7      	b.n	8009c22 <RemoteConfig::Run()+0x52>
 8009c72:	5862      	ldr	r2, [r4, r1]
 8009c74:	58d3      	ldr	r3, [r2, r3]
 8009c76:	e7f3      	b.n	8009c60 <RemoteConfig::Run()+0x90>
 8009c78:	7b62      	ldrb	r2, [r4, #13]
 8009c7a:	b92a      	cbnz	r2, 8009c88 <RemoteConfig::Run()+0xb8>
 8009c7c:	2823      	cmp	r0, #35	; 0x23
 8009c7e:	d106      	bne.n	8009c8e <RemoteConfig::Run()+0xbe>
 8009c80:	4611      	mov	r1, r2
 8009c82:	4620      	mov	r0, r4
 8009c84:	f7ff ff62 	bl	8009b4c <RemoteConfig::HandleSet(void*, unsigned int)>
 8009c88:	b004      	add	sp, #16
 8009c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c8e:	2821      	cmp	r0, #33	; 0x21
 8009c90:	d1fa      	bne.n	8009c88 <RemoteConfig::Run()+0xb8>
 8009c92:	3b01      	subs	r3, #1
 8009c94:	2b05      	cmp	r3, #5
 8009c96:	61e3      	str	r3, [r4, #28]
 8009c98:	d918      	bls.n	8009ccc <RemoteConfig::Run()+0xfc>
 8009c9a:	460a      	mov	r2, r1
 8009c9c:	4608      	mov	r0, r1
 8009c9e:	4d17      	ldr	r5, [pc, #92]	; (8009cfc <RemoteConfig::Run()+0x12c>)
 8009ca0:	f101 0c05 	add.w	ip, r1, #5
 8009ca4:	4560      	cmp	r0, ip
 8009ca6:	d01b      	beq.n	8009ce0 <RemoteConfig::Run()+0x110>
 8009ca8:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009cac:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009cb0:	42b7      	cmp	r7, r6
 8009cb2:	d0f7      	beq.n	8009ca4 <RemoteConfig::Run()+0xd4>
 8009cb4:	2b08      	cmp	r3, #8
 8009cb6:	d909      	bls.n	8009ccc <RemoteConfig::Run()+0xfc>
 8009cb8:	4b11      	ldr	r3, [pc, #68]	; (8009d00 <RemoteConfig::Run()+0x130>)
 8009cba:	3108      	adds	r1, #8
 8009cbc:	428a      	cmp	r2, r1
 8009cbe:	d015      	beq.n	8009cec <RemoteConfig::Run()+0x11c>
 8009cc0:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009cc4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009cc8:	4285      	cmp	r5, r0
 8009cca:	d0f7      	beq.n	8009cbc <RemoteConfig::Run()+0xec>
 8009ccc:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cd0:	2208      	movs	r2, #8
 8009cd2:	9300      	str	r3, [sp, #0]
 8009cd4:	69a3      	ldr	r3, [r4, #24]
 8009cd6:	490b      	ldr	r1, [pc, #44]	; (8009d04 <RemoteConfig::Run()+0x134>)
 8009cd8:	7d20      	ldrb	r0, [r4, #20]
 8009cda:	f005 fb1f 	bl	800f31c <udp_send>
 8009cde:	e7d3      	b.n	8009c88 <RemoteConfig::Run()+0xb8>
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	4a09      	ldr	r2, [pc, #36]	; (8009d08 <RemoteConfig::Run()+0x138>)
 8009ce4:	011b      	lsls	r3, r3, #4
 8009ce6:	4620      	mov	r0, r4
 8009ce8:	58d3      	ldr	r3, [r2, r3]
 8009cea:	e7b9      	b.n	8009c60 <RemoteConfig::Run()+0x90>
 8009cec:	2301      	movs	r3, #1
 8009cee:	e7f8      	b.n	8009ce2 <RemoteConfig::Run()+0x112>
 8009cf0:	200000ec 	andcs	r0, r0, ip, ror #1
 8009cf4:	0801489c 	stmdaeq	r1, {r2, r3, r4, r7, fp, lr}
 8009cf8:	08014705 	stmdaeq	r1, {r0, r2, r8, r9, sl, lr}
 8009cfc:	080146ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, lr}
 8009d00:	080146f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, lr}
 8009d04:	080146fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, lr}
 8009d08:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}

08009d0c <RemoteConfig::HandleSetRconfig()>:
 8009d0c:	b510      	push	{r4, lr}
 8009d0e:	4604      	mov	r4, r0
 8009d10:	4b08      	ldr	r3, [pc, #32]	; (8009d34 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009d12:	b08a      	sub	sp, #40	; 0x28
 8009d14:	6819      	ldr	r1, [r3, #0]
 8009d16:	a801      	add	r0, sp, #4
 8009d18:	f000 f896 	bl	8009e48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d1c:	4b06      	ldr	r3, [pc, #24]	; (8009d38 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009d1e:	69e2      	ldr	r2, [r4, #28]
 8009d20:	6819      	ldr	r1, [r3, #0]
 8009d22:	a801      	add	r0, sp, #4
 8009d24:	f000 f8a6 	bl	8009e74 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009d28:	4621      	mov	r1, r4
 8009d2a:	a801      	add	r0, sp, #4
 8009d2c:	f000 f9bd 	bl	800a0aa <RemoteConfigParams::Set(RemoteConfig*)>
 8009d30:	b00a      	add	sp, #40	; 0x28
 8009d32:	bd10      	pop	{r4, pc}
 8009d34:	20002f3c 	andcs	r2, r0, ip, lsr pc
 8009d38:	200000ec 	andcs	r0, r0, ip, ror #1

08009d3c <RemoteConfig::HandleSetNetworkTxt()>:
 8009d3c:	b510      	push	{r4, lr}
 8009d3e:	4604      	mov	r4, r0
 8009d40:	4b06      	ldr	r3, [pc, #24]	; (8009d5c <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009d42:	b09a      	sub	sp, #104	; 0x68
 8009d44:	6819      	ldr	r1, [r3, #0]
 8009d46:	a801      	add	r0, sp, #4
 8009d48:	f006 f9a6 	bl	8010098 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009d4c:	4b04      	ldr	r3, [pc, #16]	; (8009d60 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009d4e:	69e2      	ldr	r2, [r4, #28]
 8009d50:	6819      	ldr	r1, [r3, #0]
 8009d52:	a801      	add	r0, sp, #4
 8009d54:	f006 f9b8 	bl	80100c8 <NetworkParams::Load(char const*, unsigned int)>
 8009d58:	b01a      	add	sp, #104	; 0x68
 8009d5a:	bd10      	pop	{r4, pc}
 8009d5c:	20002f38 	andcs	r2, r0, r8, lsr pc
 8009d60:	200000ec 	andcs	r0, r0, ip, ror #1

08009d64 <RemoteConfig::HandleSetE131Txt()>:
 8009d64:	b510      	push	{r4, lr}
 8009d66:	4604      	mov	r4, r0
 8009d68:	4b06      	ldr	r3, [pc, #24]	; (8009d84 <RemoteConfig::HandleSetE131Txt()+0x20>)
 8009d6a:	b08a      	sub	sp, #40	; 0x28
 8009d6c:	6819      	ldr	r1, [r3, #0]
 8009d6e:	a801      	add	r0, sp, #4
 8009d70:	f001 fe8c 	bl	800ba8c <E131Params::E131Params(E131ParamsStore*)>
 8009d74:	4b04      	ldr	r3, [pc, #16]	; (8009d88 <RemoteConfig::HandleSetE131Txt()+0x24>)
 8009d76:	69e2      	ldr	r2, [r4, #28]
 8009d78:	6819      	ldr	r1, [r3, #0]
 8009d7a:	a801      	add	r0, sp, #4
 8009d7c:	f001 feb6 	bl	800baec <E131Params::Load(char const*, unsigned int)>
 8009d80:	b00a      	add	sp, #40	; 0x28
 8009d82:	bd10      	pop	{r4, pc}
 8009d84:	20002f40 	andcs	r2, r0, r0, asr #30
 8009d88:	200000ec 	andcs	r0, r0, ip, ror #1

08009d8c <RemoteConfig::HandleSetDevicesTxt()>:
 8009d8c:	b510      	push	{r4, lr}
 8009d8e:	4604      	mov	r4, r0
 8009d90:	4b06      	ldr	r3, [pc, #24]	; (8009dac <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 8009d92:	b088      	sub	sp, #32
 8009d94:	6819      	ldr	r1, [r3, #0]
 8009d96:	a801      	add	r0, sp, #4
 8009d98:	f002 fc7c 	bl	800c694 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009d9c:	4b04      	ldr	r3, [pc, #16]	; (8009db0 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 8009d9e:	69e2      	ldr	r2, [r4, #28]
 8009da0:	6819      	ldr	r1, [r3, #0]
 8009da2:	a801      	add	r0, sp, #4
 8009da4:	f002 fc98 	bl	800c6d8 <PixelDmxParams::Load(char const*, unsigned int)>
 8009da8:	b008      	add	sp, #32
 8009daa:	bd10      	pop	{r4, pc}
 8009dac:	20002f44 	andcs	r2, r0, r4, asr #30
 8009db0:	200000ec 	andcs	r0, r0, ip, ror #1

08009db4 <RemoteConfig::HandleSetDisplayTxt()>:
 8009db4:	b510      	push	{r4, lr}
 8009db6:	4604      	mov	r4, r0
 8009db8:	4b06      	ldr	r3, [pc, #24]	; (8009dd4 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8009dba:	b08a      	sub	sp, #40	; 0x28
 8009dbc:	6819      	ldr	r1, [r3, #0]
 8009dbe:	4668      	mov	r0, sp
 8009dc0:	f007 f8da 	bl	8010f78 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009dc4:	4b04      	ldr	r3, [pc, #16]	; (8009dd8 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8009dc6:	4668      	mov	r0, sp
 8009dc8:	69e2      	ldr	r2, [r4, #28]
 8009dca:	6819      	ldr	r1, [r3, #0]
 8009dcc:	f007 f8ee 	bl	8010fac <DisplayUdfParams::Load(char const*, unsigned int)>
 8009dd0:	b00a      	add	sp, #40	; 0x28
 8009dd2:	bd10      	pop	{r4, pc}
 8009dd4:	20002f34 	andcs	r2, r0, r4, lsr pc
 8009dd8:	200000ec 	andcs	r0, r0, ip, ror #1

08009ddc <RemoteConfig::HandleFactory()>:
 8009ddc:	b538      	push	{r3, r4, r5, lr}
 8009dde:	2400      	movs	r4, #0
 8009de0:	4d04      	ldr	r5, [pc, #16]	; (8009df4 <RemoteConfig::HandleFactory()+0x18>)
 8009de2:	4621      	mov	r1, r4
 8009de4:	6828      	ldr	r0, [r5, #0]
 8009de6:	3401      	adds	r4, #1
 8009de8:	f004 fb46 	bl	800e478 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009dec:	2c1c      	cmp	r4, #28
 8009dee:	d1f8      	bne.n	8009de2 <RemoteConfig::HandleFactory()+0x6>
 8009df0:	bd38      	pop	{r3, r4, r5, pc}
 8009df2:	bf00      	nop
 8009df4:	20002f2c 	andcs	r2, r0, ip, lsr #30

08009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009df8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009dfa:	460b      	mov	r3, r1
 8009dfc:	8885      	ldrh	r5, [r0, #4]
 8009dfe:	88c1      	ldrh	r1, [r0, #6]
 8009e00:	42a9      	cmp	r1, r5
 8009e02:	d214      	bcs.n	8009e2e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009e04:	4604      	mov	r4, r0
 8009e06:	6800      	ldr	r0, [r0, #0]
 8009e08:	1a6d      	subs	r5, r5, r1
 8009e0a:	4408      	add	r0, r1
 8009e0c:	7a21      	ldrb	r1, [r4, #8]
 8009e0e:	b91a      	cbnz	r2, 8009e18 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009e10:	b919      	cbnz	r1, 8009e1a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009e12:	4a0a      	ldr	r2, [pc, #40]	; (8009e3c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009e14:	9100      	str	r1, [sp, #0]
 8009e16:	e002      	b.n	8009e1e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e18:	b159      	cbz	r1, 8009e32 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009e1a:	9200      	str	r2, [sp, #0]
 8009e1c:	4a08      	ldr	r2, [pc, #32]	; (8009e40 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009e1e:	4629      	mov	r1, r5
 8009e20:	f7ff fa50 	bl	80092c4 <snprintf>
 8009e24:	4285      	cmp	r5, r0
 8009e26:	bfa2      	ittt	ge
 8009e28:	88e3      	ldrhge	r3, [r4, #6]
 8009e2a:	181b      	addge	r3, r3, r0
 8009e2c:	80e3      	strhge	r3, [r4, #6]
 8009e2e:	b003      	add	sp, #12
 8009e30:	bd30      	pop	{r4, r5, pc}
 8009e32:	2201      	movs	r2, #1
 8009e34:	9200      	str	r2, [sp, #0]
 8009e36:	4a03      	ldr	r2, [pc, #12]	; (8009e44 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009e38:	e7f1      	b.n	8009e1e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e3a:	bf00      	nop
 8009e3c:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 8009e40:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 8009e44:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

08009e48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009e48:	b510      	push	{r4, lr}
 8009e4a:	4604      	mov	r4, r0
 8009e4c:	2220      	movs	r2, #32
 8009e4e:	f840 1b04 	str.w	r1, [r0], #4
 8009e52:	2100      	movs	r1, #0
 8009e54:	f008 fa56 	bl	8012304 <memset>
 8009e58:	4620      	mov	r0, r4
 8009e5a:	bd10      	pop	{r4, pc}

08009e5c <RemoteConfigParams::Load()>:
 8009e5c:	b508      	push	{r3, lr}
 8009e5e:	2300      	movs	r3, #0
 8009e60:	4601      	mov	r1, r0
 8009e62:	6043      	str	r3, [r0, #4]
 8009e64:	6800      	ldr	r0, [r0, #0]
 8009e66:	b120      	cbz	r0, 8009e72 <RemoteConfigParams::Load()+0x16>
 8009e68:	6803      	ldr	r3, [r0, #0]
 8009e6a:	3104      	adds	r1, #4
 8009e6c:	68db      	ldr	r3, [r3, #12]
 8009e6e:	4798      	blx	r3
 8009e70:	2001      	movs	r0, #1
 8009e72:	bd08      	pop	{r3, pc}

08009e74 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009e74:	2300      	movs	r3, #0
 8009e76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e78:	460d      	mov	r5, r1
 8009e7a:	4616      	mov	r6, r2
 8009e7c:	4604      	mov	r4, r0
 8009e7e:	6043      	str	r3, [r0, #4]
 8009e80:	4602      	mov	r2, r0
 8009e82:	490a      	ldr	r1, [pc, #40]	; (8009eac <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009e84:	4668      	mov	r0, sp
 8009e86:	f007 fbbd 	bl	8011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009e8a:	4632      	mov	r2, r6
 8009e8c:	4629      	mov	r1, r5
 8009e8e:	4668      	mov	r0, sp
 8009e90:	f007 fbbc 	bl	801160c <ReadConfigFile::Read(char const*, unsigned int)>
 8009e94:	4621      	mov	r1, r4
 8009e96:	f851 0b04 	ldr.w	r0, [r1], #4
 8009e9a:	6803      	ldr	r3, [r0, #0]
 8009e9c:	689b      	ldr	r3, [r3, #8]
 8009e9e:	4798      	blx	r3
 8009ea0:	4668      	mov	r0, sp
 8009ea2:	f007 fbb2 	bl	801160a <ReadConfigFile::~ReadConfigFile()>
 8009ea6:	b002      	add	sp, #8
 8009ea8:	bd70      	pop	{r4, r5, r6, pc}
 8009eaa:	bf00      	nop
 8009eac:	08009f6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, pc}

08009eb0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009eb0:	6843      	ldr	r3, [r0, #4]
 8009eb2:	b111      	cbz	r1, 8009eba <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009eb4:	4313      	orrs	r3, r2
 8009eb6:	6043      	str	r3, [r0, #4]
 8009eb8:	4770      	bx	lr
 8009eba:	ea23 0302 	bic.w	r3, r3, r2
 8009ebe:	e7fa      	b.n	8009eb6 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009ec0 <RemoteConfigParams::callbackFunction(char const*)>:
 8009ec0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ec2:	460d      	mov	r5, r1
 8009ec4:	4604      	mov	r4, r0
 8009ec6:	4923      	ldr	r1, [pc, #140]	; (8009f54 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009ec8:	4628      	mov	r0, r5
 8009eca:	f10d 0203 	add.w	r2, sp, #3
 8009ece:	f007 fcd5 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ed2:	b940      	cbnz	r0, 8009ee6 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009ed4:	2201      	movs	r2, #1
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009edc:	b003      	add	sp, #12
 8009ede:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009ee2:	f7ff bfe5 	b.w	8009eb0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009ee6:	4628      	mov	r0, r5
 8009ee8:	491b      	ldr	r1, [pc, #108]	; (8009f58 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009eea:	f10d 0203 	add.w	r2, sp, #3
 8009eee:	f007 fcc5 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ef2:	b908      	cbnz	r0, 8009ef8 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8009ef4:	2202      	movs	r2, #2
 8009ef6:	e7ee      	b.n	8009ed6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009ef8:	4628      	mov	r0, r5
 8009efa:	4918      	ldr	r1, [pc, #96]	; (8009f5c <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009efc:	f10d 0203 	add.w	r2, sp, #3
 8009f00:	f007 fcbc 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f04:	b908      	cbnz	r0, 8009f0a <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8009f06:	2204      	movs	r2, #4
 8009f08:	e7e5      	b.n	8009ed6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f0a:	4628      	mov	r0, r5
 8009f0c:	4914      	ldr	r1, [pc, #80]	; (8009f60 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009f0e:	f10d 0203 	add.w	r2, sp, #3
 8009f12:	f007 fcb3 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f16:	b908      	cbnz	r0, 8009f1c <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8009f18:	2208      	movs	r2, #8
 8009f1a:	e7dc      	b.n	8009ed6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	4911      	ldr	r1, [pc, #68]	; (8009f64 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009f20:	f10d 0203 	add.w	r2, sp, #3
 8009f24:	f007 fcaa 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f28:	b908      	cbnz	r0, 8009f2e <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8009f2a:	2220      	movs	r2, #32
 8009f2c:	e7d3      	b.n	8009ed6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f2e:	2317      	movs	r3, #23
 8009f30:	4628      	mov	r0, r5
 8009f32:	9301      	str	r3, [sp, #4]
 8009f34:	490c      	ldr	r1, [pc, #48]	; (8009f68 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009f36:	ab01      	add	r3, sp, #4
 8009f38:	f104 020c 	add.w	r2, r4, #12
 8009f3c:	f007 fb9a 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009f40:	b930      	cbnz	r0, 8009f50 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8009f42:	9b01      	ldr	r3, [sp, #4]
 8009f44:	4423      	add	r3, r4
 8009f46:	7318      	strb	r0, [r3, #12]
 8009f48:	6863      	ldr	r3, [r4, #4]
 8009f4a:	f043 0310 	orr.w	r3, r3, #16
 8009f4e:	6063      	str	r3, [r4, #4]
 8009f50:	b003      	add	sp, #12
 8009f52:	bd30      	pop	{r4, r5, pc}
 8009f54:	08014d39 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, fp, lr}
 8009f58:	08014d5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sl, fp, lr}
 8009f5c:	08014d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, lr}
 8009f60:	08014d76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, fp, lr}
 8009f64:	08014d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, lr}
 8009f68:	08014d4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, fp, lr}

08009f6c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009f6c:	f7ff bfa8 	b.w	8009ec0 <RemoteConfigParams::callbackFunction(char const*)>

08009f70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009f70:	b570      	push	{r4, r5, r6, lr}
 8009f72:	4604      	mov	r4, r0
 8009f74:	4615      	mov	r5, r2
 8009f76:	461e      	mov	r6, r3
 8009f78:	b086      	sub	sp, #24
 8009f7a:	3004      	adds	r0, #4
 8009f7c:	2900      	cmp	r1, #0
 8009f7e:	d041      	beq.n	800a004 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009f80:	2220      	movs	r2, #32
 8009f82:	f008 f9a8 	bl	80122d6 <memmove>
 8009f86:	4633      	mov	r3, r6
 8009f88:	462a      	mov	r2, r5
 8009f8a:	4937      	ldr	r1, [pc, #220]	; (800a068 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009f8c:	a803      	add	r0, sp, #12
 8009f8e:	f007 fa99 	bl	80114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009f92:	6862      	ldr	r2, [r4, #4]
 8009f94:	4935      	ldr	r1, [pc, #212]	; (800a06c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009f96:	f002 0201 	and.w	r2, r2, #1
 8009f9a:	a803      	add	r0, sp, #12
 8009f9c:	f7ff ff2c 	bl	8009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fa0:	6862      	ldr	r2, [r4, #4]
 8009fa2:	4933      	ldr	r1, [pc, #204]	; (800a070 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009fa4:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009fa8:	a803      	add	r0, sp, #12
 8009faa:	f7ff ff25 	bl	8009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fae:	6862      	ldr	r2, [r4, #4]
 8009fb0:	4930      	ldr	r1, [pc, #192]	; (800a074 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8009fb2:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009fb6:	a803      	add	r0, sp, #12
 8009fb8:	f7ff ff1e 	bl	8009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fbc:	6862      	ldr	r2, [r4, #4]
 8009fbe:	492e      	ldr	r1, [pc, #184]	; (800a078 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009fc0:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009fc4:	a803      	add	r0, sp, #12
 8009fc6:	f7ff ff17 	bl	8009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fca:	6862      	ldr	r2, [r4, #4]
 8009fcc:	492b      	ldr	r1, [pc, #172]	; (800a07c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009fce:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009fd2:	a803      	add	r0, sp, #12
 8009fd4:	f7ff ff10 	bl	8009df8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fd8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009fdc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009fe0:	6862      	ldr	r2, [r4, #4]
 8009fe2:	42ab      	cmp	r3, r5
 8009fe4:	d223      	bcs.n	800a02e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 8009fe6:	9803      	ldr	r0, [sp, #12]
 8009fe8:	06d2      	lsls	r2, r2, #27
 8009fea:	4418      	add	r0, r3
 8009fec:	eba5 0503 	sub.w	r5, r5, r3
 8009ff0:	f104 040c 	add.w	r4, r4, #12
 8009ff4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009ff8:	d40b      	bmi.n	800a012 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8009ffa:	b95b      	cbnz	r3, 800a014 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8009ffc:	4b20      	ldr	r3, [pc, #128]	; (800a080 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009ffe:	4a21      	ldr	r2, [pc, #132]	; (800a084 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a000:	9400      	str	r4, [sp, #0]
 800a002:	e00a      	b.n	800a01a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a004:	6823      	ldr	r3, [r4, #0]
 800a006:	4601      	mov	r1, r0
 800a008:	681a      	ldr	r2, [r3, #0]
 800a00a:	4618      	mov	r0, r3
 800a00c:	68d2      	ldr	r2, [r2, #12]
 800a00e:	4790      	blx	r2
 800a010:	e7b9      	b.n	8009f86 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a012:	b32b      	cbz	r3, 800a060 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a014:	4b1a      	ldr	r3, [pc, #104]	; (800a080 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a016:	4a1c      	ldr	r2, [pc, #112]	; (800a088 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a018:	9400      	str	r4, [sp, #0]
 800a01a:	4629      	mov	r1, r5
 800a01c:	f7ff f952 	bl	80092c4 <snprintf>
 800a020:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a024:	4285      	cmp	r5, r0
 800a026:	bfa4      	itt	ge
 800a028:	181b      	addge	r3, r3, r0
 800a02a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a02e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a032:	b17b      	cbz	r3, 800a054 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a034:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a038:	9b03      	ldr	r3, [sp, #12]
 800a03a:	4413      	add	r3, r2
 800a03c:	227d      	movs	r2, #125	; 0x7d
 800a03e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a042:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a046:	9903      	ldr	r1, [sp, #12]
 800a048:	54ca      	strb	r2, [r1, r3]
 800a04a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a04e:	3301      	adds	r3, #1
 800a050:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a054:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a058:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a05a:	601a      	str	r2, [r3, #0]
 800a05c:	b006      	add	sp, #24
 800a05e:	bd70      	pop	{r4, r5, r6, pc}
 800a060:	4b07      	ldr	r3, [pc, #28]	; (800a080 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a062:	4a0a      	ldr	r2, [pc, #40]	; (800a08c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a064:	9400      	str	r4, [sp, #0]
 800a066:	e7d8      	b.n	800a01a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a068:	08014d41 	stmdaeq	r1, {r0, r6, r8, sl, fp, lr}
 800a06c:	08014d39 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, fp, lr}
 800a070:	08014d5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sl, fp, lr}
 800a074:	08014d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, lr}
 800a078:	08014d76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, fp, lr}
 800a07c:	08014d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, lr}
 800a080:	08014d4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, fp, lr}
 800a084:	08014968 	stmdaeq	r1, {r3, r5, r6, r8, fp, lr}
 800a088:	0801495d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, lr}
 800a08c:	08014969 	stmdaeq	r1, {r0, r3, r5, r6, r8, fp, lr}

0800a090 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a090:	b513      	push	{r0, r1, r4, lr}
 800a092:	6804      	ldr	r4, [r0, #0]
 800a094:	b914      	cbnz	r4, 800a09c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a096:	601c      	str	r4, [r3, #0]
 800a098:	b002      	add	sp, #8
 800a09a:	bd10      	pop	{r4, pc}
 800a09c:	9300      	str	r3, [sp, #0]
 800a09e:	4613      	mov	r3, r2
 800a0a0:	460a      	mov	r2, r1
 800a0a2:	2100      	movs	r1, #0
 800a0a4:	f7ff ff64 	bl	8009f70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a0a8:	e7f6      	b.n	800a098 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a0aa <RemoteConfigParams::Set(RemoteConfig*)>:
 800a0aa:	b538      	push	{r3, r4, r5, lr}
 800a0ac:	460c      	mov	r4, r1
 800a0ae:	4605      	mov	r5, r0
 800a0b0:	6841      	ldr	r1, [r0, #4]
 800a0b2:	4620      	mov	r0, r4
 800a0b4:	f001 0101 	and.w	r1, r1, #1
 800a0b8:	f7ff fc42 	bl	8009940 <RemoteConfig::SetDisable(bool)>
 800a0bc:	686b      	ldr	r3, [r5, #4]
 800a0be:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a0c2:	7362      	strb	r2, [r4, #13]
 800a0c4:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a0c8:	73a2      	strb	r2, [r4, #14]
 800a0ca:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a0ce:	73e2      	strb	r2, [r4, #15]
 800a0d0:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a0d4:	06db      	lsls	r3, r3, #27
 800a0d6:	7422      	strb	r2, [r4, #16]
 800a0d8:	d506      	bpl.n	800a0e8 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a0da:	4620      	mov	r0, r4
 800a0dc:	f105 010c 	add.w	r1, r5, #12
 800a0e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a0e4:	f7ff bc4c 	b.w	8009980 <RemoteConfig::SetDisplayName(char const*)>
 800a0e8:	bd38      	pop	{r3, r4, r5, pc}

0800a0ea <RemoteConfigParams::Dump()>:
 800a0ea:	4770      	bx	lr

0800a0ec <RemoteConfig::HandleReboot()>:
 800a0ec:	7b83      	ldrb	r3, [r0, #14]
 800a0ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a0f0:	2b00      	cmp	r3, #0
 800a0f2:	d03c      	beq.n	800a16e <RemoteConfig::HandleReboot()+0x82>
 800a0f4:	2301      	movs	r3, #1
 800a0f6:	4c1f      	ldr	r4, [pc, #124]	; (800a174 <RemoteConfig::HandleReboot()+0x88>)
 800a0f8:	7443      	strb	r3, [r0, #17]
 800a0fa:	6825      	ldr	r5, [r4, #0]
 800a0fc:	69a8      	ldr	r0, [r5, #24]
 800a0fe:	b138      	cbz	r0, 800a110 <RemoteConfig::HandleReboot()+0x24>
 800a100:	2100      	movs	r1, #0
 800a102:	6803      	ldr	r3, [r0, #0]
 800a104:	7429      	strb	r1, [r5, #16]
 800a106:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a108:	4798      	blx	r3
 800a10a:	4b1b      	ldr	r3, [pc, #108]	; (800a178 <RemoteConfig::HandleReboot()+0x8c>)
 800a10c:	681b      	ldr	r3, [r3, #0]
 800a10e:	606b      	str	r3, [r5, #4]
 800a110:	4d1a      	ldr	r5, [pc, #104]	; (800a17c <RemoteConfig::HandleReboot()+0x90>)
 800a112:	6828      	ldr	r0, [r5, #0]
 800a114:	f004 fa34 	bl	800e580 <SpiFlashStore::Flash()>
 800a118:	2800      	cmp	r0, #0
 800a11a:	d1fa      	bne.n	800a112 <RemoteConfig::HandleReboot()+0x26>
 800a11c:	4b18      	ldr	r3, [pc, #96]	; (800a180 <RemoteConfig::HandleReboot()+0x94>)
 800a11e:	6818      	ldr	r0, [r3, #0]
 800a120:	f005 fdbc 	bl	800fc9c <Network::Shutdown()>
 800a124:	4817      	ldr	r0, [pc, #92]	; (800a184 <RemoteConfig::HandleReboot()+0x98>)
 800a126:	f7ff f8a5 	bl	8009274 <printf>
 800a12a:	6823      	ldr	r3, [r4, #0]
 800a12c:	6998      	ldr	r0, [r3, #24]
 800a12e:	b110      	cbz	r0, 800a136 <RemoteConfig::HandleReboot()+0x4a>
 800a130:	6803      	ldr	r3, [r0, #0]
 800a132:	68db      	ldr	r3, [r3, #12]
 800a134:	4798      	blx	r3
 800a136:	6824      	ldr	r4, [r4, #0]
 800a138:	4913      	ldr	r1, [pc, #76]	; (800a188 <RemoteConfig::HandleReboot()+0x9c>)
 800a13a:	4620      	mov	r0, r4
 800a13c:	f7fe faa2 	bl	8008684 <Display::TextStatus(char const*)>
 800a140:	7c63      	ldrb	r3, [r4, #17]
 800a142:	b183      	cbz	r3, 800a166 <RemoteConfig::HandleReboot()+0x7a>
 800a144:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a148:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a14c:	23bf      	movs	r3, #191	; 0xbf
 800a14e:	7a20      	ldrb	r0, [r4, #8]
 800a150:	f88d 3006 	strb.w	r3, [sp, #6]
 800a154:	f008 ff84 	bl	8013060 <gd32_i2c_set_address>
 800a158:	68e0      	ldr	r0, [r4, #12]
 800a15a:	f008 ff79 	bl	8013050 <gd32_i2c_set_baudrate>
 800a15e:	2103      	movs	r1, #3
 800a160:	a801      	add	r0, sp, #4
 800a162:	f008 ff83 	bl	801306c <gd32_i2c_write>
 800a166:	4b09      	ldr	r3, [pc, #36]	; (800a18c <RemoteConfig::HandleReboot()+0xa0>)
 800a168:	6818      	ldr	r0, [r3, #0]
 800a16a:	f007 ffb5 	bl	80120d8 <Hardware::Reboot()>
 800a16e:	b003      	add	sp, #12
 800a170:	bd30      	pop	{r4, r5, pc}
 800a172:	bf00      	nop
 800a174:	2000ae08 	andcs	sl, r0, r8, lsl #28
 800a178:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800a17c:	20002f2c 	andcs	r2, r0, ip, lsr #30
 800a180:	2000a830 	andcs	sl, r0, r0, lsr r8
 800a184:	08014970 	stmdaeq	r1, {r4, r5, r6, r8, fp, lr}
 800a188:	0801497f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}
 800a18c:	2000aef8 	strdcs	sl, [r0], -r8

0800a190 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a190:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a194:	2000      	movs	r0, #0
 800a196:	4d12      	ldr	r5, [pc, #72]	; (800a1e0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a198:	f10d 0c04 	add.w	ip, sp, #4
 800a19c:	6814      	ldr	r4, [r2, #0]
 800a19e:	7d2b      	ldrb	r3, [r5, #20]
 800a1a0:	692e      	ldr	r6, [r5, #16]
 800a1a2:	42a3      	cmp	r3, r4
 800a1a4:	bf34      	ite	cc
 800a1a6:	4664      	movcc	r4, ip
 800a1a8:	4614      	movcs	r4, r2
 800a1aa:	9301      	str	r3, [sp, #4]
 800a1ac:	6827      	ldr	r7, [r4, #0]
 800a1ae:	460c      	mov	r4, r1
 800a1b0:	3e01      	subs	r6, #1
 800a1b2:	440f      	add	r7, r1
 800a1b4:	42bc      	cmp	r4, r7
 800a1b6:	d101      	bne.n	800a1bc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a1b8:	6013      	str	r3, [r2, #0]
 800a1ba:	e00c      	b.n	800a1d6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a1bc:	f894 8000 	ldrb.w	r8, [r4]
 800a1c0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a1c4:	45f0      	cmp	r8, lr
 800a1c6:	d009      	beq.n	800a1dc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a1c8:	3001      	adds	r0, #1
 800a1ca:	2805      	cmp	r0, #5
 800a1cc:	f105 051c 	add.w	r5, r5, #28
 800a1d0:	d1e4      	bne.n	800a19c <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a1d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a1d6:	b002      	add	sp, #8
 800a1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1dc:	3401      	adds	r4, #1
 800a1de:	e7e9      	b.n	800a1b4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a1e0:	080149c8 	stmdaeq	r1, {r3, r6, r7, r8, fp, lr}

0800a1e4 <RemoteConfig::PlatformHandleTftpSet()>:
 800a1e4:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a1e8:	b109      	cbz	r1, 800a1ee <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a1ea:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a1ee:	2002      	movs	r0, #2
 800a1f0:	f008 ba7a 	b.w	80126e8 <bkp_data_write>

0800a1f4 <RemoteConfig::PlatformHandleTftpGet()>:
 800a1f4:	b510      	push	{r4, lr}
 800a1f6:	4604      	mov	r4, r0
 800a1f8:	2002      	movs	r0, #2
 800a1fa:	f008 fa8b 	bl	8012714 <bkp_data_read>
 800a1fe:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a202:	1ac3      	subs	r3, r0, r3
 800a204:	4258      	negs	r0, r3
 800a206:	4158      	adcs	r0, r3
 800a208:	f884 0020 	strb.w	r0, [r4, #32]
 800a20c:	bd10      	pop	{r4, pc}

0800a20e <strcmp>:
 800a20e:	1e43      	subs	r3, r0, #1
 800a210:	3901      	subs	r1, #1
 800a212:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a216:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a21a:	4290      	cmp	r0, r2
 800a21c:	d001      	beq.n	800a222 <strcmp+0x14>
 800a21e:	1a80      	subs	r0, r0, r2
 800a220:	e001      	b.n	800a226 <strcmp+0x18>
 800a222:	2800      	cmp	r0, #0
 800a224:	d1f5      	bne.n	800a212 <strcmp+0x4>
 800a226:	4770      	bx	lr

0800a228 <strcasecmp>:
 800a228:	b530      	push	{r4, r5, lr}
 800a22a:	1e42      	subs	r2, r0, #1
 800a22c:	3901      	subs	r1, #1
 800a22e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a232:	4604      	mov	r4, r0
 800a234:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a238:	2b19      	cmp	r3, #25
 800a23a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a23e:	bf98      	it	ls
 800a240:	f100 0420 	addls.w	r4, r0, #32
 800a244:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a248:	2d19      	cmp	r5, #25
 800a24a:	bf98      	it	ls
 800a24c:	3320      	addls	r3, #32
 800a24e:	42a3      	cmp	r3, r4
 800a250:	d001      	beq.n	800a256 <strcasecmp+0x2e>
 800a252:	1ae0      	subs	r0, r4, r3
 800a254:	e001      	b.n	800a25a <strcasecmp+0x32>
 800a256:	2800      	cmp	r0, #0
 800a258:	d1e9      	bne.n	800a22e <strcasecmp+0x6>
 800a25a:	bd30      	pop	{r4, r5, pc}

0800a25c <PropertiesConfig::EnableJSON(bool)>:
 800a25c:	4a04      	ldr	r2, [pc, #16]	; (800a270 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a25e:	7813      	ldrb	r3, [r2, #0]
 800a260:	b118      	cbz	r0, 800a26a <PropertiesConfig::EnableJSON(bool)+0xe>
 800a262:	f043 0301 	orr.w	r3, r3, #1
 800a266:	7013      	strb	r3, [r2, #0]
 800a268:	4770      	bx	lr
 800a26a:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a26e:	e7fa      	b.n	800a266 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a270:	2000ae04 	andcs	sl, r0, r4, lsl #28

0800a274 <HttpDaemon::HttpDaemon()>:
 800a274:	4a08      	ldr	r2, [pc, #32]	; (800a298 <HttpDaemon::HttpDaemon()+0x24>)
 800a276:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a27a:	6002      	str	r2, [r0, #0]
 800a27c:	2200      	movs	r2, #0
 800a27e:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a282:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a286:	2102      	movs	r1, #2
 800a288:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a28c:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a290:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a294:	60c2      	str	r2, [r0, #12]
 800a296:	4770      	bx	lr
 800a298:	08014cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, lr}

0800a29c <HttpDaemon::Start()>:
 800a29c:	4b04      	ldr	r3, [pc, #16]	; (800a2b0 <HttpDaemon::Start()+0x14>)
 800a29e:	b510      	push	{r4, lr}
 800a2a0:	2150      	movs	r1, #80	; 0x50
 800a2a2:	4604      	mov	r4, r0
 800a2a4:	6818      	ldr	r0, [r3, #0]
 800a2a6:	f005 feeb 	bl	8010080 <Network::TcpBegin(unsigned short)>
 800a2aa:	6120      	str	r0, [r4, #16]
 800a2ac:	bd10      	pop	{r4, pc}
 800a2ae:	bf00      	nop
 800a2b0:	2000a830 	andcs	sl, r0, r0, lsr r8

0800a2b4 <HttpDaemon::ParseMethod(char*)>:
 800a2b4:	b538      	push	{r3, r4, r5, lr}
 800a2b6:	4604      	mov	r4, r0
 800a2b8:	4608      	mov	r0, r1
 800a2ba:	491a      	ldr	r1, [pc, #104]	; (800a324 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a2bc:	f008 f84c 	bl	8012358 <strtok>
 800a2c0:	4605      	mov	r5, r0
 800a2c2:	b360      	cbz	r0, 800a31e <HttpDaemon::ParseMethod(char*)+0x6a>
 800a2c4:	4918      	ldr	r1, [pc, #96]	; (800a328 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a2c6:	f7ff ffa2 	bl	800a20e <strcmp>
 800a2ca:	b128      	cbz	r0, 800a2d8 <HttpDaemon::ParseMethod(char*)+0x24>
 800a2cc:	4628      	mov	r0, r5
 800a2ce:	4917      	ldr	r1, [pc, #92]	; (800a32c <HttpDaemon::ParseMethod(char*)+0x78>)
 800a2d0:	f7ff ff9d 	bl	800a20e <strcmp>
 800a2d4:	bb18      	cbnz	r0, 800a31e <HttpDaemon::ParseMethod(char*)+0x6a>
 800a2d6:	2001      	movs	r0, #1
 800a2d8:	61e0      	str	r0, [r4, #28]
 800a2da:	4912      	ldr	r1, [pc, #72]	; (800a324 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a2dc:	2000      	movs	r0, #0
 800a2de:	f008 f83b 	bl	8012358 <strtok>
 800a2e2:	b910      	cbnz	r0, 800a2ea <HttpDaemon::ParseMethod(char*)+0x36>
 800a2e4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a2e8:	bd38      	pop	{r3, r4, r5, pc}
 800a2ea:	6060      	str	r0, [r4, #4]
 800a2ec:	4910      	ldr	r1, [pc, #64]	; (800a330 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a2ee:	2000      	movs	r0, #0
 800a2f0:	f008 f832 	bl	8012358 <strtok>
 800a2f4:	2800      	cmp	r0, #0
 800a2f6:	d0f5      	beq.n	800a2e4 <HttpDaemon::ParseMethod(char*)+0x30>
 800a2f8:	490e      	ldr	r1, [pc, #56]	; (800a334 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a2fa:	f7ff ff88 	bl	800a20e <strcmp>
 800a2fe:	2800      	cmp	r0, #0
 800a300:	d1f0      	bne.n	800a2e4 <HttpDaemon::ParseMethod(char*)+0x30>
 800a302:	490d      	ldr	r1, [pc, #52]	; (800a338 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a304:	f008 f828 	bl	8012358 <strtok>
 800a308:	2800      	cmp	r0, #0
 800a30a:	d0eb      	beq.n	800a2e4 <HttpDaemon::ParseMethod(char*)+0x30>
 800a30c:	490b      	ldr	r1, [pc, #44]	; (800a33c <HttpDaemon::ParseMethod(char*)+0x88>)
 800a30e:	f7ff ff7e 	bl	800a20e <strcmp>
 800a312:	2800      	cmp	r0, #0
 800a314:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a318:	bf08      	it	eq
 800a31a:	20c8      	moveq	r0, #200	; 0xc8
 800a31c:	e7e4      	b.n	800a2e8 <HttpDaemon::ParseMethod(char*)+0x34>
 800a31e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a322:	e7e1      	b.n	800a2e8 <HttpDaemon::ParseMethod(char*)+0x34>
 800a324:	080146df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, lr}
 800a328:	08014a54 	stmdaeq	r1, {r2, r4, r6, r9, fp, lr}
 800a32c:	08014a58 	stmdaeq	r1, {r3, r4, r6, r9, fp, lr}
 800a330:	08014ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, lr}
 800a334:	08014a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, lr}
 800a338:	08014a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, lr}
 800a33c:	08014a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, lr}

0800a340 <HttpDaemon::ParseHeaderField(char*)>:
 800a340:	b538      	push	{r3, r4, r5, lr}
 800a342:	4605      	mov	r5, r0
 800a344:	4608      	mov	r0, r1
 800a346:	491d      	ldr	r1, [pc, #116]	; (800a3bc <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a348:	f008 f806 	bl	8012358 <strtok>
 800a34c:	4604      	mov	r4, r0
 800a34e:	b910      	cbnz	r0, 800a356 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a350:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a354:	bd38      	pop	{r3, r4, r5, pc}
 800a356:	491a      	ldr	r1, [pc, #104]	; (800a3c0 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a358:	f7ff ff66 	bl	800a228 <strcasecmp>
 800a35c:	b970      	cbnz	r0, 800a37c <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a35e:	4919      	ldr	r1, [pc, #100]	; (800a3c4 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a360:	f007 fffa 	bl	8012358 <strtok>
 800a364:	2800      	cmp	r0, #0
 800a366:	d0f3      	beq.n	800a350 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a368:	4917      	ldr	r1, [pc, #92]	; (800a3c8 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a36a:	f7ff ff50 	bl	800a20e <strcmp>
 800a36e:	b108      	cbz	r0, 800a374 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a370:	20c8      	movs	r0, #200	; 0xc8
 800a372:	e7ef      	b.n	800a354 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a374:	2301      	movs	r3, #1
 800a376:	f885 3020 	strb.w	r3, [r5, #32]
 800a37a:	e7f9      	b.n	800a370 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a37c:	4620      	mov	r0, r4
 800a37e:	4913      	ldr	r1, [pc, #76]	; (800a3cc <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a380:	f7ff ff52 	bl	800a228 <strcasecmp>
 800a384:	4604      	mov	r4, r0
 800a386:	2800      	cmp	r0, #0
 800a388:	d1f2      	bne.n	800a370 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a38a:	4911      	ldr	r1, [pc, #68]	; (800a3d0 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a38c:	f007 ffe4 	bl	8012358 <strtok>
 800a390:	2800      	cmp	r0, #0
 800a392:	d0dd      	beq.n	800a350 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a394:	1e42      	subs	r2, r0, #1
 800a396:	4623      	mov	r3, r4
 800a398:	200a      	movs	r0, #10
 800a39a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a39e:	b909      	cbnz	r1, 800a3a4 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a3a0:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a3a2:	e7e5      	b.n	800a370 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3a4:	3930      	subs	r1, #48	; 0x30
 800a3a6:	2909      	cmp	r1, #9
 800a3a8:	d8d2      	bhi.n	800a350 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3aa:	fb00 1303 	mla	r3, r0, r3, r1
 800a3ae:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a3b2:	d9f2      	bls.n	800a39a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a3b4:	f240 109d 	movw	r0, #413	; 0x19d
 800a3b8:	e7cc      	b.n	800a354 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a3ba:	bf00      	nop
 800a3bc:	08014a69 	stmdaeq	r1, {r0, r3, r5, r6, r9, fp, lr}
 800a3c0:	08014a6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, fp, lr}
 800a3c4:	08014a78 	stmdaeq	r1, {r3, r4, r5, r6, r9, fp, lr}
 800a3c8:	08014a7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, fp, lr}
 800a3cc:	08014a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, lr}
 800a3d0:	080146df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, lr}

0800a3d4 <HttpDaemon::ParseRequest()>:
 800a3d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3d6:	2400      	movs	r4, #0
 800a3d8:	4605      	mov	r5, r0
 800a3da:	4622      	mov	r2, r4
 800a3dc:	4626      	mov	r6, r4
 800a3de:	68c1      	ldr	r1, [r0, #12]
 800a3e0:	f880 4020 	strb.w	r4, [r0, #32]
 800a3e4:	6244      	str	r4, [r0, #36]	; 0x24
 800a3e6:	8aab      	ldrh	r3, [r5, #20]
 800a3e8:	42a3      	cmp	r3, r4
 800a3ea:	d91d      	bls.n	800a428 <HttpDaemon::ParseRequest()+0x54>
 800a3ec:	68eb      	ldr	r3, [r5, #12]
 800a3ee:	5d18      	ldrb	r0, [r3, r4]
 800a3f0:	280a      	cmp	r0, #10
 800a3f2:	d10e      	bne.n	800a412 <HttpDaemon::ParseRequest()+0x3e>
 800a3f4:	4423      	add	r3, r4
 800a3f6:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a3fa:	1c57      	adds	r7, r2, #1
 800a3fc:	b962      	cbnz	r2, 800a418 <HttpDaemon::ParseRequest()+0x44>
 800a3fe:	4628      	mov	r0, r5
 800a400:	f7ff ff58 	bl	800a2b4 <HttpDaemon::ParseMethod(char*)>
 800a404:	28c8      	cmp	r0, #200	; 0xc8
 800a406:	d110      	bne.n	800a42a <HttpDaemon::ParseRequest()+0x56>
 800a408:	463a      	mov	r2, r7
 800a40a:	68e9      	ldr	r1, [r5, #12]
 800a40c:	3401      	adds	r4, #1
 800a40e:	b2a4      	uxth	r4, r4
 800a410:	4421      	add	r1, r4
 800a412:	3401      	adds	r4, #1
 800a414:	b2a4      	uxth	r4, r4
 800a416:	e7e6      	b.n	800a3e6 <HttpDaemon::ParseRequest()+0x12>
 800a418:	7808      	ldrb	r0, [r1, #0]
 800a41a:	b968      	cbnz	r0, 800a438 <HttpDaemon::ParseRequest()+0x64>
 800a41c:	696b      	ldr	r3, [r5, #20]
 800a41e:	3b01      	subs	r3, #1
 800a420:	1b1b      	subs	r3, r3, r4
 800a422:	b29b      	uxth	r3, r3
 800a424:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a426:	b90b      	cbnz	r3, 800a42c <HttpDaemon::ParseRequest()+0x58>
 800a428:	20c8      	movs	r0, #200	; 0xc8
 800a42a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a42c:	68ea      	ldr	r2, [r5, #12]
 800a42e:	3401      	adds	r4, #1
 800a430:	4414      	add	r4, r2
 800a432:	60ac      	str	r4, [r5, #8]
 800a434:	54e0      	strb	r0, [r4, r3]
 800a436:	e7f7      	b.n	800a428 <HttpDaemon::ParseRequest()+0x54>
 800a438:	4628      	mov	r0, r5
 800a43a:	f7ff ff81 	bl	800a340 <HttpDaemon::ParseHeaderField(char*)>
 800a43e:	e7e1      	b.n	800a404 <HttpDaemon::ParseRequest()+0x30>

0800a440 <HttpDaemon::HandleGetTxt()>:
 800a440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a444:	6846      	ldr	r6, [r0, #4]
 800a446:	4607      	mov	r7, r0
 800a448:	1db4      	adds	r4, r6, #6
 800a44a:	4622      	mov	r2, r4
 800a44c:	4613      	mov	r3, r2
 800a44e:	7819      	ldrb	r1, [r3, #0]
 800a450:	3201      	adds	r2, #1
 800a452:	2900      	cmp	r1, #0
 800a454:	d1fa      	bne.n	800a44c <HttpDaemon::HandleGetTxt()+0xc>
 800a456:	1b1b      	subs	r3, r3, r4
 800a458:	2b04      	cmp	r3, #4
 800a45a:	d803      	bhi.n	800a464 <HttpDaemon::HandleGetTxt()+0x24>
 800a45c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a464:	3b04      	subs	r3, #4
 800a466:	4914      	ldr	r1, [pc, #80]	; (800a4b8 <HttpDaemon::HandleGetTxt()+0x78>)
 800a468:	18e0      	adds	r0, r4, r3
 800a46a:	f7ff fed0 	bl	800a20e <strcmp>
 800a46e:	2800      	cmp	r0, #0
 800a470:	d1f4      	bne.n	800a45c <HttpDaemon::HandleGetTxt()+0x1c>
 800a472:	4b12      	ldr	r3, [pc, #72]	; (800a4bc <HttpDaemon::HandleGetTxt()+0x7c>)
 800a474:	2001      	movs	r0, #1
 800a476:	f893 8000 	ldrb.w	r8, [r3]
 800a47a:	f7ff feef 	bl	800a25c <PropertiesConfig::EnableJSON(bool)>
 800a47e:	4b10      	ldr	r3, [pc, #64]	; (800a4c0 <HttpDaemon::HandleGetTxt()+0x80>)
 800a480:	f240 529b 	movw	r2, #1435	; 0x59b
 800a484:	4621      	mov	r1, r4
 800a486:	6818      	ldr	r0, [r3, #0]
 800a488:	f7ff fa92 	bl	80099b0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a48c:	4605      	mov	r5, r0
 800a48e:	f008 0801 	and.w	r8, r8, #1
 800a492:	4640      	mov	r0, r8
 800a494:	f7ff fee2 	bl	800a25c <PropertiesConfig::EnableJSON(bool)>
 800a498:	2d00      	cmp	r5, #0
 800a49a:	d0df      	beq.n	800a45c <HttpDaemon::HandleGetTxt()+0x1c>
 800a49c:	847d      	strh	r5, [r7, #34]	; 0x22
 800a49e:	4b09      	ldr	r3, [pc, #36]	; (800a4c4 <HttpDaemon::HandleGetTxt()+0x84>)
 800a4a0:	3506      	adds	r5, #6
 800a4a2:	442e      	add	r6, r5
 800a4a4:	42b4      	cmp	r4, r6
 800a4a6:	d101      	bne.n	800a4ac <HttpDaemon::HandleGetTxt()+0x6c>
 800a4a8:	20c8      	movs	r0, #200	; 0xc8
 800a4aa:	e7d9      	b.n	800a460 <HttpDaemon::HandleGetTxt()+0x20>
 800a4ac:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a4b0:	f803 2b01 	strb.w	r2, [r3], #1
 800a4b4:	e7f6      	b.n	800a4a4 <HttpDaemon::HandleGetTxt()+0x64>
 800a4b6:	bf00      	nop
 800a4b8:	080149b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, fp, lr}
 800a4bc:	2000ae04 	andcs	sl, r0, r4, lsl #28
 800a4c0:	20000114 	andcs	r0, r0, r4, lsl r1
 800a4c4:	20000118 	andcs	r0, r0, r8, lsl r1

0800a4c8 <HttpDaemon::HandleGet()>:
 800a4c8:	b570      	push	{r4, r5, r6, lr}
 800a4ca:	6845      	ldr	r5, [r0, #4]
 800a4cc:	4604      	mov	r4, r0
 800a4ce:	493e      	ldr	r1, [pc, #248]	; (800a5c8 <HttpDaemon::HandleGet()+0x100>)
 800a4d0:	4628      	mov	r0, r5
 800a4d2:	f7ff fe9c 	bl	800a20e <strcmp>
 800a4d6:	b120      	cbz	r0, 800a4e2 <HttpDaemon::HandleGet()+0x1a>
 800a4d8:	4628      	mov	r0, r5
 800a4da:	493c      	ldr	r1, [pc, #240]	; (800a5cc <HttpDaemon::HandleGet()+0x104>)
 800a4dc:	f7ff fe97 	bl	800a20e <strcmp>
 800a4e0:	b950      	cbnz	r0, 800a4f8 <HttpDaemon::HandleGet()+0x30>
 800a4e2:	4b3b      	ldr	r3, [pc, #236]	; (800a5d0 <HttpDaemon::HandleGet()+0x108>)
 800a4e4:	493b      	ldr	r1, [pc, #236]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a4e6:	483c      	ldr	r0, [pc, #240]	; (800a5d8 <HttpDaemon::HandleGet()+0x110>)
 800a4e8:	6023      	str	r3, [r4, #0]
 800a4ea:	f000 fa67 	bl	800a9bc <get_file_content(char const*, char*)>
 800a4ee:	2800      	cmp	r0, #0
 800a4f0:	dd2f      	ble.n	800a552 <HttpDaemon::HandleGet()+0x8a>
 800a4f2:	8460      	strh	r0, [r4, #34]	; 0x22
 800a4f4:	20c8      	movs	r0, #200	; 0xc8
 800a4f6:	bd70      	pop	{r4, r5, r6, pc}
 800a4f8:	4628      	mov	r0, r5
 800a4fa:	4938      	ldr	r1, [pc, #224]	; (800a5dc <HttpDaemon::HandleGet()+0x114>)
 800a4fc:	f7ff fe87 	bl	800a20e <strcmp>
 800a500:	b920      	cbnz	r0, 800a50c <HttpDaemon::HandleGet()+0x44>
 800a502:	4b37      	ldr	r3, [pc, #220]	; (800a5e0 <HttpDaemon::HandleGet()+0x118>)
 800a504:	4933      	ldr	r1, [pc, #204]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a506:	4837      	ldr	r0, [pc, #220]	; (800a5e4 <HttpDaemon::HandleGet()+0x11c>)
 800a508:	6023      	str	r3, [r4, #0]
 800a50a:	e7ee      	b.n	800a4ea <HttpDaemon::HandleGet()+0x22>
 800a50c:	4628      	mov	r0, r5
 800a50e:	4936      	ldr	r1, [pc, #216]	; (800a5e8 <HttpDaemon::HandleGet()+0x120>)
 800a510:	f7ff fe7d 	bl	800a20e <strcmp>
 800a514:	b190      	cbz	r0, 800a53c <HttpDaemon::HandleGet()+0x74>
 800a516:	4a35      	ldr	r2, [pc, #212]	; (800a5ec <HttpDaemon::HandleGet()+0x124>)
 800a518:	1e6b      	subs	r3, r5, #1
 800a51a:	1d69      	adds	r1, r5, #5
 800a51c:	428b      	cmp	r3, r1
 800a51e:	d112      	bne.n	800a546 <HttpDaemon::HandleGet()+0x7e>
 800a520:	4b33      	ldr	r3, [pc, #204]	; (800a5f0 <HttpDaemon::HandleGet()+0x128>)
 800a522:	3506      	adds	r5, #6
 800a524:	4628      	mov	r0, r5
 800a526:	4933      	ldr	r1, [pc, #204]	; (800a5f4 <HttpDaemon::HandleGet()+0x12c>)
 800a528:	6023      	str	r3, [r4, #0]
 800a52a:	f7ff fe70 	bl	800a20e <strcmp>
 800a52e:	b998      	cbnz	r0, 800a558 <HttpDaemon::HandleGet()+0x90>
 800a530:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a534:	4827      	ldr	r0, [pc, #156]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a536:	f000 f9c9 	bl	800a8cc <remoteconfig::json_get_list(char*, unsigned short)>
 800a53a:	e7d8      	b.n	800a4ee <HttpDaemon::HandleGet()+0x26>
 800a53c:	4b2e      	ldr	r3, [pc, #184]	; (800a5f8 <HttpDaemon::HandleGet()+0x130>)
 800a53e:	4925      	ldr	r1, [pc, #148]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a540:	482e      	ldr	r0, [pc, #184]	; (800a5fc <HttpDaemon::HandleGet()+0x134>)
 800a542:	6023      	str	r3, [r4, #0]
 800a544:	e7d1      	b.n	800a4ea <HttpDaemon::HandleGet()+0x22>
 800a546:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a54a:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a54e:	4286      	cmp	r6, r0
 800a550:	d0e4      	beq.n	800a51c <HttpDaemon::HandleGet()+0x54>
 800a552:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a556:	e7ce      	b.n	800a4f6 <HttpDaemon::HandleGet()+0x2e>
 800a558:	4628      	mov	r0, r5
 800a55a:	4929      	ldr	r1, [pc, #164]	; (800a600 <HttpDaemon::HandleGet()+0x138>)
 800a55c:	f7ff fe57 	bl	800a20e <strcmp>
 800a560:	b928      	cbnz	r0, 800a56e <HttpDaemon::HandleGet()+0xa6>
 800a562:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a566:	481b      	ldr	r0, [pc, #108]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a568:	f000 f9e4 	bl	800a934 <remoteconfig::json_get_version(char*, unsigned short)>
 800a56c:	e7bf      	b.n	800a4ee <HttpDaemon::HandleGet()+0x26>
 800a56e:	4628      	mov	r0, r5
 800a570:	4924      	ldr	r1, [pc, #144]	; (800a604 <HttpDaemon::HandleGet()+0x13c>)
 800a572:	f7ff fe4c 	bl	800a20e <strcmp>
 800a576:	b948      	cbnz	r0, 800a58c <HttpDaemon::HandleGet()+0xc4>
 800a578:	4b23      	ldr	r3, [pc, #140]	; (800a608 <HttpDaemon::HandleGet()+0x140>)
 800a57a:	681b      	ldr	r3, [r3, #0]
 800a57c:	7bdb      	ldrb	r3, [r3, #15]
 800a57e:	b303      	cbz	r3, 800a5c2 <HttpDaemon::HandleGet()+0xfa>
 800a580:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a584:	4813      	ldr	r0, [pc, #76]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a586:	f000 f9f1 	bl	800a96c <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a58a:	e7b0      	b.n	800a4ee <HttpDaemon::HandleGet()+0x26>
 800a58c:	4628      	mov	r0, r5
 800a58e:	491f      	ldr	r1, [pc, #124]	; (800a60c <HttpDaemon::HandleGet()+0x144>)
 800a590:	f7ff fe3d 	bl	800a20e <strcmp>
 800a594:	b928      	cbnz	r0, 800a5a2 <HttpDaemon::HandleGet()+0xda>
 800a596:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a59a:	480e      	ldr	r0, [pc, #56]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a59c:	f000 f9f6 	bl	800a98c <remoteconfig::json_get_display(char*, unsigned short)>
 800a5a0:	e7a5      	b.n	800a4ee <HttpDaemon::HandleGet()+0x26>
 800a5a2:	4628      	mov	r0, r5
 800a5a4:	491a      	ldr	r1, [pc, #104]	; (800a610 <HttpDaemon::HandleGet()+0x148>)
 800a5a6:	f7ff fe32 	bl	800a20e <strcmp>
 800a5aa:	b928      	cbnz	r0, 800a5b8 <HttpDaemon::HandleGet()+0xf0>
 800a5ac:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5b0:	4808      	ldr	r0, [pc, #32]	; (800a5d4 <HttpDaemon::HandleGet()+0x10c>)
 800a5b2:	f000 f9fb 	bl	800a9ac <remoteconfig::json_get_directory(char*, unsigned short)>
 800a5b6:	e79a      	b.n	800a4ee <HttpDaemon::HandleGet()+0x26>
 800a5b8:	4620      	mov	r0, r4
 800a5ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5be:	f7ff bf3f 	b.w	800a440 <HttpDaemon::HandleGetTxt()>
 800a5c2:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a5c6:	e796      	b.n	800a4f6 <HttpDaemon::HandleGet()+0x2e>
 800a5c8:	08014ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, lr}
 800a5cc:	08014a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, lr}
 800a5d0:	08014cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, lr}
 800a5d4:	20000118 	andcs	r0, r0, r8, lsl r1
 800a5d8:	08014a9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, fp, lr}
 800a5dc:	08014aa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, fp, lr}
 800a5e0:	08014cd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, fp, lr}
 800a5e4:	08014aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, lr}
 800a5e8:	08014ab3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, fp, lr}
 800a5ec:	08014abd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, fp, lr}
 800a5f0:	08014d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, lr}
 800a5f4:	08014ac4 	stmdaeq	r1, {r2, r6, r7, r9, fp, lr}
 800a5f8:	08014cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, lr}
 800a5fc:	08014ab4 	stmdaeq	r1, {r2, r4, r5, r7, r9, fp, lr}
 800a600:	08014ac9 	stmdaeq	r1, {r0, r3, r6, r7, r9, fp, lr}
 800a604:	08014ad1 	stmdaeq	r1, {r0, r4, r6, r7, r9, fp, lr}
 800a608:	20000114 	andcs	r0, r0, r4, lsl r1
 800a60c:	08014ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, lr}
 800a610:	08014ae0 	stmdaeq	r1, {r5, r6, r7, r9, fp, lr}

0800a614 <HttpDaemon::HandlePost(bool)>:
 800a614:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a616:	4604      	mov	r4, r0
 800a618:	2900      	cmp	r1, #0
 800a61a:	f040 808a 	bne.w	800a732 <HttpDaemon::HandlePost(bool)+0x11e>
 800a61e:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a622:	2b00      	cmp	r3, #0
 800a624:	d05a      	beq.n	800a6dc <HttpDaemon::HandlePost(bool)+0xc8>
 800a626:	6845      	ldr	r5, [r0, #4]
 800a628:	4944      	ldr	r1, [pc, #272]	; (800a73c <HttpDaemon::HandlePost(bool)+0x128>)
 800a62a:	4628      	mov	r0, r5
 800a62c:	f7ff fdef 	bl	800a20e <strcmp>
 800a630:	2800      	cmp	r0, #0
 800a632:	bf0c      	ite	eq
 800a634:	2301      	moveq	r3, #1
 800a636:	2300      	movne	r3, #0
 800a638:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a63c:	d052      	beq.n	800a6e4 <HttpDaemon::HandlePost(bool)+0xd0>
 800a63e:	4628      	mov	r0, r5
 800a640:	493f      	ldr	r1, [pc, #252]	; (800a740 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a642:	f7ff fde4 	bl	800a20e <strcmp>
 800a646:	2800      	cmp	r0, #0
 800a648:	d04c      	beq.n	800a6e4 <HttpDaemon::HandlePost(bool)+0xd0>
 800a64a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a64e:	e047      	b.n	800a6e0 <HttpDaemon::HandlePost(bool)+0xcc>
 800a650:	493c      	ldr	r1, [pc, #240]	; (800a744 <HttpDaemon::HandlePost(bool)+0x130>)
 800a652:	68a0      	ldr	r0, [r4, #8]
 800a654:	f10d 0207 	add.w	r2, sp, #7
 800a658:	f007 f910 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a65c:	b9d8      	cbnz	r0, 800a696 <HttpDaemon::HandlePost(bool)+0x82>
 800a65e:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a662:	4b39      	ldr	r3, [pc, #228]	; (800a748 <HttpDaemon::HandlePost(bool)+0x134>)
 800a664:	fab6 f186 	clz	r1, r6
 800a668:	681d      	ldr	r5, [r3, #0]
 800a66a:	0949      	lsrs	r1, r1, #5
 800a66c:	69a8      	ldr	r0, [r5, #24]
 800a66e:	b138      	cbz	r0, 800a680 <HttpDaemon::HandlePost(bool)+0x6c>
 800a670:	6803      	ldr	r3, [r0, #0]
 800a672:	7429      	strb	r1, [r5, #16]
 800a674:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a676:	4798      	blx	r3
 800a678:	b116      	cbz	r6, 800a680 <HttpDaemon::HandlePost(bool)+0x6c>
 800a67a:	4b34      	ldr	r3, [pc, #208]	; (800a74c <HttpDaemon::HandlePost(bool)+0x138>)
 800a67c:	681b      	ldr	r3, [r3, #0]
 800a67e:	606b      	str	r3, [r5, #4]
 800a680:	4b33      	ldr	r3, [pc, #204]	; (800a750 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a682:	f240 519f 	movw	r1, #1439	; 0x59f
 800a686:	4a33      	ldr	r2, [pc, #204]	; (800a754 <HttpDaemon::HandlePost(bool)+0x140>)
 800a688:	4833      	ldr	r0, [pc, #204]	; (800a758 <HttpDaemon::HandlePost(bool)+0x144>)
 800a68a:	6023      	str	r3, [r4, #0]
 800a68c:	f7fe fe1a 	bl	80092c4 <snprintf>
 800a690:	8460      	strh	r0, [r4, #34]	; 0x22
 800a692:	20c8      	movs	r0, #200	; 0xc8
 800a694:	e024      	b.n	800a6e0 <HttpDaemon::HandlePost(bool)+0xcc>
 800a696:	4931      	ldr	r1, [pc, #196]	; (800a75c <HttpDaemon::HandlePost(bool)+0x148>)
 800a698:	68a0      	ldr	r0, [r4, #8]
 800a69a:	f10d 0207 	add.w	r2, sp, #7
 800a69e:	f007 f8ed 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6a2:	b9d8      	cbnz	r0, 800a6dc <HttpDaemon::HandlePost(bool)+0xc8>
 800a6a4:	4b2e      	ldr	r3, [pc, #184]	; (800a760 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a6a6:	6818      	ldr	r0, [r3, #0]
 800a6a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a6ac:	b11b      	cbz	r3, 800a6b6 <HttpDaemon::HandlePost(bool)+0xa2>
 800a6ae:	2104      	movs	r1, #4
 800a6b0:	f007 fc72 	bl	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800a6b4:	e7e4      	b.n	800a680 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6b6:	2102      	movs	r1, #2
 800a6b8:	e7fa      	b.n	800a6b0 <HttpDaemon::HandlePost(bool)+0x9c>
 800a6ba:	4b2a      	ldr	r3, [pc, #168]	; (800a764 <HttpDaemon::HandlePost(bool)+0x150>)
 800a6bc:	2001      	movs	r0, #1
 800a6be:	781d      	ldrb	r5, [r3, #0]
 800a6c0:	f7ff fdcc 	bl	800a25c <PropertiesConfig::EnableJSON(bool)>
 800a6c4:	4b28      	ldr	r3, [pc, #160]	; (800a768 <HttpDaemon::HandlePost(bool)+0x154>)
 800a6c6:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a6c8:	6818      	ldr	r0, [r3, #0]
 800a6ca:	68a1      	ldr	r1, [r4, #8]
 800a6cc:	f005 0501 	and.w	r5, r5, #1
 800a6d0:	f7ff fa3c 	bl	8009b4c <RemoteConfig::HandleSet(void*, unsigned int)>
 800a6d4:	4628      	mov	r0, r5
 800a6d6:	f7ff fdc1 	bl	800a25c <PropertiesConfig::EnableJSON(bool)>
 800a6da:	e7d1      	b.n	800a680 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6dc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a6e0:	b002      	add	sp, #8
 800a6e2:	bd70      	pop	{r4, r5, r6, pc}
 800a6e4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a6e6:	6962      	ldr	r2, [r4, #20]
 800a6e8:	429a      	cmp	r2, r3
 800a6ea:	dbd2      	blt.n	800a692 <HttpDaemon::HandlePost(bool)+0x7e>
 800a6ec:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	d0cf      	beq.n	800a692 <HttpDaemon::HandlePost(bool)+0x7e>
 800a6f2:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a6f6:	2b00      	cmp	r3, #0
 800a6f8:	d0df      	beq.n	800a6ba <HttpDaemon::HandlePost(bool)+0xa6>
 800a6fa:	2201      	movs	r2, #1
 800a6fc:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a6fe:	68a0      	ldr	r0, [r4, #8]
 800a700:	f006 fe2e 	bl	8011360 <properties::convert_json_file(char*, unsigned short, bool)>
 800a704:	2800      	cmp	r0, #0
 800a706:	dde9      	ble.n	800a6dc <HttpDaemon::HandlePost(bool)+0xc8>
 800a708:	4918      	ldr	r1, [pc, #96]	; (800a76c <HttpDaemon::HandlePost(bool)+0x158>)
 800a70a:	68a0      	ldr	r0, [r4, #8]
 800a70c:	f10d 0207 	add.w	r2, sp, #7
 800a710:	f007 f8b4 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a714:	2800      	cmp	r0, #0
 800a716:	d19b      	bne.n	800a650 <HttpDaemon::HandlePost(bool)+0x3c>
 800a718:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a71c:	2b00      	cmp	r3, #0
 800a71e:	d0af      	beq.n	800a680 <HttpDaemon::HandlePost(bool)+0x6c>
 800a720:	4b11      	ldr	r3, [pc, #68]	; (800a768 <HttpDaemon::HandlePost(bool)+0x154>)
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	7b9b      	ldrb	r3, [r3, #14]
 800a726:	2b00      	cmp	r3, #0
 800a728:	d0d8      	beq.n	800a6dc <HttpDaemon::HandlePost(bool)+0xc8>
 800a72a:	4b11      	ldr	r3, [pc, #68]	; (800a770 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a72c:	6818      	ldr	r0, [r3, #0]
 800a72e:	f007 fcd3 	bl	80120d8 <Hardware::Reboot()>
 800a732:	68c3      	ldr	r3, [r0, #12]
 800a734:	6083      	str	r3, [r0, #8]
 800a736:	6943      	ldr	r3, [r0, #20]
 800a738:	8483      	strh	r3, [r0, #36]	; 0x24
 800a73a:	e7da      	b.n	800a6f2 <HttpDaemon::HandlePost(bool)+0xde>
 800a73c:	08014aea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, fp, lr}
 800a740:	08014a86 	stmdaeq	r1, {r1, r2, r7, r9, fp, lr}
 800a744:	08014ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, lr}
 800a748:	2000ae08 	andcs	sl, r0, r8, lsl #28
 800a74c:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800a750:	08014cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, lr}
 800a754:	08014b07 	stmdaeq	r1, {r0, r1, r2, r8, r9, fp, lr}
 800a758:	20000118 	andcs	r0, r0, r8, lsl r1
 800a75c:	08014afe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, fp, lr}
 800a760:	2000aef4 	strdcs	sl, [r0], -r4
 800a764:	2000ae04 	andcs	sl, r0, r4, lsl #28
 800a768:	20000114 	andcs	r0, r0, r4, lsl r1
 800a76c:	08014af7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, fp, lr}
 800a770:	2000aef8 	strdcs	sl, [r0], -r8

0800a774 <HttpDaemon::Run()>:
 800a774:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a776:	4e46      	ldr	r6, [pc, #280]	; (800a890 <HttpDaemon::Run()+0x11c>)
 800a778:	4604      	mov	r4, r0
 800a77a:	6901      	ldr	r1, [r0, #16]
 800a77c:	f100 020c 	add.w	r2, r0, #12
 800a780:	6830      	ldr	r0, [r6, #0]
 800a782:	f005 fc80 	bl	8010086 <Network::TcpRead(int, unsigned char const**)>
 800a786:	6160      	str	r0, [r4, #20]
 800a788:	2800      	cmp	r0, #0
 800a78a:	d05b      	beq.n	800a844 <HttpDaemon::Run()+0xd0>
 800a78c:	69a3      	ldr	r3, [r4, #24]
 800a78e:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a792:	d159      	bne.n	800a848 <HttpDaemon::Run()+0xd4>
 800a794:	4620      	mov	r0, r4
 800a796:	f7ff fe1d 	bl	800a3d4 <HttpDaemon::ParseRequest()>
 800a79a:	28c8      	cmp	r0, #200	; 0xc8
 800a79c:	61a0      	str	r0, [r4, #24]
 800a79e:	d106      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a7a0:	69e3      	ldr	r3, [r4, #28]
 800a7a2:	2b00      	cmp	r3, #0
 800a7a4:	d142      	bne.n	800a82c <HttpDaemon::Run()+0xb8>
 800a7a6:	4620      	mov	r0, r4
 800a7a8:	f7ff fe8e 	bl	800a4c8 <HttpDaemon::HandleGet()>
 800a7ac:	61a0      	str	r0, [r4, #24]
 800a7ae:	69a3      	ldr	r3, [r4, #24]
 800a7b0:	2bc8      	cmp	r3, #200	; 0xc8
 800a7b2:	d06b      	beq.n	800a88c <HttpDaemon::Run()+0x118>
 800a7b4:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a7b8:	d05e      	beq.n	800a878 <HttpDaemon::Run()+0x104>
 800a7ba:	dc4e      	bgt.n	800a85a <HttpDaemon::Run()+0xe6>
 800a7bc:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a7c0:	d05c      	beq.n	800a87c <HttpDaemon::Run()+0x108>
 800a7c2:	f240 129d 	movw	r2, #413	; 0x19d
 800a7c6:	4293      	cmp	r3, r2
 800a7c8:	d05a      	beq.n	800a880 <HttpDaemon::Run()+0x10c>
 800a7ca:	4d32      	ldr	r5, [pc, #200]	; (800a894 <HttpDaemon::Run()+0x120>)
 800a7cc:	4a32      	ldr	r2, [pc, #200]	; (800a898 <HttpDaemon::Run()+0x124>)
 800a7ce:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a7d2:	bf18      	it	ne
 800a7d4:	4615      	movne	r5, r2
 800a7d6:	4a31      	ldr	r2, [pc, #196]	; (800a89c <HttpDaemon::Run()+0x128>)
 800a7d8:	f240 519f 	movw	r1, #1439	; 0x59f
 800a7dc:	6022      	str	r2, [r4, #0]
 800a7de:	e9cd 5500 	strd	r5, r5, [sp]
 800a7e2:	4a2f      	ldr	r2, [pc, #188]	; (800a8a0 <HttpDaemon::Run()+0x12c>)
 800a7e4:	482f      	ldr	r0, [pc, #188]	; (800a8a4 <HttpDaemon::Run()+0x130>)
 800a7e6:	f7fe fd6d 	bl	80092c4 <snprintf>
 800a7ea:	8460      	strh	r0, [r4, #34]	; 0x22
 800a7ec:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a7ee:	f240 519f 	movw	r1, #1439	; 0x59f
 800a7f2:	9303      	str	r3, [sp, #12]
 800a7f4:	6823      	ldr	r3, [r4, #0]
 800a7f6:	4a2c      	ldr	r2, [pc, #176]	; (800a8a8 <HttpDaemon::Run()+0x134>)
 800a7f8:	9302      	str	r3, [sp, #8]
 800a7fa:	4b2c      	ldr	r3, [pc, #176]	; (800a8ac <HttpDaemon::Run()+0x138>)
 800a7fc:	68e0      	ldr	r0, [r4, #12]
 800a7fe:	e9cd 5300 	strd	r5, r3, [sp]
 800a802:	69a3      	ldr	r3, [r4, #24]
 800a804:	f7fe fd5e 	bl	80092c4 <snprintf>
 800a808:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a80c:	b283      	uxth	r3, r0
 800a80e:	6830      	ldr	r0, [r6, #0]
 800a810:	f005 fc3d 	bl	801008e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a814:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a816:	4a23      	ldr	r2, [pc, #140]	; (800a8a4 <HttpDaemon::Run()+0x130>)
 800a818:	6921      	ldr	r1, [r4, #16]
 800a81a:	6830      	ldr	r0, [r6, #0]
 800a81c:	f005 fc37 	bl	801008e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a820:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a824:	2302      	movs	r3, #2
 800a826:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a82a:	e00b      	b.n	800a844 <HttpDaemon::Run()+0xd0>
 800a82c:	2b01      	cmp	r3, #1
 800a82e:	d1be      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a830:	2100      	movs	r1, #0
 800a832:	4620      	mov	r0, r4
 800a834:	f7ff feee 	bl	800a614 <HttpDaemon::HandlePost(bool)>
 800a838:	28c8      	cmp	r0, #200	; 0xc8
 800a83a:	61a0      	str	r0, [r4, #24]
 800a83c:	d1b7      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a83e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a840:	2b00      	cmp	r3, #0
 800a842:	d1b4      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a844:	b004      	add	sp, #16
 800a846:	bd70      	pop	{r4, r5, r6, pc}
 800a848:	2bc8      	cmp	r3, #200	; 0xc8
 800a84a:	d1b0      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a84c:	69e1      	ldr	r1, [r4, #28]
 800a84e:	2901      	cmp	r1, #1
 800a850:	d1ad      	bne.n	800a7ae <HttpDaemon::Run()+0x3a>
 800a852:	4620      	mov	r0, r4
 800a854:	f7ff fede 	bl	800a614 <HttpDaemon::HandlePost(bool)>
 800a858:	e7a8      	b.n	800a7ac <HttpDaemon::Run()+0x38>
 800a85a:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a85e:	4293      	cmp	r3, r2
 800a860:	d010      	beq.n	800a884 <HttpDaemon::Run()+0x110>
 800a862:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a866:	4293      	cmp	r3, r2
 800a868:	d00e      	beq.n	800a888 <HttpDaemon::Run()+0x114>
 800a86a:	4d11      	ldr	r5, [pc, #68]	; (800a8b0 <HttpDaemon::Run()+0x13c>)
 800a86c:	4a0a      	ldr	r2, [pc, #40]	; (800a898 <HttpDaemon::Run()+0x124>)
 800a86e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a872:	bf18      	it	ne
 800a874:	4615      	movne	r5, r2
 800a876:	e7ae      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a878:	4d0e      	ldr	r5, [pc, #56]	; (800a8b4 <HttpDaemon::Run()+0x140>)
 800a87a:	e7ac      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a87c:	4d0e      	ldr	r5, [pc, #56]	; (800a8b8 <HttpDaemon::Run()+0x144>)
 800a87e:	e7aa      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a880:	4d0e      	ldr	r5, [pc, #56]	; (800a8bc <HttpDaemon::Run()+0x148>)
 800a882:	e7a8      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a884:	4d0e      	ldr	r5, [pc, #56]	; (800a8c0 <HttpDaemon::Run()+0x14c>)
 800a886:	e7a6      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a888:	4d0e      	ldr	r5, [pc, #56]	; (800a8c4 <HttpDaemon::Run()+0x150>)
 800a88a:	e7a4      	b.n	800a7d6 <HttpDaemon::Run()+0x62>
 800a88c:	4d0e      	ldr	r5, [pc, #56]	; (800a8c8 <HttpDaemon::Run()+0x154>)
 800a88e:	e7ad      	b.n	800a7ec <HttpDaemon::Run()+0x78>
 800a890:	2000a830 	andcs	sl, r0, r0, lsr r8
 800a894:	08014b63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, fp, lr}
 800a898:	08014bea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, fp, lr}
 800a89c:	08014cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, lr}
 800a8a0:	08014bfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, fp, lr}
 800a8a4:	20000118 	andcs	r0, r0, r8, lsl r1
 800a8a8:	08014c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, lr}
 800a8ac:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 800a8b0:	08014ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, lr}
 800a8b4:	08014b92 	stmdaeq	r1, {r1, r4, r7, r8, r9, fp, lr}
 800a8b8:	08014b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, lr}
 800a8bc:	08014b79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, fp, lr}
 800a8c0:	08014bbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, fp, lr}
 800a8c4:	08014bd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, fp, lr}
 800a8c8:	08014bf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, fp, lr}

0800a8cc <remoteconfig::json_get_list(char*, unsigned short)>:
 800a8cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8d0:	4b14      	ldr	r3, [pc, #80]	; (800a924 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a8d2:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a928 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a8d6:	681b      	ldr	r3, [r3, #0]
 800a8d8:	b088      	sub	sp, #32
 800a8da:	4605      	mov	r5, r0
 800a8dc:	f8d8 0000 	ldr.w	r0, [r8]
 800a8e0:	695c      	ldr	r4, [r3, #20]
 800a8e2:	460e      	mov	r6, r1
 800a8e4:	f7ff f814 	bl	8009910 <RemoteConfig::GetStringNode() const>
 800a8e8:	4607      	mov	r7, r0
 800a8ea:	f8d8 0000 	ldr.w	r0, [r8]
 800a8ee:	f7ff f81b 	bl	8009928 <RemoteConfig::GetStringOutput() const>
 800a8f2:	4b0e      	ldr	r3, [pc, #56]	; (800a92c <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a8f4:	4631      	mov	r1, r6
 800a8f6:	7a1a      	ldrb	r2, [r3, #8]
 800a8f8:	3309      	adds	r3, #9
 800a8fa:	9303      	str	r3, [sp, #12]
 800a8fc:	0e23      	lsrs	r3, r4, #24
 800a8fe:	9302      	str	r3, [sp, #8]
 800a900:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a904:	9301      	str	r3, [sp, #4]
 800a906:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a90a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a90e:	9300      	str	r3, [sp, #0]
 800a910:	4628      	mov	r0, r5
 800a912:	4a07      	ldr	r2, [pc, #28]	; (800a930 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a914:	9704      	str	r7, [sp, #16]
 800a916:	b2e3      	uxtb	r3, r4
 800a918:	f7fe fcd4 	bl	80092c4 <snprintf>
 800a91c:	b280      	uxth	r0, r0
 800a91e:	b008      	add	sp, #32
 800a920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a924:	2000a830 	andcs	sl, r0, r0, lsr r8
 800a928:	20000114 	andcs	r0, r0, r4, lsl r1
 800a92c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a930:	08014d93 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, fp, lr}

0800a934 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a934:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a936:	2208      	movs	r2, #8
 800a938:	4b09      	ldr	r3, [pc, #36]	; (800a960 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a93a:	9204      	str	r2, [sp, #16]
 800a93c:	f1a3 020b 	sub.w	r2, r3, #11
 800a940:	9203      	str	r2, [sp, #12]
 800a942:	220b      	movs	r2, #11
 800a944:	9202      	str	r2, [sp, #8]
 800a946:	4a07      	ldr	r2, [pc, #28]	; (800a964 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a948:	9305      	str	r3, [sp, #20]
 800a94a:	3b0e      	subs	r3, #14
 800a94c:	9201      	str	r2, [sp, #4]
 800a94e:	9300      	str	r3, [sp, #0]
 800a950:	4a05      	ldr	r2, [pc, #20]	; (800a968 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a952:	2303      	movs	r3, #3
 800a954:	f7fe fcb6 	bl	80092c4 <snprintf>
 800a958:	b280      	uxth	r0, r0
 800a95a:	b007      	add	sp, #28
 800a95c:	f85d fb04 	ldr.w	pc, [sp], #4
 800a960:	2000aea6 	andcs	sl, r0, r6, lsr #29
 800a964:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 800a968:	08014df2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, fp, lr}

0800a96c <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a96c:	b508      	push	{r3, lr}
 800a96e:	4b05      	ldr	r3, [pc, #20]	; (800a984 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a970:	681a      	ldr	r2, [r3, #0]
 800a972:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a976:	fbb2 f3f3 	udiv	r3, r2, r3
 800a97a:	4a03      	ldr	r2, [pc, #12]	; (800a988 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a97c:	f7fe fca2 	bl	80092c4 <snprintf>
 800a980:	b280      	uxth	r0, r0
 800a982:	bd08      	pop	{r3, pc}
 800a984:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800a988:	08014e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, lr}

0800a98c <remoteconfig::json_get_display(char*, unsigned short)>:
 800a98c:	b508      	push	{r3, lr}
 800a98e:	4b05      	ldr	r3, [pc, #20]	; (800a9a4 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a990:	4a05      	ldr	r2, [pc, #20]	; (800a9a8 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	7c1b      	ldrb	r3, [r3, #16]
 800a996:	f083 0301 	eor.w	r3, r3, #1
 800a99a:	f7fe fc93 	bl	80092c4 <snprintf>
 800a99e:	b280      	uxth	r0, r0
 800a9a0:	bd08      	pop	{r3, pc}
 800a9a2:	bf00      	nop
 800a9a4:	2000ae08 	andcs	sl, r0, r8, lsl #28
 800a9a8:	08014e47 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, fp, lr}

0800a9ac <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a9ac:	b508      	push	{r3, lr}
 800a9ae:	4a02      	ldr	r2, [pc, #8]	; (800a9b8 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a9b0:	f7fe fc88 	bl	80092c4 <snprintf>
 800a9b4:	b280      	uxth	r0, r0
 800a9b6:	bd08      	pop	{r3, pc}
 800a9b8:	08014e56 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, fp, lr}

0800a9bc <get_file_content(char const*, char*)>:
 800a9bc:	2300      	movs	r3, #0
 800a9be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9c0:	4a10      	ldr	r2, [pc, #64]	; (800aa04 <get_file_content(char const*, char*)+0x48>)
 800a9c2:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a9c6:	1e46      	subs	r6, r0, #1
 800a9c8:	3c01      	subs	r4, #1
 800a9ca:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800a9ce:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a9d2:	42bd      	cmp	r5, r7
 800a9d4:	d005      	beq.n	800a9e2 <get_file_content(char const*, char*)+0x26>
 800a9d6:	3301      	adds	r3, #1
 800a9d8:	2b03      	cmp	r3, #3
 800a9da:	d1f2      	bne.n	800a9c2 <get_file_content(char const*, char*)+0x6>
 800a9dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9e2:	2d00      	cmp	r5, #0
 800a9e4:	d1f1      	bne.n	800a9ca <get_file_content(char const*, char*)+0xe>
 800a9e6:	4608      	mov	r0, r1
 800a9e8:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800a9ec:	6853      	ldr	r3, [r2, #4]
 800a9ee:	3b01      	subs	r3, #1
 800a9f0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a9f4:	f800 2b01 	strb.w	r2, [r0], #1
 800a9f8:	2a00      	cmp	r2, #0
 800a9fa:	d1f9      	bne.n	800a9f0 <get_file_content(char const*, char*)+0x34>
 800a9fc:	1a40      	subs	r0, r0, r1
 800a9fe:	3801      	subs	r0, #1
 800aa00:	e7ee      	b.n	800a9e0 <get_file_content(char const*, char*)+0x24>
 800aa02:	bf00      	nop
 800aa04:	08015198 	stmdaeq	r1, {r3, r4, r7, r8, ip, lr}

0800aa08 <e131::universe_to_multicast_ip(unsigned short)>:
 800aa08:	b513      	push	{r0, r1, r4, lr}
 800aa0a:	4604      	mov	r4, r0
 800aa0c:	a901      	add	r1, sp, #4
 800aa0e:	4806      	ldr	r0, [pc, #24]	; (800aa28 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800aa10:	f007 fba6 	bl	8012160 <inet_aton>
 800aa14:	9801      	ldr	r0, [sp, #4]
 800aa16:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800aa1a:	0224      	lsls	r4, r4, #8
 800aa1c:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800aa20:	4320      	orrs	r0, r4
 800aa22:	b002      	add	sp, #8
 800aa24:	bd10      	pop	{r4, pc}
 800aa26:	bf00      	nop
 800aa28:	080156da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip, lr}

0800aa2c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800aa2c:	f240 6304 	movw	r3, #1540	; 0x604
 800aa30:	fb03 0001 	mla	r0, r3, r1, r0
 800aa34:	2300      	movs	r3, #0
 800aa36:	b510      	push	{r4, lr}
 800aa38:	4293      	cmp	r3, r2
 800aa3a:	d100      	bne.n	800aa3e <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800aa3c:	bd10      	pop	{r4, pc}
 800aa3e:	f810 4b01 	ldrb.w	r4, [r0], #1
 800aa42:	3301      	adds	r3, #1
 800aa44:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800aa48:	42a1      	cmp	r1, r4
 800aa4a:	bf38      	it	cc
 800aa4c:	4621      	movcc	r1, r4
 800aa4e:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800aa52:	e7f1      	b.n	800aa38 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800aa54 <memset.constprop.0.isra.0>:
 800aa54:	2300      	movs	r3, #0
 800aa56:	4401      	add	r1, r0
 800aa58:	4288      	cmp	r0, r1
 800aa5a:	d100      	bne.n	800aa5e <memset.constprop.0.isra.0+0xa>
 800aa5c:	4770      	bx	lr
 800aa5e:	f800 3b01 	strb.w	r3, [r0], #1
 800aa62:	e7f9      	b.n	800aa58 <memset.constprop.0.isra.0+0x4>

0800aa64 <memcpy.isra.0>:
 800aa64:	3801      	subs	r0, #1
 800aa66:	440a      	add	r2, r1
 800aa68:	4291      	cmp	r1, r2
 800aa6a:	d100      	bne.n	800aa6e <memcpy.isra.0+0xa>
 800aa6c:	4770      	bx	lr
 800aa6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800aa72:	f800 3f01 	strb.w	r3, [r0, #1]!
 800aa76:	e7f7      	b.n	800aa68 <memcpy.isra.0+0x4>

0800aa78 <lightset::Data::Get()>:
 800aa78:	4b03      	ldr	r3, [pc, #12]	; (800aa88 <lightset::Data::Get()+0x10>)
 800aa7a:	4804      	ldr	r0, [pc, #16]	; (800aa8c <lightset::Data::Get()+0x14>)
 800aa7c:	681a      	ldr	r2, [r3, #0]
 800aa7e:	07d2      	lsls	r2, r2, #31
 800aa80:	bf5c      	itt	pl
 800aa82:	2201      	movpl	r2, #1
 800aa84:	601a      	strpl	r2, [r3, #0]
 800aa86:	4770      	bx	lr
 800aa88:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800aa8c:	200006bc 			; <UNDEFINED> instruction: 0x200006bc

0800aa90 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800aa90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa94:	4615      	mov	r5, r2
 800aa96:	460f      	mov	r7, r1
 800aa98:	4604      	mov	r4, r0
 800aa9a:	f7ff ffed 	bl	800aa78 <lightset::Data::Get()>
 800aa9e:	f240 6304 	movw	r3, #1540	; 0x604
 800aaa2:	4606      	mov	r6, r0
 800aaa4:	435c      	muls	r4, r3
 800aaa6:	eb00 0804 	add.w	r8, r0, r4
 800aaaa:	462a      	mov	r2, r5
 800aaac:	4639      	mov	r1, r7
 800aaae:	4640      	mov	r0, r8
 800aab0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800aab4:	f7ff ffd6 	bl	800aa64 <memcpy.isra.0>
 800aab8:	462a      	mov	r2, r5
 800aaba:	4639      	mov	r1, r7
 800aabc:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800aac0:	1930      	adds	r0, r6, r4
 800aac2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800aac6:	f7ff bfcd 	b.w	800aa64 <memcpy.isra.0>

0800aaca <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800aaca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aace:	4680      	mov	r8, r0
 800aad0:	f240 6404 	movw	r4, #1540	; 0x604
 800aad4:	4615      	mov	r5, r2
 800aad6:	460f      	mov	r7, r1
 800aad8:	4699      	mov	r9, r3
 800aada:	f7ff ffcd 	bl	800aa78 <lightset::Data::Get()>
 800aade:	fb04 f408 	mul.w	r4, r4, r8
 800aae2:	eb00 0a04 	add.w	sl, r0, r4
 800aae6:	4606      	mov	r6, r0
 800aae8:	462a      	mov	r2, r5
 800aaea:	4639      	mov	r1, r7
 800aaec:	4650      	mov	r0, sl
 800aaee:	f7ff ffb9 	bl	800aa64 <memcpy.isra.0>
 800aaf2:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800aaf6:	f1b9 0f00 	cmp.w	r9, #0
 800aafa:	d106      	bne.n	800ab0a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800aafc:	462a      	mov	r2, r5
 800aafe:	4641      	mov	r1, r8
 800ab00:	4630      	mov	r0, r6
 800ab02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab06:	f7ff bf91 	b.w	800aa2c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800ab0a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ab0e:	462a      	mov	r2, r5
 800ab10:	4639      	mov	r1, r7
 800ab12:	1930      	adds	r0, r6, r4
 800ab14:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab18:	f7ff bfa4 	b.w	800aa64 <memcpy.isra.0>

0800ab1c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800ab1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab20:	4616      	mov	r6, r2
 800ab22:	4699      	mov	r9, r3
 800ab24:	4680      	mov	r8, r0
 800ab26:	460f      	mov	r7, r1
 800ab28:	f7ff ffa6 	bl	800aa78 <lightset::Data::Get()>
 800ab2c:	f240 6404 	movw	r4, #1540	; 0x604
 800ab30:	4605      	mov	r5, r0
 800ab32:	fb04 f408 	mul.w	r4, r4, r8
 800ab36:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800ab3a:	4632      	mov	r2, r6
 800ab3c:	4639      	mov	r1, r7
 800ab3e:	4428      	add	r0, r5
 800ab40:	f7ff ff90 	bl	800aa64 <memcpy.isra.0>
 800ab44:	192b      	adds	r3, r5, r4
 800ab46:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800ab4a:	f1b9 0f00 	cmp.w	r9, #0
 800ab4e:	d106      	bne.n	800ab5e <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800ab50:	4632      	mov	r2, r6
 800ab52:	4641      	mov	r1, r8
 800ab54:	4628      	mov	r0, r5
 800ab56:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab5a:	f7ff bf67 	b.w	800aa2c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800ab5e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ab62:	4632      	mov	r2, r6
 800ab64:	4639      	mov	r1, r7
 800ab66:	1928      	adds	r0, r5, r4
 800ab68:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab6c:	f7ff bf7a 	b.w	800aa64 <memcpy.isra.0>

0800ab70 <E131Bridge::E131Bridge()>:
 800ab70:	2300      	movs	r3, #0
 800ab72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ab76:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab78:	e9c0 2300 	strd	r2, r3, [r0]
 800ab7c:	2201      	movs	r2, #1
 800ab7e:	4604      	mov	r4, r0
 800ab80:	2764      	movs	r7, #100	; 0x64
 800ab82:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ab86:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ab8a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ab8e:	6743      	str	r3, [r0, #116]	; 0x74
 800ab90:	4b26      	ldr	r3, [pc, #152]	; (800ac2c <E131Bridge::E131Bridge()+0xbc>)
 800ab92:	7202      	strb	r2, [r0, #8]
 800ab94:	b093      	sub	sp, #76	; 0x4c
 800ab96:	6018      	str	r0, [r3, #0]
 800ab98:	f200 5514 	addw	r5, r0, #1300	; 0x514
 800ab9c:	f200 6224 	addw	r2, r0, #1572	; 0x624
 800aba0:	f200 6654 	addw	r6, r0, #1620	; 0x654
 800aba4:	4628      	mov	r0, r5
 800aba6:	2144      	movs	r1, #68	; 0x44
 800aba8:	f7ff ff54 	bl	800aa54 <memset.constprop.0.isra.0>
 800abac:	4610      	mov	r0, r2
 800abae:	210c      	movs	r1, #12
 800abb0:	f7ff ff50 	bl	800aa54 <memset.constprop.0.isra.0>
 800abb4:	320c      	adds	r2, #12
 800abb6:	f802 7c03 	strb.w	r7, [r2, #-3]
 800abba:	4296      	cmp	r6, r2
 800abbc:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800abc0:	d1f0      	bne.n	800aba4 <E131Bridge::E131Bridge()+0x34>
 800abc2:	2120      	movs	r1, #32
 800abc4:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800abc8:	f7ff ff44 	bl	800aa54 <memset.constprop.0.isra.0>
 800abcc:	2301      	movs	r3, #1
 800abce:	4d18      	ldr	r5, [pc, #96]	; (800ac30 <E131Bridge::E131Bridge()+0xc0>)
 800abd0:	4a18      	ldr	r2, [pc, #96]	; (800ac34 <E131Bridge::E131Bridge()+0xc4>)
 800abd2:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800abd6:	682b      	ldr	r3, [r5, #0]
 800abd8:	2140      	movs	r1, #64	; 0x40
 800abda:	9200      	str	r2, [sp, #0]
 800abdc:	3320      	adds	r3, #32
 800abde:	4a16      	ldr	r2, [pc, #88]	; (800ac38 <E131Bridge::E131Bridge()+0xc8>)
 800abe0:	a802      	add	r0, sp, #8
 800abe2:	f7fe fb6f 	bl	80092c4 <snprintf>
 800abe6:	233f      	movs	r3, #63	; 0x3f
 800abe8:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800abec:	a902      	add	r1, sp, #8
 800abee:	f811 0b01 	ldrb.w	r0, [r1], #1
 800abf2:	b928      	cbnz	r0, 800ac00 <E131Bridge::E131Bridge()+0x90>
 800abf4:	4413      	add	r3, r2
 800abf6:	429a      	cmp	r2, r3
 800abf8:	d006      	beq.n	800ac08 <E131Bridge::E131Bridge()+0x98>
 800abfa:	f802 0b01 	strb.w	r0, [r2], #1
 800abfe:	e7fa      	b.n	800abf6 <E131Bridge::E131Bridge()+0x86>
 800ac00:	3b01      	subs	r3, #1
 800ac02:	f802 0b01 	strb.w	r0, [r2], #1
 800ac06:	d1f2      	bne.n	800abee <E131Bridge::E131Bridge()+0x7e>
 800ac08:	2300      	movs	r3, #0
 800ac0a:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800ac0e:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800ac12:	6828      	ldr	r0, [r5, #0]
 800ac14:	f005 f84a 	bl	800fcac <Network::Begin(unsigned short)>
 800ac18:	4621      	mov	r1, r4
 800ac1a:	4b08      	ldr	r3, [pc, #32]	; (800ac3c <E131Bridge::E131Bridge()+0xcc>)
 800ac1c:	f841 0b24 	str.w	r0, [r1], #36
 800ac20:	6818      	ldr	r0, [r3, #0]
 800ac22:	f007 fa3d 	bl	80120a0 <Hardware::GetUuid(unsigned char*)>
 800ac26:	4620      	mov	r0, r4
 800ac28:	b013      	add	sp, #76	; 0x4c
 800ac2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac2c:	20001ecc 	andcs	r1, r0, ip, asr #29
 800ac30:	2000a830 	andcs	sl, r0, r0, lsr r8
 800ac34:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 800ac38:	080156e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, ip, lr}
 800ac3c:	2000aef8 	strdcs	sl, [r0], -r8

0800ac40 <E131Bridge::Start()>:
 800ac40:	6943      	ldr	r3, [r0, #20]
 800ac42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac44:	4604      	mov	r4, r0
 800ac46:	b35b      	cbz	r3, 800aca0 <E131Bridge::Start()+0x60>
 800ac48:	6983      	ldr	r3, [r0, #24]
 800ac4a:	b9cb      	cbnz	r3, 800ac80 <E131Bridge::Start()+0x40>
 800ac4c:	a901      	add	r1, sp, #4
 800ac4e:	4818      	ldr	r0, [pc, #96]	; (800acb0 <E131Bridge::Start()+0x70>)
 800ac50:	f007 fa86 	bl	8012160 <inet_aton>
 800ac54:	9b01      	ldr	r3, [sp, #4]
 800ac56:	f240 207e 	movw	r0, #638	; 0x27e
 800ac5a:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800ac5e:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800ac62:	6223      	str	r3, [r4, #32]
 800ac64:	f007 fa78 	bl	8012158 <operator new(unsigned int)>
 800ac68:	61a0      	str	r0, [r4, #24]
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	f000 fd36 	bl	800b6dc <E131Bridge::FillDataPacket()>
 800ac70:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800ac74:	f007 fa70 	bl	8012158 <operator new(unsigned int)>
 800ac78:	61e0      	str	r0, [r4, #28]
 800ac7a:	4620      	mov	r0, r4
 800ac7c:	f000 fc86 	bl	800b58c <E131Bridge::FillDiscoveryPacket()>
 800ac80:	2500      	movs	r5, #0
 800ac82:	270c      	movs	r7, #12
 800ac84:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800ac88:	fb07 f305 	mul.w	r3, r7, r5
 800ac8c:	5cf3      	ldrb	r3, [r6, r3]
 800ac8e:	b123      	cbz	r3, 800ac9a <E131Bridge::Start()+0x5a>
 800ac90:	6960      	ldr	r0, [r4, #20]
 800ac92:	4629      	mov	r1, r5
 800ac94:	6803      	ldr	r3, [r0, #0]
 800ac96:	689b      	ldr	r3, [r3, #8]
 800ac98:	4798      	blx	r3
 800ac9a:	3501      	adds	r5, #1
 800ac9c:	2d04      	cmp	r5, #4
 800ac9e:	d1f3      	bne.n	800ac88 <E131Bridge::Start()+0x48>
 800aca0:	2102      	movs	r1, #2
 800aca2:	4b04      	ldr	r3, [pc, #16]	; (800acb4 <E131Bridge::Start()+0x74>)
 800aca4:	6818      	ldr	r0, [r3, #0]
 800aca6:	b003      	add	sp, #12
 800aca8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800acac:	f007 b974 	b.w	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800acb0:	080156da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip, lr}
 800acb4:	2000aef4 	strdcs	sl, [r0], -r4

0800acb8 <E131Bridge::Stop()>:
 800acb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acbc:	2500      	movs	r5, #0
 800acbe:	2301      	movs	r3, #1
 800acc0:	4604      	mov	r4, r0
 800acc2:	f240 6804 	movw	r8, #1540	; 0x604
 800acc6:	462e      	mov	r6, r5
 800acc8:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800accc:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800acd0:	6860      	ldr	r0, [r4, #4]
 800acd2:	b118      	cbz	r0, 800acdc <E131Bridge::Stop()+0x24>
 800acd4:	6803      	ldr	r3, [r0, #0]
 800acd6:	4629      	mov	r1, r5
 800acd8:	68db      	ldr	r3, [r3, #12]
 800acda:	4798      	blx	r3
 800acdc:	f7ff fecc 	bl	800aa78 <lightset::Data::Get()>
 800ace0:	2344      	movs	r3, #68	; 0x44
 800ace2:	fb08 0005 	mla	r0, r8, r5, r0
 800ace6:	436b      	muls	r3, r5
 800ace8:	3501      	adds	r5, #1
 800acea:	2d04      	cmp	r5, #4
 800acec:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800acf0:	54fe      	strb	r6, [r7, r3]
 800acf2:	d1ed      	bne.n	800acd0 <E131Bridge::Stop()+0x18>
 800acf4:	6963      	ldr	r3, [r4, #20]
 800acf6:	b17b      	cbz	r3, 800ad18 <E131Bridge::Stop()+0x60>
 800acf8:	2500      	movs	r5, #0
 800acfa:	270c      	movs	r7, #12
 800acfc:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800ad00:	fb07 f305 	mul.w	r3, r7, r5
 800ad04:	5cf3      	ldrb	r3, [r6, r3]
 800ad06:	b123      	cbz	r3, 800ad12 <E131Bridge::Stop()+0x5a>
 800ad08:	6960      	ldr	r0, [r4, #20]
 800ad0a:	4629      	mov	r1, r5
 800ad0c:	6803      	ldr	r3, [r0, #0]
 800ad0e:	68db      	ldr	r3, [r3, #12]
 800ad10:	4798      	blx	r3
 800ad12:	3501      	adds	r5, #1
 800ad14:	2d04      	cmp	r5, #4
 800ad16:	d1f3      	bne.n	800ad00 <E131Bridge::Stop()+0x48>
 800ad18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ad1c:	4b02      	ldr	r3, [pc, #8]	; (800ad28 <E131Bridge::Stop()+0x70>)
 800ad1e:	2100      	movs	r1, #0
 800ad20:	6818      	ldr	r0, [r3, #0]
 800ad22:	f007 b939 	b.w	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800ad26:	bf00      	nop
 800ad28:	2000aef4 	strdcs	sl, [r0], -r4

0800ad2c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800ad2c:	b570      	push	{r4, r5, r6, lr}
 800ad2e:	4604      	mov	r4, r0
 800ad30:	2300      	movs	r3, #0
 800ad32:	2544      	movs	r5, #68	; 0x44
 800ad34:	4610      	mov	r0, r2
 800ad36:	f204 5214 	addw	r2, r4, #1300	; 0x514
 800ad3a:	4299      	cmp	r1, r3
 800ad3c:	d004      	beq.n	800ad48 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800ad3e:	fb05 f603 	mul.w	r6, r5, r3
 800ad42:	5b96      	ldrh	r6, [r2, r6]
 800ad44:	4286      	cmp	r6, r0
 800ad46:	d00e      	beq.n	800ad66 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800ad48:	3301      	adds	r3, #1
 800ad4a:	2b04      	cmp	r3, #4
 800ad4c:	d1f5      	bne.n	800ad3a <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800ad4e:	4b06      	ldr	r3, [pc, #24]	; (800ad68 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800ad50:	6824      	ldr	r4, [r4, #0]
 800ad52:	681d      	ldr	r5, [r3, #0]
 800ad54:	f7ff fe58 	bl	800aa08 <e131::universe_to_multicast_ip(unsigned short)>
 800ad58:	4621      	mov	r1, r4
 800ad5a:	4602      	mov	r2, r0
 800ad5c:	4628      	mov	r0, r5
 800ad5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad62:	f004 bfb7 	b.w	800fcd4 <Network::LeaveGroup(int, unsigned int)>
 800ad66:	bd70      	pop	{r4, r5, r6, pc}
 800ad68:	2000a830 	andcs	sl, r0, r0, lsr r8

0800ad6c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800ad6c:	b570      	push	{r4, r5, r6, lr}
 800ad6e:	4604      	mov	r4, r0
 800ad70:	461d      	mov	r5, r3
 800ad72:	b1c1      	cbz	r1, 800ada6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800ad74:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800ad78:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800ad7c:	b12a      	cbz	r2, 800ad8a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800ad7e:	42aa      	cmp	r2, r5
 800ad80:	d017      	beq.n	800adb2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800ad82:	2104      	movs	r1, #4
 800ad84:	4620      	mov	r0, r4
 800ad86:	f7ff ffd1 	bl	800ad2c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ad8a:	4b0a      	ldr	r3, [pc, #40]	; (800adb4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 800ad8c:	8035      	strh	r5, [r6, #0]
 800ad8e:	4628      	mov	r0, r5
 800ad90:	6826      	ldr	r6, [r4, #0]
 800ad92:	681c      	ldr	r4, [r3, #0]
 800ad94:	f7ff fe38 	bl	800aa08 <e131::universe_to_multicast_ip(unsigned short)>
 800ad98:	4631      	mov	r1, r6
 800ad9a:	4602      	mov	r2, r0
 800ad9c:	4620      	mov	r0, r4
 800ad9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ada2:	f004 bf94 	b.w	800fcce <Network::JoinGroup(int, unsigned int)>
 800ada6:	b122      	cbz	r2, 800adb2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800ada8:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800adac:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800adb0:	e7e4      	b.n	800ad7c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800adb2:	bd70      	pop	{r4, r5, r6, pc}
 800adb4:	2000a830 	andcs	sl, r0, r0, lsr r8

0800adb8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800adb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adbc:	4604      	mov	r4, r0
 800adbe:	460d      	mov	r5, r1
 800adc0:	461e      	mov	r6, r3
 800adc2:	bb02      	cbnz	r2, 800ae06 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800adc4:	2903      	cmp	r1, #3
 800adc6:	d843      	bhi.n	800ae50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800adc8:	230c      	movs	r3, #12
 800adca:	fb03 0301 	mla	r3, r3, r1, r0
 800adce:	f893 2626 	ldrb.w	r2, [r3, #1574]	; 0x626
 800add2:	b12a      	cbz	r2, 800ade0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800add4:	f8b3 3624 	ldrh.w	r3, [r3, #1572]	; 0x624
 800add8:	42b3      	cmp	r3, r6
 800adda:	d109      	bne.n	800adf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800addc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ade0:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800ade4:	3201      	adds	r2, #1
 800ade6:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800adea:	2201      	movs	r2, #1
 800adec:	f883 2626 	strb.w	r2, [r3, #1574]	; 0x626
 800adf0:	230c      	movs	r3, #12
 800adf2:	fb03 4405 	mla	r4, r3, r5, r4
 800adf6:	4630      	mov	r0, r6
 800adf8:	f8a4 6624 	strh.w	r6, [r4, #1572]	; 0x624
 800adfc:	f7ff fe04 	bl	800aa08 <e131::universe_to_multicast_ip(unsigned short)>
 800ae00:	f8c4 0628 	str.w	r0, [r4, #1576]	; 0x628
 800ae04:	e7ea      	b.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae06:	2a02      	cmp	r2, #2
 800ae08:	d122      	bne.n	800ae50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ae0a:	2903      	cmp	r1, #3
 800ae0c:	d8e6      	bhi.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae0e:	2344      	movs	r3, #68	; 0x44
 800ae10:	fb03 0301 	mla	r3, r3, r1, r0
 800ae14:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800ae18:	b152      	cbz	r2, 800ae30 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800ae1a:	2200      	movs	r2, #0
 800ae1c:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800ae20:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800ae24:	4632      	mov	r2, r6
 800ae26:	3b01      	subs	r3, #1
 800ae28:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800ae2c:	f7ff ff7e 	bl	800ad2c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ae30:	230c      	movs	r3, #12
 800ae32:	fb03 4505 	mla	r5, r3, r5, r4
 800ae36:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800ae3a:	2b00      	cmp	r3, #0
 800ae3c:	d0ce      	beq.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae3e:	2300      	movs	r3, #0
 800ae40:	f885 3626 	strb.w	r3, [r5, #1574]	; 0x626
 800ae44:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800ae48:	3b01      	subs	r3, #1
 800ae4a:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800ae4e:	e7c5      	b.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae50:	2344      	movs	r3, #68	; 0x44
 800ae52:	fb03 4305 	mla	r3, r3, r5, r4
 800ae56:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800ae5a:	b1d2      	cbz	r2, 800ae92 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800ae5c:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800ae60:	42b3      	cmp	r3, r6
 800ae62:	d0bb      	beq.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae64:	4632      	mov	r2, r6
 800ae66:	4629      	mov	r1, r5
 800ae68:	4620      	mov	r0, r4
 800ae6a:	f7ff ff5f 	bl	800ad2c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ae6e:	4b0d      	ldr	r3, [pc, #52]	; (800aea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800ae70:	4630      	mov	r0, r6
 800ae72:	681f      	ldr	r7, [r3, #0]
 800ae74:	f8d4 8000 	ldr.w	r8, [r4]
 800ae78:	f7ff fdc6 	bl	800aa08 <e131::universe_to_multicast_ip(unsigned short)>
 800ae7c:	4641      	mov	r1, r8
 800ae7e:	4602      	mov	r2, r0
 800ae80:	4638      	mov	r0, r7
 800ae82:	f004 ff24 	bl	800fcce <Network::JoinGroup(int, unsigned int)>
 800ae86:	2344      	movs	r3, #68	; 0x44
 800ae88:	fb03 4305 	mla	r3, r3, r5, r4
 800ae8c:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800ae90:	e7a4      	b.n	800addc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae92:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800ae96:	3201      	adds	r2, #1
 800ae98:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800ae9c:	2201      	movs	r2, #1
 800ae9e:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800aea2:	e7e4      	b.n	800ae6e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800aea4:	2000a830 	andcs	sl, r0, r0, lsr r8

0800aea8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800aea8:	b953      	cbnz	r3, 800aec0 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800aeaa:	2903      	cmp	r1, #3
 800aeac:	d811      	bhi.n	800aed2 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800aeae:	230c      	movs	r3, #12
 800aeb0:	fb03 0001 	mla	r0, r3, r1, r0
 800aeb4:	f8b0 3624 	ldrh.w	r3, [r0, #1572]	; 0x624
 800aeb8:	f890 0626 	ldrb.w	r0, [r0, #1574]	; 0x626
 800aebc:	8013      	strh	r3, [r2, #0]
 800aebe:	4770      	bx	lr
 800aec0:	2344      	movs	r3, #68	; 0x44
 800aec2:	fb03 0001 	mla	r0, r3, r1, r0
 800aec6:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 800aeca:	f890 0516 	ldrb.w	r0, [r0, #1302]	; 0x516
 800aece:	8013      	strh	r3, [r2, #0]
 800aed0:	4770      	bx	lr
 800aed2:	4618      	mov	r0, r3
 800aed4:	4770      	bx	lr

0800aed6 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800aed6:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800aeda:	b923      	cbnz	r3, 800aee6 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800aedc:	2301      	movs	r3, #1
 800aede:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800aee2:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800aee6:	2344      	movs	r3, #68	; 0x44
 800aee8:	fb03 0001 	mla	r0, r3, r1, r0
 800aeec:	2301      	movs	r3, #1
 800aeee:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 800aef2:	4770      	bx	lr

0800aef4 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800aef4:	4602      	mov	r2, r0
 800aef6:	2044      	movs	r0, #68	; 0x44
 800aef8:	4348      	muls	r0, r1
 800aefa:	b570      	push	{r4, r5, r6, lr}
 800aefc:	1815      	adds	r5, r2, r0
 800aefe:	460c      	mov	r4, r1
 800af00:	68d3      	ldr	r3, [r2, #12]
 800af02:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800af06:	1a5b      	subs	r3, r3, r1
 800af08:	f242 7110 	movw	r1, #10000	; 0x2710
 800af0c:	428b      	cmp	r3, r1
 800af0e:	d90a      	bls.n	800af26 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800af10:	2600      	movs	r6, #0
 800af12:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800af16:	2110      	movs	r1, #16
 800af18:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800af1c:	4410      	add	r0, r2
 800af1e:	f7ff fd99 	bl	800aa54 <memset.constprop.0.isra.0>
 800af22:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800af26:	2344      	movs	r3, #68	; 0x44
 800af28:	435c      	muls	r4, r3
 800af2a:	1915      	adds	r5, r2, r4
 800af2c:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800af30:	68d3      	ldr	r3, [r2, #12]
 800af32:	1a5b      	subs	r3, r3, r1
 800af34:	f242 7110 	movw	r1, #10000	; 0x2710
 800af38:	428b      	cmp	r3, r1
 800af3a:	d90a      	bls.n	800af52 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800af3c:	2600      	movs	r6, #0
 800af3e:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800af42:	2110      	movs	r1, #16
 800af44:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800af48:	1910      	adds	r0, r2, r4
 800af4a:	f7ff fd83 	bl	800aa54 <memset.constprop.0.isra.0>
 800af4e:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800af52:	f892 1599 	ldrb.w	r1, [r2, #1433]	; 0x599
 800af56:	f892 3555 	ldrb.w	r3, [r2, #1365]	; 0x555
 800af5a:	430b      	orrs	r3, r1
 800af5c:	f892 15dd 	ldrb.w	r1, [r2, #1501]	; 0x5dd
 800af60:	430b      	orrs	r3, r1
 800af62:	d107      	bne.n	800af74 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800af64:	f892 3621 	ldrb.w	r3, [r2, #1569]	; 0x621
 800af68:	b923      	cbnz	r3, 800af74 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800af6a:	2101      	movs	r1, #1
 800af6c:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800af70:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800af74:	bd70      	pop	{r4, r5, r6, pc}

0800af76 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800af76:	2244      	movs	r2, #68	; 0x44
 800af78:	fb02 0101 	mla	r1, r2, r1, r0
 800af7c:	68c3      	ldr	r3, [r0, #12]
 800af7e:	b510      	push	{r4, lr}
 800af80:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800af84:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800af88:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800af8c:	1a9a      	subs	r2, r3, r2
 800af8e:	b184      	cbz	r4, 800afb2 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800af90:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800af94:	1a5b      	subs	r3, r3, r1
 800af96:	b128      	cbz	r0, 800afa4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800af98:	f242 700f 	movw	r0, #9999	; 0x270f
 800af9c:	4283      	cmp	r3, r0
 800af9e:	d90d      	bls.n	800afbc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800afa0:	4282      	cmp	r2, r0
 800afa2:	e002      	b.n	800afaa <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800afa4:	f242 7010 	movw	r0, #10000	; 0x2710
 800afa8:	4283      	cmp	r3, r0
 800afaa:	bf94      	ite	ls
 800afac:	2000      	movls	r0, #0
 800afae:	2001      	movhi	r0, #1
 800afb0:	bd10      	pop	{r4, pc}
 800afb2:	2800      	cmp	r0, #0
 800afb4:	d0fc      	beq.n	800afb0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800afb6:	f242 7010 	movw	r0, #10000	; 0x2710
 800afba:	e7f1      	b.n	800afa0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800afbc:	2000      	movs	r0, #0
 800afbe:	e7f7      	b.n	800afb0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800afc0 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800afc0:	684a      	ldr	r2, [r1, #4]
 800afc2:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800afc4:	b510      	push	{r4, lr}
 800afc6:	429a      	cmp	r2, r3
 800afc8:	d10d      	bne.n	800afe6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800afca:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800afce:	3107      	adds	r1, #7
 800afd0:	30a1      	adds	r0, #161	; 0xa1
 800afd2:	4283      	cmp	r3, r0
 800afd4:	d101      	bne.n	800afda <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800afd6:	2001      	movs	r0, #1
 800afd8:	bd10      	pop	{r4, pc}
 800afda:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800afde:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800afe2:	4294      	cmp	r4, r2
 800afe4:	d0f5      	beq.n	800afd2 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800afe6:	2000      	movs	r0, #0
 800afe8:	e7f6      	b.n	800afd8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

0800afec <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800afec:	2301      	movs	r3, #1
 800afee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aff2:	4604      	mov	r4, r0
 800aff4:	4690      	mov	r8, r2
 800aff6:	460f      	mov	r7, r1
 800aff8:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800affc:	2900      	cmp	r1, #0
 800affe:	d044      	beq.n	800b08a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b000:	2a00      	cmp	r2, #0
 800b002:	d042      	beq.n	800b08a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b004:	2600      	movs	r6, #0
 800b006:	f240 6904 	movw	r9, #1540	; 0x604
 800b00a:	4632      	mov	r2, r6
 800b00c:	4637      	mov	r7, r6
 800b00e:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800b012:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800b016:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b01a:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800b01e:	f1b8 0f00 	cmp.w	r8, #0
 800b022:	d018      	beq.n	800b056 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800b024:	2110      	movs	r1, #16
 800b026:	4628      	mov	r0, r5
 800b028:	f845 7c04 	str.w	r7, [r5, #-4]
 800b02c:	f7ff fd12 	bl	800aa54 <memset.constprop.0.isra.0>
 800b030:	2110      	movs	r1, #16
 800b032:	f105 001c 	add.w	r0, r5, #28
 800b036:	61af      	str	r7, [r5, #24]
 800b038:	f7ff fd0c 	bl	800aa54 <memset.constprop.0.isra.0>
 800b03c:	f7ff fd1c 	bl	800aa78 <lightset::Data::Get()>
 800b040:	4642      	mov	r2, r8
 800b042:	fb09 0006 	mla	r0, r9, r6, r0
 800b046:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800b04a:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800b04e:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800b052:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800b056:	3601      	adds	r6, #1
 800b058:	2e04      	cmp	r6, #4
 800b05a:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b05e:	d1dc      	bne.n	800b01a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800b060:	b12a      	cbz	r2, 800b06e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b062:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800b066:	2901      	cmp	r1, #1
 800b068:	d04a      	beq.n	800b100 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800b06a:	2902      	cmp	r1, #2
 800b06c:	d04d      	beq.n	800b10a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800b06e:	4b29      	ldr	r3, [pc, #164]	; (800b114 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800b070:	2102      	movs	r1, #2
 800b072:	6818      	ldr	r0, [r3, #0]
 800b074:	f006 ff90 	bl	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800b078:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b07c:	f023 0302 	bic.w	r3, r3, #2
 800b080:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b084:	b003      	add	sp, #12
 800b086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b08a:	2600      	movs	r6, #0
 800b08c:	f240 6b04 	movw	fp, #1540	; 0x604
 800b090:	4632      	mov	r2, r6
 800b092:	46b1      	mov	r9, r6
 800b094:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800b098:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800b09c:	f1ba 0f00 	cmp.w	sl, #0
 800b0a0:	d028      	beq.n	800b0f4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b0a2:	b15f      	cbz	r7, 800b0bc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b0a4:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800b0a8:	b143      	cbz	r3, 800b0bc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b0aa:	2110      	movs	r1, #16
 800b0ac:	f845 9c20 	str.w	r9, [r5, #-32]
 800b0b0:	f1a5 001c 	sub.w	r0, r5, #28
 800b0b4:	f7ff fcce 	bl	800aa54 <memset.constprop.0.isra.0>
 800b0b8:	f885 9019 	strb.w	r9, [r5, #25]
 800b0bc:	f1b8 0f00 	cmp.w	r8, #0
 800b0c0:	d00a      	beq.n	800b0d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b0c2:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b0c6:	b13b      	cbz	r3, 800b0d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b0c8:	2110      	movs	r1, #16
 800b0ca:	4628      	mov	r0, r5
 800b0cc:	f845 9c04 	str.w	r9, [r5, #-4]
 800b0d0:	f7ff fcc0 	bl	800aa54 <memset.constprop.0.isra.0>
 800b0d4:	f885 9019 	strb.w	r9, [r5, #25]
 800b0d8:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b0dc:	b953      	cbnz	r3, 800b0f4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b0de:	9301      	str	r3, [sp, #4]
 800b0e0:	f7ff fcca 	bl	800aa78 <lightset::Data::Get()>
 800b0e4:	4652      	mov	r2, sl
 800b0e6:	fb0b 0006 	mla	r0, fp, r6, r0
 800b0ea:	9b01      	ldr	r3, [sp, #4]
 800b0ec:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800b0f0:	762b      	strb	r3, [r5, #24]
 800b0f2:	76ab      	strb	r3, [r5, #26]
 800b0f4:	3601      	adds	r6, #1
 800b0f6:	2e04      	cmp	r6, #4
 800b0f8:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b0fc:	d1cc      	bne.n	800b098 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800b0fe:	e7af      	b.n	800b060 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800b100:	6860      	ldr	r0, [r4, #4]
 800b102:	6803      	ldr	r3, [r0, #0]
 800b104:	695b      	ldr	r3, [r3, #20]
 800b106:	4798      	blx	r3
 800b108:	e7b1      	b.n	800b06e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b10a:	6860      	ldr	r0, [r4, #4]
 800b10c:	6803      	ldr	r3, [r0, #0]
 800b10e:	699b      	ldr	r3, [r3, #24]
 800b110:	4798      	blx	r3
 800b112:	e7ac      	b.n	800b06e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b114:	2000aef4 	strdcs	sl, [r0], -r4

0800b118 <E131Bridge::HandleDmx()>:
 800b118:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b120:	4604      	mov	r4, r0
 800b122:	2600      	movs	r6, #0
 800b124:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800b128:	b085      	sub	sp, #20
 800b12a:	ba7f      	rev16	r7, r7
 800b12c:	b2bf      	uxth	r7, r7
 800b12e:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800b132:	3f01      	subs	r7, #1
 800b134:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b138:	9301      	str	r3, [sp, #4]
 800b13a:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800b13e:	b353      	cbz	r3, 800b196 <E131Bridge::HandleDmx()+0x7e>
 800b140:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800b144:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800b148:	ba5b      	rev16	r3, r3
 800b14a:	b29b      	uxth	r3, r3
 800b14c:	429a      	cmp	r2, r3
 800b14e:	d122      	bne.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b150:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b154:	f1a5 0108 	sub.w	r1, r5, #8
 800b158:	4620      	mov	r0, r4
 800b15a:	9302      	str	r3, [sp, #8]
 800b15c:	f7ff ff30 	bl	800afc0 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b160:	f105 0114 	add.w	r1, r5, #20
 800b164:	4682      	mov	sl, r0
 800b166:	4620      	mov	r0, r4
 800b168:	f7ff ff2a 	bl	800afc0 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b16c:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800b170:	4680      	mov	r8, r0
 800b172:	f1ba 0f00 	cmp.w	sl, #0
 800b176:	d01a      	beq.n	800b1ae <E131Bridge::HandleDmx()+0x96>
 800b178:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b17c:	7c2a      	ldrb	r2, [r5, #16]
 800b17e:	742b      	strb	r3, [r5, #16]
 800b180:	3313      	adds	r3, #19
 800b182:	1a9b      	subs	r3, r3, r2
 800b184:	b2db      	uxtb	r3, r3
 800b186:	2b13      	cmp	r3, #19
 800b188:	d905      	bls.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b18a:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800b18e:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b192:	2a00      	cmp	r2, #0
 800b194:	da14      	bge.n	800b1c0 <E131Bridge::HandleDmx()+0xa8>
 800b196:	9b01      	ldr	r3, [sp, #4]
 800b198:	3601      	adds	r6, #1
 800b19a:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800b19e:	2e04      	cmp	r6, #4
 800b1a0:	9301      	str	r3, [sp, #4]
 800b1a2:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b1a6:	d1c8      	bne.n	800b13a <E131Bridge::HandleDmx()+0x22>
 800b1a8:	b005      	add	sp, #20
 800b1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1ae:	2800      	cmp	r0, #0
 800b1b0:	d0eb      	beq.n	800b18a <E131Bridge::HandleDmx()+0x72>
 800b1b2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b1b6:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800b1ba:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b1be:	e7df      	b.n	800b180 <E131Bridge::HandleDmx()+0x68>
 800b1c0:	065a      	lsls	r2, r3, #25
 800b1c2:	d50b      	bpl.n	800b1dc <E131Bridge::HandleDmx()+0xc4>
 800b1c4:	f1ba 0f00 	cmp.w	sl, #0
 800b1c8:	d102      	bne.n	800b1d0 <E131Bridge::HandleDmx()+0xb8>
 800b1ca:	f1b8 0f00 	cmp.w	r8, #0
 800b1ce:	d0e2      	beq.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b1d0:	4642      	mov	r2, r8
 800b1d2:	4651      	mov	r1, sl
 800b1d4:	4620      	mov	r0, r4
 800b1d6:	f7ff ff09 	bl	800afec <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b1da:	e7dc      	b.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b1dc:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b1e0:	b133      	cbz	r3, 800b1f0 <E131Bridge::HandleDmx()+0xd8>
 800b1e2:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800b1e6:	b91b      	cbnz	r3, 800b1f0 <E131Bridge::HandleDmx()+0xd8>
 800b1e8:	4631      	mov	r1, r6
 800b1ea:	4620      	mov	r0, r4
 800b1ec:	f7ff fe82 	bl	800aef4 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800b1f0:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800b1f4:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800b1f8:	4293      	cmp	r3, r2
 800b1fa:	d259      	bcs.n	800b2b0 <E131Bridge::HandleDmx()+0x198>
 800b1fc:	4631      	mov	r1, r6
 800b1fe:	4620      	mov	r0, r4
 800b200:	9303      	str	r3, [sp, #12]
 800b202:	f7ff feb8 	bl	800af76 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800b206:	2800      	cmp	r0, #0
 800b208:	d0c5      	beq.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b20a:	9b03      	ldr	r3, [sp, #12]
 800b20c:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800b210:	9b02      	ldr	r3, [sp, #8]
 800b212:	2b00      	cmp	r3, #0
 800b214:	d154      	bne.n	800b2c0 <E131Bridge::HandleDmx()+0x1a8>
 800b216:	f1bb 0f00 	cmp.w	fp, #0
 800b21a:	d15c      	bne.n	800b2d6 <E131Bridge::HandleDmx()+0x1be>
 800b21c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b21e:	2210      	movs	r2, #16
 800b220:	f845 3c04 	str.w	r3, [r5, #-4]
 800b224:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b228:	4628      	mov	r0, r5
 800b22a:	742b      	strb	r3, [r5, #16]
 800b22c:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b230:	f7ff fc18 	bl	800aa64 <memcpy.isra.0>
 800b234:	68e3      	ldr	r3, [r4, #12]
 800b236:	463a      	mov	r2, r7
 800b238:	4649      	mov	r1, r9
 800b23a:	4630      	mov	r0, r6
 800b23c:	f845 3c08 	str.w	r3, [r5, #-8]
 800b240:	f7ff fc26 	bl	800aa90 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b244:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b248:	069b      	lsls	r3, r3, #26
 800b24a:	f100 80aa 	bmi.w	800b3a2 <E131Bridge::HandleDmx()+0x28a>
 800b24e:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800b252:	b29a      	uxth	r2, r3
 800b254:	2a00      	cmp	r2, #0
 800b256:	f000 80a8 	beq.w	800b3aa <E131Bridge::HandleDmx()+0x292>
 800b25a:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800b25e:	2a00      	cmp	r2, #0
 800b260:	f040 80a3 	bne.w	800b3aa <E131Bridge::HandleDmx()+0x292>
 800b264:	ba5b      	rev16	r3, r3
 800b266:	b29b      	uxth	r3, r3
 800b268:	f1ba 0f00 	cmp.w	sl, #0
 800b26c:	f040 8096 	bne.w	800b39c <E131Bridge::HandleDmx()+0x284>
 800b270:	f1b8 0f00 	cmp.w	r8, #0
 800b274:	f040 8092 	bne.w	800b39c <E131Bridge::HandleDmx()+0x284>
 800b278:	69aa      	ldr	r2, [r5, #24]
 800b27a:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800b27e:	3a00      	subs	r2, #0
 800b280:	bf18      	it	ne
 800b282:	2201      	movne	r2, #1
 800b284:	3900      	subs	r1, #0
 800b286:	bf18      	it	ne
 800b288:	2101      	movne	r1, #1
 800b28a:	4620      	mov	r0, r4
 800b28c:	f7ff fd6e 	bl	800ad6c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800b290:	f240 1301 	movw	r3, #257	; 0x101
 800b294:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800b298:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	f040 8089 	bne.w	800b3b4 <E131Bridge::HandleDmx()+0x29c>
 800b2a2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b2a6:	f043 0302 	orr.w	r3, r3, #2
 800b2aa:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b2ae:	e772      	b.n	800b196 <E131Bridge::HandleDmx()+0x7e>
 800b2b0:	d9ae      	bls.n	800b210 <E131Bridge::HandleDmx()+0xf8>
 800b2b2:	2200      	movs	r2, #0
 800b2b4:	f845 2c04 	str.w	r2, [r5, #-4]
 800b2b8:	61aa      	str	r2, [r5, #24]
 800b2ba:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800b2be:	e7a5      	b.n	800b20c <E131Bridge::HandleDmx()+0xf4>
 800b2c0:	f1ba 0f00 	cmp.w	sl, #0
 800b2c4:	f000 809a 	beq.w	800b3fc <E131Bridge::HandleDmx()+0x2e4>
 800b2c8:	f1bb 0f00 	cmp.w	fp, #0
 800b2cc:	d159      	bne.n	800b382 <E131Bridge::HandleDmx()+0x26a>
 800b2ce:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b2d2:	742b      	strb	r3, [r5, #16]
 800b2d4:	e7ae      	b.n	800b234 <E131Bridge::HandleDmx()+0x11c>
 800b2d6:	f1b8 0f00 	cmp.w	r8, #0
 800b2da:	d038      	beq.n	800b34e <E131Bridge::HandleDmx()+0x236>
 800b2dc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b2e0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b2e4:	68e3      	ldr	r3, [r4, #12]
 800b2e6:	616b      	str	r3, [r5, #20]
 800b2e8:	f7ff fbc6 	bl	800aa78 <lightset::Data::Get()>
 800b2ec:	4683      	mov	fp, r0
 800b2ee:	9b01      	ldr	r3, [sp, #4]
 800b2f0:	463a      	mov	r2, r7
 800b2f2:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800b2f6:	4649      	mov	r1, r9
 800b2f8:	4458      	add	r0, fp
 800b2fa:	f7ff fbb3 	bl	800aa64 <memcpy.isra.0>
 800b2fe:	f240 6304 	movw	r3, #1540	; 0x604
 800b302:	fb03 b306 	mla	r3, r3, r6, fp
 800b306:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b30a:	9b01      	ldr	r3, [sp, #4]
 800b30c:	463a      	mov	r2, r7
 800b30e:	4649      	mov	r1, r9
 800b310:	eb0b 0003 	add.w	r0, fp, r3
 800b314:	f7ff fba6 	bl	800aa64 <memcpy.isra.0>
 800b318:	e794      	b.n	800b244 <E131Bridge::HandleDmx()+0x12c>
 800b31a:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b31c:	2210      	movs	r2, #16
 800b31e:	61ab      	str	r3, [r5, #24]
 800b320:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b324:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b328:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b32c:	f105 001c 	add.w	r0, r5, #28
 800b330:	f7ff fb98 	bl	800aa64 <memcpy.isra.0>
 800b334:	68e3      	ldr	r3, [r4, #12]
 800b336:	4631      	mov	r1, r6
 800b338:	4620      	mov	r0, r4
 800b33a:	616b      	str	r3, [r5, #20]
 800b33c:	f7ff fdcb 	bl	800aed6 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b340:	463a      	mov	r2, r7
 800b342:	4649      	mov	r1, r9
 800b344:	4630      	mov	r0, r6
 800b346:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b348:	f7ff fbe8 	bl	800ab1c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b34c:	e77a      	b.n	800b244 <E131Bridge::HandleDmx()+0x12c>
 800b34e:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b350:	2210      	movs	r2, #16
 800b352:	f845 3c04 	str.w	r3, [r5, #-4]
 800b356:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b35a:	4628      	mov	r0, r5
 800b35c:	742b      	strb	r3, [r5, #16]
 800b35e:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b362:	f7ff fb7f 	bl	800aa64 <memcpy.isra.0>
 800b366:	68e3      	ldr	r3, [r4, #12]
 800b368:	4631      	mov	r1, r6
 800b36a:	4620      	mov	r0, r4
 800b36c:	f845 3c08 	str.w	r3, [r5, #-8]
 800b370:	f7ff fdb1 	bl	800aed6 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b374:	463a      	mov	r2, r7
 800b376:	4649      	mov	r1, r9
 800b378:	4630      	mov	r0, r6
 800b37a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b37c:	f7ff fba5 	bl	800aaca <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b380:	e760      	b.n	800b244 <E131Bridge::HandleDmx()+0x12c>
 800b382:	f1b8 0f00 	cmp.w	r8, #0
 800b386:	d103      	bne.n	800b390 <E131Bridge::HandleDmx()+0x278>
 800b388:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b38c:	742b      	strb	r3, [r5, #16]
 800b38e:	e7ea      	b.n	800b366 <E131Bridge::HandleDmx()+0x24e>
 800b390:	4820      	ldr	r0, [pc, #128]	; (800b414 <E131Bridge::HandleDmx()+0x2fc>)
 800b392:	b005      	add	sp, #20
 800b394:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b398:	f7fd bf6c 	b.w	8009274 <printf>
 800b39c:	4642      	mov	r2, r8
 800b39e:	4651      	mov	r1, sl
 800b3a0:	e773      	b.n	800b28a <E131Bridge::HandleDmx()+0x172>
 800b3a2:	f04f 0300 	mov.w	r3, #0
 800b3a6:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800b3aa:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b3ae:	2b00      	cmp	r3, #0
 800b3b0:	f47f af72 	bne.w	800b298 <E131Bridge::HandleDmx()+0x180>
 800b3b4:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b3b8:	f7ff fb5e 	bl	800aa78 <lightset::Data::Get()>
 800b3bc:	f240 6304 	movw	r3, #1540	; 0x604
 800b3c0:	f8d8 2000 	ldr.w	r2, [r8]
 800b3c4:	fb03 0306 	mla	r3, r3, r6, r0
 800b3c8:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800b3cc:	9a01      	ldr	r2, [sp, #4]
 800b3ce:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800b3d2:	1882      	adds	r2, r0, r2
 800b3d4:	4631      	mov	r1, r6
 800b3d6:	4640      	mov	r0, r8
 800b3d8:	47d0      	blx	sl
 800b3da:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800b3de:	2b00      	cmp	r3, #0
 800b3e0:	f47f af5f 	bne.w	800b2a2 <E131Bridge::HandleDmx()+0x18a>
 800b3e4:	6860      	ldr	r0, [r4, #4]
 800b3e6:	4631      	mov	r1, r6
 800b3e8:	6803      	ldr	r3, [r0, #0]
 800b3ea:	689b      	ldr	r3, [r3, #8]
 800b3ec:	4798      	blx	r3
 800b3ee:	f04f 0301 	mov.w	r3, #1
 800b3f2:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800b3f6:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800b3fa:	e752      	b.n	800b2a2 <E131Bridge::HandleDmx()+0x18a>
 800b3fc:	f1bb 0f00 	cmp.w	fp, #0
 800b400:	d08b      	beq.n	800b31a <E131Bridge::HandleDmx()+0x202>
 800b402:	f1b8 0f00 	cmp.w	r8, #0
 800b406:	d0c3      	beq.n	800b390 <E131Bridge::HandleDmx()+0x278>
 800b408:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b40c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b410:	e790      	b.n	800b334 <E131Bridge::HandleDmx()+0x21c>
 800b412:	bf00      	nop
 800b414:	080156ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, sl, ip, lr}

0800b418 <E131Bridge::IsValidRoot()>:
 800b418:	b530      	push	{r4, r5, lr}
 800b41a:	4a0d      	ldr	r2, [pc, #52]	; (800b450 <E131Bridge::IsValidRoot()+0x38>)
 800b41c:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800b420:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800b424:	4299      	cmp	r1, r3
 800b426:	d109      	bne.n	800b43c <E131Bridge::IsValidRoot()+0x24>
 800b428:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800b42c:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800b430:	d00c      	beq.n	800b44c <E131Bridge::IsValidRoot()+0x34>
 800b432:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800b436:	4258      	negs	r0, r3
 800b438:	4158      	adcs	r0, r3
 800b43a:	bd30      	pop	{r4, r5, pc}
 800b43c:	f812 4b01 	ldrb.w	r4, [r2], #1
 800b440:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800b444:	42a5      	cmp	r5, r4
 800b446:	d0ed      	beq.n	800b424 <E131Bridge::IsValidRoot()+0xc>
 800b448:	2000      	movs	r0, #0
 800b44a:	e7f6      	b.n	800b43a <E131Bridge::IsValidRoot()+0x22>
 800b44c:	2001      	movs	r0, #1
 800b44e:	e7f4      	b.n	800b43a <E131Bridge::IsValidRoot()+0x22>
 800b450:	0801589d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, ip, lr}

0800b454 <E131Bridge::IsValidDataPacket()>:
 800b454:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800b458:	2b02      	cmp	r3, #2
 800b45a:	d10d      	bne.n	800b478 <E131Bridge::IsValidDataPacket()+0x24>
 800b45c:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800b460:	2ba1      	cmp	r3, #161	; 0xa1
 800b462:	d109      	bne.n	800b478 <E131Bridge::IsValidDataPacket()+0x24>
 800b464:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800b468:	b933      	cbnz	r3, 800b478 <E131Bridge::IsValidDataPacket()+0x24>
 800b46a:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800b46e:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800b472:	4258      	negs	r0, r3
 800b474:	4158      	adcs	r0, r3
 800b476:	4770      	bx	lr
 800b478:	2000      	movs	r0, #0
 800b47a:	4770      	bx	lr

0800b47c <E131Bridge::Run()>:
 800b47c:	b530      	push	{r4, r5, lr}
 800b47e:	4601      	mov	r1, r0
 800b480:	4604      	mov	r4, r0
 800b482:	b085      	sub	sp, #20
 800b484:	f10d 030e 	add.w	r3, sp, #14
 800b488:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800b48c:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800b490:	9300      	str	r3, [sp, #0]
 800b492:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800b496:	f003 fee5 	bl	800f264 <udp_recv>
 800b49a:	4b3a      	ldr	r3, [pc, #232]	; (800b584 <E131Bridge::Run()+0x108>)
 800b49c:	681d      	ldr	r5, [r3, #0]
 800b49e:	60e5      	str	r5, [r4, #12]
 800b4a0:	2800      	cmp	r0, #0
 800b4a2:	d138      	bne.n	800b516 <E131Bridge::Run()+0x9a>
 800b4a4:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b4a8:	b16b      	cbz	r3, 800b4c6 <E131Bridge::Run()+0x4a>
 800b4aa:	6923      	ldr	r3, [r4, #16]
 800b4ac:	1aed      	subs	r5, r5, r3
 800b4ae:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800b4b2:	429d      	cmp	r5, r3
 800b4b4:	d928      	bls.n	800b508 <E131Bridge::Run()+0x8c>
 800b4b6:	6863      	ldr	r3, [r4, #4]
 800b4b8:	b9eb      	cbnz	r3, 800b4f6 <E131Bridge::Run()+0x7a>
 800b4ba:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b4be:	f023 0302 	bic.w	r3, r3, #2
 800b4c2:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b4c6:	6963      	ldr	r3, [r4, #20]
 800b4c8:	b12b      	cbz	r3, 800b4d6 <E131Bridge::Run()+0x5a>
 800b4ca:	4620      	mov	r0, r4
 800b4cc:	f000 f94c 	bl	800b768 <E131Bridge::HandleDmxIn()>
 800b4d0:	4620      	mov	r0, r4
 800b4d2:	f000 f8c7 	bl	800b664 <E131Bridge::SendDiscoveryPacket()>
 800b4d6:	7a23      	ldrb	r3, [r4, #8]
 800b4d8:	b15b      	cbz	r3, 800b4f2 <E131Bridge::Run()+0x76>
 800b4da:	4b2b      	ldr	r3, [pc, #172]	; (800b588 <E131Bridge::Run()+0x10c>)
 800b4dc:	6818      	ldr	r0, [r3, #0]
 800b4de:	6843      	ldr	r3, [r0, #4]
 800b4e0:	2b04      	cmp	r3, #4
 800b4e2:	d006      	beq.n	800b4f2 <E131Bridge::Run()+0x76>
 800b4e4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b4e8:	2b00      	cmp	r3, #0
 800b4ea:	d049      	beq.n	800b580 <E131Bridge::Run()+0x104>
 800b4ec:	2103      	movs	r1, #3
 800b4ee:	f006 fd53 	bl	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800b4f2:	b005      	add	sp, #20
 800b4f4:	bd30      	pop	{r4, r5, pc}
 800b4f6:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800b4fa:	2b00      	cmp	r3, #0
 800b4fc:	d1dd      	bne.n	800b4ba <E131Bridge::Run()+0x3e>
 800b4fe:	2201      	movs	r2, #1
 800b500:	4620      	mov	r0, r4
 800b502:	4611      	mov	r1, r2
 800b504:	f7ff fd72 	bl	800afec <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b508:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800b50c:	1a9b      	subs	r3, r3, r2
 800b50e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800b512:	d3d8      	bcc.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b514:	e7d1      	b.n	800b4ba <E131Bridge::Run()+0x3e>
 800b516:	4620      	mov	r0, r4
 800b518:	f7ff ff7e 	bl	800b418 <E131Bridge::IsValidRoot()>
 800b51c:	2800      	cmp	r0, #0
 800b51e:	d0e8      	beq.n	800b4f2 <E131Bridge::Run()+0x76>
 800b520:	2300      	movs	r3, #0
 800b522:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800b526:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b52a:	6125      	str	r5, [r4, #16]
 800b52c:	b15b      	cbz	r3, 800b546 <E131Bridge::Run()+0xca>
 800b52e:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800b532:	b943      	cbnz	r3, 800b546 <E131Bridge::Run()+0xca>
 800b534:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800b538:	1aad      	subs	r5, r5, r2
 800b53a:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800b53e:	4295      	cmp	r5, r2
 800b540:	bf88      	it	hi
 800b542:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800b546:	6863      	ldr	r3, [r4, #4]
 800b548:	2b00      	cmp	r3, #0
 800b54a:	d0bc      	beq.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b54c:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800b550:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800b554:	ba1a      	rev	r2, r3
 800b556:	d108      	bne.n	800b56a <E131Bridge::Run()+0xee>
 800b558:	4620      	mov	r0, r4
 800b55a:	f7ff ff7b 	bl	800b454 <E131Bridge::IsValidDataPacket()>
 800b55e:	2800      	cmp	r0, #0
 800b560:	d0b1      	beq.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b562:	4620      	mov	r0, r4
 800b564:	f7ff fdd8 	bl	800b118 <E131Bridge::HandleDmx()>
 800b568:	e7ad      	b.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b56a:	2a08      	cmp	r2, #8
 800b56c:	d1ab      	bne.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b56e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b572:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b576:	d1a6      	bne.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b578:	4620      	mov	r0, r4
 800b57a:	f000 f973 	bl	800b864 <E131Bridge::HandleSynchronization()>
 800b57e:	e7a2      	b.n	800b4c6 <E131Bridge::Run()+0x4a>
 800b580:	2102      	movs	r1, #2
 800b582:	e7b4      	b.n	800b4ee <E131Bridge::Run()+0x72>
 800b584:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800b588:	2000aef4 	strdcs	sl, [r0], -r4

0800b58c <E131Bridge::FillDiscoveryPacket()>:
 800b58c:	2200      	movs	r2, #0
 800b58e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b592:	b510      	push	{r4, lr}
 800b594:	333c      	adds	r3, #60	; 0x3c
 800b596:	005b      	lsls	r3, r3, #1
 800b598:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800b59c:	69c3      	ldr	r3, [r0, #28]
 800b59e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800b5a2:	428b      	cmp	r3, r1
 800b5a4:	d14a      	bne.n	800b63c <E131Bridge::FillDiscoveryPacket()+0xb0>
 800b5a6:	69c3      	ldr	r3, [r0, #28]
 800b5a8:	492d      	ldr	r1, [pc, #180]	; (800b660 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800b5aa:	701a      	strb	r2, [r3, #0]
 800b5ac:	2210      	movs	r2, #16
 800b5ae:	705a      	strb	r2, [r3, #1]
 800b5b0:	1cda      	adds	r2, r3, #3
 800b5b2:	330f      	adds	r3, #15
 800b5b4:	4293      	cmp	r3, r2
 800b5b6:	d144      	bne.n	800b642 <E131Bridge::FillDiscoveryPacket()+0xb6>
 800b5b8:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b5bc:	69c3      	ldr	r3, [r0, #28]
 800b5be:	3234      	adds	r2, #52	; 0x34
 800b5c0:	0052      	lsls	r2, r2, #1
 800b5c2:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b5c6:	ba52      	rev16	r2, r2
 800b5c8:	821a      	strh	r2, [r3, #16]
 800b5ca:	2200      	movs	r2, #0
 800b5cc:	749a      	strb	r2, [r3, #18]
 800b5ce:	74da      	strb	r2, [r3, #19]
 800b5d0:	751a      	strb	r2, [r3, #20]
 800b5d2:	2208      	movs	r2, #8
 800b5d4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b5d8:	f803 2f15 	strb.w	r2, [r3, #21]!
 800b5dc:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800b5e0:	4291      	cmp	r1, r2
 800b5e2:	d133      	bne.n	800b64c <E131Bridge::FillDiscoveryPacket()+0xc0>
 800b5e4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b5e8:	69c3      	ldr	r3, [r0, #28]
 800b5ea:	3229      	adds	r2, #41	; 0x29
 800b5ec:	0052      	lsls	r2, r2, #1
 800b5ee:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b5f2:	ba52      	rev16	r2, r2
 800b5f4:	84da      	strh	r2, [r3, #38]	; 0x26
 800b5f6:	2200      	movs	r2, #0
 800b5f8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800b5fc:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800b600:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800b604:	2202      	movs	r2, #2
 800b606:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800b60a:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800b60e:	4291      	cmp	r1, r2
 800b610:	d121      	bne.n	800b656 <E131Bridge::FillDiscoveryPacket()+0xca>
 800b612:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b616:	69c2      	ldr	r2, [r0, #28]
 800b618:	3304      	adds	r3, #4
 800b61a:	005b      	lsls	r3, r3, #1
 800b61c:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b620:	ba5b      	rev16	r3, r3
 800b622:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800b626:	2300      	movs	r3, #0
 800b628:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800b62c:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800b630:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800b634:	2301      	movs	r3, #1
 800b636:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800b63a:	bd10      	pop	{r4, pc}
 800b63c:	f803 2b01 	strb.w	r2, [r3], #1
 800b640:	e7af      	b.n	800b5a2 <E131Bridge::FillDiscoveryPacket()+0x16>
 800b642:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b646:	f802 4f01 	strb.w	r4, [r2, #1]!
 800b64a:	e7b3      	b.n	800b5b4 <E131Bridge::FillDiscoveryPacket()+0x28>
 800b64c:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b650:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b654:	e7c4      	b.n	800b5e0 <E131Bridge::FillDiscoveryPacket()+0x54>
 800b656:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b65a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b65e:	e7d6      	b.n	800b60e <E131Bridge::FillDiscoveryPacket()+0x82>
 800b660:	0801589d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, ip, lr}

0800b664 <E131Bridge::SendDiscoveryPacket()>:
 800b664:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b666:	f242 710f 	movw	r1, #9999	; 0x270f
 800b66a:	68c2      	ldr	r2, [r0, #12]
 800b66c:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800b670:	4604      	mov	r4, r0
 800b672:	1ad3      	subs	r3, r2, r3
 800b674:	428b      	cmp	r3, r1
 800b676:	d924      	bls.n	800b6c2 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800b678:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b67c:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800b680:	b1ab      	cbz	r3, 800b6ae <E131Bridge::SendDiscoveryPacket()+0x4a>
 800b682:	2500      	movs	r5, #0
 800b684:	462e      	mov	r6, r5
 800b686:	2300      	movs	r3, #0
 800b688:	4629      	mov	r1, r5
 800b68a:	4620      	mov	r0, r4
 800b68c:	f10d 020e 	add.w	r2, sp, #14
 800b690:	f7ff fc0a 	bl	800aea8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b694:	b140      	cbz	r0, 800b6a8 <E131Bridge::SendDiscoveryPacket()+0x44>
 800b696:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b69a:	69e2      	ldr	r2, [r4, #28]
 800b69c:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800b6a0:	ba5b      	rev16	r3, r3
 800b6a2:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800b6a6:	3601      	adds	r6, #1
 800b6a8:	3501      	adds	r5, #1
 800b6aa:	2d04      	cmp	r5, #4
 800b6ac:	d1eb      	bne.n	800b686 <E131Bridge::SendDiscoveryPacket()+0x22>
 800b6ae:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b6b2:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800b6b6:	9300      	str	r3, [sp, #0]
 800b6b8:	69e1      	ldr	r1, [r4, #28]
 800b6ba:	6a23      	ldr	r3, [r4, #32]
 800b6bc:	7820      	ldrb	r0, [r4, #0]
 800b6be:	f003 fe2d 	bl	800f31c <udp_send>
 800b6c2:	b004      	add	sp, #16
 800b6c4:	bd70      	pop	{r4, r5, r6, pc}

0800b6c6 <memcpy.isra.0>:
 800b6c6:	3801      	subs	r0, #1
 800b6c8:	440a      	add	r2, r1
 800b6ca:	4291      	cmp	r1, r2
 800b6cc:	d100      	bne.n	800b6d0 <memcpy.isra.0+0xa>
 800b6ce:	4770      	bx	lr
 800b6d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b6d4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b6d8:	e7f7      	b.n	800b6ca <memcpy.isra.0+0x4>
	...

0800b6dc <E131Bridge::FillDataPacket()>:
 800b6dc:	b570      	push	{r4, r5, r6, lr}
 800b6de:	2400      	movs	r4, #0
 800b6e0:	2610      	movs	r6, #16
 800b6e2:	4605      	mov	r5, r0
 800b6e4:	6980      	ldr	r0, [r0, #24]
 800b6e6:	220c      	movs	r2, #12
 800b6e8:	7046      	strb	r6, [r0, #1]
 800b6ea:	7004      	strb	r4, [r0, #0]
 800b6ec:	7084      	strb	r4, [r0, #2]
 800b6ee:	70c4      	strb	r4, [r0, #3]
 800b6f0:	491c      	ldr	r1, [pc, #112]	; (800b764 <E131Bridge::FillDataPacket()+0x88>)
 800b6f2:	3004      	adds	r0, #4
 800b6f4:	f7ff ffe7 	bl	800b6c6 <memcpy.isra.0>
 800b6f8:	2304      	movs	r3, #4
 800b6fa:	4632      	mov	r2, r6
 800b6fc:	2602      	movs	r6, #2
 800b6fe:	69a8      	ldr	r0, [r5, #24]
 800b700:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800b704:	7543      	strb	r3, [r0, #21]
 800b706:	7484      	strb	r4, [r0, #18]
 800b708:	74c4      	strb	r4, [r0, #19]
 800b70a:	7504      	strb	r4, [r0, #20]
 800b70c:	3016      	adds	r0, #22
 800b70e:	f7ff ffda 	bl	800b6c6 <memcpy.isra.0>
 800b712:	69a8      	ldr	r0, [r5, #24]
 800b714:	2240      	movs	r2, #64	; 0x40
 800b716:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800b71a:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800b71e:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800b722:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800b726:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800b72a:	302c      	adds	r0, #44	; 0x2c
 800b72c:	f7ff ffcb 	bl	800b6c6 <memcpy.isra.0>
 800b730:	22a1      	movs	r2, #161	; 0xa1
 800b732:	69ab      	ldr	r3, [r5, #24]
 800b734:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800b738:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800b73c:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800b740:	69ab      	ldr	r3, [r5, #24]
 800b742:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800b746:	69ab      	ldr	r3, [r5, #24]
 800b748:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800b74c:	2201      	movs	r2, #1
 800b74e:	69ab      	ldr	r3, [r5, #24]
 800b750:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800b754:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800b758:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800b75c:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800b760:	bd70      	pop	{r4, r5, r6, pc}
 800b762:	bf00      	nop
 800b764:	0801589d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, ip, lr}

0800b768 <E131Bridge::HandleDmxIn()>:
 800b768:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b76c:	4604      	mov	r4, r0
 800b76e:	4605      	mov	r5, r0
 800b770:	2600      	movs	r6, #0
 800b772:	4f3b      	ldr	r7, [pc, #236]	; (800b860 <E131Bridge::HandleDmxIn()+0xf8>)
 800b774:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800b778:	2b00      	cmp	r3, #0
 800b77a:	d058      	beq.n	800b82e <E131Bridge::HandleDmxIn()+0xc6>
 800b77c:	6960      	ldr	r0, [r4, #20]
 800b77e:	4631      	mov	r1, r6
 800b780:	6803      	ldr	r3, [r0, #0]
 800b782:	aa02      	add	r2, sp, #8
 800b784:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b788:	ab03      	add	r3, sp, #12
 800b78a:	47c0      	blx	r8
 800b78c:	4601      	mov	r1, r0
 800b78e:	2800      	cmp	r0, #0
 800b790:	d055      	beq.n	800b83e <E131Bridge::HandleDmxIn()+0xd6>
 800b792:	9a02      	ldr	r2, [sp, #8]
 800b794:	69a0      	ldr	r0, [r4, #24]
 800b796:	b293      	uxth	r3, r2
 800b798:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800b79c:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b7a0:	fa9c fc9c 	rev16.w	ip, ip
 800b7a4:	f8a0 c010 	strh.w	ip, [r0, #16]
 800b7a8:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800b7ac:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b7b0:	fa9c fc9c 	rev16.w	ip, ip
 800b7b4:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800b7b8:	f895 c62d 	ldrb.w	ip, [r5, #1581]	; 0x62d
 800b7bc:	330a      	adds	r3, #10
 800b7be:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800b7c2:	f895 c62c 	ldrb.w	ip, [r5, #1580]	; 0x62c
 800b7c6:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b7ca:	f10c 0001 	add.w	r0, ip, #1
 800b7ce:	f885 062c 	strb.w	r0, [r5, #1580]	; 0x62c
 800b7d2:	69a0      	ldr	r0, [r4, #24]
 800b7d4:	ba5b      	rev16	r3, r3
 800b7d6:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800b7da:	f8b5 c624 	ldrh.w	ip, [r5, #1572]	; 0x624
 800b7de:	69a0      	ldr	r0, [r4, #24]
 800b7e0:	fa9c fc9c 	rev16.w	ip, ip
 800b7e4:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800b7e8:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800b7ec:	307d      	adds	r0, #125	; 0x7d
 800b7ee:	f7ff ff6a 	bl	800b6c6 <memcpy.isra.0>
 800b7f2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b7f6:	69a1      	ldr	r1, [r4, #24]
 800b7f8:	ba53      	rev16	r3, r2
 800b7fa:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800b7fe:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b802:	327d      	adds	r2, #125	; 0x7d
 800b804:	9300      	str	r3, [sp, #0]
 800b806:	f8d5 3628 	ldr.w	r3, [r5, #1576]	; 0x628
 800b80a:	b292      	uxth	r2, r2
 800b80c:	7820      	ldrb	r0, [r4, #0]
 800b80e:	f003 fd85 	bl	800f31c <udp_send>
 800b812:	2301      	movs	r3, #1
 800b814:	683a      	ldr	r2, [r7, #0]
 800b816:	40b3      	lsls	r3, r6
 800b818:	ea33 0102 	bics.w	r1, r3, r2
 800b81c:	d007      	beq.n	800b82e <E131Bridge::HandleDmxIn()+0xc6>
 800b81e:	4313      	orrs	r3, r2
 800b820:	603b      	str	r3, [r7, #0]
 800b822:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b826:	f043 0301 	orr.w	r3, r3, #1
 800b82a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b82e:	3601      	adds	r6, #1
 800b830:	2e04      	cmp	r6, #4
 800b832:	f105 050c 	add.w	r5, r5, #12
 800b836:	d19d      	bne.n	800b774 <E131Bridge::HandleDmxIn()+0xc>
 800b838:	b004      	add	sp, #16
 800b83a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b83e:	9b03      	ldr	r3, [sp, #12]
 800b840:	2b00      	cmp	r3, #0
 800b842:	d1f4      	bne.n	800b82e <E131Bridge::HandleDmxIn()+0xc6>
 800b844:	2201      	movs	r2, #1
 800b846:	683b      	ldr	r3, [r7, #0]
 800b848:	40b2      	lsls	r2, r6
 800b84a:	ea23 0302 	bic.w	r3, r3, r2
 800b84e:	603b      	str	r3, [r7, #0]
 800b850:	2b00      	cmp	r3, #0
 800b852:	d1ec      	bne.n	800b82e <E131Bridge::HandleDmxIn()+0xc6>
 800b854:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b858:	f023 0301 	bic.w	r3, r3, #1
 800b85c:	e7e5      	b.n	800b82a <E131Bridge::HandleDmxIn()+0xc2>
 800b85e:	bf00      	nop
 800b860:	20001ed0 	ldrdcs	r1, [r0], -r0

0800b864 <E131Bridge::HandleSynchronization()>:
 800b864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b868:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800b86c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b870:	ba5b      	rev16	r3, r3
 800b872:	b29b      	uxth	r3, r3
 800b874:	429a      	cmp	r2, r3
 800b876:	4604      	mov	r4, r0
 800b878:	d00a      	beq.n	800b890 <E131Bridge::HandleSynchronization()+0x2c>
 800b87a:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b87e:	429a      	cmp	r2, r3
 800b880:	d006      	beq.n	800b890 <E131Bridge::HandleSynchronization()+0x2c>
 800b882:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b886:	4b23      	ldr	r3, [pc, #140]	; (800b914 <E131Bridge::HandleSynchronization()+0xb0>)
 800b888:	2102      	movs	r1, #2
 800b88a:	6818      	ldr	r0, [r3, #0]
 800b88c:	f006 bb84 	b.w	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800b890:	2500      	movs	r5, #0
 800b892:	4627      	mov	r7, r4
 800b894:	46a9      	mov	r9, r5
 800b896:	68e3      	ldr	r3, [r4, #12]
 800b898:	4e1f      	ldr	r6, [pc, #124]	; (800b918 <E131Bridge::HandleSynchronization()+0xb4>)
 800b89a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800b91c <E131Bridge::HandleSynchronization()+0xb8>
 800b89e:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800b8a2:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800b8a6:	b323      	cbz	r3, 800b8f2 <E131Bridge::HandleSynchronization()+0x8e>
 800b8a8:	f8d8 3000 	ldr.w	r3, [r8]
 800b8ac:	6860      	ldr	r0, [r4, #4]
 800b8ae:	07da      	lsls	r2, r3, #31
 800b8b0:	bf5c      	itt	pl
 800b8b2:	2301      	movpl	r3, #1
 800b8b4:	f8c8 3000 	strpl.w	r3, [r8]
 800b8b8:	6803      	ldr	r3, [r0, #0]
 800b8ba:	4629      	mov	r1, r5
 800b8bc:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b8c0:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800b8c4:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800b8c8:	47d0      	blx	sl
 800b8ca:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800b8ce:	b93b      	cbnz	r3, 800b8e0 <E131Bridge::HandleSynchronization()+0x7c>
 800b8d0:	6860      	ldr	r0, [r4, #4]
 800b8d2:	4629      	mov	r1, r5
 800b8d4:	6803      	ldr	r3, [r0, #0]
 800b8d6:	689b      	ldr	r3, [r3, #8]
 800b8d8:	4798      	blx	r3
 800b8da:	2301      	movs	r3, #1
 800b8dc:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800b8e0:	f8d8 3000 	ldr.w	r3, [r8]
 800b8e4:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800b8e8:	07db      	lsls	r3, r3, #31
 800b8ea:	bf5c      	itt	pl
 800b8ec:	2301      	movpl	r3, #1
 800b8ee:	f8c8 3000 	strpl.w	r3, [r8]
 800b8f2:	3501      	adds	r5, #1
 800b8f4:	2d04      	cmp	r5, #4
 800b8f6:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800b8fa:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800b8fe:	d1d0      	bne.n	800b8a2 <E131Bridge::HandleSynchronization()+0x3e>
 800b900:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b902:	b120      	cbz	r0, 800b90e <E131Bridge::HandleSynchronization()+0xaa>
 800b904:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b908:	6803      	ldr	r3, [r0, #0]
 800b90a:	689b      	ldr	r3, [r3, #8]
 800b90c:	4718      	bx	r3
 800b90e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b912:	bf00      	nop
 800b914:	2000aef4 	strdcs	sl, [r0], -r4
 800b918:	200006bc 			; <UNDEFINED> instruction: 0x200006bc
 800b91c:	200006b8 			; <UNDEFINED> instruction: 0x200006b8

0800b920 <E131Bridge::Print()>:
 800b920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b924:	2500      	movs	r5, #0
 800b926:	4604      	mov	r4, r0
 800b928:	b08c      	sub	sp, #48	; 0x30
 800b92a:	a902      	add	r1, sp, #8
 800b92c:	3024      	adds	r0, #36	; 0x24
 800b92e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b932:	f000 fc47 	bl	800c1c4 <uuid_unparse>
 800b936:	482c      	ldr	r0, [pc, #176]	; (800b9e8 <E131Bridge::Print()+0xc8>)
 800b938:	f7fd fc9c 	bl	8009274 <printf>
 800b93c:	4b2b      	ldr	r3, [pc, #172]	; (800b9ec <E131Bridge::Print()+0xcc>)
 800b93e:	482c      	ldr	r0, [pc, #176]	; (800b9f0 <E131Bridge::Print()+0xd0>)
 800b940:	7819      	ldrb	r1, [r3, #0]
 800b942:	785a      	ldrb	r2, [r3, #1]
 800b944:	f7fd fc96 	bl	8009274 <printf>
 800b948:	482a      	ldr	r0, [pc, #168]	; (800b9f4 <E131Bridge::Print()+0xd4>)
 800b94a:	a902      	add	r1, sp, #8
 800b94c:	f7fd fc92 	bl	8009274 <printf>
 800b950:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b954:	b303      	cbz	r3, 800b998 <E131Bridge::Print()+0x78>
 800b956:	4828      	ldr	r0, [pc, #160]	; (800b9f8 <E131Bridge::Print()+0xd8>)
 800b958:	f7fd fc8c 	bl	8009274 <printf>
 800b95c:	4e27      	ldr	r6, [pc, #156]	; (800b9fc <E131Bridge::Print()+0xdc>)
 800b95e:	4f28      	ldr	r7, [pc, #160]	; (800ba00 <E131Bridge::Print()+0xe0>)
 800b960:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ba04 <E131Bridge::Print()+0xe4>
 800b964:	2301      	movs	r3, #1
 800b966:	4629      	mov	r1, r5
 800b968:	4620      	mov	r0, r4
 800b96a:	f10d 0206 	add.w	r2, sp, #6
 800b96e:	f7ff fa9b 	bl	800aea8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b972:	b170      	cbz	r0, 800b992 <E131Bridge::Print()+0x72>
 800b974:	2344      	movs	r3, #68	; 0x44
 800b976:	436b      	muls	r3, r5
 800b978:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800b97c:	58d3      	ldr	r3, [r2, r3]
 800b97e:	4629      	mov	r1, r5
 800b980:	2b00      	cmp	r3, #0
 800b982:	bf0c      	ite	eq
 800b984:	4633      	moveq	r3, r6
 800b986:	463b      	movne	r3, r7
 800b988:	4640      	mov	r0, r8
 800b98a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b98e:	f7fd fc71 	bl	8009274 <printf>
 800b992:	3501      	adds	r5, #1
 800b994:	2d04      	cmp	r5, #4
 800b996:	d1e5      	bne.n	800b964 <E131Bridge::Print()+0x44>
 800b998:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b99c:	b1d3      	cbz	r3, 800b9d4 <E131Bridge::Print()+0xb4>
 800b99e:	481a      	ldr	r0, [pc, #104]	; (800ba08 <E131Bridge::Print()+0xe8>)
 800b9a0:	f7fd fc68 	bl	8009274 <printf>
 800b9a4:	2500      	movs	r5, #0
 800b9a6:	4e19      	ldr	r6, [pc, #100]	; (800ba0c <E131Bridge::Print()+0xec>)
 800b9a8:	2300      	movs	r3, #0
 800b9aa:	4629      	mov	r1, r5
 800b9ac:	4620      	mov	r0, r4
 800b9ae:	f10d 0206 	add.w	r2, sp, #6
 800b9b2:	f7ff fa79 	bl	800aea8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b9b6:	b150      	cbz	r0, 800b9ce <E131Bridge::Print()+0xae>
 800b9b8:	230c      	movs	r3, #12
 800b9ba:	436b      	muls	r3, r5
 800b9bc:	f204 622d 	addw	r2, r4, #1581	; 0x62d
 800b9c0:	5cd3      	ldrb	r3, [r2, r3]
 800b9c2:	4629      	mov	r1, r5
 800b9c4:	4630      	mov	r0, r6
 800b9c6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b9ca:	f7fd fc53 	bl	8009274 <printf>
 800b9ce:	3501      	adds	r5, #1
 800b9d0:	2d04      	cmp	r5, #4
 800b9d2:	d1e9      	bne.n	800b9a8 <E131Bridge::Print()+0x88>
 800b9d4:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b9d8:	b113      	cbz	r3, 800b9e0 <E131Bridge::Print()+0xc0>
 800b9da:	480d      	ldr	r0, [pc, #52]	; (800ba10 <E131Bridge::Print()+0xf0>)
 800b9dc:	f7fd fc4a 	bl	8009274 <printf>
 800b9e0:	b00c      	add	sp, #48	; 0x30
 800b9e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9e6:	bf00      	nop
 800b9e8:	08015724 	stmdaeq	r1, {r2, r5, r8, r9, sl, ip, lr}
 800b9ec:	080158a9 	stmdaeq	r1, {r0, r3, r5, r7, fp, ip, lr}
 800b9f0:	0801572c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, ip, lr}
 800b9f4:	0801573f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, ip, lr}
 800b9f8:	0801574f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, lr}
 800b9fc:	0801571c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, ip, lr}
 800ba00:	08015720 	stmdaeq	r1, {r5, r8, r9, sl, ip, lr}
 800ba04:	08015758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, ip, lr}
 800ba08:	08015777 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip, lr}
 800ba0c:	0801577f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, ip, lr}
 800ba10:	0801579e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, r9, sl, ip, lr}

0800ba14 <memcmp>:
 800ba14:	4402      	add	r2, r0
 800ba16:	4290      	cmp	r0, r2
 800ba18:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800ba1c:	d106      	bne.n	800ba2c <memcmp+0x18>
 800ba1e:	2000      	movs	r0, #0
 800ba20:	4770      	bx	lr
 800ba22:	3001      	adds	r0, #1
 800ba24:	4290      	cmp	r0, r2
 800ba26:	d102      	bne.n	800ba2e <memcmp+0x1a>
 800ba28:	2000      	movs	r0, #0
 800ba2a:	e006      	b.n	800ba3a <memcmp+0x26>
 800ba2c:	b510      	push	{r4, lr}
 800ba2e:	7803      	ldrb	r3, [r0, #0]
 800ba30:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ba34:	42a3      	cmp	r3, r4
 800ba36:	d0f4      	beq.n	800ba22 <memcmp+0xe>
 800ba38:	1b18      	subs	r0, r3, r4
 800ba3a:	bd10      	pop	{r4, pc}

0800ba3c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800ba3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ba3e:	88c6      	ldrh	r6, [r0, #6]
 800ba40:	8885      	ldrh	r5, [r0, #4]
 800ba42:	42ae      	cmp	r6, r5
 800ba44:	d216      	bcs.n	800ba74 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800ba46:	4604      	mov	r4, r0
 800ba48:	6800      	ldr	r0, [r0, #0]
 800ba4a:	1bad      	subs	r5, r5, r6
 800ba4c:	4430      	add	r0, r6
 800ba4e:	7a26      	ldrb	r6, [r4, #8]
 800ba50:	b923      	cbnz	r3, 800ba5c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800ba52:	b926      	cbnz	r6, 800ba5e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800ba54:	9200      	str	r2, [sp, #0]
 800ba56:	460b      	mov	r3, r1
 800ba58:	4a09      	ldr	r2, [pc, #36]	; (800ba80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800ba5a:	e003      	b.n	800ba64 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ba5c:	b166      	cbz	r6, 800ba78 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800ba5e:	460b      	mov	r3, r1
 800ba60:	9200      	str	r2, [sp, #0]
 800ba62:	4a08      	ldr	r2, [pc, #32]	; (800ba84 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800ba64:	4629      	mov	r1, r5
 800ba66:	f7fd fc2d 	bl	80092c4 <snprintf>
 800ba6a:	4285      	cmp	r5, r0
 800ba6c:	bfa2      	ittt	ge
 800ba6e:	88e3      	ldrhge	r3, [r4, #6]
 800ba70:	181b      	addge	r3, r3, r0
 800ba72:	80e3      	strhge	r3, [r4, #6]
 800ba74:	b002      	add	sp, #8
 800ba76:	bd70      	pop	{r4, r5, r6, pc}
 800ba78:	9200      	str	r2, [sp, #0]
 800ba7a:	460b      	mov	r3, r1
 800ba7c:	4a02      	ldr	r2, [pc, #8]	; (800ba88 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ba7e:	e7f1      	b.n	800ba64 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ba80:	08014968 	stmdaeq	r1, {r3, r5, r6, r8, fp, lr}
 800ba84:	0801495d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, lr}
 800ba88:	08014969 	stmdaeq	r1, {r0, r3, r5, r6, r8, fp, lr}

0800ba8c <E131Params::E131Params(E131ParamsStore*)>:
 800ba8c:	b510      	push	{r4, lr}
 800ba8e:	2219      	movs	r2, #25
 800ba90:	4604      	mov	r4, r0
 800ba92:	f840 1b04 	str.w	r1, [r0], #4
 800ba96:	2100      	movs	r1, #0
 800ba98:	f006 fc34 	bl	8012304 <memset>
 800ba9c:	2201      	movs	r2, #1
 800ba9e:	72e2      	strb	r2, [r4, #11]
 800baa0:	2202      	movs	r2, #2
 800baa2:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800baa6:	f8a4 200d 	strh.w	r2, [r4, #13]
 800baaa:	2203      	movs	r2, #3
 800baac:	f8c4 301f 	str.w	r3, [r4, #31]
 800bab0:	2300      	movs	r3, #0
 800bab2:	2155      	movs	r1, #85	; 0x55
 800bab4:	f8a4 200f 	strh.w	r2, [r4, #15]
 800bab8:	2204      	movs	r2, #4
 800baba:	7323      	strb	r3, [r4, #12]
 800babc:	77a3      	strb	r3, [r4, #30]
 800babe:	4b04      	ldr	r3, [pc, #16]	; (800bad0 <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800bac0:	7761      	strb	r1, [r4, #29]
 800bac2:	6819      	ldr	r1, [r3, #0]
 800bac4:	f8a4 2011 	strh.w	r2, [r4, #17]
 800bac8:	b901      	cbnz	r1, 800bacc <E131Params::E131Params(E131ParamsStore*)+0x40>
 800baca:	601a      	str	r2, [r3, #0]
 800bacc:	4620      	mov	r0, r4
 800bace:	bd10      	pop	{r4, pc}
 800bad0:	20001ed4 	ldrdcs	r1, [r0], -r4

0800bad4 <E131Params::Load()>:
 800bad4:	b508      	push	{r3, lr}
 800bad6:	2300      	movs	r3, #0
 800bad8:	4601      	mov	r1, r0
 800bada:	6043      	str	r3, [r0, #4]
 800badc:	6800      	ldr	r0, [r0, #0]
 800bade:	b120      	cbz	r0, 800baea <E131Params::Load()+0x16>
 800bae0:	6803      	ldr	r3, [r0, #0]
 800bae2:	3104      	adds	r1, #4
 800bae4:	68db      	ldr	r3, [r3, #12]
 800bae6:	4798      	blx	r3
 800bae8:	2001      	movs	r0, #1
 800baea:	bd08      	pop	{r3, pc}

0800baec <E131Params::Load(char const*, unsigned int)>:
 800baec:	6803      	ldr	r3, [r0, #0]
 800baee:	b1d3      	cbz	r3, 800bb26 <E131Params::Load(char const*, unsigned int)+0x3a>
 800baf0:	2300      	movs	r3, #0
 800baf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800baf4:	460d      	mov	r5, r1
 800baf6:	4616      	mov	r6, r2
 800baf8:	4604      	mov	r4, r0
 800bafa:	6043      	str	r3, [r0, #4]
 800bafc:	4602      	mov	r2, r0
 800bafe:	490a      	ldr	r1, [pc, #40]	; (800bb28 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800bb00:	4668      	mov	r0, sp
 800bb02:	f005 fd7f 	bl	8011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bb06:	4632      	mov	r2, r6
 800bb08:	4629      	mov	r1, r5
 800bb0a:	4668      	mov	r0, sp
 800bb0c:	f005 fd7e 	bl	801160c <ReadConfigFile::Read(char const*, unsigned int)>
 800bb10:	4621      	mov	r1, r4
 800bb12:	f851 0b04 	ldr.w	r0, [r1], #4
 800bb16:	6803      	ldr	r3, [r0, #0]
 800bb18:	689b      	ldr	r3, [r3, #8]
 800bb1a:	4798      	blx	r3
 800bb1c:	4668      	mov	r0, sp
 800bb1e:	f005 fd74 	bl	801160a <ReadConfigFile::~ReadConfigFile()>
 800bb22:	b002      	add	sp, #8
 800bb24:	bd70      	pop	{r4, r5, r6, pc}
 800bb26:	4770      	bx	lr
 800bb28:	0800bdc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, sp, pc}

0800bb2c <E131Params::callbackFunction(char const*)>:
 800bb2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb30:	460e      	mov	r6, r1
 800bb32:	2708      	movs	r7, #8
 800bb34:	b087      	sub	sp, #28
 800bb36:	4604      	mov	r4, r0
 800bb38:	4997      	ldr	r1, [pc, #604]	; (800bd98 <E131Params::callbackFunction(char const*)+0x26c>)
 800bb3a:	4630      	mov	r0, r6
 800bb3c:	ab01      	add	r3, sp, #4
 800bb3e:	eb0d 0207 	add.w	r2, sp, r7
 800bb42:	9701      	str	r7, [sp, #4]
 800bb44:	f005 fd96 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bb48:	bb68      	cbnz	r0, 800bba6 <E131Params::callbackFunction(char const*)+0x7a>
 800bb4a:	2204      	movs	r2, #4
 800bb4c:	4993      	ldr	r1, [pc, #588]	; (800bd9c <E131Params::callbackFunction(char const*)+0x270>)
 800bb4e:	eb0d 0007 	add.w	r0, sp, r7
 800bb52:	f7ff ff5f 	bl	800ba14 <memcmp>
 800bb56:	6865      	ldr	r5, [r4, #4]
 800bb58:	b1a0      	cbz	r0, 800bb84 <E131Params::callbackFunction(char const*)+0x58>
 800bb5a:	2203      	movs	r2, #3
 800bb5c:	4990      	ldr	r1, [pc, #576]	; (800bda0 <E131Params::callbackFunction(char const*)+0x274>)
 800bb5e:	eb0d 0007 	add.w	r0, sp, r7
 800bb62:	f7ff ff57 	bl	800ba14 <memcmp>
 800bb66:	b1b0      	cbz	r0, 800bb96 <E131Params::callbackFunction(char const*)+0x6a>
 800bb68:	2202      	movs	r2, #2
 800bb6a:	498e      	ldr	r1, [pc, #568]	; (800bda4 <E131Params::callbackFunction(char const*)+0x278>)
 800bb6c:	eb0d 0007 	add.w	r0, sp, r7
 800bb70:	f7ff ff50 	bl	800ba14 <memcmp>
 800bb74:	b198      	cbz	r0, 800bb9e <E131Params::callbackFunction(char const*)+0x72>
 800bb76:	463a      	mov	r2, r7
 800bb78:	498b      	ldr	r1, [pc, #556]	; (800bda8 <E131Params::callbackFunction(char const*)+0x27c>)
 800bb7a:	eb0d 0007 	add.w	r0, sp, r7
 800bb7e:	f7ff ff49 	bl	800ba14 <memcmp>
 800bb82:	b170      	cbz	r0, 800bba2 <E131Params::callbackFunction(char const*)+0x76>
 800bb84:	2300      	movs	r3, #0
 800bb86:	f025 0501 	bic.w	r5, r5, #1
 800bb8a:	6065      	str	r5, [r4, #4]
 800bb8c:	f8a4 3009 	strh.w	r3, [r4, #9]
 800bb90:	b007      	add	sp, #28
 800bb92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb96:	2301      	movs	r3, #1
 800bb98:	f045 0501 	orr.w	r5, r5, #1
 800bb9c:	e7f5      	b.n	800bb8a <E131Params::callbackFunction(char const*)+0x5e>
 800bb9e:	2302      	movs	r3, #2
 800bba0:	e7fa      	b.n	800bb98 <E131Params::callbackFunction(char const*)+0x6c>
 800bba2:	2303      	movs	r3, #3
 800bba4:	e7f8      	b.n	800bb98 <E131Params::callbackFunction(char const*)+0x6c>
 800bba6:	2500      	movs	r5, #0
 800bba8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 800bdac <E131Params::callbackFunction(char const*)+0x280>
 800bbac:	f8df 8200 	ldr.w	r8, [pc, #512]	; 800bdb0 <E131Params::callbackFunction(char const*)+0x284>
 800bbb0:	f8df a200 	ldr.w	sl, [pc, #512]	; 800bdb4 <E131Params::callbackFunction(char const*)+0x288>
 800bbb4:	f8df b200 	ldr.w	fp, [pc, #512]	; 800bdb8 <E131Params::callbackFunction(char const*)+0x28c>
 800bbb8:	4649      	mov	r1, r9
 800bbba:	4630      	mov	r0, r6
 800bbbc:	f10d 0202 	add.w	r2, sp, #2
 800bbc0:	f005 fe15 	bl	80117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bbc4:	b9d8      	cbnz	r0, 800bbfe <E131Params::callbackFunction(char const*)+0xd2>
 800bbc6:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800bbca:	2310      	movs	r3, #16
 800bbcc:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800bbd0:	6861      	ldr	r1, [r4, #4]
 800bbd2:	1e42      	subs	r2, r0, #1
 800bbd4:	b292      	uxth	r2, r2
 800bbd6:	42b2      	cmp	r2, r6
 800bbd8:	fa03 f305 	lsl.w	r3, r3, r5
 800bbdc:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800bbe0:	d907      	bls.n	800bbf2 <E131Params::callbackFunction(char const*)+0xc6>
 800bbe2:	3501      	adds	r5, #1
 800bbe4:	4422      	add	r2, r4
 800bbe6:	ea21 0103 	bic.w	r1, r1, r3
 800bbea:	f8a2 500b 	strh.w	r5, [r2, #11]
 800bbee:	6061      	str	r1, [r4, #4]
 800bbf0:	e7ce      	b.n	800bb90 <E131Params::callbackFunction(char const*)+0x64>
 800bbf2:	4422      	add	r2, r4
 800bbf4:	f8a2 000b 	strh.w	r0, [r2, #11]
 800bbf8:	430b      	orrs	r3, r1
 800bbfa:	6063      	str	r3, [r4, #4]
 800bbfc:	e7c8      	b.n	800bb90 <E131Params::callbackFunction(char const*)+0x64>
 800bbfe:	2712      	movs	r7, #18
 800bc00:	2303      	movs	r3, #3
 800bc02:	436f      	muls	r7, r5
 800bc04:	9301      	str	r3, [sp, #4]
 800bc06:	4630      	mov	r0, r6
 800bc08:	ab01      	add	r3, sp, #4
 800bc0a:	aa02      	add	r2, sp, #8
 800bc0c:	eb0a 0107 	add.w	r1, sl, r7
 800bc10:	f005 fd30 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bc14:	bb00      	cbnz	r0, 800bc58 <E131Params::callbackFunction(char const*)+0x12c>
 800bc16:	f44f 7380 	mov.w	r3, #256	; 0x100
 800bc1a:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800bc1e:	40ab      	lsls	r3, r5
 800bc20:	f041 0120 	orr.w	r1, r1, #32
 800bc24:	296c      	cmp	r1, #108	; 0x6c
 800bc26:	6862      	ldr	r2, [r4, #4]
 800bc28:	4425      	add	r5, r4
 800bc2a:	d10f      	bne.n	800bc4c <E131Params::callbackFunction(char const*)+0x120>
 800bc2c:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800bc30:	f041 0120 	orr.w	r1, r1, #32
 800bc34:	2974      	cmp	r1, #116	; 0x74
 800bc36:	d109      	bne.n	800bc4c <E131Params::callbackFunction(char const*)+0x120>
 800bc38:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800bc3c:	f041 0120 	orr.w	r1, r1, #32
 800bc40:	2970      	cmp	r1, #112	; 0x70
 800bc42:	d103      	bne.n	800bc4c <E131Params::callbackFunction(char const*)+0x120>
 800bc44:	2101      	movs	r1, #1
 800bc46:	7529      	strb	r1, [r5, #20]
 800bc48:	4313      	orrs	r3, r2
 800bc4a:	e7d6      	b.n	800bbfa <E131Params::callbackFunction(char const*)+0xce>
 800bc4c:	2100      	movs	r1, #0
 800bc4e:	ea22 0203 	bic.w	r2, r2, r3
 800bc52:	7529      	strb	r1, [r5, #20]
 800bc54:	6062      	str	r2, [r4, #4]
 800bc56:	e79b      	b.n	800bb90 <E131Params::callbackFunction(char const*)+0x64>
 800bc58:	2307      	movs	r3, #7
 800bc5a:	4630      	mov	r0, r6
 800bc5c:	9301      	str	r3, [sp, #4]
 800bc5e:	aa02      	add	r2, sp, #8
 800bc60:	ab01      	add	r3, sp, #4
 800bc62:	eb0b 0107 	add.w	r1, fp, r7
 800bc66:	f005 fd05 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bc6a:	2800      	cmp	r0, #0
 800bc6c:	d15e      	bne.n	800bd2c <E131Params::callbackFunction(char const*)+0x200>
 800bc6e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800bc72:	f043 0320 	orr.w	r3, r3, #32
 800bc76:	2b69      	cmp	r3, #105	; 0x69
 800bc78:	d123      	bne.n	800bcc2 <E131Params::callbackFunction(char const*)+0x196>
 800bc7a:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800bc7e:	f043 0320 	orr.w	r3, r3, #32
 800bc82:	2b6e      	cmp	r3, #110	; 0x6e
 800bc84:	d146      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bc86:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bc8a:	f043 0320 	orr.w	r3, r3, #32
 800bc8e:	2b70      	cmp	r3, #112	; 0x70
 800bc90:	d140      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bc92:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bc96:	f043 0320 	orr.w	r3, r3, #32
 800bc9a:	2b75      	cmp	r3, #117	; 0x75
 800bc9c:	d13a      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bc9e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bca2:	f043 0320 	orr.w	r3, r3, #32
 800bca6:	3b74      	subs	r3, #116	; 0x74
 800bca8:	bf18      	it	ne
 800bcaa:	2301      	movne	r3, #1
 800bcac:	2103      	movs	r1, #3
 800bcae:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800bcb2:	006d      	lsls	r5, r5, #1
 800bcb4:	40a9      	lsls	r1, r5
 800bcb6:	ea22 0201 	bic.w	r2, r2, r1
 800bcba:	bb6b      	cbnz	r3, 800bd18 <E131Params::callbackFunction(char const*)+0x1ec>
 800bcbc:	f8a4 201d 	strh.w	r2, [r4, #29]
 800bcc0:	e766      	b.n	800bb90 <E131Params::callbackFunction(char const*)+0x64>
 800bcc2:	2b64      	cmp	r3, #100	; 0x64
 800bcc4:	d126      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcc6:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800bcca:	f043 0320 	orr.w	r3, r3, #32
 800bcce:	2b69      	cmp	r3, #105	; 0x69
 800bcd0:	d120      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcd2:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bcd6:	f043 0320 	orr.w	r3, r3, #32
 800bcda:	2b73      	cmp	r3, #115	; 0x73
 800bcdc:	d11a      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcde:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bce2:	f043 0320 	orr.w	r3, r3, #32
 800bce6:	2b61      	cmp	r3, #97	; 0x61
 800bce8:	d114      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcea:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bcee:	f043 0320 	orr.w	r3, r3, #32
 800bcf2:	2b62      	cmp	r3, #98	; 0x62
 800bcf4:	d10e      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcf6:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800bcfa:	f043 0320 	orr.w	r3, r3, #32
 800bcfe:	2b6c      	cmp	r3, #108	; 0x6c
 800bd00:	d108      	bne.n	800bd14 <E131Params::callbackFunction(char const*)+0x1e8>
 800bd02:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800bd06:	f043 0320 	orr.w	r3, r3, #32
 800bd0a:	2b65      	cmp	r3, #101	; 0x65
 800bd0c:	bf14      	ite	ne
 800bd0e:	2301      	movne	r3, #1
 800bd10:	2302      	moveq	r3, #2
 800bd12:	e7cb      	b.n	800bcac <E131Params::callbackFunction(char const*)+0x180>
 800bd14:	2301      	movs	r3, #1
 800bd16:	e7c9      	b.n	800bcac <E131Params::callbackFunction(char const*)+0x180>
 800bd18:	2b02      	cmp	r3, #2
 800bd1a:	bf15      	itete	ne
 800bd1c:	2301      	movne	r3, #1
 800bd1e:	40ab      	lsleq	r3, r5
 800bd20:	fa03 f505 	lslne.w	r5, r3, r5
 800bd24:	431a      	orreq	r2, r3
 800bd26:	bf18      	it	ne
 800bd28:	432a      	orrne	r2, r5
 800bd2a:	e7c7      	b.n	800bcbc <E131Params::callbackFunction(char const*)+0x190>
 800bd2c:	4641      	mov	r1, r8
 800bd2e:	4630      	mov	r0, r6
 800bd30:	f10d 0201 	add.w	r2, sp, #1
 800bd34:	f005 fda2 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bd38:	b998      	cbnz	r0, 800bd62 <E131Params::callbackFunction(char const*)+0x236>
 800bd3a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bd3e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800bd42:	40aa      	lsls	r2, r5
 800bd44:	1e48      	subs	r0, r1, #1
 800bd46:	b2c0      	uxtb	r0, r0
 800bd48:	28c7      	cmp	r0, #199	; 0xc7
 800bd4a:	6863      	ldr	r3, [r4, #4]
 800bd4c:	4425      	add	r5, r4
 800bd4e:	d803      	bhi.n	800bd58 <E131Params::callbackFunction(char const*)+0x22c>
 800bd50:	2964      	cmp	r1, #100	; 0x64
 800bd52:	d001      	beq.n	800bd58 <E131Params::callbackFunction(char const*)+0x22c>
 800bd54:	77e9      	strb	r1, [r5, #31]
 800bd56:	e777      	b.n	800bc48 <E131Params::callbackFunction(char const*)+0x11c>
 800bd58:	2164      	movs	r1, #100	; 0x64
 800bd5a:	ea23 0302 	bic.w	r3, r3, r2
 800bd5e:	77e9      	strb	r1, [r5, #31]
 800bd60:	e74b      	b.n	800bbfa <E131Params::callbackFunction(char const*)+0xce>
 800bd62:	3501      	adds	r5, #1
 800bd64:	2d04      	cmp	r5, #4
 800bd66:	f109 0910 	add.w	r9, r9, #16
 800bd6a:	f108 0812 	add.w	r8, r8, #18
 800bd6e:	f47f af23 	bne.w	800bbb8 <E131Params::callbackFunction(char const*)+0x8c>
 800bd72:	4630      	mov	r0, r6
 800bd74:	4911      	ldr	r1, [pc, #68]	; (800bdbc <E131Params::callbackFunction(char const*)+0x290>)
 800bd76:	f10d 0201 	add.w	r2, sp, #1
 800bd7a:	f005 fd7f 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bd7e:	2800      	cmp	r0, #0
 800bd80:	f47f af06 	bne.w	800bb90 <E131Params::callbackFunction(char const*)+0x64>
 800bd84:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bd88:	6863      	ldr	r3, [r4, #4]
 800bd8a:	b112      	cbz	r2, 800bd92 <E131Params::callbackFunction(char const*)+0x266>
 800bd8c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800bd90:	e733      	b.n	800bbfa <E131Params::callbackFunction(char const*)+0xce>
 800bd92:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800bd96:	e730      	b.n	800bbfa <E131Params::callbackFunction(char const*)+0xce>
 800bd98:	08016b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, sp, lr}
 800bd9c:	080157f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800bda0:	080157fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800bda4:	08014ace 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, fp, lr}
 800bda8:	080157ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800bdac:	08016a82 	stmdaeq	r1, {r1, r7, r9, fp, sp, lr}
 800bdb0:	0801584c 	stmdaeq	r1, {r2, r3, r6, fp, ip, lr}
 800bdb4:	08016ad6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, fp, sp, lr}
 800bdb8:	08016b58 	stmdaeq	r1, {r3, r4, r6, r8, r9, fp, sp, lr}
 800bdbc:	08016b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, sp, lr}

0800bdc0 <E131Params::staticCallbackFunction(void*, char const*)>:
 800bdc0:	f7ff beb4 	b.w	800bb2c <E131Params::callbackFunction(char const*)>

0800bdc4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800bdc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdc8:	4604      	mov	r4, r0
 800bdca:	4615      	mov	r5, r2
 800bdcc:	461e      	mov	r6, r3
 800bdce:	b087      	sub	sp, #28
 800bdd0:	3004      	adds	r0, #4
 800bdd2:	2900      	cmp	r1, #0
 800bdd4:	d05f      	beq.n	800be96 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800bdd6:	221f      	movs	r2, #31
 800bdd8:	f006 fa7d 	bl	80122d6 <memmove>
 800bddc:	4633      	mov	r3, r6
 800bdde:	462a      	mov	r2, r5
 800bde0:	4990      	ldr	r1, [pc, #576]	; (800c024 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800bde2:	a803      	add	r0, sp, #12
 800bde4:	f005 fb6e 	bl	80114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bde8:	2500      	movs	r5, #0
 800bdea:	4f8f      	ldr	r7, [pc, #572]	; (800c028 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800bdec:	4e8f      	ldr	r6, [pc, #572]	; (800c02c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800bdee:	f8df 8240 	ldr.w	r8, [pc, #576]	; 800c030 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800bdf2:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800c034 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>
 800bdf6:	f8d8 2000 	ldr.w	r2, [r8]
 800bdfa:	6863      	ldr	r3, [r4, #4]
 800bdfc:	42aa      	cmp	r2, r5
 800bdfe:	d851      	bhi.n	800bea4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800be00:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800be04:	4a8c      	ldr	r2, [pc, #560]	; (800c038 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800be06:	f003 0301 	and.w	r3, r3, #1
 800be0a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800be0e:	a803      	add	r0, sp, #12
 800be10:	498a      	ldr	r1, [pc, #552]	; (800c03c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800be12:	f7ff fe13 	bl	800ba3c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800be16:	498a      	ldr	r1, [pc, #552]	; (800c040 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800be18:	a803      	add	r0, sp, #12
 800be1a:	f005 fbd9 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800be1e:	2500      	movs	r5, #0
 800be20:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800be24:	4e87      	ldr	r6, [pc, #540]	; (800c044 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800be26:	f8df 9220 	ldr.w	r9, [pc, #544]	; 800c048 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800be2a:	f8df a220 	ldr.w	sl, [pc, #544]	; 800c04c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>
 800be2e:	f104 0713 	add.w	r7, r4, #19
 800be32:	f8d8 3000 	ldr.w	r3, [r8]
 800be36:	42ab      	cmp	r3, r5
 800be38:	d87f      	bhi.n	800bf3a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800be3a:	4985      	ldr	r1, [pc, #532]	; (800c050 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800be3c:	a803      	add	r0, sp, #12
 800be3e:	f005 fbc7 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800be42:	2700      	movs	r7, #0
 800be44:	4e83      	ldr	r6, [pc, #524]	; (800c054 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800be46:	f8df a210 	ldr.w	sl, [pc, #528]	; 800c058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800be4a:	f8df b210 	ldr.w	fp, [pc, #528]	; 800c05c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800be4e:	f104 091e 	add.w	r9, r4, #30
 800be52:	f8d8 3000 	ldr.w	r3, [r8]
 800be56:	42bb      	cmp	r3, r7
 800be58:	f200 8083 	bhi.w	800bf62 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800be5c:	4980      	ldr	r1, [pc, #512]	; (800c060 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800be5e:	a803      	add	r0, sp, #12
 800be60:	f005 fbb6 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800be64:	6863      	ldr	r3, [r4, #4]
 800be66:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be6a:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800be6e:	42a2      	cmp	r2, r4
 800be70:	f080 80b8 	bcs.w	800bfe4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800be74:	9803      	ldr	r0, [sp, #12]
 800be76:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800be7a:	4410      	add	r0, r2
 800be7c:	eba4 0402 	sub.w	r4, r4, r2
 800be80:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800be84:	f040 809d 	bne.w	800bfc2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800be88:	2a00      	cmp	r2, #0
 800be8a:	f040 809b 	bne.w	800bfc4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800be8e:	9200      	str	r2, [sp, #0]
 800be90:	4b74      	ldr	r3, [pc, #464]	; (800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800be92:	4a72      	ldr	r2, [pc, #456]	; (800c05c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800be94:	e09c      	b.n	800bfd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800be96:	6823      	ldr	r3, [r4, #0]
 800be98:	4601      	mov	r1, r0
 800be9a:	681a      	ldr	r2, [r3, #0]
 800be9c:	4618      	mov	r0, r3
 800be9e:	68d2      	ldr	r2, [r2, #12]
 800bea0:	4790      	blx	r2
 800bea2:	e79b      	b.n	800bddc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800bea4:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800bea8:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800beac:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800beb0:	45dc      	cmp	ip, fp
 800beb2:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800beb6:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800beba:	d221      	bcs.n	800bf00 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800bebc:	2110      	movs	r1, #16
 800bebe:	9803      	ldr	r0, [sp, #12]
 800bec0:	40a9      	lsls	r1, r5
 800bec2:	ea31 0303 	bics.w	r3, r1, r3
 800bec6:	4460      	add	r0, ip
 800bec8:	ebab 0b0c 	sub.w	fp, fp, ip
 800becc:	f89d c014 	ldrb.w	ip, [sp, #20]
 800bed0:	d006      	beq.n	800bee0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800bed2:	f1bc 0f00 	cmp.w	ip, #0
 800bed6:	d106      	bne.n	800bee6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800bed8:	9200      	str	r2, [sp, #0]
 800beda:	4633      	mov	r3, r6
 800bedc:	4a5f      	ldr	r2, [pc, #380]	; (800c05c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800bede:	e005      	b.n	800beec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800bee0:	f1bc 0f00 	cmp.w	ip, #0
 800bee4:	d023      	beq.n	800bf2e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800bee6:	9200      	str	r2, [sp, #0]
 800bee8:	4633      	mov	r3, r6
 800beea:	464a      	mov	r2, r9
 800beec:	4659      	mov	r1, fp
 800beee:	f7fd f9e9 	bl	80092c4 <snprintf>
 800bef2:	4583      	cmp	fp, r0
 800bef4:	bfa2      	ittt	ge
 800bef6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800befa:	18c0      	addge	r0, r0, r3
 800befc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800bf00:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800bf04:	fa23 f30a 	lsr.w	r3, r3, sl
 800bf08:	f013 0303 	ands.w	r3, r3, #3
 800bf0c:	d013      	beq.n	800bf36 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800bf0e:	4a56      	ldr	r2, [pc, #344]	; (800c068 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800bf10:	4956      	ldr	r1, [pc, #344]	; (800c06c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800bf12:	2b02      	cmp	r3, #2
 800bf14:	bf08      	it	eq
 800bf16:	460a      	moveq	r2, r1
 800bf18:	3b01      	subs	r3, #1
 800bf1a:	4639      	mov	r1, r7
 800bf1c:	bf18      	it	ne
 800bf1e:	2301      	movne	r3, #1
 800bf20:	a803      	add	r0, sp, #12
 800bf22:	f7ff fd8b 	bl	800ba3c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bf26:	3501      	adds	r5, #1
 800bf28:	3712      	adds	r7, #18
 800bf2a:	3610      	adds	r6, #16
 800bf2c:	e763      	b.n	800bdf6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800bf2e:	9200      	str	r2, [sp, #0]
 800bf30:	4633      	mov	r3, r6
 800bf32:	4a49      	ldr	r2, [pc, #292]	; (800c058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800bf34:	e7da      	b.n	800beec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800bf36:	4a4e      	ldr	r2, [pc, #312]	; (800c070 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800bf38:	e7ee      	b.n	800bf18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800bf3a:	6861      	ldr	r1, [r4, #4]
 800bf3c:	fa0b f305 	lsl.w	r3, fp, r5
 800bf40:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800bf44:	438b      	bics	r3, r1
 800bf46:	bf0c      	ite	eq
 800bf48:	2301      	moveq	r3, #1
 800bf4a:	2300      	movne	r3, #0
 800bf4c:	4631      	mov	r1, r6
 800bf4e:	2a00      	cmp	r2, #0
 800bf50:	bf0c      	ite	eq
 800bf52:	464a      	moveq	r2, r9
 800bf54:	4652      	movne	r2, sl
 800bf56:	a803      	add	r0, sp, #12
 800bf58:	f7ff fd70 	bl	800ba3c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bf5c:	3501      	adds	r5, #1
 800bf5e:	3612      	adds	r6, #18
 800bf60:	e767      	b.n	800be32 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800bf62:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800bf66:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800bf6a:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800bf6e:	42a9      	cmp	r1, r5
 800bf70:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800bf74:	d21e      	bcs.n	800bfb4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800bf76:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bf7a:	9803      	ldr	r0, [sp, #12]
 800bf7c:	40ba      	lsls	r2, r7
 800bf7e:	ea32 0c0c 	bics.w	ip, r2, ip
 800bf82:	4408      	add	r0, r1
 800bf84:	eba5 0501 	sub.w	r5, r5, r1
 800bf88:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800bf8c:	d004      	beq.n	800bf98 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800bf8e:	b921      	cbnz	r1, 800bf9a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800bf90:	9300      	str	r3, [sp, #0]
 800bf92:	465a      	mov	r2, fp
 800bf94:	4633      	mov	r3, r6
 800bf96:	e003      	b.n	800bfa0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800bf98:	b179      	cbz	r1, 800bfba <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800bf9a:	9300      	str	r3, [sp, #0]
 800bf9c:	4633      	mov	r3, r6
 800bf9e:	4a25      	ldr	r2, [pc, #148]	; (800c034 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800bfa0:	4629      	mov	r1, r5
 800bfa2:	f7fd f98f 	bl	80092c4 <snprintf>
 800bfa6:	4285      	cmp	r5, r0
 800bfa8:	bfa2      	ittt	ge
 800bfaa:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800bfae:	18c0      	addge	r0, r0, r3
 800bfb0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800bfb4:	3701      	adds	r7, #1
 800bfb6:	3612      	adds	r6, #18
 800bfb8:	e74b      	b.n	800be52 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800bfba:	9300      	str	r3, [sp, #0]
 800bfbc:	4652      	mov	r2, sl
 800bfbe:	4633      	mov	r3, r6
 800bfc0:	e7ee      	b.n	800bfa0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800bfc2:	b34a      	cbz	r2, 800c018 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800bfc4:	3b00      	subs	r3, #0
 800bfc6:	bf18      	it	ne
 800bfc8:	2301      	movne	r3, #1
 800bfca:	4a1a      	ldr	r2, [pc, #104]	; (800c034 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800bfcc:	9300      	str	r3, [sp, #0]
 800bfce:	4b25      	ldr	r3, [pc, #148]	; (800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800bfd0:	4621      	mov	r1, r4
 800bfd2:	f7fd f977 	bl	80092c4 <snprintf>
 800bfd6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800bfda:	4284      	cmp	r4, r0
 800bfdc:	bfa4      	itt	ge
 800bfde:	181b      	addge	r3, r3, r0
 800bfe0:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800bfe4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800bfe8:	b17b      	cbz	r3, 800c00a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800bfea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800bfee:	9b03      	ldr	r3, [sp, #12]
 800bff0:	4413      	add	r3, r2
 800bff2:	227d      	movs	r2, #125	; 0x7d
 800bff4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800bff8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800bffc:	9903      	ldr	r1, [sp, #12]
 800bffe:	54ca      	strb	r2, [r1, r3]
 800c000:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c004:	3301      	adds	r3, #1
 800c006:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c00a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c00e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c010:	601a      	str	r2, [r3, #0]
 800c012:	b007      	add	sp, #28
 800c014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c018:	2301      	movs	r3, #1
 800c01a:	4a0f      	ldr	r2, [pc, #60]	; (800c058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c01c:	9300      	str	r3, [sp, #0]
 800c01e:	4b11      	ldr	r3, [pc, #68]	; (800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c020:	e7d6      	b.n	800bfd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800c022:	bf00      	nop
 800c024:	08015894 	stmdaeq	r1, {r2, r4, r7, fp, ip, lr}
 800c028:	08016b58 	stmdaeq	r1, {r3, r4, r6, r8, r9, fp, sp, lr}
 800c02c:	08016a82 	stmdaeq	r1, {r1, r7, r9, fp, sp, lr}
 800c030:	20001ed4 	ldrdcs	r1, [r0], -r4
 800c034:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 800c038:	0801583c 	stmdaeq	r1, {r2, r3, r4, r5, fp, ip, lr}
 800c03c:	08016b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, sp, lr}
 800c040:	08015825 	stmdaeq	r1, {r0, r2, r5, fp, ip, lr}
 800c044:	08016ad6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, fp, sp, lr}
 800c048:	08015821 	stmdaeq	r1, {r0, r5, fp, ip, lr}
 800c04c:	0801581d 	stmdaeq	r1, {r0, r2, r3, r4, fp, ip, lr}
 800c050:	08015830 	stmdaeq	r1, {r4, r5, fp, ip, lr}
 800c054:	0801584c 	stmdaeq	r1, {r2, r3, r6, fp, ip, lr}
 800c058:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}
 800c05c:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 800c060:	08014715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, lr}
 800c064:	08016b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, sp, lr}
 800c068:	0801580e 	stmdaeq	r1, {r1, r2, r3, fp, ip, lr}
 800c06c:	08015815 	stmdaeq	r1, {r0, r2, r4, fp, ip, lr}
 800c070:	08015808 	stmdaeq	r1, {r3, fp, ip, lr}

0800c074 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800c074:	b513      	push	{r0, r1, r4, lr}
 800c076:	6804      	ldr	r4, [r0, #0]
 800c078:	b914      	cbnz	r4, 800c080 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800c07a:	601c      	str	r4, [r3, #0]
 800c07c:	b002      	add	sp, #8
 800c07e:	bd10      	pop	{r4, pc}
 800c080:	9300      	str	r3, [sp, #0]
 800c082:	4613      	mov	r3, r2
 800c084:	460a      	mov	r2, r1
 800c086:	2100      	movs	r1, #0
 800c088:	f7ff fe9c 	bl	800bdc4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800c08c:	e7f6      	b.n	800c07c <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800c090 <E131Params::Set(unsigned int)>:
 800c090:	1e4b      	subs	r3, r1, #1
 800c092:	2b02      	cmp	r3, #2
 800c094:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c098:	d807      	bhi.n	800c0aa <E131Params::Set(unsigned int)+0x1a>
 800c09a:	4a26      	ldr	r2, [pc, #152]	; (800c134 <E131Params::Set(unsigned int)+0xa4>)
 800c09c:	f1c1 0304 	rsb	r3, r1, #4
 800c0a0:	6814      	ldr	r4, [r2, #0]
 800c0a2:	42a3      	cmp	r3, r4
 800c0a4:	bf94      	ite	ls
 800c0a6:	6013      	strls	r3, [r2, #0]
 800c0a8:	6014      	strhi	r4, [r2, #0]
 800c0aa:	6843      	ldr	r3, [r0, #4]
 800c0ac:	b1eb      	cbz	r3, 800c0ea <E131Params::Set(unsigned int)+0x5a>
 800c0ae:	4b22      	ldr	r3, [pc, #136]	; (800c138 <E131Params::Set(unsigned int)+0xa8>)
 800c0b0:	2244      	movs	r2, #68	; 0x44
 800c0b2:	681c      	ldr	r4, [r3, #0]
 800c0b4:	4b1f      	ldr	r3, [pc, #124]	; (800c134 <E131Params::Set(unsigned int)+0xa4>)
 800c0b6:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800c0ba:	681f      	ldr	r7, [r3, #0]
 800c0bc:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800c0c0:	2300      	movs	r3, #0
 800c0c2:	f04f 090c 	mov.w	r9, #12
 800c0c6:	fb02 4201 	mla	r2, r2, r1, r4
 800c0ca:	f100 0514 	add.w	r5, r0, #20
 800c0ce:	f204 682d 	addw	r8, r4, #1581	; 0x62d
 800c0d2:	429f      	cmp	r7, r3
 800c0d4:	6846      	ldr	r6, [r0, #4]
 800c0d6:	d10a      	bne.n	800c0ee <E131Params::Set(unsigned int)+0x5e>
 800c0d8:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800c0dc:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800c0e0:	04b3      	lsls	r3, r6, #18
 800c0e2:	bf44      	itt	mi
 800c0e4:	2301      	movmi	r3, #1
 800c0e6:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800c0ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0ee:	eb03 0a01 	add.w	sl, r3, r1
 800c0f2:	f1ba 0f03 	cmp.w	sl, #3
 800c0f6:	d8ef      	bhi.n	800c0d8 <E131Params::Set(unsigned int)+0x48>
 800c0f8:	fa0c fa03 	lsl.w	sl, ip, r3
 800c0fc:	ea3a 0a06 	bics.w	sl, sl, r6
 800c100:	bf04      	itt	eq
 800c102:	f895 a000 	ldrbeq.w	sl, [r5]
 800c106:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800c10a:	fa0e fa03 	lsl.w	sl, lr, r3
 800c10e:	ea3a 0a06 	bics.w	sl, sl, r6
 800c112:	d10a      	bne.n	800c12a <E131Params::Set(unsigned int)+0x9a>
 800c114:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800c118:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800c11c:	b2f6      	uxtb	r6, r6
 800c11e:	2ec7      	cmp	r6, #199	; 0xc7
 800c120:	bf9c      	itt	ls
 800c122:	fb09 f603 	mulls.w	r6, r9, r3
 800c126:	f808 a006 	strbls.w	sl, [r8, r6]
 800c12a:	3301      	adds	r3, #1
 800c12c:	3501      	adds	r5, #1
 800c12e:	3244      	adds	r2, #68	; 0x44
 800c130:	e7cf      	b.n	800c0d2 <E131Params::Set(unsigned int)+0x42>
 800c132:	bf00      	nop
 800c134:	20001ed4 	ldrdcs	r1, [r0], -r4
 800c138:	20001ecc 	andcs	r1, r0, ip, asr #29

0800c13c <E131Params::Dump()>:
 800c13c:	4770      	bx	lr

0800c13e <uuid_unparse_x>:
 800c13e:	4603      	mov	r3, r0
 800c140:	b530      	push	{r4, r5, lr}
 800c142:	4608      	mov	r0, r1
 800c144:	4611      	mov	r1, r2
 800c146:	681a      	ldr	r2, [r3, #0]
 800c148:	b08f      	sub	sp, #60	; 0x3c
 800c14a:	ba12      	rev	r2, r2
 800c14c:	920a      	str	r2, [sp, #40]	; 0x28
 800c14e:	889a      	ldrh	r2, [r3, #4]
 800c150:	891c      	ldrh	r4, [r3, #8]
 800c152:	ba52      	rev16	r2, r2
 800c154:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c158:	88da      	ldrh	r2, [r3, #6]
 800c15a:	ba64      	rev16	r4, r4
 800c15c:	ba52      	rev16	r2, r2
 800c15e:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800c162:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800c166:	f103 020a 	add.w	r2, r3, #10
 800c16a:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800c16e:	3310      	adds	r3, #16
 800c170:	4293      	cmp	r3, r2
 800c172:	d122      	bne.n	800c1ba <uuid_unparse_x+0x7c>
 800c174:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800c178:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c17c:	9208      	str	r2, [sp, #32]
 800c17e:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800c182:	0a1b      	lsrs	r3, r3, #8
 800c184:	9207      	str	r2, [sp, #28]
 800c186:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800c18a:	9301      	str	r3, [sp, #4]
 800c18c:	9206      	str	r2, [sp, #24]
 800c18e:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800c192:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800c196:	9205      	str	r2, [sp, #20]
 800c198:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800c19c:	9300      	str	r3, [sp, #0]
 800c19e:	9204      	str	r2, [sp, #16]
 800c1a0:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800c1a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c1a8:	9203      	str	r2, [sp, #12]
 800c1aa:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800c1ae:	9202      	str	r2, [sp, #8]
 800c1b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c1b2:	f7fd f86f 	bl	8009294 <sprintf>
 800c1b6:	b00f      	add	sp, #60	; 0x3c
 800c1b8:	bd30      	pop	{r4, r5, pc}
 800c1ba:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c1be:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c1c2:	e7d5      	b.n	800c170 <uuid_unparse_x+0x32>

0800c1c4 <uuid_unparse>:
 800c1c4:	4a01      	ldr	r2, [pc, #4]	; (800c1cc <uuid_unparse+0x8>)
 800c1c6:	f7ff bfba 	b.w	800c13e <uuid_unparse_x>
 800c1ca:	bf00      	nop
 800c1cc:	080158ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, fp, ip, lr}

0800c1d0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800c1d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1d2:	4604      	mov	r4, r0
 800c1d4:	460e      	mov	r6, r1
 800c1d6:	4611      	mov	r1, r2
 800c1d8:	4617      	mov	r7, r2
 800c1da:	461d      	mov	r5, r3
 800c1dc:	f000 fdb4 	bl	800cd48 <PixelConfiguration::Validate(unsigned int&)>
 800c1e0:	7d62      	ldrb	r2, [r4, #21]
 800c1e2:	b94a      	cbnz	r2, 800c1f8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800c1e4:	6823      	ldr	r3, [r4, #0]
 800c1e6:	b11b      	cbz	r3, 800c1f0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800c1e8:	3b0b      	subs	r3, #11
 800c1ea:	2b01      	cmp	r3, #1
 800c1ec:	bf88      	it	hi
 800c1ee:	6022      	strhi	r2, [r4, #0]
 800c1f0:	4639      	mov	r1, r7
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	f000 fda8 	bl	800cd48 <PixelConfiguration::Validate(unsigned int&)>
 800c1f8:	6823      	ldr	r3, [r4, #0]
 800c1fa:	2b07      	cmp	r3, #7
 800c1fc:	bf15      	itete	ne
 800c1fe:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800c202:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800c206:	23aa      	movne	r3, #170	; 0xaa
 800c208:	2380      	moveq	r3, #128	; 0x80
 800c20a:	bf14      	ite	ne
 800c20c:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800c210:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800c214:	e9c5 3100 	strd	r3, r1, [r5]
 800c218:	6a21      	ldr	r1, [r4, #32]
 800c21a:	60aa      	str	r2, [r5, #8]
 800c21c:	6862      	ldr	r2, [r4, #4]
 800c21e:	b109      	cbz	r1, 800c224 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800c220:	4291      	cmp	r1, r2
 800c222:	d900      	bls.n	800c226 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800c224:	6222      	str	r2, [r4, #32]
 800c226:	6a21      	ldr	r1, [r4, #32]
 800c228:	69e0      	ldr	r0, [r4, #28]
 800c22a:	fbb2 f2f1 	udiv	r2, r2, r1
 800c22e:	3301      	adds	r3, #1
 800c230:	6262      	str	r2, [r4, #36]	; 0x24
 800c232:	42b0      	cmp	r0, r6
 800c234:	fbb2 f2f3 	udiv	r2, r2, r3
 800c238:	bf28      	it	cs
 800c23a:	4630      	movcs	r0, r6
 800c23c:	1c53      	adds	r3, r2, #1
 800c23e:	2e01      	cmp	r6, #1
 800c240:	62a3      	str	r3, [r4, #40]	; 0x28
 800c242:	bf1c      	itt	ne
 800c244:	4343      	mulne	r3, r0
 800c246:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800c24a:	61e0      	str	r0, [r4, #28]
 800c24c:	60ea      	str	r2, [r5, #12]
 800c24e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c250 <PixelDmxConfiguration::Print()>:
 800c250:	b510      	push	{r4, lr}
 800c252:	4604      	mov	r4, r0
 800c254:	f000 fe0e 	bl	800ce74 <PixelConfiguration::Print()>
 800c258:	4806      	ldr	r0, [pc, #24]	; (800c274 <PixelDmxConfiguration::Print()+0x24>)
 800c25a:	f7fd f80b 	bl	8009274 <printf>
 800c25e:	69e1      	ldr	r1, [r4, #28]
 800c260:	4805      	ldr	r0, [pc, #20]	; (800c278 <PixelDmxConfiguration::Print()+0x28>)
 800c262:	f7fd f807 	bl	8009274 <printf>
 800c266:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800c26a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c26e:	4803      	ldr	r0, [pc, #12]	; (800c27c <PixelDmxConfiguration::Print()+0x2c>)
 800c270:	f7fd b800 	b.w	8009274 <printf>
 800c274:	080158dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, ip, lr}
 800c278:	080158f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, fp, ip, lr}
 800c27c:	08015904 	stmdaeq	r1, {r2, r8, fp, ip, lr}

0800c280 <WS28xxDmx::GetDmxStartAddress()>:
 800c280:	f8b0 0048 	ldrh.w	r0, [r0, #72]	; 0x48
 800c284:	4770      	bx	lr

0800c286 <WS28xxDmx::GetDmxFootprint()>:
 800c286:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800c28a:	4770      	bx	lr

0800c28c <WS28xxDmx::~WS28xxDmx()>:
 800c28c:	b538      	push	{r3, r4, r5, lr}
 800c28e:	4b06      	ldr	r3, [pc, #24]	; (800c2a8 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800c290:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800c292:	4604      	mov	r4, r0
 800c294:	6003      	str	r3, [r0, #0]
 800c296:	b12d      	cbz	r5, 800c2a4 <WS28xxDmx::~WS28xxDmx()+0x18>
 800c298:	4628      	mov	r0, r5
 800c29a:	f001 ff0f 	bl	800e0bc <WS28xx::~WS28xx()>
 800c29e:	4628      	mov	r0, r5
 800c2a0:	f005 ff56 	bl	8012150 <operator delete(void*)>
 800c2a4:	4620      	mov	r0, r4
 800c2a6:	bd38      	pop	{r3, r4, r5, pc}
 800c2a8:	08015930 	stmdaeq	r1, {r4, r5, r8, fp, ip, lr}

0800c2ac <WS28xxDmx::~WS28xxDmx()>:
 800c2ac:	b510      	push	{r4, lr}
 800c2ae:	4604      	mov	r4, r0
 800c2b0:	f7ff ffec 	bl	800c28c <WS28xxDmx::~WS28xxDmx()>
 800c2b4:	4620      	mov	r0, r4
 800c2b6:	f005 ff4b 	bl	8012150 <operator delete(void*)>
 800c2ba:	4620      	mov	r0, r4
 800c2bc:	bd10      	pop	{r4, pc}

0800c2be <WS28xxDmx::Blackout(bool)>:
 800c2be:	b538      	push	{r3, r4, r5, lr}
 800c2c0:	4605      	mov	r5, r0
 800c2c2:	460c      	mov	r4, r1
 800c2c4:	f880 1059 	strb.w	r1, [r0, #89]	; 0x59
 800c2c8:	f007 f89a 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800c2cc:	2800      	cmp	r0, #0
 800c2ce:	d1fb      	bne.n	800c2c8 <WS28xxDmx::Blackout(bool)+0xa>
 800c2d0:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 800c2d2:	b11c      	cbz	r4, 800c2dc <WS28xxDmx::Blackout(bool)+0x1e>
 800c2d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2d8:	f001 bf6e 	b.w	800e1b8 <WS28xx::Blackout()>
 800c2dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2e0:	f001 bf4e 	b.w	800e180 <WS28xx::Update()>

0800c2e4 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2e8:	b087      	sub	sp, #28
 800c2ea:	4607      	mov	r7, r0
 800c2ec:	4692      	mov	sl, r2
 800c2ee:	9104      	str	r1, [sp, #16]
 800c2f0:	9303      	str	r3, [sp, #12]
 800c2f2:	f007 f885 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800c2f6:	2800      	cmp	r0, #0
 800c2f8:	d171      	bne.n	800c3de <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c2fa:	9b04      	ldr	r3, [sp, #16]
 800c2fc:	9c03      	ldr	r4, [sp, #12]
 800c2fe:	f003 0103 	and.w	r1, r3, #3
 800c302:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c304:	2902      	cmp	r1, #2
 800c306:	fbb4 f6f3 	udiv	r6, r4, r3
 800c30a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c30c:	d026      	beq.n	800c35c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x78>
 800c30e:	2903      	cmp	r1, #3
 800c310:	d02b      	beq.n	800c36a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800c312:	2901      	cmp	r1, #1
 800c314:	6b7d      	ldr	r5, [r7, #52]	; 0x34
 800c316:	d022      	beq.n	800c35e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800c318:	4296      	cmp	r6, r2
 800c31a:	bf28      	it	cs
 800c31c:	4616      	movcs	r6, r2
 800c31e:	4295      	cmp	r5, r2
 800c320:	d925      	bls.n	800c36e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800c322:	4605      	mov	r5, r0
 800c324:	8e3c      	ldrh	r4, [r7, #48]	; 0x30
 800c326:	3c01      	subs	r4, #1
 800c328:	f8d7 9024 	ldr.w	r9, [r7, #36]	; 0x24
 800c32c:	2b03      	cmp	r3, #3
 800c32e:	fb09 f805 	mul.w	r8, r9, r5
 800c332:	4454      	add	r4, sl
 800c334:	eb08 0b09 	add.w	fp, r8, r9
 800c338:	d035      	beq.n	800c3a6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800c33a:	42ae      	cmp	r6, r5
 800c33c:	d935      	bls.n	800c3aa <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c33e:	9a03      	ldr	r2, [sp, #12]
 800c340:	eba4 030a 	sub.w	r3, r4, sl
 800c344:	429a      	cmp	r2, r3
 800c346:	d930      	bls.n	800c3aa <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c348:	4641      	mov	r1, r8
 800c34a:	f894 f000 	pld	[r4]
 800c34e:	458b      	cmp	fp, r1
 800c350:	d138      	bne.n	800c3c4 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xe0>
 800c352:	3501      	adds	r5, #1
 800c354:	44c8      	add	r8, r9
 800c356:	44cb      	add	fp, r9
 800c358:	3404      	adds	r4, #4
 800c35a:	e7ee      	b.n	800c33a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x56>
 800c35c:	6bbd      	ldr	r5, [r7, #56]	; 0x38
 800c35e:	442e      	add	r6, r5
 800c360:	4296      	cmp	r6, r2
 800c362:	bf28      	it	cs
 800c364:	4616      	movcs	r6, r2
 800c366:	4604      	mov	r4, r0
 800c368:	e7de      	b.n	800c328 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c36a:	6bfd      	ldr	r5, [r7, #60]	; 0x3c
 800c36c:	e7f7      	b.n	800c35e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800c36e:	4605      	mov	r5, r0
 800c370:	4604      	mov	r4, r0
 800c372:	e7d9      	b.n	800c328 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c374:	78a2      	ldrb	r2, [r4, #2]
 800c376:	7863      	ldrb	r3, [r4, #1]
 800c378:	9200      	str	r2, [sp, #0]
 800c37a:	7822      	ldrb	r2, [r4, #0]
 800c37c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c37e:	9105      	str	r1, [sp, #20]
 800c380:	f001 f95c 	bl	800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800c384:	9905      	ldr	r1, [sp, #20]
 800c386:	3101      	adds	r1, #1
 800c388:	e007      	b.n	800c39a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xb6>
 800c38a:	9a03      	ldr	r2, [sp, #12]
 800c38c:	eba4 030a 	sub.w	r3, r4, sl
 800c390:	429a      	cmp	r2, r3
 800c392:	d90a      	bls.n	800c3aa <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c394:	4641      	mov	r1, r8
 800c396:	f894 f000 	pld	[r4]
 800c39a:	458b      	cmp	fp, r1
 800c39c:	d1ea      	bne.n	800c374 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800c39e:	3501      	adds	r5, #1
 800c3a0:	44c8      	add	r8, r9
 800c3a2:	44cb      	add	fp, r9
 800c3a4:	3403      	adds	r4, #3
 800c3a6:	42ae      	cmp	r6, r5
 800c3a8:	d8ef      	bhi.n	800c38a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa6>
 800c3aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800c3ac:	9a04      	ldr	r2, [sp, #16]
 800c3ae:	4293      	cmp	r3, r2
 800c3b0:	d115      	bne.n	800c3de <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c3b2:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 800c3b6:	b993      	cbnz	r3, 800c3de <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c3b8:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c3ba:	b007      	add	sp, #28
 800c3bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3c0:	f001 bede 	b.w	800e180 <WS28xx::Update()>
 800c3c4:	78e2      	ldrb	r2, [r4, #3]
 800c3c6:	7863      	ldrb	r3, [r4, #1]
 800c3c8:	9201      	str	r2, [sp, #4]
 800c3ca:	78a2      	ldrb	r2, [r4, #2]
 800c3cc:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c3ce:	9200      	str	r2, [sp, #0]
 800c3d0:	7822      	ldrb	r2, [r4, #0]
 800c3d2:	9105      	str	r1, [sp, #20]
 800c3d4:	f001 fd64 	bl	800dea0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c3d8:	9905      	ldr	r1, [sp, #20]
 800c3da:	3101      	adds	r1, #1
 800c3dc:	e7b7      	b.n	800c34e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800c3de:	b007      	add	sp, #28
 800c3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c3e4 <WS28xxDmx::FullOn()>:
 800c3e4:	b510      	push	{r4, lr}
 800c3e6:	4604      	mov	r4, r0
 800c3e8:	f007 f80a 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800c3ec:	2800      	cmp	r0, #0
 800c3ee:	d1fb      	bne.n	800c3e8 <WS28xxDmx::FullOn()+0x4>
 800c3f0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c3f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3f6:	f001 bf26 	b.w	800e246 <WS28xx::FullOn()>

0800c3fa <WS28xxDmx::Print()>:
 800c3fa:	3004      	adds	r0, #4
 800c3fc:	f7ff bf28 	b.w	800c250 <PixelDmxConfiguration::Print()>

0800c400 <WS28xxDmx::Start(unsigned int)>:
 800c400:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800c404:	b93b      	cbnz	r3, 800c416 <WS28xxDmx::Start(unsigned int)+0x16>
 800c406:	2301      	movs	r3, #1
 800c408:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800c40c:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800c40e:	b110      	cbz	r0, 800c416 <WS28xxDmx::Start(unsigned int)+0x16>
 800c410:	6803      	ldr	r3, [r0, #0]
 800c412:	689b      	ldr	r3, [r3, #8]
 800c414:	4718      	bx	r3
 800c416:	4770      	bx	lr

0800c418 <WS28xxDmx::Stop(unsigned int)>:
 800c418:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800c41c:	b13b      	cbz	r3, 800c42e <WS28xxDmx::Stop(unsigned int)+0x16>
 800c41e:	2300      	movs	r3, #0
 800c420:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800c424:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800c426:	b110      	cbz	r0, 800c42e <WS28xxDmx::Stop(unsigned int)+0x16>
 800c428:	6803      	ldr	r3, [r0, #0]
 800c42a:	68db      	ldr	r3, [r3, #12]
 800c42c:	4718      	bx	r3
 800c42e:	4770      	bx	lr

0800c430 <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800c430:	f8b0 2048 	ldrh.w	r2, [r0, #72]	; 0x48
 800c434:	b508      	push	{r3, lr}
 800c436:	428a      	cmp	r2, r1
 800c438:	d101      	bne.n	800c43e <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xe>
 800c43a:	2001      	movs	r0, #1
 800c43c:	bd08      	pop	{r3, pc}
 800c43e:	f8b0 204a 	ldrh.w	r2, [r0, #74]	; 0x4a
 800c442:	440a      	add	r2, r1
 800c444:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800c448:	dc0c      	bgt.n	800c464 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800c44a:	1e4a      	subs	r2, r1, #1
 800c44c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800c450:	d208      	bcs.n	800c464 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800c452:	f8a0 1048 	strh.w	r1, [r0, #72]	; 0x48
 800c456:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800c458:	2800      	cmp	r0, #0
 800c45a:	d0ee      	beq.n	800c43a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800c45c:	6803      	ldr	r3, [r0, #0]
 800c45e:	69db      	ldr	r3, [r3, #28]
 800c460:	4798      	blx	r3
 800c462:	e7ea      	b.n	800c43a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800c464:	2000      	movs	r0, #0
 800c466:	e7e9      	b.n	800c43c <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>

0800c468 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800c468:	4603      	mov	r3, r0
 800c46a:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800c46e:	4288      	cmp	r0, r1
 800c470:	f04f 0000 	mov.w	r0, #0
 800c474:	d30f      	bcc.n	800c496 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2e>
 800c476:	7090      	strb	r0, [r2, #2]
 800c478:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c47a:	fbb1 f0f3 	udiv	r0, r1, r3
 800c47e:	fb03 1110 	mls	r1, r3, r0, r1
 800c482:	2903      	cmp	r1, #3
 800c484:	d80e      	bhi.n	800c4a4 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3c>
 800c486:	e8df f001 	tbb	[pc, r1]
 800c48a:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800c48e:	f240 2305 	movw	r3, #517	; 0x205
 800c492:	2001      	movs	r0, #1
 800c494:	8013      	strh	r3, [r2, #0]
 800c496:	4770      	bx	lr
 800c498:	f240 2306 	movw	r3, #518	; 0x206
 800c49c:	e7f9      	b.n	800c492 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800c49e:	f240 2307 	movw	r3, #519	; 0x207
 800c4a2:	e7f6      	b.n	800c492 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800c4a4:	f240 2312 	movw	r3, #530	; 0x212
 800c4a8:	e7f3      	b.n	800c492 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
	...

0800c4ac <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800c4ac:	b570      	push	{r4, r5, r6, lr}
 800c4ae:	4605      	mov	r5, r0
 800c4b0:	460e      	mov	r6, r1
 800c4b2:	4b19      	ldr	r3, [pc, #100]	; (800c518 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x6c>)
 800c4b4:	4604      	mov	r4, r0
 800c4b6:	f845 3b04 	str.w	r3, [r5], #4
 800c4ba:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800c4bc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800c4be:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800c4c0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800c4c2:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800c4c6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800c4ca:	2300      	movs	r3, #0
 800c4cc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800c4d0:	6563      	str	r3, [r4, #84]	; 0x54
 800c4d2:	f8a4 3058 	strh.w	r3, [r4, #88]	; 0x58
 800c4d6:	4b11      	ldr	r3, [pc, #68]	; (800c51c <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x70>)
 800c4d8:	1d26      	adds	r6, r4, #4
 800c4da:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800c4de:	2101      	movs	r1, #1
 800c4e0:	4630      	mov	r0, r6
 800c4e2:	601c      	str	r4, [r3, #0]
 800c4e4:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800c4e8:	f7ff fe72 	bl	800c1d0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800c4ec:	2028      	movs	r0, #40	; 0x28
 800c4ee:	f005 fe33 	bl	8012158 <operator new(unsigned int)>
 800c4f2:	4605      	mov	r5, r0
 800c4f4:	4631      	mov	r1, r6
 800c4f6:	f001 fdff 	bl	800e0f8 <WS28xx::WS28xx(PixelConfiguration&)>
 800c4fa:	4628      	mov	r0, r5
 800c4fc:	64e5      	str	r5, [r4, #76]	; 0x4c
 800c4fe:	f001 fe5b 	bl	800e1b8 <WS28xx::Blackout()>
 800c502:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c504:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c506:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800c50a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c50c:	4620      	mov	r0, r4
 800c50e:	4353      	muls	r3, r2
 800c510:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800c514:	bd70      	pop	{r4, r5, r6, pc}
 800c516:	bf00      	nop
 800c518:	08015930 	stmdaeq	r1, {r4, r5, r8, fp, ip, lr}
 800c51c:	20001ed8 	ldrdcs	r1, [r0], -r8

0800c520 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c520:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c522:	88c6      	ldrh	r6, [r0, #6]
 800c524:	8885      	ldrh	r5, [r0, #4]
 800c526:	42ae      	cmp	r6, r5
 800c528:	d216      	bcs.n	800c558 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c52a:	4604      	mov	r4, r0
 800c52c:	6800      	ldr	r0, [r0, #0]
 800c52e:	1bad      	subs	r5, r5, r6
 800c530:	4430      	add	r0, r6
 800c532:	7a26      	ldrb	r6, [r4, #8]
 800c534:	b923      	cbnz	r3, 800c540 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c536:	b926      	cbnz	r6, 800c542 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c538:	9200      	str	r2, [sp, #0]
 800c53a:	460b      	mov	r3, r1
 800c53c:	4a09      	ldr	r2, [pc, #36]	; (800c564 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c53e:	e003      	b.n	800c548 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c540:	b166      	cbz	r6, 800c55c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c542:	460b      	mov	r3, r1
 800c544:	9200      	str	r2, [sp, #0]
 800c546:	4a08      	ldr	r2, [pc, #32]	; (800c568 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c548:	4629      	mov	r1, r5
 800c54a:	f7fc febb 	bl	80092c4 <snprintf>
 800c54e:	4285      	cmp	r5, r0
 800c550:	bfa2      	ittt	ge
 800c552:	88e3      	ldrhge	r3, [r4, #6]
 800c554:	181b      	addge	r3, r3, r0
 800c556:	80e3      	strhge	r3, [r4, #6]
 800c558:	b002      	add	sp, #8
 800c55a:	bd70      	pop	{r4, r5, r6, pc}
 800c55c:	9200      	str	r2, [sp, #0]
 800c55e:	460b      	mov	r3, r1
 800c560:	4a02      	ldr	r2, [pc, #8]	; (800c56c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c562:	e7f1      	b.n	800c548 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c564:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 800c568:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 800c56c:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

0800c570 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c570:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c572:	88c6      	ldrh	r6, [r0, #6]
 800c574:	8885      	ldrh	r5, [r0, #4]
 800c576:	42ae      	cmp	r6, r5
 800c578:	d216      	bcs.n	800c5a8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c57a:	4604      	mov	r4, r0
 800c57c:	6800      	ldr	r0, [r0, #0]
 800c57e:	1bad      	subs	r5, r5, r6
 800c580:	4430      	add	r0, r6
 800c582:	7a26      	ldrb	r6, [r4, #8]
 800c584:	b923      	cbnz	r3, 800c590 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c586:	b926      	cbnz	r6, 800c592 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c588:	9200      	str	r2, [sp, #0]
 800c58a:	460b      	mov	r3, r1
 800c58c:	4a09      	ldr	r2, [pc, #36]	; (800c5b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c58e:	e003      	b.n	800c598 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c590:	b166      	cbz	r6, 800c5ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c592:	460b      	mov	r3, r1
 800c594:	9200      	str	r2, [sp, #0]
 800c596:	4a08      	ldr	r2, [pc, #32]	; (800c5b8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c598:	4629      	mov	r1, r5
 800c59a:	f7fc fe93 	bl	80092c4 <snprintf>
 800c59e:	4285      	cmp	r5, r0
 800c5a0:	bfa2      	ittt	ge
 800c5a2:	88e3      	ldrhge	r3, [r4, #6]
 800c5a4:	181b      	addge	r3, r3, r0
 800c5a6:	80e3      	strhge	r3, [r4, #6]
 800c5a8:	b002      	add	sp, #8
 800c5aa:	bd70      	pop	{r4, r5, r6, pc}
 800c5ac:	9200      	str	r2, [sp, #0]
 800c5ae:	460b      	mov	r3, r1
 800c5b0:	4a02      	ldr	r2, [pc, #8]	; (800c5bc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c5b2:	e7f1      	b.n	800c598 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c5b4:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 800c5b8:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 800c5bc:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

0800c5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c5c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c5c2:	88c6      	ldrh	r6, [r0, #6]
 800c5c4:	8885      	ldrh	r5, [r0, #4]
 800c5c6:	42ae      	cmp	r6, r5
 800c5c8:	d216      	bcs.n	800c5f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c5ca:	4604      	mov	r4, r0
 800c5cc:	6800      	ldr	r0, [r0, #0]
 800c5ce:	1bad      	subs	r5, r5, r6
 800c5d0:	4430      	add	r0, r6
 800c5d2:	7a26      	ldrb	r6, [r4, #8]
 800c5d4:	b923      	cbnz	r3, 800c5e0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c5d6:	b926      	cbnz	r6, 800c5e2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c5d8:	9200      	str	r2, [sp, #0]
 800c5da:	460b      	mov	r3, r1
 800c5dc:	4a09      	ldr	r2, [pc, #36]	; (800c604 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c5de:	e003      	b.n	800c5e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c5e0:	b166      	cbz	r6, 800c5fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c5e2:	460b      	mov	r3, r1
 800c5e4:	9200      	str	r2, [sp, #0]
 800c5e6:	4a08      	ldr	r2, [pc, #32]	; (800c608 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c5e8:	4629      	mov	r1, r5
 800c5ea:	f7fc fe6b 	bl	80092c4 <snprintf>
 800c5ee:	4285      	cmp	r5, r0
 800c5f0:	bfa2      	ittt	ge
 800c5f2:	88e3      	ldrhge	r3, [r4, #6]
 800c5f4:	181b      	addge	r3, r3, r0
 800c5f6:	80e3      	strhge	r3, [r4, #6]
 800c5f8:	b002      	add	sp, #8
 800c5fa:	bd70      	pop	{r4, r5, r6, pc}
 800c5fc:	9200      	str	r2, [sp, #0]
 800c5fe:	460b      	mov	r3, r1
 800c600:	4a02      	ldr	r2, [pc, #8]	; (800c60c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c602:	e7f1      	b.n	800c5e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c604:	08014968 	stmdaeq	r1, {r3, r5, r6, r8, fp, lr}
 800c608:	0801495d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, lr}
 800c60c:	08014969 	stmdaeq	r1, {r0, r3, r5, r6, r8, fp, lr}

0800c610 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c610:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c614:	4699      	mov	r9, r3
 800c616:	8885      	ldrh	r5, [r0, #4]
 800c618:	88c3      	ldrh	r3, [r0, #6]
 800c61a:	4604      	mov	r4, r0
 800c61c:	42ab      	cmp	r3, r5
 800c61e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c622:	d227      	bcs.n	800c674 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c624:	6826      	ldr	r6, [r4, #0]
 800c626:	4610      	mov	r0, r2
 800c628:	460f      	mov	r7, r1
 800c62a:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c62e:	441e      	add	r6, r3
 800c630:	1aed      	subs	r5, r5, r3
 800c632:	f7fb fdcf 	bl	80081d4 <__aeabi_f2d>
 800c636:	f1b9 0f00 	cmp.w	r9, #0
 800c63a:	d109      	bne.n	800c650 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c63c:	f1ba 0f00 	cmp.w	sl, #0
 800c640:	d109      	bne.n	800c656 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c642:	463b      	mov	r3, r7
 800c644:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c648:	4a0f      	ldr	r2, [pc, #60]	; (800c688 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c64a:	f8cd 8000 	str.w	r8, [sp]
 800c64e:	e008      	b.n	800c662 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c650:	f1ba 0f00 	cmp.w	sl, #0
 800c654:	d011      	beq.n	800c67a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c656:	463b      	mov	r3, r7
 800c658:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c65c:	4a0b      	ldr	r2, [pc, #44]	; (800c68c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c65e:	f8cd 8000 	str.w	r8, [sp]
 800c662:	4629      	mov	r1, r5
 800c664:	4630      	mov	r0, r6
 800c666:	f7fc fe2d 	bl	80092c4 <snprintf>
 800c66a:	4285      	cmp	r5, r0
 800c66c:	bfa2      	ittt	ge
 800c66e:	88e3      	ldrhge	r3, [r4, #6]
 800c670:	181b      	addge	r3, r3, r0
 800c672:	80e3      	strhge	r3, [r4, #6]
 800c674:	b004      	add	sp, #16
 800c676:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c67a:	463b      	mov	r3, r7
 800c67c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c680:	4a03      	ldr	r2, [pc, #12]	; (800c690 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c682:	f8cd 8000 	str.w	r8, [sp]
 800c686:	e7ec      	b.n	800c662 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c688:	0801596b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, fp, ip, lr}
 800c68c:	08015960 	stmdaeq	r1, {r5, r6, r8, fp, ip, lr}
 800c690:	0801596c 	stmdaeq	r1, {r2, r3, r5, r6, r8, fp, ip, lr}

0800c694 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800c694:	6001      	str	r1, [r0, #0]
 800c696:	2100      	movs	r1, #0
 800c698:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800c69c:	4a05      	ldr	r2, [pc, #20]	; (800c6b4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x20>)
 800c69e:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c6a2:	4a05      	ldr	r2, [pc, #20]	; (800c6b8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>)
 800c6a4:	4905      	ldr	r1, [pc, #20]	; (800c6bc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x28>)
 800c6a6:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800c6aa:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c6ae:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800c6b2:	4770      	bx	lr
 800c6b4:	0100aa03 	tsteq	r0, r3, lsl #20
 800c6b8:	01ff003d 	mvnseq	r0, sp, lsr r0
 800c6bc:	06000100 	streq	r0, [r0], -r0, lsl #2

0800c6c0 <PixelDmxParams::Load()>:
 800c6c0:	b508      	push	{r3, lr}
 800c6c2:	2300      	movs	r3, #0
 800c6c4:	4601      	mov	r1, r0
 800c6c6:	6043      	str	r3, [r0, #4]
 800c6c8:	6800      	ldr	r0, [r0, #0]
 800c6ca:	b120      	cbz	r0, 800c6d6 <PixelDmxParams::Load()+0x16>
 800c6cc:	6803      	ldr	r3, [r0, #0]
 800c6ce:	3104      	adds	r1, #4
 800c6d0:	68db      	ldr	r3, [r3, #12]
 800c6d2:	4798      	blx	r3
 800c6d4:	2001      	movs	r0, #1
 800c6d6:	bd08      	pop	{r3, pc}

0800c6d8 <PixelDmxParams::Load(char const*, unsigned int)>:
 800c6d8:	6803      	ldr	r3, [r0, #0]
 800c6da:	b1d3      	cbz	r3, 800c712 <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800c6dc:	2300      	movs	r3, #0
 800c6de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c6e0:	460d      	mov	r5, r1
 800c6e2:	4616      	mov	r6, r2
 800c6e4:	4604      	mov	r4, r0
 800c6e6:	6043      	str	r3, [r0, #4]
 800c6e8:	4602      	mov	r2, r0
 800c6ea:	490a      	ldr	r1, [pc, #40]	; (800c714 <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800c6ec:	4668      	mov	r0, sp
 800c6ee:	f004 ff89 	bl	8011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c6f2:	4632      	mov	r2, r6
 800c6f4:	4629      	mov	r1, r5
 800c6f6:	4668      	mov	r0, sp
 800c6f8:	f004 ff88 	bl	801160c <ReadConfigFile::Read(char const*, unsigned int)>
 800c6fc:	4621      	mov	r1, r4
 800c6fe:	f851 0b04 	ldr.w	r0, [r1], #4
 800c702:	6803      	ldr	r3, [r0, #0]
 800c704:	689b      	ldr	r3, [r3, #8]
 800c706:	4798      	blx	r3
 800c708:	4668      	mov	r0, sp
 800c70a:	f004 ff7e 	bl	801160a <ReadConfigFile::~ReadConfigFile()>
 800c70e:	b002      	add	sp, #8
 800c710:	bd70      	pop	{r4, r5, r6, pc}
 800c712:	4770      	bx	lr
 800c714:	0800c9b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, lr, pc}

0800c718 <PixelDmxParams::callbackFunction(char const*)>:
 800c718:	b530      	push	{r4, r5, lr}
 800c71a:	2308      	movs	r3, #8
 800c71c:	460d      	mov	r5, r1
 800c71e:	b089      	sub	sp, #36	; 0x24
 800c720:	4604      	mov	r4, r0
 800c722:	9302      	str	r3, [sp, #8]
 800c724:	4628      	mov	r0, r5
 800c726:	4995      	ldr	r1, [pc, #596]	; (800c97c <PixelDmxParams::callbackFunction(char const*)+0x264>)
 800c728:	446b      	add	r3, sp
 800c72a:	aa04      	add	r2, sp, #16
 800c72c:	f004 ffa2 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c730:	b9a0      	cbnz	r0, 800c75c <PixelDmxParams::callbackFunction(char const*)+0x44>
 800c732:	9b02      	ldr	r3, [sp, #8]
 800c734:	3320      	adds	r3, #32
 800c736:	446b      	add	r3, sp
 800c738:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c73c:	a804      	add	r0, sp, #16
 800c73e:	f000 fc09 	bl	800cf54 <PixelType::GetType(char const*)>
 800c742:	280e      	cmp	r0, #14
 800c744:	bf08      	it	eq
 800c746:	2203      	moveq	r2, #3
 800c748:	6863      	ldr	r3, [r4, #4]
 800c74a:	bf19      	ittee	ne
 800c74c:	7220      	strbne	r0, [r4, #8]
 800c74e:	f043 0301 	orrne.w	r3, r3, #1
 800c752:	7222      	strbeq	r2, [r4, #8]
 800c754:	f023 0301 	biceq.w	r3, r3, #1
 800c758:	6063      	str	r3, [r4, #4]
 800c75a:	e033      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c75c:	4628      	mov	r0, r5
 800c75e:	4988      	ldr	r1, [pc, #544]	; (800c980 <PixelDmxParams::callbackFunction(char const*)+0x268>)
 800c760:	f10d 0202 	add.w	r2, sp, #2
 800c764:	f005 f843 	bl	80117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c768:	b990      	cbnz	r0, 800c790 <PixelDmxParams::callbackFunction(char const*)+0x78>
 800c76a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c76e:	6863      	ldr	r3, [r4, #4]
 800c770:	1e51      	subs	r1, r2, #1
 800c772:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800c776:	bf2d      	iteet	cs
 800c778:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800c77c:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800c780:	f043 0302 	orrcc.w	r3, r3, #2
 800c784:	7262      	strbcs	r2, [r4, #9]
 800c786:	bf24      	itt	cs
 800c788:	72a0      	strbcs	r0, [r4, #10]
 800c78a:	f023 0302 	biccs.w	r3, r3, #2
 800c78e:	e7e3      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c790:	2303      	movs	r3, #3
 800c792:	4628      	mov	r0, r5
 800c794:	9302      	str	r3, [sp, #8]
 800c796:	497b      	ldr	r1, [pc, #492]	; (800c984 <PixelDmxParams::callbackFunction(char const*)+0x26c>)
 800c798:	ab02      	add	r3, sp, #8
 800c79a:	aa04      	add	r2, sp, #16
 800c79c:	f004 ff6a 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c7a0:	b990      	cbnz	r0, 800c7c8 <PixelDmxParams::callbackFunction(char const*)+0xb0>
 800c7a2:	9b02      	ldr	r3, [sp, #8]
 800c7a4:	3320      	adds	r3, #32
 800c7a6:	446b      	add	r3, sp
 800c7a8:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c7ac:	a804      	add	r0, sp, #16
 800c7ae:	f000 fbf5 	bl	800cf9c <PixelType::GetMap(char const*)>
 800c7b2:	6863      	ldr	r3, [r4, #4]
 800c7b4:	2806      	cmp	r0, #6
 800c7b6:	bf14      	ite	ne
 800c7b8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800c7bc:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800c7c0:	6063      	str	r3, [r4, #4]
 800c7c2:	75e0      	strb	r0, [r4, #23]
 800c7c4:	b009      	add	sp, #36	; 0x24
 800c7c6:	bd30      	pop	{r4, r5, pc}
 800c7c8:	4628      	mov	r0, r5
 800c7ca:	496f      	ldr	r1, [pc, #444]	; (800c988 <PixelDmxParams::callbackFunction(char const*)+0x270>)
 800c7cc:	aa01      	add	r2, sp, #4
 800c7ce:	f004 ff6a 	bl	80116a6 <Sscan::Float(char const*, char const*, float&)>
 800c7d2:	b960      	cbnz	r0, 800c7ee <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800c7d4:	9801      	ldr	r0, [sp, #4]
 800c7d6:	f000 fc4d 	bl	800d074 <PixelType::ConvertTxH(float)>
 800c7da:	6863      	ldr	r3, [r4, #4]
 800c7dc:	b120      	cbz	r0, 800c7e8 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800c7de:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c7e2:	6063      	str	r3, [r4, #4]
 800c7e4:	7620      	strb	r0, [r4, #24]
 800c7e6:	e7ed      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c7e8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c7ec:	e7f9      	b.n	800c7e2 <PixelDmxParams::callbackFunction(char const*)+0xca>
 800c7ee:	4628      	mov	r0, r5
 800c7f0:	4966      	ldr	r1, [pc, #408]	; (800c98c <PixelDmxParams::callbackFunction(char const*)+0x274>)
 800c7f2:	aa01      	add	r2, sp, #4
 800c7f4:	f004 ff57 	bl	80116a6 <Sscan::Float(char const*, char const*, float&)>
 800c7f8:	b960      	cbnz	r0, 800c814 <PixelDmxParams::callbackFunction(char const*)+0xfc>
 800c7fa:	9801      	ldr	r0, [sp, #4]
 800c7fc:	f000 fc3a 	bl	800d074 <PixelType::ConvertTxH(float)>
 800c800:	6863      	ldr	r3, [r4, #4]
 800c802:	b120      	cbz	r0, 800c80e <PixelDmxParams::callbackFunction(char const*)+0xf6>
 800c804:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800c808:	6063      	str	r3, [r4, #4]
 800c80a:	7660      	strb	r0, [r4, #25]
 800c80c:	e7da      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c80e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c812:	e7f9      	b.n	800c808 <PixelDmxParams::callbackFunction(char const*)+0xf0>
 800c814:	4628      	mov	r0, r5
 800c816:	495e      	ldr	r1, [pc, #376]	; (800c990 <PixelDmxParams::callbackFunction(char const*)+0x278>)
 800c818:	f10d 0202 	add.w	r2, sp, #2
 800c81c:	f004 ffe7 	bl	80117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c820:	b998      	cbnz	r0, 800c84a <PixelDmxParams::callbackFunction(char const*)+0x132>
 800c822:	f240 25a6 	movw	r5, #678	; 0x2a6
 800c826:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800c82a:	6863      	ldr	r3, [r4, #4]
 800c82c:	1e8a      	subs	r2, r1, #2
 800c82e:	b292      	uxth	r2, r2
 800c830:	42aa      	cmp	r2, r5
 800c832:	bf81      	itttt	hi
 800c834:	2201      	movhi	r2, #1
 800c836:	75a0      	strbhi	r0, [r4, #22]
 800c838:	7562      	strbhi	r2, [r4, #21]
 800c83a:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800c83e:	bf9c      	itt	ls
 800c840:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800c844:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800c848:	e786      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c84a:	4628      	mov	r0, r5
 800c84c:	4951      	ldr	r1, [pc, #324]	; (800c994 <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800c84e:	aa03      	add	r2, sp, #12
 800c850:	f004 ffeb 	bl	801182a <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800c854:	b960      	cbnz	r0, 800c870 <PixelDmxParams::callbackFunction(char const*)+0x158>
 800c856:	9a03      	ldr	r2, [sp, #12]
 800c858:	494f      	ldr	r1, [pc, #316]	; (800c998 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800c85a:	6863      	ldr	r3, [r4, #4]
 800c85c:	428a      	cmp	r2, r1
 800c85e:	bf14      	ite	ne
 800c860:	f043 0310 	orrne.w	r3, r3, #16
 800c864:	f023 0310 	biceq.w	r3, r3, #16
 800c868:	6063      	str	r3, [r4, #4]
 800c86a:	f8c4 200e 	str.w	r2, [r4, #14]
 800c86e:	e7a9      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c870:	4628      	mov	r0, r5
 800c872:	494a      	ldr	r1, [pc, #296]	; (800c99c <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800c874:	f10d 0201 	add.w	r2, sp, #1
 800c878:	f005 f800 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c87c:	b988      	cbnz	r0, 800c8a2 <PixelDmxParams::callbackFunction(char const*)+0x18a>
 800c87e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800c882:	6863      	ldr	r3, [r4, #4]
 800c884:	1e4a      	subs	r2, r1, #1
 800c886:	b2d2      	uxtb	r2, r2
 800c888:	2afd      	cmp	r2, #253	; 0xfd
 800c88a:	bf83      	ittte	hi
 800c88c:	f023 0320 	bichi.w	r3, r3, #32
 800c890:	6063      	strhi	r3, [r4, #4]
 800c892:	23ff      	movhi	r3, #255	; 0xff
 800c894:	f043 0320 	orrls.w	r3, r3, #32
 800c898:	bf9a      	itte	ls
 800c89a:	6063      	strls	r3, [r4, #4]
 800c89c:	74a1      	strbls	r1, [r4, #18]
 800c89e:	74a3      	strbhi	r3, [r4, #18]
 800c8a0:	e790      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c8a2:	4628      	mov	r0, r5
 800c8a4:	493e      	ldr	r1, [pc, #248]	; (800c9a0 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800c8a6:	f10d 0202 	add.w	r2, sp, #2
 800c8aa:	f004 ffa0 	bl	80117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c8ae:	2800      	cmp	r0, #0
 800c8b0:	d13f      	bne.n	800c932 <PixelDmxParams::callbackFunction(char const*)+0x21a>
 800c8b2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c8b6:	6863      	ldr	r3, [r4, #4]
 800c8b8:	1e91      	subs	r1, r2, #2
 800c8ba:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800c8be:	bf83      	ittte	hi
 800c8c0:	2201      	movhi	r2, #1
 800c8c2:	72e2      	strbhi	r2, [r4, #11]
 800c8c4:	2200      	movhi	r2, #0
 800c8c6:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800c8ca:	bf92      	itee	ls
 800c8cc:	f043 0304 	orrls.w	r3, r3, #4
 800c8d0:	7322      	strbhi	r2, [r4, #12]
 800c8d2:	f023 0304 	bichi.w	r3, r3, #4
 800c8d6:	e73f      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c8d8:	2201      	movs	r2, #1
 800c8da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c8de:	8362      	strh	r2, [r4, #26]
 800c8e0:	e036      	b.n	800c950 <PixelDmxParams::callbackFunction(char const*)+0x238>
 800c8e2:	4628      	mov	r0, r5
 800c8e4:	492f      	ldr	r1, [pc, #188]	; (800c9a4 <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800c8e6:	f10d 0201 	add.w	r2, sp, #1
 800c8ea:	f004 ffc7 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c8ee:	b948      	cbnz	r0, 800c904 <PixelDmxParams::callbackFunction(char const*)+0x1ec>
 800c8f0:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800c8f4:	6863      	ldr	r3, [r4, #4]
 800c8f6:	b112      	cbz	r2, 800c8fe <PixelDmxParams::callbackFunction(char const*)+0x1e6>
 800c8f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c8fc:	e72c      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c8fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c902:	e729      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c904:	4628      	mov	r0, r5
 800c906:	4928      	ldr	r1, [pc, #160]	; (800c9a8 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800c908:	aa01      	add	r2, sp, #4
 800c90a:	f004 fecc 	bl	80116a6 <Sscan::Float(char const*, char const*, float&)>
 800c90e:	4605      	mov	r5, r0
 800c910:	2800      	cmp	r0, #0
 800c912:	f47f af57 	bne.w	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c916:	4925      	ldr	r1, [pc, #148]	; (800c9ac <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800c918:	9801      	ldr	r0, [sp, #4]
 800c91a:	f7fb fcb3 	bl	8008284 <__aeabi_fmul>
 800c91e:	f7fb fe01 	bl	8008524 <__aeabi_f2uiz>
 800c922:	b2c3      	uxtb	r3, r0
 800c924:	f1a3 0214 	sub.w	r2, r3, #20
 800c928:	2a05      	cmp	r2, #5
 800c92a:	bf8c      	ite	hi
 800c92c:	7365      	strbhi	r5, [r4, #13]
 800c92e:	7363      	strbls	r3, [r4, #13]
 800c930:	e748      	b.n	800c7c4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c932:	4628      	mov	r0, r5
 800c934:	491e      	ldr	r1, [pc, #120]	; (800c9b0 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800c936:	f10d 0202 	add.w	r2, sp, #2
 800c93a:	f004 ff58 	bl	80117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c93e:	b940      	cbnz	r0, 800c952 <PixelDmxParams::callbackFunction(char const*)+0x23a>
 800c940:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c944:	6863      	ldr	r3, [r4, #4]
 800c946:	2a00      	cmp	r2, #0
 800c948:	d0c6      	beq.n	800c8d8 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800c94a:	8362      	strh	r2, [r4, #26]
 800c94c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800c950:	6063      	str	r3, [r4, #4]
 800c952:	4628      	mov	r0, r5
 800c954:	4917      	ldr	r1, [pc, #92]	; (800c9b4 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800c956:	f10d 0201 	add.w	r2, sp, #1
 800c95a:	f004 ff8f 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c95e:	2800      	cmp	r0, #0
 800c960:	d1bf      	bne.n	800c8e2 <PixelDmxParams::callbackFunction(char const*)+0x1ca>
 800c962:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800c966:	6863      	ldr	r3, [r4, #4]
 800c968:	1e51      	subs	r1, r2, #1
 800c96a:	2904      	cmp	r1, #4
 800c96c:	bf99      	ittee	ls
 800c96e:	7522      	strbls	r2, [r4, #20]
 800c970:	f043 0308 	orrls.w	r3, r3, #8
 800c974:	7520      	strbhi	r0, [r4, #20]
 800c976:	f023 0308 	bichi.w	r3, r3, #8
 800c97a:	e6ed      	b.n	800c758 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c97c:	08016a26 	stmdaeq	r1, {r1, r2, r5, r9, fp, sp, lr}
 800c980:	08016a2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, fp, sp, lr}
 800c984:	08016a16 	stmdaeq	r1, {r1, r2, r4, r9, fp, sp, lr}
 800c988:	08016a39 	stmdaeq	r1, {r0, r3, r4, r5, r9, fp, sp, lr}
 800c98c:	08016a41 	stmdaeq	r1, {r0, r6, r9, fp, sp, lr}
 800c990:	080169e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, sp, lr}
 800c994:	080169c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, fp, sp, lr}
 800c998:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800c99c:	08016a04 	stmdaeq	r1, {r2, r9, fp, sp, lr}
 800c9a0:	08016b1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, fp, sp, lr}
 800c9a4:	080169f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, fp, sp, lr}
 800c9a8:	080169bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, sp, lr}
 800c9ac:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800c9b0:	08016ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, sp, lr}
 800c9b4:	080169d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, lr}

0800c9b8 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800c9b8:	f7ff beae 	b.w	800c718 <PixelDmxParams::callbackFunction(char const*)>

0800c9bc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800c9bc:	b570      	push	{r4, r5, r6, lr}
 800c9be:	4604      	mov	r4, r0
 800c9c0:	4615      	mov	r5, r2
 800c9c2:	461e      	mov	r6, r3
 800c9c4:	b086      	sub	sp, #24
 800c9c6:	3004      	adds	r0, #4
 800c9c8:	b389      	cbz	r1, 800ca2e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x72>
 800c9ca:	2218      	movs	r2, #24
 800c9cc:	f005 fc83 	bl	80122d6 <memmove>
 800c9d0:	462a      	mov	r2, r5
 800c9d2:	4633      	mov	r3, r6
 800c9d4:	4996      	ldr	r1, [pc, #600]	; (800cc30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800c9d6:	a803      	add	r0, sp, #12
 800c9d8:	f004 fd74 	bl	80114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c9dc:	7a20      	ldrb	r0, [r4, #8]
 800c9de:	f000 faad 	bl	800cf3c <PixelType::GetType(pixel::Type)>
 800c9e2:	6863      	ldr	r3, [r4, #4]
 800c9e4:	4602      	mov	r2, r0
 800c9e6:	4993      	ldr	r1, [pc, #588]	; (800cc34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800c9e8:	f003 0301 	and.w	r3, r3, #1
 800c9ec:	a803      	add	r0, sp, #12
 800c9ee:	f7ff fde7 	bl	800c5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c9f2:	6863      	ldr	r3, [r4, #4]
 800c9f4:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800c9f8:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c9fc:	498e      	ldr	r1, [pc, #568]	; (800cc38 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800c9fe:	a803      	add	r0, sp, #12
 800ca00:	f7ff fdb6 	bl	800c570 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ca04:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ca08:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ca0c:	6863      	ldr	r3, [r4, #4]
 800ca0e:	42aa      	cmp	r2, r5
 800ca10:	d227      	bcs.n	800ca62 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa6>
 800ca12:	9803      	ldr	r0, [sp, #12]
 800ca14:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800ca18:	4410      	add	r0, r2
 800ca1a:	eba5 0502 	sub.w	r5, r5, r2
 800ca1e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ca22:	d10b      	bne.n	800ca3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x80>
 800ca24:	b96a      	cbnz	r2, 800ca42 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x86>
 800ca26:	9200      	str	r2, [sp, #0]
 800ca28:	4b84      	ldr	r3, [pc, #528]	; (800cc3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800ca2a:	4a85      	ldr	r2, [pc, #532]	; (800cc40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800ca2c:	e00f      	b.n	800ca4e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800ca2e:	6823      	ldr	r3, [r4, #0]
 800ca30:	4601      	mov	r1, r0
 800ca32:	681a      	ldr	r2, [r3, #0]
 800ca34:	4618      	mov	r0, r3
 800ca36:	68d2      	ldr	r2, [r2, #12]
 800ca38:	4790      	blx	r2
 800ca3a:	e7c9      	b.n	800c9d0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800ca3c:	2a00      	cmp	r2, #0
 800ca3e:	f000 808a 	beq.w	800cb56 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19a>
 800ca42:	3b00      	subs	r3, #0
 800ca44:	bf18      	it	ne
 800ca46:	2301      	movne	r3, #1
 800ca48:	4a7e      	ldr	r2, [pc, #504]	; (800cc44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800ca4a:	9300      	str	r3, [sp, #0]
 800ca4c:	4b7b      	ldr	r3, [pc, #492]	; (800cc3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800ca4e:	4629      	mov	r1, r5
 800ca50:	f7fc fc38 	bl	80092c4 <snprintf>
 800ca54:	4285      	cmp	r5, r0
 800ca56:	bfa2      	ittt	ge
 800ca58:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ca5c:	18c0      	addge	r0, r0, r3
 800ca5e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ca62:	7b63      	ldrb	r3, [r4, #13]
 800ca64:	2b00      	cmp	r3, #0
 800ca66:	d17b      	bne.n	800cb60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a4>
 800ca68:	4a77      	ldr	r2, [pc, #476]	; (800cc48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800ca6a:	4978      	ldr	r1, [pc, #480]	; (800cc4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800ca6c:	a803      	add	r0, sp, #12
 800ca6e:	f7ff fda7 	bl	800c5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ca72:	4977      	ldr	r1, [pc, #476]	; (800cc50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ca74:	a803      	add	r0, sp, #12
 800ca76:	f004 fdab 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800ca7a:	6863      	ldr	r3, [r4, #4]
 800ca7c:	059e      	lsls	r6, r3, #22
 800ca7e:	d403      	bmi.n	800ca88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800ca80:	7a20      	ldrb	r0, [r4, #8]
 800ca82:	f000 fabf 	bl	800d004 <PixelType::GetMap(pixel::Type)>
 800ca86:	75e0      	strb	r0, [r4, #23]
 800ca88:	7de0      	ldrb	r0, [r4, #23]
 800ca8a:	f000 faaf 	bl	800cfec <PixelType::GetMap(pixel::Map)>
 800ca8e:	6863      	ldr	r3, [r4, #4]
 800ca90:	4602      	mov	r2, r0
 800ca92:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800ca96:	496f      	ldr	r1, [pc, #444]	; (800cc54 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ca98:	a803      	add	r0, sp, #12
 800ca9a:	f7ff fd91 	bl	800c5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ca9e:	6863      	ldr	r3, [r4, #4]
 800caa0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800caa4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800caa8:	d011      	beq.n	800cace <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x112>
 800caaa:	f10d 020b 	add.w	r2, sp, #11
 800caae:	7a20      	ldrb	r0, [r4, #8]
 800cab0:	f10d 010a 	add.w	r1, sp, #10
 800cab4:	f000 f93b 	bl	800cd2e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cab8:	6863      	ldr	r3, [r4, #4]
 800caba:	055d      	lsls	r5, r3, #21
 800cabc:	bf5c      	itt	pl
 800cabe:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800cac2:	7622      	strbpl	r2, [r4, #24]
 800cac4:	0518      	lsls	r0, r3, #20
 800cac6:	bf5c      	itt	pl
 800cac8:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800cacc:	7663      	strbpl	r3, [r4, #25]
 800cace:	4962      	ldr	r1, [pc, #392]	; (800cc58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800cad0:	a803      	add	r0, sp, #12
 800cad2:	f004 fd7d 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cad6:	7e20      	ldrb	r0, [r4, #24]
 800cad8:	f000 fa9e 	bl	800d018 <PixelType::ConvertTxH(unsigned char)>
 800cadc:	2502      	movs	r5, #2
 800cade:	6863      	ldr	r3, [r4, #4]
 800cae0:	4602      	mov	r2, r0
 800cae2:	495e      	ldr	r1, [pc, #376]	; (800cc5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800cae4:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800cae8:	9500      	str	r5, [sp, #0]
 800caea:	a803      	add	r0, sp, #12
 800caec:	f7ff fd90 	bl	800c610 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800caf0:	7e60      	ldrb	r0, [r4, #25]
 800caf2:	f000 fa91 	bl	800d018 <PixelType::ConvertTxH(unsigned char)>
 800caf6:	6863      	ldr	r3, [r4, #4]
 800caf8:	4602      	mov	r2, r0
 800cafa:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800cafe:	4958      	ldr	r1, [pc, #352]	; (800cc60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800cb00:	9500      	str	r5, [sp, #0]
 800cb02:	a803      	add	r0, sp, #12
 800cb04:	f7ff fd84 	bl	800c610 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cb08:	4956      	ldr	r1, [pc, #344]	; (800cc64 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800cb0a:	a803      	add	r0, sp, #12
 800cb0c:	f004 fd60 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cb10:	6863      	ldr	r3, [r4, #4]
 800cb12:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800cb16:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800cb1a:	4953      	ldr	r1, [pc, #332]	; (800cc68 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800cb1c:	a803      	add	r0, sp, #12
 800cb1e:	f7ff fd27 	bl	800c570 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cb22:	4952      	ldr	r1, [pc, #328]	; (800cc6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800cb24:	a803      	add	r0, sp, #12
 800cb26:	f004 fd53 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cb2a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cb2e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cb32:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800cb36:	42aa      	cmp	r2, r5
 800cb38:	6861      	ldr	r1, [r4, #4]
 800cb3a:	d22e      	bcs.n	800cb9a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800cb3c:	9803      	ldr	r0, [sp, #12]
 800cb3e:	06c9      	lsls	r1, r1, #27
 800cb40:	4410      	add	r0, r2
 800cb42:	eba5 0502 	sub.w	r5, r5, r2
 800cb46:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cb4a:	d417      	bmi.n	800cb7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c0>
 800cb4c:	b9c2      	cbnz	r2, 800cb80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 800cb4e:	9300      	str	r3, [sp, #0]
 800cb50:	4a3b      	ldr	r2, [pc, #236]	; (800cc40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800cb52:	4b47      	ldr	r3, [pc, #284]	; (800cc70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cb54:	e017      	b.n	800cb86 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800cb56:	2301      	movs	r3, #1
 800cb58:	4a46      	ldr	r2, [pc, #280]	; (800cc74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800cb5a:	9300      	str	r3, [sp, #0]
 800cb5c:	4b37      	ldr	r3, [pc, #220]	; (800cc3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800cb5e:	e776      	b.n	800ca4e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800cb60:	4618      	mov	r0, r3
 800cb62:	f7fb f8c5 	bl	8007cf0 <__aeabi_ui2f>
 800cb66:	4944      	ldr	r1, [pc, #272]	; (800cc78 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800cb68:	f7fb fc40 	bl	80083ec <__aeabi_fdiv>
 800cb6c:	2301      	movs	r3, #1
 800cb6e:	4602      	mov	r2, r0
 800cb70:	4936      	ldr	r1, [pc, #216]	; (800cc4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800cb72:	9300      	str	r3, [sp, #0]
 800cb74:	a803      	add	r0, sp, #12
 800cb76:	f7ff fd4b 	bl	800c610 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cb7a:	e77a      	b.n	800ca72 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cb7c:	2a00      	cmp	r2, #0
 800cb7e:	d052      	beq.n	800cc26 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x26a>
 800cb80:	9300      	str	r3, [sp, #0]
 800cb82:	4a30      	ldr	r2, [pc, #192]	; (800cc44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800cb84:	4b3a      	ldr	r3, [pc, #232]	; (800cc70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cb86:	4629      	mov	r1, r5
 800cb88:	f7fc fb9c 	bl	80092c4 <snprintf>
 800cb8c:	4285      	cmp	r5, r0
 800cb8e:	bfa2      	ittt	ge
 800cb90:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cb94:	18c0      	addge	r0, r0, r3
 800cb96:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cb9a:	4938      	ldr	r1, [pc, #224]	; (800cc7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800cb9c:	a803      	add	r0, sp, #12
 800cb9e:	f004 fd17 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cba2:	6863      	ldr	r3, [r4, #4]
 800cba4:	7ca2      	ldrb	r2, [r4, #18]
 800cba6:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800cbaa:	4935      	ldr	r1, [pc, #212]	; (800cc80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800cbac:	a803      	add	r0, sp, #12
 800cbae:	f7ff fcb7 	bl	800c520 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cbb2:	4934      	ldr	r1, [pc, #208]	; (800cc84 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800cbb4:	a803      	add	r0, sp, #12
 800cbb6:	f004 fd0b 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cbba:	6863      	ldr	r3, [r4, #4]
 800cbbc:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800cbc0:	4931      	ldr	r1, [pc, #196]	; (800cc88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800cbc2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800cbc6:	a803      	add	r0, sp, #12
 800cbc8:	f7ff fcd2 	bl	800c570 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cbcc:	6863      	ldr	r3, [r4, #4]
 800cbce:	8b62      	ldrh	r2, [r4, #26]
 800cbd0:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800cbd4:	492d      	ldr	r1, [pc, #180]	; (800cc8c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800cbd6:	a803      	add	r0, sp, #12
 800cbd8:	f7ff fcca 	bl	800c570 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cbdc:	492c      	ldr	r1, [pc, #176]	; (800cc90 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800cbde:	a803      	add	r0, sp, #12
 800cbe0:	f004 fcf6 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 800cbe4:	6863      	ldr	r3, [r4, #4]
 800cbe6:	7d22      	ldrb	r2, [r4, #20]
 800cbe8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cbec:	4929      	ldr	r1, [pc, #164]	; (800cc94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800cbee:	a803      	add	r0, sp, #12
 800cbf0:	f7ff fc96 	bl	800c520 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cbf4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cbf8:	b17b      	cbz	r3, 800cc1a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x25e>
 800cbfa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cbfe:	9b03      	ldr	r3, [sp, #12]
 800cc00:	4413      	add	r3, r2
 800cc02:	227d      	movs	r2, #125	; 0x7d
 800cc04:	f803 2c01 	strb.w	r2, [r3, #-1]
 800cc08:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cc0c:	9903      	ldr	r1, [sp, #12]
 800cc0e:	54ca      	strb	r2, [r1, r3]
 800cc10:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cc14:	3301      	adds	r3, #1
 800cc16:	f8ad 3012 	strh.w	r3, [sp, #18]
 800cc1a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cc1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cc20:	601a      	str	r2, [r3, #0]
 800cc22:	b006      	add	sp, #24
 800cc24:	bd70      	pop	{r4, r5, r6, pc}
 800cc26:	9300      	str	r3, [sp, #0]
 800cc28:	4a12      	ldr	r2, [pc, #72]	; (800cc74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800cc2a:	4b11      	ldr	r3, [pc, #68]	; (800cc70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cc2c:	e7ab      	b.n	800cb86 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800cc2e:	bf00      	nop
 800cc30:	08016a49 	stmdaeq	r1, {r0, r3, r6, r9, fp, sp, lr}
 800cc34:	08016a26 	stmdaeq	r1, {r1, r2, r5, r9, fp, sp, lr}
 800cc38:	08016a2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, fp, sp, lr}
 800cc3c:	080169f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, fp, sp, lr}
 800cc40:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 800cc44:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 800cc48:	08015975 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, fp, ip, lr}
 800cc4c:	080169bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, sp, lr}
 800cc50:	0801597f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, fp, ip, lr}
 800cc54:	08016a16 	stmdaeq	r1, {r1, r2, r4, r9, fp, sp, lr}
 800cc58:	08015993 	stmdaeq	r1, {r0, r1, r4, r7, r8, fp, ip, lr}
 800cc5c:	08016a39 	stmdaeq	r1, {r0, r3, r4, r5, r9, fp, sp, lr}
 800cc60:	08016a41 	stmdaeq	r1, {r0, r6, r9, fp, sp, lr}
 800cc64:	080159a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, ip, lr}
 800cc68:	080169e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, sp, lr}
 800cc6c:	080159b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, fp, ip, lr}
 800cc70:	080169c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, fp, sp, lr}
 800cc74:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}
 800cc78:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800cc7c:	080159c4 	stmdaeq	r1, {r2, r6, r7, r8, fp, ip, lr}
 800cc80:	08016a04 	stmdaeq	r1, {r2, r9, fp, sp, lr}
 800cc84:	080169ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, fp, sp, lr}
 800cc88:	08016b1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, fp, sp, lr}
 800cc8c:	08016ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, sp, lr}
 800cc90:	080159d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, fp, ip, lr}
 800cc94:	080169d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, lr}

0800cc98 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800cc98:	b513      	push	{r0, r1, r4, lr}
 800cc9a:	6804      	ldr	r4, [r0, #0]
 800cc9c:	b914      	cbnz	r4, 800cca4 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800cc9e:	601c      	str	r4, [r3, #0]
 800cca0:	b002      	add	sp, #8
 800cca2:	bd10      	pop	{r4, pc}
 800cca4:	9300      	str	r3, [sp, #0]
 800cca6:	4613      	mov	r3, r2
 800cca8:	460a      	mov	r2, r1
 800ccaa:	2100      	movs	r1, #0
 800ccac:	f7ff fe86 	bl	800c9bc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800ccb0:	e7f6      	b.n	800cca0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ccb2 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800ccb2:	6843      	ldr	r3, [r0, #4]
 800ccb4:	07da      	lsls	r2, r3, #31
 800ccb6:	bf44      	itt	mi
 800ccb8:	7a02      	ldrbmi	r2, [r0, #8]
 800ccba:	600a      	strmi	r2, [r1, #0]
 800ccbc:	079a      	lsls	r2, r3, #30
 800ccbe:	d505      	bpl.n	800cccc <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800ccc0:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800ccc4:	2a00      	cmp	r2, #0
 800ccc6:	bf08      	it	eq
 800ccc8:	22aa      	moveq	r2, #170	; 0xaa
 800ccca:	604a      	str	r2, [r1, #4]
 800cccc:	059a      	lsls	r2, r3, #22
 800ccce:	bf44      	itt	mi
 800ccd0:	7dc2      	ldrbmi	r2, [r0, #23]
 800ccd2:	608a      	strmi	r2, [r1, #8]
 800ccd4:	055a      	lsls	r2, r3, #21
 800ccd6:	bf44      	itt	mi
 800ccd8:	7e02      	ldrbmi	r2, [r0, #24]
 800ccda:	740a      	strbmi	r2, [r1, #16]
 800ccdc:	051a      	lsls	r2, r3, #20
 800ccde:	bf44      	itt	mi
 800cce0:	7e42      	ldrbmi	r2, [r0, #25]
 800cce2:	744a      	strbmi	r2, [r1, #17]
 800cce4:	06da      	lsls	r2, r3, #27
 800cce6:	bf44      	itt	mi
 800cce8:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800ccec:	60ca      	strmi	r2, [r1, #12]
 800ccee:	069a      	lsls	r2, r3, #26
 800ccf0:	bf44      	itt	mi
 800ccf2:	7c82      	ldrbmi	r2, [r0, #18]
 800ccf4:	748a      	strbmi	r2, [r1, #18]
 800ccf6:	061a      	lsls	r2, r3, #24
 800ccf8:	d504      	bpl.n	800cd04 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800ccfa:	2201      	movs	r2, #1
 800ccfc:	750a      	strb	r2, [r1, #20]
 800ccfe:	7b42      	ldrb	r2, [r0, #13]
 800cd00:	b102      	cbz	r2, 800cd04 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800cd02:	74ca      	strb	r2, [r1, #19]
 800cd04:	075a      	lsls	r2, r3, #29
 800cd06:	d50b      	bpl.n	800cd20 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x6e>
 800cd08:	7ac2      	ldrb	r2, [r0, #11]
 800cd0a:	b510      	push	{r4, lr}
 800cd0c:	7b04      	ldrb	r4, [r0, #12]
 800cd0e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800cd12:	858a      	strh	r2, [r1, #44]	; 0x2c
 800cd14:	05da      	lsls	r2, r3, #23
 800cd16:	bf44      	itt	mi
 800cd18:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800cd1c:	620b      	strmi	r3, [r1, #32]
 800cd1e:	bd10      	pop	{r4, pc}
 800cd20:	05db      	lsls	r3, r3, #23
 800cd22:	bf44      	itt	mi
 800cd24:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800cd28:	620b      	strmi	r3, [r1, #32]
 800cd2a:	4770      	bx	lr

0800cd2c <PixelDmxParams::Dump()>:
 800cd2c:	4770      	bx	lr

0800cd2e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800cd2e:	23c0      	movs	r3, #192	; 0xc0
 800cd30:	2803      	cmp	r0, #3
 800cd32:	700b      	strb	r3, [r1, #0]
 800cd34:	d006      	beq.n	800cd44 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800cd36:	3808      	subs	r0, #8
 800cd38:	2803      	cmp	r0, #3
 800cd3a:	bf34      	ite	cc
 800cd3c:	23fc      	movcc	r3, #252	; 0xfc
 800cd3e:	23f0      	movcs	r3, #240	; 0xf0
 800cd40:	7013      	strb	r3, [r2, #0]
 800cd42:	4770      	bx	lr
 800cd44:	23f8      	movs	r3, #248	; 0xf8
 800cd46:	e7fb      	b.n	800cd40 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800cd48 <PixelConfiguration::Validate(unsigned int&)>:
 800cd48:	b513      	push	{r0, r1, r4, lr}
 800cd4a:	4604      	mov	r4, r0
 800cd4c:	6800      	ldr	r0, [r0, #0]
 800cd4e:	6863      	ldr	r3, [r4, #4]
 800cd50:	2807      	cmp	r0, #7
 800cd52:	68a2      	ldr	r2, [r4, #8]
 800cd54:	d128      	bne.n	800cda8 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800cd56:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cd5a:	bf28      	it	cs
 800cd5c:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800cd60:	6063      	str	r3, [r4, #4]
 800cd62:	2304      	movs	r3, #4
 800cd64:	600b      	str	r3, [r1, #0]
 800cd66:	2301      	movs	r3, #1
 800cd68:	2a06      	cmp	r2, #6
 800cd6a:	7563      	strb	r3, [r4, #21]
 800cd6c:	d102      	bne.n	800cd74 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800cd6e:	f000 f949 	bl	800d004 <PixelType::GetMap(pixel::Type)>
 800cd72:	60a0      	str	r0, [r4, #8]
 800cd74:	7c63      	ldrb	r3, [r4, #17]
 800cd76:	7c22      	ldrb	r2, [r4, #16]
 800cd78:	6820      	ldr	r0, [r4, #0]
 800cd7a:	429a      	cmp	r2, r3
 800cd7c:	bf28      	it	cs
 800cd7e:	2300      	movcs	r3, #0
 800cd80:	f10d 0207 	add.w	r2, sp, #7
 800cd84:	bf28      	it	cs
 800cd86:	8223      	strhcs	r3, [r4, #16]
 800cd88:	f10d 0106 	add.w	r1, sp, #6
 800cd8c:	f7ff ffcf 	bl	800cd2e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cd90:	7c23      	ldrb	r3, [r4, #16]
 800cd92:	b913      	cbnz	r3, 800cd9a <PixelConfiguration::Validate(unsigned int&)+0x52>
 800cd94:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800cd98:	7423      	strb	r3, [r4, #16]
 800cd9a:	7c63      	ldrb	r3, [r4, #17]
 800cd9c:	b913      	cbnz	r3, 800cda4 <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800cd9e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cda2:	7463      	strb	r3, [r4, #17]
 800cda4:	4b29      	ldr	r3, [pc, #164]	; (800ce4c <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800cda6:	e01e      	b.n	800cde6 <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800cda8:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800cdac:	bf28      	it	cs
 800cdae:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800cdb2:	6063      	str	r3, [r4, #4]
 800cdb4:	2303      	movs	r3, #3
 800cdb6:	600b      	str	r3, [r1, #0]
 800cdb8:	f1a0 030b 	sub.w	r3, r0, #11
 800cdbc:	2b01      	cmp	r3, #1
 800cdbe:	d806      	bhi.n	800cdce <PixelConfiguration::Validate(unsigned int&)+0x86>
 800cdc0:	7ca3      	ldrb	r3, [r4, #18]
 800cdc2:	2b1f      	cmp	r3, #31
 800cdc4:	d83d      	bhi.n	800ce42 <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800cdc6:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800cdca:	74a3      	strb	r3, [r4, #18]
 800cdcc:	e001      	b.n	800cdd2 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800cdce:	2800      	cmp	r0, #0
 800cdd0:	d139      	bne.n	800ce46 <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800cdd2:	2300      	movs	r3, #0
 800cdd4:	2a06      	cmp	r2, #6
 800cdd6:	bf08      	it	eq
 800cdd8:	60a3      	streq	r3, [r4, #8]
 800cdda:	280d      	cmp	r0, #13
 800cddc:	7563      	strb	r3, [r4, #21]
 800cdde:	68e3      	ldr	r3, [r4, #12]
 800cde0:	d119      	bne.n	800ce16 <PixelConfiguration::Validate(unsigned int&)+0xce>
 800cde2:	b913      	cbnz	r3, 800cdea <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800cde4:	4b1a      	ldr	r3, [pc, #104]	; (800ce50 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800cde6:	60e3      	str	r3, [r4, #12]
 800cde8:	e003      	b.n	800cdf2 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800cdea:	4a1a      	ldr	r2, [pc, #104]	; (800ce54 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800cdec:	4293      	cmp	r3, r2
 800cdee:	d900      	bls.n	800cdf2 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800cdf0:	60e2      	str	r2, [r4, #12]
 800cdf2:	7d23      	ldrb	r3, [r4, #20]
 800cdf4:	b31b      	cbz	r3, 800ce3e <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800cdf6:	7ce3      	ldrb	r3, [r4, #19]
 800cdf8:	b9ab      	cbnz	r3, 800ce26 <PixelConfiguration::Validate(unsigned int&)+0xde>
 800cdfa:	6822      	ldr	r2, [r4, #0]
 800cdfc:	b17a      	cbz	r2, 800ce1e <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800cdfe:	f1a2 030b 	sub.w	r3, r2, #11
 800ce02:	2b01      	cmp	r3, #1
 800ce04:	d90d      	bls.n	800ce22 <PixelConfiguration::Validate(unsigned int&)+0xda>
 800ce06:	4b14      	ldr	r3, [pc, #80]	; (800ce58 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800ce08:	4914      	ldr	r1, [pc, #80]	; (800ce5c <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ce0a:	2a0d      	cmp	r2, #13
 800ce0c:	bf08      	it	eq
 800ce0e:	460b      	moveq	r3, r1
 800ce10:	61a3      	str	r3, [r4, #24]
 800ce12:	b002      	add	sp, #8
 800ce14:	bd10      	pop	{r4, pc}
 800ce16:	2b00      	cmp	r3, #0
 800ce18:	d0e4      	beq.n	800cde4 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800ce1a:	4a11      	ldr	r2, [pc, #68]	; (800ce60 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800ce1c:	e7e6      	b.n	800cdec <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800ce1e:	4b11      	ldr	r3, [pc, #68]	; (800ce64 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800ce20:	e7f6      	b.n	800ce10 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce22:	4b11      	ldr	r3, [pc, #68]	; (800ce68 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800ce24:	e7f4      	b.n	800ce10 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce26:	f1a3 0214 	sub.w	r2, r3, #20
 800ce2a:	2a05      	cmp	r2, #5
 800ce2c:	d807      	bhi.n	800ce3e <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800ce2e:	3b15      	subs	r3, #21
 800ce30:	2b04      	cmp	r3, #4
 800ce32:	bf96      	itet	ls
 800ce34:	4a0d      	ldrls	r2, [pc, #52]	; (800ce6c <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800ce36:	4b0e      	ldrhi	r3, [pc, #56]	; (800ce70 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800ce38:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800ce3c:	e7e8      	b.n	800ce10 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce3e:	4b07      	ldr	r3, [pc, #28]	; (800ce5c <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ce40:	e7e6      	b.n	800ce10 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce42:	23ff      	movs	r3, #255	; 0xff
 800ce44:	e7c1      	b.n	800cdca <PixelConfiguration::Validate(unsigned int&)+0x82>
 800ce46:	280d      	cmp	r0, #13
 800ce48:	d18d      	bne.n	800cd66 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800ce4a:	e7c2      	b.n	800cdd2 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800ce4c:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800ce50:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ce54:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800ce58:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800ce5c:	08015ab4 	stmdaeq	r1, {r2, r4, r5, r7, r9, fp, ip, lr}
 800ce60:	017d7840 	cmneq	sp, r0, asr #16
 800ce64:	080160b4 	stmdaeq	r1, {r2, r4, r5, r7, sp, lr}
 800ce68:	080161b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sp, lr}
 800ce6c:	08015aa0 	stmdaeq	r1, {r5, r7, r9, fp, ip, lr}
 800ce70:	08015bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, lr}

0800ce74 <PixelConfiguration::Print()>:
 800ce74:	b513      	push	{r0, r1, r4, lr}
 800ce76:	4604      	mov	r4, r0
 800ce78:	4825      	ldr	r0, [pc, #148]	; (800cf10 <PixelConfiguration::Print()+0x9c>)
 800ce7a:	f7fc f9fb 	bl	8009274 <printf>
 800ce7e:	6820      	ldr	r0, [r4, #0]
 800ce80:	f000 f85c 	bl	800cf3c <PixelType::GetType(pixel::Type)>
 800ce84:	6822      	ldr	r2, [r4, #0]
 800ce86:	4601      	mov	r1, r0
 800ce88:	4822      	ldr	r0, [pc, #136]	; (800cf14 <PixelConfiguration::Print()+0xa0>)
 800ce8a:	f7fc f9f3 	bl	8009274 <printf>
 800ce8e:	6861      	ldr	r1, [r4, #4]
 800ce90:	4821      	ldr	r0, [pc, #132]	; (800cf18 <PixelConfiguration::Print()+0xa4>)
 800ce92:	f7fc f9ef 	bl	8009274 <printf>
 800ce96:	7d63      	ldrb	r3, [r4, #21]
 800ce98:	2b00      	cmp	r3, #0
 800ce9a:	d030      	beq.n	800cefe <PixelConfiguration::Print()+0x8a>
 800ce9c:	68a0      	ldr	r0, [r4, #8]
 800ce9e:	f000 f8a5 	bl	800cfec <PixelType::GetMap(pixel::Map)>
 800cea2:	68a2      	ldr	r2, [r4, #8]
 800cea4:	4601      	mov	r1, r0
 800cea6:	481d      	ldr	r0, [pc, #116]	; (800cf1c <PixelConfiguration::Print()+0xa8>)
 800cea8:	f7fc f9e4 	bl	8009274 <printf>
 800ceac:	7c20      	ldrb	r0, [r4, #16]
 800ceae:	f000 f8b3 	bl	800d018 <PixelType::ConvertTxH(unsigned char)>
 800ceb2:	f7fb f98f 	bl	80081d4 <__aeabi_f2d>
 800ceb6:	460b      	mov	r3, r1
 800ceb8:	7c21      	ldrb	r1, [r4, #16]
 800ceba:	4602      	mov	r2, r0
 800cebc:	9100      	str	r1, [sp, #0]
 800cebe:	4818      	ldr	r0, [pc, #96]	; (800cf20 <PixelConfiguration::Print()+0xac>)
 800cec0:	f7fc f9d8 	bl	8009274 <printf>
 800cec4:	7c60      	ldrb	r0, [r4, #17]
 800cec6:	f000 f8a7 	bl	800d018 <PixelType::ConvertTxH(unsigned char)>
 800ceca:	f7fb f983 	bl	80081d4 <__aeabi_f2d>
 800cece:	460b      	mov	r3, r1
 800ced0:	7c61      	ldrb	r1, [r4, #17]
 800ced2:	4602      	mov	r2, r0
 800ced4:	9100      	str	r1, [sp, #0]
 800ced6:	4813      	ldr	r0, [pc, #76]	; (800cf24 <PixelConfiguration::Print()+0xb0>)
 800ced8:	f7fc f9cc 	bl	8009274 <printf>
 800cedc:	7d21      	ldrb	r1, [r4, #20]
 800cede:	4a12      	ldr	r2, [pc, #72]	; (800cf28 <PixelConfiguration::Print()+0xb4>)
 800cee0:	4b12      	ldr	r3, [pc, #72]	; (800cf2c <PixelConfiguration::Print()+0xb8>)
 800cee2:	4813      	ldr	r0, [pc, #76]	; (800cf30 <PixelConfiguration::Print()+0xbc>)
 800cee4:	2900      	cmp	r1, #0
 800cee6:	bf14      	ite	ne
 800cee8:	4611      	movne	r1, r2
 800ceea:	4619      	moveq	r1, r3
 800ceec:	f7fc f9c2 	bl	8009274 <printf>
 800cef0:	68e1      	ldr	r1, [r4, #12]
 800cef2:	4810      	ldr	r0, [pc, #64]	; (800cf34 <PixelConfiguration::Print()+0xc0>)
 800cef4:	b002      	add	sp, #8
 800cef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cefa:	f7fc b9bb 	b.w	8009274 <printf>
 800cefe:	6823      	ldr	r3, [r4, #0]
 800cf00:	3b0b      	subs	r3, #11
 800cf02:	2b01      	cmp	r3, #1
 800cf04:	d8ea      	bhi.n	800cedc <PixelConfiguration::Print()+0x68>
 800cf06:	7ca1      	ldrb	r1, [r4, #18]
 800cf08:	480b      	ldr	r0, [pc, #44]	; (800cf38 <PixelConfiguration::Print()+0xc4>)
 800cf0a:	f7fc f9b3 	bl	8009274 <printf>
 800cf0e:	e7e5      	b.n	800cedc <PixelConfiguration::Print()+0x68>
 800cf10:	080159e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, fp, ip, lr}
 800cf14:	080159fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 800cf18:	08015a0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, fp, ip, lr}
 800cf1c:	08015a1e 	stmdaeq	r1, {r1, r2, r3, r4, r9, fp, ip, lr}
 800cf20:	08015a32 	stmdaeq	r1, {r1, r4, r5, r9, fp, ip, lr}
 800cf24:	08015a4a 	stmdaeq	r1, {r1, r3, r6, r9, fp, ip, lr}
 800cf28:	080159df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, fp, ip, lr}
 800cf2c:	080159e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, lr}
 800cf30:	08015a79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, fp, ip, lr}
 800cf34:	08015a8f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, fp, ip, lr}
 800cf38:	08015a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, lr}

0800cf3c <PixelType::GetType(pixel::Type)>:
 800cf3c:	280d      	cmp	r0, #13
 800cf3e:	bfda      	itte	le
 800cf40:	4b02      	ldrle	r3, [pc, #8]	; (800cf4c <PixelType::GetType(pixel::Type)+0x10>)
 800cf42:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800cf46:	4802      	ldrgt	r0, [pc, #8]	; (800cf50 <PixelType::GetType(pixel::Type)+0x14>)
 800cf48:	4770      	bx	lr
 800cf4a:	bf00      	nop
 800cf4c:	080162e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sp, lr}
 800cf50:	080162b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sp, lr}

0800cf54 <PixelType::GetType(char const*)>:
 800cf54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf56:	4604      	mov	r4, r0
 800cf58:	2000      	movs	r0, #0
 800cf5a:	490f      	ldr	r1, [pc, #60]	; (800cf98 <PixelType::GetType(char const*)+0x44>)
 800cf5c:	1e67      	subs	r7, r4, #1
 800cf5e:	1e4e      	subs	r6, r1, #1
 800cf60:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800cf64:	4615      	mov	r5, r2
 800cf66:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800cf6a:	2b19      	cmp	r3, #25
 800cf6c:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800cf70:	bf98      	it	ls
 800cf72:	f102 0520 	addls.w	r5, r2, #32
 800cf76:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800cf7a:	f1bc 0f19 	cmp.w	ip, #25
 800cf7e:	bf98      	it	ls
 800cf80:	3320      	addls	r3, #32
 800cf82:	42ab      	cmp	r3, r5
 800cf84:	d005      	beq.n	800cf92 <PixelType::GetType(char const*)+0x3e>
 800cf86:	3001      	adds	r0, #1
 800cf88:	280e      	cmp	r0, #14
 800cf8a:	f101 0108 	add.w	r1, r1, #8
 800cf8e:	d1e5      	bne.n	800cf5c <PixelType::GetType(char const*)+0x8>
 800cf90:	e001      	b.n	800cf96 <PixelType::GetType(char const*)+0x42>
 800cf92:	2a00      	cmp	r2, #0
 800cf94:	d1e4      	bne.n	800cf60 <PixelType::GetType(char const*)+0xc>
 800cf96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf98:	080162e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sp, lr}

0800cf9c <PixelType::GetMap(char const*)>:
 800cf9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf9e:	4605      	mov	r5, r0
 800cfa0:	2000      	movs	r0, #0
 800cfa2:	4b11      	ldr	r3, [pc, #68]	; (800cfe8 <PixelType::GetMap(char const*)+0x4c>)
 800cfa4:	1e5c      	subs	r4, r3, #1
 800cfa6:	1e6e      	subs	r6, r5, #1
 800cfa8:	f103 0c02 	add.w	ip, r3, #2
 800cfac:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800cfb0:	4617      	mov	r7, r2
 800cfb2:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800cfb6:	2919      	cmp	r1, #25
 800cfb8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800cfbc:	bf98      	it	ls
 800cfbe:	f102 0720 	addls.w	r7, r2, #32
 800cfc2:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800cfc6:	f1be 0f19 	cmp.w	lr, #25
 800cfca:	bf98      	it	ls
 800cfcc:	3120      	addls	r1, #32
 800cfce:	42b9      	cmp	r1, r7
 800cfd0:	d005      	beq.n	800cfde <PixelType::GetMap(char const*)+0x42>
 800cfd2:	3001      	adds	r0, #1
 800cfd4:	2806      	cmp	r0, #6
 800cfd6:	f103 0304 	add.w	r3, r3, #4
 800cfda:	d1e3      	bne.n	800cfa4 <PixelType::GetMap(char const*)+0x8>
 800cfdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfde:	2a00      	cmp	r2, #0
 800cfe0:	d0fc      	beq.n	800cfdc <PixelType::GetMap(char const*)+0x40>
 800cfe2:	4564      	cmp	r4, ip
 800cfe4:	d1e2      	bne.n	800cfac <PixelType::GetMap(char const*)+0x10>
 800cfe6:	e7f9      	b.n	800cfdc <PixelType::GetMap(char const*)+0x40>
 800cfe8:	080162d0 	stmdaeq	r1, {r4, r6, r7, r9, sp, lr}

0800cfec <PixelType::GetMap(pixel::Map)>:
 800cfec:	2805      	cmp	r0, #5
 800cfee:	bfda      	itte	le
 800cff0:	4b02      	ldrle	r3, [pc, #8]	; (800cffc <PixelType::GetMap(pixel::Map)+0x10>)
 800cff2:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800cff6:	4802      	ldrgt	r0, [pc, #8]	; (800d000 <PixelType::GetMap(pixel::Map)+0x14>)
 800cff8:	4770      	bx	lr
 800cffa:	bf00      	nop
 800cffc:	080162d0 	stmdaeq	r1, {r4, r6, r7, r9, sp, lr}
 800d000:	080162bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sp, lr}

0800d004 <PixelType::GetMap(pixel::Type)>:
 800d004:	3801      	subs	r0, #1
 800d006:	2809      	cmp	r0, #9
 800d008:	bf9a      	itte	ls
 800d00a:	4b02      	ldrls	r3, [pc, #8]	; (800d014 <PixelType::GetMap(pixel::Type)+0x10>)
 800d00c:	5618      	ldrsbls	r0, [r3, r0]
 800d00e:	2002      	movhi	r0, #2
 800d010:	4770      	bx	lr
 800d012:	bf00      	nop
 800d014:	080162c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sp, lr}

0800d018 <PixelType::ConvertTxH(unsigned char)>:
 800d018:	28f0      	cmp	r0, #240	; 0xf0
 800d01a:	d010      	beq.n	800d03e <PixelType::ConvertTxH(unsigned char)+0x26>
 800d01c:	d807      	bhi.n	800d02e <PixelType::ConvertTxH(unsigned char)+0x16>
 800d01e:	28c0      	cmp	r0, #192	; 0xc0
 800d020:	d00f      	beq.n	800d042 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d022:	28e0      	cmp	r0, #224	; 0xe0
 800d024:	d00f      	beq.n	800d046 <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d026:	2880      	cmp	r0, #128	; 0x80
 800d028:	d113      	bne.n	800d052 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d02a:	480b      	ldr	r0, [pc, #44]	; (800d058 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d02c:	4770      	bx	lr
 800d02e:	28fc      	cmp	r0, #252	; 0xfc
 800d030:	d00b      	beq.n	800d04a <PixelType::ConvertTxH(unsigned char)+0x32>
 800d032:	28fe      	cmp	r0, #254	; 0xfe
 800d034:	d00b      	beq.n	800d04e <PixelType::ConvertTxH(unsigned char)+0x36>
 800d036:	28f8      	cmp	r0, #248	; 0xf8
 800d038:	d10b      	bne.n	800d052 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d03a:	4808      	ldr	r0, [pc, #32]	; (800d05c <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d03c:	4770      	bx	lr
 800d03e:	4808      	ldr	r0, [pc, #32]	; (800d060 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d040:	4770      	bx	lr
 800d042:	4808      	ldr	r0, [pc, #32]	; (800d064 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d044:	4770      	bx	lr
 800d046:	4808      	ldr	r0, [pc, #32]	; (800d068 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d048:	4770      	bx	lr
 800d04a:	4808      	ldr	r0, [pc, #32]	; (800d06c <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d04c:	4770      	bx	lr
 800d04e:	4808      	ldr	r0, [pc, #32]	; (800d070 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d050:	4770      	bx	lr
 800d052:	2000      	movs	r0, #0
 800d054:	4770      	bx	lr
 800d056:	bf00      	nop
 800d058:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d05c:	3f480000 	svccc	0x00480000
 800d060:	3f200000 	svccc	0x00200000
 800d064:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d068:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d06c:	3f700000 	svccc	0x00700000
 800d070:	3f8c0000 	svccc	0x008c0000

0800d074 <PixelType::ConvertTxH(float)>:
 800d074:	b510      	push	{r4, lr}
 800d076:	491d      	ldr	r1, [pc, #116]	; (800d0ec <PixelType::ConvertTxH(float)+0x78>)
 800d078:	4604      	mov	r4, r0
 800d07a:	f7fa fedf 	bl	8007e3c <__aeabi_fcmplt>
 800d07e:	bb30      	cbnz	r0, 800d0ce <PixelType::ConvertTxH(float)+0x5a>
 800d080:	4620      	mov	r0, r4
 800d082:	491b      	ldr	r1, [pc, #108]	; (800d0f0 <PixelType::ConvertTxH(float)+0x7c>)
 800d084:	f7fa feda 	bl	8007e3c <__aeabi_fcmplt>
 800d088:	bb18      	cbnz	r0, 800d0d2 <PixelType::ConvertTxH(float)+0x5e>
 800d08a:	4620      	mov	r0, r4
 800d08c:	4919      	ldr	r1, [pc, #100]	; (800d0f4 <PixelType::ConvertTxH(float)+0x80>)
 800d08e:	f7fa fed5 	bl	8007e3c <__aeabi_fcmplt>
 800d092:	bb00      	cbnz	r0, 800d0d6 <PixelType::ConvertTxH(float)+0x62>
 800d094:	4620      	mov	r0, r4
 800d096:	4918      	ldr	r1, [pc, #96]	; (800d0f8 <PixelType::ConvertTxH(float)+0x84>)
 800d098:	f7fa fed0 	bl	8007e3c <__aeabi_fcmplt>
 800d09c:	b9e8      	cbnz	r0, 800d0da <PixelType::ConvertTxH(float)+0x66>
 800d09e:	4620      	mov	r0, r4
 800d0a0:	4916      	ldr	r1, [pc, #88]	; (800d0fc <PixelType::ConvertTxH(float)+0x88>)
 800d0a2:	f7fa fecb 	bl	8007e3c <__aeabi_fcmplt>
 800d0a6:	b9d0      	cbnz	r0, 800d0de <PixelType::ConvertTxH(float)+0x6a>
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	4915      	ldr	r1, [pc, #84]	; (800d100 <PixelType::ConvertTxH(float)+0x8c>)
 800d0ac:	f7fa fec6 	bl	8007e3c <__aeabi_fcmplt>
 800d0b0:	b9b8      	cbnz	r0, 800d0e2 <PixelType::ConvertTxH(float)+0x6e>
 800d0b2:	4620      	mov	r0, r4
 800d0b4:	4913      	ldr	r1, [pc, #76]	; (800d104 <PixelType::ConvertTxH(float)+0x90>)
 800d0b6:	f7fa fec1 	bl	8007e3c <__aeabi_fcmplt>
 800d0ba:	b9a0      	cbnz	r0, 800d0e6 <PixelType::ConvertTxH(float)+0x72>
 800d0bc:	4620      	mov	r0, r4
 800d0be:	4912      	ldr	r1, [pc, #72]	; (800d108 <PixelType::ConvertTxH(float)+0x94>)
 800d0c0:	f7fa febc 	bl	8007e3c <__aeabi_fcmplt>
 800d0c4:	2800      	cmp	r0, #0
 800d0c6:	bf14      	ite	ne
 800d0c8:	20fe      	movne	r0, #254	; 0xfe
 800d0ca:	2000      	moveq	r0, #0
 800d0cc:	bd10      	pop	{r4, pc}
 800d0ce:	2000      	movs	r0, #0
 800d0d0:	e7fc      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0d2:	2080      	movs	r0, #128	; 0x80
 800d0d4:	e7fa      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0d6:	20c0      	movs	r0, #192	; 0xc0
 800d0d8:	e7f8      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0da:	20e0      	movs	r0, #224	; 0xe0
 800d0dc:	e7f6      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0de:	20f0      	movs	r0, #240	; 0xf0
 800d0e0:	e7f4      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0e2:	20f8      	movs	r0, #248	; 0xf8
 800d0e4:	e7f2      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0e6:	20fc      	movs	r0, #252	; 0xfc
 800d0e8:	e7f0      	b.n	800d0cc <PixelType::ConvertTxH(float)+0x58>
 800d0ea:	bf00      	nop
 800d0ec:	3da00000 	stccc	0, cr0, [r0]
 800d0f0:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d0f4:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d0f8:	3f0c0000 	svccc	0x000c0000
 800d0fc:	3f340000 	svccc	0x00340000
 800d100:	3f5c0000 	svccc	0x005c0000
 800d104:	3f820000 	svccc	0x00820000
 800d108:	3f960000 	svccc	0x00960000

0800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800d10c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d10e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800d112:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800d116:	b2cc      	uxtb	r4, r1
 800d118:	490e      	ldr	r1, [pc, #56]	; (800d154 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x48>)
 800d11a:	4605      	mov	r5, r0
 800d11c:	6808      	ldr	r0, [r1, #0]
 800d11e:	6801      	ldr	r1, [r0, #0]
 800d120:	2907      	cmp	r1, #7
 800d122:	d005      	beq.n	800d130 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800d124:	4629      	mov	r1, r5
 800d126:	9400      	str	r4, [sp, #0]
 800d128:	f000 fa88 	bl	800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d12c:	b003      	add	sp, #12
 800d12e:	bd30      	pop	{r4, r5, pc}
 800d130:	429a      	cmp	r2, r3
 800d132:	f04f 0100 	mov.w	r1, #0
 800d136:	d109      	bne.n	800d14c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800d138:	42a2      	cmp	r2, r4
 800d13a:	d107      	bne.n	800d14c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800d13c:	e9cd 1200 	strd	r1, r2, [sp]
 800d140:	460b      	mov	r3, r1
 800d142:	460a      	mov	r2, r1
 800d144:	4629      	mov	r1, r5
 800d146:	f000 feab 	bl	800dea0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d14a:	e7ef      	b.n	800d12c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x20>
 800d14c:	e9cd 4100 	strd	r4, r1, [sp]
 800d150:	e7f8      	b.n	800d144 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x38>
 800d152:	bf00      	nop
 800d154:	20001f08 	andcs	r1, r0, r8, lsl #30

0800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800d158:	b538      	push	{r3, r4, r5, lr}
 800d15a:	2400      	movs	r4, #0
 800d15c:	4d05      	ldr	r5, [pc, #20]	; (800d174 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800d15e:	682b      	ldr	r3, [r5, #0]
 800d160:	429c      	cmp	r4, r3
 800d162:	d300      	bcc.n	800d166 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0xe>
 800d164:	bd38      	pop	{r3, r4, r5, pc}
 800d166:	4620      	mov	r0, r4
 800d168:	2100      	movs	r1, #0
 800d16a:	f7ff ffcf 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d16e:	3401      	adds	r4, #1
 800d170:	e7f5      	b.n	800d15e <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800d172:	bf00      	nop
 800d174:	20001f04 	andcs	r1, r0, r4, lsl #30

0800d178 <PixelPatterns::PixelPatterns(unsigned int)>:
 800d178:	2901      	cmp	r1, #1
 800d17a:	bf28      	it	cs
 800d17c:	2101      	movcs	r1, #1
 800d17e:	4b08      	ldr	r3, [pc, #32]	; (800d1a0 <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800d180:	4a08      	ldr	r2, [pc, #32]	; (800d1a4 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800d182:	681b      	ldr	r3, [r3, #0]
 800d184:	6013      	str	r3, [r2, #0]
 800d186:	4a08      	ldr	r2, [pc, #32]	; (800d1a8 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800d188:	6011      	str	r1, [r2, #0]
 800d18a:	685a      	ldr	r2, [r3, #4]
 800d18c:	4b07      	ldr	r3, [pc, #28]	; (800d1ac <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800d18e:	601a      	str	r2, [r3, #0]
 800d190:	2200      	movs	r2, #0
 800d192:	4b07      	ldr	r3, [pc, #28]	; (800d1b0 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800d194:	6819      	ldr	r1, [r3, #0]
 800d196:	4b07      	ldr	r3, [pc, #28]	; (800d1b4 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800d198:	61da      	str	r2, [r3, #28]
 800d19a:	6019      	str	r1, [r3, #0]
 800d19c:	619a      	str	r2, [r3, #24]
 800d19e:	4770      	bx	lr
 800d1a0:	20001f14 	andcs	r1, r0, r4, lsl pc
 800d1a4:	20001f08 	andcs	r1, r0, r8, lsl #30
 800d1a8:	20001efc 	strdcs	r1, [r0], -ip
 800d1ac:	20001f04 	andcs	r1, r0, r4, lsl #30
 800d1b0:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800d1b4:	20001edc 	ldrdcs	r1, [r0], -ip

0800d1b8 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800d1b8:	2805      	cmp	r0, #5
 800d1ba:	bfdd      	ittte	le
 800d1bc:	220e      	movle	r2, #14
 800d1be:	4b02      	ldrle	r3, [pc, #8]	; (800d1c8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800d1c0:	fb02 3000 	mlale	r0, r2, r0, r3
 800d1c4:	4801      	ldrgt	r0, [pc, #4]	; (800d1cc <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800d1c6:	4770      	bx	lr
 800d1c8:	08016358 	stmdaeq	r1, {r3, r4, r6, r8, r9, sp, lr}
 800d1cc:	080162b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sp, lr}

0800d1d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d1d0:	b570      	push	{r4, r5, r6, lr}
 800d1d2:	460e      	mov	r6, r1
 800d1d4:	4615      	mov	r5, r2
 800d1d6:	461c      	mov	r4, r3
 800d1d8:	f7ff ffbe 	bl	800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d1dc:	2301      	movs	r3, #1
 800d1de:	4905      	ldr	r1, [pc, #20]	; (800d1f4 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800d1e0:	22ff      	movs	r2, #255	; 0xff
 800d1e2:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d1e6:	61cb      	str	r3, [r1, #28]
 800d1e8:	2300      	movs	r3, #0
 800d1ea:	604d      	str	r5, [r1, #4]
 800d1ec:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d1f0:	618c      	str	r4, [r1, #24]
 800d1f2:	bd70      	pop	{r4, r5, r6, pc}
 800d1f4:	20001edc 	ldrdcs	r1, [r0], -ip

0800d1f8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d1f8:	b570      	push	{r4, r5, r6, lr}
 800d1fa:	460e      	mov	r6, r1
 800d1fc:	461c      	mov	r4, r3
 800d1fe:	4615      	mov	r5, r2
 800d200:	f7ff ffaa 	bl	800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d204:	2302      	movs	r3, #2
 800d206:	4908      	ldr	r1, [pc, #32]	; (800d228 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d208:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d20c:	61cb      	str	r3, [r1, #28]
 800d20e:	9b04      	ldr	r3, [sp, #16]
 800d210:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800d214:	604b      	str	r3, [r1, #4]
 800d216:	4b05      	ldr	r3, [pc, #20]	; (800d22c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d218:	681b      	ldr	r3, [r3, #0]
 800d21a:	610b      	str	r3, [r1, #16]
 800d21c:	2300      	movs	r3, #0
 800d21e:	614b      	str	r3, [r1, #20]
 800d220:	9b05      	ldr	r3, [sp, #20]
 800d222:	618b      	str	r3, [r1, #24]
 800d224:	bd70      	pop	{r4, r5, r6, pc}
 800d226:	bf00      	nop
 800d228:	20001edc 	ldrdcs	r1, [r0], -ip
 800d22c:	20001f04 	andcs	r1, r0, r4, lsl #30

0800d230 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d230:	b570      	push	{r4, r5, r6, lr}
 800d232:	460e      	mov	r6, r1
 800d234:	461d      	mov	r5, r3
 800d236:	4614      	mov	r4, r2
 800d238:	f7ff ff8e 	bl	800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d23c:	2303      	movs	r3, #3
 800d23e:	4907      	ldr	r1, [pc, #28]	; (800d25c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d240:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d244:	61cb      	str	r3, [r1, #28]
 800d246:	4b06      	ldr	r3, [pc, #24]	; (800d260 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d248:	604d      	str	r5, [r1, #4]
 800d24a:	681b      	ldr	r3, [r3, #0]
 800d24c:	608c      	str	r4, [r1, #8]
 800d24e:	610b      	str	r3, [r1, #16]
 800d250:	2300      	movs	r3, #0
 800d252:	614b      	str	r3, [r1, #20]
 800d254:	9b04      	ldr	r3, [sp, #16]
 800d256:	618b      	str	r3, [r1, #24]
 800d258:	bd70      	pop	{r4, r5, r6, pc}
 800d25a:	bf00      	nop
 800d25c:	20001edc 	ldrdcs	r1, [r0], -ip
 800d260:	20001f04 	andcs	r1, r0, r4, lsl #30

0800d264 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d264:	b570      	push	{r4, r5, r6, lr}
 800d266:	460e      	mov	r6, r1
 800d268:	461d      	mov	r5, r3
 800d26a:	4614      	mov	r4, r2
 800d26c:	f7ff ff74 	bl	800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d270:	2304      	movs	r3, #4
 800d272:	4912      	ldr	r1, [pc, #72]	; (800d2bc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800d274:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d278:	604d      	str	r5, [r1, #4]
 800d27a:	4d11      	ldr	r5, [pc, #68]	; (800d2c0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d27c:	61cb      	str	r3, [r1, #28]
 800d27e:	6828      	ldr	r0, [r5, #0]
 800d280:	608c      	str	r4, [r1, #8]
 800d282:	1e43      	subs	r3, r0, #1
 800d284:	005b      	lsls	r3, r3, #1
 800d286:	b29b      	uxth	r3, r3
 800d288:	610b      	str	r3, [r1, #16]
 800d28a:	2300      	movs	r3, #0
 800d28c:	4c0d      	ldr	r4, [pc, #52]	; (800d2c4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d28e:	614b      	str	r3, [r1, #20]
 800d290:	6823      	ldr	r3, [r4, #0]
 800d292:	b97b      	cbnz	r3, 800d2b4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x50>
 800d294:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d298:	4298      	cmp	r0, r3
 800d29a:	bf2c      	ite	cs
 800d29c:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d2a0:	0080      	lslcc	r0, r0, #2
 800d2a2:	f004 ff5b 	bl	801215c <operator new[](unsigned int)>
 800d2a6:	2200      	movs	r2, #0
 800d2a8:	682b      	ldr	r3, [r5, #0]
 800d2aa:	6020      	str	r0, [r4, #0]
 800d2ac:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800d2b0:	4298      	cmp	r0, r3
 800d2b2:	d100      	bne.n	800d2b6 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800d2b4:	bd70      	pop	{r4, r5, r6, pc}
 800d2b6:	f840 2b04 	str.w	r2, [r0], #4
 800d2ba:	e7f9      	b.n	800d2b0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800d2bc:	20001edc 	ldrdcs	r1, [r0], -ip
 800d2c0:	20001f04 	andcs	r1, r0, r4, lsl #30
 800d2c4:	20001f00 	andcs	r1, r0, r0, lsl #30

0800d2c8 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d2c8:	b570      	push	{r4, r5, r6, lr}
 800d2ca:	460e      	mov	r6, r1
 800d2cc:	461c      	mov	r4, r3
 800d2ce:	4615      	mov	r5, r2
 800d2d0:	f7ff ff42 	bl	800d158 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d2d4:	2305      	movs	r3, #5
 800d2d6:	4907      	ldr	r1, [pc, #28]	; (800d2f4 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d2d8:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d2dc:	61cb      	str	r3, [r1, #28]
 800d2de:	9b05      	ldr	r3, [sp, #20]
 800d2e0:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800d2e4:	604b      	str	r3, [r1, #4]
 800d2e6:	9b04      	ldr	r3, [sp, #16]
 800d2e8:	610b      	str	r3, [r1, #16]
 800d2ea:	2300      	movs	r3, #0
 800d2ec:	614b      	str	r3, [r1, #20]
 800d2ee:	9b06      	ldr	r3, [sp, #24]
 800d2f0:	618b      	str	r3, [r1, #24]
 800d2f2:	bd70      	pop	{r4, r5, r6, pc}
 800d2f4:	20001edc 	ldrdcs	r1, [r0], -ip

0800d2f8 <PixelPatterns::Wheel(unsigned char)>:
 800d2f8:	43cb      	mvns	r3, r1
 800d2fa:	b2db      	uxtb	r3, r3
 800d2fc:	2b54      	cmp	r3, #84	; 0x54
 800d2fe:	d809      	bhi.n	800d314 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d300:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800d304:	b2db      	uxtb	r3, r3
 800d306:	1e5a      	subs	r2, r3, #1
 800d308:	4258      	negs	r0, r3
 800d30a:	b2d2      	uxtb	r2, r2
 800d30c:	b2c0      	uxtb	r0, r0
 800d30e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800d312:	4770      	bx	lr
 800d314:	2ba9      	cmp	r3, #169	; 0xa9
 800d316:	d809      	bhi.n	800d32c <PixelPatterns::Wheel(unsigned char)+0x34>
 800d318:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800d31c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d320:	b2c9      	uxtb	r1, r1
 800d322:	43c8      	mvns	r0, r1
 800d324:	b2c0      	uxtb	r0, r0
 800d326:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800d32a:	4770      	bx	lr
 800d32c:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800d330:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d334:	b2c9      	uxtb	r1, r1
 800d336:	0208      	lsls	r0, r1, #8
 800d338:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800d33c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800d340:	4770      	bx	lr
	...

0800d344 <PixelPatterns::Increment(unsigned int)>:
 800d344:	4a0d      	ldr	r2, [pc, #52]	; (800d37c <PixelPatterns::Increment(unsigned int)+0x38>)
 800d346:	b510      	push	{r4, lr}
 800d348:	014c      	lsls	r4, r1, #5
 800d34a:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d34e:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d352:	b930      	cbnz	r0, 800d362 <PixelPatterns::Increment(unsigned int)+0x1e>
 800d354:	690a      	ldr	r2, [r1, #16]
 800d356:	3301      	adds	r3, #1
 800d358:	4293      	cmp	r3, r2
 800d35a:	bf18      	it	ne
 800d35c:	4618      	movne	r0, r3
 800d35e:	6148      	str	r0, [r1, #20]
 800d360:	bd10      	pop	{r4, pc}
 800d362:	b92b      	cbnz	r3, 800d370 <PixelPatterns::Increment(unsigned int)+0x2c>
 800d364:	4422      	add	r2, r4
 800d366:	6913      	ldr	r3, [r2, #16]
 800d368:	3b01      	subs	r3, #1
 800d36a:	b29b      	uxth	r3, r3
 800d36c:	6153      	str	r3, [r2, #20]
 800d36e:	e7f7      	b.n	800d360 <PixelPatterns::Increment(unsigned int)+0x1c>
 800d370:	3b01      	subs	r3, #1
 800d372:	614b      	str	r3, [r1, #20]
 800d374:	2b00      	cmp	r3, #0
 800d376:	d1f3      	bne.n	800d360 <PixelPatterns::Increment(unsigned int)+0x1c>
 800d378:	e7f4      	b.n	800d364 <PixelPatterns::Increment(unsigned int)+0x20>
 800d37a:	bf00      	nop
 800d37c:	20001edc 	ldrdcs	r1, [r0], -ip

0800d380 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d380:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d384:	4604      	mov	r4, r0
 800d386:	460d      	mov	r5, r1
 800d388:	2700      	movs	r7, #0
 800d38a:	4b10      	ldr	r3, [pc, #64]	; (800d3cc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800d38c:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800d3d0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800d390:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d394:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d398:	f8d8 2000 	ldr.w	r2, [r8]
 800d39c:	b2be      	uxth	r6, r7
 800d39e:	42b2      	cmp	r2, r6
 800d3a0:	f107 0701 	add.w	r7, r7, #1
 800d3a4:	d805      	bhi.n	800d3b2 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800d3a6:	4629      	mov	r1, r5
 800d3a8:	4620      	mov	r0, r4
 800d3aa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d3ae:	f7ff bfc9 	b.w	800d344 <PixelPatterns::Increment(unsigned int)>
 800d3b2:	0233      	lsls	r3, r6, #8
 800d3b4:	fbb3 f3f2 	udiv	r3, r3, r2
 800d3b8:	444b      	add	r3, r9
 800d3ba:	b2d9      	uxtb	r1, r3
 800d3bc:	4620      	mov	r0, r4
 800d3be:	f7ff ff9b 	bl	800d2f8 <PixelPatterns::Wheel(unsigned char)>
 800d3c2:	4601      	mov	r1, r0
 800d3c4:	4630      	mov	r0, r6
 800d3c6:	f7ff fea1 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d3ca:	e7e5      	b.n	800d398 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d3cc:	20001edc 	ldrdcs	r1, [r0], -ip
 800d3d0:	20001f04 	andcs	r1, r0, r4, lsl #30

0800d3d4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d3d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3d8:	4605      	mov	r5, r0
 800d3da:	460c      	mov	r4, r1
 800d3dc:	f04f 0b00 	mov.w	fp, #0
 800d3e0:	4b11      	ldr	r3, [pc, #68]	; (800d428 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800d3e2:	4e12      	ldr	r6, [pc, #72]	; (800d42c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d3e4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d3e8:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d3ec:	f8df a040 	ldr.w	sl, [pc, #64]	; 800d430 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d3f0:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800d3f4:	6833      	ldr	r3, [r6, #0]
 800d3f6:	fa1f f08b 	uxth.w	r0, fp
 800d3fa:	4283      	cmp	r3, r0
 800d3fc:	d805      	bhi.n	800d40a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800d3fe:	4621      	mov	r1, r4
 800d400:	4628      	mov	r0, r5
 800d402:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d406:	f7ff bf9d 	b.w	800d344 <PixelPatterns::Increment(unsigned int)>
 800d40a:	eb09 0300 	add.w	r3, r9, r0
 800d40e:	fb0a f303 	mul.w	r3, sl, r3
 800d412:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d416:	bf94      	ite	ls
 800d418:	4639      	movls	r1, r7
 800d41a:	4641      	movhi	r1, r8
 800d41c:	f7ff fe76 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d420:	f10b 0b01 	add.w	fp, fp, #1
 800d424:	e7e6      	b.n	800d3f4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800d426:	bf00      	nop
 800d428:	20001edc 	ldrdcs	r1, [r0], -ip
 800d42c:	20001f04 	andcs	r1, r0, r4, lsl #30
 800d430:	aaaaaaab 	bge	6ab7ee4 <__stack_size+0x6ab5ee4>

0800d434 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d434:	b538      	push	{r3, r4, r5, lr}
 800d436:	4605      	mov	r5, r0
 800d438:	460c      	mov	r4, r1
 800d43a:	4b06      	ldr	r3, [pc, #24]	; (800d454 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800d43c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d440:	6899      	ldr	r1, [r3, #8]
 800d442:	6958      	ldr	r0, [r3, #20]
 800d444:	f7ff fe62 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d448:	4621      	mov	r1, r4
 800d44a:	4628      	mov	r0, r5
 800d44c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d450:	f7ff bf78 	b.w	800d344 <PixelPatterns::Increment(unsigned int)>
 800d454:	20001edc 	ldrdcs	r1, [r0], -ip

0800d458 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d45c:	460d      	mov	r5, r1
 800d45e:	f04f 0900 	mov.w	r9, #0
 800d462:	4a27      	ldr	r2, [pc, #156]	; (800d500 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d464:	b085      	sub	sp, #20
 800d466:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d46a:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800d46e:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800d472:	00b3      	lsls	r3, r6, #2
 800d474:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800d504 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d478:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800d508 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d47c:	9002      	str	r0, [sp, #8]
 800d47e:	9301      	str	r3, [sp, #4]
 800d480:	1bbf      	subs	r7, r7, r6
 800d482:	f8da 1000 	ldr.w	r1, [sl]
 800d486:	fa1f f489 	uxth.w	r4, r9
 800d48a:	42a1      	cmp	r1, r4
 800d48c:	d806      	bhi.n	800d49c <PixelPatterns::ScannerUpdate(unsigned int)+0x44>
 800d48e:	4629      	mov	r1, r5
 800d490:	9802      	ldr	r0, [sp, #8]
 800d492:	b005      	add	sp, #20
 800d494:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d498:	f7ff bf54 	b.w	800d344 <PixelPatterns::Increment(unsigned int)>
 800d49c:	42a6      	cmp	r6, r4
 800d49e:	d10b      	bne.n	800d4b8 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800d4a0:	4659      	mov	r1, fp
 800d4a2:	4630      	mov	r0, r6
 800d4a4:	f7ff fe32 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4a8:	f8d8 1000 	ldr.w	r1, [r8]
 800d4ac:	9b01      	ldr	r3, [sp, #4]
 800d4ae:	f841 b003 	str.w	fp, [r1, r3]
 800d4b2:	f109 0901 	add.w	r9, r9, #1
 800d4b6:	e7e4      	b.n	800d482 <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800d4b8:	42a7      	cmp	r7, r4
 800d4ba:	d108      	bne.n	800d4ce <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800d4bc:	4659      	mov	r1, fp
 800d4be:	4638      	mov	r0, r7
 800d4c0:	f7ff fe24 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4c4:	f8d8 1000 	ldr.w	r1, [r8]
 800d4c8:	f841 b024 	str.w	fp, [r1, r4, lsl #2]
 800d4cc:	e7f1      	b.n	800d4b2 <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800d4ce:	f8d8 1000 	ldr.w	r1, [r8]
 800d4d2:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800d4d6:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800d4da:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800d4de:	0209      	lsls	r1, r1, #8
 800d4e0:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800d4e4:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800d4e8:	4301      	orrs	r1, r0
 800d4ea:	4620      	mov	r0, r4
 800d4ec:	9103      	str	r1, [sp, #12]
 800d4ee:	f7ff fe0d 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4f2:	f8d8 0000 	ldr.w	r0, [r8]
 800d4f6:	9903      	ldr	r1, [sp, #12]
 800d4f8:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800d4fc:	e7d9      	b.n	800d4b2 <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800d4fe:	bf00      	nop
 800d500:	20001edc 	ldrdcs	r1, [r0], -ip
 800d504:	20001f04 	andcs	r1, r0, r4, lsl #30
 800d508:	20001f00 	andcs	r1, r0, r0, lsl #30

0800d50c <PixelPatterns::FadeUpdate(unsigned int)>:
 800d50c:	4a21      	ldr	r2, [pc, #132]	; (800d594 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800d50e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d512:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d516:	4605      	mov	r5, r0
 800d518:	e9d2 0704 	ldrd	r0, r7, [r2, #16]
 800d51c:	460c      	mov	r4, r1
 800d51e:	e9d2 1302 	ldrd	r1, r3, [r2, #8]
 800d522:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d526:	437a      	muls	r2, r7
 800d528:	1bc6      	subs	r6, r0, r7
 800d52a:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 800d52e:	fb06 220c 	mla	r2, r6, ip, r2
 800d532:	fbb2 f2f0 	udiv	r2, r2, r0
 800d536:	0212      	lsls	r2, r2, #8
 800d538:	fa1f fc82 	uxth.w	ip, r2
 800d53c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800d540:	437a      	muls	r2, r7
 800d542:	b2db      	uxtb	r3, r3
 800d544:	437b      	muls	r3, r7
 800d546:	f3c1 4e07 	ubfx	lr, r1, #16, #8
 800d54a:	fb06 220e 	mla	r2, r6, lr, r2
 800d54e:	b2c9      	uxtb	r1, r1
 800d550:	fb06 3301 	mla	r3, r6, r1, r3
 800d554:	fbb2 f2f0 	udiv	r2, r2, r0
 800d558:	fbb3 f3f0 	udiv	r3, r3, r0
 800d55c:	2700      	movs	r7, #0
 800d55e:	0412      	lsls	r2, r2, #16
 800d560:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800d564:	ea4c 0202 	orr.w	r2, ip, r2
 800d568:	b2db      	uxtb	r3, r3
 800d56a:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800d598 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800d56e:	ea42 0603 	orr.w	r6, r2, r3
 800d572:	f8d8 3000 	ldr.w	r3, [r8]
 800d576:	429f      	cmp	r7, r3
 800d578:	d305      	bcc.n	800d586 <PixelPatterns::FadeUpdate(unsigned int)+0x7a>
 800d57a:	4621      	mov	r1, r4
 800d57c:	4628      	mov	r0, r5
 800d57e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d582:	f7ff bedf 	b.w	800d344 <PixelPatterns::Increment(unsigned int)>
 800d586:	4638      	mov	r0, r7
 800d588:	4631      	mov	r1, r6
 800d58a:	f7ff fdbf 	bl	800d10c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d58e:	3701      	adds	r7, #1
 800d590:	e7ef      	b.n	800d572 <PixelPatterns::FadeUpdate(unsigned int)+0x66>
 800d592:	bf00      	nop
 800d594:	20001edc 	ldrdcs	r1, [r0], -ip
 800d598:	20001f04 	andcs	r1, r0, r4, lsl #30

0800d59c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800d59c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d59e:	4b12      	ldr	r3, [pc, #72]	; (800d5e8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800d5a0:	014e      	lsls	r6, r1, #5
 800d5a2:	599c      	ldr	r4, [r3, r6]
 800d5a4:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800d5a8:	686f      	ldr	r7, [r5, #4]
 800d5aa:	1b14      	subs	r4, r2, r4
 800d5ac:	42bc      	cmp	r4, r7
 800d5ae:	d319      	bcc.n	800d5e4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d5b0:	519a      	str	r2, [r3, r6]
 800d5b2:	69eb      	ldr	r3, [r5, #28]
 800d5b4:	3b01      	subs	r3, #1
 800d5b6:	2b04      	cmp	r3, #4
 800d5b8:	d814      	bhi.n	800d5e4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d5ba:	e8df f003 	tbb	[pc, r3]
 800d5be:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800d5c2:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800d5c6:	fedc 2001 	cdp2	0, 13, cr2, cr12, cr1, {0}
 800d5ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d5cc:	f7ff ff02 	bl	800d3d4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800d5d0:	e7fa      	b.n	800d5c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5d2:	f7ff ff2f 	bl	800d434 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800d5d6:	e7f7      	b.n	800d5c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5d8:	f7ff ff3e 	bl	800d458 <PixelPatterns::ScannerUpdate(unsigned int)>
 800d5dc:	e7f4      	b.n	800d5c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5de:	f7ff ff95 	bl	800d50c <PixelPatterns::FadeUpdate(unsigned int)>
 800d5e2:	e7f1      	b.n	800d5c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5e4:	2000      	movs	r0, #0
 800d5e6:	e7f0      	b.n	800d5ca <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800d5e8:	20001edc 	ldrdcs	r1, [r0], -ip

0800d5ec <PixelPatterns::Run()>:
 800d5ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5f0:	4606      	mov	r6, r0
 800d5f2:	f005 ff05 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800d5f6:	4604      	mov	r4, r0
 800d5f8:	b9c0      	cbnz	r0, 800d62c <PixelPatterns::Run()+0x40>
 800d5fa:	4605      	mov	r5, r0
 800d5fc:	4b0c      	ldr	r3, [pc, #48]	; (800d630 <PixelPatterns::Run()+0x44>)
 800d5fe:	4f0d      	ldr	r7, [pc, #52]	; (800d634 <PixelPatterns::Run()+0x48>)
 800d600:	f8d3 8000 	ldr.w	r8, [r3]
 800d604:	683b      	ldr	r3, [r7, #0]
 800d606:	b2e9      	uxtb	r1, r5
 800d608:	428b      	cmp	r3, r1
 800d60a:	f105 0501 	add.w	r5, r5, #1
 800d60e:	d806      	bhi.n	800d61e <PixelPatterns::Run()+0x32>
 800d610:	b164      	cbz	r4, 800d62c <PixelPatterns::Run()+0x40>
 800d612:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d616:	4b08      	ldr	r3, [pc, #32]	; (800d638 <PixelPatterns::Run()+0x4c>)
 800d618:	6818      	ldr	r0, [r3, #0]
 800d61a:	f000 bdb1 	b.w	800e180 <WS28xx::Update()>
 800d61e:	4642      	mov	r2, r8
 800d620:	4630      	mov	r0, r6
 800d622:	f7ff ffbb 	bl	800d59c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800d626:	4304      	orrs	r4, r0
 800d628:	b2e4      	uxtb	r4, r4
 800d62a:	e7eb      	b.n	800d604 <PixelPatterns::Run()+0x18>
 800d62c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d630:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800d634:	20001efc 	strdcs	r1, [r0], -ip
 800d638:	20001f08 	andcs	r1, r0, r8, lsl #30

0800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800d63c:	b570      	push	{r4, r5, r6, lr}
 800d63e:	6984      	ldr	r4, [r0, #24]
 800d640:	f89d e010 	ldrb.w	lr, [sp, #16]
 800d644:	f814 c003 	ldrb.w	ip, [r4, r3]
 800d648:	7d43      	ldrb	r3, [r0, #21]
 800d64a:	5ca2      	ldrb	r2, [r4, r2]
 800d64c:	f814 e00e 	ldrb.w	lr, [r4, lr]
 800d650:	b993      	cbnz	r3, 800d678 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3c>
 800d652:	6803      	ldr	r3, [r0, #0]
 800d654:	f1a3 040b 	sub.w	r4, r3, #11
 800d658:	2c01      	cmp	r4, #1
 800d65a:	d93e      	bls.n	800d6da <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x9e>
 800d65c:	b9db      	cbnz	r3, 800d696 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a>
 800d65e:	6a03      	ldr	r3, [r0, #32]
 800d660:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d664:	545a      	strb	r2, [r3, r1]
 800d666:	6a03      	ldr	r3, [r0, #32]
 800d668:	440b      	add	r3, r1
 800d66a:	f883 c001 	strb.w	ip, [r3, #1]
 800d66e:	6a03      	ldr	r3, [r0, #32]
 800d670:	440b      	add	r3, r1
 800d672:	f883 e002 	strb.w	lr, [r3, #2]
 800d676:	bd70      	pop	{r4, r5, r6, pc}
 800d678:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d67c:	00cb      	lsls	r3, r1, #3
 800d67e:	6881      	ldr	r1, [r0, #8]
 800d680:	2905      	cmp	r1, #5
 800d682:	f200 80ff 	bhi.w	800d884 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x248>
 800d686:	e8df f011 	tbh	[pc, r1, lsl #1]
 800d68a:	028400fd 	addeq	r0, r4, #253	; 0xfd
 800d68e:	038b030b 	orreq	r0, fp, #738197504	; 0x2c000000
 800d692:	01c1003c 	biceq	r0, r1, ip, lsr r0
 800d696:	ea6f 039e 	mvn.w	r3, lr, lsr #2
 800d69a:	ea6f 151c 	mvn.w	r5, ip, lsr #4
 800d69e:	f082 06c0 	eor.w	r6, r2, #192	; 0xc0
 800d6a2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d6a6:	ea43 1396 	orr.w	r3, r3, r6, lsr #6
 800d6aa:	f005 050c 	and.w	r5, r5, #12
 800d6ae:	6a04      	ldr	r4, [r0, #32]
 800d6b0:	432b      	orrs	r3, r5
 800d6b2:	3101      	adds	r1, #1
 800d6b4:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800d6b8:	f804 3021 	strb.w	r3, [r4, r1, lsl #2]
 800d6bc:	6a03      	ldr	r3, [r0, #32]
 800d6be:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6c2:	f883 e001 	strb.w	lr, [r3, #1]
 800d6c6:	6a03      	ldr	r3, [r0, #32]
 800d6c8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6cc:	f883 c002 	strb.w	ip, [r3, #2]
 800d6d0:	6a03      	ldr	r3, [r0, #32]
 800d6d2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6d6:	70da      	strb	r2, [r3, #3]
 800d6d8:	bd70      	pop	{r4, r5, r6, pc}
 800d6da:	6a03      	ldr	r3, [r0, #32]
 800d6dc:	7c84      	ldrb	r4, [r0, #18]
 800d6de:	3101      	adds	r1, #1
 800d6e0:	f803 4021 	strb.w	r4, [r3, r1, lsl #2]
 800d6e4:	6a03      	ldr	r3, [r0, #32]
 800d6e6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6ea:	705a      	strb	r2, [r3, #1]
 800d6ec:	6a03      	ldr	r3, [r0, #32]
 800d6ee:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6f2:	f883 c002 	strb.w	ip, [r3, #2]
 800d6f6:	6a03      	ldr	r3, [r0, #32]
 800d6f8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6fc:	f883 e003 	strb.w	lr, [r3, #3]
 800d700:	bd70      	pop	{r4, r5, r6, pc}
 800d702:	7c01      	ldrb	r1, [r0, #16]
 800d704:	7c44      	ldrb	r4, [r0, #17]
 800d706:	6a05      	ldr	r5, [r0, #32]
 800d708:	1c5e      	adds	r6, r3, #1
 800d70a:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d70e:	bf0c      	ite	eq
 800d710:	55a9      	strbeq	r1, [r5, r6]
 800d712:	55ac      	strbne	r4, [r5, r6]
 800d714:	6a05      	ldr	r5, [r0, #32]
 800d716:	1c9e      	adds	r6, r3, #2
 800d718:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d71c:	bf0c      	ite	eq
 800d71e:	55a9      	strbeq	r1, [r5, r6]
 800d720:	55ac      	strbne	r4, [r5, r6]
 800d722:	6a05      	ldr	r5, [r0, #32]
 800d724:	1cde      	adds	r6, r3, #3
 800d726:	f01e 0f20 	tst.w	lr, #32
 800d72a:	bf0c      	ite	eq
 800d72c:	55a9      	strbeq	r1, [r5, r6]
 800d72e:	55ac      	strbne	r4, [r5, r6]
 800d730:	6a05      	ldr	r5, [r0, #32]
 800d732:	1d1e      	adds	r6, r3, #4
 800d734:	f01e 0f10 	tst.w	lr, #16
 800d738:	bf0c      	ite	eq
 800d73a:	55a9      	strbeq	r1, [r5, r6]
 800d73c:	55ac      	strbne	r4, [r5, r6]
 800d73e:	6a05      	ldr	r5, [r0, #32]
 800d740:	1d5e      	adds	r6, r3, #5
 800d742:	f01e 0f08 	tst.w	lr, #8
 800d746:	bf0c      	ite	eq
 800d748:	55a9      	strbeq	r1, [r5, r6]
 800d74a:	55ac      	strbne	r4, [r5, r6]
 800d74c:	6a05      	ldr	r5, [r0, #32]
 800d74e:	1d9e      	adds	r6, r3, #6
 800d750:	f01e 0f04 	tst.w	lr, #4
 800d754:	bf0c      	ite	eq
 800d756:	55a9      	strbeq	r1, [r5, r6]
 800d758:	55ac      	strbne	r4, [r5, r6]
 800d75a:	6a05      	ldr	r5, [r0, #32]
 800d75c:	1dde      	adds	r6, r3, #7
 800d75e:	f01e 0f02 	tst.w	lr, #2
 800d762:	bf0c      	ite	eq
 800d764:	55a9      	strbeq	r1, [r5, r6]
 800d766:	55ac      	strbne	r4, [r5, r6]
 800d768:	f01e 0f01 	tst.w	lr, #1
 800d76c:	bf14      	ite	ne
 800d76e:	6a01      	ldrne	r1, [r0, #32]
 800d770:	6a04      	ldreq	r4, [r0, #32]
 800d772:	f103 0508 	add.w	r5, r3, #8
 800d776:	bf14      	ite	ne
 800d778:	554c      	strbne	r4, [r1, r5]
 800d77a:	5561      	strbeq	r1, [r4, r5]
 800d77c:	7c01      	ldrb	r1, [r0, #16]
 800d77e:	7c44      	ldrb	r4, [r0, #17]
 800d780:	6a06      	ldr	r6, [r0, #32]
 800d782:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d786:	f103 0509 	add.w	r5, r3, #9
 800d78a:	bf0c      	ite	eq
 800d78c:	5571      	strbeq	r1, [r6, r5]
 800d78e:	5574      	strbne	r4, [r6, r5]
 800d790:	6a06      	ldr	r6, [r0, #32]
 800d792:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d796:	f103 050a 	add.w	r5, r3, #10
 800d79a:	bf0c      	ite	eq
 800d79c:	5571      	strbeq	r1, [r6, r5]
 800d79e:	5574      	strbne	r4, [r6, r5]
 800d7a0:	6a06      	ldr	r6, [r0, #32]
 800d7a2:	f012 0f20 	tst.w	r2, #32
 800d7a6:	f103 050b 	add.w	r5, r3, #11
 800d7aa:	bf0c      	ite	eq
 800d7ac:	5571      	strbeq	r1, [r6, r5]
 800d7ae:	5574      	strbne	r4, [r6, r5]
 800d7b0:	6a06      	ldr	r6, [r0, #32]
 800d7b2:	f012 0f10 	tst.w	r2, #16
 800d7b6:	f103 050c 	add.w	r5, r3, #12
 800d7ba:	bf0c      	ite	eq
 800d7bc:	5571      	strbeq	r1, [r6, r5]
 800d7be:	5574      	strbne	r4, [r6, r5]
 800d7c0:	6a06      	ldr	r6, [r0, #32]
 800d7c2:	f012 0f08 	tst.w	r2, #8
 800d7c6:	f103 050d 	add.w	r5, r3, #13
 800d7ca:	bf0c      	ite	eq
 800d7cc:	5571      	strbeq	r1, [r6, r5]
 800d7ce:	5574      	strbne	r4, [r6, r5]
 800d7d0:	6a06      	ldr	r6, [r0, #32]
 800d7d2:	f012 0f04 	tst.w	r2, #4
 800d7d6:	f103 050e 	add.w	r5, r3, #14
 800d7da:	bf0c      	ite	eq
 800d7dc:	5571      	strbeq	r1, [r6, r5]
 800d7de:	5574      	strbne	r4, [r6, r5]
 800d7e0:	6a06      	ldr	r6, [r0, #32]
 800d7e2:	f012 0f02 	tst.w	r2, #2
 800d7e6:	f103 050f 	add.w	r5, r3, #15
 800d7ea:	bf0c      	ite	eq
 800d7ec:	5571      	strbeq	r1, [r6, r5]
 800d7ee:	5574      	strbne	r4, [r6, r5]
 800d7f0:	f012 0f01 	tst.w	r2, #1
 800d7f4:	6a02      	ldr	r2, [r0, #32]
 800d7f6:	f103 0510 	add.w	r5, r3, #16
 800d7fa:	bf14      	ite	ne
 800d7fc:	5554      	strbne	r4, [r2, r5]
 800d7fe:	5551      	strbeq	r1, [r2, r5]
 800d800:	6a05      	ldr	r5, [r0, #32]
 800d802:	7c02      	ldrb	r2, [r0, #16]
 800d804:	7c41      	ldrb	r1, [r0, #17]
 800d806:	f103 0411 	add.w	r4, r3, #17
 800d80a:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d80e:	bf0c      	ite	eq
 800d810:	552a      	strbeq	r2, [r5, r4]
 800d812:	5529      	strbne	r1, [r5, r4]
 800d814:	6a05      	ldr	r5, [r0, #32]
 800d816:	f103 0412 	add.w	r4, r3, #18
 800d81a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d81e:	bf0c      	ite	eq
 800d820:	552a      	strbeq	r2, [r5, r4]
 800d822:	5529      	strbne	r1, [r5, r4]
 800d824:	6a05      	ldr	r5, [r0, #32]
 800d826:	f103 0413 	add.w	r4, r3, #19
 800d82a:	f01c 0f20 	tst.w	ip, #32
 800d82e:	bf0c      	ite	eq
 800d830:	552a      	strbeq	r2, [r5, r4]
 800d832:	5529      	strbne	r1, [r5, r4]
 800d834:	6a05      	ldr	r5, [r0, #32]
 800d836:	f103 0414 	add.w	r4, r3, #20
 800d83a:	f01c 0f10 	tst.w	ip, #16
 800d83e:	bf0c      	ite	eq
 800d840:	552a      	strbeq	r2, [r5, r4]
 800d842:	5529      	strbne	r1, [r5, r4]
 800d844:	6a05      	ldr	r5, [r0, #32]
 800d846:	f103 0415 	add.w	r4, r3, #21
 800d84a:	f01c 0f08 	tst.w	ip, #8
 800d84e:	bf0c      	ite	eq
 800d850:	552a      	strbeq	r2, [r5, r4]
 800d852:	5529      	strbne	r1, [r5, r4]
 800d854:	6a05      	ldr	r5, [r0, #32]
 800d856:	f103 0416 	add.w	r4, r3, #22
 800d85a:	f01c 0f04 	tst.w	ip, #4
 800d85e:	bf0c      	ite	eq
 800d860:	552a      	strbeq	r2, [r5, r4]
 800d862:	5529      	strbne	r1, [r5, r4]
 800d864:	6a05      	ldr	r5, [r0, #32]
 800d866:	f103 0417 	add.w	r4, r3, #23
 800d86a:	f01c 0f02 	tst.w	ip, #2
 800d86e:	bf0c      	ite	eq
 800d870:	552a      	strbeq	r2, [r5, r4]
 800d872:	5529      	strbne	r1, [r5, r4]
 800d874:	3318      	adds	r3, #24
 800d876:	f01c 0f01 	tst.w	ip, #1
 800d87a:	f000 830d 	beq.w	800de98 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x85c>
 800d87e:	6a02      	ldr	r2, [r0, #32]
 800d880:	54d1      	strb	r1, [r2, r3]
 800d882:	bd70      	pop	{r4, r5, r6, pc}
 800d884:	7c01      	ldrb	r1, [r0, #16]
 800d886:	7c44      	ldrb	r4, [r0, #17]
 800d888:	6a05      	ldr	r5, [r0, #32]
 800d88a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d88e:	f103 0601 	add.w	r6, r3, #1
 800d892:	bf14      	ite	ne
 800d894:	55ac      	strbne	r4, [r5, r6]
 800d896:	55a9      	strbeq	r1, [r5, r6]
 800d898:	6a05      	ldr	r5, [r0, #32]
 800d89a:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d89e:	f103 0602 	add.w	r6, r3, #2
 800d8a2:	bf14      	ite	ne
 800d8a4:	55ac      	strbne	r4, [r5, r6]
 800d8a6:	55a9      	strbeq	r1, [r5, r6]
 800d8a8:	6a05      	ldr	r5, [r0, #32]
 800d8aa:	f012 0f20 	tst.w	r2, #32
 800d8ae:	f103 0603 	add.w	r6, r3, #3
 800d8b2:	bf14      	ite	ne
 800d8b4:	55ac      	strbne	r4, [r5, r6]
 800d8b6:	55a9      	strbeq	r1, [r5, r6]
 800d8b8:	6a05      	ldr	r5, [r0, #32]
 800d8ba:	f012 0f10 	tst.w	r2, #16
 800d8be:	f103 0604 	add.w	r6, r3, #4
 800d8c2:	bf14      	ite	ne
 800d8c4:	55ac      	strbne	r4, [r5, r6]
 800d8c6:	55a9      	strbeq	r1, [r5, r6]
 800d8c8:	6a05      	ldr	r5, [r0, #32]
 800d8ca:	f012 0f08 	tst.w	r2, #8
 800d8ce:	f103 0605 	add.w	r6, r3, #5
 800d8d2:	bf14      	ite	ne
 800d8d4:	55ac      	strbne	r4, [r5, r6]
 800d8d6:	55a9      	strbeq	r1, [r5, r6]
 800d8d8:	6a05      	ldr	r5, [r0, #32]
 800d8da:	f012 0f04 	tst.w	r2, #4
 800d8de:	f103 0606 	add.w	r6, r3, #6
 800d8e2:	bf14      	ite	ne
 800d8e4:	55ac      	strbne	r4, [r5, r6]
 800d8e6:	55a9      	strbeq	r1, [r5, r6]
 800d8e8:	6a05      	ldr	r5, [r0, #32]
 800d8ea:	f012 0f02 	tst.w	r2, #2
 800d8ee:	f103 0607 	add.w	r6, r3, #7
 800d8f2:	bf14      	ite	ne
 800d8f4:	55ac      	strbne	r4, [r5, r6]
 800d8f6:	55a9      	strbeq	r1, [r5, r6]
 800d8f8:	f012 0f01 	tst.w	r2, #1
 800d8fc:	6a02      	ldr	r2, [r0, #32]
 800d8fe:	f103 0508 	add.w	r5, r3, #8
 800d902:	bf14      	ite	ne
 800d904:	5554      	strbne	r4, [r2, r5]
 800d906:	5551      	strbeq	r1, [r2, r5]
 800d908:	7c41      	ldrb	r1, [r0, #17]
 800d90a:	7c02      	ldrb	r2, [r0, #16]
 800d90c:	6a05      	ldr	r5, [r0, #32]
 800d90e:	f103 0409 	add.w	r4, r3, #9
 800d912:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d916:	bf0c      	ite	eq
 800d918:	552a      	strbeq	r2, [r5, r4]
 800d91a:	5529      	strbne	r1, [r5, r4]
 800d91c:	6a05      	ldr	r5, [r0, #32]
 800d91e:	f103 040a 	add.w	r4, r3, #10
 800d922:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d926:	bf0c      	ite	eq
 800d928:	552a      	strbeq	r2, [r5, r4]
 800d92a:	5529      	strbne	r1, [r5, r4]
 800d92c:	6a05      	ldr	r5, [r0, #32]
 800d92e:	f103 040b 	add.w	r4, r3, #11
 800d932:	f01c 0f20 	tst.w	ip, #32
 800d936:	bf0c      	ite	eq
 800d938:	552a      	strbeq	r2, [r5, r4]
 800d93a:	5529      	strbne	r1, [r5, r4]
 800d93c:	6a05      	ldr	r5, [r0, #32]
 800d93e:	f103 040c 	add.w	r4, r3, #12
 800d942:	f01c 0f10 	tst.w	ip, #16
 800d946:	bf0c      	ite	eq
 800d948:	552a      	strbeq	r2, [r5, r4]
 800d94a:	5529      	strbne	r1, [r5, r4]
 800d94c:	6a05      	ldr	r5, [r0, #32]
 800d94e:	f103 040d 	add.w	r4, r3, #13
 800d952:	f01c 0f08 	tst.w	ip, #8
 800d956:	bf0c      	ite	eq
 800d958:	552a      	strbeq	r2, [r5, r4]
 800d95a:	5529      	strbne	r1, [r5, r4]
 800d95c:	6a05      	ldr	r5, [r0, #32]
 800d95e:	f103 040e 	add.w	r4, r3, #14
 800d962:	f01c 0f04 	tst.w	ip, #4
 800d966:	bf0c      	ite	eq
 800d968:	552a      	strbeq	r2, [r5, r4]
 800d96a:	5529      	strbne	r1, [r5, r4]
 800d96c:	6a05      	ldr	r5, [r0, #32]
 800d96e:	f103 040f 	add.w	r4, r3, #15
 800d972:	f01c 0f02 	tst.w	ip, #2
 800d976:	bf0c      	ite	eq
 800d978:	552a      	strbeq	r2, [r5, r4]
 800d97a:	5529      	strbne	r1, [r5, r4]
 800d97c:	f01c 0f01 	tst.w	ip, #1
 800d980:	bf14      	ite	ne
 800d982:	6a02      	ldrne	r2, [r0, #32]
 800d984:	6a01      	ldreq	r1, [r0, #32]
 800d986:	f103 0410 	add.w	r4, r3, #16
 800d98a:	bf14      	ite	ne
 800d98c:	5511      	strbne	r1, [r2, r4]
 800d98e:	550a      	strbeq	r2, [r1, r4]
 800d990:	6a05      	ldr	r5, [r0, #32]
 800d992:	7c02      	ldrb	r2, [r0, #16]
 800d994:	7c41      	ldrb	r1, [r0, #17]
 800d996:	f103 0411 	add.w	r4, r3, #17
 800d99a:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d99e:	bf0c      	ite	eq
 800d9a0:	552a      	strbeq	r2, [r5, r4]
 800d9a2:	5529      	strbne	r1, [r5, r4]
 800d9a4:	6a05      	ldr	r5, [r0, #32]
 800d9a6:	f103 0412 	add.w	r4, r3, #18
 800d9aa:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d9ae:	bf0c      	ite	eq
 800d9b0:	552a      	strbeq	r2, [r5, r4]
 800d9b2:	5529      	strbne	r1, [r5, r4]
 800d9b4:	6a05      	ldr	r5, [r0, #32]
 800d9b6:	f103 0413 	add.w	r4, r3, #19
 800d9ba:	f01e 0f20 	tst.w	lr, #32
 800d9be:	bf0c      	ite	eq
 800d9c0:	552a      	strbeq	r2, [r5, r4]
 800d9c2:	5529      	strbne	r1, [r5, r4]
 800d9c4:	6a05      	ldr	r5, [r0, #32]
 800d9c6:	f103 0414 	add.w	r4, r3, #20
 800d9ca:	f01e 0f10 	tst.w	lr, #16
 800d9ce:	bf0c      	ite	eq
 800d9d0:	552a      	strbeq	r2, [r5, r4]
 800d9d2:	5529      	strbne	r1, [r5, r4]
 800d9d4:	6a05      	ldr	r5, [r0, #32]
 800d9d6:	f103 0415 	add.w	r4, r3, #21
 800d9da:	f01e 0f08 	tst.w	lr, #8
 800d9de:	bf0c      	ite	eq
 800d9e0:	552a      	strbeq	r2, [r5, r4]
 800d9e2:	5529      	strbne	r1, [r5, r4]
 800d9e4:	6a05      	ldr	r5, [r0, #32]
 800d9e6:	f103 0416 	add.w	r4, r3, #22
 800d9ea:	f01e 0f04 	tst.w	lr, #4
 800d9ee:	bf0c      	ite	eq
 800d9f0:	552a      	strbeq	r2, [r5, r4]
 800d9f2:	5529      	strbne	r1, [r5, r4]
 800d9f4:	6a05      	ldr	r5, [r0, #32]
 800d9f6:	f103 0417 	add.w	r4, r3, #23
 800d9fa:	f01e 0f02 	tst.w	lr, #2
 800d9fe:	bf0c      	ite	eq
 800da00:	552a      	strbeq	r2, [r5, r4]
 800da02:	5529      	strbne	r1, [r5, r4]
 800da04:	3318      	adds	r3, #24
 800da06:	f01e 0f01 	tst.w	lr, #1
 800da0a:	e736      	b.n	800d87a <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x23e>
 800da0c:	7c01      	ldrb	r1, [r0, #16]
 800da0e:	7c44      	ldrb	r4, [r0, #17]
 800da10:	6a05      	ldr	r5, [r0, #32]
 800da12:	1c5e      	adds	r6, r3, #1
 800da14:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800da18:	bf0c      	ite	eq
 800da1a:	55a9      	strbeq	r1, [r5, r6]
 800da1c:	55ac      	strbne	r4, [r5, r6]
 800da1e:	6a05      	ldr	r5, [r0, #32]
 800da20:	1c9e      	adds	r6, r3, #2
 800da22:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800da26:	bf0c      	ite	eq
 800da28:	55a9      	strbeq	r1, [r5, r6]
 800da2a:	55ac      	strbne	r4, [r5, r6]
 800da2c:	6a05      	ldr	r5, [r0, #32]
 800da2e:	1cde      	adds	r6, r3, #3
 800da30:	f01e 0f20 	tst.w	lr, #32
 800da34:	bf0c      	ite	eq
 800da36:	55a9      	strbeq	r1, [r5, r6]
 800da38:	55ac      	strbne	r4, [r5, r6]
 800da3a:	6a05      	ldr	r5, [r0, #32]
 800da3c:	1d1e      	adds	r6, r3, #4
 800da3e:	f01e 0f10 	tst.w	lr, #16
 800da42:	bf0c      	ite	eq
 800da44:	55a9      	strbeq	r1, [r5, r6]
 800da46:	55ac      	strbne	r4, [r5, r6]
 800da48:	6a05      	ldr	r5, [r0, #32]
 800da4a:	1d5e      	adds	r6, r3, #5
 800da4c:	f01e 0f08 	tst.w	lr, #8
 800da50:	bf0c      	ite	eq
 800da52:	55a9      	strbeq	r1, [r5, r6]
 800da54:	55ac      	strbne	r4, [r5, r6]
 800da56:	6a05      	ldr	r5, [r0, #32]
 800da58:	1d9e      	adds	r6, r3, #6
 800da5a:	f01e 0f04 	tst.w	lr, #4
 800da5e:	bf0c      	ite	eq
 800da60:	55a9      	strbeq	r1, [r5, r6]
 800da62:	55ac      	strbne	r4, [r5, r6]
 800da64:	6a05      	ldr	r5, [r0, #32]
 800da66:	1dde      	adds	r6, r3, #7
 800da68:	f01e 0f02 	tst.w	lr, #2
 800da6c:	bf0c      	ite	eq
 800da6e:	55a9      	strbeq	r1, [r5, r6]
 800da70:	55ac      	strbne	r4, [r5, r6]
 800da72:	f01e 0f01 	tst.w	lr, #1
 800da76:	bf14      	ite	ne
 800da78:	6a01      	ldrne	r1, [r0, #32]
 800da7a:	6a04      	ldreq	r4, [r0, #32]
 800da7c:	f103 0508 	add.w	r5, r3, #8
 800da80:	bf14      	ite	ne
 800da82:	554c      	strbne	r4, [r1, r5]
 800da84:	5561      	strbeq	r1, [r4, r5]
 800da86:	7c01      	ldrb	r1, [r0, #16]
 800da88:	7c44      	ldrb	r4, [r0, #17]
 800da8a:	6a06      	ldr	r6, [r0, #32]
 800da8c:	f103 0509 	add.w	r5, r3, #9
 800da90:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800da94:	bf0c      	ite	eq
 800da96:	5571      	strbeq	r1, [r6, r5]
 800da98:	5574      	strbne	r4, [r6, r5]
 800da9a:	6a06      	ldr	r6, [r0, #32]
 800da9c:	f103 050a 	add.w	r5, r3, #10
 800daa0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800daa4:	bf0c      	ite	eq
 800daa6:	5571      	strbeq	r1, [r6, r5]
 800daa8:	5574      	strbne	r4, [r6, r5]
 800daaa:	6a06      	ldr	r6, [r0, #32]
 800daac:	f103 050b 	add.w	r5, r3, #11
 800dab0:	f01c 0f20 	tst.w	ip, #32
 800dab4:	bf0c      	ite	eq
 800dab6:	5571      	strbeq	r1, [r6, r5]
 800dab8:	5574      	strbne	r4, [r6, r5]
 800daba:	6a06      	ldr	r6, [r0, #32]
 800dabc:	f103 050c 	add.w	r5, r3, #12
 800dac0:	f01c 0f10 	tst.w	ip, #16
 800dac4:	bf0c      	ite	eq
 800dac6:	5571      	strbeq	r1, [r6, r5]
 800dac8:	5574      	strbne	r4, [r6, r5]
 800daca:	6a06      	ldr	r6, [r0, #32]
 800dacc:	f103 050d 	add.w	r5, r3, #13
 800dad0:	f01c 0f08 	tst.w	ip, #8
 800dad4:	bf0c      	ite	eq
 800dad6:	5571      	strbeq	r1, [r6, r5]
 800dad8:	5574      	strbne	r4, [r6, r5]
 800dada:	6a06      	ldr	r6, [r0, #32]
 800dadc:	f103 050e 	add.w	r5, r3, #14
 800dae0:	f01c 0f04 	tst.w	ip, #4
 800dae4:	bf0c      	ite	eq
 800dae6:	5571      	strbeq	r1, [r6, r5]
 800dae8:	5574      	strbne	r4, [r6, r5]
 800daea:	6a06      	ldr	r6, [r0, #32]
 800daec:	f103 050f 	add.w	r5, r3, #15
 800daf0:	f01c 0f02 	tst.w	ip, #2
 800daf4:	bf0c      	ite	eq
 800daf6:	5571      	strbeq	r1, [r6, r5]
 800daf8:	5574      	strbne	r4, [r6, r5]
 800dafa:	f103 0510 	add.w	r5, r3, #16
 800dafe:	f01c 0f01 	tst.w	ip, #1
 800db02:	bf15      	itete	ne
 800db04:	6a01      	ldrne	r1, [r0, #32]
 800db06:	6a04      	ldreq	r4, [r0, #32]
 800db08:	554c      	strbne	r4, [r1, r5]
 800db0a:	5561      	strbeq	r1, [r4, r5]
 800db0c:	6a06      	ldr	r6, [r0, #32]
 800db0e:	7c01      	ldrb	r1, [r0, #16]
 800db10:	7c44      	ldrb	r4, [r0, #17]
 800db12:	f103 0511 	add.w	r5, r3, #17
 800db16:	f012 0f80 	tst.w	r2, #128	; 0x80
 800db1a:	bf0c      	ite	eq
 800db1c:	5571      	strbeq	r1, [r6, r5]
 800db1e:	5574      	strbne	r4, [r6, r5]
 800db20:	6a06      	ldr	r6, [r0, #32]
 800db22:	f103 0512 	add.w	r5, r3, #18
 800db26:	f012 0f40 	tst.w	r2, #64	; 0x40
 800db2a:	bf0c      	ite	eq
 800db2c:	5571      	strbeq	r1, [r6, r5]
 800db2e:	5574      	strbne	r4, [r6, r5]
 800db30:	6a06      	ldr	r6, [r0, #32]
 800db32:	f103 0513 	add.w	r5, r3, #19
 800db36:	f012 0f20 	tst.w	r2, #32
 800db3a:	bf0c      	ite	eq
 800db3c:	5571      	strbeq	r1, [r6, r5]
 800db3e:	5574      	strbne	r4, [r6, r5]
 800db40:	6a06      	ldr	r6, [r0, #32]
 800db42:	f103 0514 	add.w	r5, r3, #20
 800db46:	f012 0f10 	tst.w	r2, #16
 800db4a:	bf0c      	ite	eq
 800db4c:	5571      	strbeq	r1, [r6, r5]
 800db4e:	5574      	strbne	r4, [r6, r5]
 800db50:	6a06      	ldr	r6, [r0, #32]
 800db52:	f103 0515 	add.w	r5, r3, #21
 800db56:	f012 0f08 	tst.w	r2, #8
 800db5a:	bf0c      	ite	eq
 800db5c:	5571      	strbeq	r1, [r6, r5]
 800db5e:	5574      	strbne	r4, [r6, r5]
 800db60:	6a06      	ldr	r6, [r0, #32]
 800db62:	f103 0516 	add.w	r5, r3, #22
 800db66:	f012 0f04 	tst.w	r2, #4
 800db6a:	bf0c      	ite	eq
 800db6c:	5571      	strbeq	r1, [r6, r5]
 800db6e:	5574      	strbne	r4, [r6, r5]
 800db70:	6a06      	ldr	r6, [r0, #32]
 800db72:	f012 0f02 	tst.w	r2, #2
 800db76:	f103 0517 	add.w	r5, r3, #23
 800db7a:	bf0c      	ite	eq
 800db7c:	5571      	strbeq	r1, [r6, r5]
 800db7e:	5574      	strbne	r4, [r6, r5]
 800db80:	f012 0f01 	tst.w	r2, #1
 800db84:	f103 0318 	add.w	r3, r3, #24
 800db88:	6a02      	ldr	r2, [r0, #32]
 800db8a:	f43f ae79 	beq.w	800d880 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x244>
 800db8e:	54d4      	strb	r4, [r2, r3]
 800db90:	bd70      	pop	{r4, r5, r6, pc}
 800db92:	7c01      	ldrb	r1, [r0, #16]
 800db94:	7c44      	ldrb	r4, [r0, #17]
 800db96:	6a05      	ldr	r5, [r0, #32]
 800db98:	f012 0f80 	tst.w	r2, #128	; 0x80
 800db9c:	f103 0601 	add.w	r6, r3, #1
 800dba0:	bf14      	ite	ne
 800dba2:	55ac      	strbne	r4, [r5, r6]
 800dba4:	55a9      	strbeq	r1, [r5, r6]
 800dba6:	6a05      	ldr	r5, [r0, #32]
 800dba8:	f012 0f40 	tst.w	r2, #64	; 0x40
 800dbac:	f103 0602 	add.w	r6, r3, #2
 800dbb0:	bf14      	ite	ne
 800dbb2:	55ac      	strbne	r4, [r5, r6]
 800dbb4:	55a9      	strbeq	r1, [r5, r6]
 800dbb6:	6a05      	ldr	r5, [r0, #32]
 800dbb8:	f012 0f20 	tst.w	r2, #32
 800dbbc:	f103 0603 	add.w	r6, r3, #3
 800dbc0:	bf14      	ite	ne
 800dbc2:	55ac      	strbne	r4, [r5, r6]
 800dbc4:	55a9      	strbeq	r1, [r5, r6]
 800dbc6:	6a05      	ldr	r5, [r0, #32]
 800dbc8:	f012 0f10 	tst.w	r2, #16
 800dbcc:	f103 0604 	add.w	r6, r3, #4
 800dbd0:	bf14      	ite	ne
 800dbd2:	55ac      	strbne	r4, [r5, r6]
 800dbd4:	55a9      	strbeq	r1, [r5, r6]
 800dbd6:	6a05      	ldr	r5, [r0, #32]
 800dbd8:	f012 0f08 	tst.w	r2, #8
 800dbdc:	f103 0605 	add.w	r6, r3, #5
 800dbe0:	bf14      	ite	ne
 800dbe2:	55ac      	strbne	r4, [r5, r6]
 800dbe4:	55a9      	strbeq	r1, [r5, r6]
 800dbe6:	6a05      	ldr	r5, [r0, #32]
 800dbe8:	f012 0f04 	tst.w	r2, #4
 800dbec:	f103 0606 	add.w	r6, r3, #6
 800dbf0:	bf14      	ite	ne
 800dbf2:	55ac      	strbne	r4, [r5, r6]
 800dbf4:	55a9      	strbeq	r1, [r5, r6]
 800dbf6:	6a05      	ldr	r5, [r0, #32]
 800dbf8:	f012 0f02 	tst.w	r2, #2
 800dbfc:	f103 0607 	add.w	r6, r3, #7
 800dc00:	bf14      	ite	ne
 800dc02:	55ac      	strbne	r4, [r5, r6]
 800dc04:	55a9      	strbeq	r1, [r5, r6]
 800dc06:	f012 0f01 	tst.w	r2, #1
 800dc0a:	6a02      	ldr	r2, [r0, #32]
 800dc0c:	f103 0508 	add.w	r5, r3, #8
 800dc10:	bf14      	ite	ne
 800dc12:	5554      	strbne	r4, [r2, r5]
 800dc14:	5551      	strbeq	r1, [r2, r5]
 800dc16:	7c41      	ldrb	r1, [r0, #17]
 800dc18:	7c02      	ldrb	r2, [r0, #16]
 800dc1a:	6a05      	ldr	r5, [r0, #32]
 800dc1c:	f103 0409 	add.w	r4, r3, #9
 800dc20:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800dc24:	bf0c      	ite	eq
 800dc26:	552a      	strbeq	r2, [r5, r4]
 800dc28:	5529      	strbne	r1, [r5, r4]
 800dc2a:	6a05      	ldr	r5, [r0, #32]
 800dc2c:	f103 040a 	add.w	r4, r3, #10
 800dc30:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800dc34:	bf0c      	ite	eq
 800dc36:	552a      	strbeq	r2, [r5, r4]
 800dc38:	5529      	strbne	r1, [r5, r4]
 800dc3a:	6a05      	ldr	r5, [r0, #32]
 800dc3c:	f103 040b 	add.w	r4, r3, #11
 800dc40:	f01e 0f20 	tst.w	lr, #32
 800dc44:	bf0c      	ite	eq
 800dc46:	552a      	strbeq	r2, [r5, r4]
 800dc48:	5529      	strbne	r1, [r5, r4]
 800dc4a:	6a05      	ldr	r5, [r0, #32]
 800dc4c:	f103 040c 	add.w	r4, r3, #12
 800dc50:	f01e 0f10 	tst.w	lr, #16
 800dc54:	bf0c      	ite	eq
 800dc56:	552a      	strbeq	r2, [r5, r4]
 800dc58:	5529      	strbne	r1, [r5, r4]
 800dc5a:	6a05      	ldr	r5, [r0, #32]
 800dc5c:	f103 040d 	add.w	r4, r3, #13
 800dc60:	f01e 0f08 	tst.w	lr, #8
 800dc64:	bf0c      	ite	eq
 800dc66:	552a      	strbeq	r2, [r5, r4]
 800dc68:	5529      	strbne	r1, [r5, r4]
 800dc6a:	6a05      	ldr	r5, [r0, #32]
 800dc6c:	f103 040e 	add.w	r4, r3, #14
 800dc70:	f01e 0f04 	tst.w	lr, #4
 800dc74:	bf0c      	ite	eq
 800dc76:	552a      	strbeq	r2, [r5, r4]
 800dc78:	5529      	strbne	r1, [r5, r4]
 800dc7a:	6a05      	ldr	r5, [r0, #32]
 800dc7c:	f103 040f 	add.w	r4, r3, #15
 800dc80:	f01e 0f02 	tst.w	lr, #2
 800dc84:	bf0c      	ite	eq
 800dc86:	552a      	strbeq	r2, [r5, r4]
 800dc88:	5529      	strbne	r1, [r5, r4]
 800dc8a:	f01e 0f01 	tst.w	lr, #1
 800dc8e:	bf14      	ite	ne
 800dc90:	6a02      	ldrne	r2, [r0, #32]
 800dc92:	6a01      	ldreq	r1, [r0, #32]
 800dc94:	f103 0410 	add.w	r4, r3, #16
 800dc98:	bf14      	ite	ne
 800dc9a:	5511      	strbne	r1, [r2, r4]
 800dc9c:	550a      	strbeq	r2, [r1, r4]
 800dc9e:	e5af      	b.n	800d800 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1c4>
 800dca0:	7c01      	ldrb	r1, [r0, #16]
 800dca2:	7c44      	ldrb	r4, [r0, #17]
 800dca4:	6a05      	ldr	r5, [r0, #32]
 800dca6:	1c5e      	adds	r6, r3, #1
 800dca8:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800dcac:	bf0c      	ite	eq
 800dcae:	55a9      	strbeq	r1, [r5, r6]
 800dcb0:	55ac      	strbne	r4, [r5, r6]
 800dcb2:	6a05      	ldr	r5, [r0, #32]
 800dcb4:	1c9e      	adds	r6, r3, #2
 800dcb6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800dcba:	bf0c      	ite	eq
 800dcbc:	55a9      	strbeq	r1, [r5, r6]
 800dcbe:	55ac      	strbne	r4, [r5, r6]
 800dcc0:	6a05      	ldr	r5, [r0, #32]
 800dcc2:	1cde      	adds	r6, r3, #3
 800dcc4:	f01c 0f20 	tst.w	ip, #32
 800dcc8:	bf0c      	ite	eq
 800dcca:	55a9      	strbeq	r1, [r5, r6]
 800dccc:	55ac      	strbne	r4, [r5, r6]
 800dcce:	6a05      	ldr	r5, [r0, #32]
 800dcd0:	1d1e      	adds	r6, r3, #4
 800dcd2:	f01c 0f10 	tst.w	ip, #16
 800dcd6:	bf0c      	ite	eq
 800dcd8:	55a9      	strbeq	r1, [r5, r6]
 800dcda:	55ac      	strbne	r4, [r5, r6]
 800dcdc:	6a05      	ldr	r5, [r0, #32]
 800dcde:	1d5e      	adds	r6, r3, #5
 800dce0:	f01c 0f08 	tst.w	ip, #8
 800dce4:	bf0c      	ite	eq
 800dce6:	55a9      	strbeq	r1, [r5, r6]
 800dce8:	55ac      	strbne	r4, [r5, r6]
 800dcea:	6a05      	ldr	r5, [r0, #32]
 800dcec:	1d9e      	adds	r6, r3, #6
 800dcee:	f01c 0f04 	tst.w	ip, #4
 800dcf2:	bf0c      	ite	eq
 800dcf4:	55a9      	strbeq	r1, [r5, r6]
 800dcf6:	55ac      	strbne	r4, [r5, r6]
 800dcf8:	6a05      	ldr	r5, [r0, #32]
 800dcfa:	1dde      	adds	r6, r3, #7
 800dcfc:	f01c 0f02 	tst.w	ip, #2
 800dd00:	bf0c      	ite	eq
 800dd02:	55a9      	strbeq	r1, [r5, r6]
 800dd04:	55ac      	strbne	r4, [r5, r6]
 800dd06:	f01c 0f01 	tst.w	ip, #1
 800dd0a:	bf14      	ite	ne
 800dd0c:	6a01      	ldrne	r1, [r0, #32]
 800dd0e:	6a04      	ldreq	r4, [r0, #32]
 800dd10:	f103 0508 	add.w	r5, r3, #8
 800dd14:	bf14      	ite	ne
 800dd16:	554c      	strbne	r4, [r1, r5]
 800dd18:	5561      	strbeq	r1, [r4, r5]
 800dd1a:	7c01      	ldrb	r1, [r0, #16]
 800dd1c:	7c44      	ldrb	r4, [r0, #17]
 800dd1e:	6a06      	ldr	r6, [r0, #32]
 800dd20:	f012 0f80 	tst.w	r2, #128	; 0x80
 800dd24:	f103 0509 	add.w	r5, r3, #9
 800dd28:	bf0c      	ite	eq
 800dd2a:	5571      	strbeq	r1, [r6, r5]
 800dd2c:	5574      	strbne	r4, [r6, r5]
 800dd2e:	6a06      	ldr	r6, [r0, #32]
 800dd30:	f012 0f40 	tst.w	r2, #64	; 0x40
 800dd34:	f103 050a 	add.w	r5, r3, #10
 800dd38:	bf0c      	ite	eq
 800dd3a:	5571      	strbeq	r1, [r6, r5]
 800dd3c:	5574      	strbne	r4, [r6, r5]
 800dd3e:	6a06      	ldr	r6, [r0, #32]
 800dd40:	f012 0f20 	tst.w	r2, #32
 800dd44:	f103 050b 	add.w	r5, r3, #11
 800dd48:	bf0c      	ite	eq
 800dd4a:	5571      	strbeq	r1, [r6, r5]
 800dd4c:	5574      	strbne	r4, [r6, r5]
 800dd4e:	6a06      	ldr	r6, [r0, #32]
 800dd50:	f012 0f10 	tst.w	r2, #16
 800dd54:	f103 050c 	add.w	r5, r3, #12
 800dd58:	bf0c      	ite	eq
 800dd5a:	5571      	strbeq	r1, [r6, r5]
 800dd5c:	5574      	strbne	r4, [r6, r5]
 800dd5e:	6a06      	ldr	r6, [r0, #32]
 800dd60:	f012 0f08 	tst.w	r2, #8
 800dd64:	f103 050d 	add.w	r5, r3, #13
 800dd68:	bf0c      	ite	eq
 800dd6a:	5571      	strbeq	r1, [r6, r5]
 800dd6c:	5574      	strbne	r4, [r6, r5]
 800dd6e:	6a06      	ldr	r6, [r0, #32]
 800dd70:	f012 0f04 	tst.w	r2, #4
 800dd74:	f103 050e 	add.w	r5, r3, #14
 800dd78:	bf0c      	ite	eq
 800dd7a:	5571      	strbeq	r1, [r6, r5]
 800dd7c:	5574      	strbne	r4, [r6, r5]
 800dd7e:	6a06      	ldr	r6, [r0, #32]
 800dd80:	f012 0f02 	tst.w	r2, #2
 800dd84:	f103 050f 	add.w	r5, r3, #15
 800dd88:	bf0c      	ite	eq
 800dd8a:	5571      	strbeq	r1, [r6, r5]
 800dd8c:	5574      	strbne	r4, [r6, r5]
 800dd8e:	f012 0f01 	tst.w	r2, #1
 800dd92:	6a02      	ldr	r2, [r0, #32]
 800dd94:	f103 0510 	add.w	r5, r3, #16
 800dd98:	bf14      	ite	ne
 800dd9a:	5554      	strbne	r4, [r2, r5]
 800dd9c:	5551      	strbeq	r1, [r2, r5]
 800dd9e:	e5f7      	b.n	800d990 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x354>
 800dda0:	7c01      	ldrb	r1, [r0, #16]
 800dda2:	7c44      	ldrb	r4, [r0, #17]
 800dda4:	6a05      	ldr	r5, [r0, #32]
 800dda6:	1c5e      	adds	r6, r3, #1
 800dda8:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ddac:	bf0c      	ite	eq
 800ddae:	55a9      	strbeq	r1, [r5, r6]
 800ddb0:	55ac      	strbne	r4, [r5, r6]
 800ddb2:	6a05      	ldr	r5, [r0, #32]
 800ddb4:	1c9e      	adds	r6, r3, #2
 800ddb6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ddba:	bf0c      	ite	eq
 800ddbc:	55a9      	strbeq	r1, [r5, r6]
 800ddbe:	55ac      	strbne	r4, [r5, r6]
 800ddc0:	6a05      	ldr	r5, [r0, #32]
 800ddc2:	1cde      	adds	r6, r3, #3
 800ddc4:	f01c 0f20 	tst.w	ip, #32
 800ddc8:	bf0c      	ite	eq
 800ddca:	55a9      	strbeq	r1, [r5, r6]
 800ddcc:	55ac      	strbne	r4, [r5, r6]
 800ddce:	6a05      	ldr	r5, [r0, #32]
 800ddd0:	1d1e      	adds	r6, r3, #4
 800ddd2:	f01c 0f10 	tst.w	ip, #16
 800ddd6:	bf0c      	ite	eq
 800ddd8:	55a9      	strbeq	r1, [r5, r6]
 800ddda:	55ac      	strbne	r4, [r5, r6]
 800dddc:	6a05      	ldr	r5, [r0, #32]
 800ddde:	1d5e      	adds	r6, r3, #5
 800dde0:	f01c 0f08 	tst.w	ip, #8
 800dde4:	bf0c      	ite	eq
 800dde6:	55a9      	strbeq	r1, [r5, r6]
 800dde8:	55ac      	strbne	r4, [r5, r6]
 800ddea:	6a05      	ldr	r5, [r0, #32]
 800ddec:	1d9e      	adds	r6, r3, #6
 800ddee:	f01c 0f04 	tst.w	ip, #4
 800ddf2:	bf0c      	ite	eq
 800ddf4:	55a9      	strbeq	r1, [r5, r6]
 800ddf6:	55ac      	strbne	r4, [r5, r6]
 800ddf8:	6a05      	ldr	r5, [r0, #32]
 800ddfa:	1dde      	adds	r6, r3, #7
 800ddfc:	f01c 0f02 	tst.w	ip, #2
 800de00:	bf0c      	ite	eq
 800de02:	55a9      	strbeq	r1, [r5, r6]
 800de04:	55ac      	strbne	r4, [r5, r6]
 800de06:	f01c 0f01 	tst.w	ip, #1
 800de0a:	bf14      	ite	ne
 800de0c:	6a01      	ldrne	r1, [r0, #32]
 800de0e:	6a04      	ldreq	r4, [r0, #32]
 800de10:	f103 0508 	add.w	r5, r3, #8
 800de14:	bf14      	ite	ne
 800de16:	554c      	strbne	r4, [r1, r5]
 800de18:	5561      	strbeq	r1, [r4, r5]
 800de1a:	7c01      	ldrb	r1, [r0, #16]
 800de1c:	7c44      	ldrb	r4, [r0, #17]
 800de1e:	6a06      	ldr	r6, [r0, #32]
 800de20:	f103 0509 	add.w	r5, r3, #9
 800de24:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800de28:	bf0c      	ite	eq
 800de2a:	5571      	strbeq	r1, [r6, r5]
 800de2c:	5574      	strbne	r4, [r6, r5]
 800de2e:	6a06      	ldr	r6, [r0, #32]
 800de30:	f103 050a 	add.w	r5, r3, #10
 800de34:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800de38:	bf0c      	ite	eq
 800de3a:	5571      	strbeq	r1, [r6, r5]
 800de3c:	5574      	strbne	r4, [r6, r5]
 800de3e:	6a06      	ldr	r6, [r0, #32]
 800de40:	f103 050b 	add.w	r5, r3, #11
 800de44:	f01e 0f20 	tst.w	lr, #32
 800de48:	bf0c      	ite	eq
 800de4a:	5571      	strbeq	r1, [r6, r5]
 800de4c:	5574      	strbne	r4, [r6, r5]
 800de4e:	6a06      	ldr	r6, [r0, #32]
 800de50:	f103 050c 	add.w	r5, r3, #12
 800de54:	f01e 0f10 	tst.w	lr, #16
 800de58:	bf0c      	ite	eq
 800de5a:	5571      	strbeq	r1, [r6, r5]
 800de5c:	5574      	strbne	r4, [r6, r5]
 800de5e:	6a06      	ldr	r6, [r0, #32]
 800de60:	f103 050d 	add.w	r5, r3, #13
 800de64:	f01e 0f08 	tst.w	lr, #8
 800de68:	bf0c      	ite	eq
 800de6a:	5571      	strbeq	r1, [r6, r5]
 800de6c:	5574      	strbne	r4, [r6, r5]
 800de6e:	6a06      	ldr	r6, [r0, #32]
 800de70:	f103 050e 	add.w	r5, r3, #14
 800de74:	f01e 0f04 	tst.w	lr, #4
 800de78:	bf0c      	ite	eq
 800de7a:	5571      	strbeq	r1, [r6, r5]
 800de7c:	5574      	strbne	r4, [r6, r5]
 800de7e:	6a06      	ldr	r6, [r0, #32]
 800de80:	f103 050f 	add.w	r5, r3, #15
 800de84:	f01e 0f02 	tst.w	lr, #2
 800de88:	bf0c      	ite	eq
 800de8a:	5571      	strbeq	r1, [r6, r5]
 800de8c:	5574      	strbne	r4, [r6, r5]
 800de8e:	f103 0510 	add.w	r5, r3, #16
 800de92:	f01e 0f01 	tst.w	lr, #1
 800de96:	e634      	b.n	800db02 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4c6>
 800de98:	6a01      	ldr	r1, [r0, #32]
 800de9a:	54ca      	strb	r2, [r1, r3]
 800de9c:	bd70      	pop	{r4, r5, r6, pc}
 800de9e:	bf00      	nop

0800dea0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800dea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dea2:	6984      	ldr	r4, [r0, #24]
 800dea4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800dea8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800deac:	f814 c006 	ldrb.w	ip, [r4, r6]
 800deb0:	56e6      	ldrsb	r6, [r4, r3]
 800deb2:	0149      	lsls	r1, r1, #5
 800deb4:	f814 e002 	ldrb.w	lr, [r4, r2]
 800deb8:	5ce3      	ldrb	r3, [r4, r3]
 800deba:	5d62      	ldrb	r2, [r4, r5]
 800debc:	2e00      	cmp	r6, #0
 800debe:	7c05      	ldrb	r5, [r0, #16]
 800dec0:	7c44      	ldrb	r4, [r0, #17]
 800dec2:	6a06      	ldr	r6, [r0, #32]
 800dec4:	f101 0701 	add.w	r7, r1, #1
 800dec8:	bfac      	ite	ge
 800deca:	55f5      	strbge	r5, [r6, r7]
 800decc:	55f4      	strblt	r4, [r6, r7]
 800dece:	6a07      	ldr	r7, [r0, #32]
 800ded0:	1c8e      	adds	r6, r1, #2
 800ded2:	f013 0f40 	tst.w	r3, #64	; 0x40
 800ded6:	bf0c      	ite	eq
 800ded8:	55bd      	strbeq	r5, [r7, r6]
 800deda:	55bc      	strbne	r4, [r7, r6]
 800dedc:	6a07      	ldr	r7, [r0, #32]
 800dede:	1cce      	adds	r6, r1, #3
 800dee0:	f013 0f20 	tst.w	r3, #32
 800dee4:	bf0c      	ite	eq
 800dee6:	55bd      	strbeq	r5, [r7, r6]
 800dee8:	55bc      	strbne	r4, [r7, r6]
 800deea:	6a07      	ldr	r7, [r0, #32]
 800deec:	1d0e      	adds	r6, r1, #4
 800deee:	f013 0f10 	tst.w	r3, #16
 800def2:	bf0c      	ite	eq
 800def4:	55bd      	strbeq	r5, [r7, r6]
 800def6:	55bc      	strbne	r4, [r7, r6]
 800def8:	6a07      	ldr	r7, [r0, #32]
 800defa:	1d4e      	adds	r6, r1, #5
 800defc:	f013 0f08 	tst.w	r3, #8
 800df00:	bf0c      	ite	eq
 800df02:	55bd      	strbeq	r5, [r7, r6]
 800df04:	55bc      	strbne	r4, [r7, r6]
 800df06:	6a07      	ldr	r7, [r0, #32]
 800df08:	1d8e      	adds	r6, r1, #6
 800df0a:	f013 0f04 	tst.w	r3, #4
 800df0e:	bf0c      	ite	eq
 800df10:	55bd      	strbeq	r5, [r7, r6]
 800df12:	55bc      	strbne	r4, [r7, r6]
 800df14:	6a07      	ldr	r7, [r0, #32]
 800df16:	1dce      	adds	r6, r1, #7
 800df18:	f013 0f02 	tst.w	r3, #2
 800df1c:	bf0c      	ite	eq
 800df1e:	55bd      	strbeq	r5, [r7, r6]
 800df20:	55bc      	strbne	r4, [r7, r6]
 800df22:	f013 0f01 	tst.w	r3, #1
 800df26:	6a03      	ldr	r3, [r0, #32]
 800df28:	f101 0608 	add.w	r6, r1, #8
 800df2c:	bf14      	ite	ne
 800df2e:	559c      	strbne	r4, [r3, r6]
 800df30:	559d      	strbeq	r5, [r3, r6]
 800df32:	7c03      	ldrb	r3, [r0, #16]
 800df34:	7c44      	ldrb	r4, [r0, #17]
 800df36:	6a05      	ldr	r5, [r0, #32]
 800df38:	f101 0609 	add.w	r6, r1, #9
 800df3c:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800df40:	bf0c      	ite	eq
 800df42:	55ab      	strbeq	r3, [r5, r6]
 800df44:	55ac      	strbne	r4, [r5, r6]
 800df46:	6a05      	ldr	r5, [r0, #32]
 800df48:	f101 060a 	add.w	r6, r1, #10
 800df4c:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800df50:	bf0c      	ite	eq
 800df52:	55ab      	strbeq	r3, [r5, r6]
 800df54:	55ac      	strbne	r4, [r5, r6]
 800df56:	6a05      	ldr	r5, [r0, #32]
 800df58:	f101 060b 	add.w	r6, r1, #11
 800df5c:	f01e 0f20 	tst.w	lr, #32
 800df60:	bf0c      	ite	eq
 800df62:	55ab      	strbeq	r3, [r5, r6]
 800df64:	55ac      	strbne	r4, [r5, r6]
 800df66:	6a05      	ldr	r5, [r0, #32]
 800df68:	f101 060c 	add.w	r6, r1, #12
 800df6c:	f01e 0f10 	tst.w	lr, #16
 800df70:	bf0c      	ite	eq
 800df72:	55ab      	strbeq	r3, [r5, r6]
 800df74:	55ac      	strbne	r4, [r5, r6]
 800df76:	6a05      	ldr	r5, [r0, #32]
 800df78:	f101 060d 	add.w	r6, r1, #13
 800df7c:	f01e 0f08 	tst.w	lr, #8
 800df80:	bf0c      	ite	eq
 800df82:	55ab      	strbeq	r3, [r5, r6]
 800df84:	55ac      	strbne	r4, [r5, r6]
 800df86:	6a05      	ldr	r5, [r0, #32]
 800df88:	f101 060e 	add.w	r6, r1, #14
 800df8c:	f01e 0f04 	tst.w	lr, #4
 800df90:	bf0c      	ite	eq
 800df92:	55ab      	strbeq	r3, [r5, r6]
 800df94:	55ac      	strbne	r4, [r5, r6]
 800df96:	6a05      	ldr	r5, [r0, #32]
 800df98:	f101 060f 	add.w	r6, r1, #15
 800df9c:	f01e 0f02 	tst.w	lr, #2
 800dfa0:	bf0c      	ite	eq
 800dfa2:	55ab      	strbeq	r3, [r5, r6]
 800dfa4:	55ac      	strbne	r4, [r5, r6]
 800dfa6:	f01e 0f01 	tst.w	lr, #1
 800dfaa:	bf14      	ite	ne
 800dfac:	6a03      	ldrne	r3, [r0, #32]
 800dfae:	6a04      	ldreq	r4, [r0, #32]
 800dfb0:	f101 0510 	add.w	r5, r1, #16
 800dfb4:	bf14      	ite	ne
 800dfb6:	555c      	strbne	r4, [r3, r5]
 800dfb8:	5563      	strbeq	r3, [r4, r5]
 800dfba:	7c03      	ldrb	r3, [r0, #16]
 800dfbc:	7c44      	ldrb	r4, [r0, #17]
 800dfbe:	6a06      	ldr	r6, [r0, #32]
 800dfc0:	f101 0511 	add.w	r5, r1, #17
 800dfc4:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800dfc8:	bf0c      	ite	eq
 800dfca:	5573      	strbeq	r3, [r6, r5]
 800dfcc:	5574      	strbne	r4, [r6, r5]
 800dfce:	6a06      	ldr	r6, [r0, #32]
 800dfd0:	f101 0512 	add.w	r5, r1, #18
 800dfd4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800dfd8:	bf0c      	ite	eq
 800dfda:	5573      	strbeq	r3, [r6, r5]
 800dfdc:	5574      	strbne	r4, [r6, r5]
 800dfde:	6a06      	ldr	r6, [r0, #32]
 800dfe0:	f101 0513 	add.w	r5, r1, #19
 800dfe4:	f01c 0f20 	tst.w	ip, #32
 800dfe8:	bf0c      	ite	eq
 800dfea:	5573      	strbeq	r3, [r6, r5]
 800dfec:	5574      	strbne	r4, [r6, r5]
 800dfee:	6a06      	ldr	r6, [r0, #32]
 800dff0:	f101 0514 	add.w	r5, r1, #20
 800dff4:	f01c 0f10 	tst.w	ip, #16
 800dff8:	bf0c      	ite	eq
 800dffa:	5573      	strbeq	r3, [r6, r5]
 800dffc:	5574      	strbne	r4, [r6, r5]
 800dffe:	6a06      	ldr	r6, [r0, #32]
 800e000:	f101 0515 	add.w	r5, r1, #21
 800e004:	f01c 0f08 	tst.w	ip, #8
 800e008:	bf0c      	ite	eq
 800e00a:	5573      	strbeq	r3, [r6, r5]
 800e00c:	5574      	strbne	r4, [r6, r5]
 800e00e:	6a06      	ldr	r6, [r0, #32]
 800e010:	f101 0516 	add.w	r5, r1, #22
 800e014:	f01c 0f04 	tst.w	ip, #4
 800e018:	bf0c      	ite	eq
 800e01a:	5573      	strbeq	r3, [r6, r5]
 800e01c:	5574      	strbne	r4, [r6, r5]
 800e01e:	6a06      	ldr	r6, [r0, #32]
 800e020:	f101 0517 	add.w	r5, r1, #23
 800e024:	f01c 0f02 	tst.w	ip, #2
 800e028:	bf0c      	ite	eq
 800e02a:	5573      	strbeq	r3, [r6, r5]
 800e02c:	5574      	strbne	r4, [r6, r5]
 800e02e:	f01c 0f01 	tst.w	ip, #1
 800e032:	bf14      	ite	ne
 800e034:	6a03      	ldrne	r3, [r0, #32]
 800e036:	6a04      	ldreq	r4, [r0, #32]
 800e038:	f101 0518 	add.w	r5, r1, #24
 800e03c:	bf14      	ite	ne
 800e03e:	555c      	strbne	r4, [r3, r5]
 800e040:	5563      	strbeq	r3, [r4, r5]
 800e042:	7c03      	ldrb	r3, [r0, #16]
 800e044:	7c44      	ldrb	r4, [r0, #17]
 800e046:	6a06      	ldr	r6, [r0, #32]
 800e048:	0617      	lsls	r7, r2, #24
 800e04a:	f101 0519 	add.w	r5, r1, #25
 800e04e:	bf54      	ite	pl
 800e050:	5573      	strbpl	r3, [r6, r5]
 800e052:	5574      	strbmi	r4, [r6, r5]
 800e054:	6a06      	ldr	r6, [r0, #32]
 800e056:	0657      	lsls	r7, r2, #25
 800e058:	f101 051a 	add.w	r5, r1, #26
 800e05c:	bf54      	ite	pl
 800e05e:	5573      	strbpl	r3, [r6, r5]
 800e060:	5574      	strbmi	r4, [r6, r5]
 800e062:	6a06      	ldr	r6, [r0, #32]
 800e064:	0697      	lsls	r7, r2, #26
 800e066:	f101 051b 	add.w	r5, r1, #27
 800e06a:	bf54      	ite	pl
 800e06c:	5573      	strbpl	r3, [r6, r5]
 800e06e:	5574      	strbmi	r4, [r6, r5]
 800e070:	6a06      	ldr	r6, [r0, #32]
 800e072:	06d7      	lsls	r7, r2, #27
 800e074:	f101 051c 	add.w	r5, r1, #28
 800e078:	bf54      	ite	pl
 800e07a:	5573      	strbpl	r3, [r6, r5]
 800e07c:	5574      	strbmi	r4, [r6, r5]
 800e07e:	6a06      	ldr	r6, [r0, #32]
 800e080:	0717      	lsls	r7, r2, #28
 800e082:	f101 051d 	add.w	r5, r1, #29
 800e086:	bf54      	ite	pl
 800e088:	5573      	strbpl	r3, [r6, r5]
 800e08a:	5574      	strbmi	r4, [r6, r5]
 800e08c:	6a06      	ldr	r6, [r0, #32]
 800e08e:	0757      	lsls	r7, r2, #29
 800e090:	f101 051e 	add.w	r5, r1, #30
 800e094:	bf54      	ite	pl
 800e096:	5573      	strbpl	r3, [r6, r5]
 800e098:	5574      	strbmi	r4, [r6, r5]
 800e09a:	6a06      	ldr	r6, [r0, #32]
 800e09c:	0797      	lsls	r7, r2, #30
 800e09e:	f101 051f 	add.w	r5, r1, #31
 800e0a2:	bf54      	ite	pl
 800e0a4:	5573      	strbpl	r3, [r6, r5]
 800e0a6:	5574      	strbmi	r4, [r6, r5]
 800e0a8:	07d2      	lsls	r2, r2, #31
 800e0aa:	bf4c      	ite	mi
 800e0ac:	6a03      	ldrmi	r3, [r0, #32]
 800e0ae:	6a02      	ldrpl	r2, [r0, #32]
 800e0b0:	f101 0120 	add.w	r1, r1, #32
 800e0b4:	bf4c      	ite	mi
 800e0b6:	545c      	strbmi	r4, [r3, r1]
 800e0b8:	5453      	strbpl	r3, [r2, r1]
 800e0ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e0bc <WS28xx::~WS28xx()>:
 800e0bc:	2200      	movs	r2, #0
 800e0be:	4b01      	ldr	r3, [pc, #4]	; (800e0c4 <WS28xx::~WS28xx()+0x8>)
 800e0c0:	601a      	str	r2, [r3, #0]
 800e0c2:	4770      	bx	lr
 800e0c4:	20001f14 	andcs	r1, r0, r4, lsl pc

0800e0c8 <WS28xx::SetupBuffers()>:
 800e0c8:	b513      	push	{r0, r1, r4, lr}
 800e0ca:	4604      	mov	r4, r0
 800e0cc:	a801      	add	r0, sp, #4
 800e0ce:	f005 f975 	bl	80133bc <gd32_spi_dma_tx_prepare(unsigned int*)>
 800e0d2:	9b01      	ldr	r3, [sp, #4]
 800e0d4:	4a07      	ldr	r2, [pc, #28]	; (800e0f4 <WS28xx::SetupBuffers()+0x2c>)
 800e0d6:	085b      	lsrs	r3, r3, #1
 800e0d8:	f023 0303 	bic.w	r3, r3, #3
 800e0dc:	6220      	str	r0, [r4, #32]
 800e0de:	4418      	add	r0, r3
 800e0e0:	69e3      	ldr	r3, [r4, #28]
 800e0e2:	6260      	str	r0, [r4, #36]	; 0x24
 800e0e4:	6013      	str	r3, [r2, #0]
 800e0e6:	3303      	adds	r3, #3
 800e0e8:	f023 0303 	bic.w	r3, r3, #3
 800e0ec:	61e3      	str	r3, [r4, #28]
 800e0ee:	b002      	add	sp, #8
 800e0f0:	bd10      	pop	{r4, pc}
 800e0f2:	bf00      	nop
 800e0f4:	20001f10 	andcs	r1, r0, r0, lsl pc

0800e0f8 <WS28xx::WS28xx(PixelConfiguration&)>:
 800e0f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e0fa:	23aa      	movs	r3, #170	; 0xaa
 800e0fc:	2203      	movs	r2, #3
 800e0fe:	e9c0 2300 	strd	r2, r3, [r0]
 800e102:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800e106:	460f      	mov	r7, r1
 800e108:	6102      	str	r2, [r0, #16]
 800e10a:	2300      	movs	r3, #0
 800e10c:	2106      	movs	r1, #6
 800e10e:	f44f 7280 	mov.w	r2, #256	; 0x100
 800e112:	4605      	mov	r5, r0
 800e114:	463e      	mov	r6, r7
 800e116:	4604      	mov	r4, r0
 800e118:	8282      	strh	r2, [r0, #20]
 800e11a:	e9c0 1302 	strd	r1, r3, [r0, #8]
 800e11e:	4a16      	ldr	r2, [pc, #88]	; (800e178 <WS28xx::WS28xx(PixelConfiguration&)+0x80>)
 800e120:	e9c0 3308 	strd	r3, r3, [r0, #32]
 800e124:	4b15      	ldr	r3, [pc, #84]	; (800e17c <WS28xx::WS28xx(PixelConfiguration&)+0x84>)
 800e126:	6182      	str	r2, [r0, #24]
 800e128:	6018      	str	r0, [r3, #0]
 800e12a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800e12c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800e12e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800e132:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800e136:	a901      	add	r1, sp, #4
 800e138:	4638      	mov	r0, r7
 800e13a:	f7fe fe05 	bl	800cd48 <PixelConfiguration::Validate(unsigned int&)>
 800e13e:	6862      	ldr	r2, [r4, #4]
 800e140:	9b01      	ldr	r3, [sp, #4]
 800e142:	7d61      	ldrb	r1, [r4, #21]
 800e144:	4353      	muls	r3, r2
 800e146:	61e3      	str	r3, [r4, #28]
 800e148:	b111      	cbz	r1, 800e150 <WS28xx::WS28xx(PixelConfiguration&)+0x58>
 800e14a:	00db      	lsls	r3, r3, #3
 800e14c:	3301      	adds	r3, #1
 800e14e:	61e3      	str	r3, [r4, #28]
 800e150:	6823      	ldr	r3, [r4, #0]
 800e152:	4620      	mov	r0, r4
 800e154:	3b0b      	subs	r3, #11
 800e156:	2b02      	cmp	r3, #2
 800e158:	bf9f      	itttt	ls
 800e15a:	69e3      	ldrls	r3, [r4, #28]
 800e15c:	18d2      	addls	r2, r2, r3
 800e15e:	3208      	addls	r2, #8
 800e160:	61e2      	strls	r2, [r4, #28]
 800e162:	f7ff ffb1 	bl	800e0c8 <WS28xx::SetupBuffers()>
 800e166:	f005 f88b 	bl	8013280 <gd32_spi_dma_begin()>
 800e16a:	68f8      	ldr	r0, [r7, #12]
 800e16c:	f005 f912 	bl	8013394 <gd32_spi_dma_set_speed_hz(unsigned int)>
 800e170:	4620      	mov	r0, r4
 800e172:	b003      	add	sp, #12
 800e174:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e176:	bf00      	nop
 800e178:	080163ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sp, lr}
 800e17c:	20001f14 	andcs	r1, r0, r4, lsl pc

0800e180 <WS28xx::Update()>:
 800e180:	2200      	movs	r2, #0
 800e182:	b430      	push	{r4, r5}
 800e184:	4b0b      	ldr	r3, [pc, #44]	; (800e1b4 <WS28xx::Update()+0x34>)
 800e186:	681b      	ldr	r3, [r3, #0]
 800e188:	e9d0 1407 	ldrd	r1, r4, [r0, #28]
 800e18c:	4299      	cmp	r1, r3
 800e18e:	d807      	bhi.n	800e1a0 <WS28xx::Update()+0x20>
 800e190:	2300      	movs	r3, #0
 800e192:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e194:	084d      	lsrs	r5, r1, #1
 800e196:	42ab      	cmp	r3, r5
 800e198:	d105      	bne.n	800e1a6 <WS28xx::Update()+0x26>
 800e19a:	bc30      	pop	{r4, r5}
 800e19c:	f005 b916 	b.w	80133cc <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800e1a0:	54e2      	strb	r2, [r4, r3]
 800e1a2:	3301      	adds	r3, #1
 800e1a4:	e7f0      	b.n	800e188 <WS28xx::Update()+0x8>
 800e1a6:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800e1aa:	ba52      	rev16	r2, r2
 800e1ac:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800e1b0:	3301      	adds	r3, #1
 800e1b2:	e7f0      	b.n	800e196 <WS28xx::Update()+0x16>
 800e1b4:	20001f10 	andcs	r1, r0, r0, lsl pc

0800e1b8 <WS28xx::Blackout()>:
 800e1b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e1bc:	4604      	mov	r4, r0
 800e1be:	f3bf 8f6f 	isb	sy
 800e1c2:	f005 f91d 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800e1c6:	2800      	cmp	r0, #0
 800e1c8:	d1f9      	bne.n	800e1be <WS28xx::Blackout()+0x6>
 800e1ca:	e9d4 2800 	ldrd	r2, r8, [r4]
 800e1ce:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800e1d2:	f1a2 070b 	sub.w	r7, r2, #11
 800e1d6:	2f02      	cmp	r7, #2
 800e1d8:	6223      	str	r3, [r4, #32]
 800e1da:	7018      	strb	r0, [r3, #0]
 800e1dc:	d829      	bhi.n	800e232 <WS28xx::Blackout()+0x7a>
 800e1de:	4605      	mov	r5, r0
 800e1e0:	4681      	mov	r9, r0
 800e1e2:	7058      	strb	r0, [r3, #1]
 800e1e4:	7098      	strb	r0, [r3, #2]
 800e1e6:	70d8      	strb	r0, [r3, #3]
 800e1e8:	4545      	cmp	r5, r8
 800e1ea:	d118      	bne.n	800e21e <WS28xx::Blackout()+0x66>
 800e1ec:	2f02      	cmp	r7, #2
 800e1ee:	bf14      	ite	ne
 800e1f0:	21ff      	movne	r1, #255	; 0xff
 800e1f2:	2100      	moveq	r1, #0
 800e1f4:	69e2      	ldr	r2, [r4, #28]
 800e1f6:	6a20      	ldr	r0, [r4, #32]
 800e1f8:	3a04      	subs	r2, #4
 800e1fa:	1883      	adds	r3, r0, r2
 800e1fc:	5481      	strb	r1, [r0, r2]
 800e1fe:	7059      	strb	r1, [r3, #1]
 800e200:	7099      	strb	r1, [r3, #2]
 800e202:	70d9      	strb	r1, [r3, #3]
 800e204:	4620      	mov	r0, r4
 800e206:	f7ff ffbb 	bl	800e180 <WS28xx::Update()>
 800e20a:	f3bf 8f6f 	isb	sy
 800e20e:	f005 f8f7 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800e212:	2800      	cmp	r0, #0
 800e214:	d1f9      	bne.n	800e20a <WS28xx::Blackout()+0x52>
 800e216:	6226      	str	r6, [r4, #32]
 800e218:	b003      	add	sp, #12
 800e21a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e21e:	2300      	movs	r3, #0
 800e220:	4629      	mov	r1, r5
 800e222:	461a      	mov	r2, r3
 800e224:	4620      	mov	r0, r4
 800e226:	f8cd 9000 	str.w	r9, [sp]
 800e22a:	f7ff fa07 	bl	800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800e22e:	3501      	adds	r5, #1
 800e230:	e7da      	b.n	800e1e8 <WS28xx::Blackout()+0x30>
 800e232:	6a23      	ldr	r3, [r4, #32]
 800e234:	b102      	cbz	r2, 800e238 <WS28xx::Blackout()+0x80>
 800e236:	7c22      	ldrb	r2, [r4, #16]
 800e238:	69e1      	ldr	r1, [r4, #28]
 800e23a:	4419      	add	r1, r3
 800e23c:	4299      	cmp	r1, r3
 800e23e:	d0e1      	beq.n	800e204 <WS28xx::Blackout()+0x4c>
 800e240:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e244:	e7fa      	b.n	800e23c <WS28xx::Blackout()+0x84>

0800e246 <WS28xx::FullOn()>:
 800e246:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e24a:	4604      	mov	r4, r0
 800e24c:	f3bf 8f6f 	isb	sy
 800e250:	f005 f8d6 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800e254:	2800      	cmp	r0, #0
 800e256:	d1f9      	bne.n	800e24c <WS28xx::FullOn()+0x6>
 800e258:	e9d4 2800 	ldrd	r2, r8, [r4]
 800e25c:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800e260:	f1a2 070b 	sub.w	r7, r2, #11
 800e264:	2f02      	cmp	r7, #2
 800e266:	6223      	str	r3, [r4, #32]
 800e268:	7018      	strb	r0, [r3, #0]
 800e26a:	d82a      	bhi.n	800e2c2 <WS28xx::FullOn()+0x7c>
 800e26c:	4605      	mov	r5, r0
 800e26e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e272:	7058      	strb	r0, [r3, #1]
 800e274:	7098      	strb	r0, [r3, #2]
 800e276:	70d8      	strb	r0, [r3, #3]
 800e278:	4545      	cmp	r5, r8
 800e27a:	d118      	bne.n	800e2ae <WS28xx::FullOn()+0x68>
 800e27c:	2f02      	cmp	r7, #2
 800e27e:	bf14      	ite	ne
 800e280:	21ff      	movne	r1, #255	; 0xff
 800e282:	2100      	moveq	r1, #0
 800e284:	69e2      	ldr	r2, [r4, #28]
 800e286:	6a20      	ldr	r0, [r4, #32]
 800e288:	3a04      	subs	r2, #4
 800e28a:	1883      	adds	r3, r0, r2
 800e28c:	5481      	strb	r1, [r0, r2]
 800e28e:	7059      	strb	r1, [r3, #1]
 800e290:	7099      	strb	r1, [r3, #2]
 800e292:	70d9      	strb	r1, [r3, #3]
 800e294:	4620      	mov	r0, r4
 800e296:	f7ff ff73 	bl	800e180 <WS28xx::Update()>
 800e29a:	f3bf 8f6f 	isb	sy
 800e29e:	f005 f8af 	bl	8013400 <gd32_spi_dma_tx_is_active()>
 800e2a2:	2800      	cmp	r0, #0
 800e2a4:	d1f9      	bne.n	800e29a <WS28xx::FullOn()+0x54>
 800e2a6:	6226      	str	r6, [r4, #32]
 800e2a8:	b003      	add	sp, #12
 800e2aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2ae:	23ff      	movs	r3, #255	; 0xff
 800e2b0:	4629      	mov	r1, r5
 800e2b2:	461a      	mov	r2, r3
 800e2b4:	4620      	mov	r0, r4
 800e2b6:	f8cd 9000 	str.w	r9, [sp]
 800e2ba:	f7ff f9bf 	bl	800d63c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800e2be:	3501      	adds	r5, #1
 800e2c0:	e7da      	b.n	800e278 <WS28xx::FullOn()+0x32>
 800e2c2:	6a23      	ldr	r3, [r4, #32]
 800e2c4:	b13a      	cbz	r2, 800e2d6 <WS28xx::FullOn()+0x90>
 800e2c6:	7c61      	ldrb	r1, [r4, #17]
 800e2c8:	69e2      	ldr	r2, [r4, #28]
 800e2ca:	441a      	add	r2, r3
 800e2cc:	429a      	cmp	r2, r3
 800e2ce:	d0e1      	beq.n	800e294 <WS28xx::FullOn()+0x4e>
 800e2d0:	f803 1f01 	strb.w	r1, [r3, #1]!
 800e2d4:	e7fa      	b.n	800e2cc <WS28xx::FullOn()+0x86>
 800e2d6:	21ff      	movs	r1, #255	; 0xff
 800e2d8:	e7f6      	b.n	800e2c8 <WS28xx::FullOn()+0x82>
	...

0800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e2dc:	2300      	movs	r3, #0
 800e2de:	2020      	movs	r0, #32
 800e2e0:	b510      	push	{r4, lr}
 800e2e2:	4a04      	ldr	r2, [pc, #16]	; (800e2f4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e2e4:	428b      	cmp	r3, r1
 800e2e6:	d100      	bne.n	800e2ea <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800e2e8:	bd10      	pop	{r4, pc}
 800e2ea:	f852 4b04 	ldr.w	r4, [r2], #4
 800e2ee:	3301      	adds	r3, #1
 800e2f0:	4420      	add	r0, r4
 800e2f2:	e7f7      	b.n	800e2e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e2f4:	080164ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp, lr}

0800e2f8 <SpiFlashStore::Init()>:
 800e2f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e2fc:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800e414 <SpiFlashStore::Init()+0x11c>
 800e300:	4607      	mov	r7, r0
 800e302:	b085      	sub	sp, #20
 800e304:	f8d8 0000 	ldr.w	r0, [r8]
 800e308:	f000 fbe4 	bl	800ead4 <FlashRom::GetSectorSize() const>
 800e30c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e310:	4605      	mov	r5, r0
 800e312:	d17d      	bne.n	800e410 <SpiFlashStore::Init()+0x118>
 800e314:	f8d8 0000 	ldr.w	r0, [r8]
 800e318:	f000 fbd4 	bl	800eac4 <FlashRom::GetSize() const>
 800e31c:	4b3e      	ldr	r3, [pc, #248]	; (800e418 <SpiFlashStore::Init()+0x120>)
 800e31e:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e322:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e326:	6019      	str	r1, [r3, #0]
 800e328:	2e00      	cmp	r6, #0
 800e32a:	d171      	bne.n	800e410 <SpiFlashStore::Init()+0x118>
 800e32c:	4c3b      	ldr	r4, [pc, #236]	; (800e41c <SpiFlashStore::Init()+0x124>)
 800e32e:	ab03      	add	r3, sp, #12
 800e330:	9300      	str	r3, [sp, #0]
 800e332:	462a      	mov	r2, r5
 800e334:	4623      	mov	r3, r4
 800e336:	f8d8 0000 	ldr.w	r0, [r8]
 800e33a:	f000 fbce 	bl	800eada <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e33e:	7823      	ldrb	r3, [r4, #0]
 800e340:	2b41      	cmp	r3, #65	; 0x41
 800e342:	bf1c      	itt	ne
 800e344:	2341      	movne	r3, #65	; 0x41
 800e346:	7023      	strbne	r3, [r4, #0]
 800e348:	7863      	ldrb	r3, [r4, #1]
 800e34a:	bf14      	ite	ne
 800e34c:	4635      	movne	r5, r6
 800e34e:	2501      	moveq	r5, #1
 800e350:	2b76      	cmp	r3, #118	; 0x76
 800e352:	bf1c      	itt	ne
 800e354:	2376      	movne	r3, #118	; 0x76
 800e356:	7063      	strbne	r3, [r4, #1]
 800e358:	78a3      	ldrb	r3, [r4, #2]
 800e35a:	bf18      	it	ne
 800e35c:	2500      	movne	r5, #0
 800e35e:	2b56      	cmp	r3, #86	; 0x56
 800e360:	bf1c      	itt	ne
 800e362:	2356      	movne	r3, #86	; 0x56
 800e364:	70a3      	strbne	r3, [r4, #2]
 800e366:	78e3      	ldrb	r3, [r4, #3]
 800e368:	bf18      	it	ne
 800e36a:	2500      	movne	r5, #0
 800e36c:	2b10      	cmp	r3, #16
 800e36e:	d022      	beq.n	800e3b6 <SpiFlashStore::Init()+0xbe>
 800e370:	2310      	movs	r3, #16
 800e372:	70e3      	strb	r3, [r4, #3]
 800e374:	2201      	movs	r2, #1
 800e376:	2500      	movs	r5, #0
 800e378:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e37c:	4b28      	ldr	r3, [pc, #160]	; (800e420 <SpiFlashStore::Init()+0x128>)
 800e37e:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800e424 <SpiFlashStore::Init()+0x12c>
 800e382:	701a      	strb	r2, [r3, #0]
 800e384:	4631      	mov	r1, r6
 800e386:	4638      	mov	r0, r7
 800e388:	f7ff ffa8 	bl	800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e38c:	1823      	adds	r3, r4, r0
 800e38e:	5425      	strb	r5, [r4, r0]
 800e390:	705d      	strb	r5, [r3, #1]
 800e392:	709d      	strb	r5, [r3, #2]
 800e394:	70dd      	strb	r5, [r3, #3]
 800e396:	f858 3b04 	ldr.w	r3, [r8], #4
 800e39a:	1d02      	adds	r2, r0, #4
 800e39c:	4403      	add	r3, r0
 800e39e:	429a      	cmp	r2, r3
 800e3a0:	d332      	bcc.n	800e408 <SpiFlashStore::Init()+0x110>
 800e3a2:	3601      	adds	r6, #1
 800e3a4:	2e1c      	cmp	r6, #28
 800e3a6:	d1ed      	bne.n	800e384 <SpiFlashStore::Init()+0x8c>
 800e3a8:	2501      	movs	r5, #1
 800e3aa:	4b1f      	ldr	r3, [pc, #124]	; (800e428 <SpiFlashStore::Init()+0x130>)
 800e3ac:	601d      	str	r5, [r3, #0]
 800e3ae:	4628      	mov	r0, r5
 800e3b0:	b005      	add	sp, #20
 800e3b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e3b6:	2d00      	cmp	r5, #0
 800e3b8:	d0dc      	beq.n	800e374 <SpiFlashStore::Init()+0x7c>
 800e3ba:	f04f 0900 	mov.w	r9, #0
 800e3be:	46c8      	mov	r8, r9
 800e3c0:	4631      	mov	r1, r6
 800e3c2:	4638      	mov	r0, r7
 800e3c4:	f7ff ff8a 	bl	800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e3c8:	5c23      	ldrb	r3, [r4, r0]
 800e3ca:	2bff      	cmp	r3, #255	; 0xff
 800e3cc:	d112      	bne.n	800e3f4 <SpiFlashStore::Init()+0xfc>
 800e3ce:	1823      	adds	r3, r4, r0
 800e3d0:	785a      	ldrb	r2, [r3, #1]
 800e3d2:	2aff      	cmp	r2, #255	; 0xff
 800e3d4:	d10e      	bne.n	800e3f4 <SpiFlashStore::Init()+0xfc>
 800e3d6:	789a      	ldrb	r2, [r3, #2]
 800e3d8:	2aff      	cmp	r2, #255	; 0xff
 800e3da:	d10b      	bne.n	800e3f4 <SpiFlashStore::Init()+0xfc>
 800e3dc:	78da      	ldrb	r2, [r3, #3]
 800e3de:	2aff      	cmp	r2, #255	; 0xff
 800e3e0:	d108      	bne.n	800e3f4 <SpiFlashStore::Init()+0xfc>
 800e3e2:	46a9      	mov	r9, r5
 800e3e4:	f804 8000 	strb.w	r8, [r4, r0]
 800e3e8:	f883 8001 	strb.w	r8, [r3, #1]
 800e3ec:	f883 8002 	strb.w	r8, [r3, #2]
 800e3f0:	f883 8003 	strb.w	r8, [r3, #3]
 800e3f4:	3601      	adds	r6, #1
 800e3f6:	2e1c      	cmp	r6, #28
 800e3f8:	d1e2      	bne.n	800e3c0 <SpiFlashStore::Init()+0xc8>
 800e3fa:	f1b9 0f00 	cmp.w	r9, #0
 800e3fe:	d0d6      	beq.n	800e3ae <SpiFlashStore::Init()+0xb6>
 800e400:	2201      	movs	r2, #1
 800e402:	4b09      	ldr	r3, [pc, #36]	; (800e428 <SpiFlashStore::Init()+0x130>)
 800e404:	601a      	str	r2, [r3, #0]
 800e406:	e7d2      	b.n	800e3ae <SpiFlashStore::Init()+0xb6>
 800e408:	f804 9002 	strb.w	r9, [r4, r2]
 800e40c:	3201      	adds	r2, #1
 800e40e:	e7c6      	b.n	800e39e <SpiFlashStore::Init()+0xa6>
 800e410:	2500      	movs	r5, #0
 800e412:	e7cc      	b.n	800e3ae <SpiFlashStore::Init()+0xb6>
 800e414:	20002f48 	andcs	r2, r0, r8, asr #30
 800e418:	20002f1c 	andcs	r2, r0, ip, lsl pc
 800e41c:	20001f1c 	andcs	r1, r0, ip, lsl pc
 800e420:	20002f30 	andcs	r2, r0, r0, lsr pc
 800e424:	080164ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp, lr}
 800e428:	20002f28 	andcs	r2, r0, r8, lsr #30

0800e42c <SpiFlashStore::SpiFlashStore()>:
 800e42c:	b538      	push	{r3, r4, r5, lr}
 800e42e:	4b0d      	ldr	r3, [pc, #52]	; (800e464 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e430:	4604      	mov	r4, r0
 800e432:	6018      	str	r0, [r3, #0]
 800e434:	4b0c      	ldr	r3, [pc, #48]	; (800e468 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e436:	4d0d      	ldr	r5, [pc, #52]	; (800e46c <SpiFlashStore::SpiFlashStore()+0x40>)
 800e438:	681b      	ldr	r3, [r3, #0]
 800e43a:	781b      	ldrb	r3, [r3, #0]
 800e43c:	b113      	cbz	r3, 800e444 <SpiFlashStore::SpiFlashStore()+0x18>
 800e43e:	f7ff ff5b 	bl	800e2f8 <SpiFlashStore::Init()>
 800e442:	7028      	strb	r0, [r5, #0]
 800e444:	782b      	ldrb	r3, [r5, #0]
 800e446:	b153      	cbz	r3, 800e45e <SpiFlashStore::SpiFlashStore()+0x32>
 800e448:	2320      	movs	r3, #32
 800e44a:	2200      	movs	r2, #0
 800e44c:	4908      	ldr	r1, [pc, #32]	; (800e470 <SpiFlashStore::SpiFlashStore()+0x44>)
 800e44e:	f851 0b04 	ldr.w	r0, [r1], #4
 800e452:	3201      	adds	r2, #1
 800e454:	2a1c      	cmp	r2, #28
 800e456:	4403      	add	r3, r0
 800e458:	d1f9      	bne.n	800e44e <SpiFlashStore::SpiFlashStore()+0x22>
 800e45a:	4a06      	ldr	r2, [pc, #24]	; (800e474 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e45c:	6013      	str	r3, [r2, #0]
 800e45e:	4620      	mov	r0, r4
 800e460:	bd38      	pop	{r3, r4, r5, pc}
 800e462:	bf00      	nop
 800e464:	20002f2c 	andcs	r2, r0, ip, lsr #30
 800e468:	20002f48 	andcs	r2, r0, r8, asr #30
 800e46c:	20002f20 	andcs	r2, r0, r0, lsr #30
 800e470:	080164ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp, lr}
 800e474:	20002f24 	andcs	r2, r0, r4, lsr #30

0800e478 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e478:	b508      	push	{r3, lr}
 800e47a:	f7ff ff2f 	bl	800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e47e:	2300      	movs	r3, #0
 800e480:	4904      	ldr	r1, [pc, #16]	; (800e494 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e482:	1842      	adds	r2, r0, r1
 800e484:	540b      	strb	r3, [r1, r0]
 800e486:	7053      	strb	r3, [r2, #1]
 800e488:	7093      	strb	r3, [r2, #2]
 800e48a:	70d3      	strb	r3, [r2, #3]
 800e48c:	2201      	movs	r2, #1
 800e48e:	4b02      	ldr	r3, [pc, #8]	; (800e498 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e490:	601a      	str	r2, [r3, #0]
 800e492:	bd08      	pop	{r3, pc}
 800e494:	20001f1c 	andcs	r1, r0, ip, lsl pc
 800e498:	20002f28 	andcs	r2, r0, r8, lsr #30

0800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4a0:	461c      	mov	r4, r3
 800e4a2:	4b19      	ldr	r3, [pc, #100]	; (800e508 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e4a4:	4616      	mov	r6, r2
 800e4a6:	781f      	ldrb	r7, [r3, #0]
 800e4a8:	9d07      	ldr	r5, [sp, #28]
 800e4aa:	b307      	cbz	r7, 800e4ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e4ac:	f7ff ff16 	bl	800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e4b0:	f04f 0c00 	mov.w	ip, #0
 800e4b4:	4a15      	ldr	r2, [pc, #84]	; (800e50c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e4b6:	1831      	adds	r1, r6, r0
 800e4b8:	1e63      	subs	r3, r4, #1
 800e4ba:	9c06      	ldr	r4, [sp, #24]
 800e4bc:	4411      	add	r1, r2
 800e4be:	440c      	add	r4, r1
 800e4c0:	42a1      	cmp	r1, r4
 800e4c2:	d116      	bne.n	800e4f2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e4c4:	f1bc 0f00 	cmp.w	ip, #0
 800e4c8:	d011      	beq.n	800e4ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e4ca:	4b11      	ldr	r3, [pc, #68]	; (800e510 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e4cc:	6819      	ldr	r1, [r3, #0]
 800e4ce:	b109      	cbz	r1, 800e4d4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e4d0:	2906      	cmp	r1, #6
 800e4d2:	d101      	bne.n	800e4d8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e4d4:	2101      	movs	r1, #1
 800e4d6:	6019      	str	r1, [r3, #0]
 800e4d8:	4b0e      	ldr	r3, [pc, #56]	; (800e514 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e4da:	6819      	ldr	r1, [r3, #0]
 800e4dc:	4b0e      	ldr	r3, [pc, #56]	; (800e518 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e4de:	6019      	str	r1, [r3, #0]
 800e4e0:	b12e      	cbz	r6, 800e4ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e4e2:	b125      	cbz	r5, 800e4ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e4e4:	9b08      	ldr	r3, [sp, #32]
 800e4e6:	4418      	add	r0, r3
 800e4e8:	5813      	ldr	r3, [r2, r0]
 800e4ea:	432b      	orrs	r3, r5
 800e4ec:	5013      	str	r3, [r2, r0]
 800e4ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4f2:	f891 8000 	ldrb.w	r8, [r1]
 800e4f6:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e4fa:	3101      	adds	r1, #1
 800e4fc:	45f0      	cmp	r8, lr
 800e4fe:	bf1c      	itt	ne
 800e500:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e504:	46bc      	movne	ip, r7
 800e506:	e7db      	b.n	800e4c0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e508:	20002f20 	andcs	r2, r0, r0, lsr #30
 800e50c:	20001f1c 	andcs	r1, r0, ip, lsl pc
 800e510:	20002f28 	andcs	r2, r0, r8, lsr #30
 800e514:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800e518:	20001f18 	andcs	r1, r0, r8, lsl pc

0800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800e51c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e520:	461d      	mov	r5, r3
 800e522:	4b15      	ldr	r3, [pc, #84]	; (800e578 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800e524:	b085      	sub	sp, #20
 800e526:	781b      	ldrb	r3, [r3, #0]
 800e528:	4607      	mov	r7, r0
 800e52a:	4614      	mov	r4, r2
 800e52c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e530:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e534:	b193      	cbz	r3, 800e55c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e536:	f7ff fed1 	bl	800e2dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e53a:	4a10      	ldr	r2, [pc, #64]	; (800e57c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800e53c:	eb08 0600 	add.w	r6, r8, r0
 800e540:	18b3      	adds	r3, r6, r2
 800e542:	f1b9 0f00 	cmp.w	r9, #0
 800e546:	d013      	beq.n	800e570 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e548:	5990      	ldr	r0, [r2, r6]
 800e54a:	b988      	cbnz	r0, 800e570 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e54c:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e550:	4623      	mov	r3, r4
 800e552:	4642      	mov	r2, r8
 800e554:	4638      	mov	r0, r7
 800e556:	9500      	str	r5, [sp, #0]
 800e558:	f7ff ffa0 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e55c:	b005      	add	sp, #20
 800e55e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e562:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e566:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e56a:	429d      	cmp	r5, r3
 800e56c:	d1f9      	bne.n	800e562 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800e56e:	e7f5      	b.n	800e55c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e570:	3c01      	subs	r4, #1
 800e572:	441d      	add	r5, r3
 800e574:	e7f9      	b.n	800e56a <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800e576:	bf00      	nop
 800e578:	20002f20 	andcs	r2, r0, r0, lsr #30
 800e57c:	20001f1c 	andcs	r1, r0, ip, lsl pc

0800e580 <SpiFlashStore::Flash()>:
 800e580:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e582:	4c25      	ldr	r4, [pc, #148]	; (800e618 <SpiFlashStore::Flash()+0x98>)
 800e584:	6820      	ldr	r0, [r4, #0]
 800e586:	2800      	cmp	r0, #0
 800e588:	d043      	beq.n	800e612 <SpiFlashStore::Flash()+0x92>
 800e58a:	3801      	subs	r0, #1
 800e58c:	2805      	cmp	r0, #5
 800e58e:	d831      	bhi.n	800e5f4 <SpiFlashStore::Flash()+0x74>
 800e590:	e8df f000 	tbb	[pc, r0]
 800e594:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e598:	4b203025 	blmi	881a634 <__exidx_end+0x803654>
 800e59c:	681a      	ldr	r2, [r3, #0]
 800e59e:	4b20      	ldr	r3, [pc, #128]	; (800e620 <SpiFlashStore::Flash()+0xa0>)
 800e5a0:	601a      	str	r2, [r3, #0]
 800e5a2:	2302      	movs	r3, #2
 800e5a4:	6023      	str	r3, [r4, #0]
 800e5a6:	2001      	movs	r0, #1
 800e5a8:	e033      	b.n	800e612 <SpiFlashStore::Flash()+0x92>
 800e5aa:	4b1c      	ldr	r3, [pc, #112]	; (800e61c <SpiFlashStore::Flash()+0x9c>)
 800e5ac:	4a1c      	ldr	r2, [pc, #112]	; (800e620 <SpiFlashStore::Flash()+0xa0>)
 800e5ae:	681b      	ldr	r3, [r3, #0]
 800e5b0:	6812      	ldr	r2, [r2, #0]
 800e5b2:	1a9b      	subs	r3, r3, r2
 800e5b4:	2b63      	cmp	r3, #99	; 0x63
 800e5b6:	d9f6      	bls.n	800e5a6 <SpiFlashStore::Flash()+0x26>
 800e5b8:	2303      	movs	r3, #3
 800e5ba:	e7f3      	b.n	800e5a4 <SpiFlashStore::Flash()+0x24>
 800e5bc:	4919      	ldr	r1, [pc, #100]	; (800e624 <SpiFlashStore::Flash()+0xa4>)
 800e5be:	481a      	ldr	r0, [pc, #104]	; (800e628 <SpiFlashStore::Flash()+0xa8>)
 800e5c0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e5c4:	6809      	ldr	r1, [r1, #0]
 800e5c6:	6800      	ldr	r0, [r0, #0]
 800e5c8:	ab03      	add	r3, sp, #12
 800e5ca:	f000 fa95 	bl	800eaf8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e5ce:	2800      	cmp	r0, #0
 800e5d0:	d0e9      	beq.n	800e5a6 <SpiFlashStore::Flash()+0x26>
 800e5d2:	4b12      	ldr	r3, [pc, #72]	; (800e61c <SpiFlashStore::Flash()+0x9c>)
 800e5d4:	681a      	ldr	r2, [r3, #0]
 800e5d6:	4b12      	ldr	r3, [pc, #72]	; (800e620 <SpiFlashStore::Flash()+0xa0>)
 800e5d8:	601a      	str	r2, [r3, #0]
 800e5da:	2305      	movs	r3, #5
 800e5dc:	e7e2      	b.n	800e5a4 <SpiFlashStore::Flash()+0x24>
 800e5de:	4b0f      	ldr	r3, [pc, #60]	; (800e61c <SpiFlashStore::Flash()+0x9c>)
 800e5e0:	4a0f      	ldr	r2, [pc, #60]	; (800e620 <SpiFlashStore::Flash()+0xa0>)
 800e5e2:	681b      	ldr	r3, [r3, #0]
 800e5e4:	6812      	ldr	r2, [r2, #0]
 800e5e6:	1a9b      	subs	r3, r3, r2
 800e5e8:	2b63      	cmp	r3, #99	; 0x63
 800e5ea:	d9dc      	bls.n	800e5a6 <SpiFlashStore::Flash()+0x26>
 800e5ec:	2304      	movs	r3, #4
 800e5ee:	e7d9      	b.n	800e5a4 <SpiFlashStore::Flash()+0x24>
 800e5f0:	2306      	movs	r3, #6
 800e5f2:	e7d7      	b.n	800e5a4 <SpiFlashStore::Flash()+0x24>
 800e5f4:	ab03      	add	r3, sp, #12
 800e5f6:	4a0d      	ldr	r2, [pc, #52]	; (800e62c <SpiFlashStore::Flash()+0xac>)
 800e5f8:	490a      	ldr	r1, [pc, #40]	; (800e624 <SpiFlashStore::Flash()+0xa4>)
 800e5fa:	480b      	ldr	r0, [pc, #44]	; (800e628 <SpiFlashStore::Flash()+0xa8>)
 800e5fc:	9300      	str	r3, [sp, #0]
 800e5fe:	6812      	ldr	r2, [r2, #0]
 800e600:	4b0b      	ldr	r3, [pc, #44]	; (800e630 <SpiFlashStore::Flash()+0xb0>)
 800e602:	6809      	ldr	r1, [r1, #0]
 800e604:	6800      	ldr	r0, [r0, #0]
 800e606:	f000 fb17 	bl	800ec38 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e60a:	2800      	cmp	r0, #0
 800e60c:	d0cb      	beq.n	800e5a6 <SpiFlashStore::Flash()+0x26>
 800e60e:	2000      	movs	r0, #0
 800e610:	6020      	str	r0, [r4, #0]
 800e612:	b004      	add	sp, #16
 800e614:	bd10      	pop	{r4, pc}
 800e616:	bf00      	nop
 800e618:	20002f28 	andcs	r2, r0, r8, lsr #30
 800e61c:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800e620:	20001f18 	andcs	r1, r0, r8, lsl pc
 800e624:	20002f1c 	andcs	r2, r0, ip, lsl pc
 800e628:	20002f48 	andcs	r2, r0, r8, asr #30
 800e62c:	20002f24 	andcs	r2, r0, r4, lsr #30
 800e630:	20001f1c 	andcs	r1, r0, ip, lsl pc

0800e634 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e634:	4770      	bx	lr
	...

0800e638 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e638:	b507      	push	{r0, r1, r2, lr}
 800e63a:	2300      	movs	r3, #0
 800e63c:	460a      	mov	r2, r1
 800e63e:	2101      	movs	r1, #1
 800e640:	e9cd 3100 	strd	r3, r1, [sp]
 800e644:	4804      	ldr	r0, [pc, #16]	; (800e658 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800e646:	2322      	movs	r3, #34	; 0x22
 800e648:	210f      	movs	r1, #15
 800e64a:	6800      	ldr	r0, [r0, #0]
 800e64c:	f7ff ff66 	bl	800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e650:	b003      	add	sp, #12
 800e652:	f85d fb04 	ldr.w	pc, [sp], #4
 800e656:	bf00      	nop
 800e658:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e65c <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e65c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e65e:	2200      	movs	r2, #0
 800e660:	460b      	mov	r3, r1
 800e662:	2122      	movs	r1, #34	; 0x22
 800e664:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e668:	4804      	ldr	r0, [pc, #16]	; (800e67c <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e66a:	9100      	str	r1, [sp, #0]
 800e66c:	6800      	ldr	r0, [r0, #0]
 800e66e:	210f      	movs	r1, #15
 800e670:	f7ff ff14 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e674:	b005      	add	sp, #20
 800e676:	f85d fb04 	ldr.w	pc, [sp], #4
 800e67a:	bf00      	nop
 800e67c:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e680 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e680:	b510      	push	{r4, lr}
 800e682:	4604      	mov	r4, r0
 800e684:	f003 fd64 	bl	8012150 <operator delete(void*)>
 800e688:	4620      	mov	r0, r4
 800e68a:	bd10      	pop	{r4, pc}

0800e68c <StoreDisplayUdf::StoreDisplayUdf()>:
 800e68c:	4a02      	ldr	r2, [pc, #8]	; (800e698 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e68e:	6002      	str	r2, [r0, #0]
 800e690:	4a02      	ldr	r2, [pc, #8]	; (800e69c <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e692:	6010      	str	r0, [r2, #0]
 800e694:	4770      	bx	lr
 800e696:	bf00      	nop
 800e698:	08016524 	stmdaeq	r1, {r2, r5, r8, sl, sp, lr}
 800e69c:	20002f34 	andcs	r2, r0, r4, lsr pc

0800e6a0 <StoreNetwork::~StoreNetwork()>:
 800e6a0:	4770      	bx	lr

0800e6a2 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e6a2:	3804      	subs	r0, #4
 800e6a4:	4770      	bx	lr
	...

0800e6a8 <StoreNetwork::Update(networkparams::Params const*)>:
 800e6a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e6aa:	2200      	movs	r2, #0
 800e6ac:	460b      	mov	r3, r1
 800e6ae:	215e      	movs	r1, #94	; 0x5e
 800e6b0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e6b4:	4804      	ldr	r0, [pc, #16]	; (800e6c8 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800e6b6:	9100      	str	r1, [sp, #0]
 800e6b8:	6800      	ldr	r0, [r0, #0]
 800e6ba:	4611      	mov	r1, r2
 800e6bc:	f7ff feee 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e6c0:	b005      	add	sp, #20
 800e6c2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e6c6:	bf00      	nop
 800e6c8:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e6cc <StoreNetwork::SaveDhcp(bool)>:
 800e6cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e6ce:	2301      	movs	r3, #1
 800e6d0:	f88d 1017 	strb.w	r1, [sp, #23]
 800e6d4:	2100      	movs	r1, #0
 800e6d6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e6da:	4805      	ldr	r0, [pc, #20]	; (800e6f0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800e6dc:	9300      	str	r3, [sp, #0]
 800e6de:	2214      	movs	r2, #20
 800e6e0:	6800      	ldr	r0, [r0, #0]
 800e6e2:	f10d 0317 	add.w	r3, sp, #23
 800e6e6:	f7ff fed9 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e6ea:	b007      	add	sp, #28
 800e6ec:	f85d fb04 	ldr.w	pc, [sp], #4
 800e6f0:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e6f4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800e6f4:	f1a0 0004 	sub.w	r0, r0, #4
 800e6f8:	e7e8      	b.n	800e6cc <StoreNetwork::SaveDhcp(bool)>
 800e6fa:	bf00      	nop

0800e6fc <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e6fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e6fe:	2308      	movs	r3, #8
 800e700:	9105      	str	r1, [sp, #20]
 800e702:	2100      	movs	r1, #0
 800e704:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e708:	2304      	movs	r3, #4
 800e70a:	4805      	ldr	r0, [pc, #20]	; (800e720 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e70c:	9300      	str	r3, [sp, #0]
 800e70e:	220c      	movs	r2, #12
 800e710:	6800      	ldr	r0, [r0, #0]
 800e712:	ab05      	add	r3, sp, #20
 800e714:	f7ff fec2 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e718:	b007      	add	sp, #28
 800e71a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e71e:	bf00      	nop
 800e720:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e724 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e724:	f1a0 0004 	sub.w	r0, r0, #4
 800e728:	e7e8      	b.n	800e6fc <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e72a:	bf00      	nop

0800e72c <StoreNetwork::SaveNetMask(unsigned int)>:
 800e72c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e72e:	2304      	movs	r3, #4
 800e730:	9105      	str	r1, [sp, #20]
 800e732:	2100      	movs	r1, #0
 800e734:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e738:	4804      	ldr	r0, [pc, #16]	; (800e74c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e73a:	9300      	str	r3, [sp, #0]
 800e73c:	2208      	movs	r2, #8
 800e73e:	6800      	ldr	r0, [r0, #0]
 800e740:	ab05      	add	r3, sp, #20
 800e742:	f7ff feab 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e746:	b007      	add	sp, #28
 800e748:	f85d fb04 	ldr.w	pc, [sp], #4
 800e74c:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e750 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e750:	f1a0 0004 	sub.w	r0, r0, #4
 800e754:	e7ea      	b.n	800e72c <StoreNetwork::SaveNetMask(unsigned int)>
 800e756:	bf00      	nop

0800e758 <StoreNetwork::SaveIp(unsigned int)>:
 800e758:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e75a:	2302      	movs	r3, #2
 800e75c:	9105      	str	r1, [sp, #20]
 800e75e:	2100      	movs	r1, #0
 800e760:	2204      	movs	r2, #4
 800e762:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e766:	4804      	ldr	r0, [pc, #16]	; (800e778 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e768:	9200      	str	r2, [sp, #0]
 800e76a:	6800      	ldr	r0, [r0, #0]
 800e76c:	ab05      	add	r3, sp, #20
 800e76e:	f7ff fe95 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e772:	b007      	add	sp, #28
 800e774:	f85d fb04 	ldr.w	pc, [sp], #4
 800e778:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e77c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e77c:	f1a0 0004 	sub.w	r0, r0, #4
 800e780:	e7ea      	b.n	800e758 <StoreNetwork::SaveIp(unsigned int)>
 800e782:	bf00      	nop

0800e784 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e784:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e786:	460b      	mov	r3, r1
 800e788:	2020      	movs	r0, #32
 800e78a:	2100      	movs	r1, #0
 800e78c:	2a40      	cmp	r2, #64	; 0x40
 800e78e:	bf28      	it	cs
 800e790:	2240      	movcs	r2, #64	; 0x40
 800e792:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e796:	4804      	ldr	r0, [pc, #16]	; (800e7a8 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e798:	9200      	str	r2, [sp, #0]
 800e79a:	6800      	ldr	r0, [r0, #0]
 800e79c:	2215      	movs	r2, #21
 800e79e:	f7ff fe7d 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e7a2:	b005      	add	sp, #20
 800e7a4:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7a8:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e7ac <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e7ac:	f1a0 0004 	sub.w	r0, r0, #4
 800e7b0:	e7e8      	b.n	800e784 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e7b2:	bf00      	nop

0800e7b4 <StoreNetwork::~StoreNetwork()>:
 800e7b4:	b510      	push	{r4, lr}
 800e7b6:	4604      	mov	r4, r0
 800e7b8:	f003 fcca 	bl	8012150 <operator delete(void*)>
 800e7bc:	4620      	mov	r0, r4
 800e7be:	bd10      	pop	{r4, pc}

0800e7c0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e7c0:	f1a0 0004 	sub.w	r0, r0, #4
 800e7c4:	e7f6      	b.n	800e7b4 <StoreNetwork::~StoreNetwork()>
	...

0800e7c8 <StoreNetwork::Copy(networkparams::Params*)>:
 800e7c8:	b507      	push	{r0, r1, r2, lr}
 800e7ca:	2301      	movs	r3, #1
 800e7cc:	460a      	mov	r2, r1
 800e7ce:	2100      	movs	r1, #0
 800e7d0:	e9cd 1300 	strd	r1, r3, [sp]
 800e7d4:	4803      	ldr	r0, [pc, #12]	; (800e7e4 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800e7d6:	235e      	movs	r3, #94	; 0x5e
 800e7d8:	6800      	ldr	r0, [r0, #0]
 800e7da:	f7ff fe9f 	bl	800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e7de:	b003      	add	sp, #12
 800e7e0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7e4:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e7e8 <StoreNetwork::StoreNetwork()>:
 800e7e8:	4a03      	ldr	r2, [pc, #12]	; (800e7f8 <StoreNetwork::StoreNetwork()+0x10>)
 800e7ea:	6002      	str	r2, [r0, #0]
 800e7ec:	322c      	adds	r2, #44	; 0x2c
 800e7ee:	6042      	str	r2, [r0, #4]
 800e7f0:	4a02      	ldr	r2, [pc, #8]	; (800e7fc <StoreNetwork::StoreNetwork()+0x14>)
 800e7f2:	6010      	str	r0, [r2, #0]
 800e7f4:	4770      	bx	lr
 800e7f6:	bf00      	nop
 800e7f8:	0801653c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, sp, lr}
 800e7fc:	20002f38 	andcs	r2, r0, r8, lsr pc

0800e800 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e800:	4770      	bx	lr
	...

0800e804 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800e804:	b507      	push	{r0, r1, r2, lr}
 800e806:	2300      	movs	r3, #0
 800e808:	460a      	mov	r2, r1
 800e80a:	2101      	movs	r1, #1
 800e80c:	e9cd 3100 	strd	r3, r1, [sp]
 800e810:	4804      	ldr	r0, [pc, #16]	; (800e824 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800e812:	2320      	movs	r3, #32
 800e814:	210c      	movs	r1, #12
 800e816:	6800      	ldr	r0, [r0, #0]
 800e818:	f7ff fe80 	bl	800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e81c:	b003      	add	sp, #12
 800e81e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e822:	bf00      	nop
 800e824:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e828 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800e828:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e82a:	2200      	movs	r2, #0
 800e82c:	460b      	mov	r3, r1
 800e82e:	2120      	movs	r1, #32
 800e830:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e834:	4804      	ldr	r0, [pc, #16]	; (800e848 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800e836:	9100      	str	r1, [sp, #0]
 800e838:	6800      	ldr	r0, [r0, #0]
 800e83a:	210c      	movs	r1, #12
 800e83c:	f7ff fe2e 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e840:	b005      	add	sp, #20
 800e842:	f85d fb04 	ldr.w	pc, [sp], #4
 800e846:	bf00      	nop
 800e848:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e84c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e84c:	b510      	push	{r4, lr}
 800e84e:	4604      	mov	r4, r0
 800e850:	f003 fc7e 	bl	8012150 <operator delete(void*)>
 800e854:	4620      	mov	r0, r4
 800e856:	bd10      	pop	{r4, pc}

0800e858 <StoreRemoteConfig::StoreRemoteConfig()>:
 800e858:	4a02      	ldr	r2, [pc, #8]	; (800e864 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800e85a:	6002      	str	r2, [r0, #0]
 800e85c:	4a02      	ldr	r2, [pc, #8]	; (800e868 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800e85e:	6010      	str	r0, [r2, #0]
 800e860:	4770      	bx	lr
 800e862:	bf00      	nop
 800e864:	0801658c 	stmdaeq	r1, {r2, r3, r7, r8, sl, sp, lr}
 800e868:	20002f3c 	andcs	r2, r0, ip, lsr pc

0800e86c <StoreE131::~StoreE131()>:
 800e86c:	4770      	bx	lr
	...

0800e870 <StoreE131::Copy(e131params::Params*)>:
 800e870:	b507      	push	{r0, r1, r2, lr}
 800e872:	2300      	movs	r3, #0
 800e874:	460a      	mov	r2, r1
 800e876:	2101      	movs	r1, #1
 800e878:	e9cd 3100 	strd	r3, r1, [sp]
 800e87c:	4804      	ldr	r0, [pc, #16]	; (800e890 <StoreE131::Copy(e131params::Params*)+0x20>)
 800e87e:	231f      	movs	r3, #31
 800e880:	2104      	movs	r1, #4
 800e882:	6800      	ldr	r0, [r0, #0]
 800e884:	f7ff fe4a 	bl	800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e888:	b003      	add	sp, #12
 800e88a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e88e:	bf00      	nop
 800e890:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e894 <StoreE131::Update(e131params::Params const*)>:
 800e894:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e896:	2200      	movs	r2, #0
 800e898:	460b      	mov	r3, r1
 800e89a:	211f      	movs	r1, #31
 800e89c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e8a0:	4804      	ldr	r0, [pc, #16]	; (800e8b4 <StoreE131::Update(e131params::Params const*)+0x20>)
 800e8a2:	9100      	str	r1, [sp, #0]
 800e8a4:	6800      	ldr	r0, [r0, #0]
 800e8a6:	2104      	movs	r1, #4
 800e8a8:	f7ff fdf8 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8ac:	b005      	add	sp, #20
 800e8ae:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8b2:	bf00      	nop
 800e8b4:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e8b8 <StoreE131::~StoreE131()>:
 800e8b8:	b510      	push	{r4, lr}
 800e8ba:	4604      	mov	r4, r0
 800e8bc:	f003 fc48 	bl	8012150 <operator delete(void*)>
 800e8c0:	4620      	mov	r0, r4
 800e8c2:	bd10      	pop	{r4, pc}

0800e8c4 <StoreE131::StoreE131()>:
 800e8c4:	4a02      	ldr	r2, [pc, #8]	; (800e8d0 <StoreE131::StoreE131()+0xc>)
 800e8c6:	6002      	str	r2, [r0, #0]
 800e8c8:	4a02      	ldr	r2, [pc, #8]	; (800e8d4 <StoreE131::StoreE131()+0x10>)
 800e8ca:	6010      	str	r0, [r2, #0]
 800e8cc:	4770      	bx	lr
 800e8ce:	bf00      	nop
 800e8d0:	080165a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, sp, lr}
 800e8d4:	20002f40 	andcs	r2, r0, r0, asr #30

0800e8d8 <StorePixelDmx::~StorePixelDmx()>:
 800e8d8:	4770      	bx	lr

0800e8da <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800e8da:	3804      	subs	r0, #4
 800e8dc:	4770      	bx	lr
	...

0800e8e0 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 800e8e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e8e2:	2200      	movs	r2, #0
 800e8e4:	460b      	mov	r3, r1
 800e8e6:	2118      	movs	r1, #24
 800e8e8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e8ec:	4804      	ldr	r0, [pc, #16]	; (800e900 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 800e8ee:	9100      	str	r1, [sp, #0]
 800e8f0:	6800      	ldr	r0, [r0, #0]
 800e8f2:	2103      	movs	r1, #3
 800e8f4:	f7ff fdd2 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8f8:	b005      	add	sp, #20
 800e8fa:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8fe:	bf00      	nop
 800e900:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e904 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800e904:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e906:	2304      	movs	r3, #4
 800e908:	2200      	movs	r2, #0
 800e90a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e90e:	2302      	movs	r3, #2
 800e910:	4806      	ldr	r0, [pc, #24]	; (800e92c <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800e912:	9300      	str	r3, [sp, #0]
 800e914:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e918:	2207      	movs	r2, #7
 800e91a:	2103      	movs	r1, #3
 800e91c:	6800      	ldr	r0, [r0, #0]
 800e91e:	f10d 0316 	add.w	r3, sp, #22
 800e922:	f7ff fdbb 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e926:	b007      	add	sp, #28
 800e928:	f85d fb04 	ldr.w	pc, [sp], #4
 800e92c:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e930 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800e930:	f1a0 0004 	sub.w	r0, r0, #4
 800e934:	e7e6      	b.n	800e904 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 800e936:	bf00      	nop

0800e938 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 800e938:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e93a:	2308      	movs	r3, #8
 800e93c:	2200      	movs	r2, #0
 800e93e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e942:	2301      	movs	r3, #1
 800e944:	4806      	ldr	r0, [pc, #24]	; (800e960 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 800e946:	9300      	str	r3, [sp, #0]
 800e948:	f88d 1017 	strb.w	r1, [sp, #23]
 800e94c:	2210      	movs	r2, #16
 800e94e:	2103      	movs	r1, #3
 800e950:	6800      	ldr	r0, [r0, #0]
 800e952:	f10d 0317 	add.w	r3, sp, #23
 800e956:	f7ff fda1 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e95a:	b007      	add	sp, #28
 800e95c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e960:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e964 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 800e964:	f1a0 0004 	sub.w	r0, r0, #4
 800e968:	e7e6      	b.n	800e938 <StorePixelDmx::SaveTestPattern(unsigned char)>
 800e96a:	bf00      	nop

0800e96c <StorePixelDmx::SaveMap(unsigned char)>:
 800e96c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e96e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e972:	2200      	movs	r2, #0
 800e974:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e978:	2301      	movs	r3, #1
 800e97a:	4807      	ldr	r0, [pc, #28]	; (800e998 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 800e97c:	9300      	str	r3, [sp, #0]
 800e97e:	f88d 1017 	strb.w	r1, [sp, #23]
 800e982:	2213      	movs	r2, #19
 800e984:	2103      	movs	r1, #3
 800e986:	6800      	ldr	r0, [r0, #0]
 800e988:	f10d 0317 	add.w	r3, sp, #23
 800e98c:	f7ff fd86 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e990:	b007      	add	sp, #28
 800e992:	f85d fb04 	ldr.w	pc, [sp], #4
 800e996:	bf00      	nop
 800e998:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e99c <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 800e99c:	f1a0 0004 	sub.w	r0, r0, #4
 800e9a0:	e7e4      	b.n	800e96c <StorePixelDmx::SaveMap(unsigned char)>
 800e9a2:	bf00      	nop

0800e9a4 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800e9a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e9a6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e9aa:	2200      	movs	r2, #0
 800e9ac:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e9b0:	2302      	movs	r3, #2
 800e9b2:	4807      	ldr	r0, [pc, #28]	; (800e9d0 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800e9b4:	9300      	str	r3, [sp, #0]
 800e9b6:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e9ba:	2211      	movs	r2, #17
 800e9bc:	2103      	movs	r1, #3
 800e9be:	6800      	ldr	r0, [r0, #0]
 800e9c0:	f10d 0316 	add.w	r3, sp, #22
 800e9c4:	f7ff fd6a 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9c8:	b007      	add	sp, #28
 800e9ca:	f85d fb04 	ldr.w	pc, [sp], #4
 800e9ce:	bf00      	nop
 800e9d0:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800e9d4 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800e9d4:	f1a0 0004 	sub.w	r0, r0, #4
 800e9d8:	e7e4      	b.n	800e9a4 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 800e9da:	bf00      	nop

0800e9dc <StorePixelDmx::SaveCount(unsigned short)>:
 800e9dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e9de:	2302      	movs	r3, #2
 800e9e0:	2200      	movs	r2, #0
 800e9e2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e9e6:	4807      	ldr	r0, [pc, #28]	; (800ea04 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 800e9e8:	9300      	str	r3, [sp, #0]
 800e9ea:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e9ee:	2205      	movs	r2, #5
 800e9f0:	2103      	movs	r1, #3
 800e9f2:	6800      	ldr	r0, [r0, #0]
 800e9f4:	f10d 0316 	add.w	r3, sp, #22
 800e9f8:	f7ff fd50 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9fc:	b007      	add	sp, #28
 800e9fe:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea02:	bf00      	nop
 800ea04:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800ea08 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 800ea08:	f1a0 0004 	sub.w	r0, r0, #4
 800ea0c:	e7e6      	b.n	800e9dc <StorePixelDmx::SaveCount(unsigned short)>
 800ea0e:	bf00      	nop

0800ea10 <StorePixelDmx::SaveType(unsigned char)>:
 800ea10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ea12:	2301      	movs	r3, #1
 800ea14:	2200      	movs	r2, #0
 800ea16:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ea1a:	4807      	ldr	r0, [pc, #28]	; (800ea38 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 800ea1c:	9300      	str	r3, [sp, #0]
 800ea1e:	f88d 1017 	strb.w	r1, [sp, #23]
 800ea22:	2204      	movs	r2, #4
 800ea24:	2103      	movs	r1, #3
 800ea26:	6800      	ldr	r0, [r0, #0]
 800ea28:	f10d 0317 	add.w	r3, sp, #23
 800ea2c:	f7ff fd36 	bl	800e49c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea30:	b007      	add	sp, #28
 800ea32:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea36:	bf00      	nop
 800ea38:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800ea3c <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 800ea3c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea40:	e7e6      	b.n	800ea10 <StorePixelDmx::SaveType(unsigned char)>
 800ea42:	bf00      	nop

0800ea44 <StorePixelDmx::~StorePixelDmx()>:
 800ea44:	b510      	push	{r4, lr}
 800ea46:	4604      	mov	r4, r0
 800ea48:	f003 fb82 	bl	8012150 <operator delete(void*)>
 800ea4c:	4620      	mov	r0, r4
 800ea4e:	bd10      	pop	{r4, pc}

0800ea50 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800ea50:	f1a0 0004 	sub.w	r0, r0, #4
 800ea54:	e7f6      	b.n	800ea44 <StorePixelDmx::~StorePixelDmx()>
	...

0800ea58 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 800ea58:	b507      	push	{r0, r1, r2, lr}
 800ea5a:	2300      	movs	r3, #0
 800ea5c:	460a      	mov	r2, r1
 800ea5e:	2101      	movs	r1, #1
 800ea60:	e9cd 3100 	strd	r3, r1, [sp]
 800ea64:	4804      	ldr	r0, [pc, #16]	; (800ea78 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 800ea66:	2318      	movs	r3, #24
 800ea68:	2103      	movs	r1, #3
 800ea6a:	6800      	ldr	r0, [r0, #0]
 800ea6c:	f7ff fd56 	bl	800e51c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ea70:	b003      	add	sp, #12
 800ea72:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea76:	bf00      	nop
 800ea78:	20002f2c 	andcs	r2, r0, ip, lsr #30

0800ea7c <StorePixelDmx::StorePixelDmx()>:
 800ea7c:	4a03      	ldr	r2, [pc, #12]	; (800ea8c <StorePixelDmx::StorePixelDmx()+0x10>)
 800ea7e:	6002      	str	r2, [r0, #0]
 800ea80:	3230      	adds	r2, #48	; 0x30
 800ea82:	6042      	str	r2, [r0, #4]
 800ea84:	4a02      	ldr	r2, [pc, #8]	; (800ea90 <StorePixelDmx::StorePixelDmx()+0x14>)
 800ea86:	6010      	str	r0, [r2, #0]
 800ea88:	4770      	bx	lr
 800ea8a:	bf00      	nop
 800ea8c:	080165bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, sp, lr}
 800ea90:	20002f44 	andcs	r2, r0, r4, asr #30

0800ea94 <FlashRom::FlashRom()>:
 800ea94:	4b07      	ldr	r3, [pc, #28]	; (800eab4 <FlashRom::FlashRom()+0x20>)
 800ea96:	b510      	push	{r4, lr}
 800ea98:	6018      	str	r0, [r3, #0]
 800ea9a:	2301      	movs	r3, #1
 800ea9c:	4604      	mov	r4, r0
 800ea9e:	7003      	strb	r3, [r0, #0]
 800eaa0:	4b05      	ldr	r3, [pc, #20]	; (800eab8 <FlashRom::FlashRom()+0x24>)
 800eaa2:	4906      	ldr	r1, [pc, #24]	; (800eabc <FlashRom::FlashRom()+0x28>)
 800eaa4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800eaa8:	4805      	ldr	r0, [pc, #20]	; (800eac0 <FlashRom::FlashRom()+0x2c>)
 800eaaa:	029a      	lsls	r2, r3, #10
 800eaac:	f7fa fbe2 	bl	8009274 <printf>
 800eab0:	4620      	mov	r0, r4
 800eab2:	bd10      	pop	{r4, pc}
 800eab4:	20002f48 	andcs	r2, r0, r8, asr #30
 800eab8:	1ffff700 	svcne	0x00fff700
 800eabc:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 800eac0:	0801660c 	stmdaeq	r1, {r2, r3, r9, sl, sp, lr}

0800eac4 <FlashRom::GetSize() const>:
 800eac4:	4b02      	ldr	r3, [pc, #8]	; (800ead0 <FlashRom::GetSize() const+0xc>)
 800eac6:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800eaca:	0280      	lsls	r0, r0, #10
 800eacc:	4770      	bx	lr
 800eace:	bf00      	nop
 800ead0:	1ffff700 	svcne	0x00fff700

0800ead4 <FlashRom::GetSectorSize() const>:
 800ead4:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ead8:	4770      	bx	lr

0800eada <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800eada:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800eade:	441a      	add	r2, r3
 800eae0:	4293      	cmp	r3, r2
 800eae2:	d104      	bne.n	800eaee <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800eae4:	2200      	movs	r2, #0
 800eae6:	9b00      	ldr	r3, [sp, #0]
 800eae8:	2001      	movs	r0, #1
 800eaea:	601a      	str	r2, [r3, #0]
 800eaec:	4770      	bx	lr
 800eaee:	f851 0b04 	ldr.w	r0, [r1], #4
 800eaf2:	f843 0b04 	str.w	r0, [r3], #4
 800eaf6:	e7f3      	b.n	800eae0 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800eaf8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800eaf8:	2000      	movs	r0, #0
 800eafa:	b538      	push	{r3, r4, r5, lr}
 800eafc:	4c47      	ldr	r4, [pc, #284]	; (800ec1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800eafe:	6018      	str	r0, [r3, #0]
 800eb00:	6823      	ldr	r3, [r4, #0]
 800eb02:	2b04      	cmp	r3, #4
 800eb04:	f200 8082 	bhi.w	800ec0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800eb08:	e8df f003 	tbb	[pc, r3]
 800eb0c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800eb10:	4b430080 	blmi	90ced18 <__exidx_end+0x10b7d38>
 800eb14:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800eb18:	6019      	str	r1, [r3, #0]
 800eb1a:	4b42      	ldr	r3, [pc, #264]	; (800ec24 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800eb1c:	601a      	str	r2, [r3, #0]
 800eb1e:	4b42      	ldr	r3, [pc, #264]	; (800ec28 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800eb20:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800eb24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800eb28:	4b40      	ldr	r3, [pc, #256]	; (800ec2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eb2a:	d807      	bhi.n	800eb3c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800eb2c:	2201      	movs	r2, #1
 800eb2e:	701a      	strb	r2, [r3, #0]
 800eb30:	f003 fe08 	bl	8012744 <fmc_bank0_unlock>
 800eb34:	2301      	movs	r3, #1
 800eb36:	6023      	str	r3, [r4, #0]
 800eb38:	2000      	movs	r0, #0
 800eb3a:	e026      	b.n	800eb8a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800eb3c:	4a3c      	ldr	r2, [pc, #240]	; (800ec30 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800eb3e:	4291      	cmp	r1, r2
 800eb40:	d3f4      	bcc.n	800eb2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800eb42:	2200      	movs	r2, #0
 800eb44:	701a      	strb	r2, [r3, #0]
 800eb46:	f003 fe0b 	bl	8012760 <fmc_bank1_unlock>
 800eb4a:	e7f3      	b.n	800eb34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800eb4c:	4d37      	ldr	r5, [pc, #220]	; (800ec2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eb4e:	782b      	ldrb	r3, [r5, #0]
 800eb50:	b15b      	cbz	r3, 800eb6a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800eb52:	f003 fe23 	bl	801279c <fmc_bank0_state_get>
 800eb56:	2801      	cmp	r0, #1
 800eb58:	d0ee      	beq.n	800eb38 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800eb5a:	7829      	ldrb	r1, [r5, #0]
 800eb5c:	4b35      	ldr	r3, [pc, #212]	; (800ec34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800eb5e:	b939      	cbnz	r1, 800eb70 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800eb60:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eb62:	f022 0202 	bic.w	r2, r2, #2
 800eb66:	651a      	str	r2, [r3, #80]	; 0x50
 800eb68:	e006      	b.n	800eb78 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800eb6a:	f003 fe29 	bl	80127c0 <fmc_bank1_state_get>
 800eb6e:	e7f2      	b.n	800eb56 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800eb70:	691a      	ldr	r2, [r3, #16]
 800eb72:	f022 0202 	bic.w	r2, r2, #2
 800eb76:	611a      	str	r2, [r3, #16]
 800eb78:	4b2a      	ldr	r3, [pc, #168]	; (800ec24 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800eb7a:	681b      	ldr	r3, [r3, #0]
 800eb7c:	b94b      	cbnz	r3, 800eb92 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800eb7e:	b129      	cbz	r1, 800eb8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800eb80:	f003 fdfc 	bl	801277c <fmc_bank0_lock>
 800eb84:	2300      	movs	r3, #0
 800eb86:	2001      	movs	r0, #1
 800eb88:	6023      	str	r3, [r4, #0]
 800eb8a:	bd38      	pop	{r3, r4, r5, pc}
 800eb8c:	f003 fdfe 	bl	801278c <fmc_bank1_lock>
 800eb90:	e7f8      	b.n	800eb84 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800eb92:	2302      	movs	r3, #2
 800eb94:	e7cf      	b.n	800eb36 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800eb96:	4923      	ldr	r1, [pc, #140]	; (800ec24 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800eb98:	680b      	ldr	r3, [r1, #0]
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	d0ca      	beq.n	800eb34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800eb9e:	4b23      	ldr	r3, [pc, #140]	; (800ec2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eba0:	4a1f      	ldr	r2, [pc, #124]	; (800ec20 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800eba2:	7818      	ldrb	r0, [r3, #0]
 800eba4:	4b23      	ldr	r3, [pc, #140]	; (800ec34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800eba6:	b190      	cbz	r0, 800ebce <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800eba8:	6918      	ldr	r0, [r3, #16]
 800ebaa:	f040 0002 	orr.w	r0, r0, #2
 800ebae:	6118      	str	r0, [r3, #16]
 800ebb0:	6810      	ldr	r0, [r2, #0]
 800ebb2:	6158      	str	r0, [r3, #20]
 800ebb4:	6918      	ldr	r0, [r3, #16]
 800ebb6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ebba:	6118      	str	r0, [r3, #16]
 800ebbc:	680b      	ldr	r3, [r1, #0]
 800ebbe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ebc2:	600b      	str	r3, [r1, #0]
 800ebc4:	6813      	ldr	r3, [r2, #0]
 800ebc6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ebca:	6013      	str	r3, [r2, #0]
 800ebcc:	e7b2      	b.n	800eb34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ebce:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ebd0:	f040 0002 	orr.w	r0, r0, #2
 800ebd4:	6518      	str	r0, [r3, #80]	; 0x50
 800ebd6:	6810      	ldr	r0, [r2, #0]
 800ebd8:	6558      	str	r0, [r3, #84]	; 0x54
 800ebda:	69dd      	ldr	r5, [r3, #28]
 800ebdc:	07ad      	lsls	r5, r5, #30
 800ebde:	bf48      	it	mi
 800ebe0:	6158      	strmi	r0, [r3, #20]
 800ebe2:	4814      	ldr	r0, [pc, #80]	; (800ec34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ebe4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ebe6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ebea:	6503      	str	r3, [r0, #80]	; 0x50
 800ebec:	680b      	ldr	r3, [r1, #0]
 800ebee:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ebf2:	600b      	str	r3, [r1, #0]
 800ebf4:	6813      	ldr	r3, [r2, #0]
 800ebf6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ebfa:	e7e6      	b.n	800ebca <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ebfc:	4b0b      	ldr	r3, [pc, #44]	; (800ec2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ebfe:	781a      	ldrb	r2, [r3, #0]
 800ec00:	4b0c      	ldr	r3, [pc, #48]	; (800ec34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ec02:	b132      	cbz	r2, 800ec12 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ec04:	691a      	ldr	r2, [r3, #16]
 800ec06:	f022 0201 	bic.w	r2, r2, #1
 800ec0a:	611a      	str	r2, [r3, #16]
 800ec0c:	2000      	movs	r0, #0
 800ec0e:	6020      	str	r0, [r4, #0]
 800ec10:	e7bb      	b.n	800eb8a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ec12:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ec14:	f022 0201 	bic.w	r2, r2, #1
 800ec18:	651a      	str	r2, [r3, #80]	; 0x50
 800ec1a:	e7f7      	b.n	800ec0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ec1c:	20002f50 	andcs	r2, r0, r0, asr pc
 800ec20:	20002f54 	andcs	r2, r0, r4, asr pc
 800ec24:	20002f60 	andcs	r2, r0, r0, ror #30
 800ec28:	1ffff700 	svcne	0x00fff700
 800ec2c:	20002f5c 	andcs	r2, r0, ip, asr pc
 800ec30:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ec34:	40022000 	andmi	r2, r2, r0

0800ec38 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800ec38:	b570      	push	{r4, r5, r6, lr}
 800ec3a:	2400      	movs	r4, #0
 800ec3c:	9804      	ldr	r0, [sp, #16]
 800ec3e:	6004      	str	r4, [r0, #0]
 800ec40:	4c48      	ldr	r4, [pc, #288]	; (800ed64 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800ec42:	6820      	ldr	r0, [r4, #0]
 800ec44:	2804      	cmp	r0, #4
 800ec46:	d848      	bhi.n	800ecda <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800ec48:	e8df f000 	tbb	[pc, r0]
 800ec4c:	22847c03 	addcs	r7, r4, #768	; 0x300
 800ec50:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800ec54:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ec58:	6001      	str	r1, [r0, #0]
 800ec5a:	4844      	ldr	r0, [pc, #272]	; (800ed6c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ec5c:	6003      	str	r3, [r0, #0]
 800ec5e:	4b44      	ldr	r3, [pc, #272]	; (800ed70 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ec60:	601a      	str	r2, [r3, #0]
 800ec62:	4b44      	ldr	r3, [pc, #272]	; (800ed74 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800ec64:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ec68:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ec6c:	4b42      	ldr	r3, [pc, #264]	; (800ed78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ec6e:	d807      	bhi.n	800ec80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800ec70:	2201      	movs	r2, #1
 800ec72:	701a      	strb	r2, [r3, #0]
 800ec74:	f003 fd66 	bl	8012744 <fmc_bank0_unlock>
 800ec78:	2303      	movs	r3, #3
 800ec7a:	6023      	str	r3, [r4, #0]
 800ec7c:	2000      	movs	r0, #0
 800ec7e:	e026      	b.n	800ecce <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ec80:	4a3e      	ldr	r2, [pc, #248]	; (800ed7c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800ec82:	4291      	cmp	r1, r2
 800ec84:	d3f4      	bcc.n	800ec70 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800ec86:	2200      	movs	r2, #0
 800ec88:	701a      	strb	r2, [r3, #0]
 800ec8a:	f003 fd69 	bl	8012760 <fmc_bank1_unlock>
 800ec8e:	e7f3      	b.n	800ec78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ec90:	4d39      	ldr	r5, [pc, #228]	; (800ed78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ec92:	782b      	ldrb	r3, [r5, #0]
 800ec94:	b15b      	cbz	r3, 800ecae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800ec96:	f003 fd81 	bl	801279c <fmc_bank0_state_get>
 800ec9a:	2801      	cmp	r0, #1
 800ec9c:	d0ee      	beq.n	800ec7c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800ec9e:	7829      	ldrb	r1, [r5, #0]
 800eca0:	4b37      	ldr	r3, [pc, #220]	; (800ed80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eca2:	b939      	cbnz	r1, 800ecb4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800eca4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eca6:	f022 0201 	bic.w	r2, r2, #1
 800ecaa:	651a      	str	r2, [r3, #80]	; 0x50
 800ecac:	e006      	b.n	800ecbc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800ecae:	f003 fd87 	bl	80127c0 <fmc_bank1_state_get>
 800ecb2:	e7f2      	b.n	800ec9a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800ecb4:	691a      	ldr	r2, [r3, #16]
 800ecb6:	f022 0201 	bic.w	r2, r2, #1
 800ecba:	611a      	str	r2, [r3, #16]
 800ecbc:	4b2c      	ldr	r3, [pc, #176]	; (800ed70 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ecbe:	681b      	ldr	r3, [r3, #0]
 800ecc0:	b94b      	cbnz	r3, 800ecd6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800ecc2:	b129      	cbz	r1, 800ecd0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800ecc4:	f003 fd5a 	bl	801277c <fmc_bank0_lock>
 800ecc8:	2300      	movs	r3, #0
 800ecca:	2001      	movs	r0, #1
 800eccc:	6023      	str	r3, [r4, #0]
 800ecce:	bd70      	pop	{r4, r5, r6, pc}
 800ecd0:	f003 fd5c 	bl	801278c <fmc_bank1_lock>
 800ecd4:	e7f8      	b.n	800ecc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800ecd6:	2304      	movs	r3, #4
 800ecd8:	e7cf      	b.n	800ec7a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800ecda:	4a25      	ldr	r2, [pc, #148]	; (800ed70 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ecdc:	6813      	ldr	r3, [r2, #0]
 800ecde:	2b03      	cmp	r3, #3
 800ece0:	d91a      	bls.n	800ed18 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800ece2:	4b25      	ldr	r3, [pc, #148]	; (800ed78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ece4:	7819      	ldrb	r1, [r3, #0]
 800ece6:	4b26      	ldr	r3, [pc, #152]	; (800ed80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ece8:	b189      	cbz	r1, 800ed0e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800ecea:	6919      	ldr	r1, [r3, #16]
 800ecec:	f041 0101 	orr.w	r1, r1, #1
 800ecf0:	6119      	str	r1, [r3, #16]
 800ecf2:	4d1e      	ldr	r5, [pc, #120]	; (800ed6c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ecf4:	481c      	ldr	r0, [pc, #112]	; (800ed68 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800ecf6:	6829      	ldr	r1, [r5, #0]
 800ecf8:	6803      	ldr	r3, [r0, #0]
 800ecfa:	f851 6b04 	ldr.w	r6, [r1], #4
 800ecfe:	f843 6b04 	str.w	r6, [r3], #4
 800ed02:	6003      	str	r3, [r0, #0]
 800ed04:	6813      	ldr	r3, [r2, #0]
 800ed06:	6029      	str	r1, [r5, #0]
 800ed08:	3b04      	subs	r3, #4
 800ed0a:	6013      	str	r3, [r2, #0]
 800ed0c:	e7b4      	b.n	800ec78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ed0e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800ed10:	f041 0101 	orr.w	r1, r1, #1
 800ed14:	6519      	str	r1, [r3, #80]	; 0x50
 800ed16:	e7ec      	b.n	800ecf2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800ed18:	2b00      	cmp	r3, #0
 800ed1a:	d0ad      	beq.n	800ec78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ed1c:	4b16      	ldr	r3, [pc, #88]	; (800ed78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ed1e:	781a      	ldrb	r2, [r3, #0]
 800ed20:	4b17      	ldr	r3, [pc, #92]	; (800ed80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ed22:	b152      	cbz	r2, 800ed3a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800ed24:	691a      	ldr	r2, [r3, #16]
 800ed26:	f042 0201 	orr.w	r2, r2, #1
 800ed2a:	611a      	str	r2, [r3, #16]
 800ed2c:	4a0f      	ldr	r2, [pc, #60]	; (800ed6c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ed2e:	4b0e      	ldr	r3, [pc, #56]	; (800ed68 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800ed30:	6812      	ldr	r2, [r2, #0]
 800ed32:	681b      	ldr	r3, [r3, #0]
 800ed34:	6812      	ldr	r2, [r2, #0]
 800ed36:	601a      	str	r2, [r3, #0]
 800ed38:	e79e      	b.n	800ec78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ed3a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ed3c:	f042 0201 	orr.w	r2, r2, #1
 800ed40:	651a      	str	r2, [r3, #80]	; 0x50
 800ed42:	e7f3      	b.n	800ed2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800ed44:	4b0c      	ldr	r3, [pc, #48]	; (800ed78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ed46:	781a      	ldrb	r2, [r3, #0]
 800ed48:	4b0d      	ldr	r3, [pc, #52]	; (800ed80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ed4a:	b132      	cbz	r2, 800ed5a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800ed4c:	691a      	ldr	r2, [r3, #16]
 800ed4e:	f022 0202 	bic.w	r2, r2, #2
 800ed52:	611a      	str	r2, [r3, #16]
 800ed54:	2000      	movs	r0, #0
 800ed56:	6020      	str	r0, [r4, #0]
 800ed58:	e7b9      	b.n	800ecce <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ed5a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ed5c:	f022 0202 	bic.w	r2, r2, #2
 800ed60:	651a      	str	r2, [r3, #80]	; 0x50
 800ed62:	e7f7      	b.n	800ed54 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800ed64:	20002f50 	andcs	r2, r0, r0, asr pc
 800ed68:	20002f4c 	andcs	r2, r0, ip, asr #30
 800ed6c:	20002f58 	andcs	r2, r0, r8, asr pc
 800ed70:	20002f60 	andcs	r2, r0, r0, ror #30
 800ed74:	1ffff700 	svcne	0x00fff700
 800ed78:	20002f5c 	andcs	r2, r0, ip, asr pc
 800ed7c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ed80:	40022000 	andmi	r2, r2, r0

0800ed84 <net_timers_run>:
 800ed84:	4b05      	ldr	r3, [pc, #20]	; (800ed9c <net_timers_run+0x18>)
 800ed86:	4a06      	ldr	r2, [pc, #24]	; (800eda0 <net_timers_run+0x1c>)
 800ed88:	681b      	ldr	r3, [r3, #0]
 800ed8a:	6811      	ldr	r1, [r2, #0]
 800ed8c:	4299      	cmp	r1, r3
 800ed8e:	d803      	bhi.n	800ed98 <net_timers_run+0x14>
 800ed90:	3364      	adds	r3, #100	; 0x64
 800ed92:	6013      	str	r3, [r2, #0]
 800ed94:	f001 be78 	b.w	8010a88 <igmp_timer>
 800ed98:	4770      	bx	lr
 800ed9a:	bf00      	nop
 800ed9c:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800eda0:	20002f7c 	andcs	r2, r0, ip, ror pc

0800eda4 <rfc3927>:
 800eda4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eda8:	4606      	mov	r6, r0
 800edaa:	25ff      	movs	r5, #255	; 0xff
 800edac:	4b18      	ldr	r3, [pc, #96]	; (800ee10 <rfc3927+0x6c>)
 800edae:	4f19      	ldr	r7, [pc, #100]	; (800ee14 <rfc3927+0x70>)
 800edb0:	791a      	ldrb	r2, [r3, #4]
 800edb2:	78dc      	ldrb	r4, [r3, #3]
 800edb4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ee18 <rfc3927+0x74>
 800edb8:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800edbc:	f8d7 9000 	ldr.w	r9, [r7]
 800edc0:	f8df b058 	ldr.w	fp, [pc, #88]	; 800ee1c <rfc3927+0x78>
 800edc4:	f8df a058 	ldr.w	sl, [pc, #88]	; 800ee20 <rfc3927+0x7c>
 800edc8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800edcc:	4659      	mov	r1, fp
 800edce:	4620      	mov	r0, r4
 800edd0:	f001 fbb8 	bl	8010544 <arp_cache_lookup>
 800edd4:	b190      	cbz	r0, 800edfc <rfc3927+0x58>
 800edd6:	ba24      	rev	r4, r4
 800edd8:	3401      	adds	r4, #1
 800edda:	3d01      	subs	r5, #1
 800eddc:	ba24      	rev	r4, r4
 800edde:	b2ad      	uxth	r5, r5
 800ede0:	4554      	cmp	r4, sl
 800ede2:	bf08      	it	eq
 800ede4:	4644      	moveq	r4, r8
 800ede6:	b18d      	cbz	r5, 800ee0c <rfc3927+0x68>
 800ede8:	683b      	ldr	r3, [r7, #0]
 800edea:	eba3 0309 	sub.w	r3, r3, r9
 800edee:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800edf2:	d3eb      	bcc.n	800edcc <rfc3927+0x28>
 800edf4:	2400      	movs	r4, #0
 800edf6:	4623      	mov	r3, r4
 800edf8:	4620      	mov	r0, r4
 800edfa:	e002      	b.n	800ee02 <rfc3927+0x5e>
 800edfc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ee00:	2001      	movs	r0, #1
 800ee02:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800ee06:	6034      	str	r4, [r6, #0]
 800ee08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee0c:	462c      	mov	r4, r5
 800ee0e:	e7f2      	b.n	800edf6 <rfc3927+0x52>
 800ee10:	20002f80 	andcs	r2, r0, r0, lsl #31
 800ee14:	2000af0c 	andcs	sl, r0, ip, lsl #30
 800ee18:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800ee1c:	20002f88 	andcs	r2, r0, r8, lsl #31
 800ee20:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800ee24 <_init_tcb>:
 800ee24:	b510      	push	{r4, lr}
 800ee26:	4603      	mov	r3, r0
 800ee28:	2400      	movs	r4, #0
 800ee2a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800ee2e:	4293      	cmp	r3, r2
 800ee30:	d10d      	bne.n	800ee4e <_init_tcb+0x2a>
 800ee32:	4b08      	ldr	r3, [pc, #32]	; (800ee54 <_init_tcb+0x30>)
 800ee34:	f640 3268 	movw	r2, #2920	; 0xb68
 800ee38:	681b      	ldr	r3, [r3, #0]
 800ee3a:	8702      	strh	r2, [r0, #56]	; 0x38
 800ee3c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ee40:	6283      	str	r3, [r0, #40]	; 0x28
 800ee42:	6243      	str	r3, [r0, #36]	; 0x24
 800ee44:	2301      	movs	r3, #1
 800ee46:	8001      	strh	r1, [r0, #0]
 800ee48:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ee4c:	bd10      	pop	{r4, pc}
 800ee4e:	f803 4b01 	strb.w	r4, [r3], #1
 800ee52:	e7ec      	b.n	800ee2e <_init_tcb+0xa>
 800ee54:	2000af0c 	andcs	sl, r0, ip, lsl #30

0800ee58 <memcpy.isra.0>:
 800ee58:	3801      	subs	r0, #1
 800ee5a:	440a      	add	r2, r1
 800ee5c:	4291      	cmp	r1, r2
 800ee5e:	d100      	bne.n	800ee62 <memcpy.isra.0+0xa>
 800ee60:	4770      	bx	lr
 800ee62:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ee66:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ee6a:	e7f7      	b.n	800ee5c <memcpy.isra.0+0x4>

0800ee6c <_bswap32>:
 800ee6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ee6e:	2204      	movs	r2, #4
 800ee70:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800ee74:	4629      	mov	r1, r5
 800ee76:	4604      	mov	r4, r0
 800ee78:	eb0d 0002 	add.w	r0, sp, r2
 800ee7c:	f7ff ffec 	bl	800ee58 <memcpy.isra.0>
 800ee80:	2204      	movs	r2, #4
 800ee82:	9b01      	ldr	r3, [sp, #4]
 800ee84:	eb0d 0102 	add.w	r1, sp, r2
 800ee88:	ba1b      	rev	r3, r3
 800ee8a:	4628      	mov	r0, r5
 800ee8c:	9301      	str	r3, [sp, #4]
 800ee8e:	f7ff ffe3 	bl	800ee58 <memcpy.isra.0>
 800ee92:	2204      	movs	r2, #4
 800ee94:	3426      	adds	r4, #38	; 0x26
 800ee96:	eb0d 0002 	add.w	r0, sp, r2
 800ee9a:	4621      	mov	r1, r4
 800ee9c:	f7ff ffdc 	bl	800ee58 <memcpy.isra.0>
 800eea0:	2204      	movs	r2, #4
 800eea2:	9b01      	ldr	r3, [sp, #4]
 800eea4:	4620      	mov	r0, r4
 800eea6:	ba1b      	rev	r3, r3
 800eea8:	eb0d 0102 	add.w	r1, sp, r2
 800eeac:	9301      	str	r3, [sp, #4]
 800eeae:	f7ff ffd3 	bl	800ee58 <memcpy.isra.0>
 800eeb2:	b003      	add	sp, #12
 800eeb4:	bd30      	pop	{r4, r5, pc}
	...

0800eeb8 <_tcp_send_package>:
 800eeb8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800eebc:	7a0b      	ldrb	r3, [r1, #8]
 800eebe:	4605      	mov	r5, r0
 800eec0:	f013 0f02 	tst.w	r3, #2
 800eec4:	bf0c      	ite	eq
 800eec6:	f04f 0805 	moveq.w	r8, #5
 800eeca:	f04f 0806 	movne.w	r8, #6
 800eece:	f04f 0a00 	mov.w	sl, #0
 800eed2:	4c47      	ldr	r4, [pc, #284]	; (800eff0 <_tcp_send_package+0x138>)
 800eed4:	460f      	mov	r7, r1
 800eed6:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800eed8:	f100 0108 	add.w	r1, r0, #8
 800eedc:	2206      	movs	r2, #6
 800eede:	4620      	mov	r0, r4
 800eee0:	f7ff ffba 	bl	800ee58 <memcpy.isra.0>
 800eee4:	4a43      	ldr	r2, [pc, #268]	; (800eff4 <_tcp_send_package+0x13c>)
 800eee6:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800eeea:	8813      	ldrh	r3, [r2, #0]
 800eeec:	b2b6      	uxth	r6, r6
 800eeee:	1c59      	adds	r1, r3, #1
 800eef0:	8263      	strh	r3, [r4, #18]
 800eef2:	f105 0904 	add.w	r9, r5, #4
 800eef6:	f106 0314 	add.w	r3, r6, #20
 800eefa:	ba5b      	rev16	r3, r3
 800eefc:	8011      	strh	r1, [r2, #0]
 800eefe:	f104 001e 	add.w	r0, r4, #30
 800ef02:	2204      	movs	r2, #4
 800ef04:	4649      	mov	r1, r9
 800ef06:	8223      	strh	r3, [r4, #16]
 800ef08:	f7ff ffa6 	bl	800ee58 <memcpy.isra.0>
 800ef0c:	2114      	movs	r1, #20
 800ef0e:	f104 000e 	add.w	r0, r4, #14
 800ef12:	f8a4 a018 	strh.w	sl, [r4, #24]
 800ef16:	f001 fe4a 	bl	8010bae <net_chksum>
 800ef1a:	882b      	ldrh	r3, [r5, #0]
 800ef1c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800ef20:	8463      	strh	r3, [r4, #34]	; 0x22
 800ef22:	886b      	ldrh	r3, [r5, #2]
 800ef24:	8320      	strh	r0, [r4, #24]
 800ef26:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ef28:	683b      	ldr	r3, [r7, #0]
 800ef2a:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800ef2c:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800ef30:	687b      	ldr	r3, [r7, #4]
 800ef32:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800ef36:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800ef3a:	7a3b      	ldrb	r3, [r7, #8]
 800ef3c:	8622      	strh	r2, [r4, #48]	; 0x30
 800ef3e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800ef42:	079b      	lsls	r3, r3, #30
 800ef44:	bf48      	it	mi
 800ef46:	f240 4302 	movwmi	r3, #1026	; 0x402
 800ef4a:	8baa      	ldrh	r2, [r5, #28]
 800ef4c:	bf48      	it	mi
 800ef4e:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800ef50:	86a2      	strh	r2, [r4, #52]	; 0x34
 800ef52:	bf42      	ittt	mi
 800ef54:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800ef58:	4622      	movmi	r2, r4
 800ef5a:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800ef5e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ef60:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800ef64:	bf58      	it	pl
 800ef66:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800ef6a:	2b00      	cmp	r3, #0
 800ef6c:	d13e      	bne.n	800efec <_tcp_send_package+0x134>
 800ef6e:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ef70:	481f      	ldr	r0, [pc, #124]	; (800eff0 <_tcp_send_package+0x138>)
 800ef72:	ba5b      	rev16	r3, r3
 800ef74:	8463      	strh	r3, [r4, #34]	; 0x22
 800ef76:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800ef78:	ba5b      	rev16	r3, r3
 800ef7a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ef7c:	f7ff ff76 	bl	800ee6c <_bswap32>
 800ef80:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ef82:	a801      	add	r0, sp, #4
 800ef84:	ba5b      	rev16	r3, r3
 800ef86:	8623      	strh	r3, [r4, #48]	; 0x30
 800ef88:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ef8a:	220c      	movs	r2, #12
 800ef8c:	ba5b      	rev16	r3, r3
 800ef8e:	491a      	ldr	r1, [pc, #104]	; (800eff8 <_tcp_send_package+0x140>)
 800ef90:	86a3      	strh	r3, [r4, #52]	; 0x34
 800ef92:	f7ff ff61 	bl	800ee58 <memcpy.isra.0>
 800ef96:	2204      	movs	r2, #4
 800ef98:	4918      	ldr	r1, [pc, #96]	; (800effc <_tcp_send_package+0x144>)
 800ef9a:	4817      	ldr	r0, [pc, #92]	; (800eff8 <_tcp_send_package+0x140>)
 800ef9c:	f7ff ff5c 	bl	800ee58 <memcpy.isra.0>
 800efa0:	2204      	movs	r2, #4
 800efa2:	4649      	mov	r1, r9
 800efa4:	4816      	ldr	r0, [pc, #88]	; (800f000 <_tcp_send_package+0x148>)
 800efa6:	f7ff ff57 	bl	800ee58 <memcpy.isra.0>
 800efaa:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800efae:	f106 010c 	add.w	r1, r6, #12
 800efb2:	83e3      	strh	r3, [r4, #30]
 800efb4:	4810      	ldr	r0, [pc, #64]	; (800eff8 <_tcp_send_package+0x140>)
 800efb6:	ba73      	rev16	r3, r6
 800efb8:	8423      	strh	r3, [r4, #32]
 800efba:	f001 fdf8 	bl	8010bae <net_chksum>
 800efbe:	a901      	add	r1, sp, #4
 800efc0:	4605      	mov	r5, r0
 800efc2:	220c      	movs	r2, #12
 800efc4:	480c      	ldr	r0, [pc, #48]	; (800eff8 <_tcp_send_package+0x140>)
 800efc6:	f7ff ff47 	bl	800ee58 <memcpy.isra.0>
 800efca:	4809      	ldr	r0, [pc, #36]	; (800eff0 <_tcp_send_package+0x138>)
 800efcc:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800efd0:	8665      	strh	r5, [r4, #50]	; 0x32
 800efd2:	b004      	add	sp, #16
 800efd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800efd8:	f003 bfaa 	b.w	8012f30 <emac_eth_send>
 800efdc:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800efde:	5cc9      	ldrb	r1, [r1, r3]
 800efe0:	54d1      	strb	r1, [r2, r3]
 800efe2:	3301      	adds	r3, #1
 800efe4:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800efe6:	4299      	cmp	r1, r3
 800efe8:	d8f8      	bhi.n	800efdc <_tcp_send_package+0x124>
 800efea:	e7c0      	b.n	800ef6e <_tcp_send_package+0xb6>
 800efec:	2300      	movs	r3, #0
 800efee:	e7f9      	b.n	800efe4 <_tcp_send_package+0x12c>
 800eff0:	20003b48 	andcs	r3, r0, r8, asr #22
 800eff4:	20002f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
 800eff8:	20003b5e 	andcs	r3, r0, lr, asr fp
 800effc:	20002f64 	andcs	r2, r0, r4, ror #30
 800f000:	20003b62 	andcs	r3, r0, r2, ror #22

0800f004 <_send_reset>:
 800f004:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f006:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f00a:	4604      	mov	r4, r0
 800f00c:	075a      	lsls	r2, r3, #29
 800f00e:	460e      	mov	r6, r1
 800f010:	d421      	bmi.n	800f056 <_send_reset+0x52>
 800f012:	2204      	movs	r2, #4
 800f014:	f013 0310 	ands.w	r3, r3, #16
 800f018:	f88d 200c 	strb.w	r2, [sp, #12]
 800f01c:	d01d      	beq.n	800f05a <_send_reset+0x56>
 800f01e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f022:	4668      	mov	r0, sp
 800f024:	f7ff ff18 	bl	800ee58 <memcpy.isra.0>
 800f028:	9b00      	ldr	r3, [sp, #0]
 800f02a:	9301      	str	r3, [sp, #4]
 800f02c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f030:	4668      	mov	r0, sp
 800f032:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f036:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f03a:	07db      	lsls	r3, r3, #31
 800f03c:	f04f 0204 	mov.w	r2, #4
 800f040:	bf48      	it	mi
 800f042:	3501      	addmi	r5, #1
 800f044:	f7ff ff08 	bl	800ee58 <memcpy.isra.0>
 800f048:	9b00      	ldr	r3, [sp, #0]
 800f04a:	4630      	mov	r0, r6
 800f04c:	441d      	add	r5, r3
 800f04e:	a901      	add	r1, sp, #4
 800f050:	9502      	str	r5, [sp, #8]
 800f052:	f7ff ff31 	bl	800eeb8 <_tcp_send_package>
 800f056:	b004      	add	sp, #16
 800f058:	bd70      	pop	{r4, r5, r6, pc}
 800f05a:	9301      	str	r3, [sp, #4]
 800f05c:	2314      	movs	r3, #20
 800f05e:	f88d 300c 	strb.w	r3, [sp, #12]
 800f062:	e7e3      	b.n	800f02c <_send_reset+0x28>

0800f064 <tcp_begin>:
 800f064:	b508      	push	{r3, lr}
 800f066:	4b0a      	ldr	r3, [pc, #40]	; (800f090 <tcp_begin+0x2c>)
 800f068:	4601      	mov	r1, r0
 800f06a:	881a      	ldrh	r2, [r3, #0]
 800f06c:	4282      	cmp	r2, r0
 800f06e:	d102      	bne.n	800f076 <tcp_begin+0x12>
 800f070:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f074:	b130      	cbz	r0, 800f084 <tcp_begin+0x20>
 800f076:	b12a      	cbz	r2, 800f084 <tcp_begin+0x20>
 800f078:	4806      	ldr	r0, [pc, #24]	; (800f094 <tcp_begin+0x30>)
 800f07a:	f002 fefb 	bl	8011e74 <console_error>
 800f07e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f082:	bd08      	pop	{r3, pc}
 800f084:	4802      	ldr	r0, [pc, #8]	; (800f090 <tcp_begin+0x2c>)
 800f086:	8019      	strh	r1, [r3, #0]
 800f088:	f7ff fecc 	bl	800ee24 <_init_tcb>
 800f08c:	2000      	movs	r0, #0
 800f08e:	e7f8      	b.n	800f082 <tcp_begin+0x1e>
 800f090:	20003b04 	andcs	r3, r0, r4, lsl #22
 800f094:	0801663a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, sp, lr}

0800f098 <tcp_write>:
 800f098:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f09c:	429a      	cmp	r2, r3
 800f09e:	bf28      	it	cs
 800f0a0:	461a      	movcs	r2, r3
 800f0a2:	2344      	movs	r3, #68	; 0x44
 800f0a4:	b530      	push	{r4, r5, lr}
 800f0a6:	4c0d      	ldr	r4, [pc, #52]	; (800f0dc <tcp_write+0x44>)
 800f0a8:	b085      	sub	sp, #20
 800f0aa:	fb03 4400 	mla	r4, r3, r0, r4
 800f0ae:	6963      	ldr	r3, [r4, #20]
 800f0b0:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f0b2:	9301      	str	r3, [sp, #4]
 800f0b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f0b6:	4620      	mov	r0, r4
 800f0b8:	9302      	str	r3, [sp, #8]
 800f0ba:	2318      	movs	r3, #24
 800f0bc:	8622      	strh	r2, [r4, #48]	; 0x30
 800f0be:	a901      	add	r1, sp, #4
 800f0c0:	4615      	mov	r5, r2
 800f0c2:	f88d 300c 	strb.w	r3, [sp, #12]
 800f0c6:	f7ff fef7 	bl	800eeb8 <_tcp_send_package>
 800f0ca:	2300      	movs	r3, #0
 800f0cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f0ce:	8623      	strh	r3, [r4, #48]	; 0x30
 800f0d0:	6963      	ldr	r3, [r4, #20]
 800f0d2:	442b      	add	r3, r5
 800f0d4:	6163      	str	r3, [r4, #20]
 800f0d6:	b005      	add	sp, #20
 800f0d8:	bd30      	pop	{r4, r5, pc}
 800f0da:	bf00      	nop
 800f0dc:	20003b04 	andcs	r3, r0, r4, lsl #22

0800f0e0 <tcp_read>:
 800f0e0:	2344      	movs	r3, #68	; 0x44
 800f0e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0e4:	4c1c      	ldr	r4, [pc, #112]	; (800f158 <tcp_read+0x78>)
 800f0e6:	b085      	sub	sp, #20
 800f0e8:	fb03 4400 	mla	r4, r3, r0, r4
 800f0ec:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f0f0:	2b07      	cmp	r3, #7
 800f0f2:	d112      	bne.n	800f11a <tcp_read+0x3a>
 800f0f4:	6963      	ldr	r3, [r4, #20]
 800f0f6:	4620      	mov	r0, r4
 800f0f8:	9301      	str	r3, [sp, #4]
 800f0fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f0fc:	a901      	add	r1, sp, #4
 800f0fe:	9302      	str	r3, [sp, #8]
 800f100:	2311      	movs	r3, #17
 800f102:	f88d 300c 	strb.w	r3, [sp, #12]
 800f106:	f7ff fed7 	bl	800eeb8 <_tcp_send_package>
 800f10a:	2309      	movs	r3, #9
 800f10c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f110:	6963      	ldr	r3, [r4, #20]
 800f112:	3301      	adds	r3, #1
 800f114:	6163      	str	r3, [r4, #20]
 800f116:	2000      	movs	r0, #0
 800f118:	e01b      	b.n	800f152 <tcp_read+0x72>
 800f11a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f11e:	4358      	muls	r0, r3
 800f120:	4a0e      	ldr	r2, [pc, #56]	; (800f15c <tcp_read+0x7c>)
 800f122:	1817      	adds	r7, r2, r0
 800f124:	887b      	ldrh	r3, [r7, #2]
 800f126:	5a15      	ldrh	r5, [r2, r0]
 800f128:	429d      	cmp	r5, r3
 800f12a:	d0f4      	beq.n	800f116 <tcp_read+0x36>
 800f12c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f130:	435d      	muls	r5, r3
 800f132:	1d06      	adds	r6, r0, #4
 800f134:	442e      	add	r6, r5
 800f136:	4416      	add	r6, r2
 800f138:	4405      	add	r5, r0
 800f13a:	600e      	str	r6, [r1, #0]
 800f13c:	442a      	add	r2, r5
 800f13e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f142:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f144:	3301      	adds	r3, #1
 800f146:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f14a:	f003 0301 	and.w	r3, r3, #1
 800f14e:	8722      	strh	r2, [r4, #56]	; 0x38
 800f150:	807b      	strh	r3, [r7, #2]
 800f152:	b005      	add	sp, #20
 800f154:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f156:	bf00      	nop
 800f158:	20003b04 	andcs	r3, r0, r4, lsl #22
 800f15c:	20002f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>

0800f160 <memcpy.isra.0>:
 800f160:	3801      	subs	r0, #1
 800f162:	440a      	add	r2, r1
 800f164:	4291      	cmp	r1, r2
 800f166:	d100      	bne.n	800f16a <memcpy.isra.0+0xa>
 800f168:	4770      	bx	lr
 800f16a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f16e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f172:	e7f7      	b.n	800f164 <memcpy.isra.0+0x4>

0800f174 <net_memcpy>:
 800f174:	ea40 0301 	orr.w	r3, r0, r1
 800f178:	079b      	lsls	r3, r3, #30
 800f17a:	b570      	push	{r4, r5, r6, lr}
 800f17c:	d108      	bne.n	800f190 <net_memcpy+0x1c>
 800f17e:	f022 0303 	bic.w	r3, r2, #3
 800f182:	1f04      	subs	r4, r0, #4
 800f184:	18cd      	adds	r5, r1, r3
 800f186:	42a9      	cmp	r1, r5
 800f188:	d108      	bne.n	800f19c <net_memcpy+0x28>
 800f18a:	1ad2      	subs	r2, r2, r3
 800f18c:	4403      	add	r3, r0
 800f18e:	e000      	b.n	800f192 <net_memcpy+0x1e>
 800f190:	4603      	mov	r3, r0
 800f192:	3b01      	subs	r3, #1
 800f194:	440a      	add	r2, r1
 800f196:	4291      	cmp	r1, r2
 800f198:	d105      	bne.n	800f1a6 <net_memcpy+0x32>
 800f19a:	bd70      	pop	{r4, r5, r6, pc}
 800f19c:	f851 6b04 	ldr.w	r6, [r1], #4
 800f1a0:	f844 6f04 	str.w	r6, [r4, #4]!
 800f1a4:	e7ef      	b.n	800f186 <net_memcpy+0x12>
 800f1a6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f1aa:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f1ae:	e7f2      	b.n	800f196 <net_memcpy+0x22>

0800f1b0 <udp_set_ip>:
 800f1b0:	2204      	movs	r2, #4
 800f1b2:	b513      	push	{r0, r1, r4, lr}
 800f1b4:	4604      	mov	r4, r0
 800f1b6:	6803      	ldr	r3, [r0, #0]
 800f1b8:	eb0d 0102 	add.w	r1, sp, r2
 800f1bc:	4808      	ldr	r0, [pc, #32]	; (800f1e0 <udp_set_ip+0x30>)
 800f1be:	9301      	str	r3, [sp, #4]
 800f1c0:	f7ff ffce 	bl	800f160 <memcpy.isra.0>
 800f1c4:	6862      	ldr	r2, [r4, #4]
 800f1c6:	4b07      	ldr	r3, [pc, #28]	; (800f1e4 <udp_set_ip+0x34>)
 800f1c8:	43d1      	mvns	r1, r2
 800f1ca:	6019      	str	r1, [r3, #0]
 800f1cc:	6823      	ldr	r3, [r4, #0]
 800f1ce:	4013      	ands	r3, r2
 800f1d0:	4a05      	ldr	r2, [pc, #20]	; (800f1e8 <udp_set_ip+0x38>)
 800f1d2:	6013      	str	r3, [r2, #0]
 800f1d4:	68a2      	ldr	r2, [r4, #8]
 800f1d6:	4b05      	ldr	r3, [pc, #20]	; (800f1ec <udp_set_ip+0x3c>)
 800f1d8:	601a      	str	r2, [r3, #0]
 800f1da:	b002      	add	sp, #8
 800f1dc:	bd10      	pop	{r4, pc}
 800f1de:	bf00      	nop
 800f1e0:	20009e1e 	andcs	r9, r0, lr, lsl lr
 800f1e4:	20004134 	andcs	r4, r0, r4, lsr r1
 800f1e8:	2000413c 	andcs	r4, r0, ip, lsr r1
 800f1ec:	20004138 	andcs	r4, r0, r8, lsr r1

0800f1f0 <udp_bind>:
 800f1f0:	4a0a      	ldr	r2, [pc, #40]	; (800f21c <udp_bind+0x2c>)
 800f1f2:	4603      	mov	r3, r0
 800f1f4:	b510      	push	{r4, lr}
 800f1f6:	2000      	movs	r0, #0
 800f1f8:	4614      	mov	r4, r2
 800f1fa:	f852 1b04 	ldr.w	r1, [r2], #4
 800f1fe:	4299      	cmp	r1, r3
 800f200:	d008      	beq.n	800f214 <udp_bind+0x24>
 800f202:	b141      	cbz	r1, 800f216 <udp_bind+0x26>
 800f204:	3001      	adds	r0, #1
 800f206:	2808      	cmp	r0, #8
 800f208:	d1f7      	bne.n	800f1fa <udp_bind+0xa>
 800f20a:	4805      	ldr	r0, [pc, #20]	; (800f220 <udp_bind+0x30>)
 800f20c:	f002 fe32 	bl	8011e74 <console_error>
 800f210:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f214:	bd10      	pop	{r4, pc}
 800f216:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f21a:	e7fb      	b.n	800f214 <udp_bind+0x24>
 800f21c:	20004144 	andcs	r4, r0, r4, asr #2
 800f220:	0801665a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, sp, lr}

0800f224 <udp_unbind>:
 800f224:	4a0c      	ldr	r2, [pc, #48]	; (800f258 <udp_unbind+0x34>)
 800f226:	2300      	movs	r3, #0
 800f228:	4611      	mov	r1, r2
 800f22a:	b510      	push	{r4, lr}
 800f22c:	f852 4b04 	ldr.w	r4, [r2], #4
 800f230:	4284      	cmp	r4, r0
 800f232:	d108      	bne.n	800f246 <udp_unbind+0x22>
 800f234:	2000      	movs	r0, #0
 800f236:	f640 3294 	movw	r2, #2964	; 0xb94
 800f23a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f23e:	4353      	muls	r3, r2
 800f240:	4a06      	ldr	r2, [pc, #24]	; (800f25c <udp_unbind+0x38>)
 800f242:	50d0      	str	r0, [r2, r3]
 800f244:	bd10      	pop	{r4, pc}
 800f246:	3301      	adds	r3, #1
 800f248:	2b08      	cmp	r3, #8
 800f24a:	d1ef      	bne.n	800f22c <udp_unbind+0x8>
 800f24c:	4804      	ldr	r0, [pc, #16]	; (800f260 <udp_unbind+0x3c>)
 800f24e:	f002 fe11 	bl	8011e74 <console_error>
 800f252:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f256:	e7f5      	b.n	800f244 <udp_unbind+0x20>
 800f258:	20004144 	andcs	r4, r0, r4, asr #2
 800f25c:	20004164 	andcs	r4, r0, r4, ror #2
 800f260:	0801665f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}

0800f264 <udp_recv>:
 800f264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f268:	4604      	mov	r4, r0
 800f26a:	4698      	mov	r8, r3
 800f26c:	f640 3394 	movw	r3, #2964	; 0xb94
 800f270:	435c      	muls	r4, r3
 800f272:	4608      	mov	r0, r1
 800f274:	4915      	ldr	r1, [pc, #84]	; (800f2cc <udp_recv+0x68>)
 800f276:	190f      	adds	r7, r1, r4
 800f278:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f27c:	5b0b      	ldrh	r3, [r1, r4]
 800f27e:	4563      	cmp	r3, ip
 800f280:	d021      	beq.n	800f2c6 <udp_recv+0x62>
 800f282:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f286:	fb03 fc0c 	mul.w	ip, r3, ip
 800f28a:	eb0c 0604 	add.w	r6, ip, r4
 800f28e:	440e      	add	r6, r1
 800f290:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f294:	3404      	adds	r4, #4
 800f296:	4295      	cmp	r5, r2
 800f298:	bf28      	it	cs
 800f29a:	4615      	movcs	r5, r2
 800f29c:	4464      	add	r4, ip
 800f29e:	462a      	mov	r2, r5
 800f2a0:	4421      	add	r1, r4
 800f2a2:	f7ff ff67 	bl	800f174 <net_memcpy>
 800f2a6:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f2aa:	f8c8 3000 	str.w	r3, [r8]
 800f2ae:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f2b2:	9b06      	ldr	r3, [sp, #24]
 800f2b4:	801a      	strh	r2, [r3, #0]
 800f2b6:	887b      	ldrh	r3, [r7, #2]
 800f2b8:	3301      	adds	r3, #1
 800f2ba:	f003 0301 	and.w	r3, r3, #1
 800f2be:	807b      	strh	r3, [r7, #2]
 800f2c0:	4628      	mov	r0, r5
 800f2c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2c6:	2500      	movs	r5, #0
 800f2c8:	e7fa      	b.n	800f2c0 <udp_recv+0x5c>
 800f2ca:	bf00      	nop
 800f2cc:	20004164 	andcs	r4, r0, r4, ror #2

0800f2d0 <udp_recv2>:
 800f2d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f2d2:	f640 3594 	movw	r5, #2964	; 0xb94
 800f2d6:	4368      	muls	r0, r5
 800f2d8:	4c0f      	ldr	r4, [pc, #60]	; (800f318 <udp_recv2+0x48>)
 800f2da:	1827      	adds	r7, r4, r0
 800f2dc:	887d      	ldrh	r5, [r7, #2]
 800f2de:	5a26      	ldrh	r6, [r4, r0]
 800f2e0:	42ae      	cmp	r6, r5
 800f2e2:	d017      	beq.n	800f314 <udp_recv2+0x44>
 800f2e4:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f2e8:	fb0c f505 	mul.w	r5, ip, r5
 800f2ec:	1d06      	adds	r6, r0, #4
 800f2ee:	442e      	add	r6, r5
 800f2f0:	4405      	add	r5, r0
 800f2f2:	4426      	add	r6, r4
 800f2f4:	442c      	add	r4, r5
 800f2f6:	600e      	str	r6, [r1, #0]
 800f2f8:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f2fc:	6011      	str	r1, [r2, #0]
 800f2fe:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f302:	801a      	strh	r2, [r3, #0]
 800f304:	887b      	ldrh	r3, [r7, #2]
 800f306:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f30a:	3301      	adds	r3, #1
 800f30c:	f003 0301 	and.w	r3, r3, #1
 800f310:	807b      	strh	r3, [r7, #2]
 800f312:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f314:	2000      	movs	r0, #0
 800f316:	e7fc      	b.n	800f312 <udp_recv2+0x42>
 800f318:	20004164 	andcs	r4, r0, r4, ror #2

0800f31c <udp_send>:
 800f31c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f320:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f454 <udp_send+0x138>
 800f324:	461c      	mov	r4, r3
 800f326:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f32a:	4607      	mov	r7, r0
 800f32c:	4688      	mov	r8, r1
 800f32e:	4616      	mov	r6, r2
 800f330:	2b00      	cmp	r3, #0
 800f332:	f000 808b 	beq.w	800f44c <udp_send+0x130>
 800f336:	1c63      	adds	r3, r4, #1
 800f338:	d141      	bne.n	800f3be <udp_send+0xa2>
 800f33a:	4a47      	ldr	r2, [pc, #284]	; (800f458 <udp_send+0x13c>)
 800f33c:	2307      	movs	r3, #7
 800f33e:	4611      	mov	r1, r2
 800f340:	20ff      	movs	r0, #255	; 0xff
 800f342:	e001      	b.n	800f348 <udp_send+0x2c>
 800f344:	f802 0b01 	strb.w	r0, [r2], #1
 800f348:	3b01      	subs	r3, #1
 800f34a:	d1fb      	bne.n	800f344 <udp_send+0x28>
 800f34c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f350:	83cb      	strh	r3, [r1, #30]
 800f352:	840b      	strh	r3, [r1, #32]
 800f354:	2500      	movs	r5, #0
 800f356:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f45c <udp_send+0x140>
 800f35a:	4c3f      	ldr	r4, [pc, #252]	; (800f458 <udp_send+0x13c>)
 800f35c:	f8ba 3000 	ldrh.w	r3, [sl]
 800f360:	2114      	movs	r1, #20
 800f362:	8263      	strh	r3, [r4, #18]
 800f364:	f106 031c 	add.w	r3, r6, #28
 800f368:	ba5b      	rev16	r3, r3
 800f36a:	f104 000e 	add.w	r0, r4, #14
 800f36e:	8223      	strh	r3, [r4, #16]
 800f370:	8325      	strh	r5, [r4, #24]
 800f372:	f001 fc1c 	bl	8010bae <net_chksum>
 800f376:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f37a:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f37e:	ba5b      	rev16	r3, r3
 800f380:	8463      	strh	r3, [r4, #34]	; 0x22
 800f382:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f386:	4632      	mov	r2, r6
 800f388:	ba5b      	rev16	r3, r3
 800f38a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f38c:	f106 0308 	add.w	r3, r6, #8
 800f390:	ba5b      	rev16	r3, r3
 800f392:	bf28      	it	cs
 800f394:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f398:	4641      	mov	r1, r8
 800f39a:	8320      	strh	r0, [r4, #24]
 800f39c:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f3a0:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f3a2:	f7ff fee7 	bl	800f174 <net_memcpy>
 800f3a6:	4620      	mov	r0, r4
 800f3a8:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f3ac:	f003 fdc0 	bl	8012f30 <emac_eth_send>
 800f3b0:	f8ba 3000 	ldrh.w	r3, [sl]
 800f3b4:	4628      	mov	r0, r5
 800f3b6:	3301      	adds	r3, #1
 800f3b8:	f8aa 3000 	strh.w	r3, [sl]
 800f3bc:	e037      	b.n	800f42e <udp_send+0x112>
 800f3be:	4b28      	ldr	r3, [pc, #160]	; (800f460 <udp_send+0x144>)
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	43a3      	bics	r3, r4
 800f3c4:	d10f      	bne.n	800f3e6 <udp_send+0xca>
 800f3c6:	2307      	movs	r3, #7
 800f3c8:	21ff      	movs	r1, #255	; 0xff
 800f3ca:	4a23      	ldr	r2, [pc, #140]	; (800f458 <udp_send+0x13c>)
 800f3cc:	e001      	b.n	800f3d2 <udp_send+0xb6>
 800f3ce:	f802 1b01 	strb.w	r1, [r2], #1
 800f3d2:	3b01      	subs	r3, #1
 800f3d4:	d1fb      	bne.n	800f3ce <udp_send+0xb2>
 800f3d6:	2204      	movs	r2, #4
 800f3d8:	4822      	ldr	r0, [pc, #136]	; (800f464 <udp_send+0x148>)
 800f3da:	eb0d 0102 	add.w	r1, sp, r2
 800f3de:	9401      	str	r4, [sp, #4]
 800f3e0:	f7ff febe 	bl	800f160 <memcpy.isra.0>
 800f3e4:	e7b6      	b.n	800f354 <udp_send+0x38>
 800f3e6:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f3ea:	2be0      	cmp	r3, #224	; 0xe0
 800f3ec:	d10e      	bne.n	800f40c <udp_send+0xf0>
 800f3ee:	491e      	ldr	r1, [pc, #120]	; (800f468 <udp_send+0x14c>)
 800f3f0:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f3f4:	70cb      	strb	r3, [r1, #3]
 800f3f6:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f3fa:	710b      	strb	r3, [r1, #4]
 800f3fc:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f400:	2206      	movs	r2, #6
 800f402:	4815      	ldr	r0, [pc, #84]	; (800f458 <udp_send+0x13c>)
 800f404:	714b      	strb	r3, [r1, #5]
 800f406:	f7ff feab 	bl	800f160 <memcpy.isra.0>
 800f40a:	e7e4      	b.n	800f3d6 <udp_send+0xba>
 800f40c:	4b17      	ldr	r3, [pc, #92]	; (800f46c <udp_send+0x150>)
 800f40e:	681b      	ldr	r3, [r3, #0]
 800f410:	43a3      	bics	r3, r4
 800f412:	d00f      	beq.n	800f434 <udp_send+0x118>
 800f414:	4d16      	ldr	r5, [pc, #88]	; (800f470 <udp_send+0x154>)
 800f416:	4910      	ldr	r1, [pc, #64]	; (800f458 <udp_send+0x13c>)
 800f418:	6828      	ldr	r0, [r5, #0]
 800f41a:	f001 f893 	bl	8010544 <arp_cache_lookup>
 800f41e:	682b      	ldr	r3, [r5, #0]
 800f420:	4298      	cmp	r0, r3
 800f422:	d0d8      	beq.n	800f3d6 <udp_send+0xba>
 800f424:	4813      	ldr	r0, [pc, #76]	; (800f474 <udp_send+0x158>)
 800f426:	f002 fd25 	bl	8011e74 <console_error>
 800f42a:	f06f 0002 	mvn.w	r0, #2
 800f42e:	b002      	add	sp, #8
 800f430:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f434:	4620      	mov	r0, r4
 800f436:	4908      	ldr	r1, [pc, #32]	; (800f458 <udp_send+0x13c>)
 800f438:	f001 f884 	bl	8010544 <arp_cache_lookup>
 800f43c:	42a0      	cmp	r0, r4
 800f43e:	d0ca      	beq.n	800f3d6 <udp_send+0xba>
 800f440:	480d      	ldr	r0, [pc, #52]	; (800f478 <udp_send+0x15c>)
 800f442:	f002 fd17 	bl	8011e74 <console_error>
 800f446:	f06f 0001 	mvn.w	r0, #1
 800f44a:	e7f0      	b.n	800f42e <udp_send+0x112>
 800f44c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f450:	e7ed      	b.n	800f42e <udp_send+0x112>
 800f452:	bf00      	nop
 800f454:	20004144 	andcs	r4, r0, r4, asr #2
 800f458:	20009e04 	andcs	r9, r0, r4, lsl #28
 800f45c:	20004140 	andcs	r4, r0, r0, asr #2
 800f460:	20004134 	andcs	r4, r0, r4, lsr r1
 800f464:	20009e22 	andcs	r9, r0, r2, lsr #28
 800f468:	20000000 	andcs	r0, r0, r0
 800f46c:	2000413c 	andcs	r4, r0, ip, lsr r1
 800f470:	20004138 	andcs	r4, r0, r8, lsr r1
 800f474:	08016667 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, sp, lr}
 800f478:	0801668d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, sp, lr}

0800f47c <strlen>:
 800f47c:	4603      	mov	r3, r0
 800f47e:	461a      	mov	r2, r3
 800f480:	7811      	ldrb	r1, [r2, #0]
 800f482:	3301      	adds	r3, #1
 800f484:	2900      	cmp	r1, #0
 800f486:	d1fa      	bne.n	800f47e <strlen+0x2>
 800f488:	1a10      	subs	r0, r2, r0
 800f48a:	4770      	bx	lr

0800f48c <strcmp>:
 800f48c:	1e43      	subs	r3, r0, #1
 800f48e:	3901      	subs	r1, #1
 800f490:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f494:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f498:	4290      	cmp	r0, r2
 800f49a:	d001      	beq.n	800f4a0 <strcmp+0x14>
 800f49c:	1a80      	subs	r0, r0, r2
 800f49e:	e001      	b.n	800f4a4 <strcmp+0x18>
 800f4a0:	2800      	cmp	r0, #0
 800f4a2:	d1f5      	bne.n	800f490 <strcmp+0x4>
 800f4a4:	4770      	bx	lr

0800f4a6 <strcpy.isra.0>:
 800f4a6:	3801      	subs	r0, #1
 800f4a8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f4ac:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	d1f9      	bne.n	800f4a8 <strcpy.isra.0+0x2>
 800f4b4:	4770      	bx	lr

0800f4b6 <strcat.isra.0>:
 800f4b6:	b538      	push	{r3, r4, r5, lr}
 800f4b8:	4604      	mov	r4, r0
 800f4ba:	460d      	mov	r5, r1
 800f4bc:	f7ff ffde 	bl	800f47c <strlen>
 800f4c0:	4629      	mov	r1, r5
 800f4c2:	4420      	add	r0, r4
 800f4c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f4c8:	f7ff bfed 	b.w	800f4a6 <strcpy.isra.0>

0800f4cc <MDNS::MDNS()>:
 800f4cc:	b513      	push	{r0, r1, r4, lr}
 800f4ce:	4604      	mov	r4, r0
 800f4d0:	a901      	add	r1, sp, #4
 800f4d2:	4804      	ldr	r0, [pc, #16]	; (800f4e4 <MDNS::MDNS()+0x18>)
 800f4d4:	f002 fe44 	bl	8012160 <inet_aton>
 800f4d8:	4620      	mov	r0, r4
 800f4da:	4b03      	ldr	r3, [pc, #12]	; (800f4e8 <MDNS::MDNS()+0x1c>)
 800f4dc:	9a01      	ldr	r2, [sp, #4]
 800f4de:	601a      	str	r2, [r3, #0]
 800f4e0:	b002      	add	sp, #8
 800f4e2:	bd10      	pop	{r4, pc}
 800f4e4:	080166be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, sp, lr}
 800f4e8:	2000a3f8 	strdcs	sl, [r0], -r8

0800f4ec <MDNS::SetName(char const*)>:
 800f4ec:	b538      	push	{r3, r4, r5, lr}
 800f4ee:	4d0b      	ldr	r5, [pc, #44]	; (800f51c <MDNS::SetName(char const*)+0x30>)
 800f4f0:	460c      	mov	r4, r1
 800f4f2:	6828      	ldr	r0, [r5, #0]
 800f4f4:	b108      	cbz	r0, 800f4fa <MDNS::SetName(char const*)+0xe>
 800f4f6:	f002 fe2d 	bl	8012154 <operator delete[](void*)>
 800f4fa:	4620      	mov	r0, r4
 800f4fc:	f7ff ffbe 	bl	800f47c <strlen>
 800f500:	3007      	adds	r0, #7
 800f502:	f002 fe2b 	bl	801215c <operator new[](unsigned int)>
 800f506:	4621      	mov	r1, r4
 800f508:	6028      	str	r0, [r5, #0]
 800f50a:	f7ff ffcc 	bl	800f4a6 <strcpy.isra.0>
 800f50e:	6828      	ldr	r0, [r5, #0]
 800f510:	4903      	ldr	r1, [pc, #12]	; (800f520 <MDNS::SetName(char const*)+0x34>)
 800f512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f516:	f7ff bfce 	b.w	800f4b6 <strcat.isra.0>
 800f51a:	bf00      	nop
 800f51c:	2000a828 	andcs	sl, r0, r8, lsr #16
 800f520:	080166ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, sp, lr}

0800f524 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f528:	f04f 0e00 	mov.w	lr, #0
 800f52c:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800f530:	4675      	mov	r5, lr
 800f532:	4e1b      	ldr	r6, [pc, #108]	; (800f5a0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800f534:	4f1b      	ldr	r7, [pc, #108]	; (800f5a4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800f536:	780b      	ldrb	r3, [r1, #0]
 800f538:	1c68      	adds	r0, r5, #1
 800f53a:	b913      	cbnz	r3, 800f542 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800f53c:	7013      	strb	r3, [r2, #0]
 800f53e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f542:	2b3f      	cmp	r3, #63	; 0x3f
 800f544:	d91c      	bls.n	800f580 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800f546:	7849      	ldrb	r1, [r1, #1]
 800f548:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800f54c:	430b      	orrs	r3, r1
 800f54e:	6839      	ldr	r1, [r7, #0]
 800f550:	f1be 0f00 	cmp.w	lr, #0
 800f554:	bf08      	it	eq
 800f556:	4605      	moveq	r5, r0
 800f558:	5ccc      	ldrb	r4, [r1, r3]
 800f55a:	3301      	adds	r3, #1
 800f55c:	4419      	add	r1, r3
 800f55e:	2300      	movs	r3, #0
 800f560:	42a3      	cmp	r3, r4
 800f562:	5cc8      	ldrb	r0, [r1, r3]
 800f564:	d309      	bcc.n	800f57a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800f566:	f04f 0e01 	mov.w	lr, #1
 800f56a:	4421      	add	r1, r4
 800f56c:	4414      	add	r4, r2
 800f56e:	780b      	ldrb	r3, [r1, #0]
 800f570:	b10b      	cbz	r3, 800f576 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800f572:	f804 cb01 	strb.w	ip, [r4], #1
 800f576:	4622      	mov	r2, r4
 800f578:	e7dd      	b.n	800f536 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f57a:	54d0      	strb	r0, [r2, r3]
 800f57c:	3301      	adds	r3, #1
 800f57e:	e7ef      	b.n	800f560 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800f580:	4688      	mov	r8, r1
 800f582:	18d4      	adds	r4, r2, r3
 800f584:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f588:	f802 9b01 	strb.w	r9, [r2], #1
 800f58c:	4294      	cmp	r4, r2
 800f58e:	d1f9      	bne.n	800f584 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800f590:	1c5a      	adds	r2, r3, #1
 800f592:	4411      	add	r1, r2
 800f594:	f1be 0f00 	cmp.w	lr, #0
 800f598:	d1e9      	bne.n	800f56e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f59a:	181d      	adds	r5, r3, r0
 800f59c:	e7e7      	b.n	800f56e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f59e:	bf00      	nop
 800f5a0:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800f5a4:	2000a82c 	andcs	sl, r0, ip, lsr #16

0800f5a8 <MDNS::FindFirstDotFromRight(char const*) const>:
 800f5a8:	b510      	push	{r4, lr}
 800f5aa:	4608      	mov	r0, r1
 800f5ac:	460c      	mov	r4, r1
 800f5ae:	f7ff ff65 	bl	800f47c <strlen>
 800f5b2:	4420      	add	r0, r4
 800f5b4:	42a0      	cmp	r0, r4
 800f5b6:	d903      	bls.n	800f5c0 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800f5b8:	f810 3901 	ldrb.w	r3, [r0], #-1
 800f5bc:	2b2e      	cmp	r3, #46	; 0x2e
 800f5be:	d1f9      	bne.n	800f5b4 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800f5c0:	3001      	adds	r0, #1
 800f5c2:	bd10      	pop	{r4, pc}

0800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800f5c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5c6:	4614      	mov	r4, r2
 800f5c8:	460f      	mov	r7, r1
 800f5ca:	1c60      	adds	r0, r4, #1
 800f5cc:	463d      	mov	r5, r7
 800f5ce:	f817 6b01 	ldrb.w	r6, [r7], #1
 800f5d2:	b946      	cbnz	r6, 800f5e6 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800f5d4:	1a69      	subs	r1, r5, r1
 800f5d6:	7021      	strb	r1, [r4, #0]
 800f5d8:	7829      	ldrb	r1, [r5, #0]
 800f5da:	b949      	cbnz	r1, 800f5f0 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800f5dc:	b10b      	cbz	r3, 800f5e2 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800f5de:	f800 1b01 	strb.w	r1, [r0], #1
 800f5e2:	1a80      	subs	r0, r0, r2
 800f5e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5e6:	2e2e      	cmp	r6, #46	; 0x2e
 800f5e8:	d0f4      	beq.n	800f5d4 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800f5ea:	f800 6b01 	strb.w	r6, [r0], #1
 800f5ee:	e7ed      	b.n	800f5cc <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800f5f0:	4604      	mov	r4, r0
 800f5f2:	1c69      	adds	r1, r5, #1
 800f5f4:	e7e8      	b.n	800f5c8 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800f5f8 <MDNS::CreateAnswerLocalIpAddress()>:
 800f5f8:	2384      	movs	r3, #132	; 0x84
 800f5fa:	b510      	push	{r4, lr}
 800f5fc:	4c0f      	ldr	r4, [pc, #60]	; (800f63c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800f5fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800f602:	80e3      	strh	r3, [r4, #6]
 800f604:	2300      	movs	r3, #0
 800f606:	490e      	ldr	r1, [pc, #56]	; (800f640 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800f608:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800f60c:	6809      	ldr	r1, [r1, #0]
 800f60e:	f104 0210 	add.w	r2, r4, #16
 800f612:	2301      	movs	r3, #1
 800f614:	f7ff ffd6 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f618:	490a      	ldr	r1, [pc, #40]	; (800f644 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800f61a:	1813      	adds	r3, r2, r0
 800f61c:	5011      	str	r1, [r2, r0]
 800f61e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800f622:	605a      	str	r2, [r3, #4]
 800f624:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800f628:	811a      	strh	r2, [r3, #8]
 800f62a:	4a07      	ldr	r2, [pc, #28]	; (800f648 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800f62c:	6812      	ldr	r2, [r2, #0]
 800f62e:	6952      	ldr	r2, [r2, #20]
 800f630:	f8c3 200a 	str.w	r2, [r3, #10]
 800f634:	1b1b      	subs	r3, r3, r4
 800f636:	330a      	adds	r3, #10
 800f638:	6023      	str	r3, [r4, #0]
 800f63a:	bd10      	pop	{r4, pc}
 800f63c:	2000a3fc 	strdcs	sl, [r0], -ip
 800f640:	2000a828 	andcs	sl, r0, r8, lsr #16
 800f644:	01800100 	orreq	r0, r0, r0, lsl #2
 800f648:	2000a830 	andcs	sl, r0, r0, lsr r8

0800f64c <MDNS::Start()>:
 800f64c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f64e:	4c1d      	ldr	r4, [pc, #116]	; (800f6c4 <MDNS::Start()+0x78>)
 800f650:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800f654:	4605      	mov	r5, r0
 800f656:	6820      	ldr	r0, [r4, #0]
 800f658:	f000 fb28 	bl	800fcac <Network::Begin(unsigned short)>
 800f65c:	4e1a      	ldr	r6, [pc, #104]	; (800f6c8 <MDNS::Start()+0x7c>)
 800f65e:	4f1b      	ldr	r7, [pc, #108]	; (800f6cc <MDNS::Start()+0x80>)
 800f660:	4601      	mov	r1, r0
 800f662:	6030      	str	r0, [r6, #0]
 800f664:	683a      	ldr	r2, [r7, #0]
 800f666:	6820      	ldr	r0, [r4, #0]
 800f668:	f000 fb31 	bl	800fcce <Network::JoinGroup(int, unsigned int)>
 800f66c:	4b18      	ldr	r3, [pc, #96]	; (800f6d0 <MDNS::Start()+0x84>)
 800f66e:	681b      	ldr	r3, [r3, #0]
 800f670:	b923      	cbnz	r3, 800f67c <MDNS::Start()+0x30>
 800f672:	6821      	ldr	r1, [r4, #0]
 800f674:	4628      	mov	r0, r5
 800f676:	3120      	adds	r1, #32
 800f678:	f7ff ff38 	bl	800f4ec <MDNS::SetName(char const*)>
 800f67c:	4628      	mov	r0, r5
 800f67e:	f7ff ffbb 	bl	800f5f8 <MDNS::CreateAnswerLocalIpAddress()>
 800f682:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f686:	4913      	ldr	r1, [pc, #76]	; (800f6d4 <MDNS::Start()+0x88>)
 800f688:	7830      	ldrb	r0, [r6, #0]
 800f68a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f68e:	9300      	str	r3, [sp, #0]
 800f690:	683b      	ldr	r3, [r7, #0]
 800f692:	f7ff fe43 	bl	800f31c <udp_send>
 800f696:	233f      	movs	r3, #63	; 0x3f
 800f698:	6820      	ldr	r0, [r4, #0]
 800f69a:	4c0f      	ldr	r4, [pc, #60]	; (800f6d8 <MDNS::Start()+0x8c>)
 800f69c:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800f6a0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800f6a4:	b929      	cbnz	r1, 800f6b2 <MDNS::Start()+0x66>
 800f6a6:	4413      	add	r3, r2
 800f6a8:	429a      	cmp	r2, r3
 800f6aa:	d006      	beq.n	800f6ba <MDNS::Start()+0x6e>
 800f6ac:	f802 1b01 	strb.w	r1, [r2], #1
 800f6b0:	e7fa      	b.n	800f6a8 <MDNS::Start()+0x5c>
 800f6b2:	3b01      	subs	r3, #1
 800f6b4:	f802 1b01 	strb.w	r1, [r2], #1
 800f6b8:	d1f2      	bne.n	800f6a0 <MDNS::Start()+0x54>
 800f6ba:	2300      	movs	r3, #0
 800f6bc:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800f6c0:	b003      	add	sp, #12
 800f6c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6c4:	2000a830 	andcs	sl, r0, r0, lsr r8
 800f6c8:	20000008 	andcs	r0, r0, r8
 800f6cc:	2000a3f8 	strdcs	sl, [r0], -r8
 800f6d0:	2000a828 	andcs	sl, r0, r8, lsr #16
 800f6d4:	2000a3fc 	strdcs	sl, [r0], -ip
 800f6d8:	080166ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, sp, lr}

0800f6dc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800f6dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6e0:	4c1b      	ldr	r4, [pc, #108]	; (800f750 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800f6e2:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800f6e6:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800f6ea:	2300      	movs	r3, #0
 800f6ec:	f854 100c 	ldr.w	r1, [r4, ip]
 800f6f0:	4607      	mov	r7, r0
 800f6f2:	f7ff ff67 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f6f6:	2301      	movs	r3, #1
 800f6f8:	7bac      	ldrb	r4, [r5, #14]
 800f6fa:	4616      	mov	r6, r2
 800f6fc:	4915      	ldr	r1, [pc, #84]	; (800f754 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800f6fe:	4402      	add	r2, r0
 800f700:	4815      	ldr	r0, [pc, #84]	; (800f758 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800f702:	429c      	cmp	r4, r3
 800f704:	bf18      	it	ne
 800f706:	4601      	movne	r1, r0
 800f708:	4638      	mov	r0, r7
 800f70a:	f7ff ff5b 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f70e:	4b13      	ldr	r3, [pc, #76]	; (800f75c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800f710:	1814      	adds	r4, r2, r0
 800f712:	5013      	str	r3, [r2, r0]
 800f714:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f718:	6063      	str	r3, [r4, #4]
 800f71a:	4b11      	ldr	r3, [pc, #68]	; (800f760 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800f71c:	f8d3 8000 	ldr.w	r8, [r3]
 800f720:	4640      	mov	r0, r8
 800f722:	f7ff feab 	bl	800f47c <strlen>
 800f726:	f100 0308 	add.w	r3, r0, #8
 800f72a:	ba5b      	rev16	r3, r3
 800f72c:	8123      	strh	r3, [r4, #8]
 800f72e:	2300      	movs	r3, #0
 800f730:	f8c4 300a 	str.w	r3, [r4, #10]
 800f734:	89ab      	ldrh	r3, [r5, #12]
 800f736:	f104 0210 	add.w	r2, r4, #16
 800f73a:	ba5b      	rev16	r3, r3
 800f73c:	81e3      	strh	r3, [r4, #14]
 800f73e:	4641      	mov	r1, r8
 800f740:	2301      	movs	r3, #1
 800f742:	4638      	mov	r0, r7
 800f744:	f7ff ff3e 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f748:	4410      	add	r0, r2
 800f74a:	1b80      	subs	r0, r0, r6
 800f74c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f750:	2000a600 	andcs	sl, r0, r0, lsl #12
 800f754:	080166ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, lr}
 800f758:	080166e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, sp, lr}
 800f75c:	01802100 	orreq	r2, r0, r0, lsl #2
 800f760:	2000a828 	andcs	sl, r0, r8, lsr #16

0800f764 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800f764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f768:	4e19      	ldr	r6, [pc, #100]	; (800f7d0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800f76a:	010f      	lsls	r7, r1, #4
 800f76c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800f770:	2300      	movs	r3, #0
 800f772:	59f1      	ldr	r1, [r6, r7]
 800f774:	4604      	mov	r4, r0
 800f776:	f7ff ff25 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f77a:	2301      	movs	r3, #1
 800f77c:	7bae      	ldrb	r6, [r5, #14]
 800f77e:	4690      	mov	r8, r2
 800f780:	4914      	ldr	r1, [pc, #80]	; (800f7d4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800f782:	4402      	add	r2, r0
 800f784:	4814      	ldr	r0, [pc, #80]	; (800f7d8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800f786:	429e      	cmp	r6, r3
 800f788:	bf18      	it	ne
 800f78a:	4601      	movne	r1, r0
 800f78c:	4620      	mov	r0, r4
 800f78e:	f7ff ff19 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f792:	4b12      	ldr	r3, [pc, #72]	; (800f7dc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800f794:	1816      	adds	r6, r2, r0
 800f796:	5013      	str	r3, [r2, r0]
 800f798:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f79c:	68a8      	ldr	r0, [r5, #8]
 800f79e:	6073      	str	r3, [r6, #4]
 800f7a0:	f106 040b 	add.w	r4, r6, #11
 800f7a4:	b938      	cbnz	r0, 800f7b6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800f7a6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f7aa:	72b0      	strb	r0, [r6, #10]
 800f7ac:	8133      	strh	r3, [r6, #8]
 800f7ae:	eba4 0008 	sub.w	r0, r4, r8
 800f7b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7b6:	f7ff fe61 	bl	800f47c <strlen>
 800f7ba:	4607      	mov	r7, r0
 800f7bc:	1c43      	adds	r3, r0, #1
 800f7be:	72b0      	strb	r0, [r6, #10]
 800f7c0:	ba5b      	rev16	r3, r3
 800f7c2:	4620      	mov	r0, r4
 800f7c4:	68a9      	ldr	r1, [r5, #8]
 800f7c6:	8133      	strh	r3, [r6, #8]
 800f7c8:	f7ff fe6d 	bl	800f4a6 <strcpy.isra.0>
 800f7cc:	443c      	add	r4, r7
 800f7ce:	e7ee      	b.n	800f7ae <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800f7d0:	2000a600 	andcs	sl, r0, r0, lsl #12
 800f7d4:	080166ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, lr}
 800f7d8:	080166e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, sp, lr}
 800f7dc:	01801000 	orreq	r1, r0, r0

0800f7e0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800f7e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f7e4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f848 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800f7e8:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800f7ec:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800f7f0:	6869      	ldr	r1, [r5, #4]
 800f7f2:	2301      	movs	r3, #1
 800f7f4:	4607      	mov	r7, r0
 800f7f6:	f7ff fee5 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f7fa:	4b14      	ldr	r3, [pc, #80]	; (800f84c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800f7fc:	f858 8009 	ldr.w	r8, [r8, r9]
 800f800:	5013      	str	r3, [r2, r0]
 800f802:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f806:	1816      	adds	r6, r2, r0
 800f808:	6073      	str	r3, [r6, #4]
 800f80a:	4640      	mov	r0, r8
 800f80c:	4614      	mov	r4, r2
 800f80e:	f7ff fe35 	bl	800f47c <strlen>
 800f812:	f100 030d 	add.w	r3, r0, #13
 800f816:	ba5b      	rev16	r3, r3
 800f818:	4641      	mov	r1, r8
 800f81a:	8133      	strh	r3, [r6, #8]
 800f81c:	f106 020a 	add.w	r2, r6, #10
 800f820:	2300      	movs	r3, #0
 800f822:	4638      	mov	r0, r7
 800f824:	f7ff fece 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f828:	2301      	movs	r3, #1
 800f82a:	4402      	add	r2, r0
 800f82c:	7bad      	ldrb	r5, [r5, #14]
 800f82e:	4808      	ldr	r0, [pc, #32]	; (800f850 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800f830:	4908      	ldr	r1, [pc, #32]	; (800f854 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800f832:	429d      	cmp	r5, r3
 800f834:	bf18      	it	ne
 800f836:	4601      	movne	r1, r0
 800f838:	4638      	mov	r0, r7
 800f83a:	f7ff fec3 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f83e:	4410      	add	r0, r2
 800f840:	1b00      	subs	r0, r0, r4
 800f842:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f846:	bf00      	nop
 800f848:	2000a600 	andcs	sl, r0, r0, lsl #12
 800f84c:	01000c00 	tsteq	r0, r0, lsl #24
 800f850:	080166e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, sp, lr}
 800f854:	080166ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, lr}

0800f858 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800f858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f85a:	460f      	mov	r7, r1
 800f85c:	2301      	movs	r3, #1
 800f85e:	490f      	ldr	r1, [pc, #60]	; (800f89c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800f860:	4606      	mov	r6, r0
 800f862:	f7ff feaf 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f866:	4b0e      	ldr	r3, [pc, #56]	; (800f8a0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800f868:	490e      	ldr	r1, [pc, #56]	; (800f8a4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800f86a:	5013      	str	r3, [r2, r0]
 800f86c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f870:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800f874:	684f      	ldr	r7, [r1, #4]
 800f876:	1815      	adds	r5, r2, r0
 800f878:	606b      	str	r3, [r5, #4]
 800f87a:	4638      	mov	r0, r7
 800f87c:	4614      	mov	r4, r2
 800f87e:	f7ff fdfd 	bl	800f47c <strlen>
 800f882:	1c83      	adds	r3, r0, #2
 800f884:	ba5b      	rev16	r3, r3
 800f886:	812b      	strh	r3, [r5, #8]
 800f888:	f105 020a 	add.w	r2, r5, #10
 800f88c:	2301      	movs	r3, #1
 800f88e:	4639      	mov	r1, r7
 800f890:	4630      	mov	r0, r6
 800f892:	f7ff fe97 	bl	800f5c4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f896:	4410      	add	r0, r2
 800f898:	1b00      	subs	r0, r0, r4
 800f89a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f89c:	080166d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, sp, lr}
 800f8a0:	01000c00 	tsteq	r0, r0, lsl #24
 800f8a4:	2000a600 	andcs	sl, r0, r0, lsl #12

0800f8a8 <MDNS::CreateMDNSMessage(unsigned int)>:
 800f8a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8aa:	2384      	movs	r3, #132	; 0x84
 800f8ac:	4d19      	ldr	r5, [pc, #100]	; (800f914 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800f8ae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800f8b2:	80eb      	strh	r3, [r5, #6]
 800f8b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f8b8:	f105 0410 	add.w	r4, r5, #16
 800f8bc:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800f8c0:	4622      	mov	r2, r4
 800f8c2:	4606      	mov	r6, r0
 800f8c4:	460f      	mov	r7, r1
 800f8c6:	f7ff ff09 	bl	800f6dc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800f8ca:	4404      	add	r4, r0
 800f8cc:	4622      	mov	r2, r4
 800f8ce:	4639      	mov	r1, r7
 800f8d0:	4630      	mov	r0, r6
 800f8d2:	f7ff ff47 	bl	800f764 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800f8d6:	4404      	add	r4, r0
 800f8d8:	4622      	mov	r2, r4
 800f8da:	4639      	mov	r1, r7
 800f8dc:	4630      	mov	r0, r6
 800f8de:	f7ff ffbb 	bl	800f858 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800f8e2:	4404      	add	r4, r0
 800f8e4:	4622      	mov	r2, r4
 800f8e6:	4639      	mov	r1, r7
 800f8e8:	4630      	mov	r0, r6
 800f8ea:	f7ff ff79 	bl	800f7e0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800f8ee:	4a0a      	ldr	r2, [pc, #40]	; (800f918 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800f8f0:	4404      	add	r4, r0
 800f8f2:	f852 3b10 	ldr.w	r3, [r2], #16
 800f8f6:	1e60      	subs	r0, r4, #1
 800f8f8:	3b0c      	subs	r3, #12
 800f8fa:	4619      	mov	r1, r3
 800f8fc:	3901      	subs	r1, #1
 800f8fe:	d204      	bcs.n	800f90a <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800f900:	441c      	add	r4, r3
 800f902:	4b06      	ldr	r3, [pc, #24]	; (800f91c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800f904:	1ae4      	subs	r4, r4, r3
 800f906:	602c      	str	r4, [r5, #0]
 800f908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f90a:	f812 6b01 	ldrb.w	r6, [r2], #1
 800f90e:	f800 6f01 	strb.w	r6, [r0, #1]!
 800f912:	e7f3      	b.n	800f8fc <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800f914:	2000a624 	andcs	sl, r0, r4, lsr #12
 800f918:	2000a3fc 	strdcs	sl, [r0], -ip
 800f91c:	2000a628 	andcs	sl, r0, r8, lsr #12

0800f920 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800f920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f924:	4d40      	ldr	r5, [pc, #256]	; (800fa28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800f926:	b085      	sub	sp, #20
 800f928:	682c      	ldr	r4, [r5, #0]
 800f92a:	4680      	mov	r8, r0
 800f92c:	460f      	mov	r7, r1
 800f92e:	4616      	mov	r6, r2
 800f930:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800f934:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800f938:	b11c      	cbz	r4, 800f942 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800f93a:	692a      	ldr	r2, [r5, #16]
 800f93c:	2a00      	cmp	r2, #0
 800f93e:	d16e      	bne.n	800fa1e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800f940:	2401      	movs	r4, #1
 800f942:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800f946:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800f94a:	8193      	strh	r3, [r2, #12]
 800f94c:	f882 b00e 	strb.w	fp, [r2, #14]
 800f950:	2f00      	cmp	r7, #0
 800f952:	d154      	bne.n	800f9fe <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800f954:	4b35      	ldr	r3, [pc, #212]	; (800fa2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800f956:	6818      	ldr	r0, [r3, #0]
 800f958:	3020      	adds	r0, #32
 800f95a:	f7ff fd8f 	bl	800f47c <strlen>
 800f95e:	4607      	mov	r7, r0
 800f960:	4630      	mov	r0, r6
 800f962:	f7ff fd8b 	bl	800f47c <strlen>
 800f966:	4438      	add	r0, r7
 800f968:	3001      	adds	r0, #1
 800f96a:	f002 fbf7 	bl	801215c <operator new[](unsigned int)>
 800f96e:	4b2f      	ldr	r3, [pc, #188]	; (800fa2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800f970:	f845 0009 	str.w	r0, [r5, r9]
 800f974:	6819      	ldr	r1, [r3, #0]
 800f976:	3120      	adds	r1, #32
 800f978:	f7ff fd95 	bl	800f4a6 <strcpy.isra.0>
 800f97c:	f855 0009 	ldr.w	r0, [r5, r9]
 800f980:	4631      	mov	r1, r6
 800f982:	f7ff fd98 	bl	800f4b6 <strcat.isra.0>
 800f986:	4631      	mov	r1, r6
 800f988:	4640      	mov	r0, r8
 800f98a:	f7ff fe0d 	bl	800f5a8 <MDNS::FindFirstDotFromRight(char const*) const>
 800f98e:	eb05 0709 	add.w	r7, r5, r9
 800f992:	4605      	mov	r5, r0
 800f994:	f7ff fd72 	bl	800f47c <strlen>
 800f998:	300d      	adds	r0, #13
 800f99a:	f002 fbdf 	bl	801215c <operator new[](unsigned int)>
 800f99e:	4629      	mov	r1, r5
 800f9a0:	6078      	str	r0, [r7, #4]
 800f9a2:	f7ff fd80 	bl	800f4a6 <strcpy.isra.0>
 800f9a6:	4922      	ldr	r1, [pc, #136]	; (800fa30 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800f9a8:	6878      	ldr	r0, [r7, #4]
 800f9aa:	f7ff fd84 	bl	800f4b6 <strcat.isra.0>
 800f9ae:	4921      	ldr	r1, [pc, #132]	; (800fa34 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800f9b0:	4b21      	ldr	r3, [pc, #132]	; (800fa38 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800f9b2:	6878      	ldr	r0, [r7, #4]
 800f9b4:	f1bb 0f01 	cmp.w	fp, #1
 800f9b8:	bf18      	it	ne
 800f9ba:	4619      	movne	r1, r3
 800f9bc:	f7ff fd7b 	bl	800f4b6 <strcat.isra.0>
 800f9c0:	f1ba 0f00 	cmp.w	sl, #0
 800f9c4:	d009      	beq.n	800f9da <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800f9c6:	4650      	mov	r0, sl
 800f9c8:	f7ff fd58 	bl	800f47c <strlen>
 800f9cc:	3001      	adds	r0, #1
 800f9ce:	f002 fbc5 	bl	801215c <operator new[](unsigned int)>
 800f9d2:	4651      	mov	r1, sl
 800f9d4:	60b8      	str	r0, [r7, #8]
 800f9d6:	f7ff fd66 	bl	800f4a6 <strcpy.isra.0>
 800f9da:	4621      	mov	r1, r4
 800f9dc:	4640      	mov	r0, r8
 800f9de:	f7ff ff63 	bl	800f8a8 <MDNS::CreateMDNSMessage(unsigned int)>
 800f9e2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f9e6:	4915      	ldr	r1, [pc, #84]	; (800fa3c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800f9e8:	4815      	ldr	r0, [pc, #84]	; (800fa40 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800f9ea:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f9ee:	9300      	str	r3, [sp, #0]
 800f9f0:	4b14      	ldr	r3, [pc, #80]	; (800fa44 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800f9f2:	7800      	ldrb	r0, [r0, #0]
 800f9f4:	681b      	ldr	r3, [r3, #0]
 800f9f6:	f7ff fc91 	bl	800f31c <udp_send>
 800f9fa:	2001      	movs	r0, #1
 800f9fc:	e010      	b.n	800fa20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800f9fe:	4638      	mov	r0, r7
 800fa00:	f7ff fd3c 	bl	800f47c <strlen>
 800fa04:	9003      	str	r0, [sp, #12]
 800fa06:	4630      	mov	r0, r6
 800fa08:	f7ff fd38 	bl	800f47c <strlen>
 800fa0c:	9b03      	ldr	r3, [sp, #12]
 800fa0e:	4418      	add	r0, r3
 800fa10:	3001      	adds	r0, #1
 800fa12:	f002 fba3 	bl	801215c <operator new[](unsigned int)>
 800fa16:	4639      	mov	r1, r7
 800fa18:	f845 0009 	str.w	r0, [r5, r9]
 800fa1c:	e7ac      	b.n	800f978 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800fa1e:	2000      	movs	r0, #0
 800fa20:	b005      	add	sp, #20
 800fa22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa26:	bf00      	nop
 800fa28:	2000a600 	andcs	sl, r0, r0, lsl #12
 800fa2c:	2000a830 	andcs	sl, r0, r0, lsr r8
 800fa30:	0801498b 	stmdaeq	r1, {r0, r1, r3, r7, r8, fp, lr}
 800fa34:	080166ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, lr}
 800fa38:	080166e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, sp, lr}
 800fa3c:	2000a624 	andcs	sl, r0, r4, lsr #12
 800fa40:	20000008 	andcs	r0, r0, r8
 800fa44:	2000a3f8 	strdcs	sl, [r0], -r8

0800fa48 <MDNS::HandleRequest(unsigned short)>:
 800fa48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa4c:	4605      	mov	r5, r0
 800fa4e:	2700      	movs	r7, #0
 800fa50:	f04f 080c 	mov.w	r8, #12
 800fa54:	b0c5      	sub	sp, #276	; 0x114
 800fa56:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800fb18 <MDNS::HandleRequest(unsigned short)+0xd0>
 800fa5a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800fb1c <MDNS::HandleRequest(unsigned short)+0xd4>
 800fa5e:	9103      	str	r1, [sp, #12]
 800fa60:	9b03      	ldr	r3, [sp, #12]
 800fa62:	42bb      	cmp	r3, r7
 800fa64:	d802      	bhi.n	800fa6c <MDNS::HandleRequest(unsigned short)+0x24>
 800fa66:	b045      	add	sp, #276	; 0x114
 800fa68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa6c:	f8da 1000 	ldr.w	r1, [sl]
 800fa70:	aa04      	add	r2, sp, #16
 800fa72:	4441      	add	r1, r8
 800fa74:	4628      	mov	r0, r5
 800fa76:	f7ff fd55 	bl	800f524 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800fa7a:	f8da 2000 	ldr.w	r2, [sl]
 800fa7e:	4440      	add	r0, r8
 800fa80:	1813      	adds	r3, r2, r0
 800fa82:	885b      	ldrh	r3, [r3, #2]
 800fa84:	f100 0804 	add.w	r8, r0, #4
 800fa88:	ba5b      	rev16	r3, r3
 800fa8a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800fa8e:	2b01      	cmp	r3, #1
 800fa90:	d13d      	bne.n	800fb0e <MDNS::HandleRequest(unsigned short)+0xc6>
 800fa92:	5a14      	ldrh	r4, [r2, r0]
 800fa94:	4b22      	ldr	r3, [pc, #136]	; (800fb20 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800fa96:	ba64      	rev16	r4, r4
 800fa98:	6818      	ldr	r0, [r3, #0]
 800fa9a:	a904      	add	r1, sp, #16
 800fa9c:	b2a4      	uxth	r4, r4
 800fa9e:	f7ff fcf5 	bl	800f48c <strcmp>
 800faa2:	b968      	cbnz	r0, 800fac0 <MDNS::HandleRequest(unsigned short)+0x78>
 800faa4:	2c01      	cmp	r4, #1
 800faa6:	d10b      	bne.n	800fac0 <MDNS::HandleRequest(unsigned short)+0x78>
 800faa8:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800faac:	491d      	ldr	r1, [pc, #116]	; (800fb24 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800faae:	481e      	ldr	r0, [pc, #120]	; (800fb28 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fab0:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fab4:	9300      	str	r3, [sp, #0]
 800fab6:	4b1d      	ldr	r3, [pc, #116]	; (800fb2c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fab8:	7800      	ldrb	r0, [r0, #0]
 800faba:	681b      	ldr	r3, [r3, #0]
 800fabc:	f7ff fc2e 	bl	800f31c <udp_send>
 800fac0:	481b      	ldr	r0, [pc, #108]	; (800fb30 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800fac2:	a904      	add	r1, sp, #16
 800fac4:	f7ff fce2 	bl	800f48c <strcmp>
 800fac8:	f04f 0900 	mov.w	r9, #0
 800facc:	4e19      	ldr	r6, [pc, #100]	; (800fb34 <MDNS::HandleRequest(unsigned short)+0xec>)
 800face:	9002      	str	r0, [sp, #8]
 800fad0:	6833      	ldr	r3, [r6, #0]
 800fad2:	b1c3      	cbz	r3, 800fb06 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fad4:	9b02      	ldr	r3, [sp, #8]
 800fad6:	b123      	cbz	r3, 800fae2 <MDNS::HandleRequest(unsigned short)+0x9a>
 800fad8:	6870      	ldr	r0, [r6, #4]
 800fada:	a904      	add	r1, sp, #16
 800fadc:	f7ff fcd6 	bl	800f48c <strcmp>
 800fae0:	b988      	cbnz	r0, 800fb06 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fae2:	2c0c      	cmp	r4, #12
 800fae4:	d10f      	bne.n	800fb06 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fae6:	4649      	mov	r1, r9
 800fae8:	4628      	mov	r0, r5
 800faea:	f7ff fedd 	bl	800f8a8 <MDNS::CreateMDNSMessage(unsigned int)>
 800faee:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800faf2:	480d      	ldr	r0, [pc, #52]	; (800fb28 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800faf4:	9300      	str	r3, [sp, #0]
 800faf6:	4b0d      	ldr	r3, [pc, #52]	; (800fb2c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800faf8:	f8bb 2000 	ldrh.w	r2, [fp]
 800fafc:	681b      	ldr	r3, [r3, #0]
 800fafe:	490e      	ldr	r1, [pc, #56]	; (800fb38 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800fb00:	7800      	ldrb	r0, [r0, #0]
 800fb02:	f7ff fc0b 	bl	800f31c <udp_send>
 800fb06:	3610      	adds	r6, #16
 800fb08:	f1b9 0f00 	cmp.w	r9, #0
 800fb0c:	d001      	beq.n	800fb12 <MDNS::HandleRequest(unsigned short)+0xca>
 800fb0e:	3701      	adds	r7, #1
 800fb10:	e7a6      	b.n	800fa60 <MDNS::HandleRequest(unsigned short)+0x18>
 800fb12:	f04f 0901 	mov.w	r9, #1
 800fb16:	e7db      	b.n	800fad0 <MDNS::HandleRequest(unsigned short)+0x88>
 800fb18:	2000a82c 	andcs	sl, r0, ip, lsr #16
 800fb1c:	2000a624 	andcs	sl, r0, r4, lsr #12
 800fb20:	2000a828 	andcs	sl, r0, r8, lsr #16
 800fb24:	2000a3fc 	strdcs	sl, [r0], -ip
 800fb28:	20000008 	andcs	r0, r0, r8
 800fb2c:	2000a3f8 	strdcs	sl, [r0], -r8
 800fb30:	080166d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, sp, lr}
 800fb34:	2000a600 	andcs	sl, r0, r0, lsl #12
 800fb38:	2000a628 	andcs	sl, r0, r8, lsr #12

0800fb3c <MDNS::Parse()>:
 800fb3c:	4b08      	ldr	r3, [pc, #32]	; (800fb60 <MDNS::Parse()+0x24>)
 800fb3e:	681a      	ldr	r2, [r3, #0]
 800fb40:	8853      	ldrh	r3, [r2, #2]
 800fb42:	ba5b      	rev16	r3, r3
 800fb44:	b299      	uxth	r1, r3
 800fb46:	041b      	lsls	r3, r3, #16
 800fb48:	d408      	bmi.n	800fb5c <MDNS::Parse()+0x20>
 800fb4a:	0b89      	lsrs	r1, r1, #14
 800fb4c:	d106      	bne.n	800fb5c <MDNS::Parse()+0x20>
 800fb4e:	8891      	ldrh	r1, [r2, #4]
 800fb50:	b28b      	uxth	r3, r1
 800fb52:	b11b      	cbz	r3, 800fb5c <MDNS::Parse()+0x20>
 800fb54:	ba49      	rev16	r1, r1
 800fb56:	b289      	uxth	r1, r1
 800fb58:	f7ff bf76 	b.w	800fa48 <MDNS::HandleRequest(unsigned short)>
 800fb5c:	4770      	bx	lr
 800fb5e:	bf00      	nop
 800fb60:	2000a82c 	andcs	sl, r0, ip, lsr #16

0800fb64 <MDNS::Run()>:
 800fb64:	b538      	push	{r3, r4, r5, lr}
 800fb66:	4d0c      	ldr	r5, [pc, #48]	; (800fb98 <MDNS::Run()+0x34>)
 800fb68:	4604      	mov	r4, r0
 800fb6a:	480c      	ldr	r0, [pc, #48]	; (800fb9c <MDNS::Run()+0x38>)
 800fb6c:	462b      	mov	r3, r5
 800fb6e:	4a0c      	ldr	r2, [pc, #48]	; (800fba0 <MDNS::Run()+0x3c>)
 800fb70:	490c      	ldr	r1, [pc, #48]	; (800fba4 <MDNS::Run()+0x40>)
 800fb72:	7800      	ldrb	r0, [r0, #0]
 800fb74:	f7ff fbac 	bl	800f2d0 <udp_recv2>
 800fb78:	4b0b      	ldr	r3, [pc, #44]	; (800fba8 <MDNS::Run()+0x44>)
 800fb7a:	882a      	ldrh	r2, [r5, #0]
 800fb7c:	8018      	strh	r0, [r3, #0]
 800fb7e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fb82:	429a      	cmp	r2, r3
 800fb84:	d106      	bne.n	800fb94 <MDNS::Run()+0x30>
 800fb86:	280c      	cmp	r0, #12
 800fb88:	d904      	bls.n	800fb94 <MDNS::Run()+0x30>
 800fb8a:	4620      	mov	r0, r4
 800fb8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fb90:	f7ff bfd4 	b.w	800fb3c <MDNS::Parse()>
 800fb94:	bd38      	pop	{r3, r4, r5, pc}
 800fb96:	bf00      	nop
 800fb98:	2000a3f4 	strdcs	sl, [r0], -r4
 800fb9c:	20000008 	andcs	r0, r0, r8
 800fba0:	2000a3f0 	strdcs	sl, [r0], -r0
 800fba4:	2000a82c 	andcs	sl, r0, ip, lsr #16
 800fba8:	2000a620 	andcs	sl, r0, r0, lsr #12

0800fbac <MDNS::Print()>:
 800fbac:	b510      	push	{r4, lr}
 800fbae:	4816      	ldr	r0, [pc, #88]	; (800fc08 <MDNS::Print()+0x5c>)
 800fbb0:	f7f9 fb60 	bl	8009274 <printf>
 800fbb4:	4b15      	ldr	r3, [pc, #84]	; (800fc0c <MDNS::Print()+0x60>)
 800fbb6:	681b      	ldr	r3, [r3, #0]
 800fbb8:	3301      	adds	r3, #1
 800fbba:	d104      	bne.n	800fbc6 <MDNS::Print()+0x1a>
 800fbbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fbc0:	4813      	ldr	r0, [pc, #76]	; (800fc10 <MDNS::Print()+0x64>)
 800fbc2:	f7f9 bb57 	b.w	8009274 <printf>
 800fbc6:	4b13      	ldr	r3, [pc, #76]	; (800fc14 <MDNS::Print()+0x68>)
 800fbc8:	4c13      	ldr	r4, [pc, #76]	; (800fc18 <MDNS::Print()+0x6c>)
 800fbca:	6819      	ldr	r1, [r3, #0]
 800fbcc:	4813      	ldr	r0, [pc, #76]	; (800fc1c <MDNS::Print()+0x70>)
 800fbce:	f7f9 fb51 	bl	8009274 <printf>
 800fbd2:	6823      	ldr	r3, [r4, #0]
 800fbd4:	b14b      	cbz	r3, 800fbea <MDNS::Print()+0x3e>
 800fbd6:	4a12      	ldr	r2, [pc, #72]	; (800fc20 <MDNS::Print()+0x74>)
 800fbd8:	68a3      	ldr	r3, [r4, #8]
 800fbda:	6861      	ldr	r1, [r4, #4]
 800fbdc:	2b00      	cmp	r3, #0
 800fbde:	bf08      	it	eq
 800fbe0:	4613      	moveq	r3, r2
 800fbe2:	4810      	ldr	r0, [pc, #64]	; (800fc24 <MDNS::Print()+0x78>)
 800fbe4:	89a2      	ldrh	r2, [r4, #12]
 800fbe6:	f7f9 fb45 	bl	8009274 <printf>
 800fbea:	6923      	ldr	r3, [r4, #16]
 800fbec:	b15b      	cbz	r3, 800fc06 <MDNS::Print()+0x5a>
 800fbee:	69a3      	ldr	r3, [r4, #24]
 800fbf0:	4a0b      	ldr	r2, [pc, #44]	; (800fc20 <MDNS::Print()+0x74>)
 800fbf2:	6961      	ldr	r1, [r4, #20]
 800fbf4:	2b00      	cmp	r3, #0
 800fbf6:	bf08      	it	eq
 800fbf8:	4613      	moveq	r3, r2
 800fbfa:	480a      	ldr	r0, [pc, #40]	; (800fc24 <MDNS::Print()+0x78>)
 800fbfc:	8ba2      	ldrh	r2, [r4, #28]
 800fbfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc02:	f7f9 bb37 	b.w	8009274 <printf>
 800fc06:	bd10      	pop	{r4, pc}
 800fc08:	080166f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sl, sp, lr}
 800fc0c:	20000008 	andcs	r0, r0, r8
 800fc10:	080166f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, sp, lr}
 800fc14:	2000a828 	andcs	sl, r0, r8, lsr #16
 800fc18:	2000a600 	andcs	sl, r0, r0, lsl #12
 800fc1c:	08016706 	stmdaeq	r1, {r1, r2, r8, r9, sl, sp, lr}
 800fc20:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 800fc24:	08016712 	stmdaeq	r1, {r1, r4, r8, r9, sl, sp, lr}

0800fc28 <strncpy.constprop.0.isra.0>:
 800fc28:	233f      	movs	r3, #63	; 0x3f
 800fc2a:	3901      	subs	r1, #1
 800fc2c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800fc30:	b92a      	cbnz	r2, 800fc3e <strncpy.constprop.0.isra.0+0x16>
 800fc32:	4403      	add	r3, r0
 800fc34:	4298      	cmp	r0, r3
 800fc36:	d006      	beq.n	800fc46 <strncpy.constprop.0.isra.0+0x1e>
 800fc38:	f800 2b01 	strb.w	r2, [r0], #1
 800fc3c:	e7fa      	b.n	800fc34 <strncpy.constprop.0.isra.0+0xc>
 800fc3e:	3b01      	subs	r3, #1
 800fc40:	f800 2b01 	strb.w	r2, [r0], #1
 800fc44:	d1f2      	bne.n	800fc2c <strncpy.constprop.0.isra.0+0x4>
 800fc46:	4770      	bx	lr

0800fc48 <Network::Network()>:
 800fc48:	4a12      	ldr	r2, [pc, #72]	; (800fc94 <Network::Network()+0x4c>)
 800fc4a:	2300      	movs	r3, #0
 800fc4c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800fc50:	6010      	str	r0, [r2, #0]
 800fc52:	2201      	movs	r2, #1
 800fc54:	e9c0 2100 	strd	r2, r1, [r0]
 800fc58:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800fc5c:	2200      	movs	r2, #0
 800fc5e:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800fc62:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800fc66:	490c      	ldr	r1, [pc, #48]	; (800fc98 <Network::Network()+0x50>)
 800fc68:	6102      	str	r2, [r0, #16]
 800fc6a:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800fc6e:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800fc72:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800fc76:	61c3      	str	r3, [r0, #28]
 800fc78:	f880 3020 	strb.w	r3, [r0, #32]
 800fc7c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800fc80:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800fc84:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fc88:	f802 3f01 	strb.w	r3, [r2, #1]!
 800fc8c:	2b00      	cmp	r3, #0
 800fc8e:	d1f9      	bne.n	800fc84 <Network::Network()+0x3c>
 800fc90:	4770      	bx	lr
 800fc92:	bf00      	nop
 800fc94:	2000a830 	andcs	sl, r0, r0, lsr r8
 800fc98:	0801671d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, sp, lr}

0800fc9c <Network::Shutdown()>:
 800fc9c:	b508      	push	{r3, lr}
 800fc9e:	30bc      	adds	r0, #188	; 0xbc
 800fca0:	f001 fb52 	bl	8011348 <NetworkDisplay::ShowShutdown()>
 800fca4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fca8:	f7f7 baa2 	b.w	80071f0 <net_shutdown>

0800fcac <Network::Begin(unsigned short)>:
 800fcac:	4608      	mov	r0, r1
 800fcae:	f7ff ba9f 	b.w	800f1f0 <udp_bind>

0800fcb2 <Network::End(unsigned short)>:
 800fcb2:	4608      	mov	r0, r1
 800fcb4:	f7ff bab6 	b.w	800f224 <udp_unbind>

0800fcb8 <Network::MacAddressCopyTo(unsigned char*)>:
 800fcb8:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800fcbc:	3901      	subs	r1, #1
 800fcbe:	30a5      	adds	r0, #165	; 0xa5
 800fcc0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800fcc4:	4283      	cmp	r3, r0
 800fcc6:	f801 2f01 	strb.w	r2, [r1, #1]!
 800fcca:	d1f9      	bne.n	800fcc0 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800fccc:	4770      	bx	lr

0800fcce <Network::JoinGroup(int, unsigned int)>:
 800fcce:	4610      	mov	r0, r2
 800fcd0:	f000 bef4 	b.w	8010abc <igmp_join>

0800fcd4 <Network::LeaveGroup(int, unsigned int)>:
 800fcd4:	4610      	mov	r0, r2
 800fcd6:	f000 bf1d 	b.w	8010b14 <igmp_leave>

0800fcda <Network::SetDefaultIp()>:
 800fcda:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800fcde:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800fce2:	041b      	lsls	r3, r3, #16
 800fce4:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800fce8:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800fcec:	3302      	adds	r3, #2
 800fcee:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800fcf2:	22ff      	movs	r2, #255	; 0xff
 800fcf4:	6143      	str	r3, [r0, #20]
 800fcf6:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800fcfa:	4770      	bx	lr

0800fcfc <Network::Init(NetworkParamsStore*)>:
 800fcfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd00:	b0a5      	sub	sp, #148	; 0x94
 800fd02:	4604      	mov	r4, r0
 800fd04:	a80b      	add	r0, sp, #44	; 0x2c
 800fd06:	f000 f9c7 	bl	8010098 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800fd0a:	a80b      	add	r0, sp, #44	; 0x2c
 800fd0c:	f000 f9d0 	bl	80100b0 <NetworkParams::Load()>
 800fd10:	b110      	cbz	r0, 800fd18 <Network::Init(NetworkParamsStore*)+0x1c>
 800fd12:	a80b      	add	r0, sp, #44	; 0x2c
 800fd14:	f000 fba3 	bl	801045e <NetworkParams::Dump()>
 800fd18:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800fd1c:	4628      	mov	r0, r5
 800fd1e:	f001 fb07 	bl	8011330 <NetworkDisplay::ShowEmacStart()>
 800fd22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fd24:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800fd28:	9308      	str	r3, [sp, #32]
 800fd2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fd2c:	4630      	mov	r0, r6
 800fd2e:	9309      	str	r3, [sp, #36]	; 0x24
 800fd30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fd32:	f104 0720 	add.w	r7, r4, #32
 800fd36:	930a      	str	r3, [sp, #40]	; 0x28
 800fd38:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800fd3c:	7163      	strb	r3, [r4, #5]
 800fd3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fd40:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800fd44:	bf18      	it	ne
 800fd46:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800fd4a:	061b      	lsls	r3, r3, #24
 800fd4c:	bf54      	ite	pl
 800fd4e:	2300      	movpl	r3, #0
 800fd50:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800fd54:	60e2      	str	r2, [r4, #12]
 800fd56:	6123      	str	r3, [r4, #16]
 800fd58:	f003 fc62 	bl	8013620 <emac_start(unsigned char*)>
 800fd5c:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800fd60:	2b00      	cmp	r3, #0
 800fd62:	f040 80c7 	bne.w	800fef4 <Network::Init(NetworkParamsStore*)+0x1f8>
 800fd66:	4984      	ldr	r1, [pc, #528]	; (800ff78 <Network::Init(NetworkParamsStore*)+0x27c>)
 800fd68:	f104 001f 	add.w	r0, r4, #31
 800fd6c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800fd70:	f103 0c01 	add.w	ip, r3, #1
 800fd74:	2a00      	cmp	r2, #0
 800fd76:	f040 80b9 	bne.w	800feec <Network::Init(NetworkParamsStore*)+0x1f0>
 800fd7a:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800fd7e:	18e1      	adds	r1, r4, r3
 800fd80:	0910      	lsrs	r0, r2, #4
 800fd82:	2a9f      	cmp	r2, #159	; 0x9f
 800fd84:	f002 020f 	and.w	r2, r2, #15
 800fd88:	bf94      	ite	ls
 800fd8a:	3030      	addls	r0, #48	; 0x30
 800fd8c:	3037      	addhi	r0, #55	; 0x37
 800fd8e:	2a09      	cmp	r2, #9
 800fd90:	bf94      	ite	ls
 800fd92:	3230      	addls	r2, #48	; 0x30
 800fd94:	3237      	addhi	r2, #55	; 0x37
 800fd96:	44a4      	add	ip, r4
 800fd98:	f881 0020 	strb.w	r0, [r1, #32]
 800fd9c:	f88c 2020 	strb.w	r2, [ip, #32]
 800fda0:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800fda4:	f103 0802 	add.w	r8, r3, #2
 800fda8:	0910      	lsrs	r0, r2, #4
 800fdaa:	2a9f      	cmp	r2, #159	; 0x9f
 800fdac:	f002 020f 	and.w	r2, r2, #15
 800fdb0:	bf94      	ite	ls
 800fdb2:	3030      	addls	r0, #48	; 0x30
 800fdb4:	3037      	addhi	r0, #55	; 0x37
 800fdb6:	f103 0e03 	add.w	lr, r3, #3
 800fdba:	2a09      	cmp	r2, #9
 800fdbc:	eb04 0c08 	add.w	ip, r4, r8
 800fdc0:	f88c 0020 	strb.w	r0, [ip, #32]
 800fdc4:	bf94      	ite	ls
 800fdc6:	3230      	addls	r2, #48	; 0x30
 800fdc8:	3237      	addhi	r2, #55	; 0x37
 800fdca:	eb04 000e 	add.w	r0, r4, lr
 800fdce:	f880 2020 	strb.w	r2, [r0, #32]
 800fdd2:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800fdd6:	f103 0c04 	add.w	ip, r3, #4
 800fdda:	0910      	lsrs	r0, r2, #4
 800fddc:	2a9f      	cmp	r2, #159	; 0x9f
 800fdde:	f002 020f 	and.w	r2, r2, #15
 800fde2:	bf94      	ite	ls
 800fde4:	3030      	addls	r0, #48	; 0x30
 800fde6:	3037      	addhi	r0, #55	; 0x37
 800fde8:	3305      	adds	r3, #5
 800fdea:	2a09      	cmp	r2, #9
 800fdec:	4423      	add	r3, r4
 800fdee:	44a4      	add	ip, r4
 800fdf0:	bf94      	ite	ls
 800fdf2:	3230      	addls	r2, #48	; 0x30
 800fdf4:	3237      	addhi	r2, #55	; 0x37
 800fdf6:	f88c 0020 	strb.w	r0, [ip, #32]
 800fdfa:	f883 2020 	strb.w	r2, [r3, #32]
 800fdfe:	2300      	movs	r3, #0
 800fe00:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800fe04:	f003 fcb4 	bl	8013770 <net::link_register_read()>
 800fe08:	7963      	ldrb	r3, [r4, #5]
 800fe0a:	6020      	str	r0, [r4, #0]
 800fe0c:	2800      	cmp	r0, #0
 800fe0e:	f040 809c 	bne.w	800ff4a <Network::Init(NetworkParamsStore*)+0x24e>
 800fe12:	2b00      	cmp	r3, #0
 800fe14:	f040 80aa 	bne.w	800ff6c <Network::Init(NetworkParamsStore*)+0x270>
 800fe18:	9b08      	ldr	r3, [sp, #32]
 800fe1a:	2b00      	cmp	r3, #0
 800fe1c:	d173      	bne.n	800ff06 <Network::Init(NetworkParamsStore*)+0x20a>
 800fe1e:	4620      	mov	r0, r4
 800fe20:	f7ff ff5b 	bl	800fcda <Network::SetDefaultIp()>
 800fe24:	6963      	ldr	r3, [r4, #20]
 800fe26:	69e2      	ldr	r2, [r4, #28]
 800fe28:	9308      	str	r3, [sp, #32]
 800fe2a:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800fe2e:	1de3      	adds	r3, r4, #7
 800fe30:	f104 0905 	add.w	r9, r4, #5
 800fe34:	9302      	str	r3, [sp, #8]
 800fe36:	9300      	str	r3, [sp, #0]
 800fe38:	463a      	mov	r2, r7
 800fe3a:	464b      	mov	r3, r9
 800fe3c:	4630      	mov	r0, r6
 800fe3e:	a908      	add	r1, sp, #32
 800fe40:	f7f7 f986 	bl	8007150 <net_init>
 800fe44:	79e3      	ldrb	r3, [r4, #7]
 800fe46:	b11b      	cbz	r3, 800fe50 <Network::Init(NetworkParamsStore*)+0x154>
 800fe48:	2104      	movs	r1, #4
 800fe4a:	4628      	mov	r0, r5
 800fe4c:	f001 fa82 	bl	8011354 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fe50:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800fe54:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800fe58:	9304      	str	r3, [sp, #16]
 800fe5a:	233c      	movs	r3, #60	; 0x3c
 800fe5c:	fb03 f30a 	mul.w	r3, r3, sl
 800fe60:	f8df 8118 	ldr.w	r8, [pc, #280]	; 800ff7c <Network::Init(NetworkParamsStore*)+0x280>
 800fe64:	f8df b118 	ldr.w	fp, [pc, #280]	; 800ff80 <Network::Init(NetworkParamsStore*)+0x284>
 800fe68:	9303      	str	r3, [sp, #12]
 800fe6a:	79e3      	ldrb	r3, [r4, #7]
 800fe6c:	b393      	cbz	r3, 800fed4 <Network::Init(NetworkParamsStore*)+0x1d8>
 800fe6e:	f1ba 0f00 	cmp.w	sl, #0
 800fe72:	d02f      	beq.n	800fed4 <Network::Init(NetworkParamsStore*)+0x1d8>
 800fe74:	9b04      	ldr	r3, [sp, #16]
 800fe76:	b36b      	cbz	r3, 800fed4 <Network::Init(NetworkParamsStore*)+0x1d8>
 800fe78:	2104      	movs	r1, #4
 800fe7a:	f8d8 0000 	ldr.w	r0, [r8]
 800fe7e:	f002 f88b 	bl	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800fe82:	2103      	movs	r1, #3
 800fe84:	4628      	mov	r0, r5
 800fe86:	f001 fa65 	bl	8011354 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fe8a:	2000      	movs	r0, #0
 800fe8c:	f002 fb42 	bl	8012514 <time>
 800fe90:	9005      	str	r0, [sp, #20]
 800fe92:	2000      	movs	r0, #0
 800fe94:	f002 fb3e 	bl	8012514 <time>
 800fe98:	9b05      	ldr	r3, [sp, #20]
 800fe9a:	493a      	ldr	r1, [pc, #232]	; (800ff84 <Network::Init(NetworkParamsStore*)+0x288>)
 800fe9c:	1ac0      	subs	r0, r0, r3
 800fe9e:	9b03      	ldr	r3, [sp, #12]
 800fea0:	4298      	cmp	r0, r3
 800fea2:	db38      	blt.n	800ff16 <Network::Init(NetworkParamsStore*)+0x21a>
 800fea4:	2101      	movs	r1, #1
 800fea6:	4628      	mov	r0, r5
 800fea8:	f001 fa54 	bl	8011354 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800feac:	2101      	movs	r1, #1
 800feae:	f8d8 0000 	ldr.w	r0, [r8]
 800feb2:	f002 f871 	bl	8011f98 <LedBlink::SetMode(ledblink::Mode)>
 800feb6:	2301      	movs	r3, #1
 800feb8:	7163      	strb	r3, [r4, #5]
 800feba:	2300      	movs	r3, #0
 800febc:	71e3      	strb	r3, [r4, #7]
 800febe:	9b02      	ldr	r3, [sp, #8]
 800fec0:	463a      	mov	r2, r7
 800fec2:	9300      	str	r3, [sp, #0]
 800fec4:	4630      	mov	r0, r6
 800fec6:	464b      	mov	r3, r9
 800fec8:	a908      	add	r1, sp, #32
 800feca:	f7f7 f941 	bl	8007150 <net_init>
 800fece:	7963      	ldrb	r3, [r4, #5]
 800fed0:	2b00      	cmp	r3, #0
 800fed2:	d0ca      	beq.n	800fe6a <Network::Init(NetworkParamsStore*)+0x16e>
 800fed4:	9b08      	ldr	r3, [sp, #32]
 800fed6:	4628      	mov	r0, r5
 800fed8:	6163      	str	r3, [r4, #20]
 800feda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fedc:	61e3      	str	r3, [r4, #28]
 800fede:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fee0:	61a3      	str	r3, [r4, #24]
 800fee2:	f001 fa2b 	bl	801133c <NetworkDisplay::ShowIp()>
 800fee6:	b025      	add	sp, #148	; 0x94
 800fee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800feec:	4663      	mov	r3, ip
 800feee:	f800 2f01 	strb.w	r2, [r0, #1]!
 800fef2:	e73b      	b.n	800fd6c <Network::Init(NetworkParamsStore*)+0x70>
 800fef4:	4638      	mov	r0, r7
 800fef6:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800fefa:	f7ff fe95 	bl	800fc28 <strncpy.constprop.0.isra.0>
 800fefe:	2300      	movs	r3, #0
 800ff00:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800ff04:	e77e      	b.n	800fe04 <Network::Init(NetworkParamsStore*)+0x108>
 800ff06:	69e1      	ldr	r1, [r4, #28]
 800ff08:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800ff0c:	4053      	eors	r3, r2
 800ff0e:	420b      	tst	r3, r1
 800ff10:	bf18      	it	ne
 800ff12:	920a      	strne	r2, [sp, #40]	; 0x28
 800ff14:	e78b      	b.n	800fe2e <Network::Init(NetworkParamsStore*)+0x132>
 800ff16:	f8d8 3000 	ldr.w	r3, [r8]
 800ff1a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800ff1e:	f1bc 0f00 	cmp.w	ip, #0
 800ff22:	d0b6      	beq.n	800fe92 <Network::Init(NetworkParamsStore*)+0x196>
 800ff24:	6808      	ldr	r0, [r1, #0]
 800ff26:	695a      	ldr	r2, [r3, #20]
 800ff28:	1a80      	subs	r0, r0, r2
 800ff2a:	4584      	cmp	ip, r0
 800ff2c:	d8b1      	bhi.n	800fe92 <Network::Init(NetworkParamsStore*)+0x196>
 800ff2e:	6808      	ldr	r0, [r1, #0]
 800ff30:	6158      	str	r0, [r3, #20]
 800ff32:	6918      	ldr	r0, [r3, #16]
 800ff34:	2801      	cmp	r0, #1
 800ff36:	f080 0201 	eor.w	r2, r0, #1
 800ff3a:	611a      	str	r2, [r3, #16]
 800ff3c:	bf16      	itet	ne
 800ff3e:	2301      	movne	r3, #1
 800ff40:	f8cb 0014 	streq.w	r0, [fp, #20]
 800ff44:	f8cb 3010 	strne.w	r3, [fp, #16]
 800ff48:	e7a3      	b.n	800fe92 <Network::Init(NetworkParamsStore*)+0x196>
 800ff4a:	b11b      	cbz	r3, 800ff54 <Network::Init(NetworkParamsStore*)+0x258>
 800ff4c:	2300      	movs	r3, #0
 800ff4e:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800ff52:	9308      	str	r3, [sp, #32]
 800ff54:	2300      	movs	r3, #0
 800ff56:	f88d 301f 	strb.w	r3, [sp, #31]
 800ff5a:	f10d 031f 	add.w	r3, sp, #31
 800ff5e:	463a      	mov	r2, r7
 800ff60:	4630      	mov	r0, r6
 800ff62:	9300      	str	r3, [sp, #0]
 800ff64:	a908      	add	r1, sp, #32
 800ff66:	f7f7 f8f3 	bl	8007150 <net_init>
 800ff6a:	e7b3      	b.n	800fed4 <Network::Init(NetworkParamsStore*)+0x1d8>
 800ff6c:	2101      	movs	r1, #1
 800ff6e:	4628      	mov	r0, r5
 800ff70:	f001 f9f0 	bl	8011354 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ff74:	e75b      	b.n	800fe2e <Network::Init(NetworkParamsStore*)+0x132>
 800ff76:	bf00      	nop
 800ff78:	08016722 	stmdaeq	r1, {r1, r5, r8, r9, sl, sp, lr}
 800ff7c:	2000aef4 	strdcs	sl, [r0], -r4
 800ff80:	40011000 	andmi	r1, r1, r0
 800ff84:	2000af0c 	andcs	sl, r0, ip, lsl #30

0800ff88 <Network::Print()>:
 800ff88:	b530      	push	{r4, r5, lr}
 800ff8a:	4604      	mov	r4, r0
 800ff8c:	b085      	sub	sp, #20
 800ff8e:	4832      	ldr	r0, [pc, #200]	; (8010058 <Network::Print()+0xd0>)
 800ff90:	f7f9 f970 	bl	8009274 <printf>
 800ff94:	f104 0120 	add.w	r1, r4, #32
 800ff98:	4830      	ldr	r0, [pc, #192]	; (801005c <Network::Print()+0xd4>)
 800ff9a:	f7f9 f96b 	bl	8009274 <printf>
 800ff9e:	68a1      	ldr	r1, [r4, #8]
 800ffa0:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800ffa4:	482e      	ldr	r0, [pc, #184]	; (8010060 <Network::Print()+0xd8>)
 800ffa6:	f7f9 f965 	bl	8009274 <printf>
 800ffaa:	69e0      	ldr	r0, [r4, #28]
 800ffac:	f004 fa4e 	bl	801444c <__popcountsi2>
 800ffb0:	6965      	ldr	r5, [r4, #20]
 800ffb2:	9001      	str	r0, [sp, #4]
 800ffb4:	0e2b      	lsrs	r3, r5, #24
 800ffb6:	9300      	str	r3, [sp, #0]
 800ffb8:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800ffbc:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800ffc0:	b2e9      	uxtb	r1, r5
 800ffc2:	4828      	ldr	r0, [pc, #160]	; (8010064 <Network::Print()+0xdc>)
 800ffc4:	f7f9 f956 	bl	8009274 <printf>
 800ffc8:	69e1      	ldr	r1, [r4, #28]
 800ffca:	4827      	ldr	r0, [pc, #156]	; (8010068 <Network::Print()+0xe0>)
 800ffcc:	0e0b      	lsrs	r3, r1, #24
 800ffce:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800ffd2:	9300      	str	r3, [sp, #0]
 800ffd4:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800ffd8:	b2c9      	uxtb	r1, r1
 800ffda:	f7f9 f94b 	bl	8009274 <printf>
 800ffde:	69a1      	ldr	r1, [r4, #24]
 800ffe0:	4822      	ldr	r0, [pc, #136]	; (801006c <Network::Print()+0xe4>)
 800ffe2:	0e0b      	lsrs	r3, r1, #24
 800ffe4:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800ffe8:	9300      	str	r3, [sp, #0]
 800ffea:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800ffee:	b2c9      	uxtb	r1, r1
 800fff0:	f7f9 f940 	bl	8009274 <printf>
 800fff4:	69e3      	ldr	r3, [r4, #28]
 800fff6:	6961      	ldr	r1, [r4, #20]
 800fff8:	481d      	ldr	r0, [pc, #116]	; (8010070 <Network::Print()+0xe8>)
 800fffa:	ea61 0103 	orn	r1, r1, r3
 800fffe:	0e0b      	lsrs	r3, r1, #24
 8010000:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010004:	9300      	str	r3, [sp, #0]
 8010006:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801000a:	b2c9      	uxtb	r1, r1
 801000c:	f7f9 f932 	bl	8009274 <printf>
 8010010:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8010014:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8010018:	9302      	str	r3, [sp, #8]
 801001a:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 801001e:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8010022:	9301      	str	r3, [sp, #4]
 8010024:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8010028:	4812      	ldr	r0, [pc, #72]	; (8010074 <Network::Print()+0xec>)
 801002a:	9300      	str	r3, [sp, #0]
 801002c:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8010030:	f7f9 f920 	bl	8009274 <printf>
 8010034:	4b10      	ldr	r3, [pc, #64]	; (8010078 <Network::Print()+0xf0>)
 8010036:	681b      	ldr	r3, [r3, #0]
 8010038:	79da      	ldrb	r2, [r3, #7]
 801003a:	b952      	cbnz	r2, 8010052 <Network::Print()+0xca>
 801003c:	795b      	ldrb	r3, [r3, #5]
 801003e:	2b00      	cmp	r3, #0
 8010040:	bf14      	ite	ne
 8010042:	2144      	movne	r1, #68	; 0x44
 8010044:	2153      	moveq	r1, #83	; 0x53
 8010046:	480d      	ldr	r0, [pc, #52]	; (801007c <Network::Print()+0xf4>)
 8010048:	b005      	add	sp, #20
 801004a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801004e:	f7f9 b911 	b.w	8009274 <printf>
 8010052:	215a      	movs	r1, #90	; 0x5a
 8010054:	e7f7      	b.n	8010046 <Network::Print()+0xbe>
 8010056:	bf00      	nop
 8010058:	0801672e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, sp, lr}
 801005c:	08016737 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, sp, lr}
 8010060:	08016748 	stmdaeq	r1, {r3, r6, r8, r9, sl, sp, lr}
 8010064:	0801675d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, sp, lr}
 8010068:	0801677a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, lr}
 801006c:	08016794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, sp, lr}
 8010070:	080167ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, sp, lr}
 8010074:	080167c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sl, sp, lr}
 8010078:	2000a830 	andcs	sl, r0, r0, lsr r8
 801007c:	080167f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, sp, lr}

08010080 <Network::TcpBegin(unsigned short)>:
 8010080:	4608      	mov	r0, r1
 8010082:	f7fe bfef 	b.w	800f064 <tcp_begin>

08010086 <Network::TcpRead(int, unsigned char const**)>:
 8010086:	4608      	mov	r0, r1
 8010088:	4611      	mov	r1, r2
 801008a:	f7ff b829 	b.w	800f0e0 <tcp_read>

0801008e <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 801008e:	4608      	mov	r0, r1
 8010090:	4611      	mov	r1, r2
 8010092:	461a      	mov	r2, r3
 8010094:	f7ff b800 	b.w	800f098 <tcp_write>

08010098 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8010098:	b510      	push	{r4, lr}
 801009a:	225e      	movs	r2, #94	; 0x5e
 801009c:	4604      	mov	r4, r0
 801009e:	f840 1b04 	str.w	r1, [r0], #4
 80100a2:	2100      	movs	r1, #0
 80100a4:	f002 f92e 	bl	8012304 <memset>
 80100a8:	2301      	movs	r3, #1
 80100aa:	4620      	mov	r0, r4
 80100ac:	7623      	strb	r3, [r4, #24]
 80100ae:	bd10      	pop	{r4, pc}

080100b0 <NetworkParams::Load()>:
 80100b0:	b508      	push	{r3, lr}
 80100b2:	2300      	movs	r3, #0
 80100b4:	4601      	mov	r1, r0
 80100b6:	6043      	str	r3, [r0, #4]
 80100b8:	6800      	ldr	r0, [r0, #0]
 80100ba:	b120      	cbz	r0, 80100c6 <NetworkParams::Load()+0x16>
 80100bc:	6803      	ldr	r3, [r0, #0]
 80100be:	3104      	adds	r1, #4
 80100c0:	68db      	ldr	r3, [r3, #12]
 80100c2:	4798      	blx	r3
 80100c4:	2001      	movs	r0, #1
 80100c6:	bd08      	pop	{r3, pc}

080100c8 <NetworkParams::Load(char const*, unsigned int)>:
 80100c8:	6803      	ldr	r3, [r0, #0]
 80100ca:	b1d3      	cbz	r3, 8010102 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 80100cc:	2300      	movs	r3, #0
 80100ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80100d0:	460d      	mov	r5, r1
 80100d2:	4616      	mov	r6, r2
 80100d4:	4604      	mov	r4, r0
 80100d6:	6043      	str	r3, [r0, #4]
 80100d8:	4602      	mov	r2, r0
 80100da:	490a      	ldr	r1, [pc, #40]	; (8010104 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 80100dc:	4668      	mov	r0, sp
 80100de:	f001 fa91 	bl	8011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80100e2:	4632      	mov	r2, r6
 80100e4:	4629      	mov	r1, r5
 80100e6:	4668      	mov	r0, sp
 80100e8:	f001 fa90 	bl	801160c <ReadConfigFile::Read(char const*, unsigned int)>
 80100ec:	4621      	mov	r1, r4
 80100ee:	f851 0b04 	ldr.w	r0, [r1], #4
 80100f2:	6803      	ldr	r3, [r0, #0]
 80100f4:	689b      	ldr	r3, [r3, #8]
 80100f6:	4798      	blx	r3
 80100f8:	4668      	mov	r0, sp
 80100fa:	f001 fa86 	bl	801160a <ReadConfigFile::~ReadConfigFile()>
 80100fe:	b002      	add	sp, #8
 8010100:	bd70      	pop	{r4, r5, r6, pc}
 8010102:	4770      	bx	lr
 8010104:	08010229 	stmdaeq	r1, {r0, r3, r5, r9}

08010108 <NetworkParams::callbackFunction(char const*)>:
 8010108:	b530      	push	{r4, r5, lr}
 801010a:	460d      	mov	r5, r1
 801010c:	b085      	sub	sp, #20
 801010e:	4604      	mov	r4, r0
 8010110:	493f      	ldr	r1, [pc, #252]	; (8010210 <NetworkParams::callbackFunction(char const*)+0x108>)
 8010112:	4628      	mov	r0, r5
 8010114:	f10d 0207 	add.w	r2, sp, #7
 8010118:	f001 fbb0 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801011c:	b978      	cbnz	r0, 801013e <NetworkParams::callbackFunction(char const*)+0x36>
 801011e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010122:	6863      	ldr	r3, [r4, #4]
 8010124:	b142      	cbz	r2, 8010138 <NetworkParams::callbackFunction(char const*)+0x30>
 8010126:	f023 0301 	bic.w	r3, r3, #1
 801012a:	3a00      	subs	r2, #0
 801012c:	bf18      	it	ne
 801012e:	2201      	movne	r2, #1
 8010130:	6063      	str	r3, [r4, #4]
 8010132:	7622      	strb	r2, [r4, #24]
 8010134:	b005      	add	sp, #20
 8010136:	bd30      	pop	{r4, r5, pc}
 8010138:	f043 0301 	orr.w	r3, r3, #1
 801013c:	e7f5      	b.n	801012a <NetworkParams::callbackFunction(char const*)+0x22>
 801013e:	4628      	mov	r0, r5
 8010140:	4934      	ldr	r1, [pc, #208]	; (8010214 <NetworkParams::callbackFunction(char const*)+0x10c>)
 8010142:	f10d 0207 	add.w	r2, sp, #7
 8010146:	f001 fb99 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801014a:	b980      	cbnz	r0, 801016e <NetworkParams::callbackFunction(char const*)+0x66>
 801014c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010150:	6863      	ldr	r3, [r4, #4]
 8010152:	1e51      	subs	r1, r2, #1
 8010154:	2904      	cmp	r1, #4
 8010156:	bf97      	itett	ls
 8010158:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 801015c:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8010160:	6063      	strls	r3, [r4, #4]
 8010162:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8010166:	bf84      	itt	hi
 8010168:	6063      	strhi	r3, [r4, #4]
 801016a:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 801016e:	4628      	mov	r0, r5
 8010170:	4929      	ldr	r1, [pc, #164]	; (8010218 <NetworkParams::callbackFunction(char const*)+0x110>)
 8010172:	aa02      	add	r2, sp, #8
 8010174:	f001 fafa 	bl	801176c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010178:	b9c8      	cbnz	r0, 80101ae <NetworkParams::callbackFunction(char const*)+0xa6>
 801017a:	9b02      	ldr	r3, [sp, #8]
 801017c:	b2d9      	uxtb	r1, r3
 801017e:	29ac      	cmp	r1, #172	; 0xac
 8010180:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010184:	d009      	beq.n	801019a <NetworkParams::callbackFunction(char const*)+0x92>
 8010186:	29c0      	cmp	r1, #192	; 0xc0
 8010188:	d00b      	beq.n	80101a2 <NetworkParams::callbackFunction(char const*)+0x9a>
 801018a:	290a      	cmp	r1, #10
 801018c:	d10c      	bne.n	80101a8 <NetworkParams::callbackFunction(char const*)+0xa0>
 801018e:	60a3      	str	r3, [r4, #8]
 8010190:	6863      	ldr	r3, [r4, #4]
 8010192:	f043 0302 	orr.w	r3, r3, #2
 8010196:	6063      	str	r3, [r4, #4]
 8010198:	e7cc      	b.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 801019a:	3a10      	subs	r2, #16
 801019c:	2a0f      	cmp	r2, #15
 801019e:	d8c9      	bhi.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 80101a0:	e7f5      	b.n	801018e <NetworkParams::callbackFunction(char const*)+0x86>
 80101a2:	2aa8      	cmp	r2, #168	; 0xa8
 80101a4:	d1c6      	bne.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 80101a6:	e7f2      	b.n	801018e <NetworkParams::callbackFunction(char const*)+0x86>
 80101a8:	2b00      	cmp	r3, #0
 80101aa:	d0f0      	beq.n	801018e <NetworkParams::callbackFunction(char const*)+0x86>
 80101ac:	e7c2      	b.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 80101ae:	4628      	mov	r0, r5
 80101b0:	491a      	ldr	r1, [pc, #104]	; (801021c <NetworkParams::callbackFunction(char const*)+0x114>)
 80101b2:	aa02      	add	r2, sp, #8
 80101b4:	f001 fada 	bl	801176c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80101b8:	b960      	cbnz	r0, 80101d4 <NetworkParams::callbackFunction(char const*)+0xcc>
 80101ba:	9b02      	ldr	r3, [sp, #8]
 80101bc:	2b00      	cmp	r3, #0
 80101be:	d0b9      	beq.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 80101c0:	ba1a      	rev	r2, r3
 80101c2:	43d1      	mvns	r1, r2
 80101c4:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 80101c8:	d1b4      	bne.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 80101ca:	60e3      	str	r3, [r4, #12]
 80101cc:	6863      	ldr	r3, [r4, #4]
 80101ce:	f043 0304 	orr.w	r3, r3, #4
 80101d2:	e7e0      	b.n	8010196 <NetworkParams::callbackFunction(char const*)+0x8e>
 80101d4:	4628      	mov	r0, r5
 80101d6:	4912      	ldr	r1, [pc, #72]	; (8010220 <NetworkParams::callbackFunction(char const*)+0x118>)
 80101d8:	aa02      	add	r2, sp, #8
 80101da:	f001 fac7 	bl	801176c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80101de:	b928      	cbnz	r0, 80101ec <NetworkParams::callbackFunction(char const*)+0xe4>
 80101e0:	9b02      	ldr	r3, [sp, #8]
 80101e2:	6123      	str	r3, [r4, #16]
 80101e4:	6863      	ldr	r3, [r4, #4]
 80101e6:	f043 0308 	orr.w	r3, r3, #8
 80101ea:	e7d4      	b.n	8010196 <NetworkParams::callbackFunction(char const*)+0x8e>
 80101ec:	233f      	movs	r3, #63	; 0x3f
 80101ee:	4628      	mov	r0, r5
 80101f0:	9303      	str	r3, [sp, #12]
 80101f2:	490c      	ldr	r1, [pc, #48]	; (8010224 <NetworkParams::callbackFunction(char const*)+0x11c>)
 80101f4:	ab03      	add	r3, sp, #12
 80101f6:	f104 0219 	add.w	r2, r4, #25
 80101fa:	f001 fa3b 	bl	8011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80101fe:	2800      	cmp	r0, #0
 8010200:	d198      	bne.n	8010134 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010202:	9b03      	ldr	r3, [sp, #12]
 8010204:	4423      	add	r3, r4
 8010206:	7658      	strb	r0, [r3, #25]
 8010208:	6863      	ldr	r3, [r4, #4]
 801020a:	f043 0320 	orr.w	r3, r3, #32
 801020e:	e7c2      	b.n	8010196 <NetworkParams::callbackFunction(char const*)+0x8e>
 8010210:	0801684c 	stmdaeq	r1, {r2, r3, r6, fp, sp, lr}
 8010214:	0801682a 	stmdaeq	r1, {r1, r3, r5, fp, sp, lr}
 8010218:	0801680f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr}
 801021c:	08016843 	stmdaeq	r1, {r0, r1, r6, fp, sp, lr}
 8010220:	0801681a 	stmdaeq	r1, {r1, r3, r4, fp, sp, lr}
 8010224:	0801683a 	stmdaeq	r1, {r1, r3, r4, r5, fp, sp, lr}

08010228 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8010228:	f7ff bf6e 	b.w	8010108 <NetworkParams::callbackFunction(char const*)>

0801022c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 801022c:	b570      	push	{r4, r5, r6, lr}
 801022e:	4604      	mov	r4, r0
 8010230:	4615      	mov	r5, r2
 8010232:	461e      	mov	r6, r3
 8010234:	b086      	sub	sp, #24
 8010236:	3004      	adds	r0, #4
 8010238:	2900      	cmp	r1, #0
 801023a:	d02b      	beq.n	8010294 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 801023c:	225e      	movs	r2, #94	; 0x5e
 801023e:	f002 f84a 	bl	80122d6 <memmove>
 8010242:	462a      	mov	r2, r5
 8010244:	4633      	mov	r3, r6
 8010246:	4970      	ldr	r1, [pc, #448]	; (8010408 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8010248:	a803      	add	r0, sp, #12
 801024a:	f001 f93b 	bl	80114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801024e:	6863      	ldr	r3, [r4, #4]
 8010250:	079a      	lsls	r2, r3, #30
 8010252:	bf5f      	itttt	pl
 8010254:	4a6d      	ldrpl	r2, [pc, #436]	; (801040c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010256:	6812      	ldrpl	r2, [r2, #0]
 8010258:	6952      	ldrpl	r2, [r2, #20]
 801025a:	60a2      	strpl	r2, [r4, #8]
 801025c:	075e      	lsls	r6, r3, #29
 801025e:	bf5f      	itttt	pl
 8010260:	4a6a      	ldrpl	r2, [pc, #424]	; (801040c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010262:	6812      	ldrpl	r2, [r2, #0]
 8010264:	69d2      	ldrpl	r2, [r2, #28]
 8010266:	60e2      	strpl	r2, [r4, #12]
 8010268:	071d      	lsls	r5, r3, #28
 801026a:	bf58      	it	pl
 801026c:	4a67      	ldrpl	r2, [pc, #412]	; (801040c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801026e:	f104 0519 	add.w	r5, r4, #25
 8010272:	bf5e      	ittt	pl
 8010274:	6812      	ldrpl	r2, [r2, #0]
 8010276:	6992      	ldrpl	r2, [r2, #24]
 8010278:	6122      	strpl	r2, [r4, #16]
 801027a:	0698      	lsls	r0, r3, #26
 801027c:	d418      	bmi.n	80102b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 801027e:	4628      	mov	r0, r5
 8010280:	223f      	movs	r2, #63	; 0x3f
 8010282:	4b62      	ldr	r3, [pc, #392]	; (801040c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010284:	681b      	ldr	r3, [r3, #0]
 8010286:	331f      	adds	r3, #31
 8010288:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801028c:	b949      	cbnz	r1, 80102a2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 801028e:	f002 f839 	bl	8012304 <memset>
 8010292:	e00a      	b.n	80102aa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8010294:	6823      	ldr	r3, [r4, #0]
 8010296:	4601      	mov	r1, r0
 8010298:	681a      	ldr	r2, [r3, #0]
 801029a:	4618      	mov	r0, r3
 801029c:	68d2      	ldr	r2, [r2, #12]
 801029e:	4790      	blx	r2
 80102a0:	e7cf      	b.n	8010242 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80102a2:	3a01      	subs	r2, #1
 80102a4:	f800 1b01 	strb.w	r1, [r0], #1
 80102a8:	d1ee      	bne.n	8010288 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 80102aa:	2300      	movs	r3, #0
 80102ac:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80102b0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80102b4:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80102b8:	7e23      	ldrb	r3, [r4, #24]
 80102ba:	42b2      	cmp	r2, r6
 80102bc:	6861      	ldr	r1, [r4, #4]
 80102be:	d21a      	bcs.n	80102f6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 80102c0:	9803      	ldr	r0, [sp, #12]
 80102c2:	07c9      	lsls	r1, r1, #31
 80102c4:	4410      	add	r0, r2
 80102c6:	eba6 0602 	sub.w	r6, r6, r2
 80102ca:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80102ce:	d404      	bmi.n	80102da <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 80102d0:	b922      	cbnz	r2, 80102dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 80102d2:	9300      	str	r3, [sp, #0]
 80102d4:	4a4e      	ldr	r2, [pc, #312]	; (8010410 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 80102d6:	4b4f      	ldr	r3, [pc, #316]	; (8010414 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 80102d8:	e003      	b.n	80102e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 80102da:	b312      	cbz	r2, 8010322 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 80102dc:	9300      	str	r3, [sp, #0]
 80102de:	4a4e      	ldr	r2, [pc, #312]	; (8010418 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80102e0:	4b4c      	ldr	r3, [pc, #304]	; (8010414 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 80102e2:	4631      	mov	r1, r6
 80102e4:	f7f8 ffee 	bl	80092c4 <snprintf>
 80102e8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80102ec:	4286      	cmp	r6, r0
 80102ee:	bfa4      	itt	ge
 80102f0:	181b      	addge	r3, r3, r0
 80102f2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80102f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80102fa:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80102fe:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010302:	42b2      	cmp	r2, r6
 8010304:	6861      	ldr	r1, [r4, #4]
 8010306:	d21f      	bcs.n	8010348 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 8010308:	9803      	ldr	r0, [sp, #12]
 801030a:	05c9      	lsls	r1, r1, #23
 801030c:	4410      	add	r0, r2
 801030e:	eba6 0602 	sub.w	r6, r6, r2
 8010312:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010316:	d408      	bmi.n	801032a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 8010318:	b94a      	cbnz	r2, 801032e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 801031a:	9300      	str	r3, [sp, #0]
 801031c:	4a3c      	ldr	r2, [pc, #240]	; (8010410 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 801031e:	4b3f      	ldr	r3, [pc, #252]	; (801041c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8010320:	e008      	b.n	8010334 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8010322:	9300      	str	r3, [sp, #0]
 8010324:	4a3e      	ldr	r2, [pc, #248]	; (8010420 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8010326:	4b3b      	ldr	r3, [pc, #236]	; (8010414 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010328:	e7db      	b.n	80102e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 801032a:	2a00      	cmp	r2, #0
 801032c:	d03c      	beq.n	80103a8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 801032e:	9300      	str	r3, [sp, #0]
 8010330:	4a39      	ldr	r2, [pc, #228]	; (8010418 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8010332:	4b3a      	ldr	r3, [pc, #232]	; (801041c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8010334:	4631      	mov	r1, r6
 8010336:	f7f8 ffc5 	bl	80092c4 <snprintf>
 801033a:	4286      	cmp	r6, r0
 801033c:	bfa2      	ittt	ge
 801033e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8010342:	18c0      	addge	r0, r0, r3
 8010344:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010348:	4936      	ldr	r1, [pc, #216]	; (8010424 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 801034a:	a803      	add	r0, sp, #12
 801034c:	f001 f940 	bl	80115d0 <PropertiesBuilder::AddComment(char const*)>
 8010350:	6863      	ldr	r3, [r4, #4]
 8010352:	68a2      	ldr	r2, [r4, #8]
 8010354:	4934      	ldr	r1, [pc, #208]	; (8010428 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8010356:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801035a:	a803      	add	r0, sp, #12
 801035c:	f001 f8f4 	bl	8011548 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010360:	6863      	ldr	r3, [r4, #4]
 8010362:	68e2      	ldr	r2, [r4, #12]
 8010364:	4931      	ldr	r1, [pc, #196]	; (801042c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8010366:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801036a:	a803      	add	r0, sp, #12
 801036c:	f001 f8ec 	bl	8011548 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010370:	6863      	ldr	r3, [r4, #4]
 8010372:	6922      	ldr	r2, [r4, #16]
 8010374:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010378:	492d      	ldr	r1, [pc, #180]	; (8010430 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 801037a:	a803      	add	r0, sp, #12
 801037c:	f001 f8e4 	bl	8011548 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010380:	6862      	ldr	r2, [r4, #4]
 8010382:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010386:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 801038a:	42a3      	cmp	r3, r4
 801038c:	d21e      	bcs.n	80103cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 801038e:	9803      	ldr	r0, [sp, #12]
 8010390:	0692      	lsls	r2, r2, #26
 8010392:	4418      	add	r0, r3
 8010394:	eba4 0403 	sub.w	r4, r4, r3
 8010398:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801039c:	d408      	bmi.n	80103b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 801039e:	b943      	cbnz	r3, 80103b2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 80103a0:	4b24      	ldr	r3, [pc, #144]	; (8010434 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80103a2:	4a25      	ldr	r2, [pc, #148]	; (8010438 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 80103a4:	9500      	str	r5, [sp, #0]
 80103a6:	e007      	b.n	80103b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 80103a8:	9300      	str	r3, [sp, #0]
 80103aa:	4a1d      	ldr	r2, [pc, #116]	; (8010420 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 80103ac:	4b1b      	ldr	r3, [pc, #108]	; (801041c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80103ae:	e7c1      	b.n	8010334 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 80103b0:	b32b      	cbz	r3, 80103fe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 80103b2:	4b20      	ldr	r3, [pc, #128]	; (8010434 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80103b4:	4a21      	ldr	r2, [pc, #132]	; (801043c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 80103b6:	9500      	str	r5, [sp, #0]
 80103b8:	4621      	mov	r1, r4
 80103ba:	f7f8 ff83 	bl	80092c4 <snprintf>
 80103be:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80103c2:	4284      	cmp	r4, r0
 80103c4:	bfa4      	itt	ge
 80103c6:	181b      	addge	r3, r3, r0
 80103c8:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80103cc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80103d0:	b17b      	cbz	r3, 80103f2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 80103d2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80103d6:	9b03      	ldr	r3, [sp, #12]
 80103d8:	4413      	add	r3, r2
 80103da:	227d      	movs	r2, #125	; 0x7d
 80103dc:	f803 2c01 	strb.w	r2, [r3, #-1]
 80103e0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80103e4:	9903      	ldr	r1, [sp, #12]
 80103e6:	54ca      	strb	r2, [r1, r3]
 80103e8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80103ec:	3301      	adds	r3, #1
 80103ee:	f8ad 3012 	strh.w	r3, [sp, #18]
 80103f2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80103f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80103f8:	601a      	str	r2, [r3, #0]
 80103fa:	b006      	add	sp, #24
 80103fc:	bd70      	pop	{r4, r5, r6, pc}
 80103fe:	4b0d      	ldr	r3, [pc, #52]	; (8010434 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8010400:	4a0f      	ldr	r2, [pc, #60]	; (8010440 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 8010402:	9500      	str	r5, [sp, #0]
 8010404:	e7d8      	b.n	80103b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 8010406:	bf00      	nop
 8010408:	08016855 	stmdaeq	r1, {r0, r2, r4, r6, fp, sp, lr}
 801040c:	2000a830 	andcs	sl, r0, r0, lsr r8
 8010410:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 8010414:	0801684c 	stmdaeq	r1, {r2, r3, r6, fp, sp, lr}
 8010418:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 801041c:	0801682a 	stmdaeq	r1, {r1, r3, r5, fp, sp, lr}
 8010420:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}
 8010424:	08016805 	stmdaeq	r1, {r0, r2, fp, sp, lr}
 8010428:	0801680f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr}
 801042c:	08016843 	stmdaeq	r1, {r0, r1, r6, fp, sp, lr}
 8010430:	0801681a 	stmdaeq	r1, {r1, r3, r4, fp, sp, lr}
 8010434:	0801683a 	stmdaeq	r1, {r1, r3, r4, r5, fp, sp, lr}
 8010438:	08014968 	stmdaeq	r1, {r3, r5, r6, r8, fp, lr}
 801043c:	0801495d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, lr}
 8010440:	08014969 	stmdaeq	r1, {r0, r3, r5, r6, r8, fp, lr}

08010444 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8010444:	b513      	push	{r0, r1, r4, lr}
 8010446:	6804      	ldr	r4, [r0, #0]
 8010448:	b914      	cbnz	r4, 8010450 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 801044a:	601c      	str	r4, [r3, #0]
 801044c:	b002      	add	sp, #8
 801044e:	bd10      	pop	{r4, pc}
 8010450:	9300      	str	r3, [sp, #0]
 8010452:	4613      	mov	r3, r2
 8010454:	460a      	mov	r2, r1
 8010456:	2100      	movs	r1, #0
 8010458:	f7ff fee8 	bl	801022c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 801045c:	e7f6      	b.n	801044c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801045e <NetworkParams::Dump()>:
 801045e:	4770      	bx	lr

08010460 <memcpy.isra.0>:
 8010460:	3801      	subs	r0, #1
 8010462:	440a      	add	r2, r1
 8010464:	4291      	cmp	r1, r2
 8010466:	d100      	bne.n	801046a <memcpy.isra.0+0xa>
 8010468:	4770      	bx	lr
 801046a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801046e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010472:	e7f7      	b.n	8010464 <memcpy.isra.0+0x4>

08010474 <arp_announce>:
 8010474:	4803      	ldr	r0, [pc, #12]	; (8010484 <arp_announce+0x10>)
 8010476:	69c3      	ldr	r3, [r0, #28]
 8010478:	b113      	cbz	r3, 8010480 <arp_announce+0xc>
 801047a:	212a      	movs	r1, #42	; 0x2a
 801047c:	f002 bd58 	b.w	8012f30 <emac_eth_send>
 8010480:	4770      	bx	lr
 8010482:	bf00      	nop
 8010484:	2000a834 	andcs	sl, r0, r4, lsr r8

08010488 <arp_handle_request>:
 8010488:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801048a:	2204      	movs	r2, #4
 801048c:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010490:	4604      	mov	r4, r0
 8010492:	eb0d 0002 	add.w	r0, sp, r2
 8010496:	f7ff ffe3 	bl	8010460 <memcpy.isra.0>
 801049a:	4b0d      	ldr	r3, [pc, #52]	; (80104d0 <arp_handle_request+0x48>)
 801049c:	9a01      	ldr	r2, [sp, #4]
 801049e:	69db      	ldr	r3, [r3, #28]
 80104a0:	429a      	cmp	r2, r3
 80104a2:	d113      	bne.n	80104cc <arp_handle_request+0x44>
 80104a4:	2206      	movs	r2, #6
 80104a6:	4d0b      	ldr	r5, [pc, #44]	; (80104d4 <arp_handle_request+0x4c>)
 80104a8:	18a1      	adds	r1, r4, r2
 80104aa:	4628      	mov	r0, r5
 80104ac:	f7ff ffd8 	bl	8010460 <memcpy.isra.0>
 80104b0:	f104 0116 	add.w	r1, r4, #22
 80104b4:	f105 0020 	add.w	r0, r5, #32
 80104b8:	2206      	movs	r2, #6
 80104ba:	f7ff ffd1 	bl	8010460 <memcpy.isra.0>
 80104be:	69e3      	ldr	r3, [r4, #28]
 80104c0:	212a      	movs	r1, #42	; 0x2a
 80104c2:	4628      	mov	r0, r5
 80104c4:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 80104c8:	f002 fd32 	bl	8012f30 <emac_eth_send>
 80104cc:	b003      	add	sp, #12
 80104ce:	bd30      	pop	{r4, r5, pc}
 80104d0:	2000a834 	andcs	sl, r0, r4, lsr r8
 80104d4:	2000a860 	andcs	sl, r0, r0, ror #16

080104d8 <arp_handle_reply>:
 80104d8:	69c1      	ldr	r1, [r0, #28]
 80104da:	3016      	adds	r0, #22
 80104dc:	f000 b80a 	b.w	80104f4 <arp_cache_update>

080104e0 <arp_send_request>:
 80104e0:	4b03      	ldr	r3, [pc, #12]	; (80104f0 <arp_send_request+0x10>)
 80104e2:	212a      	movs	r1, #42	; 0x2a
 80104e4:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 80104e8:	4618      	mov	r0, r3
 80104ea:	f002 bd21 	b.w	8012f30 <emac_eth_send>
 80104ee:	bf00      	nop
 80104f0:	2000a88c 	andcs	sl, r0, ip, lsl #17

080104f4 <arp_cache_update>:
 80104f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104f6:	4e11      	ldr	r6, [pc, #68]	; (801053c <arp_cache_update+0x48>)
 80104f8:	8833      	ldrh	r3, [r6, #0]
 80104fa:	2b20      	cmp	r3, #32
 80104fc:	d018      	beq.n	8010530 <arp_cache_update+0x3c>
 80104fe:	2400      	movs	r4, #0
 8010500:	220c      	movs	r2, #12
 8010502:	4d0f      	ldr	r5, [pc, #60]	; (8010540 <arp_cache_update+0x4c>)
 8010504:	b2a7      	uxth	r7, r4
 8010506:	42bb      	cmp	r3, r7
 8010508:	d80b      	bhi.n	8010522 <arp_cache_update+0x2e>
 801050a:	fb02 5203 	mla	r2, r2, r3, r5
 801050e:	1d84      	adds	r4, r0, #6
 8010510:	3203      	adds	r2, #3
 8010512:	42a0      	cmp	r0, r4
 8010514:	d10d      	bne.n	8010532 <arp_cache_update+0x3e>
 8010516:	220c      	movs	r2, #12
 8010518:	435a      	muls	r2, r3
 801051a:	3301      	adds	r3, #1
 801051c:	50a9      	str	r1, [r5, r2]
 801051e:	8033      	strh	r3, [r6, #0]
 8010520:	e006      	b.n	8010530 <arp_cache_update+0x3c>
 8010522:	3401      	adds	r4, #1
 8010524:	fb02 5704 	mla	r7, r2, r4, r5
 8010528:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 801052c:	428f      	cmp	r7, r1
 801052e:	d1e9      	bne.n	8010504 <arp_cache_update+0x10>
 8010530:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010532:	f810 7b01 	ldrb.w	r7, [r0], #1
 8010536:	f802 7f01 	strb.w	r7, [r2, #1]!
 801053a:	e7ea      	b.n	8010512 <arp_cache_update+0x1e>
 801053c:	2000aa38 	andcs	sl, r0, r8, lsr sl
 8010540:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

08010544 <arp_cache_lookup>:
 8010544:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010548:	2200      	movs	r2, #0
 801054a:	4606      	mov	r6, r0
 801054c:	460c      	mov	r4, r1
 801054e:	200c      	movs	r0, #12
 8010550:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80105d8 <arp_cache_lookup+0x94>
 8010554:	fb00 f302 	mul.w	r3, r0, r2
 8010558:	f853 1008 	ldr.w	r1, [r3, r8]
 801055c:	42b1      	cmp	r1, r6
 801055e:	d10d      	bne.n	801057c <arp_cache_lookup+0x38>
 8010560:	3304      	adds	r3, #4
 8010562:	4443      	add	r3, r8
 8010564:	3c01      	subs	r4, #1
 8010566:	1d9a      	adds	r2, r3, #6
 8010568:	4293      	cmp	r3, r2
 801056a:	d102      	bne.n	8010572 <arp_cache_lookup+0x2e>
 801056c:	4630      	mov	r0, r6
 801056e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010572:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010576:	f804 1f01 	strb.w	r1, [r4, #1]!
 801057a:	e7f5      	b.n	8010568 <arp_cache_lookup+0x24>
 801057c:	b111      	cbz	r1, 8010584 <arp_cache_lookup+0x40>
 801057e:	3201      	adds	r2, #1
 8010580:	2a20      	cmp	r2, #32
 8010582:	d1e7      	bne.n	8010554 <arp_cache_lookup+0x10>
 8010584:	2704      	movs	r7, #4
 8010586:	f8df a054 	ldr.w	sl, [pc, #84]	; 80105dc <arp_cache_lookup+0x98>
 801058a:	f8ba 5000 	ldrh.w	r5, [sl]
 801058e:	3f01      	subs	r7, #1
 8010590:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010594:	d101      	bne.n	801059a <arp_cache_lookup+0x56>
 8010596:	463e      	mov	r6, r7
 8010598:	e7e8      	b.n	801056c <arp_cache_lookup+0x28>
 801059a:	4630      	mov	r0, r6
 801059c:	f7ff ffa0 	bl	80104e0 <arp_send_request>
 80105a0:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 80105a4:	f1b9 0901 	subs.w	r9, r9, #1
 80105a8:	f8ba 3000 	ldrh.w	r3, [sl]
 80105ac:	d011      	beq.n	80105d2 <arp_cache_lookup+0x8e>
 80105ae:	429d      	cmp	r5, r3
 80105b0:	d00c      	beq.n	80105cc <arp_cache_lookup+0x88>
 80105b2:	230c      	movs	r3, #12
 80105b4:	fb03 8505 	mla	r5, r3, r5, r8
 80105b8:	3c01      	subs	r4, #1
 80105ba:	1d2b      	adds	r3, r5, #4
 80105bc:	350a      	adds	r5, #10
 80105be:	42ab      	cmp	r3, r5
 80105c0:	d0d4      	beq.n	801056c <arp_cache_lookup+0x28>
 80105c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80105c6:	f804 2f01 	strb.w	r2, [r4, #1]!
 80105ca:	e7f8      	b.n	80105be <arp_cache_lookup+0x7a>
 80105cc:	f7f6 ffa8 	bl	8007520 <net_handle>
 80105d0:	e7e8      	b.n	80105a4 <arp_cache_lookup+0x60>
 80105d2:	429d      	cmp	r5, r3
 80105d4:	d0db      	beq.n	801058e <arp_cache_lookup+0x4a>
 80105d6:	e7ec      	b.n	80105b2 <arp_cache_lookup+0x6e>
 80105d8:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8
 80105dc:	2000aa38 	andcs	sl, r0, r8, lsr sl

080105e0 <_parse_response>:
 80105e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105e4:	2400      	movs	r4, #0
 80105e6:	460d      	mov	r5, r1
 80105e8:	46a3      	mov	fp, r4
 80105ea:	4627      	mov	r7, r4
 80105ec:	46a2      	mov	sl, r4
 80105ee:	46a1      	mov	r9, r4
 80105f0:	46a0      	mov	r8, r4
 80105f2:	4e50      	ldr	r6, [pc, #320]	; (8010734 <_parse_response+0x154>)
 80105f4:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 80105f8:	6833      	ldr	r3, [r6, #0]
 80105fa:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80105fe:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010602:	9009      	str	r0, [sp, #36]	; 0x24
 8010604:	9402      	str	r4, [sp, #8]
 8010606:	9407      	str	r4, [sp, #28]
 8010608:	9308      	str	r3, [sp, #32]
 801060a:	f7f6 ff89 	bl	8007520 <net_handle>
 801060e:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010612:	9300      	str	r3, [sp, #0]
 8010614:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010618:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 801061c:	ab0c      	add	r3, sp, #48	; 0x30
 801061e:	a90d      	add	r1, sp, #52	; 0x34
 8010620:	f7fe fe20 	bl	800f264 <udp_recv>
 8010624:	2800      	cmp	r0, #0
 8010626:	d03f      	beq.n	80106a8 <_parse_response+0xc8>
 8010628:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801062c:	2b43      	cmp	r3, #67	; 0x43
 801062e:	d13b      	bne.n	80106a8 <_parse_response+0xc8>
 8010630:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8010634:	1e6b      	subs	r3, r5, #1
 8010636:	1d69      	adds	r1, r5, #5
 8010638:	4299      	cmp	r1, r3
 801063a:	d12f      	bne.n	801069c <_parse_response+0xbc>
 801063c:	2100      	movs	r1, #0
 801063e:	ab0d      	add	r3, sp, #52	; 0x34
 8010640:	181d      	adds	r5, r3, r0
 8010642:	468c      	mov	ip, r1
 8010644:	460e      	mov	r6, r1
 8010646:	4608      	mov	r0, r1
 8010648:	ab49      	add	r3, sp, #292	; 0x124
 801064a:	42ab      	cmp	r3, r5
 801064c:	d337      	bcc.n	80106be <_parse_response+0xde>
 801064e:	b141      	cbz	r1, 8010662 <_parse_response+0x82>
 8010650:	4b39      	ldr	r3, [pc, #228]	; (8010738 <_parse_response+0x158>)
 8010652:	9a07      	ldr	r2, [sp, #28]
 8010654:	f883 8003 	strb.w	r8, [r3, #3]
 8010658:	709a      	strb	r2, [r3, #2]
 801065a:	9a06      	ldr	r2, [sp, #24]
 801065c:	705a      	strb	r2, [r3, #1]
 801065e:	9a05      	ldr	r2, [sp, #20]
 8010660:	701a      	strb	r2, [r3, #0]
 8010662:	f1bc 0f00 	cmp.w	ip, #0
 8010666:	d007      	beq.n	8010678 <_parse_response+0x98>
 8010668:	4b34      	ldr	r3, [pc, #208]	; (801073c <_parse_response+0x15c>)
 801066a:	9a04      	ldr	r2, [sp, #16]
 801066c:	705c      	strb	r4, [r3, #1]
 801066e:	70da      	strb	r2, [r3, #3]
 8010670:	9a03      	ldr	r2, [sp, #12]
 8010672:	709a      	strb	r2, [r3, #2]
 8010674:	9a02      	ldr	r2, [sp, #8]
 8010676:	701a      	strb	r2, [r3, #0]
 8010678:	b13e      	cbz	r6, 801068a <_parse_response+0xaa>
 801067a:	4b31      	ldr	r3, [pc, #196]	; (8010740 <_parse_response+0x160>)
 801067c:	70df      	strb	r7, [r3, #3]
 801067e:	f883 a002 	strb.w	sl, [r3, #2]
 8010682:	f883 9001 	strb.w	r9, [r3, #1]
 8010686:	f883 b000 	strb.w	fp, [r3]
 801068a:	2802      	cmp	r0, #2
 801068c:	d102      	bne.n	8010694 <_parse_response+0xb4>
 801068e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010690:	4b2c      	ldr	r3, [pc, #176]	; (8010744 <_parse_response+0x164>)
 8010692:	601a      	str	r2, [r3, #0]
 8010694:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8010698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801069c:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 80106a0:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 80106a4:	45e6      	cmp	lr, ip
 80106a6:	d0c7      	beq.n	8010638 <_parse_response+0x58>
 80106a8:	6833      	ldr	r3, [r6, #0]
 80106aa:	9a08      	ldr	r2, [sp, #32]
 80106ac:	1a9b      	subs	r3, r3, r2
 80106ae:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80106b2:	d3aa      	bcc.n	801060a <_parse_response+0x2a>
 80106b4:	2800      	cmp	r0, #0
 80106b6:	d1c1      	bne.n	801063c <_parse_response+0x5c>
 80106b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80106bc:	e7ea      	b.n	8010694 <_parse_response+0xb4>
 80106be:	781a      	ldrb	r2, [r3, #0]
 80106c0:	2a35      	cmp	r2, #53	; 0x35
 80106c2:	d011      	beq.n	80106e8 <_parse_response+0x108>
 80106c4:	d808      	bhi.n	80106d8 <_parse_response+0xf8>
 80106c6:	2a01      	cmp	r2, #1
 80106c8:	d011      	beq.n	80106ee <_parse_response+0x10e>
 80106ca:	2a03      	cmp	r2, #3
 80106cc:	d019      	beq.n	8010702 <_parse_response+0x122>
 80106ce:	b14a      	cbz	r2, 80106e4 <_parse_response+0x104>
 80106d0:	1c9a      	adds	r2, r3, #2
 80106d2:	785b      	ldrb	r3, [r3, #1]
 80106d4:	4413      	add	r3, r2
 80106d6:	e7b8      	b.n	801064a <_parse_response+0x6a>
 80106d8:	2a36      	cmp	r2, #54	; 0x36
 80106da:	d01f      	beq.n	801071c <_parse_response+0x13c>
 80106dc:	2aff      	cmp	r2, #255	; 0xff
 80106de:	d1f7      	bne.n	80106d0 <_parse_response+0xf0>
 80106e0:	462b      	mov	r3, r5
 80106e2:	e7b2      	b.n	801064a <_parse_response+0x6a>
 80106e4:	3301      	adds	r3, #1
 80106e6:	e7b0      	b.n	801064a <_parse_response+0x6a>
 80106e8:	7898      	ldrb	r0, [r3, #2]
 80106ea:	3303      	adds	r3, #3
 80106ec:	e7ad      	b.n	801064a <_parse_response+0x6a>
 80106ee:	f893 b002 	ldrb.w	fp, [r3, #2]
 80106f2:	f893 9003 	ldrb.w	r9, [r3, #3]
 80106f6:	f893 a004 	ldrb.w	sl, [r3, #4]
 80106fa:	795f      	ldrb	r7, [r3, #5]
 80106fc:	4616      	mov	r6, r2
 80106fe:	3306      	adds	r3, #6
 8010700:	e7a3      	b.n	801064a <_parse_response+0x6a>
 8010702:	789a      	ldrb	r2, [r3, #2]
 8010704:	78dc      	ldrb	r4, [r3, #3]
 8010706:	9202      	str	r2, [sp, #8]
 8010708:	791a      	ldrb	r2, [r3, #4]
 801070a:	f04f 0c01 	mov.w	ip, #1
 801070e:	9203      	str	r2, [sp, #12]
 8010710:	795a      	ldrb	r2, [r3, #5]
 8010712:	9204      	str	r2, [sp, #16]
 8010714:	785a      	ldrb	r2, [r3, #1]
 8010716:	4413      	add	r3, r2
 8010718:	3302      	adds	r3, #2
 801071a:	e796      	b.n	801064a <_parse_response+0x6a>
 801071c:	789a      	ldrb	r2, [r3, #2]
 801071e:	f893 8005 	ldrb.w	r8, [r3, #5]
 8010722:	9205      	str	r2, [sp, #20]
 8010724:	78da      	ldrb	r2, [r3, #3]
 8010726:	2101      	movs	r1, #1
 8010728:	9206      	str	r2, [sp, #24]
 801072a:	791a      	ldrb	r2, [r3, #4]
 801072c:	3306      	adds	r3, #6
 801072e:	9207      	str	r2, [sp, #28]
 8010730:	e78b      	b.n	801064a <_parse_response+0x6a>
 8010732:	bf00      	nop
 8010734:	2000af0c 	andcs	sl, r0, ip, lsl #30
 8010738:	2000ac6c 	andcs	sl, r0, ip, ror #24
 801073c:	2000aa3c 	andcs	sl, r0, ip, lsr sl
 8010740:	2000aa44 	andcs	sl, r0, r4, asr #20
 8010744:	2000aa40 	andcs	sl, r0, r0, asr #20

08010748 <memcpy.isra.0>:
 8010748:	3801      	subs	r0, #1
 801074a:	440a      	add	r2, r1
 801074c:	4291      	cmp	r1, r2
 801074e:	d100      	bne.n	8010752 <memcpy.isra.0+0xa>
 8010750:	4770      	bx	lr
 8010752:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010756:	f800 3f01 	strb.w	r3, [r0, #1]!
 801075a:	e7f7      	b.n	801074c <memcpy.isra.0+0x4>

0801075c <dhcp_client>:
 801075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010760:	b087      	sub	sp, #28
 8010762:	9203      	str	r2, [sp, #12]
 8010764:	4a77      	ldr	r2, [pc, #476]	; (8010944 <dhcp_client+0x1e8>)
 8010766:	460f      	mov	r7, r1
 8010768:	4605      	mov	r5, r0
 801076a:	f44f 7309 	mov.w	r3, #548	; 0x224
 801076e:	4614      	mov	r4, r2
 8010770:	2100      	movs	r1, #0
 8010772:	3b01      	subs	r3, #1
 8010774:	f802 1b01 	strb.w	r1, [r2], #1
 8010778:	d1fb      	bne.n	8010772 <dhcp_client+0x16>
 801077a:	f240 1301 	movw	r3, #257	; 0x101
 801077e:	2206      	movs	r2, #6
 8010780:	4629      	mov	r1, r5
 8010782:	4871      	ldr	r0, [pc, #452]	; (8010948 <dhcp_client+0x1ec>)
 8010784:	8023      	strh	r3, [r4, #0]
 8010786:	70a2      	strb	r2, [r4, #2]
 8010788:	f7ff ffde 	bl	8010748 <memcpy.isra.0>
 801078c:	4b6f      	ldr	r3, [pc, #444]	; (801094c <dhcp_client+0x1f0>)
 801078e:	2044      	movs	r0, #68	; 0x44
 8010790:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010794:	f240 1335 	movw	r3, #309	; 0x135
 8010798:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 801079c:	f7fe fd28 	bl	800f1f0 <udp_bind>
 80107a0:	1e06      	subs	r6, r0, #0
 80107a2:	f2c0 80c9 	blt.w	8010938 <dhcp_client+0x1dc>
 80107a6:	f04f 0915 	mov.w	r9, #21
 80107aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010944 <dhcp_client+0x1e8>
 80107ae:	f1b9 0901 	subs.w	r9, r9, #1
 80107b2:	d11f      	bne.n	80107f4 <dhcp_client+0x98>
 80107b4:	464c      	mov	r4, r9
 80107b6:	2044      	movs	r0, #68	; 0x44
 80107b8:	f7fe fd34 	bl	800f224 <udp_unbind>
 80107bc:	2c00      	cmp	r4, #0
 80107be:	f000 80be 	beq.w	801093e <dhcp_client+0x1e2>
 80107c2:	2204      	movs	r2, #4
 80107c4:	4962      	ldr	r1, [pc, #392]	; (8010950 <dhcp_client+0x1f4>)
 80107c6:	a805      	add	r0, sp, #20
 80107c8:	f7ff ffbe 	bl	8010748 <memcpy.isra.0>
 80107cc:	9b05      	ldr	r3, [sp, #20]
 80107ce:	2204      	movs	r2, #4
 80107d0:	4960      	ldr	r1, [pc, #384]	; (8010954 <dhcp_client+0x1f8>)
 80107d2:	603b      	str	r3, [r7, #0]
 80107d4:	a805      	add	r0, sp, #20
 80107d6:	f7ff ffb7 	bl	8010748 <memcpy.isra.0>
 80107da:	9b05      	ldr	r3, [sp, #20]
 80107dc:	a805      	add	r0, sp, #20
 80107de:	60bb      	str	r3, [r7, #8]
 80107e0:	2204      	movs	r2, #4
 80107e2:	495d      	ldr	r1, [pc, #372]	; (8010958 <dhcp_client+0x1fc>)
 80107e4:	f7ff ffb0 	bl	8010748 <memcpy.isra.0>
 80107e8:	2000      	movs	r0, #0
 80107ea:	9b05      	ldr	r3, [sp, #20]
 80107ec:	607b      	str	r3, [r7, #4]
 80107ee:	b007      	add	sp, #28
 80107f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107f4:	f643 5301 	movw	r3, #15617	; 0x3d01
 80107f8:	f240 1807 	movw	r8, #263	; 0x107
 80107fc:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010800:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010804:	782b      	ldrb	r3, [r5, #0]
 8010806:	4a55      	ldr	r2, [pc, #340]	; (801095c <dhcp_client+0x200>)
 8010808:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 801080c:	786b      	ldrb	r3, [r5, #1]
 801080e:	fa5f fb86 	uxtb.w	fp, r6
 8010812:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010816:	78ab      	ldrb	r3, [r5, #2]
 8010818:	4651      	mov	r1, sl
 801081a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801081e:	78eb      	ldrb	r3, [r5, #3]
 8010820:	4658      	mov	r0, fp
 8010822:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010826:	792b      	ldrb	r3, [r5, #4]
 8010828:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 801082c:	796b      	ldrb	r3, [r5, #5]
 801082e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010832:	4b4b      	ldr	r3, [pc, #300]	; (8010960 <dhcp_client+0x204>)
 8010834:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8010838:	23ff      	movs	r3, #255	; 0xff
 801083a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 801083e:	2343      	movs	r3, #67	; 0x43
 8010840:	f240 1205 	movw	r2, #261	; 0x105
 8010844:	9300      	str	r3, [sp, #0]
 8010846:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801084a:	f7fe fd67 	bl	800f31c <udp_send>
 801084e:	4629      	mov	r1, r5
 8010850:	4630      	mov	r0, r6
 8010852:	f7ff fec5 	bl	80105e0 <_parse_response>
 8010856:	2802      	cmp	r0, #2
 8010858:	d1a9      	bne.n	80107ae <dhcp_client+0x52>
 801085a:	f643 5303 	movw	r3, #15619	; 0x3d03
 801085e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010862:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010866:	782b      	ldrb	r3, [r5, #0]
 8010868:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8010964 <dhcp_client+0x208>
 801086c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010870:	786b      	ldrb	r3, [r5, #1]
 8010872:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010876:	78ab      	ldrb	r3, [r5, #2]
 8010878:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801087c:	78eb      	ldrb	r3, [r5, #3]
 801087e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010882:	792b      	ldrb	r3, [r5, #4]
 8010884:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010888:	796b      	ldrb	r3, [r5, #5]
 801088a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801088e:	f240 4332 	movw	r3, #1074	; 0x432
 8010892:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8010896:	4b2e      	ldr	r3, [pc, #184]	; (8010950 <dhcp_client+0x1f4>)
 8010898:	881a      	ldrh	r2, [r3, #0]
 801089a:	885b      	ldrh	r3, [r3, #2]
 801089c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 80108a0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 80108a4:	f240 4336 	movw	r3, #1078	; 0x436
 80108a8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 80108ac:	4b2e      	ldr	r3, [pc, #184]	; (8010968 <dhcp_client+0x20c>)
 80108ae:	221e      	movs	r2, #30
 80108b0:	681b      	ldr	r3, [r3, #0]
 80108b2:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 80108b6:	230c      	movs	r3, #12
 80108b8:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 80108bc:	9b03      	ldr	r3, [sp, #12]
 80108be:	1e58      	subs	r0, r3, #1
 80108c0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80108c4:	f1a2 0e1e 	sub.w	lr, r2, #30
 80108c8:	1c51      	adds	r1, r2, #1
 80108ca:	bb8b      	cbnz	r3, 8010930 <dhcp_client+0x1d4>
 80108cc:	2037      	movs	r0, #55	; 0x37
 80108ce:	18a3      	adds	r3, r4, r2
 80108d0:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 80108d4:	2006      	movs	r0, #6
 80108d6:	4421      	add	r1, r4
 80108d8:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 80108dc:	2103      	movs	r1, #3
 80108de:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 80108e2:	210f      	movs	r1, #15
 80108e4:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 80108e8:	213a      	movs	r1, #58	; 0x3a
 80108ea:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80108ee:	213b      	movs	r1, #59	; 0x3b
 80108f0:	f04f 0801 	mov.w	r8, #1
 80108f4:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80108f8:	21ff      	movs	r1, #255	; 0xff
 80108fa:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80108fe:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8010902:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8010906:	2343      	movs	r3, #67	; 0x43
 8010908:	32f5      	adds	r2, #245	; 0xf5
 801090a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801090e:	4651      	mov	r1, sl
 8010910:	9300      	str	r3, [sp, #0]
 8010912:	b292      	uxth	r2, r2
 8010914:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010918:	4658      	mov	r0, fp
 801091a:	f7fe fcff 	bl	800f31c <udp_send>
 801091e:	4629      	mov	r1, r5
 8010920:	4630      	mov	r0, r6
 8010922:	f7ff fe5d 	bl	80105e0 <_parse_response>
 8010926:	2805      	cmp	r0, #5
 8010928:	f47f af41 	bne.w	80107ae <dhcp_client+0x52>
 801092c:	4644      	mov	r4, r8
 801092e:	e742      	b.n	80107b6 <dhcp_client+0x5a>
 8010930:	460a      	mov	r2, r1
 8010932:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8010936:	e7c3      	b.n	80108c0 <dhcp_client+0x164>
 8010938:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801093c:	e757      	b.n	80107ee <dhcp_client+0x92>
 801093e:	f06f 0001 	mvn.w	r0, #1
 8010942:	e754      	b.n	80107ee <dhcp_client+0x92>
 8010944:	2000aa48 	andcs	sl, r0, r8, asr #20
 8010948:	2000aa64 	andcs	sl, r0, r4, ror #20
 801094c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8010950:	2000aa40 	andcs	sl, r0, r0, asr #20
 8010954:	2000aa3c 	andcs	sl, r0, ip, lsr sl
 8010958:	2000aa44 	andcs	sl, r0, r4, asr #20
 801095c:	03010637 	movweq	r0, #5687	; 0x1637
 8010960:	3b3a0f06 	blcc	8e94580 <__exidx_end+0xe7d5a0>
 8010964:	2000ab51 	andcs	sl, r0, r1, asr fp
 8010968:	2000ac6c 	andcs	sl, r0, ip, ror #24

0801096c <dhcp_client_release>:
 801096c:	b507      	push	{r0, r1, r2, lr}
 801096e:	2044      	movs	r0, #68	; 0x44
 8010970:	f7fe fc3e 	bl	800f1f0 <udp_bind>
 8010974:	f243 6307 	movw	r3, #13831	; 0x3607
 8010978:	4911      	ldr	r1, [pc, #68]	; (80109c0 <dhcp_client_release+0x54>)
 801097a:	b2c0      	uxtb	r0, r0
 801097c:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8010980:	2304      	movs	r3, #4
 8010982:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8010986:	4b0f      	ldr	r3, [pc, #60]	; (80109c4 <dhcp_client_release+0x58>)
 8010988:	781a      	ldrb	r2, [r3, #0]
 801098a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 801098e:	785a      	ldrb	r2, [r3, #1]
 8010990:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8010994:	789a      	ldrb	r2, [r3, #2]
 8010996:	78db      	ldrb	r3, [r3, #3]
 8010998:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 801099c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80109a0:	23ff      	movs	r3, #255	; 0xff
 80109a2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80109a6:	2343      	movs	r3, #67	; 0x43
 80109a8:	22fa      	movs	r2, #250	; 0xfa
 80109aa:	9300      	str	r3, [sp, #0]
 80109ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80109b0:	f7fe fcb4 	bl	800f31c <udp_send>
 80109b4:	2044      	movs	r0, #68	; 0x44
 80109b6:	b003      	add	sp, #12
 80109b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80109bc:	f7fe bc32 	b.w	800f224 <udp_unbind>
 80109c0:	2000aa48 	andcs	sl, r0, r8, asr #20
 80109c4:	2000ac6c 	andcs	sl, r0, ip, ror #24

080109c8 <memcpy.isra.0>:
 80109c8:	3801      	subs	r0, #1
 80109ca:	440a      	add	r2, r1
 80109cc:	4291      	cmp	r1, r2
 80109ce:	d100      	bne.n	80109d2 <memcpy.isra.0+0xa>
 80109d0:	4770      	bx	lr
 80109d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80109d6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80109da:	e7f7      	b.n	80109cc <memcpy.isra.0+0x4>

080109dc <_send_report>:
 80109dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80109de:	491c      	ldr	r1, [pc, #112]	; (8010a50 <_send_report+0x74>)
 80109e0:	4c1c      	ldr	r4, [pc, #112]	; (8010a54 <_send_report+0x78>)
 80109e2:	f3c0 2306 	ubfx	r3, r0, #8, #7
 80109e6:	9001      	str	r0, [sp, #4]
 80109e8:	70cb      	strb	r3, [r1, #3]
 80109ea:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80109ee:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80109f2:	710b      	strb	r3, [r1, #4]
 80109f4:	7148      	strb	r0, [r1, #5]
 80109f6:	2206      	movs	r2, #6
 80109f8:	4620      	mov	r0, r4
 80109fa:	f7ff ffe5 	bl	80109c8 <memcpy.isra.0>
 80109fe:	2204      	movs	r2, #4
 8010a00:	2700      	movs	r7, #0
 8010a02:	4d15      	ldr	r5, [pc, #84]	; (8010a58 <_send_report+0x7c>)
 8010a04:	eb0d 0102 	add.w	r1, sp, r2
 8010a08:	882b      	ldrh	r3, [r5, #0]
 8010a0a:	f104 001e 	add.w	r0, r4, #30
 8010a0e:	f104 060e 	add.w	r6, r4, #14
 8010a12:	8263      	strh	r3, [r4, #18]
 8010a14:	f7ff ffd8 	bl	80109c8 <memcpy.isra.0>
 8010a18:	2118      	movs	r1, #24
 8010a1a:	4630      	mov	r0, r6
 8010a1c:	8327      	strh	r7, [r4, #24]
 8010a1e:	f000 f8c6 	bl	8010bae <net_chksum>
 8010a22:	2204      	movs	r2, #4
 8010a24:	8320      	strh	r0, [r4, #24]
 8010a26:	eb0d 0102 	add.w	r1, sp, r2
 8010a2a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8010a2e:	f7ff ffcb 	bl	80109c8 <memcpy.isra.0>
 8010a32:	2120      	movs	r1, #32
 8010a34:	4630      	mov	r0, r6
 8010a36:	8527      	strh	r7, [r4, #40]	; 0x28
 8010a38:	f000 f8b9 	bl	8010bae <net_chksum>
 8010a3c:	212e      	movs	r1, #46	; 0x2e
 8010a3e:	8520      	strh	r0, [r4, #40]	; 0x28
 8010a40:	4620      	mov	r0, r4
 8010a42:	f002 fa75 	bl	8012f30 <emac_eth_send>
 8010a46:	882b      	ldrh	r3, [r5, #0]
 8010a48:	3301      	adds	r3, #1
 8010a4a:	802b      	strh	r3, [r5, #0]
 8010a4c:	b003      	add	sp, #12
 8010a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a50:	2000adc8 	andcs	sl, r0, r8, asr #27
 8010a54:	2000add0 	ldrdcs	sl, [r0], -r0
 8010a58:	2000ad90 	mulcs	r0, r0, sp

08010a5c <igmp_set_ip>:
 8010a5c:	b507      	push	{r0, r1, r2, lr}
 8010a5e:	2204      	movs	r2, #4
 8010a60:	6803      	ldr	r3, [r0, #0]
 8010a62:	eb0d 0102 	add.w	r1, sp, r2
 8010a66:	4806      	ldr	r0, [pc, #24]	; (8010a80 <igmp_set_ip+0x24>)
 8010a68:	9301      	str	r3, [sp, #4]
 8010a6a:	f7ff ffad 	bl	80109c8 <memcpy.isra.0>
 8010a6e:	2204      	movs	r2, #4
 8010a70:	4804      	ldr	r0, [pc, #16]	; (8010a84 <igmp_set_ip+0x28>)
 8010a72:	eb0d 0102 	add.w	r1, sp, r2
 8010a76:	f7ff ffa7 	bl	80109c8 <memcpy.isra.0>
 8010a7a:	b003      	add	sp, #12
 8010a7c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010a80:	2000adea 	andcs	sl, r0, sl, ror #27
 8010a84:	2000adb2 			; <UNDEFINED> instruction: 0x2000adb2

08010a88 <igmp_timer>:
 8010a88:	b570      	push	{r4, r5, r6, lr}
 8010a8a:	2500      	movs	r5, #0
 8010a8c:	2602      	movs	r6, #2
 8010a8e:	4c0a      	ldr	r4, [pc, #40]	; (8010ab8 <igmp_timer+0x30>)
 8010a90:	7963      	ldrb	r3, [r4, #5]
 8010a92:	2b01      	cmp	r3, #1
 8010a94:	d109      	bne.n	8010aaa <igmp_timer+0x22>
 8010a96:	7923      	ldrb	r3, [r4, #4]
 8010a98:	b13b      	cbz	r3, 8010aaa <igmp_timer+0x22>
 8010a9a:	3b01      	subs	r3, #1
 8010a9c:	b2db      	uxtb	r3, r3
 8010a9e:	7123      	strb	r3, [r4, #4]
 8010aa0:	b91b      	cbnz	r3, 8010aaa <igmp_timer+0x22>
 8010aa2:	6820      	ldr	r0, [r4, #0]
 8010aa4:	f7ff ff9a 	bl	80109dc <_send_report>
 8010aa8:	7166      	strb	r6, [r4, #5]
 8010aaa:	3501      	adds	r5, #1
 8010aac:	2d24      	cmp	r5, #36	; 0x24
 8010aae:	f104 0408 	add.w	r4, r4, #8
 8010ab2:	d1ed      	bne.n	8010a90 <igmp_timer+0x8>
 8010ab4:	bd70      	pop	{r4, r5, r6, pc}
 8010ab6:	bf00      	nop
 8010ab8:	2000ac70 	andcs	sl, r0, r0, ror ip

08010abc <igmp_join>:
 8010abc:	b538      	push	{r3, r4, r5, lr}
 8010abe:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8010ac2:	2be0      	cmp	r3, #224	; 0xe0
 8010ac4:	d11b      	bne.n	8010afe <igmp_join+0x42>
 8010ac6:	4911      	ldr	r1, [pc, #68]	; (8010b0c <igmp_join+0x50>)
 8010ac8:	680c      	ldr	r4, [r1, #0]
 8010aca:	2c24      	cmp	r4, #36	; 0x24
 8010acc:	d01a      	beq.n	8010b04 <igmp_join+0x48>
 8010ace:	2300      	movs	r3, #0
 8010ad0:	4a0f      	ldr	r2, [pc, #60]	; (8010b10 <igmp_join+0x54>)
 8010ad2:	429c      	cmp	r4, r3
 8010ad4:	dc0d      	bgt.n	8010af2 <igmp_join+0x36>
 8010ad6:	f44f 7381 	mov.w	r3, #258	; 0x102
 8010ada:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8010ade:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8010ae2:	8093      	strh	r3, [r2, #4]
 8010ae4:	1c63      	adds	r3, r4, #1
 8010ae6:	600b      	str	r3, [r1, #0]
 8010ae8:	f7ff ff78 	bl	80109dc <_send_report>
 8010aec:	4623      	mov	r3, r4
 8010aee:	4618      	mov	r0, r3
 8010af0:	bd38      	pop	{r3, r4, r5, pc}
 8010af2:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8010af6:	4285      	cmp	r5, r0
 8010af8:	d0f9      	beq.n	8010aee <igmp_join+0x32>
 8010afa:	3301      	adds	r3, #1
 8010afc:	e7e9      	b.n	8010ad2 <igmp_join+0x16>
 8010afe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010b02:	e7f4      	b.n	8010aee <igmp_join+0x32>
 8010b04:	f06f 0301 	mvn.w	r3, #1
 8010b08:	e7f1      	b.n	8010aee <igmp_join+0x32>
 8010b0a:	bf00      	nop
 8010b0c:	2000ad94 	mulcs	r0, r4, sp
 8010b10:	2000ac70 	andcs	sl, r0, r0, ror ip

08010b14 <igmp_leave>:
 8010b14:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010b18:	2600      	movs	r6, #0
 8010b1a:	4f1c      	ldr	r7, [pc, #112]	; (8010b8c <igmp_leave+0x78>)
 8010b1c:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8010b20:	4283      	cmp	r3, r0
 8010b22:	d007      	beq.n	8010b34 <igmp_leave+0x20>
 8010b24:	3601      	adds	r6, #1
 8010b26:	2e24      	cmp	r6, #36	; 0x24
 8010b28:	d1f8      	bne.n	8010b1c <igmp_leave+0x8>
 8010b2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010b2e:	b002      	add	sp, #8
 8010b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010b34:	2400      	movs	r4, #0
 8010b36:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8010b90 <igmp_leave+0x7c>
 8010b3a:	4d16      	ldr	r5, [pc, #88]	; (8010b94 <igmp_leave+0x80>)
 8010b3c:	f8b8 3000 	ldrh.w	r3, [r8]
 8010b40:	2118      	movs	r1, #24
 8010b42:	9001      	str	r0, [sp, #4]
 8010b44:	4814      	ldr	r0, [pc, #80]	; (8010b98 <igmp_leave+0x84>)
 8010b46:	826b      	strh	r3, [r5, #18]
 8010b48:	832c      	strh	r4, [r5, #24]
 8010b4a:	f000 f830 	bl	8010bae <net_chksum>
 8010b4e:	2204      	movs	r2, #4
 8010b50:	8328      	strh	r0, [r5, #24]
 8010b52:	eb0d 0102 	add.w	r1, sp, r2
 8010b56:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8010b5a:	f7ff ff35 	bl	80109c8 <memcpy.isra.0>
 8010b5e:	2120      	movs	r1, #32
 8010b60:	f105 000e 	add.w	r0, r5, #14
 8010b64:	852c      	strh	r4, [r5, #40]	; 0x28
 8010b66:	f000 f822 	bl	8010bae <net_chksum>
 8010b6a:	212e      	movs	r1, #46	; 0x2e
 8010b6c:	8528      	strh	r0, [r5, #40]	; 0x28
 8010b6e:	4628      	mov	r0, r5
 8010b70:	f002 f9de 	bl	8012f30 <emac_eth_send>
 8010b74:	f8b8 3000 	ldrh.w	r3, [r8]
 8010b78:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8010b7c:	3301      	adds	r3, #1
 8010b7e:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 8010b82:	4620      	mov	r0, r4
 8010b84:	f8a8 3000 	strh.w	r3, [r8]
 8010b88:	80bc      	strh	r4, [r7, #4]
 8010b8a:	e7d0      	b.n	8010b2e <igmp_leave+0x1a>
 8010b8c:	2000ac70 	andcs	sl, r0, r0, ror ip
 8010b90:	2000ad90 	mulcs	r0, r0, sp
 8010b94:	2000ad98 	mulcs	r0, r8, sp
 8010b98:	2000adde 	ldrdcs	sl, [r0], -lr

08010b9c <ip_set_ip>:
 8010b9c:	b510      	push	{r4, lr}
 8010b9e:	4604      	mov	r4, r0
 8010ba0:	f7fe fb06 	bl	800f1b0 <udp_set_ip>
 8010ba4:	4620      	mov	r0, r4
 8010ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010baa:	f7ff bf57 	b.w	8010a5c <igmp_set_ip>

08010bae <net_chksum>:
 8010bae:	2300      	movs	r3, #0
 8010bb0:	f021 0201 	bic.w	r2, r1, #1
 8010bb4:	b530      	push	{r4, r5, lr}
 8010bb6:	1884      	adds	r4, r0, r2
 8010bb8:	42a0      	cmp	r0, r4
 8010bba:	d10b      	bne.n	8010bd4 <net_chksum+0x26>
 8010bbc:	4291      	cmp	r1, r2
 8010bbe:	d004      	beq.n	8010bca <net_chksum+0x1c>
 8010bc0:	7802      	ldrb	r2, [r0, #0]
 8010bc2:	0212      	lsls	r2, r2, #8
 8010bc4:	ba52      	rev16	r2, r2
 8010bc6:	b292      	uxth	r2, r2
 8010bc8:	4413      	add	r3, r2
 8010bca:	0c1a      	lsrs	r2, r3, #16
 8010bcc:	d106      	bne.n	8010bdc <net_chksum+0x2e>
 8010bce:	43d8      	mvns	r0, r3
 8010bd0:	b280      	uxth	r0, r0
 8010bd2:	bd30      	pop	{r4, r5, pc}
 8010bd4:	f830 5b02 	ldrh.w	r5, [r0], #2
 8010bd8:	442b      	add	r3, r5
 8010bda:	e7ed      	b.n	8010bb8 <net_chksum+0xa>
 8010bdc:	b29b      	uxth	r3, r3
 8010bde:	e7f3      	b.n	8010bc8 <net_chksum+0x1a>

08010be0 <memcpy.isra.0>:
 8010be0:	3801      	subs	r0, #1
 8010be2:	440a      	add	r2, r1
 8010be4:	4291      	cmp	r1, r2
 8010be6:	d100      	bne.n	8010bea <memcpy.isra.0+0xa>
 8010be8:	4770      	bx	lr
 8010bea:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010bee:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010bf2:	e7f7      	b.n	8010be4 <memcpy.isra.0+0x4>

08010bf4 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8010bf4:	b430      	push	{r4, r5}
 8010bf6:	b168      	cbz	r0, 8010c14 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8010bf8:	2300      	movs	r3, #0
 8010bfa:	7905      	ldrb	r5, [r0, #4]
 8010bfc:	5cd4      	ldrb	r4, [r2, r3]
 8010bfe:	b11c      	cbz	r4, 8010c08 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8010c00:	1c5c      	adds	r4, r3, #1
 8010c02:	429d      	cmp	r5, r3
 8010c04:	4623      	mov	r3, r4
 8010c06:	dcf9      	bgt.n	8010bfc <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8010c08:	6804      	ldr	r4, [r0, #0]
 8010c0a:	b2db      	uxtb	r3, r3
 8010c0c:	69e4      	ldr	r4, [r4, #28]
 8010c0e:	46a4      	mov	ip, r4
 8010c10:	bc30      	pop	{r4, r5}
 8010c12:	4760      	bx	ip
 8010c14:	bc30      	pop	{r4, r5}
 8010c16:	4770      	bx	lr

08010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8010c18:	b110      	cbz	r0, 8010c20 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8010c1a:	6803      	ldr	r3, [r0, #0]
 8010c1c:	691b      	ldr	r3, [r3, #16]
 8010c1e:	4718      	bx	r3
 8010c20:	4770      	bx	lr
	...

08010c24 <DisplayUdf::DisplayUdf()>:
 8010c24:	b510      	push	{r4, lr}
 8010c26:	4604      	mov	r4, r0
 8010c28:	f000 fedc 	bl	80119e4 <Display::Display()>
 8010c2c:	2202      	movs	r2, #2
 8010c2e:	2300      	movs	r3, #0
 8010c30:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8010c34:	4b05      	ldr	r3, [pc, #20]	; (8010c4c <DisplayUdf::DisplayUdf()+0x28>)
 8010c36:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8010c3a:	601c      	str	r4, [r3, #0]
 8010c3c:	2301      	movs	r3, #1
 8010c3e:	f802 3f01 	strb.w	r3, [r2, #1]!
 8010c42:	3301      	adds	r3, #1
 8010c44:	2b15      	cmp	r3, #21
 8010c46:	d1fa      	bne.n	8010c3e <DisplayUdf::DisplayUdf()+0x1a>
 8010c48:	4620      	mov	r0, r4
 8010c4a:	bd10      	pop	{r4, pc}
 8010c4c:	2000ae00 	andcs	sl, r0, r0, lsl #28

08010c50 <DisplayUdf::SetTitle(char const*, ...)>:
 8010c50:	b40e      	push	{r1, r2, r3}
 8010c52:	b517      	push	{r0, r1, r2, r4, lr}
 8010c54:	ab05      	add	r3, sp, #20
 8010c56:	f853 2b04 	ldr.w	r2, [r3], #4
 8010c5a:	4604      	mov	r4, r0
 8010c5c:	211f      	movs	r1, #31
 8010c5e:	301c      	adds	r0, #28
 8010c60:	9301      	str	r3, [sp, #4]
 8010c62:	f7f8 fb47 	bl	80092f4 <vsnprintf>
 8010c66:	2300      	movs	r3, #0
 8010c68:	4404      	add	r4, r0
 8010c6a:	7723      	strb	r3, [r4, #28]
 8010c6c:	b003      	add	sp, #12
 8010c6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c72:	b003      	add	sp, #12
 8010c74:	4770      	bx	lr

08010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 8010c76:	1e4b      	subs	r3, r1, #1
 8010c78:	2b05      	cmp	r3, #5
 8010c7a:	b530      	push	{r4, r5, lr}
 8010c7c:	d80f      	bhi.n	8010c9e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8010c7e:	2300      	movs	r3, #0
 8010c80:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 8010c84:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8010c88:	428d      	cmp	r5, r1
 8010c8a:	d109      	bne.n	8010ca0 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8010c8c:	1884      	adds	r4, r0, r2
 8010c8e:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8010c92:	4403      	add	r3, r0
 8010c94:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8010c98:	4410      	add	r0, r2
 8010c9a:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 8010c9e:	bd30      	pop	{r4, r5, pc}
 8010ca0:	3301      	adds	r3, #1
 8010ca2:	2b14      	cmp	r3, #20
 8010ca4:	d1ee      	bne.n	8010c84 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8010ca6:	e7f7      	b.n	8010c98 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

08010ca8 <DisplayUdf::ShowEmacStart()>:
 8010ca8:	b510      	push	{r4, lr}
 8010caa:	4604      	mov	r4, r0
 8010cac:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010cb0:	6980      	ldr	r0, [r0, #24]
 8010cb2:	f7ff ffb1 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010cb6:	4620      	mov	r0, r4
 8010cb8:	4a02      	ldr	r2, [pc, #8]	; (8010cc4 <DisplayUdf::ShowEmacStart()+0x1c>)
 8010cba:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010cbe:	f7f7 fcc5 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010cc2:	bd10      	pop	{r4, pc}
 8010cc4:	08016861 	stmdaeq	r1, {r0, r5, r6, fp, sp, lr}

08010cc8 <DisplayUdf::ShowIpAddress()>:
 8010cc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010ccc:	4604      	mov	r4, r0
 8010cce:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010cd2:	b086      	sub	sp, #24
 8010cd4:	6980      	ldr	r0, [r0, #24]
 8010cd6:	f7ff ff9f 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010cda:	4b13      	ldr	r3, [pc, #76]	; (8010d28 <DisplayUdf::ShowIpAddress()+0x60>)
 8010cdc:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8010ce0:	681d      	ldr	r5, [r3, #0]
 8010ce2:	69e8      	ldr	r0, [r5, #28]
 8010ce4:	696e      	ldr	r6, [r5, #20]
 8010ce6:	f003 fbb1 	bl	801444c <__popcountsi2>
 8010cea:	79eb      	ldrb	r3, [r5, #7]
 8010cec:	fa5f f886 	uxtb.w	r8, r6
 8010cf0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8010cf4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8010cf8:	0e36      	lsrs	r6, r6, #24
 8010cfa:	b99b      	cbnz	r3, 8010d24 <DisplayUdf::ShowIpAddress()+0x5c>
 8010cfc:	796b      	ldrb	r3, [r5, #5]
 8010cfe:	2b00      	cmp	r3, #0
 8010d00:	bf14      	ite	ne
 8010d02:	2244      	movne	r2, #68	; 0x44
 8010d04:	2253      	moveq	r2, #83	; 0x53
 8010d06:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8010d0a:	4643      	mov	r3, r8
 8010d0c:	4639      	mov	r1, r7
 8010d0e:	4620      	mov	r0, r4
 8010d10:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010d14:	4a05      	ldr	r2, [pc, #20]	; (8010d2c <DisplayUdf::ShowIpAddress()+0x64>)
 8010d16:	f8cd 9000 	str.w	r9, [sp]
 8010d1a:	f7f7 fc97 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010d1e:	b006      	add	sp, #24
 8010d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010d24:	225a      	movs	r2, #90	; 0x5a
 8010d26:	e7ee      	b.n	8010d06 <DisplayUdf::ShowIpAddress()+0x3e>
 8010d28:	2000a830 	andcs	sl, r0, r0, lsr r8
 8010d2c:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}

08010d30 <DisplayUdf::ShowNetmask()>:
 8010d30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010d32:	4604      	mov	r4, r0
 8010d34:	4b0b      	ldr	r3, [pc, #44]	; (8010d64 <DisplayUdf::ShowNetmask()+0x34>)
 8010d36:	681b      	ldr	r3, [r3, #0]
 8010d38:	69db      	ldr	r3, [r3, #28]
 8010d3a:	0e1a      	lsrs	r2, r3, #24
 8010d3c:	9202      	str	r2, [sp, #8]
 8010d3e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010d42:	9201      	str	r2, [sp, #4]
 8010d44:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010d48:	9200      	str	r2, [sp, #0]
 8010d4a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8010d4e:	4a06      	ldr	r2, [pc, #24]	; (8010d68 <DisplayUdf::ShowNetmask()+0x38>)
 8010d50:	b2db      	uxtb	r3, r3
 8010d52:	f7f7 fc7b 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010d56:	4620      	mov	r0, r4
 8010d58:	b004      	add	sp, #16
 8010d5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d5e:	f7ff bfb3 	b.w	8010cc8 <DisplayUdf::ShowIpAddress()>
 8010d62:	bf00      	nop
 8010d64:	2000a830 	andcs	sl, r0, r0, lsr r8
 8010d68:	08016882 	stmdaeq	r1, {r1, r7, fp, sp, lr}

08010d6c <DisplayUdf::ShowGatewayIp()>:
 8010d6c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010d6e:	4604      	mov	r4, r0
 8010d70:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 8010d74:	6980      	ldr	r0, [r0, #24]
 8010d76:	f7ff ff4f 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010d7a:	4b0a      	ldr	r3, [pc, #40]	; (8010da4 <DisplayUdf::ShowGatewayIp()+0x38>)
 8010d7c:	4620      	mov	r0, r4
 8010d7e:	681b      	ldr	r3, [r3, #0]
 8010d80:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8010d84:	699b      	ldr	r3, [r3, #24]
 8010d86:	0e1a      	lsrs	r2, r3, #24
 8010d88:	9202      	str	r2, [sp, #8]
 8010d8a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010d8e:	9201      	str	r2, [sp, #4]
 8010d90:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010d94:	9200      	str	r2, [sp, #0]
 8010d96:	b2db      	uxtb	r3, r3
 8010d98:	4a03      	ldr	r2, [pc, #12]	; (8010da8 <DisplayUdf::ShowGatewayIp()+0x3c>)
 8010d9a:	f7f7 fc57 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010d9e:	b004      	add	sp, #16
 8010da0:	bd10      	pop	{r4, pc}
 8010da2:	bf00      	nop
 8010da4:	2000a830 	andcs	sl, r0, r0, lsr r8
 8010da8:	08016891 	stmdaeq	r1, {r0, r4, r7, fp, sp, lr}

08010dac <DisplayUdf::ShowHostName()>:
 8010dac:	b510      	push	{r4, lr}
 8010dae:	4604      	mov	r4, r0
 8010db0:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8010db4:	6980      	ldr	r0, [r0, #24]
 8010db6:	f7ff ff2f 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010dba:	4b05      	ldr	r3, [pc, #20]	; (8010dd0 <DisplayUdf::ShowHostName()+0x24>)
 8010dbc:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8010dc0:	681a      	ldr	r2, [r3, #0]
 8010dc2:	69a0      	ldr	r0, [r4, #24]
 8010dc4:	3220      	adds	r2, #32
 8010dc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dca:	f7ff bf13 	b.w	8010bf4 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010dce:	bf00      	nop
 8010dd0:	2000a830 	andcs	sl, r0, r0, lsr r8

08010dd4 <DisplayUdf::Show()>:
 8010dd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010dd6:	4604      	mov	r4, r0
 8010dd8:	21ff      	movs	r1, #255	; 0xff
 8010dda:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 8010dde:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8010de2:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010de6:	2806      	cmp	r0, #6
 8010de8:	bf88      	it	hi
 8010dea:	7019      	strbhi	r1, [r3, #0]
 8010dec:	429a      	cmp	r2, r3
 8010dee:	d1f8      	bne.n	8010de2 <DisplayUdf::Show()+0xe>
 8010df0:	2501      	movs	r5, #1
 8010df2:	4629      	mov	r1, r5
 8010df4:	3501      	adds	r5, #1
 8010df6:	69a0      	ldr	r0, [r4, #24]
 8010df8:	b2ed      	uxtb	r5, r5
 8010dfa:	f7ff ff0d 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010dfe:	2d06      	cmp	r5, #6
 8010e00:	d1f7      	bne.n	8010df2 <DisplayUdf::Show()+0x1e>
 8010e02:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8010e06:	69a0      	ldr	r0, [r4, #24]
 8010e08:	f104 021c 	add.w	r2, r4, #28
 8010e0c:	f7ff fef2 	bl	8010bf4 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010e10:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8010e14:	69a0      	ldr	r0, [r4, #24]
 8010e16:	4a0d      	ldr	r2, [pc, #52]	; (8010e4c <DisplayUdf::Show()+0x78>)
 8010e18:	f7ff feec 	bl	8010bf4 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010e1c:	4b0c      	ldr	r3, [pc, #48]	; (8010e50 <DisplayUdf::Show()+0x7c>)
 8010e1e:	4a0d      	ldr	r2, [pc, #52]	; (8010e54 <DisplayUdf::Show()+0x80>)
 8010e20:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8010e24:	9300      	str	r3, [sp, #0]
 8010e26:	4620      	mov	r0, r4
 8010e28:	2303      	movs	r3, #3
 8010e2a:	f7f7 fc0f 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010e2e:	4620      	mov	r0, r4
 8010e30:	f7ff ff4a 	bl	8010cc8 <DisplayUdf::ShowIpAddress()>
 8010e34:	4620      	mov	r0, r4
 8010e36:	f7ff ff99 	bl	8010d6c <DisplayUdf::ShowGatewayIp()>
 8010e3a:	4620      	mov	r0, r4
 8010e3c:	f7ff ff78 	bl	8010d30 <DisplayUdf::ShowNetmask()>
 8010e40:	4620      	mov	r0, r4
 8010e42:	b003      	add	sp, #12
 8010e44:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010e48:	f7ff bfb0 	b.w	8010dac <DisplayUdf::ShowHostName()>
 8010e4c:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 8010e50:	2000ae98 	mulcs	r0, r8, lr
 8010e54:	080168a0 	stmdaeq	r1, {r5, r7, fp, sp, lr}

08010e58 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8010e58:	3901      	subs	r1, #1
 8010e5a:	b510      	push	{r4, lr}
 8010e5c:	4604      	mov	r4, r0
 8010e5e:	2903      	cmp	r1, #3
 8010e60:	d814      	bhi.n	8010e8c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8010e62:	e8df f001 	tbb	[pc, r1]
 8010e66:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8010e6a:	4b14      	ldr	r3, [pc, #80]	; (8010ebc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010e6c:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8010e70:	6818      	ldr	r0, [r3, #0]
 8010e72:	f7f8 fcb5 	bl	80097e0 <Display::Status(Display7SegmentMessage)>
 8010e76:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010e7a:	69a0      	ldr	r0, [r4, #24]
 8010e7c:	f7ff fecc 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010e80:	4a0f      	ldr	r2, [pc, #60]	; (8010ec0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 8010e82:	4620      	mov	r0, r4
 8010e84:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010e88:	f7f7 fbe0 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010e8c:	bd10      	pop	{r4, pc}
 8010e8e:	f248 0180 	movw	r1, #32896	; 0x8080
 8010e92:	4b0a      	ldr	r3, [pc, #40]	; (8010ebc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010e94:	6818      	ldr	r0, [r3, #0]
 8010e96:	f7f8 fca3 	bl	80097e0 <Display::Status(Display7SegmentMessage)>
 8010e9a:	e7f7      	b.n	8010e8c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8010e9c:	4b07      	ldr	r3, [pc, #28]	; (8010ebc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010e9e:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8010ea2:	6818      	ldr	r0, [r3, #0]
 8010ea4:	f7f8 fc9c 	bl	80097e0 <Display::Status(Display7SegmentMessage)>
 8010ea8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010eac:	69a0      	ldr	r0, [r4, #24]
 8010eae:	f7ff feb3 	bl	8010c18 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010eb2:	4a04      	ldr	r2, [pc, #16]	; (8010ec4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8010eb4:	e7e5      	b.n	8010e82 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8010eb6:	f645 3179 	movw	r1, #23417	; 0x5b79
 8010eba:	e7ea      	b.n	8010e92 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8010ebc:	2000ae08 	andcs	sl, r0, r8, lsl #28
 8010ec0:	080168af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, fp, sp, lr}
 8010ec4:	080168bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, fp, sp, lr}

08010ec8 <DisplayUdf::ShowShutdown()>:
 8010ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ecc:	4604      	mov	r4, r0
 8010ece:	6980      	ldr	r0, [r0, #24]
 8010ed0:	b1d0      	cbz	r0, 8010f08 <DisplayUdf::ShowShutdown()+0x40>
 8010ed2:	f890 8005 	ldrb.w	r8, [r0, #5]
 8010ed6:	6803      	ldr	r3, [r0, #0]
 8010ed8:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8010edc:	b2ed      	uxtb	r5, r5
 8010ede:	462a      	mov	r2, r5
 8010ee0:	2100      	movs	r1, #0
 8010ee2:	6a1b      	ldr	r3, [r3, #32]
 8010ee4:	7906      	ldrb	r6, [r0, #4]
 8010ee6:	2700      	movs	r7, #0
 8010ee8:	4798      	blx	r3
 8010eea:	3e01      	subs	r6, #1
 8010eec:	42b7      	cmp	r7, r6
 8010eee:	69a0      	ldr	r0, [r4, #24]
 8010ef0:	d311      	bcc.n	8010f16 <DisplayUdf::ShowShutdown()+0x4e>
 8010ef2:	b120      	cbz	r0, 8010efe <DisplayUdf::ShowShutdown()+0x36>
 8010ef4:	6803      	ldr	r3, [r0, #0]
 8010ef6:	462a      	mov	r2, r5
 8010ef8:	2100      	movs	r1, #0
 8010efa:	6a1b      	ldr	r3, [r3, #32]
 8010efc:	4798      	blx	r3
 8010efe:	4641      	mov	r1, r8
 8010f00:	4a08      	ldr	r2, [pc, #32]	; (8010f24 <DisplayUdf::ShowShutdown()+0x5c>)
 8010f02:	69a0      	ldr	r0, [r4, #24]
 8010f04:	f7ff fe76 	bl	8010bf4 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010f08:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8010f0c:	4620      	mov	r0, r4
 8010f0e:	f7f8 fc67 	bl	80097e0 <Display::Status(Display7SegmentMessage)>
 8010f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f16:	b118      	cbz	r0, 8010f20 <DisplayUdf::ShowShutdown()+0x58>
 8010f18:	6803      	ldr	r3, [r0, #0]
 8010f1a:	2120      	movs	r1, #32
 8010f1c:	695b      	ldr	r3, [r3, #20]
 8010f1e:	4798      	blx	r3
 8010f20:	3701      	adds	r7, #1
 8010f22:	e7e3      	b.n	8010eec <DisplayUdf::ShowShutdown()+0x24>
 8010f24:	080168cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, fp, sp, lr}

08010f28 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8010f28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010f2a:	88c6      	ldrh	r6, [r0, #6]
 8010f2c:	8885      	ldrh	r5, [r0, #4]
 8010f2e:	42ae      	cmp	r6, r5
 8010f30:	d216      	bcs.n	8010f60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8010f32:	4604      	mov	r4, r0
 8010f34:	6800      	ldr	r0, [r0, #0]
 8010f36:	1bad      	subs	r5, r5, r6
 8010f38:	4430      	add	r0, r6
 8010f3a:	7a26      	ldrb	r6, [r4, #8]
 8010f3c:	b923      	cbnz	r3, 8010f48 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8010f3e:	b926      	cbnz	r6, 8010f4a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8010f40:	9200      	str	r2, [sp, #0]
 8010f42:	460b      	mov	r3, r1
 8010f44:	4a09      	ldr	r2, [pc, #36]	; (8010f6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8010f46:	e003      	b.n	8010f50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8010f48:	b166      	cbz	r6, 8010f64 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8010f4a:	460b      	mov	r3, r1
 8010f4c:	9200      	str	r2, [sp, #0]
 8010f4e:	4a08      	ldr	r2, [pc, #32]	; (8010f70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8010f50:	4629      	mov	r1, r5
 8010f52:	f7f8 f9b7 	bl	80092c4 <snprintf>
 8010f56:	4285      	cmp	r5, r0
 8010f58:	bfa2      	ittt	ge
 8010f5a:	88e3      	ldrhge	r3, [r4, #6]
 8010f5c:	181b      	addge	r3, r3, r0
 8010f5e:	80e3      	strhge	r3, [r4, #6]
 8010f60:	b002      	add	sp, #8
 8010f62:	bd70      	pop	{r4, r5, r6, pc}
 8010f64:	9200      	str	r2, [sp, #0]
 8010f66:	460b      	mov	r3, r1
 8010f68:	4a02      	ldr	r2, [pc, #8]	; (8010f74 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8010f6a:	e7f1      	b.n	8010f50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8010f6c:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 8010f70:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 8010f74:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

08010f78 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8010f78:	b510      	push	{r4, lr}
 8010f7a:	2220      	movs	r2, #32
 8010f7c:	4604      	mov	r4, r0
 8010f7e:	f840 1b04 	str.w	r1, [r0], #4
 8010f82:	2100      	movs	r1, #0
 8010f84:	f001 f9be 	bl	8012304 <memset>
 8010f88:	f647 7305 	movw	r3, #32517	; 0x7f05
 8010f8c:	4620      	mov	r0, r4
 8010f8e:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010f90:	bd10      	pop	{r4, pc}

08010f92 <DisplayUdfParams::Load()>:
 8010f92:	b508      	push	{r3, lr}
 8010f94:	2300      	movs	r3, #0
 8010f96:	4601      	mov	r1, r0
 8010f98:	6043      	str	r3, [r0, #4]
 8010f9a:	6800      	ldr	r0, [r0, #0]
 8010f9c:	b120      	cbz	r0, 8010fa8 <DisplayUdfParams::Load()+0x16>
 8010f9e:	6803      	ldr	r3, [r0, #0]
 8010fa0:	3104      	adds	r1, #4
 8010fa2:	68db      	ldr	r3, [r3, #12]
 8010fa4:	4798      	blx	r3
 8010fa6:	2001      	movs	r0, #1
 8010fa8:	bd08      	pop	{r3, pc}
	...

08010fac <DisplayUdfParams::Load(char const*, unsigned int)>:
 8010fac:	6803      	ldr	r3, [r0, #0]
 8010fae:	b1d3      	cbz	r3, 8010fe6 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8010fb0:	2300      	movs	r3, #0
 8010fb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010fb4:	460d      	mov	r5, r1
 8010fb6:	4616      	mov	r6, r2
 8010fb8:	4604      	mov	r4, r0
 8010fba:	6043      	str	r3, [r0, #4]
 8010fbc:	4602      	mov	r2, r0
 8010fbe:	490a      	ldr	r1, [pc, #40]	; (8010fe8 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8010fc0:	4668      	mov	r0, sp
 8010fc2:	f000 fb1f 	bl	8011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010fc6:	4632      	mov	r2, r6
 8010fc8:	4629      	mov	r1, r5
 8010fca:	4668      	mov	r0, sp
 8010fcc:	f000 fb1e 	bl	801160c <ReadConfigFile::Read(char const*, unsigned int)>
 8010fd0:	4621      	mov	r1, r4
 8010fd2:	f851 0b04 	ldr.w	r0, [r1], #4
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	689b      	ldr	r3, [r3, #8]
 8010fda:	4798      	blx	r3
 8010fdc:	4668      	mov	r0, sp
 8010fde:	f000 fb14 	bl	801160a <ReadConfigFile::~ReadConfigFile()>
 8010fe2:	b002      	add	sp, #8
 8010fe4:	bd70      	pop	{r4, r5, r6, pc}
 8010fe6:	4770      	bx	lr
 8010fe8:	080110b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, ip}

08010fec <DisplayUdfParams::callbackFunction(char const*)>:
 8010fec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010fee:	460e      	mov	r6, r1
 8010ff0:	4604      	mov	r4, r0
 8010ff2:	492c      	ldr	r1, [pc, #176]	; (80110a4 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8010ff4:	4630      	mov	r0, r6
 8010ff6:	f10d 0207 	add.w	r2, sp, #7
 8010ffa:	f000 fc3f 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010ffe:	b968      	cbnz	r0, 801101c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011000:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011004:	6863      	ldr	r3, [r4, #4]
 8011006:	2a7f      	cmp	r2, #127	; 0x7f
 8011008:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 801100c:	bf14      	ite	ne
 801100e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8011012:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8011016:	6063      	str	r3, [r4, #4]
 8011018:	b003      	add	sp, #12
 801101a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801101c:	4630      	mov	r0, r6
 801101e:	4922      	ldr	r1, [pc, #136]	; (80110a8 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8011020:	f10d 0207 	add.w	r2, sp, #7
 8011024:	f000 fc2a 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011028:	b958      	cbnz	r0, 8011042 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 801102a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801102e:	6863      	ldr	r3, [r4, #4]
 8011030:	2a05      	cmp	r2, #5
 8011032:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8011036:	bf14      	ite	ne
 8011038:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 801103c:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8011040:	e7e9      	b.n	8011016 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011042:	4630      	mov	r0, r6
 8011044:	4919      	ldr	r1, [pc, #100]	; (80110ac <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8011046:	f10d 0207 	add.w	r2, sp, #7
 801104a:	f000 fc17 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801104e:	b948      	cbnz	r0, 8011064 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8011050:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011054:	6863      	ldr	r3, [r4, #4]
 8011056:	b112      	cbz	r2, 801105e <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8011058:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 801105c:	e7db      	b.n	8011016 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801105e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8011062:	e7d8      	b.n	8011016 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011064:	2500      	movs	r5, #0
 8011066:	4f12      	ldr	r7, [pc, #72]	; (80110b0 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8011068:	4630      	mov	r0, r6
 801106a:	f857 1b04 	ldr.w	r1, [r7], #4
 801106e:	f10d 0207 	add.w	r2, sp, #7
 8011072:	f000 fc03 	bl	801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011076:	b980      	cbnz	r0, 801109a <DisplayUdfParams::callbackFunction(char const*)+0xae>
 8011078:	2301      	movs	r3, #1
 801107a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801107e:	40ab      	lsls	r3, r5
 8011080:	1e4e      	subs	r6, r1, #1
 8011082:	2e05      	cmp	r6, #5
 8011084:	6862      	ldr	r2, [r4, #4]
 8011086:	4425      	add	r5, r4
 8011088:	d802      	bhi.n	8011090 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 801108a:	7229      	strb	r1, [r5, #8]
 801108c:	4313      	orrs	r3, r2
 801108e:	e7c2      	b.n	8011016 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011090:	ea22 0203 	bic.w	r2, r2, r3
 8011094:	7228      	strb	r0, [r5, #8]
 8011096:	6062      	str	r2, [r4, #4]
 8011098:	e7be      	b.n	8011018 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801109a:	3501      	adds	r5, #1
 801109c:	2d14      	cmp	r5, #20
 801109e:	d1e3      	bne.n	8011068 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80110a0:	e7ba      	b.n	8011018 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80110a2:	bf00      	nop
 80110a4:	0801698a 	stmdaeq	r1, {r1, r3, r7, r8, fp, sp, lr}
 80110a8:	08016952 	stmdaeq	r1, {r1, r4, r6, r8, fp, sp, lr}
 80110ac:	08016960 	stmdaeq	r1, {r5, r6, r8, fp, sp, lr}
 80110b0:	080168dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, sp, lr}

080110b4 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80110b4:	f7ff bf9a 	b.w	8010fec <DisplayUdfParams::callbackFunction(char const*)>

080110b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80110b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110bc:	4604      	mov	r4, r0
 80110be:	4615      	mov	r5, r2
 80110c0:	461e      	mov	r6, r3
 80110c2:	b086      	sub	sp, #24
 80110c4:	3004      	adds	r0, #4
 80110c6:	b379      	cbz	r1, 8011128 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 80110c8:	2222      	movs	r2, #34	; 0x22
 80110ca:	f001 f904 	bl	80122d6 <memmove>
 80110ce:	462a      	mov	r2, r5
 80110d0:	4633      	mov	r3, r6
 80110d2:	493d      	ldr	r1, [pc, #244]	; (80111c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 80110d4:	a803      	add	r0, sp, #12
 80110d6:	f000 f9f5 	bl	80114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80110da:	6863      	ldr	r3, [r4, #4]
 80110dc:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 80110e0:	493a      	ldr	r1, [pc, #232]	; (80111cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 80110e2:	f3c3 7340 	ubfx	r3, r3, #29, #1
 80110e6:	a803      	add	r0, sp, #12
 80110e8:	f7ff ff1e 	bl	8010f28 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80110ec:	6863      	ldr	r3, [r4, #4]
 80110ee:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 80110f2:	f3c3 7300 	ubfx	r3, r3, #28, #1
 80110f6:	4936      	ldr	r1, [pc, #216]	; (80111d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 80110f8:	a803      	add	r0, sp, #12
 80110fa:	f7ff ff15 	bl	8010f28 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80110fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011102:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011106:	6863      	ldr	r3, [r4, #4]
 8011108:	42aa      	cmp	r2, r5
 801110a:	d226      	bcs.n	801115a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 801110c:	9803      	ldr	r0, [sp, #12]
 801110e:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8011112:	4410      	add	r0, r2
 8011114:	eba5 0502 	sub.w	r5, r5, r2
 8011118:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801111c:	d10b      	bne.n	8011136 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 801111e:	b962      	cbnz	r2, 801113a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8011120:	9200      	str	r2, [sp, #0]
 8011122:	4b2c      	ldr	r3, [pc, #176]	; (80111d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011124:	4a2c      	ldr	r2, [pc, #176]	; (80111d8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8011126:	e00e      	b.n	8011146 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011128:	6823      	ldr	r3, [r4, #0]
 801112a:	4601      	mov	r1, r0
 801112c:	681a      	ldr	r2, [r3, #0]
 801112e:	4618      	mov	r0, r3
 8011130:	68d2      	ldr	r2, [r2, #12]
 8011132:	4790      	blx	r2
 8011134:	e7cb      	b.n	80110ce <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8011136:	2a00      	cmp	r2, #0
 8011138:	d041      	beq.n	80111be <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 801113a:	3b00      	subs	r3, #0
 801113c:	bf18      	it	ne
 801113e:	2301      	movne	r3, #1
 8011140:	4a26      	ldr	r2, [pc, #152]	; (80111dc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8011142:	9300      	str	r3, [sp, #0]
 8011144:	4b23      	ldr	r3, [pc, #140]	; (80111d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011146:	4629      	mov	r1, r5
 8011148:	f7f8 f8bc 	bl	80092c4 <snprintf>
 801114c:	4285      	cmp	r5, r0
 801114e:	bfa2      	ittt	ge
 8011150:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011154:	181b      	addge	r3, r3, r0
 8011156:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801115a:	2500      	movs	r5, #0
 801115c:	2701      	movs	r7, #1
 801115e:	4e20      	ldr	r6, [pc, #128]	; (80111e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8011160:	f104 0808 	add.w	r8, r4, #8
 8011164:	f856 1b04 	ldr.w	r1, [r6], #4
 8011168:	780b      	ldrb	r3, [r1, #0]
 801116a:	b15b      	cbz	r3, 8011184 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 801116c:	6862      	ldr	r2, [r4, #4]
 801116e:	fa07 f305 	lsl.w	r3, r7, r5
 8011172:	4393      	bics	r3, r2
 8011174:	bf0c      	ite	eq
 8011176:	2301      	moveq	r3, #1
 8011178:	2300      	movne	r3, #0
 801117a:	f818 2005 	ldrb.w	r2, [r8, r5]
 801117e:	a803      	add	r0, sp, #12
 8011180:	f7ff fed2 	bl	8010f28 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011184:	3501      	adds	r5, #1
 8011186:	2d14      	cmp	r5, #20
 8011188:	d1ec      	bne.n	8011164 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 801118a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801118e:	b17b      	cbz	r3, 80111b0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8011190:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011194:	9b03      	ldr	r3, [sp, #12]
 8011196:	4413      	add	r3, r2
 8011198:	227d      	movs	r2, #125	; 0x7d
 801119a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801119e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80111a2:	9903      	ldr	r1, [sp, #12]
 80111a4:	54ca      	strb	r2, [r1, r3]
 80111a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80111aa:	3301      	adds	r3, #1
 80111ac:	f8ad 3012 	strh.w	r3, [sp, #18]
 80111b0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80111b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80111b6:	601a      	str	r2, [r3, #0]
 80111b8:	b006      	add	sp, #24
 80111ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111be:	2301      	movs	r3, #1
 80111c0:	4a08      	ldr	r2, [pc, #32]	; (80111e4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80111c2:	9300      	str	r3, [sp, #0]
 80111c4:	4b03      	ldr	r3, [pc, #12]	; (80111d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80111c6:	e7be      	b.n	8011146 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80111c8:	0801697e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, fp, sp, lr}
 80111cc:	0801698a 	stmdaeq	r1, {r1, r3, r7, r8, fp, sp, lr}
 80111d0:	08016952 	stmdaeq	r1, {r1, r4, r6, r8, fp, sp, lr}
 80111d4:	08016960 	stmdaeq	r1, {r5, r6, r8, fp, sp, lr}
 80111d8:	08014955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, lr}
 80111dc:	0801494c 	stmdaeq	r1, {r2, r3, r6, r8, fp, lr}
 80111e0:	080168dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, sp, lr}
 80111e4:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

080111e8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 80111e8:	b513      	push	{r0, r1, r4, lr}
 80111ea:	6804      	ldr	r4, [r0, #0]
 80111ec:	b914      	cbnz	r4, 80111f4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80111ee:	601c      	str	r4, [r3, #0]
 80111f0:	b002      	add	sp, #8
 80111f2:	bd10      	pop	{r4, pc}
 80111f4:	9300      	str	r3, [sp, #0]
 80111f6:	4613      	mov	r3, r2
 80111f8:	460a      	mov	r2, r1
 80111fa:	2100      	movs	r1, #0
 80111fc:	f7ff ff5c 	bl	80110b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8011200:	e7f6      	b.n	80111f0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011202 <DisplayUdfParams::Set(DisplayUdf*)>:
 8011202:	6843      	ldr	r3, [r0, #4]
 8011204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011208:	009a      	lsls	r2, r3, #2
 801120a:	4604      	mov	r4, r0
 801120c:	460e      	mov	r6, r1
 801120e:	d506      	bpl.n	801121e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011210:	6988      	ldr	r0, [r1, #24]
 8011212:	b120      	cbz	r0, 801121e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011214:	6803      	ldr	r3, [r0, #0]
 8011216:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801121a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801121c:	4798      	blx	r3
 801121e:	6863      	ldr	r3, [r4, #4]
 8011220:	69b0      	ldr	r0, [r6, #24]
 8011222:	00db      	lsls	r3, r3, #3
 8011224:	bf41      	itttt	mi
 8011226:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 801122a:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 801122e:	4353      	mulmi	r3, r2
 8011230:	6173      	strmi	r3, [r6, #20]
 8011232:	6861      	ldr	r1, [r4, #4]
 8011234:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8011238:	b110      	cbz	r0, 8011240 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 801123a:	6803      	ldr	r3, [r0, #0]
 801123c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801123e:	4798      	blx	r3
 8011240:	2500      	movs	r5, #0
 8011242:	2701      	movs	r7, #1
 8011244:	f104 0808 	add.w	r8, r4, #8
 8011248:	6862      	ldr	r2, [r4, #4]
 801124a:	fa07 f305 	lsl.w	r3, r7, r5
 801124e:	4393      	bics	r3, r2
 8011250:	d105      	bne.n	801125e <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8011252:	462a      	mov	r2, r5
 8011254:	4630      	mov	r0, r6
 8011256:	f818 1005 	ldrb.w	r1, [r8, r5]
 801125a:	f7ff fd0c 	bl	8010c76 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 801125e:	3501      	adds	r5, #1
 8011260:	2d14      	cmp	r5, #20
 8011262:	d1f1      	bne.n	8011248 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8011264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011268 <DisplayUdfParams::Dump()>:
 8011268:	4770      	bx	lr
	...

0801126c <DisplayUdf::Show(E131Bridge*)>:
 801126c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011270:	460e      	mov	r6, r1
 8011272:	4604      	mov	r4, r0
 8011274:	b085      	sub	sp, #20
 8011276:	f7ff fdad 	bl	8010dd4 <DisplayUdf::Show()>
 801127a:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 801127e:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8011282:	4620      	mov	r0, r4
 8011284:	4413      	add	r3, r2
 8011286:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 801128a:	4a21      	ldr	r2, [pc, #132]	; (8011310 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 801128c:	f7f7 f9de 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8011290:	2500      	movs	r5, #0
 8011292:	4f20      	ldr	r7, [pc, #128]	; (8011314 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8011294:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8011318 <DisplayUdf::Show(E131Bridge*)+0xac>
 8011298:	f8df 9080 	ldr.w	r9, [pc, #128]	; 801131c <DisplayUdf::Show(E131Bridge*)+0xb0>
 801129c:	2301      	movs	r3, #1
 801129e:	4629      	mov	r1, r5
 80112a0:	4630      	mov	r0, r6
 80112a2:	f10d 020e 	add.w	r2, sp, #14
 80112a6:	f7f9 fdff 	bl	800aea8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80112aa:	b1a8      	cbz	r0, 80112d8 <DisplayUdf::Show(E131Bridge*)+0x6c>
 80112ac:	2344      	movs	r3, #68	; 0x44
 80112ae:	436b      	muls	r3, r5
 80112b0:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 80112b4:	58d2      	ldr	r2, [r2, r3]
 80112b6:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 80112ba:	2a00      	cmp	r2, #0
 80112bc:	bf0c      	ite	eq
 80112be:	463b      	moveq	r3, r7
 80112c0:	4643      	movne	r3, r8
 80112c2:	e9cd 0300 	strd	r0, r3, [sp]
 80112c6:	f104 0144 	add.w	r1, r4, #68	; 0x44
 80112ca:	464a      	mov	r2, r9
 80112cc:	4620      	mov	r0, r4
 80112ce:	5d49      	ldrb	r1, [r1, r5]
 80112d0:	f105 0341 	add.w	r3, r5, #65	; 0x41
 80112d4:	f7f7 f9ba 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80112d8:	3501      	adds	r5, #1
 80112da:	2d04      	cmp	r5, #4
 80112dc:	d1de      	bne.n	801129c <DisplayUdf::Show(E131Bridge*)+0x30>
 80112de:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80112e0:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 80112e4:	2a02      	cmp	r2, #2
 80112e6:	d001      	beq.n	80112ec <DisplayUdf::Show(E131Bridge*)+0x80>
 80112e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80112ea:	b933      	cbnz	r3, 80112fa <DisplayUdf::Show(E131Bridge*)+0x8e>
 80112ec:	4620      	mov	r0, r4
 80112ee:	4a0c      	ldr	r2, [pc, #48]	; (8011320 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 80112f0:	f7f7 f9ac 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80112f4:	b005      	add	sp, #20
 80112f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112fa:	480a      	ldr	r0, [pc, #40]	; (8011324 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 80112fc:	9300      	str	r3, [sp, #0]
 80112fe:	4b0a      	ldr	r3, [pc, #40]	; (8011328 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8011300:	2a00      	cmp	r2, #0
 8011302:	bf08      	it	eq
 8011304:	4603      	moveq	r3, r0
 8011306:	4620      	mov	r0, r4
 8011308:	4a08      	ldr	r2, [pc, #32]	; (801132c <DisplayUdf::Show(E131Bridge*)+0xc0>)
 801130a:	f7f7 f99f 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 801130e:	e7f1      	b.n	80112f4 <DisplayUdf::Show(E131Bridge*)+0x88>
 8011310:	08016994 	stmdaeq	r1, {r2, r4, r7, r8, fp, sp, lr}
 8011314:	0801571c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, ip, lr}
 8011318:	08015720 	stmdaeq	r1, {r5, r8, r9, sl, ip, lr}
 801131c:	0801699b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, fp, sp, lr}
 8011320:	080169aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp, lr}
 8011324:	08015834 	stmdaeq	r1, {r2, r4, r5, fp, ip, lr}
 8011328:	08015829 	stmdaeq	r1, {r0, r3, r5, fp, ip, lr}
 801132c:	080169b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, fp, sp, lr}

08011330 <NetworkDisplay::ShowEmacStart()>:
 8011330:	4b01      	ldr	r3, [pc, #4]	; (8011338 <NetworkDisplay::ShowEmacStart()+0x8>)
 8011332:	6818      	ldr	r0, [r3, #0]
 8011334:	f7ff bcb8 	b.w	8010ca8 <DisplayUdf::ShowEmacStart()>
 8011338:	2000ae00 	andcs	sl, r0, r0, lsl #28

0801133c <NetworkDisplay::ShowIp()>:
 801133c:	4b01      	ldr	r3, [pc, #4]	; (8011344 <NetworkDisplay::ShowIp()+0x8>)
 801133e:	6818      	ldr	r0, [r3, #0]
 8011340:	f7ff bcc2 	b.w	8010cc8 <DisplayUdf::ShowIpAddress()>
 8011344:	2000ae00 	andcs	sl, r0, r0, lsl #28

08011348 <NetworkDisplay::ShowShutdown()>:
 8011348:	4b01      	ldr	r3, [pc, #4]	; (8011350 <NetworkDisplay::ShowShutdown()+0x8>)
 801134a:	6818      	ldr	r0, [r3, #0]
 801134c:	f7ff bdbc 	b.w	8010ec8 <DisplayUdf::ShowShutdown()>
 8011350:	2000ae00 	andcs	sl, r0, r0, lsl #28

08011354 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011354:	4b01      	ldr	r3, [pc, #4]	; (801135c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8011356:	6818      	ldr	r0, [r3, #0]
 8011358:	f7ff bd7e 	b.w	8010e58 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801135c:	2000ae00 	andcs	sl, r0, r0, lsl #28

08011360 <properties::convert_json_file(char*, unsigned short, bool)>:
 8011360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011364:	4603      	mov	r3, r0
 8011366:	7800      	ldrb	r0, [r0, #0]
 8011368:	287b      	cmp	r0, #123	; 0x7b
 801136a:	f040 80a2 	bne.w	80114b2 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 801136e:	b17a      	cbz	r2, 8011390 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8011370:	2401      	movs	r4, #1
 8011372:	461e      	mov	r6, r3
 8011374:	4620      	mov	r0, r4
 8011376:	2a00      	cmp	r2, #0
 8011378:	bf0c      	ite	eq
 801137a:	f04f 0c0a 	moveq.w	ip, #10
 801137e:	f04f 0c00 	movne.w	ip, #0
 8011382:	273d      	movs	r7, #61	; 0x3d
 8011384:	42a1      	cmp	r1, r4
 8011386:	d850      	bhi.n	801142a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801138c:	463c      	mov	r4, r7
 801138e:	e7f2      	b.n	8011376 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011390:	2023      	movs	r0, #35	; 0x23
 8011392:	f803 0b01 	strb.w	r0, [r3], #1
 8011396:	461c      	mov	r4, r3
 8011398:	2701      	movs	r7, #1
 801139a:	42b9      	cmp	r1, r7
 801139c:	d811      	bhi.n	80113c2 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 801139e:	2001      	movs	r0, #1
 80113a0:	461e      	mov	r6, r3
 80113a2:	230a      	movs	r3, #10
 80113a4:	4625      	mov	r5, r4
 80113a6:	f806 3b01 	strb.w	r3, [r6], #1
 80113aa:	3001      	adds	r0, #1
 80113ac:	462b      	mov	r3, r5
 80113ae:	781c      	ldrb	r4, [r3, #0]
 80113b0:	3501      	adds	r5, #1
 80113b2:	2c7b      	cmp	r4, #123	; 0x7b
 80113b4:	d0ea      	beq.n	801138c <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 80113b6:	42b9      	cmp	r1, r7
 80113b8:	f107 0401 	add.w	r4, r7, #1
 80113bc:	d9db      	bls.n	8011376 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80113be:	4627      	mov	r7, r4
 80113c0:	e7f4      	b.n	80113ac <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 80113c2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80113c6:	2822      	cmp	r0, #34	; 0x22
 80113c8:	d119      	bne.n	80113fe <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 80113ca:	46a4      	mov	ip, r4
 80113cc:	461d      	mov	r5, r3
 80113ce:	2601      	movs	r6, #1
 80113d0:	f89c e000 	ldrb.w	lr, [ip]
 80113d4:	4664      	mov	r4, ip
 80113d6:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80113da:	462b      	mov	r3, r5
 80113dc:	4630      	mov	r0, r6
 80113de:	f10c 0c01 	add.w	ip, ip, #1
 80113e2:	f105 0501 	add.w	r5, r5, #1
 80113e6:	f106 0601 	add.w	r6, r6, #1
 80113ea:	d0d9      	beq.n	80113a0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80113ec:	3701      	adds	r7, #1
 80113ee:	42b9      	cmp	r1, r7
 80113f0:	4664      	mov	r4, ip
 80113f2:	f805 ec01 	strb.w	lr, [r5, #-1]
 80113f6:	d8eb      	bhi.n	80113d0 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 80113f8:	4630      	mov	r0, r6
 80113fa:	462b      	mov	r3, r5
 80113fc:	e7d0      	b.n	80113a0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80113fe:	3701      	adds	r7, #1
 8011400:	e7cb      	b.n	801139a <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8011402:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011406:	d110      	bne.n	801142a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011408:	eba0 0803 	sub.w	r8, r0, r3
 801140c:	461a      	mov	r2, r3
 801140e:	eb08 0003 	add.w	r0, r8, r3
 8011412:	f813 eb01 	ldrb.w	lr, [r3], #1
 8011416:	1c65      	adds	r5, r4, #1
 8011418:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801141c:	d04c      	beq.n	80114b8 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 801141e:	42a1      	cmp	r1, r4
 8011420:	d911      	bls.n	8011446 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8011422:	462c      	mov	r4, r5
 8011424:	f806 eb01 	strb.w	lr, [r6], #1
 8011428:	e7f0      	b.n	801140c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 801142a:	42a1      	cmp	r1, r4
 801142c:	461d      	mov	r5, r3
 801142e:	f893 e000 	ldrb.w	lr, [r3]
 8011432:	f104 0401 	add.w	r4, r4, #1
 8011436:	f103 0301 	add.w	r3, r3, #1
 801143a:	d8e2      	bhi.n	8011402 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 801143c:	462b      	mov	r3, r5
 801143e:	e7e3      	b.n	8011408 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8011440:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8011444:	d009      	beq.n	801145a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011446:	42a9      	cmp	r1, r5
 8011448:	4614      	mov	r4, r2
 801144a:	f892 e000 	ldrb.w	lr, [r2]
 801144e:	f105 0501 	add.w	r5, r5, #1
 8011452:	f102 0201 	add.w	r2, r2, #1
 8011456:	d8f3      	bhi.n	8011440 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8011458:	4622      	mov	r2, r4
 801145a:	7814      	ldrb	r4, [r2, #0]
 801145c:	4696      	mov	lr, r2
 801145e:	2c2f      	cmp	r4, #47	; 0x2f
 8011460:	462b      	mov	r3, r5
 8011462:	f102 0201 	add.w	r2, r2, #1
 8011466:	f105 0501 	add.w	r5, r5, #1
 801146a:	d81a      	bhi.n	80114a2 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 801146c:	4299      	cmp	r1, r3
 801146e:	d8f4      	bhi.n	801145a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011470:	2c22      	cmp	r4, #34	; 0x22
 8011472:	bf08      	it	eq
 8011474:	4696      	moveq	lr, r2
 8011476:	4673      	mov	r3, lr
 8011478:	f813 2b01 	ldrb.w	r2, [r3], #1
 801147c:	1c6c      	adds	r4, r5, #1
 801147e:	2a22      	cmp	r2, #34	; 0x22
 8011480:	d011      	beq.n	80114a6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011482:	2a2c      	cmp	r2, #44	; 0x2c
 8011484:	d00f      	beq.n	80114a6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011486:	2a7d      	cmp	r2, #125	; 0x7d
 8011488:	d00d      	beq.n	80114a6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801148a:	42a9      	cmp	r1, r5
 801148c:	d90f      	bls.n	80114ae <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 801148e:	f1a2 0520 	sub.w	r5, r2, #32
 8011492:	2d5a      	cmp	r5, #90	; 0x5a
 8011494:	d803      	bhi.n	801149e <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 8011496:	469e      	mov	lr, r3
 8011498:	f806 2b01 	strb.w	r2, [r6], #1
 801149c:	3001      	adds	r0, #1
 801149e:	4625      	mov	r5, r4
 80114a0:	e7e9      	b.n	8011476 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80114a2:	461d      	mov	r5, r3
 80114a4:	e7e7      	b.n	8011476 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80114a6:	462c      	mov	r4, r5
 80114a8:	f806 cb01 	strb.w	ip, [r6], #1
 80114ac:	3001      	adds	r0, #1
 80114ae:	3401      	adds	r4, #1
 80114b0:	e768      	b.n	8011384 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 80114b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80114b6:	e767      	b.n	8011388 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 80114b8:	4625      	mov	r5, r4
 80114ba:	f806 7b01 	strb.w	r7, [r6], #1
 80114be:	3001      	adds	r0, #1
 80114c0:	e7c1      	b.n	8011446 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

080114c4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 80114c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80114c8:	6002      	str	r2, [r0, #0]
 80114ca:	4614      	mov	r4, r2
 80114cc:	2200      	movs	r2, #0
 80114ce:	80c2      	strh	r2, [r0, #6]
 80114d0:	4a1c      	ldr	r2, [pc, #112]	; (8011544 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80114d2:	4606      	mov	r6, r0
 80114d4:	7812      	ldrb	r2, [r2, #0]
 80114d6:	8083      	strh	r3, [r0, #4]
 80114d8:	f002 0201 	and.w	r2, r2, #1
 80114dc:	7202      	strb	r2, [r0, #8]
 80114de:	4608      	mov	r0, r1
 80114e0:	4605      	mov	r5, r0
 80114e2:	782f      	ldrb	r7, [r5, #0]
 80114e4:	3001      	adds	r0, #1
 80114e6:	2f00      	cmp	r7, #0
 80114e8:	d1fa      	bne.n	80114e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 80114ea:	1a6d      	subs	r5, r5, r1
 80114ec:	b29b      	uxth	r3, r3
 80114ee:	b1d2      	cbz	r2, 8011526 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 80114f0:	1d2f      	adds	r7, r5, #4
 80114f2:	429f      	cmp	r7, r3
 80114f4:	d814      	bhi.n	8011520 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80114f6:	f04f 087b 	mov.w	r8, #123	; 0x7b
 80114fa:	f04f 0922 	mov.w	r9, #34	; 0x22
 80114fe:	462a      	mov	r2, r5
 8011500:	f884 8000 	strb.w	r8, [r4]
 8011504:	f884 9001 	strb.w	r9, [r4, #1]
 8011508:	1ca0      	adds	r0, r4, #2
 801150a:	f000 fee4 	bl	80122d6 <memmove>
 801150e:	223a      	movs	r2, #58	; 0x3a
 8011510:	1963      	adds	r3, r4, r5
 8011512:	3505      	adds	r5, #5
 8011514:	f883 9002 	strb.w	r9, [r3, #2]
 8011518:	70da      	strb	r2, [r3, #3]
 801151a:	80f5      	strh	r5, [r6, #6]
 801151c:	f804 8007 	strb.w	r8, [r4, r7]
 8011520:	4630      	mov	r0, r6
 8011522:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011526:	1caf      	adds	r7, r5, #2
 8011528:	429f      	cmp	r7, r3
 801152a:	d8f9      	bhi.n	8011520 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801152c:	4620      	mov	r0, r4
 801152e:	2323      	movs	r3, #35	; 0x23
 8011530:	462a      	mov	r2, r5
 8011532:	f800 3b01 	strb.w	r3, [r0], #1
 8011536:	f000 fece 	bl	80122d6 <memmove>
 801153a:	230a      	movs	r3, #10
 801153c:	442c      	add	r4, r5
 801153e:	7063      	strb	r3, [r4, #1]
 8011540:	80f7      	strh	r7, [r6, #6]
 8011542:	e7ed      	b.n	8011520 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011544:	2000ae04 	andcs	sl, r0, r4, lsl #28

08011548 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8011548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801154a:	469c      	mov	ip, r3
 801154c:	8885      	ldrh	r5, [r0, #4]
 801154e:	88c3      	ldrh	r3, [r0, #6]
 8011550:	b085      	sub	sp, #20
 8011552:	42ab      	cmp	r3, r5
 8011554:	d302      	bcc.n	801155c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8011556:	2000      	movs	r0, #0
 8011558:	b005      	add	sp, #20
 801155a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801155c:	4604      	mov	r4, r0
 801155e:	6800      	ldr	r0, [r0, #0]
 8011560:	1aed      	subs	r5, r5, r3
 8011562:	4418      	add	r0, r3
 8011564:	b2d6      	uxtb	r6, r2
 8011566:	f3c2 2707 	ubfx	r7, r2, #8, #8
 801156a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801156e:	f894 e008 	ldrb.w	lr, [r4, #8]
 8011572:	0e12      	lsrs	r2, r2, #24
 8011574:	f1bc 0f00 	cmp.w	ip, #0
 8011578:	d109      	bne.n	801158e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 801157a:	f1be 0f00 	cmp.w	lr, #0
 801157e:	d109      	bne.n	8011594 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8011580:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011584:	e9cd 6700 	strd	r6, r7, [sp]
 8011588:	460b      	mov	r3, r1
 801158a:	4a0e      	ldr	r2, [pc, #56]	; (80115c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 801158c:	e008      	b.n	80115a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801158e:	f1be 0f00 	cmp.w	lr, #0
 8011592:	d00f      	beq.n	80115b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8011594:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011598:	460b      	mov	r3, r1
 801159a:	e9cd 6700 	strd	r6, r7, [sp]
 801159e:	4a0a      	ldr	r2, [pc, #40]	; (80115c8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80115a0:	4629      	mov	r1, r5
 80115a2:	f7f7 fe8f 	bl	80092c4 <snprintf>
 80115a6:	4285      	cmp	r5, r0
 80115a8:	dbd5      	blt.n	8011556 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80115aa:	88e3      	ldrh	r3, [r4, #6]
 80115ac:	4403      	add	r3, r0
 80115ae:	80e3      	strh	r3, [r4, #6]
 80115b0:	2001      	movs	r0, #1
 80115b2:	e7d1      	b.n	8011558 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80115b4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80115b8:	e9cd 6700 	strd	r6, r7, [sp]
 80115bc:	460b      	mov	r3, r1
 80115be:	4a03      	ldr	r2, [pc, #12]	; (80115cc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80115c0:	e7ee      	b.n	80115a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80115c2:	bf00      	nop
 80115c4:	08016a69 	stmdaeq	r1, {r0, r3, r5, r6, r9, fp, sp, lr}
 80115c8:	08016a55 	stmdaeq	r1, {r0, r2, r4, r6, r9, fp, sp, lr}
 80115cc:	08016a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, sp, lr}

080115d0 <PropertiesBuilder::AddComment(char const*)>:
 80115d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115d2:	7a06      	ldrb	r6, [r0, #8]
 80115d4:	b996      	cbnz	r6, 80115fc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80115d6:	4604      	mov	r4, r0
 80115d8:	88c0      	ldrh	r0, [r0, #6]
 80115da:	88a5      	ldrh	r5, [r4, #4]
 80115dc:	42a8      	cmp	r0, r5
 80115de:	d20d      	bcs.n	80115fc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80115e0:	6827      	ldr	r7, [r4, #0]
 80115e2:	1a2d      	subs	r5, r5, r0
 80115e4:	460b      	mov	r3, r1
 80115e6:	4a06      	ldr	r2, [pc, #24]	; (8011600 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80115e8:	4629      	mov	r1, r5
 80115ea:	4438      	add	r0, r7
 80115ec:	f7f7 fe6a 	bl	80092c4 <snprintf>
 80115f0:	4285      	cmp	r5, r0
 80115f2:	bfa1      	itttt	ge
 80115f4:	2601      	movge	r6, #1
 80115f6:	88e3      	ldrhge	r3, [r4, #6]
 80115f8:	18c0      	addge	r0, r0, r3
 80115fa:	80e0      	strhge	r0, [r4, #6]
 80115fc:	4630      	mov	r0, r6
 80115fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011600:	08016a7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, fp, sp, lr}

08011604 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8011604:	e9c0 1200 	strd	r1, r2, [r0]
 8011608:	4770      	bx	lr

0801160a <ReadConfigFile::~ReadConfigFile()>:
 801160a:	4770      	bx	lr

0801160c <ReadConfigFile::Read(char const*, unsigned int)>:
 801160c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011610:	4606      	mov	r6, r0
 8011612:	460d      	mov	r5, r1
 8011614:	4614      	mov	r4, r2
 8011616:	f04f 0800 	mov.w	r8, #0
 801161a:	b0a0      	sub	sp, #128	; 0x80
 801161c:	b33c      	cbz	r4, 801166e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801161e:	466b      	mov	r3, sp
 8011620:	462a      	mov	r2, r5
 8011622:	4619      	mov	r1, r3
 8011624:	e007      	b.n	8011636 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8011626:	f803 7b01 	strb.w	r7, [r3], #1
 801162a:	1a58      	subs	r0, r3, r1
 801162c:	287f      	cmp	r0, #127	; 0x7f
 801162e:	4615      	mov	r5, r2
 8011630:	dc1d      	bgt.n	801166e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011632:	3c01      	subs	r4, #1
 8011634:	d00f      	beq.n	8011656 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011636:	7817      	ldrb	r7, [r2, #0]
 8011638:	4610      	mov	r0, r2
 801163a:	2f0d      	cmp	r7, #13
 801163c:	f102 0201 	add.w	r2, r2, #1
 8011640:	d001      	beq.n	8011646 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011642:	2f0a      	cmp	r7, #10
 8011644:	d1ef      	bne.n	8011626 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8011646:	4605      	mov	r5, r0
 8011648:	b12c      	cbz	r4, 8011656 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801164a:	f810 2b01 	ldrb.w	r2, [r0], #1
 801164e:	2a0d      	cmp	r2, #13
 8011650:	d00b      	beq.n	801166a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011652:	2a0a      	cmp	r2, #10
 8011654:	d009      	beq.n	801166a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011656:	f89d 2000 	ldrb.w	r2, [sp]
 801165a:	2a60      	cmp	r2, #96	; 0x60
 801165c:	d9de      	bls.n	801161c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801165e:	f883 8000 	strb.w	r8, [r3]
 8011662:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011666:	4798      	blx	r3
 8011668:	e7d8      	b.n	801161c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801166a:	3c01      	subs	r4, #1
 801166c:	e7eb      	b.n	8011646 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801166e:	b020      	add	sp, #128	; 0x80
 8011670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011674 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011674:	b570      	push	{r4, r5, r6, lr}
 8011676:	4615      	mov	r5, r2
 8011678:	461c      	mov	r4, r3
 801167a:	f000 f91c 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 801167e:	b180      	cbz	r0, 80116a2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8011680:	2100      	movs	r1, #0
 8011682:	5c43      	ldrb	r3, [r0, r1]
 8011684:	6826      	ldr	r6, [r4, #0]
 8011686:	b28a      	uxth	r2, r1
 8011688:	b143      	cbz	r3, 801169c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 801168a:	42b2      	cmp	r2, r6
 801168c:	d303      	bcc.n	8011696 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 801168e:	2b0a      	cmp	r3, #10
 8011690:	d004      	beq.n	801169c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011692:	2002      	movs	r0, #2
 8011694:	e004      	b.n	80116a0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8011696:	546b      	strb	r3, [r5, r1]
 8011698:	3101      	adds	r1, #1
 801169a:	e7f2      	b.n	8011682 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 801169c:	2000      	movs	r0, #0
 801169e:	6022      	str	r2, [r4, #0]
 80116a0:	bd70      	pop	{r4, r5, r6, pc}
 80116a2:	2001      	movs	r0, #1
 80116a4:	e7fc      	b.n	80116a0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

080116a6 <Sscan::Float(char const*, char const*, float&)>:
 80116a6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80116aa:	4616      	mov	r6, r2
 80116ac:	f000 f903 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 80116b0:	2800      	cmp	r0, #0
 80116b2:	d059      	beq.n	8011768 <Sscan::Float(char const*, char const*, float&)+0xc2>
 80116b4:	4604      	mov	r4, r0
 80116b6:	7803      	ldrb	r3, [r0, #0]
 80116b8:	2b2d      	cmp	r3, #45	; 0x2d
 80116ba:	bf08      	it	eq
 80116bc:	3401      	addeq	r4, #1
 80116be:	7823      	ldrb	r3, [r4, #0]
 80116c0:	bf0c      	ite	eq
 80116c2:	f04f 0801 	moveq.w	r8, #1
 80116c6:	f04f 0800 	movne.w	r8, #0
 80116ca:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80116ce:	d103      	bne.n	80116d8 <Sscan::Float(char const*, char const*, float&)+0x32>
 80116d0:	2702      	movs	r7, #2
 80116d2:	4638      	mov	r0, r7
 80116d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80116d8:	2000      	movs	r0, #0
 80116da:	220a      	movs	r2, #10
 80116dc:	7823      	ldrb	r3, [r4, #0]
 80116de:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80116e2:	2909      	cmp	r1, #9
 80116e4:	d8f4      	bhi.n	80116d0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80116e6:	fb02 3000 	mla	r0, r2, r0, r3
 80116ea:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80116ee:	3830      	subs	r0, #48	; 0x30
 80116f0:	2b2e      	cmp	r3, #46	; 0x2e
 80116f2:	d002      	beq.n	80116fa <Sscan::Float(char const*, char const*, float&)+0x54>
 80116f4:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80116f8:	d1f0      	bne.n	80116dc <Sscan::Float(char const*, char const*, float&)+0x36>
 80116fa:	f7f6 faf9 	bl	8007cf0 <__aeabi_ui2f>
 80116fe:	6030      	str	r0, [r6, #0]
 8011700:	7823      	ldrb	r3, [r4, #0]
 8011702:	4605      	mov	r5, r0
 8011704:	2b2e      	cmp	r3, #46	; 0x2e
 8011706:	d008      	beq.n	801171a <Sscan::Float(char const*, char const*, float&)+0x74>
 8011708:	f1b8 0f00 	cmp.w	r8, #0
 801170c:	d101      	bne.n	8011712 <Sscan::Float(char const*, char const*, float&)+0x6c>
 801170e:	2700      	movs	r7, #0
 8011710:	e7df      	b.n	80116d2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011712:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8011716:	6035      	str	r5, [r6, #0]
 8011718:	e7f9      	b.n	801170e <Sscan::Float(char const*, char const*, float&)+0x68>
 801171a:	f04f 0901 	mov.w	r9, #1
 801171e:	2000      	movs	r0, #0
 8011720:	220a      	movs	r2, #10
 8011722:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011726:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 801172a:	d111      	bne.n	8011750 <Sscan::Float(char const*, char const*, float&)+0xaa>
 801172c:	f7f6 fae0 	bl	8007cf0 <__aeabi_ui2f>
 8011730:	4604      	mov	r4, r0
 8011732:	4648      	mov	r0, r9
 8011734:	f7f6 fadc 	bl	8007cf0 <__aeabi_ui2f>
 8011738:	4601      	mov	r1, r0
 801173a:	4620      	mov	r0, r4
 801173c:	f7f6 fe56 	bl	80083ec <__aeabi_fdiv>
 8011740:	4629      	mov	r1, r5
 8011742:	f7f6 fa25 	bl	8007b90 <__addsf3>
 8011746:	f1b8 0f00 	cmp.w	r8, #0
 801174a:	d109      	bne.n	8011760 <Sscan::Float(char const*, char const*, float&)+0xba>
 801174c:	6030      	str	r0, [r6, #0]
 801174e:	e7de      	b.n	801170e <Sscan::Float(char const*, char const*, float&)+0x68>
 8011750:	3b30      	subs	r3, #48	; 0x30
 8011752:	2b09      	cmp	r3, #9
 8011754:	d8bc      	bhi.n	80116d0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011756:	fb02 3000 	mla	r0, r2, r0, r3
 801175a:	fb02 f909 	mul.w	r9, r2, r9
 801175e:	e7e0      	b.n	8011722 <Sscan::Float(char const*, char const*, float&)+0x7c>
 8011760:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8011764:	6030      	str	r0, [r6, #0]
 8011766:	e7b4      	b.n	80116d2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011768:	2701      	movs	r7, #1
 801176a:	e7b2      	b.n	80116d2 <Sscan::Float(char const*, char const*, float&)+0x2c>

0801176c <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 801176c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801176e:	4615      	mov	r5, r2
 8011770:	f000 f8a1 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 8011774:	bb58      	cbnz	r0, 80117ce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8011776:	2001      	movs	r0, #1
 8011778:	e027      	b.n	80117ca <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 801177a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 801177e:	2b09      	cmp	r3, #9
 8011780:	d822      	bhi.n	80117c8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011782:	4603      	mov	r3, r0
 8011784:	fb0c 2101 	mla	r1, ip, r1, r2
 8011788:	3930      	subs	r1, #48	; 0x30
 801178a:	4618      	mov	r0, r3
 801178c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011790:	2a2e      	cmp	r2, #46	; 0x2e
 8011792:	d115      	bne.n	80117c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8011794:	29ff      	cmp	r1, #255	; 0xff
 8011796:	d817      	bhi.n	80117c8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011798:	3401      	adds	r4, #1
 801179a:	2c03      	cmp	r4, #3
 801179c:	f806 1b01 	strb.w	r1, [r6], #1
 80117a0:	d119      	bne.n	80117d6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 80117a2:	2400      	movs	r4, #0
 80117a4:	260a      	movs	r6, #10
 80117a6:	1d1a      	adds	r2, r3, #4
 80117a8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80117ac:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80117b0:	d115      	bne.n	80117de <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 80117b2:	2cff      	cmp	r4, #255	; 0xff
 80117b4:	d808      	bhi.n	80117c8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80117b6:	f88d 4007 	strb.w	r4, [sp, #7]
 80117ba:	9b01      	ldr	r3, [sp, #4]
 80117bc:	602b      	str	r3, [r5, #0]
 80117be:	e004      	b.n	80117ca <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80117c0:	2a00      	cmp	r2, #0
 80117c2:	d0e7      	beq.n	8011794 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80117c4:	42b8      	cmp	r0, r7
 80117c6:	d1d8      	bne.n	801177a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 80117c8:	2002      	movs	r0, #2
 80117ca:	b003      	add	sp, #12
 80117cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117ce:	2400      	movs	r4, #0
 80117d0:	f04f 0c0a 	mov.w	ip, #10
 80117d4:	ae01      	add	r6, sp, #4
 80117d6:	4603      	mov	r3, r0
 80117d8:	2100      	movs	r1, #0
 80117da:	1d07      	adds	r7, r0, #4
 80117dc:	e7d5      	b.n	801178a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 80117de:	4293      	cmp	r3, r2
 80117e0:	d0f2      	beq.n	80117c8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80117e2:	3930      	subs	r1, #48	; 0x30
 80117e4:	2909      	cmp	r1, #9
 80117e6:	d8ef      	bhi.n	80117c8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80117e8:	fb06 1404 	mla	r4, r6, r4, r1
 80117ec:	e7dc      	b.n	80117a8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

080117ee <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80117ee:	b538      	push	{r3, r4, r5, lr}
 80117f0:	4615      	mov	r5, r2
 80117f2:	f000 f860 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 80117f6:	b1a0      	cbz	r0, 8011822 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80117f8:	4604      	mov	r4, r0
 80117fa:	2100      	movs	r1, #0
 80117fc:	220a      	movs	r2, #10
 80117fe:	7823      	ldrb	r3, [r4, #0]
 8011800:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011804:	2809      	cmp	r0, #9
 8011806:	d80e      	bhi.n	8011826 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011808:	fb02 3101 	mla	r1, r2, r1, r3
 801180c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011810:	3930      	subs	r1, #48	; 0x30
 8011812:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011816:	d1f2      	bne.n	80117fe <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8011818:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801181c:	d203      	bcs.n	8011826 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801181e:	8029      	strh	r1, [r5, #0]
 8011820:	bd38      	pop	{r3, r4, r5, pc}
 8011822:	2001      	movs	r0, #1
 8011824:	e7fc      	b.n	8011820 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8011826:	2002      	movs	r0, #2
 8011828:	e7fa      	b.n	8011820 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801182a <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 801182a:	b570      	push	{r4, r5, r6, lr}
 801182c:	4615      	mov	r5, r2
 801182e:	f000 f842 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 8011832:	b1f8      	cbz	r0, 8011874 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8011834:	2300      	movs	r3, #0
 8011836:	4604      	mov	r4, r0
 8011838:	461a      	mov	r2, r3
 801183a:	260a      	movs	r6, #10
 801183c:	7820      	ldrb	r0, [r4, #0]
 801183e:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 8011842:	2909      	cmp	r1, #9
 8011844:	d818      	bhi.n	8011878 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011846:	fba3 3106 	umull	r3, r1, r3, r6
 801184a:	fb06 1102 	mla	r1, r6, r2, r1
 801184e:	3b30      	subs	r3, #48	; 0x30
 8011850:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8011854:	18c3      	adds	r3, r0, r3
 8011856:	f141 0200 	adc.w	r2, r1, #0
 801185a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801185e:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011862:	d1eb      	bne.n	801183c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8011864:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8011868:	4299      	cmp	r1, r3
 801186a:	eb70 0202 	sbcs.w	r2, r0, r2
 801186e:	d303      	bcc.n	8011878 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011870:	602b      	str	r3, [r5, #0]
 8011872:	bd70      	pop	{r4, r5, r6, pc}
 8011874:	2001      	movs	r0, #1
 8011876:	e7fc      	b.n	8011872 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8011878:	2002      	movs	r0, #2
 801187a:	e7fa      	b.n	8011872 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

0801187c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 801187c:	b538      	push	{r3, r4, r5, lr}
 801187e:	4615      	mov	r5, r2
 8011880:	f000 f819 	bl	80118b6 <Sscan::checkName(char const*, char const*)>
 8011884:	b198      	cbz	r0, 80118ae <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8011886:	4604      	mov	r4, r0
 8011888:	2100      	movs	r1, #0
 801188a:	220a      	movs	r2, #10
 801188c:	7823      	ldrb	r3, [r4, #0]
 801188e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011892:	2809      	cmp	r0, #9
 8011894:	d80d      	bhi.n	80118b2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011896:	fb02 3101 	mla	r1, r2, r1, r3
 801189a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801189e:	3930      	subs	r1, #48	; 0x30
 80118a0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80118a4:	d1f2      	bne.n	801188c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80118a6:	29ff      	cmp	r1, #255	; 0xff
 80118a8:	d803      	bhi.n	80118b2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80118aa:	7029      	strb	r1, [r5, #0]
 80118ac:	bd38      	pop	{r3, r4, r5, pc}
 80118ae:	2001      	movs	r0, #1
 80118b0:	e7fc      	b.n	80118ac <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80118b2:	2002      	movs	r0, #2
 80118b4:	e7fa      	b.n	80118ac <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080118b6 <Sscan::checkName(char const*, char const*)>:
 80118b6:	4603      	mov	r3, r0
 80118b8:	b510      	push	{r4, lr}
 80118ba:	3901      	subs	r1, #1
 80118bc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80118c0:	461c      	mov	r4, r3
 80118c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80118c6:	b120      	cbz	r0, 80118d2 <Sscan::checkName(char const*, char const*)+0x1c>
 80118c8:	b10a      	cbz	r2, 80118ce <Sscan::checkName(char const*, char const*)+0x18>
 80118ca:	4290      	cmp	r0, r2
 80118cc:	d0f6      	beq.n	80118bc <Sscan::checkName(char const*, char const*)+0x6>
 80118ce:	2000      	movs	r0, #0
 80118d0:	e006      	b.n	80118e0 <Sscan::checkName(char const*, char const*)+0x2a>
 80118d2:	2a3d      	cmp	r2, #61	; 0x3d
 80118d4:	d104      	bne.n	80118e0 <Sscan::checkName(char const*, char const*)+0x2a>
 80118d6:	7860      	ldrb	r0, [r4, #1]
 80118d8:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80118dc:	d000      	beq.n	80118e0 <Sscan::checkName(char const*, char const*)+0x2a>
 80118de:	1c60      	adds	r0, r4, #1
 80118e0:	bd10      	pop	{r4, pc}
	...

080118e4 <Display::PrintInfo() [clone .isra.0]>:
 80118e4:	b910      	cbnz	r0, 80118ec <Display::PrintInfo() [clone .isra.0]+0x8>
 80118e6:	4803      	ldr	r0, [pc, #12]	; (80118f4 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80118e8:	f000 bd2d 	b.w	8012346 <puts>
 80118ec:	6803      	ldr	r3, [r0, #0]
 80118ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80118f0:	4718      	bx	r3
 80118f2:	bf00      	nop
 80118f4:	08016ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, sp, lr}

080118f8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80118f8:	b513      	push	{r0, r1, r4, lr}
 80118fa:	4604      	mov	r4, r0
 80118fc:	0a13      	lsrs	r3, r2, #8
 80118fe:	7800      	ldrb	r0, [r0, #0]
 8011900:	f88d 1004 	strb.w	r1, [sp, #4]
 8011904:	f88d 3005 	strb.w	r3, [sp, #5]
 8011908:	f88d 2006 	strb.w	r2, [sp, #6]
 801190c:	f001 fba8 	bl	8013060 <gd32_i2c_set_address>
 8011910:	6860      	ldr	r0, [r4, #4]
 8011912:	f001 fb9d 	bl	8013050 <gd32_i2c_set_baudrate>
 8011916:	2103      	movs	r1, #3
 8011918:	a801      	add	r0, sp, #4
 801191a:	f001 fba7 	bl	801306c <gd32_i2c_write>
 801191e:	b002      	add	sp, #8
 8011920:	bd10      	pop	{r4, pc}

08011922 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8011922:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011924:	460d      	mov	r5, r1
 8011926:	4604      	mov	r4, r0
 8011928:	f001 fb9a 	bl	8013060 <gd32_i2c_set_address>
 801192c:	4628      	mov	r0, r5
 801192e:	f001 fb8f 	bl	8013050 <gd32_i2c_set_baudrate>
 8011932:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011936:	2b07      	cmp	r3, #7
 8011938:	d902      	bls.n	8011940 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801193a:	3c50      	subs	r4, #80	; 0x50
 801193c:	2c0f      	cmp	r4, #15
 801193e:	d809      	bhi.n	8011954 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011940:	2101      	movs	r1, #1
 8011942:	f10d 0007 	add.w	r0, sp, #7
 8011946:	f001 fbf7 	bl	8013138 <gd32_i2c_read>
 801194a:	fab0 f080 	clz	r0, r0
 801194e:	0940      	lsrs	r0, r0, #5
 8011950:	b003      	add	sp, #12
 8011952:	bd30      	pop	{r4, r5, pc}
 8011954:	2100      	movs	r1, #0
 8011956:	4608      	mov	r0, r1
 8011958:	f001 fb88 	bl	801306c <gd32_i2c_write>
 801195c:	e7f5      	b.n	801194a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801195e <Display::Detect7Segment()>:
 801195e:	b538      	push	{r3, r4, r5, lr}
 8011960:	68c1      	ldr	r1, [r0, #12]
 8011962:	4604      	mov	r4, r0
 8011964:	7a00      	ldrb	r0, [r0, #8]
 8011966:	f7ff ffdc 	bl	8011922 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 801196a:	7460      	strb	r0, [r4, #17]
 801196c:	b170      	cbz	r0, 801198c <Display::Detect7Segment()+0x2e>
 801196e:	2200      	movs	r2, #0
 8011970:	f104 0508 	add.w	r5, r4, #8
 8011974:	4611      	mov	r1, r2
 8011976:	4628      	mov	r0, r5
 8011978:	f7ff ffbe 	bl	80118f8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801197c:	7c63      	ldrb	r3, [r4, #17]
 801197e:	b12b      	cbz	r3, 801198c <Display::Detect7Segment()+0x2e>
 8011980:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8011984:	2112      	movs	r1, #18
 8011986:	4628      	mov	r0, r5
 8011988:	f7ff ffb6 	bl	80118f8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801198c:	bd38      	pop	{r3, r4, r5, pc}

0801198e <Display::Detect(display::Type)>:
 801198e:	2902      	cmp	r1, #2
 8011990:	b538      	push	{r3, r4, r5, lr}
 8011992:	4604      	mov	r4, r0
 8011994:	d014      	beq.n	80119c0 <Display::Detect(display::Type)+0x32>
 8011996:	2904      	cmp	r1, #4
 8011998:	d01b      	beq.n	80119d2 <Display::Detect(display::Type)+0x44>
 801199a:	69a0      	ldr	r0, [r4, #24]
 801199c:	b168      	cbz	r0, 80119ba <Display::Detect(display::Type)+0x2c>
 801199e:	6803      	ldr	r3, [r0, #0]
 80119a0:	689b      	ldr	r3, [r3, #8]
 80119a2:	4798      	blx	r3
 80119a4:	4603      	mov	r3, r0
 80119a6:	69a0      	ldr	r0, [r4, #24]
 80119a8:	b9ab      	cbnz	r3, 80119d6 <Display::Detect(display::Type)+0x48>
 80119aa:	b110      	cbz	r0, 80119b2 <Display::Detect(display::Type)+0x24>
 80119ac:	6803      	ldr	r3, [r0, #0]
 80119ae:	685b      	ldr	r3, [r3, #4]
 80119b0:	4798      	blx	r3
 80119b2:	2300      	movs	r3, #0
 80119b4:	61a3      	str	r3, [r4, #24]
 80119b6:	2304      	movs	r3, #4
 80119b8:	6023      	str	r3, [r4, #0]
 80119ba:	2300      	movs	r3, #0
 80119bc:	6163      	str	r3, [r4, #20]
 80119be:	e010      	b.n	80119e2 <Display::Detect(display::Type)+0x54>
 80119c0:	2018      	movs	r0, #24
 80119c2:	f000 fbc9 	bl	8012158 <operator new(unsigned int)>
 80119c6:	4605      	mov	r5, r0
 80119c8:	2100      	movs	r1, #0
 80119ca:	f000 f89d 	bl	8011b08 <Ssd1306::Ssd1306(TOledPanel)>
 80119ce:	61a5      	str	r5, [r4, #24]
 80119d0:	e7e3      	b.n	801199a <Display::Detect(display::Type)+0xc>
 80119d2:	6001      	str	r1, [r0, #0]
 80119d4:	e7e1      	b.n	801199a <Display::Detect(display::Type)+0xc>
 80119d6:	6803      	ldr	r3, [r0, #0]
 80119d8:	68db      	ldr	r3, [r3, #12]
 80119da:	4798      	blx	r3
 80119dc:	69a3      	ldr	r3, [r4, #24]
 80119de:	2b00      	cmp	r3, #0
 80119e0:	d0eb      	beq.n	80119ba <Display::Detect(display::Type)+0x2c>
 80119e2:	bd38      	pop	{r3, r4, r5, pc}

080119e4 <Display::Display()>:
 80119e4:	2304      	movs	r3, #4
 80119e6:	b510      	push	{r4, lr}
 80119e8:	6003      	str	r3, [r0, #0]
 80119ea:	4b0f      	ldr	r3, [pc, #60]	; (8011a28 <Display::Display()+0x44>)
 80119ec:	4604      	mov	r4, r0
 80119ee:	681b      	ldr	r3, [r3, #0]
 80119f0:	4a0e      	ldr	r2, [pc, #56]	; (8011a2c <Display::Display()+0x48>)
 80119f2:	6043      	str	r3, [r0, #4]
 80119f4:	2321      	movs	r3, #33	; 0x21
 80119f6:	7203      	strb	r3, [r0, #8]
 80119f8:	4b0d      	ldr	r3, [pc, #52]	; (8011a30 <Display::Display()+0x4c>)
 80119fa:	2102      	movs	r1, #2
 80119fc:	60c3      	str	r3, [r0, #12]
 80119fe:	2300      	movs	r3, #0
 8011a00:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8011a04:	8203      	strh	r3, [r0, #16]
 8011a06:	4b0b      	ldr	r3, [pc, #44]	; (8011a34 <Display::Display()+0x50>)
 8011a08:	6018      	str	r0, [r3, #0]
 8011a0a:	f7ff ffc0 	bl	801198e <Display::Detect(display::Type)>
 8011a0e:	4620      	mov	r0, r4
 8011a10:	f7ff ffa5 	bl	801195e <Display::Detect7Segment()>
 8011a14:	69a3      	ldr	r3, [r4, #24]
 8011a16:	b10b      	cbz	r3, 8011a1c <Display::Display()+0x38>
 8011a18:	f7f6 fea2 	bl	8008760 <display::timeout::gpio_init()>
 8011a1c:	69a0      	ldr	r0, [r4, #24]
 8011a1e:	f7ff ff61 	bl	80118e4 <Display::PrintInfo() [clone .isra.0]>
 8011a22:	4620      	mov	r0, r4
 8011a24:	bd10      	pop	{r4, pc}
 8011a26:	bf00      	nop
 8011a28:	2000af0c 	andcs	sl, r0, ip, lsl #30
 8011a2c:	000493e0 	andeq	r9, r4, r0, ror #7
 8011a30:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011a34:	2000ae08 	andcs	sl, r0, r8, lsl #28

08011a38 <Ssd1306::~Ssd1306()>:
 8011a38:	4770      	bx	lr

08011a3a <Ssd1306::SetCursor(unsigned int)>:
 8011a3a:	4770      	bx	lr

08011a3c <Ssd1306::PrintInfo()>:
 8011a3c:	b410      	push	{r4}
 8011a3e:	4906      	ldr	r1, [pc, #24]	; (8011a58 <Ssd1306::PrintInfo()+0x1c>)
 8011a40:	7c44      	ldrb	r4, [r0, #17]
 8011a42:	7903      	ldrb	r3, [r0, #4]
 8011a44:	7942      	ldrb	r2, [r0, #5]
 8011a46:	4805      	ldr	r0, [pc, #20]	; (8011a5c <Ssd1306::PrintInfo()+0x20>)
 8011a48:	2c00      	cmp	r4, #0
 8011a4a:	bf08      	it	eq
 8011a4c:	4601      	moveq	r1, r0
 8011a4e:	4804      	ldr	r0, [pc, #16]	; (8011a60 <Ssd1306::PrintInfo()+0x24>)
 8011a50:	bc10      	pop	{r4}
 8011a52:	f7f7 bc0f 	b.w	8009274 <printf>
 8011a56:	bf00      	nop
 8011a58:	08016bb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, fp, sp, lr}
 8011a5c:	08016bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, sp, lr}
 8011a60:	08016bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, sp, lr}

08011a64 <Ssd1306::~Ssd1306()>:
 8011a64:	b510      	push	{r4, lr}
 8011a66:	4604      	mov	r4, r0
 8011a68:	f000 fb72 	bl	8012150 <operator delete(void*)>
 8011a6c:	4620      	mov	r0, r4
 8011a6e:	bd10      	pop	{r4, pc}

08011a70 <HAL_I2C::Setup()>:
 8011a70:	b510      	push	{r4, lr}
 8011a72:	4604      	mov	r4, r0
 8011a74:	7800      	ldrb	r0, [r0, #0]
 8011a76:	f001 faf3 	bl	8013060 <gd32_i2c_set_address>
 8011a7a:	6860      	ldr	r0, [r4, #4]
 8011a7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a80:	f001 bae6 	b.w	8013050 <gd32_i2c_set_baudrate>

08011a84 <Ssd1306::PutChar(int)>:
 8011a84:	b510      	push	{r4, lr}
 8011a86:	f1a1 0420 	sub.w	r4, r1, #32
 8011a8a:	2c5f      	cmp	r4, #95	; 0x5f
 8011a8c:	bf88      	it	hi
 8011a8e:	2400      	movhi	r4, #0
 8011a90:	3008      	adds	r0, #8
 8011a92:	f7ff ffed 	bl	8011a70 <HAL_I2C::Setup()>
 8011a96:	4804      	ldr	r0, [pc, #16]	; (8011aa8 <Ssd1306::PutChar(int)+0x24>)
 8011a98:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8011a9c:	4420      	add	r0, r4
 8011a9e:	2107      	movs	r1, #7
 8011aa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011aa4:	f001 bae2 	b.w	801306c <gd32_i2c_write>
 8011aa8:	08016bd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, fp, sp, lr}

08011aac <Ssd1306::PutString(char const*)>:
 8011aac:	b538      	push	{r3, r4, r5, lr}
 8011aae:	4605      	mov	r5, r0
 8011ab0:	1e4c      	subs	r4, r1, #1
 8011ab2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011ab6:	b901      	cbnz	r1, 8011aba <Ssd1306::PutString(char const*)+0xe>
 8011ab8:	bd38      	pop	{r3, r4, r5, pc}
 8011aba:	4628      	mov	r0, r5
 8011abc:	f7ff ffe2 	bl	8011a84 <Ssd1306::PutChar(int)>
 8011ac0:	e7f7      	b.n	8011ab2 <Ssd1306::PutString(char const*)+0x6>

08011ac2 <Ssd1306::Text(char const*, unsigned int)>:
 8011ac2:	b570      	push	{r4, r5, r6, lr}
 8011ac4:	7903      	ldrb	r3, [r0, #4]
 8011ac6:	4605      	mov	r5, r0
 8011ac8:	460c      	mov	r4, r1
 8011aca:	4293      	cmp	r3, r2
 8011acc:	bf94      	ite	ls
 8011ace:	18ce      	addls	r6, r1, r3
 8011ad0:	188e      	addhi	r6, r1, r2
 8011ad2:	42b4      	cmp	r4, r6
 8011ad4:	d100      	bne.n	8011ad8 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8011ad6:	bd70      	pop	{r4, r5, r6, pc}
 8011ad8:	4628      	mov	r0, r5
 8011ada:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011ade:	f7ff ffd1 	bl	8011a84 <Ssd1306::PutChar(int)>
 8011ae2:	e7f6      	b.n	8011ad2 <Ssd1306::Text(char const*, unsigned int)+0x10>

08011ae4 <Ssd1306::InitMembers()>:
 8011ae4:	7c03      	ldrb	r3, [r0, #16]
 8011ae6:	b14b      	cbz	r3, 8011afc <Ssd1306::InitMembers()+0x18>
 8011ae8:	3b01      	subs	r3, #1
 8011aea:	2b01      	cmp	r3, #1
 8011aec:	d909      	bls.n	8011b02 <Ssd1306::InitMembers()+0x1e>
 8011aee:	2308      	movs	r3, #8
 8011af0:	2204      	movs	r2, #4
 8011af2:	2115      	movs	r1, #21
 8011af4:	7143      	strb	r3, [r0, #5]
 8011af6:	7101      	strb	r1, [r0, #4]
 8011af8:	6142      	str	r2, [r0, #20]
 8011afa:	4770      	bx	lr
 8011afc:	2308      	movs	r3, #8
 8011afe:	461a      	mov	r2, r3
 8011b00:	e7f7      	b.n	8011af2 <Ssd1306::InitMembers()+0xe>
 8011b02:	2304      	movs	r3, #4
 8011b04:	e7fb      	b.n	8011afe <Ssd1306::InitMembers()+0x1a>
	...

08011b08 <Ssd1306::Ssd1306(TOledPanel)>:
 8011b08:	4a08      	ldr	r2, [pc, #32]	; (8011b2c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8011b0a:	b508      	push	{r3, lr}
 8011b0c:	6002      	str	r2, [r0, #0]
 8011b0e:	227f      	movs	r2, #127	; 0x7f
 8011b10:	80c2      	strh	r2, [r0, #6]
 8011b12:	223c      	movs	r2, #60	; 0x3c
 8011b14:	7202      	strb	r2, [r0, #8]
 8011b16:	4a06      	ldr	r2, [pc, #24]	; (8011b30 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8011b18:	7401      	strb	r1, [r0, #16]
 8011b1a:	60c2      	str	r2, [r0, #12]
 8011b1c:	2200      	movs	r2, #0
 8011b1e:	7442      	strb	r2, [r0, #17]
 8011b20:	4a04      	ldr	r2, [pc, #16]	; (8011b34 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8011b22:	6010      	str	r0, [r2, #0]
 8011b24:	f7ff ffde 	bl	8011ae4 <Ssd1306::InitMembers()>
 8011b28:	bd08      	pop	{r3, pc}
 8011b2a:	bf00      	nop
 8011b2c:	08016eac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, sp, lr}
 8011b30:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011b34:	2000ae94 	mulcs	r0, r4, lr

08011b38 <Ssd1306::SendCommand(unsigned char)>:
 8011b38:	2300      	movs	r3, #0
 8011b3a:	b507      	push	{r0, r1, r2, lr}
 8011b3c:	3008      	adds	r0, #8
 8011b3e:	f88d 3004 	strb.w	r3, [sp, #4]
 8011b42:	f88d 1005 	strb.w	r1, [sp, #5]
 8011b46:	f7ff ff93 	bl	8011a70 <HAL_I2C::Setup()>
 8011b4a:	2102      	movs	r1, #2
 8011b4c:	a801      	add	r0, sp, #4
 8011b4e:	f001 fa8d 	bl	801306c <gd32_i2c_write>
 8011b52:	b003      	add	sp, #12
 8011b54:	f85d fb04 	ldr.w	pc, [sp], #4

08011b58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8011b58:	2914      	cmp	r1, #20
 8011b5a:	b570      	push	{r4, r5, r6, lr}
 8011b5c:	4605      	mov	r5, r0
 8011b5e:	4616      	mov	r6, r2
 8011b60:	d81c      	bhi.n	8011b9c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011b62:	7943      	ldrb	r3, [r0, #5]
 8011b64:	4293      	cmp	r3, r2
 8011b66:	d919      	bls.n	8011b9c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011b68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011b6c:	7c43      	ldrb	r3, [r0, #17]
 8011b6e:	004c      	lsls	r4, r1, #1
 8011b70:	b2e4      	uxtb	r4, r4
 8011b72:	b10b      	cbz	r3, 8011b78 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8011b74:	3404      	adds	r4, #4
 8011b76:	b2e4      	uxtb	r4, r4
 8011b78:	4628      	mov	r0, r5
 8011b7a:	f004 010e 	and.w	r1, r4, #14
 8011b7e:	f7ff ffdb 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011b82:	0921      	lsrs	r1, r4, #4
 8011b84:	4628      	mov	r0, r5
 8011b86:	f041 0110 	orr.w	r1, r1, #16
 8011b8a:	f7ff ffd5 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011b8e:	4628      	mov	r0, r5
 8011b90:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8011b94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b98:	f7ff bfce 	b.w	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011b9c:	bd70      	pop	{r4, r5, r6, pc}

08011b9e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8011b9e:	b570      	push	{r4, r5, r6, lr}
 8011ba0:	461e      	mov	r6, r3
 8011ba2:	7943      	ldrb	r3, [r0, #5]
 8011ba4:	4604      	mov	r4, r0
 8011ba6:	428b      	cmp	r3, r1
 8011ba8:	4615      	mov	r5, r2
 8011baa:	d30b      	bcc.n	8011bc4 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8011bac:	3901      	subs	r1, #1
 8011bae:	b2ca      	uxtb	r2, r1
 8011bb0:	2100      	movs	r1, #0
 8011bb2:	f7ff ffd1 	bl	8011b58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011bb6:	4632      	mov	r2, r6
 8011bb8:	4629      	mov	r1, r5
 8011bba:	4620      	mov	r0, r4
 8011bbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bc0:	f7ff bf7f 	b.w	8011ac2 <Ssd1306::Text(char const*, unsigned int)>
 8011bc4:	bd70      	pop	{r4, r5, r6, pc}
	...

08011bc8 <Ssd1306::ClearLine(unsigned char)>:
 8011bc8:	b538      	push	{r3, r4, r5, lr}
 8011bca:	7943      	ldrb	r3, [r0, #5]
 8011bcc:	4605      	mov	r5, r0
 8011bce:	428b      	cmp	r3, r1
 8011bd0:	d314      	bcc.n	8011bfc <Ssd1306::ClearLine(unsigned char)+0x34>
 8011bd2:	3901      	subs	r1, #1
 8011bd4:	b2cc      	uxtb	r4, r1
 8011bd6:	4622      	mov	r2, r4
 8011bd8:	2100      	movs	r1, #0
 8011bda:	f7ff ffbd 	bl	8011b58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011bde:	f105 0008 	add.w	r0, r5, #8
 8011be2:	f7ff ff45 	bl	8011a70 <HAL_I2C::Setup()>
 8011be6:	2181      	movs	r1, #129	; 0x81
 8011be8:	4805      	ldr	r0, [pc, #20]	; (8011c00 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8011bea:	f001 fa3f 	bl	801306c <gd32_i2c_write>
 8011bee:	4622      	mov	r2, r4
 8011bf0:	4628      	mov	r0, r5
 8011bf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011bf6:	2100      	movs	r1, #0
 8011bf8:	f7ff bfae 	b.w	8011b58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011bfc:	bd38      	pop	{r3, r4, r5, pc}
 8011bfe:	bf00      	nop
 8011c00:	2000ae0c 	andcs	sl, r0, ip, lsl #28

08011c04 <Ssd1306::SetSleep(bool)>:
 8011c04:	b111      	cbz	r1, 8011c0c <Ssd1306::SetSleep(bool)+0x8>
 8011c06:	21ae      	movs	r1, #174	; 0xae
 8011c08:	f7ff bf96 	b.w	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c0c:	21af      	movs	r1, #175	; 0xaf
 8011c0e:	e7fb      	b.n	8011c08 <Ssd1306::SetSleep(bool)+0x4>

08011c10 <Ssd1306::SetContrast(unsigned char)>:
 8011c10:	b538      	push	{r3, r4, r5, lr}
 8011c12:	4604      	mov	r4, r0
 8011c14:	460d      	mov	r5, r1
 8011c16:	7181      	strb	r1, [r0, #6]
 8011c18:	2181      	movs	r1, #129	; 0x81
 8011c1a:	f7ff ff8d 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c1e:	4629      	mov	r1, r5
 8011c20:	4620      	mov	r0, r4
 8011c22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011c26:	f7ff bf87 	b.w	8011b38 <Ssd1306::SendCommand(unsigned char)>

08011c2a <Ssd1306::SetFlipVertically(bool)>:
 8011c2a:	b510      	push	{r4, lr}
 8011c2c:	4604      	mov	r4, r0
 8011c2e:	71c1      	strb	r1, [r0, #7]
 8011c30:	b141      	cbz	r1, 8011c44 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8011c32:	21c0      	movs	r1, #192	; 0xc0
 8011c34:	f7ff ff80 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c38:	21a0      	movs	r1, #160	; 0xa0
 8011c3a:	4620      	mov	r0, r4
 8011c3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011c40:	f7ff bf7a 	b.w	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c44:	21c8      	movs	r1, #200	; 0xc8
 8011c46:	f7ff ff77 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c4a:	21a1      	movs	r1, #161	; 0xa1
 8011c4c:	e7f5      	b.n	8011c3a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08011c50 <Ssd1306::CheckSH1106()>:
 8011c50:	b530      	push	{r4, r5, lr}
 8011c52:	4604      	mov	r4, r0
 8011c54:	b087      	sub	sp, #28
 8011c56:	2100      	movs	r1, #0
 8011c58:	f7ff ff6e 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c5c:	2190      	movs	r1, #144	; 0x90
 8011c5e:	4620      	mov	r0, r4
 8011c60:	f7ff ff6a 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c64:	21b0      	movs	r1, #176	; 0xb0
 8011c66:	4620      	mov	r0, r4
 8011c68:	f7ff ff66 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c6c:	4b22      	ldr	r3, [pc, #136]	; (8011cf8 <Ssd1306::CheckSH1106()+0xa8>)
 8011c6e:	f104 0508 	add.w	r5, r4, #8
 8011c72:	6818      	ldr	r0, [r3, #0]
 8011c74:	791b      	ldrb	r3, [r3, #4]
 8011c76:	9002      	str	r0, [sp, #8]
 8011c78:	4628      	mov	r0, r5
 8011c7a:	f88d 300c 	strb.w	r3, [sp, #12]
 8011c7e:	f7ff fef7 	bl	8011a70 <HAL_I2C::Setup()>
 8011c82:	2105      	movs	r1, #5
 8011c84:	a802      	add	r0, sp, #8
 8011c86:	f001 f9f1 	bl	801306c <gd32_i2c_write>
 8011c8a:	2100      	movs	r1, #0
 8011c8c:	4620      	mov	r0, r4
 8011c8e:	f7ff ff53 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c92:	2190      	movs	r1, #144	; 0x90
 8011c94:	4620      	mov	r0, r4
 8011c96:	f7ff ff4f 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011c9a:	21b0      	movs	r1, #176	; 0xb0
 8011c9c:	4620      	mov	r0, r4
 8011c9e:	f7ff ff4b 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011ca2:	2300      	movs	r3, #0
 8011ca4:	9304      	str	r3, [sp, #16]
 8011ca6:	f88d 3014 	strb.w	r3, [sp, #20]
 8011caa:	2340      	movs	r3, #64	; 0x40
 8011cac:	4628      	mov	r0, r5
 8011cae:	f88d 3007 	strb.w	r3, [sp, #7]
 8011cb2:	f7ff fedd 	bl	8011a70 <HAL_I2C::Setup()>
 8011cb6:	2101      	movs	r1, #1
 8011cb8:	f10d 0007 	add.w	r0, sp, #7
 8011cbc:	f001 f9d6 	bl	801306c <gd32_i2c_write>
 8011cc0:	4628      	mov	r0, r5
 8011cc2:	f7ff fed5 	bl	8011a70 <HAL_I2C::Setup()>
 8011cc6:	2105      	movs	r1, #5
 8011cc8:	a804      	add	r0, sp, #16
 8011cca:	f001 fa35 	bl	8013138 <gd32_i2c_read>
 8011cce:	2004      	movs	r0, #4
 8011cd0:	aa02      	add	r2, sp, #8
 8011cd2:	a904      	add	r1, sp, #16
 8011cd4:	3801      	subs	r0, #1
 8011cd6:	d201      	bcs.n	8011cdc <Ssd1306::CheckSH1106()+0x8c>
 8011cd8:	2300      	movs	r3, #0
 8011cda:	e006      	b.n	8011cea <Ssd1306::CheckSH1106()+0x9a>
 8011cdc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8011ce0:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8011ce4:	42ab      	cmp	r3, r5
 8011ce6:	d0f5      	beq.n	8011cd4 <Ssd1306::CheckSH1106()+0x84>
 8011ce8:	1b5b      	subs	r3, r3, r5
 8011cea:	fab3 f383 	clz	r3, r3
 8011cee:	095b      	lsrs	r3, r3, #5
 8011cf0:	7463      	strb	r3, [r4, #17]
 8011cf2:	b007      	add	sp, #28
 8011cf4:	bd30      	pop	{r4, r5, pc}
 8011cf6:	bf00      	nop
 8011cf8:	08016bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, sp, lr}

08011cfc <Ssd1306::Cls()>:
 8011cfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d00:	4604      	mov	r4, r0
 8011d02:	2600      	movs	r6, #0
 8011d04:	7c45      	ldrb	r5, [r0, #17]
 8011d06:	00ad      	lsls	r5, r5, #2
 8011d08:	b2ed      	uxtb	r5, r5
 8011d0a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8011d0e:	f045 0810 	orr.w	r8, r5, #16
 8011d12:	b2ff      	uxtb	r7, r7
 8011d14:	6963      	ldr	r3, [r4, #20]
 8011d16:	4629      	mov	r1, r5
 8011d18:	42b3      	cmp	r3, r6
 8011d1a:	4620      	mov	r0, r4
 8011d1c:	d80b      	bhi.n	8011d36 <Ssd1306::Cls()+0x3a>
 8011d1e:	f7ff ff0b 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d22:	4641      	mov	r1, r8
 8011d24:	4620      	mov	r0, r4
 8011d26:	f7ff ff07 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d2a:	4620      	mov	r0, r4
 8011d2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011d30:	21b0      	movs	r1, #176	; 0xb0
 8011d32:	f7ff bf01 	b.w	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d36:	f7ff feff 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d3a:	4641      	mov	r1, r8
 8011d3c:	4620      	mov	r0, r4
 8011d3e:	f7ff fefb 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d42:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8011d46:	4620      	mov	r0, r4
 8011d48:	b2c9      	uxtb	r1, r1
 8011d4a:	f7ff fef5 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011d4e:	7c23      	ldrb	r3, [r4, #16]
 8011d50:	b123      	cbz	r3, 8011d5c <Ssd1306::Cls()+0x60>
 8011d52:	3b01      	subs	r3, #1
 8011d54:	2b01      	cmp	r3, #1
 8011d56:	d901      	bls.n	8011d5c <Ssd1306::Cls()+0x60>
 8011d58:	3601      	adds	r6, #1
 8011d5a:	e7db      	b.n	8011d14 <Ssd1306::Cls()+0x18>
 8011d5c:	f104 0008 	add.w	r0, r4, #8
 8011d60:	f7ff fe86 	bl	8011a70 <HAL_I2C::Setup()>
 8011d64:	4639      	mov	r1, r7
 8011d66:	4802      	ldr	r0, [pc, #8]	; (8011d70 <Ssd1306::Cls()+0x74>)
 8011d68:	f001 f980 	bl	801306c <gd32_i2c_write>
 8011d6c:	e7f4      	b.n	8011d58 <Ssd1306::Cls()+0x5c>
 8011d6e:	bf00      	nop
 8011d70:	2000ae0c 	andcs	sl, r0, ip, lsl #28

08011d74 <Ssd1306::Start()>:
 8011d74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011d76:	7a04      	ldrb	r4, [r0, #8]
 8011d78:	68c6      	ldr	r6, [r0, #12]
 8011d7a:	4605      	mov	r5, r0
 8011d7c:	4620      	mov	r0, r4
 8011d7e:	f001 f96f 	bl	8013060 <gd32_i2c_set_address>
 8011d82:	4630      	mov	r0, r6
 8011d84:	f001 f964 	bl	8013050 <gd32_i2c_set_baudrate>
 8011d88:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011d8c:	2b07      	cmp	r3, #7
 8011d8e:	d902      	bls.n	8011d96 <Ssd1306::Start()+0x22>
 8011d90:	3c50      	subs	r4, #80	; 0x50
 8011d92:	2c0f      	cmp	r4, #15
 8011d94:	d80f      	bhi.n	8011db6 <Ssd1306::Start()+0x42>
 8011d96:	2101      	movs	r1, #1
 8011d98:	f10d 0007 	add.w	r0, sp, #7
 8011d9c:	f001 f9cc 	bl	8013138 <gd32_i2c_read>
 8011da0:	fab0 f480 	clz	r4, r0
 8011da4:	0964      	lsrs	r4, r4, #5
 8011da6:	b35c      	cbz	r4, 8011e00 <Ssd1306::Start()+0x8c>
 8011da8:	7c2e      	ldrb	r6, [r5, #16]
 8011daa:	b14e      	cbz	r6, 8011dc0 <Ssd1306::Start()+0x4c>
 8011dac:	3e01      	subs	r6, #1
 8011dae:	2e01      	cmp	r6, #1
 8011db0:	d929      	bls.n	8011e06 <Ssd1306::Start()+0x92>
 8011db2:	2400      	movs	r4, #0
 8011db4:	e024      	b.n	8011e00 <Ssd1306::Start()+0x8c>
 8011db6:	2100      	movs	r1, #0
 8011db8:	4608      	mov	r0, r1
 8011dba:	f001 f957 	bl	801306c <gd32_i2c_write>
 8011dbe:	e7ef      	b.n	8011da0 <Ssd1306::Start()+0x2c>
 8011dc0:	4f16      	ldr	r7, [pc, #88]	; (8011e1c <Ssd1306::Start()+0xa8>)
 8011dc2:	4628      	mov	r0, r5
 8011dc4:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011dc8:	3601      	adds	r6, #1
 8011dca:	f7ff feb5 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011dce:	2e18      	cmp	r6, #24
 8011dd0:	d1f7      	bne.n	8011dc2 <Ssd1306::Start()+0x4e>
 8011dd2:	2300      	movs	r3, #0
 8011dd4:	4a12      	ldr	r2, [pc, #72]	; (8011e20 <Ssd1306::Start()+0xac>)
 8011dd6:	4618      	mov	r0, r3
 8011dd8:	4611      	mov	r1, r2
 8011dda:	3301      	adds	r3, #1
 8011ddc:	2b86      	cmp	r3, #134	; 0x86
 8011dde:	f802 0b01 	strb.w	r0, [r2], #1
 8011de2:	d1fa      	bne.n	8011dda <Ssd1306::Start()+0x66>
 8011de4:	2340      	movs	r3, #64	; 0x40
 8011de6:	4628      	mov	r0, r5
 8011de8:	700b      	strb	r3, [r1, #0]
 8011dea:	f7ff ff31 	bl	8011c50 <Ssd1306::CheckSH1106()>
 8011dee:	4628      	mov	r0, r5
 8011df0:	f7ff ff84 	bl	8011cfc <Ssd1306::Cls()>
 8011df4:	21af      	movs	r1, #175	; 0xaf
 8011df6:	4628      	mov	r0, r5
 8011df8:	f7ff fe9e 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011dfc:	2301      	movs	r3, #1
 8011dfe:	71eb      	strb	r3, [r5, #7]
 8011e00:	4620      	mov	r0, r4
 8011e02:	b003      	add	sp, #12
 8011e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e06:	2600      	movs	r6, #0
 8011e08:	4f06      	ldr	r7, [pc, #24]	; (8011e24 <Ssd1306::Start()+0xb0>)
 8011e0a:	4628      	mov	r0, r5
 8011e0c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011e10:	3601      	adds	r6, #1
 8011e12:	f7ff fe91 	bl	8011b38 <Ssd1306::SendCommand(unsigned char)>
 8011e16:	2e18      	cmp	r6, #24
 8011e18:	d1f7      	bne.n	8011e0a <Ssd1306::Start()+0x96>
 8011e1a:	e7da      	b.n	8011dd2 <Ssd1306::Start()+0x5e>
 8011e1c:	08016e8c 	stmdaeq	r1, {r2, r3, r7, r9, sl, fp, sp, lr}
 8011e20:	2000ae0c 	andcs	sl, r0, ip, lsl #28
 8011e24:	08016e74 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, fp, sp, lr}

08011e28 <console_putc>:
 8011e28:	f000 bb90 	b.w	801254c <uart0_putc>

08011e2c <console_puts>:
 8011e2c:	f000 bbae 	b.w	801258c <uart0_puts>

08011e30 <console_set_fg_color>:
 8011e30:	2807      	cmp	r0, #7
 8011e32:	d810      	bhi.n	8011e56 <console_set_fg_color+0x26>
 8011e34:	e8df f000 	tbb	[pc, r0]
 8011e38:	0b090704 	bleq	8253a50 <__exidx_end+0x23ca70>
 8011e3c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8011e08 <Ssd1306::Start()+0x94>
 8011e40:	4806      	ldr	r0, [pc, #24]	; (8011e5c <console_set_fg_color+0x2c>)
 8011e42:	f000 bba3 	b.w	801258c <uart0_puts>
 8011e46:	4806      	ldr	r0, [pc, #24]	; (8011e60 <console_set_fg_color+0x30>)
 8011e48:	e7fb      	b.n	8011e42 <console_set_fg_color+0x12>
 8011e4a:	4806      	ldr	r0, [pc, #24]	; (8011e64 <console_set_fg_color+0x34>)
 8011e4c:	e7f9      	b.n	8011e42 <console_set_fg_color+0x12>
 8011e4e:	4806      	ldr	r0, [pc, #24]	; (8011e68 <console_set_fg_color+0x38>)
 8011e50:	e7f7      	b.n	8011e42 <console_set_fg_color+0x12>
 8011e52:	4806      	ldr	r0, [pc, #24]	; (8011e6c <console_set_fg_color+0x3c>)
 8011e54:	e7f5      	b.n	8011e42 <console_set_fg_color+0x12>
 8011e56:	4806      	ldr	r0, [pc, #24]	; (8011e70 <console_set_fg_color+0x40>)
 8011e58:	e7f3      	b.n	8011e42 <console_set_fg_color+0x12>
 8011e5a:	bf00      	nop
 8011e5c:	08016eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 8011e60:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}
 8011e64:	08016ef6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, sl, fp, sp, lr}
 8011e68:	08016efc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, fp, sp, lr}
 8011e6c:	080144d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, lr}
 8011e70:	08016f02 	stmdaeq	r1, {r1, r8, r9, sl, fp, sp, lr}

08011e74 <console_error>:
 8011e74:	b510      	push	{r4, lr}
 8011e76:	4604      	mov	r4, r0
 8011e78:	4805      	ldr	r0, [pc, #20]	; (8011e90 <console_error+0x1c>)
 8011e7a:	f000 fb87 	bl	801258c <uart0_puts>
 8011e7e:	4620      	mov	r0, r4
 8011e80:	f000 fb84 	bl	801258c <uart0_puts>
 8011e84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e88:	4802      	ldr	r0, [pc, #8]	; (8011e94 <console_error+0x20>)
 8011e8a:	f000 bb7f 	b.w	801258c <uart0_puts>
 8011e8e:	bf00      	nop
 8011e90:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}
 8011e94:	080144d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, lr}

08011e98 <console_status>:
 8011e98:	b510      	push	{r4, lr}
 8011e9a:	460c      	mov	r4, r1
 8011e9c:	b280      	uxth	r0, r0
 8011e9e:	f7ff ffc7 	bl	8011e30 <console_set_fg_color>
 8011ea2:	4807      	ldr	r0, [pc, #28]	; (8011ec0 <console_status+0x28>)
 8011ea4:	f000 fb72 	bl	801258c <uart0_puts>
 8011ea8:	4620      	mov	r0, r4
 8011eaa:	f000 fb6f 	bl	801258c <uart0_puts>
 8011eae:	200a      	movs	r0, #10
 8011eb0:	f000 fb4c 	bl	801254c <uart0_putc>
 8011eb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011eb8:	4802      	ldr	r0, [pc, #8]	; (8011ec4 <console_status+0x2c>)
 8011eba:	f000 bb67 	b.w	801258c <uart0_puts>
 8011ebe:	bf00      	nop
 8011ec0:	08016ee4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, fp, sp, lr}
 8011ec4:	080144d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, lr}

08011ec8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8011ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ecc:	4617      	mov	r7, r2
 8011ece:	461e      	mov	r6, r3
 8011ed0:	4d14      	ldr	r5, [pc, #80]	; (8011f24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8011ed2:	4b15      	ldr	r3, [pc, #84]	; (8011f28 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8011ed4:	b086      	sub	sp, #24
 8011ed6:	6018      	str	r0, [r3, #0]
 8011ed8:	4604      	mov	r4, r0
 8011eda:	f105 0803 	add.w	r8, r5, #3
 8011ede:	2203      	movs	r2, #3
 8011ee0:	4628      	mov	r0, r5
 8011ee2:	f000 f9f8 	bl	80122d6 <memmove>
 8011ee6:	4639      	mov	r1, r7
 8011ee8:	220b      	movs	r2, #11
 8011eea:	4640      	mov	r0, r8
 8011eec:	f000 f9f3 	bl	80122d6 <memmove>
 8011ef0:	f105 030e 	add.w	r3, r5, #14
 8011ef4:	4631      	mov	r1, r6
 8011ef6:	2208      	movs	r2, #8
 8011ef8:	4618      	mov	r0, r3
 8011efa:	f000 f9ec 	bl	80122d6 <memmove>
 8011efe:	2308      	movs	r3, #8
 8011f00:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8011f04:	230b      	movs	r3, #11
 8011f06:	9302      	str	r3, [sp, #8]
 8011f08:	4b08      	ldr	r3, [pc, #32]	; (8011f2c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8011f0a:	9005      	str	r0, [sp, #20]
 8011f0c:	e9cd 5300 	strd	r5, r3, [sp]
 8011f10:	213f      	movs	r1, #63	; 0x3f
 8011f12:	2303      	movs	r3, #3
 8011f14:	4a06      	ldr	r2, [pc, #24]	; (8011f30 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8011f16:	4807      	ldr	r0, [pc, #28]	; (8011f34 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8011f18:	f7f7 f9d4 	bl	80092c4 <snprintf>
 8011f1c:	4620      	mov	r0, r4
 8011f1e:	b006      	add	sp, #24
 8011f20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f24:	2000ae98 	mulcs	r0, r8, lr
 8011f28:	2000aef0 	strdcs	sl, [r0], -r0
 8011f2c:	08014cae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, fp, lr}
 8011f30:	08016f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, sp, lr}
 8011f34:	2000aeae 	andcs	sl, r0, lr, lsr #29

08011f38 <FirmwareVersion::Print(char const*)>:
 8011f38:	b510      	push	{r4, lr}
 8011f3a:	460c      	mov	r4, r1
 8011f3c:	4804      	ldr	r0, [pc, #16]	; (8011f50 <FirmwareVersion::Print(char const*)+0x18>)
 8011f3e:	f000 fa02 	bl	8012346 <puts>
 8011f42:	b124      	cbz	r4, 8011f4e <FirmwareVersion::Print(char const*)+0x16>
 8011f44:	4620      	mov	r0, r4
 8011f46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f4a:	f000 b9fc 	b.w	8012346 <puts>
 8011f4e:	bd10      	pop	{r4, pc}
 8011f50:	2000aeae 	andcs	sl, r0, lr, lsr #29

08011f54 <LedBlink::LedBlink()>:
 8011f54:	b538      	push	{r3, r4, r5, lr}
 8011f56:	2205      	movs	r2, #5
 8011f58:	2300      	movs	r3, #0
 8011f5a:	e9c0 3200 	strd	r3, r2, [r0]
 8011f5e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8011f62:	6083      	str	r3, [r0, #8]
 8011f64:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011f68:	6143      	str	r3, [r0, #20]
 8011f6a:	4b09      	ldr	r3, [pc, #36]	; (8011f90 <LedBlink::LedBlink()+0x3c>)
 8011f6c:	4d09      	ldr	r5, [pc, #36]	; (8011f94 <LedBlink::LedBlink()+0x40>)
 8011f6e:	4604      	mov	r4, r0
 8011f70:	6018      	str	r0, [r3, #0]
 8011f72:	f240 6004 	movw	r0, #1540	; 0x604
 8011f76:	f000 fd07 	bl	8012988 <rcu_periph_clock_enable>
 8011f7a:	4628      	mov	r0, r5
 8011f7c:	2301      	movs	r3, #1
 8011f7e:	2203      	movs	r2, #3
 8011f80:	2110      	movs	r1, #16
 8011f82:	f000 fc69 	bl	8012858 <gpio_init>
 8011f86:	2301      	movs	r3, #1
 8011f88:	4620      	mov	r0, r4
 8011f8a:	616b      	str	r3, [r5, #20]
 8011f8c:	bd38      	pop	{r3, r4, r5, pc}
 8011f8e:	bf00      	nop
 8011f90:	2000aef4 	strdcs	sl, [r0], -r4
 8011f94:	40011000 	andmi	r1, r1, r0

08011f98 <LedBlink::SetMode(ledblink::Mode)>:
 8011f98:	6843      	ldr	r3, [r0, #4]
 8011f9a:	428b      	cmp	r3, r1
 8011f9c:	d02f      	beq.n	8011ffe <LedBlink::SetMode(ledblink::Mode)+0x66>
 8011f9e:	6041      	str	r1, [r0, #4]
 8011fa0:	2904      	cmp	r1, #4
 8011fa2:	d822      	bhi.n	8011fea <LedBlink::SetMode(ledblink::Mode)+0x52>
 8011fa4:	e8df f001 	tbb	[pc, r1]
 8011fa8:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8011fac:	23ff001d 	mvnscs	r0, #29
 8011fb0:	6003      	str	r3, [r0, #0]
 8011fb2:	2300      	movs	r3, #0
 8011fb4:	2201      	movs	r2, #1
 8011fb6:	60c3      	str	r3, [r0, #12]
 8011fb8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011fbc:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8011fc0:	611a      	str	r2, [r3, #16]
 8011fc2:	6880      	ldr	r0, [r0, #8]
 8011fc4:	b1d8      	cbz	r0, 8011ffe <LedBlink::SetMode(ledblink::Mode)+0x66>
 8011fc6:	6803      	ldr	r3, [r0, #0]
 8011fc8:	689b      	ldr	r3, [r3, #8]
 8011fca:	4718      	bx	r3
 8011fcc:	2301      	movs	r3, #1
 8011fce:	6003      	str	r3, [r0, #0]
 8011fd0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8011fd4:	60c3      	str	r3, [r0, #12]
 8011fd6:	e7f4      	b.n	8011fc2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8011fd8:	2303      	movs	r3, #3
 8011fda:	6003      	str	r3, [r0, #0]
 8011fdc:	f240 134d 	movw	r3, #333	; 0x14d
 8011fe0:	e7f8      	b.n	8011fd4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8011fe2:	2305      	movs	r3, #5
 8011fe4:	6003      	str	r3, [r0, #0]
 8011fe6:	23c8      	movs	r3, #200	; 0xc8
 8011fe8:	e7f4      	b.n	8011fd4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8011fea:	2300      	movs	r3, #0
 8011fec:	2201      	movs	r2, #1
 8011fee:	6003      	str	r3, [r0, #0]
 8011ff0:	60c3      	str	r3, [r0, #12]
 8011ff2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011ff6:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8011ffa:	615a      	str	r2, [r3, #20]
 8011ffc:	e7e1      	b.n	8011fc2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8011ffe:	4770      	bx	lr

08012000 <Hardware::Hardware()>:
 8012000:	b570      	push	{r4, r5, r6, lr}
 8012002:	2400      	movs	r4, #0
 8012004:	4b24      	ldr	r3, [pc, #144]	; (8012098 <Hardware::Hardware()+0x98>)
 8012006:	b090      	sub	sp, #64	; 0x40
 8012008:	7004      	strb	r4, [r0, #0]
 801200a:	6018      	str	r0, [r3, #0]
 801200c:	4605      	mov	r5, r0
 801200e:	f7f5 fa77 	bl	8007500 <console_init>
 8012012:	f000 facb 	bl	80125ac <systick_config>
 8012016:	f001 fad7 	bl	80135c8 <udelay_init()>
 801201a:	f001 fad3 	bl	80135c4 <micros_init()>
 801201e:	f240 701b 	movw	r0, #1819	; 0x71b
 8012022:	f000 fcb1 	bl	8012988 <rcu_periph_clock_enable>
 8012026:	f240 701c 	movw	r0, #1820	; 0x71c
 801202a:	f000 fcad 	bl	8012988 <rcu_periph_clock_enable>
 801202e:	4e1b      	ldr	r6, [pc, #108]	; (801209c <Hardware::Hardware()+0x9c>)
 8012030:	f000 fca2 	bl	8012978 <pmu_backup_write_enable>
 8012034:	4621      	mov	r1, r4
 8012036:	2002      	movs	r0, #2
 8012038:	f000 fb56 	bl	80126e8 <bkp_data_write>
 801203c:	f240 7004 	movw	r0, #1796	; 0x704
 8012040:	f000 fca2 	bl	8012988 <rcu_periph_clock_enable>
 8012044:	4630      	mov	r0, r6
 8012046:	f000 fdf7 	bl	8012c38 <timer_deinit>
 801204a:	236b      	movs	r3, #107	; 0x6b
 801204c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012050:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012054:	a903      	add	r1, sp, #12
 8012056:	4630      	mov	r0, r6
 8012058:	9305      	str	r3, [sp, #20]
 801205a:	f000 fe4f 	bl	8012cfc <timer_init>
 801205e:	4630      	mov	r0, r6
 8012060:	f000 fea4 	bl	8012dac <timer_enable>
 8012064:	f000 ff66 	bl	8012f34 <gd32_adc_init()>
 8012068:	220b      	movs	r2, #11
 801206a:	2309      	movs	r3, #9
 801206c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012070:	237a      	movs	r3, #122	; 0x7a
 8012072:	a807      	add	r0, sp, #28
 8012074:	930c      	str	r3, [sp, #48]	; 0x30
 8012076:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801207a:	9407      	str	r4, [sp, #28]
 801207c:	940f      	str	r4, [sp, #60]	; 0x3c
 801207e:	f000 f9bb 	bl	80123f8 <mktime>
 8012082:	4621      	mov	r1, r4
 8012084:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8012088:	a801      	add	r0, sp, #4
 801208a:	f000 fa2b 	bl	80124e4 <settimeofday>
 801208e:	f000 ffab 	bl	8012fe8 <gd32_i2c_begin>
 8012092:	4628      	mov	r0, r5
 8012094:	b010      	add	sp, #64	; 0x40
 8012096:	bd70      	pop	{r4, r5, r6, pc}
 8012098:	2000aef8 	strdcs	sl, [r0], -r8
 801209c:	40001000 	andmi	r1, r0, r0

080120a0 <Hardware::GetUuid(unsigned char*)>:
 80120a0:	4a0c      	ldr	r2, [pc, #48]	; (80120d4 <Hardware::GetUuid(unsigned char*)+0x34>)
 80120a2:	b084      	sub	sp, #16
 80120a4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80120a8:	9300      	str	r3, [sp, #0]
 80120aa:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 80120ae:	9001      	str	r0, [sp, #4]
 80120b0:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 80120b4:	4403      	add	r3, r0
 80120b6:	4413      	add	r3, r2
 80120b8:	9202      	str	r2, [sp, #8]
 80120ba:	466a      	mov	r2, sp
 80120bc:	9303      	str	r3, [sp, #12]
 80120be:	1e4b      	subs	r3, r1, #1
 80120c0:	310f      	adds	r1, #15
 80120c2:	428b      	cmp	r3, r1
 80120c4:	d101      	bne.n	80120ca <Hardware::GetUuid(unsigned char*)+0x2a>
 80120c6:	b004      	add	sp, #16
 80120c8:	4770      	bx	lr
 80120ca:	f812 0b01 	ldrb.w	r0, [r2], #1
 80120ce:	f803 0f01 	strb.w	r0, [r3, #1]!
 80120d2:	e7f6      	b.n	80120c2 <Hardware::GetUuid(unsigned char*)+0x22>
 80120d4:	1ffff000 	svcne	0x00fff000

080120d8 <Hardware::Reboot()>:
 80120d8:	b508      	push	{r3, lr}
 80120da:	2300      	movs	r3, #0
 80120dc:	4604      	mov	r4, r0
 80120de:	7003      	strb	r3, [r0, #0]
 80120e0:	2104      	movs	r1, #4
 80120e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80120e6:	f000 fb8d 	bl	8012804 <fwdgt_config>
 80120ea:	4620      	mov	r0, r4
 80120ec:	f7f6 fb52 	bl	8008794 <Hardware::RebootHandler()>
 80120f0:	2102      	movs	r1, #2
 80120f2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80120f6:	f000 fb85 	bl	8012804 <fwdgt_config>
 80120fa:	2801      	cmp	r0, #1
 80120fc:	bf0c      	ite	eq
 80120fe:	2301      	moveq	r3, #1
 8012100:	2300      	movne	r3, #0
 8012102:	7023      	strb	r3, [r4, #0]
 8012104:	d101      	bne.n	801210a <Hardware::Reboot()+0x32>
 8012106:	f000 fb6d 	bl	80127e4 <fwdgt_enable>
 801210a:	2208      	movs	r2, #8
 801210c:	4b0d      	ldr	r3, [pc, #52]	; (8012144 <Hardware::Reboot()+0x6c>)
 801210e:	2501      	movs	r5, #1
 8012110:	681b      	ldr	r3, [r3, #0]
 8012112:	480d      	ldr	r0, [pc, #52]	; (8012148 <Hardware::Reboot()+0x70>)
 8012114:	601a      	str	r2, [r3, #0]
 8012116:	227d      	movs	r2, #125	; 0x7d
 8012118:	490c      	ldr	r1, [pc, #48]	; (801214c <Hardware::Reboot()+0x74>)
 801211a:	60da      	str	r2, [r3, #12]
 801211c:	68dc      	ldr	r4, [r3, #12]
 801211e:	b904      	cbnz	r4, 8012122 <Hardware::Reboot()+0x4a>
 8012120:	e7fe      	b.n	8012120 <Hardware::Reboot()+0x48>
 8012122:	6802      	ldr	r2, [r0, #0]
 8012124:	695e      	ldr	r6, [r3, #20]
 8012126:	1b92      	subs	r2, r2, r6
 8012128:	4294      	cmp	r4, r2
 801212a:	d8f8      	bhi.n	801211e <Hardware::Reboot()+0x46>
 801212c:	6802      	ldr	r2, [r0, #0]
 801212e:	615a      	str	r2, [r3, #20]
 8012130:	691a      	ldr	r2, [r3, #16]
 8012132:	2a01      	cmp	r2, #1
 8012134:	f082 0401 	eor.w	r4, r2, #1
 8012138:	611c      	str	r4, [r3, #16]
 801213a:	bf14      	ite	ne
 801213c:	610d      	strne	r5, [r1, #16]
 801213e:	614a      	streq	r2, [r1, #20]
 8012140:	e7ec      	b.n	801211c <Hardware::Reboot()+0x44>
 8012142:	bf00      	nop
 8012144:	2000aef4 	strdcs	sl, [r0], -r4
 8012148:	2000af0c 	andcs	sl, r0, ip, lsl #30
 801214c:	40011000 	andmi	r1, r1, r0

08012150 <operator delete(void*)>:
 8012150:	f000 b890 	b.w	8012274 <free>

08012154 <operator delete[](void*)>:
 8012154:	f000 b88e 	b.w	8012274 <free>

08012158 <operator new(unsigned int)>:
 8012158:	f000 b842 	b.w	80121e0 <malloc>

0801215c <operator new[](unsigned int)>:
 801215c:	f000 b840 	b.w	80121e0 <malloc>

08012160 <inet_aton>:
 8012160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012162:	f04f 0c0a 	mov.w	ip, #10
 8012166:	2500      	movs	r5, #0
 8012168:	ae01      	add	r6, sp, #4
 801216a:	4603      	mov	r3, r0
 801216c:	2200      	movs	r2, #0
 801216e:	1d07      	adds	r7, r0, #4
 8012170:	e007      	b.n	8012182 <inet_aton+0x22>
 8012172:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012176:	2b09      	cmp	r3, #9
 8012178:	d820      	bhi.n	80121bc <inet_aton+0x5c>
 801217a:	4603      	mov	r3, r0
 801217c:	fb0c 4202 	mla	r2, ip, r2, r4
 8012180:	3a30      	subs	r2, #48	; 0x30
 8012182:	4618      	mov	r0, r3
 8012184:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012188:	2c2e      	cmp	r4, #46	; 0x2e
 801218a:	d111      	bne.n	80121b0 <inet_aton+0x50>
 801218c:	3501      	adds	r5, #1
 801218e:	2d03      	cmp	r5, #3
 8012190:	f806 2b01 	strb.w	r2, [r6], #1
 8012194:	d1e9      	bne.n	801216a <inet_aton+0xa>
 8012196:	2200      	movs	r2, #0
 8012198:	250a      	movs	r5, #10
 801219a:	1d1c      	adds	r4, r3, #4
 801219c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80121a0:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 80121a4:	d10d      	bne.n	80121c2 <inet_aton+0x62>
 80121a6:	f88d 2007 	strb.w	r2, [sp, #7]
 80121aa:	b9b1      	cbnz	r1, 80121da <inet_aton+0x7a>
 80121ac:	2001      	movs	r0, #1
 80121ae:	e006      	b.n	80121be <inet_aton+0x5e>
 80121b0:	2c00      	cmp	r4, #0
 80121b2:	d0eb      	beq.n	801218c <inet_aton+0x2c>
 80121b4:	2c0a      	cmp	r4, #10
 80121b6:	d0e9      	beq.n	801218c <inet_aton+0x2c>
 80121b8:	42b8      	cmp	r0, r7
 80121ba:	d1da      	bne.n	8012172 <inet_aton+0x12>
 80121bc:	2000      	movs	r0, #0
 80121be:	b003      	add	sp, #12
 80121c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80121c2:	280a      	cmp	r0, #10
 80121c4:	d0ef      	beq.n	80121a6 <inet_aton+0x46>
 80121c6:	42a3      	cmp	r3, r4
 80121c8:	d0f8      	beq.n	80121bc <inet_aton+0x5c>
 80121ca:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80121ce:	2e09      	cmp	r6, #9
 80121d0:	d8f4      	bhi.n	80121bc <inet_aton+0x5c>
 80121d2:	fb05 0202 	mla	r2, r5, r2, r0
 80121d6:	3a30      	subs	r2, #48	; 0x30
 80121d8:	e7e0      	b.n	801219c <inet_aton+0x3c>
 80121da:	9b01      	ldr	r3, [sp, #4]
 80121dc:	600b      	str	r3, [r1, #0]
 80121de:	e7e5      	b.n	80121ac <inet_aton+0x4c>

080121e0 <malloc>:
 80121e0:	b538      	push	{r3, r4, r5, lr}
 80121e2:	4604      	mov	r4, r0
 80121e4:	4601      	mov	r1, r0
 80121e6:	481c      	ldr	r0, [pc, #112]	; (8012258 <malloc+0x78>)
 80121e8:	f7f7 f844 	bl	8009274 <printf>
 80121ec:	b17c      	cbz	r4, 801220e <malloc+0x2e>
 80121ee:	4b1b      	ldr	r3, [pc, #108]	; (801225c <malloc+0x7c>)
 80121f0:	6818      	ldr	r0, [r3, #0]
 80121f2:	b978      	cbnz	r0, 8012214 <malloc+0x34>
 80121f4:	4a1a      	ldr	r2, [pc, #104]	; (8012260 <malloc+0x80>)
 80121f6:	f104 031b 	add.w	r3, r4, #27
 80121fa:	6811      	ldr	r1, [r2, #0]
 80121fc:	4819      	ldr	r0, [pc, #100]	; (8012264 <malloc+0x84>)
 80121fe:	f023 030f 	bic.w	r3, r3, #15
 8012202:	440b      	add	r3, r1
 8012204:	4283      	cmp	r3, r0
 8012206:	d921      	bls.n	801224c <malloc+0x6c>
 8012208:	4817      	ldr	r0, [pc, #92]	; (8012268 <malloc+0x88>)
 801220a:	f7f7 f833 	bl	8009274 <printf>
 801220e:	2500      	movs	r5, #0
 8012210:	4628      	mov	r0, r5
 8012212:	bd38      	pop	{r3, r4, r5, pc}
 8012214:	4284      	cmp	r4, r0
 8012216:	d80a      	bhi.n	801222e <malloc+0x4e>
 8012218:	685a      	ldr	r2, [r3, #4]
 801221a:	6899      	ldr	r1, [r3, #8]
 801221c:	3201      	adds	r2, #1
 801221e:	428a      	cmp	r2, r1
 8012220:	605a      	str	r2, [r3, #4]
 8012222:	d900      	bls.n	8012226 <malloc+0x46>
 8012224:	609a      	str	r2, [r3, #8]
 8012226:	68d9      	ldr	r1, [r3, #12]
 8012228:	b919      	cbnz	r1, 8012232 <malloc+0x52>
 801222a:	4604      	mov	r4, r0
 801222c:	e7e2      	b.n	80121f4 <malloc+0x14>
 801222e:	3310      	adds	r3, #16
 8012230:	e7de      	b.n	80121f0 <malloc+0x10>
 8012232:	4604      	mov	r4, r0
 8012234:	688a      	ldr	r2, [r1, #8]
 8012236:	60da      	str	r2, [r3, #12]
 8012238:	2300      	movs	r3, #0
 801223a:	f101 050c 	add.w	r5, r1, #12
 801223e:	608b      	str	r3, [r1, #8]
 8012240:	4622      	mov	r2, r4
 8012242:	462b      	mov	r3, r5
 8012244:	4809      	ldr	r0, [pc, #36]	; (801226c <malloc+0x8c>)
 8012246:	f7f7 f815 	bl	8009274 <printf>
 801224a:	e7e1      	b.n	8012210 <malloc+0x30>
 801224c:	6013      	str	r3, [r2, #0]
 801224e:	4b08      	ldr	r3, [pc, #32]	; (8012270 <malloc+0x90>)
 8012250:	e9c1 3400 	strd	r3, r4, [r1]
 8012254:	e7f0      	b.n	8012238 <malloc+0x58>
 8012256:	bf00      	nop
 8012258:	08016f2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, sp, lr}
 801225c:	20000010 	andcs	r0, r0, r0, lsl r0
 8012260:	2000000c 	andcs	r0, r0, ip
 8012264:	20016000 	andcs	r6, r1, r0
 8012268:	08016f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, sp, lr}
 801226c:	08016f54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp, sp, lr}
 8012270:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012274 <free>:
 8012274:	b538      	push	{r3, r4, r5, lr}
 8012276:	4604      	mov	r4, r0
 8012278:	b1c8      	cbz	r0, 80122ae <free+0x3a>
 801227a:	f1a0 050c 	sub.w	r5, r0, #12
 801227e:	4602      	mov	r2, r0
 8012280:	4629      	mov	r1, r5
 8012282:	480c      	ldr	r0, [pc, #48]	; (80122b4 <free+0x40>)
 8012284:	f7f6 fff6 	bl	8009274 <printf>
 8012288:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 801228c:	4b0a      	ldr	r3, [pc, #40]	; (80122b8 <free+0x44>)
 801228e:	429a      	cmp	r2, r3
 8012290:	d10d      	bne.n	80122ae <free+0x3a>
 8012292:	4b0a      	ldr	r3, [pc, #40]	; (80122bc <free+0x48>)
 8012294:	681a      	ldr	r2, [r3, #0]
 8012296:	b152      	cbz	r2, 80122ae <free+0x3a>
 8012298:	f854 1c08 	ldr.w	r1, [r4, #-8]
 801229c:	4291      	cmp	r1, r2
 801229e:	d107      	bne.n	80122b0 <free+0x3c>
 80122a0:	68da      	ldr	r2, [r3, #12]
 80122a2:	f844 2c04 	str.w	r2, [r4, #-4]
 80122a6:	685a      	ldr	r2, [r3, #4]
 80122a8:	60dd      	str	r5, [r3, #12]
 80122aa:	3a01      	subs	r2, #1
 80122ac:	605a      	str	r2, [r3, #4]
 80122ae:	bd38      	pop	{r3, r4, r5, pc}
 80122b0:	3310      	adds	r3, #16
 80122b2:	e7ef      	b.n	8012294 <free+0x20>
 80122b4:	08016f7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 80122b8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80122bc:	20000010 	andcs	r0, r0, r0, lsl r0

080122c0 <memcpy>:
 80122c0:	b510      	push	{r4, lr}
 80122c2:	1e43      	subs	r3, r0, #1
 80122c4:	440a      	add	r2, r1
 80122c6:	4291      	cmp	r1, r2
 80122c8:	d100      	bne.n	80122cc <memcpy+0xc>
 80122ca:	bd10      	pop	{r4, pc}
 80122cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80122d0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80122d4:	e7f7      	b.n	80122c6 <memcpy+0x6>

080122d6 <memmove>:
 80122d6:	4288      	cmp	r0, r1
 80122d8:	b510      	push	{r4, lr}
 80122da:	eb01 0302 	add.w	r3, r1, r2
 80122de:	d208      	bcs.n	80122f2 <memmove+0x1c>
 80122e0:	1e42      	subs	r2, r0, #1
 80122e2:	4299      	cmp	r1, r3
 80122e4:	d100      	bne.n	80122e8 <memmove+0x12>
 80122e6:	bd10      	pop	{r4, pc}
 80122e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80122ec:	f802 4f01 	strb.w	r4, [r2, #1]!
 80122f0:	e7f7      	b.n	80122e2 <memmove+0xc>
 80122f2:	4601      	mov	r1, r0
 80122f4:	4402      	add	r2, r0
 80122f6:	428a      	cmp	r2, r1
 80122f8:	d0f5      	beq.n	80122e6 <memmove+0x10>
 80122fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80122fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012302:	e7f8      	b.n	80122f6 <memmove+0x20>

08012304 <memset>:
 8012304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012306:	b1c2      	cbz	r2, 801233a <memset+0x36>
 8012308:	4603      	mov	r3, r0
 801230a:	b2c9      	uxtb	r1, r1
 801230c:	075c      	lsls	r4, r3, #29
 801230e:	d110      	bne.n	8012332 <memset+0x2e>
 8012310:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8012314:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8012318:	463d      	mov	r5, r7
 801231a:	461e      	mov	r6, r3
 801231c:	f022 0407 	bic.w	r4, r2, #7
 8012320:	441c      	add	r4, r3
 8012322:	42a6      	cmp	r6, r4
 8012324:	d10a      	bne.n	801233c <memset+0x38>
 8012326:	4413      	add	r3, r2
 8012328:	429c      	cmp	r4, r3
 801232a:	d006      	beq.n	801233a <memset+0x36>
 801232c:	f804 1b01 	strb.w	r1, [r4], #1
 8012330:	e7fa      	b.n	8012328 <memset+0x24>
 8012332:	3a01      	subs	r2, #1
 8012334:	f803 1b01 	strb.w	r1, [r3], #1
 8012338:	d1e8      	bne.n	801230c <memset+0x8>
 801233a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801233c:	f846 7b08 	str.w	r7, [r6], #8
 8012340:	f846 5c04 	str.w	r5, [r6, #-4]
 8012344:	e7ed      	b.n	8012322 <memset+0x1e>

08012346 <puts>:
 8012346:	b508      	push	{r3, lr}
 8012348:	f7ff fd70 	bl	8011e2c <console_puts>
 801234c:	200a      	movs	r0, #10
 801234e:	f7ff fd6b 	bl	8011e28 <console_putc>
 8012352:	2001      	movs	r0, #1
 8012354:	bd08      	pop	{r3, pc}
	...

08012358 <strtok>:
 8012358:	b530      	push	{r4, r5, lr}
 801235a:	b910      	cbnz	r0, 8012362 <strtok+0xa>
 801235c:	4b12      	ldr	r3, [pc, #72]	; (80123a8 <strtok+0x50>)
 801235e:	6818      	ldr	r0, [r3, #0]
 8012360:	b158      	cbz	r0, 801237a <strtok+0x22>
 8012362:	4603      	mov	r3, r0
 8012364:	460d      	mov	r5, r1
 8012366:	4618      	mov	r0, r3
 8012368:	f813 2b01 	ldrb.w	r2, [r3], #1
 801236c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012370:	b924      	cbnz	r4, 801237c <strtok+0x24>
 8012372:	b94a      	cbnz	r2, 8012388 <strtok+0x30>
 8012374:	4610      	mov	r0, r2
 8012376:	4b0c      	ldr	r3, [pc, #48]	; (80123a8 <strtok+0x50>)
 8012378:	601a      	str	r2, [r3, #0]
 801237a:	bd30      	pop	{r4, r5, pc}
 801237c:	42a2      	cmp	r2, r4
 801237e:	d1f5      	bne.n	801236c <strtok+0x14>
 8012380:	e7f0      	b.n	8012364 <strtok+0xc>
 8012382:	4613      	mov	r3, r2
 8012384:	e00c      	b.n	80123a0 <strtok+0x48>
 8012386:	b914      	cbnz	r4, 801238e <strtok+0x36>
 8012388:	460d      	mov	r5, r1
 801238a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801238e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012392:	42a2      	cmp	r2, r4
 8012394:	d1f7      	bne.n	8012386 <strtok+0x2e>
 8012396:	2a00      	cmp	r2, #0
 8012398:	d0f3      	beq.n	8012382 <strtok+0x2a>
 801239a:	2200      	movs	r2, #0
 801239c:	f803 2c01 	strb.w	r2, [r3, #-1]
 80123a0:	4a01      	ldr	r2, [pc, #4]	; (80123a8 <strtok+0x50>)
 80123a2:	6013      	str	r3, [r2, #0]
 80123a4:	e7e9      	b.n	801237a <strtok+0x22>
 80123a6:	bf00      	nop
 80123a8:	2000aefc 	strdcs	sl, [r0], -ip

080123ac <isleapyear>:
 80123ac:	2264      	movs	r2, #100	; 0x64
 80123ae:	fb90 f3f2 	sdiv	r3, r0, r2
 80123b2:	fb02 0313 	mls	r3, r2, r3, r0
 80123b6:	b94b      	cbnz	r3, 80123cc <isleapyear+0x20>
 80123b8:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80123bc:	fb90 f2f3 	sdiv	r2, r0, r3
 80123c0:	fb03 0012 	mls	r0, r3, r2, r0
 80123c4:	fab0 f080 	clz	r0, r0
 80123c8:	0940      	lsrs	r0, r0, #5
 80123ca:	4770      	bx	lr
 80123cc:	f010 0f03 	tst.w	r0, #3
 80123d0:	bf0c      	ite	eq
 80123d2:	2001      	moveq	r0, #1
 80123d4:	2000      	movne	r0, #0
 80123d6:	4770      	bx	lr

080123d8 <getdaysofmonth>:
 80123d8:	b510      	push	{r4, lr}
 80123da:	4604      	mov	r4, r0
 80123dc:	2c01      	cmp	r4, #1
 80123de:	4608      	mov	r0, r1
 80123e0:	d102      	bne.n	80123e8 <getdaysofmonth+0x10>
 80123e2:	f7ff ffe3 	bl	80123ac <isleapyear>
 80123e6:	b918      	cbnz	r0, 80123f0 <getdaysofmonth+0x18>
 80123e8:	4b02      	ldr	r3, [pc, #8]	; (80123f4 <getdaysofmonth+0x1c>)
 80123ea:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80123ee:	bd10      	pop	{r4, pc}
 80123f0:	201d      	movs	r0, #29
 80123f2:	e7fc      	b.n	80123ee <getdaysofmonth+0x16>
 80123f4:	08016fa8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, fp, sp, lr}

080123f8 <mktime>:
 80123f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123fc:	4604      	mov	r4, r0
 80123fe:	2800      	cmp	r0, #0
 8012400:	d043      	beq.n	801248a <mktime+0x92>
 8012402:	6941      	ldr	r1, [r0, #20]
 8012404:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8012408:	2b45      	cmp	r3, #69	; 0x45
 801240a:	d83e      	bhi.n	801248a <mktime+0x92>
 801240c:	2600      	movs	r6, #0
 801240e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8012412:	f240 186d 	movw	r8, #365	; 0x16d
 8012416:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 801241a:	42af      	cmp	r7, r5
 801241c:	da24      	bge.n	8012468 <mktime+0x70>
 801241e:	6927      	ldr	r7, [r4, #16]
 8012420:	2f0b      	cmp	r7, #11
 8012422:	d832      	bhi.n	801248a <mktime+0x92>
 8012424:	2500      	movs	r5, #0
 8012426:	42af      	cmp	r7, r5
 8012428:	d129      	bne.n	801247e <mktime+0x86>
 801242a:	68e5      	ldr	r5, [r4, #12]
 801242c:	2d00      	cmp	r5, #0
 801242e:	dd2c      	ble.n	801248a <mktime+0x92>
 8012430:	4638      	mov	r0, r7
 8012432:	f7ff ffd1 	bl	80123d8 <getdaysofmonth>
 8012436:	4285      	cmp	r5, r0
 8012438:	dc27      	bgt.n	801248a <mktime+0x92>
 801243a:	2318      	movs	r3, #24
 801243c:	3d01      	subs	r5, #1
 801243e:	4435      	add	r5, r6
 8012440:	435d      	muls	r5, r3
 8012442:	68a3      	ldr	r3, [r4, #8]
 8012444:	2b17      	cmp	r3, #23
 8012446:	d820      	bhi.n	801248a <mktime+0x92>
 8012448:	213c      	movs	r1, #60	; 0x3c
 801244a:	442b      	add	r3, r5
 801244c:	fb01 f203 	mul.w	r2, r1, r3
 8012450:	6863      	ldr	r3, [r4, #4]
 8012452:	2b3b      	cmp	r3, #59	; 0x3b
 8012454:	d819      	bhi.n	801248a <mktime+0x92>
 8012456:	6820      	ldr	r0, [r4, #0]
 8012458:	4413      	add	r3, r2
 801245a:	283b      	cmp	r0, #59	; 0x3b
 801245c:	fb01 f303 	mul.w	r3, r1, r3
 8012460:	d813      	bhi.n	801248a <mktime+0x92>
 8012462:	4418      	add	r0, r3
 8012464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012468:	4628      	mov	r0, r5
 801246a:	f7ff ff9f 	bl	80123ac <isleapyear>
 801246e:	2800      	cmp	r0, #0
 8012470:	bf14      	ite	ne
 8012472:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8012476:	4643      	moveq	r3, r8
 8012478:	3501      	adds	r5, #1
 801247a:	441e      	add	r6, r3
 801247c:	e7cd      	b.n	801241a <mktime+0x22>
 801247e:	4628      	mov	r0, r5
 8012480:	f7ff ffaa 	bl	80123d8 <getdaysofmonth>
 8012484:	3501      	adds	r5, #1
 8012486:	4406      	add	r6, r0
 8012488:	e7cd      	b.n	8012426 <mktime+0x2e>
 801248a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801248e:	e7e9      	b.n	8012464 <mktime+0x6c>

08012490 <gettimeofday>:
 8012490:	b538      	push	{r3, r4, r5, lr}
 8012492:	4b10      	ldr	r3, [pc, #64]	; (80124d4 <gettimeofday+0x44>)
 8012494:	4a10      	ldr	r2, [pc, #64]	; (80124d8 <gettimeofday+0x48>)
 8012496:	681b      	ldr	r3, [r3, #0]
 8012498:	6814      	ldr	r4, [r2, #0]
 801249a:	6013      	str	r3, [r2, #0]
 801249c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80124a0:	429c      	cmp	r4, r3
 80124a2:	bf2c      	ite	cs
 80124a4:	1ae4      	subcs	r4, r4, r3
 80124a6:	1b1c      	subcc	r4, r3, r4
 80124a8:	4354      	muls	r4, r2
 80124aa:	4b0c      	ldr	r3, [pc, #48]	; (80124dc <gettimeofday+0x4c>)
 80124ac:	4605      	mov	r5, r0
 80124ae:	e9d3 2100 	ldrd	r2, r1, [r3]
 80124b2:	18a4      	adds	r4, r4, r2
 80124b4:	f141 0100 	adc.w	r1, r1, #0
 80124b8:	e9c3 4100 	strd	r4, r1, [r3]
 80124bc:	4620      	mov	r0, r4
 80124be:	2300      	movs	r3, #0
 80124c0:	4a07      	ldr	r2, [pc, #28]	; (80124e0 <gettimeofday+0x50>)
 80124c2:	f7f5 fd09 	bl	8007ed8 <__aeabi_uldivmod>
 80124c6:	4b06      	ldr	r3, [pc, #24]	; (80124e0 <gettimeofday+0x50>)
 80124c8:	6028      	str	r0, [r5, #0]
 80124ca:	fb03 4410 	mls	r4, r3, r0, r4
 80124ce:	2000      	movs	r0, #0
 80124d0:	606c      	str	r4, [r5, #4]
 80124d2:	bd38      	pop	{r3, r4, r5, pc}
 80124d4:	2000af0c 	andcs	sl, r0, ip, lsl #30
 80124d8:	2000af08 	andcs	sl, r0, r8, lsl #30
 80124dc:	2000af00 	andcs	sl, r0, r0, lsl #30
 80124e0:	000f4240 	andeq	r4, pc, r0, asr #4

080124e4 <settimeofday>:
 80124e4:	4b07      	ldr	r3, [pc, #28]	; (8012504 <settimeofday+0x20>)
 80124e6:	b510      	push	{r4, lr}
 80124e8:	681a      	ldr	r2, [r3, #0]
 80124ea:	4b07      	ldr	r3, [pc, #28]	; (8012508 <settimeofday+0x24>)
 80124ec:	6804      	ldr	r4, [r0, #0]
 80124ee:	601a      	str	r2, [r3, #0]
 80124f0:	6843      	ldr	r3, [r0, #4]
 80124f2:	4806      	ldr	r0, [pc, #24]	; (801250c <settimeofday+0x28>)
 80124f4:	17da      	asrs	r2, r3, #31
 80124f6:	fbc4 3200 	smlal	r3, r2, r4, r0
 80124fa:	4905      	ldr	r1, [pc, #20]	; (8012510 <settimeofday+0x2c>)
 80124fc:	2000      	movs	r0, #0
 80124fe:	e9c1 3200 	strd	r3, r2, [r1]
 8012502:	bd10      	pop	{r4, pc}
 8012504:	2000af0c 	andcs	sl, r0, ip, lsl #30
 8012508:	2000af08 	andcs	sl, r0, r8, lsl #30
 801250c:	000f4240 	andeq	r4, pc, r0, asr #4
 8012510:	2000af00 	andcs	sl, r0, r0, lsl #30

08012514 <time>:
 8012514:	b513      	push	{r0, r1, r4, lr}
 8012516:	4604      	mov	r4, r0
 8012518:	2100      	movs	r1, #0
 801251a:	4668      	mov	r0, sp
 801251c:	f7ff ffb8 	bl	8012490 <gettimeofday>
 8012520:	9800      	ldr	r0, [sp, #0]
 8012522:	b104      	cbz	r4, 8012526 <time+0x12>
 8012524:	6020      	str	r0, [r4, #0]
 8012526:	b002      	add	sp, #8
 8012528:	bd10      	pop	{r4, pc}
	...

0801252c <uart0_init>:
 801252c:	2301      	movs	r3, #1
 801252e:	b507      	push	{r0, r1, r2, lr}
 8012530:	2208      	movs	r2, #8
 8012532:	9300      	str	r3, [sp, #0]
 8012534:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8012538:	2300      	movs	r3, #0
 801253a:	4803      	ldr	r0, [pc, #12]	; (8012548 <uart0_init+0x1c>)
 801253c:	f000 ff6a 	bl	8013414 <gd32_uart_begin>
 8012540:	b003      	add	sp, #12
 8012542:	f85d fb04 	ldr.w	pc, [sp], #4
 8012546:	bf00      	nop
 8012548:	40013800 	andmi	r3, r1, r0, lsl #16

0801254c <uart0_putc>:
 801254c:	280a      	cmp	r0, #10
 801254e:	b538      	push	{r3, r4, r5, lr}
 8012550:	4604      	mov	r4, r0
 8012552:	d10a      	bne.n	801256a <uart0_putc+0x1e>
 8012554:	4d0b      	ldr	r5, [pc, #44]	; (8012584 <uart0_putc+0x38>)
 8012556:	2107      	movs	r1, #7
 8012558:	4628      	mov	r0, r5
 801255a:	f000 fcc5 	bl	8012ee8 <usart_flag_get>
 801255e:	2800      	cmp	r0, #0
 8012560:	d0f9      	beq.n	8012556 <uart0_putc+0xa>
 8012562:	220d      	movs	r2, #13
 8012564:	4b08      	ldr	r3, [pc, #32]	; (8012588 <uart0_putc+0x3c>)
 8012566:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801256a:	4d06      	ldr	r5, [pc, #24]	; (8012584 <uart0_putc+0x38>)
 801256c:	2107      	movs	r1, #7
 801256e:	4628      	mov	r0, r5
 8012570:	f000 fcba 	bl	8012ee8 <usart_flag_get>
 8012574:	2800      	cmp	r0, #0
 8012576:	d0f9      	beq.n	801256c <uart0_putc+0x20>
 8012578:	4b03      	ldr	r3, [pc, #12]	; (8012588 <uart0_putc+0x3c>)
 801257a:	b2e4      	uxtb	r4, r4
 801257c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012580:	bd38      	pop	{r3, r4, r5, pc}
 8012582:	bf00      	nop
 8012584:	40013800 	andmi	r3, r1, r0, lsl #16
 8012588:	40013000 	andmi	r3, r1, r0

0801258c <uart0_puts>:
 801258c:	b510      	push	{r4, lr}
 801258e:	1e44      	subs	r4, r0, #1
 8012590:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012594:	b903      	cbnz	r3, 8012598 <uart0_puts+0xc>
 8012596:	bd10      	pop	{r4, pc}
 8012598:	2b0a      	cmp	r3, #10
 801259a:	d102      	bne.n	80125a2 <uart0_puts+0x16>
 801259c:	200d      	movs	r0, #13
 801259e:	f7ff ffd5 	bl	801254c <uart0_putc>
 80125a2:	7820      	ldrb	r0, [r4, #0]
 80125a4:	f7ff ffd2 	bl	801254c <uart0_putc>
 80125a8:	e7f2      	b.n	8012590 <uart0_puts+0x4>
	...

080125ac <systick_config>:
 80125ac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80125b0:	4b0b      	ldr	r3, [pc, #44]	; (80125e0 <systick_config+0x34>)
 80125b2:	681b      	ldr	r3, [r3, #0]
 80125b4:	fbb3 f3f2 	udiv	r3, r3, r2
 80125b8:	3b01      	subs	r3, #1
 80125ba:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80125be:	d20d      	bcs.n	80125dc <systick_config+0x30>
 80125c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80125c4:	21f0      	movs	r1, #240	; 0xf0
 80125c6:	6153      	str	r3, [r2, #20]
 80125c8:	4b06      	ldr	r3, [pc, #24]	; (80125e4 <systick_config+0x38>)
 80125ca:	2007      	movs	r0, #7
 80125cc:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80125d0:	2100      	movs	r1, #0
 80125d2:	6191      	str	r1, [r2, #24]
 80125d4:	6110      	str	r0, [r2, #16]
 80125d6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80125da:	4770      	bx	lr
 80125dc:	e7fe      	b.n	80125dc <systick_config+0x30>
 80125de:	bf00      	nop
 80125e0:	200000e0 	andcs	r0, r0, r0, ror #1
 80125e4:	e000ed00 	and	lr, r0, r0, lsl #26

080125e8 <SysTick_Handler>:
 80125e8:	4a02      	ldr	r2, [pc, #8]	; (80125f4 <SysTick_Handler+0xc>)
 80125ea:	6813      	ldr	r3, [r2, #0]
 80125ec:	3301      	adds	r3, #1
 80125ee:	6013      	str	r3, [r2, #0]
 80125f0:	4770      	bx	lr
 80125f2:	bf00      	nop
 80125f4:	2000af0c 	andcs	sl, r0, ip, lsl #30

080125f8 <SystemInit>:
 80125f8:	4b37      	ldr	r3, [pc, #220]	; (80126d8 <SystemInit+0xe0>)
 80125fa:	4938      	ldr	r1, [pc, #224]	; (80126dc <SystemInit+0xe4>)
 80125fc:	681a      	ldr	r2, [r3, #0]
 80125fe:	f042 0201 	orr.w	r2, r2, #1
 8012602:	601a      	str	r2, [r3, #0]
 8012604:	685a      	ldr	r2, [r3, #4]
 8012606:	f022 0203 	bic.w	r2, r2, #3
 801260a:	605a      	str	r2, [r3, #4]
 801260c:	681a      	ldr	r2, [r3, #0]
 801260e:	400a      	ands	r2, r1
 8012610:	601a      	str	r2, [r3, #0]
 8012612:	6858      	ldr	r0, [r3, #4]
 8012614:	4a32      	ldr	r2, [pc, #200]	; (80126e0 <SystemInit+0xe8>)
 8012616:	4002      	ands	r2, r0
 8012618:	605a      	str	r2, [r3, #4]
 801261a:	681a      	ldr	r2, [r3, #0]
 801261c:	400a      	ands	r2, r1
 801261e:	601a      	str	r2, [r3, #0]
 8012620:	681a      	ldr	r2, [r3, #0]
 8012622:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8012626:	601a      	str	r2, [r3, #0]
 8012628:	685a      	ldr	r2, [r3, #4]
 801262a:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 801262e:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012632:	605a      	str	r2, [r3, #4]
 8012634:	2200      	movs	r2, #0
 8012636:	62da      	str	r2, [r3, #44]	; 0x2c
 8012638:	681a      	ldr	r2, [r3, #0]
 801263a:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 801263e:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 8012642:	601a      	str	r2, [r3, #0]
 8012644:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8012648:	609a      	str	r2, [r3, #8]
 801264a:	681a      	ldr	r2, [r3, #0]
 801264c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8012650:	601a      	str	r2, [r3, #0]
 8012652:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012656:	6819      	ldr	r1, [r3, #0]
 8012658:	0389      	lsls	r1, r1, #14
 801265a:	d401      	bmi.n	8012660 <SystemInit+0x68>
 801265c:	3a01      	subs	r2, #1
 801265e:	d1fa      	bne.n	8012656 <SystemInit+0x5e>
 8012660:	681a      	ldr	r2, [r3, #0]
 8012662:	0392      	lsls	r2, r2, #14
 8012664:	d400      	bmi.n	8012668 <SystemInit+0x70>
 8012666:	e7fe      	b.n	8012666 <SystemInit+0x6e>
 8012668:	685a      	ldr	r2, [r3, #4]
 801266a:	605a      	str	r2, [r3, #4]
 801266c:	685a      	ldr	r2, [r3, #4]
 801266e:	605a      	str	r2, [r3, #4]
 8012670:	685a      	ldr	r2, [r3, #4]
 8012672:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012676:	605a      	str	r2, [r3, #4]
 8012678:	685a      	ldr	r2, [r3, #4]
 801267a:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 801267e:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8012682:	605a      	str	r2, [r3, #4]
 8012684:	685a      	ldr	r2, [r3, #4]
 8012686:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 801268a:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 801268e:	605a      	str	r2, [r3, #4]
 8012690:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012692:	4a14      	ldr	r2, [pc, #80]	; (80126e4 <SystemInit+0xec>)
 8012694:	400a      	ands	r2, r1
 8012696:	62da      	str	r2, [r3, #44]	; 0x2c
 8012698:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801269a:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 801269e:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 80126a2:	62da      	str	r2, [r3, #44]	; 0x2c
 80126a4:	681a      	ldr	r2, [r3, #0]
 80126a6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80126aa:	601a      	str	r2, [r3, #0]
 80126ac:	681a      	ldr	r2, [r3, #0]
 80126ae:	0110      	lsls	r0, r2, #4
 80126b0:	d5fc      	bpl.n	80126ac <SystemInit+0xb4>
 80126b2:	681a      	ldr	r2, [r3, #0]
 80126b4:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80126b8:	601a      	str	r2, [r3, #0]
 80126ba:	681a      	ldr	r2, [r3, #0]
 80126bc:	0191      	lsls	r1, r2, #6
 80126be:	d5fc      	bpl.n	80126ba <SystemInit+0xc2>
 80126c0:	685a      	ldr	r2, [r3, #4]
 80126c2:	f022 0203 	bic.w	r2, r2, #3
 80126c6:	605a      	str	r2, [r3, #4]
 80126c8:	685a      	ldr	r2, [r3, #4]
 80126ca:	f042 0202 	orr.w	r2, r2, #2
 80126ce:	605a      	str	r2, [r3, #4]
 80126d0:	685a      	ldr	r2, [r3, #4]
 80126d2:	0712      	lsls	r2, r2, #28
 80126d4:	d5fc      	bpl.n	80126d0 <SystemInit+0xd8>
 80126d6:	4770      	bx	lr
 80126d8:	40021000 	andmi	r1, r2, r0
 80126dc:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80126e0:	e0ff000c 	rscs	r0, pc, ip
 80126e4:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080126e8 <bkp_data_write>:
 80126e8:	f1a0 030b 	sub.w	r3, r0, #11
 80126ec:	2b1f      	cmp	r3, #31
 80126ee:	d804      	bhi.n	80126fa <bkp_data_write+0x12>
 80126f0:	4b07      	ldr	r3, [pc, #28]	; (8012710 <bkp_data_write+0x28>)
 80126f2:	4403      	add	r3, r0
 80126f4:	009b      	lsls	r3, r3, #2
 80126f6:	8019      	strh	r1, [r3, #0]
 80126f8:	4770      	bx	lr
 80126fa:	1e43      	subs	r3, r0, #1
 80126fc:	2b09      	cmp	r3, #9
 80126fe:	bf9f      	itttt	ls
 8012700:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012704:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012708:	0080      	lslls	r0, r0, #2
 801270a:	8001      	strhls	r1, [r0, #0]
 801270c:	4770      	bx	lr
 801270e:	bf00      	nop
 8012710:	10001b05 	andne	r1, r0, r5, lsl #22

08012714 <bkp_data_read>:
 8012714:	f1a0 030b 	sub.w	r3, r0, #11
 8012718:	2b1f      	cmp	r3, #31
 801271a:	d805      	bhi.n	8012728 <bkp_data_read+0x14>
 801271c:	4b08      	ldr	r3, [pc, #32]	; (8012740 <bkp_data_read+0x2c>)
 801271e:	4403      	add	r3, r0
 8012720:	009b      	lsls	r3, r3, #2
 8012722:	8818      	ldrh	r0, [r3, #0]
 8012724:	b280      	uxth	r0, r0
 8012726:	4770      	bx	lr
 8012728:	1e43      	subs	r3, r0, #1
 801272a:	2b09      	cmp	r3, #9
 801272c:	d806      	bhi.n	801273c <bkp_data_read+0x28>
 801272e:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012732:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012736:	0080      	lsls	r0, r0, #2
 8012738:	8800      	ldrh	r0, [r0, #0]
 801273a:	e7f3      	b.n	8012724 <bkp_data_read+0x10>
 801273c:	2000      	movs	r0, #0
 801273e:	4770      	bx	lr
 8012740:	10001b05 	andne	r1, r0, r5, lsl #22

08012744 <fmc_bank0_unlock>:
 8012744:	4b04      	ldr	r3, [pc, #16]	; (8012758 <fmc_bank0_unlock+0x14>)
 8012746:	691a      	ldr	r2, [r3, #16]
 8012748:	0612      	lsls	r2, r2, #24
 801274a:	bf41      	itttt	mi
 801274c:	4a03      	ldrmi	r2, [pc, #12]	; (801275c <fmc_bank0_unlock+0x18>)
 801274e:	605a      	strmi	r2, [r3, #4]
 8012750:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012754:	605a      	strmi	r2, [r3, #4]
 8012756:	4770      	bx	lr
 8012758:	40022000 	andmi	r2, r2, r0
 801275c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012760 <fmc_bank1_unlock>:
 8012760:	4b04      	ldr	r3, [pc, #16]	; (8012774 <fmc_bank1_unlock+0x14>)
 8012762:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012764:	0612      	lsls	r2, r2, #24
 8012766:	bf41      	itttt	mi
 8012768:	4a03      	ldrmi	r2, [pc, #12]	; (8012778 <fmc_bank1_unlock+0x18>)
 801276a:	645a      	strmi	r2, [r3, #68]	; 0x44
 801276c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012770:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012772:	4770      	bx	lr
 8012774:	40022000 	andmi	r2, r2, r0
 8012778:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801277c <fmc_bank0_lock>:
 801277c:	4a02      	ldr	r2, [pc, #8]	; (8012788 <fmc_bank0_lock+0xc>)
 801277e:	6913      	ldr	r3, [r2, #16]
 8012780:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012784:	6113      	str	r3, [r2, #16]
 8012786:	4770      	bx	lr
 8012788:	40022000 	andmi	r2, r2, r0

0801278c <fmc_bank1_lock>:
 801278c:	4a02      	ldr	r2, [pc, #8]	; (8012798 <fmc_bank1_lock+0xc>)
 801278e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8012790:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012794:	6513      	str	r3, [r2, #80]	; 0x50
 8012796:	4770      	bx	lr
 8012798:	40022000 	andmi	r2, r2, r0

0801279c <fmc_bank0_state_get>:
 801279c:	4b07      	ldr	r3, [pc, #28]	; (80127bc <fmc_bank0_state_get+0x20>)
 801279e:	68da      	ldr	r2, [r3, #12]
 80127a0:	07d1      	lsls	r1, r2, #31
 80127a2:	d407      	bmi.n	80127b4 <fmc_bank0_state_get+0x18>
 80127a4:	68da      	ldr	r2, [r3, #12]
 80127a6:	06d2      	lsls	r2, r2, #27
 80127a8:	d406      	bmi.n	80127b8 <fmc_bank0_state_get+0x1c>
 80127aa:	68d8      	ldr	r0, [r3, #12]
 80127ac:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80127b0:	0040      	lsls	r0, r0, #1
 80127b2:	4770      	bx	lr
 80127b4:	2001      	movs	r0, #1
 80127b6:	4770      	bx	lr
 80127b8:	2003      	movs	r0, #3
 80127ba:	4770      	bx	lr
 80127bc:	40022000 	andmi	r2, r2, r0

080127c0 <fmc_bank1_state_get>:
 80127c0:	4b07      	ldr	r3, [pc, #28]	; (80127e0 <fmc_bank1_state_get+0x20>)
 80127c2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80127c4:	07d1      	lsls	r1, r2, #31
 80127c6:	d407      	bmi.n	80127d8 <fmc_bank1_state_get+0x18>
 80127c8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80127ca:	06d2      	lsls	r2, r2, #27
 80127cc:	d406      	bmi.n	80127dc <fmc_bank1_state_get+0x1c>
 80127ce:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80127d0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80127d4:	0040      	lsls	r0, r0, #1
 80127d6:	4770      	bx	lr
 80127d8:	2001      	movs	r0, #1
 80127da:	4770      	bx	lr
 80127dc:	2003      	movs	r0, #3
 80127de:	4770      	bx	lr
 80127e0:	40022000 	andmi	r2, r2, r0

080127e4 <fwdgt_enable>:
 80127e4:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 80127e8:	4b01      	ldr	r3, [pc, #4]	; (80127f0 <fwdgt_enable+0xc>)
 80127ea:	601a      	str	r2, [r3, #0]
 80127ec:	4770      	bx	lr
 80127ee:	bf00      	nop
 80127f0:	40003000 	andmi	r3, r0, r0

080127f4 <fwdgt_counter_reload>:
 80127f4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80127f8:	4b01      	ldr	r3, [pc, #4]	; (8012800 <fwdgt_counter_reload+0xc>)
 80127fa:	601a      	str	r2, [r3, #0]
 80127fc:	4770      	bx	lr
 80127fe:	bf00      	nop
 8012800:	40003000 	andmi	r3, r0, r0

08012804 <fwdgt_config>:
 8012804:	f245 5355 	movw	r3, #21845	; 0x5555
 8012808:	4a11      	ldr	r2, [pc, #68]	; (8012850 <fwdgt_config+0x4c>)
 801280a:	b510      	push	{r4, lr}
 801280c:	4c11      	ldr	r4, [pc, #68]	; (8012854 <fwdgt_config+0x50>)
 801280e:	6013      	str	r3, [r2, #0]
 8012810:	68d3      	ldr	r3, [r2, #12]
 8012812:	3c01      	subs	r4, #1
 8012814:	f003 0301 	and.w	r3, r3, #1
 8012818:	d013      	beq.n	8012842 <fwdgt_config+0x3e>
 801281a:	2b00      	cmp	r3, #0
 801281c:	d1f8      	bne.n	8012810 <fwdgt_config+0xc>
 801281e:	6051      	str	r1, [r2, #4]
 8012820:	490c      	ldr	r1, [pc, #48]	; (8012854 <fwdgt_config+0x50>)
 8012822:	4a0b      	ldr	r2, [pc, #44]	; (8012850 <fwdgt_config+0x4c>)
 8012824:	68d3      	ldr	r3, [r2, #12]
 8012826:	3901      	subs	r1, #1
 8012828:	f003 0302 	and.w	r3, r3, #2
 801282c:	d00d      	beq.n	801284a <fwdgt_config+0x46>
 801282e:	2b00      	cmp	r3, #0
 8012830:	d1f8      	bne.n	8012824 <fwdgt_config+0x20>
 8012832:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8012836:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801283a:	6090      	str	r0, [r2, #8]
 801283c:	2001      	movs	r0, #1
 801283e:	6013      	str	r3, [r2, #0]
 8012840:	e002      	b.n	8012848 <fwdgt_config+0x44>
 8012842:	2b00      	cmp	r3, #0
 8012844:	d0eb      	beq.n	801281e <fwdgt_config+0x1a>
 8012846:	2000      	movs	r0, #0
 8012848:	bd10      	pop	{r4, pc}
 801284a:	2b00      	cmp	r3, #0
 801284c:	d1fb      	bne.n	8012846 <fwdgt_config+0x42>
 801284e:	e7f0      	b.n	8012832 <fwdgt_config+0x2e>
 8012850:	40003000 	andmi	r3, r0, r0
 8012854:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012858 <gpio_init>:
 8012858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801285c:	f04f 0c0f 	mov.w	ip, #15
 8012860:	06cf      	lsls	r7, r1, #27
 8012862:	f04f 0400 	mov.w	r4, #0
 8012866:	f04f 0701 	mov.w	r7, #1
 801286a:	f001 050f 	and.w	r5, r1, #15
 801286e:	bf48      	it	mi
 8012870:	4315      	orrmi	r5, r2
 8012872:	fa23 f204 	lsr.w	r2, r3, r4
 8012876:	07d6      	lsls	r6, r2, #31
 8012878:	d510      	bpl.n	801289c <gpio_init+0x44>
 801287a:	00a2      	lsls	r2, r4, #2
 801287c:	6806      	ldr	r6, [r0, #0]
 801287e:	fa0c fe02 	lsl.w	lr, ip, r2
 8012882:	ea26 060e 	bic.w	r6, r6, lr
 8012886:	fa05 f202 	lsl.w	r2, r5, r2
 801288a:	2928      	cmp	r1, #40	; 0x28
 801288c:	ea42 0206 	orr.w	r2, r2, r6
 8012890:	d128      	bne.n	80128e4 <gpio_init+0x8c>
 8012892:	fa07 f604 	lsl.w	r6, r7, r4
 8012896:	401e      	ands	r6, r3
 8012898:	6146      	str	r6, [r0, #20]
 801289a:	6002      	str	r2, [r0, #0]
 801289c:	3401      	adds	r4, #1
 801289e:	2c08      	cmp	r4, #8
 80128a0:	d1e7      	bne.n	8012872 <gpio_init+0x1a>
 80128a2:	2600      	movs	r6, #0
 80128a4:	f04f 0c0f 	mov.w	ip, #15
 80128a8:	2701      	movs	r7, #1
 80128aa:	f106 0208 	add.w	r2, r6, #8
 80128ae:	fa23 f402 	lsr.w	r4, r3, r2
 80128b2:	07e4      	lsls	r4, r4, #31
 80128b4:	d511      	bpl.n	80128da <gpio_init+0x82>
 80128b6:	00b4      	lsls	r4, r6, #2
 80128b8:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80128bc:	fa0c f804 	lsl.w	r8, ip, r4
 80128c0:	ea2e 0e08 	bic.w	lr, lr, r8
 80128c4:	fa05 f404 	lsl.w	r4, r5, r4
 80128c8:	2928      	cmp	r1, #40	; 0x28
 80128ca:	ea44 040e 	orr.w	r4, r4, lr
 80128ce:	d110      	bne.n	80128f2 <gpio_init+0x9a>
 80128d0:	fa07 f202 	lsl.w	r2, r7, r2
 80128d4:	401a      	ands	r2, r3
 80128d6:	6142      	str	r2, [r0, #20]
 80128d8:	6044      	str	r4, [r0, #4]
 80128da:	3601      	adds	r6, #1
 80128dc:	2e08      	cmp	r6, #8
 80128de:	d1e4      	bne.n	80128aa <gpio_init+0x52>
 80128e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80128e4:	2948      	cmp	r1, #72	; 0x48
 80128e6:	bf02      	ittt	eq
 80128e8:	fa07 f604 	lsleq.w	r6, r7, r4
 80128ec:	401e      	andeq	r6, r3
 80128ee:	6106      	streq	r6, [r0, #16]
 80128f0:	e7d3      	b.n	801289a <gpio_init+0x42>
 80128f2:	2948      	cmp	r1, #72	; 0x48
 80128f4:	bf02      	ittt	eq
 80128f6:	fa07 f202 	lsleq.w	r2, r7, r2
 80128fa:	401a      	andeq	r2, r3
 80128fc:	6102      	streq	r2, [r0, #16]
 80128fe:	e7eb      	b.n	80128d8 <gpio_init+0x80>

08012900 <gpio_pin_remap_config>:
 8012900:	2800      	cmp	r0, #0
 8012902:	4a16      	ldr	r2, [pc, #88]	; (801295c <gpio_pin_remap_config+0x5c>)
 8012904:	b530      	push	{r4, r5, lr}
 8012906:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 801290a:	bfb4      	ite	lt
 801290c:	69d3      	ldrlt	r3, [r2, #28]
 801290e:	6853      	ldrge	r3, [r2, #4]
 8012910:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8012914:	b284      	uxth	r4, r0
 8012916:	d110      	bne.n	801293a <gpio_pin_remap_config+0x3a>
 8012918:	6855      	ldr	r5, [r2, #4]
 801291a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 801291e:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8012922:	6055      	str	r5, [r2, #4]
 8012924:	b119      	cbz	r1, 801292e <gpio_pin_remap_config+0x2e>
 8012926:	0d42      	lsrs	r2, r0, #21
 8012928:	0112      	lsls	r2, r2, #4
 801292a:	4094      	lsls	r4, r2
 801292c:	4323      	orrs	r3, r4
 801292e:	4a0b      	ldr	r2, [pc, #44]	; (801295c <gpio_pin_remap_config+0x5c>)
 8012930:	2800      	cmp	r0, #0
 8012932:	bfb4      	ite	lt
 8012934:	61d3      	strlt	r3, [r2, #28]
 8012936:	6053      	strge	r3, [r2, #4]
 8012938:	bd30      	pop	{r4, r5, pc}
 801293a:	02c2      	lsls	r2, r0, #11
 801293c:	bf4d      	iteet	mi
 801293e:	2203      	movmi	r2, #3
 8012940:	0d42      	lsrpl	r2, r0, #21
 8012942:	0112      	lslpl	r2, r2, #4
 8012944:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8012948:	bf4c      	ite	mi
 801294a:	40aa      	lslmi	r2, r5
 801294c:	fa04 f202 	lslpl.w	r2, r4, r2
 8012950:	ea23 0302 	bic.w	r3, r3, r2
 8012954:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8012958:	e7e4      	b.n	8012924 <gpio_pin_remap_config+0x24>
 801295a:	bf00      	nop
 801295c:	40010000 	andmi	r0, r1, r0

08012960 <gpio_ethernet_phy_select>:
 8012960:	4b04      	ldr	r3, [pc, #16]	; (8012974 <gpio_ethernet_phy_select+0x14>)
 8012962:	685a      	ldr	r2, [r3, #4]
 8012964:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8012968:	605a      	str	r2, [r3, #4]
 801296a:	685a      	ldr	r2, [r3, #4]
 801296c:	4302      	orrs	r2, r0
 801296e:	605a      	str	r2, [r3, #4]
 8012970:	4770      	bx	lr
 8012972:	bf00      	nop
 8012974:	40010000 	andmi	r0, r1, r0

08012978 <pmu_backup_write_enable>:
 8012978:	4a02      	ldr	r2, [pc, #8]	; (8012984 <pmu_backup_write_enable+0xc>)
 801297a:	6813      	ldr	r3, [r2, #0]
 801297c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012980:	6013      	str	r3, [r2, #0]
 8012982:	4770      	bx	lr
 8012984:	40007000 	andmi	r7, r0, r0

08012988 <rcu_periph_clock_enable>:
 8012988:	2201      	movs	r2, #1
 801298a:	0983      	lsrs	r3, r0, #6
 801298c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012990:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012994:	6819      	ldr	r1, [r3, #0]
 8012996:	f000 001f 	and.w	r0, r0, #31
 801299a:	4082      	lsls	r2, r0
 801299c:	430a      	orrs	r2, r1
 801299e:	601a      	str	r2, [r3, #0]
 80129a0:	4770      	bx	lr

080129a2 <rcu_periph_clock_disable>:
 80129a2:	2101      	movs	r1, #1
 80129a4:	0983      	lsrs	r3, r0, #6
 80129a6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80129aa:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80129ae:	681a      	ldr	r2, [r3, #0]
 80129b0:	f000 001f 	and.w	r0, r0, #31
 80129b4:	4081      	lsls	r1, r0
 80129b6:	ea22 0201 	bic.w	r2, r2, r1
 80129ba:	601a      	str	r2, [r3, #0]
 80129bc:	4770      	bx	lr

080129be <rcu_periph_reset_enable>:
 80129be:	f7ff bfe3 	b.w	8012988 <rcu_periph_clock_enable>

080129c2 <rcu_periph_reset_disable>:
 80129c2:	f7ff bfee 	b.w	80129a2 <rcu_periph_clock_disable>
	...

080129c8 <rcu_ckout0_config>:
 80129c8:	4a03      	ldr	r2, [pc, #12]	; (80129d8 <rcu_ckout0_config+0x10>)
 80129ca:	6853      	ldr	r3, [r2, #4]
 80129cc:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80129d0:	4303      	orrs	r3, r0
 80129d2:	6053      	str	r3, [r2, #4]
 80129d4:	4770      	bx	lr
 80129d6:	bf00      	nop
 80129d8:	40021000 	andmi	r1, r2, r0

080129dc <rcu_pll2_config>:
 80129dc:	4b04      	ldr	r3, [pc, #16]	; (80129f0 <rcu_pll2_config+0x14>)
 80129de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80129e0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80129e4:	62da      	str	r2, [r3, #44]	; 0x2c
 80129e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80129e8:	4302      	orrs	r2, r0
 80129ea:	62da      	str	r2, [r3, #44]	; 0x2c
 80129ec:	4770      	bx	lr
 80129ee:	bf00      	nop
 80129f0:	40021000 	andmi	r1, r2, r0

080129f4 <rcu_adc_clock_config>:
 80129f4:	490c      	ldr	r1, [pc, #48]	; (8012a28 <rcu_adc_clock_config+0x34>)
 80129f6:	2805      	cmp	r0, #5
 80129f8:	684b      	ldr	r3, [r1, #4]
 80129fa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80129fe:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8012a02:	d006      	beq.n	8012a12 <rcu_adc_clock_config+0x1e>
 8012a04:	d803      	bhi.n	8012a0e <rcu_adc_clock_config+0x1a>
 8012a06:	2804      	cmp	r0, #4
 8012a08:	d10a      	bne.n	8012a20 <rcu_adc_clock_config+0x2c>
 8012a0a:	604b      	str	r3, [r1, #4]
 8012a0c:	4770      	bx	lr
 8012a0e:	2807      	cmp	r0, #7
 8012a10:	d1fb      	bne.n	8012a0a <rcu_adc_clock_config+0x16>
 8012a12:	4a06      	ldr	r2, [pc, #24]	; (8012a2c <rcu_adc_clock_config+0x38>)
 8012a14:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8012a18:	4313      	orrs	r3, r2
 8012a1a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8012a1e:	e7f4      	b.n	8012a0a <rcu_adc_clock_config+0x16>
 8012a20:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8012a24:	e7f1      	b.n	8012a0a <rcu_adc_clock_config+0x16>
 8012a26:	bf00      	nop
 8012a28:	40021000 	andmi	r1, r2, r0
 8012a2c:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08012a30 <rcu_i2s2_clock_config>:
 8012a30:	4a03      	ldr	r2, [pc, #12]	; (8012a40 <rcu_i2s2_clock_config+0x10>)
 8012a32:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8012a34:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8012a38:	4303      	orrs	r3, r0
 8012a3a:	62d3      	str	r3, [r2, #44]	; 0x2c
 8012a3c:	4770      	bx	lr
 8012a3e:	bf00      	nop
 8012a40:	40021000 	andmi	r1, r2, r0

08012a44 <rcu_flag_get>:
 8012a44:	0983      	lsrs	r3, r0, #6
 8012a46:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012a4a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012a4e:	681a      	ldr	r2, [r3, #0]
 8012a50:	2301      	movs	r3, #1
 8012a52:	f000 001f 	and.w	r0, r0, #31
 8012a56:	4083      	lsls	r3, r0
 8012a58:	4213      	tst	r3, r2
 8012a5a:	bf14      	ite	ne
 8012a5c:	2001      	movne	r0, #1
 8012a5e:	2000      	moveq	r0, #0
 8012a60:	4770      	bx	lr
	...

08012a64 <rcu_osci_stab_wait>:
 8012a64:	281a      	cmp	r0, #26
 8012a66:	b508      	push	{r3, lr}
 8012a68:	d051      	beq.n	8012b0e <rcu_osci_stab_wait+0xaa>
 8012a6a:	d806      	bhi.n	8012a7a <rcu_osci_stab_wait+0x16>
 8012a6c:	2810      	cmp	r0, #16
 8012a6e:	d015      	beq.n	8012a9c <rcu_osci_stab_wait+0x38>
 8012a70:	2818      	cmp	r0, #24
 8012a72:	d043      	beq.n	8012afc <rcu_osci_stab_wait+0x98>
 8012a74:	b368      	cbz	r0, 8012ad2 <rcu_osci_stab_wait+0x6e>
 8012a76:	2000      	movs	r0, #0
 8012a78:	bd08      	pop	{r3, pc}
 8012a7a:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8012a7e:	d01c      	beq.n	8012aba <rcu_osci_stab_wait+0x56>
 8012a80:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8012a84:	d02f      	beq.n	8012ae6 <rcu_osci_stab_wait+0x82>
 8012a86:	281c      	cmp	r0, #28
 8012a88:	d1f5      	bne.n	8012a76 <rcu_osci_stab_wait+0x12>
 8012a8a:	4925      	ldr	r1, [pc, #148]	; (8012b20 <rcu_osci_stab_wait+0xbc>)
 8012a8c:	201d      	movs	r0, #29
 8012a8e:	f7ff ffd9 	bl	8012a44 <rcu_flag_get>
 8012a92:	b908      	cbnz	r0, 8012a98 <rcu_osci_stab_wait+0x34>
 8012a94:	3901      	subs	r1, #1
 8012a96:	d1f9      	bne.n	8012a8c <rcu_osci_stab_wait+0x28>
 8012a98:	201d      	movs	r0, #29
 8012a9a:	e008      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012a9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012aa0:	2011      	movs	r0, #17
 8012aa2:	f7ff ffcf 	bl	8012a44 <rcu_flag_get>
 8012aa6:	b908      	cbnz	r0, 8012aac <rcu_osci_stab_wait+0x48>
 8012aa8:	3901      	subs	r1, #1
 8012aaa:	d1f9      	bne.n	8012aa0 <rcu_osci_stab_wait+0x3c>
 8012aac:	2011      	movs	r0, #17
 8012aae:	f7ff ffc9 	bl	8012a44 <rcu_flag_get>
 8012ab2:	3800      	subs	r0, #0
 8012ab4:	bf18      	it	ne
 8012ab6:	2001      	movne	r0, #1
 8012ab8:	e7de      	b.n	8012a78 <rcu_osci_stab_wait+0x14>
 8012aba:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8012abe:	f640 0001 	movw	r0, #2049	; 0x801
 8012ac2:	f7ff ffbf 	bl	8012a44 <rcu_flag_get>
 8012ac6:	b908      	cbnz	r0, 8012acc <rcu_osci_stab_wait+0x68>
 8012ac8:	3901      	subs	r1, #1
 8012aca:	d1f8      	bne.n	8012abe <rcu_osci_stab_wait+0x5a>
 8012acc:	f640 0001 	movw	r0, #2049	; 0x801
 8012ad0:	e7ed      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012ad2:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8012ad6:	2001      	movs	r0, #1
 8012ad8:	f7ff ffb4 	bl	8012a44 <rcu_flag_get>
 8012adc:	b908      	cbnz	r0, 8012ae2 <rcu_osci_stab_wait+0x7e>
 8012ade:	3901      	subs	r1, #1
 8012ae0:	d1f9      	bne.n	8012ad6 <rcu_osci_stab_wait+0x72>
 8012ae2:	2001      	movs	r0, #1
 8012ae4:	e7e3      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012ae6:	490e      	ldr	r1, [pc, #56]	; (8012b20 <rcu_osci_stab_wait+0xbc>)
 8012ae8:	f640 1001 	movw	r0, #2305	; 0x901
 8012aec:	f7ff ffaa 	bl	8012a44 <rcu_flag_get>
 8012af0:	b908      	cbnz	r0, 8012af6 <rcu_osci_stab_wait+0x92>
 8012af2:	3901      	subs	r1, #1
 8012af4:	d1f8      	bne.n	8012ae8 <rcu_osci_stab_wait+0x84>
 8012af6:	f640 1001 	movw	r0, #2305	; 0x901
 8012afa:	e7d8      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012afc:	4908      	ldr	r1, [pc, #32]	; (8012b20 <rcu_osci_stab_wait+0xbc>)
 8012afe:	2019      	movs	r0, #25
 8012b00:	f7ff ffa0 	bl	8012a44 <rcu_flag_get>
 8012b04:	b908      	cbnz	r0, 8012b0a <rcu_osci_stab_wait+0xa6>
 8012b06:	3901      	subs	r1, #1
 8012b08:	d1f9      	bne.n	8012afe <rcu_osci_stab_wait+0x9a>
 8012b0a:	2019      	movs	r0, #25
 8012b0c:	e7cf      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012b0e:	4904      	ldr	r1, [pc, #16]	; (8012b20 <rcu_osci_stab_wait+0xbc>)
 8012b10:	201b      	movs	r0, #27
 8012b12:	f7ff ff97 	bl	8012a44 <rcu_flag_get>
 8012b16:	b908      	cbnz	r0, 8012b1c <rcu_osci_stab_wait+0xb8>
 8012b18:	3901      	subs	r1, #1
 8012b1a:	d1f9      	bne.n	8012b10 <rcu_osci_stab_wait+0xac>
 8012b1c:	201b      	movs	r0, #27
 8012b1e:	e7c6      	b.n	8012aae <rcu_osci_stab_wait+0x4a>
 8012b20:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012b24 <rcu_osci_on>:
 8012b24:	f7ff bf30 	b.w	8012988 <rcu_periph_clock_enable>

08012b28 <rcu_clock_freq_get>:
 8012b28:	4b3e      	ldr	r3, [pc, #248]	; (8012c24 <rcu_clock_freq_get+0xfc>)
 8012b2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	461f      	mov	r7, r3
 8012b30:	b089      	sub	sp, #36	; 0x24
 8012b32:	ad04      	add	r5, sp, #16
 8012b34:	f103 0610 	add.w	r6, r3, #16
 8012b38:	462a      	mov	r2, r5
 8012b3a:	6818      	ldr	r0, [r3, #0]
 8012b3c:	6859      	ldr	r1, [r3, #4]
 8012b3e:	3308      	adds	r3, #8
 8012b40:	c203      	stmia	r2!, {r0, r1}
 8012b42:	42b3      	cmp	r3, r6
 8012b44:	4615      	mov	r5, r2
 8012b46:	d1f7      	bne.n	8012b38 <rcu_clock_freq_get+0x10>
 8012b48:	466b      	mov	r3, sp
 8012b4a:	6938      	ldr	r0, [r7, #16]
 8012b4c:	6871      	ldr	r1, [r6, #4]
 8012b4e:	4a36      	ldr	r2, [pc, #216]	; (8012c28 <rcu_clock_freq_get+0x100>)
 8012b50:	c303      	stmia	r3!, {r0, r1}
 8012b52:	c303      	stmia	r3!, {r0, r1}
 8012b54:	6853      	ldr	r3, [r2, #4]
 8012b56:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012b5a:	2b01      	cmp	r3, #1
 8012b5c:	d053      	beq.n	8012c06 <rcu_clock_freq_get+0xde>
 8012b5e:	2b02      	cmp	r3, #2
 8012b60:	d153      	bne.n	8012c0a <rcu_clock_freq_get+0xe2>
 8012b62:	6853      	ldr	r3, [r2, #4]
 8012b64:	03dd      	lsls	r5, r3, #15
 8012b66:	d523      	bpl.n	8012bb0 <rcu_clock_freq_get+0x88>
 8012b68:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8012b6a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8012b6e:	4b2f      	ldr	r3, [pc, #188]	; (8012c2c <rcu_clock_freq_get+0x104>)
 8012b70:	d00e      	beq.n	8012b90 <rcu_clock_freq_get+0x68>
 8012b72:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8012b74:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8012b76:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8012b7a:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8012b7e:	3101      	adds	r1, #1
 8012b80:	280f      	cmp	r0, #15
 8012b82:	f100 0502 	add.w	r5, r0, #2
 8012b86:	fbb3 f3f1 	udiv	r3, r3, r1
 8012b8a:	bf08      	it	eq
 8012b8c:	2514      	moveq	r5, #20
 8012b8e:	436b      	muls	r3, r5
 8012b90:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8012b92:	f001 010f 	and.w	r1, r1, #15
 8012b96:	3101      	adds	r1, #1
 8012b98:	fbb3 f3f1 	udiv	r3, r3, r1
 8012b9c:	6851      	ldr	r1, [r2, #4]
 8012b9e:	6850      	ldr	r0, [r2, #4]
 8012ba0:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8012ba4:	0080      	lsls	r0, r0, #2
 8012ba6:	d505      	bpl.n	8012bb4 <rcu_clock_freq_get+0x8c>
 8012ba8:	f041 0110 	orr.w	r1, r1, #16
 8012bac:	1c48      	adds	r0, r1, #1
 8012bae:	e007      	b.n	8012bc0 <rcu_clock_freq_get+0x98>
 8012bb0:	4b1f      	ldr	r3, [pc, #124]	; (8012c30 <rcu_clock_freq_get+0x108>)
 8012bb2:	e7f3      	b.n	8012b9c <rcu_clock_freq_get+0x74>
 8012bb4:	290f      	cmp	r1, #15
 8012bb6:	d0f9      	beq.n	8012bac <rcu_clock_freq_get+0x84>
 8012bb8:	290d      	cmp	r1, #13
 8012bba:	f101 0002 	add.w	r0, r1, #2
 8012bbe:	d01d      	beq.n	8012bfc <rcu_clock_freq_get+0xd4>
 8012bc0:	4358      	muls	r0, r3
 8012bc2:	6853      	ldr	r3, [r2, #4]
 8012bc4:	6851      	ldr	r1, [r2, #4]
 8012bc6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8012bca:	6852      	ldr	r2, [r2, #4]
 8012bcc:	3320      	adds	r3, #32
 8012bce:	446b      	add	r3, sp
 8012bd0:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8012bd4:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8012bd8:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8012bdc:	3120      	adds	r1, #32
 8012bde:	3220      	adds	r2, #32
 8012be0:	4469      	add	r1, sp
 8012be2:	446a      	add	r2, sp
 8012be4:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8012be8:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8012bec:	fa20 f303 	lsr.w	r3, r0, r3
 8012bf0:	2c03      	cmp	r4, #3
 8012bf2:	d815      	bhi.n	8012c20 <rcu_clock_freq_get+0xf8>
 8012bf4:	e8df f004 	tbb	[pc, r4]
 8012bf8:	110e0b0c 	tstne	lr, ip, lsl #22
 8012bfc:	2006      	movs	r0, #6
 8012bfe:	0859      	lsrs	r1, r3, #1
 8012c00:	fb00 1003 	mla	r0, r0, r3, r1
 8012c04:	e7dd      	b.n	8012bc2 <rcu_clock_freq_get+0x9a>
 8012c06:	4809      	ldr	r0, [pc, #36]	; (8012c2c <rcu_clock_freq_get+0x104>)
 8012c08:	e7db      	b.n	8012bc2 <rcu_clock_freq_get+0x9a>
 8012c0a:	480a      	ldr	r0, [pc, #40]	; (8012c34 <rcu_clock_freq_get+0x10c>)
 8012c0c:	e7d9      	b.n	8012bc2 <rcu_clock_freq_get+0x9a>
 8012c0e:	4618      	mov	r0, r3
 8012c10:	b009      	add	sp, #36	; 0x24
 8012c12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c14:	fa23 f001 	lsr.w	r0, r3, r1
 8012c18:	e7fa      	b.n	8012c10 <rcu_clock_freq_get+0xe8>
 8012c1a:	fa23 f002 	lsr.w	r0, r3, r2
 8012c1e:	e7f7      	b.n	8012c10 <rcu_clock_freq_get+0xe8>
 8012c20:	2000      	movs	r0, #0
 8012c22:	e7f5      	b.n	8012c10 <rcu_clock_freq_get+0xe8>
 8012c24:	08014474 	stmdaeq	r1, {r2, r4, r5, r6, sl, lr}
 8012c28:	40021000 	andmi	r1, r2, r0
 8012c2c:	017d7840 	cmneq	sp, r0, asr #16
 8012c30:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8012c34:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08012c38 <timer_deinit>:
 8012c38:	b508      	push	{r3, lr}
 8012c3a:	4b2d      	ldr	r3, [pc, #180]	; (8012cf0 <timer_deinit+0xb8>)
 8012c3c:	4298      	cmp	r0, r3
 8012c3e:	d048      	beq.n	8012cd2 <timer_deinit+0x9a>
 8012c40:	d816      	bhi.n	8012c70 <timer_deinit+0x38>
 8012c42:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012c46:	4298      	cmp	r0, r3
 8012c48:	d03c      	beq.n	8012cc4 <timer_deinit+0x8c>
 8012c4a:	d807      	bhi.n	8012c5c <timer_deinit+0x24>
 8012c4c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8012c50:	d02a      	beq.n	8012ca8 <timer_deinit+0x70>
 8012c52:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8012c56:	4298      	cmp	r0, r3
 8012c58:	d02d      	beq.n	8012cb6 <timer_deinit+0x7e>
 8012c5a:	bd08      	pop	{r3, pc}
 8012c5c:	4b25      	ldr	r3, [pc, #148]	; (8012cf4 <timer_deinit+0xbc>)
 8012c5e:	4298      	cmp	r0, r3
 8012c60:	d1fb      	bne.n	8012c5a <timer_deinit+0x22>
 8012c62:	f240 4003 	movw	r0, #1027	; 0x403
 8012c66:	f7ff feaa 	bl	80129be <rcu_periph_reset_enable>
 8012c6a:	f240 4003 	movw	r0, #1027	; 0x403
 8012c6e:	e017      	b.n	8012ca0 <timer_deinit+0x68>
 8012c70:	4b21      	ldr	r3, [pc, #132]	; (8012cf8 <timer_deinit+0xc0>)
 8012c72:	4298      	cmp	r0, r3
 8012c74:	d00e      	beq.n	8012c94 <timer_deinit+0x5c>
 8012c76:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8012c7a:	4298      	cmp	r0, r3
 8012c7c:	d030      	beq.n	8012ce0 <timer_deinit+0xa8>
 8012c7e:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8012c82:	4298      	cmp	r0, r3
 8012c84:	d1e9      	bne.n	8012c5a <timer_deinit+0x22>
 8012c86:	f240 4005 	movw	r0, #1029	; 0x405
 8012c8a:	f7ff fe98 	bl	80129be <rcu_periph_reset_enable>
 8012c8e:	f240 4005 	movw	r0, #1029	; 0x405
 8012c92:	e005      	b.n	8012ca0 <timer_deinit+0x68>
 8012c94:	f240 300b 	movw	r0, #779	; 0x30b
 8012c98:	f7ff fe91 	bl	80129be <rcu_periph_reset_enable>
 8012c9c:	f240 300b 	movw	r0, #779	; 0x30b
 8012ca0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012ca4:	f7ff be8d 	b.w	80129c2 <rcu_periph_reset_disable>
 8012ca8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8012cac:	f7ff fe87 	bl	80129be <rcu_periph_reset_enable>
 8012cb0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8012cb4:	e7f4      	b.n	8012ca0 <timer_deinit+0x68>
 8012cb6:	f240 4001 	movw	r0, #1025	; 0x401
 8012cba:	f7ff fe80 	bl	80129be <rcu_periph_reset_enable>
 8012cbe:	f240 4001 	movw	r0, #1025	; 0x401
 8012cc2:	e7ed      	b.n	8012ca0 <timer_deinit+0x68>
 8012cc4:	f240 4002 	movw	r0, #1026	; 0x402
 8012cc8:	f7ff fe79 	bl	80129be <rcu_periph_reset_enable>
 8012ccc:	f240 4002 	movw	r0, #1026	; 0x402
 8012cd0:	e7e6      	b.n	8012ca0 <timer_deinit+0x68>
 8012cd2:	f240 4004 	movw	r0, #1028	; 0x404
 8012cd6:	f7ff fe72 	bl	80129be <rcu_periph_reset_enable>
 8012cda:	f240 4004 	movw	r0, #1028	; 0x404
 8012cde:	e7df      	b.n	8012ca0 <timer_deinit+0x68>
 8012ce0:	f240 300d 	movw	r0, #781	; 0x30d
 8012ce4:	f7ff fe6b 	bl	80129be <rcu_periph_reset_enable>
 8012ce8:	f240 300d 	movw	r0, #781	; 0x30d
 8012cec:	e7d8      	b.n	8012ca0 <timer_deinit+0x68>
 8012cee:	bf00      	nop
 8012cf0:	40001000 	andmi	r1, r0, r0
 8012cf4:	40000c00 	andmi	r0, r0, r0, lsl #24
 8012cf8:	40012c00 	andmi	r2, r1, r0, lsl #24

08012cfc <timer_init>:
 8012cfc:	880b      	ldrh	r3, [r1, #0]
 8012cfe:	6283      	str	r3, [r0, #40]	; 0x28
 8012d00:	4b26      	ldr	r3, [pc, #152]	; (8012d9c <timer_init+0xa0>)
 8012d02:	4298      	cmp	r0, r3
 8012d04:	d018      	beq.n	8012d38 <timer_init+0x3c>
 8012d06:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8012d0a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8012d0e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8012d12:	d011      	beq.n	8012d38 <timer_init+0x3c>
 8012d14:	4a22      	ldr	r2, [pc, #136]	; (8012da0 <timer_init+0xa4>)
 8012d16:	4290      	cmp	r0, r2
 8012d18:	d00e      	beq.n	8012d38 <timer_init+0x3c>
 8012d1a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8012d1e:	4290      	cmp	r0, r2
 8012d20:	d00a      	beq.n	8012d38 <timer_init+0x3c>
 8012d22:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8012d26:	4293      	cmp	r3, r2
 8012d28:	d006      	beq.n	8012d38 <timer_init+0x3c>
 8012d2a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8012d2e:	4293      	cmp	r3, r2
 8012d30:	d002      	beq.n	8012d38 <timer_init+0x3c>
 8012d32:	4b1c      	ldr	r3, [pc, #112]	; (8012da4 <timer_init+0xa8>)
 8012d34:	4298      	cmp	r0, r3
 8012d36:	d10f      	bne.n	8012d58 <timer_init+0x5c>
 8012d38:	6803      	ldr	r3, [r0, #0]
 8012d3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8012d3e:	6003      	str	r3, [r0, #0]
 8012d40:	884b      	ldrh	r3, [r1, #2]
 8012d42:	6802      	ldr	r2, [r0, #0]
 8012d44:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012d48:	4313      	orrs	r3, r2
 8012d4a:	6003      	str	r3, [r0, #0]
 8012d4c:	888b      	ldrh	r3, [r1, #4]
 8012d4e:	6802      	ldr	r2, [r0, #0]
 8012d50:	f003 0310 	and.w	r3, r3, #16
 8012d54:	4313      	orrs	r3, r2
 8012d56:	6003      	str	r3, [r0, #0]
 8012d58:	688b      	ldr	r3, [r1, #8]
 8012d5a:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012d5c:	4b12      	ldr	r3, [pc, #72]	; (8012da8 <timer_init+0xac>)
 8012d5e:	4298      	cmp	r0, r3
 8012d60:	d003      	beq.n	8012d6a <timer_init+0x6e>
 8012d62:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012d66:	4298      	cmp	r0, r3
 8012d68:	d104      	bne.n	8012d74 <timer_init+0x78>
 8012d6a:	6943      	ldr	r3, [r0, #20]
 8012d6c:	f043 0301 	orr.w	r3, r3, #1
 8012d70:	6143      	str	r3, [r0, #20]
 8012d72:	4770      	bx	lr
 8012d74:	6803      	ldr	r3, [r0, #0]
 8012d76:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8012d7a:	6003      	str	r3, [r0, #0]
 8012d7c:	898b      	ldrh	r3, [r1, #12]
 8012d7e:	6802      	ldr	r2, [r0, #0]
 8012d80:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8012d84:	4313      	orrs	r3, r2
 8012d86:	6003      	str	r3, [r0, #0]
 8012d88:	4b04      	ldr	r3, [pc, #16]	; (8012d9c <timer_init+0xa0>)
 8012d8a:	4298      	cmp	r0, r3
 8012d8c:	d002      	beq.n	8012d94 <timer_init+0x98>
 8012d8e:	4b04      	ldr	r3, [pc, #16]	; (8012da0 <timer_init+0xa4>)
 8012d90:	4298      	cmp	r0, r3
 8012d92:	d1ea      	bne.n	8012d6a <timer_init+0x6e>
 8012d94:	7b8b      	ldrb	r3, [r1, #14]
 8012d96:	6303      	str	r3, [r0, #48]	; 0x30
 8012d98:	e7e7      	b.n	8012d6a <timer_init+0x6e>
 8012d9a:	bf00      	nop
 8012d9c:	40012c00 	andmi	r2, r1, r0, lsl #24
 8012da0:	40013400 	andmi	r3, r1, r0, lsl #8
 8012da4:	40002000 	andmi	r2, r0, r0
 8012da8:	40001000 	andmi	r1, r0, r0

08012dac <timer_enable>:
 8012dac:	6803      	ldr	r3, [r0, #0]
 8012dae:	f043 0301 	orr.w	r3, r3, #1
 8012db2:	6003      	str	r3, [r0, #0]
 8012db4:	4770      	bx	lr
	...

08012db8 <usart_deinit>:
 8012db8:	b508      	push	{r3, lr}
 8012dba:	4b1d      	ldr	r3, [pc, #116]	; (8012e30 <usart_deinit+0x78>)
 8012dbc:	4298      	cmp	r0, r3
 8012dbe:	d028      	beq.n	8012e12 <usart_deinit+0x5a>
 8012dc0:	d808      	bhi.n	8012dd4 <usart_deinit+0x1c>
 8012dc2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012dc6:	4298      	cmp	r0, r3
 8012dc8:	d015      	beq.n	8012df6 <usart_deinit+0x3e>
 8012dca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012dce:	4298      	cmp	r0, r3
 8012dd0:	d018      	beq.n	8012e04 <usart_deinit+0x4c>
 8012dd2:	bd08      	pop	{r3, pc}
 8012dd4:	4b17      	ldr	r3, [pc, #92]	; (8012e34 <usart_deinit+0x7c>)
 8012dd6:	4298      	cmp	r0, r3
 8012dd8:	d022      	beq.n	8012e20 <usart_deinit+0x68>
 8012dda:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8012dde:	4298      	cmp	r0, r3
 8012de0:	d1f7      	bne.n	8012dd2 <usart_deinit+0x1a>
 8012de2:	f240 300e 	movw	r0, #782	; 0x30e
 8012de6:	f7ff fdea 	bl	80129be <rcu_periph_reset_enable>
 8012dea:	f240 300e 	movw	r0, #782	; 0x30e
 8012dee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012df2:	f7ff bde6 	b.w	80129c2 <rcu_periph_reset_disable>
 8012df6:	f240 4011 	movw	r0, #1041	; 0x411
 8012dfa:	f7ff fde0 	bl	80129be <rcu_periph_reset_enable>
 8012dfe:	f240 4011 	movw	r0, #1041	; 0x411
 8012e02:	e7f4      	b.n	8012dee <usart_deinit+0x36>
 8012e04:	f240 4012 	movw	r0, #1042	; 0x412
 8012e08:	f7ff fdd9 	bl	80129be <rcu_periph_reset_enable>
 8012e0c:	f240 4012 	movw	r0, #1042	; 0x412
 8012e10:	e7ed      	b.n	8012dee <usart_deinit+0x36>
 8012e12:	f240 4013 	movw	r0, #1043	; 0x413
 8012e16:	f7ff fdd2 	bl	80129be <rcu_periph_reset_enable>
 8012e1a:	f240 4013 	movw	r0, #1043	; 0x413
 8012e1e:	e7e6      	b.n	8012dee <usart_deinit+0x36>
 8012e20:	f240 4014 	movw	r0, #1044	; 0x414
 8012e24:	f7ff fdcb 	bl	80129be <rcu_periph_reset_enable>
 8012e28:	f240 4014 	movw	r0, #1044	; 0x414
 8012e2c:	e7df      	b.n	8012dee <usart_deinit+0x36>
 8012e2e:	bf00      	nop
 8012e30:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012e34:	40005000 	andmi	r5, r0, r0

08012e38 <usart_baudrate_set>:
 8012e38:	b538      	push	{r3, r4, r5, lr}
 8012e3a:	4b11      	ldr	r3, [pc, #68]	; (8012e80 <usart_baudrate_set+0x48>)
 8012e3c:	4604      	mov	r4, r0
 8012e3e:	4298      	cmp	r0, r3
 8012e40:	460d      	mov	r5, r1
 8012e42:	d01b      	beq.n	8012e7c <usart_baudrate_set+0x44>
 8012e44:	d809      	bhi.n	8012e5a <usart_baudrate_set+0x22>
 8012e46:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012e4a:	4298      	cmp	r0, r3
 8012e4c:	d016      	beq.n	8012e7c <usart_baudrate_set+0x44>
 8012e4e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012e52:	4298      	cmp	r0, r3
 8012e54:	d012      	beq.n	8012e7c <usart_baudrate_set+0x44>
 8012e56:	2000      	movs	r0, #0
 8012e58:	e009      	b.n	8012e6e <usart_baudrate_set+0x36>
 8012e5a:	4b0a      	ldr	r3, [pc, #40]	; (8012e84 <usart_baudrate_set+0x4c>)
 8012e5c:	4298      	cmp	r0, r3
 8012e5e:	d00d      	beq.n	8012e7c <usart_baudrate_set+0x44>
 8012e60:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8012e64:	4298      	cmp	r0, r3
 8012e66:	d1f6      	bne.n	8012e56 <usart_baudrate_set+0x1e>
 8012e68:	2003      	movs	r0, #3
 8012e6a:	f7ff fe5d 	bl	8012b28 <rcu_clock_freq_get>
 8012e6e:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8012e72:	fbb1 f1f5 	udiv	r1, r1, r5
 8012e76:	b289      	uxth	r1, r1
 8012e78:	60a1      	str	r1, [r4, #8]
 8012e7a:	bd38      	pop	{r3, r4, r5, pc}
 8012e7c:	2002      	movs	r0, #2
 8012e7e:	e7f4      	b.n	8012e6a <usart_baudrate_set+0x32>
 8012e80:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012e84:	40005000 	andmi	r5, r0, r0

08012e88 <usart_parity_config>:
 8012e88:	68c3      	ldr	r3, [r0, #12]
 8012e8a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8012e8e:	60c3      	str	r3, [r0, #12]
 8012e90:	68c3      	ldr	r3, [r0, #12]
 8012e92:	430b      	orrs	r3, r1
 8012e94:	60c3      	str	r3, [r0, #12]
 8012e96:	4770      	bx	lr

08012e98 <usart_word_length_set>:
 8012e98:	68c3      	ldr	r3, [r0, #12]
 8012e9a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8012e9e:	60c3      	str	r3, [r0, #12]
 8012ea0:	68c3      	ldr	r3, [r0, #12]
 8012ea2:	430b      	orrs	r3, r1
 8012ea4:	60c3      	str	r3, [r0, #12]
 8012ea6:	4770      	bx	lr

08012ea8 <usart_stop_bit_set>:
 8012ea8:	6903      	ldr	r3, [r0, #16]
 8012eaa:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8012eae:	6103      	str	r3, [r0, #16]
 8012eb0:	6903      	ldr	r3, [r0, #16]
 8012eb2:	430b      	orrs	r3, r1
 8012eb4:	6103      	str	r3, [r0, #16]
 8012eb6:	4770      	bx	lr

08012eb8 <usart_transmit_config>:
 8012eb8:	68c3      	ldr	r3, [r0, #12]
 8012eba:	f023 0308 	bic.w	r3, r3, #8
 8012ebe:	430b      	orrs	r3, r1
 8012ec0:	60c3      	str	r3, [r0, #12]
 8012ec2:	4770      	bx	lr

08012ec4 <usart_receive_config>:
 8012ec4:	68c3      	ldr	r3, [r0, #12]
 8012ec6:	f023 0304 	bic.w	r3, r3, #4
 8012eca:	430b      	orrs	r3, r1
 8012ecc:	60c3      	str	r3, [r0, #12]
 8012ece:	4770      	bx	lr

08012ed0 <usart_hardware_flow_rts_config>:
 8012ed0:	6943      	ldr	r3, [r0, #20]
 8012ed2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8012ed6:	430b      	orrs	r3, r1
 8012ed8:	6143      	str	r3, [r0, #20]
 8012eda:	4770      	bx	lr

08012edc <usart_hardware_flow_cts_config>:
 8012edc:	6943      	ldr	r3, [r0, #20]
 8012ede:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8012ee2:	430b      	orrs	r3, r1
 8012ee4:	6143      	str	r3, [r0, #20]
 8012ee6:	4770      	bx	lr

08012ee8 <usart_flag_get>:
 8012ee8:	098b      	lsrs	r3, r1, #6
 8012eea:	581a      	ldr	r2, [r3, r0]
 8012eec:	2301      	movs	r3, #1
 8012eee:	f001 011f 	and.w	r1, r1, #31
 8012ef2:	408b      	lsls	r3, r1
 8012ef4:	4213      	tst	r3, r2
 8012ef6:	bf14      	ite	ne
 8012ef8:	2001      	movne	r0, #1
 8012efa:	2000      	moveq	r0, #0
 8012efc:	4770      	bx	lr
	...

08012f00 <emac_eth_recv>:
 8012f00:	b538      	push	{r3, r4, r5, lr}
 8012f02:	4605      	mov	r5, r0
 8012f04:	f001 f92a 	bl	801415c <enet_rxframe_size_get>
 8012f08:	4604      	mov	r4, r0
 8012f0a:	b138      	cbz	r0, 8012f1c <emac_eth_recv+0x1c>
 8012f0c:	4b05      	ldr	r3, [pc, #20]	; (8012f24 <emac_eth_recv+0x24>)
 8012f0e:	2105      	movs	r1, #5
 8012f10:	6818      	ldr	r0, [r3, #0]
 8012f12:	f001 f8d2 	bl	80140ba <enet_desc_information_get>
 8012f16:	6028      	str	r0, [r5, #0]
 8012f18:	4620      	mov	r0, r4
 8012f1a:	bd38      	pop	{r3, r4, r5, pc}
 8012f1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f20:	e7fb      	b.n	8012f1a <emac_eth_recv+0x1a>
 8012f22:	bf00      	nop
 8012f24:	20010f1c 	andcs	r0, r1, ip, lsl pc

08012f28 <emac_free_pkt>:
 8012f28:	2100      	movs	r1, #0
 8012f2a:	4608      	mov	r0, r1
 8012f2c:	f000 be02 	b.w	8013b34 <enet_frame_receive>

08012f30 <emac_eth_send>:
 8012f30:	f000 be40 	b.w	8013bb4 <enet_frame_transmit>

08012f34 <gd32_adc_init()>:
 8012f34:	b510      	push	{r4, lr}
 8012f36:	f240 6009 	movw	r0, #1545	; 0x609
 8012f3a:	4c21      	ldr	r4, [pc, #132]	; (8012fc0 <gd32_adc_init()+0x8c>)
 8012f3c:	f7ff fd24 	bl	8012988 <rcu_periph_clock_enable>
 8012f40:	2005      	movs	r0, #5
 8012f42:	f7ff fd57 	bl	80129f4 <rcu_adc_clock_config>
 8012f46:	4620      	mov	r0, r4
 8012f48:	2201      	movs	r2, #1
 8012f4a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8012f4e:	f000 fc31 	bl	80137b4 <adc_special_function_config>
 8012f52:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8012f56:	4620      	mov	r0, r4
 8012f58:	2102      	movs	r1, #2
 8012f5a:	f000 fcca 	bl	80138f2 <adc_external_trigger_source_config>
 8012f5e:	2100      	movs	r1, #0
 8012f60:	4620      	mov	r0, r4
 8012f62:	f000 fc4f 	bl	8013804 <adc_data_alignment_config>
 8012f66:	2000      	movs	r0, #0
 8012f68:	f000 fc14 	bl	8013794 <adc_mode_config>
 8012f6c:	2202      	movs	r2, #2
 8012f6e:	4620      	mov	r0, r4
 8012f70:	4611      	mov	r1, r2
 8012f72:	f000 fc73 	bl	801385c <adc_channel_length_config>
 8012f76:	4620      	mov	r0, r4
 8012f78:	2307      	movs	r3, #7
 8012f7a:	2210      	movs	r2, #16
 8012f7c:	2100      	movs	r1, #0
 8012f7e:	f000 fc8a 	bl	8013896 <adc_inserted_channel_config>
 8012f82:	2307      	movs	r3, #7
 8012f84:	4620      	mov	r0, r4
 8012f86:	2211      	movs	r2, #17
 8012f88:	2101      	movs	r1, #1
 8012f8a:	f000 fc84 	bl	8013896 <adc_inserted_channel_config>
 8012f8e:	2201      	movs	r2, #1
 8012f90:	2102      	movs	r1, #2
 8012f92:	4620      	mov	r0, r4
 8012f94:	f000 fcbe 	bl	8013914 <adc_external_trigger_config>
 8012f98:	f000 fc56 	bl	8013848 <adc_tempsensor_vrefint_enable>
 8012f9c:	4620      	mov	r0, r4
 8012f9e:	f000 fc3a 	bl	8013816 <adc_enable>
 8012fa2:	2100      	movs	r1, #0
 8012fa4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8012fa8:	f000 fb22 	bl	80135f0 <udelay(unsigned int, unsigned int)>
 8012fac:	4620      	mov	r0, r4
 8012fae:	f000 fc3a 	bl	8013826 <adc_calibration_enable>
 8012fb2:	4620      	mov	r0, r4
 8012fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012fb8:	2102      	movs	r1, #2
 8012fba:	f000 bcc6 	b.w	801394a <adc_software_trigger_enable>
 8012fbe:	bf00      	nop
 8012fc0:	40012400 	andmi	r2, r1, r0, lsl #8

08012fc4 <_stop() [clone .isra.0]>:
 8012fc4:	b508      	push	{r3, lr}
 8012fc6:	4806      	ldr	r0, [pc, #24]	; (8012fe0 <_stop() [clone .isra.0]+0x1c>)
 8012fc8:	f001 f98c 	bl	80142e4 <i2c_stop_on_bus>
 8012fcc:	f640 73ff 	movw	r3, #4095	; 0xfff
 8012fd0:	4904      	ldr	r1, [pc, #16]	; (8012fe4 <_stop() [clone .isra.0]+0x20>)
 8012fd2:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8012fd6:	0592      	lsls	r2, r2, #22
 8012fd8:	d501      	bpl.n	8012fde <_stop() [clone .isra.0]+0x1a>
 8012fda:	3b01      	subs	r3, #1
 8012fdc:	d1f9      	bne.n	8012fd2 <_stop() [clone .isra.0]+0xe>
 8012fde:	bd08      	pop	{r3, pc}
 8012fe0:	40005400 	andmi	r5, r0, r0, lsl #8
 8012fe4:	40005000 	andmi	r5, r0, r0

08012fe8 <gd32_i2c_begin>:
 8012fe8:	b510      	push	{r4, lr}
 8012fea:	f240 7015 	movw	r0, #1813	; 0x715
 8012fee:	f7ff fccb 	bl	8012988 <rcu_periph_clock_enable>
 8012ff2:	4c15      	ldr	r4, [pc, #84]	; (8013048 <gd32_i2c_begin+0x60>)
 8012ff4:	f240 6003 	movw	r0, #1539	; 0x603
 8012ff8:	f7ff fcc6 	bl	8012988 <rcu_periph_clock_enable>
 8012ffc:	f240 6003 	movw	r0, #1539	; 0x603
 8013000:	f7ff fcc2 	bl	8012988 <rcu_periph_clock_enable>
 8013004:	4620      	mov	r0, r4
 8013006:	f44f 7380 	mov.w	r3, #256	; 0x100
 801300a:	2203      	movs	r2, #3
 801300c:	211c      	movs	r1, #28
 801300e:	f7ff fc23 	bl	8012858 <gpio_init>
 8013012:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013016:	2203      	movs	r2, #3
 8013018:	4620      	mov	r0, r4
 801301a:	211c      	movs	r1, #28
 801301c:	f7ff fc1c 	bl	8012858 <gpio_init>
 8013020:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8013024:	2101      	movs	r1, #1
 8013026:	2002      	movs	r0, #2
 8013028:	f7ff fc6a 	bl	8012900 <gpio_pin_remap_config>
 801302c:	4620      	mov	r0, r4
 801302e:	4907      	ldr	r1, [pc, #28]	; (801304c <gd32_i2c_begin+0x64>)
 8013030:	2200      	movs	r2, #0
 8013032:	f001 f8d1 	bl	80141d8 <i2c_clock_config>
 8013036:	4620      	mov	r0, r4
 8013038:	f001 f94a 	bl	80142d0 <i2c_enable>
 801303c:	4620      	mov	r0, r4
 801303e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013042:	2101      	movs	r1, #1
 8013044:	f001 b92a 	b.w	801429c <i2c_ack_config>
 8013048:	40010c00 	andmi	r0, r1, r0, lsl #24
 801304c:	00061a80 	andeq	r1, r6, r0, lsl #21

08013050 <gd32_i2c_set_baudrate>:
 8013050:	4601      	mov	r1, r0
 8013052:	2200      	movs	r2, #0
 8013054:	4801      	ldr	r0, [pc, #4]	; (801305c <gd32_i2c_set_baudrate+0xc>)
 8013056:	f001 b8bf 	b.w	80141d8 <i2c_clock_config>
 801305a:	bf00      	nop
 801305c:	40005400 	andmi	r5, r0, r0, lsl #8

08013060 <gd32_i2c_set_address>:
 8013060:	4b01      	ldr	r3, [pc, #4]	; (8013068 <gd32_i2c_set_address+0x8>)
 8013062:	0040      	lsls	r0, r0, #1
 8013064:	7018      	strb	r0, [r3, #0]
 8013066:	4770      	bx	lr
 8013068:	2000af10 	andcs	sl, r0, r0, lsl pc

0801306c <gd32_i2c_write>:
 801306c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801306e:	4604      	mov	r4, r0
 8013070:	460f      	mov	r7, r1
 8013072:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013076:	4e2e      	ldr	r6, [pc, #184]	; (8013130 <gd32_i2c_write+0xc4>)
 8013078:	f240 6101 	movw	r1, #1537	; 0x601
 801307c:	4630      	mov	r0, r6
 801307e:	f001 f93b 	bl	80142f8 <i2c_flag_get>
 8013082:	b9b0      	cbnz	r0, 80130b2 <gd32_i2c_write+0x46>
 8013084:	482a      	ldr	r0, [pc, #168]	; (8013130 <gd32_i2c_write+0xc4>)
 8013086:	f001 f928 	bl	80142da <i2c_start_on_bus>
 801308a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801308e:	4e28      	ldr	r6, [pc, #160]	; (8013130 <gd32_i2c_write+0xc4>)
 8013090:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013094:	4630      	mov	r0, r6
 8013096:	f001 f92f 	bl	80142f8 <i2c_flag_get>
 801309a:	b190      	cbz	r0, 80130c2 <gd32_i2c_write+0x56>
 801309c:	4b25      	ldr	r3, [pc, #148]	; (8013134 <gd32_i2c_write+0xc8>)
 801309e:	f06f 0201 	mvn.w	r2, #1
 80130a2:	7819      	ldrb	r1, [r3, #0]
 80130a4:	4822      	ldr	r0, [pc, #136]	; (8013130 <gd32_i2c_write+0xc4>)
 80130a6:	f001 f90b 	bl	80142c0 <i2c_master_addressing>
 80130aa:	f640 75ff 	movw	r5, #4095	; 0xfff
 80130ae:	4e20      	ldr	r6, [pc, #128]	; (8013130 <gd32_i2c_write+0xc4>)
 80130b0:	e00c      	b.n	80130cc <gd32_i2c_write+0x60>
 80130b2:	3d01      	subs	r5, #1
 80130b4:	d1e0      	bne.n	8013078 <gd32_i2c_write+0xc>
 80130b6:	f7ff ff85 	bl	8012fc4 <_stop() [clone .isra.0]>
 80130ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80130be:	4240      	negs	r0, r0
 80130c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80130c2:	3d01      	subs	r5, #1
 80130c4:	d1e4      	bne.n	8013090 <gd32_i2c_write+0x24>
 80130c6:	e7f6      	b.n	80130b6 <gd32_i2c_write+0x4a>
 80130c8:	3d01      	subs	r5, #1
 80130ca:	d0f4      	beq.n	80130b6 <gd32_i2c_write+0x4a>
 80130cc:	f240 5101 	movw	r1, #1281	; 0x501
 80130d0:	4630      	mov	r0, r6
 80130d2:	f001 f911 	bl	80142f8 <i2c_flag_get>
 80130d6:	2800      	cmp	r0, #0
 80130d8:	d0f6      	beq.n	80130c8 <gd32_i2c_write+0x5c>
 80130da:	f240 5101 	movw	r1, #1281	; 0x501
 80130de:	4814      	ldr	r0, [pc, #80]	; (8013130 <gd32_i2c_write+0xc4>)
 80130e0:	f001 f915 	bl	801430e <i2c_flag_clear>
 80130e4:	f640 75ff 	movw	r5, #4095	; 0xfff
 80130e8:	4e11      	ldr	r6, [pc, #68]	; (8013130 <gd32_i2c_write+0xc4>)
 80130ea:	f240 5107 	movw	r1, #1287	; 0x507
 80130ee:	4630      	mov	r0, r6
 80130f0:	f001 f902 	bl	80142f8 <i2c_flag_get>
 80130f4:	2801      	cmp	r0, #1
 80130f6:	d107      	bne.n	8013108 <gd32_i2c_write+0x9c>
 80130f8:	4e0d      	ldr	r6, [pc, #52]	; (8013130 <gd32_i2c_write+0xc4>)
 80130fa:	4427      	add	r7, r4
 80130fc:	42a7      	cmp	r7, r4
 80130fe:	d106      	bne.n	801310e <gd32_i2c_write+0xa2>
 8013100:	f7ff ff60 	bl	8012fc4 <_stop() [clone .isra.0]>
 8013104:	2000      	movs	r0, #0
 8013106:	e7da      	b.n	80130be <gd32_i2c_write+0x52>
 8013108:	3d01      	subs	r5, #1
 801310a:	d1ee      	bne.n	80130ea <gd32_i2c_write+0x7e>
 801310c:	e7d3      	b.n	80130b6 <gd32_i2c_write+0x4a>
 801310e:	4630      	mov	r0, r6
 8013110:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013114:	f001 f8eb 	bl	80142ee <i2c_data_transmit>
 8013118:	f640 75ff 	movw	r5, #4095	; 0xfff
 801311c:	f240 5102 	movw	r1, #1282	; 0x502
 8013120:	4630      	mov	r0, r6
 8013122:	f001 f8e9 	bl	80142f8 <i2c_flag_get>
 8013126:	2800      	cmp	r0, #0
 8013128:	d1e8      	bne.n	80130fc <gd32_i2c_write+0x90>
 801312a:	3d01      	subs	r5, #1
 801312c:	d1f6      	bne.n	801311c <gd32_i2c_write+0xb0>
 801312e:	e7c2      	b.n	80130b6 <gd32_i2c_write+0x4a>
 8013130:	40005400 	andmi	r5, r0, r0, lsl #8
 8013134:	2000af10 	andcs	sl, r0, r0, lsl pc

08013138 <gd32_i2c_read>:
 8013138:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801313c:	4680      	mov	r8, r0
 801313e:	460c      	mov	r4, r1
 8013140:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013144:	4f4b      	ldr	r7, [pc, #300]	; (8013274 <gd32_i2c_read+0x13c>)
 8013146:	f240 6101 	movw	r1, #1537	; 0x601
 801314a:	4638      	mov	r0, r7
 801314c:	f001 f8d4 	bl	80142f8 <i2c_flag_get>
 8013150:	4605      	mov	r5, r0
 8013152:	bb08      	cbnz	r0, 8013198 <gd32_i2c_read+0x60>
 8013154:	2c02      	cmp	r4, #2
 8013156:	d103      	bne.n	8013160 <gd32_i2c_read+0x28>
 8013158:	4601      	mov	r1, r0
 801315a:	4846      	ldr	r0, [pc, #280]	; (8013274 <gd32_i2c_read+0x13c>)
 801315c:	f001 f8a7 	bl	80142ae <i2c_ackpos_config>
 8013160:	4844      	ldr	r0, [pc, #272]	; (8013274 <gd32_i2c_read+0x13c>)
 8013162:	f001 f8ba 	bl	80142da <i2c_start_on_bus>
 8013166:	f640 76ff 	movw	r6, #4095	; 0xfff
 801316a:	4f42      	ldr	r7, [pc, #264]	; (8013274 <gd32_i2c_read+0x13c>)
 801316c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013170:	4638      	mov	r0, r7
 8013172:	f001 f8c1 	bl	80142f8 <i2c_flag_get>
 8013176:	b1a8      	cbz	r0, 80131a4 <gd32_i2c_read+0x6c>
 8013178:	4b3f      	ldr	r3, [pc, #252]	; (8013278 <gd32_i2c_read+0x140>)
 801317a:	2201      	movs	r2, #1
 801317c:	7819      	ldrb	r1, [r3, #0]
 801317e:	483d      	ldr	r0, [pc, #244]	; (8013274 <gd32_i2c_read+0x13c>)
 8013180:	f001 f89e 	bl	80142c0 <i2c_master_addressing>
 8013184:	2c02      	cmp	r4, #2
 8013186:	d803      	bhi.n	8013190 <gd32_i2c_read+0x58>
 8013188:	2100      	movs	r1, #0
 801318a:	483a      	ldr	r0, [pc, #232]	; (8013274 <gd32_i2c_read+0x13c>)
 801318c:	f001 f886 	bl	801429c <i2c_ack_config>
 8013190:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013194:	4f37      	ldr	r7, [pc, #220]	; (8013274 <gd32_i2c_read+0x13c>)
 8013196:	e00a      	b.n	80131ae <gd32_i2c_read+0x76>
 8013198:	3e01      	subs	r6, #1
 801319a:	d1d4      	bne.n	8013146 <gd32_i2c_read+0xe>
 801319c:	f7ff ff12 	bl	8012fc4 <_stop() [clone .isra.0]>
 80131a0:	2504      	movs	r5, #4
 80131a2:	e04d      	b.n	8013240 <gd32_i2c_read+0x108>
 80131a4:	3e01      	subs	r6, #1
 80131a6:	d1e1      	bne.n	801316c <gd32_i2c_read+0x34>
 80131a8:	e7f8      	b.n	801319c <gd32_i2c_read+0x64>
 80131aa:	3e01      	subs	r6, #1
 80131ac:	d0f6      	beq.n	801319c <gd32_i2c_read+0x64>
 80131ae:	f240 5101 	movw	r1, #1281	; 0x501
 80131b2:	4638      	mov	r0, r7
 80131b4:	f001 f8a0 	bl	80142f8 <i2c_flag_get>
 80131b8:	2800      	cmp	r0, #0
 80131ba:	d0f6      	beq.n	80131aa <gd32_i2c_read+0x72>
 80131bc:	f240 5101 	movw	r1, #1281	; 0x501
 80131c0:	482c      	ldr	r0, [pc, #176]	; (8013274 <gd32_i2c_read+0x13c>)
 80131c2:	f001 f8a4 	bl	801430e <i2c_flag_clear>
 80131c6:	2c01      	cmp	r4, #1
 80131c8:	d102      	bne.n	80131d0 <gd32_i2c_read+0x98>
 80131ca:	482a      	ldr	r0, [pc, #168]	; (8013274 <gd32_i2c_read+0x13c>)
 80131cc:	f001 f88a 	bl	80142e4 <i2c_stop_on_bus>
 80131d0:	f640 77ff 	movw	r7, #4095	; 0xfff
 80131d4:	4e27      	ldr	r6, [pc, #156]	; (8013274 <gd32_i2c_read+0x13c>)
 80131d6:	e022      	b.n	801321e <gd32_i2c_read+0xe6>
 80131d8:	2c03      	cmp	r4, #3
 80131da:	d134      	bne.n	8013246 <gd32_i2c_read+0x10e>
 80131dc:	f640 79ff 	movw	r9, #4095	; 0xfff
 80131e0:	e002      	b.n	80131e8 <gd32_i2c_read+0xb0>
 80131e2:	f1b9 0901 	subs.w	r9, r9, #1
 80131e6:	d0d9      	beq.n	801319c <gd32_i2c_read+0x64>
 80131e8:	f240 5102 	movw	r1, #1282	; 0x502
 80131ec:	4630      	mov	r0, r6
 80131ee:	f001 f883 	bl	80142f8 <i2c_flag_get>
 80131f2:	2800      	cmp	r0, #0
 80131f4:	d0f5      	beq.n	80131e2 <gd32_i2c_read+0xaa>
 80131f6:	2100      	movs	r1, #0
 80131f8:	4630      	mov	r0, r6
 80131fa:	f001 f84f 	bl	801429c <i2c_ack_config>
 80131fe:	f240 5106 	movw	r1, #1286	; 0x506
 8013202:	4630      	mov	r0, r6
 8013204:	f001 f878 	bl	80142f8 <i2c_flag_get>
 8013208:	b138      	cbz	r0, 801321a <gd32_i2c_read+0xe2>
 801320a:	4630      	mov	r0, r6
 801320c:	f001 f871 	bl	80142f2 <i2c_data_receive>
 8013210:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013214:	f808 0b01 	strb.w	r0, [r8], #1
 8013218:	3c01      	subs	r4, #1
 801321a:	3f01      	subs	r7, #1
 801321c:	d0be      	beq.n	801319c <gd32_i2c_read+0x64>
 801321e:	2c00      	cmp	r4, #0
 8013220:	d1da      	bne.n	80131d8 <gd32_i2c_read+0xa0>
 8013222:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013226:	4915      	ldr	r1, [pc, #84]	; (801327c <gd32_i2c_read+0x144>)
 8013228:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801322c:	0592      	lsls	r2, r2, #22
 801322e:	d41d      	bmi.n	801326c <gd32_i2c_read+0x134>
 8013230:	2101      	movs	r1, #1
 8013232:	4810      	ldr	r0, [pc, #64]	; (8013274 <gd32_i2c_read+0x13c>)
 8013234:	f001 f832 	bl	801429c <i2c_ack_config>
 8013238:	2101      	movs	r1, #1
 801323a:	480e      	ldr	r0, [pc, #56]	; (8013274 <gd32_i2c_read+0x13c>)
 801323c:	f001 f837 	bl	80142ae <i2c_ackpos_config>
 8013240:	4628      	mov	r0, r5
 8013242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013246:	2c02      	cmp	r4, #2
 8013248:	d1d9      	bne.n	80131fe <gd32_i2c_read+0xc6>
 801324a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801324e:	e002      	b.n	8013256 <gd32_i2c_read+0x11e>
 8013250:	f1b9 0901 	subs.w	r9, r9, #1
 8013254:	d0a2      	beq.n	801319c <gd32_i2c_read+0x64>
 8013256:	f240 5102 	movw	r1, #1282	; 0x502
 801325a:	4630      	mov	r0, r6
 801325c:	f001 f84c 	bl	80142f8 <i2c_flag_get>
 8013260:	2800      	cmp	r0, #0
 8013262:	d0f5      	beq.n	8013250 <gd32_i2c_read+0x118>
 8013264:	4630      	mov	r0, r6
 8013266:	f001 f83d 	bl	80142e4 <i2c_stop_on_bus>
 801326a:	e7c8      	b.n	80131fe <gd32_i2c_read+0xc6>
 801326c:	3b01      	subs	r3, #1
 801326e:	d1db      	bne.n	8013228 <gd32_i2c_read+0xf0>
 8013270:	e796      	b.n	80131a0 <gd32_i2c_read+0x68>
 8013272:	bf00      	nop
 8013274:	40005400 	andmi	r5, r0, r0, lsl #8
 8013278:	2000af10 	andcs	sl, r0, r0, lsl pc
 801327c:	40005000 	andmi	r5, r0, r0

08013280 <gd32_spi_dma_begin()>:
 8013280:	b510      	push	{r4, lr}
 8013282:	f240 6002 	movw	r0, #1538	; 0x602
 8013286:	b088      	sub	sp, #32
 8013288:	f7ff fb7e 	bl	8012988 <rcu_periph_clock_enable>
 801328c:	f240 6003 	movw	r0, #1539	; 0x603
 8013290:	f7ff fb7a 	bl	8012988 <rcu_periph_clock_enable>
 8013294:	f240 700f 	movw	r0, #1807	; 0x70f
 8013298:	f7ff fb76 	bl	8012988 <rcu_periph_clock_enable>
 801329c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80132a0:	f7ff fb72 	bl	8012988 <rcu_periph_clock_enable>
 80132a4:	2338      	movs	r3, #56	; 0x38
 80132a6:	2203      	movs	r2, #3
 80132a8:	2118      	movs	r1, #24
 80132aa:	4831      	ldr	r0, [pc, #196]	; (8013370 <gd32_spi_dma_begin()+0xf0>)
 80132ac:	f7ff fad4 	bl	8012858 <gpio_init>
 80132b0:	4c30      	ldr	r4, [pc, #192]	; (8013374 <gd32_spi_dma_begin()+0xf4>)
 80132b2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80132b6:	2203      	movs	r2, #3
 80132b8:	2118      	movs	r1, #24
 80132ba:	482f      	ldr	r0, [pc, #188]	; (8013378 <gd32_spi_dma_begin()+0xf8>)
 80132bc:	f7ff facc 	bl	8012858 <gpio_init>
 80132c0:	2101      	movs	r1, #1
 80132c2:	482e      	ldr	r0, [pc, #184]	; (801337c <gd32_spi_dma_begin()+0xfc>)
 80132c4:	f7ff fb1c 	bl	8012900 <gpio_pin_remap_config>
 80132c8:	6823      	ldr	r3, [r4, #0]
 80132ca:	f44f 4060 	mov.w	r0, #57344	; 0xe000
 80132ce:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80132d2:	6023      	str	r3, [r4, #0]
 80132d4:	f7ff fb82 	bl	80129dc <rcu_pll2_config>
 80132d8:	6823      	ldr	r3, [r4, #0]
 80132da:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80132de:	6023      	str	r3, [r4, #0]
 80132e0:	6823      	ldr	r3, [r4, #0]
 80132e2:	0098      	lsls	r0, r3, #2
 80132e4:	d5fc      	bpl.n	80132e0 <gd32_spi_dma_begin()+0x60>
 80132e6:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80132ea:	f7ff fba1 	bl	8012a30 <rcu_i2s2_clock_config>
 80132ee:	4824      	ldr	r0, [pc, #144]	; (8013380 <gd32_spi_dma_begin()+0x100>)
 80132f0:	f001 f88b 	bl	801440a <i2s_disable>
 80132f4:	2300      	movs	r3, #0
 80132f6:	4923      	ldr	r1, [pc, #140]	; (8013384 <gd32_spi_dma_begin()+0x104>)
 80132f8:	461a      	mov	r2, r3
 80132fa:	4821      	ldr	r0, [pc, #132]	; (8013380 <gd32_spi_dma_begin()+0x100>)
 80132fc:	f001 f828 	bl	8014350 <i2s_psc_config>
 8013300:	2300      	movs	r3, #0
 8013302:	2210      	movs	r2, #16
 8013304:	f44f 7100 	mov.w	r1, #512	; 0x200
 8013308:	481d      	ldr	r0, [pc, #116]	; (8013380 <gd32_spi_dma_begin()+0x100>)
 801330a:	f001 f812 	bl	8014332 <i2s_init>
 801330e:	481c      	ldr	r0, [pc, #112]	; (8013380 <gd32_spi_dma_begin()+0x100>)
 8013310:	f001 f876 	bl	8014400 <i2s_enable>
 8013314:	f240 5001 	movw	r0, #1281	; 0x501
 8013318:	f7ff fb36 	bl	8012988 <rcu_periph_clock_enable>
 801331c:	2101      	movs	r1, #1
 801331e:	481a      	ldr	r0, [pc, #104]	; (8013388 <gd32_spi_dma_begin()+0x108>)
 8013320:	f000 fb20 	bl	8013964 <dma_deinit>
 8013324:	a801      	add	r0, sp, #4
 8013326:	f000 fb39 	bl	801399c <dma_struct_para_init>
 801332a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801332e:	2401      	movs	r4, #1
 8013330:	9304      	str	r3, [sp, #16]
 8013332:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8013336:	f44f 7380 	mov.w	r3, #256	; 0x100
 801333a:	4914      	ldr	r1, [pc, #80]	; (801338c <gd32_spi_dma_begin()+0x10c>)
 801333c:	9206      	str	r2, [sp, #24]
 801333e:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8013342:	aa01      	add	r2, sp, #4
 8013344:	4621      	mov	r1, r4
 8013346:	4810      	ldr	r0, [pc, #64]	; (8013388 <gd32_spi_dma_begin()+0x108>)
 8013348:	f8ad 301c 	strh.w	r3, [sp, #28]
 801334c:	f88d 401e 	strb.w	r4, [sp, #30]
 8013350:	f000 fb2e 	bl	80139b0 <dma_init>
 8013354:	4621      	mov	r1, r4
 8013356:	480c      	ldr	r0, [pc, #48]	; (8013388 <gd32_spi_dma_begin()+0x108>)
 8013358:	f000 fb64 	bl	8013a24 <dma_circulation_disable>
 801335c:	4621      	mov	r1, r4
 801335e:	480a      	ldr	r0, [pc, #40]	; (8013388 <gd32_spi_dma_begin()+0x108>)
 8013360:	f000 fb70 	bl	8013a44 <dma_memory_to_memory_disable>
 8013364:	2200      	movs	r2, #0
 8013366:	4b0a      	ldr	r3, [pc, #40]	; (8013390 <gd32_spi_dma_begin()+0x110>)
 8013368:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 801336c:	b008      	add	sp, #32
 801336e:	bd10      	pop	{r4, pc}
 8013370:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013374:	40021000 	andmi	r1, r2, r0
 8013378:	40010800 	andmi	r0, r1, r0, lsl #16
 801337c:	00300400 	eorseq	r0, r0, r0, lsl #8
 8013380:	40003c00 	andmi	r3, r0, r0, lsl #24
 8013384:	00030d40 	andeq	r0, r3, r0, asr #26
 8013388:	40020400 	andmi	r0, r2, r0, lsl #8
 801338c:	40003c0c 	andmi	r3, r0, ip, lsl #24
 8013390:	40020000 	andmi	r0, r2, r0

08013394 <gd32_spi_dma_set_speed_hz(unsigned int)>:
 8013394:	b538      	push	{r3, r4, r5, lr}
 8013396:	4c08      	ldr	r4, [pc, #32]	; (80133b8 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 8013398:	4605      	mov	r5, r0
 801339a:	4620      	mov	r0, r4
 801339c:	f001 f835 	bl	801440a <i2s_disable>
 80133a0:	2300      	movs	r3, #0
 80133a2:	4620      	mov	r0, r4
 80133a4:	461a      	mov	r2, r3
 80133a6:	0969      	lsrs	r1, r5, #5
 80133a8:	f000 ffd2 	bl	8014350 <i2s_psc_config>
 80133ac:	4620      	mov	r0, r4
 80133ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80133b2:	f001 b825 	b.w	8014400 <i2s_enable>
 80133b6:	bf00      	nop
 80133b8:	40003c00 	andmi	r3, r0, r0, lsl #24

080133bc <gd32_spi_dma_tx_prepare(unsigned int*)>:
 80133bc:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 80133c0:	6003      	str	r3, [r0, #0]
 80133c2:	4801      	ldr	r0, [pc, #4]	; (80133c8 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 80133c4:	4770      	bx	lr
 80133c6:	bf00      	nop
 80133c8:	2000af14 	andcs	sl, r0, r4, lsl pc

080133cc <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 80133cc:	4a0a      	ldr	r2, [pc, #40]	; (80133f8 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 80133ce:	3101      	adds	r1, #1
 80133d0:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 80133d4:	f3c1 014f 	ubfx	r1, r1, #1, #16
 80133d8:	f023 0301 	bic.w	r3, r3, #1
 80133dc:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 80133e0:	f043 0301 	orr.w	r3, r3, #1
 80133e4:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 80133e8:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 80133ec:	4803      	ldr	r0, [pc, #12]	; (80133fc <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 80133ee:	2100      	movs	r1, #0
 80133f0:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 80133f4:	f001 b80e 	b.w	8014414 <spi_dma_enable>
 80133f8:	40020000 	andmi	r0, r2, r0
 80133fc:	40003c00 	andmi	r3, r0, r0, lsl #24

08013400 <gd32_spi_dma_tx_is_active()>:
 8013400:	4b03      	ldr	r3, [pc, #12]	; (8013410 <gd32_spi_dma_tx_is_active()+0x10>)
 8013402:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 8013406:	3800      	subs	r0, #0
 8013408:	bf18      	it	ne
 801340a:	2001      	movne	r0, #1
 801340c:	4770      	bx	lr
 801340e:	bf00      	nop
 8013410:	40020000 	andmi	r0, r2, r0

08013414 <gd32_uart_begin>:
 8013414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013416:	461e      	mov	r6, r3
 8013418:	4b63      	ldr	r3, [pc, #396]	; (80135a8 <gd32_uart_begin+0x194>)
 801341a:	4604      	mov	r4, r0
 801341c:	4298      	cmp	r0, r3
 801341e:	460f      	mov	r7, r1
 8013420:	4615      	mov	r5, r2
 8013422:	d03b      	beq.n	801349c <gd32_uart_begin+0x88>
 8013424:	d80a      	bhi.n	801343c <gd32_uart_begin+0x28>
 8013426:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801342a:	4298      	cmp	r0, r3
 801342c:	d02f      	beq.n	801348e <gd32_uart_begin+0x7a>
 801342e:	f240 7012 	movw	r0, #1810	; 0x712
 8013432:	f7ff faa9 	bl	8012988 <rcu_periph_clock_enable>
 8013436:	f240 6004 	movw	r0, #1540	; 0x604
 801343a:	e008      	b.n	801344e <gd32_uart_begin+0x3a>
 801343c:	4b5b      	ldr	r3, [pc, #364]	; (80135ac <gd32_uart_begin+0x198>)
 801343e:	4298      	cmp	r0, r3
 8013440:	d02f      	beq.n	80134a2 <gd32_uart_begin+0x8e>
 8013442:	f240 600e 	movw	r0, #1550	; 0x60e
 8013446:	f7ff fa9f 	bl	8012988 <rcu_periph_clock_enable>
 801344a:	f240 6003 	movw	r0, #1539	; 0x603
 801344e:	f7ff fa9b 	bl	8012988 <rcu_periph_clock_enable>
 8013452:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013456:	f7ff fa97 	bl	8012988 <rcu_periph_clock_enable>
 801345a:	4b53      	ldr	r3, [pc, #332]	; (80135a8 <gd32_uart_begin+0x194>)
 801345c:	429c      	cmp	r4, r3
 801345e:	f000 8084 	beq.w	801356a <gd32_uart_begin+0x156>
 8013462:	d829      	bhi.n	80134b8 <gd32_uart_begin+0xa4>
 8013464:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013468:	429c      	cmp	r4, r3
 801346a:	d071      	beq.n	8013550 <gd32_uart_begin+0x13c>
 801346c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013470:	2203      	movs	r2, #3
 8013472:	2118      	movs	r1, #24
 8013474:	484e      	ldr	r0, [pc, #312]	; (80135b0 <gd32_uart_begin+0x19c>)
 8013476:	f7ff f9ef 	bl	8012858 <gpio_init>
 801347a:	2104      	movs	r1, #4
 801347c:	484c      	ldr	r0, [pc, #304]	; (80135b0 <gd32_uart_begin+0x19c>)
 801347e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013482:	2203      	movs	r2, #3
 8013484:	f7ff f9e8 	bl	8012858 <gpio_init>
 8013488:	2101      	movs	r1, #1
 801348a:	484a      	ldr	r0, [pc, #296]	; (80135b4 <gd32_uart_begin+0x1a0>)
 801348c:	e025      	b.n	80134da <gd32_uart_begin+0xc6>
 801348e:	f240 7011 	movw	r0, #1809	; 0x711
 8013492:	f7ff fa79 	bl	8012988 <rcu_periph_clock_enable>
 8013496:	f240 6002 	movw	r0, #1538	; 0x602
 801349a:	e7d8      	b.n	801344e <gd32_uart_begin+0x3a>
 801349c:	f240 7013 	movw	r0, #1811	; 0x713
 80134a0:	e7c7      	b.n	8013432 <gd32_uart_begin+0x1e>
 80134a2:	f240 7014 	movw	r0, #1812	; 0x714
 80134a6:	f7ff fa6f 	bl	8012988 <rcu_periph_clock_enable>
 80134aa:	f240 6004 	movw	r0, #1540	; 0x604
 80134ae:	f7ff fa6b 	bl	8012988 <rcu_periph_clock_enable>
 80134b2:	f240 6005 	movw	r0, #1541	; 0x605
 80134b6:	e7ca      	b.n	801344e <gd32_uart_begin+0x3a>
 80134b8:	4b3c      	ldr	r3, [pc, #240]	; (80135ac <gd32_uart_begin+0x198>)
 80134ba:	429c      	cmp	r4, r3
 80134bc:	d062      	beq.n	8013584 <gd32_uart_begin+0x170>
 80134be:	2340      	movs	r3, #64	; 0x40
 80134c0:	2203      	movs	r2, #3
 80134c2:	2118      	movs	r1, #24
 80134c4:	483c      	ldr	r0, [pc, #240]	; (80135b8 <gd32_uart_begin+0x1a4>)
 80134c6:	f7ff f9c7 	bl	8012858 <gpio_init>
 80134ca:	2104      	movs	r1, #4
 80134cc:	483a      	ldr	r0, [pc, #232]	; (80135b8 <gd32_uart_begin+0x1a4>)
 80134ce:	2380      	movs	r3, #128	; 0x80
 80134d0:	2203      	movs	r2, #3
 80134d2:	f7ff f9c1 	bl	8012858 <gpio_init>
 80134d6:	2101      	movs	r1, #1
 80134d8:	2004      	movs	r0, #4
 80134da:	f7ff fa11 	bl	8012900 <gpio_pin_remap_config>
 80134de:	4620      	mov	r0, r4
 80134e0:	f7ff fc6a 	bl	8012db8 <usart_deinit>
 80134e4:	68e3      	ldr	r3, [r4, #12]
 80134e6:	4639      	mov	r1, r7
 80134e8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80134ec:	4620      	mov	r0, r4
 80134ee:	60e3      	str	r3, [r4, #12]
 80134f0:	f7ff fca2 	bl	8012e38 <usart_baudrate_set>
 80134f4:	f1a5 0309 	sub.w	r3, r5, #9
 80134f8:	4259      	negs	r1, r3
 80134fa:	4159      	adcs	r1, r3
 80134fc:	4620      	mov	r0, r4
 80134fe:	0309      	lsls	r1, r1, #12
 8013500:	f7ff fcca 	bl	8012e98 <usart_word_length_set>
 8013504:	9906      	ldr	r1, [sp, #24]
 8013506:	4620      	mov	r0, r4
 8013508:	1e8a      	subs	r2, r1, #2
 801350a:	4251      	negs	r1, r2
 801350c:	4151      	adcs	r1, r2
 801350e:	0349      	lsls	r1, r1, #13
 8013510:	f7ff fcca 	bl	8012ea8 <usart_stop_bit_set>
 8013514:	2e01      	cmp	r6, #1
 8013516:	d041      	beq.n	801359c <gd32_uart_begin+0x188>
 8013518:	2e02      	cmp	r6, #2
 801351a:	d142      	bne.n	80135a2 <gd32_uart_begin+0x18e>
 801351c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013520:	4620      	mov	r0, r4
 8013522:	f7ff fcb1 	bl	8012e88 <usart_parity_config>
 8013526:	2100      	movs	r1, #0
 8013528:	4620      	mov	r0, r4
 801352a:	f7ff fcd1 	bl	8012ed0 <usart_hardware_flow_rts_config>
 801352e:	2100      	movs	r1, #0
 8013530:	4620      	mov	r0, r4
 8013532:	f7ff fcd3 	bl	8012edc <usart_hardware_flow_cts_config>
 8013536:	2104      	movs	r1, #4
 8013538:	4620      	mov	r0, r4
 801353a:	f7ff fcc3 	bl	8012ec4 <usart_receive_config>
 801353e:	2108      	movs	r1, #8
 8013540:	4620      	mov	r0, r4
 8013542:	f7ff fcb9 	bl	8012eb8 <usart_transmit_config>
 8013546:	68e3      	ldr	r3, [r4, #12]
 8013548:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801354c:	60e3      	str	r3, [r4, #12]
 801354e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013550:	2304      	movs	r3, #4
 8013552:	2203      	movs	r2, #3
 8013554:	2118      	movs	r1, #24
 8013556:	4819      	ldr	r0, [pc, #100]	; (80135bc <gd32_uart_begin+0x1a8>)
 8013558:	f7ff f97e 	bl	8012858 <gpio_init>
 801355c:	2308      	movs	r3, #8
 801355e:	2203      	movs	r2, #3
 8013560:	2104      	movs	r1, #4
 8013562:	4816      	ldr	r0, [pc, #88]	; (80135bc <gd32_uart_begin+0x1a8>)
 8013564:	f7ff f978 	bl	8012858 <gpio_init>
 8013568:	e7b9      	b.n	80134de <gd32_uart_begin+0xca>
 801356a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801356e:	2203      	movs	r2, #3
 8013570:	2118      	movs	r1, #24
 8013572:	480f      	ldr	r0, [pc, #60]	; (80135b0 <gd32_uart_begin+0x19c>)
 8013574:	f7ff f970 	bl	8012858 <gpio_init>
 8013578:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801357c:	2203      	movs	r2, #3
 801357e:	2104      	movs	r1, #4
 8013580:	480b      	ldr	r0, [pc, #44]	; (80135b0 <gd32_uart_begin+0x19c>)
 8013582:	e7ef      	b.n	8013564 <gd32_uart_begin+0x150>
 8013584:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013588:	2203      	movs	r2, #3
 801358a:	2118      	movs	r1, #24
 801358c:	4808      	ldr	r0, [pc, #32]	; (80135b0 <gd32_uart_begin+0x19c>)
 801358e:	f7ff f963 	bl	8012858 <gpio_init>
 8013592:	2304      	movs	r3, #4
 8013594:	2203      	movs	r2, #3
 8013596:	4619      	mov	r1, r3
 8013598:	4809      	ldr	r0, [pc, #36]	; (80135c0 <gd32_uart_begin+0x1ac>)
 801359a:	e7e3      	b.n	8013564 <gd32_uart_begin+0x150>
 801359c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80135a0:	e7be      	b.n	8013520 <gd32_uart_begin+0x10c>
 80135a2:	2100      	movs	r1, #0
 80135a4:	e7bc      	b.n	8013520 <gd32_uart_begin+0x10c>
 80135a6:	bf00      	nop
 80135a8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80135ac:	40005000 	andmi	r5, r0, r0
 80135b0:	40011000 	andmi	r1, r1, r0
 80135b4:	00140010 	andseq	r0, r4, r0, lsl r0
 80135b8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80135bc:	40010800 	andmi	r0, r1, r0, lsl #16
 80135c0:	40011400 	andmi	r1, r1, r0, lsl #8

080135c4 <micros_init()>:
 80135c4:	4770      	bx	lr
	...

080135c8 <udelay_init()>:
 80135c8:	4a07      	ldr	r2, [pc, #28]	; (80135e8 <udelay_init()+0x20>)
 80135ca:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80135ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80135d2:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80135d6:	2200      	movs	r2, #0
 80135d8:	4b04      	ldr	r3, [pc, #16]	; (80135ec <udelay_init()+0x24>)
 80135da:	605a      	str	r2, [r3, #4]
 80135dc:	681a      	ldr	r2, [r3, #0]
 80135de:	f042 0201 	orr.w	r2, r2, #1
 80135e2:	601a      	str	r2, [r3, #0]
 80135e4:	4770      	bx	lr
 80135e6:	bf00      	nop
 80135e8:	e000ed00 	and	lr, r0, r0, lsl #26
 80135ec:	e0001000 	and	r1, r0, r0

080135f0 <udelay(unsigned int, unsigned int)>:
 80135f0:	236c      	movs	r3, #108	; 0x6c
 80135f2:	b530      	push	{r4, r5, lr}
 80135f4:	4358      	muls	r0, r3
 80135f6:	b909      	cbnz	r1, 80135fc <udelay(unsigned int, unsigned int)+0xc>
 80135f8:	4b08      	ldr	r3, [pc, #32]	; (801361c <udelay(unsigned int, unsigned int)+0x2c>)
 80135fa:	6859      	ldr	r1, [r3, #4]
 80135fc:	2300      	movs	r3, #0
 80135fe:	4c07      	ldr	r4, [pc, #28]	; (801361c <udelay(unsigned int, unsigned int)+0x2c>)
 8013600:	6862      	ldr	r2, [r4, #4]
 8013602:	4291      	cmp	r1, r2
 8013604:	d0fc      	beq.n	8013600 <udelay(unsigned int, unsigned int)+0x10>
 8013606:	bf2a      	itet	cs
 8013608:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 801360c:	189b      	addcc	r3, r3, r2
 801360e:	195b      	addcs	r3, r3, r5
 8013610:	1a5b      	subs	r3, r3, r1
 8013612:	4283      	cmp	r3, r0
 8013614:	d300      	bcc.n	8013618 <udelay(unsigned int, unsigned int)+0x28>
 8013616:	bd30      	pop	{r4, r5, pc}
 8013618:	4611      	mov	r1, r2
 801361a:	e7f1      	b.n	8013600 <udelay(unsigned int, unsigned int)+0x10>
 801361c:	e0001000 	and	r1, r0, r0

08013620 <emac_start(unsigned char*)>:
 8013620:	b538      	push	{r3, r4, r5, lr}
 8013622:	4605      	mov	r5, r0
 8013624:	f240 6002 	movw	r0, #1538	; 0x602
 8013628:	f7ff f9ae 	bl	8012988 <rcu_periph_clock_enable>
 801362c:	f240 6003 	movw	r0, #1539	; 0x603
 8013630:	f7ff f9aa 	bl	8012988 <rcu_periph_clock_enable>
 8013634:	f240 6004 	movw	r0, #1540	; 0x604
 8013638:	f7ff f9a6 	bl	8012988 <rcu_periph_clock_enable>
 801363c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013640:	f7ff f9a2 	bl	8012988 <rcu_periph_clock_enable>
 8013644:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013648:	2203      	movs	r2, #3
 801364a:	2118      	movs	r1, #24
 801364c:	4843      	ldr	r0, [pc, #268]	; (801375c <emac_start(unsigned char*)+0x13c>)
 801364e:	f7ff f903 	bl	8012858 <gpio_init>
 8013652:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8013656:	f7ff f9c1 	bl	80129dc <rcu_pll2_config>
 801365a:	201c      	movs	r0, #28
 801365c:	f7ff fa62 	bl	8012b24 <rcu_osci_on>
 8013660:	201c      	movs	r0, #28
 8013662:	f7ff f9ff 	bl	8012a64 <rcu_osci_stab_wait>
 8013666:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 801366a:	f7ff f9ad 	bl	80129c8 <rcu_ckout0_config>
 801366e:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8013672:	f7ff f975 	bl	8012960 <gpio_ethernet_phy_select>
 8013676:	2302      	movs	r3, #2
 8013678:	2203      	movs	r2, #3
 801367a:	2104      	movs	r1, #4
 801367c:	4837      	ldr	r0, [pc, #220]	; (801375c <emac_start(unsigned char*)+0x13c>)
 801367e:	f7ff f8eb 	bl	8012858 <gpio_init>
 8013682:	2304      	movs	r3, #4
 8013684:	2203      	movs	r2, #3
 8013686:	2118      	movs	r1, #24
 8013688:	4834      	ldr	r0, [pc, #208]	; (801375c <emac_start(unsigned char*)+0x13c>)
 801368a:	f7ff f8e5 	bl	8012858 <gpio_init>
 801368e:	2380      	movs	r3, #128	; 0x80
 8013690:	2203      	movs	r2, #3
 8013692:	2104      	movs	r1, #4
 8013694:	4831      	ldr	r0, [pc, #196]	; (801375c <emac_start(unsigned char*)+0x13c>)
 8013696:	f7ff f8df 	bl	8012858 <gpio_init>
 801369a:	2302      	movs	r3, #2
 801369c:	2203      	movs	r2, #3
 801369e:	2118      	movs	r1, #24
 80136a0:	482f      	ldr	r0, [pc, #188]	; (8013760 <emac_start(unsigned char*)+0x140>)
 80136a2:	f7ff f8d9 	bl	8012858 <gpio_init>
 80136a6:	2310      	movs	r3, #16
 80136a8:	2203      	movs	r2, #3
 80136aa:	2104      	movs	r1, #4
 80136ac:	482c      	ldr	r0, [pc, #176]	; (8013760 <emac_start(unsigned char*)+0x140>)
 80136ae:	f7ff f8d3 	bl	8012858 <gpio_init>
 80136b2:	2320      	movs	r3, #32
 80136b4:	2203      	movs	r2, #3
 80136b6:	2104      	movs	r1, #4
 80136b8:	4829      	ldr	r0, [pc, #164]	; (8013760 <emac_start(unsigned char*)+0x140>)
 80136ba:	f7ff f8cd 	bl	8012858 <gpio_init>
 80136be:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80136c2:	2203      	movs	r2, #3
 80136c4:	2118      	movs	r1, #24
 80136c6:	4827      	ldr	r0, [pc, #156]	; (8013764 <emac_start(unsigned char*)+0x144>)
 80136c8:	f7ff f8c6 	bl	8012858 <gpio_init>
 80136cc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80136d0:	2203      	movs	r2, #3
 80136d2:	2118      	movs	r1, #24
 80136d4:	4823      	ldr	r0, [pc, #140]	; (8013764 <emac_start(unsigned char*)+0x144>)
 80136d6:	f7ff f8bf 	bl	8012858 <gpio_init>
 80136da:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80136de:	2203      	movs	r2, #3
 80136e0:	2118      	movs	r1, #24
 80136e2:	4820      	ldr	r0, [pc, #128]	; (8013764 <emac_start(unsigned char*)+0x144>)
 80136e4:	f7ff f8b8 	bl	8012858 <gpio_init>
 80136e8:	f240 500e 	movw	r0, #1294	; 0x50e
 80136ec:	f7ff f94c 	bl	8012988 <rcu_periph_clock_enable>
 80136f0:	f240 500f 	movw	r0, #1295	; 0x50f
 80136f4:	f7ff f948 	bl	8012988 <rcu_periph_clock_enable>
 80136f8:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80136fc:	f7ff f944 	bl	8012988 <rcu_periph_clock_enable>
 8013700:	f000 fd5c 	bl	80141bc <enet_deinit>
 8013704:	f000 f9ba 	bl	8013a7c <enet_software_reset>
 8013708:	4604      	mov	r4, r0
 801370a:	b138      	cbz	r0, 801371c <emac_start(unsigned char*)+0xfc>
 801370c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8013710:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013714:	2001      	movs	r0, #1
 8013716:	f000 fb35 	bl	8013d84 <enet_init>
 801371a:	4604      	mov	r4, r0
 801371c:	4628      	mov	r0, r5
 801371e:	f000 fe83 	bl	8014428 <mac_address_get(unsigned char*)>
 8013722:	4629      	mov	r1, r5
 8013724:	2000      	movs	r0, #0
 8013726:	f000 fa8d 	bl	8013c44 <enet_mac_address_set>
 801372a:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 801372e:	f000 f9b9 	bl	8013aa4 <enet_descriptors_chain_init>
 8013732:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8013736:	f000 f9b5 	bl	8013aa4 <enet_descriptors_chain_init>
 801373a:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 801373e:	480a      	ldr	r0, [pc, #40]	; (8013768 <emac_start(unsigned char*)+0x148>)
 8013740:	f000 fa7a 	bl	8013c38 <enet_transmit_checksum_config>
 8013744:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013748:	4808      	ldr	r0, [pc, #32]	; (801376c <emac_start(unsigned char*)+0x14c>)
 801374a:	f000 fa75 	bl	8013c38 <enet_transmit_checksum_config>
 801374e:	f000 fcad 	bl	80140ac <enet_enable>
 8013752:	fab4 f084 	clz	r0, r4
 8013756:	0940      	lsrs	r0, r0, #5
 8013758:	4240      	negs	r0, r0
 801375a:	bd38      	pop	{r3, r4, r5, pc}
 801375c:	40010800 	andmi	r0, r1, r0, lsl #16
 8013760:	40011000 	andmi	r1, r1, r0
 8013764:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013768:	20014b68 	andcs	r4, r1, r8, ror #22
 801376c:	20014b78 	andcs	r4, r1, r8, ror fp

08013770 <net::link_register_read()>:
 8013770:	b507      	push	{r0, r1, r2, lr}
 8013772:	2201      	movs	r2, #1
 8013774:	f10d 0306 	add.w	r3, sp, #6
 8013778:	4611      	mov	r1, r2
 801377a:	2000      	movs	r0, #0
 801377c:	f000 fa7a 	bl	8013c74 <enet_phy_write_read>
 8013780:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013784:	f080 0004 	eor.w	r0, r0, #4
 8013788:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801378c:	b003      	add	sp, #12
 801378e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013794 <adc_mode_config>:
 8013794:	4b06      	ldr	r3, [pc, #24]	; (80137b0 <adc_mode_config+0x1c>)
 8013796:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801379a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 801379e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80137a2:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80137a6:	4302      	orrs	r2, r0
 80137a8:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80137ac:	4770      	bx	lr
 80137ae:	bf00      	nop
 80137b0:	40012000 	andmi	r2, r1, r0

080137b4 <adc_special_function_config>:
 80137b4:	b510      	push	{r4, lr}
 80137b6:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80137ba:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80137be:	f001 0102 	and.w	r1, r1, #2
 80137c2:	b17a      	cbz	r2, 80137e4 <adc_special_function_config+0x30>
 80137c4:	b11b      	cbz	r3, 80137ce <adc_special_function_config+0x1a>
 80137c6:	6843      	ldr	r3, [r0, #4]
 80137c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80137cc:	6043      	str	r3, [r0, #4]
 80137ce:	b11c      	cbz	r4, 80137d8 <adc_special_function_config+0x24>
 80137d0:	6843      	ldr	r3, [r0, #4]
 80137d2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80137d6:	6043      	str	r3, [r0, #4]
 80137d8:	b119      	cbz	r1, 80137e2 <adc_special_function_config+0x2e>
 80137da:	6883      	ldr	r3, [r0, #8]
 80137dc:	f043 0302 	orr.w	r3, r3, #2
 80137e0:	6083      	str	r3, [r0, #8]
 80137e2:	bd10      	pop	{r4, pc}
 80137e4:	b11b      	cbz	r3, 80137ee <adc_special_function_config+0x3a>
 80137e6:	6843      	ldr	r3, [r0, #4]
 80137e8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80137ec:	6043      	str	r3, [r0, #4]
 80137ee:	b11c      	cbz	r4, 80137f8 <adc_special_function_config+0x44>
 80137f0:	6843      	ldr	r3, [r0, #4]
 80137f2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80137f6:	6043      	str	r3, [r0, #4]
 80137f8:	2900      	cmp	r1, #0
 80137fa:	d0f2      	beq.n	80137e2 <adc_special_function_config+0x2e>
 80137fc:	6883      	ldr	r3, [r0, #8]
 80137fe:	f023 0302 	bic.w	r3, r3, #2
 8013802:	e7ed      	b.n	80137e0 <adc_special_function_config+0x2c>

08013804 <adc_data_alignment_config>:
 8013804:	6883      	ldr	r3, [r0, #8]
 8013806:	b119      	cbz	r1, 8013810 <adc_data_alignment_config+0xc>
 8013808:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801380c:	6083      	str	r3, [r0, #8]
 801380e:	4770      	bx	lr
 8013810:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013814:	e7fa      	b.n	801380c <adc_data_alignment_config+0x8>

08013816 <adc_enable>:
 8013816:	6883      	ldr	r3, [r0, #8]
 8013818:	07db      	lsls	r3, r3, #31
 801381a:	bf5e      	ittt	pl
 801381c:	6883      	ldrpl	r3, [r0, #8]
 801381e:	f043 0301 	orrpl.w	r3, r3, #1
 8013822:	6083      	strpl	r3, [r0, #8]
 8013824:	4770      	bx	lr

08013826 <adc_calibration_enable>:
 8013826:	6883      	ldr	r3, [r0, #8]
 8013828:	f100 0208 	add.w	r2, r0, #8
 801382c:	f043 0308 	orr.w	r3, r3, #8
 8013830:	6083      	str	r3, [r0, #8]
 8013832:	6813      	ldr	r3, [r2, #0]
 8013834:	0719      	lsls	r1, r3, #28
 8013836:	d4fc      	bmi.n	8013832 <adc_calibration_enable+0xc>
 8013838:	6883      	ldr	r3, [r0, #8]
 801383a:	f043 0304 	orr.w	r3, r3, #4
 801383e:	6083      	str	r3, [r0, #8]
 8013840:	6813      	ldr	r3, [r2, #0]
 8013842:	075b      	lsls	r3, r3, #29
 8013844:	d4fc      	bmi.n	8013840 <adc_calibration_enable+0x1a>
 8013846:	4770      	bx	lr

08013848 <adc_tempsensor_vrefint_enable>:
 8013848:	4a03      	ldr	r2, [pc, #12]	; (8013858 <adc_tempsensor_vrefint_enable+0x10>)
 801384a:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801384e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8013852:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8013856:	4770      	bx	lr
 8013858:	40012000 	andmi	r2, r1, r0

0801385c <adc_channel_length_config>:
 801385c:	2901      	cmp	r1, #1
 801385e:	d002      	beq.n	8013866 <adc_channel_length_config+0xa>
 8013860:	2902      	cmp	r1, #2
 8013862:	d00c      	beq.n	801387e <adc_channel_length_config+0x22>
 8013864:	4770      	bx	lr
 8013866:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013868:	3a01      	subs	r2, #1
 801386a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801386e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8013870:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013872:	0512      	lsls	r2, r2, #20
 8013874:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8013878:	431a      	orrs	r2, r3
 801387a:	62c2      	str	r2, [r0, #44]	; 0x2c
 801387c:	4770      	bx	lr
 801387e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013880:	3a01      	subs	r2, #1
 8013882:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8013886:	6383      	str	r3, [r0, #56]	; 0x38
 8013888:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801388a:	0512      	lsls	r2, r2, #20
 801388c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8013890:	431a      	orrs	r2, r3
 8013892:	6382      	str	r2, [r0, #56]	; 0x38
 8013894:	4770      	bx	lr

08013896 <adc_inserted_channel_config>:
 8013896:	b530      	push	{r4, r5, lr}
 8013898:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801389a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801389c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80138a0:	1a61      	subs	r1, r4, r1
 80138a2:	f06f 0404 	mvn.w	r4, #4
 80138a6:	4361      	muls	r1, r4
 80138a8:	241f      	movs	r4, #31
 80138aa:	310f      	adds	r1, #15
 80138ac:	408c      	lsls	r4, r1
 80138ae:	ea25 0504 	bic.w	r5, r5, r4
 80138b2:	fa02 f101 	lsl.w	r1, r2, r1
 80138b6:	4329      	orrs	r1, r5
 80138b8:	2a09      	cmp	r2, #9
 80138ba:	6381      	str	r1, [r0, #56]	; 0x38
 80138bc:	d80b      	bhi.n	80138d6 <adc_inserted_channel_config+0x40>
 80138be:	2407      	movs	r4, #7
 80138c0:	6901      	ldr	r1, [r0, #16]
 80138c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80138c6:	4094      	lsls	r4, r2
 80138c8:	ea21 0104 	bic.w	r1, r1, r4
 80138cc:	fa03 f202 	lsl.w	r2, r3, r2
 80138d0:	430a      	orrs	r2, r1
 80138d2:	6102      	str	r2, [r0, #16]
 80138d4:	bd30      	pop	{r4, r5, pc}
 80138d6:	2a11      	cmp	r2, #17
 80138d8:	d8fc      	bhi.n	80138d4 <adc_inserted_channel_config+0x3e>
 80138da:	2407      	movs	r4, #7
 80138dc:	3a0a      	subs	r2, #10
 80138de:	68c1      	ldr	r1, [r0, #12]
 80138e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80138e4:	4094      	lsls	r4, r2
 80138e6:	ea21 0104 	bic.w	r1, r1, r4
 80138ea:	4093      	lsls	r3, r2
 80138ec:	430b      	orrs	r3, r1
 80138ee:	60c3      	str	r3, [r0, #12]
 80138f0:	e7f0      	b.n	80138d4 <adc_inserted_channel_config+0x3e>

080138f2 <adc_external_trigger_source_config>:
 80138f2:	2901      	cmp	r1, #1
 80138f4:	d002      	beq.n	80138fc <adc_external_trigger_source_config+0xa>
 80138f6:	2902      	cmp	r1, #2
 80138f8:	d008      	beq.n	801390c <adc_external_trigger_source_config+0x1a>
 80138fa:	4770      	bx	lr
 80138fc:	6883      	ldr	r3, [r0, #8]
 80138fe:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8013902:	6083      	str	r3, [r0, #8]
 8013904:	6883      	ldr	r3, [r0, #8]
 8013906:	4313      	orrs	r3, r2
 8013908:	6083      	str	r3, [r0, #8]
 801390a:	4770      	bx	lr
 801390c:	6883      	ldr	r3, [r0, #8]
 801390e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013912:	e7f6      	b.n	8013902 <adc_external_trigger_source_config+0x10>

08013914 <adc_external_trigger_config>:
 8013914:	f001 0301 	and.w	r3, r1, #1
 8013918:	f001 0102 	and.w	r1, r1, #2
 801391c:	b152      	cbz	r2, 8013934 <adc_external_trigger_config+0x20>
 801391e:	b11b      	cbz	r3, 8013928 <adc_external_trigger_config+0x14>
 8013920:	6883      	ldr	r3, [r0, #8]
 8013922:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8013926:	6083      	str	r3, [r0, #8]
 8013928:	b119      	cbz	r1, 8013932 <adc_external_trigger_config+0x1e>
 801392a:	6883      	ldr	r3, [r0, #8]
 801392c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8013930:	6083      	str	r3, [r0, #8]
 8013932:	4770      	bx	lr
 8013934:	b11b      	cbz	r3, 801393e <adc_external_trigger_config+0x2a>
 8013936:	6883      	ldr	r3, [r0, #8]
 8013938:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 801393c:	6083      	str	r3, [r0, #8]
 801393e:	2900      	cmp	r1, #0
 8013940:	d0f7      	beq.n	8013932 <adc_external_trigger_config+0x1e>
 8013942:	6883      	ldr	r3, [r0, #8]
 8013944:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8013948:	e7f2      	b.n	8013930 <adc_external_trigger_config+0x1c>

0801394a <adc_software_trigger_enable>:
 801394a:	07ca      	lsls	r2, r1, #31
 801394c:	bf42      	ittt	mi
 801394e:	6883      	ldrmi	r3, [r0, #8]
 8013950:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8013954:	6083      	strmi	r3, [r0, #8]
 8013956:	078b      	lsls	r3, r1, #30
 8013958:	bf42      	ittt	mi
 801395a:	6883      	ldrmi	r3, [r0, #8]
 801395c:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8013960:	6083      	strmi	r3, [r0, #8]
 8013962:	4770      	bx	lr

08013964 <dma_deinit>:
 8013964:	4b0c      	ldr	r3, [pc, #48]	; (8013998 <dma_deinit+0x34>)
 8013966:	4298      	cmp	r0, r3
 8013968:	d102      	bne.n	8013970 <dma_deinit+0xc>
 801396a:	2904      	cmp	r1, #4
 801396c:	d900      	bls.n	8013970 <dma_deinit+0xc>
 801396e:	e7fe      	b.n	801396e <dma_deinit+0xa>
 8013970:	2314      	movs	r3, #20
 8013972:	fb03 0301 	mla	r3, r3, r1, r0
 8013976:	689a      	ldr	r2, [r3, #8]
 8013978:	0089      	lsls	r1, r1, #2
 801397a:	f022 0201 	bic.w	r2, r2, #1
 801397e:	609a      	str	r2, [r3, #8]
 8013980:	2200      	movs	r2, #0
 8013982:	609a      	str	r2, [r3, #8]
 8013984:	60da      	str	r2, [r3, #12]
 8013986:	611a      	str	r2, [r3, #16]
 8013988:	615a      	str	r2, [r3, #20]
 801398a:	230f      	movs	r3, #15
 801398c:	6842      	ldr	r2, [r0, #4]
 801398e:	408b      	lsls	r3, r1
 8013990:	4313      	orrs	r3, r2
 8013992:	6043      	str	r3, [r0, #4]
 8013994:	4770      	bx	lr
 8013996:	bf00      	nop
 8013998:	40020400 	andmi	r0, r2, r0, lsl #8

0801399c <dma_struct_para_init>:
 801399c:	2300      	movs	r3, #0
 801399e:	e9c0 3300 	strd	r3, r3, [r0]
 80139a2:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80139a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80139aa:	8303      	strh	r3, [r0, #24]
 80139ac:	7683      	strb	r3, [r0, #26]
 80139ae:	4770      	bx	lr

080139b0 <dma_init>:
 80139b0:	4b1b      	ldr	r3, [pc, #108]	; (8013a20 <dma_init+0x70>)
 80139b2:	b510      	push	{r4, lr}
 80139b4:	4298      	cmp	r0, r3
 80139b6:	d102      	bne.n	80139be <dma_init+0xe>
 80139b8:	2904      	cmp	r1, #4
 80139ba:	d900      	bls.n	80139be <dma_init+0xe>
 80139bc:	e7fe      	b.n	80139bc <dma_init+0xc>
 80139be:	2314      	movs	r3, #20
 80139c0:	fb03 0101 	mla	r1, r3, r1, r0
 80139c4:	6813      	ldr	r3, [r2, #0]
 80139c6:	610b      	str	r3, [r1, #16]
 80139c8:	6893      	ldr	r3, [r2, #8]
 80139ca:	614b      	str	r3, [r1, #20]
 80139cc:	8a13      	ldrh	r3, [r2, #16]
 80139ce:	60cb      	str	r3, [r1, #12]
 80139d0:	68d4      	ldr	r4, [r2, #12]
 80139d2:	6853      	ldr	r3, [r2, #4]
 80139d4:	6888      	ldr	r0, [r1, #8]
 80139d6:	4323      	orrs	r3, r4
 80139d8:	6954      	ldr	r4, [r2, #20]
 80139da:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80139de:	4323      	orrs	r3, r4
 80139e0:	4303      	orrs	r3, r0
 80139e2:	608b      	str	r3, [r1, #8]
 80139e4:	7e13      	ldrb	r3, [r2, #24]
 80139e6:	2b01      	cmp	r3, #1
 80139e8:	688b      	ldr	r3, [r1, #8]
 80139ea:	bf0c      	ite	eq
 80139ec:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 80139f0:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 80139f4:	608b      	str	r3, [r1, #8]
 80139f6:	7e53      	ldrb	r3, [r2, #25]
 80139f8:	2b01      	cmp	r3, #1
 80139fa:	688b      	ldr	r3, [r1, #8]
 80139fc:	bf0c      	ite	eq
 80139fe:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8013a02:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8013a06:	608b      	str	r3, [r1, #8]
 8013a08:	7e93      	ldrb	r3, [r2, #26]
 8013a0a:	b923      	cbnz	r3, 8013a16 <dma_init+0x66>
 8013a0c:	688b      	ldr	r3, [r1, #8]
 8013a0e:	f023 0310 	bic.w	r3, r3, #16
 8013a12:	608b      	str	r3, [r1, #8]
 8013a14:	bd10      	pop	{r4, pc}
 8013a16:	688b      	ldr	r3, [r1, #8]
 8013a18:	f043 0310 	orr.w	r3, r3, #16
 8013a1c:	e7f9      	b.n	8013a12 <dma_init+0x62>
 8013a1e:	bf00      	nop
 8013a20:	40020400 	andmi	r0, r2, r0, lsl #8

08013a24 <dma_circulation_disable>:
 8013a24:	4b06      	ldr	r3, [pc, #24]	; (8013a40 <dma_circulation_disable+0x1c>)
 8013a26:	4298      	cmp	r0, r3
 8013a28:	d102      	bne.n	8013a30 <dma_circulation_disable+0xc>
 8013a2a:	2904      	cmp	r1, #4
 8013a2c:	d900      	bls.n	8013a30 <dma_circulation_disable+0xc>
 8013a2e:	e7fe      	b.n	8013a2e <dma_circulation_disable+0xa>
 8013a30:	2314      	movs	r3, #20
 8013a32:	4359      	muls	r1, r3
 8013a34:	3008      	adds	r0, #8
 8013a36:	580b      	ldr	r3, [r1, r0]
 8013a38:	f023 0320 	bic.w	r3, r3, #32
 8013a3c:	500b      	str	r3, [r1, r0]
 8013a3e:	4770      	bx	lr
 8013a40:	40020400 	andmi	r0, r2, r0, lsl #8

08013a44 <dma_memory_to_memory_disable>:
 8013a44:	4b06      	ldr	r3, [pc, #24]	; (8013a60 <dma_memory_to_memory_disable+0x1c>)
 8013a46:	4298      	cmp	r0, r3
 8013a48:	d102      	bne.n	8013a50 <dma_memory_to_memory_disable+0xc>
 8013a4a:	2904      	cmp	r1, #4
 8013a4c:	d900      	bls.n	8013a50 <dma_memory_to_memory_disable+0xc>
 8013a4e:	e7fe      	b.n	8013a4e <dma_memory_to_memory_disable+0xa>
 8013a50:	2314      	movs	r3, #20
 8013a52:	4359      	muls	r1, r3
 8013a54:	3008      	adds	r0, #8
 8013a56:	580b      	ldr	r3, [r1, r0]
 8013a58:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8013a5c:	500b      	str	r3, [r1, r0]
 8013a5e:	4770      	bx	lr
 8013a60:	40020400 	andmi	r0, r2, r0, lsl #8

08013a64 <enet_delay>:
 8013a64:	2300      	movs	r3, #0
 8013a66:	b082      	sub	sp, #8
 8013a68:	9301      	str	r3, [sp, #4]
 8013a6a:	9001      	str	r0, [sp, #4]
 8013a6c:	9b01      	ldr	r3, [sp, #4]
 8013a6e:	b90b      	cbnz	r3, 8013a74 <enet_delay+0x10>
 8013a70:	b002      	add	sp, #8
 8013a72:	4770      	bx	lr
 8013a74:	9b01      	ldr	r3, [sp, #4]
 8013a76:	3b01      	subs	r3, #1
 8013a78:	9301      	str	r3, [sp, #4]
 8013a7a:	e7f7      	b.n	8013a6c <enet_delay+0x8>

08013a7c <enet_software_reset>:
 8013a7c:	4b07      	ldr	r3, [pc, #28]	; (8013a9c <enet_software_reset+0x20>)
 8013a7e:	681a      	ldr	r2, [r3, #0]
 8013a80:	f042 0201 	orr.w	r2, r2, #1
 8013a84:	601a      	str	r2, [r3, #0]
 8013a86:	4a06      	ldr	r2, [pc, #24]	; (8013aa0 <enet_software_reset+0x24>)
 8013a88:	6819      	ldr	r1, [r3, #0]
 8013a8a:	07c9      	lsls	r1, r1, #31
 8013a8c:	d501      	bpl.n	8013a92 <enet_software_reset+0x16>
 8013a8e:	3a01      	subs	r2, #1
 8013a90:	d1fa      	bne.n	8013a88 <enet_software_reset+0xc>
 8013a92:	6818      	ldr	r0, [r3, #0]
 8013a94:	43c0      	mvns	r0, r0
 8013a96:	f000 0001 	and.w	r0, r0, #1
 8013a9a:	4770      	bx	lr
 8013a9c:	40029000 	andmi	r9, r2, r0
 8013aa0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08013aa4 <enet_descriptors_chain_init>:
 8013aa4:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8013aa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013aaa:	4a19      	ldr	r2, [pc, #100]	; (8013b10 <enet_descriptors_chain_init+0x6c>)
 8013aac:	d125      	bne.n	8013afa <enet_descriptors_chain_init+0x56>
 8013aae:	2500      	movs	r5, #0
 8013ab0:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8013ab4:	2002      	movs	r0, #2
 8013ab6:	4b17      	ldr	r3, [pc, #92]	; (8013b14 <enet_descriptors_chain_init+0x70>)
 8013ab8:	4c17      	ldr	r4, [pc, #92]	; (8013b18 <enet_descriptors_chain_init+0x74>)
 8013aba:	6113      	str	r3, [r2, #16]
 8013abc:	4a17      	ldr	r2, [pc, #92]	; (8013b1c <enet_descriptors_chain_init+0x78>)
 8013abe:	6013      	str	r3, [r2, #0]
 8013ac0:	2200      	movs	r2, #0
 8013ac2:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8013ac6:	4916      	ldr	r1, [pc, #88]	; (8013b20 <enet_descriptors_chain_init+0x7c>)
 8013ac8:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8013acc:	600a      	str	r2, [r1, #0]
 8013ace:	4915      	ldr	r1, [pc, #84]	; (8013b24 <enet_descriptors_chain_init+0x80>)
 8013ad0:	600a      	str	r2, [r1, #0]
 8013ad2:	f103 0110 	add.w	r1, r3, #16
 8013ad6:	fb0e 4702 	mla	r7, lr, r2, r4
 8013ada:	f841 7c08 	str.w	r7, [r1, #-8]
 8013ade:	4594      	cmp	ip, r2
 8013ae0:	bf94      	ite	ls
 8013ae2:	461f      	movls	r7, r3
 8013ae4:	460f      	movhi	r7, r1
 8013ae6:	3201      	adds	r2, #1
 8013ae8:	4290      	cmp	r0, r2
 8013aea:	e941 6504 	strd	r6, r5, [r1, #-16]
 8013aee:	f841 7c04 	str.w	r7, [r1, #-4]
 8013af2:	f101 0110 	add.w	r1, r1, #16
 8013af6:	d1ee      	bne.n	8013ad6 <enet_descriptors_chain_init+0x32>
 8013af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013afa:	4b0b      	ldr	r3, [pc, #44]	; (8013b28 <enet_descriptors_chain_init+0x84>)
 8013afc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8013b00:	60d3      	str	r3, [r2, #12]
 8013b02:	4a0a      	ldr	r2, [pc, #40]	; (8013b2c <enet_descriptors_chain_init+0x88>)
 8013b04:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8013b08:	2008      	movs	r0, #8
 8013b0a:	4c09      	ldr	r4, [pc, #36]	; (8013b30 <enet_descriptors_chain_init+0x8c>)
 8013b0c:	6013      	str	r3, [r2, #0]
 8013b0e:	e7d7      	b.n	8013ac0 <enet_descriptors_chain_init+0x1c>
 8013b10:	40029000 	andmi	r9, r2, r0
 8013b14:	20014b68 	andcs	r4, r1, r8, ror #22
 8013b18:	20013f80 	andcs	r3, r1, r0, lsl #31
 8013b1c:	20010f20 	andcs	r0, r1, r0, lsr #30
 8013b20:	20010f14 	andcs	r0, r1, r4, lsl pc
 8013b24:	20010f18 	andcs	r0, r1, r8, lsl pc
 8013b28:	20013f00 	andcs	r3, r1, r0, lsl #30
 8013b2c:	20010f1c 	andcs	r0, r1, ip, lsl pc
 8013b30:	20010f60 	andcs	r0, r1, r0, ror #30

08013b34 <enet_frame_receive>:
 8013b34:	4a1d      	ldr	r2, [pc, #116]	; (8013bac <enet_frame_receive+0x78>)
 8013b36:	b510      	push	{r4, lr}
 8013b38:	6813      	ldr	r3, [r2, #0]
 8013b3a:	681b      	ldr	r3, [r3, #0]
 8013b3c:	2b00      	cmp	r3, #0
 8013b3e:	db33      	blt.n	8013ba8 <enet_frame_receive+0x74>
 8013b40:	b970      	cbnz	r0, 8013b60 <enet_frame_receive+0x2c>
 8013b42:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8013b46:	6813      	ldr	r3, [r2, #0]
 8013b48:	6019      	str	r1, [r3, #0]
 8013b4a:	4919      	ldr	r1, [pc, #100]	; (8013bb0 <enet_frame_receive+0x7c>)
 8013b4c:	6948      	ldr	r0, [r1, #20]
 8013b4e:	0604      	lsls	r4, r0, #24
 8013b50:	d419      	bmi.n	8013b86 <enet_frame_receive+0x52>
 8013b52:	6859      	ldr	r1, [r3, #4]
 8013b54:	0448      	lsls	r0, r1, #17
 8013b56:	d51b      	bpl.n	8013b90 <enet_frame_receive+0x5c>
 8013b58:	68db      	ldr	r3, [r3, #12]
 8013b5a:	2001      	movs	r0, #1
 8013b5c:	6013      	str	r3, [r2, #0]
 8013b5e:	bd10      	pop	{r4, pc}
 8013b60:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8013b64:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8013b68:	d11e      	bne.n	8013ba8 <enet_frame_receive+0x74>
 8013b6a:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8013b6e:	3b04      	subs	r3, #4
 8013b70:	428b      	cmp	r3, r1
 8013b72:	d819      	bhi.n	8013ba8 <enet_frame_receive+0x74>
 8013b74:	2100      	movs	r1, #0
 8013b76:	4299      	cmp	r1, r3
 8013b78:	6814      	ldr	r4, [r2, #0]
 8013b7a:	d2e2      	bcs.n	8013b42 <enet_frame_receive+0xe>
 8013b7c:	68a4      	ldr	r4, [r4, #8]
 8013b7e:	5d0c      	ldrb	r4, [r1, r4]
 8013b80:	5444      	strb	r4, [r0, r1]
 8013b82:	3101      	adds	r1, #1
 8013b84:	e7f7      	b.n	8013b76 <enet_frame_receive+0x42>
 8013b86:	2080      	movs	r0, #128	; 0x80
 8013b88:	6148      	str	r0, [r1, #20]
 8013b8a:	2000      	movs	r0, #0
 8013b8c:	6088      	str	r0, [r1, #8]
 8013b8e:	e7e0      	b.n	8013b52 <enet_frame_receive+0x1e>
 8013b90:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8013b94:	4906      	ldr	r1, [pc, #24]	; (8013bb0 <enet_frame_receive+0x7c>)
 8013b96:	bf05      	ittet	eq
 8013b98:	3310      	addeq	r3, #16
 8013b9a:	6809      	ldreq	r1, [r1, #0]
 8013b9c:	68cb      	ldrne	r3, [r1, #12]
 8013b9e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8013ba2:	bf08      	it	eq
 8013ba4:	185b      	addeq	r3, r3, r1
 8013ba6:	e7d8      	b.n	8013b5a <enet_frame_receive+0x26>
 8013ba8:	2000      	movs	r0, #0
 8013baa:	e7d8      	b.n	8013b5e <enet_frame_receive+0x2a>
 8013bac:	20010f1c 	andcs	r0, r1, ip, lsl pc
 8013bb0:	40029000 	andmi	r9, r2, r0

08013bb4 <enet_frame_transmit>:
 8013bb4:	4a1e      	ldr	r2, [pc, #120]	; (8013c30 <enet_frame_transmit+0x7c>)
 8013bb6:	b530      	push	{r4, r5, lr}
 8013bb8:	6813      	ldr	r3, [r2, #0]
 8013bba:	681b      	ldr	r3, [r3, #0]
 8013bbc:	2b00      	cmp	r3, #0
 8013bbe:	db34      	blt.n	8013c2a <enet_frame_transmit+0x76>
 8013bc0:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8013bc4:	4299      	cmp	r1, r3
 8013bc6:	d830      	bhi.n	8013c2a <enet_frame_transmit+0x76>
 8013bc8:	b9e8      	cbnz	r0, 8013c06 <enet_frame_transmit+0x52>
 8013bca:	6813      	ldr	r3, [r2, #0]
 8013bcc:	4819      	ldr	r0, [pc, #100]	; (8013c34 <enet_frame_transmit+0x80>)
 8013bce:	6059      	str	r1, [r3, #4]
 8013bd0:	6819      	ldr	r1, [r3, #0]
 8013bd2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8013bd6:	6019      	str	r1, [r3, #0]
 8013bd8:	6941      	ldr	r1, [r0, #20]
 8013bda:	6944      	ldr	r4, [r0, #20]
 8013bdc:	f001 0104 	and.w	r1, r1, #4
 8013be0:	f004 0420 	and.w	r4, r4, #32
 8013be4:	4321      	orrs	r1, r4
 8013be6:	d110      	bne.n	8013c0a <enet_frame_transmit+0x56>
 8013be8:	6819      	ldr	r1, [r3, #0]
 8013bea:	02c8      	lsls	r0, r1, #11
 8013bec:	d511      	bpl.n	8013c12 <enet_frame_transmit+0x5e>
 8013bee:	68db      	ldr	r3, [r3, #12]
 8013bf0:	2001      	movs	r0, #1
 8013bf2:	6013      	str	r3, [r2, #0]
 8013bf4:	bd30      	pop	{r4, r5, pc}
 8013bf6:	5cc5      	ldrb	r5, [r0, r3]
 8013bf8:	68a4      	ldr	r4, [r4, #8]
 8013bfa:	551d      	strb	r5, [r3, r4]
 8013bfc:	3301      	adds	r3, #1
 8013bfe:	428b      	cmp	r3, r1
 8013c00:	6814      	ldr	r4, [r2, #0]
 8013c02:	d1f8      	bne.n	8013bf6 <enet_frame_transmit+0x42>
 8013c04:	e7e1      	b.n	8013bca <enet_frame_transmit+0x16>
 8013c06:	2300      	movs	r3, #0
 8013c08:	e7f9      	b.n	8013bfe <enet_frame_transmit+0x4a>
 8013c0a:	6141      	str	r1, [r0, #20]
 8013c0c:	2100      	movs	r1, #0
 8013c0e:	6041      	str	r1, [r0, #4]
 8013c10:	e7ea      	b.n	8013be8 <enet_frame_transmit+0x34>
 8013c12:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8013c16:	4907      	ldr	r1, [pc, #28]	; (8013c34 <enet_frame_transmit+0x80>)
 8013c18:	bf05      	ittet	eq
 8013c1a:	3310      	addeq	r3, #16
 8013c1c:	6809      	ldreq	r1, [r1, #0]
 8013c1e:	690b      	ldrne	r3, [r1, #16]
 8013c20:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8013c24:	bf08      	it	eq
 8013c26:	185b      	addeq	r3, r3, r1
 8013c28:	e7e2      	b.n	8013bf0 <enet_frame_transmit+0x3c>
 8013c2a:	2000      	movs	r0, #0
 8013c2c:	e7e2      	b.n	8013bf4 <enet_frame_transmit+0x40>
 8013c2e:	bf00      	nop
 8013c30:	20010f20 	andcs	r0, r1, r0, lsr #30
 8013c34:	40029000 	andmi	r9, r2, r0

08013c38 <enet_transmit_checksum_config>:
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8013c3e:	430b      	orrs	r3, r1
 8013c40:	6003      	str	r3, [r0, #0]
 8013c42:	4770      	bx	lr

08013c44 <enet_mac_address_set>:
 8013c44:	888a      	ldrh	r2, [r1, #4]
 8013c46:	4b03      	ldr	r3, [pc, #12]	; (8013c54 <enet_mac_address_set+0x10>)
 8013c48:	50c2      	str	r2, [r0, r3]
 8013c4a:	680a      	ldr	r2, [r1, #0]
 8013c4c:	3304      	adds	r3, #4
 8013c4e:	50c2      	str	r2, [r0, r3]
 8013c50:	4770      	bx	lr
 8013c52:	bf00      	nop
 8013c54:	40028040 	andmi	r8, r2, r0, asr #32

08013c58 <enet_rx_enable>:
 8013c58:	4a05      	ldr	r2, [pc, #20]	; (8013c70 <enet_rx_enable+0x18>)
 8013c5a:	6813      	ldr	r3, [r2, #0]
 8013c5c:	f043 0304 	orr.w	r3, r3, #4
 8013c60:	6013      	str	r3, [r2, #0]
 8013c62:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8013c66:	6993      	ldr	r3, [r2, #24]
 8013c68:	f043 0302 	orr.w	r3, r3, #2
 8013c6c:	6193      	str	r3, [r2, #24]
 8013c6e:	4770      	bx	lr
 8013c70:	40028000 	andmi	r8, r2, r0

08013c74 <enet_phy_write_read>:
 8013c74:	b530      	push	{r4, r5, lr}
 8013c76:	4604      	mov	r4, r0
 8013c78:	4d13      	ldr	r5, [pc, #76]	; (8013cc8 <enet_phy_write_read+0x54>)
 8013c7a:	0192      	lsls	r2, r2, #6
 8013c7c:	6928      	ldr	r0, [r5, #16]
 8013c7e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8013c82:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8013c86:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8013c8a:	4302      	orrs	r2, r0
 8013c8c:	02c9      	lsls	r1, r1, #11
 8013c8e:	b289      	uxth	r1, r1
 8013c90:	2c02      	cmp	r4, #2
 8013c92:	ea42 0204 	orr.w	r2, r2, r4
 8013c96:	ea42 0201 	orr.w	r2, r2, r1
 8013c9a:	bf08      	it	eq
 8013c9c:	8819      	ldrheq	r1, [r3, #0]
 8013c9e:	f042 0201 	orr.w	r2, r2, #1
 8013ca2:	bf08      	it	eq
 8013ca4:	6169      	streq	r1, [r5, #20]
 8013ca6:	612a      	str	r2, [r5, #16]
 8013ca8:	4907      	ldr	r1, [pc, #28]	; (8013cc8 <enet_phy_write_read+0x54>)
 8013caa:	4a08      	ldr	r2, [pc, #32]	; (8013ccc <enet_phy_write_read+0x58>)
 8013cac:	6908      	ldr	r0, [r1, #16]
 8013cae:	07c0      	lsls	r0, r0, #31
 8013cb0:	d501      	bpl.n	8013cb6 <enet_phy_write_read+0x42>
 8013cb2:	3a01      	subs	r2, #1
 8013cb4:	d1fa      	bne.n	8013cac <enet_phy_write_read+0x38>
 8013cb6:	690a      	ldr	r2, [r1, #16]
 8013cb8:	43d2      	mvns	r2, r2
 8013cba:	f002 0001 	and.w	r0, r2, #1
 8013cbe:	b90c      	cbnz	r4, 8013cc4 <enet_phy_write_read+0x50>
 8013cc0:	694a      	ldr	r2, [r1, #20]
 8013cc2:	801a      	strh	r2, [r3, #0]
 8013cc4:	bd30      	pop	{r4, r5, pc}
 8013cc6:	bf00      	nop
 8013cc8:	40028000 	andmi	r8, r2, r0
 8013ccc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08013cd0 <enet_phy_config>:
 8013cd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013cd2:	4d22      	ldr	r5, [pc, #136]	; (8013d5c <enet_phy_config+0x8c>)
 8013cd4:	2001      	movs	r0, #1
 8013cd6:	692c      	ldr	r4, [r5, #16]
 8013cd8:	f7fe ff26 	bl	8012b28 <rcu_clock_freq_get>
 8013cdc:	4b20      	ldr	r3, [pc, #128]	; (8013d60 <enet_phy_config+0x90>)
 8013cde:	4a21      	ldr	r2, [pc, #132]	; (8013d64 <enet_phy_config+0x94>)
 8013ce0:	4403      	add	r3, r0
 8013ce2:	4293      	cmp	r3, r2
 8013ce4:	f024 041c 	bic.w	r4, r4, #28
 8013ce8:	d21f      	bcs.n	8013d2a <enet_phy_config+0x5a>
 8013cea:	f044 0408 	orr.w	r4, r4, #8
 8013cee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013cf2:	612c      	str	r4, [r5, #16]
 8013cf4:	2200      	movs	r2, #0
 8013cf6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013cfa:	2101      	movs	r1, #1
 8013cfc:	2002      	movs	r0, #2
 8013cfe:	f10d 0306 	add.w	r3, sp, #6
 8013d02:	f7ff ffb7 	bl	8013c74 <enet_phy_write_read>
 8013d06:	b310      	cbz	r0, 8013d4e <enet_phy_config+0x7e>
 8013d08:	2200      	movs	r2, #0
 8013d0a:	4817      	ldr	r0, [pc, #92]	; (8013d68 <enet_phy_config+0x98>)
 8013d0c:	f7ff feaa 	bl	8013a64 <enet_delay>
 8013d10:	2101      	movs	r1, #1
 8013d12:	4610      	mov	r0, r2
 8013d14:	f10d 0306 	add.w	r3, sp, #6
 8013d18:	f7ff ffac 	bl	8013c74 <enet_phy_write_read>
 8013d1c:	b1b8      	cbz	r0, 8013d4e <enet_phy_config+0x7e>
 8013d1e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013d22:	43c0      	mvns	r0, r0
 8013d24:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8013d28:	e012      	b.n	8013d50 <enet_phy_config+0x80>
 8013d2a:	4b10      	ldr	r3, [pc, #64]	; (8013d6c <enet_phy_config+0x9c>)
 8013d2c:	4a10      	ldr	r2, [pc, #64]	; (8013d70 <enet_phy_config+0xa0>)
 8013d2e:	4403      	add	r3, r0
 8013d30:	4293      	cmp	r3, r2
 8013d32:	d802      	bhi.n	8013d3a <enet_phy_config+0x6a>
 8013d34:	f044 040c 	orr.w	r4, r4, #12
 8013d38:	e7d9      	b.n	8013cee <enet_phy_config+0x1e>
 8013d3a:	4b0e      	ldr	r3, [pc, #56]	; (8013d74 <enet_phy_config+0xa4>)
 8013d3c:	4a0e      	ldr	r2, [pc, #56]	; (8013d78 <enet_phy_config+0xa8>)
 8013d3e:	4403      	add	r3, r0
 8013d40:	4293      	cmp	r3, r2
 8013d42:	d9d4      	bls.n	8013cee <enet_phy_config+0x1e>
 8013d44:	4b0d      	ldr	r3, [pc, #52]	; (8013d7c <enet_phy_config+0xac>)
 8013d46:	4a0e      	ldr	r2, [pc, #56]	; (8013d80 <enet_phy_config+0xb0>)
 8013d48:	4403      	add	r3, r0
 8013d4a:	4293      	cmp	r3, r2
 8013d4c:	d902      	bls.n	8013d54 <enet_phy_config+0x84>
 8013d4e:	2000      	movs	r0, #0
 8013d50:	b003      	add	sp, #12
 8013d52:	bd30      	pop	{r4, r5, pc}
 8013d54:	f044 0404 	orr.w	r4, r4, #4
 8013d58:	e7c9      	b.n	8013cee <enet_phy_config+0x1e>
 8013d5a:	bf00      	nop
 8013d5c:	40028000 	andmi	r8, r2, r0
 8013d60:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8013d64:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8013d68:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8013d6c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8013d70:	017d783f 	cmneq	sp, pc, lsr r8
 8013d74:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8013d78:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8013d7c:	faa2b580 	blx	68c1384 <__stack_size+0x68bf384>
 8013d80:	0112a880 	tsteq	r2, r0, lsl #17

08013d84 <enet_init>:
 8013d84:	2300      	movs	r3, #0
 8013d86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013d88:	4604      	mov	r4, r0
 8013d8a:	460d      	mov	r5, r1
 8013d8c:	4616      	mov	r6, r2
 8013d8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013d92:	f7ff ff9d 	bl	8013cd0 <enet_phy_config>
 8013d96:	2800      	cmp	r0, #0
 8013d98:	d037      	beq.n	8013e0a <enet_init+0x86>
 8013d9a:	4b3b      	ldr	r3, [pc, #236]	; (8013e88 <enet_init+0x104>)
 8013d9c:	4a3b      	ldr	r2, [pc, #236]	; (8013e8c <enet_init+0x108>)
 8013d9e:	6819      	ldr	r1, [r3, #0]
 8013da0:	2c01      	cmp	r4, #1
 8013da2:	ea02 0201 	and.w	r2, r2, r1
 8013da6:	601a      	str	r2, [r3, #0]
 8013da8:	f04f 0200 	mov.w	r2, #0
 8013dac:	605a      	str	r2, [r3, #4]
 8013dae:	609a      	str	r2, [r3, #8]
 8013db0:	60da      	str	r2, [r3, #12]
 8013db2:	6999      	ldr	r1, [r3, #24]
 8013db4:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8013db8:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8013dbc:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8013dc0:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8013dc4:	6199      	str	r1, [r3, #24]
 8013dc6:	4932      	ldr	r1, [pc, #200]	; (8013e90 <enet_init+0x10c>)
 8013dc8:	61da      	str	r2, [r3, #28]
 8013dca:	6988      	ldr	r0, [r1, #24]
 8013dcc:	4b31      	ldr	r3, [pc, #196]	; (8013e94 <enet_init+0x110>)
 8013dce:	ea03 0300 	and.w	r3, r3, r0
 8013dd2:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8013dd6:	618b      	str	r3, [r1, #24]
 8013dd8:	680b      	ldr	r3, [r1, #0]
 8013dda:	4b2f      	ldr	r3, [pc, #188]	; (8013e98 <enet_init+0x114>)
 8013ddc:	600b      	str	r3, [r1, #0]
 8013dde:	d01e      	beq.n	8013e1e <enet_init+0x9a>
 8013de0:	08e3      	lsrs	r3, r4, #3
 8013de2:	0861      	lsrs	r1, r4, #1
 8013de4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8013de8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013dec:	430b      	orrs	r3, r1
 8013dee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013df2:	2101      	movs	r1, #1
 8013df4:	2002      	movs	r0, #2
 8013df6:	f10d 0306 	add.w	r3, sp, #6
 8013dfa:	f7ff ff3b 	bl	8013c74 <enet_phy_write_read>
 8013dfe:	b158      	cbz	r0, 8013e18 <enet_init+0x94>
 8013e00:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8013e04:	f7ff fe2e 	bl	8013a64 <enet_delay>
 8013e08:	e05d      	b.n	8013ec6 <enet_init+0x142>
 8013e0a:	4824      	ldr	r0, [pc, #144]	; (8013e9c <enet_init+0x118>)
 8013e0c:	f7ff fe2a 	bl	8013a64 <enet_delay>
 8013e10:	f7ff ff5e 	bl	8013cd0 <enet_phy_config>
 8013e14:	2800      	cmp	r0, #0
 8013e16:	d1c0      	bne.n	8013d9a <enet_init+0x16>
 8013e18:	2000      	movs	r0, #0
 8013e1a:	b003      	add	sp, #12
 8013e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e1e:	4614      	mov	r4, r2
 8013e20:	4f1f      	ldr	r7, [pc, #124]	; (8013ea0 <enet_init+0x11c>)
 8013e22:	2201      	movs	r2, #1
 8013e24:	2000      	movs	r0, #0
 8013e26:	4611      	mov	r1, r2
 8013e28:	f10d 0306 	add.w	r3, sp, #6
 8013e2c:	f7ff ff22 	bl	8013c74 <enet_phy_write_read>
 8013e30:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013e34:	3401      	adds	r4, #1
 8013e36:	f002 0204 	and.w	r2, r2, #4
 8013e3a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013e3e:	b912      	cbnz	r2, 8013e46 <enet_init+0xc2>
 8013e40:	42bc      	cmp	r4, r7
 8013e42:	d1ee      	bne.n	8013e22 <enet_init+0x9e>
 8013e44:	e7e8      	b.n	8013e18 <enet_init+0x94>
 8013e46:	42bc      	cmp	r4, r7
 8013e48:	d0e6      	beq.n	8013e18 <enet_init+0x94>
 8013e4a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8013e4e:	2101      	movs	r1, #1
 8013e50:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013e54:	2002      	movs	r0, #2
 8013e56:	2200      	movs	r2, #0
 8013e58:	f7ff ff0c 	bl	8013c74 <enet_phy_write_read>
 8013e5c:	2800      	cmp	r0, #0
 8013e5e:	d0db      	beq.n	8013e18 <enet_init+0x94>
 8013e60:	2400      	movs	r4, #0
 8013e62:	4f0f      	ldr	r7, [pc, #60]	; (8013ea0 <enet_init+0x11c>)
 8013e64:	2201      	movs	r2, #1
 8013e66:	2000      	movs	r0, #0
 8013e68:	4611      	mov	r1, r2
 8013e6a:	f10d 0306 	add.w	r3, sp, #6
 8013e6e:	f7ff ff01 	bl	8013c74 <enet_phy_write_read>
 8013e72:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013e76:	3401      	adds	r4, #1
 8013e78:	f002 0220 	and.w	r2, r2, #32
 8013e7c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013e80:	b982      	cbnz	r2, 8013ea4 <enet_init+0x120>
 8013e82:	42bc      	cmp	r4, r7
 8013e84:	d1ee      	bne.n	8013e64 <enet_init+0xe0>
 8013e86:	e7c7      	b.n	8013e18 <enet_init+0x94>
 8013e88:	40028000 	andmi	r8, r2, r0
 8013e8c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8013e90:	40029000 	andmi	r9, r2, r0
 8013e94:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8013e98:	02c16000 	sbceq	r6, r1, #0
 8013e9c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8013ea0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8013ea4:	42bc      	cmp	r4, r7
 8013ea6:	d0b7      	beq.n	8013e18 <enet_init+0x94>
 8013ea8:	2101      	movs	r1, #1
 8013eaa:	2210      	movs	r2, #16
 8013eac:	2000      	movs	r0, #0
 8013eae:	f7ff fee1 	bl	8013c74 <enet_phy_write_read>
 8013eb2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013eb6:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8013eba:	0799      	lsls	r1, r3, #30
 8013ebc:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8013ec0:	d401      	bmi.n	8013ec6 <enet_init+0x142>
 8013ec2:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8013ec6:	4b63      	ldr	r3, [pc, #396]	; (8014054 <enet_init+0x2d0>)
 8013ec8:	681a      	ldr	r2, [r3, #0]
 8013eca:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8013ece:	4314      	orrs	r4, r2
 8013ed0:	056a      	lsls	r2, r5, #21
 8013ed2:	601c      	str	r4, [r3, #0]
 8013ed4:	d50b      	bpl.n	8013eee <enet_init+0x16a>
 8013ed6:	681a      	ldr	r2, [r3, #0]
 8013ed8:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8013edc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8013ee0:	601a      	str	r2, [r3, #0]
 8013ee2:	4a5d      	ldr	r2, [pc, #372]	; (8014058 <enet_init+0x2d4>)
 8013ee4:	6993      	ldr	r3, [r2, #24]
 8013ee6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8013eea:	431d      	orrs	r5, r3
 8013eec:	6195      	str	r5, [r2, #24]
 8013eee:	4959      	ldr	r1, [pc, #356]	; (8014054 <enet_init+0x2d0>)
 8013ef0:	684b      	ldr	r3, [r1, #4]
 8013ef2:	431e      	orrs	r6, r3
 8013ef4:	4b59      	ldr	r3, [pc, #356]	; (801405c <enet_init+0x2d8>)
 8013ef6:	604e      	str	r6, [r1, #4]
 8013ef8:	681a      	ldr	r2, [r3, #0]
 8013efa:	07d7      	lsls	r7, r2, #31
 8013efc:	d510      	bpl.n	8013f20 <enet_init+0x19c>
 8013efe:	685a      	ldr	r2, [r3, #4]
 8013f00:	680c      	ldr	r4, [r1, #0]
 8013f02:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8013f06:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8013f0a:	4320      	orrs	r0, r4
 8013f0c:	6008      	str	r0, [r1, #0]
 8013f0e:	4852      	ldr	r0, [pc, #328]	; (8014058 <enet_init+0x2d4>)
 8013f10:	0892      	lsrs	r2, r2, #2
 8013f12:	6981      	ldr	r1, [r0, #24]
 8013f14:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8013f18:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8013f1c:	430a      	orrs	r2, r1
 8013f1e:	6182      	str	r2, [r0, #24]
 8013f20:	681a      	ldr	r2, [r3, #0]
 8013f22:	0796      	lsls	r6, r2, #30
 8013f24:	d508      	bpl.n	8013f38 <enet_init+0x1b4>
 8013f26:	494c      	ldr	r1, [pc, #304]	; (8014058 <enet_init+0x2d4>)
 8013f28:	6898      	ldr	r0, [r3, #8]
 8013f2a:	680a      	ldr	r2, [r1, #0]
 8013f2c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8013f30:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8013f34:	4302      	orrs	r2, r0
 8013f36:	600a      	str	r2, [r1, #0]
 8013f38:	681a      	ldr	r2, [r3, #0]
 8013f3a:	0755      	lsls	r5, r2, #29
 8013f3c:	d508      	bpl.n	8013f50 <enet_init+0x1cc>
 8013f3e:	4946      	ldr	r1, [pc, #280]	; (8014058 <enet_init+0x2d4>)
 8013f40:	68d8      	ldr	r0, [r3, #12]
 8013f42:	680a      	ldr	r2, [r1, #0]
 8013f44:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8013f48:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8013f4c:	4302      	orrs	r2, r0
 8013f4e:	600a      	str	r2, [r1, #0]
 8013f50:	681a      	ldr	r2, [r3, #0]
 8013f52:	0714      	lsls	r4, r2, #28
 8013f54:	d508      	bpl.n	8013f68 <enet_init+0x1e4>
 8013f56:	4940      	ldr	r1, [pc, #256]	; (8014058 <enet_init+0x2d4>)
 8013f58:	6918      	ldr	r0, [r3, #16]
 8013f5a:	680a      	ldr	r2, [r1, #0]
 8013f5c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8013f60:	f022 0202 	bic.w	r2, r2, #2
 8013f64:	4302      	orrs	r2, r0
 8013f66:	600a      	str	r2, [r1, #0]
 8013f68:	681a      	ldr	r2, [r3, #0]
 8013f6a:	06d0      	lsls	r0, r2, #27
 8013f6c:	d506      	bpl.n	8013f7c <enet_init+0x1f8>
 8013f6e:	493a      	ldr	r1, [pc, #232]	; (8014058 <enet_init+0x2d4>)
 8013f70:	4a3b      	ldr	r2, [pc, #236]	; (8014060 <enet_init+0x2dc>)
 8013f72:	6988      	ldr	r0, [r1, #24]
 8013f74:	4002      	ands	r2, r0
 8013f76:	6958      	ldr	r0, [r3, #20]
 8013f78:	4302      	orrs	r2, r0
 8013f7a:	618a      	str	r2, [r1, #24]
 8013f7c:	681a      	ldr	r2, [r3, #0]
 8013f7e:	0691      	lsls	r1, r2, #26
 8013f80:	d508      	bpl.n	8013f94 <enet_init+0x210>
 8013f82:	4935      	ldr	r1, [pc, #212]	; (8014058 <enet_init+0x2d4>)
 8013f84:	6998      	ldr	r0, [r3, #24]
 8013f86:	698a      	ldr	r2, [r1, #24]
 8013f88:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8013f8c:	f022 0204 	bic.w	r2, r2, #4
 8013f90:	4302      	orrs	r2, r0
 8013f92:	618a      	str	r2, [r1, #24]
 8013f94:	681a      	ldr	r2, [r3, #0]
 8013f96:	0652      	lsls	r2, r2, #25
 8013f98:	d506      	bpl.n	8013fa8 <enet_init+0x224>
 8013f9a:	492e      	ldr	r1, [pc, #184]	; (8014054 <enet_init+0x2d0>)
 8013f9c:	69d8      	ldr	r0, [r3, #28]
 8013f9e:	69ca      	ldr	r2, [r1, #28]
 8013fa0:	0c52      	lsrs	r2, r2, #17
 8013fa2:	0452      	lsls	r2, r2, #17
 8013fa4:	4302      	orrs	r2, r0
 8013fa6:	61ca      	str	r2, [r1, #28]
 8013fa8:	681a      	ldr	r2, [r3, #0]
 8013faa:	0617      	lsls	r7, r2, #24
 8013fac:	d517      	bpl.n	8013fde <enet_init+0x25a>
 8013fae:	4c29      	ldr	r4, [pc, #164]	; (8014054 <enet_init+0x2d0>)
 8013fb0:	6a1a      	ldr	r2, [r3, #32]
 8013fb2:	69a0      	ldr	r0, [r4, #24]
 8013fb4:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8013fb8:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8013fbc:	0400      	lsls	r0, r0, #16
 8013fbe:	0c00      	lsrs	r0, r0, #16
 8013fc0:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8013fc4:	4301      	orrs	r1, r0
 8013fc6:	4824      	ldr	r0, [pc, #144]	; (8014058 <enet_init+0x2d4>)
 8013fc8:	61a1      	str	r1, [r4, #24]
 8013fca:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8013fce:	0a12      	lsrs	r2, r2, #8
 8013fd0:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8013fd4:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8013fd8:	430a      	orrs	r2, r1
 8013fda:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8013fde:	681a      	ldr	r2, [r3, #0]
 8013fe0:	05d6      	lsls	r6, r2, #23
 8013fe2:	bf42      	ittt	mi
 8013fe4:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8013fe6:	4a1b      	ldrmi	r2, [pc, #108]	; (8014054 <enet_init+0x2d0>)
 8013fe8:	6091      	strmi	r1, [r2, #8]
 8013fea:	681a      	ldr	r2, [r3, #0]
 8013fec:	0595      	lsls	r5, r2, #22
 8013fee:	bf42      	ittt	mi
 8013ff0:	4a18      	ldrmi	r2, [pc, #96]	; (8014054 <enet_init+0x2d0>)
 8013ff2:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8013ff4:	60d1      	strmi	r1, [r2, #12]
 8013ff6:	681a      	ldr	r2, [r3, #0]
 8013ff8:	0554      	lsls	r4, r2, #21
 8013ffa:	d508      	bpl.n	801400e <enet_init+0x28a>
 8013ffc:	4915      	ldr	r1, [pc, #84]	; (8014054 <enet_init+0x2d0>)
 8013ffe:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8014000:	684a      	ldr	r2, [r1, #4]
 8014002:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8014006:	f022 0206 	bic.w	r2, r2, #6
 801400a:	4302      	orrs	r2, r0
 801400c:	604a      	str	r2, [r1, #4]
 801400e:	681a      	ldr	r2, [r3, #0]
 8014010:	0510      	lsls	r0, r2, #20
 8014012:	d508      	bpl.n	8014026 <enet_init+0x2a2>
 8014014:	490f      	ldr	r1, [pc, #60]	; (8014054 <enet_init+0x2d0>)
 8014016:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8014018:	680a      	ldr	r2, [r1, #0]
 801401a:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801401e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014022:	4302      	orrs	r2, r0
 8014024:	600a      	str	r2, [r1, #0]
 8014026:	681a      	ldr	r2, [r3, #0]
 8014028:	04d1      	lsls	r1, r2, #19
 801402a:	d506      	bpl.n	801403a <enet_init+0x2b6>
 801402c:	4909      	ldr	r1, [pc, #36]	; (8014054 <enet_init+0x2d0>)
 801402e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8014030:	680a      	ldr	r2, [r1, #0]
 8014032:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8014036:	4302      	orrs	r2, r0
 8014038:	600a      	str	r2, [r1, #0]
 801403a:	681a      	ldr	r2, [r3, #0]
 801403c:	0492      	lsls	r2, r2, #18
 801403e:	d506      	bpl.n	801404e <enet_init+0x2ca>
 8014040:	4904      	ldr	r1, [pc, #16]	; (8014054 <enet_init+0x2d0>)
 8014042:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014044:	680a      	ldr	r2, [r1, #0]
 8014046:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801404a:	4313      	orrs	r3, r2
 801404c:	600b      	str	r3, [r1, #0]
 801404e:	2001      	movs	r0, #1
 8014050:	e6e3      	b.n	8013e1a <enet_init+0x96>
 8014052:	bf00      	nop
 8014054:	40028000 	andmi	r8, r2, r0
 8014058:	40029000 	andmi	r9, r2, r0
 801405c:	20010f24 	andcs	r0, r1, r4, lsr #30
 8014060:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08014064 <enet_txfifo_flush>:
 8014064:	4b06      	ldr	r3, [pc, #24]	; (8014080 <enet_txfifo_flush+0x1c>)
 8014066:	4807      	ldr	r0, [pc, #28]	; (8014084 <enet_txfifo_flush+0x20>)
 8014068:	699a      	ldr	r2, [r3, #24]
 801406a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 801406e:	619a      	str	r2, [r3, #24]
 8014070:	699a      	ldr	r2, [r3, #24]
 8014072:	02d2      	lsls	r2, r2, #11
 8014074:	d502      	bpl.n	801407c <enet_txfifo_flush+0x18>
 8014076:	3801      	subs	r0, #1
 8014078:	d1fa      	bne.n	8014070 <enet_txfifo_flush+0xc>
 801407a:	4770      	bx	lr
 801407c:	2001      	movs	r0, #1
 801407e:	4770      	bx	lr
 8014080:	40029000 	andmi	r9, r2, r0
 8014084:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014088 <enet_tx_enable>:
 8014088:	4a06      	ldr	r2, [pc, #24]	; (80140a4 <enet_tx_enable+0x1c>)
 801408a:	b508      	push	{r3, lr}
 801408c:	6813      	ldr	r3, [r2, #0]
 801408e:	f043 0308 	orr.w	r3, r3, #8
 8014092:	6013      	str	r3, [r2, #0]
 8014094:	f7ff ffe6 	bl	8014064 <enet_txfifo_flush>
 8014098:	4a03      	ldr	r2, [pc, #12]	; (80140a8 <enet_tx_enable+0x20>)
 801409a:	6993      	ldr	r3, [r2, #24]
 801409c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80140a0:	6193      	str	r3, [r2, #24]
 80140a2:	bd08      	pop	{r3, pc}
 80140a4:	40028000 	andmi	r8, r2, r0
 80140a8:	40029000 	andmi	r9, r2, r0

080140ac <enet_enable>:
 80140ac:	b508      	push	{r3, lr}
 80140ae:	f7ff ffeb 	bl	8014088 <enet_tx_enable>
 80140b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80140b6:	f7ff bdcf 	b.w	8013c58 <enet_rx_enable>

080140ba <enet_desc_information_get>:
 80140ba:	2905      	cmp	r1, #5
 80140bc:	d817      	bhi.n	80140ee <enet_desc_information_get+0x34>
 80140be:	e8df f001 	tbb	[pc, r1]
 80140c2:	03091012 	movweq	r1, #36882	; 0x9012
 80140c6:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80140ca:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80140ce:	4770      	bx	lr
 80140d0:	88c0      	ldrh	r0, [r0, #6]
 80140d2:	e7fa      	b.n	80140ca <enet_desc_information_get+0x10>
 80140d4:	8840      	ldrh	r0, [r0, #2]
 80140d6:	f3c0 000d 	ubfx	r0, r0, #0, #14
 80140da:	2804      	cmp	r0, #4
 80140dc:	d90a      	bls.n	80140f4 <enet_desc_information_get+0x3a>
 80140de:	3804      	subs	r0, #4
 80140e0:	4770      	bx	lr
 80140e2:	6880      	ldr	r0, [r0, #8]
 80140e4:	4770      	bx	lr
 80140e6:	6800      	ldr	r0, [r0, #0]
 80140e8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80140ec:	4770      	bx	lr
 80140ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80140f2:	4770      	bx	lr
 80140f4:	2000      	movs	r0, #0
 80140f6:	4770      	bx	lr

080140f8 <enet_rxframe_drop>:
 80140f8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80140fc:	4814      	ldr	r0, [pc, #80]	; (8014150 <enet_rxframe_drop+0x58>)
 80140fe:	b510      	push	{r4, lr}
 8014100:	6802      	ldr	r2, [r0, #0]
 8014102:	4914      	ldr	r1, [pc, #80]	; (8014154 <enet_rxframe_drop+0x5c>)
 8014104:	6854      	ldr	r4, [r2, #4]
 8014106:	6013      	str	r3, [r2, #0]
 8014108:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801410c:	680b      	ldr	r3, [r1, #0]
 801410e:	d009      	beq.n	8014124 <enet_rxframe_drop+0x2c>
 8014110:	b12b      	cbz	r3, 801411e <enet_rxframe_drop+0x26>
 8014112:	68da      	ldr	r2, [r3, #12]
 8014114:	6002      	str	r2, [r0, #0]
 8014116:	681a      	ldr	r2, [r3, #0]
 8014118:	b1ba      	cbz	r2, 801414a <enet_rxframe_drop+0x52>
 801411a:	600a      	str	r2, [r1, #0]
 801411c:	bd10      	pop	{r4, pc}
 801411e:	68d3      	ldr	r3, [r2, #12]
 8014120:	6003      	str	r3, [r0, #0]
 8014122:	e7fb      	b.n	801411c <enet_rxframe_drop+0x24>
 8014124:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014128:	4c0b      	ldr	r4, [pc, #44]	; (8014158 <enet_rxframe_drop+0x60>)
 801412a:	d006      	beq.n	801413a <enet_rxframe_drop+0x42>
 801412c:	68e2      	ldr	r2, [r4, #12]
 801412e:	6002      	str	r2, [r0, #0]
 8014130:	2b00      	cmp	r3, #0
 8014132:	d0f3      	beq.n	801411c <enet_rxframe_drop+0x24>
 8014134:	681b      	ldr	r3, [r3, #0]
 8014136:	600b      	str	r3, [r1, #0]
 8014138:	e7f0      	b.n	801411c <enet_rxframe_drop+0x24>
 801413a:	6824      	ldr	r4, [r4, #0]
 801413c:	3210      	adds	r2, #16
 801413e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8014142:	4422      	add	r2, r4
 8014144:	6002      	str	r2, [r0, #0]
 8014146:	2b00      	cmp	r3, #0
 8014148:	d0e8      	beq.n	801411c <enet_rxframe_drop+0x24>
 801414a:	3310      	adds	r3, #16
 801414c:	e7f3      	b.n	8014136 <enet_rxframe_drop+0x3e>
 801414e:	bf00      	nop
 8014150:	20010f1c 	andcs	r0, r1, ip, lsl pc
 8014154:	20010f14 	andcs	r0, r1, r4, lsl pc
 8014158:	40029000 	andmi	r9, r2, r0

0801415c <enet_rxframe_size_get>:
 801415c:	b508      	push	{r3, lr}
 801415e:	4b0c      	ldr	r3, [pc, #48]	; (8014190 <enet_rxframe_size_get+0x34>)
 8014160:	681b      	ldr	r3, [r3, #0]
 8014162:	6818      	ldr	r0, [r3, #0]
 8014164:	2800      	cmp	r0, #0
 8014166:	db10      	blt.n	801418a <enet_rxframe_size_get+0x2e>
 8014168:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 801416c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8014170:	d003      	beq.n	801417a <enet_rxframe_size_get+0x1e>
 8014172:	f7ff ffc1 	bl	80140f8 <enet_rxframe_drop>
 8014176:	2001      	movs	r0, #1
 8014178:	bd08      	pop	{r3, pc}
 801417a:	f000 0321 	and.w	r3, r0, #33	; 0x21
 801417e:	2b21      	cmp	r3, #33	; 0x21
 8014180:	d0f7      	beq.n	8014172 <enet_rxframe_size_get+0x16>
 8014182:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8014186:	3804      	subs	r0, #4
 8014188:	e7f6      	b.n	8014178 <enet_rxframe_size_get+0x1c>
 801418a:	2000      	movs	r0, #0
 801418c:	e7f4      	b.n	8014178 <enet_rxframe_size_get+0x1c>
 801418e:	bf00      	nop
 8014190:	20010f1c 	andcs	r0, r1, ip, lsl pc

08014194 <enet_initpara_reset>:
 8014194:	2200      	movs	r2, #0
 8014196:	4b08      	ldr	r3, [pc, #32]	; (80141b8 <enet_initpara_reset+0x24>)
 8014198:	e9c3 2200 	strd	r2, r2, [r3]
 801419c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80141a0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80141a4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80141a8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80141ac:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80141b0:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80141b4:	639a      	str	r2, [r3, #56]	; 0x38
 80141b6:	4770      	bx	lr
 80141b8:	20010f24 	andcs	r0, r1, r4, lsr #30

080141bc <enet_deinit>:
 80141bc:	b508      	push	{r3, lr}
 80141be:	f640 200e 	movw	r0, #2574	; 0xa0e
 80141c2:	f7fe fbfc 	bl	80129be <rcu_periph_reset_enable>
 80141c6:	f640 200e 	movw	r0, #2574	; 0xa0e
 80141ca:	f7fe fbfa 	bl	80129c2 <rcu_periph_reset_disable>
 80141ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80141d2:	f7ff bfdf 	b.w	8014194 <enet_initpara_reset>
	...

080141d8 <i2c_clock_config>:
 80141d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141da:	4605      	mov	r5, r0
 80141dc:	2002      	movs	r0, #2
 80141de:	460c      	mov	r4, r1
 80141e0:	4617      	mov	r7, r2
 80141e2:	f7fe fca1 	bl	8012b28 <rcu_clock_freq_get>
 80141e6:	4603      	mov	r3, r0
 80141e8:	4828      	ldr	r0, [pc, #160]	; (801428c <i2c_clock_config+0xb4>)
 80141ea:	4a29      	ldr	r2, [pc, #164]	; (8014290 <i2c_clock_config+0xb8>)
 80141ec:	fbb3 f0f0 	udiv	r0, r3, r0
 80141f0:	4293      	cmp	r3, r2
 80141f2:	bf34      	ite	cc
 80141f4:	4601      	movcc	r1, r0
 80141f6:	2136      	movcs	r1, #54	; 0x36
 80141f8:	686e      	ldr	r6, [r5, #4]
 80141fa:	4a26      	ldr	r2, [pc, #152]	; (8014294 <i2c_clock_config+0xbc>)
 80141fc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014200:	430e      	orrs	r6, r1
 8014202:	4294      	cmp	r4, r2
 8014204:	606e      	str	r6, [r5, #4]
 8014206:	d816      	bhi.n	8014236 <i2c_clock_config+0x5e>
 8014208:	3001      	adds	r0, #1
 801420a:	2835      	cmp	r0, #53	; 0x35
 801420c:	d90d      	bls.n	801422a <i2c_clock_config+0x52>
 801420e:	2236      	movs	r2, #54	; 0x36
 8014210:	622a      	str	r2, [r5, #32]
 8014212:	0064      	lsls	r4, r4, #1
 8014214:	fbb3 f4f4 	udiv	r4, r3, r4
 8014218:	2c04      	cmp	r4, #4
 801421a:	bf38      	it	cc
 801421c:	2404      	movcc	r4, #4
 801421e:	69ea      	ldr	r2, [r5, #28]
 8014220:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8014224:	4314      	orrs	r4, r2
 8014226:	61ec      	str	r4, [r5, #28]
 8014228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801422a:	2802      	cmp	r0, #2
 801422c:	d801      	bhi.n	8014232 <i2c_clock_config+0x5a>
 801422e:	2202      	movs	r2, #2
 8014230:	e7ee      	b.n	8014210 <i2c_clock_config+0x38>
 8014232:	6228      	str	r0, [r5, #32]
 8014234:	e7ed      	b.n	8014212 <i2c_clock_config+0x3a>
 8014236:	4a18      	ldr	r2, [pc, #96]	; (8014298 <i2c_clock_config+0xc0>)
 8014238:	4294      	cmp	r4, r2
 801423a:	d8f5      	bhi.n	8014228 <i2c_clock_config+0x50>
 801423c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014240:	4351      	muls	r1, r2
 8014242:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014246:	fbb1 f1f2 	udiv	r1, r1, r2
 801424a:	3101      	adds	r1, #1
 801424c:	6229      	str	r1, [r5, #32]
 801424e:	b9a7      	cbnz	r7, 801427a <i2c_clock_config+0xa2>
 8014250:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014254:	fbb3 f4f4 	udiv	r4, r3, r4
 8014258:	69eb      	ldr	r3, [r5, #28]
 801425a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801425e:	61eb      	str	r3, [r5, #28]
 8014260:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8014264:	b90b      	cbnz	r3, 801426a <i2c_clock_config+0x92>
 8014266:	f044 0401 	orr.w	r4, r4, #1
 801426a:	69eb      	ldr	r3, [r5, #28]
 801426c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014270:	61eb      	str	r3, [r5, #28]
 8014272:	69eb      	ldr	r3, [r5, #28]
 8014274:	4323      	orrs	r3, r4
 8014276:	61eb      	str	r3, [r5, #28]
 8014278:	e7d6      	b.n	8014228 <i2c_clock_config+0x50>
 801427a:	2219      	movs	r2, #25
 801427c:	4354      	muls	r4, r2
 801427e:	fbb3 f4f4 	udiv	r4, r3, r4
 8014282:	69eb      	ldr	r3, [r5, #28]
 8014284:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8014288:	e7e9      	b.n	801425e <i2c_clock_config+0x86>
 801428a:	bf00      	nop
 801428c:	000f4240 	andeq	r4, pc, r0, asr #4
 8014290:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8014294:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014298:	00061a80 	andeq	r1, r6, r0, lsl #21

0801429c <i2c_ack_config>:
 801429c:	6803      	ldr	r3, [r0, #0]
 801429e:	2901      	cmp	r1, #1
 80142a0:	bf0c      	ite	eq
 80142a2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80142a6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80142aa:	6003      	str	r3, [r0, #0]
 80142ac:	4770      	bx	lr

080142ae <i2c_ackpos_config>:
 80142ae:	6803      	ldr	r3, [r0, #0]
 80142b0:	b919      	cbnz	r1, 80142ba <i2c_ackpos_config+0xc>
 80142b2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80142b6:	6003      	str	r3, [r0, #0]
 80142b8:	4770      	bx	lr
 80142ba:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80142be:	e7fa      	b.n	80142b6 <i2c_ackpos_config+0x8>

080142c0 <i2c_master_addressing>:
 80142c0:	3202      	adds	r2, #2
 80142c2:	bf0c      	ite	eq
 80142c4:	f021 0101 	biceq.w	r1, r1, #1
 80142c8:	f041 0101 	orrne.w	r1, r1, #1
 80142cc:	6101      	str	r1, [r0, #16]
 80142ce:	4770      	bx	lr

080142d0 <i2c_enable>:
 80142d0:	6803      	ldr	r3, [r0, #0]
 80142d2:	f043 0301 	orr.w	r3, r3, #1
 80142d6:	6003      	str	r3, [r0, #0]
 80142d8:	4770      	bx	lr

080142da <i2c_start_on_bus>:
 80142da:	6803      	ldr	r3, [r0, #0]
 80142dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80142e0:	6003      	str	r3, [r0, #0]
 80142e2:	4770      	bx	lr

080142e4 <i2c_stop_on_bus>:
 80142e4:	6803      	ldr	r3, [r0, #0]
 80142e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80142ea:	6003      	str	r3, [r0, #0]
 80142ec:	4770      	bx	lr

080142ee <i2c_data_transmit>:
 80142ee:	6101      	str	r1, [r0, #16]
 80142f0:	4770      	bx	lr

080142f2 <i2c_data_receive>:
 80142f2:	6900      	ldr	r0, [r0, #16]
 80142f4:	b2c0      	uxtb	r0, r0
 80142f6:	4770      	bx	lr

080142f8 <i2c_flag_get>:
 80142f8:	098b      	lsrs	r3, r1, #6
 80142fa:	581a      	ldr	r2, [r3, r0]
 80142fc:	2301      	movs	r3, #1
 80142fe:	f001 011f 	and.w	r1, r1, #31
 8014302:	408b      	lsls	r3, r1
 8014304:	4213      	tst	r3, r2
 8014306:	bf14      	ite	ne
 8014308:	2001      	movne	r0, #1
 801430a:	2000      	moveq	r0, #0
 801430c:	4770      	bx	lr

0801430e <i2c_flag_clear>:
 801430e:	f240 5301 	movw	r3, #1281	; 0x501
 8014312:	4299      	cmp	r1, r3
 8014314:	b510      	push	{r4, lr}
 8014316:	d102      	bne.n	801431e <i2c_flag_clear+0x10>
 8014318:	6943      	ldr	r3, [r0, #20]
 801431a:	6983      	ldr	r3, [r0, #24]
 801431c:	bd10      	pop	{r4, pc}
 801431e:	2201      	movs	r2, #1
 8014320:	098c      	lsrs	r4, r1, #6
 8014322:	5823      	ldr	r3, [r4, r0]
 8014324:	f001 011f 	and.w	r1, r1, #31
 8014328:	408a      	lsls	r2, r1
 801432a:	ea23 0302 	bic.w	r3, r3, r2
 801432e:	5023      	str	r3, [r4, r0]
 8014330:	e7f4      	b.n	801431c <i2c_flag_clear+0xe>

08014332 <i2s_init>:
 8014332:	b510      	push	{r4, lr}
 8014334:	69c4      	ldr	r4, [r0, #28]
 8014336:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 801433a:	f024 0408 	bic.w	r4, r4, #8
 801433e:	0424      	lsls	r4, r4, #16
 8014340:	0c24      	lsrs	r4, r4, #16
 8014342:	431c      	orrs	r4, r3
 8014344:	4314      	orrs	r4, r2
 8014346:	430c      	orrs	r4, r1
 8014348:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 801434c:	61c4      	str	r4, [r0, #28]
 801434e:	bd10      	pop	{r4, pc}

08014350 <i2s_psc_config>:
 8014350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014354:	4698      	mov	r8, r3
 8014356:	2302      	movs	r3, #2
 8014358:	6203      	str	r3, [r0, #32]
 801435a:	4b26      	ldr	r3, [pc, #152]	; (80143f4 <i2s_psc_config+0xa4>)
 801435c:	4617      	mov	r7, r2
 801435e:	4298      	cmp	r0, r3
 8014360:	bf0c      	ite	eq
 8014362:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 8014366:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 801436a:	4a23      	ldr	r2, [pc, #140]	; (80143f8 <i2s_psc_config+0xa8>)
 801436c:	4605      	mov	r5, r0
 801436e:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8014370:	460e      	mov	r6, r1
 8014372:	4018      	ands	r0, r3
 8014374:	d036      	beq.n	80143e4 <i2s_psc_config+0x94>
 8014376:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8014378:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801437c:	1f99      	subs	r1, r3, #6
 801437e:	2908      	cmp	r1, #8
 8014380:	d82c      	bhi.n	80143dc <i2s_psc_config+0x8c>
 8014382:	3302      	adds	r3, #2
 8014384:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8014386:	481d      	ldr	r0, [pc, #116]	; (80143fc <i2s_psc_config+0xac>)
 8014388:	f3c2 1203 	ubfx	r2, r2, #4, #4
 801438c:	3201      	adds	r2, #1
 801438e:	fbb0 f0f2 	udiv	r0, r0, r2
 8014392:	4358      	muls	r0, r3
 8014394:	0040      	lsls	r0, r0, #1
 8014396:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 801439a:	f04f 030a 	mov.w	r3, #10
 801439e:	d124      	bne.n	80143ea <i2s_psc_config+0x9a>
 80143a0:	0a04      	lsrs	r4, r0, #8
 80143a2:	435c      	muls	r4, r3
 80143a4:	fbb4 f6f6 	udiv	r6, r4, r6
 80143a8:	230a      	movs	r3, #10
 80143aa:	3605      	adds	r6, #5
 80143ac:	fbb6 f6f3 	udiv	r6, r6, r3
 80143b0:	f006 0301 	and.w	r3, r6, #1
 80143b4:	0876      	lsrs	r6, r6, #1
 80143b6:	1eb2      	subs	r2, r6, #2
 80143b8:	2afd      	cmp	r2, #253	; 0xfd
 80143ba:	bf86      	itte	hi
 80143bc:	2300      	movhi	r3, #0
 80143be:	2602      	movhi	r6, #2
 80143c0:	021b      	lslls	r3, r3, #8
 80143c2:	431e      	orrs	r6, r3
 80143c4:	ea46 0608 	orr.w	r6, r6, r8
 80143c8:	622e      	str	r6, [r5, #32]
 80143ca:	69eb      	ldr	r3, [r5, #28]
 80143cc:	f023 0307 	bic.w	r3, r3, #7
 80143d0:	61eb      	str	r3, [r5, #28]
 80143d2:	69eb      	ldr	r3, [r5, #28]
 80143d4:	433b      	orrs	r3, r7
 80143d6:	61eb      	str	r3, [r5, #28]
 80143d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143dc:	2b0f      	cmp	r3, #15
 80143de:	bf08      	it	eq
 80143e0:	2314      	moveq	r3, #20
 80143e2:	e7cf      	b.n	8014384 <i2s_psc_config+0x34>
 80143e4:	f7fe fba0 	bl	8012b28 <rcu_clock_freq_get>
 80143e8:	e7d5      	b.n	8014396 <i2s_psc_config+0x46>
 80143ea:	b90f      	cbnz	r7, 80143f0 <i2s_psc_config+0xa0>
 80143ec:	0944      	lsrs	r4, r0, #5
 80143ee:	e7d8      	b.n	80143a2 <i2s_psc_config+0x52>
 80143f0:	0984      	lsrs	r4, r0, #6
 80143f2:	e7d6      	b.n	80143a2 <i2s_psc_config+0x52>
 80143f4:	40003800 	andmi	r3, r0, r0, lsl #16
 80143f8:	40021000 	andmi	r1, r2, r0
 80143fc:	017d7840 	cmneq	sp, r0, asr #16

08014400 <i2s_enable>:
 8014400:	69c3      	ldr	r3, [r0, #28]
 8014402:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8014406:	61c3      	str	r3, [r0, #28]
 8014408:	4770      	bx	lr

0801440a <i2s_disable>:
 801440a:	69c3      	ldr	r3, [r0, #28]
 801440c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014410:	61c3      	str	r3, [r0, #28]
 8014412:	4770      	bx	lr

08014414 <spi_dma_enable>:
 8014414:	6843      	ldr	r3, [r0, #4]
 8014416:	b919      	cbnz	r1, 8014420 <spi_dma_enable+0xc>
 8014418:	f043 0302 	orr.w	r3, r3, #2
 801441c:	6043      	str	r3, [r0, #4]
 801441e:	4770      	bx	lr
 8014420:	f043 0301 	orr.w	r3, r3, #1
 8014424:	e7fa      	b.n	801441c <spi_dma_enable+0x8>
	...

08014428 <mac_address_get(unsigned char*)>:
 8014428:	2102      	movs	r1, #2
 801442a:	4a07      	ldr	r2, [pc, #28]	; (8014448 <mac_address_get(unsigned char*)+0x20>)
 801442c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014430:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014434:	7001      	strb	r1, [r0, #0]
 8014436:	7042      	strb	r2, [r0, #1]
 8014438:	0e1a      	lsrs	r2, r3, #24
 801443a:	7082      	strb	r2, [r0, #2]
 801443c:	0c1a      	lsrs	r2, r3, #16
 801443e:	70c2      	strb	r2, [r0, #3]
 8014440:	0a1a      	lsrs	r2, r3, #8
 8014442:	7102      	strb	r2, [r0, #4]
 8014444:	7143      	strb	r3, [r0, #5]
 8014446:	4770      	bx	lr
 8014448:	1ffff000 	svcne	0x00fff000

0801444c <__popcountsi2>:
 801444c:	0843      	lsrs	r3, r0, #1
 801444e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8014452:	1ac0      	subs	r0, r0, r3
 8014454:	0883      	lsrs	r3, r0, #2
 8014456:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 801445a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 801445e:	4418      	add	r0, r3
 8014460:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8014464:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014468:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 801446c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014470:	0e00      	lsrs	r0, r0, #24
 8014472:	4770      	bx	lr

Disassembly of section .rodata:

08014474 <vtable for DisplayHandler-0xb0>:
	...
 801447c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014480:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014484:	00000000 	andeq	r0, r0, r0
 8014488:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801448c:	323a3131 	eorscc	r3, sl, #1073741836	; 0x4000000c
 8014490:	38313a37 	ldmdacc	r1!, {r0, r1, r2, r4, r5, r9, fp, ip, sp}
 8014494:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8014498:	20313120 	eorscs	r3, r1, r0, lsr #2
 801449c:	32323032 	eorscc	r3, r2, #50	; 0x32
 80144a0:	335b1b00 	cmpcc	fp, #0, 22
 80144a4:	41736d32 	cmnmi	r3, r2, lsr sp
 80144a8:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80144ac:	31332e31 	teqcc	r3, r1, lsr lr
 80144b0:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 80144b4:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 80144b8:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 80144bc:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80144c0:	317b2072 	cmncc	fp, r2, ror r0
 80144c4:	20342078 	eorscs	r2, r4, r8, ror r0
 80144c8:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 80144cc:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80144d0:	5b1b7d73 	blpl	86f3aa4 <__exidx_end+0x6dcac4>
 80144d4:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 80144d8:	6f635f2e 	svcvs	0x00635f2e
 80144dc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80144e0:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 80144e4:	00707474 	rsbseq	r7, r0, r4, ror r4
 80144e8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80144ec:	4341733d 	movtmi	r7, #4925	; 0x133d
 80144f0:	3145204e 	cmpcc	r5, lr, asr #32
 80144f4:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80144f8:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80144fc:	4173006c 	cmnmi	r3, ip, rrx
 8014500:	50204e43 	eorpl	r4, r0, r3, asr #28
 8014504:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014508:	34783120 	ldrbtcc	r3, [r8], #-288	; 0xfffffee0
 801450c:	73250055 			; <UNDEFINED> instruction: 0x73250055
 8014510:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8014514:	20642547 	rsbcs	r2, r4, r7, asr #10
 8014518:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 801451c:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8014520:	00000000 	andeq	r0, r0, r0

08014524 <vtable for DisplayHandler>:
	...
 801452c:	080085b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, sl, pc}
 8014530:	080085d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, pc}
 8014534:	080085fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, pc}

08014538 <vtable for PixelDmxStartStop>:
	...
 8014540:	080085b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, pc}
 8014544:	080085dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, pc}
 8014548:	080085b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, pc}
 801454c:	080085c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, pc}

08014550 <CSWTCH.64>:
 8014550:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014554:	 			; <UNDEFINED> instruction: 0x332e3146

08014555 <SOFTWARE_VERSION>:
 8014555:	00332e31 	eorseq	r2, r3, r1, lsr lr

08014559 <gamma10_0>:
 8014559:	03020100 	movweq	r0, #8448	; 0x2100
 801455d:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014561:	0b0a0908 	bleq	8296989 <__exidx_end+0x27f9a9>
 8014565:	0f0e0d0c 	svceq	0x000e0d0c
 8014569:	13121110 	tstne	r2, #16, 2
 801456d:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014571:	1b1a1918 	blne	869a9d9 <__exidx_end+0x6839f9>
 8014575:	1f1e1d1c 	svcne	0x001e1d1c
 8014579:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801457d:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014581:	2b2a2928 	blcs	8a9ea29 <__exidx_end+0xa87a49>
 8014585:	2f2e2d2c 	svccs	0x002e2d2c
 8014589:	33323130 	teqcc	r2, #48, 2
 801458d:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014591:	3b3a3938 	blcc	8ea2a79 <__exidx_end+0xe8ba99>
 8014595:	3f3e3d3c 	svccc	0x003e3d3c
 8014599:	43424140 	movtmi	r4, #8512	; 0x2140
 801459d:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80145a1:	4b4a4948 	blmi	92a6ac9 <__exidx_end+0x128fae9>
 80145a5:	4f4e4d4c 	svcmi	0x004e4d4c
 80145a9:	53525150 	cmppl	r2, #80, 2
 80145ad:	57565554 			; <UNDEFINED> instruction: 0x57565554
 80145b1:	5b5a5958 	blpl	96aab19 <__exidx_end+0x1693b39>
 80145b5:	5f5e5d5c 	svcpl	0x005e5d5c
 80145b9:	63626160 	cmnvs	r2, #96, 2
 80145bd:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80145c1:	6b6a6968 	blvs	9aaeb69 <__exidx_end+0x1a97b89>
 80145c5:	6f6e6d6c 	svcvs	0x006e6d6c
 80145c9:	73727170 	cmnvc	r2, #112, 2
 80145cd:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80145d1:	7b7a7978 	blvc	9eb2bb9 <__exidx_end+0x1e9bbd9>
 80145d5:	7f7e7d7c 	svcvc	0x007e7d7c
 80145d9:	83828180 	orrhi	r8, r2, #128, 2
 80145dd:	87868584 	strhi	r8, [r6, r4, lsl #11]
 80145e1:	8b8a8988 	blhi	62b6c09 <__stack_size+0x62b4c09>
 80145e5:	8f8e8d8c 	svchi	0x008e8d8c
 80145e9:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 80145ed:	97969594 			; <UNDEFINED> instruction: 0x97969594
 80145f1:	9b9a9998 	blls	66bac59 <__stack_size+0x66b8c59>
 80145f5:	9f9e9d9c 	svcls	0x009e9d9c
 80145f9:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80145fd:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8014601:	abaaa9a8 	blge	6abeca9 <__stack_size+0x6abcca9>
 8014605:	afaeadac 	svcge	0x00aeadac
 8014609:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 801460d:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8014611:	bbbab9b8 	bllt	6ec2cf9 <__stack_size+0x6ec0cf9>
 8014615:	bfbebdbc 	svclt	0x00bebdbc
 8014619:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 801461d:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8014621:	cbcac9c8 	blgt	72c6d49 <__stack_size+0x72c4d49>
 8014625:	cfcecdcc 	svcgt	0x00cecdcc
 8014629:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 801462d:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014631:	dbdad9d8 	blle	76cad99 <__stack_size+0x76c8d99>
 8014635:	dfdedddc 	svcle	0x00dedddc
 8014639:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 801463d:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014641:	ebeae9e8 	bl	7acede9 <__stack_size+0x7accde9>
 8014645:	efeeedec 	svc	0x00eeedec
 8014649:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 801464d:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014651:	fbfaf9f8 	blx	7ed2e3b <__stack_size+0x7ed0e3b>
 8014655:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 8014659:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801465d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014661:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8014665:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014669:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 801466d:	0a73252c 	beq	9cddb25 <__exidx_end+0x1cc6b45>
 8014671:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8014675:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014679:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801467d:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8014681:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014685:	4f000a64 	svcmi	0x00000a64
 8014689:	664f006e 	strbvs	r0, [pc], -lr, rrx
 801468d:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8014691:	616c7073 	smcvs	50947	; 0xc703
 8014695:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8014699:	6674000a 	ldrbtvs	r0, [r4], -sl
 801469d:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80146a1:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80146a5:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80146a9:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80146ad:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80146b1:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80146b5:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80146b9:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 80146bd:	20505446 	subscs	r5, r0, r6, asr #8
 80146c1:	20206e4f 	eorcs	r6, r0, pc, asr #28
 80146c5:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 80146c9:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 80146cd:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 80146d1:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 80146d5:	525b2066 	subspl	r2, fp, #102	; 0x66
 80146d9:	6f6f6265 	svcvs	0x006f6265
 80146dd:	00205d74 	eoreq	r5, r0, r4, ror sp
 80146e1:	4f525245 	svcmi	0x00525245
 80146e5:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 80146e9:	000a7465 	andeq	r7, sl, r5, ror #8
 80146ed:	70746674 	rsbsvc	r6, r4, r4, ror r6
 80146f1:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 80146f5:	616c7073 	smcvs	50947	; 0xc703
 80146f9:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 80146fd:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8014701:	000a2123 	andeq	r2, sl, r3, lsr #2
 8014705:	4f525245 	svcmi	0x00525245
 8014709:	0a3f2352 	beq	8fdd459 <__exidx_end+0xfc6479>
 801470d:	62657200 	rsbvs	r7, r5, #0, 4
 8014711:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8014715:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8014719:	00237473 	eoreq	r7, r3, r3, ror r4
 801471d:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014721:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8014725:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014729:	76002365 	strvc	r2, [r0], -r5, ror #6
 801472d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014731:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8014735:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014739:	63616600 	cmnvs	r1, #0, 12
 801473d:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014741:	 	tstmi	r0, r3, lsr #6

08014744 <s_Node>:
 8014744:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014748:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8014754:	41730000 	cmnmi	r3, r0
 8014758:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801475c:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014768:	2043534f 	subcs	r5, r3, pc, asr #6
 801476c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014770:	00007265 	andeq	r7, r0, r5, ror #4
 8014774:	00000000 	andeq	r0, r0, r0
 8014778:	544c0000 	strbpl	r0, [ip], #-0
 801477c:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801478c:	2043534f 	subcs	r5, r3, pc, asr #6
 8014790:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8014794:	0000746e 	andeq	r7, r0, lr, ror #8
 8014798:	00000000 	andeq	r0, r0, r0
 801479c:	44520000 	ldrbmi	r0, [r2], #-0
 80147a0:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80147a4:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80147a8:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80147ac:	0000796c 	andeq	r7, r0, ip, ror #18
 80147b0:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80147b4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80147c0:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80147c4:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80147d4:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80147e4:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 80147e8:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80147ec:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 80147f0:	00000072 	andeq	r0, r0, r2, ror r0
 80147f4:	00000000 	andeq	r0, r0, r0
 80147f8:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

0801480a <s_Output>:
 801480a:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8014816:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8014822:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014826:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801482a:	00000000 	andeq	r0, r0, r0
 801482e:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014832:	0000006c 	andeq	r0, r0, ip, rrx
 8014836:	00000000 	andeq	r0, r0, r0
 801483a:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801483e:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8014842:	00000000 	andeq	r0, r0, r0
 8014846:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8014852:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014856:	00006769 	andeq	r6, r0, r9, ror #14
 801485a:	00000000 	andeq	r0, r0, r0
 801485e:	70657453 	rsbvc	r7, r5, r3, asr r4
 8014862:	00726570 	rsbseq	r6, r2, r0, ror r5
 8014866:	00000000 	andeq	r0, r0, r0
 801486a:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801486e:	00007265 	andeq	r7, r0, r5, ror #4
 8014872:	00000000 	andeq	r0, r0, r0
 8014876:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801487a:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801487e:	00000000 	andeq	r0, r0, r0
 8014882:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8014886:	00006c61 	andeq	r6, r0, r1, ror #24
 801488a:	00000000 	andeq	r0, r0, r0
 801488e:	20424752 	subcs	r4, r2, r2, asr r7
 8014892:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8014896:	0000006c 	andeq	r0, r0, ip, rrx
	...

0801489c <RemoteConfig::s_GET>:
 801489c:	0800a0ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sp, pc}
 80148a0:	00000000 	andeq	r0, r0, r0
 80148a4:	0801470e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, lr}
 80148a8:	00000008 	andeq	r0, r0, r8
 80148ac:	080095e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, ip, pc}
 80148b0:	00000000 	andeq	r0, r0, r0
 80148b4:	08014717 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, sl, lr}
 80148b8:	00000005 	andeq	r0, r0, r5
 80148bc:	080095e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, ip, pc}
 80148c0:	00000000 	andeq	r0, r0, r0
 80148c4:	0801471d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, lr}
 80148c8:	00000006 	andeq	r0, r0, r6
 80148cc:	08009795 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, ip, pc}
 80148d0:	00000000 	andeq	r0, r0, r0
 80148d4:	08014724 	stmdaeq	r1, {r2, r5, r8, r9, sl, lr}
 80148d8:	00000007 	andeq	r0, r0, r7
 80148dc:	08009755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, ip, pc}
 80148e0:	00000000 	andeq	r0, r0, r0
 80148e4:	0801472c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, lr}
 80148e8:	00000008 	andeq	r0, r0, r8
 80148ec:	080096b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, ip, pc}
 80148f0:	00000000 	andeq	r0, r0, r0
 80148f4:	080146f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, lr}
 80148f8:	00000008 	andeq	r0, r0, r8
 80148fc:	08009a69 	stmdaeq	r0, {r0, r3, r5, r6, r9, fp, ip, pc}
 8014900:	00000000 	andeq	r0, r0, r0
 8014904:	08014735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, lr}
 8014908:	00010004 	andeq	r0, r1, r4
 801490c:	08009705 	stmdaeq	r0, {r0, r2, r8, r9, sl, ip, pc}
 8014910:	00000000 	andeq	r0, r0, r0
 8014914:	080146ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, lr}
 8014918:	00000005 	andeq	r0, r0, r5
 801491c:	08009ddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, pc}
 8014920:	00000000 	andeq	r0, r0, r0
 8014924:	0801473a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, lr}
 8014928:	00000009 	andeq	r0, r0, r9

0801492c <RemoteConfig::s_SET>:
 801492c:	08009841 	stmdaeq	r0, {r0, r6, fp, ip, pc}
 8014930:	00000000 	andeq	r0, r0, r0
 8014934:	080146ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, lr}
 8014938:	00010005 	andeq	r0, r1, r5
 801493c:	08009819 	stmdaeq	r0, {r0, r3, r4, fp, ip, pc}
 8014940:	00000000 	andeq	r0, r0, r0
 8014944:	080146f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, lr}
 8014948:	00010008 	andeq	r0, r1, r8
 801494c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014950:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8014954:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8014958:	0a64253d 	beq	991de54 <__exidx_end+0x1906e74>
 801495c:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8014960:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014964:	002c2273 	eoreq	r2, ip, r3, ror r2
 8014968:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801496c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014970:	6f626552 	svcvs	0x00626552
 8014974:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8014978:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 801497c:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8014980:	6f6f6265 	svcvs	0x006f6265
 8014984:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014988:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 801498c:	6f637200 	svcvs	0x00637200
 8014990:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8014994:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014998:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 801499c:	6b726f77 	blvs	9cb0780 <__exidx_end+0x1c997a0>
 80149a0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80149a4:	73696400 	cmnvc	r9, #0, 8
 80149a8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80149ac:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80149b0:	33316500 	teqcc	r1, #0, 10
 80149b4:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80149b8:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 80149bc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80149c0:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 80149c4:	00000074 	andeq	r0, r0, r4, ror r0

080149c8 <RemoteConfig::s_TXT>:
 80149c8:	08009a71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, ip, pc}
 80149cc:	00000000 	andeq	r0, r0, r0
 80149d0:	08009d0d 	stmdaeq	r0, {r0, r2, r3, r8, sl, fp, ip, pc}
 80149d4:	00000000 	andeq	r0, r0, r0
 80149d8:	0801498d 	stmdaeq	r1, {r0, r2, r3, r7, r8, fp, lr}
 80149dc:	0000000b 	andeq	r0, r0, fp
 80149e0:	0000000c 	andeq	r0, r0, ip
 80149e4:	08009a9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, fp, ip, pc}
 80149e8:	00000000 	andeq	r0, r0, r0
 80149ec:	08009d3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, fp, ip, pc}
 80149f0:	00000000 	andeq	r0, r0, r0
 80149f4:	08014999 	stmdaeq	r1, {r0, r3, r4, r7, r8, fp, lr}
 80149f8:	0000000b 	andeq	r0, r0, fp
 80149fc:	00000000 	andeq	r0, r0, r0
 8014a00:	08009b21 	stmdaeq	r0, {r0, r5, r8, r9, fp, ip, pc}
 8014a04:	00000000 	andeq	r0, r0, r0
 8014a08:	08009db5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, ip, pc}
 8014a0c:	00000000 	andeq	r0, r0, r0
 8014a10:	080149a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, fp, lr}
 8014a14:	0000000b 	andeq	r0, r0, fp
 8014a18:	0000000f 	andeq	r0, r0, pc
 8014a1c:	08009ac9 	stmdaeq	r0, {r0, r3, r6, r7, r9, fp, ip, pc}
 8014a20:	00000000 	andeq	r0, r0, r0
 8014a24:	08009d65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, ip, pc}
 8014a28:	00000000 	andeq	r0, r0, r0
 8014a2c:	080149b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, fp, lr}
 8014a30:	00000008 	andeq	r0, r0, r8
 8014a34:	00000004 	andeq	r0, r0, r4
 8014a38:	08009af5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, ip, pc}
 8014a3c:	00000000 	andeq	r0, r0, r0
 8014a40:	08009d8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, pc}
 8014a44:	00000000 	andeq	r0, r0, r0
 8014a48:	080149ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, lr}
 8014a4c:	0000000b 	andeq	r0, r0, fp
 8014a50:	00000003 	andeq	r0, r0, r3
 8014a54:	00544547 	subseq	r4, r4, r7, asr #10
 8014a58:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8014a5c:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8014a60:	0a200050 	beq	8814ba8 <__exidx_end+0x7fdbc8>
 8014a64:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8014a68:	43003a00 	movwmi	r3, #2560	; 0xa00
 8014a6c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8014a70:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8014a74:	00657079 	rsbeq	r7, r5, r9, ror r0
 8014a78:	61003b20 	tstvs	r0, r0, lsr #22
 8014a7c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8014a80:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8014a84:	6a2f6e6f 	bvs	8bf0448 <__exidx_end+0xbd9468>
 8014a88:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8014a8c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014a90:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014a94:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014a98:	2f006874 	svccs	0x00006874
 8014a9c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014aa0:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8014aa4:	2f006c6d 	svccs	0x00006c6d
 8014aa8:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014aac:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014ab0:	2f007373 	svccs	0x00007373
 8014ab4:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014ab8:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8014abc:	736a2f00 	cmnvc	sl, #0, 30
 8014ac0:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8014ac4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014ac8:	72657600 	rsbvc	r7, r5, #0, 12
 8014acc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8014ad0:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8014ad4:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8014ad8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014adc:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8014ae0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014ae4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014ae8:	6a2f0079 	bvs	8bd4cd4 <__exidx_end+0xbbdcf4>
 8014aec:	2f6e6f73 	svccs	0x006e6f73
 8014af0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8014af4:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8014af8:	6f6f6265 	svcvs	0x006f6265
 8014afc:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8014b00:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8014b04:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8014b08:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014b0c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014b10:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014b14:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014b18:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014b1c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014b20:	3e646165 	powccsz	f6, f4, f5
 8014b24:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014b28:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8014b2c:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8014b30:	742f3c74 	strtvc	r3, [pc], #-3188	; 8014b38 <RemoteConfig::s_TXT+0x170>
 8014b34:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8014b38:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014b3c:	3e646165 	powccsz	f6, f4, f5
 8014b40:	6f623c0a 	svcvs	0x00623c0a
 8014b44:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8014b48:	4f3e3168 	svcmi	0x003e3168
 8014b4c:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014b50:	2f3c3e31 	svccs	0x003c3e31
 8014b54:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014b58:	2f3c0a3e 	svccs	0x003c0a3e
 8014b5c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014b60:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8014b64:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8014b68:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8014b6c:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8014b70:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8014b74:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8014b78:	71655200 	cmnvc	r5, r0, lsl #4
 8014b7c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8014b80:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8014b84:	20797469 	rsbscs	r7, r9, r9, ror #8
 8014b88:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8014b8c:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8014b90:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8014b94:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8014b98:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8014b9c:	6f542049 	svcvs	0x00542049
 8014ba0:	6f4c206f 	svcvs	0x004c206f
 8014ba4:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8014ba8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8014bac:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8014bb0:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014bb4:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8014bb8:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8014bbc:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8014bc0:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8014bc4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014bc8:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8014bcc:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014bd0:	00646574 	rsbeq	r6, r4, r4, ror r5
 8014bd4:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8014bd8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014bdc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014be0:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8014be4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8014be8:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8014bec:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8014bf0:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8014bf4:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8014bf8:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8014bfc:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014c00:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014c04:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014c08:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014c0c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014c10:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014c14:	3e646165 	powccsz	f6, f4, f5
 8014c18:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014c1c:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8014c20:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014c24:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014c28:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8014c2c:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014c30:	0a3e6461 	beq	8faddbc <__exidx_end+0xf96ddc>
 8014c34:	646f623c 	strbtvs	r6, [pc], #-572	; 8014c3c <RemoteConfig::s_TXT+0x274>
 8014c38:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8014c3c:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8014c40:	31682f3c 	cmncc	r8, ip, lsr pc
 8014c44:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8014c48:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014c4c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014c50:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014c54:	5448000a 	strbpl	r0, [r8], #-10
 8014c58:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8014c5c:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8014c60:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014c64:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8014c68:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8014c6c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8014c70:	6f430a0d 	svcvs	0x00430a0d
 8014c74:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014c78:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8014c7c:	203a6570 	eorscs	r6, sl, r0, ror r5
 8014c80:	0a0d7325 	beq	837191c <__exidx_end+0x35a93c>
 8014c84:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014c88:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014c8c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014c90:	203a6874 	eorscs	r6, sl, r4, ror r8
 8014c94:	0a0d7525 	beq	8372130 <__exidx_end+0x35b150>
 8014c98:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8014c9c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8014ca0:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8014ca4:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8014ca8:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8014cac:	4447000a 	strbmi	r0, [r7], #-10
 8014cb0:	31463233 	cmpcc	r6, r3, lsr r2
 8014cb4:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
	...

08014cb9 <contentType>:
 8014cb9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014cbd:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8014cc1:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8014cd9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014cdd:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8014cf9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014cfd:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8014d01:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8014d05:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8014d19:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8014d1d:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8014d21:	2f6e6f69 	svccs	0x006e6f69
 8014d25:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08014d39 <RemoteConfigConst::PARAMS_DISABLE>:
 8014d39:	61736964 	cmnvs	r3, r4, ror #18
 8014d3d:	00656c62 	rsbeq	r6, r5, r2, ror #24

08014d41 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8014d41:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8014d45:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8014d49:	00747874 	rsbseq	r7, r4, r4, ror r8

08014d4d <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8014d4d:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014d51:	5f79616c 	svcpl	0x0079616c
 8014d55:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014d5a <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8014d5a:	61736964 	cmnvs	r3, r4, ror #18
 8014d5e:	5f656c62 	svcpl	0x00656c62
 8014d62:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8014d66:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014d68 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8014d68:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d6c:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8014d70:	6f6f6265 	svcvs	0x006f6265
 8014d74:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08014d76 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8014d76:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d7a:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8014816 <s_Output+0xc>
 8014d7e:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014d82:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014d84 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8014d84:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d88:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8014d8c:	6f746361 	svcvs	0x00746361
 8014d90:	7b007972 	blvc	8033360 <__exidx_end+0x1c380>
 8014d94:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8014d98:	7b3a2274 	blvc	8e9d770 <__exidx_end+0xe86790>
 8014d9c:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8014da0:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8014da4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014da8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014dac:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8014db0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8014db4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014db8:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014dbc:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8014dc0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014dc4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014dc8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014dcc:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014dd0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014dd4:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014dd8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014ddc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014de0:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014de4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014de8:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8014dec:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8014df0:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8014df4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014df8:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8014dfc:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8014e00:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8014e04:	616f6222 	cmnvs	pc, r2, lsr #4
 8014e08:	3a226472 	bcc	88adfd8 <__exidx_end+0x896ff8>
 8014e0c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014e10:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8014e14:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8014e18:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8014e1c:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8014e20:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8014e24:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8014e28:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8014e2c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8014e30:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8014e34:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8014e38:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8014e3c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014e40:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8014e44:	7b000a7d 	blvc	8017840 <__exidx_end+0x860>
 8014e48:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8014e4c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014e50:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8014e54:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8014e58:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014e5c:	7b3a2273 	blvc	8e9d830 <__exidx_end+0xe86850>
 8014e60:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8014e64:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8014e68:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8014e6c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014e70:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014e74:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8014e78:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8014e7c:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8014e80:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014e84:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8014e88:	5020584d 	eorpl	r5, r0, sp, asr #16
 8014e8c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014e90:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8014e94:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8014e98:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 8014e9c:	3a227478 	bcc	88b2084 <__exidx_end+0x89b0a4>
 8014ea0:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8014ea4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014ea8:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8014eac:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8014eb0:	6f777465 	svcvs	0x00777465
 8014eb4:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8014eb8:	3a227478 	bcc	88b20a0 <__exidx_end+0x89b0c0>
 8014ebc:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8014ec0:	6b726f77 	blvs	9cb0ca4 <__exidx_end+0x1c99cc4>
 8014ec4:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8014ec8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014ecc:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8014ed0:	3a227478 	bcc	88b20b8 <__exidx_end+0x89b0d8>
 8014ed4:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8014ed8:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8014edc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014ee0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8014ee4:	6f697461 	svcvs	0x00697461
 8014ee8:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08014eed <index_html>:
 8014eed:	4f44213c 	svcmi	0x0044213c
 8014ef1:	50595443 	subspl	r5, r9, r3, asr #8
 8014ef5:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8014ef9:	0a3e6c6d 	beq	8fb00b5 <__exidx_end+0xf990d5>
 8014efd:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8014f01:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014f05:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8014f09:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8014f0d:	6b6e696c 	blvs	9baf4c5 <__exidx_end+0x1b984e5>
 8014f11:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8014f15:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8014f19:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8014f1d:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8014f21:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8014f25:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8014f29:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014f2d:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014f31:	20227373 	eorcs	r7, r2, r3, ror r3
 8014f35:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8014f39:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014f3d:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8014f41:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8014f45:	0a3e656c 	beq	8fae4fd <__exidx_end+0xf9751d>
 8014f49:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014f4d:	0a3e6461 	beq	8fae0d9 <__exidx_end+0xf970f9>
 8014f51:	646f623c 	strbtvs	r6, [pc], #-572	; 8014f59 <index_html+0x6c>
 8014f55:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8014f59:	6165683c 	cmnvs	r5, ip, lsr r8
 8014f5d:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8014f61:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8014f65:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8014f69:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8014f6d:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8014f71:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8014f75:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014f79:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8014f7d:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8014f81:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8014f85:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8014f89:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8014f8d:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8014f91:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014f95:	6f746365 	svcvs	0x00746365
 8014f99:	20227972 	eorcs	r7, r2, r2, ror r9
 8014f9d:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014fa1:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8014fa5:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8014fa9:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8014fad:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8014fb1:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8014fb5:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8014fb9:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8014fbd:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8014fc1:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8014fc5:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8014fc9:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8014fcd:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8014fd1:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8014fd5:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8014fd9:	20227478 	eorcs	r7, r2, r8, ror r4
 8014fdd:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8014fe1:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8014fe5:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8014fe9:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8014fed:	0a3e656c 	beq	8fae5a5 <__exidx_end+0xf975c5>
 8014ff1:	6f663c09 	svcvs	0x00663c09
 8014ff5:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8014ff9:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8014ffd:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015001:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8015005:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015009:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801500d:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8015011:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8015015:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015019:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801501d:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8015021:	20747069 	rsbscs	r7, r4, r9, rrx
 8015025:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8015029:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801502d:	6a2e7865 	bvs	8bb31c9 <__exidx_end+0xb9c1e9>
 8015031:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8015035:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8015039:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801503d:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8015041:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015045:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015049:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801504d:	 	svcvs	0x0062000a

0801504f <styles_css>:
 801504f:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015053:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015057:	63616220 	cmnvs	r1, #32, 4
 801505b:	6f72676b 	svcvs	0x0072676b
 801505f:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8015063:	6f6c6f63 	svcvs	0x006c6f63
 8015067:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801506b:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801506f:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8015073:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8015077:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801507b:	6f6c6f63 	svcvs	0x006c6f63
 801507f:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8015083:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8015087:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801508b:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 801508f:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8015093:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015097:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801509b:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801509f:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80150a3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80150a7:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80150ab:	0a3b7865 	beq	8ef3247 <__exidx_end+0xedc267>
 80150af:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80150b3:	0a7b2069 	beq	9edd25f <__exidx_end+0x1ec627f>
 80150b7:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80150bb:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80150bf:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80150c3:	6f6e203a 	svcvs	0x006e203a
 80150c7:	0a3b656e 	beq	8eee687 <__exidx_end+0xed76a7>
 80150cb:	616d2020 	cmnvs	sp, r0, lsr #32
 80150cf:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80150d3:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80150d7:	70352078 	eorsvc	r2, r5, r8, ror r0
 80150db:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80150df:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80150e3:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80150e7:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80150eb:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80150ef:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80150f3:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80150f7:	0a3b7865 	beq	8ef3293 <__exidx_end+0xedc2b3>
 80150fb:	6f622020 	svcvs	0x00622020
 80150ff:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8015103:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8015107:	3a737569 	bcc	9cf26b3 <__exidx_end+0x1cdb6d3>
 801510b:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801510f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8015113:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015117:	203a7265 	eorscs	r7, sl, r5, ror #4
 801511b:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801511f:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015123:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8015127:	0a3b7870 	beq	8ef32ef <__exidx_end+0xedc30f>
 801512b:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801512f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015133:	0a7b2072 	beq	9edd303 <__exidx_end+0x1ec6323>
 8015137:	69642020 	stmdbvs	r4!, {r5, sp}^
 801513b:	616c7073 	smcvs	50947	; 0xc703
 801513f:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8015143:	3b78656c 	blcc	9e2e6fb <__exidx_end+0x1e1771b>
 8015147:	6a20200a 	bvs	881d177 <__exidx_end+0x806197>
 801514b:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801514f:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8015153:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8015157:	203a746e 	eorscs	r7, sl, lr, ror #8
 801515b:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801515f:	0a3b7265 	beq	8ef1afb <__exidx_end+0xedab1b>
 8015163:	6f622020 	svcvs	0x00622020
 8015167:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801516b:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801516f:	3a737569 	bcc	9cf271b <__exidx_end+0x1cdb73b>
 8015173:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015177:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801517b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801517f:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015183:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015187:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801518b:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801518f:	0a3b7870 	beq	8ef3357 <__exidx_end+0xedc377>
 8015193:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08015198 <HttpContent>:
 8015198:	08014aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, lr}
 801519c:	0801504f 	stmdaeq	r1, {r0, r1, r2, r3, r6, ip, lr}
 80151a0:	08014ab4 	stmdaeq	r1, {r2, r4, r5, r7, r9, fp, lr}
 80151a4:	080151b0 	stmdaeq	r1, {r4, r5, r7, r8, ip, lr}
 80151a8:	08014a9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, fp, lr}
 80151ac:	08014eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, lr}

080151b0 <index_js>:
 80151b0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80151b4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80151b8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80151bc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80151c0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80151c4:	6a284e4f 	bvs	8a28b08 <__exidx_end+0xa11b28>
 80151c8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80151cc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80151d0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80151d4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80151d8:	6a2f273d 	bvs	8bdeed4 <__exidx_end+0xbc7ef4>
 80151dc:	2f6e6f73 	svccs	0x006e6f73
 80151e0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80151e4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80151e8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80151ec:	20797274 	rsbscs	r7, r9, r4, ror r2
 80151f0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80151f4:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80151f8:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80151fc:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8015200:	20746961 	rsbscs	r6, r4, r1, ror #18
 8015204:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8015208:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 801520c:	0a3b296c 	beq	8edf7c4 <__exidx_end+0xec87e4>
 8015210:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015214:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8015218:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 801521c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015220:	73657220 	cmnvc	r5, #32, 4
 8015224:	6f736a2e 	svcvs	0x00736a2e
 8015228:	3b29286e 	blcc	8a5f3e8 <__exidx_end+0xa48408>
 801522c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015230:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8015234:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8015238:	6f727265 	svcvs	0x00727265
 801523c:	7b202972 	blvc	881f80c <__exidx_end+0x80882c>
 8015240:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015244:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8015248:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801524c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8015250:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8015254:	3b29726f 	blcc	8a71c18 <__exidx_end+0xa5ac38>
 8015258:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801525c:	0a0a7d0a 	beq	82b468c <__exidx_end+0x29d6ac>
 8015260:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015264:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015268:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801526c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8015270:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015274:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015278:	20292874 	eorcs	r2, r9, r4, ror r8
 801527c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8015280:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015284:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015288:	6177613d 	cmnvs	r7, sp, lsr r1
 801528c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015290:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015294:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015298:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801529c:	0a3b2927 	beq	8edf740 <__exidx_end+0xec8760>
 80152a0:	6f640909 	svcvs	0x00640909
 80152a4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80152a8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80152ac:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80152b0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80152b4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80152b8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80152bc:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80152c0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80152c4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80152c8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80152cc:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80152d0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80152d4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80152d8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80152dc:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80152e0:	2b656d61 	blcs	997086c <__exidx_end+0x195988c>
 80152e4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015264 <index_js+0xb4>
 80152e8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80152ec:	2b223e69 	blcs	88a4c98 <__exidx_end+0x88dcb8>
 80152f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80152f4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80152f8:	6f6e2e74 	svcvs	0x006e2e74
 80152fc:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8015300:	2b657079 	blcs	99714ec <__exidx_end+0x195a50c>
 8015304:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015284 <index_js+0xd4>
 8015308:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801530c:	2b223e69 	blcs	88a4cb8 <__exidx_end+0x88dcd8>
 8015310:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015314:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015318:	6f6e2e74 	svcvs	0x006e2e74
 801531c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8015320:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8015324:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015328:	2f3c222b 	svccs	0x003c222b
 801532c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015330:	0a7d0a3b 	beq	9f57c24 <__exidx_end+0x1f40c44>
 8015334:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8015338:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801533c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015340:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8015344:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015348:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801534c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015350:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8015354:	0a7b2029 	beq	9edd400 <__exidx_end+0x1ec6420>
 8015358:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801535c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8015360:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015364:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015368:	6177613d 	cmnvs	r7, sp, lsr r1
 801536c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015370:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015374:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015378:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801537c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015380:	3b292779 	blcc	8a5f16c <__exidx_end+0xa4818c>
 8015384:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015388:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801538c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015390:	0a22223d 	beq	889dc8c <__exidx_end+0x886cac>
 8015394:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015398:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801539c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80153a0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80153a4:	6a624f3d 	bvs	98a90a0 <__exidx_end+0x18920c0>
 80153a8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80153ac:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80153b0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80153b4:	6f746365 	svcvs	0x00746365
 80153b8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80153bc:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80153c0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80153c4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80153c8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80153cc:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80153d0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80153d4:	6145726f 	cmpvs	r5, pc, ror #4
 80153d8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80153dc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80153e0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80153e4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80153e8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80153ec:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80153f0:	20726176 	rsbscs	r6, r2, r6, ror r1
 80153f4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80153f8:	203d2065 	eorscs	r2, sp, r5, rrx
 80153fc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015400:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015404:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8015408:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801540c:	6b5b5d22 	blvs	96ec89c <__exidx_end+0x16d58bc>
 8015410:	3b5d7965 	blcc	97739ac <__exidx_end+0x175c9cc>
 8015414:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015418:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801541c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015420:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8015424:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015428:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801542c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8015430:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015434:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8015438:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801543c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015440:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8015444:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015448:	0a3b223e 	beq	8eddd48 <__exidx_end+0xec6d68>
 801544c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8015450:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015454:	6f640909 	svcvs	0x00640909
 8015458:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801545c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015460:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015464:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015468:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801546c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015470:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015474:	6f746365 	svcvs	0x00746365
 8015478:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801547c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8015480:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8015484:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8015488:	3b6c6d74 	blcc	9b30a60 <__exidx_end+0x1b19a80>
 801548c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015490:	5f746567 	svcpl	0x00746567
 8015494:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8015498:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801549c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80154a0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80154a4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80154a8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80154ac:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80154b0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80154b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80154b8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80154bc:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80154c0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80154c4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80154c8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80154cc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80154d0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80154d4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80154d8:	6177613d 	cmnvs	r7, sp, lsr r1
 80154dc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80154e0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80154e4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80154e8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80154ec:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80154f0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80154f4:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80154f8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80154fc:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8015500:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8015504:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8015508:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801550c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8015510:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8015514:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015518:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801551c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015520:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8015524:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8015528:	2b22563e 	blcs	88aae28 <__exidx_end+0x893e48>
 801552c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015530:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015534:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015538:	2b6e6f69 	blcs	9bb12e4 <__exidx_end+0x1b9a304>
 801553c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80154bc <index_js+0x30c>
 8015540:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015544:	2b223e69 	blcs	88a4ef0 <__exidx_end+0x88df10>
 8015548:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801554c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015550:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8015554:	61642e64 	cmnvs	r4, r4, ror #28
 8015558:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801555c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8015560:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8015564:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8015568:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801556c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8015570:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8015574:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8015578:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801557c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8015580:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8015584:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8015588:	6f697372 	svcvs	0x00697372
 801558c:	6f622e6e 	svcvs	0x00622e6e
 8015590:	2b647261 	blcs	9931f1c <__exidx_end+0x191af3c>
 8015594:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015514 <index_js+0x364>
 8015598:	3b223e69 	blcc	88a4f44 <__exidx_end+0x88df64>
 801559c:	0a0a7d0a 	beq	82b49cc <__exidx_end+0x29d9ec>
 80155a0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80155a4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80155a8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80155ac:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80155b0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80155b8 <index_js+0x408>
 80155b4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80155b8:	20296c65 	eorcs	r6, r9, r5, ror #24
 80155bc:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80155c0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80155c4:	613d7478 	teqvs	sp, r8, ror r4
 80155c8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80155cc:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80155d0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80155d4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80155d8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80155dc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80155e0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80155e4:	3b22223d 	blcc	889dee0 <__exidx_end+0x886f00>
 80155e8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80155ec:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80155f0:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80155f4:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80155f8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80155fc:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8015600:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8015604:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8015608:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801560c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015610:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8015614:	0a7b2029 	beq	9edd6c0 <__exidx_end+0x1ec66e0>
 8015618:	61760909 	cmnvs	r6, r9, lsl #18
 801561c:	61762072 	cmnvs	r6, r2, ror r0
 8015620:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8015624:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015628:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801562c:	6b5b5d6c 	blvs	96ecbe4 <__exidx_end+0x16d5c04>
 8015630:	3b5d7965 	blcc	9773bcc <__exidx_end+0x175cbec>
 8015634:	2009090a 	andcs	r0, r9, sl, lsl #18
 8015638:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801563c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8015640:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8015644:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015648:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801564c:	2f3c222b 	svccs	0x003c222b
 8015650:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8015654:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015658:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801565c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015660:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8015664:	742f3c3e 	strtvc	r3, [pc], #-3134	; 801566c <index_js+0x4bc>
 8015668:	3b223e72 	blcc	88a5038 <__exidx_end+0x88e058>
 801566c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8015670:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8015674:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8015678:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801567c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8015680:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8015684:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8015688:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801568c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8015690:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015694:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015698:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801569c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80156a0:	0a3b6c6d 	beq	8ef085c <__exidx_end+0xed987c>
 80156a4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80156a8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80156ac:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80156b0:	3b292874 	blcc	8a5f888 <__exidx_end+0xa488a8>
 80156b4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80156b8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80156bc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80156c0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80156c4:	0a3b2928 	beq	8edfb6c <__exidx_end+0xec8b8c>
 80156c8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80156cc:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80156d0:	6f697372 	svcvs	0x00697372
 80156d4:	3b29286e 	blcc	8a5f894 <__exidx_end+0xa488b4>
 80156d8:	3332000a 	teqcc	r2, #10
 80156dc:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 80156e0:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 80156e4:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 80156e8:	20733834 	rsbscs	r3, r3, r4, lsr r8
 80156ec:	30007325 	andcc	r7, r0, r5, lsr #6
 80156f0:	6f4e202e 	svcvs	0x004e202e
 80156f4:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 80156f8:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 80156fc:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8015700:	202c6465 	eorcs	r6, ip, r5, ror #8
 8015704:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8015708:	6f687320 	svcvs	0x00687320
 801570c:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8015710:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8015714:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8015718:	000a216e 	andeq	r2, sl, lr, ror #2
 801571c:	00505448 	subseq	r5, r0, r8, asr #8
 8015720:	0050544c 	subseq	r5, r0, ip, asr #8
 8015724:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8015728:	000a6567 	andeq	r6, sl, r7, ror #10
 801572c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8015730:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8015734:	203a2065 	eorscs	r2, sl, r5, rrx
 8015738:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801573c:	20000a64 	andcs	r0, r0, r4, ror #20
 8015740:	20444943 	subcs	r4, r4, r3, asr #18
 8015744:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015748:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801574c:	20000a73 	andcs	r0, r0, r3, ror sl
 8015750:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8015754:	000a7475 	andeq	r7, sl, r5, ror r4
 8015758:	6f502020 	svcvs	0x00502020
 801575c:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8015760:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8015764:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8015768:	20657372 	rsbcs	r7, r5, r2, ror r3
 801576c:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8015770:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8015774:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015778:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 801577c:	20000a74 	andcs	r0, r0, r4, ror sl
 8015780:	726f5020 	rsbvc	r5, pc, #32
 8015784:	32252074 	eorcc	r2, r5, #116	; 0x74
 8015788:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 801578c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8015790:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8015794:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8015798:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801579c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 80157a0:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 80157a4:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80157a8:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 80157ac:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 80157b0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 80157b4:	000a6465 	andeq	r6, sl, r5, ror #8

080157b8 <E131MsgConst::START>:
 80157b8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80157bc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80157c0:	43417320 	movtmi	r7, #4896	; 0x1320
 80157c4:	3145204e 	cmpcc	r5, lr, asr #32
 80157c8:	0031332e 	eorseq	r3, r1, lr, lsr #6

080157cc <E131MsgConst::PARAMS>:
 80157cc:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80157d0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80157d4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80157d8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80157dc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80157e0:	 	movwvc	r3, #307	; 0x133

080157e3 <E131MsgConst::STARTED>:
 80157e3:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80157e7:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80157eb:	73203133 			; <UNDEFINED> instruction: 0x73203133
 80157ef:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80157f3:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 80157f7:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 80157fb:	0066666f 	rsbeq	r6, r6, pc, ror #12
 80157ff:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015803:	6b636162 	blvs	98edd93 <__exidx_end+0x18d6db3>
 8015807:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 801580b:	6f007475 	svcvs	0x00007475
 801580f:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8015813:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 8015817:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 801581b:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 801581f:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8015823:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8015827:	754f2058 	strbvc	r2, [pc, #-88]	; 80157d7 <E131MsgConst::PARAMS+0xb>
 801582b:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 801582f:	584d4400 	stmdapl	sp, {sl, lr}^
 8015833:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8015837:	00007475 	andeq	r7, r0, r5, ror r4
	...

0801583c <CSWTCH.56>:
 801583c:	080157f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 8015840:	080157fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 8015844:	08014ace 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, fp, lr}
 8015848:	080157ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}

0801584c <E131ParamsConst::PRIORITY>:
 801584c:	6f697270 	svcvs	0x00697270
 8015850:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015854:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015858:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801585c:	72700000 	rsbsvc	r0, r0, #0
 8015860:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015864:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015868:	5f74726f 	svcpl	0x0074726f
 801586c:	00000062 	andeq	r0, r0, r2, rrx
 8015870:	6f697270 	svcvs	0x00697270
 8015874:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015878:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801587c:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015880:	72700000 	rsbsvc	r0, r0, #0
 8015884:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015888:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801588c:	5f74726f 	svcpl	0x0074726f
 8015890:	00000064 	andeq	r0, r0, r4, rrx

08015894 <E131ParamsConst::FILE_NAME>:
 8015894:	31333165 	teqcc	r3, r5, ror #2
 8015898:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

0801589d <E117Const::ACN_PACKET_IDENTIFIER>:
 801589d:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80158a1:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80158a5:	00000037 	andeq	r0, r0, r7, lsr r0

080158a9 <E131BridgeConst::VERSION>:
 80158a9:	30251901 	eorcc	r1, r5, r1, lsl #18
 80158ad:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 80158b1:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 80158b5:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 80158b9:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 80158bd:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 80158c1:	30252d78 	eorcc	r2, r5, r8, ror sp
 80158c5:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158c9:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158cd:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158d1:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158d5:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158d9:	50007832 	andpl	r7, r0, r2, lsr r8
 80158dd:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80158e1:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80158e5:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80158e9:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80158ed:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80158f1:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80158f5:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 80158f9:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 80158fd:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015901:	20000a64 	andcs	r0, r0, r4, ror #20
 8015905:	756f7247 	strbvc	r7, [pc, #-583]!	; 80156c6 <index_js+0x516>
 8015909:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 801590d:	756f6320 	strbvc	r6, [pc, #-800]!	; 80155f5 <index_js+0x445>
 8015911:	3a20746e 	bcc	8832ad1 <__exidx_end+0x81baf1>
 8015915:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8015919:	6f72475b 	svcvs	0x0072475b
 801591d:	20737075 	rsbscs	r7, r3, r5, ror r0
 8015921:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015925:	 	andeq	r0, r0, sp, asr sl

08015928 <vtable for WS28xxDmx>:
	...
 8015930:	0800c28d 	stmdaeq	r0, {r0, r2, r3, r7, r9, lr, pc}
 8015934:	0800c2ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, lr, pc}
 8015938:	0800c401 	stmdaeq	r0, {r0, sl, lr, pc}
 801593c:	0800c419 	stmdaeq	r0, {r0, r3, r4, sl, lr, pc}
 8015940:	0800c2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, lr, pc}
 8015944:	0800c2bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r9, lr, pc}
 8015948:	0800c3e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, lr, pc}
 801594c:	0800c3fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, lr, pc}
 8015950:	0800c431 	stmdaeq	r0, {r0, r4, r5, sl, lr, pc}
 8015954:	0800c281 	stmdaeq	r0, {r0, r7, r9, lr, pc}
 8015958:	0800c287 	stmdaeq	r0, {r0, r1, r2, r7, r9, lr, pc}
 801595c:	0800c469 	stmdaeq	r0, {r0, r3, r5, r6, sl, lr, pc}
 8015960:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015964:	2a2e253a 	bcs	8b9ee54 <__exidx_end+0xb87e74>
 8015968:	23002c66 	movwcs	r2, #3174	; 0xc66
 801596c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8015970:	0a662a2e 	beq	99a0230 <__exidx_end+0x1989250>
 8015974:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 8015978:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801597c:	4f003e74 	svcmi	0x00003e74
 8015980:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8015984:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8015988:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801598c:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8015990:	4f007465 	svcmi	0x00007465
 8015994:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8015998:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801599c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 80159a0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80159a4:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 80159a8:	6f724700 	svcvs	0x00724700
 80159ac:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 80159b0:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 80159b4:	206b636f 	rsbcs	r6, fp, pc, ror #6
 80159b8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 80159bc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 80159c0:	00737069 	rsbseq	r7, r3, r9, rrx
 80159c4:	31415041 	cmpcc	r1, r1, asr #32
 80159c8:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 80159cc:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 80159d0:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 80159d4:	70207473 	eorvc	r7, r0, r3, ror r4
 80159d8:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 80159dc:	59006e72 	stmdbpl	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
 80159e0:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 80159e4:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 80159e8:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80159ec:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80159f0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80159f4:	6f697461 	svcvs	0x00697461
 80159f8:	20000a6e 	andcs	r0, r0, lr, ror #20
 80159fc:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8015a00:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015a04:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8015a08:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8015a0c:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015a10:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8015a14:	20202074 	eorcs	r2, r0, r4, ror r0
 8015a18:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015a1c:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8015a20:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8015a24:	3a20676e 	bcc	882f7e4 <__exidx_end+0x818804>
 8015a28:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8015a2c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8015a30:	5420000a 	strtpl	r0, [r0], #-10
 8015a34:	20204830 	eorcs	r4, r0, r0, lsr r8
 8015a38:	3a202020 	bcc	881dac0 <__exidx_end+0x806ae0>
 8015a3c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8015a40:	305b2066 	subscc	r2, fp, r6, rrx
 8015a44:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8015a48:	5420000a 	strtpl	r0, [r0], #-10
 8015a4c:	20204831 	eorcs	r4, r0, r1, lsr r8
 8015a50:	3a202020 	bcc	881dad8 <__exidx_end+0x806af8>
 8015a54:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8015a58:	305b2066 	subscc	r2, fp, r6, rrx
 8015a5c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8015a60:	4720000a 	strmi	r0, [r0, -sl]!
 8015a64:	61626f6c 	cmnvs	r2, ip, ror #30
 8015a68:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 8015a6c:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8015a70:	3a737365 	bcc	9cf280c <__exidx_end+0x1cdb82c>
 8015a74:	0a752520 	beq	9d5eefc <__exidx_end+0x1d47f1c>
 8015a78:	61472000 	mrsvs	r2, (UNDEF: 71)
 8015a7c:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 8015a80:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 8015a84:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8015a88:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8015a8c:	20000a73 	andcs	r0, r0, r3, ror sl
 8015a90:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8015a94:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 8015a98:	7a482075 	bvc	921dc74 <__exidx_end+0x1206c94>
 8015a9c:	0000000a 	andeq	r0, r0, sl

08015aa0 <CSWTCH.9>:
 8015aa0:	08015cb4 	stmdaeq	r1, {r2, r4, r5, r7, sl, fp, ip, lr}
 8015aa4:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 8015aa8:	08015eb4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sl, fp, ip, lr}
 8015aac:	08015fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp, ip, lr}
 8015ab0:	080160b4 	stmdaeq	r1, {r2, r4, r5, r7, sp, lr}

08015ab4 <gamma10_0>:
 8015ab4:	03020100 	movweq	r0, #8448	; 0x2100
 8015ab8:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8015abc:	0b0a0908 	bleq	8297ee4 <__exidx_end+0x280f04>
 8015ac0:	0f0e0d0c 	svceq	0x000e0d0c
 8015ac4:	13121110 	tstne	r2, #16, 2
 8015ac8:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8015acc:	1b1a1918 	blne	869bf34 <__exidx_end+0x684f54>
 8015ad0:	1f1e1d1c 	svcne	0x001e1d1c
 8015ad4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8015ad8:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8015adc:	2b2a2928 	blcs	8a9ff84 <__exidx_end+0xa88fa4>
 8015ae0:	2f2e2d2c 	svccs	0x002e2d2c
 8015ae4:	33323130 	teqcc	r2, #48, 2
 8015ae8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015aec:	3b3a3938 	blcc	8ea3fd4 <__exidx_end+0xe8cff4>
 8015af0:	3f3e3d3c 	svccc	0x003e3d3c
 8015af4:	43424140 	movtmi	r4, #8512	; 0x2140
 8015af8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015afc:	4b4a4948 	blmi	92a8024 <__exidx_end+0x1291044>
 8015b00:	4f4e4d4c 	svcmi	0x004e4d4c
 8015b04:	53525150 	cmppl	r2, #80, 2
 8015b08:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8015b0c:	5b5a5958 	blpl	96ac074 <__exidx_end+0x1695094>
 8015b10:	5f5e5d5c 	svcpl	0x005e5d5c
 8015b14:	63626160 	cmnvs	r2, #96, 2
 8015b18:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8015b1c:	6b6a6968 	blvs	9ab00c4 <__exidx_end+0x1a990e4>
 8015b20:	6f6e6d6c 	svcvs	0x006e6d6c
 8015b24:	73727170 	cmnvc	r2, #112, 2
 8015b28:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8015b2c:	7b7a7978 	blvc	9eb4114 <__exidx_end+0x1e9d134>
 8015b30:	7f7e7d7c 	svcvc	0x007e7d7c
 8015b34:	83828180 	orrhi	r8, r2, #128, 2
 8015b38:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8015b3c:	8b8a8988 	blhi	62b8164 <__stack_size+0x62b6164>
 8015b40:	8f8e8d8c 	svchi	0x008e8d8c
 8015b44:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8015b48:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8015b4c:	9b9a9998 	blls	66bc1b4 <__stack_size+0x66ba1b4>
 8015b50:	9f9e9d9c 	svcls	0x009e9d9c
 8015b54:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8015b58:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8015b5c:	abaaa9a8 	blge	6ac0204 <__stack_size+0x6abe204>
 8015b60:	afaeadac 	svcge	0x00aeadac
 8015b64:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8015b68:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8015b6c:	bbbab9b8 	bllt	6ec4254 <__stack_size+0x6ec2254>
 8015b70:	bfbebdbc 	svclt	0x00bebdbc
 8015b74:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8015b78:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8015b7c:	cbcac9c8 	blgt	72c82a4 <__stack_size+0x72c62a4>
 8015b80:	cfcecdcc 	svcgt	0x00cecdcc
 8015b84:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8015b88:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8015b8c:	dbdad9d8 	blle	76cc2f4 <__stack_size+0x76ca2f4>
 8015b90:	dfdedddc 	svcle	0x00dedddc
 8015b94:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8015b98:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8015b9c:	ebeae9e8 	bl	7ad0344 <__stack_size+0x7ace344>
 8015ba0:	efeeedec 	svc	0x00eeedec
 8015ba4:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8015ba8:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8015bac:	fbfaf9f8 	blx	7ed4396 <__stack_size+0x7ed2396>
 8015bb0:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08015bb4 <gamma20_0>:
	...
 8015bc0:	01010101 	tsteq	r1, r1, lsl #2
 8015bc4:	01010101 	tsteq	r1, r1, lsl #2
 8015bc8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015bcc:	03030202 	movweq	r0, #12802	; 0x3202
 8015bd0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8015bd4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8015bd8:	06060505 	streq	r0, [r6], -r5, lsl #10
 8015bdc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015be0:	09080808 	stmdbeq	r8, {r3, fp}
 8015be4:	0a0a0909 	beq	8298010 <__exidx_end+0x281030>
 8015be8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015bec:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8015bf0:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8015bf4:	12111110 	andsne	r1, r1, #16, 2
 8015bf8:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8015bfc:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8015c00:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8015c04:	1b1a1a19 	blne	869c470 <__exidx_end+0x685490>
 8015c08:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8015c0c:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8015c10:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8015c14:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8015c18:	2a292827 	bcs	8a5fcbc <__exidx_end+0xa48cdc>
 8015c1c:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8015c20:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8015c24:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8015c28:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8015c2c:	3b3a3938 	blcc	8ea4114 <__exidx_end+0xe8d134>
 8015c30:	3f3e3d3c 	svccc	0x003e3d3c
 8015c34:	43424140 	movtmi	r4, #8512	; 0x2140
 8015c38:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015c3c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015c40:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8015c44:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8015c48:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8015c4c:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8015c50:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8015c54:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8015c58:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8015c5c:	7371706f 	cmnvc	r1, #111	; 0x6f
 8015c60:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8015c64:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8015c68:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8015c6c:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8015c70:	8f8e8c8b 	svchi	0x008e8c8b
 8015c74:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8015c78:	9b9a9897 	blls	66bbedc <__stack_size+0x66b9edc>
 8015c7c:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8015c80:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8015c84:	afadabaa 	svcge	0x00adabaa
 8015c88:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8015c8c:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8015c90:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8015c94:	cac8c7c5 	bgt	7247bb0 <__stack_size+0x7245bb0>
 8015c98:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8015c9c:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8015ca0:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8015ca4:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8015ca8:	efedebe9 	svc	0x00edebe9
 8015cac:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8015cb0:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08015cb4 <gamma21_0>:
	...
 8015cc0:	01010000 	mrseq	r0, (UNDEF: 1)
 8015cc4:	01010101 	tsteq	r1, r1, lsl #2
 8015cc8:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8015ccc:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015cd0:	03030302 	movweq	r0, #13058	; 0x3302
 8015cd4:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8015cd8:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8015cdc:	06060505 	streq	r0, [r6], -r5, lsl #10
 8015ce0:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015ce4:	09080808 	stmdbeq	r8, {r3, fp}
 8015ce8:	0a0a0909 	beq	8298114 <__exidx_end+0x281134>
 8015cec:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015cf0:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8015cf4:	0f0f0e0e 	svceq	0x000f0e0e
 8015cf8:	11111010 	tstne	r1, r0, lsl r0
 8015cfc:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8015d00:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8015d04:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8015d08:	1b1a1919 	blne	869c174 <__exidx_end+0x685194>
 8015d0c:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8015d10:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8015d14:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8015d18:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8015d1c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8015d20:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8015d24:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015d28:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8015d2c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015d30:	3b3a3938 	blcc	8ea4218 <__exidx_end+0xe8d238>
 8015d34:	3f3e3d3c 	svccc	0x003e3d3c
 8015d38:	43424140 	movtmi	r4, #8512	; 0x2140
 8015d3c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015d40:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8015d44:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8015d48:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8015d4c:	5a585756 	bpl	962baac <__exidx_end+0x1614acc>
 8015d50:	5f5d5c5b 	svcpl	0x005d5c5b
 8015d54:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8015d58:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8015d5c:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8015d60:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8015d64:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8015d68:	7f7e7c7b 	svcvc	0x007e7c7b
 8015d6c:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8015d70:	8b898886 	blhi	6277f90 <__stack_size+0x6275f90>
 8015d74:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8015d78:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8015d7c:	9e9c9b99 	vmovls.32	r9, d28[0]
 8015d80:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8015d84:	abaaa8a6 	blge	6ac0024 <__stack_size+0x6abe024>
 8015d88:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8015d8c:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8015d90:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8015d94:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8015d98:	cfcdcbca 	svcgt	0x00cdcbca
 8015d9c:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8015da0:	dfdddbd9 	svcle	0x00dddbd9
 8015da4:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8015da8:	eeeceae8 	vfms.f32	s29, s25, s17
 8015dac:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8015db0:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08015db4 <gamma22_0>:
	...
 8015dc0:	01000000 	mrseq	r0, (UNDEF: 0)
 8015dc4:	01010101 	tsteq	r1, r1, lsl #2
 8015dc8:	01010101 	tsteq	r1, r1, lsl #2
 8015dcc:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8015dd0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015dd4:	03030303 	movweq	r0, #13059	; 0x3303
 8015dd8:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8015ddc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8015de0:	06060605 	streq	r0, [r6], -r5, lsl #12
 8015de4:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015de8:	09080808 	stmdbeq	r8, {r3, fp}
 8015dec:	0a0a0909 	beq	8298218 <__exidx_end+0x281238>
 8015df0:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015df4:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8015df8:	0f0f0e0e 	svceq	0x000f0e0e
 8015dfc:	11111010 	tstne	r1, r0, lsl r0
 8015e00:	13131212 	tstne	r3, #536870913	; 0x20000001
 8015e04:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8015e08:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8015e0c:	1a1a1919 	bne	869c278 <__exidx_end+0x685298>
 8015e10:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8015e14:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8015e18:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8015e1c:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8015e20:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8015e24:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8015e28:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015e2c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8015e30:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015e34:	3b3a3938 	blcc	8ea431c <__exidx_end+0xe8d33c>
 8015e38:	3f3e3d3c 	svccc	0x003e3d3c
 8015e3c:	43424140 	movtmi	r4, #8512	; 0x2140
 8015e40:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015e44:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015e48:	514f4e4d 	cmppl	pc, sp, asr #28
 8015e4c:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8015e50:	5a595857 	bpl	966bfb4 <__exidx_end+0x1654fd4>
 8015e54:	5f5e5d5b 	svcpl	0x005e5d5b
 8015e58:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8015e5c:	6a696766 	bvs	9a6fbfc <__exidx_end+0x1a58c1c>
 8015e60:	6f6e6d6b 	svcvs	0x006e6d6b
 8015e64:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8015e68:	7b797877 	blvc	9e7404c <__exidx_end+0x1e5d06c>
 8015e6c:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8015e70:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8015e74:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8015e78:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8015e7c:	9a999795 	bls	667bcd8 <__stack_size+0x6679cd8>
 8015e80:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8015e84:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8015e88:	afadacaa 	svcge	0x00adacaa
 8015e8c:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8015e90:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8015e94:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8015e98:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8015e9c:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8015ea0:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8015ea4:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8015ea8:	eeeceae7 	vfms.f32	s29, s25, s15
 8015eac:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8015eb0:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08015eb4 <gamma23_0>:
	...
 8015ec4:	01010100 	mrseq	r0, (UNDEF: 17)
 8015ec8:	01010101 	tsteq	r1, r1, lsl #2
 8015ecc:	01010101 	tsteq	r1, r1, lsl #2
 8015ed0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015ed4:	03020202 	movweq	r0, #8706	; 0x2202
 8015ed8:	03030303 	movweq	r0, #13059	; 0x3303
 8015edc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8015ee0:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8015ee4:	06060605 	streq	r0, [r6], -r5, lsl #12
 8015ee8:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8015eec:	09080808 	stmdbeq	r8, {r3, fp}
 8015ef0:	0a0a0a09 	beq	829871c <__exidx_end+0x28173c>
 8015ef4:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015ef8:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8015efc:	0f0f0e0e 	svceq	0x000f0e0e
 8015f00:	11111010 	tstne	r1, r0, lsl r0
 8015f04:	13131212 	tstne	r3, #536870913	; 0x20000001
 8015f08:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8015f0c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8015f10:	1a1a1918 	bne	869c378 <__exidx_end+0x685398>
 8015f14:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8015f18:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8015f1c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8015f20:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8015f24:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8015f28:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8015f2c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015f30:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8015f34:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015f38:	3b3a3938 	blcc	8ea4420 <__exidx_end+0xe8d440>
 8015f3c:	3f3e3d3c 	svccc	0x003e3d3c
 8015f40:	43424140 	movtmi	r4, #8512	; 0x2140
 8015f44:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8015f48:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015f4c:	51504f4e 	cmppl	r0, lr, asr #30
 8015f50:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8015f54:	5b5a5957 	blpl	96ac4b8 <__exidx_end+0x16954d8>
 8015f58:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8015f5c:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8015f60:	6b6a6867 	blvs	9ab0104 <__exidx_end+0x1a99124>
 8015f64:	71706e6d 	cmnvc	r0, sp, ror #28
 8015f68:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8015f6c:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8015f70:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8015f74:	8a888685 	bhi	6237990 <__stack_size+0x6235990>
 8015f78:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8015f7c:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8015f80:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8015f84:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8015f88:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8015f8c:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8015f90:	bbb9b7b6 	bllt	6e83e70 <__stack_size+0x6e81e70>
 8015f94:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8015f98:	cbc9c7c5 	blgt	7287eb4 <__stack_size+0x7285eb4>
 8015f9c:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8015fa0:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8015fa4:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8015fa8:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8015fac:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8015fb0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08015fb4 <gamma24_0>:
	...
 8015fc4:	01000000 	mrseq	r0, (UNDEF: 0)
 8015fc8:	01010101 	tsteq	r1, r1, lsl #2
 8015fcc:	01010101 	tsteq	r1, r1, lsl #2
 8015fd0:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8015fd4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015fd8:	03030202 	movweq	r0, #12802	; 0x3202
 8015fdc:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8015fe0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8015fe4:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8015fe8:	06060606 	streq	r0, [r6], -r6, lsl #12
 8015fec:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8015ff0:	09090808 	stmdbeq	r9, {r3, fp}
 8015ff4:	0a0a0a09 	beq	8298820 <__exidx_end+0x281840>
 8015ff8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015ffc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016000:	0f0f0e0e 	svceq	0x000f0e0e
 8016004:	11111010 	tstne	r1, r0, lsl r0
 8016008:	13131212 	tstne	r3, #536870913	; 0x20000001
 801600c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016010:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016014:	1a1a1918 	bne	869c47c <__exidx_end+0x68549c>
 8016018:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801601c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016020:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016024:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016028:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801602c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016030:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016034:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016038:	37363535 			; <UNDEFINED> instruction: 0x37363535
 801603c:	3b3a3938 	blcc	8ea4524 <__exidx_end+0xe8d544>
 8016040:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8016044:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8016048:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 801604c:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8016050:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8016054:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8016058:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 801605c:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8016060:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8016064:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8016068:	7372706f 	cmnvc	r2, #111	; 0x6f
 801606c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8016070:	7f7e7c7b 	svcvc	0x007e7c7b
 8016074:	86848381 	strhi	r8, [r4], r1, lsl #7
 8016078:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 801607c:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8016080:	9b999795 	blls	667bedc <__stack_size+0x6679edc>
 8016084:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8016088:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 801608c:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8016090:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8016094:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8016098:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 801609c:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 80160a0:	dad8d6d4 	ble	764bbf8 <__stack_size+0x7649bf8>
 80160a4:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 80160a8:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 80160ac:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 80160b0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080160b4 <gamma25_0>:
	...
 80160c8:	01010000 	mrseq	r0, (UNDEF: 1)
 80160cc:	01010101 	tsteq	r1, r1, lsl #2
 80160d0:	01010101 	tsteq	r1, r1, lsl #2
 80160d4:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 80160d8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80160dc:	03030302 	movweq	r0, #13058	; 0x3302
 80160e0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80160e4:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 80160e8:	06050505 	streq	r0, [r5], -r5, lsl #10
 80160ec:	07060606 	streq	r0, [r6, -r6, lsl #12]
 80160f0:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 80160f4:	09090808 	stmdbeq	r9, {r3, fp}
 80160f8:	0a0a0a09 	beq	8298924 <__exidx_end+0x281944>
 80160fc:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8016100:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016104:	0f0f0f0e 	svceq	0x000f0f0e
 8016108:	11111010 	tstne	r1, r0, lsl r0
 801610c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016110:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016114:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016118:	1a1a1919 	bne	869c584 <__exidx_end+0x6855a4>
 801611c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016120:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016124:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016128:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801612c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016130:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016134:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8016138:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801613c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016140:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8016144:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8016148:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 801614c:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8016150:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8016154:	53525150 	cmppl	r2, #80, 2
 8016158:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801615c:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8016160:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8016164:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8016168:	6f6e6c6b 	svcvs	0x006e6c6b
 801616c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8016170:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8016174:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8016178:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 801617c:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8016180:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8016184:	9f9d9b99 	svcls	0x009d9b99
 8016188:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 801618c:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8016190:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8016194:	bfbdbab8 	svclt	0x00bdbab8
 8016198:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 801619c:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 80161a0:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 80161a4:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 80161a8:	ebe9e7e4 	bl	7a90140 <__stack_size+0x7a8e140>
 80161ac:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 80161b0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080161b4 <gamma25_5>:
 80161b4:	01010100 	mrseq	r0, (UNDEF: 17)
 80161b8:	01010101 	tsteq	r1, r1, lsl #2
 80161bc:	01010101 	tsteq	r1, r1, lsl #2
 80161c0:	01010101 	tsteq	r1, r1, lsl #2
 80161c4:	01010101 	tsteq	r1, r1, lsl #2
 80161c8:	01010101 	tsteq	r1, r1, lsl #2
 80161cc:	01010101 	tsteq	r1, r1, lsl #2
 80161d0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80161d4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80161d8:	03030302 	movweq	r0, #13058	; 0x3302
 80161dc:	03030303 	movweq	r0, #13059	; 0x3303
 80161e0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 80161e4:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 80161e8:	06060605 	streq	r0, [r6], -r5, lsl #12
 80161ec:	07070706 	streq	r0, [r7, -r6, lsl #14]
 80161f0:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 80161f4:	0a090909 	beq	8258620 <__exidx_end+0x241640>
 80161f8:	0b0b0a0a 	bleq	82d8a28 <__exidx_end+0x2c1a48>
 80161fc:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8016200:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8016204:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8016208:	12111110 	andsne	r1, r1, #16, 2
 801620c:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8016210:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8016214:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8016218:	1b1a1a19 	blne	869ca84 <__exidx_end+0x685aa4>
 801621c:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8016220:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8016224:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8016228:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801622c:	2a292827 	bcs	8a602d0 <__exidx_end+0xa492f0>
 8016230:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8016234:	31302f2e 	teqcc	r0, lr, lsr #30
 8016238:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801623c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016240:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8016244:	41403f3e 	cmpmi	r0, lr, lsr pc
 8016248:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801624c:	4a494846 	bmi	926836c <__exidx_end+0x125138c>
 8016250:	4f4e4c4b 	svcmi	0x004e4c4b
 8016254:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8016258:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801625c:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8016260:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8016264:	6a686765 	bvs	9a30000 <__exidx_end+0x1a19020>
 8016268:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801626c:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8016270:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8016274:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8016278:	8a888685 	bhi	6237c94 <__stack_size+0x6235c94>
 801627c:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8016280:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8016284:	9f9d9c9a 	svcls	0x009d9c9a
 8016288:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 801628c:	afadaba9 	svcge	0x00adaba9
 8016290:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8016294:	bfbdbbb9 	svclt	0x00bdbbb9
 8016298:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 801629c:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 80162a0:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 80162a4:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 80162a8:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 80162ac:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 80162b0:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 80162b4:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80162b8:	006e776f 	rsbeq	r7, lr, pc, ror #14
 80162bc:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80162c0:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80162c4:	 	andeq	r0, r0, #100	; 0x64

080162c6 <CSWTCH.18>:
 80162c6:	02020200 	andeq	r0, r2, #0, 4
 80162ca:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 80162ce:	 	ldrbmi	r0, [r2, -r0, lsl #10]

080162d0 <PixelType::MAPS>:
 80162d0:	00424752 	subeq	r4, r2, r2, asr r7
 80162d4:	00474252 	subeq	r4, r7, r2, asr r2
 80162d8:	00425247 	subeq	r5, r2, r7, asr #4
 80162dc:	00524247 	subseq	r4, r2, r7, asr #4
 80162e0:	00475242 	subeq	r5, r7, r2, asr #4
 80162e4:	00524742 	subseq	r4, r2, r2, asr #14

080162e8 <PixelType::TYPES>:
 80162e8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162ec:	00003130 	andeq	r3, r0, r0, lsr r1
 80162f0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162f4:	00003131 	andeq	r3, r0, r1, lsr r1
 80162f8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162fc:	00003231 	andeq	r3, r0, r1, lsr r2
 8016300:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016304:	00423231 	subeq	r3, r2, r1, lsr r2
 8016308:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801630c:	00003331 	andeq	r3, r0, r1, lsr r3
 8016310:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016314:	00003531 	andeq	r3, r0, r1, lsr r5
 8016318:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801631c:	00003231 	andeq	r3, r0, r1, lsr r2
 8016320:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016324:	00573231 	subseq	r3, r7, r1, lsr r2
 8016328:	31534355 	cmpcc	r3, r5, asr r3
 801632c:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016330:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8016334:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016338:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801633c:	00003231 	andeq	r3, r0, r1, lsr r2
 8016340:	31415041 	cmpcc	r1, r1, asr #32
 8016344:	00003230 	andeq	r3, r0, r0, lsr r2
 8016348:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801634c:	00003232 	andeq	r3, r0, r2, lsr r2
 8016350:	31383950 	teqcc	r8, r0, asr r9
 8016354:	00000033 	andeq	r0, r0, r3, lsr r0

08016358 <s_patternName>:
 8016358:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8016364:	61520000 	cmpvs	r2, r0
 8016368:	6f626e69 	svcvs	0x00626e69
 801636c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 8016370:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8016374:	61656854 	cmnvs	r5, r4, asr r8
 8016378:	20726574 	rsbscs	r6, r2, r4, ror r5
 801637c:	73616863 	cmnvc	r1, #6488064	; 0x630000
 8016380:	6f430065 	svcvs	0x00430065
 8016384:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 8016388:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801638c:	00000065 	andeq	r0, r0, r5, rrx
 8016390:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 8016394:	0072656e 	rsbseq	r6, r2, lr, ror #10
 8016398:	00000000 	andeq	r0, r0, r0
 801639c:	61460000 	mrsvs	r0, (UNDEF: 70)
 80163a0:	00006564 	andeq	r6, r0, r4, ror #10
	...

080163ac <gamma10_0>:
 80163ac:	03020100 	movweq	r0, #8448	; 0x2100
 80163b0:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80163b4:	0b0a0908 	bleq	82987dc <__exidx_end+0x2817fc>
 80163b8:	0f0e0d0c 	svceq	0x000e0d0c
 80163bc:	13121110 	tstne	r2, #16, 2
 80163c0:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80163c4:	1b1a1918 	blne	869c82c <__exidx_end+0x68584c>
 80163c8:	1f1e1d1c 	svcne	0x001e1d1c
 80163cc:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80163d0:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80163d4:	2b2a2928 	blcs	8aa087c <__exidx_end+0xa8989c>
 80163d8:	2f2e2d2c 	svccs	0x002e2d2c
 80163dc:	33323130 	teqcc	r2, #48, 2
 80163e0:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80163e4:	3b3a3938 	blcc	8ea48cc <__exidx_end+0xe8d8ec>
 80163e8:	3f3e3d3c 	svccc	0x003e3d3c
 80163ec:	43424140 	movtmi	r4, #8512	; 0x2140
 80163f0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80163f4:	4b4a4948 	blmi	92a891c <__exidx_end+0x129193c>
 80163f8:	4f4e4d4c 	svcmi	0x004e4d4c
 80163fc:	53525150 	cmppl	r2, #80, 2
 8016400:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8016404:	5b5a5958 	blpl	96ac96c <__exidx_end+0x169598c>
 8016408:	5f5e5d5c 	svcpl	0x005e5d5c
 801640c:	63626160 	cmnvs	r2, #96, 2
 8016410:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8016414:	6b6a6968 	blvs	9ab09bc <__exidx_end+0x1a999dc>
 8016418:	6f6e6d6c 	svcvs	0x006e6d6c
 801641c:	73727170 	cmnvc	r2, #112, 2
 8016420:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016424:	7b7a7978 	blvc	9eb4a0c <__exidx_end+0x1e9da2c>
 8016428:	7f7e7d7c 	svcvc	0x007e7d7c
 801642c:	83828180 	orrhi	r8, r2, #128, 2
 8016430:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016434:	8b8a8988 	blhi	62b8a5c <__stack_size+0x62b6a5c>
 8016438:	8f8e8d8c 	svchi	0x008e8d8c
 801643c:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016440:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016444:	9b9a9998 	blls	66bcaac <__stack_size+0x66baaac>
 8016448:	9f9e9d9c 	svcls	0x009e9d9c
 801644c:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016450:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8016454:	abaaa9a8 	blge	6ac0afc <__stack_size+0x6abeafc>
 8016458:	afaeadac 	svcge	0x00aeadac
 801645c:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016460:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8016464:	bbbab9b8 	bllt	6ec4b4c <__stack_size+0x6ec2b4c>
 8016468:	bfbebdbc 	svclt	0x00bebdbc
 801646c:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016470:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8016474:	cbcac9c8 	blgt	72c8b9c <__stack_size+0x72c6b9c>
 8016478:	cfcecdcc 	svcgt	0x00cecdcc
 801647c:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8016480:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8016484:	dbdad9d8 	blle	76ccbec <__stack_size+0x76cabec>
 8016488:	dfdedddc 	svcle	0x00dedddc
 801648c:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8016490:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8016494:	ebeae9e8 	bl	7ad0c3c <__stack_size+0x7acec3c>
 8016498:	efeeedec 	svc	0x00eeedec
 801649c:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80164a0:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80164a4:	fbfaf9f8 	blx	7ed4c8e <__stack_size+0x7ed2c8e>
 80164a8:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080164ac <s_aStorSize>:
 80164ac:	00000060 	andeq	r0, r0, r0, rrx
 80164b0:	00000090 	muleq	r0, r0, r0
 80164b4:	00000020 	andeq	r0, r0, r0, lsr #32
 80164b8:	00000040 	andeq	r0, r0, r0, asr #32
 80164bc:	00000060 	andeq	r0, r0, r0, rrx
 80164c0:	00000040 	andeq	r0, r0, r0, asr #32
 80164c4:	00000020 	andeq	r0, r0, r0, lsr #32
 80164c8:	00000020 	andeq	r0, r0, r0, lsr #32
 80164cc:	000001e0 	andeq	r0, r0, r0, ror #3
 80164d0:	00000040 	andeq	r0, r0, r0, asr #32
 80164d4:	00000020 	andeq	r0, r0, r0, lsr #32
 80164d8:	00000060 	andeq	r0, r0, r0, rrx
 80164dc:	00000030 	andeq	r0, r0, r0, lsr r0
 80164e0:	00000020 	andeq	r0, r0, r0, lsr #32
 80164e4:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80164e8:	00000030 	andeq	r0, r0, r0, lsr r0
 80164ec:	00000040 	andeq	r0, r0, r0, asr #32
 80164f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80164f4:	00000060 	andeq	r0, r0, r0, rrx
 80164f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80164fc:	00000400 	andeq	r0, r0, r0, lsl #8
 8016500:	00000020 	andeq	r0, r0, r0, lsr #32
 8016504:	00000020 	andeq	r0, r0, r0, lsr #32
 8016508:	00000040 	andeq	r0, r0, r0, asr #32
 801650c:	00000060 	andeq	r0, r0, r0, rrx
 8016510:	00000020 	andeq	r0, r0, r0, lsr #32
 8016514:	00000020 	andeq	r0, r0, r0, lsr #32
 8016518:	000000c0 	andeq	r0, r0, r0, asr #1

0801651c <vtable for StoreDisplayUdf>:
	...
 8016524:	0800e635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, sp, lr, pc}
 8016528:	0800e681 	stmdaeq	r0, {r0, r7, r9, sl, sp, lr, pc}
 801652c:	0800e65d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, sp, lr, pc}
 8016530:	0800e639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, sp, lr, pc}

08016534 <vtable for StoreNetwork>:
	...
 801653c:	0800e6a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, sp, lr, pc}
 8016540:	0800e7b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, sp, lr, pc}
 8016544:	0800e6a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, sp, lr, pc}
 8016548:	0800e7c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, sp, lr, pc}
 801654c:	0800e759 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, sp, lr, pc}
 8016550:	0800e72d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, sp, lr, pc}
 8016554:	0800e6fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, sp, lr, pc}
 8016558:	0800e785 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, sp, lr, pc}
 801655c:	0800e6cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, sp, lr, pc}
 8016560:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8016564:	00000000 	andeq	r0, r0, r0
 8016568:	0800e6a3 	stmdaeq	r0, {r0, r1, r5, r7, r9, sl, sp, lr, pc}
 801656c:	0800e7c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, sp, lr, pc}
 8016570:	0800e77d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8016574:	0800e751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, sp, lr, pc}
 8016578:	0800e725 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, sp, lr, pc}
 801657c:	0800e7ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, sp, lr, pc}
 8016580:	0800e6f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl, sp, lr, pc}

08016584 <vtable for StoreRemoteConfig>:
	...
 801658c:	0800e801 	stmdaeq	r0, {r0, fp, sp, lr, pc}
 8016590:	0800e84d 	stmdaeq	r0, {r0, r2, r3, r6, fp, sp, lr, pc}
 8016594:	0800e829 	stmdaeq	r0, {r0, r3, r5, fp, sp, lr, pc}
 8016598:	0800e805 	stmdaeq	r0, {r0, r2, fp, sp, lr, pc}

0801659c <vtable for StoreE131>:
	...
 80165a4:	0800e86d 	stmdaeq	r0, {r0, r2, r3, r5, r6, fp, sp, lr, pc}
 80165a8:	0800e8b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp, lr, pc}
 80165ac:	0800e895 	stmdaeq	r0, {r0, r2, r4, r7, fp, sp, lr, pc}
 80165b0:	0800e871 	stmdaeq	r0, {r0, r4, r5, r6, fp, sp, lr, pc}

080165b4 <vtable for StorePixelDmx>:
	...
 80165bc:	0800e8d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, sp, lr, pc}
 80165c0:	0800ea45 	stmdaeq	r0, {r0, r2, r6, r9, fp, sp, lr, pc}
 80165c4:	0800e8e1 	stmdaeq	r0, {r0, r5, r6, r7, fp, sp, lr, pc}
 80165c8:	0800ea59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp, sp, lr, pc}
 80165cc:	0800ea11 	stmdaeq	r0, {r0, r4, r9, fp, sp, lr, pc}
 80165d0:	0800e9dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, fp, sp, lr, pc}
 80165d4:	0800e9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, lr, pc}
 80165d8:	0800e96d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, fp, sp, lr, pc}
 80165dc:	0800e939 	stmdaeq	r0, {r0, r3, r4, r5, r8, fp, sp, lr, pc}
 80165e0:	0800e905 	stmdaeq	r0, {r0, r2, r8, fp, sp, lr, pc}
 80165e4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80165e8:	00000000 	andeq	r0, r0, r0
 80165ec:	0800e8db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, fp, sp, lr, pc}
 80165f0:	0800ea51 	stmdaeq	r0, {r0, r4, r6, r9, fp, sp, lr, pc}
 80165f4:	0800ea3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, sp, lr, pc}
 80165f8:	0800ea09 	stmdaeq	r0, {r0, r3, r9, fp, sp, lr, pc}
 80165fc:	0800e9d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, sp, lr, pc}
 8016600:	0800e99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, sp, lr, pc}
 8016604:	0800e965 	stmdaeq	r0, {r0, r2, r5, r6, r8, fp, sp, lr, pc}
 8016608:	0800e931 	stmdaeq	r0, {r0, r4, r5, r8, fp, sp, lr, pc}
 801660c:	3a434d46 	bcc	90e9b2c <__exidx_end+0x10d2b4c>
 8016610:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8016614:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8016618:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801661c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8016620:	6f742068 	svcvs	0x00742068
 8016624:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8016628:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801662c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8016630:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016634:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8016638:	6374000a 	cmnvs	r4, #10
 801663c:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8016640:	3a6e6967 	bcc	9bb0be4 <__exidx_end+0x1b99c04>
 8016644:	6f6f7420 	svcvs	0x006f7420
 8016648:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801664c:	6f632079 	svcvs	0x00632079
 8016650:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8016654:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016658:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801665c:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8016660:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8016664:	41000a64 	tstmi	r0, r4, ror #20
 8016668:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801666c:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8016670:	61662070 	smcvs	25088	; 0x6200
 8016674:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8016678:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801667c:	61666564 	cmnvs	r6, r4, ror #10
 8016680:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8016684:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016688:	0a796177 	beq	9e6ec6c <__exidx_end+0x1e57c8c>
 801668c:	50524100 	subspl	r4, r2, r0, lsl #2
 8016690:	6f6f6c20 	svcvs	0x006f6c20
 8016694:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8016698:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801669c:	000a6465 	andeq	r6, sl, r5, ror #8

080166a0 <NetworkConst::MSG_MDNS_CONFIG>:
 80166a0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80166a4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80166a8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80166ac:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080166b1 <NetworkConst::MSG_NETWORK_INIT>:
 80166b1:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80166b5:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80166b9:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80166bd:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80166c1:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80166c5:	3135322e 	teqcc	r5, lr, lsr #4
 80166c9:	63745f00 	cmnvs	r4, #0, 30
 80166cd:	6f6c2e70 	svcvs	0x006c2e70
 80166d1:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80166d5:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80166d9:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80166dd:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80166e5 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80166e1:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80166e5:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8015889 <E131ParamsConst::PRIORITY+0x3d>
 80166e9:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80166ed:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80166f1:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80166f5:	20000a53 	andcs	r0, r0, r3, asr sl
 80166f9:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80166fd:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8016701:	0a676e69 	beq	99f20ad <__exidx_end+0x19db0cd>
 8016705:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8016709:	3a20656d 	bcc	882fcc5 <__exidx_end+0x818ce5>
 801670d:	0a732520 	beq	9cdfb95 <__exidx_end+0x1cc8bb5>
 8016711:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8016715:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8016719:	000a7325 	andeq	r7, sl, r5, lsr #6
 801671d:	30687465 	rsbcc	r7, r8, r5, ror #8
 8016721:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8016725:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8016729:	5f656369 	svcpl	0x00656369
 801672d:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8016731:	6b726f77 	blvs	9cb2515 <__exidx_end+0x1c9b535>
 8016735:	4820000a 	stmdami	r0!, {r1, r3}
 8016739:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801673d:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8016741:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016745:	20000a73 	andcs	r0, r0, r3, ror sl
 8016749:	614e6649 	cmpvs	lr, r9, asr #12
 801674d:	2020656d 	eorcs	r6, r0, sp, ror #10
 8016751:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016755:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8016759:	000a7325 	andeq	r7, sl, r5, lsr #6
 801675d:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8016761:	20202074 	eorcs	r2, r0, r4, ror r0
 8016765:	3a202020 	bcc	881e7ed <__exidx_end+0x80780d>
 8016769:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801676d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016771:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016775:	0a64252f 	beq	991fc39 <__exidx_end+0x1908c59>
 8016779:	654e2000 	strbvs	r2, [lr, #-0]
 801677d:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8016781:	2020206b 	eorcs	r2, r0, fp, rrx
 8016785:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8016789:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801678d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016791:	20000a64 	andcs	r0, r0, r4, ror #20
 8016795:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8016799:	20796177 	rsbscs	r6, r9, r7, ror r1
 801679d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80167a1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80167a5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80167a9:	0a64252e 	beq	991fc69 <__exidx_end+0x1908c89>
 80167ad:	72422000 	subvc	r2, r2, #0
 80167b1:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80167b5:	20747361 	rsbscs	r7, r4, r1, ror #6
 80167b9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80167bd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80167c1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80167c5:	20000a64 	andcs	r0, r0, r4, ror #20
 80167c9:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80167cd:	20202020 	eorcs	r2, r0, r0, lsr #32
 80167d1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80167d5:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80167d9:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80167dd:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80167e1:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80167e5:	3a78322e 	bcc	9e230a5 <__exidx_end+0x1e0c0c5>
 80167e9:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80167ed:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80167f1:	20000a78 	andcs	r0, r0, r8, ror sl
 80167f5:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80167f9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80167fd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016801:	000a6325 	andeq	r6, sl, r5, lsr #6
 8016805:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8016809:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801680d:	 	rsbvc	r0, r9, r0, asr r0

0801680f <NetworkParamsConst::IP_ADDRESS>:
 801680f:	615f7069 	cmpvs	pc, r9, rrx
 8016813:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8016817:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801681a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801681a:	61666564 	cmnvs	r6, r4, ror #10
 801681e:	5f746c75 	svcpl	0x00746c75
 8016822:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016826:	00796177 	rsbseq	r6, r9, r7, ror r1

0801682a <NetworkParamsConst::DHCP_RETRY_TIME>:
 801682a:	70636864 	rsbvc	r6, r3, r4, ror #16
 801682e:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8016832:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801683a <NetworkParamsConst::HOSTNAME>
 8016836:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801683a <NetworkParamsConst::HOSTNAME>:
 801683a:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801683e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016843 <NetworkParamsConst::NET_MASK>:
 8016843:	5f74656e 	svcpl	0x0074656e
 8016847:	6b73616d 	blvs	9ceee03 <__exidx_end+0x1cd7e23>
	...

0801684c <NetworkParamsConst::USE_DHCP>:
 801684c:	5f657375 	svcpl	0x00657375
 8016850:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08016855 <NetworkParamsConst::FILE_NAME>:
 8016855:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8016859:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801685d:	00747874 	rsbseq	r7, r4, r4, ror r8
 8016861:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8016865:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8016869:	61747320 	cmnvs	r4, r0, lsr #6
 801686d:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8016871:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016875:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016879:	252f6425 	strcs	r6, [pc, #-1061]!	; 801645c <gamma10_0+0xb0>
 801687d:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8016881:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8016885:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016889:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801688d:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8016891:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8016895:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016899:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801689d:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80168a1:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80168a5:	20657261 	rsbcs	r7, r5, r1, ror #4
 80168a9:	2a2e2556 	bcs	8b9fe09 <__exidx_end+0xb88e29>
 80168ad:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 80168b1:	72205043 	eorvc	r5, r0, #67	; 0x43
 80168b5:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80168b9:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80168bd:	50434844 	subpl	r4, r3, r4, asr #16
 80168c1:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80168c5:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80168c9:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80168cd:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80168d1:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80168d5:	6f647475 	svcvs	0x00647475
 80168d9:	 	andvc	r6, r0, r7, ror lr

080168dc <pArray>:
 80168dc:	08016970 	stmdaeq	r1, {r4, r5, r6, r8, fp, sp, lr}
 80168e0:	0801692c 	stmdaeq	r1, {r2, r3, r5, r8, fp, sp, lr}
 80168e4:	0801680f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr}
 80168e8:	08016976 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, fp, sp, lr}
 80168ec:	08016b4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, fp, sp, lr}
 80168f0:	08016937 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, fp, sp, lr}
 80168f4:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 80168f8:	0801683a 	stmdaeq	r1, {r1, r3, r4, r5, fp, sp, lr}
 80168fc:	08016a82 	stmdaeq	r1, {r1, r7, r9, fp, sp, lr}
 8016900:	08016a92 	stmdaeq	r1, {r1, r4, r7, r9, fp, sp, lr}
 8016904:	08016aa2 	stmdaeq	r1, {r1, r5, r7, r9, fp, sp, lr}
 8016908:	08016ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, sp, lr}
 801690c:	08016843 	stmdaeq	r1, {r0, r1, r6, fp, sp, lr}
 8016910:	08016b1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, fp, sp, lr}
 8016914:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 8016918:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 801691c:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 8016920:	08014cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, lr}
 8016924:	0801681a 	stmdaeq	r1, {r1, r3, r4, fp, sp, lr}
 8016928:	08016944 	stmdaeq	r1, {r2, r6, r8, fp, sp, lr}

0801692c <DisplayUdfParamsConst::BOARD_NAME>:
 801692c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8016930:	616e5f64 	cmnvs	lr, r4, ror #30
 8016934:	 	tstvs	r0, sp, ror #10

08016937 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8016937:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801693b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801693f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08016944 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8016944:	5f786d64 	svcpl	0x00786d64
 8016948:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801694c:	6f697463 	svcvs	0x00697463
 8016950:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08016952 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8016952:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8016956:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801695a:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80163f5 <gamma10_0+0x49>
 801695e:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08016960 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8016960:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8016964:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8016968:	61636974 	smcvs	13972	; 0x3694
 801696c:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08016970 <DisplayUdfParamsConst::TITLE>:
 8016970:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8016974:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08016976 <DisplayUdfParamsConst::VERSION>:
 8016976:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801697a:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801697e <DisplayUdfParamsConst::FILE_NAME>:
 801697e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016982:	2e79616c 	rpwcsez	f6, f1, #4.0
 8016986:	00747874 	rsbseq	r7, r4, r4, ror r8

0801698a <DisplayUdfParamsConst::INTENSITY>:
 801698a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801698e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8016992:	50410079 	subpl	r0, r1, r9, ror r0
 8016996:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801699a:	726f5000 	rsbvc	r5, pc, #0
 801699e:	63252074 			; <UNDEFINED> instruction: 0x63252074
 80169a2:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80169a6:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80169aa:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 80169ae:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 80169b2:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 80169b6:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

080169bb <DevicesParamsConst::GAMMA_VALUE>:
 80169bb:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80169bf:	61765f61 	cmnvs	r6, r1, ror #30
 80169c3:	0065756c 	rsbeq	r7, r5, ip, ror #10

080169c7 <DevicesParamsConst::SPI_SPEED_HZ>:
 80169c7:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 80169cb:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 80169cf:	5f646565 	svcpl	0x00646565
 80169d3:	 	strvc	r7, [r0], #-2664	; 0xfffff598

080169d6 <DevicesParamsConst::TEST_PATTERN>:
 80169d6:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80169da:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80169de:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080169e3 <DevicesParamsConst::GROUPING_COUNT>:
 80169e3:	5f64656c 	svcpl	0x0064656c
 80169e7:	756f7267 	strbvc	r7, [pc, #-615]!	; 8016788 <NetworkConst::MSG_NETWORK_INIT+0xd7>
 80169eb:	6f635f70 	svcvs	0x00635f70
 80169ef:	00746e75 	rsbseq	r6, r4, r5, ror lr

080169f3 <DevicesParamsConst::GAMMA_CORRECTION>:
 80169f3:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80169f7:	6f635f61 	svcvs	0x00635f61
 80169fb:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 80169ff:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

08016a04 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8016a04:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8016a08:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8016a0c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8016a10:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8016a14:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08016a16 <DevicesParamsConst::MAP>:
 8016a16:	5f64656c 	svcpl	0x0064656c
 8016a1a:	5f626772 	svcpl	0x00626772
 8016a1e:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8016a22:	00676e69 	rsbeq	r6, r7, r9, ror #28

08016a26 <DevicesParamsConst::TYPE>:
 8016a26:	5f64656c 	svcpl	0x0064656c
 8016a2a:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08016a2f <DevicesParamsConst::COUNT>:
 8016a2f:	5f64656c 	svcpl	0x0064656c
 8016a33:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016a37:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08016a39 <DevicesParamsConst::LED_T0H>:
 8016a39:	5f64656c 	svcpl	0x0064656c
 8016a3d:	00683074 	rsbeq	r3, r8, r4, ror r0

08016a41 <DevicesParamsConst::LED_T1H>:
 8016a41:	5f64656c 	svcpl	0x0064656c
 8016a45:	00683174 	rsbeq	r3, r8, r4, ror r1

08016a49 <DevicesParamsConst::FILE_NAME>:
 8016a49:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8016a4d:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8016a51:	00747874 	rsbseq	r7, r4, r4, ror r8
 8016a55:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016a59:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016a5d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016a61:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016a65:	002c2264 	eoreq	r2, ip, r4, ror #4
 8016a69:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8016a6d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016a71:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016a75:	0a64252e 	beq	991ff35 <__exidx_end+0x1908f55>
 8016a79:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8016a7d:	0a232073 	beq	88dec51 <__exidx_end+0x8c7c71>
	...

08016a82 <LightSetParamsConst::UNIVERSE_PORT>:
 8016a82:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a86:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a8a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016a8e:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016a92:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a96:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a9a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016a9e:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016aa2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016aa6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016aaa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016aae:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016ab2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016ab6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016aba:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016abe:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016ac2 <LightSetParamsConst::START_UNI_PORT>:
 8016ac2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8016ac6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8016aca:	6f705f69 	svcvs	0x00705f69
 8016ace:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8016ad2:	00000000 	andeq	r0, r0, r0

08016ad6 <LightSetParamsConst::MERGE_MODE_PORT>:
 8016ad6:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016ada:	6f6d5f65 	svcvs	0x006d5f65
 8016ade:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016ae2:	5f74726f 	svcpl	0x0074726f
 8016ae6:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8016aea:	5f656772 	svcpl	0x00656772
 8016aee:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016af2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016af6:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016afa:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016afe:	6f6d5f65 	svcvs	0x006d5f65
 8016b02:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016b06:	5f74726f 	svcpl	0x0074726f
 8016b0a:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8016b0e:	5f656772 	svcpl	0x00656772
 8016b12:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016b16:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016b1a:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016b1e <LightSetParamsConst::DMX_START_ADDRESS>:
 8016b1e:	5f786d64 	svcpl	0x00786d64
 8016b22:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8016b26:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8016b2a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8016b2e:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

08016b30 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 8016b30:	61736964 	cmnvs	r3, r4, ror #18
 8016b34:	5f656c62 	svcpl	0x00656c62
 8016b38:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016b3c:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016b40:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80165db <vtable for StorePixelDmx+0x27>
 8016b44:	 	smcvs	24580	; 0x6004

08016b46 <LightSetParamsConst::FAILSAFE>:
 8016b46:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8016b4a:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

08016b4f <LightSetParamsConst::UNIVERSE>:
 8016b4f:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016b53:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08016b58 <LightSetParamsConst::DIRECTION>:
 8016b58:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016b5c:	6f697463 	svcvs	0x00697463
 8016b60:	6f705f6e 	svcvs	0x00705f6e
 8016b64:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8016b68:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016b6c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016b70:	5f6e6f69 	svcpl	0x006e6f69
 8016b74:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016b78:	0000625f 	andeq	r6, r0, pc, asr r2
 8016b7c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016b80:	6f697463 	svcvs	0x00697463
 8016b84:	6f705f6e 	svcvs	0x00705f6e
 8016b88:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8016b8c:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016b90:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016b94:	5f6e6f69 	svcpl	0x006e6f69
 8016b98:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016b9c:	0000645f 	andeq	r6, r0, pc, asr r4
 8016ba0:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8016ba4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016ba8:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8016bac:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8016bb0:	31485300 	mrscc	r5, (UNDEF: 120)
 8016bb4:	00363031 	eorseq	r3, r6, r1, lsr r0
 8016bb8:	31445353 	cmpcc	r4, r3, asr r3
 8016bbc:	00363033 	eorseq	r3, r6, r3, lsr r0
 8016bc0:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016bc4:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8016bc8:	000a2964 	andeq	r2, sl, r4, ror #18
 8016bcc:	aaeeaa40 	bge	7bc14d4 <__stack_size+0x7bbf4d4>
 8016bd0:	000000ee 	andeq	r0, r0, lr, ror #1

08016bd4 <_OledFont8x6>:
 8016bd4:	00000040 	andeq	r0, r0, r0, asr #32
 8016bd8:	40000000 	andmi	r0, r0, r0
 8016bdc:	005f0000 	subseq	r0, pc, r0
 8016be0:	00400000 	subeq	r0, r0, r0
 8016be4:	00070007 	andeq	r0, r7, r7
 8016be8:	7f144000 	svcvc	0x00144000
 8016bec:	00147f14 	andseq	r7, r4, r4, lsl pc
 8016bf0:	7f2a2440 	svcvc	0x002a2440
 8016bf4:	4000122a 	andmi	r1, r0, sl, lsr #4
 8016bf8:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8016bfc:	36400062 	strbcc	r0, [r0], -r2, rrx
 8016c00:	50205649 	eorpl	r5, r0, r9, asr #12
 8016c04:	08004000 	stmdaeq	r0, {lr}
 8016c08:	00000307 	andeq	r0, r0, r7, lsl #6
 8016c0c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8016c10:	40000041 	andmi	r0, r0, r1, asr #32
 8016c14:	1c224100 	stfnes	f4, [r2], #-0
 8016c18:	2a400000 	bcs	9016c20 <__exidx_end+0xfffc40>
 8016c1c:	2a1c7f1c 	bcs	8736894 <__exidx_end+0x71f8b4>
 8016c20:	08084000 	stmdaeq	r8, {lr}
 8016c24:	0008083e 	andeq	r0, r8, lr, lsr r8
 8016c28:	70800040 	addvc	r0, r0, r0, asr #32
 8016c2c:	40000030 	andmi	r0, r0, r0, lsr r0
 8016c30:	08080808 	stmdaeq	r8, {r3, fp}
 8016c34:	00400008 	subeq	r0, r0, r8
 8016c38:	00606000 	rsbeq	r6, r0, r0
 8016c3c:	10204000 	eorne	r4, r0, r0
 8016c40:	00020408 	andeq	r0, r2, r8, lsl #8
 8016c44:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8016c48:	40003e45 	andmi	r3, r0, r5, asr #28
 8016c4c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8016c50:	72400000 	subvc	r0, r0, #0
 8016c54:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8016c58:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8016c5c:	00334d49 	eorseq	r4, r3, r9, asr #26
 8016c60:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8016c64:	4000107f 	andmi	r1, r0, pc, ror r0
 8016c68:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8016c6c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8016c70:	3149494a 	cmpcc	r9, sl, asr #18
 8016c74:	21414000 	mrscs	r4, (UNDEF: 65)
 8016c78:	00070911 	andeq	r0, r7, r1, lsl r9
 8016c7c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8016c80:	40003649 	andmi	r3, r0, r9, asr #12
 8016c84:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8016c88:	0040001e 	subeq	r0, r0, lr, lsl r0
 8016c8c:	00001400 	andeq	r1, r0, r0, lsl #8
 8016c90:	40004000 	andmi	r4, r0, r0
 8016c94:	00000034 	andeq	r0, r0, r4, lsr r0
 8016c98:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8016c9c:	40004122 	andmi	r4, r0, r2, lsr #2
 8016ca0:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8016ca4:	00400014 	subeq	r0, r0, r4, lsl r0
 8016ca8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8016cac:	01024000 	mrseq	r4, (UNDEF: 2)
 8016cb0:	00060959 	andeq	r0, r6, r9, asr r9
 8016cb4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8016cb8:	40004e59 	andmi	r4, r0, r9, asr lr
 8016cbc:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8016cc0:	7f40007c 	svcvc	0x0040007c
 8016cc4:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8016cc8:	413e4000 	teqmi	lr, r0
 8016ccc:	00224141 	eoreq	r4, r2, r1, asr #2
 8016cd0:	41417f40 	cmpmi	r1, r0, asr #30
 8016cd4:	40003e41 	andmi	r3, r0, r1, asr #28
 8016cd8:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8016cdc:	7f400041 	svcvc	0x00400041
 8016ce0:	01090909 	tsteq	r9, r9, lsl #18
 8016ce4:	413e4000 	teqmi	lr, r0
 8016ce8:	00735141 	rsbseq	r5, r3, r1, asr #2
 8016cec:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016cf0:	40007f08 	andmi	r7, r0, r8, lsl #30
 8016cf4:	417f4100 	cmnmi	pc, r0, lsl #2
 8016cf8:	20400000 	subcs	r0, r0, r0
 8016cfc:	013f4140 	teqeq	pc, r0, asr #2
 8016d00:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8016d04:	00412214 	subeq	r2, r1, r4, lsl r2
 8016d08:	40407f40 	submi	r7, r0, r0, asr #30
 8016d0c:	40004040 	andmi	r4, r0, r0, asr #32
 8016d10:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8016d14:	7f40007f 	svcvc	0x0040007f
 8016d18:	7f100804 	svcvc	0x00100804
 8016d1c:	413e4000 	teqmi	lr, r0
 8016d20:	003e4141 	eorseq	r4, lr, r1, asr #2
 8016d24:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016d28:	40000609 	andmi	r0, r0, r9, lsl #12
 8016d2c:	2151413e 	cmpcs	r1, lr, lsr r1
 8016d30:	7f40005e 	svcvc	0x0040005e
 8016d34:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8016d38:	49264000 	stmdbmi	r6!, {lr}
 8016d3c:	00324949 	eorseq	r4, r2, r9, asr #18
 8016d40:	7f010340 	svcvc	0x00010340
 8016d44:	40000301 	andmi	r0, r0, r1, lsl #6
 8016d48:	4040403f 	submi	r4, r0, pc, lsr r0
 8016d4c:	1f40003f 	svcne	0x0040003f
 8016d50:	1f204020 	svcne	0x00204020
 8016d54:	403f4000 	eorsmi	r4, pc, r0
 8016d58:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8016d5c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8016d60:	40006314 	andmi	r6, r0, r4, lsl r3
 8016d64:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8016d68:	61400003 	cmpvs	r0, r3
 8016d6c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8016d70:	7f004000 	svcvc	0x00004000
 8016d74:	00414141 	subeq	r4, r1, r1, asr #2
 8016d78:	08040240 	stmdaeq	r4, {r6, r9}
 8016d7c:	40002010 	andmi	r2, r0, r0, lsl r0
 8016d80:	41414100 	mrsmi	r4, (UNDEF: 81)
 8016d84:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8016d88:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8016d8c:	40404000 	submi	r4, r0, r0
 8016d90:	00404040 	subeq	r4, r0, r0, asr #32
 8016d94:	07030040 	streq	r0, [r3, -r0, asr #32]
 8016d98:	40000008 	andmi	r0, r0, r8
 8016d9c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8016da0:	7f400040 	svcvc	0x00400040
 8016da4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8016da8:	44384000 	ldrtmi	r4, [r8], #-0
 8016dac:	00284444 	eoreq	r4, r8, r4, asr #8
 8016db0:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8016db4:	40007f28 	andmi	r7, r0, r8, lsr #30
 8016db8:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8016dbc:	00400018 	subeq	r0, r0, r8, lsl r0
 8016dc0:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8016dc4:	a4184000 	ldrge	r4, [r8], #-0
 8016dc8:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8016dcc:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8016dd0:	40007804 	andmi	r7, r0, r4, lsl #16
 8016dd4:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8016dd8:	20400000 	subcs	r0, r0, r0
 8016ddc:	003d4040 	eorseq	r4, sp, r0, asr #32
 8016de0:	107f4000 	rsbsne	r4, pc, r0
 8016de4:	00004428 	andeq	r4, r0, r8, lsr #8
 8016de8:	7f410040 	svcvc	0x00410040
 8016dec:	40000040 	andmi	r0, r0, r0, asr #32
 8016df0:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8016df4:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8016df8:	78040408 	stmdavc	r4, {r3, sl}
 8016dfc:	44384000 	ldrtmi	r4, [r8], #-0
 8016e00:	00384444 	eorseq	r4, r8, r4, asr #8
 8016e04:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8016e08:	40001824 	andmi	r1, r0, r4, lsr #16
 8016e0c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8016e10:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8016e14:	08040408 	stmdaeq	r4, {r3, sl}
 8016e18:	54484000 	strbpl	r4, [r8], #-0
 8016e1c:	00245454 	eoreq	r5, r4, r4, asr r4
 8016e20:	3f040440 	svccc	0x00040440
 8016e24:	40002444 	andmi	r2, r0, r4, asr #8
 8016e28:	2040403c 	subcs	r4, r0, ip, lsr r0
 8016e2c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8016e30:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8016e34:	403c4000 	eorsmi	r4, ip, r0
 8016e38:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8016e3c:	10284440 	eorne	r4, r8, r0, asr #8
 8016e40:	40004428 	andmi	r4, r0, r8, lsr #8
 8016e44:	9090904c 	addsls	r9, r0, ip, asr #32
 8016e48:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8016e4c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8016e50:	08004000 	stmdaeq	r0, {lr}
 8016e54:	00004136 	andeq	r4, r0, r6, lsr r1
 8016e58:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8016e5c:	40000000 	andmi	r0, r0, r0
 8016e60:	08364100 	ldmdaeq	r6!, {r8, lr}
 8016e64:	02400000 	subeq	r0, r0, #0
 8016e68:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8016e6c:	263c4000 	ldrtcs	r4, [ip], -r0
 8016e70:	003c2623 	eorseq	r2, ip, r3, lsr #12

08016e74 <oled_128x32_init>:
 8016e74:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016e78:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8016e7c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016e80:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8016e84:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016e88:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016e8c <oled_128x64_init>:
 8016e8c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016e90:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8016e94:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016e98:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8016e9c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016ea0:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016ea4 <vtable for Ssd1306>:
	...
 8016eac:	08011a39 	stmdaeq	r1, {r0, r3, r4, r5, r9, fp, ip}
 8016eb0:	08011a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, ip}
 8016eb4:	08011d75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sl, fp, ip}
 8016eb8:	08011cfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip}
 8016ebc:	08011bc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, fp, ip}
 8016ec0:	08011a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, ip}
 8016ec4:	08011aad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, fp, ip}
 8016ec8:	08011b9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, fp, ip}
 8016ecc:	08011b59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, fp, ip}
 8016ed0:	08011a3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, fp, ip}
 8016ed4:	08011c05 	stmdaeq	r1, {r0, r2, sl, fp, ip}
 8016ed8:	08011c11 	stmdaeq	r1, {r0, r4, sl, fp, ip}
 8016edc:	08011c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, ip}
 8016ee0:	08011a3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, fp, ip}
 8016ee4:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8016ee8:	5b1b006d 	blpl	86d70a4 <__exidx_end+0x6c00c4>
 8016eec:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8016ef0:	31335b1b 	teqcc	r3, fp, lsl fp
 8016ef4:	5b1b006d 	blpl	86d70b0 <__exidx_end+0x6c00d0>
 8016ef8:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8016efc:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8016f00:	5b1b006d 	blpl	86d70bc <__exidx_end+0x6c00dc>
 8016f04:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8016f08:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8016f0c:	205d732a 	subscs	r7, sp, sl, lsr #6
 8016f10:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8016f14:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8016f18:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8016f1c:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8016f20:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8016f24:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8016f28:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8016f2c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016f30:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016f34:	000a7525 	andeq	r7, sl, r5, lsr #10
 8016f38:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016f3c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016f40:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8016f44:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8016f48:	6b636f6c 	blvs	98f2d00 <__exidx_end+0x18dbd20>
 8016f4c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8016f50:	000a7469 	andeq	r7, sl, r9, ror #8
 8016f54:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016f58:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016f5c:	6f6c4270 	svcvs	0x006c4270
 8016f60:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8016f64:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016f68:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8016f6c:	7a697320 	bvc	9a73bf4 <__exidx_end+0x1a5cc14>
 8016f70:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8016f74:	6164202c 	cmnvs	r4, ip, lsr #32
 8016f78:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8016f7c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8016f80:	3a656572 	bcc	9970550 <__exidx_end+0x1959570>
 8016f84:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8016f88:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016f8c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8016f90:	203d2072 	eorscs	r2, sp, r2, ror r0
 8016f94:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8016f98:	6f6c4270 	svcvs	0x006c4270
 8016f9c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8016fa0:	0a702520 	beq	9c20428 <__exidx_end+0x1c09448>
 8016fa4:	00000000 	andeq	r0, r0, r0

08016fa8 <days_of_month>:
 8016fa8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fac:	0000001c 	andeq	r0, r0, ip, lsl r0
 8016fb0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fb4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016fb8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fbc:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016fc0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fc4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fc8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016fcc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016fd0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016fd4:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08016fd8 <__exidx_start>:
 8016fd8:	7fff233c 	svcvc	0x00ff233c
 8016fdc:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08016fe0 <.ARM.attributes>:
 8016fe0:	00002e41 	andeq	r2, r0, r1, asr #28
 8016fe4:	61656100 	cmnvs	r5, r0, lsl #2
 8016fe8:	01006962 	tsteq	r0, r2, ror #18
 8016fec:	00000024 	andeq	r0, r0, r4, lsr #32
 8016ff0:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8016ff4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8016ff8:	0600334d 	streq	r3, [r0], -sp, asr #6
 8016ffc:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017000:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017004:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8017008:	1a011803 	bne	805d01c <__exidx_end+0x4603c>
 801700c:	Address 0x000000000801700c is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20015800 	andcs	r5, r1, r0, lsl #16

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000030:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000040:	00000060 	andeq	r0, r0, r0, rrx
	...
20000050:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000060:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000070:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000080:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000090:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e0 <SystemCoreClock>:
200000e0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <HttpDaemon::m_Content>:
	...

200006b8 <guard variable for lightset::Data::Get()::instance>:
200006b8:	00000000 	andeq	r0, r0, r0

200006bc <lightset::Data::Get()::instance>:
	...

20001ecc <E131Bridge::s_pThis>:
20001ecc:	00000000 	andeq	r0, r0, r0

20001ed0 <s_ReceivingMask>:
20001ed0:	00000000 	andeq	r0, r0, r0

20001ed4 <s_nPortsMax>:
20001ed4:	00000000 	andeq	r0, r0, r0

20001ed8 <WS28xxDmx::s_pThis>:
20001ed8:	00000000 	andeq	r0, r0, r0

20001edc <PixelPatterns::m_PortConfig>:
	...

20001efc <PixelPatterns::m_nActivePorts>:
20001efc:	00000000 	andeq	r0, r0, r0

20001f00 <PixelPatterns::m_pScannerColours>:
20001f00:	00000000 	andeq	r0, r0, r0

20001f04 <PixelPatterns::m_nCount>:
20001f04:	00000000 	andeq	r0, r0, r0

20001f08 <PixelPatterns::m_pOutput>:
20001f08:	00000000 	andeq	r0, r0, r0

20001f0c <PixelTestPattern::s_Pattern>:
20001f0c:	00000000 	andeq	r0, r0, r0

20001f10 <s_tmp>:
20001f10:	00000000 	andeq	r0, r0, r0

20001f14 <WS28xx::s_pThis>:
20001f14:	00000000 	andeq	r0, r0, r0

20001f18 <SpiFlashStore::s_nWaitMillis>:
20001f18:	00000000 	andeq	r0, r0, r0

20001f1c <SpiFlashStore::s_SpiFlashData>:
	...

20002f1c <SpiFlashStore::s_nStartAddress>:
20002f1c:	00000000 	andeq	r0, r0, r0

20002f20 <SpiFlashStore::s_bHaveFlashChip>:
20002f20:	00000000 	andeq	r0, r0, r0

20002f24 <SpiFlashStore::s_nSpiFlashStoreSize>:
20002f24:	00000000 	andeq	r0, r0, r0

20002f28 <SpiFlashStore::s_State>:
20002f28:	00000000 	andeq	r0, r0, r0

20002f2c <SpiFlashStore::s_pThis>:
20002f2c:	00000000 	andeq	r0, r0, r0

20002f30 <SpiFlashStore::s_bIsNew>:
20002f30:	00000000 	andeq	r0, r0, r0

20002f34 <StoreDisplayUdf::s_pThis>:
20002f34:	00000000 	andeq	r0, r0, r0

20002f38 <StoreNetwork::s_pThis>:
20002f38:	00000000 	andeq	r0, r0, r0

20002f3c <StoreRemoteConfig::s_pThis>:
20002f3c:	00000000 	andeq	r0, r0, r0

20002f40 <StoreE131::s_pThis>:
20002f40:	00000000 	andeq	r0, r0, r0

20002f44 <StorePixelDmx::s_pThis>:
20002f44:	00000000 	andeq	r0, r0, r0

20002f48 <FlashRom::s_pThis>:
20002f48:	00000000 	andeq	r0, r0, r0

20002f4c <flashrom::s_nAddress>:
20002f4c:	00000000 	andeq	r0, r0, r0

20002f50 <flashrom::s_State>:
20002f50:	00000000 	andeq	r0, r0, r0

20002f54 <flashrom::s_nPage>:
20002f54:	00000000 	andeq	r0, r0, r0

20002f58 <flashrom::s_pData>:
20002f58:	00000000 	andeq	r0, r0, r0

20002f5c <flashrom::s_isBank0>:
20002f5c:	00000000 	andeq	r0, r0, r0

20002f60 <flashrom::s_nLength>:
20002f60:	00000000 	andeq	r0, r0, r0

20002f64 <g_ip_info>:
	...

20002f70 <g_mac_address>:
20002f70:	00000000 	andeq	r0, r0, r0
	...

20002f76 <s_is_dhcp>:
	...

20002f78 <s_p>:
20002f78:	00000000 	andeq	r0, r0, r0

20002f7c <s_ticker>:
20002f7c:	00000000 	andeq	r0, r0, r0

20002f80 <s_mac_address>:
	...

20002f88 <s_mac_address_arp_reply>:
	...

20002f90 <s_id>:
20002f90:	00000000 	andeq	r0, r0, r0

20002f94 <s_recv_queue>:
	...

20003b04 <s_tcb>:
	...

20003b48 <s_tcp>:
	...

20004134 <broadcast_mask>:
20004134:	00000000 	andeq	r0, r0, r0

20004138 <gw_ip>:
20004138:	00000000 	andeq	r0, r0, r0

2000413c <on_network_mask>:
2000413c:	00000000 	andeq	r0, r0, r0

20004140 <s_id>:
20004140:	00000000 	andeq	r0, r0, r0

20004144 <s_ports_allowed>:
	...

20004164 <s_recv_queue>:
	...

20009e04 <s_send_packet>:
	...

2000a3f0 <MDNS::s_nRemoteIp>:
2000a3f0:	00000000 	andeq	r0, r0, r0

2000a3f4 <MDNS::s_nRemotePort>:
2000a3f4:	00000000 	andeq	r0, r0, r0

2000a3f8 <MDNS::s_nMulticastIp>:
2000a3f8:	00000000 	andeq	r0, r0, r0

2000a3fc <MDNS::s_AnswerLocalIp>:
	...

2000a600 <MDNS::s_ServiceRecords>:
	...

2000a620 <MDNS::s_nBytesReceived>:
2000a620:	00000000 	andeq	r0, r0, r0

2000a624 <MDNS::s_ServiceRecordsData>:
	...

2000a828 <MDNS::s_pName>:
2000a828:	00000000 	andeq	r0, r0, r0

2000a82c <MDNS::s_pBuffer>:
2000a82c:	00000000 	andeq	r0, r0, r0

2000a830 <Network::s_pThis>:
2000a830:	00000000 	andeq	r0, r0, r0

2000a834 <s_arp_announce>:
	...

2000a860 <s_arp_reply>:
	...

2000a88c <s_arp_request>:
	...

2000a8b8 <s_arp_records>:
	...

2000aa38 <s_entry_current>:
2000aa38:	00000000 	andeq	r0, r0, r0

2000aa3c <s_dhcp_allocated_gw>:
2000aa3c:	00000000 	andeq	r0, r0, r0

2000aa40 <s_dhcp_allocated_ip>:
2000aa40:	00000000 	andeq	r0, r0, r0

2000aa44 <s_dhcp_allocated_netmask>:
2000aa44:	00000000 	andeq	r0, r0, r0

2000aa48 <s_dhcp_message>:
	...

2000ac6c <s_dhcp_server_ip>:
2000ac6c:	00000000 	andeq	r0, r0, r0

2000ac70 <s_groups>:
	...

2000ad90 <s_id>:
2000ad90:	00000000 	andeq	r0, r0, r0

2000ad94 <s_joins_allowed_index>:
2000ad94:	00000000 	andeq	r0, r0, r0

2000ad98 <s_leave>:
	...

2000adc8 <s_multicast_mac>:
	...

2000add0 <s_report>:
	...

2000ae00 <DisplayUdf::s_pThis>:
2000ae00:	00000000 	andeq	r0, r0, r0

2000ae04 <PropertiesConfig::s_Config>:
2000ae04:	00000000 	andeq	r0, r0, r0

2000ae08 <Display::s_pThis>:
2000ae08:	00000000 	andeq	r0, r0, r0

2000ae0c <_ClearBuffer>:
	...

2000ae94 <Ssd1306::s_pThis>:
2000ae94:	00000000 	andeq	r0, r0, r0

2000ae98 <FirmwareVersion::s_FirmwareVersion>:
	...

2000aeae <FirmwareVersion::s_Print>:
	...

2000aef0 <FirmwareVersion::s_pThis>:
2000aef0:	00000000 	andeq	r0, r0, r0

2000aef4 <LedBlink::s_pThis>:
2000aef4:	00000000 	andeq	r0, r0, r0

2000aef8 <Hardware::s_pThis>:
2000aef8:	00000000 	andeq	r0, r0, r0

2000aefc <last.0>:
2000aefc:	00000000 	andeq	r0, r0, r0

2000af00 <s_micros>:
	...

2000af08 <set_timer>:
2000af08:	00000000 	andeq	r0, r0, r0

2000af0c <s_nSysTickMillis>:
2000af0c:	00000000 	andeq	r0, r0, r0

2000af10 <s_nAddress>:
2000af10:	00000000 	andeq	r0, r0, r0

2000af14 <s_TxBuffer>:
	...

20010f14 <dma_current_ptp_rxdesc>:
20010f14:	00000000 	andeq	r0, r0, r0

20010f18 <dma_current_ptp_txdesc>:
20010f18:	00000000 	andeq	r0, r0, r0

20010f1c <dma_current_rxdesc>:
20010f1c:	00000000 	andeq	r0, r0, r0

20010f20 <dma_current_txdesc>:
20010f20:	00000000 	andeq	r0, r0, r0

20010f24 <enet_initpara>:
	...

20010f60 <rx_buff>:
	...

20013f00 <rxdesc_tab>:
	...

20013f80 <tx_buff>:
	...

20014b68 <txdesc_tab>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
