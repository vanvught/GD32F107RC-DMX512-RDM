
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	0800882d 	stmdaeq	r0, {r0, r2, r3, r5, fp, pc}
 8007008:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800700c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007010:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007014:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007018:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
	...
 800702c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007030:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800703c:	080124f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, sp}
 8007040:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007044:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007048:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800704c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007050:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007054:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007058:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800705c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007060:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007064:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007068:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800706c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007070:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007074:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007078:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800707c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007080:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007084:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007088:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800708c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007090:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007094:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007098:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800709c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070a0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070a4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070a8:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070ac:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070b0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070b4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070b8:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070bc:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070c0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070c4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070c8:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070cc:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070d0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070d4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070d8:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070dc:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070e0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070e4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070e8:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070ec:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070f0:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 80070f4:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
	...
 8007100:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800710c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007110:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007114:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007118:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800711c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007120:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007124:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007128:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800712c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007130:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007134:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007138:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800713c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007140:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007144:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 8007148:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}
 800714c:	08008879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9ab 	bl	80074e4 <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f009 fa35 	bl	8010610 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f007 fd30 	bl	800ec14 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f887 	bl	80072cc <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f009 fc46 	bl	8010a50 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	200029cc 	andcs	r2, r0, ip, asr #19
 80071e8:	200029c0 	andcs	r2, r0, r0, asr #19
 80071ec:	200029d2 	ldrdcs	r2, [r0], -r2	; <UNPREDICTABLE>

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f982 	bl	80074fa <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f009 bb0e 	b.w	8010820 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	200029d2 	ldrdcs	r2, [r0], -r2	; <UNPREDICTABLE>

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	200029dc 	ldrdcs	r2, [r0], -ip

08007224 <tcp_init>:
 8007224:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007226:	2206      	movs	r2, #6
 8007228:	4c0e      	ldr	r4, [pc, #56]	; (8007264 <tcp_init+0x40>)
 800722a:	490f      	ldr	r1, [pc, #60]	; (8007268 <tcp_init+0x44>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f007 fd4b 	bl	800ecc8 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	2500      	movs	r5, #0
 8007238:	7323      	strb	r3, [r4, #12]
 800723a:	4b0c      	ldr	r3, [pc, #48]	; (800726c <tcp_init+0x48>)
 800723c:	eb0d 0102 	add.w	r1, sp, r2
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	f104 001a 	add.w	r0, r4, #26
 8007246:	9301      	str	r3, [sp, #4]
 8007248:	7365      	strb	r5, [r4, #13]
 800724a:	f007 fd3d 	bl	800ecc8 <memcpy.isra.0>
 800724e:	2345      	movs	r3, #69	; 0x45
 8007250:	73a3      	strb	r3, [r4, #14]
 8007252:	2340      	movs	r3, #64	; 0x40
 8007254:	7523      	strb	r3, [r4, #20]
 8007256:	75a3      	strb	r3, [r4, #22]
 8007258:	2306      	movs	r3, #6
 800725a:	73e5      	strb	r5, [r4, #15]
 800725c:	7565      	strb	r5, [r4, #21]
 800725e:	75e3      	strb	r3, [r4, #23]
 8007260:	b003      	add	sp, #12
 8007262:	bd30      	pop	{r4, r5, pc}
 8007264:	200035a0 	andcs	r3, r0, r0, lsr #11
 8007268:	200029cc 	andcs	r2, r0, ip, asr #19
 800726c:	200029c0 	andcs	r2, r0, r0, asr #19

08007270 <udp_init>:
 8007270:	b570      	push	{r4, r5, r6, lr}
 8007272:	2200      	movs	r2, #0
 8007274:	2408      	movs	r4, #8
 8007276:	460e      	mov	r6, r1
 8007278:	4b0d      	ldr	r3, [pc, #52]	; (80072b0 <udp_init+0x40>)
 800727a:	490e      	ldr	r1, [pc, #56]	; (80072b4 <udp_init+0x44>)
 800727c:	3c01      	subs	r4, #1
 800727e:	801a      	strh	r2, [r3, #0]
 8007280:	805a      	strh	r2, [r3, #2]
 8007282:	f841 2b04 	str.w	r2, [r1], #4
 8007286:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800728a:	d1f7      	bne.n	800727c <udp_init+0xc>
 800728c:	2206      	movs	r2, #6
 800728e:	4d0a      	ldr	r5, [pc, #40]	; (80072b8 <udp_init+0x48>)
 8007290:	4b0a      	ldr	r3, [pc, #40]	; (80072bc <udp_init+0x4c>)
 8007292:	4601      	mov	r1, r0
 8007294:	18a8      	adds	r0, r5, r2
 8007296:	801c      	strh	r4, [r3, #0]
 8007298:	f007 fea2 	bl	800efe0 <memcpy.isra.0>
 800729c:	4b08      	ldr	r3, [pc, #32]	; (80072c0 <udp_init+0x50>)
 800729e:	4630      	mov	r0, r6
 80072a0:	60eb      	str	r3, [r5, #12]
 80072a2:	4b08      	ldr	r3, [pc, #32]	; (80072c4 <udp_init+0x54>)
 80072a4:	616b      	str	r3, [r5, #20]
 80072a6:	f007 fec7 	bl	800f038 <udp_set_ip>
 80072aa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072ac:	bd70      	pop	{r4, r5, r6, pc}
 80072ae:	bf00      	nop
 80072b0:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc
 80072b4:	20003b9c 	mulcs	r0, ip, fp
 80072b8:	2000985c 	andcs	r9, r0, ip, asr r8
 80072bc:	20003b98 	mulcs	r0, r8, fp
 80072c0:	00450008 	subeq	r0, r5, r8
 80072c4:	11400040 	cmpne	r0, r0, asr #32

080072c8 <udp_shutdown>:
 80072c8:	4770      	bx	lr
	...

080072cc <arp_init>:
 80072cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d0:	4604      	mov	r4, r0
 80072d2:	460d      	mov	r5, r1
 80072d4:	f000 f876 	bl	80073c4 <arp_cache_init>
 80072d8:	2206      	movs	r2, #6
 80072da:	4621      	mov	r1, r4
 80072dc:	482e      	ldr	r0, [pc, #184]	; (8007398 <arp_init+0xcc>)
 80072de:	682f      	ldr	r7, [r5, #0]
 80072e0:	f009 f808 	bl	80102f4 <memcpy.isra.0>
 80072e4:	4b2d      	ldr	r3, [pc, #180]	; (800739c <arp_init+0xd0>)
 80072e6:	2507      	movs	r5, #7
 80072e8:	461e      	mov	r6, r3
 80072ea:	22ff      	movs	r2, #255	; 0xff
 80072ec:	3d01      	subs	r5, #1
 80072ee:	d146      	bne.n	800737e <arp_init+0xb2>
 80072f0:	4b2b      	ldr	r3, [pc, #172]	; (80073a0 <arp_init+0xd4>)
 80072f2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073a4 <arp_init+0xd8>
 80072f6:	2206      	movs	r2, #6
 80072f8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072fc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007300:	4621      	mov	r1, r4
 8007302:	4829      	ldr	r0, [pc, #164]	; (80073a8 <arp_init+0xdc>)
 8007304:	82b3      	strh	r3, [r6, #20]
 8007306:	f008 fff5 	bl	80102f4 <memcpy.isra.0>
 800730a:	2307      	movs	r3, #7
 800730c:	4a27      	ldr	r2, [pc, #156]	; (80073ac <arp_init+0xe0>)
 800730e:	61f7      	str	r7, [r6, #28]
 8007310:	3b01      	subs	r3, #1
 8007312:	d137      	bne.n	8007384 <arp_init+0xb8>
 8007314:	2206      	movs	r2, #6
 8007316:	4621      	mov	r1, r4
 8007318:	4825      	ldr	r0, [pc, #148]	; (80073b0 <arp_init+0xe4>)
 800731a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800731e:	f008 ffe9 	bl	80102f4 <memcpy.isra.0>
 8007322:	4a24      	ldr	r2, [pc, #144]	; (80073b4 <arp_init+0xe8>)
 8007324:	2306      	movs	r3, #6
 8007326:	4615      	mov	r5, r2
 8007328:	21ff      	movs	r1, #255	; 0xff
 800732a:	3b01      	subs	r3, #1
 800732c:	d22d      	bcs.n	800738a <arp_init+0xbe>
 800732e:	4b1c      	ldr	r3, [pc, #112]	; (80073a0 <arp_init+0xd4>)
 8007330:	2206      	movs	r2, #6
 8007332:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007336:	f44f 7380 	mov.w	r3, #256	; 0x100
 800733a:	4621      	mov	r1, r4
 800733c:	481e      	ldr	r0, [pc, #120]	; (80073b8 <arp_init+0xec>)
 800733e:	82ab      	strh	r3, [r5, #20]
 8007340:	f008 ffd8 	bl	80102f4 <memcpy.isra.0>
 8007344:	2307      	movs	r3, #7
 8007346:	2100      	movs	r1, #0
 8007348:	4a1c      	ldr	r2, [pc, #112]	; (80073bc <arp_init+0xf0>)
 800734a:	61ef      	str	r7, [r5, #28]
 800734c:	3b01      	subs	r3, #1
 800734e:	d11f      	bne.n	8007390 <arp_init+0xc4>
 8007350:	2206      	movs	r2, #6
 8007352:	4d1b      	ldr	r5, [pc, #108]	; (80073c0 <arp_init+0xf4>)
 8007354:	4621      	mov	r1, r4
 8007356:	18a8      	adds	r0, r5, r2
 8007358:	f008 ffcc 	bl	80102f4 <memcpy.isra.0>
 800735c:	4b10      	ldr	r3, [pc, #64]	; (80073a0 <arp_init+0xd4>)
 800735e:	4621      	mov	r1, r4
 8007360:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007364:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007368:	f105 0016 	add.w	r0, r5, #22
 800736c:	2206      	movs	r2, #6
 800736e:	82ab      	strh	r3, [r5, #20]
 8007370:	f008 ffc0 	bl	80102f4 <memcpy.isra.0>
 8007374:	61ef      	str	r7, [r5, #28]
 8007376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800737a:	f008 bfc5 	b.w	8010308 <arp_announce>
 800737e:	f803 2b01 	strb.w	r2, [r3], #1
 8007382:	e7b3      	b.n	80072ec <arp_init+0x20>
 8007384:	f802 5b01 	strb.w	r5, [r2], #1
 8007388:	e7c2      	b.n	8007310 <arp_init+0x44>
 800738a:	f802 1b01 	strb.w	r1, [r2], #1
 800738e:	e7cc      	b.n	800732a <arp_init+0x5e>
 8007390:	f802 1b01 	strb.w	r1, [r2], #1
 8007394:	e7da      	b.n	800734c <arp_init+0x80>
 8007396:	bf00      	nop
 8007398:	2000a2f2 	strdcs	sl, [r0], -r2
 800739c:	2000a2ec 	andcs	sl, r0, ip, ror #5
 80073a0:	01000608 	tsteq	r0, r8, lsl #12
 80073a4:	04060008 	streq	r0, [r6], #-8
 80073a8:	2000a302 	andcs	sl, r0, r2, lsl #6
 80073ac:	2000a30c 	andcs	sl, r0, ip, lsl #6
 80073b0:	2000a34a 	andcs	sl, r0, sl, asr #6
 80073b4:	2000a344 	andcs	sl, r0, r4, asr #6
 80073b8:	2000a35a 	andcs	sl, r0, sl, asr r3
 80073bc:	2000a364 	andcs	sl, r0, r4, ror #6
 80073c0:	2000a318 	andcs	sl, r0, r8, lsl r3

080073c4 <arp_cache_init>:
 80073c4:	2300      	movs	r3, #0
 80073c6:	4618      	mov	r0, r3
 80073c8:	4a09      	ldr	r2, [pc, #36]	; (80073f0 <arp_cache_init+0x2c>)
 80073ca:	b510      	push	{r4, lr}
 80073cc:	8013      	strh	r3, [r2, #0]
 80073ce:	4a09      	ldr	r2, [pc, #36]	; (80073f4 <arp_cache_init+0x30>)
 80073d0:	4611      	mov	r1, r2
 80073d2:	f842 0c04 	str.w	r0, [r2, #-4]
 80073d6:	1d94      	adds	r4, r2, #6
 80073d8:	42a1      	cmp	r1, r4
 80073da:	d105      	bne.n	80073e8 <arp_cache_init+0x24>
 80073dc:	3303      	adds	r3, #3
 80073de:	2b60      	cmp	r3, #96	; 0x60
 80073e0:	f102 020c 	add.w	r2, r2, #12
 80073e4:	d1f4      	bne.n	80073d0 <arp_cache_init+0xc>
 80073e6:	bd10      	pop	{r4, pc}
 80073e8:	f801 0b01 	strb.w	r0, [r1], #1
 80073ec:	e7f4      	b.n	80073d8 <arp_cache_init+0x14>
 80073ee:	bf00      	nop
 80073f0:	2000a4f0 	strdcs	sl, [r0], -r0
 80073f4:	2000a374 	andcs	sl, r0, r4, ror r3

080073f8 <igmp_init>:
 80073f8:	2200      	movs	r2, #0
 80073fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073fe:	4605      	mov	r5, r0
 8007400:	4608      	mov	r0, r1
 8007402:	4611      	mov	r1, r2
 8007404:	4b23      	ldr	r3, [pc, #140]	; (8007494 <igmp_init+0x9c>)
 8007406:	f103 0408 	add.w	r4, r3, #8
 800740a:	42a3      	cmp	r3, r4
 800740c:	d13e      	bne.n	800748c <igmp_init+0x94>
 800740e:	3201      	adds	r2, #1
 8007410:	2a24      	cmp	r2, #36	; 0x24
 8007412:	d1f8      	bne.n	8007406 <igmp_init+0xe>
 8007414:	2600      	movs	r6, #0
 8007416:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa0>)
 8007418:	4c20      	ldr	r4, [pc, #128]	; (800749c <igmp_init+0xa4>)
 800741a:	601e      	str	r6, [r3, #0]
 800741c:	4b20      	ldr	r3, [pc, #128]	; (80074a0 <igmp_init+0xa8>)
 800741e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007422:	801e      	strh	r6, [r3, #0]
 8007424:	f009 fa74 	bl	8010910 <igmp_set_ip>
 8007428:	2201      	movs	r2, #1
 800742a:	4b1e      	ldr	r3, [pc, #120]	; (80074a4 <igmp_init+0xac>)
 800742c:	4629      	mov	r1, r5
 800742e:	801a      	strh	r2, [r3, #0]
 8007430:	225e      	movs	r2, #94	; 0x5e
 8007432:	709a      	strb	r2, [r3, #2]
 8007434:	2206      	movs	r2, #6
 8007436:	18a0      	adds	r0, r4, r2
 8007438:	f009 fa20 	bl	801087c <memcpy.isra.0>
 800743c:	f240 4394 	movw	r3, #1172	; 0x494
 8007440:	8463      	strh	r3, [r4, #34]	; 0x22
 8007442:	2316      	movs	r3, #22
 8007444:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a8 <igmp_init+0xb0>
 8007448:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074ac <igmp_init+0xb4>
 800744c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800744e:	f8c4 9014 	str.w	r9, [r4, #20]
 8007452:	4b17      	ldr	r3, [pc, #92]	; (80074b0 <igmp_init+0xb8>)
 8007454:	f8c4 800c 	str.w	r8, [r4, #12]
 8007458:	8227      	strh	r7, [r4, #16]
 800745a:	84a6      	strh	r6, [r4, #36]	; 0x24
 800745c:	4c15      	ldr	r4, [pc, #84]	; (80074b4 <igmp_init+0xbc>)
 800745e:	2206      	movs	r2, #6
 8007460:	6023      	str	r3, [r4, #0]
 8007462:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007466:	18a0      	adds	r0, r4, r2
 8007468:	80a3      	strh	r3, [r4, #4]
 800746a:	4629      	mov	r1, r5
 800746c:	f009 fa06 	bl	801087c <memcpy.isra.0>
 8007470:	23e0      	movs	r3, #224	; 0xe0
 8007472:	83e3      	strh	r3, [r4, #30]
 8007474:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007478:	4a0f      	ldr	r2, [pc, #60]	; (80074b8 <igmp_init+0xc0>)
 800747a:	f8c4 9014 	str.w	r9, [r4, #20]
 800747e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8007482:	f8c4 800c 	str.w	r8, [r4, #12]
 8007486:	8227      	strh	r7, [r4, #16]
 8007488:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800748c:	f803 1b01 	strb.w	r1, [r3], #1
 8007490:	e7bb      	b.n	800740a <igmp_init+0x12>
 8007492:	bf00      	nop
 8007494:	2000a728 	andcs	sl, r0, r8, lsr #14
 8007498:	2000a84c 	andcs	sl, r0, ip, asr #16
 800749c:	2000a888 	andcs	sl, r0, r8, lsl #17
 80074a0:	2000a848 	andcs	sl, r0, r8, asr #16
 80074a4:	2000a880 	andcs	sl, r0, r0, lsl #17
 80074a8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074ac:	00460008 	subeq	r0, r6, r8
 80074b0:	005e0001 	subseq	r0, lr, r1
 80074b4:	2000a850 	andcs	sl, r0, r0, asr r8
 80074b8:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074bc <igmp_shutdown>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	2500      	movs	r5, #0
 80074c0:	462e      	mov	r6, r5
 80074c2:	4c07      	ldr	r4, [pc, #28]	; (80074e0 <igmp_shutdown+0x24>)
 80074c4:	6820      	ldr	r0, [r4, #0]
 80074c6:	b120      	cbz	r0, 80074d2 <igmp_shutdown+0x16>
 80074c8:	f009 fa7e 	bl	80109c8 <igmp_leave>
 80074cc:	6026      	str	r6, [r4, #0]
 80074ce:	7166      	strb	r6, [r4, #5]
 80074d0:	7126      	strb	r6, [r4, #4]
 80074d2:	3501      	adds	r5, #1
 80074d4:	2d24      	cmp	r5, #36	; 0x24
 80074d6:	f104 0408 	add.w	r4, r4, #8
 80074da:	d1f3      	bne.n	80074c4 <igmp_shutdown+0x8>
 80074dc:	bd70      	pop	{r4, r5, r6, pc}
 80074de:	bf00      	nop
 80074e0:	2000a728 	andcs	sl, r0, r8, lsr #14

080074e4 <ip_init>:
 80074e4:	b538      	push	{r3, r4, r5, lr}
 80074e6:	4604      	mov	r4, r0
 80074e8:	460d      	mov	r5, r1
 80074ea:	f7ff fec1 	bl	8007270 <udp_init>
 80074ee:	4629      	mov	r1, r5
 80074f0:	4620      	mov	r0, r4
 80074f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074f6:	f7ff bf7f 	b.w	80073f8 <igmp_init>

080074fa <ip_shutdown>:
 80074fa:	b508      	push	{r3, lr}
 80074fc:	f7ff ffde 	bl	80074bc <igmp_shutdown>
 8007500:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007504:	f7ff bee0 	b.w	80072c8 <udp_shutdown>

08007508 <console_init>:
 8007508:	b508      	push	{r3, lr}
 800750a:	f00a ff95 	bl	8012438 <uart0_init>
 800750e:	4804      	ldr	r0, [pc, #16]	; (8007520 <console_init+0x18>)
 8007510:	f00a ffc2 	bl	8012498 <uart0_puts>
 8007514:	4803      	ldr	r0, [pc, #12]	; (8007524 <console_init+0x1c>)
 8007516:	f00a ffbf 	bl	8012498 <uart0_puts>
 800751a:	2000      	movs	r0, #0
 800751c:	bd08      	pop	{r3, pc}
 800751e:	bf00      	nop
 8007520:	080143a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, lr}
 8007524:	08016390 	stmdaeq	r1, {r4, r7, r8, r9, sp, lr}

08007528 <net_handle>:
 8007528:	b510      	push	{r4, lr}
 800752a:	4c0c      	ldr	r4, [pc, #48]	; (800755c <net_handle+0x34>)
 800752c:	4620      	mov	r0, r4
 800752e:	f00b fd25 	bl	8012f7c <emac_eth_recv>
 8007532:	2800      	cmp	r0, #0
 8007534:	dd07      	ble.n	8007546 <net_handle+0x1e>
 8007536:	6820      	ldr	r0, [r4, #0]
 8007538:	8983      	ldrh	r3, [r0, #12]
 800753a:	2b08      	cmp	r3, #8
 800753c:	d107      	bne.n	800754e <net_handle+0x26>
 800753e:	f000 fa71 	bl	8007a24 <ip_handle>
 8007542:	f00b fd2f 	bl	8012fa4 <emac_free_pkt>
 8007546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800754a:	f007 bb53 	b.w	800ebf4 <net_timers_run>
 800754e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 8007552:	d1f6      	bne.n	8007542 <net_handle+0x1a>
 8007554:	f000 fa0a 	bl	800796c <arp_handle>
 8007558:	e7f3      	b.n	8007542 <net_handle+0x1a>
 800755a:	bf00      	nop
 800755c:	200029d4 	ldrdcs	r2, [r0], -r4

08007560 <tcp_handle>:
 8007560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007564:	4605      	mov	r5, r0
 8007566:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007568:	b085      	sub	sp, #20
 800756a:	ba5b      	rev16	r3, r3
 800756c:	8443      	strh	r3, [r0, #34]	; 0x22
 800756e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007570:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 8007574:	ba5b      	rev16	r3, r3
 8007576:	8483      	strh	r3, [r0, #36]	; 0x24
 8007578:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800757c:	f007 fbae 	bl	800ecdc <_bswap32>
 8007580:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007582:	4ca6      	ldr	r4, [pc, #664]	; (800781c <tcp_handle+0x2bc>)
 8007584:	ba5b      	rev16	r3, r3
 8007586:	862b      	strh	r3, [r5, #48]	; 0x30
 8007588:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800758a:	8822      	ldrh	r2, [r4, #0]
 800758c:	ba5b      	rev16	r3, r3
 800758e:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007590:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007592:	429a      	cmp	r2, r3
 8007594:	d14d      	bne.n	8007632 <tcp_handle+0xd2>
 8007596:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800759a:	2b01      	cmp	r3, #1
 800759c:	d00d      	beq.n	80075ba <tcp_handle+0x5a>
 800759e:	2204      	movs	r2, #4
 80075a0:	4668      	mov	r0, sp
 80075a2:	f105 011a 	add.w	r1, r5, #26
 80075a6:	f007 fb8f 	bl	800ecc8 <memcpy.isra.0>
 80075aa:	8862      	ldrh	r2, [r4, #2]
 80075ac:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075ae:	429a      	cmp	r2, r3
 80075b0:	d13f      	bne.n	8007632 <tcp_handle+0xd2>
 80075b2:	6862      	ldr	r2, [r4, #4]
 80075b4:	9b00      	ldr	r3, [sp, #0]
 80075b6:	429a      	cmp	r2, r3
 80075b8:	d13b      	bne.n	8007632 <tcp_handle+0xd2>
 80075ba:	2204      	movs	r2, #4
 80075bc:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075c0:	eb0d 0002 	add.w	r0, sp, r2
 80075c4:	f007 fb80 	bl	800ecc8 <memcpy.isra.0>
 80075c8:	2204      	movs	r2, #4
 80075ca:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075ce:	eb0d 0002 	add.w	r0, sp, r2
 80075d2:	9e01      	ldr	r6, [sp, #4]
 80075d4:	f007 fb78 	bl	800ecc8 <memcpy.isra.0>
 80075d8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075dc:	9f01      	ldr	r7, [sp, #4]
 80075de:	2a01      	cmp	r2, #1
 80075e0:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075e4:	d01b      	beq.n	800761e <tcp_handle+0xbe>
 80075e6:	1ed3      	subs	r3, r2, #3
 80075e8:	2b07      	cmp	r3, #7
 80075ea:	d822      	bhi.n	8007632 <tcp_handle+0xd2>
 80075ec:	ea4f 1318 	mov.w	r3, r8, lsr #4
 80075f0:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075f4:	fa9b fb9b 	rev16.w	fp, fp
 80075f8:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075fc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075fe:	44d8      	add	r8, fp
 8007600:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007604:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007608:	fa1f f888 	uxth.w	r8, r8
 800760c:	2900      	cmp	r1, #0
 800760e:	d142      	bne.n	8007696 <tcp_handle+0x136>
 8007610:	f1b8 0f00 	cmp.w	r8, #0
 8007614:	d16b      	bne.n	80076ee <tcp_handle+0x18e>
 8007616:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007618:	42bb      	cmp	r3, r7
 800761a:	d168      	bne.n	80076ee <tcp_handle+0x18e>
 800761c:	e048      	b.n	80076b0 <tcp_handle+0x150>
 800761e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007622:	075a      	lsls	r2, r3, #29
 8007624:	d405      	bmi.n	8007632 <tcp_handle+0xd2>
 8007626:	06d8      	lsls	r0, r3, #27
 8007628:	d506      	bpl.n	8007638 <tcp_handle+0xd8>
 800762a:	4628      	mov	r0, r5
 800762c:	497b      	ldr	r1, [pc, #492]	; (800781c <tcp_handle+0x2bc>)
 800762e:	f007 fc29 	bl	800ee84 <_send_reset>
 8007632:	b005      	add	sp, #20
 8007634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007638:	0799      	lsls	r1, r3, #30
 800763a:	d5fa      	bpl.n	8007632 <tcp_handle+0xd2>
 800763c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007640:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007644:	4668      	mov	r0, sp
 8007646:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800764a:	f105 011a 	add.w	r1, r5, #26
 800764e:	2204      	movs	r2, #4
 8007650:	8063      	strh	r3, [r4, #2]
 8007652:	f007 fb39 	bl	800ecc8 <memcpy.isra.0>
 8007656:	2206      	movs	r2, #6
 8007658:	9b00      	ldr	r3, [sp, #0]
 800765a:	18a9      	adds	r1, r5, r2
 800765c:	4870      	ldr	r0, [pc, #448]	; (8007820 <tcp_handle+0x2c0>)
 800765e:	6063      	str	r3, [r4, #4]
 8007660:	f007 fb32 	bl	800ecc8 <memcpy.isra.0>
 8007664:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007666:	1c7b      	adds	r3, r7, #1
 8007668:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800766c:	6363      	str	r3, [r4, #52]	; 0x34
 800766e:	2312      	movs	r3, #18
 8007670:	486a      	ldr	r0, [pc, #424]	; (800781c <tcp_handle+0x2bc>)
 8007672:	a901      	add	r1, sp, #4
 8007674:	f88d 300c 	strb.w	r3, [sp, #12]
 8007678:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800767c:	63e7      	str	r7, [r4, #60]	; 0x3c
 800767e:	f8c4 a018 	str.w	sl, [r4, #24]
 8007682:	f007 fb51 	bl	800ed28 <_tcp_send_package>
 8007686:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007688:	1c5a      	adds	r2, r3, #1
 800768a:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800768e:	2303      	movs	r3, #3
 8007690:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007694:	e7cd      	b.n	8007632 <tcp_handle+0xd2>
 8007696:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007698:	eba3 0c07 	sub.w	ip, r3, r7
 800769c:	f1b8 0f00 	cmp.w	r8, #0
 80076a0:	d10d      	bne.n	80076be <tcp_handle+0x15e>
 80076a2:	f1bc 0f00 	cmp.w	ip, #0
 80076a6:	dc22      	bgt.n	80076ee <tcp_handle+0x18e>
 80076a8:	1afb      	subs	r3, r7, r3
 80076aa:	1a5b      	subs	r3, r3, r1
 80076ac:	2b00      	cmp	r3, #0
 80076ae:	da1e      	bge.n	80076ee <tcp_handle+0x18e>
 80076b0:	0743      	lsls	r3, r0, #29
 80076b2:	d530      	bpl.n	8007716 <tcp_handle+0x1b6>
 80076b4:	8821      	ldrh	r1, [r4, #0]
 80076b6:	4859      	ldr	r0, [pc, #356]	; (800781c <tcp_handle+0x2bc>)
 80076b8:	f007 faec 	bl	800ec94 <_init_tcb>
 80076bc:	e7b9      	b.n	8007632 <tcp_handle+0xd2>
 80076be:	f1bc 0f00 	cmp.w	ip, #0
 80076c2:	dc06      	bgt.n	80076d2 <tcp_handle+0x172>
 80076c4:	eba7 0c03 	sub.w	ip, r7, r3
 80076c8:	ebac 0c01 	sub.w	ip, ip, r1
 80076cc:	f1bc 0f00 	cmp.w	ip, #0
 80076d0:	dbee      	blt.n	80076b0 <tcp_handle+0x150>
 80076d2:	eb08 0c07 	add.w	ip, r8, r7
 80076d6:	f103 0e01 	add.w	lr, r3, #1
 80076da:	ebae 0e0c 	sub.w	lr, lr, ip
 80076de:	f1be 0f00 	cmp.w	lr, #0
 80076e2:	dc04      	bgt.n	80076ee <tcp_handle+0x18e>
 80076e4:	43db      	mvns	r3, r3
 80076e6:	1a5b      	subs	r3, r3, r1
 80076e8:	eb13 0f0c 	cmn.w	r3, ip
 80076ec:	d4e0      	bmi.n	80076b0 <tcp_handle+0x150>
 80076ee:	0742      	lsls	r2, r0, #29
 80076f0:	d505      	bpl.n	80076fe <tcp_handle+0x19e>
 80076f2:	8821      	ldrh	r1, [r4, #0]
 80076f4:	4849      	ldr	r0, [pc, #292]	; (800781c <tcp_handle+0x2bc>)
 80076f6:	f007 facd 	bl	800ec94 <_init_tcb>
 80076fa:	2301      	movs	r3, #1
 80076fc:	e7c8      	b.n	8007690 <tcp_handle+0x130>
 80076fe:	6963      	ldr	r3, [r4, #20]
 8007700:	9301      	str	r3, [sp, #4]
 8007702:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007704:	9302      	str	r3, [sp, #8]
 8007706:	2310      	movs	r3, #16
 8007708:	4844      	ldr	r0, [pc, #272]	; (800781c <tcp_handle+0x2bc>)
 800770a:	a901      	add	r1, sp, #4
 800770c:	f88d 300c 	strb.w	r3, [sp, #12]
 8007710:	f007 fb0a 	bl	800ed28 <_tcp_send_package>
 8007714:	e78d      	b.n	8007632 <tcp_handle+0xd2>
 8007716:	0781      	lsls	r1, r0, #30
 8007718:	d505      	bpl.n	8007726 <tcp_handle+0x1c6>
 800771a:	2a03      	cmp	r2, #3
 800771c:	d0ed      	beq.n	80076fa <tcp_handle+0x19a>
 800771e:	4628      	mov	r0, r5
 8007720:	493e      	ldr	r1, [pc, #248]	; (800781c <tcp_handle+0x2bc>)
 8007722:	f007 fbaf 	bl	800ee84 <_send_reset>
 8007726:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800772a:	06da      	lsls	r2, r3, #27
 800772c:	d581      	bpl.n	8007632 <tcp_handle+0xd2>
 800772e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007732:	3b03      	subs	r3, #3
 8007734:	2b07      	cmp	r3, #7
 8007736:	d818      	bhi.n	800776a <tcp_handle+0x20a>
 8007738:	e8df f003 	tbb	[pc, r3]
 800773c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007740:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 8007744:	6923      	ldr	r3, [r4, #16]
 8007746:	1b9b      	subs	r3, r3, r6
 8007748:	2b00      	cmp	r3, #0
 800774a:	dc0a      	bgt.n	8007762 <tcp_handle+0x202>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	1af3      	subs	r3, r6, r3
 8007750:	2b00      	cmp	r3, #0
 8007752:	dc06      	bgt.n	8007762 <tcp_handle+0x202>
 8007754:	2304      	movs	r3, #4
 8007756:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800775a:	f8c4 a018 	str.w	sl, [r4, #24]
 800775e:	6126      	str	r6, [r4, #16]
 8007760:	e796      	b.n	8007690 <tcp_handle+0x130>
 8007762:	4628      	mov	r0, r5
 8007764:	492d      	ldr	r1, [pc, #180]	; (800781c <tcp_handle+0x2bc>)
 8007766:	f007 fb8d 	bl	800ee84 <_send_reset>
 800776a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800776e:	3b04      	subs	r3, #4
 8007770:	2b02      	cmp	r3, #2
 8007772:	d830      	bhi.n	80077d6 <tcp_handle+0x276>
 8007774:	f1b8 0f00 	cmp.w	r8, #0
 8007778:	d02d      	beq.n	80077d6 <tcp_handle+0x276>
 800777a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800777c:	42bb      	cmp	r3, r7
 800777e:	f040 8092 	bne.w	80078a6 <tcp_handle+0x346>
 8007782:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8007786:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007824 <tcp_handle+0x2c4>
 800778a:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800778e:	f8ba 7000 	ldrh.w	r7, [sl]
 8007792:	4642      	mov	r2, r8
 8007794:	435f      	muls	r7, r3
 8007796:	1d38      	adds	r0, r7, #4
 8007798:	4449      	add	r1, r9
 800779a:	4450      	add	r0, sl
 800779c:	f007 fa94 	bl	800ecc8 <memcpy.isra.0>
 80077a0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077a4:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077a8:	8722      	strh	r2, [r4, #56]	; 0x38
 80077aa:	6962      	ldr	r2, [r4, #20]
 80077ac:	4443      	add	r3, r8
 80077ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077b2:	6363      	str	r3, [r4, #52]	; 0x34
 80077b4:	2310      	movs	r3, #16
 80077b6:	4457      	add	r7, sl
 80077b8:	4818      	ldr	r0, [pc, #96]	; (800781c <tcp_handle+0x2bc>)
 80077ba:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077be:	a901      	add	r1, sp, #4
 80077c0:	f88d 300c 	strb.w	r3, [sp, #12]
 80077c4:	f007 fab0 	bl	800ed28 <_tcp_send_package>
 80077c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80077cc:	3301      	adds	r3, #1
 80077ce:	f003 0301 	and.w	r3, r3, #1
 80077d2:	f8aa 3000 	strh.w	r3, [sl]
 80077d6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077da:	2b02      	cmp	r3, #2
 80077dc:	f67f af29 	bls.w	8007632 <tcp_handle+0xd2>
 80077e0:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077e4:	07db      	lsls	r3, r3, #31
 80077e6:	f57f af24 	bpl.w	8007632 <tcp_handle+0xd2>
 80077ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ec:	6962      	ldr	r2, [r4, #20]
 80077ee:	3301      	adds	r3, #1
 80077f0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077f4:	6363      	str	r3, [r4, #52]	; 0x34
 80077f6:	2310      	movs	r3, #16
 80077f8:	4808      	ldr	r0, [pc, #32]	; (800781c <tcp_handle+0x2bc>)
 80077fa:	a901      	add	r1, sp, #4
 80077fc:	f88d 300c 	strb.w	r3, [sp, #12]
 8007800:	f007 fa92 	bl	800ed28 <_tcp_send_package>
 8007804:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007808:	2b05      	cmp	r3, #5
 800780a:	d054      	beq.n	80078b6 <tcp_handle+0x356>
 800780c:	d84e      	bhi.n	80078ac <tcp_handle+0x34c>
 800780e:	3b03      	subs	r3, #3
 8007810:	2b01      	cmp	r3, #1
 8007812:	f63f af0e 	bhi.w	8007632 <tcp_handle+0xd2>
 8007816:	2307      	movs	r3, #7
 8007818:	e73a      	b.n	8007690 <tcp_handle+0x130>
 800781a:	bf00      	nop
 800781c:	2000355c 	andcs	r3, r0, ip, asr r5
 8007820:	20003564 	andcs	r3, r0, r4, ror #10
 8007824:	200029ec 	andcs	r2, r0, ip, ror #19
 8007828:	6923      	ldr	r3, [r4, #16]
 800782a:	1b99      	subs	r1, r3, r6
 800782c:	d513      	bpl.n	8007856 <tcp_handle+0x2f6>
 800782e:	6962      	ldr	r2, [r4, #20]
 8007830:	1ab2      	subs	r2, r6, r2
 8007832:	2a00      	cmp	r2, #0
 8007834:	dc0f      	bgt.n	8007856 <tcp_handle+0x2f6>
 8007836:	6126      	str	r6, [r4, #16]
 8007838:	6a23      	ldr	r3, [r4, #32]
 800783a:	1bda      	subs	r2, r3, r7
 800783c:	2a00      	cmp	r2, #0
 800783e:	db05      	blt.n	800784c <tcp_handle+0x2ec>
 8007840:	42bb      	cmp	r3, r7
 8007842:	d192      	bne.n	800776a <tcp_handle+0x20a>
 8007844:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007846:	1b9b      	subs	r3, r3, r6
 8007848:	2b00      	cmp	r3, #0
 800784a:	dc8e      	bgt.n	800776a <tcp_handle+0x20a>
 800784c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007850:	f8c4 a018 	str.w	sl, [r4, #24]
 8007854:	e789      	b.n	800776a <tcp_handle+0x20a>
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc06      	bgt.n	800786a <tcp_handle+0x30a>
 800785c:	2900      	cmp	r1, #0
 800785e:	dc84      	bgt.n	800776a <tcp_handle+0x20a>
 8007860:	6963      	ldr	r3, [r4, #20]
 8007862:	1af3      	subs	r3, r6, r3
 8007864:	2b00      	cmp	r3, #0
 8007866:	dc80      	bgt.n	800776a <tcp_handle+0x20a>
 8007868:	e7e6      	b.n	8007838 <tcp_handle+0x2d8>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	1b9a      	subs	r2, r3, r6
 800786e:	2a00      	cmp	r2, #0
 8007870:	f6bf af7b 	bge.w	800776a <tcp_handle+0x20a>
 8007874:	e744      	b.n	8007700 <tcp_handle+0x1a0>
 8007876:	6963      	ldr	r3, [r4, #20]
 8007878:	42b3      	cmp	r3, r6
 800787a:	f47f af76 	bne.w	800776a <tcp_handle+0x20a>
 800787e:	8821      	ldrh	r1, [r4, #0]
 8007880:	480f      	ldr	r0, [pc, #60]	; (80078c0 <tcp_handle+0x360>)
 8007882:	f007 fa07 	bl	800ec94 <_init_tcb>
 8007886:	e770      	b.n	800776a <tcp_handle+0x20a>
 8007888:	6963      	ldr	r3, [r4, #20]
 800788a:	42b3      	cmp	r3, r6
 800788c:	f47f af6d 	bne.w	800776a <tcp_handle+0x20a>
 8007890:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007892:	480b      	ldr	r0, [pc, #44]	; (80078c0 <tcp_handle+0x360>)
 8007894:	9302      	str	r3, [sp, #8]
 8007896:	2310      	movs	r3, #16
 8007898:	a901      	add	r1, sp, #4
 800789a:	9601      	str	r6, [sp, #4]
 800789c:	f88d 300c 	strb.w	r3, [sp, #12]
 80078a0:	f007 fa42 	bl	800ed28 <_tcp_send_package>
 80078a4:	e761      	b.n	800776a <tcp_handle+0x20a>
 80078a6:	6962      	ldr	r2, [r4, #20]
 80078a8:	9201      	str	r2, [sp, #4]
 80078aa:	e72b      	b.n	8007704 <tcp_handle+0x1a4>
 80078ac:	2b06      	cmp	r3, #6
 80078ae:	f47f aec0 	bne.w	8007632 <tcp_handle+0xd2>
 80078b2:	230a      	movs	r3, #10
 80078b4:	e6ec      	b.n	8007690 <tcp_handle+0x130>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	42b3      	cmp	r3, r6
 80078ba:	d0fa      	beq.n	80078b2 <tcp_handle+0x352>
 80078bc:	2308      	movs	r3, #8
 80078be:	e6e7      	b.n	8007690 <tcp_handle+0x130>
 80078c0:	2000355c 	andcs	r3, r0, ip, asr r5

080078c4 <udp_handle>:
 80078c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078c8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078ca:	4607      	mov	r7, r0
 80078cc:	ba5b      	rev16	r3, r3
 80078ce:	b29b      	uxth	r3, r3
 80078d0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078d4:	2a01      	cmp	r2, #1
 80078d6:	d904      	bls.n	80078e2 <udp_handle+0x1e>
 80078d8:	2b7b      	cmp	r3, #123	; 0x7b
 80078da:	d002      	beq.n	80078e2 <udp_handle+0x1e>
 80078dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078e0:	d308      	bcc.n	80078f4 <udp_handle+0x30>
 80078e2:	2400      	movs	r4, #0
 80078e4:	4a1f      	ldr	r2, [pc, #124]	; (8007964 <udp_handle+0xa0>)
 80078e6:	f852 1b04 	ldr.w	r1, [r2], #4
 80078ea:	4299      	cmp	r1, r3
 80078ec:	d005      	beq.n	80078fa <udp_handle+0x36>
 80078ee:	3401      	adds	r4, #1
 80078f0:	2c08      	cmp	r4, #8
 80078f2:	d1f8      	bne.n	80078e6 <udp_handle+0x22>
 80078f4:	b002      	add	sp, #8
 80078f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078fa:	f640 3394 	movw	r3, #2964	; 0xb94
 80078fe:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007900:	435c      	muls	r4, r3
 8007902:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007906:	ba76      	rev16	r6, r6
 8007908:	3e08      	subs	r6, #8
 800790a:	b2b6      	uxth	r6, r6
 800790c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007910:	bf28      	it	cs
 8007912:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007916:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8007968 <udp_handle+0xa4>
 800791a:	1d20      	adds	r0, r4, #4
 800791c:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007920:	4632      	mov	r2, r6
 8007922:	435d      	muls	r5, r3
 8007924:	4428      	add	r0, r5
 8007926:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800792a:	4440      	add	r0, r8
 800792c:	f007 fb58 	bl	800efe0 <memcpy.isra.0>
 8007930:	2204      	movs	r2, #4
 8007932:	f107 011a 	add.w	r1, r7, #26
 8007936:	eb0d 0002 	add.w	r0, sp, r2
 800793a:	f007 fb51 	bl	800efe0 <memcpy.isra.0>
 800793e:	9a01      	ldr	r2, [sp, #4]
 8007940:	192b      	adds	r3, r5, r4
 8007942:	4443      	add	r3, r8
 8007944:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007948:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800794a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800794e:	ba52      	rev16	r2, r2
 8007950:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007954:	f838 3004 	ldrh.w	r3, [r8, r4]
 8007958:	3301      	adds	r3, #1
 800795a:	f003 0301 	and.w	r3, r3, #1
 800795e:	f828 3004 	strh.w	r3, [r8, r4]
 8007962:	e7c7      	b.n	80078f4 <udp_handle+0x30>
 8007964:	20003b9c 	mulcs	r0, ip, fp
 8007968:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc

0800796c <arp_handle>:
 800796c:	8a83      	ldrh	r3, [r0, #20]
 800796e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007972:	d003      	beq.n	800797c <arp_handle+0x10>
 8007974:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007978:	d002      	beq.n	8007980 <arp_handle+0x14>
 800797a:	4770      	bx	lr
 800797c:	f008 bcce 	b.w	801031c <arp_handle_request>
 8007980:	f008 bcf4 	b.w	801036c <arp_handle_reply>

08007984 <igmp_handle>:
 8007984:	7b83      	ldrb	r3, [r0, #14]
 8007986:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800798a:	2b45      	cmp	r3, #69	; 0x45
 800798c:	d116      	bne.n	80079bc <igmp_handle+0x38>
 800798e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007992:	2b11      	cmp	r3, #17
 8007994:	d112      	bne.n	80079bc <igmp_handle+0x38>
 8007996:	4b20      	ldr	r3, [pc, #128]	; (8007a18 <igmp_handle+0x94>)
 8007998:	f100 051e 	add.w	r5, r0, #30
 800799c:	9300      	str	r3, [sp, #0]
 800799e:	466a      	mov	r2, sp
 80079a0:	462b      	mov	r3, r5
 80079a2:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079a6:	42b3      	cmp	r3, r6
 80079a8:	d10b      	bne.n	80079c2 <igmp_handle+0x3e>
 80079aa:	2401      	movs	r4, #1
 80079ac:	2100      	movs	r1, #0
 80079ae:	f04f 0c01 	mov.w	ip, #1
 80079b2:	4b1a      	ldr	r3, [pc, #104]	; (8007a1c <igmp_handle+0x98>)
 80079b4:	4a1a      	ldr	r2, [pc, #104]	; (8007a20 <igmp_handle+0x9c>)
 80079b6:	681f      	ldr	r7, [r3, #0]
 80079b8:	428f      	cmp	r7, r1
 80079ba:	d10a      	bne.n	80079d2 <igmp_handle+0x4e>
 80079bc:	b003      	add	sp, #12
 80079be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079c2:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079c6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ca:	428c      	cmp	r4, r1
 80079cc:	d0eb      	beq.n	80079a6 <igmp_handle+0x22>
 80079ce:	2400      	movs	r4, #0
 80079d0:	e7ec      	b.n	80079ac <igmp_handle+0x28>
 80079d2:	6813      	ldr	r3, [r2, #0]
 80079d4:	9301      	str	r3, [sp, #4]
 80079d6:	b924      	cbnz	r4, 80079e2 <igmp_handle+0x5e>
 80079d8:	462b      	mov	r3, r5
 80079da:	f10d 0e04 	add.w	lr, sp, #4
 80079de:	42b3      	cmp	r3, r6
 80079e0:	d10e      	bne.n	8007a00 <igmp_handle+0x7c>
 80079e2:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079e6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079ea:	f1be 0f01 	cmp.w	lr, #1
 80079ee:	d110      	bne.n	8007a12 <igmp_handle+0x8e>
 80079f0:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079f4:	459e      	cmp	lr, r3
 80079f6:	d909      	bls.n	8007a0c <igmp_handle+0x88>
 80079f8:	085b      	lsrs	r3, r3, #1
 80079fa:	3301      	adds	r3, #1
 80079fc:	7113      	strb	r3, [r2, #4]
 80079fe:	e005      	b.n	8007a0c <igmp_handle+0x88>
 8007a00:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a04:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a08:	45c1      	cmp	r9, r8
 8007a0a:	d0e8      	beq.n	80079de <igmp_handle+0x5a>
 8007a0c:	3101      	adds	r1, #1
 8007a0e:	3208      	adds	r2, #8
 8007a10:	e7d2      	b.n	80079b8 <igmp_handle+0x34>
 8007a12:	f882 c005 	strb.w	ip, [r2, #5]
 8007a16:	e7ef      	b.n	80079f8 <igmp_handle+0x74>
 8007a18:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a1c:	2000a84c 	andcs	sl, r0, ip, asr #16
 8007a20:	2000a728 	andcs	sl, r0, r8, lsr #14

08007a24 <ip_handle>:
 8007a24:	7b82      	ldrb	r2, [r0, #14]
 8007a26:	7dc3      	ldrb	r3, [r0, #23]
 8007a28:	2a45      	cmp	r2, #69	; 0x45
 8007a2a:	d003      	beq.n	8007a34 <ip_handle+0x10>
 8007a2c:	2b02      	cmp	r3, #2
 8007a2e:	d111      	bne.n	8007a54 <ip_handle+0x30>
 8007a30:	f7ff bfa8 	b.w	8007984 <igmp_handle>
 8007a34:	2b06      	cmp	r3, #6
 8007a36:	d00b      	beq.n	8007a50 <ip_handle+0x2c>
 8007a38:	d804      	bhi.n	8007a44 <ip_handle+0x20>
 8007a3a:	2b01      	cmp	r3, #1
 8007a3c:	d006      	beq.n	8007a4c <ip_handle+0x28>
 8007a3e:	2b02      	cmp	r3, #2
 8007a40:	d0f6      	beq.n	8007a30 <ip_handle+0xc>
 8007a42:	4770      	bx	lr
 8007a44:	2b11      	cmp	r3, #17
 8007a46:	d105      	bne.n	8007a54 <ip_handle+0x30>
 8007a48:	f7ff bf3c 	b.w	80078c4 <udp_handle>
 8007a4c:	f000 b804 	b.w	8007a58 <icmp_handle>
 8007a50:	f7ff bd86 	b.w	8007560 <tcp_handle>
 8007a54:	4770      	bx	lr
	...

08007a58 <icmp_handle>:
 8007a58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a5a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a5e:	4604      	mov	r4, r0
 8007a60:	2b08      	cmp	r3, #8
 8007a62:	d13e      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a64:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a68:	2d00      	cmp	r5, #0
 8007a6a:	d13a      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a6c:	1d86      	adds	r6, r0, #6
 8007a6e:	4631      	mov	r1, r6
 8007a70:	2206      	movs	r2, #6
 8007a72:	f009 f813 	bl	8010a9c <memcpy.isra.0>
 8007a76:	4630      	mov	r0, r6
 8007a78:	2206      	movs	r2, #6
 8007a7a:	491b      	ldr	r1, [pc, #108]	; (8007ae8 <icmp_handle+0x90>)
 8007a7c:	f009 f80e 	bl	8010a9c <memcpy.isra.0>
 8007a80:	8a63      	ldrh	r3, [r4, #18]
 8007a82:	f104 061a 	add.w	r6, r4, #26
 8007a86:	43db      	mvns	r3, r3
 8007a88:	4631      	mov	r1, r6
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	8263      	strh	r3, [r4, #18]
 8007a8e:	f104 001e 	add.w	r0, r4, #30
 8007a92:	f009 f803 	bl	8010a9c <memcpy.isra.0>
 8007a96:	2204      	movs	r2, #4
 8007a98:	4b14      	ldr	r3, [pc, #80]	; (8007aec <icmp_handle+0x94>)
 8007a9a:	eb0d 0102 	add.w	r1, sp, r2
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	4630      	mov	r0, r6
 8007aa2:	f104 060e 	add.w	r6, r4, #14
 8007aa6:	9301      	str	r3, [sp, #4]
 8007aa8:	f008 fff8 	bl	8010a9c <memcpy.isra.0>
 8007aac:	2114      	movs	r1, #20
 8007aae:	4630      	mov	r0, r6
 8007ab0:	7625      	strb	r5, [r4, #24]
 8007ab2:	7665      	strb	r5, [r4, #25]
 8007ab4:	f008 ffd5 	bl	8010a62 <net_chksum>
 8007ab8:	8a21      	ldrh	r1, [r4, #16]
 8007aba:	8320      	strh	r0, [r4, #24]
 8007abc:	ba49      	rev16	r1, r1
 8007abe:	b289      	uxth	r1, r1
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007ac6:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007aca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ace:	f008 ffc8 	bl	8010a62 <net_chksum>
 8007ad2:	8a21      	ldrh	r1, [r4, #16]
 8007ad4:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007ad6:	ba49      	rev16	r1, r1
 8007ad8:	b289      	uxth	r1, r1
 8007ada:	4620      	mov	r0, r4
 8007adc:	310e      	adds	r1, #14
 8007ade:	f00b fa65 	bl	8012fac <emac_eth_send>
 8007ae2:	b002      	add	sp, #8
 8007ae4:	bd70      	pop	{r4, r5, r6, pc}
 8007ae6:	bf00      	nop
 8007ae8:	200029cc 	andcs	r2, r0, ip, asr #19
 8007aec:	200029c0 	andcs	r2, r0, r0, asr #19

08007af0 <__aeabi_d2f>:
 8007af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007af8:	bf24      	itt	cs
 8007afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b02:	d90d      	bls.n	8007b20 <__aeabi_d2f+0x30>
 8007b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b18:	bf08      	it	eq
 8007b1a:	f020 0001 	biceq.w	r0, r0, #1
 8007b1e:	4770      	bx	lr
 8007b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b24:	d121      	bne.n	8007b6a <__aeabi_d2f+0x7a>
 8007b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b2a:	bfbc      	itt	lt
 8007b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b30:	4770      	bxlt	lr
 8007b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b3a:	f1c2 0218 	rsb	r2, r2, #24
 8007b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8007b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b46:	fa20 f002 	lsr.w	r0, r0, r2
 8007b4a:	bf18      	it	ne
 8007b4c:	f040 0001 	orrne.w	r0, r0, #1
 8007b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b5c:	ea40 000c 	orr.w	r0, r0, ip
 8007b60:	fa23 f302 	lsr.w	r3, r3, r2
 8007b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b68:	e7cc      	b.n	8007b04 <__aeabi_d2f+0x14>
 8007b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b6e:	d107      	bne.n	8007b80 <__aeabi_d2f+0x90>
 8007b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b74:	bf1e      	ittt	ne
 8007b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b7e:	4770      	bxne	lr
 8007b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b8c:	4770      	bx	lr
 8007b8e:	bf00      	nop

08007b90 <__aeabi_frsub>:
 8007b90:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b94:	e002      	b.n	8007b9c <__addsf3>
 8007b96:	bf00      	nop

08007b98 <__aeabi_fsub>:
 8007b98:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b9c <__addsf3>:
 8007b9c:	0042      	lsls	r2, r0, #1
 8007b9e:	bf1f      	itttt	ne
 8007ba0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007ba4:	ea92 0f03 	teqne	r2, r3
 8007ba8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bac:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bb0:	d06a      	beq.n	8007c88 <__addsf3+0xec>
 8007bb2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007bb6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bba:	bfc1      	itttt	gt
 8007bbc:	18d2      	addgt	r2, r2, r3
 8007bbe:	4041      	eorgt	r1, r0
 8007bc0:	4048      	eorgt	r0, r1
 8007bc2:	4041      	eorgt	r1, r0
 8007bc4:	bfb8      	it	lt
 8007bc6:	425b      	neglt	r3, r3
 8007bc8:	2b19      	cmp	r3, #25
 8007bca:	bf88      	it	hi
 8007bcc:	4770      	bxhi	lr
 8007bce:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bd2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bda:	bf18      	it	ne
 8007bdc:	4240      	negne	r0, r0
 8007bde:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007be2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007be6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bea:	bf18      	it	ne
 8007bec:	4249      	negne	r1, r1
 8007bee:	ea92 0f03 	teq	r2, r3
 8007bf2:	d03f      	beq.n	8007c74 <__addsf3+0xd8>
 8007bf4:	f1a2 0201 	sub.w	r2, r2, #1
 8007bf8:	fa41 fc03 	asr.w	ip, r1, r3
 8007bfc:	eb10 000c 	adds.w	r0, r0, ip
 8007c00:	f1c3 0320 	rsb	r3, r3, #32
 8007c04:	fa01 f103 	lsl.w	r1, r1, r3
 8007c08:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c0c:	d502      	bpl.n	8007c14 <__addsf3+0x78>
 8007c0e:	4249      	negs	r1, r1
 8007c10:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c14:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c18:	d313      	bcc.n	8007c42 <__addsf3+0xa6>
 8007c1a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c1e:	d306      	bcc.n	8007c2e <__addsf3+0x92>
 8007c20:	0840      	lsrs	r0, r0, #1
 8007c22:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c26:	f102 0201 	add.w	r2, r2, #1
 8007c2a:	2afe      	cmp	r2, #254	; 0xfe
 8007c2c:	d251      	bcs.n	8007cd2 <__addsf3+0x136>
 8007c2e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c32:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c36:	bf08      	it	eq
 8007c38:	f020 0001 	biceq.w	r0, r0, #1
 8007c3c:	ea40 0003 	orr.w	r0, r0, r3
 8007c40:	4770      	bx	lr
 8007c42:	0049      	lsls	r1, r1, #1
 8007c44:	eb40 0000 	adc.w	r0, r0, r0
 8007c48:	3a01      	subs	r2, #1
 8007c4a:	bf28      	it	cs
 8007c4c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c50:	d2ed      	bcs.n	8007c2e <__addsf3+0x92>
 8007c52:	fab0 fc80 	clz	ip, r0
 8007c56:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c5a:	ebb2 020c 	subs.w	r2, r2, ip
 8007c5e:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c62:	bfaa      	itet	ge
 8007c64:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c68:	4252      	neglt	r2, r2
 8007c6a:	4318      	orrge	r0, r3
 8007c6c:	bfbc      	itt	lt
 8007c6e:	40d0      	lsrlt	r0, r2
 8007c70:	4318      	orrlt	r0, r3
 8007c72:	4770      	bx	lr
 8007c74:	f092 0f00 	teq	r2, #0
 8007c78:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c7c:	bf06      	itte	eq
 8007c7e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c82:	3201      	addeq	r2, #1
 8007c84:	3b01      	subne	r3, #1
 8007c86:	e7b5      	b.n	8007bf4 <__addsf3+0x58>
 8007c88:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c8c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c90:	bf18      	it	ne
 8007c92:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c96:	d021      	beq.n	8007cdc <__addsf3+0x140>
 8007c98:	ea92 0f03 	teq	r2, r3
 8007c9c:	d004      	beq.n	8007ca8 <__addsf3+0x10c>
 8007c9e:	f092 0f00 	teq	r2, #0
 8007ca2:	bf08      	it	eq
 8007ca4:	4608      	moveq	r0, r1
 8007ca6:	4770      	bx	lr
 8007ca8:	ea90 0f01 	teq	r0, r1
 8007cac:	bf1c      	itt	ne
 8007cae:	2000      	movne	r0, #0
 8007cb0:	4770      	bxne	lr
 8007cb2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007cb6:	d104      	bne.n	8007cc2 <__addsf3+0x126>
 8007cb8:	0040      	lsls	r0, r0, #1
 8007cba:	bf28      	it	cs
 8007cbc:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cc0:	4770      	bx	lr
 8007cc2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cc6:	bf3c      	itt	cc
 8007cc8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007ccc:	4770      	bxcc	lr
 8007cce:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cd2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cd6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cda:	4770      	bx	lr
 8007cdc:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007ce0:	bf16      	itet	ne
 8007ce2:	4608      	movne	r0, r1
 8007ce4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007ce8:	4601      	movne	r1, r0
 8007cea:	0242      	lsls	r2, r0, #9
 8007cec:	bf06      	itte	eq
 8007cee:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007cf2:	ea90 0f01 	teqeq	r0, r1
 8007cf6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cfa:	4770      	bx	lr

08007cfc <__aeabi_ui2f>:
 8007cfc:	f04f 0300 	mov.w	r3, #0
 8007d00:	e004      	b.n	8007d0c <__aeabi_i2f+0x8>
 8007d02:	bf00      	nop

08007d04 <__aeabi_i2f>:
 8007d04:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d08:	bf48      	it	mi
 8007d0a:	4240      	negmi	r0, r0
 8007d0c:	ea5f 0c00 	movs.w	ip, r0
 8007d10:	bf08      	it	eq
 8007d12:	4770      	bxeq	lr
 8007d14:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d18:	4601      	mov	r1, r0
 8007d1a:	f04f 0000 	mov.w	r0, #0
 8007d1e:	e01c      	b.n	8007d5a <__aeabi_l2f+0x2a>

08007d20 <__aeabi_ul2f>:
 8007d20:	ea50 0201 	orrs.w	r2, r0, r1
 8007d24:	bf08      	it	eq
 8007d26:	4770      	bxeq	lr
 8007d28:	f04f 0300 	mov.w	r3, #0
 8007d2c:	e00a      	b.n	8007d44 <__aeabi_l2f+0x14>
 8007d2e:	bf00      	nop

08007d30 <__aeabi_l2f>:
 8007d30:	ea50 0201 	orrs.w	r2, r0, r1
 8007d34:	bf08      	it	eq
 8007d36:	4770      	bxeq	lr
 8007d38:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d3c:	d502      	bpl.n	8007d44 <__aeabi_l2f+0x14>
 8007d3e:	4240      	negs	r0, r0
 8007d40:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d44:	ea5f 0c01 	movs.w	ip, r1
 8007d48:	bf02      	ittt	eq
 8007d4a:	4684      	moveq	ip, r0
 8007d4c:	4601      	moveq	r1, r0
 8007d4e:	2000      	moveq	r0, #0
 8007d50:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d54:	bf08      	it	eq
 8007d56:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d5a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d5e:	fabc f28c 	clz	r2, ip
 8007d62:	3a08      	subs	r2, #8
 8007d64:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d68:	db10      	blt.n	8007d8c <__aeabi_l2f+0x5c>
 8007d6a:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d6e:	4463      	add	r3, ip
 8007d70:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d74:	f1c2 0220 	rsb	r2, r2, #32
 8007d78:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d7c:	fa20 f202 	lsr.w	r2, r0, r2
 8007d80:	eb43 0002 	adc.w	r0, r3, r2
 8007d84:	bf08      	it	eq
 8007d86:	f020 0001 	biceq.w	r0, r0, #1
 8007d8a:	4770      	bx	lr
 8007d8c:	f102 0220 	add.w	r2, r2, #32
 8007d90:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d94:	f1c2 0220 	rsb	r2, r2, #32
 8007d98:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d9c:	fa21 f202 	lsr.w	r2, r1, r2
 8007da0:	eb43 0002 	adc.w	r0, r3, r2
 8007da4:	bf08      	it	eq
 8007da6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007daa:	4770      	bx	lr

08007dac <__gesf2>:
 8007dac:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007db0:	e006      	b.n	8007dc0 <__cmpsf2+0x4>
 8007db2:	bf00      	nop

08007db4 <__lesf2>:
 8007db4:	f04f 0c01 	mov.w	ip, #1
 8007db8:	e002      	b.n	8007dc0 <__cmpsf2+0x4>
 8007dba:	bf00      	nop

08007dbc <__cmpsf2>:
 8007dbc:	f04f 0c01 	mov.w	ip, #1
 8007dc0:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007dc4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dc8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dcc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dd0:	bf18      	it	ne
 8007dd2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dd6:	d011      	beq.n	8007dfc <__cmpsf2+0x40>
 8007dd8:	b001      	add	sp, #4
 8007dda:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dde:	bf18      	it	ne
 8007de0:	ea90 0f01 	teqne	r0, r1
 8007de4:	bf58      	it	pl
 8007de6:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dea:	bf88      	it	hi
 8007dec:	17c8      	asrhi	r0, r1, #31
 8007dee:	bf38      	it	cc
 8007df0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007df4:	bf18      	it	ne
 8007df6:	f040 0001 	orrne.w	r0, r0, #1
 8007dfa:	4770      	bx	lr
 8007dfc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e00:	d102      	bne.n	8007e08 <__cmpsf2+0x4c>
 8007e02:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e06:	d105      	bne.n	8007e14 <__cmpsf2+0x58>
 8007e08:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e0c:	d1e4      	bne.n	8007dd8 <__cmpsf2+0x1c>
 8007e0e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e12:	d0e1      	beq.n	8007dd8 <__cmpsf2+0x1c>
 8007e14:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e18:	4770      	bx	lr
 8007e1a:	bf00      	nop

08007e1c <__aeabi_cfrcmple>:
 8007e1c:	4684      	mov	ip, r0
 8007e1e:	4608      	mov	r0, r1
 8007e20:	4661      	mov	r1, ip
 8007e22:	e7ff      	b.n	8007e24 <__aeabi_cfcmpeq>

08007e24 <__aeabi_cfcmpeq>:
 8007e24:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e26:	f7ff ffc9 	bl	8007dbc <__cmpsf2>
 8007e2a:	2800      	cmp	r0, #0
 8007e2c:	bf48      	it	mi
 8007e2e:	f110 0f00 	cmnmi.w	r0, #0
 8007e32:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e34 <__aeabi_fcmpeq>:
 8007e34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e38:	f7ff fff4 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e3c:	bf0c      	ite	eq
 8007e3e:	2001      	moveq	r0, #1
 8007e40:	2000      	movne	r0, #0
 8007e42:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e46:	bf00      	nop

08007e48 <__aeabi_fcmplt>:
 8007e48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e4c:	f7ff ffea 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e50:	bf34      	ite	cc
 8007e52:	2001      	movcc	r0, #1
 8007e54:	2000      	movcs	r0, #0
 8007e56:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e5a:	bf00      	nop

08007e5c <__aeabi_fcmple>:
 8007e5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e60:	f7ff ffe0 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e64:	bf94      	ite	ls
 8007e66:	2001      	movls	r0, #1
 8007e68:	2000      	movhi	r0, #0
 8007e6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e6e:	bf00      	nop

08007e70 <__aeabi_fcmpge>:
 8007e70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e74:	f7ff ffd2 	bl	8007e1c <__aeabi_cfrcmple>
 8007e78:	bf94      	ite	ls
 8007e7a:	2001      	movls	r0, #1
 8007e7c:	2000      	movhi	r0, #0
 8007e7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e82:	bf00      	nop

08007e84 <__aeabi_fcmpgt>:
 8007e84:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e88:	f7ff ffc8 	bl	8007e1c <__aeabi_cfrcmple>
 8007e8c:	bf34      	ite	cc
 8007e8e:	2001      	movcc	r0, #1
 8007e90:	2000      	movcs	r0, #0
 8007e92:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e96:	bf00      	nop

08007e98 <__aeabi_f2iz>:
 8007e98:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e9c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007ea0:	d30f      	bcc.n	8007ec2 <__aeabi_f2iz+0x2a>
 8007ea2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ea6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007eaa:	d90d      	bls.n	8007ec8 <__aeabi_f2iz+0x30>
 8007eac:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007eb0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007eb4:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eb8:	fa23 f002 	lsr.w	r0, r3, r2
 8007ebc:	bf18      	it	ne
 8007ebe:	4240      	negne	r0, r0
 8007ec0:	4770      	bx	lr
 8007ec2:	f04f 0000 	mov.w	r0, #0
 8007ec6:	4770      	bx	lr
 8007ec8:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ecc:	d101      	bne.n	8007ed2 <__aeabi_f2iz+0x3a>
 8007ece:	0242      	lsls	r2, r0, #9
 8007ed0:	d105      	bne.n	8007ede <__aeabi_f2iz+0x46>
 8007ed2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007ed6:	bf08      	it	eq
 8007ed8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007edc:	4770      	bx	lr
 8007ede:	f04f 0000 	mov.w	r0, #0
 8007ee2:	4770      	bx	lr

08007ee4 <__aeabi_uldivmod>:
 8007ee4:	b953      	cbnz	r3, 8007efc <__aeabi_uldivmod+0x18>
 8007ee6:	b94a      	cbnz	r2, 8007efc <__aeabi_uldivmod+0x18>
 8007ee8:	2900      	cmp	r1, #0
 8007eea:	bf08      	it	eq
 8007eec:	2800      	cmpeq	r0, #0
 8007eee:	bf1c      	itt	ne
 8007ef0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ef4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007ef8:	f000 b976 	b.w	80081e8 <__aeabi_idiv0>
 8007efc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f04:	f000 f806 	bl	8007f14 <__udivmoddi4>
 8007f08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f10:	b004      	add	sp, #16
 8007f12:	4770      	bx	lr

08007f14 <__udivmoddi4>:
 8007f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f18:	9e08      	ldr	r6, [sp, #32]
 8007f1a:	460d      	mov	r5, r1
 8007f1c:	4604      	mov	r4, r0
 8007f1e:	4688      	mov	r8, r1
 8007f20:	2b00      	cmp	r3, #0
 8007f22:	d14d      	bne.n	8007fc0 <__udivmoddi4+0xac>
 8007f24:	428a      	cmp	r2, r1
 8007f26:	4694      	mov	ip, r2
 8007f28:	d968      	bls.n	8007ffc <__udivmoddi4+0xe8>
 8007f2a:	fab2 f282 	clz	r2, r2
 8007f2e:	b152      	cbz	r2, 8007f46 <__udivmoddi4+0x32>
 8007f30:	fa01 f302 	lsl.w	r3, r1, r2
 8007f34:	f1c2 0120 	rsb	r1, r2, #32
 8007f38:	fa20 f101 	lsr.w	r1, r0, r1
 8007f3c:	fa0c fc02 	lsl.w	ip, ip, r2
 8007f40:	ea41 0803 	orr.w	r8, r1, r3
 8007f44:	4094      	lsls	r4, r2
 8007f46:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007f4a:	fbb8 f7f1 	udiv	r7, r8, r1
 8007f4e:	fa1f fe8c 	uxth.w	lr, ip
 8007f52:	fb01 8817 	mls	r8, r1, r7, r8
 8007f56:	fb07 f00e 	mul.w	r0, r7, lr
 8007f5a:	0c23      	lsrs	r3, r4, #16
 8007f5c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007f60:	4298      	cmp	r0, r3
 8007f62:	d90a      	bls.n	8007f7a <__udivmoddi4+0x66>
 8007f64:	eb1c 0303 	adds.w	r3, ip, r3
 8007f68:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007f6c:	f080 811e 	bcs.w	80081ac <__udivmoddi4+0x298>
 8007f70:	4298      	cmp	r0, r3
 8007f72:	f240 811b 	bls.w	80081ac <__udivmoddi4+0x298>
 8007f76:	3f02      	subs	r7, #2
 8007f78:	4463      	add	r3, ip
 8007f7a:	1a1b      	subs	r3, r3, r0
 8007f7c:	fbb3 f0f1 	udiv	r0, r3, r1
 8007f80:	fb01 3310 	mls	r3, r1, r0, r3
 8007f84:	fb00 fe0e 	mul.w	lr, r0, lr
 8007f88:	b2a4      	uxth	r4, r4
 8007f8a:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007f8e:	45a6      	cmp	lr, r4
 8007f90:	d90a      	bls.n	8007fa8 <__udivmoddi4+0x94>
 8007f92:	eb1c 0404 	adds.w	r4, ip, r4
 8007f96:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007f9a:	f080 8109 	bcs.w	80081b0 <__udivmoddi4+0x29c>
 8007f9e:	45a6      	cmp	lr, r4
 8007fa0:	f240 8106 	bls.w	80081b0 <__udivmoddi4+0x29c>
 8007fa4:	4464      	add	r4, ip
 8007fa6:	3802      	subs	r0, #2
 8007fa8:	2100      	movs	r1, #0
 8007faa:	eba4 040e 	sub.w	r4, r4, lr
 8007fae:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007fb2:	b11e      	cbz	r6, 8007fbc <__udivmoddi4+0xa8>
 8007fb4:	2300      	movs	r3, #0
 8007fb6:	40d4      	lsrs	r4, r2
 8007fb8:	e9c6 4300 	strd	r4, r3, [r6]
 8007fbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fc0:	428b      	cmp	r3, r1
 8007fc2:	d908      	bls.n	8007fd6 <__udivmoddi4+0xc2>
 8007fc4:	2e00      	cmp	r6, #0
 8007fc6:	f000 80ee 	beq.w	80081a6 <__udivmoddi4+0x292>
 8007fca:	2100      	movs	r1, #0
 8007fcc:	e9c6 0500 	strd	r0, r5, [r6]
 8007fd0:	4608      	mov	r0, r1
 8007fd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fd6:	fab3 f183 	clz	r1, r3
 8007fda:	2900      	cmp	r1, #0
 8007fdc:	d14a      	bne.n	8008074 <__udivmoddi4+0x160>
 8007fde:	42ab      	cmp	r3, r5
 8007fe0:	d302      	bcc.n	8007fe8 <__udivmoddi4+0xd4>
 8007fe2:	4282      	cmp	r2, r0
 8007fe4:	f200 80fc 	bhi.w	80081e0 <__udivmoddi4+0x2cc>
 8007fe8:	1a84      	subs	r4, r0, r2
 8007fea:	eb65 0303 	sbc.w	r3, r5, r3
 8007fee:	2001      	movs	r0, #1
 8007ff0:	4698      	mov	r8, r3
 8007ff2:	2e00      	cmp	r6, #0
 8007ff4:	d0e2      	beq.n	8007fbc <__udivmoddi4+0xa8>
 8007ff6:	e9c6 4800 	strd	r4, r8, [r6]
 8007ffa:	e7df      	b.n	8007fbc <__udivmoddi4+0xa8>
 8007ffc:	b902      	cbnz	r2, 8008000 <__udivmoddi4+0xec>
 8007ffe:	deff      	udf	#255	; 0xff
 8008000:	fab2 f282 	clz	r2, r2
 8008004:	2a00      	cmp	r2, #0
 8008006:	f040 8091 	bne.w	800812c <__udivmoddi4+0x218>
 800800a:	eba1 000c 	sub.w	r0, r1, ip
 800800e:	2101      	movs	r1, #1
 8008010:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8008014:	fa1f fe8c 	uxth.w	lr, ip
 8008018:	fbb0 f3f7 	udiv	r3, r0, r7
 800801c:	fb07 0013 	mls	r0, r7, r3, r0
 8008020:	0c25      	lsrs	r5, r4, #16
 8008022:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8008026:	fb0e f003 	mul.w	r0, lr, r3
 800802a:	42a8      	cmp	r0, r5
 800802c:	d908      	bls.n	8008040 <__udivmoddi4+0x12c>
 800802e:	eb1c 0505 	adds.w	r5, ip, r5
 8008032:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8008036:	d202      	bcs.n	800803e <__udivmoddi4+0x12a>
 8008038:	42a8      	cmp	r0, r5
 800803a:	f200 80ce 	bhi.w	80081da <__udivmoddi4+0x2c6>
 800803e:	4643      	mov	r3, r8
 8008040:	1a2d      	subs	r5, r5, r0
 8008042:	fbb5 f0f7 	udiv	r0, r5, r7
 8008046:	fb07 5510 	mls	r5, r7, r0, r5
 800804a:	fb0e fe00 	mul.w	lr, lr, r0
 800804e:	b2a4      	uxth	r4, r4
 8008050:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8008054:	45a6      	cmp	lr, r4
 8008056:	d908      	bls.n	800806a <__udivmoddi4+0x156>
 8008058:	eb1c 0404 	adds.w	r4, ip, r4
 800805c:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8008060:	d202      	bcs.n	8008068 <__udivmoddi4+0x154>
 8008062:	45a6      	cmp	lr, r4
 8008064:	f200 80b6 	bhi.w	80081d4 <__udivmoddi4+0x2c0>
 8008068:	4628      	mov	r0, r5
 800806a:	eba4 040e 	sub.w	r4, r4, lr
 800806e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8008072:	e79e      	b.n	8007fb2 <__udivmoddi4+0x9e>
 8008074:	f1c1 0720 	rsb	r7, r1, #32
 8008078:	408b      	lsls	r3, r1
 800807a:	fa22 fc07 	lsr.w	ip, r2, r7
 800807e:	ea4c 0c03 	orr.w	ip, ip, r3
 8008082:	fa25 fa07 	lsr.w	sl, r5, r7
 8008086:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800808a:	fbba f8f9 	udiv	r8, sl, r9
 800808e:	fa20 f307 	lsr.w	r3, r0, r7
 8008092:	fb09 aa18 	mls	sl, r9, r8, sl
 8008096:	408d      	lsls	r5, r1
 8008098:	fa1f fe8c 	uxth.w	lr, ip
 800809c:	431d      	orrs	r5, r3
 800809e:	fa00 f301 	lsl.w	r3, r0, r1
 80080a2:	fb08 f00e 	mul.w	r0, r8, lr
 80080a6:	0c2c      	lsrs	r4, r5, #16
 80080a8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80080ac:	42a0      	cmp	r0, r4
 80080ae:	fa02 f201 	lsl.w	r2, r2, r1
 80080b2:	d90b      	bls.n	80080cc <__udivmoddi4+0x1b8>
 80080b4:	eb1c 0404 	adds.w	r4, ip, r4
 80080b8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80080bc:	f080 8088 	bcs.w	80081d0 <__udivmoddi4+0x2bc>
 80080c0:	42a0      	cmp	r0, r4
 80080c2:	f240 8085 	bls.w	80081d0 <__udivmoddi4+0x2bc>
 80080c6:	f1a8 0802 	sub.w	r8, r8, #2
 80080ca:	4464      	add	r4, ip
 80080cc:	1a24      	subs	r4, r4, r0
 80080ce:	fbb4 f0f9 	udiv	r0, r4, r9
 80080d2:	fb09 4410 	mls	r4, r9, r0, r4
 80080d6:	fb00 fe0e 	mul.w	lr, r0, lr
 80080da:	b2ad      	uxth	r5, r5
 80080dc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80080e0:	45a6      	cmp	lr, r4
 80080e2:	d908      	bls.n	80080f6 <__udivmoddi4+0x1e2>
 80080e4:	eb1c 0404 	adds.w	r4, ip, r4
 80080e8:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80080ec:	d26c      	bcs.n	80081c8 <__udivmoddi4+0x2b4>
 80080ee:	45a6      	cmp	lr, r4
 80080f0:	d96a      	bls.n	80081c8 <__udivmoddi4+0x2b4>
 80080f2:	3802      	subs	r0, #2
 80080f4:	4464      	add	r4, ip
 80080f6:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80080fa:	fba0 9502 	umull	r9, r5, r0, r2
 80080fe:	eba4 040e 	sub.w	r4, r4, lr
 8008102:	42ac      	cmp	r4, r5
 8008104:	46c8      	mov	r8, r9
 8008106:	46ae      	mov	lr, r5
 8008108:	d356      	bcc.n	80081b8 <__udivmoddi4+0x2a4>
 800810a:	d053      	beq.n	80081b4 <__udivmoddi4+0x2a0>
 800810c:	2e00      	cmp	r6, #0
 800810e:	d069      	beq.n	80081e4 <__udivmoddi4+0x2d0>
 8008110:	ebb3 0208 	subs.w	r2, r3, r8
 8008114:	eb64 040e 	sbc.w	r4, r4, lr
 8008118:	fa22 f301 	lsr.w	r3, r2, r1
 800811c:	fa04 f707 	lsl.w	r7, r4, r7
 8008120:	431f      	orrs	r7, r3
 8008122:	40cc      	lsrs	r4, r1
 8008124:	e9c6 7400 	strd	r7, r4, [r6]
 8008128:	2100      	movs	r1, #0
 800812a:	e747      	b.n	8007fbc <__udivmoddi4+0xa8>
 800812c:	fa0c fc02 	lsl.w	ip, ip, r2
 8008130:	f1c2 0120 	rsb	r1, r2, #32
 8008134:	fa25 f301 	lsr.w	r3, r5, r1
 8008138:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800813c:	fa20 f101 	lsr.w	r1, r0, r1
 8008140:	4095      	lsls	r5, r2
 8008142:	430d      	orrs	r5, r1
 8008144:	fbb3 f1f7 	udiv	r1, r3, r7
 8008148:	fb07 3311 	mls	r3, r7, r1, r3
 800814c:	fa1f fe8c 	uxth.w	lr, ip
 8008150:	0c28      	lsrs	r0, r5, #16
 8008152:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8008156:	fb01 f30e 	mul.w	r3, r1, lr
 800815a:	4283      	cmp	r3, r0
 800815c:	fa04 f402 	lsl.w	r4, r4, r2
 8008160:	d908      	bls.n	8008174 <__udivmoddi4+0x260>
 8008162:	eb1c 0000 	adds.w	r0, ip, r0
 8008166:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 800816a:	d22f      	bcs.n	80081cc <__udivmoddi4+0x2b8>
 800816c:	4283      	cmp	r3, r0
 800816e:	d92d      	bls.n	80081cc <__udivmoddi4+0x2b8>
 8008170:	3902      	subs	r1, #2
 8008172:	4460      	add	r0, ip
 8008174:	1ac0      	subs	r0, r0, r3
 8008176:	fbb0 f3f7 	udiv	r3, r0, r7
 800817a:	fb07 0013 	mls	r0, r7, r3, r0
 800817e:	b2ad      	uxth	r5, r5
 8008180:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8008184:	fb03 f00e 	mul.w	r0, r3, lr
 8008188:	42a8      	cmp	r0, r5
 800818a:	d908      	bls.n	800819e <__udivmoddi4+0x28a>
 800818c:	eb1c 0505 	adds.w	r5, ip, r5
 8008190:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8008194:	d216      	bcs.n	80081c4 <__udivmoddi4+0x2b0>
 8008196:	42a8      	cmp	r0, r5
 8008198:	d914      	bls.n	80081c4 <__udivmoddi4+0x2b0>
 800819a:	3b02      	subs	r3, #2
 800819c:	4465      	add	r5, ip
 800819e:	1a28      	subs	r0, r5, r0
 80081a0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80081a4:	e738      	b.n	8008018 <__udivmoddi4+0x104>
 80081a6:	4631      	mov	r1, r6
 80081a8:	4630      	mov	r0, r6
 80081aa:	e707      	b.n	8007fbc <__udivmoddi4+0xa8>
 80081ac:	462f      	mov	r7, r5
 80081ae:	e6e4      	b.n	8007f7a <__udivmoddi4+0x66>
 80081b0:	4618      	mov	r0, r3
 80081b2:	e6f9      	b.n	8007fa8 <__udivmoddi4+0x94>
 80081b4:	454b      	cmp	r3, r9
 80081b6:	d2a9      	bcs.n	800810c <__udivmoddi4+0x1f8>
 80081b8:	ebb9 0802 	subs.w	r8, r9, r2
 80081bc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80081c0:	3801      	subs	r0, #1
 80081c2:	e7a3      	b.n	800810c <__udivmoddi4+0x1f8>
 80081c4:	4643      	mov	r3, r8
 80081c6:	e7ea      	b.n	800819e <__udivmoddi4+0x28a>
 80081c8:	4628      	mov	r0, r5
 80081ca:	e794      	b.n	80080f6 <__udivmoddi4+0x1e2>
 80081cc:	4641      	mov	r1, r8
 80081ce:	e7d1      	b.n	8008174 <__udivmoddi4+0x260>
 80081d0:	46d0      	mov	r8, sl
 80081d2:	e77b      	b.n	80080cc <__udivmoddi4+0x1b8>
 80081d4:	4464      	add	r4, ip
 80081d6:	3802      	subs	r0, #2
 80081d8:	e747      	b.n	800806a <__udivmoddi4+0x156>
 80081da:	3b02      	subs	r3, #2
 80081dc:	4465      	add	r5, ip
 80081de:	e72f      	b.n	8008040 <__udivmoddi4+0x12c>
 80081e0:	4608      	mov	r0, r1
 80081e2:	e706      	b.n	8007ff2 <__udivmoddi4+0xde>
 80081e4:	4631      	mov	r1, r6
 80081e6:	e6e9      	b.n	8007fbc <__udivmoddi4+0xa8>

080081e8 <__aeabi_idiv0>:
 80081e8:	4770      	bx	lr
 80081ea:	bf00      	nop

080081ec <__aeabi_drsub>:
 80081ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80081f0:	e002      	b.n	80081f8 <__adddf3>
 80081f2:	bf00      	nop

080081f4 <__aeabi_dsub>:
 80081f4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080081f8 <__adddf3>:
 80081f8:	b530      	push	{r4, r5, lr}
 80081fa:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80081fe:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008202:	ea94 0f05 	teq	r4, r5
 8008206:	bf08      	it	eq
 8008208:	ea90 0f02 	teqeq	r0, r2
 800820c:	bf1f      	itttt	ne
 800820e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008212:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008216:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800821a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800821e:	f000 80e2 	beq.w	80083e6 <__adddf3+0x1ee>
 8008222:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008226:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800822a:	bfb8      	it	lt
 800822c:	426d      	neglt	r5, r5
 800822e:	dd0c      	ble.n	800824a <__adddf3+0x52>
 8008230:	442c      	add	r4, r5
 8008232:	ea80 0202 	eor.w	r2, r0, r2
 8008236:	ea81 0303 	eor.w	r3, r1, r3
 800823a:	ea82 0000 	eor.w	r0, r2, r0
 800823e:	ea83 0101 	eor.w	r1, r3, r1
 8008242:	ea80 0202 	eor.w	r2, r0, r2
 8008246:	ea81 0303 	eor.w	r3, r1, r3
 800824a:	2d36      	cmp	r5, #54	; 0x36
 800824c:	bf88      	it	hi
 800824e:	bd30      	pophi	{r4, r5, pc}
 8008250:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008254:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008258:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800825c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008260:	d002      	beq.n	8008268 <__adddf3+0x70>
 8008262:	4240      	negs	r0, r0
 8008264:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008268:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800826c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008270:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008274:	d002      	beq.n	800827c <__adddf3+0x84>
 8008276:	4252      	negs	r2, r2
 8008278:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800827c:	ea94 0f05 	teq	r4, r5
 8008280:	f000 80a7 	beq.w	80083d2 <__adddf3+0x1da>
 8008284:	f1a4 0401 	sub.w	r4, r4, #1
 8008288:	f1d5 0e20 	rsbs	lr, r5, #32
 800828c:	db0d      	blt.n	80082aa <__adddf3+0xb2>
 800828e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008292:	fa22 f205 	lsr.w	r2, r2, r5
 8008296:	1880      	adds	r0, r0, r2
 8008298:	f141 0100 	adc.w	r1, r1, #0
 800829c:	fa03 f20e 	lsl.w	r2, r3, lr
 80082a0:	1880      	adds	r0, r0, r2
 80082a2:	fa43 f305 	asr.w	r3, r3, r5
 80082a6:	4159      	adcs	r1, r3
 80082a8:	e00e      	b.n	80082c8 <__adddf3+0xd0>
 80082aa:	f1a5 0520 	sub.w	r5, r5, #32
 80082ae:	f10e 0e20 	add.w	lr, lr, #32
 80082b2:	2a01      	cmp	r2, #1
 80082b4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80082b8:	bf28      	it	cs
 80082ba:	f04c 0c02 	orrcs.w	ip, ip, #2
 80082be:	fa43 f305 	asr.w	r3, r3, r5
 80082c2:	18c0      	adds	r0, r0, r3
 80082c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80082c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80082cc:	d507      	bpl.n	80082de <__adddf3+0xe6>
 80082ce:	f04f 0e00 	mov.w	lr, #0
 80082d2:	f1dc 0c00 	rsbs	ip, ip, #0
 80082d6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80082da:	eb6e 0101 	sbc.w	r1, lr, r1
 80082de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80082e2:	d31b      	bcc.n	800831c <__adddf3+0x124>
 80082e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80082e8:	d30c      	bcc.n	8008304 <__adddf3+0x10c>
 80082ea:	0849      	lsrs	r1, r1, #1
 80082ec:	ea5f 0030 	movs.w	r0, r0, rrx
 80082f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80082f4:	f104 0401 	add.w	r4, r4, #1
 80082f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80082fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008300:	f080 809a 	bcs.w	8008438 <__adddf3+0x240>
 8008304:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008308:	bf08      	it	eq
 800830a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800830e:	f150 0000 	adcs.w	r0, r0, #0
 8008312:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008316:	ea41 0105 	orr.w	r1, r1, r5
 800831a:	bd30      	pop	{r4, r5, pc}
 800831c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008320:	4140      	adcs	r0, r0
 8008322:	eb41 0101 	adc.w	r1, r1, r1
 8008326:	3c01      	subs	r4, #1
 8008328:	bf28      	it	cs
 800832a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800832e:	d2e9      	bcs.n	8008304 <__adddf3+0x10c>
 8008330:	f091 0f00 	teq	r1, #0
 8008334:	bf04      	itt	eq
 8008336:	4601      	moveq	r1, r0
 8008338:	2000      	moveq	r0, #0
 800833a:	fab1 f381 	clz	r3, r1
 800833e:	bf08      	it	eq
 8008340:	3320      	addeq	r3, #32
 8008342:	f1a3 030b 	sub.w	r3, r3, #11
 8008346:	f1b3 0220 	subs.w	r2, r3, #32
 800834a:	da0c      	bge.n	8008366 <__adddf3+0x16e>
 800834c:	320c      	adds	r2, #12
 800834e:	dd08      	ble.n	8008362 <__adddf3+0x16a>
 8008350:	f102 0c14 	add.w	ip, r2, #20
 8008354:	f1c2 020c 	rsb	r2, r2, #12
 8008358:	fa01 f00c 	lsl.w	r0, r1, ip
 800835c:	fa21 f102 	lsr.w	r1, r1, r2
 8008360:	e00c      	b.n	800837c <__adddf3+0x184>
 8008362:	f102 0214 	add.w	r2, r2, #20
 8008366:	bfd8      	it	le
 8008368:	f1c2 0c20 	rsble	ip, r2, #32
 800836c:	fa01 f102 	lsl.w	r1, r1, r2
 8008370:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008374:	bfdc      	itt	le
 8008376:	ea41 010c 	orrle.w	r1, r1, ip
 800837a:	4090      	lslle	r0, r2
 800837c:	1ae4      	subs	r4, r4, r3
 800837e:	bfa2      	ittt	ge
 8008380:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008384:	4329      	orrge	r1, r5
 8008386:	bd30      	popge	{r4, r5, pc}
 8008388:	ea6f 0404 	mvn.w	r4, r4
 800838c:	3c1f      	subs	r4, #31
 800838e:	da1c      	bge.n	80083ca <__adddf3+0x1d2>
 8008390:	340c      	adds	r4, #12
 8008392:	dc0e      	bgt.n	80083b2 <__adddf3+0x1ba>
 8008394:	f104 0414 	add.w	r4, r4, #20
 8008398:	f1c4 0220 	rsb	r2, r4, #32
 800839c:	fa20 f004 	lsr.w	r0, r0, r4
 80083a0:	fa01 f302 	lsl.w	r3, r1, r2
 80083a4:	ea40 0003 	orr.w	r0, r0, r3
 80083a8:	fa21 f304 	lsr.w	r3, r1, r4
 80083ac:	ea45 0103 	orr.w	r1, r5, r3
 80083b0:	bd30      	pop	{r4, r5, pc}
 80083b2:	f1c4 040c 	rsb	r4, r4, #12
 80083b6:	f1c4 0220 	rsb	r2, r4, #32
 80083ba:	fa20 f002 	lsr.w	r0, r0, r2
 80083be:	fa01 f304 	lsl.w	r3, r1, r4
 80083c2:	ea40 0003 	orr.w	r0, r0, r3
 80083c6:	4629      	mov	r1, r5
 80083c8:	bd30      	pop	{r4, r5, pc}
 80083ca:	fa21 f004 	lsr.w	r0, r1, r4
 80083ce:	4629      	mov	r1, r5
 80083d0:	bd30      	pop	{r4, r5, pc}
 80083d2:	f094 0f00 	teq	r4, #0
 80083d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80083da:	bf06      	itte	eq
 80083dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80083e0:	3401      	addeq	r4, #1
 80083e2:	3d01      	subne	r5, #1
 80083e4:	e74e      	b.n	8008284 <__adddf3+0x8c>
 80083e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80083ea:	bf18      	it	ne
 80083ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80083f0:	d029      	beq.n	8008446 <__adddf3+0x24e>
 80083f2:	ea94 0f05 	teq	r4, r5
 80083f6:	bf08      	it	eq
 80083f8:	ea90 0f02 	teqeq	r0, r2
 80083fc:	d005      	beq.n	800840a <__adddf3+0x212>
 80083fe:	ea54 0c00 	orrs.w	ip, r4, r0
 8008402:	bf04      	itt	eq
 8008404:	4619      	moveq	r1, r3
 8008406:	4610      	moveq	r0, r2
 8008408:	bd30      	pop	{r4, r5, pc}
 800840a:	ea91 0f03 	teq	r1, r3
 800840e:	bf1e      	ittt	ne
 8008410:	2100      	movne	r1, #0
 8008412:	2000      	movne	r0, #0
 8008414:	bd30      	popne	{r4, r5, pc}
 8008416:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800841a:	d105      	bne.n	8008428 <__adddf3+0x230>
 800841c:	0040      	lsls	r0, r0, #1
 800841e:	4149      	adcs	r1, r1
 8008420:	bf28      	it	cs
 8008422:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008426:	bd30      	pop	{r4, r5, pc}
 8008428:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800842c:	bf3c      	itt	cc
 800842e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008432:	bd30      	popcc	{r4, r5, pc}
 8008434:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008438:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800843c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008440:	f04f 0000 	mov.w	r0, #0
 8008444:	bd30      	pop	{r4, r5, pc}
 8008446:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800844a:	bf1a      	itte	ne
 800844c:	4619      	movne	r1, r3
 800844e:	4610      	movne	r0, r2
 8008450:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008454:	bf1c      	itt	ne
 8008456:	460b      	movne	r3, r1
 8008458:	4602      	movne	r2, r0
 800845a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800845e:	bf06      	itte	eq
 8008460:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008464:	ea91 0f03 	teqeq	r1, r3
 8008468:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800846c:	bd30      	pop	{r4, r5, pc}
 800846e:	bf00      	nop

08008470 <__aeabi_ui2d>:
 8008470:	f090 0f00 	teq	r0, #0
 8008474:	bf04      	itt	eq
 8008476:	2100      	moveq	r1, #0
 8008478:	4770      	bxeq	lr
 800847a:	b530      	push	{r4, r5, lr}
 800847c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008480:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008484:	f04f 0500 	mov.w	r5, #0
 8008488:	f04f 0100 	mov.w	r1, #0
 800848c:	e750      	b.n	8008330 <__adddf3+0x138>
 800848e:	bf00      	nop

08008490 <__aeabi_i2d>:
 8008490:	f090 0f00 	teq	r0, #0
 8008494:	bf04      	itt	eq
 8008496:	2100      	moveq	r1, #0
 8008498:	4770      	bxeq	lr
 800849a:	b530      	push	{r4, r5, lr}
 800849c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80084a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80084a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80084a8:	bf48      	it	mi
 80084aa:	4240      	negmi	r0, r0
 80084ac:	f04f 0100 	mov.w	r1, #0
 80084b0:	e73e      	b.n	8008330 <__adddf3+0x138>
 80084b2:	bf00      	nop

080084b4 <__aeabi_f2d>:
 80084b4:	0042      	lsls	r2, r0, #1
 80084b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80084ba:	ea4f 0131 	mov.w	r1, r1, rrx
 80084be:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80084c2:	bf1f      	itttt	ne
 80084c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80084c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80084cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80084d0:	4770      	bxne	lr
 80084d2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80084d6:	bf08      	it	eq
 80084d8:	4770      	bxeq	lr
 80084da:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80084de:	bf04      	itt	eq
 80084e0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80084e4:	4770      	bxeq	lr
 80084e6:	b530      	push	{r4, r5, lr}
 80084e8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80084ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80084f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80084f4:	e71c      	b.n	8008330 <__adddf3+0x138>
 80084f6:	bf00      	nop

080084f8 <__aeabi_ul2d>:
 80084f8:	ea50 0201 	orrs.w	r2, r0, r1
 80084fc:	bf08      	it	eq
 80084fe:	4770      	bxeq	lr
 8008500:	b530      	push	{r4, r5, lr}
 8008502:	f04f 0500 	mov.w	r5, #0
 8008506:	e00a      	b.n	800851e <__aeabi_l2d+0x16>

08008508 <__aeabi_l2d>:
 8008508:	ea50 0201 	orrs.w	r2, r0, r1
 800850c:	bf08      	it	eq
 800850e:	4770      	bxeq	lr
 8008510:	b530      	push	{r4, r5, lr}
 8008512:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008516:	d502      	bpl.n	800851e <__aeabi_l2d+0x16>
 8008518:	4240      	negs	r0, r0
 800851a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800851e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008522:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008526:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800852a:	f43f aed8 	beq.w	80082de <__adddf3+0xe6>
 800852e:	f04f 0203 	mov.w	r2, #3
 8008532:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008536:	bf18      	it	ne
 8008538:	3203      	addne	r2, #3
 800853a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800853e:	bf18      	it	ne
 8008540:	3203      	addne	r2, #3
 8008542:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008546:	f1c2 0320 	rsb	r3, r2, #32
 800854a:	fa00 fc03 	lsl.w	ip, r0, r3
 800854e:	fa20 f002 	lsr.w	r0, r0, r2
 8008552:	fa01 fe03 	lsl.w	lr, r1, r3
 8008556:	ea40 000e 	orr.w	r0, r0, lr
 800855a:	fa21 f102 	lsr.w	r1, r1, r2
 800855e:	4414      	add	r4, r2
 8008560:	e6bd      	b.n	80082de <__adddf3+0xe6>
 8008562:	bf00      	nop

08008564 <__aeabi_fmul>:
 8008564:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008568:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800856c:	bf1e      	ittt	ne
 800856e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008572:	ea92 0f0c 	teqne	r2, ip
 8008576:	ea93 0f0c 	teqne	r3, ip
 800857a:	d06f      	beq.n	800865c <__aeabi_fmul+0xf8>
 800857c:	441a      	add	r2, r3
 800857e:	ea80 0c01 	eor.w	ip, r0, r1
 8008582:	0240      	lsls	r0, r0, #9
 8008584:	bf18      	it	ne
 8008586:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800858a:	d01e      	beq.n	80085ca <__aeabi_fmul+0x66>
 800858c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008590:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8008594:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008598:	fba0 3101 	umull	r3, r1, r0, r1
 800859c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80085a0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80085a4:	bf3e      	ittt	cc
 80085a6:	0049      	lslcc	r1, r1, #1
 80085a8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80085ac:	005b      	lslcc	r3, r3, #1
 80085ae:	ea40 0001 	orr.w	r0, r0, r1
 80085b2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80085b6:	2afd      	cmp	r2, #253	; 0xfd
 80085b8:	d81d      	bhi.n	80085f6 <__aeabi_fmul+0x92>
 80085ba:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80085be:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80085c2:	bf08      	it	eq
 80085c4:	f020 0001 	biceq.w	r0, r0, #1
 80085c8:	4770      	bx	lr
 80085ca:	f090 0f00 	teq	r0, #0
 80085ce:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80085d2:	bf08      	it	eq
 80085d4:	0249      	lsleq	r1, r1, #9
 80085d6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80085da:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80085de:	3a7f      	subs	r2, #127	; 0x7f
 80085e0:	bfc2      	ittt	gt
 80085e2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80085e6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80085ea:	4770      	bxgt	lr
 80085ec:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80085f0:	f04f 0300 	mov.w	r3, #0
 80085f4:	3a01      	subs	r2, #1
 80085f6:	dc5d      	bgt.n	80086b4 <__aeabi_fmul+0x150>
 80085f8:	f112 0f19 	cmn.w	r2, #25
 80085fc:	bfdc      	itt	le
 80085fe:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008602:	4770      	bxle	lr
 8008604:	f1c2 0200 	rsb	r2, r2, #0
 8008608:	0041      	lsls	r1, r0, #1
 800860a:	fa21 f102 	lsr.w	r1, r1, r2
 800860e:	f1c2 0220 	rsb	r2, r2, #32
 8008612:	fa00 fc02 	lsl.w	ip, r0, r2
 8008616:	ea5f 0031 	movs.w	r0, r1, rrx
 800861a:	f140 0000 	adc.w	r0, r0, #0
 800861e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008622:	bf08      	it	eq
 8008624:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008628:	4770      	bx	lr
 800862a:	f092 0f00 	teq	r2, #0
 800862e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008632:	bf02      	ittt	eq
 8008634:	0040      	lsleq	r0, r0, #1
 8008636:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800863a:	3a01      	subeq	r2, #1
 800863c:	d0f9      	beq.n	8008632 <__aeabi_fmul+0xce>
 800863e:	ea40 000c 	orr.w	r0, r0, ip
 8008642:	f093 0f00 	teq	r3, #0
 8008646:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800864a:	bf02      	ittt	eq
 800864c:	0049      	lsleq	r1, r1, #1
 800864e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008652:	3b01      	subeq	r3, #1
 8008654:	d0f9      	beq.n	800864a <__aeabi_fmul+0xe6>
 8008656:	ea41 010c 	orr.w	r1, r1, ip
 800865a:	e78f      	b.n	800857c <__aeabi_fmul+0x18>
 800865c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008660:	ea92 0f0c 	teq	r2, ip
 8008664:	bf18      	it	ne
 8008666:	ea93 0f0c 	teqne	r3, ip
 800866a:	d00a      	beq.n	8008682 <__aeabi_fmul+0x11e>
 800866c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008670:	bf18      	it	ne
 8008672:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008676:	d1d8      	bne.n	800862a <__aeabi_fmul+0xc6>
 8008678:	ea80 0001 	eor.w	r0, r0, r1
 800867c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008680:	4770      	bx	lr
 8008682:	f090 0f00 	teq	r0, #0
 8008686:	bf17      	itett	ne
 8008688:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 800868c:	4608      	moveq	r0, r1
 800868e:	f091 0f00 	teqne	r1, #0
 8008692:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8008696:	d014      	beq.n	80086c2 <__aeabi_fmul+0x15e>
 8008698:	ea92 0f0c 	teq	r2, ip
 800869c:	d101      	bne.n	80086a2 <__aeabi_fmul+0x13e>
 800869e:	0242      	lsls	r2, r0, #9
 80086a0:	d10f      	bne.n	80086c2 <__aeabi_fmul+0x15e>
 80086a2:	ea93 0f0c 	teq	r3, ip
 80086a6:	d103      	bne.n	80086b0 <__aeabi_fmul+0x14c>
 80086a8:	024b      	lsls	r3, r1, #9
 80086aa:	bf18      	it	ne
 80086ac:	4608      	movne	r0, r1
 80086ae:	d108      	bne.n	80086c2 <__aeabi_fmul+0x15e>
 80086b0:	ea80 0001 	eor.w	r0, r0, r1
 80086b4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80086b8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80086bc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80086c0:	4770      	bx	lr
 80086c2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80086c6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80086ca:	4770      	bx	lr

080086cc <__aeabi_fdiv>:
 80086cc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80086d0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80086d4:	bf1e      	ittt	ne
 80086d6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80086da:	ea92 0f0c 	teqne	r2, ip
 80086de:	ea93 0f0c 	teqne	r3, ip
 80086e2:	d069      	beq.n	80087b8 <__aeabi_fdiv+0xec>
 80086e4:	eba2 0203 	sub.w	r2, r2, r3
 80086e8:	ea80 0c01 	eor.w	ip, r0, r1
 80086ec:	0249      	lsls	r1, r1, #9
 80086ee:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80086f2:	d037      	beq.n	8008764 <__aeabi_fdiv+0x98>
 80086f4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80086f8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 80086fc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008700:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008704:	428b      	cmp	r3, r1
 8008706:	bf38      	it	cc
 8008708:	005b      	lslcc	r3, r3, #1
 800870a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800870e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008712:	428b      	cmp	r3, r1
 8008714:	bf24      	itt	cs
 8008716:	1a5b      	subcs	r3, r3, r1
 8008718:	ea40 000c 	orrcs.w	r0, r0, ip
 800871c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008720:	bf24      	itt	cs
 8008722:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008726:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800872a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800872e:	bf24      	itt	cs
 8008730:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008734:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008738:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800873c:	bf24      	itt	cs
 800873e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008742:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008746:	011b      	lsls	r3, r3, #4
 8008748:	bf18      	it	ne
 800874a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800874e:	d1e0      	bne.n	8008712 <__aeabi_fdiv+0x46>
 8008750:	2afd      	cmp	r2, #253	; 0xfd
 8008752:	f63f af50 	bhi.w	80085f6 <__aeabi_fmul+0x92>
 8008756:	428b      	cmp	r3, r1
 8008758:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800875c:	bf08      	it	eq
 800875e:	f020 0001 	biceq.w	r0, r0, #1
 8008762:	4770      	bx	lr
 8008764:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008768:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800876c:	327f      	adds	r2, #127	; 0x7f
 800876e:	bfc2      	ittt	gt
 8008770:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008774:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008778:	4770      	bxgt	lr
 800877a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800877e:	f04f 0300 	mov.w	r3, #0
 8008782:	3a01      	subs	r2, #1
 8008784:	e737      	b.n	80085f6 <__aeabi_fmul+0x92>
 8008786:	f092 0f00 	teq	r2, #0
 800878a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800878e:	bf02      	ittt	eq
 8008790:	0040      	lsleq	r0, r0, #1
 8008792:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8008796:	3a01      	subeq	r2, #1
 8008798:	d0f9      	beq.n	800878e <__aeabi_fdiv+0xc2>
 800879a:	ea40 000c 	orr.w	r0, r0, ip
 800879e:	f093 0f00 	teq	r3, #0
 80087a2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80087a6:	bf02      	ittt	eq
 80087a8:	0049      	lsleq	r1, r1, #1
 80087aa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80087ae:	3b01      	subeq	r3, #1
 80087b0:	d0f9      	beq.n	80087a6 <__aeabi_fdiv+0xda>
 80087b2:	ea41 010c 	orr.w	r1, r1, ip
 80087b6:	e795      	b.n	80086e4 <__aeabi_fdiv+0x18>
 80087b8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80087bc:	ea92 0f0c 	teq	r2, ip
 80087c0:	d108      	bne.n	80087d4 <__aeabi_fdiv+0x108>
 80087c2:	0242      	lsls	r2, r0, #9
 80087c4:	f47f af7d 	bne.w	80086c2 <__aeabi_fmul+0x15e>
 80087c8:	ea93 0f0c 	teq	r3, ip
 80087cc:	f47f af70 	bne.w	80086b0 <__aeabi_fmul+0x14c>
 80087d0:	4608      	mov	r0, r1
 80087d2:	e776      	b.n	80086c2 <__aeabi_fmul+0x15e>
 80087d4:	ea93 0f0c 	teq	r3, ip
 80087d8:	d104      	bne.n	80087e4 <__aeabi_fdiv+0x118>
 80087da:	024b      	lsls	r3, r1, #9
 80087dc:	f43f af4c 	beq.w	8008678 <__aeabi_fmul+0x114>
 80087e0:	4608      	mov	r0, r1
 80087e2:	e76e      	b.n	80086c2 <__aeabi_fmul+0x15e>
 80087e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80087e8:	bf18      	it	ne
 80087ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80087ee:	d1ca      	bne.n	8008786 <__aeabi_fdiv+0xba>
 80087f0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80087f4:	f47f af5c 	bne.w	80086b0 <__aeabi_fmul+0x14c>
 80087f8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 80087fc:	f47f af3c 	bne.w	8008678 <__aeabi_fmul+0x114>
 8008800:	e75f      	b.n	80086c2 <__aeabi_fmul+0x15e>
 8008802:	bf00      	nop

08008804 <__popcountsi2>:
 8008804:	0843      	lsrs	r3, r0, #1
 8008806:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 800880a:	1ac0      	subs	r0, r0, r3
 800880c:	0883      	lsrs	r3, r0, #2
 800880e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8008812:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8008816:	4418      	add	r0, r3
 8008818:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 800881c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8008820:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8008824:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8008828:	0e00      	lsrs	r0, r0, #24
 800882a:	4770      	bx	lr

0800882c <Reset_Handler>:
 800882c:	480c      	ldr	r0, [pc, #48]	; (8008860 <Zerobss+0x10>)
 800882e:	4685      	mov	sp, r0
 8008830:	2100      	movs	r1, #0
 8008832:	e003      	b.n	800883c <DataInit>

08008834 <CopyData>:
 8008834:	4b0b      	ldr	r3, [pc, #44]	; (8008864 <Zerobss+0x14>)
 8008836:	585b      	ldr	r3, [r3, r1]
 8008838:	5043      	str	r3, [r0, r1]
 800883a:	3104      	adds	r1, #4

0800883c <DataInit>:
 800883c:	480a      	ldr	r0, [pc, #40]	; (8008868 <Zerobss+0x18>)
 800883e:	4b0b      	ldr	r3, [pc, #44]	; (800886c <Zerobss+0x1c>)
 8008840:	1842      	adds	r2, r0, r1
 8008842:	429a      	cmp	r2, r3
 8008844:	d3f6      	bcc.n	8008834 <CopyData>
 8008846:	4a0a      	ldr	r2, [pc, #40]	; (8008870 <Zerobss+0x20>)
 8008848:	e002      	b.n	8008850 <Zerobss>

0800884a <FillZerobss>:
 800884a:	2300      	movs	r3, #0
 800884c:	f842 3b04 	str.w	r3, [r2], #4

08008850 <Zerobss>:
 8008850:	4b08      	ldr	r3, [pc, #32]	; (8008874 <Zerobss+0x24>)
 8008852:	429a      	cmp	r2, r3
 8008854:	d3f9      	bcc.n	800884a <FillZerobss>
 8008856:	f009 fe55 	bl	8012504 <SystemInit>
 800885a:	f000 f901 	bl	8008a60 <main>
 800885e:	4770      	bx	lr
 8008860:	20018000 	andcs	r8, r1, r0
 8008864:	0801648c 	stmdaeq	r1, {r2, r3, r7, sl, sp, lr}
 8008868:	20000000 	andcs	r0, r0, r0
 800886c:	200000e4 	andcs	r0, r0, r4, ror #1
 8008870:	200000e8 	andcs	r0, r0, r8, ror #1
 8008874:	20015a3c 	andcs	r5, r1, ip, lsr sl

08008878 <ADC0_1_IRQHandler>:
 8008878:	e7fe      	b.n	8008878 <ADC0_1_IRQHandler>

0800887a <DisplayHandler::~DisplayHandler()>:
 800887a:	4770      	bx	lr

0800887c <PixelDmxStartStop::~PixelDmxStartStop()>:
 800887c:	4770      	bx	lr
	...

08008880 <PixelDmxStartStop::Start()>:
 8008880:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008884:	4b01      	ldr	r3, [pc, #4]	; (800888c <PixelDmxStartStop::Start()+0xc>)
 8008886:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800888a:	4770      	bx	lr
 800888c:	40010000 	andmi	r0, r1, r0

08008890 <PixelDmxStartStop::Stop()>:
 8008890:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008894:	4b01      	ldr	r3, [pc, #4]	; (800889c <PixelDmxStartStop::Stop()+0xc>)
 8008896:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800889a:	4770      	bx	lr
 800889c:	40010000 	andmi	r0, r1, r0

080088a0 <Reboot::~Reboot()>:
 80088a0:	4770      	bx	lr
	...

080088a4 <Reboot::Run()>:
 80088a4:	b508      	push	{r3, lr}
 80088a6:	4b05      	ldr	r3, [pc, #20]	; (80088bc <Reboot::Run()+0x18>)
 80088a8:	6818      	ldr	r0, [r3, #0]
 80088aa:	f000 ff87 	bl	80097bc <E131Bridge::Stop()>
 80088ae:	4b04      	ldr	r3, [pc, #16]	; (80088c0 <Reboot::Run()+0x1c>)
 80088b0:	6818      	ldr	r0, [r3, #0]
 80088b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80088b6:	f004 b999 	b.w	800cbec <WS28xx::Blackout()>
 80088ba:	bf00      	nop
 80088bc:	20001900 	andcs	r1, r0, r0, lsl #18
 80088c0:	20001944 	andcs	r1, r0, r4, asr #18

080088c4 <Reboot::~Reboot()>:
 80088c4:	b510      	push	{r4, lr}
 80088c6:	4604      	mov	r4, r0
 80088c8:	f009 fbc4 	bl	8012054 <operator delete(void*)>
 80088cc:	4620      	mov	r0, r4
 80088ce:	bd10      	pop	{r4, pc}

080088d0 <DisplayHandler::~DisplayHandler()>:
 80088d0:	b510      	push	{r4, lr}
 80088d2:	4604      	mov	r4, r0
 80088d4:	f009 fbbe 	bl	8012054 <operator delete(void*)>
 80088d8:	4620      	mov	r0, r4
 80088da:	bd10      	pop	{r4, pc}

080088dc <PixelDmxStartStop::~PixelDmxStartStop()>:
 80088dc:	b510      	push	{r4, lr}
 80088de:	4604      	mov	r4, r0
 80088e0:	f009 fbb8 	bl	8012054 <operator delete(void*)>
 80088e4:	4620      	mov	r0, r4
 80088e6:	bd10      	pop	{r4, pc}

080088e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80088e8:	b110      	cbz	r0, 80088f0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80088ea:	6803      	ldr	r3, [r0, #0]
 80088ec:	6a1b      	ldr	r3, [r3, #32]
 80088ee:	4718      	bx	r3
 80088f0:	4770      	bx	lr

080088f2 <Display::PutChar(int) [clone .isra.0]>:
 80088f2:	b110      	cbz	r0, 80088fa <Display::PutChar(int) [clone .isra.0]+0x8>
 80088f4:	6803      	ldr	r3, [r0, #0]
 80088f6:	695b      	ldr	r3, [r3, #20]
 80088f8:	4718      	bx	r3
 80088fa:	4770      	bx	lr

080088fc <DisplayHandler::Print(unsigned int)>:
 80088fc:	b538      	push	{r3, r4, r5, lr}
 80088fe:	7903      	ldrb	r3, [r0, #4]
 8008900:	b1f3      	cbz	r3, 8008940 <DisplayHandler::Print(unsigned int)+0x44>
 8008902:	2904      	cmp	r1, #4
 8008904:	bf98      	it	ls
 8008906:	4b0f      	ldrls	r3, [pc, #60]	; (8008944 <DisplayHandler::Print(unsigned int)+0x48>)
 8008908:	4d0f      	ldr	r5, [pc, #60]	; (8008948 <DisplayHandler::Print(unsigned int)+0x4c>)
 800890a:	bf98      	it	ls
 800890c:	5c5c      	ldrbls	r4, [r3, r1]
 800890e:	682b      	ldr	r3, [r5, #0]
 8008910:	bf88      	it	hi
 8008912:	2455      	movhi	r4, #85	; 0x55
 8008914:	6998      	ldr	r0, [r3, #24]
 8008916:	b178      	cbz	r0, 8008938 <DisplayHandler::Print(unsigned int)+0x3c>
 8008918:	7901      	ldrb	r1, [r0, #4]
 800891a:	3901      	subs	r1, #1
 800891c:	b2c9      	uxtb	r1, r1
 800891e:	b168      	cbz	r0, 800893c <DisplayHandler::Print(unsigned int)+0x40>
 8008920:	7942      	ldrb	r2, [r0, #5]
 8008922:	3a01      	subs	r2, #1
 8008924:	b2d2      	uxtb	r2, r2
 8008926:	f7ff ffdf 	bl	80088e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800892a:	682b      	ldr	r3, [r5, #0]
 800892c:	4621      	mov	r1, r4
 800892e:	6998      	ldr	r0, [r3, #24]
 8008930:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008934:	f7ff bfdd 	b.w	80088f2 <Display::PutChar(int) [clone .isra.0]>
 8008938:	4601      	mov	r1, r0
 800893a:	e7ee      	b.n	800891a <DisplayHandler::Print(unsigned int)+0x1e>
 800893c:	4602      	mov	r2, r0
 800893e:	e7f0      	b.n	8008922 <DisplayHandler::Print(unsigned int)+0x26>
 8008940:	bd38      	pop	{r3, r4, r5, pc}
 8008942:	bf00      	nop
 8008944:	08014430 	stmdaeq	r1, {r4, r5, sl, lr}
 8008948:	2000a8c0 	andcs	sl, r0, r0, asr #17

0800894c <Display::SetSleep(bool)>:
 800894c:	b538      	push	{r3, r4, r5, lr}
 800894e:	4604      	mov	r4, r0
 8008950:	6980      	ldr	r0, [r0, #24]
 8008952:	460d      	mov	r5, r1
 8008954:	b138      	cbz	r0, 8008966 <Display::SetSleep(bool)+0x1a>
 8008956:	6803      	ldr	r3, [r0, #0]
 8008958:	7421      	strb	r1, [r4, #16]
 800895a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800895c:	4798      	blx	r3
 800895e:	b915      	cbnz	r5, 8008966 <Display::SetSleep(bool)+0x1a>
 8008960:	4b01      	ldr	r3, [pc, #4]	; (8008968 <Display::SetSleep(bool)+0x1c>)
 8008962:	681b      	ldr	r3, [r3, #0]
 8008964:	6063      	str	r3, [r4, #4]
 8008966:	bd38      	pop	{r3, r4, r5, pc}
 8008968:	2000a9c4 	andcs	sl, r0, r4, asr #19

0800896c <Display::Printf(unsigned char, char const*, ...)>:
 800896c:	b40c      	push	{r2, r3}
 800896e:	b570      	push	{r4, r5, r6, lr}
 8008970:	6984      	ldr	r4, [r0, #24]
 8008972:	4605      	mov	r5, r0
 8008974:	460e      	mov	r6, r1
 8008976:	b08a      	sub	sp, #40	; 0x28
 8008978:	b174      	cbz	r4, 8008998 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800897a:	ab0f      	add	r3, sp, #60	; 0x3c
 800897c:	2120      	movs	r1, #32
 800897e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008980:	a802      	add	r0, sp, #8
 8008982:	9301      	str	r3, [sp, #4]
 8008984:	f000 fe08 	bl	8009598 <vsnprintf>
 8008988:	4604      	mov	r4, r0
 800898a:	69a8      	ldr	r0, [r5, #24]
 800898c:	4631      	mov	r1, r6
 800898e:	6803      	ldr	r3, [r0, #0]
 8008990:	aa02      	add	r2, sp, #8
 8008992:	69dd      	ldr	r5, [r3, #28]
 8008994:	b2a3      	uxth	r3, r4
 8008996:	47a8      	blx	r5
 8008998:	4620      	mov	r0, r4
 800899a:	b00a      	add	sp, #40	; 0x28
 800899c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80089a0:	b002      	add	sp, #8
 80089a2:	4770      	bx	lr

080089a4 <Display::TextStatus(char const*)>:
 80089a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80089a8:	4604      	mov	r4, r0
 80089aa:	6980      	ldr	r0, [r0, #24]
 80089ac:	460d      	mov	r5, r1
 80089ae:	b360      	cbz	r0, 8008a0a <Display::TextStatus(char const*)+0x66>
 80089b0:	7947      	ldrb	r7, [r0, #5]
 80089b2:	2100      	movs	r1, #0
 80089b4:	1e7e      	subs	r6, r7, #1
 80089b6:	b2f6      	uxtb	r6, r6
 80089b8:	4632      	mov	r2, r6
 80089ba:	f890 9004 	ldrb.w	r9, [r0, #4]
 80089be:	f04f 0800 	mov.w	r8, #0
 80089c2:	f7ff ff91 	bl	80088e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80089c6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80089ca:	45c1      	cmp	r9, r8
 80089cc:	69a0      	ldr	r0, [r4, #24]
 80089ce:	d905      	bls.n	80089dc <Display::TextStatus(char const*)+0x38>
 80089d0:	2120      	movs	r1, #32
 80089d2:	f7ff ff8e 	bl	80088f2 <Display::PutChar(int) [clone .isra.0]>
 80089d6:	f108 0801 	add.w	r8, r8, #1
 80089da:	e7f6      	b.n	80089ca <Display::TextStatus(char const*)+0x26>
 80089dc:	4632      	mov	r2, r6
 80089de:	2100      	movs	r1, #0
 80089e0:	f7ff ff82 	bl	80088e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80089e4:	69a0      	ldr	r0, [r4, #24]
 80089e6:	b180      	cbz	r0, 8008a0a <Display::TextStatus(char const*)+0x66>
 80089e8:	2300      	movs	r3, #0
 80089ea:	7901      	ldrb	r1, [r0, #4]
 80089ec:	5cea      	ldrb	r2, [r5, r3]
 80089ee:	b11a      	cbz	r2, 80089f8 <Display::TextStatus(char const*)+0x54>
 80089f0:	1c5a      	adds	r2, r3, #1
 80089f2:	4299      	cmp	r1, r3
 80089f4:	4613      	mov	r3, r2
 80089f6:	dcf9      	bgt.n	80089ec <Display::TextStatus(char const*)+0x48>
 80089f8:	6802      	ldr	r2, [r0, #0]
 80089fa:	4639      	mov	r1, r7
 80089fc:	69d4      	ldr	r4, [r2, #28]
 80089fe:	b2db      	uxtb	r3, r3
 8008a00:	462a      	mov	r2, r5
 8008a02:	46a4      	mov	ip, r4
 8008a04:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008a08:	4760      	bx	ip
 8008a0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008a0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008a0e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008a10:	4605      	mov	r5, r0
 8008a12:	461e      	mov	r6, r3
 8008a14:	460f      	mov	r7, r1
 8008a16:	4614      	mov	r4, r2
 8008a18:	f7ff ffc4 	bl	80089a4 <Display::TextStatus(char const*)>
 8008a1c:	7c6b      	ldrb	r3, [r5, #17]
 8008a1e:	b19b      	cbz	r3, 8008a48 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008a20:	43e2      	mvns	r2, r4
 8008a22:	2312      	movs	r3, #18
 8008a24:	7a28      	ldrb	r0, [r5, #8]
 8008a26:	f88d 3004 	strb.w	r3, [sp, #4]
 8008a2a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008a2e:	f88d 3005 	strb.w	r3, [sp, #5]
 8008a32:	f88d 2006 	strb.w	r2, [sp, #6]
 8008a36:	f00a fb51 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 8008a3a:	68e8      	ldr	r0, [r5, #12]
 8008a3c:	f00a fb46 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 8008a40:	2103      	movs	r1, #3
 8008a42:	a801      	add	r0, sp, #4
 8008a44:	f00a fb50 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8008a48:	1c73      	adds	r3, r6, #1
 8008a4a:	d006      	beq.n	8008a5a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008a4c:	4639      	mov	r1, r7
 8008a4e:	4630      	mov	r0, r6
 8008a50:	b003      	add	sp, #12
 8008a52:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008a56:	f009 b99b 	b.w	8011d90 <console_status>
 8008a5a:	b003      	add	sp, #12
 8008a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008a60 <main>:
 8008a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008a64:	2501      	movs	r5, #1
 8008a66:	f6ad 6dbc 	subw	sp, sp, #3772	; 0xebc
 8008a6a:	a80c      	add	r0, sp, #48	; 0x30
 8008a6c:	f009 fa44 	bl	8011ef8 <Hardware::Hardware()>
 8008a70:	a86c      	add	r0, sp, #432	; 0x1b0
 8008a72:	f007 f835 	bl	800fae0 <Network::Network()>
 8008a76:	a810      	add	r0, sp, #64	; 0x40
 8008a78:	f009 f9e8 	bl	8011e4c <LedBlink::LedBlink()>
 8008a7c:	a856      	add	r0, sp, #344	; 0x158
 8008a7e:	f008 f849 	bl	8010b14 <DisplayUdf::DisplayUdf()>
 8008a82:	4a87      	ldr	r2, [pc, #540]	; (8008ca0 <main+0x240>)
 8008a84:	4b87      	ldr	r3, [pc, #540]	; (8008ca4 <main+0x244>)
 8008a86:	4988      	ldr	r1, [pc, #544]	; (8008ca8 <main+0x248>)
 8008a88:	a804      	add	r0, sp, #16
 8008a8a:	f009 f999 	bl	8011dc0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008a8e:	a805      	add	r0, sp, #20
 8008a90:	f005 ff38 	bl	800e904 <FlashRom::FlashRom()>
 8008a94:	4e85      	ldr	r6, [pc, #532]	; (8008cac <main+0x24c>)
 8008a96:	a806      	add	r0, sp, #24
 8008a98:	f005 fc06 	bl	800e2a8 <SpiFlashStore::SpiFlashStore()>
 8008a9c:	4984      	ldr	r1, [pc, #528]	; (8008cb0 <main+0x250>)
 8008a9e:	a804      	add	r0, sp, #16
 8008aa0:	f009 f9c6 	bl	8011e30 <FirmwareVersion::Print(char const*)>
 8008aa4:	2004      	movs	r0, #4
 8008aa6:	6135      	str	r5, [r6, #16]
 8008aa8:	f009 fad8 	bl	801205c <operator new(unsigned int)>
 8008aac:	4b81      	ldr	r3, [pc, #516]	; (8008cb4 <main+0x254>)
 8008aae:	900c      	str	r0, [sp, #48]	; 0x30
 8008ab0:	6003      	str	r3, [r0, #0]
 8008ab2:	2008      	movs	r0, #8
 8008ab4:	f009 fad2 	bl	801205c <operator new(unsigned int)>
 8008ab8:	4b7f      	ldr	r3, [pc, #508]	; (8008cb8 <main+0x258>)
 8008aba:	2400      	movs	r4, #0
 8008abc:	6003      	str	r3, [r0, #0]
 8008abe:	4b7f      	ldr	r3, [pc, #508]	; (8008cbc <main+0x25c>)
 8008ac0:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	497e      	ldr	r1, [pc, #504]	; (8008cc0 <main+0x260>)
 8008ac8:	3b00      	subs	r3, #0
 8008aca:	bf18      	it	ne
 8008acc:	2301      	movne	r3, #1
 8008ace:	9012      	str	r0, [sp, #72]	; 0x48
 8008ad0:	7103      	strb	r3, [r0, #4]
 8008ad2:	2303      	movs	r3, #3
 8008ad4:	a856      	add	r0, sp, #344	; 0x158
 8008ad6:	f7ff ff9a 	bl	8008a0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ada:	a80e      	add	r0, sp, #56	; 0x38
 8008adc:	f005 fdf4 	bl	800e6c8 <StoreNetwork::StoreNetwork()>
 8008ae0:	ab0f      	add	r3, sp, #60	; 0x3c
 8008ae2:	a90e      	add	r1, sp, #56	; 0x38
 8008ae4:	a86c      	add	r0, sp, #432	; 0x1b0
 8008ae6:	9399      	str	r3, [sp, #612]	; 0x264
 8008ae8:	f007 f852 	bl	800fb90 <Network::Init(NetworkParamsStore*)>
 8008aec:	a86c      	add	r0, sp, #432	; 0x1b0
 8008aee:	f007 f97f 	bl	800fdf0 <Network::Print()>
 8008af2:	a807      	add	r0, sp, #28
 8008af4:	f006 fc2e 	bl	800f354 <MDNS::MDNS()>
 8008af8:	a807      	add	r0, sp, #28
 8008afa:	f006 fcef 	bl	800f4dc <MDNS::Start()>
 8008afe:	f642 1305 	movw	r3, #10501	; 0x2905
 8008b02:	4621      	mov	r1, r4
 8008b04:	4a6f      	ldr	r2, [pc, #444]	; (8008cc4 <main+0x264>)
 8008b06:	e9cd 4400 	strd	r4, r4, [sp]
 8008b0a:	a807      	add	r0, sp, #28
 8008b0c:	f006 fe52 	bl	800f7b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008b10:	4b6d      	ldr	r3, [pc, #436]	; (8008cc8 <main+0x268>)
 8008b12:	4621      	mov	r1, r4
 8008b14:	4a6d      	ldr	r2, [pc, #436]	; (8008ccc <main+0x26c>)
 8008b16:	e9cd 5300 	strd	r5, r3, [sp]
 8008b1a:	a807      	add	r0, sp, #28
 8008b1c:	2350      	movs	r3, #80	; 0x50
 8008b1e:	f006 fe49 	bl	800f7b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008b22:	a807      	add	r0, sp, #28
 8008b24:	f006 ff8c 	bl	800fa40 <MDNS::Print()>
 8008b28:	2303      	movs	r3, #3
 8008b2a:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008b2e:	4968      	ldr	r1, [pc, #416]	; (8008cd0 <main+0x270>)
 8008b30:	a856      	add	r0, sp, #344	; 0x158
 8008b32:	f7ff ff6c 	bl	8008a0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008b36:	a809      	add	r0, sp, #36	; 0x24
 8008b38:	f005 fd1a 	bl	800e570 <StoreE131::StoreE131()>
 8008b3c:	a909      	add	r1, sp, #36	; 0x24
 8008b3e:	a81e      	add	r0, sp, #120	; 0x78
 8008b40:	f001 fd8e 	bl	800a660 <E131Params::E131Params(E131ParamsStore*)>
 8008b44:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008b48:	f000 fe88 	bl	800985c <E131Bridge::E131Bridge()>
 8008b4c:	a81e      	add	r0, sp, #120	; 0x78
 8008b4e:	f001 fda7 	bl	800a6a0 <E131Params::Load()>
 8008b52:	b138      	cbz	r0, 8008b64 <main+0x104>
 8008b54:	a81e      	add	r0, sp, #120	; 0x78
 8008b56:	f60d 0168 	addw	r1, sp, #2152	; 0x868
 8008b5a:	f001 ffe2 	bl	800ab22 <E131Params::Set(E131Bridge*)>
 8008b5e:	a81e      	add	r0, sp, #120	; 0x78
 8008b60:	f002 f818 	bl	800ab94 <E131Params::Dump()>
 8008b64:	4d5b      	ldr	r5, [pc, #364]	; (8008cd4 <main+0x274>)
 8008b66:	ac16      	add	r4, sp, #88	; 0x58
 8008b68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b6c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008b70:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008b74:	2008      	movs	r0, #8
 8008b76:	f009 fa71 	bl	801205c <operator new(unsigned int)>
 8008b7a:	4604      	mov	r4, r0
 8008b7c:	f005 feb6 	bl	800e8ec <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008b80:	4621      	mov	r1, r4
 8008b82:	a83a      	add	r0, sp, #232	; 0xe8
 8008b84:	f002 fa52 	bl	800b02c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008b88:	a83a      	add	r0, sp, #232	; 0xe8
 8008b8a:	f002 fa77 	bl	800b07c <WS28xxDmxParams::Load()>
 8008b8e:	b130      	cbz	r0, 8008b9e <main+0x13e>
 8008b90:	a83a      	add	r0, sp, #232	; 0xe8
 8008b92:	a916      	add	r1, sp, #88	; 0x58
 8008b94:	f002 fcf5 	bl	800b582 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 8008b98:	a83a      	add	r0, sp, #232	; 0xe8
 8008b9a:	f002 fd28 	bl	800b5ee <WS28xxDmxParams::Dump()>
 8008b9e:	a916      	add	r1, sp, #88	; 0x58
 8008ba0:	a845      	add	r0, sp, #276	; 0x114
 8008ba2:	f002 f949 	bl	800ae38 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 8008ba6:	2004      	movs	r0, #4
 8008ba8:	f009 fa58 	bl	801205c <operator new(unsigned int)>
 8008bac:	4b4a      	ldr	r3, [pc, #296]	; (8008cd8 <main+0x278>)
 8008bae:	4604      	mov	r4, r0
 8008bb0:	6003      	str	r3, [r0, #0]
 8008bb2:	2203      	movs	r2, #3
 8008bb4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008bb8:	2110      	movs	r1, #16
 8008bba:	4848      	ldr	r0, [pc, #288]	; (8008cdc <main+0x27c>)
 8008bbc:	f009 fdde 	bl	801277c <gpio_init>
 8008bc0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008bc4:	4b46      	ldr	r3, [pc, #280]	; (8008ce0 <main+0x280>)
 8008bc6:	2101      	movs	r1, #1
 8008bc8:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008bcc:	f89d 5112 	ldrb.w	r5, [sp, #274]	; 0x112
 8008bd0:	a808      	add	r0, sp, #32
 8008bd2:	9454      	str	r4, [sp, #336]	; 0x150
 8008bd4:	f002 fe26 	bl	800b824 <PixelPatterns::PixelPatterns(unsigned int)>
 8008bd8:	4b42      	ldr	r3, [pc, #264]	; (8008ce4 <main+0x284>)
 8008bda:	2d05      	cmp	r5, #5
 8008bdc:	601d      	str	r5, [r3, #0]
 8008bde:	f340 8171 	ble.w	8008ec4 <main+0x464>
 8008be2:	2401      	movs	r4, #1
 8008be4:	f8bd 7102 	ldrh.w	r7, [sp, #258]	; 0x102
 8008be8:	2201      	movs	r2, #1
 8008bea:	463b      	mov	r3, r7
 8008bec:	2100      	movs	r1, #0
 8008bee:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008bf2:	f000 fed3 	bl	800999c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008bf6:	f8dd 8130 	ldr.w	r8, [sp, #304]	; 0x130
 8008bfa:	45a0      	cmp	r8, r4
 8008bfc:	d97c      	bls.n	8008cf8 <main+0x298>
 8008bfe:	193b      	adds	r3, r7, r4
 8008c00:	4621      	mov	r1, r4
 8008c02:	2201      	movs	r2, #1
 8008c04:	b29b      	uxth	r3, r3
 8008c06:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008c0a:	f000 fec7 	bl	800999c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008c0e:	3401      	adds	r4, #1
 8008c10:	e7f3      	b.n	8008bfa <main+0x19a>
 8008c12:	2300      	movs	r3, #0
 8008c14:	2264      	movs	r2, #100	; 0x64
 8008c16:	4619      	mov	r1, r3
 8008c18:	a808      	add	r0, sp, #32
 8008c1a:	f002 fe2f 	bl	800b87c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c1e:	e7e0      	b.n	8008be2 <main+0x182>
 8008c20:	2200      	movs	r2, #0
 8008c22:	2364      	movs	r3, #100	; 0x64
 8008c24:	4611      	mov	r1, r2
 8008c26:	e9cd 3200 	strd	r3, r2, [sp]
 8008c2a:	a808      	add	r0, sp, #32
 8008c2c:	4b2e      	ldr	r3, [pc, #184]	; (8008ce8 <main+0x288>)
 8008c2e:	f002 fe39 	bl	800b8a4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c32:	e7d6      	b.n	8008be2 <main+0x182>
 8008c34:	2100      	movs	r1, #0
 8008c36:	2364      	movs	r3, #100	; 0x64
 8008c38:	4a2b      	ldr	r2, [pc, #172]	; (8008ce8 <main+0x288>)
 8008c3a:	9100      	str	r1, [sp, #0]
 8008c3c:	a808      	add	r0, sp, #32
 8008c3e:	f002 fe4d 	bl	800b8dc <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c42:	e7ce      	b.n	8008be2 <main+0x182>
 8008c44:	2364      	movs	r3, #100	; 0x64
 8008c46:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008c4a:	2100      	movs	r1, #0
 8008c4c:	a808      	add	r0, sp, #32
 8008c4e:	f002 fe5f 	bl	800b910 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008c52:	e7c6      	b.n	8008be2 <main+0x182>
 8008c54:	2200      	movs	r2, #0
 8008c56:	2364      	movs	r3, #100	; 0x64
 8008c58:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008c5c:	230a      	movs	r3, #10
 8008c5e:	4611      	mov	r1, r2
 8008c60:	9300      	str	r3, [sp, #0]
 8008c62:	a808      	add	r0, sp, #32
 8008c64:	4b20      	ldr	r3, [pc, #128]	; (8008ce8 <main+0x288>)
 8008c66:	f002 fe85 	bl	800b974 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c6a:	e7ba      	b.n	8008be2 <main+0x182>
 8008c6c:	2400      	movs	r4, #0
 8008c6e:	4627      	mov	r7, r4
 8008c70:	4b1e      	ldr	r3, [pc, #120]	; (8008cec <main+0x28c>)
 8008c72:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8008cf0 <main+0x290>
 8008c76:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8008cf4 <main+0x294>
 8008c7a:	61dc      	str	r4, [r3, #28]
 8008c7c:	f8d9 3000 	ldr.w	r3, [r9]
 8008c80:	f8d8 0000 	ldr.w	r0, [r8]
 8008c84:	42a3      	cmp	r3, r4
 8008c86:	d907      	bls.n	8008c98 <main+0x238>
 8008c88:	2300      	movs	r3, #0
 8008c8a:	4621      	mov	r1, r4
 8008c8c:	461a      	mov	r2, r3
 8008c8e:	9700      	str	r7, [sp, #0]
 8008c90:	f003 f950 	bl	800bf34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008c94:	3401      	adds	r4, #1
 8008c96:	e7f1      	b.n	8008c7c <main+0x21c>
 8008c98:	f003 ff8c 	bl	800cbb4 <WS28xx::Update()>
 8008c9c:	e7a1      	b.n	8008be2 <main+0x182>
 8008c9e:	bf00      	nop
 8008ca0:	08014365 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, lr}
 8008ca4:	0801435c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, lr}
 8008ca8:	08014435 	stmdaeq	r1, {r0, r2, r4, r5, sl, lr}
 8008cac:	40011000 	andmi	r1, r1, r0
 8008cb0:	08014371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, lr}
 8008cb4:	08014424 	stmdaeq	r1, {r2, r5, sl, lr}
 8008cb8:	080143f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008cbc:	2000a8c0 	andcs	sl, r0, r0, asr #17
 8008cc0:	08015b1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
 8008cc4:	080143a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, lr}
 8008cc8:	080143b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, lr}
 8008ccc:	080143b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, lr}
 8008cd0:	08014535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, lr}
 8008cd4:	08014324 	stmdaeq	r1, {r2, r5, r8, r9, lr}
 8008cd8:	0801440c 	stmdaeq	r1, {r2, r3, sl, lr}
 8008cdc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008ce0:	40010000 	andmi	r0, r1, r0
 8008ce4:	2000193c 	andcs	r1, r0, ip, lsr r9
 8008ce8:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008cec:	2000190c 	andcs	r1, r0, ip, lsl #18
 8008cf0:	20001938 	andcs	r1, r0, r8, lsr r9
 8008cf4:	20001934 	andcs	r1, r0, r4, lsr r9
 8008cf8:	4b7b      	ldr	r3, [pc, #492]	; (8008ee8 <main+0x488>)
 8008cfa:	681b      	ldr	r3, [r3, #0]
 8008cfc:	2b00      	cmp	r3, #0
 8008cfe:	f040 80d9 	bne.w	8008eb4 <main+0x454>
 8008d02:	ab45      	add	r3, sp, #276	; 0x114
 8008d04:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008d08:	f8cd 386c 	str.w	r3, [sp, #2156]	; 0x86c
 8008d0c:	f001 fbde 	bl	800a4cc <E131Bridge::Print()>
 8008d10:	a845      	add	r0, sp, #276	; 0x114
 8008d12:	f002 fc6d 	bl	800b5f0 <WS28xxDmx::Print()>
 8008d16:	4975      	ldr	r1, [pc, #468]	; (8008eec <main+0x48c>)
 8008d18:	a856      	add	r0, sp, #344	; 0x158
 8008d1a:	f007 ff11 	bl	8010b40 <DisplayUdf::SetTitle(char const*, ...)>
 8008d1e:	2202      	movs	r2, #2
 8008d20:	a856      	add	r0, sp, #344	; 0x158
 8008d22:	4611      	mov	r1, r2
 8008d24:	f008 f862 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d28:	2207      	movs	r2, #7
 8008d2a:	2103      	movs	r1, #3
 8008d2c:	a856      	add	r0, sp, #344	; 0x158
 8008d2e:	f008 f85d 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d32:	2203      	movs	r2, #3
 8008d34:	2104      	movs	r1, #4
 8008d36:	a856      	add	r0, sp, #344	; 0x158
 8008d38:	f008 f858 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d3c:	2208      	movs	r2, #8
 8008d3e:	2105      	movs	r1, #5
 8008d40:	a856      	add	r0, sp, #344	; 0x158
 8008d42:	f008 f853 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d46:	2205      	movs	r2, #5
 8008d48:	2106      	movs	r1, #6
 8008d4a:	a856      	add	r0, sp, #344	; 0x158
 8008d4c:	f008 f84e 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d50:	9816      	ldr	r0, [sp, #88]	; 0x58
 8008d52:	f002 ffcf 	bl	800bcf4 <PixelType::GetType(pixel::Type)>
 8008d56:	4604      	mov	r4, r0
 8008d58:	9818      	ldr	r0, [sp, #96]	; 0x60
 8008d5a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8008d5c:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8008d60:	f003 f820 	bl	800bda4 <PixelType::GetMap(pixel::Map)>
 8008d64:	4623      	mov	r3, r4
 8008d66:	2107      	movs	r1, #7
 8008d68:	4a61      	ldr	r2, [pc, #388]	; (8008ef0 <main+0x490>)
 8008d6a:	e9cd 8001 	strd	r8, r0, [sp, #4]
 8008d6e:	9700      	str	r7, [sp, #0]
 8008d70:	a856      	add	r0, sp, #344	; 0x158
 8008d72:	f7ff fdfb 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8008d76:	a80a      	add	r0, sp, #40	; 0x28
 8008d78:	f005 fbc6 	bl	800e508 <StoreDisplayUdf::StoreDisplayUdf()>
 8008d7c:	a90a      	add	r1, sp, #40	; 0x28
 8008d7e:	a830      	add	r0, sp, #192	; 0xc0
 8008d80:	f008 f876 	bl	8010e70 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008d84:	a830      	add	r0, sp, #192	; 0xc0
 8008d86:	f008 f880 	bl	8010e8a <DisplayUdfParams::Load()>
 8008d8a:	b130      	cbz	r0, 8008d9a <main+0x33a>
 8008d8c:	a830      	add	r0, sp, #192	; 0xc0
 8008d8e:	a956      	add	r1, sp, #344	; 0x158
 8008d90:	f008 f9b1 	bl	80110f6 <DisplayUdfParams::Set(DisplayUdf*)>
 8008d94:	a830      	add	r0, sp, #192	; 0xc0
 8008d96:	f008 f9e1 	bl	801115c <DisplayUdfParams::Dump()>
 8008d9a:	f60d 0168 	addw	r1, sp, #2152	; 0x868
 8008d9e:	a856      	add	r0, sp, #344	; 0x158
 8008da0:	f008 f9de 	bl	8011160 <DisplayUdf::Show(E131Bridge*)>
 8008da4:	b17d      	cbz	r5, 8008dc6 <main+0x366>
 8008da6:	985c      	ldr	r0, [sp, #368]	; 0x170
 8008da8:	b118      	cbz	r0, 8008db2 <main+0x352>
 8008daa:	6803      	ldr	r3, [r0, #0]
 8008dac:	2106      	movs	r1, #6
 8008dae:	691b      	ldr	r3, [r3, #16]
 8008db0:	4798      	blx	r3
 8008db2:	4628      	mov	r0, r5
 8008db4:	f002 fd56 	bl	800b864 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008db8:	2106      	movs	r1, #6
 8008dba:	4603      	mov	r3, r0
 8008dbc:	4a4d      	ldr	r2, [pc, #308]	; (8008ef4 <main+0x494>)
 8008dbe:	9500      	str	r5, [sp, #0]
 8008dc0:	a856      	add	r0, sp, #344	; 0x158
 8008dc2:	f7ff fdd3 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8008dc6:	2203      	movs	r2, #3
 8008dc8:	2101      	movs	r1, #1
 8008dca:	f89d 3d73 	ldrb.w	r3, [sp, #3443]	; 0xd73
 8008dce:	a89e      	add	r0, sp, #632	; 0x278
 8008dd0:	f004 f8a2 	bl	800cf18 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008dd4:	a80b      	add	r0, sp, #44	; 0x2c
 8008dd6:	f005 fcad 	bl	800e734 <StoreRemoteConfig::StoreRemoteConfig()>
 8008dda:	a90b      	add	r1, sp, #44	; 0x2c
 8008ddc:	a827      	add	r0, sp, #156	; 0x9c
 8008dde:	f004 fb9f 	bl	800d520 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008de2:	a827      	add	r0, sp, #156	; 0x9c
 8008de4:	f004 fba6 	bl	800d534 <RemoteConfigParams::Load()>
 8008de8:	b130      	cbz	r0, 8008df8 <main+0x398>
 8008dea:	a827      	add	r0, sp, #156	; 0x9c
 8008dec:	a99e      	add	r1, sp, #632	; 0x278
 8008dee:	f004 fcc8 	bl	800d782 <RemoteConfigParams::Set(RemoteConfig*)>
 8008df2:	a827      	add	r0, sp, #156	; 0x9c
 8008df4:	f004 fce9 	bl	800d7ca <RemoteConfigParams::Dump()>
 8008df8:	a806      	add	r0, sp, #24
 8008dfa:	f005 fb01 	bl	800e400 <SpiFlashStore::Flash()>
 8008dfe:	2800      	cmp	r0, #0
 8008e00:	d1fa      	bne.n	8008df8 <main+0x398>
 8008e02:	2303      	movs	r3, #3
 8008e04:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008e08:	493b      	ldr	r1, [pc, #236]	; (8008ef8 <main+0x498>)
 8008e0a:	a856      	add	r0, sp, #344	; 0x158
 8008e0c:	f7ff fdff 	bl	8008a0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008e10:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008e14:	f000 fc96 	bl	8009744 <E131Bridge::Start()>
 8008e18:	2302      	movs	r3, #2
 8008e1a:	f248 0280 	movw	r2, #32896	; 0x8080
 8008e1e:	4937      	ldr	r1, [pc, #220]	; (8008efc <main+0x49c>)
 8008e20:	a856      	add	r0, sp, #344	; 0x158
 8008e22:	f7ff fdf4 	bl	8008a0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008e26:	2102      	movs	r1, #2
 8008e28:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008e2c:	f009 fc7c 	bl	8012728 <fwdgt_config>
 8008e30:	2801      	cmp	r0, #1
 8008e32:	bf0c      	ite	eq
 8008e34:	2301      	moveq	r3, #1
 8008e36:	2300      	movne	r3, #0
 8008e38:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
 8008e3c:	d101      	bne.n	8008e42 <main+0x3e2>
 8008e3e:	f009 fc63 	bl	8012708 <fwdgt_enable>
 8008e42:	2701      	movs	r7, #1
 8008e44:	4c2e      	ldr	r4, [pc, #184]	; (8008f00 <main+0x4a0>)
 8008e46:	4d28      	ldr	r5, [pc, #160]	; (8008ee8 <main+0x488>)
 8008e48:	f009 fc66 	bl	8012718 <fwdgt_counter_reload>
 8008e4c:	f7fe fb6c 	bl	8007528 <net_handle>
 8008e50:	f60d 0068 	addw	r0, sp, #2152	; 0x868
 8008e54:	f001 f8e6 	bl	800a024 <E131Bridge::Run()>
 8008e58:	a89e      	add	r0, sp, #632	; 0x278
 8008e5a:	f004 fa0f 	bl	800d27c <RemoteConfig::Run()>
 8008e5e:	a806      	add	r0, sp, #24
 8008e60:	f005 face 	bl	800e400 <SpiFlashStore::Flash()>
 8008e64:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8008e66:	b172      	cbz	r2, 8008e86 <main+0x426>
 8008e68:	6823      	ldr	r3, [r4, #0]
 8008e6a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8008e6c:	1a5b      	subs	r3, r3, r1
 8008e6e:	429a      	cmp	r2, r3
 8008e70:	d809      	bhi.n	8008e86 <main+0x426>
 8008e72:	6823      	ldr	r3, [r4, #0]
 8008e74:	9315      	str	r3, [sp, #84]	; 0x54
 8008e76:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008e78:	2b01      	cmp	r3, #1
 8008e7a:	f083 0201 	eor.w	r2, r3, #1
 8008e7e:	9214      	str	r2, [sp, #80]	; 0x50
 8008e80:	bf14      	ite	ne
 8008e82:	6137      	strne	r7, [r6, #16]
 8008e84:	6173      	streq	r3, [r6, #20]
 8008e86:	9a5b      	ldr	r2, [sp, #364]	; 0x16c
 8008e88:	b15a      	cbz	r2, 8008ea2 <main+0x442>
 8008e8a:	f89d 3168 	ldrb.w	r3, [sp, #360]	; 0x168
 8008e8e:	b99b      	cbnz	r3, 8008eb8 <main+0x458>
 8008e90:	6823      	ldr	r3, [r4, #0]
 8008e92:	9957      	ldr	r1, [sp, #348]	; 0x15c
 8008e94:	1a5b      	subs	r3, r3, r1
 8008e96:	429a      	cmp	r2, r3
 8008e98:	d203      	bcs.n	8008ea2 <main+0x442>
 8008e9a:	2101      	movs	r1, #1
 8008e9c:	a856      	add	r0, sp, #344	; 0x158
 8008e9e:	f7ff fd55 	bl	800894c <Display::SetSleep(bool)>
 8008ea2:	682b      	ldr	r3, [r5, #0]
 8008ea4:	b113      	cbz	r3, 8008eac <main+0x44c>
 8008ea6:	a808      	add	r0, sp, #32
 8008ea8:	f002 fefa 	bl	800bca0 <PixelPatterns::Run()>
 8008eac:	a807      	add	r0, sp, #28
 8008eae:	f006 fda3 	bl	800f9f8 <MDNS::Run()>
 8008eb2:	e7c9      	b.n	8008e48 <main+0x3e8>
 8008eb4:	2300      	movs	r3, #0
 8008eb6:	e725      	b.n	8008d04 <main+0x2a4>
 8008eb8:	f008 fd33 	bl	8011922 <display::timeout::gpio_renew()>
 8008ebc:	2800      	cmp	r0, #0
 8008ebe:	d0f0      	beq.n	8008ea2 <main+0x442>
 8008ec0:	2100      	movs	r1, #0
 8008ec2:	e7eb      	b.n	8008e9c <main+0x43c>
 8008ec4:	2d05      	cmp	r5, #5
 8008ec6:	f63f ae8c 	bhi.w	8008be2 <main+0x182>
 8008eca:	a301      	add	r3, pc, #4	; (adr r3, 8008ed0 <main+0x470>)
 8008ecc:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
 8008ed0:	08008c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, pc}
 8008ed4:	08008c13 	stmdaeq	r0, {r0, r1, r4, sl, fp, pc}
 8008ed8:	08008c21 	stmdaeq	r0, {r0, r5, sl, fp, pc}
 8008edc:	08008c35 	stmdaeq	r0, {r0, r2, r4, r5, sl, fp, pc}
 8008ee0:	08008c45 	stmdaeq	r0, {r0, r2, r6, sl, fp, pc}
 8008ee4:	08008c55 	stmdaeq	r0, {r0, r2, r4, r6, sl, fp, pc}
 8008ee8:	2000193c 	andcs	r1, r0, ip, lsr r9
 8008eec:	080143ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, lr}
 8008ef0:	080143db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, lr}
 8008ef4:	080143e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, lr}
 8008ef8:	08014521 	stmdaeq	r1, {r0, r5, r8, sl, lr}
 8008efc:	0801454c 	stmdaeq	r1, {r2, r3, r6, r8, sl, lr}
 8008f00:	2000a9c4 	andcs	sl, r0, r4, asr #19

08008f04 <_itostr>:
 8008f04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f06:	0fc7      	lsrs	r7, r0, #31
 8008f08:	b091      	sub	sp, #68	; 0x44
 8008f0a:	bf18      	it	ne
 8008f0c:	4240      	negne	r0, r0
 8008f0e:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008f12:	b9c8      	cbnz	r0, 8008f48 <_itostr+0x44>
 8008f14:	2330      	movs	r3, #48	; 0x30
 8008f16:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008f1a:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008f1e:	b132      	cbz	r2, 8008f2e <_itostr+0x2a>
 8008f20:	4668      	mov	r0, sp
 8008f22:	2530      	movs	r5, #48	; 0x30
 8008f24:	1ae6      	subs	r6, r4, r3
 8008f26:	4296      	cmp	r6, r2
 8008f28:	da01      	bge.n	8008f2e <_itostr+0x2a>
 8008f2a:	4283      	cmp	r3, r0
 8008f2c:	d81c      	bhi.n	8008f68 <_itostr+0x64>
 8008f2e:	b117      	cbz	r7, 8008f36 <_itostr+0x32>
 8008f30:	222d      	movs	r2, #45	; 0x2d
 8008f32:	f803 2901 	strb.w	r2, [r3], #-1
 8008f36:	3301      	adds	r3, #1
 8008f38:	1ae0      	subs	r0, r4, r3
 8008f3a:	3901      	subs	r1, #1
 8008f3c:	aa10      	add	r2, sp, #64	; 0x40
 8008f3e:	4293      	cmp	r3, r2
 8008f40:	d315      	bcc.n	8008f6e <_itostr+0x6a>
 8008f42:	3001      	adds	r0, #1
 8008f44:	b011      	add	sp, #68	; 0x44
 8008f46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f48:	4623      	mov	r3, r4
 8008f4a:	250a      	movs	r5, #10
 8008f4c:	46ec      	mov	ip, sp
 8008f4e:	fb90 f6f5 	sdiv	r6, r0, r5
 8008f52:	fb05 0016 	mls	r0, r5, r6, r0
 8008f56:	3030      	adds	r0, #48	; 0x30
 8008f58:	f803 0901 	strb.w	r0, [r3], #-1
 8008f5c:	4630      	mov	r0, r6
 8008f5e:	2e00      	cmp	r6, #0
 8008f60:	d0dd      	beq.n	8008f1e <_itostr+0x1a>
 8008f62:	4563      	cmp	r3, ip
 8008f64:	d1f3      	bne.n	8008f4e <_itostr+0x4a>
 8008f66:	e7da      	b.n	8008f1e <_itostr+0x1a>
 8008f68:	f803 5901 	strb.w	r5, [r3], #-1
 8008f6c:	e7da      	b.n	8008f24 <_itostr+0x20>
 8008f6e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008f72:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008f76:	e7e1      	b.n	8008f3c <_itostr+0x38>

08008f78 <_xputch>:
 8008f78:	4603      	mov	r3, r0
 8008f7a:	b410      	push	{r4}
 8008f7c:	4c08      	ldr	r4, [pc, #32]	; (8008fa0 <_xputch+0x28>)
 8008f7e:	68da      	ldr	r2, [r3, #12]
 8008f80:	4608      	mov	r0, r1
 8008f82:	6821      	ldr	r1, [r4, #0]
 8008f84:	3201      	adds	r2, #1
 8008f86:	60da      	str	r2, [r3, #12]
 8008f88:	b139      	cbz	r1, 8008f9a <_xputch+0x22>
 8008f8a:	691b      	ldr	r3, [r3, #16]
 8008f8c:	429a      	cmp	r2, r3
 8008f8e:	da02      	bge.n	8008f96 <_xputch+0x1e>
 8008f90:	1c4b      	adds	r3, r1, #1
 8008f92:	6023      	str	r3, [r4, #0]
 8008f94:	7008      	strb	r0, [r1, #0]
 8008f96:	bc10      	pop	{r4}
 8008f98:	4770      	bx	lr
 8008f9a:	bc10      	pop	{r4}
 8008f9c:	f008 bec0 	b.w	8011d20 <console_putc>
 8008fa0:	200000e8 	andcs	r0, r0, r8, ror #1

08008fa4 <_format_int>:
 8008fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008fa8:	461f      	mov	r7, r3
 8008faa:	b091      	sub	sp, #68	; 0x44
 8008fac:	ea52 0307 	orrs.w	r3, r2, r7
 8008fb0:	4680      	mov	r8, r0
 8008fb2:	4616      	mov	r6, r2
 8008fb4:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008fb8:	d138      	bne.n	800902c <_format_int+0x88>
 8008fba:	2330      	movs	r3, #48	; 0x30
 8008fbc:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008fc0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008fc4:	f8d8 3000 	ldr.w	r3, [r8]
 8008fc8:	07d8      	lsls	r0, r3, #31
 8008fca:	d508      	bpl.n	8008fde <_format_int+0x3a>
 8008fcc:	466a      	mov	r2, sp
 8008fce:	2030      	movs	r0, #48	; 0x30
 8008fd0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8008fd4:	1b2e      	subs	r6, r5, r4
 8008fd6:	428e      	cmp	r6, r1
 8008fd8:	da01      	bge.n	8008fde <_format_int+0x3a>
 8008fda:	4294      	cmp	r4, r2
 8008fdc:	d843      	bhi.n	8009066 <_format_int+0xc2>
 8008fde:	0699      	lsls	r1, r3, #26
 8008fe0:	d508      	bpl.n	8008ff4 <_format_int+0x50>
 8008fe2:	466a      	mov	r2, sp
 8008fe4:	2030      	movs	r0, #48	; 0x30
 8008fe6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8008fea:	1b2e      	subs	r6, r5, r4
 8008fec:	428e      	cmp	r6, r1
 8008fee:	da01      	bge.n	8008ff4 <_format_int+0x50>
 8008ff0:	4294      	cmp	r4, r2
 8008ff2:	d83b      	bhi.n	800906c <_format_int+0xc8>
 8008ff4:	071a      	lsls	r2, r3, #28
 8008ff6:	bf44      	itt	mi
 8008ff8:	222d      	movmi	r2, #45	; 0x2d
 8008ffa:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008ffe:	065b      	lsls	r3, r3, #25
 8009000:	d408      	bmi.n	8009014 <_format_int+0x70>
 8009002:	466b      	mov	r3, sp
 8009004:	2120      	movs	r1, #32
 8009006:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800900a:	1b28      	subs	r0, r5, r4
 800900c:	4290      	cmp	r0, r2
 800900e:	da01      	bge.n	8009014 <_format_int+0x70>
 8009010:	429c      	cmp	r4, r3
 8009012:	d82e      	bhi.n	8009072 <_format_int+0xce>
 8009014:	1b2d      	subs	r5, r5, r4
 8009016:	3401      	adds	r4, #1
 8009018:	ab10      	add	r3, sp, #64	; 0x40
 800901a:	429c      	cmp	r4, r3
 800901c:	d32c      	bcc.n	8009078 <_format_int+0xd4>
 800901e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8009022:	42ab      	cmp	r3, r5
 8009024:	dc2e      	bgt.n	8009084 <_format_int+0xe0>
 8009026:	b011      	add	sp, #68	; 0x44
 8009028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800902c:	462c      	mov	r4, r5
 800902e:	46eb      	mov	fp, sp
 8009030:	4630      	mov	r0, r6
 8009032:	4639      	mov	r1, r7
 8009034:	220a      	movs	r2, #10
 8009036:	2300      	movs	r3, #0
 8009038:	f7fe ff54 	bl	8007ee4 <__aeabi_uldivmod>
 800903c:	46b2      	mov	sl, r6
 800903e:	3230      	adds	r2, #48	; 0x30
 8009040:	46b9      	mov	r9, r7
 8009042:	2300      	movs	r3, #0
 8009044:	4630      	mov	r0, r6
 8009046:	4639      	mov	r1, r7
 8009048:	f804 2901 	strb.w	r2, [r4], #-1
 800904c:	220a      	movs	r2, #10
 800904e:	f7fe ff49 	bl	8007ee4 <__aeabi_uldivmod>
 8009052:	f1ba 0f0a 	cmp.w	sl, #10
 8009056:	f179 0300 	sbcs.w	r3, r9, #0
 800905a:	4606      	mov	r6, r0
 800905c:	460f      	mov	r7, r1
 800905e:	d3b1      	bcc.n	8008fc4 <_format_int+0x20>
 8009060:	455c      	cmp	r4, fp
 8009062:	d1e5      	bne.n	8009030 <_format_int+0x8c>
 8009064:	e7ae      	b.n	8008fc4 <_format_int+0x20>
 8009066:	f804 0901 	strb.w	r0, [r4], #-1
 800906a:	e7b3      	b.n	8008fd4 <_format_int+0x30>
 800906c:	f804 0901 	strb.w	r0, [r4], #-1
 8009070:	e7bb      	b.n	8008fea <_format_int+0x46>
 8009072:	f804 1901 	strb.w	r1, [r4], #-1
 8009076:	e7c8      	b.n	800900a <_format_int+0x66>
 8009078:	4640      	mov	r0, r8
 800907a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800907e:	f7ff ff7b 	bl	8008f78 <_xputch>
 8009082:	e7c9      	b.n	8009018 <_format_int+0x74>
 8009084:	2120      	movs	r1, #32
 8009086:	4640      	mov	r0, r8
 8009088:	f7ff ff76 	bl	8008f78 <_xputch>
 800908c:	3501      	adds	r5, #1
 800908e:	e7c6      	b.n	800901e <_format_int+0x7a>

08009090 <_format_hex>:
 8009090:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009092:	b091      	sub	sp, #68	; 0x44
 8009094:	4606      	mov	r6, r0
 8009096:	6804      	ldr	r4, [r0, #0]
 8009098:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800909c:	bb61      	cbnz	r1, 80090f8 <_format_hex+0x68>
 800909e:	2330      	movs	r3, #48	; 0x30
 80090a0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80090a4:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80090a8:	07e5      	lsls	r5, r4, #31
 80090aa:	d507      	bpl.n	80090bc <_format_hex+0x2c>
 80090ac:	4669      	mov	r1, sp
 80090ae:	2530      	movs	r5, #48	; 0x30
 80090b0:	6870      	ldr	r0, [r6, #4]
 80090b2:	1ad7      	subs	r7, r2, r3
 80090b4:	4287      	cmp	r7, r0
 80090b6:	da01      	bge.n	80090bc <_format_hex+0x2c>
 80090b8:	428b      	cmp	r3, r1
 80090ba:	d831      	bhi.n	8009120 <_format_hex+0x90>
 80090bc:	06a0      	lsls	r0, r4, #26
 80090be:	d507      	bpl.n	80090d0 <_format_hex+0x40>
 80090c0:	4669      	mov	r1, sp
 80090c2:	2530      	movs	r5, #48	; 0x30
 80090c4:	68b0      	ldr	r0, [r6, #8]
 80090c6:	1ad7      	subs	r7, r2, r3
 80090c8:	4287      	cmp	r7, r0
 80090ca:	da01      	bge.n	80090d0 <_format_hex+0x40>
 80090cc:	428b      	cmp	r3, r1
 80090ce:	d82a      	bhi.n	8009126 <_format_hex+0x96>
 80090d0:	0661      	lsls	r1, r4, #25
 80090d2:	d407      	bmi.n	80090e4 <_format_hex+0x54>
 80090d4:	4669      	mov	r1, sp
 80090d6:	2420      	movs	r4, #32
 80090d8:	68b0      	ldr	r0, [r6, #8]
 80090da:	1ad5      	subs	r5, r2, r3
 80090dc:	4285      	cmp	r5, r0
 80090de:	da01      	bge.n	80090e4 <_format_hex+0x54>
 80090e0:	428b      	cmp	r3, r1
 80090e2:	d823      	bhi.n	800912c <_format_hex+0x9c>
 80090e4:	1ad5      	subs	r5, r2, r3
 80090e6:	1c5c      	adds	r4, r3, #1
 80090e8:	ab10      	add	r3, sp, #64	; 0x40
 80090ea:	429c      	cmp	r4, r3
 80090ec:	d321      	bcc.n	8009132 <_format_hex+0xa2>
 80090ee:	68b3      	ldr	r3, [r6, #8]
 80090f0:	429d      	cmp	r5, r3
 80090f2:	db24      	blt.n	800913e <_format_hex+0xae>
 80090f4:	b011      	add	sp, #68	; 0x44
 80090f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090f8:	f014 0f02 	tst.w	r4, #2
 80090fc:	bf0c      	ite	eq
 80090fe:	2757      	moveq	r7, #87	; 0x57
 8009100:	2737      	movne	r7, #55	; 0x37
 8009102:	4613      	mov	r3, r2
 8009104:	466d      	mov	r5, sp
 8009106:	f001 000f 	and.w	r0, r1, #15
 800910a:	2809      	cmp	r0, #9
 800910c:	bf94      	ite	ls
 800910e:	3030      	addls	r0, #48	; 0x30
 8009110:	19c0      	addhi	r0, r0, r7
 8009112:	0909      	lsrs	r1, r1, #4
 8009114:	f803 0901 	strb.w	r0, [r3], #-1
 8009118:	d0c6      	beq.n	80090a8 <_format_hex+0x18>
 800911a:	42ab      	cmp	r3, r5
 800911c:	d1f3      	bne.n	8009106 <_format_hex+0x76>
 800911e:	e7c3      	b.n	80090a8 <_format_hex+0x18>
 8009120:	f803 5901 	strb.w	r5, [r3], #-1
 8009124:	e7c5      	b.n	80090b2 <_format_hex+0x22>
 8009126:	f803 5901 	strb.w	r5, [r3], #-1
 800912a:	e7cc      	b.n	80090c6 <_format_hex+0x36>
 800912c:	f803 4901 	strb.w	r4, [r3], #-1
 8009130:	e7d3      	b.n	80090da <_format_hex+0x4a>
 8009132:	4630      	mov	r0, r6
 8009134:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009138:	f7ff ff1e 	bl	8008f78 <_xputch>
 800913c:	e7d4      	b.n	80090e8 <_format_hex+0x58>
 800913e:	2120      	movs	r1, #32
 8009140:	4630      	mov	r0, r6
 8009142:	f7ff ff19 	bl	8008f78 <_xputch>
 8009146:	3501      	adds	r5, #1
 8009148:	e7d1      	b.n	80090ee <_format_hex+0x5e>
	...

0800914c <_vprintf>:
 800914c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009150:	4614      	mov	r4, r2
 8009152:	2200      	movs	r2, #0
 8009154:	460b      	mov	r3, r1
 8009156:	2700      	movs	r7, #0
 8009158:	b099      	sub	sp, #100	; 0x64
 800915a:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800915e:	ae08      	add	r6, sp, #32
 8009160:	7819      	ldrb	r1, [r3, #0]
 8009162:	b919      	cbnz	r1, 800916c <_vprintf+0x20>
 8009164:	9806      	ldr	r0, [sp, #24]
 8009166:	b019      	add	sp, #100	; 0x64
 8009168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800916c:	2925      	cmp	r1, #37	; 0x25
 800916e:	f103 0501 	add.w	r5, r3, #1
 8009172:	d004      	beq.n	800917e <_vprintf+0x32>
 8009174:	a803      	add	r0, sp, #12
 8009176:	f7ff feff 	bl	8008f78 <_xputch>
 800917a:	462b      	mov	r3, r5
 800917c:	e7f0      	b.n	8009160 <_vprintf+0x14>
 800917e:	2200      	movs	r2, #0
 8009180:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8009184:	9205      	str	r2, [sp, #20]
 8009186:	785a      	ldrb	r2, [r3, #1]
 8009188:	2a30      	cmp	r2, #48	; 0x30
 800918a:	d12b      	bne.n	80091e4 <_vprintf+0x98>
 800918c:	2220      	movs	r2, #32
 800918e:	9203      	str	r2, [sp, #12]
 8009190:	1c9d      	adds	r5, r3, #2
 8009192:	2200      	movs	r2, #0
 8009194:	46ac      	mov	ip, r5
 8009196:	4613      	mov	r3, r2
 8009198:	f04f 0e0a 	mov.w	lr, #10
 800919c:	f89c 1000 	ldrb.w	r1, [ip]
 80091a0:	4665      	mov	r5, ip
 80091a2:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80091a6:	2809      	cmp	r0, #9
 80091a8:	f10c 0c01 	add.w	ip, ip, #1
 80091ac:	d91e      	bls.n	80091ec <_vprintf+0xa0>
 80091ae:	b12a      	cbz	r2, 80091bc <_vprintf+0x70>
 80091b0:	9305      	str	r3, [sp, #20]
 80091b2:	b11b      	cbz	r3, 80091bc <_vprintf+0x70>
 80091b4:	9b03      	ldr	r3, [sp, #12]
 80091b6:	f043 0310 	orr.w	r3, r3, #16
 80091ba:	9303      	str	r3, [sp, #12]
 80091bc:	292e      	cmp	r1, #46	; 0x2e
 80091be:	d124      	bne.n	800920a <_vprintf+0xbe>
 80091c0:	786b      	ldrb	r3, [r5, #1]
 80091c2:	2b2a      	cmp	r3, #42	; 0x2a
 80091c4:	d016      	beq.n	80091f4 <_vprintf+0xa8>
 80091c6:	2100      	movs	r1, #0
 80091c8:	f04f 0c0a 	mov.w	ip, #10
 80091cc:	460a      	mov	r2, r1
 80091ce:	1c68      	adds	r0, r5, #1
 80091d0:	7803      	ldrb	r3, [r0, #0]
 80091d2:	4605      	mov	r5, r0
 80091d4:	3b30      	subs	r3, #48	; 0x30
 80091d6:	2b09      	cmp	r3, #9
 80091d8:	f100 0001 	add.w	r0, r0, #1
 80091dc:	d958      	bls.n	8009290 <_vprintf+0x144>
 80091de:	b181      	cbz	r1, 8009202 <_vprintf+0xb6>
 80091e0:	9204      	str	r2, [sp, #16]
 80091e2:	e00e      	b.n	8009202 <_vprintf+0xb6>
 80091e4:	2a2d      	cmp	r2, #45	; 0x2d
 80091e6:	d1d4      	bne.n	8009192 <_vprintf+0x46>
 80091e8:	2240      	movs	r2, #64	; 0x40
 80091ea:	e7d0      	b.n	800918e <_vprintf+0x42>
 80091ec:	2201      	movs	r2, #1
 80091ee:	fb0e 0303 	mla	r3, lr, r3, r0
 80091f2:	e7d3      	b.n	800919c <_vprintf+0x50>
 80091f4:	f854 3b04 	ldr.w	r3, [r4], #4
 80091f8:	3502      	adds	r5, #2
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	bfb8      	it	lt
 80091fe:	425b      	neglt	r3, r3
 8009200:	9304      	str	r3, [sp, #16]
 8009202:	9b03      	ldr	r3, [sp, #12]
 8009204:	f043 0301 	orr.w	r3, r3, #1
 8009208:	9303      	str	r3, [sp, #12]
 800920a:	782b      	ldrb	r3, [r5, #0]
 800920c:	2b6c      	cmp	r3, #108	; 0x6c
 800920e:	bf04      	itt	eq
 8009210:	9b03      	ldreq	r3, [sp, #12]
 8009212:	3501      	addeq	r5, #1
 8009214:	7829      	ldrb	r1, [r5, #0]
 8009216:	bf04      	itt	eq
 8009218:	f043 0304 	orreq.w	r3, r3, #4
 800921c:	9303      	streq	r3, [sp, #12]
 800921e:	2958      	cmp	r1, #88	; 0x58
 8009220:	f000 8173 	beq.w	800950a <_vprintf+0x3be>
 8009224:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009228:	b2da      	uxtb	r2, r3
 800922a:	2a15      	cmp	r2, #21
 800922c:	d8a2      	bhi.n	8009174 <_vprintf+0x28>
 800922e:	2b15      	cmp	r3, #21
 8009230:	d8a0      	bhi.n	8009174 <_vprintf+0x28>
 8009232:	a201      	add	r2, pc, #4	; (adr r2, 8009238 <_vprintf+0xec>)
 8009234:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009238:	08009299 	stmdaeq	r0, {r0, r3, r4, r7, r9, ip, pc}
 800923c:	080092a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, ip, pc}
 8009240:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009244:	080092db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r9, ip, pc}
 8009248:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 800924c:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009250:	080092a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, ip, pc}
 8009254:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009258:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 800925c:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009260:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009264:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009268:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 800926c:	0800944d 	stmdaeq	r0, {r0, r2, r3, r6, sl, ip, pc}
 8009270:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009274:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009278:	08009473 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, ip, pc}
 800927c:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009280:	080094ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, ip, pc}
 8009284:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8009288:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 800928c:	08009513 	stmdaeq	r0, {r0, r1, r4, r8, sl, ip, pc}
 8009290:	2101      	movs	r1, #1
 8009292:	fb0c 3202 	mla	r2, ip, r2, r3
 8009296:	e79b      	b.n	80091d0 <_vprintf+0x84>
 8009298:	f854 1b04 	ldr.w	r1, [r4], #4
 800929c:	a803      	add	r0, sp, #12
 800929e:	f7ff fe6b 	bl	8008f78 <_xputch>
 80092a2:	3501      	adds	r5, #1
 80092a4:	e769      	b.n	800917a <_vprintf+0x2e>
 80092a6:	9903      	ldr	r1, [sp, #12]
 80092a8:	074a      	lsls	r2, r1, #29
 80092aa:	bf43      	ittte	mi
 80092ac:	3407      	addmi	r4, #7
 80092ae:	f024 0307 	bicmi.w	r3, r4, #7
 80092b2:	461c      	movmi	r4, r3
 80092b4:	f854 2b04 	ldrpl.w	r2, [r4], #4
 80092b8:	bf4a      	itet	mi
 80092ba:	685b      	ldrmi	r3, [r3, #4]
 80092bc:	17d3      	asrpl	r3, r2, #31
 80092be:	f854 2b08 	ldrmi.w	r2, [r4], #8
 80092c2:	2b00      	cmp	r3, #0
 80092c4:	da05      	bge.n	80092d2 <_vprintf+0x186>
 80092c6:	f041 0108 	orr.w	r1, r1, #8
 80092ca:	4252      	negs	r2, r2
 80092cc:	9103      	str	r1, [sp, #12]
 80092ce:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80092d2:	a803      	add	r0, sp, #12
 80092d4:	f7ff fe66 	bl	8008fa4 <_format_int>
 80092d8:	e7e3      	b.n	80092a2 <_vprintf+0x156>
 80092da:	3407      	adds	r4, #7
 80092dc:	f024 0407 	bic.w	r4, r4, #7
 80092e0:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80092e4:	f7fe fc04 	bl	8007af0 <__aeabi_d2f>
 80092e8:	9b03      	ldr	r3, [sp, #12]
 80092ea:	4639      	mov	r1, r7
 80092ec:	07db      	lsls	r3, r3, #31
 80092ee:	bf54      	ite	pl
 80092f0:	f04f 0a06 	movpl.w	sl, #6
 80092f4:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80092f8:	4681      	mov	r9, r0
 80092fa:	f7fe fda5 	bl	8007e48 <__aeabi_fcmplt>
 80092fe:	2800      	cmp	r0, #0
 8009300:	d069      	beq.n	80093d6 <_vprintf+0x28a>
 8009302:	232d      	movs	r3, #45	; 0x2d
 8009304:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8009308:	f88d 3020 	strb.w	r3, [sp, #32]
 800930c:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009310:	4648      	mov	r0, r9
 8009312:	f7fe fdc1 	bl	8007e98 <__aeabi_f2iz>
 8009316:	4659      	mov	r1, fp
 8009318:	2200      	movs	r2, #0
 800931a:	4680      	mov	r8, r0
 800931c:	f7ff fdf2 	bl	8008f04 <_itostr>
 8009320:	eb0b 0200 	add.w	r2, fp, r0
 8009324:	e9cd 2000 	strd	r2, r0, [sp]
 8009328:	4640      	mov	r0, r8
 800932a:	f7fe fceb 	bl	8007d04 <__aeabi_i2f>
 800932e:	4601      	mov	r1, r0
 8009330:	4648      	mov	r0, r9
 8009332:	f7fe fc31 	bl	8007b98 <__aeabi_fsub>
 8009336:	222e      	movs	r2, #46	; 0x2e
 8009338:	4601      	mov	r1, r0
 800933a:	200a      	movs	r0, #10
 800933c:	9b00      	ldr	r3, [sp, #0]
 800933e:	f10a 0901 	add.w	r9, sl, #1
 8009342:	f103 0801 	add.w	r8, r3, #1
 8009346:	9b01      	ldr	r3, [sp, #4]
 8009348:	f80b 2003 	strb.w	r2, [fp, r3]
 800934c:	4603      	mov	r3, r0
 800934e:	f1ba 0f00 	cmp.w	sl, #0
 8009352:	dc42      	bgt.n	80093da <_vprintf+0x28e>
 8009354:	9100      	str	r1, [sp, #0]
 8009356:	f7fe fcd5 	bl	8007d04 <__aeabi_i2f>
 800935a:	9900      	ldr	r1, [sp, #0]
 800935c:	f7ff f902 	bl	8008564 <__aeabi_fmul>
 8009360:	f7fe fd9a 	bl	8007e98 <__aeabi_f2iz>
 8009364:	4641      	mov	r1, r8
 8009366:	464a      	mov	r2, r9
 8009368:	f7ff fdcc 	bl	8008f04 <_itostr>
 800936c:	4480      	add	r8, r0
 800936e:	eba8 0806 	sub.w	r8, r8, r6
 8009372:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 8009376:	5c73      	ldrb	r3, [r6, r1]
 8009378:	1872      	adds	r2, r6, r1
 800937a:	2b34      	cmp	r3, #52	; 0x34
 800937c:	d910      	bls.n	80093a0 <_vprintf+0x254>
 800937e:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8009382:	1e53      	subs	r3, r2, #1
 8009384:	282e      	cmp	r0, #46	; 0x2e
 8009386:	d02f      	beq.n	80093e8 <_vprintf+0x29c>
 8009388:	469c      	mov	ip, r3
 800938a:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800938e:	4663      	mov	r3, ip
 8009390:	f81c 0901 	ldrb.w	r0, [ip], #-1
 8009394:	2839      	cmp	r0, #57	; 0x39
 8009396:	d024      	beq.n	80093e2 <_vprintf+0x296>
 8009398:	282e      	cmp	r0, #46	; 0x2e
 800939a:	d025      	beq.n	80093e8 <_vprintf+0x29c>
 800939c:	3001      	adds	r0, #1
 800939e:	7018      	strb	r0, [r3, #0]
 80093a0:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80093a4:	446b      	add	r3, sp
 80093a6:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80093aa:	2b2e      	cmp	r3, #46	; 0x2e
 80093ac:	bf08      	it	eq
 80093ae:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 80093b2:	4688      	mov	r8, r1
 80093b4:	4689      	mov	r9, r1
 80093b6:	9b05      	ldr	r3, [sp, #20]
 80093b8:	454b      	cmp	r3, r9
 80093ba:	dc40      	bgt.n	800943e <_vprintf+0x2f2>
 80093bc:	46b1      	mov	r9, r6
 80093be:	f1b8 0f00 	cmp.w	r8, #0
 80093c2:	f77f af6e 	ble.w	80092a2 <_vprintf+0x156>
 80093c6:	f819 1b01 	ldrb.w	r1, [r9], #1
 80093ca:	a803      	add	r0, sp, #12
 80093cc:	f7ff fdd4 	bl	8008f78 <_xputch>
 80093d0:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80093d4:	e7f3      	b.n	80093be <_vprintf+0x272>
 80093d6:	46b3      	mov	fp, r6
 80093d8:	e79a      	b.n	8009310 <_vprintf+0x1c4>
 80093da:	4358      	muls	r0, r3
 80093dc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80093e0:	e7b5      	b.n	800934e <_vprintf+0x202>
 80093e2:	f88c e001 	strb.w	lr, [ip, #1]
 80093e6:	e7d2      	b.n	800938e <_vprintf+0x242>
 80093e8:	f04f 0c30 	mov.w	ip, #48	; 0x30
 80093ec:	3b01      	subs	r3, #1
 80093ee:	7818      	ldrb	r0, [r3, #0]
 80093f0:	2839      	cmp	r0, #57	; 0x39
 80093f2:	d112      	bne.n	800941a <_vprintf+0x2ce>
 80093f4:	42b3      	cmp	r3, r6
 80093f6:	d20d      	bcs.n	8009414 <_vprintf+0x2c8>
 80093f8:	1c98      	adds	r0, r3, #2
 80093fa:	1c59      	adds	r1, r3, #1
 80093fc:	4281      	cmp	r1, r0
 80093fe:	eba2 0203 	sub.w	r2, r2, r3
 8009402:	d913      	bls.n	800942c <_vprintf+0x2e0>
 8009404:	3201      	adds	r2, #1
 8009406:	441a      	add	r2, r3
 8009408:	428a      	cmp	r2, r1
 800940a:	d10b      	bne.n	8009424 <_vprintf+0x2d8>
 800940c:	2231      	movs	r2, #49	; 0x31
 800940e:	4641      	mov	r1, r8
 8009410:	705a      	strb	r2, [r3, #1]
 8009412:	e7c5      	b.n	80093a0 <_vprintf+0x254>
 8009414:	f803 c901 	strb.w	ip, [r3], #-1
 8009418:	e7e9      	b.n	80093ee <_vprintf+0x2a2>
 800941a:	42b3      	cmp	r3, r6
 800941c:	d3ec      	bcc.n	80093f8 <_vprintf+0x2ac>
 800941e:	282d      	cmp	r0, #45	; 0x2d
 8009420:	d0ea      	beq.n	80093f8 <_vprintf+0x2ac>
 8009422:	e7bb      	b.n	800939c <_vprintf+0x250>
 8009424:	f811 0b01 	ldrb.w	r0, [r1], #1
 8009428:	7008      	strb	r0, [r1, #0]
 800942a:	e7ed      	b.n	8009408 <_vprintf+0x2bc>
 800942c:	4411      	add	r1, r2
 800942e:	4402      	add	r2, r0
 8009430:	4290      	cmp	r0, r2
 8009432:	d0eb      	beq.n	800940c <_vprintf+0x2c0>
 8009434:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8009438:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800943c:	e7f8      	b.n	8009430 <_vprintf+0x2e4>
 800943e:	2120      	movs	r1, #32
 8009440:	a803      	add	r0, sp, #12
 8009442:	f7ff fd99 	bl	8008f78 <_xputch>
 8009446:	f109 0901 	add.w	r9, r9, #1
 800944a:	e7b4      	b.n	80093b6 <_vprintf+0x26a>
 800944c:	2308      	movs	r3, #8
 800944e:	9305      	str	r3, [sp, #20]
 8009450:	2320      	movs	r3, #32
 8009452:	2130      	movs	r1, #48	; 0x30
 8009454:	f854 8b04 	ldr.w	r8, [r4], #4
 8009458:	a803      	add	r0, sp, #12
 800945a:	9303      	str	r3, [sp, #12]
 800945c:	f7ff fd8c 	bl	8008f78 <_xputch>
 8009460:	2178      	movs	r1, #120	; 0x78
 8009462:	a803      	add	r0, sp, #12
 8009464:	f7ff fd88 	bl	8008f78 <_xputch>
 8009468:	4641      	mov	r1, r8
 800946a:	a803      	add	r0, sp, #12
 800946c:	f7ff fe10 	bl	8009090 <_format_hex>
 8009470:	e717      	b.n	80092a2 <_vprintf+0x156>
 8009472:	f04f 0800 	mov.w	r8, #0
 8009476:	f854 9b04 	ldr.w	r9, [r4], #4
 800947a:	f819 3008 	ldrb.w	r3, [r9, r8]
 800947e:	b993      	cbnz	r3, 80094a6 <_vprintf+0x35a>
 8009480:	9b03      	ldr	r3, [sp, #12]
 8009482:	07d9      	lsls	r1, r3, #31
 8009484:	d503      	bpl.n	800948e <_vprintf+0x342>
 8009486:	9b04      	ldr	r3, [sp, #16]
 8009488:	4598      	cmp	r8, r3
 800948a:	bfa8      	it	ge
 800948c:	4698      	movge	r8, r3
 800948e:	9b03      	ldr	r3, [sp, #12]
 8009490:	f108 0a01 	add.w	sl, r8, #1
 8009494:	065a      	lsls	r2, r3, #25
 8009496:	d403      	bmi.n	80094a0 <_vprintf+0x354>
 8009498:	9b05      	ldr	r3, [sp, #20]
 800949a:	4598      	cmp	r8, r3
 800949c:	db06      	blt.n	80094ac <_vprintf+0x360>
 800949e:	46d0      	mov	r8, sl
 80094a0:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80094a4:	e00e      	b.n	80094c4 <_vprintf+0x378>
 80094a6:	f108 0801 	add.w	r8, r8, #1
 80094aa:	e7e6      	b.n	800947a <_vprintf+0x32e>
 80094ac:	2120      	movs	r1, #32
 80094ae:	a803      	add	r0, sp, #12
 80094b0:	f7ff fd62 	bl	8008f78 <_xputch>
 80094b4:	46d0      	mov	r8, sl
 80094b6:	e7ea      	b.n	800948e <_vprintf+0x342>
 80094b8:	a803      	add	r0, sp, #12
 80094ba:	f7ff fd5d 	bl	8008f78 <_xputch>
 80094be:	9b04      	ldr	r3, [sp, #16]
 80094c0:	3b01      	subs	r3, #1
 80094c2:	9304      	str	r3, [sp, #16]
 80094c4:	9b03      	ldr	r3, [sp, #12]
 80094c6:	07db      	lsls	r3, r3, #31
 80094c8:	d501      	bpl.n	80094ce <_vprintf+0x382>
 80094ca:	9b04      	ldr	r3, [sp, #16]
 80094cc:	b11b      	cbz	r3, 80094d6 <_vprintf+0x38a>
 80094ce:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80094d2:	2900      	cmp	r1, #0
 80094d4:	d1f0      	bne.n	80094b8 <_vprintf+0x36c>
 80094d6:	9b05      	ldr	r3, [sp, #20]
 80094d8:	4543      	cmp	r3, r8
 80094da:	f77f aee2 	ble.w	80092a2 <_vprintf+0x156>
 80094de:	2120      	movs	r1, #32
 80094e0:	a803      	add	r0, sp, #12
 80094e2:	f7ff fd49 	bl	8008f78 <_xputch>
 80094e6:	f108 0801 	add.w	r8, r8, #1
 80094ea:	e7f4      	b.n	80094d6 <_vprintf+0x38a>
 80094ec:	9b03      	ldr	r3, [sp, #12]
 80094ee:	f013 0304 	ands.w	r3, r3, #4
 80094f2:	bf1d      	ittte	ne
 80094f4:	3407      	addne	r4, #7
 80094f6:	f024 0307 	bicne.w	r3, r4, #7
 80094fa:	461c      	movne	r4, r3
 80094fc:	f854 2b04 	ldreq.w	r2, [r4], #4
 8009500:	bf1c      	itt	ne
 8009502:	f854 2b08 	ldrne.w	r2, [r4], #8
 8009506:	685b      	ldrne	r3, [r3, #4]
 8009508:	e6e3      	b.n	80092d2 <_vprintf+0x186>
 800950a:	9b03      	ldr	r3, [sp, #12]
 800950c:	f043 0302 	orr.w	r3, r3, #2
 8009510:	9303      	str	r3, [sp, #12]
 8009512:	f854 1b04 	ldr.w	r1, [r4], #4
 8009516:	e7a8      	b.n	800946a <_vprintf+0x31e>

08009518 <printf>:
 8009518:	b40f      	push	{r0, r1, r2, r3}
 800951a:	b507      	push	{r0, r1, r2, lr}
 800951c:	aa04      	add	r2, sp, #16
 800951e:	f852 1b04 	ldr.w	r1, [r2], #4
 8009522:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8009526:	9201      	str	r2, [sp, #4]
 8009528:	f7ff fe10 	bl	800914c <_vprintf>
 800952c:	b003      	add	sp, #12
 800952e:	f85d eb04 	ldr.w	lr, [sp], #4
 8009532:	b004      	add	sp, #16
 8009534:	4770      	bx	lr
	...

08009538 <sprintf>:
 8009538:	b40e      	push	{r1, r2, r3}
 800953a:	b517      	push	{r0, r1, r2, r4, lr}
 800953c:	4c09      	ldr	r4, [pc, #36]	; (8009564 <sprintf+0x2c>)
 800953e:	aa05      	add	r2, sp, #20
 8009540:	f852 1b04 	ldr.w	r1, [r2], #4
 8009544:	6020      	str	r0, [r4, #0]
 8009546:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800954a:	9201      	str	r2, [sp, #4]
 800954c:	f7ff fdfe 	bl	800914c <_vprintf>
 8009550:	2300      	movs	r3, #0
 8009552:	6822      	ldr	r2, [r4, #0]
 8009554:	6023      	str	r3, [r4, #0]
 8009556:	7013      	strb	r3, [r2, #0]
 8009558:	b003      	add	sp, #12
 800955a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800955e:	b003      	add	sp, #12
 8009560:	4770      	bx	lr
 8009562:	bf00      	nop
 8009564:	200000e8 	andcs	r0, r0, r8, ror #1

08009568 <snprintf>:
 8009568:	b40c      	push	{r2, r3}
 800956a:	460b      	mov	r3, r1
 800956c:	b513      	push	{r0, r1, r4, lr}
 800956e:	4c09      	ldr	r4, [pc, #36]	; (8009594 <snprintf+0x2c>)
 8009570:	aa04      	add	r2, sp, #16
 8009572:	f852 1b04 	ldr.w	r1, [r2], #4
 8009576:	6020      	str	r0, [r4, #0]
 8009578:	4618      	mov	r0, r3
 800957a:	9201      	str	r2, [sp, #4]
 800957c:	f7ff fde6 	bl	800914c <_vprintf>
 8009580:	2300      	movs	r3, #0
 8009582:	6822      	ldr	r2, [r4, #0]
 8009584:	6023      	str	r3, [r4, #0]
 8009586:	7013      	strb	r3, [r2, #0]
 8009588:	b002      	add	sp, #8
 800958a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800958e:	b002      	add	sp, #8
 8009590:	4770      	bx	lr
 8009592:	bf00      	nop
 8009594:	200000e8 	andcs	r0, r0, r8, ror #1

08009598 <vsnprintf>:
 8009598:	b538      	push	{r3, r4, r5, lr}
 800959a:	4605      	mov	r5, r0
 800959c:	4c05      	ldr	r4, [pc, #20]	; (80095b4 <vsnprintf+0x1c>)
 800959e:	4608      	mov	r0, r1
 80095a0:	4611      	mov	r1, r2
 80095a2:	461a      	mov	r2, r3
 80095a4:	6025      	str	r5, [r4, #0]
 80095a6:	f7ff fdd1 	bl	800914c <_vprintf>
 80095aa:	2300      	movs	r3, #0
 80095ac:	6822      	ldr	r2, [r4, #0]
 80095ae:	6023      	str	r3, [r4, #0]
 80095b0:	7013      	strb	r3, [r2, #0]
 80095b2:	bd38      	pop	{r3, r4, r5, pc}
 80095b4:	200000e8 	andcs	r0, r0, r8, ror #1

080095b8 <e131::universe_to_multicast_ip(unsigned short)>:
 80095b8:	b513      	push	{r0, r1, r4, lr}
 80095ba:	4604      	mov	r4, r0
 80095bc:	a901      	add	r1, sp, #4
 80095be:	4806      	ldr	r0, [pc, #24]	; (80095d8 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 80095c0:	f008 fd50 	bl	8012064 <inet_aton>
 80095c4:	9801      	ldr	r0, [sp, #4]
 80095c6:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 80095ca:	0224      	lsls	r4, r4, #8
 80095cc:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80095d0:	4320      	orrs	r0, r4
 80095d2:	b002      	add	sp, #8
 80095d4:	bd10      	pop	{r4, pc}
 80095d6:	bf00      	nop
 80095d8:	08014439 	stmdaeq	r1, {r0, r3, r4, r5, sl, lr}

080095dc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 80095dc:	f240 6304 	movw	r3, #1540	; 0x604
 80095e0:	fb03 0101 	mla	r1, r3, r1, r0
 80095e4:	2300      	movs	r3, #0
 80095e6:	b510      	push	{r4, lr}
 80095e8:	4293      	cmp	r3, r2
 80095ea:	d00a      	beq.n	8009602 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 80095ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 80095f0:	3301      	adds	r3, #1
 80095f2:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 80095f6:	42a0      	cmp	r0, r4
 80095f8:	bf38      	it	cc
 80095fa:	4620      	movcc	r0, r4
 80095fc:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 8009600:	e7f2      	b.n	80095e8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 8009602:	bd10      	pop	{r4, pc}

08009604 <memset.constprop.0.isra.0>:
 8009604:	2300      	movs	r3, #0
 8009606:	4401      	add	r1, r0
 8009608:	4288      	cmp	r0, r1
 800960a:	d002      	beq.n	8009612 <memset.constprop.0.isra.0+0xe>
 800960c:	f800 3b01 	strb.w	r3, [r0], #1
 8009610:	e7fa      	b.n	8009608 <memset.constprop.0.isra.0+0x4>
 8009612:	4770      	bx	lr

08009614 <memcpy.isra.0>:
 8009614:	3801      	subs	r0, #1
 8009616:	440a      	add	r2, r1
 8009618:	4291      	cmp	r1, r2
 800961a:	d004      	beq.n	8009626 <memcpy.isra.0+0x12>
 800961c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009620:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009624:	e7f8      	b.n	8009618 <memcpy.isra.0+0x4>
 8009626:	4770      	bx	lr

08009628 <lightset::Data::Get()>:
 8009628:	4b03      	ldr	r3, [pc, #12]	; (8009638 <lightset::Data::Get()+0x10>)
 800962a:	4804      	ldr	r0, [pc, #16]	; (800963c <lightset::Data::Get()+0x14>)
 800962c:	681a      	ldr	r2, [r3, #0]
 800962e:	07d2      	lsls	r2, r2, #31
 8009630:	bf5c      	itt	pl
 8009632:	2201      	movpl	r2, #1
 8009634:	601a      	strpl	r2, [r3, #0]
 8009636:	4770      	bx	lr
 8009638:	200000ec 	andcs	r0, r0, ip, ror #1
 800963c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009640 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8009640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009644:	4615      	mov	r5, r2
 8009646:	460f      	mov	r7, r1
 8009648:	4604      	mov	r4, r0
 800964a:	f7ff ffed 	bl	8009628 <lightset::Data::Get()>
 800964e:	4606      	mov	r6, r0
 8009650:	f240 6004 	movw	r0, #1540	; 0x604
 8009654:	4344      	muls	r4, r0
 8009656:	eb06 0804 	add.w	r8, r6, r4
 800965a:	462a      	mov	r2, r5
 800965c:	4639      	mov	r1, r7
 800965e:	4640      	mov	r0, r8
 8009660:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009664:	f7ff ffd6 	bl	8009614 <memcpy.isra.0>
 8009668:	462a      	mov	r2, r5
 800966a:	4639      	mov	r1, r7
 800966c:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8009670:	1930      	adds	r0, r6, r4
 8009672:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009676:	f7ff bfcd 	b.w	8009614 <memcpy.isra.0>

0800967a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800967a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800967e:	4680      	mov	r8, r0
 8009680:	f240 6404 	movw	r4, #1540	; 0x604
 8009684:	4615      	mov	r5, r2
 8009686:	460f      	mov	r7, r1
 8009688:	4699      	mov	r9, r3
 800968a:	f7ff ffcd 	bl	8009628 <lightset::Data::Get()>
 800968e:	fb04 f408 	mul.w	r4, r4, r8
 8009692:	eb00 0a04 	add.w	sl, r0, r4
 8009696:	4606      	mov	r6, r0
 8009698:	462a      	mov	r2, r5
 800969a:	4639      	mov	r1, r7
 800969c:	4650      	mov	r0, sl
 800969e:	f7ff ffb9 	bl	8009614 <memcpy.isra.0>
 80096a2:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 80096a6:	f1b9 0f00 	cmp.w	r9, #0
 80096aa:	d106      	bne.n	80096ba <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 80096ac:	462a      	mov	r2, r5
 80096ae:	4641      	mov	r1, r8
 80096b0:	4630      	mov	r0, r6
 80096b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80096b6:	f7ff bf91 	b.w	80095dc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 80096ba:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80096be:	462a      	mov	r2, r5
 80096c0:	4639      	mov	r1, r7
 80096c2:	1930      	adds	r0, r6, r4
 80096c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80096c8:	f7ff bfa4 	b.w	8009614 <memcpy.isra.0>

080096cc <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80096cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80096d0:	4616      	mov	r6, r2
 80096d2:	4699      	mov	r9, r3
 80096d4:	4680      	mov	r8, r0
 80096d6:	460f      	mov	r7, r1
 80096d8:	f7ff ffa6 	bl	8009628 <lightset::Data::Get()>
 80096dc:	f240 6404 	movw	r4, #1540	; 0x604
 80096e0:	4605      	mov	r5, r0
 80096e2:	fb04 f408 	mul.w	r4, r4, r8
 80096e6:	f504 7000 	add.w	r0, r4, #512	; 0x200
 80096ea:	4632      	mov	r2, r6
 80096ec:	4639      	mov	r1, r7
 80096ee:	4428      	add	r0, r5
 80096f0:	f7ff ff90 	bl	8009614 <memcpy.isra.0>
 80096f4:	192b      	adds	r3, r5, r4
 80096f6:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 80096fa:	f1b9 0f00 	cmp.w	r9, #0
 80096fe:	d106      	bne.n	800970e <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009700:	4632      	mov	r2, r6
 8009702:	4641      	mov	r1, r8
 8009704:	4628      	mov	r0, r5
 8009706:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800970a:	f7ff bf67 	b.w	80095dc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800970e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009712:	4632      	mov	r2, r6
 8009714:	4639      	mov	r1, r7
 8009716:	1928      	adds	r0, r5, r4
 8009718:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800971c:	f7ff bf7a 	b.w	8009614 <memcpy.isra.0>

08009720 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 8009720:	f240 6304 	movw	r3, #1540	; 0x604
 8009724:	b470      	push	{r4, r5, r6}
 8009726:	4605      	mov	r5, r0
 8009728:	4608      	mov	r0, r1
 800972a:	4353      	muls	r3, r2
 800972c:	4611      	mov	r1, r2
 800972e:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 8009732:	18ea      	adds	r2, r5, r3
 8009734:	6803      	ldr	r3, [r0, #0]
 8009736:	691e      	ldr	r6, [r3, #16]
 8009738:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 800973c:	46b4      	mov	ip, r6
 800973e:	192a      	adds	r2, r5, r4
 8009740:	bc70      	pop	{r4, r5, r6}
 8009742:	4760      	bx	ip

08009744 <E131Bridge::Start()>:
 8009744:	6943      	ldr	r3, [r0, #20]
 8009746:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009748:	4604      	mov	r4, r0
 800974a:	b35b      	cbz	r3, 80097a4 <E131Bridge::Start()+0x60>
 800974c:	6983      	ldr	r3, [r0, #24]
 800974e:	b9cb      	cbnz	r3, 8009784 <E131Bridge::Start()+0x40>
 8009750:	a901      	add	r1, sp, #4
 8009752:	4818      	ldr	r0, [pc, #96]	; (80097b4 <E131Bridge::Start()+0x70>)
 8009754:	f008 fc86 	bl	8012064 <inet_aton>
 8009758:	9b01      	ldr	r3, [sp, #4]
 800975a:	f240 207e 	movw	r0, #638	; 0x27e
 800975e:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8009762:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8009766:	6223      	str	r3, [r4, #32]
 8009768:	f008 fc78 	bl	801205c <operator new(unsigned int)>
 800976c:	61a0      	str	r0, [r4, #24]
 800976e:	4620      	mov	r0, r4
 8009770:	f000 fd8e 	bl	800a290 <E131Bridge::FillDataPacket()>
 8009774:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009778:	f008 fc70 	bl	801205c <operator new(unsigned int)>
 800977c:	61e0      	str	r0, [r4, #28]
 800977e:	4620      	mov	r0, r4
 8009780:	f000 fcdc 	bl	800a13c <E131Bridge::FillDiscoveryPacket()>
 8009784:	2500      	movs	r5, #0
 8009786:	270c      	movs	r7, #12
 8009788:	f204 6622 	addw	r6, r4, #1570	; 0x622
 800978c:	fb07 f305 	mul.w	r3, r7, r5
 8009790:	5cf3      	ldrb	r3, [r6, r3]
 8009792:	b123      	cbz	r3, 800979e <E131Bridge::Start()+0x5a>
 8009794:	6960      	ldr	r0, [r4, #20]
 8009796:	4629      	mov	r1, r5
 8009798:	6803      	ldr	r3, [r0, #0]
 800979a:	689b      	ldr	r3, [r3, #8]
 800979c:	4798      	blx	r3
 800979e:	3501      	adds	r5, #1
 80097a0:	2d04      	cmp	r5, #4
 80097a2:	d1f3      	bne.n	800978c <E131Bridge::Start()+0x48>
 80097a4:	2102      	movs	r1, #2
 80097a6:	4b04      	ldr	r3, [pc, #16]	; (80097b8 <E131Bridge::Start()+0x74>)
 80097a8:	6818      	ldr	r0, [r3, #0]
 80097aa:	b003      	add	sp, #12
 80097ac:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80097b0:	f008 bb6e 	b.w	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 80097b4:	08014439 	stmdaeq	r1, {r0, r3, r4, r5, sl, lr}
 80097b8:	2000a9ac 	andcs	sl, r0, ip, lsr #19

080097bc <E131Bridge::Stop()>:
 80097bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097c0:	2500      	movs	r5, #0
 80097c2:	2301      	movs	r3, #1
 80097c4:	4604      	mov	r4, r0
 80097c6:	f240 6804 	movw	r8, #1540	; 0x604
 80097ca:	462e      	mov	r6, r5
 80097cc:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 80097d0:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 80097d4:	6860      	ldr	r0, [r4, #4]
 80097d6:	b118      	cbz	r0, 80097e0 <E131Bridge::Stop()+0x24>
 80097d8:	6803      	ldr	r3, [r0, #0]
 80097da:	4629      	mov	r1, r5
 80097dc:	68db      	ldr	r3, [r3, #12]
 80097de:	4798      	blx	r3
 80097e0:	f7ff ff22 	bl	8009628 <lightset::Data::Get()>
 80097e4:	2344      	movs	r3, #68	; 0x44
 80097e6:	fb08 0005 	mla	r0, r8, r5, r0
 80097ea:	436b      	muls	r3, r5
 80097ec:	3501      	adds	r5, #1
 80097ee:	2d04      	cmp	r5, #4
 80097f0:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 80097f4:	54fe      	strb	r6, [r7, r3]
 80097f6:	d1ed      	bne.n	80097d4 <E131Bridge::Stop()+0x18>
 80097f8:	6963      	ldr	r3, [r4, #20]
 80097fa:	b17b      	cbz	r3, 800981c <E131Bridge::Stop()+0x60>
 80097fc:	2500      	movs	r5, #0
 80097fe:	270c      	movs	r7, #12
 8009800:	f204 6622 	addw	r6, r4, #1570	; 0x622
 8009804:	fb07 f305 	mul.w	r3, r7, r5
 8009808:	5cf3      	ldrb	r3, [r6, r3]
 800980a:	b123      	cbz	r3, 8009816 <E131Bridge::Stop()+0x5a>
 800980c:	6960      	ldr	r0, [r4, #20]
 800980e:	4629      	mov	r1, r5
 8009810:	6803      	ldr	r3, [r0, #0]
 8009812:	68db      	ldr	r3, [r3, #12]
 8009814:	4798      	blx	r3
 8009816:	3501      	adds	r5, #1
 8009818:	2d04      	cmp	r5, #4
 800981a:	d1f3      	bne.n	8009804 <E131Bridge::Stop()+0x48>
 800981c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009820:	4b02      	ldr	r3, [pc, #8]	; (800982c <E131Bridge::Stop()+0x70>)
 8009822:	2100      	movs	r1, #0
 8009824:	6818      	ldr	r0, [r3, #0]
 8009826:	f008 bb33 	b.w	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800982a:	bf00      	nop
 800982c:	2000a9ac 	andcs	sl, r0, ip, lsr #19

08009830 <E131Bridge::SetSourceName(char const*)>:
 8009830:	223f      	movs	r2, #63	; 0x3f
 8009832:	b510      	push	{r4, lr}
 8009834:	f100 0334 	add.w	r3, r0, #52	; 0x34
 8009838:	3901      	subs	r1, #1
 800983a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800983e:	b92c      	cbnz	r4, 800984c <E131Bridge::SetSourceName(char const*)+0x1c>
 8009840:	441a      	add	r2, r3
 8009842:	4293      	cmp	r3, r2
 8009844:	d006      	beq.n	8009854 <E131Bridge::SetSourceName(char const*)+0x24>
 8009846:	f803 4b01 	strb.w	r4, [r3], #1
 800984a:	e7fa      	b.n	8009842 <E131Bridge::SetSourceName(char const*)+0x12>
 800984c:	3a01      	subs	r2, #1
 800984e:	f803 4b01 	strb.w	r4, [r3], #1
 8009852:	d1f2      	bne.n	800983a <E131Bridge::SetSourceName(char const*)+0xa>
 8009854:	2300      	movs	r3, #0
 8009856:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 800985a:	bd10      	pop	{r4, pc}

0800985c <E131Bridge::E131Bridge()>:
 800985c:	2300      	movs	r3, #0
 800985e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009862:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009864:	e9c0 2300 	strd	r2, r3, [r0]
 8009868:	2201      	movs	r2, #1
 800986a:	4604      	mov	r4, r0
 800986c:	2764      	movs	r7, #100	; 0x64
 800986e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009872:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009876:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800987a:	6743      	str	r3, [r0, #116]	; 0x74
 800987c:	4b1e      	ldr	r3, [pc, #120]	; (80098f8 <E131Bridge::E131Bridge()+0x9c>)
 800987e:	7202      	strb	r2, [r0, #8]
 8009880:	b093      	sub	sp, #76	; 0x4c
 8009882:	6018      	str	r0, [r3, #0]
 8009884:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 8009888:	f500 62c4 	add.w	r2, r0, #1568	; 0x620
 800988c:	f500 66ca 	add.w	r6, r0, #1616	; 0x650
 8009890:	4628      	mov	r0, r5
 8009892:	2144      	movs	r1, #68	; 0x44
 8009894:	f7ff feb6 	bl	8009604 <memset.constprop.0.isra.0>
 8009898:	4610      	mov	r0, r2
 800989a:	210c      	movs	r1, #12
 800989c:	f7ff feb2 	bl	8009604 <memset.constprop.0.isra.0>
 80098a0:	320c      	adds	r2, #12
 80098a2:	f802 7c03 	strb.w	r7, [r2, #-3]
 80098a6:	42b2      	cmp	r2, r6
 80098a8:	f105 0544 	add.w	r5, r5, #68	; 0x44
 80098ac:	d1f0      	bne.n	8009890 <E131Bridge::E131Bridge()+0x34>
 80098ae:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 80098b2:	211c      	movs	r1, #28
 80098b4:	f7ff fea6 	bl	8009604 <memset.constprop.0.isra.0>
 80098b8:	2301      	movs	r3, #1
 80098ba:	4d10      	ldr	r5, [pc, #64]	; (80098fc <E131Bridge::E131Bridge()+0xa0>)
 80098bc:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 80098c0:	4a0f      	ldr	r2, [pc, #60]	; (8009900 <E131Bridge::E131Bridge()+0xa4>)
 80098c2:	682b      	ldr	r3, [r5, #0]
 80098c4:	2140      	movs	r1, #64	; 0x40
 80098c6:	331c      	adds	r3, #28
 80098c8:	9200      	str	r2, [sp, #0]
 80098ca:	a802      	add	r0, sp, #8
 80098cc:	4a0d      	ldr	r2, [pc, #52]	; (8009904 <E131Bridge::E131Bridge()+0xa8>)
 80098ce:	f7ff fe4b 	bl	8009568 <snprintf>
 80098d2:	4620      	mov	r0, r4
 80098d4:	a902      	add	r1, sp, #8
 80098d6:	f7ff ffab 	bl	8009830 <E131Bridge::SetSourceName(char const*)>
 80098da:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 80098de:	6828      	ldr	r0, [r5, #0]
 80098e0:	f006 f92e 	bl	800fb40 <Network::Begin(unsigned short)>
 80098e4:	4621      	mov	r1, r4
 80098e6:	4b08      	ldr	r3, [pc, #32]	; (8009908 <E131Bridge::E131Bridge()+0xac>)
 80098e8:	f841 0b24 	str.w	r0, [r1], #36
 80098ec:	6818      	ldr	r0, [r3, #0]
 80098ee:	f008 fb57 	bl	8011fa0 <Hardware::GetUuid(unsigned char*)>
 80098f2:	4620      	mov	r0, r4
 80098f4:	b013      	add	sp, #76	; 0x4c
 80098f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098f8:	20001900 	andcs	r1, r0, r0, lsl #18
 80098fc:	2000a288 	andcs	sl, r0, r8, lsl #5
 8009900:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 8009904:	08014445 	stmdaeq	r1, {r0, r2, r6, sl, lr}
 8009908:	2000a9b0 			; <UNDEFINED> instruction: 0x2000a9b0

0800990c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800990c:	b570      	push	{r4, r5, r6, lr}
 800990e:	4604      	mov	r4, r0
 8009910:	2300      	movs	r3, #0
 8009912:	2544      	movs	r5, #68	; 0x44
 8009914:	4610      	mov	r0, r2
 8009916:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 800991a:	4299      	cmp	r1, r3
 800991c:	d004      	beq.n	8009928 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800991e:	fb05 f603 	mul.w	r6, r5, r3
 8009922:	5b96      	ldrh	r6, [r2, r6]
 8009924:	4286      	cmp	r6, r0
 8009926:	d00e      	beq.n	8009946 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 8009928:	3301      	adds	r3, #1
 800992a:	2b04      	cmp	r3, #4
 800992c:	d1f5      	bne.n	800991a <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800992e:	4b06      	ldr	r3, [pc, #24]	; (8009948 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 8009930:	6824      	ldr	r4, [r4, #0]
 8009932:	681d      	ldr	r5, [r3, #0]
 8009934:	f7ff fe40 	bl	80095b8 <e131::universe_to_multicast_ip(unsigned short)>
 8009938:	4621      	mov	r1, r4
 800993a:	4602      	mov	r2, r0
 800993c:	4628      	mov	r0, r5
 800993e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009942:	f006 b911 	b.w	800fb68 <Network::LeaveGroup(int, unsigned int)>
 8009946:	bd70      	pop	{r4, r5, r6, pc}
 8009948:	2000a288 	andcs	sl, r0, r8, lsl #5

0800994c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800994c:	b570      	push	{r4, r5, r6, lr}
 800994e:	4604      	mov	r4, r0
 8009950:	461d      	mov	r5, r3
 8009952:	b191      	cbz	r1, 800997a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 8009954:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009958:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800995c:	b99a      	cbnz	r2, 8009986 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800995e:	4b0e      	ldr	r3, [pc, #56]	; (8009998 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 8009960:	8035      	strh	r5, [r6, #0]
 8009962:	4628      	mov	r0, r5
 8009964:	6826      	ldr	r6, [r4, #0]
 8009966:	681c      	ldr	r4, [r3, #0]
 8009968:	f7ff fe26 	bl	80095b8 <e131::universe_to_multicast_ip(unsigned short)>
 800996c:	4631      	mov	r1, r6
 800996e:	4602      	mov	r2, r0
 8009970:	4620      	mov	r0, r4
 8009972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009976:	f006 b8f4 	b.w	800fb62 <Network::JoinGroup(int, unsigned int)>
 800997a:	b15a      	cbz	r2, 8009994 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800997c:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009980:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009984:	e7ea      	b.n	800995c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009986:	42aa      	cmp	r2, r5
 8009988:	d004      	beq.n	8009994 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800998a:	2104      	movs	r1, #4
 800998c:	4620      	mov	r0, r4
 800998e:	f7ff ffbd 	bl	800990c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009992:	e7e4      	b.n	800995e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 8009994:	bd70      	pop	{r4, r5, r6, pc}
 8009996:	bf00      	nop
 8009998:	2000a288 	andcs	sl, r0, r8, lsl #5

0800999c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800999c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099a0:	4604      	mov	r4, r0
 80099a2:	460d      	mov	r5, r1
 80099a4:	461e      	mov	r6, r3
 80099a6:	bb02      	cbnz	r2, 80099ea <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 80099a8:	2903      	cmp	r1, #3
 80099aa:	d843      	bhi.n	8009a34 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 80099ac:	230c      	movs	r3, #12
 80099ae:	fb03 0301 	mla	r3, r3, r1, r0
 80099b2:	f893 2622 	ldrb.w	r2, [r3, #1570]	; 0x622
 80099b6:	b12a      	cbz	r2, 80099c4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 80099b8:	f8b3 3620 	ldrh.w	r3, [r3, #1568]	; 0x620
 80099bc:	42b3      	cmp	r3, r6
 80099be:	d109      	bne.n	80099d4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 80099c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80099c4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 80099c8:	3201      	adds	r2, #1
 80099ca:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 80099ce:	2201      	movs	r2, #1
 80099d0:	f883 2622 	strb.w	r2, [r3, #1570]	; 0x622
 80099d4:	210c      	movs	r1, #12
 80099d6:	fb01 4405 	mla	r4, r1, r5, r4
 80099da:	4630      	mov	r0, r6
 80099dc:	f8a4 6620 	strh.w	r6, [r4, #1568]	; 0x620
 80099e0:	f7ff fdea 	bl	80095b8 <e131::universe_to_multicast_ip(unsigned short)>
 80099e4:	f8c4 0624 	str.w	r0, [r4, #1572]	; 0x624
 80099e8:	e7ea      	b.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 80099ea:	2a02      	cmp	r2, #2
 80099ec:	d122      	bne.n	8009a34 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 80099ee:	2903      	cmp	r1, #3
 80099f0:	d8e6      	bhi.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 80099f2:	2344      	movs	r3, #68	; 0x44
 80099f4:	fb03 0301 	mla	r3, r3, r1, r0
 80099f8:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 80099fc:	b152      	cbz	r2, 8009a14 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 80099fe:	2200      	movs	r2, #0
 8009a00:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009a04:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009a08:	4632      	mov	r2, r6
 8009a0a:	3b01      	subs	r3, #1
 8009a0c:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009a10:	f7ff ff7c 	bl	800990c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009a14:	210c      	movs	r1, #12
 8009a16:	fb01 4505 	mla	r5, r1, r5, r4
 8009a1a:	f895 3622 	ldrb.w	r3, [r5, #1570]	; 0x622
 8009a1e:	2b00      	cmp	r3, #0
 8009a20:	d0ce      	beq.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009a22:	2300      	movs	r3, #0
 8009a24:	f885 3622 	strb.w	r3, [r5, #1570]	; 0x622
 8009a28:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009a2c:	3b01      	subs	r3, #1
 8009a2e:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009a32:	e7c5      	b.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009a34:	2344      	movs	r3, #68	; 0x44
 8009a36:	fb03 4305 	mla	r3, r3, r5, r4
 8009a3a:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009a3e:	b1d2      	cbz	r2, 8009a76 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 8009a40:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8009a44:	42b3      	cmp	r3, r6
 8009a46:	d0bb      	beq.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009a48:	4632      	mov	r2, r6
 8009a4a:	4629      	mov	r1, r5
 8009a4c:	4620      	mov	r0, r4
 8009a4e:	f7ff ff5d 	bl	800990c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009a52:	4b0d      	ldr	r3, [pc, #52]	; (8009a88 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 8009a54:	4630      	mov	r0, r6
 8009a56:	681f      	ldr	r7, [r3, #0]
 8009a58:	f8d4 8000 	ldr.w	r8, [r4]
 8009a5c:	f7ff fdac 	bl	80095b8 <e131::universe_to_multicast_ip(unsigned short)>
 8009a60:	4641      	mov	r1, r8
 8009a62:	4602      	mov	r2, r0
 8009a64:	4638      	mov	r0, r7
 8009a66:	f006 f87c 	bl	800fb62 <Network::JoinGroup(int, unsigned int)>
 8009a6a:	2144      	movs	r1, #68	; 0x44
 8009a6c:	fb01 4405 	mla	r4, r1, r5, r4
 8009a70:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 8009a74:	e7a4      	b.n	80099c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009a76:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009a7a:	3201      	adds	r2, #1
 8009a7c:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009a80:	2201      	movs	r2, #1
 8009a82:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009a86:	e7e4      	b.n	8009a52 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 8009a88:	2000a288 	andcs	sl, r0, r8, lsl #5

08009a8c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009a8c:	b953      	cbnz	r3, 8009aa4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 8009a8e:	2903      	cmp	r1, #3
 8009a90:	d811      	bhi.n	8009ab6 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 8009a92:	230c      	movs	r3, #12
 8009a94:	fb03 0001 	mla	r0, r3, r1, r0
 8009a98:	f8b0 3620 	ldrh.w	r3, [r0, #1568]	; 0x620
 8009a9c:	f890 0622 	ldrb.w	r0, [r0, #1570]	; 0x622
 8009aa0:	8013      	strh	r3, [r2, #0]
 8009aa2:	4770      	bx	lr
 8009aa4:	2344      	movs	r3, #68	; 0x44
 8009aa6:	fb03 0001 	mla	r0, r3, r1, r0
 8009aaa:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8009aae:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 8009ab2:	8013      	strh	r3, [r2, #0]
 8009ab4:	4770      	bx	lr
 8009ab6:	4618      	mov	r0, r3
 8009ab8:	4770      	bx	lr

08009aba <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009aba:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009abe:	b923      	cbnz	r3, 8009aca <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009ac0:	2301      	movs	r3, #1
 8009ac2:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009ac6:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009aca:	2344      	movs	r3, #68	; 0x44
 8009acc:	fb03 0001 	mla	r0, r3, r1, r0
 8009ad0:	2301      	movs	r3, #1
 8009ad2:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8009ad6:	4770      	bx	lr

08009ad8 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009ad8:	4602      	mov	r2, r0
 8009ada:	2044      	movs	r0, #68	; 0x44
 8009adc:	4348      	muls	r0, r1
 8009ade:	b570      	push	{r4, r5, r6, lr}
 8009ae0:	1815      	adds	r5, r2, r0
 8009ae2:	460c      	mov	r4, r1
 8009ae4:	68d3      	ldr	r3, [r2, #12]
 8009ae6:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 8009aea:	1a5b      	subs	r3, r3, r1
 8009aec:	f242 7110 	movw	r1, #10000	; 0x2710
 8009af0:	428b      	cmp	r3, r1
 8009af2:	d90a      	bls.n	8009b0a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009af4:	2600      	movs	r6, #0
 8009af6:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 8009afa:	2110      	movs	r1, #16
 8009afc:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8009b00:	4410      	add	r0, r2
 8009b02:	f7ff fd7f 	bl	8009604 <memset.constprop.0.isra.0>
 8009b06:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009b0a:	2044      	movs	r0, #68	; 0x44
 8009b0c:	4344      	muls	r4, r0
 8009b0e:	1915      	adds	r5, r2, r4
 8009b10:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8009b14:	68d3      	ldr	r3, [r2, #12]
 8009b16:	1a5b      	subs	r3, r3, r1
 8009b18:	f242 7110 	movw	r1, #10000	; 0x2710
 8009b1c:	428b      	cmp	r3, r1
 8009b1e:	d90a      	bls.n	8009b36 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8009b20:	2600      	movs	r6, #0
 8009b22:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8009b26:	2110      	movs	r1, #16
 8009b28:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 8009b2c:	1910      	adds	r0, r2, r4
 8009b2e:	f7ff fd69 	bl	8009604 <memset.constprop.0.isra.0>
 8009b32:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009b36:	f892 1595 	ldrb.w	r1, [r2, #1429]	; 0x595
 8009b3a:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 8009b3e:	430b      	orrs	r3, r1
 8009b40:	f892 15d9 	ldrb.w	r1, [r2, #1497]	; 0x5d9
 8009b44:	430b      	orrs	r3, r1
 8009b46:	d107      	bne.n	8009b58 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 8009b48:	f892 361d 	ldrb.w	r3, [r2, #1565]	; 0x61d
 8009b4c:	b923      	cbnz	r3, 8009b58 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 8009b4e:	2101      	movs	r1, #1
 8009b50:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8009b54:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8009b58:	bd70      	pop	{r4, r5, r6, pc}

08009b5a <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8009b5a:	2244      	movs	r2, #68	; 0x44
 8009b5c:	fb02 0101 	mla	r1, r2, r1, r0
 8009b60:	68c3      	ldr	r3, [r0, #12]
 8009b62:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 8009b66:	b510      	push	{r4, lr}
 8009b68:	1a1a      	subs	r2, r3, r0
 8009b6a:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 8009b6e:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 8009b72:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 8009b76:	b171      	cbz	r1, 8009b96 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8009b78:	1b1b      	subs	r3, r3, r4
 8009b7a:	b128      	cbz	r0, 8009b88 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8009b7c:	f242 700f 	movw	r0, #9999	; 0x270f
 8009b80:	4283      	cmp	r3, r0
 8009b82:	d90d      	bls.n	8009ba0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8009b84:	4282      	cmp	r2, r0
 8009b86:	e002      	b.n	8009b8e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8009b88:	f242 7010 	movw	r0, #10000	; 0x2710
 8009b8c:	4283      	cmp	r3, r0
 8009b8e:	bf94      	ite	ls
 8009b90:	2000      	movls	r0, #0
 8009b92:	2001      	movhi	r0, #1
 8009b94:	bd10      	pop	{r4, pc}
 8009b96:	2800      	cmp	r0, #0
 8009b98:	d0fc      	beq.n	8009b94 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8009b9a:	f242 7010 	movw	r0, #10000	; 0x2710
 8009b9e:	e7f1      	b.n	8009b84 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8009ba0:	2000      	movs	r0, #0
 8009ba2:	e7f7      	b.n	8009b94 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08009ba4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8009ba4:	684a      	ldr	r2, [r1, #4]
 8009ba6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009ba8:	b510      	push	{r4, lr}
 8009baa:	429a      	cmp	r2, r3
 8009bac:	d10b      	bne.n	8009bc6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 8009bae:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8009bb2:	3108      	adds	r1, #8
 8009bb4:	30a2      	adds	r0, #162	; 0xa2
 8009bb6:	4298      	cmp	r0, r3
 8009bb8:	d007      	beq.n	8009bca <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8009bba:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009bbe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009bc2:	4294      	cmp	r4, r2
 8009bc4:	d0f7      	beq.n	8009bb6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8009bc6:	2000      	movs	r0, #0
 8009bc8:	bd10      	pop	{r4, pc}
 8009bca:	2001      	movs	r0, #1
 8009bcc:	e7fc      	b.n	8009bc8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

08009bd0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8009bd0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bd4:	2301      	movs	r3, #1
 8009bd6:	4605      	mov	r5, r0
 8009bd8:	4690      	mov	r8, r2
 8009bda:	460f      	mov	r7, r1
 8009bdc:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009be0:	2900      	cmp	r1, #0
 8009be2:	d03d      	beq.n	8009c60 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 8009be4:	2a00      	cmp	r2, #0
 8009be6:	d03b      	beq.n	8009c60 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 8009be8:	2600      	movs	r6, #0
 8009bea:	f240 6804 	movw	r8, #1540	; 0x604
 8009bee:	4637      	mov	r7, r6
 8009bf0:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 8009bf4:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 8009bf8:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 8009bfc:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8009c00:	b1e3      	cbz	r3, 8009c3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 8009c02:	6868      	ldr	r0, [r5, #4]
 8009c04:	4631      	mov	r1, r6
 8009c06:	6803      	ldr	r3, [r0, #0]
 8009c08:	68db      	ldr	r3, [r3, #12]
 8009c0a:	4798      	blx	r3
 8009c0c:	2110      	movs	r1, #16
 8009c0e:	4620      	mov	r0, r4
 8009c10:	f844 7c04 	str.w	r7, [r4, #-4]
 8009c14:	f7ff fcf6 	bl	8009604 <memset.constprop.0.isra.0>
 8009c18:	2110      	movs	r1, #16
 8009c1a:	f104 001c 	add.w	r0, r4, #28
 8009c1e:	61a7      	str	r7, [r4, #24]
 8009c20:	f7ff fcf0 	bl	8009604 <memset.constprop.0.isra.0>
 8009c24:	f7ff fd00 	bl	8009628 <lightset::Data::Get()>
 8009c28:	fb08 0006 	mla	r0, r8, r6, r0
 8009c2c:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 8009c30:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 8009c34:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 8009c38:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 8009c3c:	3601      	adds	r6, #1
 8009c3e:	2e04      	cmp	r6, #4
 8009c40:	f104 0444 	add.w	r4, r4, #68	; 0x44
 8009c44:	d1da      	bne.n	8009bfc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 8009c46:	4b25      	ldr	r3, [pc, #148]	; (8009cdc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 8009c48:	2102      	movs	r1, #2
 8009c4a:	6818      	ldr	r0, [r3, #0]
 8009c4c:	f008 f920 	bl	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 8009c50:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 8009c54:	f023 0302 	bic.w	r3, r3, #2
 8009c58:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 8009c5c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c60:	2600      	movs	r6, #0
 8009c62:	f240 6b04 	movw	fp, #1540	; 0x604
 8009c66:	46b1      	mov	r9, r6
 8009c68:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 8009c6c:	7ea3      	ldrb	r3, [r4, #26]
 8009c6e:	b373      	cbz	r3, 8009cce <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 8009c70:	b15f      	cbz	r7, 8009c8a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009c72:	f854 3c20 	ldr.w	r3, [r4, #-32]
 8009c76:	b143      	cbz	r3, 8009c8a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009c78:	2110      	movs	r1, #16
 8009c7a:	f844 9c20 	str.w	r9, [r4, #-32]
 8009c7e:	f1a4 001c 	sub.w	r0, r4, #28
 8009c82:	f7ff fcbf 	bl	8009604 <memset.constprop.0.isra.0>
 8009c86:	f884 9019 	strb.w	r9, [r4, #25]
 8009c8a:	f1b8 0f00 	cmp.w	r8, #0
 8009c8e:	d00a      	beq.n	8009ca6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 8009c90:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009c94:	b13b      	cbz	r3, 8009ca6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 8009c96:	2110      	movs	r1, #16
 8009c98:	4620      	mov	r0, r4
 8009c9a:	f844 9c04 	str.w	r9, [r4, #-4]
 8009c9e:	f7ff fcb1 	bl	8009604 <memset.constprop.0.isra.0>
 8009ca2:	f884 9019 	strb.w	r9, [r4, #25]
 8009ca6:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 8009caa:	f1ba 0f00 	cmp.w	sl, #0
 8009cae:	d10e      	bne.n	8009cce <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 8009cb0:	6868      	ldr	r0, [r5, #4]
 8009cb2:	4631      	mov	r1, r6
 8009cb4:	6803      	ldr	r3, [r0, #0]
 8009cb6:	68db      	ldr	r3, [r3, #12]
 8009cb8:	4798      	blx	r3
 8009cba:	f7ff fcb5 	bl	8009628 <lightset::Data::Get()>
 8009cbe:	fb0b 0006 	mla	r0, fp, r6, r0
 8009cc2:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 8009cc6:	f884 a018 	strb.w	sl, [r4, #24]
 8009cca:	f884 a01a 	strb.w	sl, [r4, #26]
 8009cce:	3601      	adds	r6, #1
 8009cd0:	2e04      	cmp	r6, #4
 8009cd2:	f104 0444 	add.w	r4, r4, #68	; 0x44
 8009cd6:	d1c9      	bne.n	8009c6c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 8009cd8:	e7b5      	b.n	8009c46 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 8009cda:	bf00      	nop
 8009cdc:	2000a9ac 	andcs	sl, r0, ip, lsr #19

08009ce0 <E131Bridge::HandleDmx()>:
 8009ce0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ce4:	4604      	mov	r4, r0
 8009ce6:	2600      	movs	r6, #0
 8009ce8:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 8009cec:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 8009cf0:	ba7f      	rev16	r7, r7
 8009cf2:	b2bf      	uxth	r7, r7
 8009cf4:	3f01      	subs	r7, #1
 8009cf6:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 8009cfa:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 8009cfe:	b353      	cbz	r3, 8009d56 <E131Bridge::HandleDmx()+0x76>
 8009d00:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 8009d04:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 8009d08:	ba5b      	rev16	r3, r3
 8009d0a:	b29b      	uxth	r3, r3
 8009d0c:	429a      	cmp	r2, r3
 8009d0e:	d122      	bne.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009d10:	f855 3c04 	ldr.w	r3, [r5, #-4]
 8009d14:	f1a5 0108 	sub.w	r1, r5, #8
 8009d18:	4620      	mov	r0, r4
 8009d1a:	9300      	str	r3, [sp, #0]
 8009d1c:	f7ff ff42 	bl	8009ba4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d20:	f105 0114 	add.w	r1, r5, #20
 8009d24:	4682      	mov	sl, r0
 8009d26:	4620      	mov	r0, r4
 8009d28:	f7ff ff3c 	bl	8009ba4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d2c:	f8d5 b018 	ldr.w	fp, [r5, #24]
 8009d30:	4680      	mov	r8, r0
 8009d32:	f1ba 0f00 	cmp.w	sl, #0
 8009d36:	d016      	beq.n	8009d66 <E131Bridge::HandleDmx()+0x86>
 8009d38:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009d3c:	7c2a      	ldrb	r2, [r5, #16]
 8009d3e:	742b      	strb	r3, [r5, #16]
 8009d40:	3313      	adds	r3, #19
 8009d42:	1a9b      	subs	r3, r3, r2
 8009d44:	b2db      	uxtb	r3, r3
 8009d46:	2b13      	cmp	r3, #19
 8009d48:	d905      	bls.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009d4a:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8009d4e:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009d52:	2a00      	cmp	r2, #0
 8009d54:	da10      	bge.n	8009d78 <E131Bridge::HandleDmx()+0x98>
 8009d56:	3601      	adds	r6, #1
 8009d58:	2e04      	cmp	r6, #4
 8009d5a:	f105 0544 	add.w	r5, r5, #68	; 0x44
 8009d5e:	d1cc      	bne.n	8009cfa <E131Bridge::HandleDmx()+0x1a>
 8009d60:	b003      	add	sp, #12
 8009d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d66:	2800      	cmp	r0, #0
 8009d68:	d0ef      	beq.n	8009d4a <E131Bridge::HandleDmx()+0x6a>
 8009d6a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009d6e:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 8009d72:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 8009d76:	e7e3      	b.n	8009d40 <E131Bridge::HandleDmx()+0x60>
 8009d78:	065a      	lsls	r2, r3, #25
 8009d7a:	d50b      	bpl.n	8009d94 <E131Bridge::HandleDmx()+0xb4>
 8009d7c:	f1ba 0f00 	cmp.w	sl, #0
 8009d80:	d102      	bne.n	8009d88 <E131Bridge::HandleDmx()+0xa8>
 8009d82:	f1b8 0f00 	cmp.w	r8, #0
 8009d86:	d0e6      	beq.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009d88:	4642      	mov	r2, r8
 8009d8a:	4651      	mov	r1, sl
 8009d8c:	4620      	mov	r0, r4
 8009d8e:	f7ff ff1f 	bl	8009bd0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8009d92:	e7e0      	b.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009d94:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8009d98:	b133      	cbz	r3, 8009da8 <E131Bridge::HandleDmx()+0xc8>
 8009d9a:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 8009d9e:	b91b      	cbnz	r3, 8009da8 <E131Bridge::HandleDmx()+0xc8>
 8009da0:	4631      	mov	r1, r6
 8009da2:	4620      	mov	r0, r4
 8009da4:	f7ff fe98 	bl	8009ad8 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 8009da8:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 8009dac:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 8009db0:	4293      	cmp	r3, r2
 8009db2:	d259      	bcs.n	8009e68 <E131Bridge::HandleDmx()+0x188>
 8009db4:	4631      	mov	r1, r6
 8009db6:	4620      	mov	r0, r4
 8009db8:	9301      	str	r3, [sp, #4]
 8009dba:	f7ff fece 	bl	8009b5a <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 8009dbe:	2800      	cmp	r0, #0
 8009dc0:	d0c9      	beq.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009dc2:	9b01      	ldr	r3, [sp, #4]
 8009dc4:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 8009dc8:	9b00      	ldr	r3, [sp, #0]
 8009dca:	2b00      	cmp	r3, #0
 8009dcc:	d154      	bne.n	8009e78 <E131Bridge::HandleDmx()+0x198>
 8009dce:	f1bb 0f00 	cmp.w	fp, #0
 8009dd2:	d15c      	bne.n	8009e8e <E131Bridge::HandleDmx()+0x1ae>
 8009dd4:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8009dd6:	2210      	movs	r2, #16
 8009dd8:	f845 3c04 	str.w	r3, [r5, #-4]
 8009ddc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009de0:	4628      	mov	r0, r5
 8009de2:	742b      	strb	r3, [r5, #16]
 8009de4:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009de8:	f7ff fc14 	bl	8009614 <memcpy.isra.0>
 8009dec:	68e3      	ldr	r3, [r4, #12]
 8009dee:	463a      	mov	r2, r7
 8009df0:	4649      	mov	r1, r9
 8009df2:	4630      	mov	r0, r6
 8009df4:	f845 3c08 	str.w	r3, [r5, #-8]
 8009df8:	f7ff fc22 	bl	8009640 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 8009dfc:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009e00:	069b      	lsls	r3, r3, #26
 8009e02:	f100 80ad 	bmi.w	8009f60 <E131Bridge::HandleDmx()+0x280>
 8009e06:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8009e0a:	b29a      	uxth	r2, r3
 8009e0c:	2a00      	cmp	r2, #0
 8009e0e:	f000 80ab 	beq.w	8009f68 <E131Bridge::HandleDmx()+0x288>
 8009e12:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 8009e16:	2a00      	cmp	r2, #0
 8009e18:	f040 80a6 	bne.w	8009f68 <E131Bridge::HandleDmx()+0x288>
 8009e1c:	ba5b      	rev16	r3, r3
 8009e1e:	b29b      	uxth	r3, r3
 8009e20:	f1ba 0f00 	cmp.w	sl, #0
 8009e24:	f040 8099 	bne.w	8009f5a <E131Bridge::HandleDmx()+0x27a>
 8009e28:	f1b8 0f00 	cmp.w	r8, #0
 8009e2c:	f040 8095 	bne.w	8009f5a <E131Bridge::HandleDmx()+0x27a>
 8009e30:	69aa      	ldr	r2, [r5, #24]
 8009e32:	f855 1c04 	ldr.w	r1, [r5, #-4]
 8009e36:	3a00      	subs	r2, #0
 8009e38:	bf18      	it	ne
 8009e3a:	2201      	movne	r2, #1
 8009e3c:	3900      	subs	r1, #0
 8009e3e:	bf18      	it	ne
 8009e40:	2101      	movne	r1, #1
 8009e42:	4620      	mov	r0, r4
 8009e44:	f7ff fd82 	bl	800994c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 8009e48:	f240 1301 	movw	r3, #257	; 0x101
 8009e4c:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8009e50:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	f040 808c 	bne.w	8009f72 <E131Bridge::HandleDmx()+0x292>
 8009e5a:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009e5e:	f043 0302 	orr.w	r3, r3, #2
 8009e62:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8009e66:	e776      	b.n	8009d56 <E131Bridge::HandleDmx()+0x76>
 8009e68:	d9ae      	bls.n	8009dc8 <E131Bridge::HandleDmx()+0xe8>
 8009e6a:	2200      	movs	r2, #0
 8009e6c:	f845 2c04 	str.w	r2, [r5, #-4]
 8009e70:	61aa      	str	r2, [r5, #24]
 8009e72:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 8009e76:	e7a5      	b.n	8009dc4 <E131Bridge::HandleDmx()+0xe4>
 8009e78:	f1ba 0f00 	cmp.w	sl, #0
 8009e7c:	f000 8092 	beq.w	8009fa4 <E131Bridge::HandleDmx()+0x2c4>
 8009e80:	f1bb 0f00 	cmp.w	fp, #0
 8009e84:	d15c      	bne.n	8009f40 <E131Bridge::HandleDmx()+0x260>
 8009e86:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009e8a:	742b      	strb	r3, [r5, #16]
 8009e8c:	e7ae      	b.n	8009dec <E131Bridge::HandleDmx()+0x10c>
 8009e8e:	f1b8 0f00 	cmp.w	r8, #0
 8009e92:	d03b      	beq.n	8009f0c <E131Bridge::HandleDmx()+0x22c>
 8009e94:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009e98:	f240 6b04 	movw	fp, #1540	; 0x604
 8009e9c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 8009ea0:	68e3      	ldr	r3, [r4, #12]
 8009ea2:	fb0b fb06 	mul.w	fp, fp, r6
 8009ea6:	616b      	str	r3, [r5, #20]
 8009ea8:	f7ff fbbe 	bl	8009628 <lightset::Data::Get()>
 8009eac:	4603      	mov	r3, r0
 8009eae:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 8009eb2:	463a      	mov	r2, r7
 8009eb4:	4649      	mov	r1, r9
 8009eb6:	4418      	add	r0, r3
 8009eb8:	9300      	str	r3, [sp, #0]
 8009eba:	f7ff fbab 	bl	8009614 <memcpy.isra.0>
 8009ebe:	9b00      	ldr	r3, [sp, #0]
 8009ec0:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 8009ec4:	eb03 020b 	add.w	r2, r3, fp
 8009ec8:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 8009ecc:	4649      	mov	r1, r9
 8009ece:	463a      	mov	r2, r7
 8009ed0:	4418      	add	r0, r3
 8009ed2:	f7ff fb9f 	bl	8009614 <memcpy.isra.0>
 8009ed6:	e791      	b.n	8009dfc <E131Bridge::HandleDmx()+0x11c>
 8009ed8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8009eda:	2210      	movs	r2, #16
 8009edc:	61ab      	str	r3, [r5, #24]
 8009ede:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009ee2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009ee6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 8009eea:	f105 001c 	add.w	r0, r5, #28
 8009eee:	f7ff fb91 	bl	8009614 <memcpy.isra.0>
 8009ef2:	68e3      	ldr	r3, [r4, #12]
 8009ef4:	4631      	mov	r1, r6
 8009ef6:	4620      	mov	r0, r4
 8009ef8:	616b      	str	r3, [r5, #20]
 8009efa:	f7ff fdde 	bl	8009aba <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009efe:	463a      	mov	r2, r7
 8009f00:	4649      	mov	r1, r9
 8009f02:	4630      	mov	r0, r6
 8009f04:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8009f06:	f7ff fbe1 	bl	80096cc <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009f0a:	e777      	b.n	8009dfc <E131Bridge::HandleDmx()+0x11c>
 8009f0c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8009f0e:	2210      	movs	r2, #16
 8009f10:	f845 3c04 	str.w	r3, [r5, #-4]
 8009f14:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009f18:	4628      	mov	r0, r5
 8009f1a:	742b      	strb	r3, [r5, #16]
 8009f1c:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009f20:	f7ff fb78 	bl	8009614 <memcpy.isra.0>
 8009f24:	68e3      	ldr	r3, [r4, #12]
 8009f26:	4631      	mov	r1, r6
 8009f28:	4620      	mov	r0, r4
 8009f2a:	f845 3c08 	str.w	r3, [r5, #-8]
 8009f2e:	f7ff fdc4 	bl	8009aba <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009f32:	463a      	mov	r2, r7
 8009f34:	4649      	mov	r1, r9
 8009f36:	4630      	mov	r0, r6
 8009f38:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8009f3a:	f7ff fb9e 	bl	800967a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009f3e:	e75d      	b.n	8009dfc <E131Bridge::HandleDmx()+0x11c>
 8009f40:	f1b8 0f00 	cmp.w	r8, #0
 8009f44:	d103      	bne.n	8009f4e <E131Bridge::HandleDmx()+0x26e>
 8009f46:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009f4a:	742b      	strb	r3, [r5, #16]
 8009f4c:	e7ea      	b.n	8009f24 <E131Bridge::HandleDmx()+0x244>
 8009f4e:	481b      	ldr	r0, [pc, #108]	; (8009fbc <E131Bridge::HandleDmx()+0x2dc>)
 8009f50:	b003      	add	sp, #12
 8009f52:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f56:	f7ff badf 	b.w	8009518 <printf>
 8009f5a:	4642      	mov	r2, r8
 8009f5c:	4651      	mov	r1, sl
 8009f5e:	e770      	b.n	8009e42 <E131Bridge::HandleDmx()+0x162>
 8009f60:	f04f 0300 	mov.w	r3, #0
 8009f64:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8009f68:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	f47f af6f 	bne.w	8009e50 <E131Bridge::HandleDmx()+0x170>
 8009f72:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8009f76:	f7ff fb57 	bl	8009628 <lightset::Data::Get()>
 8009f7a:	4632      	mov	r2, r6
 8009f7c:	4641      	mov	r1, r8
 8009f7e:	f7ff fbcf 	bl	8009720 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 8009f82:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 8009f86:	2b00      	cmp	r3, #0
 8009f88:	f47f af67 	bne.w	8009e5a <E131Bridge::HandleDmx()+0x17a>
 8009f8c:	6860      	ldr	r0, [r4, #4]
 8009f8e:	4631      	mov	r1, r6
 8009f90:	6803      	ldr	r3, [r0, #0]
 8009f92:	689b      	ldr	r3, [r3, #8]
 8009f94:	4798      	blx	r3
 8009f96:	f04f 0301 	mov.w	r3, #1
 8009f9a:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8009f9e:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 8009fa2:	e75a      	b.n	8009e5a <E131Bridge::HandleDmx()+0x17a>
 8009fa4:	f1bb 0f00 	cmp.w	fp, #0
 8009fa8:	d096      	beq.n	8009ed8 <E131Bridge::HandleDmx()+0x1f8>
 8009faa:	f1b8 0f00 	cmp.w	r8, #0
 8009fae:	d0ce      	beq.n	8009f4e <E131Bridge::HandleDmx()+0x26e>
 8009fb0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009fb4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 8009fb8:	e79b      	b.n	8009ef2 <E131Bridge::HandleDmx()+0x212>
 8009fba:	bf00      	nop
 8009fbc:	08014458 	stmdaeq	r1, {r3, r4, r6, sl, lr}

08009fc0 <E131Bridge::IsValidRoot()>:
 8009fc0:	4a0d      	ldr	r2, [pc, #52]	; (8009ff8 <E131Bridge::IsValidRoot()+0x38>)
 8009fc2:	b530      	push	{r4, r5, lr}
 8009fc4:	f100 0380 	add.w	r3, r0, #128	; 0x80
 8009fc8:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 8009fcc:	42ab      	cmp	r3, r5
 8009fce:	d007      	beq.n	8009fe0 <E131Bridge::IsValidRoot()+0x20>
 8009fd0:	f813 4b01 	ldrb.w	r4, [r3], #1
 8009fd4:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009fd8:	428c      	cmp	r4, r1
 8009fda:	d0f7      	beq.n	8009fcc <E131Bridge::IsValidRoot()+0xc>
 8009fdc:	2000      	movs	r0, #0
 8009fde:	e008      	b.n	8009ff2 <E131Bridge::IsValidRoot()+0x32>
 8009fe0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 8009fe4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 8009fe8:	d004      	beq.n	8009ff4 <E131Bridge::IsValidRoot()+0x34>
 8009fea:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8009fee:	4258      	negs	r0, r3
 8009ff0:	4158      	adcs	r0, r3
 8009ff2:	bd30      	pop	{r4, r5, pc}
 8009ff4:	2001      	movs	r0, #1
 8009ff6:	e7fc      	b.n	8009ff2 <E131Bridge::IsValidRoot()+0x32>
 8009ff8:	0801463c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, lr}

08009ffc <E131Bridge::IsValidDataPacket()>:
 8009ffc:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800a000:	2b02      	cmp	r3, #2
 800a002:	d10d      	bne.n	800a020 <E131Bridge::IsValidDataPacket()+0x24>
 800a004:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800a008:	2ba1      	cmp	r3, #161	; 0xa1
 800a00a:	d109      	bne.n	800a020 <E131Bridge::IsValidDataPacket()+0x24>
 800a00c:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a010:	b933      	cbnz	r3, 800a020 <E131Bridge::IsValidDataPacket()+0x24>
 800a012:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a016:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a01a:	4258      	negs	r0, r3
 800a01c:	4158      	adcs	r0, r3
 800a01e:	4770      	bx	lr
 800a020:	2000      	movs	r0, #0
 800a022:	4770      	bx	lr

0800a024 <E131Bridge::Run()>:
 800a024:	b530      	push	{r4, r5, lr}
 800a026:	4601      	mov	r1, r0
 800a028:	4604      	mov	r4, r0
 800a02a:	b085      	sub	sp, #20
 800a02c:	f10d 030e 	add.w	r3, sp, #14
 800a030:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a034:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a038:	9300      	str	r3, [sp, #0]
 800a03a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a03e:	f005 f855 	bl	800f0ec <udp_recv>
 800a042:	4b3c      	ldr	r3, [pc, #240]	; (800a134 <E131Bridge::Run()+0x110>)
 800a044:	681d      	ldr	r5, [r3, #0]
 800a046:	60e5      	str	r5, [r4, #12]
 800a048:	2800      	cmp	r0, #0
 800a04a:	d13b      	bne.n	800a0c4 <E131Bridge::Run()+0xa0>
 800a04c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a050:	b183      	cbz	r3, 800a074 <E131Bridge::Run()+0x50>
 800a052:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800a056:	bb73      	cbnz	r3, 800a0b6 <E131Bridge::Run()+0x92>
 800a058:	6923      	ldr	r3, [r4, #16]
 800a05a:	1aed      	subs	r5, r5, r3
 800a05c:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a060:	429d      	cmp	r5, r3
 800a062:	d928      	bls.n	800a0b6 <E131Bridge::Run()+0x92>
 800a064:	6863      	ldr	r3, [r4, #4]
 800a066:	b9eb      	cbnz	r3, 800a0a4 <E131Bridge::Run()+0x80>
 800a068:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a06c:	f023 0302 	bic.w	r3, r3, #2
 800a070:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a074:	6963      	ldr	r3, [r4, #20]
 800a076:	b12b      	cbz	r3, 800a084 <E131Bridge::Run()+0x60>
 800a078:	4620      	mov	r0, r4
 800a07a:	f000 f94f 	bl	800a31c <E131Bridge::HandleDmxIn()>
 800a07e:	4620      	mov	r0, r4
 800a080:	f000 f8ca 	bl	800a218 <E131Bridge::SendDiscoveryPacket()>
 800a084:	7a23      	ldrb	r3, [r4, #8]
 800a086:	b15b      	cbz	r3, 800a0a0 <E131Bridge::Run()+0x7c>
 800a088:	4b2b      	ldr	r3, [pc, #172]	; (800a138 <E131Bridge::Run()+0x114>)
 800a08a:	6818      	ldr	r0, [r3, #0]
 800a08c:	6843      	ldr	r3, [r0, #4]
 800a08e:	2b04      	cmp	r3, #4
 800a090:	d006      	beq.n	800a0a0 <E131Bridge::Run()+0x7c>
 800a092:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a096:	2b00      	cmp	r3, #0
 800a098:	d049      	beq.n	800a12e <E131Bridge::Run()+0x10a>
 800a09a:	2103      	movs	r1, #3
 800a09c:	f007 fef8 	bl	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800a0a0:	b005      	add	sp, #20
 800a0a2:	bd30      	pop	{r4, r5, pc}
 800a0a4:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a0a8:	2b00      	cmp	r3, #0
 800a0aa:	d1dd      	bne.n	800a068 <E131Bridge::Run()+0x44>
 800a0ac:	2201      	movs	r2, #1
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	4611      	mov	r1, r2
 800a0b2:	f7ff fd8d 	bl	8009bd0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a0b6:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a0ba:	1a9b      	subs	r3, r3, r2
 800a0bc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a0c0:	d3d8      	bcc.n	800a074 <E131Bridge::Run()+0x50>
 800a0c2:	e7d1      	b.n	800a068 <E131Bridge::Run()+0x44>
 800a0c4:	4620      	mov	r0, r4
 800a0c6:	f7ff ff7b 	bl	8009fc0 <E131Bridge::IsValidRoot()>
 800a0ca:	2800      	cmp	r0, #0
 800a0cc:	d0e8      	beq.n	800a0a0 <E131Bridge::Run()+0x7c>
 800a0ce:	2300      	movs	r3, #0
 800a0d0:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a0d4:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a0d8:	6125      	str	r5, [r4, #16]
 800a0da:	b15b      	cbz	r3, 800a0f4 <E131Bridge::Run()+0xd0>
 800a0dc:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a0e0:	b943      	cbnz	r3, 800a0f4 <E131Bridge::Run()+0xd0>
 800a0e2:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a0e6:	1aad      	subs	r5, r5, r2
 800a0e8:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a0ec:	4295      	cmp	r5, r2
 800a0ee:	bf88      	it	hi
 800a0f0:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a0f4:	6863      	ldr	r3, [r4, #4]
 800a0f6:	2b00      	cmp	r3, #0
 800a0f8:	d0bc      	beq.n	800a074 <E131Bridge::Run()+0x50>
 800a0fa:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a0fe:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a102:	ba1a      	rev	r2, r3
 800a104:	d108      	bne.n	800a118 <E131Bridge::Run()+0xf4>
 800a106:	4620      	mov	r0, r4
 800a108:	f7ff ff78 	bl	8009ffc <E131Bridge::IsValidDataPacket()>
 800a10c:	2800      	cmp	r0, #0
 800a10e:	d0b1      	beq.n	800a074 <E131Bridge::Run()+0x50>
 800a110:	4620      	mov	r0, r4
 800a112:	f7ff fde5 	bl	8009ce0 <E131Bridge::HandleDmx()>
 800a116:	e7ad      	b.n	800a074 <E131Bridge::Run()+0x50>
 800a118:	2a08      	cmp	r2, #8
 800a11a:	d1ab      	bne.n	800a074 <E131Bridge::Run()+0x50>
 800a11c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a120:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a124:	d1a6      	bne.n	800a074 <E131Bridge::Run()+0x50>
 800a126:	4620      	mov	r0, r4
 800a128:	f000 f972 	bl	800a410 <E131Bridge::HandleSynchronization()>
 800a12c:	e7a2      	b.n	800a074 <E131Bridge::Run()+0x50>
 800a12e:	2102      	movs	r1, #2
 800a130:	e7b4      	b.n	800a09c <E131Bridge::Run()+0x78>
 800a132:	bf00      	nop
 800a134:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800a138:	2000a9ac 	andcs	sl, r0, ip, lsr #19

0800a13c <E131Bridge::FillDiscoveryPacket()>:
 800a13c:	2200      	movs	r2, #0
 800a13e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a142:	b510      	push	{r4, lr}
 800a144:	333c      	adds	r3, #60	; 0x3c
 800a146:	005b      	lsls	r3, r3, #1
 800a148:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a14c:	69c3      	ldr	r3, [r0, #28]
 800a14e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a152:	428b      	cmp	r3, r1
 800a154:	d002      	beq.n	800a15c <E131Bridge::FillDiscoveryPacket()+0x20>
 800a156:	f803 2b01 	strb.w	r2, [r3], #1
 800a15a:	e7fa      	b.n	800a152 <E131Bridge::FillDiscoveryPacket()+0x16>
 800a15c:	69c3      	ldr	r3, [r0, #28]
 800a15e:	492d      	ldr	r1, [pc, #180]	; (800a214 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800a160:	701a      	strb	r2, [r3, #0]
 800a162:	2210      	movs	r2, #16
 800a164:	705a      	strb	r2, [r3, #1]
 800a166:	1d1a      	adds	r2, r3, #4
 800a168:	3310      	adds	r3, #16
 800a16a:	4293      	cmp	r3, r2
 800a16c:	d004      	beq.n	800a178 <E131Bridge::FillDiscoveryPacket()+0x3c>
 800a16e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a172:	f802 4b01 	strb.w	r4, [r2], #1
 800a176:	e7f8      	b.n	800a16a <E131Bridge::FillDiscoveryPacket()+0x2e>
 800a178:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a17c:	69c3      	ldr	r3, [r0, #28]
 800a17e:	3234      	adds	r2, #52	; 0x34
 800a180:	0052      	lsls	r2, r2, #1
 800a182:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a186:	ba52      	rev16	r2, r2
 800a188:	821a      	strh	r2, [r3, #16]
 800a18a:	2200      	movs	r2, #0
 800a18c:	749a      	strb	r2, [r3, #18]
 800a18e:	74da      	strb	r2, [r3, #19]
 800a190:	751a      	strb	r2, [r3, #20]
 800a192:	2208      	movs	r2, #8
 800a194:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a198:	755a      	strb	r2, [r3, #21]
 800a19a:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800a19e:	3316      	adds	r3, #22
 800a1a0:	42a1      	cmp	r1, r4
 800a1a2:	d004      	beq.n	800a1ae <E131Bridge::FillDiscoveryPacket()+0x72>
 800a1a4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a1a8:	f803 2b01 	strb.w	r2, [r3], #1
 800a1ac:	e7f8      	b.n	800a1a0 <E131Bridge::FillDiscoveryPacket()+0x64>
 800a1ae:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a1b2:	69c3      	ldr	r3, [r0, #28]
 800a1b4:	3229      	adds	r2, #41	; 0x29
 800a1b6:	0052      	lsls	r2, r2, #1
 800a1b8:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a1bc:	ba52      	rev16	r2, r2
 800a1be:	84da      	strh	r2, [r3, #38]	; 0x26
 800a1c0:	2200      	movs	r2, #0
 800a1c2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a1c6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a1ca:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a1ce:	2202      	movs	r2, #2
 800a1d0:	332c      	adds	r3, #44	; 0x2c
 800a1d2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a1d6:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800a1da:	42a1      	cmp	r1, r4
 800a1dc:	d004      	beq.n	800a1e8 <E131Bridge::FillDiscoveryPacket()+0xac>
 800a1de:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a1e2:	f803 2b01 	strb.w	r2, [r3], #1
 800a1e6:	e7f8      	b.n	800a1da <E131Bridge::FillDiscoveryPacket()+0x9e>
 800a1e8:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a1ec:	69c2      	ldr	r2, [r0, #28]
 800a1ee:	3304      	adds	r3, #4
 800a1f0:	005b      	lsls	r3, r3, #1
 800a1f2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a1f6:	ba5b      	rev16	r3, r3
 800a1f8:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a1fc:	2300      	movs	r3, #0
 800a1fe:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a202:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a206:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a20a:	2301      	movs	r3, #1
 800a20c:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a210:	bd10      	pop	{r4, pc}
 800a212:	bf00      	nop
 800a214:	0801463c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, lr}

0800a218 <E131Bridge::SendDiscoveryPacket()>:
 800a218:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a21a:	f242 710f 	movw	r1, #9999	; 0x270f
 800a21e:	68c2      	ldr	r2, [r0, #12]
 800a220:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a224:	4604      	mov	r4, r0
 800a226:	1ad3      	subs	r3, r2, r3
 800a228:	428b      	cmp	r3, r1
 800a22a:	d924      	bls.n	800a276 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800a22c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a230:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a234:	b1ab      	cbz	r3, 800a262 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800a236:	2500      	movs	r5, #0
 800a238:	462e      	mov	r6, r5
 800a23a:	2300      	movs	r3, #0
 800a23c:	4629      	mov	r1, r5
 800a23e:	4620      	mov	r0, r4
 800a240:	f10d 020e 	add.w	r2, sp, #14
 800a244:	f7ff fc22 	bl	8009a8c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a248:	b140      	cbz	r0, 800a25c <E131Bridge::SendDiscoveryPacket()+0x44>
 800a24a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a24e:	69e2      	ldr	r2, [r4, #28]
 800a250:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800a254:	ba5b      	rev16	r3, r3
 800a256:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800a25a:	3601      	adds	r6, #1
 800a25c:	3501      	adds	r5, #1
 800a25e:	2d04      	cmp	r5, #4
 800a260:	d1eb      	bne.n	800a23a <E131Bridge::SendDiscoveryPacket()+0x22>
 800a262:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a266:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a26a:	9300      	str	r3, [sp, #0]
 800a26c:	69e1      	ldr	r1, [r4, #28]
 800a26e:	6a23      	ldr	r3, [r4, #32]
 800a270:	7820      	ldrb	r0, [r4, #0]
 800a272:	f004 ff97 	bl	800f1a4 <udp_send>
 800a276:	b004      	add	sp, #16
 800a278:	bd70      	pop	{r4, r5, r6, pc}

0800a27a <memcpy.isra.0>:
 800a27a:	3801      	subs	r0, #1
 800a27c:	440a      	add	r2, r1
 800a27e:	4291      	cmp	r1, r2
 800a280:	d004      	beq.n	800a28c <memcpy.isra.0+0x12>
 800a282:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a286:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a28a:	e7f8      	b.n	800a27e <memcpy.isra.0+0x4>
 800a28c:	4770      	bx	lr
	...

0800a290 <E131Bridge::FillDataPacket()>:
 800a290:	b570      	push	{r4, r5, r6, lr}
 800a292:	2400      	movs	r4, #0
 800a294:	2610      	movs	r6, #16
 800a296:	4605      	mov	r5, r0
 800a298:	6980      	ldr	r0, [r0, #24]
 800a29a:	220c      	movs	r2, #12
 800a29c:	7046      	strb	r6, [r0, #1]
 800a29e:	7004      	strb	r4, [r0, #0]
 800a2a0:	7084      	strb	r4, [r0, #2]
 800a2a2:	70c4      	strb	r4, [r0, #3]
 800a2a4:	491c      	ldr	r1, [pc, #112]	; (800a318 <E131Bridge::FillDataPacket()+0x88>)
 800a2a6:	3004      	adds	r0, #4
 800a2a8:	f7ff ffe7 	bl	800a27a <memcpy.isra.0>
 800a2ac:	2304      	movs	r3, #4
 800a2ae:	4632      	mov	r2, r6
 800a2b0:	2602      	movs	r6, #2
 800a2b2:	69a8      	ldr	r0, [r5, #24]
 800a2b4:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a2b8:	7543      	strb	r3, [r0, #21]
 800a2ba:	7484      	strb	r4, [r0, #18]
 800a2bc:	74c4      	strb	r4, [r0, #19]
 800a2be:	7504      	strb	r4, [r0, #20]
 800a2c0:	3016      	adds	r0, #22
 800a2c2:	f7ff ffda 	bl	800a27a <memcpy.isra.0>
 800a2c6:	69a8      	ldr	r0, [r5, #24]
 800a2c8:	2240      	movs	r2, #64	; 0x40
 800a2ca:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a2ce:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a2d2:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a2d6:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a2da:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a2de:	302c      	adds	r0, #44	; 0x2c
 800a2e0:	f7ff ffcb 	bl	800a27a <memcpy.isra.0>
 800a2e4:	22a1      	movs	r2, #161	; 0xa1
 800a2e6:	69ab      	ldr	r3, [r5, #24]
 800a2e8:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a2ec:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a2f0:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a2f4:	69ab      	ldr	r3, [r5, #24]
 800a2f6:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a2fa:	69ab      	ldr	r3, [r5, #24]
 800a2fc:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a300:	2201      	movs	r2, #1
 800a302:	69ab      	ldr	r3, [r5, #24]
 800a304:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a308:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a30c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a310:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a314:	bd70      	pop	{r4, r5, r6, pc}
 800a316:	bf00      	nop
 800a318:	0801463c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, lr}

0800a31c <E131Bridge::HandleDmxIn()>:
 800a31c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a320:	4604      	mov	r4, r0
 800a322:	4605      	mov	r5, r0
 800a324:	2600      	movs	r6, #0
 800a326:	4f39      	ldr	r7, [pc, #228]	; (800a40c <E131Bridge::HandleDmxIn()+0xf0>)
 800a328:	f895 3622 	ldrb.w	r3, [r5, #1570]	; 0x622
 800a32c:	2b00      	cmp	r3, #0
 800a32e:	d053      	beq.n	800a3d8 <E131Bridge::HandleDmxIn()+0xbc>
 800a330:	6960      	ldr	r0, [r4, #20]
 800a332:	4631      	mov	r1, r6
 800a334:	6803      	ldr	r3, [r0, #0]
 800a336:	aa02      	add	r2, sp, #8
 800a338:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800a33c:	ab03      	add	r3, sp, #12
 800a33e:	47c0      	blx	r8
 800a340:	4601      	mov	r1, r0
 800a342:	2800      	cmp	r0, #0
 800a344:	d050      	beq.n	800a3e8 <E131Bridge::HandleDmxIn()+0xcc>
 800a346:	9b02      	ldr	r3, [sp, #8]
 800a348:	69a0      	ldr	r0, [r4, #24]
 800a34a:	b29b      	uxth	r3, r3
 800a34c:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800a350:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a354:	ba52      	rev16	r2, r2
 800a356:	8202      	strh	r2, [r0, #16]
 800a358:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800a35c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a360:	ba52      	rev16	r2, r2
 800a362:	84c2      	strh	r2, [r0, #38]	; 0x26
 800a364:	f895 2629 	ldrb.w	r2, [r5, #1577]	; 0x629
 800a368:	330a      	adds	r3, #10
 800a36a:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800a36e:	f895 2628 	ldrb.w	r2, [r5, #1576]	; 0x628
 800a372:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a376:	1c50      	adds	r0, r2, #1
 800a378:	f885 0628 	strb.w	r0, [r5, #1576]	; 0x628
 800a37c:	69a0      	ldr	r0, [r4, #24]
 800a37e:	ba5b      	rev16	r3, r3
 800a380:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800a384:	f8b5 2620 	ldrh.w	r2, [r5, #1568]	; 0x620
 800a388:	69a0      	ldr	r0, [r4, #24]
 800a38a:	ba52      	rev16	r2, r2
 800a38c:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800a390:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a394:	9a02      	ldr	r2, [sp, #8]
 800a396:	307d      	adds	r0, #125	; 0x7d
 800a398:	f7ff ff6f 	bl	800a27a <memcpy.isra.0>
 800a39c:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a3a0:	69a1      	ldr	r1, [r4, #24]
 800a3a2:	ba53      	rev16	r3, r2
 800a3a4:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a3a8:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a3ac:	327d      	adds	r2, #125	; 0x7d
 800a3ae:	9300      	str	r3, [sp, #0]
 800a3b0:	f8d5 3624 	ldr.w	r3, [r5, #1572]	; 0x624
 800a3b4:	b292      	uxth	r2, r2
 800a3b6:	7820      	ldrb	r0, [r4, #0]
 800a3b8:	f004 fef4 	bl	800f1a4 <udp_send>
 800a3bc:	2301      	movs	r3, #1
 800a3be:	683a      	ldr	r2, [r7, #0]
 800a3c0:	40b3      	lsls	r3, r6
 800a3c2:	ea33 0102 	bics.w	r1, r3, r2
 800a3c6:	d007      	beq.n	800a3d8 <E131Bridge::HandleDmxIn()+0xbc>
 800a3c8:	4313      	orrs	r3, r2
 800a3ca:	603b      	str	r3, [r7, #0]
 800a3cc:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3d0:	f043 0301 	orr.w	r3, r3, #1
 800a3d4:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a3d8:	3601      	adds	r6, #1
 800a3da:	2e04      	cmp	r6, #4
 800a3dc:	f105 050c 	add.w	r5, r5, #12
 800a3e0:	d1a2      	bne.n	800a328 <E131Bridge::HandleDmxIn()+0xc>
 800a3e2:	b004      	add	sp, #16
 800a3e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a3e8:	9b03      	ldr	r3, [sp, #12]
 800a3ea:	2b00      	cmp	r3, #0
 800a3ec:	d1f4      	bne.n	800a3d8 <E131Bridge::HandleDmxIn()+0xbc>
 800a3ee:	2301      	movs	r3, #1
 800a3f0:	fa03 f206 	lsl.w	r2, r3, r6
 800a3f4:	683b      	ldr	r3, [r7, #0]
 800a3f6:	ea23 0302 	bic.w	r3, r3, r2
 800a3fa:	603b      	str	r3, [r7, #0]
 800a3fc:	2b00      	cmp	r3, #0
 800a3fe:	d1eb      	bne.n	800a3d8 <E131Bridge::HandleDmxIn()+0xbc>
 800a400:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a404:	f023 0301 	bic.w	r3, r3, #1
 800a408:	e7e4      	b.n	800a3d4 <E131Bridge::HandleDmxIn()+0xb8>
 800a40a:	bf00      	nop
 800a40c:	20001904 	andcs	r1, r0, r4, lsl #18

0800a410 <E131Bridge::HandleSynchronization()>:
 800a410:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a414:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a418:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a41c:	ba5b      	rev16	r3, r3
 800a41e:	b29b      	uxth	r3, r3
 800a420:	429a      	cmp	r2, r3
 800a422:	4604      	mov	r4, r0
 800a424:	d00a      	beq.n	800a43c <E131Bridge::HandleSynchronization()+0x2c>
 800a426:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a42a:	429a      	cmp	r2, r3
 800a42c:	d006      	beq.n	800a43c <E131Bridge::HandleSynchronization()+0x2c>
 800a42e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a432:	4b23      	ldr	r3, [pc, #140]	; (800a4c0 <E131Bridge::HandleSynchronization()+0xb0>)
 800a434:	2102      	movs	r1, #2
 800a436:	6818      	ldr	r0, [r3, #0]
 800a438:	f007 bd2a 	b.w	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800a43c:	2500      	movs	r5, #0
 800a43e:	4627      	mov	r7, r4
 800a440:	46a9      	mov	r9, r5
 800a442:	68e3      	ldr	r3, [r4, #12]
 800a444:	4e1f      	ldr	r6, [pc, #124]	; (800a4c4 <E131Bridge::HandleSynchronization()+0xb4>)
 800a446:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800a4c8 <E131Bridge::HandleSynchronization()+0xb8>
 800a44a:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a44e:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800a452:	b323      	cbz	r3, 800a49e <E131Bridge::HandleSynchronization()+0x8e>
 800a454:	f8d8 3000 	ldr.w	r3, [r8]
 800a458:	6860      	ldr	r0, [r4, #4]
 800a45a:	07da      	lsls	r2, r3, #31
 800a45c:	bf5c      	itt	pl
 800a45e:	2301      	movpl	r3, #1
 800a460:	f8c8 3000 	strpl.w	r3, [r8]
 800a464:	6803      	ldr	r3, [r0, #0]
 800a466:	4629      	mov	r1, r5
 800a468:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800a46c:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a470:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a474:	47d0      	blx	sl
 800a476:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800a47a:	b93b      	cbnz	r3, 800a48c <E131Bridge::HandleSynchronization()+0x7c>
 800a47c:	6860      	ldr	r0, [r4, #4]
 800a47e:	4629      	mov	r1, r5
 800a480:	6803      	ldr	r3, [r0, #0]
 800a482:	689b      	ldr	r3, [r3, #8]
 800a484:	4798      	blx	r3
 800a486:	2301      	movs	r3, #1
 800a488:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800a48c:	f8d8 3000 	ldr.w	r3, [r8]
 800a490:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800a494:	07db      	lsls	r3, r3, #31
 800a496:	bf5c      	itt	pl
 800a498:	2301      	movpl	r3, #1
 800a49a:	f8c8 3000 	strpl.w	r3, [r8]
 800a49e:	3501      	adds	r5, #1
 800a4a0:	2d04      	cmp	r5, #4
 800a4a2:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800a4a6:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800a4aa:	d1d0      	bne.n	800a44e <E131Bridge::HandleSynchronization()+0x3e>
 800a4ac:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a4ae:	b120      	cbz	r0, 800a4ba <E131Bridge::HandleSynchronization()+0xaa>
 800a4b0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a4b4:	6803      	ldr	r3, [r0, #0]
 800a4b6:	689b      	ldr	r3, [r3, #8]
 800a4b8:	4718      	bx	r3
 800a4ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a4be:	bf00      	nop
 800a4c0:	2000a9ac 	andcs	sl, r0, ip, lsr #19
 800a4c4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a4c8:	200000ec 	andcs	r0, r0, ip, ror #1

0800a4cc <E131Bridge::Print()>:
 800a4cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4d0:	2500      	movs	r5, #0
 800a4d2:	4604      	mov	r4, r0
 800a4d4:	b08c      	sub	sp, #48	; 0x30
 800a4d6:	a902      	add	r1, sp, #8
 800a4d8:	3024      	adds	r0, #36	; 0x24
 800a4da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a4de:	f000 fb9d 	bl	800ac1c <uuid_unparse>
 800a4e2:	482c      	ldr	r0, [pc, #176]	; (800a594 <E131Bridge::Print()+0xc8>)
 800a4e4:	f7ff f818 	bl	8009518 <printf>
 800a4e8:	4b2b      	ldr	r3, [pc, #172]	; (800a598 <E131Bridge::Print()+0xcc>)
 800a4ea:	482c      	ldr	r0, [pc, #176]	; (800a59c <E131Bridge::Print()+0xd0>)
 800a4ec:	7819      	ldrb	r1, [r3, #0]
 800a4ee:	785a      	ldrb	r2, [r3, #1]
 800a4f0:	f7ff f812 	bl	8009518 <printf>
 800a4f4:	482a      	ldr	r0, [pc, #168]	; (800a5a0 <E131Bridge::Print()+0xd4>)
 800a4f6:	a902      	add	r1, sp, #8
 800a4f8:	f7ff f80e 	bl	8009518 <printf>
 800a4fc:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a500:	b303      	cbz	r3, 800a544 <E131Bridge::Print()+0x78>
 800a502:	4828      	ldr	r0, [pc, #160]	; (800a5a4 <E131Bridge::Print()+0xd8>)
 800a504:	f7ff f808 	bl	8009518 <printf>
 800a508:	4e27      	ldr	r6, [pc, #156]	; (800a5a8 <E131Bridge::Print()+0xdc>)
 800a50a:	4f28      	ldr	r7, [pc, #160]	; (800a5ac <E131Bridge::Print()+0xe0>)
 800a50c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5b0 <E131Bridge::Print()+0xe4>
 800a510:	2301      	movs	r3, #1
 800a512:	4629      	mov	r1, r5
 800a514:	4620      	mov	r0, r4
 800a516:	f10d 0206 	add.w	r2, sp, #6
 800a51a:	f7ff fab7 	bl	8009a8c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a51e:	b170      	cbz	r0, 800a53e <E131Bridge::Print()+0x72>
 800a520:	2344      	movs	r3, #68	; 0x44
 800a522:	436b      	muls	r3, r5
 800a524:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800a528:	58d3      	ldr	r3, [r2, r3]
 800a52a:	4629      	mov	r1, r5
 800a52c:	2b00      	cmp	r3, #0
 800a52e:	bf0c      	ite	eq
 800a530:	4633      	moveq	r3, r6
 800a532:	463b      	movne	r3, r7
 800a534:	4640      	mov	r0, r8
 800a536:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a53a:	f7fe ffed 	bl	8009518 <printf>
 800a53e:	3501      	adds	r5, #1
 800a540:	2d04      	cmp	r5, #4
 800a542:	d1e5      	bne.n	800a510 <E131Bridge::Print()+0x44>
 800a544:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a548:	b1d3      	cbz	r3, 800a580 <E131Bridge::Print()+0xb4>
 800a54a:	481a      	ldr	r0, [pc, #104]	; (800a5b4 <E131Bridge::Print()+0xe8>)
 800a54c:	f7fe ffe4 	bl	8009518 <printf>
 800a550:	2500      	movs	r5, #0
 800a552:	4e19      	ldr	r6, [pc, #100]	; (800a5b8 <E131Bridge::Print()+0xec>)
 800a554:	2300      	movs	r3, #0
 800a556:	4629      	mov	r1, r5
 800a558:	4620      	mov	r0, r4
 800a55a:	f10d 0206 	add.w	r2, sp, #6
 800a55e:	f7ff fa95 	bl	8009a8c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a562:	b150      	cbz	r0, 800a57a <E131Bridge::Print()+0xae>
 800a564:	230c      	movs	r3, #12
 800a566:	436b      	muls	r3, r5
 800a568:	f204 6229 	addw	r2, r4, #1577	; 0x629
 800a56c:	5cd3      	ldrb	r3, [r2, r3]
 800a56e:	4629      	mov	r1, r5
 800a570:	4630      	mov	r0, r6
 800a572:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a576:	f7fe ffcf 	bl	8009518 <printf>
 800a57a:	3501      	adds	r5, #1
 800a57c:	2d04      	cmp	r5, #4
 800a57e:	d1e9      	bne.n	800a554 <E131Bridge::Print()+0x88>
 800a580:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a584:	b113      	cbz	r3, 800a58c <E131Bridge::Print()+0xc0>
 800a586:	480d      	ldr	r0, [pc, #52]	; (800a5bc <E131Bridge::Print()+0xf0>)
 800a588:	f7fe ffc6 	bl	8009518 <printf>
 800a58c:	b00c      	add	sp, #48	; 0x30
 800a58e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a592:	bf00      	nop
 800a594:	0801448d 	stmdaeq	r1, {r0, r2, r3, r7, sl, lr}
 800a598:	08014648 	stmdaeq	r1, {r3, r6, r9, sl, lr}
 800a59c:	08014495 	stmdaeq	r1, {r0, r2, r4, r7, sl, lr}
 800a5a0:	080144a8 	stmdaeq	r1, {r3, r5, r7, sl, lr}
 800a5a4:	080144b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, lr}
 800a5a8:	08014485 	stmdaeq	r1, {r0, r2, r7, sl, lr}
 800a5ac:	08014489 	stmdaeq	r1, {r0, r3, r7, sl, lr}
 800a5b0:	080144c1 	stmdaeq	r1, {r0, r6, r7, sl, lr}
 800a5b4:	080144e0 	stmdaeq	r1, {r5, r6, r7, sl, lr}
 800a5b8:	080144e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, lr}
 800a5bc:	08014507 	stmdaeq	r1, {r0, r1, r2, r8, sl, lr}

0800a5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a5c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5c2:	88c5      	ldrh	r5, [r0, #6]
 800a5c4:	8886      	ldrh	r6, [r0, #4]
 800a5c6:	42b5      	cmp	r5, r6
 800a5c8:	d216      	bcs.n	800a5f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a5ca:	4604      	mov	r4, r0
 800a5cc:	6800      	ldr	r0, [r0, #0]
 800a5ce:	4428      	add	r0, r5
 800a5d0:	1b75      	subs	r5, r6, r5
 800a5d2:	7a26      	ldrb	r6, [r4, #8]
 800a5d4:	b923      	cbnz	r3, 800a5e0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a5d6:	b926      	cbnz	r6, 800a5e2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a5d8:	9200      	str	r2, [sp, #0]
 800a5da:	460b      	mov	r3, r1
 800a5dc:	4a09      	ldr	r2, [pc, #36]	; (800a604 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a5de:	e003      	b.n	800a5e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5e0:	b166      	cbz	r6, 800a5fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a5e2:	460b      	mov	r3, r1
 800a5e4:	9200      	str	r2, [sp, #0]
 800a5e6:	4a08      	ldr	r2, [pc, #32]	; (800a608 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a5e8:	4629      	mov	r1, r5
 800a5ea:	f7fe ffbd 	bl	8009568 <snprintf>
 800a5ee:	4285      	cmp	r5, r0
 800a5f0:	bfa2      	ittt	ge
 800a5f2:	88e3      	ldrhge	r3, [r4, #6]
 800a5f4:	181b      	addge	r3, r3, r0
 800a5f6:	80e3      	strhge	r3, [r4, #6]
 800a5f8:	b002      	add	sp, #8
 800a5fa:	bd70      	pop	{r4, r5, r6, pc}
 800a5fc:	9200      	str	r2, [sp, #0]
 800a5fe:	460b      	mov	r3, r1
 800a600:	4a02      	ldr	r2, [pc, #8]	; (800a60c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a602:	e7f1      	b.n	800a5e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a604:	0801456a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, lr}
 800a608:	0801455f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, lr}
 800a60c:	0801456b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, lr}

0800a610 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a610:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a612:	460b      	mov	r3, r1
 800a614:	8885      	ldrh	r5, [r0, #4]
 800a616:	88c1      	ldrh	r1, [r0, #6]
 800a618:	42a9      	cmp	r1, r5
 800a61a:	d214      	bcs.n	800a646 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a61c:	4604      	mov	r4, r0
 800a61e:	6800      	ldr	r0, [r0, #0]
 800a620:	1a6d      	subs	r5, r5, r1
 800a622:	4408      	add	r0, r1
 800a624:	7a21      	ldrb	r1, [r4, #8]
 800a626:	b91a      	cbnz	r2, 800a630 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a628:	b919      	cbnz	r1, 800a632 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a62a:	4a0a      	ldr	r2, [pc, #40]	; (800a654 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a62c:	9100      	str	r1, [sp, #0]
 800a62e:	e002      	b.n	800a636 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a630:	b159      	cbz	r1, 800a64a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a632:	9200      	str	r2, [sp, #0]
 800a634:	4a08      	ldr	r2, [pc, #32]	; (800a658 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a636:	4629      	mov	r1, r5
 800a638:	f7fe ff96 	bl	8009568 <snprintf>
 800a63c:	4285      	cmp	r5, r0
 800a63e:	bfa2      	ittt	ge
 800a640:	88e3      	ldrhge	r3, [r4, #6]
 800a642:	181b      	addge	r3, r3, r0
 800a644:	80e3      	strhge	r3, [r4, #6]
 800a646:	b003      	add	sp, #12
 800a648:	bd30      	pop	{r4, r5, pc}
 800a64a:	2201      	movs	r2, #1
 800a64c:	9200      	str	r2, [sp, #0]
 800a64e:	4a03      	ldr	r2, [pc, #12]	; (800a65c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a650:	e7f1      	b.n	800a636 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a652:	bf00      	nop
 800a654:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800a658:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800a65c:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

0800a660 <E131Params::E131Params(E131ParamsStore*)>:
 800a660:	b510      	push	{r4, lr}
 800a662:	221a      	movs	r2, #26
 800a664:	4604      	mov	r4, r0
 800a666:	f840 1b04 	str.w	r1, [r0], #4
 800a66a:	2100      	movs	r1, #0
 800a66c:	f007 fdcc 	bl	8012208 <memset>
 800a670:	2300      	movs	r3, #0
 800a672:	2201      	movs	r2, #1
 800a674:	7323      	strb	r3, [r4, #12]
 800a676:	72e2      	strb	r2, [r4, #11]
 800a678:	73a3      	strb	r3, [r4, #14]
 800a67a:	2202      	movs	r2, #2
 800a67c:	7423      	strb	r3, [r4, #16]
 800a67e:	74a3      	strb	r3, [r4, #18]
 800a680:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800a684:	7362      	strb	r2, [r4, #13]
 800a686:	83e3      	strh	r3, [r4, #30]
 800a688:	2203      	movs	r2, #3
 800a68a:	f246 4364 	movw	r3, #25700	; 0x6464
 800a68e:	73e2      	strb	r2, [r4, #15]
 800a690:	8423      	strh	r3, [r4, #32]
 800a692:	2204      	movs	r2, #4
 800a694:	2364      	movs	r3, #100	; 0x64
 800a696:	4620      	mov	r0, r4
 800a698:	7462      	strb	r2, [r4, #17]
 800a69a:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800a69e:	bd10      	pop	{r4, pc}

0800a6a0 <E131Params::Load()>:
 800a6a0:	b508      	push	{r3, lr}
 800a6a2:	2300      	movs	r3, #0
 800a6a4:	4601      	mov	r1, r0
 800a6a6:	6043      	str	r3, [r0, #4]
 800a6a8:	6800      	ldr	r0, [r0, #0]
 800a6aa:	b120      	cbz	r0, 800a6b6 <E131Params::Load()+0x16>
 800a6ac:	6803      	ldr	r3, [r0, #0]
 800a6ae:	3104      	adds	r1, #4
 800a6b0:	68db      	ldr	r3, [r3, #12]
 800a6b2:	4798      	blx	r3
 800a6b4:	2001      	movs	r0, #1
 800a6b6:	bd08      	pop	{r3, pc}

0800a6b8 <E131Params::Load(char const*, unsigned int)>:
 800a6b8:	6803      	ldr	r3, [r0, #0]
 800a6ba:	b1d3      	cbz	r3, 800a6f2 <E131Params::Load(char const*, unsigned int)+0x3a>
 800a6bc:	2300      	movs	r3, #0
 800a6be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6c0:	460d      	mov	r5, r1
 800a6c2:	4616      	mov	r6, r2
 800a6c4:	4604      	mov	r4, r0
 800a6c6:	6043      	str	r3, [r0, #4]
 800a6c8:	4602      	mov	r2, r0
 800a6ca:	490a      	ldr	r1, [pc, #40]	; (800a6f4 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800a6cc:	4668      	mov	r0, sp
 800a6ce:	f006 ff0f 	bl	80114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a6d2:	4632      	mov	r2, r6
 800a6d4:	4629      	mov	r1, r5
 800a6d6:	4668      	mov	r0, sp
 800a6d8:	f006 ff0e 	bl	80114f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800a6dc:	4621      	mov	r1, r4
 800a6de:	f851 0b04 	ldr.w	r0, [r1], #4
 800a6e2:	6803      	ldr	r3, [r0, #0]
 800a6e4:	689b      	ldr	r3, [r3, #8]
 800a6e6:	4798      	blx	r3
 800a6e8:	4668      	mov	r0, sp
 800a6ea:	f006 ff04 	bl	80114f6 <ReadConfigFile::~ReadConfigFile()>
 800a6ee:	b002      	add	sp, #8
 800a6f0:	bd70      	pop	{r4, r5, r6, pc}
 800a6f2:	4770      	bx	lr
 800a6f4:	0800a8c1 	stmdaeq	r0, {r0, r6, r7, fp, sp, pc}

0800a6f8 <E131Params::callbackFunction(char const*)>:
 800a6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6fc:	4604      	mov	r4, r0
 800a6fe:	460e      	mov	r6, r1
 800a700:	2500      	movs	r5, #0
 800a702:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800a8a8 <E131Params::callbackFunction(char const*)+0x1b0>
 800a706:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800a8ac <E131Params::callbackFunction(char const*)+0x1b4>
 800a70a:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800a8b0 <E131Params::callbackFunction(char const*)+0x1b8>
 800a70e:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800a8b4 <E131Params::callbackFunction(char const*)+0x1bc>
 800a712:	b087      	sub	sp, #28
 800a714:	4649      	mov	r1, r9
 800a716:	4630      	mov	r0, r6
 800a718:	f10d 0202 	add.w	r2, sp, #2
 800a71c:	f006 ffdc 	bl	80116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a720:	b9c8      	cbnz	r0, 800a756 <E131Params::callbackFunction(char const*)+0x5e>
 800a722:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800a726:	2110      	movs	r1, #16
 800a728:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800a72c:	6863      	ldr	r3, [r4, #4]
 800a72e:	1e42      	subs	r2, r0, #1
 800a730:	b292      	uxth	r2, r2
 800a732:	42b2      	cmp	r2, r6
 800a734:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800a738:	fa01 f105 	lsl.w	r1, r1, r5
 800a73c:	bf85      	ittet	hi
 800a73e:	1912      	addhi	r2, r2, r4
 800a740:	3501      	addhi	r5, #1
 800a742:	1912      	addls	r2, r2, r4
 800a744:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800a748:	bf8e      	itee	hi
 800a74a:	438b      	bichi	r3, r1
 800a74c:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800a750:	430b      	orrls	r3, r1
 800a752:	6063      	str	r3, [r4, #4]
 800a754:	e05e      	b.n	800a814 <E131Params::callbackFunction(char const*)+0x11c>
 800a756:	2712      	movs	r7, #18
 800a758:	2303      	movs	r3, #3
 800a75a:	436f      	muls	r7, r5
 800a75c:	9301      	str	r3, [sp, #4]
 800a75e:	4630      	mov	r0, r6
 800a760:	ab01      	add	r3, sp, #4
 800a762:	aa02      	add	r2, sp, #8
 800a764:	eb0a 0107 	add.w	r1, sl, r7
 800a768:	f006 fefa 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a76c:	b9f8      	cbnz	r0, 800a7ae <E131Params::callbackFunction(char const*)+0xb6>
 800a76e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a772:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800a776:	40ab      	lsls	r3, r5
 800a778:	f041 0120 	orr.w	r1, r1, #32
 800a77c:	296c      	cmp	r1, #108	; 0x6c
 800a77e:	6862      	ldr	r2, [r4, #4]
 800a780:	4425      	add	r5, r4
 800a782:	d10f      	bne.n	800a7a4 <E131Params::callbackFunction(char const*)+0xac>
 800a784:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800a788:	f041 0120 	orr.w	r1, r1, #32
 800a78c:	2974      	cmp	r1, #116	; 0x74
 800a78e:	d109      	bne.n	800a7a4 <E131Params::callbackFunction(char const*)+0xac>
 800a790:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800a794:	f041 0120 	orr.w	r1, r1, #32
 800a798:	2970      	cmp	r1, #112	; 0x70
 800a79a:	d103      	bne.n	800a7a4 <E131Params::callbackFunction(char const*)+0xac>
 800a79c:	2101      	movs	r1, #1
 800a79e:	7529      	strb	r1, [r5, #20]
 800a7a0:	4313      	orrs	r3, r2
 800a7a2:	e7d6      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a7a4:	2100      	movs	r1, #0
 800a7a6:	ea22 0303 	bic.w	r3, r2, r3
 800a7aa:	7529      	strb	r1, [r5, #20]
 800a7ac:	e7d1      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a7ae:	2305      	movs	r3, #5
 800a7b0:	4630      	mov	r0, r6
 800a7b2:	9301      	str	r3, [sp, #4]
 800a7b4:	aa02      	add	r2, sp, #8
 800a7b6:	ab01      	add	r3, sp, #4
 800a7b8:	eb0b 0107 	add.w	r1, fp, r7
 800a7bc:	f006 fed0 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a7c0:	bb58      	cbnz	r0, 800a81a <E131Params::callbackFunction(char const*)+0x122>
 800a7c2:	2301      	movs	r3, #1
 800a7c4:	7fa2      	ldrb	r2, [r4, #30]
 800a7c6:	40ab      	lsls	r3, r5
 800a7c8:	ea22 0303 	bic.w	r3, r2, r3
 800a7cc:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800a7d0:	77a3      	strb	r3, [r4, #30]
 800a7d2:	f042 0220 	orr.w	r2, r2, #32
 800a7d6:	2a69      	cmp	r2, #105	; 0x69
 800a7d8:	d117      	bne.n	800a80a <E131Params::callbackFunction(char const*)+0x112>
 800a7da:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800a7de:	f042 0220 	orr.w	r2, r2, #32
 800a7e2:	2a6e      	cmp	r2, #110	; 0x6e
 800a7e4:	d111      	bne.n	800a80a <E131Params::callbackFunction(char const*)+0x112>
 800a7e6:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800a7ea:	f042 0220 	orr.w	r2, r2, #32
 800a7ee:	2a70      	cmp	r2, #112	; 0x70
 800a7f0:	d10b      	bne.n	800a80a <E131Params::callbackFunction(char const*)+0x112>
 800a7f2:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800a7f6:	f042 0220 	orr.w	r2, r2, #32
 800a7fa:	2a75      	cmp	r2, #117	; 0x75
 800a7fc:	d105      	bne.n	800a80a <E131Params::callbackFunction(char const*)+0x112>
 800a7fe:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800a802:	f042 0220 	orr.w	r2, r2, #32
 800a806:	2a74      	cmp	r2, #116	; 0x74
 800a808:	d004      	beq.n	800a814 <E131Params::callbackFunction(char const*)+0x11c>
 800a80a:	2201      	movs	r2, #1
 800a80c:	fa02 f505 	lsl.w	r5, r2, r5
 800a810:	432b      	orrs	r3, r5
 800a812:	77a3      	strb	r3, [r4, #30]
 800a814:	b007      	add	sp, #28
 800a816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a81a:	4641      	mov	r1, r8
 800a81c:	4630      	mov	r0, r6
 800a81e:	f10d 0201 	add.w	r2, sp, #1
 800a822:	f006 ffa0 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a826:	b998      	cbnz	r0, 800a850 <E131Params::callbackFunction(char const*)+0x158>
 800a828:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800a82c:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800a830:	40aa      	lsls	r2, r5
 800a832:	1e48      	subs	r0, r1, #1
 800a834:	b2c0      	uxtb	r0, r0
 800a836:	28c7      	cmp	r0, #199	; 0xc7
 800a838:	6863      	ldr	r3, [r4, #4]
 800a83a:	4425      	add	r5, r4
 800a83c:	d803      	bhi.n	800a846 <E131Params::callbackFunction(char const*)+0x14e>
 800a83e:	2964      	cmp	r1, #100	; 0x64
 800a840:	d001      	beq.n	800a846 <E131Params::callbackFunction(char const*)+0x14e>
 800a842:	77e9      	strb	r1, [r5, #31]
 800a844:	e7ac      	b.n	800a7a0 <E131Params::callbackFunction(char const*)+0xa8>
 800a846:	2164      	movs	r1, #100	; 0x64
 800a848:	ea23 0302 	bic.w	r3, r3, r2
 800a84c:	77e9      	strb	r1, [r5, #31]
 800a84e:	e780      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a850:	3501      	adds	r5, #1
 800a852:	2d04      	cmp	r5, #4
 800a854:	f109 0910 	add.w	r9, r9, #16
 800a858:	f108 0812 	add.w	r8, r8, #18
 800a85c:	f47f af5a 	bne.w	800a714 <E131Params::callbackFunction(char const*)+0x1c>
 800a860:	4630      	mov	r0, r6
 800a862:	4915      	ldr	r1, [pc, #84]	; (800a8b8 <E131Params::callbackFunction(char const*)+0x1c0>)
 800a864:	f10d 0201 	add.w	r2, sp, #1
 800a868:	f006 ff7d 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a86c:	b948      	cbnz	r0, 800a882 <E131Params::callbackFunction(char const*)+0x18a>
 800a86e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a872:	6863      	ldr	r3, [r4, #4]
 800a874:	b112      	cbz	r2, 800a87c <E131Params::callbackFunction(char const*)+0x184>
 800a876:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800a87a:	e76a      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a87c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a880:	e767      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a882:	4630      	mov	r0, r6
 800a884:	490d      	ldr	r1, [pc, #52]	; (800a8bc <E131Params::callbackFunction(char const*)+0x1c4>)
 800a886:	f10d 0201 	add.w	r2, sp, #1
 800a88a:	f006 ff6c 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a88e:	2800      	cmp	r0, #0
 800a890:	d1c0      	bne.n	800a814 <E131Params::callbackFunction(char const*)+0x11c>
 800a892:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a896:	6863      	ldr	r3, [r4, #4]
 800a898:	b112      	cbz	r2, 800a8a0 <E131Params::callbackFunction(char const*)+0x1a8>
 800a89a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800a89e:	e758      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a8a0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a8a4:	e755      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x5a>
 800a8a6:	bf00      	nop
 800a8a8:	08015ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, lr}
 800a8ac:	080145eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, lr}
 800a8b0:	08015fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, ip, lr}
 800a8b4:	08016004 	stmdaeq	r1, {r2, sp, lr}
 800a8b8:	080145c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, lr}
 800a8bc:	080145b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, lr}

0800a8c0 <E131Params::staticCallbackFunction(void*, char const*)>:
 800a8c0:	f7ff bf1a 	b.w	800a6f8 <E131Params::callbackFunction(char const*)>

0800a8c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800a8c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a8c8:	4604      	mov	r4, r0
 800a8ca:	4615      	mov	r5, r2
 800a8cc:	461e      	mov	r6, r3
 800a8ce:	b086      	sub	sp, #24
 800a8d0:	3004      	adds	r0, #4
 800a8d2:	2900      	cmp	r1, #0
 800a8d4:	d045      	beq.n	800a962 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800a8d6:	221f      	movs	r2, #31
 800a8d8:	f007 fc7f 	bl	80121da <memmove>
 800a8dc:	4633      	mov	r3, r6
 800a8de:	462a      	mov	r2, r5
 800a8e0:	4978      	ldr	r1, [pc, #480]	; (800aac4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800a8e2:	a803      	add	r0, sp, #12
 800a8e4:	f006 fd64 	bl	80113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a8e8:	2500      	movs	r5, #0
 800a8ea:	4e77      	ldr	r6, [pc, #476]	; (800aac8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800a8ec:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800aacc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800a8f0:	4f77      	ldr	r7, [pc, #476]	; (800aad0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800a8f2:	7fa3      	ldrb	r3, [r4, #30]
 800a8f4:	4631      	mov	r1, r6
 800a8f6:	412b      	asrs	r3, r5
 800a8f8:	f013 0f01 	tst.w	r3, #1
 800a8fc:	ea6f 0303 	mvn.w	r3, r3
 800a900:	bf0c      	ite	eq
 800a902:	4642      	moveq	r2, r8
 800a904:	463a      	movne	r2, r7
 800a906:	f003 0301 	and.w	r3, r3, #1
 800a90a:	a803      	add	r0, sp, #12
 800a90c:	3501      	adds	r5, #1
 800a90e:	f7ff fe57 	bl	800a5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a912:	2d04      	cmp	r5, #4
 800a914:	f106 0612 	add.w	r6, r6, #18
 800a918:	d1eb      	bne.n	800a8f2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800a91a:	2600      	movs	r6, #0
 800a91c:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800aad4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800a920:	4f6d      	ldr	r7, [pc, #436]	; (800aad8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800a922:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800aadc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800a926:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800aae0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800a92a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a92e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a932:	42ab      	cmp	r3, r5
 800a934:	d22c      	bcs.n	800a990 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800a936:	2110      	movs	r1, #16
 800a938:	9803      	ldr	r0, [sp, #12]
 800a93a:	1aed      	subs	r5, r5, r3
 800a93c:	4418      	add	r0, r3
 800a93e:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800a942:	f8b3 200b 	ldrh.w	r2, [r3, #11]
 800a946:	6863      	ldr	r3, [r4, #4]
 800a948:	40b1      	lsls	r1, r6
 800a94a:	ea31 0303 	bics.w	r3, r1, r3
 800a94e:	f89d c014 	ldrb.w	ip, [sp, #20]
 800a952:	d00d      	beq.n	800a970 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800a954:	f1bc 0f00 	cmp.w	ip, #0
 800a958:	d10d      	bne.n	800a976 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb2>
 800a95a:	9200      	str	r2, [sp, #0]
 800a95c:	4653      	mov	r3, sl
 800a95e:	464a      	mov	r2, r9
 800a960:	e00c      	b.n	800a97c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800a962:	6823      	ldr	r3, [r4, #0]
 800a964:	4601      	mov	r1, r0
 800a966:	681a      	ldr	r2, [r3, #0]
 800a968:	4618      	mov	r0, r3
 800a96a:	68d2      	ldr	r2, [r2, #12]
 800a96c:	4790      	blx	r2
 800a96e:	e7b5      	b.n	800a8dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800a970:	f1bc 0f00 	cmp.w	ip, #0
 800a974:	d05d      	beq.n	800aa32 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16e>
 800a976:	9200      	str	r2, [sp, #0]
 800a978:	4653      	mov	r3, sl
 800a97a:	463a      	mov	r2, r7
 800a97c:	4629      	mov	r1, r5
 800a97e:	f7fe fdf3 	bl	8009568 <snprintf>
 800a982:	4285      	cmp	r5, r0
 800a984:	bfa2      	ittt	ge
 800a986:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a98a:	18c0      	addge	r0, r0, r3
 800a98c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a990:	3601      	adds	r6, #1
 800a992:	2e04      	cmp	r6, #4
 800a994:	f10a 0a10 	add.w	sl, sl, #16
 800a998:	d1c7      	bne.n	800a92a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800a99a:	4952      	ldr	r1, [pc, #328]	; (800aae4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800a99c:	a803      	add	r0, sp, #12
 800a99e:	f006 fd8d 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800a9a2:	2500      	movs	r5, #0
 800a9a4:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800a9a8:	4e4f      	ldr	r6, [pc, #316]	; (800aae8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800a9aa:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800aaec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800a9ae:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800aaf0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800a9b2:	f104 0714 	add.w	r7, r4, #20
 800a9b6:	6861      	ldr	r1, [r4, #4]
 800a9b8:	fa0a f305 	lsl.w	r3, sl, r5
 800a9bc:	f817 2b01 	ldrb.w	r2, [r7], #1
 800a9c0:	438b      	bics	r3, r1
 800a9c2:	bf0c      	ite	eq
 800a9c4:	2301      	moveq	r3, #1
 800a9c6:	2300      	movne	r3, #0
 800a9c8:	4631      	mov	r1, r6
 800a9ca:	2a00      	cmp	r2, #0
 800a9cc:	bf0c      	ite	eq
 800a9ce:	464a      	moveq	r2, r9
 800a9d0:	4642      	movne	r2, r8
 800a9d2:	a803      	add	r0, sp, #12
 800a9d4:	3501      	adds	r5, #1
 800a9d6:	f7ff fdf3 	bl	800a5c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a9da:	2d04      	cmp	r5, #4
 800a9dc:	f106 0612 	add.w	r6, r6, #18
 800a9e0:	d1e9      	bne.n	800a9b6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 800a9e2:	4944      	ldr	r1, [pc, #272]	; (800aaf4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800a9e4:	a803      	add	r0, sp, #12
 800a9e6:	f006 fd69 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800a9ea:	2600      	movs	r6, #0
 800a9ec:	f8df a108 	ldr.w	sl, [pc, #264]	; 800aaf8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800a9f0:	4f39      	ldr	r7, [pc, #228]	; (800aad8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800a9f2:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800aadc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800a9f6:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800aae0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800a9fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a9fe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aa02:	42ab      	cmp	r3, r5
 800aa04:	d229      	bcs.n	800aa5a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800aa06:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800aa0a:	9803      	ldr	r0, [sp, #12]
 800aa0c:	1aed      	subs	r5, r5, r3
 800aa0e:	4418      	add	r0, r3
 800aa10:	f104 031f 	add.w	r3, r4, #31
 800aa14:	5d9a      	ldrb	r2, [r3, r6]
 800aa16:	6863      	ldr	r3, [r4, #4]
 800aa18:	40b1      	lsls	r1, r6
 800aa1a:	ea31 0303 	bics.w	r3, r1, r3
 800aa1e:	f89d c014 	ldrb.w	ip, [sp, #20]
 800aa22:	d00a      	beq.n	800aa3a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800aa24:	f1bc 0f00 	cmp.w	ip, #0
 800aa28:	d10a      	bne.n	800aa40 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800aa2a:	9200      	str	r2, [sp, #0]
 800aa2c:	4653      	mov	r3, sl
 800aa2e:	464a      	mov	r2, r9
 800aa30:	e009      	b.n	800aa46 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800aa32:	9200      	str	r2, [sp, #0]
 800aa34:	4653      	mov	r3, sl
 800aa36:	4642      	mov	r2, r8
 800aa38:	e7a0      	b.n	800a97c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800aa3a:	f1bc 0f00 	cmp.w	ip, #0
 800aa3e:	d03d      	beq.n	800aabc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800aa40:	9200      	str	r2, [sp, #0]
 800aa42:	4653      	mov	r3, sl
 800aa44:	463a      	mov	r2, r7
 800aa46:	4629      	mov	r1, r5
 800aa48:	f7fe fd8e 	bl	8009568 <snprintf>
 800aa4c:	4285      	cmp	r5, r0
 800aa4e:	bfa2      	ittt	ge
 800aa50:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800aa54:	18c0      	addge	r0, r0, r3
 800aa56:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800aa5a:	3601      	adds	r6, #1
 800aa5c:	2e04      	cmp	r6, #4
 800aa5e:	f10a 0a12 	add.w	sl, sl, #18
 800aa62:	d1ca      	bne.n	800a9fa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x136>
 800aa64:	4925      	ldr	r1, [pc, #148]	; (800aafc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800aa66:	a803      	add	r0, sp, #12
 800aa68:	f006 fd28 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800aa6c:	6862      	ldr	r2, [r4, #4]
 800aa6e:	4924      	ldr	r1, [pc, #144]	; (800ab00 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800aa70:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800aa74:	a803      	add	r0, sp, #12
 800aa76:	f7ff fdcb 	bl	800a610 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aa7a:	6862      	ldr	r2, [r4, #4]
 800aa7c:	4921      	ldr	r1, [pc, #132]	; (800ab04 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800aa7e:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800aa82:	a803      	add	r0, sp, #12
 800aa84:	f7ff fdc4 	bl	800a610 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aa88:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aa8c:	b17b      	cbz	r3, 800aaae <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800aa8e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aa92:	9b03      	ldr	r3, [sp, #12]
 800aa94:	4413      	add	r3, r2
 800aa96:	227d      	movs	r2, #125	; 0x7d
 800aa98:	f803 2c01 	strb.w	r2, [r3, #-1]
 800aa9c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aaa0:	9903      	ldr	r1, [sp, #12]
 800aaa2:	54ca      	strb	r2, [r1, r3]
 800aaa4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aaa8:	3301      	adds	r3, #1
 800aaaa:	f8ad 3012 	strh.w	r3, [sp, #18]
 800aaae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aab4:	601a      	str	r2, [r3, #0]
 800aab6:	b006      	add	sp, #24
 800aab8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aabc:	9200      	str	r2, [sp, #0]
 800aabe:	4653      	mov	r3, sl
 800aac0:	4642      	mov	r2, r8
 800aac2:	e7c0      	b.n	800aa46 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800aac4:	08014633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, lr}
 800aac8:	08016004 	stmdaeq	r1, {r2, sp, lr}
 800aacc:	08014583 	stmdaeq	r1, {r0, r1, r7, r8, sl, lr}
 800aad0:	08014589 	stmdaeq	r1, {r0, r3, r7, r8, sl, lr}
 800aad4:	08015ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, lr}
 800aad8:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800aadc:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}
 800aae0:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800aae4:	08014598 	stmdaeq	r1, {r3, r4, r7, r8, sl, lr}
 800aae8:	08015fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, ip, lr}
 800aaec:	08014590 	stmdaeq	r1, {r4, r7, r8, sl, lr}
 800aaf0:	08014594 	stmdaeq	r1, {r2, r4, r7, r8, sl, lr}
 800aaf4:	080145a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sl, lr}
 800aaf8:	080145eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, lr}
 800aafc:	080145ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, lr}
 800ab00:	080145c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, lr}
 800ab04:	080145b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, lr}

0800ab08 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ab08:	b513      	push	{r0, r1, r4, lr}
 800ab0a:	6804      	ldr	r4, [r0, #0]
 800ab0c:	b914      	cbnz	r4, 800ab14 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ab0e:	601c      	str	r4, [r3, #0]
 800ab10:	b002      	add	sp, #8
 800ab12:	bd10      	pop	{r4, pc}
 800ab14:	9300      	str	r3, [sp, #0]
 800ab16:	4613      	mov	r3, r2
 800ab18:	460a      	mov	r2, r1
 800ab1a:	2100      	movs	r1, #0
 800ab1c:	f7ff fed2 	bl	800a8c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ab20:	e7f6      	b.n	800ab10 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800ab22 <E131Params::Set(E131Bridge*)>:
 800ab22:	6843      	ldr	r3, [r0, #4]
 800ab24:	2b00      	cmp	r3, #0
 800ab26:	d034      	beq.n	800ab92 <E131Params::Set(E131Bridge*)+0x70>
 800ab28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab2c:	2300      	movs	r3, #0
 800ab2e:	f44f 7680 	mov.w	r6, #256	; 0x100
 800ab32:	f04f 0e44 	mov.w	lr, #68	; 0x44
 800ab36:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 800ab3a:	f100 0214 	add.w	r2, r0, #20
 800ab3e:	f201 5c4c 	addw	ip, r1, #1356	; 0x54c
 800ab42:	6845      	ldr	r5, [r0, #4]
 800ab44:	fa06 f403 	lsl.w	r4, r6, r3
 800ab48:	43ac      	bics	r4, r5
 800ab4a:	bf02      	ittt	eq
 800ab4c:	fb0e f403 	muleq.w	r4, lr, r3
 800ab50:	f892 8000 	ldrbeq.w	r8, [r2]
 800ab54:	f84c 8004 	streq.w	r8, [ip, r4]
 800ab58:	fa07 f403 	lsl.w	r4, r7, r3
 800ab5c:	43ac      	bics	r4, r5
 800ab5e:	d106      	bne.n	800ab6e <E131Params::Set(E131Bridge*)+0x4c>
 800ab60:	7ad5      	ldrb	r5, [r2, #11]
 800ab62:	1e6c      	subs	r4, r5, #1
 800ab64:	b2e4      	uxtb	r4, r4
 800ab66:	2cc7      	cmp	r4, #199	; 0xc7
 800ab68:	bf98      	it	ls
 800ab6a:	f881 5629 	strbls.w	r5, [r1, #1577]	; 0x629
 800ab6e:	3301      	adds	r3, #1
 800ab70:	2b04      	cmp	r3, #4
 800ab72:	f102 0201 	add.w	r2, r2, #1
 800ab76:	d1e4      	bne.n	800ab42 <E131Params::Set(E131Bridge*)+0x20>
 800ab78:	6843      	ldr	r3, [r0, #4]
 800ab7a:	04da      	lsls	r2, r3, #19
 800ab7c:	bf44      	itt	mi
 800ab7e:	2201      	movmi	r2, #1
 800ab80:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800ab84:	049b      	lsls	r3, r3, #18
 800ab86:	bf44      	itt	mi
 800ab88:	2301      	movmi	r3, #1
 800ab8a:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800ab8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab92:	4770      	bx	lr

0800ab94 <E131Params::Dump()>:
 800ab94:	4770      	bx	lr

0800ab96 <uuid_unparse_x>:
 800ab96:	4603      	mov	r3, r0
 800ab98:	b530      	push	{r4, r5, lr}
 800ab9a:	4608      	mov	r0, r1
 800ab9c:	4611      	mov	r1, r2
 800ab9e:	681a      	ldr	r2, [r3, #0]
 800aba0:	b08f      	sub	sp, #60	; 0x3c
 800aba2:	ba12      	rev	r2, r2
 800aba4:	920a      	str	r2, [sp, #40]	; 0x28
 800aba6:	889a      	ldrh	r2, [r3, #4]
 800aba8:	891c      	ldrh	r4, [r3, #8]
 800abaa:	ba52      	rev16	r2, r2
 800abac:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800abb0:	88da      	ldrh	r2, [r3, #6]
 800abb2:	ba64      	rev16	r4, r4
 800abb4:	ba52      	rev16	r2, r2
 800abb6:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800abba:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800abbe:	f103 020a 	add.w	r2, r3, #10
 800abc2:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800abc6:	3310      	adds	r3, #16
 800abc8:	4293      	cmp	r3, r2
 800abca:	d122      	bne.n	800ac12 <uuid_unparse_x+0x7c>
 800abcc:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800abd0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800abd4:	9208      	str	r2, [sp, #32]
 800abd6:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800abda:	0a1b      	lsrs	r3, r3, #8
 800abdc:	9207      	str	r2, [sp, #28]
 800abde:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800abe2:	9301      	str	r3, [sp, #4]
 800abe4:	9206      	str	r2, [sp, #24]
 800abe6:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800abea:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800abee:	9205      	str	r2, [sp, #20]
 800abf0:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800abf4:	9300      	str	r3, [sp, #0]
 800abf6:	9204      	str	r2, [sp, #16]
 800abf8:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800abfc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800ac00:	9203      	str	r2, [sp, #12]
 800ac02:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800ac06:	9202      	str	r2, [sp, #8]
 800ac08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ac0a:	f7fe fc95 	bl	8009538 <sprintf>
 800ac0e:	b00f      	add	sp, #60	; 0x3c
 800ac10:	bd30      	pop	{r4, r5, pc}
 800ac12:	f812 5b01 	ldrb.w	r5, [r2], #1
 800ac16:	f804 5b01 	strb.w	r5, [r4], #1
 800ac1a:	e7d5      	b.n	800abc8 <uuid_unparse_x+0x32>

0800ac1c <uuid_unparse>:
 800ac1c:	4a01      	ldr	r2, [pc, #4]	; (800ac24 <uuid_unparse+0x8>)
 800ac1e:	f7ff bfba 	b.w	800ab96 <uuid_unparse_x>
 800ac22:	bf00      	nop
 800ac24:	0801464a 	stmdaeq	r1, {r1, r3, r6, r9, sl, lr}

0800ac28 <WS28xxDmx::GetDmxStartAddress()>:
 800ac28:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 800ac2a:	4770      	bx	lr

0800ac2c <WS28xxDmx::GetDmxFootprint()>:
 800ac2c:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 800ac2e:	4770      	bx	lr

0800ac30 <WS28xxDmx::~WS28xxDmx()>:
 800ac30:	b538      	push	{r3, r4, r5, lr}
 800ac32:	4b06      	ldr	r3, [pc, #24]	; (800ac4c <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800ac34:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800ac36:	4604      	mov	r4, r0
 800ac38:	6003      	str	r3, [r0, #0]
 800ac3a:	b12d      	cbz	r5, 800ac48 <WS28xxDmx::~WS28xxDmx()+0x18>
 800ac3c:	4628      	mov	r0, r5
 800ac3e:	f001 ff5b 	bl	800caf8 <WS28xx::~WS28xx()>
 800ac42:	4628      	mov	r0, r5
 800ac44:	f007 fa06 	bl	8012054 <operator delete(void*)>
 800ac48:	4620      	mov	r0, r4
 800ac4a:	bd38      	pop	{r3, r4, r5, pc}
 800ac4c:	08014684 	stmdaeq	r1, {r2, r7, r9, sl, lr}

0800ac50 <WS28xxDmx::~WS28xxDmx()>:
 800ac50:	b510      	push	{r4, lr}
 800ac52:	4604      	mov	r4, r0
 800ac54:	f7ff ffec 	bl	800ac30 <WS28xxDmx::~WS28xxDmx()>
 800ac58:	4620      	mov	r0, r4
 800ac5a:	f007 f9fb 	bl	8012054 <operator delete(void*)>
 800ac5e:	4620      	mov	r0, r4
 800ac60:	bd10      	pop	{r4, pc}

0800ac62 <WS28xxDmx::Blackout(bool)>:
 800ac62:	b538      	push	{r3, r4, r5, lr}
 800ac64:	4605      	mov	r5, r0
 800ac66:	460c      	mov	r4, r1
 800ac68:	f880 1041 	strb.w	r1, [r0, #65]	; 0x41
 800ac6c:	f008 fbee 	bl	801344c <gd32_spi_dma_tx_is_active()>
 800ac70:	2800      	cmp	r0, #0
 800ac72:	d1fb      	bne.n	800ac6c <WS28xxDmx::Blackout(bool)+0xa>
 800ac74:	6b68      	ldr	r0, [r5, #52]	; 0x34
 800ac76:	b11c      	cbz	r4, 800ac80 <WS28xxDmx::Blackout(bool)+0x1e>
 800ac78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ac7c:	f001 bfb6 	b.w	800cbec <WS28xx::Blackout()>
 800ac80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ac84:	f001 bf96 	b.w	800cbb4 <WS28xx::Update()>

0800ac88 <WS28xxDmx::Start(unsigned int)>:
 800ac88:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800ac8c:	b93b      	cbnz	r3, 800ac9e <WS28xxDmx::Start(unsigned int)+0x16>
 800ac8e:	2301      	movs	r3, #1
 800ac90:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ac94:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ac96:	b110      	cbz	r0, 800ac9e <WS28xxDmx::Start(unsigned int)+0x16>
 800ac98:	6803      	ldr	r3, [r0, #0]
 800ac9a:	689b      	ldr	r3, [r3, #8]
 800ac9c:	4718      	bx	r3
 800ac9e:	4770      	bx	lr

0800aca0 <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800aca0:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 800aca2:	b508      	push	{r3, lr}
 800aca4:	428a      	cmp	r2, r1
 800aca6:	d101      	bne.n	800acac <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>
 800aca8:	2001      	movs	r0, #1
 800acaa:	bd08      	pop	{r3, pc}
 800acac:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800acae:	440a      	add	r2, r1
 800acb0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800acb4:	dc0b      	bgt.n	800acce <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 800acb6:	1e4a      	subs	r2, r1, #1
 800acb8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800acbc:	d207      	bcs.n	800acce <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 800acbe:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800acc0:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800acc2:	2800      	cmp	r0, #0
 800acc4:	d0f0      	beq.n	800aca8 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 800acc6:	6803      	ldr	r3, [r0, #0]
 800acc8:	69db      	ldr	r3, [r3, #28]
 800acca:	4798      	blx	r3
 800accc:	e7ec      	b.n	800aca8 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 800acce:	2000      	movs	r0, #0
 800acd0:	e7eb      	b.n	800acaa <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>

0800acd2 <WS28xxDmx::Stop(unsigned int)>:
 800acd2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800acd6:	b510      	push	{r4, lr}
 800acd8:	4604      	mov	r4, r0
 800acda:	b16b      	cbz	r3, 800acf8 <WS28xxDmx::Stop(unsigned int)+0x26>
 800acdc:	2300      	movs	r3, #0
 800acde:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ace2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ace4:	b108      	cbz	r0, 800acea <WS28xxDmx::Stop(unsigned int)+0x18>
 800ace6:	f001 ff81 	bl	800cbec <WS28xx::Blackout()>
 800acea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800acec:	b120      	cbz	r0, 800acf8 <WS28xxDmx::Stop(unsigned int)+0x26>
 800acee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800acf2:	6803      	ldr	r3, [r0, #0]
 800acf4:	68db      	ldr	r3, [r3, #12]
 800acf6:	4718      	bx	r3
 800acf8:	bd10      	pop	{r4, pc}

0800acfa <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800acfa:	4603      	mov	r3, r0
 800acfc:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 800acfe:	4288      	cmp	r0, r1
 800ad00:	f04f 0000 	mov.w	r0, #0
 800ad04:	d30f      	bcc.n	800ad26 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2c>
 800ad06:	7090      	strb	r0, [r2, #2]
 800ad08:	6a1b      	ldr	r3, [r3, #32]
 800ad0a:	fbb1 f0f3 	udiv	r0, r1, r3
 800ad0e:	fb03 1110 	mls	r1, r3, r0, r1
 800ad12:	2903      	cmp	r1, #3
 800ad14:	d80e      	bhi.n	800ad34 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3a>
 800ad16:	e8df f001 	tbb	[pc, r1]
 800ad1a:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800ad1e:	f240 2305 	movw	r3, #517	; 0x205
 800ad22:	2001      	movs	r0, #1
 800ad24:	8013      	strh	r3, [r2, #0]
 800ad26:	4770      	bx	lr
 800ad28:	f240 2306 	movw	r3, #518	; 0x206
 800ad2c:	e7f9      	b.n	800ad22 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 800ad2e:	f240 2307 	movw	r3, #519	; 0x207
 800ad32:	e7f6      	b.n	800ad22 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 800ad34:	f240 2312 	movw	r3, #530	; 0x212
 800ad38:	e7f3      	b.n	800ad22 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>

0800ad3a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800ad3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad3e:	b085      	sub	sp, #20
 800ad40:	4606      	mov	r6, r0
 800ad42:	4690      	mov	r8, r2
 800ad44:	4699      	mov	r9, r3
 800ad46:	9103      	str	r1, [sp, #12]
 800ad48:	f008 fb80 	bl	801344c <gd32_spi_dma_tx_is_active()>
 800ad4c:	2800      	cmp	r0, #0
 800ad4e:	d170      	bne.n	800ae32 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800ad50:	9b03      	ldr	r3, [sp, #12]
 800ad52:	6972      	ldr	r2, [r6, #20]
 800ad54:	f003 0103 	and.w	r1, r3, #3
 800ad58:	6a33      	ldr	r3, [r6, #32]
 800ad5a:	2902      	cmp	r1, #2
 800ad5c:	fbb9 f7f3 	udiv	r7, r9, r3
 800ad60:	d02b      	beq.n	800adba <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x80>
 800ad62:	2903      	cmp	r1, #3
 800ad64:	d030      	beq.n	800adc8 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800ad66:	2901      	cmp	r1, #1
 800ad68:	6875      	ldr	r5, [r6, #4]
 800ad6a:	d027      	beq.n	800adbc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800ad6c:	4297      	cmp	r7, r2
 800ad6e:	bf28      	it	cs
 800ad70:	4617      	movcs	r7, r2
 800ad72:	4295      	cmp	r5, r2
 800ad74:	d92a      	bls.n	800adcc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800ad76:	4605      	mov	r5, r0
 800ad78:	8df4      	ldrh	r4, [r6, #46]	; 0x2e
 800ad7a:	3c01      	subs	r4, #1
 800ad7c:	2b03      	cmp	r3, #3
 800ad7e:	4444      	add	r4, r8
 800ad80:	d12c      	bne.n	800addc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa2>
 800ad82:	42af      	cmp	r7, r5
 800ad84:	d948      	bls.n	800ae18 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800ad86:	eba4 0308 	sub.w	r3, r4, r8
 800ad8a:	4599      	cmp	r9, r3
 800ad8c:	d944      	bls.n	800ae18 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800ad8e:	f04f 0a00 	mov.w	sl, #0
 800ad92:	69b3      	ldr	r3, [r6, #24]
 800ad94:	f894 f000 	pld	[r4]
 800ad98:	fb03 fb05 	mul.w	fp, r3, r5
 800ad9c:	69b3      	ldr	r3, [r6, #24]
 800ad9e:	4553      	cmp	r3, sl
 800ada0:	d917      	bls.n	800add2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x98>
 800ada2:	78a2      	ldrb	r2, [r4, #2]
 800ada4:	7863      	ldrb	r3, [r4, #1]
 800ada6:	9200      	str	r2, [sp, #0]
 800ada8:	eb0b 010a 	add.w	r1, fp, sl
 800adac:	7822      	ldrb	r2, [r4, #0]
 800adae:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800adb0:	f001 f8c0 	bl	800bf34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800adb4:	f10a 0a01 	add.w	sl, sl, #1
 800adb8:	e7f0      	b.n	800ad9c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x62>
 800adba:	68b5      	ldr	r5, [r6, #8]
 800adbc:	442f      	add	r7, r5
 800adbe:	4297      	cmp	r7, r2
 800adc0:	bf28      	it	cs
 800adc2:	4617      	movcs	r7, r2
 800adc4:	4604      	mov	r4, r0
 800adc6:	e7d9      	b.n	800ad7c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 800adc8:	68f5      	ldr	r5, [r6, #12]
 800adca:	e7f7      	b.n	800adbc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800adcc:	4605      	mov	r5, r0
 800adce:	4604      	mov	r4, r0
 800add0:	e7d4      	b.n	800ad7c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 800add2:	3501      	adds	r5, #1
 800add4:	3403      	adds	r4, #3
 800add6:	e7d4      	b.n	800ad82 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x48>
 800add8:	3501      	adds	r5, #1
 800adda:	3404      	adds	r4, #4
 800addc:	42af      	cmp	r7, r5
 800adde:	d91b      	bls.n	800ae18 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800ade0:	eba4 0308 	sub.w	r3, r4, r8
 800ade4:	4599      	cmp	r9, r3
 800ade6:	d917      	bls.n	800ae18 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800ade8:	f04f 0a00 	mov.w	sl, #0
 800adec:	69b3      	ldr	r3, [r6, #24]
 800adee:	f894 f000 	pld	[r4]
 800adf2:	fb03 fb05 	mul.w	fp, r3, r5
 800adf6:	69b3      	ldr	r3, [r6, #24]
 800adf8:	4553      	cmp	r3, sl
 800adfa:	d9ed      	bls.n	800add8 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x9e>
 800adfc:	78e2      	ldrb	r2, [r4, #3]
 800adfe:	7863      	ldrb	r3, [r4, #1]
 800ae00:	9201      	str	r2, [sp, #4]
 800ae02:	78a2      	ldrb	r2, [r4, #2]
 800ae04:	eb0b 010a 	add.w	r1, fp, sl
 800ae08:	9200      	str	r2, [sp, #0]
 800ae0a:	7822      	ldrb	r2, [r4, #0]
 800ae0c:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800ae0e:	f001 fd5d 	bl	800c8cc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800ae12:	f10a 0a01 	add.w	sl, sl, #1
 800ae16:	e7ee      	b.n	800adf6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xbc>
 800ae18:	6933      	ldr	r3, [r6, #16]
 800ae1a:	9a03      	ldr	r2, [sp, #12]
 800ae1c:	429a      	cmp	r2, r3
 800ae1e:	d108      	bne.n	800ae32 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800ae20:	f896 3041 	ldrb.w	r3, [r6, #65]	; 0x41
 800ae24:	b92b      	cbnz	r3, 800ae32 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800ae26:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800ae28:	b005      	add	sp, #20
 800ae2a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae2e:	f001 bec1 	b.w	800cbb4 <WS28xx::Update()>
 800ae32:	b005      	add	sp, #20
 800ae34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ae38 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800ae38:	22ff      	movs	r2, #255	; 0xff
 800ae3a:	4b1d      	ldr	r3, [pc, #116]	; (800aeb0 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x78>)
 800ae3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae3e:	6003      	str	r3, [r0, #0]
 800ae40:	2300      	movs	r3, #0
 800ae42:	460d      	mov	r5, r1
 800ae44:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800ae48:	2101      	movs	r1, #1
 800ae4a:	f44f 72ff 	mov.w	r2, #510	; 0x1fe
 800ae4e:	e9c0 330d 	strd	r3, r3, [r0, #52]	; 0x34
 800ae52:	8483      	strh	r3, [r0, #36]	; 0x24
 800ae54:	6283      	str	r3, [r0, #40]	; 0x28
 800ae56:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ae58:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ae5c:	4b15      	ldr	r3, [pc, #84]	; (800aeb4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x7c>)
 800ae5e:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ae60:	6018      	str	r0, [r3, #0]
 800ae62:	f100 031c 	add.w	r3, r0, #28
 800ae66:	8602      	strh	r2, [r0, #48]	; 0x30
 800ae68:	9301      	str	r3, [sp, #4]
 800ae6a:	f100 0314 	add.w	r3, r0, #20
 800ae6e:	4604      	mov	r4, r0
 800ae70:	f100 0220 	add.w	r2, r0, #32
 800ae74:	9300      	str	r3, [sp, #0]
 800ae76:	1d03      	adds	r3, r0, #4
 800ae78:	4628      	mov	r0, r5
 800ae7a:	f000 fbcd 	bl	800b618 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800ae7e:	201c      	movs	r0, #28
 800ae80:	f007 f8ec 	bl	801205c <operator new(unsigned int)>
 800ae84:	4606      	mov	r6, r0
 800ae86:	4629      	mov	r1, r5
 800ae88:	f001 fe54 	bl	800cb34 <WS28xx::WS28xx(PixelConfiguration&)>
 800ae8c:	4630      	mov	r0, r6
 800ae8e:	6366      	str	r6, [r4, #52]	; 0x34
 800ae90:	f001 feac 	bl	800cbec <WS28xx::Blackout()>
 800ae94:	69ab      	ldr	r3, [r5, #24]
 800ae96:	6a22      	ldr	r2, [r4, #32]
 800ae98:	61a3      	str	r3, [r4, #24]
 800ae9a:	8bab      	ldrh	r3, [r5, #28]
 800ae9c:	4628      	mov	r0, r5
 800ae9e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800aea0:	6963      	ldr	r3, [r4, #20]
 800aea2:	4353      	muls	r3, r2
 800aea4:	8623      	strh	r3, [r4, #48]	; 0x30
 800aea6:	f000 fc0f 	bl	800b6c8 <PixelDmxConfiguration::Dump()>
 800aeaa:	4620      	mov	r0, r4
 800aeac:	b002      	add	sp, #8
 800aeae:	bd70      	pop	{r4, r5, r6, pc}
 800aeb0:	08014684 	stmdaeq	r1, {r2, r7, r9, sl, lr}
 800aeb4:	20001908 	andcs	r1, r0, r8, lsl #18

0800aeb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800aeb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aeba:	88c5      	ldrh	r5, [r0, #6]
 800aebc:	8886      	ldrh	r6, [r0, #4]
 800aebe:	42b5      	cmp	r5, r6
 800aec0:	d216      	bcs.n	800aef0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800aec2:	4604      	mov	r4, r0
 800aec4:	6800      	ldr	r0, [r0, #0]
 800aec6:	4428      	add	r0, r5
 800aec8:	1b75      	subs	r5, r6, r5
 800aeca:	7a26      	ldrb	r6, [r4, #8]
 800aecc:	b923      	cbnz	r3, 800aed8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800aece:	b926      	cbnz	r6, 800aeda <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800aed0:	9200      	str	r2, [sp, #0]
 800aed2:	460b      	mov	r3, r1
 800aed4:	4a09      	ldr	r2, [pc, #36]	; (800aefc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800aed6:	e003      	b.n	800aee0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800aed8:	b166      	cbz	r6, 800aef4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800aeda:	460b      	mov	r3, r1
 800aedc:	9200      	str	r2, [sp, #0]
 800aede:	4a08      	ldr	r2, [pc, #32]	; (800af00 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800aee0:	4629      	mov	r1, r5
 800aee2:	f7fe fb41 	bl	8009568 <snprintf>
 800aee6:	4285      	cmp	r5, r0
 800aee8:	bfa2      	ittt	ge
 800aeea:	88e3      	ldrhge	r3, [r4, #6]
 800aeec:	181b      	addge	r3, r3, r0
 800aeee:	80e3      	strhge	r3, [r4, #6]
 800aef0:	b002      	add	sp, #8
 800aef2:	bd70      	pop	{r4, r5, r6, pc}
 800aef4:	9200      	str	r2, [sp, #0]
 800aef6:	460b      	mov	r3, r1
 800aef8:	4a02      	ldr	r2, [pc, #8]	; (800af04 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800aefa:	e7f1      	b.n	800aee0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800aefc:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800af00:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800af04:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

0800af08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800af08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af0a:	88c5      	ldrh	r5, [r0, #6]
 800af0c:	8886      	ldrh	r6, [r0, #4]
 800af0e:	42b5      	cmp	r5, r6
 800af10:	d216      	bcs.n	800af40 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800af12:	4604      	mov	r4, r0
 800af14:	6800      	ldr	r0, [r0, #0]
 800af16:	4428      	add	r0, r5
 800af18:	1b75      	subs	r5, r6, r5
 800af1a:	7a26      	ldrb	r6, [r4, #8]
 800af1c:	b923      	cbnz	r3, 800af28 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800af1e:	b926      	cbnz	r6, 800af2a <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800af20:	9200      	str	r2, [sp, #0]
 800af22:	460b      	mov	r3, r1
 800af24:	4a09      	ldr	r2, [pc, #36]	; (800af4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800af26:	e003      	b.n	800af30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800af28:	b166      	cbz	r6, 800af44 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800af2a:	460b      	mov	r3, r1
 800af2c:	9200      	str	r2, [sp, #0]
 800af2e:	4a08      	ldr	r2, [pc, #32]	; (800af50 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800af30:	4629      	mov	r1, r5
 800af32:	f7fe fb19 	bl	8009568 <snprintf>
 800af36:	4285      	cmp	r5, r0
 800af38:	bfa2      	ittt	ge
 800af3a:	88e3      	ldrhge	r3, [r4, #6]
 800af3c:	181b      	addge	r3, r3, r0
 800af3e:	80e3      	strhge	r3, [r4, #6]
 800af40:	b002      	add	sp, #8
 800af42:	bd70      	pop	{r4, r5, r6, pc}
 800af44:	9200      	str	r2, [sp, #0]
 800af46:	460b      	mov	r3, r1
 800af48:	4a02      	ldr	r2, [pc, #8]	; (800af54 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800af4a:	e7f1      	b.n	800af30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800af4c:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800af50:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800af54:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

0800af58 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800af58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af5a:	88c5      	ldrh	r5, [r0, #6]
 800af5c:	8886      	ldrh	r6, [r0, #4]
 800af5e:	42b5      	cmp	r5, r6
 800af60:	d216      	bcs.n	800af90 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800af62:	4604      	mov	r4, r0
 800af64:	6800      	ldr	r0, [r0, #0]
 800af66:	4428      	add	r0, r5
 800af68:	1b75      	subs	r5, r6, r5
 800af6a:	7a26      	ldrb	r6, [r4, #8]
 800af6c:	b923      	cbnz	r3, 800af78 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800af6e:	b926      	cbnz	r6, 800af7a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800af70:	9200      	str	r2, [sp, #0]
 800af72:	460b      	mov	r3, r1
 800af74:	4a09      	ldr	r2, [pc, #36]	; (800af9c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800af76:	e003      	b.n	800af80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800af78:	b166      	cbz	r6, 800af94 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800af7a:	460b      	mov	r3, r1
 800af7c:	9200      	str	r2, [sp, #0]
 800af7e:	4a08      	ldr	r2, [pc, #32]	; (800afa0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800af80:	4629      	mov	r1, r5
 800af82:	f7fe faf1 	bl	8009568 <snprintf>
 800af86:	4285      	cmp	r5, r0
 800af88:	bfa2      	ittt	ge
 800af8a:	88e3      	ldrhge	r3, [r4, #6]
 800af8c:	181b      	addge	r3, r3, r0
 800af8e:	80e3      	strhge	r3, [r4, #6]
 800af90:	b002      	add	sp, #8
 800af92:	bd70      	pop	{r4, r5, r6, pc}
 800af94:	9200      	str	r2, [sp, #0]
 800af96:	460b      	mov	r3, r1
 800af98:	4a02      	ldr	r2, [pc, #8]	; (800afa4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800af9a:	e7f1      	b.n	800af80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800af9c:	0801456a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, lr}
 800afa0:	0801455f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, lr}
 800afa4:	0801456b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, lr}

0800afa8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800afa8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800afac:	4699      	mov	r9, r3
 800afae:	8885      	ldrh	r5, [r0, #4]
 800afb0:	88c3      	ldrh	r3, [r0, #6]
 800afb2:	4604      	mov	r4, r0
 800afb4:	42ab      	cmp	r3, r5
 800afb6:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800afba:	d227      	bcs.n	800b00c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800afbc:	6826      	ldr	r6, [r4, #0]
 800afbe:	4610      	mov	r0, r2
 800afc0:	460f      	mov	r7, r1
 800afc2:	f894 a008 	ldrb.w	sl, [r4, #8]
 800afc6:	441e      	add	r6, r3
 800afc8:	1aed      	subs	r5, r5, r3
 800afca:	f7fd fa73 	bl	80084b4 <__aeabi_f2d>
 800afce:	f1b9 0f00 	cmp.w	r9, #0
 800afd2:	d109      	bne.n	800afe8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800afd4:	f1ba 0f00 	cmp.w	sl, #0
 800afd8:	d109      	bne.n	800afee <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800afda:	463b      	mov	r3, r7
 800afdc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800afe0:	4a0f      	ldr	r2, [pc, #60]	; (800b020 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800afe2:	f8cd 8000 	str.w	r8, [sp]
 800afe6:	e008      	b.n	800affa <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800afe8:	f1ba 0f00 	cmp.w	sl, #0
 800afec:	d011      	beq.n	800b012 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800afee:	463b      	mov	r3, r7
 800aff0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800aff4:	4a0b      	ldr	r2, [pc, #44]	; (800b024 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800aff6:	f8cd 8000 	str.w	r8, [sp]
 800affa:	4629      	mov	r1, r5
 800affc:	4630      	mov	r0, r6
 800affe:	f7fe fab3 	bl	8009568 <snprintf>
 800b002:	4285      	cmp	r5, r0
 800b004:	bfa2      	ittt	ge
 800b006:	88e3      	ldrhge	r3, [r4, #6]
 800b008:	181b      	addge	r3, r3, r0
 800b00a:	80e3      	strhge	r3, [r4, #6]
 800b00c:	b004      	add	sp, #16
 800b00e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b012:	463b      	mov	r3, r7
 800b014:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b018:	4a03      	ldr	r2, [pc, #12]	; (800b028 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800b01a:	f8cd 8000 	str.w	r8, [sp]
 800b01e:	e7ec      	b.n	800affa <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800b020:	080146bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, lr}
 800b024:	080146b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, lr}
 800b028:	080146bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, lr}

0800b02c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800b02c:	2200      	movs	r2, #0
 800b02e:	6001      	str	r1, [r0, #0]
 800b030:	4910      	ldr	r1, [pc, #64]	; (800b074 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 800b032:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 800b036:	e9c0 2101 	strd	r2, r1, [r0, #4]
 800b03a:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800b03e:	81c1      	strh	r1, [r0, #14]
 800b040:	213d      	movs	r1, #61	; 0x3d
 800b042:	8201      	strh	r1, [r0, #16]
 800b044:	f240 11ff 	movw	r1, #511	; 0x1ff
 800b048:	8241      	strh	r1, [r0, #18]
 800b04a:	2101      	movs	r1, #1
 800b04c:	7541      	strb	r1, [r0, #21]
 800b04e:	2106      	movs	r1, #6
 800b050:	75c1      	strb	r1, [r0, #23]
 800b052:	4909      	ldr	r1, [pc, #36]	; (800b078 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 800b054:	7302      	strb	r2, [r0, #12]
 800b056:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b05a:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800b05e:	6201      	str	r1, [r0, #32]
 800b060:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800b064:	6241      	str	r1, [r0, #36]	; 0x24
 800b066:	211d      	movs	r1, #29
 800b068:	7582      	strb	r2, [r0, #22]
 800b06a:	8501      	strh	r1, [r0, #40]	; 0x28
 800b06c:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800b070:	4770      	bx	lr
 800b072:	bf00      	nop
 800b074:	0100aa03 	tsteq	r0, r3, lsl #20
 800b078:	00090005 	andeq	r0, r9, r5

0800b07c <WS28xxDmxParams::Load()>:
 800b07c:	b508      	push	{r3, lr}
 800b07e:	2300      	movs	r3, #0
 800b080:	4601      	mov	r1, r0
 800b082:	6043      	str	r3, [r0, #4]
 800b084:	6800      	ldr	r0, [r0, #0]
 800b086:	b120      	cbz	r0, 800b092 <WS28xxDmxParams::Load()+0x16>
 800b088:	6803      	ldr	r3, [r0, #0]
 800b08a:	3104      	adds	r1, #4
 800b08c:	68db      	ldr	r3, [r3, #12]
 800b08e:	4798      	blx	r3
 800b090:	2001      	movs	r0, #1
 800b092:	bd08      	pop	{r3, pc}

0800b094 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800b094:	6803      	ldr	r3, [r0, #0]
 800b096:	b1d3      	cbz	r3, 800b0ce <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800b098:	2300      	movs	r3, #0
 800b09a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b09c:	460d      	mov	r5, r1
 800b09e:	4616      	mov	r6, r2
 800b0a0:	4604      	mov	r4, r0
 800b0a2:	6043      	str	r3, [r0, #4]
 800b0a4:	4602      	mov	r2, r0
 800b0a6:	490a      	ldr	r1, [pc, #40]	; (800b0d0 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800b0a8:	4668      	mov	r0, sp
 800b0aa:	f006 fa21 	bl	80114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b0ae:	4632      	mov	r2, r6
 800b0b0:	4629      	mov	r1, r5
 800b0b2:	4668      	mov	r0, sp
 800b0b4:	f006 fa20 	bl	80114f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800b0b8:	4621      	mov	r1, r4
 800b0ba:	f851 0b04 	ldr.w	r0, [r1], #4
 800b0be:	6803      	ldr	r3, [r0, #0]
 800b0c0:	689b      	ldr	r3, [r3, #8]
 800b0c2:	4798      	blx	r3
 800b0c4:	4668      	mov	r0, sp
 800b0c6:	f006 fa16 	bl	80114f6 <ReadConfigFile::~ReadConfigFile()>
 800b0ca:	b002      	add	sp, #8
 800b0cc:	bd70      	pop	{r4, r5, r6, pc}
 800b0ce:	4770      	bx	lr
 800b0d0:	0800b31d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, ip, sp, pc}

0800b0d4 <WS28xxDmxParams::callbackFunction(char const*)>:
 800b0d4:	b530      	push	{r4, r5, lr}
 800b0d6:	2308      	movs	r3, #8
 800b0d8:	460d      	mov	r5, r1
 800b0da:	b089      	sub	sp, #36	; 0x24
 800b0dc:	4604      	mov	r4, r0
 800b0de:	9302      	str	r3, [sp, #8]
 800b0e0:	4628      	mov	r0, r5
 800b0e2:	4982      	ldr	r1, [pc, #520]	; (800b2ec <WS28xxDmxParams::callbackFunction(char const*)+0x218>)
 800b0e4:	446b      	add	r3, sp
 800b0e6:	aa04      	add	r2, sp, #16
 800b0e8:	f006 fa3a 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b0ec:	b9a0      	cbnz	r0, 800b118 <WS28xxDmxParams::callbackFunction(char const*)+0x44>
 800b0ee:	9b02      	ldr	r3, [sp, #8]
 800b0f0:	3320      	adds	r3, #32
 800b0f2:	446b      	add	r3, sp
 800b0f4:	f803 0c10 	strb.w	r0, [r3, #-16]
 800b0f8:	a804      	add	r0, sp, #16
 800b0fa:	f000 fe07 	bl	800bd0c <PixelType::GetType(char const*)>
 800b0fe:	280e      	cmp	r0, #14
 800b100:	bf08      	it	eq
 800b102:	2203      	moveq	r2, #3
 800b104:	6863      	ldr	r3, [r4, #4]
 800b106:	bf19      	ittee	ne
 800b108:	7220      	strbne	r0, [r4, #8]
 800b10a:	f043 0301 	orrne.w	r3, r3, #1
 800b10e:	7222      	strbeq	r2, [r4, #8]
 800b110:	f023 0301 	biceq.w	r3, r3, #1
 800b114:	6063      	str	r3, [r4, #4]
 800b116:	e033      	b.n	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b118:	4628      	mov	r0, r5
 800b11a:	4975      	ldr	r1, [pc, #468]	; (800b2f0 <WS28xxDmxParams::callbackFunction(char const*)+0x21c>)
 800b11c:	f10d 0202 	add.w	r2, sp, #2
 800b120:	f006 fada 	bl	80116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b124:	b990      	cbnz	r0, 800b14c <WS28xxDmxParams::callbackFunction(char const*)+0x78>
 800b126:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b12a:	6863      	ldr	r3, [r4, #4]
 800b12c:	1e51      	subs	r1, r2, #1
 800b12e:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800b132:	bf2d      	iteet	cs
 800b134:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800b138:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800b13c:	f043 0302 	orrcc.w	r3, r3, #2
 800b140:	7262      	strbcs	r2, [r4, #9]
 800b142:	bf24      	itt	cs
 800b144:	72a0      	strbcs	r0, [r4, #10]
 800b146:	f023 0302 	biccs.w	r3, r3, #2
 800b14a:	e7e3      	b.n	800b114 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800b14c:	2303      	movs	r3, #3
 800b14e:	4628      	mov	r0, r5
 800b150:	9302      	str	r3, [sp, #8]
 800b152:	4968      	ldr	r1, [pc, #416]	; (800b2f4 <WS28xxDmxParams::callbackFunction(char const*)+0x220>)
 800b154:	ab02      	add	r3, sp, #8
 800b156:	aa04      	add	r2, sp, #16
 800b158:	f006 fa02 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b15c:	b990      	cbnz	r0, 800b184 <WS28xxDmxParams::callbackFunction(char const*)+0xb0>
 800b15e:	9b02      	ldr	r3, [sp, #8]
 800b160:	3320      	adds	r3, #32
 800b162:	446b      	add	r3, sp
 800b164:	f803 0c10 	strb.w	r0, [r3, #-16]
 800b168:	a804      	add	r0, sp, #16
 800b16a:	f000 fdf3 	bl	800bd54 <PixelType::GetMap(char const*)>
 800b16e:	6863      	ldr	r3, [r4, #4]
 800b170:	2806      	cmp	r0, #6
 800b172:	bf14      	ite	ne
 800b174:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800b178:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800b17c:	6063      	str	r3, [r4, #4]
 800b17e:	75e0      	strb	r0, [r4, #23]
 800b180:	b009      	add	sp, #36	; 0x24
 800b182:	bd30      	pop	{r4, r5, pc}
 800b184:	4628      	mov	r0, r5
 800b186:	495c      	ldr	r1, [pc, #368]	; (800b2f8 <WS28xxDmxParams::callbackFunction(char const*)+0x224>)
 800b188:	aa01      	add	r2, sp, #4
 800b18a:	f006 fa02 	bl	8011592 <Sscan::Float(char const*, char const*, float&)>
 800b18e:	b960      	cbnz	r0, 800b1aa <WS28xxDmxParams::callbackFunction(char const*)+0xd6>
 800b190:	9801      	ldr	r0, [sp, #4]
 800b192:	f000 fe41 	bl	800be18 <PixelType::ConvertTxH(float)>
 800b196:	6863      	ldr	r3, [r4, #4]
 800b198:	b120      	cbz	r0, 800b1a4 <WS28xxDmxParams::callbackFunction(char const*)+0xd0>
 800b19a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b19e:	6063      	str	r3, [r4, #4]
 800b1a0:	7620      	strb	r0, [r4, #24]
 800b1a2:	e7ed      	b.n	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b1a4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b1a8:	e7f9      	b.n	800b19e <WS28xxDmxParams::callbackFunction(char const*)+0xca>
 800b1aa:	4628      	mov	r0, r5
 800b1ac:	4953      	ldr	r1, [pc, #332]	; (800b2fc <WS28xxDmxParams::callbackFunction(char const*)+0x228>)
 800b1ae:	aa01      	add	r2, sp, #4
 800b1b0:	f006 f9ef 	bl	8011592 <Sscan::Float(char const*, char const*, float&)>
 800b1b4:	b960      	cbnz	r0, 800b1d0 <WS28xxDmxParams::callbackFunction(char const*)+0xfc>
 800b1b6:	9801      	ldr	r0, [sp, #4]
 800b1b8:	f000 fe2e 	bl	800be18 <PixelType::ConvertTxH(float)>
 800b1bc:	6863      	ldr	r3, [r4, #4]
 800b1be:	b120      	cbz	r0, 800b1ca <WS28xxDmxParams::callbackFunction(char const*)+0xf6>
 800b1c0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800b1c4:	6063      	str	r3, [r4, #4]
 800b1c6:	7660      	strb	r0, [r4, #25]
 800b1c8:	e7da      	b.n	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b1ca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b1ce:	e7f9      	b.n	800b1c4 <WS28xxDmxParams::callbackFunction(char const*)+0xf0>
 800b1d0:	4628      	mov	r0, r5
 800b1d2:	494b      	ldr	r1, [pc, #300]	; (800b300 <WS28xxDmxParams::callbackFunction(char const*)+0x22c>)
 800b1d4:	f10d 0202 	add.w	r2, sp, #2
 800b1d8:	f006 fa7e 	bl	80116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b1dc:	b998      	cbnz	r0, 800b206 <WS28xxDmxParams::callbackFunction(char const*)+0x132>
 800b1de:	f240 25a6 	movw	r5, #678	; 0x2a6
 800b1e2:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800b1e6:	6863      	ldr	r3, [r4, #4]
 800b1e8:	1e8a      	subs	r2, r1, #2
 800b1ea:	b292      	uxth	r2, r2
 800b1ec:	42aa      	cmp	r2, r5
 800b1ee:	bf81      	itttt	hi
 800b1f0:	2201      	movhi	r2, #1
 800b1f2:	75a0      	strbhi	r0, [r4, #22]
 800b1f4:	7562      	strbhi	r2, [r4, #21]
 800b1f6:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800b1fa:	bf9c      	itt	ls
 800b1fc:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800b200:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800b204:	e786      	b.n	800b114 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800b206:	4628      	mov	r0, r5
 800b208:	493e      	ldr	r1, [pc, #248]	; (800b304 <WS28xxDmxParams::callbackFunction(char const*)+0x230>)
 800b20a:	aa03      	add	r2, sp, #12
 800b20c:	f006 fa82 	bl	8011714 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800b210:	b960      	cbnz	r0, 800b22c <WS28xxDmxParams::callbackFunction(char const*)+0x158>
 800b212:	9a03      	ldr	r2, [sp, #12]
 800b214:	493c      	ldr	r1, [pc, #240]	; (800b308 <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800b216:	6863      	ldr	r3, [r4, #4]
 800b218:	428a      	cmp	r2, r1
 800b21a:	bf14      	ite	ne
 800b21c:	f043 0310 	orrne.w	r3, r3, #16
 800b220:	f023 0310 	biceq.w	r3, r3, #16
 800b224:	6063      	str	r3, [r4, #4]
 800b226:	f8c4 200e 	str.w	r2, [r4, #14]
 800b22a:	e7a9      	b.n	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b22c:	4628      	mov	r0, r5
 800b22e:	4937      	ldr	r1, [pc, #220]	; (800b30c <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800b230:	f10d 0201 	add.w	r2, sp, #1
 800b234:	f006 fa97 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b238:	b988      	cbnz	r0, 800b25e <WS28xxDmxParams::callbackFunction(char const*)+0x18a>
 800b23a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800b23e:	6863      	ldr	r3, [r4, #4]
 800b240:	1e4a      	subs	r2, r1, #1
 800b242:	b2d2      	uxtb	r2, r2
 800b244:	2afd      	cmp	r2, #253	; 0xfd
 800b246:	bf83      	ittte	hi
 800b248:	f023 0320 	bichi.w	r3, r3, #32
 800b24c:	6063      	strhi	r3, [r4, #4]
 800b24e:	23ff      	movhi	r3, #255	; 0xff
 800b250:	f043 0320 	orrls.w	r3, r3, #32
 800b254:	bf9a      	itte	ls
 800b256:	6063      	strls	r3, [r4, #4]
 800b258:	74a1      	strbls	r1, [r4, #18]
 800b25a:	74a3      	strbhi	r3, [r4, #18]
 800b25c:	e790      	b.n	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b25e:	4628      	mov	r0, r5
 800b260:	492b      	ldr	r1, [pc, #172]	; (800b310 <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800b262:	f10d 0202 	add.w	r2, sp, #2
 800b266:	f006 fa37 	bl	80116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b26a:	b9b8      	cbnz	r0, 800b29c <WS28xxDmxParams::callbackFunction(char const*)+0x1c8>
 800b26c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b270:	6863      	ldr	r3, [r4, #4]
 800b272:	1e91      	subs	r1, r2, #2
 800b274:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800b278:	bf83      	ittte	hi
 800b27a:	2201      	movhi	r2, #1
 800b27c:	72e2      	strbhi	r2, [r4, #11]
 800b27e:	2200      	movhi	r2, #0
 800b280:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800b284:	bf92      	itee	ls
 800b286:	f043 0304 	orrls.w	r3, r3, #4
 800b28a:	7322      	strbhi	r2, [r4, #12]
 800b28c:	f023 0304 	bichi.w	r3, r3, #4
 800b290:	e740      	b.n	800b114 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800b292:	2201      	movs	r2, #1
 800b294:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b298:	8362      	strh	r2, [r4, #26]
 800b29a:	e00e      	b.n	800b2ba <WS28xxDmxParams::callbackFunction(char const*)+0x1e6>
 800b29c:	4628      	mov	r0, r5
 800b29e:	491d      	ldr	r1, [pc, #116]	; (800b314 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800b2a0:	f10d 0202 	add.w	r2, sp, #2
 800b2a4:	f006 fa18 	bl	80116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b2a8:	b940      	cbnz	r0, 800b2bc <WS28xxDmxParams::callbackFunction(char const*)+0x1e8>
 800b2aa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b2ae:	6863      	ldr	r3, [r4, #4]
 800b2b0:	2a00      	cmp	r2, #0
 800b2b2:	d0ee      	beq.n	800b292 <WS28xxDmxParams::callbackFunction(char const*)+0x1be>
 800b2b4:	8362      	strh	r2, [r4, #26]
 800b2b6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800b2ba:	6063      	str	r3, [r4, #4]
 800b2bc:	4628      	mov	r0, r5
 800b2be:	4916      	ldr	r1, [pc, #88]	; (800b318 <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800b2c0:	f10d 0201 	add.w	r2, sp, #1
 800b2c4:	f006 fa4f 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b2c8:	2800      	cmp	r0, #0
 800b2ca:	f47f af59 	bne.w	800b180 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800b2ce:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b2d2:	6863      	ldr	r3, [r4, #4]
 800b2d4:	1e51      	subs	r1, r2, #1
 800b2d6:	2904      	cmp	r1, #4
 800b2d8:	bf99      	ittee	ls
 800b2da:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800b2de:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800b2e2:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800b2e6:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800b2ea:	e713      	b.n	800b114 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800b2ec:	08015e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip, lr}
 800b2f0:	08015e71 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, fp, ip, lr}
 800b2f4:	08015e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip, lr}
 800b2f8:	08015e7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, lr}
 800b2fc:	08015e83 	stmdaeq	r1, {r0, r1, r7, r9, sl, fp, ip, lr}
 800b300:	08015e36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp, ip, lr}
 800b304:	08015e27 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, fp, ip, lr}
 800b308:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800b30c:	08015e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, ip, lr}
 800b310:	08015fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800b314:	08015f11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, lr}
 800b318:	08015ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, ip, lr}

0800b31c <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800b31c:	f7ff beda 	b.w	800b0d4 <WS28xxDmxParams::callbackFunction(char const*)>

0800b320 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800b320:	b570      	push	{r4, r5, r6, lr}
 800b322:	4604      	mov	r4, r0
 800b324:	4615      	mov	r5, r2
 800b326:	461e      	mov	r6, r3
 800b328:	b086      	sub	sp, #24
 800b32a:	3004      	adds	r0, #4
 800b32c:	2900      	cmp	r1, #0
 800b32e:	f000 808e 	beq.w	800b44e <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x12e>
 800b332:	2227      	movs	r2, #39	; 0x27
 800b334:	f006 ff51 	bl	80121da <memmove>
 800b338:	4633      	mov	r3, r6
 800b33a:	462a      	mov	r2, r5
 800b33c:	4974      	ldr	r1, [pc, #464]	; (800b510 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800b33e:	a803      	add	r0, sp, #12
 800b340:	f006 f836 	bl	80113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b344:	7a20      	ldrb	r0, [r4, #8]
 800b346:	f000 fcd5 	bl	800bcf4 <PixelType::GetType(pixel::Type)>
 800b34a:	6863      	ldr	r3, [r4, #4]
 800b34c:	4602      	mov	r2, r0
 800b34e:	4971      	ldr	r1, [pc, #452]	; (800b514 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800b350:	f003 0301 	and.w	r3, r3, #1
 800b354:	a803      	add	r0, sp, #12
 800b356:	f7ff fdff 	bl	800af58 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b35a:	6863      	ldr	r3, [r4, #4]
 800b35c:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800b360:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800b364:	496c      	ldr	r1, [pc, #432]	; (800b518 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800b366:	a803      	add	r0, sp, #12
 800b368:	f7ff fdce 	bl	800af08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b36c:	496b      	ldr	r1, [pc, #428]	; (800b51c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800b36e:	a803      	add	r0, sp, #12
 800b370:	f006 f8a4 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b374:	6863      	ldr	r3, [r4, #4]
 800b376:	059e      	lsls	r6, r3, #22
 800b378:	d403      	bmi.n	800b382 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x62>
 800b37a:	7a20      	ldrb	r0, [r4, #8]
 800b37c:	f000 f9a5 	bl	800b6ca <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800b380:	75e0      	strb	r0, [r4, #23]
 800b382:	7de0      	ldrb	r0, [r4, #23]
 800b384:	f000 fd0e 	bl	800bda4 <PixelType::GetMap(pixel::Map)>
 800b388:	6863      	ldr	r3, [r4, #4]
 800b38a:	4602      	mov	r2, r0
 800b38c:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800b390:	4963      	ldr	r1, [pc, #396]	; (800b520 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800b392:	a803      	add	r0, sp, #12
 800b394:	f7ff fde0 	bl	800af58 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b398:	6863      	ldr	r3, [r4, #4]
 800b39a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800b39e:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800b3a2:	d011      	beq.n	800b3c8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800b3a4:	f10d 020b 	add.w	r2, sp, #11
 800b3a8:	7a20      	ldrb	r0, [r4, #8]
 800b3aa:	f10d 010a 	add.w	r1, sp, #10
 800b3ae:	f000 f99b 	bl	800b6e8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800b3b2:	6863      	ldr	r3, [r4, #4]
 800b3b4:	055d      	lsls	r5, r3, #21
 800b3b6:	bf5c      	itt	pl
 800b3b8:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800b3bc:	7622      	strbpl	r2, [r4, #24]
 800b3be:	0518      	lsls	r0, r3, #20
 800b3c0:	bf5c      	itt	pl
 800b3c2:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800b3c6:	7663      	strbpl	r3, [r4, #25]
 800b3c8:	4956      	ldr	r1, [pc, #344]	; (800b524 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800b3ca:	a803      	add	r0, sp, #12
 800b3cc:	f006 f876 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b3d0:	7e20      	ldrb	r0, [r4, #24]
 800b3d2:	f000 fcf3 	bl	800bdbc <PixelType::ConvertTxH(unsigned char)>
 800b3d6:	2502      	movs	r5, #2
 800b3d8:	6863      	ldr	r3, [r4, #4]
 800b3da:	4602      	mov	r2, r0
 800b3dc:	4952      	ldr	r1, [pc, #328]	; (800b528 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800b3de:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800b3e2:	9500      	str	r5, [sp, #0]
 800b3e4:	a803      	add	r0, sp, #12
 800b3e6:	f7ff fddf 	bl	800afa8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800b3ea:	7e60      	ldrb	r0, [r4, #25]
 800b3ec:	f000 fce6 	bl	800bdbc <PixelType::ConvertTxH(unsigned char)>
 800b3f0:	6863      	ldr	r3, [r4, #4]
 800b3f2:	4602      	mov	r2, r0
 800b3f4:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800b3f8:	494c      	ldr	r1, [pc, #304]	; (800b52c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800b3fa:	9500      	str	r5, [sp, #0]
 800b3fc:	a803      	add	r0, sp, #12
 800b3fe:	f7ff fdd3 	bl	800afa8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800b402:	494b      	ldr	r1, [pc, #300]	; (800b530 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800b404:	a803      	add	r0, sp, #12
 800b406:	f006 f859 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b40a:	6863      	ldr	r3, [r4, #4]
 800b40c:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800b410:	4948      	ldr	r1, [pc, #288]	; (800b534 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800b412:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800b416:	a803      	add	r0, sp, #12
 800b418:	f7ff fd76 	bl	800af08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b41c:	4946      	ldr	r1, [pc, #280]	; (800b538 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800b41e:	a803      	add	r0, sp, #12
 800b420:	f006 f84c 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b424:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800b428:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b42c:	42a9      	cmp	r1, r5
 800b42e:	d224      	bcs.n	800b47a <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15a>
 800b430:	9803      	ldr	r0, [sp, #12]
 800b432:	1a6d      	subs	r5, r5, r1
 800b434:	4408      	add	r0, r1
 800b436:	6861      	ldr	r1, [r4, #4]
 800b438:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800b43c:	06c9      	lsls	r1, r1, #27
 800b43e:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800b442:	d40b      	bmi.n	800b45c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13c>
 800b444:	b962      	cbnz	r2, 800b460 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x140>
 800b446:	9300      	str	r3, [sp, #0]
 800b448:	4a3c      	ldr	r2, [pc, #240]	; (800b53c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800b44a:	4b3d      	ldr	r3, [pc, #244]	; (800b540 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800b44c:	e00b      	b.n	800b466 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800b44e:	6823      	ldr	r3, [r4, #0]
 800b450:	4601      	mov	r1, r0
 800b452:	681a      	ldr	r2, [r3, #0]
 800b454:	4618      	mov	r0, r3
 800b456:	68d2      	ldr	r2, [r2, #12]
 800b458:	4790      	blx	r2
 800b45a:	e76d      	b.n	800b338 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x18>
 800b45c:	2a00      	cmp	r2, #0
 800b45e:	d053      	beq.n	800b508 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1e8>
 800b460:	9300      	str	r3, [sp, #0]
 800b462:	4a38      	ldr	r2, [pc, #224]	; (800b544 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800b464:	4b36      	ldr	r3, [pc, #216]	; (800b540 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800b466:	4629      	mov	r1, r5
 800b468:	f7fe f87e 	bl	8009568 <snprintf>
 800b46c:	4285      	cmp	r5, r0
 800b46e:	bfa2      	ittt	ge
 800b470:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b474:	18c0      	addge	r0, r0, r3
 800b476:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b47a:	4933      	ldr	r1, [pc, #204]	; (800b548 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800b47c:	a803      	add	r0, sp, #12
 800b47e:	f006 f81d 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b482:	6863      	ldr	r3, [r4, #4]
 800b484:	7ca2      	ldrb	r2, [r4, #18]
 800b486:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800b48a:	4930      	ldr	r1, [pc, #192]	; (800b54c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800b48c:	a803      	add	r0, sp, #12
 800b48e:	f7ff fd13 	bl	800aeb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800b492:	492f      	ldr	r1, [pc, #188]	; (800b550 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800b494:	a803      	add	r0, sp, #12
 800b496:	f006 f811 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b49a:	6863      	ldr	r3, [r4, #4]
 800b49c:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800b4a0:	492c      	ldr	r1, [pc, #176]	; (800b554 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800b4a2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800b4a6:	a803      	add	r0, sp, #12
 800b4a8:	f7ff fd2e 	bl	800af08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b4ac:	6863      	ldr	r3, [r4, #4]
 800b4ae:	8b62      	ldrh	r2, [r4, #26]
 800b4b0:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800b4b4:	4928      	ldr	r1, [pc, #160]	; (800b558 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800b4b6:	a803      	add	r0, sp, #12
 800b4b8:	f7ff fd26 	bl	800af08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b4bc:	4927      	ldr	r1, [pc, #156]	; (800b55c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800b4be:	a803      	add	r0, sp, #12
 800b4c0:	f005 fffc 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 800b4c4:	6863      	ldr	r3, [r4, #4]
 800b4c6:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800b4ca:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800b4ce:	4924      	ldr	r1, [pc, #144]	; (800b560 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800b4d0:	a803      	add	r0, sp, #12
 800b4d2:	f7ff fcf1 	bl	800aeb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800b4d6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b4da:	b17b      	cbz	r3, 800b4fc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1dc>
 800b4dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b4e0:	9b03      	ldr	r3, [sp, #12]
 800b4e2:	4413      	add	r3, r2
 800b4e4:	227d      	movs	r2, #125	; 0x7d
 800b4e6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b4ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b4ee:	9903      	ldr	r1, [sp, #12]
 800b4f0:	54ca      	strb	r2, [r1, r3]
 800b4f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b4f6:	3301      	adds	r3, #1
 800b4f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b4fc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b500:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b502:	601a      	str	r2, [r3, #0]
 800b504:	b006      	add	sp, #24
 800b506:	bd70      	pop	{r4, r5, r6, pc}
 800b508:	9300      	str	r3, [sp, #0]
 800b50a:	4a16      	ldr	r2, [pc, #88]	; (800b564 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800b50c:	4b0c      	ldr	r3, [pc, #48]	; (800b540 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800b50e:	e7aa      	b.n	800b466 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800b510:	08015e8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, fp, ip, lr}
 800b514:	08015e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip, lr}
 800b518:	08015e71 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, fp, ip, lr}
 800b51c:	080146c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, lr}
 800b520:	08015e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip, lr}
 800b524:	080146d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, lr}
 800b528:	08015e7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, lr}
 800b52c:	08015e83 	stmdaeq	r1, {r0, r1, r7, r9, sl, fp, ip, lr}
 800b530:	080146ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, sl, lr}
 800b534:	08015e36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp, ip, lr}
 800b538:	080146f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, lr}
 800b53c:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800b540:	08015e27 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, fp, ip, lr}
 800b544:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800b548:	0801470a 	stmdaeq	r1, {r1, r3, r8, r9, sl, lr}
 800b54c:	08015e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, ip, lr}
 800b550:	08015e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, ip, lr}
 800b554:	08015fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800b558:	08015f11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, lr}
 800b55c:	08014718 	stmdaeq	r1, {r3, r4, r8, r9, sl, lr}
 800b560:	08015ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, ip, lr}
 800b564:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

0800b568 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800b568:	b513      	push	{r0, r1, r4, lr}
 800b56a:	6804      	ldr	r4, [r0, #0]
 800b56c:	b914      	cbnz	r4, 800b574 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b56e:	601c      	str	r4, [r3, #0]
 800b570:	b002      	add	sp, #8
 800b572:	bd10      	pop	{r4, pc}
 800b574:	9300      	str	r3, [sp, #0]
 800b576:	4613      	mov	r3, r2
 800b578:	460a      	mov	r2, r1
 800b57a:	2100      	movs	r1, #0
 800b57c:	f7ff fed0 	bl	800b320 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800b580:	e7f6      	b.n	800b570 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b582 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800b582:	6843      	ldr	r3, [r0, #4]
 800b584:	07da      	lsls	r2, r3, #31
 800b586:	bf44      	itt	mi
 800b588:	7a02      	ldrbmi	r2, [r0, #8]
 800b58a:	600a      	strmi	r2, [r1, #0]
 800b58c:	079a      	lsls	r2, r3, #30
 800b58e:	d505      	bpl.n	800b59c <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800b590:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800b594:	2a00      	cmp	r2, #0
 800b596:	bf08      	it	eq
 800b598:	22aa      	moveq	r2, #170	; 0xaa
 800b59a:	604a      	str	r2, [r1, #4]
 800b59c:	059a      	lsls	r2, r3, #22
 800b59e:	bf44      	itt	mi
 800b5a0:	7dc2      	ldrbmi	r2, [r0, #23]
 800b5a2:	608a      	strmi	r2, [r1, #8]
 800b5a4:	055a      	lsls	r2, r3, #21
 800b5a6:	bf44      	itt	mi
 800b5a8:	7e02      	ldrbmi	r2, [r0, #24]
 800b5aa:	740a      	strbmi	r2, [r1, #16]
 800b5ac:	051a      	lsls	r2, r3, #20
 800b5ae:	bf44      	itt	mi
 800b5b0:	7e42      	ldrbmi	r2, [r0, #25]
 800b5b2:	744a      	strbmi	r2, [r1, #17]
 800b5b4:	06da      	lsls	r2, r3, #27
 800b5b6:	bf44      	itt	mi
 800b5b8:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800b5bc:	60ca      	strmi	r2, [r1, #12]
 800b5be:	069a      	lsls	r2, r3, #26
 800b5c0:	bf44      	itt	mi
 800b5c2:	7c82      	ldrbmi	r2, [r0, #18]
 800b5c4:	748a      	strbmi	r2, [r1, #18]
 800b5c6:	075a      	lsls	r2, r3, #29
 800b5c8:	d50b      	bpl.n	800b5e2 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x60>
 800b5ca:	7ac2      	ldrb	r2, [r0, #11]
 800b5cc:	b510      	push	{r4, lr}
 800b5ce:	7b04      	ldrb	r4, [r0, #12]
 800b5d0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800b5d4:	838a      	strh	r2, [r1, #28]
 800b5d6:	05da      	lsls	r2, r3, #23
 800b5d8:	bf44      	itt	mi
 800b5da:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800b5de:	618b      	strmi	r3, [r1, #24]
 800b5e0:	bd10      	pop	{r4, pc}
 800b5e2:	05db      	lsls	r3, r3, #23
 800b5e4:	bf44      	itt	mi
 800b5e6:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800b5ea:	618b      	strmi	r3, [r1, #24]
 800b5ec:	4770      	bx	lr

0800b5ee <WS28xxDmxParams::Dump()>:
 800b5ee:	4770      	bx	lr

0800b5f0 <WS28xxDmx::Print()>:
 800b5f0:	b510      	push	{r4, lr}
 800b5f2:	4604      	mov	r4, r0
 800b5f4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b5f6:	f000 fc5b 	bl	800beb0 <WS28xx::Print()>
 800b5fa:	4805      	ldr	r0, [pc, #20]	; (800b610 <WS28xxDmx::Print()+0x20>)
 800b5fc:	f7fd ff8c 	bl	8009518 <printf>
 800b600:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800b604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b608:	4802      	ldr	r0, [pc, #8]	; (800b614 <WS28xxDmx::Print()+0x24>)
 800b60a:	f7fd bf85 	b.w	8009518 <printf>
 800b60e:	bf00      	nop
 800b610:	08014725 	stmdaeq	r1, {r0, r2, r5, r8, r9, sl, lr}
 800b614:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}

0800b618 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800b618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b61c:	460e      	mov	r6, r1
 800b61e:	4611      	mov	r1, r2
 800b620:	4604      	mov	r4, r0
 800b622:	4690      	mov	r8, r2
 800b624:	461d      	mov	r5, r3
 800b626:	9f06      	ldr	r7, [sp, #24]
 800b628:	f000 f86c 	bl	800b704 <PixelConfiguration::Validate(unsigned int&)>
 800b62c:	2e01      	cmp	r6, #1
 800b62e:	d009      	beq.n	800b644 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800b630:	7ce2      	ldrb	r2, [r4, #19]
 800b632:	b93a      	cbnz	r2, 800b644 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800b634:	2e04      	cmp	r6, #4
 800b636:	d13f      	bne.n	800b6b8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa0>
 800b638:	2303      	movs	r3, #3
 800b63a:	6023      	str	r3, [r4, #0]
 800b63c:	4641      	mov	r1, r8
 800b63e:	4620      	mov	r0, r4
 800b640:	f000 f860 	bl	800b704 <PixelConfiguration::Validate(unsigned int&)>
 800b644:	6823      	ldr	r3, [r4, #0]
 800b646:	2b07      	cmp	r3, #7
 800b648:	bf0d      	iteet	eq
 800b64a:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800b64e:	f44f 73aa 	movne.w	r3, #340	; 0x154
 800b652:	22aa      	movne	r2, #170	; 0xaa
 800b654:	2180      	moveq	r1, #128	; 0x80
 800b656:	bf15      	itete	ne
 800b658:	e9c5 2300 	strdne	r2, r3, [r5]
 800b65c:	e9c5 1300 	strdeq	r1, r3, [r5]
 800b660:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800b664:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800b668:	69a2      	ldr	r2, [r4, #24]
 800b66a:	60ab      	str	r3, [r5, #8]
 800b66c:	6863      	ldr	r3, [r4, #4]
 800b66e:	b10a      	cbz	r2, 800b674 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 800b670:	429a      	cmp	r2, r3
 800b672:	d900      	bls.n	800b676 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 800b674:	61a3      	str	r3, [r4, #24]
 800b676:	69a2      	ldr	r2, [r4, #24]
 800b678:	fbb3 f3f2 	udiv	r3, r3, r2
 800b67c:	603b      	str	r3, [r7, #0]
 800b67e:	6963      	ldr	r3, [r4, #20]
 800b680:	682a      	ldr	r2, [r5, #0]
 800b682:	42b3      	cmp	r3, r6
 800b684:	bf94      	ite	ls
 800b686:	6163      	strls	r3, [r4, #20]
 800b688:	6166      	strhi	r6, [r4, #20]
 800b68a:	1c53      	adds	r3, r2, #1
 800b68c:	683a      	ldr	r2, [r7, #0]
 800b68e:	2e01      	cmp	r6, #1
 800b690:	fbb2 f2f3 	udiv	r2, r2, r3
 800b694:	9b07      	ldr	r3, [sp, #28]
 800b696:	f102 0201 	add.w	r2, r2, #1
 800b69a:	601a      	str	r2, [r3, #0]
 800b69c:	bf09      	itett	eq
 800b69e:	682a      	ldreq	r2, [r5, #0]
 800b6a0:	6963      	ldrne	r3, [r4, #20]
 800b6a2:	1c53      	addeq	r3, r2, #1
 800b6a4:	683a      	ldreq	r2, [r7, #0]
 800b6a6:	bf16      	itet	ne
 800b6a8:	435a      	mulne	r2, r3
 800b6aa:	fbb2 f2f3 	udiveq	r2, r2, r3
 800b6ae:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800b6b2:	60ea      	str	r2, [r5, #12]
 800b6b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6b8:	6823      	ldr	r3, [r4, #0]
 800b6ba:	2b00      	cmp	r3, #0
 800b6bc:	d0be      	beq.n	800b63c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800b6be:	3b0b      	subs	r3, #11
 800b6c0:	2b01      	cmp	r3, #1
 800b6c2:	bf88      	it	hi
 800b6c4:	6022      	strhi	r2, [r4, #0]
 800b6c6:	e7b9      	b.n	800b63c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800b6c8 <PixelDmxConfiguration::Dump()>:
 800b6c8:	4770      	bx	lr

0800b6ca <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800b6ca:	f020 0308 	bic.w	r3, r0, #8
 800b6ce:	2b01      	cmp	r3, #1
 800b6d0:	d006      	beq.n	800b6e0 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800b6d2:	2808      	cmp	r0, #8
 800b6d4:	d006      	beq.n	800b6e4 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800b6d6:	280a      	cmp	r0, #10
 800b6d8:	bf14      	ite	ne
 800b6da:	2002      	movne	r0, #2
 800b6dc:	2005      	moveq	r0, #5
 800b6de:	4770      	bx	lr
 800b6e0:	2000      	movs	r0, #0
 800b6e2:	4770      	bx	lr
 800b6e4:	2004      	movs	r0, #4
 800b6e6:	4770      	bx	lr

0800b6e8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800b6e8:	23c0      	movs	r3, #192	; 0xc0
 800b6ea:	2803      	cmp	r0, #3
 800b6ec:	700b      	strb	r3, [r1, #0]
 800b6ee:	d006      	beq.n	800b6fe <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800b6f0:	3808      	subs	r0, #8
 800b6f2:	2803      	cmp	r0, #3
 800b6f4:	bf34      	ite	cc
 800b6f6:	23fc      	movcc	r3, #252	; 0xfc
 800b6f8:	23f0      	movcs	r3, #240	; 0xf0
 800b6fa:	7013      	strb	r3, [r2, #0]
 800b6fc:	4770      	bx	lr
 800b6fe:	23f8      	movs	r3, #248	; 0xf8
 800b700:	e7fb      	b.n	800b6fa <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800b704 <PixelConfiguration::Validate(unsigned int&)>:
 800b704:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b706:	e9d0 5300 	ldrd	r5, r3, [r0]
 800b70a:	2d07      	cmp	r5, #7
 800b70c:	4604      	mov	r4, r0
 800b70e:	6882      	ldr	r2, [r0, #8]
 800b710:	d129      	bne.n	800b766 <PixelConfiguration::Validate(unsigned int&)+0x62>
 800b712:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b716:	bf28      	it	cs
 800b718:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800b71c:	6043      	str	r3, [r0, #4]
 800b71e:	2304      	movs	r3, #4
 800b720:	600b      	str	r3, [r1, #0]
 800b722:	2301      	movs	r3, #1
 800b724:	2a06      	cmp	r2, #6
 800b726:	74e3      	strb	r3, [r4, #19]
 800b728:	d103      	bne.n	800b732 <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800b72a:	4628      	mov	r0, r5
 800b72c:	f7ff ffcd 	bl	800b6ca <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800b730:	60a0      	str	r0, [r4, #8]
 800b732:	7c63      	ldrb	r3, [r4, #17]
 800b734:	7c22      	ldrb	r2, [r4, #16]
 800b736:	4628      	mov	r0, r5
 800b738:	429a      	cmp	r2, r3
 800b73a:	bf28      	it	cs
 800b73c:	2300      	movcs	r3, #0
 800b73e:	f10d 0207 	add.w	r2, sp, #7
 800b742:	bf28      	it	cs
 800b744:	8223      	strhcs	r3, [r4, #16]
 800b746:	f10d 0106 	add.w	r1, sp, #6
 800b74a:	f7ff ffcd 	bl	800b6e8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800b74e:	7c23      	ldrb	r3, [r4, #16]
 800b750:	b913      	cbnz	r3, 800b758 <PixelConfiguration::Validate(unsigned int&)+0x54>
 800b752:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800b756:	7423      	strb	r3, [r4, #16]
 800b758:	7c63      	ldrb	r3, [r4, #17]
 800b75a:	b913      	cbnz	r3, 800b762 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800b75c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b760:	7463      	strb	r3, [r4, #17]
 800b762:	4b1a      	ldr	r3, [pc, #104]	; (800b7cc <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800b764:	e020      	b.n	800b7a8 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800b766:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800b76a:	bf28      	it	cs
 800b76c:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800b770:	6043      	str	r3, [r0, #4]
 800b772:	2303      	movs	r3, #3
 800b774:	600b      	str	r3, [r1, #0]
 800b776:	f1a5 030b 	sub.w	r3, r5, #11
 800b77a:	2b01      	cmp	r3, #1
 800b77c:	d806      	bhi.n	800b78c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800b77e:	7c83      	ldrb	r3, [r0, #18]
 800b780:	2b1f      	cmp	r3, #31
 800b782:	d81d      	bhi.n	800b7c0 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800b784:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800b788:	74a3      	strb	r3, [r4, #18]
 800b78a:	e000      	b.n	800b78e <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800b78c:	b9d5      	cbnz	r5, 800b7c4 <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800b78e:	2300      	movs	r3, #0
 800b790:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800b794:	2a06      	cmp	r2, #6
 800b796:	bf08      	it	eq
 800b798:	60a3      	streq	r3, [r4, #8]
 800b79a:	2d0d      	cmp	r5, #13
 800b79c:	74e3      	strb	r3, [r4, #19]
 800b79e:	8221      	strh	r1, [r4, #16]
 800b7a0:	68e3      	ldr	r3, [r4, #12]
 800b7a2:	d109      	bne.n	800b7b8 <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800b7a4:	b913      	cbnz	r3, 800b7ac <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800b7a6:	4b0a      	ldr	r3, [pc, #40]	; (800b7d0 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800b7a8:	60e3      	str	r3, [r4, #12]
 800b7aa:	e003      	b.n	800b7b4 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800b7ac:	4a09      	ldr	r2, [pc, #36]	; (800b7d4 <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800b7ae:	4293      	cmp	r3, r2
 800b7b0:	d900      	bls.n	800b7b4 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800b7b2:	60e2      	str	r2, [r4, #12]
 800b7b4:	b003      	add	sp, #12
 800b7b6:	bd30      	pop	{r4, r5, pc}
 800b7b8:	2b00      	cmp	r3, #0
 800b7ba:	d0f4      	beq.n	800b7a6 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800b7bc:	4a06      	ldr	r2, [pc, #24]	; (800b7d8 <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800b7be:	e7f6      	b.n	800b7ae <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800b7c0:	23ff      	movs	r3, #255	; 0xff
 800b7c2:	e7e1      	b.n	800b788 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800b7c4:	2d0d      	cmp	r5, #13
 800b7c6:	d0e2      	beq.n	800b78e <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800b7c8:	e7ab      	b.n	800b722 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800b7ca:	bf00      	nop
 800b7cc:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800b7d0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800b7d4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800b7d8:	017d7840 	cmneq	sp, r0, asr #16

0800b7dc <PixelConfiguration::Dump()>:
 800b7dc:	4770      	bx	lr
	...

0800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>:
 800b7e0:	b507      	push	{r0, r1, r2, lr}
 800b7e2:	b2cb      	uxtb	r3, r1
 800b7e4:	9300      	str	r3, [sp, #0]
 800b7e6:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800b7ea:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800b7ee:	4601      	mov	r1, r0
 800b7f0:	4803      	ldr	r0, [pc, #12]	; (800b800 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]+0x20>)
 800b7f2:	6800      	ldr	r0, [r0, #0]
 800b7f4:	f000 fb9e 	bl	800bf34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800b7f8:	b003      	add	sp, #12
 800b7fa:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7fe:	bf00      	nop
 800b800:	20001938 	andcs	r1, r0, r8, lsr r9

0800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800b804:	b538      	push	{r3, r4, r5, lr}
 800b806:	2400      	movs	r4, #0
 800b808:	4d05      	ldr	r5, [pc, #20]	; (800b820 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800b80a:	682b      	ldr	r3, [r5, #0]
 800b80c:	42a3      	cmp	r3, r4
 800b80e:	d905      	bls.n	800b81c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x18>
 800b810:	4620      	mov	r0, r4
 800b812:	2100      	movs	r1, #0
 800b814:	f7ff ffe4 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b818:	3401      	adds	r4, #1
 800b81a:	e7f6      	b.n	800b80a <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800b81c:	bd38      	pop	{r3, r4, r5, pc}
 800b81e:	bf00      	nop
 800b820:	20001934 	andcs	r1, r0, r4, lsr r9

0800b824 <PixelPatterns::PixelPatterns(unsigned int)>:
 800b824:	2901      	cmp	r1, #1
 800b826:	bf28      	it	cs
 800b828:	2101      	movcs	r1, #1
 800b82a:	4b08      	ldr	r3, [pc, #32]	; (800b84c <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800b82c:	4a08      	ldr	r2, [pc, #32]	; (800b850 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800b82e:	681b      	ldr	r3, [r3, #0]
 800b830:	6013      	str	r3, [r2, #0]
 800b832:	4a08      	ldr	r2, [pc, #32]	; (800b854 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800b834:	6011      	str	r1, [r2, #0]
 800b836:	685a      	ldr	r2, [r3, #4]
 800b838:	4b07      	ldr	r3, [pc, #28]	; (800b858 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800b83a:	601a      	str	r2, [r3, #0]
 800b83c:	2200      	movs	r2, #0
 800b83e:	4b07      	ldr	r3, [pc, #28]	; (800b85c <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800b840:	6819      	ldr	r1, [r3, #0]
 800b842:	4b07      	ldr	r3, [pc, #28]	; (800b860 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800b844:	61da      	str	r2, [r3, #28]
 800b846:	6019      	str	r1, [r3, #0]
 800b848:	619a      	str	r2, [r3, #24]
 800b84a:	4770      	bx	lr
 800b84c:	20001944 	andcs	r1, r0, r4, asr #18
 800b850:	20001938 	andcs	r1, r0, r8, lsr r9
 800b854:	2000192c 	andcs	r1, r0, ip, lsr #18
 800b858:	20001934 	andcs	r1, r0, r4, lsr r9
 800b85c:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800b860:	2000190c 	andcs	r1, r0, ip, lsl #18

0800b864 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800b864:	2805      	cmp	r0, #5
 800b866:	bfdd      	ittte	le
 800b868:	220e      	movle	r2, #14
 800b86a:	4b02      	ldrle	r3, [pc, #8]	; (800b874 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800b86c:	fb02 3000 	mlale	r0, r2, r0, r3
 800b870:	4801      	ldrgt	r0, [pc, #4]	; (800b878 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800b872:	4770      	bx	lr
 800b874:	08014767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, lr}
 800b878:	0801475f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}

0800b87c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b87c:	b570      	push	{r4, r5, r6, lr}
 800b87e:	460e      	mov	r6, r1
 800b880:	4615      	mov	r5, r2
 800b882:	461c      	mov	r4, r3
 800b884:	f7ff ffbe 	bl	800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b888:	2301      	movs	r3, #1
 800b88a:	4905      	ldr	r1, [pc, #20]	; (800b8a0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800b88c:	22ff      	movs	r2, #255	; 0xff
 800b88e:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b892:	61cb      	str	r3, [r1, #28]
 800b894:	2300      	movs	r3, #0
 800b896:	604d      	str	r5, [r1, #4]
 800b898:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800b89c:	618c      	str	r4, [r1, #24]
 800b89e:	bd70      	pop	{r4, r5, r6, pc}
 800b8a0:	2000190c 	andcs	r1, r0, ip, lsl #18

0800b8a4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b8a4:	b570      	push	{r4, r5, r6, lr}
 800b8a6:	460e      	mov	r6, r1
 800b8a8:	461c      	mov	r4, r3
 800b8aa:	4615      	mov	r5, r2
 800b8ac:	f7ff ffaa 	bl	800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b8b0:	2302      	movs	r3, #2
 800b8b2:	4908      	ldr	r1, [pc, #32]	; (800b8d4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800b8b4:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b8b8:	61cb      	str	r3, [r1, #28]
 800b8ba:	9b04      	ldr	r3, [sp, #16]
 800b8bc:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800b8c0:	604b      	str	r3, [r1, #4]
 800b8c2:	4b05      	ldr	r3, [pc, #20]	; (800b8d8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800b8c4:	681b      	ldr	r3, [r3, #0]
 800b8c6:	610b      	str	r3, [r1, #16]
 800b8c8:	2300      	movs	r3, #0
 800b8ca:	614b      	str	r3, [r1, #20]
 800b8cc:	9b05      	ldr	r3, [sp, #20]
 800b8ce:	618b      	str	r3, [r1, #24]
 800b8d0:	bd70      	pop	{r4, r5, r6, pc}
 800b8d2:	bf00      	nop
 800b8d4:	2000190c 	andcs	r1, r0, ip, lsl #18
 800b8d8:	20001934 	andcs	r1, r0, r4, lsr r9

0800b8dc <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b8dc:	b570      	push	{r4, r5, r6, lr}
 800b8de:	460e      	mov	r6, r1
 800b8e0:	461d      	mov	r5, r3
 800b8e2:	4614      	mov	r4, r2
 800b8e4:	f7ff ff8e 	bl	800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b8e8:	2303      	movs	r3, #3
 800b8ea:	4907      	ldr	r1, [pc, #28]	; (800b908 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800b8ec:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b8f0:	61cb      	str	r3, [r1, #28]
 800b8f2:	4b06      	ldr	r3, [pc, #24]	; (800b90c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800b8f4:	604d      	str	r5, [r1, #4]
 800b8f6:	681b      	ldr	r3, [r3, #0]
 800b8f8:	608c      	str	r4, [r1, #8]
 800b8fa:	610b      	str	r3, [r1, #16]
 800b8fc:	2300      	movs	r3, #0
 800b8fe:	614b      	str	r3, [r1, #20]
 800b900:	9b04      	ldr	r3, [sp, #16]
 800b902:	618b      	str	r3, [r1, #24]
 800b904:	bd70      	pop	{r4, r5, r6, pc}
 800b906:	bf00      	nop
 800b908:	2000190c 	andcs	r1, r0, ip, lsl #18
 800b90c:	20001934 	andcs	r1, r0, r4, lsr r9

0800b910 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800b910:	b570      	push	{r4, r5, r6, lr}
 800b912:	460e      	mov	r6, r1
 800b914:	461d      	mov	r5, r3
 800b916:	4614      	mov	r4, r2
 800b918:	f7ff ff74 	bl	800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b91c:	2304      	movs	r3, #4
 800b91e:	4912      	ldr	r1, [pc, #72]	; (800b968 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800b920:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b924:	604d      	str	r5, [r1, #4]
 800b926:	4d11      	ldr	r5, [pc, #68]	; (800b96c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800b928:	61cb      	str	r3, [r1, #28]
 800b92a:	6828      	ldr	r0, [r5, #0]
 800b92c:	608c      	str	r4, [r1, #8]
 800b92e:	1e43      	subs	r3, r0, #1
 800b930:	005b      	lsls	r3, r3, #1
 800b932:	b29b      	uxth	r3, r3
 800b934:	610b      	str	r3, [r1, #16]
 800b936:	2300      	movs	r3, #0
 800b938:	4c0d      	ldr	r4, [pc, #52]	; (800b970 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800b93a:	614b      	str	r3, [r1, #20]
 800b93c:	6823      	ldr	r3, [r4, #0]
 800b93e:	b993      	cbnz	r3, 800b966 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800b940:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800b944:	4298      	cmp	r0, r3
 800b946:	bf2c      	ite	cs
 800b948:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800b94c:	0080      	lslcc	r0, r0, #2
 800b94e:	f006 fb87 	bl	8012060 <operator new[](unsigned int)>
 800b952:	2200      	movs	r2, #0
 800b954:	682b      	ldr	r3, [r5, #0]
 800b956:	6020      	str	r0, [r4, #0]
 800b958:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800b95c:	4298      	cmp	r0, r3
 800b95e:	d002      	beq.n	800b966 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800b960:	f840 2b04 	str.w	r2, [r0], #4
 800b964:	e7fa      	b.n	800b95c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800b966:	bd70      	pop	{r4, r5, r6, pc}
 800b968:	2000190c 	andcs	r1, r0, ip, lsl #18
 800b96c:	20001934 	andcs	r1, r0, r4, lsr r9
 800b970:	20001930 	andcs	r1, r0, r0, lsr r9

0800b974 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b974:	b570      	push	{r4, r5, r6, lr}
 800b976:	460e      	mov	r6, r1
 800b978:	461c      	mov	r4, r3
 800b97a:	4615      	mov	r5, r2
 800b97c:	f7ff ff42 	bl	800b804 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b980:	2305      	movs	r3, #5
 800b982:	4907      	ldr	r1, [pc, #28]	; (800b9a0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800b984:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b988:	61cb      	str	r3, [r1, #28]
 800b98a:	9b05      	ldr	r3, [sp, #20]
 800b98c:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800b990:	604b      	str	r3, [r1, #4]
 800b992:	9b04      	ldr	r3, [sp, #16]
 800b994:	610b      	str	r3, [r1, #16]
 800b996:	2300      	movs	r3, #0
 800b998:	614b      	str	r3, [r1, #20]
 800b99a:	9b06      	ldr	r3, [sp, #24]
 800b99c:	618b      	str	r3, [r1, #24]
 800b99e:	bd70      	pop	{r4, r5, r6, pc}
 800b9a0:	2000190c 	andcs	r1, r0, ip, lsl #18

0800b9a4 <PixelPatterns::Wheel(unsigned char)>:
 800b9a4:	43c9      	mvns	r1, r1
 800b9a6:	b2c9      	uxtb	r1, r1
 800b9a8:	2954      	cmp	r1, #84	; 0x54
 800b9aa:	d809      	bhi.n	800b9c0 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800b9ac:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800b9b0:	3801      	subs	r0, #1
 800b9b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b9b6:	b2c3      	uxtb	r3, r0
 800b9b8:	b2c8      	uxtb	r0, r1
 800b9ba:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800b9be:	4770      	bx	lr
 800b9c0:	29a9      	cmp	r1, #169	; 0xa9
 800b9c2:	d80b      	bhi.n	800b9dc <PixelPatterns::Wheel(unsigned char)+0x38>
 800b9c4:	3955      	subs	r1, #85	; 0x55
 800b9c6:	b2c9      	uxtb	r1, r1
 800b9c8:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800b9cc:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800b9d0:	b2c3      	uxtb	r3, r0
 800b9d2:	1e48      	subs	r0, r1, #1
 800b9d4:	b2c0      	uxtb	r0, r0
 800b9d6:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800b9da:	4770      	bx	lr
 800b9dc:	3156      	adds	r1, #86	; 0x56
 800b9de:	b2c9      	uxtb	r1, r1
 800b9e0:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800b9e4:	3801      	subs	r0, #1
 800b9e6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b9ea:	b2c3      	uxtb	r3, r0
 800b9ec:	b2c8      	uxtb	r0, r1
 800b9ee:	0400      	lsls	r0, r0, #16
 800b9f0:	e7f1      	b.n	800b9d6 <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800b9f4 <PixelPatterns::Increment(unsigned int)>:
 800b9f4:	4a0d      	ldr	r2, [pc, #52]	; (800ba2c <PixelPatterns::Increment(unsigned int)+0x38>)
 800b9f6:	b510      	push	{r4, lr}
 800b9f8:	014c      	lsls	r4, r1, #5
 800b9fa:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800b9fe:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800ba02:	b930      	cbnz	r0, 800ba12 <PixelPatterns::Increment(unsigned int)+0x1e>
 800ba04:	690a      	ldr	r2, [r1, #16]
 800ba06:	3301      	adds	r3, #1
 800ba08:	4293      	cmp	r3, r2
 800ba0a:	bf18      	it	ne
 800ba0c:	4618      	movne	r0, r3
 800ba0e:	6148      	str	r0, [r1, #20]
 800ba10:	bd10      	pop	{r4, pc}
 800ba12:	b92b      	cbnz	r3, 800ba20 <PixelPatterns::Increment(unsigned int)+0x2c>
 800ba14:	4422      	add	r2, r4
 800ba16:	6913      	ldr	r3, [r2, #16]
 800ba18:	3b01      	subs	r3, #1
 800ba1a:	b29b      	uxth	r3, r3
 800ba1c:	6153      	str	r3, [r2, #20]
 800ba1e:	e7f7      	b.n	800ba10 <PixelPatterns::Increment(unsigned int)+0x1c>
 800ba20:	3b01      	subs	r3, #1
 800ba22:	614b      	str	r3, [r1, #20]
 800ba24:	2b00      	cmp	r3, #0
 800ba26:	d1f3      	bne.n	800ba10 <PixelPatterns::Increment(unsigned int)+0x1c>
 800ba28:	e7f4      	b.n	800ba14 <PixelPatterns::Increment(unsigned int)+0x20>
 800ba2a:	bf00      	nop
 800ba2c:	2000190c 	andcs	r1, r0, ip, lsl #18

0800ba30 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800ba30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba34:	4604      	mov	r4, r0
 800ba36:	460d      	mov	r5, r1
 800ba38:	2600      	movs	r6, #0
 800ba3a:	4b10      	ldr	r3, [pc, #64]	; (800ba7c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800ba3c:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800ba80 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800ba40:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ba44:	695f      	ldr	r7, [r3, #20]
 800ba46:	f8d8 1000 	ldr.w	r1, [r8]
 800ba4a:	b2b2      	uxth	r2, r6
 800ba4c:	4291      	cmp	r1, r2
 800ba4e:	f106 0601 	add.w	r6, r6, #1
 800ba52:	d90c      	bls.n	800ba6e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x3e>
 800ba54:	0213      	lsls	r3, r2, #8
 800ba56:	fbb3 f3f1 	udiv	r3, r3, r1
 800ba5a:	443b      	add	r3, r7
 800ba5c:	b2d9      	uxtb	r1, r3
 800ba5e:	4620      	mov	r0, r4
 800ba60:	f7ff ffa0 	bl	800b9a4 <PixelPatterns::Wheel(unsigned char)>
 800ba64:	4601      	mov	r1, r0
 800ba66:	4610      	mov	r0, r2
 800ba68:	f7ff feba 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800ba6c:	e7eb      	b.n	800ba46 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x16>
 800ba6e:	4629      	mov	r1, r5
 800ba70:	4620      	mov	r0, r4
 800ba72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ba76:	f7ff bfbd 	b.w	800b9f4 <PixelPatterns::Increment(unsigned int)>
 800ba7a:	bf00      	nop
 800ba7c:	2000190c 	andcs	r1, r0, ip, lsl #18
 800ba80:	20001934 	andcs	r1, r0, r4, lsr r9

0800ba84 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800ba84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba88:	4605      	mov	r5, r0
 800ba8a:	460c      	mov	r4, r1
 800ba8c:	f04f 0b00 	mov.w	fp, #0
 800ba90:	4b12      	ldr	r3, [pc, #72]	; (800badc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800ba92:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800bae0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800ba96:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ba9a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800ba9e:	f8df a044 	ldr.w	sl, [pc, #68]	; 800bae4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800baa2:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800baa6:	f8d9 3000 	ldr.w	r3, [r9]
 800baaa:	fa1f f08b 	uxth.w	r0, fp
 800baae:	4283      	cmp	r3, r0
 800bab0:	d90d      	bls.n	800bace <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4a>
 800bab2:	eb08 0300 	add.w	r3, r8, r0
 800bab6:	fb0a f303 	mul.w	r3, sl, r3
 800baba:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800babe:	bf94      	ite	ls
 800bac0:	4631      	movls	r1, r6
 800bac2:	4639      	movhi	r1, r7
 800bac4:	f7ff fe8c 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bac8:	f10b 0b01 	add.w	fp, fp, #1
 800bacc:	e7eb      	b.n	800baa6 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800bace:	4621      	mov	r1, r4
 800bad0:	4628      	mov	r0, r5
 800bad2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bad6:	f7ff bf8d 	b.w	800b9f4 <PixelPatterns::Increment(unsigned int)>
 800bada:	bf00      	nop
 800badc:	2000190c 	andcs	r1, r0, ip, lsl #18
 800bae0:	20001934 	andcs	r1, r0, r4, lsr r9
 800bae4:	aaaaaaab 	bge	6ab6598 <__stack_size+0x6ab4d98>

0800bae8 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800bae8:	b538      	push	{r3, r4, r5, lr}
 800baea:	4605      	mov	r5, r0
 800baec:	460c      	mov	r4, r1
 800baee:	4b06      	ldr	r3, [pc, #24]	; (800bb08 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800baf0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800baf4:	6899      	ldr	r1, [r3, #8]
 800baf6:	6958      	ldr	r0, [r3, #20]
 800baf8:	f7ff fe72 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bafc:	4621      	mov	r1, r4
 800bafe:	4628      	mov	r0, r5
 800bb00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bb04:	f7ff bf76 	b.w	800b9f4 <PixelPatterns::Increment(unsigned int)>
 800bb08:	2000190c 	andcs	r1, r0, ip, lsl #18

0800bb0c <PixelPatterns::ScannerUpdate(unsigned int)>:
 800bb0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb10:	460d      	mov	r5, r1
 800bb12:	f04f 0900 	mov.w	r9, #0
 800bb16:	4a27      	ldr	r2, [pc, #156]	; (800bbb4 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800bb18:	b085      	sub	sp, #20
 800bb1a:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800bb1e:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800bb22:	f8d2 a008 	ldr.w	sl, [r2, #8]
 800bb26:	00b3      	lsls	r3, r6, #2
 800bb28:	f8df b08c 	ldr.w	fp, [pc, #140]	; 800bbb8 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800bb2c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800bbbc <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800bb30:	9002      	str	r0, [sp, #8]
 800bb32:	9301      	str	r3, [sp, #4]
 800bb34:	1bbf      	subs	r7, r7, r6
 800bb36:	f8db 1000 	ldr.w	r1, [fp]
 800bb3a:	fa1f f489 	uxth.w	r4, r9
 800bb3e:	42a1      	cmp	r1, r4
 800bb40:	d930      	bls.n	800bba4 <PixelPatterns::ScannerUpdate(unsigned int)+0x98>
 800bb42:	42a6      	cmp	r6, r4
 800bb44:	d10b      	bne.n	800bb5e <PixelPatterns::ScannerUpdate(unsigned int)+0x52>
 800bb46:	4651      	mov	r1, sl
 800bb48:	4630      	mov	r0, r6
 800bb4a:	f7ff fe49 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bb4e:	f8d8 1000 	ldr.w	r1, [r8]
 800bb52:	9b01      	ldr	r3, [sp, #4]
 800bb54:	f841 a003 	str.w	sl, [r1, r3]
 800bb58:	f109 0901 	add.w	r9, r9, #1
 800bb5c:	e7eb      	b.n	800bb36 <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800bb5e:	42a7      	cmp	r7, r4
 800bb60:	d108      	bne.n	800bb74 <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800bb62:	4651      	mov	r1, sl
 800bb64:	4638      	mov	r0, r7
 800bb66:	f7ff fe3b 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bb6a:	f8d8 1000 	ldr.w	r1, [r8]
 800bb6e:	f841 a024 	str.w	sl, [r1, r4, lsl #2]
 800bb72:	e7f1      	b.n	800bb58 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800bb74:	f8d8 1000 	ldr.w	r1, [r8]
 800bb78:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800bb7c:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800bb80:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800bb84:	0209      	lsls	r1, r1, #8
 800bb86:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800bb8a:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800bb8e:	4301      	orrs	r1, r0
 800bb90:	4620      	mov	r0, r4
 800bb92:	9103      	str	r1, [sp, #12]
 800bb94:	f7ff fe24 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bb98:	f8d8 0000 	ldr.w	r0, [r8]
 800bb9c:	9903      	ldr	r1, [sp, #12]
 800bb9e:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800bba2:	e7d9      	b.n	800bb58 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800bba4:	4629      	mov	r1, r5
 800bba6:	9802      	ldr	r0, [sp, #8]
 800bba8:	b005      	add	sp, #20
 800bbaa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbae:	f7ff bf21 	b.w	800b9f4 <PixelPatterns::Increment(unsigned int)>
 800bbb2:	bf00      	nop
 800bbb4:	2000190c 	andcs	r1, r0, ip, lsl #18
 800bbb8:	20001934 	andcs	r1, r0, r4, lsr r9
 800bbbc:	20001930 	andcs	r1, r0, r0, lsr r9

0800bbc0 <PixelPatterns::FadeUpdate(unsigned int)>:
 800bbc0:	4a21      	ldr	r2, [pc, #132]	; (800bc48 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800bbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbc6:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800bbca:	4605      	mov	r5, r0
 800bbcc:	e9d2 3002 	ldrd	r3, r0, [r2, #8]
 800bbd0:	460c      	mov	r4, r1
 800bbd2:	e9d2 6104 	ldrd	r6, r1, [r2, #16]
 800bbd6:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800bbda:	434a      	muls	r2, r1
 800bbdc:	1a77      	subs	r7, r6, r1
 800bbde:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 800bbe2:	fb07 220c 	mla	r2, r7, ip, r2
 800bbe6:	fbb2 f2f6 	udiv	r2, r2, r6
 800bbea:	0212      	lsls	r2, r2, #8
 800bbec:	fa1f fc82 	uxth.w	ip, r2
 800bbf0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800bbf4:	434a      	muls	r2, r1
 800bbf6:	f3c3 4e07 	ubfx	lr, r3, #16, #8
 800bbfa:	fb07 220e 	mla	r2, r7, lr, r2
 800bbfe:	fbb2 f2f6 	udiv	r2, r2, r6
 800bc02:	0412      	lsls	r2, r2, #16
 800bc04:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800bc08:	ea4c 0202 	orr.w	r2, ip, r2
 800bc0c:	fa5f fc83 	uxtb.w	ip, r3
 800bc10:	b2c3      	uxtb	r3, r0
 800bc12:	434b      	muls	r3, r1
 800bc14:	fb07 330c 	mla	r3, r7, ip, r3
 800bc18:	fbb3 f3f6 	udiv	r3, r3, r6
 800bc1c:	2700      	movs	r7, #0
 800bc1e:	b2db      	uxtb	r3, r3
 800bc20:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800bc4c <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800bc24:	ea42 0603 	orr.w	r6, r2, r3
 800bc28:	f8d8 3000 	ldr.w	r3, [r8]
 800bc2c:	42bb      	cmp	r3, r7
 800bc2e:	d905      	bls.n	800bc3c <PixelPatterns::FadeUpdate(unsigned int)+0x7c>
 800bc30:	4638      	mov	r0, r7
 800bc32:	4631      	mov	r1, r6
 800bc34:	f7ff fdd4 	bl	800b7e0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800bc38:	3701      	adds	r7, #1
 800bc3a:	e7f5      	b.n	800bc28 <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 800bc3c:	4621      	mov	r1, r4
 800bc3e:	4628      	mov	r0, r5
 800bc40:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bc44:	f7ff bed6 	b.w	800b9f4 <PixelPatterns::Increment(unsigned int)>
 800bc48:	2000190c 	andcs	r1, r0, ip, lsl #18
 800bc4c:	20001934 	andcs	r1, r0, r4, lsr r9

0800bc50 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800bc50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc52:	4b12      	ldr	r3, [pc, #72]	; (800bc9c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800bc54:	014e      	lsls	r6, r1, #5
 800bc56:	599c      	ldr	r4, [r3, r6]
 800bc58:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800bc5c:	686f      	ldr	r7, [r5, #4]
 800bc5e:	1b14      	subs	r4, r2, r4
 800bc60:	42bc      	cmp	r4, r7
 800bc62:	d319      	bcc.n	800bc98 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800bc64:	519a      	str	r2, [r3, r6]
 800bc66:	69eb      	ldr	r3, [r5, #28]
 800bc68:	3b01      	subs	r3, #1
 800bc6a:	2b04      	cmp	r3, #4
 800bc6c:	d814      	bhi.n	800bc98 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800bc6e:	e8df f003 	tbb	[pc, r3]
 800bc72:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800bc76:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800bc7a:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800bc7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc80:	f7ff ff00 	bl	800ba84 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800bc84:	e7fa      	b.n	800bc7c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800bc86:	f7ff ff2f 	bl	800bae8 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800bc8a:	e7f7      	b.n	800bc7c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800bc8c:	f7ff ff3e 	bl	800bb0c <PixelPatterns::ScannerUpdate(unsigned int)>
 800bc90:	e7f4      	b.n	800bc7c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800bc92:	f7ff ff95 	bl	800bbc0 <PixelPatterns::FadeUpdate(unsigned int)>
 800bc96:	e7f1      	b.n	800bc7c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800bc98:	2000      	movs	r0, #0
 800bc9a:	e7f0      	b.n	800bc7e <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800bc9c:	2000190c 	andcs	r1, r0, ip, lsl #18

0800bca0 <PixelPatterns::Run()>:
 800bca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bca4:	4605      	mov	r5, r0
 800bca6:	f007 fbd1 	bl	801344c <gd32_spi_dma_tx_is_active()>
 800bcaa:	4604      	mov	r4, r0
 800bcac:	b9c8      	cbnz	r0, 800bce2 <PixelPatterns::Run()+0x42>
 800bcae:	4606      	mov	r6, r0
 800bcb0:	4b0d      	ldr	r3, [pc, #52]	; (800bce8 <PixelPatterns::Run()+0x48>)
 800bcb2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 800bcec <PixelPatterns::Run()+0x4c>
 800bcb6:	681f      	ldr	r7, [r3, #0]
 800bcb8:	f8d8 3000 	ldr.w	r3, [r8]
 800bcbc:	b2f1      	uxtb	r1, r6
 800bcbe:	428b      	cmp	r3, r1
 800bcc0:	f106 0601 	add.w	r6, r6, #1
 800bcc4:	d906      	bls.n	800bcd4 <PixelPatterns::Run()+0x34>
 800bcc6:	463a      	mov	r2, r7
 800bcc8:	4628      	mov	r0, r5
 800bcca:	f7ff ffc1 	bl	800bc50 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800bcce:	4304      	orrs	r4, r0
 800bcd0:	b2e4      	uxtb	r4, r4
 800bcd2:	e7f1      	b.n	800bcb8 <PixelPatterns::Run()+0x18>
 800bcd4:	b12c      	cbz	r4, 800bce2 <PixelPatterns::Run()+0x42>
 800bcd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bcda:	4b05      	ldr	r3, [pc, #20]	; (800bcf0 <PixelPatterns::Run()+0x50>)
 800bcdc:	6818      	ldr	r0, [r3, #0]
 800bcde:	f000 bf69 	b.w	800cbb4 <WS28xx::Update()>
 800bce2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bce6:	bf00      	nop
 800bce8:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800bcec:	2000192c 	andcs	r1, r0, ip, lsr #18
 800bcf0:	20001938 	andcs	r1, r0, r8, lsr r9

0800bcf4 <PixelType::GetType(pixel::Type)>:
 800bcf4:	280d      	cmp	r0, #13
 800bcf6:	bfda      	itte	le
 800bcf8:	4b02      	ldrle	r3, [pc, #8]	; (800bd04 <PixelType::GetType(pixel::Type)+0x10>)
 800bcfa:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800bcfe:	4802      	ldrgt	r0, [pc, #8]	; (800bd08 <PixelType::GetType(pixel::Type)+0x14>)
 800bd00:	4770      	bx	lr
 800bd02:	bf00      	nop
 800bd04:	080147dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, lr}
 800bd08:	0801475f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}

0800bd0c <PixelType::GetType(char const*)>:
 800bd0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd0e:	4604      	mov	r4, r0
 800bd10:	2000      	movs	r0, #0
 800bd12:	490f      	ldr	r1, [pc, #60]	; (800bd50 <PixelType::GetType(char const*)+0x44>)
 800bd14:	1e66      	subs	r6, r4, #1
 800bd16:	1e4d      	subs	r5, r1, #1
 800bd18:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800bd1c:	461f      	mov	r7, r3
 800bd1e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800bd22:	2a19      	cmp	r2, #25
 800bd24:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800bd28:	bf98      	it	ls
 800bd2a:	f103 0720 	addls.w	r7, r3, #32
 800bd2e:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800bd32:	f1bc 0f19 	cmp.w	ip, #25
 800bd36:	bf98      	it	ls
 800bd38:	3220      	addls	r2, #32
 800bd3a:	42ba      	cmp	r2, r7
 800bd3c:	d102      	bne.n	800bd44 <PixelType::GetType(char const*)+0x38>
 800bd3e:	2b00      	cmp	r3, #0
 800bd40:	d1ea      	bne.n	800bd18 <PixelType::GetType(char const*)+0xc>
 800bd42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd44:	3001      	adds	r0, #1
 800bd46:	280e      	cmp	r0, #14
 800bd48:	f101 0108 	add.w	r1, r1, #8
 800bd4c:	d1e2      	bne.n	800bd14 <PixelType::GetType(char const*)+0x8>
 800bd4e:	e7f8      	b.n	800bd42 <PixelType::GetType(char const*)+0x36>
 800bd50:	080147dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, lr}

0800bd54 <PixelType::GetMap(char const*)>:
 800bd54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd56:	4605      	mov	r5, r0
 800bd58:	2000      	movs	r0, #0
 800bd5a:	4b11      	ldr	r3, [pc, #68]	; (800bda0 <PixelType::GetMap(char const*)+0x4c>)
 800bd5c:	1e5c      	subs	r4, r3, #1
 800bd5e:	1e6e      	subs	r6, r5, #1
 800bd60:	f103 0c02 	add.w	ip, r3, #2
 800bd64:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800bd68:	4617      	mov	r7, r2
 800bd6a:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800bd6e:	2919      	cmp	r1, #25
 800bd70:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800bd74:	bf98      	it	ls
 800bd76:	f102 0720 	addls.w	r7, r2, #32
 800bd7a:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800bd7e:	f1be 0f19 	cmp.w	lr, #25
 800bd82:	bf98      	it	ls
 800bd84:	3120      	addls	r1, #32
 800bd86:	42b9      	cmp	r1, r7
 800bd88:	d005      	beq.n	800bd96 <PixelType::GetMap(char const*)+0x42>
 800bd8a:	3001      	adds	r0, #1
 800bd8c:	2806      	cmp	r0, #6
 800bd8e:	f103 0304 	add.w	r3, r3, #4
 800bd92:	d1e3      	bne.n	800bd5c <PixelType::GetMap(char const*)+0x8>
 800bd94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd96:	2a00      	cmp	r2, #0
 800bd98:	d0fc      	beq.n	800bd94 <PixelType::GetMap(char const*)+0x40>
 800bd9a:	4564      	cmp	r4, ip
 800bd9c:	d1e2      	bne.n	800bd64 <PixelType::GetMap(char const*)+0x10>
 800bd9e:	e7f9      	b.n	800bd94 <PixelType::GetMap(char const*)+0x40>
 800bda0:	080147c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, lr}

0800bda4 <PixelType::GetMap(pixel::Map)>:
 800bda4:	2805      	cmp	r0, #5
 800bda6:	bfda      	itte	le
 800bda8:	4b02      	ldrle	r3, [pc, #8]	; (800bdb4 <PixelType::GetMap(pixel::Map)+0x10>)
 800bdaa:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800bdae:	4802      	ldrgt	r0, [pc, #8]	; (800bdb8 <PixelType::GetMap(pixel::Map)+0x14>)
 800bdb0:	4770      	bx	lr
 800bdb2:	bf00      	nop
 800bdb4:	080147c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, lr}
 800bdb8:	080147bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, lr}

0800bdbc <PixelType::ConvertTxH(unsigned char)>:
 800bdbc:	28f0      	cmp	r0, #240	; 0xf0
 800bdbe:	d010      	beq.n	800bde2 <PixelType::ConvertTxH(unsigned char)+0x26>
 800bdc0:	d807      	bhi.n	800bdd2 <PixelType::ConvertTxH(unsigned char)+0x16>
 800bdc2:	28c0      	cmp	r0, #192	; 0xc0
 800bdc4:	d00f      	beq.n	800bde6 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800bdc6:	28e0      	cmp	r0, #224	; 0xe0
 800bdc8:	d00f      	beq.n	800bdea <PixelType::ConvertTxH(unsigned char)+0x2e>
 800bdca:	2880      	cmp	r0, #128	; 0x80
 800bdcc:	d113      	bne.n	800bdf6 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800bdce:	480b      	ldr	r0, [pc, #44]	; (800bdfc <PixelType::ConvertTxH(unsigned char)+0x40>)
 800bdd0:	4770      	bx	lr
 800bdd2:	28fc      	cmp	r0, #252	; 0xfc
 800bdd4:	d00b      	beq.n	800bdee <PixelType::ConvertTxH(unsigned char)+0x32>
 800bdd6:	28fe      	cmp	r0, #254	; 0xfe
 800bdd8:	d00b      	beq.n	800bdf2 <PixelType::ConvertTxH(unsigned char)+0x36>
 800bdda:	28f8      	cmp	r0, #248	; 0xf8
 800bddc:	d10b      	bne.n	800bdf6 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800bdde:	4808      	ldr	r0, [pc, #32]	; (800be00 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800bde0:	4770      	bx	lr
 800bde2:	4808      	ldr	r0, [pc, #32]	; (800be04 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800bde4:	4770      	bx	lr
 800bde6:	4808      	ldr	r0, [pc, #32]	; (800be08 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800bde8:	4770      	bx	lr
 800bdea:	4808      	ldr	r0, [pc, #32]	; (800be0c <PixelType::ConvertTxH(unsigned char)+0x50>)
 800bdec:	4770      	bx	lr
 800bdee:	4808      	ldr	r0, [pc, #32]	; (800be10 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800bdf0:	4770      	bx	lr
 800bdf2:	4808      	ldr	r0, [pc, #32]	; (800be14 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800bdf4:	4770      	bx	lr
 800bdf6:	2000      	movs	r0, #0
 800bdf8:	4770      	bx	lr
 800bdfa:	bf00      	nop
 800bdfc:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800be00:	3f480000 	svccc	0x00480000
 800be04:	3f200000 	svccc	0x00200000
 800be08:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800be0c:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800be10:	3f700000 	svccc	0x00700000
 800be14:	3f8c0000 	svccc	0x008c0000

0800be18 <PixelType::ConvertTxH(float)>:
 800be18:	b510      	push	{r4, lr}
 800be1a:	491d      	ldr	r1, [pc, #116]	; (800be90 <PixelType::ConvertTxH(float)+0x78>)
 800be1c:	4604      	mov	r4, r0
 800be1e:	f7fc f813 	bl	8007e48 <__aeabi_fcmplt>
 800be22:	bb30      	cbnz	r0, 800be72 <PixelType::ConvertTxH(float)+0x5a>
 800be24:	4620      	mov	r0, r4
 800be26:	491b      	ldr	r1, [pc, #108]	; (800be94 <PixelType::ConvertTxH(float)+0x7c>)
 800be28:	f7fc f80e 	bl	8007e48 <__aeabi_fcmplt>
 800be2c:	bb18      	cbnz	r0, 800be76 <PixelType::ConvertTxH(float)+0x5e>
 800be2e:	4620      	mov	r0, r4
 800be30:	4919      	ldr	r1, [pc, #100]	; (800be98 <PixelType::ConvertTxH(float)+0x80>)
 800be32:	f7fc f809 	bl	8007e48 <__aeabi_fcmplt>
 800be36:	bb00      	cbnz	r0, 800be7a <PixelType::ConvertTxH(float)+0x62>
 800be38:	4620      	mov	r0, r4
 800be3a:	4918      	ldr	r1, [pc, #96]	; (800be9c <PixelType::ConvertTxH(float)+0x84>)
 800be3c:	f7fc f804 	bl	8007e48 <__aeabi_fcmplt>
 800be40:	b9e8      	cbnz	r0, 800be7e <PixelType::ConvertTxH(float)+0x66>
 800be42:	4620      	mov	r0, r4
 800be44:	4916      	ldr	r1, [pc, #88]	; (800bea0 <PixelType::ConvertTxH(float)+0x88>)
 800be46:	f7fb ffff 	bl	8007e48 <__aeabi_fcmplt>
 800be4a:	b9d0      	cbnz	r0, 800be82 <PixelType::ConvertTxH(float)+0x6a>
 800be4c:	4620      	mov	r0, r4
 800be4e:	4915      	ldr	r1, [pc, #84]	; (800bea4 <PixelType::ConvertTxH(float)+0x8c>)
 800be50:	f7fb fffa 	bl	8007e48 <__aeabi_fcmplt>
 800be54:	b9b8      	cbnz	r0, 800be86 <PixelType::ConvertTxH(float)+0x6e>
 800be56:	4620      	mov	r0, r4
 800be58:	4913      	ldr	r1, [pc, #76]	; (800bea8 <PixelType::ConvertTxH(float)+0x90>)
 800be5a:	f7fb fff5 	bl	8007e48 <__aeabi_fcmplt>
 800be5e:	b9a0      	cbnz	r0, 800be8a <PixelType::ConvertTxH(float)+0x72>
 800be60:	4620      	mov	r0, r4
 800be62:	4912      	ldr	r1, [pc, #72]	; (800beac <PixelType::ConvertTxH(float)+0x94>)
 800be64:	f7fb fff0 	bl	8007e48 <__aeabi_fcmplt>
 800be68:	2800      	cmp	r0, #0
 800be6a:	bf14      	ite	ne
 800be6c:	20fe      	movne	r0, #254	; 0xfe
 800be6e:	2000      	moveq	r0, #0
 800be70:	bd10      	pop	{r4, pc}
 800be72:	2000      	movs	r0, #0
 800be74:	e7fc      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be76:	2080      	movs	r0, #128	; 0x80
 800be78:	e7fa      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be7a:	20c0      	movs	r0, #192	; 0xc0
 800be7c:	e7f8      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be7e:	20e0      	movs	r0, #224	; 0xe0
 800be80:	e7f6      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be82:	20f0      	movs	r0, #240	; 0xf0
 800be84:	e7f4      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be86:	20f8      	movs	r0, #248	; 0xf8
 800be88:	e7f2      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be8a:	20fc      	movs	r0, #252	; 0xfc
 800be8c:	e7f0      	b.n	800be70 <PixelType::ConvertTxH(float)+0x58>
 800be8e:	bf00      	nop
 800be90:	3da00000 	stccc	0, cr0, [r0]
 800be94:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800be98:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800be9c:	3f0c0000 	svccc	0x000c0000
 800bea0:	3f340000 	svccc	0x00340000
 800bea4:	3f5c0000 	svccc	0x005c0000
 800bea8:	3f820000 	svccc	0x00820000
 800beac:	3f960000 	svccc	0x00960000

0800beb0 <WS28xx::Print()>:
 800beb0:	b513      	push	{r0, r1, r4, lr}
 800beb2:	4604      	mov	r4, r0
 800beb4:	4819      	ldr	r0, [pc, #100]	; (800bf1c <WS28xx::Print()+0x6c>)
 800beb6:	f7fd fb2f 	bl	8009518 <printf>
 800beba:	6820      	ldr	r0, [r4, #0]
 800bebc:	f7ff ff1a 	bl	800bcf4 <PixelType::GetType(pixel::Type)>
 800bec0:	6822      	ldr	r2, [r4, #0]
 800bec2:	4601      	mov	r1, r0
 800bec4:	4816      	ldr	r0, [pc, #88]	; (800bf20 <WS28xx::Print()+0x70>)
 800bec6:	f7fd fb27 	bl	8009518 <printf>
 800beca:	6861      	ldr	r1, [r4, #4]
 800becc:	4815      	ldr	r0, [pc, #84]	; (800bf24 <WS28xx::Print()+0x74>)
 800bece:	f7fd fb23 	bl	8009518 <printf>
 800bed2:	7ca3      	ldrb	r3, [r4, #18]
 800bed4:	b1fb      	cbz	r3, 800bf16 <WS28xx::Print()+0x66>
 800bed6:	68a0      	ldr	r0, [r4, #8]
 800bed8:	f7ff ff64 	bl	800bda4 <PixelType::GetMap(pixel::Map)>
 800bedc:	68a2      	ldr	r2, [r4, #8]
 800bede:	4601      	mov	r1, r0
 800bee0:	4811      	ldr	r0, [pc, #68]	; (800bf28 <WS28xx::Print()+0x78>)
 800bee2:	f7fd fb19 	bl	8009518 <printf>
 800bee6:	7c20      	ldrb	r0, [r4, #16]
 800bee8:	f7ff ff68 	bl	800bdbc <PixelType::ConvertTxH(unsigned char)>
 800beec:	f7fc fae2 	bl	80084b4 <__aeabi_f2d>
 800bef0:	460b      	mov	r3, r1
 800bef2:	7c21      	ldrb	r1, [r4, #16]
 800bef4:	4602      	mov	r2, r0
 800bef6:	9100      	str	r1, [sp, #0]
 800bef8:	480c      	ldr	r0, [pc, #48]	; (800bf2c <WS28xx::Print()+0x7c>)
 800befa:	f7fd fb0d 	bl	8009518 <printf>
 800befe:	7c60      	ldrb	r0, [r4, #17]
 800bf00:	f7ff ff5c 	bl	800bdbc <PixelType::ConvertTxH(unsigned char)>
 800bf04:	f7fc fad6 	bl	80084b4 <__aeabi_f2d>
 800bf08:	460b      	mov	r3, r1
 800bf0a:	7c61      	ldrb	r1, [r4, #17]
 800bf0c:	4602      	mov	r2, r0
 800bf0e:	9100      	str	r1, [sp, #0]
 800bf10:	4807      	ldr	r0, [pc, #28]	; (800bf30 <WS28xx::Print()+0x80>)
 800bf12:	f7fd fb01 	bl	8009518 <printf>
 800bf16:	b002      	add	sp, #8
 800bf18:	bd10      	pop	{r4, pc}
 800bf1a:	bf00      	nop
 800bf1c:	0801484d 	stmdaeq	r1, {r0, r2, r3, r6, fp, lr}
 800bf20:	0801485f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, lr}
 800bf24:	08014873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, lr}
 800bf28:	08014882 	stmdaeq	r1, {r1, r7, fp, lr}
 800bf2c:	08014896 	stmdaeq	r1, {r1, r2, r4, r7, fp, lr}
 800bf30:	080148ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, fp, lr}

0800bf34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800bf34:	b530      	push	{r4, r5, lr}
 800bf36:	7c84      	ldrb	r4, [r0, #18]
 800bf38:	f89d c00c 	ldrb.w	ip, [sp, #12]
 800bf3c:	b994      	cbnz	r4, 800bf64 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 800bf3e:	6804      	ldr	r4, [r0, #0]
 800bf40:	f1a4 0e0b 	sub.w	lr, r4, #11
 800bf44:	f1be 0f01 	cmp.w	lr, #1
 800bf48:	d93d      	bls.n	800bfc6 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x92>
 800bf4a:	b9d4      	cbnz	r4, 800bf82 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4e>
 800bf4c:	6944      	ldr	r4, [r0, #20]
 800bf4e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800bf52:	5462      	strb	r2, [r4, r1]
 800bf54:	6942      	ldr	r2, [r0, #20]
 800bf56:	440a      	add	r2, r1
 800bf58:	7053      	strb	r3, [r2, #1]
 800bf5a:	6943      	ldr	r3, [r0, #20]
 800bf5c:	4419      	add	r1, r3
 800bf5e:	f881 c002 	strb.w	ip, [r1, #2]
 800bf62:	bd30      	pop	{r4, r5, pc}
 800bf64:	6884      	ldr	r4, [r0, #8]
 800bf66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800bf6a:	00c9      	lsls	r1, r1, #3
 800bf6c:	2c05      	cmp	r4, #5
 800bf6e:	f200 812d 	bhi.w	800c1cc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x298>
 800bf72:	e8df f014 	tbh	[pc, r4, lsl #1]
 800bf76:	02ed012b 	rsceq	r0, sp, #-1073741814	; 0xc000000a
 800bf7a:	04140384 	ldreq	r0, [r4], #-900	; 0xfffffc7c
 800bf7e:	0202003b 	andeq	r0, r2, #59	; 0x3b
 800bf82:	ea6f 0e9c 	mvn.w	lr, ip, lsr #2
 800bf86:	ea6f 1413 	mvn.w	r4, r3, lsr #4
 800bf8a:	f082 05c0 	eor.w	r5, r2, #192	; 0xc0
 800bf8e:	f00e 0e30 	and.w	lr, lr, #48	; 0x30
 800bf92:	f004 040c 	and.w	r4, r4, #12
 800bf96:	ea4e 1e95 	orr.w	lr, lr, r5, lsr #6
 800bf9a:	ea4e 0e04 	orr.w	lr, lr, r4
 800bf9e:	6944      	ldr	r4, [r0, #20]
 800bfa0:	3101      	adds	r1, #1
 800bfa2:	f06e 0e3f 	orn	lr, lr, #63	; 0x3f
 800bfa6:	f804 e021 	strb.w	lr, [r4, r1, lsl #2]
 800bfaa:	6944      	ldr	r4, [r0, #20]
 800bfac:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800bfb0:	f884 c001 	strb.w	ip, [r4, #1]
 800bfb4:	6944      	ldr	r4, [r0, #20]
 800bfb6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800bfba:	70a3      	strb	r3, [r4, #2]
 800bfbc:	6943      	ldr	r3, [r0, #20]
 800bfbe:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800bfc2:	70ca      	strb	r2, [r1, #3]
 800bfc4:	bd30      	pop	{r4, r5, pc}
 800bfc6:	6944      	ldr	r4, [r0, #20]
 800bfc8:	7cc5      	ldrb	r5, [r0, #19]
 800bfca:	3101      	adds	r1, #1
 800bfcc:	f804 5021 	strb.w	r5, [r4, r1, lsl #2]
 800bfd0:	6944      	ldr	r4, [r0, #20]
 800bfd2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800bfd6:	7062      	strb	r2, [r4, #1]
 800bfd8:	6942      	ldr	r2, [r0, #20]
 800bfda:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800bfde:	7093      	strb	r3, [r2, #2]
 800bfe0:	6943      	ldr	r3, [r0, #20]
 800bfe2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800bfe6:	f881 c003 	strb.w	ip, [r1, #3]
 800bfea:	bd30      	pop	{r4, r5, pc}
 800bfec:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800bff0:	bf0c      	ite	eq
 800bff2:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bff6:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bffa:	6945      	ldr	r5, [r0, #20]
 800bffc:	1c4c      	adds	r4, r1, #1
 800bffe:	f805 e004 	strb.w	lr, [r5, r4]
 800c002:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c006:	bf0c      	ite	eq
 800c008:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c00c:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c010:	6945      	ldr	r5, [r0, #20]
 800c012:	1c8c      	adds	r4, r1, #2
 800c014:	f805 e004 	strb.w	lr, [r5, r4]
 800c018:	f01c 0f20 	tst.w	ip, #32
 800c01c:	bf0c      	ite	eq
 800c01e:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c022:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c026:	6945      	ldr	r5, [r0, #20]
 800c028:	1ccc      	adds	r4, r1, #3
 800c02a:	f805 e004 	strb.w	lr, [r5, r4]
 800c02e:	f01c 0f10 	tst.w	ip, #16
 800c032:	bf0c      	ite	eq
 800c034:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c038:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c03c:	6945      	ldr	r5, [r0, #20]
 800c03e:	1d0c      	adds	r4, r1, #4
 800c040:	f01c 0f08 	tst.w	ip, #8
 800c044:	f805 e004 	strb.w	lr, [r5, r4]
 800c048:	bf0c      	ite	eq
 800c04a:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c04e:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c052:	6945      	ldr	r5, [r0, #20]
 800c054:	1d4c      	adds	r4, r1, #5
 800c056:	f01c 0f04 	tst.w	ip, #4
 800c05a:	f805 e004 	strb.w	lr, [r5, r4]
 800c05e:	bf0c      	ite	eq
 800c060:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c064:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c068:	6945      	ldr	r5, [r0, #20]
 800c06a:	1d8c      	adds	r4, r1, #6
 800c06c:	f01c 0f02 	tst.w	ip, #2
 800c070:	f805 e004 	strb.w	lr, [r5, r4]
 800c074:	bf0c      	ite	eq
 800c076:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c07a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c07e:	6945      	ldr	r5, [r0, #20]
 800c080:	1dcc      	adds	r4, r1, #7
 800c082:	f01c 0f01 	tst.w	ip, #1
 800c086:	f805 e004 	strb.w	lr, [r5, r4]
 800c08a:	bf14      	ite	ne
 800c08c:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800c090:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800c094:	6945      	ldr	r5, [r0, #20]
 800c096:	f101 0408 	add.w	r4, r1, #8
 800c09a:	f805 c004 	strb.w	ip, [r5, r4]
 800c09e:	0615      	lsls	r5, r2, #24
 800c0a0:	bf54      	ite	pl
 800c0a2:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c0a6:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c0aa:	6945      	ldr	r5, [r0, #20]
 800c0ac:	f101 0409 	add.w	r4, r1, #9
 800c0b0:	f805 c004 	strb.w	ip, [r5, r4]
 800c0b4:	0655      	lsls	r5, r2, #25
 800c0b6:	bf54      	ite	pl
 800c0b8:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c0bc:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c0c0:	6945      	ldr	r5, [r0, #20]
 800c0c2:	f101 040a 	add.w	r4, r1, #10
 800c0c6:	f805 c004 	strb.w	ip, [r5, r4]
 800c0ca:	0695      	lsls	r5, r2, #26
 800c0cc:	bf54      	ite	pl
 800c0ce:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c0d2:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c0d6:	6945      	ldr	r5, [r0, #20]
 800c0d8:	f101 040b 	add.w	r4, r1, #11
 800c0dc:	f805 c004 	strb.w	ip, [r5, r4]
 800c0e0:	06d5      	lsls	r5, r2, #27
 800c0e2:	bf54      	ite	pl
 800c0e4:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c0e8:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c0ec:	6945      	ldr	r5, [r0, #20]
 800c0ee:	f101 040c 	add.w	r4, r1, #12
 800c0f2:	f805 c004 	strb.w	ip, [r5, r4]
 800c0f6:	0715      	lsls	r5, r2, #28
 800c0f8:	bf54      	ite	pl
 800c0fa:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c0fe:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c102:	6945      	ldr	r5, [r0, #20]
 800c104:	f101 040d 	add.w	r4, r1, #13
 800c108:	f805 c004 	strb.w	ip, [r5, r4]
 800c10c:	0755      	lsls	r5, r2, #29
 800c10e:	bf54      	ite	pl
 800c110:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c114:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c118:	6945      	ldr	r5, [r0, #20]
 800c11a:	f101 040e 	add.w	r4, r1, #14
 800c11e:	f805 c004 	strb.w	ip, [r5, r4]
 800c122:	0795      	lsls	r5, r2, #30
 800c124:	bf58      	it	pl
 800c126:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c12a:	6945      	ldr	r5, [r0, #20]
 800c12c:	bf48      	it	mi
 800c12e:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c132:	f101 040f 	add.w	r4, r1, #15
 800c136:	f805 c004 	strb.w	ip, [r5, r4]
 800c13a:	07d5      	lsls	r5, r2, #31
 800c13c:	bf4c      	ite	mi
 800c13e:	7c45      	ldrbmi	r5, [r0, #17]
 800c140:	7c05      	ldrbpl	r5, [r0, #16]
 800c142:	6942      	ldr	r2, [r0, #20]
 800c144:	f101 0410 	add.w	r4, r1, #16
 800c148:	5515      	strb	r5, [r2, r4]
 800c14a:	061c      	lsls	r4, r3, #24
 800c14c:	bf54      	ite	pl
 800c14e:	7c05      	ldrbpl	r5, [r0, #16]
 800c150:	7c45      	ldrbmi	r5, [r0, #17]
 800c152:	6944      	ldr	r4, [r0, #20]
 800c154:	f101 0211 	add.w	r2, r1, #17
 800c158:	54a5      	strb	r5, [r4, r2]
 800c15a:	065d      	lsls	r5, r3, #25
 800c15c:	bf54      	ite	pl
 800c15e:	7c05      	ldrbpl	r5, [r0, #16]
 800c160:	7c45      	ldrbmi	r5, [r0, #17]
 800c162:	6944      	ldr	r4, [r0, #20]
 800c164:	f101 0212 	add.w	r2, r1, #18
 800c168:	54a5      	strb	r5, [r4, r2]
 800c16a:	069c      	lsls	r4, r3, #26
 800c16c:	bf54      	ite	pl
 800c16e:	7c05      	ldrbpl	r5, [r0, #16]
 800c170:	7c45      	ldrbmi	r5, [r0, #17]
 800c172:	6944      	ldr	r4, [r0, #20]
 800c174:	f101 0213 	add.w	r2, r1, #19
 800c178:	54a5      	strb	r5, [r4, r2]
 800c17a:	06dd      	lsls	r5, r3, #27
 800c17c:	bf54      	ite	pl
 800c17e:	7c05      	ldrbpl	r5, [r0, #16]
 800c180:	7c45      	ldrbmi	r5, [r0, #17]
 800c182:	6944      	ldr	r4, [r0, #20]
 800c184:	f101 0214 	add.w	r2, r1, #20
 800c188:	54a5      	strb	r5, [r4, r2]
 800c18a:	071c      	lsls	r4, r3, #28
 800c18c:	bf54      	ite	pl
 800c18e:	7c05      	ldrbpl	r5, [r0, #16]
 800c190:	7c45      	ldrbmi	r5, [r0, #17]
 800c192:	6944      	ldr	r4, [r0, #20]
 800c194:	f101 0215 	add.w	r2, r1, #21
 800c198:	54a5      	strb	r5, [r4, r2]
 800c19a:	075d      	lsls	r5, r3, #29
 800c19c:	bf54      	ite	pl
 800c19e:	7c05      	ldrbpl	r5, [r0, #16]
 800c1a0:	7c45      	ldrbmi	r5, [r0, #17]
 800c1a2:	6944      	ldr	r4, [r0, #20]
 800c1a4:	f101 0216 	add.w	r2, r1, #22
 800c1a8:	54a5      	strb	r5, [r4, r2]
 800c1aa:	079c      	lsls	r4, r3, #30
 800c1ac:	bf54      	ite	pl
 800c1ae:	7c05      	ldrbpl	r5, [r0, #16]
 800c1b0:	7c45      	ldrbmi	r5, [r0, #17]
 800c1b2:	6944      	ldr	r4, [r0, #20]
 800c1b4:	f101 0217 	add.w	r2, r1, #23
 800c1b8:	54a5      	strb	r5, [r4, r2]
 800c1ba:	3118      	adds	r1, #24
 800c1bc:	f013 0f01 	tst.w	r3, #1
 800c1c0:	f000 80d9 	beq.w	800c376 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x442>
 800c1c4:	7c42      	ldrb	r2, [r0, #17]
 800c1c6:	6943      	ldr	r3, [r0, #20]
 800c1c8:	545a      	strb	r2, [r3, r1]
 800c1ca:	bd30      	pop	{r4, r5, pc}
 800c1cc:	0615      	lsls	r5, r2, #24
 800c1ce:	bf54      	ite	pl
 800c1d0:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c1d4:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c1d8:	6945      	ldr	r5, [r0, #20]
 800c1da:	1c4c      	adds	r4, r1, #1
 800c1dc:	f805 e004 	strb.w	lr, [r5, r4]
 800c1e0:	0655      	lsls	r5, r2, #25
 800c1e2:	bf54      	ite	pl
 800c1e4:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c1e8:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c1ec:	6945      	ldr	r5, [r0, #20]
 800c1ee:	1c8c      	adds	r4, r1, #2
 800c1f0:	f805 e004 	strb.w	lr, [r5, r4]
 800c1f4:	0695      	lsls	r5, r2, #26
 800c1f6:	bf54      	ite	pl
 800c1f8:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c1fc:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c200:	6945      	ldr	r5, [r0, #20]
 800c202:	1ccc      	adds	r4, r1, #3
 800c204:	f805 e004 	strb.w	lr, [r5, r4]
 800c208:	06d5      	lsls	r5, r2, #27
 800c20a:	bf54      	ite	pl
 800c20c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c210:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c214:	6945      	ldr	r5, [r0, #20]
 800c216:	1d0c      	adds	r4, r1, #4
 800c218:	f805 e004 	strb.w	lr, [r5, r4]
 800c21c:	0715      	lsls	r5, r2, #28
 800c21e:	bf54      	ite	pl
 800c220:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c224:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c228:	6945      	ldr	r5, [r0, #20]
 800c22a:	1d4c      	adds	r4, r1, #5
 800c22c:	f805 e004 	strb.w	lr, [r5, r4]
 800c230:	0755      	lsls	r5, r2, #29
 800c232:	bf54      	ite	pl
 800c234:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c238:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c23c:	6945      	ldr	r5, [r0, #20]
 800c23e:	1d8c      	adds	r4, r1, #6
 800c240:	f805 e004 	strb.w	lr, [r5, r4]
 800c244:	0795      	lsls	r5, r2, #30
 800c246:	bf58      	it	pl
 800c248:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c24c:	6945      	ldr	r5, [r0, #20]
 800c24e:	bf48      	it	mi
 800c250:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c254:	1dcc      	adds	r4, r1, #7
 800c256:	f805 e004 	strb.w	lr, [r5, r4]
 800c25a:	07d5      	lsls	r5, r2, #31
 800c25c:	bf4c      	ite	mi
 800c25e:	7c45      	ldrbmi	r5, [r0, #17]
 800c260:	7c05      	ldrbpl	r5, [r0, #16]
 800c262:	6942      	ldr	r2, [r0, #20]
 800c264:	f101 0408 	add.w	r4, r1, #8
 800c268:	5515      	strb	r5, [r2, r4]
 800c26a:	061c      	lsls	r4, r3, #24
 800c26c:	bf54      	ite	pl
 800c26e:	7c05      	ldrbpl	r5, [r0, #16]
 800c270:	7c45      	ldrbmi	r5, [r0, #17]
 800c272:	6944      	ldr	r4, [r0, #20]
 800c274:	f101 0209 	add.w	r2, r1, #9
 800c278:	54a5      	strb	r5, [r4, r2]
 800c27a:	065d      	lsls	r5, r3, #25
 800c27c:	bf54      	ite	pl
 800c27e:	7c05      	ldrbpl	r5, [r0, #16]
 800c280:	7c45      	ldrbmi	r5, [r0, #17]
 800c282:	6944      	ldr	r4, [r0, #20]
 800c284:	f101 020a 	add.w	r2, r1, #10
 800c288:	54a5      	strb	r5, [r4, r2]
 800c28a:	069c      	lsls	r4, r3, #26
 800c28c:	bf54      	ite	pl
 800c28e:	7c05      	ldrbpl	r5, [r0, #16]
 800c290:	7c45      	ldrbmi	r5, [r0, #17]
 800c292:	6944      	ldr	r4, [r0, #20]
 800c294:	f101 020b 	add.w	r2, r1, #11
 800c298:	54a5      	strb	r5, [r4, r2]
 800c29a:	06dd      	lsls	r5, r3, #27
 800c29c:	bf54      	ite	pl
 800c29e:	7c05      	ldrbpl	r5, [r0, #16]
 800c2a0:	7c45      	ldrbmi	r5, [r0, #17]
 800c2a2:	6944      	ldr	r4, [r0, #20]
 800c2a4:	f101 020c 	add.w	r2, r1, #12
 800c2a8:	54a5      	strb	r5, [r4, r2]
 800c2aa:	071c      	lsls	r4, r3, #28
 800c2ac:	bf54      	ite	pl
 800c2ae:	7c05      	ldrbpl	r5, [r0, #16]
 800c2b0:	7c45      	ldrbmi	r5, [r0, #17]
 800c2b2:	6944      	ldr	r4, [r0, #20]
 800c2b4:	f101 020d 	add.w	r2, r1, #13
 800c2b8:	54a5      	strb	r5, [r4, r2]
 800c2ba:	075d      	lsls	r5, r3, #29
 800c2bc:	bf54      	ite	pl
 800c2be:	7c05      	ldrbpl	r5, [r0, #16]
 800c2c0:	7c45      	ldrbmi	r5, [r0, #17]
 800c2c2:	6944      	ldr	r4, [r0, #20]
 800c2c4:	f101 020e 	add.w	r2, r1, #14
 800c2c8:	54a5      	strb	r5, [r4, r2]
 800c2ca:	079c      	lsls	r4, r3, #30
 800c2cc:	bf58      	it	pl
 800c2ce:	7c05      	ldrbpl	r5, [r0, #16]
 800c2d0:	6944      	ldr	r4, [r0, #20]
 800c2d2:	bf48      	it	mi
 800c2d4:	7c45      	ldrbmi	r5, [r0, #17]
 800c2d6:	f101 020f 	add.w	r2, r1, #15
 800c2da:	54a5      	strb	r5, [r4, r2]
 800c2dc:	07db      	lsls	r3, r3, #31
 800c2de:	bf4c      	ite	mi
 800c2e0:	7c44      	ldrbmi	r4, [r0, #17]
 800c2e2:	7c04      	ldrbpl	r4, [r0, #16]
 800c2e4:	6943      	ldr	r3, [r0, #20]
 800c2e6:	f101 0210 	add.w	r2, r1, #16
 800c2ea:	549c      	strb	r4, [r3, r2]
 800c2ec:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c2f0:	bf0c      	ite	eq
 800c2f2:	7c04      	ldrbeq	r4, [r0, #16]
 800c2f4:	7c44      	ldrbne	r4, [r0, #17]
 800c2f6:	6942      	ldr	r2, [r0, #20]
 800c2f8:	f101 0311 	add.w	r3, r1, #17
 800c2fc:	54d4      	strb	r4, [r2, r3]
 800c2fe:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c302:	bf0c      	ite	eq
 800c304:	7c04      	ldrbeq	r4, [r0, #16]
 800c306:	7c44      	ldrbne	r4, [r0, #17]
 800c308:	6942      	ldr	r2, [r0, #20]
 800c30a:	f101 0312 	add.w	r3, r1, #18
 800c30e:	54d4      	strb	r4, [r2, r3]
 800c310:	f01c 0f20 	tst.w	ip, #32
 800c314:	bf0c      	ite	eq
 800c316:	7c04      	ldrbeq	r4, [r0, #16]
 800c318:	7c44      	ldrbne	r4, [r0, #17]
 800c31a:	6942      	ldr	r2, [r0, #20]
 800c31c:	f101 0313 	add.w	r3, r1, #19
 800c320:	54d4      	strb	r4, [r2, r3]
 800c322:	f01c 0f10 	tst.w	ip, #16
 800c326:	bf0c      	ite	eq
 800c328:	7c04      	ldrbeq	r4, [r0, #16]
 800c32a:	7c44      	ldrbne	r4, [r0, #17]
 800c32c:	6942      	ldr	r2, [r0, #20]
 800c32e:	f101 0314 	add.w	r3, r1, #20
 800c332:	54d4      	strb	r4, [r2, r3]
 800c334:	f01c 0f08 	tst.w	ip, #8
 800c338:	bf0c      	ite	eq
 800c33a:	7c04      	ldrbeq	r4, [r0, #16]
 800c33c:	7c44      	ldrbne	r4, [r0, #17]
 800c33e:	6942      	ldr	r2, [r0, #20]
 800c340:	f101 0315 	add.w	r3, r1, #21
 800c344:	54d4      	strb	r4, [r2, r3]
 800c346:	f01c 0f04 	tst.w	ip, #4
 800c34a:	bf0c      	ite	eq
 800c34c:	7c04      	ldrbeq	r4, [r0, #16]
 800c34e:	7c44      	ldrbne	r4, [r0, #17]
 800c350:	6942      	ldr	r2, [r0, #20]
 800c352:	f101 0316 	add.w	r3, r1, #22
 800c356:	54d4      	strb	r4, [r2, r3]
 800c358:	f01c 0f02 	tst.w	ip, #2
 800c35c:	bf0c      	ite	eq
 800c35e:	7c04      	ldrbeq	r4, [r0, #16]
 800c360:	7c44      	ldrbne	r4, [r0, #17]
 800c362:	6942      	ldr	r2, [r0, #20]
 800c364:	f101 0317 	add.w	r3, r1, #23
 800c368:	f01c 0f01 	tst.w	ip, #1
 800c36c:	54d4      	strb	r4, [r2, r3]
 800c36e:	f101 0118 	add.w	r1, r1, #24
 800c372:	f47f af27 	bne.w	800c1c4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x290>
 800c376:	7c02      	ldrb	r2, [r0, #16]
 800c378:	e725      	b.n	800c1c6 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x292>
 800c37a:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c37e:	bf0c      	ite	eq
 800c380:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c384:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c388:	6945      	ldr	r5, [r0, #20]
 800c38a:	1c4c      	adds	r4, r1, #1
 800c38c:	f805 e004 	strb.w	lr, [r5, r4]
 800c390:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c394:	bf0c      	ite	eq
 800c396:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c39a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c39e:	6945      	ldr	r5, [r0, #20]
 800c3a0:	1c8c      	adds	r4, r1, #2
 800c3a2:	f805 e004 	strb.w	lr, [r5, r4]
 800c3a6:	f01c 0f20 	tst.w	ip, #32
 800c3aa:	bf0c      	ite	eq
 800c3ac:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c3b0:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c3b4:	6945      	ldr	r5, [r0, #20]
 800c3b6:	1ccc      	adds	r4, r1, #3
 800c3b8:	f805 e004 	strb.w	lr, [r5, r4]
 800c3bc:	f01c 0f10 	tst.w	ip, #16
 800c3c0:	bf0c      	ite	eq
 800c3c2:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c3c6:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c3ca:	6945      	ldr	r5, [r0, #20]
 800c3cc:	1d0c      	adds	r4, r1, #4
 800c3ce:	f01c 0f08 	tst.w	ip, #8
 800c3d2:	f805 e004 	strb.w	lr, [r5, r4]
 800c3d6:	bf0c      	ite	eq
 800c3d8:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c3dc:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c3e0:	6945      	ldr	r5, [r0, #20]
 800c3e2:	1d4c      	adds	r4, r1, #5
 800c3e4:	f01c 0f04 	tst.w	ip, #4
 800c3e8:	f805 e004 	strb.w	lr, [r5, r4]
 800c3ec:	bf0c      	ite	eq
 800c3ee:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c3f2:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c3f6:	6945      	ldr	r5, [r0, #20]
 800c3f8:	1d8c      	adds	r4, r1, #6
 800c3fa:	f01c 0f02 	tst.w	ip, #2
 800c3fe:	f805 e004 	strb.w	lr, [r5, r4]
 800c402:	bf0c      	ite	eq
 800c404:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800c408:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800c40c:	6945      	ldr	r5, [r0, #20]
 800c40e:	1dcc      	adds	r4, r1, #7
 800c410:	f01c 0f01 	tst.w	ip, #1
 800c414:	f805 e004 	strb.w	lr, [r5, r4]
 800c418:	bf14      	ite	ne
 800c41a:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800c41e:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800c422:	6945      	ldr	r5, [r0, #20]
 800c424:	f101 0408 	add.w	r4, r1, #8
 800c428:	f805 c004 	strb.w	ip, [r5, r4]
 800c42c:	061d      	lsls	r5, r3, #24
 800c42e:	bf54      	ite	pl
 800c430:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c434:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c438:	6945      	ldr	r5, [r0, #20]
 800c43a:	f101 0409 	add.w	r4, r1, #9
 800c43e:	f805 c004 	strb.w	ip, [r5, r4]
 800c442:	065d      	lsls	r5, r3, #25
 800c444:	bf54      	ite	pl
 800c446:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c44a:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c44e:	6945      	ldr	r5, [r0, #20]
 800c450:	f101 040a 	add.w	r4, r1, #10
 800c454:	f805 c004 	strb.w	ip, [r5, r4]
 800c458:	069d      	lsls	r5, r3, #26
 800c45a:	bf54      	ite	pl
 800c45c:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c460:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c464:	6945      	ldr	r5, [r0, #20]
 800c466:	f101 040b 	add.w	r4, r1, #11
 800c46a:	f805 c004 	strb.w	ip, [r5, r4]
 800c46e:	06dd      	lsls	r5, r3, #27
 800c470:	bf54      	ite	pl
 800c472:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c476:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c47a:	6945      	ldr	r5, [r0, #20]
 800c47c:	f101 040c 	add.w	r4, r1, #12
 800c480:	f805 c004 	strb.w	ip, [r5, r4]
 800c484:	071d      	lsls	r5, r3, #28
 800c486:	bf54      	ite	pl
 800c488:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c48c:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c490:	6945      	ldr	r5, [r0, #20]
 800c492:	f101 040d 	add.w	r4, r1, #13
 800c496:	f805 c004 	strb.w	ip, [r5, r4]
 800c49a:	075d      	lsls	r5, r3, #29
 800c49c:	bf54      	ite	pl
 800c49e:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c4a2:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c4a6:	6945      	ldr	r5, [r0, #20]
 800c4a8:	f101 040e 	add.w	r4, r1, #14
 800c4ac:	f805 c004 	strb.w	ip, [r5, r4]
 800c4b0:	079d      	lsls	r5, r3, #30
 800c4b2:	bf58      	it	pl
 800c4b4:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800c4b8:	6945      	ldr	r5, [r0, #20]
 800c4ba:	bf48      	it	mi
 800c4bc:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800c4c0:	f101 040f 	add.w	r4, r1, #15
 800c4c4:	f805 c004 	strb.w	ip, [r5, r4]
 800c4c8:	07dd      	lsls	r5, r3, #31
 800c4ca:	bf4c      	ite	mi
 800c4cc:	7c45      	ldrbmi	r5, [r0, #17]
 800c4ce:	7c05      	ldrbpl	r5, [r0, #16]
 800c4d0:	6943      	ldr	r3, [r0, #20]
 800c4d2:	f101 0410 	add.w	r4, r1, #16
 800c4d6:	551d      	strb	r5, [r3, r4]
 800c4d8:	0614      	lsls	r4, r2, #24
 800c4da:	bf54      	ite	pl
 800c4dc:	7c05      	ldrbpl	r5, [r0, #16]
 800c4de:	7c45      	ldrbmi	r5, [r0, #17]
 800c4e0:	6944      	ldr	r4, [r0, #20]
 800c4e2:	f101 0311 	add.w	r3, r1, #17
 800c4e6:	54e5      	strb	r5, [r4, r3]
 800c4e8:	0655      	lsls	r5, r2, #25
 800c4ea:	bf54      	ite	pl
 800c4ec:	7c05      	ldrbpl	r5, [r0, #16]
 800c4ee:	7c45      	ldrbmi	r5, [r0, #17]
 800c4f0:	6944      	ldr	r4, [r0, #20]
 800c4f2:	f101 0312 	add.w	r3, r1, #18
 800c4f6:	54e5      	strb	r5, [r4, r3]
 800c4f8:	0694      	lsls	r4, r2, #26
 800c4fa:	bf54      	ite	pl
 800c4fc:	7c05      	ldrbpl	r5, [r0, #16]
 800c4fe:	7c45      	ldrbmi	r5, [r0, #17]
 800c500:	6944      	ldr	r4, [r0, #20]
 800c502:	f101 0313 	add.w	r3, r1, #19
 800c506:	54e5      	strb	r5, [r4, r3]
 800c508:	06d5      	lsls	r5, r2, #27
 800c50a:	bf54      	ite	pl
 800c50c:	7c05      	ldrbpl	r5, [r0, #16]
 800c50e:	7c45      	ldrbmi	r5, [r0, #17]
 800c510:	6944      	ldr	r4, [r0, #20]
 800c512:	f101 0314 	add.w	r3, r1, #20
 800c516:	54e5      	strb	r5, [r4, r3]
 800c518:	0714      	lsls	r4, r2, #28
 800c51a:	bf54      	ite	pl
 800c51c:	7c05      	ldrbpl	r5, [r0, #16]
 800c51e:	7c45      	ldrbmi	r5, [r0, #17]
 800c520:	6944      	ldr	r4, [r0, #20]
 800c522:	f101 0315 	add.w	r3, r1, #21
 800c526:	54e5      	strb	r5, [r4, r3]
 800c528:	0755      	lsls	r5, r2, #29
 800c52a:	bf54      	ite	pl
 800c52c:	7c05      	ldrbpl	r5, [r0, #16]
 800c52e:	7c45      	ldrbmi	r5, [r0, #17]
 800c530:	6944      	ldr	r4, [r0, #20]
 800c532:	f101 0316 	add.w	r3, r1, #22
 800c536:	54e5      	strb	r5, [r4, r3]
 800c538:	0794      	lsls	r4, r2, #30
 800c53a:	bf54      	ite	pl
 800c53c:	7c05      	ldrbpl	r5, [r0, #16]
 800c53e:	7c45      	ldrbmi	r5, [r0, #17]
 800c540:	6944      	ldr	r4, [r0, #20]
 800c542:	f101 0317 	add.w	r3, r1, #23
 800c546:	54e5      	strb	r5, [r4, r3]
 800c548:	3118      	adds	r1, #24
 800c54a:	f012 0f01 	tst.w	r2, #1
 800c54e:	e637      	b.n	800c1c0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x28c>
 800c550:	0615      	lsls	r5, r2, #24
 800c552:	bf54      	ite	pl
 800c554:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c558:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c55c:	6945      	ldr	r5, [r0, #20]
 800c55e:	1c4c      	adds	r4, r1, #1
 800c560:	f805 e004 	strb.w	lr, [r5, r4]
 800c564:	0655      	lsls	r5, r2, #25
 800c566:	bf54      	ite	pl
 800c568:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c56c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c570:	6945      	ldr	r5, [r0, #20]
 800c572:	1c8c      	adds	r4, r1, #2
 800c574:	f805 e004 	strb.w	lr, [r5, r4]
 800c578:	0695      	lsls	r5, r2, #26
 800c57a:	bf54      	ite	pl
 800c57c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c580:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c584:	6945      	ldr	r5, [r0, #20]
 800c586:	1ccc      	adds	r4, r1, #3
 800c588:	f805 e004 	strb.w	lr, [r5, r4]
 800c58c:	06d5      	lsls	r5, r2, #27
 800c58e:	bf54      	ite	pl
 800c590:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c594:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c598:	6945      	ldr	r5, [r0, #20]
 800c59a:	1d0c      	adds	r4, r1, #4
 800c59c:	f805 e004 	strb.w	lr, [r5, r4]
 800c5a0:	0715      	lsls	r5, r2, #28
 800c5a2:	bf54      	ite	pl
 800c5a4:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c5a8:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c5ac:	6945      	ldr	r5, [r0, #20]
 800c5ae:	1d4c      	adds	r4, r1, #5
 800c5b0:	f805 e004 	strb.w	lr, [r5, r4]
 800c5b4:	0755      	lsls	r5, r2, #29
 800c5b6:	bf54      	ite	pl
 800c5b8:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c5bc:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c5c0:	6945      	ldr	r5, [r0, #20]
 800c5c2:	1d8c      	adds	r4, r1, #6
 800c5c4:	f805 e004 	strb.w	lr, [r5, r4]
 800c5c8:	0795      	lsls	r5, r2, #30
 800c5ca:	bf58      	it	pl
 800c5cc:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c5d0:	6945      	ldr	r5, [r0, #20]
 800c5d2:	bf48      	it	mi
 800c5d4:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c5d8:	1dcc      	adds	r4, r1, #7
 800c5da:	f805 e004 	strb.w	lr, [r5, r4]
 800c5de:	07d2      	lsls	r2, r2, #31
 800c5e0:	bf4c      	ite	mi
 800c5e2:	7c45      	ldrbmi	r5, [r0, #17]
 800c5e4:	7c05      	ldrbpl	r5, [r0, #16]
 800c5e6:	6942      	ldr	r2, [r0, #20]
 800c5e8:	f101 0408 	add.w	r4, r1, #8
 800c5ec:	5515      	strb	r5, [r2, r4]
 800c5ee:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c5f2:	bf0c      	ite	eq
 800c5f4:	7c05      	ldrbeq	r5, [r0, #16]
 800c5f6:	7c45      	ldrbne	r5, [r0, #17]
 800c5f8:	6944      	ldr	r4, [r0, #20]
 800c5fa:	f101 0209 	add.w	r2, r1, #9
 800c5fe:	54a5      	strb	r5, [r4, r2]
 800c600:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c604:	bf0c      	ite	eq
 800c606:	7c05      	ldrbeq	r5, [r0, #16]
 800c608:	7c45      	ldrbne	r5, [r0, #17]
 800c60a:	6944      	ldr	r4, [r0, #20]
 800c60c:	f101 020a 	add.w	r2, r1, #10
 800c610:	54a5      	strb	r5, [r4, r2]
 800c612:	f01c 0f20 	tst.w	ip, #32
 800c616:	bf0c      	ite	eq
 800c618:	7c05      	ldrbeq	r5, [r0, #16]
 800c61a:	7c45      	ldrbne	r5, [r0, #17]
 800c61c:	6944      	ldr	r4, [r0, #20]
 800c61e:	f101 020b 	add.w	r2, r1, #11
 800c622:	54a5      	strb	r5, [r4, r2]
 800c624:	f01c 0f10 	tst.w	ip, #16
 800c628:	bf0c      	ite	eq
 800c62a:	7c05      	ldrbeq	r5, [r0, #16]
 800c62c:	7c45      	ldrbne	r5, [r0, #17]
 800c62e:	6944      	ldr	r4, [r0, #20]
 800c630:	f101 020c 	add.w	r2, r1, #12
 800c634:	54a5      	strb	r5, [r4, r2]
 800c636:	f01c 0f08 	tst.w	ip, #8
 800c63a:	bf0c      	ite	eq
 800c63c:	7c05      	ldrbeq	r5, [r0, #16]
 800c63e:	7c45      	ldrbne	r5, [r0, #17]
 800c640:	6944      	ldr	r4, [r0, #20]
 800c642:	f101 020d 	add.w	r2, r1, #13
 800c646:	54a5      	strb	r5, [r4, r2]
 800c648:	f01c 0f04 	tst.w	ip, #4
 800c64c:	bf0c      	ite	eq
 800c64e:	7c05      	ldrbeq	r5, [r0, #16]
 800c650:	7c45      	ldrbne	r5, [r0, #17]
 800c652:	6944      	ldr	r4, [r0, #20]
 800c654:	f101 020e 	add.w	r2, r1, #14
 800c658:	54a5      	strb	r5, [r4, r2]
 800c65a:	f01c 0f02 	tst.w	ip, #2
 800c65e:	bf0c      	ite	eq
 800c660:	7c05      	ldrbeq	r5, [r0, #16]
 800c662:	7c45      	ldrbne	r5, [r0, #17]
 800c664:	6944      	ldr	r4, [r0, #20]
 800c666:	f101 020f 	add.w	r2, r1, #15
 800c66a:	54a5      	strb	r5, [r4, r2]
 800c66c:	f01c 0f01 	tst.w	ip, #1
 800c670:	bf14      	ite	ne
 800c672:	7c45      	ldrbne	r5, [r0, #17]
 800c674:	7c05      	ldrbeq	r5, [r0, #16]
 800c676:	6944      	ldr	r4, [r0, #20]
 800c678:	f101 0210 	add.w	r2, r1, #16
 800c67c:	e564      	b.n	800c148 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x214>
 800c67e:	061d      	lsls	r5, r3, #24
 800c680:	bf54      	ite	pl
 800c682:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c686:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c68a:	6945      	ldr	r5, [r0, #20]
 800c68c:	1c4c      	adds	r4, r1, #1
 800c68e:	f805 e004 	strb.w	lr, [r5, r4]
 800c692:	065d      	lsls	r5, r3, #25
 800c694:	bf54      	ite	pl
 800c696:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c69a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c69e:	6945      	ldr	r5, [r0, #20]
 800c6a0:	1c8c      	adds	r4, r1, #2
 800c6a2:	f805 e004 	strb.w	lr, [r5, r4]
 800c6a6:	069d      	lsls	r5, r3, #26
 800c6a8:	bf54      	ite	pl
 800c6aa:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c6ae:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c6b2:	6945      	ldr	r5, [r0, #20]
 800c6b4:	1ccc      	adds	r4, r1, #3
 800c6b6:	f805 e004 	strb.w	lr, [r5, r4]
 800c6ba:	06dd      	lsls	r5, r3, #27
 800c6bc:	bf54      	ite	pl
 800c6be:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c6c2:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c6c6:	6945      	ldr	r5, [r0, #20]
 800c6c8:	1d0c      	adds	r4, r1, #4
 800c6ca:	f805 e004 	strb.w	lr, [r5, r4]
 800c6ce:	071d      	lsls	r5, r3, #28
 800c6d0:	bf54      	ite	pl
 800c6d2:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c6d6:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c6da:	6945      	ldr	r5, [r0, #20]
 800c6dc:	1d4c      	adds	r4, r1, #5
 800c6de:	f805 e004 	strb.w	lr, [r5, r4]
 800c6e2:	075d      	lsls	r5, r3, #29
 800c6e4:	bf54      	ite	pl
 800c6e6:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c6ea:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c6ee:	6945      	ldr	r5, [r0, #20]
 800c6f0:	1d8c      	adds	r4, r1, #6
 800c6f2:	f805 e004 	strb.w	lr, [r5, r4]
 800c6f6:	079d      	lsls	r5, r3, #30
 800c6f8:	bf58      	it	pl
 800c6fa:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c6fe:	6945      	ldr	r5, [r0, #20]
 800c700:	bf48      	it	mi
 800c702:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c706:	1dcc      	adds	r4, r1, #7
 800c708:	f805 e004 	strb.w	lr, [r5, r4]
 800c70c:	07dd      	lsls	r5, r3, #31
 800c70e:	bf4c      	ite	mi
 800c710:	7c45      	ldrbmi	r5, [r0, #17]
 800c712:	7c05      	ldrbpl	r5, [r0, #16]
 800c714:	6943      	ldr	r3, [r0, #20]
 800c716:	f101 0408 	add.w	r4, r1, #8
 800c71a:	551d      	strb	r5, [r3, r4]
 800c71c:	0614      	lsls	r4, r2, #24
 800c71e:	bf54      	ite	pl
 800c720:	7c05      	ldrbpl	r5, [r0, #16]
 800c722:	7c45      	ldrbmi	r5, [r0, #17]
 800c724:	6944      	ldr	r4, [r0, #20]
 800c726:	f101 0309 	add.w	r3, r1, #9
 800c72a:	54e5      	strb	r5, [r4, r3]
 800c72c:	0655      	lsls	r5, r2, #25
 800c72e:	bf54      	ite	pl
 800c730:	7c05      	ldrbpl	r5, [r0, #16]
 800c732:	7c45      	ldrbmi	r5, [r0, #17]
 800c734:	6944      	ldr	r4, [r0, #20]
 800c736:	f101 030a 	add.w	r3, r1, #10
 800c73a:	54e5      	strb	r5, [r4, r3]
 800c73c:	0694      	lsls	r4, r2, #26
 800c73e:	bf54      	ite	pl
 800c740:	7c05      	ldrbpl	r5, [r0, #16]
 800c742:	7c45      	ldrbmi	r5, [r0, #17]
 800c744:	6944      	ldr	r4, [r0, #20]
 800c746:	f101 030b 	add.w	r3, r1, #11
 800c74a:	54e5      	strb	r5, [r4, r3]
 800c74c:	06d5      	lsls	r5, r2, #27
 800c74e:	bf54      	ite	pl
 800c750:	7c05      	ldrbpl	r5, [r0, #16]
 800c752:	7c45      	ldrbmi	r5, [r0, #17]
 800c754:	6944      	ldr	r4, [r0, #20]
 800c756:	f101 030c 	add.w	r3, r1, #12
 800c75a:	54e5      	strb	r5, [r4, r3]
 800c75c:	0714      	lsls	r4, r2, #28
 800c75e:	bf54      	ite	pl
 800c760:	7c05      	ldrbpl	r5, [r0, #16]
 800c762:	7c45      	ldrbmi	r5, [r0, #17]
 800c764:	6944      	ldr	r4, [r0, #20]
 800c766:	f101 030d 	add.w	r3, r1, #13
 800c76a:	54e5      	strb	r5, [r4, r3]
 800c76c:	0755      	lsls	r5, r2, #29
 800c76e:	bf54      	ite	pl
 800c770:	7c05      	ldrbpl	r5, [r0, #16]
 800c772:	7c45      	ldrbmi	r5, [r0, #17]
 800c774:	6944      	ldr	r4, [r0, #20]
 800c776:	f101 030e 	add.w	r3, r1, #14
 800c77a:	54e5      	strb	r5, [r4, r3]
 800c77c:	0794      	lsls	r4, r2, #30
 800c77e:	bf58      	it	pl
 800c780:	7c05      	ldrbpl	r5, [r0, #16]
 800c782:	6944      	ldr	r4, [r0, #20]
 800c784:	bf48      	it	mi
 800c786:	7c45      	ldrbmi	r5, [r0, #17]
 800c788:	f101 030f 	add.w	r3, r1, #15
 800c78c:	54e5      	strb	r5, [r4, r3]
 800c78e:	07d2      	lsls	r2, r2, #31
 800c790:	bf4c      	ite	mi
 800c792:	7c44      	ldrbmi	r4, [r0, #17]
 800c794:	7c04      	ldrbpl	r4, [r0, #16]
 800c796:	6942      	ldr	r2, [r0, #20]
 800c798:	f101 0310 	add.w	r3, r1, #16
 800c79c:	e5a5      	b.n	800c2ea <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3b6>
 800c79e:	061d      	lsls	r5, r3, #24
 800c7a0:	bf54      	ite	pl
 800c7a2:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c7a6:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c7aa:	6945      	ldr	r5, [r0, #20]
 800c7ac:	1c4c      	adds	r4, r1, #1
 800c7ae:	f805 e004 	strb.w	lr, [r5, r4]
 800c7b2:	065d      	lsls	r5, r3, #25
 800c7b4:	bf54      	ite	pl
 800c7b6:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c7ba:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c7be:	6945      	ldr	r5, [r0, #20]
 800c7c0:	1c8c      	adds	r4, r1, #2
 800c7c2:	f805 e004 	strb.w	lr, [r5, r4]
 800c7c6:	069d      	lsls	r5, r3, #26
 800c7c8:	bf54      	ite	pl
 800c7ca:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c7ce:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c7d2:	6945      	ldr	r5, [r0, #20]
 800c7d4:	1ccc      	adds	r4, r1, #3
 800c7d6:	f805 e004 	strb.w	lr, [r5, r4]
 800c7da:	06dd      	lsls	r5, r3, #27
 800c7dc:	bf54      	ite	pl
 800c7de:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c7e2:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c7e6:	6945      	ldr	r5, [r0, #20]
 800c7e8:	1d0c      	adds	r4, r1, #4
 800c7ea:	f805 e004 	strb.w	lr, [r5, r4]
 800c7ee:	071d      	lsls	r5, r3, #28
 800c7f0:	bf54      	ite	pl
 800c7f2:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c7f6:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c7fa:	6945      	ldr	r5, [r0, #20]
 800c7fc:	1d4c      	adds	r4, r1, #5
 800c7fe:	f805 e004 	strb.w	lr, [r5, r4]
 800c802:	075d      	lsls	r5, r3, #29
 800c804:	bf54      	ite	pl
 800c806:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c80a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c80e:	6945      	ldr	r5, [r0, #20]
 800c810:	1d8c      	adds	r4, r1, #6
 800c812:	f805 e004 	strb.w	lr, [r5, r4]
 800c816:	079d      	lsls	r5, r3, #30
 800c818:	bf58      	it	pl
 800c81a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800c81e:	6945      	ldr	r5, [r0, #20]
 800c820:	bf48      	it	mi
 800c822:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800c826:	1dcc      	adds	r4, r1, #7
 800c828:	f805 e004 	strb.w	lr, [r5, r4]
 800c82c:	07db      	lsls	r3, r3, #31
 800c82e:	bf4c      	ite	mi
 800c830:	7c45      	ldrbmi	r5, [r0, #17]
 800c832:	7c05      	ldrbpl	r5, [r0, #16]
 800c834:	6943      	ldr	r3, [r0, #20]
 800c836:	f101 0408 	add.w	r4, r1, #8
 800c83a:	551d      	strb	r5, [r3, r4]
 800c83c:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c840:	bf0c      	ite	eq
 800c842:	7c05      	ldrbeq	r5, [r0, #16]
 800c844:	7c45      	ldrbne	r5, [r0, #17]
 800c846:	6944      	ldr	r4, [r0, #20]
 800c848:	f101 0309 	add.w	r3, r1, #9
 800c84c:	54e5      	strb	r5, [r4, r3]
 800c84e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c852:	bf0c      	ite	eq
 800c854:	7c05      	ldrbeq	r5, [r0, #16]
 800c856:	7c45      	ldrbne	r5, [r0, #17]
 800c858:	6944      	ldr	r4, [r0, #20]
 800c85a:	f101 030a 	add.w	r3, r1, #10
 800c85e:	54e5      	strb	r5, [r4, r3]
 800c860:	f01c 0f20 	tst.w	ip, #32
 800c864:	bf0c      	ite	eq
 800c866:	7c05      	ldrbeq	r5, [r0, #16]
 800c868:	7c45      	ldrbne	r5, [r0, #17]
 800c86a:	6944      	ldr	r4, [r0, #20]
 800c86c:	f101 030b 	add.w	r3, r1, #11
 800c870:	54e5      	strb	r5, [r4, r3]
 800c872:	f01c 0f10 	tst.w	ip, #16
 800c876:	bf0c      	ite	eq
 800c878:	7c05      	ldrbeq	r5, [r0, #16]
 800c87a:	7c45      	ldrbne	r5, [r0, #17]
 800c87c:	6944      	ldr	r4, [r0, #20]
 800c87e:	f101 030c 	add.w	r3, r1, #12
 800c882:	54e5      	strb	r5, [r4, r3]
 800c884:	f01c 0f08 	tst.w	ip, #8
 800c888:	bf0c      	ite	eq
 800c88a:	7c05      	ldrbeq	r5, [r0, #16]
 800c88c:	7c45      	ldrbne	r5, [r0, #17]
 800c88e:	6944      	ldr	r4, [r0, #20]
 800c890:	f101 030d 	add.w	r3, r1, #13
 800c894:	54e5      	strb	r5, [r4, r3]
 800c896:	f01c 0f04 	tst.w	ip, #4
 800c89a:	bf0c      	ite	eq
 800c89c:	7c05      	ldrbeq	r5, [r0, #16]
 800c89e:	7c45      	ldrbne	r5, [r0, #17]
 800c8a0:	6944      	ldr	r4, [r0, #20]
 800c8a2:	f101 030e 	add.w	r3, r1, #14
 800c8a6:	54e5      	strb	r5, [r4, r3]
 800c8a8:	f01c 0f02 	tst.w	ip, #2
 800c8ac:	bf0c      	ite	eq
 800c8ae:	7c05      	ldrbeq	r5, [r0, #16]
 800c8b0:	7c45      	ldrbne	r5, [r0, #17]
 800c8b2:	6944      	ldr	r4, [r0, #20]
 800c8b4:	f101 030f 	add.w	r3, r1, #15
 800c8b8:	54e5      	strb	r5, [r4, r3]
 800c8ba:	f01c 0f01 	tst.w	ip, #1
 800c8be:	bf14      	ite	ne
 800c8c0:	7c45      	ldrbne	r5, [r0, #17]
 800c8c2:	7c05      	ldrbeq	r5, [r0, #16]
 800c8c4:	6944      	ldr	r4, [r0, #20]
 800c8c6:	f101 0310 	add.w	r3, r1, #16
 800c8ca:	e604      	b.n	800c4d6 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a2>

0800c8cc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800c8cc:	b570      	push	{r4, r5, r6, lr}
 800c8ce:	6804      	ldr	r4, [r0, #0]
 800c8d0:	f89d c010 	ldrb.w	ip, [sp, #16]
 800c8d4:	2c07      	cmp	r4, #7
 800c8d6:	f89d e014 	ldrb.w	lr, [sp, #20]
 800c8da:	d000      	beq.n	800c8de <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x12>
 800c8dc:	bd70      	pop	{r4, r5, r6, pc}
 800c8de:	061e      	lsls	r6, r3, #24
 800c8e0:	ea4f 1141 	mov.w	r1, r1, lsl #5
 800c8e4:	bf54      	ite	pl
 800c8e6:	7c06      	ldrbpl	r6, [r0, #16]
 800c8e8:	7c46      	ldrbmi	r6, [r0, #17]
 800c8ea:	6945      	ldr	r5, [r0, #20]
 800c8ec:	1c4c      	adds	r4, r1, #1
 800c8ee:	552e      	strb	r6, [r5, r4]
 800c8f0:	065d      	lsls	r5, r3, #25
 800c8f2:	bf54      	ite	pl
 800c8f4:	7c06      	ldrbpl	r6, [r0, #16]
 800c8f6:	7c46      	ldrbmi	r6, [r0, #17]
 800c8f8:	6945      	ldr	r5, [r0, #20]
 800c8fa:	1c8c      	adds	r4, r1, #2
 800c8fc:	552e      	strb	r6, [r5, r4]
 800c8fe:	069e      	lsls	r6, r3, #26
 800c900:	bf54      	ite	pl
 800c902:	7c06      	ldrbpl	r6, [r0, #16]
 800c904:	7c46      	ldrbmi	r6, [r0, #17]
 800c906:	6945      	ldr	r5, [r0, #20]
 800c908:	1ccc      	adds	r4, r1, #3
 800c90a:	552e      	strb	r6, [r5, r4]
 800c90c:	06dd      	lsls	r5, r3, #27
 800c90e:	bf54      	ite	pl
 800c910:	7c06      	ldrbpl	r6, [r0, #16]
 800c912:	7c46      	ldrbmi	r6, [r0, #17]
 800c914:	6945      	ldr	r5, [r0, #20]
 800c916:	1d0c      	adds	r4, r1, #4
 800c918:	552e      	strb	r6, [r5, r4]
 800c91a:	071e      	lsls	r6, r3, #28
 800c91c:	bf54      	ite	pl
 800c91e:	7c06      	ldrbpl	r6, [r0, #16]
 800c920:	7c46      	ldrbmi	r6, [r0, #17]
 800c922:	6945      	ldr	r5, [r0, #20]
 800c924:	1d4c      	adds	r4, r1, #5
 800c926:	552e      	strb	r6, [r5, r4]
 800c928:	075d      	lsls	r5, r3, #29
 800c92a:	bf54      	ite	pl
 800c92c:	7c06      	ldrbpl	r6, [r0, #16]
 800c92e:	7c46      	ldrbmi	r6, [r0, #17]
 800c930:	6945      	ldr	r5, [r0, #20]
 800c932:	1d8c      	adds	r4, r1, #6
 800c934:	552e      	strb	r6, [r5, r4]
 800c936:	079e      	lsls	r6, r3, #30
 800c938:	6945      	ldr	r5, [r0, #20]
 800c93a:	bf54      	ite	pl
 800c93c:	7c06      	ldrbpl	r6, [r0, #16]
 800c93e:	7c46      	ldrbmi	r6, [r0, #17]
 800c940:	1dcc      	adds	r4, r1, #7
 800c942:	552e      	strb	r6, [r5, r4]
 800c944:	07dd      	lsls	r5, r3, #31
 800c946:	bf4c      	ite	mi
 800c948:	7c45      	ldrbmi	r5, [r0, #17]
 800c94a:	7c05      	ldrbpl	r5, [r0, #16]
 800c94c:	6943      	ldr	r3, [r0, #20]
 800c94e:	f101 0408 	add.w	r4, r1, #8
 800c952:	551d      	strb	r5, [r3, r4]
 800c954:	0614      	lsls	r4, r2, #24
 800c956:	bf54      	ite	pl
 800c958:	7c05      	ldrbpl	r5, [r0, #16]
 800c95a:	7c45      	ldrbmi	r5, [r0, #17]
 800c95c:	6944      	ldr	r4, [r0, #20]
 800c95e:	f101 0309 	add.w	r3, r1, #9
 800c962:	54e5      	strb	r5, [r4, r3]
 800c964:	0656      	lsls	r6, r2, #25
 800c966:	bf54      	ite	pl
 800c968:	7c05      	ldrbpl	r5, [r0, #16]
 800c96a:	7c45      	ldrbmi	r5, [r0, #17]
 800c96c:	6944      	ldr	r4, [r0, #20]
 800c96e:	f101 030a 	add.w	r3, r1, #10
 800c972:	54e5      	strb	r5, [r4, r3]
 800c974:	0695      	lsls	r5, r2, #26
 800c976:	bf54      	ite	pl
 800c978:	7c05      	ldrbpl	r5, [r0, #16]
 800c97a:	7c45      	ldrbmi	r5, [r0, #17]
 800c97c:	6944      	ldr	r4, [r0, #20]
 800c97e:	f101 030b 	add.w	r3, r1, #11
 800c982:	54e5      	strb	r5, [r4, r3]
 800c984:	06d4      	lsls	r4, r2, #27
 800c986:	bf54      	ite	pl
 800c988:	7c05      	ldrbpl	r5, [r0, #16]
 800c98a:	7c45      	ldrbmi	r5, [r0, #17]
 800c98c:	6944      	ldr	r4, [r0, #20]
 800c98e:	f101 030c 	add.w	r3, r1, #12
 800c992:	54e5      	strb	r5, [r4, r3]
 800c994:	0716      	lsls	r6, r2, #28
 800c996:	bf54      	ite	pl
 800c998:	7c05      	ldrbpl	r5, [r0, #16]
 800c99a:	7c45      	ldrbmi	r5, [r0, #17]
 800c99c:	6944      	ldr	r4, [r0, #20]
 800c99e:	f101 030d 	add.w	r3, r1, #13
 800c9a2:	54e5      	strb	r5, [r4, r3]
 800c9a4:	0755      	lsls	r5, r2, #29
 800c9a6:	bf54      	ite	pl
 800c9a8:	7c05      	ldrbpl	r5, [r0, #16]
 800c9aa:	7c45      	ldrbmi	r5, [r0, #17]
 800c9ac:	6944      	ldr	r4, [r0, #20]
 800c9ae:	f101 030e 	add.w	r3, r1, #14
 800c9b2:	54e5      	strb	r5, [r4, r3]
 800c9b4:	0794      	lsls	r4, r2, #30
 800c9b6:	bf58      	it	pl
 800c9b8:	7c05      	ldrbpl	r5, [r0, #16]
 800c9ba:	6944      	ldr	r4, [r0, #20]
 800c9bc:	bf48      	it	mi
 800c9be:	7c45      	ldrbmi	r5, [r0, #17]
 800c9c0:	f101 030f 	add.w	r3, r1, #15
 800c9c4:	54e5      	strb	r5, [r4, r3]
 800c9c6:	07d2      	lsls	r2, r2, #31
 800c9c8:	bf4c      	ite	mi
 800c9ca:	7c44      	ldrbmi	r4, [r0, #17]
 800c9cc:	7c04      	ldrbpl	r4, [r0, #16]
 800c9ce:	6942      	ldr	r2, [r0, #20]
 800c9d0:	f101 0310 	add.w	r3, r1, #16
 800c9d4:	54d4      	strb	r4, [r2, r3]
 800c9d6:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c9da:	bf0c      	ite	eq
 800c9dc:	7c04      	ldrbeq	r4, [r0, #16]
 800c9de:	7c44      	ldrbne	r4, [r0, #17]
 800c9e0:	6942      	ldr	r2, [r0, #20]
 800c9e2:	f101 0311 	add.w	r3, r1, #17
 800c9e6:	54d4      	strb	r4, [r2, r3]
 800c9e8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c9ec:	bf14      	ite	ne
 800c9ee:	7c44      	ldrbne	r4, [r0, #17]
 800c9f0:	7c04      	ldrbeq	r4, [r0, #16]
 800c9f2:	6942      	ldr	r2, [r0, #20]
 800c9f4:	f101 0312 	add.w	r3, r1, #18
 800c9f8:	54d4      	strb	r4, [r2, r3]
 800c9fa:	f01c 0f20 	tst.w	ip, #32
 800c9fe:	bf14      	ite	ne
 800ca00:	7c44      	ldrbne	r4, [r0, #17]
 800ca02:	7c04      	ldrbeq	r4, [r0, #16]
 800ca04:	6942      	ldr	r2, [r0, #20]
 800ca06:	f101 0313 	add.w	r3, r1, #19
 800ca0a:	54d4      	strb	r4, [r2, r3]
 800ca0c:	f01c 0f10 	tst.w	ip, #16
 800ca10:	bf14      	ite	ne
 800ca12:	7c44      	ldrbne	r4, [r0, #17]
 800ca14:	7c04      	ldrbeq	r4, [r0, #16]
 800ca16:	6942      	ldr	r2, [r0, #20]
 800ca18:	f101 0314 	add.w	r3, r1, #20
 800ca1c:	54d4      	strb	r4, [r2, r3]
 800ca1e:	f01c 0f08 	tst.w	ip, #8
 800ca22:	bf14      	ite	ne
 800ca24:	7c44      	ldrbne	r4, [r0, #17]
 800ca26:	7c04      	ldrbeq	r4, [r0, #16]
 800ca28:	6942      	ldr	r2, [r0, #20]
 800ca2a:	f101 0315 	add.w	r3, r1, #21
 800ca2e:	54d4      	strb	r4, [r2, r3]
 800ca30:	f01c 0f04 	tst.w	ip, #4
 800ca34:	bf14      	ite	ne
 800ca36:	7c44      	ldrbne	r4, [r0, #17]
 800ca38:	7c04      	ldrbeq	r4, [r0, #16]
 800ca3a:	6942      	ldr	r2, [r0, #20]
 800ca3c:	f101 0316 	add.w	r3, r1, #22
 800ca40:	54d4      	strb	r4, [r2, r3]
 800ca42:	f01c 0f02 	tst.w	ip, #2
 800ca46:	bf14      	ite	ne
 800ca48:	7c44      	ldrbne	r4, [r0, #17]
 800ca4a:	7c04      	ldrbeq	r4, [r0, #16]
 800ca4c:	6942      	ldr	r2, [r0, #20]
 800ca4e:	f101 0317 	add.w	r3, r1, #23
 800ca52:	54d4      	strb	r4, [r2, r3]
 800ca54:	f01c 0f01 	tst.w	ip, #1
 800ca58:	bf14      	ite	ne
 800ca5a:	7c44      	ldrbne	r4, [r0, #17]
 800ca5c:	7c04      	ldrbeq	r4, [r0, #16]
 800ca5e:	6942      	ldr	r2, [r0, #20]
 800ca60:	f101 0318 	add.w	r3, r1, #24
 800ca64:	54d4      	strb	r4, [r2, r3]
 800ca66:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800ca6a:	bf0c      	ite	eq
 800ca6c:	7c04      	ldrbeq	r4, [r0, #16]
 800ca6e:	7c44      	ldrbne	r4, [r0, #17]
 800ca70:	6942      	ldr	r2, [r0, #20]
 800ca72:	f101 0319 	add.w	r3, r1, #25
 800ca76:	54d4      	strb	r4, [r2, r3]
 800ca78:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800ca7c:	bf0c      	ite	eq
 800ca7e:	7c04      	ldrbeq	r4, [r0, #16]
 800ca80:	7c44      	ldrbne	r4, [r0, #17]
 800ca82:	6942      	ldr	r2, [r0, #20]
 800ca84:	f101 031a 	add.w	r3, r1, #26
 800ca88:	54d4      	strb	r4, [r2, r3]
 800ca8a:	f01e 0f20 	tst.w	lr, #32
 800ca8e:	bf0c      	ite	eq
 800ca90:	7c04      	ldrbeq	r4, [r0, #16]
 800ca92:	7c44      	ldrbne	r4, [r0, #17]
 800ca94:	6942      	ldr	r2, [r0, #20]
 800ca96:	f101 031b 	add.w	r3, r1, #27
 800ca9a:	54d4      	strb	r4, [r2, r3]
 800ca9c:	f01e 0f10 	tst.w	lr, #16
 800caa0:	bf0c      	ite	eq
 800caa2:	7c04      	ldrbeq	r4, [r0, #16]
 800caa4:	7c44      	ldrbne	r4, [r0, #17]
 800caa6:	6942      	ldr	r2, [r0, #20]
 800caa8:	f101 031c 	add.w	r3, r1, #28
 800caac:	54d4      	strb	r4, [r2, r3]
 800caae:	f01e 0f08 	tst.w	lr, #8
 800cab2:	bf0c      	ite	eq
 800cab4:	7c04      	ldrbeq	r4, [r0, #16]
 800cab6:	7c44      	ldrbne	r4, [r0, #17]
 800cab8:	6942      	ldr	r2, [r0, #20]
 800caba:	f101 031d 	add.w	r3, r1, #29
 800cabe:	54d4      	strb	r4, [r2, r3]
 800cac0:	f01e 0f04 	tst.w	lr, #4
 800cac4:	bf0c      	ite	eq
 800cac6:	7c04      	ldrbeq	r4, [r0, #16]
 800cac8:	7c44      	ldrbne	r4, [r0, #17]
 800caca:	6942      	ldr	r2, [r0, #20]
 800cacc:	f101 031e 	add.w	r3, r1, #30
 800cad0:	54d4      	strb	r4, [r2, r3]
 800cad2:	f01e 0f02 	tst.w	lr, #2
 800cad6:	6942      	ldr	r2, [r0, #20]
 800cad8:	bf0c      	ite	eq
 800cada:	7c04      	ldrbeq	r4, [r0, #16]
 800cadc:	7c44      	ldrbne	r4, [r0, #17]
 800cade:	f101 031f 	add.w	r3, r1, #31
 800cae2:	54d4      	strb	r4, [r2, r3]
 800cae4:	f01e 0f01 	tst.w	lr, #1
 800cae8:	bf14      	ite	ne
 800caea:	7c42      	ldrbne	r2, [r0, #17]
 800caec:	7c02      	ldrbeq	r2, [r0, #16]
 800caee:	6943      	ldr	r3, [r0, #20]
 800caf0:	3120      	adds	r1, #32
 800caf2:	545a      	strb	r2, [r3, r1]
 800caf4:	bd70      	pop	{r4, r5, r6, pc}
 800caf6:	bf00      	nop

0800caf8 <WS28xx::~WS28xx()>:
 800caf8:	2200      	movs	r2, #0
 800cafa:	4b01      	ldr	r3, [pc, #4]	; (800cb00 <WS28xx::~WS28xx()+0x8>)
 800cafc:	601a      	str	r2, [r3, #0]
 800cafe:	4770      	bx	lr
 800cb00:	20001944 	andcs	r1, r0, r4, asr #18

0800cb04 <WS28xx::SetupBuffers()>:
 800cb04:	b513      	push	{r0, r1, r4, lr}
 800cb06:	4604      	mov	r4, r0
 800cb08:	a801      	add	r0, sp, #4
 800cb0a:	f006 fc7d 	bl	8013408 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800cb0e:	9b01      	ldr	r3, [sp, #4]
 800cb10:	4a07      	ldr	r2, [pc, #28]	; (800cb30 <WS28xx::SetupBuffers()+0x2c>)
 800cb12:	085b      	lsrs	r3, r3, #1
 800cb14:	f023 0303 	bic.w	r3, r3, #3
 800cb18:	6160      	str	r0, [r4, #20]
 800cb1a:	4418      	add	r0, r3
 800cb1c:	68e3      	ldr	r3, [r4, #12]
 800cb1e:	61a0      	str	r0, [r4, #24]
 800cb20:	6013      	str	r3, [r2, #0]
 800cb22:	3303      	adds	r3, #3
 800cb24:	f023 0303 	bic.w	r3, r3, #3
 800cb28:	60e3      	str	r3, [r4, #12]
 800cb2a:	b002      	add	sp, #8
 800cb2c:	bd10      	pop	{r4, pc}
 800cb2e:	bf00      	nop
 800cb30:	20001940 	andcs	r1, r0, r0, asr #18

0800cb34 <WS28xx::WS28xx(PixelConfiguration&)>:
 800cb34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb36:	23aa      	movs	r3, #170	; 0xaa
 800cb38:	2203      	movs	r2, #3
 800cb3a:	e9c0 2300 	strd	r2, r3, [r0]
 800cb3e:	2306      	movs	r3, #6
 800cb40:	6083      	str	r3, [r0, #8]
 800cb42:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 800cb46:	8243      	strh	r3, [r0, #18]
 800cb48:	2300      	movs	r3, #0
 800cb4a:	460d      	mov	r5, r1
 800cb4c:	4604      	mov	r4, r0
 800cb4e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800cb52:	4b17      	ldr	r3, [pc, #92]	; (800cbb0 <WS28xx::WS28xx(PixelConfiguration&)+0x7c>)
 800cb54:	a901      	add	r1, sp, #4
 800cb56:	6018      	str	r0, [r3, #0]
 800cb58:	4628      	mov	r0, r5
 800cb5a:	f7fe fdd3 	bl	800b704 <PixelConfiguration::Validate(unsigned int&)>
 800cb5e:	4628      	mov	r0, r5
 800cb60:	f7fe fe3c 	bl	800b7dc <PixelConfiguration::Dump()>
 800cb64:	68ab      	ldr	r3, [r5, #8]
 800cb66:	686a      	ldr	r2, [r5, #4]
 800cb68:	60a3      	str	r3, [r4, #8]
 800cb6a:	8a2b      	ldrh	r3, [r5, #16]
 800cb6c:	6829      	ldr	r1, [r5, #0]
 800cb6e:	8223      	strh	r3, [r4, #16]
 800cb70:	7cab      	ldrb	r3, [r5, #18]
 800cb72:	7ce8      	ldrb	r0, [r5, #19]
 800cb74:	74e3      	strb	r3, [r4, #19]
 800cb76:	9b01      	ldr	r3, [sp, #4]
 800cb78:	6021      	str	r1, [r4, #0]
 800cb7a:	4353      	muls	r3, r2
 800cb7c:	6062      	str	r2, [r4, #4]
 800cb7e:	74a0      	strb	r0, [r4, #18]
 800cb80:	b998      	cbnz	r0, 800cbaa <WS28xx::WS28xx(PixelConfiguration&)+0x76>
 800cb82:	390b      	subs	r1, #11
 800cb84:	2902      	cmp	r1, #2
 800cb86:	60e3      	str	r3, [r4, #12]
 800cb88:	bf9e      	ittt	ls
 800cb8a:	68e3      	ldrls	r3, [r4, #12]
 800cb8c:	3208      	addls	r2, #8
 800cb8e:	18d2      	addls	r2, r2, r3
 800cb90:	4620      	mov	r0, r4
 800cb92:	bf98      	it	ls
 800cb94:	60e2      	strls	r2, [r4, #12]
 800cb96:	f7ff ffb5 	bl	800cb04 <WS28xx::SetupBuffers()>
 800cb9a:	f006 fbab 	bl	80132f4 <gd32_spi_dma_begin()>
 800cb9e:	68e8      	ldr	r0, [r5, #12]
 800cba0:	f006 fc1e 	bl	80133e0 <gd32_spi_dma_set_speed_hz(unsigned int)>
 800cba4:	4620      	mov	r0, r4
 800cba6:	b003      	add	sp, #12
 800cba8:	bd30      	pop	{r4, r5, pc}
 800cbaa:	00db      	lsls	r3, r3, #3
 800cbac:	3301      	adds	r3, #1
 800cbae:	e7e8      	b.n	800cb82 <WS28xx::WS28xx(PixelConfiguration&)+0x4e>
 800cbb0:	20001944 	andcs	r1, r0, r4, asr #18

0800cbb4 <WS28xx::Update()>:
 800cbb4:	2200      	movs	r2, #0
 800cbb6:	b430      	push	{r4, r5}
 800cbb8:	4b0b      	ldr	r3, [pc, #44]	; (800cbe8 <WS28xx::Update()+0x34>)
 800cbba:	681b      	ldr	r3, [r3, #0]
 800cbbc:	68c1      	ldr	r1, [r0, #12]
 800cbbe:	6944      	ldr	r4, [r0, #20]
 800cbc0:	4299      	cmp	r1, r3
 800cbc2:	d902      	bls.n	800cbca <WS28xx::Update()+0x16>
 800cbc4:	54e2      	strb	r2, [r4, r3]
 800cbc6:	3301      	adds	r3, #1
 800cbc8:	e7f8      	b.n	800cbbc <WS28xx::Update()+0x8>
 800cbca:	2300      	movs	r3, #0
 800cbcc:	6980      	ldr	r0, [r0, #24]
 800cbce:	084d      	lsrs	r5, r1, #1
 800cbd0:	429d      	cmp	r5, r3
 800cbd2:	d006      	beq.n	800cbe2 <WS28xx::Update()+0x2e>
 800cbd4:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800cbd8:	ba52      	rev16	r2, r2
 800cbda:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800cbde:	3301      	adds	r3, #1
 800cbe0:	e7f6      	b.n	800cbd0 <WS28xx::Update()+0x1c>
 800cbe2:	bc30      	pop	{r4, r5}
 800cbe4:	f006 bc18 	b.w	8013418 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800cbe8:	20001940 	andcs	r1, r0, r0, asr #18

0800cbec <WS28xx::Blackout()>:
 800cbec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cbee:	e9d0 6305 	ldrd	r6, r3, [r0, #20]
 800cbf2:	4604      	mov	r4, r0
 800cbf4:	6143      	str	r3, [r0, #20]
 800cbf6:	f3bf 8f6f 	isb	sy
 800cbfa:	f006 fc27 	bl	801344c <gd32_spi_dma_tx_is_active()>
 800cbfe:	2800      	cmp	r0, #0
 800cc00:	d1f9      	bne.n	800cbf6 <WS28xx::Blackout()+0xa>
 800cc02:	6822      	ldr	r2, [r4, #0]
 800cc04:	6963      	ldr	r3, [r4, #20]
 800cc06:	3a0b      	subs	r2, #11
 800cc08:	2a02      	cmp	r2, #2
 800cc0a:	7018      	strb	r0, [r3, #0]
 800cc0c:	d82a      	bhi.n	800cc64 <WS28xx::Blackout()+0x78>
 800cc0e:	4605      	mov	r5, r0
 800cc10:	4607      	mov	r7, r0
 800cc12:	7058      	strb	r0, [r3, #1]
 800cc14:	7098      	strb	r0, [r3, #2]
 800cc16:	70d8      	strb	r0, [r3, #3]
 800cc18:	6863      	ldr	r3, [r4, #4]
 800cc1a:	42ab      	cmp	r3, r5
 800cc1c:	d908      	bls.n	800cc30 <WS28xx::Blackout()+0x44>
 800cc1e:	2300      	movs	r3, #0
 800cc20:	4629      	mov	r1, r5
 800cc22:	461a      	mov	r2, r3
 800cc24:	4620      	mov	r0, r4
 800cc26:	9700      	str	r7, [sp, #0]
 800cc28:	f7ff f984 	bl	800bf34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800cc2c:	3501      	adds	r5, #1
 800cc2e:	e7f3      	b.n	800cc18 <WS28xx::Blackout()+0x2c>
 800cc30:	6821      	ldr	r1, [r4, #0]
 800cc32:	68e2      	ldr	r2, [r4, #12]
 800cc34:	390b      	subs	r1, #11
 800cc36:	2901      	cmp	r1, #1
 800cc38:	bf94      	ite	ls
 800cc3a:	21ff      	movls	r1, #255	; 0xff
 800cc3c:	2100      	movhi	r1, #0
 800cc3e:	6960      	ldr	r0, [r4, #20]
 800cc40:	3a04      	subs	r2, #4
 800cc42:	1883      	adds	r3, r0, r2
 800cc44:	5481      	strb	r1, [r0, r2]
 800cc46:	7059      	strb	r1, [r3, #1]
 800cc48:	7099      	strb	r1, [r3, #2]
 800cc4a:	70d9      	strb	r1, [r3, #3]
 800cc4c:	4620      	mov	r0, r4
 800cc4e:	f7ff ffb1 	bl	800cbb4 <WS28xx::Update()>
 800cc52:	f3bf 8f6f 	isb	sy
 800cc56:	f006 fbf9 	bl	801344c <gd32_spi_dma_tx_is_active()>
 800cc5a:	2800      	cmp	r0, #0
 800cc5c:	d1f9      	bne.n	800cc52 <WS28xx::Blackout()+0x66>
 800cc5e:	6166      	str	r6, [r4, #20]
 800cc60:	b003      	add	sp, #12
 800cc62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc64:	6963      	ldr	r3, [r4, #20]
 800cc66:	6821      	ldr	r1, [r4, #0]
 800cc68:	1c5a      	adds	r2, r3, #1
 800cc6a:	b101      	cbz	r1, 800cc6e <WS28xx::Blackout()+0x82>
 800cc6c:	7c21      	ldrb	r1, [r4, #16]
 800cc6e:	68e0      	ldr	r0, [r4, #12]
 800cc70:	3001      	adds	r0, #1
 800cc72:	4403      	add	r3, r0
 800cc74:	429a      	cmp	r2, r3
 800cc76:	d0e9      	beq.n	800cc4c <WS28xx::Blackout()+0x60>
 800cc78:	f802 1b01 	strb.w	r1, [r2], #1
 800cc7c:	e7fa      	b.n	800cc74 <WS28xx::Blackout()+0x88>
	...

0800cc80 <RemoteConfig::HandleList()>:
 800cc80:	2212      	movs	r2, #18
 800cc82:	6803      	ldr	r3, [r0, #0]
 800cc84:	4931      	ldr	r1, [pc, #196]	; (800cd4c <RemoteConfig::HandleList()+0xcc>)
 800cc86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc8a:	fb02 1103 	mla	r1, r2, r3, r1
 800cc8e:	220c      	movs	r2, #12
 800cc90:	4604      	mov	r4, r0
 800cc92:	6843      	ldr	r3, [r0, #4]
 800cc94:	482e      	ldr	r0, [pc, #184]	; (800cd50 <RemoteConfig::HandleList()+0xd0>)
 800cc96:	4e2f      	ldr	r6, [pc, #188]	; (800cd54 <RemoteConfig::HandleList()+0xd4>)
 800cc98:	fb02 0003 	mla	r0, r2, r3, r0
 800cc9c:	4b2e      	ldr	r3, [pc, #184]	; (800cd58 <RemoteConfig::HandleList()+0xd8>)
 800cc9e:	4f2f      	ldr	r7, [pc, #188]	; (800cd5c <RemoteConfig::HandleList()+0xdc>)
 800cca0:	681b      	ldr	r3, [r3, #0]
 800cca2:	6835      	ldr	r5, [r6, #0]
 800cca4:	f8d3 c010 	ldr.w	ip, [r3, #16]
 800cca8:	f897 9009 	ldrb.w	r9, [r7, #9]
 800ccac:	fa5f f38c 	uxtb.w	r3, ip
 800ccb0:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 800ccb4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 800ccb8:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800ccbc:	b089      	sub	sp, #36	; 0x24
 800ccbe:	3507      	adds	r5, #7
 800ccc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 800ccc4:	f1b9 0f00 	cmp.w	r9, #0
 800ccc8:	d023      	beq.n	800cd12 <RemoteConfig::HandleList()+0x92>
 800ccca:	b2d2      	uxtb	r2, r2
 800cccc:	3709      	adds	r7, #9
 800ccce:	9201      	str	r2, [sp, #4]
 800ccd0:	fa5f f28c 	uxtb.w	r2, ip
 800ccd4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800ccd8:	9200      	str	r2, [sp, #0]
 800ccda:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800ccde:	4628      	mov	r0, r5
 800cce0:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800cce4:	4a1e      	ldr	r2, [pc, #120]	; (800cd60 <RemoteConfig::HandleList()+0xe0>)
 800cce6:	f8cd e008 	str.w	lr, [sp, #8]
 800ccea:	f7fc fc3d 	bl	8009568 <snprintf>
 800ccee:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800ccf2:	2b05      	cmp	r3, #5
 800ccf4:	d11d      	bne.n	800cd32 <RemoteConfig::HandleList()+0xb2>
 800ccf6:	f642 1305 	movw	r3, #10501	; 0x2905
 800ccfa:	9300      	str	r3, [sp, #0]
 800ccfc:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800cd00:	b282      	uxth	r2, r0
 800cd02:	4629      	mov	r1, r5
 800cd04:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800cd08:	f002 fa4c 	bl	800f1a4 <udp_send>
 800cd0c:	b009      	add	sp, #36	; 0x24
 800cd0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cd12:	b2d2      	uxtb	r2, r2
 800cd14:	9201      	str	r2, [sp, #4]
 800cd16:	fa5f f28c 	uxtb.w	r2, ip
 800cd1a:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800cd1e:	e9cd e102 	strd	lr, r1, [sp, #8]
 800cd22:	9200      	str	r2, [sp, #0]
 800cd24:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800cd28:	4628      	mov	r0, r5
 800cd2a:	4a0e      	ldr	r2, [pc, #56]	; (800cd64 <RemoteConfig::HandleList()+0xe4>)
 800cd2c:	f7fc fc1c 	bl	8009568 <snprintf>
 800cd30:	e7dd      	b.n	800ccee <RemoteConfig::HandleList()+0x6e>
 800cd32:	2b06      	cmp	r3, #6
 800cd34:	d1ea      	bne.n	800cd0c <RemoteConfig::HandleList()+0x8c>
 800cd36:	6833      	ldr	r3, [r6, #0]
 800cd38:	799b      	ldrb	r3, [r3, #6]
 800cd3a:	2b2a      	cmp	r3, #42	; 0x2a
 800cd3c:	d1e6      	bne.n	800cd0c <RemoteConfig::HandleList()+0x8c>
 800cd3e:	f642 1305 	movw	r3, #10501	; 0x2905
 800cd42:	9300      	str	r3, [sp, #0]
 800cd44:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800cd48:	e7da      	b.n	800cd00 <RemoteConfig::HandleList()+0x80>
 800cd4a:	bf00      	nop
 800cd4c:	0801498c 	stmdaeq	r1, {r2, r3, r7, r8, fp, lr}
 800cd50:	08014a2e 	stmdaeq	r1, {r1, r2, r3, r5, r9, fp, lr}
 800cd54:	20001948 	andcs	r1, r0, r8, asr #18
 800cd58:	2000a288 	andcs	sl, r0, r8, lsl #5
 800cd5c:	2000194c 	andcs	r1, r0, ip, asr #18
 800cd60:	080148c6 	stmdaeq	r1, {r1, r2, r6, r7, fp, lr}
 800cd64:	080148df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, fp, lr}

0800cd68 <RemoteConfig::HandleDisplayGet()>:
 800cd68:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800cd6c:	2b08      	cmp	r3, #8
 800cd6e:	d11d      	bne.n	800cdac <RemoteConfig::HandleDisplayGet()+0x44>
 800cd70:	4b0f      	ldr	r3, [pc, #60]	; (800cdb0 <RemoteConfig::HandleDisplayGet()+0x48>)
 800cd72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd74:	681b      	ldr	r3, [r3, #0]
 800cd76:	4d0f      	ldr	r5, [pc, #60]	; (800cdb4 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800cd78:	7c19      	ldrb	r1, [r3, #16]
 800cd7a:	4a0f      	ldr	r2, [pc, #60]	; (800cdb8 <RemoteConfig::HandleDisplayGet()+0x50>)
 800cd7c:	4b0f      	ldr	r3, [pc, #60]	; (800cdbc <RemoteConfig::HandleDisplayGet()+0x54>)
 800cd7e:	4604      	mov	r4, r0
 800cd80:	2900      	cmp	r1, #0
 800cd82:	bf18      	it	ne
 800cd84:	4613      	movne	r3, r2
 800cd86:	6828      	ldr	r0, [r5, #0]
 800cd88:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800cd8c:	4a0c      	ldr	r2, [pc, #48]	; (800cdc0 <RemoteConfig::HandleDisplayGet()+0x58>)
 800cd8e:	f7fc fbeb 	bl	8009568 <snprintf>
 800cd92:	f642 1305 	movw	r3, #10501	; 0x2905
 800cd96:	9300      	str	r3, [sp, #0]
 800cd98:	b282      	uxth	r2, r0
 800cd9a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800cd9e:	6829      	ldr	r1, [r5, #0]
 800cda0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800cda4:	f002 f9fe 	bl	800f1a4 <udp_send>
 800cda8:	b003      	add	sp, #12
 800cdaa:	bd30      	pop	{r4, r5, pc}
 800cdac:	4770      	bx	lr
 800cdae:	bf00      	nop
 800cdb0:	2000a8c0 	andcs	sl, r0, r0, asr #17
 800cdb4:	20001948 	andcs	r1, r0, r8, asr #18
 800cdb8:	080148f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, lr}
 800cdbc:	080148f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, fp, lr}
 800cdc0:	080148fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, lr}

0800cdc4 <RemoteConfig::HandleTftpSet()>:
 800cdc4:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800cdc8:	2a06      	cmp	r2, #6
 800cdca:	d109      	bne.n	800cde0 <RemoteConfig::HandleTftpSet()+0x1c>
 800cdcc:	4a05      	ldr	r2, [pc, #20]	; (800cde4 <RemoteConfig::HandleTftpSet()+0x20>)
 800cdce:	6812      	ldr	r2, [r2, #0]
 800cdd0:	7992      	ldrb	r2, [r2, #6]
 800cdd2:	3a30      	subs	r2, #48	; 0x30
 800cdd4:	bf18      	it	ne
 800cdd6:	2201      	movne	r2, #1
 800cdd8:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800cddc:	f000 bd74 	b.w	800d8c8 <RemoteConfig::PlatformHandleTftpSet()>
 800cde0:	4770      	bx	lr
 800cde2:	bf00      	nop
 800cde4:	20001948 	andcs	r1, r0, r8, asr #18

0800cde8 <RemoteConfig::HandleTftpGet()>:
 800cde8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cdea:	4604      	mov	r4, r0
 800cdec:	f000 fd74 	bl	800d8d8 <RemoteConfig::PlatformHandleTftpGet()>
 800cdf0:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800cdf4:	2b05      	cmp	r3, #5
 800cdf6:	d118      	bne.n	800ce2a <RemoteConfig::HandleTftpGet()+0x42>
 800cdf8:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800cdfc:	4d0c      	ldr	r5, [pc, #48]	; (800ce30 <RemoteConfig::HandleTftpGet()+0x48>)
 800cdfe:	4a0d      	ldr	r2, [pc, #52]	; (800ce34 <RemoteConfig::HandleTftpGet()+0x4c>)
 800ce00:	4b0d      	ldr	r3, [pc, #52]	; (800ce38 <RemoteConfig::HandleTftpGet()+0x50>)
 800ce02:	6828      	ldr	r0, [r5, #0]
 800ce04:	2900      	cmp	r1, #0
 800ce06:	bf08      	it	eq
 800ce08:	4613      	moveq	r3, r2
 800ce0a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800ce0e:	4a0b      	ldr	r2, [pc, #44]	; (800ce3c <RemoteConfig::HandleTftpGet()+0x54>)
 800ce10:	f7fc fbaa 	bl	8009568 <snprintf>
 800ce14:	f642 1305 	movw	r3, #10501	; 0x2905
 800ce18:	b282      	uxth	r2, r0
 800ce1a:	9300      	str	r3, [sp, #0]
 800ce1c:	6829      	ldr	r1, [r5, #0]
 800ce1e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ce22:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800ce26:	f002 f9bd 	bl	800f1a4 <udp_send>
 800ce2a:	b003      	add	sp, #12
 800ce2c:	bd30      	pop	{r4, r5, pc}
 800ce2e:	bf00      	nop
 800ce30:	20001948 	andcs	r1, r0, r8, asr #18
 800ce34:	080148f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, lr}
 800ce38:	080148f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, fp, lr}
 800ce3c:	08014908 	stmdaeq	r1, {r3, r8, fp, lr}

0800ce40 <RemoteConfig::HandleVersion()>:
 800ce40:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800ce44:	2b08      	cmp	r3, #8
 800ce46:	d116      	bne.n	800ce76 <RemoteConfig::HandleVersion()+0x36>
 800ce48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce4a:	4d0b      	ldr	r5, [pc, #44]	; (800ce78 <RemoteConfig::HandleVersion()+0x38>)
 800ce4c:	4604      	mov	r4, r0
 800ce4e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800ce52:	4b0a      	ldr	r3, [pc, #40]	; (800ce7c <RemoteConfig::HandleVersion()+0x3c>)
 800ce54:	4a0a      	ldr	r2, [pc, #40]	; (800ce80 <RemoteConfig::HandleVersion()+0x40>)
 800ce56:	6828      	ldr	r0, [r5, #0]
 800ce58:	f7fc fb86 	bl	8009568 <snprintf>
 800ce5c:	f642 1305 	movw	r3, #10501	; 0x2905
 800ce60:	9300      	str	r3, [sp, #0]
 800ce62:	b282      	uxth	r2, r0
 800ce64:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ce68:	6829      	ldr	r1, [r5, #0]
 800ce6a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800ce6e:	f002 f999 	bl	800f1a4 <udp_send>
 800ce72:	b003      	add	sp, #12
 800ce74:	bd30      	pop	{r4, r5, pc}
 800ce76:	4770      	bx	lr
 800ce78:	20001948 	andcs	r1, r0, r8, asr #18
 800ce7c:	2000a966 	andcs	sl, r0, r6, ror #18
 800ce80:	08014911 	stmdaeq	r1, {r0, r4, r8, fp, lr}

0800ce84 <RemoteConfig::HandleUptime()>:
 800ce84:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800ce88:	b1fb      	cbz	r3, 800ceca <RemoteConfig::HandleUptime()+0x46>
 800ce8a:	4b10      	ldr	r3, [pc, #64]	; (800cecc <RemoteConfig::HandleUptime()+0x48>)
 800ce8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce8e:	681a      	ldr	r2, [r3, #0]
 800ce90:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800ce94:	4604      	mov	r4, r0
 800ce96:	2b07      	cmp	r3, #7
 800ce98:	d115      	bne.n	800cec6 <RemoteConfig::HandleUptime()+0x42>
 800ce9a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ce9e:	4d0c      	ldr	r5, [pc, #48]	; (800ced0 <RemoteConfig::HandleUptime()+0x4c>)
 800cea0:	fbb2 f3f3 	udiv	r3, r2, r3
 800cea4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800cea8:	4a0a      	ldr	r2, [pc, #40]	; (800ced4 <RemoteConfig::HandleUptime()+0x50>)
 800ceaa:	6828      	ldr	r0, [r5, #0]
 800ceac:	f7fc fb5c 	bl	8009568 <snprintf>
 800ceb0:	f642 1305 	movw	r3, #10501	; 0x2905
 800ceb4:	9300      	str	r3, [sp, #0]
 800ceb6:	b282      	uxth	r2, r0
 800ceb8:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800cebc:	6829      	ldr	r1, [r5, #0]
 800cebe:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800cec2:	f002 f96f 	bl	800f1a4 <udp_send>
 800cec6:	b003      	add	sp, #12
 800cec8:	bd30      	pop	{r4, r5, pc}
 800ceca:	4770      	bx	lr
 800cecc:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800ced0:	20001948 	andcs	r1, r0, r8, asr #18
 800ced4:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}

0800ced8 <RemoteConfig::HandleDisplaySet()>:
 800ced8:	b538      	push	{r3, r4, r5, lr}
 800ceda:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800cede:	2b09      	cmp	r3, #9
 800cee0:	d113      	bne.n	800cf0a <RemoteConfig::HandleDisplaySet()+0x32>
 800cee2:	4b0a      	ldr	r3, [pc, #40]	; (800cf0c <RemoteConfig::HandleDisplaySet()+0x34>)
 800cee4:	681c      	ldr	r4, [r3, #0]
 800cee6:	4b0a      	ldr	r3, [pc, #40]	; (800cf10 <RemoteConfig::HandleDisplaySet()+0x38>)
 800cee8:	69a0      	ldr	r0, [r4, #24]
 800ceea:	681b      	ldr	r3, [r3, #0]
 800ceec:	7a5d      	ldrb	r5, [r3, #9]
 800ceee:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800cef2:	4259      	negs	r1, r3
 800cef4:	4159      	adcs	r1, r3
 800cef6:	b140      	cbz	r0, 800cf0a <RemoteConfig::HandleDisplaySet()+0x32>
 800cef8:	6803      	ldr	r3, [r0, #0]
 800cefa:	7421      	strb	r1, [r4, #16]
 800cefc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cefe:	4798      	blx	r3
 800cf00:	2d30      	cmp	r5, #48	; 0x30
 800cf02:	bf1e      	ittt	ne
 800cf04:	4b03      	ldrne	r3, [pc, #12]	; (800cf14 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800cf06:	681b      	ldrne	r3, [r3, #0]
 800cf08:	6063      	strne	r3, [r4, #4]
 800cf0a:	bd38      	pop	{r3, r4, r5, pc}
 800cf0c:	2000a8c0 	andcs	sl, r0, r0, asr #17
 800cf10:	20001948 	andcs	r1, r0, r8, asr #18
 800cf14:	2000a9c4 	andcs	sl, r0, r4, asr #19

0800cf18 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800cf18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf1c:	f100 0a0c 	add.w	sl, r0, #12
 800cf20:	4604      	mov	r4, r0
 800cf22:	e9c0 1200 	strd	r1, r2, [r0]
 800cf26:	6083      	str	r3, [r0, #8]
 800cf28:	4650      	mov	r0, sl
 800cf2a:	4690      	mov	r8, r2
 800cf2c:	4689      	mov	r9, r1
 800cf2e:	461f      	mov	r7, r3
 800cf30:	f000 fd12 	bl	800d958 <HttpDaemon::HttpDaemon()>
 800cf34:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800cf38:	2500      	movs	r5, #0
 800cf3a:	4e16      	ldr	r6, [pc, #88]	; (800cf94 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800cf3c:	f8df b058 	ldr.w	fp, [pc, #88]	; 800cf98 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800cf40:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800cf44:	4b15      	ldr	r3, [pc, #84]	; (800cf9c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800cf46:	4631      	mov	r1, r6
 800cf48:	f8db 0000 	ldr.w	r0, [fp]
 800cf4c:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800cf50:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800cf54:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800cf58:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800cf5c:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800cf60:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800cf64:	601c      	str	r4, [r3, #0]
 800cf66:	f002 fdf1 	bl	800fb4c <Network::MacAddressCopyTo(unsigned char*)>
 800cf6a:	f642 1105 	movw	r1, #10501	; 0x2905
 800cf6e:	f8db 0000 	ldr.w	r0, [fp]
 800cf72:	f886 9006 	strb.w	r9, [r6, #6]
 800cf76:	f886 8007 	strb.w	r8, [r6, #7]
 800cf7a:	7237      	strb	r7, [r6, #8]
 800cf7c:	7275      	strb	r5, [r6, #9]
 800cf7e:	f002 fddf 	bl	800fb40 <Network::Begin(unsigned short)>
 800cf82:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800cf86:	4650      	mov	r0, sl
 800cf88:	f000 fcfe 	bl	800d988 <HttpDaemon::Start()>
 800cf8c:	4620      	mov	r0, r4
 800cf8e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf92:	bf00      	nop
 800cf94:	2000194c 	andcs	r1, r0, ip, asr #18
 800cf98:	2000a288 	andcs	sl, r0, r8, lsl #5
 800cf9c:	20001970 	andcs	r1, r0, r0, ror r9

0800cfa0 <RemoteConfig::GetStringNode() const>:
 800cfa0:	2012      	movs	r0, #18
 800cfa2:	4b03      	ldr	r3, [pc, #12]	; (800cfb0 <RemoteConfig::GetStringNode() const+0x10>)
 800cfa4:	799a      	ldrb	r2, [r3, #6]
 800cfa6:	4b03      	ldr	r3, [pc, #12]	; (800cfb4 <RemoteConfig::GetStringNode() const+0x14>)
 800cfa8:	fb00 3002 	mla	r0, r0, r2, r3
 800cfac:	4770      	bx	lr
 800cfae:	bf00      	nop
 800cfb0:	2000194c 	andcs	r1, r0, ip, asr #18
 800cfb4:	0801498c 	stmdaeq	r1, {r2, r3, r7, r8, fp, lr}

0800cfb8 <RemoteConfig::GetStringOutput() const>:
 800cfb8:	200c      	movs	r0, #12
 800cfba:	4b03      	ldr	r3, [pc, #12]	; (800cfc8 <RemoteConfig::GetStringOutput() const+0x10>)
 800cfbc:	79da      	ldrb	r2, [r3, #7]
 800cfbe:	4b03      	ldr	r3, [pc, #12]	; (800cfcc <RemoteConfig::GetStringOutput() const+0x14>)
 800cfc0:	fb00 3002 	mla	r0, r0, r2, r3
 800cfc4:	4770      	bx	lr
 800cfc6:	bf00      	nop
 800cfc8:	2000194c 	andcs	r1, r0, ip, asr #18
 800cfcc:	08014a2e 	stmdaeq	r1, {r1, r2, r3, r5, r9, fp, lr}

0800cfd0 <RemoteConfig::SetDisable(bool)>:
 800cfd0:	b538      	push	{r3, r4, r5, lr}
 800cfd2:	4604      	mov	r4, r0
 800cfd4:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800cfd8:	b171      	cbz	r1, 800cff8 <RemoteConfig::SetDisable(bool)+0x28>
 800cfda:	b963      	cbnz	r3, 800cff6 <RemoteConfig::SetDisable(bool)+0x26>
 800cfdc:	4b0d      	ldr	r3, [pc, #52]	; (800d014 <RemoteConfig::SetDisable(bool)+0x44>)
 800cfde:	f642 1105 	movw	r1, #10501	; 0x2905
 800cfe2:	6818      	ldr	r0, [r3, #0]
 800cfe4:	f002 fdaf 	bl	800fb46 <Network::End(unsigned short)>
 800cfe8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800cfec:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800cff0:	2301      	movs	r3, #1
 800cff2:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800cff6:	bd38      	pop	{r3, r4, r5, pc}
 800cff8:	2b00      	cmp	r3, #0
 800cffa:	d0fc      	beq.n	800cff6 <RemoteConfig::SetDisable(bool)+0x26>
 800cffc:	4b05      	ldr	r3, [pc, #20]	; (800d014 <RemoteConfig::SetDisable(bool)+0x44>)
 800cffe:	460d      	mov	r5, r1
 800d000:	6818      	ldr	r0, [r3, #0]
 800d002:	f642 1105 	movw	r1, #10501	; 0x2905
 800d006:	f002 fd9b 	bl	800fb40 <Network::Begin(unsigned short)>
 800d00a:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800d00e:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800d012:	e7f0      	b.n	800cff6 <RemoteConfig::SetDisable(bool)+0x26>
 800d014:	2000a288 	andcs	sl, r0, r8, lsl #5

0800d018 <RemoteConfig::SetDisplayName(char const*)>:
 800d018:	2217      	movs	r2, #23
 800d01a:	4809      	ldr	r0, [pc, #36]	; (800d040 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800d01c:	b508      	push	{r3, lr}
 800d01e:	1e4b      	subs	r3, r1, #1
 800d020:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d024:	b931      	cbnz	r1, 800d034 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800d026:	f005 f8ef 	bl	8012208 <memset>
 800d02a:	2200      	movs	r2, #0
 800d02c:	4b05      	ldr	r3, [pc, #20]	; (800d044 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800d02e:	f883 2020 	strb.w	r2, [r3, #32]
 800d032:	bd08      	pop	{r3, pc}
 800d034:	3a01      	subs	r2, #1
 800d036:	f800 1b01 	strb.w	r1, [r0], #1
 800d03a:	d1f1      	bne.n	800d020 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800d03c:	e7f5      	b.n	800d02a <RemoteConfig::SetDisplayName(char const*)+0x12>
 800d03e:	bf00      	nop
 800d040:	20001955 	andcs	r1, r0, r5, asr r9
 800d044:	2000194c 	andcs	r1, r0, ip, asr #18

0800d048 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800d048:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d04a:	4604      	mov	r4, r0
 800d04c:	4616      	mov	r6, r2
 800d04e:	460d      	mov	r5, r1
 800d050:	4f29      	ldr	r7, [pc, #164]	; (800d0f8 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800d052:	b085      	sub	sp, #20
 800d054:	b9b9      	cbnz	r1, 800d086 <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800d056:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800d05a:	6839      	ldr	r1, [r7, #0]
 800d05c:	aa03      	add	r2, sp, #12
 800d05e:	3105      	adds	r1, #5
 800d060:	9303      	str	r3, [sp, #12]
 800d062:	f000 fc07 	bl	800d874 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d066:	1e03      	subs	r3, r0, #0
 800d068:	da1d      	bge.n	800d0a6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800d06a:	f642 1305 	movw	r3, #10501	; 0x2905
 800d06e:	220b      	movs	r2, #11
 800d070:	9300      	str	r3, [sp, #0]
 800d072:	4922      	ldr	r1, [pc, #136]	; (800d0fc <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800d074:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d078:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d07c:	f002 f892 	bl	800f1a4 <udp_send>
 800d080:	200c      	movs	r0, #12
 800d082:	b005      	add	sp, #20
 800d084:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d086:	9203      	str	r2, [sp, #12]
 800d088:	aa03      	add	r2, sp, #12
 800d08a:	6039      	str	r1, [r7, #0]
 800d08c:	f000 fbf2 	bl	800d874 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d090:	1e03      	subs	r3, r0, #0
 800d092:	da08      	bge.n	800d0a6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800d094:	2e0b      	cmp	r6, #11
 800d096:	4632      	mov	r2, r6
 800d098:	4628      	mov	r0, r5
 800d09a:	bf28      	it	cs
 800d09c:	220b      	movcs	r2, #11
 800d09e:	4917      	ldr	r1, [pc, #92]	; (800d0fc <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800d0a0:	f005 f890 	bl	80121c4 <memcpy>
 800d0a4:	e7ec      	b.n	800d080 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800d0a6:	201c      	movs	r0, #28
 800d0a8:	4343      	muls	r3, r0
 800d0aa:	4915      	ldr	r1, [pc, #84]	; (800d100 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800d0ac:	18ca      	adds	r2, r1, r3
 800d0ae:	6852      	ldr	r2, [r2, #4]
 800d0b0:	58cb      	ldr	r3, [r1, r3]
 800d0b2:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800d0b6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d0ba:	07d2      	lsls	r2, r2, #31
 800d0bc:	bf48      	it	mi
 800d0be:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800d0c2:	a903      	add	r1, sp, #12
 800d0c4:	bf48      	it	mi
 800d0c6:	58d3      	ldrmi	r3, [r2, r3]
 800d0c8:	4798      	blx	r3
 800d0ca:	9a03      	ldr	r2, [sp, #12]
 800d0cc:	b965      	cbnz	r5, 800d0e8 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800d0ce:	f642 1305 	movw	r3, #10501	; 0x2905
 800d0d2:	6839      	ldr	r1, [r7, #0]
 800d0d4:	9300      	str	r3, [sp, #0]
 800d0d6:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d0da:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d0de:	b292      	uxth	r2, r2
 800d0e0:	f002 f860 	bl	800f1a4 <udp_send>
 800d0e4:	9803      	ldr	r0, [sp, #12]
 800d0e6:	e7cc      	b.n	800d082 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800d0e8:	42b2      	cmp	r2, r6
 800d0ea:	bf28      	it	cs
 800d0ec:	4632      	movcs	r2, r6
 800d0ee:	4628      	mov	r0, r5
 800d0f0:	6839      	ldr	r1, [r7, #0]
 800d0f2:	f005 f872 	bl	80121da <memmove>
 800d0f6:	e7f5      	b.n	800d0e4 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800d0f8:	20001948 	andcs	r1, r0, r8, asr #18
 800d0fc:	08014929 	stmdaeq	r1, {r0, r3, r5, r8, fp, lr}
 800d100:	08014bc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, fp, lr}

0800d104 <RemoteConfig::HandleGetNoParams()>:
 800d104:	2200      	movs	r2, #0
 800d106:	4611      	mov	r1, r2
 800d108:	f7ff bf9e 	b.w	800d048 <RemoteConfig::HandleGet(void*, unsigned int)>

0800d10c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800d10c:	b510      	push	{r4, lr}
 800d10e:	460c      	mov	r4, r1
 800d110:	4b07      	ldr	r3, [pc, #28]	; (800d130 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800d112:	b08a      	sub	sp, #40	; 0x28
 800d114:	6819      	ldr	r1, [r3, #0]
 800d116:	a801      	add	r0, sp, #4
 800d118:	f000 fa02 	bl	800d520 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800d11c:	4905      	ldr	r1, [pc, #20]	; (800d134 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800d11e:	4623      	mov	r3, r4
 800d120:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d124:	6809      	ldr	r1, [r1, #0]
 800d126:	a801      	add	r0, sp, #4
 800d128:	f000 fb1e 	bl	800d768 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800d12c:	b00a      	add	sp, #40	; 0x28
 800d12e:	bd10      	pop	{r4, pc}
 800d130:	2000299c 	mulcs	r0, ip, r9
 800d134:	20001948 	andcs	r1, r0, r8, asr #18

0800d138 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800d138:	b513      	push	{r0, r1, r4, lr}
 800d13a:	460c      	mov	r4, r1
 800d13c:	4b07      	ldr	r3, [pc, #28]	; (800d15c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800d13e:	a801      	add	r0, sp, #4
 800d140:	6819      	ldr	r1, [r3, #0]
 800d142:	f002 fedd 	bl	800ff00 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d146:	4906      	ldr	r1, [pc, #24]	; (800d160 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800d148:	4623      	mov	r3, r4
 800d14a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d14e:	6809      	ldr	r1, [r1, #0]
 800d150:	a801      	add	r0, sp, #4
 800d152:	f003 f8c1 	bl	80102d8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800d156:	b002      	add	sp, #8
 800d158:	bd10      	pop	{r4, pc}
 800d15a:	bf00      	nop
 800d15c:	20002998 	mulcs	r0, r8, r9
 800d160:	20001948 	andcs	r1, r0, r8, asr #18

0800d164 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800d164:	b510      	push	{r4, lr}
 800d166:	460c      	mov	r4, r1
 800d168:	4b07      	ldr	r3, [pc, #28]	; (800d188 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800d16a:	b08a      	sub	sp, #40	; 0x28
 800d16c:	6819      	ldr	r1, [r3, #0]
 800d16e:	a801      	add	r0, sp, #4
 800d170:	f7fd fa76 	bl	800a660 <E131Params::E131Params(E131ParamsStore*)>
 800d174:	4905      	ldr	r1, [pc, #20]	; (800d18c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800d176:	4623      	mov	r3, r4
 800d178:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d17c:	6809      	ldr	r1, [r1, #0]
 800d17e:	a801      	add	r0, sp, #4
 800d180:	f7fd fcc2 	bl	800ab08 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800d184:	b00a      	add	sp, #40	; 0x28
 800d186:	bd10      	pop	{r4, pc}
 800d188:	20002994 	mulcs	r0, r4, r9
 800d18c:	20001948 	andcs	r1, r0, r8, asr #18

0800d190 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800d190:	b510      	push	{r4, lr}
 800d192:	460c      	mov	r4, r1
 800d194:	4b07      	ldr	r3, [pc, #28]	; (800d1b4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800d196:	b08c      	sub	sp, #48	; 0x30
 800d198:	6819      	ldr	r1, [r3, #0]
 800d19a:	a801      	add	r0, sp, #4
 800d19c:	f7fd ff46 	bl	800b02c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800d1a0:	4905      	ldr	r1, [pc, #20]	; (800d1b8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800d1a2:	4623      	mov	r3, r4
 800d1a4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d1a8:	6809      	ldr	r1, [r1, #0]
 800d1aa:	a801      	add	r0, sp, #4
 800d1ac:	f7fe f9dc 	bl	800b568 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 800d1b0:	b00c      	add	sp, #48	; 0x30
 800d1b2:	bd10      	pop	{r4, pc}
 800d1b4:	200029a0 	andcs	r2, r0, r0, lsr #19
 800d1b8:	20001948 	andcs	r1, r0, r8, asr #18

0800d1bc <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800d1bc:	b510      	push	{r4, lr}
 800d1be:	460c      	mov	r4, r1
 800d1c0:	4b07      	ldr	r3, [pc, #28]	; (800d1e0 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800d1c2:	b08a      	sub	sp, #40	; 0x28
 800d1c4:	6819      	ldr	r1, [r3, #0]
 800d1c6:	4668      	mov	r0, sp
 800d1c8:	f003 fe52 	bl	8010e70 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800d1cc:	4905      	ldr	r1, [pc, #20]	; (800d1e4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800d1ce:	4623      	mov	r3, r4
 800d1d0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d1d4:	4668      	mov	r0, sp
 800d1d6:	6809      	ldr	r1, [r1, #0]
 800d1d8:	f003 ff80 	bl	80110dc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800d1dc:	b00a      	add	sp, #40	; 0x28
 800d1de:	bd10      	pop	{r4, pc}
 800d1e0:	20002990 	mulcs	r0, r0, r9
 800d1e4:	20001948 	andcs	r1, r0, r8, asr #18

0800d1e8 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800d1e8:	b530      	push	{r4, r5, lr}
 800d1ea:	b085      	sub	sp, #20
 800d1ec:	4604      	mov	r4, r0
 800d1ee:	9201      	str	r2, [sp, #4]
 800d1f0:	b9c9      	cbnz	r1, 800d226 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800d1f2:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800d1f6:	9303      	str	r3, [sp, #12]
 800d1f8:	4b1d      	ldr	r3, [pc, #116]	; (800d270 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800d1fa:	aa03      	add	r2, sp, #12
 800d1fc:	6819      	ldr	r1, [r3, #0]
 800d1fe:	3101      	adds	r1, #1
 800d200:	f000 fb38 	bl	800d874 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d204:	2800      	cmp	r0, #0
 800d206:	db24      	blt.n	800d252 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800d208:	221c      	movs	r2, #28
 800d20a:	4b1a      	ldr	r3, [pc, #104]	; (800d274 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 800d20c:	fb02 3300 	mla	r3, r2, r0, r3
 800d210:	68da      	ldr	r2, [r3, #12]
 800d212:	689b      	ldr	r3, [r3, #8]
 800d214:	1051      	asrs	r1, r2, #1
 800d216:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d21a:	07d2      	lsls	r2, r2, #31
 800d21c:	bf44      	itt	mi
 800d21e:	5862      	ldrmi	r2, [r4, r1]
 800d220:	58d3      	ldrmi	r3, [r2, r3]
 800d222:	4798      	blx	r3
 800d224:	e015      	b.n	800d252 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800d226:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800d22a:	460d      	mov	r5, r1
 800d22c:	4611      	mov	r1, r2
 800d22e:	d810      	bhi.n	800d252 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800d230:	2200      	movs	r2, #0
 800d232:	4b11      	ldr	r3, [pc, #68]	; (800d278 <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 800d234:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800d238:	781b      	ldrb	r3, [r3, #0]
 800d23a:	07d8      	lsls	r0, r3, #31
 800d23c:	d50b      	bpl.n	800d256 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800d23e:	782b      	ldrb	r3, [r5, #0]
 800d240:	2b7b      	cmp	r3, #123	; 0x7b
 800d242:	d108      	bne.n	800d256 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800d244:	3901      	subs	r1, #1
 800d246:	4628      	mov	r0, r5
 800d248:	b289      	uxth	r1, r1
 800d24a:	f004 f803 	bl	8011254 <properties::convert_json_file(char*, unsigned short, bool)>
 800d24e:	2800      	cmp	r0, #0
 800d250:	dc09      	bgt.n	800d266 <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 800d252:	b005      	add	sp, #20
 800d254:	bd30      	pop	{r4, r5, pc}
 800d256:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 800d25a:	4b05      	ldr	r3, [pc, #20]	; (800d270 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800d25c:	4620      	mov	r0, r4
 800d25e:	601d      	str	r5, [r3, #0]
 800d260:	aa01      	add	r2, sp, #4
 800d262:	1c69      	adds	r1, r5, #1
 800d264:	e7cc      	b.n	800d200 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800d266:	b280      	uxth	r0, r0
 800d268:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800d26c:	e7f5      	b.n	800d25a <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 800d26e:	bf00      	nop
 800d270:	20001948 	andcs	r1, r0, r8, asr #18
 800d274:	08014bc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, fp, lr}
 800d278:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc

0800d27c <RemoteConfig::Run()>:
 800d27c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d280:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800d284:	2b00      	cmp	r3, #0
 800d286:	d15e      	bne.n	800d346 <RemoteConfig::Run()+0xca>
 800d288:	4604      	mov	r4, r0
 800d28a:	4d4b      	ldr	r5, [pc, #300]	; (800d3b8 <RemoteConfig::Run()+0x13c>)
 800d28c:	300c      	adds	r0, #12
 800d28e:	f000 fdf5 	bl	800de7c <HttpDaemon::Run()>
 800d292:	4629      	mov	r1, r5
 800d294:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d298:	f10d 030e 	add.w	r3, sp, #14
 800d29c:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800d2a0:	f001 ff5a 	bl	800f158 <udp_recv2>
 800d2a4:	2803      	cmp	r0, #3
 800d2a6:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800d2aa:	d94c      	bls.n	800d346 <RemoteConfig::Run()+0xca>
 800d2ac:	682b      	ldr	r3, [r5, #0]
 800d2ae:	3801      	subs	r0, #1
 800d2b0:	5c1a      	ldrb	r2, [r3, r0]
 800d2b2:	2a0a      	cmp	r2, #10
 800d2b4:	bf08      	it	eq
 800d2b6:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800d2ba:	7819      	ldrb	r1, [r3, #0]
 800d2bc:	293f      	cmp	r1, #63	; 0x3f
 800d2be:	d137      	bne.n	800d330 <RemoteConfig::Run()+0xb4>
 800d2c0:	493e      	ldr	r1, [pc, #248]	; (800d3bc <RemoteConfig::Run()+0x140>)
 800d2c2:	2200      	movs	r2, #0
 800d2c4:	460f      	mov	r7, r1
 800d2c6:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800d2ca:	3801      	subs	r0, #1
 800d2cc:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800d2d0:	7b8e      	ldrb	r6, [r1, #14]
 800d2d2:	898d      	ldrh	r5, [r1, #12]
 800d2d4:	b176      	cbz	r6, 800d2f4 <RemoteConfig::Run()+0x78>
 800d2d6:	4285      	cmp	r5, r0
 800d2d8:	d30e      	bcc.n	800d2f8 <RemoteConfig::Run()+0x7c>
 800d2da:	3201      	adds	r2, #1
 800d2dc:	2a09      	cmp	r2, #9
 800d2de:	f101 0110 	add.w	r1, r1, #16
 800d2e2:	d1f5      	bne.n	800d2d0 <RemoteConfig::Run()+0x54>
 800d2e4:	f642 1305 	movw	r3, #10501	; 0x2905
 800d2e8:	9300      	str	r3, [sp, #0]
 800d2ea:	2208      	movs	r2, #8
 800d2ec:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d2f0:	4933      	ldr	r1, [pc, #204]	; (800d3c0 <RemoteConfig::Run()+0x144>)
 800d2f2:	e054      	b.n	800d39e <RemoteConfig::Run()+0x122>
 800d2f4:	4285      	cmp	r5, r0
 800d2f6:	d1f0      	bne.n	800d2da <RemoteConfig::Run()+0x5e>
 800d2f8:	688e      	ldr	r6, [r1, #8]
 800d2fa:	f103 0c01 	add.w	ip, r3, #1
 800d2fe:	4435      	add	r5, r6
 800d300:	42b5      	cmp	r5, r6
 800d302:	d006      	beq.n	800d312 <RemoteConfig::Run()+0x96>
 800d304:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800d308:	f816 eb01 	ldrb.w	lr, [r6], #1
 800d30c:	45f0      	cmp	r8, lr
 800d30e:	d0f7      	beq.n	800d300 <RemoteConfig::Run()+0x84>
 800d310:	e7e3      	b.n	800d2da <RemoteConfig::Run()+0x5e>
 800d312:	0113      	lsls	r3, r2, #4
 800d314:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800d318:	6852      	ldr	r2, [r2, #4]
 800d31a:	58fb      	ldr	r3, [r7, r3]
 800d31c:	1051      	asrs	r1, r2, #1
 800d31e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d322:	07d2      	lsls	r2, r2, #31
 800d324:	d401      	bmi.n	800d32a <RemoteConfig::Run()+0xae>
 800d326:	4798      	blx	r3
 800d328:	e00d      	b.n	800d346 <RemoteConfig::Run()+0xca>
 800d32a:	5862      	ldr	r2, [r4, r1]
 800d32c:	58d3      	ldr	r3, [r2, r3]
 800d32e:	e7fa      	b.n	800d326 <RemoteConfig::Run()+0xaa>
 800d330:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800d334:	b93a      	cbnz	r2, 800d346 <RemoteConfig::Run()+0xca>
 800d336:	2923      	cmp	r1, #35	; 0x23
 800d338:	d108      	bne.n	800d34c <RemoteConfig::Run()+0xd0>
 800d33a:	4611      	mov	r1, r2
 800d33c:	4620      	mov	r0, r4
 800d33e:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800d342:	f7ff ff51 	bl	800d1e8 <RemoteConfig::HandleSet(void*, unsigned int)>
 800d346:	b004      	add	sp, #16
 800d348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d34c:	2921      	cmp	r1, #33	; 0x21
 800d34e:	d1fa      	bne.n	800d346 <RemoteConfig::Run()+0xca>
 800d350:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d354:	3a01      	subs	r2, #1
 800d356:	2a05      	cmp	r2, #5
 800d358:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 800d35c:	d918      	bls.n	800d390 <RemoteConfig::Run()+0x114>
 800d35e:	1c59      	adds	r1, r3, #1
 800d360:	4608      	mov	r0, r1
 800d362:	4d18      	ldr	r5, [pc, #96]	; (800d3c4 <RemoteConfig::Run()+0x148>)
 800d364:	f103 0c06 	add.w	ip, r3, #6
 800d368:	4560      	cmp	r0, ip
 800d36a:	d01d      	beq.n	800d3a8 <RemoteConfig::Run()+0x12c>
 800d36c:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d370:	f815 6b01 	ldrb.w	r6, [r5], #1
 800d374:	42b7      	cmp	r7, r6
 800d376:	d0f7      	beq.n	800d368 <RemoteConfig::Run()+0xec>
 800d378:	2a08      	cmp	r2, #8
 800d37a:	d909      	bls.n	800d390 <RemoteConfig::Run()+0x114>
 800d37c:	4a12      	ldr	r2, [pc, #72]	; (800d3c8 <RemoteConfig::Run()+0x14c>)
 800d37e:	3309      	adds	r3, #9
 800d380:	428b      	cmp	r3, r1
 800d382:	d017      	beq.n	800d3b4 <RemoteConfig::Run()+0x138>
 800d384:	f811 5b01 	ldrb.w	r5, [r1], #1
 800d388:	f812 0b01 	ldrb.w	r0, [r2], #1
 800d38c:	4285      	cmp	r5, r0
 800d38e:	d0f7      	beq.n	800d380 <RemoteConfig::Run()+0x104>
 800d390:	f642 1305 	movw	r3, #10501	; 0x2905
 800d394:	2208      	movs	r2, #8
 800d396:	9300      	str	r3, [sp, #0]
 800d398:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d39c:	490b      	ldr	r1, [pc, #44]	; (800d3cc <RemoteConfig::Run()+0x150>)
 800d39e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d3a2:	f001 feff 	bl	800f1a4 <udp_send>
 800d3a6:	e7ce      	b.n	800d346 <RemoteConfig::Run()+0xca>
 800d3a8:	2300      	movs	r3, #0
 800d3aa:	4a09      	ldr	r2, [pc, #36]	; (800d3d0 <RemoteConfig::Run()+0x154>)
 800d3ac:	011b      	lsls	r3, r3, #4
 800d3ae:	4620      	mov	r0, r4
 800d3b0:	58d3      	ldr	r3, [r2, r3]
 800d3b2:	e7b8      	b.n	800d326 <RemoteConfig::Run()+0xaa>
 800d3b4:	2301      	movs	r3, #1
 800d3b6:	e7f8      	b.n	800d3aa <RemoteConfig::Run()+0x12e>
 800d3b8:	20001948 	andcs	r1, r0, r8, asr #18
 800d3bc:	08014ac0 	stmdaeq	r1, {r6, r7, r9, fp, lr}
 800d3c0:	0801494d 	stmdaeq	r1, {r0, r2, r3, r6, r8, fp, lr}
 800d3c4:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800d3c8:	0801493b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, lr}
 800d3cc:	08014944 	stmdaeq	r1, {r2, r6, r8, fp, lr}
 800d3d0:	08014b50 	stmdaeq	r1, {r4, r6, r8, r9, fp, lr}

0800d3d4 <RemoteConfig::HandleSetRconfig()>:
 800d3d4:	b510      	push	{r4, lr}
 800d3d6:	4604      	mov	r4, r0
 800d3d8:	4b09      	ldr	r3, [pc, #36]	; (800d400 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800d3da:	b08a      	sub	sp, #40	; 0x28
 800d3dc:	6819      	ldr	r1, [r3, #0]
 800d3de:	a801      	add	r0, sp, #4
 800d3e0:	f000 f89e 	bl	800d520 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800d3e4:	4b07      	ldr	r3, [pc, #28]	; (800d404 <RemoteConfig::HandleSetRconfig()+0x30>)
 800d3e6:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d3ea:	6819      	ldr	r1, [r3, #0]
 800d3ec:	a801      	add	r0, sp, #4
 800d3ee:	f000 f8ad 	bl	800d54c <RemoteConfigParams::Load(char const*, unsigned int)>
 800d3f2:	4621      	mov	r1, r4
 800d3f4:	a801      	add	r0, sp, #4
 800d3f6:	f000 f9c4 	bl	800d782 <RemoteConfigParams::Set(RemoteConfig*)>
 800d3fa:	b00a      	add	sp, #40	; 0x28
 800d3fc:	bd10      	pop	{r4, pc}
 800d3fe:	bf00      	nop
 800d400:	2000299c 	mulcs	r0, ip, r9
 800d404:	20001948 	andcs	r1, r0, r8, asr #18

0800d408 <RemoteConfig::HandleSetNetworkTxt()>:
 800d408:	b513      	push	{r0, r1, r4, lr}
 800d40a:	4604      	mov	r4, r0
 800d40c:	4b06      	ldr	r3, [pc, #24]	; (800d428 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800d40e:	a801      	add	r0, sp, #4
 800d410:	6819      	ldr	r1, [r3, #0]
 800d412:	f002 fd75 	bl	800ff00 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d416:	4b05      	ldr	r3, [pc, #20]	; (800d42c <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800d418:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d41c:	6819      	ldr	r1, [r3, #0]
 800d41e:	a801      	add	r0, sp, #4
 800d420:	f002 fd8e 	bl	800ff40 <NetworkParams::Load(char const*, unsigned int)>
 800d424:	b002      	add	sp, #8
 800d426:	bd10      	pop	{r4, pc}
 800d428:	20002998 	mulcs	r0, r8, r9
 800d42c:	20001948 	andcs	r1, r0, r8, asr #18

0800d430 <RemoteConfig::HandleSetE131Txt()>:
 800d430:	b510      	push	{r4, lr}
 800d432:	4604      	mov	r4, r0
 800d434:	4b07      	ldr	r3, [pc, #28]	; (800d454 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800d436:	b08a      	sub	sp, #40	; 0x28
 800d438:	6819      	ldr	r1, [r3, #0]
 800d43a:	a801      	add	r0, sp, #4
 800d43c:	f7fd f910 	bl	800a660 <E131Params::E131Params(E131ParamsStore*)>
 800d440:	4b05      	ldr	r3, [pc, #20]	; (800d458 <RemoteConfig::HandleSetE131Txt()+0x28>)
 800d442:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d446:	6819      	ldr	r1, [r3, #0]
 800d448:	a801      	add	r0, sp, #4
 800d44a:	f7fd f935 	bl	800a6b8 <E131Params::Load(char const*, unsigned int)>
 800d44e:	b00a      	add	sp, #40	; 0x28
 800d450:	bd10      	pop	{r4, pc}
 800d452:	bf00      	nop
 800d454:	20002994 	mulcs	r0, r4, r9
 800d458:	20001948 	andcs	r1, r0, r8, asr #18

0800d45c <RemoteConfig::HandleSetDevicesTxt()>:
 800d45c:	b510      	push	{r4, lr}
 800d45e:	4604      	mov	r4, r0
 800d460:	4b07      	ldr	r3, [pc, #28]	; (800d480 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800d462:	b08c      	sub	sp, #48	; 0x30
 800d464:	6819      	ldr	r1, [r3, #0]
 800d466:	a801      	add	r0, sp, #4
 800d468:	f7fd fde0 	bl	800b02c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800d46c:	4b05      	ldr	r3, [pc, #20]	; (800d484 <RemoteConfig::HandleSetDevicesTxt()+0x28>)
 800d46e:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d472:	6819      	ldr	r1, [r3, #0]
 800d474:	a801      	add	r0, sp, #4
 800d476:	f7fd fe0d 	bl	800b094 <WS28xxDmxParams::Load(char const*, unsigned int)>
 800d47a:	b00c      	add	sp, #48	; 0x30
 800d47c:	bd10      	pop	{r4, pc}
 800d47e:	bf00      	nop
 800d480:	200029a0 	andcs	r2, r0, r0, lsr #19
 800d484:	20001948 	andcs	r1, r0, r8, asr #18

0800d488 <RemoteConfig::HandleSetDisplayTxt()>:
 800d488:	b510      	push	{r4, lr}
 800d48a:	4604      	mov	r4, r0
 800d48c:	4b07      	ldr	r3, [pc, #28]	; (800d4ac <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800d48e:	b08a      	sub	sp, #40	; 0x28
 800d490:	6819      	ldr	r1, [r3, #0]
 800d492:	4668      	mov	r0, sp
 800d494:	f003 fcec 	bl	8010e70 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800d498:	4b05      	ldr	r3, [pc, #20]	; (800d4b0 <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 800d49a:	4668      	mov	r0, sp
 800d49c:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d4a0:	6819      	ldr	r1, [r3, #0]
 800d4a2:	f003 fcff 	bl	8010ea4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800d4a6:	b00a      	add	sp, #40	; 0x28
 800d4a8:	bd10      	pop	{r4, pc}
 800d4aa:	bf00      	nop
 800d4ac:	20002990 	mulcs	r0, r0, r9
 800d4b0:	20001948 	andcs	r1, r0, r8, asr #18

0800d4b4 <RemoteConfig::HandleFactory()>:
 800d4b4:	b538      	push	{r3, r4, r5, lr}
 800d4b6:	2400      	movs	r4, #0
 800d4b8:	4d04      	ldr	r5, [pc, #16]	; (800d4cc <RemoteConfig::HandleFactory()+0x18>)
 800d4ba:	4621      	mov	r1, r4
 800d4bc:	6828      	ldr	r0, [r5, #0]
 800d4be:	3401      	adds	r4, #1
 800d4c0:	f000 ff18 	bl	800e2f4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800d4c4:	2c1c      	cmp	r4, #28
 800d4c6:	d1f8      	bne.n	800d4ba <RemoteConfig::HandleFactory()+0x6>
 800d4c8:	bd38      	pop	{r3, r4, r5, pc}
 800d4ca:	bf00      	nop
 800d4cc:	20002988 	andcs	r2, r0, r8, lsl #19

0800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800d4d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4d2:	460b      	mov	r3, r1
 800d4d4:	8885      	ldrh	r5, [r0, #4]
 800d4d6:	88c1      	ldrh	r1, [r0, #6]
 800d4d8:	42a9      	cmp	r1, r5
 800d4da:	d214      	bcs.n	800d506 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800d4dc:	4604      	mov	r4, r0
 800d4de:	6800      	ldr	r0, [r0, #0]
 800d4e0:	1a6d      	subs	r5, r5, r1
 800d4e2:	4408      	add	r0, r1
 800d4e4:	7a21      	ldrb	r1, [r4, #8]
 800d4e6:	b91a      	cbnz	r2, 800d4f0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800d4e8:	b919      	cbnz	r1, 800d4f2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800d4ea:	4a0a      	ldr	r2, [pc, #40]	; (800d514 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800d4ec:	9100      	str	r1, [sp, #0]
 800d4ee:	e002      	b.n	800d4f6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d4f0:	b159      	cbz	r1, 800d50a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800d4f2:	9200      	str	r2, [sp, #0]
 800d4f4:	4a08      	ldr	r2, [pc, #32]	; (800d518 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800d4f6:	4629      	mov	r1, r5
 800d4f8:	f7fc f836 	bl	8009568 <snprintf>
 800d4fc:	4285      	cmp	r5, r0
 800d4fe:	bfa2      	ittt	ge
 800d500:	88e3      	ldrhge	r3, [r4, #6]
 800d502:	181b      	addge	r3, r3, r0
 800d504:	80e3      	strhge	r3, [r4, #6]
 800d506:	b003      	add	sp, #12
 800d508:	bd30      	pop	{r4, r5, pc}
 800d50a:	2201      	movs	r2, #1
 800d50c:	9200      	str	r2, [sp, #0]
 800d50e:	4a03      	ldr	r2, [pc, #12]	; (800d51c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800d510:	e7f1      	b.n	800d4f6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d512:	bf00      	nop
 800d514:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 800d518:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 800d51c:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

0800d520 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800d520:	b510      	push	{r4, lr}
 800d522:	4604      	mov	r4, r0
 800d524:	2220      	movs	r2, #32
 800d526:	f840 1b04 	str.w	r1, [r0], #4
 800d52a:	2100      	movs	r1, #0
 800d52c:	f004 fe6c 	bl	8012208 <memset>
 800d530:	4620      	mov	r0, r4
 800d532:	bd10      	pop	{r4, pc}

0800d534 <RemoteConfigParams::Load()>:
 800d534:	b508      	push	{r3, lr}
 800d536:	2300      	movs	r3, #0
 800d538:	4601      	mov	r1, r0
 800d53a:	6043      	str	r3, [r0, #4]
 800d53c:	6800      	ldr	r0, [r0, #0]
 800d53e:	b120      	cbz	r0, 800d54a <RemoteConfigParams::Load()+0x16>
 800d540:	6803      	ldr	r3, [r0, #0]
 800d542:	3104      	adds	r1, #4
 800d544:	68db      	ldr	r3, [r3, #12]
 800d546:	4798      	blx	r3
 800d548:	2001      	movs	r0, #1
 800d54a:	bd08      	pop	{r3, pc}

0800d54c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800d54c:	2300      	movs	r3, #0
 800d54e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d550:	460d      	mov	r5, r1
 800d552:	4616      	mov	r6, r2
 800d554:	4604      	mov	r4, r0
 800d556:	6043      	str	r3, [r0, #4]
 800d558:	4602      	mov	r2, r0
 800d55a:	490a      	ldr	r1, [pc, #40]	; (800d584 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800d55c:	4668      	mov	r0, sp
 800d55e:	f003 ffc7 	bl	80114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d562:	4632      	mov	r2, r6
 800d564:	4629      	mov	r1, r5
 800d566:	4668      	mov	r0, sp
 800d568:	f003 ffc6 	bl	80114f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800d56c:	4621      	mov	r1, r4
 800d56e:	f851 0b04 	ldr.w	r0, [r1], #4
 800d572:	6803      	ldr	r3, [r0, #0]
 800d574:	689b      	ldr	r3, [r3, #8]
 800d576:	4798      	blx	r3
 800d578:	4668      	mov	r0, sp
 800d57a:	f003 ffbc 	bl	80114f6 <ReadConfigFile::~ReadConfigFile()>
 800d57e:	b002      	add	sp, #8
 800d580:	bd70      	pop	{r4, r5, r6, pc}
 800d582:	bf00      	nop
 800d584:	0800d645 	stmdaeq	r0, {r0, r2, r6, r9, sl, ip, lr, pc}

0800d588 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800d588:	6843      	ldr	r3, [r0, #4]
 800d58a:	b111      	cbz	r1, 800d592 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800d58c:	4313      	orrs	r3, r2
 800d58e:	6043      	str	r3, [r0, #4]
 800d590:	4770      	bx	lr
 800d592:	ea23 0302 	bic.w	r3, r3, r2
 800d596:	e7fa      	b.n	800d58e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800d598 <RemoteConfigParams::callbackFunction(char const*)>:
 800d598:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d59a:	460d      	mov	r5, r1
 800d59c:	4604      	mov	r4, r0
 800d59e:	4923      	ldr	r1, [pc, #140]	; (800d62c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800d5a0:	4628      	mov	r0, r5
 800d5a2:	f10d 0203 	add.w	r2, sp, #3
 800d5a6:	f004 f8de 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5aa:	b938      	cbnz	r0, 800d5bc <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800d5ac:	2201      	movs	r2, #1
 800d5ae:	4620      	mov	r0, r4
 800d5b0:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800d5b4:	f7ff ffe8 	bl	800d588 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800d5b8:	b003      	add	sp, #12
 800d5ba:	bd30      	pop	{r4, r5, pc}
 800d5bc:	4628      	mov	r0, r5
 800d5be:	491c      	ldr	r1, [pc, #112]	; (800d630 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800d5c0:	f10d 0203 	add.w	r2, sp, #3
 800d5c4:	f004 f8cf 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5c8:	b908      	cbnz	r0, 800d5ce <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800d5ca:	2202      	movs	r2, #2
 800d5cc:	e7ef      	b.n	800d5ae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800d5ce:	4628      	mov	r0, r5
 800d5d0:	4918      	ldr	r1, [pc, #96]	; (800d634 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800d5d2:	f10d 0203 	add.w	r2, sp, #3
 800d5d6:	f004 f8c6 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5da:	b908      	cbnz	r0, 800d5e0 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800d5dc:	2204      	movs	r2, #4
 800d5de:	e7e6      	b.n	800d5ae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800d5e0:	4628      	mov	r0, r5
 800d5e2:	4915      	ldr	r1, [pc, #84]	; (800d638 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800d5e4:	f10d 0203 	add.w	r2, sp, #3
 800d5e8:	f004 f8bd 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5ec:	b908      	cbnz	r0, 800d5f2 <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800d5ee:	2208      	movs	r2, #8
 800d5f0:	e7dd      	b.n	800d5ae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800d5f2:	4628      	mov	r0, r5
 800d5f4:	4911      	ldr	r1, [pc, #68]	; (800d63c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800d5f6:	f10d 0203 	add.w	r2, sp, #3
 800d5fa:	f004 f8b4 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5fe:	b908      	cbnz	r0, 800d604 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800d600:	2220      	movs	r2, #32
 800d602:	e7d4      	b.n	800d5ae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800d604:	2317      	movs	r3, #23
 800d606:	4628      	mov	r0, r5
 800d608:	9301      	str	r3, [sp, #4]
 800d60a:	490d      	ldr	r1, [pc, #52]	; (800d640 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800d60c:	ab01      	add	r3, sp, #4
 800d60e:	f104 020c 	add.w	r2, r4, #12
 800d612:	f003 ffa5 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d616:	2800      	cmp	r0, #0
 800d618:	d1ce      	bne.n	800d5b8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800d61a:	9b01      	ldr	r3, [sp, #4]
 800d61c:	4423      	add	r3, r4
 800d61e:	7318      	strb	r0, [r3, #12]
 800d620:	6863      	ldr	r3, [r4, #4]
 800d622:	f043 0310 	orr.w	r3, r3, #16
 800d626:	6063      	str	r3, [r4, #4]
 800d628:	e7c6      	b.n	800d5b8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800d62a:	bf00      	nop
 800d62c:	08014f30 	stmdaeq	r1, {r4, r5, r8, r9, sl, fp, lr}
 800d630:	08014f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, lr}
 800d634:	08014f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, lr}
 800d638:	08014f6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, fp, lr}
 800d63c:	08014f7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, lr}
 800d640:	08014f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, lr}

0800d644 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800d644:	f7ff bfa8 	b.w	800d598 <RemoteConfigParams::callbackFunction(char const*)>

0800d648 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800d648:	b570      	push	{r4, r5, r6, lr}
 800d64a:	4604      	mov	r4, r0
 800d64c:	4615      	mov	r5, r2
 800d64e:	461e      	mov	r6, r3
 800d650:	b086      	sub	sp, #24
 800d652:	3004      	adds	r0, #4
 800d654:	2900      	cmp	r1, #0
 800d656:	d040      	beq.n	800d6da <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800d658:	2220      	movs	r2, #32
 800d65a:	f004 fdbe 	bl	80121da <memmove>
 800d65e:	4633      	mov	r3, r6
 800d660:	462a      	mov	r2, r5
 800d662:	4937      	ldr	r1, [pc, #220]	; (800d740 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800d664:	a803      	add	r0, sp, #12
 800d666:	f003 fea3 	bl	80113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d66a:	6862      	ldr	r2, [r4, #4]
 800d66c:	4935      	ldr	r1, [pc, #212]	; (800d744 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800d66e:	f002 0201 	and.w	r2, r2, #1
 800d672:	a803      	add	r0, sp, #12
 800d674:	f7ff ff2c 	bl	800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d678:	6862      	ldr	r2, [r4, #4]
 800d67a:	4933      	ldr	r1, [pc, #204]	; (800d748 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800d67c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800d680:	a803      	add	r0, sp, #12
 800d682:	f7ff ff25 	bl	800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d686:	6862      	ldr	r2, [r4, #4]
 800d688:	4930      	ldr	r1, [pc, #192]	; (800d74c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800d68a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800d68e:	a803      	add	r0, sp, #12
 800d690:	f7ff ff1e 	bl	800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d694:	6862      	ldr	r2, [r4, #4]
 800d696:	492e      	ldr	r1, [pc, #184]	; (800d750 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800d698:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800d69c:	a803      	add	r0, sp, #12
 800d69e:	f7ff ff17 	bl	800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d6a2:	6862      	ldr	r2, [r4, #4]
 800d6a4:	492b      	ldr	r1, [pc, #172]	; (800d754 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800d6a6:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800d6aa:	a803      	add	r0, sp, #12
 800d6ac:	f7ff ff10 	bl	800d4d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d6b0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d6b4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d6b8:	42a9      	cmp	r1, r5
 800d6ba:	d223      	bcs.n	800d704 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800d6bc:	9803      	ldr	r0, [sp, #12]
 800d6be:	1a6d      	subs	r5, r5, r1
 800d6c0:	4408      	add	r0, r1
 800d6c2:	6861      	ldr	r1, [r4, #4]
 800d6c4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d6c8:	06c9      	lsls	r1, r1, #27
 800d6ca:	f104 030c 	add.w	r3, r4, #12
 800d6ce:	d40b      	bmi.n	800d6e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800d6d0:	b95a      	cbnz	r2, 800d6ea <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800d6d2:	9300      	str	r3, [sp, #0]
 800d6d4:	4a20      	ldr	r2, [pc, #128]	; (800d758 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800d6d6:	4b21      	ldr	r3, [pc, #132]	; (800d75c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800d6d8:	e00a      	b.n	800d6f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800d6da:	6823      	ldr	r3, [r4, #0]
 800d6dc:	4601      	mov	r1, r0
 800d6de:	681a      	ldr	r2, [r3, #0]
 800d6e0:	4618      	mov	r0, r3
 800d6e2:	68d2      	ldr	r2, [r2, #12]
 800d6e4:	4790      	blx	r2
 800d6e6:	e7ba      	b.n	800d65e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800d6e8:	b32a      	cbz	r2, 800d736 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800d6ea:	9300      	str	r3, [sp, #0]
 800d6ec:	4a1c      	ldr	r2, [pc, #112]	; (800d760 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800d6ee:	4b1b      	ldr	r3, [pc, #108]	; (800d75c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800d6f0:	4629      	mov	r1, r5
 800d6f2:	f7fb ff39 	bl	8009568 <snprintf>
 800d6f6:	4285      	cmp	r5, r0
 800d6f8:	bfa2      	ittt	ge
 800d6fa:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d6fe:	18c0      	addge	r0, r0, r3
 800d700:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d704:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d708:	b17b      	cbz	r3, 800d72a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800d70a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d70e:	9b03      	ldr	r3, [sp, #12]
 800d710:	4413      	add	r3, r2
 800d712:	227d      	movs	r2, #125	; 0x7d
 800d714:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d718:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d71c:	9903      	ldr	r1, [sp, #12]
 800d71e:	54ca      	strb	r2, [r1, r3]
 800d720:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d724:	3301      	adds	r3, #1
 800d726:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d72a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d72e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d730:	601a      	str	r2, [r3, #0]
 800d732:	b006      	add	sp, #24
 800d734:	bd70      	pop	{r4, r5, r6, pc}
 800d736:	9300      	str	r3, [sp, #0]
 800d738:	4a0a      	ldr	r2, [pc, #40]	; (800d764 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800d73a:	4b08      	ldr	r3, [pc, #32]	; (800d75c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800d73c:	e7d8      	b.n	800d6f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800d73e:	bf00      	nop
 800d740:	08014f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, lr}
 800d744:	08014f30 	stmdaeq	r1, {r4, r5, r8, r9, sl, fp, lr}
 800d748:	08014f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, lr}
 800d74c:	08014f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, lr}
 800d750:	08014f6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, fp, lr}
 800d754:	08014f7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, lr}
 800d758:	0801456a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, lr}
 800d75c:	08014f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, lr}
 800d760:	0801455f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, lr}
 800d764:	0801456b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, lr}

0800d768 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800d768:	b513      	push	{r0, r1, r4, lr}
 800d76a:	6804      	ldr	r4, [r0, #0]
 800d76c:	b914      	cbnz	r4, 800d774 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d76e:	601c      	str	r4, [r3, #0]
 800d770:	b002      	add	sp, #8
 800d772:	bd10      	pop	{r4, pc}
 800d774:	9300      	str	r3, [sp, #0]
 800d776:	4613      	mov	r3, r2
 800d778:	460a      	mov	r2, r1
 800d77a:	2100      	movs	r1, #0
 800d77c:	f7ff ff64 	bl	800d648 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800d780:	e7f6      	b.n	800d770 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d782 <RemoteConfigParams::Set(RemoteConfig*)>:
 800d782:	b538      	push	{r3, r4, r5, lr}
 800d784:	460c      	mov	r4, r1
 800d786:	4605      	mov	r5, r0
 800d788:	6841      	ldr	r1, [r0, #4]
 800d78a:	4620      	mov	r0, r4
 800d78c:	f001 0101 	and.w	r1, r1, #1
 800d790:	f7ff fc1e 	bl	800cfd0 <RemoteConfig::SetDisable(bool)>
 800d794:	686b      	ldr	r3, [r5, #4]
 800d796:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800d79a:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800d79e:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800d7a2:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800d7a6:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800d7aa:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800d7ae:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800d7b2:	06db      	lsls	r3, r3, #27
 800d7b4:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800d7b8:	d506      	bpl.n	800d7c8 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800d7ba:	4620      	mov	r0, r4
 800d7bc:	f105 010c 	add.w	r1, r5, #12
 800d7c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d7c4:	f7ff bc28 	b.w	800d018 <RemoteConfig::SetDisplayName(char const*)>
 800d7c8:	bd38      	pop	{r3, r4, r5, pc}

0800d7ca <RemoteConfigParams::Dump()>:
 800d7ca:	4770      	bx	lr

0800d7cc <RemoteConfig::HandleReboot()>:
 800d7cc:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800d7d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d7d2:	2b00      	cmp	r3, #0
 800d7d4:	d03e      	beq.n	800d854 <RemoteConfig::HandleReboot()+0x88>
 800d7d6:	2301      	movs	r3, #1
 800d7d8:	4c1f      	ldr	r4, [pc, #124]	; (800d858 <RemoteConfig::HandleReboot()+0x8c>)
 800d7da:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800d7de:	6825      	ldr	r5, [r4, #0]
 800d7e0:	69a8      	ldr	r0, [r5, #24]
 800d7e2:	b138      	cbz	r0, 800d7f4 <RemoteConfig::HandleReboot()+0x28>
 800d7e4:	2100      	movs	r1, #0
 800d7e6:	6803      	ldr	r3, [r0, #0]
 800d7e8:	7429      	strb	r1, [r5, #16]
 800d7ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d7ec:	4798      	blx	r3
 800d7ee:	4b1b      	ldr	r3, [pc, #108]	; (800d85c <RemoteConfig::HandleReboot()+0x90>)
 800d7f0:	681b      	ldr	r3, [r3, #0]
 800d7f2:	606b      	str	r3, [r5, #4]
 800d7f4:	4d1a      	ldr	r5, [pc, #104]	; (800d860 <RemoteConfig::HandleReboot()+0x94>)
 800d7f6:	6828      	ldr	r0, [r5, #0]
 800d7f8:	f000 fe02 	bl	800e400 <SpiFlashStore::Flash()>
 800d7fc:	2800      	cmp	r0, #0
 800d7fe:	d1fa      	bne.n	800d7f6 <RemoteConfig::HandleReboot()+0x2a>
 800d800:	4b18      	ldr	r3, [pc, #96]	; (800d864 <RemoteConfig::HandleReboot()+0x98>)
 800d802:	6818      	ldr	r0, [r3, #0]
 800d804:	f002 f994 	bl	800fb30 <Network::Shutdown()>
 800d808:	4817      	ldr	r0, [pc, #92]	; (800d868 <RemoteConfig::HandleReboot()+0x9c>)
 800d80a:	f7fb fe85 	bl	8009518 <printf>
 800d80e:	6823      	ldr	r3, [r4, #0]
 800d810:	6998      	ldr	r0, [r3, #24]
 800d812:	b110      	cbz	r0, 800d81a <RemoteConfig::HandleReboot()+0x4e>
 800d814:	6803      	ldr	r3, [r0, #0]
 800d816:	68db      	ldr	r3, [r3, #12]
 800d818:	4798      	blx	r3
 800d81a:	6824      	ldr	r4, [r4, #0]
 800d81c:	4913      	ldr	r1, [pc, #76]	; (800d86c <RemoteConfig::HandleReboot()+0xa0>)
 800d81e:	4620      	mov	r0, r4
 800d820:	f7fb f8c0 	bl	80089a4 <Display::TextStatus(char const*)>
 800d824:	7c63      	ldrb	r3, [r4, #17]
 800d826:	b18b      	cbz	r3, 800d84c <RemoteConfig::HandleReboot()+0x80>
 800d828:	2312      	movs	r3, #18
 800d82a:	f88d 3004 	strb.w	r3, [sp, #4]
 800d82e:	23bf      	movs	r3, #191	; 0xbf
 800d830:	7a20      	ldrb	r0, [r4, #8]
 800d832:	f88d 3005 	strb.w	r3, [sp, #5]
 800d836:	f88d 3006 	strb.w	r3, [sp, #6]
 800d83a:	f005 fc4f 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 800d83e:	68e0      	ldr	r0, [r4, #12]
 800d840:	f005 fc44 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 800d844:	2103      	movs	r1, #3
 800d846:	a801      	add	r0, sp, #4
 800d848:	f005 fc4e 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 800d84c:	4b08      	ldr	r3, [pc, #32]	; (800d870 <RemoteConfig::HandleReboot()+0xa4>)
 800d84e:	6818      	ldr	r0, [r3, #0]
 800d850:	f004 fbc2 	bl	8011fd8 <Hardware::Reboot()>
 800d854:	b003      	add	sp, #12
 800d856:	bd30      	pop	{r4, r5, pc}
 800d858:	2000a8c0 	andcs	sl, r0, r0, asr #17
 800d85c:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800d860:	20002988 	andcs	r2, r0, r8, lsl #19
 800d864:	2000a288 	andcs	sl, r0, r8, lsl #5
 800d868:	08014b70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, lr}
 800d86c:	08014b7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, fp, lr}
 800d870:	2000a9b0 			; <UNDEFINED> instruction: 0x2000a9b0

0800d874 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800d874:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d878:	2000      	movs	r0, #0
 800d87a:	4d12      	ldr	r5, [pc, #72]	; (800d8c4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800d87c:	f10d 0c04 	add.w	ip, sp, #4
 800d880:	6814      	ldr	r4, [r2, #0]
 800d882:	7d2b      	ldrb	r3, [r5, #20]
 800d884:	692e      	ldr	r6, [r5, #16]
 800d886:	42a3      	cmp	r3, r4
 800d888:	bf34      	ite	cc
 800d88a:	4664      	movcc	r4, ip
 800d88c:	4614      	movcs	r4, r2
 800d88e:	9301      	str	r3, [sp, #4]
 800d890:	6827      	ldr	r7, [r4, #0]
 800d892:	460c      	mov	r4, r1
 800d894:	3e01      	subs	r6, #1
 800d896:	440f      	add	r7, r1
 800d898:	42bc      	cmp	r4, r7
 800d89a:	d011      	beq.n	800d8c0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800d89c:	f894 8000 	ldrb.w	r8, [r4]
 800d8a0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800d8a4:	45f0      	cmp	r8, lr
 800d8a6:	d009      	beq.n	800d8bc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800d8a8:	3001      	adds	r0, #1
 800d8aa:	2805      	cmp	r0, #5
 800d8ac:	f105 051c 	add.w	r5, r5, #28
 800d8b0:	d1e6      	bne.n	800d880 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800d8b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d8b6:	b002      	add	sp, #8
 800d8b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8bc:	3401      	adds	r4, #1
 800d8be:	e7eb      	b.n	800d898 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800d8c0:	6013      	str	r3, [r2, #0]
 800d8c2:	e7f8      	b.n	800d8b6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800d8c4:	08014bc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, fp, lr}

0800d8c8 <RemoteConfig::PlatformHandleTftpSet()>:
 800d8c8:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800d8cc:	b109      	cbz	r1, 800d8d2 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800d8ce:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800d8d2:	2002      	movs	r0, #2
 800d8d4:	f004 be96 	b.w	8012604 <bkp_data_write>

0800d8d8 <RemoteConfig::PlatformHandleTftpGet()>:
 800d8d8:	b510      	push	{r4, lr}
 800d8da:	4604      	mov	r4, r0
 800d8dc:	2002      	movs	r0, #2
 800d8de:	f004 fea7 	bl	8012630 <bkp_data_read>
 800d8e2:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800d8e6:	1ac3      	subs	r3, r0, r3
 800d8e8:	4258      	negs	r0, r3
 800d8ea:	4158      	adcs	r0, r3
 800d8ec:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800d8f0:	bd10      	pop	{r4, pc}

0800d8f2 <strcmp>:
 800d8f2:	1e43      	subs	r3, r0, #1
 800d8f4:	3901      	subs	r1, #1
 800d8f6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800d8fa:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d8fe:	4290      	cmp	r0, r2
 800d900:	d102      	bne.n	800d908 <strcmp+0x16>
 800d902:	2800      	cmp	r0, #0
 800d904:	d1f7      	bne.n	800d8f6 <strcmp+0x4>
 800d906:	4770      	bx	lr
 800d908:	1a80      	subs	r0, r0, r2
 800d90a:	4770      	bx	lr

0800d90c <strcasecmp>:
 800d90c:	b530      	push	{r4, r5, lr}
 800d90e:	1e42      	subs	r2, r0, #1
 800d910:	3901      	subs	r1, #1
 800d912:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d916:	4604      	mov	r4, r0
 800d918:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800d91c:	2b19      	cmp	r3, #25
 800d91e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800d922:	bf98      	it	ls
 800d924:	f100 0420 	addls.w	r4, r0, #32
 800d928:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800d92c:	2d19      	cmp	r5, #25
 800d92e:	bf98      	it	ls
 800d930:	3320      	addls	r3, #32
 800d932:	42a3      	cmp	r3, r4
 800d934:	d102      	bne.n	800d93c <strcasecmp+0x30>
 800d936:	2800      	cmp	r0, #0
 800d938:	d1eb      	bne.n	800d912 <strcasecmp+0x6>
 800d93a:	bd30      	pop	{r4, r5, pc}
 800d93c:	1ae0      	subs	r0, r4, r3
 800d93e:	e7fc      	b.n	800d93a <strcasecmp+0x2e>

0800d940 <PropertiesConfig::EnableJSON(bool)>:
 800d940:	4a04      	ldr	r2, [pc, #16]	; (800d954 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800d942:	7813      	ldrb	r3, [r2, #0]
 800d944:	b118      	cbz	r0, 800d94e <PropertiesConfig::EnableJSON(bool)+0xe>
 800d946:	f043 0301 	orr.w	r3, r3, #1
 800d94a:	7013      	strb	r3, [r2, #0]
 800d94c:	4770      	bx	lr
 800d94e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800d952:	e7fa      	b.n	800d94a <PropertiesConfig::EnableJSON(bool)+0xa>
 800d954:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc

0800d958 <HttpDaemon::HttpDaemon()>:
 800d958:	4a0a      	ldr	r2, [pc, #40]	; (800d984 <HttpDaemon::HttpDaemon()+0x2c>)
 800d95a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d95e:	6002      	str	r2, [r0, #0]
 800d960:	2200      	movs	r2, #0
 800d962:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800d966:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800d96a:	2102      	movs	r1, #2
 800d96c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800d970:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800d974:	60c2      	str	r2, [r0, #12]
 800d976:	8402      	strh	r2, [r0, #32]
 800d978:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800d97c:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800d980:	4770      	bx	lr
 800d982:	bf00      	nop
 800d984:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}

0800d988 <HttpDaemon::Start()>:
 800d988:	4b04      	ldr	r3, [pc, #16]	; (800d99c <HttpDaemon::Start()+0x14>)
 800d98a:	b510      	push	{r4, lr}
 800d98c:	2150      	movs	r1, #80	; 0x50
 800d98e:	4604      	mov	r4, r0
 800d990:	6818      	ldr	r0, [r3, #0]
 800d992:	f002 faa9 	bl	800fee8 <Network::TcpBegin(unsigned short)>
 800d996:	6120      	str	r0, [r4, #16]
 800d998:	bd10      	pop	{r4, pc}
 800d99a:	bf00      	nop
 800d99c:	2000a288 	andcs	sl, r0, r8, lsl #5

0800d9a0 <HttpDaemon::ParseMethod(char*)>:
 800d9a0:	b538      	push	{r3, r4, r5, lr}
 800d9a2:	4604      	mov	r4, r0
 800d9a4:	4608      	mov	r0, r1
 800d9a6:	491b      	ldr	r1, [pc, #108]	; (800da14 <HttpDaemon::ParseMethod(char*)+0x74>)
 800d9a8:	f004 fc5c 	bl	8012264 <strtok>
 800d9ac:	4605      	mov	r5, r0
 800d9ae:	b370      	cbz	r0, 800da0e <HttpDaemon::ParseMethod(char*)+0x6e>
 800d9b0:	4919      	ldr	r1, [pc, #100]	; (800da18 <HttpDaemon::ParseMethod(char*)+0x78>)
 800d9b2:	f7ff ff9e 	bl	800d8f2 <strcmp>
 800d9b6:	b940      	cbnz	r0, 800d9ca <HttpDaemon::ParseMethod(char*)+0x2a>
 800d9b8:	61e0      	str	r0, [r4, #28]
 800d9ba:	2000      	movs	r0, #0
 800d9bc:	4915      	ldr	r1, [pc, #84]	; (800da14 <HttpDaemon::ParseMethod(char*)+0x74>)
 800d9be:	f004 fc51 	bl	8012264 <strtok>
 800d9c2:	b950      	cbnz	r0, 800d9da <HttpDaemon::ParseMethod(char*)+0x3a>
 800d9c4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d9c8:	bd38      	pop	{r3, r4, r5, pc}
 800d9ca:	4628      	mov	r0, r5
 800d9cc:	4913      	ldr	r1, [pc, #76]	; (800da1c <HttpDaemon::ParseMethod(char*)+0x7c>)
 800d9ce:	f7ff ff90 	bl	800d8f2 <strcmp>
 800d9d2:	b9e0      	cbnz	r0, 800da0e <HttpDaemon::ParseMethod(char*)+0x6e>
 800d9d4:	2301      	movs	r3, #1
 800d9d6:	61e3      	str	r3, [r4, #28]
 800d9d8:	e7ef      	b.n	800d9ba <HttpDaemon::ParseMethod(char*)+0x1a>
 800d9da:	6060      	str	r0, [r4, #4]
 800d9dc:	4910      	ldr	r1, [pc, #64]	; (800da20 <HttpDaemon::ParseMethod(char*)+0x80>)
 800d9de:	2000      	movs	r0, #0
 800d9e0:	f004 fc40 	bl	8012264 <strtok>
 800d9e4:	2800      	cmp	r0, #0
 800d9e6:	d0ed      	beq.n	800d9c4 <HttpDaemon::ParseMethod(char*)+0x24>
 800d9e8:	490e      	ldr	r1, [pc, #56]	; (800da24 <HttpDaemon::ParseMethod(char*)+0x84>)
 800d9ea:	f7ff ff82 	bl	800d8f2 <strcmp>
 800d9ee:	2800      	cmp	r0, #0
 800d9f0:	d1e8      	bne.n	800d9c4 <HttpDaemon::ParseMethod(char*)+0x24>
 800d9f2:	490d      	ldr	r1, [pc, #52]	; (800da28 <HttpDaemon::ParseMethod(char*)+0x88>)
 800d9f4:	f004 fc36 	bl	8012264 <strtok>
 800d9f8:	2800      	cmp	r0, #0
 800d9fa:	d0e3      	beq.n	800d9c4 <HttpDaemon::ParseMethod(char*)+0x24>
 800d9fc:	490b      	ldr	r1, [pc, #44]	; (800da2c <HttpDaemon::ParseMethod(char*)+0x8c>)
 800d9fe:	f7ff ff78 	bl	800d8f2 <strcmp>
 800da02:	2800      	cmp	r0, #0
 800da04:	f240 10f9 	movw	r0, #505	; 0x1f9
 800da08:	bf08      	it	eq
 800da0a:	20c8      	moveq	r0, #200	; 0xc8
 800da0c:	e7dc      	b.n	800d9c8 <HttpDaemon::ParseMethod(char*)+0x28>
 800da0e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800da12:	e7d9      	b.n	800d9c8 <HttpDaemon::ParseMethod(char*)+0x28>
 800da14:	08014c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, lr}
 800da18:	08014c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, lr}
 800da1c:	08014c5a 	stmdaeq	r1, {r1, r3, r4, r6, sl, fp, lr}
 800da20:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800da24:	08014c5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, sl, fp, lr}
 800da28:	08014c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, lr}
 800da2c:	08014c67 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, fp, lr}

0800da30 <HttpDaemon::ParseHeaderField(char*)>:
 800da30:	b538      	push	{r3, r4, r5, lr}
 800da32:	4605      	mov	r5, r0
 800da34:	4608      	mov	r0, r1
 800da36:	491d      	ldr	r1, [pc, #116]	; (800daac <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800da38:	f004 fc14 	bl	8012264 <strtok>
 800da3c:	4604      	mov	r4, r0
 800da3e:	b910      	cbnz	r0, 800da46 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800da40:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800da44:	bd38      	pop	{r3, r4, r5, pc}
 800da46:	491a      	ldr	r1, [pc, #104]	; (800dab0 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800da48:	f7ff ff60 	bl	800d90c <strcasecmp>
 800da4c:	b970      	cbnz	r0, 800da6c <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800da4e:	4919      	ldr	r1, [pc, #100]	; (800dab4 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800da50:	f004 fc08 	bl	8012264 <strtok>
 800da54:	2800      	cmp	r0, #0
 800da56:	d0f3      	beq.n	800da40 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800da58:	4917      	ldr	r1, [pc, #92]	; (800dab8 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800da5a:	f7ff ff4a 	bl	800d8f2 <strcmp>
 800da5e:	b108      	cbz	r0, 800da64 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800da60:	20c8      	movs	r0, #200	; 0xc8
 800da62:	e7ef      	b.n	800da44 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800da64:	2301      	movs	r3, #1
 800da66:	f885 3020 	strb.w	r3, [r5, #32]
 800da6a:	e7f9      	b.n	800da60 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800da6c:	4620      	mov	r0, r4
 800da6e:	4913      	ldr	r1, [pc, #76]	; (800dabc <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800da70:	f7ff ff4c 	bl	800d90c <strcasecmp>
 800da74:	4604      	mov	r4, r0
 800da76:	2800      	cmp	r0, #0
 800da78:	d1f2      	bne.n	800da60 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800da7a:	4911      	ldr	r1, [pc, #68]	; (800dac0 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800da7c:	f004 fbf2 	bl	8012264 <strtok>
 800da80:	2800      	cmp	r0, #0
 800da82:	d0dd      	beq.n	800da40 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800da84:	1e42      	subs	r2, r0, #1
 800da86:	4623      	mov	r3, r4
 800da88:	200a      	movs	r0, #10
 800da8a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800da8e:	b151      	cbz	r1, 800daa6 <HttpDaemon::ParseHeaderField(char*)+0x76>
 800da90:	3930      	subs	r1, #48	; 0x30
 800da92:	2909      	cmp	r1, #9
 800da94:	d8d4      	bhi.n	800da40 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800da96:	fb00 1303 	mla	r3, r0, r3, r1
 800da9a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800da9e:	d9f4      	bls.n	800da8a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800daa0:	f240 109d 	movw	r0, #413	; 0x19d
 800daa4:	e7ce      	b.n	800da44 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800daa6:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800daaa:	e7d9      	b.n	800da60 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800daac:	08014c6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, fp, lr}
 800dab0:	08014c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, lr}
 800dab4:	08014c7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, fp, lr}
 800dab8:	08014c7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sl, fp, lr}
 800dabc:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 800dac0:	08014c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, lr}

0800dac4 <HttpDaemon::ParseRequest()>:
 800dac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dac6:	2400      	movs	r4, #0
 800dac8:	4605      	mov	r5, r0
 800daca:	4622      	mov	r2, r4
 800dacc:	4626      	mov	r6, r4
 800dace:	68c1      	ldr	r1, [r0, #12]
 800dad0:	f880 4020 	strb.w	r4, [r0, #32]
 800dad4:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800dad8:	8aab      	ldrh	r3, [r5, #20]
 800dada:	42a3      	cmp	r3, r4
 800dadc:	d923      	bls.n	800db26 <HttpDaemon::ParseRequest()+0x62>
 800dade:	68eb      	ldr	r3, [r5, #12]
 800dae0:	5d18      	ldrb	r0, [r3, r4]
 800dae2:	280a      	cmp	r0, #10
 800dae4:	d10e      	bne.n	800db04 <HttpDaemon::ParseRequest()+0x40>
 800dae6:	4423      	add	r3, r4
 800dae8:	f803 6c01 	strb.w	r6, [r3, #-1]
 800daec:	1c57      	adds	r7, r2, #1
 800daee:	b962      	cbnz	r2, 800db0a <HttpDaemon::ParseRequest()+0x46>
 800daf0:	4628      	mov	r0, r5
 800daf2:	f7ff ff55 	bl	800d9a0 <HttpDaemon::ParseMethod(char*)>
 800daf6:	28c8      	cmp	r0, #200	; 0xc8
 800daf8:	d116      	bne.n	800db28 <HttpDaemon::ParseRequest()+0x64>
 800dafa:	463a      	mov	r2, r7
 800dafc:	68e9      	ldr	r1, [r5, #12]
 800dafe:	3401      	adds	r4, #1
 800db00:	b2a4      	uxth	r4, r4
 800db02:	4421      	add	r1, r4
 800db04:	3401      	adds	r4, #1
 800db06:	b2a4      	uxth	r4, r4
 800db08:	e7e6      	b.n	800dad8 <HttpDaemon::ParseRequest()+0x14>
 800db0a:	7808      	ldrb	r0, [r1, #0]
 800db0c:	b968      	cbnz	r0, 800db2a <HttpDaemon::ParseRequest()+0x66>
 800db0e:	696b      	ldr	r3, [r5, #20]
 800db10:	3b01      	subs	r3, #1
 800db12:	1b1b      	subs	r3, r3, r4
 800db14:	b29b      	uxth	r3, r3
 800db16:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800db1a:	b123      	cbz	r3, 800db26 <HttpDaemon::ParseRequest()+0x62>
 800db1c:	68ea      	ldr	r2, [r5, #12]
 800db1e:	3401      	adds	r4, #1
 800db20:	4414      	add	r4, r2
 800db22:	60ac      	str	r4, [r5, #8]
 800db24:	54e0      	strb	r0, [r4, r3]
 800db26:	20c8      	movs	r0, #200	; 0xc8
 800db28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db2a:	4628      	mov	r0, r5
 800db2c:	f7ff ff80 	bl	800da30 <HttpDaemon::ParseHeaderField(char*)>
 800db30:	e7e1      	b.n	800daf6 <HttpDaemon::ParseRequest()+0x32>
	...

0800db34 <HttpDaemon::HandleGetTxt()>:
 800db34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db38:	6847      	ldr	r7, [r0, #4]
 800db3a:	4604      	mov	r4, r0
 800db3c:	1dbd      	adds	r5, r7, #6
 800db3e:	462b      	mov	r3, r5
 800db40:	4618      	mov	r0, r3
 800db42:	7802      	ldrb	r2, [r0, #0]
 800db44:	3301      	adds	r3, #1
 800db46:	2a00      	cmp	r2, #0
 800db48:	d1fa      	bne.n	800db40 <HttpDaemon::HandleGetTxt()+0xc>
 800db4a:	1b40      	subs	r0, r0, r5
 800db4c:	2804      	cmp	r0, #4
 800db4e:	d925      	bls.n	800db9c <HttpDaemon::HandleGetTxt()+0x68>
 800db50:	3804      	subs	r0, #4
 800db52:	4915      	ldr	r1, [pc, #84]	; (800dba8 <HttpDaemon::HandleGetTxt()+0x74>)
 800db54:	4428      	add	r0, r5
 800db56:	f7ff fecc 	bl	800d8f2 <strcmp>
 800db5a:	b9f8      	cbnz	r0, 800db9c <HttpDaemon::HandleGetTxt()+0x68>
 800db5c:	4b13      	ldr	r3, [pc, #76]	; (800dbac <HttpDaemon::HandleGetTxt()+0x78>)
 800db5e:	2001      	movs	r0, #1
 800db60:	f893 8000 	ldrb.w	r8, [r3]
 800db64:	f7ff feec 	bl	800d940 <PropertiesConfig::EnableJSON(bool)>
 800db68:	4b11      	ldr	r3, [pc, #68]	; (800dbb0 <HttpDaemon::HandleGetTxt()+0x7c>)
 800db6a:	f240 529b 	movw	r2, #1435	; 0x59b
 800db6e:	4629      	mov	r1, r5
 800db70:	6818      	ldr	r0, [r3, #0]
 800db72:	f7ff fa69 	bl	800d048 <RemoteConfig::HandleGet(void*, unsigned int)>
 800db76:	4606      	mov	r6, r0
 800db78:	f008 0801 	and.w	r8, r8, #1
 800db7c:	4640      	mov	r0, r8
 800db7e:	f7ff fedf 	bl	800d940 <PropertiesConfig::EnableJSON(bool)>
 800db82:	b15e      	cbz	r6, 800db9c <HttpDaemon::HandleGetTxt()+0x68>
 800db84:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800db88:	3606      	adds	r6, #6
 800db8a:	3422      	adds	r4, #34	; 0x22
 800db8c:	443e      	add	r6, r7
 800db8e:	42b5      	cmp	r5, r6
 800db90:	d008      	beq.n	800dba4 <HttpDaemon::HandleGetTxt()+0x70>
 800db92:	f815 3b01 	ldrb.w	r3, [r5], #1
 800db96:	f804 3b01 	strb.w	r3, [r4], #1
 800db9a:	e7f8      	b.n	800db8e <HttpDaemon::HandleGetTxt()+0x5a>
 800db9c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800dba0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dba4:	20c8      	movs	r0, #200	; 0xc8
 800dba6:	e7fb      	b.n	800dba0 <HttpDaemon::HandleGetTxt()+0x6c>
 800dba8:	08014bb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, fp, lr}
 800dbac:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc
 800dbb0:	20001970 	andcs	r1, r0, r0, ror r9

0800dbb4 <HttpDaemon::HandleGet()>:
 800dbb4:	b570      	push	{r4, r5, r6, lr}
 800dbb6:	6845      	ldr	r5, [r0, #4]
 800dbb8:	4604      	mov	r4, r0
 800dbba:	4943      	ldr	r1, [pc, #268]	; (800dcc8 <HttpDaemon::HandleGet()+0x114>)
 800dbbc:	4628      	mov	r0, r5
 800dbbe:	f7ff fe98 	bl	800d8f2 <strcmp>
 800dbc2:	b120      	cbz	r0, 800dbce <HttpDaemon::HandleGet()+0x1a>
 800dbc4:	4628      	mov	r0, r5
 800dbc6:	4941      	ldr	r1, [pc, #260]	; (800dccc <HttpDaemon::HandleGet()+0x118>)
 800dbc8:	f7ff fe93 	bl	800d8f2 <strcmp>
 800dbcc:	b960      	cbnz	r0, 800dbe8 <HttpDaemon::HandleGet()+0x34>
 800dbce:	4621      	mov	r1, r4
 800dbd0:	4b3f      	ldr	r3, [pc, #252]	; (800dcd0 <HttpDaemon::HandleGet()+0x11c>)
 800dbd2:	4840      	ldr	r0, [pc, #256]	; (800dcd4 <HttpDaemon::HandleGet()+0x120>)
 800dbd4:	f841 3b22 	str.w	r3, [r1], #34
 800dbd8:	f000 fa7a 	bl	800e0d0 <get_file_content(char const*, char*)>
 800dbdc:	2800      	cmp	r0, #0
 800dbde:	dd1e      	ble.n	800dc1e <HttpDaemon::HandleGet()+0x6a>
 800dbe0:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800dbe4:	20c8      	movs	r0, #200	; 0xc8
 800dbe6:	bd70      	pop	{r4, r5, r6, pc}
 800dbe8:	4628      	mov	r0, r5
 800dbea:	493b      	ldr	r1, [pc, #236]	; (800dcd8 <HttpDaemon::HandleGet()+0x124>)
 800dbec:	f7ff fe81 	bl	800d8f2 <strcmp>
 800dbf0:	b928      	cbnz	r0, 800dbfe <HttpDaemon::HandleGet()+0x4a>
 800dbf2:	4621      	mov	r1, r4
 800dbf4:	4b39      	ldr	r3, [pc, #228]	; (800dcdc <HttpDaemon::HandleGet()+0x128>)
 800dbf6:	483a      	ldr	r0, [pc, #232]	; (800dce0 <HttpDaemon::HandleGet()+0x12c>)
 800dbf8:	f841 3b22 	str.w	r3, [r1], #34
 800dbfc:	e7ec      	b.n	800dbd8 <HttpDaemon::HandleGet()+0x24>
 800dbfe:	4628      	mov	r0, r5
 800dc00:	4938      	ldr	r1, [pc, #224]	; (800dce4 <HttpDaemon::HandleGet()+0x130>)
 800dc02:	f7ff fe76 	bl	800d8f2 <strcmp>
 800dc06:	b168      	cbz	r0, 800dc24 <HttpDaemon::HandleGet()+0x70>
 800dc08:	4a37      	ldr	r2, [pc, #220]	; (800dce8 <HttpDaemon::HandleGet()+0x134>)
 800dc0a:	1e6b      	subs	r3, r5, #1
 800dc0c:	1d6e      	adds	r6, r5, #5
 800dc0e:	42b3      	cmp	r3, r6
 800dc10:	d00e      	beq.n	800dc30 <HttpDaemon::HandleGet()+0x7c>
 800dc12:	f812 1b01 	ldrb.w	r1, [r2], #1
 800dc16:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800dc1a:	4288      	cmp	r0, r1
 800dc1c:	d0f7      	beq.n	800dc0e <HttpDaemon::HandleGet()+0x5a>
 800dc1e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800dc22:	e7e0      	b.n	800dbe6 <HttpDaemon::HandleGet()+0x32>
 800dc24:	4621      	mov	r1, r4
 800dc26:	4b31      	ldr	r3, [pc, #196]	; (800dcec <HttpDaemon::HandleGet()+0x138>)
 800dc28:	4831      	ldr	r0, [pc, #196]	; (800dcf0 <HttpDaemon::HandleGet()+0x13c>)
 800dc2a:	f841 3b22 	str.w	r3, [r1], #34
 800dc2e:	e7d3      	b.n	800dbd8 <HttpDaemon::HandleGet()+0x24>
 800dc30:	4b30      	ldr	r3, [pc, #192]	; (800dcf4 <HttpDaemon::HandleGet()+0x140>)
 800dc32:	3506      	adds	r5, #6
 800dc34:	4628      	mov	r0, r5
 800dc36:	4930      	ldr	r1, [pc, #192]	; (800dcf8 <HttpDaemon::HandleGet()+0x144>)
 800dc38:	6023      	str	r3, [r4, #0]
 800dc3a:	f7ff fe5a 	bl	800d8f2 <strcmp>
 800dc3e:	b930      	cbnz	r0, 800dc4e <HttpDaemon::HandleGet()+0x9a>
 800dc40:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800dc44:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800dc48:	f000 f9ca 	bl	800dfe0 <remoteconfig::json_get_list(char*, unsigned short)>
 800dc4c:	e7c6      	b.n	800dbdc <HttpDaemon::HandleGet()+0x28>
 800dc4e:	4628      	mov	r0, r5
 800dc50:	492a      	ldr	r1, [pc, #168]	; (800dcfc <HttpDaemon::HandleGet()+0x148>)
 800dc52:	f7ff fe4e 	bl	800d8f2 <strcmp>
 800dc56:	b930      	cbnz	r0, 800dc66 <HttpDaemon::HandleGet()+0xb2>
 800dc58:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800dc5c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800dc60:	f000 f9f2 	bl	800e048 <remoteconfig::json_get_version(char*, unsigned short)>
 800dc64:	e7ba      	b.n	800dbdc <HttpDaemon::HandleGet()+0x28>
 800dc66:	4628      	mov	r0, r5
 800dc68:	4925      	ldr	r1, [pc, #148]	; (800dd00 <HttpDaemon::HandleGet()+0x14c>)
 800dc6a:	f7ff fe42 	bl	800d8f2 <strcmp>
 800dc6e:	b958      	cbnz	r0, 800dc88 <HttpDaemon::HandleGet()+0xd4>
 800dc70:	4b24      	ldr	r3, [pc, #144]	; (800dd04 <HttpDaemon::HandleGet()+0x150>)
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800dc78:	b31b      	cbz	r3, 800dcc2 <HttpDaemon::HandleGet()+0x10e>
 800dc7a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800dc7e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800dc82:	f000 f9fd 	bl	800e080 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800dc86:	e7a9      	b.n	800dbdc <HttpDaemon::HandleGet()+0x28>
 800dc88:	4628      	mov	r0, r5
 800dc8a:	491f      	ldr	r1, [pc, #124]	; (800dd08 <HttpDaemon::HandleGet()+0x154>)
 800dc8c:	f7ff fe31 	bl	800d8f2 <strcmp>
 800dc90:	b930      	cbnz	r0, 800dca0 <HttpDaemon::HandleGet()+0xec>
 800dc92:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800dc96:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800dc9a:	f000 fa01 	bl	800e0a0 <remoteconfig::json_get_display(char*, unsigned short)>
 800dc9e:	e79d      	b.n	800dbdc <HttpDaemon::HandleGet()+0x28>
 800dca0:	4628      	mov	r0, r5
 800dca2:	491a      	ldr	r1, [pc, #104]	; (800dd0c <HttpDaemon::HandleGet()+0x158>)
 800dca4:	f7ff fe25 	bl	800d8f2 <strcmp>
 800dca8:	b930      	cbnz	r0, 800dcb8 <HttpDaemon::HandleGet()+0x104>
 800dcaa:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800dcae:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800dcb2:	f000 fa05 	bl	800e0c0 <remoteconfig::json_get_directory(char*, unsigned short)>
 800dcb6:	e791      	b.n	800dbdc <HttpDaemon::HandleGet()+0x28>
 800dcb8:	4620      	mov	r0, r4
 800dcba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dcbe:	f7ff bf39 	b.w	800db34 <HttpDaemon::HandleGetTxt()>
 800dcc2:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800dcc6:	e78e      	b.n	800dbe6 <HttpDaemon::HandleGet()+0x32>
 800dcc8:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800dccc:	08014c9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, sl, fp, lr}
 800dcd0:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}
 800dcd4:	08014c9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, fp, lr}
 800dcd8:	08014ca9 	stmdaeq	r1, {r0, r3, r5, r7, sl, fp, lr}
 800dcdc:	08014ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, lr}
 800dce0:	08014caa 	stmdaeq	r1, {r1, r3, r5, r7, sl, fp, lr}
 800dce4:	08014cb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, sl, fp, lr}
 800dce8:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}
 800dcec:	08014ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, lr}
 800dcf0:	08014cb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, fp, lr}
 800dcf4:	08014f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, lr}
 800dcf8:	08014cc6 	stmdaeq	r1, {r1, r2, r6, r7, sl, fp, lr}
 800dcfc:	08014ccb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, fp, lr}
 800dd00:	08014cd3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, fp, lr}
 800dd04:	20001970 	andcs	r1, r0, r0, ror r9
 800dd08:	08014cda 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, fp, lr}
 800dd0c:	08014ce2 	stmdaeq	r1, {r1, r5, r6, r7, sl, fp, lr}

0800dd10 <HttpDaemon::HandlePost(bool)>:
 800dd10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dd12:	4604      	mov	r4, r0
 800dd14:	2900      	cmp	r1, #0
 800dd16:	f040 8091 	bne.w	800de3c <HttpDaemon::HandlePost(bool)+0x12c>
 800dd1a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800dd1e:	2b00      	cmp	r3, #0
 800dd20:	d05d      	beq.n	800ddde <HttpDaemon::HandlePost(bool)+0xce>
 800dd22:	6845      	ldr	r5, [r0, #4]
 800dd24:	4948      	ldr	r1, [pc, #288]	; (800de48 <HttpDaemon::HandlePost(bool)+0x138>)
 800dd26:	4628      	mov	r0, r5
 800dd28:	f7ff fde3 	bl	800d8f2 <strcmp>
 800dd2c:	2800      	cmp	r0, #0
 800dd2e:	bf0c      	ite	eq
 800dd30:	2301      	moveq	r3, #1
 800dd32:	2300      	movne	r3, #0
 800dd34:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800dd38:	d055      	beq.n	800dde6 <HttpDaemon::HandlePost(bool)+0xd6>
 800dd3a:	4628      	mov	r0, r5
 800dd3c:	4943      	ldr	r1, [pc, #268]	; (800de4c <HttpDaemon::HandlePost(bool)+0x13c>)
 800dd3e:	f7ff fdd8 	bl	800d8f2 <strcmp>
 800dd42:	2800      	cmp	r0, #0
 800dd44:	d04f      	beq.n	800dde6 <HttpDaemon::HandlePost(bool)+0xd6>
 800dd46:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800dd4a:	e04a      	b.n	800dde2 <HttpDaemon::HandlePost(bool)+0xd2>
 800dd4c:	4940      	ldr	r1, [pc, #256]	; (800de50 <HttpDaemon::HandlePost(bool)+0x140>)
 800dd4e:	68a0      	ldr	r0, [r4, #8]
 800dd50:	f10d 0207 	add.w	r2, sp, #7
 800dd54:	f003 fd07 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dd58:	b9e8      	cbnz	r0, 800dd96 <HttpDaemon::HandlePost(bool)+0x86>
 800dd5a:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800dd5e:	4b3d      	ldr	r3, [pc, #244]	; (800de54 <HttpDaemon::HandlePost(bool)+0x144>)
 800dd60:	fab6 f186 	clz	r1, r6
 800dd64:	681d      	ldr	r5, [r3, #0]
 800dd66:	0949      	lsrs	r1, r1, #5
 800dd68:	69a8      	ldr	r0, [r5, #24]
 800dd6a:	b138      	cbz	r0, 800dd7c <HttpDaemon::HandlePost(bool)+0x6c>
 800dd6c:	6803      	ldr	r3, [r0, #0]
 800dd6e:	7429      	strb	r1, [r5, #16]
 800dd70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd72:	4798      	blx	r3
 800dd74:	b116      	cbz	r6, 800dd7c <HttpDaemon::HandlePost(bool)+0x6c>
 800dd76:	4b38      	ldr	r3, [pc, #224]	; (800de58 <HttpDaemon::HandlePost(bool)+0x148>)
 800dd78:	681b      	ldr	r3, [r3, #0]
 800dd7a:	606b      	str	r3, [r5, #4]
 800dd7c:	4620      	mov	r0, r4
 800dd7e:	4b37      	ldr	r3, [pc, #220]	; (800de5c <HttpDaemon::HandlePost(bool)+0x14c>)
 800dd80:	f240 519f 	movw	r1, #1439	; 0x59f
 800dd84:	4a36      	ldr	r2, [pc, #216]	; (800de60 <HttpDaemon::HandlePost(bool)+0x150>)
 800dd86:	f840 3b22 	str.w	r3, [r0], #34
 800dd8a:	f7fb fbed 	bl	8009568 <snprintf>
 800dd8e:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800dd92:	20c8      	movs	r0, #200	; 0xc8
 800dd94:	e025      	b.n	800dde2 <HttpDaemon::HandlePost(bool)+0xd2>
 800dd96:	4933      	ldr	r1, [pc, #204]	; (800de64 <HttpDaemon::HandlePost(bool)+0x154>)
 800dd98:	68a0      	ldr	r0, [r4, #8]
 800dd9a:	f10d 0207 	add.w	r2, sp, #7
 800dd9e:	f003 fce2 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dda2:	b9e0      	cbnz	r0, 800ddde <HttpDaemon::HandlePost(bool)+0xce>
 800dda4:	4b30      	ldr	r3, [pc, #192]	; (800de68 <HttpDaemon::HandlePost(bool)+0x158>)
 800dda6:	6818      	ldr	r0, [r3, #0]
 800dda8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ddac:	b11b      	cbz	r3, 800ddb6 <HttpDaemon::HandlePost(bool)+0xa6>
 800ddae:	2104      	movs	r1, #4
 800ddb0:	f004 f86e 	bl	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800ddb4:	e7e2      	b.n	800dd7c <HttpDaemon::HandlePost(bool)+0x6c>
 800ddb6:	2102      	movs	r1, #2
 800ddb8:	e7fa      	b.n	800ddb0 <HttpDaemon::HandlePost(bool)+0xa0>
 800ddba:	4b2c      	ldr	r3, [pc, #176]	; (800de6c <HttpDaemon::HandlePost(bool)+0x15c>)
 800ddbc:	2001      	movs	r0, #1
 800ddbe:	781d      	ldrb	r5, [r3, #0]
 800ddc0:	f7ff fdbe 	bl	800d940 <PropertiesConfig::EnableJSON(bool)>
 800ddc4:	4b2a      	ldr	r3, [pc, #168]	; (800de70 <HttpDaemon::HandlePost(bool)+0x160>)
 800ddc6:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800ddca:	6818      	ldr	r0, [r3, #0]
 800ddcc:	68a1      	ldr	r1, [r4, #8]
 800ddce:	f005 0501 	and.w	r5, r5, #1
 800ddd2:	f7ff fa09 	bl	800d1e8 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ddd6:	4628      	mov	r0, r5
 800ddd8:	f7ff fdb2 	bl	800d940 <PropertiesConfig::EnableJSON(bool)>
 800dddc:	e7ce      	b.n	800dd7c <HttpDaemon::HandlePost(bool)+0x6c>
 800ddde:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800dde2:	b002      	add	sp, #8
 800dde4:	bd70      	pop	{r4, r5, r6, pc}
 800dde6:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800ddea:	6962      	ldr	r2, [r4, #20]
 800ddec:	429a      	cmp	r2, r3
 800ddee:	dbd0      	blt.n	800dd92 <HttpDaemon::HandlePost(bool)+0x82>
 800ddf0:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800ddf4:	2b00      	cmp	r3, #0
 800ddf6:	d0cc      	beq.n	800dd92 <HttpDaemon::HandlePost(bool)+0x82>
 800ddf8:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800ddfc:	2b00      	cmp	r3, #0
 800ddfe:	d0dc      	beq.n	800ddba <HttpDaemon::HandlePost(bool)+0xaa>
 800de00:	2201      	movs	r2, #1
 800de02:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800de06:	68a0      	ldr	r0, [r4, #8]
 800de08:	f003 fa24 	bl	8011254 <properties::convert_json_file(char*, unsigned short, bool)>
 800de0c:	2800      	cmp	r0, #0
 800de0e:	dde6      	ble.n	800ddde <HttpDaemon::HandlePost(bool)+0xce>
 800de10:	4918      	ldr	r1, [pc, #96]	; (800de74 <HttpDaemon::HandlePost(bool)+0x164>)
 800de12:	68a0      	ldr	r0, [r4, #8]
 800de14:	f10d 0207 	add.w	r2, sp, #7
 800de18:	f003 fca5 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800de1c:	2800      	cmp	r0, #0
 800de1e:	d195      	bne.n	800dd4c <HttpDaemon::HandlePost(bool)+0x3c>
 800de20:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800de24:	2b00      	cmp	r3, #0
 800de26:	d0a9      	beq.n	800dd7c <HttpDaemon::HandlePost(bool)+0x6c>
 800de28:	4b11      	ldr	r3, [pc, #68]	; (800de70 <HttpDaemon::HandlePost(bool)+0x160>)
 800de2a:	681b      	ldr	r3, [r3, #0]
 800de2c:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800de30:	2b00      	cmp	r3, #0
 800de32:	d0d4      	beq.n	800ddde <HttpDaemon::HandlePost(bool)+0xce>
 800de34:	4b10      	ldr	r3, [pc, #64]	; (800de78 <HttpDaemon::HandlePost(bool)+0x168>)
 800de36:	6818      	ldr	r0, [r3, #0]
 800de38:	f004 f8ce 	bl	8011fd8 <Hardware::Reboot()>
 800de3c:	68c3      	ldr	r3, [r0, #12]
 800de3e:	6083      	str	r3, [r0, #8]
 800de40:	6943      	ldr	r3, [r0, #20]
 800de42:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800de46:	e7d7      	b.n	800ddf8 <HttpDaemon::HandlePost(bool)+0xe8>
 800de48:	08014cec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, lr}
 800de4c:	08014c88 	stmdaeq	r1, {r3, r7, sl, fp, lr}
 800de50:	08014cda 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, fp, lr}
 800de54:	2000a8c0 	andcs	sl, r0, r0, asr #17
 800de58:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800de5c:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}
 800de60:	08014d09 	stmdaeq	r1, {r0, r3, r8, sl, fp, lr}
 800de64:	08014d00 	stmdaeq	r1, {r8, sl, fp, lr}
 800de68:	2000a9ac 	andcs	sl, r0, ip, lsr #19
 800de6c:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc
 800de70:	20001970 	andcs	r1, r0, r0, ror r9
 800de74:	08014cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, lr}
 800de78:	2000a9b0 			; <UNDEFINED> instruction: 0x2000a9b0

0800de7c <HttpDaemon::Run()>:
 800de7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de7e:	4e4a      	ldr	r6, [pc, #296]	; (800dfa8 <HttpDaemon::Run()+0x12c>)
 800de80:	4604      	mov	r4, r0
 800de82:	6901      	ldr	r1, [r0, #16]
 800de84:	f100 020c 	add.w	r2, r0, #12
 800de88:	b085      	sub	sp, #20
 800de8a:	6830      	ldr	r0, [r6, #0]
 800de8c:	f002 f82f 	bl	800feee <Network::TcpRead(int, unsigned char const**)>
 800de90:	6160      	str	r0, [r4, #20]
 800de92:	2800      	cmp	r0, #0
 800de94:	d061      	beq.n	800df5a <HttpDaemon::Run()+0xde>
 800de96:	69a3      	ldr	r3, [r4, #24]
 800de98:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800de9c:	d15f      	bne.n	800df5e <HttpDaemon::Run()+0xe2>
 800de9e:	4620      	mov	r0, r4
 800dea0:	f7ff fe10 	bl	800dac4 <HttpDaemon::ParseRequest()>
 800dea4:	28c8      	cmp	r0, #200	; 0xc8
 800dea6:	61a0      	str	r0, [r4, #24]
 800dea8:	d106      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800deaa:	69e3      	ldr	r3, [r4, #28]
 800deac:	2b00      	cmp	r3, #0
 800deae:	d147      	bne.n	800df40 <HttpDaemon::Run()+0xc4>
 800deb0:	4620      	mov	r0, r4
 800deb2:	f7ff fe7f 	bl	800dbb4 <HttpDaemon::HandleGet()>
 800deb6:	61a0      	str	r0, [r4, #24]
 800deb8:	69a3      	ldr	r3, [r4, #24]
 800deba:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800debe:	2bc8      	cmp	r3, #200	; 0xc8
 800dec0:	d06f      	beq.n	800dfa2 <HttpDaemon::Run()+0x126>
 800dec2:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800dec6:	d062      	beq.n	800df8e <HttpDaemon::Run()+0x112>
 800dec8:	dc52      	bgt.n	800df70 <HttpDaemon::Run()+0xf4>
 800deca:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800dece:	d060      	beq.n	800df92 <HttpDaemon::Run()+0x116>
 800ded0:	f240 129d 	movw	r2, #413	; 0x19d
 800ded4:	4293      	cmp	r3, r2
 800ded6:	d05e      	beq.n	800df96 <HttpDaemon::Run()+0x11a>
 800ded8:	4d34      	ldr	r5, [pc, #208]	; (800dfac <HttpDaemon::Run()+0x130>)
 800deda:	4a35      	ldr	r2, [pc, #212]	; (800dfb0 <HttpDaemon::Run()+0x134>)
 800dedc:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800dee0:	bf18      	it	ne
 800dee2:	4615      	movne	r5, r2
 800dee4:	4a33      	ldr	r2, [pc, #204]	; (800dfb4 <HttpDaemon::Run()+0x138>)
 800dee6:	f240 519f 	movw	r1, #1439	; 0x59f
 800deea:	6022      	str	r2, [r4, #0]
 800deec:	4638      	mov	r0, r7
 800deee:	e9cd 5500 	strd	r5, r5, [sp]
 800def2:	4a31      	ldr	r2, [pc, #196]	; (800dfb8 <HttpDaemon::Run()+0x13c>)
 800def4:	f7fb fb38 	bl	8009568 <snprintf>
 800def8:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800defc:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800df00:	f240 519f 	movw	r1, #1439	; 0x59f
 800df04:	9303      	str	r3, [sp, #12]
 800df06:	6823      	ldr	r3, [r4, #0]
 800df08:	4a2c      	ldr	r2, [pc, #176]	; (800dfbc <HttpDaemon::Run()+0x140>)
 800df0a:	9302      	str	r3, [sp, #8]
 800df0c:	4b2c      	ldr	r3, [pc, #176]	; (800dfc0 <HttpDaemon::Run()+0x144>)
 800df0e:	68e0      	ldr	r0, [r4, #12]
 800df10:	e9cd 5300 	strd	r5, r3, [sp]
 800df14:	69a3      	ldr	r3, [r4, #24]
 800df16:	f7fb fb27 	bl	8009568 <snprintf>
 800df1a:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800df1e:	b283      	uxth	r3, r0
 800df20:	6830      	ldr	r0, [r6, #0]
 800df22:	f001 ffe8 	bl	800fef6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800df26:	463a      	mov	r2, r7
 800df28:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800df2c:	6921      	ldr	r1, [r4, #16]
 800df2e:	6830      	ldr	r0, [r6, #0]
 800df30:	f001 ffe1 	bl	800fef6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800df34:	f44f 7202 	mov.w	r2, #520	; 0x208
 800df38:	2302      	movs	r3, #2
 800df3a:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800df3e:	e00c      	b.n	800df5a <HttpDaemon::Run()+0xde>
 800df40:	2b01      	cmp	r3, #1
 800df42:	d1b9      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800df44:	2100      	movs	r1, #0
 800df46:	4620      	mov	r0, r4
 800df48:	f7ff fee2 	bl	800dd10 <HttpDaemon::HandlePost(bool)>
 800df4c:	28c8      	cmp	r0, #200	; 0xc8
 800df4e:	61a0      	str	r0, [r4, #24]
 800df50:	d1b2      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800df52:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800df56:	2b00      	cmp	r3, #0
 800df58:	d1ae      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800df5a:	b005      	add	sp, #20
 800df5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df5e:	2bc8      	cmp	r3, #200	; 0xc8
 800df60:	d1aa      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800df62:	69e1      	ldr	r1, [r4, #28]
 800df64:	2901      	cmp	r1, #1
 800df66:	d1a7      	bne.n	800deb8 <HttpDaemon::Run()+0x3c>
 800df68:	4620      	mov	r0, r4
 800df6a:	f7ff fed1 	bl	800dd10 <HttpDaemon::HandlePost(bool)>
 800df6e:	e7a2      	b.n	800deb6 <HttpDaemon::Run()+0x3a>
 800df70:	f240 12f5 	movw	r2, #501	; 0x1f5
 800df74:	4293      	cmp	r3, r2
 800df76:	d010      	beq.n	800df9a <HttpDaemon::Run()+0x11e>
 800df78:	f240 12f9 	movw	r2, #505	; 0x1f9
 800df7c:	4293      	cmp	r3, r2
 800df7e:	d00e      	beq.n	800df9e <HttpDaemon::Run()+0x122>
 800df80:	4d10      	ldr	r5, [pc, #64]	; (800dfc4 <HttpDaemon::Run()+0x148>)
 800df82:	4a0b      	ldr	r2, [pc, #44]	; (800dfb0 <HttpDaemon::Run()+0x134>)
 800df84:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800df88:	bf18      	it	ne
 800df8a:	4615      	movne	r5, r2
 800df8c:	e7aa      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800df8e:	4d0e      	ldr	r5, [pc, #56]	; (800dfc8 <HttpDaemon::Run()+0x14c>)
 800df90:	e7a8      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800df92:	4d0e      	ldr	r5, [pc, #56]	; (800dfcc <HttpDaemon::Run()+0x150>)
 800df94:	e7a6      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800df96:	4d0e      	ldr	r5, [pc, #56]	; (800dfd0 <HttpDaemon::Run()+0x154>)
 800df98:	e7a4      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800df9a:	4d0e      	ldr	r5, [pc, #56]	; (800dfd4 <HttpDaemon::Run()+0x158>)
 800df9c:	e7a2      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800df9e:	4d0e      	ldr	r5, [pc, #56]	; (800dfd8 <HttpDaemon::Run()+0x15c>)
 800dfa0:	e7a0      	b.n	800dee4 <HttpDaemon::Run()+0x68>
 800dfa2:	4d0e      	ldr	r5, [pc, #56]	; (800dfdc <HttpDaemon::Run()+0x160>)
 800dfa4:	e7aa      	b.n	800defc <HttpDaemon::Run()+0x80>
 800dfa6:	bf00      	nop
 800dfa8:	2000a288 	andcs	sl, r0, r8, lsl #5
 800dfac:	08014dca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sl, fp, lr}
 800dfb0:	08014dd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, fp, lr}
 800dfb4:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}
 800dfb8:	08014dfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 800dfbc:	08014e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, lr}
 800dfc0:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 800dfc4:	08014de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, lr}
 800dfc8:	08014d88 	stmdaeq	r1, {r3, r7, r8, sl, fp, lr}
 800dfcc:	08014d7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sl, fp, lr}
 800dfd0:	08014d65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp, lr}
 800dfd4:	08014db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, lr}
 800dfd8:	08014d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, lr}
 800dfdc:	08014dfa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, fp, lr}

0800dfe0 <remoteconfig::json_get_list(char*, unsigned short)>:
 800dfe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfe4:	4b14      	ldr	r3, [pc, #80]	; (800e038 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800dfe6:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800e03c <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800dfea:	681b      	ldr	r3, [r3, #0]
 800dfec:	b088      	sub	sp, #32
 800dfee:	4605      	mov	r5, r0
 800dff0:	f8d8 0000 	ldr.w	r0, [r8]
 800dff4:	691c      	ldr	r4, [r3, #16]
 800dff6:	460e      	mov	r6, r1
 800dff8:	f7fe ffd2 	bl	800cfa0 <RemoteConfig::GetStringNode() const>
 800dffc:	4607      	mov	r7, r0
 800dffe:	f8d8 0000 	ldr.w	r0, [r8]
 800e002:	f7fe ffd9 	bl	800cfb8 <RemoteConfig::GetStringOutput() const>
 800e006:	4b0e      	ldr	r3, [pc, #56]	; (800e040 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800e008:	4631      	mov	r1, r6
 800e00a:	7a1a      	ldrb	r2, [r3, #8]
 800e00c:	3309      	adds	r3, #9
 800e00e:	9303      	str	r3, [sp, #12]
 800e010:	0e23      	lsrs	r3, r4, #24
 800e012:	9302      	str	r3, [sp, #8]
 800e014:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e018:	9301      	str	r3, [sp, #4]
 800e01a:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800e01e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800e022:	9300      	str	r3, [sp, #0]
 800e024:	4628      	mov	r0, r5
 800e026:	4a07      	ldr	r2, [pc, #28]	; (800e044 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800e028:	9704      	str	r7, [sp, #16]
 800e02a:	b2e3      	uxtb	r3, r4
 800e02c:	f7fb fa9c 	bl	8009568 <snprintf>
 800e030:	b280      	uxth	r0, r0
 800e032:	b008      	add	sp, #32
 800e034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e038:	2000a288 	andcs	sl, r0, r8, lsl #5
 800e03c:	20001970 	andcs	r1, r0, r0, ror r9
 800e040:	2000194c 	andcs	r1, r0, ip, asr #18
 800e044:	08014f8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, fp, lr}

0800e048 <remoteconfig::json_get_version(char*, unsigned short)>:
 800e048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e04a:	2208      	movs	r2, #8
 800e04c:	4b09      	ldr	r3, [pc, #36]	; (800e074 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800e04e:	9204      	str	r2, [sp, #16]
 800e050:	f1a3 020b 	sub.w	r2, r3, #11
 800e054:	9203      	str	r2, [sp, #12]
 800e056:	220b      	movs	r2, #11
 800e058:	9202      	str	r2, [sp, #8]
 800e05a:	4a07      	ldr	r2, [pc, #28]	; (800e078 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800e05c:	9305      	str	r3, [sp, #20]
 800e05e:	3b0e      	subs	r3, #14
 800e060:	9201      	str	r2, [sp, #4]
 800e062:	9300      	str	r3, [sp, #0]
 800e064:	4a05      	ldr	r2, [pc, #20]	; (800e07c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800e066:	2303      	movs	r3, #3
 800e068:	f7fb fa7e 	bl	8009568 <snprintf>
 800e06c:	b280      	uxth	r0, r0
 800e06e:	b007      	add	sp, #28
 800e070:	f85d fb04 	ldr.w	pc, [sp], #4
 800e074:	2000a95e 	andcs	sl, r0, lr, asr r9
 800e078:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 800e07c:	08014fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, lr}

0800e080 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800e080:	b508      	push	{r3, lr}
 800e082:	4b05      	ldr	r3, [pc, #20]	; (800e098 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800e084:	681a      	ldr	r2, [r3, #0]
 800e086:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800e08a:	fbb2 f3f3 	udiv	r3, r2, r3
 800e08e:	4a03      	ldr	r2, [pc, #12]	; (800e09c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800e090:	f7fb fa6a 	bl	8009568 <snprintf>
 800e094:	b280      	uxth	r0, r0
 800e096:	bd08      	pop	{r3, pc}
 800e098:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800e09c:	0801502f 	stmdaeq	r1, {r0, r1, r2, r3, r5, ip, lr}

0800e0a0 <remoteconfig::json_get_display(char*, unsigned short)>:
 800e0a0:	b508      	push	{r3, lr}
 800e0a2:	4b05      	ldr	r3, [pc, #20]	; (800e0b8 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800e0a4:	4a05      	ldr	r2, [pc, #20]	; (800e0bc <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800e0a6:	681b      	ldr	r3, [r3, #0]
 800e0a8:	7c1b      	ldrb	r3, [r3, #16]
 800e0aa:	f083 0301 	eor.w	r3, r3, #1
 800e0ae:	f7fb fa5b 	bl	8009568 <snprintf>
 800e0b2:	b280      	uxth	r0, r0
 800e0b4:	bd08      	pop	{r3, pc}
 800e0b6:	bf00      	nop
 800e0b8:	2000a8c0 	andcs	sl, r0, r0, asr #17
 800e0bc:	0801503e 	stmdaeq	r1, {r1, r2, r3, r4, r5, ip, lr}

0800e0c0 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800e0c0:	b508      	push	{r3, lr}
 800e0c2:	4a02      	ldr	r2, [pc, #8]	; (800e0cc <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800e0c4:	f7fb fa50 	bl	8009568 <snprintf>
 800e0c8:	b280      	uxth	r0, r0
 800e0ca:	bd08      	pop	{r3, pc}
 800e0cc:	0801504d 	stmdaeq	r1, {r0, r2, r3, r6, ip, lr}

0800e0d0 <get_file_content(char const*, char*)>:
 800e0d0:	2300      	movs	r3, #0
 800e0d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e0d4:	4a18      	ldr	r2, [pc, #96]	; (800e138 <get_file_content(char const*, char*)+0x68>)
 800e0d6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e0da:	1e46      	subs	r6, r0, #1
 800e0dc:	1e6f      	subs	r7, r5, #1
 800e0de:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800e0e2:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800e0e6:	4564      	cmp	r4, ip
 800e0e8:	d119      	bne.n	800e11e <get_file_content(char const*, char*)+0x4e>
 800e0ea:	2c00      	cmp	r4, #0
 800e0ec:	d1f7      	bne.n	800e0de <get_file_content(char const*, char*)+0xe>
 800e0ee:	460c      	mov	r4, r1
 800e0f0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e0f4:	685b      	ldr	r3, [r3, #4]
 800e0f6:	3b01      	subs	r3, #1
 800e0f8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800e0fc:	f804 2b01 	strb.w	r2, [r4], #1
 800e100:	2a00      	cmp	r2, #0
 800e102:	d1f9      	bne.n	800e0f8 <get_file_content(char const*, char*)+0x28>
 800e104:	1a64      	subs	r4, r4, r1
 800e106:	3c01      	subs	r4, #1
 800e108:	232e      	movs	r3, #46	; 0x2e
 800e10a:	e9cd 5400 	strd	r5, r4, [sp]
 800e10e:	4a0b      	ldr	r2, [pc, #44]	; (800e13c <get_file_content(char const*, char*)+0x6c>)
 800e110:	490b      	ldr	r1, [pc, #44]	; (800e140 <get_file_content(char const*, char*)+0x70>)
 800e112:	480c      	ldr	r0, [pc, #48]	; (800e144 <get_file_content(char const*, char*)+0x74>)
 800e114:	f7fb fa00 	bl	8009518 <printf>
 800e118:	4620      	mov	r0, r4
 800e11a:	b003      	add	sp, #12
 800e11c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e11e:	3301      	adds	r3, #1
 800e120:	2b03      	cmp	r3, #3
 800e122:	d1d8      	bne.n	800e0d6 <get_file_content(char const*, char*)+0x6>
 800e124:	2333      	movs	r3, #51	; 0x33
 800e126:	4a06      	ldr	r2, [pc, #24]	; (800e140 <get_file_content(char const*, char*)+0x70>)
 800e128:	4904      	ldr	r1, [pc, #16]	; (800e13c <get_file_content(char const*, char*)+0x6c>)
 800e12a:	4807      	ldr	r0, [pc, #28]	; (800e148 <get_file_content(char const*, char*)+0x78>)
 800e12c:	f7fb f9f4 	bl	8009518 <printf>
 800e130:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800e134:	e7f0      	b.n	800e118 <get_file_content(char const*, char*)+0x48>
 800e136:	bf00      	nop
 800e138:	080153e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, ip, lr}
 800e13c:	080150e4 	stmdaeq	r1, {r2, r5, r6, r7, ip, lr}
 800e140:	08015103 	stmdaeq	r1, {r0, r1, r8, ip, lr}
 800e144:	08015114 	stmdaeq	r1, {r2, r4, r8, ip, lr}
 800e148:	08015130 	stmdaeq	r1, {r4, r5, r8, ip, lr}

0800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e14c:	2300      	movs	r3, #0
 800e14e:	2020      	movs	r0, #32
 800e150:	b510      	push	{r4, lr}
 800e152:	4a04      	ldr	r2, [pc, #16]	; (800e164 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e154:	428b      	cmp	r3, r1
 800e156:	d004      	beq.n	800e162 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800e158:	f852 4b04 	ldr.w	r4, [r2], #4
 800e15c:	3301      	adds	r3, #1
 800e15e:	4420      	add	r0, r4
 800e160:	e7f8      	b.n	800e154 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e162:	bd10      	pop	{r4, pc}
 800e164:	0801592c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, lr}

0800e168 <SpiFlashStore::Init()>:
 800e168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e16c:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800e290 <SpiFlashStore::Init()+0x128>
 800e170:	4607      	mov	r7, r0
 800e172:	b085      	sub	sp, #20
 800e174:	f8d8 0000 	ldr.w	r0, [r8]
 800e178:	f000 fbe4 	bl	800e944 <FlashRom::GetSectorSize() const>
 800e17c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e180:	4605      	mov	r5, r0
 800e182:	f040 8083 	bne.w	800e28c <SpiFlashStore::Init()+0x124>
 800e186:	f8d8 0000 	ldr.w	r0, [r8]
 800e18a:	f000 fbd3 	bl	800e934 <FlashRom::GetSize() const>
 800e18e:	4b41      	ldr	r3, [pc, #260]	; (800e294 <SpiFlashStore::Init()+0x12c>)
 800e190:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e194:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e198:	6019      	str	r1, [r3, #0]
 800e19a:	2e00      	cmp	r6, #0
 800e19c:	d176      	bne.n	800e28c <SpiFlashStore::Init()+0x124>
 800e19e:	4c3e      	ldr	r4, [pc, #248]	; (800e298 <SpiFlashStore::Init()+0x130>)
 800e1a0:	ab03      	add	r3, sp, #12
 800e1a2:	9300      	str	r3, [sp, #0]
 800e1a4:	462a      	mov	r2, r5
 800e1a6:	4623      	mov	r3, r4
 800e1a8:	f8d8 0000 	ldr.w	r0, [r8]
 800e1ac:	f000 fbcd 	bl	800e94a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e1b0:	7823      	ldrb	r3, [r4, #0]
 800e1b2:	2b41      	cmp	r3, #65	; 0x41
 800e1b4:	bf1c      	itt	ne
 800e1b6:	2341      	movne	r3, #65	; 0x41
 800e1b8:	7023      	strbne	r3, [r4, #0]
 800e1ba:	7863      	ldrb	r3, [r4, #1]
 800e1bc:	bf14      	ite	ne
 800e1be:	4635      	movne	r5, r6
 800e1c0:	2501      	moveq	r5, #1
 800e1c2:	2b76      	cmp	r3, #118	; 0x76
 800e1c4:	bf1c      	itt	ne
 800e1c6:	2376      	movne	r3, #118	; 0x76
 800e1c8:	7063      	strbne	r3, [r4, #1]
 800e1ca:	78a3      	ldrb	r3, [r4, #2]
 800e1cc:	bf18      	it	ne
 800e1ce:	2500      	movne	r5, #0
 800e1d0:	2b56      	cmp	r3, #86	; 0x56
 800e1d2:	bf1c      	itt	ne
 800e1d4:	2356      	movne	r3, #86	; 0x56
 800e1d6:	70a3      	strbne	r3, [r4, #2]
 800e1d8:	78e3      	ldrb	r3, [r4, #3]
 800e1da:	bf18      	it	ne
 800e1dc:	2500      	movne	r5, #0
 800e1de:	2b10      	cmp	r3, #16
 800e1e0:	d01c      	beq.n	800e21c <SpiFlashStore::Init()+0xb4>
 800e1e2:	2310      	movs	r3, #16
 800e1e4:	70e3      	strb	r3, [r4, #3]
 800e1e6:	2201      	movs	r2, #1
 800e1e8:	2500      	movs	r5, #0
 800e1ea:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e1ee:	4b2b      	ldr	r3, [pc, #172]	; (800e29c <SpiFlashStore::Init()+0x134>)
 800e1f0:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800e2a0 <SpiFlashStore::Init()+0x138>
 800e1f4:	701a      	strb	r2, [r3, #0]
 800e1f6:	4631      	mov	r1, r6
 800e1f8:	4638      	mov	r0, r7
 800e1fa:	f7ff ffa7 	bl	800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e1fe:	1823      	adds	r3, r4, r0
 800e200:	5425      	strb	r5, [r4, r0]
 800e202:	705d      	strb	r5, [r3, #1]
 800e204:	709d      	strb	r5, [r3, #2]
 800e206:	70dd      	strb	r5, [r3, #3]
 800e208:	f858 3b04 	ldr.w	r3, [r8], #4
 800e20c:	1d02      	adds	r2, r0, #4
 800e20e:	4403      	add	r3, r0
 800e210:	4293      	cmp	r3, r2
 800e212:	d931      	bls.n	800e278 <SpiFlashStore::Init()+0x110>
 800e214:	f804 9002 	strb.w	r9, [r4, r2]
 800e218:	3201      	adds	r2, #1
 800e21a:	e7f9      	b.n	800e210 <SpiFlashStore::Init()+0xa8>
 800e21c:	2d00      	cmp	r5, #0
 800e21e:	d0e2      	beq.n	800e1e6 <SpiFlashStore::Init()+0x7e>
 800e220:	f04f 0900 	mov.w	r9, #0
 800e224:	46c8      	mov	r8, r9
 800e226:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800e2a4 <SpiFlashStore::Init()+0x13c>
 800e22a:	f8da b000 	ldr.w	fp, [sl]
 800e22e:	4631      	mov	r1, r6
 800e230:	4638      	mov	r0, r7
 800e232:	f7ff ff8b 	bl	800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e236:	5c23      	ldrb	r3, [r4, r0]
 800e238:	2bff      	cmp	r3, #255	; 0xff
 800e23a:	d114      	bne.n	800e266 <SpiFlashStore::Init()+0xfe>
 800e23c:	1823      	adds	r3, r4, r0
 800e23e:	785a      	ldrb	r2, [r3, #1]
 800e240:	2aff      	cmp	r2, #255	; 0xff
 800e242:	d110      	bne.n	800e266 <SpiFlashStore::Init()+0xfe>
 800e244:	789a      	ldrb	r2, [r3, #2]
 800e246:	2aff      	cmp	r2, #255	; 0xff
 800e248:	d10d      	bne.n	800e266 <SpiFlashStore::Init()+0xfe>
 800e24a:	78da      	ldrb	r2, [r3, #3]
 800e24c:	2aff      	cmp	r2, #255	; 0xff
 800e24e:	d10a      	bne.n	800e266 <SpiFlashStore::Init()+0xfe>
 800e250:	46a9      	mov	r9, r5
 800e252:	f04f 0b01 	mov.w	fp, #1
 800e256:	f804 8000 	strb.w	r8, [r4, r0]
 800e25a:	f883 8001 	strb.w	r8, [r3, #1]
 800e25e:	f883 8002 	strb.w	r8, [r3, #2]
 800e262:	f883 8003 	strb.w	r8, [r3, #3]
 800e266:	3601      	adds	r6, #1
 800e268:	2e1c      	cmp	r6, #28
 800e26a:	d1e0      	bne.n	800e22e <SpiFlashStore::Init()+0xc6>
 800e26c:	f1b9 0f00 	cmp.w	r9, #0
 800e270:	d008      	beq.n	800e284 <SpiFlashStore::Init()+0x11c>
 800e272:	f8ca b000 	str.w	fp, [sl]
 800e276:	e005      	b.n	800e284 <SpiFlashStore::Init()+0x11c>
 800e278:	3601      	adds	r6, #1
 800e27a:	2e1c      	cmp	r6, #28
 800e27c:	d1bb      	bne.n	800e1f6 <SpiFlashStore::Init()+0x8e>
 800e27e:	2501      	movs	r5, #1
 800e280:	4b08      	ldr	r3, [pc, #32]	; (800e2a4 <SpiFlashStore::Init()+0x13c>)
 800e282:	601d      	str	r5, [r3, #0]
 800e284:	4628      	mov	r0, r5
 800e286:	b005      	add	sp, #20
 800e288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e28c:	2500      	movs	r5, #0
 800e28e:	e7f9      	b.n	800e284 <SpiFlashStore::Init()+0x11c>
 800e290:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e294:	20002978 	andcs	r2, r0, r8, ror r9
 800e298:	20001978 	andcs	r1, r0, r8, ror r9
 800e29c:	2000298c 	andcs	r2, r0, ip, lsl #19
 800e2a0:	0801592c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, lr}
 800e2a4:	20002984 	andcs	r2, r0, r4, lsl #19

0800e2a8 <SpiFlashStore::SpiFlashStore()>:
 800e2a8:	b538      	push	{r3, r4, r5, lr}
 800e2aa:	4b0d      	ldr	r3, [pc, #52]	; (800e2e0 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e2ac:	4604      	mov	r4, r0
 800e2ae:	6018      	str	r0, [r3, #0]
 800e2b0:	4b0c      	ldr	r3, [pc, #48]	; (800e2e4 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e2b2:	4d0d      	ldr	r5, [pc, #52]	; (800e2e8 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e2b4:	681b      	ldr	r3, [r3, #0]
 800e2b6:	781b      	ldrb	r3, [r3, #0]
 800e2b8:	b113      	cbz	r3, 800e2c0 <SpiFlashStore::SpiFlashStore()+0x18>
 800e2ba:	f7ff ff55 	bl	800e168 <SpiFlashStore::Init()>
 800e2be:	7028      	strb	r0, [r5, #0]
 800e2c0:	782b      	ldrb	r3, [r5, #0]
 800e2c2:	b153      	cbz	r3, 800e2da <SpiFlashStore::SpiFlashStore()+0x32>
 800e2c4:	2320      	movs	r3, #32
 800e2c6:	2200      	movs	r2, #0
 800e2c8:	4908      	ldr	r1, [pc, #32]	; (800e2ec <SpiFlashStore::SpiFlashStore()+0x44>)
 800e2ca:	f851 0b04 	ldr.w	r0, [r1], #4
 800e2ce:	3201      	adds	r2, #1
 800e2d0:	2a1c      	cmp	r2, #28
 800e2d2:	4403      	add	r3, r0
 800e2d4:	d1f9      	bne.n	800e2ca <SpiFlashStore::SpiFlashStore()+0x22>
 800e2d6:	4a06      	ldr	r2, [pc, #24]	; (800e2f0 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e2d8:	6013      	str	r3, [r2, #0]
 800e2da:	4620      	mov	r0, r4
 800e2dc:	bd38      	pop	{r3, r4, r5, pc}
 800e2de:	bf00      	nop
 800e2e0:	20002988 	andcs	r2, r0, r8, lsl #19
 800e2e4:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e2e8:	2000297c 	andcs	r2, r0, ip, ror r9
 800e2ec:	0801592c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, lr}
 800e2f0:	20002980 	andcs	r2, r0, r0, lsl #19

0800e2f4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e2f4:	b508      	push	{r3, lr}
 800e2f6:	f7ff ff29 	bl	800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e2fa:	2300      	movs	r3, #0
 800e2fc:	4904      	ldr	r1, [pc, #16]	; (800e310 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e2fe:	1842      	adds	r2, r0, r1
 800e300:	540b      	strb	r3, [r1, r0]
 800e302:	7053      	strb	r3, [r2, #1]
 800e304:	7093      	strb	r3, [r2, #2]
 800e306:	70d3      	strb	r3, [r2, #3]
 800e308:	2201      	movs	r2, #1
 800e30a:	4b02      	ldr	r3, [pc, #8]	; (800e314 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e30c:	601a      	str	r2, [r3, #0]
 800e30e:	bd08      	pop	{r3, pc}
 800e310:	20001978 	andcs	r1, r0, r8, ror r9
 800e314:	20002984 	andcs	r2, r0, r4, lsl #19

0800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e31c:	461c      	mov	r4, r3
 800e31e:	4b19      	ldr	r3, [pc, #100]	; (800e384 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e320:	4615      	mov	r5, r2
 800e322:	781f      	ldrb	r7, [r3, #0]
 800e324:	9e07      	ldr	r6, [sp, #28]
 800e326:	b35f      	cbz	r7, 800e380 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e328:	f7ff ff10 	bl	800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e32c:	f04f 0c00 	mov.w	ip, #0
 800e330:	4a15      	ldr	r2, [pc, #84]	; (800e388 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e332:	1941      	adds	r1, r0, r5
 800e334:	1e63      	subs	r3, r4, #1
 800e336:	9c06      	ldr	r4, [sp, #24]
 800e338:	4411      	add	r1, r2
 800e33a:	440c      	add	r4, r1
 800e33c:	42a1      	cmp	r1, r4
 800e33e:	d00a      	beq.n	800e356 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800e340:	f891 8000 	ldrb.w	r8, [r1]
 800e344:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e348:	3101      	adds	r1, #1
 800e34a:	45f0      	cmp	r8, lr
 800e34c:	bf1c      	itt	ne
 800e34e:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e352:	46bc      	movne	ip, r7
 800e354:	e7f2      	b.n	800e33c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e356:	f1bc 0f00 	cmp.w	ip, #0
 800e35a:	d011      	beq.n	800e380 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e35c:	4b0b      	ldr	r3, [pc, #44]	; (800e38c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e35e:	6819      	ldr	r1, [r3, #0]
 800e360:	b109      	cbz	r1, 800e366 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800e362:	2906      	cmp	r1, #6
 800e364:	d101      	bne.n	800e36a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e366:	2101      	movs	r1, #1
 800e368:	6019      	str	r1, [r3, #0]
 800e36a:	4b09      	ldr	r3, [pc, #36]	; (800e390 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e36c:	6819      	ldr	r1, [r3, #0]
 800e36e:	4b09      	ldr	r3, [pc, #36]	; (800e394 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e370:	6019      	str	r1, [r3, #0]
 800e372:	b12d      	cbz	r5, 800e380 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e374:	b126      	cbz	r6, 800e380 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e376:	9b08      	ldr	r3, [sp, #32]
 800e378:	4418      	add	r0, r3
 800e37a:	5813      	ldr	r3, [r2, r0]
 800e37c:	4333      	orrs	r3, r6
 800e37e:	5013      	str	r3, [r2, r0]
 800e380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e384:	2000297c 	andcs	r2, r0, ip, ror r9
 800e388:	20001978 	andcs	r1, r0, r8, ror r9
 800e38c:	20002984 	andcs	r2, r0, r4, lsl #19
 800e390:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800e394:	20001974 	andcs	r1, r0, r4, ror r9

0800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800e398:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e39c:	461d      	mov	r5, r3
 800e39e:	4b15      	ldr	r3, [pc, #84]	; (800e3f4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800e3a0:	b085      	sub	sp, #20
 800e3a2:	781b      	ldrb	r3, [r3, #0]
 800e3a4:	4607      	mov	r7, r0
 800e3a6:	4688      	mov	r8, r1
 800e3a8:	4614      	mov	r4, r2
 800e3aa:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800e3ae:	b1eb      	cbz	r3, 800e3ec <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e3b0:	f7ff fecc 	bl	800e14c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e3b4:	4910      	ldr	r1, [pc, #64]	; (800e3f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800e3b6:	4a11      	ldr	r2, [pc, #68]	; (800e3fc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800e3b8:	7809      	ldrb	r1, [r1, #0]
 800e3ba:	eb00 0309 	add.w	r3, r0, r9
 800e3be:	189e      	adds	r6, r3, r2
 800e3c0:	b951      	cbnz	r1, 800e3d8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e3c2:	589b      	ldr	r3, [r3, r2]
 800e3c4:	b143      	cbz	r3, 800e3d8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e3c6:	3c01      	subs	r4, #1
 800e3c8:	4435      	add	r5, r6
 800e3ca:	42b5      	cmp	r5, r6
 800e3cc:	d00e      	beq.n	800e3ec <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e3ce:	f816 3b01 	ldrb.w	r3, [r6], #1
 800e3d2:	f804 3f01 	strb.w	r3, [r4, #1]!
 800e3d6:	e7f8      	b.n	800e3ca <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800e3d8:	2300      	movs	r3, #0
 800e3da:	464a      	mov	r2, r9
 800e3dc:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e3e0:	4641      	mov	r1, r8
 800e3e2:	4623      	mov	r3, r4
 800e3e4:	4638      	mov	r0, r7
 800e3e6:	9500      	str	r5, [sp, #0]
 800e3e8:	f7ff ff96 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e3ec:	b005      	add	sp, #20
 800e3ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e3f2:	bf00      	nop
 800e3f4:	2000297c 	andcs	r2, r0, ip, ror r9
 800e3f8:	2000298c 	andcs	r2, r0, ip, lsl #19
 800e3fc:	20001978 	andcs	r1, r0, r8, ror r9

0800e400 <SpiFlashStore::Flash()>:
 800e400:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e402:	4c25      	ldr	r4, [pc, #148]	; (800e498 <SpiFlashStore::Flash()+0x98>)
 800e404:	6820      	ldr	r0, [r4, #0]
 800e406:	2800      	cmp	r0, #0
 800e408:	d043      	beq.n	800e492 <SpiFlashStore::Flash()+0x92>
 800e40a:	3801      	subs	r0, #1
 800e40c:	2805      	cmp	r0, #5
 800e40e:	d831      	bhi.n	800e474 <SpiFlashStore::Flash()+0x74>
 800e410:	e8df f000 	tbb	[pc, r0]
 800e414:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e418:	4b203025 	blmi	881a4b4 <__exidx_end+0x804028>
 800e41c:	681a      	ldr	r2, [r3, #0]
 800e41e:	4b20      	ldr	r3, [pc, #128]	; (800e4a0 <SpiFlashStore::Flash()+0xa0>)
 800e420:	601a      	str	r2, [r3, #0]
 800e422:	2302      	movs	r3, #2
 800e424:	6023      	str	r3, [r4, #0]
 800e426:	2001      	movs	r0, #1
 800e428:	e033      	b.n	800e492 <SpiFlashStore::Flash()+0x92>
 800e42a:	4b1c      	ldr	r3, [pc, #112]	; (800e49c <SpiFlashStore::Flash()+0x9c>)
 800e42c:	4a1c      	ldr	r2, [pc, #112]	; (800e4a0 <SpiFlashStore::Flash()+0xa0>)
 800e42e:	681b      	ldr	r3, [r3, #0]
 800e430:	6812      	ldr	r2, [r2, #0]
 800e432:	1a9b      	subs	r3, r3, r2
 800e434:	2b63      	cmp	r3, #99	; 0x63
 800e436:	d9f6      	bls.n	800e426 <SpiFlashStore::Flash()+0x26>
 800e438:	2303      	movs	r3, #3
 800e43a:	e7f3      	b.n	800e424 <SpiFlashStore::Flash()+0x24>
 800e43c:	4919      	ldr	r1, [pc, #100]	; (800e4a4 <SpiFlashStore::Flash()+0xa4>)
 800e43e:	481a      	ldr	r0, [pc, #104]	; (800e4a8 <SpiFlashStore::Flash()+0xa8>)
 800e440:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e444:	6809      	ldr	r1, [r1, #0]
 800e446:	6800      	ldr	r0, [r0, #0]
 800e448:	ab03      	add	r3, sp, #12
 800e44a:	f000 fa8d 	bl	800e968 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e44e:	2800      	cmp	r0, #0
 800e450:	d0e9      	beq.n	800e426 <SpiFlashStore::Flash()+0x26>
 800e452:	4b12      	ldr	r3, [pc, #72]	; (800e49c <SpiFlashStore::Flash()+0x9c>)
 800e454:	681a      	ldr	r2, [r3, #0]
 800e456:	4b12      	ldr	r3, [pc, #72]	; (800e4a0 <SpiFlashStore::Flash()+0xa0>)
 800e458:	601a      	str	r2, [r3, #0]
 800e45a:	2305      	movs	r3, #5
 800e45c:	e7e2      	b.n	800e424 <SpiFlashStore::Flash()+0x24>
 800e45e:	4b0f      	ldr	r3, [pc, #60]	; (800e49c <SpiFlashStore::Flash()+0x9c>)
 800e460:	4a0f      	ldr	r2, [pc, #60]	; (800e4a0 <SpiFlashStore::Flash()+0xa0>)
 800e462:	681b      	ldr	r3, [r3, #0]
 800e464:	6812      	ldr	r2, [r2, #0]
 800e466:	1a9b      	subs	r3, r3, r2
 800e468:	2b63      	cmp	r3, #99	; 0x63
 800e46a:	d9dc      	bls.n	800e426 <SpiFlashStore::Flash()+0x26>
 800e46c:	2304      	movs	r3, #4
 800e46e:	e7d9      	b.n	800e424 <SpiFlashStore::Flash()+0x24>
 800e470:	2306      	movs	r3, #6
 800e472:	e7d7      	b.n	800e424 <SpiFlashStore::Flash()+0x24>
 800e474:	ab03      	add	r3, sp, #12
 800e476:	4a0d      	ldr	r2, [pc, #52]	; (800e4ac <SpiFlashStore::Flash()+0xac>)
 800e478:	490a      	ldr	r1, [pc, #40]	; (800e4a4 <SpiFlashStore::Flash()+0xa4>)
 800e47a:	480b      	ldr	r0, [pc, #44]	; (800e4a8 <SpiFlashStore::Flash()+0xa8>)
 800e47c:	9300      	str	r3, [sp, #0]
 800e47e:	6812      	ldr	r2, [r2, #0]
 800e480:	4b0b      	ldr	r3, [pc, #44]	; (800e4b0 <SpiFlashStore::Flash()+0xb0>)
 800e482:	6809      	ldr	r1, [r1, #0]
 800e484:	6800      	ldr	r0, [r0, #0]
 800e486:	f000 fb0f 	bl	800eaa8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e48a:	2800      	cmp	r0, #0
 800e48c:	d0cb      	beq.n	800e426 <SpiFlashStore::Flash()+0x26>
 800e48e:	2000      	movs	r0, #0
 800e490:	6020      	str	r0, [r4, #0]
 800e492:	b004      	add	sp, #16
 800e494:	bd10      	pop	{r4, pc}
 800e496:	bf00      	nop
 800e498:	20002984 	andcs	r2, r0, r4, lsl #19
 800e49c:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800e4a0:	20001974 	andcs	r1, r0, r4, ror r9
 800e4a4:	20002978 	andcs	r2, r0, r8, ror r9
 800e4a8:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e4ac:	20002980 	andcs	r2, r0, r0, lsl #19
 800e4b0:	20001978 	andcs	r1, r0, r8, ror r9

0800e4b4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e4b4:	4770      	bx	lr
	...

0800e4b8 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e4b8:	2300      	movs	r3, #0
 800e4ba:	b507      	push	{r0, r1, r2, lr}
 800e4bc:	4805      	ldr	r0, [pc, #20]	; (800e4d4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800e4be:	9300      	str	r3, [sp, #0]
 800e4c0:	460a      	mov	r2, r1
 800e4c2:	2322      	movs	r3, #34	; 0x22
 800e4c4:	210f      	movs	r1, #15
 800e4c6:	6800      	ldr	r0, [r0, #0]
 800e4c8:	f7ff ff66 	bl	800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e4cc:	b003      	add	sp, #12
 800e4ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4d2:	bf00      	nop
 800e4d4:	20002988 	andcs	r2, r0, r8, lsl #19

0800e4d8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e4d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e4da:	2200      	movs	r2, #0
 800e4dc:	460b      	mov	r3, r1
 800e4de:	2122      	movs	r1, #34	; 0x22
 800e4e0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e4e4:	4804      	ldr	r0, [pc, #16]	; (800e4f8 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e4e6:	9100      	str	r1, [sp, #0]
 800e4e8:	6800      	ldr	r0, [r0, #0]
 800e4ea:	210f      	movs	r1, #15
 800e4ec:	f7ff ff14 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e4f0:	b005      	add	sp, #20
 800e4f2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4f6:	bf00      	nop
 800e4f8:	20002988 	andcs	r2, r0, r8, lsl #19

0800e4fc <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e4fc:	b510      	push	{r4, lr}
 800e4fe:	4604      	mov	r4, r0
 800e500:	f003 fda8 	bl	8012054 <operator delete(void*)>
 800e504:	4620      	mov	r0, r4
 800e506:	bd10      	pop	{r4, pc}

0800e508 <StoreDisplayUdf::StoreDisplayUdf()>:
 800e508:	4a02      	ldr	r2, [pc, #8]	; (800e514 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e50a:	6002      	str	r2, [r0, #0]
 800e50c:	4a02      	ldr	r2, [pc, #8]	; (800e518 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e50e:	6010      	str	r0, [r2, #0]
 800e510:	4770      	bx	lr
 800e512:	bf00      	nop
 800e514:	080159a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, ip, lr}
 800e518:	20002990 	mulcs	r0, r0, r9

0800e51c <StoreE131::~StoreE131()>:
 800e51c:	4770      	bx	lr
	...

0800e520 <StoreE131::Copy(e131params::Params*)>:
 800e520:	2300      	movs	r3, #0
 800e522:	b507      	push	{r0, r1, r2, lr}
 800e524:	4805      	ldr	r0, [pc, #20]	; (800e53c <StoreE131::Copy(e131params::Params*)+0x1c>)
 800e526:	9300      	str	r3, [sp, #0]
 800e528:	460a      	mov	r2, r1
 800e52a:	231f      	movs	r3, #31
 800e52c:	2104      	movs	r1, #4
 800e52e:	6800      	ldr	r0, [r0, #0]
 800e530:	f7ff ff32 	bl	800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e534:	b003      	add	sp, #12
 800e536:	f85d fb04 	ldr.w	pc, [sp], #4
 800e53a:	bf00      	nop
 800e53c:	20002988 	andcs	r2, r0, r8, lsl #19

0800e540 <StoreE131::Update(e131params::Params const*)>:
 800e540:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e542:	2200      	movs	r2, #0
 800e544:	460b      	mov	r3, r1
 800e546:	211f      	movs	r1, #31
 800e548:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e54c:	4804      	ldr	r0, [pc, #16]	; (800e560 <StoreE131::Update(e131params::Params const*)+0x20>)
 800e54e:	9100      	str	r1, [sp, #0]
 800e550:	6800      	ldr	r0, [r0, #0]
 800e552:	2104      	movs	r1, #4
 800e554:	f7ff fee0 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e558:	b005      	add	sp, #20
 800e55a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e55e:	bf00      	nop
 800e560:	20002988 	andcs	r2, r0, r8, lsl #19

0800e564 <StoreE131::~StoreE131()>:
 800e564:	b510      	push	{r4, lr}
 800e566:	4604      	mov	r4, r0
 800e568:	f003 fd74 	bl	8012054 <operator delete(void*)>
 800e56c:	4620      	mov	r0, r4
 800e56e:	bd10      	pop	{r4, pc}

0800e570 <StoreE131::StoreE131()>:
 800e570:	4a02      	ldr	r2, [pc, #8]	; (800e57c <StoreE131::StoreE131()+0xc>)
 800e572:	6002      	str	r2, [r0, #0]
 800e574:	4a02      	ldr	r2, [pc, #8]	; (800e580 <StoreE131::StoreE131()+0x10>)
 800e576:	6010      	str	r0, [r2, #0]
 800e578:	4770      	bx	lr
 800e57a:	bf00      	nop
 800e57c:	080159bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, fp, ip, lr}
 800e580:	20002994 	mulcs	r0, r4, r9

0800e584 <StoreNetwork::~StoreNetwork()>:
 800e584:	4770      	bx	lr

0800e586 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e586:	3804      	subs	r0, #4
 800e588:	4770      	bx	lr
	...

0800e58c <StoreNetwork::Update(TNetworkParams const*)>:
 800e58c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e58e:	2200      	movs	r2, #0
 800e590:	460b      	mov	r3, r1
 800e592:	215e      	movs	r1, #94	; 0x5e
 800e594:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e598:	4804      	ldr	r0, [pc, #16]	; (800e5ac <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800e59a:	9100      	str	r1, [sp, #0]
 800e59c:	6800      	ldr	r0, [r0, #0]
 800e59e:	4611      	mov	r1, r2
 800e5a0:	f7ff feba 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5a4:	b005      	add	sp, #20
 800e5a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e5aa:	bf00      	nop
 800e5ac:	20002988 	andcs	r2, r0, r8, lsl #19

0800e5b0 <StoreNetwork::SaveDhcp(bool)>:
 800e5b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e5b2:	2301      	movs	r3, #1
 800e5b4:	f88d 1017 	strb.w	r1, [sp, #23]
 800e5b8:	2100      	movs	r1, #0
 800e5ba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e5be:	4805      	ldr	r0, [pc, #20]	; (800e5d4 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800e5c0:	9300      	str	r3, [sp, #0]
 800e5c2:	2214      	movs	r2, #20
 800e5c4:	6800      	ldr	r0, [r0, #0]
 800e5c6:	f10d 0317 	add.w	r3, sp, #23
 800e5ca:	f7ff fea5 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5ce:	b007      	add	sp, #28
 800e5d0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e5d4:	20002988 	andcs	r2, r0, r8, lsl #19

0800e5d8 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800e5d8:	f1a0 0004 	sub.w	r0, r0, #4
 800e5dc:	e7e8      	b.n	800e5b0 <StoreNetwork::SaveDhcp(bool)>
 800e5de:	bf00      	nop

0800e5e0 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e5e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e5e2:	2308      	movs	r3, #8
 800e5e4:	9105      	str	r1, [sp, #20]
 800e5e6:	2100      	movs	r1, #0
 800e5e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e5ec:	2304      	movs	r3, #4
 800e5ee:	4805      	ldr	r0, [pc, #20]	; (800e604 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e5f0:	9300      	str	r3, [sp, #0]
 800e5f2:	220c      	movs	r2, #12
 800e5f4:	6800      	ldr	r0, [r0, #0]
 800e5f6:	ab05      	add	r3, sp, #20
 800e5f8:	f7ff fe8e 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5fc:	b007      	add	sp, #28
 800e5fe:	f85d fb04 	ldr.w	pc, [sp], #4
 800e602:	bf00      	nop
 800e604:	20002988 	andcs	r2, r0, r8, lsl #19

0800e608 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e608:	f1a0 0004 	sub.w	r0, r0, #4
 800e60c:	e7e8      	b.n	800e5e0 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e60e:	bf00      	nop

0800e610 <StoreNetwork::SaveNetMask(unsigned int)>:
 800e610:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e612:	2304      	movs	r3, #4
 800e614:	9105      	str	r1, [sp, #20]
 800e616:	2100      	movs	r1, #0
 800e618:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e61c:	4804      	ldr	r0, [pc, #16]	; (800e630 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e61e:	9300      	str	r3, [sp, #0]
 800e620:	2208      	movs	r2, #8
 800e622:	6800      	ldr	r0, [r0, #0]
 800e624:	ab05      	add	r3, sp, #20
 800e626:	f7ff fe77 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e62a:	b007      	add	sp, #28
 800e62c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e630:	20002988 	andcs	r2, r0, r8, lsl #19

0800e634 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e634:	f1a0 0004 	sub.w	r0, r0, #4
 800e638:	e7ea      	b.n	800e610 <StoreNetwork::SaveNetMask(unsigned int)>
 800e63a:	bf00      	nop

0800e63c <StoreNetwork::SaveIp(unsigned int)>:
 800e63c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e63e:	2302      	movs	r3, #2
 800e640:	9105      	str	r1, [sp, #20]
 800e642:	2100      	movs	r1, #0
 800e644:	2204      	movs	r2, #4
 800e646:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e64a:	4804      	ldr	r0, [pc, #16]	; (800e65c <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e64c:	9200      	str	r2, [sp, #0]
 800e64e:	6800      	ldr	r0, [r0, #0]
 800e650:	ab05      	add	r3, sp, #20
 800e652:	f7ff fe61 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e656:	b007      	add	sp, #28
 800e658:	f85d fb04 	ldr.w	pc, [sp], #4
 800e65c:	20002988 	andcs	r2, r0, r8, lsl #19

0800e660 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e660:	f1a0 0004 	sub.w	r0, r0, #4
 800e664:	e7ea      	b.n	800e63c <StoreNetwork::SaveIp(unsigned int)>
 800e666:	bf00      	nop

0800e668 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e668:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e66a:	460b      	mov	r3, r1
 800e66c:	2020      	movs	r0, #32
 800e66e:	2100      	movs	r1, #0
 800e670:	2a40      	cmp	r2, #64	; 0x40
 800e672:	bf28      	it	cs
 800e674:	2240      	movcs	r2, #64	; 0x40
 800e676:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e67a:	4804      	ldr	r0, [pc, #16]	; (800e68c <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e67c:	9200      	str	r2, [sp, #0]
 800e67e:	6800      	ldr	r0, [r0, #0]
 800e680:	2215      	movs	r2, #21
 800e682:	f7ff fe49 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e686:	b005      	add	sp, #20
 800e688:	f85d fb04 	ldr.w	pc, [sp], #4
 800e68c:	20002988 	andcs	r2, r0, r8, lsl #19

0800e690 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e690:	f1a0 0004 	sub.w	r0, r0, #4
 800e694:	e7e8      	b.n	800e668 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e696:	bf00      	nop

0800e698 <StoreNetwork::~StoreNetwork()>:
 800e698:	b510      	push	{r4, lr}
 800e69a:	4604      	mov	r4, r0
 800e69c:	f003 fcda 	bl	8012054 <operator delete(void*)>
 800e6a0:	4620      	mov	r0, r4
 800e6a2:	bd10      	pop	{r4, pc}

0800e6a4 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e6a4:	f1a0 0004 	sub.w	r0, r0, #4
 800e6a8:	e7f6      	b.n	800e698 <StoreNetwork::~StoreNetwork()>
	...

0800e6ac <StoreNetwork::Copy(TNetworkParams*)>:
 800e6ac:	b507      	push	{r0, r1, r2, lr}
 800e6ae:	460a      	mov	r2, r1
 800e6b0:	2100      	movs	r1, #0
 800e6b2:	4804      	ldr	r0, [pc, #16]	; (800e6c4 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800e6b4:	9100      	str	r1, [sp, #0]
 800e6b6:	235e      	movs	r3, #94	; 0x5e
 800e6b8:	6800      	ldr	r0, [r0, #0]
 800e6ba:	f7ff fe6d 	bl	800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e6be:	b003      	add	sp, #12
 800e6c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e6c4:	20002988 	andcs	r2, r0, r8, lsl #19

0800e6c8 <StoreNetwork::StoreNetwork()>:
 800e6c8:	4a03      	ldr	r2, [pc, #12]	; (800e6d8 <StoreNetwork::StoreNetwork()+0x10>)
 800e6ca:	6002      	str	r2, [r0, #0]
 800e6cc:	322c      	adds	r2, #44	; 0x2c
 800e6ce:	6042      	str	r2, [r0, #4]
 800e6d0:	4a02      	ldr	r2, [pc, #8]	; (800e6dc <StoreNetwork::StoreNetwork()+0x14>)
 800e6d2:	6010      	str	r0, [r2, #0]
 800e6d4:	4770      	bx	lr
 800e6d6:	bf00      	nop
 800e6d8:	080159d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, fp, ip, lr}
 800e6dc:	20002998 	mulcs	r0, r8, r9

0800e6e0 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e6e0:	4770      	bx	lr
	...

0800e6e4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800e6e4:	2300      	movs	r3, #0
 800e6e6:	b507      	push	{r0, r1, r2, lr}
 800e6e8:	4805      	ldr	r0, [pc, #20]	; (800e700 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800e6ea:	9300      	str	r3, [sp, #0]
 800e6ec:	460a      	mov	r2, r1
 800e6ee:	2320      	movs	r3, #32
 800e6f0:	210c      	movs	r1, #12
 800e6f2:	6800      	ldr	r0, [r0, #0]
 800e6f4:	f7ff fe50 	bl	800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e6f8:	b003      	add	sp, #12
 800e6fa:	f85d fb04 	ldr.w	pc, [sp], #4
 800e6fe:	bf00      	nop
 800e700:	20002988 	andcs	r2, r0, r8, lsl #19

0800e704 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800e704:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e706:	2200      	movs	r2, #0
 800e708:	460b      	mov	r3, r1
 800e70a:	2120      	movs	r1, #32
 800e70c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e710:	4804      	ldr	r0, [pc, #16]	; (800e724 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800e712:	9100      	str	r1, [sp, #0]
 800e714:	6800      	ldr	r0, [r0, #0]
 800e716:	210c      	movs	r1, #12
 800e718:	f7ff fdfe 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e71c:	b005      	add	sp, #20
 800e71e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e722:	bf00      	nop
 800e724:	20002988 	andcs	r2, r0, r8, lsl #19

0800e728 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e728:	b510      	push	{r4, lr}
 800e72a:	4604      	mov	r4, r0
 800e72c:	f003 fc92 	bl	8012054 <operator delete(void*)>
 800e730:	4620      	mov	r0, r4
 800e732:	bd10      	pop	{r4, pc}

0800e734 <StoreRemoteConfig::StoreRemoteConfig()>:
 800e734:	4a02      	ldr	r2, [pc, #8]	; (800e740 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800e736:	6002      	str	r2, [r0, #0]
 800e738:	4a02      	ldr	r2, [pc, #8]	; (800e744 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800e73a:	6010      	str	r0, [r2, #0]
 800e73c:	4770      	bx	lr
 800e73e:	bf00      	nop
 800e740:	08015a24 	stmdaeq	r1, {r2, r5, r9, fp, ip, lr}
 800e744:	2000299c 	mulcs	r0, ip, r9

0800e748 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e748:	4770      	bx	lr

0800e74a <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e74a:	3804      	subs	r0, #4
 800e74c:	4770      	bx	lr
	...

0800e750 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800e750:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e752:	2200      	movs	r2, #0
 800e754:	460b      	mov	r3, r1
 800e756:	2127      	movs	r1, #39	; 0x27
 800e758:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e75c:	4804      	ldr	r0, [pc, #16]	; (800e770 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800e75e:	9100      	str	r1, [sp, #0]
 800e760:	6800      	ldr	r0, [r0, #0]
 800e762:	2103      	movs	r1, #3
 800e764:	f7ff fdd8 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e768:	b005      	add	sp, #20
 800e76a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e76e:	bf00      	nop
 800e770:	20002988 	andcs	r2, r0, r8, lsl #19

0800e774 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800e774:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e776:	2304      	movs	r3, #4
 800e778:	2200      	movs	r2, #0
 800e77a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e77e:	2302      	movs	r3, #2
 800e780:	4806      	ldr	r0, [pc, #24]	; (800e79c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800e782:	9300      	str	r3, [sp, #0]
 800e784:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e788:	2207      	movs	r2, #7
 800e78a:	2103      	movs	r1, #3
 800e78c:	6800      	ldr	r0, [r0, #0]
 800e78e:	f10d 0316 	add.w	r3, sp, #22
 800e792:	f7ff fdc1 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e796:	b007      	add	sp, #28
 800e798:	f85d fb04 	ldr.w	pc, [sp], #4
 800e79c:	20002988 	andcs	r2, r0, r8, lsl #19

0800e7a0 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800e7a0:	f1a0 0004 	sub.w	r0, r0, #4
 800e7a4:	e7e6      	b.n	800e774 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800e7a6:	bf00      	nop

0800e7a8 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800e7a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7aa:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800e7ae:	2200      	movs	r2, #0
 800e7b0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e7b4:	2301      	movs	r3, #1
 800e7b6:	4807      	ldr	r0, [pc, #28]	; (800e7d4 <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800e7b8:	9300      	str	r3, [sp, #0]
 800e7ba:	f88d 1017 	strb.w	r1, [sp, #23]
 800e7be:	2226      	movs	r2, #38	; 0x26
 800e7c0:	2103      	movs	r1, #3
 800e7c2:	6800      	ldr	r0, [r0, #0]
 800e7c4:	f10d 0317 	add.w	r3, sp, #23
 800e7c8:	f7ff fda6 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e7cc:	b007      	add	sp, #28
 800e7ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7d2:	bf00      	nop
 800e7d4:	20002988 	andcs	r2, r0, r8, lsl #19

0800e7d8 <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800e7d8:	f1a0 0004 	sub.w	r0, r0, #4
 800e7dc:	e7e4      	b.n	800e7a8 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800e7de:	bf00      	nop

0800e7e0 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800e7e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7e2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e7e6:	2200      	movs	r2, #0
 800e7e8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e7ec:	2301      	movs	r3, #1
 800e7ee:	4807      	ldr	r0, [pc, #28]	; (800e80c <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800e7f0:	9300      	str	r3, [sp, #0]
 800e7f2:	f88d 1017 	strb.w	r1, [sp, #23]
 800e7f6:	2213      	movs	r2, #19
 800e7f8:	2103      	movs	r1, #3
 800e7fa:	6800      	ldr	r0, [r0, #0]
 800e7fc:	f10d 0317 	add.w	r3, sp, #23
 800e800:	f7ff fd8a 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e804:	b007      	add	sp, #28
 800e806:	f85d fb04 	ldr.w	pc, [sp], #4
 800e80a:	bf00      	nop
 800e80c:	20002988 	andcs	r2, r0, r8, lsl #19

0800e810 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800e810:	f1a0 0004 	sub.w	r0, r0, #4
 800e814:	e7e4      	b.n	800e7e0 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800e816:	bf00      	nop

0800e818 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800e818:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e81a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e81e:	2200      	movs	r2, #0
 800e820:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e824:	2302      	movs	r3, #2
 800e826:	4807      	ldr	r0, [pc, #28]	; (800e844 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800e828:	9300      	str	r3, [sp, #0]
 800e82a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e82e:	2211      	movs	r2, #17
 800e830:	2103      	movs	r1, #3
 800e832:	6800      	ldr	r0, [r0, #0]
 800e834:	f10d 0316 	add.w	r3, sp, #22
 800e838:	f7ff fd6e 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e83c:	b007      	add	sp, #28
 800e83e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e842:	bf00      	nop
 800e844:	20002988 	andcs	r2, r0, r8, lsl #19

0800e848 <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800e848:	f1a0 0004 	sub.w	r0, r0, #4
 800e84c:	e7e4      	b.n	800e818 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800e84e:	bf00      	nop

0800e850 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800e850:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e852:	2302      	movs	r3, #2
 800e854:	2200      	movs	r2, #0
 800e856:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e85a:	4807      	ldr	r0, [pc, #28]	; (800e878 <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800e85c:	9300      	str	r3, [sp, #0]
 800e85e:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e862:	2205      	movs	r2, #5
 800e864:	2103      	movs	r1, #3
 800e866:	6800      	ldr	r0, [r0, #0]
 800e868:	f10d 0316 	add.w	r3, sp, #22
 800e86c:	f7ff fd54 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e870:	b007      	add	sp, #28
 800e872:	f85d fb04 	ldr.w	pc, [sp], #4
 800e876:	bf00      	nop
 800e878:	20002988 	andcs	r2, r0, r8, lsl #19

0800e87c <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800e87c:	f1a0 0004 	sub.w	r0, r0, #4
 800e880:	e7e6      	b.n	800e850 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800e882:	bf00      	nop

0800e884 <StoreWS28xxDmx::SaveType(unsigned char)>:
 800e884:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e886:	2301      	movs	r3, #1
 800e888:	2200      	movs	r2, #0
 800e88a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e88e:	4807      	ldr	r0, [pc, #28]	; (800e8ac <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800e890:	9300      	str	r3, [sp, #0]
 800e892:	f88d 1017 	strb.w	r1, [sp, #23]
 800e896:	2204      	movs	r2, #4
 800e898:	2103      	movs	r1, #3
 800e89a:	6800      	ldr	r0, [r0, #0]
 800e89c:	f10d 0317 	add.w	r3, sp, #23
 800e8a0:	f7ff fd3a 	bl	800e318 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8a4:	b007      	add	sp, #28
 800e8a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8aa:	bf00      	nop
 800e8ac:	20002988 	andcs	r2, r0, r8, lsl #19

0800e8b0 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800e8b0:	f1a0 0004 	sub.w	r0, r0, #4
 800e8b4:	e7e6      	b.n	800e884 <StoreWS28xxDmx::SaveType(unsigned char)>
 800e8b6:	bf00      	nop

0800e8b8 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e8b8:	b510      	push	{r4, lr}
 800e8ba:	4604      	mov	r4, r0
 800e8bc:	f003 fbca 	bl	8012054 <operator delete(void*)>
 800e8c0:	4620      	mov	r0, r4
 800e8c2:	bd10      	pop	{r4, pc}

0800e8c4 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e8c4:	f1a0 0004 	sub.w	r0, r0, #4
 800e8c8:	e7f6      	b.n	800e8b8 <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800e8cc <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800e8cc:	2300      	movs	r3, #0
 800e8ce:	b507      	push	{r0, r1, r2, lr}
 800e8d0:	4805      	ldr	r0, [pc, #20]	; (800e8e8 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800e8d2:	9300      	str	r3, [sp, #0]
 800e8d4:	460a      	mov	r2, r1
 800e8d6:	2327      	movs	r3, #39	; 0x27
 800e8d8:	2103      	movs	r1, #3
 800e8da:	6800      	ldr	r0, [r0, #0]
 800e8dc:	f7ff fd5c 	bl	800e398 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e8e0:	b003      	add	sp, #12
 800e8e2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8e6:	bf00      	nop
 800e8e8:	20002988 	andcs	r2, r0, r8, lsl #19

0800e8ec <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800e8ec:	4a03      	ldr	r2, [pc, #12]	; (800e8fc <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800e8ee:	6002      	str	r2, [r0, #0]
 800e8f0:	3230      	adds	r2, #48	; 0x30
 800e8f2:	6042      	str	r2, [r0, #4]
 800e8f4:	4a02      	ldr	r2, [pc, #8]	; (800e900 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800e8f6:	6010      	str	r0, [r2, #0]
 800e8f8:	4770      	bx	lr
 800e8fa:	bf00      	nop
 800e8fc:	08015a3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, fp, ip, lr}
 800e900:	200029a0 	andcs	r2, r0, r0, lsr #19

0800e904 <FlashRom::FlashRom()>:
 800e904:	4b07      	ldr	r3, [pc, #28]	; (800e924 <FlashRom::FlashRom()+0x20>)
 800e906:	b510      	push	{r4, lr}
 800e908:	6018      	str	r0, [r3, #0]
 800e90a:	2301      	movs	r3, #1
 800e90c:	4604      	mov	r4, r0
 800e90e:	7003      	strb	r3, [r0, #0]
 800e910:	4b05      	ldr	r3, [pc, #20]	; (800e928 <FlashRom::FlashRom()+0x24>)
 800e912:	4906      	ldr	r1, [pc, #24]	; (800e92c <FlashRom::FlashRom()+0x28>)
 800e914:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e918:	4805      	ldr	r0, [pc, #20]	; (800e930 <FlashRom::FlashRom()+0x2c>)
 800e91a:	029a      	lsls	r2, r3, #10
 800e91c:	f7fa fdfc 	bl	8009518 <printf>
 800e920:	4620      	mov	r0, r4
 800e922:	bd10      	pop	{r4, pc}
 800e924:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e928:	1ffff700 	svcne	0x00fff700
 800e92c:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 800e930:	08015a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, ip, lr}

0800e934 <FlashRom::GetSize() const>:
 800e934:	4b02      	ldr	r3, [pc, #8]	; (800e940 <FlashRom::GetSize() const+0xc>)
 800e936:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800e93a:	0280      	lsls	r0, r0, #10
 800e93c:	4770      	bx	lr
 800e93e:	bf00      	nop
 800e940:	1ffff700 	svcne	0x00fff700

0800e944 <FlashRom::GetSectorSize() const>:
 800e944:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800e948:	4770      	bx	lr

0800e94a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800e94a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e94e:	441a      	add	r2, r3
 800e950:	4293      	cmp	r3, r2
 800e952:	d004      	beq.n	800e95e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800e954:	f851 0b04 	ldr.w	r0, [r1], #4
 800e958:	f843 0b04 	str.w	r0, [r3], #4
 800e95c:	e7f8      	b.n	800e950 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800e95e:	2200      	movs	r2, #0
 800e960:	9b00      	ldr	r3, [sp, #0]
 800e962:	2001      	movs	r0, #1
 800e964:	601a      	str	r2, [r3, #0]
 800e966:	4770      	bx	lr

0800e968 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800e968:	2000      	movs	r0, #0
 800e96a:	b538      	push	{r3, r4, r5, lr}
 800e96c:	4c47      	ldr	r4, [pc, #284]	; (800ea8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800e96e:	6018      	str	r0, [r3, #0]
 800e970:	6823      	ldr	r3, [r4, #0]
 800e972:	2b04      	cmp	r3, #4
 800e974:	f200 8082 	bhi.w	800ea7c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e978:	e8df f003 	tbb	[pc, r3]
 800e97c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800e980:	4b430080 	blmi	90ceb88 <__exidx_end+0x10b86fc>
 800e984:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e988:	6019      	str	r1, [r3, #0]
 800e98a:	4b42      	ldr	r3, [pc, #264]	; (800ea94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e98c:	601a      	str	r2, [r3, #0]
 800e98e:	4b42      	ldr	r3, [pc, #264]	; (800ea98 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800e990:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e994:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e998:	4b40      	ldr	r3, [pc, #256]	; (800ea9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e99a:	d807      	bhi.n	800e9ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800e99c:	2201      	movs	r2, #1
 800e99e:	701a      	strb	r2, [r3, #0]
 800e9a0:	f003 fe5e 	bl	8012660 <fmc_bank0_unlock>
 800e9a4:	2301      	movs	r3, #1
 800e9a6:	6023      	str	r3, [r4, #0]
 800e9a8:	2000      	movs	r0, #0
 800e9aa:	e026      	b.n	800e9fa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e9ac:	4a3c      	ldr	r2, [pc, #240]	; (800eaa0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800e9ae:	4291      	cmp	r1, r2
 800e9b0:	d3f4      	bcc.n	800e99c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800e9b2:	2200      	movs	r2, #0
 800e9b4:	701a      	strb	r2, [r3, #0]
 800e9b6:	f003 fe61 	bl	801267c <fmc_bank1_unlock>
 800e9ba:	e7f3      	b.n	800e9a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e9bc:	4d37      	ldr	r5, [pc, #220]	; (800ea9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e9be:	782b      	ldrb	r3, [r5, #0]
 800e9c0:	b15b      	cbz	r3, 800e9da <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800e9c2:	f003 fe79 	bl	80126b8 <fmc_bank0_state_get>
 800e9c6:	2801      	cmp	r0, #1
 800e9c8:	d0ee      	beq.n	800e9a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800e9ca:	7829      	ldrb	r1, [r5, #0]
 800e9cc:	4b35      	ldr	r3, [pc, #212]	; (800eaa4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e9ce:	b939      	cbnz	r1, 800e9e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800e9d0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e9d2:	f022 0202 	bic.w	r2, r2, #2
 800e9d6:	651a      	str	r2, [r3, #80]	; 0x50
 800e9d8:	e006      	b.n	800e9e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800e9da:	f003 fe81 	bl	80126e0 <fmc_bank1_state_get>
 800e9de:	e7f2      	b.n	800e9c6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800e9e0:	691a      	ldr	r2, [r3, #16]
 800e9e2:	f022 0202 	bic.w	r2, r2, #2
 800e9e6:	611a      	str	r2, [r3, #16]
 800e9e8:	4b2a      	ldr	r3, [pc, #168]	; (800ea94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e9ea:	681b      	ldr	r3, [r3, #0]
 800e9ec:	b94b      	cbnz	r3, 800ea02 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800e9ee:	b129      	cbz	r1, 800e9fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800e9f0:	f003 fe52 	bl	8012698 <fmc_bank0_lock>
 800e9f4:	2300      	movs	r3, #0
 800e9f6:	2001      	movs	r0, #1
 800e9f8:	6023      	str	r3, [r4, #0]
 800e9fa:	bd38      	pop	{r3, r4, r5, pc}
 800e9fc:	f003 fe54 	bl	80126a8 <fmc_bank1_lock>
 800ea00:	e7f8      	b.n	800e9f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800ea02:	2302      	movs	r3, #2
 800ea04:	e7cf      	b.n	800e9a6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800ea06:	4923      	ldr	r1, [pc, #140]	; (800ea94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ea08:	680b      	ldr	r3, [r1, #0]
 800ea0a:	2b00      	cmp	r3, #0
 800ea0c:	d0ca      	beq.n	800e9a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ea0e:	4b23      	ldr	r3, [pc, #140]	; (800ea9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ea10:	4a1f      	ldr	r2, [pc, #124]	; (800ea90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800ea12:	7818      	ldrb	r0, [r3, #0]
 800ea14:	4b23      	ldr	r3, [pc, #140]	; (800eaa4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ea16:	b190      	cbz	r0, 800ea3e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800ea18:	6918      	ldr	r0, [r3, #16]
 800ea1a:	f040 0002 	orr.w	r0, r0, #2
 800ea1e:	6118      	str	r0, [r3, #16]
 800ea20:	6810      	ldr	r0, [r2, #0]
 800ea22:	6158      	str	r0, [r3, #20]
 800ea24:	6918      	ldr	r0, [r3, #16]
 800ea26:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ea2a:	6118      	str	r0, [r3, #16]
 800ea2c:	680b      	ldr	r3, [r1, #0]
 800ea2e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ea32:	600b      	str	r3, [r1, #0]
 800ea34:	6813      	ldr	r3, [r2, #0]
 800ea36:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ea3a:	6013      	str	r3, [r2, #0]
 800ea3c:	e7b2      	b.n	800e9a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ea3e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ea40:	f040 0002 	orr.w	r0, r0, #2
 800ea44:	6518      	str	r0, [r3, #80]	; 0x50
 800ea46:	6810      	ldr	r0, [r2, #0]
 800ea48:	6558      	str	r0, [r3, #84]	; 0x54
 800ea4a:	69dd      	ldr	r5, [r3, #28]
 800ea4c:	07ad      	lsls	r5, r5, #30
 800ea4e:	bf48      	it	mi
 800ea50:	6158      	strmi	r0, [r3, #20]
 800ea52:	4814      	ldr	r0, [pc, #80]	; (800eaa4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ea54:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ea56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ea5a:	6503      	str	r3, [r0, #80]	; 0x50
 800ea5c:	680b      	ldr	r3, [r1, #0]
 800ea5e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ea62:	600b      	str	r3, [r1, #0]
 800ea64:	6813      	ldr	r3, [r2, #0]
 800ea66:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ea6a:	e7e6      	b.n	800ea3a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ea6c:	4b0b      	ldr	r3, [pc, #44]	; (800ea9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ea6e:	781a      	ldrb	r2, [r3, #0]
 800ea70:	4b0c      	ldr	r3, [pc, #48]	; (800eaa4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ea72:	b132      	cbz	r2, 800ea82 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ea74:	691a      	ldr	r2, [r3, #16]
 800ea76:	f022 0201 	bic.w	r2, r2, #1
 800ea7a:	611a      	str	r2, [r3, #16]
 800ea7c:	2000      	movs	r0, #0
 800ea7e:	6020      	str	r0, [r4, #0]
 800ea80:	e7bb      	b.n	800e9fa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ea82:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ea84:	f022 0201 	bic.w	r2, r2, #1
 800ea88:	651a      	str	r2, [r3, #80]	; 0x50
 800ea8a:	e7f7      	b.n	800ea7c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ea8c:	200029ac 	andcs	r2, r0, ip, lsr #19
 800ea90:	200029b0 			; <UNDEFINED> instruction: 0x200029b0
 800ea94:	200029bc 			; <UNDEFINED> instruction: 0x200029bc
 800ea98:	1ffff700 	svcne	0x00fff700
 800ea9c:	200029b8 			; <UNDEFINED> instruction: 0x200029b8
 800eaa0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800eaa4:	40022000 	andmi	r2, r2, r0

0800eaa8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800eaa8:	b570      	push	{r4, r5, r6, lr}
 800eaaa:	2400      	movs	r4, #0
 800eaac:	9804      	ldr	r0, [sp, #16]
 800eaae:	6004      	str	r4, [r0, #0]
 800eab0:	4c48      	ldr	r4, [pc, #288]	; (800ebd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800eab2:	6820      	ldr	r0, [r4, #0]
 800eab4:	2804      	cmp	r0, #4
 800eab6:	d848      	bhi.n	800eb4a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800eab8:	e8df f000 	tbb	[pc, r0]
 800eabc:	22847c03 	addcs	r7, r4, #768	; 0x300
 800eac0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800eac4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800eac8:	6001      	str	r1, [r0, #0]
 800eaca:	4844      	ldr	r0, [pc, #272]	; (800ebdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eacc:	6003      	str	r3, [r0, #0]
 800eace:	4b44      	ldr	r3, [pc, #272]	; (800ebe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ead0:	601a      	str	r2, [r3, #0]
 800ead2:	4b44      	ldr	r3, [pc, #272]	; (800ebe4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800ead4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ead8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800eadc:	4b42      	ldr	r3, [pc, #264]	; (800ebe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eade:	d807      	bhi.n	800eaf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800eae0:	2201      	movs	r2, #1
 800eae2:	701a      	strb	r2, [r3, #0]
 800eae4:	f003 fdbc 	bl	8012660 <fmc_bank0_unlock>
 800eae8:	2303      	movs	r3, #3
 800eaea:	6023      	str	r3, [r4, #0]
 800eaec:	2000      	movs	r0, #0
 800eaee:	e026      	b.n	800eb3e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800eaf0:	4a3e      	ldr	r2, [pc, #248]	; (800ebec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800eaf2:	4291      	cmp	r1, r2
 800eaf4:	d3f4      	bcc.n	800eae0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800eaf6:	2200      	movs	r2, #0
 800eaf8:	701a      	strb	r2, [r3, #0]
 800eafa:	f003 fdbf 	bl	801267c <fmc_bank1_unlock>
 800eafe:	e7f3      	b.n	800eae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eb00:	4d39      	ldr	r5, [pc, #228]	; (800ebe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eb02:	782b      	ldrb	r3, [r5, #0]
 800eb04:	b15b      	cbz	r3, 800eb1e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800eb06:	f003 fdd7 	bl	80126b8 <fmc_bank0_state_get>
 800eb0a:	2801      	cmp	r0, #1
 800eb0c:	d0ee      	beq.n	800eaec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800eb0e:	7829      	ldrb	r1, [r5, #0]
 800eb10:	4b37      	ldr	r3, [pc, #220]	; (800ebf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eb12:	b939      	cbnz	r1, 800eb24 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800eb14:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eb16:	f022 0201 	bic.w	r2, r2, #1
 800eb1a:	651a      	str	r2, [r3, #80]	; 0x50
 800eb1c:	e006      	b.n	800eb2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800eb1e:	f003 fddf 	bl	80126e0 <fmc_bank1_state_get>
 800eb22:	e7f2      	b.n	800eb0a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800eb24:	691a      	ldr	r2, [r3, #16]
 800eb26:	f022 0201 	bic.w	r2, r2, #1
 800eb2a:	611a      	str	r2, [r3, #16]
 800eb2c:	4b2c      	ldr	r3, [pc, #176]	; (800ebe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	b94b      	cbnz	r3, 800eb46 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800eb32:	b129      	cbz	r1, 800eb40 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800eb34:	f003 fdb0 	bl	8012698 <fmc_bank0_lock>
 800eb38:	2300      	movs	r3, #0
 800eb3a:	2001      	movs	r0, #1
 800eb3c:	6023      	str	r3, [r4, #0]
 800eb3e:	bd70      	pop	{r4, r5, r6, pc}
 800eb40:	f003 fdb2 	bl	80126a8 <fmc_bank1_lock>
 800eb44:	e7f8      	b.n	800eb38 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800eb46:	2304      	movs	r3, #4
 800eb48:	e7cf      	b.n	800eaea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800eb4a:	4a25      	ldr	r2, [pc, #148]	; (800ebe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800eb4c:	6813      	ldr	r3, [r2, #0]
 800eb4e:	2b03      	cmp	r3, #3
 800eb50:	d91a      	bls.n	800eb88 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800eb52:	4b25      	ldr	r3, [pc, #148]	; (800ebe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eb54:	7819      	ldrb	r1, [r3, #0]
 800eb56:	4b26      	ldr	r3, [pc, #152]	; (800ebf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eb58:	b189      	cbz	r1, 800eb7e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800eb5a:	6919      	ldr	r1, [r3, #16]
 800eb5c:	f041 0101 	orr.w	r1, r1, #1
 800eb60:	6119      	str	r1, [r3, #16]
 800eb62:	4d1e      	ldr	r5, [pc, #120]	; (800ebdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eb64:	481c      	ldr	r0, [pc, #112]	; (800ebd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800eb66:	6829      	ldr	r1, [r5, #0]
 800eb68:	6803      	ldr	r3, [r0, #0]
 800eb6a:	f851 6b04 	ldr.w	r6, [r1], #4
 800eb6e:	f843 6b04 	str.w	r6, [r3], #4
 800eb72:	6003      	str	r3, [r0, #0]
 800eb74:	6813      	ldr	r3, [r2, #0]
 800eb76:	6029      	str	r1, [r5, #0]
 800eb78:	3b04      	subs	r3, #4
 800eb7a:	6013      	str	r3, [r2, #0]
 800eb7c:	e7b4      	b.n	800eae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eb7e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800eb80:	f041 0101 	orr.w	r1, r1, #1
 800eb84:	6519      	str	r1, [r3, #80]	; 0x50
 800eb86:	e7ec      	b.n	800eb62 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800eb88:	2b00      	cmp	r3, #0
 800eb8a:	d0ad      	beq.n	800eae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eb8c:	4b16      	ldr	r3, [pc, #88]	; (800ebe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eb8e:	781a      	ldrb	r2, [r3, #0]
 800eb90:	4b17      	ldr	r3, [pc, #92]	; (800ebf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eb92:	b152      	cbz	r2, 800ebaa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800eb94:	691a      	ldr	r2, [r3, #16]
 800eb96:	f042 0201 	orr.w	r2, r2, #1
 800eb9a:	611a      	str	r2, [r3, #16]
 800eb9c:	4a0f      	ldr	r2, [pc, #60]	; (800ebdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eb9e:	4b0e      	ldr	r3, [pc, #56]	; (800ebd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800eba0:	6812      	ldr	r2, [r2, #0]
 800eba2:	681b      	ldr	r3, [r3, #0]
 800eba4:	6812      	ldr	r2, [r2, #0]
 800eba6:	601a      	str	r2, [r3, #0]
 800eba8:	e79e      	b.n	800eae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ebaa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ebac:	f042 0201 	orr.w	r2, r2, #1
 800ebb0:	651a      	str	r2, [r3, #80]	; 0x50
 800ebb2:	e7f3      	b.n	800eb9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800ebb4:	4b0c      	ldr	r3, [pc, #48]	; (800ebe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ebb6:	781a      	ldrb	r2, [r3, #0]
 800ebb8:	4b0d      	ldr	r3, [pc, #52]	; (800ebf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ebba:	b132      	cbz	r2, 800ebca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800ebbc:	691a      	ldr	r2, [r3, #16]
 800ebbe:	f022 0202 	bic.w	r2, r2, #2
 800ebc2:	611a      	str	r2, [r3, #16]
 800ebc4:	2000      	movs	r0, #0
 800ebc6:	6020      	str	r0, [r4, #0]
 800ebc8:	e7b9      	b.n	800eb3e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ebca:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ebcc:	f022 0202 	bic.w	r2, r2, #2
 800ebd0:	651a      	str	r2, [r3, #80]	; 0x50
 800ebd2:	e7f7      	b.n	800ebc4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800ebd4:	200029ac 	andcs	r2, r0, ip, lsr #19
 800ebd8:	200029a8 	andcs	r2, r0, r8, lsr #19
 800ebdc:	200029b4 			; <UNDEFINED> instruction: 0x200029b4
 800ebe0:	200029bc 			; <UNDEFINED> instruction: 0x200029bc
 800ebe4:	1ffff700 	svcne	0x00fff700
 800ebe8:	200029b8 			; <UNDEFINED> instruction: 0x200029b8
 800ebec:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ebf0:	40022000 	andmi	r2, r2, r0

0800ebf4 <net_timers_run>:
 800ebf4:	4b05      	ldr	r3, [pc, #20]	; (800ec0c <net_timers_run+0x18>)
 800ebf6:	4a06      	ldr	r2, [pc, #24]	; (800ec10 <net_timers_run+0x1c>)
 800ebf8:	681b      	ldr	r3, [r3, #0]
 800ebfa:	6811      	ldr	r1, [r2, #0]
 800ebfc:	4299      	cmp	r1, r3
 800ebfe:	d803      	bhi.n	800ec08 <net_timers_run+0x14>
 800ec00:	3364      	adds	r3, #100	; 0x64
 800ec02:	6013      	str	r3, [r2, #0]
 800ec04:	f001 be9a 	b.w	801093c <igmp_timer>
 800ec08:	4770      	bx	lr
 800ec0a:	bf00      	nop
 800ec0c:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800ec10:	200029d8 	ldrdcs	r2, [r0], -r8

0800ec14 <rfc3927>:
 800ec14:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec18:	4605      	mov	r5, r0
 800ec1a:	26ff      	movs	r6, #255	; 0xff
 800ec1c:	4b18      	ldr	r3, [pc, #96]	; (800ec80 <rfc3927+0x6c>)
 800ec1e:	4f19      	ldr	r7, [pc, #100]	; (800ec84 <rfc3927+0x70>)
 800ec20:	791a      	ldrb	r2, [r3, #4]
 800ec22:	78dc      	ldrb	r4, [r3, #3]
 800ec24:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ec88 <rfc3927+0x74>
 800ec28:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800ec2c:	f8d7 9000 	ldr.w	r9, [r7]
 800ec30:	f8df b058 	ldr.w	fp, [pc, #88]	; 800ec8c <rfc3927+0x78>
 800ec34:	f8df a058 	ldr.w	sl, [pc, #88]	; 800ec90 <rfc3927+0x7c>
 800ec38:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800ec3c:	4659      	mov	r1, fp
 800ec3e:	4620      	mov	r0, r4
 800ec40:	f001 fbca 	bl	80103d8 <arp_cache_lookup>
 800ec44:	b938      	cbnz	r0, 800ec56 <rfc3927+0x42>
 800ec46:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ec4a:	2001      	movs	r0, #1
 800ec4c:	602c      	str	r4, [r5, #0]
 800ec4e:	60ac      	str	r4, [r5, #8]
 800ec50:	606b      	str	r3, [r5, #4]
 800ec52:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec56:	ba24      	rev	r4, r4
 800ec58:	3401      	adds	r4, #1
 800ec5a:	3e01      	subs	r6, #1
 800ec5c:	ba24      	rev	r4, r4
 800ec5e:	b2b6      	uxth	r6, r6
 800ec60:	4554      	cmp	r4, sl
 800ec62:	bf08      	it	eq
 800ec64:	4644      	moveq	r4, r8
 800ec66:	b12e      	cbz	r6, 800ec74 <rfc3927+0x60>
 800ec68:	683b      	ldr	r3, [r7, #0]
 800ec6a:	eba3 0309 	sub.w	r3, r3, r9
 800ec6e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ec72:	d3e3      	bcc.n	800ec3c <rfc3927+0x28>
 800ec74:	2000      	movs	r0, #0
 800ec76:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800ec7a:	6028      	str	r0, [r5, #0]
 800ec7c:	e7e9      	b.n	800ec52 <rfc3927+0x3e>
 800ec7e:	bf00      	nop
 800ec80:	200029dc 	ldrdcs	r2, [r0], -ip
 800ec84:	2000a9c4 	andcs	sl, r0, r4, asr #19
 800ec88:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800ec8c:	200029e4 	andcs	r2, r0, r4, ror #19
 800ec90:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800ec94 <_init_tcb>:
 800ec94:	b510      	push	{r4, lr}
 800ec96:	4603      	mov	r3, r0
 800ec98:	2400      	movs	r4, #0
 800ec9a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800ec9e:	4293      	cmp	r3, r2
 800eca0:	d10d      	bne.n	800ecbe <_init_tcb+0x2a>
 800eca2:	4b08      	ldr	r3, [pc, #32]	; (800ecc4 <_init_tcb+0x30>)
 800eca4:	f640 3268 	movw	r2, #2920	; 0xb68
 800eca8:	681b      	ldr	r3, [r3, #0]
 800ecaa:	8702      	strh	r2, [r0, #56]	; 0x38
 800ecac:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ecb0:	6283      	str	r3, [r0, #40]	; 0x28
 800ecb2:	6243      	str	r3, [r0, #36]	; 0x24
 800ecb4:	2301      	movs	r3, #1
 800ecb6:	8001      	strh	r1, [r0, #0]
 800ecb8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ecbc:	bd10      	pop	{r4, pc}
 800ecbe:	f803 4b01 	strb.w	r4, [r3], #1
 800ecc2:	e7ec      	b.n	800ec9e <_init_tcb+0xa>
 800ecc4:	2000a9c4 	andcs	sl, r0, r4, asr #19

0800ecc8 <memcpy.isra.0>:
 800ecc8:	3801      	subs	r0, #1
 800ecca:	440a      	add	r2, r1
 800eccc:	4291      	cmp	r1, r2
 800ecce:	d100      	bne.n	800ecd2 <memcpy.isra.0+0xa>
 800ecd0:	4770      	bx	lr
 800ecd2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ecd6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ecda:	e7f7      	b.n	800eccc <memcpy.isra.0+0x4>

0800ecdc <_bswap32>:
 800ecdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ecde:	2204      	movs	r2, #4
 800ece0:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800ece4:	4629      	mov	r1, r5
 800ece6:	4604      	mov	r4, r0
 800ece8:	eb0d 0002 	add.w	r0, sp, r2
 800ecec:	f7ff ffec 	bl	800ecc8 <memcpy.isra.0>
 800ecf0:	2204      	movs	r2, #4
 800ecf2:	9b01      	ldr	r3, [sp, #4]
 800ecf4:	eb0d 0102 	add.w	r1, sp, r2
 800ecf8:	ba1b      	rev	r3, r3
 800ecfa:	4628      	mov	r0, r5
 800ecfc:	9301      	str	r3, [sp, #4]
 800ecfe:	f7ff ffe3 	bl	800ecc8 <memcpy.isra.0>
 800ed02:	2204      	movs	r2, #4
 800ed04:	3426      	adds	r4, #38	; 0x26
 800ed06:	eb0d 0002 	add.w	r0, sp, r2
 800ed0a:	4621      	mov	r1, r4
 800ed0c:	f7ff ffdc 	bl	800ecc8 <memcpy.isra.0>
 800ed10:	2204      	movs	r2, #4
 800ed12:	9b01      	ldr	r3, [sp, #4]
 800ed14:	4620      	mov	r0, r4
 800ed16:	ba1b      	rev	r3, r3
 800ed18:	eb0d 0102 	add.w	r1, sp, r2
 800ed1c:	9301      	str	r3, [sp, #4]
 800ed1e:	f7ff ffd3 	bl	800ecc8 <memcpy.isra.0>
 800ed22:	b003      	add	sp, #12
 800ed24:	bd30      	pop	{r4, r5, pc}
	...

0800ed28 <_tcp_send_package>:
 800ed28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ed2c:	7a0b      	ldrb	r3, [r1, #8]
 800ed2e:	4605      	mov	r5, r0
 800ed30:	f013 0f02 	tst.w	r3, #2
 800ed34:	bf0c      	ite	eq
 800ed36:	f04f 0905 	moveq.w	r9, #5
 800ed3a:	f04f 0906 	movne.w	r9, #6
 800ed3e:	f04f 0800 	mov.w	r8, #0
 800ed42:	4c4b      	ldr	r4, [pc, #300]	; (800ee70 <_tcp_send_package+0x148>)
 800ed44:	460f      	mov	r7, r1
 800ed46:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800ed48:	f100 0108 	add.w	r1, r0, #8
 800ed4c:	2206      	movs	r2, #6
 800ed4e:	4620      	mov	r0, r4
 800ed50:	f7ff ffba 	bl	800ecc8 <memcpy.isra.0>
 800ed54:	4a47      	ldr	r2, [pc, #284]	; (800ee74 <_tcp_send_package+0x14c>)
 800ed56:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800ed5a:	8813      	ldrh	r3, [r2, #0]
 800ed5c:	b2b6      	uxth	r6, r6
 800ed5e:	1c59      	adds	r1, r3, #1
 800ed60:	8263      	strh	r3, [r4, #18]
 800ed62:	f105 0a04 	add.w	sl, r5, #4
 800ed66:	f106 0314 	add.w	r3, r6, #20
 800ed6a:	ba5b      	rev16	r3, r3
 800ed6c:	8011      	strh	r1, [r2, #0]
 800ed6e:	f104 001e 	add.w	r0, r4, #30
 800ed72:	2204      	movs	r2, #4
 800ed74:	4651      	mov	r1, sl
 800ed76:	8223      	strh	r3, [r4, #16]
 800ed78:	f7ff ffa6 	bl	800ecc8 <memcpy.isra.0>
 800ed7c:	2114      	movs	r1, #20
 800ed7e:	f104 000e 	add.w	r0, r4, #14
 800ed82:	f884 8018 	strb.w	r8, [r4, #24]
 800ed86:	f884 8019 	strb.w	r8, [r4, #25]
 800ed8a:	f001 fe6a 	bl	8010a62 <net_chksum>
 800ed8e:	882b      	ldrh	r3, [r5, #0]
 800ed90:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800ed94:	8463      	strh	r3, [r4, #34]	; 0x22
 800ed96:	886b      	ldrh	r3, [r5, #2]
 800ed98:	8320      	strh	r0, [r4, #24]
 800ed9a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ed9c:	683b      	ldr	r3, [r7, #0]
 800ed9e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800eda0:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800eda4:	687b      	ldr	r3, [r7, #4]
 800eda6:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800edaa:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800edae:	7a3b      	ldrb	r3, [r7, #8]
 800edb0:	8622      	strh	r2, [r4, #48]	; 0x30
 800edb2:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800edb6:	079b      	lsls	r3, r3, #30
 800edb8:	bf48      	it	mi
 800edba:	2302      	movmi	r3, #2
 800edbc:	8baa      	ldrh	r2, [r5, #28]
 800edbe:	bf44      	itt	mi
 800edc0:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800edc4:	2304      	movmi	r3, #4
 800edc6:	86a2      	strh	r2, [r4, #52]	; 0x34
 800edc8:	bf41      	itttt	mi
 800edca:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800edce:	4622      	movmi	r2, r4
 800edd0:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800edd4:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800edd8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800edda:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800edde:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800ede2:	bf58      	it	pl
 800ede4:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800ede8:	2b00      	cmp	r3, #0
 800edea:	d13f      	bne.n	800ee6c <_tcp_send_package+0x144>
 800edec:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800edee:	4820      	ldr	r0, [pc, #128]	; (800ee70 <_tcp_send_package+0x148>)
 800edf0:	ba5b      	rev16	r3, r3
 800edf2:	8463      	strh	r3, [r4, #34]	; 0x22
 800edf4:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800edf6:	ba5b      	rev16	r3, r3
 800edf8:	84a3      	strh	r3, [r4, #36]	; 0x24
 800edfa:	f7ff ff6f 	bl	800ecdc <_bswap32>
 800edfe:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ee00:	a801      	add	r0, sp, #4
 800ee02:	ba5b      	rev16	r3, r3
 800ee04:	8623      	strh	r3, [r4, #48]	; 0x30
 800ee06:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ee08:	220c      	movs	r2, #12
 800ee0a:	ba5b      	rev16	r3, r3
 800ee0c:	491a      	ldr	r1, [pc, #104]	; (800ee78 <_tcp_send_package+0x150>)
 800ee0e:	86a3      	strh	r3, [r4, #52]	; 0x34
 800ee10:	f7ff ff5a 	bl	800ecc8 <memcpy.isra.0>
 800ee14:	2204      	movs	r2, #4
 800ee16:	4919      	ldr	r1, [pc, #100]	; (800ee7c <_tcp_send_package+0x154>)
 800ee18:	4817      	ldr	r0, [pc, #92]	; (800ee78 <_tcp_send_package+0x150>)
 800ee1a:	f7ff ff55 	bl	800ecc8 <memcpy.isra.0>
 800ee1e:	2204      	movs	r2, #4
 800ee20:	4651      	mov	r1, sl
 800ee22:	4817      	ldr	r0, [pc, #92]	; (800ee80 <_tcp_send_package+0x158>)
 800ee24:	f7ff ff50 	bl	800ecc8 <memcpy.isra.0>
 800ee28:	2300      	movs	r3, #0
 800ee2a:	77a3      	strb	r3, [r4, #30]
 800ee2c:	2306      	movs	r3, #6
 800ee2e:	f106 010c 	add.w	r1, r6, #12
 800ee32:	77e3      	strb	r3, [r4, #31]
 800ee34:	4810      	ldr	r0, [pc, #64]	; (800ee78 <_tcp_send_package+0x150>)
 800ee36:	ba73      	rev16	r3, r6
 800ee38:	8423      	strh	r3, [r4, #32]
 800ee3a:	f001 fe12 	bl	8010a62 <net_chksum>
 800ee3e:	a901      	add	r1, sp, #4
 800ee40:	4605      	mov	r5, r0
 800ee42:	220c      	movs	r2, #12
 800ee44:	480c      	ldr	r0, [pc, #48]	; (800ee78 <_tcp_send_package+0x150>)
 800ee46:	f7ff ff3f 	bl	800ecc8 <memcpy.isra.0>
 800ee4a:	4809      	ldr	r0, [pc, #36]	; (800ee70 <_tcp_send_package+0x148>)
 800ee4c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800ee50:	8665      	strh	r5, [r4, #50]	; 0x32
 800ee52:	b004      	add	sp, #16
 800ee54:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee58:	f004 b8a8 	b.w	8012fac <emac_eth_send>
 800ee5c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800ee5e:	5cc9      	ldrb	r1, [r1, r3]
 800ee60:	54d1      	strb	r1, [r2, r3]
 800ee62:	3301      	adds	r3, #1
 800ee64:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800ee66:	4299      	cmp	r1, r3
 800ee68:	d8f8      	bhi.n	800ee5c <_tcp_send_package+0x134>
 800ee6a:	e7bf      	b.n	800edec <_tcp_send_package+0xc4>
 800ee6c:	2300      	movs	r3, #0
 800ee6e:	e7f9      	b.n	800ee64 <_tcp_send_package+0x13c>
 800ee70:	200035a0 	andcs	r3, r0, r0, lsr #11
 800ee74:	200029ea 	andcs	r2, r0, sl, ror #19
 800ee78:	200035b6 			; <UNDEFINED> instruction: 0x200035b6
 800ee7c:	200029c0 	andcs	r2, r0, r0, asr #19
 800ee80:	200035ba 			; <UNDEFINED> instruction: 0x200035ba

0800ee84 <_send_reset>:
 800ee84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee86:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800ee8a:	4604      	mov	r4, r0
 800ee8c:	075a      	lsls	r2, r3, #29
 800ee8e:	460e      	mov	r6, r1
 800ee90:	d421      	bmi.n	800eed6 <_send_reset+0x52>
 800ee92:	2204      	movs	r2, #4
 800ee94:	f013 0310 	ands.w	r3, r3, #16
 800ee98:	f88d 200c 	strb.w	r2, [sp, #12]
 800ee9c:	d01d      	beq.n	800eeda <_send_reset+0x56>
 800ee9e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800eea2:	4668      	mov	r0, sp
 800eea4:	f7ff ff10 	bl	800ecc8 <memcpy.isra.0>
 800eea8:	9b00      	ldr	r3, [sp, #0]
 800eeaa:	9301      	str	r3, [sp, #4]
 800eeac:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800eeb0:	4668      	mov	r0, sp
 800eeb2:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800eeb6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800eeba:	07db      	lsls	r3, r3, #31
 800eebc:	f04f 0204 	mov.w	r2, #4
 800eec0:	bf48      	it	mi
 800eec2:	3501      	addmi	r5, #1
 800eec4:	f7ff ff00 	bl	800ecc8 <memcpy.isra.0>
 800eec8:	9b00      	ldr	r3, [sp, #0]
 800eeca:	4630      	mov	r0, r6
 800eecc:	441d      	add	r5, r3
 800eece:	a901      	add	r1, sp, #4
 800eed0:	9502      	str	r5, [sp, #8]
 800eed2:	f7ff ff29 	bl	800ed28 <_tcp_send_package>
 800eed6:	b004      	add	sp, #16
 800eed8:	bd70      	pop	{r4, r5, r6, pc}
 800eeda:	9301      	str	r3, [sp, #4]
 800eedc:	2314      	movs	r3, #20
 800eede:	f88d 300c 	strb.w	r3, [sp, #12]
 800eee2:	e7e3      	b.n	800eeac <_send_reset+0x28>

0800eee4 <tcp_begin>:
 800eee4:	b508      	push	{r3, lr}
 800eee6:	4b0a      	ldr	r3, [pc, #40]	; (800ef10 <tcp_begin+0x2c>)
 800eee8:	4601      	mov	r1, r0
 800eeea:	881a      	ldrh	r2, [r3, #0]
 800eeec:	4282      	cmp	r2, r0
 800eeee:	d102      	bne.n	800eef6 <tcp_begin+0x12>
 800eef0:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800eef4:	b130      	cbz	r0, 800ef04 <tcp_begin+0x20>
 800eef6:	b12a      	cbz	r2, 800ef04 <tcp_begin+0x20>
 800eef8:	4806      	ldr	r0, [pc, #24]	; (800ef14 <tcp_begin+0x30>)
 800eefa:	f002 ff37 	bl	8011d6c <console_error>
 800eefe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ef02:	bd08      	pop	{r3, pc}
 800ef04:	4802      	ldr	r0, [pc, #8]	; (800ef10 <tcp_begin+0x2c>)
 800ef06:	8019      	strh	r1, [r3, #0]
 800ef08:	f7ff fec4 	bl	800ec94 <_init_tcb>
 800ef0c:	2000      	movs	r0, #0
 800ef0e:	e7f8      	b.n	800ef02 <tcp_begin+0x1e>
 800ef10:	2000355c 	andcs	r3, r0, ip, asr r5
 800ef14:	08015ab5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, fp, ip, lr}

0800ef18 <tcp_write>:
 800ef18:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800ef1c:	429a      	cmp	r2, r3
 800ef1e:	bf28      	it	cs
 800ef20:	461a      	movcs	r2, r3
 800ef22:	2344      	movs	r3, #68	; 0x44
 800ef24:	b530      	push	{r4, r5, lr}
 800ef26:	4c0d      	ldr	r4, [pc, #52]	; (800ef5c <tcp_write+0x44>)
 800ef28:	b085      	sub	sp, #20
 800ef2a:	fb03 4400 	mla	r4, r3, r0, r4
 800ef2e:	6963      	ldr	r3, [r4, #20]
 800ef30:	4615      	mov	r5, r2
 800ef32:	9301      	str	r3, [sp, #4]
 800ef34:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ef36:	62e1      	str	r1, [r4, #44]	; 0x2c
 800ef38:	9302      	str	r3, [sp, #8]
 800ef3a:	2318      	movs	r3, #24
 800ef3c:	8622      	strh	r2, [r4, #48]	; 0x30
 800ef3e:	4620      	mov	r0, r4
 800ef40:	a901      	add	r1, sp, #4
 800ef42:	f88d 300c 	strb.w	r3, [sp, #12]
 800ef46:	f7ff feef 	bl	800ed28 <_tcp_send_package>
 800ef4a:	2300      	movs	r3, #0
 800ef4c:	6962      	ldr	r2, [r4, #20]
 800ef4e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ef50:	442a      	add	r2, r5
 800ef52:	8623      	strh	r3, [r4, #48]	; 0x30
 800ef54:	6162      	str	r2, [r4, #20]
 800ef56:	b005      	add	sp, #20
 800ef58:	bd30      	pop	{r4, r5, pc}
 800ef5a:	bf00      	nop
 800ef5c:	2000355c 	andcs	r3, r0, ip, asr r5

0800ef60 <tcp_read>:
 800ef60:	2344      	movs	r3, #68	; 0x44
 800ef62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef64:	4c1c      	ldr	r4, [pc, #112]	; (800efd8 <tcp_read+0x78>)
 800ef66:	b085      	sub	sp, #20
 800ef68:	fb03 4400 	mla	r4, r3, r0, r4
 800ef6c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800ef70:	2b07      	cmp	r3, #7
 800ef72:	d112      	bne.n	800ef9a <tcp_read+0x3a>
 800ef74:	6963      	ldr	r3, [r4, #20]
 800ef76:	4620      	mov	r0, r4
 800ef78:	9301      	str	r3, [sp, #4]
 800ef7a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ef7c:	a901      	add	r1, sp, #4
 800ef7e:	9302      	str	r3, [sp, #8]
 800ef80:	2311      	movs	r3, #17
 800ef82:	f88d 300c 	strb.w	r3, [sp, #12]
 800ef86:	f7ff fecf 	bl	800ed28 <_tcp_send_package>
 800ef8a:	2309      	movs	r3, #9
 800ef8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ef90:	6963      	ldr	r3, [r4, #20]
 800ef92:	3301      	adds	r3, #1
 800ef94:	6163      	str	r3, [r4, #20]
 800ef96:	2000      	movs	r0, #0
 800ef98:	e01b      	b.n	800efd2 <tcp_read+0x72>
 800ef9a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800ef9e:	4358      	muls	r0, r3
 800efa0:	4a0e      	ldr	r2, [pc, #56]	; (800efdc <tcp_read+0x7c>)
 800efa2:	1817      	adds	r7, r2, r0
 800efa4:	887b      	ldrh	r3, [r7, #2]
 800efa6:	5a15      	ldrh	r5, [r2, r0]
 800efa8:	429d      	cmp	r5, r3
 800efaa:	d0f4      	beq.n	800ef96 <tcp_read+0x36>
 800efac:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800efb0:	435d      	muls	r5, r3
 800efb2:	1d06      	adds	r6, r0, #4
 800efb4:	442e      	add	r6, r5
 800efb6:	4416      	add	r6, r2
 800efb8:	4428      	add	r0, r5
 800efba:	600e      	str	r6, [r1, #0]
 800efbc:	4402      	add	r2, r0
 800efbe:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800efc2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800efc4:	3301      	adds	r3, #1
 800efc6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800efca:	f003 0301 	and.w	r3, r3, #1
 800efce:	8722      	strh	r2, [r4, #56]	; 0x38
 800efd0:	807b      	strh	r3, [r7, #2]
 800efd2:	b005      	add	sp, #20
 800efd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efd6:	bf00      	nop
 800efd8:	2000355c 	andcs	r3, r0, ip, asr r5
 800efdc:	200029ec 	andcs	r2, r0, ip, ror #19

0800efe0 <memcpy.isra.0>:
 800efe0:	3801      	subs	r0, #1
 800efe2:	440a      	add	r2, r1
 800efe4:	4291      	cmp	r1, r2
 800efe6:	d100      	bne.n	800efea <memcpy.isra.0+0xa>
 800efe8:	4770      	bx	lr
 800efea:	f811 3b01 	ldrb.w	r3, [r1], #1
 800efee:	f800 3f01 	strb.w	r3, [r0, #1]!
 800eff2:	e7f7      	b.n	800efe4 <memcpy.isra.0+0x4>

0800eff4 <net_memcpy>:
 800eff4:	ea41 0300 	orr.w	r3, r1, r0
 800eff8:	079b      	lsls	r3, r3, #30
 800effa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800effc:	d115      	bne.n	800f02a <net_memcpy+0x36>
 800effe:	f022 0303 	bic.w	r3, r2, #3
 800f002:	1f04      	subs	r4, r0, #4
 800f004:	0895      	lsrs	r5, r2, #2
 800f006:	18ce      	adds	r6, r1, r3
 800f008:	42b1      	cmp	r1, r6
 800f00a:	d109      	bne.n	800f020 <net_memcpy+0x2c>
 800f00c:	f06f 0403 	mvn.w	r4, #3
 800f010:	fb04 2205 	mla	r2, r4, r5, r2
 800f014:	4403      	add	r3, r0
 800f016:	3b01      	subs	r3, #1
 800f018:	440a      	add	r2, r1
 800f01a:	4291      	cmp	r1, r2
 800f01c:	d107      	bne.n	800f02e <net_memcpy+0x3a>
 800f01e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f020:	f851 7b04 	ldr.w	r7, [r1], #4
 800f024:	f844 7f04 	str.w	r7, [r4, #4]!
 800f028:	e7ee      	b.n	800f008 <net_memcpy+0x14>
 800f02a:	4603      	mov	r3, r0
 800f02c:	e7f3      	b.n	800f016 <net_memcpy+0x22>
 800f02e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f032:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f036:	e7f0      	b.n	800f01a <net_memcpy+0x26>

0800f038 <udp_set_ip>:
 800f038:	2204      	movs	r2, #4
 800f03a:	b513      	push	{r0, r1, r4, lr}
 800f03c:	4604      	mov	r4, r0
 800f03e:	6803      	ldr	r3, [r0, #0]
 800f040:	eb0d 0102 	add.w	r1, sp, r2
 800f044:	4808      	ldr	r0, [pc, #32]	; (800f068 <udp_set_ip+0x30>)
 800f046:	9301      	str	r3, [sp, #4]
 800f048:	f7ff ffca 	bl	800efe0 <memcpy.isra.0>
 800f04c:	6862      	ldr	r2, [r4, #4]
 800f04e:	4b07      	ldr	r3, [pc, #28]	; (800f06c <udp_set_ip+0x34>)
 800f050:	43d1      	mvns	r1, r2
 800f052:	6019      	str	r1, [r3, #0]
 800f054:	6823      	ldr	r3, [r4, #0]
 800f056:	4013      	ands	r3, r2
 800f058:	4a05      	ldr	r2, [pc, #20]	; (800f070 <udp_set_ip+0x38>)
 800f05a:	6013      	str	r3, [r2, #0]
 800f05c:	68a2      	ldr	r2, [r4, #8]
 800f05e:	4b05      	ldr	r3, [pc, #20]	; (800f074 <udp_set_ip+0x3c>)
 800f060:	601a      	str	r2, [r3, #0]
 800f062:	b002      	add	sp, #8
 800f064:	bd10      	pop	{r4, pc}
 800f066:	bf00      	nop
 800f068:	20009876 	andcs	r9, r0, r6, ror r8
 800f06c:	20003b8c 	andcs	r3, r0, ip, lsl #23
 800f070:	20003b94 	mulcs	r0, r4, fp
 800f074:	20003b90 	mulcs	r0, r0, fp

0800f078 <udp_bind>:
 800f078:	4a0a      	ldr	r2, [pc, #40]	; (800f0a4 <udp_bind+0x2c>)
 800f07a:	4603      	mov	r3, r0
 800f07c:	b510      	push	{r4, lr}
 800f07e:	2000      	movs	r0, #0
 800f080:	4614      	mov	r4, r2
 800f082:	f852 1b04 	ldr.w	r1, [r2], #4
 800f086:	4299      	cmp	r1, r3
 800f088:	d008      	beq.n	800f09c <udp_bind+0x24>
 800f08a:	b141      	cbz	r1, 800f09e <udp_bind+0x26>
 800f08c:	3001      	adds	r0, #1
 800f08e:	2808      	cmp	r0, #8
 800f090:	d1f7      	bne.n	800f082 <udp_bind+0xa>
 800f092:	4805      	ldr	r0, [pc, #20]	; (800f0a8 <udp_bind+0x30>)
 800f094:	f002 fe6a 	bl	8011d6c <console_error>
 800f098:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f09c:	bd10      	pop	{r4, pc}
 800f09e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f0a2:	e7fb      	b.n	800f09c <udp_bind+0x24>
 800f0a4:	20003b9c 	mulcs	r0, ip, fp
 800f0a8:	08015ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp, ip, lr}

0800f0ac <udp_unbind>:
 800f0ac:	4a0c      	ldr	r2, [pc, #48]	; (800f0e0 <udp_unbind+0x34>)
 800f0ae:	2300      	movs	r3, #0
 800f0b0:	4611      	mov	r1, r2
 800f0b2:	b510      	push	{r4, lr}
 800f0b4:	f852 4b04 	ldr.w	r4, [r2], #4
 800f0b8:	4284      	cmp	r4, r0
 800f0ba:	d108      	bne.n	800f0ce <udp_unbind+0x22>
 800f0bc:	2000      	movs	r0, #0
 800f0be:	f640 3294 	movw	r2, #2964	; 0xb94
 800f0c2:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f0c6:	4353      	muls	r3, r2
 800f0c8:	4a06      	ldr	r2, [pc, #24]	; (800f0e4 <udp_unbind+0x38>)
 800f0ca:	5098      	str	r0, [r3, r2]
 800f0cc:	bd10      	pop	{r4, pc}
 800f0ce:	3301      	adds	r3, #1
 800f0d0:	2b08      	cmp	r3, #8
 800f0d2:	d1ef      	bne.n	800f0b4 <udp_unbind+0x8>
 800f0d4:	4804      	ldr	r0, [pc, #16]	; (800f0e8 <udp_unbind+0x3c>)
 800f0d6:	f002 fe49 	bl	8011d6c <console_error>
 800f0da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f0de:	e7f5      	b.n	800f0cc <udp_unbind+0x20>
 800f0e0:	20003b9c 	mulcs	r0, ip, fp
 800f0e4:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc
 800f0e8:	08015ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, lr}

0800f0ec <udp_recv>:
 800f0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0f0:	4604      	mov	r4, r0
 800f0f2:	4698      	mov	r8, r3
 800f0f4:	f640 3394 	movw	r3, #2964	; 0xb94
 800f0f8:	435c      	muls	r4, r3
 800f0fa:	4608      	mov	r0, r1
 800f0fc:	4915      	ldr	r1, [pc, #84]	; (800f154 <udp_recv+0x68>)
 800f0fe:	190f      	adds	r7, r1, r4
 800f100:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f104:	5b0b      	ldrh	r3, [r1, r4]
 800f106:	4563      	cmp	r3, ip
 800f108:	d021      	beq.n	800f14e <udp_recv+0x62>
 800f10a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f10e:	fb03 fc0c 	mul.w	ip, r3, ip
 800f112:	eb0c 0604 	add.w	r6, ip, r4
 800f116:	440e      	add	r6, r1
 800f118:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f11c:	3404      	adds	r4, #4
 800f11e:	4295      	cmp	r5, r2
 800f120:	bf28      	it	cs
 800f122:	4615      	movcs	r5, r2
 800f124:	4464      	add	r4, ip
 800f126:	462a      	mov	r2, r5
 800f128:	4421      	add	r1, r4
 800f12a:	f7ff ff63 	bl	800eff4 <net_memcpy>
 800f12e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f132:	f8c8 3000 	str.w	r3, [r8]
 800f136:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f13a:	9b06      	ldr	r3, [sp, #24]
 800f13c:	801a      	strh	r2, [r3, #0]
 800f13e:	887b      	ldrh	r3, [r7, #2]
 800f140:	3301      	adds	r3, #1
 800f142:	f003 0301 	and.w	r3, r3, #1
 800f146:	807b      	strh	r3, [r7, #2]
 800f148:	4628      	mov	r0, r5
 800f14a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f14e:	2500      	movs	r5, #0
 800f150:	e7fa      	b.n	800f148 <udp_recv+0x5c>
 800f152:	bf00      	nop
 800f154:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc

0800f158 <udp_recv2>:
 800f158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f15a:	f640 3594 	movw	r5, #2964	; 0xb94
 800f15e:	4368      	muls	r0, r5
 800f160:	4c0f      	ldr	r4, [pc, #60]	; (800f1a0 <udp_recv2+0x48>)
 800f162:	1827      	adds	r7, r4, r0
 800f164:	887d      	ldrh	r5, [r7, #2]
 800f166:	5a26      	ldrh	r6, [r4, r0]
 800f168:	42ae      	cmp	r6, r5
 800f16a:	d017      	beq.n	800f19c <udp_recv2+0x44>
 800f16c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f170:	fb0c f505 	mul.w	r5, ip, r5
 800f174:	1d06      	adds	r6, r0, #4
 800f176:	442e      	add	r6, r5
 800f178:	4405      	add	r5, r0
 800f17a:	4426      	add	r6, r4
 800f17c:	442c      	add	r4, r5
 800f17e:	600e      	str	r6, [r1, #0]
 800f180:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f184:	6011      	str	r1, [r2, #0]
 800f186:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f18a:	801a      	strh	r2, [r3, #0]
 800f18c:	887b      	ldrh	r3, [r7, #2]
 800f18e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f192:	3301      	adds	r3, #1
 800f194:	f003 0301 	and.w	r3, r3, #1
 800f198:	807b      	strh	r3, [r7, #2]
 800f19a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f19c:	2000      	movs	r0, #0
 800f19e:	e7fc      	b.n	800f19a <udp_recv2+0x42>
 800f1a0:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc

0800f1a4 <udp_send>:
 800f1a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f1a8:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f2dc <udp_send+0x138>
 800f1ac:	461c      	mov	r4, r3
 800f1ae:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f1b2:	4607      	mov	r7, r0
 800f1b4:	4688      	mov	r8, r1
 800f1b6:	4616      	mov	r6, r2
 800f1b8:	2b00      	cmp	r3, #0
 800f1ba:	f000 808b 	beq.w	800f2d4 <udp_send+0x130>
 800f1be:	1c63      	adds	r3, r4, #1
 800f1c0:	d141      	bne.n	800f246 <udp_send+0xa2>
 800f1c2:	4a47      	ldr	r2, [pc, #284]	; (800f2e0 <udp_send+0x13c>)
 800f1c4:	2307      	movs	r3, #7
 800f1c6:	4611      	mov	r1, r2
 800f1c8:	20ff      	movs	r0, #255	; 0xff
 800f1ca:	e001      	b.n	800f1d0 <udp_send+0x2c>
 800f1cc:	f802 0b01 	strb.w	r0, [r2], #1
 800f1d0:	3b01      	subs	r3, #1
 800f1d2:	d1fb      	bne.n	800f1cc <udp_send+0x28>
 800f1d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f1d8:	83cb      	strh	r3, [r1, #30]
 800f1da:	840b      	strh	r3, [r1, #32]
 800f1dc:	2500      	movs	r5, #0
 800f1de:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f2e4 <udp_send+0x140>
 800f1e2:	4c3f      	ldr	r4, [pc, #252]	; (800f2e0 <udp_send+0x13c>)
 800f1e4:	f8ba 3000 	ldrh.w	r3, [sl]
 800f1e8:	2114      	movs	r1, #20
 800f1ea:	8263      	strh	r3, [r4, #18]
 800f1ec:	f106 031c 	add.w	r3, r6, #28
 800f1f0:	ba5b      	rev16	r3, r3
 800f1f2:	f104 000e 	add.w	r0, r4, #14
 800f1f6:	8223      	strh	r3, [r4, #16]
 800f1f8:	8325      	strh	r5, [r4, #24]
 800f1fa:	f001 fc32 	bl	8010a62 <net_chksum>
 800f1fe:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f202:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f206:	ba5b      	rev16	r3, r3
 800f208:	8463      	strh	r3, [r4, #34]	; 0x22
 800f20a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f20e:	4632      	mov	r2, r6
 800f210:	ba5b      	rev16	r3, r3
 800f212:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f214:	f106 0308 	add.w	r3, r6, #8
 800f218:	ba5b      	rev16	r3, r3
 800f21a:	bf28      	it	cs
 800f21c:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f220:	4641      	mov	r1, r8
 800f222:	8320      	strh	r0, [r4, #24]
 800f224:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f228:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f22a:	f7ff fee3 	bl	800eff4 <net_memcpy>
 800f22e:	4620      	mov	r0, r4
 800f230:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f234:	f003 feba 	bl	8012fac <emac_eth_send>
 800f238:	f8ba 3000 	ldrh.w	r3, [sl]
 800f23c:	4628      	mov	r0, r5
 800f23e:	3301      	adds	r3, #1
 800f240:	f8aa 3000 	strh.w	r3, [sl]
 800f244:	e037      	b.n	800f2b6 <udp_send+0x112>
 800f246:	4b28      	ldr	r3, [pc, #160]	; (800f2e8 <udp_send+0x144>)
 800f248:	681b      	ldr	r3, [r3, #0]
 800f24a:	43a3      	bics	r3, r4
 800f24c:	d10f      	bne.n	800f26e <udp_send+0xca>
 800f24e:	2307      	movs	r3, #7
 800f250:	21ff      	movs	r1, #255	; 0xff
 800f252:	4a23      	ldr	r2, [pc, #140]	; (800f2e0 <udp_send+0x13c>)
 800f254:	e001      	b.n	800f25a <udp_send+0xb6>
 800f256:	f802 1b01 	strb.w	r1, [r2], #1
 800f25a:	3b01      	subs	r3, #1
 800f25c:	d1fb      	bne.n	800f256 <udp_send+0xb2>
 800f25e:	2204      	movs	r2, #4
 800f260:	4822      	ldr	r0, [pc, #136]	; (800f2ec <udp_send+0x148>)
 800f262:	eb0d 0102 	add.w	r1, sp, r2
 800f266:	9401      	str	r4, [sp, #4]
 800f268:	f7ff feba 	bl	800efe0 <memcpy.isra.0>
 800f26c:	e7b6      	b.n	800f1dc <udp_send+0x38>
 800f26e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f272:	2be0      	cmp	r3, #224	; 0xe0
 800f274:	d10e      	bne.n	800f294 <udp_send+0xf0>
 800f276:	491e      	ldr	r1, [pc, #120]	; (800f2f0 <udp_send+0x14c>)
 800f278:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f27c:	70cb      	strb	r3, [r1, #3]
 800f27e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f282:	710b      	strb	r3, [r1, #4]
 800f284:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f288:	2206      	movs	r2, #6
 800f28a:	4815      	ldr	r0, [pc, #84]	; (800f2e0 <udp_send+0x13c>)
 800f28c:	714b      	strb	r3, [r1, #5]
 800f28e:	f7ff fea7 	bl	800efe0 <memcpy.isra.0>
 800f292:	e7e4      	b.n	800f25e <udp_send+0xba>
 800f294:	4b17      	ldr	r3, [pc, #92]	; (800f2f4 <udp_send+0x150>)
 800f296:	681b      	ldr	r3, [r3, #0]
 800f298:	43a3      	bics	r3, r4
 800f29a:	d00f      	beq.n	800f2bc <udp_send+0x118>
 800f29c:	4d16      	ldr	r5, [pc, #88]	; (800f2f8 <udp_send+0x154>)
 800f29e:	4910      	ldr	r1, [pc, #64]	; (800f2e0 <udp_send+0x13c>)
 800f2a0:	6828      	ldr	r0, [r5, #0]
 800f2a2:	f001 f899 	bl	80103d8 <arp_cache_lookup>
 800f2a6:	682b      	ldr	r3, [r5, #0]
 800f2a8:	4298      	cmp	r0, r3
 800f2aa:	d0d8      	beq.n	800f25e <udp_send+0xba>
 800f2ac:	4813      	ldr	r0, [pc, #76]	; (800f2fc <udp_send+0x158>)
 800f2ae:	f002 fd5d 	bl	8011d6c <console_error>
 800f2b2:	f06f 0002 	mvn.w	r0, #2
 800f2b6:	b002      	add	sp, #8
 800f2b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f2bc:	4620      	mov	r0, r4
 800f2be:	4908      	ldr	r1, [pc, #32]	; (800f2e0 <udp_send+0x13c>)
 800f2c0:	f001 f88a 	bl	80103d8 <arp_cache_lookup>
 800f2c4:	42a0      	cmp	r0, r4
 800f2c6:	d0ca      	beq.n	800f25e <udp_send+0xba>
 800f2c8:	480d      	ldr	r0, [pc, #52]	; (800f300 <udp_send+0x15c>)
 800f2ca:	f002 fd4f 	bl	8011d6c <console_error>
 800f2ce:	f06f 0001 	mvn.w	r0, #1
 800f2d2:	e7f0      	b.n	800f2b6 <udp_send+0x112>
 800f2d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f2d8:	e7ed      	b.n	800f2b6 <udp_send+0x112>
 800f2da:	bf00      	nop
 800f2dc:	20003b9c 	mulcs	r0, ip, fp
 800f2e0:	2000985c 	andcs	r9, r0, ip, asr r8
 800f2e4:	20003b98 	mulcs	r0, r8, fp
 800f2e8:	20003b8c 	andcs	r3, r0, ip, lsl #23
 800f2ec:	2000987a 	andcs	r9, r0, sl, ror r8
 800f2f0:	20000000 	andcs	r0, r0, r0
 800f2f4:	20003b94 	mulcs	r0, r4, fp
 800f2f8:	20003b90 	mulcs	r0, r0, fp
 800f2fc:	08015ae2 	stmdaeq	r1, {r1, r5, r6, r7, r9, fp, ip, lr}
 800f300:	08015b08 	stmdaeq	r1, {r3, r8, r9, fp, ip, lr}

0800f304 <strlen>:
 800f304:	4603      	mov	r3, r0
 800f306:	461a      	mov	r2, r3
 800f308:	7811      	ldrb	r1, [r2, #0]
 800f30a:	3301      	adds	r3, #1
 800f30c:	2900      	cmp	r1, #0
 800f30e:	d1fa      	bne.n	800f306 <strlen+0x2>
 800f310:	1a10      	subs	r0, r2, r0
 800f312:	4770      	bx	lr

0800f314 <strcmp>:
 800f314:	1e43      	subs	r3, r0, #1
 800f316:	3901      	subs	r1, #1
 800f318:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f31c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f320:	4290      	cmp	r0, r2
 800f322:	d102      	bne.n	800f32a <strcmp+0x16>
 800f324:	2800      	cmp	r0, #0
 800f326:	d1f7      	bne.n	800f318 <strcmp+0x4>
 800f328:	4770      	bx	lr
 800f32a:	1a80      	subs	r0, r0, r2
 800f32c:	4770      	bx	lr

0800f32e <strcpy.isra.0>:
 800f32e:	3801      	subs	r0, #1
 800f330:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f334:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f338:	2b00      	cmp	r3, #0
 800f33a:	d1f9      	bne.n	800f330 <strcpy.isra.0+0x2>
 800f33c:	4770      	bx	lr

0800f33e <strcat.isra.0>:
 800f33e:	b538      	push	{r3, r4, r5, lr}
 800f340:	4604      	mov	r4, r0
 800f342:	460d      	mov	r5, r1
 800f344:	f7ff ffde 	bl	800f304 <strlen>
 800f348:	4629      	mov	r1, r5
 800f34a:	4420      	add	r0, r4
 800f34c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f350:	f7ff bfed 	b.w	800f32e <strcpy.isra.0>

0800f354 <MDNS::MDNS()>:
 800f354:	b513      	push	{r0, r1, r4, lr}
 800f356:	4604      	mov	r4, r0
 800f358:	a901      	add	r1, sp, #4
 800f35a:	4804      	ldr	r0, [pc, #16]	; (800f36c <MDNS::MDNS()+0x18>)
 800f35c:	f002 fe82 	bl	8012064 <inet_aton>
 800f360:	4620      	mov	r0, r4
 800f362:	4b03      	ldr	r3, [pc, #12]	; (800f370 <MDNS::MDNS()+0x1c>)
 800f364:	9a01      	ldr	r2, [sp, #4]
 800f366:	601a      	str	r2, [r3, #0]
 800f368:	b002      	add	sp, #8
 800f36a:	bd10      	pop	{r4, pc}
 800f36c:	08015b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, ip, lr}
 800f370:	20009e50 	andcs	r9, r0, r0, asr lr

0800f374 <MDNS::SetName(char const*)>:
 800f374:	b538      	push	{r3, r4, r5, lr}
 800f376:	4d0b      	ldr	r5, [pc, #44]	; (800f3a4 <MDNS::SetName(char const*)+0x30>)
 800f378:	460c      	mov	r4, r1
 800f37a:	6828      	ldr	r0, [r5, #0]
 800f37c:	b108      	cbz	r0, 800f382 <MDNS::SetName(char const*)+0xe>
 800f37e:	f002 fe6b 	bl	8012058 <operator delete[](void*)>
 800f382:	4620      	mov	r0, r4
 800f384:	f7ff ffbe 	bl	800f304 <strlen>
 800f388:	3007      	adds	r0, #7
 800f38a:	f002 fe69 	bl	8012060 <operator new[](unsigned int)>
 800f38e:	4621      	mov	r1, r4
 800f390:	6028      	str	r0, [r5, #0]
 800f392:	f7ff ffcc 	bl	800f32e <strcpy.isra.0>
 800f396:	6828      	ldr	r0, [r5, #0]
 800f398:	4903      	ldr	r1, [pc, #12]	; (800f3a8 <MDNS::SetName(char const*)+0x34>)
 800f39a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f39e:	f7ff bfce 	b.w	800f33e <strcat.isra.0>
 800f3a2:	bf00      	nop
 800f3a4:	2000a280 	andcs	sl, r0, r0, lsl #5
 800f3a8:	08015b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, lr}

0800f3ac <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f3ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3b0:	f04f 0e00 	mov.w	lr, #0
 800f3b4:	262e      	movs	r6, #46	; 0x2e
 800f3b6:	4675      	mov	r5, lr
 800f3b8:	4694      	mov	ip, r2
 800f3ba:	4f1d      	ldr	r7, [pc, #116]	; (800f430 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800f3bc:	4a1d      	ldr	r2, [pc, #116]	; (800f434 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800f3be:	780b      	ldrb	r3, [r1, #0]
 800f3c0:	1c68      	adds	r0, r5, #1
 800f3c2:	b383      	cbz	r3, 800f426 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800f3c4:	2b3f      	cmp	r3, #63	; 0x3f
 800f3c6:	d91d      	bls.n	800f404 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800f3c8:	f1be 0f00 	cmp.w	lr, #0
 800f3cc:	bf08      	it	eq
 800f3ce:	4605      	moveq	r5, r0
 800f3d0:	2000      	movs	r0, #0
 800f3d2:	7849      	ldrb	r1, [r1, #1]
 800f3d4:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800f3d8:	430b      	orrs	r3, r1
 800f3da:	6811      	ldr	r1, [r2, #0]
 800f3dc:	5ccc      	ldrb	r4, [r1, r3]
 800f3de:	3301      	adds	r3, #1
 800f3e0:	440b      	add	r3, r1
 800f3e2:	42a0      	cmp	r0, r4
 800f3e4:	5c19      	ldrb	r1, [r3, r0]
 800f3e6:	d309      	bcc.n	800f3fc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800f3e8:	f04f 0e01 	mov.w	lr, #1
 800f3ec:	1919      	adds	r1, r3, r4
 800f3ee:	4464      	add	r4, ip
 800f3f0:	780b      	ldrb	r3, [r1, #0]
 800f3f2:	b10b      	cbz	r3, 800f3f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800f3f4:	f804 6b01 	strb.w	r6, [r4], #1
 800f3f8:	46a4      	mov	ip, r4
 800f3fa:	e7e0      	b.n	800f3be <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f3fc:	f80c 1000 	strb.w	r1, [ip, r0]
 800f400:	3001      	adds	r0, #1
 800f402:	e7ee      	b.n	800f3e2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800f404:	4688      	mov	r8, r1
 800f406:	eb0c 0403 	add.w	r4, ip, r3
 800f40a:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f40e:	f80c 9b01 	strb.w	r9, [ip], #1
 800f412:	4564      	cmp	r4, ip
 800f414:	d1f9      	bne.n	800f40a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800f416:	f103 0c01 	add.w	ip, r3, #1
 800f41a:	4461      	add	r1, ip
 800f41c:	f1be 0f00 	cmp.w	lr, #0
 800f420:	d1e6      	bne.n	800f3f0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800f422:	18c5      	adds	r5, r0, r3
 800f424:	e7e4      	b.n	800f3f0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800f426:	f88c 3000 	strb.w	r3, [ip]
 800f42a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f42e:	bf00      	nop
 800f430:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800f434:	2000a284 	andcs	sl, r0, r4, lsl #5

0800f438 <MDNS::FindFirstDotFromRight(char const*) const>:
 800f438:	b510      	push	{r4, lr}
 800f43a:	4608      	mov	r0, r1
 800f43c:	460c      	mov	r4, r1
 800f43e:	f7ff ff61 	bl	800f304 <strlen>
 800f442:	4420      	add	r0, r4
 800f444:	42a0      	cmp	r0, r4
 800f446:	d903      	bls.n	800f450 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800f448:	f810 3901 	ldrb.w	r3, [r0], #-1
 800f44c:	2b2e      	cmp	r3, #46	; 0x2e
 800f44e:	d1f9      	bne.n	800f444 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800f450:	3001      	adds	r0, #1
 800f452:	bd10      	pop	{r4, pc}

0800f454 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800f454:	4610      	mov	r0, r2
 800f456:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f458:	460f      	mov	r7, r1
 800f45a:	1c44      	adds	r4, r0, #1
 800f45c:	463d      	mov	r5, r7
 800f45e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800f462:	b126      	cbz	r6, 800f46e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800f464:	2e2e      	cmp	r6, #46	; 0x2e
 800f466:	d002      	beq.n	800f46e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800f468:	f804 6b01 	strb.w	r6, [r4], #1
 800f46c:	e7f6      	b.n	800f45c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800f46e:	1a69      	subs	r1, r5, r1
 800f470:	7001      	strb	r1, [r0, #0]
 800f472:	7829      	ldrb	r1, [r5, #0]
 800f474:	b921      	cbnz	r1, 800f480 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800f476:	b10b      	cbz	r3, 800f47c <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800f478:	f804 1b01 	strb.w	r1, [r4], #1
 800f47c:	1aa0      	subs	r0, r4, r2
 800f47e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f480:	4620      	mov	r0, r4
 800f482:	1c69      	adds	r1, r5, #1
 800f484:	e7e8      	b.n	800f458 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800f488 <MDNS::CreateAnswerLocalIpAddress()>:
 800f488:	2384      	movs	r3, #132	; 0x84
 800f48a:	b510      	push	{r4, lr}
 800f48c:	4c0f      	ldr	r4, [pc, #60]	; (800f4cc <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800f48e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800f492:	80e3      	strh	r3, [r4, #6]
 800f494:	2300      	movs	r3, #0
 800f496:	490e      	ldr	r1, [pc, #56]	; (800f4d0 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800f498:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800f49c:	6809      	ldr	r1, [r1, #0]
 800f49e:	f104 0210 	add.w	r2, r4, #16
 800f4a2:	2301      	movs	r3, #1
 800f4a4:	f7ff ffd6 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f4a8:	490a      	ldr	r1, [pc, #40]	; (800f4d4 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800f4aa:	1813      	adds	r3, r2, r0
 800f4ac:	5011      	str	r1, [r2, r0]
 800f4ae:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800f4b2:	605a      	str	r2, [r3, #4]
 800f4b4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800f4b8:	811a      	strh	r2, [r3, #8]
 800f4ba:	4a07      	ldr	r2, [pc, #28]	; (800f4d8 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800f4bc:	6812      	ldr	r2, [r2, #0]
 800f4be:	6912      	ldr	r2, [r2, #16]
 800f4c0:	f8c3 200a 	str.w	r2, [r3, #10]
 800f4c4:	1b1b      	subs	r3, r3, r4
 800f4c6:	330a      	adds	r3, #10
 800f4c8:	6023      	str	r3, [r4, #0]
 800f4ca:	bd10      	pop	{r4, pc}
 800f4cc:	20009e54 	andcs	r9, r0, r4, asr lr
 800f4d0:	2000a280 	andcs	sl, r0, r0, lsl #5
 800f4d4:	01800100 	orreq	r0, r0, r0, lsl #2
 800f4d8:	2000a288 	andcs	sl, r0, r8, lsl #5

0800f4dc <MDNS::Start()>:
 800f4dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4de:	4c1e      	ldr	r4, [pc, #120]	; (800f558 <MDNS::Start()+0x7c>)
 800f4e0:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800f4e4:	4605      	mov	r5, r0
 800f4e6:	6820      	ldr	r0, [r4, #0]
 800f4e8:	f000 fb2a 	bl	800fb40 <Network::Begin(unsigned short)>
 800f4ec:	4e1b      	ldr	r6, [pc, #108]	; (800f55c <MDNS::Start()+0x80>)
 800f4ee:	4f1c      	ldr	r7, [pc, #112]	; (800f560 <MDNS::Start()+0x84>)
 800f4f0:	4601      	mov	r1, r0
 800f4f2:	6030      	str	r0, [r6, #0]
 800f4f4:	683a      	ldr	r2, [r7, #0]
 800f4f6:	6820      	ldr	r0, [r4, #0]
 800f4f8:	f000 fb33 	bl	800fb62 <Network::JoinGroup(int, unsigned int)>
 800f4fc:	4b19      	ldr	r3, [pc, #100]	; (800f564 <MDNS::Start()+0x88>)
 800f4fe:	681b      	ldr	r3, [r3, #0]
 800f500:	b923      	cbnz	r3, 800f50c <MDNS::Start()+0x30>
 800f502:	6821      	ldr	r1, [r4, #0]
 800f504:	4628      	mov	r0, r5
 800f506:	311c      	adds	r1, #28
 800f508:	f7ff ff34 	bl	800f374 <MDNS::SetName(char const*)>
 800f50c:	4628      	mov	r0, r5
 800f50e:	f7ff ffbb 	bl	800f488 <MDNS::CreateAnswerLocalIpAddress()>
 800f512:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f516:	4914      	ldr	r1, [pc, #80]	; (800f568 <MDNS::Start()+0x8c>)
 800f518:	7830      	ldrb	r0, [r6, #0]
 800f51a:	f851 2b04 	ldr.w	r2, [r1], #4
 800f51e:	9300      	str	r3, [sp, #0]
 800f520:	b292      	uxth	r2, r2
 800f522:	683b      	ldr	r3, [r7, #0]
 800f524:	f7ff fe3e 	bl	800f1a4 <udp_send>
 800f528:	223f      	movs	r2, #63	; 0x3f
 800f52a:	6820      	ldr	r0, [r4, #0]
 800f52c:	4c0f      	ldr	r4, [pc, #60]	; (800f56c <MDNS::Start()+0x90>)
 800f52e:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800f532:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800f536:	b929      	cbnz	r1, 800f544 <MDNS::Start()+0x68>
 800f538:	441a      	add	r2, r3
 800f53a:	4293      	cmp	r3, r2
 800f53c:	d006      	beq.n	800f54c <MDNS::Start()+0x70>
 800f53e:	f803 1b01 	strb.w	r1, [r3], #1
 800f542:	e7fa      	b.n	800f53a <MDNS::Start()+0x5e>
 800f544:	3a01      	subs	r2, #1
 800f546:	f803 1b01 	strb.w	r1, [r3], #1
 800f54a:	d1f2      	bne.n	800f532 <MDNS::Start()+0x56>
 800f54c:	2300      	movs	r3, #0
 800f54e:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800f552:	b003      	add	sp, #12
 800f554:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f556:	bf00      	nop
 800f558:	2000a288 	andcs	sl, r0, r8, lsl #5
 800f55c:	20000008 	andcs	r0, r0, r8
 800f560:	20009e50 	andcs	r9, r0, r0, asr lr
 800f564:	2000a280 	andcs	sl, r0, r0, lsl #5
 800f568:	20009e54 	andcs	r9, r0, r4, asr lr
 800f56c:	08015b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, lr}

0800f570 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800f570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f574:	4c1b      	ldr	r4, [pc, #108]	; (800f5e4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800f576:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800f57a:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800f57e:	2300      	movs	r3, #0
 800f580:	f854 100c 	ldr.w	r1, [r4, ip]
 800f584:	4607      	mov	r7, r0
 800f586:	f7ff ff65 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f58a:	2301      	movs	r3, #1
 800f58c:	7bac      	ldrb	r4, [r5, #14]
 800f58e:	4616      	mov	r6, r2
 800f590:	4915      	ldr	r1, [pc, #84]	; (800f5e8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800f592:	4402      	add	r2, r0
 800f594:	4815      	ldr	r0, [pc, #84]	; (800f5ec <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800f596:	429c      	cmp	r4, r3
 800f598:	bf18      	it	ne
 800f59a:	4601      	movne	r1, r0
 800f59c:	4638      	mov	r0, r7
 800f59e:	f7ff ff59 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f5a2:	4b13      	ldr	r3, [pc, #76]	; (800f5f0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800f5a4:	1814      	adds	r4, r2, r0
 800f5a6:	5013      	str	r3, [r2, r0]
 800f5a8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f5ac:	6063      	str	r3, [r4, #4]
 800f5ae:	4b11      	ldr	r3, [pc, #68]	; (800f5f4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800f5b0:	f8d3 8000 	ldr.w	r8, [r3]
 800f5b4:	4640      	mov	r0, r8
 800f5b6:	f7ff fea5 	bl	800f304 <strlen>
 800f5ba:	f100 0308 	add.w	r3, r0, #8
 800f5be:	ba5b      	rev16	r3, r3
 800f5c0:	8123      	strh	r3, [r4, #8]
 800f5c2:	2300      	movs	r3, #0
 800f5c4:	f8c4 300a 	str.w	r3, [r4, #10]
 800f5c8:	89ab      	ldrh	r3, [r5, #12]
 800f5ca:	f104 0210 	add.w	r2, r4, #16
 800f5ce:	ba5b      	rev16	r3, r3
 800f5d0:	81e3      	strh	r3, [r4, #14]
 800f5d2:	4641      	mov	r1, r8
 800f5d4:	2301      	movs	r3, #1
 800f5d6:	4638      	mov	r0, r7
 800f5d8:	f7ff ff3c 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f5dc:	4410      	add	r0, r2
 800f5de:	1b80      	subs	r0, r0, r6
 800f5e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5e4:	2000a058 	andcs	sl, r0, r8, asr r0
 800f5e8:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}
 800f5ec:	08015b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, lr}
 800f5f0:	01802100 	orreq	r2, r0, r0, lsl #2
 800f5f4:	2000a280 	andcs	sl, r0, r0, lsl #5

0800f5f8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800f5f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5fc:	4e19      	ldr	r6, [pc, #100]	; (800f664 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800f5fe:	010f      	lsls	r7, r1, #4
 800f600:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800f604:	2300      	movs	r3, #0
 800f606:	59f1      	ldr	r1, [r6, r7]
 800f608:	4604      	mov	r4, r0
 800f60a:	f7ff ff23 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f60e:	2301      	movs	r3, #1
 800f610:	7bae      	ldrb	r6, [r5, #14]
 800f612:	4690      	mov	r8, r2
 800f614:	4914      	ldr	r1, [pc, #80]	; (800f668 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800f616:	4402      	add	r2, r0
 800f618:	4814      	ldr	r0, [pc, #80]	; (800f66c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800f61a:	429e      	cmp	r6, r3
 800f61c:	bf18      	it	ne
 800f61e:	4601      	movne	r1, r0
 800f620:	4620      	mov	r0, r4
 800f622:	f7ff ff17 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f626:	4b12      	ldr	r3, [pc, #72]	; (800f670 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800f628:	1816      	adds	r6, r2, r0
 800f62a:	5013      	str	r3, [r2, r0]
 800f62c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f630:	68a8      	ldr	r0, [r5, #8]
 800f632:	6073      	str	r3, [r6, #4]
 800f634:	f106 040b 	add.w	r4, r6, #11
 800f638:	b938      	cbnz	r0, 800f64a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800f63a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f63e:	72b0      	strb	r0, [r6, #10]
 800f640:	8133      	strh	r3, [r6, #8]
 800f642:	eba4 0008 	sub.w	r0, r4, r8
 800f646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f64a:	f7ff fe5b 	bl	800f304 <strlen>
 800f64e:	4607      	mov	r7, r0
 800f650:	1c43      	adds	r3, r0, #1
 800f652:	72b0      	strb	r0, [r6, #10]
 800f654:	ba5b      	rev16	r3, r3
 800f656:	4620      	mov	r0, r4
 800f658:	68a9      	ldr	r1, [r5, #8]
 800f65a:	8133      	strh	r3, [r6, #8]
 800f65c:	f7ff fe67 	bl	800f32e <strcpy.isra.0>
 800f660:	443c      	add	r4, r7
 800f662:	e7ee      	b.n	800f642 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800f664:	2000a058 	andcs	sl, r0, r8, asr r0
 800f668:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}
 800f66c:	08015b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, lr}
 800f670:	01801000 	orreq	r1, r0, r0

0800f674 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800f674:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f678:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f6dc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800f67c:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800f680:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800f684:	6869      	ldr	r1, [r5, #4]
 800f686:	2301      	movs	r3, #1
 800f688:	4607      	mov	r7, r0
 800f68a:	f7ff fee3 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f68e:	4b14      	ldr	r3, [pc, #80]	; (800f6e0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800f690:	f858 8009 	ldr.w	r8, [r8, r9]
 800f694:	5013      	str	r3, [r2, r0]
 800f696:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f69a:	1816      	adds	r6, r2, r0
 800f69c:	6073      	str	r3, [r6, #4]
 800f69e:	4640      	mov	r0, r8
 800f6a0:	4614      	mov	r4, r2
 800f6a2:	f7ff fe2f 	bl	800f304 <strlen>
 800f6a6:	f100 030d 	add.w	r3, r0, #13
 800f6aa:	ba5b      	rev16	r3, r3
 800f6ac:	4641      	mov	r1, r8
 800f6ae:	8133      	strh	r3, [r6, #8]
 800f6b0:	f106 020a 	add.w	r2, r6, #10
 800f6b4:	2300      	movs	r3, #0
 800f6b6:	4638      	mov	r0, r7
 800f6b8:	f7ff fecc 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f6bc:	2301      	movs	r3, #1
 800f6be:	4402      	add	r2, r0
 800f6c0:	7bad      	ldrb	r5, [r5, #14]
 800f6c2:	4808      	ldr	r0, [pc, #32]	; (800f6e4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800f6c4:	4908      	ldr	r1, [pc, #32]	; (800f6e8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800f6c6:	429d      	cmp	r5, r3
 800f6c8:	bf18      	it	ne
 800f6ca:	4601      	movne	r1, r0
 800f6cc:	4638      	mov	r0, r7
 800f6ce:	f7ff fec1 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f6d2:	4410      	add	r0, r2
 800f6d4:	1b00      	subs	r0, r0, r4
 800f6d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f6da:	bf00      	nop
 800f6dc:	2000a058 	andcs	sl, r0, r8, asr r0
 800f6e0:	01000c00 	tsteq	r0, r0, lsl #24
 800f6e4:	08015b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, lr}
 800f6e8:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}

0800f6ec <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800f6ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f6ee:	460f      	mov	r7, r1
 800f6f0:	2301      	movs	r3, #1
 800f6f2:	490f      	ldr	r1, [pc, #60]	; (800f730 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800f6f4:	4606      	mov	r6, r0
 800f6f6:	f7ff fead 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f6fa:	4b0e      	ldr	r3, [pc, #56]	; (800f734 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800f6fc:	490e      	ldr	r1, [pc, #56]	; (800f738 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800f6fe:	5013      	str	r3, [r2, r0]
 800f700:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f704:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800f708:	684f      	ldr	r7, [r1, #4]
 800f70a:	1815      	adds	r5, r2, r0
 800f70c:	606b      	str	r3, [r5, #4]
 800f70e:	4638      	mov	r0, r7
 800f710:	4614      	mov	r4, r2
 800f712:	f7ff fdf7 	bl	800f304 <strlen>
 800f716:	1c83      	adds	r3, r0, #2
 800f718:	ba5b      	rev16	r3, r3
 800f71a:	812b      	strh	r3, [r5, #8]
 800f71c:	f105 020a 	add.w	r2, r5, #10
 800f720:	2301      	movs	r3, #1
 800f722:	4639      	mov	r1, r7
 800f724:	4630      	mov	r0, r6
 800f726:	f7ff fe95 	bl	800f454 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f72a:	4410      	add	r0, r2
 800f72c:	1b00      	subs	r0, r0, r4
 800f72e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f730:	08015b3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}
 800f734:	01000c00 	tsteq	r0, r0, lsl #24
 800f738:	2000a058 	andcs	sl, r0, r8, asr r0

0800f73c <MDNS::CreateMDNSMessage(unsigned int)>:
 800f73c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f73e:	2384      	movs	r3, #132	; 0x84
 800f740:	4d19      	ldr	r5, [pc, #100]	; (800f7a8 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800f742:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800f746:	80eb      	strh	r3, [r5, #6]
 800f748:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f74c:	f105 0410 	add.w	r4, r5, #16
 800f750:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800f754:	4622      	mov	r2, r4
 800f756:	4606      	mov	r6, r0
 800f758:	460f      	mov	r7, r1
 800f75a:	f7ff ff09 	bl	800f570 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800f75e:	4404      	add	r4, r0
 800f760:	4622      	mov	r2, r4
 800f762:	4639      	mov	r1, r7
 800f764:	4630      	mov	r0, r6
 800f766:	f7ff ff47 	bl	800f5f8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800f76a:	4404      	add	r4, r0
 800f76c:	4622      	mov	r2, r4
 800f76e:	4639      	mov	r1, r7
 800f770:	4630      	mov	r0, r6
 800f772:	f7ff ffbb 	bl	800f6ec <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800f776:	4404      	add	r4, r0
 800f778:	4622      	mov	r2, r4
 800f77a:	4639      	mov	r1, r7
 800f77c:	4630      	mov	r0, r6
 800f77e:	f7ff ff79 	bl	800f674 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800f782:	4b0a      	ldr	r3, [pc, #40]	; (800f7ac <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800f784:	4404      	add	r4, r0
 800f786:	f853 2b10 	ldr.w	r2, [r3], #16
 800f78a:	1e60      	subs	r0, r4, #1
 800f78c:	3a0c      	subs	r2, #12
 800f78e:	4611      	mov	r1, r2
 800f790:	3901      	subs	r1, #1
 800f792:	d304      	bcc.n	800f79e <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800f794:	f813 6b01 	ldrb.w	r6, [r3], #1
 800f798:	f800 6f01 	strb.w	r6, [r0, #1]!
 800f79c:	e7f8      	b.n	800f790 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800f79e:	4414      	add	r4, r2
 800f7a0:	4a03      	ldr	r2, [pc, #12]	; (800f7b0 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800f7a2:	1aa4      	subs	r4, r4, r2
 800f7a4:	602c      	str	r4, [r5, #0]
 800f7a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f7a8:	2000a07c 	andcs	sl, r0, ip, ror r0
 800f7ac:	20009e54 	andcs	r9, r0, r4, asr lr
 800f7b0:	2000a080 	andcs	sl, r0, r0, lsl #1

0800f7b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800f7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7b8:	4d3f      	ldr	r5, [pc, #252]	; (800f8b8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800f7ba:	b085      	sub	sp, #20
 800f7bc:	682c      	ldr	r4, [r5, #0]
 800f7be:	4680      	mov	r8, r0
 800f7c0:	460f      	mov	r7, r1
 800f7c2:	4616      	mov	r6, r2
 800f7c4:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800f7c8:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800f7cc:	b11c      	cbz	r4, 800f7d6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800f7ce:	692a      	ldr	r2, [r5, #16]
 800f7d0:	2a00      	cmp	r2, #0
 800f7d2:	d16d      	bne.n	800f8b0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800f7d4:	2401      	movs	r4, #1
 800f7d6:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800f7da:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800f7de:	8193      	strh	r3, [r2, #12]
 800f7e0:	f882 b00e 	strb.w	fp, [r2, #14]
 800f7e4:	2f00      	cmp	r7, #0
 800f7e6:	d153      	bne.n	800f890 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800f7e8:	4630      	mov	r0, r6
 800f7ea:	f7ff fd8b 	bl	800f304 <strlen>
 800f7ee:	4f33      	ldr	r7, [pc, #204]	; (800f8bc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800f7f0:	683b      	ldr	r3, [r7, #0]
 800f7f2:	331c      	adds	r3, #28
 800f7f4:	4418      	add	r0, r3
 800f7f6:	f7ff fd85 	bl	800f304 <strlen>
 800f7fa:	3001      	adds	r0, #1
 800f7fc:	f002 fc30 	bl	8012060 <operator new[](unsigned int)>
 800f800:	6839      	ldr	r1, [r7, #0]
 800f802:	f845 0009 	str.w	r0, [r5, r9]
 800f806:	311c      	adds	r1, #28
 800f808:	f7ff fd91 	bl	800f32e <strcpy.isra.0>
 800f80c:	f855 0009 	ldr.w	r0, [r5, r9]
 800f810:	4631      	mov	r1, r6
 800f812:	f7ff fd94 	bl	800f33e <strcat.isra.0>
 800f816:	4631      	mov	r1, r6
 800f818:	4640      	mov	r0, r8
 800f81a:	f7ff fe0d 	bl	800f438 <MDNS::FindFirstDotFromRight(char const*) const>
 800f81e:	eb05 0709 	add.w	r7, r5, r9
 800f822:	4605      	mov	r5, r0
 800f824:	f7ff fd6e 	bl	800f304 <strlen>
 800f828:	300d      	adds	r0, #13
 800f82a:	f002 fc19 	bl	8012060 <operator new[](unsigned int)>
 800f82e:	4629      	mov	r1, r5
 800f830:	6078      	str	r0, [r7, #4]
 800f832:	f7ff fd7c 	bl	800f32e <strcpy.isra.0>
 800f836:	4922      	ldr	r1, [pc, #136]	; (800f8c0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800f838:	6878      	ldr	r0, [r7, #4]
 800f83a:	f7ff fd80 	bl	800f33e <strcat.isra.0>
 800f83e:	4921      	ldr	r1, [pc, #132]	; (800f8c4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800f840:	4b21      	ldr	r3, [pc, #132]	; (800f8c8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800f842:	6878      	ldr	r0, [r7, #4]
 800f844:	f1bb 0f01 	cmp.w	fp, #1
 800f848:	bf18      	it	ne
 800f84a:	4619      	movne	r1, r3
 800f84c:	f7ff fd77 	bl	800f33e <strcat.isra.0>
 800f850:	f1ba 0f00 	cmp.w	sl, #0
 800f854:	d009      	beq.n	800f86a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800f856:	4650      	mov	r0, sl
 800f858:	f7ff fd54 	bl	800f304 <strlen>
 800f85c:	3001      	adds	r0, #1
 800f85e:	f002 fbff 	bl	8012060 <operator new[](unsigned int)>
 800f862:	4651      	mov	r1, sl
 800f864:	60b8      	str	r0, [r7, #8]
 800f866:	f7ff fd62 	bl	800f32e <strcpy.isra.0>
 800f86a:	4621      	mov	r1, r4
 800f86c:	4640      	mov	r0, r8
 800f86e:	f7ff ff65 	bl	800f73c <MDNS::CreateMDNSMessage(unsigned int)>
 800f872:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f876:	4915      	ldr	r1, [pc, #84]	; (800f8cc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800f878:	4815      	ldr	r0, [pc, #84]	; (800f8d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800f87a:	f851 2b04 	ldr.w	r2, [r1], #4
 800f87e:	9300      	str	r3, [sp, #0]
 800f880:	4b14      	ldr	r3, [pc, #80]	; (800f8d4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800f882:	7800      	ldrb	r0, [r0, #0]
 800f884:	681b      	ldr	r3, [r3, #0]
 800f886:	b292      	uxth	r2, r2
 800f888:	f7ff fc8c 	bl	800f1a4 <udp_send>
 800f88c:	2001      	movs	r0, #1
 800f88e:	e010      	b.n	800f8b2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800f890:	4638      	mov	r0, r7
 800f892:	f7ff fd37 	bl	800f304 <strlen>
 800f896:	9003      	str	r0, [sp, #12]
 800f898:	4630      	mov	r0, r6
 800f89a:	f7ff fd33 	bl	800f304 <strlen>
 800f89e:	9b03      	ldr	r3, [sp, #12]
 800f8a0:	4418      	add	r0, r3
 800f8a2:	3001      	adds	r0, #1
 800f8a4:	f002 fbdc 	bl	8012060 <operator new[](unsigned int)>
 800f8a8:	4639      	mov	r1, r7
 800f8aa:	f845 0009 	str.w	r0, [r5, r9]
 800f8ae:	e7ab      	b.n	800f808 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800f8b0:	2000      	movs	r0, #0
 800f8b2:	b005      	add	sp, #20
 800f8b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8b8:	2000a058 	andcs	sl, r0, r8, asr r0
 800f8bc:	2000a288 	andcs	sl, r0, r8, lsl #5
 800f8c0:	08014b8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, fp, lr}
 800f8c4:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}
 800f8c8:	08015b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, lr}
 800f8cc:	2000a07c 	andcs	sl, r0, ip, ror r0
 800f8d0:	20000008 	andcs	r0, r0, r8
 800f8d4:	20009e50 	andcs	r9, r0, r0, asr lr

0800f8d8 <MDNS::HandleRequest(unsigned short)>:
 800f8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8dc:	4605      	mov	r5, r0
 800f8de:	2700      	movs	r7, #0
 800f8e0:	f04f 080c 	mov.w	r8, #12
 800f8e4:	b0c5      	sub	sp, #276	; 0x114
 800f8e6:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800f9ac <MDNS::HandleRequest(unsigned short)+0xd4>
 800f8ea:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800f9b0 <MDNS::HandleRequest(unsigned short)+0xd8>
 800f8ee:	9103      	str	r1, [sp, #12]
 800f8f0:	9b03      	ldr	r3, [sp, #12]
 800f8f2:	42bb      	cmp	r3, r7
 800f8f4:	d956      	bls.n	800f9a4 <MDNS::HandleRequest(unsigned short)+0xcc>
 800f8f6:	f8da 1000 	ldr.w	r1, [sl]
 800f8fa:	aa04      	add	r2, sp, #16
 800f8fc:	4441      	add	r1, r8
 800f8fe:	4628      	mov	r0, r5
 800f900:	f7ff fd54 	bl	800f3ac <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800f904:	f8da 2000 	ldr.w	r2, [sl]
 800f908:	4440      	add	r0, r8
 800f90a:	1813      	adds	r3, r2, r0
 800f90c:	885b      	ldrh	r3, [r3, #2]
 800f90e:	f100 0804 	add.w	r8, r0, #4
 800f912:	ba5b      	rev16	r3, r3
 800f914:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800f918:	2b01      	cmp	r3, #1
 800f91a:	d13e      	bne.n	800f99a <MDNS::HandleRequest(unsigned short)+0xc2>
 800f91c:	5a14      	ldrh	r4, [r2, r0]
 800f91e:	4b25      	ldr	r3, [pc, #148]	; (800f9b4 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800f920:	ba64      	rev16	r4, r4
 800f922:	6818      	ldr	r0, [r3, #0]
 800f924:	a904      	add	r1, sp, #16
 800f926:	b2a4      	uxth	r4, r4
 800f928:	f7ff fcf4 	bl	800f314 <strcmp>
 800f92c:	b970      	cbnz	r0, 800f94c <MDNS::HandleRequest(unsigned short)+0x74>
 800f92e:	2c01      	cmp	r4, #1
 800f930:	d10c      	bne.n	800f94c <MDNS::HandleRequest(unsigned short)+0x74>
 800f932:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f936:	4920      	ldr	r1, [pc, #128]	; (800f9b8 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f938:	4820      	ldr	r0, [pc, #128]	; (800f9bc <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f93a:	f851 2b04 	ldr.w	r2, [r1], #4
 800f93e:	9300      	str	r3, [sp, #0]
 800f940:	4b1f      	ldr	r3, [pc, #124]	; (800f9c0 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f942:	7800      	ldrb	r0, [r0, #0]
 800f944:	681b      	ldr	r3, [r3, #0]
 800f946:	b292      	uxth	r2, r2
 800f948:	f7ff fc2c 	bl	800f1a4 <udp_send>
 800f94c:	481d      	ldr	r0, [pc, #116]	; (800f9c4 <MDNS::HandleRequest(unsigned short)+0xec>)
 800f94e:	a904      	add	r1, sp, #16
 800f950:	f7ff fce0 	bl	800f314 <strcmp>
 800f954:	f04f 0900 	mov.w	r9, #0
 800f958:	4e1b      	ldr	r6, [pc, #108]	; (800f9c8 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800f95a:	9002      	str	r0, [sp, #8]
 800f95c:	6833      	ldr	r3, [r6, #0]
 800f95e:	b1c3      	cbz	r3, 800f992 <MDNS::HandleRequest(unsigned short)+0xba>
 800f960:	9b02      	ldr	r3, [sp, #8]
 800f962:	b123      	cbz	r3, 800f96e <MDNS::HandleRequest(unsigned short)+0x96>
 800f964:	6870      	ldr	r0, [r6, #4]
 800f966:	a904      	add	r1, sp, #16
 800f968:	f7ff fcd4 	bl	800f314 <strcmp>
 800f96c:	b988      	cbnz	r0, 800f992 <MDNS::HandleRequest(unsigned short)+0xba>
 800f96e:	2c0c      	cmp	r4, #12
 800f970:	d10f      	bne.n	800f992 <MDNS::HandleRequest(unsigned short)+0xba>
 800f972:	4649      	mov	r1, r9
 800f974:	4628      	mov	r0, r5
 800f976:	f7ff fee1 	bl	800f73c <MDNS::CreateMDNSMessage(unsigned int)>
 800f97a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f97e:	480f      	ldr	r0, [pc, #60]	; (800f9bc <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f980:	9300      	str	r3, [sp, #0]
 800f982:	4b0f      	ldr	r3, [pc, #60]	; (800f9c0 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f984:	f8bb 2000 	ldrh.w	r2, [fp]
 800f988:	681b      	ldr	r3, [r3, #0]
 800f98a:	4910      	ldr	r1, [pc, #64]	; (800f9cc <MDNS::HandleRequest(unsigned short)+0xf4>)
 800f98c:	7800      	ldrb	r0, [r0, #0]
 800f98e:	f7ff fc09 	bl	800f1a4 <udp_send>
 800f992:	3610      	adds	r6, #16
 800f994:	f1b9 0f00 	cmp.w	r9, #0
 800f998:	d001      	beq.n	800f99e <MDNS::HandleRequest(unsigned short)+0xc6>
 800f99a:	3701      	adds	r7, #1
 800f99c:	e7a8      	b.n	800f8f0 <MDNS::HandleRequest(unsigned short)+0x18>
 800f99e:	f04f 0901 	mov.w	r9, #1
 800f9a2:	e7db      	b.n	800f95c <MDNS::HandleRequest(unsigned short)+0x84>
 800f9a4:	b045      	add	sp, #276	; 0x114
 800f9a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9aa:	bf00      	nop
 800f9ac:	2000a284 	andcs	sl, r0, r4, lsl #5
 800f9b0:	2000a07c 	andcs	sl, r0, ip, ror r0
 800f9b4:	2000a280 	andcs	sl, r0, r0, lsl #5
 800f9b8:	20009e54 	andcs	r9, r0, r4, asr lr
 800f9bc:	20000008 	andcs	r0, r0, r8
 800f9c0:	20009e50 	andcs	r9, r0, r0, asr lr
 800f9c4:	08015b3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}
 800f9c8:	2000a058 	andcs	sl, r0, r8, asr r0
 800f9cc:	2000a080 	andcs	sl, r0, r0, lsl #1

0800f9d0 <MDNS::Parse()>:
 800f9d0:	4b08      	ldr	r3, [pc, #32]	; (800f9f4 <MDNS::Parse()+0x24>)
 800f9d2:	681a      	ldr	r2, [r3, #0]
 800f9d4:	8853      	ldrh	r3, [r2, #2]
 800f9d6:	ba5b      	rev16	r3, r3
 800f9d8:	b299      	uxth	r1, r3
 800f9da:	041b      	lsls	r3, r3, #16
 800f9dc:	d408      	bmi.n	800f9f0 <MDNS::Parse()+0x20>
 800f9de:	0b8b      	lsrs	r3, r1, #14
 800f9e0:	d106      	bne.n	800f9f0 <MDNS::Parse()+0x20>
 800f9e2:	8891      	ldrh	r1, [r2, #4]
 800f9e4:	b28b      	uxth	r3, r1
 800f9e6:	b11b      	cbz	r3, 800f9f0 <MDNS::Parse()+0x20>
 800f9e8:	ba49      	rev16	r1, r1
 800f9ea:	b289      	uxth	r1, r1
 800f9ec:	f7ff bf74 	b.w	800f8d8 <MDNS::HandleRequest(unsigned short)>
 800f9f0:	4770      	bx	lr
 800f9f2:	bf00      	nop
 800f9f4:	2000a284 	andcs	sl, r0, r4, lsl #5

0800f9f8 <MDNS::Run()>:
 800f9f8:	b538      	push	{r3, r4, r5, lr}
 800f9fa:	4d0c      	ldr	r5, [pc, #48]	; (800fa2c <MDNS::Run()+0x34>)
 800f9fc:	4604      	mov	r4, r0
 800f9fe:	480c      	ldr	r0, [pc, #48]	; (800fa30 <MDNS::Run()+0x38>)
 800fa00:	462b      	mov	r3, r5
 800fa02:	4a0c      	ldr	r2, [pc, #48]	; (800fa34 <MDNS::Run()+0x3c>)
 800fa04:	490c      	ldr	r1, [pc, #48]	; (800fa38 <MDNS::Run()+0x40>)
 800fa06:	7800      	ldrb	r0, [r0, #0]
 800fa08:	f7ff fba6 	bl	800f158 <udp_recv2>
 800fa0c:	4b0b      	ldr	r3, [pc, #44]	; (800fa3c <MDNS::Run()+0x44>)
 800fa0e:	882a      	ldrh	r2, [r5, #0]
 800fa10:	8018      	strh	r0, [r3, #0]
 800fa12:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fa16:	429a      	cmp	r2, r3
 800fa18:	d106      	bne.n	800fa28 <MDNS::Run()+0x30>
 800fa1a:	280c      	cmp	r0, #12
 800fa1c:	d904      	bls.n	800fa28 <MDNS::Run()+0x30>
 800fa1e:	4620      	mov	r0, r4
 800fa20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fa24:	f7ff bfd4 	b.w	800f9d0 <MDNS::Parse()>
 800fa28:	bd38      	pop	{r3, r4, r5, pc}
 800fa2a:	bf00      	nop
 800fa2c:	20009e4c 	andcs	r9, r0, ip, asr #28
 800fa30:	20000008 	andcs	r0, r0, r8
 800fa34:	20009e48 	andcs	r9, r0, r8, asr #28
 800fa38:	2000a284 	andcs	sl, r0, r4, lsl #5
 800fa3c:	2000a078 	andcs	sl, r0, r8, ror r0

0800fa40 <MDNS::Print()>:
 800fa40:	b510      	push	{r4, lr}
 800fa42:	4816      	ldr	r0, [pc, #88]	; (800fa9c <MDNS::Print()+0x5c>)
 800fa44:	f7f9 fd68 	bl	8009518 <printf>
 800fa48:	4b15      	ldr	r3, [pc, #84]	; (800faa0 <MDNS::Print()+0x60>)
 800fa4a:	681b      	ldr	r3, [r3, #0]
 800fa4c:	3301      	adds	r3, #1
 800fa4e:	d104      	bne.n	800fa5a <MDNS::Print()+0x1a>
 800fa50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa54:	4813      	ldr	r0, [pc, #76]	; (800faa4 <MDNS::Print()+0x64>)
 800fa56:	f7f9 bd5f 	b.w	8009518 <printf>
 800fa5a:	4b13      	ldr	r3, [pc, #76]	; (800faa8 <MDNS::Print()+0x68>)
 800fa5c:	4c13      	ldr	r4, [pc, #76]	; (800faac <MDNS::Print()+0x6c>)
 800fa5e:	6819      	ldr	r1, [r3, #0]
 800fa60:	4813      	ldr	r0, [pc, #76]	; (800fab0 <MDNS::Print()+0x70>)
 800fa62:	f7f9 fd59 	bl	8009518 <printf>
 800fa66:	6823      	ldr	r3, [r4, #0]
 800fa68:	b14b      	cbz	r3, 800fa7e <MDNS::Print()+0x3e>
 800fa6a:	4a12      	ldr	r2, [pc, #72]	; (800fab4 <MDNS::Print()+0x74>)
 800fa6c:	68a3      	ldr	r3, [r4, #8]
 800fa6e:	6861      	ldr	r1, [r4, #4]
 800fa70:	2b00      	cmp	r3, #0
 800fa72:	bf08      	it	eq
 800fa74:	4613      	moveq	r3, r2
 800fa76:	4810      	ldr	r0, [pc, #64]	; (800fab8 <MDNS::Print()+0x78>)
 800fa78:	89a2      	ldrh	r2, [r4, #12]
 800fa7a:	f7f9 fd4d 	bl	8009518 <printf>
 800fa7e:	6923      	ldr	r3, [r4, #16]
 800fa80:	b15b      	cbz	r3, 800fa9a <MDNS::Print()+0x5a>
 800fa82:	69a3      	ldr	r3, [r4, #24]
 800fa84:	4a0b      	ldr	r2, [pc, #44]	; (800fab4 <MDNS::Print()+0x74>)
 800fa86:	6961      	ldr	r1, [r4, #20]
 800fa88:	2b00      	cmp	r3, #0
 800fa8a:	bf08      	it	eq
 800fa8c:	4613      	moveq	r3, r2
 800fa8e:	480a      	ldr	r0, [pc, #40]	; (800fab8 <MDNS::Print()+0x78>)
 800fa90:	8ba2      	ldrh	r2, [r4, #28]
 800fa92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa96:	f7f9 bd3f 	b.w	8009518 <printf>
 800fa9a:	bd10      	pop	{r4, pc}
 800fa9c:	08015b5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, fp, ip, lr}
 800faa0:	20000008 	andcs	r0, r0, r8
 800faa4:	08015b62 	stmdaeq	r1, {r1, r5, r6, r8, r9, fp, ip, lr}
 800faa8:	2000a280 	andcs	sl, r0, r0, lsl #5
 800faac:	2000a058 	andcs	sl, r0, r8, asr r0
 800fab0:	08015b70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, ip, lr}
 800fab4:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 800fab8:	08015b7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}

0800fabc <strncpy.constprop.0.isra.0>:
 800fabc:	233f      	movs	r3, #63	; 0x3f
 800fabe:	3901      	subs	r1, #1
 800fac0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800fac4:	b92a      	cbnz	r2, 800fad2 <strncpy.constprop.0.isra.0+0x16>
 800fac6:	4403      	add	r3, r0
 800fac8:	4298      	cmp	r0, r3
 800faca:	d007      	beq.n	800fadc <strncpy.constprop.0.isra.0+0x20>
 800facc:	f800 2b01 	strb.w	r2, [r0], #1
 800fad0:	e7fa      	b.n	800fac8 <strncpy.constprop.0.isra.0+0xc>
 800fad2:	3b01      	subs	r3, #1
 800fad4:	f800 2b01 	strb.w	r2, [r0], #1
 800fad8:	d1f2      	bne.n	800fac0 <strncpy.constprop.0.isra.0+0x4>
 800fada:	4770      	bx	lr
 800fadc:	4770      	bx	lr
	...

0800fae0 <Network::Network()>:
 800fae0:	4a11      	ldr	r2, [pc, #68]	; (800fb28 <Network::Network()+0x48>)
 800fae2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800fae6:	6010      	str	r0, [r2, #0]
 800fae8:	2201      	movs	r2, #1
 800faea:	2300      	movs	r3, #0
 800faec:	e9c0 1200 	strd	r1, r2, [r0]
 800faf0:	2200      	movs	r2, #0
 800faf2:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800faf6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800fafa:	490c      	ldr	r1, [pc, #48]	; (800fb2c <Network::Network()+0x4c>)
 800fafc:	60c2      	str	r2, [r0, #12]
 800fafe:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800fb02:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800fb06:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800fb0a:	6083      	str	r3, [r0, #8]
 800fb0c:	6183      	str	r3, [r0, #24]
 800fb0e:	7703      	strb	r3, [r0, #28]
 800fb10:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800fb14:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800fb18:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fb1c:	f802 3b01 	strb.w	r3, [r2], #1
 800fb20:	2b00      	cmp	r3, #0
 800fb22:	d1f9      	bne.n	800fb18 <Network::Network()+0x38>
 800fb24:	4770      	bx	lr
 800fb26:	bf00      	nop
 800fb28:	2000a288 	andcs	sl, r0, r8, lsl #5
 800fb2c:	08015b87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, fp, ip, lr}

0800fb30 <Network::Shutdown()>:
 800fb30:	b508      	push	{r3, lr}
 800fb32:	30b8      	adds	r0, #184	; 0xb8
 800fb34:	f001 fb82 	bl	801123c <NetworkDisplay::ShowShutdown()>
 800fb38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fb3c:	f7f7 bb58 	b.w	80071f0 <net_shutdown>

0800fb40 <Network::Begin(unsigned short)>:
 800fb40:	4608      	mov	r0, r1
 800fb42:	f7ff ba99 	b.w	800f078 <udp_bind>

0800fb46 <Network::End(unsigned short)>:
 800fb46:	4608      	mov	r0, r1
 800fb48:	f7ff bab0 	b.w	800f0ac <udp_unbind>

0800fb4c <Network::MacAddressCopyTo(unsigned char*)>:
 800fb4c:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800fb50:	3901      	subs	r1, #1
 800fb52:	30a2      	adds	r0, #162	; 0xa2
 800fb54:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb58:	4283      	cmp	r3, r0
 800fb5a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800fb5e:	d1f9      	bne.n	800fb54 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800fb60:	4770      	bx	lr

0800fb62 <Network::JoinGroup(int, unsigned int)>:
 800fb62:	4610      	mov	r0, r2
 800fb64:	f000 bf04 	b.w	8010970 <igmp_join>

0800fb68 <Network::LeaveGroup(int, unsigned int)>:
 800fb68:	4610      	mov	r0, r2
 800fb6a:	f000 bf2d 	b.w	80109c8 <igmp_leave>

0800fb6e <Network::SetDefaultIp()>:
 800fb6e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800fb72:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800fb76:	041b      	lsls	r3, r3, #16
 800fb78:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800fb7c:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800fb80:	3302      	adds	r3, #2
 800fb82:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800fb86:	22ff      	movs	r2, #255	; 0xff
 800fb88:	6103      	str	r3, [r0, #16]
 800fb8a:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800fb8e:	4770      	bx	lr

0800fb90 <Network::Init(NetworkParamsStore*)>:
 800fb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb94:	b08b      	sub	sp, #44	; 0x2c
 800fb96:	4604      	mov	r4, r0
 800fb98:	a806      	add	r0, sp, #24
 800fb9a:	f000 f9b1 	bl	800ff00 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800fb9e:	a806      	add	r0, sp, #24
 800fba0:	f000 f9be 	bl	800ff20 <NetworkParams::Load()>
 800fba4:	b110      	cbz	r0, 800fbac <Network::Init(NetworkParamsStore*)+0x1c>
 800fba6:	a806      	add	r0, sp, #24
 800fba8:	f000 fba3 	bl	80102f2 <NetworkParams::Dump()>
 800fbac:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800fbb0:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800fdd8 <Network::Init(NetworkParamsStore*)+0x248>
 800fbb4:	4628      	mov	r0, r5
 800fbb6:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800fbba:	f001 fb33 	bl	8011224 <NetworkDisplay::ShowEmacStart()>
 800fbbe:	4638      	mov	r0, r7
 800fbc0:	f003 f930 	bl	8012e24 <emac_start>
 800fbc4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800fbc8:	f104 061c 	add.w	r6, r4, #28
 800fbcc:	9307      	str	r3, [sp, #28]
 800fbce:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800fbd2:	9308      	str	r3, [sp, #32]
 800fbd4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800fbd8:	9309      	str	r3, [sp, #36]	; 0x24
 800fbda:	f898 3014 	ldrb.w	r3, [r8, #20]
 800fbde:	7063      	strb	r3, [r4, #1]
 800fbe0:	f8d8 3000 	ldr.w	r3, [r8]
 800fbe4:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800fbe8:	bf18      	it	ne
 800fbea:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800fbee:	061b      	lsls	r3, r3, #24
 800fbf0:	bf58      	it	pl
 800fbf2:	2300      	movpl	r3, #0
 800fbf4:	60a2      	str	r2, [r4, #8]
 800fbf6:	bf48      	it	mi
 800fbf8:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800fbfc:	60e3      	str	r3, [r4, #12]
 800fbfe:	f898 3015 	ldrb.w	r3, [r8, #21]
 800fc02:	2b00      	cmp	r3, #0
 800fc04:	d15e      	bne.n	800fcc4 <Network::Init(NetworkParamsStore*)+0x134>
 800fc06:	4632      	mov	r2, r6
 800fc08:	4874      	ldr	r0, [pc, #464]	; (800fddc <Network::Init(NetworkParamsStore*)+0x24c>)
 800fc0a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800fc0e:	f103 0c01 	add.w	ip, r3, #1
 800fc12:	b119      	cbz	r1, 800fc1c <Network::Init(NetworkParamsStore*)+0x8c>
 800fc14:	4663      	mov	r3, ip
 800fc16:	f802 1b01 	strb.w	r1, [r2], #1
 800fc1a:	e7f6      	b.n	800fc0a <Network::Init(NetworkParamsStore*)+0x7a>
 800fc1c:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800fc20:	18e1      	adds	r1, r4, r3
 800fc22:	0910      	lsrs	r0, r2, #4
 800fc24:	2a9f      	cmp	r2, #159	; 0x9f
 800fc26:	f002 020f 	and.w	r2, r2, #15
 800fc2a:	bf94      	ite	ls
 800fc2c:	3030      	addls	r0, #48	; 0x30
 800fc2e:	3037      	addhi	r0, #55	; 0x37
 800fc30:	2a09      	cmp	r2, #9
 800fc32:	bf94      	ite	ls
 800fc34:	3230      	addls	r2, #48	; 0x30
 800fc36:	3237      	addhi	r2, #55	; 0x37
 800fc38:	44a4      	add	ip, r4
 800fc3a:	7708      	strb	r0, [r1, #28]
 800fc3c:	f88c 201c 	strb.w	r2, [ip, #28]
 800fc40:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800fc44:	f103 0e02 	add.w	lr, r3, #2
 800fc48:	0910      	lsrs	r0, r2, #4
 800fc4a:	2a9f      	cmp	r2, #159	; 0x9f
 800fc4c:	f002 020f 	and.w	r2, r2, #15
 800fc50:	bf94      	ite	ls
 800fc52:	3030      	addls	r0, #48	; 0x30
 800fc54:	3037      	addhi	r0, #55	; 0x37
 800fc56:	f103 0903 	add.w	r9, r3, #3
 800fc5a:	2a09      	cmp	r2, #9
 800fc5c:	44a6      	add	lr, r4
 800fc5e:	f88e 001c 	strb.w	r0, [lr, #28]
 800fc62:	bf94      	ite	ls
 800fc64:	3230      	addls	r2, #48	; 0x30
 800fc66:	3237      	addhi	r2, #55	; 0x37
 800fc68:	eb04 0009 	add.w	r0, r4, r9
 800fc6c:	7702      	strb	r2, [r0, #28]
 800fc6e:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800fc72:	f103 0c04 	add.w	ip, r3, #4
 800fc76:	0910      	lsrs	r0, r2, #4
 800fc78:	2a9f      	cmp	r2, #159	; 0x9f
 800fc7a:	f002 020f 	and.w	r2, r2, #15
 800fc7e:	bf94      	ite	ls
 800fc80:	3030      	addls	r0, #48	; 0x30
 800fc82:	3037      	addhi	r0, #55	; 0x37
 800fc84:	3305      	adds	r3, #5
 800fc86:	2a09      	cmp	r2, #9
 800fc88:	4423      	add	r3, r4
 800fc8a:	44a4      	add	ip, r4
 800fc8c:	bf94      	ite	ls
 800fc8e:	3230      	addls	r2, #48	; 0x30
 800fc90:	3237      	addhi	r2, #55	; 0x37
 800fc92:	f88c 001c 	strb.w	r0, [ip, #28]
 800fc96:	771a      	strb	r2, [r3, #28]
 800fc98:	2300      	movs	r3, #0
 800fc9a:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800fc9e:	7863      	ldrb	r3, [r4, #1]
 800fca0:	b95b      	cbnz	r3, 800fcba <Network::Init(NetworkParamsStore*)+0x12a>
 800fca2:	9b07      	ldr	r3, [sp, #28]
 800fca4:	b9b3      	cbnz	r3, 800fcd4 <Network::Init(NetworkParamsStore*)+0x144>
 800fca6:	4620      	mov	r0, r4
 800fca8:	f7ff ff61 	bl	800fb6e <Network::SetDefaultIp()>
 800fcac:	6923      	ldr	r3, [r4, #16]
 800fcae:	69a2      	ldr	r2, [r4, #24]
 800fcb0:	9307      	str	r3, [sp, #28]
 800fcb2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800fcb6:	7863      	ldrb	r3, [r4, #1]
 800fcb8:	b19b      	cbz	r3, 800fce2 <Network::Init(NetworkParamsStore*)+0x152>
 800fcba:	2101      	movs	r1, #1
 800fcbc:	4628      	mov	r0, r5
 800fcbe:	f001 fac3 	bl	8011248 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fcc2:	e00e      	b.n	800fce2 <Network::Init(NetworkParamsStore*)+0x152>
 800fcc4:	4630      	mov	r0, r6
 800fcc6:	4946      	ldr	r1, [pc, #280]	; (800fde0 <Network::Init(NetworkParamsStore*)+0x250>)
 800fcc8:	f7ff fef8 	bl	800fabc <strncpy.constprop.0.isra.0>
 800fccc:	2300      	movs	r3, #0
 800fcce:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800fcd2:	e7e4      	b.n	800fc9e <Network::Init(NetworkParamsStore*)+0x10e>
 800fcd4:	69a1      	ldr	r1, [r4, #24]
 800fcd6:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800fcda:	4053      	eors	r3, r2
 800fcdc:	420b      	tst	r3, r1
 800fcde:	d000      	beq.n	800fce2 <Network::Init(NetworkParamsStore*)+0x152>
 800fce0:	9209      	str	r2, [sp, #36]	; 0x24
 800fce2:	1ce3      	adds	r3, r4, #3
 800fce4:	f104 0901 	add.w	r9, r4, #1
 800fce8:	9302      	str	r3, [sp, #8]
 800fcea:	9300      	str	r3, [sp, #0]
 800fcec:	4632      	mov	r2, r6
 800fcee:	464b      	mov	r3, r9
 800fcf0:	4638      	mov	r0, r7
 800fcf2:	a907      	add	r1, sp, #28
 800fcf4:	f7f7 fa2c 	bl	8007150 <net_init>
 800fcf8:	78e3      	ldrb	r3, [r4, #3]
 800fcfa:	b11b      	cbz	r3, 800fd04 <Network::Init(NetworkParamsStore*)+0x174>
 800fcfc:	2104      	movs	r1, #4
 800fcfe:	4628      	mov	r0, r5
 800fd00:	f001 faa2 	bl	8011248 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fd04:	f898 3014 	ldrb.w	r3, [r8, #20]
 800fd08:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800fd0c:	9304      	str	r3, [sp, #16]
 800fd0e:	233c      	movs	r3, #60	; 0x3c
 800fd10:	fb03 f30a 	mul.w	r3, r3, sl
 800fd14:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800fde4 <Network::Init(NetworkParamsStore*)+0x254>
 800fd18:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800fde8 <Network::Init(NetworkParamsStore*)+0x258>
 800fd1c:	9303      	str	r3, [sp, #12]
 800fd1e:	78e3      	ldrb	r3, [r4, #3]
 800fd20:	b95b      	cbnz	r3, 800fd3a <Network::Init(NetworkParamsStore*)+0x1aa>
 800fd22:	9b07      	ldr	r3, [sp, #28]
 800fd24:	4628      	mov	r0, r5
 800fd26:	6123      	str	r3, [r4, #16]
 800fd28:	9b08      	ldr	r3, [sp, #32]
 800fd2a:	61a3      	str	r3, [r4, #24]
 800fd2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fd2e:	6163      	str	r3, [r4, #20]
 800fd30:	f001 fa7e 	bl	8011230 <NetworkDisplay::ShowIp()>
 800fd34:	b00b      	add	sp, #44	; 0x2c
 800fd36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd3a:	f1ba 0f00 	cmp.w	sl, #0
 800fd3e:	d0f0      	beq.n	800fd22 <Network::Init(NetworkParamsStore*)+0x192>
 800fd40:	9b04      	ldr	r3, [sp, #16]
 800fd42:	2b00      	cmp	r3, #0
 800fd44:	d0ed      	beq.n	800fd22 <Network::Init(NetworkParamsStore*)+0x192>
 800fd46:	2104      	movs	r1, #4
 800fd48:	f8d8 0000 	ldr.w	r0, [r8]
 800fd4c:	f002 f8a0 	bl	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800fd50:	2103      	movs	r1, #3
 800fd52:	4628      	mov	r0, r5
 800fd54:	f001 fa78 	bl	8011248 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fd58:	2000      	movs	r0, #0
 800fd5a:	f002 fb61 	bl	8012420 <time>
 800fd5e:	9005      	str	r0, [sp, #20]
 800fd60:	2000      	movs	r0, #0
 800fd62:	f002 fb5d 	bl	8012420 <time>
 800fd66:	9b05      	ldr	r3, [sp, #20]
 800fd68:	1ac0      	subs	r0, r0, r3
 800fd6a:	9b03      	ldr	r3, [sp, #12]
 800fd6c:	4298      	cmp	r0, r3
 800fd6e:	da1a      	bge.n	800fda6 <Network::Init(NetworkParamsStore*)+0x216>
 800fd70:	f8d8 3000 	ldr.w	r3, [r8]
 800fd74:	491d      	ldr	r1, [pc, #116]	; (800fdec <Network::Init(NetworkParamsStore*)+0x25c>)
 800fd76:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800fd7a:	f1bc 0f00 	cmp.w	ip, #0
 800fd7e:	d0ef      	beq.n	800fd60 <Network::Init(NetworkParamsStore*)+0x1d0>
 800fd80:	6808      	ldr	r0, [r1, #0]
 800fd82:	695a      	ldr	r2, [r3, #20]
 800fd84:	1a80      	subs	r0, r0, r2
 800fd86:	4584      	cmp	ip, r0
 800fd88:	d8ea      	bhi.n	800fd60 <Network::Init(NetworkParamsStore*)+0x1d0>
 800fd8a:	6808      	ldr	r0, [r1, #0]
 800fd8c:	6158      	str	r0, [r3, #20]
 800fd8e:	6918      	ldr	r0, [r3, #16]
 800fd90:	2801      	cmp	r0, #1
 800fd92:	f080 0201 	eor.w	r2, r0, #1
 800fd96:	611a      	str	r2, [r3, #16]
 800fd98:	bf16      	itet	ne
 800fd9a:	2301      	movne	r3, #1
 800fd9c:	f8cb 0014 	streq.w	r0, [fp, #20]
 800fda0:	f8cb 3010 	strne.w	r3, [fp, #16]
 800fda4:	e7dc      	b.n	800fd60 <Network::Init(NetworkParamsStore*)+0x1d0>
 800fda6:	2101      	movs	r1, #1
 800fda8:	4628      	mov	r0, r5
 800fdaa:	f001 fa4d 	bl	8011248 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fdae:	2101      	movs	r1, #1
 800fdb0:	f8d8 0000 	ldr.w	r0, [r8]
 800fdb4:	f002 f86c 	bl	8011e90 <LedBlink::SetMode(ledblink::Mode)>
 800fdb8:	2301      	movs	r3, #1
 800fdba:	7063      	strb	r3, [r4, #1]
 800fdbc:	2300      	movs	r3, #0
 800fdbe:	70e3      	strb	r3, [r4, #3]
 800fdc0:	9b02      	ldr	r3, [sp, #8]
 800fdc2:	4632      	mov	r2, r6
 800fdc4:	9300      	str	r3, [sp, #0]
 800fdc6:	4638      	mov	r0, r7
 800fdc8:	464b      	mov	r3, r9
 800fdca:	a907      	add	r1, sp, #28
 800fdcc:	f7f7 f9c0 	bl	8007150 <net_init>
 800fdd0:	7863      	ldrb	r3, [r4, #1]
 800fdd2:	2b00      	cmp	r3, #0
 800fdd4:	d0a3      	beq.n	800fd1e <Network::Init(NetworkParamsStore*)+0x18e>
 800fdd6:	e7a4      	b.n	800fd22 <Network::Init(NetworkParamsStore*)+0x192>
 800fdd8:	2000a28c 	andcs	sl, r0, ip, lsl #5
 800fddc:	08015b8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, fp, ip, lr}
 800fde0:	2000a2a1 	andcs	sl, r0, r1, lsr #5
 800fde4:	2000a9ac 	andcs	sl, r0, ip, lsr #19
 800fde8:	40011000 	andmi	r1, r1, r0
 800fdec:	2000a9c4 	andcs	sl, r0, r4, asr #19

0800fdf0 <Network::Print()>:
 800fdf0:	b530      	push	{r4, r5, lr}
 800fdf2:	4604      	mov	r4, r0
 800fdf4:	b085      	sub	sp, #20
 800fdf6:	4832      	ldr	r0, [pc, #200]	; (800fec0 <Network::Print()+0xd0>)
 800fdf8:	f7f9 fb8e 	bl	8009518 <printf>
 800fdfc:	f104 011c 	add.w	r1, r4, #28
 800fe00:	4830      	ldr	r0, [pc, #192]	; (800fec4 <Network::Print()+0xd4>)
 800fe02:	f7f9 fb89 	bl	8009518 <printf>
 800fe06:	6861      	ldr	r1, [r4, #4]
 800fe08:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800fe0c:	482e      	ldr	r0, [pc, #184]	; (800fec8 <Network::Print()+0xd8>)
 800fe0e:	f7f9 fb83 	bl	8009518 <printf>
 800fe12:	69a0      	ldr	r0, [r4, #24]
 800fe14:	f7f8 fcf6 	bl	8008804 <__popcountsi2>
 800fe18:	6925      	ldr	r5, [r4, #16]
 800fe1a:	9001      	str	r0, [sp, #4]
 800fe1c:	0e2b      	lsrs	r3, r5, #24
 800fe1e:	9300      	str	r3, [sp, #0]
 800fe20:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800fe24:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800fe28:	b2e9      	uxtb	r1, r5
 800fe2a:	4828      	ldr	r0, [pc, #160]	; (800fecc <Network::Print()+0xdc>)
 800fe2c:	f7f9 fb74 	bl	8009518 <printf>
 800fe30:	69a1      	ldr	r1, [r4, #24]
 800fe32:	4827      	ldr	r0, [pc, #156]	; (800fed0 <Network::Print()+0xe0>)
 800fe34:	0e0b      	lsrs	r3, r1, #24
 800fe36:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800fe3a:	9300      	str	r3, [sp, #0]
 800fe3c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800fe40:	b2c9      	uxtb	r1, r1
 800fe42:	f7f9 fb69 	bl	8009518 <printf>
 800fe46:	6961      	ldr	r1, [r4, #20]
 800fe48:	4822      	ldr	r0, [pc, #136]	; (800fed4 <Network::Print()+0xe4>)
 800fe4a:	0e0b      	lsrs	r3, r1, #24
 800fe4c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800fe50:	9300      	str	r3, [sp, #0]
 800fe52:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800fe56:	b2c9      	uxtb	r1, r1
 800fe58:	f7f9 fb5e 	bl	8009518 <printf>
 800fe5c:	69a3      	ldr	r3, [r4, #24]
 800fe5e:	6921      	ldr	r1, [r4, #16]
 800fe60:	481d      	ldr	r0, [pc, #116]	; (800fed8 <Network::Print()+0xe8>)
 800fe62:	ea61 0103 	orn	r1, r1, r3
 800fe66:	0e0b      	lsrs	r3, r1, #24
 800fe68:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800fe6c:	9300      	str	r3, [sp, #0]
 800fe6e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800fe72:	b2c9      	uxtb	r1, r1
 800fe74:	f7f9 fb50 	bl	8009518 <printf>
 800fe78:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800fe7c:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800fe80:	9302      	str	r3, [sp, #8]
 800fe82:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800fe86:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800fe8a:	9301      	str	r3, [sp, #4]
 800fe8c:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800fe90:	4812      	ldr	r0, [pc, #72]	; (800fedc <Network::Print()+0xec>)
 800fe92:	9300      	str	r3, [sp, #0]
 800fe94:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800fe98:	f7f9 fb3e 	bl	8009518 <printf>
 800fe9c:	4b10      	ldr	r3, [pc, #64]	; (800fee0 <Network::Print()+0xf0>)
 800fe9e:	681b      	ldr	r3, [r3, #0]
 800fea0:	78da      	ldrb	r2, [r3, #3]
 800fea2:	b952      	cbnz	r2, 800feba <Network::Print()+0xca>
 800fea4:	785b      	ldrb	r3, [r3, #1]
 800fea6:	2b00      	cmp	r3, #0
 800fea8:	bf14      	ite	ne
 800feaa:	2144      	movne	r1, #68	; 0x44
 800feac:	2153      	moveq	r1, #83	; 0x53
 800feae:	480d      	ldr	r0, [pc, #52]	; (800fee4 <Network::Print()+0xf4>)
 800feb0:	b005      	add	sp, #20
 800feb2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800feb6:	f7f9 bb2f 	b.w	8009518 <printf>
 800feba:	215a      	movs	r1, #90	; 0x5a
 800febc:	e7f7      	b.n	800feae <Network::Print()+0xbe>
 800febe:	bf00      	nop
 800fec0:	08015b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, lr}
 800fec4:	08015ba1 	stmdaeq	r1, {r0, r5, r7, r8, r9, fp, ip, lr}
 800fec8:	08015bb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, fp, ip, lr}
 800fecc:	08015bc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, fp, ip, lr}
 800fed0:	08015be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, ip, lr}
 800fed4:	08015bfe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, lr}
 800fed8:	08015c18 	stmdaeq	r1, {r3, r4, sl, fp, ip, lr}
 800fedc:	08015c32 	stmdaeq	r1, {r1, r4, r5, sl, fp, ip, lr}
 800fee0:	2000a288 	andcs	sl, r0, r8, lsl #5
 800fee4:	08015c5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sl, fp, ip, lr}

0800fee8 <Network::TcpBegin(unsigned short)>:
 800fee8:	4608      	mov	r0, r1
 800feea:	f7fe bffb 	b.w	800eee4 <tcp_begin>

0800feee <Network::TcpRead(int, unsigned char const**)>:
 800feee:	4608      	mov	r0, r1
 800fef0:	4611      	mov	r1, r2
 800fef2:	f7ff b835 	b.w	800ef60 <tcp_read>

0800fef6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800fef6:	4608      	mov	r0, r1
 800fef8:	4611      	mov	r1, r2
 800fefa:	461a      	mov	r2, r3
 800fefc:	f7ff b80c 	b.w	800ef18 <tcp_write>

0800ff00 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800ff00:	4b06      	ldr	r3, [pc, #24]	; (800ff1c <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800ff02:	b510      	push	{r4, lr}
 800ff04:	225e      	movs	r2, #94	; 0x5e
 800ff06:	4604      	mov	r4, r0
 800ff08:	6001      	str	r1, [r0, #0]
 800ff0a:	2100      	movs	r1, #0
 800ff0c:	4618      	mov	r0, r3
 800ff0e:	f002 f97b 	bl	8012208 <memset>
 800ff12:	2201      	movs	r2, #1
 800ff14:	7502      	strb	r2, [r0, #20]
 800ff16:	4620      	mov	r0, r4
 800ff18:	bd10      	pop	{r4, pc}
 800ff1a:	bf00      	nop
 800ff1c:	2000a28c 	andcs	sl, r0, ip, lsl #5

0800ff20 <NetworkParams::Load()>:
 800ff20:	b508      	push	{r3, lr}
 800ff22:	2300      	movs	r3, #0
 800ff24:	4905      	ldr	r1, [pc, #20]	; (800ff3c <NetworkParams::Load()+0x1c>)
 800ff26:	6800      	ldr	r0, [r0, #0]
 800ff28:	700b      	strb	r3, [r1, #0]
 800ff2a:	704b      	strb	r3, [r1, #1]
 800ff2c:	708b      	strb	r3, [r1, #2]
 800ff2e:	70cb      	strb	r3, [r1, #3]
 800ff30:	b118      	cbz	r0, 800ff3a <NetworkParams::Load()+0x1a>
 800ff32:	6803      	ldr	r3, [r0, #0]
 800ff34:	68db      	ldr	r3, [r3, #12]
 800ff36:	4798      	blx	r3
 800ff38:	2001      	movs	r0, #1
 800ff3a:	bd08      	pop	{r3, pc}
 800ff3c:	2000a28c 	andcs	sl, r0, ip, lsl #5

0800ff40 <NetworkParams::Load(char const*, unsigned int)>:
 800ff40:	6803      	ldr	r3, [r0, #0]
 800ff42:	b1eb      	cbz	r3, 800ff80 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800ff44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ff46:	2300      	movs	r3, #0
 800ff48:	460e      	mov	r6, r1
 800ff4a:	4617      	mov	r7, r2
 800ff4c:	4605      	mov	r5, r0
 800ff4e:	4c0d      	ldr	r4, [pc, #52]	; (800ff84 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800ff50:	4602      	mov	r2, r0
 800ff52:	490d      	ldr	r1, [pc, #52]	; (800ff88 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800ff54:	4668      	mov	r0, sp
 800ff56:	7023      	strb	r3, [r4, #0]
 800ff58:	7063      	strb	r3, [r4, #1]
 800ff5a:	70a3      	strb	r3, [r4, #2]
 800ff5c:	70e3      	strb	r3, [r4, #3]
 800ff5e:	f001 fac7 	bl	80114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ff62:	463a      	mov	r2, r7
 800ff64:	4631      	mov	r1, r6
 800ff66:	4668      	mov	r0, sp
 800ff68:	f001 fac6 	bl	80114f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800ff6c:	6828      	ldr	r0, [r5, #0]
 800ff6e:	4621      	mov	r1, r4
 800ff70:	6803      	ldr	r3, [r0, #0]
 800ff72:	689b      	ldr	r3, [r3, #8]
 800ff74:	4798      	blx	r3
 800ff76:	4668      	mov	r0, sp
 800ff78:	f001 fabd 	bl	80114f6 <ReadConfigFile::~ReadConfigFile()>
 800ff7c:	b003      	add	sp, #12
 800ff7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff80:	4770      	bx	lr
 800ff82:	bf00      	nop
 800ff84:	2000a28c 	andcs	sl, r0, ip, lsl #5
 800ff88:	080100bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7}

0800ff8c <NetworkParams::callbackFunction(char const*)>:
 800ff8c:	b530      	push	{r4, r5, lr}
 800ff8e:	460c      	mov	r4, r1
 800ff90:	b085      	sub	sp, #20
 800ff92:	4620      	mov	r0, r4
 800ff94:	4942      	ldr	r1, [pc, #264]	; (80100a0 <NetworkParams::callbackFunction(char const*)+0x114>)
 800ff96:	f10d 0207 	add.w	r2, sp, #7
 800ff9a:	f001 fbe4 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ff9e:	b980      	cbnz	r0, 800ffc2 <NetworkParams::callbackFunction(char const*)+0x36>
 800ffa0:	4940      	ldr	r1, [pc, #256]	; (80100a4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800ffa2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800ffa6:	680b      	ldr	r3, [r1, #0]
 800ffa8:	b142      	cbz	r2, 800ffbc <NetworkParams::callbackFunction(char const*)+0x30>
 800ffaa:	f023 0301 	bic.w	r3, r3, #1
 800ffae:	3a00      	subs	r2, #0
 800ffb0:	bf18      	it	ne
 800ffb2:	2201      	movne	r2, #1
 800ffb4:	600b      	str	r3, [r1, #0]
 800ffb6:	750a      	strb	r2, [r1, #20]
 800ffb8:	b005      	add	sp, #20
 800ffba:	bd30      	pop	{r4, r5, pc}
 800ffbc:	f043 0301 	orr.w	r3, r3, #1
 800ffc0:	e7f5      	b.n	800ffae <NetworkParams::callbackFunction(char const*)+0x22>
 800ffc2:	4620      	mov	r0, r4
 800ffc4:	4938      	ldr	r1, [pc, #224]	; (80100a8 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800ffc6:	f10d 0207 	add.w	r2, sp, #7
 800ffca:	f001 fbcc 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ffce:	b988      	cbnz	r0, 800fff4 <NetworkParams::callbackFunction(char const*)+0x68>
 800ffd0:	4a34      	ldr	r2, [pc, #208]	; (80100a4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800ffd2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ffd6:	6813      	ldr	r3, [r2, #0]
 800ffd8:	1e4d      	subs	r5, r1, #1
 800ffda:	2d04      	cmp	r5, #4
 800ffdc:	bf97      	itett	ls
 800ffde:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800ffe2:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800ffe6:	6013      	strls	r3, [r2, #0]
 800ffe8:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800ffec:	bf84      	itt	hi
 800ffee:	6013      	strhi	r3, [r2, #0]
 800fff0:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800fff4:	4620      	mov	r0, r4
 800fff6:	492d      	ldr	r1, [pc, #180]	; (80100ac <NetworkParams::callbackFunction(char const*)+0x120>)
 800fff8:	aa02      	add	r2, sp, #8
 800fffa:	f001 fb2d 	bl	8011658 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800fffe:	b9d0      	cbnz	r0, 8010036 <NetworkParams::callbackFunction(char const*)+0xaa>
 8010000:	9b02      	ldr	r3, [sp, #8]
 8010002:	b2d9      	uxtb	r1, r3
 8010004:	29ac      	cmp	r1, #172	; 0xac
 8010006:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801000a:	d00a      	beq.n	8010022 <NetworkParams::callbackFunction(char const*)+0x96>
 801000c:	29c0      	cmp	r1, #192	; 0xc0
 801000e:	d00c      	beq.n	801002a <NetworkParams::callbackFunction(char const*)+0x9e>
 8010010:	290a      	cmp	r1, #10
 8010012:	d10d      	bne.n	8010030 <NetworkParams::callbackFunction(char const*)+0xa4>
 8010014:	4a23      	ldr	r2, [pc, #140]	; (80100a4 <NetworkParams::callbackFunction(char const*)+0x118>)
 8010016:	6053      	str	r3, [r2, #4]
 8010018:	6813      	ldr	r3, [r2, #0]
 801001a:	f043 0302 	orr.w	r3, r3, #2
 801001e:	6013      	str	r3, [r2, #0]
 8010020:	e7ca      	b.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010022:	3a10      	subs	r2, #16
 8010024:	2a0f      	cmp	r2, #15
 8010026:	d8c7      	bhi.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010028:	e7f4      	b.n	8010014 <NetworkParams::callbackFunction(char const*)+0x88>
 801002a:	2aa8      	cmp	r2, #168	; 0xa8
 801002c:	d1c4      	bne.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 801002e:	e7f1      	b.n	8010014 <NetworkParams::callbackFunction(char const*)+0x88>
 8010030:	2b00      	cmp	r3, #0
 8010032:	d0ef      	beq.n	8010014 <NetworkParams::callbackFunction(char const*)+0x88>
 8010034:	e7c0      	b.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010036:	4620      	mov	r0, r4
 8010038:	491d      	ldr	r1, [pc, #116]	; (80100b0 <NetworkParams::callbackFunction(char const*)+0x124>)
 801003a:	aa02      	add	r2, sp, #8
 801003c:	f001 fb0c 	bl	8011658 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010040:	b970      	cbnz	r0, 8010060 <NetworkParams::callbackFunction(char const*)+0xd4>
 8010042:	9a02      	ldr	r2, [sp, #8]
 8010044:	2a00      	cmp	r2, #0
 8010046:	d0b7      	beq.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010048:	ba13      	rev	r3, r2
 801004a:	43d9      	mvns	r1, r3
 801004c:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 8010050:	d1b2      	bne.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010052:	4b14      	ldr	r3, [pc, #80]	; (80100a4 <NetworkParams::callbackFunction(char const*)+0x118>)
 8010054:	609a      	str	r2, [r3, #8]
 8010056:	681a      	ldr	r2, [r3, #0]
 8010058:	f042 0204 	orr.w	r2, r2, #4
 801005c:	601a      	str	r2, [r3, #0]
 801005e:	e7ab      	b.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010060:	4620      	mov	r0, r4
 8010062:	4914      	ldr	r1, [pc, #80]	; (80100b4 <NetworkParams::callbackFunction(char const*)+0x128>)
 8010064:	aa02      	add	r2, sp, #8
 8010066:	f001 faf7 	bl	8011658 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801006a:	4d0e      	ldr	r5, [pc, #56]	; (80100a4 <NetworkParams::callbackFunction(char const*)+0x118>)
 801006c:	b930      	cbnz	r0, 801007c <NetworkParams::callbackFunction(char const*)+0xf0>
 801006e:	9b02      	ldr	r3, [sp, #8]
 8010070:	60eb      	str	r3, [r5, #12]
 8010072:	682b      	ldr	r3, [r5, #0]
 8010074:	f043 0308 	orr.w	r3, r3, #8
 8010078:	602b      	str	r3, [r5, #0]
 801007a:	e79d      	b.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 801007c:	233f      	movs	r3, #63	; 0x3f
 801007e:	4620      	mov	r0, r4
 8010080:	9303      	str	r3, [sp, #12]
 8010082:	490d      	ldr	r1, [pc, #52]	; (80100b8 <NetworkParams::callbackFunction(char const*)+0x12c>)
 8010084:	ab03      	add	r3, sp, #12
 8010086:	f105 0215 	add.w	r2, r5, #21
 801008a:	f001 fa69 	bl	8011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 801008e:	2800      	cmp	r0, #0
 8010090:	d192      	bne.n	800ffb8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010092:	9b03      	ldr	r3, [sp, #12]
 8010094:	442b      	add	r3, r5
 8010096:	7558      	strb	r0, [r3, #21]
 8010098:	682b      	ldr	r3, [r5, #0]
 801009a:	f043 0320 	orr.w	r3, r3, #32
 801009e:	e7eb      	b.n	8010078 <NetworkParams::callbackFunction(char const*)+0xec>
 80100a0:	08015cb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, fp, ip, lr}
 80100a4:	2000a28c 	andcs	sl, r0, ip, lsl #5
 80100a8:	08015c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, lr}
 80100ac:	08015c79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, ip, lr}
 80100b0:	08015cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, ip, lr}
 80100b4:	08015c84 	stmdaeq	r1, {r2, r7, sl, fp, ip, lr}
 80100b8:	08015ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, ip, lr}

080100bc <NetworkParams::staticCallbackFunction(void*, char const*)>:
 80100bc:	f7ff bf66 	b.w	800ff8c <NetworkParams::callbackFunction(char const*)>

080100c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 80100c0:	b530      	push	{r4, r5, lr}
 80100c2:	4614      	mov	r4, r2
 80100c4:	461d      	mov	r5, r3
 80100c6:	b087      	sub	sp, #28
 80100c8:	2900      	cmp	r1, #0
 80100ca:	d040      	beq.n	801014e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 80100cc:	225e      	movs	r2, #94	; 0x5e
 80100ce:	4871      	ldr	r0, [pc, #452]	; (8010294 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 80100d0:	f002 f883 	bl	80121da <memmove>
 80100d4:	4622      	mov	r2, r4
 80100d6:	462b      	mov	r3, r5
 80100d8:	496f      	ldr	r1, [pc, #444]	; (8010298 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 80100da:	a803      	add	r0, sp, #12
 80100dc:	f001 f968 	bl	80113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80100e0:	4c6c      	ldr	r4, [pc, #432]	; (8010294 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 80100e2:	6823      	ldr	r3, [r4, #0]
 80100e4:	0799      	lsls	r1, r3, #30
 80100e6:	bf5f      	itttt	pl
 80100e8:	4a6c      	ldrpl	r2, [pc, #432]	; (801029c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80100ea:	6812      	ldrpl	r2, [r2, #0]
 80100ec:	6912      	ldrpl	r2, [r2, #16]
 80100ee:	6062      	strpl	r2, [r4, #4]
 80100f0:	075a      	lsls	r2, r3, #29
 80100f2:	bf5f      	itttt	pl
 80100f4:	4a69      	ldrpl	r2, [pc, #420]	; (801029c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80100f6:	6812      	ldrpl	r2, [r2, #0]
 80100f8:	6992      	ldrpl	r2, [r2, #24]
 80100fa:	60a2      	strpl	r2, [r4, #8]
 80100fc:	071d      	lsls	r5, r3, #28
 80100fe:	bf5f      	itttt	pl
 8010100:	4a66      	ldrpl	r2, [pc, #408]	; (801029c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8010102:	6812      	ldrpl	r2, [r2, #0]
 8010104:	6952      	ldrpl	r2, [r2, #20]
 8010106:	60e2      	strpl	r2, [r4, #12]
 8010108:	0698      	lsls	r0, r3, #26
 801010a:	d40c      	bmi.n	8010126 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 801010c:	223f      	movs	r2, #63	; 0x3f
 801010e:	4b63      	ldr	r3, [pc, #396]	; (801029c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8010110:	4863      	ldr	r0, [pc, #396]	; (80102a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010112:	681b      	ldr	r3, [r3, #0]
 8010114:	331b      	adds	r3, #27
 8010116:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801011a:	b9f1      	cbnz	r1, 801015a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 801011c:	f002 f874 	bl	8012208 <memset>
 8010120:	2300      	movs	r3, #0
 8010122:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010126:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801012a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801012e:	42a9      	cmp	r1, r5
 8010130:	d226      	bcs.n	8010180 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 8010132:	9803      	ldr	r0, [sp, #12]
 8010134:	1a6d      	subs	r5, r5, r1
 8010136:	4408      	add	r0, r1
 8010138:	6821      	ldr	r1, [r4, #0]
 801013a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801013e:	07c9      	lsls	r1, r1, #31
 8010140:	7d23      	ldrb	r3, [r4, #20]
 8010142:	d40f      	bmi.n	8010164 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8010144:	b97a      	cbnz	r2, 8010166 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 8010146:	9300      	str	r3, [sp, #0]
 8010148:	4a56      	ldr	r2, [pc, #344]	; (80102a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 801014a:	4b57      	ldr	r3, [pc, #348]	; (80102a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 801014c:	e00e      	b.n	801016c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 801014e:	6800      	ldr	r0, [r0, #0]
 8010150:	4950      	ldr	r1, [pc, #320]	; (8010294 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 8010152:	6803      	ldr	r3, [r0, #0]
 8010154:	68db      	ldr	r3, [r3, #12]
 8010156:	4798      	blx	r3
 8010158:	e7bc      	b.n	80100d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 801015a:	3a01      	subs	r2, #1
 801015c:	f800 1b01 	strb.w	r1, [r0], #1
 8010160:	d1d9      	bne.n	8010116 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 8010162:	e7dd      	b.n	8010120 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 8010164:	b30a      	cbz	r2, 80101aa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 8010166:	9300      	str	r3, [sp, #0]
 8010168:	4a50      	ldr	r2, [pc, #320]	; (80102ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 801016a:	4b4f      	ldr	r3, [pc, #316]	; (80102a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 801016c:	4629      	mov	r1, r5
 801016e:	f7f9 f9fb 	bl	8009568 <snprintf>
 8010172:	4285      	cmp	r5, r0
 8010174:	bfa2      	ittt	ge
 8010176:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801017a:	18c0      	addge	r0, r0, r3
 801017c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010180:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8010184:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010188:	42a9      	cmp	r1, r5
 801018a:	d221      	bcs.n	80101d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 801018c:	9803      	ldr	r0, [sp, #12]
 801018e:	1a6d      	subs	r5, r5, r1
 8010190:	4408      	add	r0, r1
 8010192:	6821      	ldr	r1, [r4, #0]
 8010194:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010198:	05c9      	lsls	r1, r1, #23
 801019a:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 801019e:	d408      	bmi.n	80101b2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 80101a0:	b94a      	cbnz	r2, 80101b6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 80101a2:	9300      	str	r3, [sp, #0]
 80101a4:	4a3f      	ldr	r2, [pc, #252]	; (80102a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 80101a6:	4b42      	ldr	r3, [pc, #264]	; (80102b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80101a8:	e008      	b.n	80101bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 80101aa:	9300      	str	r3, [sp, #0]
 80101ac:	4a41      	ldr	r2, [pc, #260]	; (80102b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 80101ae:	4b3e      	ldr	r3, [pc, #248]	; (80102a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 80101b0:	e7dc      	b.n	801016c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 80101b2:	2a00      	cmp	r2, #0
 80101b4:	d03e      	beq.n	8010234 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 80101b6:	9300      	str	r3, [sp, #0]
 80101b8:	4a3c      	ldr	r2, [pc, #240]	; (80102ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80101ba:	4b3d      	ldr	r3, [pc, #244]	; (80102b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80101bc:	4629      	mov	r1, r5
 80101be:	f7f9 f9d3 	bl	8009568 <snprintf>
 80101c2:	4285      	cmp	r5, r0
 80101c4:	bfa2      	ittt	ge
 80101c6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80101ca:	18c0      	addge	r0, r0, r3
 80101cc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80101d0:	4939      	ldr	r1, [pc, #228]	; (80102b8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 80101d2:	a803      	add	r0, sp, #12
 80101d4:	f001 f972 	bl	80114bc <PropertiesBuilder::AddComment(char const*)>
 80101d8:	6823      	ldr	r3, [r4, #0]
 80101da:	6862      	ldr	r2, [r4, #4]
 80101dc:	4937      	ldr	r1, [pc, #220]	; (80102bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 80101de:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80101e2:	a803      	add	r0, sp, #12
 80101e4:	f001 f926 	bl	8011434 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80101e8:	6823      	ldr	r3, [r4, #0]
 80101ea:	68a2      	ldr	r2, [r4, #8]
 80101ec:	4934      	ldr	r1, [pc, #208]	; (80102c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 80101ee:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80101f2:	a803      	add	r0, sp, #12
 80101f4:	f001 f91e 	bl	8011434 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80101f8:	6823      	ldr	r3, [r4, #0]
 80101fa:	4932      	ldr	r1, [pc, #200]	; (80102c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 80101fc:	68e2      	ldr	r2, [r4, #12]
 80101fe:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010202:	a803      	add	r0, sp, #12
 8010204:	f001 f916 	bl	8011434 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010208:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801020c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010210:	42a9      	cmp	r1, r5
 8010212:	d221      	bcs.n	8010258 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 8010214:	6823      	ldr	r3, [r4, #0]
 8010216:	9803      	ldr	r0, [sp, #12]
 8010218:	f013 0f20 	tst.w	r3, #32
 801021c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010220:	4b1f      	ldr	r3, [pc, #124]	; (80102a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010222:	4408      	add	r0, r1
 8010224:	eba5 0501 	sub.w	r5, r5, r1
 8010228:	d108      	bne.n	801023c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 801022a:	b942      	cbnz	r2, 801023e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 801022c:	9300      	str	r3, [sp, #0]
 801022e:	4a26      	ldr	r2, [pc, #152]	; (80102c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 8010230:	4b26      	ldr	r3, [pc, #152]	; (80102cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 8010232:	e007      	b.n	8010244 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 8010234:	9300      	str	r3, [sp, #0]
 8010236:	4a1f      	ldr	r2, [pc, #124]	; (80102b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8010238:	4b1d      	ldr	r3, [pc, #116]	; (80102b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 801023a:	e7bf      	b.n	80101bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 801023c:	b32a      	cbz	r2, 801028a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 801023e:	9300      	str	r3, [sp, #0]
 8010240:	4a23      	ldr	r2, [pc, #140]	; (80102d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 8010242:	4b22      	ldr	r3, [pc, #136]	; (80102cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 8010244:	4629      	mov	r1, r5
 8010246:	f7f9 f98f 	bl	8009568 <snprintf>
 801024a:	4285      	cmp	r5, r0
 801024c:	bfa2      	ittt	ge
 801024e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8010252:	18c0      	addge	r0, r0, r3
 8010254:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010258:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801025c:	b17b      	cbz	r3, 801027e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 801025e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010262:	9b03      	ldr	r3, [sp, #12]
 8010264:	4413      	add	r3, r2
 8010266:	227d      	movs	r2, #125	; 0x7d
 8010268:	f803 2c01 	strb.w	r2, [r3, #-1]
 801026c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010270:	9903      	ldr	r1, [sp, #12]
 8010272:	54ca      	strb	r2, [r1, r3]
 8010274:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010278:	3301      	adds	r3, #1
 801027a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801027e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010282:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010284:	601a      	str	r2, [r3, #0]
 8010286:	b007      	add	sp, #28
 8010288:	bd30      	pop	{r4, r5, pc}
 801028a:	9300      	str	r3, [sp, #0]
 801028c:	4a11      	ldr	r2, [pc, #68]	; (80102d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 801028e:	4b0f      	ldr	r3, [pc, #60]	; (80102cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 8010290:	e7d8      	b.n	8010244 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 8010292:	bf00      	nop
 8010294:	2000a28c 	andcs	sl, r0, ip, lsl #5
 8010298:	08015cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, ip, lr}
 801029c:	2000a288 	andcs	sl, r0, r8, lsl #5
 80102a0:	2000a2a1 	andcs	sl, r0, r1, lsr #5
 80102a4:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 80102a8:	08015cb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, fp, ip, lr}
 80102ac:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 80102b0:	08015c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, lr}
 80102b4:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}
 80102b8:	08015c6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, fp, ip, lr}
 80102bc:	08015c79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, ip, lr}
 80102c0:	08015cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, ip, lr}
 80102c4:	08015c84 	stmdaeq	r1, {r2, r7, sl, fp, ip, lr}
 80102c8:	0801456a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, lr}
 80102cc:	08015ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, ip, lr}
 80102d0:	0801455f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, lr}
 80102d4:	0801456b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, lr}

080102d8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 80102d8:	b513      	push	{r0, r1, r4, lr}
 80102da:	6804      	ldr	r4, [r0, #0]
 80102dc:	b914      	cbnz	r4, 80102e4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80102de:	601c      	str	r4, [r3, #0]
 80102e0:	b002      	add	sp, #8
 80102e2:	bd10      	pop	{r4, pc}
 80102e4:	9300      	str	r3, [sp, #0]
 80102e6:	4613      	mov	r3, r2
 80102e8:	460a      	mov	r2, r1
 80102ea:	2100      	movs	r1, #0
 80102ec:	f7ff fee8 	bl	80100c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 80102f0:	e7f6      	b.n	80102e0 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

080102f2 <NetworkParams::Dump()>:
 80102f2:	4770      	bx	lr

080102f4 <memcpy.isra.0>:
 80102f4:	3801      	subs	r0, #1
 80102f6:	440a      	add	r2, r1
 80102f8:	4291      	cmp	r1, r2
 80102fa:	d100      	bne.n	80102fe <memcpy.isra.0+0xa>
 80102fc:	4770      	bx	lr
 80102fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010302:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010306:	e7f7      	b.n	80102f8 <memcpy.isra.0+0x4>

08010308 <arp_announce>:
 8010308:	4803      	ldr	r0, [pc, #12]	; (8010318 <arp_announce+0x10>)
 801030a:	69c3      	ldr	r3, [r0, #28]
 801030c:	b113      	cbz	r3, 8010314 <arp_announce+0xc>
 801030e:	212a      	movs	r1, #42	; 0x2a
 8010310:	f002 be4c 	b.w	8012fac <emac_eth_send>
 8010314:	4770      	bx	lr
 8010316:	bf00      	nop
 8010318:	2000a2ec 	andcs	sl, r0, ip, ror #5

0801031c <arp_handle_request>:
 801031c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801031e:	2204      	movs	r2, #4
 8010320:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010324:	4604      	mov	r4, r0
 8010326:	eb0d 0002 	add.w	r0, sp, r2
 801032a:	f7ff ffe3 	bl	80102f4 <memcpy.isra.0>
 801032e:	4b0d      	ldr	r3, [pc, #52]	; (8010364 <arp_handle_request+0x48>)
 8010330:	9a01      	ldr	r2, [sp, #4]
 8010332:	69db      	ldr	r3, [r3, #28]
 8010334:	429a      	cmp	r2, r3
 8010336:	d113      	bne.n	8010360 <arp_handle_request+0x44>
 8010338:	2206      	movs	r2, #6
 801033a:	4d0b      	ldr	r5, [pc, #44]	; (8010368 <arp_handle_request+0x4c>)
 801033c:	18a1      	adds	r1, r4, r2
 801033e:	4628      	mov	r0, r5
 8010340:	f7ff ffd8 	bl	80102f4 <memcpy.isra.0>
 8010344:	f104 0116 	add.w	r1, r4, #22
 8010348:	f105 0020 	add.w	r0, r5, #32
 801034c:	2206      	movs	r2, #6
 801034e:	f7ff ffd1 	bl	80102f4 <memcpy.isra.0>
 8010352:	69e3      	ldr	r3, [r4, #28]
 8010354:	212a      	movs	r1, #42	; 0x2a
 8010356:	4628      	mov	r0, r5
 8010358:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 801035c:	f002 fe26 	bl	8012fac <emac_eth_send>
 8010360:	b003      	add	sp, #12
 8010362:	bd30      	pop	{r4, r5, pc}
 8010364:	2000a2ec 	andcs	sl, r0, ip, ror #5
 8010368:	2000a318 	andcs	sl, r0, r8, lsl r3

0801036c <arp_handle_reply>:
 801036c:	69c1      	ldr	r1, [r0, #28]
 801036e:	3016      	adds	r0, #22
 8010370:	f000 b80a 	b.w	8010388 <arp_cache_update>

08010374 <arp_send_request>:
 8010374:	4b03      	ldr	r3, [pc, #12]	; (8010384 <arp_send_request+0x10>)
 8010376:	212a      	movs	r1, #42	; 0x2a
 8010378:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 801037c:	4618      	mov	r0, r3
 801037e:	f002 be15 	b.w	8012fac <emac_eth_send>
 8010382:	bf00      	nop
 8010384:	2000a344 	andcs	sl, r0, r4, asr #6

08010388 <arp_cache_update>:
 8010388:	b5f0      	push	{r4, r5, r6, r7, lr}
 801038a:	4e11      	ldr	r6, [pc, #68]	; (80103d0 <arp_cache_update+0x48>)
 801038c:	8833      	ldrh	r3, [r6, #0]
 801038e:	2b20      	cmp	r3, #32
 8010390:	d018      	beq.n	80103c4 <arp_cache_update+0x3c>
 8010392:	2400      	movs	r4, #0
 8010394:	220c      	movs	r2, #12
 8010396:	4d0f      	ldr	r5, [pc, #60]	; (80103d4 <arp_cache_update+0x4c>)
 8010398:	b2a7      	uxth	r7, r4
 801039a:	42bb      	cmp	r3, r7
 801039c:	d80b      	bhi.n	80103b6 <arp_cache_update+0x2e>
 801039e:	fb02 5203 	mla	r2, r2, r3, r5
 80103a2:	1d84      	adds	r4, r0, #6
 80103a4:	3203      	adds	r2, #3
 80103a6:	42a0      	cmp	r0, r4
 80103a8:	d10d      	bne.n	80103c6 <arp_cache_update+0x3e>
 80103aa:	220c      	movs	r2, #12
 80103ac:	435a      	muls	r2, r3
 80103ae:	3301      	adds	r3, #1
 80103b0:	50a9      	str	r1, [r5, r2]
 80103b2:	8033      	strh	r3, [r6, #0]
 80103b4:	e006      	b.n	80103c4 <arp_cache_update+0x3c>
 80103b6:	3401      	adds	r4, #1
 80103b8:	fb02 5704 	mla	r7, r2, r4, r5
 80103bc:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 80103c0:	428f      	cmp	r7, r1
 80103c2:	d1e9      	bne.n	8010398 <arp_cache_update+0x10>
 80103c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103c6:	f810 7b01 	ldrb.w	r7, [r0], #1
 80103ca:	f802 7f01 	strb.w	r7, [r2, #1]!
 80103ce:	e7ea      	b.n	80103a6 <arp_cache_update+0x1e>
 80103d0:	2000a4f0 	strdcs	sl, [r0], -r0
 80103d4:	2000a370 	andcs	sl, r0, r0, ror r3

080103d8 <arp_cache_lookup>:
 80103d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80103dc:	2200      	movs	r2, #0
 80103de:	4606      	mov	r6, r0
 80103e0:	460c      	mov	r4, r1
 80103e2:	200c      	movs	r0, #12
 80103e4:	f8df 8084 	ldr.w	r8, [pc, #132]	; 801046c <arp_cache_lookup+0x94>
 80103e8:	fb00 f302 	mul.w	r3, r0, r2
 80103ec:	f853 1008 	ldr.w	r1, [r3, r8]
 80103f0:	42b1      	cmp	r1, r6
 80103f2:	d10d      	bne.n	8010410 <arp_cache_lookup+0x38>
 80103f4:	3304      	adds	r3, #4
 80103f6:	4443      	add	r3, r8
 80103f8:	3c01      	subs	r4, #1
 80103fa:	1d9a      	adds	r2, r3, #6
 80103fc:	4293      	cmp	r3, r2
 80103fe:	d102      	bne.n	8010406 <arp_cache_lookup+0x2e>
 8010400:	4630      	mov	r0, r6
 8010402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010406:	f813 1b01 	ldrb.w	r1, [r3], #1
 801040a:	f804 1f01 	strb.w	r1, [r4, #1]!
 801040e:	e7f5      	b.n	80103fc <arp_cache_lookup+0x24>
 8010410:	b111      	cbz	r1, 8010418 <arp_cache_lookup+0x40>
 8010412:	3201      	adds	r2, #1
 8010414:	2a20      	cmp	r2, #32
 8010416:	d1e7      	bne.n	80103e8 <arp_cache_lookup+0x10>
 8010418:	2704      	movs	r7, #4
 801041a:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010470 <arp_cache_lookup+0x98>
 801041e:	f8ba 5000 	ldrh.w	r5, [sl]
 8010422:	3f01      	subs	r7, #1
 8010424:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010428:	d101      	bne.n	801042e <arp_cache_lookup+0x56>
 801042a:	463e      	mov	r6, r7
 801042c:	e7e8      	b.n	8010400 <arp_cache_lookup+0x28>
 801042e:	4630      	mov	r0, r6
 8010430:	f7ff ffa0 	bl	8010374 <arp_send_request>
 8010434:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8010438:	f1b9 0901 	subs.w	r9, r9, #1
 801043c:	f8ba 3000 	ldrh.w	r3, [sl]
 8010440:	d011      	beq.n	8010466 <arp_cache_lookup+0x8e>
 8010442:	429d      	cmp	r5, r3
 8010444:	d00c      	beq.n	8010460 <arp_cache_lookup+0x88>
 8010446:	230c      	movs	r3, #12
 8010448:	fb03 8505 	mla	r5, r3, r5, r8
 801044c:	3c01      	subs	r4, #1
 801044e:	1d2b      	adds	r3, r5, #4
 8010450:	350a      	adds	r5, #10
 8010452:	42ab      	cmp	r3, r5
 8010454:	d0d4      	beq.n	8010400 <arp_cache_lookup+0x28>
 8010456:	f813 2b01 	ldrb.w	r2, [r3], #1
 801045a:	f804 2f01 	strb.w	r2, [r4, #1]!
 801045e:	e7f8      	b.n	8010452 <arp_cache_lookup+0x7a>
 8010460:	f7f7 f862 	bl	8007528 <net_handle>
 8010464:	e7e8      	b.n	8010438 <arp_cache_lookup+0x60>
 8010466:	429d      	cmp	r5, r3
 8010468:	d0db      	beq.n	8010422 <arp_cache_lookup+0x4a>
 801046a:	e7ec      	b.n	8010446 <arp_cache_lookup+0x6e>
 801046c:	2000a370 	andcs	sl, r0, r0, ror r3
 8010470:	2000a4f0 	strdcs	sl, [r0], -r0

08010474 <_parse_response>:
 8010474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010478:	460c      	mov	r4, r1
 801047a:	4e5b      	ldr	r6, [pc, #364]	; (80105e8 <_parse_response+0x174>)
 801047c:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 8010480:	6837      	ldr	r7, [r6, #0]
 8010482:	b2c5      	uxtb	r5, r0
 8010484:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8010488:	f7f7 f84e 	bl	8007528 <net_handle>
 801048c:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010490:	4628      	mov	r0, r5
 8010492:	f8cd 8000 	str.w	r8, [sp]
 8010496:	ab0a      	add	r3, sp, #40	; 0x28
 8010498:	a90b      	add	r1, sp, #44	; 0x2c
 801049a:	f7fe fe27 	bl	800f0ec <udp_recv>
 801049e:	2800      	cmp	r0, #0
 80104a0:	d05f      	beq.n	8010562 <_parse_response+0xee>
 80104a2:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80104a6:	2b43      	cmp	r3, #67	; 0x43
 80104a8:	d15b      	bne.n	8010562 <_parse_response+0xee>
 80104aa:	aa12      	add	r2, sp, #72	; 0x48
 80104ac:	1e63      	subs	r3, r4, #1
 80104ae:	1d61      	adds	r1, r4, #5
 80104b0:	428b      	cmp	r3, r1
 80104b2:	d150      	bne.n	8010556 <_parse_response+0xe2>
 80104b4:	2100      	movs	r1, #0
 80104b6:	ab0b      	add	r3, sp, #44	; 0x2c
 80104b8:	181c      	adds	r4, r3, r0
 80104ba:	4608      	mov	r0, r1
 80104bc:	4b4b      	ldr	r3, [pc, #300]	; (80105ec <_parse_response+0x178>)
 80104be:	e9cd 1104 	strd	r1, r1, [sp, #16]
 80104c2:	781a      	ldrb	r2, [r3, #0]
 80104c4:	f893 b001 	ldrb.w	fp, [r3, #1]
 80104c8:	f893 c002 	ldrb.w	ip, [r3, #2]
 80104cc:	78dd      	ldrb	r5, [r3, #3]
 80104ce:	4b48      	ldr	r3, [pc, #288]	; (80105f0 <_parse_response+0x17c>)
 80104d0:	9207      	str	r2, [sp, #28]
 80104d2:	781a      	ldrb	r2, [r3, #0]
 80104d4:	789f      	ldrb	r7, [r3, #2]
 80104d6:	78de      	ldrb	r6, [r3, #3]
 80104d8:	9206      	str	r2, [sp, #24]
 80104da:	785a      	ldrb	r2, [r3, #1]
 80104dc:	4b45      	ldr	r3, [pc, #276]	; (80105f4 <_parse_response+0x180>)
 80104de:	9203      	str	r2, [sp, #12]
 80104e0:	f893 a000 	ldrb.w	sl, [r3]
 80104e4:	f893 9001 	ldrb.w	r9, [r3, #1]
 80104e8:	f893 8002 	ldrb.w	r8, [r3, #2]
 80104ec:	f893 e003 	ldrb.w	lr, [r3, #3]
 80104f0:	ab47      	add	r3, sp, #284	; 0x11c
 80104f2:	42a3      	cmp	r3, r4
 80104f4:	d33f      	bcc.n	8010576 <_parse_response+0x102>
 80104f6:	9b04      	ldr	r3, [sp, #16]
 80104f8:	b143      	cbz	r3, 801050c <_parse_response+0x98>
 80104fa:	4b3e      	ldr	r3, [pc, #248]	; (80105f4 <_parse_response+0x180>)
 80104fc:	f883 a000 	strb.w	sl, [r3]
 8010500:	f883 9001 	strb.w	r9, [r3, #1]
 8010504:	f883 8002 	strb.w	r8, [r3, #2]
 8010508:	f883 e003 	strb.w	lr, [r3, #3]
 801050c:	9b05      	ldr	r3, [sp, #20]
 801050e:	b133      	cbz	r3, 801051e <_parse_response+0xaa>
 8010510:	4b37      	ldr	r3, [pc, #220]	; (80105f0 <_parse_response+0x17c>)
 8010512:	9a06      	ldr	r2, [sp, #24]
 8010514:	709f      	strb	r7, [r3, #2]
 8010516:	701a      	strb	r2, [r3, #0]
 8010518:	9a03      	ldr	r2, [sp, #12]
 801051a:	70de      	strb	r6, [r3, #3]
 801051c:	705a      	strb	r2, [r3, #1]
 801051e:	b139      	cbz	r1, 8010530 <_parse_response+0xbc>
 8010520:	4b32      	ldr	r3, [pc, #200]	; (80105ec <_parse_response+0x178>)
 8010522:	9a07      	ldr	r2, [sp, #28]
 8010524:	f883 b001 	strb.w	fp, [r3, #1]
 8010528:	701a      	strb	r2, [r3, #0]
 801052a:	f883 c002 	strb.w	ip, [r3, #2]
 801052e:	70dd      	strb	r5, [r3, #3]
 8010530:	2802      	cmp	r0, #2
 8010532:	d10c      	bne.n	801054e <_parse_response+0xda>
 8010534:	4b30      	ldr	r3, [pc, #192]	; (80105f8 <_parse_response+0x184>)
 8010536:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 801053a:	701a      	strb	r2, [r3, #0]
 801053c:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 8010540:	705a      	strb	r2, [r3, #1]
 8010542:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 8010546:	709a      	strb	r2, [r3, #2]
 8010548:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 801054c:	70da      	strb	r2, [r3, #3]
 801054e:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 8010552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010556:	f812 cb01 	ldrb.w	ip, [r2], #1
 801055a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 801055e:	45e6      	cmp	lr, ip
 8010560:	d0a6      	beq.n	80104b0 <_parse_response+0x3c>
 8010562:	6833      	ldr	r3, [r6, #0]
 8010564:	1bdb      	subs	r3, r3, r7
 8010566:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 801056a:	d38b      	bcc.n	8010484 <_parse_response+0x10>
 801056c:	2800      	cmp	r0, #0
 801056e:	d1a1      	bne.n	80104b4 <_parse_response+0x40>
 8010570:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010574:	e7eb      	b.n	801054e <_parse_response+0xda>
 8010576:	781a      	ldrb	r2, [r3, #0]
 8010578:	2a35      	cmp	r2, #53	; 0x35
 801057a:	d011      	beq.n	80105a0 <_parse_response+0x12c>
 801057c:	d808      	bhi.n	8010590 <_parse_response+0x11c>
 801057e:	2a01      	cmp	r2, #1
 8010580:	d011      	beq.n	80105a6 <_parse_response+0x132>
 8010582:	2a03      	cmp	r2, #3
 8010584:	d01a      	beq.n	80105bc <_parse_response+0x148>
 8010586:	b14a      	cbz	r2, 801059c <_parse_response+0x128>
 8010588:	1c9a      	adds	r2, r3, #2
 801058a:	785b      	ldrb	r3, [r3, #1]
 801058c:	4413      	add	r3, r2
 801058e:	e7b0      	b.n	80104f2 <_parse_response+0x7e>
 8010590:	2a36      	cmp	r2, #54	; 0x36
 8010592:	d01f      	beq.n	80105d4 <_parse_response+0x160>
 8010594:	2aff      	cmp	r2, #255	; 0xff
 8010596:	d1f7      	bne.n	8010588 <_parse_response+0x114>
 8010598:	4623      	mov	r3, r4
 801059a:	e7aa      	b.n	80104f2 <_parse_response+0x7e>
 801059c:	3301      	adds	r3, #1
 801059e:	e7a8      	b.n	80104f2 <_parse_response+0x7e>
 80105a0:	7898      	ldrb	r0, [r3, #2]
 80105a2:	3303      	adds	r3, #3
 80105a4:	e7a5      	b.n	80104f2 <_parse_response+0x7e>
 80105a6:	f893 a002 	ldrb.w	sl, [r3, #2]
 80105aa:	f893 9003 	ldrb.w	r9, [r3, #3]
 80105ae:	f893 8004 	ldrb.w	r8, [r3, #4]
 80105b2:	f893 e005 	ldrb.w	lr, [r3, #5]
 80105b6:	9204      	str	r2, [sp, #16]
 80105b8:	3306      	adds	r3, #6
 80105ba:	e79a      	b.n	80104f2 <_parse_response+0x7e>
 80105bc:	789a      	ldrb	r2, [r3, #2]
 80105be:	791f      	ldrb	r7, [r3, #4]
 80105c0:	9206      	str	r2, [sp, #24]
 80105c2:	78da      	ldrb	r2, [r3, #3]
 80105c4:	795e      	ldrb	r6, [r3, #5]
 80105c6:	9203      	str	r2, [sp, #12]
 80105c8:	785a      	ldrb	r2, [r3, #1]
 80105ca:	4413      	add	r3, r2
 80105cc:	2201      	movs	r2, #1
 80105ce:	3302      	adds	r3, #2
 80105d0:	9205      	str	r2, [sp, #20]
 80105d2:	e78e      	b.n	80104f2 <_parse_response+0x7e>
 80105d4:	789a      	ldrb	r2, [r3, #2]
 80105d6:	f893 b003 	ldrb.w	fp, [r3, #3]
 80105da:	f893 c004 	ldrb.w	ip, [r3, #4]
 80105de:	795d      	ldrb	r5, [r3, #5]
 80105e0:	2101      	movs	r1, #1
 80105e2:	9207      	str	r2, [sp, #28]
 80105e4:	3306      	adds	r3, #6
 80105e6:	e784      	b.n	80104f2 <_parse_response+0x7e>
 80105e8:	2000a9c4 	andcs	sl, r0, r4, asr #19
 80105ec:	2000a724 	andcs	sl, r0, r4, lsr #14
 80105f0:	2000a4f4 	strdcs	sl, [r0], -r4
 80105f4:	2000a4fc 	strdcs	sl, [r0], -ip
 80105f8:	2000a4f8 	strdcs	sl, [r0], -r8

080105fc <memcpy.isra.0>:
 80105fc:	3801      	subs	r0, #1
 80105fe:	440a      	add	r2, r1
 8010600:	4291      	cmp	r1, r2
 8010602:	d100      	bne.n	8010606 <memcpy.isra.0+0xa>
 8010604:	4770      	bx	lr
 8010606:	f811 3b01 	ldrb.w	r3, [r1], #1
 801060a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801060e:	e7f7      	b.n	8010600 <memcpy.isra.0+0x4>

08010610 <dhcp_client>:
 8010610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010614:	b087      	sub	sp, #28
 8010616:	9203      	str	r2, [sp, #12]
 8010618:	4a77      	ldr	r2, [pc, #476]	; (80107f8 <dhcp_client+0x1e8>)
 801061a:	460f      	mov	r7, r1
 801061c:	4605      	mov	r5, r0
 801061e:	f44f 7309 	mov.w	r3, #548	; 0x224
 8010622:	4614      	mov	r4, r2
 8010624:	2100      	movs	r1, #0
 8010626:	3b01      	subs	r3, #1
 8010628:	f802 1b01 	strb.w	r1, [r2], #1
 801062c:	d1fb      	bne.n	8010626 <dhcp_client+0x16>
 801062e:	f240 1301 	movw	r3, #257	; 0x101
 8010632:	2206      	movs	r2, #6
 8010634:	4629      	mov	r1, r5
 8010636:	4871      	ldr	r0, [pc, #452]	; (80107fc <dhcp_client+0x1ec>)
 8010638:	8023      	strh	r3, [r4, #0]
 801063a:	70a2      	strb	r2, [r4, #2]
 801063c:	f7ff ffde 	bl	80105fc <memcpy.isra.0>
 8010640:	4b6f      	ldr	r3, [pc, #444]	; (8010800 <dhcp_client+0x1f0>)
 8010642:	2044      	movs	r0, #68	; 0x44
 8010644:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010648:	f240 1335 	movw	r3, #309	; 0x135
 801064c:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8010650:	f7fe fd12 	bl	800f078 <udp_bind>
 8010654:	1e06      	subs	r6, r0, #0
 8010656:	f2c0 80c9 	blt.w	80107ec <dhcp_client+0x1dc>
 801065a:	f04f 0915 	mov.w	r9, #21
 801065e:	f8df a198 	ldr.w	sl, [pc, #408]	; 80107f8 <dhcp_client+0x1e8>
 8010662:	f1b9 0901 	subs.w	r9, r9, #1
 8010666:	d11f      	bne.n	80106a8 <dhcp_client+0x98>
 8010668:	464c      	mov	r4, r9
 801066a:	2044      	movs	r0, #68	; 0x44
 801066c:	f7fe fd1e 	bl	800f0ac <udp_unbind>
 8010670:	2c00      	cmp	r4, #0
 8010672:	f000 80be 	beq.w	80107f2 <dhcp_client+0x1e2>
 8010676:	2204      	movs	r2, #4
 8010678:	4962      	ldr	r1, [pc, #392]	; (8010804 <dhcp_client+0x1f4>)
 801067a:	a805      	add	r0, sp, #20
 801067c:	f7ff ffbe 	bl	80105fc <memcpy.isra.0>
 8010680:	9b05      	ldr	r3, [sp, #20]
 8010682:	2204      	movs	r2, #4
 8010684:	4960      	ldr	r1, [pc, #384]	; (8010808 <dhcp_client+0x1f8>)
 8010686:	603b      	str	r3, [r7, #0]
 8010688:	a805      	add	r0, sp, #20
 801068a:	f7ff ffb7 	bl	80105fc <memcpy.isra.0>
 801068e:	9b05      	ldr	r3, [sp, #20]
 8010690:	a805      	add	r0, sp, #20
 8010692:	60bb      	str	r3, [r7, #8]
 8010694:	2204      	movs	r2, #4
 8010696:	495d      	ldr	r1, [pc, #372]	; (801080c <dhcp_client+0x1fc>)
 8010698:	f7ff ffb0 	bl	80105fc <memcpy.isra.0>
 801069c:	2000      	movs	r0, #0
 801069e:	9b05      	ldr	r3, [sp, #20]
 80106a0:	607b      	str	r3, [r7, #4]
 80106a2:	b007      	add	sp, #28
 80106a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106a8:	f643 5301 	movw	r3, #15617	; 0x3d01
 80106ac:	f240 1807 	movw	r8, #263	; 0x107
 80106b0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80106b4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80106b8:	782b      	ldrb	r3, [r5, #0]
 80106ba:	4a55      	ldr	r2, [pc, #340]	; (8010810 <dhcp_client+0x200>)
 80106bc:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80106c0:	786b      	ldrb	r3, [r5, #1]
 80106c2:	fa5f fb86 	uxtb.w	fp, r6
 80106c6:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80106ca:	78ab      	ldrb	r3, [r5, #2]
 80106cc:	4651      	mov	r1, sl
 80106ce:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80106d2:	78eb      	ldrb	r3, [r5, #3]
 80106d4:	4658      	mov	r0, fp
 80106d6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80106da:	792b      	ldrb	r3, [r5, #4]
 80106dc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 80106e0:	796b      	ldrb	r3, [r5, #5]
 80106e2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 80106e6:	4b4b      	ldr	r3, [pc, #300]	; (8010814 <dhcp_client+0x204>)
 80106e8:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 80106ec:	23ff      	movs	r3, #255	; 0xff
 80106ee:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80106f2:	2343      	movs	r3, #67	; 0x43
 80106f4:	f240 1205 	movw	r2, #261	; 0x105
 80106f8:	9300      	str	r3, [sp, #0]
 80106fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80106fe:	f7fe fd51 	bl	800f1a4 <udp_send>
 8010702:	4629      	mov	r1, r5
 8010704:	4630      	mov	r0, r6
 8010706:	f7ff feb5 	bl	8010474 <_parse_response>
 801070a:	2802      	cmp	r0, #2
 801070c:	d1a9      	bne.n	8010662 <dhcp_client+0x52>
 801070e:	f643 5303 	movw	r3, #15619	; 0x3d03
 8010712:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010716:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 801071a:	782b      	ldrb	r3, [r5, #0]
 801071c:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8010818 <dhcp_client+0x208>
 8010720:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010724:	786b      	ldrb	r3, [r5, #1]
 8010726:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 801072a:	78ab      	ldrb	r3, [r5, #2]
 801072c:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010730:	78eb      	ldrb	r3, [r5, #3]
 8010732:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010736:	792b      	ldrb	r3, [r5, #4]
 8010738:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 801073c:	796b      	ldrb	r3, [r5, #5]
 801073e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010742:	f240 4332 	movw	r3, #1074	; 0x432
 8010746:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 801074a:	4b2e      	ldr	r3, [pc, #184]	; (8010804 <dhcp_client+0x1f4>)
 801074c:	881a      	ldrh	r2, [r3, #0]
 801074e:	885b      	ldrh	r3, [r3, #2]
 8010750:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8010754:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8010758:	f240 4336 	movw	r3, #1078	; 0x436
 801075c:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8010760:	4b2e      	ldr	r3, [pc, #184]	; (801081c <dhcp_client+0x20c>)
 8010762:	221e      	movs	r2, #30
 8010764:	681b      	ldr	r3, [r3, #0]
 8010766:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 801076a:	230c      	movs	r3, #12
 801076c:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8010770:	9b03      	ldr	r3, [sp, #12]
 8010772:	1e58      	subs	r0, r3, #1
 8010774:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8010778:	f1a2 0e1e 	sub.w	lr, r2, #30
 801077c:	1c51      	adds	r1, r2, #1
 801077e:	bb8b      	cbnz	r3, 80107e4 <dhcp_client+0x1d4>
 8010780:	2037      	movs	r0, #55	; 0x37
 8010782:	18a3      	adds	r3, r4, r2
 8010784:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8010788:	2006      	movs	r0, #6
 801078a:	4421      	add	r1, r4
 801078c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8010790:	2103      	movs	r1, #3
 8010792:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8010796:	210f      	movs	r1, #15
 8010798:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 801079c:	213a      	movs	r1, #58	; 0x3a
 801079e:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80107a2:	213b      	movs	r1, #59	; 0x3b
 80107a4:	f04f 0801 	mov.w	r8, #1
 80107a8:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80107ac:	21ff      	movs	r1, #255	; 0xff
 80107ae:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80107b2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 80107b6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 80107ba:	2343      	movs	r3, #67	; 0x43
 80107bc:	32f5      	adds	r2, #245	; 0xf5
 80107be:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 80107c2:	4651      	mov	r1, sl
 80107c4:	9300      	str	r3, [sp, #0]
 80107c6:	b292      	uxth	r2, r2
 80107c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80107cc:	4658      	mov	r0, fp
 80107ce:	f7fe fce9 	bl	800f1a4 <udp_send>
 80107d2:	4629      	mov	r1, r5
 80107d4:	4630      	mov	r0, r6
 80107d6:	f7ff fe4d 	bl	8010474 <_parse_response>
 80107da:	2805      	cmp	r0, #5
 80107dc:	f47f af41 	bne.w	8010662 <dhcp_client+0x52>
 80107e0:	4644      	mov	r4, r8
 80107e2:	e742      	b.n	801066a <dhcp_client+0x5a>
 80107e4:	460a      	mov	r2, r1
 80107e6:	f80c 3b01 	strb.w	r3, [ip], #1
 80107ea:	e7c3      	b.n	8010774 <dhcp_client+0x164>
 80107ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80107f0:	e757      	b.n	80106a2 <dhcp_client+0x92>
 80107f2:	f06f 0001 	mvn.w	r0, #1
 80107f6:	e754      	b.n	80106a2 <dhcp_client+0x92>
 80107f8:	2000a500 	andcs	sl, r0, r0, lsl #10
 80107fc:	2000a51c 	andcs	sl, r0, ip, lsl r5
 8010800:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8010804:	2000a4f8 	strdcs	sl, [r0], -r8
 8010808:	2000a4f4 	strdcs	sl, [r0], -r4
 801080c:	2000a4fc 	strdcs	sl, [r0], -ip
 8010810:	03010637 	movweq	r0, #5687	; 0x1637
 8010814:	3b3a0f06 	blcc	8e94434 <__exidx_end+0xe7dfa8>
 8010818:	2000a60a 	andcs	sl, r0, sl, lsl #12
 801081c:	2000a724 	andcs	sl, r0, r4, lsr #14

08010820 <dhcp_client_release>:
 8010820:	b507      	push	{r0, r1, r2, lr}
 8010822:	2044      	movs	r0, #68	; 0x44
 8010824:	f7fe fc28 	bl	800f078 <udp_bind>
 8010828:	f243 6307 	movw	r3, #13831	; 0x3607
 801082c:	4911      	ldr	r1, [pc, #68]	; (8010874 <dhcp_client_release+0x54>)
 801082e:	b2c0      	uxtb	r0, r0
 8010830:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8010834:	2304      	movs	r3, #4
 8010836:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 801083a:	4b0f      	ldr	r3, [pc, #60]	; (8010878 <dhcp_client_release+0x58>)
 801083c:	781a      	ldrb	r2, [r3, #0]
 801083e:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8010842:	785a      	ldrb	r2, [r3, #1]
 8010844:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8010848:	789a      	ldrb	r2, [r3, #2]
 801084a:	78db      	ldrb	r3, [r3, #3]
 801084c:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8010850:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8010854:	23ff      	movs	r3, #255	; 0xff
 8010856:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 801085a:	2343      	movs	r3, #67	; 0x43
 801085c:	22fa      	movs	r2, #250	; 0xfa
 801085e:	9300      	str	r3, [sp, #0]
 8010860:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010864:	f7fe fc9e 	bl	800f1a4 <udp_send>
 8010868:	2044      	movs	r0, #68	; 0x44
 801086a:	b003      	add	sp, #12
 801086c:	f85d eb04 	ldr.w	lr, [sp], #4
 8010870:	f7fe bc1c 	b.w	800f0ac <udp_unbind>
 8010874:	2000a500 	andcs	sl, r0, r0, lsl #10
 8010878:	2000a724 	andcs	sl, r0, r4, lsr #14

0801087c <memcpy.isra.0>:
 801087c:	3801      	subs	r0, #1
 801087e:	440a      	add	r2, r1
 8010880:	4291      	cmp	r1, r2
 8010882:	d100      	bne.n	8010886 <memcpy.isra.0+0xa>
 8010884:	4770      	bx	lr
 8010886:	f811 3b01 	ldrb.w	r3, [r1], #1
 801088a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801088e:	e7f7      	b.n	8010880 <memcpy.isra.0+0x4>

08010890 <_send_report>:
 8010890:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010892:	491c      	ldr	r1, [pc, #112]	; (8010904 <_send_report+0x74>)
 8010894:	4c1c      	ldr	r4, [pc, #112]	; (8010908 <_send_report+0x78>)
 8010896:	f3c0 2306 	ubfx	r3, r0, #8, #7
 801089a:	9001      	str	r0, [sp, #4]
 801089c:	70cb      	strb	r3, [r1, #3]
 801089e:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80108a2:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80108a6:	710b      	strb	r3, [r1, #4]
 80108a8:	7148      	strb	r0, [r1, #5]
 80108aa:	2206      	movs	r2, #6
 80108ac:	4620      	mov	r0, r4
 80108ae:	f7ff ffe5 	bl	801087c <memcpy.isra.0>
 80108b2:	2204      	movs	r2, #4
 80108b4:	2700      	movs	r7, #0
 80108b6:	4d15      	ldr	r5, [pc, #84]	; (801090c <_send_report+0x7c>)
 80108b8:	eb0d 0102 	add.w	r1, sp, r2
 80108bc:	882b      	ldrh	r3, [r5, #0]
 80108be:	f104 001e 	add.w	r0, r4, #30
 80108c2:	f104 060e 	add.w	r6, r4, #14
 80108c6:	8263      	strh	r3, [r4, #18]
 80108c8:	f7ff ffd8 	bl	801087c <memcpy.isra.0>
 80108cc:	2118      	movs	r1, #24
 80108ce:	4630      	mov	r0, r6
 80108d0:	8327      	strh	r7, [r4, #24]
 80108d2:	f000 f8c6 	bl	8010a62 <net_chksum>
 80108d6:	2204      	movs	r2, #4
 80108d8:	8320      	strh	r0, [r4, #24]
 80108da:	eb0d 0102 	add.w	r1, sp, r2
 80108de:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 80108e2:	f7ff ffcb 	bl	801087c <memcpy.isra.0>
 80108e6:	2120      	movs	r1, #32
 80108e8:	4630      	mov	r0, r6
 80108ea:	8527      	strh	r7, [r4, #40]	; 0x28
 80108ec:	f000 f8b9 	bl	8010a62 <net_chksum>
 80108f0:	212e      	movs	r1, #46	; 0x2e
 80108f2:	8520      	strh	r0, [r4, #40]	; 0x28
 80108f4:	4620      	mov	r0, r4
 80108f6:	f002 fb59 	bl	8012fac <emac_eth_send>
 80108fa:	882b      	ldrh	r3, [r5, #0]
 80108fc:	3301      	adds	r3, #1
 80108fe:	802b      	strh	r3, [r5, #0]
 8010900:	b003      	add	sp, #12
 8010902:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010904:	2000a880 	andcs	sl, r0, r0, lsl #17
 8010908:	2000a888 	andcs	sl, r0, r8, lsl #17
 801090c:	2000a848 	andcs	sl, r0, r8, asr #16

08010910 <igmp_set_ip>:
 8010910:	b507      	push	{r0, r1, r2, lr}
 8010912:	2204      	movs	r2, #4
 8010914:	6803      	ldr	r3, [r0, #0]
 8010916:	eb0d 0102 	add.w	r1, sp, r2
 801091a:	4806      	ldr	r0, [pc, #24]	; (8010934 <igmp_set_ip+0x24>)
 801091c:	9301      	str	r3, [sp, #4]
 801091e:	f7ff ffad 	bl	801087c <memcpy.isra.0>
 8010922:	2204      	movs	r2, #4
 8010924:	4804      	ldr	r0, [pc, #16]	; (8010938 <igmp_set_ip+0x28>)
 8010926:	eb0d 0102 	add.w	r1, sp, r2
 801092a:	f7ff ffa7 	bl	801087c <memcpy.isra.0>
 801092e:	b003      	add	sp, #12
 8010930:	f85d fb04 	ldr.w	pc, [sp], #4
 8010934:	2000a8a2 	andcs	sl, r0, r2, lsr #17
 8010938:	2000a86a 	andcs	sl, r0, sl, ror #16

0801093c <igmp_timer>:
 801093c:	b570      	push	{r4, r5, r6, lr}
 801093e:	2500      	movs	r5, #0
 8010940:	2602      	movs	r6, #2
 8010942:	4c0a      	ldr	r4, [pc, #40]	; (801096c <igmp_timer+0x30>)
 8010944:	7963      	ldrb	r3, [r4, #5]
 8010946:	2b01      	cmp	r3, #1
 8010948:	d109      	bne.n	801095e <igmp_timer+0x22>
 801094a:	7923      	ldrb	r3, [r4, #4]
 801094c:	b13b      	cbz	r3, 801095e <igmp_timer+0x22>
 801094e:	3b01      	subs	r3, #1
 8010950:	b2db      	uxtb	r3, r3
 8010952:	7123      	strb	r3, [r4, #4]
 8010954:	b91b      	cbnz	r3, 801095e <igmp_timer+0x22>
 8010956:	6820      	ldr	r0, [r4, #0]
 8010958:	f7ff ff9a 	bl	8010890 <_send_report>
 801095c:	7166      	strb	r6, [r4, #5]
 801095e:	3501      	adds	r5, #1
 8010960:	2d24      	cmp	r5, #36	; 0x24
 8010962:	f104 0408 	add.w	r4, r4, #8
 8010966:	d1ed      	bne.n	8010944 <igmp_timer+0x8>
 8010968:	bd70      	pop	{r4, r5, r6, pc}
 801096a:	bf00      	nop
 801096c:	2000a728 	andcs	sl, r0, r8, lsr #14

08010970 <igmp_join>:
 8010970:	b538      	push	{r3, r4, r5, lr}
 8010972:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8010976:	2be0      	cmp	r3, #224	; 0xe0
 8010978:	d11b      	bne.n	80109b2 <igmp_join+0x42>
 801097a:	4911      	ldr	r1, [pc, #68]	; (80109c0 <igmp_join+0x50>)
 801097c:	680c      	ldr	r4, [r1, #0]
 801097e:	2c24      	cmp	r4, #36	; 0x24
 8010980:	d01a      	beq.n	80109b8 <igmp_join+0x48>
 8010982:	2300      	movs	r3, #0
 8010984:	4a0f      	ldr	r2, [pc, #60]	; (80109c4 <igmp_join+0x54>)
 8010986:	429c      	cmp	r4, r3
 8010988:	dc0d      	bgt.n	80109a6 <igmp_join+0x36>
 801098a:	f44f 7381 	mov.w	r3, #258	; 0x102
 801098e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8010992:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8010996:	8093      	strh	r3, [r2, #4]
 8010998:	1c63      	adds	r3, r4, #1
 801099a:	600b      	str	r3, [r1, #0]
 801099c:	f7ff ff78 	bl	8010890 <_send_report>
 80109a0:	4623      	mov	r3, r4
 80109a2:	4618      	mov	r0, r3
 80109a4:	bd38      	pop	{r3, r4, r5, pc}
 80109a6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80109aa:	4285      	cmp	r5, r0
 80109ac:	d0f9      	beq.n	80109a2 <igmp_join+0x32>
 80109ae:	3301      	adds	r3, #1
 80109b0:	e7e9      	b.n	8010986 <igmp_join+0x16>
 80109b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80109b6:	e7f4      	b.n	80109a2 <igmp_join+0x32>
 80109b8:	f06f 0301 	mvn.w	r3, #1
 80109bc:	e7f1      	b.n	80109a2 <igmp_join+0x32>
 80109be:	bf00      	nop
 80109c0:	2000a84c 	andcs	sl, r0, ip, asr #16
 80109c4:	2000a728 	andcs	sl, r0, r8, lsr #14

080109c8 <igmp_leave>:
 80109c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80109cc:	2600      	movs	r6, #0
 80109ce:	4f1c      	ldr	r7, [pc, #112]	; (8010a40 <igmp_leave+0x78>)
 80109d0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 80109d4:	4283      	cmp	r3, r0
 80109d6:	d007      	beq.n	80109e8 <igmp_leave+0x20>
 80109d8:	3601      	adds	r6, #1
 80109da:	2e24      	cmp	r6, #36	; 0x24
 80109dc:	d1f8      	bne.n	80109d0 <igmp_leave+0x8>
 80109de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80109e2:	b002      	add	sp, #8
 80109e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80109e8:	2400      	movs	r4, #0
 80109ea:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8010a44 <igmp_leave+0x7c>
 80109ee:	4d16      	ldr	r5, [pc, #88]	; (8010a48 <igmp_leave+0x80>)
 80109f0:	f8b8 3000 	ldrh.w	r3, [r8]
 80109f4:	2118      	movs	r1, #24
 80109f6:	9001      	str	r0, [sp, #4]
 80109f8:	4814      	ldr	r0, [pc, #80]	; (8010a4c <igmp_leave+0x84>)
 80109fa:	826b      	strh	r3, [r5, #18]
 80109fc:	832c      	strh	r4, [r5, #24]
 80109fe:	f000 f830 	bl	8010a62 <net_chksum>
 8010a02:	2204      	movs	r2, #4
 8010a04:	8328      	strh	r0, [r5, #24]
 8010a06:	eb0d 0102 	add.w	r1, sp, r2
 8010a0a:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8010a0e:	f7ff ff35 	bl	801087c <memcpy.isra.0>
 8010a12:	2120      	movs	r1, #32
 8010a14:	f105 000e 	add.w	r0, r5, #14
 8010a18:	852c      	strh	r4, [r5, #40]	; 0x28
 8010a1a:	f000 f822 	bl	8010a62 <net_chksum>
 8010a1e:	212e      	movs	r1, #46	; 0x2e
 8010a20:	8528      	strh	r0, [r5, #40]	; 0x28
 8010a22:	4628      	mov	r0, r5
 8010a24:	f002 fac2 	bl	8012fac <emac_eth_send>
 8010a28:	f8b8 3000 	ldrh.w	r3, [r8]
 8010a2c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8010a30:	3301      	adds	r3, #1
 8010a32:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 8010a36:	4620      	mov	r0, r4
 8010a38:	f8a8 3000 	strh.w	r3, [r8]
 8010a3c:	80b4      	strh	r4, [r6, #4]
 8010a3e:	e7d0      	b.n	80109e2 <igmp_leave+0x1a>
 8010a40:	2000a728 	andcs	sl, r0, r8, lsr #14
 8010a44:	2000a848 	andcs	sl, r0, r8, asr #16
 8010a48:	2000a850 	andcs	sl, r0, r0, asr r8
 8010a4c:	2000a896 	mulcs	r0, r6, r8

08010a50 <ip_set_ip>:
 8010a50:	b510      	push	{r4, lr}
 8010a52:	4604      	mov	r4, r0
 8010a54:	f7fe faf0 	bl	800f038 <udp_set_ip>
 8010a58:	4620      	mov	r0, r4
 8010a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a5e:	f7ff bf57 	b.w	8010910 <igmp_set_ip>

08010a62 <net_chksum>:
 8010a62:	2300      	movs	r3, #0
 8010a64:	f021 0201 	bic.w	r2, r1, #1
 8010a68:	b530      	push	{r4, r5, lr}
 8010a6a:	4402      	add	r2, r0
 8010a6c:	084c      	lsrs	r4, r1, #1
 8010a6e:	4290      	cmp	r0, r2
 8010a70:	d10e      	bne.n	8010a90 <net_chksum+0x2e>
 8010a72:	f06f 0201 	mvn.w	r2, #1
 8010a76:	fb02 1104 	mla	r1, r2, r4, r1
 8010a7a:	b121      	cbz	r1, 8010a86 <net_chksum+0x24>
 8010a7c:	7802      	ldrb	r2, [r0, #0]
 8010a7e:	0212      	lsls	r2, r2, #8
 8010a80:	ba52      	rev16	r2, r2
 8010a82:	b292      	uxth	r2, r2
 8010a84:	4413      	add	r3, r2
 8010a86:	0c1a      	lsrs	r2, r3, #16
 8010a88:	d106      	bne.n	8010a98 <net_chksum+0x36>
 8010a8a:	43d8      	mvns	r0, r3
 8010a8c:	b280      	uxth	r0, r0
 8010a8e:	bd30      	pop	{r4, r5, pc}
 8010a90:	f830 5b02 	ldrh.w	r5, [r0], #2
 8010a94:	442b      	add	r3, r5
 8010a96:	e7ea      	b.n	8010a6e <net_chksum+0xc>
 8010a98:	b29b      	uxth	r3, r3
 8010a9a:	e7f3      	b.n	8010a84 <net_chksum+0x22>

08010a9c <memcpy.isra.0>:
 8010a9c:	3801      	subs	r0, #1
 8010a9e:	440a      	add	r2, r1
 8010aa0:	4291      	cmp	r1, r2
 8010aa2:	d100      	bne.n	8010aa6 <memcpy.isra.0+0xa>
 8010aa4:	4770      	bx	lr
 8010aa6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010aaa:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010aae:	e7f7      	b.n	8010aa0 <memcpy.isra.0+0x4>

08010ab0 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8010ab0:	b430      	push	{r4, r5}
 8010ab2:	b168      	cbz	r0, 8010ad0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8010ab4:	2300      	movs	r3, #0
 8010ab6:	7905      	ldrb	r5, [r0, #4]
 8010ab8:	5cd4      	ldrb	r4, [r2, r3]
 8010aba:	b11c      	cbz	r4, 8010ac4 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8010abc:	1c5c      	adds	r4, r3, #1
 8010abe:	429d      	cmp	r5, r3
 8010ac0:	4623      	mov	r3, r4
 8010ac2:	dcf9      	bgt.n	8010ab8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8010ac4:	6804      	ldr	r4, [r0, #0]
 8010ac6:	b2db      	uxtb	r3, r3
 8010ac8:	69e4      	ldr	r4, [r4, #28]
 8010aca:	46a4      	mov	ip, r4
 8010acc:	bc30      	pop	{r4, r5}
 8010ace:	4760      	bx	ip
 8010ad0:	bc30      	pop	{r4, r5}
 8010ad2:	4770      	bx	lr

08010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8010ad4:	b110      	cbz	r0, 8010adc <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8010ad6:	6803      	ldr	r3, [r0, #0]
 8010ad8:	691b      	ldr	r3, [r3, #16]
 8010ada:	4718      	bx	r3
 8010adc:	4770      	bx	lr

08010ade <Display::Status(Display7SegmentMessage)>:
 8010ade:	7c43      	ldrb	r3, [r0, #17]
 8010ae0:	b513      	push	{r0, r1, r4, lr}
 8010ae2:	4604      	mov	r4, r0
 8010ae4:	b19b      	cbz	r3, 8010b0e <Display::Status(Display7SegmentMessage)+0x30>
 8010ae6:	43c9      	mvns	r1, r1
 8010ae8:	2312      	movs	r3, #18
 8010aea:	7a00      	ldrb	r0, [r0, #8]
 8010aec:	f88d 3004 	strb.w	r3, [sp, #4]
 8010af0:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8010af4:	f88d 1006 	strb.w	r1, [sp, #6]
 8010af8:	f88d 3005 	strb.w	r3, [sp, #5]
 8010afc:	f002 faee 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 8010b00:	68e0      	ldr	r0, [r4, #12]
 8010b02:	f002 fae3 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 8010b06:	2103      	movs	r1, #3
 8010b08:	a801      	add	r0, sp, #4
 8010b0a:	f002 faed 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8010b0e:	b002      	add	sp, #8
 8010b10:	bd10      	pop	{r4, pc}
	...

08010b14 <DisplayUdf::DisplayUdf()>:
 8010b14:	b510      	push	{r4, lr}
 8010b16:	4604      	mov	r4, r0
 8010b18:	f000 fed8 	bl	80118cc <Display::Display()>
 8010b1c:	2202      	movs	r2, #2
 8010b1e:	2300      	movs	r3, #0
 8010b20:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8010b24:	4b05      	ldr	r3, [pc, #20]	; (8010b3c <DisplayUdf::DisplayUdf()+0x28>)
 8010b26:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8010b2a:	601c      	str	r4, [r3, #0]
 8010b2c:	2301      	movs	r3, #1
 8010b2e:	f802 3b01 	strb.w	r3, [r2], #1
 8010b32:	3301      	adds	r3, #1
 8010b34:	2b15      	cmp	r3, #21
 8010b36:	d1fa      	bne.n	8010b2e <DisplayUdf::DisplayUdf()+0x1a>
 8010b38:	4620      	mov	r0, r4
 8010b3a:	bd10      	pop	{r4, pc}
 8010b3c:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

08010b40 <DisplayUdf::SetTitle(char const*, ...)>:
 8010b40:	b40e      	push	{r1, r2, r3}
 8010b42:	b517      	push	{r0, r1, r2, r4, lr}
 8010b44:	ab05      	add	r3, sp, #20
 8010b46:	f853 2b04 	ldr.w	r2, [r3], #4
 8010b4a:	4604      	mov	r4, r0
 8010b4c:	211f      	movs	r1, #31
 8010b4e:	301c      	adds	r0, #28
 8010b50:	9301      	str	r3, [sp, #4]
 8010b52:	f7f8 fd21 	bl	8009598 <vsnprintf>
 8010b56:	2300      	movs	r3, #0
 8010b58:	4404      	add	r4, r0
 8010b5a:	7723      	strb	r3, [r4, #28]
 8010b5c:	b003      	add	sp, #12
 8010b5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b62:	b003      	add	sp, #12
 8010b64:	4770      	bx	lr
	...

08010b68 <DisplayUdf::ShowEmacStart()>:
 8010b68:	b510      	push	{r4, lr}
 8010b6a:	4604      	mov	r4, r0
 8010b6c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010b70:	6980      	ldr	r0, [r0, #24]
 8010b72:	f7ff ffaf 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010b76:	4620      	mov	r0, r4
 8010b78:	4a02      	ldr	r2, [pc, #8]	; (8010b84 <DisplayUdf::ShowEmacStart()+0x1c>)
 8010b7a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010b7e:	f7f7 fef5 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010b82:	bd10      	pop	{r4, pc}
 8010b84:	08015ccb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, fp, ip, lr}

08010b88 <DisplayUdf::ShowIpAddress()>:
 8010b88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010b8c:	4604      	mov	r4, r0
 8010b8e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010b92:	b086      	sub	sp, #24
 8010b94:	6980      	ldr	r0, [r0, #24]
 8010b96:	f7ff ff9d 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010b9a:	4b13      	ldr	r3, [pc, #76]	; (8010be8 <DisplayUdf::ShowIpAddress()+0x60>)
 8010b9c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8010ba0:	681d      	ldr	r5, [r3, #0]
 8010ba2:	69a8      	ldr	r0, [r5, #24]
 8010ba4:	692e      	ldr	r6, [r5, #16]
 8010ba6:	f7f7 fe2d 	bl	8008804 <__popcountsi2>
 8010baa:	78eb      	ldrb	r3, [r5, #3]
 8010bac:	fa5f f886 	uxtb.w	r8, r6
 8010bb0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8010bb4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8010bb8:	0e36      	lsrs	r6, r6, #24
 8010bba:	b99b      	cbnz	r3, 8010be4 <DisplayUdf::ShowIpAddress()+0x5c>
 8010bbc:	786b      	ldrb	r3, [r5, #1]
 8010bbe:	2b00      	cmp	r3, #0
 8010bc0:	bf14      	ite	ne
 8010bc2:	2244      	movne	r2, #68	; 0x44
 8010bc4:	2253      	moveq	r2, #83	; 0x53
 8010bc6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8010bca:	4643      	mov	r3, r8
 8010bcc:	4639      	mov	r1, r7
 8010bce:	4620      	mov	r0, r4
 8010bd0:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010bd4:	4a05      	ldr	r2, [pc, #20]	; (8010bec <DisplayUdf::ShowIpAddress()+0x64>)
 8010bd6:	f8cd 9000 	str.w	r9, [sp]
 8010bda:	f7f7 fec7 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010bde:	b006      	add	sp, #24
 8010be0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010be4:	225a      	movs	r2, #90	; 0x5a
 8010be6:	e7ee      	b.n	8010bc6 <DisplayUdf::ShowIpAddress()+0x3e>
 8010be8:	2000a288 	andcs	sl, r0, r8, lsl #5
 8010bec:	08015cda 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, fp, ip, lr}

08010bf0 <DisplayUdf::ShowNetmask()>:
 8010bf0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010bf2:	4604      	mov	r4, r0
 8010bf4:	4b0b      	ldr	r3, [pc, #44]	; (8010c24 <DisplayUdf::ShowNetmask()+0x34>)
 8010bf6:	681b      	ldr	r3, [r3, #0]
 8010bf8:	699b      	ldr	r3, [r3, #24]
 8010bfa:	0e1a      	lsrs	r2, r3, #24
 8010bfc:	9202      	str	r2, [sp, #8]
 8010bfe:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010c02:	9201      	str	r2, [sp, #4]
 8010c04:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010c08:	9200      	str	r2, [sp, #0]
 8010c0a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8010c0e:	4a06      	ldr	r2, [pc, #24]	; (8010c28 <DisplayUdf::ShowNetmask()+0x38>)
 8010c10:	b2db      	uxtb	r3, r3
 8010c12:	f7f7 feab 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010c16:	4620      	mov	r0, r4
 8010c18:	b004      	add	sp, #16
 8010c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c1e:	f7ff bfb3 	b.w	8010b88 <DisplayUdf::ShowIpAddress()>
 8010c22:	bf00      	nop
 8010c24:	2000a288 	andcs	sl, r0, r8, lsl #5
 8010c28:	08015cec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, ip, lr}

08010c2c <DisplayUdf::ShowGatewayIp()>:
 8010c2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c2e:	4604      	mov	r4, r0
 8010c30:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 8010c34:	6980      	ldr	r0, [r0, #24]
 8010c36:	f7ff ff4d 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010c3a:	4b0a      	ldr	r3, [pc, #40]	; (8010c64 <DisplayUdf::ShowGatewayIp()+0x38>)
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	681b      	ldr	r3, [r3, #0]
 8010c40:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8010c44:	695b      	ldr	r3, [r3, #20]
 8010c46:	0e1a      	lsrs	r2, r3, #24
 8010c48:	9202      	str	r2, [sp, #8]
 8010c4a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010c4e:	9201      	str	r2, [sp, #4]
 8010c50:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010c54:	9200      	str	r2, [sp, #0]
 8010c56:	b2db      	uxtb	r3, r3
 8010c58:	4a03      	ldr	r2, [pc, #12]	; (8010c68 <DisplayUdf::ShowGatewayIp()+0x3c>)
 8010c5a:	f7f7 fe87 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010c5e:	b004      	add	sp, #16
 8010c60:	bd10      	pop	{r4, pc}
 8010c62:	bf00      	nop
 8010c64:	2000a288 	andcs	sl, r0, r8, lsl #5
 8010c68:	08015cfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, fp, ip, lr}

08010c6c <DisplayUdf::ShowHostName()>:
 8010c6c:	b510      	push	{r4, lr}
 8010c6e:	4604      	mov	r4, r0
 8010c70:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8010c74:	6980      	ldr	r0, [r0, #24]
 8010c76:	f7ff ff2d 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010c7a:	4b05      	ldr	r3, [pc, #20]	; (8010c90 <DisplayUdf::ShowHostName()+0x24>)
 8010c7c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8010c80:	681a      	ldr	r2, [r3, #0]
 8010c82:	69a0      	ldr	r0, [r4, #24]
 8010c84:	321c      	adds	r2, #28
 8010c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c8a:	f7ff bf11 	b.w	8010ab0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010c8e:	bf00      	nop
 8010c90:	2000a288 	andcs	sl, r0, r8, lsl #5

08010c94 <DisplayUdf::Show()>:
 8010c94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c96:	4604      	mov	r4, r0
 8010c98:	21ff      	movs	r1, #255	; 0xff
 8010c9a:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8010c9e:	f100 0250 	add.w	r2, r0, #80	; 0x50
 8010ca2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8010ca6:	2806      	cmp	r0, #6
 8010ca8:	bf88      	it	hi
 8010caa:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 8010cae:	429a      	cmp	r2, r3
 8010cb0:	d1f7      	bne.n	8010ca2 <DisplayUdf::Show()+0xe>
 8010cb2:	2501      	movs	r5, #1
 8010cb4:	4629      	mov	r1, r5
 8010cb6:	3501      	adds	r5, #1
 8010cb8:	69a0      	ldr	r0, [r4, #24]
 8010cba:	b2ed      	uxtb	r5, r5
 8010cbc:	f7ff ff0a 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010cc0:	2d06      	cmp	r5, #6
 8010cc2:	d1f7      	bne.n	8010cb4 <DisplayUdf::Show()+0x20>
 8010cc4:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8010cc8:	69a0      	ldr	r0, [r4, #24]
 8010cca:	f104 021c 	add.w	r2, r4, #28
 8010cce:	f7ff feef 	bl	8010ab0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010cd2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8010cd6:	69a0      	ldr	r0, [r4, #24]
 8010cd8:	4a0d      	ldr	r2, [pc, #52]	; (8010d10 <DisplayUdf::Show()+0x7c>)
 8010cda:	f7ff fee9 	bl	8010ab0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010cde:	4b0d      	ldr	r3, [pc, #52]	; (8010d14 <DisplayUdf::Show()+0x80>)
 8010ce0:	4a0d      	ldr	r2, [pc, #52]	; (8010d18 <DisplayUdf::Show()+0x84>)
 8010ce2:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8010ce6:	9300      	str	r3, [sp, #0]
 8010ce8:	4620      	mov	r0, r4
 8010cea:	2303      	movs	r3, #3
 8010cec:	f7f7 fe3e 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010cf0:	4620      	mov	r0, r4
 8010cf2:	f7ff ff49 	bl	8010b88 <DisplayUdf::ShowIpAddress()>
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	f7ff ff98 	bl	8010c2c <DisplayUdf::ShowGatewayIp()>
 8010cfc:	4620      	mov	r0, r4
 8010cfe:	f7ff ff77 	bl	8010bf0 <DisplayUdf::ShowNetmask()>
 8010d02:	4620      	mov	r0, r4
 8010d04:	b003      	add	sp, #12
 8010d06:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010d0a:	f7ff bfaf 	b.w	8010c6c <DisplayUdf::ShowHostName()>
 8010d0e:	bf00      	nop
 8010d10:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 8010d14:	2000a950 	andcs	sl, r0, r0, asr r9
 8010d18:	08015d0a 	stmdaeq	r1, {r1, r3, r8, sl, fp, ip, lr}

08010d1c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8010d1c:	3901      	subs	r1, #1
 8010d1e:	b510      	push	{r4, lr}
 8010d20:	4604      	mov	r4, r0
 8010d22:	2903      	cmp	r1, #3
 8010d24:	d814      	bhi.n	8010d50 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8010d26:	e8df f001 	tbb	[pc, r1]
 8010d2a:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8010d2e:	4b14      	ldr	r3, [pc, #80]	; (8010d80 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010d30:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8010d34:	6818      	ldr	r0, [r3, #0]
 8010d36:	f7ff fed2 	bl	8010ade <Display::Status(Display7SegmentMessage)>
 8010d3a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010d3e:	69a0      	ldr	r0, [r4, #24]
 8010d40:	f7ff fec8 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010d44:	4a0f      	ldr	r2, [pc, #60]	; (8010d84 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 8010d46:	4620      	mov	r0, r4
 8010d48:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010d4c:	f7f7 fe0e 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8010d50:	bd10      	pop	{r4, pc}
 8010d52:	f248 0180 	movw	r1, #32896	; 0x8080
 8010d56:	4b0a      	ldr	r3, [pc, #40]	; (8010d80 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010d58:	6818      	ldr	r0, [r3, #0]
 8010d5a:	f7ff fec0 	bl	8010ade <Display::Status(Display7SegmentMessage)>
 8010d5e:	e7f7      	b.n	8010d50 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8010d60:	4b07      	ldr	r3, [pc, #28]	; (8010d80 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010d62:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8010d66:	6818      	ldr	r0, [r3, #0]
 8010d68:	f7ff feb9 	bl	8010ade <Display::Status(Display7SegmentMessage)>
 8010d6c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8010d70:	69a0      	ldr	r0, [r4, #24]
 8010d72:	f7ff feaf 	bl	8010ad4 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010d76:	4a04      	ldr	r2, [pc, #16]	; (8010d88 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8010d78:	e7e5      	b.n	8010d46 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8010d7a:	f645 3179 	movw	r1, #23417	; 0x5b79
 8010d7e:	e7ea      	b.n	8010d56 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8010d80:	2000a8c0 	andcs	sl, r0, r0, asr #17
 8010d84:	08015d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, ip, lr}
 8010d88:	08015d27 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, fp, ip, lr}

08010d8c <DisplayUdf::ShowShutdown()>:
 8010d8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d90:	4604      	mov	r4, r0
 8010d92:	6980      	ldr	r0, [r0, #24]
 8010d94:	b308      	cbz	r0, 8010dda <DisplayUdf::ShowShutdown()+0x4e>
 8010d96:	f890 8005 	ldrb.w	r8, [r0, #5]
 8010d9a:	6803      	ldr	r3, [r0, #0]
 8010d9c:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8010da0:	b2ed      	uxtb	r5, r5
 8010da2:	462a      	mov	r2, r5
 8010da4:	2100      	movs	r1, #0
 8010da6:	6a1b      	ldr	r3, [r3, #32]
 8010da8:	7907      	ldrb	r7, [r0, #4]
 8010daa:	2600      	movs	r6, #0
 8010dac:	4798      	blx	r3
 8010dae:	3f01      	subs	r7, #1
 8010db0:	42b7      	cmp	r7, r6
 8010db2:	69a0      	ldr	r0, [r4, #24]
 8010db4:	d906      	bls.n	8010dc4 <DisplayUdf::ShowShutdown()+0x38>
 8010db6:	b118      	cbz	r0, 8010dc0 <DisplayUdf::ShowShutdown()+0x34>
 8010db8:	6803      	ldr	r3, [r0, #0]
 8010dba:	2120      	movs	r1, #32
 8010dbc:	695b      	ldr	r3, [r3, #20]
 8010dbe:	4798      	blx	r3
 8010dc0:	3601      	adds	r6, #1
 8010dc2:	e7f5      	b.n	8010db0 <DisplayUdf::ShowShutdown()+0x24>
 8010dc4:	b120      	cbz	r0, 8010dd0 <DisplayUdf::ShowShutdown()+0x44>
 8010dc6:	6803      	ldr	r3, [r0, #0]
 8010dc8:	462a      	mov	r2, r5
 8010dca:	2100      	movs	r1, #0
 8010dcc:	6a1b      	ldr	r3, [r3, #32]
 8010dce:	4798      	blx	r3
 8010dd0:	4641      	mov	r1, r8
 8010dd2:	4a05      	ldr	r2, [pc, #20]	; (8010de8 <DisplayUdf::ShowShutdown()+0x5c>)
 8010dd4:	69a0      	ldr	r0, [r4, #24]
 8010dd6:	f7ff fe6b 	bl	8010ab0 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010dda:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8010dde:	4620      	mov	r0, r4
 8010de0:	f7ff fe7d 	bl	8010ade <Display::Status(Display7SegmentMessage)>
 8010de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010de8:	08015d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp, ip, lr}

08010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 8010dec:	1e4b      	subs	r3, r1, #1
 8010dee:	2b05      	cmp	r3, #5
 8010df0:	b530      	push	{r4, r5, lr}
 8010df2:	d80f      	bhi.n	8010e14 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8010df4:	2300      	movs	r3, #0
 8010df6:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 8010dfa:	f814 5b01 	ldrb.w	r5, [r4], #1
 8010dfe:	428d      	cmp	r5, r1
 8010e00:	d109      	bne.n	8010e16 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8010e02:	1884      	adds	r4, r0, r2
 8010e04:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8010e08:	4403      	add	r3, r0
 8010e0a:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8010e0e:	4410      	add	r0, r2
 8010e10:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 8010e14:	bd30      	pop	{r4, r5, pc}
 8010e16:	3301      	adds	r3, #1
 8010e18:	2b14      	cmp	r3, #20
 8010e1a:	d1ee      	bne.n	8010dfa <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8010e1c:	e7f7      	b.n	8010e0e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

08010e20 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8010e20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010e22:	88c5      	ldrh	r5, [r0, #6]
 8010e24:	8886      	ldrh	r6, [r0, #4]
 8010e26:	42b5      	cmp	r5, r6
 8010e28:	d216      	bcs.n	8010e58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8010e2a:	4604      	mov	r4, r0
 8010e2c:	6800      	ldr	r0, [r0, #0]
 8010e2e:	4428      	add	r0, r5
 8010e30:	1b75      	subs	r5, r6, r5
 8010e32:	7a26      	ldrb	r6, [r4, #8]
 8010e34:	b923      	cbnz	r3, 8010e40 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8010e36:	b926      	cbnz	r6, 8010e42 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8010e38:	9200      	str	r2, [sp, #0]
 8010e3a:	460b      	mov	r3, r1
 8010e3c:	4a09      	ldr	r2, [pc, #36]	; (8010e64 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8010e3e:	e003      	b.n	8010e48 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8010e40:	b166      	cbz	r6, 8010e5c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8010e42:	460b      	mov	r3, r1
 8010e44:	9200      	str	r2, [sp, #0]
 8010e46:	4a08      	ldr	r2, [pc, #32]	; (8010e68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8010e48:	4629      	mov	r1, r5
 8010e4a:	f7f8 fb8d 	bl	8009568 <snprintf>
 8010e4e:	4285      	cmp	r5, r0
 8010e50:	bfa2      	ittt	ge
 8010e52:	88e3      	ldrhge	r3, [r4, #6]
 8010e54:	181b      	addge	r3, r3, r0
 8010e56:	80e3      	strhge	r3, [r4, #6]
 8010e58:	b002      	add	sp, #8
 8010e5a:	bd70      	pop	{r4, r5, r6, pc}
 8010e5c:	9200      	str	r2, [sp, #0]
 8010e5e:	460b      	mov	r3, r1
 8010e60:	4a02      	ldr	r2, [pc, #8]	; (8010e6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8010e62:	e7f1      	b.n	8010e48 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8010e64:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 8010e68:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 8010e6c:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

08010e70 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8010e70:	b510      	push	{r4, lr}
 8010e72:	2220      	movs	r2, #32
 8010e74:	4604      	mov	r4, r0
 8010e76:	f840 1b04 	str.w	r1, [r0], #4
 8010e7a:	2100      	movs	r1, #0
 8010e7c:	f001 f9c4 	bl	8012208 <memset>
 8010e80:	f647 7305 	movw	r3, #32517	; 0x7f05
 8010e84:	4620      	mov	r0, r4
 8010e86:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010e88:	bd10      	pop	{r4, pc}

08010e8a <DisplayUdfParams::Load()>:
 8010e8a:	b508      	push	{r3, lr}
 8010e8c:	2300      	movs	r3, #0
 8010e8e:	4601      	mov	r1, r0
 8010e90:	6043      	str	r3, [r0, #4]
 8010e92:	6800      	ldr	r0, [r0, #0]
 8010e94:	b120      	cbz	r0, 8010ea0 <DisplayUdfParams::Load()+0x16>
 8010e96:	6803      	ldr	r3, [r0, #0]
 8010e98:	3104      	adds	r1, #4
 8010e9a:	68db      	ldr	r3, [r3, #12]
 8010e9c:	4798      	blx	r3
 8010e9e:	2001      	movs	r0, #1
 8010ea0:	bd08      	pop	{r3, pc}
	...

08010ea4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8010ea4:	6803      	ldr	r3, [r0, #0]
 8010ea6:	b1d3      	cbz	r3, 8010ede <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8010ea8:	2300      	movs	r3, #0
 8010eaa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010eac:	460d      	mov	r5, r1
 8010eae:	4616      	mov	r6, r2
 8010eb0:	4604      	mov	r4, r0
 8010eb2:	6043      	str	r3, [r0, #4]
 8010eb4:	4602      	mov	r2, r0
 8010eb6:	490a      	ldr	r1, [pc, #40]	; (8010ee0 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8010eb8:	4668      	mov	r0, sp
 8010eba:	f000 fb19 	bl	80114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010ebe:	4632      	mov	r2, r6
 8010ec0:	4629      	mov	r1, r5
 8010ec2:	4668      	mov	r0, sp
 8010ec4:	f000 fb18 	bl	80114f8 <ReadConfigFile::Read(char const*, unsigned int)>
 8010ec8:	4621      	mov	r1, r4
 8010eca:	f851 0b04 	ldr.w	r0, [r1], #4
 8010ece:	6803      	ldr	r3, [r0, #0]
 8010ed0:	689b      	ldr	r3, [r3, #8]
 8010ed2:	4798      	blx	r3
 8010ed4:	4668      	mov	r0, sp
 8010ed6:	f000 fb0e 	bl	80114f6 <ReadConfigFile::~ReadConfigFile()>
 8010eda:	b002      	add	sp, #8
 8010edc:	bd70      	pop	{r4, r5, r6, pc}
 8010ede:	4770      	bx	lr
 8010ee0:	08010fa9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, fp}

08010ee4 <DisplayUdfParams::callbackFunction(char const*)>:
 8010ee4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010ee6:	460e      	mov	r6, r1
 8010ee8:	4604      	mov	r4, r0
 8010eea:	492b      	ldr	r1, [pc, #172]	; (8010f98 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8010eec:	4630      	mov	r0, r6
 8010eee:	f10d 0207 	add.w	r2, sp, #7
 8010ef2:	f000 fc38 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010ef6:	b968      	cbnz	r0, 8010f14 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8010ef8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010efc:	6863      	ldr	r3, [r4, #4]
 8010efe:	2a7f      	cmp	r2, #127	; 0x7f
 8010f00:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8010f04:	bf14      	ite	ne
 8010f06:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8010f0a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8010f0e:	6063      	str	r3, [r4, #4]
 8010f10:	b003      	add	sp, #12
 8010f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f14:	4630      	mov	r0, r6
 8010f16:	4921      	ldr	r1, [pc, #132]	; (8010f9c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8010f18:	f10d 0207 	add.w	r2, sp, #7
 8010f1c:	f000 fc23 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010f20:	b958      	cbnz	r0, 8010f3a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8010f22:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010f26:	6863      	ldr	r3, [r4, #4]
 8010f28:	2a05      	cmp	r2, #5
 8010f2a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8010f2e:	bf14      	ite	ne
 8010f30:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8010f34:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8010f38:	e7e9      	b.n	8010f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8010f3a:	4630      	mov	r0, r6
 8010f3c:	4918      	ldr	r1, [pc, #96]	; (8010fa0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8010f3e:	f10d 0207 	add.w	r2, sp, #7
 8010f42:	f000 fc10 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010f46:	b948      	cbnz	r0, 8010f5c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8010f48:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010f4c:	6863      	ldr	r3, [r4, #4]
 8010f4e:	b112      	cbz	r2, 8010f56 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8010f50:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8010f54:	e7db      	b.n	8010f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8010f56:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8010f5a:	e7d8      	b.n	8010f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8010f5c:	2500      	movs	r5, #0
 8010f5e:	4f11      	ldr	r7, [pc, #68]	; (8010fa4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8010f60:	4630      	mov	r0, r6
 8010f62:	f857 1b04 	ldr.w	r1, [r7], #4
 8010f66:	f10d 0207 	add.w	r2, sp, #7
 8010f6a:	f000 fbfc 	bl	8011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010f6e:	b978      	cbnz	r0, 8010f90 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 8010f70:	2301      	movs	r3, #1
 8010f72:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010f76:	6862      	ldr	r2, [r4, #4]
 8010f78:	1e4e      	subs	r6, r1, #1
 8010f7a:	2e05      	cmp	r6, #5
 8010f7c:	fa03 f305 	lsl.w	r3, r3, r5
 8010f80:	4425      	add	r5, r4
 8010f82:	bf99      	ittee	ls
 8010f84:	7229      	strbls	r1, [r5, #8]
 8010f86:	4313      	orrls	r3, r2
 8010f88:	7228      	strbhi	r0, [r5, #8]
 8010f8a:	ea22 0303 	bichi.w	r3, r2, r3
 8010f8e:	e7be      	b.n	8010f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8010f90:	3501      	adds	r5, #1
 8010f92:	2d14      	cmp	r5, #20
 8010f94:	d1e4      	bne.n	8010f60 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8010f96:	e7bb      	b.n	8010f10 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8010f98:	08015df6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 8010f9c:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 8010fa0:	08015dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip, lr}
 8010fa4:	08015d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, lr}

08010fa8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8010fa8:	f7ff bf9c 	b.w	8010ee4 <DisplayUdfParams::callbackFunction(char const*)>

08010fac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8010fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fb0:	4604      	mov	r4, r0
 8010fb2:	4615      	mov	r5, r2
 8010fb4:	461e      	mov	r6, r3
 8010fb6:	b086      	sub	sp, #24
 8010fb8:	3004      	adds	r0, #4
 8010fba:	b379      	cbz	r1, 801101c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8010fbc:	2222      	movs	r2, #34	; 0x22
 8010fbe:	f001 f90c 	bl	80121da <memmove>
 8010fc2:	462a      	mov	r2, r5
 8010fc4:	4633      	mov	r3, r6
 8010fc6:	493d      	ldr	r1, [pc, #244]	; (80110bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8010fc8:	a803      	add	r0, sp, #12
 8010fca:	f000 f9f1 	bl	80113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8010fce:	6863      	ldr	r3, [r4, #4]
 8010fd0:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8010fd4:	493a      	ldr	r1, [pc, #232]	; (80110c0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8010fd6:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8010fda:	a803      	add	r0, sp, #12
 8010fdc:	f7ff ff20 	bl	8010e20 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8010fe0:	6863      	ldr	r3, [r4, #4]
 8010fe2:	4938      	ldr	r1, [pc, #224]	; (80110c4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8010fe4:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8010fe8:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8010fec:	a803      	add	r0, sp, #12
 8010fee:	f7ff ff17 	bl	8010e20 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8010ff2:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8010ff6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010ffa:	42a9      	cmp	r1, r5
 8010ffc:	d227      	bcs.n	801104e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8010ffe:	6863      	ldr	r3, [r4, #4]
 8011000:	9803      	ldr	r0, [sp, #12]
 8011002:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8011006:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801100a:	4408      	add	r0, r1
 801100c:	eba5 0501 	sub.w	r5, r5, r1
 8011010:	d10b      	bne.n	801102a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8011012:	b962      	cbnz	r2, 801102e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8011014:	9200      	str	r2, [sp, #0]
 8011016:	4b2c      	ldr	r3, [pc, #176]	; (80110c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011018:	4a2c      	ldr	r2, [pc, #176]	; (80110cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801101a:	e00e      	b.n	801103a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 801101c:	6823      	ldr	r3, [r4, #0]
 801101e:	4601      	mov	r1, r0
 8011020:	681a      	ldr	r2, [r3, #0]
 8011022:	4618      	mov	r0, r3
 8011024:	68d2      	ldr	r2, [r2, #12]
 8011026:	4790      	blx	r2
 8011028:	e7cb      	b.n	8010fc2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 801102a:	2a00      	cmp	r2, #0
 801102c:	d041      	beq.n	80110b2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 801102e:	3b00      	subs	r3, #0
 8011030:	bf18      	it	ne
 8011032:	2301      	movne	r3, #1
 8011034:	4a26      	ldr	r2, [pc, #152]	; (80110d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8011036:	9300      	str	r3, [sp, #0]
 8011038:	4b23      	ldr	r3, [pc, #140]	; (80110c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801103a:	4629      	mov	r1, r5
 801103c:	f7f8 fa94 	bl	8009568 <snprintf>
 8011040:	4285      	cmp	r5, r0
 8011042:	bfa2      	ittt	ge
 8011044:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011048:	181b      	addge	r3, r3, r0
 801104a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801104e:	2500      	movs	r5, #0
 8011050:	2701      	movs	r7, #1
 8011052:	4e20      	ldr	r6, [pc, #128]	; (80110d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8011054:	f104 0808 	add.w	r8, r4, #8
 8011058:	f856 1b04 	ldr.w	r1, [r6], #4
 801105c:	780b      	ldrb	r3, [r1, #0]
 801105e:	b15b      	cbz	r3, 8011078 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8011060:	6862      	ldr	r2, [r4, #4]
 8011062:	fa07 f305 	lsl.w	r3, r7, r5
 8011066:	4393      	bics	r3, r2
 8011068:	bf0c      	ite	eq
 801106a:	2301      	moveq	r3, #1
 801106c:	2300      	movne	r3, #0
 801106e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8011072:	a803      	add	r0, sp, #12
 8011074:	f7ff fed4 	bl	8010e20 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011078:	3501      	adds	r5, #1
 801107a:	2d14      	cmp	r5, #20
 801107c:	d1ec      	bne.n	8011058 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 801107e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011082:	b17b      	cbz	r3, 80110a4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8011084:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011088:	9b03      	ldr	r3, [sp, #12]
 801108a:	4413      	add	r3, r2
 801108c:	227d      	movs	r2, #125	; 0x7d
 801108e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011092:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011096:	9903      	ldr	r1, [sp, #12]
 8011098:	54ca      	strb	r2, [r1, r3]
 801109a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801109e:	3301      	adds	r3, #1
 80110a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80110a4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80110a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80110aa:	601a      	str	r2, [r3, #0]
 80110ac:	b006      	add	sp, #24
 80110ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110b2:	2301      	movs	r3, #1
 80110b4:	4a08      	ldr	r2, [pc, #32]	; (80110d8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80110b6:	9300      	str	r3, [sp, #0]
 80110b8:	4b03      	ldr	r3, [pc, #12]	; (80110c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80110ba:	e7be      	b.n	801103a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80110bc:	08015dea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, fp, ip, lr}
 80110c0:	08015df6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 80110c4:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 80110c8:	08015dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip, lr}
 80110cc:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}
 80110d0:	08014572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, lr}
 80110d4:	08015d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, lr}
 80110d8:	0801457c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, lr}

080110dc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 80110dc:	b513      	push	{r0, r1, r4, lr}
 80110de:	6804      	ldr	r4, [r0, #0]
 80110e0:	b914      	cbnz	r4, 80110e8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80110e2:	601c      	str	r4, [r3, #0]
 80110e4:	b002      	add	sp, #8
 80110e6:	bd10      	pop	{r4, pc}
 80110e8:	9300      	str	r3, [sp, #0]
 80110ea:	4613      	mov	r3, r2
 80110ec:	460a      	mov	r2, r1
 80110ee:	2100      	movs	r1, #0
 80110f0:	f7ff ff5c 	bl	8010fac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 80110f4:	e7f6      	b.n	80110e4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

080110f6 <DisplayUdfParams::Set(DisplayUdf*)>:
 80110f6:	6843      	ldr	r3, [r0, #4]
 80110f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110fc:	009a      	lsls	r2, r3, #2
 80110fe:	4604      	mov	r4, r0
 8011100:	460e      	mov	r6, r1
 8011102:	d506      	bpl.n	8011112 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011104:	6988      	ldr	r0, [r1, #24]
 8011106:	b120      	cbz	r0, 8011112 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011108:	6803      	ldr	r3, [r0, #0]
 801110a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801110e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011110:	4798      	blx	r3
 8011112:	6863      	ldr	r3, [r4, #4]
 8011114:	69b0      	ldr	r0, [r6, #24]
 8011116:	00db      	lsls	r3, r3, #3
 8011118:	bf41      	itttt	mi
 801111a:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 801111e:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8011122:	4353      	mulmi	r3, r2
 8011124:	6173      	strmi	r3, [r6, #20]
 8011126:	6861      	ldr	r1, [r4, #4]
 8011128:	f3c1 7180 	ubfx	r1, r1, #30, #1
 801112c:	b110      	cbz	r0, 8011134 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 801112e:	6803      	ldr	r3, [r0, #0]
 8011130:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011132:	4798      	blx	r3
 8011134:	2500      	movs	r5, #0
 8011136:	2701      	movs	r7, #1
 8011138:	f104 0808 	add.w	r8, r4, #8
 801113c:	6862      	ldr	r2, [r4, #4]
 801113e:	fa07 f305 	lsl.w	r3, r7, r5
 8011142:	4393      	bics	r3, r2
 8011144:	d105      	bne.n	8011152 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8011146:	462a      	mov	r2, r5
 8011148:	4630      	mov	r0, r6
 801114a:	f818 1005 	ldrb.w	r1, [r8, r5]
 801114e:	f7ff fe4d 	bl	8010dec <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8011152:	3501      	adds	r5, #1
 8011154:	2d14      	cmp	r5, #20
 8011156:	d1f1      	bne.n	801113c <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8011158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801115c <DisplayUdfParams::Dump()>:
 801115c:	4770      	bx	lr
	...

08011160 <DisplayUdf::Show(E131Bridge*)>:
 8011160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011164:	460e      	mov	r6, r1
 8011166:	4604      	mov	r4, r0
 8011168:	b085      	sub	sp, #20
 801116a:	f7ff fd93 	bl	8010c94 <DisplayUdf::Show()>
 801116e:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8011172:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8011176:	4620      	mov	r0, r4
 8011178:	4413      	add	r3, r2
 801117a:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 801117e:	4a21      	ldr	r2, [pc, #132]	; (8011204 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8011180:	f7f7 fbf4 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8011184:	2500      	movs	r5, #0
 8011186:	4f20      	ldr	r7, [pc, #128]	; (8011208 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8011188:	f8df 8080 	ldr.w	r8, [pc, #128]	; 801120c <DisplayUdf::Show(E131Bridge*)+0xac>
 801118c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8011210 <DisplayUdf::Show(E131Bridge*)+0xb0>
 8011190:	2301      	movs	r3, #1
 8011192:	4629      	mov	r1, r5
 8011194:	4630      	mov	r0, r6
 8011196:	f10d 020e 	add.w	r2, sp, #14
 801119a:	f7f8 fc77 	bl	8009a8c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 801119e:	b1a8      	cbz	r0, 80111cc <DisplayUdf::Show(E131Bridge*)+0x6c>
 80111a0:	2344      	movs	r3, #68	; 0x44
 80111a2:	436b      	muls	r3, r5
 80111a4:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 80111a8:	58d2      	ldr	r2, [r2, r3]
 80111aa:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 80111ae:	2a00      	cmp	r2, #0
 80111b0:	bf0c      	ite	eq
 80111b2:	463b      	moveq	r3, r7
 80111b4:	4643      	movne	r3, r8
 80111b6:	e9cd 0300 	strd	r0, r3, [sp]
 80111ba:	f104 0144 	add.w	r1, r4, #68	; 0x44
 80111be:	464a      	mov	r2, r9
 80111c0:	4620      	mov	r0, r4
 80111c2:	5d49      	ldrb	r1, [r1, r5]
 80111c4:	f105 0341 	add.w	r3, r5, #65	; 0x41
 80111c8:	f7f7 fbd0 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 80111cc:	3501      	adds	r5, #1
 80111ce:	2d04      	cmp	r5, #4
 80111d0:	d1de      	bne.n	8011190 <DisplayUdf::Show(E131Bridge*)+0x30>
 80111d2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80111d4:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 80111d8:	2a02      	cmp	r2, #2
 80111da:	d001      	beq.n	80111e0 <DisplayUdf::Show(E131Bridge*)+0x80>
 80111dc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80111de:	b933      	cbnz	r3, 80111ee <DisplayUdf::Show(E131Bridge*)+0x8e>
 80111e0:	4620      	mov	r0, r4
 80111e2:	4a0c      	ldr	r2, [pc, #48]	; (8011214 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 80111e4:	f7f7 fbc2 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 80111e8:	b005      	add	sp, #20
 80111ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111ee:	480a      	ldr	r0, [pc, #40]	; (8011218 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 80111f0:	9300      	str	r3, [sp, #0]
 80111f2:	4b0a      	ldr	r3, [pc, #40]	; (801121c <DisplayUdf::Show(E131Bridge*)+0xbc>)
 80111f4:	2a00      	cmp	r2, #0
 80111f6:	bf08      	it	eq
 80111f8:	4603      	moveq	r3, r0
 80111fa:	4620      	mov	r0, r4
 80111fc:	4a08      	ldr	r2, [pc, #32]	; (8011220 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 80111fe:	f7f7 fbb5 	bl	800896c <Display::Printf(unsigned char, char const*, ...)>
 8011202:	e7f1      	b.n	80111e8 <DisplayUdf::Show(E131Bridge*)+0x88>
 8011204:	08015e00 	stmdaeq	r1, {r9, sl, fp, ip, lr}
 8011208:	08014485 	stmdaeq	r1, {r0, r2, r7, sl, lr}
 801120c:	08014489 	stmdaeq	r1, {r0, r3, r7, sl, lr}
 8011210:	08015e07 	stmdaeq	r1, {r0, r1, r2, r9, sl, fp, ip, lr}
 8011214:	08015e16 	stmdaeq	r1, {r1, r2, r4, r9, sl, fp, ip, lr}
 8011218:	080145a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, lr}
 801121c:	0801459c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, lr}
 8011220:	08015e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp, ip, lr}

08011224 <NetworkDisplay::ShowEmacStart()>:
 8011224:	4b01      	ldr	r3, [pc, #4]	; (801122c <NetworkDisplay::ShowEmacStart()+0x8>)
 8011226:	6818      	ldr	r0, [r3, #0]
 8011228:	f7ff bc9e 	b.w	8010b68 <DisplayUdf::ShowEmacStart()>
 801122c:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

08011230 <NetworkDisplay::ShowIp()>:
 8011230:	4b01      	ldr	r3, [pc, #4]	; (8011238 <NetworkDisplay::ShowIp()+0x8>)
 8011232:	6818      	ldr	r0, [r3, #0]
 8011234:	f7ff bca8 	b.w	8010b88 <DisplayUdf::ShowIpAddress()>
 8011238:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

0801123c <NetworkDisplay::ShowShutdown()>:
 801123c:	4b01      	ldr	r3, [pc, #4]	; (8011244 <NetworkDisplay::ShowShutdown()+0x8>)
 801123e:	6818      	ldr	r0, [r3, #0]
 8011240:	f7ff bda4 	b.w	8010d8c <DisplayUdf::ShowShutdown()>
 8011244:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

08011248 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011248:	4b01      	ldr	r3, [pc, #4]	; (8011250 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 801124a:	6818      	ldr	r0, [r3, #0]
 801124c:	f7ff bd66 	b.w	8010d1c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011250:	2000a8b8 			; <UNDEFINED> instruction: 0x2000a8b8

08011254 <properties::convert_json_file(char*, unsigned short, bool)>:
 8011254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011258:	7803      	ldrb	r3, [r0, #0]
 801125a:	2b7b      	cmp	r3, #123	; 0x7b
 801125c:	d170      	bne.n	8011340 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 801125e:	b322      	cbz	r2, 80112aa <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 8011260:	2301      	movs	r3, #1
 8011262:	4606      	mov	r6, r0
 8011264:	461c      	mov	r4, r3
 8011266:	2a00      	cmp	r2, #0
 8011268:	bf0c      	ite	eq
 801126a:	f04f 0c0a 	moveq.w	ip, #10
 801126e:	f04f 0c00 	movne.w	ip, #0
 8011272:	273d      	movs	r7, #61	; 0x3d
 8011274:	4299      	cmp	r1, r3
 8011276:	d960      	bls.n	801133a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8011278:	4299      	cmp	r1, r3
 801127a:	4602      	mov	r2, r0
 801127c:	f890 e000 	ldrb.w	lr, [r0]
 8011280:	f103 0301 	add.w	r3, r3, #1
 8011284:	f100 0001 	add.w	r0, r0, #1
 8011288:	d846      	bhi.n	8011318 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 801128a:	1aa0      	subs	r0, r4, r2
 801128c:	4615      	mov	r5, r2
 801128e:	1884      	adds	r4, r0, r2
 8011290:	f812 8b01 	ldrb.w	r8, [r2], #1
 8011294:	f103 0e01 	add.w	lr, r3, #1
 8011298:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 801129c:	d053      	beq.n	8011346 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 801129e:	4299      	cmp	r1, r3
 80112a0:	d957      	bls.n	8011352 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 80112a2:	4673      	mov	r3, lr
 80112a4:	f806 8b01 	strb.w	r8, [r6], #1
 80112a8:	e7f0      	b.n	801128c <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 80112aa:	2323      	movs	r3, #35	; 0x23
 80112ac:	f800 3b01 	strb.w	r3, [r0], #1
 80112b0:	4605      	mov	r5, r0
 80112b2:	2301      	movs	r3, #1
 80112b4:	4299      	cmp	r1, r3
 80112b6:	d92d      	bls.n	8011314 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 80112b8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80112bc:	2c22      	cmp	r4, #34	; 0x22
 80112be:	d001      	beq.n	80112c4 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 80112c0:	3301      	adds	r3, #1
 80112c2:	e7f7      	b.n	80112b4 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 80112c4:	46ac      	mov	ip, r5
 80112c6:	4606      	mov	r6, r0
 80112c8:	2701      	movs	r7, #1
 80112ca:	f89c e000 	ldrb.w	lr, [ip]
 80112ce:	4665      	mov	r5, ip
 80112d0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80112d4:	4630      	mov	r0, r6
 80112d6:	463c      	mov	r4, r7
 80112d8:	f10c 0c01 	add.w	ip, ip, #1
 80112dc:	f106 0601 	add.w	r6, r6, #1
 80112e0:	f107 0701 	add.w	r7, r7, #1
 80112e4:	d007      	beq.n	80112f6 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80112e6:	3301      	adds	r3, #1
 80112e8:	4299      	cmp	r1, r3
 80112ea:	4665      	mov	r5, ip
 80112ec:	f806 ec01 	strb.w	lr, [r6, #-1]
 80112f0:	d8eb      	bhi.n	80112ca <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 80112f2:	463c      	mov	r4, r7
 80112f4:	4630      	mov	r0, r6
 80112f6:	4606      	mov	r6, r0
 80112f8:	200a      	movs	r0, #10
 80112fa:	3401      	adds	r4, #1
 80112fc:	f806 0b01 	strb.w	r0, [r6], #1
 8011300:	4628      	mov	r0, r5
 8011302:	f815 7b01 	ldrb.w	r7, [r5], #1
 8011306:	2f7b      	cmp	r7, #123	; 0x7b
 8011308:	d0ad      	beq.n	8011266 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 801130a:	1c5f      	adds	r7, r3, #1
 801130c:	4299      	cmp	r1, r3
 801130e:	463b      	mov	r3, r7
 8011310:	d8f6      	bhi.n	8011300 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8011312:	e7a8      	b.n	8011266 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8011314:	2401      	movs	r4, #1
 8011316:	e7ee      	b.n	80112f6 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011318:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801131c:	d1ac      	bne.n	8011278 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 801131e:	4602      	mov	r2, r0
 8011320:	e7b3      	b.n	801128a <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8011322:	283a      	cmp	r0, #58	; 0x3a
 8011324:	d115      	bne.n	8011352 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8011326:	462b      	mov	r3, r5
 8011328:	e01b      	b.n	8011362 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 801132a:	4686      	mov	lr, r0
 801132c:	e027      	b.n	801137e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 801132e:	4673      	mov	r3, lr
 8011330:	f806 cb01 	strb.w	ip, [r6], #1
 8011334:	3401      	adds	r4, #1
 8011336:	3301      	adds	r3, #1
 8011338:	e79c      	b.n	8011274 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 801133a:	4620      	mov	r0, r4
 801133c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011340:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011344:	e7fa      	b.n	801133c <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8011346:	4630      	mov	r0, r6
 8011348:	f800 7b01 	strb.w	r7, [r0], #1
 801134c:	469e      	mov	lr, r3
 801134e:	4606      	mov	r6, r0
 8011350:	3401      	adds	r4, #1
 8011352:	4571      	cmp	r1, lr
 8011354:	462b      	mov	r3, r5
 8011356:	7828      	ldrb	r0, [r5, #0]
 8011358:	f10e 0e01 	add.w	lr, lr, #1
 801135c:	f105 0501 	add.w	r5, r5, #1
 8011360:	d8df      	bhi.n	8011322 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 8011362:	781d      	ldrb	r5, [r3, #0]
 8011364:	461a      	mov	r2, r3
 8011366:	2d2f      	cmp	r5, #47	; 0x2f
 8011368:	4670      	mov	r0, lr
 801136a:	f103 0301 	add.w	r3, r3, #1
 801136e:	f10e 0e01 	add.w	lr, lr, #1
 8011372:	d8da      	bhi.n	801132a <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 8011374:	4281      	cmp	r1, r0
 8011376:	d8f4      	bhi.n	8011362 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8011378:	2d22      	cmp	r5, #34	; 0x22
 801137a:	bf08      	it	eq
 801137c:	461a      	moveq	r2, r3
 801137e:	4610      	mov	r0, r2
 8011380:	f810 5b01 	ldrb.w	r5, [r0], #1
 8011384:	f10e 0301 	add.w	r3, lr, #1
 8011388:	2d22      	cmp	r5, #34	; 0x22
 801138a:	d0d0      	beq.n	801132e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 801138c:	2d2c      	cmp	r5, #44	; 0x2c
 801138e:	d0ce      	beq.n	801132e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8011390:	2d7d      	cmp	r5, #125	; 0x7d
 8011392:	d0cc      	beq.n	801132e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8011394:	4571      	cmp	r1, lr
 8011396:	d9ce      	bls.n	8011336 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8011398:	f1a5 0e20 	sub.w	lr, r5, #32
 801139c:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 80113a0:	d803      	bhi.n	80113aa <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 80113a2:	4602      	mov	r2, r0
 80113a4:	f806 5b01 	strb.w	r5, [r6], #1
 80113a8:	3401      	adds	r4, #1
 80113aa:	469e      	mov	lr, r3
 80113ac:	e7e7      	b.n	801137e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

080113b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 80113b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80113b4:	6002      	str	r2, [r0, #0]
 80113b6:	4614      	mov	r4, r2
 80113b8:	2200      	movs	r2, #0
 80113ba:	4606      	mov	r6, r0
 80113bc:	460f      	mov	r7, r1
 80113be:	80c2      	strh	r2, [r0, #6]
 80113c0:	4a1b      	ldr	r2, [pc, #108]	; (8011430 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80113c2:	8083      	strh	r3, [r0, #4]
 80113c4:	7810      	ldrb	r0, [r2, #0]
 80113c6:	f000 0001 	and.w	r0, r0, #1
 80113ca:	7230      	strb	r0, [r6, #8]
 80113cc:	463d      	mov	r5, r7
 80113ce:	782a      	ldrb	r2, [r5, #0]
 80113d0:	3701      	adds	r7, #1
 80113d2:	2a00      	cmp	r2, #0
 80113d4:	d1fa      	bne.n	80113cc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 80113d6:	1a6d      	subs	r5, r5, r1
 80113d8:	b29b      	uxth	r3, r3
 80113da:	b1d0      	cbz	r0, 8011412 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 80113dc:	1d2f      	adds	r7, r5, #4
 80113de:	429f      	cmp	r7, r3
 80113e0:	d814      	bhi.n	801140c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80113e2:	f04f 087b 	mov.w	r8, #123	; 0x7b
 80113e6:	f04f 0922 	mov.w	r9, #34	; 0x22
 80113ea:	462a      	mov	r2, r5
 80113ec:	f884 8000 	strb.w	r8, [r4]
 80113f0:	f884 9001 	strb.w	r9, [r4, #1]
 80113f4:	1ca0      	adds	r0, r4, #2
 80113f6:	f000 fef0 	bl	80121da <memmove>
 80113fa:	223a      	movs	r2, #58	; 0x3a
 80113fc:	1963      	adds	r3, r4, r5
 80113fe:	3505      	adds	r5, #5
 8011400:	f883 9002 	strb.w	r9, [r3, #2]
 8011404:	70da      	strb	r2, [r3, #3]
 8011406:	80f5      	strh	r5, [r6, #6]
 8011408:	f804 8007 	strb.w	r8, [r4, r7]
 801140c:	4630      	mov	r0, r6
 801140e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011412:	1caf      	adds	r7, r5, #2
 8011414:	429f      	cmp	r7, r3
 8011416:	d8f9      	bhi.n	801140c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011418:	4620      	mov	r0, r4
 801141a:	2323      	movs	r3, #35	; 0x23
 801141c:	462a      	mov	r2, r5
 801141e:	f800 3b01 	strb.w	r3, [r0], #1
 8011422:	f000 feda 	bl	80121da <memmove>
 8011426:	230a      	movs	r3, #10
 8011428:	442c      	add	r4, r5
 801142a:	7063      	strb	r3, [r4, #1]
 801142c:	80f7      	strh	r7, [r6, #6]
 801142e:	e7ed      	b.n	801140c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011430:	2000a8bc 			; <UNDEFINED> instruction: 0x2000a8bc

08011434 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8011434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011436:	469c      	mov	ip, r3
 8011438:	8885      	ldrh	r5, [r0, #4]
 801143a:	88c3      	ldrh	r3, [r0, #6]
 801143c:	b085      	sub	sp, #20
 801143e:	42ab      	cmp	r3, r5
 8011440:	d302      	bcc.n	8011448 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8011442:	2000      	movs	r0, #0
 8011444:	b005      	add	sp, #20
 8011446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011448:	4604      	mov	r4, r0
 801144a:	6800      	ldr	r0, [r0, #0]
 801144c:	1aed      	subs	r5, r5, r3
 801144e:	4418      	add	r0, r3
 8011450:	b2d6      	uxtb	r6, r2
 8011452:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8011456:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801145a:	f894 e008 	ldrb.w	lr, [r4, #8]
 801145e:	0e12      	lsrs	r2, r2, #24
 8011460:	f1bc 0f00 	cmp.w	ip, #0
 8011464:	d109      	bne.n	801147a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8011466:	f1be 0f00 	cmp.w	lr, #0
 801146a:	d109      	bne.n	8011480 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 801146c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011470:	e9cd 6700 	strd	r6, r7, [sp]
 8011474:	460b      	mov	r3, r1
 8011476:	4a0e      	ldr	r2, [pc, #56]	; (80114b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8011478:	e008      	b.n	801148c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801147a:	f1be 0f00 	cmp.w	lr, #0
 801147e:	d00f      	beq.n	80114a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8011480:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011484:	460b      	mov	r3, r1
 8011486:	e9cd 6700 	strd	r6, r7, [sp]
 801148a:	4a0a      	ldr	r2, [pc, #40]	; (80114b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 801148c:	4629      	mov	r1, r5
 801148e:	f7f8 f86b 	bl	8009568 <snprintf>
 8011492:	4285      	cmp	r5, r0
 8011494:	dbd5      	blt.n	8011442 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8011496:	88e3      	ldrh	r3, [r4, #6]
 8011498:	4403      	add	r3, r0
 801149a:	80e3      	strh	r3, [r4, #6]
 801149c:	2001      	movs	r0, #1
 801149e:	e7d1      	b.n	8011444 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80114a0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80114a4:	e9cd 6700 	strd	r6, r7, [sp]
 80114a8:	460b      	mov	r3, r1
 80114aa:	4a03      	ldr	r2, [pc, #12]	; (80114b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80114ac:	e7ee      	b.n	801148c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80114ae:	bf00      	nop
 80114b0:	08015eab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl, fp, ip, lr}
 80114b4:	08015e97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, fp, ip, lr}
 80114b8:	08015eac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, ip, lr}

080114bc <PropertiesBuilder::AddComment(char const*)>:
 80114bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80114be:	7a06      	ldrb	r6, [r0, #8]
 80114c0:	b996      	cbnz	r6, 80114e8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80114c2:	4604      	mov	r4, r0
 80114c4:	88c0      	ldrh	r0, [r0, #6]
 80114c6:	88a5      	ldrh	r5, [r4, #4]
 80114c8:	42a8      	cmp	r0, r5
 80114ca:	d20d      	bcs.n	80114e8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80114cc:	6827      	ldr	r7, [r4, #0]
 80114ce:	1a2d      	subs	r5, r5, r0
 80114d0:	460b      	mov	r3, r1
 80114d2:	4a06      	ldr	r2, [pc, #24]	; (80114ec <PropertiesBuilder::AddComment(char const*)+0x30>)
 80114d4:	4629      	mov	r1, r5
 80114d6:	4438      	add	r0, r7
 80114d8:	f7f8 f846 	bl	8009568 <snprintf>
 80114dc:	4285      	cmp	r5, r0
 80114de:	bfa1      	itttt	ge
 80114e0:	2601      	movge	r6, #1
 80114e2:	88e3      	ldrhge	r3, [r4, #6]
 80114e4:	18c0      	addge	r0, r0, r3
 80114e6:	80e0      	strhge	r0, [r4, #6]
 80114e8:	4630      	mov	r0, r6
 80114ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80114ec:	08015ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, ip, lr}

080114f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80114f0:	e9c0 1200 	strd	r1, r2, [r0]
 80114f4:	4770      	bx	lr

080114f6 <ReadConfigFile::~ReadConfigFile()>:
 80114f6:	4770      	bx	lr

080114f8 <ReadConfigFile::Read(char const*, unsigned int)>:
 80114f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114fc:	4606      	mov	r6, r0
 80114fe:	460d      	mov	r5, r1
 8011500:	4614      	mov	r4, r2
 8011502:	f04f 0800 	mov.w	r8, #0
 8011506:	b090      	sub	sp, #64	; 0x40
 8011508:	b33c      	cbz	r4, 801155a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801150a:	466b      	mov	r3, sp
 801150c:	462a      	mov	r2, r5
 801150e:	4619      	mov	r1, r3
 8011510:	7817      	ldrb	r7, [r2, #0]
 8011512:	4610      	mov	r0, r2
 8011514:	2f0d      	cmp	r7, #13
 8011516:	f102 0201 	add.w	r2, r2, #1
 801151a:	d013      	beq.n	8011544 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 801151c:	2f0a      	cmp	r7, #10
 801151e:	d011      	beq.n	8011544 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8011520:	f803 7b01 	strb.w	r7, [r3], #1
 8011524:	1a58      	subs	r0, r3, r1
 8011526:	283f      	cmp	r0, #63	; 0x3f
 8011528:	4615      	mov	r5, r2
 801152a:	dc16      	bgt.n	801155a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801152c:	3c01      	subs	r4, #1
 801152e:	d1ef      	bne.n	8011510 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 8011530:	f89d 2000 	ldrb.w	r2, [sp]
 8011534:	2a60      	cmp	r2, #96	; 0x60
 8011536:	d9e7      	bls.n	8011508 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011538:	f883 8000 	strb.w	r8, [r3]
 801153c:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011540:	4798      	blx	r3
 8011542:	e7e1      	b.n	8011508 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011544:	4605      	mov	r5, r0
 8011546:	2c00      	cmp	r4, #0
 8011548:	d0f2      	beq.n	8011530 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 801154a:	f810 2b01 	ldrb.w	r2, [r0], #1
 801154e:	2a0d      	cmp	r2, #13
 8011550:	d001      	beq.n	8011556 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011552:	2a0a      	cmp	r2, #10
 8011554:	d1ec      	bne.n	8011530 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8011556:	3c01      	subs	r4, #1
 8011558:	e7f4      	b.n	8011544 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 801155a:	b010      	add	sp, #64	; 0x40
 801155c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011560 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011560:	b570      	push	{r4, r5, r6, lr}
 8011562:	4615      	mov	r5, r2
 8011564:	461c      	mov	r4, r3
 8011566:	f000 f91b 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 801156a:	b160      	cbz	r0, 8011586 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 801156c:	2100      	movs	r1, #0
 801156e:	5c43      	ldrb	r3, [r0, r1]
 8011570:	6826      	ldr	r6, [r4, #0]
 8011572:	b28a      	uxth	r2, r1
 8011574:	b123      	cbz	r3, 8011580 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8011576:	42b2      	cmp	r2, r6
 8011578:	d207      	bcs.n	801158a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 801157a:	546b      	strb	r3, [r5, r1]
 801157c:	3101      	adds	r1, #1
 801157e:	e7f6      	b.n	801156e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8011580:	2000      	movs	r0, #0
 8011582:	6022      	str	r2, [r4, #0]
 8011584:	bd70      	pop	{r4, r5, r6, pc}
 8011586:	2001      	movs	r0, #1
 8011588:	e7fc      	b.n	8011584 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 801158a:	2b0a      	cmp	r3, #10
 801158c:	d0f8      	beq.n	8011580 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 801158e:	2002      	movs	r0, #2
 8011590:	e7f8      	b.n	8011584 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

08011592 <Sscan::Float(char const*, char const*, float&)>:
 8011592:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011596:	4616      	mov	r6, r2
 8011598:	f000 f902 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 801159c:	2800      	cmp	r0, #0
 801159e:	d059      	beq.n	8011654 <Sscan::Float(char const*, char const*, float&)+0xc2>
 80115a0:	4604      	mov	r4, r0
 80115a2:	7803      	ldrb	r3, [r0, #0]
 80115a4:	2b2d      	cmp	r3, #45	; 0x2d
 80115a6:	bf08      	it	eq
 80115a8:	3401      	addeq	r4, #1
 80115aa:	7823      	ldrb	r3, [r4, #0]
 80115ac:	bf0c      	ite	eq
 80115ae:	f04f 0801 	moveq.w	r8, #1
 80115b2:	f04f 0800 	movne.w	r8, #0
 80115b6:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80115ba:	d103      	bne.n	80115c4 <Sscan::Float(char const*, char const*, float&)+0x32>
 80115bc:	2702      	movs	r7, #2
 80115be:	4638      	mov	r0, r7
 80115c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80115c4:	2000      	movs	r0, #0
 80115c6:	220a      	movs	r2, #10
 80115c8:	7823      	ldrb	r3, [r4, #0]
 80115ca:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80115ce:	2909      	cmp	r1, #9
 80115d0:	d8f4      	bhi.n	80115bc <Sscan::Float(char const*, char const*, float&)+0x2a>
 80115d2:	fb02 3000 	mla	r0, r2, r0, r3
 80115d6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80115da:	3830      	subs	r0, #48	; 0x30
 80115dc:	2b2e      	cmp	r3, #46	; 0x2e
 80115de:	d002      	beq.n	80115e6 <Sscan::Float(char const*, char const*, float&)+0x54>
 80115e0:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80115e4:	d1f0      	bne.n	80115c8 <Sscan::Float(char const*, char const*, float&)+0x36>
 80115e6:	f7f6 fb89 	bl	8007cfc <__aeabi_ui2f>
 80115ea:	6030      	str	r0, [r6, #0]
 80115ec:	7823      	ldrb	r3, [r4, #0]
 80115ee:	4605      	mov	r5, r0
 80115f0:	2b2e      	cmp	r3, #46	; 0x2e
 80115f2:	d008      	beq.n	8011606 <Sscan::Float(char const*, char const*, float&)+0x74>
 80115f4:	f1b8 0f00 	cmp.w	r8, #0
 80115f8:	d101      	bne.n	80115fe <Sscan::Float(char const*, char const*, float&)+0x6c>
 80115fa:	2700      	movs	r7, #0
 80115fc:	e7df      	b.n	80115be <Sscan::Float(char const*, char const*, float&)+0x2c>
 80115fe:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8011602:	6035      	str	r5, [r6, #0]
 8011604:	e7f9      	b.n	80115fa <Sscan::Float(char const*, char const*, float&)+0x68>
 8011606:	f04f 0901 	mov.w	r9, #1
 801160a:	2000      	movs	r0, #0
 801160c:	220a      	movs	r2, #10
 801160e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011612:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8011616:	d007      	beq.n	8011628 <Sscan::Float(char const*, char const*, float&)+0x96>
 8011618:	3b30      	subs	r3, #48	; 0x30
 801161a:	2b09      	cmp	r3, #9
 801161c:	d8ce      	bhi.n	80115bc <Sscan::Float(char const*, char const*, float&)+0x2a>
 801161e:	fb02 3000 	mla	r0, r2, r0, r3
 8011622:	fb02 f909 	mul.w	r9, r2, r9
 8011626:	e7f2      	b.n	801160e <Sscan::Float(char const*, char const*, float&)+0x7c>
 8011628:	f7f6 fb68 	bl	8007cfc <__aeabi_ui2f>
 801162c:	4604      	mov	r4, r0
 801162e:	4648      	mov	r0, r9
 8011630:	f7f6 fb64 	bl	8007cfc <__aeabi_ui2f>
 8011634:	4601      	mov	r1, r0
 8011636:	4620      	mov	r0, r4
 8011638:	f7f7 f848 	bl	80086cc <__aeabi_fdiv>
 801163c:	4629      	mov	r1, r5
 801163e:	f7f6 faad 	bl	8007b9c <__addsf3>
 8011642:	f1b8 0f00 	cmp.w	r8, #0
 8011646:	d101      	bne.n	801164c <Sscan::Float(char const*, char const*, float&)+0xba>
 8011648:	6030      	str	r0, [r6, #0]
 801164a:	e7d6      	b.n	80115fa <Sscan::Float(char const*, char const*, float&)+0x68>
 801164c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8011650:	6030      	str	r0, [r6, #0]
 8011652:	e7b4      	b.n	80115be <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011654:	2701      	movs	r7, #1
 8011656:	e7b2      	b.n	80115be <Sscan::Float(char const*, char const*, float&)+0x2c>

08011658 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8011658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801165a:	4615      	mov	r5, r2
 801165c:	f000 f8a0 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 8011660:	b3c0      	cbz	r0, 80116d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 8011662:	2400      	movs	r4, #0
 8011664:	270a      	movs	r7, #10
 8011666:	ae01      	add	r6, sp, #4
 8011668:	4603      	mov	r3, r0
 801166a:	2100      	movs	r1, #0
 801166c:	f100 0c04 	add.w	ip, r0, #4
 8011670:	4618      	mov	r0, r3
 8011672:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011676:	2a2e      	cmp	r2, #46	; 0x2e
 8011678:	d00e      	beq.n	8011698 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801167a:	b16a      	cbz	r2, 8011698 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801167c:	4560      	cmp	r0, ip
 801167e:	d102      	bne.n	8011686 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 8011680:	2002      	movs	r0, #2
 8011682:	b003      	add	sp, #12
 8011684:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011686:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 801168a:	2b09      	cmp	r3, #9
 801168c:	d8f8      	bhi.n	8011680 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801168e:	fb07 2101 	mla	r1, r7, r1, r2
 8011692:	4603      	mov	r3, r0
 8011694:	3930      	subs	r1, #48	; 0x30
 8011696:	e7eb      	b.n	8011670 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 8011698:	29ff      	cmp	r1, #255	; 0xff
 801169a:	d8f1      	bhi.n	8011680 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801169c:	3401      	adds	r4, #1
 801169e:	2c03      	cmp	r4, #3
 80116a0:	f806 1b01 	strb.w	r1, [r6], #1
 80116a4:	d1e0      	bne.n	8011668 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 80116a6:	2400      	movs	r4, #0
 80116a8:	220a      	movs	r2, #10
 80116aa:	1d1e      	adds	r6, r3, #4
 80116ac:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80116b0:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80116b4:	d007      	beq.n	80116c6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 80116b6:	429e      	cmp	r6, r3
 80116b8:	d0e2      	beq.n	8011680 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80116ba:	3930      	subs	r1, #48	; 0x30
 80116bc:	2909      	cmp	r1, #9
 80116be:	d8df      	bhi.n	8011680 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80116c0:	fb02 1404 	mla	r4, r2, r4, r1
 80116c4:	e7f2      	b.n	80116ac <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80116c6:	2cff      	cmp	r4, #255	; 0xff
 80116c8:	d8da      	bhi.n	8011680 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80116ca:	f88d 4007 	strb.w	r4, [sp, #7]
 80116ce:	9b01      	ldr	r3, [sp, #4]
 80116d0:	602b      	str	r3, [r5, #0]
 80116d2:	e7d6      	b.n	8011682 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 80116d4:	2001      	movs	r0, #1
 80116d6:	e7d4      	b.n	8011682 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

080116d8 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80116d8:	b538      	push	{r3, r4, r5, lr}
 80116da:	4615      	mov	r5, r2
 80116dc:	f000 f860 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 80116e0:	b1a0      	cbz	r0, 801170c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80116e2:	4604      	mov	r4, r0
 80116e4:	2100      	movs	r1, #0
 80116e6:	220a      	movs	r2, #10
 80116e8:	7823      	ldrb	r3, [r4, #0]
 80116ea:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80116ee:	2809      	cmp	r0, #9
 80116f0:	d80e      	bhi.n	8011710 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80116f2:	fb02 3101 	mla	r1, r2, r1, r3
 80116f6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80116fa:	3930      	subs	r1, #48	; 0x30
 80116fc:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011700:	d1f2      	bne.n	80116e8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8011702:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8011706:	d203      	bcs.n	8011710 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011708:	8029      	strh	r1, [r5, #0]
 801170a:	bd38      	pop	{r3, r4, r5, pc}
 801170c:	2001      	movs	r0, #1
 801170e:	e7fc      	b.n	801170a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8011710:	2002      	movs	r0, #2
 8011712:	e7fa      	b.n	801170a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08011714 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8011714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011716:	4615      	mov	r5, r2
 8011718:	f000 f842 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 801171c:	b1f8      	cbz	r0, 801175e <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 801171e:	2300      	movs	r3, #0
 8011720:	4604      	mov	r4, r0
 8011722:	461e      	mov	r6, r3
 8011724:	270a      	movs	r7, #10
 8011726:	7822      	ldrb	r2, [r4, #0]
 8011728:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 801172c:	2909      	cmp	r1, #9
 801172e:	d818      	bhi.n	8011762 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011730:	fba3 3107 	umull	r3, r1, r3, r7
 8011734:	fb07 1106 	mla	r1, r7, r6, r1
 8011738:	3b30      	subs	r3, #48	; 0x30
 801173a:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 801173e:	18d3      	adds	r3, r2, r3
 8011740:	f141 0600 	adc.w	r6, r1, #0
 8011744:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011748:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 801174c:	d1eb      	bne.n	8011726 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 801174e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8011752:	429a      	cmp	r2, r3
 8011754:	eb70 0206 	sbcs.w	r2, r0, r6
 8011758:	d303      	bcc.n	8011762 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801175a:	602b      	str	r3, [r5, #0]
 801175c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801175e:	2001      	movs	r0, #1
 8011760:	e7fc      	b.n	801175c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8011762:	2002      	movs	r0, #2
 8011764:	e7fa      	b.n	801175c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08011766 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8011766:	b538      	push	{r3, r4, r5, lr}
 8011768:	4615      	mov	r5, r2
 801176a:	f000 f819 	bl	80117a0 <Sscan::checkName(char const*, char const*)>
 801176e:	b198      	cbz	r0, 8011798 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8011770:	4604      	mov	r4, r0
 8011772:	2100      	movs	r1, #0
 8011774:	220a      	movs	r2, #10
 8011776:	7823      	ldrb	r3, [r4, #0]
 8011778:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801177c:	2809      	cmp	r0, #9
 801177e:	d80d      	bhi.n	801179c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011780:	fb02 3101 	mla	r1, r2, r1, r3
 8011784:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011788:	3930      	subs	r1, #48	; 0x30
 801178a:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801178e:	d1f2      	bne.n	8011776 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8011790:	29ff      	cmp	r1, #255	; 0xff
 8011792:	d803      	bhi.n	801179c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011794:	7029      	strb	r1, [r5, #0]
 8011796:	bd38      	pop	{r3, r4, r5, pc}
 8011798:	2001      	movs	r0, #1
 801179a:	e7fc      	b.n	8011796 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 801179c:	2002      	movs	r0, #2
 801179e:	e7fa      	b.n	8011796 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080117a0 <Sscan::checkName(char const*, char const*)>:
 80117a0:	4603      	mov	r3, r0
 80117a2:	b510      	push	{r4, lr}
 80117a4:	3901      	subs	r1, #1
 80117a6:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80117aa:	461c      	mov	r4, r3
 80117ac:	f813 2b01 	ldrb.w	r2, [r3], #1
 80117b0:	b120      	cbz	r0, 80117bc <Sscan::checkName(char const*, char const*)+0x1c>
 80117b2:	b10a      	cbz	r2, 80117b8 <Sscan::checkName(char const*, char const*)+0x18>
 80117b4:	4290      	cmp	r0, r2
 80117b6:	d0f6      	beq.n	80117a6 <Sscan::checkName(char const*, char const*)+0x6>
 80117b8:	2000      	movs	r0, #0
 80117ba:	e006      	b.n	80117ca <Sscan::checkName(char const*, char const*)+0x2a>
 80117bc:	2a3d      	cmp	r2, #61	; 0x3d
 80117be:	d104      	bne.n	80117ca <Sscan::checkName(char const*, char const*)+0x2a>
 80117c0:	7860      	ldrb	r0, [r4, #1]
 80117c2:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80117c6:	d000      	beq.n	80117ca <Sscan::checkName(char const*, char const*)+0x2a>
 80117c8:	1c60      	adds	r0, r4, #1
 80117ca:	bd10      	pop	{r4, pc}

080117cc <Display::PrintInfo() [clone .isra.0]>:
 80117cc:	b910      	cbnz	r0, 80117d4 <Display::PrintInfo() [clone .isra.0]+0x8>
 80117ce:	4803      	ldr	r0, [pc, #12]	; (80117dc <Display::PrintInfo() [clone .isra.0]+0x10>)
 80117d0:	f000 bd3f 	b.w	8012252 <puts>
 80117d4:	6803      	ldr	r3, [r0, #0]
 80117d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80117d8:	4718      	bx	r3
 80117da:	bf00      	nop
 80117dc:	0801604c 	stmdaeq	r1, {r2, r3, r6, sp, lr}

080117e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80117e0:	b513      	push	{r0, r1, r4, lr}
 80117e2:	4604      	mov	r4, r0
 80117e4:	0a13      	lsrs	r3, r2, #8
 80117e6:	7800      	ldrb	r0, [r0, #0]
 80117e8:	f88d 1004 	strb.w	r1, [sp, #4]
 80117ec:	f88d 3005 	strb.w	r3, [sp, #5]
 80117f0:	f88d 2006 	strb.w	r2, [sp, #6]
 80117f4:	f001 fc72 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 80117f8:	6860      	ldr	r0, [r4, #4]
 80117fa:	f001 fc67 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 80117fe:	2103      	movs	r1, #3
 8011800:	a801      	add	r0, sp, #4
 8011802:	f001 fc71 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011806:	b002      	add	sp, #8
 8011808:	bd10      	pop	{r4, pc}

0801180a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 801180a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801180c:	460d      	mov	r5, r1
 801180e:	4604      	mov	r4, r0
 8011810:	f001 fc64 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 8011814:	4628      	mov	r0, r5
 8011816:	f001 fc59 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 801181a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801181e:	2b07      	cmp	r3, #7
 8011820:	d902      	bls.n	8011828 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8011822:	3c50      	subs	r4, #80	; 0x50
 8011824:	2c0f      	cmp	r4, #15
 8011826:	d809      	bhi.n	801183c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011828:	2101      	movs	r1, #1
 801182a:	f10d 0007 	add.w	r0, sp, #7
 801182e:	f001 fcc1 	bl	80131b4 <gd32_i2c_read(char*, unsigned int)>
 8011832:	fab0 f080 	clz	r0, r0
 8011836:	0940      	lsrs	r0, r0, #5
 8011838:	b003      	add	sp, #12
 801183a:	bd30      	pop	{r4, r5, pc}
 801183c:	2100      	movs	r1, #0
 801183e:	4608      	mov	r0, r1
 8011840:	f001 fc52 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011844:	e7f5      	b.n	8011832 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08011846 <Display::Detect7Segment()>:
 8011846:	b538      	push	{r3, r4, r5, lr}
 8011848:	68c1      	ldr	r1, [r0, #12]
 801184a:	4604      	mov	r4, r0
 801184c:	7a00      	ldrb	r0, [r0, #8]
 801184e:	f7ff ffdc 	bl	801180a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8011852:	7460      	strb	r0, [r4, #17]
 8011854:	b170      	cbz	r0, 8011874 <Display::Detect7Segment()+0x2e>
 8011856:	2200      	movs	r2, #0
 8011858:	f104 0508 	add.w	r5, r4, #8
 801185c:	4611      	mov	r1, r2
 801185e:	4628      	mov	r0, r5
 8011860:	f7ff ffbe 	bl	80117e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011864:	7c63      	ldrb	r3, [r4, #17]
 8011866:	b12b      	cbz	r3, 8011874 <Display::Detect7Segment()+0x2e>
 8011868:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 801186c:	2112      	movs	r1, #18
 801186e:	4628      	mov	r0, r5
 8011870:	f7ff ffb6 	bl	80117e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011874:	bd38      	pop	{r3, r4, r5, pc}

08011876 <Display::Detect(display::Type)>:
 8011876:	2902      	cmp	r1, #2
 8011878:	b538      	push	{r3, r4, r5, lr}
 801187a:	4604      	mov	r4, r0
 801187c:	d014      	beq.n	80118a8 <Display::Detect(display::Type)+0x32>
 801187e:	2904      	cmp	r1, #4
 8011880:	d01b      	beq.n	80118ba <Display::Detect(display::Type)+0x44>
 8011882:	69a0      	ldr	r0, [r4, #24]
 8011884:	b168      	cbz	r0, 80118a2 <Display::Detect(display::Type)+0x2c>
 8011886:	6803      	ldr	r3, [r0, #0]
 8011888:	689b      	ldr	r3, [r3, #8]
 801188a:	4798      	blx	r3
 801188c:	4603      	mov	r3, r0
 801188e:	69a0      	ldr	r0, [r4, #24]
 8011890:	b9ab      	cbnz	r3, 80118be <Display::Detect(display::Type)+0x48>
 8011892:	b110      	cbz	r0, 801189a <Display::Detect(display::Type)+0x24>
 8011894:	6803      	ldr	r3, [r0, #0]
 8011896:	685b      	ldr	r3, [r3, #4]
 8011898:	4798      	blx	r3
 801189a:	2300      	movs	r3, #0
 801189c:	61a3      	str	r3, [r4, #24]
 801189e:	2304      	movs	r3, #4
 80118a0:	6023      	str	r3, [r4, #0]
 80118a2:	2300      	movs	r3, #0
 80118a4:	6163      	str	r3, [r4, #20]
 80118a6:	e010      	b.n	80118ca <Display::Detect(display::Type)+0x54>
 80118a8:	2018      	movs	r0, #24
 80118aa:	f000 fbd7 	bl	801205c <operator new(unsigned int)>
 80118ae:	4605      	mov	r5, r0
 80118b0:	2100      	movs	r1, #0
 80118b2:	f000 f8a3 	bl	80119fc <Ssd1306::Ssd1306(TOledPanel)>
 80118b6:	61a5      	str	r5, [r4, #24]
 80118b8:	e7e3      	b.n	8011882 <Display::Detect(display::Type)+0xc>
 80118ba:	6001      	str	r1, [r0, #0]
 80118bc:	e7e1      	b.n	8011882 <Display::Detect(display::Type)+0xc>
 80118be:	6803      	ldr	r3, [r0, #0]
 80118c0:	68db      	ldr	r3, [r3, #12]
 80118c2:	4798      	blx	r3
 80118c4:	69a3      	ldr	r3, [r4, #24]
 80118c6:	2b00      	cmp	r3, #0
 80118c8:	d0eb      	beq.n	80118a2 <Display::Detect(display::Type)+0x2c>
 80118ca:	bd38      	pop	{r3, r4, r5, pc}

080118cc <Display::Display()>:
 80118cc:	2304      	movs	r3, #4
 80118ce:	b510      	push	{r4, lr}
 80118d0:	6003      	str	r3, [r0, #0]
 80118d2:	4b0f      	ldr	r3, [pc, #60]	; (8011910 <Display::Display()+0x44>)
 80118d4:	4604      	mov	r4, r0
 80118d6:	681b      	ldr	r3, [r3, #0]
 80118d8:	4a0e      	ldr	r2, [pc, #56]	; (8011914 <Display::Display()+0x48>)
 80118da:	6043      	str	r3, [r0, #4]
 80118dc:	2321      	movs	r3, #33	; 0x21
 80118de:	7203      	strb	r3, [r0, #8]
 80118e0:	4b0d      	ldr	r3, [pc, #52]	; (8011918 <Display::Display()+0x4c>)
 80118e2:	2102      	movs	r1, #2
 80118e4:	60c3      	str	r3, [r0, #12]
 80118e6:	2300      	movs	r3, #0
 80118e8:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80118ec:	8203      	strh	r3, [r0, #16]
 80118ee:	4b0b      	ldr	r3, [pc, #44]	; (801191c <Display::Display()+0x50>)
 80118f0:	6018      	str	r0, [r3, #0]
 80118f2:	f7ff ffc0 	bl	8011876 <Display::Detect(display::Type)>
 80118f6:	4620      	mov	r0, r4
 80118f8:	f7ff ffa5 	bl	8011846 <Display::Detect7Segment()>
 80118fc:	69a3      	ldr	r3, [r4, #24]
 80118fe:	b10b      	cbz	r3, 8011904 <Display::Display()+0x38>
 8011900:	f000 f80e 	bl	8011920 <display::timeout::gpio_init()>
 8011904:	69a0      	ldr	r0, [r4, #24]
 8011906:	f7ff ff61 	bl	80117cc <Display::PrintInfo() [clone .isra.0]>
 801190a:	4620      	mov	r0, r4
 801190c:	bd10      	pop	{r4, pc}
 801190e:	bf00      	nop
 8011910:	2000a9c4 	andcs	sl, r0, r4, asr #19
 8011914:	000493e0 	andeq	r9, r4, r0, ror #7
 8011918:	00061a80 	andeq	r1, r6, r0, lsl #21
 801191c:	2000a8c0 	andcs	sl, r0, r0, asr #17

08011920 <display::timeout::gpio_init()>:
 8011920:	4770      	bx	lr

08011922 <display::timeout::gpio_renew()>:
 8011922:	2000      	movs	r0, #0
 8011924:	4770      	bx	lr

08011926 <Ssd1306::~Ssd1306()>:
 8011926:	4770      	bx	lr

08011928 <Ssd1306::SetCursor(unsigned int)>:
 8011928:	4770      	bx	lr
	...

0801192c <Ssd1306::PrintInfo()>:
 801192c:	b410      	push	{r4}
 801192e:	4906      	ldr	r1, [pc, #24]	; (8011948 <Ssd1306::PrintInfo()+0x1c>)
 8011930:	7c44      	ldrb	r4, [r0, #17]
 8011932:	7903      	ldrb	r3, [r0, #4]
 8011934:	7942      	ldrb	r2, [r0, #5]
 8011936:	4805      	ldr	r0, [pc, #20]	; (801194c <Ssd1306::PrintInfo()+0x20>)
 8011938:	2c00      	cmp	r4, #0
 801193a:	bf08      	it	eq
 801193c:	4601      	moveq	r1, r0
 801193e:	4804      	ldr	r0, [pc, #16]	; (8011950 <Ssd1306::PrintInfo()+0x24>)
 8011940:	bc10      	pop	{r4}
 8011942:	f7f7 bde9 	b.w	8009518 <printf>
 8011946:	bf00      	nop
 8011948:	0801605d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sp, lr}
 801194c:	08016064 	stmdaeq	r1, {r2, r5, r6, sp, lr}
 8011950:	0801606c 	stmdaeq	r1, {r2, r3, r5, r6, sp, lr}

08011954 <Ssd1306::~Ssd1306()>:
 8011954:	b510      	push	{r4, lr}
 8011956:	4604      	mov	r4, r0
 8011958:	f000 fb7c 	bl	8012054 <operator delete(void*)>
 801195c:	4620      	mov	r0, r4
 801195e:	bd10      	pop	{r4, pc}

08011960 <HAL_I2C::Setup()>:
 8011960:	b510      	push	{r4, lr}
 8011962:	4604      	mov	r4, r0
 8011964:	7800      	ldrb	r0, [r0, #0]
 8011966:	f001 fbb9 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 801196a:	6860      	ldr	r0, [r4, #4]
 801196c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011970:	f001 bbac 	b.w	80130cc <gd32_i2c_set_baudrate(unsigned int)>

08011974 <Ssd1306::PutChar(int)>:
 8011974:	b510      	push	{r4, lr}
 8011976:	f1a1 0420 	sub.w	r4, r1, #32
 801197a:	2c5f      	cmp	r4, #95	; 0x5f
 801197c:	bf88      	it	hi
 801197e:	2400      	movhi	r4, #0
 8011980:	3008      	adds	r0, #8
 8011982:	f7ff ffed 	bl	8011960 <HAL_I2C::Setup()>
 8011986:	4804      	ldr	r0, [pc, #16]	; (8011998 <Ssd1306::PutChar(int)+0x24>)
 8011988:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 801198c:	4420      	add	r0, r4
 801198e:	2107      	movs	r1, #7
 8011990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011994:	f001 bba8 	b.w	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011998:	08016080 	stmdaeq	r1, {r7, sp, lr}

0801199c <Ssd1306::PutString(char const*)>:
 801199c:	b538      	push	{r3, r4, r5, lr}
 801199e:	4605      	mov	r5, r0
 80119a0:	1e4c      	subs	r4, r1, #1
 80119a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80119a6:	b119      	cbz	r1, 80119b0 <Ssd1306::PutString(char const*)+0x14>
 80119a8:	4628      	mov	r0, r5
 80119aa:	f7ff ffe3 	bl	8011974 <Ssd1306::PutChar(int)>
 80119ae:	e7f8      	b.n	80119a2 <Ssd1306::PutString(char const*)+0x6>
 80119b0:	bd38      	pop	{r3, r4, r5, pc}

080119b2 <Ssd1306::Text(char const*, unsigned int)>:
 80119b2:	b570      	push	{r4, r5, r6, lr}
 80119b4:	7903      	ldrb	r3, [r0, #4]
 80119b6:	4605      	mov	r5, r0
 80119b8:	460c      	mov	r4, r1
 80119ba:	4293      	cmp	r3, r2
 80119bc:	bf94      	ite	ls
 80119be:	18ce      	addls	r6, r1, r3
 80119c0:	188e      	addhi	r6, r1, r2
 80119c2:	42b4      	cmp	r4, r6
 80119c4:	d005      	beq.n	80119d2 <Ssd1306::Text(char const*, unsigned int)+0x20>
 80119c6:	4628      	mov	r0, r5
 80119c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80119cc:	f7ff ffd2 	bl	8011974 <Ssd1306::PutChar(int)>
 80119d0:	e7f7      	b.n	80119c2 <Ssd1306::Text(char const*, unsigned int)+0x10>
 80119d2:	bd70      	pop	{r4, r5, r6, pc}

080119d4 <Ssd1306::InitMembers()>:
 80119d4:	7c03      	ldrb	r3, [r0, #16]
 80119d6:	b12b      	cbz	r3, 80119e4 <Ssd1306::InitMembers()+0x10>
 80119d8:	3b01      	subs	r3, #1
 80119da:	2b01      	cmp	r3, #1
 80119dc:	d908      	bls.n	80119f0 <Ssd1306::InitMembers()+0x1c>
 80119de:	f640 0315 	movw	r3, #2069	; 0x815
 80119e2:	e007      	b.n	80119f4 <Ssd1306::InitMembers()+0x20>
 80119e4:	f640 0315 	movw	r3, #2069	; 0x815
 80119e8:	8083      	strh	r3, [r0, #4]
 80119ea:	2308      	movs	r3, #8
 80119ec:	6143      	str	r3, [r0, #20]
 80119ee:	4770      	bx	lr
 80119f0:	f240 4315 	movw	r3, #1045	; 0x415
 80119f4:	8083      	strh	r3, [r0, #4]
 80119f6:	2304      	movs	r3, #4
 80119f8:	e7f8      	b.n	80119ec <Ssd1306::InitMembers()+0x18>
	...

080119fc <Ssd1306::Ssd1306(TOledPanel)>:
 80119fc:	4a08      	ldr	r2, [pc, #32]	; (8011a20 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80119fe:	b508      	push	{r3, lr}
 8011a00:	6002      	str	r2, [r0, #0]
 8011a02:	227f      	movs	r2, #127	; 0x7f
 8011a04:	80c2      	strh	r2, [r0, #6]
 8011a06:	223c      	movs	r2, #60	; 0x3c
 8011a08:	7202      	strb	r2, [r0, #8]
 8011a0a:	4a06      	ldr	r2, [pc, #24]	; (8011a24 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8011a0c:	7401      	strb	r1, [r0, #16]
 8011a0e:	60c2      	str	r2, [r0, #12]
 8011a10:	2200      	movs	r2, #0
 8011a12:	7442      	strb	r2, [r0, #17]
 8011a14:	4a04      	ldr	r2, [pc, #16]	; (8011a28 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8011a16:	6010      	str	r0, [r2, #0]
 8011a18:	f7ff ffdc 	bl	80119d4 <Ssd1306::InitMembers()>
 8011a1c:	bd08      	pop	{r3, pc}
 8011a1e:	bf00      	nop
 8011a20:	08016358 	stmdaeq	r1, {r3, r4, r6, r8, r9, sp, lr}
 8011a24:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011a28:	2000a94c 	andcs	sl, r0, ip, asr #18

08011a2c <Ssd1306::SendCommand(unsigned char)>:
 8011a2c:	2300      	movs	r3, #0
 8011a2e:	b507      	push	{r0, r1, r2, lr}
 8011a30:	3008      	adds	r0, #8
 8011a32:	f88d 3004 	strb.w	r3, [sp, #4]
 8011a36:	f88d 1005 	strb.w	r1, [sp, #5]
 8011a3a:	f7ff ff91 	bl	8011960 <HAL_I2C::Setup()>
 8011a3e:	2102      	movs	r1, #2
 8011a40:	a801      	add	r0, sp, #4
 8011a42:	f001 fb51 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011a46:	b003      	add	sp, #12
 8011a48:	f85d fb04 	ldr.w	pc, [sp], #4

08011a4c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8011a4c:	2914      	cmp	r1, #20
 8011a4e:	b570      	push	{r4, r5, r6, lr}
 8011a50:	4605      	mov	r5, r0
 8011a52:	4616      	mov	r6, r2
 8011a54:	d81c      	bhi.n	8011a90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011a56:	7943      	ldrb	r3, [r0, #5]
 8011a58:	4293      	cmp	r3, r2
 8011a5a:	d919      	bls.n	8011a90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011a5c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011a60:	7c43      	ldrb	r3, [r0, #17]
 8011a62:	004c      	lsls	r4, r1, #1
 8011a64:	b2e4      	uxtb	r4, r4
 8011a66:	b10b      	cbz	r3, 8011a6c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8011a68:	3404      	adds	r4, #4
 8011a6a:	b2e4      	uxtb	r4, r4
 8011a6c:	4628      	mov	r0, r5
 8011a6e:	f004 010e 	and.w	r1, r4, #14
 8011a72:	f7ff ffdb 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011a76:	0921      	lsrs	r1, r4, #4
 8011a78:	4628      	mov	r0, r5
 8011a7a:	f041 0110 	orr.w	r1, r1, #16
 8011a7e:	f7ff ffd5 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011a82:	4628      	mov	r0, r5
 8011a84:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8011a88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a8c:	f7ff bfce 	b.w	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011a90:	bd70      	pop	{r4, r5, r6, pc}

08011a92 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8011a92:	b570      	push	{r4, r5, r6, lr}
 8011a94:	4604      	mov	r4, r0
 8011a96:	4615      	mov	r5, r2
 8011a98:	461e      	mov	r6, r3
 8011a9a:	b171      	cbz	r1, 8011aba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8011a9c:	7943      	ldrb	r3, [r0, #5]
 8011a9e:	428b      	cmp	r3, r1
 8011aa0:	d30b      	bcc.n	8011aba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8011aa2:	3901      	subs	r1, #1
 8011aa4:	b2ca      	uxtb	r2, r1
 8011aa6:	2100      	movs	r1, #0
 8011aa8:	f7ff ffd0 	bl	8011a4c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011aac:	4632      	mov	r2, r6
 8011aae:	4629      	mov	r1, r5
 8011ab0:	4620      	mov	r0, r4
 8011ab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ab6:	f7ff bf7c 	b.w	80119b2 <Ssd1306::Text(char const*, unsigned int)>
 8011aba:	bd70      	pop	{r4, r5, r6, pc}

08011abc <Ssd1306::ClearLine(unsigned char)>:
 8011abc:	b538      	push	{r3, r4, r5, lr}
 8011abe:	4605      	mov	r5, r0
 8011ac0:	b1b9      	cbz	r1, 8011af2 <Ssd1306::ClearLine(unsigned char)+0x36>
 8011ac2:	7943      	ldrb	r3, [r0, #5]
 8011ac4:	428b      	cmp	r3, r1
 8011ac6:	d314      	bcc.n	8011af2 <Ssd1306::ClearLine(unsigned char)+0x36>
 8011ac8:	3901      	subs	r1, #1
 8011aca:	b2cc      	uxtb	r4, r1
 8011acc:	4622      	mov	r2, r4
 8011ace:	2100      	movs	r1, #0
 8011ad0:	f7ff ffbc 	bl	8011a4c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011ad4:	f105 0008 	add.w	r0, r5, #8
 8011ad8:	f7ff ff42 	bl	8011960 <HAL_I2C::Setup()>
 8011adc:	2181      	movs	r1, #129	; 0x81
 8011ade:	4805      	ldr	r0, [pc, #20]	; (8011af4 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8011ae0:	f001 fb02 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011ae4:	4622      	mov	r2, r4
 8011ae6:	4628      	mov	r0, r5
 8011ae8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011aec:	2100      	movs	r1, #0
 8011aee:	f7ff bfad 	b.w	8011a4c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011af2:	bd38      	pop	{r3, r4, r5, pc}
 8011af4:	2000a8c4 	andcs	sl, r0, r4, asr #17

08011af8 <Ssd1306::SetSleep(bool)>:
 8011af8:	b111      	cbz	r1, 8011b00 <Ssd1306::SetSleep(bool)+0x8>
 8011afa:	21ae      	movs	r1, #174	; 0xae
 8011afc:	f7ff bf96 	b.w	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b00:	21af      	movs	r1, #175	; 0xaf
 8011b02:	e7fb      	b.n	8011afc <Ssd1306::SetSleep(bool)+0x4>

08011b04 <Ssd1306::SetContrast(unsigned char)>:
 8011b04:	b538      	push	{r3, r4, r5, lr}
 8011b06:	4604      	mov	r4, r0
 8011b08:	460d      	mov	r5, r1
 8011b0a:	7181      	strb	r1, [r0, #6]
 8011b0c:	2181      	movs	r1, #129	; 0x81
 8011b0e:	f7ff ff8d 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b12:	4629      	mov	r1, r5
 8011b14:	4620      	mov	r0, r4
 8011b16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011b1a:	f7ff bf87 	b.w	8011a2c <Ssd1306::SendCommand(unsigned char)>

08011b1e <Ssd1306::SetFlipVertically(bool)>:
 8011b1e:	b510      	push	{r4, lr}
 8011b20:	4604      	mov	r4, r0
 8011b22:	71c1      	strb	r1, [r0, #7]
 8011b24:	b141      	cbz	r1, 8011b38 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8011b26:	21c0      	movs	r1, #192	; 0xc0
 8011b28:	f7ff ff80 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b2c:	21a0      	movs	r1, #160	; 0xa0
 8011b2e:	4620      	mov	r0, r4
 8011b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b34:	f7ff bf7a 	b.w	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b38:	21c8      	movs	r1, #200	; 0xc8
 8011b3a:	f7ff ff77 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b3e:	21a1      	movs	r1, #161	; 0xa1
 8011b40:	e7f5      	b.n	8011b2e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08011b44 <Ssd1306::CheckSH1106()>:
 8011b44:	b570      	push	{r4, r5, r6, lr}
 8011b46:	4604      	mov	r4, r0
 8011b48:	b086      	sub	sp, #24
 8011b4a:	2100      	movs	r1, #0
 8011b4c:	f7ff ff6e 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b50:	2190      	movs	r1, #144	; 0x90
 8011b52:	4620      	mov	r0, r4
 8011b54:	f7ff ff6a 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b58:	21b0      	movs	r1, #176	; 0xb0
 8011b5a:	4620      	mov	r0, r4
 8011b5c:	f7ff ff66 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b60:	4b22      	ldr	r3, [pc, #136]	; (8011bec <Ssd1306::CheckSH1106()+0xa8>)
 8011b62:	f104 0608 	add.w	r6, r4, #8
 8011b66:	6818      	ldr	r0, [r3, #0]
 8011b68:	791b      	ldrb	r3, [r3, #4]
 8011b6a:	ad02      	add	r5, sp, #8
 8011b6c:	9002      	str	r0, [sp, #8]
 8011b6e:	4630      	mov	r0, r6
 8011b70:	712b      	strb	r3, [r5, #4]
 8011b72:	f7ff fef5 	bl	8011960 <HAL_I2C::Setup()>
 8011b76:	2105      	movs	r1, #5
 8011b78:	4628      	mov	r0, r5
 8011b7a:	f001 fab5 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011b7e:	2100      	movs	r1, #0
 8011b80:	4620      	mov	r0, r4
 8011b82:	f7ff ff53 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b86:	2190      	movs	r1, #144	; 0x90
 8011b88:	4620      	mov	r0, r4
 8011b8a:	f7ff ff4f 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b8e:	21b0      	movs	r1, #176	; 0xb0
 8011b90:	4620      	mov	r0, r4
 8011b92:	f7ff ff4b 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011b96:	2300      	movs	r3, #0
 8011b98:	9304      	str	r3, [sp, #16]
 8011b9a:	f88d 3014 	strb.w	r3, [sp, #20]
 8011b9e:	2340      	movs	r3, #64	; 0x40
 8011ba0:	4630      	mov	r0, r6
 8011ba2:	f88d 3007 	strb.w	r3, [sp, #7]
 8011ba6:	f7ff fedb 	bl	8011960 <HAL_I2C::Setup()>
 8011baa:	2101      	movs	r1, #1
 8011bac:	f10d 0007 	add.w	r0, sp, #7
 8011bb0:	f001 fa9a 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011bb4:	4630      	mov	r0, r6
 8011bb6:	f7ff fed3 	bl	8011960 <HAL_I2C::Setup()>
 8011bba:	2105      	movs	r1, #5
 8011bbc:	a804      	add	r0, sp, #16
 8011bbe:	f001 faf9 	bl	80131b4 <gd32_i2c_read(char*, unsigned int)>
 8011bc2:	2201      	movs	r2, #1
 8011bc4:	5cab      	ldrb	r3, [r5, r2]
 8011bc6:	a904      	add	r1, sp, #16
 8011bc8:	3201      	adds	r2, #1
 8011bca:	4411      	add	r1, r2
 8011bcc:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8011bd0:	428b      	cmp	r3, r1
 8011bd2:	d006      	beq.n	8011be2 <Ssd1306::CheckSH1106()+0x9e>
 8011bd4:	1a5b      	subs	r3, r3, r1
 8011bd6:	fab3 f383 	clz	r3, r3
 8011bda:	095b      	lsrs	r3, r3, #5
 8011bdc:	7463      	strb	r3, [r4, #17]
 8011bde:	b006      	add	sp, #24
 8011be0:	bd70      	pop	{r4, r5, r6, pc}
 8011be2:	2a05      	cmp	r2, #5
 8011be4:	d1ee      	bne.n	8011bc4 <Ssd1306::CheckSH1106()+0x80>
 8011be6:	2300      	movs	r3, #0
 8011be8:	e7f5      	b.n	8011bd6 <Ssd1306::CheckSH1106()+0x92>
 8011bea:	bf00      	nop
 8011bec:	08016078 	stmdaeq	r1, {r3, r4, r5, r6, sp, lr}

08011bf0 <Ssd1306::Cls()>:
 8011bf0:	7c43      	ldrb	r3, [r0, #17]
 8011bf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bf6:	2b00      	cmp	r3, #0
 8011bf8:	bf0c      	ite	eq
 8011bfa:	2500      	moveq	r5, #0
 8011bfc:	2504      	movne	r5, #4
 8011bfe:	4604      	mov	r4, r0
 8011c00:	2600      	movs	r6, #0
 8011c02:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8011c06:	f045 0810 	orr.w	r8, r5, #16
 8011c0a:	b2ff      	uxtb	r7, r7
 8011c0c:	6963      	ldr	r3, [r4, #20]
 8011c0e:	4629      	mov	r1, r5
 8011c10:	42b3      	cmp	r3, r6
 8011c12:	4620      	mov	r0, r4
 8011c14:	d91b      	bls.n	8011c4e <Ssd1306::Cls()+0x5e>
 8011c16:	f7ff ff09 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c1a:	4641      	mov	r1, r8
 8011c1c:	4620      	mov	r0, r4
 8011c1e:	f7ff ff05 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c22:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8011c26:	4620      	mov	r0, r4
 8011c28:	b2c9      	uxtb	r1, r1
 8011c2a:	f7ff feff 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c2e:	7c23      	ldrb	r3, [r4, #16]
 8011c30:	b123      	cbz	r3, 8011c3c <Ssd1306::Cls()+0x4c>
 8011c32:	3b01      	subs	r3, #1
 8011c34:	2b01      	cmp	r3, #1
 8011c36:	d901      	bls.n	8011c3c <Ssd1306::Cls()+0x4c>
 8011c38:	3601      	adds	r6, #1
 8011c3a:	e7e7      	b.n	8011c0c <Ssd1306::Cls()+0x1c>
 8011c3c:	f104 0008 	add.w	r0, r4, #8
 8011c40:	f7ff fe8e 	bl	8011960 <HAL_I2C::Setup()>
 8011c44:	4639      	mov	r1, r7
 8011c46:	4808      	ldr	r0, [pc, #32]	; (8011c68 <Ssd1306::Cls()+0x78>)
 8011c48:	f001 fa4e 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011c4c:	e7f4      	b.n	8011c38 <Ssd1306::Cls()+0x48>
 8011c4e:	f7ff feed 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c52:	4641      	mov	r1, r8
 8011c54:	4620      	mov	r0, r4
 8011c56:	f7ff fee9 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c5a:	4620      	mov	r0, r4
 8011c5c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011c60:	21b0      	movs	r1, #176	; 0xb0
 8011c62:	f7ff bee3 	b.w	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011c66:	bf00      	nop
 8011c68:	2000a8c4 	andcs	sl, r0, r4, asr #17

08011c6c <Ssd1306::Start()>:
 8011c6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011c6e:	7a04      	ldrb	r4, [r0, #8]
 8011c70:	68c6      	ldr	r6, [r0, #12]
 8011c72:	4605      	mov	r5, r0
 8011c74:	4620      	mov	r0, r4
 8011c76:	f001 fa31 	bl	80130dc <gd32_i2c_set_address(unsigned char)>
 8011c7a:	4630      	mov	r0, r6
 8011c7c:	f001 fa26 	bl	80130cc <gd32_i2c_set_baudrate(unsigned int)>
 8011c80:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011c84:	2b07      	cmp	r3, #7
 8011c86:	d902      	bls.n	8011c8e <Ssd1306::Start()+0x22>
 8011c88:	3c50      	subs	r4, #80	; 0x50
 8011c8a:	2c0f      	cmp	r4, #15
 8011c8c:	d80f      	bhi.n	8011cae <Ssd1306::Start()+0x42>
 8011c8e:	2101      	movs	r1, #1
 8011c90:	f10d 0007 	add.w	r0, sp, #7
 8011c94:	f001 fa8e 	bl	80131b4 <gd32_i2c_read(char*, unsigned int)>
 8011c98:	fab0 f480 	clz	r4, r0
 8011c9c:	0964      	lsrs	r4, r4, #5
 8011c9e:	b35c      	cbz	r4, 8011cf8 <Ssd1306::Start()+0x8c>
 8011ca0:	7c2e      	ldrb	r6, [r5, #16]
 8011ca2:	b14e      	cbz	r6, 8011cb8 <Ssd1306::Start()+0x4c>
 8011ca4:	3e01      	subs	r6, #1
 8011ca6:	2e01      	cmp	r6, #1
 8011ca8:	d929      	bls.n	8011cfe <Ssd1306::Start()+0x92>
 8011caa:	2400      	movs	r4, #0
 8011cac:	e024      	b.n	8011cf8 <Ssd1306::Start()+0x8c>
 8011cae:	2100      	movs	r1, #0
 8011cb0:	4608      	mov	r0, r1
 8011cb2:	f001 fa19 	bl	80130e8 <gd32_i2c_write(char const*, unsigned int)>
 8011cb6:	e7ef      	b.n	8011c98 <Ssd1306::Start()+0x2c>
 8011cb8:	4f16      	ldr	r7, [pc, #88]	; (8011d14 <Ssd1306::Start()+0xa8>)
 8011cba:	4628      	mov	r0, r5
 8011cbc:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011cc0:	3601      	adds	r6, #1
 8011cc2:	f7ff feb3 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011cc6:	2e18      	cmp	r6, #24
 8011cc8:	d1f7      	bne.n	8011cba <Ssd1306::Start()+0x4e>
 8011cca:	2300      	movs	r3, #0
 8011ccc:	4a12      	ldr	r2, [pc, #72]	; (8011d18 <Ssd1306::Start()+0xac>)
 8011cce:	4618      	mov	r0, r3
 8011cd0:	4611      	mov	r1, r2
 8011cd2:	3301      	adds	r3, #1
 8011cd4:	2b86      	cmp	r3, #134	; 0x86
 8011cd6:	f802 0b01 	strb.w	r0, [r2], #1
 8011cda:	d1fa      	bne.n	8011cd2 <Ssd1306::Start()+0x66>
 8011cdc:	2340      	movs	r3, #64	; 0x40
 8011cde:	4628      	mov	r0, r5
 8011ce0:	700b      	strb	r3, [r1, #0]
 8011ce2:	f7ff ff2f 	bl	8011b44 <Ssd1306::CheckSH1106()>
 8011ce6:	4628      	mov	r0, r5
 8011ce8:	f7ff ff82 	bl	8011bf0 <Ssd1306::Cls()>
 8011cec:	21af      	movs	r1, #175	; 0xaf
 8011cee:	4628      	mov	r0, r5
 8011cf0:	f7ff fe9c 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011cf4:	2301      	movs	r3, #1
 8011cf6:	71eb      	strb	r3, [r5, #7]
 8011cf8:	4620      	mov	r0, r4
 8011cfa:	b003      	add	sp, #12
 8011cfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011cfe:	2600      	movs	r6, #0
 8011d00:	4f06      	ldr	r7, [pc, #24]	; (8011d1c <Ssd1306::Start()+0xb0>)
 8011d02:	4628      	mov	r0, r5
 8011d04:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011d08:	3601      	adds	r6, #1
 8011d0a:	f7ff fe8f 	bl	8011a2c <Ssd1306::SendCommand(unsigned char)>
 8011d0e:	2e18      	cmp	r6, #24
 8011d10:	d1f7      	bne.n	8011d02 <Ssd1306::Start()+0x96>
 8011d12:	e7da      	b.n	8011cca <Ssd1306::Start()+0x5e>
 8011d14:	08016338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp, lr}
 8011d18:	2000a8c4 	andcs	sl, r0, r4, asr #17
 8011d1c:	08016320 	stmdaeq	r1, {r5, r8, r9, sp, lr}

08011d20 <console_putc>:
 8011d20:	f000 bb9a 	b.w	8012458 <uart0_putc>

08011d24 <console_puts>:
 8011d24:	f000 bbb8 	b.w	8012498 <uart0_puts>

08011d28 <console_set_fg_color>:
 8011d28:	2807      	cmp	r0, #7
 8011d2a:	d810      	bhi.n	8011d4e <console_set_fg_color+0x26>
 8011d2c:	e8df f000 	tbb	[pc, r0]
 8011d30:	0b090704 	bleq	8253948 <__exidx_end+0x23d4bc>
 8011d34:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8011d00 <Ssd1306::Start()+0x94>
 8011d38:	4806      	ldr	r0, [pc, #24]	; (8011d54 <console_set_fg_color+0x2c>)
 8011d3a:	f000 bbad 	b.w	8012498 <uart0_puts>
 8011d3e:	4806      	ldr	r0, [pc, #24]	; (8011d58 <console_set_fg_color+0x30>)
 8011d40:	e7fb      	b.n	8011d3a <console_set_fg_color+0x12>
 8011d42:	4806      	ldr	r0, [pc, #24]	; (8011d5c <console_set_fg_color+0x34>)
 8011d44:	e7f9      	b.n	8011d3a <console_set_fg_color+0x12>
 8011d46:	4806      	ldr	r0, [pc, #24]	; (8011d60 <console_set_fg_color+0x38>)
 8011d48:	e7f7      	b.n	8011d3a <console_set_fg_color+0x12>
 8011d4a:	4806      	ldr	r0, [pc, #24]	; (8011d64 <console_set_fg_color+0x3c>)
 8011d4c:	e7f5      	b.n	8011d3a <console_set_fg_color+0x12>
 8011d4e:	4806      	ldr	r0, [pc, #24]	; (8011d68 <console_set_fg_color+0x40>)
 8011d50:	e7f3      	b.n	8011d3a <console_set_fg_color+0x12>
 8011d52:	bf00      	nop
 8011d54:	08016396 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, sp, lr}
 8011d58:	0801639c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sp, lr}
 8011d5c:	080163a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sp, lr}
 8011d60:	080163a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sp, lr}
 8011d64:	080143a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, lr}
 8011d68:	080163ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sp, lr}

08011d6c <console_error>:
 8011d6c:	b510      	push	{r4, lr}
 8011d6e:	4604      	mov	r4, r0
 8011d70:	4805      	ldr	r0, [pc, #20]	; (8011d88 <console_error+0x1c>)
 8011d72:	f000 fb91 	bl	8012498 <uart0_puts>
 8011d76:	4620      	mov	r0, r4
 8011d78:	f000 fb8e 	bl	8012498 <uart0_puts>
 8011d7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d80:	4802      	ldr	r0, [pc, #8]	; (8011d8c <console_error+0x20>)
 8011d82:	f000 bb89 	b.w	8012498 <uart0_puts>
 8011d86:	bf00      	nop
 8011d88:	0801639c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sp, lr}
 8011d8c:	080143a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, lr}

08011d90 <console_status>:
 8011d90:	b510      	push	{r4, lr}
 8011d92:	460c      	mov	r4, r1
 8011d94:	b280      	uxth	r0, r0
 8011d96:	f7ff ffc7 	bl	8011d28 <console_set_fg_color>
 8011d9a:	4807      	ldr	r0, [pc, #28]	; (8011db8 <console_status+0x28>)
 8011d9c:	f000 fb7c 	bl	8012498 <uart0_puts>
 8011da0:	4620      	mov	r0, r4
 8011da2:	f000 fb79 	bl	8012498 <uart0_puts>
 8011da6:	200a      	movs	r0, #10
 8011da8:	f000 fb56 	bl	8012458 <uart0_putc>
 8011dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011db0:	4802      	ldr	r0, [pc, #8]	; (8011dbc <console_status+0x2c>)
 8011db2:	f000 bb71 	b.w	8012498 <uart0_puts>
 8011db6:	bf00      	nop
 8011db8:	08016390 	stmdaeq	r1, {r4, r7, r8, r9, sp, lr}
 8011dbc:	080143a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, lr}

08011dc0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8011dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011dc4:	4617      	mov	r7, r2
 8011dc6:	461e      	mov	r6, r3
 8011dc8:	4d14      	ldr	r5, [pc, #80]	; (8011e1c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8011dca:	4b15      	ldr	r3, [pc, #84]	; (8011e20 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8011dcc:	b086      	sub	sp, #24
 8011dce:	6018      	str	r0, [r3, #0]
 8011dd0:	4604      	mov	r4, r0
 8011dd2:	f105 0803 	add.w	r8, r5, #3
 8011dd6:	2203      	movs	r2, #3
 8011dd8:	4628      	mov	r0, r5
 8011dda:	f000 f9fe 	bl	80121da <memmove>
 8011dde:	4639      	mov	r1, r7
 8011de0:	220b      	movs	r2, #11
 8011de2:	4640      	mov	r0, r8
 8011de4:	f000 f9f9 	bl	80121da <memmove>
 8011de8:	f105 030e 	add.w	r3, r5, #14
 8011dec:	4631      	mov	r1, r6
 8011dee:	2208      	movs	r2, #8
 8011df0:	4618      	mov	r0, r3
 8011df2:	f000 f9f2 	bl	80121da <memmove>
 8011df6:	2308      	movs	r3, #8
 8011df8:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8011dfc:	230b      	movs	r3, #11
 8011dfe:	9302      	str	r3, [sp, #8]
 8011e00:	4b08      	ldr	r3, [pc, #32]	; (8011e24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8011e02:	9005      	str	r0, [sp, #20]
 8011e04:	e9cd 5300 	strd	r5, r3, [sp]
 8011e08:	213f      	movs	r1, #63	; 0x3f
 8011e0a:	2303      	movs	r3, #3
 8011e0c:	4a06      	ldr	r2, [pc, #24]	; (8011e28 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8011e0e:	4807      	ldr	r0, [pc, #28]	; (8011e2c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8011e10:	f7f7 fbaa 	bl	8009568 <snprintf>
 8011e14:	4620      	mov	r0, r4
 8011e16:	b006      	add	sp, #24
 8011e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e1c:	2000a950 	andcs	sl, r0, r0, asr r9
 8011e20:	2000a9a8 	andcs	sl, r0, r8, lsr #19
 8011e24:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 8011e28:	080163b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sp, lr}
 8011e2c:	2000a966 	andcs	sl, r0, r6, ror #18

08011e30 <FirmwareVersion::Print(char const*)>:
 8011e30:	b510      	push	{r4, lr}
 8011e32:	460c      	mov	r4, r1
 8011e34:	4804      	ldr	r0, [pc, #16]	; (8011e48 <FirmwareVersion::Print(char const*)+0x18>)
 8011e36:	f000 fa0c 	bl	8012252 <puts>
 8011e3a:	b124      	cbz	r4, 8011e46 <FirmwareVersion::Print(char const*)+0x16>
 8011e3c:	4620      	mov	r0, r4
 8011e3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e42:	f000 ba06 	b.w	8012252 <puts>
 8011e46:	bd10      	pop	{r4, pc}
 8011e48:	2000a966 	andcs	sl, r0, r6, ror #18

08011e4c <LedBlink::LedBlink()>:
 8011e4c:	b538      	push	{r3, r4, r5, lr}
 8011e4e:	2205      	movs	r2, #5
 8011e50:	2300      	movs	r3, #0
 8011e52:	e9c0 3200 	strd	r3, r2, [r0]
 8011e56:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8011e5a:	6083      	str	r3, [r0, #8]
 8011e5c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011e60:	6143      	str	r3, [r0, #20]
 8011e62:	4b09      	ldr	r3, [pc, #36]	; (8011e88 <LedBlink::LedBlink()+0x3c>)
 8011e64:	4d09      	ldr	r5, [pc, #36]	; (8011e8c <LedBlink::LedBlink()+0x40>)
 8011e66:	4604      	mov	r4, r0
 8011e68:	6018      	str	r0, [r3, #0]
 8011e6a:	f240 6004 	movw	r0, #1540	; 0x604
 8011e6e:	f000 fd1d 	bl	80128ac <rcu_periph_clock_enable>
 8011e72:	4628      	mov	r0, r5
 8011e74:	2301      	movs	r3, #1
 8011e76:	2203      	movs	r2, #3
 8011e78:	2110      	movs	r1, #16
 8011e7a:	f000 fc7f 	bl	801277c <gpio_init>
 8011e7e:	2301      	movs	r3, #1
 8011e80:	4620      	mov	r0, r4
 8011e82:	616b      	str	r3, [r5, #20]
 8011e84:	bd38      	pop	{r3, r4, r5, pc}
 8011e86:	bf00      	nop
 8011e88:	2000a9ac 	andcs	sl, r0, ip, lsr #19
 8011e8c:	40011000 	andmi	r1, r1, r0

08011e90 <LedBlink::SetMode(ledblink::Mode)>:
 8011e90:	6843      	ldr	r3, [r0, #4]
 8011e92:	428b      	cmp	r3, r1
 8011e94:	d02f      	beq.n	8011ef6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8011e96:	6041      	str	r1, [r0, #4]
 8011e98:	2904      	cmp	r1, #4
 8011e9a:	d822      	bhi.n	8011ee2 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8011e9c:	e8df f001 	tbb	[pc, r1]
 8011ea0:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8011ea4:	23ff001d 	mvnscs	r0, #29
 8011ea8:	6003      	str	r3, [r0, #0]
 8011eaa:	2300      	movs	r3, #0
 8011eac:	2201      	movs	r2, #1
 8011eae:	60c3      	str	r3, [r0, #12]
 8011eb0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011eb4:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8011eb8:	611a      	str	r2, [r3, #16]
 8011eba:	6880      	ldr	r0, [r0, #8]
 8011ebc:	b1d8      	cbz	r0, 8011ef6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8011ebe:	6803      	ldr	r3, [r0, #0]
 8011ec0:	689b      	ldr	r3, [r3, #8]
 8011ec2:	4718      	bx	r3
 8011ec4:	2301      	movs	r3, #1
 8011ec6:	6003      	str	r3, [r0, #0]
 8011ec8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8011ecc:	60c3      	str	r3, [r0, #12]
 8011ece:	e7f4      	b.n	8011eba <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8011ed0:	2303      	movs	r3, #3
 8011ed2:	6003      	str	r3, [r0, #0]
 8011ed4:	f240 134d 	movw	r3, #333	; 0x14d
 8011ed8:	e7f8      	b.n	8011ecc <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8011eda:	2305      	movs	r3, #5
 8011edc:	6003      	str	r3, [r0, #0]
 8011ede:	23c8      	movs	r3, #200	; 0xc8
 8011ee0:	e7f4      	b.n	8011ecc <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8011ee2:	2300      	movs	r3, #0
 8011ee4:	2201      	movs	r2, #1
 8011ee6:	6003      	str	r3, [r0, #0]
 8011ee8:	60c3      	str	r3, [r0, #12]
 8011eea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011eee:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8011ef2:	615a      	str	r2, [r3, #20]
 8011ef4:	e7e1      	b.n	8011eba <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8011ef6:	4770      	bx	lr

08011ef8 <Hardware::Hardware()>:
 8011ef8:	b570      	push	{r4, r5, r6, lr}
 8011efa:	2400      	movs	r4, #0
 8011efc:	4b26      	ldr	r3, [pc, #152]	; (8011f98 <Hardware::Hardware()+0xa0>)
 8011efe:	b090      	sub	sp, #64	; 0x40
 8011f00:	6004      	str	r4, [r0, #0]
 8011f02:	7104      	strb	r4, [r0, #4]
 8011f04:	4e25      	ldr	r6, [pc, #148]	; (8011f9c <Hardware::Hardware()+0xa4>)
 8011f06:	6018      	str	r0, [r3, #0]
 8011f08:	4605      	mov	r5, r0
 8011f0a:	f7f5 fafd 	bl	8007508 <console_init>
 8011f0e:	f000 fad3 	bl	80124b8 <systick_config>
 8011f12:	f001 fb7f 	bl	8013614 <udelay_init()>
 8011f16:	f001 fb7b 	bl	8013610 <micros_init()>
 8011f1a:	f240 7004 	movw	r0, #1796	; 0x704
 8011f1e:	f000 fcc5 	bl	80128ac <rcu_periph_clock_enable>
 8011f22:	4630      	mov	r0, r6
 8011f24:	f000 fe1e 	bl	8012b64 <timer_deinit>
 8011f28:	236b      	movs	r3, #107	; 0x6b
 8011f2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011f2e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011f32:	a903      	add	r1, sp, #12
 8011f34:	4630      	mov	r0, r6
 8011f36:	9305      	str	r3, [sp, #20]
 8011f38:	f000 fe76 	bl	8012c28 <timer_init>
 8011f3c:	4630      	mov	r0, r6
 8011f3e:	f000 fecb 	bl	8012cd8 <timer_enable>
 8011f42:	f001 f835 	bl	8012fb0 <gd32_adc_init()>
 8011f46:	2217      	movs	r2, #23
 8011f48:	2301      	movs	r3, #1
 8011f4a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8011f4e:	237a      	movs	r3, #122	; 0x7a
 8011f50:	a807      	add	r0, sp, #28
 8011f52:	930c      	str	r3, [sp, #48]	; 0x30
 8011f54:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8011f58:	9407      	str	r4, [sp, #28]
 8011f5a:	940f      	str	r4, [sp, #60]	; 0x3c
 8011f5c:	f000 f9d2 	bl	8012304 <mktime>
 8011f60:	4621      	mov	r1, r4
 8011f62:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8011f66:	a801      	add	r0, sp, #4
 8011f68:	f000 fa42 	bl	80123f0 <settimeofday>
 8011f6c:	f240 701b 	movw	r0, #1819	; 0x71b
 8011f70:	f000 fc9c 	bl	80128ac <rcu_periph_clock_enable>
 8011f74:	f240 701c 	movw	r0, #1820	; 0x71c
 8011f78:	f000 fc98 	bl	80128ac <rcu_periph_clock_enable>
 8011f7c:	f000 fc8e 	bl	801289c <pmu_backup_write_enable>
 8011f80:	f000 fb38 	bl	80125f4 <bkp_deinit>
 8011f84:	4621      	mov	r1, r4
 8011f86:	2002      	movs	r0, #2
 8011f88:	f000 fb3c 	bl	8012604 <bkp_data_write>
 8011f8c:	f001 f86a 	bl	8013064 <gd32_i2c_begin()>
 8011f90:	4628      	mov	r0, r5
 8011f92:	b010      	add	sp, #64	; 0x40
 8011f94:	bd70      	pop	{r4, r5, r6, pc}
 8011f96:	bf00      	nop
 8011f98:	2000a9b0 			; <UNDEFINED> instruction: 0x2000a9b0
 8011f9c:	40001000 	andmi	r1, r0, r0

08011fa0 <Hardware::GetUuid(unsigned char*)>:
 8011fa0:	4a0c      	ldr	r2, [pc, #48]	; (8011fd4 <Hardware::GetUuid(unsigned char*)+0x34>)
 8011fa2:	b084      	sub	sp, #16
 8011fa4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8011fa8:	9300      	str	r3, [sp, #0]
 8011faa:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8011fae:	9001      	str	r0, [sp, #4]
 8011fb0:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8011fb4:	4403      	add	r3, r0
 8011fb6:	4413      	add	r3, r2
 8011fb8:	9202      	str	r2, [sp, #8]
 8011fba:	466a      	mov	r2, sp
 8011fbc:	9303      	str	r3, [sp, #12]
 8011fbe:	1e4b      	subs	r3, r1, #1
 8011fc0:	310f      	adds	r1, #15
 8011fc2:	428b      	cmp	r3, r1
 8011fc4:	d004      	beq.n	8011fd0 <Hardware::GetUuid(unsigned char*)+0x30>
 8011fc6:	f812 0b01 	ldrb.w	r0, [r2], #1
 8011fca:	f803 0f01 	strb.w	r0, [r3, #1]!
 8011fce:	e7f8      	b.n	8011fc2 <Hardware::GetUuid(unsigned char*)+0x22>
 8011fd0:	b004      	add	sp, #16
 8011fd2:	4770      	bx	lr
 8011fd4:	1ffff000 	svcne	0x00fff000

08011fd8 <Hardware::Reboot()>:
 8011fd8:	b508      	push	{r3, lr}
 8011fda:	6803      	ldr	r3, [r0, #0]
 8011fdc:	4604      	mov	r4, r0
 8011fde:	b153      	cbz	r3, 8011ff6 <Hardware::Reboot()+0x1e>
 8011fe0:	2300      	movs	r3, #0
 8011fe2:	2104      	movs	r1, #4
 8011fe4:	7103      	strb	r3, [r0, #4]
 8011fe6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8011fea:	f000 fb9d 	bl	8012728 <fwdgt_config>
 8011fee:	6820      	ldr	r0, [r4, #0]
 8011ff0:	6803      	ldr	r3, [r0, #0]
 8011ff2:	689b      	ldr	r3, [r3, #8]
 8011ff4:	4798      	blx	r3
 8011ff6:	2102      	movs	r1, #2
 8011ff8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8011ffc:	f000 fb94 	bl	8012728 <fwdgt_config>
 8012000:	2801      	cmp	r0, #1
 8012002:	bf0c      	ite	eq
 8012004:	2301      	moveq	r3, #1
 8012006:	2300      	movne	r3, #0
 8012008:	7123      	strb	r3, [r4, #4]
 801200a:	d101      	bne.n	8012010 <Hardware::Reboot()+0x38>
 801200c:	f000 fb7c 	bl	8012708 <fwdgt_enable>
 8012010:	2208      	movs	r2, #8
 8012012:	4b0d      	ldr	r3, [pc, #52]	; (8012048 <Hardware::Reboot()+0x70>)
 8012014:	2501      	movs	r5, #1
 8012016:	681b      	ldr	r3, [r3, #0]
 8012018:	480c      	ldr	r0, [pc, #48]	; (801204c <Hardware::Reboot()+0x74>)
 801201a:	601a      	str	r2, [r3, #0]
 801201c:	227d      	movs	r2, #125	; 0x7d
 801201e:	490c      	ldr	r1, [pc, #48]	; (8012050 <Hardware::Reboot()+0x78>)
 8012020:	60da      	str	r2, [r3, #12]
 8012022:	68dc      	ldr	r4, [r3, #12]
 8012024:	b904      	cbnz	r4, 8012028 <Hardware::Reboot()+0x50>
 8012026:	e7fe      	b.n	8012026 <Hardware::Reboot()+0x4e>
 8012028:	6802      	ldr	r2, [r0, #0]
 801202a:	695e      	ldr	r6, [r3, #20]
 801202c:	1b92      	subs	r2, r2, r6
 801202e:	4294      	cmp	r4, r2
 8012030:	d8f8      	bhi.n	8012024 <Hardware::Reboot()+0x4c>
 8012032:	6802      	ldr	r2, [r0, #0]
 8012034:	615a      	str	r2, [r3, #20]
 8012036:	691a      	ldr	r2, [r3, #16]
 8012038:	2a01      	cmp	r2, #1
 801203a:	f082 0401 	eor.w	r4, r2, #1
 801203e:	611c      	str	r4, [r3, #16]
 8012040:	bf14      	ite	ne
 8012042:	610d      	strne	r5, [r1, #16]
 8012044:	614a      	streq	r2, [r1, #20]
 8012046:	e7ec      	b.n	8012022 <Hardware::Reboot()+0x4a>
 8012048:	2000a9ac 	andcs	sl, r0, ip, lsr #19
 801204c:	2000a9c4 	andcs	sl, r0, r4, asr #19
 8012050:	40011000 	andmi	r1, r1, r0

08012054 <operator delete(void*)>:
 8012054:	f000 b890 	b.w	8012178 <free>

08012058 <operator delete[](void*)>:
 8012058:	f000 b88e 	b.w	8012178 <free>

0801205c <operator new(unsigned int)>:
 801205c:	f000 b842 	b.w	80120e4 <malloc>

08012060 <operator new[](unsigned int)>:
 8012060:	f000 b840 	b.w	80120e4 <malloc>

08012064 <inet_aton>:
 8012064:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012066:	f04f 0c0a 	mov.w	ip, #10
 801206a:	2500      	movs	r5, #0
 801206c:	ae01      	add	r6, sp, #4
 801206e:	4603      	mov	r3, r0
 8012070:	2200      	movs	r2, #0
 8012072:	1d07      	adds	r7, r0, #4
 8012074:	e007      	b.n	8012086 <inet_aton+0x22>
 8012076:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801207a:	2b09      	cmp	r3, #9
 801207c:	d820      	bhi.n	80120c0 <inet_aton+0x5c>
 801207e:	4603      	mov	r3, r0
 8012080:	fb0c 4202 	mla	r2, ip, r2, r4
 8012084:	3a30      	subs	r2, #48	; 0x30
 8012086:	4618      	mov	r0, r3
 8012088:	f810 4b01 	ldrb.w	r4, [r0], #1
 801208c:	2c2e      	cmp	r4, #46	; 0x2e
 801208e:	d111      	bne.n	80120b4 <inet_aton+0x50>
 8012090:	3501      	adds	r5, #1
 8012092:	2d03      	cmp	r5, #3
 8012094:	f806 2b01 	strb.w	r2, [r6], #1
 8012098:	d1e9      	bne.n	801206e <inet_aton+0xa>
 801209a:	2200      	movs	r2, #0
 801209c:	250a      	movs	r5, #10
 801209e:	1d1c      	adds	r4, r3, #4
 80120a0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80120a4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 80120a8:	d10d      	bne.n	80120c6 <inet_aton+0x62>
 80120aa:	f88d 2007 	strb.w	r2, [sp, #7]
 80120ae:	b9b1      	cbnz	r1, 80120de <inet_aton+0x7a>
 80120b0:	2001      	movs	r0, #1
 80120b2:	e006      	b.n	80120c2 <inet_aton+0x5e>
 80120b4:	2c00      	cmp	r4, #0
 80120b6:	d0eb      	beq.n	8012090 <inet_aton+0x2c>
 80120b8:	2c0a      	cmp	r4, #10
 80120ba:	d0e9      	beq.n	8012090 <inet_aton+0x2c>
 80120bc:	42b8      	cmp	r0, r7
 80120be:	d1da      	bne.n	8012076 <inet_aton+0x12>
 80120c0:	2000      	movs	r0, #0
 80120c2:	b003      	add	sp, #12
 80120c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80120c6:	280a      	cmp	r0, #10
 80120c8:	d0ef      	beq.n	80120aa <inet_aton+0x46>
 80120ca:	42a3      	cmp	r3, r4
 80120cc:	d0f8      	beq.n	80120c0 <inet_aton+0x5c>
 80120ce:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80120d2:	2e09      	cmp	r6, #9
 80120d4:	d8f4      	bhi.n	80120c0 <inet_aton+0x5c>
 80120d6:	fb05 0202 	mla	r2, r5, r2, r0
 80120da:	3a30      	subs	r2, #48	; 0x30
 80120dc:	e7e0      	b.n	80120a0 <inet_aton+0x3c>
 80120de:	9b01      	ldr	r3, [sp, #4]
 80120e0:	600b      	str	r3, [r1, #0]
 80120e2:	e7e5      	b.n	80120b0 <inet_aton+0x4c>

080120e4 <malloc>:
 80120e4:	b538      	push	{r3, r4, r5, lr}
 80120e6:	4604      	mov	r4, r0
 80120e8:	4601      	mov	r1, r0
 80120ea:	481c      	ldr	r0, [pc, #112]	; (801215c <malloc+0x78>)
 80120ec:	f7f7 fa14 	bl	8009518 <printf>
 80120f0:	b17c      	cbz	r4, 8012112 <malloc+0x2e>
 80120f2:	4b1b      	ldr	r3, [pc, #108]	; (8012160 <malloc+0x7c>)
 80120f4:	6818      	ldr	r0, [r3, #0]
 80120f6:	b978      	cbnz	r0, 8012118 <malloc+0x34>
 80120f8:	4a1a      	ldr	r2, [pc, #104]	; (8012164 <malloc+0x80>)
 80120fa:	f104 031b 	add.w	r3, r4, #27
 80120fe:	6811      	ldr	r1, [r2, #0]
 8012100:	4819      	ldr	r0, [pc, #100]	; (8012168 <malloc+0x84>)
 8012102:	f023 030f 	bic.w	r3, r3, #15
 8012106:	440b      	add	r3, r1
 8012108:	4283      	cmp	r3, r0
 801210a:	d921      	bls.n	8012150 <malloc+0x6c>
 801210c:	4817      	ldr	r0, [pc, #92]	; (801216c <malloc+0x88>)
 801210e:	f7f7 fa03 	bl	8009518 <printf>
 8012112:	2500      	movs	r5, #0
 8012114:	4628      	mov	r0, r5
 8012116:	bd38      	pop	{r3, r4, r5, pc}
 8012118:	4284      	cmp	r4, r0
 801211a:	d80a      	bhi.n	8012132 <malloc+0x4e>
 801211c:	685a      	ldr	r2, [r3, #4]
 801211e:	6899      	ldr	r1, [r3, #8]
 8012120:	3201      	adds	r2, #1
 8012122:	428a      	cmp	r2, r1
 8012124:	605a      	str	r2, [r3, #4]
 8012126:	d900      	bls.n	801212a <malloc+0x46>
 8012128:	609a      	str	r2, [r3, #8]
 801212a:	68d9      	ldr	r1, [r3, #12]
 801212c:	b919      	cbnz	r1, 8012136 <malloc+0x52>
 801212e:	4604      	mov	r4, r0
 8012130:	e7e2      	b.n	80120f8 <malloc+0x14>
 8012132:	3310      	adds	r3, #16
 8012134:	e7de      	b.n	80120f4 <malloc+0x10>
 8012136:	4604      	mov	r4, r0
 8012138:	688a      	ldr	r2, [r1, #8]
 801213a:	60da      	str	r2, [r3, #12]
 801213c:	2300      	movs	r3, #0
 801213e:	f101 050c 	add.w	r5, r1, #12
 8012142:	608b      	str	r3, [r1, #8]
 8012144:	4622      	mov	r2, r4
 8012146:	462b      	mov	r3, r5
 8012148:	4809      	ldr	r0, [pc, #36]	; (8012170 <malloc+0x8c>)
 801214a:	f7f7 f9e5 	bl	8009518 <printf>
 801214e:	e7e1      	b.n	8012114 <malloc+0x30>
 8012150:	6013      	str	r3, [r2, #0]
 8012152:	4b08      	ldr	r3, [pc, #32]	; (8012174 <malloc+0x90>)
 8012154:	e9c1 3400 	strd	r3, r4, [r1]
 8012158:	e7f0      	b.n	801213c <malloc+0x58>
 801215a:	bf00      	nop
 801215c:	080163d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sp, lr}
 8012160:	20000010 	andcs	r0, r0, r0, lsl r0
 8012164:	2000000c 	andcs	r0, r0, ip
 8012168:	20016800 	andcs	r6, r1, r0, lsl #16
 801216c:	080163e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp, lr}
 8012170:	08016400 	stmdaeq	r1, {sl, sp, lr}
 8012174:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012178 <free>:
 8012178:	b538      	push	{r3, r4, r5, lr}
 801217a:	4604      	mov	r4, r0
 801217c:	b1c8      	cbz	r0, 80121b2 <free+0x3a>
 801217e:	f1a0 050c 	sub.w	r5, r0, #12
 8012182:	4602      	mov	r2, r0
 8012184:	4629      	mov	r1, r5
 8012186:	480c      	ldr	r0, [pc, #48]	; (80121b8 <free+0x40>)
 8012188:	f7f7 f9c6 	bl	8009518 <printf>
 801218c:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8012190:	4b0a      	ldr	r3, [pc, #40]	; (80121bc <free+0x44>)
 8012192:	429a      	cmp	r2, r3
 8012194:	d10d      	bne.n	80121b2 <free+0x3a>
 8012196:	4b0a      	ldr	r3, [pc, #40]	; (80121c0 <free+0x48>)
 8012198:	681a      	ldr	r2, [r3, #0]
 801219a:	b152      	cbz	r2, 80121b2 <free+0x3a>
 801219c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80121a0:	4291      	cmp	r1, r2
 80121a2:	d107      	bne.n	80121b4 <free+0x3c>
 80121a4:	68da      	ldr	r2, [r3, #12]
 80121a6:	f844 2c04 	str.w	r2, [r4, #-4]
 80121aa:	685a      	ldr	r2, [r3, #4]
 80121ac:	60dd      	str	r5, [r3, #12]
 80121ae:	3a01      	subs	r2, #1
 80121b0:	605a      	str	r2, [r3, #4]
 80121b2:	bd38      	pop	{r3, r4, r5, pc}
 80121b4:	3310      	adds	r3, #16
 80121b6:	e7ef      	b.n	8012198 <free+0x20>
 80121b8:	0801642b 	stmdaeq	r1, {r0, r1, r3, r5, sl, sp, lr}
 80121bc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80121c0:	20000010 	andcs	r0, r0, r0, lsl r0

080121c4 <memcpy>:
 80121c4:	b510      	push	{r4, lr}
 80121c6:	1e43      	subs	r3, r0, #1
 80121c8:	440a      	add	r2, r1
 80121ca:	4291      	cmp	r1, r2
 80121cc:	d100      	bne.n	80121d0 <memcpy+0xc>
 80121ce:	bd10      	pop	{r4, pc}
 80121d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80121d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80121d8:	e7f7      	b.n	80121ca <memcpy+0x6>

080121da <memmove>:
 80121da:	4288      	cmp	r0, r1
 80121dc:	b510      	push	{r4, lr}
 80121de:	eb01 0302 	add.w	r3, r1, r2
 80121e2:	d208      	bcs.n	80121f6 <memmove+0x1c>
 80121e4:	1e42      	subs	r2, r0, #1
 80121e6:	4299      	cmp	r1, r3
 80121e8:	d100      	bne.n	80121ec <memmove+0x12>
 80121ea:	bd10      	pop	{r4, pc}
 80121ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 80121f0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80121f4:	e7f7      	b.n	80121e6 <memmove+0xc>
 80121f6:	4601      	mov	r1, r0
 80121f8:	4402      	add	r2, r0
 80121fa:	428a      	cmp	r2, r1
 80121fc:	d0f5      	beq.n	80121ea <memmove+0x10>
 80121fe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012202:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012206:	e7f8      	b.n	80121fa <memmove+0x20>

08012208 <memset>:
 8012208:	b5f0      	push	{r4, r5, r6, r7, lr}
 801220a:	b1e2      	cbz	r2, 8012246 <memset+0x3e>
 801220c:	4603      	mov	r3, r0
 801220e:	b2c9      	uxtb	r1, r1
 8012210:	075c      	lsls	r4, r3, #29
 8012212:	d114      	bne.n	801223e <memset+0x36>
 8012214:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8012218:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 801221c:	463d      	mov	r5, r7
 801221e:	f022 0407 	bic.w	r4, r2, #7
 8012222:	08d6      	lsrs	r6, r2, #3
 8012224:	441c      	add	r4, r3
 8012226:	42a3      	cmp	r3, r4
 8012228:	d10e      	bne.n	8012248 <memset+0x40>
 801222a:	f06f 0307 	mvn.w	r3, #7
 801222e:	fb03 2206 	mla	r2, r3, r6, r2
 8012232:	4422      	add	r2, r4
 8012234:	4294      	cmp	r4, r2
 8012236:	d006      	beq.n	8012246 <memset+0x3e>
 8012238:	f804 1b01 	strb.w	r1, [r4], #1
 801223c:	e7fa      	b.n	8012234 <memset+0x2c>
 801223e:	3a01      	subs	r2, #1
 8012240:	f803 1b01 	strb.w	r1, [r3], #1
 8012244:	d1e4      	bne.n	8012210 <memset+0x8>
 8012246:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012248:	f843 7b08 	str.w	r7, [r3], #8
 801224c:	f843 5c04 	str.w	r5, [r3, #-4]
 8012250:	e7e9      	b.n	8012226 <memset+0x1e>

08012252 <puts>:
 8012252:	b508      	push	{r3, lr}
 8012254:	f7ff fd66 	bl	8011d24 <console_puts>
 8012258:	200a      	movs	r0, #10
 801225a:	f7ff fd61 	bl	8011d20 <console_putc>
 801225e:	2001      	movs	r0, #1
 8012260:	bd08      	pop	{r3, pc}
	...

08012264 <strtok>:
 8012264:	b530      	push	{r4, r5, lr}
 8012266:	b910      	cbnz	r0, 801226e <strtok+0xa>
 8012268:	4b12      	ldr	r3, [pc, #72]	; (80122b4 <strtok+0x50>)
 801226a:	6818      	ldr	r0, [r3, #0]
 801226c:	b158      	cbz	r0, 8012286 <strtok+0x22>
 801226e:	4603      	mov	r3, r0
 8012270:	460d      	mov	r5, r1
 8012272:	4618      	mov	r0, r3
 8012274:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012278:	f815 4b01 	ldrb.w	r4, [r5], #1
 801227c:	b924      	cbnz	r4, 8012288 <strtok+0x24>
 801227e:	b94a      	cbnz	r2, 8012294 <strtok+0x30>
 8012280:	4610      	mov	r0, r2
 8012282:	4b0c      	ldr	r3, [pc, #48]	; (80122b4 <strtok+0x50>)
 8012284:	601a      	str	r2, [r3, #0]
 8012286:	bd30      	pop	{r4, r5, pc}
 8012288:	42a2      	cmp	r2, r4
 801228a:	d1f5      	bne.n	8012278 <strtok+0x14>
 801228c:	e7f0      	b.n	8012270 <strtok+0xc>
 801228e:	4613      	mov	r3, r2
 8012290:	e00c      	b.n	80122ac <strtok+0x48>
 8012292:	b914      	cbnz	r4, 801229a <strtok+0x36>
 8012294:	460d      	mov	r5, r1
 8012296:	f813 2b01 	ldrb.w	r2, [r3], #1
 801229a:	f815 4b01 	ldrb.w	r4, [r5], #1
 801229e:	42a2      	cmp	r2, r4
 80122a0:	d1f7      	bne.n	8012292 <strtok+0x2e>
 80122a2:	2a00      	cmp	r2, #0
 80122a4:	d0f3      	beq.n	801228e <strtok+0x2a>
 80122a6:	2200      	movs	r2, #0
 80122a8:	f803 2c01 	strb.w	r2, [r3, #-1]
 80122ac:	4a01      	ldr	r2, [pc, #4]	; (80122b4 <strtok+0x50>)
 80122ae:	6013      	str	r3, [r2, #0]
 80122b0:	e7e9      	b.n	8012286 <strtok+0x22>
 80122b2:	bf00      	nop
 80122b4:	2000a9b4 			; <UNDEFINED> instruction: 0x2000a9b4

080122b8 <isleapyear>:
 80122b8:	2264      	movs	r2, #100	; 0x64
 80122ba:	fb90 f3f2 	sdiv	r3, r0, r2
 80122be:	fb02 0313 	mls	r3, r2, r3, r0
 80122c2:	b94b      	cbnz	r3, 80122d8 <isleapyear+0x20>
 80122c4:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80122c8:	fb90 f2f3 	sdiv	r2, r0, r3
 80122cc:	fb03 0012 	mls	r0, r3, r2, r0
 80122d0:	fab0 f080 	clz	r0, r0
 80122d4:	0940      	lsrs	r0, r0, #5
 80122d6:	4770      	bx	lr
 80122d8:	f010 0f03 	tst.w	r0, #3
 80122dc:	bf0c      	ite	eq
 80122de:	2001      	moveq	r0, #1
 80122e0:	2000      	movne	r0, #0
 80122e2:	4770      	bx	lr

080122e4 <getdaysofmonth>:
 80122e4:	b510      	push	{r4, lr}
 80122e6:	4604      	mov	r4, r0
 80122e8:	2c01      	cmp	r4, #1
 80122ea:	4608      	mov	r0, r1
 80122ec:	d102      	bne.n	80122f4 <getdaysofmonth+0x10>
 80122ee:	f7ff ffe3 	bl	80122b8 <isleapyear>
 80122f2:	b918      	cbnz	r0, 80122fc <getdaysofmonth+0x18>
 80122f4:	4b02      	ldr	r3, [pc, #8]	; (8012300 <getdaysofmonth+0x1c>)
 80122f6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80122fa:	bd10      	pop	{r4, pc}
 80122fc:	201d      	movs	r0, #29
 80122fe:	e7fc      	b.n	80122fa <getdaysofmonth+0x16>
 8012300:	08016454 	stmdaeq	r1, {r2, r4, r6, sl, sp, lr}

08012304 <mktime>:
 8012304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012308:	4604      	mov	r4, r0
 801230a:	2800      	cmp	r0, #0
 801230c:	d042      	beq.n	8012394 <mktime+0x90>
 801230e:	6941      	ldr	r1, [r0, #20]
 8012310:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8012314:	2b45      	cmp	r3, #69	; 0x45
 8012316:	d83d      	bhi.n	8012394 <mktime+0x90>
 8012318:	2600      	movs	r6, #0
 801231a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 801231e:	f240 186d 	movw	r8, #365	; 0x16d
 8012322:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8012326:	42af      	cmp	r7, r5
 8012328:	da23      	bge.n	8012372 <mktime+0x6e>
 801232a:	6927      	ldr	r7, [r4, #16]
 801232c:	2f0b      	cmp	r7, #11
 801232e:	d831      	bhi.n	8012394 <mktime+0x90>
 8012330:	2500      	movs	r5, #0
 8012332:	42af      	cmp	r7, r5
 8012334:	d128      	bne.n	8012388 <mktime+0x84>
 8012336:	68e5      	ldr	r5, [r4, #12]
 8012338:	2d00      	cmp	r5, #0
 801233a:	dd2b      	ble.n	8012394 <mktime+0x90>
 801233c:	4638      	mov	r0, r7
 801233e:	f7ff ffd1 	bl	80122e4 <getdaysofmonth>
 8012342:	4285      	cmp	r5, r0
 8012344:	dc26      	bgt.n	8012394 <mktime+0x90>
 8012346:	2318      	movs	r3, #24
 8012348:	3d01      	subs	r5, #1
 801234a:	4435      	add	r5, r6
 801234c:	435d      	muls	r5, r3
 801234e:	68a3      	ldr	r3, [r4, #8]
 8012350:	2b17      	cmp	r3, #23
 8012352:	d81f      	bhi.n	8012394 <mktime+0x90>
 8012354:	203c      	movs	r0, #60	; 0x3c
 8012356:	442b      	add	r3, r5
 8012358:	fb00 f503 	mul.w	r5, r0, r3
 801235c:	6863      	ldr	r3, [r4, #4]
 801235e:	2b3b      	cmp	r3, #59	; 0x3b
 8012360:	d818      	bhi.n	8012394 <mktime+0x90>
 8012362:	442b      	add	r3, r5
 8012364:	4343      	muls	r3, r0
 8012366:	6820      	ldr	r0, [r4, #0]
 8012368:	283b      	cmp	r0, #59	; 0x3b
 801236a:	d813      	bhi.n	8012394 <mktime+0x90>
 801236c:	4418      	add	r0, r3
 801236e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012372:	4628      	mov	r0, r5
 8012374:	f7ff ffa0 	bl	80122b8 <isleapyear>
 8012378:	2800      	cmp	r0, #0
 801237a:	bf14      	ite	ne
 801237c:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8012380:	4643      	moveq	r3, r8
 8012382:	3501      	adds	r5, #1
 8012384:	441e      	add	r6, r3
 8012386:	e7ce      	b.n	8012326 <mktime+0x22>
 8012388:	4628      	mov	r0, r5
 801238a:	f7ff ffab 	bl	80122e4 <getdaysofmonth>
 801238e:	3501      	adds	r5, #1
 8012390:	4406      	add	r6, r0
 8012392:	e7ce      	b.n	8012332 <mktime+0x2e>
 8012394:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012398:	e7e9      	b.n	801236e <mktime+0x6a>
	...

0801239c <gettimeofday>:
 801239c:	b538      	push	{r3, r4, r5, lr}
 801239e:	4b10      	ldr	r3, [pc, #64]	; (80123e0 <gettimeofday+0x44>)
 80123a0:	4a10      	ldr	r2, [pc, #64]	; (80123e4 <gettimeofday+0x48>)
 80123a2:	681b      	ldr	r3, [r3, #0]
 80123a4:	6814      	ldr	r4, [r2, #0]
 80123a6:	6013      	str	r3, [r2, #0]
 80123a8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80123ac:	429c      	cmp	r4, r3
 80123ae:	bf2c      	ite	cs
 80123b0:	1ae4      	subcs	r4, r4, r3
 80123b2:	1b1c      	subcc	r4, r3, r4
 80123b4:	4354      	muls	r4, r2
 80123b6:	4b0c      	ldr	r3, [pc, #48]	; (80123e8 <gettimeofday+0x4c>)
 80123b8:	4605      	mov	r5, r0
 80123ba:	e9d3 2100 	ldrd	r2, r1, [r3]
 80123be:	18a4      	adds	r4, r4, r2
 80123c0:	f141 0100 	adc.w	r1, r1, #0
 80123c4:	e9c3 4100 	strd	r4, r1, [r3]
 80123c8:	4620      	mov	r0, r4
 80123ca:	2300      	movs	r3, #0
 80123cc:	4a07      	ldr	r2, [pc, #28]	; (80123ec <gettimeofday+0x50>)
 80123ce:	f7f5 fd89 	bl	8007ee4 <__aeabi_uldivmod>
 80123d2:	4b06      	ldr	r3, [pc, #24]	; (80123ec <gettimeofday+0x50>)
 80123d4:	6028      	str	r0, [r5, #0]
 80123d6:	fb03 4410 	mls	r4, r3, r0, r4
 80123da:	2000      	movs	r0, #0
 80123dc:	606c      	str	r4, [r5, #4]
 80123de:	bd38      	pop	{r3, r4, r5, pc}
 80123e0:	2000a9c4 	andcs	sl, r0, r4, asr #19
 80123e4:	2000a9c0 	andcs	sl, r0, r0, asr #19
 80123e8:	2000a9b8 			; <UNDEFINED> instruction: 0x2000a9b8
 80123ec:	000f4240 	andeq	r4, pc, r0, asr #4

080123f0 <settimeofday>:
 80123f0:	4b07      	ldr	r3, [pc, #28]	; (8012410 <settimeofday+0x20>)
 80123f2:	b510      	push	{r4, lr}
 80123f4:	681a      	ldr	r2, [r3, #0]
 80123f6:	4b07      	ldr	r3, [pc, #28]	; (8012414 <settimeofday+0x24>)
 80123f8:	6804      	ldr	r4, [r0, #0]
 80123fa:	601a      	str	r2, [r3, #0]
 80123fc:	6843      	ldr	r3, [r0, #4]
 80123fe:	4806      	ldr	r0, [pc, #24]	; (8012418 <settimeofday+0x28>)
 8012400:	17da      	asrs	r2, r3, #31
 8012402:	fbc4 3200 	smlal	r3, r2, r4, r0
 8012406:	4905      	ldr	r1, [pc, #20]	; (801241c <settimeofday+0x2c>)
 8012408:	2000      	movs	r0, #0
 801240a:	e9c1 3200 	strd	r3, r2, [r1]
 801240e:	bd10      	pop	{r4, pc}
 8012410:	2000a9c4 	andcs	sl, r0, r4, asr #19
 8012414:	2000a9c0 	andcs	sl, r0, r0, asr #19
 8012418:	000f4240 	andeq	r4, pc, r0, asr #4
 801241c:	2000a9b8 			; <UNDEFINED> instruction: 0x2000a9b8

08012420 <time>:
 8012420:	b513      	push	{r0, r1, r4, lr}
 8012422:	4604      	mov	r4, r0
 8012424:	2100      	movs	r1, #0
 8012426:	4668      	mov	r0, sp
 8012428:	f7ff ffb8 	bl	801239c <gettimeofday>
 801242c:	9800      	ldr	r0, [sp, #0]
 801242e:	b104      	cbz	r4, 8012432 <time+0x12>
 8012430:	6020      	str	r0, [r4, #0]
 8012432:	b002      	add	sp, #8
 8012434:	bd10      	pop	{r4, pc}
	...

08012438 <uart0_init>:
 8012438:	2301      	movs	r3, #1
 801243a:	b507      	push	{r0, r1, r2, lr}
 801243c:	2208      	movs	r2, #8
 801243e:	9300      	str	r3, [sp, #0]
 8012440:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8012444:	2300      	movs	r3, #0
 8012446:	4803      	ldr	r0, [pc, #12]	; (8012454 <uart0_init+0x1c>)
 8012448:	f001 f80a 	bl	8013460 <gd32_uart_begin>
 801244c:	b003      	add	sp, #12
 801244e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012452:	bf00      	nop
 8012454:	40013800 	andmi	r3, r1, r0, lsl #16

08012458 <uart0_putc>:
 8012458:	280a      	cmp	r0, #10
 801245a:	b538      	push	{r3, r4, r5, lr}
 801245c:	4604      	mov	r4, r0
 801245e:	d10a      	bne.n	8012476 <uart0_putc+0x1e>
 8012460:	4d0b      	ldr	r5, [pc, #44]	; (8012490 <uart0_putc+0x38>)
 8012462:	2107      	movs	r1, #7
 8012464:	4628      	mov	r0, r5
 8012466:	f000 fcd5 	bl	8012e14 <usart_flag_get>
 801246a:	2800      	cmp	r0, #0
 801246c:	d0f9      	beq.n	8012462 <uart0_putc+0xa>
 801246e:	220d      	movs	r2, #13
 8012470:	4b08      	ldr	r3, [pc, #32]	; (8012494 <uart0_putc+0x3c>)
 8012472:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8012476:	4d06      	ldr	r5, [pc, #24]	; (8012490 <uart0_putc+0x38>)
 8012478:	2107      	movs	r1, #7
 801247a:	4628      	mov	r0, r5
 801247c:	f000 fcca 	bl	8012e14 <usart_flag_get>
 8012480:	2800      	cmp	r0, #0
 8012482:	d0f9      	beq.n	8012478 <uart0_putc+0x20>
 8012484:	4b03      	ldr	r3, [pc, #12]	; (8012494 <uart0_putc+0x3c>)
 8012486:	b2e4      	uxtb	r4, r4
 8012488:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 801248c:	bd38      	pop	{r3, r4, r5, pc}
 801248e:	bf00      	nop
 8012490:	40013800 	andmi	r3, r1, r0, lsl #16
 8012494:	40013000 	andmi	r3, r1, r0

08012498 <uart0_puts>:
 8012498:	b510      	push	{r4, lr}
 801249a:	1e44      	subs	r4, r0, #1
 801249c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80124a0:	b903      	cbnz	r3, 80124a4 <uart0_puts+0xc>
 80124a2:	bd10      	pop	{r4, pc}
 80124a4:	2b0a      	cmp	r3, #10
 80124a6:	d102      	bne.n	80124ae <uart0_puts+0x16>
 80124a8:	200d      	movs	r0, #13
 80124aa:	f7ff ffd5 	bl	8012458 <uart0_putc>
 80124ae:	7820      	ldrb	r0, [r4, #0]
 80124b0:	f7ff ffd2 	bl	8012458 <uart0_putc>
 80124b4:	e7f2      	b.n	801249c <uart0_puts+0x4>
	...

080124b8 <systick_config>:
 80124b8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80124bc:	4b0b      	ldr	r3, [pc, #44]	; (80124ec <systick_config+0x34>)
 80124be:	681b      	ldr	r3, [r3, #0]
 80124c0:	fbb3 f3f2 	udiv	r3, r3, r2
 80124c4:	3b01      	subs	r3, #1
 80124c6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80124ca:	d20d      	bcs.n	80124e8 <systick_config+0x30>
 80124cc:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80124d0:	21f0      	movs	r1, #240	; 0xf0
 80124d2:	6153      	str	r3, [r2, #20]
 80124d4:	4b06      	ldr	r3, [pc, #24]	; (80124f0 <systick_config+0x38>)
 80124d6:	2007      	movs	r0, #7
 80124d8:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80124dc:	2100      	movs	r1, #0
 80124de:	6191      	str	r1, [r2, #24]
 80124e0:	6110      	str	r0, [r2, #16]
 80124e2:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80124e6:	4770      	bx	lr
 80124e8:	e7fe      	b.n	80124e8 <systick_config+0x30>
 80124ea:	bf00      	nop
 80124ec:	200000e0 	andcs	r0, r0, r0, ror #1
 80124f0:	e000ed00 	and	lr, r0, r0, lsl #26

080124f4 <SysTick_Handler>:
 80124f4:	4a02      	ldr	r2, [pc, #8]	; (8012500 <SysTick_Handler+0xc>)
 80124f6:	6813      	ldr	r3, [r2, #0]
 80124f8:	3301      	adds	r3, #1
 80124fa:	6013      	str	r3, [r2, #0]
 80124fc:	4770      	bx	lr
 80124fe:	bf00      	nop
 8012500:	2000a9c4 	andcs	sl, r0, r4, asr #19

08012504 <SystemInit>:
 8012504:	4b37      	ldr	r3, [pc, #220]	; (80125e4 <SystemInit+0xe0>)
 8012506:	4838      	ldr	r0, [pc, #224]	; (80125e8 <SystemInit+0xe4>)
 8012508:	681a      	ldr	r2, [r3, #0]
 801250a:	f042 0201 	orr.w	r2, r2, #1
 801250e:	601a      	str	r2, [r3, #0]
 8012510:	685a      	ldr	r2, [r3, #4]
 8012512:	f022 0203 	bic.w	r2, r2, #3
 8012516:	605a      	str	r2, [r3, #4]
 8012518:	6819      	ldr	r1, [r3, #0]
 801251a:	4001      	ands	r1, r0
 801251c:	6019      	str	r1, [r3, #0]
 801251e:	685a      	ldr	r2, [r3, #4]
 8012520:	4932      	ldr	r1, [pc, #200]	; (80125ec <SystemInit+0xe8>)
 8012522:	4011      	ands	r1, r2
 8012524:	6059      	str	r1, [r3, #4]
 8012526:	681a      	ldr	r2, [r3, #0]
 8012528:	4002      	ands	r2, r0
 801252a:	601a      	str	r2, [r3, #0]
 801252c:	681a      	ldr	r2, [r3, #0]
 801252e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8012532:	601a      	str	r2, [r3, #0]
 8012534:	685a      	ldr	r2, [r3, #4]
 8012536:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 801253a:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 801253e:	605a      	str	r2, [r3, #4]
 8012540:	2200      	movs	r2, #0
 8012542:	62da      	str	r2, [r3, #44]	; 0x2c
 8012544:	681a      	ldr	r2, [r3, #0]
 8012546:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 801254a:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 801254e:	601a      	str	r2, [r3, #0]
 8012550:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8012554:	609a      	str	r2, [r3, #8]
 8012556:	681a      	ldr	r2, [r3, #0]
 8012558:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 801255c:	601a      	str	r2, [r3, #0]
 801255e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012562:	6819      	ldr	r1, [r3, #0]
 8012564:	0389      	lsls	r1, r1, #14
 8012566:	d401      	bmi.n	801256c <SystemInit+0x68>
 8012568:	3a01      	subs	r2, #1
 801256a:	d1fa      	bne.n	8012562 <SystemInit+0x5e>
 801256c:	681a      	ldr	r2, [r3, #0]
 801256e:	0392      	lsls	r2, r2, #14
 8012570:	d400      	bmi.n	8012574 <SystemInit+0x70>
 8012572:	e7fe      	b.n	8012572 <SystemInit+0x6e>
 8012574:	685a      	ldr	r2, [r3, #4]
 8012576:	605a      	str	r2, [r3, #4]
 8012578:	685a      	ldr	r2, [r3, #4]
 801257a:	605a      	str	r2, [r3, #4]
 801257c:	685a      	ldr	r2, [r3, #4]
 801257e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012582:	605a      	str	r2, [r3, #4]
 8012584:	685a      	ldr	r2, [r3, #4]
 8012586:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 801258a:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 801258e:	605a      	str	r2, [r3, #4]
 8012590:	685a      	ldr	r2, [r3, #4]
 8012592:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8012596:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 801259a:	605a      	str	r2, [r3, #4]
 801259c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801259e:	4a14      	ldr	r2, [pc, #80]	; (80125f0 <SystemInit+0xec>)
 80125a0:	400a      	ands	r2, r1
 80125a2:	62da      	str	r2, [r3, #44]	; 0x2c
 80125a4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80125a6:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 80125aa:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 80125ae:	62da      	str	r2, [r3, #44]	; 0x2c
 80125b0:	681a      	ldr	r2, [r3, #0]
 80125b2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80125b6:	601a      	str	r2, [r3, #0]
 80125b8:	681a      	ldr	r2, [r3, #0]
 80125ba:	0110      	lsls	r0, r2, #4
 80125bc:	d5fc      	bpl.n	80125b8 <SystemInit+0xb4>
 80125be:	681a      	ldr	r2, [r3, #0]
 80125c0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80125c4:	601a      	str	r2, [r3, #0]
 80125c6:	681a      	ldr	r2, [r3, #0]
 80125c8:	0191      	lsls	r1, r2, #6
 80125ca:	d5fc      	bpl.n	80125c6 <SystemInit+0xc2>
 80125cc:	685a      	ldr	r2, [r3, #4]
 80125ce:	f022 0203 	bic.w	r2, r2, #3
 80125d2:	605a      	str	r2, [r3, #4]
 80125d4:	685a      	ldr	r2, [r3, #4]
 80125d6:	f042 0202 	orr.w	r2, r2, #2
 80125da:	605a      	str	r2, [r3, #4]
 80125dc:	685a      	ldr	r2, [r3, #4]
 80125de:	0712      	lsls	r2, r2, #28
 80125e0:	d5fc      	bpl.n	80125dc <SystemInit+0xd8>
 80125e2:	4770      	bx	lr
 80125e4:	40021000 	andmi	r1, r2, r0
 80125e8:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80125ec:	e0ff000c 	rscs	r0, pc, ip
 80125f0:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080125f4 <bkp_deinit>:
 80125f4:	b508      	push	{r3, lr}
 80125f6:	f000 f97b 	bl	80128f0 <rcu_bkp_reset_enable>
 80125fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80125fe:	f000 b97f 	b.w	8012900 <rcu_bkp_reset_disable>
	...

08012604 <bkp_data_write>:
 8012604:	f1a0 030b 	sub.w	r3, r0, #11
 8012608:	2b1f      	cmp	r3, #31
 801260a:	d804      	bhi.n	8012616 <bkp_data_write+0x12>
 801260c:	4b07      	ldr	r3, [pc, #28]	; (801262c <bkp_data_write+0x28>)
 801260e:	4403      	add	r3, r0
 8012610:	009b      	lsls	r3, r3, #2
 8012612:	8019      	strh	r1, [r3, #0]
 8012614:	4770      	bx	lr
 8012616:	1e43      	subs	r3, r0, #1
 8012618:	2b09      	cmp	r3, #9
 801261a:	bf9f      	itttt	ls
 801261c:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012620:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012624:	0080      	lslls	r0, r0, #2
 8012626:	8001      	strhls	r1, [r0, #0]
 8012628:	4770      	bx	lr
 801262a:	bf00      	nop
 801262c:	10001b05 	andne	r1, r0, r5, lsl #22

08012630 <bkp_data_read>:
 8012630:	f1a0 030b 	sub.w	r3, r0, #11
 8012634:	2b1f      	cmp	r3, #31
 8012636:	d805      	bhi.n	8012644 <bkp_data_read+0x14>
 8012638:	4b08      	ldr	r3, [pc, #32]	; (801265c <bkp_data_read+0x2c>)
 801263a:	4403      	add	r3, r0
 801263c:	009b      	lsls	r3, r3, #2
 801263e:	8818      	ldrh	r0, [r3, #0]
 8012640:	b280      	uxth	r0, r0
 8012642:	4770      	bx	lr
 8012644:	1e43      	subs	r3, r0, #1
 8012646:	2b09      	cmp	r3, #9
 8012648:	d806      	bhi.n	8012658 <bkp_data_read+0x28>
 801264a:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 801264e:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012652:	0080      	lsls	r0, r0, #2
 8012654:	8800      	ldrh	r0, [r0, #0]
 8012656:	e7f3      	b.n	8012640 <bkp_data_read+0x10>
 8012658:	2000      	movs	r0, #0
 801265a:	4770      	bx	lr
 801265c:	10001b05 	andne	r1, r0, r5, lsl #22

08012660 <fmc_bank0_unlock>:
 8012660:	4b04      	ldr	r3, [pc, #16]	; (8012674 <fmc_bank0_unlock+0x14>)
 8012662:	691a      	ldr	r2, [r3, #16]
 8012664:	0612      	lsls	r2, r2, #24
 8012666:	bf41      	itttt	mi
 8012668:	4a03      	ldrmi	r2, [pc, #12]	; (8012678 <fmc_bank0_unlock+0x18>)
 801266a:	605a      	strmi	r2, [r3, #4]
 801266c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012670:	605a      	strmi	r2, [r3, #4]
 8012672:	4770      	bx	lr
 8012674:	40022000 	andmi	r2, r2, r0
 8012678:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801267c <fmc_bank1_unlock>:
 801267c:	4b04      	ldr	r3, [pc, #16]	; (8012690 <fmc_bank1_unlock+0x14>)
 801267e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012680:	0612      	lsls	r2, r2, #24
 8012682:	bf41      	itttt	mi
 8012684:	4a03      	ldrmi	r2, [pc, #12]	; (8012694 <fmc_bank1_unlock+0x18>)
 8012686:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012688:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 801268c:	645a      	strmi	r2, [r3, #68]	; 0x44
 801268e:	4770      	bx	lr
 8012690:	40022000 	andmi	r2, r2, r0
 8012694:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012698 <fmc_bank0_lock>:
 8012698:	4a02      	ldr	r2, [pc, #8]	; (80126a4 <fmc_bank0_lock+0xc>)
 801269a:	6913      	ldr	r3, [r2, #16]
 801269c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80126a0:	6113      	str	r3, [r2, #16]
 80126a2:	4770      	bx	lr
 80126a4:	40022000 	andmi	r2, r2, r0

080126a8 <fmc_bank1_lock>:
 80126a8:	4a02      	ldr	r2, [pc, #8]	; (80126b4 <fmc_bank1_lock+0xc>)
 80126aa:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80126ac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80126b0:	6513      	str	r3, [r2, #80]	; 0x50
 80126b2:	4770      	bx	lr
 80126b4:	40022000 	andmi	r2, r2, r0

080126b8 <fmc_bank0_state_get>:
 80126b8:	4b08      	ldr	r3, [pc, #32]	; (80126dc <fmc_bank0_state_get+0x24>)
 80126ba:	68da      	ldr	r2, [r3, #12]
 80126bc:	07d1      	lsls	r1, r2, #31
 80126be:	d409      	bmi.n	80126d4 <fmc_bank0_state_get+0x1c>
 80126c0:	68da      	ldr	r2, [r3, #12]
 80126c2:	06d2      	lsls	r2, r2, #27
 80126c4:	d408      	bmi.n	80126d8 <fmc_bank0_state_get+0x20>
 80126c6:	68db      	ldr	r3, [r3, #12]
 80126c8:	f013 0f04 	tst.w	r3, #4
 80126cc:	bf0c      	ite	eq
 80126ce:	2000      	moveq	r0, #0
 80126d0:	2002      	movne	r0, #2
 80126d2:	4770      	bx	lr
 80126d4:	2001      	movs	r0, #1
 80126d6:	4770      	bx	lr
 80126d8:	2003      	movs	r0, #3
 80126da:	4770      	bx	lr
 80126dc:	40022000 	andmi	r2, r2, r0

080126e0 <fmc_bank1_state_get>:
 80126e0:	4b08      	ldr	r3, [pc, #32]	; (8012704 <fmc_bank1_state_get+0x24>)
 80126e2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80126e4:	07d1      	lsls	r1, r2, #31
 80126e6:	d409      	bmi.n	80126fc <fmc_bank1_state_get+0x1c>
 80126e8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80126ea:	06d2      	lsls	r2, r2, #27
 80126ec:	d408      	bmi.n	8012700 <fmc_bank1_state_get+0x20>
 80126ee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126f0:	f013 0f04 	tst.w	r3, #4
 80126f4:	bf0c      	ite	eq
 80126f6:	2000      	moveq	r0, #0
 80126f8:	2002      	movne	r0, #2
 80126fa:	4770      	bx	lr
 80126fc:	2001      	movs	r0, #1
 80126fe:	4770      	bx	lr
 8012700:	2003      	movs	r0, #3
 8012702:	4770      	bx	lr
 8012704:	40022000 	andmi	r2, r2, r0

08012708 <fwdgt_enable>:
 8012708:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 801270c:	4b01      	ldr	r3, [pc, #4]	; (8012714 <fwdgt_enable+0xc>)
 801270e:	601a      	str	r2, [r3, #0]
 8012710:	4770      	bx	lr
 8012712:	bf00      	nop
 8012714:	40003000 	andmi	r3, r0, r0

08012718 <fwdgt_counter_reload>:
 8012718:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 801271c:	4b01      	ldr	r3, [pc, #4]	; (8012724 <fwdgt_counter_reload+0xc>)
 801271e:	601a      	str	r2, [r3, #0]
 8012720:	4770      	bx	lr
 8012722:	bf00      	nop
 8012724:	40003000 	andmi	r3, r0, r0

08012728 <fwdgt_config>:
 8012728:	f245 5355 	movw	r3, #21845	; 0x5555
 801272c:	4a11      	ldr	r2, [pc, #68]	; (8012774 <fwdgt_config+0x4c>)
 801272e:	b510      	push	{r4, lr}
 8012730:	4c11      	ldr	r4, [pc, #68]	; (8012778 <fwdgt_config+0x50>)
 8012732:	6013      	str	r3, [r2, #0]
 8012734:	68d3      	ldr	r3, [r2, #12]
 8012736:	3c01      	subs	r4, #1
 8012738:	f003 0301 	and.w	r3, r3, #1
 801273c:	d013      	beq.n	8012766 <fwdgt_config+0x3e>
 801273e:	2b00      	cmp	r3, #0
 8012740:	d1f8      	bne.n	8012734 <fwdgt_config+0xc>
 8012742:	6051      	str	r1, [r2, #4]
 8012744:	490c      	ldr	r1, [pc, #48]	; (8012778 <fwdgt_config+0x50>)
 8012746:	4a0b      	ldr	r2, [pc, #44]	; (8012774 <fwdgt_config+0x4c>)
 8012748:	68d3      	ldr	r3, [r2, #12]
 801274a:	3901      	subs	r1, #1
 801274c:	f003 0302 	and.w	r3, r3, #2
 8012750:	d00d      	beq.n	801276e <fwdgt_config+0x46>
 8012752:	2b00      	cmp	r3, #0
 8012754:	d1f8      	bne.n	8012748 <fwdgt_config+0x20>
 8012756:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 801275a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801275e:	6090      	str	r0, [r2, #8]
 8012760:	2001      	movs	r0, #1
 8012762:	6013      	str	r3, [r2, #0]
 8012764:	e002      	b.n	801276c <fwdgt_config+0x44>
 8012766:	2b00      	cmp	r3, #0
 8012768:	d0eb      	beq.n	8012742 <fwdgt_config+0x1a>
 801276a:	2000      	movs	r0, #0
 801276c:	bd10      	pop	{r4, pc}
 801276e:	2b00      	cmp	r3, #0
 8012770:	d1fb      	bne.n	801276a <fwdgt_config+0x42>
 8012772:	e7f0      	b.n	8012756 <fwdgt_config+0x2e>
 8012774:	40003000 	andmi	r3, r0, r0
 8012778:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801277c <gpio_init>:
 801277c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012780:	f04f 0c0f 	mov.w	ip, #15
 8012784:	06cf      	lsls	r7, r1, #27
 8012786:	f04f 0400 	mov.w	r4, #0
 801278a:	f04f 0701 	mov.w	r7, #1
 801278e:	f001 050f 	and.w	r5, r1, #15
 8012792:	bf48      	it	mi
 8012794:	4315      	orrmi	r5, r2
 8012796:	fa23 f204 	lsr.w	r2, r3, r4
 801279a:	07d6      	lsls	r6, r2, #31
 801279c:	d510      	bpl.n	80127c0 <gpio_init+0x44>
 801279e:	00a2      	lsls	r2, r4, #2
 80127a0:	6806      	ldr	r6, [r0, #0]
 80127a2:	fa0c fe02 	lsl.w	lr, ip, r2
 80127a6:	ea26 060e 	bic.w	r6, r6, lr
 80127aa:	fa05 f202 	lsl.w	r2, r5, r2
 80127ae:	2928      	cmp	r1, #40	; 0x28
 80127b0:	ea42 0206 	orr.w	r2, r2, r6
 80127b4:	d128      	bne.n	8012808 <gpio_init+0x8c>
 80127b6:	fa07 f604 	lsl.w	r6, r7, r4
 80127ba:	401e      	ands	r6, r3
 80127bc:	6146      	str	r6, [r0, #20]
 80127be:	6002      	str	r2, [r0, #0]
 80127c0:	3401      	adds	r4, #1
 80127c2:	2c08      	cmp	r4, #8
 80127c4:	d1e7      	bne.n	8012796 <gpio_init+0x1a>
 80127c6:	2600      	movs	r6, #0
 80127c8:	f04f 0c0f 	mov.w	ip, #15
 80127cc:	2701      	movs	r7, #1
 80127ce:	f106 0208 	add.w	r2, r6, #8
 80127d2:	fa23 f402 	lsr.w	r4, r3, r2
 80127d6:	07e4      	lsls	r4, r4, #31
 80127d8:	d511      	bpl.n	80127fe <gpio_init+0x82>
 80127da:	00b4      	lsls	r4, r6, #2
 80127dc:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80127e0:	fa0c f804 	lsl.w	r8, ip, r4
 80127e4:	ea2e 0e08 	bic.w	lr, lr, r8
 80127e8:	fa05 f404 	lsl.w	r4, r5, r4
 80127ec:	2928      	cmp	r1, #40	; 0x28
 80127ee:	ea44 040e 	orr.w	r4, r4, lr
 80127f2:	d110      	bne.n	8012816 <gpio_init+0x9a>
 80127f4:	fa07 f202 	lsl.w	r2, r7, r2
 80127f8:	401a      	ands	r2, r3
 80127fa:	6142      	str	r2, [r0, #20]
 80127fc:	6044      	str	r4, [r0, #4]
 80127fe:	3601      	adds	r6, #1
 8012800:	2e08      	cmp	r6, #8
 8012802:	d1e4      	bne.n	80127ce <gpio_init+0x52>
 8012804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012808:	2948      	cmp	r1, #72	; 0x48
 801280a:	bf02      	ittt	eq
 801280c:	fa07 f604 	lsleq.w	r6, r7, r4
 8012810:	401e      	andeq	r6, r3
 8012812:	6106      	streq	r6, [r0, #16]
 8012814:	e7d3      	b.n	80127be <gpio_init+0x42>
 8012816:	2948      	cmp	r1, #72	; 0x48
 8012818:	bf02      	ittt	eq
 801281a:	fa07 f202 	lsleq.w	r2, r7, r2
 801281e:	401a      	andeq	r2, r3
 8012820:	6102      	streq	r2, [r0, #16]
 8012822:	e7eb      	b.n	80127fc <gpio_init+0x80>

08012824 <gpio_pin_remap_config>:
 8012824:	2800      	cmp	r0, #0
 8012826:	4a16      	ldr	r2, [pc, #88]	; (8012880 <gpio_pin_remap_config+0x5c>)
 8012828:	b530      	push	{r4, r5, lr}
 801282a:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 801282e:	bfb4      	ite	lt
 8012830:	69d3      	ldrlt	r3, [r2, #28]
 8012832:	6853      	ldrge	r3, [r2, #4]
 8012834:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8012838:	b284      	uxth	r4, r0
 801283a:	d110      	bne.n	801285e <gpio_pin_remap_config+0x3a>
 801283c:	6855      	ldr	r5, [r2, #4]
 801283e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012842:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8012846:	6055      	str	r5, [r2, #4]
 8012848:	b119      	cbz	r1, 8012852 <gpio_pin_remap_config+0x2e>
 801284a:	0d42      	lsrs	r2, r0, #21
 801284c:	0112      	lsls	r2, r2, #4
 801284e:	4094      	lsls	r4, r2
 8012850:	4323      	orrs	r3, r4
 8012852:	4a0b      	ldr	r2, [pc, #44]	; (8012880 <gpio_pin_remap_config+0x5c>)
 8012854:	2800      	cmp	r0, #0
 8012856:	bfb4      	ite	lt
 8012858:	61d3      	strlt	r3, [r2, #28]
 801285a:	6053      	strge	r3, [r2, #4]
 801285c:	bd30      	pop	{r4, r5, pc}
 801285e:	02c2      	lsls	r2, r0, #11
 8012860:	bf4d      	iteet	mi
 8012862:	2203      	movmi	r2, #3
 8012864:	0d42      	lsrpl	r2, r0, #21
 8012866:	0112      	lslpl	r2, r2, #4
 8012868:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 801286c:	bf4c      	ite	mi
 801286e:	40aa      	lslmi	r2, r5
 8012870:	fa04 f202 	lslpl.w	r2, r4, r2
 8012874:	ea23 0302 	bic.w	r3, r3, r2
 8012878:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 801287c:	e7e4      	b.n	8012848 <gpio_pin_remap_config+0x24>
 801287e:	bf00      	nop
 8012880:	40010000 	andmi	r0, r1, r0

08012884 <gpio_ethernet_phy_select>:
 8012884:	4b04      	ldr	r3, [pc, #16]	; (8012898 <gpio_ethernet_phy_select+0x14>)
 8012886:	6859      	ldr	r1, [r3, #4]
 8012888:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 801288c:	6059      	str	r1, [r3, #4]
 801288e:	685a      	ldr	r2, [r3, #4]
 8012890:	4302      	orrs	r2, r0
 8012892:	605a      	str	r2, [r3, #4]
 8012894:	4770      	bx	lr
 8012896:	bf00      	nop
 8012898:	40010000 	andmi	r0, r1, r0

0801289c <pmu_backup_write_enable>:
 801289c:	4a02      	ldr	r2, [pc, #8]	; (80128a8 <pmu_backup_write_enable+0xc>)
 801289e:	6813      	ldr	r3, [r2, #0]
 80128a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80128a4:	6013      	str	r3, [r2, #0]
 80128a6:	4770      	bx	lr
 80128a8:	40007000 	andmi	r7, r0, r0

080128ac <rcu_periph_clock_enable>:
 80128ac:	2201      	movs	r2, #1
 80128ae:	0983      	lsrs	r3, r0, #6
 80128b0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80128b4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80128b8:	6819      	ldr	r1, [r3, #0]
 80128ba:	f000 001f 	and.w	r0, r0, #31
 80128be:	fa02 f000 	lsl.w	r0, r2, r0
 80128c2:	4308      	orrs	r0, r1
 80128c4:	6018      	str	r0, [r3, #0]
 80128c6:	4770      	bx	lr

080128c8 <rcu_periph_clock_disable>:
 80128c8:	2101      	movs	r1, #1
 80128ca:	0983      	lsrs	r3, r0, #6
 80128cc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80128d0:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80128d4:	681a      	ldr	r2, [r3, #0]
 80128d6:	f000 001f 	and.w	r0, r0, #31
 80128da:	fa01 f000 	lsl.w	r0, r1, r0
 80128de:	ea22 0000 	bic.w	r0, r2, r0
 80128e2:	6018      	str	r0, [r3, #0]
 80128e4:	4770      	bx	lr

080128e6 <rcu_periph_reset_enable>:
 80128e6:	f7ff bfe1 	b.w	80128ac <rcu_periph_clock_enable>

080128ea <rcu_periph_reset_disable>:
 80128ea:	f7ff bfed 	b.w	80128c8 <rcu_periph_clock_disable>
	...

080128f0 <rcu_bkp_reset_enable>:
 80128f0:	4a02      	ldr	r2, [pc, #8]	; (80128fc <rcu_bkp_reset_enable+0xc>)
 80128f2:	6a13      	ldr	r3, [r2, #32]
 80128f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80128f8:	6213      	str	r3, [r2, #32]
 80128fa:	4770      	bx	lr
 80128fc:	40021000 	andmi	r1, r2, r0

08012900 <rcu_bkp_reset_disable>:
 8012900:	4a02      	ldr	r2, [pc, #8]	; (801290c <rcu_bkp_reset_disable+0xc>)
 8012902:	6a13      	ldr	r3, [r2, #32]
 8012904:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8012908:	6213      	str	r3, [r2, #32]
 801290a:	4770      	bx	lr
 801290c:	40021000 	andmi	r1, r2, r0

08012910 <rcu_ckout0_config>:
 8012910:	4a03      	ldr	r2, [pc, #12]	; (8012920 <rcu_ckout0_config+0x10>)
 8012912:	6853      	ldr	r3, [r2, #4]
 8012914:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012918:	4303      	orrs	r3, r0
 801291a:	6053      	str	r3, [r2, #4]
 801291c:	4770      	bx	lr
 801291e:	bf00      	nop
 8012920:	40021000 	andmi	r1, r2, r0

08012924 <rcu_pll2_config>:
 8012924:	4b04      	ldr	r3, [pc, #16]	; (8012938 <rcu_pll2_config+0x14>)
 8012926:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012928:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 801292c:	62d9      	str	r1, [r3, #44]	; 0x2c
 801292e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012930:	4302      	orrs	r2, r0
 8012932:	62da      	str	r2, [r3, #44]	; 0x2c
 8012934:	4770      	bx	lr
 8012936:	bf00      	nop
 8012938:	40021000 	andmi	r1, r2, r0

0801293c <rcu_adc_clock_config>:
 801293c:	490c      	ldr	r1, [pc, #48]	; (8012970 <rcu_adc_clock_config+0x34>)
 801293e:	2805      	cmp	r0, #5
 8012940:	684b      	ldr	r3, [r1, #4]
 8012942:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8012946:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801294a:	d006      	beq.n	801295a <rcu_adc_clock_config+0x1e>
 801294c:	d803      	bhi.n	8012956 <rcu_adc_clock_config+0x1a>
 801294e:	2804      	cmp	r0, #4
 8012950:	d10a      	bne.n	8012968 <rcu_adc_clock_config+0x2c>
 8012952:	604b      	str	r3, [r1, #4]
 8012954:	4770      	bx	lr
 8012956:	2807      	cmp	r0, #7
 8012958:	d1fb      	bne.n	8012952 <rcu_adc_clock_config+0x16>
 801295a:	4a06      	ldr	r2, [pc, #24]	; (8012974 <rcu_adc_clock_config+0x38>)
 801295c:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8012960:	4303      	orrs	r3, r0
 8012962:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8012966:	e7f4      	b.n	8012952 <rcu_adc_clock_config+0x16>
 8012968:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801296c:	e7f1      	b.n	8012952 <rcu_adc_clock_config+0x16>
 801296e:	bf00      	nop
 8012970:	40021000 	andmi	r1, r2, r0
 8012974:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08012978 <rcu_flag_get>:
 8012978:	0983      	lsrs	r3, r0, #6
 801297a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801297e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012982:	681b      	ldr	r3, [r3, #0]
 8012984:	f000 001f 	and.w	r0, r0, #31
 8012988:	fa23 f000 	lsr.w	r0, r3, r0
 801298c:	f000 0001 	and.w	r0, r0, #1
 8012990:	4770      	bx	lr
	...

08012994 <rcu_osci_stab_wait>:
 8012994:	281a      	cmp	r0, #26
 8012996:	b508      	push	{r3, lr}
 8012998:	d051      	beq.n	8012a3e <rcu_osci_stab_wait+0xaa>
 801299a:	d806      	bhi.n	80129aa <rcu_osci_stab_wait+0x16>
 801299c:	2810      	cmp	r0, #16
 801299e:	d015      	beq.n	80129cc <rcu_osci_stab_wait+0x38>
 80129a0:	2818      	cmp	r0, #24
 80129a2:	d043      	beq.n	8012a2c <rcu_osci_stab_wait+0x98>
 80129a4:	b368      	cbz	r0, 8012a02 <rcu_osci_stab_wait+0x6e>
 80129a6:	2000      	movs	r0, #0
 80129a8:	bd08      	pop	{r3, pc}
 80129aa:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80129ae:	d01c      	beq.n	80129ea <rcu_osci_stab_wait+0x56>
 80129b0:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80129b4:	d02f      	beq.n	8012a16 <rcu_osci_stab_wait+0x82>
 80129b6:	281c      	cmp	r0, #28
 80129b8:	d1f5      	bne.n	80129a6 <rcu_osci_stab_wait+0x12>
 80129ba:	4a25      	ldr	r2, [pc, #148]	; (8012a50 <rcu_osci_stab_wait+0xbc>)
 80129bc:	201d      	movs	r0, #29
 80129be:	f7ff ffdb 	bl	8012978 <rcu_flag_get>
 80129c2:	b908      	cbnz	r0, 80129c8 <rcu_osci_stab_wait+0x34>
 80129c4:	3a01      	subs	r2, #1
 80129c6:	d1f9      	bne.n	80129bc <rcu_osci_stab_wait+0x28>
 80129c8:	201d      	movs	r0, #29
 80129ca:	e008      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 80129cc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80129d0:	2011      	movs	r0, #17
 80129d2:	f7ff ffd1 	bl	8012978 <rcu_flag_get>
 80129d6:	b908      	cbnz	r0, 80129dc <rcu_osci_stab_wait+0x48>
 80129d8:	3a01      	subs	r2, #1
 80129da:	d1f9      	bne.n	80129d0 <rcu_osci_stab_wait+0x3c>
 80129dc:	2011      	movs	r0, #17
 80129de:	f7ff ffcb 	bl	8012978 <rcu_flag_get>
 80129e2:	3800      	subs	r0, #0
 80129e4:	bf18      	it	ne
 80129e6:	2001      	movne	r0, #1
 80129e8:	e7de      	b.n	80129a8 <rcu_osci_stab_wait+0x14>
 80129ea:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 80129ee:	f640 0001 	movw	r0, #2049	; 0x801
 80129f2:	f7ff ffc1 	bl	8012978 <rcu_flag_get>
 80129f6:	b908      	cbnz	r0, 80129fc <rcu_osci_stab_wait+0x68>
 80129f8:	3a01      	subs	r2, #1
 80129fa:	d1f8      	bne.n	80129ee <rcu_osci_stab_wait+0x5a>
 80129fc:	f640 0001 	movw	r0, #2049	; 0x801
 8012a00:	e7ed      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 8012a02:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8012a06:	2001      	movs	r0, #1
 8012a08:	f7ff ffb6 	bl	8012978 <rcu_flag_get>
 8012a0c:	b908      	cbnz	r0, 8012a12 <rcu_osci_stab_wait+0x7e>
 8012a0e:	3a01      	subs	r2, #1
 8012a10:	d1f9      	bne.n	8012a06 <rcu_osci_stab_wait+0x72>
 8012a12:	2001      	movs	r0, #1
 8012a14:	e7e3      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 8012a16:	4a0e      	ldr	r2, [pc, #56]	; (8012a50 <rcu_osci_stab_wait+0xbc>)
 8012a18:	f640 1001 	movw	r0, #2305	; 0x901
 8012a1c:	f7ff ffac 	bl	8012978 <rcu_flag_get>
 8012a20:	b908      	cbnz	r0, 8012a26 <rcu_osci_stab_wait+0x92>
 8012a22:	3a01      	subs	r2, #1
 8012a24:	d1f8      	bne.n	8012a18 <rcu_osci_stab_wait+0x84>
 8012a26:	f640 1001 	movw	r0, #2305	; 0x901
 8012a2a:	e7d8      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 8012a2c:	4a08      	ldr	r2, [pc, #32]	; (8012a50 <rcu_osci_stab_wait+0xbc>)
 8012a2e:	2019      	movs	r0, #25
 8012a30:	f7ff ffa2 	bl	8012978 <rcu_flag_get>
 8012a34:	b908      	cbnz	r0, 8012a3a <rcu_osci_stab_wait+0xa6>
 8012a36:	3a01      	subs	r2, #1
 8012a38:	d1f9      	bne.n	8012a2e <rcu_osci_stab_wait+0x9a>
 8012a3a:	2019      	movs	r0, #25
 8012a3c:	e7cf      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 8012a3e:	4a04      	ldr	r2, [pc, #16]	; (8012a50 <rcu_osci_stab_wait+0xbc>)
 8012a40:	201b      	movs	r0, #27
 8012a42:	f7ff ff99 	bl	8012978 <rcu_flag_get>
 8012a46:	b908      	cbnz	r0, 8012a4c <rcu_osci_stab_wait+0xb8>
 8012a48:	3a01      	subs	r2, #1
 8012a4a:	d1f9      	bne.n	8012a40 <rcu_osci_stab_wait+0xac>
 8012a4c:	201b      	movs	r0, #27
 8012a4e:	e7c6      	b.n	80129de <rcu_osci_stab_wait+0x4a>
 8012a50:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012a54 <rcu_osci_on>:
 8012a54:	f7ff bf2a 	b.w	80128ac <rcu_periph_clock_enable>

08012a58 <rcu_clock_freq_get>:
 8012a58:	4b3d      	ldr	r3, [pc, #244]	; (8012b50 <rcu_clock_freq_get+0xf8>)
 8012a5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012a5c:	4604      	mov	r4, r0
 8012a5e:	461f      	mov	r7, r3
 8012a60:	b089      	sub	sp, #36	; 0x24
 8012a62:	ad04      	add	r5, sp, #16
 8012a64:	f103 0610 	add.w	r6, r3, #16
 8012a68:	462a      	mov	r2, r5
 8012a6a:	6818      	ldr	r0, [r3, #0]
 8012a6c:	6859      	ldr	r1, [r3, #4]
 8012a6e:	3308      	adds	r3, #8
 8012a70:	c203      	stmia	r2!, {r0, r1}
 8012a72:	42b3      	cmp	r3, r6
 8012a74:	4615      	mov	r5, r2
 8012a76:	d1f7      	bne.n	8012a68 <rcu_clock_freq_get+0x10>
 8012a78:	466b      	mov	r3, sp
 8012a7a:	6938      	ldr	r0, [r7, #16]
 8012a7c:	6871      	ldr	r1, [r6, #4]
 8012a7e:	4a35      	ldr	r2, [pc, #212]	; (8012b54 <rcu_clock_freq_get+0xfc>)
 8012a80:	c303      	stmia	r3!, {r0, r1}
 8012a82:	c303      	stmia	r3!, {r0, r1}
 8012a84:	6853      	ldr	r3, [r2, #4]
 8012a86:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012a8a:	2b01      	cmp	r3, #1
 8012a8c:	d053      	beq.n	8012b36 <rcu_clock_freq_get+0xde>
 8012a8e:	2b02      	cmp	r3, #2
 8012a90:	d153      	bne.n	8012b3a <rcu_clock_freq_get+0xe2>
 8012a92:	6853      	ldr	r3, [r2, #4]
 8012a94:	03dd      	lsls	r5, r3, #15
 8012a96:	d523      	bpl.n	8012ae0 <rcu_clock_freq_get+0x88>
 8012a98:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8012a9a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8012a9e:	4b2e      	ldr	r3, [pc, #184]	; (8012b58 <rcu_clock_freq_get+0x100>)
 8012aa0:	d00e      	beq.n	8012ac0 <rcu_clock_freq_get+0x68>
 8012aa2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8012aa4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8012aa6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8012aaa:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8012aae:	3101      	adds	r1, #1
 8012ab0:	280f      	cmp	r0, #15
 8012ab2:	f100 0502 	add.w	r5, r0, #2
 8012ab6:	fbb3 f3f1 	udiv	r3, r3, r1
 8012aba:	bf08      	it	eq
 8012abc:	2514      	moveq	r5, #20
 8012abe:	436b      	muls	r3, r5
 8012ac0:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8012ac2:	f001 010f 	and.w	r1, r1, #15
 8012ac6:	3101      	adds	r1, #1
 8012ac8:	fbb3 f3f1 	udiv	r3, r3, r1
 8012acc:	6851      	ldr	r1, [r2, #4]
 8012ace:	6850      	ldr	r0, [r2, #4]
 8012ad0:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8012ad4:	0080      	lsls	r0, r0, #2
 8012ad6:	d505      	bpl.n	8012ae4 <rcu_clock_freq_get+0x8c>
 8012ad8:	f041 0110 	orr.w	r1, r1, #16
 8012adc:	1c48      	adds	r0, r1, #1
 8012ade:	e007      	b.n	8012af0 <rcu_clock_freq_get+0x98>
 8012ae0:	4b1e      	ldr	r3, [pc, #120]	; (8012b5c <rcu_clock_freq_get+0x104>)
 8012ae2:	e7f3      	b.n	8012acc <rcu_clock_freq_get+0x74>
 8012ae4:	290f      	cmp	r1, #15
 8012ae6:	d0f9      	beq.n	8012adc <rcu_clock_freq_get+0x84>
 8012ae8:	290d      	cmp	r1, #13
 8012aea:	f101 0002 	add.w	r0, r1, #2
 8012aee:	d01d      	beq.n	8012b2c <rcu_clock_freq_get+0xd4>
 8012af0:	4343      	muls	r3, r0
 8012af2:	6851      	ldr	r1, [r2, #4]
 8012af4:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8012af8:	3120      	adds	r1, #32
 8012afa:	4469      	add	r1, sp
 8012afc:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8012b00:	fa23 f001 	lsr.w	r0, r3, r1
 8012b04:	6851      	ldr	r1, [r2, #4]
 8012b06:	6852      	ldr	r2, [r2, #4]
 8012b08:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8012b0c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8012b10:	3120      	adds	r1, #32
 8012b12:	3220      	adds	r2, #32
 8012b14:	4469      	add	r1, sp
 8012b16:	446a      	add	r2, sp
 8012b18:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8012b1c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8012b20:	2c03      	cmp	r4, #3
 8012b22:	d813      	bhi.n	8012b4c <rcu_clock_freq_get+0xf4>
 8012b24:	e8df f004 	tbb	[pc, r4]
 8012b28:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8012b2c:	2006      	movs	r0, #6
 8012b2e:	0859      	lsrs	r1, r3, #1
 8012b30:	fb00 1303 	mla	r3, r0, r3, r1
 8012b34:	e7dd      	b.n	8012af2 <rcu_clock_freq_get+0x9a>
 8012b36:	4b08      	ldr	r3, [pc, #32]	; (8012b58 <rcu_clock_freq_get+0x100>)
 8012b38:	e7db      	b.n	8012af2 <rcu_clock_freq_get+0x9a>
 8012b3a:	4b09      	ldr	r3, [pc, #36]	; (8012b60 <rcu_clock_freq_get+0x108>)
 8012b3c:	e7d9      	b.n	8012af2 <rcu_clock_freq_get+0x9a>
 8012b3e:	4618      	mov	r0, r3
 8012b40:	b009      	add	sp, #36	; 0x24
 8012b42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b44:	40c8      	lsrs	r0, r1
 8012b46:	e7fb      	b.n	8012b40 <rcu_clock_freq_get+0xe8>
 8012b48:	40d0      	lsrs	r0, r2
 8012b4a:	e7f9      	b.n	8012b40 <rcu_clock_freq_get+0xe8>
 8012b4c:	2000      	movs	r0, #0
 8012b4e:	e7f7      	b.n	8012b40 <rcu_clock_freq_get+0xe8>
 8012b50:	08014344 	stmdaeq	r1, {r2, r6, r8, r9, lr}
 8012b54:	40021000 	andmi	r1, r2, r0
 8012b58:	017d7840 	cmneq	sp, r0, asr #16
 8012b5c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8012b60:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08012b64 <timer_deinit>:
 8012b64:	b508      	push	{r3, lr}
 8012b66:	4b2d      	ldr	r3, [pc, #180]	; (8012c1c <timer_deinit+0xb8>)
 8012b68:	4298      	cmp	r0, r3
 8012b6a:	d048      	beq.n	8012bfe <timer_deinit+0x9a>
 8012b6c:	d816      	bhi.n	8012b9c <timer_deinit+0x38>
 8012b6e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012b72:	4298      	cmp	r0, r3
 8012b74:	d03c      	beq.n	8012bf0 <timer_deinit+0x8c>
 8012b76:	d807      	bhi.n	8012b88 <timer_deinit+0x24>
 8012b78:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8012b7c:	d02a      	beq.n	8012bd4 <timer_deinit+0x70>
 8012b7e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8012b82:	4298      	cmp	r0, r3
 8012b84:	d02d      	beq.n	8012be2 <timer_deinit+0x7e>
 8012b86:	bd08      	pop	{r3, pc}
 8012b88:	4b25      	ldr	r3, [pc, #148]	; (8012c20 <timer_deinit+0xbc>)
 8012b8a:	4298      	cmp	r0, r3
 8012b8c:	d1fb      	bne.n	8012b86 <timer_deinit+0x22>
 8012b8e:	f240 4003 	movw	r0, #1027	; 0x403
 8012b92:	f7ff fea8 	bl	80128e6 <rcu_periph_reset_enable>
 8012b96:	f240 4003 	movw	r0, #1027	; 0x403
 8012b9a:	e017      	b.n	8012bcc <timer_deinit+0x68>
 8012b9c:	4b21      	ldr	r3, [pc, #132]	; (8012c24 <timer_deinit+0xc0>)
 8012b9e:	4298      	cmp	r0, r3
 8012ba0:	d00e      	beq.n	8012bc0 <timer_deinit+0x5c>
 8012ba2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8012ba6:	4298      	cmp	r0, r3
 8012ba8:	d030      	beq.n	8012c0c <timer_deinit+0xa8>
 8012baa:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8012bae:	4298      	cmp	r0, r3
 8012bb0:	d1e9      	bne.n	8012b86 <timer_deinit+0x22>
 8012bb2:	f240 4005 	movw	r0, #1029	; 0x405
 8012bb6:	f7ff fe96 	bl	80128e6 <rcu_periph_reset_enable>
 8012bba:	f240 4005 	movw	r0, #1029	; 0x405
 8012bbe:	e005      	b.n	8012bcc <timer_deinit+0x68>
 8012bc0:	f240 300b 	movw	r0, #779	; 0x30b
 8012bc4:	f7ff fe8f 	bl	80128e6 <rcu_periph_reset_enable>
 8012bc8:	f240 300b 	movw	r0, #779	; 0x30b
 8012bcc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012bd0:	f7ff be8b 	b.w	80128ea <rcu_periph_reset_disable>
 8012bd4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8012bd8:	f7ff fe85 	bl	80128e6 <rcu_periph_reset_enable>
 8012bdc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8012be0:	e7f4      	b.n	8012bcc <timer_deinit+0x68>
 8012be2:	f240 4001 	movw	r0, #1025	; 0x401
 8012be6:	f7ff fe7e 	bl	80128e6 <rcu_periph_reset_enable>
 8012bea:	f240 4001 	movw	r0, #1025	; 0x401
 8012bee:	e7ed      	b.n	8012bcc <timer_deinit+0x68>
 8012bf0:	f240 4002 	movw	r0, #1026	; 0x402
 8012bf4:	f7ff fe77 	bl	80128e6 <rcu_periph_reset_enable>
 8012bf8:	f240 4002 	movw	r0, #1026	; 0x402
 8012bfc:	e7e6      	b.n	8012bcc <timer_deinit+0x68>
 8012bfe:	f240 4004 	movw	r0, #1028	; 0x404
 8012c02:	f7ff fe70 	bl	80128e6 <rcu_periph_reset_enable>
 8012c06:	f240 4004 	movw	r0, #1028	; 0x404
 8012c0a:	e7df      	b.n	8012bcc <timer_deinit+0x68>
 8012c0c:	f240 300d 	movw	r0, #781	; 0x30d
 8012c10:	f7ff fe69 	bl	80128e6 <rcu_periph_reset_enable>
 8012c14:	f240 300d 	movw	r0, #781	; 0x30d
 8012c18:	e7d8      	b.n	8012bcc <timer_deinit+0x68>
 8012c1a:	bf00      	nop
 8012c1c:	40001000 	andmi	r1, r0, r0
 8012c20:	40000c00 	andmi	r0, r0, r0, lsl #24
 8012c24:	40012c00 	andmi	r2, r1, r0, lsl #24

08012c28 <timer_init>:
 8012c28:	880b      	ldrh	r3, [r1, #0]
 8012c2a:	6283      	str	r3, [r0, #40]	; 0x28
 8012c2c:	4b26      	ldr	r3, [pc, #152]	; (8012cc8 <timer_init+0xa0>)
 8012c2e:	4298      	cmp	r0, r3
 8012c30:	d018      	beq.n	8012c64 <timer_init+0x3c>
 8012c32:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8012c36:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8012c3a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8012c3e:	d011      	beq.n	8012c64 <timer_init+0x3c>
 8012c40:	4a22      	ldr	r2, [pc, #136]	; (8012ccc <timer_init+0xa4>)
 8012c42:	4290      	cmp	r0, r2
 8012c44:	d00e      	beq.n	8012c64 <timer_init+0x3c>
 8012c46:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8012c4a:	4290      	cmp	r0, r2
 8012c4c:	d00a      	beq.n	8012c64 <timer_init+0x3c>
 8012c4e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8012c52:	4293      	cmp	r3, r2
 8012c54:	d006      	beq.n	8012c64 <timer_init+0x3c>
 8012c56:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8012c5a:	4293      	cmp	r3, r2
 8012c5c:	d002      	beq.n	8012c64 <timer_init+0x3c>
 8012c5e:	4b1c      	ldr	r3, [pc, #112]	; (8012cd0 <timer_init+0xa8>)
 8012c60:	4298      	cmp	r0, r3
 8012c62:	d10f      	bne.n	8012c84 <timer_init+0x5c>
 8012c64:	6803      	ldr	r3, [r0, #0]
 8012c66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8012c6a:	6003      	str	r3, [r0, #0]
 8012c6c:	884b      	ldrh	r3, [r1, #2]
 8012c6e:	6802      	ldr	r2, [r0, #0]
 8012c70:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012c74:	4313      	orrs	r3, r2
 8012c76:	6003      	str	r3, [r0, #0]
 8012c78:	888b      	ldrh	r3, [r1, #4]
 8012c7a:	6802      	ldr	r2, [r0, #0]
 8012c7c:	f003 0310 	and.w	r3, r3, #16
 8012c80:	4313      	orrs	r3, r2
 8012c82:	6003      	str	r3, [r0, #0]
 8012c84:	688b      	ldr	r3, [r1, #8]
 8012c86:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012c88:	4b12      	ldr	r3, [pc, #72]	; (8012cd4 <timer_init+0xac>)
 8012c8a:	4298      	cmp	r0, r3
 8012c8c:	d003      	beq.n	8012c96 <timer_init+0x6e>
 8012c8e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012c92:	4298      	cmp	r0, r3
 8012c94:	d104      	bne.n	8012ca0 <timer_init+0x78>
 8012c96:	6943      	ldr	r3, [r0, #20]
 8012c98:	f043 0301 	orr.w	r3, r3, #1
 8012c9c:	6143      	str	r3, [r0, #20]
 8012c9e:	4770      	bx	lr
 8012ca0:	6803      	ldr	r3, [r0, #0]
 8012ca2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8012ca6:	6003      	str	r3, [r0, #0]
 8012ca8:	898b      	ldrh	r3, [r1, #12]
 8012caa:	6802      	ldr	r2, [r0, #0]
 8012cac:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8012cb0:	4313      	orrs	r3, r2
 8012cb2:	6003      	str	r3, [r0, #0]
 8012cb4:	4b04      	ldr	r3, [pc, #16]	; (8012cc8 <timer_init+0xa0>)
 8012cb6:	4298      	cmp	r0, r3
 8012cb8:	d002      	beq.n	8012cc0 <timer_init+0x98>
 8012cba:	4b04      	ldr	r3, [pc, #16]	; (8012ccc <timer_init+0xa4>)
 8012cbc:	4298      	cmp	r0, r3
 8012cbe:	d1ea      	bne.n	8012c96 <timer_init+0x6e>
 8012cc0:	7b8b      	ldrb	r3, [r1, #14]
 8012cc2:	6303      	str	r3, [r0, #48]	; 0x30
 8012cc4:	e7e7      	b.n	8012c96 <timer_init+0x6e>
 8012cc6:	bf00      	nop
 8012cc8:	40012c00 	andmi	r2, r1, r0, lsl #24
 8012ccc:	40013400 	andmi	r3, r1, r0, lsl #8
 8012cd0:	40002000 	andmi	r2, r0, r0
 8012cd4:	40001000 	andmi	r1, r0, r0

08012cd8 <timer_enable>:
 8012cd8:	6803      	ldr	r3, [r0, #0]
 8012cda:	f043 0301 	orr.w	r3, r3, #1
 8012cde:	6003      	str	r3, [r0, #0]
 8012ce0:	4770      	bx	lr
	...

08012ce4 <usart_deinit>:
 8012ce4:	b508      	push	{r3, lr}
 8012ce6:	4b1d      	ldr	r3, [pc, #116]	; (8012d5c <usart_deinit+0x78>)
 8012ce8:	4298      	cmp	r0, r3
 8012cea:	d028      	beq.n	8012d3e <usart_deinit+0x5a>
 8012cec:	d808      	bhi.n	8012d00 <usart_deinit+0x1c>
 8012cee:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012cf2:	4298      	cmp	r0, r3
 8012cf4:	d015      	beq.n	8012d22 <usart_deinit+0x3e>
 8012cf6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012cfa:	4298      	cmp	r0, r3
 8012cfc:	d018      	beq.n	8012d30 <usart_deinit+0x4c>
 8012cfe:	bd08      	pop	{r3, pc}
 8012d00:	4b17      	ldr	r3, [pc, #92]	; (8012d60 <usart_deinit+0x7c>)
 8012d02:	4298      	cmp	r0, r3
 8012d04:	d022      	beq.n	8012d4c <usart_deinit+0x68>
 8012d06:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8012d0a:	4298      	cmp	r0, r3
 8012d0c:	d1f7      	bne.n	8012cfe <usart_deinit+0x1a>
 8012d0e:	f240 300e 	movw	r0, #782	; 0x30e
 8012d12:	f7ff fde8 	bl	80128e6 <rcu_periph_reset_enable>
 8012d16:	f240 300e 	movw	r0, #782	; 0x30e
 8012d1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012d1e:	f7ff bde4 	b.w	80128ea <rcu_periph_reset_disable>
 8012d22:	f240 4011 	movw	r0, #1041	; 0x411
 8012d26:	f7ff fdde 	bl	80128e6 <rcu_periph_reset_enable>
 8012d2a:	f240 4011 	movw	r0, #1041	; 0x411
 8012d2e:	e7f4      	b.n	8012d1a <usart_deinit+0x36>
 8012d30:	f240 4012 	movw	r0, #1042	; 0x412
 8012d34:	f7ff fdd7 	bl	80128e6 <rcu_periph_reset_enable>
 8012d38:	f240 4012 	movw	r0, #1042	; 0x412
 8012d3c:	e7ed      	b.n	8012d1a <usart_deinit+0x36>
 8012d3e:	f240 4013 	movw	r0, #1043	; 0x413
 8012d42:	f7ff fdd0 	bl	80128e6 <rcu_periph_reset_enable>
 8012d46:	f240 4013 	movw	r0, #1043	; 0x413
 8012d4a:	e7e6      	b.n	8012d1a <usart_deinit+0x36>
 8012d4c:	f240 4014 	movw	r0, #1044	; 0x414
 8012d50:	f7ff fdc9 	bl	80128e6 <rcu_periph_reset_enable>
 8012d54:	f240 4014 	movw	r0, #1044	; 0x414
 8012d58:	e7df      	b.n	8012d1a <usart_deinit+0x36>
 8012d5a:	bf00      	nop
 8012d5c:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012d60:	40005000 	andmi	r5, r0, r0

08012d64 <usart_baudrate_set>:
 8012d64:	b538      	push	{r3, r4, r5, lr}
 8012d66:	4b11      	ldr	r3, [pc, #68]	; (8012dac <usart_baudrate_set+0x48>)
 8012d68:	4604      	mov	r4, r0
 8012d6a:	4298      	cmp	r0, r3
 8012d6c:	460d      	mov	r5, r1
 8012d6e:	d01b      	beq.n	8012da8 <usart_baudrate_set+0x44>
 8012d70:	d809      	bhi.n	8012d86 <usart_baudrate_set+0x22>
 8012d72:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012d76:	4298      	cmp	r0, r3
 8012d78:	d016      	beq.n	8012da8 <usart_baudrate_set+0x44>
 8012d7a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012d7e:	4298      	cmp	r0, r3
 8012d80:	d012      	beq.n	8012da8 <usart_baudrate_set+0x44>
 8012d82:	2000      	movs	r0, #0
 8012d84:	e009      	b.n	8012d9a <usart_baudrate_set+0x36>
 8012d86:	4b0a      	ldr	r3, [pc, #40]	; (8012db0 <usart_baudrate_set+0x4c>)
 8012d88:	4298      	cmp	r0, r3
 8012d8a:	d00d      	beq.n	8012da8 <usart_baudrate_set+0x44>
 8012d8c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8012d90:	4298      	cmp	r0, r3
 8012d92:	d1f6      	bne.n	8012d82 <usart_baudrate_set+0x1e>
 8012d94:	2003      	movs	r0, #3
 8012d96:	f7ff fe5f 	bl	8012a58 <rcu_clock_freq_get>
 8012d9a:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8012d9e:	fbb3 f1f5 	udiv	r1, r3, r5
 8012da2:	b289      	uxth	r1, r1
 8012da4:	60a1      	str	r1, [r4, #8]
 8012da6:	bd38      	pop	{r3, r4, r5, pc}
 8012da8:	2002      	movs	r0, #2
 8012daa:	e7f4      	b.n	8012d96 <usart_baudrate_set+0x32>
 8012dac:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012db0:	40005000 	andmi	r5, r0, r0

08012db4 <usart_parity_config>:
 8012db4:	68c2      	ldr	r2, [r0, #12]
 8012db6:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8012dba:	60c2      	str	r2, [r0, #12]
 8012dbc:	68c3      	ldr	r3, [r0, #12]
 8012dbe:	430b      	orrs	r3, r1
 8012dc0:	60c3      	str	r3, [r0, #12]
 8012dc2:	4770      	bx	lr

08012dc4 <usart_word_length_set>:
 8012dc4:	68c2      	ldr	r2, [r0, #12]
 8012dc6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8012dca:	60c2      	str	r2, [r0, #12]
 8012dcc:	68c3      	ldr	r3, [r0, #12]
 8012dce:	430b      	orrs	r3, r1
 8012dd0:	60c3      	str	r3, [r0, #12]
 8012dd2:	4770      	bx	lr

08012dd4 <usart_stop_bit_set>:
 8012dd4:	6902      	ldr	r2, [r0, #16]
 8012dd6:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8012dda:	6102      	str	r2, [r0, #16]
 8012ddc:	6903      	ldr	r3, [r0, #16]
 8012dde:	430b      	orrs	r3, r1
 8012de0:	6103      	str	r3, [r0, #16]
 8012de2:	4770      	bx	lr

08012de4 <usart_transmit_config>:
 8012de4:	68c3      	ldr	r3, [r0, #12]
 8012de6:	f023 0308 	bic.w	r3, r3, #8
 8012dea:	430b      	orrs	r3, r1
 8012dec:	60c3      	str	r3, [r0, #12]
 8012dee:	4770      	bx	lr

08012df0 <usart_receive_config>:
 8012df0:	68c3      	ldr	r3, [r0, #12]
 8012df2:	f023 0304 	bic.w	r3, r3, #4
 8012df6:	430b      	orrs	r3, r1
 8012df8:	60c3      	str	r3, [r0, #12]
 8012dfa:	4770      	bx	lr

08012dfc <usart_hardware_flow_rts_config>:
 8012dfc:	6943      	ldr	r3, [r0, #20]
 8012dfe:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8012e02:	430b      	orrs	r3, r1
 8012e04:	6143      	str	r3, [r0, #20]
 8012e06:	4770      	bx	lr

08012e08 <usart_hardware_flow_cts_config>:
 8012e08:	6943      	ldr	r3, [r0, #20]
 8012e0a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8012e0e:	430b      	orrs	r3, r1
 8012e10:	6143      	str	r3, [r0, #20]
 8012e12:	4770      	bx	lr

08012e14 <usart_flag_get>:
 8012e14:	098b      	lsrs	r3, r1, #6
 8012e16:	5818      	ldr	r0, [r3, r0]
 8012e18:	f001 011f 	and.w	r1, r1, #31
 8012e1c:	40c8      	lsrs	r0, r1
 8012e1e:	f000 0001 	and.w	r0, r0, #1
 8012e22:	4770      	bx	lr

08012e24 <emac_start>:
 8012e24:	b510      	push	{r4, lr}
 8012e26:	4604      	mov	r4, r0
 8012e28:	f240 6002 	movw	r0, #1538	; 0x602
 8012e2c:	f7ff fd3e 	bl	80128ac <rcu_periph_clock_enable>
 8012e30:	f240 6003 	movw	r0, #1539	; 0x603
 8012e34:	f7ff fd3a 	bl	80128ac <rcu_periph_clock_enable>
 8012e38:	f240 6004 	movw	r0, #1540	; 0x604
 8012e3c:	f7ff fd36 	bl	80128ac <rcu_periph_clock_enable>
 8012e40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012e44:	2203      	movs	r2, #3
 8012e46:	2118      	movs	r1, #24
 8012e48:	4846      	ldr	r0, [pc, #280]	; (8012f64 <emac_start+0x140>)
 8012e4a:	f7ff fc97 	bl	801277c <gpio_init>
 8012e4e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012e52:	f7ff fd2b 	bl	80128ac <rcu_periph_clock_enable>
 8012e56:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8012e5a:	f7ff fd63 	bl	8012924 <rcu_pll2_config>
 8012e5e:	201c      	movs	r0, #28
 8012e60:	f7ff fdf8 	bl	8012a54 <rcu_osci_on>
 8012e64:	201c      	movs	r0, #28
 8012e66:	f7ff fd95 	bl	8012994 <rcu_osci_stab_wait>
 8012e6a:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8012e6e:	f7ff fd4f 	bl	8012910 <rcu_ckout0_config>
 8012e72:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8012e76:	f7ff fd05 	bl	8012884 <gpio_ethernet_phy_select>
 8012e7a:	2302      	movs	r3, #2
 8012e7c:	2203      	movs	r2, #3
 8012e7e:	2104      	movs	r1, #4
 8012e80:	4838      	ldr	r0, [pc, #224]	; (8012f64 <emac_start+0x140>)
 8012e82:	f7ff fc7b 	bl	801277c <gpio_init>
 8012e86:	2304      	movs	r3, #4
 8012e88:	2203      	movs	r2, #3
 8012e8a:	2118      	movs	r1, #24
 8012e8c:	4835      	ldr	r0, [pc, #212]	; (8012f64 <emac_start+0x140>)
 8012e8e:	f7ff fc75 	bl	801277c <gpio_init>
 8012e92:	2380      	movs	r3, #128	; 0x80
 8012e94:	2203      	movs	r2, #3
 8012e96:	2104      	movs	r1, #4
 8012e98:	4832      	ldr	r0, [pc, #200]	; (8012f64 <emac_start+0x140>)
 8012e9a:	f7ff fc6f 	bl	801277c <gpio_init>
 8012e9e:	2302      	movs	r3, #2
 8012ea0:	2203      	movs	r2, #3
 8012ea2:	2118      	movs	r1, #24
 8012ea4:	4830      	ldr	r0, [pc, #192]	; (8012f68 <emac_start+0x144>)
 8012ea6:	f7ff fc69 	bl	801277c <gpio_init>
 8012eaa:	2310      	movs	r3, #16
 8012eac:	2203      	movs	r2, #3
 8012eae:	2104      	movs	r1, #4
 8012eb0:	482d      	ldr	r0, [pc, #180]	; (8012f68 <emac_start+0x144>)
 8012eb2:	f7ff fc63 	bl	801277c <gpio_init>
 8012eb6:	2320      	movs	r3, #32
 8012eb8:	2203      	movs	r2, #3
 8012eba:	2104      	movs	r1, #4
 8012ebc:	482a      	ldr	r0, [pc, #168]	; (8012f68 <emac_start+0x144>)
 8012ebe:	f7ff fc5d 	bl	801277c <gpio_init>
 8012ec2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012ec6:	2203      	movs	r2, #3
 8012ec8:	2118      	movs	r1, #24
 8012eca:	4828      	ldr	r0, [pc, #160]	; (8012f6c <emac_start+0x148>)
 8012ecc:	f7ff fc56 	bl	801277c <gpio_init>
 8012ed0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8012ed4:	2203      	movs	r2, #3
 8012ed6:	2118      	movs	r1, #24
 8012ed8:	4824      	ldr	r0, [pc, #144]	; (8012f6c <emac_start+0x148>)
 8012eda:	f7ff fc4f 	bl	801277c <gpio_init>
 8012ede:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8012ee2:	2203      	movs	r2, #3
 8012ee4:	2118      	movs	r1, #24
 8012ee6:	4821      	ldr	r0, [pc, #132]	; (8012f6c <emac_start+0x148>)
 8012ee8:	f7ff fc48 	bl	801277c <gpio_init>
 8012eec:	f240 500e 	movw	r0, #1294	; 0x50e
 8012ef0:	f7ff fcdc 	bl	80128ac <rcu_periph_clock_enable>
 8012ef4:	f240 500f 	movw	r0, #1295	; 0x50f
 8012ef8:	f7ff fcd8 	bl	80128ac <rcu_periph_clock_enable>
 8012efc:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8012f00:	f7ff fcd4 	bl	80128ac <rcu_periph_clock_enable>
 8012f04:	f001 f8de 	bl	80140c4 <enet_deinit>
 8012f08:	f000 fd38 	bl	801397c <enet_software_reset>
 8012f0c:	b900      	cbnz	r0, 8012f10 <emac_start+0xec>
 8012f0e:	e7fe      	b.n	8012f0e <emac_start+0xea>
 8012f10:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8012f14:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012f18:	2001      	movs	r0, #1
 8012f1a:	f000 feb3 	bl	8013c84 <enet_init>
 8012f1e:	4b14      	ldr	r3, [pc, #80]	; (8012f70 <emac_start+0x14c>)
 8012f20:	6018      	str	r0, [r3, #0]
 8012f22:	681b      	ldr	r3, [r3, #0]
 8012f24:	b903      	cbnz	r3, 8012f28 <emac_start+0x104>
 8012f26:	e7fe      	b.n	8012f26 <emac_start+0x102>
 8012f28:	4620      	mov	r0, r4
 8012f2a:	f000 fb9f 	bl	801366c <mac_address_get>
 8012f2e:	4621      	mov	r1, r4
 8012f30:	2000      	movs	r0, #0
 8012f32:	f000 fe07 	bl	8013b44 <enet_mac_address_set>
 8012f36:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8012f3a:	f000 fd33 	bl	80139a4 <enet_descriptors_chain_init>
 8012f3e:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8012f42:	f000 fd2f 	bl	80139a4 <enet_descriptors_chain_init>
 8012f46:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012f4a:	480a      	ldr	r0, [pc, #40]	; (8012f74 <emac_start+0x150>)
 8012f4c:	f000 fdf4 	bl	8013b38 <enet_transmit_checksum_config>
 8012f50:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012f54:	4808      	ldr	r0, [pc, #32]	; (8012f78 <emac_start+0x154>)
 8012f56:	f000 fdef 	bl	8013b38 <enet_transmit_checksum_config>
 8012f5a:	f001 f82b 	bl	8013fb4 <enet_enable>
 8012f5e:	2001      	movs	r0, #1
 8012f60:	bd10      	pop	{r4, pc}
 8012f62:	bf00      	nop
 8012f64:	40010800 	andmi	r0, r1, r0, lsl #16
 8012f68:	40011000 	andmi	r1, r1, r0
 8012f6c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012f70:	2000a9c8 	andcs	sl, r0, r8, asr #19
 8012f74:	20015a1c 	andcs	r5, r1, ip, lsl sl
 8012f78:	20015a2c 	andcs	r5, r1, ip, lsr #20

08012f7c <emac_eth_recv>:
 8012f7c:	b538      	push	{r3, r4, r5, lr}
 8012f7e:	4605      	mov	r5, r0
 8012f80:	f001 f870 	bl	8014064 <enet_rxframe_size_get>
 8012f84:	4604      	mov	r4, r0
 8012f86:	b138      	cbz	r0, 8012f98 <emac_eth_recv+0x1c>
 8012f88:	4b05      	ldr	r3, [pc, #20]	; (8012fa0 <emac_eth_recv+0x24>)
 8012f8a:	2105      	movs	r1, #5
 8012f8c:	6818      	ldr	r0, [r3, #0]
 8012f8e:	f001 f818 	bl	8013fc2 <enet_desc_information_get>
 8012f92:	6028      	str	r0, [r5, #0]
 8012f94:	4620      	mov	r0, r4
 8012f96:	bd38      	pop	{r3, r4, r5, pc}
 8012f98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f9c:	e7fb      	b.n	8012f96 <emac_eth_recv+0x1a>
 8012f9e:	bf00      	nop
 8012fa0:	200129d8 	ldrdcs	r2, [r1], -r8

08012fa4 <emac_free_pkt>:
 8012fa4:	2100      	movs	r1, #0
 8012fa6:	4608      	mov	r0, r1
 8012fa8:	f000 bd44 	b.w	8013a34 <enet_frame_receive>

08012fac <emac_eth_send>:
 8012fac:	f000 bd82 	b.w	8013ab4 <enet_frame_transmit>

08012fb0 <gd32_adc_init()>:
 8012fb0:	b510      	push	{r4, lr}
 8012fb2:	f240 6009 	movw	r0, #1545	; 0x609
 8012fb6:	4c21      	ldr	r4, [pc, #132]	; (801303c <gd32_adc_init()+0x8c>)
 8012fb8:	f7ff fc78 	bl	80128ac <rcu_periph_clock_enable>
 8012fbc:	2005      	movs	r0, #5
 8012fbe:	f7ff fcbd 	bl	801293c <rcu_adc_clock_config>
 8012fc2:	4620      	mov	r0, r4
 8012fc4:	2201      	movs	r2, #1
 8012fc6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8012fca:	f000 fb71 	bl	80136b0 <adc_special_function_config>
 8012fce:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8012fd2:	4620      	mov	r0, r4
 8012fd4:	2102      	movs	r1, #2
 8012fd6:	f000 fc0b 	bl	80137f0 <adc_external_trigger_source_config>
 8012fda:	2100      	movs	r1, #0
 8012fdc:	4620      	mov	r0, r4
 8012fde:	f000 fb8f 	bl	8013700 <adc_data_alignment_config>
 8012fe2:	2000      	movs	r0, #0
 8012fe4:	f000 fb54 	bl	8013690 <adc_mode_config>
 8012fe8:	2202      	movs	r2, #2
 8012fea:	4620      	mov	r0, r4
 8012fec:	4611      	mov	r1, r2
 8012fee:	f000 fbb3 	bl	8013758 <adc_channel_length_config>
 8012ff2:	4620      	mov	r0, r4
 8012ff4:	2307      	movs	r3, #7
 8012ff6:	2210      	movs	r2, #16
 8012ff8:	2100      	movs	r1, #0
 8012ffa:	f000 fbca 	bl	8013792 <adc_inserted_channel_config>
 8012ffe:	2307      	movs	r3, #7
 8013000:	4620      	mov	r0, r4
 8013002:	2211      	movs	r2, #17
 8013004:	2101      	movs	r1, #1
 8013006:	f000 fbc4 	bl	8013792 <adc_inserted_channel_config>
 801300a:	2201      	movs	r2, #1
 801300c:	2102      	movs	r1, #2
 801300e:	4620      	mov	r0, r4
 8013010:	f000 fbff 	bl	8013812 <adc_external_trigger_config>
 8013014:	f000 fb96 	bl	8013744 <adc_tempsensor_vrefint_enable>
 8013018:	4620      	mov	r0, r4
 801301a:	f000 fb7a 	bl	8013712 <adc_enable>
 801301e:	2100      	movs	r1, #0
 8013020:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013024:	f000 fb0a 	bl	801363c <udelay(unsigned int, unsigned int)>
 8013028:	4620      	mov	r0, r4
 801302a:	f000 fb7a 	bl	8013722 <adc_calibration_enable>
 801302e:	4620      	mov	r0, r4
 8013030:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013034:	2102      	movs	r1, #2
 8013036:	f000 bc07 	b.w	8013848 <adc_software_trigger_enable>
 801303a:	bf00      	nop
 801303c:	40012400 	andmi	r2, r1, r0, lsl #8

08013040 <_stop() [clone .isra.0]>:
 8013040:	b508      	push	{r3, lr}
 8013042:	4806      	ldr	r0, [pc, #24]	; (801305c <_stop() [clone .isra.0]+0x1c>)
 8013044:	f001 f8ce 	bl	80141e4 <i2c_stop_on_bus>
 8013048:	f640 73ff 	movw	r3, #4095	; 0xfff
 801304c:	4a04      	ldr	r2, [pc, #16]	; (8013060 <_stop() [clone .isra.0]+0x20>)
 801304e:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8013052:	0589      	lsls	r1, r1, #22
 8013054:	d501      	bpl.n	801305a <_stop() [clone .isra.0]+0x1a>
 8013056:	3b01      	subs	r3, #1
 8013058:	d1f9      	bne.n	801304e <_stop() [clone .isra.0]+0xe>
 801305a:	bd08      	pop	{r3, pc}
 801305c:	40005400 	andmi	r5, r0, r0, lsl #8
 8013060:	40005000 	andmi	r5, r0, r0

08013064 <gd32_i2c_begin()>:
 8013064:	b510      	push	{r4, lr}
 8013066:	f240 7015 	movw	r0, #1813	; 0x715
 801306a:	f7ff fc1f 	bl	80128ac <rcu_periph_clock_enable>
 801306e:	4c15      	ldr	r4, [pc, #84]	; (80130c4 <gd32_i2c_begin()+0x60>)
 8013070:	f240 6003 	movw	r0, #1539	; 0x603
 8013074:	f7ff fc1a 	bl	80128ac <rcu_periph_clock_enable>
 8013078:	f240 6003 	movw	r0, #1539	; 0x603
 801307c:	f7ff fc16 	bl	80128ac <rcu_periph_clock_enable>
 8013080:	4620      	mov	r0, r4
 8013082:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013086:	2203      	movs	r2, #3
 8013088:	211c      	movs	r1, #28
 801308a:	f7ff fb77 	bl	801277c <gpio_init>
 801308e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013092:	2203      	movs	r2, #3
 8013094:	4620      	mov	r0, r4
 8013096:	211c      	movs	r1, #28
 8013098:	f7ff fb70 	bl	801277c <gpio_init>
 801309c:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 80130a0:	2101      	movs	r1, #1
 80130a2:	2002      	movs	r0, #2
 80130a4:	f7ff fbbe 	bl	8012824 <gpio_pin_remap_config>
 80130a8:	4620      	mov	r0, r4
 80130aa:	4907      	ldr	r1, [pc, #28]	; (80130c8 <gd32_i2c_begin()+0x64>)
 80130ac:	2200      	movs	r2, #0
 80130ae:	f001 f817 	bl	80140e0 <i2c_clock_config>
 80130b2:	4620      	mov	r0, r4
 80130b4:	f001 f88c 	bl	80141d0 <i2c_enable>
 80130b8:	4620      	mov	r0, r4
 80130ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80130be:	2101      	movs	r1, #1
 80130c0:	f001 b86c 	b.w	801419c <i2c_ack_config>
 80130c4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80130c8:	00061a80 	andeq	r1, r6, r0, lsl #21

080130cc <gd32_i2c_set_baudrate(unsigned int)>:
 80130cc:	4601      	mov	r1, r0
 80130ce:	2200      	movs	r2, #0
 80130d0:	4801      	ldr	r0, [pc, #4]	; (80130d8 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 80130d2:	f001 b805 	b.w	80140e0 <i2c_clock_config>
 80130d6:	bf00      	nop
 80130d8:	40005400 	andmi	r5, r0, r0, lsl #8

080130dc <gd32_i2c_set_address(unsigned char)>:
 80130dc:	4b01      	ldr	r3, [pc, #4]	; (80130e4 <gd32_i2c_set_address(unsigned char)+0x8>)
 80130de:	0040      	lsls	r0, r0, #1
 80130e0:	7018      	strb	r0, [r3, #0]
 80130e2:	4770      	bx	lr
 80130e4:	2000a9cc 	andcs	sl, r0, ip, asr #19

080130e8 <gd32_i2c_write(char const*, unsigned int)>:
 80130e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80130ea:	4604      	mov	r4, r0
 80130ec:	460f      	mov	r7, r1
 80130ee:	f640 75ff 	movw	r5, #4095	; 0xfff
 80130f2:	4e2e      	ldr	r6, [pc, #184]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80130f4:	f240 6101 	movw	r1, #1537	; 0x601
 80130f8:	4630      	mov	r0, r6
 80130fa:	f001 f87d 	bl	80141f8 <i2c_flag_get>
 80130fe:	b138      	cbz	r0, 8013110 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8013100:	3d01      	subs	r5, #1
 8013102:	d1f7      	bne.n	80130f4 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8013104:	f7ff ff9c 	bl	8013040 <_stop() [clone .isra.0]>
 8013108:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801310c:	4240      	negs	r0, r0
 801310e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013110:	4826      	ldr	r0, [pc, #152]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013112:	f001 f862 	bl	80141da <i2c_start_on_bus>
 8013116:	f640 75ff 	movw	r5, #4095	; 0xfff
 801311a:	4e24      	ldr	r6, [pc, #144]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801311c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013120:	4630      	mov	r0, r6
 8013122:	f001 f869 	bl	80141f8 <i2c_flag_get>
 8013126:	bb68      	cbnz	r0, 8013184 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8013128:	3d01      	subs	r5, #1
 801312a:	d1f7      	bne.n	801311c <gd32_i2c_write(char const*, unsigned int)+0x34>
 801312c:	e7ea      	b.n	8013104 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 801312e:	f240 5101 	movw	r1, #1281	; 0x501
 8013132:	481e      	ldr	r0, [pc, #120]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013134:	f001 f868 	bl	8014208 <i2c_flag_clear>
 8013138:	f640 75ff 	movw	r5, #4095	; 0xfff
 801313c:	4e1b      	ldr	r6, [pc, #108]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801313e:	f240 5107 	movw	r1, #1287	; 0x507
 8013142:	4630      	mov	r0, r6
 8013144:	f001 f858 	bl	80141f8 <i2c_flag_get>
 8013148:	2801      	cmp	r0, #1
 801314a:	d114      	bne.n	8013176 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 801314c:	4e17      	ldr	r6, [pc, #92]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801314e:	4427      	add	r7, r4
 8013150:	42a7      	cmp	r7, r4
 8013152:	d013      	beq.n	801317c <gd32_i2c_write(char const*, unsigned int)+0x94>
 8013154:	4630      	mov	r0, r6
 8013156:	f814 1b01 	ldrb.w	r1, [r4], #1
 801315a:	f001 f848 	bl	80141ee <i2c_data_transmit>
 801315e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013162:	f240 5102 	movw	r1, #1282	; 0x502
 8013166:	4630      	mov	r0, r6
 8013168:	f001 f846 	bl	80141f8 <i2c_flag_get>
 801316c:	2800      	cmp	r0, #0
 801316e:	d1ef      	bne.n	8013150 <gd32_i2c_write(char const*, unsigned int)+0x68>
 8013170:	3d01      	subs	r5, #1
 8013172:	d1f6      	bne.n	8013162 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8013174:	e7c6      	b.n	8013104 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8013176:	3d01      	subs	r5, #1
 8013178:	d1e1      	bne.n	801313e <gd32_i2c_write(char const*, unsigned int)+0x56>
 801317a:	e7c3      	b.n	8013104 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 801317c:	f7ff ff60 	bl	8013040 <_stop() [clone .isra.0]>
 8013180:	2000      	movs	r0, #0
 8013182:	e7c3      	b.n	801310c <gd32_i2c_write(char const*, unsigned int)+0x24>
 8013184:	4b0a      	ldr	r3, [pc, #40]	; (80131b0 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8013186:	f06f 0201 	mvn.w	r2, #1
 801318a:	7819      	ldrb	r1, [r3, #0]
 801318c:	4807      	ldr	r0, [pc, #28]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801318e:	f001 f817 	bl	80141c0 <i2c_master_addressing>
 8013192:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013196:	4e05      	ldr	r6, [pc, #20]	; (80131ac <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013198:	f240 5101 	movw	r1, #1281	; 0x501
 801319c:	4630      	mov	r0, r6
 801319e:	f001 f82b 	bl	80141f8 <i2c_flag_get>
 80131a2:	2800      	cmp	r0, #0
 80131a4:	d1c3      	bne.n	801312e <gd32_i2c_write(char const*, unsigned int)+0x46>
 80131a6:	3d01      	subs	r5, #1
 80131a8:	d1f6      	bne.n	8013198 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 80131aa:	e7ab      	b.n	8013104 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80131ac:	40005400 	andmi	r5, r0, r0, lsl #8
 80131b0:	2000a9cc 	andcs	sl, r0, ip, asr #19

080131b4 <gd32_i2c_read(char*, unsigned int)>:
 80131b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80131b8:	4680      	mov	r8, r0
 80131ba:	460c      	mov	r4, r1
 80131bc:	f640 76ff 	movw	r6, #4095	; 0xfff
 80131c0:	4f49      	ldr	r7, [pc, #292]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80131c2:	f240 6101 	movw	r1, #1537	; 0x601
 80131c6:	4638      	mov	r0, r7
 80131c8:	f001 f816 	bl	80141f8 <i2c_flag_get>
 80131cc:	4605      	mov	r5, r0
 80131ce:	b128      	cbz	r0, 80131dc <gd32_i2c_read(char*, unsigned int)+0x28>
 80131d0:	3e01      	subs	r6, #1
 80131d2:	d1f6      	bne.n	80131c2 <gd32_i2c_read(char*, unsigned int)+0xe>
 80131d4:	f7ff ff34 	bl	8013040 <_stop() [clone .isra.0]>
 80131d8:	2504      	movs	r5, #4
 80131da:	e082      	b.n	80132e2 <gd32_i2c_read(char*, unsigned int)+0x12e>
 80131dc:	2c02      	cmp	r4, #2
 80131de:	d103      	bne.n	80131e8 <gd32_i2c_read(char*, unsigned int)+0x34>
 80131e0:	4601      	mov	r1, r0
 80131e2:	4841      	ldr	r0, [pc, #260]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80131e4:	f000 ffe3 	bl	80141ae <i2c_ackpos_config>
 80131e8:	483f      	ldr	r0, [pc, #252]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80131ea:	f000 fff6 	bl	80141da <i2c_start_on_bus>
 80131ee:	f640 76ff 	movw	r6, #4095	; 0xfff
 80131f2:	4f3d      	ldr	r7, [pc, #244]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80131f4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80131f8:	4638      	mov	r0, r7
 80131fa:	f000 fffd 	bl	80141f8 <i2c_flag_get>
 80131fe:	b910      	cbnz	r0, 8013206 <gd32_i2c_read(char*, unsigned int)+0x52>
 8013200:	3e01      	subs	r6, #1
 8013202:	d1f7      	bne.n	80131f4 <gd32_i2c_read(char*, unsigned int)+0x40>
 8013204:	e7e6      	b.n	80131d4 <gd32_i2c_read(char*, unsigned int)+0x20>
 8013206:	4b39      	ldr	r3, [pc, #228]	; (80132ec <gd32_i2c_read(char*, unsigned int)+0x138>)
 8013208:	2201      	movs	r2, #1
 801320a:	7819      	ldrb	r1, [r3, #0]
 801320c:	4836      	ldr	r0, [pc, #216]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801320e:	f000 ffd7 	bl	80141c0 <i2c_master_addressing>
 8013212:	2c02      	cmp	r4, #2
 8013214:	d803      	bhi.n	801321e <gd32_i2c_read(char*, unsigned int)+0x6a>
 8013216:	2100      	movs	r1, #0
 8013218:	4833      	ldr	r0, [pc, #204]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801321a:	f000 ffbf 	bl	801419c <i2c_ack_config>
 801321e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013222:	4f31      	ldr	r7, [pc, #196]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8013224:	f240 5101 	movw	r1, #1281	; 0x501
 8013228:	4638      	mov	r0, r7
 801322a:	f000 ffe5 	bl	80141f8 <i2c_flag_get>
 801322e:	b910      	cbnz	r0, 8013236 <gd32_i2c_read(char*, unsigned int)+0x82>
 8013230:	3e01      	subs	r6, #1
 8013232:	d1f7      	bne.n	8013224 <gd32_i2c_read(char*, unsigned int)+0x70>
 8013234:	e7ce      	b.n	80131d4 <gd32_i2c_read(char*, unsigned int)+0x20>
 8013236:	f240 5101 	movw	r1, #1281	; 0x501
 801323a:	482b      	ldr	r0, [pc, #172]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801323c:	f000 ffe4 	bl	8014208 <i2c_flag_clear>
 8013240:	2c01      	cmp	r4, #1
 8013242:	d102      	bne.n	801324a <gd32_i2c_read(char*, unsigned int)+0x96>
 8013244:	4828      	ldr	r0, [pc, #160]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8013246:	f000 ffcd 	bl	80141e4 <i2c_stop_on_bus>
 801324a:	f640 77ff 	movw	r7, #4095	; 0xfff
 801324e:	4e26      	ldr	r6, [pc, #152]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8013250:	b3ac      	cbz	r4, 80132be <gd32_i2c_read(char*, unsigned int)+0x10a>
 8013252:	2c03      	cmp	r4, #3
 8013254:	d121      	bne.n	801329a <gd32_i2c_read(char*, unsigned int)+0xe6>
 8013256:	f640 79ff 	movw	r9, #4095	; 0xfff
 801325a:	f240 5102 	movw	r1, #1282	; 0x502
 801325e:	4630      	mov	r0, r6
 8013260:	f000 ffca 	bl	80141f8 <i2c_flag_get>
 8013264:	b918      	cbnz	r0, 801326e <gd32_i2c_read(char*, unsigned int)+0xba>
 8013266:	f1b9 0901 	subs.w	r9, r9, #1
 801326a:	d1f6      	bne.n	801325a <gd32_i2c_read(char*, unsigned int)+0xa6>
 801326c:	e7b2      	b.n	80131d4 <gd32_i2c_read(char*, unsigned int)+0x20>
 801326e:	2100      	movs	r1, #0
 8013270:	4630      	mov	r0, r6
 8013272:	f000 ff93 	bl	801419c <i2c_ack_config>
 8013276:	f240 5106 	movw	r1, #1286	; 0x506
 801327a:	4630      	mov	r0, r6
 801327c:	f000 ffbc 	bl	80141f8 <i2c_flag_get>
 8013280:	b138      	cbz	r0, 8013292 <gd32_i2c_read(char*, unsigned int)+0xde>
 8013282:	4630      	mov	r0, r6
 8013284:	f000 ffb5 	bl	80141f2 <i2c_data_receive>
 8013288:	f640 77ff 	movw	r7, #4095	; 0xfff
 801328c:	f808 0b01 	strb.w	r0, [r8], #1
 8013290:	3c01      	subs	r4, #1
 8013292:	3f01      	subs	r7, #1
 8013294:	2f00      	cmp	r7, #0
 8013296:	dcdb      	bgt.n	8013250 <gd32_i2c_read(char*, unsigned int)+0x9c>
 8013298:	e79c      	b.n	80131d4 <gd32_i2c_read(char*, unsigned int)+0x20>
 801329a:	2c02      	cmp	r4, #2
 801329c:	d1eb      	bne.n	8013276 <gd32_i2c_read(char*, unsigned int)+0xc2>
 801329e:	f640 79ff 	movw	r9, #4095	; 0xfff
 80132a2:	f240 5102 	movw	r1, #1282	; 0x502
 80132a6:	4630      	mov	r0, r6
 80132a8:	f000 ffa6 	bl	80141f8 <i2c_flag_get>
 80132ac:	b918      	cbnz	r0, 80132b6 <gd32_i2c_read(char*, unsigned int)+0x102>
 80132ae:	f1b9 0901 	subs.w	r9, r9, #1
 80132b2:	d1f6      	bne.n	80132a2 <gd32_i2c_read(char*, unsigned int)+0xee>
 80132b4:	e78e      	b.n	80131d4 <gd32_i2c_read(char*, unsigned int)+0x20>
 80132b6:	4630      	mov	r0, r6
 80132b8:	f000 ff94 	bl	80141e4 <i2c_stop_on_bus>
 80132bc:	e7db      	b.n	8013276 <gd32_i2c_read(char*, unsigned int)+0xc2>
 80132be:	f640 73ff 	movw	r3, #4095	; 0xfff
 80132c2:	4a0b      	ldr	r2, [pc, #44]	; (80132f0 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80132c4:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 80132c8:	0589      	lsls	r1, r1, #22
 80132ca:	d502      	bpl.n	80132d2 <gd32_i2c_read(char*, unsigned int)+0x11e>
 80132cc:	3b01      	subs	r3, #1
 80132ce:	d1f9      	bne.n	80132c4 <gd32_i2c_read(char*, unsigned int)+0x110>
 80132d0:	e782      	b.n	80131d8 <gd32_i2c_read(char*, unsigned int)+0x24>
 80132d2:	2101      	movs	r1, #1
 80132d4:	4804      	ldr	r0, [pc, #16]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80132d6:	f000 ff61 	bl	801419c <i2c_ack_config>
 80132da:	2101      	movs	r1, #1
 80132dc:	4802      	ldr	r0, [pc, #8]	; (80132e8 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80132de:	f000 ff66 	bl	80141ae <i2c_ackpos_config>
 80132e2:	4628      	mov	r0, r5
 80132e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80132e8:	40005400 	andmi	r5, r0, r0, lsl #8
 80132ec:	2000a9cc 	andcs	sl, r0, ip, asr #19
 80132f0:	40005000 	andmi	r5, r0, r0

080132f4 <gd32_spi_dma_begin()>:
 80132f4:	b530      	push	{r4, r5, lr}
 80132f6:	f240 6002 	movw	r0, #1538	; 0x602
 80132fa:	b089      	sub	sp, #36	; 0x24
 80132fc:	f7ff fad6 	bl	80128ac <rcu_periph_clock_enable>
 8013300:	f240 6003 	movw	r0, #1539	; 0x603
 8013304:	f7ff fad2 	bl	80128ac <rcu_periph_clock_enable>
 8013308:	f240 700f 	movw	r0, #1807	; 0x70f
 801330c:	f7ff face 	bl	80128ac <rcu_periph_clock_enable>
 8013310:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013314:	f7ff faca 	bl	80128ac <rcu_periph_clock_enable>
 8013318:	2338      	movs	r3, #56	; 0x38
 801331a:	2203      	movs	r2, #3
 801331c:	2118      	movs	r1, #24
 801331e:	4829      	ldr	r0, [pc, #164]	; (80133c4 <gd32_spi_dma_begin()+0xd0>)
 8013320:	f7ff fa2c 	bl	801277c <gpio_init>
 8013324:	4c28      	ldr	r4, [pc, #160]	; (80133c8 <gd32_spi_dma_begin()+0xd4>)
 8013326:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801332a:	2203      	movs	r2, #3
 801332c:	2118      	movs	r1, #24
 801332e:	4827      	ldr	r0, [pc, #156]	; (80133cc <gd32_spi_dma_begin()+0xd8>)
 8013330:	f7ff fa24 	bl	801277c <gpio_init>
 8013334:	2101      	movs	r1, #1
 8013336:	4826      	ldr	r0, [pc, #152]	; (80133d0 <gd32_spi_dma_begin()+0xdc>)
 8013338:	f7ff fa74 	bl	8012824 <gpio_pin_remap_config>
 801333c:	4620      	mov	r0, r4
 801333e:	f000 ffe2 	bl	8014306 <i2s_disable>
 8013342:	2300      	movs	r3, #0
 8013344:	4620      	mov	r0, r4
 8013346:	461a      	mov	r2, r3
 8013348:	4922      	ldr	r1, [pc, #136]	; (80133d4 <gd32_spi_dma_begin()+0xe0>)
 801334a:	f000 ff7f 	bl	801424c <i2s_psc_config>
 801334e:	2300      	movs	r3, #0
 8013350:	2210      	movs	r2, #16
 8013352:	f44f 7100 	mov.w	r1, #512	; 0x200
 8013356:	4620      	mov	r0, r4
 8013358:	f000 ff69 	bl	801422e <i2s_init>
 801335c:	4620      	mov	r0, r4
 801335e:	f000 ffcd 	bl	80142fc <i2s_enable>
 8013362:	f504 34e4 	add.w	r4, r4, #116736	; 0x1c800
 8013366:	f240 5001 	movw	r0, #1281	; 0x501
 801336a:	f7ff fa9f 	bl	80128ac <rcu_periph_clock_enable>
 801336e:	2101      	movs	r1, #1
 8013370:	4620      	mov	r0, r4
 8013372:	f000 fa77 	bl	8013864 <dma_deinit>
 8013376:	a801      	add	r0, sp, #4
 8013378:	f000 fa90 	bl	801389c <dma_struct_para_init>
 801337c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013380:	2501      	movs	r5, #1
 8013382:	9304      	str	r3, [sp, #16]
 8013384:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8013388:	f44f 7380 	mov.w	r3, #256	; 0x100
 801338c:	4912      	ldr	r1, [pc, #72]	; (80133d8 <gd32_spi_dma_begin()+0xe4>)
 801338e:	4620      	mov	r0, r4
 8013390:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8013394:	9206      	str	r2, [sp, #24]
 8013396:	4629      	mov	r1, r5
 8013398:	aa01      	add	r2, sp, #4
 801339a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801339e:	f88d 501e 	strb.w	r5, [sp, #30]
 80133a2:	f000 fa85 	bl	80138b0 <dma_init>
 80133a6:	4629      	mov	r1, r5
 80133a8:	4620      	mov	r0, r4
 80133aa:	f000 fabb 	bl	8013924 <dma_circulation_disable>
 80133ae:	4629      	mov	r1, r5
 80133b0:	4620      	mov	r0, r4
 80133b2:	f000 fac7 	bl	8013944 <dma_memory_to_memory_disable>
 80133b6:	2200      	movs	r2, #0
 80133b8:	4b08      	ldr	r3, [pc, #32]	; (80133dc <gd32_spi_dma_begin()+0xe8>)
 80133ba:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 80133be:	b009      	add	sp, #36	; 0x24
 80133c0:	bd30      	pop	{r4, r5, pc}
 80133c2:	bf00      	nop
 80133c4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80133c8:	40003c00 	andmi	r3, r0, r0, lsl #24
 80133cc:	40010800 	andmi	r0, r1, r0, lsl #16
 80133d0:	00300400 	eorseq	r0, r0, r0, lsl #8
 80133d4:	00030d40 	andeq	r0, r3, r0, asr #26
 80133d8:	40003c0c 	andmi	r3, r0, ip, lsl #24
 80133dc:	40020000 	andmi	r0, r2, r0

080133e0 <gd32_spi_dma_set_speed_hz(unsigned int)>:
 80133e0:	b538      	push	{r3, r4, r5, lr}
 80133e2:	4c08      	ldr	r4, [pc, #32]	; (8013404 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 80133e4:	4605      	mov	r5, r0
 80133e6:	4620      	mov	r0, r4
 80133e8:	f000 ff8d 	bl	8014306 <i2s_disable>
 80133ec:	2300      	movs	r3, #0
 80133ee:	4620      	mov	r0, r4
 80133f0:	461a      	mov	r2, r3
 80133f2:	0969      	lsrs	r1, r5, #5
 80133f4:	f000 ff2a 	bl	801424c <i2s_psc_config>
 80133f8:	4620      	mov	r0, r4
 80133fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80133fe:	f000 bf7d 	b.w	80142fc <i2s_enable>
 8013402:	bf00      	nop
 8013404:	40003c00 	andmi	r3, r0, r0, lsl #24

08013408 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 8013408:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801340c:	6003      	str	r3, [r0, #0]
 801340e:	4801      	ldr	r0, [pc, #4]	; (8013414 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 8013410:	4770      	bx	lr
 8013412:	bf00      	nop
 8013414:	2000a9d0 	ldrdcs	sl, [r0], -r0

08013418 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 8013418:	4a0a      	ldr	r2, [pc, #40]	; (8013444 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 801341a:	3101      	adds	r1, #1
 801341c:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 8013420:	f3c1 014f 	ubfx	r1, r1, #1, #16
 8013424:	f023 0301 	bic.w	r3, r3, #1
 8013428:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 801342c:	f043 0301 	orr.w	r3, r3, #1
 8013430:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 8013434:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 8013438:	4803      	ldr	r0, [pc, #12]	; (8013448 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 801343a:	2100      	movs	r1, #0
 801343c:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8013440:	f000 bf66 	b.w	8014310 <spi_dma_enable>
 8013444:	40020000 	andmi	r0, r2, r0
 8013448:	40003c00 	andmi	r3, r0, r0, lsl #24

0801344c <gd32_spi_dma_tx_is_active()>:
 801344c:	4b03      	ldr	r3, [pc, #12]	; (801345c <gd32_spi_dma_tx_is_active()+0x10>)
 801344e:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 8013452:	3800      	subs	r0, #0
 8013454:	bf18      	it	ne
 8013456:	2001      	movne	r0, #1
 8013458:	4770      	bx	lr
 801345a:	bf00      	nop
 801345c:	40020000 	andmi	r0, r2, r0

08013460 <gd32_uart_begin>:
 8013460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013462:	461d      	mov	r5, r3
 8013464:	4b63      	ldr	r3, [pc, #396]	; (80135f4 <gd32_uart_begin+0x194>)
 8013466:	4604      	mov	r4, r0
 8013468:	4298      	cmp	r0, r3
 801346a:	460f      	mov	r7, r1
 801346c:	4616      	mov	r6, r2
 801346e:	d03b      	beq.n	80134e8 <gd32_uart_begin+0x88>
 8013470:	d80a      	bhi.n	8013488 <gd32_uart_begin+0x28>
 8013472:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013476:	4298      	cmp	r0, r3
 8013478:	d02f      	beq.n	80134da <gd32_uart_begin+0x7a>
 801347a:	f240 7012 	movw	r0, #1810	; 0x712
 801347e:	f7ff fa15 	bl	80128ac <rcu_periph_clock_enable>
 8013482:	f240 6004 	movw	r0, #1540	; 0x604
 8013486:	e008      	b.n	801349a <gd32_uart_begin+0x3a>
 8013488:	4b5b      	ldr	r3, [pc, #364]	; (80135f8 <gd32_uart_begin+0x198>)
 801348a:	4298      	cmp	r0, r3
 801348c:	d02f      	beq.n	80134ee <gd32_uart_begin+0x8e>
 801348e:	f240 600e 	movw	r0, #1550	; 0x60e
 8013492:	f7ff fa0b 	bl	80128ac <rcu_periph_clock_enable>
 8013496:	f240 6003 	movw	r0, #1539	; 0x603
 801349a:	f7ff fa07 	bl	80128ac <rcu_periph_clock_enable>
 801349e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80134a2:	f7ff fa03 	bl	80128ac <rcu_periph_clock_enable>
 80134a6:	4b53      	ldr	r3, [pc, #332]	; (80135f4 <gd32_uart_begin+0x194>)
 80134a8:	429c      	cmp	r4, r3
 80134aa:	f000 8085 	beq.w	80135b8 <gd32_uart_begin+0x158>
 80134ae:	d829      	bhi.n	8013504 <gd32_uart_begin+0xa4>
 80134b0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80134b4:	429c      	cmp	r4, r3
 80134b6:	d072      	beq.n	801359e <gd32_uart_begin+0x13e>
 80134b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80134bc:	2203      	movs	r2, #3
 80134be:	2118      	movs	r1, #24
 80134c0:	484e      	ldr	r0, [pc, #312]	; (80135fc <gd32_uart_begin+0x19c>)
 80134c2:	f7ff f95b 	bl	801277c <gpio_init>
 80134c6:	2104      	movs	r1, #4
 80134c8:	484c      	ldr	r0, [pc, #304]	; (80135fc <gd32_uart_begin+0x19c>)
 80134ca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80134ce:	2203      	movs	r2, #3
 80134d0:	f7ff f954 	bl	801277c <gpio_init>
 80134d4:	2101      	movs	r1, #1
 80134d6:	484a      	ldr	r0, [pc, #296]	; (8013600 <gd32_uart_begin+0x1a0>)
 80134d8:	e025      	b.n	8013526 <gd32_uart_begin+0xc6>
 80134da:	f240 7011 	movw	r0, #1809	; 0x711
 80134de:	f7ff f9e5 	bl	80128ac <rcu_periph_clock_enable>
 80134e2:	f240 6002 	movw	r0, #1538	; 0x602
 80134e6:	e7d8      	b.n	801349a <gd32_uart_begin+0x3a>
 80134e8:	f240 7013 	movw	r0, #1811	; 0x713
 80134ec:	e7c7      	b.n	801347e <gd32_uart_begin+0x1e>
 80134ee:	f240 7014 	movw	r0, #1812	; 0x714
 80134f2:	f7ff f9db 	bl	80128ac <rcu_periph_clock_enable>
 80134f6:	f240 6004 	movw	r0, #1540	; 0x604
 80134fa:	f7ff f9d7 	bl	80128ac <rcu_periph_clock_enable>
 80134fe:	f240 6005 	movw	r0, #1541	; 0x605
 8013502:	e7ca      	b.n	801349a <gd32_uart_begin+0x3a>
 8013504:	4b3c      	ldr	r3, [pc, #240]	; (80135f8 <gd32_uart_begin+0x198>)
 8013506:	429c      	cmp	r4, r3
 8013508:	d063      	beq.n	80135d2 <gd32_uart_begin+0x172>
 801350a:	2340      	movs	r3, #64	; 0x40
 801350c:	2203      	movs	r2, #3
 801350e:	2118      	movs	r1, #24
 8013510:	483c      	ldr	r0, [pc, #240]	; (8013604 <gd32_uart_begin+0x1a4>)
 8013512:	f7ff f933 	bl	801277c <gpio_init>
 8013516:	2104      	movs	r1, #4
 8013518:	483a      	ldr	r0, [pc, #232]	; (8013604 <gd32_uart_begin+0x1a4>)
 801351a:	2380      	movs	r3, #128	; 0x80
 801351c:	2203      	movs	r2, #3
 801351e:	f7ff f92d 	bl	801277c <gpio_init>
 8013522:	2101      	movs	r1, #1
 8013524:	2004      	movs	r0, #4
 8013526:	f7ff f97d 	bl	8012824 <gpio_pin_remap_config>
 801352a:	4620      	mov	r0, r4
 801352c:	f7ff fbda 	bl	8012ce4 <usart_deinit>
 8013530:	68e3      	ldr	r3, [r4, #12]
 8013532:	4639      	mov	r1, r7
 8013534:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013538:	60e3      	str	r3, [r4, #12]
 801353a:	4620      	mov	r0, r4
 801353c:	f7ff fc12 	bl	8012d64 <usart_baudrate_set>
 8013540:	2e09      	cmp	r6, #9
 8013542:	bf0c      	ite	eq
 8013544:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8013548:	2100      	movne	r1, #0
 801354a:	4620      	mov	r0, r4
 801354c:	f7ff fc3a 	bl	8012dc4 <usart_word_length_set>
 8013550:	9b06      	ldr	r3, [sp, #24]
 8013552:	4620      	mov	r0, r4
 8013554:	2b02      	cmp	r3, #2
 8013556:	bf0c      	ite	eq
 8013558:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 801355c:	2100      	movne	r1, #0
 801355e:	f7ff fc39 	bl	8012dd4 <usart_stop_bit_set>
 8013562:	2d01      	cmp	r5, #1
 8013564:	d041      	beq.n	80135ea <gd32_uart_begin+0x18a>
 8013566:	2d02      	cmp	r5, #2
 8013568:	d142      	bne.n	80135f0 <gd32_uart_begin+0x190>
 801356a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801356e:	4620      	mov	r0, r4
 8013570:	f7ff fc20 	bl	8012db4 <usart_parity_config>
 8013574:	2100      	movs	r1, #0
 8013576:	4620      	mov	r0, r4
 8013578:	f7ff fc40 	bl	8012dfc <usart_hardware_flow_rts_config>
 801357c:	2100      	movs	r1, #0
 801357e:	4620      	mov	r0, r4
 8013580:	f7ff fc42 	bl	8012e08 <usart_hardware_flow_cts_config>
 8013584:	2104      	movs	r1, #4
 8013586:	4620      	mov	r0, r4
 8013588:	f7ff fc32 	bl	8012df0 <usart_receive_config>
 801358c:	2108      	movs	r1, #8
 801358e:	4620      	mov	r0, r4
 8013590:	f7ff fc28 	bl	8012de4 <usart_transmit_config>
 8013594:	68e3      	ldr	r3, [r4, #12]
 8013596:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801359a:	60e3      	str	r3, [r4, #12]
 801359c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801359e:	2304      	movs	r3, #4
 80135a0:	2203      	movs	r2, #3
 80135a2:	2118      	movs	r1, #24
 80135a4:	4818      	ldr	r0, [pc, #96]	; (8013608 <gd32_uart_begin+0x1a8>)
 80135a6:	f7ff f8e9 	bl	801277c <gpio_init>
 80135aa:	2308      	movs	r3, #8
 80135ac:	2203      	movs	r2, #3
 80135ae:	2104      	movs	r1, #4
 80135b0:	4815      	ldr	r0, [pc, #84]	; (8013608 <gd32_uart_begin+0x1a8>)
 80135b2:	f7ff f8e3 	bl	801277c <gpio_init>
 80135b6:	e7b8      	b.n	801352a <gd32_uart_begin+0xca>
 80135b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80135bc:	2203      	movs	r2, #3
 80135be:	2118      	movs	r1, #24
 80135c0:	480e      	ldr	r0, [pc, #56]	; (80135fc <gd32_uart_begin+0x19c>)
 80135c2:	f7ff f8db 	bl	801277c <gpio_init>
 80135c6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80135ca:	2203      	movs	r2, #3
 80135cc:	2104      	movs	r1, #4
 80135ce:	480b      	ldr	r0, [pc, #44]	; (80135fc <gd32_uart_begin+0x19c>)
 80135d0:	e7ef      	b.n	80135b2 <gd32_uart_begin+0x152>
 80135d2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80135d6:	2203      	movs	r2, #3
 80135d8:	2118      	movs	r1, #24
 80135da:	4808      	ldr	r0, [pc, #32]	; (80135fc <gd32_uart_begin+0x19c>)
 80135dc:	f7ff f8ce 	bl	801277c <gpio_init>
 80135e0:	2304      	movs	r3, #4
 80135e2:	2203      	movs	r2, #3
 80135e4:	4619      	mov	r1, r3
 80135e6:	4809      	ldr	r0, [pc, #36]	; (801360c <gd32_uart_begin+0x1ac>)
 80135e8:	e7e3      	b.n	80135b2 <gd32_uart_begin+0x152>
 80135ea:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80135ee:	e7be      	b.n	801356e <gd32_uart_begin+0x10e>
 80135f0:	2100      	movs	r1, #0
 80135f2:	e7bc      	b.n	801356e <gd32_uart_begin+0x10e>
 80135f4:	40004c00 	andmi	r4, r0, r0, lsl #24
 80135f8:	40005000 	andmi	r5, r0, r0
 80135fc:	40011000 	andmi	r1, r1, r0
 8013600:	00140010 	andseq	r0, r4, r0, lsl r0
 8013604:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013608:	40010800 	andmi	r0, r1, r0, lsl #16
 801360c:	40011400 	andmi	r1, r1, r0, lsl #8

08013610 <micros_init()>:
 8013610:	4770      	bx	lr
	...

08013614 <udelay_init()>:
 8013614:	4a07      	ldr	r2, [pc, #28]	; (8013634 <udelay_init()+0x20>)
 8013616:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801361a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801361e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013622:	2200      	movs	r2, #0
 8013624:	4b04      	ldr	r3, [pc, #16]	; (8013638 <udelay_init()+0x24>)
 8013626:	605a      	str	r2, [r3, #4]
 8013628:	681a      	ldr	r2, [r3, #0]
 801362a:	f042 0201 	orr.w	r2, r2, #1
 801362e:	601a      	str	r2, [r3, #0]
 8013630:	4770      	bx	lr
 8013632:	bf00      	nop
 8013634:	e000ed00 	and	lr, r0, r0, lsl #26
 8013638:	e0001000 	and	r1, r0, r0

0801363c <udelay(unsigned int, unsigned int)>:
 801363c:	236c      	movs	r3, #108	; 0x6c
 801363e:	b510      	push	{r4, lr}
 8013640:	4358      	muls	r0, r3
 8013642:	b909      	cbnz	r1, 8013648 <udelay(unsigned int, unsigned int)+0xc>
 8013644:	4b08      	ldr	r3, [pc, #32]	; (8013668 <udelay(unsigned int, unsigned int)+0x2c>)
 8013646:	6859      	ldr	r1, [r3, #4]
 8013648:	2300      	movs	r3, #0
 801364a:	4c07      	ldr	r4, [pc, #28]	; (8013668 <udelay(unsigned int, unsigned int)+0x2c>)
 801364c:	6862      	ldr	r2, [r4, #4]
 801364e:	4291      	cmp	r1, r2
 8013650:	d0fc      	beq.n	801364c <udelay(unsigned int, unsigned int)+0x10>
 8013652:	bf28      	it	cs
 8013654:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8013658:	1a5b      	subs	r3, r3, r1
 801365a:	4413      	add	r3, r2
 801365c:	4283      	cmp	r3, r0
 801365e:	d300      	bcc.n	8013662 <udelay(unsigned int, unsigned int)+0x26>
 8013660:	bd10      	pop	{r4, pc}
 8013662:	4611      	mov	r1, r2
 8013664:	e7f2      	b.n	801364c <udelay(unsigned int, unsigned int)+0x10>
 8013666:	bf00      	nop
 8013668:	e0001000 	and	r1, r0, r0

0801366c <mac_address_get>:
 801366c:	2102      	movs	r1, #2
 801366e:	4a07      	ldr	r2, [pc, #28]	; (801368c <mac_address_get+0x20>)
 8013670:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8013674:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8013678:	7001      	strb	r1, [r0, #0]
 801367a:	7042      	strb	r2, [r0, #1]
 801367c:	0e1a      	lsrs	r2, r3, #24
 801367e:	7082      	strb	r2, [r0, #2]
 8013680:	0c1a      	lsrs	r2, r3, #16
 8013682:	70c2      	strb	r2, [r0, #3]
 8013684:	0a1a      	lsrs	r2, r3, #8
 8013686:	7102      	strb	r2, [r0, #4]
 8013688:	7143      	strb	r3, [r0, #5]
 801368a:	4770      	bx	lr
 801368c:	1ffff000 	svcne	0x00fff000

08013690 <adc_mode_config>:
 8013690:	4b06      	ldr	r3, [pc, #24]	; (80136ac <adc_mode_config+0x1c>)
 8013692:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8013696:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 801369a:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 801369e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80136a2:	4302      	orrs	r2, r0
 80136a4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80136a8:	4770      	bx	lr
 80136aa:	bf00      	nop
 80136ac:	40012000 	andmi	r2, r1, r0

080136b0 <adc_special_function_config>:
 80136b0:	b510      	push	{r4, lr}
 80136b2:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80136b6:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80136ba:	f001 0102 	and.w	r1, r1, #2
 80136be:	b17a      	cbz	r2, 80136e0 <adc_special_function_config+0x30>
 80136c0:	b11b      	cbz	r3, 80136ca <adc_special_function_config+0x1a>
 80136c2:	6843      	ldr	r3, [r0, #4]
 80136c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80136c8:	6043      	str	r3, [r0, #4]
 80136ca:	b11c      	cbz	r4, 80136d4 <adc_special_function_config+0x24>
 80136cc:	6843      	ldr	r3, [r0, #4]
 80136ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80136d2:	6043      	str	r3, [r0, #4]
 80136d4:	b119      	cbz	r1, 80136de <adc_special_function_config+0x2e>
 80136d6:	6883      	ldr	r3, [r0, #8]
 80136d8:	f043 0302 	orr.w	r3, r3, #2
 80136dc:	6083      	str	r3, [r0, #8]
 80136de:	bd10      	pop	{r4, pc}
 80136e0:	b11b      	cbz	r3, 80136ea <adc_special_function_config+0x3a>
 80136e2:	6843      	ldr	r3, [r0, #4]
 80136e4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80136e8:	6043      	str	r3, [r0, #4]
 80136ea:	b11c      	cbz	r4, 80136f4 <adc_special_function_config+0x44>
 80136ec:	6843      	ldr	r3, [r0, #4]
 80136ee:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80136f2:	6043      	str	r3, [r0, #4]
 80136f4:	2900      	cmp	r1, #0
 80136f6:	d0f2      	beq.n	80136de <adc_special_function_config+0x2e>
 80136f8:	6883      	ldr	r3, [r0, #8]
 80136fa:	f023 0302 	bic.w	r3, r3, #2
 80136fe:	e7ed      	b.n	80136dc <adc_special_function_config+0x2c>

08013700 <adc_data_alignment_config>:
 8013700:	6883      	ldr	r3, [r0, #8]
 8013702:	b119      	cbz	r1, 801370c <adc_data_alignment_config+0xc>
 8013704:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013708:	6083      	str	r3, [r0, #8]
 801370a:	4770      	bx	lr
 801370c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013710:	e7fa      	b.n	8013708 <adc_data_alignment_config+0x8>

08013712 <adc_enable>:
 8013712:	6883      	ldr	r3, [r0, #8]
 8013714:	07db      	lsls	r3, r3, #31
 8013716:	bf5e      	ittt	pl
 8013718:	6883      	ldrpl	r3, [r0, #8]
 801371a:	f043 0301 	orrpl.w	r3, r3, #1
 801371e:	6083      	strpl	r3, [r0, #8]
 8013720:	4770      	bx	lr

08013722 <adc_calibration_enable>:
 8013722:	6883      	ldr	r3, [r0, #8]
 8013724:	f100 0208 	add.w	r2, r0, #8
 8013728:	f043 0308 	orr.w	r3, r3, #8
 801372c:	6083      	str	r3, [r0, #8]
 801372e:	6813      	ldr	r3, [r2, #0]
 8013730:	0719      	lsls	r1, r3, #28
 8013732:	d4fc      	bmi.n	801372e <adc_calibration_enable+0xc>
 8013734:	6883      	ldr	r3, [r0, #8]
 8013736:	f043 0304 	orr.w	r3, r3, #4
 801373a:	6083      	str	r3, [r0, #8]
 801373c:	6813      	ldr	r3, [r2, #0]
 801373e:	075b      	lsls	r3, r3, #29
 8013740:	d4fc      	bmi.n	801373c <adc_calibration_enable+0x1a>
 8013742:	4770      	bx	lr

08013744 <adc_tempsensor_vrefint_enable>:
 8013744:	4a03      	ldr	r2, [pc, #12]	; (8013754 <adc_tempsensor_vrefint_enable+0x10>)
 8013746:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801374a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801374e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8013752:	4770      	bx	lr
 8013754:	40012000 	andmi	r2, r1, r0

08013758 <adc_channel_length_config>:
 8013758:	2901      	cmp	r1, #1
 801375a:	d002      	beq.n	8013762 <adc_channel_length_config+0xa>
 801375c:	2902      	cmp	r1, #2
 801375e:	d00c      	beq.n	801377a <adc_channel_length_config+0x22>
 8013760:	4770      	bx	lr
 8013762:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013764:	3a01      	subs	r2, #1
 8013766:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801376a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801376c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801376e:	0512      	lsls	r2, r2, #20
 8013770:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8013774:	431a      	orrs	r2, r3
 8013776:	62c2      	str	r2, [r0, #44]	; 0x2c
 8013778:	4770      	bx	lr
 801377a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801377c:	3a01      	subs	r2, #1
 801377e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8013782:	6383      	str	r3, [r0, #56]	; 0x38
 8013784:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013786:	0512      	lsls	r2, r2, #20
 8013788:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801378c:	431a      	orrs	r2, r3
 801378e:	6382      	str	r2, [r0, #56]	; 0x38
 8013790:	4770      	bx	lr

08013792 <adc_inserted_channel_config>:
 8013792:	b530      	push	{r4, r5, lr}
 8013794:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8013796:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013798:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801379c:	1a61      	subs	r1, r4, r1
 801379e:	f06f 0404 	mvn.w	r4, #4
 80137a2:	4361      	muls	r1, r4
 80137a4:	241f      	movs	r4, #31
 80137a6:	310f      	adds	r1, #15
 80137a8:	408c      	lsls	r4, r1
 80137aa:	ea25 0504 	bic.w	r5, r5, r4
 80137ae:	fa02 f101 	lsl.w	r1, r2, r1
 80137b2:	4329      	orrs	r1, r5
 80137b4:	2a09      	cmp	r2, #9
 80137b6:	6381      	str	r1, [r0, #56]	; 0x38
 80137b8:	d80b      	bhi.n	80137d2 <adc_inserted_channel_config+0x40>
 80137ba:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 80137be:	2207      	movs	r2, #7
 80137c0:	6904      	ldr	r4, [r0, #16]
 80137c2:	408a      	lsls	r2, r1
 80137c4:	ea24 0402 	bic.w	r4, r4, r2
 80137c8:	fa03 f201 	lsl.w	r2, r3, r1
 80137cc:	4322      	orrs	r2, r4
 80137ce:	6102      	str	r2, [r0, #16]
 80137d0:	bd30      	pop	{r4, r5, pc}
 80137d2:	2a11      	cmp	r2, #17
 80137d4:	d8fc      	bhi.n	80137d0 <adc_inserted_channel_config+0x3e>
 80137d6:	2407      	movs	r4, #7
 80137d8:	3a0a      	subs	r2, #10
 80137da:	68c1      	ldr	r1, [r0, #12]
 80137dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80137e0:	4094      	lsls	r4, r2
 80137e2:	ea21 0104 	bic.w	r1, r1, r4
 80137e6:	fa03 f202 	lsl.w	r2, r3, r2
 80137ea:	430a      	orrs	r2, r1
 80137ec:	60c2      	str	r2, [r0, #12]
 80137ee:	e7ef      	b.n	80137d0 <adc_inserted_channel_config+0x3e>

080137f0 <adc_external_trigger_source_config>:
 80137f0:	2901      	cmp	r1, #1
 80137f2:	d002      	beq.n	80137fa <adc_external_trigger_source_config+0xa>
 80137f4:	2902      	cmp	r1, #2
 80137f6:	d008      	beq.n	801380a <adc_external_trigger_source_config+0x1a>
 80137f8:	4770      	bx	lr
 80137fa:	6883      	ldr	r3, [r0, #8]
 80137fc:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8013800:	6083      	str	r3, [r0, #8]
 8013802:	6883      	ldr	r3, [r0, #8]
 8013804:	431a      	orrs	r2, r3
 8013806:	6082      	str	r2, [r0, #8]
 8013808:	4770      	bx	lr
 801380a:	6883      	ldr	r3, [r0, #8]
 801380c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013810:	e7f6      	b.n	8013800 <adc_external_trigger_source_config+0x10>

08013812 <adc_external_trigger_config>:
 8013812:	f001 0301 	and.w	r3, r1, #1
 8013816:	f001 0102 	and.w	r1, r1, #2
 801381a:	b152      	cbz	r2, 8013832 <adc_external_trigger_config+0x20>
 801381c:	b11b      	cbz	r3, 8013826 <adc_external_trigger_config+0x14>
 801381e:	6883      	ldr	r3, [r0, #8]
 8013820:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8013824:	6083      	str	r3, [r0, #8]
 8013826:	b119      	cbz	r1, 8013830 <adc_external_trigger_config+0x1e>
 8013828:	6883      	ldr	r3, [r0, #8]
 801382a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801382e:	6083      	str	r3, [r0, #8]
 8013830:	4770      	bx	lr
 8013832:	b11b      	cbz	r3, 801383c <adc_external_trigger_config+0x2a>
 8013834:	6883      	ldr	r3, [r0, #8]
 8013836:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 801383a:	6083      	str	r3, [r0, #8]
 801383c:	2900      	cmp	r1, #0
 801383e:	d0f7      	beq.n	8013830 <adc_external_trigger_config+0x1e>
 8013840:	6883      	ldr	r3, [r0, #8]
 8013842:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8013846:	e7f2      	b.n	801382e <adc_external_trigger_config+0x1c>

08013848 <adc_software_trigger_enable>:
 8013848:	07ca      	lsls	r2, r1, #31
 801384a:	bf42      	ittt	mi
 801384c:	6883      	ldrmi	r3, [r0, #8]
 801384e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8013852:	6083      	strmi	r3, [r0, #8]
 8013854:	078b      	lsls	r3, r1, #30
 8013856:	bf42      	ittt	mi
 8013858:	6883      	ldrmi	r3, [r0, #8]
 801385a:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801385e:	6083      	strmi	r3, [r0, #8]
 8013860:	4770      	bx	lr
	...

08013864 <dma_deinit>:
 8013864:	4b0c      	ldr	r3, [pc, #48]	; (8013898 <dma_deinit+0x34>)
 8013866:	4298      	cmp	r0, r3
 8013868:	d102      	bne.n	8013870 <dma_deinit+0xc>
 801386a:	2904      	cmp	r1, #4
 801386c:	d900      	bls.n	8013870 <dma_deinit+0xc>
 801386e:	e7fe      	b.n	801386e <dma_deinit+0xa>
 8013870:	2314      	movs	r3, #20
 8013872:	fb03 0301 	mla	r3, r3, r1, r0
 8013876:	689a      	ldr	r2, [r3, #8]
 8013878:	0089      	lsls	r1, r1, #2
 801387a:	f022 0201 	bic.w	r2, r2, #1
 801387e:	609a      	str	r2, [r3, #8]
 8013880:	2200      	movs	r2, #0
 8013882:	609a      	str	r2, [r3, #8]
 8013884:	60da      	str	r2, [r3, #12]
 8013886:	611a      	str	r2, [r3, #16]
 8013888:	615a      	str	r2, [r3, #20]
 801388a:	230f      	movs	r3, #15
 801388c:	6842      	ldr	r2, [r0, #4]
 801388e:	fa03 f101 	lsl.w	r1, r3, r1
 8013892:	4311      	orrs	r1, r2
 8013894:	6041      	str	r1, [r0, #4]
 8013896:	4770      	bx	lr
 8013898:	40020400 	andmi	r0, r2, r0, lsl #8

0801389c <dma_struct_para_init>:
 801389c:	2300      	movs	r3, #0
 801389e:	e9c0 3300 	strd	r3, r3, [r0]
 80138a2:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80138a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80138aa:	8303      	strh	r3, [r0, #24]
 80138ac:	7683      	strb	r3, [r0, #26]
 80138ae:	4770      	bx	lr

080138b0 <dma_init>:
 80138b0:	4b1b      	ldr	r3, [pc, #108]	; (8013920 <dma_init+0x70>)
 80138b2:	b510      	push	{r4, lr}
 80138b4:	4298      	cmp	r0, r3
 80138b6:	d102      	bne.n	80138be <dma_init+0xe>
 80138b8:	2904      	cmp	r1, #4
 80138ba:	d900      	bls.n	80138be <dma_init+0xe>
 80138bc:	e7fe      	b.n	80138bc <dma_init+0xc>
 80138be:	2314      	movs	r3, #20
 80138c0:	fb03 0101 	mla	r1, r3, r1, r0
 80138c4:	6813      	ldr	r3, [r2, #0]
 80138c6:	610b      	str	r3, [r1, #16]
 80138c8:	6893      	ldr	r3, [r2, #8]
 80138ca:	614b      	str	r3, [r1, #20]
 80138cc:	8a13      	ldrh	r3, [r2, #16]
 80138ce:	60cb      	str	r3, [r1, #12]
 80138d0:	68d4      	ldr	r4, [r2, #12]
 80138d2:	6853      	ldr	r3, [r2, #4]
 80138d4:	6888      	ldr	r0, [r1, #8]
 80138d6:	4323      	orrs	r3, r4
 80138d8:	6954      	ldr	r4, [r2, #20]
 80138da:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80138de:	4323      	orrs	r3, r4
 80138e0:	4303      	orrs	r3, r0
 80138e2:	608b      	str	r3, [r1, #8]
 80138e4:	7e13      	ldrb	r3, [r2, #24]
 80138e6:	2b01      	cmp	r3, #1
 80138e8:	688b      	ldr	r3, [r1, #8]
 80138ea:	bf0c      	ite	eq
 80138ec:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 80138f0:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 80138f4:	608b      	str	r3, [r1, #8]
 80138f6:	7e53      	ldrb	r3, [r2, #25]
 80138f8:	2b01      	cmp	r3, #1
 80138fa:	688b      	ldr	r3, [r1, #8]
 80138fc:	bf0c      	ite	eq
 80138fe:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8013902:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8013906:	608b      	str	r3, [r1, #8]
 8013908:	7e93      	ldrb	r3, [r2, #26]
 801390a:	b923      	cbnz	r3, 8013916 <dma_init+0x66>
 801390c:	688b      	ldr	r3, [r1, #8]
 801390e:	f023 0310 	bic.w	r3, r3, #16
 8013912:	608b      	str	r3, [r1, #8]
 8013914:	bd10      	pop	{r4, pc}
 8013916:	688b      	ldr	r3, [r1, #8]
 8013918:	f043 0310 	orr.w	r3, r3, #16
 801391c:	e7f9      	b.n	8013912 <dma_init+0x62>
 801391e:	bf00      	nop
 8013920:	40020400 	andmi	r0, r2, r0, lsl #8

08013924 <dma_circulation_disable>:
 8013924:	4b06      	ldr	r3, [pc, #24]	; (8013940 <dma_circulation_disable+0x1c>)
 8013926:	4298      	cmp	r0, r3
 8013928:	d102      	bne.n	8013930 <dma_circulation_disable+0xc>
 801392a:	2904      	cmp	r1, #4
 801392c:	d900      	bls.n	8013930 <dma_circulation_disable+0xc>
 801392e:	e7fe      	b.n	801392e <dma_circulation_disable+0xa>
 8013930:	2314      	movs	r3, #20
 8013932:	4359      	muls	r1, r3
 8013934:	3008      	adds	r0, #8
 8013936:	580b      	ldr	r3, [r1, r0]
 8013938:	f023 0320 	bic.w	r3, r3, #32
 801393c:	500b      	str	r3, [r1, r0]
 801393e:	4770      	bx	lr
 8013940:	40020400 	andmi	r0, r2, r0, lsl #8

08013944 <dma_memory_to_memory_disable>:
 8013944:	4b06      	ldr	r3, [pc, #24]	; (8013960 <dma_memory_to_memory_disable+0x1c>)
 8013946:	4298      	cmp	r0, r3
 8013948:	d102      	bne.n	8013950 <dma_memory_to_memory_disable+0xc>
 801394a:	2904      	cmp	r1, #4
 801394c:	d900      	bls.n	8013950 <dma_memory_to_memory_disable+0xc>
 801394e:	e7fe      	b.n	801394e <dma_memory_to_memory_disable+0xa>
 8013950:	2314      	movs	r3, #20
 8013952:	4359      	muls	r1, r3
 8013954:	3008      	adds	r0, #8
 8013956:	580b      	ldr	r3, [r1, r0]
 8013958:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801395c:	500b      	str	r3, [r1, r0]
 801395e:	4770      	bx	lr
 8013960:	40020400 	andmi	r0, r2, r0, lsl #8

08013964 <enet_delay>:
 8013964:	2300      	movs	r3, #0
 8013966:	b082      	sub	sp, #8
 8013968:	9301      	str	r3, [sp, #4]
 801396a:	9001      	str	r0, [sp, #4]
 801396c:	9b01      	ldr	r3, [sp, #4]
 801396e:	b90b      	cbnz	r3, 8013974 <enet_delay+0x10>
 8013970:	b002      	add	sp, #8
 8013972:	4770      	bx	lr
 8013974:	9b01      	ldr	r3, [sp, #4]
 8013976:	3b01      	subs	r3, #1
 8013978:	9301      	str	r3, [sp, #4]
 801397a:	e7f7      	b.n	801396c <enet_delay+0x8>

0801397c <enet_software_reset>:
 801397c:	4b07      	ldr	r3, [pc, #28]	; (801399c <enet_software_reset+0x20>)
 801397e:	681a      	ldr	r2, [r3, #0]
 8013980:	f042 0201 	orr.w	r2, r2, #1
 8013984:	601a      	str	r2, [r3, #0]
 8013986:	4a06      	ldr	r2, [pc, #24]	; (80139a0 <enet_software_reset+0x24>)
 8013988:	6819      	ldr	r1, [r3, #0]
 801398a:	07c9      	lsls	r1, r1, #31
 801398c:	d501      	bpl.n	8013992 <enet_software_reset+0x16>
 801398e:	3a01      	subs	r2, #1
 8013990:	d1fa      	bne.n	8013988 <enet_software_reset+0xc>
 8013992:	6818      	ldr	r0, [r3, #0]
 8013994:	43c0      	mvns	r0, r0
 8013996:	f000 0001 	and.w	r0, r0, #1
 801399a:	4770      	bx	lr
 801399c:	40029000 	andmi	r9, r2, r0
 80139a0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080139a4 <enet_descriptors_chain_init>:
 80139a4:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80139a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139aa:	4a19      	ldr	r2, [pc, #100]	; (8013a10 <enet_descriptors_chain_init+0x6c>)
 80139ac:	d125      	bne.n	80139fa <enet_descriptors_chain_init+0x56>
 80139ae:	2500      	movs	r5, #0
 80139b0:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80139b4:	2002      	movs	r0, #2
 80139b6:	4b17      	ldr	r3, [pc, #92]	; (8013a14 <enet_descriptors_chain_init+0x70>)
 80139b8:	4c17      	ldr	r4, [pc, #92]	; (8013a18 <enet_descriptors_chain_init+0x74>)
 80139ba:	6113      	str	r3, [r2, #16]
 80139bc:	4a17      	ldr	r2, [pc, #92]	; (8013a1c <enet_descriptors_chain_init+0x78>)
 80139be:	6013      	str	r3, [r2, #0]
 80139c0:	2200      	movs	r2, #0
 80139c2:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80139c6:	4916      	ldr	r1, [pc, #88]	; (8013a20 <enet_descriptors_chain_init+0x7c>)
 80139c8:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80139cc:	600a      	str	r2, [r1, #0]
 80139ce:	4915      	ldr	r1, [pc, #84]	; (8013a24 <enet_descriptors_chain_init+0x80>)
 80139d0:	600a      	str	r2, [r1, #0]
 80139d2:	f103 0110 	add.w	r1, r3, #16
 80139d6:	fb0e 4702 	mla	r7, lr, r2, r4
 80139da:	f841 7c08 	str.w	r7, [r1, #-8]
 80139de:	4594      	cmp	ip, r2
 80139e0:	bf94      	ite	ls
 80139e2:	461f      	movls	r7, r3
 80139e4:	460f      	movhi	r7, r1
 80139e6:	3201      	adds	r2, #1
 80139e8:	4290      	cmp	r0, r2
 80139ea:	e941 6504 	strd	r6, r5, [r1, #-16]
 80139ee:	f841 7c04 	str.w	r7, [r1, #-4]
 80139f2:	f101 0110 	add.w	r1, r1, #16
 80139f6:	d1ee      	bne.n	80139d6 <enet_descriptors_chain_init+0x32>
 80139f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139fa:	4b0b      	ldr	r3, [pc, #44]	; (8013a28 <enet_descriptors_chain_init+0x84>)
 80139fc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8013a00:	60d3      	str	r3, [r2, #12]
 8013a02:	4a0a      	ldr	r2, [pc, #40]	; (8013a2c <enet_descriptors_chain_init+0x88>)
 8013a04:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8013a08:	2006      	movs	r0, #6
 8013a0a:	4c09      	ldr	r4, [pc, #36]	; (8013a30 <enet_descriptors_chain_init+0x8c>)
 8013a0c:	6013      	str	r3, [r2, #0]
 8013a0e:	e7d7      	b.n	80139c0 <enet_descriptors_chain_init+0x1c>
 8013a10:	40029000 	andmi	r9, r2, r0
 8013a14:	20015a1c 	andcs	r5, r1, ip, lsl sl
 8013a18:	20014e34 	andcs	r4, r1, r4, lsr lr
 8013a1c:	200129dc 	ldrdcs	r2, [r1], -ip
 8013a20:	200129d0 	ldrdcs	r2, [r1], -r0
 8013a24:	200129d4 	ldrdcs	r2, [r1], -r4
 8013a28:	20014dd4 	ldrdcs	r4, [r1], -r4	; <UNPREDICTABLE>
 8013a2c:	200129d8 	ldrdcs	r2, [r1], -r8
 8013a30:	20012a1c 	andcs	r2, r1, ip, lsl sl

08013a34 <enet_frame_receive>:
 8013a34:	4a1d      	ldr	r2, [pc, #116]	; (8013aac <enet_frame_receive+0x78>)
 8013a36:	b510      	push	{r4, lr}
 8013a38:	6813      	ldr	r3, [r2, #0]
 8013a3a:	681b      	ldr	r3, [r3, #0]
 8013a3c:	2b00      	cmp	r3, #0
 8013a3e:	db33      	blt.n	8013aa8 <enet_frame_receive+0x74>
 8013a40:	b970      	cbnz	r0, 8013a60 <enet_frame_receive+0x2c>
 8013a42:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8013a46:	6813      	ldr	r3, [r2, #0]
 8013a48:	6019      	str	r1, [r3, #0]
 8013a4a:	4919      	ldr	r1, [pc, #100]	; (8013ab0 <enet_frame_receive+0x7c>)
 8013a4c:	6948      	ldr	r0, [r1, #20]
 8013a4e:	0604      	lsls	r4, r0, #24
 8013a50:	d419      	bmi.n	8013a86 <enet_frame_receive+0x52>
 8013a52:	6859      	ldr	r1, [r3, #4]
 8013a54:	0448      	lsls	r0, r1, #17
 8013a56:	d51b      	bpl.n	8013a90 <enet_frame_receive+0x5c>
 8013a58:	68db      	ldr	r3, [r3, #12]
 8013a5a:	2001      	movs	r0, #1
 8013a5c:	6013      	str	r3, [r2, #0]
 8013a5e:	bd10      	pop	{r4, pc}
 8013a60:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8013a64:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8013a68:	d11e      	bne.n	8013aa8 <enet_frame_receive+0x74>
 8013a6a:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8013a6e:	3b04      	subs	r3, #4
 8013a70:	428b      	cmp	r3, r1
 8013a72:	d819      	bhi.n	8013aa8 <enet_frame_receive+0x74>
 8013a74:	2100      	movs	r1, #0
 8013a76:	4299      	cmp	r1, r3
 8013a78:	6814      	ldr	r4, [r2, #0]
 8013a7a:	d2e2      	bcs.n	8013a42 <enet_frame_receive+0xe>
 8013a7c:	68a4      	ldr	r4, [r4, #8]
 8013a7e:	5d0c      	ldrb	r4, [r1, r4]
 8013a80:	5444      	strb	r4, [r0, r1]
 8013a82:	3101      	adds	r1, #1
 8013a84:	e7f7      	b.n	8013a76 <enet_frame_receive+0x42>
 8013a86:	2080      	movs	r0, #128	; 0x80
 8013a88:	6148      	str	r0, [r1, #20]
 8013a8a:	2000      	movs	r0, #0
 8013a8c:	6088      	str	r0, [r1, #8]
 8013a8e:	e7e0      	b.n	8013a52 <enet_frame_receive+0x1e>
 8013a90:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8013a94:	4906      	ldr	r1, [pc, #24]	; (8013ab0 <enet_frame_receive+0x7c>)
 8013a96:	bf05      	ittet	eq
 8013a98:	3310      	addeq	r3, #16
 8013a9a:	6809      	ldreq	r1, [r1, #0]
 8013a9c:	68cb      	ldrne	r3, [r1, #12]
 8013a9e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8013aa2:	bf08      	it	eq
 8013aa4:	185b      	addeq	r3, r3, r1
 8013aa6:	e7d8      	b.n	8013a5a <enet_frame_receive+0x26>
 8013aa8:	2000      	movs	r0, #0
 8013aaa:	e7d8      	b.n	8013a5e <enet_frame_receive+0x2a>
 8013aac:	200129d8 	ldrdcs	r2, [r1], -r8
 8013ab0:	40029000 	andmi	r9, r2, r0

08013ab4 <enet_frame_transmit>:
 8013ab4:	4a1e      	ldr	r2, [pc, #120]	; (8013b30 <enet_frame_transmit+0x7c>)
 8013ab6:	b530      	push	{r4, r5, lr}
 8013ab8:	6813      	ldr	r3, [r2, #0]
 8013aba:	681b      	ldr	r3, [r3, #0]
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	db34      	blt.n	8013b2a <enet_frame_transmit+0x76>
 8013ac0:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8013ac4:	4299      	cmp	r1, r3
 8013ac6:	d830      	bhi.n	8013b2a <enet_frame_transmit+0x76>
 8013ac8:	b9e8      	cbnz	r0, 8013b06 <enet_frame_transmit+0x52>
 8013aca:	6813      	ldr	r3, [r2, #0]
 8013acc:	4819      	ldr	r0, [pc, #100]	; (8013b34 <enet_frame_transmit+0x80>)
 8013ace:	6059      	str	r1, [r3, #4]
 8013ad0:	6819      	ldr	r1, [r3, #0]
 8013ad2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8013ad6:	6019      	str	r1, [r3, #0]
 8013ad8:	6941      	ldr	r1, [r0, #20]
 8013ada:	6944      	ldr	r4, [r0, #20]
 8013adc:	f001 0104 	and.w	r1, r1, #4
 8013ae0:	f004 0420 	and.w	r4, r4, #32
 8013ae4:	4321      	orrs	r1, r4
 8013ae6:	d110      	bne.n	8013b0a <enet_frame_transmit+0x56>
 8013ae8:	6819      	ldr	r1, [r3, #0]
 8013aea:	02c8      	lsls	r0, r1, #11
 8013aec:	d511      	bpl.n	8013b12 <enet_frame_transmit+0x5e>
 8013aee:	68db      	ldr	r3, [r3, #12]
 8013af0:	2001      	movs	r0, #1
 8013af2:	6013      	str	r3, [r2, #0]
 8013af4:	bd30      	pop	{r4, r5, pc}
 8013af6:	5cc5      	ldrb	r5, [r0, r3]
 8013af8:	68a4      	ldr	r4, [r4, #8]
 8013afa:	551d      	strb	r5, [r3, r4]
 8013afc:	3301      	adds	r3, #1
 8013afe:	428b      	cmp	r3, r1
 8013b00:	6814      	ldr	r4, [r2, #0]
 8013b02:	d1f8      	bne.n	8013af6 <enet_frame_transmit+0x42>
 8013b04:	e7e1      	b.n	8013aca <enet_frame_transmit+0x16>
 8013b06:	2300      	movs	r3, #0
 8013b08:	e7f9      	b.n	8013afe <enet_frame_transmit+0x4a>
 8013b0a:	6141      	str	r1, [r0, #20]
 8013b0c:	2100      	movs	r1, #0
 8013b0e:	6041      	str	r1, [r0, #4]
 8013b10:	e7ea      	b.n	8013ae8 <enet_frame_transmit+0x34>
 8013b12:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8013b16:	4907      	ldr	r1, [pc, #28]	; (8013b34 <enet_frame_transmit+0x80>)
 8013b18:	bf05      	ittet	eq
 8013b1a:	3310      	addeq	r3, #16
 8013b1c:	6809      	ldreq	r1, [r1, #0]
 8013b1e:	690b      	ldrne	r3, [r1, #16]
 8013b20:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8013b24:	bf08      	it	eq
 8013b26:	185b      	addeq	r3, r3, r1
 8013b28:	e7e2      	b.n	8013af0 <enet_frame_transmit+0x3c>
 8013b2a:	2000      	movs	r0, #0
 8013b2c:	e7e2      	b.n	8013af4 <enet_frame_transmit+0x40>
 8013b2e:	bf00      	nop
 8013b30:	200129dc 	ldrdcs	r2, [r1], -ip
 8013b34:	40029000 	andmi	r9, r2, r0

08013b38 <enet_transmit_checksum_config>:
 8013b38:	6803      	ldr	r3, [r0, #0]
 8013b3a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8013b3e:	430b      	orrs	r3, r1
 8013b40:	6003      	str	r3, [r0, #0]
 8013b42:	4770      	bx	lr

08013b44 <enet_mac_address_set>:
 8013b44:	888a      	ldrh	r2, [r1, #4]
 8013b46:	4b03      	ldr	r3, [pc, #12]	; (8013b54 <enet_mac_address_set+0x10>)
 8013b48:	50c2      	str	r2, [r0, r3]
 8013b4a:	680a      	ldr	r2, [r1, #0]
 8013b4c:	3304      	adds	r3, #4
 8013b4e:	50c2      	str	r2, [r0, r3]
 8013b50:	4770      	bx	lr
 8013b52:	bf00      	nop
 8013b54:	40028040 	andmi	r8, r2, r0, asr #32

08013b58 <enet_rx_enable>:
 8013b58:	4a05      	ldr	r2, [pc, #20]	; (8013b70 <enet_rx_enable+0x18>)
 8013b5a:	6813      	ldr	r3, [r2, #0]
 8013b5c:	f043 0304 	orr.w	r3, r3, #4
 8013b60:	6013      	str	r3, [r2, #0]
 8013b62:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8013b66:	6993      	ldr	r3, [r2, #24]
 8013b68:	f043 0302 	orr.w	r3, r3, #2
 8013b6c:	6193      	str	r3, [r2, #24]
 8013b6e:	4770      	bx	lr
 8013b70:	40028000 	andmi	r8, r2, r0

08013b74 <enet_phy_write_read>:
 8013b74:	b530      	push	{r4, r5, lr}
 8013b76:	4604      	mov	r4, r0
 8013b78:	4d13      	ldr	r5, [pc, #76]	; (8013bc8 <enet_phy_write_read+0x54>)
 8013b7a:	0192      	lsls	r2, r2, #6
 8013b7c:	6928      	ldr	r0, [r5, #16]
 8013b7e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8013b82:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8013b86:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8013b8a:	4302      	orrs	r2, r0
 8013b8c:	02c9      	lsls	r1, r1, #11
 8013b8e:	b289      	uxth	r1, r1
 8013b90:	2c02      	cmp	r4, #2
 8013b92:	ea42 0204 	orr.w	r2, r2, r4
 8013b96:	ea42 0201 	orr.w	r2, r2, r1
 8013b9a:	bf08      	it	eq
 8013b9c:	8819      	ldrheq	r1, [r3, #0]
 8013b9e:	f042 0201 	orr.w	r2, r2, #1
 8013ba2:	bf08      	it	eq
 8013ba4:	6169      	streq	r1, [r5, #20]
 8013ba6:	612a      	str	r2, [r5, #16]
 8013ba8:	4907      	ldr	r1, [pc, #28]	; (8013bc8 <enet_phy_write_read+0x54>)
 8013baa:	4a08      	ldr	r2, [pc, #32]	; (8013bcc <enet_phy_write_read+0x58>)
 8013bac:	6908      	ldr	r0, [r1, #16]
 8013bae:	07c0      	lsls	r0, r0, #31
 8013bb0:	d501      	bpl.n	8013bb6 <enet_phy_write_read+0x42>
 8013bb2:	3a01      	subs	r2, #1
 8013bb4:	d1fa      	bne.n	8013bac <enet_phy_write_read+0x38>
 8013bb6:	690a      	ldr	r2, [r1, #16]
 8013bb8:	43d2      	mvns	r2, r2
 8013bba:	f002 0001 	and.w	r0, r2, #1
 8013bbe:	b90c      	cbnz	r4, 8013bc4 <enet_phy_write_read+0x50>
 8013bc0:	694a      	ldr	r2, [r1, #20]
 8013bc2:	801a      	strh	r2, [r3, #0]
 8013bc4:	bd30      	pop	{r4, r5, pc}
 8013bc6:	bf00      	nop
 8013bc8:	40028000 	andmi	r8, r2, r0
 8013bcc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08013bd0 <enet_phy_config>:
 8013bd0:	4b22      	ldr	r3, [pc, #136]	; (8013c5c <enet_phy_config+0x8c>)
 8013bd2:	b513      	push	{r0, r1, r4, lr}
 8013bd4:	2001      	movs	r0, #1
 8013bd6:	691c      	ldr	r4, [r3, #16]
 8013bd8:	f7fe ff3e 	bl	8012a58 <rcu_clock_freq_get>
 8013bdc:	4b20      	ldr	r3, [pc, #128]	; (8013c60 <enet_phy_config+0x90>)
 8013bde:	4a21      	ldr	r2, [pc, #132]	; (8013c64 <enet_phy_config+0x94>)
 8013be0:	4403      	add	r3, r0
 8013be2:	4293      	cmp	r3, r2
 8013be4:	f024 041c 	bic.w	r4, r4, #28
 8013be8:	d220      	bcs.n	8013c2c <enet_phy_config+0x5c>
 8013bea:	f044 0408 	orr.w	r4, r4, #8
 8013bee:	4b1b      	ldr	r3, [pc, #108]	; (8013c5c <enet_phy_config+0x8c>)
 8013bf0:	2200      	movs	r2, #0
 8013bf2:	611c      	str	r4, [r3, #16]
 8013bf4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013bf8:	2101      	movs	r1, #1
 8013bfa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013bfe:	2002      	movs	r0, #2
 8013c00:	f10d 0306 	add.w	r3, sp, #6
 8013c04:	f7ff ffb6 	bl	8013b74 <enet_phy_write_read>
 8013c08:	b310      	cbz	r0, 8013c50 <enet_phy_config+0x80>
 8013c0a:	2200      	movs	r2, #0
 8013c0c:	4816      	ldr	r0, [pc, #88]	; (8013c68 <enet_phy_config+0x98>)
 8013c0e:	f7ff fea9 	bl	8013964 <enet_delay>
 8013c12:	2101      	movs	r1, #1
 8013c14:	4610      	mov	r0, r2
 8013c16:	f10d 0306 	add.w	r3, sp, #6
 8013c1a:	f7ff ffab 	bl	8013b74 <enet_phy_write_read>
 8013c1e:	b1b8      	cbz	r0, 8013c50 <enet_phy_config+0x80>
 8013c20:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013c24:	43c0      	mvns	r0, r0
 8013c26:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8013c2a:	e012      	b.n	8013c52 <enet_phy_config+0x82>
 8013c2c:	4b0f      	ldr	r3, [pc, #60]	; (8013c6c <enet_phy_config+0x9c>)
 8013c2e:	4a10      	ldr	r2, [pc, #64]	; (8013c70 <enet_phy_config+0xa0>)
 8013c30:	4403      	add	r3, r0
 8013c32:	4293      	cmp	r3, r2
 8013c34:	d802      	bhi.n	8013c3c <enet_phy_config+0x6c>
 8013c36:	f044 040c 	orr.w	r4, r4, #12
 8013c3a:	e7d8      	b.n	8013bee <enet_phy_config+0x1e>
 8013c3c:	4b0d      	ldr	r3, [pc, #52]	; (8013c74 <enet_phy_config+0xa4>)
 8013c3e:	4a0e      	ldr	r2, [pc, #56]	; (8013c78 <enet_phy_config+0xa8>)
 8013c40:	4403      	add	r3, r0
 8013c42:	4293      	cmp	r3, r2
 8013c44:	d9d3      	bls.n	8013bee <enet_phy_config+0x1e>
 8013c46:	4b0d      	ldr	r3, [pc, #52]	; (8013c7c <enet_phy_config+0xac>)
 8013c48:	4a0d      	ldr	r2, [pc, #52]	; (8013c80 <enet_phy_config+0xb0>)
 8013c4a:	4403      	add	r3, r0
 8013c4c:	4293      	cmp	r3, r2
 8013c4e:	d902      	bls.n	8013c56 <enet_phy_config+0x86>
 8013c50:	2000      	movs	r0, #0
 8013c52:	b002      	add	sp, #8
 8013c54:	bd10      	pop	{r4, pc}
 8013c56:	f044 0404 	orr.w	r4, r4, #4
 8013c5a:	e7c8      	b.n	8013bee <enet_phy_config+0x1e>
 8013c5c:	40028000 	andmi	r8, r2, r0
 8013c60:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8013c64:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8013c68:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8013c6c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8013c70:	017d783f 	cmneq	sp, pc, lsr r8
 8013c74:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8013c78:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8013c7c:	faa2b580 	blx	68c1284 <__stack_size+0x68bfa84>
 8013c80:	0112a880 	tsteq	r2, r0, lsl #17

08013c84 <enet_init>:
 8013c84:	2300      	movs	r3, #0
 8013c86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013c88:	4604      	mov	r4, r0
 8013c8a:	460d      	mov	r5, r1
 8013c8c:	4616      	mov	r6, r2
 8013c8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013c92:	f7ff ff9d 	bl	8013bd0 <enet_phy_config>
 8013c96:	2800      	cmp	r0, #0
 8013c98:	d037      	beq.n	8013d0a <enet_init+0x86>
 8013c9a:	4b3b      	ldr	r3, [pc, #236]	; (8013d88 <enet_init+0x104>)
 8013c9c:	4a3b      	ldr	r2, [pc, #236]	; (8013d8c <enet_init+0x108>)
 8013c9e:	6819      	ldr	r1, [r3, #0]
 8013ca0:	2c01      	cmp	r4, #1
 8013ca2:	ea02 0201 	and.w	r2, r2, r1
 8013ca6:	601a      	str	r2, [r3, #0]
 8013ca8:	f04f 0200 	mov.w	r2, #0
 8013cac:	605a      	str	r2, [r3, #4]
 8013cae:	609a      	str	r2, [r3, #8]
 8013cb0:	60da      	str	r2, [r3, #12]
 8013cb2:	6999      	ldr	r1, [r3, #24]
 8013cb4:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8013cb8:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8013cbc:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8013cc0:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8013cc4:	6199      	str	r1, [r3, #24]
 8013cc6:	4932      	ldr	r1, [pc, #200]	; (8013d90 <enet_init+0x10c>)
 8013cc8:	61da      	str	r2, [r3, #28]
 8013cca:	6988      	ldr	r0, [r1, #24]
 8013ccc:	4b31      	ldr	r3, [pc, #196]	; (8013d94 <enet_init+0x110>)
 8013cce:	ea03 0300 	and.w	r3, r3, r0
 8013cd2:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8013cd6:	618b      	str	r3, [r1, #24]
 8013cd8:	680b      	ldr	r3, [r1, #0]
 8013cda:	4b2f      	ldr	r3, [pc, #188]	; (8013d98 <enet_init+0x114>)
 8013cdc:	600b      	str	r3, [r1, #0]
 8013cde:	d01e      	beq.n	8013d1e <enet_init+0x9a>
 8013ce0:	08e3      	lsrs	r3, r4, #3
 8013ce2:	0861      	lsrs	r1, r4, #1
 8013ce4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8013ce8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013cec:	430b      	orrs	r3, r1
 8013cee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013cf2:	2101      	movs	r1, #1
 8013cf4:	2002      	movs	r0, #2
 8013cf6:	f10d 0306 	add.w	r3, sp, #6
 8013cfa:	f7ff ff3b 	bl	8013b74 <enet_phy_write_read>
 8013cfe:	b158      	cbz	r0, 8013d18 <enet_init+0x94>
 8013d00:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8013d04:	f7ff fe2e 	bl	8013964 <enet_delay>
 8013d08:	e05f      	b.n	8013dca <enet_init+0x146>
 8013d0a:	4824      	ldr	r0, [pc, #144]	; (8013d9c <enet_init+0x118>)
 8013d0c:	f7ff fe2a 	bl	8013964 <enet_delay>
 8013d10:	f7ff ff5e 	bl	8013bd0 <enet_phy_config>
 8013d14:	2800      	cmp	r0, #0
 8013d16:	d1c0      	bne.n	8013c9a <enet_init+0x16>
 8013d18:	2000      	movs	r0, #0
 8013d1a:	b003      	add	sp, #12
 8013d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d1e:	4614      	mov	r4, r2
 8013d20:	4f1f      	ldr	r7, [pc, #124]	; (8013da0 <enet_init+0x11c>)
 8013d22:	2201      	movs	r2, #1
 8013d24:	2000      	movs	r0, #0
 8013d26:	4611      	mov	r1, r2
 8013d28:	f10d 0306 	add.w	r3, sp, #6
 8013d2c:	f7ff ff22 	bl	8013b74 <enet_phy_write_read>
 8013d30:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013d34:	3401      	adds	r4, #1
 8013d36:	f002 0204 	and.w	r2, r2, #4
 8013d3a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013d3e:	b912      	cbnz	r2, 8013d46 <enet_init+0xc2>
 8013d40:	42bc      	cmp	r4, r7
 8013d42:	d1ee      	bne.n	8013d22 <enet_init+0x9e>
 8013d44:	e7e8      	b.n	8013d18 <enet_init+0x94>
 8013d46:	42bc      	cmp	r4, r7
 8013d48:	d0e6      	beq.n	8013d18 <enet_init+0x94>
 8013d4a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8013d4e:	2101      	movs	r1, #1
 8013d50:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013d54:	2002      	movs	r0, #2
 8013d56:	2200      	movs	r2, #0
 8013d58:	f7ff ff0c 	bl	8013b74 <enet_phy_write_read>
 8013d5c:	2800      	cmp	r0, #0
 8013d5e:	d0db      	beq.n	8013d18 <enet_init+0x94>
 8013d60:	2400      	movs	r4, #0
 8013d62:	4f0f      	ldr	r7, [pc, #60]	; (8013da0 <enet_init+0x11c>)
 8013d64:	2201      	movs	r2, #1
 8013d66:	2000      	movs	r0, #0
 8013d68:	4611      	mov	r1, r2
 8013d6a:	f10d 0306 	add.w	r3, sp, #6
 8013d6e:	f7ff ff01 	bl	8013b74 <enet_phy_write_read>
 8013d72:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013d76:	3401      	adds	r4, #1
 8013d78:	f002 0220 	and.w	r2, r2, #32
 8013d7c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013d80:	b982      	cbnz	r2, 8013da4 <enet_init+0x120>
 8013d82:	42bc      	cmp	r4, r7
 8013d84:	d1ee      	bne.n	8013d64 <enet_init+0xe0>
 8013d86:	e7c7      	b.n	8013d18 <enet_init+0x94>
 8013d88:	40028000 	andmi	r8, r2, r0
 8013d8c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8013d90:	40029000 	andmi	r9, r2, r0
 8013d94:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8013d98:	02c16000 	sbceq	r6, r1, #0
 8013d9c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8013da0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8013da4:	42bc      	cmp	r4, r7
 8013da6:	d0b7      	beq.n	8013d18 <enet_init+0x94>
 8013da8:	2101      	movs	r1, #1
 8013daa:	2210      	movs	r2, #16
 8013dac:	2000      	movs	r0, #0
 8013dae:	f7ff fee1 	bl	8013b74 <enet_phy_write_read>
 8013db2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013db6:	f013 0f04 	tst.w	r3, #4
 8013dba:	bf14      	ite	ne
 8013dbc:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8013dc0:	2400      	moveq	r4, #0
 8013dc2:	0799      	lsls	r1, r3, #30
 8013dc4:	d401      	bmi.n	8013dca <enet_init+0x146>
 8013dc6:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8013dca:	4b64      	ldr	r3, [pc, #400]	; (8013f5c <enet_init+0x2d8>)
 8013dcc:	056a      	lsls	r2, r5, #21
 8013dce:	6818      	ldr	r0, [r3, #0]
 8013dd0:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8013dd4:	ea44 0400 	orr.w	r4, r4, r0
 8013dd8:	601c      	str	r4, [r3, #0]
 8013dda:	d50c      	bpl.n	8013df6 <enet_init+0x172>
 8013ddc:	681a      	ldr	r2, [r3, #0]
 8013dde:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8013de2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8013de6:	601a      	str	r2, [r3, #0]
 8013de8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8013dec:	6999      	ldr	r1, [r3, #24]
 8013dee:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8013df2:	430d      	orrs	r5, r1
 8013df4:	619d      	str	r5, [r3, #24]
 8013df6:	4959      	ldr	r1, [pc, #356]	; (8013f5c <enet_init+0x2d8>)
 8013df8:	4b59      	ldr	r3, [pc, #356]	; (8013f60 <enet_init+0x2dc>)
 8013dfa:	684a      	ldr	r2, [r1, #4]
 8013dfc:	4316      	orrs	r6, r2
 8013dfe:	604e      	str	r6, [r1, #4]
 8013e00:	681a      	ldr	r2, [r3, #0]
 8013e02:	07d7      	lsls	r7, r2, #31
 8013e04:	d510      	bpl.n	8013e28 <enet_init+0x1a4>
 8013e06:	685a      	ldr	r2, [r3, #4]
 8013e08:	680c      	ldr	r4, [r1, #0]
 8013e0a:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8013e0e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8013e12:	4320      	orrs	r0, r4
 8013e14:	6008      	str	r0, [r1, #0]
 8013e16:	4853      	ldr	r0, [pc, #332]	; (8013f64 <enet_init+0x2e0>)
 8013e18:	0892      	lsrs	r2, r2, #2
 8013e1a:	6981      	ldr	r1, [r0, #24]
 8013e1c:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8013e20:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8013e24:	430a      	orrs	r2, r1
 8013e26:	6182      	str	r2, [r0, #24]
 8013e28:	681a      	ldr	r2, [r3, #0]
 8013e2a:	0796      	lsls	r6, r2, #30
 8013e2c:	d508      	bpl.n	8013e40 <enet_init+0x1bc>
 8013e2e:	494d      	ldr	r1, [pc, #308]	; (8013f64 <enet_init+0x2e0>)
 8013e30:	6898      	ldr	r0, [r3, #8]
 8013e32:	680a      	ldr	r2, [r1, #0]
 8013e34:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8013e38:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8013e3c:	4302      	orrs	r2, r0
 8013e3e:	600a      	str	r2, [r1, #0]
 8013e40:	681a      	ldr	r2, [r3, #0]
 8013e42:	0755      	lsls	r5, r2, #29
 8013e44:	d508      	bpl.n	8013e58 <enet_init+0x1d4>
 8013e46:	4947      	ldr	r1, [pc, #284]	; (8013f64 <enet_init+0x2e0>)
 8013e48:	68d8      	ldr	r0, [r3, #12]
 8013e4a:	680a      	ldr	r2, [r1, #0]
 8013e4c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8013e50:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8013e54:	4302      	orrs	r2, r0
 8013e56:	600a      	str	r2, [r1, #0]
 8013e58:	681a      	ldr	r2, [r3, #0]
 8013e5a:	0714      	lsls	r4, r2, #28
 8013e5c:	d508      	bpl.n	8013e70 <enet_init+0x1ec>
 8013e5e:	4941      	ldr	r1, [pc, #260]	; (8013f64 <enet_init+0x2e0>)
 8013e60:	6918      	ldr	r0, [r3, #16]
 8013e62:	680a      	ldr	r2, [r1, #0]
 8013e64:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8013e68:	f022 0202 	bic.w	r2, r2, #2
 8013e6c:	4302      	orrs	r2, r0
 8013e6e:	600a      	str	r2, [r1, #0]
 8013e70:	681a      	ldr	r2, [r3, #0]
 8013e72:	06d0      	lsls	r0, r2, #27
 8013e74:	d506      	bpl.n	8013e84 <enet_init+0x200>
 8013e76:	493b      	ldr	r1, [pc, #236]	; (8013f64 <enet_init+0x2e0>)
 8013e78:	4a3b      	ldr	r2, [pc, #236]	; (8013f68 <enet_init+0x2e4>)
 8013e7a:	6988      	ldr	r0, [r1, #24]
 8013e7c:	4002      	ands	r2, r0
 8013e7e:	6958      	ldr	r0, [r3, #20]
 8013e80:	4302      	orrs	r2, r0
 8013e82:	618a      	str	r2, [r1, #24]
 8013e84:	681a      	ldr	r2, [r3, #0]
 8013e86:	0691      	lsls	r1, r2, #26
 8013e88:	d508      	bpl.n	8013e9c <enet_init+0x218>
 8013e8a:	4936      	ldr	r1, [pc, #216]	; (8013f64 <enet_init+0x2e0>)
 8013e8c:	6998      	ldr	r0, [r3, #24]
 8013e8e:	698a      	ldr	r2, [r1, #24]
 8013e90:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8013e94:	f022 0204 	bic.w	r2, r2, #4
 8013e98:	4302      	orrs	r2, r0
 8013e9a:	618a      	str	r2, [r1, #24]
 8013e9c:	681a      	ldr	r2, [r3, #0]
 8013e9e:	0652      	lsls	r2, r2, #25
 8013ea0:	d506      	bpl.n	8013eb0 <enet_init+0x22c>
 8013ea2:	492e      	ldr	r1, [pc, #184]	; (8013f5c <enet_init+0x2d8>)
 8013ea4:	69d8      	ldr	r0, [r3, #28]
 8013ea6:	69ca      	ldr	r2, [r1, #28]
 8013ea8:	0c52      	lsrs	r2, r2, #17
 8013eaa:	0452      	lsls	r2, r2, #17
 8013eac:	4302      	orrs	r2, r0
 8013eae:	61ca      	str	r2, [r1, #28]
 8013eb0:	681a      	ldr	r2, [r3, #0]
 8013eb2:	0617      	lsls	r7, r2, #24
 8013eb4:	d517      	bpl.n	8013ee6 <enet_init+0x262>
 8013eb6:	4c29      	ldr	r4, [pc, #164]	; (8013f5c <enet_init+0x2d8>)
 8013eb8:	6a1a      	ldr	r2, [r3, #32]
 8013eba:	69a0      	ldr	r0, [r4, #24]
 8013ebc:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8013ec0:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8013ec4:	0400      	lsls	r0, r0, #16
 8013ec6:	0c00      	lsrs	r0, r0, #16
 8013ec8:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8013ecc:	4301      	orrs	r1, r0
 8013ece:	4825      	ldr	r0, [pc, #148]	; (8013f64 <enet_init+0x2e0>)
 8013ed0:	61a1      	str	r1, [r4, #24]
 8013ed2:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8013ed6:	0a12      	lsrs	r2, r2, #8
 8013ed8:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8013edc:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8013ee0:	430a      	orrs	r2, r1
 8013ee2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8013ee6:	681a      	ldr	r2, [r3, #0]
 8013ee8:	05d6      	lsls	r6, r2, #23
 8013eea:	bf42      	ittt	mi
 8013eec:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8013eee:	4a1b      	ldrmi	r2, [pc, #108]	; (8013f5c <enet_init+0x2d8>)
 8013ef0:	6091      	strmi	r1, [r2, #8]
 8013ef2:	681a      	ldr	r2, [r3, #0]
 8013ef4:	0595      	lsls	r5, r2, #22
 8013ef6:	bf42      	ittt	mi
 8013ef8:	4a18      	ldrmi	r2, [pc, #96]	; (8013f5c <enet_init+0x2d8>)
 8013efa:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8013efc:	60d1      	strmi	r1, [r2, #12]
 8013efe:	681a      	ldr	r2, [r3, #0]
 8013f00:	0554      	lsls	r4, r2, #21
 8013f02:	d508      	bpl.n	8013f16 <enet_init+0x292>
 8013f04:	4915      	ldr	r1, [pc, #84]	; (8013f5c <enet_init+0x2d8>)
 8013f06:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8013f08:	684a      	ldr	r2, [r1, #4]
 8013f0a:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8013f0e:	f022 0206 	bic.w	r2, r2, #6
 8013f12:	4302      	orrs	r2, r0
 8013f14:	604a      	str	r2, [r1, #4]
 8013f16:	681a      	ldr	r2, [r3, #0]
 8013f18:	0510      	lsls	r0, r2, #20
 8013f1a:	d508      	bpl.n	8013f2e <enet_init+0x2aa>
 8013f1c:	490f      	ldr	r1, [pc, #60]	; (8013f5c <enet_init+0x2d8>)
 8013f1e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8013f20:	680a      	ldr	r2, [r1, #0]
 8013f22:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8013f26:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8013f2a:	4302      	orrs	r2, r0
 8013f2c:	600a      	str	r2, [r1, #0]
 8013f2e:	681a      	ldr	r2, [r3, #0]
 8013f30:	04d1      	lsls	r1, r2, #19
 8013f32:	d506      	bpl.n	8013f42 <enet_init+0x2be>
 8013f34:	4909      	ldr	r1, [pc, #36]	; (8013f5c <enet_init+0x2d8>)
 8013f36:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8013f38:	680a      	ldr	r2, [r1, #0]
 8013f3a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8013f3e:	4302      	orrs	r2, r0
 8013f40:	600a      	str	r2, [r1, #0]
 8013f42:	681a      	ldr	r2, [r3, #0]
 8013f44:	0492      	lsls	r2, r2, #18
 8013f46:	d506      	bpl.n	8013f56 <enet_init+0x2d2>
 8013f48:	4904      	ldr	r1, [pc, #16]	; (8013f5c <enet_init+0x2d8>)
 8013f4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f4c:	680a      	ldr	r2, [r1, #0]
 8013f4e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8013f52:	4313      	orrs	r3, r2
 8013f54:	600b      	str	r3, [r1, #0]
 8013f56:	2001      	movs	r0, #1
 8013f58:	e6df      	b.n	8013d1a <enet_init+0x96>
 8013f5a:	bf00      	nop
 8013f5c:	40028000 	andmi	r8, r2, r0
 8013f60:	200129e0 	andcs	r2, r1, r0, ror #19
 8013f64:	40029000 	andmi	r9, r2, r0
 8013f68:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08013f6c <enet_txfifo_flush>:
 8013f6c:	4b06      	ldr	r3, [pc, #24]	; (8013f88 <enet_txfifo_flush+0x1c>)
 8013f6e:	4807      	ldr	r0, [pc, #28]	; (8013f8c <enet_txfifo_flush+0x20>)
 8013f70:	699a      	ldr	r2, [r3, #24]
 8013f72:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8013f76:	619a      	str	r2, [r3, #24]
 8013f78:	699a      	ldr	r2, [r3, #24]
 8013f7a:	02d2      	lsls	r2, r2, #11
 8013f7c:	d502      	bpl.n	8013f84 <enet_txfifo_flush+0x18>
 8013f7e:	3801      	subs	r0, #1
 8013f80:	d1fa      	bne.n	8013f78 <enet_txfifo_flush+0xc>
 8013f82:	4770      	bx	lr
 8013f84:	2001      	movs	r0, #1
 8013f86:	4770      	bx	lr
 8013f88:	40029000 	andmi	r9, r2, r0
 8013f8c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08013f90 <enet_tx_enable>:
 8013f90:	4a06      	ldr	r2, [pc, #24]	; (8013fac <enet_tx_enable+0x1c>)
 8013f92:	b508      	push	{r3, lr}
 8013f94:	6813      	ldr	r3, [r2, #0]
 8013f96:	f043 0308 	orr.w	r3, r3, #8
 8013f9a:	6013      	str	r3, [r2, #0]
 8013f9c:	f7ff ffe6 	bl	8013f6c <enet_txfifo_flush>
 8013fa0:	4a03      	ldr	r2, [pc, #12]	; (8013fb0 <enet_tx_enable+0x20>)
 8013fa2:	6993      	ldr	r3, [r2, #24]
 8013fa4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013fa8:	6193      	str	r3, [r2, #24]
 8013faa:	bd08      	pop	{r3, pc}
 8013fac:	40028000 	andmi	r8, r2, r0
 8013fb0:	40029000 	andmi	r9, r2, r0

08013fb4 <enet_enable>:
 8013fb4:	b508      	push	{r3, lr}
 8013fb6:	f7ff ffeb 	bl	8013f90 <enet_tx_enable>
 8013fba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013fbe:	f7ff bdcb 	b.w	8013b58 <enet_rx_enable>

08013fc2 <enet_desc_information_get>:
 8013fc2:	2905      	cmp	r1, #5
 8013fc4:	d817      	bhi.n	8013ff6 <enet_desc_information_get+0x34>
 8013fc6:	e8df f001 	tbb	[pc, r1]
 8013fca:	03091012 	movweq	r1, #36882	; 0x9012
 8013fce:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8013fd2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013fd6:	4770      	bx	lr
 8013fd8:	88c0      	ldrh	r0, [r0, #6]
 8013fda:	e7fa      	b.n	8013fd2 <enet_desc_information_get+0x10>
 8013fdc:	8840      	ldrh	r0, [r0, #2]
 8013fde:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8013fe2:	2804      	cmp	r0, #4
 8013fe4:	d90a      	bls.n	8013ffc <enet_desc_information_get+0x3a>
 8013fe6:	3804      	subs	r0, #4
 8013fe8:	4770      	bx	lr
 8013fea:	6880      	ldr	r0, [r0, #8]
 8013fec:	4770      	bx	lr
 8013fee:	6800      	ldr	r0, [r0, #0]
 8013ff0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8013ff4:	4770      	bx	lr
 8013ff6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013ffa:	4770      	bx	lr
 8013ffc:	2000      	movs	r0, #0
 8013ffe:	4770      	bx	lr

08014000 <enet_rxframe_drop>:
 8014000:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8014004:	4814      	ldr	r0, [pc, #80]	; (8014058 <enet_rxframe_drop+0x58>)
 8014006:	b510      	push	{r4, lr}
 8014008:	6802      	ldr	r2, [r0, #0]
 801400a:	4914      	ldr	r1, [pc, #80]	; (801405c <enet_rxframe_drop+0x5c>)
 801400c:	6854      	ldr	r4, [r2, #4]
 801400e:	6013      	str	r3, [r2, #0]
 8014010:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8014014:	680b      	ldr	r3, [r1, #0]
 8014016:	d009      	beq.n	801402c <enet_rxframe_drop+0x2c>
 8014018:	b12b      	cbz	r3, 8014026 <enet_rxframe_drop+0x26>
 801401a:	68da      	ldr	r2, [r3, #12]
 801401c:	6002      	str	r2, [r0, #0]
 801401e:	681a      	ldr	r2, [r3, #0]
 8014020:	b1ba      	cbz	r2, 8014052 <enet_rxframe_drop+0x52>
 8014022:	600a      	str	r2, [r1, #0]
 8014024:	bd10      	pop	{r4, pc}
 8014026:	68d3      	ldr	r3, [r2, #12]
 8014028:	6003      	str	r3, [r0, #0]
 801402a:	e7fb      	b.n	8014024 <enet_rxframe_drop+0x24>
 801402c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014030:	4c0b      	ldr	r4, [pc, #44]	; (8014060 <enet_rxframe_drop+0x60>)
 8014032:	d006      	beq.n	8014042 <enet_rxframe_drop+0x42>
 8014034:	68e2      	ldr	r2, [r4, #12]
 8014036:	6002      	str	r2, [r0, #0]
 8014038:	2b00      	cmp	r3, #0
 801403a:	d0f3      	beq.n	8014024 <enet_rxframe_drop+0x24>
 801403c:	681b      	ldr	r3, [r3, #0]
 801403e:	600b      	str	r3, [r1, #0]
 8014040:	e7f0      	b.n	8014024 <enet_rxframe_drop+0x24>
 8014042:	6824      	ldr	r4, [r4, #0]
 8014044:	3210      	adds	r2, #16
 8014046:	f3c4 0484 	ubfx	r4, r4, #2, #5
 801404a:	4422      	add	r2, r4
 801404c:	6002      	str	r2, [r0, #0]
 801404e:	2b00      	cmp	r3, #0
 8014050:	d0e8      	beq.n	8014024 <enet_rxframe_drop+0x24>
 8014052:	3310      	adds	r3, #16
 8014054:	e7f3      	b.n	801403e <enet_rxframe_drop+0x3e>
 8014056:	bf00      	nop
 8014058:	200129d8 	ldrdcs	r2, [r1], -r8
 801405c:	200129d0 	ldrdcs	r2, [r1], -r0
 8014060:	40029000 	andmi	r9, r2, r0

08014064 <enet_rxframe_size_get>:
 8014064:	b508      	push	{r3, lr}
 8014066:	4b0c      	ldr	r3, [pc, #48]	; (8014098 <enet_rxframe_size_get+0x34>)
 8014068:	681b      	ldr	r3, [r3, #0]
 801406a:	6818      	ldr	r0, [r3, #0]
 801406c:	2800      	cmp	r0, #0
 801406e:	db10      	blt.n	8014092 <enet_rxframe_size_get+0x2e>
 8014070:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8014074:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8014078:	d003      	beq.n	8014082 <enet_rxframe_size_get+0x1e>
 801407a:	f7ff ffc1 	bl	8014000 <enet_rxframe_drop>
 801407e:	2001      	movs	r0, #1
 8014080:	bd08      	pop	{r3, pc}
 8014082:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8014086:	2b21      	cmp	r3, #33	; 0x21
 8014088:	d0f7      	beq.n	801407a <enet_rxframe_size_get+0x16>
 801408a:	f3c0 400d 	ubfx	r0, r0, #16, #14
 801408e:	3804      	subs	r0, #4
 8014090:	e7f6      	b.n	8014080 <enet_rxframe_size_get+0x1c>
 8014092:	2000      	movs	r0, #0
 8014094:	e7f4      	b.n	8014080 <enet_rxframe_size_get+0x1c>
 8014096:	bf00      	nop
 8014098:	200129d8 	ldrdcs	r2, [r1], -r8

0801409c <enet_initpara_reset>:
 801409c:	2200      	movs	r2, #0
 801409e:	4b08      	ldr	r3, [pc, #32]	; (80140c0 <enet_initpara_reset+0x24>)
 80140a0:	e9c3 2200 	strd	r2, r2, [r3]
 80140a4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80140a8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80140ac:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80140b0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80140b4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80140b8:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80140bc:	639a      	str	r2, [r3, #56]	; 0x38
 80140be:	4770      	bx	lr
 80140c0:	200129e0 	andcs	r2, r1, r0, ror #19

080140c4 <enet_deinit>:
 80140c4:	b508      	push	{r3, lr}
 80140c6:	f640 200e 	movw	r0, #2574	; 0xa0e
 80140ca:	f7fe fc0c 	bl	80128e6 <rcu_periph_reset_enable>
 80140ce:	f640 200e 	movw	r0, #2574	; 0xa0e
 80140d2:	f7fe fc0a 	bl	80128ea <rcu_periph_reset_disable>
 80140d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80140da:	f7ff bfdf 	b.w	801409c <enet_initpara_reset>
	...

080140e0 <i2c_clock_config>:
 80140e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80140e2:	4605      	mov	r5, r0
 80140e4:	2002      	movs	r0, #2
 80140e6:	460c      	mov	r4, r1
 80140e8:	4617      	mov	r7, r2
 80140ea:	f7fe fcb5 	bl	8012a58 <rcu_clock_freq_get>
 80140ee:	4927      	ldr	r1, [pc, #156]	; (801418c <i2c_clock_config+0xac>)
 80140f0:	4a27      	ldr	r2, [pc, #156]	; (8014190 <i2c_clock_config+0xb0>)
 80140f2:	fbb0 f1f1 	udiv	r1, r0, r1
 80140f6:	4290      	cmp	r0, r2
 80140f8:	bf34      	ite	cc
 80140fa:	460b      	movcc	r3, r1
 80140fc:	2336      	movcs	r3, #54	; 0x36
 80140fe:	686e      	ldr	r6, [r5, #4]
 8014100:	4a24      	ldr	r2, [pc, #144]	; (8014194 <i2c_clock_config+0xb4>)
 8014102:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014106:	431e      	orrs	r6, r3
 8014108:	4294      	cmp	r4, r2
 801410a:	606e      	str	r6, [r5, #4]
 801410c:	d816      	bhi.n	801413c <i2c_clock_config+0x5c>
 801410e:	3101      	adds	r1, #1
 8014110:	2935      	cmp	r1, #53	; 0x35
 8014112:	d90d      	bls.n	8014130 <i2c_clock_config+0x50>
 8014114:	2336      	movs	r3, #54	; 0x36
 8014116:	622b      	str	r3, [r5, #32]
 8014118:	0064      	lsls	r4, r4, #1
 801411a:	fbb0 f4f4 	udiv	r4, r0, r4
 801411e:	2c04      	cmp	r4, #4
 8014120:	bf38      	it	cc
 8014122:	2404      	movcc	r4, #4
 8014124:	69e8      	ldr	r0, [r5, #28]
 8014126:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801412a:	4304      	orrs	r4, r0
 801412c:	61ec      	str	r4, [r5, #28]
 801412e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014130:	2902      	cmp	r1, #2
 8014132:	d801      	bhi.n	8014138 <i2c_clock_config+0x58>
 8014134:	2302      	movs	r3, #2
 8014136:	e7ee      	b.n	8014116 <i2c_clock_config+0x36>
 8014138:	6229      	str	r1, [r5, #32]
 801413a:	e7ed      	b.n	8014118 <i2c_clock_config+0x38>
 801413c:	4a16      	ldr	r2, [pc, #88]	; (8014198 <i2c_clock_config+0xb8>)
 801413e:	4294      	cmp	r4, r2
 8014140:	d8f5      	bhi.n	801412e <i2c_clock_config+0x4e>
 8014142:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014146:	4353      	muls	r3, r2
 8014148:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801414c:	fbb3 f3f2 	udiv	r3, r3, r2
 8014150:	3301      	adds	r3, #1
 8014152:	622b      	str	r3, [r5, #32]
 8014154:	b997      	cbnz	r7, 801417c <i2c_clock_config+0x9c>
 8014156:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801415a:	fbb0 f4f4 	udiv	r4, r0, r4
 801415e:	69eb      	ldr	r3, [r5, #28]
 8014160:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014164:	61eb      	str	r3, [r5, #28]
 8014166:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801416a:	b90b      	cbnz	r3, 8014170 <i2c_clock_config+0x90>
 801416c:	f044 0401 	orr.w	r4, r4, #1
 8014170:	69eb      	ldr	r3, [r5, #28]
 8014172:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014176:	61eb      	str	r3, [r5, #28]
 8014178:	69e8      	ldr	r0, [r5, #28]
 801417a:	e7d6      	b.n	801412a <i2c_clock_config+0x4a>
 801417c:	2119      	movs	r1, #25
 801417e:	434c      	muls	r4, r1
 8014180:	69eb      	ldr	r3, [r5, #28]
 8014182:	fbb0 f4f4 	udiv	r4, r0, r4
 8014186:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801418a:	e7eb      	b.n	8014164 <i2c_clock_config+0x84>
 801418c:	000f4240 	andeq	r4, pc, r0, asr #4
 8014190:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8014194:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014198:	00061a80 	andeq	r1, r6, r0, lsl #21

0801419c <i2c_ack_config>:
 801419c:	6803      	ldr	r3, [r0, #0]
 801419e:	2901      	cmp	r1, #1
 80141a0:	bf0c      	ite	eq
 80141a2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80141a6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80141aa:	6003      	str	r3, [r0, #0]
 80141ac:	4770      	bx	lr

080141ae <i2c_ackpos_config>:
 80141ae:	6803      	ldr	r3, [r0, #0]
 80141b0:	b919      	cbnz	r1, 80141ba <i2c_ackpos_config+0xc>
 80141b2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80141b6:	6003      	str	r3, [r0, #0]
 80141b8:	4770      	bx	lr
 80141ba:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80141be:	e7fa      	b.n	80141b6 <i2c_ackpos_config+0x8>

080141c0 <i2c_master_addressing>:
 80141c0:	3202      	adds	r2, #2
 80141c2:	bf0c      	ite	eq
 80141c4:	f021 0101 	biceq.w	r1, r1, #1
 80141c8:	f041 0101 	orrne.w	r1, r1, #1
 80141cc:	6101      	str	r1, [r0, #16]
 80141ce:	4770      	bx	lr

080141d0 <i2c_enable>:
 80141d0:	6803      	ldr	r3, [r0, #0]
 80141d2:	f043 0301 	orr.w	r3, r3, #1
 80141d6:	6003      	str	r3, [r0, #0]
 80141d8:	4770      	bx	lr

080141da <i2c_start_on_bus>:
 80141da:	6803      	ldr	r3, [r0, #0]
 80141dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80141e0:	6003      	str	r3, [r0, #0]
 80141e2:	4770      	bx	lr

080141e4 <i2c_stop_on_bus>:
 80141e4:	6803      	ldr	r3, [r0, #0]
 80141e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80141ea:	6003      	str	r3, [r0, #0]
 80141ec:	4770      	bx	lr

080141ee <i2c_data_transmit>:
 80141ee:	6101      	str	r1, [r0, #16]
 80141f0:	4770      	bx	lr

080141f2 <i2c_data_receive>:
 80141f2:	6900      	ldr	r0, [r0, #16]
 80141f4:	b2c0      	uxtb	r0, r0
 80141f6:	4770      	bx	lr

080141f8 <i2c_flag_get>:
 80141f8:	098b      	lsrs	r3, r1, #6
 80141fa:	5818      	ldr	r0, [r3, r0]
 80141fc:	f001 011f 	and.w	r1, r1, #31
 8014200:	40c8      	lsrs	r0, r1
 8014202:	f000 0001 	and.w	r0, r0, #1
 8014206:	4770      	bx	lr

08014208 <i2c_flag_clear>:
 8014208:	f240 5301 	movw	r3, #1281	; 0x501
 801420c:	4299      	cmp	r1, r3
 801420e:	b510      	push	{r4, lr}
 8014210:	d102      	bne.n	8014218 <i2c_flag_clear+0x10>
 8014212:	6943      	ldr	r3, [r0, #20]
 8014214:	6983      	ldr	r3, [r0, #24]
 8014216:	bd10      	pop	{r4, pc}
 8014218:	2201      	movs	r2, #1
 801421a:	098c      	lsrs	r4, r1, #6
 801421c:	5823      	ldr	r3, [r4, r0]
 801421e:	f001 011f 	and.w	r1, r1, #31
 8014222:	fa02 f101 	lsl.w	r1, r2, r1
 8014226:	ea23 0101 	bic.w	r1, r3, r1
 801422a:	5021      	str	r1, [r4, r0]
 801422c:	e7f3      	b.n	8014216 <i2c_flag_clear+0xe>

0801422e <i2s_init>:
 801422e:	b510      	push	{r4, lr}
 8014230:	69c4      	ldr	r4, [r0, #28]
 8014232:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 8014236:	f024 0408 	bic.w	r4, r4, #8
 801423a:	0424      	lsls	r4, r4, #16
 801423c:	0c24      	lsrs	r4, r4, #16
 801423e:	431c      	orrs	r4, r3
 8014240:	4314      	orrs	r4, r2
 8014242:	430c      	orrs	r4, r1
 8014244:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8014248:	61c4      	str	r4, [r0, #28]
 801424a:	bd10      	pop	{r4, pc}

0801424c <i2s_psc_config>:
 801424c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014250:	4698      	mov	r8, r3
 8014252:	2302      	movs	r3, #2
 8014254:	6203      	str	r3, [r0, #32]
 8014256:	4b26      	ldr	r3, [pc, #152]	; (80142f0 <i2s_psc_config+0xa4>)
 8014258:	4617      	mov	r7, r2
 801425a:	4298      	cmp	r0, r3
 801425c:	bf0c      	ite	eq
 801425e:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 8014262:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 8014266:	4a23      	ldr	r2, [pc, #140]	; (80142f4 <i2s_psc_config+0xa8>)
 8014268:	4605      	mov	r5, r0
 801426a:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 801426c:	460e      	mov	r6, r1
 801426e:	4018      	ands	r0, r3
 8014270:	d036      	beq.n	80142e0 <i2s_psc_config+0x94>
 8014272:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8014274:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014278:	1f99      	subs	r1, r3, #6
 801427a:	2908      	cmp	r1, #8
 801427c:	d82c      	bhi.n	80142d8 <i2s_psc_config+0x8c>
 801427e:	3302      	adds	r3, #2
 8014280:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8014282:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8014286:	1c42      	adds	r2, r0, #1
 8014288:	481b      	ldr	r0, [pc, #108]	; (80142f8 <i2s_psc_config+0xac>)
 801428a:	fbb0 f0f2 	udiv	r0, r0, r2
 801428e:	4358      	muls	r0, r3
 8014290:	0040      	lsls	r0, r0, #1
 8014292:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 8014296:	f04f 010a 	mov.w	r1, #10
 801429a:	d124      	bne.n	80142e6 <i2s_psc_config+0x9a>
 801429c:	0a04      	lsrs	r4, r0, #8
 801429e:	434c      	muls	r4, r1
 80142a0:	fbb4 f4f6 	udiv	r4, r4, r6
 80142a4:	260a      	movs	r6, #10
 80142a6:	3405      	adds	r4, #5
 80142a8:	fbb4 f4f6 	udiv	r4, r4, r6
 80142ac:	f004 0301 	and.w	r3, r4, #1
 80142b0:	0864      	lsrs	r4, r4, #1
 80142b2:	1ea2      	subs	r2, r4, #2
 80142b4:	2afd      	cmp	r2, #253	; 0xfd
 80142b6:	bf86      	itte	hi
 80142b8:	2300      	movhi	r3, #0
 80142ba:	2402      	movhi	r4, #2
 80142bc:	021b      	lslls	r3, r3, #8
 80142be:	431c      	orrs	r4, r3
 80142c0:	ea44 0408 	orr.w	r4, r4, r8
 80142c4:	622c      	str	r4, [r5, #32]
 80142c6:	69eb      	ldr	r3, [r5, #28]
 80142c8:	f023 0307 	bic.w	r3, r3, #7
 80142cc:	61eb      	str	r3, [r5, #28]
 80142ce:	69ea      	ldr	r2, [r5, #28]
 80142d0:	4317      	orrs	r7, r2
 80142d2:	61ef      	str	r7, [r5, #28]
 80142d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80142d8:	2b0f      	cmp	r3, #15
 80142da:	bf08      	it	eq
 80142dc:	2314      	moveq	r3, #20
 80142de:	e7cf      	b.n	8014280 <i2s_psc_config+0x34>
 80142e0:	f7fe fbba 	bl	8012a58 <rcu_clock_freq_get>
 80142e4:	e7d5      	b.n	8014292 <i2s_psc_config+0x46>
 80142e6:	b90f      	cbnz	r7, 80142ec <i2s_psc_config+0xa0>
 80142e8:	0944      	lsrs	r4, r0, #5
 80142ea:	e7d8      	b.n	801429e <i2s_psc_config+0x52>
 80142ec:	0984      	lsrs	r4, r0, #6
 80142ee:	e7d6      	b.n	801429e <i2s_psc_config+0x52>
 80142f0:	40003800 	andmi	r3, r0, r0, lsl #16
 80142f4:	40021000 	andmi	r1, r2, r0
 80142f8:	017d7840 	cmneq	sp, r0, asr #16

080142fc <i2s_enable>:
 80142fc:	69c3      	ldr	r3, [r0, #28]
 80142fe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8014302:	61c3      	str	r3, [r0, #28]
 8014304:	4770      	bx	lr

08014306 <i2s_disable>:
 8014306:	69c3      	ldr	r3, [r0, #28]
 8014308:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801430c:	61c3      	str	r3, [r0, #28]
 801430e:	4770      	bx	lr

08014310 <spi_dma_enable>:
 8014310:	6843      	ldr	r3, [r0, #4]
 8014312:	b919      	cbnz	r1, 801431c <spi_dma_enable+0xc>
 8014314:	f043 0302 	orr.w	r3, r3, #2
 8014318:	6043      	str	r3, [r0, #4]
 801431a:	4770      	bx	lr
 801431c:	f043 0301 	orr.w	r3, r3, #1
 8014320:	e7fa      	b.n	8014318 <spi_dma_enable+0x8>
	...

Disassembly of section .rodata:

08014324 <vtable for DisplayHandler-0xcc>:
 8014324:	00000003 	andeq	r0, r0, r3
 8014328:	000000aa 	andeq	r0, r0, sl, lsr #1
 801432c:	00000006 	andeq	r0, r0, r6
 8014330:	00000000 	andeq	r0, r0, r0
 8014334:	01ff0000 	mvnseq	r0, r0
 8014338:	00000001 	andeq	r0, r0, r1
 801433c:	00000001 	andeq	r0, r0, r1
 8014340:	00000001 	andeq	r0, r0, r1
	...
 801434c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014350:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014354:	00000000 	andeq	r0, r0, r0
 8014358:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801435c:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8014360:	35323a37 	ldrcc	r3, [r2, #-2615]!	; 0xfffff5c9
 8014364:	62654600 	rsbvs	r4, r5, #0, 12
 8014368:	20333220 	eorscs	r3, r3, r0, lsr #4
 801436c:	32323032 	eorscc	r3, r2, #50	; 0x32
 8014370:	43417300 	movtmi	r7, #4864	; 0x1300
 8014374:	3145204e 	cmpcc	r5, lr, asr #32
 8014378:	2031332e 	eorscs	r3, r1, lr, lsr #6
 801437c:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8014380:	7869506d 	stmdavc	r9!, {r0, r2, r3, r5, r6, ip, lr}^
 8014384:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8014388:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 801438c:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8014390:	317b2072 	cmncc	fp, r2, ror r0
 8014394:	20342078 	eorscs	r2, r4, r8, ror r0
 8014398:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 801439c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80143a0:	5b1b7d73 	blpl	86f3974 <__exidx_end+0x6dd4e8>
 80143a4:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 80143a8:	6f635f2e 	svcvs	0x00635f2e
 80143ac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80143b0:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 80143b4:	00707474 	rsbseq	r7, r0, r4, ror r4
 80143b8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80143bc:	4341733d 	movtmi	r7, #4925	; 0x133d
 80143c0:	3145204e 	cmpcc	r5, lr, asr #32
 80143c4:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80143c8:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80143cc:	4173006c 	cmnmi	r3, ip, rrx
 80143d0:	50204e43 	eorpl	r4, r0, r3, asr #28
 80143d4:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80143d8:	25003120 	strcs	r3, [r0, #-288]	; 0xfffffee0
 80143dc:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 80143e0:	64254720 	strtvs	r4, [r5], #-1824	; 0xfffff8e0
 80143e4:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80143e8:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 80143ec:	00000075 	andeq	r0, r0, r5, ror r0

080143f0 <vtable for DisplayHandler>:
	...
 80143f8:	0800887b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, fp, pc}
 80143fc:	080088d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, pc}
 8014400:	080088fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, fp, pc}

08014404 <vtable for PixelDmxStartStop>:
	...
 801440c:	0800887d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, pc}
 8014410:	080088dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, pc}
 8014414:	08008881 	stmdaeq	r0, {r0, r7, fp, pc}
 8014418:	08008891 	stmdaeq	r0, {r0, r4, r7, fp, pc}

0801441c <vtable for Reboot>:
	...
 8014424:	080088a1 	stmdaeq	r0, {r0, r5, r7, fp, pc}
 8014428:	080088c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, pc}
 801442c:	080088a5 	stmdaeq	r0, {r0, r2, r5, r7, fp, pc}

08014430 <CSWTCH.67>:
 8014430:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014434:	 			; <UNDEFINED> instruction: 0x312e3146

08014435 <SOFTWARE_VERSION>:
 8014435:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8014439:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 801443d:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8014441:	00302e30 	eorseq	r2, r0, r0, lsr lr
 8014445:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8014449:	73252073 			; <UNDEFINED> instruction: 0x73252073
 801444d:	33444700 	movtcc	r4, #18176	; 0x4700
 8014451:	30314632 	eorscc	r4, r1, r2, lsr r6
 8014455:	30005237 	andcc	r5, r0, r7, lsr r2
 8014459:	6f4e202e 	svcvs	0x004e202e
 801445d:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8014461:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8014465:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8014469:	202c6465 	eorcs	r6, ip, r5, ror #8
 801446d:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8014471:	6f687320 	svcvs	0x00687320
 8014475:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8014479:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 801447d:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8014481:	000a216e 	andeq	r2, sl, lr, ror #2
 8014485:	00505448 	subseq	r5, r0, r8, asr #8
 8014489:	0050544c 	subseq	r5, r0, ip, asr #8
 801448d:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8014491:	000a6567 	andeq	r6, sl, r7, ror #10
 8014495:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8014499:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 801449d:	203a2065 	eorscs	r2, sl, r5, rrx
 80144a1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80144a5:	20000a64 	andcs	r0, r0, r4, ror #20
 80144a9:	20444943 	subcs	r4, r4, r3, asr #18
 80144ad:	20202020 	eorcs	r2, r0, r0, lsr #32
 80144b1:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80144b5:	20000a73 	andcs	r0, r0, r3, ror sl
 80144b9:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80144bd:	000a7475 	andeq	r7, sl, r5, ror r4
 80144c1:	6f502020 	svcvs	0x00502020
 80144c5:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 80144c9:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 80144cd:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 80144d1:	20657372 	rsbcs	r7, r5, r2, ror r3
 80144d5:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 80144d9:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80144dd:	20000a5d 	andcs	r0, r0, sp, asr sl
 80144e1:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 80144e5:	20000a74 	andcs	r0, r0, r4, ror sl
 80144e9:	726f5020 	rsbvc	r5, pc, #32
 80144ed:	32252074 	eorcc	r2, r5, #116	; 0x74
 80144f1:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80144f5:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80144f9:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80144fd:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8014501:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8014505:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8014509:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 801450d:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014511:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8014515:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8014519:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 801451d:	000a6465 	andeq	r6, sl, r5, ror #8

08014521 <E131MsgConst::START>:
 8014521:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8014525:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014529:	43417320 	movtmi	r7, #4896	; 0x1320
 801452d:	3145204e 	cmpcc	r5, lr, asr #32
 8014531:	0031332e 	eorseq	r3, r1, lr, lsr #6

08014535 <E131MsgConst::PARAMS>:
 8014535:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014539:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801453d:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014541:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014545:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014549:	 	movwvc	r3, #307	; 0x133

0801454c <E131MsgConst::STARTED>:
 801454c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014550:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014554:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8014558:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801455c:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8014560:	3a227325 	bcc	88b11fc <__exidx_end+0x89ad70>
 8014564:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014568:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 801456c:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8014570:	2522000a 	strcs	r0, [r2, #-10]!
 8014574:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8014578:	23002c64 	movwcs	r2, #3172	; 0xc64
 801457c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8014580:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8014584:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8014588:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 801458c:	00747570 	rsbseq	r7, r4, r0, ror r5
 8014590:	00707468 	rsbseq	r7, r0, r8, ror #8
 8014594:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8014598:	20584d44 	subscs	r4, r8, r4, asr #26
 801459c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80145a0:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 80145a4:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 80145a8:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 80145ac:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 80145b0:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

080145b3 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 80145b3:	61736964 	cmnvs	r3, r4, ror #18
 80145b7:	5f656c62 	svcpl	0x00656c62
 80145bb:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80145bf:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 80145c3:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801405e <enet_rxframe_drop+0x5e>
 80145c7:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

080145c9 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 80145c9:	61736964 	cmnvs	r3, r4, ror #18
 80145cd:	5f656c62 	svcpl	0x00656c62
 80145d1:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80145d5:	5f6b726f 	svcpl	0x006b726f
 80145d9:	61746164 	cmnvs	r4, r4, ror #2
 80145dd:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 80145e1:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80145e5:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8014080 <enet_rxframe_size_get+0x1c>
 80145e9:	 	rsbsvc	r0, r0, #116	; 0x74

080145eb <E131ParamsConst::PRIORITY>:
 80145eb:	6f697270 	svcvs	0x00697270
 80145ef:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80145f3:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80145f7:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80145fb:	72700000 	rsbsvc	r0, r0, #0
 80145ff:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014603:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8014607:	5f74726f 	svcpl	0x0074726f
 801460b:	00000062 	andeq	r0, r0, r2, rrx
 801460f:	6f697270 	svcvs	0x00697270
 8014613:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8014617:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801461b:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801461f:	72700000 	rsbsvc	r0, r0, #0
 8014623:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014627:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801462b:	5f74726f 	svcpl	0x0074726f
 801462f:	00000064 	andeq	r0, r0, r4, rrx

08014633 <E131ParamsConst::FILE_NAME>:
 8014633:	31333165 	teqcc	r3, r5, ror #2
 8014637:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

0801463c <E117Const::ACN_PACKET_IDENTIFIER>:
 801463c:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8014640:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8014644:	00000037 	andeq	r0, r0, r7, lsr r0

08014648 <E131BridgeConst::VERSION>:
 8014648:	30251801 	eorcc	r1, r5, r1, lsl #16
 801464c:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8014650:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 8014654:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8014658:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 801465c:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 8014660:	30252d78 	eorcc	r2, r5, r8, ror sp
 8014664:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014668:	30257832 	eorcc	r7, r5, r2, lsr r8
 801466c:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014670:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014674:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014678:	00007832 	andeq	r7, r0, r2, lsr r8

0801467c <vtable for WS28xxDmx>:
	...
 8014684:	0800ac31 	stmdaeq	r0, {r0, r4, r5, sl, fp, sp, pc}
 8014688:	0800ac51 	stmdaeq	r0, {r0, r4, r6, sl, fp, sp, pc}
 801468c:	0800ac89 	stmdaeq	r0, {r0, r3, r7, sl, fp, sp, pc}
 8014690:	0800acd3 	stmdaeq	r0, {r0, r1, r4, r6, r7, sl, fp, sp, pc}
 8014694:	0800ad3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, sl, fp, sp, pc}
 8014698:	0800ac63 	stmdaeq	r0, {r0, r1, r5, r6, sl, fp, sp, pc}
 801469c:	0800b5f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, ip, sp, pc}
 80146a0:	0800aca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, sp, pc}
 80146a4:	0800ac29 	stmdaeq	r0, {r0, r3, r5, sl, fp, sp, pc}
 80146a8:	0800ac2d 	stmdaeq	r0, {r0, r2, r3, r5, sl, fp, sp, pc}
 80146ac:	0800acfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 80146b0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80146b4:	2a2e253a 	bcs	8b9dba4 <__exidx_end+0xb87718>
 80146b8:	23002c66 	movwcs	r2, #3174	; 0xc66
 80146bc:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80146c0:	0a662a2e 	beq	999ef80 <__exidx_end+0x1988af4>
 80146c4:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80146c8:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 80146cc:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 80146d0:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 80146d4:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80146d8:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80146dc:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 80146e0:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 80146e4:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 80146e8:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 80146ec:	47002973 	smlsdxmi	r0, r3, r9, r2
 80146f0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 80146f4:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80146f8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80146fc:	6162206b 	cmnvs	r2, fp, rrx
 8014700:	20646573 	rsbcs	r6, r4, r3, ror r5
 8014704:	70696863 	rsbvc	r6, r9, r3, ror #16
 8014708:	50410073 	subpl	r0, r1, r3, ror r0
 801470c:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 8014710:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 8014714:	00323238 	eorseq	r3, r2, r8, lsr r2
 8014718:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 801471c:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 8014720:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8014724:	78695000 	stmdavc	r9!, {ip, lr}^
 8014728:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 801472c:	7020584d 	eorvc	r5, r0, sp, asr #16
 8014730:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 8014734:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 8014738:	20000a73 	andcs	r0, r0, r3, ror sl
 801473c:	756f7247 	strbvc	r7, [pc, #-583]!	; 80144fd <SOFTWARE_VERSION+0xc8>
 8014740:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8014744:	756f6320 	strbvc	r6, [pc, #-800]!	; 801442c <vtable for Reboot+0x10>
 8014748:	3a20746e 	bcc	8831908 <__exidx_end+0x81b47c>
 801474c:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8014750:	6f72475b 	svcvs	0x0072475b
 8014754:	20737075 	rsbscs	r7, r3, r5, ror r0
 8014758:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801475c:	55000a5d 	strpl	r0, [r0, #-2653]	; 0xfffff5a3
 8014760:	6f6e6b6e 	svcvs	0x006e6b6e
 8014764:	 	mcrmi	14, 0, r6, cr0, cr7, {3}

08014767 <s_patternName>:
 8014767:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8014773:	61520000 	cmpvs	r2, r0
 8014777:	6f626e69 	svcvs	0x00626e69
 801477b:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801477f:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8014783:	61656854 	cmnvs	r5, r4, asr r8
 8014787:	20726574 	rsbscs	r6, r2, r4, ror r5
 801478b:	73616863 	cmnvc	r1, #6488064	; 0x630000
 801478f:	6f430065 	svcvs	0x00430065
 8014793:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 8014797:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801479b:	00000065 	andeq	r0, r0, r5, rrx
 801479f:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 80147a3:	0072656e 	rsbseq	r6, r2, lr, ror #10
 80147a7:	00000000 	andeq	r0, r0, r0
 80147ab:	61460000 	mrsvs	r0, (UNDEF: 70)
 80147af:	00006564 	andeq	r6, r0, r4, ror #10
	...
 80147bb:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80147bf:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80147c3:	 	ldrbmi	r0, [r2, -r4, rrx]

080147c5 <PixelType::MAPS>:
 80147c5:	00424752 	subeq	r4, r2, r2, asr r7
 80147c9:	00474252 	subeq	r4, r7, r2, asr r2
 80147cd:	00425247 	subeq	r5, r2, r7, asr #4
 80147d1:	00524247 	subseq	r4, r2, r7, asr #4
 80147d5:	00475242 	subeq	r5, r7, r2, asr #4
 80147d9:	00524742 	subseq	r4, r2, r2, asr #14

080147dd <PixelType::TYPES>:
 80147dd:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80147e1:	00003130 	andeq	r3, r0, r0, lsr r1
 80147e5:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80147e9:	00003131 	andeq	r3, r0, r1, lsr r1
 80147ed:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80147f1:	00003231 	andeq	r3, r0, r1, lsr r2
 80147f5:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80147f9:	00423231 	subeq	r3, r2, r1, lsr r2
 80147fd:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8014801:	00003331 	andeq	r3, r0, r1, lsr r3
 8014805:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8014809:	00003531 	andeq	r3, r0, r1, lsr r5
 801480d:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8014811:	00003231 	andeq	r3, r0, r1, lsr r2
 8014815:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8014819:	00573231 	subseq	r3, r7, r1, lsr r2
 801481d:	31534355 	cmpcc	r3, r5, asr r3
 8014821:	00333039 	eorseq	r3, r3, r9, lsr r0
 8014825:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8014829:	00333039 	eorseq	r3, r3, r9, lsr r0
 801482d:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8014831:	00003231 	andeq	r3, r0, r1, lsr r2
 8014835:	31415041 	cmpcc	r1, r1, asr #32
 8014839:	00003230 	andeq	r3, r0, r0, lsr r2
 801483d:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8014841:	00003232 	andeq	r3, r0, r2, lsr r2
 8014845:	31383950 	teqcc	r8, r0, asr r9
 8014849:	00000033 	andeq	r0, r0, r3, lsr r0
 801484d:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014851:	6170206c 	cmnvs	r0, ip, rrx
 8014855:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8014859:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
 801485d:	5420000a 	strtpl	r0, [r0], #-10
 8014861:	20657079 	rsbcs	r7, r5, r9, ror r0
 8014865:	3a202020 	bcc	881c8ed <__exidx_end+0x806461>
 8014869:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801486d:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8014871:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 8014875:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8014879:	3a202020 	bcc	881c901 <__exidx_end+0x806475>
 801487d:	0a642520 	beq	991dd05 <__exidx_end+0x1907879>
 8014881:	614d2000 	mrsvs	r2, (UNDEF: 77)
 8014885:	6e697070 	mcrvs	0, 3, r7, cr9, cr0, {3}
 8014889:	203a2067 	eorscs	r2, sl, r7, rrx
 801488d:	5b207325 	blpl	8831529 <__exidx_end+0x81b09d>
 8014891:	0a5d6425 	beq	976d92d <__exidx_end+0x17574a1>
 8014895:	30542000 	subscc	r2, r4, r0
 8014899:	20202048 	eorcs	r2, r0, r8, asr #32
 801489d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80148a1:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 80148a5:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 80148a9:	0a5d5825 	beq	976a945 <__exidx_end+0x17544b9>
 80148ad:	31542000 	cmpcc	r4, r0
 80148b1:	20202048 	eorcs	r2, r0, r8, asr #32
 80148b5:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80148b9:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 80148bd:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 80148c1:	0a5d5825 	beq	976a95d <__exidx_end+0x17544d1>
 80148c5:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80148c9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80148cd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80148d1:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80148d5:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80148d9:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 80148dd:	6425000a 	strtvs	r0, [r5], #-10
 80148e1:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80148e5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80148e9:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 80148ed:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80148f1:	000a6425 	andeq	r6, sl, r5, lsr #8
 80148f5:	4f006e4f 	svcmi	0x00006e4f
 80148f9:	64006666 	strvs	r6, [r0], #-1638	; 0xfffff99a
 80148fd:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8014901:	253a7961 	ldrcs	r7, [sl, #-2401]!	; 0xfffff69f
 8014905:	74000a73 	strvc	r0, [r0], #-2675	; 0xfffff58d
 8014909:	3a707466 	bcc	9c31aa9 <__exidx_end+0x1c1b61d>
 801490d:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014911:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014915:	3a6e6f69 	bcc	9bb06c1 <__exidx_end+0x1b9a235>
 8014919:	75007325 	strvc	r7, [r0, #-805]	; 0xfffffcdb
 801491d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014921:	25203a65 	strcs	r3, [r0, #-2661]!	; 0xfffff59b
 8014925:	000a7375 	andeq	r7, sl, r5, ror r3
 8014929:	4f525245 	svcmi	0x00525245
 801492d:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8014931:	000a7465 	andeq	r7, sl, r5, ror #8
 8014935:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8014939:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 801493d:	616c7073 	smcvs	50947	; 0xc703
 8014941:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8014945:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8014949:	000a2123 	andeq	r2, sl, r3, lsr #2
 801494d:	4f525245 	svcmi	0x00525245
 8014951:	0a3f2352 	beq	8fdd6a1 <__exidx_end+0xfc7215>
 8014955:	62657200 	rsbvs	r7, r5, #0, 4
 8014959:	23746f6f 	cmncs	r4, #444	; 0x1bc
 801495d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8014961:	00237473 	eoreq	r7, r3, r3, ror r4
 8014965:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014969:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 801496d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014971:	76002365 	strvc	r2, [r0], -r5, ror #6
 8014975:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014979:	00236e6f 	eoreq	r6, r3, pc, ror #28
 801497d:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014981:	63616600 	cmnvs	r1, #0, 12
 8014985:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014989:	 	tstmi	r0, r3, lsr #6

0801498c <s_Node>:
 801498c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014990:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801499c:	41730000 	cmnmi	r3, r0
 80149a0:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80149a4:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80149b0:	2043534f 	subcs	r5, r3, pc, asr #6
 80149b4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80149b8:	00007265 	andeq	r7, r0, r5, ror #4
 80149bc:	00000000 	andeq	r0, r0, r0
 80149c0:	544c0000 	strbpl	r0, [ip], #-0
 80149c4:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80149d4:	2043534f 	subcs	r5, r3, pc, asr #6
 80149d8:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80149dc:	0000746e 	andeq	r7, r0, lr, ror #8
 80149e0:	00000000 	andeq	r0, r0, r0
 80149e4:	44520000 	ldrbmi	r0, [r2], #-0
 80149e8:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80149ec:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80149f0:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80149f4:	0000796c 	andeq	r7, r0, ip, ror #18
 80149f8:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80149fc:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8014a08:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8014a0c:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8014a1c:	00504444 	subseq	r4, r0, r4, asr #8
	...

08014a2e <s_Output>:
 8014a2e:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8014a3a:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8014a46:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014a4a:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8014a4e:	00000000 	andeq	r0, r0, r0
 8014a52:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014a56:	0000006c 	andeq	r0, r0, ip, rrx
 8014a5a:	00000000 	andeq	r0, r0, r0
 8014a5e:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8014a62:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8014a66:	00000000 	andeq	r0, r0, r0
 8014a6a:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8014a76:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014a7a:	00006769 	andeq	r6, r0, r9, ror #14
 8014a7e:	00000000 	andeq	r0, r0, r0
 8014a82:	70657453 	rsbvc	r7, r5, r3, asr r4
 8014a86:	00726570 	rsbseq	r6, r2, r0, ror r5
 8014a8a:	00000000 	andeq	r0, r0, r0
 8014a8e:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8014a92:	00007265 	andeq	r7, r0, r5, ror #4
 8014a96:	00000000 	andeq	r0, r0, r0
 8014a9a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014a9e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8014aa2:	00000000 	andeq	r0, r0, r0
 8014aa6:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8014aaa:	00006c61 	andeq	r6, r0, r1, ror #24
 8014aae:	00000000 	andeq	r0, r0, r0
 8014ab2:	20424752 	subcs	r4, r2, r2, asr r7
 8014ab6:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8014aba:	0000006c 	andeq	r0, r0, ip, rrx
	...

08014ac0 <RemoteConfig::s_GET>:
 8014ac0:	0800d7cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, ip, lr, pc}
 8014ac4:	00000000 	andeq	r0, r0, r0
 8014ac8:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}
 8014acc:	00000008 	andeq	r0, r0, r8
 8014ad0:	0800cc81 	stmdaeq	r0, {r0, r7, sl, fp, lr, pc}
 8014ad4:	00000000 	andeq	r0, r0, r0
 8014ad8:	0801495f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, fp, lr}
 8014adc:	00000005 	andeq	r0, r0, r5
 8014ae0:	0800cc81 	stmdaeq	r0, {r0, r7, sl, fp, lr, pc}
 8014ae4:	00000000 	andeq	r0, r0, r0
 8014ae8:	08014965 	stmdaeq	r1, {r0, r2, r5, r6, r8, fp, lr}
 8014aec:	00000006 	andeq	r0, r0, r6
 8014af0:	0800ce85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, lr, pc}
 8014af4:	00000000 	andeq	r0, r0, r0
 8014af8:	0801496c 	stmdaeq	r1, {r2, r3, r5, r6, r8, fp, lr}
 8014afc:	00000007 	andeq	r0, r0, r7
 8014b00:	0800ce41 	stmdaeq	r0, {r0, r6, r9, sl, fp, lr, pc}
 8014b04:	00000000 	andeq	r0, r0, r0
 8014b08:	08014974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, lr}
 8014b0c:	00000008 	andeq	r0, r0, r8
 8014b10:	0800cd69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, lr, pc}
 8014b14:	00000000 	andeq	r0, r0, r0
 8014b18:	0801493b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, lr}
 8014b1c:	00000008 	andeq	r0, r0, r8
 8014b20:	0800d105 	stmdaeq	r0, {r0, r2, r8, ip, lr, pc}
 8014b24:	00000000 	andeq	r0, r0, r0
 8014b28:	0801497d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, fp, lr}
 8014b2c:	00010004 	andeq	r0, r1, r4
 8014b30:	0800cde9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp, lr, pc}
 8014b34:	00000000 	andeq	r0, r0, r0
 8014b38:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 8014b3c:	00000005 	andeq	r0, r0, r5
 8014b40:	0800d4b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, ip, lr, pc}
 8014b44:	00000000 	andeq	r0, r0, r0
 8014b48:	08014982 	stmdaeq	r1, {r1, r7, r8, fp, lr}
 8014b4c:	00000009 	andeq	r0, r0, r9

08014b50 <RemoteConfig::s_SET>:
 8014b50:	0800cdc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, lr, pc}
 8014b54:	00000000 	andeq	r0, r0, r0
 8014b58:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 8014b5c:	00010005 	andeq	r0, r1, r5
 8014b60:	0800ced9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, lr, pc}
 8014b64:	00000000 	andeq	r0, r0, r0
 8014b68:	0801493b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, lr}
 8014b6c:	00010008 	andeq	r0, r1, r8
 8014b70:	6f626552 	svcvs	0x00626552
 8014b74:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8014b78:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8014b7c:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8014b80:	6f6f6265 	svcvs	0x006f6265
 8014b84:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014b88:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8014b8c:	6f637200 	svcvs	0x00637200
 8014b90:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8014b94:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014b98:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8014b9c:	6b726f77 	blvs	9cb0980 <__exidx_end+0x1c9a4f4>
 8014ba0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014ba4:	73696400 	cmnvc	r9, #0, 8
 8014ba8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014bac:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014bb0:	33316500 	teqcc	r1, #0, 10
 8014bb4:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8014bb8:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 8014bbc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8014bc0:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8014bc4:	00000074 	andeq	r0, r0, r4, ror r0

08014bc8 <RemoteConfig::s_TXT>:
 8014bc8:	0800d10d 	stmdaeq	r0, {r0, r2, r3, r8, ip, lr, pc}
 8014bcc:	00000000 	andeq	r0, r0, r0
 8014bd0:	0800d3d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, ip, lr, pc}
 8014bd4:	00000000 	andeq	r0, r0, r0
 8014bd8:	08014b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, lr}
 8014bdc:	0000000b 	andeq	r0, r0, fp
 8014be0:	0000000c 	andeq	r0, r0, ip
 8014be4:	0800d139 	stmdaeq	r0, {r0, r3, r4, r5, r8, ip, lr, pc}
 8014be8:	00000000 	andeq	r0, r0, r0
 8014bec:	0800d409 	stmdaeq	r0, {r0, r3, sl, ip, lr, pc}
 8014bf0:	00000000 	andeq	r0, r0, r0
 8014bf4:	08014b99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, fp, lr}
 8014bf8:	0000000b 	andeq	r0, r0, fp
 8014bfc:	00000000 	andeq	r0, r0, r0
 8014c00:	0800d1bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, ip, lr, pc}
 8014c04:	00000000 	andeq	r0, r0, r0
 8014c08:	0800d489 	stmdaeq	r0, {r0, r3, r7, sl, ip, lr, pc}
 8014c0c:	00000000 	andeq	r0, r0, r0
 8014c10:	08014ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp, lr}
 8014c14:	0000000b 	andeq	r0, r0, fp
 8014c18:	0000000f 	andeq	r0, r0, pc
 8014c1c:	0800d165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip, lr, pc}
 8014c20:	00000000 	andeq	r0, r0, r0
 8014c24:	0800d431 	stmdaeq	r0, {r0, r4, r5, sl, ip, lr, pc}
 8014c28:	00000000 	andeq	r0, r0, r0
 8014c2c:	08014bb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, fp, lr}
 8014c30:	00000008 	andeq	r0, r0, r8
 8014c34:	00000004 	andeq	r0, r0, r4
 8014c38:	0800d191 	stmdaeq	r0, {r0, r4, r7, r8, ip, lr, pc}
 8014c3c:	00000000 	andeq	r0, r0, r0
 8014c40:	0800d45d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, ip, lr, pc}
 8014c44:	00000000 	andeq	r0, r0, r0
 8014c48:	08014bba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, fp, lr}
 8014c4c:	0000000b 	andeq	r0, r0, fp
 8014c50:	00000003 	andeq	r0, r0, r3
 8014c54:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8014c58:	4f500054 	svcmi	0x00500054
 8014c5c:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8014c60:	00505454 	subseq	r5, r0, r4, asr r4
 8014c64:	31000a20 	tstcc	r0, r0, lsr #20
 8014c68:	3a00312e 	bcc	8021128 <__exidx_end+0xac9c>
 8014c6c:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8014c70:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8014c74:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8014c78:	3b200065 	blcc	8814e14 <__exidx_end+0x7fe988>
 8014c7c:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8014c80:	6163696c 	cmnvs	r3, ip, ror #18
 8014c84:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014c88:	6f736a2f 	svcvs	0x00736a2f
 8014c8c:	6f43006e 	svcvs	0x0043006e
 8014c90:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014c94:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8014c98:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8014c9c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8014ca0:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8014ca4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014ca8:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8014cac:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8014cb0:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8014cb4:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8014cb8:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8014cbc:	2f00736a 	svccs	0x0000736a
 8014cc0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8014cc4:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8014cc8:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8014ccc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014cd0:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8014cd4:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014cd8:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8014cdc:	616c7073 	smcvs	50947	; 0xc703
 8014ce0:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8014ce4:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014ce8:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8014cec:	6f736a2f 	svcvs	0x00736a2f
 8014cf0:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8014cf4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014cf8:	62657200 	rsbvs	r7, r5, #0, 4
 8014cfc:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8014d00:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8014d04:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8014d08:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8014d0c:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8014d10:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8014d14:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014d18:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8014d1c:	0a3e6c6d 	beq	8fafed8 <__exidx_end+0xf99a4c>
 8014d20:	6165683c 	cmnvs	r5, ip, lsr r8
 8014d24:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8014d28:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8014d2c:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8014d30:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8014d34:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8014d38:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8014d3c:	6165682f 	cmnvs	r5, pc, lsr #16
 8014d40:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8014d44:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014d48:	31683c3e 	cmncc	r8, lr, lsr ip
 8014d4c:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8014d50:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8014d54:	6f622f3c 	svcvs	0x00622f3c
 8014d58:	0a3e7964 	beq	8fb32f0 <__exidx_end+0xf9ce64>
 8014d5c:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8014d60:	0a3e6c6d 	beq	8faff1c <__exidx_end+0xf99a90>
 8014d64:	71655200 	cmnvc	r5, r0, lsl #4
 8014d68:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8014d6c:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8014d70:	20797469 	rsbscs	r7, r9, r9, ror #8
 8014d74:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8014d78:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8014d7c:	6f4e0065 	svcvs	0x004e0065
 8014d80:	6f462074 	svcvs	0x00462074
 8014d84:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8014d88:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8014d8c:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8014d90:	20495255 	subcs	r5, r9, r5, asr r2
 8014d94:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8014d98:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8014d9c:	72655600 	rsbvc	r5, r5, #0, 12
 8014da0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8014da4:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8014dac <RemoteConfig::s_TXT+0x1e4>
 8014da8:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8014dac:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014db0:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8014db4:	6f687465 	svcvs	0x00687465
 8014db8:	6f4e2064 	svcvs	0x004e2064
 8014dbc:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8014dc0:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8014dc4:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014dc8:	61420064 	cmpvs	r2, r4, rrx
 8014dcc:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8014dd0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8014dd4:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 8014dd8:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8014ddc:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8014de0:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8014de4:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 8014de8:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8014dec:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8014df0:	20726576 	rsbscs	r6, r2, r6, ror r5
 8014df4:	6f727245 	svcvs	0x00727245
 8014df8:	4b4f0072 	blmi	93d4fc8 <__exidx_end+0x13beb3c>
 8014dfc:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8014e00:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8014e04:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8014e08:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014e0c:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8014e10:	0a3e6c6d 	beq	8faffcc <__exidx_end+0xf99b40>
 8014e14:	6165683c 	cmnvs	r5, ip, lsr r8
 8014e18:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8014e1c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8014e20:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8014e24:	2f3c7325 	svccs	0x003c7325
 8014e28:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8014e2c:	2f3c3e65 	svccs	0x003c3e65
 8014e30:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8014e34:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8014e38:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014e3c:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8014e40:	2f3c7325 	svccs	0x003c7325
 8014e44:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8014e48:	646f622f 	strbtvs	r6, [pc], #-559	; 8014e50 <RemoteConfig::s_TXT+0x288>
 8014e4c:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8014e50:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8014e54:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8014e58:	50545448 	subspl	r5, r4, r8, asr #8
 8014e5c:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8014e60:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8014e64:	0a0d7325 	beq	8371b00 <__exidx_end+0x35b674>
 8014e68:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014e6c:	203a7265 	eorscs	r7, sl, r5, ror #4
 8014e70:	0a0d7325 	beq	8371b0c <__exidx_end+0x35b680>
 8014e74:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014e78:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014e7c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8014e80:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8014e84:	6f430a0d 	svcvs	0x00430a0d
 8014e88:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014e8c:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8014e90:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8014e94:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014e98:	6f430a0d 	svcvs	0x00430a0d
 8014e9c:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8014ea0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014ea4:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8014ea8:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8014eac:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08014eb0 <contentType>:
 8014eb0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014eb4:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8014eb8:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8014ed0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014ed4:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8014ef0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014ef4:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8014ef8:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8014efc:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8014f10:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8014f14:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8014f18:	2f6e6f69 	svccs	0x006e6f69
 8014f1c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08014f30 <RemoteConfigConst::PARAMS_DISABLE>:
 8014f30:	61736964 	cmnvs	r3, r4, ror #18
 8014f34:	00656c62 	rsbeq	r6, r5, r2, ror #24

08014f38 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8014f38:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8014f3c:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8014f40:	00747874 	rsbseq	r7, r4, r4, ror r8

08014f44 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8014f44:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014f48:	5f79616c 	svcpl	0x0079616c
 8014f4c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014f51 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8014f51:	61736964 	cmnvs	r3, r4, ror #18
 8014f55:	5f656c62 	svcpl	0x00656c62
 8014f59:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8014f5d:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014f5f <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8014f5f:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014f63:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8014f67:	6f6f6265 	svcvs	0x006f6265
 8014f6b:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08014f6d <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8014f6d:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014f71:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8014a0d <s_Node+0x81>
 8014f75:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014f79:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014f7b <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8014f7b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014f7f:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8014f83:	6f746361 	svcvs	0x00746361
 8014f87:	7b007972 	blvc	8033557 <__exidx_end+0x1d0cb>
 8014f8b:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8014f8f:	7b3a2274 	blvc	8e9d967 <__exidx_end+0xe874db>
 8014f93:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8014f97:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8014f9b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014f9f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014fa3:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8014fa7:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8014fab:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014faf:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014fb3:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8014fb7:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014fbb:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014fbf:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014fc3:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014fc7:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014fcb:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014fcf:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014fd3:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014fd7:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014fdb:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014fdf:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8014fe3:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8014fe7:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8014feb:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014fef:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8014ff3:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8014ff7:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8014ffb:	616f6222 	cmnvs	pc, r2, lsr #4
 8014fff:	3a226472 	bcc	88ae1cf <__exidx_end+0x897d43>
 8015003:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015007:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 801500b:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 801500f:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8015013:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8015017:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801501b:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801501f:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8015023:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8015027:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801502b:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801502f:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8015033:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8015037:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 801503b:	7b000a7d 	blvc	8017a37 <__exidx_end+0x15ab>
 801503f:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8015043:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015047:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 801504b:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801504f:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015053:	7b3a2273 	blvc	8e9da27 <__exidx_end+0xe8759b>
 8015057:	33316522 	teqcc	r1, #142606336	; 0x8800000
 801505b:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 801505f:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8015063:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015067:	2e314520 	cfabs64cs	mvdx4, mvdx1
 801506b:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 801506f:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8015073:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8015077:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801507b:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 801507f:	5020584d 	eorpl	r5, r0, sp, asr #16
 8015083:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8015087:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 801508b:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801508f:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 8015093:	3a227478 	bcc	88b227b <__exidx_end+0x89bdef>
 8015097:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 801509b:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801509f:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 80150a3:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80150a7:	6f777465 	svcvs	0x00777465
 80150ab:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 80150af:	3a227478 	bcc	88b2297 <__exidx_end+0x89be0b>
 80150b3:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 80150b7:	6b726f77 	blvs	9cb0e9b <__exidx_end+0x1c9aa0f>
 80150bb:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 80150bf:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80150c3:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 80150c7:	3a227478 	bcc	88b22af <__exidx_end+0x89be23>
 80150cb:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 80150cf:	2065746f 	rsbcs	r7, r5, pc, ror #8
 80150d3:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80150d7:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80150db:	6f697461 	svcvs	0x00697461
 80150df:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
 80150e3:	63727300 	cmnvs	r2, #0, 6
 80150e7:	7474682f 	ldrbtvc	r6, [r4], #-2095	; 0xfffff7d1
 80150eb:	672f6470 			; <UNDEFINED> instruction: 0x672f6470
 80150ef:	665f7465 	ldrbvs	r7, [pc], -r5, ror #8
 80150f3:	5f656c69 	svcpl	0x00656c69
 80150f7:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 80150fb:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80150ff:	00707063 	rsbseq	r7, r0, r3, rrx
 8015103:	5f746567 	svcpl	0x00746567
 8015107:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801510b:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 801510f:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8015113:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8015117:	73252029 			; <UNDEFINED> instruction: 0x73252029
 801511b:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801511f:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 8015123:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 8015127:	3e2d2073 	mcrcc	0, 1, r2, cr13, cr3, {3}
 801512b:	0a642520 	beq	991e5b3 <__exidx_end+0x1908127>
 801512f:	2d2d3c00 	stccs	12, cr3, [sp, #-0]
 8015133:	3a732520 	bcc	9cde5bb <__exidx_end+0x1cc812f>
 8015137:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 801513b:	 			; <UNDEFINED> instruction: 0x3c000a64

0801513e <index_html>:
 801513e:	4f44213c 	svcmi	0x0044213c
 8015142:	50595443 	subspl	r5, r9, r3, asr #8
 8015146:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 801514a:	0a3e6c6d 	beq	8fb0306 <__exidx_end+0xf99e7a>
 801514e:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8015152:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8015156:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801515a:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801515e:	6b6e696c 	blvs	9baf716 <__exidx_end+0x1b9928a>
 8015162:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8015166:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 801516a:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801516e:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8015172:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8015176:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801517a:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801517e:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8015182:	20227373 	eorcs	r7, r2, r3, ror r3
 8015186:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801518a:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801518e:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015192:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8015196:	0a3e656c 	beq	8fae74e <__exidx_end+0xf982c2>
 801519a:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801519e:	0a3e6461 	beq	8fae32a <__exidx_end+0xf97e9e>
 80151a2:	646f623c 	strbtvs	r6, [pc], #-572	; 80151aa <index_html+0x6c>
 80151a6:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80151aa:	6165683c 	cmnvs	r5, ip, lsr r8
 80151ae:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80151b2:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80151b6:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80151ba:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80151be:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80151c2:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80151c6:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80151ca:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80151ce:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80151d2:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80151d6:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80151da:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80151de:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80151e2:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80151e6:	6f746365 	svcvs	0x00746365
 80151ea:	20227972 	eorcs	r7, r2, r2, ror r9
 80151ee:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80151f2:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80151f6:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80151fa:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80151fe:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8015202:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8015206:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 801520a:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801520e:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8015212:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8015216:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 801521a:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801521e:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8015222:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015226:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 801522a:	20227478 	eorcs	r7, r2, r8, ror r4
 801522e:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015232:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8015236:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 801523a:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801523e:	0a3e656c 	beq	8fae7f6 <__exidx_end+0xf9836a>
 8015242:	6f663c09 	svcvs	0x00663c09
 8015246:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 801524a:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801524e:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015252:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8015256:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801525a:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801525e:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8015262:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8015266:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801526a:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801526e:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8015272:	20747069 	rsbscs	r7, r4, r9, rrx
 8015276:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801527a:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801527e:	6a2e7865 	bvs	8bb341a <__exidx_end+0xb9cf8e>
 8015282:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8015286:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 801528a:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801528e:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8015292:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015296:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801529a:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801529e:	 	svcvs	0x0062000a

080152a0 <styles_css>:
 80152a0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80152a4:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80152a8:	63616220 	cmnvs	r1, #32, 4
 80152ac:	6f72676b 	svcvs	0x0072676b
 80152b0:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80152b4:	6f6c6f63 	svcvs	0x006c6f63
 80152b8:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80152bc:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80152c0:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80152c4:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80152c8:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80152cc:	6f6c6f63 	svcvs	0x006c6f63
 80152d0:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80152d4:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80152d8:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80152dc:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80152e0:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80152e4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80152e8:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80152ec:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80152f0:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80152f4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80152f8:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80152fc:	0a3b7865 	beq	8ef3498 <__exidx_end+0xedd00c>
 8015300:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8015304:	0a7b2069 	beq	9edd4b0 <__exidx_end+0x1ec7024>
 8015308:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801530c:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8015310:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8015314:	6f6e203a 	svcvs	0x006e203a
 8015318:	0a3b656e 	beq	8eee8d8 <__exidx_end+0xed844c>
 801531c:	616d2020 	cmnvs	sp, r0, lsr #32
 8015320:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8015324:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8015328:	70352078 	eorsvc	r2, r5, r8, ror r0
 801532c:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8015330:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8015334:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8015338:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801533c:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015340:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015344:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8015348:	0a3b7865 	beq	8ef34e4 <__exidx_end+0xedd058>
 801534c:	6f622020 	svcvs	0x00622020
 8015350:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8015354:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8015358:	3a737569 	bcc	9cf2904 <__exidx_end+0x1cdc478>
 801535c:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015360:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8015364:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015368:	203a7265 	eorscs	r7, sl, r5, ror #4
 801536c:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015370:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015374:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8015378:	0a3b7870 	beq	8ef3540 <__exidx_end+0xedd0b4>
 801537c:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8015380:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015384:	0a7b2072 	beq	9edd554 <__exidx_end+0x1ec70c8>
 8015388:	69642020 	stmdbvs	r4!, {r5, sp}^
 801538c:	616c7073 	smcvs	50947	; 0xc703
 8015390:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8015394:	3b78656c 	blcc	9e2e94c <__exidx_end+0x1e184c0>
 8015398:	6a20200a 	bvs	881d3c8 <__exidx_end+0x806f3c>
 801539c:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80153a0:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80153a4:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80153a8:	203a746e 	eorscs	r7, sl, lr, ror #8
 80153ac:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80153b0:	0a3b7265 	beq	8ef1d4c <__exidx_end+0xedb8c0>
 80153b4:	6f622020 	svcvs	0x00622020
 80153b8:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80153bc:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80153c0:	3a737569 	bcc	9cf296c <__exidx_end+0x1cdc4e0>
 80153c4:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80153c8:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80153cc:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80153d0:	203a7265 	eorscs	r7, sl, r5, ror #4
 80153d4:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80153d8:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80153dc:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80153e0:	0a3b7870 	beq	8ef35a8 <__exidx_end+0xedd11c>
 80153e4:	00000a7d 	andeq	r0, r0, sp, ror sl

080153e8 <HttpContent>:
 80153e8:	08014caa 	stmdaeq	r1, {r1, r3, r5, r7, sl, fp, lr}
 80153ec:	080152a0 	stmdaeq	r1, {r5, r7, r9, ip, lr}
 80153f0:	08014cb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, fp, lr}
 80153f4:	08015400 	stmdaeq	r1, {sl, ip, lr}
 80153f8:	08014c9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, fp, lr}
 80153fc:	0801513e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, ip, lr}

08015400 <index_js>:
 8015400:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015404:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015408:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801540c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015410:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015414:	6a284e4f 	bvs	8a28d58 <__exidx_end+0xa128cc>
 8015418:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801541c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015420:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015424:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8015428:	6a2f273d 	bvs	8bdf124 <__exidx_end+0xbc8c98>
 801542c:	2f6e6f73 	svccs	0x006e6f73
 8015430:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015434:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015438:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 801543c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8015440:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8015444:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8015448:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 801544c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8015450:	20746961 	rsbscs	r6, r4, r1, ror #18
 8015454:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8015458:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 801545c:	0a3b296c 	beq	8edfa14 <__exidx_end+0xec9588>
 8015460:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015464:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8015468:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 801546c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015470:	73657220 	cmnvc	r5, #32, 4
 8015474:	6f736a2e 	svcvs	0x00736a2e
 8015478:	3b29286e 	blcc	8a5f638 <__exidx_end+0xa491ac>
 801547c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015480:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8015484:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8015488:	6f727265 	svcvs	0x00727265
 801548c:	7b202972 	blvc	881fa5c <__exidx_end+0x8095d0>
 8015490:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015494:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8015498:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801549c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80154a0:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 80154a4:	3b29726f 	blcc	8a71e68 <__exidx_end+0xa5b9dc>
 80154a8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80154ac:	0a0a7d0a 	beq	82b48dc <__exidx_end+0x29e450>
 80154b0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80154b4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80154b8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80154bc:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80154c0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80154c4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80154c8:	20292874 	eorcs	r2, r9, r4, ror r8
 80154cc:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80154d0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80154d4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80154d8:	6177613d 	cmnvs	r7, sp, lsr r1
 80154dc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80154e0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80154e4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80154e8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80154ec:	0a3b2927 	beq	8edf990 <__exidx_end+0xec9504>
 80154f0:	6f640909 	svcvs	0x00640909
 80154f4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80154f8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80154fc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015500:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015504:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015508:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801550c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8015510:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015514:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015518:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801551c:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8015520:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015524:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8015528:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801552c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8015530:	2b656d61 	blcs	9970abc <__exidx_end+0x195a630>
 8015534:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80154b4 <index_js+0xb4>
 8015538:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801553c:	2b223e69 	blcs	88a4ee8 <__exidx_end+0x88ea5c>
 8015540:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015544:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015548:	6f6e2e74 	svcvs	0x006e2e74
 801554c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8015550:	2b657079 	blcs	997173c <__exidx_end+0x195b2b0>
 8015554:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80154d4 <index_js+0xd4>
 8015558:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801555c:	2b223e69 	blcs	88a4f08 <__exidx_end+0x88ea7c>
 8015560:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015564:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015568:	6f6e2e74 	svcvs	0x006e2e74
 801556c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8015570:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8015574:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015578:	2f3c222b 	svccs	0x003c222b
 801557c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015580:	0a7d0a3b 	beq	9f57e74 <__exidx_end+0x1f419e8>
 8015584:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8015588:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801558c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015590:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8015594:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015598:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801559c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80155a0:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80155a4:	0a7b2029 	beq	9edd650 <__exidx_end+0x1ec71c4>
 80155a8:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80155ac:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80155b0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80155b4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80155b8:	6177613d 	cmnvs	r7, sp, lsr r1
 80155bc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80155c0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80155c4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80155c8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80155cc:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80155d0:	3b292779 	blcc	8a5f3bc <__exidx_end+0xa48f30>
 80155d4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80155d8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80155dc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80155e0:	0a22223d 	beq	889dedc <__exidx_end+0x887a50>
 80155e4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80155e8:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80155ec:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80155f0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80155f4:	6a624f3d 	bvs	98a92f0 <__exidx_end+0x1892e64>
 80155f8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80155fc:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8015600:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8015604:	6f746365 	svcvs	0x00746365
 8015608:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 801560c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015610:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8015614:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015618:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 801561c:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8015620:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8015624:	6145726f 	cmpvs	r5, pc, ror #4
 8015628:	66286863 	strtvs	r6, [r8], -r3, ror #16
 801562c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015630:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015634:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8015638:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801563c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015640:	20726176 	rsbscs	r6, r2, r6, ror r1
 8015644:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8015648:	203d2065 	eorscs	r2, sp, r5, rrx
 801564c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015650:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015654:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8015658:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801565c:	6b5b5d22 	blvs	96ecaec <__exidx_end+0x16d6660>
 8015660:	3b5d7965 	blcc	9773bfc <__exidx_end+0x175d770>
 8015664:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015668:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801566c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015670:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8015674:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015678:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801567c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8015680:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015684:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8015688:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801568c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015690:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8015694:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015698:	0a3b223e 	beq	8eddf98 <__exidx_end+0xec7b0c>
 801569c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80156a0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80156a4:	6f640909 	svcvs	0x00640909
 80156a8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80156ac:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80156b0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80156b4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80156b8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80156bc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80156c0:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80156c4:	6f746365 	svcvs	0x00746365
 80156c8:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80156cc:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80156d0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80156d4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80156d8:	3b6c6d74 	blcc	9b30cb0 <__exidx_end+0x1b1a824>
 80156dc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80156e0:	5f746567 	svcpl	0x00746567
 80156e4:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80156e8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80156ec:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80156f0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80156f4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80156f8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80156fc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015700:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015704:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015708:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 801570c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8015710:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015714:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8015718:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801571c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015720:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8015724:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8015728:	6177613d 	cmnvs	r7, sp, lsr r1
 801572c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015730:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015734:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015738:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801573c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8015740:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015744:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8015748:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801574c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8015750:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8015754:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8015758:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801575c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8015760:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8015764:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015768:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801576c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015770:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8015774:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8015778:	2b22563e 	blcs	88ab078 <__exidx_end+0x894bec>
 801577c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015780:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015784:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015788:	2b6e6f69 	blcs	9bb1534 <__exidx_end+0x1b9b0a8>
 801578c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801570c <index_js+0x30c>
 8015790:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015794:	2b223e69 	blcs	88a5140 <__exidx_end+0x88ecb4>
 8015798:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801579c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80157a0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80157a4:	61642e64 	cmnvs	r4, r4, ror #28
 80157a8:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80157ac:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80157b0:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80157b4:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80157b8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80157bc:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80157c0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80157c4:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80157c8:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80157cc:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80157d0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80157d4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80157d8:	6f697372 	svcvs	0x00697372
 80157dc:	6f622e6e 	svcvs	0x00622e6e
 80157e0:	2b647261 	blcs	993216c <__exidx_end+0x191bce0>
 80157e4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015764 <index_js+0x364>
 80157e8:	3b223e69 	blcc	88a5194 <__exidx_end+0x88ed08>
 80157ec:	0a0a7d0a 	beq	82b4c1c <__exidx_end+0x29e790>
 80157f0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80157f4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80157f8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80157fc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015800:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8015808 <index_js+0x408>
 8015804:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8015808:	20296c65 	eorcs	r6, r9, r5, ror #24
 801580c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8015810:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8015814:	613d7478 	teqvs	sp, r8, ror r4
 8015818:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801581c:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8015820:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8015824:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8015828:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801582c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015830:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015834:	3b22223d 	blcc	889e130 <__exidx_end+0x887ca4>
 8015838:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 801583c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8015840:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8015844:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8015848:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801584c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8015850:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8015854:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8015858:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801585c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015860:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8015864:	0a7b2029 	beq	9edd910 <__exidx_end+0x1ec7484>
 8015868:	61760909 	cmnvs	r6, r9, lsl #18
 801586c:	61762072 	cmnvs	r6, r2, ror r0
 8015870:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8015874:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015878:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801587c:	6b5b5d6c 	blvs	96ece34 <__exidx_end+0x16d69a8>
 8015880:	3b5d7965 	blcc	9773e1c <__exidx_end+0x175d990>
 8015884:	2009090a 	andcs	r0, r9, sl, lsl #18
 8015888:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801588c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8015890:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8015894:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015898:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801589c:	2f3c222b 	svccs	0x003c222b
 80158a0:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80158a4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80158a8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80158ac:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80158b0:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80158b4:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80158bc <index_js+0x4bc>
 80158b8:	3b223e72 	blcc	88a5288 <__exidx_end+0x88edfc>
 80158bc:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80158c0:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80158c4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80158c8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80158cc:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 80158d0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 80158d4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80158d8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 80158dc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80158e0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80158e4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80158e8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80158ec:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80158f0:	0a3b6c6d 	beq	8ef0aac <__exidx_end+0xeda620>
 80158f4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80158f8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80158fc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015900:	3b292874 	blcc	8a5fad8 <__exidx_end+0xa4964c>
 8015904:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8015908:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 801590c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015910:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015914:	0a3b2928 	beq	8edfdbc <__exidx_end+0xec9930>
 8015918:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801591c:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8015920:	6f697372 	svcvs	0x00697372
 8015924:	3b29286e 	blcc	8a5fae4 <__exidx_end+0xa49658>
 8015928:	0000000a 	andeq	r0, r0, sl

0801592c <s_aStorSize>:
 801592c:	00000060 	andeq	r0, r0, r0, rrx
 8015930:	00000090 	muleq	r0, r0, r0
 8015934:	00000020 	andeq	r0, r0, r0, lsr #32
 8015938:	00000040 	andeq	r0, r0, r0, asr #32
 801593c:	00000060 	andeq	r0, r0, r0, rrx
 8015940:	00000040 	andeq	r0, r0, r0, asr #32
 8015944:	00000020 	andeq	r0, r0, r0, lsr #32
 8015948:	00000020 	andeq	r0, r0, r0, lsr #32
 801594c:	000001e0 	andeq	r0, r0, r0, ror #3
 8015950:	00000040 	andeq	r0, r0, r0, asr #32
 8015954:	00000020 	andeq	r0, r0, r0, lsr #32
 8015958:	00000060 	andeq	r0, r0, r0, rrx
 801595c:	00000030 	andeq	r0, r0, r0, lsr r0
 8015960:	00000020 	andeq	r0, r0, r0, lsr #32
 8015964:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8015968:	00000030 	andeq	r0, r0, r0, lsr r0
 801596c:	00000040 	andeq	r0, r0, r0, asr #32
 8015970:	00000020 	andeq	r0, r0, r0, lsr #32
 8015974:	00000060 	andeq	r0, r0, r0, rrx
 8015978:	00000020 	andeq	r0, r0, r0, lsr #32
 801597c:	00000400 	andeq	r0, r0, r0, lsl #8
 8015980:	00000020 	andeq	r0, r0, r0, lsr #32
 8015984:	00000020 	andeq	r0, r0, r0, lsr #32
 8015988:	00000040 	andeq	r0, r0, r0, asr #32
 801598c:	00000060 	andeq	r0, r0, r0, rrx
 8015990:	00000020 	andeq	r0, r0, r0, lsr #32
 8015994:	00000020 	andeq	r0, r0, r0, lsr #32
 8015998:	00000020 	andeq	r0, r0, r0, lsr #32

0801599c <vtable for StoreDisplayUdf>:
	...
 80159a4:	0800e4b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, sp, lr, pc}
 80159a8:	0800e4fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, sp, lr, pc}
 80159ac:	0800e4d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sl, sp, lr, pc}
 80159b0:	0800e4b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, sp, lr, pc}

080159b4 <vtable for StoreE131>:
	...
 80159bc:	0800e51d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, sp, lr, pc}
 80159c0:	0800e565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, sp, lr, pc}
 80159c4:	0800e541 	stmdaeq	r0, {r0, r6, r8, sl, sp, lr, pc}
 80159c8:	0800e521 	stmdaeq	r0, {r0, r5, r8, sl, sp, lr, pc}

080159cc <vtable for StoreNetwork>:
	...
 80159d4:	0800e585 	stmdaeq	r0, {r0, r2, r7, r8, sl, sp, lr, pc}
 80159d8:	0800e699 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, sp, lr, pc}
 80159dc:	0800e58d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, sp, lr, pc}
 80159e0:	0800e6ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, sp, lr, pc}
 80159e4:	0800e63d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, sp, lr, pc}
 80159e8:	0800e611 	stmdaeq	r0, {r0, r4, r9, sl, sp, lr, pc}
 80159ec:	0800e5e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, sp, lr, pc}
 80159f0:	0800e669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, sp, lr, pc}
 80159f4:	0800e5b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, sp, lr, pc}
 80159f8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80159fc:	00000000 	andeq	r0, r0, r0
 8015a00:	0800e587 	stmdaeq	r0, {r0, r1, r2, r7, r8, sl, sp, lr, pc}
 8015a04:	0800e6a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, sp, lr, pc}
 8015a08:	0800e661 	stmdaeq	r0, {r0, r5, r6, r9, sl, sp, lr, pc}
 8015a0c:	0800e635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, sp, lr, pc}
 8015a10:	0800e609 	stmdaeq	r0, {r0, r3, r9, sl, sp, lr, pc}
 8015a14:	0800e691 	stmdaeq	r0, {r0, r4, r7, r9, sl, sp, lr, pc}
 8015a18:	0800e5d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, sp, lr, pc}

08015a1c <vtable for StoreRemoteConfig>:
	...
 8015a24:	0800e6e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, sp, lr, pc}
 8015a28:	0800e729 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, sp, lr, pc}
 8015a2c:	0800e705 	stmdaeq	r0, {r0, r2, r8, r9, sl, sp, lr, pc}
 8015a30:	0800e6e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, sp, lr, pc}

08015a34 <vtable for StoreWS28xxDmx>:
	...
 8015a3c:	0800e749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, sp, lr, pc}
 8015a40:	0800e8b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp, lr, pc}
 8015a44:	0800e751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, sp, lr, pc}
 8015a48:	0800e8cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, fp, sp, lr, pc}
 8015a4c:	0800e885 	stmdaeq	r0, {r0, r2, r7, fp, sp, lr, pc}
 8015a50:	0800e851 	stmdaeq	r0, {r0, r4, r6, fp, sp, lr, pc}
 8015a54:	0800e819 	stmdaeq	r0, {r0, r3, r4, fp, sp, lr, pc}
 8015a58:	0800e7e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8015a5c:	0800e7a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, sp, lr, pc}
 8015a60:	0800e775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8015a64:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8015a68:	00000000 	andeq	r0, r0, r0
 8015a6c:	0800e74b 	stmdaeq	r0, {r0, r1, r3, r6, r8, r9, sl, sp, lr, pc}
 8015a70:	0800e8c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, sp, lr, pc}
 8015a74:	0800e8b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, sp, lr, pc}
 8015a78:	0800e87d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, sp, lr, pc}
 8015a7c:	0800e849 	stmdaeq	r0, {r0, r3, r6, fp, sp, lr, pc}
 8015a80:	0800e811 	stmdaeq	r0, {r0, r4, fp, sp, lr, pc}
 8015a84:	0800e7d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, sp, lr, pc}
 8015a88:	0800e7a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, sp, lr, pc}
 8015a8c:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 8015a90:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 8015a94:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8015a98:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 8015a9c:	746f7420 	strbtvc	r7, [pc], #-1056	; 8015aa4 <vtable for StoreWS28xxDmx+0x70>
 8015aa0:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8015aa4:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8015aa8:	20736574 	rsbscs	r6, r3, r4, ror r5
 8015aac:	2064255b 	rsbcs	r2, r4, fp, asr r5
 8015ab0:	0a5d426b 	beq	9766464 <__exidx_end+0x174ffd8>
 8015ab4:	70637400 	rsbvc	r7, r3, r0, lsl #8
 8015ab8:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8015abc:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8015ac0:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 8015ac4:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8015ac8:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8015acc:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8015ad0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 8015ad4:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 8015ad8:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8015adc:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8015ae0:	5241000a 	subpl	r0, r1, #10
 8015ae4:	6f6c2050 	svcvs	0x006c2050
 8015ae8:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8015aec:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8015af0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8015af4:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 8015af8:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8015afc:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8015b00:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 8015b04:	000a7961 	andeq	r7, sl, r1, ror #18
 8015b08:	20505241 	subscs	r5, r0, r1, asr #4
 8015b0c:	6b6f6f6c 	blvs	9bf18c4 <__exidx_end+0x1bdb438>
 8015b10:	66207075 			; <UNDEFINED> instruction: 0x66207075
 8015b14:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8015b18:	 	vmlsmi.f32	s0, s0, s9

08015b1b <NetworkConst::MSG_NETWORK_INIT>:
 8015b1b:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8015b1f:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8015b23:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8015b27:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8015b2b:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8015b2f:	3135322e 	teqcc	r5, lr, lsr #4
 8015b33:	63745f00 	cmnvs	r4, #0, 30
 8015b37:	6f6c2e70 	svcvs	0x006c2e70
 8015b3b:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8015b3f:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8015b43:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8015b47:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8015b4f <NetworkConst::MSG_NETWORK_INIT+0x34>
 8015b4b:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8015b4f:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8014cf3 <RemoteConfig::s_TXT+0x12b>
 8015b53:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8015b57:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8015b5b:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8015b5f:	20000a53 	andcs	r0, r0, r3, asr sl
 8015b63:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8015b67:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8015b6b:	0a676e69 	beq	99f1517 <__exidx_end+0x19db08b>
 8015b6f:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8015b73:	3a20656d 	bcc	882f12f <__exidx_end+0x818ca3>
 8015b77:	0a732520 	beq	9cdefff <__exidx_end+0x1cc8b73>
 8015b7b:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8015b7f:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8015b83:	000a7325 	andeq	r7, sl, r5, lsr #6
 8015b87:	30687465 	rsbcc	r7, r8, r5, ror #8
 8015b8b:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8015b8f:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8015b93:	5f656369 	svcpl	0x00656369
 8015b97:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8015b9b:	6b726f77 	blvs	9cb197f <__exidx_end+0x1c9b4f3>
 8015b9f:	4820000a 	stmdami	r0!, {r1, r3}
 8015ba3:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8015ba7:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8015bab:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015baf:	20000a73 	andcs	r0, r0, r3, ror sl
 8015bb3:	614e6649 	cmpvs	lr, r9, asr #12
 8015bb7:	2020656d 	eorcs	r6, r0, sp, ror #10
 8015bbb:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015bbf:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8015bc3:	000a7325 	andeq	r7, sl, r5, lsr #6
 8015bc7:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8015bcb:	20202074 	eorcs	r2, r0, r4, ror r0
 8015bcf:	3a202020 	bcc	881dc57 <__exidx_end+0x8077cb>
 8015bd3:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8015bd7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015bdb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015bdf:	0a64252f 	beq	991f0a3 <__exidx_end+0x1908c17>
 8015be3:	654e2000 	strbvs	r2, [lr, #-0]
 8015be7:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8015beb:	2020206b 	eorcs	r2, r0, fp, rrx
 8015bef:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015bf3:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015bf7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015bfb:	20000a64 	andcs	r0, r0, r4, ror #20
 8015bff:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8015c03:	20796177 	rsbscs	r6, r9, r7, ror r1
 8015c07:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015c0b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015c0f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015c13:	0a64252e 	beq	991f0d3 <__exidx_end+0x1908c47>
 8015c17:	72422000 	subvc	r2, r2, #0
 8015c1b:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8015c1f:	20747361 	rsbscs	r7, r4, r1, ror #6
 8015c23:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015c27:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015c2b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015c2f:	20000a64 	andcs	r0, r0, r4, ror #20
 8015c33:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8015c37:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015c3b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015c3f:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8015c43:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8015c47:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8015c4b:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8015c4f:	3a78322e 	bcc	9e2250f <__exidx_end+0x1e0c083>
 8015c53:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8015c57:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8015c5b:	20000a78 	andcs	r0, r0, r8, ror sl
 8015c5f:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8015c63:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015c67:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015c6b:	000a6325 	andeq	r6, sl, r5, lsr #6
 8015c6f:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8015c73:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8015c77:	 	rsbvc	r0, r9, r0, asr r0

08015c79 <NetworkParamsConst::IP_ADDRESS>:
 8015c79:	615f7069 	cmpvs	pc, r9, rrx
 8015c7d:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8015c81:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08015c84 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8015c84:	61666564 	cmnvs	r6, r4, ror #10
 8015c88:	5f746c75 	svcpl	0x00746c75
 8015c8c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8015c90:	00796177 	rsbseq	r6, r9, r7, ror r1

08015c94 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8015c94:	70636864 	rsbvc	r6, r3, r4, ror #16
 8015c98:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8015c9c:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8015ca4 <NetworkParamsConst::HOSTNAME>
 8015ca0:	00656d69 	rsbeq	r6, r5, r9, ror #26

08015ca4 <NetworkParamsConst::HOSTNAME>:
 8015ca4:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8015ca8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08015cad <NetworkParamsConst::NET_MASK>:
 8015cad:	5f74656e 	svcpl	0x0074656e
 8015cb1:	6b73616d 	blvs	9cee26d <__exidx_end+0x1cd7de1>
	...

08015cb6 <NetworkParamsConst::USE_DHCP>:
 8015cb6:	5f657375 	svcpl	0x00657375
 8015cba:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08015cbf <NetworkParamsConst::FILE_NAME>:
 8015cbf:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8015cc3:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8015cc7:	00747874 	rsbseq	r7, r4, r4, ror r8
 8015ccb:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8015ccf:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8015cd3:	61747320 	cmnvs	r4, r0, lsr #6
 8015cd7:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8015cdb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015cdf:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015ce3:	252f6425 	strcs	r6, [pc, #-1061]!	; 80158c6 <index_js+0x4c6>
 8015ce7:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8015ceb:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8015cef:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015cf3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015cf7:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8015cfb:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8015cff:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015d03:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015d07:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8015d0b:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8015d0f:	20657261 	rsbcs	r7, r5, r1, ror #4
 8015d13:	2a2e2556 	bcs	8b9f273 <__exidx_end+0xb88de7>
 8015d17:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8015d1b:	72205043 	eorvc	r5, r0, #67	; 0x43
 8015d1f:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8015d23:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8015d27:	50434844 	subpl	r4, r3, r4, asr #16
 8015d2b:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8015d2f:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8015d33:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8015d37:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8015d3b:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8015d3f:	6f647475 	svcvs	0x00647475
 8015d43:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08015d48 <pArray>:
 8015d48:	08015ddc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sl, fp, ip, lr}
 8015d4c:	08015d98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip, lr}
 8015d50:	08015c79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, ip, lr}
 8015d54:	08015de2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, fp, ip, lr}
 8015d58:	08015ffb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8015d5c:	08015da3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sl, fp, ip, lr}
 8015d60:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 8015d64:	08015ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, ip, lr}
 8015d68:	08015ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, lr}
 8015d6c:	08015ee1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, fp, ip, lr}
 8015d70:	08015ef1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sl, fp, ip, lr}
 8015d74:	08015f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, ip, lr}
 8015d78:	08015cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, ip, lr}
 8015d7c:	08015fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8015d80:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 8015d84:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 8015d88:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 8015d8c:	08014eaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr}
 8015d90:	08015c84 	stmdaeq	r1, {r2, r7, sl, fp, ip, lr}
 8015d94:	08015db0 	stmdaeq	r1, {r4, r5, r7, r8, sl, fp, ip, lr}

08015d98 <DisplayUdfParamsConst::BOARD_NAME>:
 8015d98:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8015d9c:	616e5f64 	cmnvs	lr, r4, ror #30
 8015da0:	 	tstvs	r0, sp, ror #10

08015da3 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8015da3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8015da7:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8015dab:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08015db0 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8015db0:	5f786d64 	svcpl	0x00786d64
 8015db4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015db8:	6f697463 	svcvs	0x00697463
 8015dbc:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08015dbe <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8015dbe:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8015dc2:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015dc6:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8015861 <index_js+0x461>
 8015dca:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08015dcc <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8015dcc:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8015dd0:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8015dd4:	61636974 	smcvs	13972	; 0x3694
 8015dd8:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08015ddc <DisplayUdfParamsConst::TITLE>:
 8015ddc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8015de0:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08015de2 <DisplayUdfParamsConst::VERSION>:
 8015de2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015de6:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08015dea <DisplayUdfParamsConst::FILE_NAME>:
 8015dea:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8015dee:	2e79616c 	rpwcsez	f6, f1, #4.0
 8015df2:	00747874 	rsbseq	r7, r4, r4, ror r8

08015df6 <DisplayUdfParamsConst::INTENSITY>:
 8015df6:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8015dfa:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8015dfe:	50410079 	subpl	r0, r1, r9, ror r0
 8015e02:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015e06:	726f5000 	rsbvc	r5, pc, #0
 8015e0a:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8015e0e:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015e12:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8015e16:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8015e1a:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8015e1e:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8015e22:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

08015e27 <DevicesParamsConst::SPI_SPEED_HZ>:
 8015e27:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8015e2b:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8015e2f:	5f646565 	svcpl	0x00646565
 8015e33:	 			; <UNDEFINED> instruction: 0x6c007a68

08015e36 <DevicesParamsConst::GROUPING_COUNT>:
 8015e36:	5f64656c 	svcpl	0x0064656c
 8015e3a:	756f7267 	strbvc	r7, [pc, #-615]!	; 8015bdb <NetworkConst::MSG_NETWORK_INIT+0xc0>
 8015e3e:	6f635f70 	svcvs	0x00635f70
 8015e42:	00746e75 	rsbseq	r6, r4, r5, ror lr

08015e46 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8015e46:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8015e4a:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8015e4e:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015e52:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8015e56:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08015e58 <DevicesParamsConst::MAP>:
 8015e58:	5f64656c 	svcpl	0x0064656c
 8015e5c:	5f626772 	svcpl	0x00626772
 8015e60:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8015e64:	00676e69 	rsbeq	r6, r7, r9, ror #28

08015e68 <DevicesParamsConst::TYPE>:
 8015e68:	5f64656c 	svcpl	0x0064656c
 8015e6c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08015e71 <DevicesParamsConst::COUNT>:
 8015e71:	5f64656c 	svcpl	0x0064656c
 8015e75:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8015e79:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08015e7b <DevicesParamsConst::LED_T0H>:
 8015e7b:	5f64656c 	svcpl	0x0064656c
 8015e7f:	00683074 	rsbeq	r3, r8, r4, ror r0

08015e83 <DevicesParamsConst::LED_T1H>:
 8015e83:	5f64656c 	svcpl	0x0064656c
 8015e87:	00683174 	rsbeq	r3, r8, r4, ror r1

08015e8b <DevicesParamsConst::FILE_NAME>:
 8015e8b:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8015e8f:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8015e93:	00747874 	rsbseq	r7, r4, r4, ror r8
 8015e97:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015e9b:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8015e9f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015ea3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015ea7:	002c2264 	eoreq	r2, ip, r4, ror #4
 8015eab:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015eaf:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015eb3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015eb7:	0a64252e 	beq	991f377 <__exidx_end+0x1908eeb>
 8015ebb:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8015ebf:	0a232073 	beq	88de093 <__exidx_end+0x8c7c07>
	...

08015ec4 <LightSetParamsConst::TEST_PATTERN>:
 8015ec4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8015ec8:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8015ecc:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08015ed1 <LightSetParamsConst::UNIVERSE_PORT>:
 8015ed1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8015ed5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8015ed9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015edd:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8015ee1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8015ee5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8015ee9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015eed:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8015ef1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8015ef5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8015ef9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015efd:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015f01:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8015f05:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8015f09:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015f0d:	00645f74 	rsbeq	r5, r4, r4, ror pc

08015f11 <LightSetParamsConst::START_UNI_PORT>:
 8015f11:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015f15:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015f19:	6f705f69 	svcvs	0x00705f69
 8015f1d:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8015f21:	74730000 	ldrbtvc	r0, [r3], #-0
 8015f25:	5f747261 	svcpl	0x00747261
 8015f29:	5f696e75 	svcpl	0x00696e75
 8015f2d:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015f31:	0000325f 	andeq	r3, r0, pc, asr r2
 8015f35:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015f39:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015f3d:	6f705f69 	svcvs	0x00705f69
 8015f41:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8015f45:	74730000 	ldrbtvc	r0, [r3], #-0
 8015f49:	5f747261 	svcpl	0x00747261
 8015f4d:	5f696e75 	svcpl	0x00696e75
 8015f51:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015f55:	0000345f 	andeq	r3, r0, pc, asr r4
 8015f59:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015f5d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015f61:	6f705f69 	svcvs	0x00705f69
 8015f65:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8015afb <vtable for StoreWS28xxDmx+0xc7>
 8015f69:	74730000 	ldrbtvc	r0, [r3], #-0
 8015f6d:	5f747261 	svcpl	0x00747261
 8015f71:	5f696e75 	svcpl	0x00696e75
 8015f75:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015f79:	0000365f 	andeq	r3, r0, pc, asr r6
 8015f7d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015f81:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015f85:	6f705f69 	svcvs	0x00705f69
 8015f89:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8015f8d:	74730000 	ldrbtvc	r0, [r3], #-0
 8015f91:	5f747261 	svcpl	0x00747261
 8015f95:	5f696e75 	svcpl	0x00696e75
 8015f99:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015f9d:	0000385f 	andeq	r3, r0, pc, asr r8

08015fa1 <LightSetParamsConst::MERGE_MODE_PORT>:
 8015fa1:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8015fa5:	6f6d5f65 	svcvs	0x006d5f65
 8015fa9:	705f6564 	subsvc	r6, pc, r4, ror #10
 8015fad:	5f74726f 	svcpl	0x0074726f
 8015fb1:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8015fb5:	5f656772 	svcpl	0x00656772
 8015fb9:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8015fbd:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015fc1:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8015fc5:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8015fc9:	6f6d5f65 	svcvs	0x006d5f65
 8015fcd:	705f6564 	subsvc	r6, pc, r4, ror #10
 8015fd1:	5f74726f 	svcpl	0x0074726f
 8015fd5:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8015fd9:	5f656772 	svcpl	0x00656772
 8015fdd:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8015fe1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015fe5:	00645f74 	rsbeq	r5, r4, r4, ror pc

08015fe9 <LightSetParamsConst::DMX_START_ADDRESS>:
 8015fe9:	5f786d64 	svcpl	0x00786d64
 8015fed:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015ff1:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8015ff5:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8015ff9:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08015ffb <LightSetParamsConst::UNIVERSE>:
 8015ffb:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8015fff:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08016004 <LightSetParamsConst::DIRECTION>:
 8016004:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016008:	6f697463 	svcvs	0x00697463
 801600c:	6f705f6e 	svcvs	0x00705f6e
 8016010:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8016014:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016018:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801601c:	5f6e6f69 	svcpl	0x006e6f69
 8016020:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016024:	0000625f 	andeq	r6, r0, pc, asr r2
 8016028:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801602c:	6f697463 	svcvs	0x00697463
 8016030:	6f705f6e 	svcvs	0x00705f6e
 8016034:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8016038:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801603c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016040:	5f6e6f69 	svcpl	0x006e6f69
 8016044:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016048:	0000645f 	andeq	r6, r0, pc, asr r4
 801604c:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8016050:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016054:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8016058:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801605c:	31485300 	mrscc	r5, (UNDEF: 120)
 8016060:	00363031 	eorseq	r3, r6, r1, lsr r0
 8016064:	31445353 	cmpcc	r4, r3, asr r3
 8016068:	00363033 	eorseq	r3, r6, r3, lsr r0
 801606c:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016070:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8016074:	000a2964 	andeq	r2, sl, r4, ror #18
 8016078:	aaeeaa40 	bge	7bc0980 <__stack_size+0x7bbf180>
 801607c:	000000ee 	andeq	r0, r0, lr, ror #1

08016080 <_OledFont8x6>:
 8016080:	00000040 	andeq	r0, r0, r0, asr #32
 8016084:	40000000 	andmi	r0, r0, r0
 8016088:	005f0000 	subseq	r0, pc, r0
 801608c:	00400000 	subeq	r0, r0, r0
 8016090:	00070007 	andeq	r0, r7, r7
 8016094:	7f144000 	svcvc	0x00144000
 8016098:	00147f14 	andseq	r7, r4, r4, lsl pc
 801609c:	7f2a2440 	svcvc	0x002a2440
 80160a0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80160a4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80160a8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80160ac:	50205649 	eorpl	r5, r0, r9, asr #12
 80160b0:	08004000 	stmdaeq	r0, {lr}
 80160b4:	00000307 	andeq	r0, r0, r7, lsl #6
 80160b8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80160bc:	40000041 	andmi	r0, r0, r1, asr #32
 80160c0:	1c224100 	stfnes	f4, [r2], #-0
 80160c4:	2a400000 	bcs	90160cc <__exidx_end+0xfffc40>
 80160c8:	2a1c7f1c 	bcs	8735d40 <__exidx_end+0x71f8b4>
 80160cc:	08084000 	stmdaeq	r8, {lr}
 80160d0:	0008083e 	andeq	r0, r8, lr, lsr r8
 80160d4:	70800040 	addvc	r0, r0, r0, asr #32
 80160d8:	40000030 	andmi	r0, r0, r0, lsr r0
 80160dc:	08080808 	stmdaeq	r8, {r3, fp}
 80160e0:	00400008 	subeq	r0, r0, r8
 80160e4:	00606000 	rsbeq	r6, r0, r0
 80160e8:	10204000 	eorne	r4, r0, r0
 80160ec:	00020408 	andeq	r0, r2, r8, lsl #8
 80160f0:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80160f4:	40003e45 	andmi	r3, r0, r5, asr #28
 80160f8:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80160fc:	72400000 	subvc	r0, r0, #0
 8016100:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8016104:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8016108:	00334d49 	eorseq	r4, r3, r9, asr #26
 801610c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8016110:	4000107f 	andmi	r1, r0, pc, ror r0
 8016114:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8016118:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801611c:	3149494a 	cmpcc	r9, sl, asr #18
 8016120:	21414000 	mrscs	r4, (UNDEF: 65)
 8016124:	00070911 	andeq	r0, r7, r1, lsl r9
 8016128:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801612c:	40003649 	andmi	r3, r0, r9, asr #12
 8016130:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8016134:	0040001e 	subeq	r0, r0, lr, lsl r0
 8016138:	00001400 	andeq	r1, r0, r0, lsl #8
 801613c:	40004000 	andmi	r4, r0, r0
 8016140:	00000034 	andeq	r0, r0, r4, lsr r0
 8016144:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8016148:	40004122 	andmi	r4, r0, r2, lsr #2
 801614c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8016150:	00400014 	subeq	r0, r0, r4, lsl r0
 8016154:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8016158:	01024000 	mrseq	r4, (UNDEF: 2)
 801615c:	00060959 	andeq	r0, r6, r9, asr r9
 8016160:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8016164:	40004e59 	andmi	r4, r0, r9, asr lr
 8016168:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801616c:	7f40007c 	svcvc	0x0040007c
 8016170:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8016174:	413e4000 	teqmi	lr, r0
 8016178:	00224141 	eoreq	r4, r2, r1, asr #2
 801617c:	41417f40 	cmpmi	r1, r0, asr #30
 8016180:	40003e41 	andmi	r3, r0, r1, asr #28
 8016184:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8016188:	7f400041 	svcvc	0x00400041
 801618c:	01090909 	tsteq	r9, r9, lsl #18
 8016190:	413e4000 	teqmi	lr, r0
 8016194:	00735141 	rsbseq	r5, r3, r1, asr #2
 8016198:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801619c:	40007f08 	andmi	r7, r0, r8, lsl #30
 80161a0:	417f4100 	cmnmi	pc, r0, lsl #2
 80161a4:	20400000 	subcs	r0, r0, r0
 80161a8:	013f4140 	teqeq	pc, r0, asr #2
 80161ac:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80161b0:	00412214 	subeq	r2, r1, r4, lsl r2
 80161b4:	40407f40 	submi	r7, r0, r0, asr #30
 80161b8:	40004040 	andmi	r4, r0, r0, asr #32
 80161bc:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80161c0:	7f40007f 	svcvc	0x0040007f
 80161c4:	7f100804 	svcvc	0x00100804
 80161c8:	413e4000 	teqmi	lr, r0
 80161cc:	003e4141 	eorseq	r4, lr, r1, asr #2
 80161d0:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80161d4:	40000609 	andmi	r0, r0, r9, lsl #12
 80161d8:	2151413e 	cmpcs	r1, lr, lsr r1
 80161dc:	7f40005e 	svcvc	0x0040005e
 80161e0:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80161e4:	49264000 	stmdbmi	r6!, {lr}
 80161e8:	00324949 	eorseq	r4, r2, r9, asr #18
 80161ec:	7f010340 	svcvc	0x00010340
 80161f0:	40000301 	andmi	r0, r0, r1, lsl #6
 80161f4:	4040403f 	submi	r4, r0, pc, lsr r0
 80161f8:	1f40003f 	svcne	0x0040003f
 80161fc:	1f204020 	svcne	0x00204020
 8016200:	403f4000 	eorsmi	r4, pc, r0
 8016204:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8016208:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801620c:	40006314 	andmi	r6, r0, r4, lsl r3
 8016210:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8016214:	61400003 	cmpvs	r0, r3
 8016218:	434d4959 	movtmi	r4, #55641	; 0xd959
 801621c:	7f004000 	svcvc	0x00004000
 8016220:	00414141 	subeq	r4, r1, r1, asr #2
 8016224:	08040240 	stmdaeq	r4, {r6, r9}
 8016228:	40002010 	andmi	r2, r0, r0, lsl r0
 801622c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8016230:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8016234:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8016238:	40404000 	submi	r4, r0, r0
 801623c:	00404040 	subeq	r4, r0, r0, asr #32
 8016240:	07030040 	streq	r0, [r3, -r0, asr #32]
 8016244:	40000008 	andmi	r0, r0, r8
 8016248:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801624c:	7f400040 	svcvc	0x00400040
 8016250:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8016254:	44384000 	ldrtmi	r4, [r8], #-0
 8016258:	00284444 	eoreq	r4, r8, r4, asr #8
 801625c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8016260:	40007f28 	andmi	r7, r0, r8, lsr #30
 8016264:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8016268:	00400018 	subeq	r0, r0, r8, lsl r0
 801626c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8016270:	a4184000 	ldrge	r4, [r8], #-0
 8016274:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8016278:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 801627c:	40007804 	andmi	r7, r0, r4, lsl #16
 8016280:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8016284:	20400000 	subcs	r0, r0, r0
 8016288:	003d4040 	eorseq	r4, sp, r0, asr #32
 801628c:	107f4000 	rsbsne	r4, pc, r0
 8016290:	00004428 	andeq	r4, r0, r8, lsr #8
 8016294:	7f410040 	svcvc	0x00410040
 8016298:	40000040 	andmi	r0, r0, r0, asr #32
 801629c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80162a0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80162a4:	78040408 	stmdavc	r4, {r3, sl}
 80162a8:	44384000 	ldrtmi	r4, [r8], #-0
 80162ac:	00384444 	eorseq	r4, r8, r4, asr #8
 80162b0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80162b4:	40001824 	andmi	r1, r0, r4, lsr #16
 80162b8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80162bc:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80162c0:	08040408 	stmdaeq	r4, {r3, sl}
 80162c4:	54484000 	strbpl	r4, [r8], #-0
 80162c8:	00245454 	eoreq	r5, r4, r4, asr r4
 80162cc:	3f040440 	svccc	0x00040440
 80162d0:	40002444 	andmi	r2, r0, r4, asr #8
 80162d4:	2040403c 	subcs	r4, r0, ip, lsr r0
 80162d8:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80162dc:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80162e0:	403c4000 	eorsmi	r4, ip, r0
 80162e4:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80162e8:	10284440 	eorne	r4, r8, r0, asr #8
 80162ec:	40004428 	andmi	r4, r0, r8, lsr #8
 80162f0:	9090904c 	addsls	r9, r0, ip, asr #32
 80162f4:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80162f8:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80162fc:	08004000 	stmdaeq	r0, {lr}
 8016300:	00004136 	andeq	r4, r0, r6, lsr r1
 8016304:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8016308:	40000000 	andmi	r0, r0, r0
 801630c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8016310:	02400000 	subeq	r0, r0, #0
 8016314:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8016318:	263c4000 	ldrtcs	r4, [ip], -r0
 801631c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08016320 <oled_128x32_init>:
 8016320:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016324:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8016328:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801632c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8016330:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016334:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016338 <oled_128x64_init>:
 8016338:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801633c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8016340:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016344:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8016348:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801634c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016350 <vtable for Ssd1306>:
	...
 8016358:	08011927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip}
 801635c:	08011955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, ip}
 8016360:	08011c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, ip}
 8016364:	08011bf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, fp, ip}
 8016368:	08011abd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, fp, ip}
 801636c:	08011975 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, fp, ip}
 8016370:	0801199d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, fp, ip}
 8016374:	08011a93 	stmdaeq	r1, {r0, r1, r4, r7, r9, fp, ip}
 8016378:	08011a4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, fp, ip}
 801637c:	08011929 	stmdaeq	r1, {r0, r3, r5, r8, fp, ip}
 8016380:	08011af9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, fp, ip}
 8016384:	08011b05 	stmdaeq	r1, {r0, r2, r8, r9, fp, ip}
 8016388:	08011b1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, fp, ip}
 801638c:	0801192d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip}
 8016390:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8016394:	5b1b006d 	blpl	86d6550 <__exidx_end+0x6c00c4>
 8016398:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 801639c:	31335b1b 	teqcc	r3, fp, lsl fp
 80163a0:	5b1b006d 	blpl	86d655c <__exidx_end+0x6c00d0>
 80163a4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80163a8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80163ac:	5b1b006d 	blpl	86d6568 <__exidx_end+0x6c00dc>
 80163b0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80163b4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80163b8:	205d732a 	subscs	r7, sp, sl, lsr #6
 80163bc:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80163c0:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80163c4:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80163c8:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80163cc:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80163d0:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80163d4:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80163d8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80163dc:	203a636f 	eorscs	r6, sl, pc, ror #6
 80163e0:	000a7525 	andeq	r7, sl, r5, lsr #10
 80163e4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80163e8:	203a636f 	eorscs	r6, sl, pc, ror #6
 80163ec:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 80163f0:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 80163f4:	6b636f6c 	blvs	98f21ac <__exidx_end+0x18dbd20>
 80163f8:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 80163fc:	000a7469 	andeq	r7, sl, r9, ror #8
 8016400:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016404:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016408:	6f6c4270 	svcvs	0x006c4270
 801640c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8016410:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016414:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8016418:	7a697320 	bvc	9a730a0 <__exidx_end+0x1a5cc14>
 801641c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8016420:	6164202c 	cmnvs	r4, ip, lsr #32
 8016424:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8016428:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 801642c:	3a656572 	bcc	996f9fc <__exidx_end+0x1959570>
 8016430:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8016434:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016438:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801643c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8016440:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8016444:	6f6c4270 	svcvs	0x006c4270
 8016448:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 801644c:	0a702520 	beq	9c1f8d4 <__exidx_end+0x1c09448>
 8016450:	00000000 	andeq	r0, r0, r0

08016454 <days_of_month>:
 8016454:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016458:	0000001c 	andeq	r0, r0, ip, lsl r0
 801645c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016460:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016464:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016468:	0000001e 	andeq	r0, r0, lr, lsl r0
 801646c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016470:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016474:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016478:	0000001f 	andeq	r0, r0, pc, lsl r0
 801647c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016480:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08016484 <__exidx_start>:
 8016484:	7fff1a90 	svcvc	0x00ff1a90
 8016488:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801648c <.ARM.attributes>:
 801648c:	00002e41 	andeq	r2, r0, r1, asr #28
 8016490:	61656100 	cmnvs	r5, r0, lsl #2
 8016494:	01006962 	tsteq	r0, r2, ror #18
 8016498:	00000024 	andeq	r0, r0, r4, lsr #32
 801649c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80164a0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80164a4:	0600334d 	streq	r3, [r0], -sp, asr #6
 80164a8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 80164ac:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 80164b0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 80164b4:	1a011803 	bne	805c4c8 <__exidx_end+0x4603c>
 80164b8:	Address 0x00000000080164b8 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20016000 	andcs	r6, r1, r0

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000030:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000040:	00000060 	andeq	r0, r0, r0, rrx
	...
20000050:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000060:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000070:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000080:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000090:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e0 <SystemCoreClock>:
200000e0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <guard variable for lightset::Data::Get()::instance>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <lightset::Data::Get()::instance>:
	...

20001900 <E131Bridge::s_pThis>:
20001900:	00000000 	andeq	r0, r0, r0

20001904 <s_ReceivingMask>:
20001904:	00000000 	andeq	r0, r0, r0

20001908 <WS28xxDmx::s_pThis>:
20001908:	00000000 	andeq	r0, r0, r0

2000190c <PixelPatterns::m_PortConfig>:
	...

2000192c <PixelPatterns::m_nActivePorts>:
2000192c:	00000000 	andeq	r0, r0, r0

20001930 <PixelPatterns::m_pScannerColours>:
20001930:	00000000 	andeq	r0, r0, r0

20001934 <PixelPatterns::m_nCount>:
20001934:	00000000 	andeq	r0, r0, r0

20001938 <PixelPatterns::m_pOutput>:
20001938:	00000000 	andeq	r0, r0, r0

2000193c <PixelTestPattern::s_Pattern>:
2000193c:	00000000 	andeq	r0, r0, r0

20001940 <s_tmp>:
20001940:	00000000 	andeq	r0, r0, r0

20001944 <WS28xx::s_pThis>:
20001944:	00000000 	andeq	r0, r0, r0

20001948 <RemoteConfig::s_pUdpBuffer>:
20001948:	00000000 	andeq	r0, r0, r0

2000194c <RemoteConfig::s_RemoteConfigListBin>:
	...

20001970 <RemoteConfig::s_pThis>:
20001970:	00000000 	andeq	r0, r0, r0

20001974 <SpiFlashStore::s_nWaitMillis>:
20001974:	00000000 	andeq	r0, r0, r0

20001978 <SpiFlashStore::s_SpiFlashData>:
	...

20002978 <SpiFlashStore::s_nStartAddress>:
20002978:	00000000 	andeq	r0, r0, r0

2000297c <SpiFlashStore::s_bHaveFlashChip>:
2000297c:	00000000 	andeq	r0, r0, r0

20002980 <SpiFlashStore::s_nSpiFlashStoreSize>:
20002980:	00000000 	andeq	r0, r0, r0

20002984 <SpiFlashStore::s_State>:
20002984:	00000000 	andeq	r0, r0, r0

20002988 <SpiFlashStore::s_pThis>:
20002988:	00000000 	andeq	r0, r0, r0

2000298c <SpiFlashStore::s_bIsNew>:
2000298c:	00000000 	andeq	r0, r0, r0

20002990 <StoreDisplayUdf::s_pThis>:
20002990:	00000000 	andeq	r0, r0, r0

20002994 <StoreE131::s_pThis>:
20002994:	00000000 	andeq	r0, r0, r0

20002998 <StoreNetwork::s_pThis>:
20002998:	00000000 	andeq	r0, r0, r0

2000299c <StoreRemoteConfig::s_pThis>:
2000299c:	00000000 	andeq	r0, r0, r0

200029a0 <StoreWS28xxDmx::s_pThis>:
200029a0:	00000000 	andeq	r0, r0, r0

200029a4 <FlashRom::s_pThis>:
200029a4:	00000000 	andeq	r0, r0, r0

200029a8 <flashrom::s_nAddress>:
200029a8:	00000000 	andeq	r0, r0, r0

200029ac <flashrom::s_State>:
200029ac:	00000000 	andeq	r0, r0, r0

200029b0 <flashrom::s_nPage>:
200029b0:	00000000 	andeq	r0, r0, r0

200029b4 <flashrom::s_pData>:
200029b4:	00000000 	andeq	r0, r0, r0

200029b8 <flashrom::s_isBank0>:
200029b8:	00000000 	andeq	r0, r0, r0

200029bc <flashrom::s_nLength>:
200029bc:	00000000 	andeq	r0, r0, r0

200029c0 <g_ip_info>:
	...

200029cc <g_mac_address>:
200029cc:	00000000 	andeq	r0, r0, r0
	...

200029d2 <s_is_dhcp>:
	...

200029d4 <s_p>:
200029d4:	00000000 	andeq	r0, r0, r0

200029d8 <s_ticker>:
200029d8:	00000000 	andeq	r0, r0, r0

200029dc <s_mac_address>:
	...

200029e4 <s_mac_address_arp_reply>:
200029e4:	00000000 	andeq	r0, r0, r0
	...

200029ea <s_id>:
	...

200029ec <s_recv_queue>:
	...

2000355c <s_tcb>:
	...

200035a0 <s_tcp>:
	...

20003b8c <broadcast_mask>:
20003b8c:	00000000 	andeq	r0, r0, r0

20003b90 <gw_ip>:
20003b90:	00000000 	andeq	r0, r0, r0

20003b94 <on_network_mask>:
20003b94:	00000000 	andeq	r0, r0, r0

20003b98 <s_id>:
20003b98:	00000000 	andeq	r0, r0, r0

20003b9c <s_ports_allowed>:
	...

20003bbc <s_recv_queue>:
	...

2000985c <s_send_packet>:
	...

20009e48 <MDNS::s_nRemoteIp>:
20009e48:	00000000 	andeq	r0, r0, r0

20009e4c <MDNS::s_nRemotePort>:
20009e4c:	00000000 	andeq	r0, r0, r0

20009e50 <MDNS::s_nMulticastIp>:
20009e50:	00000000 	andeq	r0, r0, r0

20009e54 <MDNS::s_AnswerLocalIp>:
	...

2000a058 <MDNS::s_ServiceRecords>:
	...

2000a078 <MDNS::s_nBytesReceived>:
2000a078:	00000000 	andeq	r0, r0, r0

2000a07c <MDNS::s_ServiceRecordsData>:
	...

2000a280 <MDNS::s_pName>:
2000a280:	00000000 	andeq	r0, r0, r0

2000a284 <MDNS::s_pBuffer>:
2000a284:	00000000 	andeq	r0, r0, r0

2000a288 <Network::s_pThis>:
2000a288:	00000000 	andeq	r0, r0, r0

2000a28c <NetworkParams::m_tNetworkParams>:
	...

2000a2ec <s_arp_announce>:
	...

2000a318 <s_arp_reply>:
	...

2000a344 <s_arp_request>:
	...

2000a370 <s_arp_records>:
	...

2000a4f0 <s_entry_current>:
2000a4f0:	00000000 	andeq	r0, r0, r0

2000a4f4 <s_dhcp_allocated_gw>:
2000a4f4:	00000000 	andeq	r0, r0, r0

2000a4f8 <s_dhcp_allocated_ip>:
2000a4f8:	00000000 	andeq	r0, r0, r0

2000a4fc <s_dhcp_allocated_netmask>:
2000a4fc:	00000000 	andeq	r0, r0, r0

2000a500 <s_dhcp_message>:
	...

2000a724 <s_dhcp_server_ip>:
2000a724:	00000000 	andeq	r0, r0, r0

2000a728 <s_groups>:
	...

2000a848 <s_id>:
2000a848:	00000000 	andeq	r0, r0, r0

2000a84c <s_joins_allowed_index>:
2000a84c:	00000000 	andeq	r0, r0, r0

2000a850 <s_leave>:
	...

2000a880 <s_multicast_mac>:
	...

2000a888 <s_report>:
	...

2000a8b8 <DisplayUdf::s_pThis>:
2000a8b8:	00000000 	andeq	r0, r0, r0

2000a8bc <PropertiesConfig::s_Config>:
2000a8bc:	00000000 	andeq	r0, r0, r0

2000a8c0 <Display::s_pThis>:
2000a8c0:	00000000 	andeq	r0, r0, r0

2000a8c4 <_ClearBuffer>:
	...

2000a94c <Ssd1306::s_pThis>:
2000a94c:	00000000 	andeq	r0, r0, r0

2000a950 <FirmwareVersion::s_FirmwareVersion>:
	...

2000a966 <FirmwareVersion::s_Print>:
	...

2000a9a8 <FirmwareVersion::s_pThis>:
2000a9a8:	00000000 	andeq	r0, r0, r0

2000a9ac <LedBlink::s_pThis>:
2000a9ac:	00000000 	andeq	r0, r0, r0

2000a9b0 <Hardware::s_pThis>:
2000a9b0:	00000000 	andeq	r0, r0, r0

2000a9b4 <last.0>:
2000a9b4:	00000000 	andeq	r0, r0, r0

2000a9b8 <s_micros>:
	...

2000a9c0 <set_timer>:
2000a9c0:	00000000 	andeq	r0, r0, r0

2000a9c4 <s_nSysTickMillis>:
2000a9c4:	00000000 	andeq	r0, r0, r0

2000a9c8 <enet_init_status>:
2000a9c8:	00000000 	andeq	r0, r0, r0

2000a9cc <s_nAddress>:
2000a9cc:	00000000 	andeq	r0, r0, r0

2000a9d0 <s_TxBuffer>:
	...

200129d0 <dma_current_ptp_rxdesc>:
200129d0:	00000000 	andeq	r0, r0, r0

200129d4 <dma_current_ptp_txdesc>:
200129d4:	00000000 	andeq	r0, r0, r0

200129d8 <dma_current_rxdesc>:
200129d8:	00000000 	andeq	r0, r0, r0

200129dc <dma_current_txdesc>:
200129dc:	00000000 	andeq	r0, r0, r0

200129e0 <enet_initpara>:
	...

20012a1c <rx_buff>:
	...

20014dd4 <rxdesc_tab>:
	...

20014e34 <tx_buff>:
	...

20015a1c <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
