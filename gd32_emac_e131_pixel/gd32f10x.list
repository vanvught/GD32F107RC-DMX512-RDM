
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08008565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, pc}
 8007008:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800700c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007010:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007014:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007018:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 800702c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007030:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800703c:	080125ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, sp}
 8007040:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007044:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007048:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800704c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007050:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007054:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007058:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800705c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007060:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007064:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007068:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800706c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007070:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007074:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007078:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800707c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007080:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007084:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007088:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800708c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007090:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007094:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007098:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800709c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ac:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070bc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070cc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070dc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ec:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 8007100:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800710c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007110:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007114:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007118:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800711c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007120:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007124:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007128:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800712c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007130:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007134:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007138:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800713c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007140:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007144:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007148:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800714c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f008 fd83 	bl	800fcac <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f007 f8aa 	bl	800e308 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f008 ff94 	bl	80100ec <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001ebc 			; <UNDEFINED> instruction: 0x20001ebc
 80071e8:	20001eb0 			; <UNDEFINED> instruction: 0x20001eb0
 80071ec:	20001ec2 	andcs	r1, r0, r2, asr #29

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f008 be5c 	b.w	800febc <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001ec2 	andcs	r1, r0, r2, asr #29

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001ecc 	andcs	r1, r0, ip, asr #29

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f007 f8c5 	bl	800e3bc <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f007 f8b9 	bl	800e3bc <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20002a94 	mulcs	r0, r4, sl
 800725c:	20001ebc 			; <UNDEFINED> instruction: 0x20001ebc
 8007260:	20001eb0 			; <UNDEFINED> instruction: 0x20001eb0
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f007 fa18 	bl	800e6c4 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f007 fa39 	bl	800e714 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	200030b0 	strhcs	r3, [r0], -r0
 80072ac:	20003090 	mulcs	r0, r0, r0
 80072b0:	20008d50 	andcs	r8, r0, r0, asr sp
 80072b4:	2000308c 	andcs	r3, r0, ip, lsl #1
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f008 fb6a 	bl	800f9b0 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f008 fb57 	bl	800f9b0 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f008 fb4b 	bl	800f9b0 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f008 fb3a 	bl	800f9b0 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f008 fb2e 	bl	800f9b0 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f008 fb22 	bl	800f9b0 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f008 bb27 	b.w	800f9c4 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	20009786 	andcs	r9, r0, r6, lsl #15
 8007394:	20009780 	andcs	r9, r0, r0, lsl #15
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20009796 	mulcs	r0, r6, r7
 80073a4:	200097a0 	andcs	r9, r0, r0, lsr #15
 80073a8:	200097de 	ldrdcs	r9, [r0], -lr
 80073ac:	200097d8 	ldrdcs	r9, [r0], -r8
 80073b0:	200097ee 	andcs	r9, r0, lr, ror #15
 80073b4:	200097f8 	strdcs	r9, [r0], -r8
 80073b8:	200097ac 	andcs	r9, r0, ip, lsr #15

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20009984 	andcs	r9, r0, r4, lsl #19
 80073ec:	20009808 	andcs	r9, r0, r8, lsl #16

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f008 fdc6 	bl	800ffac <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f008 fd72 	bl	800ff18 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f008 fd58 	bl	800ff18 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 8007490:	20009ce0 	andcs	r9, r0, r0, ror #25
 8007494:	20009d1c 	andcs	r9, r0, ip, lsl sp
 8007498:	20009cdc 	ldrdcs	r9, [r0], -ip
 800749c:	20009d14 	andcs	r9, r0, r4, lsl sp
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009ce4 	andcs	r9, r0, r4, ror #25
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f008 fdd0 	bl	8010064 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f00b f815 	bl	8012530 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f00b f842 	bl	8012590 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f00b f83f 	bl	8012590 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	080144b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, lr}
 800751c:	08016ec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp, sp, lr}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f00c f8a7 	bl	8013678 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f00c f8b1 	bl	80136a0 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f006 bed1 	b.w	800e2e8 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20001ec4 	andcs	r1, r0, r4, asr #29

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f006 ff2d 	bl	800e3d0 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f006 ff0e 	bl	800e3bc <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f006 feff 	bl	800e3bc <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f006 fef7 	bl	800e3bc <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f006 ffa0 	bl	800e568 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f006 feb8 	bl	800e3bc <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f006 feb1 	bl	800e3bc <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f006 fed0 	bl	800e41c <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f006 fe6b 	bl	800e388 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f006 fe4c 	bl	800e388 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f006 fe89 	bl	800e41c <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f006 ff26 	bl	800e568 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f006 ff04 	bl	800e568 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f006 fe13 	bl	800e3bc <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f006 fe2f 	bl	800e41c <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f006 fe11 	bl	800e41c <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20002a50 	andcs	r2, r0, r0, asr sl
 8007814:	20002a58 	andcs	r2, r0, r8, asr sl
 8007818:	20001ee0 	andcs	r1, r0, r0, ror #29
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f006 fd87 	bl	800e388 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f006 fdc2 	bl	800e41c <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20002a50 	andcs	r2, r0, r0, asr sl

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f006 fed0 	bl	800e6c4 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f006 fec9 	bl	800e6c4 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20003090 	mulcs	r0, r0, r0
 800795c:	200030b0 	strhcs	r3, [r0], -r0

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f008 b832 	b.w	800f9d8 <arp_handle_request>
 8007974:	f008 b858 	b.w	800fa28 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009ce0 	andcs	r9, r0, r0, ror #25
 8007a14:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f008 fb74 	bl	8010152 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f008 fb6f 	bl	8010152 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f008 fb64 	bl	8010152 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f008 fb59 	bl	8010152 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f008 fb29 	bl	80100fe <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f008 fb1c 	bl	80100fe <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f00b fde9 	bl	80136a8 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20001ebc 			; <UNDEFINED> instruction: 0x20001ebc
 8007ae0:	20001eb0 			; <UNDEFINED> instruction: 0x20001eb0

08007ae4 <__aeabi_d2f>:
 8007ae4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ae8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007aec:	bf24      	itt	cs
 8007aee:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007af2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007af6:	d90d      	bls.n	8007b14 <__aeabi_d2f+0x30>
 8007af8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007afc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b00:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b04:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b08:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b0c:	bf08      	it	eq
 8007b0e:	f020 0001 	biceq.w	r0, r0, #1
 8007b12:	4770      	bx	lr
 8007b14:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b18:	d121      	bne.n	8007b5e <__aeabi_d2f+0x7a>
 8007b1a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b1e:	bfbc      	itt	lt
 8007b20:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b24:	4770      	bxlt	lr
 8007b26:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b2a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b2e:	f1c2 0218 	rsb	r2, r2, #24
 8007b32:	f1c2 0c20 	rsb	ip, r2, #32
 8007b36:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b3a:	fa20 f002 	lsr.w	r0, r0, r2
 8007b3e:	bf18      	it	ne
 8007b40:	f040 0001 	orrne.w	r0, r0, #1
 8007b44:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b48:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b4c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b50:	ea40 000c 	orr.w	r0, r0, ip
 8007b54:	fa23 f302 	lsr.w	r3, r3, r2
 8007b58:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b5c:	e7cc      	b.n	8007af8 <__aeabi_d2f+0x14>
 8007b5e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b62:	d107      	bne.n	8007b74 <__aeabi_d2f+0x90>
 8007b64:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b68:	bf1e      	ittt	ne
 8007b6a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b6e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b72:	4770      	bxne	lr
 8007b74:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b78:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b7c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b80:	4770      	bx	lr
 8007b82:	bf00      	nop

08007b84 <__aeabi_frsub>:
 8007b84:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b88:	e002      	b.n	8007b90 <__addsf3>
 8007b8a:	bf00      	nop

08007b8c <__aeabi_fsub>:
 8007b8c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b90 <__addsf3>:
 8007b90:	0042      	lsls	r2, r0, #1
 8007b92:	bf1f      	itttt	ne
 8007b94:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007b98:	ea92 0f03 	teqne	r2, r3
 8007b9c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007ba0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ba4:	d06a      	beq.n	8007c7c <__addsf3+0xec>
 8007ba6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007baa:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bae:	bfc1      	itttt	gt
 8007bb0:	18d2      	addgt	r2, r2, r3
 8007bb2:	4041      	eorgt	r1, r0
 8007bb4:	4048      	eorgt	r0, r1
 8007bb6:	4041      	eorgt	r1, r0
 8007bb8:	bfb8      	it	lt
 8007bba:	425b      	neglt	r3, r3
 8007bbc:	2b19      	cmp	r3, #25
 8007bbe:	bf88      	it	hi
 8007bc0:	4770      	bxhi	lr
 8007bc2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bc6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bca:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bce:	bf18      	it	ne
 8007bd0:	4240      	negne	r0, r0
 8007bd2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bd6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007bda:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bde:	bf18      	it	ne
 8007be0:	4249      	negne	r1, r1
 8007be2:	ea92 0f03 	teq	r2, r3
 8007be6:	d03f      	beq.n	8007c68 <__addsf3+0xd8>
 8007be8:	f1a2 0201 	sub.w	r2, r2, #1
 8007bec:	fa41 fc03 	asr.w	ip, r1, r3
 8007bf0:	eb10 000c 	adds.w	r0, r0, ip
 8007bf4:	f1c3 0320 	rsb	r3, r3, #32
 8007bf8:	fa01 f103 	lsl.w	r1, r1, r3
 8007bfc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c00:	d502      	bpl.n	8007c08 <__addsf3+0x78>
 8007c02:	4249      	negs	r1, r1
 8007c04:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c08:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c0c:	d313      	bcc.n	8007c36 <__addsf3+0xa6>
 8007c0e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c12:	d306      	bcc.n	8007c22 <__addsf3+0x92>
 8007c14:	0840      	lsrs	r0, r0, #1
 8007c16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c1a:	f102 0201 	add.w	r2, r2, #1
 8007c1e:	2afe      	cmp	r2, #254	; 0xfe
 8007c20:	d251      	bcs.n	8007cc6 <__addsf3+0x136>
 8007c22:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c26:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c2a:	bf08      	it	eq
 8007c2c:	f020 0001 	biceq.w	r0, r0, #1
 8007c30:	ea40 0003 	orr.w	r0, r0, r3
 8007c34:	4770      	bx	lr
 8007c36:	0049      	lsls	r1, r1, #1
 8007c38:	eb40 0000 	adc.w	r0, r0, r0
 8007c3c:	3a01      	subs	r2, #1
 8007c3e:	bf28      	it	cs
 8007c40:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c44:	d2ed      	bcs.n	8007c22 <__addsf3+0x92>
 8007c46:	fab0 fc80 	clz	ip, r0
 8007c4a:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c4e:	ebb2 020c 	subs.w	r2, r2, ip
 8007c52:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c56:	bfaa      	itet	ge
 8007c58:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c5c:	4252      	neglt	r2, r2
 8007c5e:	4318      	orrge	r0, r3
 8007c60:	bfbc      	itt	lt
 8007c62:	40d0      	lsrlt	r0, r2
 8007c64:	4318      	orrlt	r0, r3
 8007c66:	4770      	bx	lr
 8007c68:	f092 0f00 	teq	r2, #0
 8007c6c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c70:	bf06      	itte	eq
 8007c72:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c76:	3201      	addeq	r2, #1
 8007c78:	3b01      	subne	r3, #1
 8007c7a:	e7b5      	b.n	8007be8 <__addsf3+0x58>
 8007c7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c84:	bf18      	it	ne
 8007c86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c8a:	d021      	beq.n	8007cd0 <__addsf3+0x140>
 8007c8c:	ea92 0f03 	teq	r2, r3
 8007c90:	d004      	beq.n	8007c9c <__addsf3+0x10c>
 8007c92:	f092 0f00 	teq	r2, #0
 8007c96:	bf08      	it	eq
 8007c98:	4608      	moveq	r0, r1
 8007c9a:	4770      	bx	lr
 8007c9c:	ea90 0f01 	teq	r0, r1
 8007ca0:	bf1c      	itt	ne
 8007ca2:	2000      	movne	r0, #0
 8007ca4:	4770      	bxne	lr
 8007ca6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007caa:	d104      	bne.n	8007cb6 <__addsf3+0x126>
 8007cac:	0040      	lsls	r0, r0, #1
 8007cae:	bf28      	it	cs
 8007cb0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cb4:	4770      	bx	lr
 8007cb6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cba:	bf3c      	itt	cc
 8007cbc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007cc0:	4770      	bxcc	lr
 8007cc2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cc6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007cd4:	bf16      	itet	ne
 8007cd6:	4608      	movne	r0, r1
 8007cd8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007cdc:	4601      	movne	r1, r0
 8007cde:	0242      	lsls	r2, r0, #9
 8007ce0:	bf06      	itte	eq
 8007ce2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007ce6:	ea90 0f01 	teqeq	r0, r1
 8007cea:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cee:	4770      	bx	lr

08007cf0 <__aeabi_ui2f>:
 8007cf0:	f04f 0300 	mov.w	r3, #0
 8007cf4:	e004      	b.n	8007d00 <__aeabi_i2f+0x8>
 8007cf6:	bf00      	nop

08007cf8 <__aeabi_i2f>:
 8007cf8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007cfc:	bf48      	it	mi
 8007cfe:	4240      	negmi	r0, r0
 8007d00:	ea5f 0c00 	movs.w	ip, r0
 8007d04:	bf08      	it	eq
 8007d06:	4770      	bxeq	lr
 8007d08:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d0c:	4601      	mov	r1, r0
 8007d0e:	f04f 0000 	mov.w	r0, #0
 8007d12:	e01c      	b.n	8007d4e <__aeabi_l2f+0x2a>

08007d14 <__aeabi_ul2f>:
 8007d14:	ea50 0201 	orrs.w	r2, r0, r1
 8007d18:	bf08      	it	eq
 8007d1a:	4770      	bxeq	lr
 8007d1c:	f04f 0300 	mov.w	r3, #0
 8007d20:	e00a      	b.n	8007d38 <__aeabi_l2f+0x14>
 8007d22:	bf00      	nop

08007d24 <__aeabi_l2f>:
 8007d24:	ea50 0201 	orrs.w	r2, r0, r1
 8007d28:	bf08      	it	eq
 8007d2a:	4770      	bxeq	lr
 8007d2c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d30:	d502      	bpl.n	8007d38 <__aeabi_l2f+0x14>
 8007d32:	4240      	negs	r0, r0
 8007d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d38:	ea5f 0c01 	movs.w	ip, r1
 8007d3c:	bf02      	ittt	eq
 8007d3e:	4684      	moveq	ip, r0
 8007d40:	4601      	moveq	r1, r0
 8007d42:	2000      	moveq	r0, #0
 8007d44:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d48:	bf08      	it	eq
 8007d4a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d4e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d52:	fabc f28c 	clz	r2, ip
 8007d56:	3a08      	subs	r2, #8
 8007d58:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d5c:	db10      	blt.n	8007d80 <__aeabi_l2f+0x5c>
 8007d5e:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d62:	4463      	add	r3, ip
 8007d64:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d68:	f1c2 0220 	rsb	r2, r2, #32
 8007d6c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d70:	fa20 f202 	lsr.w	r2, r0, r2
 8007d74:	eb43 0002 	adc.w	r0, r3, r2
 8007d78:	bf08      	it	eq
 8007d7a:	f020 0001 	biceq.w	r0, r0, #1
 8007d7e:	4770      	bx	lr
 8007d80:	f102 0220 	add.w	r2, r2, #32
 8007d84:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d88:	f1c2 0220 	rsb	r2, r2, #32
 8007d8c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d90:	fa21 f202 	lsr.w	r2, r1, r2
 8007d94:	eb43 0002 	adc.w	r0, r3, r2
 8007d98:	bf08      	it	eq
 8007d9a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007d9e:	4770      	bx	lr

08007da0 <__gesf2>:
 8007da0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007da4:	e006      	b.n	8007db4 <__cmpsf2+0x4>
 8007da6:	bf00      	nop

08007da8 <__lesf2>:
 8007da8:	f04f 0c01 	mov.w	ip, #1
 8007dac:	e002      	b.n	8007db4 <__cmpsf2+0x4>
 8007dae:	bf00      	nop

08007db0 <__cmpsf2>:
 8007db0:	f04f 0c01 	mov.w	ip, #1
 8007db4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007db8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dbc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dc0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dc4:	bf18      	it	ne
 8007dc6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dca:	d011      	beq.n	8007df0 <__cmpsf2+0x40>
 8007dcc:	b001      	add	sp, #4
 8007dce:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dd2:	bf18      	it	ne
 8007dd4:	ea90 0f01 	teqne	r0, r1
 8007dd8:	bf58      	it	pl
 8007dda:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dde:	bf88      	it	hi
 8007de0:	17c8      	asrhi	r0, r1, #31
 8007de2:	bf38      	it	cc
 8007de4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007de8:	bf18      	it	ne
 8007dea:	f040 0001 	orrne.w	r0, r0, #1
 8007dee:	4770      	bx	lr
 8007df0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007df4:	d102      	bne.n	8007dfc <__cmpsf2+0x4c>
 8007df6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007dfa:	d105      	bne.n	8007e08 <__cmpsf2+0x58>
 8007dfc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e00:	d1e4      	bne.n	8007dcc <__cmpsf2+0x1c>
 8007e02:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e06:	d0e1      	beq.n	8007dcc <__cmpsf2+0x1c>
 8007e08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e0c:	4770      	bx	lr
 8007e0e:	bf00      	nop

08007e10 <__aeabi_cfrcmple>:
 8007e10:	4684      	mov	ip, r0
 8007e12:	4608      	mov	r0, r1
 8007e14:	4661      	mov	r1, ip
 8007e16:	e7ff      	b.n	8007e18 <__aeabi_cfcmpeq>

08007e18 <__aeabi_cfcmpeq>:
 8007e18:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e1a:	f7ff ffc9 	bl	8007db0 <__cmpsf2>
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	bf48      	it	mi
 8007e22:	f110 0f00 	cmnmi.w	r0, #0
 8007e26:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e28 <__aeabi_fcmpeq>:
 8007e28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e2c:	f7ff fff4 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e30:	bf0c      	ite	eq
 8007e32:	2001      	moveq	r0, #1
 8007e34:	2000      	movne	r0, #0
 8007e36:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e3a:	bf00      	nop

08007e3c <__aeabi_fcmplt>:
 8007e3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e40:	f7ff ffea 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e44:	bf34      	ite	cc
 8007e46:	2001      	movcc	r0, #1
 8007e48:	2000      	movcs	r0, #0
 8007e4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e4e:	bf00      	nop

08007e50 <__aeabi_fcmple>:
 8007e50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e54:	f7ff ffe0 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e58:	bf94      	ite	ls
 8007e5a:	2001      	movls	r0, #1
 8007e5c:	2000      	movhi	r0, #0
 8007e5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e62:	bf00      	nop

08007e64 <__aeabi_fcmpge>:
 8007e64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e68:	f7ff ffd2 	bl	8007e10 <__aeabi_cfrcmple>
 8007e6c:	bf94      	ite	ls
 8007e6e:	2001      	movls	r0, #1
 8007e70:	2000      	movhi	r0, #0
 8007e72:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e76:	bf00      	nop

08007e78 <__aeabi_fcmpgt>:
 8007e78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e7c:	f7ff ffc8 	bl	8007e10 <__aeabi_cfrcmple>
 8007e80:	bf34      	ite	cc
 8007e82:	2001      	movcc	r0, #1
 8007e84:	2000      	movcs	r0, #0
 8007e86:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e8a:	bf00      	nop

08007e8c <__aeabi_f2iz>:
 8007e8c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e90:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007e94:	d30f      	bcc.n	8007eb6 <__aeabi_f2iz+0x2a>
 8007e96:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007e9a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007e9e:	d90d      	bls.n	8007ebc <__aeabi_f2iz+0x30>
 8007ea0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007ea8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eac:	fa23 f002 	lsr.w	r0, r3, r2
 8007eb0:	bf18      	it	ne
 8007eb2:	4240      	negne	r0, r0
 8007eb4:	4770      	bx	lr
 8007eb6:	f04f 0000 	mov.w	r0, #0
 8007eba:	4770      	bx	lr
 8007ebc:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ec0:	d101      	bne.n	8007ec6 <__aeabi_f2iz+0x3a>
 8007ec2:	0242      	lsls	r2, r0, #9
 8007ec4:	d105      	bne.n	8007ed2 <__aeabi_f2iz+0x46>
 8007ec6:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007eca:	bf08      	it	eq
 8007ecc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007ed0:	4770      	bx	lr
 8007ed2:	f04f 0000 	mov.w	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <__aeabi_uldivmod>:
 8007ed8:	b953      	cbnz	r3, 8007ef0 <__aeabi_uldivmod+0x18>
 8007eda:	b94a      	cbnz	r2, 8007ef0 <__aeabi_uldivmod+0x18>
 8007edc:	2900      	cmp	r1, #0
 8007ede:	bf08      	it	eq
 8007ee0:	2800      	cmpeq	r0, #0
 8007ee2:	bf1c      	itt	ne
 8007ee4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ee8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007eec:	f000 b80c 	b.w	8007f08 <__aeabi_idiv0>
 8007ef0:	f1ad 0c08 	sub.w	ip, sp, #8
 8007ef4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007ef8:	f001 fa12 	bl	8009320 <__udivmoddi4>
 8007efc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f04:	b004      	add	sp, #16
 8007f06:	4770      	bx	lr

08007f08 <__aeabi_idiv0>:
 8007f08:	4770      	bx	lr
 8007f0a:	bf00      	nop

08007f0c <__aeabi_drsub>:
 8007f0c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f10:	e002      	b.n	8007f18 <__adddf3>
 8007f12:	bf00      	nop

08007f14 <__aeabi_dsub>:
 8007f14:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f18 <__adddf3>:
 8007f18:	b530      	push	{r4, r5, lr}
 8007f1a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f1e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f22:	ea94 0f05 	teq	r4, r5
 8007f26:	bf08      	it	eq
 8007f28:	ea90 0f02 	teqeq	r0, r2
 8007f2c:	bf1f      	itttt	ne
 8007f2e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f32:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f36:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f3a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f3e:	f000 80e2 	beq.w	8008106 <__adddf3+0x1ee>
 8007f42:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f46:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007f4a:	bfb8      	it	lt
 8007f4c:	426d      	neglt	r5, r5
 8007f4e:	dd0c      	ble.n	8007f6a <__adddf3+0x52>
 8007f50:	442c      	add	r4, r5
 8007f52:	ea80 0202 	eor.w	r2, r0, r2
 8007f56:	ea81 0303 	eor.w	r3, r1, r3
 8007f5a:	ea82 0000 	eor.w	r0, r2, r0
 8007f5e:	ea83 0101 	eor.w	r1, r3, r1
 8007f62:	ea80 0202 	eor.w	r2, r0, r2
 8007f66:	ea81 0303 	eor.w	r3, r1, r3
 8007f6a:	2d36      	cmp	r5, #54	; 0x36
 8007f6c:	bf88      	it	hi
 8007f6e:	bd30      	pophi	{r4, r5, pc}
 8007f70:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007f74:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007f78:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007f7c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007f80:	d002      	beq.n	8007f88 <__adddf3+0x70>
 8007f82:	4240      	negs	r0, r0
 8007f84:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007f88:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007f8c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007f90:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007f94:	d002      	beq.n	8007f9c <__adddf3+0x84>
 8007f96:	4252      	negs	r2, r2
 8007f98:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007f9c:	ea94 0f05 	teq	r4, r5
 8007fa0:	f000 80a7 	beq.w	80080f2 <__adddf3+0x1da>
 8007fa4:	f1a4 0401 	sub.w	r4, r4, #1
 8007fa8:	f1d5 0e20 	rsbs	lr, r5, #32
 8007fac:	db0d      	blt.n	8007fca <__adddf3+0xb2>
 8007fae:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007fb2:	fa22 f205 	lsr.w	r2, r2, r5
 8007fb6:	1880      	adds	r0, r0, r2
 8007fb8:	f141 0100 	adc.w	r1, r1, #0
 8007fbc:	fa03 f20e 	lsl.w	r2, r3, lr
 8007fc0:	1880      	adds	r0, r0, r2
 8007fc2:	fa43 f305 	asr.w	r3, r3, r5
 8007fc6:	4159      	adcs	r1, r3
 8007fc8:	e00e      	b.n	8007fe8 <__adddf3+0xd0>
 8007fca:	f1a5 0520 	sub.w	r5, r5, #32
 8007fce:	f10e 0e20 	add.w	lr, lr, #32
 8007fd2:	2a01      	cmp	r2, #1
 8007fd4:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007fd8:	bf28      	it	cs
 8007fda:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007fde:	fa43 f305 	asr.w	r3, r3, r5
 8007fe2:	18c0      	adds	r0, r0, r3
 8007fe4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007fe8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007fec:	d507      	bpl.n	8007ffe <__adddf3+0xe6>
 8007fee:	f04f 0e00 	mov.w	lr, #0
 8007ff2:	f1dc 0c00 	rsbs	ip, ip, #0
 8007ff6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007ffa:	eb6e 0101 	sbc.w	r1, lr, r1
 8007ffe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008002:	d31b      	bcc.n	800803c <__adddf3+0x124>
 8008004:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008008:	d30c      	bcc.n	8008024 <__adddf3+0x10c>
 800800a:	0849      	lsrs	r1, r1, #1
 800800c:	ea5f 0030 	movs.w	r0, r0, rrx
 8008010:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008014:	f104 0401 	add.w	r4, r4, #1
 8008018:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800801c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008020:	f080 809a 	bcs.w	8008158 <__adddf3+0x240>
 8008024:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008028:	bf08      	it	eq
 800802a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800802e:	f150 0000 	adcs.w	r0, r0, #0
 8008032:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008036:	ea41 0105 	orr.w	r1, r1, r5
 800803a:	bd30      	pop	{r4, r5, pc}
 800803c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008040:	4140      	adcs	r0, r0
 8008042:	eb41 0101 	adc.w	r1, r1, r1
 8008046:	3c01      	subs	r4, #1
 8008048:	bf28      	it	cs
 800804a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800804e:	d2e9      	bcs.n	8008024 <__adddf3+0x10c>
 8008050:	f091 0f00 	teq	r1, #0
 8008054:	bf04      	itt	eq
 8008056:	4601      	moveq	r1, r0
 8008058:	2000      	moveq	r0, #0
 800805a:	fab1 f381 	clz	r3, r1
 800805e:	bf08      	it	eq
 8008060:	3320      	addeq	r3, #32
 8008062:	f1a3 030b 	sub.w	r3, r3, #11
 8008066:	f1b3 0220 	subs.w	r2, r3, #32
 800806a:	da0c      	bge.n	8008086 <__adddf3+0x16e>
 800806c:	320c      	adds	r2, #12
 800806e:	dd08      	ble.n	8008082 <__adddf3+0x16a>
 8008070:	f102 0c14 	add.w	ip, r2, #20
 8008074:	f1c2 020c 	rsb	r2, r2, #12
 8008078:	fa01 f00c 	lsl.w	r0, r1, ip
 800807c:	fa21 f102 	lsr.w	r1, r1, r2
 8008080:	e00c      	b.n	800809c <__adddf3+0x184>
 8008082:	f102 0214 	add.w	r2, r2, #20
 8008086:	bfd8      	it	le
 8008088:	f1c2 0c20 	rsble	ip, r2, #32
 800808c:	fa01 f102 	lsl.w	r1, r1, r2
 8008090:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008094:	bfdc      	itt	le
 8008096:	ea41 010c 	orrle.w	r1, r1, ip
 800809a:	4090      	lslle	r0, r2
 800809c:	1ae4      	subs	r4, r4, r3
 800809e:	bfa2      	ittt	ge
 80080a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080a4:	4329      	orrge	r1, r5
 80080a6:	bd30      	popge	{r4, r5, pc}
 80080a8:	ea6f 0404 	mvn.w	r4, r4
 80080ac:	3c1f      	subs	r4, #31
 80080ae:	da1c      	bge.n	80080ea <__adddf3+0x1d2>
 80080b0:	340c      	adds	r4, #12
 80080b2:	dc0e      	bgt.n	80080d2 <__adddf3+0x1ba>
 80080b4:	f104 0414 	add.w	r4, r4, #20
 80080b8:	f1c4 0220 	rsb	r2, r4, #32
 80080bc:	fa20 f004 	lsr.w	r0, r0, r4
 80080c0:	fa01 f302 	lsl.w	r3, r1, r2
 80080c4:	ea40 0003 	orr.w	r0, r0, r3
 80080c8:	fa21 f304 	lsr.w	r3, r1, r4
 80080cc:	ea45 0103 	orr.w	r1, r5, r3
 80080d0:	bd30      	pop	{r4, r5, pc}
 80080d2:	f1c4 040c 	rsb	r4, r4, #12
 80080d6:	f1c4 0220 	rsb	r2, r4, #32
 80080da:	fa20 f002 	lsr.w	r0, r0, r2
 80080de:	fa01 f304 	lsl.w	r3, r1, r4
 80080e2:	ea40 0003 	orr.w	r0, r0, r3
 80080e6:	4629      	mov	r1, r5
 80080e8:	bd30      	pop	{r4, r5, pc}
 80080ea:	fa21 f004 	lsr.w	r0, r1, r4
 80080ee:	4629      	mov	r1, r5
 80080f0:	bd30      	pop	{r4, r5, pc}
 80080f2:	f094 0f00 	teq	r4, #0
 80080f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80080fa:	bf06      	itte	eq
 80080fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008100:	3401      	addeq	r4, #1
 8008102:	3d01      	subne	r5, #1
 8008104:	e74e      	b.n	8007fa4 <__adddf3+0x8c>
 8008106:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800810a:	bf18      	it	ne
 800810c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008110:	d029      	beq.n	8008166 <__adddf3+0x24e>
 8008112:	ea94 0f05 	teq	r4, r5
 8008116:	bf08      	it	eq
 8008118:	ea90 0f02 	teqeq	r0, r2
 800811c:	d005      	beq.n	800812a <__adddf3+0x212>
 800811e:	ea54 0c00 	orrs.w	ip, r4, r0
 8008122:	bf04      	itt	eq
 8008124:	4619      	moveq	r1, r3
 8008126:	4610      	moveq	r0, r2
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	ea91 0f03 	teq	r1, r3
 800812e:	bf1e      	ittt	ne
 8008130:	2100      	movne	r1, #0
 8008132:	2000      	movne	r0, #0
 8008134:	bd30      	popne	{r4, r5, pc}
 8008136:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800813a:	d105      	bne.n	8008148 <__adddf3+0x230>
 800813c:	0040      	lsls	r0, r0, #1
 800813e:	4149      	adcs	r1, r1
 8008140:	bf28      	it	cs
 8008142:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008146:	bd30      	pop	{r4, r5, pc}
 8008148:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800814c:	bf3c      	itt	cc
 800814e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008152:	bd30      	popcc	{r4, r5, pc}
 8008154:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008158:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800815c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008160:	f04f 0000 	mov.w	r0, #0
 8008164:	bd30      	pop	{r4, r5, pc}
 8008166:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800816a:	bf1a      	itte	ne
 800816c:	4619      	movne	r1, r3
 800816e:	4610      	movne	r0, r2
 8008170:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008174:	bf1c      	itt	ne
 8008176:	460b      	movne	r3, r1
 8008178:	4602      	movne	r2, r0
 800817a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800817e:	bf06      	itte	eq
 8008180:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008184:	ea91 0f03 	teqeq	r1, r3
 8008188:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800818c:	bd30      	pop	{r4, r5, pc}
 800818e:	bf00      	nop

08008190 <__aeabi_ui2d>:
 8008190:	f090 0f00 	teq	r0, #0
 8008194:	bf04      	itt	eq
 8008196:	2100      	moveq	r1, #0
 8008198:	4770      	bxeq	lr
 800819a:	b530      	push	{r4, r5, lr}
 800819c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081a4:	f04f 0500 	mov.w	r5, #0
 80081a8:	f04f 0100 	mov.w	r1, #0
 80081ac:	e750      	b.n	8008050 <__adddf3+0x138>
 80081ae:	bf00      	nop

080081b0 <__aeabi_i2d>:
 80081b0:	f090 0f00 	teq	r0, #0
 80081b4:	bf04      	itt	eq
 80081b6:	2100      	moveq	r1, #0
 80081b8:	4770      	bxeq	lr
 80081ba:	b530      	push	{r4, r5, lr}
 80081bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081c4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80081c8:	bf48      	it	mi
 80081ca:	4240      	negmi	r0, r0
 80081cc:	f04f 0100 	mov.w	r1, #0
 80081d0:	e73e      	b.n	8008050 <__adddf3+0x138>
 80081d2:	bf00      	nop

080081d4 <__aeabi_f2d>:
 80081d4:	0042      	lsls	r2, r0, #1
 80081d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80081da:	ea4f 0131 	mov.w	r1, r1, rrx
 80081de:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80081e2:	bf1f      	itttt	ne
 80081e4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80081e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80081ec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80081f0:	4770      	bxne	lr
 80081f2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80081f6:	bf08      	it	eq
 80081f8:	4770      	bxeq	lr
 80081fa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80081fe:	bf04      	itt	eq
 8008200:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008204:	4770      	bxeq	lr
 8008206:	b530      	push	{r4, r5, lr}
 8008208:	f44f 7460 	mov.w	r4, #896	; 0x380
 800820c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008210:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008214:	e71c      	b.n	8008050 <__adddf3+0x138>
 8008216:	bf00      	nop

08008218 <__aeabi_ul2d>:
 8008218:	ea50 0201 	orrs.w	r2, r0, r1
 800821c:	bf08      	it	eq
 800821e:	4770      	bxeq	lr
 8008220:	b530      	push	{r4, r5, lr}
 8008222:	f04f 0500 	mov.w	r5, #0
 8008226:	e00a      	b.n	800823e <__aeabi_l2d+0x16>

08008228 <__aeabi_l2d>:
 8008228:	ea50 0201 	orrs.w	r2, r0, r1
 800822c:	bf08      	it	eq
 800822e:	4770      	bxeq	lr
 8008230:	b530      	push	{r4, r5, lr}
 8008232:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008236:	d502      	bpl.n	800823e <__aeabi_l2d+0x16>
 8008238:	4240      	negs	r0, r0
 800823a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800823e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008242:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008246:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800824a:	f43f aed8 	beq.w	8007ffe <__adddf3+0xe6>
 800824e:	f04f 0203 	mov.w	r2, #3
 8008252:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008256:	bf18      	it	ne
 8008258:	3203      	addne	r2, #3
 800825a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800825e:	bf18      	it	ne
 8008260:	3203      	addne	r2, #3
 8008262:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008266:	f1c2 0320 	rsb	r3, r2, #32
 800826a:	fa00 fc03 	lsl.w	ip, r0, r3
 800826e:	fa20 f002 	lsr.w	r0, r0, r2
 8008272:	fa01 fe03 	lsl.w	lr, r1, r3
 8008276:	ea40 000e 	orr.w	r0, r0, lr
 800827a:	fa21 f102 	lsr.w	r1, r1, r2
 800827e:	4414      	add	r4, r2
 8008280:	e6bd      	b.n	8007ffe <__adddf3+0xe6>
 8008282:	bf00      	nop

08008284 <__aeabi_fmul>:
 8008284:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008288:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800828c:	bf1e      	ittt	ne
 800828e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008292:	ea92 0f0c 	teqne	r2, ip
 8008296:	ea93 0f0c 	teqne	r3, ip
 800829a:	d06f      	beq.n	800837c <__aeabi_fmul+0xf8>
 800829c:	441a      	add	r2, r3
 800829e:	ea80 0c01 	eor.w	ip, r0, r1
 80082a2:	0240      	lsls	r0, r0, #9
 80082a4:	bf18      	it	ne
 80082a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80082aa:	d01e      	beq.n	80082ea <__aeabi_fmul+0x66>
 80082ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80082b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80082b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80082b8:	fba0 3101 	umull	r3, r1, r0, r1
 80082bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80082c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80082c4:	bf3e      	ittt	cc
 80082c6:	0049      	lslcc	r1, r1, #1
 80082c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80082cc:	005b      	lslcc	r3, r3, #1
 80082ce:	ea40 0001 	orr.w	r0, r0, r1
 80082d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80082d6:	2afd      	cmp	r2, #253	; 0xfd
 80082d8:	d81d      	bhi.n	8008316 <__aeabi_fmul+0x92>
 80082da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80082de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80082e2:	bf08      	it	eq
 80082e4:	f020 0001 	biceq.w	r0, r0, #1
 80082e8:	4770      	bx	lr
 80082ea:	f090 0f00 	teq	r0, #0
 80082ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80082f2:	bf08      	it	eq
 80082f4:	0249      	lsleq	r1, r1, #9
 80082f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80082fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80082fe:	3a7f      	subs	r2, #127	; 0x7f
 8008300:	bfc2      	ittt	gt
 8008302:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008306:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800830a:	4770      	bxgt	lr
 800830c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008310:	f04f 0300 	mov.w	r3, #0
 8008314:	3a01      	subs	r2, #1
 8008316:	dc5d      	bgt.n	80083d4 <__aeabi_fmul+0x150>
 8008318:	f112 0f19 	cmn.w	r2, #25
 800831c:	bfdc      	itt	le
 800831e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008322:	4770      	bxle	lr
 8008324:	f1c2 0200 	rsb	r2, r2, #0
 8008328:	0041      	lsls	r1, r0, #1
 800832a:	fa21 f102 	lsr.w	r1, r1, r2
 800832e:	f1c2 0220 	rsb	r2, r2, #32
 8008332:	fa00 fc02 	lsl.w	ip, r0, r2
 8008336:	ea5f 0031 	movs.w	r0, r1, rrx
 800833a:	f140 0000 	adc.w	r0, r0, #0
 800833e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008342:	bf08      	it	eq
 8008344:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008348:	4770      	bx	lr
 800834a:	f092 0f00 	teq	r2, #0
 800834e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008352:	bf02      	ittt	eq
 8008354:	0040      	lsleq	r0, r0, #1
 8008356:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800835a:	3a01      	subeq	r2, #1
 800835c:	d0f9      	beq.n	8008352 <__aeabi_fmul+0xce>
 800835e:	ea40 000c 	orr.w	r0, r0, ip
 8008362:	f093 0f00 	teq	r3, #0
 8008366:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800836a:	bf02      	ittt	eq
 800836c:	0049      	lsleq	r1, r1, #1
 800836e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008372:	3b01      	subeq	r3, #1
 8008374:	d0f9      	beq.n	800836a <__aeabi_fmul+0xe6>
 8008376:	ea41 010c 	orr.w	r1, r1, ip
 800837a:	e78f      	b.n	800829c <__aeabi_fmul+0x18>
 800837c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008380:	ea92 0f0c 	teq	r2, ip
 8008384:	bf18      	it	ne
 8008386:	ea93 0f0c 	teqne	r3, ip
 800838a:	d00a      	beq.n	80083a2 <__aeabi_fmul+0x11e>
 800838c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008390:	bf18      	it	ne
 8008392:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008396:	d1d8      	bne.n	800834a <__aeabi_fmul+0xc6>
 8008398:	ea80 0001 	eor.w	r0, r0, r1
 800839c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083a0:	4770      	bx	lr
 80083a2:	f090 0f00 	teq	r0, #0
 80083a6:	bf17      	itett	ne
 80083a8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80083ac:	4608      	moveq	r0, r1
 80083ae:	f091 0f00 	teqne	r1, #0
 80083b2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80083b6:	d014      	beq.n	80083e2 <__aeabi_fmul+0x15e>
 80083b8:	ea92 0f0c 	teq	r2, ip
 80083bc:	d101      	bne.n	80083c2 <__aeabi_fmul+0x13e>
 80083be:	0242      	lsls	r2, r0, #9
 80083c0:	d10f      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083c2:	ea93 0f0c 	teq	r3, ip
 80083c6:	d103      	bne.n	80083d0 <__aeabi_fmul+0x14c>
 80083c8:	024b      	lsls	r3, r1, #9
 80083ca:	bf18      	it	ne
 80083cc:	4608      	movne	r0, r1
 80083ce:	d108      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083d0:	ea80 0001 	eor.w	r0, r0, r1
 80083d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80083e0:	4770      	bx	lr
 80083e2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083e6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80083ea:	4770      	bx	lr

080083ec <__aeabi_fdiv>:
 80083ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80083f0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80083f4:	bf1e      	ittt	ne
 80083f6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80083fa:	ea92 0f0c 	teqne	r2, ip
 80083fe:	ea93 0f0c 	teqne	r3, ip
 8008402:	d069      	beq.n	80084d8 <__aeabi_fdiv+0xec>
 8008404:	eba2 0203 	sub.w	r2, r2, r3
 8008408:	ea80 0c01 	eor.w	ip, r0, r1
 800840c:	0249      	lsls	r1, r1, #9
 800840e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8008412:	d037      	beq.n	8008484 <__aeabi_fdiv+0x98>
 8008414:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008418:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800841c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008420:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008424:	428b      	cmp	r3, r1
 8008426:	bf38      	it	cc
 8008428:	005b      	lslcc	r3, r3, #1
 800842a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800842e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008432:	428b      	cmp	r3, r1
 8008434:	bf24      	itt	cs
 8008436:	1a5b      	subcs	r3, r3, r1
 8008438:	ea40 000c 	orrcs.w	r0, r0, ip
 800843c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008440:	bf24      	itt	cs
 8008442:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008446:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800844a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800844e:	bf24      	itt	cs
 8008450:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008454:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008458:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800845c:	bf24      	itt	cs
 800845e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008462:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008466:	011b      	lsls	r3, r3, #4
 8008468:	bf18      	it	ne
 800846a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800846e:	d1e0      	bne.n	8008432 <__aeabi_fdiv+0x46>
 8008470:	2afd      	cmp	r2, #253	; 0xfd
 8008472:	f63f af50 	bhi.w	8008316 <__aeabi_fmul+0x92>
 8008476:	428b      	cmp	r3, r1
 8008478:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800847c:	bf08      	it	eq
 800847e:	f020 0001 	biceq.w	r0, r0, #1
 8008482:	4770      	bx	lr
 8008484:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008488:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800848c:	327f      	adds	r2, #127	; 0x7f
 800848e:	bfc2      	ittt	gt
 8008490:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008494:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008498:	4770      	bxgt	lr
 800849a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800849e:	f04f 0300 	mov.w	r3, #0
 80084a2:	3a01      	subs	r2, #1
 80084a4:	e737      	b.n	8008316 <__aeabi_fmul+0x92>
 80084a6:	f092 0f00 	teq	r2, #0
 80084aa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80084ae:	bf02      	ittt	eq
 80084b0:	0040      	lsleq	r0, r0, #1
 80084b2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80084b6:	3a01      	subeq	r2, #1
 80084b8:	d0f9      	beq.n	80084ae <__aeabi_fdiv+0xc2>
 80084ba:	ea40 000c 	orr.w	r0, r0, ip
 80084be:	f093 0f00 	teq	r3, #0
 80084c2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80084c6:	bf02      	ittt	eq
 80084c8:	0049      	lsleq	r1, r1, #1
 80084ca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80084ce:	3b01      	subeq	r3, #1
 80084d0:	d0f9      	beq.n	80084c6 <__aeabi_fdiv+0xda>
 80084d2:	ea41 010c 	orr.w	r1, r1, ip
 80084d6:	e795      	b.n	8008404 <__aeabi_fdiv+0x18>
 80084d8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80084dc:	ea92 0f0c 	teq	r2, ip
 80084e0:	d108      	bne.n	80084f4 <__aeabi_fdiv+0x108>
 80084e2:	0242      	lsls	r2, r0, #9
 80084e4:	f47f af7d 	bne.w	80083e2 <__aeabi_fmul+0x15e>
 80084e8:	ea93 0f0c 	teq	r3, ip
 80084ec:	f47f af70 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 80084f0:	4608      	mov	r0, r1
 80084f2:	e776      	b.n	80083e2 <__aeabi_fmul+0x15e>
 80084f4:	ea93 0f0c 	teq	r3, ip
 80084f8:	d104      	bne.n	8008504 <__aeabi_fdiv+0x118>
 80084fa:	024b      	lsls	r3, r1, #9
 80084fc:	f43f af4c 	beq.w	8008398 <__aeabi_fmul+0x114>
 8008500:	4608      	mov	r0, r1
 8008502:	e76e      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008504:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008508:	bf18      	it	ne
 800850a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800850e:	d1ca      	bne.n	80084a6 <__aeabi_fdiv+0xba>
 8008510:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8008514:	f47f af5c 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 8008518:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800851c:	f47f af3c 	bne.w	8008398 <__aeabi_fmul+0x114>
 8008520:	e75f      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008522:	bf00      	nop

08008524 <__aeabi_f2uiz>:
 8008524:	0042      	lsls	r2, r0, #1
 8008526:	d20e      	bcs.n	8008546 <__aeabi_f2uiz+0x22>
 8008528:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800852c:	d30b      	bcc.n	8008546 <__aeabi_f2uiz+0x22>
 800852e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008532:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8008536:	d409      	bmi.n	800854c <__aeabi_f2uiz+0x28>
 8008538:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800853c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008540:	fa23 f002 	lsr.w	r0, r3, r2
 8008544:	4770      	bx	lr
 8008546:	f04f 0000 	mov.w	r0, #0
 800854a:	4770      	bx	lr
 800854c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008550:	d101      	bne.n	8008556 <__aeabi_f2uiz+0x32>
 8008552:	0242      	lsls	r2, r0, #9
 8008554:	d102      	bne.n	800855c <__aeabi_f2uiz+0x38>
 8008556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800855a:	4770      	bx	lr
 800855c:	f04f 0000 	mov.w	r0, #0
 8008560:	4770      	bx	lr
 8008562:	bf00      	nop

08008564 <Reset_Handler>:
 8008564:	480c      	ldr	r0, [pc, #48]	; (8008598 <Zerobss+0x10>)
 8008566:	4685      	mov	sp, r0
 8008568:	2100      	movs	r1, #0
 800856a:	e003      	b.n	8008574 <DataInit>

0800856c <CopyData>:
 800856c:	4b0b      	ldr	r3, [pc, #44]	; (800859c <Zerobss+0x14>)
 800856e:	585b      	ldr	r3, [r3, r1]
 8008570:	5043      	str	r3, [r0, r1]
 8008572:	3104      	adds	r1, #4

08008574 <DataInit>:
 8008574:	480a      	ldr	r0, [pc, #40]	; (80085a0 <Zerobss+0x18>)
 8008576:	4b0b      	ldr	r3, [pc, #44]	; (80085a4 <Zerobss+0x1c>)
 8008578:	1842      	adds	r2, r0, r1
 800857a:	429a      	cmp	r2, r3
 800857c:	d3f6      	bcc.n	800856c <CopyData>
 800857e:	4a0a      	ldr	r2, [pc, #40]	; (80085a8 <Zerobss+0x20>)
 8008580:	e002      	b.n	8008588 <Zerobss>

08008582 <FillZerobss>:
 8008582:	2300      	movs	r3, #0
 8008584:	f842 3b04 	str.w	r3, [r2], #4

08008588 <Zerobss>:
 8008588:	4b08      	ldr	r3, [pc, #32]	; (80085ac <Zerobss+0x24>)
 800858a:	429a      	cmp	r2, r3
 800858c:	d3f9      	bcc.n	8008582 <FillZerobss>
 800858e:	f00a f835 	bl	80125fc <SystemInit>
 8008592:	f000 f90f 	bl	80087b4 <main>
 8008596:	4770      	bx	lr
 8008598:	20018000 	andcs	r8, r1, r0
 800859c:	08016f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, sp, lr}
 80085a0:	20000000 	andcs	r0, r0, r0
 80085a4:	2000007c 	andcs	r0, r0, ip, ror r0
 80085a8:	20000080 	andcs	r0, r0, r0, lsl #1
 80085ac:	20014b20 	andcs	r4, r1, r0, lsr #22

080085b0 <ADC0_1_IRQHandler>:
 80085b0:	e7fe      	b.n	80085b0 <ADC0_1_IRQHandler>

080085b2 <DisplayHandler::~DisplayHandler()>:
 80085b2:	4770      	bx	lr

080085b4 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085b4:	4770      	bx	lr
	...

080085b8 <PixelDmxStartStop::Start()>:
 80085b8:	2204      	movs	r2, #4
 80085ba:	4b01      	ldr	r3, [pc, #4]	; (80085c0 <PixelDmxStartStop::Start()+0x8>)
 80085bc:	611a      	str	r2, [r3, #16]
 80085be:	4770      	bx	lr
 80085c0:	40011000 	andmi	r1, r1, r0

080085c4 <PixelDmxStartStop::Stop()>:
 80085c4:	2204      	movs	r2, #4
 80085c6:	4b01      	ldr	r3, [pc, #4]	; (80085cc <PixelDmxStartStop::Stop()+0x8>)
 80085c8:	615a      	str	r2, [r3, #20]
 80085ca:	4770      	bx	lr
 80085cc:	40011000 	andmi	r1, r1, r0

080085d0 <DisplayHandler::~DisplayHandler()>:
 80085d0:	b510      	push	{r4, lr}
 80085d2:	4604      	mov	r4, r0
 80085d4:	f009 fde6 	bl	80121a4 <operator delete(void*)>
 80085d8:	4620      	mov	r0, r4
 80085da:	bd10      	pop	{r4, pc}

080085dc <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085dc:	b510      	push	{r4, lr}
 80085de:	4604      	mov	r4, r0
 80085e0:	f009 fde0 	bl	80121a4 <operator delete(void*)>
 80085e4:	4620      	mov	r0, r4
 80085e6:	bd10      	pop	{r4, pc}

080085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80085e8:	b110      	cbz	r0, 80085f0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80085ea:	6803      	ldr	r3, [r0, #0]
 80085ec:	6a1b      	ldr	r3, [r3, #32]
 80085ee:	4718      	bx	r3
 80085f0:	4770      	bx	lr

080085f2 <Display::PutChar(int) [clone .isra.0]>:
 80085f2:	b110      	cbz	r0, 80085fa <Display::PutChar(int) [clone .isra.0]+0x8>
 80085f4:	6803      	ldr	r3, [r0, #0]
 80085f6:	695b      	ldr	r3, [r3, #20]
 80085f8:	4718      	bx	r3
 80085fa:	4770      	bx	lr

080085fc <DisplayHandler::Print(unsigned int)>:
 80085fc:	b538      	push	{r3, r4, r5, lr}
 80085fe:	7903      	ldrb	r3, [r0, #4]
 8008600:	b1f3      	cbz	r3, 8008640 <DisplayHandler::Print(unsigned int)+0x44>
 8008602:	2904      	cmp	r1, #4
 8008604:	bf98      	it	ls
 8008606:	4b0f      	ldrls	r3, [pc, #60]	; (8008644 <DisplayHandler::Print(unsigned int)+0x48>)
 8008608:	4d0f      	ldr	r5, [pc, #60]	; (8008648 <DisplayHandler::Print(unsigned int)+0x4c>)
 800860a:	bf98      	it	ls
 800860c:	5c5c      	ldrbls	r4, [r3, r1]
 800860e:	682b      	ldr	r3, [r5, #0]
 8008610:	bf88      	it	hi
 8008612:	2455      	movhi	r4, #85	; 0x55
 8008614:	6998      	ldr	r0, [r3, #24]
 8008616:	b178      	cbz	r0, 8008638 <DisplayHandler::Print(unsigned int)+0x3c>
 8008618:	7901      	ldrb	r1, [r0, #4]
 800861a:	3901      	subs	r1, #1
 800861c:	b2c9      	uxtb	r1, r1
 800861e:	b168      	cbz	r0, 800863c <DisplayHandler::Print(unsigned int)+0x40>
 8008620:	7942      	ldrb	r2, [r0, #5]
 8008622:	3a01      	subs	r2, #1
 8008624:	b2d2      	uxtb	r2, r2
 8008626:	f7ff ffdf 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800862a:	682b      	ldr	r3, [r5, #0]
 800862c:	4621      	mov	r1, r4
 800862e:	6998      	ldr	r0, [r3, #24]
 8008630:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008634:	f7ff bfdd 	b.w	80085f2 <Display::PutChar(int) [clone .isra.0]>
 8008638:	4601      	mov	r1, r0
 800863a:	e7ee      	b.n	800861a <DisplayHandler::Print(unsigned int)+0x1e>
 800863c:	4602      	mov	r2, r0
 800863e:	e7f0      	b.n	8008622 <DisplayHandler::Print(unsigned int)+0x26>
 8008640:	bd38      	pop	{r3, r4, r5, pc}
 8008642:	bf00      	nop
 8008644:	08014530 	stmdaeq	r1, {r4, r5, r8, sl, lr}
 8008648:	2000ada0 	andcs	sl, r0, r0, lsr #27

0800864c <Display::Printf(unsigned char, char const*, ...)>:
 800864c:	b40c      	push	{r2, r3}
 800864e:	b570      	push	{r4, r5, r6, lr}
 8008650:	6984      	ldr	r4, [r0, #24]
 8008652:	4605      	mov	r5, r0
 8008654:	460e      	mov	r6, r1
 8008656:	b08a      	sub	sp, #40	; 0x28
 8008658:	b174      	cbz	r4, 8008678 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800865a:	ab0f      	add	r3, sp, #60	; 0x3c
 800865c:	2120      	movs	r1, #32
 800865e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008660:	a802      	add	r0, sp, #8
 8008662:	9301      	str	r3, [sp, #4]
 8008664:	f000 fe4c 	bl	8009300 <vsnprintf>
 8008668:	4604      	mov	r4, r0
 800866a:	69a8      	ldr	r0, [r5, #24]
 800866c:	4631      	mov	r1, r6
 800866e:	6803      	ldr	r3, [r0, #0]
 8008670:	aa02      	add	r2, sp, #8
 8008672:	69dd      	ldr	r5, [r3, #28]
 8008674:	b2a3      	uxth	r3, r4
 8008676:	47a8      	blx	r5
 8008678:	4620      	mov	r0, r4
 800867a:	b00a      	add	sp, #40	; 0x28
 800867c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008680:	b002      	add	sp, #8
 8008682:	4770      	bx	lr

08008684 <Display::TextStatus(char const*)>:
 8008684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008688:	4604      	mov	r4, r0
 800868a:	6980      	ldr	r0, [r0, #24]
 800868c:	460d      	mov	r5, r1
 800868e:	b360      	cbz	r0, 80086ea <Display::TextStatus(char const*)+0x66>
 8008690:	7947      	ldrb	r7, [r0, #5]
 8008692:	2100      	movs	r1, #0
 8008694:	1e7e      	subs	r6, r7, #1
 8008696:	b2f6      	uxtb	r6, r6
 8008698:	4632      	mov	r2, r6
 800869a:	f890 9004 	ldrb.w	r9, [r0, #4]
 800869e:	f04f 0800 	mov.w	r8, #0
 80086a2:	f7ff ffa1 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086a6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80086aa:	45c1      	cmp	r9, r8
 80086ac:	69a0      	ldr	r0, [r4, #24]
 80086ae:	d816      	bhi.n	80086de <Display::TextStatus(char const*)+0x5a>
 80086b0:	4632      	mov	r2, r6
 80086b2:	2100      	movs	r1, #0
 80086b4:	f7ff ff98 	bl	80085e8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086b8:	69a0      	ldr	r0, [r4, #24]
 80086ba:	b1b0      	cbz	r0, 80086ea <Display::TextStatus(char const*)+0x66>
 80086bc:	2300      	movs	r3, #0
 80086be:	7901      	ldrb	r1, [r0, #4]
 80086c0:	5cea      	ldrb	r2, [r5, r3]
 80086c2:	b11a      	cbz	r2, 80086cc <Display::TextStatus(char const*)+0x48>
 80086c4:	1c5a      	adds	r2, r3, #1
 80086c6:	4299      	cmp	r1, r3
 80086c8:	4613      	mov	r3, r2
 80086ca:	dcf9      	bgt.n	80086c0 <Display::TextStatus(char const*)+0x3c>
 80086cc:	6802      	ldr	r2, [r0, #0]
 80086ce:	4639      	mov	r1, r7
 80086d0:	69d4      	ldr	r4, [r2, #28]
 80086d2:	b2db      	uxtb	r3, r3
 80086d4:	462a      	mov	r2, r5
 80086d6:	46a4      	mov	ip, r4
 80086d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086dc:	4760      	bx	ip
 80086de:	2120      	movs	r1, #32
 80086e0:	f7ff ff87 	bl	80085f2 <Display::PutChar(int) [clone .isra.0]>
 80086e4:	f108 0801 	add.w	r8, r8, #1
 80086e8:	e7df      	b.n	80086aa <Display::TextStatus(char const*)+0x26>
 80086ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80086ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80086f0:	4605      	mov	r5, r0
 80086f2:	461e      	mov	r6, r3
 80086f4:	460f      	mov	r7, r1
 80086f6:	4614      	mov	r4, r2
 80086f8:	f7ff ffc4 	bl	8008684 <Display::TextStatus(char const*)>
 80086fc:	7c6b      	ldrb	r3, [r5, #17]
 80086fe:	b19b      	cbz	r3, 8008728 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008700:	43e2      	mvns	r2, r4
 8008702:	2312      	movs	r3, #18
 8008704:	7a28      	ldrb	r0, [r5, #8]
 8008706:	f88d 3004 	strb.w	r3, [sp, #4]
 800870a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800870e:	f88d 3005 	strb.w	r3, [sp, #5]
 8008712:	f88d 2006 	strb.w	r2, [sp, #6]
 8008716:	f00b f85f 	bl	80137d8 <gd32_i2c_set_address>
 800871a:	68e8      	ldr	r0, [r5, #12]
 800871c:	f00b f854 	bl	80137c8 <gd32_i2c_set_baudrate>
 8008720:	2103      	movs	r1, #3
 8008722:	a801      	add	r0, sp, #4
 8008724:	f00b f85e 	bl	80137e4 <gd32_i2c_write>
 8008728:	1c73      	adds	r3, r6, #1
 800872a:	d006      	beq.n	800873a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800872c:	4639      	mov	r1, r7
 800872e:	4630      	mov	r0, r6
 8008730:	b003      	add	sp, #12
 8008732:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008736:	f009 bbd9 	b.w	8011eec <console_status>
 800873a:	b003      	add	sp, #12
 800873c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008740 <Display::SetSleep(bool)>:
 8008740:	b538      	push	{r3, r4, r5, lr}
 8008742:	4604      	mov	r4, r0
 8008744:	6980      	ldr	r0, [r0, #24]
 8008746:	460d      	mov	r5, r1
 8008748:	b138      	cbz	r0, 800875a <Display::SetSleep(bool)+0x1a>
 800874a:	6803      	ldr	r3, [r0, #0]
 800874c:	7421      	strb	r1, [r4, #16]
 800874e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008750:	4798      	blx	r3
 8008752:	b915      	cbnz	r5, 800875a <Display::SetSleep(bool)+0x1a>
 8008754:	4b01      	ldr	r3, [pc, #4]	; (800875c <Display::SetSleep(bool)+0x1c>)
 8008756:	681b      	ldr	r3, [r3, #0]
 8008758:	6063      	str	r3, [r4, #4]
 800875a:	bd38      	pop	{r3, r4, r5, pc}
 800875c:	2000aea4 	andcs	sl, r0, r4, lsr #29

08008760 <display::timeout::gpio_init()>:
 8008760:	b510      	push	{r4, lr}
 8008762:	f240 6003 	movw	r0, #1539	; 0x603
 8008766:	f00a fccb 	bl	8013100 <rcu_periph_clock_enable>
 800876a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800876e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008772:	2203      	movs	r2, #3
 8008774:	2148      	movs	r1, #72	; 0x48
 8008776:	4801      	ldr	r0, [pc, #4]	; (800877c <display::timeout::gpio_init()+0x1c>)
 8008778:	f00a bc2a 	b.w	8012fd0 <gpio_init>
 800877c:	40010c00 	andmi	r0, r1, r0, lsl #24

08008780 <display::timeout::gpio_renew()>:
 8008780:	4b03      	ldr	r3, [pc, #12]	; (8008790 <display::timeout::gpio_renew()+0x10>)
 8008782:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008786:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800878a:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800878e:	4770      	bx	lr
 8008790:	40010000 	andmi	r0, r1, r0

08008794 <Hardware::RebootHandler()>:
 8008794:	b508      	push	{r3, lr}
 8008796:	4b05      	ldr	r3, [pc, #20]	; (80087ac <Hardware::RebootHandler()+0x18>)
 8008798:	6818      	ldr	r0, [r3, #0]
 800879a:	f005 fd13 	bl	800e1c4 <WS28xx::Blackout()>
 800879e:	4b04      	ldr	r3, [pc, #16]	; (80087b0 <Hardware::RebootHandler()+0x1c>)
 80087a0:	6818      	ldr	r0, [r3, #0]
 80087a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80087a6:	f002 ba8d 	b.w	800acc4 <E131Bridge::Stop()>
 80087aa:	bf00      	nop
 80087ac:	20001eac 	andcs	r1, r0, ip, lsr #29
 80087b0:	20001e64 	andcs	r1, r0, r4, ror #28

080087b4 <main>:
 80087b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087b8:	f6ad 1d34 	subw	sp, sp, #2356	; 0x934
 80087bc:	a804      	add	r0, sp, #16
 80087be:	f009 fc49 	bl	8012054 <Hardware::Hardware()>
 80087c2:	a885      	add	r0, sp, #532	; 0x214
 80087c4:	f006 fcf2 	bl	800f1ac <Network::Network()>
 80087c8:	a810      	add	r0, sp, #64	; 0x40
 80087ca:	f009 fbed 	bl	8011fa8 <LedBlink::LedBlink()>
 80087ce:	a858      	add	r0, sp, #352	; 0x160
 80087d0:	f007 fce0 	bl	8010194 <DisplayUdf::DisplayUdf()>
 80087d4:	4ab3      	ldr	r2, [pc, #716]	; (8008aa4 <main+0x2f0>)
 80087d6:	4bb4      	ldr	r3, [pc, #720]	; (8008aa8 <main+0x2f4>)
 80087d8:	49b4      	ldr	r1, [pc, #720]	; (8008aac <main+0x2f8>)
 80087da:	a805      	add	r0, sp, #20
 80087dc:	f009 fb9e 	bl	8011f1c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80087e0:	a808      	add	r0, sp, #32
 80087e2:	f008 f917 	bl	8010a14 <ConfigStore::ConfigStore()>
 80087e6:	49b2      	ldr	r1, [pc, #712]	; (8008ab0 <main+0x2fc>)
 80087e8:	a805      	add	r0, sp, #20
 80087ea:	f009 fbcf 	bl	8011f8c <FirmwareVersion::Print(char const*)>
 80087ee:	2301      	movs	r3, #1
 80087f0:	4eb0      	ldr	r6, [pc, #704]	; (8008ab4 <main+0x300>)
 80087f2:	2008      	movs	r0, #8
 80087f4:	6133      	str	r3, [r6, #16]
 80087f6:	f009 fcd9 	bl	80121ac <operator new(unsigned int)>
 80087fa:	4baf      	ldr	r3, [pc, #700]	; (8008ab8 <main+0x304>)
 80087fc:	6003      	str	r3, [r0, #0]
 80087fe:	4baf      	ldr	r3, [pc, #700]	; (8008abc <main+0x308>)
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	2b00      	cmp	r3, #0
 8008804:	bf14      	ite	ne
 8008806:	2201      	movne	r2, #1
 8008808:	2200      	moveq	r2, #0
 800880a:	7102      	strb	r2, [r0, #4]
 800880c:	d004      	beq.n	8008818 <main+0x64>
 800880e:	699b      	ldr	r3, [r3, #24]
 8008810:	3b00      	subs	r3, #0
 8008812:	bf18      	it	ne
 8008814:	2301      	movne	r3, #1
 8008816:	7103      	strb	r3, [r0, #4]
 8008818:	2400      	movs	r4, #0
 800881a:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800881e:	2303      	movs	r3, #3
 8008820:	49a7      	ldr	r1, [pc, #668]	; (8008ac0 <main+0x30c>)
 8008822:	9012      	str	r0, [sp, #72]	; 0x48
 8008824:	a858      	add	r0, sp, #352	; 0x160
 8008826:	f7ff ff62 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800882a:	a80c      	add	r0, sp, #48	; 0x30
 800882c:	f008 faca 	bl	8010dc4 <StoreNetwork::StoreNetwork()>
 8008830:	ab0d      	add	r3, sp, #52	; 0x34
 8008832:	a90c      	add	r1, sp, #48	; 0x30
 8008834:	a885      	add	r0, sp, #532	; 0x214
 8008836:	93b3      	str	r3, [sp, #716]	; 0x2cc
 8008838:	f006 fd10 	bl	800f25c <Network::Init(NetworkParamsStore*)>
 800883c:	a885      	add	r0, sp, #532	; 0x214
 800883e:	f006 fe45 	bl	800f4cc <Network::Print()>
 8008842:	2303      	movs	r3, #3
 8008844:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008848:	499e      	ldr	r1, [pc, #632]	; (8008ac4 <main+0x310>)
 800884a:	a858      	add	r0, sp, #352	; 0x160
 800884c:	f7ff ff4f 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008850:	a806      	add	r0, sp, #24
 8008852:	f006 f8ed 	bl	800ea30 <MDNS::MDNS()>
 8008856:	a806      	add	r0, sp, #24
 8008858:	f006 f9aa 	bl	800ebb0 <MDNS::Start()>
 800885c:	f642 1305 	movw	r3, #10501	; 0x2905
 8008860:	4621      	mov	r1, r4
 8008862:	4a99      	ldr	r2, [pc, #612]	; (8008ac8 <main+0x314>)
 8008864:	e9cd 4400 	strd	r4, r4, [sp]
 8008868:	a806      	add	r0, sp, #24
 800886a:	f006 fb0b 	bl	800ee84 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 800886e:	4b97      	ldr	r3, [pc, #604]	; (8008acc <main+0x318>)
 8008870:	4621      	mov	r1, r4
 8008872:	9301      	str	r3, [sp, #4]
 8008874:	2301      	movs	r3, #1
 8008876:	4a96      	ldr	r2, [pc, #600]	; (8008ad0 <main+0x31c>)
 8008878:	9300      	str	r3, [sp, #0]
 800887a:	a806      	add	r0, sp, #24
 800887c:	2350      	movs	r3, #80	; 0x50
 800887e:	f006 fb01 	bl	800ee84 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008882:	a806      	add	r0, sp, #24
 8008884:	f006 fc44 	bl	800f110 <MDNS::Print()>
 8008888:	a838      	add	r0, sp, #224	; 0xe0
 800888a:	f001 fcf9 	bl	800a280 <HttpDaemon::HttpDaemon()>
 800888e:	a838      	add	r0, sp, #224	; 0xe0
 8008890:	f001 fd0a 	bl	800a2a8 <HttpDaemon::Start()>
 8008894:	2303      	movs	r3, #3
 8008896:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 800889a:	498e      	ldr	r1, [pc, #568]	; (8008ad4 <main+0x320>)
 800889c:	a858      	add	r0, sp, #352	; 0x160
 800889e:	f7ff ff26 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80088a2:	a809      	add	r0, sp, #36	; 0x24
 80088a4:	f008 fb24 	bl	8010ef0 <StoreE131::StoreE131()>
 80088a8:	a909      	add	r1, sp, #36	; 0x24
 80088aa:	a81d      	add	r0, sp, #116	; 0x74
 80088ac:	f003 f8f4 	bl	800ba98 <E131Params::E131Params(E131ParamsStore*)>
 80088b0:	a8b7      	add	r0, sp, #732	; 0x2dc
 80088b2:	f002 f963 	bl	800ab7c <E131Bridge::E131Bridge()>
 80088b6:	a81d      	add	r0, sp, #116	; 0x74
 80088b8:	f003 f912 	bl	800bae0 <E131Params::Load()>
 80088bc:	b130      	cbz	r0, 80088cc <main+0x118>
 80088be:	a81d      	add	r0, sp, #116	; 0x74
 80088c0:	4621      	mov	r1, r4
 80088c2:	f003 fbeb 	bl	800c09c <E131Params::Set(unsigned int)>
 80088c6:	a81d      	add	r0, sp, #116	; 0x74
 80088c8:	f003 fc3e 	bl	800c148 <E131Params::Dump()>
 80088cc:	22aa      	movs	r2, #170	; 0xaa
 80088ce:	2303      	movs	r3, #3
 80088d0:	2106      	movs	r1, #6
 80088d2:	e9cd 324c 	strd	r3, r2, [sp, #304]	; 0x130
 80088d6:	2300      	movs	r3, #0
 80088d8:	e9cd 134e 	strd	r1, r3, [sp, #312]	; 0x138
 80088dc:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80088e0:	9350      	str	r3, [sp, #320]	; 0x140
 80088e2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80088e6:	f8ad 3144 	strh.w	r3, [sp, #324]	; 0x144
 80088ea:	4b7b      	ldr	r3, [pc, #492]	; (8008ad8 <main+0x324>)
 80088ec:	a80e      	add	r0, sp, #56	; 0x38
 80088ee:	9352      	str	r3, [sp, #328]	; 0x148
 80088f0:	2301      	movs	r3, #1
 80088f2:	9255      	str	r2, [sp, #340]	; 0x154
 80088f4:	e9cd 3353 	strd	r3, r3, [sp, #332]	; 0x14c
 80088f8:	f8ad 315c 	strh.w	r3, [sp, #348]	; 0x15c
 80088fc:	f008 fbd4 	bl	80110a8 <StorePixelDmx::StorePixelDmx()>
 8008900:	a90e      	add	r1, sp, #56	; 0x38
 8008902:	a816      	add	r0, sp, #88	; 0x58
 8008904:	f003 fecc 	bl	800c6a0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8008908:	a816      	add	r0, sp, #88	; 0x58
 800890a:	f003 fedf 	bl	800c6cc <PixelDmxParams::Load()>
 800890e:	b130      	cbz	r0, 800891e <main+0x16a>
 8008910:	a816      	add	r0, sp, #88	; 0x58
 8008912:	f004 fa11 	bl	800cd38 <PixelDmxParams::Dump()>
 8008916:	a94c      	add	r1, sp, #304	; 0x130
 8008918:	a816      	add	r0, sp, #88	; 0x58
 800891a:	f004 f9d0 	bl	800ccbe <PixelDmxParams::Set(PixelDmxConfiguration*)>
 800891e:	a94c      	add	r1, sp, #304	; 0x130
 8008920:	a86e      	add	r0, sp, #440	; 0x1b8
 8008922:	f003 fdc9 	bl	800c4b8 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 8008926:	2004      	movs	r0, #4
 8008928:	f009 fc40 	bl	80121ac <operator new(unsigned int)>
 800892c:	4b6b      	ldr	r3, [pc, #428]	; (8008adc <main+0x328>)
 800892e:	4604      	mov	r4, r0
 8008930:	6003      	str	r3, [r0, #0]
 8008932:	2203      	movs	r2, #3
 8008934:	2304      	movs	r3, #4
 8008936:	2110      	movs	r1, #16
 8008938:	485e      	ldr	r0, [pc, #376]	; (8008ab4 <main+0x300>)
 800893a:	f00a fb49 	bl	8012fd0 <gpio_init>
 800893e:	2304      	movs	r3, #4
 8008940:	6173      	str	r3, [r6, #20]
 8008942:	9483      	str	r4, [sp, #524]	; 0x20c
 8008944:	2400      	movs	r4, #0
 8008946:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8008948:	9f79      	ldr	r7, [sp, #484]	; 0x1e4
 800894a:	f8bd 8072 	ldrh.w	r8, [sp, #114]	; 0x72
 800894e:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
 8008952:	42bc      	cmp	r4, r7
 8008954:	f040 8116 	bne.w	8008b84 <main+0x3d0>
 8008958:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800895c:	2101      	movs	r1, #1
 800895e:	a807      	add	r0, sp, #28
 8008960:	f004 fc10 	bl	800d184 <PixelPatterns::PixelPatterns(unsigned int)>
 8008964:	4b5e      	ldr	r3, [pc, #376]	; (8008ae0 <main+0x32c>)
 8008966:	2d05      	cmp	r5, #5
 8008968:	601d      	str	r5, [r3, #0]
 800896a:	f340 816f 	ble.w	8008c4c <main+0x498>
 800896e:	4b5c      	ldr	r3, [pc, #368]	; (8008ae0 <main+0x32c>)
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	2b00      	cmp	r3, #0
 8008974:	f040 8162 	bne.w	8008c3c <main+0x488>
 8008978:	ab6e      	add	r3, sp, #440	; 0x1b8
 800897a:	a8b7      	add	r0, sp, #732	; 0x2dc
 800897c:	93b8      	str	r3, [sp, #736]	; 0x2e0
 800897e:	f002 ffd5 	bl	800b92c <E131Bridge::Print()>
 8008982:	a86f      	add	r0, sp, #444	; 0x1bc
 8008984:	f003 fc6a 	bl	800c25c <PixelDmxConfiguration::Print()>
 8008988:	4956      	ldr	r1, [pc, #344]	; (8008ae4 <main+0x330>)
 800898a:	a858      	add	r0, sp, #352	; 0x160
 800898c:	f007 fc18 	bl	80101c0 <DisplayUdf::SetTitle(char const*, ...)>
 8008990:	2202      	movs	r2, #2
 8008992:	a858      	add	r0, sp, #352	; 0x160
 8008994:	4611      	mov	r1, r2
 8008996:	f007 fc26 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800899a:	2207      	movs	r2, #7
 800899c:	2103      	movs	r1, #3
 800899e:	a858      	add	r0, sp, #352	; 0x160
 80089a0:	f007 fc21 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089a4:	2203      	movs	r2, #3
 80089a6:	2104      	movs	r1, #4
 80089a8:	a858      	add	r0, sp, #352	; 0x160
 80089aa:	f007 fc1c 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089ae:	2208      	movs	r2, #8
 80089b0:	2105      	movs	r1, #5
 80089b2:	a858      	add	r0, sp, #352	; 0x160
 80089b4:	f007 fc17 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089b8:	2201      	movs	r2, #1
 80089ba:	2106      	movs	r1, #6
 80089bc:	a858      	add	r0, sp, #352	; 0x160
 80089be:	f007 fc12 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80089c2:	984c      	ldr	r0, [sp, #304]	; 0x130
 80089c4:	f004 fac0 	bl	800cf48 <PixelType::GetType(pixel::Type)>
 80089c8:	4604      	mov	r4, r0
 80089ca:	984e      	ldr	r0, [sp, #312]	; 0x138
 80089cc:	9f4d      	ldr	r7, [sp, #308]	; 0x134
 80089ce:	f8dd 8150 	ldr.w	r8, [sp, #336]	; 0x150
 80089d2:	f004 fb11 	bl	800cff8 <PixelType::GetMap(pixel::Map)>
 80089d6:	4623      	mov	r3, r4
 80089d8:	2107      	movs	r1, #7
 80089da:	4a43      	ldr	r2, [pc, #268]	; (8008ae8 <main+0x334>)
 80089dc:	e9cd 8001 	strd	r8, r0, [sp, #4]
 80089e0:	9700      	str	r7, [sp, #0]
 80089e2:	a858      	add	r0, sp, #352	; 0x160
 80089e4:	f7ff fe32 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80089e8:	a80a      	add	r0, sp, #40	; 0x28
 80089ea:	f008 f93d 	bl	8010c68 <StoreDisplayUdf::StoreDisplayUdf()>
 80089ee:	a90a      	add	r1, sp, #40	; 0x28
 80089f0:	a842      	add	r0, sp, #264	; 0x108
 80089f2:	f007 fd79 	bl	80104e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80089f6:	a842      	add	r0, sp, #264	; 0x108
 80089f8:	f007 fd83 	bl	8010502 <DisplayUdfParams::Load()>
 80089fc:	b130      	cbz	r0, 8008a0c <main+0x258>
 80089fe:	a842      	add	r0, sp, #264	; 0x108
 8008a00:	f007 feea 	bl	80107d8 <DisplayUdfParams::Dump()>
 8008a04:	a958      	add	r1, sp, #352	; 0x160
 8008a06:	a842      	add	r0, sp, #264	; 0x108
 8008a08:	f007 feb3 	bl	8010772 <DisplayUdfParams::Set(DisplayUdf*)>
 8008a0c:	a9b7      	add	r1, sp, #732	; 0x2dc
 8008a0e:	a858      	add	r0, sp, #352	; 0x160
 8008a10:	f007 fee4 	bl	80107dc <DisplayUdf::Show(E131Bridge*)>
 8008a14:	b17d      	cbz	r5, 8008a36 <main+0x282>
 8008a16:	985e      	ldr	r0, [sp, #376]	; 0x178
 8008a18:	b118      	cbz	r0, 8008a22 <main+0x26e>
 8008a1a:	6803      	ldr	r3, [r0, #0]
 8008a1c:	2106      	movs	r1, #6
 8008a1e:	691b      	ldr	r3, [r3, #16]
 8008a20:	4798      	blx	r3
 8008a22:	4628      	mov	r0, r5
 8008a24:	f004 fbce 	bl	800d1c4 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008a28:	2106      	movs	r1, #6
 8008a2a:	4603      	mov	r3, r0
 8008a2c:	4a2f      	ldr	r2, [pc, #188]	; (8008aec <main+0x338>)
 8008a2e:	9500      	str	r5, [sp, #0]
 8008a30:	a858      	add	r0, sp, #352	; 0x160
 8008a32:	f7ff fe0b 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8008a36:	2203      	movs	r2, #3
 8008a38:	2101      	movs	r1, #1
 8008a3a:	f89d 37e7 	ldrb.w	r3, [sp, #2023]	; 0x7e7
 8008a3e:	a826      	add	r0, sp, #152	; 0x98
 8008a40:	f000 ff38 	bl	80098b4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008a44:	a80b      	add	r0, sp, #44	; 0x2c
 8008a46:	f008 f9f5 	bl	8010e34 <StoreRemoteConfig::StoreRemoteConfig()>
 8008a4a:	a90b      	add	r1, sp, #44	; 0x2c
 8008a4c:	a82f      	add	r0, sp, #188	; 0xbc
 8008a4e:	f001 fa01 	bl	8009e54 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008a52:	a82f      	add	r0, sp, #188	; 0xbc
 8008a54:	f001 fa08 	bl	8009e68 <RemoteConfigParams::Load()>
 8008a58:	b130      	cbz	r0, 8008a68 <main+0x2b4>
 8008a5a:	a82f      	add	r0, sp, #188	; 0xbc
 8008a5c:	f001 fb4b 	bl	800a0f6 <RemoteConfigParams::Dump()>
 8008a60:	a926      	add	r1, sp, #152	; 0x98
 8008a62:	a82f      	add	r0, sp, #188	; 0xbc
 8008a64:	f001 fb27 	bl	800a0b6 <RemoteConfigParams::Set(RemoteConfig*)>
 8008a68:	a808      	add	r0, sp, #32
 8008a6a:	f008 f87b 	bl	8010b64 <ConfigStore::Flash()>
 8008a6e:	2800      	cmp	r0, #0
 8008a70:	d1fa      	bne.n	8008a68 <main+0x2b4>
 8008a72:	2303      	movs	r3, #3
 8008a74:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008a78:	491d      	ldr	r1, [pc, #116]	; (8008af0 <main+0x33c>)
 8008a7a:	a858      	add	r0, sp, #352	; 0x160
 8008a7c:	f7ff fe37 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a80:	a8b7      	add	r0, sp, #732	; 0x2dc
 8008a82:	f002 f8e3 	bl	800ac4c <E131Bridge::Start()>
 8008a86:	2302      	movs	r3, #2
 8008a88:	f248 0280 	movw	r2, #32896	; 0x8080
 8008a8c:	4919      	ldr	r1, [pc, #100]	; (8008af4 <main+0x340>)
 8008a8e:	a858      	add	r0, sp, #352	; 0x160
 8008a90:	f7ff fe2d 	bl	80086ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a94:	2102      	movs	r1, #2
 8008a96:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008a9a:	f00a fa6f 	bl	8012f7c <fwdgt_config>
 8008a9e:	2801      	cmp	r0, #1
 8008aa0:	e02a      	b.n	8008af8 <main+0x344>
 8008aa2:	bf00      	nop
 8008aa4:	08014475 	stmdaeq	r1, {r0, r2, r4, r5, r6, sl, lr}
 8008aa8:	0801446c 	stmdaeq	r1, {r2, r3, r5, r6, sl, lr}
 8008aac:	08014535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, lr}
 8008ab0:	08014481 	stmdaeq	r1, {r0, r7, sl, lr}
 8008ab4:	40011000 	andmi	r1, r1, r0
 8008ab8:	0801450c 	stmdaeq	r1, {r2, r3, r8, sl, lr}
 8008abc:	2000ada0 	andcs	sl, r0, r0, lsr #27
 8008ac0:	08016503 	stmdaeq	r1, {r0, r1, r8, sl, sp, lr}
 8008ac4:	080164f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp, lr}
 8008ac8:	080144b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, lr}
 8008acc:	080144c8 	stmdaeq	r1, {r3, r6, r7, sl, lr}
 8008ad0:	080144c1 	stmdaeq	r1, {r0, r6, r7, sl, lr}
 8008ad4:	080157ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, ip, lr}
 8008ad8:	08014539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, lr}
 8008adc:	08014520 	stmdaeq	r1, {r5, r8, sl, lr}
 8008ae0:	20001ea4 	andcs	r1, r0, r4, lsr #29
 8008ae4:	080144de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, lr}
 8008ae8:	080144ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, lr}
 8008aec:	080144fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, lr}
 8008af0:	08015798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, ip, lr}
 8008af4:	080157c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, ip, lr}
 8008af8:	bf0c      	ite	eq
 8008afa:	2301      	moveq	r3, #1
 8008afc:	2300      	movne	r3, #0
 8008afe:	f88d 3010 	strb.w	r3, [sp, #16]
 8008b02:	d101      	bne.n	8008b08 <main+0x354>
 8008b04:	f00a fa2a 	bl	8012f5c <fwdgt_enable>
 8008b08:	4d59      	ldr	r5, [pc, #356]	; (8008c70 <main+0x4bc>)
 8008b0a:	4c5a      	ldr	r4, [pc, #360]	; (8008c74 <main+0x4c0>)
 8008b0c:	f00a fa2e 	bl	8012f6c <fwdgt_counter_reload>
 8008b10:	f7fe fd06 	bl	8007520 <net_handle>
 8008b14:	a8b7      	add	r0, sp, #732	; 0x2dc
 8008b16:	f002 fcb7 	bl	800b488 <E131Bridge::Run()>
 8008b1a:	a826      	add	r0, sp, #152	; 0x98
 8008b1c:	f001 f85e 	bl	8009bdc <RemoteConfig::Run()>
 8008b20:	a808      	add	r0, sp, #32
 8008b22:	f008 f81f 	bl	8010b64 <ConfigStore::Flash()>
 8008b26:	682b      	ldr	r3, [r5, #0]
 8008b28:	b113      	cbz	r3, 8008b30 <main+0x37c>
 8008b2a:	a807      	add	r0, sp, #28
 8008b2c:	f004 fd64 	bl	800d5f8 <PixelPatterns::Run()>
 8008b30:	a806      	add	r0, sp, #24
 8008b32:	f006 fac9 	bl	800f0c8 <MDNS::Run()>
 8008b36:	a838      	add	r0, sp, #224	; 0xe0
 8008b38:	f001 fe22 	bl	800a780 <HttpDaemon::Run()>
 8008b3c:	9a5d      	ldr	r2, [sp, #372]	; 0x174
 8008b3e:	b162      	cbz	r2, 8008b5a <main+0x3a6>
 8008b40:	f89d 3170 	ldrb.w	r3, [sp, #368]	; 0x170
 8008b44:	2b00      	cmp	r3, #0
 8008b46:	d17b      	bne.n	8008c40 <main+0x48c>
 8008b48:	6823      	ldr	r3, [r4, #0]
 8008b4a:	9959      	ldr	r1, [sp, #356]	; 0x164
 8008b4c:	1a5b      	subs	r3, r3, r1
 8008b4e:	429a      	cmp	r2, r3
 8008b50:	d203      	bcs.n	8008b5a <main+0x3a6>
 8008b52:	2101      	movs	r1, #1
 8008b54:	a858      	add	r0, sp, #352	; 0x160
 8008b56:	f7ff fdf3 	bl	8008740 <Display::SetSleep(bool)>
 8008b5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8008b5c:	2a00      	cmp	r2, #0
 8008b5e:	d0d5      	beq.n	8008b0c <main+0x358>
 8008b60:	6823      	ldr	r3, [r4, #0]
 8008b62:	9915      	ldr	r1, [sp, #84]	; 0x54
 8008b64:	1a5b      	subs	r3, r3, r1
 8008b66:	429a      	cmp	r2, r3
 8008b68:	d8d0      	bhi.n	8008b0c <main+0x358>
 8008b6a:	6823      	ldr	r3, [r4, #0]
 8008b6c:	9315      	str	r3, [sp, #84]	; 0x54
 8008b6e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008b70:	2b01      	cmp	r3, #1
 8008b72:	f083 0201 	eor.w	r2, r3, #1
 8008b76:	bf18      	it	ne
 8008b78:	2301      	movne	r3, #1
 8008b7a:	9214      	str	r2, [sp, #80]	; 0x50
 8008b7c:	bf14      	ite	ne
 8008b7e:	6133      	strne	r3, [r6, #16]
 8008b80:	6173      	streq	r3, [r6, #20]
 8008b82:	e7c3      	b.n	8008b0c <main+0x358>
 8008b84:	b13d      	cbz	r5, 8008b96 <main+0x3e2>
 8008b86:	eb08 0304 	add.w	r3, r8, r4
 8008b8a:	2201      	movs	r2, #1
 8008b8c:	4621      	mov	r1, r4
 8008b8e:	b29b      	uxth	r3, r3
 8008b90:	a8b7      	add	r0, sp, #732	; 0x2dc
 8008b92:	f002 f917 	bl	800adc4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008b96:	3401      	adds	r4, #1
 8008b98:	e6db      	b.n	8008952 <main+0x19e>
 8008b9a:	2300      	movs	r3, #0
 8008b9c:	2264      	movs	r2, #100	; 0x64
 8008b9e:	4619      	mov	r1, r3
 8008ba0:	a807      	add	r0, sp, #28
 8008ba2:	f004 fb1b 	bl	800d1dc <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ba6:	e6e2      	b.n	800896e <main+0x1ba>
 8008ba8:	2200      	movs	r2, #0
 8008baa:	2364      	movs	r3, #100	; 0x64
 8008bac:	4611      	mov	r1, r2
 8008bae:	e9cd 3200 	strd	r3, r2, [sp]
 8008bb2:	a807      	add	r0, sp, #28
 8008bb4:	4b30      	ldr	r3, [pc, #192]	; (8008c78 <main+0x4c4>)
 8008bb6:	f004 fb25 	bl	800d204 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bba:	e6d8      	b.n	800896e <main+0x1ba>
 8008bbc:	2100      	movs	r1, #0
 8008bbe:	2364      	movs	r3, #100	; 0x64
 8008bc0:	4a2d      	ldr	r2, [pc, #180]	; (8008c78 <main+0x4c4>)
 8008bc2:	9100      	str	r1, [sp, #0]
 8008bc4:	a807      	add	r0, sp, #28
 8008bc6:	f004 fb39 	bl	800d23c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bca:	e6d0      	b.n	800896e <main+0x1ba>
 8008bcc:	2364      	movs	r3, #100	; 0x64
 8008bce:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008bd2:	2100      	movs	r1, #0
 8008bd4:	a807      	add	r0, sp, #28
 8008bd6:	f004 fb4b 	bl	800d270 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008bda:	e6c8      	b.n	800896e <main+0x1ba>
 8008bdc:	2200      	movs	r2, #0
 8008bde:	2364      	movs	r3, #100	; 0x64
 8008be0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008be4:	230a      	movs	r3, #10
 8008be6:	4611      	mov	r1, r2
 8008be8:	9300      	str	r3, [sp, #0]
 8008bea:	a807      	add	r0, sp, #28
 8008bec:	4b22      	ldr	r3, [pc, #136]	; (8008c78 <main+0x4c4>)
 8008bee:	f004 fb71 	bl	800d2d4 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bf2:	e6bc      	b.n	800896e <main+0x1ba>
 8008bf4:	2400      	movs	r4, #0
 8008bf6:	4627      	mov	r7, r4
 8008bf8:	4b20      	ldr	r3, [pc, #128]	; (8008c7c <main+0x4c8>)
 8008bfa:	f8df 9084 	ldr.w	r9, [pc, #132]	; 8008c80 <main+0x4cc>
 8008bfe:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8008c84 <main+0x4d0>
 8008c02:	61dc      	str	r4, [r3, #28]
 8008c04:	f8d8 3000 	ldr.w	r3, [r8]
 8008c08:	f8d9 0000 	ldr.w	r0, [r9]
 8008c0c:	429c      	cmp	r4, r3
 8008c0e:	d302      	bcc.n	8008c16 <main+0x462>
 8008c10:	f005 fabc 	bl	800e18c <WS28xx::Update()>
 8008c14:	e6ab      	b.n	800896e <main+0x1ba>
 8008c16:	6803      	ldr	r3, [r0, #0]
 8008c18:	2b07      	cmp	r3, #7
 8008c1a:	d007      	beq.n	8008c2c <main+0x478>
 8008c1c:	2300      	movs	r3, #0
 8008c1e:	4621      	mov	r1, r4
 8008c20:	461a      	mov	r2, r3
 8008c22:	9700      	str	r7, [sp, #0]
 8008c24:	f004 fd10 	bl	800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008c28:	3401      	adds	r4, #1
 8008c2a:	e7eb      	b.n	8008c04 <main+0x450>
 8008c2c:	2300      	movs	r3, #0
 8008c2e:	4621      	mov	r1, r4
 8008c30:	461a      	mov	r2, r3
 8008c32:	e9cd 7700 	strd	r7, r7, [sp]
 8008c36:	f005 f939 	bl	800deac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008c3a:	e7f5      	b.n	8008c28 <main+0x474>
 8008c3c:	2300      	movs	r3, #0
 8008c3e:	e69c      	b.n	800897a <main+0x1c6>
 8008c40:	f7ff fd9e 	bl	8008780 <display::timeout::gpio_renew()>
 8008c44:	2800      	cmp	r0, #0
 8008c46:	d088      	beq.n	8008b5a <main+0x3a6>
 8008c48:	2100      	movs	r1, #0
 8008c4a:	e783      	b.n	8008b54 <main+0x3a0>
 8008c4c:	2d05      	cmp	r5, #5
 8008c4e:	f63f ae8e 	bhi.w	800896e <main+0x1ba>
 8008c52:	a301      	add	r3, pc, #4	; (adr r3, 8008c58 <main+0x4a4>)
 8008c54:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
 8008c58:	08008bf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, pc}
 8008c5c:	08008b9b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r8, r9, fp, pc}
 8008c60:	08008ba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp, pc}
 8008c64:	08008bbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, pc}
 8008c68:	08008bcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, pc}
 8008c6c:	08008bdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, pc}
 8008c70:	20001ea4 	andcs	r1, r0, r4, lsr #29
 8008c74:	2000aea4 	andcs	sl, r0, r4, lsr #29
 8008c78:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008c7c:	20001e74 	andcs	r1, r0, r4, ror lr
 8008c80:	20001ea0 	andcs	r1, r0, r0, lsr #29
 8008c84:	20001e9c 	mulcs	r0, ip, lr

08008c88 <_itostr>:
 8008c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c8a:	0fc7      	lsrs	r7, r0, #31
 8008c8c:	b091      	sub	sp, #68	; 0x44
 8008c8e:	bf18      	it	ne
 8008c90:	4240      	negne	r0, r0
 8008c92:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008c96:	b9c8      	cbnz	r0, 8008ccc <_itostr+0x44>
 8008c98:	2330      	movs	r3, #48	; 0x30
 8008c9a:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008c9e:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008ca2:	b132      	cbz	r2, 8008cb2 <_itostr+0x2a>
 8008ca4:	4668      	mov	r0, sp
 8008ca6:	2530      	movs	r5, #48	; 0x30
 8008ca8:	1ae6      	subs	r6, r4, r3
 8008caa:	4296      	cmp	r6, r2
 8008cac:	da01      	bge.n	8008cb2 <_itostr+0x2a>
 8008cae:	4283      	cmp	r3, r0
 8008cb0:	d81c      	bhi.n	8008cec <_itostr+0x64>
 8008cb2:	b117      	cbz	r7, 8008cba <_itostr+0x32>
 8008cb4:	222d      	movs	r2, #45	; 0x2d
 8008cb6:	f803 2901 	strb.w	r2, [r3], #-1
 8008cba:	3301      	adds	r3, #1
 8008cbc:	1ae0      	subs	r0, r4, r3
 8008cbe:	3901      	subs	r1, #1
 8008cc0:	aa10      	add	r2, sp, #64	; 0x40
 8008cc2:	4293      	cmp	r3, r2
 8008cc4:	d315      	bcc.n	8008cf2 <_itostr+0x6a>
 8008cc6:	3001      	adds	r0, #1
 8008cc8:	b011      	add	sp, #68	; 0x44
 8008cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ccc:	4623      	mov	r3, r4
 8008cce:	250a      	movs	r5, #10
 8008cd0:	46ec      	mov	ip, sp
 8008cd2:	fb90 f6f5 	sdiv	r6, r0, r5
 8008cd6:	fb05 0016 	mls	r0, r5, r6, r0
 8008cda:	3030      	adds	r0, #48	; 0x30
 8008cdc:	f803 0901 	strb.w	r0, [r3], #-1
 8008ce0:	4630      	mov	r0, r6
 8008ce2:	2e00      	cmp	r6, #0
 8008ce4:	d0dd      	beq.n	8008ca2 <_itostr+0x1a>
 8008ce6:	4563      	cmp	r3, ip
 8008ce8:	d1f3      	bne.n	8008cd2 <_itostr+0x4a>
 8008cea:	e7da      	b.n	8008ca2 <_itostr+0x1a>
 8008cec:	f803 5901 	strb.w	r5, [r3], #-1
 8008cf0:	e7da      	b.n	8008ca8 <_itostr+0x20>
 8008cf2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008cf6:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008cfa:	e7e1      	b.n	8008cc0 <_itostr+0x38>

08008cfc <_xputch>:
 8008cfc:	4603      	mov	r3, r0
 8008cfe:	b410      	push	{r4}
 8008d00:	4c08      	ldr	r4, [pc, #32]	; (8008d24 <_xputch+0x28>)
 8008d02:	68da      	ldr	r2, [r3, #12]
 8008d04:	4608      	mov	r0, r1
 8008d06:	6821      	ldr	r1, [r4, #0]
 8008d08:	3201      	adds	r2, #1
 8008d0a:	60da      	str	r2, [r3, #12]
 8008d0c:	b139      	cbz	r1, 8008d1e <_xputch+0x22>
 8008d0e:	691b      	ldr	r3, [r3, #16]
 8008d10:	429a      	cmp	r2, r3
 8008d12:	da02      	bge.n	8008d1a <_xputch+0x1e>
 8008d14:	1c4b      	adds	r3, r1, #1
 8008d16:	6023      	str	r3, [r4, #0]
 8008d18:	7008      	strb	r0, [r1, #0]
 8008d1a:	bc10      	pop	{r4}
 8008d1c:	4770      	bx	lr
 8008d1e:	bc10      	pop	{r4}
 8008d20:	f009 b8ac 	b.w	8011e7c <console_putc>
 8008d24:	20000080 	andcs	r0, r0, r0, lsl #1

08008d28 <_format_int>:
 8008d28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008d2c:	4698      	mov	r8, r3
 8008d2e:	b091      	sub	sp, #68	; 0x44
 8008d30:	ea52 0308 	orrs.w	r3, r2, r8
 8008d34:	4606      	mov	r6, r0
 8008d36:	4617      	mov	r7, r2
 8008d38:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008d3c:	d133      	bne.n	8008da6 <_format_int+0x7e>
 8008d3e:	2330      	movs	r3, #48	; 0x30
 8008d40:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008d44:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008d48:	6833      	ldr	r3, [r6, #0]
 8008d4a:	07d8      	lsls	r0, r3, #31
 8008d4c:	d507      	bpl.n	8008d5e <_format_int+0x36>
 8008d4e:	466a      	mov	r2, sp
 8008d50:	2030      	movs	r0, #48	; 0x30
 8008d52:	6871      	ldr	r1, [r6, #4]
 8008d54:	1b2f      	subs	r7, r5, r4
 8008d56:	428f      	cmp	r7, r1
 8008d58:	da01      	bge.n	8008d5e <_format_int+0x36>
 8008d5a:	4294      	cmp	r4, r2
 8008d5c:	d839      	bhi.n	8008dd2 <_format_int+0xaa>
 8008d5e:	0699      	lsls	r1, r3, #26
 8008d60:	d507      	bpl.n	8008d72 <_format_int+0x4a>
 8008d62:	466a      	mov	r2, sp
 8008d64:	2030      	movs	r0, #48	; 0x30
 8008d66:	68b1      	ldr	r1, [r6, #8]
 8008d68:	1b2f      	subs	r7, r5, r4
 8008d6a:	428f      	cmp	r7, r1
 8008d6c:	da01      	bge.n	8008d72 <_format_int+0x4a>
 8008d6e:	4294      	cmp	r4, r2
 8008d70:	d832      	bhi.n	8008dd8 <_format_int+0xb0>
 8008d72:	071a      	lsls	r2, r3, #28
 8008d74:	bf44      	itt	mi
 8008d76:	222d      	movmi	r2, #45	; 0x2d
 8008d78:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008d7c:	065b      	lsls	r3, r3, #25
 8008d7e:	d407      	bmi.n	8008d90 <_format_int+0x68>
 8008d80:	466b      	mov	r3, sp
 8008d82:	2120      	movs	r1, #32
 8008d84:	68b2      	ldr	r2, [r6, #8]
 8008d86:	1b28      	subs	r0, r5, r4
 8008d88:	4290      	cmp	r0, r2
 8008d8a:	da01      	bge.n	8008d90 <_format_int+0x68>
 8008d8c:	429c      	cmp	r4, r3
 8008d8e:	d826      	bhi.n	8008dde <_format_int+0xb6>
 8008d90:	1b2d      	subs	r5, r5, r4
 8008d92:	3401      	adds	r4, #1
 8008d94:	ab10      	add	r3, sp, #64	; 0x40
 8008d96:	429c      	cmp	r4, r3
 8008d98:	d324      	bcc.n	8008de4 <_format_int+0xbc>
 8008d9a:	68b3      	ldr	r3, [r6, #8]
 8008d9c:	42ab      	cmp	r3, r5
 8008d9e:	dc27      	bgt.n	8008df0 <_format_int+0xc8>
 8008da0:	b011      	add	sp, #68	; 0x44
 8008da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008da6:	462c      	mov	r4, r5
 8008da8:	46e9      	mov	r9, sp
 8008daa:	4638      	mov	r0, r7
 8008dac:	4641      	mov	r1, r8
 8008dae:	220a      	movs	r2, #10
 8008db0:	2300      	movs	r3, #0
 8008db2:	f7ff f891 	bl	8007ed8 <__aeabi_uldivmod>
 8008db6:	3230      	adds	r2, #48	; 0x30
 8008db8:	f804 2901 	strb.w	r2, [r4], #-1
 8008dbc:	463a      	mov	r2, r7
 8008dbe:	4643      	mov	r3, r8
 8008dc0:	2a0a      	cmp	r2, #10
 8008dc2:	f173 0300 	sbcs.w	r3, r3, #0
 8008dc6:	4607      	mov	r7, r0
 8008dc8:	4688      	mov	r8, r1
 8008dca:	d3bd      	bcc.n	8008d48 <_format_int+0x20>
 8008dcc:	454c      	cmp	r4, r9
 8008dce:	d1ec      	bne.n	8008daa <_format_int+0x82>
 8008dd0:	e7ba      	b.n	8008d48 <_format_int+0x20>
 8008dd2:	f804 0901 	strb.w	r0, [r4], #-1
 8008dd6:	e7bd      	b.n	8008d54 <_format_int+0x2c>
 8008dd8:	f804 0901 	strb.w	r0, [r4], #-1
 8008ddc:	e7c4      	b.n	8008d68 <_format_int+0x40>
 8008dde:	f804 1901 	strb.w	r1, [r4], #-1
 8008de2:	e7d0      	b.n	8008d86 <_format_int+0x5e>
 8008de4:	4630      	mov	r0, r6
 8008de6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008dea:	f7ff ff87 	bl	8008cfc <_xputch>
 8008dee:	e7d1      	b.n	8008d94 <_format_int+0x6c>
 8008df0:	2120      	movs	r1, #32
 8008df2:	4630      	mov	r0, r6
 8008df4:	f7ff ff82 	bl	8008cfc <_xputch>
 8008df8:	3501      	adds	r5, #1
 8008dfa:	e7ce      	b.n	8008d9a <_format_int+0x72>

08008dfc <_format_hex>:
 8008dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008dfe:	b091      	sub	sp, #68	; 0x44
 8008e00:	4606      	mov	r6, r0
 8008e02:	6804      	ldr	r4, [r0, #0]
 8008e04:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008e08:	bb61      	cbnz	r1, 8008e64 <_format_hex+0x68>
 8008e0a:	2330      	movs	r3, #48	; 0x30
 8008e0c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008e10:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008e14:	07e5      	lsls	r5, r4, #31
 8008e16:	d507      	bpl.n	8008e28 <_format_hex+0x2c>
 8008e18:	4669      	mov	r1, sp
 8008e1a:	2530      	movs	r5, #48	; 0x30
 8008e1c:	6870      	ldr	r0, [r6, #4]
 8008e1e:	1ad7      	subs	r7, r2, r3
 8008e20:	4287      	cmp	r7, r0
 8008e22:	da01      	bge.n	8008e28 <_format_hex+0x2c>
 8008e24:	428b      	cmp	r3, r1
 8008e26:	d831      	bhi.n	8008e8c <_format_hex+0x90>
 8008e28:	06a0      	lsls	r0, r4, #26
 8008e2a:	d507      	bpl.n	8008e3c <_format_hex+0x40>
 8008e2c:	4669      	mov	r1, sp
 8008e2e:	2530      	movs	r5, #48	; 0x30
 8008e30:	68b0      	ldr	r0, [r6, #8]
 8008e32:	1ad7      	subs	r7, r2, r3
 8008e34:	4287      	cmp	r7, r0
 8008e36:	da01      	bge.n	8008e3c <_format_hex+0x40>
 8008e38:	428b      	cmp	r3, r1
 8008e3a:	d82a      	bhi.n	8008e92 <_format_hex+0x96>
 8008e3c:	0661      	lsls	r1, r4, #25
 8008e3e:	d407      	bmi.n	8008e50 <_format_hex+0x54>
 8008e40:	4669      	mov	r1, sp
 8008e42:	2420      	movs	r4, #32
 8008e44:	68b0      	ldr	r0, [r6, #8]
 8008e46:	1ad5      	subs	r5, r2, r3
 8008e48:	4285      	cmp	r5, r0
 8008e4a:	da01      	bge.n	8008e50 <_format_hex+0x54>
 8008e4c:	428b      	cmp	r3, r1
 8008e4e:	d823      	bhi.n	8008e98 <_format_hex+0x9c>
 8008e50:	1ad5      	subs	r5, r2, r3
 8008e52:	1c5c      	adds	r4, r3, #1
 8008e54:	ab10      	add	r3, sp, #64	; 0x40
 8008e56:	429c      	cmp	r4, r3
 8008e58:	d321      	bcc.n	8008e9e <_format_hex+0xa2>
 8008e5a:	68b3      	ldr	r3, [r6, #8]
 8008e5c:	429d      	cmp	r5, r3
 8008e5e:	db24      	blt.n	8008eaa <_format_hex+0xae>
 8008e60:	b011      	add	sp, #68	; 0x44
 8008e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e64:	f014 0f02 	tst.w	r4, #2
 8008e68:	bf0c      	ite	eq
 8008e6a:	2757      	moveq	r7, #87	; 0x57
 8008e6c:	2737      	movne	r7, #55	; 0x37
 8008e6e:	4613      	mov	r3, r2
 8008e70:	466d      	mov	r5, sp
 8008e72:	f001 000f 	and.w	r0, r1, #15
 8008e76:	2809      	cmp	r0, #9
 8008e78:	bf94      	ite	ls
 8008e7a:	3030      	addls	r0, #48	; 0x30
 8008e7c:	19c0      	addhi	r0, r0, r7
 8008e7e:	0909      	lsrs	r1, r1, #4
 8008e80:	f803 0901 	strb.w	r0, [r3], #-1
 8008e84:	d0c6      	beq.n	8008e14 <_format_hex+0x18>
 8008e86:	42ab      	cmp	r3, r5
 8008e88:	d1f3      	bne.n	8008e72 <_format_hex+0x76>
 8008e8a:	e7c3      	b.n	8008e14 <_format_hex+0x18>
 8008e8c:	f803 5901 	strb.w	r5, [r3], #-1
 8008e90:	e7c5      	b.n	8008e1e <_format_hex+0x22>
 8008e92:	f803 5901 	strb.w	r5, [r3], #-1
 8008e96:	e7cc      	b.n	8008e32 <_format_hex+0x36>
 8008e98:	f803 4901 	strb.w	r4, [r3], #-1
 8008e9c:	e7d3      	b.n	8008e46 <_format_hex+0x4a>
 8008e9e:	4630      	mov	r0, r6
 8008ea0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008ea4:	f7ff ff2a 	bl	8008cfc <_xputch>
 8008ea8:	e7d4      	b.n	8008e54 <_format_hex+0x58>
 8008eaa:	2120      	movs	r1, #32
 8008eac:	4630      	mov	r0, r6
 8008eae:	f7ff ff25 	bl	8008cfc <_xputch>
 8008eb2:	3501      	adds	r5, #1
 8008eb4:	e7d1      	b.n	8008e5a <_format_hex+0x5e>
	...

08008eb8 <_vprintf>:
 8008eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ebc:	4614      	mov	r4, r2
 8008ebe:	2200      	movs	r2, #0
 8008ec0:	460b      	mov	r3, r1
 8008ec2:	f04f 0800 	mov.w	r8, #0
 8008ec6:	b099      	sub	sp, #100	; 0x64
 8008ec8:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008ecc:	af08      	add	r7, sp, #32
 8008ece:	7819      	ldrb	r1, [r3, #0]
 8008ed0:	b919      	cbnz	r1, 8008eda <_vprintf+0x22>
 8008ed2:	9806      	ldr	r0, [sp, #24]
 8008ed4:	b019      	add	sp, #100	; 0x64
 8008ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008eda:	2925      	cmp	r1, #37	; 0x25
 8008edc:	f103 0601 	add.w	r6, r3, #1
 8008ee0:	d004      	beq.n	8008eec <_vprintf+0x34>
 8008ee2:	a803      	add	r0, sp, #12
 8008ee4:	f7ff ff0a 	bl	8008cfc <_xputch>
 8008ee8:	4633      	mov	r3, r6
 8008eea:	e7f0      	b.n	8008ece <_vprintf+0x16>
 8008eec:	2200      	movs	r2, #0
 8008eee:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008ef2:	9205      	str	r2, [sp, #20]
 8008ef4:	785a      	ldrb	r2, [r3, #1]
 8008ef6:	2a30      	cmp	r2, #48	; 0x30
 8008ef8:	d129      	bne.n	8008f4e <_vprintf+0x96>
 8008efa:	2220      	movs	r2, #32
 8008efc:	9203      	str	r2, [sp, #12]
 8008efe:	1c9e      	adds	r6, r3, #2
 8008f00:	2200      	movs	r2, #0
 8008f02:	4635      	mov	r5, r6
 8008f04:	4613      	mov	r3, r2
 8008f06:	f04f 0c0a 	mov.w	ip, #10
 8008f0a:	7829      	ldrb	r1, [r5, #0]
 8008f0c:	462e      	mov	r6, r5
 8008f0e:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008f12:	2809      	cmp	r0, #9
 8008f14:	f105 0501 	add.w	r5, r5, #1
 8008f18:	d91d      	bls.n	8008f56 <_vprintf+0x9e>
 8008f1a:	b12a      	cbz	r2, 8008f28 <_vprintf+0x70>
 8008f1c:	9305      	str	r3, [sp, #20]
 8008f1e:	b11b      	cbz	r3, 8008f28 <_vprintf+0x70>
 8008f20:	9b03      	ldr	r3, [sp, #12]
 8008f22:	f043 0310 	orr.w	r3, r3, #16
 8008f26:	9303      	str	r3, [sp, #12]
 8008f28:	292e      	cmp	r1, #46	; 0x2e
 8008f2a:	d123      	bne.n	8008f74 <_vprintf+0xbc>
 8008f2c:	7873      	ldrb	r3, [r6, #1]
 8008f2e:	2b2a      	cmp	r3, #42	; 0x2a
 8008f30:	d015      	beq.n	8008f5e <_vprintf+0xa6>
 8008f32:	2100      	movs	r1, #0
 8008f34:	250a      	movs	r5, #10
 8008f36:	460a      	mov	r2, r1
 8008f38:	1c70      	adds	r0, r6, #1
 8008f3a:	7803      	ldrb	r3, [r0, #0]
 8008f3c:	4606      	mov	r6, r0
 8008f3e:	3b30      	subs	r3, #48	; 0x30
 8008f40:	2b09      	cmp	r3, #9
 8008f42:	f100 0001 	add.w	r0, r0, #1
 8008f46:	d959      	bls.n	8008ffc <_vprintf+0x144>
 8008f48:	b181      	cbz	r1, 8008f6c <_vprintf+0xb4>
 8008f4a:	9204      	str	r2, [sp, #16]
 8008f4c:	e00e      	b.n	8008f6c <_vprintf+0xb4>
 8008f4e:	2a2d      	cmp	r2, #45	; 0x2d
 8008f50:	d1d6      	bne.n	8008f00 <_vprintf+0x48>
 8008f52:	2240      	movs	r2, #64	; 0x40
 8008f54:	e7d2      	b.n	8008efc <_vprintf+0x44>
 8008f56:	2201      	movs	r2, #1
 8008f58:	fb0c 0303 	mla	r3, ip, r3, r0
 8008f5c:	e7d5      	b.n	8008f0a <_vprintf+0x52>
 8008f5e:	f854 3b04 	ldr.w	r3, [r4], #4
 8008f62:	3602      	adds	r6, #2
 8008f64:	2b00      	cmp	r3, #0
 8008f66:	bfb8      	it	lt
 8008f68:	425b      	neglt	r3, r3
 8008f6a:	9304      	str	r3, [sp, #16]
 8008f6c:	9b03      	ldr	r3, [sp, #12]
 8008f6e:	f043 0301 	orr.w	r3, r3, #1
 8008f72:	9303      	str	r3, [sp, #12]
 8008f74:	7833      	ldrb	r3, [r6, #0]
 8008f76:	2b6c      	cmp	r3, #108	; 0x6c
 8008f78:	bf04      	itt	eq
 8008f7a:	9b03      	ldreq	r3, [sp, #12]
 8008f7c:	3601      	addeq	r6, #1
 8008f7e:	7831      	ldrb	r1, [r6, #0]
 8008f80:	bf04      	itt	eq
 8008f82:	f043 0304 	orreq.w	r3, r3, #4
 8008f86:	9303      	streq	r3, [sp, #12]
 8008f88:	2958      	cmp	r1, #88	; 0x58
 8008f8a:	f000 8171 	beq.w	8009270 <_vprintf+0x3b8>
 8008f8e:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008f92:	b2da      	uxtb	r2, r3
 8008f94:	2a15      	cmp	r2, #21
 8008f96:	d8a4      	bhi.n	8008ee2 <_vprintf+0x2a>
 8008f98:	2b15      	cmp	r3, #21
 8008f9a:	d8a2      	bhi.n	8008ee2 <_vprintf+0x2a>
 8008f9c:	a201      	add	r2, pc, #4	; (adr r2, 8008fa4 <_vprintf+0xec>)
 8008f9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008fa2:	bf00      	nop
 8008fa4:	08009005 	stmdaeq	r0, {r0, r2, ip, pc}
 8008fa8:	08009017 	stmdaeq	r0, {r0, r1, r2, r4, ip, pc}
 8008fac:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fb0:	0800904d 	stmdaeq	r0, {r0, r2, r3, r6, ip, pc}
 8008fb4:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fb8:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fbc:	08009017 	stmdaeq	r0, {r0, r1, r2, r4, ip, pc}
 8008fc0:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fc4:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fc8:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fcc:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fd0:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fd4:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fd8:	080091b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, ip, pc}
 8008fdc:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fe0:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fe4:	080091db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, ip, pc}
 8008fe8:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008fec:	08009251 	stmdaeq	r0, {r0, r4, r6, r9, ip, pc}
 8008ff0:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008ff4:	08008ee3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sl, fp, pc}
 8008ff8:	08009279 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, ip, pc}
 8008ffc:	2101      	movs	r1, #1
 8008ffe:	fb05 3202 	mla	r2, r5, r2, r3
 8009002:	e79a      	b.n	8008f3a <_vprintf+0x82>
 8009004:	4625      	mov	r5, r4
 8009006:	a803      	add	r0, sp, #12
 8009008:	f855 1b04 	ldr.w	r1, [r5], #4
 800900c:	f7ff fe76 	bl	8008cfc <_xputch>
 8009010:	462c      	mov	r4, r5
 8009012:	3601      	adds	r6, #1
 8009014:	e768      	b.n	8008ee8 <_vprintf+0x30>
 8009016:	9903      	ldr	r1, [sp, #12]
 8009018:	074d      	lsls	r5, r1, #29
 800901a:	bf51      	iteee	pl
 800901c:	4625      	movpl	r5, r4
 800901e:	3407      	addmi	r4, #7
 8009020:	f024 0407 	bicmi.w	r4, r4, #7
 8009024:	4625      	movmi	r5, r4
 8009026:	bf55      	itete	pl
 8009028:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800902c:	6863      	ldrmi	r3, [r4, #4]
 800902e:	17d3      	asrpl	r3, r2, #31
 8009030:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009034:	2b00      	cmp	r3, #0
 8009036:	da05      	bge.n	8009044 <_vprintf+0x18c>
 8009038:	f041 0108 	orr.w	r1, r1, #8
 800903c:	4252      	negs	r2, r2
 800903e:	9103      	str	r1, [sp, #12]
 8009040:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009044:	a803      	add	r0, sp, #12
 8009046:	f7ff fe6f 	bl	8008d28 <_format_int>
 800904a:	e7e1      	b.n	8009010 <_vprintf+0x158>
 800904c:	3407      	adds	r4, #7
 800904e:	f024 0507 	bic.w	r5, r4, #7
 8009052:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8009056:	f7fe fd45 	bl	8007ae4 <__aeabi_d2f>
 800905a:	9b03      	ldr	r3, [sp, #12]
 800905c:	4641      	mov	r1, r8
 800905e:	07dc      	lsls	r4, r3, #31
 8009060:	bf54      	ite	pl
 8009062:	f04f 0a06 	movpl.w	sl, #6
 8009066:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 800906a:	4681      	mov	r9, r0
 800906c:	f7fe fee6 	bl	8007e3c <__aeabi_fcmplt>
 8009070:	2800      	cmp	r0, #0
 8009072:	d063      	beq.n	800913c <_vprintf+0x284>
 8009074:	232d      	movs	r3, #45	; 0x2d
 8009076:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 800907a:	f88d 3020 	strb.w	r3, [sp, #32]
 800907e:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009082:	4648      	mov	r0, r9
 8009084:	f7fe ff02 	bl	8007e8c <__aeabi_f2iz>
 8009088:	4659      	mov	r1, fp
 800908a:	2200      	movs	r2, #0
 800908c:	4604      	mov	r4, r0
 800908e:	f7ff fdfb 	bl	8008c88 <_itostr>
 8009092:	eb0b 0200 	add.w	r2, fp, r0
 8009096:	e9cd 2000 	strd	r2, r0, [sp]
 800909a:	4620      	mov	r0, r4
 800909c:	f7fe fe2c 	bl	8007cf8 <__aeabi_i2f>
 80090a0:	4601      	mov	r1, r0
 80090a2:	4648      	mov	r0, r9
 80090a4:	f7fe fd72 	bl	8007b8c <__aeabi_fsub>
 80090a8:	222e      	movs	r2, #46	; 0x2e
 80090aa:	4601      	mov	r1, r0
 80090ac:	200a      	movs	r0, #10
 80090ae:	9b00      	ldr	r3, [sp, #0]
 80090b0:	f10a 0901 	add.w	r9, sl, #1
 80090b4:	1c5c      	adds	r4, r3, #1
 80090b6:	9b01      	ldr	r3, [sp, #4]
 80090b8:	f80b 2003 	strb.w	r2, [fp, r3]
 80090bc:	4603      	mov	r3, r0
 80090be:	f1ba 0f00 	cmp.w	sl, #0
 80090c2:	dc3d      	bgt.n	8009140 <_vprintf+0x288>
 80090c4:	9100      	str	r1, [sp, #0]
 80090c6:	f7fe fe17 	bl	8007cf8 <__aeabi_i2f>
 80090ca:	9900      	ldr	r1, [sp, #0]
 80090cc:	f7ff f8da 	bl	8008284 <__aeabi_fmul>
 80090d0:	f7fe fedc 	bl	8007e8c <__aeabi_f2iz>
 80090d4:	464a      	mov	r2, r9
 80090d6:	4621      	mov	r1, r4
 80090d8:	f7ff fdd6 	bl	8008c88 <_itostr>
 80090dc:	4404      	add	r4, r0
 80090de:	1be0      	subs	r0, r4, r7
 80090e0:	1e44      	subs	r4, r0, #1
 80090e2:	5d3b      	ldrb	r3, [r7, r4]
 80090e4:	193a      	adds	r2, r7, r4
 80090e6:	2b34      	cmp	r3, #52	; 0x34
 80090e8:	d910      	bls.n	800910c <_vprintf+0x254>
 80090ea:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80090ee:	1e53      	subs	r3, r2, #1
 80090f0:	292e      	cmp	r1, #46	; 0x2e
 80090f2:	d02c      	beq.n	800914e <_vprintf+0x296>
 80090f4:	469c      	mov	ip, r3
 80090f6:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80090fa:	4663      	mov	r3, ip
 80090fc:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8009100:	2939      	cmp	r1, #57	; 0x39
 8009102:	d021      	beq.n	8009148 <_vprintf+0x290>
 8009104:	292e      	cmp	r1, #46	; 0x2e
 8009106:	d022      	beq.n	800914e <_vprintf+0x296>
 8009108:	3101      	adds	r1, #1
 800910a:	7019      	strb	r1, [r3, #0]
 800910c:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8009110:	446b      	add	r3, sp
 8009112:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009116:	2b2e      	cmp	r3, #46	; 0x2e
 8009118:	bf08      	it	eq
 800911a:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800911e:	46a1      	mov	r9, r4
 8009120:	9b05      	ldr	r3, [sp, #20]
 8009122:	4599      	cmp	r9, r3
 8009124:	db3e      	blt.n	80091a4 <_vprintf+0x2ec>
 8009126:	46b9      	mov	r9, r7
 8009128:	2c00      	cmp	r4, #0
 800912a:	f77f af71 	ble.w	8009010 <_vprintf+0x158>
 800912e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009132:	a803      	add	r0, sp, #12
 8009134:	f7ff fde2 	bl	8008cfc <_xputch>
 8009138:	3c01      	subs	r4, #1
 800913a:	e7f5      	b.n	8009128 <_vprintf+0x270>
 800913c:	46bb      	mov	fp, r7
 800913e:	e7a0      	b.n	8009082 <_vprintf+0x1ca>
 8009140:	4358      	muls	r0, r3
 8009142:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009146:	e7ba      	b.n	80090be <_vprintf+0x206>
 8009148:	f88c e001 	strb.w	lr, [ip, #1]
 800914c:	e7d5      	b.n	80090fa <_vprintf+0x242>
 800914e:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8009152:	3b01      	subs	r3, #1
 8009154:	7819      	ldrb	r1, [r3, #0]
 8009156:	2939      	cmp	r1, #57	; 0x39
 8009158:	d112      	bne.n	8009180 <_vprintf+0x2c8>
 800915a:	42bb      	cmp	r3, r7
 800915c:	d20d      	bcs.n	800917a <_vprintf+0x2c2>
 800915e:	1c5c      	adds	r4, r3, #1
 8009160:	1c99      	adds	r1, r3, #2
 8009162:	428c      	cmp	r4, r1
 8009164:	eba2 0203 	sub.w	r2, r2, r3
 8009168:	d913      	bls.n	8009192 <_vprintf+0x2da>
 800916a:	4619      	mov	r1, r3
 800916c:	441a      	add	r2, r3
 800916e:	428a      	cmp	r2, r1
 8009170:	d10b      	bne.n	800918a <_vprintf+0x2d2>
 8009172:	2231      	movs	r2, #49	; 0x31
 8009174:	4604      	mov	r4, r0
 8009176:	705a      	strb	r2, [r3, #1]
 8009178:	e7c8      	b.n	800910c <_vprintf+0x254>
 800917a:	f803 c901 	strb.w	ip, [r3], #-1
 800917e:	e7e9      	b.n	8009154 <_vprintf+0x29c>
 8009180:	42bb      	cmp	r3, r7
 8009182:	d3ec      	bcc.n	800915e <_vprintf+0x2a6>
 8009184:	292d      	cmp	r1, #45	; 0x2d
 8009186:	d0ea      	beq.n	800915e <_vprintf+0x2a6>
 8009188:	e7be      	b.n	8009108 <_vprintf+0x250>
 800918a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800918e:	704c      	strb	r4, [r1, #1]
 8009190:	e7ed      	b.n	800916e <_vprintf+0x2b6>
 8009192:	4414      	add	r4, r2
 8009194:	440a      	add	r2, r1
 8009196:	428a      	cmp	r2, r1
 8009198:	d0eb      	beq.n	8009172 <_vprintf+0x2ba>
 800919a:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800919e:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80091a2:	e7f8      	b.n	8009196 <_vprintf+0x2de>
 80091a4:	2120      	movs	r1, #32
 80091a6:	a803      	add	r0, sp, #12
 80091a8:	f7ff fda8 	bl	8008cfc <_xputch>
 80091ac:	f109 0901 	add.w	r9, r9, #1
 80091b0:	e7b6      	b.n	8009120 <_vprintf+0x268>
 80091b2:	2308      	movs	r3, #8
 80091b4:	4625      	mov	r5, r4
 80091b6:	9305      	str	r3, [sp, #20]
 80091b8:	2320      	movs	r3, #32
 80091ba:	2130      	movs	r1, #48	; 0x30
 80091bc:	f855 4b04 	ldr.w	r4, [r5], #4
 80091c0:	a803      	add	r0, sp, #12
 80091c2:	9303      	str	r3, [sp, #12]
 80091c4:	f7ff fd9a 	bl	8008cfc <_xputch>
 80091c8:	2178      	movs	r1, #120	; 0x78
 80091ca:	a803      	add	r0, sp, #12
 80091cc:	f7ff fd96 	bl	8008cfc <_xputch>
 80091d0:	4621      	mov	r1, r4
 80091d2:	a803      	add	r0, sp, #12
 80091d4:	f7ff fe12 	bl	8008dfc <_format_hex>
 80091d8:	e71a      	b.n	8009010 <_vprintf+0x158>
 80091da:	4625      	mov	r5, r4
 80091dc:	2400      	movs	r4, #0
 80091de:	f855 9b04 	ldr.w	r9, [r5], #4
 80091e2:	f819 3004 	ldrb.w	r3, [r9, r4]
 80091e6:	b993      	cbnz	r3, 800920e <_vprintf+0x356>
 80091e8:	9b03      	ldr	r3, [sp, #12]
 80091ea:	07d9      	lsls	r1, r3, #31
 80091ec:	d503      	bpl.n	80091f6 <_vprintf+0x33e>
 80091ee:	9b04      	ldr	r3, [sp, #16]
 80091f0:	429c      	cmp	r4, r3
 80091f2:	bfa8      	it	ge
 80091f4:	461c      	movge	r4, r3
 80091f6:	9b03      	ldr	r3, [sp, #12]
 80091f8:	f104 0a01 	add.w	sl, r4, #1
 80091fc:	065a      	lsls	r2, r3, #25
 80091fe:	d403      	bmi.n	8009208 <_vprintf+0x350>
 8009200:	9b05      	ldr	r3, [sp, #20]
 8009202:	429c      	cmp	r4, r3
 8009204:	db05      	blt.n	8009212 <_vprintf+0x35a>
 8009206:	4654      	mov	r4, sl
 8009208:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800920c:	e00d      	b.n	800922a <_vprintf+0x372>
 800920e:	3401      	adds	r4, #1
 8009210:	e7e7      	b.n	80091e2 <_vprintf+0x32a>
 8009212:	2120      	movs	r1, #32
 8009214:	a803      	add	r0, sp, #12
 8009216:	f7ff fd71 	bl	8008cfc <_xputch>
 800921a:	4654      	mov	r4, sl
 800921c:	e7eb      	b.n	80091f6 <_vprintf+0x33e>
 800921e:	a803      	add	r0, sp, #12
 8009220:	f7ff fd6c 	bl	8008cfc <_xputch>
 8009224:	9b04      	ldr	r3, [sp, #16]
 8009226:	3b01      	subs	r3, #1
 8009228:	9304      	str	r3, [sp, #16]
 800922a:	9b03      	ldr	r3, [sp, #12]
 800922c:	07db      	lsls	r3, r3, #31
 800922e:	d501      	bpl.n	8009234 <_vprintf+0x37c>
 8009230:	9b04      	ldr	r3, [sp, #16]
 8009232:	b11b      	cbz	r3, 800923c <_vprintf+0x384>
 8009234:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009238:	2900      	cmp	r1, #0
 800923a:	d1f0      	bne.n	800921e <_vprintf+0x366>
 800923c:	9b05      	ldr	r3, [sp, #20]
 800923e:	429c      	cmp	r4, r3
 8009240:	f6bf aee6 	bge.w	8009010 <_vprintf+0x158>
 8009244:	2120      	movs	r1, #32
 8009246:	a803      	add	r0, sp, #12
 8009248:	f7ff fd58 	bl	8008cfc <_xputch>
 800924c:	3401      	adds	r4, #1
 800924e:	e7f5      	b.n	800923c <_vprintf+0x384>
 8009250:	9b03      	ldr	r3, [sp, #12]
 8009252:	f013 0304 	ands.w	r3, r3, #4
 8009256:	bf1d      	ittte	ne
 8009258:	3407      	addne	r4, #7
 800925a:	f024 0407 	bicne.w	r4, r4, #7
 800925e:	4625      	movne	r5, r4
 8009260:	4625      	moveq	r5, r4
 8009262:	bf1a      	itte	ne
 8009264:	f855 2b08 	ldrne.w	r2, [r5], #8
 8009268:	6863      	ldrne	r3, [r4, #4]
 800926a:	f855 2b04 	ldreq.w	r2, [r5], #4
 800926e:	e6e9      	b.n	8009044 <_vprintf+0x18c>
 8009270:	9b03      	ldr	r3, [sp, #12]
 8009272:	f043 0302 	orr.w	r3, r3, #2
 8009276:	9303      	str	r3, [sp, #12]
 8009278:	4625      	mov	r5, r4
 800927a:	f855 1b04 	ldr.w	r1, [r5], #4
 800927e:	e7a8      	b.n	80091d2 <_vprintf+0x31a>

08009280 <printf>:
 8009280:	b40f      	push	{r0, r1, r2, r3}
 8009282:	b507      	push	{r0, r1, r2, lr}
 8009284:	aa04      	add	r2, sp, #16
 8009286:	f852 1b04 	ldr.w	r1, [r2], #4
 800928a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800928e:	9201      	str	r2, [sp, #4]
 8009290:	f7ff fe12 	bl	8008eb8 <_vprintf>
 8009294:	b003      	add	sp, #12
 8009296:	f85d eb04 	ldr.w	lr, [sp], #4
 800929a:	b004      	add	sp, #16
 800929c:	4770      	bx	lr
	...

080092a0 <sprintf>:
 80092a0:	b40e      	push	{r1, r2, r3}
 80092a2:	b517      	push	{r0, r1, r2, r4, lr}
 80092a4:	4c09      	ldr	r4, [pc, #36]	; (80092cc <sprintf+0x2c>)
 80092a6:	aa05      	add	r2, sp, #20
 80092a8:	f852 1b04 	ldr.w	r1, [r2], #4
 80092ac:	6020      	str	r0, [r4, #0]
 80092ae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80092b2:	9201      	str	r2, [sp, #4]
 80092b4:	f7ff fe00 	bl	8008eb8 <_vprintf>
 80092b8:	2300      	movs	r3, #0
 80092ba:	6822      	ldr	r2, [r4, #0]
 80092bc:	6023      	str	r3, [r4, #0]
 80092be:	7013      	strb	r3, [r2, #0]
 80092c0:	b003      	add	sp, #12
 80092c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092c6:	b003      	add	sp, #12
 80092c8:	4770      	bx	lr
 80092ca:	bf00      	nop
 80092cc:	20000080 	andcs	r0, r0, r0, lsl #1

080092d0 <snprintf>:
 80092d0:	b40c      	push	{r2, r3}
 80092d2:	460b      	mov	r3, r1
 80092d4:	b513      	push	{r0, r1, r4, lr}
 80092d6:	4c09      	ldr	r4, [pc, #36]	; (80092fc <snprintf+0x2c>)
 80092d8:	aa04      	add	r2, sp, #16
 80092da:	f852 1b04 	ldr.w	r1, [r2], #4
 80092de:	6020      	str	r0, [r4, #0]
 80092e0:	4618      	mov	r0, r3
 80092e2:	9201      	str	r2, [sp, #4]
 80092e4:	f7ff fde8 	bl	8008eb8 <_vprintf>
 80092e8:	2300      	movs	r3, #0
 80092ea:	6822      	ldr	r2, [r4, #0]
 80092ec:	6023      	str	r3, [r4, #0]
 80092ee:	7013      	strb	r3, [r2, #0]
 80092f0:	b002      	add	sp, #8
 80092f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092f6:	b002      	add	sp, #8
 80092f8:	4770      	bx	lr
 80092fa:	bf00      	nop
 80092fc:	20000080 	andcs	r0, r0, r0, lsl #1

08009300 <vsnprintf>:
 8009300:	b538      	push	{r3, r4, r5, lr}
 8009302:	4605      	mov	r5, r0
 8009304:	4c05      	ldr	r4, [pc, #20]	; (800931c <vsnprintf+0x1c>)
 8009306:	4608      	mov	r0, r1
 8009308:	4611      	mov	r1, r2
 800930a:	461a      	mov	r2, r3
 800930c:	6025      	str	r5, [r4, #0]
 800930e:	f7ff fdd3 	bl	8008eb8 <_vprintf>
 8009312:	2300      	movs	r3, #0
 8009314:	6822      	ldr	r2, [r4, #0]
 8009316:	6023      	str	r3, [r4, #0]
 8009318:	7013      	strb	r3, [r2, #0]
 800931a:	bd38      	pop	{r3, r4, r5, pc}
 800931c:	20000080 	andcs	r0, r0, r0, lsl #1

08009320 <__udivmoddi4>:
 8009320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009324:	9e08      	ldr	r6, [sp, #32]
 8009326:	460d      	mov	r5, r1
 8009328:	4604      	mov	r4, r0
 800932a:	468e      	mov	lr, r1
 800932c:	2b00      	cmp	r3, #0
 800932e:	d14c      	bne.n	80093ca <__udivmoddi4+0xaa>
 8009330:	428a      	cmp	r2, r1
 8009332:	4694      	mov	ip, r2
 8009334:	d967      	bls.n	8009406 <__udivmoddi4+0xe6>
 8009336:	fab2 f382 	clz	r3, r2
 800933a:	b153      	cbz	r3, 8009352 <__udivmoddi4+0x32>
 800933c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009340:	f1c3 0220 	rsb	r2, r3, #32
 8009344:	fa01 fe03 	lsl.w	lr, r1, r3
 8009348:	fa20 f202 	lsr.w	r2, r0, r2
 800934c:	ea42 0e0e 	orr.w	lr, r2, lr
 8009350:	409c      	lsls	r4, r3
 8009352:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009356:	fbbe f1f7 	udiv	r1, lr, r7
 800935a:	fa1f f58c 	uxth.w	r5, ip
 800935e:	fb07 ee11 	mls	lr, r7, r1, lr
 8009362:	fb01 f005 	mul.w	r0, r1, r5
 8009366:	0c22      	lsrs	r2, r4, #16
 8009368:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 800936c:	4290      	cmp	r0, r2
 800936e:	d90a      	bls.n	8009386 <__udivmoddi4+0x66>
 8009370:	eb1c 0202 	adds.w	r2, ip, r2
 8009374:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8009378:	f080 8119 	bcs.w	80095ae <__udivmoddi4+0x28e>
 800937c:	4290      	cmp	r0, r2
 800937e:	f240 8116 	bls.w	80095ae <__udivmoddi4+0x28e>
 8009382:	3902      	subs	r1, #2
 8009384:	4462      	add	r2, ip
 8009386:	1a12      	subs	r2, r2, r0
 8009388:	fbb2 f0f7 	udiv	r0, r2, r7
 800938c:	fb07 2210 	mls	r2, r7, r0, r2
 8009390:	fb00 f505 	mul.w	r5, r0, r5
 8009394:	b2a4      	uxth	r4, r4
 8009396:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800939a:	42a5      	cmp	r5, r4
 800939c:	d90a      	bls.n	80093b4 <__udivmoddi4+0x94>
 800939e:	eb1c 0404 	adds.w	r4, ip, r4
 80093a2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80093a6:	f080 8104 	bcs.w	80095b2 <__udivmoddi4+0x292>
 80093aa:	42a5      	cmp	r5, r4
 80093ac:	f240 8101 	bls.w	80095b2 <__udivmoddi4+0x292>
 80093b0:	4464      	add	r4, ip
 80093b2:	3802      	subs	r0, #2
 80093b4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80093b8:	2100      	movs	r1, #0
 80093ba:	1b64      	subs	r4, r4, r5
 80093bc:	b11e      	cbz	r6, 80093c6 <__udivmoddi4+0xa6>
 80093be:	40dc      	lsrs	r4, r3
 80093c0:	2300      	movs	r3, #0
 80093c2:	e9c6 4300 	strd	r4, r3, [r6]
 80093c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093ca:	428b      	cmp	r3, r1
 80093cc:	d908      	bls.n	80093e0 <__udivmoddi4+0xc0>
 80093ce:	2e00      	cmp	r6, #0
 80093d0:	f000 80ea 	beq.w	80095a8 <__udivmoddi4+0x288>
 80093d4:	2100      	movs	r1, #0
 80093d6:	e9c6 0500 	strd	r0, r5, [r6]
 80093da:	4608      	mov	r0, r1
 80093dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093e0:	fab3 f183 	clz	r1, r3
 80093e4:	2900      	cmp	r1, #0
 80093e6:	d148      	bne.n	800947a <__udivmoddi4+0x15a>
 80093e8:	42ab      	cmp	r3, r5
 80093ea:	d302      	bcc.n	80093f2 <__udivmoddi4+0xd2>
 80093ec:	4282      	cmp	r2, r0
 80093ee:	f200 80f8 	bhi.w	80095e2 <__udivmoddi4+0x2c2>
 80093f2:	1a84      	subs	r4, r0, r2
 80093f4:	eb65 0203 	sbc.w	r2, r5, r3
 80093f8:	2001      	movs	r0, #1
 80093fa:	4696      	mov	lr, r2
 80093fc:	2e00      	cmp	r6, #0
 80093fe:	d0e2      	beq.n	80093c6 <__udivmoddi4+0xa6>
 8009400:	e9c6 4e00 	strd	r4, lr, [r6]
 8009404:	e7df      	b.n	80093c6 <__udivmoddi4+0xa6>
 8009406:	b902      	cbnz	r2, 800940a <__udivmoddi4+0xea>
 8009408:	deff      	udf	#255	; 0xff
 800940a:	fab2 f382 	clz	r3, r2
 800940e:	2b00      	cmp	r3, #0
 8009410:	f040 808e 	bne.w	8009530 <__udivmoddi4+0x210>
 8009414:	1a88      	subs	r0, r1, r2
 8009416:	2101      	movs	r1, #1
 8009418:	0c17      	lsrs	r7, r2, #16
 800941a:	fa1f fe82 	uxth.w	lr, r2
 800941e:	fbb0 f5f7 	udiv	r5, r0, r7
 8009422:	fb07 0015 	mls	r0, r7, r5, r0
 8009426:	0c22      	lsrs	r2, r4, #16
 8009428:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800942c:	fb0e f005 	mul.w	r0, lr, r5
 8009430:	4290      	cmp	r0, r2
 8009432:	d908      	bls.n	8009446 <__udivmoddi4+0x126>
 8009434:	eb1c 0202 	adds.w	r2, ip, r2
 8009438:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800943c:	d202      	bcs.n	8009444 <__udivmoddi4+0x124>
 800943e:	4290      	cmp	r0, r2
 8009440:	f200 80cc 	bhi.w	80095dc <__udivmoddi4+0x2bc>
 8009444:	4645      	mov	r5, r8
 8009446:	1a12      	subs	r2, r2, r0
 8009448:	fbb2 f0f7 	udiv	r0, r2, r7
 800944c:	fb07 2210 	mls	r2, r7, r0, r2
 8009450:	fb0e fe00 	mul.w	lr, lr, r0
 8009454:	b2a4      	uxth	r4, r4
 8009456:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800945a:	45a6      	cmp	lr, r4
 800945c:	d908      	bls.n	8009470 <__udivmoddi4+0x150>
 800945e:	eb1c 0404 	adds.w	r4, ip, r4
 8009462:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009466:	d202      	bcs.n	800946e <__udivmoddi4+0x14e>
 8009468:	45a6      	cmp	lr, r4
 800946a:	f200 80b4 	bhi.w	80095d6 <__udivmoddi4+0x2b6>
 800946e:	4610      	mov	r0, r2
 8009470:	eba4 040e 	sub.w	r4, r4, lr
 8009474:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8009478:	e7a0      	b.n	80093bc <__udivmoddi4+0x9c>
 800947a:	f1c1 0720 	rsb	r7, r1, #32
 800947e:	408b      	lsls	r3, r1
 8009480:	fa22 fc07 	lsr.w	ip, r2, r7
 8009484:	ea4c 0c03 	orr.w	ip, ip, r3
 8009488:	fa25 fa07 	lsr.w	sl, r5, r7
 800948c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8009490:	fbba f8f9 	udiv	r8, sl, r9
 8009494:	408d      	lsls	r5, r1
 8009496:	fa20 f307 	lsr.w	r3, r0, r7
 800949a:	fb09 aa18 	mls	sl, r9, r8, sl
 800949e:	fa1f fe8c 	uxth.w	lr, ip
 80094a2:	432b      	orrs	r3, r5
 80094a4:	fa00 f501 	lsl.w	r5, r0, r1
 80094a8:	fb08 f00e 	mul.w	r0, r8, lr
 80094ac:	0c1c      	lsrs	r4, r3, #16
 80094ae:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80094b2:	42a0      	cmp	r0, r4
 80094b4:	fa02 f201 	lsl.w	r2, r2, r1
 80094b8:	d90b      	bls.n	80094d2 <__udivmoddi4+0x1b2>
 80094ba:	eb1c 0404 	adds.w	r4, ip, r4
 80094be:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80094c2:	f080 8086 	bcs.w	80095d2 <__udivmoddi4+0x2b2>
 80094c6:	42a0      	cmp	r0, r4
 80094c8:	f240 8083 	bls.w	80095d2 <__udivmoddi4+0x2b2>
 80094cc:	f1a8 0802 	sub.w	r8, r8, #2
 80094d0:	4464      	add	r4, ip
 80094d2:	1a24      	subs	r4, r4, r0
 80094d4:	b298      	uxth	r0, r3
 80094d6:	fbb4 f3f9 	udiv	r3, r4, r9
 80094da:	fb09 4413 	mls	r4, r9, r3, r4
 80094de:	fb03 fe0e 	mul.w	lr, r3, lr
 80094e2:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80094e6:	45a6      	cmp	lr, r4
 80094e8:	d908      	bls.n	80094fc <__udivmoddi4+0x1dc>
 80094ea:	eb1c 0404 	adds.w	r4, ip, r4
 80094ee:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80094f2:	d26a      	bcs.n	80095ca <__udivmoddi4+0x2aa>
 80094f4:	45a6      	cmp	lr, r4
 80094f6:	d968      	bls.n	80095ca <__udivmoddi4+0x2aa>
 80094f8:	3b02      	subs	r3, #2
 80094fa:	4464      	add	r4, ip
 80094fc:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8009500:	fba0 9302 	umull	r9, r3, r0, r2
 8009504:	eba4 040e 	sub.w	r4, r4, lr
 8009508:	429c      	cmp	r4, r3
 800950a:	46c8      	mov	r8, r9
 800950c:	469e      	mov	lr, r3
 800950e:	d354      	bcc.n	80095ba <__udivmoddi4+0x29a>
 8009510:	d051      	beq.n	80095b6 <__udivmoddi4+0x296>
 8009512:	2e00      	cmp	r6, #0
 8009514:	d067      	beq.n	80095e6 <__udivmoddi4+0x2c6>
 8009516:	ebb5 0308 	subs.w	r3, r5, r8
 800951a:	eb64 040e 	sbc.w	r4, r4, lr
 800951e:	40cb      	lsrs	r3, r1
 8009520:	fa04 f707 	lsl.w	r7, r4, r7
 8009524:	431f      	orrs	r7, r3
 8009526:	40cc      	lsrs	r4, r1
 8009528:	e9c6 7400 	strd	r7, r4, [r6]
 800952c:	2100      	movs	r1, #0
 800952e:	e74a      	b.n	80093c6 <__udivmoddi4+0xa6>
 8009530:	fa02 fc03 	lsl.w	ip, r2, r3
 8009534:	f1c3 0020 	rsb	r0, r3, #32
 8009538:	40c1      	lsrs	r1, r0
 800953a:	409d      	lsls	r5, r3
 800953c:	fa24 f000 	lsr.w	r0, r4, r0
 8009540:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009544:	4328      	orrs	r0, r5
 8009546:	fbb1 f5f7 	udiv	r5, r1, r7
 800954a:	fb07 1115 	mls	r1, r7, r5, r1
 800954e:	fa1f fe8c 	uxth.w	lr, ip
 8009552:	0c02      	lsrs	r2, r0, #16
 8009554:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009558:	fb05 f10e 	mul.w	r1, r5, lr
 800955c:	4291      	cmp	r1, r2
 800955e:	fa04 f403 	lsl.w	r4, r4, r3
 8009562:	d908      	bls.n	8009576 <__udivmoddi4+0x256>
 8009564:	eb1c 0202 	adds.w	r2, ip, r2
 8009568:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800956c:	d22f      	bcs.n	80095ce <__udivmoddi4+0x2ae>
 800956e:	4291      	cmp	r1, r2
 8009570:	d92d      	bls.n	80095ce <__udivmoddi4+0x2ae>
 8009572:	3d02      	subs	r5, #2
 8009574:	4462      	add	r2, ip
 8009576:	1a52      	subs	r2, r2, r1
 8009578:	fbb2 f1f7 	udiv	r1, r2, r7
 800957c:	fb07 2211 	mls	r2, r7, r1, r2
 8009580:	b280      	uxth	r0, r0
 8009582:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009586:	fb01 f20e 	mul.w	r2, r1, lr
 800958a:	4282      	cmp	r2, r0
 800958c:	d908      	bls.n	80095a0 <__udivmoddi4+0x280>
 800958e:	eb1c 0000 	adds.w	r0, ip, r0
 8009592:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8009596:	d216      	bcs.n	80095c6 <__udivmoddi4+0x2a6>
 8009598:	4282      	cmp	r2, r0
 800959a:	d914      	bls.n	80095c6 <__udivmoddi4+0x2a6>
 800959c:	3902      	subs	r1, #2
 800959e:	4460      	add	r0, ip
 80095a0:	1a80      	subs	r0, r0, r2
 80095a2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80095a6:	e73a      	b.n	800941e <__udivmoddi4+0xfe>
 80095a8:	4631      	mov	r1, r6
 80095aa:	4630      	mov	r0, r6
 80095ac:	e70b      	b.n	80093c6 <__udivmoddi4+0xa6>
 80095ae:	4671      	mov	r1, lr
 80095b0:	e6e9      	b.n	8009386 <__udivmoddi4+0x66>
 80095b2:	4610      	mov	r0, r2
 80095b4:	e6fe      	b.n	80093b4 <__udivmoddi4+0x94>
 80095b6:	454d      	cmp	r5, r9
 80095b8:	d2ab      	bcs.n	8009512 <__udivmoddi4+0x1f2>
 80095ba:	ebb9 0802 	subs.w	r8, r9, r2
 80095be:	eb63 0e0c 	sbc.w	lr, r3, ip
 80095c2:	3801      	subs	r0, #1
 80095c4:	e7a5      	b.n	8009512 <__udivmoddi4+0x1f2>
 80095c6:	4641      	mov	r1, r8
 80095c8:	e7ea      	b.n	80095a0 <__udivmoddi4+0x280>
 80095ca:	4603      	mov	r3, r0
 80095cc:	e796      	b.n	80094fc <__udivmoddi4+0x1dc>
 80095ce:	4645      	mov	r5, r8
 80095d0:	e7d1      	b.n	8009576 <__udivmoddi4+0x256>
 80095d2:	46d0      	mov	r8, sl
 80095d4:	e77d      	b.n	80094d2 <__udivmoddi4+0x1b2>
 80095d6:	4464      	add	r4, ip
 80095d8:	3802      	subs	r0, #2
 80095da:	e749      	b.n	8009470 <__udivmoddi4+0x150>
 80095dc:	3d02      	subs	r5, #2
 80095de:	4462      	add	r2, ip
 80095e0:	e731      	b.n	8009446 <__udivmoddi4+0x126>
 80095e2:	4608      	mov	r0, r1
 80095e4:	e70a      	b.n	80093fc <__udivmoddi4+0xdc>
 80095e6:	4631      	mov	r1, r6
 80095e8:	e6ed      	b.n	80093c6 <__udivmoddi4+0xa6>
 80095ea:	bf00      	nop

080095ec <RemoteConfig::HandleList()>:
 80095ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80095f0:	6801      	ldr	r1, [r0, #0]
 80095f2:	4604      	mov	r4, r0
 80095f4:	2012      	movs	r0, #18
 80095f6:	f04f 080c 	mov.w	r8, #12
 80095fa:	4a29      	ldr	r2, [pc, #164]	; (80096a0 <RemoteConfig::HandleList()+0xb4>)
 80095fc:	4b29      	ldr	r3, [pc, #164]	; (80096a4 <RemoteConfig::HandleList()+0xb8>)
 80095fe:	fb00 2201 	mla	r2, r0, r1, r2
 8009602:	6860      	ldr	r0, [r4, #4]
 8009604:	4928      	ldr	r1, [pc, #160]	; (80096a8 <RemoteConfig::HandleList()+0xbc>)
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	fb08 1100 	mla	r1, r8, r0, r1
 800960c:	4e27      	ldr	r6, [pc, #156]	; (80096ac <RemoteConfig::HandleList()+0xc0>)
 800960e:	4828      	ldr	r0, [pc, #160]	; (80096b0 <RemoteConfig::HandleList()+0xc4>)
 8009610:	695f      	ldr	r7, [r3, #20]
 8009612:	6835      	ldr	r5, [r6, #0]
 8009614:	f890 9009 	ldrb.w	r9, [r0, #9]
 8009618:	b2fb      	uxtb	r3, r7
 800961a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800961e:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8009622:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009626:	b089      	sub	sp, #36	; 0x24
 8009628:	3507      	adds	r5, #7
 800962a:	0e3f      	lsrs	r7, r7, #24
 800962c:	f1b9 0f00 	cmp.w	r9, #0
 8009630:	d01d      	beq.n	800966e <RemoteConfig::HandleList()+0x82>
 8009632:	3009      	adds	r0, #9
 8009634:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8009638:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800963c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009640:	4628      	mov	r0, r5
 8009642:	e9cd e701 	strd	lr, r7, [sp, #4]
 8009646:	4a1b      	ldr	r2, [pc, #108]	; (80096b4 <RemoteConfig::HandleList()+0xc8>)
 8009648:	f8cd c000 	str.w	ip, [sp]
 800964c:	f7ff fe40 	bl	80092d0 <snprintf>
 8009650:	69e3      	ldr	r3, [r4, #28]
 8009652:	2b05      	cmp	r3, #5
 8009654:	d118      	bne.n	8009688 <RemoteConfig::HandleList()+0x9c>
 8009656:	f642 1305 	movw	r3, #10501	; 0x2905
 800965a:	9300      	str	r3, [sp, #0]
 800965c:	69a3      	ldr	r3, [r4, #24]
 800965e:	b282      	uxth	r2, r0
 8009660:	4629      	mov	r1, r5
 8009662:	7d20      	ldrb	r0, [r4, #20]
 8009664:	f005 f90c 	bl	800e880 <udp_send>
 8009668:	b009      	add	sp, #36	; 0x24
 800966a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800966e:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8009672:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8009676:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800967a:	4628      	mov	r0, r5
 800967c:	e9cd ce00 	strd	ip, lr, [sp]
 8009680:	4a0d      	ldr	r2, [pc, #52]	; (80096b8 <RemoteConfig::HandleList()+0xcc>)
 8009682:	f7ff fe25 	bl	80092d0 <snprintf>
 8009686:	e7e3      	b.n	8009650 <RemoteConfig::HandleList()+0x64>
 8009688:	2b06      	cmp	r3, #6
 800968a:	d1ed      	bne.n	8009668 <RemoteConfig::HandleList()+0x7c>
 800968c:	6833      	ldr	r3, [r6, #0]
 800968e:	799b      	ldrb	r3, [r3, #6]
 8009690:	2b2a      	cmp	r3, #42	; 0x2a
 8009692:	d1e9      	bne.n	8009668 <RemoteConfig::HandleList()+0x7c>
 8009694:	f642 1305 	movw	r3, #10501	; 0x2905
 8009698:	9300      	str	r3, [sp, #0]
 800969a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800969e:	e7de      	b.n	800965e <RemoteConfig::HandleList()+0x72>
 80096a0:	08014724 	stmdaeq	r1, {r2, r5, r8, r9, sl, lr}
 80096a4:	2000977c 	andcs	r9, r0, ip, ror r7
 80096a8:	080147ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, lr}
 80096ac:	20000084 	andcs	r0, r0, r4, lsl #1
 80096b0:	20000088 	andcs	r0, r0, r8, lsl #1
 80096b4:	08014639 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, lr}
 80096b8:	08014652 	stmdaeq	r1, {r1, r4, r6, r9, sl, lr}

080096bc <RemoteConfig::HandleDisplayGet()>:
 80096bc:	69c3      	ldr	r3, [r0, #28]
 80096be:	2b08      	cmp	r3, #8
 80096c0:	d11b      	bne.n	80096fa <RemoteConfig::HandleDisplayGet()+0x3e>
 80096c2:	4b0e      	ldr	r3, [pc, #56]	; (80096fc <RemoteConfig::HandleDisplayGet()+0x40>)
 80096c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096c6:	681b      	ldr	r3, [r3, #0]
 80096c8:	4d0d      	ldr	r5, [pc, #52]	; (8009700 <RemoteConfig::HandleDisplayGet()+0x44>)
 80096ca:	7c19      	ldrb	r1, [r3, #16]
 80096cc:	4a0d      	ldr	r2, [pc, #52]	; (8009704 <RemoteConfig::HandleDisplayGet()+0x48>)
 80096ce:	4b0e      	ldr	r3, [pc, #56]	; (8009708 <RemoteConfig::HandleDisplayGet()+0x4c>)
 80096d0:	4604      	mov	r4, r0
 80096d2:	2900      	cmp	r1, #0
 80096d4:	bf18      	it	ne
 80096d6:	4613      	movne	r3, r2
 80096d8:	6828      	ldr	r0, [r5, #0]
 80096da:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80096de:	4a0b      	ldr	r2, [pc, #44]	; (800970c <RemoteConfig::HandleDisplayGet()+0x50>)
 80096e0:	f7ff fdf6 	bl	80092d0 <snprintf>
 80096e4:	f642 1305 	movw	r3, #10501	; 0x2905
 80096e8:	9300      	str	r3, [sp, #0]
 80096ea:	b282      	uxth	r2, r0
 80096ec:	69a3      	ldr	r3, [r4, #24]
 80096ee:	6829      	ldr	r1, [r5, #0]
 80096f0:	7d20      	ldrb	r0, [r4, #20]
 80096f2:	f005 f8c5 	bl	800e880 <udp_send>
 80096f6:	b003      	add	sp, #12
 80096f8:	bd30      	pop	{r4, r5, pc}
 80096fa:	4770      	bx	lr
 80096fc:	2000ada0 	andcs	sl, r0, r0, lsr #27
 8009700:	20000084 	andcs	r0, r0, r4, lsl #1
 8009704:	0801466b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, lr}
 8009708:	08014668 	stmdaeq	r1, {r3, r5, r6, r9, sl, lr}
 800970c:	0801466f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, lr}

08009710 <RemoteConfig::HandleTftpGet()>:
 8009710:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009712:	4604      	mov	r4, r0
 8009714:	f000 fd74 	bl	800a200 <RemoteConfig::PlatformHandleTftpGet()>
 8009718:	69e3      	ldr	r3, [r4, #28]
 800971a:	2b05      	cmp	r3, #5
 800971c:	d116      	bne.n	800974c <RemoteConfig::HandleTftpGet()+0x3c>
 800971e:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009722:	4d0b      	ldr	r5, [pc, #44]	; (8009750 <RemoteConfig::HandleTftpGet()+0x40>)
 8009724:	4a0b      	ldr	r2, [pc, #44]	; (8009754 <RemoteConfig::HandleTftpGet()+0x44>)
 8009726:	4b0c      	ldr	r3, [pc, #48]	; (8009758 <RemoteConfig::HandleTftpGet()+0x48>)
 8009728:	6828      	ldr	r0, [r5, #0]
 800972a:	2900      	cmp	r1, #0
 800972c:	bf08      	it	eq
 800972e:	4613      	moveq	r3, r2
 8009730:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009734:	4a09      	ldr	r2, [pc, #36]	; (800975c <RemoteConfig::HandleTftpGet()+0x4c>)
 8009736:	f7ff fdcb 	bl	80092d0 <snprintf>
 800973a:	f642 1305 	movw	r3, #10501	; 0x2905
 800973e:	b282      	uxth	r2, r0
 8009740:	9300      	str	r3, [sp, #0]
 8009742:	6829      	ldr	r1, [r5, #0]
 8009744:	69a3      	ldr	r3, [r4, #24]
 8009746:	7d20      	ldrb	r0, [r4, #20]
 8009748:	f005 f89a 	bl	800e880 <udp_send>
 800974c:	b003      	add	sp, #12
 800974e:	bd30      	pop	{r4, r5, pc}
 8009750:	20000084 	andcs	r0, r0, r4, lsl #1
 8009754:	0801466b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, lr}
 8009758:	08014668 	stmdaeq	r1, {r3, r5, r6, r9, sl, lr}
 800975c:	0801467b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, lr}

08009760 <RemoteConfig::HandleVersion()>:
 8009760:	69c3      	ldr	r3, [r0, #28]
 8009762:	2b08      	cmp	r3, #8
 8009764:	d114      	bne.n	8009790 <RemoteConfig::HandleVersion()+0x30>
 8009766:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009768:	4d0a      	ldr	r5, [pc, #40]	; (8009794 <RemoteConfig::HandleVersion()+0x34>)
 800976a:	4604      	mov	r4, r0
 800976c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009770:	4b09      	ldr	r3, [pc, #36]	; (8009798 <RemoteConfig::HandleVersion()+0x38>)
 8009772:	4a0a      	ldr	r2, [pc, #40]	; (800979c <RemoteConfig::HandleVersion()+0x3c>)
 8009774:	6828      	ldr	r0, [r5, #0]
 8009776:	f7ff fdab 	bl	80092d0 <snprintf>
 800977a:	f642 1305 	movw	r3, #10501	; 0x2905
 800977e:	9300      	str	r3, [sp, #0]
 8009780:	b282      	uxth	r2, r0
 8009782:	69a3      	ldr	r3, [r4, #24]
 8009784:	6829      	ldr	r1, [r5, #0]
 8009786:	7d20      	ldrb	r0, [r4, #20]
 8009788:	f005 f87a 	bl	800e880 <udp_send>
 800978c:	b003      	add	sp, #12
 800978e:	bd30      	pop	{r4, r5, pc}
 8009790:	4770      	bx	lr
 8009792:	bf00      	nop
 8009794:	20000084 	andcs	r0, r0, r4, lsl #1
 8009798:	2000ae46 	andcs	sl, r0, r6, asr #28
 800979c:	08014684 	stmdaeq	r1, {r2, r7, r9, sl, lr}

080097a0 <RemoteConfig::HandleUptime()>:
 80097a0:	7bc3      	ldrb	r3, [r0, #15]
 80097a2:	b1e3      	cbz	r3, 80097de <RemoteConfig::HandleUptime()+0x3e>
 80097a4:	4b0e      	ldr	r3, [pc, #56]	; (80097e0 <RemoteConfig::HandleUptime()+0x40>)
 80097a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80097a8:	681a      	ldr	r2, [r3, #0]
 80097aa:	69c3      	ldr	r3, [r0, #28]
 80097ac:	4604      	mov	r4, r0
 80097ae:	2b07      	cmp	r3, #7
 80097b0:	d113      	bne.n	80097da <RemoteConfig::HandleUptime()+0x3a>
 80097b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80097b6:	4d0b      	ldr	r5, [pc, #44]	; (80097e4 <RemoteConfig::HandleUptime()+0x44>)
 80097b8:	fbb2 f3f3 	udiv	r3, r2, r3
 80097bc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80097c0:	4a09      	ldr	r2, [pc, #36]	; (80097e8 <RemoteConfig::HandleUptime()+0x48>)
 80097c2:	6828      	ldr	r0, [r5, #0]
 80097c4:	f7ff fd84 	bl	80092d0 <snprintf>
 80097c8:	f642 1305 	movw	r3, #10501	; 0x2905
 80097cc:	9300      	str	r3, [sp, #0]
 80097ce:	b282      	uxth	r2, r0
 80097d0:	69a3      	ldr	r3, [r4, #24]
 80097d2:	6829      	ldr	r1, [r5, #0]
 80097d4:	7d20      	ldrb	r0, [r4, #20]
 80097d6:	f005 f853 	bl	800e880 <udp_send>
 80097da:	b003      	add	sp, #12
 80097dc:	bd30      	pop	{r4, r5, pc}
 80097de:	4770      	bx	lr
 80097e0:	2000aea4 	andcs	sl, r0, r4, lsr #29
 80097e4:	20000084 	andcs	r0, r0, r4, lsl #1
 80097e8:	0801468f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, lr}

080097ec <Display::Status(Display7SegmentMessage)>:
 80097ec:	7c43      	ldrb	r3, [r0, #17]
 80097ee:	b1bb      	cbz	r3, 8009820 <Display::Status(Display7SegmentMessage)+0x34>
 80097f0:	b513      	push	{r0, r1, r4, lr}
 80097f2:	2312      	movs	r3, #18
 80097f4:	43c9      	mvns	r1, r1
 80097f6:	4604      	mov	r4, r0
 80097f8:	f88d 3004 	strb.w	r3, [sp, #4]
 80097fc:	7a00      	ldrb	r0, [r0, #8]
 80097fe:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8009802:	f88d 3005 	strb.w	r3, [sp, #5]
 8009806:	f88d 1006 	strb.w	r1, [sp, #6]
 800980a:	f009 ffe5 	bl	80137d8 <gd32_i2c_set_address>
 800980e:	68e0      	ldr	r0, [r4, #12]
 8009810:	f009 ffda 	bl	80137c8 <gd32_i2c_set_baudrate>
 8009814:	2103      	movs	r1, #3
 8009816:	a801      	add	r0, sp, #4
 8009818:	f009 ffe4 	bl	80137e4 <gd32_i2c_write>
 800981c:	b002      	add	sp, #8
 800981e:	bd10      	pop	{r4, pc}
 8009820:	4770      	bx	lr
	...

08009824 <RemoteConfig::HandleDisplaySet()>:
 8009824:	b508      	push	{r3, lr}
 8009826:	69c3      	ldr	r3, [r0, #28]
 8009828:	2b09      	cmp	r3, #9
 800982a:	d10a      	bne.n	8009842 <RemoteConfig::HandleDisplaySet()+0x1e>
 800982c:	4b05      	ldr	r3, [pc, #20]	; (8009844 <RemoteConfig::HandleDisplaySet()+0x20>)
 800982e:	681b      	ldr	r3, [r3, #0]
 8009830:	7a59      	ldrb	r1, [r3, #9]
 8009832:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8009836:	4259      	negs	r1, r3
 8009838:	4159      	adcs	r1, r3
 800983a:	4b03      	ldr	r3, [pc, #12]	; (8009848 <RemoteConfig::HandleDisplaySet()+0x24>)
 800983c:	6818      	ldr	r0, [r3, #0]
 800983e:	f7fe ff7f 	bl	8008740 <Display::SetSleep(bool)>
 8009842:	bd08      	pop	{r3, pc}
 8009844:	20000084 	andcs	r0, r0, r4, lsl #1
 8009848:	2000ada0 	andcs	sl, r0, r0, lsr #27

0800984c <RemoteConfig::HandleTftpSet()>:
 800984c:	69c3      	ldr	r3, [r0, #28]
 800984e:	2b06      	cmp	r3, #6
 8009850:	d127      	bne.n	80098a2 <RemoteConfig::HandleTftpSet()+0x56>
 8009852:	b570      	push	{r4, r5, r6, lr}
 8009854:	4b13      	ldr	r3, [pc, #76]	; (80098a4 <RemoteConfig::HandleTftpSet()+0x58>)
 8009856:	4e14      	ldr	r6, [pc, #80]	; (80098a8 <RemoteConfig::HandleTftpSet()+0x5c>)
 8009858:	681b      	ldr	r3, [r3, #0]
 800985a:	4604      	mov	r4, r0
 800985c:	799b      	ldrb	r3, [r3, #6]
 800985e:	6835      	ldr	r5, [r6, #0]
 8009860:	2b30      	cmp	r3, #48	; 0x30
 8009862:	bf14      	ite	ne
 8009864:	2301      	movne	r3, #1
 8009866:	2300      	moveq	r3, #0
 8009868:	f880 3020 	strb.w	r3, [r0, #32]
 800986c:	d012      	beq.n	8009894 <RemoteConfig::HandleTftpSet()+0x48>
 800986e:	4628      	mov	r0, r5
 8009870:	2100      	movs	r1, #0
 8009872:	f7fe ff65 	bl	8008740 <Display::SetSleep(bool)>
 8009876:	6835      	ldr	r5, [r6, #0]
 8009878:	490c      	ldr	r1, [pc, #48]	; (80098ac <RemoteConfig::HandleTftpSet()+0x60>)
 800987a:	4628      	mov	r0, r5
 800987c:	f7fe ff02 	bl	8008684 <Display::TextStatus(char const*)>
 8009880:	f244 0171 	movw	r1, #16497	; 0x4071
 8009884:	4628      	mov	r0, r5
 8009886:	f7ff ffb1 	bl	80097ec <Display::Status(Display7SegmentMessage)>
 800988a:	4620      	mov	r0, r4
 800988c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009890:	f000 bcae 	b.w	800a1f0 <RemoteConfig::PlatformHandleTftpSet()>
 8009894:	4906      	ldr	r1, [pc, #24]	; (80098b0 <RemoteConfig::HandleTftpSet()+0x64>)
 8009896:	4628      	mov	r0, r5
 8009898:	f7fe fef4 	bl	8008684 <Display::TextStatus(char const*)>
 800989c:	f248 0171 	movw	r1, #32881	; 0x8071
 80098a0:	e7f0      	b.n	8009884 <RemoteConfig::HandleTftpSet()+0x38>
 80098a2:	4770      	bx	lr
 80098a4:	20000084 	andcs	r0, r0, r4, lsl #1
 80098a8:	2000ada0 	andcs	sl, r0, r0, lsr #27
 80098ac:	0801469c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, lr}
 80098b0:	080146ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, sl, lr}

080098b4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80098b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098b8:	2500      	movs	r5, #0
 80098ba:	461f      	mov	r7, r3
 80098bc:	6083      	str	r3, [r0, #8]
 80098be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80098c2:	4690      	mov	r8, r2
 80098c4:	4689      	mov	r9, r1
 80098c6:	4e12      	ldr	r6, [pc, #72]	; (8009910 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 80098c8:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80098cc:	f8df a044 	ldr.w	sl, [pc, #68]	; 8009914 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 80098d0:	4b11      	ldr	r3, [pc, #68]	; (8009918 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 80098d2:	e9c0 1200 	strd	r1, r2, [r0]
 80098d6:	4604      	mov	r4, r0
 80098d8:	6018      	str	r0, [r3, #0]
 80098da:	4631      	mov	r1, r6
 80098dc:	60c5      	str	r5, [r0, #12]
 80098de:	8205      	strh	r5, [r0, #16]
 80098e0:	61c5      	str	r5, [r0, #28]
 80098e2:	f880 5020 	strb.w	r5, [r0, #32]
 80098e6:	f8da 0000 	ldr.w	r0, [sl]
 80098ea:	f005 fc94 	bl	800f216 <Network::MacAddressCopyTo(unsigned char*)>
 80098ee:	f642 1105 	movw	r1, #10501	; 0x2905
 80098f2:	f8da 0000 	ldr.w	r0, [sl]
 80098f6:	f886 9006 	strb.w	r9, [r6, #6]
 80098fa:	f886 8007 	strb.w	r8, [r6, #7]
 80098fe:	7237      	strb	r7, [r6, #8]
 8009900:	7275      	strb	r5, [r6, #9]
 8009902:	f005 fc82 	bl	800f20a <Network::Begin(unsigned short)>
 8009906:	6160      	str	r0, [r4, #20]
 8009908:	4620      	mov	r0, r4
 800990a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800990e:	bf00      	nop
 8009910:	20000088 	andcs	r0, r0, r8, lsl #1
 8009914:	2000977c 	andcs	r9, r0, ip, ror r7
 8009918:	200000ac 	andcs	r0, r0, ip, lsr #1

0800991c <RemoteConfig::GetStringNode() const>:
 800991c:	2012      	movs	r0, #18
 800991e:	4b03      	ldr	r3, [pc, #12]	; (800992c <RemoteConfig::GetStringNode() const+0x10>)
 8009920:	799a      	ldrb	r2, [r3, #6]
 8009922:	4b03      	ldr	r3, [pc, #12]	; (8009930 <RemoteConfig::GetStringNode() const+0x14>)
 8009924:	fb00 3002 	mla	r0, r0, r2, r3
 8009928:	4770      	bx	lr
 800992a:	bf00      	nop
 800992c:	20000088 	andcs	r0, r0, r8, lsl #1
 8009930:	08014724 	stmdaeq	r1, {r2, r5, r8, r9, sl, lr}

08009934 <RemoteConfig::GetStringOutput() const>:
 8009934:	200c      	movs	r0, #12
 8009936:	4b03      	ldr	r3, [pc, #12]	; (8009944 <RemoteConfig::GetStringOutput() const+0x10>)
 8009938:	79da      	ldrb	r2, [r3, #7]
 800993a:	4b03      	ldr	r3, [pc, #12]	; (8009948 <RemoteConfig::GetStringOutput() const+0x14>)
 800993c:	fb00 3002 	mla	r0, r0, r2, r3
 8009940:	4770      	bx	lr
 8009942:	bf00      	nop
 8009944:	20000088 	andcs	r0, r0, r8, lsl #1
 8009948:	080147ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, lr}

0800994c <RemoteConfig::SetDisable(bool)>:
 800994c:	b538      	push	{r3, r4, r5, lr}
 800994e:	4604      	mov	r4, r0
 8009950:	7b03      	ldrb	r3, [r0, #12]
 8009952:	b161      	cbz	r1, 800996e <RemoteConfig::SetDisable(bool)+0x22>
 8009954:	b953      	cbnz	r3, 800996c <RemoteConfig::SetDisable(bool)+0x20>
 8009956:	4b0c      	ldr	r3, [pc, #48]	; (8009988 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009958:	f642 1105 	movw	r1, #10501	; 0x2905
 800995c:	6818      	ldr	r0, [r3, #0]
 800995e:	f005 fc57 	bl	800f210 <Network::End(unsigned short)>
 8009962:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009966:	6163      	str	r3, [r4, #20]
 8009968:	2301      	movs	r3, #1
 800996a:	7323      	strb	r3, [r4, #12]
 800996c:	bd38      	pop	{r3, r4, r5, pc}
 800996e:	2b00      	cmp	r3, #0
 8009970:	d0fc      	beq.n	800996c <RemoteConfig::SetDisable(bool)+0x20>
 8009972:	4b05      	ldr	r3, [pc, #20]	; (8009988 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009974:	460d      	mov	r5, r1
 8009976:	6818      	ldr	r0, [r3, #0]
 8009978:	f642 1105 	movw	r1, #10501	; 0x2905
 800997c:	f005 fc45 	bl	800f20a <Network::Begin(unsigned short)>
 8009980:	7325      	strb	r5, [r4, #12]
 8009982:	6160      	str	r0, [r4, #20]
 8009984:	e7f2      	b.n	800996c <RemoteConfig::SetDisable(bool)+0x20>
 8009986:	bf00      	nop
 8009988:	2000977c 	andcs	r9, r0, ip, ror r7

0800998c <RemoteConfig::SetDisplayName(char const*)>:
 800998c:	2217      	movs	r2, #23
 800998e:	4809      	ldr	r0, [pc, #36]	; (80099b4 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009990:	b508      	push	{r3, lr}
 8009992:	1e4b      	subs	r3, r1, #1
 8009994:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009998:	b911      	cbnz	r1, 80099a0 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800999a:	f008 fcb5 	bl	8012308 <memset>
 800999e:	e003      	b.n	80099a8 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 80099a0:	3a01      	subs	r2, #1
 80099a2:	f800 1b01 	strb.w	r1, [r0], #1
 80099a6:	d1f5      	bne.n	8009994 <RemoteConfig::SetDisplayName(char const*)+0x8>
 80099a8:	2200      	movs	r2, #0
 80099aa:	4b03      	ldr	r3, [pc, #12]	; (80099b8 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80099ac:	f883 2020 	strb.w	r2, [r3, #32]
 80099b0:	bd08      	pop	{r3, pc}
 80099b2:	bf00      	nop
 80099b4:	20000091 	mulcs	r0, r1, r0
 80099b8:	20000088 	andcs	r0, r0, r8, lsl #1

080099bc <RemoteConfig::HandleGet(void*, unsigned int)>:
 80099bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80099be:	4604      	mov	r4, r0
 80099c0:	4616      	mov	r6, r2
 80099c2:	460d      	mov	r5, r1
 80099c4:	4f28      	ldr	r7, [pc, #160]	; (8009a68 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 80099c6:	b085      	sub	sp, #20
 80099c8:	b9a9      	cbnz	r1, 80099f6 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 80099ca:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80099ce:	6839      	ldr	r1, [r7, #0]
 80099d0:	aa03      	add	r2, sp, #12
 80099d2:	3105      	adds	r1, #5
 80099d4:	9303      	str	r3, [sp, #12]
 80099d6:	f000 fbe1 	bl	800a19c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80099da:	1e03      	subs	r3, r0, #0
 80099dc:	da1b      	bge.n	8009a16 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80099de:	f642 1305 	movw	r3, #10501	; 0x2905
 80099e2:	220b      	movs	r2, #11
 80099e4:	9300      	str	r3, [sp, #0]
 80099e6:	4921      	ldr	r1, [pc, #132]	; (8009a6c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80099e8:	69a3      	ldr	r3, [r4, #24]
 80099ea:	7d20      	ldrb	r0, [r4, #20]
 80099ec:	f004 ff48 	bl	800e880 <udp_send>
 80099f0:	200c      	movs	r0, #12
 80099f2:	b005      	add	sp, #20
 80099f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099f6:	9203      	str	r2, [sp, #12]
 80099f8:	aa03      	add	r2, sp, #12
 80099fa:	6039      	str	r1, [r7, #0]
 80099fc:	f000 fbce 	bl	800a19c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009a00:	1e03      	subs	r3, r0, #0
 8009a02:	da08      	bge.n	8009a16 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009a04:	2e0b      	cmp	r6, #11
 8009a06:	4632      	mov	r2, r6
 8009a08:	4628      	mov	r0, r5
 8009a0a:	bf28      	it	cs
 8009a0c:	220b      	movcs	r2, #11
 8009a0e:	4917      	ldr	r1, [pc, #92]	; (8009a6c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009a10:	f008 fc58 	bl	80122c4 <memcpy>
 8009a14:	e7ec      	b.n	80099f0 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009a16:	221c      	movs	r2, #28
 8009a18:	4353      	muls	r3, r2
 8009a1a:	4915      	ldr	r1, [pc, #84]	; (8009a70 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009a1c:	18ca      	adds	r2, r1, r3
 8009a1e:	6852      	ldr	r2, [r2, #4]
 8009a20:	58cb      	ldr	r3, [r1, r3]
 8009a22:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009a26:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009a2a:	07d2      	lsls	r2, r2, #31
 8009a2c:	bf48      	it	mi
 8009a2e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009a32:	a903      	add	r1, sp, #12
 8009a34:	bf48      	it	mi
 8009a36:	58d3      	ldrmi	r3, [r2, r3]
 8009a38:	4798      	blx	r3
 8009a3a:	b95d      	cbnz	r5, 8009a54 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009a3c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a40:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009a44:	9300      	str	r3, [sp, #0]
 8009a46:	6839      	ldr	r1, [r7, #0]
 8009a48:	69a3      	ldr	r3, [r4, #24]
 8009a4a:	7d20      	ldrb	r0, [r4, #20]
 8009a4c:	f004 ff18 	bl	800e880 <udp_send>
 8009a50:	9803      	ldr	r0, [sp, #12]
 8009a52:	e7ce      	b.n	80099f2 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009a54:	9a03      	ldr	r2, [sp, #12]
 8009a56:	4628      	mov	r0, r5
 8009a58:	42b2      	cmp	r2, r6
 8009a5a:	bf28      	it	cs
 8009a5c:	4632      	movcs	r2, r6
 8009a5e:	6839      	ldr	r1, [r7, #0]
 8009a60:	f008 fc3b 	bl	80122da <memmove>
 8009a64:	e7f4      	b.n	8009a50 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009a66:	bf00      	nop
 8009a68:	20000084 	andcs	r0, r0, r4, lsl #1
 8009a6c:	080146c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, lr}
 8009a70:	080149a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, lr}

08009a74 <RemoteConfig::HandleGetNoParams()>:
 8009a74:	2200      	movs	r2, #0
 8009a76:	4611      	mov	r1, r2
 8009a78:	f7ff bfa0 	b.w	80099bc <RemoteConfig::HandleGet(void*, unsigned int)>

08009a7c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009a7c:	b510      	push	{r4, lr}
 8009a7e:	460c      	mov	r4, r1
 8009a80:	4b07      	ldr	r3, [pc, #28]	; (8009aa0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009a82:	b08a      	sub	sp, #40	; 0x28
 8009a84:	6819      	ldr	r1, [r3, #0]
 8009a86:	a801      	add	r0, sp, #4
 8009a88:	f000 f9e4 	bl	8009e54 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009a8c:	4905      	ldr	r1, [pc, #20]	; (8009aa4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009a8e:	4623      	mov	r3, r4
 8009a90:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009a94:	6809      	ldr	r1, [r1, #0]
 8009a96:	a801      	add	r0, sp, #4
 8009a98:	f000 fb00 	bl	800a09c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009a9c:	b00a      	add	sp, #40	; 0x28
 8009a9e:	bd10      	pop	{r4, pc}
 8009aa0:	2000ad74 	andcs	sl, r0, r4, ror sp
 8009aa4:	20000084 	andcs	r0, r0, r4, lsl #1

08009aa8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009aa8:	b510      	push	{r4, lr}
 8009aaa:	460c      	mov	r4, r1
 8009aac:	4b07      	ldr	r3, [pc, #28]	; (8009acc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009aae:	b09a      	sub	sp, #104	; 0x68
 8009ab0:	6819      	ldr	r1, [r3, #0]
 8009ab2:	a801      	add	r0, sp, #4
 8009ab4:	f005 fd92 	bl	800f5dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009ab8:	4905      	ldr	r1, [pc, #20]	; (8009ad0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009aba:	4623      	mov	r3, r4
 8009abc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ac0:	6809      	ldr	r1, [r1, #0]
 8009ac2:	a801      	add	r0, sp, #4
 8009ac4:	f005 ff66 	bl	800f994 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009ac8:	b01a      	add	sp, #104	; 0x68
 8009aca:	bd10      	pop	{r4, pc}
 8009acc:	2000ad70 	andcs	sl, r0, r0, ror sp
 8009ad0:	20000084 	andcs	r0, r0, r4, lsl #1

08009ad4 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8009ad4:	b510      	push	{r4, lr}
 8009ad6:	460c      	mov	r4, r1
 8009ad8:	4b07      	ldr	r3, [pc, #28]	; (8009af8 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8009ada:	b08a      	sub	sp, #40	; 0x28
 8009adc:	6819      	ldr	r1, [r3, #0]
 8009ade:	a801      	add	r0, sp, #4
 8009ae0:	f001 ffda 	bl	800ba98 <E131Params::E131Params(E131ParamsStore*)>
 8009ae4:	4905      	ldr	r1, [pc, #20]	; (8009afc <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8009ae6:	4623      	mov	r3, r4
 8009ae8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009aec:	6809      	ldr	r1, [r1, #0]
 8009aee:	a801      	add	r0, sp, #4
 8009af0:	f002 fac6 	bl	800c080 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009af4:	b00a      	add	sp, #40	; 0x28
 8009af6:	bd10      	pop	{r4, pc}
 8009af8:	2000ad78 	andcs	sl, r0, r8, ror sp
 8009afc:	20000084 	andcs	r0, r0, r4, lsl #1

08009b00 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009b00:	b510      	push	{r4, lr}
 8009b02:	460c      	mov	r4, r1
 8009b04:	4b07      	ldr	r3, [pc, #28]	; (8009b24 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009b06:	b088      	sub	sp, #32
 8009b08:	6819      	ldr	r1, [r3, #0]
 8009b0a:	a801      	add	r0, sp, #4
 8009b0c:	f002 fdc8 	bl	800c6a0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009b10:	4905      	ldr	r1, [pc, #20]	; (8009b28 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009b12:	4623      	mov	r3, r4
 8009b14:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b18:	6809      	ldr	r1, [r1, #0]
 8009b1a:	a801      	add	r0, sp, #4
 8009b1c:	f003 f8c2 	bl	800cca4 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009b20:	b008      	add	sp, #32
 8009b22:	bd10      	pop	{r4, pc}
 8009b24:	2000ad7c 	andcs	sl, r0, ip, ror sp
 8009b28:	20000084 	andcs	r0, r0, r4, lsl #1

08009b2c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009b2c:	b510      	push	{r4, lr}
 8009b2e:	460c      	mov	r4, r1
 8009b30:	4b07      	ldr	r3, [pc, #28]	; (8009b50 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009b32:	b08a      	sub	sp, #40	; 0x28
 8009b34:	6819      	ldr	r1, [r3, #0]
 8009b36:	4668      	mov	r0, sp
 8009b38:	f006 fcd6 	bl	80104e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009b3c:	4905      	ldr	r1, [pc, #20]	; (8009b54 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009b3e:	4623      	mov	r3, r4
 8009b40:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b44:	4668      	mov	r0, sp
 8009b46:	6809      	ldr	r1, [r1, #0]
 8009b48:	f006 fe06 	bl	8010758 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009b4c:	b00a      	add	sp, #40	; 0x28
 8009b4e:	bd10      	pop	{r4, pc}
 8009b50:	2000ad6c 	andcs	sl, r0, ip, ror #26
 8009b54:	20000084 	andcs	r0, r0, r4, lsl #1

08009b58 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009b58:	b530      	push	{r4, r5, lr}
 8009b5a:	b085      	sub	sp, #20
 8009b5c:	4604      	mov	r4, r0
 8009b5e:	9201      	str	r2, [sp, #4]
 8009b60:	b9d1      	cbnz	r1, 8009b98 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009b62:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009b66:	9303      	str	r3, [sp, #12]
 8009b68:	4b19      	ldr	r3, [pc, #100]	; (8009bd0 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009b6a:	aa03      	add	r2, sp, #12
 8009b6c:	6819      	ldr	r1, [r3, #0]
 8009b6e:	3101      	adds	r1, #1
 8009b70:	f000 fb14 	bl	800a19c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009b74:	2800      	cmp	r0, #0
 8009b76:	db0d      	blt.n	8009b94 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009b78:	221c      	movs	r2, #28
 8009b7a:	4b16      	ldr	r3, [pc, #88]	; (8009bd4 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009b7c:	fb02 3300 	mla	r3, r2, r0, r3
 8009b80:	68da      	ldr	r2, [r3, #12]
 8009b82:	689b      	ldr	r3, [r3, #8]
 8009b84:	1051      	asrs	r1, r2, #1
 8009b86:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009b8a:	07d2      	lsls	r2, r2, #31
 8009b8c:	bf44      	itt	mi
 8009b8e:	5862      	ldrmi	r2, [r4, r1]
 8009b90:	58d3      	ldrmi	r3, [r2, r3]
 8009b92:	4798      	blx	r3
 8009b94:	b005      	add	sp, #20
 8009b96:	bd30      	pop	{r4, r5, pc}
 8009b98:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009b9c:	d8fa      	bhi.n	8009b94 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009b9e:	4b0e      	ldr	r3, [pc, #56]	; (8009bd8 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009ba0:	460d      	mov	r5, r1
 8009ba2:	781b      	ldrb	r3, [r3, #0]
 8009ba4:	07d9      	lsls	r1, r3, #31
 8009ba6:	d50b      	bpl.n	8009bc0 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009ba8:	782b      	ldrb	r3, [r5, #0]
 8009baa:	2b7b      	cmp	r3, #123	; 0x7b
 8009bac:	d108      	bne.n	8009bc0 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009bae:	1e51      	subs	r1, r2, #1
 8009bb0:	4628      	mov	r0, r5
 8009bb2:	2200      	movs	r2, #0
 8009bb4:	b289      	uxth	r1, r1
 8009bb6:	f007 fbfd 	bl	80113b4 <properties::convert_json_file(char*, unsigned short, bool)>
 8009bba:	1e02      	subs	r2, r0, #0
 8009bbc:	ddea      	ble.n	8009b94 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009bbe:	b292      	uxth	r2, r2
 8009bc0:	4b03      	ldr	r3, [pc, #12]	; (8009bd0 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009bc2:	61e2      	str	r2, [r4, #28]
 8009bc4:	4620      	mov	r0, r4
 8009bc6:	601d      	str	r5, [r3, #0]
 8009bc8:	aa01      	add	r2, sp, #4
 8009bca:	1c69      	adds	r1, r5, #1
 8009bcc:	e7d0      	b.n	8009b70 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009bce:	bf00      	nop
 8009bd0:	20000084 	andcs	r0, r0, r4, lsl #1
 8009bd4:	080149a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, lr}
 8009bd8:	2000ad9c 	mulcs	r0, ip, sp

08009bdc <RemoteConfig::Run()>:
 8009bdc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009be0:	7b05      	ldrb	r5, [r0, #12]
 8009be2:	2d00      	cmp	r5, #0
 8009be4:	d156      	bne.n	8009c94 <RemoteConfig::Run()+0xb8>
 8009be6:	4e45      	ldr	r6, [pc, #276]	; (8009cfc <RemoteConfig::Run()+0x120>)
 8009be8:	4604      	mov	r4, r0
 8009bea:	f100 0218 	add.w	r2, r0, #24
 8009bee:	4631      	mov	r1, r6
 8009bf0:	7d00      	ldrb	r0, [r0, #20]
 8009bf2:	f10d 030e 	add.w	r3, sp, #14
 8009bf6:	f004 fe1d 	bl	800e834 <udp_recv2>
 8009bfa:	2803      	cmp	r0, #3
 8009bfc:	61e0      	str	r0, [r4, #28]
 8009bfe:	d949      	bls.n	8009c94 <RemoteConfig::Run()+0xb8>
 8009c00:	6831      	ldr	r1, [r6, #0]
 8009c02:	1e43      	subs	r3, r0, #1
 8009c04:	5cca      	ldrb	r2, [r1, r3]
 8009c06:	2a0a      	cmp	r2, #10
 8009c08:	bf18      	it	ne
 8009c0a:	4603      	movne	r3, r0
 8009c0c:	61e3      	str	r3, [r4, #28]
 8009c0e:	7808      	ldrb	r0, [r1, #0]
 8009c10:	283f      	cmp	r0, #63	; 0x3f
 8009c12:	d137      	bne.n	8009c84 <RemoteConfig::Run()+0xa8>
 8009c14:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009d00 <RemoteConfig::Run()+0x124>
 8009c18:	462a      	mov	r2, r5
 8009c1a:	4667      	mov	r7, ip
 8009c1c:	3b01      	subs	r3, #1
 8009c1e:	61e3      	str	r3, [r4, #28]
 8009c20:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009c24:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009c28:	b16d      	cbz	r5, 8009c46 <RemoteConfig::Run()+0x6a>
 8009c2a:	4283      	cmp	r3, r0
 8009c2c:	d80d      	bhi.n	8009c4a <RemoteConfig::Run()+0x6e>
 8009c2e:	3201      	adds	r2, #1
 8009c30:	2a09      	cmp	r2, #9
 8009c32:	f10c 0c10 	add.w	ip, ip, #16
 8009c36:	d1f3      	bne.n	8009c20 <RemoteConfig::Run()+0x44>
 8009c38:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c3c:	9300      	str	r3, [sp, #0]
 8009c3e:	2208      	movs	r2, #8
 8009c40:	69a3      	ldr	r3, [r4, #24]
 8009c42:	4930      	ldr	r1, [pc, #192]	; (8009d04 <RemoteConfig::Run()+0x128>)
 8009c44:	e04e      	b.n	8009ce4 <RemoteConfig::Run()+0x108>
 8009c46:	4283      	cmp	r3, r0
 8009c48:	d1f1      	bne.n	8009c2e <RemoteConfig::Run()+0x52>
 8009c4a:	460e      	mov	r6, r1
 8009c4c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009c50:	4408      	add	r0, r1
 8009c52:	3d01      	subs	r5, #1
 8009c54:	4286      	cmp	r6, r0
 8009c56:	d10b      	bne.n	8009c70 <RemoteConfig::Run()+0x94>
 8009c58:	0113      	lsls	r3, r2, #4
 8009c5a:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009c5e:	6852      	ldr	r2, [r2, #4]
 8009c60:	58fb      	ldr	r3, [r7, r3]
 8009c62:	1051      	asrs	r1, r2, #1
 8009c64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009c68:	07d2      	lsls	r2, r2, #31
 8009c6a:	d408      	bmi.n	8009c7e <RemoteConfig::Run()+0xa2>
 8009c6c:	4798      	blx	r3
 8009c6e:	e011      	b.n	8009c94 <RemoteConfig::Run()+0xb8>
 8009c70:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009c74:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009c78:	45f0      	cmp	r8, lr
 8009c7a:	d0eb      	beq.n	8009c54 <RemoteConfig::Run()+0x78>
 8009c7c:	e7d7      	b.n	8009c2e <RemoteConfig::Run()+0x52>
 8009c7e:	5862      	ldr	r2, [r4, r1]
 8009c80:	58d3      	ldr	r3, [r2, r3]
 8009c82:	e7f3      	b.n	8009c6c <RemoteConfig::Run()+0x90>
 8009c84:	7b62      	ldrb	r2, [r4, #13]
 8009c86:	b92a      	cbnz	r2, 8009c94 <RemoteConfig::Run()+0xb8>
 8009c88:	2823      	cmp	r0, #35	; 0x23
 8009c8a:	d106      	bne.n	8009c9a <RemoteConfig::Run()+0xbe>
 8009c8c:	4611      	mov	r1, r2
 8009c8e:	4620      	mov	r0, r4
 8009c90:	f7ff ff62 	bl	8009b58 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009c94:	b004      	add	sp, #16
 8009c96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c9a:	2821      	cmp	r0, #33	; 0x21
 8009c9c:	d1fa      	bne.n	8009c94 <RemoteConfig::Run()+0xb8>
 8009c9e:	3b01      	subs	r3, #1
 8009ca0:	2b05      	cmp	r3, #5
 8009ca2:	61e3      	str	r3, [r4, #28]
 8009ca4:	d918      	bls.n	8009cd8 <RemoteConfig::Run()+0xfc>
 8009ca6:	460a      	mov	r2, r1
 8009ca8:	4608      	mov	r0, r1
 8009caa:	4d17      	ldr	r5, [pc, #92]	; (8009d08 <RemoteConfig::Run()+0x12c>)
 8009cac:	f101 0c05 	add.w	ip, r1, #5
 8009cb0:	4560      	cmp	r0, ip
 8009cb2:	d01b      	beq.n	8009cec <RemoteConfig::Run()+0x110>
 8009cb4:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009cb8:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009cbc:	42b7      	cmp	r7, r6
 8009cbe:	d0f7      	beq.n	8009cb0 <RemoteConfig::Run()+0xd4>
 8009cc0:	2b08      	cmp	r3, #8
 8009cc2:	d909      	bls.n	8009cd8 <RemoteConfig::Run()+0xfc>
 8009cc4:	4b11      	ldr	r3, [pc, #68]	; (8009d0c <RemoteConfig::Run()+0x130>)
 8009cc6:	3108      	adds	r1, #8
 8009cc8:	428a      	cmp	r2, r1
 8009cca:	d015      	beq.n	8009cf8 <RemoteConfig::Run()+0x11c>
 8009ccc:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009cd0:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009cd4:	4285      	cmp	r5, r0
 8009cd6:	d0f7      	beq.n	8009cc8 <RemoteConfig::Run()+0xec>
 8009cd8:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cdc:	2208      	movs	r2, #8
 8009cde:	9300      	str	r3, [sp, #0]
 8009ce0:	69a3      	ldr	r3, [r4, #24]
 8009ce2:	490b      	ldr	r1, [pc, #44]	; (8009d10 <RemoteConfig::Run()+0x134>)
 8009ce4:	7d20      	ldrb	r0, [r4, #20]
 8009ce6:	f004 fdcb 	bl	800e880 <udp_send>
 8009cea:	e7d3      	b.n	8009c94 <RemoteConfig::Run()+0xb8>
 8009cec:	2300      	movs	r3, #0
 8009cee:	4a09      	ldr	r2, [pc, #36]	; (8009d14 <RemoteConfig::Run()+0x138>)
 8009cf0:	011b      	lsls	r3, r3, #4
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	58d3      	ldr	r3, [r2, r3]
 8009cf6:	e7b9      	b.n	8009c6c <RemoteConfig::Run()+0x90>
 8009cf8:	2301      	movs	r3, #1
 8009cfa:	e7f8      	b.n	8009cee <RemoteConfig::Run()+0x112>
 8009cfc:	20000084 	andcs	r0, r0, r4, lsl #1
 8009d00:	0801487c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, lr}
 8009d04:	080146e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, lr}
 8009d08:	080146cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, lr}
 8009d0c:	080146d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, lr}
 8009d10:	080146dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, lr}
 8009d14:	0801490c 	stmdaeq	r1, {r2, r3, r8, fp, lr}

08009d18 <RemoteConfig::HandleSetRconfig()>:
 8009d18:	b510      	push	{r4, lr}
 8009d1a:	4604      	mov	r4, r0
 8009d1c:	4b08      	ldr	r3, [pc, #32]	; (8009d40 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009d1e:	b08a      	sub	sp, #40	; 0x28
 8009d20:	6819      	ldr	r1, [r3, #0]
 8009d22:	a801      	add	r0, sp, #4
 8009d24:	f000 f896 	bl	8009e54 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d28:	4b06      	ldr	r3, [pc, #24]	; (8009d44 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009d2a:	69e2      	ldr	r2, [r4, #28]
 8009d2c:	6819      	ldr	r1, [r3, #0]
 8009d2e:	a801      	add	r0, sp, #4
 8009d30:	f000 f8a6 	bl	8009e80 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009d34:	4621      	mov	r1, r4
 8009d36:	a801      	add	r0, sp, #4
 8009d38:	f000 f9bd 	bl	800a0b6 <RemoteConfigParams::Set(RemoteConfig*)>
 8009d3c:	b00a      	add	sp, #40	; 0x28
 8009d3e:	bd10      	pop	{r4, pc}
 8009d40:	2000ad74 	andcs	sl, r0, r4, ror sp
 8009d44:	20000084 	andcs	r0, r0, r4, lsl #1

08009d48 <RemoteConfig::HandleSetNetworkTxt()>:
 8009d48:	b510      	push	{r4, lr}
 8009d4a:	4604      	mov	r4, r0
 8009d4c:	4b06      	ldr	r3, [pc, #24]	; (8009d68 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009d4e:	b09a      	sub	sp, #104	; 0x68
 8009d50:	6819      	ldr	r1, [r3, #0]
 8009d52:	a801      	add	r0, sp, #4
 8009d54:	f005 fc42 	bl	800f5dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009d58:	4b04      	ldr	r3, [pc, #16]	; (8009d6c <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009d5a:	69e2      	ldr	r2, [r4, #28]
 8009d5c:	6819      	ldr	r1, [r3, #0]
 8009d5e:	a801      	add	r0, sp, #4
 8009d60:	f005 fc54 	bl	800f60c <NetworkParams::Load(char const*, unsigned int)>
 8009d64:	b01a      	add	sp, #104	; 0x68
 8009d66:	bd10      	pop	{r4, pc}
 8009d68:	2000ad70 	andcs	sl, r0, r0, ror sp
 8009d6c:	20000084 	andcs	r0, r0, r4, lsl #1

08009d70 <RemoteConfig::HandleSetE131Txt()>:
 8009d70:	b510      	push	{r4, lr}
 8009d72:	4604      	mov	r4, r0
 8009d74:	4b06      	ldr	r3, [pc, #24]	; (8009d90 <RemoteConfig::HandleSetE131Txt()+0x20>)
 8009d76:	b08a      	sub	sp, #40	; 0x28
 8009d78:	6819      	ldr	r1, [r3, #0]
 8009d7a:	a801      	add	r0, sp, #4
 8009d7c:	f001 fe8c 	bl	800ba98 <E131Params::E131Params(E131ParamsStore*)>
 8009d80:	4b04      	ldr	r3, [pc, #16]	; (8009d94 <RemoteConfig::HandleSetE131Txt()+0x24>)
 8009d82:	69e2      	ldr	r2, [r4, #28]
 8009d84:	6819      	ldr	r1, [r3, #0]
 8009d86:	a801      	add	r0, sp, #4
 8009d88:	f001 feb6 	bl	800baf8 <E131Params::Load(char const*, unsigned int)>
 8009d8c:	b00a      	add	sp, #40	; 0x28
 8009d8e:	bd10      	pop	{r4, pc}
 8009d90:	2000ad78 	andcs	sl, r0, r8, ror sp
 8009d94:	20000084 	andcs	r0, r0, r4, lsl #1

08009d98 <RemoteConfig::HandleSetDevicesTxt()>:
 8009d98:	b510      	push	{r4, lr}
 8009d9a:	4604      	mov	r4, r0
 8009d9c:	4b06      	ldr	r3, [pc, #24]	; (8009db8 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 8009d9e:	b088      	sub	sp, #32
 8009da0:	6819      	ldr	r1, [r3, #0]
 8009da2:	a801      	add	r0, sp, #4
 8009da4:	f002 fc7c 	bl	800c6a0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009da8:	4b04      	ldr	r3, [pc, #16]	; (8009dbc <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 8009daa:	69e2      	ldr	r2, [r4, #28]
 8009dac:	6819      	ldr	r1, [r3, #0]
 8009dae:	a801      	add	r0, sp, #4
 8009db0:	f002 fc98 	bl	800c6e4 <PixelDmxParams::Load(char const*, unsigned int)>
 8009db4:	b008      	add	sp, #32
 8009db6:	bd10      	pop	{r4, pc}
 8009db8:	2000ad7c 	andcs	sl, r0, ip, ror sp
 8009dbc:	20000084 	andcs	r0, r0, r4, lsl #1

08009dc0 <RemoteConfig::HandleSetDisplayTxt()>:
 8009dc0:	b510      	push	{r4, lr}
 8009dc2:	4604      	mov	r4, r0
 8009dc4:	4b06      	ldr	r3, [pc, #24]	; (8009de0 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8009dc6:	b08a      	sub	sp, #40	; 0x28
 8009dc8:	6819      	ldr	r1, [r3, #0]
 8009dca:	4668      	mov	r0, sp
 8009dcc:	f006 fb8c 	bl	80104e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009dd0:	4b04      	ldr	r3, [pc, #16]	; (8009de4 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8009dd2:	4668      	mov	r0, sp
 8009dd4:	69e2      	ldr	r2, [r4, #28]
 8009dd6:	6819      	ldr	r1, [r3, #0]
 8009dd8:	f006 fba0 	bl	801051c <DisplayUdfParams::Load(char const*, unsigned int)>
 8009ddc:	b00a      	add	sp, #40	; 0x28
 8009dde:	bd10      	pop	{r4, pc}
 8009de0:	2000ad6c 	andcs	sl, r0, ip, ror #26
 8009de4:	20000084 	andcs	r0, r0, r4, lsl #1

08009de8 <RemoteConfig::HandleFactory()>:
 8009de8:	b538      	push	{r3, r4, r5, lr}
 8009dea:	2400      	movs	r4, #0
 8009dec:	4d04      	ldr	r5, [pc, #16]	; (8009e00 <RemoteConfig::HandleFactory()+0x18>)
 8009dee:	4621      	mov	r1, r4
 8009df0:	6828      	ldr	r0, [r5, #0]
 8009df2:	3401      	adds	r4, #1
 8009df4:	f006 fe32 	bl	8010a5c <ConfigStore::ResetSetList(configstore::Store)>
 8009df8:	2c1c      	cmp	r4, #28
 8009dfa:	d1f8      	bne.n	8009dee <RemoteConfig::HandleFactory()+0x6>
 8009dfc:	bd38      	pop	{r3, r4, r5, pc}
 8009dfe:	bf00      	nop
 8009e00:	2000ad64 	andcs	sl, r0, r4, ror #26

08009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009e04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e06:	460b      	mov	r3, r1
 8009e08:	8885      	ldrh	r5, [r0, #4]
 8009e0a:	88c1      	ldrh	r1, [r0, #6]
 8009e0c:	42a9      	cmp	r1, r5
 8009e0e:	d214      	bcs.n	8009e3a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009e10:	4604      	mov	r4, r0
 8009e12:	6800      	ldr	r0, [r0, #0]
 8009e14:	1a6d      	subs	r5, r5, r1
 8009e16:	4408      	add	r0, r1
 8009e18:	7a21      	ldrb	r1, [r4, #8]
 8009e1a:	b91a      	cbnz	r2, 8009e24 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009e1c:	b919      	cbnz	r1, 8009e26 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009e1e:	4a0a      	ldr	r2, [pc, #40]	; (8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009e20:	9100      	str	r1, [sp, #0]
 8009e22:	e002      	b.n	8009e2a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e24:	b159      	cbz	r1, 8009e3e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009e26:	9200      	str	r2, [sp, #0]
 8009e28:	4a08      	ldr	r2, [pc, #32]	; (8009e4c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009e2a:	4629      	mov	r1, r5
 8009e2c:	f7ff fa50 	bl	80092d0 <snprintf>
 8009e30:	4285      	cmp	r5, r0
 8009e32:	bfa2      	ittt	ge
 8009e34:	88e3      	ldrhge	r3, [r4, #6]
 8009e36:	181b      	addge	r3, r3, r0
 8009e38:	80e3      	strhge	r3, [r4, #6]
 8009e3a:	b003      	add	sp, #12
 8009e3c:	bd30      	pop	{r4, r5, pc}
 8009e3e:	2201      	movs	r2, #1
 8009e40:	9200      	str	r2, [sp, #0]
 8009e42:	4a03      	ldr	r2, [pc, #12]	; (8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009e44:	e7f1      	b.n	8009e2a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e46:	bf00      	nop
 8009e48:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 8009e4c:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 8009e50:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}

08009e54 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009e54:	b510      	push	{r4, lr}
 8009e56:	4604      	mov	r4, r0
 8009e58:	2220      	movs	r2, #32
 8009e5a:	f840 1b04 	str.w	r1, [r0], #4
 8009e5e:	2100      	movs	r1, #0
 8009e60:	f008 fa52 	bl	8012308 <memset>
 8009e64:	4620      	mov	r0, r4
 8009e66:	bd10      	pop	{r4, pc}

08009e68 <RemoteConfigParams::Load()>:
 8009e68:	b508      	push	{r3, lr}
 8009e6a:	2300      	movs	r3, #0
 8009e6c:	4601      	mov	r1, r0
 8009e6e:	6043      	str	r3, [r0, #4]
 8009e70:	6800      	ldr	r0, [r0, #0]
 8009e72:	b120      	cbz	r0, 8009e7e <RemoteConfigParams::Load()+0x16>
 8009e74:	6803      	ldr	r3, [r0, #0]
 8009e76:	3104      	adds	r1, #4
 8009e78:	68db      	ldr	r3, [r3, #12]
 8009e7a:	4798      	blx	r3
 8009e7c:	2001      	movs	r0, #1
 8009e7e:	bd08      	pop	{r3, pc}

08009e80 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009e80:	2300      	movs	r3, #0
 8009e82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e84:	460d      	mov	r5, r1
 8009e86:	4616      	mov	r6, r2
 8009e88:	4604      	mov	r4, r0
 8009e8a:	6043      	str	r3, [r0, #4]
 8009e8c:	4602      	mov	r2, r0
 8009e8e:	490a      	ldr	r1, [pc, #40]	; (8009eb8 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009e90:	4668      	mov	r0, sp
 8009e92:	f007 fbe1 	bl	8011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009e96:	4632      	mov	r2, r6
 8009e98:	4629      	mov	r1, r5
 8009e9a:	4668      	mov	r0, sp
 8009e9c:	f007 fbe0 	bl	8011660 <ReadConfigFile::Read(char const*, unsigned int)>
 8009ea0:	4621      	mov	r1, r4
 8009ea2:	f851 0b04 	ldr.w	r0, [r1], #4
 8009ea6:	6803      	ldr	r3, [r0, #0]
 8009ea8:	689b      	ldr	r3, [r3, #8]
 8009eaa:	4798      	blx	r3
 8009eac:	4668      	mov	r0, sp
 8009eae:	f007 fbd6 	bl	801165e <ReadConfigFile::~ReadConfigFile()>
 8009eb2:	b002      	add	sp, #8
 8009eb4:	bd70      	pop	{r4, r5, r6, pc}
 8009eb6:	bf00      	nop
 8009eb8:	08009f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}

08009ebc <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009ebc:	6843      	ldr	r3, [r0, #4]
 8009ebe:	b111      	cbz	r1, 8009ec6 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009ec0:	4313      	orrs	r3, r2
 8009ec2:	6043      	str	r3, [r0, #4]
 8009ec4:	4770      	bx	lr
 8009ec6:	ea23 0302 	bic.w	r3, r3, r2
 8009eca:	e7fa      	b.n	8009ec2 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009ecc <RemoteConfigParams::callbackFunction(char const*)>:
 8009ecc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ece:	460d      	mov	r5, r1
 8009ed0:	4604      	mov	r4, r0
 8009ed2:	4923      	ldr	r1, [pc, #140]	; (8009f60 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009ed4:	4628      	mov	r0, r5
 8009ed6:	f10d 0203 	add.w	r2, sp, #3
 8009eda:	f007 fcf9 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ede:	b940      	cbnz	r0, 8009ef2 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009ee0:	2201      	movs	r2, #1
 8009ee2:	4620      	mov	r0, r4
 8009ee4:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009ee8:	b003      	add	sp, #12
 8009eea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009eee:	f7ff bfe5 	b.w	8009ebc <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009ef2:	4628      	mov	r0, r5
 8009ef4:	491b      	ldr	r1, [pc, #108]	; (8009f64 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009ef6:	f10d 0203 	add.w	r2, sp, #3
 8009efa:	f007 fce9 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009efe:	b908      	cbnz	r0, 8009f04 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8009f00:	2202      	movs	r2, #2
 8009f02:	e7ee      	b.n	8009ee2 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f04:	4628      	mov	r0, r5
 8009f06:	4918      	ldr	r1, [pc, #96]	; (8009f68 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009f08:	f10d 0203 	add.w	r2, sp, #3
 8009f0c:	f007 fce0 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f10:	b908      	cbnz	r0, 8009f16 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8009f12:	2204      	movs	r2, #4
 8009f14:	e7e5      	b.n	8009ee2 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f16:	4628      	mov	r0, r5
 8009f18:	4914      	ldr	r1, [pc, #80]	; (8009f6c <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009f1a:	f10d 0203 	add.w	r2, sp, #3
 8009f1e:	f007 fcd7 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f22:	b908      	cbnz	r0, 8009f28 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8009f24:	2208      	movs	r2, #8
 8009f26:	e7dc      	b.n	8009ee2 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f28:	4628      	mov	r0, r5
 8009f2a:	4911      	ldr	r1, [pc, #68]	; (8009f70 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009f2c:	f10d 0203 	add.w	r2, sp, #3
 8009f30:	f007 fcce 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f34:	b908      	cbnz	r0, 8009f3a <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8009f36:	2220      	movs	r2, #32
 8009f38:	e7d3      	b.n	8009ee2 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f3a:	2317      	movs	r3, #23
 8009f3c:	4628      	mov	r0, r5
 8009f3e:	9301      	str	r3, [sp, #4]
 8009f40:	490c      	ldr	r1, [pc, #48]	; (8009f74 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009f42:	ab01      	add	r3, sp, #4
 8009f44:	f104 020c 	add.w	r2, r4, #12
 8009f48:	f007 fbbe 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009f4c:	b930      	cbnz	r0, 8009f5c <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8009f4e:	9b01      	ldr	r3, [sp, #4]
 8009f50:	4423      	add	r3, r4
 8009f52:	7318      	strb	r0, [r3, #12]
 8009f54:	6863      	ldr	r3, [r4, #4]
 8009f56:	f043 0310 	orr.w	r3, r3, #16
 8009f5a:	6063      	str	r3, [r4, #4]
 8009f5c:	b003      	add	sp, #12
 8009f5e:	bd30      	pop	{r4, r5, pc}
 8009f60:	08014d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, lr}
 8009f64:	08014d3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, fp, lr}
 8009f68:	08014d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, lr}
 8009f6c:	08014d56 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, fp, lr}
 8009f70:	08014d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, lr}
 8009f74:	08014d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp, lr}

08009f78 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009f78:	f7ff bfa8 	b.w	8009ecc <RemoteConfigParams::callbackFunction(char const*)>

08009f7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009f7c:	b570      	push	{r4, r5, r6, lr}
 8009f7e:	4604      	mov	r4, r0
 8009f80:	4615      	mov	r5, r2
 8009f82:	461e      	mov	r6, r3
 8009f84:	b086      	sub	sp, #24
 8009f86:	3004      	adds	r0, #4
 8009f88:	2900      	cmp	r1, #0
 8009f8a:	d041      	beq.n	800a010 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009f8c:	2220      	movs	r2, #32
 8009f8e:	f008 f9a4 	bl	80122da <memmove>
 8009f92:	4633      	mov	r3, r6
 8009f94:	462a      	mov	r2, r5
 8009f96:	4937      	ldr	r1, [pc, #220]	; (800a074 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009f98:	a803      	add	r0, sp, #12
 8009f9a:	f007 fabd 	bl	8011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009f9e:	6862      	ldr	r2, [r4, #4]
 8009fa0:	4935      	ldr	r1, [pc, #212]	; (800a078 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009fa2:	f002 0201 	and.w	r2, r2, #1
 8009fa6:	a803      	add	r0, sp, #12
 8009fa8:	f7ff ff2c 	bl	8009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fac:	6862      	ldr	r2, [r4, #4]
 8009fae:	4933      	ldr	r1, [pc, #204]	; (800a07c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009fb0:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009fb4:	a803      	add	r0, sp, #12
 8009fb6:	f7ff ff25 	bl	8009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fba:	6862      	ldr	r2, [r4, #4]
 8009fbc:	4930      	ldr	r1, [pc, #192]	; (800a080 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8009fbe:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009fc2:	a803      	add	r0, sp, #12
 8009fc4:	f7ff ff1e 	bl	8009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fc8:	6862      	ldr	r2, [r4, #4]
 8009fca:	492e      	ldr	r1, [pc, #184]	; (800a084 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009fcc:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009fd0:	a803      	add	r0, sp, #12
 8009fd2:	f7ff ff17 	bl	8009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fd6:	6862      	ldr	r2, [r4, #4]
 8009fd8:	492b      	ldr	r1, [pc, #172]	; (800a088 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009fda:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009fde:	a803      	add	r0, sp, #12
 8009fe0:	f7ff ff10 	bl	8009e04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009fe4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009fe8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009fec:	6862      	ldr	r2, [r4, #4]
 8009fee:	42ab      	cmp	r3, r5
 8009ff0:	d223      	bcs.n	800a03a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 8009ff2:	9803      	ldr	r0, [sp, #12]
 8009ff4:	06d2      	lsls	r2, r2, #27
 8009ff6:	4418      	add	r0, r3
 8009ff8:	eba5 0503 	sub.w	r5, r5, r3
 8009ffc:	f104 040c 	add.w	r4, r4, #12
 800a000:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a004:	d40b      	bmi.n	800a01e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a006:	b95b      	cbnz	r3, 800a020 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a008:	4b20      	ldr	r3, [pc, #128]	; (800a08c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a00a:	4a21      	ldr	r2, [pc, #132]	; (800a090 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a00c:	9400      	str	r4, [sp, #0]
 800a00e:	e00a      	b.n	800a026 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a010:	6823      	ldr	r3, [r4, #0]
 800a012:	4601      	mov	r1, r0
 800a014:	681a      	ldr	r2, [r3, #0]
 800a016:	4618      	mov	r0, r3
 800a018:	68d2      	ldr	r2, [r2, #12]
 800a01a:	4790      	blx	r2
 800a01c:	e7b9      	b.n	8009f92 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a01e:	b32b      	cbz	r3, 800a06c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a020:	4b1a      	ldr	r3, [pc, #104]	; (800a08c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a022:	4a1c      	ldr	r2, [pc, #112]	; (800a094 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a024:	9400      	str	r4, [sp, #0]
 800a026:	4629      	mov	r1, r5
 800a028:	f7ff f952 	bl	80092d0 <snprintf>
 800a02c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a030:	4285      	cmp	r5, r0
 800a032:	bfa4      	itt	ge
 800a034:	181b      	addge	r3, r3, r0
 800a036:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a03a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a03e:	b17b      	cbz	r3, 800a060 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a040:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a044:	9b03      	ldr	r3, [sp, #12]
 800a046:	4413      	add	r3, r2
 800a048:	227d      	movs	r2, #125	; 0x7d
 800a04a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a04e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a052:	9903      	ldr	r1, [sp, #12]
 800a054:	54ca      	strb	r2, [r1, r3]
 800a056:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a05a:	3301      	adds	r3, #1
 800a05c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a060:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a064:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a066:	601a      	str	r2, [r3, #0]
 800a068:	b006      	add	sp, #24
 800a06a:	bd70      	pop	{r4, r5, r6, pc}
 800a06c:	4b07      	ldr	r3, [pc, #28]	; (800a08c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a06e:	4a0a      	ldr	r2, [pc, #40]	; (800a098 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a070:	9400      	str	r4, [sp, #0]
 800a072:	e7d8      	b.n	800a026 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a074:	08014d21 	stmdaeq	r1, {r0, r5, r8, sl, fp, lr}
 800a078:	08014d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, lr}
 800a07c:	08014d3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, fp, lr}
 800a080:	08014d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, lr}
 800a084:	08014d56 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, fp, lr}
 800a088:	08014d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, lr}
 800a08c:	08014d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp, lr}
 800a090:	08014948 	stmdaeq	r1, {r3, r6, r8, fp, lr}
 800a094:	0801493d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, lr}
 800a098:	08014949 	stmdaeq	r1, {r0, r3, r6, r8, fp, lr}

0800a09c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a09c:	b513      	push	{r0, r1, r4, lr}
 800a09e:	6804      	ldr	r4, [r0, #0]
 800a0a0:	b914      	cbnz	r4, 800a0a8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a0a2:	601c      	str	r4, [r3, #0]
 800a0a4:	b002      	add	sp, #8
 800a0a6:	bd10      	pop	{r4, pc}
 800a0a8:	9300      	str	r3, [sp, #0]
 800a0aa:	4613      	mov	r3, r2
 800a0ac:	460a      	mov	r2, r1
 800a0ae:	2100      	movs	r1, #0
 800a0b0:	f7ff ff64 	bl	8009f7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a0b4:	e7f6      	b.n	800a0a4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a0b6 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a0b6:	b538      	push	{r3, r4, r5, lr}
 800a0b8:	460c      	mov	r4, r1
 800a0ba:	4605      	mov	r5, r0
 800a0bc:	6841      	ldr	r1, [r0, #4]
 800a0be:	4620      	mov	r0, r4
 800a0c0:	f001 0101 	and.w	r1, r1, #1
 800a0c4:	f7ff fc42 	bl	800994c <RemoteConfig::SetDisable(bool)>
 800a0c8:	686b      	ldr	r3, [r5, #4]
 800a0ca:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a0ce:	7362      	strb	r2, [r4, #13]
 800a0d0:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a0d4:	73a2      	strb	r2, [r4, #14]
 800a0d6:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a0da:	73e2      	strb	r2, [r4, #15]
 800a0dc:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a0e0:	06db      	lsls	r3, r3, #27
 800a0e2:	7422      	strb	r2, [r4, #16]
 800a0e4:	d506      	bpl.n	800a0f4 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a0e6:	4620      	mov	r0, r4
 800a0e8:	f105 010c 	add.w	r1, r5, #12
 800a0ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a0f0:	f7ff bc4c 	b.w	800998c <RemoteConfig::SetDisplayName(char const*)>
 800a0f4:	bd38      	pop	{r3, r4, r5, pc}

0800a0f6 <RemoteConfigParams::Dump()>:
 800a0f6:	4770      	bx	lr

0800a0f8 <RemoteConfig::HandleReboot()>:
 800a0f8:	7b83      	ldrb	r3, [r0, #14]
 800a0fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a0fc:	2b00      	cmp	r3, #0
 800a0fe:	d03c      	beq.n	800a17a <RemoteConfig::HandleReboot()+0x82>
 800a100:	2301      	movs	r3, #1
 800a102:	4c1f      	ldr	r4, [pc, #124]	; (800a180 <RemoteConfig::HandleReboot()+0x88>)
 800a104:	7443      	strb	r3, [r0, #17]
 800a106:	6825      	ldr	r5, [r4, #0]
 800a108:	69a8      	ldr	r0, [r5, #24]
 800a10a:	b138      	cbz	r0, 800a11c <RemoteConfig::HandleReboot()+0x24>
 800a10c:	2100      	movs	r1, #0
 800a10e:	6803      	ldr	r3, [r0, #0]
 800a110:	7429      	strb	r1, [r5, #16]
 800a112:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a114:	4798      	blx	r3
 800a116:	4b1b      	ldr	r3, [pc, #108]	; (800a184 <RemoteConfig::HandleReboot()+0x8c>)
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	606b      	str	r3, [r5, #4]
 800a11c:	4d1a      	ldr	r5, [pc, #104]	; (800a188 <RemoteConfig::HandleReboot()+0x90>)
 800a11e:	6828      	ldr	r0, [r5, #0]
 800a120:	f006 fd20 	bl	8010b64 <ConfigStore::Flash()>
 800a124:	2800      	cmp	r0, #0
 800a126:	d1fa      	bne.n	800a11e <RemoteConfig::HandleReboot()+0x26>
 800a128:	4b18      	ldr	r3, [pc, #96]	; (800a18c <RemoteConfig::HandleReboot()+0x94>)
 800a12a:	6818      	ldr	r0, [r3, #0]
 800a12c:	f005 f866 	bl	800f1fc <Network::Shutdown()>
 800a130:	4817      	ldr	r0, [pc, #92]	; (800a190 <RemoteConfig::HandleReboot()+0x98>)
 800a132:	f7ff f8a5 	bl	8009280 <printf>
 800a136:	6823      	ldr	r3, [r4, #0]
 800a138:	6998      	ldr	r0, [r3, #24]
 800a13a:	b110      	cbz	r0, 800a142 <RemoteConfig::HandleReboot()+0x4a>
 800a13c:	6803      	ldr	r3, [r0, #0]
 800a13e:	68db      	ldr	r3, [r3, #12]
 800a140:	4798      	blx	r3
 800a142:	6824      	ldr	r4, [r4, #0]
 800a144:	4913      	ldr	r1, [pc, #76]	; (800a194 <RemoteConfig::HandleReboot()+0x9c>)
 800a146:	4620      	mov	r0, r4
 800a148:	f7fe fa9c 	bl	8008684 <Display::TextStatus(char const*)>
 800a14c:	7c63      	ldrb	r3, [r4, #17]
 800a14e:	b183      	cbz	r3, 800a172 <RemoteConfig::HandleReboot()+0x7a>
 800a150:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a154:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a158:	23bf      	movs	r3, #191	; 0xbf
 800a15a:	7a20      	ldrb	r0, [r4, #8]
 800a15c:	f88d 3006 	strb.w	r3, [sp, #6]
 800a160:	f009 fb3a 	bl	80137d8 <gd32_i2c_set_address>
 800a164:	68e0      	ldr	r0, [r4, #12]
 800a166:	f009 fb2f 	bl	80137c8 <gd32_i2c_set_baudrate>
 800a16a:	2103      	movs	r1, #3
 800a16c:	a801      	add	r0, sp, #4
 800a16e:	f009 fb39 	bl	80137e4 <gd32_i2c_write>
 800a172:	4b09      	ldr	r3, [pc, #36]	; (800a198 <RemoteConfig::HandleReboot()+0xa0>)
 800a174:	6818      	ldr	r0, [r3, #0]
 800a176:	f007 ffd9 	bl	801212c <Hardware::Reboot()>
 800a17a:	b003      	add	sp, #12
 800a17c:	bd30      	pop	{r4, r5, pc}
 800a17e:	bf00      	nop
 800a180:	2000ada0 	andcs	sl, r0, r0, lsr #27
 800a184:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800a188:	2000ad64 	andcs	sl, r0, r4, ror #26
 800a18c:	2000977c 	andcs	r9, r0, ip, ror r7
 800a190:	08014950 	stmdaeq	r1, {r4, r6, r8, fp, lr}
 800a194:	0801495f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, fp, lr}
 800a198:	2000ae90 	mulcs	r0, r0, lr

0800a19c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a19c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a1a0:	2000      	movs	r0, #0
 800a1a2:	4d12      	ldr	r5, [pc, #72]	; (800a1ec <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a1a4:	f10d 0c04 	add.w	ip, sp, #4
 800a1a8:	6814      	ldr	r4, [r2, #0]
 800a1aa:	7d2b      	ldrb	r3, [r5, #20]
 800a1ac:	692e      	ldr	r6, [r5, #16]
 800a1ae:	42a3      	cmp	r3, r4
 800a1b0:	bf34      	ite	cc
 800a1b2:	4664      	movcc	r4, ip
 800a1b4:	4614      	movcs	r4, r2
 800a1b6:	9301      	str	r3, [sp, #4]
 800a1b8:	6827      	ldr	r7, [r4, #0]
 800a1ba:	460c      	mov	r4, r1
 800a1bc:	3e01      	subs	r6, #1
 800a1be:	440f      	add	r7, r1
 800a1c0:	42bc      	cmp	r4, r7
 800a1c2:	d101      	bne.n	800a1c8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a1c4:	6013      	str	r3, [r2, #0]
 800a1c6:	e00c      	b.n	800a1e2 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a1c8:	f894 8000 	ldrb.w	r8, [r4]
 800a1cc:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a1d0:	45f0      	cmp	r8, lr
 800a1d2:	d009      	beq.n	800a1e8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a1d4:	3001      	adds	r0, #1
 800a1d6:	2805      	cmp	r0, #5
 800a1d8:	f105 051c 	add.w	r5, r5, #28
 800a1dc:	d1e4      	bne.n	800a1a8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a1de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a1e2:	b002      	add	sp, #8
 800a1e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1e8:	3401      	adds	r4, #1
 800a1ea:	e7e9      	b.n	800a1c0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a1ec:	080149a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, lr}

0800a1f0 <RemoteConfig::PlatformHandleTftpSet()>:
 800a1f0:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a1f4:	b109      	cbz	r1, 800a1fa <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a1f6:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a1fa:	2002      	movs	r0, #2
 800a1fc:	f008 ba76 	b.w	80126ec <bkp_data_write>

0800a200 <RemoteConfig::PlatformHandleTftpGet()>:
 800a200:	b510      	push	{r4, lr}
 800a202:	4604      	mov	r4, r0
 800a204:	2002      	movs	r0, #2
 800a206:	f008 fa87 	bl	8012718 <bkp_data_read>
 800a20a:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a20e:	1ac3      	subs	r3, r0, r3
 800a210:	4258      	negs	r0, r3
 800a212:	4158      	adcs	r0, r3
 800a214:	f884 0020 	strb.w	r0, [r4, #32]
 800a218:	bd10      	pop	{r4, pc}

0800a21a <strcmp>:
 800a21a:	1e43      	subs	r3, r0, #1
 800a21c:	3901      	subs	r1, #1
 800a21e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a222:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a226:	4290      	cmp	r0, r2
 800a228:	d001      	beq.n	800a22e <strcmp+0x14>
 800a22a:	1a80      	subs	r0, r0, r2
 800a22c:	e001      	b.n	800a232 <strcmp+0x18>
 800a22e:	2800      	cmp	r0, #0
 800a230:	d1f5      	bne.n	800a21e <strcmp+0x4>
 800a232:	4770      	bx	lr

0800a234 <strcasecmp>:
 800a234:	b530      	push	{r4, r5, lr}
 800a236:	1e42      	subs	r2, r0, #1
 800a238:	3901      	subs	r1, #1
 800a23a:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a23e:	4604      	mov	r4, r0
 800a240:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a244:	2b19      	cmp	r3, #25
 800a246:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a24a:	bf98      	it	ls
 800a24c:	f100 0420 	addls.w	r4, r0, #32
 800a250:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a254:	2d19      	cmp	r5, #25
 800a256:	bf98      	it	ls
 800a258:	3320      	addls	r3, #32
 800a25a:	42a3      	cmp	r3, r4
 800a25c:	d001      	beq.n	800a262 <strcasecmp+0x2e>
 800a25e:	1ae0      	subs	r0, r4, r3
 800a260:	e001      	b.n	800a266 <strcasecmp+0x32>
 800a262:	2800      	cmp	r0, #0
 800a264:	d1e9      	bne.n	800a23a <strcasecmp+0x6>
 800a266:	bd30      	pop	{r4, r5, pc}

0800a268 <PropertiesConfig::EnableJSON(bool)>:
 800a268:	4a04      	ldr	r2, [pc, #16]	; (800a27c <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a26a:	7813      	ldrb	r3, [r2, #0]
 800a26c:	b118      	cbz	r0, 800a276 <PropertiesConfig::EnableJSON(bool)+0xe>
 800a26e:	f043 0301 	orr.w	r3, r3, #1
 800a272:	7013      	strb	r3, [r2, #0]
 800a274:	4770      	bx	lr
 800a276:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a27a:	e7fa      	b.n	800a272 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a27c:	2000ad9c 	mulcs	r0, ip, sp

0800a280 <HttpDaemon::HttpDaemon()>:
 800a280:	4a08      	ldr	r2, [pc, #32]	; (800a2a4 <HttpDaemon::HttpDaemon()+0x24>)
 800a282:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a286:	6002      	str	r2, [r0, #0]
 800a288:	2200      	movs	r2, #0
 800a28a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a28e:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a292:	2102      	movs	r1, #2
 800a294:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a298:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a29c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a2a0:	60c2      	str	r2, [r0, #12]
 800a2a2:	4770      	bx	lr
 800a2a4:	08014c99 	stmdaeq	r1, {r0, r3, r4, r7, sl, fp, lr}

0800a2a8 <HttpDaemon::Start()>:
 800a2a8:	4b04      	ldr	r3, [pc, #16]	; (800a2bc <HttpDaemon::Start()+0x14>)
 800a2aa:	b510      	push	{r4, lr}
 800a2ac:	2150      	movs	r1, #80	; 0x50
 800a2ae:	4604      	mov	r4, r0
 800a2b0:	6818      	ldr	r0, [r3, #0]
 800a2b2:	f005 f987 	bl	800f5c4 <Network::TcpBegin(unsigned short)>
 800a2b6:	6120      	str	r0, [r4, #16]
 800a2b8:	bd10      	pop	{r4, pc}
 800a2ba:	bf00      	nop
 800a2bc:	2000977c 	andcs	r9, r0, ip, ror r7

0800a2c0 <HttpDaemon::ParseMethod(char*)>:
 800a2c0:	b538      	push	{r3, r4, r5, lr}
 800a2c2:	4604      	mov	r4, r0
 800a2c4:	4608      	mov	r0, r1
 800a2c6:	491a      	ldr	r1, [pc, #104]	; (800a330 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a2c8:	f008 f848 	bl	801235c <strtok>
 800a2cc:	4605      	mov	r5, r0
 800a2ce:	b360      	cbz	r0, 800a32a <HttpDaemon::ParseMethod(char*)+0x6a>
 800a2d0:	4918      	ldr	r1, [pc, #96]	; (800a334 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a2d2:	f7ff ffa2 	bl	800a21a <strcmp>
 800a2d6:	b128      	cbz	r0, 800a2e4 <HttpDaemon::ParseMethod(char*)+0x24>
 800a2d8:	4628      	mov	r0, r5
 800a2da:	4917      	ldr	r1, [pc, #92]	; (800a338 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a2dc:	f7ff ff9d 	bl	800a21a <strcmp>
 800a2e0:	bb18      	cbnz	r0, 800a32a <HttpDaemon::ParseMethod(char*)+0x6a>
 800a2e2:	2001      	movs	r0, #1
 800a2e4:	61e0      	str	r0, [r4, #28]
 800a2e6:	4912      	ldr	r1, [pc, #72]	; (800a330 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a2e8:	2000      	movs	r0, #0
 800a2ea:	f008 f837 	bl	801235c <strtok>
 800a2ee:	b910      	cbnz	r0, 800a2f6 <HttpDaemon::ParseMethod(char*)+0x36>
 800a2f0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a2f4:	bd38      	pop	{r3, r4, r5, pc}
 800a2f6:	6060      	str	r0, [r4, #4]
 800a2f8:	4910      	ldr	r1, [pc, #64]	; (800a33c <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a2fa:	2000      	movs	r0, #0
 800a2fc:	f008 f82e 	bl	801235c <strtok>
 800a300:	2800      	cmp	r0, #0
 800a302:	d0f5      	beq.n	800a2f0 <HttpDaemon::ParseMethod(char*)+0x30>
 800a304:	490e      	ldr	r1, [pc, #56]	; (800a340 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a306:	f7ff ff88 	bl	800a21a <strcmp>
 800a30a:	2800      	cmp	r0, #0
 800a30c:	d1f0      	bne.n	800a2f0 <HttpDaemon::ParseMethod(char*)+0x30>
 800a30e:	490d      	ldr	r1, [pc, #52]	; (800a344 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a310:	f008 f824 	bl	801235c <strtok>
 800a314:	2800      	cmp	r0, #0
 800a316:	d0eb      	beq.n	800a2f0 <HttpDaemon::ParseMethod(char*)+0x30>
 800a318:	490b      	ldr	r1, [pc, #44]	; (800a348 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a31a:	f7ff ff7e 	bl	800a21a <strcmp>
 800a31e:	2800      	cmp	r0, #0
 800a320:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a324:	bf08      	it	eq
 800a326:	20c8      	moveq	r0, #200	; 0xc8
 800a328:	e7e4      	b.n	800a2f4 <HttpDaemon::ParseMethod(char*)+0x34>
 800a32a:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a32e:	e7e1      	b.n	800a2f4 <HttpDaemon::ParseMethod(char*)+0x34>
 800a330:	080146bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, sl, lr}
 800a334:	08014a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, lr}
 800a338:	08014a38 	stmdaeq	r1, {r3, r4, r5, r9, fp, lr}
 800a33c:	08014aa2 	stmdaeq	r1, {r1, r5, r7, r9, fp, lr}
 800a340:	08014a3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, fp, lr}
 800a344:	08014a42 	stmdaeq	r1, {r1, r6, r9, fp, lr}
 800a348:	08014a45 	stmdaeq	r1, {r0, r2, r6, r9, fp, lr}

0800a34c <HttpDaemon::ParseHeaderField(char*)>:
 800a34c:	b538      	push	{r3, r4, r5, lr}
 800a34e:	4605      	mov	r5, r0
 800a350:	4608      	mov	r0, r1
 800a352:	491d      	ldr	r1, [pc, #116]	; (800a3c8 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a354:	f008 f802 	bl	801235c <strtok>
 800a358:	4604      	mov	r4, r0
 800a35a:	b910      	cbnz	r0, 800a362 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a35c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a360:	bd38      	pop	{r3, r4, r5, pc}
 800a362:	491a      	ldr	r1, [pc, #104]	; (800a3cc <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a364:	f7ff ff66 	bl	800a234 <strcasecmp>
 800a368:	b970      	cbnz	r0, 800a388 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a36a:	4919      	ldr	r1, [pc, #100]	; (800a3d0 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a36c:	f007 fff6 	bl	801235c <strtok>
 800a370:	2800      	cmp	r0, #0
 800a372:	d0f3      	beq.n	800a35c <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a374:	4917      	ldr	r1, [pc, #92]	; (800a3d4 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a376:	f7ff ff50 	bl	800a21a <strcmp>
 800a37a:	b108      	cbz	r0, 800a380 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a37c:	20c8      	movs	r0, #200	; 0xc8
 800a37e:	e7ef      	b.n	800a360 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a380:	2301      	movs	r3, #1
 800a382:	f885 3020 	strb.w	r3, [r5, #32]
 800a386:	e7f9      	b.n	800a37c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a388:	4620      	mov	r0, r4
 800a38a:	4913      	ldr	r1, [pc, #76]	; (800a3d8 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a38c:	f7ff ff52 	bl	800a234 <strcasecmp>
 800a390:	4604      	mov	r4, r0
 800a392:	2800      	cmp	r0, #0
 800a394:	d1f2      	bne.n	800a37c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a396:	4911      	ldr	r1, [pc, #68]	; (800a3dc <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a398:	f007 ffe0 	bl	801235c <strtok>
 800a39c:	2800      	cmp	r0, #0
 800a39e:	d0dd      	beq.n	800a35c <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3a0:	1e42      	subs	r2, r0, #1
 800a3a2:	4623      	mov	r3, r4
 800a3a4:	200a      	movs	r0, #10
 800a3a6:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a3aa:	b909      	cbnz	r1, 800a3b0 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a3ac:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a3ae:	e7e5      	b.n	800a37c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3b0:	3930      	subs	r1, #48	; 0x30
 800a3b2:	2909      	cmp	r1, #9
 800a3b4:	d8d2      	bhi.n	800a35c <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3b6:	fb00 1303 	mla	r3, r0, r3, r1
 800a3ba:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a3be:	d9f2      	bls.n	800a3a6 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a3c0:	f240 109d 	movw	r0, #413	; 0x19d
 800a3c4:	e7cc      	b.n	800a360 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a3c6:	bf00      	nop
 800a3c8:	08014a49 	stmdaeq	r1, {r0, r3, r6, r9, fp, lr}
 800a3cc:	08014a4b 	stmdaeq	r1, {r0, r1, r3, r6, r9, fp, lr}
 800a3d0:	08014a58 	stmdaeq	r1, {r3, r4, r6, r9, fp, lr}
 800a3d4:	08014a5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, fp, lr}
 800a3d8:	08014a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, lr}
 800a3dc:	080146bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, sl, lr}

0800a3e0 <HttpDaemon::ParseRequest()>:
 800a3e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3e2:	2400      	movs	r4, #0
 800a3e4:	4605      	mov	r5, r0
 800a3e6:	4622      	mov	r2, r4
 800a3e8:	4626      	mov	r6, r4
 800a3ea:	68c1      	ldr	r1, [r0, #12]
 800a3ec:	f880 4020 	strb.w	r4, [r0, #32]
 800a3f0:	6244      	str	r4, [r0, #36]	; 0x24
 800a3f2:	8aab      	ldrh	r3, [r5, #20]
 800a3f4:	42a3      	cmp	r3, r4
 800a3f6:	d91d      	bls.n	800a434 <HttpDaemon::ParseRequest()+0x54>
 800a3f8:	68eb      	ldr	r3, [r5, #12]
 800a3fa:	5d18      	ldrb	r0, [r3, r4]
 800a3fc:	280a      	cmp	r0, #10
 800a3fe:	d10e      	bne.n	800a41e <HttpDaemon::ParseRequest()+0x3e>
 800a400:	4423      	add	r3, r4
 800a402:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a406:	1c57      	adds	r7, r2, #1
 800a408:	b962      	cbnz	r2, 800a424 <HttpDaemon::ParseRequest()+0x44>
 800a40a:	4628      	mov	r0, r5
 800a40c:	f7ff ff58 	bl	800a2c0 <HttpDaemon::ParseMethod(char*)>
 800a410:	28c8      	cmp	r0, #200	; 0xc8
 800a412:	d110      	bne.n	800a436 <HttpDaemon::ParseRequest()+0x56>
 800a414:	463a      	mov	r2, r7
 800a416:	68e9      	ldr	r1, [r5, #12]
 800a418:	3401      	adds	r4, #1
 800a41a:	b2a4      	uxth	r4, r4
 800a41c:	4421      	add	r1, r4
 800a41e:	3401      	adds	r4, #1
 800a420:	b2a4      	uxth	r4, r4
 800a422:	e7e6      	b.n	800a3f2 <HttpDaemon::ParseRequest()+0x12>
 800a424:	7808      	ldrb	r0, [r1, #0]
 800a426:	b968      	cbnz	r0, 800a444 <HttpDaemon::ParseRequest()+0x64>
 800a428:	696b      	ldr	r3, [r5, #20]
 800a42a:	3b01      	subs	r3, #1
 800a42c:	1b1b      	subs	r3, r3, r4
 800a42e:	b29b      	uxth	r3, r3
 800a430:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a432:	b90b      	cbnz	r3, 800a438 <HttpDaemon::ParseRequest()+0x58>
 800a434:	20c8      	movs	r0, #200	; 0xc8
 800a436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a438:	68ea      	ldr	r2, [r5, #12]
 800a43a:	3401      	adds	r4, #1
 800a43c:	4414      	add	r4, r2
 800a43e:	60ac      	str	r4, [r5, #8]
 800a440:	54e0      	strb	r0, [r4, r3]
 800a442:	e7f7      	b.n	800a434 <HttpDaemon::ParseRequest()+0x54>
 800a444:	4628      	mov	r0, r5
 800a446:	f7ff ff81 	bl	800a34c <HttpDaemon::ParseHeaderField(char*)>
 800a44a:	e7e1      	b.n	800a410 <HttpDaemon::ParseRequest()+0x30>

0800a44c <HttpDaemon::HandleGetTxt()>:
 800a44c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a450:	6846      	ldr	r6, [r0, #4]
 800a452:	4607      	mov	r7, r0
 800a454:	1db4      	adds	r4, r6, #6
 800a456:	4622      	mov	r2, r4
 800a458:	4613      	mov	r3, r2
 800a45a:	7819      	ldrb	r1, [r3, #0]
 800a45c:	3201      	adds	r2, #1
 800a45e:	2900      	cmp	r1, #0
 800a460:	d1fa      	bne.n	800a458 <HttpDaemon::HandleGetTxt()+0xc>
 800a462:	1b1b      	subs	r3, r3, r4
 800a464:	2b04      	cmp	r3, #4
 800a466:	d803      	bhi.n	800a470 <HttpDaemon::HandleGetTxt()+0x24>
 800a468:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a470:	3b04      	subs	r3, #4
 800a472:	4914      	ldr	r1, [pc, #80]	; (800a4c4 <HttpDaemon::HandleGetTxt()+0x78>)
 800a474:	18e0      	adds	r0, r4, r3
 800a476:	f7ff fed0 	bl	800a21a <strcmp>
 800a47a:	2800      	cmp	r0, #0
 800a47c:	d1f4      	bne.n	800a468 <HttpDaemon::HandleGetTxt()+0x1c>
 800a47e:	4b12      	ldr	r3, [pc, #72]	; (800a4c8 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a480:	2001      	movs	r0, #1
 800a482:	f893 8000 	ldrb.w	r8, [r3]
 800a486:	f7ff feef 	bl	800a268 <PropertiesConfig::EnableJSON(bool)>
 800a48a:	4b10      	ldr	r3, [pc, #64]	; (800a4cc <HttpDaemon::HandleGetTxt()+0x80>)
 800a48c:	f240 529b 	movw	r2, #1435	; 0x59b
 800a490:	4621      	mov	r1, r4
 800a492:	6818      	ldr	r0, [r3, #0]
 800a494:	f7ff fa92 	bl	80099bc <RemoteConfig::HandleGet(void*, unsigned int)>
 800a498:	4605      	mov	r5, r0
 800a49a:	f008 0801 	and.w	r8, r8, #1
 800a49e:	4640      	mov	r0, r8
 800a4a0:	f7ff fee2 	bl	800a268 <PropertiesConfig::EnableJSON(bool)>
 800a4a4:	2d00      	cmp	r5, #0
 800a4a6:	d0df      	beq.n	800a468 <HttpDaemon::HandleGetTxt()+0x1c>
 800a4a8:	847d      	strh	r5, [r7, #34]	; 0x22
 800a4aa:	4b09      	ldr	r3, [pc, #36]	; (800a4d0 <HttpDaemon::HandleGetTxt()+0x84>)
 800a4ac:	3506      	adds	r5, #6
 800a4ae:	442e      	add	r6, r5
 800a4b0:	42b4      	cmp	r4, r6
 800a4b2:	d101      	bne.n	800a4b8 <HttpDaemon::HandleGetTxt()+0x6c>
 800a4b4:	20c8      	movs	r0, #200	; 0xc8
 800a4b6:	e7d9      	b.n	800a46c <HttpDaemon::HandleGetTxt()+0x20>
 800a4b8:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a4bc:	f803 2b01 	strb.w	r2, [r3], #1
 800a4c0:	e7f6      	b.n	800a4b0 <HttpDaemon::HandleGetTxt()+0x64>
 800a4c2:	bf00      	nop
 800a4c4:	08014995 	stmdaeq	r1, {r0, r2, r4, r7, r8, fp, lr}
 800a4c8:	2000ad9c 	mulcs	r0, ip, sp
 800a4cc:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a4d0:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800a4d4 <HttpDaemon::HandleGet()>:
 800a4d4:	b570      	push	{r4, r5, r6, lr}
 800a4d6:	6845      	ldr	r5, [r0, #4]
 800a4d8:	4604      	mov	r4, r0
 800a4da:	493e      	ldr	r1, [pc, #248]	; (800a5d4 <HttpDaemon::HandleGet()+0x100>)
 800a4dc:	4628      	mov	r0, r5
 800a4de:	f7ff fe9c 	bl	800a21a <strcmp>
 800a4e2:	b120      	cbz	r0, 800a4ee <HttpDaemon::HandleGet()+0x1a>
 800a4e4:	4628      	mov	r0, r5
 800a4e6:	493c      	ldr	r1, [pc, #240]	; (800a5d8 <HttpDaemon::HandleGet()+0x104>)
 800a4e8:	f7ff fe97 	bl	800a21a <strcmp>
 800a4ec:	b950      	cbnz	r0, 800a504 <HttpDaemon::HandleGet()+0x30>
 800a4ee:	4b3b      	ldr	r3, [pc, #236]	; (800a5dc <HttpDaemon::HandleGet()+0x108>)
 800a4f0:	493b      	ldr	r1, [pc, #236]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a4f2:	483c      	ldr	r0, [pc, #240]	; (800a5e4 <HttpDaemon::HandleGet()+0x110>)
 800a4f4:	6023      	str	r3, [r4, #0]
 800a4f6:	f000 fa67 	bl	800a9c8 <get_file_content(char const*, char*)>
 800a4fa:	2800      	cmp	r0, #0
 800a4fc:	dd2f      	ble.n	800a55e <HttpDaemon::HandleGet()+0x8a>
 800a4fe:	8460      	strh	r0, [r4, #34]	; 0x22
 800a500:	20c8      	movs	r0, #200	; 0xc8
 800a502:	bd70      	pop	{r4, r5, r6, pc}
 800a504:	4628      	mov	r0, r5
 800a506:	4938      	ldr	r1, [pc, #224]	; (800a5e8 <HttpDaemon::HandleGet()+0x114>)
 800a508:	f7ff fe87 	bl	800a21a <strcmp>
 800a50c:	b920      	cbnz	r0, 800a518 <HttpDaemon::HandleGet()+0x44>
 800a50e:	4b37      	ldr	r3, [pc, #220]	; (800a5ec <HttpDaemon::HandleGet()+0x118>)
 800a510:	4933      	ldr	r1, [pc, #204]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a512:	4837      	ldr	r0, [pc, #220]	; (800a5f0 <HttpDaemon::HandleGet()+0x11c>)
 800a514:	6023      	str	r3, [r4, #0]
 800a516:	e7ee      	b.n	800a4f6 <HttpDaemon::HandleGet()+0x22>
 800a518:	4628      	mov	r0, r5
 800a51a:	4936      	ldr	r1, [pc, #216]	; (800a5f4 <HttpDaemon::HandleGet()+0x120>)
 800a51c:	f7ff fe7d 	bl	800a21a <strcmp>
 800a520:	b190      	cbz	r0, 800a548 <HttpDaemon::HandleGet()+0x74>
 800a522:	4a35      	ldr	r2, [pc, #212]	; (800a5f8 <HttpDaemon::HandleGet()+0x124>)
 800a524:	1e6b      	subs	r3, r5, #1
 800a526:	1d69      	adds	r1, r5, #5
 800a528:	428b      	cmp	r3, r1
 800a52a:	d112      	bne.n	800a552 <HttpDaemon::HandleGet()+0x7e>
 800a52c:	4b33      	ldr	r3, [pc, #204]	; (800a5fc <HttpDaemon::HandleGet()+0x128>)
 800a52e:	3506      	adds	r5, #6
 800a530:	4628      	mov	r0, r5
 800a532:	4933      	ldr	r1, [pc, #204]	; (800a600 <HttpDaemon::HandleGet()+0x12c>)
 800a534:	6023      	str	r3, [r4, #0]
 800a536:	f7ff fe70 	bl	800a21a <strcmp>
 800a53a:	b998      	cbnz	r0, 800a564 <HttpDaemon::HandleGet()+0x90>
 800a53c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a540:	4827      	ldr	r0, [pc, #156]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a542:	f000 f9c9 	bl	800a8d8 <remoteconfig::json_get_list(char*, unsigned short)>
 800a546:	e7d8      	b.n	800a4fa <HttpDaemon::HandleGet()+0x26>
 800a548:	4b2e      	ldr	r3, [pc, #184]	; (800a604 <HttpDaemon::HandleGet()+0x130>)
 800a54a:	4925      	ldr	r1, [pc, #148]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a54c:	482e      	ldr	r0, [pc, #184]	; (800a608 <HttpDaemon::HandleGet()+0x134>)
 800a54e:	6023      	str	r3, [r4, #0]
 800a550:	e7d1      	b.n	800a4f6 <HttpDaemon::HandleGet()+0x22>
 800a552:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a556:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a55a:	4286      	cmp	r6, r0
 800a55c:	d0e4      	beq.n	800a528 <HttpDaemon::HandleGet()+0x54>
 800a55e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a562:	e7ce      	b.n	800a502 <HttpDaemon::HandleGet()+0x2e>
 800a564:	4628      	mov	r0, r5
 800a566:	4929      	ldr	r1, [pc, #164]	; (800a60c <HttpDaemon::HandleGet()+0x138>)
 800a568:	f7ff fe57 	bl	800a21a <strcmp>
 800a56c:	b928      	cbnz	r0, 800a57a <HttpDaemon::HandleGet()+0xa6>
 800a56e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a572:	481b      	ldr	r0, [pc, #108]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a574:	f000 f9e4 	bl	800a940 <remoteconfig::json_get_version(char*, unsigned short)>
 800a578:	e7bf      	b.n	800a4fa <HttpDaemon::HandleGet()+0x26>
 800a57a:	4628      	mov	r0, r5
 800a57c:	4924      	ldr	r1, [pc, #144]	; (800a610 <HttpDaemon::HandleGet()+0x13c>)
 800a57e:	f7ff fe4c 	bl	800a21a <strcmp>
 800a582:	b948      	cbnz	r0, 800a598 <HttpDaemon::HandleGet()+0xc4>
 800a584:	4b23      	ldr	r3, [pc, #140]	; (800a614 <HttpDaemon::HandleGet()+0x140>)
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	7bdb      	ldrb	r3, [r3, #15]
 800a58a:	b303      	cbz	r3, 800a5ce <HttpDaemon::HandleGet()+0xfa>
 800a58c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a590:	4813      	ldr	r0, [pc, #76]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a592:	f000 f9f1 	bl	800a978 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a596:	e7b0      	b.n	800a4fa <HttpDaemon::HandleGet()+0x26>
 800a598:	4628      	mov	r0, r5
 800a59a:	491f      	ldr	r1, [pc, #124]	; (800a618 <HttpDaemon::HandleGet()+0x144>)
 800a59c:	f7ff fe3d 	bl	800a21a <strcmp>
 800a5a0:	b928      	cbnz	r0, 800a5ae <HttpDaemon::HandleGet()+0xda>
 800a5a2:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5a6:	480e      	ldr	r0, [pc, #56]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a5a8:	f000 f9f6 	bl	800a998 <remoteconfig::json_get_display(char*, unsigned short)>
 800a5ac:	e7a5      	b.n	800a4fa <HttpDaemon::HandleGet()+0x26>
 800a5ae:	4628      	mov	r0, r5
 800a5b0:	491a      	ldr	r1, [pc, #104]	; (800a61c <HttpDaemon::HandleGet()+0x148>)
 800a5b2:	f7ff fe32 	bl	800a21a <strcmp>
 800a5b6:	b928      	cbnz	r0, 800a5c4 <HttpDaemon::HandleGet()+0xf0>
 800a5b8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5bc:	4808      	ldr	r0, [pc, #32]	; (800a5e0 <HttpDaemon::HandleGet()+0x10c>)
 800a5be:	f000 f9fb 	bl	800a9b8 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a5c2:	e79a      	b.n	800a4fa <HttpDaemon::HandleGet()+0x26>
 800a5c4:	4620      	mov	r0, r4
 800a5c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5ca:	f7ff bf3f 	b.w	800a44c <HttpDaemon::HandleGetTxt()>
 800a5ce:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a5d2:	e796      	b.n	800a502 <HttpDaemon::HandleGet()+0x2e>
 800a5d4:	08014aa2 	stmdaeq	r1, {r1, r5, r7, r9, fp, lr}
 800a5d8:	08014a7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, fp, lr}
 800a5dc:	08014c99 	stmdaeq	r1, {r0, r3, r4, r7, sl, fp, lr}
 800a5e0:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a5e4:	08014a7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, fp, lr}
 800a5e8:	08014a87 	stmdaeq	r1, {r0, r1, r2, r7, r9, fp, lr}
 800a5ec:	08014cb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, fp, lr}
 800a5f0:	08014a88 	stmdaeq	r1, {r3, r7, r9, fp, lr}
 800a5f4:	08014a93 	stmdaeq	r1, {r0, r1, r4, r7, r9, fp, lr}
 800a5f8:	08014a9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, fp, lr}
 800a5fc:	08014cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, lr}
 800a600:	08014aa4 	stmdaeq	r1, {r2, r5, r7, r9, fp, lr}
 800a604:	08014cd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, fp, lr}
 800a608:	08014a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, lr}
 800a60c:	08014aa9 	stmdaeq	r1, {r0, r3, r5, r7, r9, fp, lr}
 800a610:	08014ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, lr}
 800a614:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a618:	08014ab8 	stmdaeq	r1, {r3, r4, r5, r7, r9, fp, lr}
 800a61c:	08014ac0 	stmdaeq	r1, {r6, r7, r9, fp, lr}

0800a620 <HttpDaemon::HandlePost(bool)>:
 800a620:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a622:	4604      	mov	r4, r0
 800a624:	2900      	cmp	r1, #0
 800a626:	f040 808a 	bne.w	800a73e <HttpDaemon::HandlePost(bool)+0x11e>
 800a62a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a62e:	2b00      	cmp	r3, #0
 800a630:	d05a      	beq.n	800a6e8 <HttpDaemon::HandlePost(bool)+0xc8>
 800a632:	6845      	ldr	r5, [r0, #4]
 800a634:	4944      	ldr	r1, [pc, #272]	; (800a748 <HttpDaemon::HandlePost(bool)+0x128>)
 800a636:	4628      	mov	r0, r5
 800a638:	f7ff fdef 	bl	800a21a <strcmp>
 800a63c:	2800      	cmp	r0, #0
 800a63e:	bf0c      	ite	eq
 800a640:	2301      	moveq	r3, #1
 800a642:	2300      	movne	r3, #0
 800a644:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a648:	d052      	beq.n	800a6f0 <HttpDaemon::HandlePost(bool)+0xd0>
 800a64a:	4628      	mov	r0, r5
 800a64c:	493f      	ldr	r1, [pc, #252]	; (800a74c <HttpDaemon::HandlePost(bool)+0x12c>)
 800a64e:	f7ff fde4 	bl	800a21a <strcmp>
 800a652:	2800      	cmp	r0, #0
 800a654:	d04c      	beq.n	800a6f0 <HttpDaemon::HandlePost(bool)+0xd0>
 800a656:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a65a:	e047      	b.n	800a6ec <HttpDaemon::HandlePost(bool)+0xcc>
 800a65c:	493c      	ldr	r1, [pc, #240]	; (800a750 <HttpDaemon::HandlePost(bool)+0x130>)
 800a65e:	68a0      	ldr	r0, [r4, #8]
 800a660:	f10d 0207 	add.w	r2, sp, #7
 800a664:	f007 f934 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a668:	b9d8      	cbnz	r0, 800a6a2 <HttpDaemon::HandlePost(bool)+0x82>
 800a66a:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a66e:	4b39      	ldr	r3, [pc, #228]	; (800a754 <HttpDaemon::HandlePost(bool)+0x134>)
 800a670:	fab6 f186 	clz	r1, r6
 800a674:	681d      	ldr	r5, [r3, #0]
 800a676:	0949      	lsrs	r1, r1, #5
 800a678:	69a8      	ldr	r0, [r5, #24]
 800a67a:	b138      	cbz	r0, 800a68c <HttpDaemon::HandlePost(bool)+0x6c>
 800a67c:	6803      	ldr	r3, [r0, #0]
 800a67e:	7429      	strb	r1, [r5, #16]
 800a680:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a682:	4798      	blx	r3
 800a684:	b116      	cbz	r6, 800a68c <HttpDaemon::HandlePost(bool)+0x6c>
 800a686:	4b34      	ldr	r3, [pc, #208]	; (800a758 <HttpDaemon::HandlePost(bool)+0x138>)
 800a688:	681b      	ldr	r3, [r3, #0]
 800a68a:	606b      	str	r3, [r5, #4]
 800a68c:	4b33      	ldr	r3, [pc, #204]	; (800a75c <HttpDaemon::HandlePost(bool)+0x13c>)
 800a68e:	f240 519f 	movw	r1, #1439	; 0x59f
 800a692:	4a33      	ldr	r2, [pc, #204]	; (800a760 <HttpDaemon::HandlePost(bool)+0x140>)
 800a694:	4833      	ldr	r0, [pc, #204]	; (800a764 <HttpDaemon::HandlePost(bool)+0x144>)
 800a696:	6023      	str	r3, [r4, #0]
 800a698:	f7fe fe1a 	bl	80092d0 <snprintf>
 800a69c:	8460      	strh	r0, [r4, #34]	; 0x22
 800a69e:	20c8      	movs	r0, #200	; 0xc8
 800a6a0:	e024      	b.n	800a6ec <HttpDaemon::HandlePost(bool)+0xcc>
 800a6a2:	4931      	ldr	r1, [pc, #196]	; (800a768 <HttpDaemon::HandlePost(bool)+0x148>)
 800a6a4:	68a0      	ldr	r0, [r4, #8]
 800a6a6:	f10d 0207 	add.w	r2, sp, #7
 800a6aa:	f007 f911 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6ae:	b9d8      	cbnz	r0, 800a6e8 <HttpDaemon::HandlePost(bool)+0xc8>
 800a6b0:	4b2e      	ldr	r3, [pc, #184]	; (800a76c <HttpDaemon::HandlePost(bool)+0x14c>)
 800a6b2:	6818      	ldr	r0, [r3, #0]
 800a6b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a6b8:	b11b      	cbz	r3, 800a6c2 <HttpDaemon::HandlePost(bool)+0xa2>
 800a6ba:	2104      	movs	r1, #4
 800a6bc:	f007 fc96 	bl	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800a6c0:	e7e4      	b.n	800a68c <HttpDaemon::HandlePost(bool)+0x6c>
 800a6c2:	2102      	movs	r1, #2
 800a6c4:	e7fa      	b.n	800a6bc <HttpDaemon::HandlePost(bool)+0x9c>
 800a6c6:	4b2a      	ldr	r3, [pc, #168]	; (800a770 <HttpDaemon::HandlePost(bool)+0x150>)
 800a6c8:	2001      	movs	r0, #1
 800a6ca:	781d      	ldrb	r5, [r3, #0]
 800a6cc:	f7ff fdcc 	bl	800a268 <PropertiesConfig::EnableJSON(bool)>
 800a6d0:	4b28      	ldr	r3, [pc, #160]	; (800a774 <HttpDaemon::HandlePost(bool)+0x154>)
 800a6d2:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a6d4:	6818      	ldr	r0, [r3, #0]
 800a6d6:	68a1      	ldr	r1, [r4, #8]
 800a6d8:	f005 0501 	and.w	r5, r5, #1
 800a6dc:	f7ff fa3c 	bl	8009b58 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a6e0:	4628      	mov	r0, r5
 800a6e2:	f7ff fdc1 	bl	800a268 <PropertiesConfig::EnableJSON(bool)>
 800a6e6:	e7d1      	b.n	800a68c <HttpDaemon::HandlePost(bool)+0x6c>
 800a6e8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a6ec:	b002      	add	sp, #8
 800a6ee:	bd70      	pop	{r4, r5, r6, pc}
 800a6f0:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a6f2:	6962      	ldr	r2, [r4, #20]
 800a6f4:	429a      	cmp	r2, r3
 800a6f6:	dbd2      	blt.n	800a69e <HttpDaemon::HandlePost(bool)+0x7e>
 800a6f8:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	d0cf      	beq.n	800a69e <HttpDaemon::HandlePost(bool)+0x7e>
 800a6fe:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a702:	2b00      	cmp	r3, #0
 800a704:	d0df      	beq.n	800a6c6 <HttpDaemon::HandlePost(bool)+0xa6>
 800a706:	2201      	movs	r2, #1
 800a708:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a70a:	68a0      	ldr	r0, [r4, #8]
 800a70c:	f006 fe52 	bl	80113b4 <properties::convert_json_file(char*, unsigned short, bool)>
 800a710:	2800      	cmp	r0, #0
 800a712:	dde9      	ble.n	800a6e8 <HttpDaemon::HandlePost(bool)+0xc8>
 800a714:	4918      	ldr	r1, [pc, #96]	; (800a778 <HttpDaemon::HandlePost(bool)+0x158>)
 800a716:	68a0      	ldr	r0, [r4, #8]
 800a718:	f10d 0207 	add.w	r2, sp, #7
 800a71c:	f007 f8d8 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a720:	2800      	cmp	r0, #0
 800a722:	d19b      	bne.n	800a65c <HttpDaemon::HandlePost(bool)+0x3c>
 800a724:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a728:	2b00      	cmp	r3, #0
 800a72a:	d0af      	beq.n	800a68c <HttpDaemon::HandlePost(bool)+0x6c>
 800a72c:	4b11      	ldr	r3, [pc, #68]	; (800a774 <HttpDaemon::HandlePost(bool)+0x154>)
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	7b9b      	ldrb	r3, [r3, #14]
 800a732:	2b00      	cmp	r3, #0
 800a734:	d0d8      	beq.n	800a6e8 <HttpDaemon::HandlePost(bool)+0xc8>
 800a736:	4b11      	ldr	r3, [pc, #68]	; (800a77c <HttpDaemon::HandlePost(bool)+0x15c>)
 800a738:	6818      	ldr	r0, [r3, #0]
 800a73a:	f007 fcf7 	bl	801212c <Hardware::Reboot()>
 800a73e:	68c3      	ldr	r3, [r0, #12]
 800a740:	6083      	str	r3, [r0, #8]
 800a742:	6943      	ldr	r3, [r0, #20]
 800a744:	8483      	strh	r3, [r0, #36]	; 0x24
 800a746:	e7da      	b.n	800a6fe <HttpDaemon::HandlePost(bool)+0xde>
 800a748:	08014aca 	stmdaeq	r1, {r1, r3, r6, r7, r9, fp, lr}
 800a74c:	08014a66 	stmdaeq	r1, {r1, r2, r5, r6, r9, fp, lr}
 800a750:	08014ab8 	stmdaeq	r1, {r3, r4, r5, r7, r9, fp, lr}
 800a754:	2000ada0 	andcs	sl, r0, r0, lsr #27
 800a758:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800a75c:	08014c99 	stmdaeq	r1, {r0, r3, r4, r7, sl, fp, lr}
 800a760:	08014ae7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, fp, lr}
 800a764:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a768:	08014ade 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, fp, lr}
 800a76c:	2000ae8c 	andcs	sl, r0, ip, lsl #29
 800a770:	2000ad9c 	mulcs	r0, ip, sp
 800a774:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a778:	08014ad7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, fp, lr}
 800a77c:	2000ae90 	mulcs	r0, r0, lr

0800a780 <HttpDaemon::Run()>:
 800a780:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a782:	4e46      	ldr	r6, [pc, #280]	; (800a89c <HttpDaemon::Run()+0x11c>)
 800a784:	4604      	mov	r4, r0
 800a786:	6901      	ldr	r1, [r0, #16]
 800a788:	f100 020c 	add.w	r2, r0, #12
 800a78c:	6830      	ldr	r0, [r6, #0]
 800a78e:	f004 ff1c 	bl	800f5ca <Network::TcpRead(int, unsigned char const**)>
 800a792:	6160      	str	r0, [r4, #20]
 800a794:	2800      	cmp	r0, #0
 800a796:	d05b      	beq.n	800a850 <HttpDaemon::Run()+0xd0>
 800a798:	69a3      	ldr	r3, [r4, #24]
 800a79a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a79e:	d159      	bne.n	800a854 <HttpDaemon::Run()+0xd4>
 800a7a0:	4620      	mov	r0, r4
 800a7a2:	f7ff fe1d 	bl	800a3e0 <HttpDaemon::ParseRequest()>
 800a7a6:	28c8      	cmp	r0, #200	; 0xc8
 800a7a8:	61a0      	str	r0, [r4, #24]
 800a7aa:	d106      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a7ac:	69e3      	ldr	r3, [r4, #28]
 800a7ae:	2b00      	cmp	r3, #0
 800a7b0:	d142      	bne.n	800a838 <HttpDaemon::Run()+0xb8>
 800a7b2:	4620      	mov	r0, r4
 800a7b4:	f7ff fe8e 	bl	800a4d4 <HttpDaemon::HandleGet()>
 800a7b8:	61a0      	str	r0, [r4, #24]
 800a7ba:	69a3      	ldr	r3, [r4, #24]
 800a7bc:	2bc8      	cmp	r3, #200	; 0xc8
 800a7be:	d06b      	beq.n	800a898 <HttpDaemon::Run()+0x118>
 800a7c0:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a7c4:	d05e      	beq.n	800a884 <HttpDaemon::Run()+0x104>
 800a7c6:	dc4e      	bgt.n	800a866 <HttpDaemon::Run()+0xe6>
 800a7c8:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a7cc:	d05c      	beq.n	800a888 <HttpDaemon::Run()+0x108>
 800a7ce:	f240 129d 	movw	r2, #413	; 0x19d
 800a7d2:	4293      	cmp	r3, r2
 800a7d4:	d05a      	beq.n	800a88c <HttpDaemon::Run()+0x10c>
 800a7d6:	4d32      	ldr	r5, [pc, #200]	; (800a8a0 <HttpDaemon::Run()+0x120>)
 800a7d8:	4a32      	ldr	r2, [pc, #200]	; (800a8a4 <HttpDaemon::Run()+0x124>)
 800a7da:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a7de:	bf18      	it	ne
 800a7e0:	4615      	movne	r5, r2
 800a7e2:	4a31      	ldr	r2, [pc, #196]	; (800a8a8 <HttpDaemon::Run()+0x128>)
 800a7e4:	f240 519f 	movw	r1, #1439	; 0x59f
 800a7e8:	6022      	str	r2, [r4, #0]
 800a7ea:	e9cd 5500 	strd	r5, r5, [sp]
 800a7ee:	4a2f      	ldr	r2, [pc, #188]	; (800a8ac <HttpDaemon::Run()+0x12c>)
 800a7f0:	482f      	ldr	r0, [pc, #188]	; (800a8b0 <HttpDaemon::Run()+0x130>)
 800a7f2:	f7fe fd6d 	bl	80092d0 <snprintf>
 800a7f6:	8460      	strh	r0, [r4, #34]	; 0x22
 800a7f8:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a7fa:	f240 519f 	movw	r1, #1439	; 0x59f
 800a7fe:	9303      	str	r3, [sp, #12]
 800a800:	6823      	ldr	r3, [r4, #0]
 800a802:	4a2c      	ldr	r2, [pc, #176]	; (800a8b4 <HttpDaemon::Run()+0x134>)
 800a804:	9302      	str	r3, [sp, #8]
 800a806:	4b2c      	ldr	r3, [pc, #176]	; (800a8b8 <HttpDaemon::Run()+0x138>)
 800a808:	68e0      	ldr	r0, [r4, #12]
 800a80a:	e9cd 5300 	strd	r5, r3, [sp]
 800a80e:	69a3      	ldr	r3, [r4, #24]
 800a810:	f7fe fd5e 	bl	80092d0 <snprintf>
 800a814:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a818:	b283      	uxth	r3, r0
 800a81a:	6830      	ldr	r0, [r6, #0]
 800a81c:	f004 fed9 	bl	800f5d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a820:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a822:	4a23      	ldr	r2, [pc, #140]	; (800a8b0 <HttpDaemon::Run()+0x130>)
 800a824:	6921      	ldr	r1, [r4, #16]
 800a826:	6830      	ldr	r0, [r6, #0]
 800a828:	f004 fed3 	bl	800f5d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a82c:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a830:	2302      	movs	r3, #2
 800a832:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a836:	e00b      	b.n	800a850 <HttpDaemon::Run()+0xd0>
 800a838:	2b01      	cmp	r3, #1
 800a83a:	d1be      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a83c:	2100      	movs	r1, #0
 800a83e:	4620      	mov	r0, r4
 800a840:	f7ff feee 	bl	800a620 <HttpDaemon::HandlePost(bool)>
 800a844:	28c8      	cmp	r0, #200	; 0xc8
 800a846:	61a0      	str	r0, [r4, #24]
 800a848:	d1b7      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a84a:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a84c:	2b00      	cmp	r3, #0
 800a84e:	d1b4      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a850:	b004      	add	sp, #16
 800a852:	bd70      	pop	{r4, r5, r6, pc}
 800a854:	2bc8      	cmp	r3, #200	; 0xc8
 800a856:	d1b0      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a858:	69e1      	ldr	r1, [r4, #28]
 800a85a:	2901      	cmp	r1, #1
 800a85c:	d1ad      	bne.n	800a7ba <HttpDaemon::Run()+0x3a>
 800a85e:	4620      	mov	r0, r4
 800a860:	f7ff fede 	bl	800a620 <HttpDaemon::HandlePost(bool)>
 800a864:	e7a8      	b.n	800a7b8 <HttpDaemon::Run()+0x38>
 800a866:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a86a:	4293      	cmp	r3, r2
 800a86c:	d010      	beq.n	800a890 <HttpDaemon::Run()+0x110>
 800a86e:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a872:	4293      	cmp	r3, r2
 800a874:	d00e      	beq.n	800a894 <HttpDaemon::Run()+0x114>
 800a876:	4d11      	ldr	r5, [pc, #68]	; (800a8bc <HttpDaemon::Run()+0x13c>)
 800a878:	4a0a      	ldr	r2, [pc, #40]	; (800a8a4 <HttpDaemon::Run()+0x124>)
 800a87a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a87e:	bf18      	it	ne
 800a880:	4615      	movne	r5, r2
 800a882:	e7ae      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a884:	4d0e      	ldr	r5, [pc, #56]	; (800a8c0 <HttpDaemon::Run()+0x140>)
 800a886:	e7ac      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a888:	4d0e      	ldr	r5, [pc, #56]	; (800a8c4 <HttpDaemon::Run()+0x144>)
 800a88a:	e7aa      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a88c:	4d0e      	ldr	r5, [pc, #56]	; (800a8c8 <HttpDaemon::Run()+0x148>)
 800a88e:	e7a8      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a890:	4d0e      	ldr	r5, [pc, #56]	; (800a8cc <HttpDaemon::Run()+0x14c>)
 800a892:	e7a6      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a894:	4d0e      	ldr	r5, [pc, #56]	; (800a8d0 <HttpDaemon::Run()+0x150>)
 800a896:	e7a4      	b.n	800a7e2 <HttpDaemon::Run()+0x62>
 800a898:	4d0e      	ldr	r5, [pc, #56]	; (800a8d4 <HttpDaemon::Run()+0x154>)
 800a89a:	e7ad      	b.n	800a7f8 <HttpDaemon::Run()+0x78>
 800a89c:	2000977c 	andcs	r9, r0, ip, ror r7
 800a8a0:	08014b43 	stmdaeq	r1, {r0, r1, r6, r8, r9, fp, lr}
 800a8a4:	08014bca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, fp, lr}
 800a8a8:	08014c99 	stmdaeq	r1, {r0, r3, r4, r7, sl, fp, lr}
 800a8ac:	08014bdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, fp, lr}
 800a8b0:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a8b4:	08014c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, lr}
 800a8b8:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 800a8bc:	08014b87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, fp, lr}
 800a8c0:	08014b72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, fp, lr}
 800a8c4:	08014b4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, fp, lr}
 800a8c8:	08014b59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, fp, lr}
 800a8cc:	08014b9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, fp, lr}
 800a8d0:	08014bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, lr}
 800a8d4:	08014bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, lr}

0800a8d8 <remoteconfig::json_get_list(char*, unsigned short)>:
 800a8d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8dc:	4b14      	ldr	r3, [pc, #80]	; (800a930 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a8de:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a934 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	b088      	sub	sp, #32
 800a8e6:	4605      	mov	r5, r0
 800a8e8:	f8d8 0000 	ldr.w	r0, [r8]
 800a8ec:	695c      	ldr	r4, [r3, #20]
 800a8ee:	460e      	mov	r6, r1
 800a8f0:	f7ff f814 	bl	800991c <RemoteConfig::GetStringNode() const>
 800a8f4:	4607      	mov	r7, r0
 800a8f6:	f8d8 0000 	ldr.w	r0, [r8]
 800a8fa:	f7ff f81b 	bl	8009934 <RemoteConfig::GetStringOutput() const>
 800a8fe:	4b0e      	ldr	r3, [pc, #56]	; (800a938 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a900:	4631      	mov	r1, r6
 800a902:	7a1a      	ldrb	r2, [r3, #8]
 800a904:	3309      	adds	r3, #9
 800a906:	9303      	str	r3, [sp, #12]
 800a908:	0e23      	lsrs	r3, r4, #24
 800a90a:	9302      	str	r3, [sp, #8]
 800a90c:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a910:	9301      	str	r3, [sp, #4]
 800a912:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a916:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a91a:	9300      	str	r3, [sp, #0]
 800a91c:	4628      	mov	r0, r5
 800a91e:	4a07      	ldr	r2, [pc, #28]	; (800a93c <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a920:	9704      	str	r7, [sp, #16]
 800a922:	b2e3      	uxtb	r3, r4
 800a924:	f7fe fcd4 	bl	80092d0 <snprintf>
 800a928:	b280      	uxth	r0, r0
 800a92a:	b008      	add	sp, #32
 800a92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a930:	2000977c 	andcs	r9, r0, ip, ror r7
 800a934:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a938:	20000088 	andcs	r0, r0, r8, lsl #1
 800a93c:	08014d73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, lr}

0800a940 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a940:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a942:	2208      	movs	r2, #8
 800a944:	4b09      	ldr	r3, [pc, #36]	; (800a96c <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a946:	9204      	str	r2, [sp, #16]
 800a948:	f1a3 020b 	sub.w	r2, r3, #11
 800a94c:	9203      	str	r2, [sp, #12]
 800a94e:	220b      	movs	r2, #11
 800a950:	9202      	str	r2, [sp, #8]
 800a952:	4a07      	ldr	r2, [pc, #28]	; (800a970 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a954:	9305      	str	r3, [sp, #20]
 800a956:	3b0e      	subs	r3, #14
 800a958:	9201      	str	r2, [sp, #4]
 800a95a:	9300      	str	r3, [sp, #0]
 800a95c:	4a05      	ldr	r2, [pc, #20]	; (800a974 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a95e:	2303      	movs	r3, #3
 800a960:	f7fe fcb6 	bl	80092d0 <snprintf>
 800a964:	b280      	uxth	r0, r0
 800a966:	b007      	add	sp, #28
 800a968:	f85d fb04 	ldr.w	pc, [sp], #4
 800a96c:	2000ae3e 	andcs	sl, r0, lr, lsr lr
 800a970:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 800a974:	08014dd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sl, fp, lr}

0800a978 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a978:	b508      	push	{r3, lr}
 800a97a:	4b05      	ldr	r3, [pc, #20]	; (800a990 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a97c:	681a      	ldr	r2, [r3, #0]
 800a97e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a982:	fbb2 f3f3 	udiv	r3, r2, r3
 800a986:	4a03      	ldr	r2, [pc, #12]	; (800a994 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a988:	f7fe fca2 	bl	80092d0 <snprintf>
 800a98c:	b280      	uxth	r0, r0
 800a98e:	bd08      	pop	{r3, pc}
 800a990:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800a994:	08014e18 	stmdaeq	r1, {r3, r4, r9, sl, fp, lr}

0800a998 <remoteconfig::json_get_display(char*, unsigned short)>:
 800a998:	b508      	push	{r3, lr}
 800a99a:	4b05      	ldr	r3, [pc, #20]	; (800a9b0 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a99c:	4a05      	ldr	r2, [pc, #20]	; (800a9b4 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a99e:	681b      	ldr	r3, [r3, #0]
 800a9a0:	7c1b      	ldrb	r3, [r3, #16]
 800a9a2:	f083 0301 	eor.w	r3, r3, #1
 800a9a6:	f7fe fc93 	bl	80092d0 <snprintf>
 800a9aa:	b280      	uxth	r0, r0
 800a9ac:	bd08      	pop	{r3, pc}
 800a9ae:	bf00      	nop
 800a9b0:	2000ada0 	andcs	sl, r0, r0, lsr #27
 800a9b4:	08014e27 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, fp, lr}

0800a9b8 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a9b8:	b508      	push	{r3, lr}
 800a9ba:	4a02      	ldr	r2, [pc, #8]	; (800a9c4 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a9bc:	f7fe fc88 	bl	80092d0 <snprintf>
 800a9c0:	b280      	uxth	r0, r0
 800a9c2:	bd08      	pop	{r3, pc}
 800a9c4:	08014e36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp, lr}

0800a9c8 <get_file_content(char const*, char*)>:
 800a9c8:	2300      	movs	r3, #0
 800a9ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9cc:	4a10      	ldr	r2, [pc, #64]	; (800aa10 <get_file_content(char const*, char*)+0x48>)
 800a9ce:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a9d2:	1e46      	subs	r6, r0, #1
 800a9d4:	3c01      	subs	r4, #1
 800a9d6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800a9da:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a9de:	42bd      	cmp	r5, r7
 800a9e0:	d005      	beq.n	800a9ee <get_file_content(char const*, char*)+0x26>
 800a9e2:	3301      	adds	r3, #1
 800a9e4:	2b03      	cmp	r3, #3
 800a9e6:	d1f2      	bne.n	800a9ce <get_file_content(char const*, char*)+0x6>
 800a9e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a9ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9ee:	2d00      	cmp	r5, #0
 800a9f0:	d1f1      	bne.n	800a9d6 <get_file_content(char const*, char*)+0xe>
 800a9f2:	4608      	mov	r0, r1
 800a9f4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800a9f8:	6853      	ldr	r3, [r2, #4]
 800a9fa:	3b01      	subs	r3, #1
 800a9fc:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800aa00:	f800 2b01 	strb.w	r2, [r0], #1
 800aa04:	2a00      	cmp	r2, #0
 800aa06:	d1f9      	bne.n	800a9fc <get_file_content(char const*, char*)+0x34>
 800aa08:	1a40      	subs	r0, r0, r1
 800aa0a:	3801      	subs	r0, #1
 800aa0c:	e7ee      	b.n	800a9ec <get_file_content(char const*, char*)+0x24>
 800aa0e:	bf00      	nop
 800aa10:	08015178 	stmdaeq	r1, {r3, r4, r5, r6, r8, ip, lr}

0800aa14 <e131::universe_to_multicast_ip(unsigned short)>:
 800aa14:	b513      	push	{r0, r1, r4, lr}
 800aa16:	4604      	mov	r4, r0
 800aa18:	a901      	add	r1, sp, #4
 800aa1a:	4806      	ldr	r0, [pc, #24]	; (800aa34 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800aa1c:	f007 fbca 	bl	80121b4 <inet_aton>
 800aa20:	9801      	ldr	r0, [sp, #4]
 800aa22:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800aa26:	0224      	lsls	r4, r4, #8
 800aa28:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800aa2c:	4320      	orrs	r0, r4
 800aa2e:	b002      	add	sp, #8
 800aa30:	bd10      	pop	{r4, pc}
 800aa32:	bf00      	nop
 800aa34:	080156ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, sl, ip, lr}

0800aa38 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800aa38:	f240 6304 	movw	r3, #1540	; 0x604
 800aa3c:	fb03 0001 	mla	r0, r3, r1, r0
 800aa40:	2300      	movs	r3, #0
 800aa42:	b510      	push	{r4, lr}
 800aa44:	4293      	cmp	r3, r2
 800aa46:	d100      	bne.n	800aa4a <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800aa48:	bd10      	pop	{r4, pc}
 800aa4a:	f810 4b01 	ldrb.w	r4, [r0], #1
 800aa4e:	3301      	adds	r3, #1
 800aa50:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800aa54:	42a1      	cmp	r1, r4
 800aa56:	bf38      	it	cc
 800aa58:	4621      	movcc	r1, r4
 800aa5a:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800aa5e:	e7f1      	b.n	800aa44 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800aa60 <memset.constprop.0.isra.0>:
 800aa60:	2300      	movs	r3, #0
 800aa62:	4401      	add	r1, r0
 800aa64:	4288      	cmp	r0, r1
 800aa66:	d100      	bne.n	800aa6a <memset.constprop.0.isra.0+0xa>
 800aa68:	4770      	bx	lr
 800aa6a:	f800 3b01 	strb.w	r3, [r0], #1
 800aa6e:	e7f9      	b.n	800aa64 <memset.constprop.0.isra.0+0x4>

0800aa70 <memcpy.isra.0>:
 800aa70:	3801      	subs	r0, #1
 800aa72:	440a      	add	r2, r1
 800aa74:	4291      	cmp	r1, r2
 800aa76:	d100      	bne.n	800aa7a <memcpy.isra.0+0xa>
 800aa78:	4770      	bx	lr
 800aa7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800aa7e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800aa82:	e7f7      	b.n	800aa74 <memcpy.isra.0+0x4>

0800aa84 <lightset::Data::Get()>:
 800aa84:	4b03      	ldr	r3, [pc, #12]	; (800aa94 <lightset::Data::Get()+0x10>)
 800aa86:	4804      	ldr	r0, [pc, #16]	; (800aa98 <lightset::Data::Get()+0x14>)
 800aa88:	681a      	ldr	r2, [r3, #0]
 800aa8a:	07d2      	lsls	r2, r2, #31
 800aa8c:	bf5c      	itt	pl
 800aa8e:	2201      	movpl	r2, #1
 800aa90:	601a      	strpl	r2, [r3, #0]
 800aa92:	4770      	bx	lr
 800aa94:	20000650 	andcs	r0, r0, r0, asr r6
 800aa98:	20000654 	andcs	r0, r0, r4, asr r6

0800aa9c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800aa9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aaa0:	4615      	mov	r5, r2
 800aaa2:	460f      	mov	r7, r1
 800aaa4:	4604      	mov	r4, r0
 800aaa6:	f7ff ffed 	bl	800aa84 <lightset::Data::Get()>
 800aaaa:	f240 6304 	movw	r3, #1540	; 0x604
 800aaae:	4606      	mov	r6, r0
 800aab0:	435c      	muls	r4, r3
 800aab2:	eb00 0804 	add.w	r8, r0, r4
 800aab6:	462a      	mov	r2, r5
 800aab8:	4639      	mov	r1, r7
 800aaba:	4640      	mov	r0, r8
 800aabc:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800aac0:	f7ff ffd6 	bl	800aa70 <memcpy.isra.0>
 800aac4:	462a      	mov	r2, r5
 800aac6:	4639      	mov	r1, r7
 800aac8:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800aacc:	1930      	adds	r0, r6, r4
 800aace:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800aad2:	f7ff bfcd 	b.w	800aa70 <memcpy.isra.0>

0800aad6 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800aad6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aada:	4680      	mov	r8, r0
 800aadc:	f240 6404 	movw	r4, #1540	; 0x604
 800aae0:	4615      	mov	r5, r2
 800aae2:	460f      	mov	r7, r1
 800aae4:	4699      	mov	r9, r3
 800aae6:	f7ff ffcd 	bl	800aa84 <lightset::Data::Get()>
 800aaea:	fb04 f408 	mul.w	r4, r4, r8
 800aaee:	eb00 0a04 	add.w	sl, r0, r4
 800aaf2:	4606      	mov	r6, r0
 800aaf4:	462a      	mov	r2, r5
 800aaf6:	4639      	mov	r1, r7
 800aaf8:	4650      	mov	r0, sl
 800aafa:	f7ff ffb9 	bl	800aa70 <memcpy.isra.0>
 800aafe:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800ab02:	f1b9 0f00 	cmp.w	r9, #0
 800ab06:	d106      	bne.n	800ab16 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800ab08:	462a      	mov	r2, r5
 800ab0a:	4641      	mov	r1, r8
 800ab0c:	4630      	mov	r0, r6
 800ab0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab12:	f7ff bf91 	b.w	800aa38 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800ab16:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ab1a:	462a      	mov	r2, r5
 800ab1c:	4639      	mov	r1, r7
 800ab1e:	1930      	adds	r0, r6, r4
 800ab20:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab24:	f7ff bfa4 	b.w	800aa70 <memcpy.isra.0>

0800ab28 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800ab28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab2c:	4616      	mov	r6, r2
 800ab2e:	4699      	mov	r9, r3
 800ab30:	4680      	mov	r8, r0
 800ab32:	460f      	mov	r7, r1
 800ab34:	f7ff ffa6 	bl	800aa84 <lightset::Data::Get()>
 800ab38:	f240 6404 	movw	r4, #1540	; 0x604
 800ab3c:	4605      	mov	r5, r0
 800ab3e:	fb04 f408 	mul.w	r4, r4, r8
 800ab42:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800ab46:	4632      	mov	r2, r6
 800ab48:	4639      	mov	r1, r7
 800ab4a:	4428      	add	r0, r5
 800ab4c:	f7ff ff90 	bl	800aa70 <memcpy.isra.0>
 800ab50:	192b      	adds	r3, r5, r4
 800ab52:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800ab56:	f1b9 0f00 	cmp.w	r9, #0
 800ab5a:	d106      	bne.n	800ab6a <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800ab5c:	4632      	mov	r2, r6
 800ab5e:	4641      	mov	r1, r8
 800ab60:	4628      	mov	r0, r5
 800ab62:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab66:	f7ff bf67 	b.w	800aa38 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800ab6a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ab6e:	4632      	mov	r2, r6
 800ab70:	4639      	mov	r1, r7
 800ab72:	1928      	adds	r0, r5, r4
 800ab74:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ab78:	f7ff bf7a 	b.w	800aa70 <memcpy.isra.0>

0800ab7c <E131Bridge::E131Bridge()>:
 800ab7c:	2300      	movs	r3, #0
 800ab7e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ab82:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab84:	e9c0 2300 	strd	r2, r3, [r0]
 800ab88:	2201      	movs	r2, #1
 800ab8a:	4604      	mov	r4, r0
 800ab8c:	2764      	movs	r7, #100	; 0x64
 800ab8e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ab92:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ab96:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ab9a:	6743      	str	r3, [r0, #116]	; 0x74
 800ab9c:	4b26      	ldr	r3, [pc, #152]	; (800ac38 <E131Bridge::E131Bridge()+0xbc>)
 800ab9e:	7202      	strb	r2, [r0, #8]
 800aba0:	b093      	sub	sp, #76	; 0x4c
 800aba2:	6018      	str	r0, [r3, #0]
 800aba4:	f200 5514 	addw	r5, r0, #1300	; 0x514
 800aba8:	f200 6224 	addw	r2, r0, #1572	; 0x624
 800abac:	f200 6654 	addw	r6, r0, #1620	; 0x654
 800abb0:	4628      	mov	r0, r5
 800abb2:	2144      	movs	r1, #68	; 0x44
 800abb4:	f7ff ff54 	bl	800aa60 <memset.constprop.0.isra.0>
 800abb8:	4610      	mov	r0, r2
 800abba:	210c      	movs	r1, #12
 800abbc:	f7ff ff50 	bl	800aa60 <memset.constprop.0.isra.0>
 800abc0:	320c      	adds	r2, #12
 800abc2:	f802 7c03 	strb.w	r7, [r2, #-3]
 800abc6:	4296      	cmp	r6, r2
 800abc8:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800abcc:	d1f0      	bne.n	800abb0 <E131Bridge::E131Bridge()+0x34>
 800abce:	2120      	movs	r1, #32
 800abd0:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800abd4:	f7ff ff44 	bl	800aa60 <memset.constprop.0.isra.0>
 800abd8:	2301      	movs	r3, #1
 800abda:	4d18      	ldr	r5, [pc, #96]	; (800ac3c <E131Bridge::E131Bridge()+0xc0>)
 800abdc:	4a18      	ldr	r2, [pc, #96]	; (800ac40 <E131Bridge::E131Bridge()+0xc4>)
 800abde:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800abe2:	682b      	ldr	r3, [r5, #0]
 800abe4:	2140      	movs	r1, #64	; 0x40
 800abe6:	9200      	str	r2, [sp, #0]
 800abe8:	3320      	adds	r3, #32
 800abea:	4a16      	ldr	r2, [pc, #88]	; (800ac44 <E131Bridge::E131Bridge()+0xc8>)
 800abec:	a802      	add	r0, sp, #8
 800abee:	f7fe fb6f 	bl	80092d0 <snprintf>
 800abf2:	233f      	movs	r3, #63	; 0x3f
 800abf4:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800abf8:	a902      	add	r1, sp, #8
 800abfa:	f811 0b01 	ldrb.w	r0, [r1], #1
 800abfe:	b928      	cbnz	r0, 800ac0c <E131Bridge::E131Bridge()+0x90>
 800ac00:	4413      	add	r3, r2
 800ac02:	429a      	cmp	r2, r3
 800ac04:	d006      	beq.n	800ac14 <E131Bridge::E131Bridge()+0x98>
 800ac06:	f802 0b01 	strb.w	r0, [r2], #1
 800ac0a:	e7fa      	b.n	800ac02 <E131Bridge::E131Bridge()+0x86>
 800ac0c:	3b01      	subs	r3, #1
 800ac0e:	f802 0b01 	strb.w	r0, [r2], #1
 800ac12:	d1f2      	bne.n	800abfa <E131Bridge::E131Bridge()+0x7e>
 800ac14:	2300      	movs	r3, #0
 800ac16:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800ac1a:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800ac1e:	6828      	ldr	r0, [r5, #0]
 800ac20:	f004 faf3 	bl	800f20a <Network::Begin(unsigned short)>
 800ac24:	4621      	mov	r1, r4
 800ac26:	4b08      	ldr	r3, [pc, #32]	; (800ac48 <E131Bridge::E131Bridge()+0xcc>)
 800ac28:	f841 0b24 	str.w	r0, [r1], #36
 800ac2c:	6818      	ldr	r0, [r3, #0]
 800ac2e:	f007 fa61 	bl	80120f4 <Hardware::GetUuid(unsigned char*)>
 800ac32:	4620      	mov	r0, r4
 800ac34:	b013      	add	sp, #76	; 0x4c
 800ac36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac38:	20001e64 	andcs	r1, r0, r4, ror #28
 800ac3c:	2000977c 	andcs	r9, r0, ip, ror r7
 800ac40:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 800ac44:	080156c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, ip, lr}
 800ac48:	2000ae90 	mulcs	r0, r0, lr

0800ac4c <E131Bridge::Start()>:
 800ac4c:	6943      	ldr	r3, [r0, #20]
 800ac4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac50:	4604      	mov	r4, r0
 800ac52:	b35b      	cbz	r3, 800acac <E131Bridge::Start()+0x60>
 800ac54:	6983      	ldr	r3, [r0, #24]
 800ac56:	b9cb      	cbnz	r3, 800ac8c <E131Bridge::Start()+0x40>
 800ac58:	a901      	add	r1, sp, #4
 800ac5a:	4818      	ldr	r0, [pc, #96]	; (800acbc <E131Bridge::Start()+0x70>)
 800ac5c:	f007 faaa 	bl	80121b4 <inet_aton>
 800ac60:	9b01      	ldr	r3, [sp, #4]
 800ac62:	f240 207e 	movw	r0, #638	; 0x27e
 800ac66:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800ac6a:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800ac6e:	6223      	str	r3, [r4, #32]
 800ac70:	f007 fa9c 	bl	80121ac <operator new(unsigned int)>
 800ac74:	61a0      	str	r0, [r4, #24]
 800ac76:	4620      	mov	r0, r4
 800ac78:	f000 fd36 	bl	800b6e8 <E131Bridge::FillDataPacket()>
 800ac7c:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800ac80:	f007 fa94 	bl	80121ac <operator new(unsigned int)>
 800ac84:	61e0      	str	r0, [r4, #28]
 800ac86:	4620      	mov	r0, r4
 800ac88:	f000 fc86 	bl	800b598 <E131Bridge::FillDiscoveryPacket()>
 800ac8c:	2500      	movs	r5, #0
 800ac8e:	270c      	movs	r7, #12
 800ac90:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800ac94:	fb07 f305 	mul.w	r3, r7, r5
 800ac98:	5cf3      	ldrb	r3, [r6, r3]
 800ac9a:	b123      	cbz	r3, 800aca6 <E131Bridge::Start()+0x5a>
 800ac9c:	6960      	ldr	r0, [r4, #20]
 800ac9e:	4629      	mov	r1, r5
 800aca0:	6803      	ldr	r3, [r0, #0]
 800aca2:	689b      	ldr	r3, [r3, #8]
 800aca4:	4798      	blx	r3
 800aca6:	3501      	adds	r5, #1
 800aca8:	2d04      	cmp	r5, #4
 800acaa:	d1f3      	bne.n	800ac94 <E131Bridge::Start()+0x48>
 800acac:	2102      	movs	r1, #2
 800acae:	4b04      	ldr	r3, [pc, #16]	; (800acc0 <E131Bridge::Start()+0x74>)
 800acb0:	6818      	ldr	r0, [r3, #0]
 800acb2:	b003      	add	sp, #12
 800acb4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800acb8:	f007 b998 	b.w	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800acbc:	080156ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, sl, ip, lr}
 800acc0:	2000ae8c 	andcs	sl, r0, ip, lsl #29

0800acc4 <E131Bridge::Stop()>:
 800acc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acc8:	2500      	movs	r5, #0
 800acca:	2301      	movs	r3, #1
 800accc:	4604      	mov	r4, r0
 800acce:	f240 6804 	movw	r8, #1540	; 0x604
 800acd2:	462e      	mov	r6, r5
 800acd4:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800acd8:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800acdc:	6860      	ldr	r0, [r4, #4]
 800acde:	b118      	cbz	r0, 800ace8 <E131Bridge::Stop()+0x24>
 800ace0:	6803      	ldr	r3, [r0, #0]
 800ace2:	4629      	mov	r1, r5
 800ace4:	68db      	ldr	r3, [r3, #12]
 800ace6:	4798      	blx	r3
 800ace8:	f7ff fecc 	bl	800aa84 <lightset::Data::Get()>
 800acec:	2344      	movs	r3, #68	; 0x44
 800acee:	fb08 0005 	mla	r0, r8, r5, r0
 800acf2:	436b      	muls	r3, r5
 800acf4:	3501      	adds	r5, #1
 800acf6:	2d04      	cmp	r5, #4
 800acf8:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800acfc:	54fe      	strb	r6, [r7, r3]
 800acfe:	d1ed      	bne.n	800acdc <E131Bridge::Stop()+0x18>
 800ad00:	6963      	ldr	r3, [r4, #20]
 800ad02:	b17b      	cbz	r3, 800ad24 <E131Bridge::Stop()+0x60>
 800ad04:	2500      	movs	r5, #0
 800ad06:	270c      	movs	r7, #12
 800ad08:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800ad0c:	fb07 f305 	mul.w	r3, r7, r5
 800ad10:	5cf3      	ldrb	r3, [r6, r3]
 800ad12:	b123      	cbz	r3, 800ad1e <E131Bridge::Stop()+0x5a>
 800ad14:	6960      	ldr	r0, [r4, #20]
 800ad16:	4629      	mov	r1, r5
 800ad18:	6803      	ldr	r3, [r0, #0]
 800ad1a:	68db      	ldr	r3, [r3, #12]
 800ad1c:	4798      	blx	r3
 800ad1e:	3501      	adds	r5, #1
 800ad20:	2d04      	cmp	r5, #4
 800ad22:	d1f3      	bne.n	800ad0c <E131Bridge::Stop()+0x48>
 800ad24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ad28:	4b02      	ldr	r3, [pc, #8]	; (800ad34 <E131Bridge::Stop()+0x70>)
 800ad2a:	2100      	movs	r1, #0
 800ad2c:	6818      	ldr	r0, [r3, #0]
 800ad2e:	f007 b95d 	b.w	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800ad32:	bf00      	nop
 800ad34:	2000ae8c 	andcs	sl, r0, ip, lsl #29

0800ad38 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800ad38:	b570      	push	{r4, r5, r6, lr}
 800ad3a:	4604      	mov	r4, r0
 800ad3c:	2300      	movs	r3, #0
 800ad3e:	2544      	movs	r5, #68	; 0x44
 800ad40:	4610      	mov	r0, r2
 800ad42:	f204 5214 	addw	r2, r4, #1300	; 0x514
 800ad46:	4299      	cmp	r1, r3
 800ad48:	d004      	beq.n	800ad54 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800ad4a:	fb05 f603 	mul.w	r6, r5, r3
 800ad4e:	5b96      	ldrh	r6, [r2, r6]
 800ad50:	4286      	cmp	r6, r0
 800ad52:	d00e      	beq.n	800ad72 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800ad54:	3301      	adds	r3, #1
 800ad56:	2b04      	cmp	r3, #4
 800ad58:	d1f5      	bne.n	800ad46 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800ad5a:	4b06      	ldr	r3, [pc, #24]	; (800ad74 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800ad5c:	6824      	ldr	r4, [r4, #0]
 800ad5e:	681d      	ldr	r5, [r3, #0]
 800ad60:	f7ff fe58 	bl	800aa14 <e131::universe_to_multicast_ip(unsigned short)>
 800ad64:	4621      	mov	r1, r4
 800ad66:	4602      	mov	r2, r0
 800ad68:	4628      	mov	r0, r5
 800ad6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad6e:	f004 ba60 	b.w	800f232 <Network::LeaveGroup(int, unsigned int)>
 800ad72:	bd70      	pop	{r4, r5, r6, pc}
 800ad74:	2000977c 	andcs	r9, r0, ip, ror r7

0800ad78 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800ad78:	b570      	push	{r4, r5, r6, lr}
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	461d      	mov	r5, r3
 800ad7e:	b1c1      	cbz	r1, 800adb2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800ad80:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800ad84:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800ad88:	b12a      	cbz	r2, 800ad96 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800ad8a:	42aa      	cmp	r2, r5
 800ad8c:	d017      	beq.n	800adbe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800ad8e:	2104      	movs	r1, #4
 800ad90:	4620      	mov	r0, r4
 800ad92:	f7ff ffd1 	bl	800ad38 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ad96:	4b0a      	ldr	r3, [pc, #40]	; (800adc0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 800ad98:	8035      	strh	r5, [r6, #0]
 800ad9a:	4628      	mov	r0, r5
 800ad9c:	6826      	ldr	r6, [r4, #0]
 800ad9e:	681c      	ldr	r4, [r3, #0]
 800ada0:	f7ff fe38 	bl	800aa14 <e131::universe_to_multicast_ip(unsigned short)>
 800ada4:	4631      	mov	r1, r6
 800ada6:	4602      	mov	r2, r0
 800ada8:	4620      	mov	r0, r4
 800adaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adae:	f004 ba3d 	b.w	800f22c <Network::JoinGroup(int, unsigned int)>
 800adb2:	b122      	cbz	r2, 800adbe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800adb4:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800adb8:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800adbc:	e7e4      	b.n	800ad88 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800adbe:	bd70      	pop	{r4, r5, r6, pc}
 800adc0:	2000977c 	andcs	r9, r0, ip, ror r7

0800adc4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800adc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adc8:	4604      	mov	r4, r0
 800adca:	460d      	mov	r5, r1
 800adcc:	461e      	mov	r6, r3
 800adce:	bb02      	cbnz	r2, 800ae12 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800add0:	2903      	cmp	r1, #3
 800add2:	d843      	bhi.n	800ae5c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800add4:	230c      	movs	r3, #12
 800add6:	fb03 0301 	mla	r3, r3, r1, r0
 800adda:	f893 2626 	ldrb.w	r2, [r3, #1574]	; 0x626
 800adde:	b12a      	cbz	r2, 800adec <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800ade0:	f8b3 3624 	ldrh.w	r3, [r3, #1572]	; 0x624
 800ade4:	42b3      	cmp	r3, r6
 800ade6:	d109      	bne.n	800adfc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800ade8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adec:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800adf0:	3201      	adds	r2, #1
 800adf2:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800adf6:	2201      	movs	r2, #1
 800adf8:	f883 2626 	strb.w	r2, [r3, #1574]	; 0x626
 800adfc:	230c      	movs	r3, #12
 800adfe:	fb03 4405 	mla	r4, r3, r5, r4
 800ae02:	4630      	mov	r0, r6
 800ae04:	f8a4 6624 	strh.w	r6, [r4, #1572]	; 0x624
 800ae08:	f7ff fe04 	bl	800aa14 <e131::universe_to_multicast_ip(unsigned short)>
 800ae0c:	f8c4 0628 	str.w	r0, [r4, #1576]	; 0x628
 800ae10:	e7ea      	b.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae12:	2a02      	cmp	r2, #2
 800ae14:	d122      	bne.n	800ae5c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ae16:	2903      	cmp	r1, #3
 800ae18:	d8e6      	bhi.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae1a:	2344      	movs	r3, #68	; 0x44
 800ae1c:	fb03 0301 	mla	r3, r3, r1, r0
 800ae20:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800ae24:	b152      	cbz	r2, 800ae3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800ae26:	2200      	movs	r2, #0
 800ae28:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800ae2c:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800ae30:	4632      	mov	r2, r6
 800ae32:	3b01      	subs	r3, #1
 800ae34:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800ae38:	f7ff ff7e 	bl	800ad38 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ae3c:	230c      	movs	r3, #12
 800ae3e:	fb03 4505 	mla	r5, r3, r5, r4
 800ae42:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800ae46:	2b00      	cmp	r3, #0
 800ae48:	d0ce      	beq.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae4a:	2300      	movs	r3, #0
 800ae4c:	f885 3626 	strb.w	r3, [r5, #1574]	; 0x626
 800ae50:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800ae54:	3b01      	subs	r3, #1
 800ae56:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800ae5a:	e7c5      	b.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae5c:	2344      	movs	r3, #68	; 0x44
 800ae5e:	fb03 4305 	mla	r3, r3, r5, r4
 800ae62:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800ae66:	b1d2      	cbz	r2, 800ae9e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800ae68:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800ae6c:	42b3      	cmp	r3, r6
 800ae6e:	d0bb      	beq.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae70:	4632      	mov	r2, r6
 800ae72:	4629      	mov	r1, r5
 800ae74:	4620      	mov	r0, r4
 800ae76:	f7ff ff5f 	bl	800ad38 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ae7a:	4b0d      	ldr	r3, [pc, #52]	; (800aeb0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800ae7c:	4630      	mov	r0, r6
 800ae7e:	681f      	ldr	r7, [r3, #0]
 800ae80:	f8d4 8000 	ldr.w	r8, [r4]
 800ae84:	f7ff fdc6 	bl	800aa14 <e131::universe_to_multicast_ip(unsigned short)>
 800ae88:	4641      	mov	r1, r8
 800ae8a:	4602      	mov	r2, r0
 800ae8c:	4638      	mov	r0, r7
 800ae8e:	f004 f9cd 	bl	800f22c <Network::JoinGroup(int, unsigned int)>
 800ae92:	2344      	movs	r3, #68	; 0x44
 800ae94:	fb03 4305 	mla	r3, r3, r5, r4
 800ae98:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800ae9c:	e7a4      	b.n	800ade8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ae9e:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800aea2:	3201      	adds	r2, #1
 800aea4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800aea8:	2201      	movs	r2, #1
 800aeaa:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800aeae:	e7e4      	b.n	800ae7a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800aeb0:	2000977c 	andcs	r9, r0, ip, ror r7

0800aeb4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800aeb4:	b953      	cbnz	r3, 800aecc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800aeb6:	2903      	cmp	r1, #3
 800aeb8:	d811      	bhi.n	800aede <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800aeba:	230c      	movs	r3, #12
 800aebc:	fb03 0001 	mla	r0, r3, r1, r0
 800aec0:	f8b0 3624 	ldrh.w	r3, [r0, #1572]	; 0x624
 800aec4:	f890 0626 	ldrb.w	r0, [r0, #1574]	; 0x626
 800aec8:	8013      	strh	r3, [r2, #0]
 800aeca:	4770      	bx	lr
 800aecc:	2344      	movs	r3, #68	; 0x44
 800aece:	fb03 0001 	mla	r0, r3, r1, r0
 800aed2:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 800aed6:	f890 0516 	ldrb.w	r0, [r0, #1302]	; 0x516
 800aeda:	8013      	strh	r3, [r2, #0]
 800aedc:	4770      	bx	lr
 800aede:	4618      	mov	r0, r3
 800aee0:	4770      	bx	lr

0800aee2 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800aee2:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800aee6:	b923      	cbnz	r3, 800aef2 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800aee8:	2301      	movs	r3, #1
 800aeea:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800aeee:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800aef2:	2344      	movs	r3, #68	; 0x44
 800aef4:	fb03 0001 	mla	r0, r3, r1, r0
 800aef8:	2301      	movs	r3, #1
 800aefa:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 800aefe:	4770      	bx	lr

0800af00 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800af00:	4602      	mov	r2, r0
 800af02:	2044      	movs	r0, #68	; 0x44
 800af04:	4348      	muls	r0, r1
 800af06:	b570      	push	{r4, r5, r6, lr}
 800af08:	1815      	adds	r5, r2, r0
 800af0a:	460c      	mov	r4, r1
 800af0c:	68d3      	ldr	r3, [r2, #12]
 800af0e:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800af12:	1a5b      	subs	r3, r3, r1
 800af14:	f242 7110 	movw	r1, #10000	; 0x2710
 800af18:	428b      	cmp	r3, r1
 800af1a:	d90a      	bls.n	800af32 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800af1c:	2600      	movs	r6, #0
 800af1e:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800af22:	2110      	movs	r1, #16
 800af24:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800af28:	4410      	add	r0, r2
 800af2a:	f7ff fd99 	bl	800aa60 <memset.constprop.0.isra.0>
 800af2e:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800af32:	2344      	movs	r3, #68	; 0x44
 800af34:	435c      	muls	r4, r3
 800af36:	1915      	adds	r5, r2, r4
 800af38:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800af3c:	68d3      	ldr	r3, [r2, #12]
 800af3e:	1a5b      	subs	r3, r3, r1
 800af40:	f242 7110 	movw	r1, #10000	; 0x2710
 800af44:	428b      	cmp	r3, r1
 800af46:	d90a      	bls.n	800af5e <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800af48:	2600      	movs	r6, #0
 800af4a:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800af4e:	2110      	movs	r1, #16
 800af50:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800af54:	1910      	adds	r0, r2, r4
 800af56:	f7ff fd83 	bl	800aa60 <memset.constprop.0.isra.0>
 800af5a:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800af5e:	f892 1599 	ldrb.w	r1, [r2, #1433]	; 0x599
 800af62:	f892 3555 	ldrb.w	r3, [r2, #1365]	; 0x555
 800af66:	430b      	orrs	r3, r1
 800af68:	f892 15dd 	ldrb.w	r1, [r2, #1501]	; 0x5dd
 800af6c:	430b      	orrs	r3, r1
 800af6e:	d107      	bne.n	800af80 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800af70:	f892 3621 	ldrb.w	r3, [r2, #1569]	; 0x621
 800af74:	b923      	cbnz	r3, 800af80 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800af76:	2101      	movs	r1, #1
 800af78:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800af7c:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800af80:	bd70      	pop	{r4, r5, r6, pc}

0800af82 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800af82:	2244      	movs	r2, #68	; 0x44
 800af84:	fb02 0101 	mla	r1, r2, r1, r0
 800af88:	68c3      	ldr	r3, [r0, #12]
 800af8a:	b510      	push	{r4, lr}
 800af8c:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800af90:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800af94:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800af98:	1a9a      	subs	r2, r3, r2
 800af9a:	b184      	cbz	r4, 800afbe <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800af9c:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800afa0:	1a5b      	subs	r3, r3, r1
 800afa2:	b128      	cbz	r0, 800afb0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800afa4:	f242 700f 	movw	r0, #9999	; 0x270f
 800afa8:	4283      	cmp	r3, r0
 800afaa:	d90d      	bls.n	800afc8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800afac:	4282      	cmp	r2, r0
 800afae:	e002      	b.n	800afb6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800afb0:	f242 7010 	movw	r0, #10000	; 0x2710
 800afb4:	4283      	cmp	r3, r0
 800afb6:	bf94      	ite	ls
 800afb8:	2000      	movls	r0, #0
 800afba:	2001      	movhi	r0, #1
 800afbc:	bd10      	pop	{r4, pc}
 800afbe:	2800      	cmp	r0, #0
 800afc0:	d0fc      	beq.n	800afbc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800afc2:	f242 7010 	movw	r0, #10000	; 0x2710
 800afc6:	e7f1      	b.n	800afac <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800afc8:	2000      	movs	r0, #0
 800afca:	e7f7      	b.n	800afbc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800afcc <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800afcc:	684a      	ldr	r2, [r1, #4]
 800afce:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800afd0:	b510      	push	{r4, lr}
 800afd2:	429a      	cmp	r2, r3
 800afd4:	d10d      	bne.n	800aff2 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800afd6:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800afda:	3107      	adds	r1, #7
 800afdc:	30a1      	adds	r0, #161	; 0xa1
 800afde:	4283      	cmp	r3, r0
 800afe0:	d101      	bne.n	800afe6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800afe2:	2001      	movs	r0, #1
 800afe4:	bd10      	pop	{r4, pc}
 800afe6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800afea:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800afee:	4294      	cmp	r4, r2
 800aff0:	d0f5      	beq.n	800afde <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800aff2:	2000      	movs	r0, #0
 800aff4:	e7f6      	b.n	800afe4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

0800aff8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800aff8:	2301      	movs	r3, #1
 800affa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800affe:	4604      	mov	r4, r0
 800b000:	4690      	mov	r8, r2
 800b002:	460f      	mov	r7, r1
 800b004:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800b008:	2900      	cmp	r1, #0
 800b00a:	d044      	beq.n	800b096 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b00c:	2a00      	cmp	r2, #0
 800b00e:	d042      	beq.n	800b096 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b010:	2600      	movs	r6, #0
 800b012:	f240 6904 	movw	r9, #1540	; 0x604
 800b016:	4632      	mov	r2, r6
 800b018:	4637      	mov	r7, r6
 800b01a:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800b01e:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800b022:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b026:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800b02a:	f1b8 0f00 	cmp.w	r8, #0
 800b02e:	d018      	beq.n	800b062 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800b030:	2110      	movs	r1, #16
 800b032:	4628      	mov	r0, r5
 800b034:	f845 7c04 	str.w	r7, [r5, #-4]
 800b038:	f7ff fd12 	bl	800aa60 <memset.constprop.0.isra.0>
 800b03c:	2110      	movs	r1, #16
 800b03e:	f105 001c 	add.w	r0, r5, #28
 800b042:	61af      	str	r7, [r5, #24]
 800b044:	f7ff fd0c 	bl	800aa60 <memset.constprop.0.isra.0>
 800b048:	f7ff fd1c 	bl	800aa84 <lightset::Data::Get()>
 800b04c:	4642      	mov	r2, r8
 800b04e:	fb09 0006 	mla	r0, r9, r6, r0
 800b052:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800b056:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800b05a:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800b05e:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800b062:	3601      	adds	r6, #1
 800b064:	2e04      	cmp	r6, #4
 800b066:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b06a:	d1dc      	bne.n	800b026 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800b06c:	b12a      	cbz	r2, 800b07a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b06e:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800b072:	2901      	cmp	r1, #1
 800b074:	d04a      	beq.n	800b10c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800b076:	2902      	cmp	r1, #2
 800b078:	d04d      	beq.n	800b116 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800b07a:	4b29      	ldr	r3, [pc, #164]	; (800b120 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800b07c:	2102      	movs	r1, #2
 800b07e:	6818      	ldr	r0, [r3, #0]
 800b080:	f006 ffb4 	bl	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800b084:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b088:	f023 0302 	bic.w	r3, r3, #2
 800b08c:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b090:	b003      	add	sp, #12
 800b092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b096:	2600      	movs	r6, #0
 800b098:	f240 6b04 	movw	fp, #1540	; 0x604
 800b09c:	4632      	mov	r2, r6
 800b09e:	46b1      	mov	r9, r6
 800b0a0:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800b0a4:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800b0a8:	f1ba 0f00 	cmp.w	sl, #0
 800b0ac:	d028      	beq.n	800b100 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b0ae:	b15f      	cbz	r7, 800b0c8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b0b0:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800b0b4:	b143      	cbz	r3, 800b0c8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b0b6:	2110      	movs	r1, #16
 800b0b8:	f845 9c20 	str.w	r9, [r5, #-32]
 800b0bc:	f1a5 001c 	sub.w	r0, r5, #28
 800b0c0:	f7ff fcce 	bl	800aa60 <memset.constprop.0.isra.0>
 800b0c4:	f885 9019 	strb.w	r9, [r5, #25]
 800b0c8:	f1b8 0f00 	cmp.w	r8, #0
 800b0cc:	d00a      	beq.n	800b0e4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b0ce:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b0d2:	b13b      	cbz	r3, 800b0e4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b0d4:	2110      	movs	r1, #16
 800b0d6:	4628      	mov	r0, r5
 800b0d8:	f845 9c04 	str.w	r9, [r5, #-4]
 800b0dc:	f7ff fcc0 	bl	800aa60 <memset.constprop.0.isra.0>
 800b0e0:	f885 9019 	strb.w	r9, [r5, #25]
 800b0e4:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b0e8:	b953      	cbnz	r3, 800b100 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b0ea:	9301      	str	r3, [sp, #4]
 800b0ec:	f7ff fcca 	bl	800aa84 <lightset::Data::Get()>
 800b0f0:	4652      	mov	r2, sl
 800b0f2:	fb0b 0006 	mla	r0, fp, r6, r0
 800b0f6:	9b01      	ldr	r3, [sp, #4]
 800b0f8:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800b0fc:	762b      	strb	r3, [r5, #24]
 800b0fe:	76ab      	strb	r3, [r5, #26]
 800b100:	3601      	adds	r6, #1
 800b102:	2e04      	cmp	r6, #4
 800b104:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b108:	d1cc      	bne.n	800b0a4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800b10a:	e7af      	b.n	800b06c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800b10c:	6860      	ldr	r0, [r4, #4]
 800b10e:	6803      	ldr	r3, [r0, #0]
 800b110:	695b      	ldr	r3, [r3, #20]
 800b112:	4798      	blx	r3
 800b114:	e7b1      	b.n	800b07a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b116:	6860      	ldr	r0, [r4, #4]
 800b118:	6803      	ldr	r3, [r0, #0]
 800b11a:	699b      	ldr	r3, [r3, #24]
 800b11c:	4798      	blx	r3
 800b11e:	e7ac      	b.n	800b07a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b120:	2000ae8c 	andcs	sl, r0, ip, lsl #29

0800b124 <E131Bridge::HandleDmx()>:
 800b124:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b12c:	4604      	mov	r4, r0
 800b12e:	2600      	movs	r6, #0
 800b130:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800b134:	b085      	sub	sp, #20
 800b136:	ba7f      	rev16	r7, r7
 800b138:	b2bf      	uxth	r7, r7
 800b13a:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800b13e:	3f01      	subs	r7, #1
 800b140:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b144:	9301      	str	r3, [sp, #4]
 800b146:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800b14a:	b353      	cbz	r3, 800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b14c:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800b150:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800b154:	ba5b      	rev16	r3, r3
 800b156:	b29b      	uxth	r3, r3
 800b158:	429a      	cmp	r2, r3
 800b15a:	d122      	bne.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b15c:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b160:	f1a5 0108 	sub.w	r1, r5, #8
 800b164:	4620      	mov	r0, r4
 800b166:	9302      	str	r3, [sp, #8]
 800b168:	f7ff ff30 	bl	800afcc <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b16c:	f105 0114 	add.w	r1, r5, #20
 800b170:	4682      	mov	sl, r0
 800b172:	4620      	mov	r0, r4
 800b174:	f7ff ff2a 	bl	800afcc <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b178:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800b17c:	4680      	mov	r8, r0
 800b17e:	f1ba 0f00 	cmp.w	sl, #0
 800b182:	d01a      	beq.n	800b1ba <E131Bridge::HandleDmx()+0x96>
 800b184:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b188:	7c2a      	ldrb	r2, [r5, #16]
 800b18a:	742b      	strb	r3, [r5, #16]
 800b18c:	3313      	adds	r3, #19
 800b18e:	1a9b      	subs	r3, r3, r2
 800b190:	b2db      	uxtb	r3, r3
 800b192:	2b13      	cmp	r3, #19
 800b194:	d905      	bls.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b196:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800b19a:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b19e:	2a00      	cmp	r2, #0
 800b1a0:	da14      	bge.n	800b1cc <E131Bridge::HandleDmx()+0xa8>
 800b1a2:	9b01      	ldr	r3, [sp, #4]
 800b1a4:	3601      	adds	r6, #1
 800b1a6:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800b1aa:	2e04      	cmp	r6, #4
 800b1ac:	9301      	str	r3, [sp, #4]
 800b1ae:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b1b2:	d1c8      	bne.n	800b146 <E131Bridge::HandleDmx()+0x22>
 800b1b4:	b005      	add	sp, #20
 800b1b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1ba:	2800      	cmp	r0, #0
 800b1bc:	d0eb      	beq.n	800b196 <E131Bridge::HandleDmx()+0x72>
 800b1be:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b1c2:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800b1c6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b1ca:	e7df      	b.n	800b18c <E131Bridge::HandleDmx()+0x68>
 800b1cc:	065a      	lsls	r2, r3, #25
 800b1ce:	d50b      	bpl.n	800b1e8 <E131Bridge::HandleDmx()+0xc4>
 800b1d0:	f1ba 0f00 	cmp.w	sl, #0
 800b1d4:	d102      	bne.n	800b1dc <E131Bridge::HandleDmx()+0xb8>
 800b1d6:	f1b8 0f00 	cmp.w	r8, #0
 800b1da:	d0e2      	beq.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b1dc:	4642      	mov	r2, r8
 800b1de:	4651      	mov	r1, sl
 800b1e0:	4620      	mov	r0, r4
 800b1e2:	f7ff ff09 	bl	800aff8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b1e6:	e7dc      	b.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b1e8:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b1ec:	b133      	cbz	r3, 800b1fc <E131Bridge::HandleDmx()+0xd8>
 800b1ee:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800b1f2:	b91b      	cbnz	r3, 800b1fc <E131Bridge::HandleDmx()+0xd8>
 800b1f4:	4631      	mov	r1, r6
 800b1f6:	4620      	mov	r0, r4
 800b1f8:	f7ff fe82 	bl	800af00 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800b1fc:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800b200:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800b204:	4293      	cmp	r3, r2
 800b206:	d259      	bcs.n	800b2bc <E131Bridge::HandleDmx()+0x198>
 800b208:	4631      	mov	r1, r6
 800b20a:	4620      	mov	r0, r4
 800b20c:	9303      	str	r3, [sp, #12]
 800b20e:	f7ff feb8 	bl	800af82 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800b212:	2800      	cmp	r0, #0
 800b214:	d0c5      	beq.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b216:	9b03      	ldr	r3, [sp, #12]
 800b218:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800b21c:	9b02      	ldr	r3, [sp, #8]
 800b21e:	2b00      	cmp	r3, #0
 800b220:	d154      	bne.n	800b2cc <E131Bridge::HandleDmx()+0x1a8>
 800b222:	f1bb 0f00 	cmp.w	fp, #0
 800b226:	d15c      	bne.n	800b2e2 <E131Bridge::HandleDmx()+0x1be>
 800b228:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b22a:	2210      	movs	r2, #16
 800b22c:	f845 3c04 	str.w	r3, [r5, #-4]
 800b230:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b234:	4628      	mov	r0, r5
 800b236:	742b      	strb	r3, [r5, #16]
 800b238:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b23c:	f7ff fc18 	bl	800aa70 <memcpy.isra.0>
 800b240:	68e3      	ldr	r3, [r4, #12]
 800b242:	463a      	mov	r2, r7
 800b244:	4649      	mov	r1, r9
 800b246:	4630      	mov	r0, r6
 800b248:	f845 3c08 	str.w	r3, [r5, #-8]
 800b24c:	f7ff fc26 	bl	800aa9c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b250:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b254:	069b      	lsls	r3, r3, #26
 800b256:	f100 80aa 	bmi.w	800b3ae <E131Bridge::HandleDmx()+0x28a>
 800b25a:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800b25e:	b29a      	uxth	r2, r3
 800b260:	2a00      	cmp	r2, #0
 800b262:	f000 80a8 	beq.w	800b3b6 <E131Bridge::HandleDmx()+0x292>
 800b266:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800b26a:	2a00      	cmp	r2, #0
 800b26c:	f040 80a3 	bne.w	800b3b6 <E131Bridge::HandleDmx()+0x292>
 800b270:	ba5b      	rev16	r3, r3
 800b272:	b29b      	uxth	r3, r3
 800b274:	f1ba 0f00 	cmp.w	sl, #0
 800b278:	f040 8096 	bne.w	800b3a8 <E131Bridge::HandleDmx()+0x284>
 800b27c:	f1b8 0f00 	cmp.w	r8, #0
 800b280:	f040 8092 	bne.w	800b3a8 <E131Bridge::HandleDmx()+0x284>
 800b284:	69aa      	ldr	r2, [r5, #24]
 800b286:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800b28a:	3a00      	subs	r2, #0
 800b28c:	bf18      	it	ne
 800b28e:	2201      	movne	r2, #1
 800b290:	3900      	subs	r1, #0
 800b292:	bf18      	it	ne
 800b294:	2101      	movne	r1, #1
 800b296:	4620      	mov	r0, r4
 800b298:	f7ff fd6e 	bl	800ad78 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800b29c:	f240 1301 	movw	r3, #257	; 0x101
 800b2a0:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800b2a4:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b2a8:	2b00      	cmp	r3, #0
 800b2aa:	f040 8089 	bne.w	800b3c0 <E131Bridge::HandleDmx()+0x29c>
 800b2ae:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b2b2:	f043 0302 	orr.w	r3, r3, #2
 800b2b6:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b2ba:	e772      	b.n	800b1a2 <E131Bridge::HandleDmx()+0x7e>
 800b2bc:	d9ae      	bls.n	800b21c <E131Bridge::HandleDmx()+0xf8>
 800b2be:	2200      	movs	r2, #0
 800b2c0:	f845 2c04 	str.w	r2, [r5, #-4]
 800b2c4:	61aa      	str	r2, [r5, #24]
 800b2c6:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800b2ca:	e7a5      	b.n	800b218 <E131Bridge::HandleDmx()+0xf4>
 800b2cc:	f1ba 0f00 	cmp.w	sl, #0
 800b2d0:	f000 809a 	beq.w	800b408 <E131Bridge::HandleDmx()+0x2e4>
 800b2d4:	f1bb 0f00 	cmp.w	fp, #0
 800b2d8:	d159      	bne.n	800b38e <E131Bridge::HandleDmx()+0x26a>
 800b2da:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b2de:	742b      	strb	r3, [r5, #16]
 800b2e0:	e7ae      	b.n	800b240 <E131Bridge::HandleDmx()+0x11c>
 800b2e2:	f1b8 0f00 	cmp.w	r8, #0
 800b2e6:	d038      	beq.n	800b35a <E131Bridge::HandleDmx()+0x236>
 800b2e8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b2ec:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b2f0:	68e3      	ldr	r3, [r4, #12]
 800b2f2:	616b      	str	r3, [r5, #20]
 800b2f4:	f7ff fbc6 	bl	800aa84 <lightset::Data::Get()>
 800b2f8:	4683      	mov	fp, r0
 800b2fa:	9b01      	ldr	r3, [sp, #4]
 800b2fc:	463a      	mov	r2, r7
 800b2fe:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800b302:	4649      	mov	r1, r9
 800b304:	4458      	add	r0, fp
 800b306:	f7ff fbb3 	bl	800aa70 <memcpy.isra.0>
 800b30a:	f240 6304 	movw	r3, #1540	; 0x604
 800b30e:	fb03 b306 	mla	r3, r3, r6, fp
 800b312:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b316:	9b01      	ldr	r3, [sp, #4]
 800b318:	463a      	mov	r2, r7
 800b31a:	4649      	mov	r1, r9
 800b31c:	eb0b 0003 	add.w	r0, fp, r3
 800b320:	f7ff fba6 	bl	800aa70 <memcpy.isra.0>
 800b324:	e794      	b.n	800b250 <E131Bridge::HandleDmx()+0x12c>
 800b326:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b328:	2210      	movs	r2, #16
 800b32a:	61ab      	str	r3, [r5, #24]
 800b32c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b330:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b334:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b338:	f105 001c 	add.w	r0, r5, #28
 800b33c:	f7ff fb98 	bl	800aa70 <memcpy.isra.0>
 800b340:	68e3      	ldr	r3, [r4, #12]
 800b342:	4631      	mov	r1, r6
 800b344:	4620      	mov	r0, r4
 800b346:	616b      	str	r3, [r5, #20]
 800b348:	f7ff fdcb 	bl	800aee2 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b34c:	463a      	mov	r2, r7
 800b34e:	4649      	mov	r1, r9
 800b350:	4630      	mov	r0, r6
 800b352:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b354:	f7ff fbe8 	bl	800ab28 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b358:	e77a      	b.n	800b250 <E131Bridge::HandleDmx()+0x12c>
 800b35a:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b35c:	2210      	movs	r2, #16
 800b35e:	f845 3c04 	str.w	r3, [r5, #-4]
 800b362:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b366:	4628      	mov	r0, r5
 800b368:	742b      	strb	r3, [r5, #16]
 800b36a:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b36e:	f7ff fb7f 	bl	800aa70 <memcpy.isra.0>
 800b372:	68e3      	ldr	r3, [r4, #12]
 800b374:	4631      	mov	r1, r6
 800b376:	4620      	mov	r0, r4
 800b378:	f845 3c08 	str.w	r3, [r5, #-8]
 800b37c:	f7ff fdb1 	bl	800aee2 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b380:	463a      	mov	r2, r7
 800b382:	4649      	mov	r1, r9
 800b384:	4630      	mov	r0, r6
 800b386:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b388:	f7ff fba5 	bl	800aad6 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b38c:	e760      	b.n	800b250 <E131Bridge::HandleDmx()+0x12c>
 800b38e:	f1b8 0f00 	cmp.w	r8, #0
 800b392:	d103      	bne.n	800b39c <E131Bridge::HandleDmx()+0x278>
 800b394:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b398:	742b      	strb	r3, [r5, #16]
 800b39a:	e7ea      	b.n	800b372 <E131Bridge::HandleDmx()+0x24e>
 800b39c:	4820      	ldr	r0, [pc, #128]	; (800b420 <E131Bridge::HandleDmx()+0x2fc>)
 800b39e:	b005      	add	sp, #20
 800b3a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3a4:	f7fd bf6c 	b.w	8009280 <printf>
 800b3a8:	4642      	mov	r2, r8
 800b3aa:	4651      	mov	r1, sl
 800b3ac:	e773      	b.n	800b296 <E131Bridge::HandleDmx()+0x172>
 800b3ae:	f04f 0300 	mov.w	r3, #0
 800b3b2:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800b3b6:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b3ba:	2b00      	cmp	r3, #0
 800b3bc:	f47f af72 	bne.w	800b2a4 <E131Bridge::HandleDmx()+0x180>
 800b3c0:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b3c4:	f7ff fb5e 	bl	800aa84 <lightset::Data::Get()>
 800b3c8:	f240 6304 	movw	r3, #1540	; 0x604
 800b3cc:	f8d8 2000 	ldr.w	r2, [r8]
 800b3d0:	fb03 0306 	mla	r3, r3, r6, r0
 800b3d4:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800b3d8:	9a01      	ldr	r2, [sp, #4]
 800b3da:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800b3de:	1882      	adds	r2, r0, r2
 800b3e0:	4631      	mov	r1, r6
 800b3e2:	4640      	mov	r0, r8
 800b3e4:	47d0      	blx	sl
 800b3e6:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800b3ea:	2b00      	cmp	r3, #0
 800b3ec:	f47f af5f 	bne.w	800b2ae <E131Bridge::HandleDmx()+0x18a>
 800b3f0:	6860      	ldr	r0, [r4, #4]
 800b3f2:	4631      	mov	r1, r6
 800b3f4:	6803      	ldr	r3, [r0, #0]
 800b3f6:	689b      	ldr	r3, [r3, #8]
 800b3f8:	4798      	blx	r3
 800b3fa:	f04f 0301 	mov.w	r3, #1
 800b3fe:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800b402:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800b406:	e752      	b.n	800b2ae <E131Bridge::HandleDmx()+0x18a>
 800b408:	f1bb 0f00 	cmp.w	fp, #0
 800b40c:	d08b      	beq.n	800b326 <E131Bridge::HandleDmx()+0x202>
 800b40e:	f1b8 0f00 	cmp.w	r8, #0
 800b412:	d0c3      	beq.n	800b39c <E131Bridge::HandleDmx()+0x278>
 800b414:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b418:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b41c:	e790      	b.n	800b340 <E131Bridge::HandleDmx()+0x21c>
 800b41e:	bf00      	nop
 800b420:	080156cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, ip, lr}

0800b424 <E131Bridge::IsValidRoot()>:
 800b424:	b530      	push	{r4, r5, lr}
 800b426:	4a0d      	ldr	r2, [pc, #52]	; (800b45c <E131Bridge::IsValidRoot()+0x38>)
 800b428:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800b42c:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800b430:	4299      	cmp	r1, r3
 800b432:	d109      	bne.n	800b448 <E131Bridge::IsValidRoot()+0x24>
 800b434:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800b438:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800b43c:	d00c      	beq.n	800b458 <E131Bridge::IsValidRoot()+0x34>
 800b43e:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800b442:	4258      	negs	r0, r3
 800b444:	4158      	adcs	r0, r3
 800b446:	bd30      	pop	{r4, r5, pc}
 800b448:	f812 4b01 	ldrb.w	r4, [r2], #1
 800b44c:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800b450:	42a5      	cmp	r5, r4
 800b452:	d0ed      	beq.n	800b430 <E131Bridge::IsValidRoot()+0xc>
 800b454:	2000      	movs	r0, #0
 800b456:	e7f6      	b.n	800b446 <E131Bridge::IsValidRoot()+0x22>
 800b458:	2001      	movs	r0, #1
 800b45a:	e7f4      	b.n	800b446 <E131Bridge::IsValidRoot()+0x22>
 800b45c:	0801587d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, fp, ip, lr}

0800b460 <E131Bridge::IsValidDataPacket()>:
 800b460:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800b464:	2b02      	cmp	r3, #2
 800b466:	d10d      	bne.n	800b484 <E131Bridge::IsValidDataPacket()+0x24>
 800b468:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800b46c:	2ba1      	cmp	r3, #161	; 0xa1
 800b46e:	d109      	bne.n	800b484 <E131Bridge::IsValidDataPacket()+0x24>
 800b470:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800b474:	b933      	cbnz	r3, 800b484 <E131Bridge::IsValidDataPacket()+0x24>
 800b476:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800b47a:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800b47e:	4258      	negs	r0, r3
 800b480:	4158      	adcs	r0, r3
 800b482:	4770      	bx	lr
 800b484:	2000      	movs	r0, #0
 800b486:	4770      	bx	lr

0800b488 <E131Bridge::Run()>:
 800b488:	b530      	push	{r4, r5, lr}
 800b48a:	4601      	mov	r1, r0
 800b48c:	4604      	mov	r4, r0
 800b48e:	b085      	sub	sp, #20
 800b490:	f10d 030e 	add.w	r3, sp, #14
 800b494:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800b498:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800b49c:	9300      	str	r3, [sp, #0]
 800b49e:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800b4a2:	f003 f991 	bl	800e7c8 <udp_recv>
 800b4a6:	4b3a      	ldr	r3, [pc, #232]	; (800b590 <E131Bridge::Run()+0x108>)
 800b4a8:	681d      	ldr	r5, [r3, #0]
 800b4aa:	60e5      	str	r5, [r4, #12]
 800b4ac:	2800      	cmp	r0, #0
 800b4ae:	d138      	bne.n	800b522 <E131Bridge::Run()+0x9a>
 800b4b0:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b4b4:	b16b      	cbz	r3, 800b4d2 <E131Bridge::Run()+0x4a>
 800b4b6:	6923      	ldr	r3, [r4, #16]
 800b4b8:	1aed      	subs	r5, r5, r3
 800b4ba:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800b4be:	429d      	cmp	r5, r3
 800b4c0:	d928      	bls.n	800b514 <E131Bridge::Run()+0x8c>
 800b4c2:	6863      	ldr	r3, [r4, #4]
 800b4c4:	b9eb      	cbnz	r3, 800b502 <E131Bridge::Run()+0x7a>
 800b4c6:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b4ca:	f023 0302 	bic.w	r3, r3, #2
 800b4ce:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b4d2:	6963      	ldr	r3, [r4, #20]
 800b4d4:	b12b      	cbz	r3, 800b4e2 <E131Bridge::Run()+0x5a>
 800b4d6:	4620      	mov	r0, r4
 800b4d8:	f000 f94c 	bl	800b774 <E131Bridge::HandleDmxIn()>
 800b4dc:	4620      	mov	r0, r4
 800b4de:	f000 f8c7 	bl	800b670 <E131Bridge::SendDiscoveryPacket()>
 800b4e2:	7a23      	ldrb	r3, [r4, #8]
 800b4e4:	b15b      	cbz	r3, 800b4fe <E131Bridge::Run()+0x76>
 800b4e6:	4b2b      	ldr	r3, [pc, #172]	; (800b594 <E131Bridge::Run()+0x10c>)
 800b4e8:	6818      	ldr	r0, [r3, #0]
 800b4ea:	6843      	ldr	r3, [r0, #4]
 800b4ec:	2b04      	cmp	r3, #4
 800b4ee:	d006      	beq.n	800b4fe <E131Bridge::Run()+0x76>
 800b4f0:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b4f4:	2b00      	cmp	r3, #0
 800b4f6:	d049      	beq.n	800b58c <E131Bridge::Run()+0x104>
 800b4f8:	2103      	movs	r1, #3
 800b4fa:	f006 fd77 	bl	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800b4fe:	b005      	add	sp, #20
 800b500:	bd30      	pop	{r4, r5, pc}
 800b502:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800b506:	2b00      	cmp	r3, #0
 800b508:	d1dd      	bne.n	800b4c6 <E131Bridge::Run()+0x3e>
 800b50a:	2201      	movs	r2, #1
 800b50c:	4620      	mov	r0, r4
 800b50e:	4611      	mov	r1, r2
 800b510:	f7ff fd72 	bl	800aff8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b514:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800b518:	1a9b      	subs	r3, r3, r2
 800b51a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800b51e:	d3d8      	bcc.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b520:	e7d1      	b.n	800b4c6 <E131Bridge::Run()+0x3e>
 800b522:	4620      	mov	r0, r4
 800b524:	f7ff ff7e 	bl	800b424 <E131Bridge::IsValidRoot()>
 800b528:	2800      	cmp	r0, #0
 800b52a:	d0e8      	beq.n	800b4fe <E131Bridge::Run()+0x76>
 800b52c:	2300      	movs	r3, #0
 800b52e:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800b532:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b536:	6125      	str	r5, [r4, #16]
 800b538:	b15b      	cbz	r3, 800b552 <E131Bridge::Run()+0xca>
 800b53a:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800b53e:	b943      	cbnz	r3, 800b552 <E131Bridge::Run()+0xca>
 800b540:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800b544:	1aad      	subs	r5, r5, r2
 800b546:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800b54a:	4295      	cmp	r5, r2
 800b54c:	bf88      	it	hi
 800b54e:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800b552:	6863      	ldr	r3, [r4, #4]
 800b554:	2b00      	cmp	r3, #0
 800b556:	d0bc      	beq.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b558:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800b55c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800b560:	ba1a      	rev	r2, r3
 800b562:	d108      	bne.n	800b576 <E131Bridge::Run()+0xee>
 800b564:	4620      	mov	r0, r4
 800b566:	f7ff ff7b 	bl	800b460 <E131Bridge::IsValidDataPacket()>
 800b56a:	2800      	cmp	r0, #0
 800b56c:	d0b1      	beq.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b56e:	4620      	mov	r0, r4
 800b570:	f7ff fdd8 	bl	800b124 <E131Bridge::HandleDmx()>
 800b574:	e7ad      	b.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b576:	2a08      	cmp	r2, #8
 800b578:	d1ab      	bne.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b57a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b57e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b582:	d1a6      	bne.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b584:	4620      	mov	r0, r4
 800b586:	f000 f973 	bl	800b870 <E131Bridge::HandleSynchronization()>
 800b58a:	e7a2      	b.n	800b4d2 <E131Bridge::Run()+0x4a>
 800b58c:	2102      	movs	r1, #2
 800b58e:	e7b4      	b.n	800b4fa <E131Bridge::Run()+0x72>
 800b590:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800b594:	2000ae8c 	andcs	sl, r0, ip, lsl #29

0800b598 <E131Bridge::FillDiscoveryPacket()>:
 800b598:	2200      	movs	r2, #0
 800b59a:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b59e:	b510      	push	{r4, lr}
 800b5a0:	333c      	adds	r3, #60	; 0x3c
 800b5a2:	005b      	lsls	r3, r3, #1
 800b5a4:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800b5a8:	69c3      	ldr	r3, [r0, #28]
 800b5aa:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800b5ae:	428b      	cmp	r3, r1
 800b5b0:	d14a      	bne.n	800b648 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800b5b2:	69c3      	ldr	r3, [r0, #28]
 800b5b4:	492d      	ldr	r1, [pc, #180]	; (800b66c <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800b5b6:	701a      	strb	r2, [r3, #0]
 800b5b8:	2210      	movs	r2, #16
 800b5ba:	705a      	strb	r2, [r3, #1]
 800b5bc:	1cda      	adds	r2, r3, #3
 800b5be:	330f      	adds	r3, #15
 800b5c0:	4293      	cmp	r3, r2
 800b5c2:	d144      	bne.n	800b64e <E131Bridge::FillDiscoveryPacket()+0xb6>
 800b5c4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b5c8:	69c3      	ldr	r3, [r0, #28]
 800b5ca:	3234      	adds	r2, #52	; 0x34
 800b5cc:	0052      	lsls	r2, r2, #1
 800b5ce:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b5d2:	ba52      	rev16	r2, r2
 800b5d4:	821a      	strh	r2, [r3, #16]
 800b5d6:	2200      	movs	r2, #0
 800b5d8:	749a      	strb	r2, [r3, #18]
 800b5da:	74da      	strb	r2, [r3, #19]
 800b5dc:	751a      	strb	r2, [r3, #20]
 800b5de:	2208      	movs	r2, #8
 800b5e0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b5e4:	f803 2f15 	strb.w	r2, [r3, #21]!
 800b5e8:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800b5ec:	4291      	cmp	r1, r2
 800b5ee:	d133      	bne.n	800b658 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800b5f0:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b5f4:	69c3      	ldr	r3, [r0, #28]
 800b5f6:	3229      	adds	r2, #41	; 0x29
 800b5f8:	0052      	lsls	r2, r2, #1
 800b5fa:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b5fe:	ba52      	rev16	r2, r2
 800b600:	84da      	strh	r2, [r3, #38]	; 0x26
 800b602:	2200      	movs	r2, #0
 800b604:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800b608:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800b60c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800b610:	2202      	movs	r2, #2
 800b612:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800b616:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800b61a:	4291      	cmp	r1, r2
 800b61c:	d121      	bne.n	800b662 <E131Bridge::FillDiscoveryPacket()+0xca>
 800b61e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b622:	69c2      	ldr	r2, [r0, #28]
 800b624:	3304      	adds	r3, #4
 800b626:	005b      	lsls	r3, r3, #1
 800b628:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b62c:	ba5b      	rev16	r3, r3
 800b62e:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800b632:	2300      	movs	r3, #0
 800b634:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800b638:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800b63c:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800b640:	2301      	movs	r3, #1
 800b642:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800b646:	bd10      	pop	{r4, pc}
 800b648:	f803 2b01 	strb.w	r2, [r3], #1
 800b64c:	e7af      	b.n	800b5ae <E131Bridge::FillDiscoveryPacket()+0x16>
 800b64e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b652:	f802 4f01 	strb.w	r4, [r2, #1]!
 800b656:	e7b3      	b.n	800b5c0 <E131Bridge::FillDiscoveryPacket()+0x28>
 800b658:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b65c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b660:	e7c4      	b.n	800b5ec <E131Bridge::FillDiscoveryPacket()+0x54>
 800b662:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b666:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b66a:	e7d6      	b.n	800b61a <E131Bridge::FillDiscoveryPacket()+0x82>
 800b66c:	0801587d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, fp, ip, lr}

0800b670 <E131Bridge::SendDiscoveryPacket()>:
 800b670:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b672:	f242 710f 	movw	r1, #9999	; 0x270f
 800b676:	68c2      	ldr	r2, [r0, #12]
 800b678:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800b67c:	4604      	mov	r4, r0
 800b67e:	1ad3      	subs	r3, r2, r3
 800b680:	428b      	cmp	r3, r1
 800b682:	d924      	bls.n	800b6ce <E131Bridge::SendDiscoveryPacket()+0x5e>
 800b684:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b688:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800b68c:	b1ab      	cbz	r3, 800b6ba <E131Bridge::SendDiscoveryPacket()+0x4a>
 800b68e:	2500      	movs	r5, #0
 800b690:	462e      	mov	r6, r5
 800b692:	2300      	movs	r3, #0
 800b694:	4629      	mov	r1, r5
 800b696:	4620      	mov	r0, r4
 800b698:	f10d 020e 	add.w	r2, sp, #14
 800b69c:	f7ff fc0a 	bl	800aeb4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b6a0:	b140      	cbz	r0, 800b6b4 <E131Bridge::SendDiscoveryPacket()+0x44>
 800b6a2:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b6a6:	69e2      	ldr	r2, [r4, #28]
 800b6a8:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800b6ac:	ba5b      	rev16	r3, r3
 800b6ae:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800b6b2:	3601      	adds	r6, #1
 800b6b4:	3501      	adds	r5, #1
 800b6b6:	2d04      	cmp	r5, #4
 800b6b8:	d1eb      	bne.n	800b692 <E131Bridge::SendDiscoveryPacket()+0x22>
 800b6ba:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b6be:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800b6c2:	9300      	str	r3, [sp, #0]
 800b6c4:	69e1      	ldr	r1, [r4, #28]
 800b6c6:	6a23      	ldr	r3, [r4, #32]
 800b6c8:	7820      	ldrb	r0, [r4, #0]
 800b6ca:	f003 f8d9 	bl	800e880 <udp_send>
 800b6ce:	b004      	add	sp, #16
 800b6d0:	bd70      	pop	{r4, r5, r6, pc}

0800b6d2 <memcpy.isra.0>:
 800b6d2:	3801      	subs	r0, #1
 800b6d4:	440a      	add	r2, r1
 800b6d6:	4291      	cmp	r1, r2
 800b6d8:	d100      	bne.n	800b6dc <memcpy.isra.0+0xa>
 800b6da:	4770      	bx	lr
 800b6dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b6e0:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b6e4:	e7f7      	b.n	800b6d6 <memcpy.isra.0+0x4>
	...

0800b6e8 <E131Bridge::FillDataPacket()>:
 800b6e8:	b570      	push	{r4, r5, r6, lr}
 800b6ea:	2400      	movs	r4, #0
 800b6ec:	2610      	movs	r6, #16
 800b6ee:	4605      	mov	r5, r0
 800b6f0:	6980      	ldr	r0, [r0, #24]
 800b6f2:	220c      	movs	r2, #12
 800b6f4:	7046      	strb	r6, [r0, #1]
 800b6f6:	7004      	strb	r4, [r0, #0]
 800b6f8:	7084      	strb	r4, [r0, #2]
 800b6fa:	70c4      	strb	r4, [r0, #3]
 800b6fc:	491c      	ldr	r1, [pc, #112]	; (800b770 <E131Bridge::FillDataPacket()+0x88>)
 800b6fe:	3004      	adds	r0, #4
 800b700:	f7ff ffe7 	bl	800b6d2 <memcpy.isra.0>
 800b704:	2304      	movs	r3, #4
 800b706:	4632      	mov	r2, r6
 800b708:	2602      	movs	r6, #2
 800b70a:	69a8      	ldr	r0, [r5, #24]
 800b70c:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800b710:	7543      	strb	r3, [r0, #21]
 800b712:	7484      	strb	r4, [r0, #18]
 800b714:	74c4      	strb	r4, [r0, #19]
 800b716:	7504      	strb	r4, [r0, #20]
 800b718:	3016      	adds	r0, #22
 800b71a:	f7ff ffda 	bl	800b6d2 <memcpy.isra.0>
 800b71e:	69a8      	ldr	r0, [r5, #24]
 800b720:	2240      	movs	r2, #64	; 0x40
 800b722:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800b726:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800b72a:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800b72e:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800b732:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800b736:	302c      	adds	r0, #44	; 0x2c
 800b738:	f7ff ffcb 	bl	800b6d2 <memcpy.isra.0>
 800b73c:	22a1      	movs	r2, #161	; 0xa1
 800b73e:	69ab      	ldr	r3, [r5, #24]
 800b740:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800b744:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800b748:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800b74c:	69ab      	ldr	r3, [r5, #24]
 800b74e:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800b752:	69ab      	ldr	r3, [r5, #24]
 800b754:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800b758:	2201      	movs	r2, #1
 800b75a:	69ab      	ldr	r3, [r5, #24]
 800b75c:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800b760:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800b764:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800b768:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800b76c:	bd70      	pop	{r4, r5, r6, pc}
 800b76e:	bf00      	nop
 800b770:	0801587d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, fp, ip, lr}

0800b774 <E131Bridge::HandleDmxIn()>:
 800b774:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b778:	4604      	mov	r4, r0
 800b77a:	4605      	mov	r5, r0
 800b77c:	2600      	movs	r6, #0
 800b77e:	4f3b      	ldr	r7, [pc, #236]	; (800b86c <E131Bridge::HandleDmxIn()+0xf8>)
 800b780:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800b784:	2b00      	cmp	r3, #0
 800b786:	d058      	beq.n	800b83a <E131Bridge::HandleDmxIn()+0xc6>
 800b788:	6960      	ldr	r0, [r4, #20]
 800b78a:	4631      	mov	r1, r6
 800b78c:	6803      	ldr	r3, [r0, #0]
 800b78e:	aa02      	add	r2, sp, #8
 800b790:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b794:	ab03      	add	r3, sp, #12
 800b796:	47c0      	blx	r8
 800b798:	4601      	mov	r1, r0
 800b79a:	2800      	cmp	r0, #0
 800b79c:	d055      	beq.n	800b84a <E131Bridge::HandleDmxIn()+0xd6>
 800b79e:	9a02      	ldr	r2, [sp, #8]
 800b7a0:	69a0      	ldr	r0, [r4, #24]
 800b7a2:	b293      	uxth	r3, r2
 800b7a4:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800b7a8:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b7ac:	fa9c fc9c 	rev16.w	ip, ip
 800b7b0:	f8a0 c010 	strh.w	ip, [r0, #16]
 800b7b4:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800b7b8:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b7bc:	fa9c fc9c 	rev16.w	ip, ip
 800b7c0:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800b7c4:	f895 c62d 	ldrb.w	ip, [r5, #1581]	; 0x62d
 800b7c8:	330a      	adds	r3, #10
 800b7ca:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800b7ce:	f895 c62c 	ldrb.w	ip, [r5, #1580]	; 0x62c
 800b7d2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b7d6:	f10c 0001 	add.w	r0, ip, #1
 800b7da:	f885 062c 	strb.w	r0, [r5, #1580]	; 0x62c
 800b7de:	69a0      	ldr	r0, [r4, #24]
 800b7e0:	ba5b      	rev16	r3, r3
 800b7e2:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800b7e6:	f8b5 c624 	ldrh.w	ip, [r5, #1572]	; 0x624
 800b7ea:	69a0      	ldr	r0, [r4, #24]
 800b7ec:	fa9c fc9c 	rev16.w	ip, ip
 800b7f0:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800b7f4:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800b7f8:	307d      	adds	r0, #125	; 0x7d
 800b7fa:	f7ff ff6a 	bl	800b6d2 <memcpy.isra.0>
 800b7fe:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b802:	69a1      	ldr	r1, [r4, #24]
 800b804:	ba53      	rev16	r3, r2
 800b806:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800b80a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b80e:	327d      	adds	r2, #125	; 0x7d
 800b810:	9300      	str	r3, [sp, #0]
 800b812:	f8d5 3628 	ldr.w	r3, [r5, #1576]	; 0x628
 800b816:	b292      	uxth	r2, r2
 800b818:	7820      	ldrb	r0, [r4, #0]
 800b81a:	f003 f831 	bl	800e880 <udp_send>
 800b81e:	2301      	movs	r3, #1
 800b820:	683a      	ldr	r2, [r7, #0]
 800b822:	40b3      	lsls	r3, r6
 800b824:	ea33 0102 	bics.w	r1, r3, r2
 800b828:	d007      	beq.n	800b83a <E131Bridge::HandleDmxIn()+0xc6>
 800b82a:	4313      	orrs	r3, r2
 800b82c:	603b      	str	r3, [r7, #0]
 800b82e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b832:	f043 0301 	orr.w	r3, r3, #1
 800b836:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b83a:	3601      	adds	r6, #1
 800b83c:	2e04      	cmp	r6, #4
 800b83e:	f105 050c 	add.w	r5, r5, #12
 800b842:	d19d      	bne.n	800b780 <E131Bridge::HandleDmxIn()+0xc>
 800b844:	b004      	add	sp, #16
 800b846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b84a:	9b03      	ldr	r3, [sp, #12]
 800b84c:	2b00      	cmp	r3, #0
 800b84e:	d1f4      	bne.n	800b83a <E131Bridge::HandleDmxIn()+0xc6>
 800b850:	2201      	movs	r2, #1
 800b852:	683b      	ldr	r3, [r7, #0]
 800b854:	40b2      	lsls	r2, r6
 800b856:	ea23 0302 	bic.w	r3, r3, r2
 800b85a:	603b      	str	r3, [r7, #0]
 800b85c:	2b00      	cmp	r3, #0
 800b85e:	d1ec      	bne.n	800b83a <E131Bridge::HandleDmxIn()+0xc6>
 800b860:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b864:	f023 0301 	bic.w	r3, r3, #1
 800b868:	e7e5      	b.n	800b836 <E131Bridge::HandleDmxIn()+0xc2>
 800b86a:	bf00      	nop
 800b86c:	20001e68 	andcs	r1, r0, r8, ror #28

0800b870 <E131Bridge::HandleSynchronization()>:
 800b870:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b874:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800b878:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b87c:	ba5b      	rev16	r3, r3
 800b87e:	b29b      	uxth	r3, r3
 800b880:	429a      	cmp	r2, r3
 800b882:	4604      	mov	r4, r0
 800b884:	d00a      	beq.n	800b89c <E131Bridge::HandleSynchronization()+0x2c>
 800b886:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b88a:	429a      	cmp	r2, r3
 800b88c:	d006      	beq.n	800b89c <E131Bridge::HandleSynchronization()+0x2c>
 800b88e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b892:	4b23      	ldr	r3, [pc, #140]	; (800b920 <E131Bridge::HandleSynchronization()+0xb0>)
 800b894:	2102      	movs	r1, #2
 800b896:	6818      	ldr	r0, [r3, #0]
 800b898:	f006 bba8 	b.w	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800b89c:	2500      	movs	r5, #0
 800b89e:	4627      	mov	r7, r4
 800b8a0:	46a9      	mov	r9, r5
 800b8a2:	68e3      	ldr	r3, [r4, #12]
 800b8a4:	4e1f      	ldr	r6, [pc, #124]	; (800b924 <E131Bridge::HandleSynchronization()+0xb4>)
 800b8a6:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800b928 <E131Bridge::HandleSynchronization()+0xb8>
 800b8aa:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800b8ae:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800b8b2:	b323      	cbz	r3, 800b8fe <E131Bridge::HandleSynchronization()+0x8e>
 800b8b4:	f8d8 3000 	ldr.w	r3, [r8]
 800b8b8:	6860      	ldr	r0, [r4, #4]
 800b8ba:	07da      	lsls	r2, r3, #31
 800b8bc:	bf5c      	itt	pl
 800b8be:	2301      	movpl	r3, #1
 800b8c0:	f8c8 3000 	strpl.w	r3, [r8]
 800b8c4:	6803      	ldr	r3, [r0, #0]
 800b8c6:	4629      	mov	r1, r5
 800b8c8:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b8cc:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800b8d0:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800b8d4:	47d0      	blx	sl
 800b8d6:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800b8da:	b93b      	cbnz	r3, 800b8ec <E131Bridge::HandleSynchronization()+0x7c>
 800b8dc:	6860      	ldr	r0, [r4, #4]
 800b8de:	4629      	mov	r1, r5
 800b8e0:	6803      	ldr	r3, [r0, #0]
 800b8e2:	689b      	ldr	r3, [r3, #8]
 800b8e4:	4798      	blx	r3
 800b8e6:	2301      	movs	r3, #1
 800b8e8:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800b8ec:	f8d8 3000 	ldr.w	r3, [r8]
 800b8f0:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800b8f4:	07db      	lsls	r3, r3, #31
 800b8f6:	bf5c      	itt	pl
 800b8f8:	2301      	movpl	r3, #1
 800b8fa:	f8c8 3000 	strpl.w	r3, [r8]
 800b8fe:	3501      	adds	r5, #1
 800b900:	2d04      	cmp	r5, #4
 800b902:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800b906:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800b90a:	d1d0      	bne.n	800b8ae <E131Bridge::HandleSynchronization()+0x3e>
 800b90c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b90e:	b120      	cbz	r0, 800b91a <E131Bridge::HandleSynchronization()+0xaa>
 800b910:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b914:	6803      	ldr	r3, [r0, #0]
 800b916:	689b      	ldr	r3, [r3, #8]
 800b918:	4718      	bx	r3
 800b91a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b91e:	bf00      	nop
 800b920:	2000ae8c 	andcs	sl, r0, ip, lsl #29
 800b924:	20000654 	andcs	r0, r0, r4, asr r6
 800b928:	20000650 	andcs	r0, r0, r0, asr r6

0800b92c <E131Bridge::Print()>:
 800b92c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b930:	2500      	movs	r5, #0
 800b932:	4604      	mov	r4, r0
 800b934:	b08c      	sub	sp, #48	; 0x30
 800b936:	a902      	add	r1, sp, #8
 800b938:	3024      	adds	r0, #36	; 0x24
 800b93a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b93e:	f000 fc47 	bl	800c1d0 <uuid_unparse>
 800b942:	482c      	ldr	r0, [pc, #176]	; (800b9f4 <E131Bridge::Print()+0xc8>)
 800b944:	f7fd fc9c 	bl	8009280 <printf>
 800b948:	4b2b      	ldr	r3, [pc, #172]	; (800b9f8 <E131Bridge::Print()+0xcc>)
 800b94a:	482c      	ldr	r0, [pc, #176]	; (800b9fc <E131Bridge::Print()+0xd0>)
 800b94c:	7819      	ldrb	r1, [r3, #0]
 800b94e:	785a      	ldrb	r2, [r3, #1]
 800b950:	f7fd fc96 	bl	8009280 <printf>
 800b954:	482a      	ldr	r0, [pc, #168]	; (800ba00 <E131Bridge::Print()+0xd4>)
 800b956:	a902      	add	r1, sp, #8
 800b958:	f7fd fc92 	bl	8009280 <printf>
 800b95c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b960:	b303      	cbz	r3, 800b9a4 <E131Bridge::Print()+0x78>
 800b962:	4828      	ldr	r0, [pc, #160]	; (800ba04 <E131Bridge::Print()+0xd8>)
 800b964:	f7fd fc8c 	bl	8009280 <printf>
 800b968:	4e27      	ldr	r6, [pc, #156]	; (800ba08 <E131Bridge::Print()+0xdc>)
 800b96a:	4f28      	ldr	r7, [pc, #160]	; (800ba0c <E131Bridge::Print()+0xe0>)
 800b96c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ba10 <E131Bridge::Print()+0xe4>
 800b970:	2301      	movs	r3, #1
 800b972:	4629      	mov	r1, r5
 800b974:	4620      	mov	r0, r4
 800b976:	f10d 0206 	add.w	r2, sp, #6
 800b97a:	f7ff fa9b 	bl	800aeb4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b97e:	b170      	cbz	r0, 800b99e <E131Bridge::Print()+0x72>
 800b980:	2344      	movs	r3, #68	; 0x44
 800b982:	436b      	muls	r3, r5
 800b984:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800b988:	58d3      	ldr	r3, [r2, r3]
 800b98a:	4629      	mov	r1, r5
 800b98c:	2b00      	cmp	r3, #0
 800b98e:	bf0c      	ite	eq
 800b990:	4633      	moveq	r3, r6
 800b992:	463b      	movne	r3, r7
 800b994:	4640      	mov	r0, r8
 800b996:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b99a:	f7fd fc71 	bl	8009280 <printf>
 800b99e:	3501      	adds	r5, #1
 800b9a0:	2d04      	cmp	r5, #4
 800b9a2:	d1e5      	bne.n	800b970 <E131Bridge::Print()+0x44>
 800b9a4:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b9a8:	b1d3      	cbz	r3, 800b9e0 <E131Bridge::Print()+0xb4>
 800b9aa:	481a      	ldr	r0, [pc, #104]	; (800ba14 <E131Bridge::Print()+0xe8>)
 800b9ac:	f7fd fc68 	bl	8009280 <printf>
 800b9b0:	2500      	movs	r5, #0
 800b9b2:	4e19      	ldr	r6, [pc, #100]	; (800ba18 <E131Bridge::Print()+0xec>)
 800b9b4:	2300      	movs	r3, #0
 800b9b6:	4629      	mov	r1, r5
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	f10d 0206 	add.w	r2, sp, #6
 800b9be:	f7ff fa79 	bl	800aeb4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b9c2:	b150      	cbz	r0, 800b9da <E131Bridge::Print()+0xae>
 800b9c4:	230c      	movs	r3, #12
 800b9c6:	436b      	muls	r3, r5
 800b9c8:	f204 622d 	addw	r2, r4, #1581	; 0x62d
 800b9cc:	5cd3      	ldrb	r3, [r2, r3]
 800b9ce:	4629      	mov	r1, r5
 800b9d0:	4630      	mov	r0, r6
 800b9d2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b9d6:	f7fd fc53 	bl	8009280 <printf>
 800b9da:	3501      	adds	r5, #1
 800b9dc:	2d04      	cmp	r5, #4
 800b9de:	d1e9      	bne.n	800b9b4 <E131Bridge::Print()+0x88>
 800b9e0:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b9e4:	b113      	cbz	r3, 800b9ec <E131Bridge::Print()+0xc0>
 800b9e6:	480d      	ldr	r0, [pc, #52]	; (800ba1c <E131Bridge::Print()+0xf0>)
 800b9e8:	f7fd fc4a 	bl	8009280 <printf>
 800b9ec:	b00c      	add	sp, #48	; 0x30
 800b9ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9f2:	bf00      	nop
 800b9f4:	08015704 	stmdaeq	r1, {r2, r8, r9, sl, ip, lr}
 800b9f8:	08015889 	stmdaeq	r1, {r0, r3, r7, fp, ip, lr}
 800b9fc:	0801570c 	stmdaeq	r1, {r2, r3, r8, r9, sl, ip, lr}
 800ba00:	0801571f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, ip, lr}
 800ba04:	0801572f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, ip, lr}
 800ba08:	080156fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, ip, lr}
 800ba0c:	08015700 	stmdaeq	r1, {r8, r9, sl, ip, lr}
 800ba10:	08015738 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, ip, lr}
 800ba14:	08015757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, ip, lr}
 800ba18:	0801575f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}
 800ba1c:	0801577e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sl, ip, lr}

0800ba20 <memcmp>:
 800ba20:	4402      	add	r2, r0
 800ba22:	4290      	cmp	r0, r2
 800ba24:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800ba28:	d106      	bne.n	800ba38 <memcmp+0x18>
 800ba2a:	2000      	movs	r0, #0
 800ba2c:	4770      	bx	lr
 800ba2e:	3001      	adds	r0, #1
 800ba30:	4290      	cmp	r0, r2
 800ba32:	d102      	bne.n	800ba3a <memcmp+0x1a>
 800ba34:	2000      	movs	r0, #0
 800ba36:	e006      	b.n	800ba46 <memcmp+0x26>
 800ba38:	b510      	push	{r4, lr}
 800ba3a:	7803      	ldrb	r3, [r0, #0]
 800ba3c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ba40:	42a3      	cmp	r3, r4
 800ba42:	d0f4      	beq.n	800ba2e <memcmp+0xe>
 800ba44:	1b18      	subs	r0, r3, r4
 800ba46:	bd10      	pop	{r4, pc}

0800ba48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800ba48:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ba4a:	88c6      	ldrh	r6, [r0, #6]
 800ba4c:	8885      	ldrh	r5, [r0, #4]
 800ba4e:	42ae      	cmp	r6, r5
 800ba50:	d216      	bcs.n	800ba80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800ba52:	4604      	mov	r4, r0
 800ba54:	6800      	ldr	r0, [r0, #0]
 800ba56:	1bad      	subs	r5, r5, r6
 800ba58:	4430      	add	r0, r6
 800ba5a:	7a26      	ldrb	r6, [r4, #8]
 800ba5c:	b923      	cbnz	r3, 800ba68 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800ba5e:	b926      	cbnz	r6, 800ba6a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800ba60:	9200      	str	r2, [sp, #0]
 800ba62:	460b      	mov	r3, r1
 800ba64:	4a09      	ldr	r2, [pc, #36]	; (800ba8c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800ba66:	e003      	b.n	800ba70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ba68:	b166      	cbz	r6, 800ba84 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800ba6a:	460b      	mov	r3, r1
 800ba6c:	9200      	str	r2, [sp, #0]
 800ba6e:	4a08      	ldr	r2, [pc, #32]	; (800ba90 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800ba70:	4629      	mov	r1, r5
 800ba72:	f7fd fc2d 	bl	80092d0 <snprintf>
 800ba76:	4285      	cmp	r5, r0
 800ba78:	bfa2      	ittt	ge
 800ba7a:	88e3      	ldrhge	r3, [r4, #6]
 800ba7c:	181b      	addge	r3, r3, r0
 800ba7e:	80e3      	strhge	r3, [r4, #6]
 800ba80:	b002      	add	sp, #8
 800ba82:	bd70      	pop	{r4, r5, r6, pc}
 800ba84:	9200      	str	r2, [sp, #0]
 800ba86:	460b      	mov	r3, r1
 800ba88:	4a02      	ldr	r2, [pc, #8]	; (800ba94 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ba8a:	e7f1      	b.n	800ba70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ba8c:	08014948 	stmdaeq	r1, {r3, r6, r8, fp, lr}
 800ba90:	0801493d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, lr}
 800ba94:	08014949 	stmdaeq	r1, {r0, r3, r6, r8, fp, lr}

0800ba98 <E131Params::E131Params(E131ParamsStore*)>:
 800ba98:	b510      	push	{r4, lr}
 800ba9a:	2219      	movs	r2, #25
 800ba9c:	4604      	mov	r4, r0
 800ba9e:	f840 1b04 	str.w	r1, [r0], #4
 800baa2:	2100      	movs	r1, #0
 800baa4:	f006 fc30 	bl	8012308 <memset>
 800baa8:	2201      	movs	r2, #1
 800baaa:	72e2      	strb	r2, [r4, #11]
 800baac:	2202      	movs	r2, #2
 800baae:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800bab2:	f8a4 200d 	strh.w	r2, [r4, #13]
 800bab6:	2203      	movs	r2, #3
 800bab8:	f8c4 301f 	str.w	r3, [r4, #31]
 800babc:	2300      	movs	r3, #0
 800babe:	2155      	movs	r1, #85	; 0x55
 800bac0:	f8a4 200f 	strh.w	r2, [r4, #15]
 800bac4:	2204      	movs	r2, #4
 800bac6:	7323      	strb	r3, [r4, #12]
 800bac8:	77a3      	strb	r3, [r4, #30]
 800baca:	4b04      	ldr	r3, [pc, #16]	; (800badc <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800bacc:	7761      	strb	r1, [r4, #29]
 800bace:	6819      	ldr	r1, [r3, #0]
 800bad0:	f8a4 2011 	strh.w	r2, [r4, #17]
 800bad4:	b901      	cbnz	r1, 800bad8 <E131Params::E131Params(E131ParamsStore*)+0x40>
 800bad6:	601a      	str	r2, [r3, #0]
 800bad8:	4620      	mov	r0, r4
 800bada:	bd10      	pop	{r4, pc}
 800badc:	20001e6c 	andcs	r1, r0, ip, ror #28

0800bae0 <E131Params::Load()>:
 800bae0:	b508      	push	{r3, lr}
 800bae2:	2300      	movs	r3, #0
 800bae4:	4601      	mov	r1, r0
 800bae6:	6043      	str	r3, [r0, #4]
 800bae8:	6800      	ldr	r0, [r0, #0]
 800baea:	b120      	cbz	r0, 800baf6 <E131Params::Load()+0x16>
 800baec:	6803      	ldr	r3, [r0, #0]
 800baee:	3104      	adds	r1, #4
 800baf0:	68db      	ldr	r3, [r3, #12]
 800baf2:	4798      	blx	r3
 800baf4:	2001      	movs	r0, #1
 800baf6:	bd08      	pop	{r3, pc}

0800baf8 <E131Params::Load(char const*, unsigned int)>:
 800baf8:	6803      	ldr	r3, [r0, #0]
 800bafa:	b1d3      	cbz	r3, 800bb32 <E131Params::Load(char const*, unsigned int)+0x3a>
 800bafc:	2300      	movs	r3, #0
 800bafe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb00:	460d      	mov	r5, r1
 800bb02:	4616      	mov	r6, r2
 800bb04:	4604      	mov	r4, r0
 800bb06:	6043      	str	r3, [r0, #4]
 800bb08:	4602      	mov	r2, r0
 800bb0a:	490a      	ldr	r1, [pc, #40]	; (800bb34 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800bb0c:	4668      	mov	r0, sp
 800bb0e:	f005 fda3 	bl	8011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bb12:	4632      	mov	r2, r6
 800bb14:	4629      	mov	r1, r5
 800bb16:	4668      	mov	r0, sp
 800bb18:	f005 fda2 	bl	8011660 <ReadConfigFile::Read(char const*, unsigned int)>
 800bb1c:	4621      	mov	r1, r4
 800bb1e:	f851 0b04 	ldr.w	r0, [r1], #4
 800bb22:	6803      	ldr	r3, [r0, #0]
 800bb24:	689b      	ldr	r3, [r3, #8]
 800bb26:	4798      	blx	r3
 800bb28:	4668      	mov	r0, sp
 800bb2a:	f005 fd98 	bl	801165e <ReadConfigFile::~ReadConfigFile()>
 800bb2e:	b002      	add	sp, #8
 800bb30:	bd70      	pop	{r4, r5, r6, pc}
 800bb32:	4770      	bx	lr
 800bb34:	0800bdcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, fp, ip, sp, pc}

0800bb38 <E131Params::callbackFunction(char const*)>:
 800bb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb3c:	460e      	mov	r6, r1
 800bb3e:	2708      	movs	r7, #8
 800bb40:	b087      	sub	sp, #28
 800bb42:	4604      	mov	r4, r0
 800bb44:	4997      	ldr	r1, [pc, #604]	; (800bda4 <E131Params::callbackFunction(char const*)+0x26c>)
 800bb46:	4630      	mov	r0, r6
 800bb48:	ab01      	add	r3, sp, #4
 800bb4a:	eb0d 0207 	add.w	r2, sp, r7
 800bb4e:	9701      	str	r7, [sp, #4]
 800bb50:	f005 fdba 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bb54:	bb68      	cbnz	r0, 800bbb2 <E131Params::callbackFunction(char const*)+0x7a>
 800bb56:	2204      	movs	r2, #4
 800bb58:	4993      	ldr	r1, [pc, #588]	; (800bda8 <E131Params::callbackFunction(char const*)+0x270>)
 800bb5a:	eb0d 0007 	add.w	r0, sp, r7
 800bb5e:	f7ff ff5f 	bl	800ba20 <memcmp>
 800bb62:	6865      	ldr	r5, [r4, #4]
 800bb64:	b1a0      	cbz	r0, 800bb90 <E131Params::callbackFunction(char const*)+0x58>
 800bb66:	2203      	movs	r2, #3
 800bb68:	4990      	ldr	r1, [pc, #576]	; (800bdac <E131Params::callbackFunction(char const*)+0x274>)
 800bb6a:	eb0d 0007 	add.w	r0, sp, r7
 800bb6e:	f7ff ff57 	bl	800ba20 <memcmp>
 800bb72:	b1b0      	cbz	r0, 800bba2 <E131Params::callbackFunction(char const*)+0x6a>
 800bb74:	2202      	movs	r2, #2
 800bb76:	498e      	ldr	r1, [pc, #568]	; (800bdb0 <E131Params::callbackFunction(char const*)+0x278>)
 800bb78:	eb0d 0007 	add.w	r0, sp, r7
 800bb7c:	f7ff ff50 	bl	800ba20 <memcmp>
 800bb80:	b198      	cbz	r0, 800bbaa <E131Params::callbackFunction(char const*)+0x72>
 800bb82:	463a      	mov	r2, r7
 800bb84:	498b      	ldr	r1, [pc, #556]	; (800bdb4 <E131Params::callbackFunction(char const*)+0x27c>)
 800bb86:	eb0d 0007 	add.w	r0, sp, r7
 800bb8a:	f7ff ff49 	bl	800ba20 <memcmp>
 800bb8e:	b170      	cbz	r0, 800bbae <E131Params::callbackFunction(char const*)+0x76>
 800bb90:	2300      	movs	r3, #0
 800bb92:	f025 0501 	bic.w	r5, r5, #1
 800bb96:	6065      	str	r5, [r4, #4]
 800bb98:	f8a4 3009 	strh.w	r3, [r4, #9]
 800bb9c:	b007      	add	sp, #28
 800bb9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bba2:	2301      	movs	r3, #1
 800bba4:	f045 0501 	orr.w	r5, r5, #1
 800bba8:	e7f5      	b.n	800bb96 <E131Params::callbackFunction(char const*)+0x5e>
 800bbaa:	2302      	movs	r3, #2
 800bbac:	e7fa      	b.n	800bba4 <E131Params::callbackFunction(char const*)+0x6c>
 800bbae:	2303      	movs	r3, #3
 800bbb0:	e7f8      	b.n	800bba4 <E131Params::callbackFunction(char const*)+0x6c>
 800bbb2:	2500      	movs	r5, #0
 800bbb4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 800bdb8 <E131Params::callbackFunction(char const*)+0x280>
 800bbb8:	f8df 8200 	ldr.w	r8, [pc, #512]	; 800bdbc <E131Params::callbackFunction(char const*)+0x284>
 800bbbc:	f8df a200 	ldr.w	sl, [pc, #512]	; 800bdc0 <E131Params::callbackFunction(char const*)+0x288>
 800bbc0:	f8df b200 	ldr.w	fp, [pc, #512]	; 800bdc4 <E131Params::callbackFunction(char const*)+0x28c>
 800bbc4:	4649      	mov	r1, r9
 800bbc6:	4630      	mov	r0, r6
 800bbc8:	f10d 0202 	add.w	r2, sp, #2
 800bbcc:	f005 fe39 	bl	8011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bbd0:	b9d8      	cbnz	r0, 800bc0a <E131Params::callbackFunction(char const*)+0xd2>
 800bbd2:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800bbd6:	2310      	movs	r3, #16
 800bbd8:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800bbdc:	6861      	ldr	r1, [r4, #4]
 800bbde:	1e42      	subs	r2, r0, #1
 800bbe0:	b292      	uxth	r2, r2
 800bbe2:	42b2      	cmp	r2, r6
 800bbe4:	fa03 f305 	lsl.w	r3, r3, r5
 800bbe8:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800bbec:	d907      	bls.n	800bbfe <E131Params::callbackFunction(char const*)+0xc6>
 800bbee:	3501      	adds	r5, #1
 800bbf0:	4422      	add	r2, r4
 800bbf2:	ea21 0103 	bic.w	r1, r1, r3
 800bbf6:	f8a2 500b 	strh.w	r5, [r2, #11]
 800bbfa:	6061      	str	r1, [r4, #4]
 800bbfc:	e7ce      	b.n	800bb9c <E131Params::callbackFunction(char const*)+0x64>
 800bbfe:	4422      	add	r2, r4
 800bc00:	f8a2 000b 	strh.w	r0, [r2, #11]
 800bc04:	430b      	orrs	r3, r1
 800bc06:	6063      	str	r3, [r4, #4]
 800bc08:	e7c8      	b.n	800bb9c <E131Params::callbackFunction(char const*)+0x64>
 800bc0a:	2712      	movs	r7, #18
 800bc0c:	2303      	movs	r3, #3
 800bc0e:	436f      	muls	r7, r5
 800bc10:	9301      	str	r3, [sp, #4]
 800bc12:	4630      	mov	r0, r6
 800bc14:	ab01      	add	r3, sp, #4
 800bc16:	aa02      	add	r2, sp, #8
 800bc18:	eb0a 0107 	add.w	r1, sl, r7
 800bc1c:	f005 fd54 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bc20:	bb00      	cbnz	r0, 800bc64 <E131Params::callbackFunction(char const*)+0x12c>
 800bc22:	f44f 7380 	mov.w	r3, #256	; 0x100
 800bc26:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800bc2a:	40ab      	lsls	r3, r5
 800bc2c:	f041 0120 	orr.w	r1, r1, #32
 800bc30:	296c      	cmp	r1, #108	; 0x6c
 800bc32:	6862      	ldr	r2, [r4, #4]
 800bc34:	4425      	add	r5, r4
 800bc36:	d10f      	bne.n	800bc58 <E131Params::callbackFunction(char const*)+0x120>
 800bc38:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800bc3c:	f041 0120 	orr.w	r1, r1, #32
 800bc40:	2974      	cmp	r1, #116	; 0x74
 800bc42:	d109      	bne.n	800bc58 <E131Params::callbackFunction(char const*)+0x120>
 800bc44:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800bc48:	f041 0120 	orr.w	r1, r1, #32
 800bc4c:	2970      	cmp	r1, #112	; 0x70
 800bc4e:	d103      	bne.n	800bc58 <E131Params::callbackFunction(char const*)+0x120>
 800bc50:	2101      	movs	r1, #1
 800bc52:	7529      	strb	r1, [r5, #20]
 800bc54:	4313      	orrs	r3, r2
 800bc56:	e7d6      	b.n	800bc06 <E131Params::callbackFunction(char const*)+0xce>
 800bc58:	2100      	movs	r1, #0
 800bc5a:	ea22 0203 	bic.w	r2, r2, r3
 800bc5e:	7529      	strb	r1, [r5, #20]
 800bc60:	6062      	str	r2, [r4, #4]
 800bc62:	e79b      	b.n	800bb9c <E131Params::callbackFunction(char const*)+0x64>
 800bc64:	2307      	movs	r3, #7
 800bc66:	4630      	mov	r0, r6
 800bc68:	9301      	str	r3, [sp, #4]
 800bc6a:	aa02      	add	r2, sp, #8
 800bc6c:	ab01      	add	r3, sp, #4
 800bc6e:	eb0b 0107 	add.w	r1, fp, r7
 800bc72:	f005 fd29 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bc76:	2800      	cmp	r0, #0
 800bc78:	d15e      	bne.n	800bd38 <E131Params::callbackFunction(char const*)+0x200>
 800bc7a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800bc7e:	f043 0320 	orr.w	r3, r3, #32
 800bc82:	2b69      	cmp	r3, #105	; 0x69
 800bc84:	d123      	bne.n	800bcce <E131Params::callbackFunction(char const*)+0x196>
 800bc86:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800bc8a:	f043 0320 	orr.w	r3, r3, #32
 800bc8e:	2b6e      	cmp	r3, #110	; 0x6e
 800bc90:	d146      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bc92:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bc96:	f043 0320 	orr.w	r3, r3, #32
 800bc9a:	2b70      	cmp	r3, #112	; 0x70
 800bc9c:	d140      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bc9e:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bca2:	f043 0320 	orr.w	r3, r3, #32
 800bca6:	2b75      	cmp	r3, #117	; 0x75
 800bca8:	d13a      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcaa:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bcae:	f043 0320 	orr.w	r3, r3, #32
 800bcb2:	3b74      	subs	r3, #116	; 0x74
 800bcb4:	bf18      	it	ne
 800bcb6:	2301      	movne	r3, #1
 800bcb8:	2103      	movs	r1, #3
 800bcba:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800bcbe:	006d      	lsls	r5, r5, #1
 800bcc0:	40a9      	lsls	r1, r5
 800bcc2:	ea22 0201 	bic.w	r2, r2, r1
 800bcc6:	bb6b      	cbnz	r3, 800bd24 <E131Params::callbackFunction(char const*)+0x1ec>
 800bcc8:	f8a4 201d 	strh.w	r2, [r4, #29]
 800bccc:	e766      	b.n	800bb9c <E131Params::callbackFunction(char const*)+0x64>
 800bcce:	2b64      	cmp	r3, #100	; 0x64
 800bcd0:	d126      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcd2:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800bcd6:	f043 0320 	orr.w	r3, r3, #32
 800bcda:	2b69      	cmp	r3, #105	; 0x69
 800bcdc:	d120      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcde:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bce2:	f043 0320 	orr.w	r3, r3, #32
 800bce6:	2b73      	cmp	r3, #115	; 0x73
 800bce8:	d11a      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcea:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bcee:	f043 0320 	orr.w	r3, r3, #32
 800bcf2:	2b61      	cmp	r3, #97	; 0x61
 800bcf4:	d114      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bcf6:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bcfa:	f043 0320 	orr.w	r3, r3, #32
 800bcfe:	2b62      	cmp	r3, #98	; 0x62
 800bd00:	d10e      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bd02:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800bd06:	f043 0320 	orr.w	r3, r3, #32
 800bd0a:	2b6c      	cmp	r3, #108	; 0x6c
 800bd0c:	d108      	bne.n	800bd20 <E131Params::callbackFunction(char const*)+0x1e8>
 800bd0e:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800bd12:	f043 0320 	orr.w	r3, r3, #32
 800bd16:	2b65      	cmp	r3, #101	; 0x65
 800bd18:	bf14      	ite	ne
 800bd1a:	2301      	movne	r3, #1
 800bd1c:	2302      	moveq	r3, #2
 800bd1e:	e7cb      	b.n	800bcb8 <E131Params::callbackFunction(char const*)+0x180>
 800bd20:	2301      	movs	r3, #1
 800bd22:	e7c9      	b.n	800bcb8 <E131Params::callbackFunction(char const*)+0x180>
 800bd24:	2b02      	cmp	r3, #2
 800bd26:	bf15      	itete	ne
 800bd28:	2301      	movne	r3, #1
 800bd2a:	40ab      	lsleq	r3, r5
 800bd2c:	fa03 f505 	lslne.w	r5, r3, r5
 800bd30:	431a      	orreq	r2, r3
 800bd32:	bf18      	it	ne
 800bd34:	432a      	orrne	r2, r5
 800bd36:	e7c7      	b.n	800bcc8 <E131Params::callbackFunction(char const*)+0x190>
 800bd38:	4641      	mov	r1, r8
 800bd3a:	4630      	mov	r0, r6
 800bd3c:	f10d 0201 	add.w	r2, sp, #1
 800bd40:	f005 fdc6 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bd44:	b998      	cbnz	r0, 800bd6e <E131Params::callbackFunction(char const*)+0x236>
 800bd46:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bd4a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800bd4e:	40aa      	lsls	r2, r5
 800bd50:	1e48      	subs	r0, r1, #1
 800bd52:	b2c0      	uxtb	r0, r0
 800bd54:	28c7      	cmp	r0, #199	; 0xc7
 800bd56:	6863      	ldr	r3, [r4, #4]
 800bd58:	4425      	add	r5, r4
 800bd5a:	d803      	bhi.n	800bd64 <E131Params::callbackFunction(char const*)+0x22c>
 800bd5c:	2964      	cmp	r1, #100	; 0x64
 800bd5e:	d001      	beq.n	800bd64 <E131Params::callbackFunction(char const*)+0x22c>
 800bd60:	77e9      	strb	r1, [r5, #31]
 800bd62:	e777      	b.n	800bc54 <E131Params::callbackFunction(char const*)+0x11c>
 800bd64:	2164      	movs	r1, #100	; 0x64
 800bd66:	ea23 0302 	bic.w	r3, r3, r2
 800bd6a:	77e9      	strb	r1, [r5, #31]
 800bd6c:	e74b      	b.n	800bc06 <E131Params::callbackFunction(char const*)+0xce>
 800bd6e:	3501      	adds	r5, #1
 800bd70:	2d04      	cmp	r5, #4
 800bd72:	f109 0910 	add.w	r9, r9, #16
 800bd76:	f108 0812 	add.w	r8, r8, #18
 800bd7a:	f47f af23 	bne.w	800bbc4 <E131Params::callbackFunction(char const*)+0x8c>
 800bd7e:	4630      	mov	r0, r6
 800bd80:	4911      	ldr	r1, [pc, #68]	; (800bdc8 <E131Params::callbackFunction(char const*)+0x290>)
 800bd82:	f10d 0201 	add.w	r2, sp, #1
 800bd86:	f005 fda3 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bd8a:	2800      	cmp	r0, #0
 800bd8c:	f47f af06 	bne.w	800bb9c <E131Params::callbackFunction(char const*)+0x64>
 800bd90:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bd94:	6863      	ldr	r3, [r4, #4]
 800bd96:	b112      	cbz	r2, 800bd9e <E131Params::callbackFunction(char const*)+0x266>
 800bd98:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800bd9c:	e733      	b.n	800bc06 <E131Params::callbackFunction(char const*)+0xce>
 800bd9e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800bda2:	e730      	b.n	800bc06 <E131Params::callbackFunction(char const*)+0xce>
 800bda4:	08016b29 	stmdaeq	r1, {r0, r3, r5, r8, r9, fp, sp, lr}
 800bda8:	080157d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sl, ip, lr}
 800bdac:	080157db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, lr}
 800bdb0:	08014aae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, fp, lr}
 800bdb4:	080157df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, ip, lr}
 800bdb8:	08016a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, sp, lr}
 800bdbc:	0801582c 	stmdaeq	r1, {r2, r3, r5, fp, ip, lr}
 800bdc0:	08016ab9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, fp, sp, lr}
 800bdc4:	08016b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, sp, lr}
 800bdc8:	08016b13 	stmdaeq	r1, {r0, r1, r4, r8, r9, fp, sp, lr}

0800bdcc <E131Params::staticCallbackFunction(void*, char const*)>:
 800bdcc:	f7ff beb4 	b.w	800bb38 <E131Params::callbackFunction(char const*)>

0800bdd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800bdd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdd4:	4604      	mov	r4, r0
 800bdd6:	4615      	mov	r5, r2
 800bdd8:	461e      	mov	r6, r3
 800bdda:	b087      	sub	sp, #28
 800bddc:	3004      	adds	r0, #4
 800bdde:	2900      	cmp	r1, #0
 800bde0:	d05f      	beq.n	800bea2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800bde2:	221f      	movs	r2, #31
 800bde4:	f006 fa79 	bl	80122da <memmove>
 800bde8:	4633      	mov	r3, r6
 800bdea:	462a      	mov	r2, r5
 800bdec:	4990      	ldr	r1, [pc, #576]	; (800c030 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800bdee:	a803      	add	r0, sp, #12
 800bdf0:	f005 fb92 	bl	8011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bdf4:	2500      	movs	r5, #0
 800bdf6:	4f8f      	ldr	r7, [pc, #572]	; (800c034 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800bdf8:	4e8f      	ldr	r6, [pc, #572]	; (800c038 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800bdfa:	f8df 8240 	ldr.w	r8, [pc, #576]	; 800c03c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800bdfe:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800c040 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>
 800be02:	f8d8 2000 	ldr.w	r2, [r8]
 800be06:	6863      	ldr	r3, [r4, #4]
 800be08:	42aa      	cmp	r2, r5
 800be0a:	d851      	bhi.n	800beb0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800be0c:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800be10:	4a8c      	ldr	r2, [pc, #560]	; (800c044 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800be12:	f003 0301 	and.w	r3, r3, #1
 800be16:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800be1a:	a803      	add	r0, sp, #12
 800be1c:	498a      	ldr	r1, [pc, #552]	; (800c048 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800be1e:	f7ff fe13 	bl	800ba48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800be22:	498a      	ldr	r1, [pc, #552]	; (800c04c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800be24:	a803      	add	r0, sp, #12
 800be26:	f005 fbfd 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800be2a:	2500      	movs	r5, #0
 800be2c:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800be30:	4e87      	ldr	r6, [pc, #540]	; (800c050 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800be32:	f8df 9220 	ldr.w	r9, [pc, #544]	; 800c054 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800be36:	f8df a220 	ldr.w	sl, [pc, #544]	; 800c058 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>
 800be3a:	f104 0713 	add.w	r7, r4, #19
 800be3e:	f8d8 3000 	ldr.w	r3, [r8]
 800be42:	42ab      	cmp	r3, r5
 800be44:	d87f      	bhi.n	800bf46 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800be46:	4985      	ldr	r1, [pc, #532]	; (800c05c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800be48:	a803      	add	r0, sp, #12
 800be4a:	f005 fbeb 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800be4e:	2700      	movs	r7, #0
 800be50:	4e83      	ldr	r6, [pc, #524]	; (800c060 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800be52:	f8df a210 	ldr.w	sl, [pc, #528]	; 800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800be56:	f8df b210 	ldr.w	fp, [pc, #528]	; 800c068 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800be5a:	f104 091e 	add.w	r9, r4, #30
 800be5e:	f8d8 3000 	ldr.w	r3, [r8]
 800be62:	42bb      	cmp	r3, r7
 800be64:	f200 8083 	bhi.w	800bf6e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800be68:	4980      	ldr	r1, [pc, #512]	; (800c06c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800be6a:	a803      	add	r0, sp, #12
 800be6c:	f005 fbda 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800be70:	6863      	ldr	r3, [r4, #4]
 800be72:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be76:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800be7a:	42a2      	cmp	r2, r4
 800be7c:	f080 80b8 	bcs.w	800bff0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800be80:	9803      	ldr	r0, [sp, #12]
 800be82:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800be86:	4410      	add	r0, r2
 800be88:	eba4 0402 	sub.w	r4, r4, r2
 800be8c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800be90:	f040 809d 	bne.w	800bfce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800be94:	2a00      	cmp	r2, #0
 800be96:	f040 809b 	bne.w	800bfd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800be9a:	9200      	str	r2, [sp, #0]
 800be9c:	4b74      	ldr	r3, [pc, #464]	; (800c070 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800be9e:	4a72      	ldr	r2, [pc, #456]	; (800c068 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800bea0:	e09c      	b.n	800bfdc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800bea2:	6823      	ldr	r3, [r4, #0]
 800bea4:	4601      	mov	r1, r0
 800bea6:	681a      	ldr	r2, [r3, #0]
 800bea8:	4618      	mov	r0, r3
 800beaa:	68d2      	ldr	r2, [r2, #12]
 800beac:	4790      	blx	r2
 800beae:	e79b      	b.n	800bde8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800beb0:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800beb4:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800beb8:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800bebc:	45dc      	cmp	ip, fp
 800bebe:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800bec2:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800bec6:	d221      	bcs.n	800bf0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800bec8:	2110      	movs	r1, #16
 800beca:	9803      	ldr	r0, [sp, #12]
 800becc:	40a9      	lsls	r1, r5
 800bece:	ea31 0303 	bics.w	r3, r1, r3
 800bed2:	4460      	add	r0, ip
 800bed4:	ebab 0b0c 	sub.w	fp, fp, ip
 800bed8:	f89d c014 	ldrb.w	ip, [sp, #20]
 800bedc:	d006      	beq.n	800beec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800bede:	f1bc 0f00 	cmp.w	ip, #0
 800bee2:	d106      	bne.n	800bef2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800bee4:	9200      	str	r2, [sp, #0]
 800bee6:	4633      	mov	r3, r6
 800bee8:	4a5f      	ldr	r2, [pc, #380]	; (800c068 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800beea:	e005      	b.n	800bef8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800beec:	f1bc 0f00 	cmp.w	ip, #0
 800bef0:	d023      	beq.n	800bf3a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800bef2:	9200      	str	r2, [sp, #0]
 800bef4:	4633      	mov	r3, r6
 800bef6:	464a      	mov	r2, r9
 800bef8:	4659      	mov	r1, fp
 800befa:	f7fd f9e9 	bl	80092d0 <snprintf>
 800befe:	4583      	cmp	fp, r0
 800bf00:	bfa2      	ittt	ge
 800bf02:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800bf06:	18c0      	addge	r0, r0, r3
 800bf08:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800bf0c:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800bf10:	fa23 f30a 	lsr.w	r3, r3, sl
 800bf14:	f013 0303 	ands.w	r3, r3, #3
 800bf18:	d013      	beq.n	800bf42 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800bf1a:	4a56      	ldr	r2, [pc, #344]	; (800c074 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800bf1c:	4956      	ldr	r1, [pc, #344]	; (800c078 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800bf1e:	2b02      	cmp	r3, #2
 800bf20:	bf08      	it	eq
 800bf22:	460a      	moveq	r2, r1
 800bf24:	3b01      	subs	r3, #1
 800bf26:	4639      	mov	r1, r7
 800bf28:	bf18      	it	ne
 800bf2a:	2301      	movne	r3, #1
 800bf2c:	a803      	add	r0, sp, #12
 800bf2e:	f7ff fd8b 	bl	800ba48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bf32:	3501      	adds	r5, #1
 800bf34:	3712      	adds	r7, #18
 800bf36:	3610      	adds	r6, #16
 800bf38:	e763      	b.n	800be02 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800bf3a:	9200      	str	r2, [sp, #0]
 800bf3c:	4633      	mov	r3, r6
 800bf3e:	4a49      	ldr	r2, [pc, #292]	; (800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800bf40:	e7da      	b.n	800bef8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800bf42:	4a4e      	ldr	r2, [pc, #312]	; (800c07c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800bf44:	e7ee      	b.n	800bf24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800bf46:	6861      	ldr	r1, [r4, #4]
 800bf48:	fa0b f305 	lsl.w	r3, fp, r5
 800bf4c:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800bf50:	438b      	bics	r3, r1
 800bf52:	bf0c      	ite	eq
 800bf54:	2301      	moveq	r3, #1
 800bf56:	2300      	movne	r3, #0
 800bf58:	4631      	mov	r1, r6
 800bf5a:	2a00      	cmp	r2, #0
 800bf5c:	bf0c      	ite	eq
 800bf5e:	464a      	moveq	r2, r9
 800bf60:	4652      	movne	r2, sl
 800bf62:	a803      	add	r0, sp, #12
 800bf64:	f7ff fd70 	bl	800ba48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bf68:	3501      	adds	r5, #1
 800bf6a:	3612      	adds	r6, #18
 800bf6c:	e767      	b.n	800be3e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800bf6e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800bf72:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800bf76:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800bf7a:	42a9      	cmp	r1, r5
 800bf7c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800bf80:	d21e      	bcs.n	800bfc0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800bf82:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bf86:	9803      	ldr	r0, [sp, #12]
 800bf88:	40ba      	lsls	r2, r7
 800bf8a:	ea32 0c0c 	bics.w	ip, r2, ip
 800bf8e:	4408      	add	r0, r1
 800bf90:	eba5 0501 	sub.w	r5, r5, r1
 800bf94:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800bf98:	d004      	beq.n	800bfa4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800bf9a:	b921      	cbnz	r1, 800bfa6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800bf9c:	9300      	str	r3, [sp, #0]
 800bf9e:	465a      	mov	r2, fp
 800bfa0:	4633      	mov	r3, r6
 800bfa2:	e003      	b.n	800bfac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800bfa4:	b179      	cbz	r1, 800bfc6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800bfa6:	9300      	str	r3, [sp, #0]
 800bfa8:	4633      	mov	r3, r6
 800bfaa:	4a25      	ldr	r2, [pc, #148]	; (800c040 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800bfac:	4629      	mov	r1, r5
 800bfae:	f7fd f98f 	bl	80092d0 <snprintf>
 800bfb2:	4285      	cmp	r5, r0
 800bfb4:	bfa2      	ittt	ge
 800bfb6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800bfba:	18c0      	addge	r0, r0, r3
 800bfbc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800bfc0:	3701      	adds	r7, #1
 800bfc2:	3612      	adds	r6, #18
 800bfc4:	e74b      	b.n	800be5e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800bfc6:	9300      	str	r3, [sp, #0]
 800bfc8:	4652      	mov	r2, sl
 800bfca:	4633      	mov	r3, r6
 800bfcc:	e7ee      	b.n	800bfac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800bfce:	b34a      	cbz	r2, 800c024 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800bfd0:	3b00      	subs	r3, #0
 800bfd2:	bf18      	it	ne
 800bfd4:	2301      	movne	r3, #1
 800bfd6:	4a1a      	ldr	r2, [pc, #104]	; (800c040 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800bfd8:	9300      	str	r3, [sp, #0]
 800bfda:	4b25      	ldr	r3, [pc, #148]	; (800c070 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800bfdc:	4621      	mov	r1, r4
 800bfde:	f7fd f977 	bl	80092d0 <snprintf>
 800bfe2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800bfe6:	4284      	cmp	r4, r0
 800bfe8:	bfa4      	itt	ge
 800bfea:	181b      	addge	r3, r3, r0
 800bfec:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800bff0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800bff4:	b17b      	cbz	r3, 800c016 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800bff6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800bffa:	9b03      	ldr	r3, [sp, #12]
 800bffc:	4413      	add	r3, r2
 800bffe:	227d      	movs	r2, #125	; 0x7d
 800c000:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c004:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c008:	9903      	ldr	r1, [sp, #12]
 800c00a:	54ca      	strb	r2, [r1, r3]
 800c00c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c010:	3301      	adds	r3, #1
 800c012:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c016:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c01a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c01c:	601a      	str	r2, [r3, #0]
 800c01e:	b007      	add	sp, #28
 800c020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c024:	2301      	movs	r3, #1
 800c026:	4a0f      	ldr	r2, [pc, #60]	; (800c064 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c028:	9300      	str	r3, [sp, #0]
 800c02a:	4b11      	ldr	r3, [pc, #68]	; (800c070 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c02c:	e7d6      	b.n	800bfdc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800c02e:	bf00      	nop
 800c030:	08015874 	stmdaeq	r1, {r2, r4, r5, r6, fp, ip, lr}
 800c034:	08016b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, sp, lr}
 800c038:	08016a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, sp, lr}
 800c03c:	20001e6c 	andcs	r1, r0, ip, ror #28
 800c040:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 800c044:	0801581c 	stmdaeq	r1, {r2, r3, r4, fp, ip, lr}
 800c048:	08016b29 	stmdaeq	r1, {r0, r3, r5, r8, r9, fp, sp, lr}
 800c04c:	08015805 	stmdaeq	r1, {r0, r2, fp, ip, lr}
 800c050:	08016ab9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, fp, sp, lr}
 800c054:	08015801 	stmdaeq	r1, {r0, fp, ip, lr}
 800c058:	080157fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800c05c:	08015810 	stmdaeq	r1, {r4, fp, ip, lr}
 800c060:	0801582c 	stmdaeq	r1, {r2, r3, r5, fp, ip, lr}
 800c064:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}
 800c068:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800c06c:	080146f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, lr}
 800c070:	08016b13 	stmdaeq	r1, {r0, r1, r4, r8, r9, fp, sp, lr}
 800c074:	080157ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip, lr}
 800c078:	080157f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, sl, ip, lr}
 800c07c:	080157e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, ip, lr}

0800c080 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800c080:	b513      	push	{r0, r1, r4, lr}
 800c082:	6804      	ldr	r4, [r0, #0]
 800c084:	b914      	cbnz	r4, 800c08c <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800c086:	601c      	str	r4, [r3, #0]
 800c088:	b002      	add	sp, #8
 800c08a:	bd10      	pop	{r4, pc}
 800c08c:	9300      	str	r3, [sp, #0]
 800c08e:	4613      	mov	r3, r2
 800c090:	460a      	mov	r2, r1
 800c092:	2100      	movs	r1, #0
 800c094:	f7ff fe9c 	bl	800bdd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800c098:	e7f6      	b.n	800c088 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800c09c <E131Params::Set(unsigned int)>:
 800c09c:	1e4b      	subs	r3, r1, #1
 800c09e:	2b02      	cmp	r3, #2
 800c0a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c0a4:	d807      	bhi.n	800c0b6 <E131Params::Set(unsigned int)+0x1a>
 800c0a6:	4a26      	ldr	r2, [pc, #152]	; (800c140 <E131Params::Set(unsigned int)+0xa4>)
 800c0a8:	f1c1 0304 	rsb	r3, r1, #4
 800c0ac:	6814      	ldr	r4, [r2, #0]
 800c0ae:	42a3      	cmp	r3, r4
 800c0b0:	bf94      	ite	ls
 800c0b2:	6013      	strls	r3, [r2, #0]
 800c0b4:	6014      	strhi	r4, [r2, #0]
 800c0b6:	6843      	ldr	r3, [r0, #4]
 800c0b8:	b1eb      	cbz	r3, 800c0f6 <E131Params::Set(unsigned int)+0x5a>
 800c0ba:	4b22      	ldr	r3, [pc, #136]	; (800c144 <E131Params::Set(unsigned int)+0xa8>)
 800c0bc:	2244      	movs	r2, #68	; 0x44
 800c0be:	681c      	ldr	r4, [r3, #0]
 800c0c0:	4b1f      	ldr	r3, [pc, #124]	; (800c140 <E131Params::Set(unsigned int)+0xa4>)
 800c0c2:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800c0c6:	681f      	ldr	r7, [r3, #0]
 800c0c8:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800c0cc:	2300      	movs	r3, #0
 800c0ce:	f04f 090c 	mov.w	r9, #12
 800c0d2:	fb02 4201 	mla	r2, r2, r1, r4
 800c0d6:	f100 0514 	add.w	r5, r0, #20
 800c0da:	f204 682d 	addw	r8, r4, #1581	; 0x62d
 800c0de:	429f      	cmp	r7, r3
 800c0e0:	6846      	ldr	r6, [r0, #4]
 800c0e2:	d10a      	bne.n	800c0fa <E131Params::Set(unsigned int)+0x5e>
 800c0e4:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800c0e8:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800c0ec:	04b3      	lsls	r3, r6, #18
 800c0ee:	bf44      	itt	mi
 800c0f0:	2301      	movmi	r3, #1
 800c0f2:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800c0f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0fa:	eb03 0a01 	add.w	sl, r3, r1
 800c0fe:	f1ba 0f03 	cmp.w	sl, #3
 800c102:	d8ef      	bhi.n	800c0e4 <E131Params::Set(unsigned int)+0x48>
 800c104:	fa0c fa03 	lsl.w	sl, ip, r3
 800c108:	ea3a 0a06 	bics.w	sl, sl, r6
 800c10c:	bf04      	itt	eq
 800c10e:	f895 a000 	ldrbeq.w	sl, [r5]
 800c112:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800c116:	fa0e fa03 	lsl.w	sl, lr, r3
 800c11a:	ea3a 0a06 	bics.w	sl, sl, r6
 800c11e:	d10a      	bne.n	800c136 <E131Params::Set(unsigned int)+0x9a>
 800c120:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800c124:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800c128:	b2f6      	uxtb	r6, r6
 800c12a:	2ec7      	cmp	r6, #199	; 0xc7
 800c12c:	bf9c      	itt	ls
 800c12e:	fb09 f603 	mulls.w	r6, r9, r3
 800c132:	f808 a006 	strbls.w	sl, [r8, r6]
 800c136:	3301      	adds	r3, #1
 800c138:	3501      	adds	r5, #1
 800c13a:	3244      	adds	r2, #68	; 0x44
 800c13c:	e7cf      	b.n	800c0de <E131Params::Set(unsigned int)+0x42>
 800c13e:	bf00      	nop
 800c140:	20001e6c 	andcs	r1, r0, ip, ror #28
 800c144:	20001e64 	andcs	r1, r0, r4, ror #28

0800c148 <E131Params::Dump()>:
 800c148:	4770      	bx	lr

0800c14a <uuid_unparse_x>:
 800c14a:	4603      	mov	r3, r0
 800c14c:	b530      	push	{r4, r5, lr}
 800c14e:	4608      	mov	r0, r1
 800c150:	4611      	mov	r1, r2
 800c152:	681a      	ldr	r2, [r3, #0]
 800c154:	b08f      	sub	sp, #60	; 0x3c
 800c156:	ba12      	rev	r2, r2
 800c158:	920a      	str	r2, [sp, #40]	; 0x28
 800c15a:	889a      	ldrh	r2, [r3, #4]
 800c15c:	891c      	ldrh	r4, [r3, #8]
 800c15e:	ba52      	rev16	r2, r2
 800c160:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c164:	88da      	ldrh	r2, [r3, #6]
 800c166:	ba64      	rev16	r4, r4
 800c168:	ba52      	rev16	r2, r2
 800c16a:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800c16e:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800c172:	f103 020a 	add.w	r2, r3, #10
 800c176:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800c17a:	3310      	adds	r3, #16
 800c17c:	4293      	cmp	r3, r2
 800c17e:	d122      	bne.n	800c1c6 <uuid_unparse_x+0x7c>
 800c180:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800c184:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c188:	9208      	str	r2, [sp, #32]
 800c18a:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800c18e:	0a1b      	lsrs	r3, r3, #8
 800c190:	9207      	str	r2, [sp, #28]
 800c192:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800c196:	9301      	str	r3, [sp, #4]
 800c198:	9206      	str	r2, [sp, #24]
 800c19a:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800c19e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800c1a2:	9205      	str	r2, [sp, #20]
 800c1a4:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800c1a8:	9300      	str	r3, [sp, #0]
 800c1aa:	9204      	str	r2, [sp, #16]
 800c1ac:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800c1b0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c1b4:	9203      	str	r2, [sp, #12]
 800c1b6:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800c1ba:	9202      	str	r2, [sp, #8]
 800c1bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c1be:	f7fd f86f 	bl	80092a0 <sprintf>
 800c1c2:	b00f      	add	sp, #60	; 0x3c
 800c1c4:	bd30      	pop	{r4, r5, pc}
 800c1c6:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c1ca:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c1ce:	e7d5      	b.n	800c17c <uuid_unparse_x+0x32>

0800c1d0 <uuid_unparse>:
 800c1d0:	4a01      	ldr	r2, [pc, #4]	; (800c1d8 <uuid_unparse+0x8>)
 800c1d2:	f7ff bfba 	b.w	800c14a <uuid_unparse_x>
 800c1d6:	bf00      	nop
 800c1d8:	0801588b 	stmdaeq	r1, {r0, r1, r3, r7, fp, ip, lr}

0800c1dc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800c1dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1de:	4604      	mov	r4, r0
 800c1e0:	460e      	mov	r6, r1
 800c1e2:	4611      	mov	r1, r2
 800c1e4:	4617      	mov	r7, r2
 800c1e6:	461d      	mov	r5, r3
 800c1e8:	f000 fdb4 	bl	800cd54 <PixelConfiguration::Validate(unsigned int&)>
 800c1ec:	7d62      	ldrb	r2, [r4, #21]
 800c1ee:	b94a      	cbnz	r2, 800c204 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800c1f0:	6823      	ldr	r3, [r4, #0]
 800c1f2:	b11b      	cbz	r3, 800c1fc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800c1f4:	3b0b      	subs	r3, #11
 800c1f6:	2b01      	cmp	r3, #1
 800c1f8:	bf88      	it	hi
 800c1fa:	6022      	strhi	r2, [r4, #0]
 800c1fc:	4639      	mov	r1, r7
 800c1fe:	4620      	mov	r0, r4
 800c200:	f000 fda8 	bl	800cd54 <PixelConfiguration::Validate(unsigned int&)>
 800c204:	6823      	ldr	r3, [r4, #0]
 800c206:	2b07      	cmp	r3, #7
 800c208:	bf15      	itete	ne
 800c20a:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800c20e:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800c212:	23aa      	movne	r3, #170	; 0xaa
 800c214:	2380      	moveq	r3, #128	; 0x80
 800c216:	bf14      	ite	ne
 800c218:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800c21c:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800c220:	e9c5 3100 	strd	r3, r1, [r5]
 800c224:	6a21      	ldr	r1, [r4, #32]
 800c226:	60aa      	str	r2, [r5, #8]
 800c228:	6862      	ldr	r2, [r4, #4]
 800c22a:	b109      	cbz	r1, 800c230 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800c22c:	4291      	cmp	r1, r2
 800c22e:	d900      	bls.n	800c232 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800c230:	6222      	str	r2, [r4, #32]
 800c232:	6a21      	ldr	r1, [r4, #32]
 800c234:	69e0      	ldr	r0, [r4, #28]
 800c236:	fbb2 f2f1 	udiv	r2, r2, r1
 800c23a:	3301      	adds	r3, #1
 800c23c:	6262      	str	r2, [r4, #36]	; 0x24
 800c23e:	42b0      	cmp	r0, r6
 800c240:	fbb2 f2f3 	udiv	r2, r2, r3
 800c244:	bf28      	it	cs
 800c246:	4630      	movcs	r0, r6
 800c248:	1c53      	adds	r3, r2, #1
 800c24a:	2e01      	cmp	r6, #1
 800c24c:	62a3      	str	r3, [r4, #40]	; 0x28
 800c24e:	bf1c      	itt	ne
 800c250:	4343      	mulne	r3, r0
 800c252:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800c256:	61e0      	str	r0, [r4, #28]
 800c258:	60ea      	str	r2, [r5, #12]
 800c25a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c25c <PixelDmxConfiguration::Print()>:
 800c25c:	b510      	push	{r4, lr}
 800c25e:	4604      	mov	r4, r0
 800c260:	f000 fe0e 	bl	800ce80 <PixelConfiguration::Print()>
 800c264:	4806      	ldr	r0, [pc, #24]	; (800c280 <PixelDmxConfiguration::Print()+0x24>)
 800c266:	f7fd f80b 	bl	8009280 <printf>
 800c26a:	69e1      	ldr	r1, [r4, #28]
 800c26c:	4805      	ldr	r0, [pc, #20]	; (800c284 <PixelDmxConfiguration::Print()+0x28>)
 800c26e:	f7fd f807 	bl	8009280 <printf>
 800c272:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800c276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c27a:	4803      	ldr	r0, [pc, #12]	; (800c288 <PixelDmxConfiguration::Print()+0x2c>)
 800c27c:	f7fd b800 	b.w	8009280 <printf>
 800c280:	080158bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, ip, lr}
 800c284:	080158d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, fp, ip, lr}
 800c288:	080158e4 	stmdaeq	r1, {r2, r5, r6, r7, fp, ip, lr}

0800c28c <WS28xxDmx::GetDmxStartAddress()>:
 800c28c:	f8b0 0048 	ldrh.w	r0, [r0, #72]	; 0x48
 800c290:	4770      	bx	lr

0800c292 <WS28xxDmx::GetDmxFootprint()>:
 800c292:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800c296:	4770      	bx	lr

0800c298 <WS28xxDmx::~WS28xxDmx()>:
 800c298:	b538      	push	{r3, r4, r5, lr}
 800c29a:	4b06      	ldr	r3, [pc, #24]	; (800c2b4 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800c29c:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800c29e:	4604      	mov	r4, r0
 800c2a0:	6003      	str	r3, [r0, #0]
 800c2a2:	b12d      	cbz	r5, 800c2b0 <WS28xxDmx::~WS28xxDmx()+0x18>
 800c2a4:	4628      	mov	r0, r5
 800c2a6:	f001 ff0f 	bl	800e0c8 <WS28xx::~WS28xx()>
 800c2aa:	4628      	mov	r0, r5
 800c2ac:	f005 ff7a 	bl	80121a4 <operator delete(void*)>
 800c2b0:	4620      	mov	r0, r4
 800c2b2:	bd38      	pop	{r3, r4, r5, pc}
 800c2b4:	08015910 	stmdaeq	r1, {r4, r8, fp, ip, lr}

0800c2b8 <WS28xxDmx::~WS28xxDmx()>:
 800c2b8:	b510      	push	{r4, lr}
 800c2ba:	4604      	mov	r4, r0
 800c2bc:	f7ff ffec 	bl	800c298 <WS28xxDmx::~WS28xxDmx()>
 800c2c0:	4620      	mov	r0, r4
 800c2c2:	f005 ff6f 	bl	80121a4 <operator delete(void*)>
 800c2c6:	4620      	mov	r0, r4
 800c2c8:	bd10      	pop	{r4, pc}

0800c2ca <WS28xxDmx::Blackout(bool)>:
 800c2ca:	b538      	push	{r3, r4, r5, lr}
 800c2cc:	4605      	mov	r5, r0
 800c2ce:	460c      	mov	r4, r1
 800c2d0:	f880 1059 	strb.w	r1, [r0, #89]	; 0x59
 800c2d4:	f007 fc50 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800c2d8:	2800      	cmp	r0, #0
 800c2da:	d1fb      	bne.n	800c2d4 <WS28xxDmx::Blackout(bool)+0xa>
 800c2dc:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 800c2de:	b11c      	cbz	r4, 800c2e8 <WS28xxDmx::Blackout(bool)+0x1e>
 800c2e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2e4:	f001 bf6e 	b.w	800e1c4 <WS28xx::Blackout()>
 800c2e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2ec:	f001 bf4e 	b.w	800e18c <WS28xx::Update()>

0800c2f0 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2f4:	b087      	sub	sp, #28
 800c2f6:	4607      	mov	r7, r0
 800c2f8:	4692      	mov	sl, r2
 800c2fa:	9104      	str	r1, [sp, #16]
 800c2fc:	9303      	str	r3, [sp, #12]
 800c2fe:	f007 fc3b 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800c302:	2800      	cmp	r0, #0
 800c304:	d171      	bne.n	800c3ea <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c306:	9b04      	ldr	r3, [sp, #16]
 800c308:	9c03      	ldr	r4, [sp, #12]
 800c30a:	f003 0103 	and.w	r1, r3, #3
 800c30e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c310:	2902      	cmp	r1, #2
 800c312:	fbb4 f6f3 	udiv	r6, r4, r3
 800c316:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c318:	d026      	beq.n	800c368 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x78>
 800c31a:	2903      	cmp	r1, #3
 800c31c:	d02b      	beq.n	800c376 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800c31e:	2901      	cmp	r1, #1
 800c320:	6b7d      	ldr	r5, [r7, #52]	; 0x34
 800c322:	d022      	beq.n	800c36a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800c324:	4296      	cmp	r6, r2
 800c326:	bf28      	it	cs
 800c328:	4616      	movcs	r6, r2
 800c32a:	4295      	cmp	r5, r2
 800c32c:	d925      	bls.n	800c37a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800c32e:	4605      	mov	r5, r0
 800c330:	8e3c      	ldrh	r4, [r7, #48]	; 0x30
 800c332:	3c01      	subs	r4, #1
 800c334:	f8d7 9024 	ldr.w	r9, [r7, #36]	; 0x24
 800c338:	2b03      	cmp	r3, #3
 800c33a:	fb09 f805 	mul.w	r8, r9, r5
 800c33e:	4454      	add	r4, sl
 800c340:	eb08 0b09 	add.w	fp, r8, r9
 800c344:	d035      	beq.n	800c3b2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800c346:	42ae      	cmp	r6, r5
 800c348:	d935      	bls.n	800c3b6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c34a:	9a03      	ldr	r2, [sp, #12]
 800c34c:	eba4 030a 	sub.w	r3, r4, sl
 800c350:	429a      	cmp	r2, r3
 800c352:	d930      	bls.n	800c3b6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c354:	4641      	mov	r1, r8
 800c356:	f894 f000 	pld	[r4]
 800c35a:	458b      	cmp	fp, r1
 800c35c:	d138      	bne.n	800c3d0 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xe0>
 800c35e:	3501      	adds	r5, #1
 800c360:	44c8      	add	r8, r9
 800c362:	44cb      	add	fp, r9
 800c364:	3404      	adds	r4, #4
 800c366:	e7ee      	b.n	800c346 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x56>
 800c368:	6bbd      	ldr	r5, [r7, #56]	; 0x38
 800c36a:	442e      	add	r6, r5
 800c36c:	4296      	cmp	r6, r2
 800c36e:	bf28      	it	cs
 800c370:	4616      	movcs	r6, r2
 800c372:	4604      	mov	r4, r0
 800c374:	e7de      	b.n	800c334 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c376:	6bfd      	ldr	r5, [r7, #60]	; 0x3c
 800c378:	e7f7      	b.n	800c36a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800c37a:	4605      	mov	r5, r0
 800c37c:	4604      	mov	r4, r0
 800c37e:	e7d9      	b.n	800c334 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c380:	78a2      	ldrb	r2, [r4, #2]
 800c382:	7863      	ldrb	r3, [r4, #1]
 800c384:	9200      	str	r2, [sp, #0]
 800c386:	7822      	ldrb	r2, [r4, #0]
 800c388:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c38a:	9105      	str	r1, [sp, #20]
 800c38c:	f001 f95c 	bl	800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800c390:	9905      	ldr	r1, [sp, #20]
 800c392:	3101      	adds	r1, #1
 800c394:	e007      	b.n	800c3a6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xb6>
 800c396:	9a03      	ldr	r2, [sp, #12]
 800c398:	eba4 030a 	sub.w	r3, r4, sl
 800c39c:	429a      	cmp	r2, r3
 800c39e:	d90a      	bls.n	800c3b6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800c3a0:	4641      	mov	r1, r8
 800c3a2:	f894 f000 	pld	[r4]
 800c3a6:	458b      	cmp	fp, r1
 800c3a8:	d1ea      	bne.n	800c380 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800c3aa:	3501      	adds	r5, #1
 800c3ac:	44c8      	add	r8, r9
 800c3ae:	44cb      	add	fp, r9
 800c3b0:	3403      	adds	r4, #3
 800c3b2:	42ae      	cmp	r6, r5
 800c3b4:	d8ef      	bhi.n	800c396 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa6>
 800c3b6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800c3b8:	9a04      	ldr	r2, [sp, #16]
 800c3ba:	4293      	cmp	r3, r2
 800c3bc:	d115      	bne.n	800c3ea <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c3be:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 800c3c2:	b993      	cbnz	r3, 800c3ea <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800c3c4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c3c6:	b007      	add	sp, #28
 800c3c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3cc:	f001 bede 	b.w	800e18c <WS28xx::Update()>
 800c3d0:	78e2      	ldrb	r2, [r4, #3]
 800c3d2:	7863      	ldrb	r3, [r4, #1]
 800c3d4:	9201      	str	r2, [sp, #4]
 800c3d6:	78a2      	ldrb	r2, [r4, #2]
 800c3d8:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c3da:	9200      	str	r2, [sp, #0]
 800c3dc:	7822      	ldrb	r2, [r4, #0]
 800c3de:	9105      	str	r1, [sp, #20]
 800c3e0:	f001 fd64 	bl	800deac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c3e4:	9905      	ldr	r1, [sp, #20]
 800c3e6:	3101      	adds	r1, #1
 800c3e8:	e7b7      	b.n	800c35a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800c3ea:	b007      	add	sp, #28
 800c3ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c3f0 <WS28xxDmx::FullOn()>:
 800c3f0:	b510      	push	{r4, lr}
 800c3f2:	4604      	mov	r4, r0
 800c3f4:	f007 fbc0 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800c3f8:	2800      	cmp	r0, #0
 800c3fa:	d1fb      	bne.n	800c3f4 <WS28xxDmx::FullOn()+0x4>
 800c3fc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c3fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c402:	f001 bf26 	b.w	800e252 <WS28xx::FullOn()>

0800c406 <WS28xxDmx::Print()>:
 800c406:	3004      	adds	r0, #4
 800c408:	f7ff bf28 	b.w	800c25c <PixelDmxConfiguration::Print()>

0800c40c <WS28xxDmx::Start(unsigned int)>:
 800c40c:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800c410:	b93b      	cbnz	r3, 800c422 <WS28xxDmx::Start(unsigned int)+0x16>
 800c412:	2301      	movs	r3, #1
 800c414:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800c418:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800c41a:	b110      	cbz	r0, 800c422 <WS28xxDmx::Start(unsigned int)+0x16>
 800c41c:	6803      	ldr	r3, [r0, #0]
 800c41e:	689b      	ldr	r3, [r3, #8]
 800c420:	4718      	bx	r3
 800c422:	4770      	bx	lr

0800c424 <WS28xxDmx::Stop(unsigned int)>:
 800c424:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800c428:	b13b      	cbz	r3, 800c43a <WS28xxDmx::Stop(unsigned int)+0x16>
 800c42a:	2300      	movs	r3, #0
 800c42c:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800c430:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800c432:	b110      	cbz	r0, 800c43a <WS28xxDmx::Stop(unsigned int)+0x16>
 800c434:	6803      	ldr	r3, [r0, #0]
 800c436:	68db      	ldr	r3, [r3, #12]
 800c438:	4718      	bx	r3
 800c43a:	4770      	bx	lr

0800c43c <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800c43c:	f8b0 2048 	ldrh.w	r2, [r0, #72]	; 0x48
 800c440:	b508      	push	{r3, lr}
 800c442:	428a      	cmp	r2, r1
 800c444:	d101      	bne.n	800c44a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xe>
 800c446:	2001      	movs	r0, #1
 800c448:	bd08      	pop	{r3, pc}
 800c44a:	f8b0 204a 	ldrh.w	r2, [r0, #74]	; 0x4a
 800c44e:	440a      	add	r2, r1
 800c450:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800c454:	dc0c      	bgt.n	800c470 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800c456:	1e4a      	subs	r2, r1, #1
 800c458:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800c45c:	d208      	bcs.n	800c470 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800c45e:	f8a0 1048 	strh.w	r1, [r0, #72]	; 0x48
 800c462:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800c464:	2800      	cmp	r0, #0
 800c466:	d0ee      	beq.n	800c446 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800c468:	6803      	ldr	r3, [r0, #0]
 800c46a:	69db      	ldr	r3, [r3, #28]
 800c46c:	4798      	blx	r3
 800c46e:	e7ea      	b.n	800c446 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800c470:	2000      	movs	r0, #0
 800c472:	e7e9      	b.n	800c448 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>

0800c474 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800c474:	4603      	mov	r3, r0
 800c476:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800c47a:	4288      	cmp	r0, r1
 800c47c:	f04f 0000 	mov.w	r0, #0
 800c480:	d30f      	bcc.n	800c4a2 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2e>
 800c482:	7090      	strb	r0, [r2, #2]
 800c484:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c486:	fbb1 f0f3 	udiv	r0, r1, r3
 800c48a:	fb03 1110 	mls	r1, r3, r0, r1
 800c48e:	2903      	cmp	r1, #3
 800c490:	d80e      	bhi.n	800c4b0 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3c>
 800c492:	e8df f001 	tbb	[pc, r1]
 800c496:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800c49a:	f240 2305 	movw	r3, #517	; 0x205
 800c49e:	2001      	movs	r0, #1
 800c4a0:	8013      	strh	r3, [r2, #0]
 800c4a2:	4770      	bx	lr
 800c4a4:	f240 2306 	movw	r3, #518	; 0x206
 800c4a8:	e7f9      	b.n	800c49e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800c4aa:	f240 2307 	movw	r3, #519	; 0x207
 800c4ae:	e7f6      	b.n	800c49e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800c4b0:	f240 2312 	movw	r3, #530	; 0x212
 800c4b4:	e7f3      	b.n	800c49e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
	...

0800c4b8 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800c4b8:	b570      	push	{r4, r5, r6, lr}
 800c4ba:	4605      	mov	r5, r0
 800c4bc:	460e      	mov	r6, r1
 800c4be:	4b19      	ldr	r3, [pc, #100]	; (800c524 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x6c>)
 800c4c0:	4604      	mov	r4, r0
 800c4c2:	f845 3b04 	str.w	r3, [r5], #4
 800c4c6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800c4c8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800c4ca:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800c4cc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800c4ce:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800c4d2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800c4d6:	2300      	movs	r3, #0
 800c4d8:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800c4dc:	6563      	str	r3, [r4, #84]	; 0x54
 800c4de:	f8a4 3058 	strh.w	r3, [r4, #88]	; 0x58
 800c4e2:	4b11      	ldr	r3, [pc, #68]	; (800c528 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x70>)
 800c4e4:	1d26      	adds	r6, r4, #4
 800c4e6:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800c4ea:	2101      	movs	r1, #1
 800c4ec:	4630      	mov	r0, r6
 800c4ee:	601c      	str	r4, [r3, #0]
 800c4f0:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800c4f4:	f7ff fe72 	bl	800c1dc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800c4f8:	2028      	movs	r0, #40	; 0x28
 800c4fa:	f005 fe57 	bl	80121ac <operator new(unsigned int)>
 800c4fe:	4605      	mov	r5, r0
 800c500:	4631      	mov	r1, r6
 800c502:	f001 fdff 	bl	800e104 <WS28xx::WS28xx(PixelConfiguration&)>
 800c506:	4628      	mov	r0, r5
 800c508:	64e5      	str	r5, [r4, #76]	; 0x4c
 800c50a:	f001 fe5b 	bl	800e1c4 <WS28xx::Blackout()>
 800c50e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c510:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c512:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800c516:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c518:	4620      	mov	r0, r4
 800c51a:	4353      	muls	r3, r2
 800c51c:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800c520:	bd70      	pop	{r4, r5, r6, pc}
 800c522:	bf00      	nop
 800c524:	08015910 	stmdaeq	r1, {r4, r8, fp, ip, lr}
 800c528:	20001e70 	andcs	r1, r0, r0, ror lr

0800c52c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c52c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c52e:	88c6      	ldrh	r6, [r0, #6]
 800c530:	8885      	ldrh	r5, [r0, #4]
 800c532:	42ae      	cmp	r6, r5
 800c534:	d216      	bcs.n	800c564 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c536:	4604      	mov	r4, r0
 800c538:	6800      	ldr	r0, [r0, #0]
 800c53a:	1bad      	subs	r5, r5, r6
 800c53c:	4430      	add	r0, r6
 800c53e:	7a26      	ldrb	r6, [r4, #8]
 800c540:	b923      	cbnz	r3, 800c54c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c542:	b926      	cbnz	r6, 800c54e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c544:	9200      	str	r2, [sp, #0]
 800c546:	460b      	mov	r3, r1
 800c548:	4a09      	ldr	r2, [pc, #36]	; (800c570 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c54a:	e003      	b.n	800c554 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c54c:	b166      	cbz	r6, 800c568 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c54e:	460b      	mov	r3, r1
 800c550:	9200      	str	r2, [sp, #0]
 800c552:	4a08      	ldr	r2, [pc, #32]	; (800c574 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c554:	4629      	mov	r1, r5
 800c556:	f7fc febb 	bl	80092d0 <snprintf>
 800c55a:	4285      	cmp	r5, r0
 800c55c:	bfa2      	ittt	ge
 800c55e:	88e3      	ldrhge	r3, [r4, #6]
 800c560:	181b      	addge	r3, r3, r0
 800c562:	80e3      	strhge	r3, [r4, #6]
 800c564:	b002      	add	sp, #8
 800c566:	bd70      	pop	{r4, r5, r6, pc}
 800c568:	9200      	str	r2, [sp, #0]
 800c56a:	460b      	mov	r3, r1
 800c56c:	4a02      	ldr	r2, [pc, #8]	; (800c578 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c56e:	e7f1      	b.n	800c554 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c570:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800c574:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 800c578:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}

0800c57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c57c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c57e:	88c6      	ldrh	r6, [r0, #6]
 800c580:	8885      	ldrh	r5, [r0, #4]
 800c582:	42ae      	cmp	r6, r5
 800c584:	d216      	bcs.n	800c5b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c586:	4604      	mov	r4, r0
 800c588:	6800      	ldr	r0, [r0, #0]
 800c58a:	1bad      	subs	r5, r5, r6
 800c58c:	4430      	add	r0, r6
 800c58e:	7a26      	ldrb	r6, [r4, #8]
 800c590:	b923      	cbnz	r3, 800c59c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c592:	b926      	cbnz	r6, 800c59e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c594:	9200      	str	r2, [sp, #0]
 800c596:	460b      	mov	r3, r1
 800c598:	4a09      	ldr	r2, [pc, #36]	; (800c5c0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c59a:	e003      	b.n	800c5a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c59c:	b166      	cbz	r6, 800c5b8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c59e:	460b      	mov	r3, r1
 800c5a0:	9200      	str	r2, [sp, #0]
 800c5a2:	4a08      	ldr	r2, [pc, #32]	; (800c5c4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c5a4:	4629      	mov	r1, r5
 800c5a6:	f7fc fe93 	bl	80092d0 <snprintf>
 800c5aa:	4285      	cmp	r5, r0
 800c5ac:	bfa2      	ittt	ge
 800c5ae:	88e3      	ldrhge	r3, [r4, #6]
 800c5b0:	181b      	addge	r3, r3, r0
 800c5b2:	80e3      	strhge	r3, [r4, #6]
 800c5b4:	b002      	add	sp, #8
 800c5b6:	bd70      	pop	{r4, r5, r6, pc}
 800c5b8:	9200      	str	r2, [sp, #0]
 800c5ba:	460b      	mov	r3, r1
 800c5bc:	4a02      	ldr	r2, [pc, #8]	; (800c5c8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c5be:	e7f1      	b.n	800c5a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c5c0:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800c5c4:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 800c5c8:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}

0800c5cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c5cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c5ce:	88c6      	ldrh	r6, [r0, #6]
 800c5d0:	8885      	ldrh	r5, [r0, #4]
 800c5d2:	42ae      	cmp	r6, r5
 800c5d4:	d216      	bcs.n	800c604 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c5d6:	4604      	mov	r4, r0
 800c5d8:	6800      	ldr	r0, [r0, #0]
 800c5da:	1bad      	subs	r5, r5, r6
 800c5dc:	4430      	add	r0, r6
 800c5de:	7a26      	ldrb	r6, [r4, #8]
 800c5e0:	b923      	cbnz	r3, 800c5ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c5e2:	b926      	cbnz	r6, 800c5ee <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c5e4:	9200      	str	r2, [sp, #0]
 800c5e6:	460b      	mov	r3, r1
 800c5e8:	4a09      	ldr	r2, [pc, #36]	; (800c610 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c5ea:	e003      	b.n	800c5f4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c5ec:	b166      	cbz	r6, 800c608 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c5ee:	460b      	mov	r3, r1
 800c5f0:	9200      	str	r2, [sp, #0]
 800c5f2:	4a08      	ldr	r2, [pc, #32]	; (800c614 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c5f4:	4629      	mov	r1, r5
 800c5f6:	f7fc fe6b 	bl	80092d0 <snprintf>
 800c5fa:	4285      	cmp	r5, r0
 800c5fc:	bfa2      	ittt	ge
 800c5fe:	88e3      	ldrhge	r3, [r4, #6]
 800c600:	181b      	addge	r3, r3, r0
 800c602:	80e3      	strhge	r3, [r4, #6]
 800c604:	b002      	add	sp, #8
 800c606:	bd70      	pop	{r4, r5, r6, pc}
 800c608:	9200      	str	r2, [sp, #0]
 800c60a:	460b      	mov	r3, r1
 800c60c:	4a02      	ldr	r2, [pc, #8]	; (800c618 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c60e:	e7f1      	b.n	800c5f4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c610:	08014948 	stmdaeq	r1, {r3, r6, r8, fp, lr}
 800c614:	0801493d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, lr}
 800c618:	08014949 	stmdaeq	r1, {r0, r3, r6, r8, fp, lr}

0800c61c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c61c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c620:	4699      	mov	r9, r3
 800c622:	8885      	ldrh	r5, [r0, #4]
 800c624:	88c3      	ldrh	r3, [r0, #6]
 800c626:	4604      	mov	r4, r0
 800c628:	42ab      	cmp	r3, r5
 800c62a:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c62e:	d227      	bcs.n	800c680 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c630:	6826      	ldr	r6, [r4, #0]
 800c632:	4610      	mov	r0, r2
 800c634:	460f      	mov	r7, r1
 800c636:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c63a:	441e      	add	r6, r3
 800c63c:	1aed      	subs	r5, r5, r3
 800c63e:	f7fb fdc9 	bl	80081d4 <__aeabi_f2d>
 800c642:	f1b9 0f00 	cmp.w	r9, #0
 800c646:	d109      	bne.n	800c65c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c648:	f1ba 0f00 	cmp.w	sl, #0
 800c64c:	d109      	bne.n	800c662 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c64e:	463b      	mov	r3, r7
 800c650:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c654:	4a0f      	ldr	r2, [pc, #60]	; (800c694 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c656:	f8cd 8000 	str.w	r8, [sp]
 800c65a:	e008      	b.n	800c66e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c65c:	f1ba 0f00 	cmp.w	sl, #0
 800c660:	d011      	beq.n	800c686 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c662:	463b      	mov	r3, r7
 800c664:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c668:	4a0b      	ldr	r2, [pc, #44]	; (800c698 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c66a:	f8cd 8000 	str.w	r8, [sp]
 800c66e:	4629      	mov	r1, r5
 800c670:	4630      	mov	r0, r6
 800c672:	f7fc fe2d 	bl	80092d0 <snprintf>
 800c676:	4285      	cmp	r5, r0
 800c678:	bfa2      	ittt	ge
 800c67a:	88e3      	ldrhge	r3, [r4, #6]
 800c67c:	181b      	addge	r3, r3, r0
 800c67e:	80e3      	strhge	r3, [r4, #6]
 800c680:	b004      	add	sp, #16
 800c682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c686:	463b      	mov	r3, r7
 800c688:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c68c:	4a03      	ldr	r2, [pc, #12]	; (800c69c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c68e:	f8cd 8000 	str.w	r8, [sp]
 800c692:	e7ec      	b.n	800c66e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c694:	0801594b 	stmdaeq	r1, {r0, r1, r3, r6, r8, fp, ip, lr}
 800c698:	08015940 	stmdaeq	r1, {r6, r8, fp, ip, lr}
 800c69c:	0801594c 	stmdaeq	r1, {r2, r3, r6, r8, fp, ip, lr}

0800c6a0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800c6a0:	6001      	str	r1, [r0, #0]
 800c6a2:	2100      	movs	r1, #0
 800c6a4:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800c6a8:	4a05      	ldr	r2, [pc, #20]	; (800c6c0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x20>)
 800c6aa:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c6ae:	4a05      	ldr	r2, [pc, #20]	; (800c6c4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>)
 800c6b0:	4905      	ldr	r1, [pc, #20]	; (800c6c8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x28>)
 800c6b2:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800c6b6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c6ba:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800c6be:	4770      	bx	lr
 800c6c0:	0100aa03 	tsteq	r0, r3, lsl #20
 800c6c4:	01ff003d 	mvnseq	r0, sp, lsr r0
 800c6c8:	06000100 	streq	r0, [r0], -r0, lsl #2

0800c6cc <PixelDmxParams::Load()>:
 800c6cc:	b508      	push	{r3, lr}
 800c6ce:	2300      	movs	r3, #0
 800c6d0:	4601      	mov	r1, r0
 800c6d2:	6043      	str	r3, [r0, #4]
 800c6d4:	6800      	ldr	r0, [r0, #0]
 800c6d6:	b120      	cbz	r0, 800c6e2 <PixelDmxParams::Load()+0x16>
 800c6d8:	6803      	ldr	r3, [r0, #0]
 800c6da:	3104      	adds	r1, #4
 800c6dc:	68db      	ldr	r3, [r3, #12]
 800c6de:	4798      	blx	r3
 800c6e0:	2001      	movs	r0, #1
 800c6e2:	bd08      	pop	{r3, pc}

0800c6e4 <PixelDmxParams::Load(char const*, unsigned int)>:
 800c6e4:	6803      	ldr	r3, [r0, #0]
 800c6e6:	b1d3      	cbz	r3, 800c71e <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800c6e8:	2300      	movs	r3, #0
 800c6ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c6ec:	460d      	mov	r5, r1
 800c6ee:	4616      	mov	r6, r2
 800c6f0:	4604      	mov	r4, r0
 800c6f2:	6043      	str	r3, [r0, #4]
 800c6f4:	4602      	mov	r2, r0
 800c6f6:	490a      	ldr	r1, [pc, #40]	; (800c720 <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800c6f8:	4668      	mov	r0, sp
 800c6fa:	f004 ffad 	bl	8011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c6fe:	4632      	mov	r2, r6
 800c700:	4629      	mov	r1, r5
 800c702:	4668      	mov	r0, sp
 800c704:	f004 ffac 	bl	8011660 <ReadConfigFile::Read(char const*, unsigned int)>
 800c708:	4621      	mov	r1, r4
 800c70a:	f851 0b04 	ldr.w	r0, [r1], #4
 800c70e:	6803      	ldr	r3, [r0, #0]
 800c710:	689b      	ldr	r3, [r3, #8]
 800c712:	4798      	blx	r3
 800c714:	4668      	mov	r0, sp
 800c716:	f004 ffa2 	bl	801165e <ReadConfigFile::~ReadConfigFile()>
 800c71a:	b002      	add	sp, #8
 800c71c:	bd70      	pop	{r4, r5, r6, pc}
 800c71e:	4770      	bx	lr
 800c720:	0800c9c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, lr, pc}

0800c724 <PixelDmxParams::callbackFunction(char const*)>:
 800c724:	b530      	push	{r4, r5, lr}
 800c726:	2308      	movs	r3, #8
 800c728:	460d      	mov	r5, r1
 800c72a:	b089      	sub	sp, #36	; 0x24
 800c72c:	4604      	mov	r4, r0
 800c72e:	9302      	str	r3, [sp, #8]
 800c730:	4628      	mov	r0, r5
 800c732:	4995      	ldr	r1, [pc, #596]	; (800c988 <PixelDmxParams::callbackFunction(char const*)+0x264>)
 800c734:	446b      	add	r3, sp
 800c736:	aa04      	add	r2, sp, #16
 800c738:	f004 ffc6 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c73c:	b9a0      	cbnz	r0, 800c768 <PixelDmxParams::callbackFunction(char const*)+0x44>
 800c73e:	9b02      	ldr	r3, [sp, #8]
 800c740:	3320      	adds	r3, #32
 800c742:	446b      	add	r3, sp
 800c744:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c748:	a804      	add	r0, sp, #16
 800c74a:	f000 fc09 	bl	800cf60 <PixelType::GetType(char const*)>
 800c74e:	280e      	cmp	r0, #14
 800c750:	bf08      	it	eq
 800c752:	2203      	moveq	r2, #3
 800c754:	6863      	ldr	r3, [r4, #4]
 800c756:	bf19      	ittee	ne
 800c758:	7220      	strbne	r0, [r4, #8]
 800c75a:	f043 0301 	orrne.w	r3, r3, #1
 800c75e:	7222      	strbeq	r2, [r4, #8]
 800c760:	f023 0301 	biceq.w	r3, r3, #1
 800c764:	6063      	str	r3, [r4, #4]
 800c766:	e033      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c768:	4628      	mov	r0, r5
 800c76a:	4988      	ldr	r1, [pc, #544]	; (800c98c <PixelDmxParams::callbackFunction(char const*)+0x268>)
 800c76c:	f10d 0202 	add.w	r2, sp, #2
 800c770:	f005 f867 	bl	8011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c774:	b990      	cbnz	r0, 800c79c <PixelDmxParams::callbackFunction(char const*)+0x78>
 800c776:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c77a:	6863      	ldr	r3, [r4, #4]
 800c77c:	1e51      	subs	r1, r2, #1
 800c77e:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800c782:	bf2d      	iteet	cs
 800c784:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800c788:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800c78c:	f043 0302 	orrcc.w	r3, r3, #2
 800c790:	7262      	strbcs	r2, [r4, #9]
 800c792:	bf24      	itt	cs
 800c794:	72a0      	strbcs	r0, [r4, #10]
 800c796:	f023 0302 	biccs.w	r3, r3, #2
 800c79a:	e7e3      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c79c:	2303      	movs	r3, #3
 800c79e:	4628      	mov	r0, r5
 800c7a0:	9302      	str	r3, [sp, #8]
 800c7a2:	497b      	ldr	r1, [pc, #492]	; (800c990 <PixelDmxParams::callbackFunction(char const*)+0x26c>)
 800c7a4:	ab02      	add	r3, sp, #8
 800c7a6:	aa04      	add	r2, sp, #16
 800c7a8:	f004 ff8e 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c7ac:	b990      	cbnz	r0, 800c7d4 <PixelDmxParams::callbackFunction(char const*)+0xb0>
 800c7ae:	9b02      	ldr	r3, [sp, #8]
 800c7b0:	3320      	adds	r3, #32
 800c7b2:	446b      	add	r3, sp
 800c7b4:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c7b8:	a804      	add	r0, sp, #16
 800c7ba:	f000 fbf5 	bl	800cfa8 <PixelType::GetMap(char const*)>
 800c7be:	6863      	ldr	r3, [r4, #4]
 800c7c0:	2806      	cmp	r0, #6
 800c7c2:	bf14      	ite	ne
 800c7c4:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800c7c8:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800c7cc:	6063      	str	r3, [r4, #4]
 800c7ce:	75e0      	strb	r0, [r4, #23]
 800c7d0:	b009      	add	sp, #36	; 0x24
 800c7d2:	bd30      	pop	{r4, r5, pc}
 800c7d4:	4628      	mov	r0, r5
 800c7d6:	496f      	ldr	r1, [pc, #444]	; (800c994 <PixelDmxParams::callbackFunction(char const*)+0x270>)
 800c7d8:	aa01      	add	r2, sp, #4
 800c7da:	f004 ff8e 	bl	80116fa <Sscan::Float(char const*, char const*, float&)>
 800c7de:	b960      	cbnz	r0, 800c7fa <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800c7e0:	9801      	ldr	r0, [sp, #4]
 800c7e2:	f000 fc4d 	bl	800d080 <PixelType::ConvertTxH(float)>
 800c7e6:	6863      	ldr	r3, [r4, #4]
 800c7e8:	b120      	cbz	r0, 800c7f4 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800c7ea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c7ee:	6063      	str	r3, [r4, #4]
 800c7f0:	7620      	strb	r0, [r4, #24]
 800c7f2:	e7ed      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c7f4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c7f8:	e7f9      	b.n	800c7ee <PixelDmxParams::callbackFunction(char const*)+0xca>
 800c7fa:	4628      	mov	r0, r5
 800c7fc:	4966      	ldr	r1, [pc, #408]	; (800c998 <PixelDmxParams::callbackFunction(char const*)+0x274>)
 800c7fe:	aa01      	add	r2, sp, #4
 800c800:	f004 ff7b 	bl	80116fa <Sscan::Float(char const*, char const*, float&)>
 800c804:	b960      	cbnz	r0, 800c820 <PixelDmxParams::callbackFunction(char const*)+0xfc>
 800c806:	9801      	ldr	r0, [sp, #4]
 800c808:	f000 fc3a 	bl	800d080 <PixelType::ConvertTxH(float)>
 800c80c:	6863      	ldr	r3, [r4, #4]
 800c80e:	b120      	cbz	r0, 800c81a <PixelDmxParams::callbackFunction(char const*)+0xf6>
 800c810:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800c814:	6063      	str	r3, [r4, #4]
 800c816:	7660      	strb	r0, [r4, #25]
 800c818:	e7da      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c81a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c81e:	e7f9      	b.n	800c814 <PixelDmxParams::callbackFunction(char const*)+0xf0>
 800c820:	4628      	mov	r0, r5
 800c822:	495e      	ldr	r1, [pc, #376]	; (800c99c <PixelDmxParams::callbackFunction(char const*)+0x278>)
 800c824:	f10d 0202 	add.w	r2, sp, #2
 800c828:	f005 f80b 	bl	8011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c82c:	b998      	cbnz	r0, 800c856 <PixelDmxParams::callbackFunction(char const*)+0x132>
 800c82e:	f240 25a6 	movw	r5, #678	; 0x2a6
 800c832:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800c836:	6863      	ldr	r3, [r4, #4]
 800c838:	1e8a      	subs	r2, r1, #2
 800c83a:	b292      	uxth	r2, r2
 800c83c:	42aa      	cmp	r2, r5
 800c83e:	bf81      	itttt	hi
 800c840:	2201      	movhi	r2, #1
 800c842:	75a0      	strbhi	r0, [r4, #22]
 800c844:	7562      	strbhi	r2, [r4, #21]
 800c846:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800c84a:	bf9c      	itt	ls
 800c84c:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800c850:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800c854:	e786      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c856:	4628      	mov	r0, r5
 800c858:	4951      	ldr	r1, [pc, #324]	; (800c9a0 <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800c85a:	aa03      	add	r2, sp, #12
 800c85c:	f005 f80f 	bl	801187e <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800c860:	b960      	cbnz	r0, 800c87c <PixelDmxParams::callbackFunction(char const*)+0x158>
 800c862:	9a03      	ldr	r2, [sp, #12]
 800c864:	494f      	ldr	r1, [pc, #316]	; (800c9a4 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800c866:	6863      	ldr	r3, [r4, #4]
 800c868:	428a      	cmp	r2, r1
 800c86a:	bf14      	ite	ne
 800c86c:	f043 0310 	orrne.w	r3, r3, #16
 800c870:	f023 0310 	biceq.w	r3, r3, #16
 800c874:	6063      	str	r3, [r4, #4]
 800c876:	f8c4 200e 	str.w	r2, [r4, #14]
 800c87a:	e7a9      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c87c:	4628      	mov	r0, r5
 800c87e:	494a      	ldr	r1, [pc, #296]	; (800c9a8 <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800c880:	f10d 0201 	add.w	r2, sp, #1
 800c884:	f005 f824 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c888:	b988      	cbnz	r0, 800c8ae <PixelDmxParams::callbackFunction(char const*)+0x18a>
 800c88a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800c88e:	6863      	ldr	r3, [r4, #4]
 800c890:	1e4a      	subs	r2, r1, #1
 800c892:	b2d2      	uxtb	r2, r2
 800c894:	2afd      	cmp	r2, #253	; 0xfd
 800c896:	bf83      	ittte	hi
 800c898:	f023 0320 	bichi.w	r3, r3, #32
 800c89c:	6063      	strhi	r3, [r4, #4]
 800c89e:	23ff      	movhi	r3, #255	; 0xff
 800c8a0:	f043 0320 	orrls.w	r3, r3, #32
 800c8a4:	bf9a      	itte	ls
 800c8a6:	6063      	strls	r3, [r4, #4]
 800c8a8:	74a1      	strbls	r1, [r4, #18]
 800c8aa:	74a3      	strbhi	r3, [r4, #18]
 800c8ac:	e790      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c8ae:	4628      	mov	r0, r5
 800c8b0:	493e      	ldr	r1, [pc, #248]	; (800c9ac <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800c8b2:	f10d 0202 	add.w	r2, sp, #2
 800c8b6:	f004 ffc4 	bl	8011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c8ba:	2800      	cmp	r0, #0
 800c8bc:	d13f      	bne.n	800c93e <PixelDmxParams::callbackFunction(char const*)+0x21a>
 800c8be:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c8c2:	6863      	ldr	r3, [r4, #4]
 800c8c4:	1e91      	subs	r1, r2, #2
 800c8c6:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800c8ca:	bf83      	ittte	hi
 800c8cc:	2201      	movhi	r2, #1
 800c8ce:	72e2      	strbhi	r2, [r4, #11]
 800c8d0:	2200      	movhi	r2, #0
 800c8d2:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800c8d6:	bf92      	itee	ls
 800c8d8:	f043 0304 	orrls.w	r3, r3, #4
 800c8dc:	7322      	strbhi	r2, [r4, #12]
 800c8de:	f023 0304 	bichi.w	r3, r3, #4
 800c8e2:	e73f      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c8e4:	2201      	movs	r2, #1
 800c8e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c8ea:	8362      	strh	r2, [r4, #26]
 800c8ec:	e036      	b.n	800c95c <PixelDmxParams::callbackFunction(char const*)+0x238>
 800c8ee:	4628      	mov	r0, r5
 800c8f0:	492f      	ldr	r1, [pc, #188]	; (800c9b0 <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800c8f2:	f10d 0201 	add.w	r2, sp, #1
 800c8f6:	f004 ffeb 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c8fa:	b948      	cbnz	r0, 800c910 <PixelDmxParams::callbackFunction(char const*)+0x1ec>
 800c8fc:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800c900:	6863      	ldr	r3, [r4, #4]
 800c902:	b112      	cbz	r2, 800c90a <PixelDmxParams::callbackFunction(char const*)+0x1e6>
 800c904:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c908:	e72c      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c90a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c90e:	e729      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c910:	4628      	mov	r0, r5
 800c912:	4928      	ldr	r1, [pc, #160]	; (800c9b4 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800c914:	aa01      	add	r2, sp, #4
 800c916:	f004 fef0 	bl	80116fa <Sscan::Float(char const*, char const*, float&)>
 800c91a:	4605      	mov	r5, r0
 800c91c:	2800      	cmp	r0, #0
 800c91e:	f47f af57 	bne.w	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c922:	4925      	ldr	r1, [pc, #148]	; (800c9b8 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800c924:	9801      	ldr	r0, [sp, #4]
 800c926:	f7fb fcad 	bl	8008284 <__aeabi_fmul>
 800c92a:	f7fb fdfb 	bl	8008524 <__aeabi_f2uiz>
 800c92e:	b2c3      	uxtb	r3, r0
 800c930:	f1a3 0214 	sub.w	r2, r3, #20
 800c934:	2a05      	cmp	r2, #5
 800c936:	bf8c      	ite	hi
 800c938:	7365      	strbhi	r5, [r4, #13]
 800c93a:	7363      	strbls	r3, [r4, #13]
 800c93c:	e748      	b.n	800c7d0 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800c93e:	4628      	mov	r0, r5
 800c940:	491e      	ldr	r1, [pc, #120]	; (800c9bc <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800c942:	f10d 0202 	add.w	r2, sp, #2
 800c946:	f004 ff7c 	bl	8011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c94a:	b940      	cbnz	r0, 800c95e <PixelDmxParams::callbackFunction(char const*)+0x23a>
 800c94c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c950:	6863      	ldr	r3, [r4, #4]
 800c952:	2a00      	cmp	r2, #0
 800c954:	d0c6      	beq.n	800c8e4 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800c956:	8362      	strh	r2, [r4, #26]
 800c958:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800c95c:	6063      	str	r3, [r4, #4]
 800c95e:	4628      	mov	r0, r5
 800c960:	4917      	ldr	r1, [pc, #92]	; (800c9c0 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800c962:	f10d 0201 	add.w	r2, sp, #1
 800c966:	f004 ffb3 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c96a:	2800      	cmp	r0, #0
 800c96c:	d1bf      	bne.n	800c8ee <PixelDmxParams::callbackFunction(char const*)+0x1ca>
 800c96e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800c972:	6863      	ldr	r3, [r4, #4]
 800c974:	1e51      	subs	r1, r2, #1
 800c976:	2904      	cmp	r1, #4
 800c978:	bf99      	ittee	ls
 800c97a:	7522      	strbls	r2, [r4, #20]
 800c97c:	f043 0308 	orrls.w	r3, r3, #8
 800c980:	7520      	strbhi	r0, [r4, #20]
 800c982:	f023 0308 	bichi.w	r3, r3, #8
 800c986:	e6ed      	b.n	800c764 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800c988:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 800c98c:	08016a12 	stmdaeq	r1, {r1, r4, r9, fp, sp, lr}
 800c990:	080169f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 800c994:	08016a1c 	stmdaeq	r1, {r2, r3, r4, r9, fp, sp, lr}
 800c998:	08016a24 	stmdaeq	r1, {r2, r5, r9, fp, sp, lr}
 800c99c:	080169c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, sp, lr}
 800c9a0:	080169aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp, lr}
 800c9a4:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800c9a8:	080169e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, fp, sp, lr}
 800c9ac:	08016b01 	stmdaeq	r1, {r0, r8, r9, fp, sp, lr}
 800c9b0:	080169d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, lr}
 800c9b4:	0801699e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, fp, sp, lr}
 800c9b8:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800c9bc:	08016aa5 	stmdaeq	r1, {r0, r2, r5, r7, r9, fp, sp, lr}
 800c9c0:	080169b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, fp, sp, lr}

0800c9c4 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800c9c4:	f7ff beae 	b.w	800c724 <PixelDmxParams::callbackFunction(char const*)>

0800c9c8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800c9c8:	b570      	push	{r4, r5, r6, lr}
 800c9ca:	4604      	mov	r4, r0
 800c9cc:	4615      	mov	r5, r2
 800c9ce:	461e      	mov	r6, r3
 800c9d0:	b086      	sub	sp, #24
 800c9d2:	3004      	adds	r0, #4
 800c9d4:	b389      	cbz	r1, 800ca3a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x72>
 800c9d6:	2218      	movs	r2, #24
 800c9d8:	f005 fc7f 	bl	80122da <memmove>
 800c9dc:	462a      	mov	r2, r5
 800c9de:	4633      	mov	r3, r6
 800c9e0:	4996      	ldr	r1, [pc, #600]	; (800cc3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800c9e2:	a803      	add	r0, sp, #12
 800c9e4:	f004 fd98 	bl	8011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c9e8:	7a20      	ldrb	r0, [r4, #8]
 800c9ea:	f000 faad 	bl	800cf48 <PixelType::GetType(pixel::Type)>
 800c9ee:	6863      	ldr	r3, [r4, #4]
 800c9f0:	4602      	mov	r2, r0
 800c9f2:	4993      	ldr	r1, [pc, #588]	; (800cc40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800c9f4:	f003 0301 	and.w	r3, r3, #1
 800c9f8:	a803      	add	r0, sp, #12
 800c9fa:	f7ff fde7 	bl	800c5cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c9fe:	6863      	ldr	r3, [r4, #4]
 800ca00:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800ca04:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ca08:	498e      	ldr	r1, [pc, #568]	; (800cc44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800ca0a:	a803      	add	r0, sp, #12
 800ca0c:	f7ff fdb6 	bl	800c57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ca10:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ca14:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ca18:	6863      	ldr	r3, [r4, #4]
 800ca1a:	42aa      	cmp	r2, r5
 800ca1c:	d227      	bcs.n	800ca6e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa6>
 800ca1e:	9803      	ldr	r0, [sp, #12]
 800ca20:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800ca24:	4410      	add	r0, r2
 800ca26:	eba5 0502 	sub.w	r5, r5, r2
 800ca2a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ca2e:	d10b      	bne.n	800ca48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x80>
 800ca30:	b96a      	cbnz	r2, 800ca4e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x86>
 800ca32:	9200      	str	r2, [sp, #0]
 800ca34:	4b84      	ldr	r3, [pc, #528]	; (800cc48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800ca36:	4a85      	ldr	r2, [pc, #532]	; (800cc4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800ca38:	e00f      	b.n	800ca5a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800ca3a:	6823      	ldr	r3, [r4, #0]
 800ca3c:	4601      	mov	r1, r0
 800ca3e:	681a      	ldr	r2, [r3, #0]
 800ca40:	4618      	mov	r0, r3
 800ca42:	68d2      	ldr	r2, [r2, #12]
 800ca44:	4790      	blx	r2
 800ca46:	e7c9      	b.n	800c9dc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800ca48:	2a00      	cmp	r2, #0
 800ca4a:	f000 808a 	beq.w	800cb62 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19a>
 800ca4e:	3b00      	subs	r3, #0
 800ca50:	bf18      	it	ne
 800ca52:	2301      	movne	r3, #1
 800ca54:	4a7e      	ldr	r2, [pc, #504]	; (800cc50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800ca56:	9300      	str	r3, [sp, #0]
 800ca58:	4b7b      	ldr	r3, [pc, #492]	; (800cc48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800ca5a:	4629      	mov	r1, r5
 800ca5c:	f7fc fc38 	bl	80092d0 <snprintf>
 800ca60:	4285      	cmp	r5, r0
 800ca62:	bfa2      	ittt	ge
 800ca64:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ca68:	18c0      	addge	r0, r0, r3
 800ca6a:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ca6e:	7b63      	ldrb	r3, [r4, #13]
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	d17b      	bne.n	800cb6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a4>
 800ca74:	4a77      	ldr	r2, [pc, #476]	; (800cc54 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800ca76:	4978      	ldr	r1, [pc, #480]	; (800cc58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800ca78:	a803      	add	r0, sp, #12
 800ca7a:	f7ff fda7 	bl	800c5cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ca7e:	4977      	ldr	r1, [pc, #476]	; (800cc5c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800ca80:	a803      	add	r0, sp, #12
 800ca82:	f004 fdcf 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800ca86:	6863      	ldr	r3, [r4, #4]
 800ca88:	059e      	lsls	r6, r3, #22
 800ca8a:	d403      	bmi.n	800ca94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800ca8c:	7a20      	ldrb	r0, [r4, #8]
 800ca8e:	f000 fabf 	bl	800d010 <PixelType::GetMap(pixel::Type)>
 800ca92:	75e0      	strb	r0, [r4, #23]
 800ca94:	7de0      	ldrb	r0, [r4, #23]
 800ca96:	f000 faaf 	bl	800cff8 <PixelType::GetMap(pixel::Map)>
 800ca9a:	6863      	ldr	r3, [r4, #4]
 800ca9c:	4602      	mov	r2, r0
 800ca9e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800caa2:	496f      	ldr	r1, [pc, #444]	; (800cc60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800caa4:	a803      	add	r0, sp, #12
 800caa6:	f7ff fd91 	bl	800c5cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800caaa:	6863      	ldr	r3, [r4, #4]
 800caac:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800cab0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800cab4:	d011      	beq.n	800cada <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x112>
 800cab6:	f10d 020b 	add.w	r2, sp, #11
 800caba:	7a20      	ldrb	r0, [r4, #8]
 800cabc:	f10d 010a 	add.w	r1, sp, #10
 800cac0:	f000 f93b 	bl	800cd3a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cac4:	6863      	ldr	r3, [r4, #4]
 800cac6:	055d      	lsls	r5, r3, #21
 800cac8:	bf5c      	itt	pl
 800caca:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800cace:	7622      	strbpl	r2, [r4, #24]
 800cad0:	0518      	lsls	r0, r3, #20
 800cad2:	bf5c      	itt	pl
 800cad4:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800cad8:	7663      	strbpl	r3, [r4, #25]
 800cada:	4962      	ldr	r1, [pc, #392]	; (800cc64 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800cadc:	a803      	add	r0, sp, #12
 800cade:	f004 fda1 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cae2:	7e20      	ldrb	r0, [r4, #24]
 800cae4:	f000 fa9e 	bl	800d024 <PixelType::ConvertTxH(unsigned char)>
 800cae8:	2502      	movs	r5, #2
 800caea:	6863      	ldr	r3, [r4, #4]
 800caec:	4602      	mov	r2, r0
 800caee:	495e      	ldr	r1, [pc, #376]	; (800cc68 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800caf0:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800caf4:	9500      	str	r5, [sp, #0]
 800caf6:	a803      	add	r0, sp, #12
 800caf8:	f7ff fd90 	bl	800c61c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cafc:	7e60      	ldrb	r0, [r4, #25]
 800cafe:	f000 fa91 	bl	800d024 <PixelType::ConvertTxH(unsigned char)>
 800cb02:	6863      	ldr	r3, [r4, #4]
 800cb04:	4602      	mov	r2, r0
 800cb06:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800cb0a:	4958      	ldr	r1, [pc, #352]	; (800cc6c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800cb0c:	9500      	str	r5, [sp, #0]
 800cb0e:	a803      	add	r0, sp, #12
 800cb10:	f7ff fd84 	bl	800c61c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cb14:	4956      	ldr	r1, [pc, #344]	; (800cc70 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800cb16:	a803      	add	r0, sp, #12
 800cb18:	f004 fd84 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cb1c:	6863      	ldr	r3, [r4, #4]
 800cb1e:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800cb22:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800cb26:	4953      	ldr	r1, [pc, #332]	; (800cc74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800cb28:	a803      	add	r0, sp, #12
 800cb2a:	f7ff fd27 	bl	800c57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cb2e:	4952      	ldr	r1, [pc, #328]	; (800cc78 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800cb30:	a803      	add	r0, sp, #12
 800cb32:	f004 fd77 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cb36:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cb3a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cb3e:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800cb42:	42aa      	cmp	r2, r5
 800cb44:	6861      	ldr	r1, [r4, #4]
 800cb46:	d22e      	bcs.n	800cba6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800cb48:	9803      	ldr	r0, [sp, #12]
 800cb4a:	06c9      	lsls	r1, r1, #27
 800cb4c:	4410      	add	r0, r2
 800cb4e:	eba5 0502 	sub.w	r5, r5, r2
 800cb52:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cb56:	d417      	bmi.n	800cb88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c0>
 800cb58:	b9c2      	cbnz	r2, 800cb8c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 800cb5a:	9300      	str	r3, [sp, #0]
 800cb5c:	4a3b      	ldr	r2, [pc, #236]	; (800cc4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800cb5e:	4b47      	ldr	r3, [pc, #284]	; (800cc7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cb60:	e017      	b.n	800cb92 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800cb62:	2301      	movs	r3, #1
 800cb64:	4a46      	ldr	r2, [pc, #280]	; (800cc80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800cb66:	9300      	str	r3, [sp, #0]
 800cb68:	4b37      	ldr	r3, [pc, #220]	; (800cc48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800cb6a:	e776      	b.n	800ca5a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800cb6c:	4618      	mov	r0, r3
 800cb6e:	f7fb f8bf 	bl	8007cf0 <__aeabi_ui2f>
 800cb72:	4944      	ldr	r1, [pc, #272]	; (800cc84 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800cb74:	f7fb fc3a 	bl	80083ec <__aeabi_fdiv>
 800cb78:	2301      	movs	r3, #1
 800cb7a:	4602      	mov	r2, r0
 800cb7c:	4936      	ldr	r1, [pc, #216]	; (800cc58 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800cb7e:	9300      	str	r3, [sp, #0]
 800cb80:	a803      	add	r0, sp, #12
 800cb82:	f7ff fd4b 	bl	800c61c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cb86:	e77a      	b.n	800ca7e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cb88:	2a00      	cmp	r2, #0
 800cb8a:	d052      	beq.n	800cc32 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x26a>
 800cb8c:	9300      	str	r3, [sp, #0]
 800cb8e:	4a30      	ldr	r2, [pc, #192]	; (800cc50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800cb90:	4b3a      	ldr	r3, [pc, #232]	; (800cc7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cb92:	4629      	mov	r1, r5
 800cb94:	f7fc fb9c 	bl	80092d0 <snprintf>
 800cb98:	4285      	cmp	r5, r0
 800cb9a:	bfa2      	ittt	ge
 800cb9c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cba0:	18c0      	addge	r0, r0, r3
 800cba2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cba6:	4938      	ldr	r1, [pc, #224]	; (800cc88 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800cba8:	a803      	add	r0, sp, #12
 800cbaa:	f004 fd3b 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cbae:	6863      	ldr	r3, [r4, #4]
 800cbb0:	7ca2      	ldrb	r2, [r4, #18]
 800cbb2:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800cbb6:	4935      	ldr	r1, [pc, #212]	; (800cc8c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800cbb8:	a803      	add	r0, sp, #12
 800cbba:	f7ff fcb7 	bl	800c52c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cbbe:	4934      	ldr	r1, [pc, #208]	; (800cc90 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800cbc0:	a803      	add	r0, sp, #12
 800cbc2:	f004 fd2f 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cbc6:	6863      	ldr	r3, [r4, #4]
 800cbc8:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800cbcc:	4931      	ldr	r1, [pc, #196]	; (800cc94 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800cbce:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800cbd2:	a803      	add	r0, sp, #12
 800cbd4:	f7ff fcd2 	bl	800c57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cbd8:	6863      	ldr	r3, [r4, #4]
 800cbda:	8b62      	ldrh	r2, [r4, #26]
 800cbdc:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800cbe0:	492d      	ldr	r1, [pc, #180]	; (800cc98 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800cbe2:	a803      	add	r0, sp, #12
 800cbe4:	f7ff fcca 	bl	800c57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cbe8:	492c      	ldr	r1, [pc, #176]	; (800cc9c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800cbea:	a803      	add	r0, sp, #12
 800cbec:	f004 fd1a 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800cbf0:	6863      	ldr	r3, [r4, #4]
 800cbf2:	7d22      	ldrb	r2, [r4, #20]
 800cbf4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cbf8:	4929      	ldr	r1, [pc, #164]	; (800cca0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800cbfa:	a803      	add	r0, sp, #12
 800cbfc:	f7ff fc96 	bl	800c52c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cc00:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cc04:	b17b      	cbz	r3, 800cc26 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x25e>
 800cc06:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cc0a:	9b03      	ldr	r3, [sp, #12]
 800cc0c:	4413      	add	r3, r2
 800cc0e:	227d      	movs	r2, #125	; 0x7d
 800cc10:	f803 2c01 	strb.w	r2, [r3, #-1]
 800cc14:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cc18:	9903      	ldr	r1, [sp, #12]
 800cc1a:	54ca      	strb	r2, [r1, r3]
 800cc1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cc20:	3301      	adds	r3, #1
 800cc22:	f8ad 3012 	strh.w	r3, [sp, #18]
 800cc26:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cc2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cc2c:	601a      	str	r2, [r3, #0]
 800cc2e:	b006      	add	sp, #24
 800cc30:	bd70      	pop	{r4, r5, r6, pc}
 800cc32:	9300      	str	r3, [sp, #0]
 800cc34:	4a12      	ldr	r2, [pc, #72]	; (800cc80 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800cc36:	4b11      	ldr	r3, [pc, #68]	; (800cc7c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cc38:	e7ab      	b.n	800cb92 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800cc3a:	bf00      	nop
 800cc3c:	08016a2c 	stmdaeq	r1, {r2, r3, r5, r9, fp, sp, lr}
 800cc40:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 800cc44:	08016a12 	stmdaeq	r1, {r1, r4, r9, fp, sp, lr}
 800cc48:	080169d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, sp, lr}
 800cc4c:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800cc50:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 800cc54:	08015955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, ip, lr}
 800cc58:	0801699e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, fp, sp, lr}
 800cc5c:	0801595f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, fp, ip, lr}
 800cc60:	080169f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 800cc64:	08015973 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, fp, ip, lr}
 800cc68:	08016a1c 	stmdaeq	r1, {r2, r3, r4, r9, fp, sp, lr}
 800cc6c:	08016a24 	stmdaeq	r1, {r2, r5, r9, fp, sp, lr}
 800cc70:	08015989 	stmdaeq	r1, {r0, r3, r7, r8, fp, ip, lr}
 800cc74:	080169c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, sp, lr}
 800cc78:	08015992 	stmdaeq	r1, {r1, r4, r7, r8, fp, ip, lr}
 800cc7c:	080169aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp, lr}
 800cc80:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}
 800cc84:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800cc88:	080159a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, ip, lr}
 800cc8c:	080169e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, fp, sp, lr}
 800cc90:	08016801 	stmdaeq	r1, {r0, fp, sp, lr}
 800cc94:	08016b01 	stmdaeq	r1, {r0, r8, r9, fp, sp, lr}
 800cc98:	08016aa5 	stmdaeq	r1, {r0, r2, r5, r7, r9, fp, sp, lr}
 800cc9c:	080159b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, fp, ip, lr}
 800cca0:	080169b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, fp, sp, lr}

0800cca4 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800cca4:	b513      	push	{r0, r1, r4, lr}
 800cca6:	6804      	ldr	r4, [r0, #0]
 800cca8:	b914      	cbnz	r4, 800ccb0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ccaa:	601c      	str	r4, [r3, #0]
 800ccac:	b002      	add	sp, #8
 800ccae:	bd10      	pop	{r4, pc}
 800ccb0:	9300      	str	r3, [sp, #0]
 800ccb2:	4613      	mov	r3, r2
 800ccb4:	460a      	mov	r2, r1
 800ccb6:	2100      	movs	r1, #0
 800ccb8:	f7ff fe86 	bl	800c9c8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800ccbc:	e7f6      	b.n	800ccac <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ccbe <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800ccbe:	6843      	ldr	r3, [r0, #4]
 800ccc0:	07da      	lsls	r2, r3, #31
 800ccc2:	bf44      	itt	mi
 800ccc4:	7a02      	ldrbmi	r2, [r0, #8]
 800ccc6:	600a      	strmi	r2, [r1, #0]
 800ccc8:	079a      	lsls	r2, r3, #30
 800ccca:	d505      	bpl.n	800ccd8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800cccc:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800ccd0:	2a00      	cmp	r2, #0
 800ccd2:	bf08      	it	eq
 800ccd4:	22aa      	moveq	r2, #170	; 0xaa
 800ccd6:	604a      	str	r2, [r1, #4]
 800ccd8:	059a      	lsls	r2, r3, #22
 800ccda:	bf44      	itt	mi
 800ccdc:	7dc2      	ldrbmi	r2, [r0, #23]
 800ccde:	608a      	strmi	r2, [r1, #8]
 800cce0:	055a      	lsls	r2, r3, #21
 800cce2:	bf44      	itt	mi
 800cce4:	7e02      	ldrbmi	r2, [r0, #24]
 800cce6:	740a      	strbmi	r2, [r1, #16]
 800cce8:	051a      	lsls	r2, r3, #20
 800ccea:	bf44      	itt	mi
 800ccec:	7e42      	ldrbmi	r2, [r0, #25]
 800ccee:	744a      	strbmi	r2, [r1, #17]
 800ccf0:	06da      	lsls	r2, r3, #27
 800ccf2:	bf44      	itt	mi
 800ccf4:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800ccf8:	60ca      	strmi	r2, [r1, #12]
 800ccfa:	069a      	lsls	r2, r3, #26
 800ccfc:	bf44      	itt	mi
 800ccfe:	7c82      	ldrbmi	r2, [r0, #18]
 800cd00:	748a      	strbmi	r2, [r1, #18]
 800cd02:	061a      	lsls	r2, r3, #24
 800cd04:	d504      	bpl.n	800cd10 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800cd06:	2201      	movs	r2, #1
 800cd08:	750a      	strb	r2, [r1, #20]
 800cd0a:	7b42      	ldrb	r2, [r0, #13]
 800cd0c:	b102      	cbz	r2, 800cd10 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800cd0e:	74ca      	strb	r2, [r1, #19]
 800cd10:	075a      	lsls	r2, r3, #29
 800cd12:	d50b      	bpl.n	800cd2c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x6e>
 800cd14:	7ac2      	ldrb	r2, [r0, #11]
 800cd16:	b510      	push	{r4, lr}
 800cd18:	7b04      	ldrb	r4, [r0, #12]
 800cd1a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800cd1e:	858a      	strh	r2, [r1, #44]	; 0x2c
 800cd20:	05da      	lsls	r2, r3, #23
 800cd22:	bf44      	itt	mi
 800cd24:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800cd28:	620b      	strmi	r3, [r1, #32]
 800cd2a:	bd10      	pop	{r4, pc}
 800cd2c:	05db      	lsls	r3, r3, #23
 800cd2e:	bf44      	itt	mi
 800cd30:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800cd34:	620b      	strmi	r3, [r1, #32]
 800cd36:	4770      	bx	lr

0800cd38 <PixelDmxParams::Dump()>:
 800cd38:	4770      	bx	lr

0800cd3a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800cd3a:	23c0      	movs	r3, #192	; 0xc0
 800cd3c:	2803      	cmp	r0, #3
 800cd3e:	700b      	strb	r3, [r1, #0]
 800cd40:	d006      	beq.n	800cd50 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800cd42:	3808      	subs	r0, #8
 800cd44:	2803      	cmp	r0, #3
 800cd46:	bf34      	ite	cc
 800cd48:	23fc      	movcc	r3, #252	; 0xfc
 800cd4a:	23f0      	movcs	r3, #240	; 0xf0
 800cd4c:	7013      	strb	r3, [r2, #0]
 800cd4e:	4770      	bx	lr
 800cd50:	23f8      	movs	r3, #248	; 0xf8
 800cd52:	e7fb      	b.n	800cd4c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800cd54 <PixelConfiguration::Validate(unsigned int&)>:
 800cd54:	b513      	push	{r0, r1, r4, lr}
 800cd56:	4604      	mov	r4, r0
 800cd58:	6800      	ldr	r0, [r0, #0]
 800cd5a:	6863      	ldr	r3, [r4, #4]
 800cd5c:	2807      	cmp	r0, #7
 800cd5e:	68a2      	ldr	r2, [r4, #8]
 800cd60:	d128      	bne.n	800cdb4 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800cd62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cd66:	bf28      	it	cs
 800cd68:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800cd6c:	6063      	str	r3, [r4, #4]
 800cd6e:	2304      	movs	r3, #4
 800cd70:	600b      	str	r3, [r1, #0]
 800cd72:	2301      	movs	r3, #1
 800cd74:	2a06      	cmp	r2, #6
 800cd76:	7563      	strb	r3, [r4, #21]
 800cd78:	d102      	bne.n	800cd80 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800cd7a:	f000 f949 	bl	800d010 <PixelType::GetMap(pixel::Type)>
 800cd7e:	60a0      	str	r0, [r4, #8]
 800cd80:	7c63      	ldrb	r3, [r4, #17]
 800cd82:	7c22      	ldrb	r2, [r4, #16]
 800cd84:	6820      	ldr	r0, [r4, #0]
 800cd86:	429a      	cmp	r2, r3
 800cd88:	bf28      	it	cs
 800cd8a:	2300      	movcs	r3, #0
 800cd8c:	f10d 0207 	add.w	r2, sp, #7
 800cd90:	bf28      	it	cs
 800cd92:	8223      	strhcs	r3, [r4, #16]
 800cd94:	f10d 0106 	add.w	r1, sp, #6
 800cd98:	f7ff ffcf 	bl	800cd3a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cd9c:	7c23      	ldrb	r3, [r4, #16]
 800cd9e:	b913      	cbnz	r3, 800cda6 <PixelConfiguration::Validate(unsigned int&)+0x52>
 800cda0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800cda4:	7423      	strb	r3, [r4, #16]
 800cda6:	7c63      	ldrb	r3, [r4, #17]
 800cda8:	b913      	cbnz	r3, 800cdb0 <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800cdaa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cdae:	7463      	strb	r3, [r4, #17]
 800cdb0:	4b29      	ldr	r3, [pc, #164]	; (800ce58 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800cdb2:	e01e      	b.n	800cdf2 <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800cdb4:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800cdb8:	bf28      	it	cs
 800cdba:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800cdbe:	6063      	str	r3, [r4, #4]
 800cdc0:	2303      	movs	r3, #3
 800cdc2:	600b      	str	r3, [r1, #0]
 800cdc4:	f1a0 030b 	sub.w	r3, r0, #11
 800cdc8:	2b01      	cmp	r3, #1
 800cdca:	d806      	bhi.n	800cdda <PixelConfiguration::Validate(unsigned int&)+0x86>
 800cdcc:	7ca3      	ldrb	r3, [r4, #18]
 800cdce:	2b1f      	cmp	r3, #31
 800cdd0:	d83d      	bhi.n	800ce4e <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800cdd2:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800cdd6:	74a3      	strb	r3, [r4, #18]
 800cdd8:	e001      	b.n	800cdde <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800cdda:	2800      	cmp	r0, #0
 800cddc:	d139      	bne.n	800ce52 <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800cdde:	2300      	movs	r3, #0
 800cde0:	2a06      	cmp	r2, #6
 800cde2:	bf08      	it	eq
 800cde4:	60a3      	streq	r3, [r4, #8]
 800cde6:	280d      	cmp	r0, #13
 800cde8:	7563      	strb	r3, [r4, #21]
 800cdea:	68e3      	ldr	r3, [r4, #12]
 800cdec:	d119      	bne.n	800ce22 <PixelConfiguration::Validate(unsigned int&)+0xce>
 800cdee:	b913      	cbnz	r3, 800cdf6 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800cdf0:	4b1a      	ldr	r3, [pc, #104]	; (800ce5c <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800cdf2:	60e3      	str	r3, [r4, #12]
 800cdf4:	e003      	b.n	800cdfe <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800cdf6:	4a1a      	ldr	r2, [pc, #104]	; (800ce60 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800cdf8:	4293      	cmp	r3, r2
 800cdfa:	d900      	bls.n	800cdfe <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800cdfc:	60e2      	str	r2, [r4, #12]
 800cdfe:	7d23      	ldrb	r3, [r4, #20]
 800ce00:	b31b      	cbz	r3, 800ce4a <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800ce02:	7ce3      	ldrb	r3, [r4, #19]
 800ce04:	b9ab      	cbnz	r3, 800ce32 <PixelConfiguration::Validate(unsigned int&)+0xde>
 800ce06:	6822      	ldr	r2, [r4, #0]
 800ce08:	b17a      	cbz	r2, 800ce2a <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800ce0a:	f1a2 030b 	sub.w	r3, r2, #11
 800ce0e:	2b01      	cmp	r3, #1
 800ce10:	d90d      	bls.n	800ce2e <PixelConfiguration::Validate(unsigned int&)+0xda>
 800ce12:	4b14      	ldr	r3, [pc, #80]	; (800ce64 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800ce14:	4914      	ldr	r1, [pc, #80]	; (800ce68 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ce16:	2a0d      	cmp	r2, #13
 800ce18:	bf08      	it	eq
 800ce1a:	460b      	moveq	r3, r1
 800ce1c:	61a3      	str	r3, [r4, #24]
 800ce1e:	b002      	add	sp, #8
 800ce20:	bd10      	pop	{r4, pc}
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	d0e4      	beq.n	800cdf0 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800ce26:	4a11      	ldr	r2, [pc, #68]	; (800ce6c <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800ce28:	e7e6      	b.n	800cdf8 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800ce2a:	4b11      	ldr	r3, [pc, #68]	; (800ce70 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800ce2c:	e7f6      	b.n	800ce1c <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce2e:	4b11      	ldr	r3, [pc, #68]	; (800ce74 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800ce30:	e7f4      	b.n	800ce1c <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce32:	f1a3 0214 	sub.w	r2, r3, #20
 800ce36:	2a05      	cmp	r2, #5
 800ce38:	d807      	bhi.n	800ce4a <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800ce3a:	3b15      	subs	r3, #21
 800ce3c:	2b04      	cmp	r3, #4
 800ce3e:	bf96      	itet	ls
 800ce40:	4a0d      	ldrls	r2, [pc, #52]	; (800ce78 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800ce42:	4b0e      	ldrhi	r3, [pc, #56]	; (800ce7c <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800ce44:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800ce48:	e7e8      	b.n	800ce1c <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce4a:	4b07      	ldr	r3, [pc, #28]	; (800ce68 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800ce4c:	e7e6      	b.n	800ce1c <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800ce4e:	23ff      	movs	r3, #255	; 0xff
 800ce50:	e7c1      	b.n	800cdd6 <PixelConfiguration::Validate(unsigned int&)+0x82>
 800ce52:	280d      	cmp	r0, #13
 800ce54:	d18d      	bne.n	800cd72 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800ce56:	e7c2      	b.n	800cdde <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800ce58:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800ce5c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ce60:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800ce64:	08015d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, lr}
 800ce68:	08015a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, lr}
 800ce6c:	017d7840 	cmneq	sp, r0, asr #16
 800ce70:	08016094 	stmdaeq	r1, {r2, r4, r7, sp, lr}
 800ce74:	08016194 	stmdaeq	r1, {r2, r4, r7, r8, sp, lr}
 800ce78:	08015a80 	stmdaeq	r1, {r7, r9, fp, ip, lr}
 800ce7c:	08015b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, lr}

0800ce80 <PixelConfiguration::Print()>:
 800ce80:	b513      	push	{r0, r1, r4, lr}
 800ce82:	4604      	mov	r4, r0
 800ce84:	4825      	ldr	r0, [pc, #148]	; (800cf1c <PixelConfiguration::Print()+0x9c>)
 800ce86:	f7fc f9fb 	bl	8009280 <printf>
 800ce8a:	6820      	ldr	r0, [r4, #0]
 800ce8c:	f000 f85c 	bl	800cf48 <PixelType::GetType(pixel::Type)>
 800ce90:	6822      	ldr	r2, [r4, #0]
 800ce92:	4601      	mov	r1, r0
 800ce94:	4822      	ldr	r0, [pc, #136]	; (800cf20 <PixelConfiguration::Print()+0xa0>)
 800ce96:	f7fc f9f3 	bl	8009280 <printf>
 800ce9a:	6861      	ldr	r1, [r4, #4]
 800ce9c:	4821      	ldr	r0, [pc, #132]	; (800cf24 <PixelConfiguration::Print()+0xa4>)
 800ce9e:	f7fc f9ef 	bl	8009280 <printf>
 800cea2:	7d63      	ldrb	r3, [r4, #21]
 800cea4:	2b00      	cmp	r3, #0
 800cea6:	d030      	beq.n	800cf0a <PixelConfiguration::Print()+0x8a>
 800cea8:	68a0      	ldr	r0, [r4, #8]
 800ceaa:	f000 f8a5 	bl	800cff8 <PixelType::GetMap(pixel::Map)>
 800ceae:	68a2      	ldr	r2, [r4, #8]
 800ceb0:	4601      	mov	r1, r0
 800ceb2:	481d      	ldr	r0, [pc, #116]	; (800cf28 <PixelConfiguration::Print()+0xa8>)
 800ceb4:	f7fc f9e4 	bl	8009280 <printf>
 800ceb8:	7c20      	ldrb	r0, [r4, #16]
 800ceba:	f000 f8b3 	bl	800d024 <PixelType::ConvertTxH(unsigned char)>
 800cebe:	f7fb f989 	bl	80081d4 <__aeabi_f2d>
 800cec2:	460b      	mov	r3, r1
 800cec4:	7c21      	ldrb	r1, [r4, #16]
 800cec6:	4602      	mov	r2, r0
 800cec8:	9100      	str	r1, [sp, #0]
 800ceca:	4818      	ldr	r0, [pc, #96]	; (800cf2c <PixelConfiguration::Print()+0xac>)
 800cecc:	f7fc f9d8 	bl	8009280 <printf>
 800ced0:	7c60      	ldrb	r0, [r4, #17]
 800ced2:	f000 f8a7 	bl	800d024 <PixelType::ConvertTxH(unsigned char)>
 800ced6:	f7fb f97d 	bl	80081d4 <__aeabi_f2d>
 800ceda:	460b      	mov	r3, r1
 800cedc:	7c61      	ldrb	r1, [r4, #17]
 800cede:	4602      	mov	r2, r0
 800cee0:	9100      	str	r1, [sp, #0]
 800cee2:	4813      	ldr	r0, [pc, #76]	; (800cf30 <PixelConfiguration::Print()+0xb0>)
 800cee4:	f7fc f9cc 	bl	8009280 <printf>
 800cee8:	7d21      	ldrb	r1, [r4, #20]
 800ceea:	4a12      	ldr	r2, [pc, #72]	; (800cf34 <PixelConfiguration::Print()+0xb4>)
 800ceec:	4b12      	ldr	r3, [pc, #72]	; (800cf38 <PixelConfiguration::Print()+0xb8>)
 800ceee:	4813      	ldr	r0, [pc, #76]	; (800cf3c <PixelConfiguration::Print()+0xbc>)
 800cef0:	2900      	cmp	r1, #0
 800cef2:	bf14      	ite	ne
 800cef4:	4611      	movne	r1, r2
 800cef6:	4619      	moveq	r1, r3
 800cef8:	f7fc f9c2 	bl	8009280 <printf>
 800cefc:	68e1      	ldr	r1, [r4, #12]
 800cefe:	4810      	ldr	r0, [pc, #64]	; (800cf40 <PixelConfiguration::Print()+0xc0>)
 800cf00:	b002      	add	sp, #8
 800cf02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf06:	f7fc b9bb 	b.w	8009280 <printf>
 800cf0a:	6823      	ldr	r3, [r4, #0]
 800cf0c:	3b0b      	subs	r3, #11
 800cf0e:	2b01      	cmp	r3, #1
 800cf10:	d8ea      	bhi.n	800cee8 <PixelConfiguration::Print()+0x68>
 800cf12:	7ca1      	ldrb	r1, [r4, #18]
 800cf14:	480b      	ldr	r0, [pc, #44]	; (800cf44 <PixelConfiguration::Print()+0xc4>)
 800cf16:	f7fc f9b3 	bl	8009280 <printf>
 800cf1a:	e7e5      	b.n	800cee8 <PixelConfiguration::Print()+0x68>
 800cf1c:	080159c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, ip, lr}
 800cf20:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}
 800cf24:	080159ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, fp, ip, lr}
 800cf28:	080159fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 800cf2c:	08015a12 	stmdaeq	r1, {r1, r4, r9, fp, ip, lr}
 800cf30:	08015a2a 	stmdaeq	r1, {r1, r3, r5, r9, fp, ip, lr}
 800cf34:	080159bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, fp, ip, lr}
 800cf38:	080159c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, fp, ip, lr}
 800cf3c:	08015a59 	stmdaeq	r1, {r0, r3, r4, r6, r9, fp, ip, lr}
 800cf40:	08015a6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, fp, ip, lr}
 800cf44:	08015a42 	stmdaeq	r1, {r1, r6, r9, fp, ip, lr}

0800cf48 <PixelType::GetType(pixel::Type)>:
 800cf48:	280d      	cmp	r0, #13
 800cf4a:	bfda      	itte	le
 800cf4c:	4b02      	ldrle	r3, [pc, #8]	; (800cf58 <PixelType::GetType(pixel::Type)+0x10>)
 800cf4e:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800cf52:	4802      	ldrgt	r0, [pc, #8]	; (800cf5c <PixelType::GetType(pixel::Type)+0x14>)
 800cf54:	4770      	bx	lr
 800cf56:	bf00      	nop
 800cf58:	080162c8 	stmdaeq	r1, {r3, r6, r7, r9, sp, lr}
 800cf5c:	08016294 	stmdaeq	r1, {r2, r4, r7, r9, sp, lr}

0800cf60 <PixelType::GetType(char const*)>:
 800cf60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf62:	4604      	mov	r4, r0
 800cf64:	2000      	movs	r0, #0
 800cf66:	490f      	ldr	r1, [pc, #60]	; (800cfa4 <PixelType::GetType(char const*)+0x44>)
 800cf68:	1e67      	subs	r7, r4, #1
 800cf6a:	1e4e      	subs	r6, r1, #1
 800cf6c:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800cf70:	4615      	mov	r5, r2
 800cf72:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800cf76:	2b19      	cmp	r3, #25
 800cf78:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800cf7c:	bf98      	it	ls
 800cf7e:	f102 0520 	addls.w	r5, r2, #32
 800cf82:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800cf86:	f1bc 0f19 	cmp.w	ip, #25
 800cf8a:	bf98      	it	ls
 800cf8c:	3320      	addls	r3, #32
 800cf8e:	42ab      	cmp	r3, r5
 800cf90:	d005      	beq.n	800cf9e <PixelType::GetType(char const*)+0x3e>
 800cf92:	3001      	adds	r0, #1
 800cf94:	280e      	cmp	r0, #14
 800cf96:	f101 0108 	add.w	r1, r1, #8
 800cf9a:	d1e5      	bne.n	800cf68 <PixelType::GetType(char const*)+0x8>
 800cf9c:	e001      	b.n	800cfa2 <PixelType::GetType(char const*)+0x42>
 800cf9e:	2a00      	cmp	r2, #0
 800cfa0:	d1e4      	bne.n	800cf6c <PixelType::GetType(char const*)+0xc>
 800cfa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfa4:	080162c8 	stmdaeq	r1, {r3, r6, r7, r9, sp, lr}

0800cfa8 <PixelType::GetMap(char const*)>:
 800cfa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cfaa:	4605      	mov	r5, r0
 800cfac:	2000      	movs	r0, #0
 800cfae:	4b11      	ldr	r3, [pc, #68]	; (800cff4 <PixelType::GetMap(char const*)+0x4c>)
 800cfb0:	1e5c      	subs	r4, r3, #1
 800cfb2:	1e6e      	subs	r6, r5, #1
 800cfb4:	f103 0c02 	add.w	ip, r3, #2
 800cfb8:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800cfbc:	4617      	mov	r7, r2
 800cfbe:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800cfc2:	2919      	cmp	r1, #25
 800cfc4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800cfc8:	bf98      	it	ls
 800cfca:	f102 0720 	addls.w	r7, r2, #32
 800cfce:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800cfd2:	f1be 0f19 	cmp.w	lr, #25
 800cfd6:	bf98      	it	ls
 800cfd8:	3120      	addls	r1, #32
 800cfda:	42b9      	cmp	r1, r7
 800cfdc:	d005      	beq.n	800cfea <PixelType::GetMap(char const*)+0x42>
 800cfde:	3001      	adds	r0, #1
 800cfe0:	2806      	cmp	r0, #6
 800cfe2:	f103 0304 	add.w	r3, r3, #4
 800cfe6:	d1e3      	bne.n	800cfb0 <PixelType::GetMap(char const*)+0x8>
 800cfe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfea:	2a00      	cmp	r2, #0
 800cfec:	d0fc      	beq.n	800cfe8 <PixelType::GetMap(char const*)+0x40>
 800cfee:	4564      	cmp	r4, ip
 800cff0:	d1e2      	bne.n	800cfb8 <PixelType::GetMap(char const*)+0x10>
 800cff2:	e7f9      	b.n	800cfe8 <PixelType::GetMap(char const*)+0x40>
 800cff4:	080162b0 	stmdaeq	r1, {r4, r5, r7, r9, sp, lr}

0800cff8 <PixelType::GetMap(pixel::Map)>:
 800cff8:	2805      	cmp	r0, #5
 800cffa:	bfda      	itte	le
 800cffc:	4b02      	ldrle	r3, [pc, #8]	; (800d008 <PixelType::GetMap(pixel::Map)+0x10>)
 800cffe:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800d002:	4802      	ldrgt	r0, [pc, #8]	; (800d00c <PixelType::GetMap(pixel::Map)+0x14>)
 800d004:	4770      	bx	lr
 800d006:	bf00      	nop
 800d008:	080162b0 	stmdaeq	r1, {r4, r5, r7, r9, sp, lr}
 800d00c:	0801629c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sp, lr}

0800d010 <PixelType::GetMap(pixel::Type)>:
 800d010:	3801      	subs	r0, #1
 800d012:	2809      	cmp	r0, #9
 800d014:	bf9a      	itte	ls
 800d016:	4b02      	ldrls	r3, [pc, #8]	; (800d020 <PixelType::GetMap(pixel::Type)+0x10>)
 800d018:	5618      	ldrsbls	r0, [r3, r0]
 800d01a:	2002      	movhi	r0, #2
 800d01c:	4770      	bx	lr
 800d01e:	bf00      	nop
 800d020:	080162a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sp, lr}

0800d024 <PixelType::ConvertTxH(unsigned char)>:
 800d024:	28f0      	cmp	r0, #240	; 0xf0
 800d026:	d010      	beq.n	800d04a <PixelType::ConvertTxH(unsigned char)+0x26>
 800d028:	d807      	bhi.n	800d03a <PixelType::ConvertTxH(unsigned char)+0x16>
 800d02a:	28c0      	cmp	r0, #192	; 0xc0
 800d02c:	d00f      	beq.n	800d04e <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d02e:	28e0      	cmp	r0, #224	; 0xe0
 800d030:	d00f      	beq.n	800d052 <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d032:	2880      	cmp	r0, #128	; 0x80
 800d034:	d113      	bne.n	800d05e <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d036:	480b      	ldr	r0, [pc, #44]	; (800d064 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d038:	4770      	bx	lr
 800d03a:	28fc      	cmp	r0, #252	; 0xfc
 800d03c:	d00b      	beq.n	800d056 <PixelType::ConvertTxH(unsigned char)+0x32>
 800d03e:	28fe      	cmp	r0, #254	; 0xfe
 800d040:	d00b      	beq.n	800d05a <PixelType::ConvertTxH(unsigned char)+0x36>
 800d042:	28f8      	cmp	r0, #248	; 0xf8
 800d044:	d10b      	bne.n	800d05e <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d046:	4808      	ldr	r0, [pc, #32]	; (800d068 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d048:	4770      	bx	lr
 800d04a:	4808      	ldr	r0, [pc, #32]	; (800d06c <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d04c:	4770      	bx	lr
 800d04e:	4808      	ldr	r0, [pc, #32]	; (800d070 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d050:	4770      	bx	lr
 800d052:	4808      	ldr	r0, [pc, #32]	; (800d074 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d054:	4770      	bx	lr
 800d056:	4808      	ldr	r0, [pc, #32]	; (800d078 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d058:	4770      	bx	lr
 800d05a:	4808      	ldr	r0, [pc, #32]	; (800d07c <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d05c:	4770      	bx	lr
 800d05e:	2000      	movs	r0, #0
 800d060:	4770      	bx	lr
 800d062:	bf00      	nop
 800d064:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d068:	3f480000 	svccc	0x00480000
 800d06c:	3f200000 	svccc	0x00200000
 800d070:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d074:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d078:	3f700000 	svccc	0x00700000
 800d07c:	3f8c0000 	svccc	0x008c0000

0800d080 <PixelType::ConvertTxH(float)>:
 800d080:	b510      	push	{r4, lr}
 800d082:	491d      	ldr	r1, [pc, #116]	; (800d0f8 <PixelType::ConvertTxH(float)+0x78>)
 800d084:	4604      	mov	r4, r0
 800d086:	f7fa fed9 	bl	8007e3c <__aeabi_fcmplt>
 800d08a:	bb30      	cbnz	r0, 800d0da <PixelType::ConvertTxH(float)+0x5a>
 800d08c:	4620      	mov	r0, r4
 800d08e:	491b      	ldr	r1, [pc, #108]	; (800d0fc <PixelType::ConvertTxH(float)+0x7c>)
 800d090:	f7fa fed4 	bl	8007e3c <__aeabi_fcmplt>
 800d094:	bb18      	cbnz	r0, 800d0de <PixelType::ConvertTxH(float)+0x5e>
 800d096:	4620      	mov	r0, r4
 800d098:	4919      	ldr	r1, [pc, #100]	; (800d100 <PixelType::ConvertTxH(float)+0x80>)
 800d09a:	f7fa fecf 	bl	8007e3c <__aeabi_fcmplt>
 800d09e:	bb00      	cbnz	r0, 800d0e2 <PixelType::ConvertTxH(float)+0x62>
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	4918      	ldr	r1, [pc, #96]	; (800d104 <PixelType::ConvertTxH(float)+0x84>)
 800d0a4:	f7fa feca 	bl	8007e3c <__aeabi_fcmplt>
 800d0a8:	b9e8      	cbnz	r0, 800d0e6 <PixelType::ConvertTxH(float)+0x66>
 800d0aa:	4620      	mov	r0, r4
 800d0ac:	4916      	ldr	r1, [pc, #88]	; (800d108 <PixelType::ConvertTxH(float)+0x88>)
 800d0ae:	f7fa fec5 	bl	8007e3c <__aeabi_fcmplt>
 800d0b2:	b9d0      	cbnz	r0, 800d0ea <PixelType::ConvertTxH(float)+0x6a>
 800d0b4:	4620      	mov	r0, r4
 800d0b6:	4915      	ldr	r1, [pc, #84]	; (800d10c <PixelType::ConvertTxH(float)+0x8c>)
 800d0b8:	f7fa fec0 	bl	8007e3c <__aeabi_fcmplt>
 800d0bc:	b9b8      	cbnz	r0, 800d0ee <PixelType::ConvertTxH(float)+0x6e>
 800d0be:	4620      	mov	r0, r4
 800d0c0:	4913      	ldr	r1, [pc, #76]	; (800d110 <PixelType::ConvertTxH(float)+0x90>)
 800d0c2:	f7fa febb 	bl	8007e3c <__aeabi_fcmplt>
 800d0c6:	b9a0      	cbnz	r0, 800d0f2 <PixelType::ConvertTxH(float)+0x72>
 800d0c8:	4620      	mov	r0, r4
 800d0ca:	4912      	ldr	r1, [pc, #72]	; (800d114 <PixelType::ConvertTxH(float)+0x94>)
 800d0cc:	f7fa feb6 	bl	8007e3c <__aeabi_fcmplt>
 800d0d0:	2800      	cmp	r0, #0
 800d0d2:	bf14      	ite	ne
 800d0d4:	20fe      	movne	r0, #254	; 0xfe
 800d0d6:	2000      	moveq	r0, #0
 800d0d8:	bd10      	pop	{r4, pc}
 800d0da:	2000      	movs	r0, #0
 800d0dc:	e7fc      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0de:	2080      	movs	r0, #128	; 0x80
 800d0e0:	e7fa      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0e2:	20c0      	movs	r0, #192	; 0xc0
 800d0e4:	e7f8      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0e6:	20e0      	movs	r0, #224	; 0xe0
 800d0e8:	e7f6      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0ea:	20f0      	movs	r0, #240	; 0xf0
 800d0ec:	e7f4      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0ee:	20f8      	movs	r0, #248	; 0xf8
 800d0f0:	e7f2      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0f2:	20fc      	movs	r0, #252	; 0xfc
 800d0f4:	e7f0      	b.n	800d0d8 <PixelType::ConvertTxH(float)+0x58>
 800d0f6:	bf00      	nop
 800d0f8:	3da00000 	stccc	0, cr0, [r0]
 800d0fc:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d100:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d104:	3f0c0000 	svccc	0x000c0000
 800d108:	3f340000 	svccc	0x00340000
 800d10c:	3f5c0000 	svccc	0x005c0000
 800d110:	3f820000 	svccc	0x00820000
 800d114:	3f960000 	svccc	0x00960000

0800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800d118:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d11a:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800d11e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800d122:	b2cc      	uxtb	r4, r1
 800d124:	490e      	ldr	r1, [pc, #56]	; (800d160 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x48>)
 800d126:	4605      	mov	r5, r0
 800d128:	6808      	ldr	r0, [r1, #0]
 800d12a:	6801      	ldr	r1, [r0, #0]
 800d12c:	2907      	cmp	r1, #7
 800d12e:	d005      	beq.n	800d13c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800d130:	4629      	mov	r1, r5
 800d132:	9400      	str	r4, [sp, #0]
 800d134:	f000 fa88 	bl	800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d138:	b003      	add	sp, #12
 800d13a:	bd30      	pop	{r4, r5, pc}
 800d13c:	429a      	cmp	r2, r3
 800d13e:	f04f 0100 	mov.w	r1, #0
 800d142:	d109      	bne.n	800d158 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800d144:	42a2      	cmp	r2, r4
 800d146:	d107      	bne.n	800d158 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800d148:	e9cd 1200 	strd	r1, r2, [sp]
 800d14c:	460b      	mov	r3, r1
 800d14e:	460a      	mov	r2, r1
 800d150:	4629      	mov	r1, r5
 800d152:	f000 feab 	bl	800deac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d156:	e7ef      	b.n	800d138 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x20>
 800d158:	e9cd 4100 	strd	r4, r1, [sp]
 800d15c:	e7f8      	b.n	800d150 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x38>
 800d15e:	bf00      	nop
 800d160:	20001ea0 	andcs	r1, r0, r0, lsr #29

0800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800d164:	b538      	push	{r3, r4, r5, lr}
 800d166:	2400      	movs	r4, #0
 800d168:	4d05      	ldr	r5, [pc, #20]	; (800d180 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800d16a:	682b      	ldr	r3, [r5, #0]
 800d16c:	429c      	cmp	r4, r3
 800d16e:	d300      	bcc.n	800d172 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0xe>
 800d170:	bd38      	pop	{r3, r4, r5, pc}
 800d172:	4620      	mov	r0, r4
 800d174:	2100      	movs	r1, #0
 800d176:	f7ff ffcf 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d17a:	3401      	adds	r4, #1
 800d17c:	e7f5      	b.n	800d16a <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800d17e:	bf00      	nop
 800d180:	20001e9c 	mulcs	r0, ip, lr

0800d184 <PixelPatterns::PixelPatterns(unsigned int)>:
 800d184:	2901      	cmp	r1, #1
 800d186:	bf28      	it	cs
 800d188:	2101      	movcs	r1, #1
 800d18a:	4b08      	ldr	r3, [pc, #32]	; (800d1ac <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800d18c:	4a08      	ldr	r2, [pc, #32]	; (800d1b0 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800d18e:	681b      	ldr	r3, [r3, #0]
 800d190:	6013      	str	r3, [r2, #0]
 800d192:	4a08      	ldr	r2, [pc, #32]	; (800d1b4 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800d194:	6011      	str	r1, [r2, #0]
 800d196:	685a      	ldr	r2, [r3, #4]
 800d198:	4b07      	ldr	r3, [pc, #28]	; (800d1b8 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800d19a:	601a      	str	r2, [r3, #0]
 800d19c:	2200      	movs	r2, #0
 800d19e:	4b07      	ldr	r3, [pc, #28]	; (800d1bc <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800d1a0:	6819      	ldr	r1, [r3, #0]
 800d1a2:	4b07      	ldr	r3, [pc, #28]	; (800d1c0 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800d1a4:	61da      	str	r2, [r3, #28]
 800d1a6:	6019      	str	r1, [r3, #0]
 800d1a8:	619a      	str	r2, [r3, #24]
 800d1aa:	4770      	bx	lr
 800d1ac:	20001eac 	andcs	r1, r0, ip, lsr #29
 800d1b0:	20001ea0 	andcs	r1, r0, r0, lsr #29
 800d1b4:	20001e94 	mulcs	r0, r4, lr
 800d1b8:	20001e9c 	mulcs	r0, ip, lr
 800d1bc:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800d1c0:	20001e74 	andcs	r1, r0, r4, ror lr

0800d1c4 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800d1c4:	2805      	cmp	r0, #5
 800d1c6:	bfdd      	ittte	le
 800d1c8:	220e      	movle	r2, #14
 800d1ca:	4b02      	ldrle	r3, [pc, #8]	; (800d1d4 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800d1cc:	fb02 3000 	mlale	r0, r2, r0, r3
 800d1d0:	4801      	ldrgt	r0, [pc, #4]	; (800d1d8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800d1d2:	4770      	bx	lr
 800d1d4:	08016338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp, lr}
 800d1d8:	08016294 	stmdaeq	r1, {r2, r4, r7, r9, sp, lr}

0800d1dc <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d1dc:	b570      	push	{r4, r5, r6, lr}
 800d1de:	460e      	mov	r6, r1
 800d1e0:	4615      	mov	r5, r2
 800d1e2:	461c      	mov	r4, r3
 800d1e4:	f7ff ffbe 	bl	800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d1e8:	2301      	movs	r3, #1
 800d1ea:	4905      	ldr	r1, [pc, #20]	; (800d200 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800d1ec:	22ff      	movs	r2, #255	; 0xff
 800d1ee:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d1f2:	61cb      	str	r3, [r1, #28]
 800d1f4:	2300      	movs	r3, #0
 800d1f6:	604d      	str	r5, [r1, #4]
 800d1f8:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d1fc:	618c      	str	r4, [r1, #24]
 800d1fe:	bd70      	pop	{r4, r5, r6, pc}
 800d200:	20001e74 	andcs	r1, r0, r4, ror lr

0800d204 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d204:	b570      	push	{r4, r5, r6, lr}
 800d206:	460e      	mov	r6, r1
 800d208:	461c      	mov	r4, r3
 800d20a:	4615      	mov	r5, r2
 800d20c:	f7ff ffaa 	bl	800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d210:	2302      	movs	r3, #2
 800d212:	4908      	ldr	r1, [pc, #32]	; (800d234 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d214:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d218:	61cb      	str	r3, [r1, #28]
 800d21a:	9b04      	ldr	r3, [sp, #16]
 800d21c:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800d220:	604b      	str	r3, [r1, #4]
 800d222:	4b05      	ldr	r3, [pc, #20]	; (800d238 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d224:	681b      	ldr	r3, [r3, #0]
 800d226:	610b      	str	r3, [r1, #16]
 800d228:	2300      	movs	r3, #0
 800d22a:	614b      	str	r3, [r1, #20]
 800d22c:	9b05      	ldr	r3, [sp, #20]
 800d22e:	618b      	str	r3, [r1, #24]
 800d230:	bd70      	pop	{r4, r5, r6, pc}
 800d232:	bf00      	nop
 800d234:	20001e74 	andcs	r1, r0, r4, ror lr
 800d238:	20001e9c 	mulcs	r0, ip, lr

0800d23c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d23c:	b570      	push	{r4, r5, r6, lr}
 800d23e:	460e      	mov	r6, r1
 800d240:	461d      	mov	r5, r3
 800d242:	4614      	mov	r4, r2
 800d244:	f7ff ff8e 	bl	800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d248:	2303      	movs	r3, #3
 800d24a:	4907      	ldr	r1, [pc, #28]	; (800d268 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d24c:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d250:	61cb      	str	r3, [r1, #28]
 800d252:	4b06      	ldr	r3, [pc, #24]	; (800d26c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d254:	604d      	str	r5, [r1, #4]
 800d256:	681b      	ldr	r3, [r3, #0]
 800d258:	608c      	str	r4, [r1, #8]
 800d25a:	610b      	str	r3, [r1, #16]
 800d25c:	2300      	movs	r3, #0
 800d25e:	614b      	str	r3, [r1, #20]
 800d260:	9b04      	ldr	r3, [sp, #16]
 800d262:	618b      	str	r3, [r1, #24]
 800d264:	bd70      	pop	{r4, r5, r6, pc}
 800d266:	bf00      	nop
 800d268:	20001e74 	andcs	r1, r0, r4, ror lr
 800d26c:	20001e9c 	mulcs	r0, ip, lr

0800d270 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d270:	b570      	push	{r4, r5, r6, lr}
 800d272:	460e      	mov	r6, r1
 800d274:	461d      	mov	r5, r3
 800d276:	4614      	mov	r4, r2
 800d278:	f7ff ff74 	bl	800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d27c:	2304      	movs	r3, #4
 800d27e:	4912      	ldr	r1, [pc, #72]	; (800d2c8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800d280:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d284:	604d      	str	r5, [r1, #4]
 800d286:	4d11      	ldr	r5, [pc, #68]	; (800d2cc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d288:	61cb      	str	r3, [r1, #28]
 800d28a:	6828      	ldr	r0, [r5, #0]
 800d28c:	608c      	str	r4, [r1, #8]
 800d28e:	1e43      	subs	r3, r0, #1
 800d290:	005b      	lsls	r3, r3, #1
 800d292:	b29b      	uxth	r3, r3
 800d294:	610b      	str	r3, [r1, #16]
 800d296:	2300      	movs	r3, #0
 800d298:	4c0d      	ldr	r4, [pc, #52]	; (800d2d0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d29a:	614b      	str	r3, [r1, #20]
 800d29c:	6823      	ldr	r3, [r4, #0]
 800d29e:	b97b      	cbnz	r3, 800d2c0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x50>
 800d2a0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d2a4:	4298      	cmp	r0, r3
 800d2a6:	bf2c      	ite	cs
 800d2a8:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d2ac:	0080      	lslcc	r0, r0, #2
 800d2ae:	f004 ff7f 	bl	80121b0 <operator new[](unsigned int)>
 800d2b2:	2200      	movs	r2, #0
 800d2b4:	682b      	ldr	r3, [r5, #0]
 800d2b6:	6020      	str	r0, [r4, #0]
 800d2b8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800d2bc:	4298      	cmp	r0, r3
 800d2be:	d100      	bne.n	800d2c2 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800d2c0:	bd70      	pop	{r4, r5, r6, pc}
 800d2c2:	f840 2b04 	str.w	r2, [r0], #4
 800d2c6:	e7f9      	b.n	800d2bc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800d2c8:	20001e74 	andcs	r1, r0, r4, ror lr
 800d2cc:	20001e9c 	mulcs	r0, ip, lr
 800d2d0:	20001e98 	mulcs	r0, r8, lr

0800d2d4 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d2d4:	b570      	push	{r4, r5, r6, lr}
 800d2d6:	460e      	mov	r6, r1
 800d2d8:	461c      	mov	r4, r3
 800d2da:	4615      	mov	r5, r2
 800d2dc:	f7ff ff42 	bl	800d164 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d2e0:	2305      	movs	r3, #5
 800d2e2:	4907      	ldr	r1, [pc, #28]	; (800d300 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d2e4:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800d2e8:	61cb      	str	r3, [r1, #28]
 800d2ea:	9b05      	ldr	r3, [sp, #20]
 800d2ec:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800d2f0:	604b      	str	r3, [r1, #4]
 800d2f2:	9b04      	ldr	r3, [sp, #16]
 800d2f4:	610b      	str	r3, [r1, #16]
 800d2f6:	2300      	movs	r3, #0
 800d2f8:	614b      	str	r3, [r1, #20]
 800d2fa:	9b06      	ldr	r3, [sp, #24]
 800d2fc:	618b      	str	r3, [r1, #24]
 800d2fe:	bd70      	pop	{r4, r5, r6, pc}
 800d300:	20001e74 	andcs	r1, r0, r4, ror lr

0800d304 <PixelPatterns::Wheel(unsigned char)>:
 800d304:	43cb      	mvns	r3, r1
 800d306:	b2db      	uxtb	r3, r3
 800d308:	2b54      	cmp	r3, #84	; 0x54
 800d30a:	d809      	bhi.n	800d320 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d30c:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800d310:	b2db      	uxtb	r3, r3
 800d312:	1e5a      	subs	r2, r3, #1
 800d314:	4258      	negs	r0, r3
 800d316:	b2d2      	uxtb	r2, r2
 800d318:	b2c0      	uxtb	r0, r0
 800d31a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800d31e:	4770      	bx	lr
 800d320:	2ba9      	cmp	r3, #169	; 0xa9
 800d322:	d809      	bhi.n	800d338 <PixelPatterns::Wheel(unsigned char)+0x34>
 800d324:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800d328:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d32c:	b2c9      	uxtb	r1, r1
 800d32e:	43c8      	mvns	r0, r1
 800d330:	b2c0      	uxtb	r0, r0
 800d332:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800d336:	4770      	bx	lr
 800d338:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800d33c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d340:	b2c9      	uxtb	r1, r1
 800d342:	0208      	lsls	r0, r1, #8
 800d344:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800d348:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800d34c:	4770      	bx	lr
	...

0800d350 <PixelPatterns::Increment(unsigned int)>:
 800d350:	4a0d      	ldr	r2, [pc, #52]	; (800d388 <PixelPatterns::Increment(unsigned int)+0x38>)
 800d352:	b510      	push	{r4, lr}
 800d354:	014c      	lsls	r4, r1, #5
 800d356:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d35a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d35e:	b930      	cbnz	r0, 800d36e <PixelPatterns::Increment(unsigned int)+0x1e>
 800d360:	690a      	ldr	r2, [r1, #16]
 800d362:	3301      	adds	r3, #1
 800d364:	4293      	cmp	r3, r2
 800d366:	bf18      	it	ne
 800d368:	4618      	movne	r0, r3
 800d36a:	6148      	str	r0, [r1, #20]
 800d36c:	bd10      	pop	{r4, pc}
 800d36e:	b92b      	cbnz	r3, 800d37c <PixelPatterns::Increment(unsigned int)+0x2c>
 800d370:	4422      	add	r2, r4
 800d372:	6913      	ldr	r3, [r2, #16]
 800d374:	3b01      	subs	r3, #1
 800d376:	b29b      	uxth	r3, r3
 800d378:	6153      	str	r3, [r2, #20]
 800d37a:	e7f7      	b.n	800d36c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d37c:	3b01      	subs	r3, #1
 800d37e:	614b      	str	r3, [r1, #20]
 800d380:	2b00      	cmp	r3, #0
 800d382:	d1f3      	bne.n	800d36c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d384:	e7f4      	b.n	800d370 <PixelPatterns::Increment(unsigned int)+0x20>
 800d386:	bf00      	nop
 800d388:	20001e74 	andcs	r1, r0, r4, ror lr

0800d38c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d38c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d390:	4604      	mov	r4, r0
 800d392:	460d      	mov	r5, r1
 800d394:	2700      	movs	r7, #0
 800d396:	4b10      	ldr	r3, [pc, #64]	; (800d3d8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800d398:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800d3dc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800d39c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d3a0:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d3a4:	f8d8 2000 	ldr.w	r2, [r8]
 800d3a8:	b2be      	uxth	r6, r7
 800d3aa:	42b2      	cmp	r2, r6
 800d3ac:	f107 0701 	add.w	r7, r7, #1
 800d3b0:	d805      	bhi.n	800d3be <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800d3b2:	4629      	mov	r1, r5
 800d3b4:	4620      	mov	r0, r4
 800d3b6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d3ba:	f7ff bfc9 	b.w	800d350 <PixelPatterns::Increment(unsigned int)>
 800d3be:	0233      	lsls	r3, r6, #8
 800d3c0:	fbb3 f3f2 	udiv	r3, r3, r2
 800d3c4:	444b      	add	r3, r9
 800d3c6:	b2d9      	uxtb	r1, r3
 800d3c8:	4620      	mov	r0, r4
 800d3ca:	f7ff ff9b 	bl	800d304 <PixelPatterns::Wheel(unsigned char)>
 800d3ce:	4601      	mov	r1, r0
 800d3d0:	4630      	mov	r0, r6
 800d3d2:	f7ff fea1 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d3d6:	e7e5      	b.n	800d3a4 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d3d8:	20001e74 	andcs	r1, r0, r4, ror lr
 800d3dc:	20001e9c 	mulcs	r0, ip, lr

0800d3e0 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d3e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3e4:	4605      	mov	r5, r0
 800d3e6:	460c      	mov	r4, r1
 800d3e8:	f04f 0b00 	mov.w	fp, #0
 800d3ec:	4b11      	ldr	r3, [pc, #68]	; (800d434 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800d3ee:	4e12      	ldr	r6, [pc, #72]	; (800d438 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d3f0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d3f4:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d3f8:	f8df a040 	ldr.w	sl, [pc, #64]	; 800d43c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d3fc:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800d400:	6833      	ldr	r3, [r6, #0]
 800d402:	fa1f f08b 	uxth.w	r0, fp
 800d406:	4283      	cmp	r3, r0
 800d408:	d805      	bhi.n	800d416 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800d40a:	4621      	mov	r1, r4
 800d40c:	4628      	mov	r0, r5
 800d40e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d412:	f7ff bf9d 	b.w	800d350 <PixelPatterns::Increment(unsigned int)>
 800d416:	eb09 0300 	add.w	r3, r9, r0
 800d41a:	fb0a f303 	mul.w	r3, sl, r3
 800d41e:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d422:	bf94      	ite	ls
 800d424:	4639      	movls	r1, r7
 800d426:	4641      	movhi	r1, r8
 800d428:	f7ff fe76 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d42c:	f10b 0b01 	add.w	fp, fp, #1
 800d430:	e7e6      	b.n	800d400 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800d432:	bf00      	nop
 800d434:	20001e74 	andcs	r1, r0, r4, ror lr
 800d438:	20001e9c 	mulcs	r0, ip, lr
 800d43c:	aaaaaaab 	bge	6ab7ef0 <__stack_size+0x6ab5ef0>

0800d440 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d440:	b538      	push	{r3, r4, r5, lr}
 800d442:	4605      	mov	r5, r0
 800d444:	460c      	mov	r4, r1
 800d446:	4b06      	ldr	r3, [pc, #24]	; (800d460 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800d448:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d44c:	6899      	ldr	r1, [r3, #8]
 800d44e:	6958      	ldr	r0, [r3, #20]
 800d450:	f7ff fe62 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d454:	4621      	mov	r1, r4
 800d456:	4628      	mov	r0, r5
 800d458:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d45c:	f7ff bf78 	b.w	800d350 <PixelPatterns::Increment(unsigned int)>
 800d460:	20001e74 	andcs	r1, r0, r4, ror lr

0800d464 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d468:	460d      	mov	r5, r1
 800d46a:	f04f 0900 	mov.w	r9, #0
 800d46e:	4a27      	ldr	r2, [pc, #156]	; (800d50c <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d470:	b085      	sub	sp, #20
 800d472:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d476:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800d47a:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800d47e:	00b3      	lsls	r3, r6, #2
 800d480:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800d510 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d484:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800d514 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d488:	9002      	str	r0, [sp, #8]
 800d48a:	9301      	str	r3, [sp, #4]
 800d48c:	1bbf      	subs	r7, r7, r6
 800d48e:	f8da 1000 	ldr.w	r1, [sl]
 800d492:	fa1f f489 	uxth.w	r4, r9
 800d496:	42a1      	cmp	r1, r4
 800d498:	d806      	bhi.n	800d4a8 <PixelPatterns::ScannerUpdate(unsigned int)+0x44>
 800d49a:	4629      	mov	r1, r5
 800d49c:	9802      	ldr	r0, [sp, #8]
 800d49e:	b005      	add	sp, #20
 800d4a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4a4:	f7ff bf54 	b.w	800d350 <PixelPatterns::Increment(unsigned int)>
 800d4a8:	42a6      	cmp	r6, r4
 800d4aa:	d10b      	bne.n	800d4c4 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800d4ac:	4659      	mov	r1, fp
 800d4ae:	4630      	mov	r0, r6
 800d4b0:	f7ff fe32 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4b4:	f8d8 1000 	ldr.w	r1, [r8]
 800d4b8:	9b01      	ldr	r3, [sp, #4]
 800d4ba:	f841 b003 	str.w	fp, [r1, r3]
 800d4be:	f109 0901 	add.w	r9, r9, #1
 800d4c2:	e7e4      	b.n	800d48e <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800d4c4:	42a7      	cmp	r7, r4
 800d4c6:	d108      	bne.n	800d4da <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800d4c8:	4659      	mov	r1, fp
 800d4ca:	4638      	mov	r0, r7
 800d4cc:	f7ff fe24 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4d0:	f8d8 1000 	ldr.w	r1, [r8]
 800d4d4:	f841 b024 	str.w	fp, [r1, r4, lsl #2]
 800d4d8:	e7f1      	b.n	800d4be <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800d4da:	f8d8 1000 	ldr.w	r1, [r8]
 800d4de:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800d4e2:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800d4e6:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800d4ea:	0209      	lsls	r1, r1, #8
 800d4ec:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800d4f0:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800d4f4:	4301      	orrs	r1, r0
 800d4f6:	4620      	mov	r0, r4
 800d4f8:	9103      	str	r1, [sp, #12]
 800d4fa:	f7ff fe0d 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4fe:	f8d8 0000 	ldr.w	r0, [r8]
 800d502:	9903      	ldr	r1, [sp, #12]
 800d504:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800d508:	e7d9      	b.n	800d4be <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800d50a:	bf00      	nop
 800d50c:	20001e74 	andcs	r1, r0, r4, ror lr
 800d510:	20001e9c 	mulcs	r0, ip, lr
 800d514:	20001e98 	mulcs	r0, r8, lr

0800d518 <PixelPatterns::FadeUpdate(unsigned int)>:
 800d518:	4a21      	ldr	r2, [pc, #132]	; (800d5a0 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800d51a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d51e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d522:	4605      	mov	r5, r0
 800d524:	e9d2 0704 	ldrd	r0, r7, [r2, #16]
 800d528:	460c      	mov	r4, r1
 800d52a:	e9d2 1302 	ldrd	r1, r3, [r2, #8]
 800d52e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d532:	437a      	muls	r2, r7
 800d534:	1bc6      	subs	r6, r0, r7
 800d536:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 800d53a:	fb06 220c 	mla	r2, r6, ip, r2
 800d53e:	fbb2 f2f0 	udiv	r2, r2, r0
 800d542:	0212      	lsls	r2, r2, #8
 800d544:	fa1f fc82 	uxth.w	ip, r2
 800d548:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800d54c:	437a      	muls	r2, r7
 800d54e:	b2db      	uxtb	r3, r3
 800d550:	437b      	muls	r3, r7
 800d552:	f3c1 4e07 	ubfx	lr, r1, #16, #8
 800d556:	fb06 220e 	mla	r2, r6, lr, r2
 800d55a:	b2c9      	uxtb	r1, r1
 800d55c:	fb06 3301 	mla	r3, r6, r1, r3
 800d560:	fbb2 f2f0 	udiv	r2, r2, r0
 800d564:	fbb3 f3f0 	udiv	r3, r3, r0
 800d568:	2700      	movs	r7, #0
 800d56a:	0412      	lsls	r2, r2, #16
 800d56c:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800d570:	ea4c 0202 	orr.w	r2, ip, r2
 800d574:	b2db      	uxtb	r3, r3
 800d576:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800d5a4 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800d57a:	ea42 0603 	orr.w	r6, r2, r3
 800d57e:	f8d8 3000 	ldr.w	r3, [r8]
 800d582:	429f      	cmp	r7, r3
 800d584:	d305      	bcc.n	800d592 <PixelPatterns::FadeUpdate(unsigned int)+0x7a>
 800d586:	4621      	mov	r1, r4
 800d588:	4628      	mov	r0, r5
 800d58a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d58e:	f7ff bedf 	b.w	800d350 <PixelPatterns::Increment(unsigned int)>
 800d592:	4638      	mov	r0, r7
 800d594:	4631      	mov	r1, r6
 800d596:	f7ff fdbf 	bl	800d118 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d59a:	3701      	adds	r7, #1
 800d59c:	e7ef      	b.n	800d57e <PixelPatterns::FadeUpdate(unsigned int)+0x66>
 800d59e:	bf00      	nop
 800d5a0:	20001e74 	andcs	r1, r0, r4, ror lr
 800d5a4:	20001e9c 	mulcs	r0, ip, lr

0800d5a8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800d5a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d5aa:	4b12      	ldr	r3, [pc, #72]	; (800d5f4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800d5ac:	014e      	lsls	r6, r1, #5
 800d5ae:	599c      	ldr	r4, [r3, r6]
 800d5b0:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800d5b4:	686f      	ldr	r7, [r5, #4]
 800d5b6:	1b14      	subs	r4, r2, r4
 800d5b8:	42bc      	cmp	r4, r7
 800d5ba:	d319      	bcc.n	800d5f0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d5bc:	519a      	str	r2, [r3, r6]
 800d5be:	69eb      	ldr	r3, [r5, #28]
 800d5c0:	3b01      	subs	r3, #1
 800d5c2:	2b04      	cmp	r3, #4
 800d5c4:	d814      	bhi.n	800d5f0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d5c6:	e8df f003 	tbb	[pc, r3]
 800d5ca:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800d5ce:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800d5d2:	fedc 2001 	cdp2	0, 13, cr2, cr12, cr1, {0}
 800d5d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d5d8:	f7ff ff02 	bl	800d3e0 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800d5dc:	e7fa      	b.n	800d5d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5de:	f7ff ff2f 	bl	800d440 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800d5e2:	e7f7      	b.n	800d5d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5e4:	f7ff ff3e 	bl	800d464 <PixelPatterns::ScannerUpdate(unsigned int)>
 800d5e8:	e7f4      	b.n	800d5d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5ea:	f7ff ff95 	bl	800d518 <PixelPatterns::FadeUpdate(unsigned int)>
 800d5ee:	e7f1      	b.n	800d5d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d5f0:	2000      	movs	r0, #0
 800d5f2:	e7f0      	b.n	800d5d6 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800d5f4:	20001e74 	andcs	r1, r0, r4, ror lr

0800d5f8 <PixelPatterns::Run()>:
 800d5f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5fc:	4606      	mov	r6, r0
 800d5fe:	f006 fabb 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800d602:	4604      	mov	r4, r0
 800d604:	b9c0      	cbnz	r0, 800d638 <PixelPatterns::Run()+0x40>
 800d606:	4605      	mov	r5, r0
 800d608:	4b0c      	ldr	r3, [pc, #48]	; (800d63c <PixelPatterns::Run()+0x44>)
 800d60a:	4f0d      	ldr	r7, [pc, #52]	; (800d640 <PixelPatterns::Run()+0x48>)
 800d60c:	f8d3 8000 	ldr.w	r8, [r3]
 800d610:	683b      	ldr	r3, [r7, #0]
 800d612:	b2e9      	uxtb	r1, r5
 800d614:	428b      	cmp	r3, r1
 800d616:	f105 0501 	add.w	r5, r5, #1
 800d61a:	d806      	bhi.n	800d62a <PixelPatterns::Run()+0x32>
 800d61c:	b164      	cbz	r4, 800d638 <PixelPatterns::Run()+0x40>
 800d61e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d622:	4b08      	ldr	r3, [pc, #32]	; (800d644 <PixelPatterns::Run()+0x4c>)
 800d624:	6818      	ldr	r0, [r3, #0]
 800d626:	f000 bdb1 	b.w	800e18c <WS28xx::Update()>
 800d62a:	4642      	mov	r2, r8
 800d62c:	4630      	mov	r0, r6
 800d62e:	f7ff ffbb 	bl	800d5a8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800d632:	4304      	orrs	r4, r0
 800d634:	b2e4      	uxtb	r4, r4
 800d636:	e7eb      	b.n	800d610 <PixelPatterns::Run()+0x18>
 800d638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d63c:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800d640:	20001e94 	mulcs	r0, r4, lr
 800d644:	20001ea0 	andcs	r1, r0, r0, lsr #29

0800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800d648:	b570      	push	{r4, r5, r6, lr}
 800d64a:	6984      	ldr	r4, [r0, #24]
 800d64c:	f89d e010 	ldrb.w	lr, [sp, #16]
 800d650:	f814 c003 	ldrb.w	ip, [r4, r3]
 800d654:	7d43      	ldrb	r3, [r0, #21]
 800d656:	5ca2      	ldrb	r2, [r4, r2]
 800d658:	f814 e00e 	ldrb.w	lr, [r4, lr]
 800d65c:	b993      	cbnz	r3, 800d684 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3c>
 800d65e:	6803      	ldr	r3, [r0, #0]
 800d660:	f1a3 040b 	sub.w	r4, r3, #11
 800d664:	2c01      	cmp	r4, #1
 800d666:	d93e      	bls.n	800d6e6 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x9e>
 800d668:	b9db      	cbnz	r3, 800d6a2 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a>
 800d66a:	6a03      	ldr	r3, [r0, #32]
 800d66c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d670:	545a      	strb	r2, [r3, r1]
 800d672:	6a03      	ldr	r3, [r0, #32]
 800d674:	440b      	add	r3, r1
 800d676:	f883 c001 	strb.w	ip, [r3, #1]
 800d67a:	6a03      	ldr	r3, [r0, #32]
 800d67c:	440b      	add	r3, r1
 800d67e:	f883 e002 	strb.w	lr, [r3, #2]
 800d682:	bd70      	pop	{r4, r5, r6, pc}
 800d684:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d688:	00cb      	lsls	r3, r1, #3
 800d68a:	6881      	ldr	r1, [r0, #8]
 800d68c:	2905      	cmp	r1, #5
 800d68e:	f200 80ff 	bhi.w	800d890 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x248>
 800d692:	e8df f011 	tbh	[pc, r1, lsl #1]
 800d696:	028400fd 	addeq	r0, r4, #253	; 0xfd
 800d69a:	038b030b 	orreq	r0, fp, #738197504	; 0x2c000000
 800d69e:	01c1003c 	biceq	r0, r1, ip, lsr r0
 800d6a2:	ea6f 039e 	mvn.w	r3, lr, lsr #2
 800d6a6:	ea6f 151c 	mvn.w	r5, ip, lsr #4
 800d6aa:	f082 06c0 	eor.w	r6, r2, #192	; 0xc0
 800d6ae:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d6b2:	ea43 1396 	orr.w	r3, r3, r6, lsr #6
 800d6b6:	f005 050c 	and.w	r5, r5, #12
 800d6ba:	6a04      	ldr	r4, [r0, #32]
 800d6bc:	432b      	orrs	r3, r5
 800d6be:	3101      	adds	r1, #1
 800d6c0:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800d6c4:	f804 3021 	strb.w	r3, [r4, r1, lsl #2]
 800d6c8:	6a03      	ldr	r3, [r0, #32]
 800d6ca:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6ce:	f883 e001 	strb.w	lr, [r3, #1]
 800d6d2:	6a03      	ldr	r3, [r0, #32]
 800d6d4:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6d8:	f883 c002 	strb.w	ip, [r3, #2]
 800d6dc:	6a03      	ldr	r3, [r0, #32]
 800d6de:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6e2:	70da      	strb	r2, [r3, #3]
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}
 800d6e6:	6a03      	ldr	r3, [r0, #32]
 800d6e8:	7c84      	ldrb	r4, [r0, #18]
 800d6ea:	3101      	adds	r1, #1
 800d6ec:	f803 4021 	strb.w	r4, [r3, r1, lsl #2]
 800d6f0:	6a03      	ldr	r3, [r0, #32]
 800d6f2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6f6:	705a      	strb	r2, [r3, #1]
 800d6f8:	6a03      	ldr	r3, [r0, #32]
 800d6fa:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d6fe:	f883 c002 	strb.w	ip, [r3, #2]
 800d702:	6a03      	ldr	r3, [r0, #32]
 800d704:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800d708:	f883 e003 	strb.w	lr, [r3, #3]
 800d70c:	bd70      	pop	{r4, r5, r6, pc}
 800d70e:	7c01      	ldrb	r1, [r0, #16]
 800d710:	7c44      	ldrb	r4, [r0, #17]
 800d712:	6a05      	ldr	r5, [r0, #32]
 800d714:	1c5e      	adds	r6, r3, #1
 800d716:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d71a:	bf0c      	ite	eq
 800d71c:	55a9      	strbeq	r1, [r5, r6]
 800d71e:	55ac      	strbne	r4, [r5, r6]
 800d720:	6a05      	ldr	r5, [r0, #32]
 800d722:	1c9e      	adds	r6, r3, #2
 800d724:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d728:	bf0c      	ite	eq
 800d72a:	55a9      	strbeq	r1, [r5, r6]
 800d72c:	55ac      	strbne	r4, [r5, r6]
 800d72e:	6a05      	ldr	r5, [r0, #32]
 800d730:	1cde      	adds	r6, r3, #3
 800d732:	f01e 0f20 	tst.w	lr, #32
 800d736:	bf0c      	ite	eq
 800d738:	55a9      	strbeq	r1, [r5, r6]
 800d73a:	55ac      	strbne	r4, [r5, r6]
 800d73c:	6a05      	ldr	r5, [r0, #32]
 800d73e:	1d1e      	adds	r6, r3, #4
 800d740:	f01e 0f10 	tst.w	lr, #16
 800d744:	bf0c      	ite	eq
 800d746:	55a9      	strbeq	r1, [r5, r6]
 800d748:	55ac      	strbne	r4, [r5, r6]
 800d74a:	6a05      	ldr	r5, [r0, #32]
 800d74c:	1d5e      	adds	r6, r3, #5
 800d74e:	f01e 0f08 	tst.w	lr, #8
 800d752:	bf0c      	ite	eq
 800d754:	55a9      	strbeq	r1, [r5, r6]
 800d756:	55ac      	strbne	r4, [r5, r6]
 800d758:	6a05      	ldr	r5, [r0, #32]
 800d75a:	1d9e      	adds	r6, r3, #6
 800d75c:	f01e 0f04 	tst.w	lr, #4
 800d760:	bf0c      	ite	eq
 800d762:	55a9      	strbeq	r1, [r5, r6]
 800d764:	55ac      	strbne	r4, [r5, r6]
 800d766:	6a05      	ldr	r5, [r0, #32]
 800d768:	1dde      	adds	r6, r3, #7
 800d76a:	f01e 0f02 	tst.w	lr, #2
 800d76e:	bf0c      	ite	eq
 800d770:	55a9      	strbeq	r1, [r5, r6]
 800d772:	55ac      	strbne	r4, [r5, r6]
 800d774:	f01e 0f01 	tst.w	lr, #1
 800d778:	bf14      	ite	ne
 800d77a:	6a01      	ldrne	r1, [r0, #32]
 800d77c:	6a04      	ldreq	r4, [r0, #32]
 800d77e:	f103 0508 	add.w	r5, r3, #8
 800d782:	bf14      	ite	ne
 800d784:	554c      	strbne	r4, [r1, r5]
 800d786:	5561      	strbeq	r1, [r4, r5]
 800d788:	7c01      	ldrb	r1, [r0, #16]
 800d78a:	7c44      	ldrb	r4, [r0, #17]
 800d78c:	6a06      	ldr	r6, [r0, #32]
 800d78e:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d792:	f103 0509 	add.w	r5, r3, #9
 800d796:	bf0c      	ite	eq
 800d798:	5571      	strbeq	r1, [r6, r5]
 800d79a:	5574      	strbne	r4, [r6, r5]
 800d79c:	6a06      	ldr	r6, [r0, #32]
 800d79e:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d7a2:	f103 050a 	add.w	r5, r3, #10
 800d7a6:	bf0c      	ite	eq
 800d7a8:	5571      	strbeq	r1, [r6, r5]
 800d7aa:	5574      	strbne	r4, [r6, r5]
 800d7ac:	6a06      	ldr	r6, [r0, #32]
 800d7ae:	f012 0f20 	tst.w	r2, #32
 800d7b2:	f103 050b 	add.w	r5, r3, #11
 800d7b6:	bf0c      	ite	eq
 800d7b8:	5571      	strbeq	r1, [r6, r5]
 800d7ba:	5574      	strbne	r4, [r6, r5]
 800d7bc:	6a06      	ldr	r6, [r0, #32]
 800d7be:	f012 0f10 	tst.w	r2, #16
 800d7c2:	f103 050c 	add.w	r5, r3, #12
 800d7c6:	bf0c      	ite	eq
 800d7c8:	5571      	strbeq	r1, [r6, r5]
 800d7ca:	5574      	strbne	r4, [r6, r5]
 800d7cc:	6a06      	ldr	r6, [r0, #32]
 800d7ce:	f012 0f08 	tst.w	r2, #8
 800d7d2:	f103 050d 	add.w	r5, r3, #13
 800d7d6:	bf0c      	ite	eq
 800d7d8:	5571      	strbeq	r1, [r6, r5]
 800d7da:	5574      	strbne	r4, [r6, r5]
 800d7dc:	6a06      	ldr	r6, [r0, #32]
 800d7de:	f012 0f04 	tst.w	r2, #4
 800d7e2:	f103 050e 	add.w	r5, r3, #14
 800d7e6:	bf0c      	ite	eq
 800d7e8:	5571      	strbeq	r1, [r6, r5]
 800d7ea:	5574      	strbne	r4, [r6, r5]
 800d7ec:	6a06      	ldr	r6, [r0, #32]
 800d7ee:	f012 0f02 	tst.w	r2, #2
 800d7f2:	f103 050f 	add.w	r5, r3, #15
 800d7f6:	bf0c      	ite	eq
 800d7f8:	5571      	strbeq	r1, [r6, r5]
 800d7fa:	5574      	strbne	r4, [r6, r5]
 800d7fc:	f012 0f01 	tst.w	r2, #1
 800d800:	6a02      	ldr	r2, [r0, #32]
 800d802:	f103 0510 	add.w	r5, r3, #16
 800d806:	bf14      	ite	ne
 800d808:	5554      	strbne	r4, [r2, r5]
 800d80a:	5551      	strbeq	r1, [r2, r5]
 800d80c:	6a05      	ldr	r5, [r0, #32]
 800d80e:	7c02      	ldrb	r2, [r0, #16]
 800d810:	7c41      	ldrb	r1, [r0, #17]
 800d812:	f103 0411 	add.w	r4, r3, #17
 800d816:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d81a:	bf0c      	ite	eq
 800d81c:	552a      	strbeq	r2, [r5, r4]
 800d81e:	5529      	strbne	r1, [r5, r4]
 800d820:	6a05      	ldr	r5, [r0, #32]
 800d822:	f103 0412 	add.w	r4, r3, #18
 800d826:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d82a:	bf0c      	ite	eq
 800d82c:	552a      	strbeq	r2, [r5, r4]
 800d82e:	5529      	strbne	r1, [r5, r4]
 800d830:	6a05      	ldr	r5, [r0, #32]
 800d832:	f103 0413 	add.w	r4, r3, #19
 800d836:	f01c 0f20 	tst.w	ip, #32
 800d83a:	bf0c      	ite	eq
 800d83c:	552a      	strbeq	r2, [r5, r4]
 800d83e:	5529      	strbne	r1, [r5, r4]
 800d840:	6a05      	ldr	r5, [r0, #32]
 800d842:	f103 0414 	add.w	r4, r3, #20
 800d846:	f01c 0f10 	tst.w	ip, #16
 800d84a:	bf0c      	ite	eq
 800d84c:	552a      	strbeq	r2, [r5, r4]
 800d84e:	5529      	strbne	r1, [r5, r4]
 800d850:	6a05      	ldr	r5, [r0, #32]
 800d852:	f103 0415 	add.w	r4, r3, #21
 800d856:	f01c 0f08 	tst.w	ip, #8
 800d85a:	bf0c      	ite	eq
 800d85c:	552a      	strbeq	r2, [r5, r4]
 800d85e:	5529      	strbne	r1, [r5, r4]
 800d860:	6a05      	ldr	r5, [r0, #32]
 800d862:	f103 0416 	add.w	r4, r3, #22
 800d866:	f01c 0f04 	tst.w	ip, #4
 800d86a:	bf0c      	ite	eq
 800d86c:	552a      	strbeq	r2, [r5, r4]
 800d86e:	5529      	strbne	r1, [r5, r4]
 800d870:	6a05      	ldr	r5, [r0, #32]
 800d872:	f103 0417 	add.w	r4, r3, #23
 800d876:	f01c 0f02 	tst.w	ip, #2
 800d87a:	bf0c      	ite	eq
 800d87c:	552a      	strbeq	r2, [r5, r4]
 800d87e:	5529      	strbne	r1, [r5, r4]
 800d880:	3318      	adds	r3, #24
 800d882:	f01c 0f01 	tst.w	ip, #1
 800d886:	f000 830d 	beq.w	800dea4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x85c>
 800d88a:	6a02      	ldr	r2, [r0, #32]
 800d88c:	54d1      	strb	r1, [r2, r3]
 800d88e:	bd70      	pop	{r4, r5, r6, pc}
 800d890:	7c01      	ldrb	r1, [r0, #16]
 800d892:	7c44      	ldrb	r4, [r0, #17]
 800d894:	6a05      	ldr	r5, [r0, #32]
 800d896:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d89a:	f103 0601 	add.w	r6, r3, #1
 800d89e:	bf14      	ite	ne
 800d8a0:	55ac      	strbne	r4, [r5, r6]
 800d8a2:	55a9      	strbeq	r1, [r5, r6]
 800d8a4:	6a05      	ldr	r5, [r0, #32]
 800d8a6:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d8aa:	f103 0602 	add.w	r6, r3, #2
 800d8ae:	bf14      	ite	ne
 800d8b0:	55ac      	strbne	r4, [r5, r6]
 800d8b2:	55a9      	strbeq	r1, [r5, r6]
 800d8b4:	6a05      	ldr	r5, [r0, #32]
 800d8b6:	f012 0f20 	tst.w	r2, #32
 800d8ba:	f103 0603 	add.w	r6, r3, #3
 800d8be:	bf14      	ite	ne
 800d8c0:	55ac      	strbne	r4, [r5, r6]
 800d8c2:	55a9      	strbeq	r1, [r5, r6]
 800d8c4:	6a05      	ldr	r5, [r0, #32]
 800d8c6:	f012 0f10 	tst.w	r2, #16
 800d8ca:	f103 0604 	add.w	r6, r3, #4
 800d8ce:	bf14      	ite	ne
 800d8d0:	55ac      	strbne	r4, [r5, r6]
 800d8d2:	55a9      	strbeq	r1, [r5, r6]
 800d8d4:	6a05      	ldr	r5, [r0, #32]
 800d8d6:	f012 0f08 	tst.w	r2, #8
 800d8da:	f103 0605 	add.w	r6, r3, #5
 800d8de:	bf14      	ite	ne
 800d8e0:	55ac      	strbne	r4, [r5, r6]
 800d8e2:	55a9      	strbeq	r1, [r5, r6]
 800d8e4:	6a05      	ldr	r5, [r0, #32]
 800d8e6:	f012 0f04 	tst.w	r2, #4
 800d8ea:	f103 0606 	add.w	r6, r3, #6
 800d8ee:	bf14      	ite	ne
 800d8f0:	55ac      	strbne	r4, [r5, r6]
 800d8f2:	55a9      	strbeq	r1, [r5, r6]
 800d8f4:	6a05      	ldr	r5, [r0, #32]
 800d8f6:	f012 0f02 	tst.w	r2, #2
 800d8fa:	f103 0607 	add.w	r6, r3, #7
 800d8fe:	bf14      	ite	ne
 800d900:	55ac      	strbne	r4, [r5, r6]
 800d902:	55a9      	strbeq	r1, [r5, r6]
 800d904:	f012 0f01 	tst.w	r2, #1
 800d908:	6a02      	ldr	r2, [r0, #32]
 800d90a:	f103 0508 	add.w	r5, r3, #8
 800d90e:	bf14      	ite	ne
 800d910:	5554      	strbne	r4, [r2, r5]
 800d912:	5551      	strbeq	r1, [r2, r5]
 800d914:	7c41      	ldrb	r1, [r0, #17]
 800d916:	7c02      	ldrb	r2, [r0, #16]
 800d918:	6a05      	ldr	r5, [r0, #32]
 800d91a:	f103 0409 	add.w	r4, r3, #9
 800d91e:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d922:	bf0c      	ite	eq
 800d924:	552a      	strbeq	r2, [r5, r4]
 800d926:	5529      	strbne	r1, [r5, r4]
 800d928:	6a05      	ldr	r5, [r0, #32]
 800d92a:	f103 040a 	add.w	r4, r3, #10
 800d92e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d932:	bf0c      	ite	eq
 800d934:	552a      	strbeq	r2, [r5, r4]
 800d936:	5529      	strbne	r1, [r5, r4]
 800d938:	6a05      	ldr	r5, [r0, #32]
 800d93a:	f103 040b 	add.w	r4, r3, #11
 800d93e:	f01c 0f20 	tst.w	ip, #32
 800d942:	bf0c      	ite	eq
 800d944:	552a      	strbeq	r2, [r5, r4]
 800d946:	5529      	strbne	r1, [r5, r4]
 800d948:	6a05      	ldr	r5, [r0, #32]
 800d94a:	f103 040c 	add.w	r4, r3, #12
 800d94e:	f01c 0f10 	tst.w	ip, #16
 800d952:	bf0c      	ite	eq
 800d954:	552a      	strbeq	r2, [r5, r4]
 800d956:	5529      	strbne	r1, [r5, r4]
 800d958:	6a05      	ldr	r5, [r0, #32]
 800d95a:	f103 040d 	add.w	r4, r3, #13
 800d95e:	f01c 0f08 	tst.w	ip, #8
 800d962:	bf0c      	ite	eq
 800d964:	552a      	strbeq	r2, [r5, r4]
 800d966:	5529      	strbne	r1, [r5, r4]
 800d968:	6a05      	ldr	r5, [r0, #32]
 800d96a:	f103 040e 	add.w	r4, r3, #14
 800d96e:	f01c 0f04 	tst.w	ip, #4
 800d972:	bf0c      	ite	eq
 800d974:	552a      	strbeq	r2, [r5, r4]
 800d976:	5529      	strbne	r1, [r5, r4]
 800d978:	6a05      	ldr	r5, [r0, #32]
 800d97a:	f103 040f 	add.w	r4, r3, #15
 800d97e:	f01c 0f02 	tst.w	ip, #2
 800d982:	bf0c      	ite	eq
 800d984:	552a      	strbeq	r2, [r5, r4]
 800d986:	5529      	strbne	r1, [r5, r4]
 800d988:	f01c 0f01 	tst.w	ip, #1
 800d98c:	bf14      	ite	ne
 800d98e:	6a02      	ldrne	r2, [r0, #32]
 800d990:	6a01      	ldreq	r1, [r0, #32]
 800d992:	f103 0410 	add.w	r4, r3, #16
 800d996:	bf14      	ite	ne
 800d998:	5511      	strbne	r1, [r2, r4]
 800d99a:	550a      	strbeq	r2, [r1, r4]
 800d99c:	6a05      	ldr	r5, [r0, #32]
 800d99e:	7c02      	ldrb	r2, [r0, #16]
 800d9a0:	7c41      	ldrb	r1, [r0, #17]
 800d9a2:	f103 0411 	add.w	r4, r3, #17
 800d9a6:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d9aa:	bf0c      	ite	eq
 800d9ac:	552a      	strbeq	r2, [r5, r4]
 800d9ae:	5529      	strbne	r1, [r5, r4]
 800d9b0:	6a05      	ldr	r5, [r0, #32]
 800d9b2:	f103 0412 	add.w	r4, r3, #18
 800d9b6:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d9ba:	bf0c      	ite	eq
 800d9bc:	552a      	strbeq	r2, [r5, r4]
 800d9be:	5529      	strbne	r1, [r5, r4]
 800d9c0:	6a05      	ldr	r5, [r0, #32]
 800d9c2:	f103 0413 	add.w	r4, r3, #19
 800d9c6:	f01e 0f20 	tst.w	lr, #32
 800d9ca:	bf0c      	ite	eq
 800d9cc:	552a      	strbeq	r2, [r5, r4]
 800d9ce:	5529      	strbne	r1, [r5, r4]
 800d9d0:	6a05      	ldr	r5, [r0, #32]
 800d9d2:	f103 0414 	add.w	r4, r3, #20
 800d9d6:	f01e 0f10 	tst.w	lr, #16
 800d9da:	bf0c      	ite	eq
 800d9dc:	552a      	strbeq	r2, [r5, r4]
 800d9de:	5529      	strbne	r1, [r5, r4]
 800d9e0:	6a05      	ldr	r5, [r0, #32]
 800d9e2:	f103 0415 	add.w	r4, r3, #21
 800d9e6:	f01e 0f08 	tst.w	lr, #8
 800d9ea:	bf0c      	ite	eq
 800d9ec:	552a      	strbeq	r2, [r5, r4]
 800d9ee:	5529      	strbne	r1, [r5, r4]
 800d9f0:	6a05      	ldr	r5, [r0, #32]
 800d9f2:	f103 0416 	add.w	r4, r3, #22
 800d9f6:	f01e 0f04 	tst.w	lr, #4
 800d9fa:	bf0c      	ite	eq
 800d9fc:	552a      	strbeq	r2, [r5, r4]
 800d9fe:	5529      	strbne	r1, [r5, r4]
 800da00:	6a05      	ldr	r5, [r0, #32]
 800da02:	f103 0417 	add.w	r4, r3, #23
 800da06:	f01e 0f02 	tst.w	lr, #2
 800da0a:	bf0c      	ite	eq
 800da0c:	552a      	strbeq	r2, [r5, r4]
 800da0e:	5529      	strbne	r1, [r5, r4]
 800da10:	3318      	adds	r3, #24
 800da12:	f01e 0f01 	tst.w	lr, #1
 800da16:	e736      	b.n	800d886 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x23e>
 800da18:	7c01      	ldrb	r1, [r0, #16]
 800da1a:	7c44      	ldrb	r4, [r0, #17]
 800da1c:	6a05      	ldr	r5, [r0, #32]
 800da1e:	1c5e      	adds	r6, r3, #1
 800da20:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800da24:	bf0c      	ite	eq
 800da26:	55a9      	strbeq	r1, [r5, r6]
 800da28:	55ac      	strbne	r4, [r5, r6]
 800da2a:	6a05      	ldr	r5, [r0, #32]
 800da2c:	1c9e      	adds	r6, r3, #2
 800da2e:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800da32:	bf0c      	ite	eq
 800da34:	55a9      	strbeq	r1, [r5, r6]
 800da36:	55ac      	strbne	r4, [r5, r6]
 800da38:	6a05      	ldr	r5, [r0, #32]
 800da3a:	1cde      	adds	r6, r3, #3
 800da3c:	f01e 0f20 	tst.w	lr, #32
 800da40:	bf0c      	ite	eq
 800da42:	55a9      	strbeq	r1, [r5, r6]
 800da44:	55ac      	strbne	r4, [r5, r6]
 800da46:	6a05      	ldr	r5, [r0, #32]
 800da48:	1d1e      	adds	r6, r3, #4
 800da4a:	f01e 0f10 	tst.w	lr, #16
 800da4e:	bf0c      	ite	eq
 800da50:	55a9      	strbeq	r1, [r5, r6]
 800da52:	55ac      	strbne	r4, [r5, r6]
 800da54:	6a05      	ldr	r5, [r0, #32]
 800da56:	1d5e      	adds	r6, r3, #5
 800da58:	f01e 0f08 	tst.w	lr, #8
 800da5c:	bf0c      	ite	eq
 800da5e:	55a9      	strbeq	r1, [r5, r6]
 800da60:	55ac      	strbne	r4, [r5, r6]
 800da62:	6a05      	ldr	r5, [r0, #32]
 800da64:	1d9e      	adds	r6, r3, #6
 800da66:	f01e 0f04 	tst.w	lr, #4
 800da6a:	bf0c      	ite	eq
 800da6c:	55a9      	strbeq	r1, [r5, r6]
 800da6e:	55ac      	strbne	r4, [r5, r6]
 800da70:	6a05      	ldr	r5, [r0, #32]
 800da72:	1dde      	adds	r6, r3, #7
 800da74:	f01e 0f02 	tst.w	lr, #2
 800da78:	bf0c      	ite	eq
 800da7a:	55a9      	strbeq	r1, [r5, r6]
 800da7c:	55ac      	strbne	r4, [r5, r6]
 800da7e:	f01e 0f01 	tst.w	lr, #1
 800da82:	bf14      	ite	ne
 800da84:	6a01      	ldrne	r1, [r0, #32]
 800da86:	6a04      	ldreq	r4, [r0, #32]
 800da88:	f103 0508 	add.w	r5, r3, #8
 800da8c:	bf14      	ite	ne
 800da8e:	554c      	strbne	r4, [r1, r5]
 800da90:	5561      	strbeq	r1, [r4, r5]
 800da92:	7c01      	ldrb	r1, [r0, #16]
 800da94:	7c44      	ldrb	r4, [r0, #17]
 800da96:	6a06      	ldr	r6, [r0, #32]
 800da98:	f103 0509 	add.w	r5, r3, #9
 800da9c:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800daa0:	bf0c      	ite	eq
 800daa2:	5571      	strbeq	r1, [r6, r5]
 800daa4:	5574      	strbne	r4, [r6, r5]
 800daa6:	6a06      	ldr	r6, [r0, #32]
 800daa8:	f103 050a 	add.w	r5, r3, #10
 800daac:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800dab0:	bf0c      	ite	eq
 800dab2:	5571      	strbeq	r1, [r6, r5]
 800dab4:	5574      	strbne	r4, [r6, r5]
 800dab6:	6a06      	ldr	r6, [r0, #32]
 800dab8:	f103 050b 	add.w	r5, r3, #11
 800dabc:	f01c 0f20 	tst.w	ip, #32
 800dac0:	bf0c      	ite	eq
 800dac2:	5571      	strbeq	r1, [r6, r5]
 800dac4:	5574      	strbne	r4, [r6, r5]
 800dac6:	6a06      	ldr	r6, [r0, #32]
 800dac8:	f103 050c 	add.w	r5, r3, #12
 800dacc:	f01c 0f10 	tst.w	ip, #16
 800dad0:	bf0c      	ite	eq
 800dad2:	5571      	strbeq	r1, [r6, r5]
 800dad4:	5574      	strbne	r4, [r6, r5]
 800dad6:	6a06      	ldr	r6, [r0, #32]
 800dad8:	f103 050d 	add.w	r5, r3, #13
 800dadc:	f01c 0f08 	tst.w	ip, #8
 800dae0:	bf0c      	ite	eq
 800dae2:	5571      	strbeq	r1, [r6, r5]
 800dae4:	5574      	strbne	r4, [r6, r5]
 800dae6:	6a06      	ldr	r6, [r0, #32]
 800dae8:	f103 050e 	add.w	r5, r3, #14
 800daec:	f01c 0f04 	tst.w	ip, #4
 800daf0:	bf0c      	ite	eq
 800daf2:	5571      	strbeq	r1, [r6, r5]
 800daf4:	5574      	strbne	r4, [r6, r5]
 800daf6:	6a06      	ldr	r6, [r0, #32]
 800daf8:	f103 050f 	add.w	r5, r3, #15
 800dafc:	f01c 0f02 	tst.w	ip, #2
 800db00:	bf0c      	ite	eq
 800db02:	5571      	strbeq	r1, [r6, r5]
 800db04:	5574      	strbne	r4, [r6, r5]
 800db06:	f103 0510 	add.w	r5, r3, #16
 800db0a:	f01c 0f01 	tst.w	ip, #1
 800db0e:	bf15      	itete	ne
 800db10:	6a01      	ldrne	r1, [r0, #32]
 800db12:	6a04      	ldreq	r4, [r0, #32]
 800db14:	554c      	strbne	r4, [r1, r5]
 800db16:	5561      	strbeq	r1, [r4, r5]
 800db18:	6a06      	ldr	r6, [r0, #32]
 800db1a:	7c01      	ldrb	r1, [r0, #16]
 800db1c:	7c44      	ldrb	r4, [r0, #17]
 800db1e:	f103 0511 	add.w	r5, r3, #17
 800db22:	f012 0f80 	tst.w	r2, #128	; 0x80
 800db26:	bf0c      	ite	eq
 800db28:	5571      	strbeq	r1, [r6, r5]
 800db2a:	5574      	strbne	r4, [r6, r5]
 800db2c:	6a06      	ldr	r6, [r0, #32]
 800db2e:	f103 0512 	add.w	r5, r3, #18
 800db32:	f012 0f40 	tst.w	r2, #64	; 0x40
 800db36:	bf0c      	ite	eq
 800db38:	5571      	strbeq	r1, [r6, r5]
 800db3a:	5574      	strbne	r4, [r6, r5]
 800db3c:	6a06      	ldr	r6, [r0, #32]
 800db3e:	f103 0513 	add.w	r5, r3, #19
 800db42:	f012 0f20 	tst.w	r2, #32
 800db46:	bf0c      	ite	eq
 800db48:	5571      	strbeq	r1, [r6, r5]
 800db4a:	5574      	strbne	r4, [r6, r5]
 800db4c:	6a06      	ldr	r6, [r0, #32]
 800db4e:	f103 0514 	add.w	r5, r3, #20
 800db52:	f012 0f10 	tst.w	r2, #16
 800db56:	bf0c      	ite	eq
 800db58:	5571      	strbeq	r1, [r6, r5]
 800db5a:	5574      	strbne	r4, [r6, r5]
 800db5c:	6a06      	ldr	r6, [r0, #32]
 800db5e:	f103 0515 	add.w	r5, r3, #21
 800db62:	f012 0f08 	tst.w	r2, #8
 800db66:	bf0c      	ite	eq
 800db68:	5571      	strbeq	r1, [r6, r5]
 800db6a:	5574      	strbne	r4, [r6, r5]
 800db6c:	6a06      	ldr	r6, [r0, #32]
 800db6e:	f103 0516 	add.w	r5, r3, #22
 800db72:	f012 0f04 	tst.w	r2, #4
 800db76:	bf0c      	ite	eq
 800db78:	5571      	strbeq	r1, [r6, r5]
 800db7a:	5574      	strbne	r4, [r6, r5]
 800db7c:	6a06      	ldr	r6, [r0, #32]
 800db7e:	f012 0f02 	tst.w	r2, #2
 800db82:	f103 0517 	add.w	r5, r3, #23
 800db86:	bf0c      	ite	eq
 800db88:	5571      	strbeq	r1, [r6, r5]
 800db8a:	5574      	strbne	r4, [r6, r5]
 800db8c:	f012 0f01 	tst.w	r2, #1
 800db90:	f103 0318 	add.w	r3, r3, #24
 800db94:	6a02      	ldr	r2, [r0, #32]
 800db96:	f43f ae79 	beq.w	800d88c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x244>
 800db9a:	54d4      	strb	r4, [r2, r3]
 800db9c:	bd70      	pop	{r4, r5, r6, pc}
 800db9e:	7c01      	ldrb	r1, [r0, #16]
 800dba0:	7c44      	ldrb	r4, [r0, #17]
 800dba2:	6a05      	ldr	r5, [r0, #32]
 800dba4:	f012 0f80 	tst.w	r2, #128	; 0x80
 800dba8:	f103 0601 	add.w	r6, r3, #1
 800dbac:	bf14      	ite	ne
 800dbae:	55ac      	strbne	r4, [r5, r6]
 800dbb0:	55a9      	strbeq	r1, [r5, r6]
 800dbb2:	6a05      	ldr	r5, [r0, #32]
 800dbb4:	f012 0f40 	tst.w	r2, #64	; 0x40
 800dbb8:	f103 0602 	add.w	r6, r3, #2
 800dbbc:	bf14      	ite	ne
 800dbbe:	55ac      	strbne	r4, [r5, r6]
 800dbc0:	55a9      	strbeq	r1, [r5, r6]
 800dbc2:	6a05      	ldr	r5, [r0, #32]
 800dbc4:	f012 0f20 	tst.w	r2, #32
 800dbc8:	f103 0603 	add.w	r6, r3, #3
 800dbcc:	bf14      	ite	ne
 800dbce:	55ac      	strbne	r4, [r5, r6]
 800dbd0:	55a9      	strbeq	r1, [r5, r6]
 800dbd2:	6a05      	ldr	r5, [r0, #32]
 800dbd4:	f012 0f10 	tst.w	r2, #16
 800dbd8:	f103 0604 	add.w	r6, r3, #4
 800dbdc:	bf14      	ite	ne
 800dbde:	55ac      	strbne	r4, [r5, r6]
 800dbe0:	55a9      	strbeq	r1, [r5, r6]
 800dbe2:	6a05      	ldr	r5, [r0, #32]
 800dbe4:	f012 0f08 	tst.w	r2, #8
 800dbe8:	f103 0605 	add.w	r6, r3, #5
 800dbec:	bf14      	ite	ne
 800dbee:	55ac      	strbne	r4, [r5, r6]
 800dbf0:	55a9      	strbeq	r1, [r5, r6]
 800dbf2:	6a05      	ldr	r5, [r0, #32]
 800dbf4:	f012 0f04 	tst.w	r2, #4
 800dbf8:	f103 0606 	add.w	r6, r3, #6
 800dbfc:	bf14      	ite	ne
 800dbfe:	55ac      	strbne	r4, [r5, r6]
 800dc00:	55a9      	strbeq	r1, [r5, r6]
 800dc02:	6a05      	ldr	r5, [r0, #32]
 800dc04:	f012 0f02 	tst.w	r2, #2
 800dc08:	f103 0607 	add.w	r6, r3, #7
 800dc0c:	bf14      	ite	ne
 800dc0e:	55ac      	strbne	r4, [r5, r6]
 800dc10:	55a9      	strbeq	r1, [r5, r6]
 800dc12:	f012 0f01 	tst.w	r2, #1
 800dc16:	6a02      	ldr	r2, [r0, #32]
 800dc18:	f103 0508 	add.w	r5, r3, #8
 800dc1c:	bf14      	ite	ne
 800dc1e:	5554      	strbne	r4, [r2, r5]
 800dc20:	5551      	strbeq	r1, [r2, r5]
 800dc22:	7c41      	ldrb	r1, [r0, #17]
 800dc24:	7c02      	ldrb	r2, [r0, #16]
 800dc26:	6a05      	ldr	r5, [r0, #32]
 800dc28:	f103 0409 	add.w	r4, r3, #9
 800dc2c:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800dc30:	bf0c      	ite	eq
 800dc32:	552a      	strbeq	r2, [r5, r4]
 800dc34:	5529      	strbne	r1, [r5, r4]
 800dc36:	6a05      	ldr	r5, [r0, #32]
 800dc38:	f103 040a 	add.w	r4, r3, #10
 800dc3c:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800dc40:	bf0c      	ite	eq
 800dc42:	552a      	strbeq	r2, [r5, r4]
 800dc44:	5529      	strbne	r1, [r5, r4]
 800dc46:	6a05      	ldr	r5, [r0, #32]
 800dc48:	f103 040b 	add.w	r4, r3, #11
 800dc4c:	f01e 0f20 	tst.w	lr, #32
 800dc50:	bf0c      	ite	eq
 800dc52:	552a      	strbeq	r2, [r5, r4]
 800dc54:	5529      	strbne	r1, [r5, r4]
 800dc56:	6a05      	ldr	r5, [r0, #32]
 800dc58:	f103 040c 	add.w	r4, r3, #12
 800dc5c:	f01e 0f10 	tst.w	lr, #16
 800dc60:	bf0c      	ite	eq
 800dc62:	552a      	strbeq	r2, [r5, r4]
 800dc64:	5529      	strbne	r1, [r5, r4]
 800dc66:	6a05      	ldr	r5, [r0, #32]
 800dc68:	f103 040d 	add.w	r4, r3, #13
 800dc6c:	f01e 0f08 	tst.w	lr, #8
 800dc70:	bf0c      	ite	eq
 800dc72:	552a      	strbeq	r2, [r5, r4]
 800dc74:	5529      	strbne	r1, [r5, r4]
 800dc76:	6a05      	ldr	r5, [r0, #32]
 800dc78:	f103 040e 	add.w	r4, r3, #14
 800dc7c:	f01e 0f04 	tst.w	lr, #4
 800dc80:	bf0c      	ite	eq
 800dc82:	552a      	strbeq	r2, [r5, r4]
 800dc84:	5529      	strbne	r1, [r5, r4]
 800dc86:	6a05      	ldr	r5, [r0, #32]
 800dc88:	f103 040f 	add.w	r4, r3, #15
 800dc8c:	f01e 0f02 	tst.w	lr, #2
 800dc90:	bf0c      	ite	eq
 800dc92:	552a      	strbeq	r2, [r5, r4]
 800dc94:	5529      	strbne	r1, [r5, r4]
 800dc96:	f01e 0f01 	tst.w	lr, #1
 800dc9a:	bf14      	ite	ne
 800dc9c:	6a02      	ldrne	r2, [r0, #32]
 800dc9e:	6a01      	ldreq	r1, [r0, #32]
 800dca0:	f103 0410 	add.w	r4, r3, #16
 800dca4:	bf14      	ite	ne
 800dca6:	5511      	strbne	r1, [r2, r4]
 800dca8:	550a      	strbeq	r2, [r1, r4]
 800dcaa:	e5af      	b.n	800d80c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1c4>
 800dcac:	7c01      	ldrb	r1, [r0, #16]
 800dcae:	7c44      	ldrb	r4, [r0, #17]
 800dcb0:	6a05      	ldr	r5, [r0, #32]
 800dcb2:	1c5e      	adds	r6, r3, #1
 800dcb4:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800dcb8:	bf0c      	ite	eq
 800dcba:	55a9      	strbeq	r1, [r5, r6]
 800dcbc:	55ac      	strbne	r4, [r5, r6]
 800dcbe:	6a05      	ldr	r5, [r0, #32]
 800dcc0:	1c9e      	adds	r6, r3, #2
 800dcc2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800dcc6:	bf0c      	ite	eq
 800dcc8:	55a9      	strbeq	r1, [r5, r6]
 800dcca:	55ac      	strbne	r4, [r5, r6]
 800dccc:	6a05      	ldr	r5, [r0, #32]
 800dcce:	1cde      	adds	r6, r3, #3
 800dcd0:	f01c 0f20 	tst.w	ip, #32
 800dcd4:	bf0c      	ite	eq
 800dcd6:	55a9      	strbeq	r1, [r5, r6]
 800dcd8:	55ac      	strbne	r4, [r5, r6]
 800dcda:	6a05      	ldr	r5, [r0, #32]
 800dcdc:	1d1e      	adds	r6, r3, #4
 800dcde:	f01c 0f10 	tst.w	ip, #16
 800dce2:	bf0c      	ite	eq
 800dce4:	55a9      	strbeq	r1, [r5, r6]
 800dce6:	55ac      	strbne	r4, [r5, r6]
 800dce8:	6a05      	ldr	r5, [r0, #32]
 800dcea:	1d5e      	adds	r6, r3, #5
 800dcec:	f01c 0f08 	tst.w	ip, #8
 800dcf0:	bf0c      	ite	eq
 800dcf2:	55a9      	strbeq	r1, [r5, r6]
 800dcf4:	55ac      	strbne	r4, [r5, r6]
 800dcf6:	6a05      	ldr	r5, [r0, #32]
 800dcf8:	1d9e      	adds	r6, r3, #6
 800dcfa:	f01c 0f04 	tst.w	ip, #4
 800dcfe:	bf0c      	ite	eq
 800dd00:	55a9      	strbeq	r1, [r5, r6]
 800dd02:	55ac      	strbne	r4, [r5, r6]
 800dd04:	6a05      	ldr	r5, [r0, #32]
 800dd06:	1dde      	adds	r6, r3, #7
 800dd08:	f01c 0f02 	tst.w	ip, #2
 800dd0c:	bf0c      	ite	eq
 800dd0e:	55a9      	strbeq	r1, [r5, r6]
 800dd10:	55ac      	strbne	r4, [r5, r6]
 800dd12:	f01c 0f01 	tst.w	ip, #1
 800dd16:	bf14      	ite	ne
 800dd18:	6a01      	ldrne	r1, [r0, #32]
 800dd1a:	6a04      	ldreq	r4, [r0, #32]
 800dd1c:	f103 0508 	add.w	r5, r3, #8
 800dd20:	bf14      	ite	ne
 800dd22:	554c      	strbne	r4, [r1, r5]
 800dd24:	5561      	strbeq	r1, [r4, r5]
 800dd26:	7c01      	ldrb	r1, [r0, #16]
 800dd28:	7c44      	ldrb	r4, [r0, #17]
 800dd2a:	6a06      	ldr	r6, [r0, #32]
 800dd2c:	f012 0f80 	tst.w	r2, #128	; 0x80
 800dd30:	f103 0509 	add.w	r5, r3, #9
 800dd34:	bf0c      	ite	eq
 800dd36:	5571      	strbeq	r1, [r6, r5]
 800dd38:	5574      	strbne	r4, [r6, r5]
 800dd3a:	6a06      	ldr	r6, [r0, #32]
 800dd3c:	f012 0f40 	tst.w	r2, #64	; 0x40
 800dd40:	f103 050a 	add.w	r5, r3, #10
 800dd44:	bf0c      	ite	eq
 800dd46:	5571      	strbeq	r1, [r6, r5]
 800dd48:	5574      	strbne	r4, [r6, r5]
 800dd4a:	6a06      	ldr	r6, [r0, #32]
 800dd4c:	f012 0f20 	tst.w	r2, #32
 800dd50:	f103 050b 	add.w	r5, r3, #11
 800dd54:	bf0c      	ite	eq
 800dd56:	5571      	strbeq	r1, [r6, r5]
 800dd58:	5574      	strbne	r4, [r6, r5]
 800dd5a:	6a06      	ldr	r6, [r0, #32]
 800dd5c:	f012 0f10 	tst.w	r2, #16
 800dd60:	f103 050c 	add.w	r5, r3, #12
 800dd64:	bf0c      	ite	eq
 800dd66:	5571      	strbeq	r1, [r6, r5]
 800dd68:	5574      	strbne	r4, [r6, r5]
 800dd6a:	6a06      	ldr	r6, [r0, #32]
 800dd6c:	f012 0f08 	tst.w	r2, #8
 800dd70:	f103 050d 	add.w	r5, r3, #13
 800dd74:	bf0c      	ite	eq
 800dd76:	5571      	strbeq	r1, [r6, r5]
 800dd78:	5574      	strbne	r4, [r6, r5]
 800dd7a:	6a06      	ldr	r6, [r0, #32]
 800dd7c:	f012 0f04 	tst.w	r2, #4
 800dd80:	f103 050e 	add.w	r5, r3, #14
 800dd84:	bf0c      	ite	eq
 800dd86:	5571      	strbeq	r1, [r6, r5]
 800dd88:	5574      	strbne	r4, [r6, r5]
 800dd8a:	6a06      	ldr	r6, [r0, #32]
 800dd8c:	f012 0f02 	tst.w	r2, #2
 800dd90:	f103 050f 	add.w	r5, r3, #15
 800dd94:	bf0c      	ite	eq
 800dd96:	5571      	strbeq	r1, [r6, r5]
 800dd98:	5574      	strbne	r4, [r6, r5]
 800dd9a:	f012 0f01 	tst.w	r2, #1
 800dd9e:	6a02      	ldr	r2, [r0, #32]
 800dda0:	f103 0510 	add.w	r5, r3, #16
 800dda4:	bf14      	ite	ne
 800dda6:	5554      	strbne	r4, [r2, r5]
 800dda8:	5551      	strbeq	r1, [r2, r5]
 800ddaa:	e5f7      	b.n	800d99c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x354>
 800ddac:	7c01      	ldrb	r1, [r0, #16]
 800ddae:	7c44      	ldrb	r4, [r0, #17]
 800ddb0:	6a05      	ldr	r5, [r0, #32]
 800ddb2:	1c5e      	adds	r6, r3, #1
 800ddb4:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ddb8:	bf0c      	ite	eq
 800ddba:	55a9      	strbeq	r1, [r5, r6]
 800ddbc:	55ac      	strbne	r4, [r5, r6]
 800ddbe:	6a05      	ldr	r5, [r0, #32]
 800ddc0:	1c9e      	adds	r6, r3, #2
 800ddc2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ddc6:	bf0c      	ite	eq
 800ddc8:	55a9      	strbeq	r1, [r5, r6]
 800ddca:	55ac      	strbne	r4, [r5, r6]
 800ddcc:	6a05      	ldr	r5, [r0, #32]
 800ddce:	1cde      	adds	r6, r3, #3
 800ddd0:	f01c 0f20 	tst.w	ip, #32
 800ddd4:	bf0c      	ite	eq
 800ddd6:	55a9      	strbeq	r1, [r5, r6]
 800ddd8:	55ac      	strbne	r4, [r5, r6]
 800ddda:	6a05      	ldr	r5, [r0, #32]
 800dddc:	1d1e      	adds	r6, r3, #4
 800ddde:	f01c 0f10 	tst.w	ip, #16
 800dde2:	bf0c      	ite	eq
 800dde4:	55a9      	strbeq	r1, [r5, r6]
 800dde6:	55ac      	strbne	r4, [r5, r6]
 800dde8:	6a05      	ldr	r5, [r0, #32]
 800ddea:	1d5e      	adds	r6, r3, #5
 800ddec:	f01c 0f08 	tst.w	ip, #8
 800ddf0:	bf0c      	ite	eq
 800ddf2:	55a9      	strbeq	r1, [r5, r6]
 800ddf4:	55ac      	strbne	r4, [r5, r6]
 800ddf6:	6a05      	ldr	r5, [r0, #32]
 800ddf8:	1d9e      	adds	r6, r3, #6
 800ddfa:	f01c 0f04 	tst.w	ip, #4
 800ddfe:	bf0c      	ite	eq
 800de00:	55a9      	strbeq	r1, [r5, r6]
 800de02:	55ac      	strbne	r4, [r5, r6]
 800de04:	6a05      	ldr	r5, [r0, #32]
 800de06:	1dde      	adds	r6, r3, #7
 800de08:	f01c 0f02 	tst.w	ip, #2
 800de0c:	bf0c      	ite	eq
 800de0e:	55a9      	strbeq	r1, [r5, r6]
 800de10:	55ac      	strbne	r4, [r5, r6]
 800de12:	f01c 0f01 	tst.w	ip, #1
 800de16:	bf14      	ite	ne
 800de18:	6a01      	ldrne	r1, [r0, #32]
 800de1a:	6a04      	ldreq	r4, [r0, #32]
 800de1c:	f103 0508 	add.w	r5, r3, #8
 800de20:	bf14      	ite	ne
 800de22:	554c      	strbne	r4, [r1, r5]
 800de24:	5561      	strbeq	r1, [r4, r5]
 800de26:	7c01      	ldrb	r1, [r0, #16]
 800de28:	7c44      	ldrb	r4, [r0, #17]
 800de2a:	6a06      	ldr	r6, [r0, #32]
 800de2c:	f103 0509 	add.w	r5, r3, #9
 800de30:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800de34:	bf0c      	ite	eq
 800de36:	5571      	strbeq	r1, [r6, r5]
 800de38:	5574      	strbne	r4, [r6, r5]
 800de3a:	6a06      	ldr	r6, [r0, #32]
 800de3c:	f103 050a 	add.w	r5, r3, #10
 800de40:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800de44:	bf0c      	ite	eq
 800de46:	5571      	strbeq	r1, [r6, r5]
 800de48:	5574      	strbne	r4, [r6, r5]
 800de4a:	6a06      	ldr	r6, [r0, #32]
 800de4c:	f103 050b 	add.w	r5, r3, #11
 800de50:	f01e 0f20 	tst.w	lr, #32
 800de54:	bf0c      	ite	eq
 800de56:	5571      	strbeq	r1, [r6, r5]
 800de58:	5574      	strbne	r4, [r6, r5]
 800de5a:	6a06      	ldr	r6, [r0, #32]
 800de5c:	f103 050c 	add.w	r5, r3, #12
 800de60:	f01e 0f10 	tst.w	lr, #16
 800de64:	bf0c      	ite	eq
 800de66:	5571      	strbeq	r1, [r6, r5]
 800de68:	5574      	strbne	r4, [r6, r5]
 800de6a:	6a06      	ldr	r6, [r0, #32]
 800de6c:	f103 050d 	add.w	r5, r3, #13
 800de70:	f01e 0f08 	tst.w	lr, #8
 800de74:	bf0c      	ite	eq
 800de76:	5571      	strbeq	r1, [r6, r5]
 800de78:	5574      	strbne	r4, [r6, r5]
 800de7a:	6a06      	ldr	r6, [r0, #32]
 800de7c:	f103 050e 	add.w	r5, r3, #14
 800de80:	f01e 0f04 	tst.w	lr, #4
 800de84:	bf0c      	ite	eq
 800de86:	5571      	strbeq	r1, [r6, r5]
 800de88:	5574      	strbne	r4, [r6, r5]
 800de8a:	6a06      	ldr	r6, [r0, #32]
 800de8c:	f103 050f 	add.w	r5, r3, #15
 800de90:	f01e 0f02 	tst.w	lr, #2
 800de94:	bf0c      	ite	eq
 800de96:	5571      	strbeq	r1, [r6, r5]
 800de98:	5574      	strbne	r4, [r6, r5]
 800de9a:	f103 0510 	add.w	r5, r3, #16
 800de9e:	f01e 0f01 	tst.w	lr, #1
 800dea2:	e634      	b.n	800db0e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4c6>
 800dea4:	6a01      	ldr	r1, [r0, #32]
 800dea6:	54ca      	strb	r2, [r1, r3]
 800dea8:	bd70      	pop	{r4, r5, r6, pc}
 800deaa:	bf00      	nop

0800deac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800deac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800deae:	6984      	ldr	r4, [r0, #24]
 800deb0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800deb4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800deb8:	f814 c006 	ldrb.w	ip, [r4, r6]
 800debc:	56e6      	ldrsb	r6, [r4, r3]
 800debe:	0149      	lsls	r1, r1, #5
 800dec0:	f814 e002 	ldrb.w	lr, [r4, r2]
 800dec4:	5ce3      	ldrb	r3, [r4, r3]
 800dec6:	5d62      	ldrb	r2, [r4, r5]
 800dec8:	2e00      	cmp	r6, #0
 800deca:	7c05      	ldrb	r5, [r0, #16]
 800decc:	7c44      	ldrb	r4, [r0, #17]
 800dece:	6a06      	ldr	r6, [r0, #32]
 800ded0:	f101 0701 	add.w	r7, r1, #1
 800ded4:	bfac      	ite	ge
 800ded6:	55f5      	strbge	r5, [r6, r7]
 800ded8:	55f4      	strblt	r4, [r6, r7]
 800deda:	6a07      	ldr	r7, [r0, #32]
 800dedc:	1c8e      	adds	r6, r1, #2
 800dede:	f013 0f40 	tst.w	r3, #64	; 0x40
 800dee2:	bf0c      	ite	eq
 800dee4:	55bd      	strbeq	r5, [r7, r6]
 800dee6:	55bc      	strbne	r4, [r7, r6]
 800dee8:	6a07      	ldr	r7, [r0, #32]
 800deea:	1cce      	adds	r6, r1, #3
 800deec:	f013 0f20 	tst.w	r3, #32
 800def0:	bf0c      	ite	eq
 800def2:	55bd      	strbeq	r5, [r7, r6]
 800def4:	55bc      	strbne	r4, [r7, r6]
 800def6:	6a07      	ldr	r7, [r0, #32]
 800def8:	1d0e      	adds	r6, r1, #4
 800defa:	f013 0f10 	tst.w	r3, #16
 800defe:	bf0c      	ite	eq
 800df00:	55bd      	strbeq	r5, [r7, r6]
 800df02:	55bc      	strbne	r4, [r7, r6]
 800df04:	6a07      	ldr	r7, [r0, #32]
 800df06:	1d4e      	adds	r6, r1, #5
 800df08:	f013 0f08 	tst.w	r3, #8
 800df0c:	bf0c      	ite	eq
 800df0e:	55bd      	strbeq	r5, [r7, r6]
 800df10:	55bc      	strbne	r4, [r7, r6]
 800df12:	6a07      	ldr	r7, [r0, #32]
 800df14:	1d8e      	adds	r6, r1, #6
 800df16:	f013 0f04 	tst.w	r3, #4
 800df1a:	bf0c      	ite	eq
 800df1c:	55bd      	strbeq	r5, [r7, r6]
 800df1e:	55bc      	strbne	r4, [r7, r6]
 800df20:	6a07      	ldr	r7, [r0, #32]
 800df22:	1dce      	adds	r6, r1, #7
 800df24:	f013 0f02 	tst.w	r3, #2
 800df28:	bf0c      	ite	eq
 800df2a:	55bd      	strbeq	r5, [r7, r6]
 800df2c:	55bc      	strbne	r4, [r7, r6]
 800df2e:	f013 0f01 	tst.w	r3, #1
 800df32:	6a03      	ldr	r3, [r0, #32]
 800df34:	f101 0608 	add.w	r6, r1, #8
 800df38:	bf14      	ite	ne
 800df3a:	559c      	strbne	r4, [r3, r6]
 800df3c:	559d      	strbeq	r5, [r3, r6]
 800df3e:	7c03      	ldrb	r3, [r0, #16]
 800df40:	7c44      	ldrb	r4, [r0, #17]
 800df42:	6a05      	ldr	r5, [r0, #32]
 800df44:	f101 0609 	add.w	r6, r1, #9
 800df48:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800df4c:	bf0c      	ite	eq
 800df4e:	55ab      	strbeq	r3, [r5, r6]
 800df50:	55ac      	strbne	r4, [r5, r6]
 800df52:	6a05      	ldr	r5, [r0, #32]
 800df54:	f101 060a 	add.w	r6, r1, #10
 800df58:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800df5c:	bf0c      	ite	eq
 800df5e:	55ab      	strbeq	r3, [r5, r6]
 800df60:	55ac      	strbne	r4, [r5, r6]
 800df62:	6a05      	ldr	r5, [r0, #32]
 800df64:	f101 060b 	add.w	r6, r1, #11
 800df68:	f01e 0f20 	tst.w	lr, #32
 800df6c:	bf0c      	ite	eq
 800df6e:	55ab      	strbeq	r3, [r5, r6]
 800df70:	55ac      	strbne	r4, [r5, r6]
 800df72:	6a05      	ldr	r5, [r0, #32]
 800df74:	f101 060c 	add.w	r6, r1, #12
 800df78:	f01e 0f10 	tst.w	lr, #16
 800df7c:	bf0c      	ite	eq
 800df7e:	55ab      	strbeq	r3, [r5, r6]
 800df80:	55ac      	strbne	r4, [r5, r6]
 800df82:	6a05      	ldr	r5, [r0, #32]
 800df84:	f101 060d 	add.w	r6, r1, #13
 800df88:	f01e 0f08 	tst.w	lr, #8
 800df8c:	bf0c      	ite	eq
 800df8e:	55ab      	strbeq	r3, [r5, r6]
 800df90:	55ac      	strbne	r4, [r5, r6]
 800df92:	6a05      	ldr	r5, [r0, #32]
 800df94:	f101 060e 	add.w	r6, r1, #14
 800df98:	f01e 0f04 	tst.w	lr, #4
 800df9c:	bf0c      	ite	eq
 800df9e:	55ab      	strbeq	r3, [r5, r6]
 800dfa0:	55ac      	strbne	r4, [r5, r6]
 800dfa2:	6a05      	ldr	r5, [r0, #32]
 800dfa4:	f101 060f 	add.w	r6, r1, #15
 800dfa8:	f01e 0f02 	tst.w	lr, #2
 800dfac:	bf0c      	ite	eq
 800dfae:	55ab      	strbeq	r3, [r5, r6]
 800dfb0:	55ac      	strbne	r4, [r5, r6]
 800dfb2:	f01e 0f01 	tst.w	lr, #1
 800dfb6:	bf14      	ite	ne
 800dfb8:	6a03      	ldrne	r3, [r0, #32]
 800dfba:	6a04      	ldreq	r4, [r0, #32]
 800dfbc:	f101 0510 	add.w	r5, r1, #16
 800dfc0:	bf14      	ite	ne
 800dfc2:	555c      	strbne	r4, [r3, r5]
 800dfc4:	5563      	strbeq	r3, [r4, r5]
 800dfc6:	7c03      	ldrb	r3, [r0, #16]
 800dfc8:	7c44      	ldrb	r4, [r0, #17]
 800dfca:	6a06      	ldr	r6, [r0, #32]
 800dfcc:	f101 0511 	add.w	r5, r1, #17
 800dfd0:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800dfd4:	bf0c      	ite	eq
 800dfd6:	5573      	strbeq	r3, [r6, r5]
 800dfd8:	5574      	strbne	r4, [r6, r5]
 800dfda:	6a06      	ldr	r6, [r0, #32]
 800dfdc:	f101 0512 	add.w	r5, r1, #18
 800dfe0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800dfe4:	bf0c      	ite	eq
 800dfe6:	5573      	strbeq	r3, [r6, r5]
 800dfe8:	5574      	strbne	r4, [r6, r5]
 800dfea:	6a06      	ldr	r6, [r0, #32]
 800dfec:	f101 0513 	add.w	r5, r1, #19
 800dff0:	f01c 0f20 	tst.w	ip, #32
 800dff4:	bf0c      	ite	eq
 800dff6:	5573      	strbeq	r3, [r6, r5]
 800dff8:	5574      	strbne	r4, [r6, r5]
 800dffa:	6a06      	ldr	r6, [r0, #32]
 800dffc:	f101 0514 	add.w	r5, r1, #20
 800e000:	f01c 0f10 	tst.w	ip, #16
 800e004:	bf0c      	ite	eq
 800e006:	5573      	strbeq	r3, [r6, r5]
 800e008:	5574      	strbne	r4, [r6, r5]
 800e00a:	6a06      	ldr	r6, [r0, #32]
 800e00c:	f101 0515 	add.w	r5, r1, #21
 800e010:	f01c 0f08 	tst.w	ip, #8
 800e014:	bf0c      	ite	eq
 800e016:	5573      	strbeq	r3, [r6, r5]
 800e018:	5574      	strbne	r4, [r6, r5]
 800e01a:	6a06      	ldr	r6, [r0, #32]
 800e01c:	f101 0516 	add.w	r5, r1, #22
 800e020:	f01c 0f04 	tst.w	ip, #4
 800e024:	bf0c      	ite	eq
 800e026:	5573      	strbeq	r3, [r6, r5]
 800e028:	5574      	strbne	r4, [r6, r5]
 800e02a:	6a06      	ldr	r6, [r0, #32]
 800e02c:	f101 0517 	add.w	r5, r1, #23
 800e030:	f01c 0f02 	tst.w	ip, #2
 800e034:	bf0c      	ite	eq
 800e036:	5573      	strbeq	r3, [r6, r5]
 800e038:	5574      	strbne	r4, [r6, r5]
 800e03a:	f01c 0f01 	tst.w	ip, #1
 800e03e:	bf14      	ite	ne
 800e040:	6a03      	ldrne	r3, [r0, #32]
 800e042:	6a04      	ldreq	r4, [r0, #32]
 800e044:	f101 0518 	add.w	r5, r1, #24
 800e048:	bf14      	ite	ne
 800e04a:	555c      	strbne	r4, [r3, r5]
 800e04c:	5563      	strbeq	r3, [r4, r5]
 800e04e:	7c03      	ldrb	r3, [r0, #16]
 800e050:	7c44      	ldrb	r4, [r0, #17]
 800e052:	6a06      	ldr	r6, [r0, #32]
 800e054:	0617      	lsls	r7, r2, #24
 800e056:	f101 0519 	add.w	r5, r1, #25
 800e05a:	bf54      	ite	pl
 800e05c:	5573      	strbpl	r3, [r6, r5]
 800e05e:	5574      	strbmi	r4, [r6, r5]
 800e060:	6a06      	ldr	r6, [r0, #32]
 800e062:	0657      	lsls	r7, r2, #25
 800e064:	f101 051a 	add.w	r5, r1, #26
 800e068:	bf54      	ite	pl
 800e06a:	5573      	strbpl	r3, [r6, r5]
 800e06c:	5574      	strbmi	r4, [r6, r5]
 800e06e:	6a06      	ldr	r6, [r0, #32]
 800e070:	0697      	lsls	r7, r2, #26
 800e072:	f101 051b 	add.w	r5, r1, #27
 800e076:	bf54      	ite	pl
 800e078:	5573      	strbpl	r3, [r6, r5]
 800e07a:	5574      	strbmi	r4, [r6, r5]
 800e07c:	6a06      	ldr	r6, [r0, #32]
 800e07e:	06d7      	lsls	r7, r2, #27
 800e080:	f101 051c 	add.w	r5, r1, #28
 800e084:	bf54      	ite	pl
 800e086:	5573      	strbpl	r3, [r6, r5]
 800e088:	5574      	strbmi	r4, [r6, r5]
 800e08a:	6a06      	ldr	r6, [r0, #32]
 800e08c:	0717      	lsls	r7, r2, #28
 800e08e:	f101 051d 	add.w	r5, r1, #29
 800e092:	bf54      	ite	pl
 800e094:	5573      	strbpl	r3, [r6, r5]
 800e096:	5574      	strbmi	r4, [r6, r5]
 800e098:	6a06      	ldr	r6, [r0, #32]
 800e09a:	0757      	lsls	r7, r2, #29
 800e09c:	f101 051e 	add.w	r5, r1, #30
 800e0a0:	bf54      	ite	pl
 800e0a2:	5573      	strbpl	r3, [r6, r5]
 800e0a4:	5574      	strbmi	r4, [r6, r5]
 800e0a6:	6a06      	ldr	r6, [r0, #32]
 800e0a8:	0797      	lsls	r7, r2, #30
 800e0aa:	f101 051f 	add.w	r5, r1, #31
 800e0ae:	bf54      	ite	pl
 800e0b0:	5573      	strbpl	r3, [r6, r5]
 800e0b2:	5574      	strbmi	r4, [r6, r5]
 800e0b4:	07d2      	lsls	r2, r2, #31
 800e0b6:	bf4c      	ite	mi
 800e0b8:	6a03      	ldrmi	r3, [r0, #32]
 800e0ba:	6a02      	ldrpl	r2, [r0, #32]
 800e0bc:	f101 0120 	add.w	r1, r1, #32
 800e0c0:	bf4c      	ite	mi
 800e0c2:	545c      	strbmi	r4, [r3, r1]
 800e0c4:	5453      	strbpl	r3, [r2, r1]
 800e0c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e0c8 <WS28xx::~WS28xx()>:
 800e0c8:	2200      	movs	r2, #0
 800e0ca:	4b01      	ldr	r3, [pc, #4]	; (800e0d0 <WS28xx::~WS28xx()+0x8>)
 800e0cc:	601a      	str	r2, [r3, #0]
 800e0ce:	4770      	bx	lr
 800e0d0:	20001eac 	andcs	r1, r0, ip, lsr #29

0800e0d4 <WS28xx::SetupBuffers()>:
 800e0d4:	b513      	push	{r0, r1, r4, lr}
 800e0d6:	4604      	mov	r4, r0
 800e0d8:	a801      	add	r0, sp, #4
 800e0da:	f005 fd2b 	bl	8013b34 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800e0de:	9b01      	ldr	r3, [sp, #4]
 800e0e0:	4a07      	ldr	r2, [pc, #28]	; (800e100 <WS28xx::SetupBuffers()+0x2c>)
 800e0e2:	085b      	lsrs	r3, r3, #1
 800e0e4:	f023 0303 	bic.w	r3, r3, #3
 800e0e8:	6220      	str	r0, [r4, #32]
 800e0ea:	4418      	add	r0, r3
 800e0ec:	69e3      	ldr	r3, [r4, #28]
 800e0ee:	6260      	str	r0, [r4, #36]	; 0x24
 800e0f0:	6013      	str	r3, [r2, #0]
 800e0f2:	3303      	adds	r3, #3
 800e0f4:	f023 0303 	bic.w	r3, r3, #3
 800e0f8:	61e3      	str	r3, [r4, #28]
 800e0fa:	b002      	add	sp, #8
 800e0fc:	bd10      	pop	{r4, pc}
 800e0fe:	bf00      	nop
 800e100:	20001ea8 	andcs	r1, r0, r8, lsr #29

0800e104 <WS28xx::WS28xx(PixelConfiguration&)>:
 800e104:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e106:	23aa      	movs	r3, #170	; 0xaa
 800e108:	2203      	movs	r2, #3
 800e10a:	e9c0 2300 	strd	r2, r3, [r0]
 800e10e:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800e112:	460f      	mov	r7, r1
 800e114:	6102      	str	r2, [r0, #16]
 800e116:	2300      	movs	r3, #0
 800e118:	2106      	movs	r1, #6
 800e11a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800e11e:	4605      	mov	r5, r0
 800e120:	463e      	mov	r6, r7
 800e122:	4604      	mov	r4, r0
 800e124:	8282      	strh	r2, [r0, #20]
 800e126:	e9c0 1302 	strd	r1, r3, [r0, #8]
 800e12a:	4a16      	ldr	r2, [pc, #88]	; (800e184 <WS28xx::WS28xx(PixelConfiguration&)+0x80>)
 800e12c:	e9c0 3308 	strd	r3, r3, [r0, #32]
 800e130:	4b15      	ldr	r3, [pc, #84]	; (800e188 <WS28xx::WS28xx(PixelConfiguration&)+0x84>)
 800e132:	6182      	str	r2, [r0, #24]
 800e134:	6018      	str	r0, [r3, #0]
 800e136:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800e138:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800e13a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800e13e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800e142:	a901      	add	r1, sp, #4
 800e144:	4638      	mov	r0, r7
 800e146:	f7fe fe05 	bl	800cd54 <PixelConfiguration::Validate(unsigned int&)>
 800e14a:	6862      	ldr	r2, [r4, #4]
 800e14c:	9b01      	ldr	r3, [sp, #4]
 800e14e:	7d61      	ldrb	r1, [r4, #21]
 800e150:	4353      	muls	r3, r2
 800e152:	61e3      	str	r3, [r4, #28]
 800e154:	b111      	cbz	r1, 800e15c <WS28xx::WS28xx(PixelConfiguration&)+0x58>
 800e156:	00db      	lsls	r3, r3, #3
 800e158:	3301      	adds	r3, #1
 800e15a:	61e3      	str	r3, [r4, #28]
 800e15c:	6823      	ldr	r3, [r4, #0]
 800e15e:	4620      	mov	r0, r4
 800e160:	3b0b      	subs	r3, #11
 800e162:	2b02      	cmp	r3, #2
 800e164:	bf9f      	itttt	ls
 800e166:	69e3      	ldrls	r3, [r4, #28]
 800e168:	18d2      	addls	r2, r2, r3
 800e16a:	3208      	addls	r2, #8
 800e16c:	61e2      	strls	r2, [r4, #28]
 800e16e:	f7ff ffb1 	bl	800e0d4 <WS28xx::SetupBuffers()>
 800e172:	f005 fc41 	bl	80139f8 <gd32_spi_dma_begin()>
 800e176:	68f8      	ldr	r0, [r7, #12]
 800e178:	f005 fcc8 	bl	8013b0c <gd32_spi_dma_set_speed_hz(unsigned int)>
 800e17c:	4620      	mov	r0, r4
 800e17e:	b003      	add	sp, #12
 800e180:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e182:	bf00      	nop
 800e184:	0801638c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sp, lr}
 800e188:	20001eac 	andcs	r1, r0, ip, lsr #29

0800e18c <WS28xx::Update()>:
 800e18c:	2200      	movs	r2, #0
 800e18e:	b430      	push	{r4, r5}
 800e190:	4b0b      	ldr	r3, [pc, #44]	; (800e1c0 <WS28xx::Update()+0x34>)
 800e192:	681b      	ldr	r3, [r3, #0]
 800e194:	e9d0 1407 	ldrd	r1, r4, [r0, #28]
 800e198:	4299      	cmp	r1, r3
 800e19a:	d807      	bhi.n	800e1ac <WS28xx::Update()+0x20>
 800e19c:	2300      	movs	r3, #0
 800e19e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e1a0:	084d      	lsrs	r5, r1, #1
 800e1a2:	42ab      	cmp	r3, r5
 800e1a4:	d105      	bne.n	800e1b2 <WS28xx::Update()+0x26>
 800e1a6:	bc30      	pop	{r4, r5}
 800e1a8:	f005 bccc 	b.w	8013b44 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800e1ac:	54e2      	strb	r2, [r4, r3]
 800e1ae:	3301      	adds	r3, #1
 800e1b0:	e7f0      	b.n	800e194 <WS28xx::Update()+0x8>
 800e1b2:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800e1b6:	ba52      	rev16	r2, r2
 800e1b8:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800e1bc:	3301      	adds	r3, #1
 800e1be:	e7f0      	b.n	800e1a2 <WS28xx::Update()+0x16>
 800e1c0:	20001ea8 	andcs	r1, r0, r8, lsr #29

0800e1c4 <WS28xx::Blackout()>:
 800e1c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e1c8:	4604      	mov	r4, r0
 800e1ca:	f3bf 8f6f 	isb	sy
 800e1ce:	f005 fcd3 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800e1d2:	2800      	cmp	r0, #0
 800e1d4:	d1f9      	bne.n	800e1ca <WS28xx::Blackout()+0x6>
 800e1d6:	e9d4 2800 	ldrd	r2, r8, [r4]
 800e1da:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800e1de:	f1a2 070b 	sub.w	r7, r2, #11
 800e1e2:	2f02      	cmp	r7, #2
 800e1e4:	6223      	str	r3, [r4, #32]
 800e1e6:	7018      	strb	r0, [r3, #0]
 800e1e8:	d829      	bhi.n	800e23e <WS28xx::Blackout()+0x7a>
 800e1ea:	4605      	mov	r5, r0
 800e1ec:	4681      	mov	r9, r0
 800e1ee:	7058      	strb	r0, [r3, #1]
 800e1f0:	7098      	strb	r0, [r3, #2]
 800e1f2:	70d8      	strb	r0, [r3, #3]
 800e1f4:	4545      	cmp	r5, r8
 800e1f6:	d118      	bne.n	800e22a <WS28xx::Blackout()+0x66>
 800e1f8:	2f02      	cmp	r7, #2
 800e1fa:	bf14      	ite	ne
 800e1fc:	21ff      	movne	r1, #255	; 0xff
 800e1fe:	2100      	moveq	r1, #0
 800e200:	69e2      	ldr	r2, [r4, #28]
 800e202:	6a20      	ldr	r0, [r4, #32]
 800e204:	3a04      	subs	r2, #4
 800e206:	1883      	adds	r3, r0, r2
 800e208:	5481      	strb	r1, [r0, r2]
 800e20a:	7059      	strb	r1, [r3, #1]
 800e20c:	7099      	strb	r1, [r3, #2]
 800e20e:	70d9      	strb	r1, [r3, #3]
 800e210:	4620      	mov	r0, r4
 800e212:	f7ff ffbb 	bl	800e18c <WS28xx::Update()>
 800e216:	f3bf 8f6f 	isb	sy
 800e21a:	f005 fcad 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800e21e:	2800      	cmp	r0, #0
 800e220:	d1f9      	bne.n	800e216 <WS28xx::Blackout()+0x52>
 800e222:	6226      	str	r6, [r4, #32]
 800e224:	b003      	add	sp, #12
 800e226:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e22a:	2300      	movs	r3, #0
 800e22c:	4629      	mov	r1, r5
 800e22e:	461a      	mov	r2, r3
 800e230:	4620      	mov	r0, r4
 800e232:	f8cd 9000 	str.w	r9, [sp]
 800e236:	f7ff fa07 	bl	800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800e23a:	3501      	adds	r5, #1
 800e23c:	e7da      	b.n	800e1f4 <WS28xx::Blackout()+0x30>
 800e23e:	6a23      	ldr	r3, [r4, #32]
 800e240:	b102      	cbz	r2, 800e244 <WS28xx::Blackout()+0x80>
 800e242:	7c22      	ldrb	r2, [r4, #16]
 800e244:	69e1      	ldr	r1, [r4, #28]
 800e246:	4419      	add	r1, r3
 800e248:	4299      	cmp	r1, r3
 800e24a:	d0e1      	beq.n	800e210 <WS28xx::Blackout()+0x4c>
 800e24c:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e250:	e7fa      	b.n	800e248 <WS28xx::Blackout()+0x84>

0800e252 <WS28xx::FullOn()>:
 800e252:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e256:	4604      	mov	r4, r0
 800e258:	f3bf 8f6f 	isb	sy
 800e25c:	f005 fc8c 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800e260:	2800      	cmp	r0, #0
 800e262:	d1f9      	bne.n	800e258 <WS28xx::FullOn()+0x6>
 800e264:	e9d4 2800 	ldrd	r2, r8, [r4]
 800e268:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800e26c:	f1a2 070b 	sub.w	r7, r2, #11
 800e270:	2f02      	cmp	r7, #2
 800e272:	6223      	str	r3, [r4, #32]
 800e274:	7018      	strb	r0, [r3, #0]
 800e276:	d82a      	bhi.n	800e2ce <WS28xx::FullOn()+0x7c>
 800e278:	4605      	mov	r5, r0
 800e27a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e27e:	7058      	strb	r0, [r3, #1]
 800e280:	7098      	strb	r0, [r3, #2]
 800e282:	70d8      	strb	r0, [r3, #3]
 800e284:	4545      	cmp	r5, r8
 800e286:	d118      	bne.n	800e2ba <WS28xx::FullOn()+0x68>
 800e288:	2f02      	cmp	r7, #2
 800e28a:	bf14      	ite	ne
 800e28c:	21ff      	movne	r1, #255	; 0xff
 800e28e:	2100      	moveq	r1, #0
 800e290:	69e2      	ldr	r2, [r4, #28]
 800e292:	6a20      	ldr	r0, [r4, #32]
 800e294:	3a04      	subs	r2, #4
 800e296:	1883      	adds	r3, r0, r2
 800e298:	5481      	strb	r1, [r0, r2]
 800e29a:	7059      	strb	r1, [r3, #1]
 800e29c:	7099      	strb	r1, [r3, #2]
 800e29e:	70d9      	strb	r1, [r3, #3]
 800e2a0:	4620      	mov	r0, r4
 800e2a2:	f7ff ff73 	bl	800e18c <WS28xx::Update()>
 800e2a6:	f3bf 8f6f 	isb	sy
 800e2aa:	f005 fc65 	bl	8013b78 <gd32_spi_dma_tx_is_active()>
 800e2ae:	2800      	cmp	r0, #0
 800e2b0:	d1f9      	bne.n	800e2a6 <WS28xx::FullOn()+0x54>
 800e2b2:	6226      	str	r6, [r4, #32]
 800e2b4:	b003      	add	sp, #12
 800e2b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2ba:	23ff      	movs	r3, #255	; 0xff
 800e2bc:	4629      	mov	r1, r5
 800e2be:	461a      	mov	r2, r3
 800e2c0:	4620      	mov	r0, r4
 800e2c2:	f8cd 9000 	str.w	r9, [sp]
 800e2c6:	f7ff f9bf 	bl	800d648 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800e2ca:	3501      	adds	r5, #1
 800e2cc:	e7da      	b.n	800e284 <WS28xx::FullOn()+0x32>
 800e2ce:	6a23      	ldr	r3, [r4, #32]
 800e2d0:	b13a      	cbz	r2, 800e2e2 <WS28xx::FullOn()+0x90>
 800e2d2:	7c61      	ldrb	r1, [r4, #17]
 800e2d4:	69e2      	ldr	r2, [r4, #28]
 800e2d6:	441a      	add	r2, r3
 800e2d8:	429a      	cmp	r2, r3
 800e2da:	d0e1      	beq.n	800e2a0 <WS28xx::FullOn()+0x4e>
 800e2dc:	f803 1f01 	strb.w	r1, [r3, #1]!
 800e2e0:	e7fa      	b.n	800e2d8 <WS28xx::FullOn()+0x86>
 800e2e2:	21ff      	movs	r1, #255	; 0xff
 800e2e4:	e7f6      	b.n	800e2d4 <WS28xx::FullOn()+0x82>
	...

0800e2e8 <net_timers_run>:
 800e2e8:	4b05      	ldr	r3, [pc, #20]	; (800e300 <net_timers_run+0x18>)
 800e2ea:	4a06      	ldr	r2, [pc, #24]	; (800e304 <net_timers_run+0x1c>)
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	6811      	ldr	r1, [r2, #0]
 800e2f0:	4299      	cmp	r1, r3
 800e2f2:	d803      	bhi.n	800e2fc <net_timers_run+0x14>
 800e2f4:	3364      	adds	r3, #100	; 0x64
 800e2f6:	6013      	str	r3, [r2, #0]
 800e2f8:	f001 be6e 	b.w	800ffd8 <igmp_timer>
 800e2fc:	4770      	bx	lr
 800e2fe:	bf00      	nop
 800e300:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800e304:	20001ec8 	andcs	r1, r0, r8, asr #29

0800e308 <rfc3927>:
 800e308:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e30c:	4606      	mov	r6, r0
 800e30e:	25ff      	movs	r5, #255	; 0xff
 800e310:	4b18      	ldr	r3, [pc, #96]	; (800e374 <rfc3927+0x6c>)
 800e312:	4f19      	ldr	r7, [pc, #100]	; (800e378 <rfc3927+0x70>)
 800e314:	791a      	ldrb	r2, [r3, #4]
 800e316:	78dc      	ldrb	r4, [r3, #3]
 800e318:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e37c <rfc3927+0x74>
 800e31c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800e320:	f8d7 9000 	ldr.w	r9, [r7]
 800e324:	f8df b058 	ldr.w	fp, [pc, #88]	; 800e380 <rfc3927+0x78>
 800e328:	f8df a058 	ldr.w	sl, [pc, #88]	; 800e384 <rfc3927+0x7c>
 800e32c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800e330:	4659      	mov	r1, fp
 800e332:	4620      	mov	r0, r4
 800e334:	f001 fbae 	bl	800fa94 <arp_cache_lookup>
 800e338:	b190      	cbz	r0, 800e360 <rfc3927+0x58>
 800e33a:	ba24      	rev	r4, r4
 800e33c:	3401      	adds	r4, #1
 800e33e:	3d01      	subs	r5, #1
 800e340:	ba24      	rev	r4, r4
 800e342:	b2ad      	uxth	r5, r5
 800e344:	4554      	cmp	r4, sl
 800e346:	bf08      	it	eq
 800e348:	4644      	moveq	r4, r8
 800e34a:	b18d      	cbz	r5, 800e370 <rfc3927+0x68>
 800e34c:	683b      	ldr	r3, [r7, #0]
 800e34e:	eba3 0309 	sub.w	r3, r3, r9
 800e352:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800e356:	d3eb      	bcc.n	800e330 <rfc3927+0x28>
 800e358:	2400      	movs	r4, #0
 800e35a:	4623      	mov	r3, r4
 800e35c:	4620      	mov	r0, r4
 800e35e:	e002      	b.n	800e366 <rfc3927+0x5e>
 800e360:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e364:	2001      	movs	r0, #1
 800e366:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800e36a:	6034      	str	r4, [r6, #0]
 800e36c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e370:	462c      	mov	r4, r5
 800e372:	e7f2      	b.n	800e35a <rfc3927+0x52>
 800e374:	20001ecc 	andcs	r1, r0, ip, asr #29
 800e378:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800e37c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800e380:	20001ed4 	ldrdcs	r1, [r0], -r4
 800e384:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800e388 <_init_tcb>:
 800e388:	b510      	push	{r4, lr}
 800e38a:	4603      	mov	r3, r0
 800e38c:	2400      	movs	r4, #0
 800e38e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800e392:	4293      	cmp	r3, r2
 800e394:	d10d      	bne.n	800e3b2 <_init_tcb+0x2a>
 800e396:	4b08      	ldr	r3, [pc, #32]	; (800e3b8 <_init_tcb+0x30>)
 800e398:	f640 3268 	movw	r2, #2920	; 0xb68
 800e39c:	681b      	ldr	r3, [r3, #0]
 800e39e:	8702      	strh	r2, [r0, #56]	; 0x38
 800e3a0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e3a4:	6283      	str	r3, [r0, #40]	; 0x28
 800e3a6:	6243      	str	r3, [r0, #36]	; 0x24
 800e3a8:	2301      	movs	r3, #1
 800e3aa:	8001      	strh	r1, [r0, #0]
 800e3ac:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800e3b0:	bd10      	pop	{r4, pc}
 800e3b2:	f803 4b01 	strb.w	r4, [r3], #1
 800e3b6:	e7ec      	b.n	800e392 <_init_tcb+0xa>
 800e3b8:	2000aea4 	andcs	sl, r0, r4, lsr #29

0800e3bc <memcpy.isra.0>:
 800e3bc:	3801      	subs	r0, #1
 800e3be:	440a      	add	r2, r1
 800e3c0:	4291      	cmp	r1, r2
 800e3c2:	d100      	bne.n	800e3c6 <memcpy.isra.0+0xa>
 800e3c4:	4770      	bx	lr
 800e3c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e3ca:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e3ce:	e7f7      	b.n	800e3c0 <memcpy.isra.0+0x4>

0800e3d0 <_bswap32>:
 800e3d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e3d2:	2204      	movs	r2, #4
 800e3d4:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800e3d8:	4629      	mov	r1, r5
 800e3da:	4604      	mov	r4, r0
 800e3dc:	eb0d 0002 	add.w	r0, sp, r2
 800e3e0:	f7ff ffec 	bl	800e3bc <memcpy.isra.0>
 800e3e4:	2204      	movs	r2, #4
 800e3e6:	9b01      	ldr	r3, [sp, #4]
 800e3e8:	eb0d 0102 	add.w	r1, sp, r2
 800e3ec:	ba1b      	rev	r3, r3
 800e3ee:	4628      	mov	r0, r5
 800e3f0:	9301      	str	r3, [sp, #4]
 800e3f2:	f7ff ffe3 	bl	800e3bc <memcpy.isra.0>
 800e3f6:	2204      	movs	r2, #4
 800e3f8:	3426      	adds	r4, #38	; 0x26
 800e3fa:	eb0d 0002 	add.w	r0, sp, r2
 800e3fe:	4621      	mov	r1, r4
 800e400:	f7ff ffdc 	bl	800e3bc <memcpy.isra.0>
 800e404:	2204      	movs	r2, #4
 800e406:	9b01      	ldr	r3, [sp, #4]
 800e408:	4620      	mov	r0, r4
 800e40a:	ba1b      	rev	r3, r3
 800e40c:	eb0d 0102 	add.w	r1, sp, r2
 800e410:	9301      	str	r3, [sp, #4]
 800e412:	f7ff ffd3 	bl	800e3bc <memcpy.isra.0>
 800e416:	b003      	add	sp, #12
 800e418:	bd30      	pop	{r4, r5, pc}
	...

0800e41c <_tcp_send_package>:
 800e41c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e420:	7a0b      	ldrb	r3, [r1, #8]
 800e422:	4605      	mov	r5, r0
 800e424:	f013 0f02 	tst.w	r3, #2
 800e428:	bf0c      	ite	eq
 800e42a:	f04f 0805 	moveq.w	r8, #5
 800e42e:	f04f 0806 	movne.w	r8, #6
 800e432:	f04f 0a00 	mov.w	sl, #0
 800e436:	4c47      	ldr	r4, [pc, #284]	; (800e554 <_tcp_send_package+0x138>)
 800e438:	460f      	mov	r7, r1
 800e43a:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800e43c:	f100 0108 	add.w	r1, r0, #8
 800e440:	2206      	movs	r2, #6
 800e442:	4620      	mov	r0, r4
 800e444:	f7ff ffba 	bl	800e3bc <memcpy.isra.0>
 800e448:	4a43      	ldr	r2, [pc, #268]	; (800e558 <_tcp_send_package+0x13c>)
 800e44a:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800e44e:	8813      	ldrh	r3, [r2, #0]
 800e450:	b2b6      	uxth	r6, r6
 800e452:	1c59      	adds	r1, r3, #1
 800e454:	8263      	strh	r3, [r4, #18]
 800e456:	f105 0904 	add.w	r9, r5, #4
 800e45a:	f106 0314 	add.w	r3, r6, #20
 800e45e:	ba5b      	rev16	r3, r3
 800e460:	8011      	strh	r1, [r2, #0]
 800e462:	f104 001e 	add.w	r0, r4, #30
 800e466:	2204      	movs	r2, #4
 800e468:	4649      	mov	r1, r9
 800e46a:	8223      	strh	r3, [r4, #16]
 800e46c:	f7ff ffa6 	bl	800e3bc <memcpy.isra.0>
 800e470:	2114      	movs	r1, #20
 800e472:	f104 000e 	add.w	r0, r4, #14
 800e476:	f8a4 a018 	strh.w	sl, [r4, #24]
 800e47a:	f001 fe40 	bl	80100fe <net_chksum>
 800e47e:	882b      	ldrh	r3, [r5, #0]
 800e480:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800e484:	8463      	strh	r3, [r4, #34]	; 0x22
 800e486:	886b      	ldrh	r3, [r5, #2]
 800e488:	8320      	strh	r0, [r4, #24]
 800e48a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e48c:	683b      	ldr	r3, [r7, #0]
 800e48e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800e490:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800e494:	687b      	ldr	r3, [r7, #4]
 800e496:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800e49a:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800e49e:	7a3b      	ldrb	r3, [r7, #8]
 800e4a0:	8622      	strh	r2, [r4, #48]	; 0x30
 800e4a2:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800e4a6:	079b      	lsls	r3, r3, #30
 800e4a8:	bf48      	it	mi
 800e4aa:	f240 4302 	movwmi	r3, #1026	; 0x402
 800e4ae:	8baa      	ldrh	r2, [r5, #28]
 800e4b0:	bf48      	it	mi
 800e4b2:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800e4b4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e4b6:	bf42      	ittt	mi
 800e4b8:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800e4bc:	4622      	movmi	r2, r4
 800e4be:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800e4c2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e4c4:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800e4c8:	bf58      	it	pl
 800e4ca:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800e4ce:	2b00      	cmp	r3, #0
 800e4d0:	d13e      	bne.n	800e550 <_tcp_send_package+0x134>
 800e4d2:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800e4d4:	481f      	ldr	r0, [pc, #124]	; (800e554 <_tcp_send_package+0x138>)
 800e4d6:	ba5b      	rev16	r3, r3
 800e4d8:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4da:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800e4dc:	ba5b      	rev16	r3, r3
 800e4de:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e4e0:	f7ff ff76 	bl	800e3d0 <_bswap32>
 800e4e4:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e4e6:	a801      	add	r0, sp, #4
 800e4e8:	ba5b      	rev16	r3, r3
 800e4ea:	8623      	strh	r3, [r4, #48]	; 0x30
 800e4ec:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e4ee:	220c      	movs	r2, #12
 800e4f0:	ba5b      	rev16	r3, r3
 800e4f2:	491a      	ldr	r1, [pc, #104]	; (800e55c <_tcp_send_package+0x140>)
 800e4f4:	86a3      	strh	r3, [r4, #52]	; 0x34
 800e4f6:	f7ff ff61 	bl	800e3bc <memcpy.isra.0>
 800e4fa:	2204      	movs	r2, #4
 800e4fc:	4918      	ldr	r1, [pc, #96]	; (800e560 <_tcp_send_package+0x144>)
 800e4fe:	4817      	ldr	r0, [pc, #92]	; (800e55c <_tcp_send_package+0x140>)
 800e500:	f7ff ff5c 	bl	800e3bc <memcpy.isra.0>
 800e504:	2204      	movs	r2, #4
 800e506:	4649      	mov	r1, r9
 800e508:	4816      	ldr	r0, [pc, #88]	; (800e564 <_tcp_send_package+0x148>)
 800e50a:	f7ff ff57 	bl	800e3bc <memcpy.isra.0>
 800e50e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800e512:	f106 010c 	add.w	r1, r6, #12
 800e516:	83e3      	strh	r3, [r4, #30]
 800e518:	4810      	ldr	r0, [pc, #64]	; (800e55c <_tcp_send_package+0x140>)
 800e51a:	ba73      	rev16	r3, r6
 800e51c:	8423      	strh	r3, [r4, #32]
 800e51e:	f001 fdee 	bl	80100fe <net_chksum>
 800e522:	a901      	add	r1, sp, #4
 800e524:	4605      	mov	r5, r0
 800e526:	220c      	movs	r2, #12
 800e528:	480c      	ldr	r0, [pc, #48]	; (800e55c <_tcp_send_package+0x140>)
 800e52a:	f7ff ff47 	bl	800e3bc <memcpy.isra.0>
 800e52e:	4809      	ldr	r0, [pc, #36]	; (800e554 <_tcp_send_package+0x138>)
 800e530:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800e534:	8665      	strh	r5, [r4, #50]	; 0x32
 800e536:	b004      	add	sp, #16
 800e538:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e53c:	f005 b8b4 	b.w	80136a8 <emac_eth_send>
 800e540:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800e542:	5cc9      	ldrb	r1, [r1, r3]
 800e544:	54d1      	strb	r1, [r2, r3]
 800e546:	3301      	adds	r3, #1
 800e548:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800e54a:	4299      	cmp	r1, r3
 800e54c:	d8f8      	bhi.n	800e540 <_tcp_send_package+0x124>
 800e54e:	e7c0      	b.n	800e4d2 <_tcp_send_package+0xb6>
 800e550:	2300      	movs	r3, #0
 800e552:	e7f9      	b.n	800e548 <_tcp_send_package+0x12c>
 800e554:	20002a94 	mulcs	r0, r4, sl
 800e558:	20001edc 	ldrdcs	r1, [r0], -ip
 800e55c:	20002aaa 	andcs	r2, r0, sl, lsr #21
 800e560:	20001eb0 			; <UNDEFINED> instruction: 0x20001eb0
 800e564:	20002aae 	andcs	r2, r0, lr, lsr #21

0800e568 <_send_reset>:
 800e568:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e56a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800e56e:	4604      	mov	r4, r0
 800e570:	075a      	lsls	r2, r3, #29
 800e572:	460e      	mov	r6, r1
 800e574:	d421      	bmi.n	800e5ba <_send_reset+0x52>
 800e576:	2204      	movs	r2, #4
 800e578:	f013 0310 	ands.w	r3, r3, #16
 800e57c:	f88d 200c 	strb.w	r2, [sp, #12]
 800e580:	d01d      	beq.n	800e5be <_send_reset+0x56>
 800e582:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800e586:	4668      	mov	r0, sp
 800e588:	f7ff ff18 	bl	800e3bc <memcpy.isra.0>
 800e58c:	9b00      	ldr	r3, [sp, #0]
 800e58e:	9301      	str	r3, [sp, #4]
 800e590:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800e594:	4668      	mov	r0, sp
 800e596:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800e59a:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800e59e:	07db      	lsls	r3, r3, #31
 800e5a0:	f04f 0204 	mov.w	r2, #4
 800e5a4:	bf48      	it	mi
 800e5a6:	3501      	addmi	r5, #1
 800e5a8:	f7ff ff08 	bl	800e3bc <memcpy.isra.0>
 800e5ac:	9b00      	ldr	r3, [sp, #0]
 800e5ae:	4630      	mov	r0, r6
 800e5b0:	441d      	add	r5, r3
 800e5b2:	a901      	add	r1, sp, #4
 800e5b4:	9502      	str	r5, [sp, #8]
 800e5b6:	f7ff ff31 	bl	800e41c <_tcp_send_package>
 800e5ba:	b004      	add	sp, #16
 800e5bc:	bd70      	pop	{r4, r5, r6, pc}
 800e5be:	9301      	str	r3, [sp, #4]
 800e5c0:	2314      	movs	r3, #20
 800e5c2:	f88d 300c 	strb.w	r3, [sp, #12]
 800e5c6:	e7e3      	b.n	800e590 <_send_reset+0x28>

0800e5c8 <tcp_begin>:
 800e5c8:	b508      	push	{r3, lr}
 800e5ca:	4b0a      	ldr	r3, [pc, #40]	; (800e5f4 <tcp_begin+0x2c>)
 800e5cc:	4601      	mov	r1, r0
 800e5ce:	881a      	ldrh	r2, [r3, #0]
 800e5d0:	4282      	cmp	r2, r0
 800e5d2:	d102      	bne.n	800e5da <tcp_begin+0x12>
 800e5d4:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800e5d8:	b130      	cbz	r0, 800e5e8 <tcp_begin+0x20>
 800e5da:	b12a      	cbz	r2, 800e5e8 <tcp_begin+0x20>
 800e5dc:	4806      	ldr	r0, [pc, #24]	; (800e5f8 <tcp_begin+0x30>)
 800e5de:	f003 fc73 	bl	8011ec8 <console_error>
 800e5e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e5e6:	bd08      	pop	{r3, pc}
 800e5e8:	4802      	ldr	r0, [pc, #8]	; (800e5f4 <tcp_begin+0x2c>)
 800e5ea:	8019      	strh	r1, [r3, #0]
 800e5ec:	f7ff fecc 	bl	800e388 <_init_tcb>
 800e5f0:	2000      	movs	r0, #0
 800e5f2:	e7f8      	b.n	800e5e6 <tcp_begin+0x1e>
 800e5f4:	20002a50 	andcs	r2, r0, r0, asr sl
 800e5f8:	0801648c 	stmdaeq	r1, {r2, r3, r7, sl, sp, lr}

0800e5fc <tcp_write>:
 800e5fc:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800e600:	429a      	cmp	r2, r3
 800e602:	bf28      	it	cs
 800e604:	461a      	movcs	r2, r3
 800e606:	2344      	movs	r3, #68	; 0x44
 800e608:	b530      	push	{r4, r5, lr}
 800e60a:	4c0d      	ldr	r4, [pc, #52]	; (800e640 <tcp_write+0x44>)
 800e60c:	b085      	sub	sp, #20
 800e60e:	fb03 4400 	mla	r4, r3, r0, r4
 800e612:	6963      	ldr	r3, [r4, #20]
 800e614:	62e1      	str	r1, [r4, #44]	; 0x2c
 800e616:	9301      	str	r3, [sp, #4]
 800e618:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e61a:	4620      	mov	r0, r4
 800e61c:	9302      	str	r3, [sp, #8]
 800e61e:	2318      	movs	r3, #24
 800e620:	8622      	strh	r2, [r4, #48]	; 0x30
 800e622:	a901      	add	r1, sp, #4
 800e624:	4615      	mov	r5, r2
 800e626:	f88d 300c 	strb.w	r3, [sp, #12]
 800e62a:	f7ff fef7 	bl	800e41c <_tcp_send_package>
 800e62e:	2300      	movs	r3, #0
 800e630:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e632:	8623      	strh	r3, [r4, #48]	; 0x30
 800e634:	6963      	ldr	r3, [r4, #20]
 800e636:	442b      	add	r3, r5
 800e638:	6163      	str	r3, [r4, #20]
 800e63a:	b005      	add	sp, #20
 800e63c:	bd30      	pop	{r4, r5, pc}
 800e63e:	bf00      	nop
 800e640:	20002a50 	andcs	r2, r0, r0, asr sl

0800e644 <tcp_read>:
 800e644:	2344      	movs	r3, #68	; 0x44
 800e646:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e648:	4c1c      	ldr	r4, [pc, #112]	; (800e6bc <tcp_read+0x78>)
 800e64a:	b085      	sub	sp, #20
 800e64c:	fb03 4400 	mla	r4, r3, r0, r4
 800e650:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e654:	2b07      	cmp	r3, #7
 800e656:	d112      	bne.n	800e67e <tcp_read+0x3a>
 800e658:	6963      	ldr	r3, [r4, #20]
 800e65a:	4620      	mov	r0, r4
 800e65c:	9301      	str	r3, [sp, #4]
 800e65e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e660:	a901      	add	r1, sp, #4
 800e662:	9302      	str	r3, [sp, #8]
 800e664:	2311      	movs	r3, #17
 800e666:	f88d 300c 	strb.w	r3, [sp, #12]
 800e66a:	f7ff fed7 	bl	800e41c <_tcp_send_package>
 800e66e:	2309      	movs	r3, #9
 800e670:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800e674:	6963      	ldr	r3, [r4, #20]
 800e676:	3301      	adds	r3, #1
 800e678:	6163      	str	r3, [r4, #20]
 800e67a:	2000      	movs	r0, #0
 800e67c:	e01b      	b.n	800e6b6 <tcp_read+0x72>
 800e67e:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800e682:	4358      	muls	r0, r3
 800e684:	4a0e      	ldr	r2, [pc, #56]	; (800e6c0 <tcp_read+0x7c>)
 800e686:	1817      	adds	r7, r2, r0
 800e688:	887b      	ldrh	r3, [r7, #2]
 800e68a:	5a15      	ldrh	r5, [r2, r0]
 800e68c:	429d      	cmp	r5, r3
 800e68e:	d0f4      	beq.n	800e67a <tcp_read+0x36>
 800e690:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800e694:	435d      	muls	r5, r3
 800e696:	1d06      	adds	r6, r0, #4
 800e698:	442e      	add	r6, r5
 800e69a:	4416      	add	r6, r2
 800e69c:	4405      	add	r5, r0
 800e69e:	600e      	str	r6, [r1, #0]
 800e6a0:	442a      	add	r2, r5
 800e6a2:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800e6a6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e6a8:	3301      	adds	r3, #1
 800e6aa:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800e6ae:	f003 0301 	and.w	r3, r3, #1
 800e6b2:	8722      	strh	r2, [r4, #56]	; 0x38
 800e6b4:	807b      	strh	r3, [r7, #2]
 800e6b6:	b005      	add	sp, #20
 800e6b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6ba:	bf00      	nop
 800e6bc:	20002a50 	andcs	r2, r0, r0, asr sl
 800e6c0:	20001ee0 	andcs	r1, r0, r0, ror #29

0800e6c4 <memcpy.isra.0>:
 800e6c4:	3801      	subs	r0, #1
 800e6c6:	440a      	add	r2, r1
 800e6c8:	4291      	cmp	r1, r2
 800e6ca:	d100      	bne.n	800e6ce <memcpy.isra.0+0xa>
 800e6cc:	4770      	bx	lr
 800e6ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e6d2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e6d6:	e7f7      	b.n	800e6c8 <memcpy.isra.0+0x4>

0800e6d8 <net_memcpy>:
 800e6d8:	ea40 0301 	orr.w	r3, r0, r1
 800e6dc:	079b      	lsls	r3, r3, #30
 800e6de:	b570      	push	{r4, r5, r6, lr}
 800e6e0:	d108      	bne.n	800e6f4 <net_memcpy+0x1c>
 800e6e2:	f022 0303 	bic.w	r3, r2, #3
 800e6e6:	1f04      	subs	r4, r0, #4
 800e6e8:	18cd      	adds	r5, r1, r3
 800e6ea:	42a9      	cmp	r1, r5
 800e6ec:	d108      	bne.n	800e700 <net_memcpy+0x28>
 800e6ee:	1ad2      	subs	r2, r2, r3
 800e6f0:	4403      	add	r3, r0
 800e6f2:	e000      	b.n	800e6f6 <net_memcpy+0x1e>
 800e6f4:	4603      	mov	r3, r0
 800e6f6:	3b01      	subs	r3, #1
 800e6f8:	440a      	add	r2, r1
 800e6fa:	4291      	cmp	r1, r2
 800e6fc:	d105      	bne.n	800e70a <net_memcpy+0x32>
 800e6fe:	bd70      	pop	{r4, r5, r6, pc}
 800e700:	f851 6b04 	ldr.w	r6, [r1], #4
 800e704:	f844 6f04 	str.w	r6, [r4, #4]!
 800e708:	e7ef      	b.n	800e6ea <net_memcpy+0x12>
 800e70a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e70e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e712:	e7f2      	b.n	800e6fa <net_memcpy+0x22>

0800e714 <udp_set_ip>:
 800e714:	2204      	movs	r2, #4
 800e716:	b513      	push	{r0, r1, r4, lr}
 800e718:	4604      	mov	r4, r0
 800e71a:	6803      	ldr	r3, [r0, #0]
 800e71c:	eb0d 0102 	add.w	r1, sp, r2
 800e720:	4808      	ldr	r0, [pc, #32]	; (800e744 <udp_set_ip+0x30>)
 800e722:	9301      	str	r3, [sp, #4]
 800e724:	f7ff ffce 	bl	800e6c4 <memcpy.isra.0>
 800e728:	6862      	ldr	r2, [r4, #4]
 800e72a:	4b07      	ldr	r3, [pc, #28]	; (800e748 <udp_set_ip+0x34>)
 800e72c:	43d1      	mvns	r1, r2
 800e72e:	6019      	str	r1, [r3, #0]
 800e730:	6823      	ldr	r3, [r4, #0]
 800e732:	4013      	ands	r3, r2
 800e734:	4a05      	ldr	r2, [pc, #20]	; (800e74c <udp_set_ip+0x38>)
 800e736:	6013      	str	r3, [r2, #0]
 800e738:	68a2      	ldr	r2, [r4, #8]
 800e73a:	4b05      	ldr	r3, [pc, #20]	; (800e750 <udp_set_ip+0x3c>)
 800e73c:	601a      	str	r2, [r3, #0]
 800e73e:	b002      	add	sp, #8
 800e740:	bd10      	pop	{r4, pc}
 800e742:	bf00      	nop
 800e744:	20008d6a 	andcs	r8, r0, sl, ror #26
 800e748:	20003080 	andcs	r3, r0, r0, lsl #1
 800e74c:	20003088 	andcs	r3, r0, r8, lsl #1
 800e750:	20003084 	andcs	r3, r0, r4, lsl #1

0800e754 <udp_bind>:
 800e754:	4a0a      	ldr	r2, [pc, #40]	; (800e780 <udp_bind+0x2c>)
 800e756:	4603      	mov	r3, r0
 800e758:	b510      	push	{r4, lr}
 800e75a:	2000      	movs	r0, #0
 800e75c:	4614      	mov	r4, r2
 800e75e:	f852 1b04 	ldr.w	r1, [r2], #4
 800e762:	4299      	cmp	r1, r3
 800e764:	d008      	beq.n	800e778 <udp_bind+0x24>
 800e766:	b141      	cbz	r1, 800e77a <udp_bind+0x26>
 800e768:	3001      	adds	r0, #1
 800e76a:	2808      	cmp	r0, #8
 800e76c:	d1f7      	bne.n	800e75e <udp_bind+0xa>
 800e76e:	4805      	ldr	r0, [pc, #20]	; (800e784 <udp_bind+0x30>)
 800e770:	f003 fbaa 	bl	8011ec8 <console_error>
 800e774:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e778:	bd10      	pop	{r4, pc}
 800e77a:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800e77e:	e7fb      	b.n	800e778 <udp_bind+0x24>
 800e780:	20003090 	mulcs	r0, r0, r0
 800e784:	080164ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp, lr}

0800e788 <udp_unbind>:
 800e788:	4a0c      	ldr	r2, [pc, #48]	; (800e7bc <udp_unbind+0x34>)
 800e78a:	2300      	movs	r3, #0
 800e78c:	4611      	mov	r1, r2
 800e78e:	b510      	push	{r4, lr}
 800e790:	f852 4b04 	ldr.w	r4, [r2], #4
 800e794:	4284      	cmp	r4, r0
 800e796:	d108      	bne.n	800e7aa <udp_unbind+0x22>
 800e798:	2000      	movs	r0, #0
 800e79a:	f640 3294 	movw	r2, #2964	; 0xb94
 800e79e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800e7a2:	4353      	muls	r3, r2
 800e7a4:	4a06      	ldr	r2, [pc, #24]	; (800e7c0 <udp_unbind+0x38>)
 800e7a6:	50d0      	str	r0, [r2, r3]
 800e7a8:	bd10      	pop	{r4, pc}
 800e7aa:	3301      	adds	r3, #1
 800e7ac:	2b08      	cmp	r3, #8
 800e7ae:	d1ef      	bne.n	800e790 <udp_unbind+0x8>
 800e7b0:	4804      	ldr	r0, [pc, #16]	; (800e7c4 <udp_unbind+0x3c>)
 800e7b2:	f003 fb89 	bl	8011ec8 <console_error>
 800e7b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e7ba:	e7f5      	b.n	800e7a8 <udp_unbind+0x20>
 800e7bc:	20003090 	mulcs	r0, r0, r0
 800e7c0:	200030b0 	strhcs	r3, [r0], -r0
 800e7c4:	080164b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, sp, lr}

0800e7c8 <udp_recv>:
 800e7c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7cc:	4604      	mov	r4, r0
 800e7ce:	4698      	mov	r8, r3
 800e7d0:	f640 3394 	movw	r3, #2964	; 0xb94
 800e7d4:	435c      	muls	r4, r3
 800e7d6:	4608      	mov	r0, r1
 800e7d8:	4915      	ldr	r1, [pc, #84]	; (800e830 <udp_recv+0x68>)
 800e7da:	190f      	adds	r7, r1, r4
 800e7dc:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800e7e0:	5b0b      	ldrh	r3, [r1, r4]
 800e7e2:	4563      	cmp	r3, ip
 800e7e4:	d021      	beq.n	800e82a <udp_recv+0x62>
 800e7e6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800e7ea:	fb03 fc0c 	mul.w	ip, r3, ip
 800e7ee:	eb0c 0604 	add.w	r6, ip, r4
 800e7f2:	440e      	add	r6, r1
 800e7f4:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800e7f8:	3404      	adds	r4, #4
 800e7fa:	4295      	cmp	r5, r2
 800e7fc:	bf28      	it	cs
 800e7fe:	4615      	movcs	r5, r2
 800e800:	4464      	add	r4, ip
 800e802:	462a      	mov	r2, r5
 800e804:	4421      	add	r1, r4
 800e806:	f7ff ff67 	bl	800e6d8 <net_memcpy>
 800e80a:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800e80e:	f8c8 3000 	str.w	r3, [r8]
 800e812:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800e816:	9b06      	ldr	r3, [sp, #24]
 800e818:	801a      	strh	r2, [r3, #0]
 800e81a:	887b      	ldrh	r3, [r7, #2]
 800e81c:	3301      	adds	r3, #1
 800e81e:	f003 0301 	and.w	r3, r3, #1
 800e822:	807b      	strh	r3, [r7, #2]
 800e824:	4628      	mov	r0, r5
 800e826:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e82a:	2500      	movs	r5, #0
 800e82c:	e7fa      	b.n	800e824 <udp_recv+0x5c>
 800e82e:	bf00      	nop
 800e830:	200030b0 	strhcs	r3, [r0], -r0

0800e834 <udp_recv2>:
 800e834:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e836:	f640 3594 	movw	r5, #2964	; 0xb94
 800e83a:	4368      	muls	r0, r5
 800e83c:	4c0f      	ldr	r4, [pc, #60]	; (800e87c <udp_recv2+0x48>)
 800e83e:	1827      	adds	r7, r4, r0
 800e840:	887d      	ldrh	r5, [r7, #2]
 800e842:	5a26      	ldrh	r6, [r4, r0]
 800e844:	42ae      	cmp	r6, r5
 800e846:	d017      	beq.n	800e878 <udp_recv2+0x44>
 800e848:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800e84c:	fb0c f505 	mul.w	r5, ip, r5
 800e850:	1d06      	adds	r6, r0, #4
 800e852:	442e      	add	r6, r5
 800e854:	4405      	add	r5, r0
 800e856:	4426      	add	r6, r4
 800e858:	442c      	add	r4, r5
 800e85a:	600e      	str	r6, [r1, #0]
 800e85c:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800e860:	6011      	str	r1, [r2, #0]
 800e862:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800e866:	801a      	strh	r2, [r3, #0]
 800e868:	887b      	ldrh	r3, [r7, #2]
 800e86a:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800e86e:	3301      	adds	r3, #1
 800e870:	f003 0301 	and.w	r3, r3, #1
 800e874:	807b      	strh	r3, [r7, #2]
 800e876:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e878:	2000      	movs	r0, #0
 800e87a:	e7fc      	b.n	800e876 <udp_recv2+0x42>
 800e87c:	200030b0 	strhcs	r3, [r0], -r0

0800e880 <udp_send>:
 800e880:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e884:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800e9b8 <udp_send+0x138>
 800e888:	461c      	mov	r4, r3
 800e88a:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800e88e:	4607      	mov	r7, r0
 800e890:	4688      	mov	r8, r1
 800e892:	4616      	mov	r6, r2
 800e894:	2b00      	cmp	r3, #0
 800e896:	f000 808b 	beq.w	800e9b0 <udp_send+0x130>
 800e89a:	1c63      	adds	r3, r4, #1
 800e89c:	d141      	bne.n	800e922 <udp_send+0xa2>
 800e89e:	4a47      	ldr	r2, [pc, #284]	; (800e9bc <udp_send+0x13c>)
 800e8a0:	2307      	movs	r3, #7
 800e8a2:	4611      	mov	r1, r2
 800e8a4:	20ff      	movs	r0, #255	; 0xff
 800e8a6:	e001      	b.n	800e8ac <udp_send+0x2c>
 800e8a8:	f802 0b01 	strb.w	r0, [r2], #1
 800e8ac:	3b01      	subs	r3, #1
 800e8ae:	d1fb      	bne.n	800e8a8 <udp_send+0x28>
 800e8b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e8b4:	83cb      	strh	r3, [r1, #30]
 800e8b6:	840b      	strh	r3, [r1, #32]
 800e8b8:	2500      	movs	r5, #0
 800e8ba:	f8df a104 	ldr.w	sl, [pc, #260]	; 800e9c0 <udp_send+0x140>
 800e8be:	4c3f      	ldr	r4, [pc, #252]	; (800e9bc <udp_send+0x13c>)
 800e8c0:	f8ba 3000 	ldrh.w	r3, [sl]
 800e8c4:	2114      	movs	r1, #20
 800e8c6:	8263      	strh	r3, [r4, #18]
 800e8c8:	f106 031c 	add.w	r3, r6, #28
 800e8cc:	ba5b      	rev16	r3, r3
 800e8ce:	f104 000e 	add.w	r0, r4, #14
 800e8d2:	8223      	strh	r3, [r4, #16]
 800e8d4:	8325      	strh	r5, [r4, #24]
 800e8d6:	f001 fc12 	bl	80100fe <net_chksum>
 800e8da:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800e8de:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800e8e2:	ba5b      	rev16	r3, r3
 800e8e4:	8463      	strh	r3, [r4, #34]	; 0x22
 800e8e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800e8ea:	4632      	mov	r2, r6
 800e8ec:	ba5b      	rev16	r3, r3
 800e8ee:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e8f0:	f106 0308 	add.w	r3, r6, #8
 800e8f4:	ba5b      	rev16	r3, r3
 800e8f6:	bf28      	it	cs
 800e8f8:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800e8fc:	4641      	mov	r1, r8
 800e8fe:	8320      	strh	r0, [r4, #24]
 800e900:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e904:	84e3      	strh	r3, [r4, #38]	; 0x26
 800e906:	f7ff fee7 	bl	800e6d8 <net_memcpy>
 800e90a:	4620      	mov	r0, r4
 800e90c:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800e910:	f004 feca 	bl	80136a8 <emac_eth_send>
 800e914:	f8ba 3000 	ldrh.w	r3, [sl]
 800e918:	4628      	mov	r0, r5
 800e91a:	3301      	adds	r3, #1
 800e91c:	f8aa 3000 	strh.w	r3, [sl]
 800e920:	e037      	b.n	800e992 <udp_send+0x112>
 800e922:	4b28      	ldr	r3, [pc, #160]	; (800e9c4 <udp_send+0x144>)
 800e924:	681b      	ldr	r3, [r3, #0]
 800e926:	43a3      	bics	r3, r4
 800e928:	d10f      	bne.n	800e94a <udp_send+0xca>
 800e92a:	2307      	movs	r3, #7
 800e92c:	21ff      	movs	r1, #255	; 0xff
 800e92e:	4a23      	ldr	r2, [pc, #140]	; (800e9bc <udp_send+0x13c>)
 800e930:	e001      	b.n	800e936 <udp_send+0xb6>
 800e932:	f802 1b01 	strb.w	r1, [r2], #1
 800e936:	3b01      	subs	r3, #1
 800e938:	d1fb      	bne.n	800e932 <udp_send+0xb2>
 800e93a:	2204      	movs	r2, #4
 800e93c:	4822      	ldr	r0, [pc, #136]	; (800e9c8 <udp_send+0x148>)
 800e93e:	eb0d 0102 	add.w	r1, sp, r2
 800e942:	9401      	str	r4, [sp, #4]
 800e944:	f7ff febe 	bl	800e6c4 <memcpy.isra.0>
 800e948:	e7b6      	b.n	800e8b8 <udp_send+0x38>
 800e94a:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800e94e:	2be0      	cmp	r3, #224	; 0xe0
 800e950:	d10e      	bne.n	800e970 <udp_send+0xf0>
 800e952:	491e      	ldr	r1, [pc, #120]	; (800e9cc <udp_send+0x14c>)
 800e954:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800e958:	70cb      	strb	r3, [r1, #3]
 800e95a:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e95e:	710b      	strb	r3, [r1, #4]
 800e960:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800e964:	2206      	movs	r2, #6
 800e966:	4815      	ldr	r0, [pc, #84]	; (800e9bc <udp_send+0x13c>)
 800e968:	714b      	strb	r3, [r1, #5]
 800e96a:	f7ff feab 	bl	800e6c4 <memcpy.isra.0>
 800e96e:	e7e4      	b.n	800e93a <udp_send+0xba>
 800e970:	4b17      	ldr	r3, [pc, #92]	; (800e9d0 <udp_send+0x150>)
 800e972:	681b      	ldr	r3, [r3, #0]
 800e974:	43a3      	bics	r3, r4
 800e976:	d00f      	beq.n	800e998 <udp_send+0x118>
 800e978:	4d16      	ldr	r5, [pc, #88]	; (800e9d4 <udp_send+0x154>)
 800e97a:	4910      	ldr	r1, [pc, #64]	; (800e9bc <udp_send+0x13c>)
 800e97c:	6828      	ldr	r0, [r5, #0]
 800e97e:	f001 f889 	bl	800fa94 <arp_cache_lookup>
 800e982:	682b      	ldr	r3, [r5, #0]
 800e984:	4298      	cmp	r0, r3
 800e986:	d0d8      	beq.n	800e93a <udp_send+0xba>
 800e988:	4813      	ldr	r0, [pc, #76]	; (800e9d8 <udp_send+0x158>)
 800e98a:	f003 fa9d 	bl	8011ec8 <console_error>
 800e98e:	f06f 0002 	mvn.w	r0, #2
 800e992:	b002      	add	sp, #8
 800e994:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e998:	4620      	mov	r0, r4
 800e99a:	4908      	ldr	r1, [pc, #32]	; (800e9bc <udp_send+0x13c>)
 800e99c:	f001 f87a 	bl	800fa94 <arp_cache_lookup>
 800e9a0:	42a0      	cmp	r0, r4
 800e9a2:	d0ca      	beq.n	800e93a <udp_send+0xba>
 800e9a4:	480d      	ldr	r0, [pc, #52]	; (800e9dc <udp_send+0x15c>)
 800e9a6:	f003 fa8f 	bl	8011ec8 <console_error>
 800e9aa:	f06f 0001 	mvn.w	r0, #1
 800e9ae:	e7f0      	b.n	800e992 <udp_send+0x112>
 800e9b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e9b4:	e7ed      	b.n	800e992 <udp_send+0x112>
 800e9b6:	bf00      	nop
 800e9b8:	20003090 	mulcs	r0, r0, r0
 800e9bc:	20008d50 	andcs	r8, r0, r0, asr sp
 800e9c0:	2000308c 	andcs	r3, r0, ip, lsl #1
 800e9c4:	20003080 	andcs	r3, r0, r0, lsl #1
 800e9c8:	20008d6e 	andcs	r8, r0, lr, ror #26
 800e9cc:	20000000 	andcs	r0, r0, r0
 800e9d0:	20003088 	andcs	r3, r0, r8, lsl #1
 800e9d4:	20003084 	andcs	r3, r0, r4, lsl #1
 800e9d8:	080164b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp, lr}
 800e9dc:	080164df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, sp, lr}

0800e9e0 <strlen>:
 800e9e0:	4603      	mov	r3, r0
 800e9e2:	461a      	mov	r2, r3
 800e9e4:	7811      	ldrb	r1, [r2, #0]
 800e9e6:	3301      	adds	r3, #1
 800e9e8:	2900      	cmp	r1, #0
 800e9ea:	d1fa      	bne.n	800e9e2 <strlen+0x2>
 800e9ec:	1a10      	subs	r0, r2, r0
 800e9ee:	4770      	bx	lr

0800e9f0 <strcmp>:
 800e9f0:	1e43      	subs	r3, r0, #1
 800e9f2:	3901      	subs	r1, #1
 800e9f4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e9f8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e9fc:	4290      	cmp	r0, r2
 800e9fe:	d001      	beq.n	800ea04 <strcmp+0x14>
 800ea00:	1a80      	subs	r0, r0, r2
 800ea02:	e001      	b.n	800ea08 <strcmp+0x18>
 800ea04:	2800      	cmp	r0, #0
 800ea06:	d1f5      	bne.n	800e9f4 <strcmp+0x4>
 800ea08:	4770      	bx	lr

0800ea0a <strcpy.isra.0>:
 800ea0a:	3801      	subs	r0, #1
 800ea0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ea10:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d1f9      	bne.n	800ea0c <strcpy.isra.0+0x2>
 800ea18:	4770      	bx	lr

0800ea1a <strcat.isra.0>:
 800ea1a:	b538      	push	{r3, r4, r5, lr}
 800ea1c:	4604      	mov	r4, r0
 800ea1e:	460d      	mov	r5, r1
 800ea20:	f7ff ffde 	bl	800e9e0 <strlen>
 800ea24:	4629      	mov	r1, r5
 800ea26:	4420      	add	r0, r4
 800ea28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea2c:	f7ff bfed 	b.w	800ea0a <strcpy.isra.0>

0800ea30 <MDNS::MDNS()>:
 800ea30:	b513      	push	{r0, r1, r4, lr}
 800ea32:	4604      	mov	r4, r0
 800ea34:	a901      	add	r1, sp, #4
 800ea36:	4804      	ldr	r0, [pc, #16]	; (800ea48 <MDNS::MDNS()+0x18>)
 800ea38:	f003 fbbc 	bl	80121b4 <inet_aton>
 800ea3c:	4620      	mov	r0, r4
 800ea3e:	4b03      	ldr	r3, [pc, #12]	; (800ea4c <MDNS::MDNS()+0x1c>)
 800ea40:	9a01      	ldr	r2, [sp, #4]
 800ea42:	601a      	str	r2, [r3, #0]
 800ea44:	b002      	add	sp, #8
 800ea46:	bd10      	pop	{r4, pc}
 800ea48:	08016510 	stmdaeq	r1, {r4, r8, sl, sp, lr}
 800ea4c:	20009344 	andcs	r9, r0, r4, asr #6

0800ea50 <MDNS::SetName(char const*)>:
 800ea50:	b538      	push	{r3, r4, r5, lr}
 800ea52:	4d0b      	ldr	r5, [pc, #44]	; (800ea80 <MDNS::SetName(char const*)+0x30>)
 800ea54:	460c      	mov	r4, r1
 800ea56:	6828      	ldr	r0, [r5, #0]
 800ea58:	b108      	cbz	r0, 800ea5e <MDNS::SetName(char const*)+0xe>
 800ea5a:	f003 fba5 	bl	80121a8 <operator delete[](void*)>
 800ea5e:	4620      	mov	r0, r4
 800ea60:	f7ff ffbe 	bl	800e9e0 <strlen>
 800ea64:	3007      	adds	r0, #7
 800ea66:	f003 fba3 	bl	80121b0 <operator new[](unsigned int)>
 800ea6a:	4621      	mov	r1, r4
 800ea6c:	6028      	str	r0, [r5, #0]
 800ea6e:	f7ff ffcc 	bl	800ea0a <strcpy.isra.0>
 800ea72:	6828      	ldr	r0, [r5, #0]
 800ea74:	4903      	ldr	r1, [pc, #12]	; (800ea84 <MDNS::SetName(char const*)+0x34>)
 800ea76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea7a:	f7ff bfce 	b.w	800ea1a <strcat.isra.0>
 800ea7e:	bf00      	nop
 800ea80:	20009774 	andcs	r9, r0, r4, ror r7
 800ea84:	08016520 	stmdaeq	r1, {r5, r8, sl, sp, lr}

0800ea88 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800ea88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea8c:	f04f 0e00 	mov.w	lr, #0
 800ea90:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800ea94:	4675      	mov	r5, lr
 800ea96:	4e1b      	ldr	r6, [pc, #108]	; (800eb04 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800ea98:	4f1b      	ldr	r7, [pc, #108]	; (800eb08 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800ea9a:	780b      	ldrb	r3, [r1, #0]
 800ea9c:	1c68      	adds	r0, r5, #1
 800ea9e:	b913      	cbnz	r3, 800eaa6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800eaa0:	7013      	strb	r3, [r2, #0]
 800eaa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eaa6:	2b3f      	cmp	r3, #63	; 0x3f
 800eaa8:	d91c      	bls.n	800eae4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800eaaa:	7849      	ldrb	r1, [r1, #1]
 800eaac:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800eab0:	430b      	orrs	r3, r1
 800eab2:	6839      	ldr	r1, [r7, #0]
 800eab4:	f1be 0f00 	cmp.w	lr, #0
 800eab8:	bf08      	it	eq
 800eaba:	4605      	moveq	r5, r0
 800eabc:	5ccc      	ldrb	r4, [r1, r3]
 800eabe:	3301      	adds	r3, #1
 800eac0:	4419      	add	r1, r3
 800eac2:	2300      	movs	r3, #0
 800eac4:	42a3      	cmp	r3, r4
 800eac6:	5cc8      	ldrb	r0, [r1, r3]
 800eac8:	d309      	bcc.n	800eade <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800eaca:	f04f 0e01 	mov.w	lr, #1
 800eace:	4421      	add	r1, r4
 800ead0:	4414      	add	r4, r2
 800ead2:	780b      	ldrb	r3, [r1, #0]
 800ead4:	b10b      	cbz	r3, 800eada <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800ead6:	f804 cb01 	strb.w	ip, [r4], #1
 800eada:	4622      	mov	r2, r4
 800eadc:	e7dd      	b.n	800ea9a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800eade:	54d0      	strb	r0, [r2, r3]
 800eae0:	3301      	adds	r3, #1
 800eae2:	e7ef      	b.n	800eac4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800eae4:	4688      	mov	r8, r1
 800eae6:	18d4      	adds	r4, r2, r3
 800eae8:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800eaec:	f802 9b01 	strb.w	r9, [r2], #1
 800eaf0:	4294      	cmp	r4, r2
 800eaf2:	d1f9      	bne.n	800eae8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800eaf4:	1c5a      	adds	r2, r3, #1
 800eaf6:	4411      	add	r1, r2
 800eaf8:	f1be 0f00 	cmp.w	lr, #0
 800eafc:	d1e9      	bne.n	800ead2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800eafe:	181d      	adds	r5, r3, r0
 800eb00:	e7e7      	b.n	800ead2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800eb02:	bf00      	nop
 800eb04:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800eb08:	20009778 	andcs	r9, r0, r8, ror r7

0800eb0c <MDNS::FindFirstDotFromRight(char const*) const>:
 800eb0c:	b510      	push	{r4, lr}
 800eb0e:	4608      	mov	r0, r1
 800eb10:	460c      	mov	r4, r1
 800eb12:	f7ff ff65 	bl	800e9e0 <strlen>
 800eb16:	4420      	add	r0, r4
 800eb18:	42a0      	cmp	r0, r4
 800eb1a:	d903      	bls.n	800eb24 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800eb1c:	f810 3901 	ldrb.w	r3, [r0], #-1
 800eb20:	2b2e      	cmp	r3, #46	; 0x2e
 800eb22:	d1f9      	bne.n	800eb18 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800eb24:	3001      	adds	r0, #1
 800eb26:	bd10      	pop	{r4, pc}

0800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800eb28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb2a:	4614      	mov	r4, r2
 800eb2c:	460f      	mov	r7, r1
 800eb2e:	1c60      	adds	r0, r4, #1
 800eb30:	463d      	mov	r5, r7
 800eb32:	f817 6b01 	ldrb.w	r6, [r7], #1
 800eb36:	b946      	cbnz	r6, 800eb4a <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800eb38:	1a69      	subs	r1, r5, r1
 800eb3a:	7021      	strb	r1, [r4, #0]
 800eb3c:	7829      	ldrb	r1, [r5, #0]
 800eb3e:	b949      	cbnz	r1, 800eb54 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800eb40:	b10b      	cbz	r3, 800eb46 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800eb42:	f800 1b01 	strb.w	r1, [r0], #1
 800eb46:	1a80      	subs	r0, r0, r2
 800eb48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb4a:	2e2e      	cmp	r6, #46	; 0x2e
 800eb4c:	d0f4      	beq.n	800eb38 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800eb4e:	f800 6b01 	strb.w	r6, [r0], #1
 800eb52:	e7ed      	b.n	800eb30 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800eb54:	4604      	mov	r4, r0
 800eb56:	1c69      	adds	r1, r5, #1
 800eb58:	e7e8      	b.n	800eb2c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800eb5c <MDNS::CreateAnswerLocalIpAddress()>:
 800eb5c:	2384      	movs	r3, #132	; 0x84
 800eb5e:	b510      	push	{r4, lr}
 800eb60:	4c0f      	ldr	r4, [pc, #60]	; (800eba0 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800eb62:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800eb66:	80e3      	strh	r3, [r4, #6]
 800eb68:	2300      	movs	r3, #0
 800eb6a:	490e      	ldr	r1, [pc, #56]	; (800eba4 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800eb6c:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800eb70:	6809      	ldr	r1, [r1, #0]
 800eb72:	f104 0210 	add.w	r2, r4, #16
 800eb76:	2301      	movs	r3, #1
 800eb78:	f7ff ffd6 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800eb7c:	490a      	ldr	r1, [pc, #40]	; (800eba8 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800eb7e:	1813      	adds	r3, r2, r0
 800eb80:	5011      	str	r1, [r2, r0]
 800eb82:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800eb86:	605a      	str	r2, [r3, #4]
 800eb88:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800eb8c:	811a      	strh	r2, [r3, #8]
 800eb8e:	4a07      	ldr	r2, [pc, #28]	; (800ebac <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800eb90:	6812      	ldr	r2, [r2, #0]
 800eb92:	6952      	ldr	r2, [r2, #20]
 800eb94:	f8c3 200a 	str.w	r2, [r3, #10]
 800eb98:	1b1b      	subs	r3, r3, r4
 800eb9a:	330a      	adds	r3, #10
 800eb9c:	6023      	str	r3, [r4, #0]
 800eb9e:	bd10      	pop	{r4, pc}
 800eba0:	20009348 	andcs	r9, r0, r8, asr #6
 800eba4:	20009774 	andcs	r9, r0, r4, ror r7
 800eba8:	01800100 	orreq	r0, r0, r0, lsl #2
 800ebac:	2000977c 	andcs	r9, r0, ip, ror r7

0800ebb0 <MDNS::Start()>:
 800ebb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ebb2:	4c1d      	ldr	r4, [pc, #116]	; (800ec28 <MDNS::Start()+0x78>)
 800ebb4:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800ebb8:	4605      	mov	r5, r0
 800ebba:	6820      	ldr	r0, [r4, #0]
 800ebbc:	f000 fb25 	bl	800f20a <Network::Begin(unsigned short)>
 800ebc0:	4e1a      	ldr	r6, [pc, #104]	; (800ec2c <MDNS::Start()+0x7c>)
 800ebc2:	4f1b      	ldr	r7, [pc, #108]	; (800ec30 <MDNS::Start()+0x80>)
 800ebc4:	4601      	mov	r1, r0
 800ebc6:	6030      	str	r0, [r6, #0]
 800ebc8:	683a      	ldr	r2, [r7, #0]
 800ebca:	6820      	ldr	r0, [r4, #0]
 800ebcc:	f000 fb2e 	bl	800f22c <Network::JoinGroup(int, unsigned int)>
 800ebd0:	4b18      	ldr	r3, [pc, #96]	; (800ec34 <MDNS::Start()+0x84>)
 800ebd2:	681b      	ldr	r3, [r3, #0]
 800ebd4:	b923      	cbnz	r3, 800ebe0 <MDNS::Start()+0x30>
 800ebd6:	6821      	ldr	r1, [r4, #0]
 800ebd8:	4628      	mov	r0, r5
 800ebda:	3120      	adds	r1, #32
 800ebdc:	f7ff ff38 	bl	800ea50 <MDNS::SetName(char const*)>
 800ebe0:	4628      	mov	r0, r5
 800ebe2:	f7ff ffbb 	bl	800eb5c <MDNS::CreateAnswerLocalIpAddress()>
 800ebe6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ebea:	4913      	ldr	r1, [pc, #76]	; (800ec38 <MDNS::Start()+0x88>)
 800ebec:	7830      	ldrb	r0, [r6, #0]
 800ebee:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ebf2:	9300      	str	r3, [sp, #0]
 800ebf4:	683b      	ldr	r3, [r7, #0]
 800ebf6:	f7ff fe43 	bl	800e880 <udp_send>
 800ebfa:	233f      	movs	r3, #63	; 0x3f
 800ebfc:	6820      	ldr	r0, [r4, #0]
 800ebfe:	4c0f      	ldr	r4, [pc, #60]	; (800ec3c <MDNS::Start()+0x8c>)
 800ec00:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800ec04:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ec08:	b929      	cbnz	r1, 800ec16 <MDNS::Start()+0x66>
 800ec0a:	4413      	add	r3, r2
 800ec0c:	429a      	cmp	r2, r3
 800ec0e:	d006      	beq.n	800ec1e <MDNS::Start()+0x6e>
 800ec10:	f802 1b01 	strb.w	r1, [r2], #1
 800ec14:	e7fa      	b.n	800ec0c <MDNS::Start()+0x5c>
 800ec16:	3b01      	subs	r3, #1
 800ec18:	f802 1b01 	strb.w	r1, [r2], #1
 800ec1c:	d1f2      	bne.n	800ec04 <MDNS::Start()+0x54>
 800ec1e:	2300      	movs	r3, #0
 800ec20:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800ec24:	b003      	add	sp, #12
 800ec26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec28:	2000977c 	andcs	r9, r0, ip, ror r7
 800ec2c:	20000008 	andcs	r0, r0, r8
 800ec30:	20009344 	andcs	r9, r0, r4, asr #6
 800ec34:	20009774 	andcs	r9, r0, r4, ror r7
 800ec38:	20009348 	andcs	r9, r0, r8, asr #6
 800ec3c:	08016520 	stmdaeq	r1, {r5, r8, sl, sp, lr}

0800ec40 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800ec40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec44:	4c1b      	ldr	r4, [pc, #108]	; (800ecb4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800ec46:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ec4a:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ec4e:	2300      	movs	r3, #0
 800ec50:	f854 100c 	ldr.w	r1, [r4, ip]
 800ec54:	4607      	mov	r7, r0
 800ec56:	f7ff ff67 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ec5a:	2301      	movs	r3, #1
 800ec5c:	7bac      	ldrb	r4, [r5, #14]
 800ec5e:	4616      	mov	r6, r2
 800ec60:	4915      	ldr	r1, [pc, #84]	; (800ecb8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ec62:	4402      	add	r2, r0
 800ec64:	4815      	ldr	r0, [pc, #84]	; (800ecbc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800ec66:	429c      	cmp	r4, r3
 800ec68:	bf18      	it	ne
 800ec6a:	4601      	movne	r1, r0
 800ec6c:	4638      	mov	r0, r7
 800ec6e:	f7ff ff5b 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ec72:	4b13      	ldr	r3, [pc, #76]	; (800ecc0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800ec74:	1814      	adds	r4, r2, r0
 800ec76:	5013      	str	r3, [r2, r0]
 800ec78:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ec7c:	6063      	str	r3, [r4, #4]
 800ec7e:	4b11      	ldr	r3, [pc, #68]	; (800ecc4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800ec80:	f8d3 8000 	ldr.w	r8, [r3]
 800ec84:	4640      	mov	r0, r8
 800ec86:	f7ff feab 	bl	800e9e0 <strlen>
 800ec8a:	f100 0308 	add.w	r3, r0, #8
 800ec8e:	ba5b      	rev16	r3, r3
 800ec90:	8123      	strh	r3, [r4, #8]
 800ec92:	2300      	movs	r3, #0
 800ec94:	f8c4 300a 	str.w	r3, [r4, #10]
 800ec98:	89ab      	ldrh	r3, [r5, #12]
 800ec9a:	f104 0210 	add.w	r2, r4, #16
 800ec9e:	ba5b      	rev16	r3, r3
 800eca0:	81e3      	strh	r3, [r4, #14]
 800eca2:	4641      	mov	r1, r8
 800eca4:	2301      	movs	r3, #1
 800eca6:	4638      	mov	r0, r7
 800eca8:	f7ff ff3e 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecac:	4410      	add	r0, r2
 800ecae:	1b80      	subs	r0, r0, r6
 800ecb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecb4:	2000954c 	andcs	r9, r0, ip, asr #10
 800ecb8:	0801651c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, lr}
 800ecbc:	08016539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, lr}
 800ecc0:	01802100 	orreq	r2, r0, r0, lsl #2
 800ecc4:	20009774 	andcs	r9, r0, r4, ror r7

0800ecc8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800ecc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eccc:	4e19      	ldr	r6, [pc, #100]	; (800ed34 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800ecce:	010f      	lsls	r7, r1, #4
 800ecd0:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800ecd4:	2300      	movs	r3, #0
 800ecd6:	59f1      	ldr	r1, [r6, r7]
 800ecd8:	4604      	mov	r4, r0
 800ecda:	f7ff ff25 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecde:	2301      	movs	r3, #1
 800ece0:	7bae      	ldrb	r6, [r5, #14]
 800ece2:	4690      	mov	r8, r2
 800ece4:	4914      	ldr	r1, [pc, #80]	; (800ed38 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800ece6:	4402      	add	r2, r0
 800ece8:	4814      	ldr	r0, [pc, #80]	; (800ed3c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800ecea:	429e      	cmp	r6, r3
 800ecec:	bf18      	it	ne
 800ecee:	4601      	movne	r1, r0
 800ecf0:	4620      	mov	r0, r4
 800ecf2:	f7ff ff19 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecf6:	4b12      	ldr	r3, [pc, #72]	; (800ed40 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800ecf8:	1816      	adds	r6, r2, r0
 800ecfa:	5013      	str	r3, [r2, r0]
 800ecfc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ed00:	68a8      	ldr	r0, [r5, #8]
 800ed02:	6073      	str	r3, [r6, #4]
 800ed04:	f106 040b 	add.w	r4, r6, #11
 800ed08:	b938      	cbnz	r0, 800ed1a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800ed0a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ed0e:	72b0      	strb	r0, [r6, #10]
 800ed10:	8133      	strh	r3, [r6, #8]
 800ed12:	eba4 0008 	sub.w	r0, r4, r8
 800ed16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed1a:	f7ff fe61 	bl	800e9e0 <strlen>
 800ed1e:	4607      	mov	r7, r0
 800ed20:	1c43      	adds	r3, r0, #1
 800ed22:	72b0      	strb	r0, [r6, #10]
 800ed24:	ba5b      	rev16	r3, r3
 800ed26:	4620      	mov	r0, r4
 800ed28:	68a9      	ldr	r1, [r5, #8]
 800ed2a:	8133      	strh	r3, [r6, #8]
 800ed2c:	f7ff fe6d 	bl	800ea0a <strcpy.isra.0>
 800ed30:	443c      	add	r4, r7
 800ed32:	e7ee      	b.n	800ed12 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800ed34:	2000954c 	andcs	r9, r0, ip, asr #10
 800ed38:	0801651c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, lr}
 800ed3c:	08016539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, lr}
 800ed40:	01801000 	orreq	r1, r0, r0

0800ed44 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800ed44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed48:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800edac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800ed4c:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800ed50:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800ed54:	6869      	ldr	r1, [r5, #4]
 800ed56:	2301      	movs	r3, #1
 800ed58:	4607      	mov	r7, r0
 800ed5a:	f7ff fee5 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed5e:	4b14      	ldr	r3, [pc, #80]	; (800edb0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800ed60:	f858 8009 	ldr.w	r8, [r8, r9]
 800ed64:	5013      	str	r3, [r2, r0]
 800ed66:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ed6a:	1816      	adds	r6, r2, r0
 800ed6c:	6073      	str	r3, [r6, #4]
 800ed6e:	4640      	mov	r0, r8
 800ed70:	4614      	mov	r4, r2
 800ed72:	f7ff fe35 	bl	800e9e0 <strlen>
 800ed76:	f100 030d 	add.w	r3, r0, #13
 800ed7a:	ba5b      	rev16	r3, r3
 800ed7c:	4641      	mov	r1, r8
 800ed7e:	8133      	strh	r3, [r6, #8]
 800ed80:	f106 020a 	add.w	r2, r6, #10
 800ed84:	2300      	movs	r3, #0
 800ed86:	4638      	mov	r0, r7
 800ed88:	f7ff fece 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed8c:	2301      	movs	r3, #1
 800ed8e:	4402      	add	r2, r0
 800ed90:	7bad      	ldrb	r5, [r5, #14]
 800ed92:	4808      	ldr	r0, [pc, #32]	; (800edb4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800ed94:	4908      	ldr	r1, [pc, #32]	; (800edb8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800ed96:	429d      	cmp	r5, r3
 800ed98:	bf18      	it	ne
 800ed9a:	4601      	movne	r1, r0
 800ed9c:	4638      	mov	r0, r7
 800ed9e:	f7ff fec3 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800eda2:	4410      	add	r0, r2
 800eda4:	1b00      	subs	r0, r0, r4
 800eda6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edaa:	bf00      	nop
 800edac:	2000954c 	andcs	r9, r0, ip, asr #10
 800edb0:	01000c00 	tsteq	r0, r0, lsl #24
 800edb4:	08016539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, lr}
 800edb8:	0801651c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, lr}

0800edbc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800edbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edbe:	460f      	mov	r7, r1
 800edc0:	2301      	movs	r3, #1
 800edc2:	490f      	ldr	r1, [pc, #60]	; (800ee00 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800edc4:	4606      	mov	r6, r0
 800edc6:	f7ff feaf 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edca:	4b0e      	ldr	r3, [pc, #56]	; (800ee04 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800edcc:	490e      	ldr	r1, [pc, #56]	; (800ee08 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800edce:	5013      	str	r3, [r2, r0]
 800edd0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800edd4:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800edd8:	684f      	ldr	r7, [r1, #4]
 800edda:	1815      	adds	r5, r2, r0
 800eddc:	606b      	str	r3, [r5, #4]
 800edde:	4638      	mov	r0, r7
 800ede0:	4614      	mov	r4, r2
 800ede2:	f7ff fdfd 	bl	800e9e0 <strlen>
 800ede6:	1c83      	adds	r3, r0, #2
 800ede8:	ba5b      	rev16	r3, r3
 800edea:	812b      	strh	r3, [r5, #8]
 800edec:	f105 020a 	add.w	r2, r5, #10
 800edf0:	2301      	movs	r3, #1
 800edf2:	4639      	mov	r1, r7
 800edf4:	4630      	mov	r0, r6
 800edf6:	f7ff fe97 	bl	800eb28 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edfa:	4410      	add	r0, r2
 800edfc:	1b00      	subs	r0, r0, r4
 800edfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee00:	08016527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, sp, lr}
 800ee04:	01000c00 	tsteq	r0, r0, lsl #24
 800ee08:	2000954c 	andcs	r9, r0, ip, asr #10

0800ee0c <MDNS::CreateMDNSMessage(unsigned int)>:
 800ee0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee0e:	2384      	movs	r3, #132	; 0x84
 800ee10:	4d19      	ldr	r5, [pc, #100]	; (800ee78 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800ee12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800ee16:	80eb      	strh	r3, [r5, #6]
 800ee18:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ee1c:	f105 0410 	add.w	r4, r5, #16
 800ee20:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800ee24:	4622      	mov	r2, r4
 800ee26:	4606      	mov	r6, r0
 800ee28:	460f      	mov	r7, r1
 800ee2a:	f7ff ff09 	bl	800ec40 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ee2e:	4404      	add	r4, r0
 800ee30:	4622      	mov	r2, r4
 800ee32:	4639      	mov	r1, r7
 800ee34:	4630      	mov	r0, r6
 800ee36:	f7ff ff47 	bl	800ecc8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ee3a:	4404      	add	r4, r0
 800ee3c:	4622      	mov	r2, r4
 800ee3e:	4639      	mov	r1, r7
 800ee40:	4630      	mov	r0, r6
 800ee42:	f7ff ffbb 	bl	800edbc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ee46:	4404      	add	r4, r0
 800ee48:	4622      	mov	r2, r4
 800ee4a:	4639      	mov	r1, r7
 800ee4c:	4630      	mov	r0, r6
 800ee4e:	f7ff ff79 	bl	800ed44 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800ee52:	4a0a      	ldr	r2, [pc, #40]	; (800ee7c <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800ee54:	4404      	add	r4, r0
 800ee56:	f852 3b10 	ldr.w	r3, [r2], #16
 800ee5a:	1e60      	subs	r0, r4, #1
 800ee5c:	3b0c      	subs	r3, #12
 800ee5e:	4619      	mov	r1, r3
 800ee60:	3901      	subs	r1, #1
 800ee62:	d204      	bcs.n	800ee6e <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800ee64:	441c      	add	r4, r3
 800ee66:	4b06      	ldr	r3, [pc, #24]	; (800ee80 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800ee68:	1ae4      	subs	r4, r4, r3
 800ee6a:	602c      	str	r4, [r5, #0]
 800ee6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee6e:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ee72:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ee76:	e7f3      	b.n	800ee60 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800ee78:	20009570 	andcs	r9, r0, r0, ror r5
 800ee7c:	20009348 	andcs	r9, r0, r8, asr #6
 800ee80:	20009574 	andcs	r9, r0, r4, ror r5

0800ee84 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800ee84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee88:	4d40      	ldr	r5, [pc, #256]	; (800ef8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ee8a:	b085      	sub	sp, #20
 800ee8c:	682c      	ldr	r4, [r5, #0]
 800ee8e:	4680      	mov	r8, r0
 800ee90:	460f      	mov	r7, r1
 800ee92:	4616      	mov	r6, r2
 800ee94:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800ee98:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800ee9c:	b11c      	cbz	r4, 800eea6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800ee9e:	692a      	ldr	r2, [r5, #16]
 800eea0:	2a00      	cmp	r2, #0
 800eea2:	d16e      	bne.n	800ef82 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800eea4:	2401      	movs	r4, #1
 800eea6:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800eeaa:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800eeae:	8193      	strh	r3, [r2, #12]
 800eeb0:	f882 b00e 	strb.w	fp, [r2, #14]
 800eeb4:	2f00      	cmp	r7, #0
 800eeb6:	d154      	bne.n	800ef62 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800eeb8:	4b35      	ldr	r3, [pc, #212]	; (800ef90 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800eeba:	6818      	ldr	r0, [r3, #0]
 800eebc:	3020      	adds	r0, #32
 800eebe:	f7ff fd8f 	bl	800e9e0 <strlen>
 800eec2:	4607      	mov	r7, r0
 800eec4:	4630      	mov	r0, r6
 800eec6:	f7ff fd8b 	bl	800e9e0 <strlen>
 800eeca:	4438      	add	r0, r7
 800eecc:	3001      	adds	r0, #1
 800eece:	f003 f96f 	bl	80121b0 <operator new[](unsigned int)>
 800eed2:	4b2f      	ldr	r3, [pc, #188]	; (800ef90 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800eed4:	f845 0009 	str.w	r0, [r5, r9]
 800eed8:	6819      	ldr	r1, [r3, #0]
 800eeda:	3120      	adds	r1, #32
 800eedc:	f7ff fd95 	bl	800ea0a <strcpy.isra.0>
 800eee0:	f855 0009 	ldr.w	r0, [r5, r9]
 800eee4:	4631      	mov	r1, r6
 800eee6:	f7ff fd98 	bl	800ea1a <strcat.isra.0>
 800eeea:	4631      	mov	r1, r6
 800eeec:	4640      	mov	r0, r8
 800eeee:	f7ff fe0d 	bl	800eb0c <MDNS::FindFirstDotFromRight(char const*) const>
 800eef2:	eb05 0709 	add.w	r7, r5, r9
 800eef6:	4605      	mov	r5, r0
 800eef8:	f7ff fd72 	bl	800e9e0 <strlen>
 800eefc:	300d      	adds	r0, #13
 800eefe:	f003 f957 	bl	80121b0 <operator new[](unsigned int)>
 800ef02:	4629      	mov	r1, r5
 800ef04:	6078      	str	r0, [r7, #4]
 800ef06:	f7ff fd80 	bl	800ea0a <strcpy.isra.0>
 800ef0a:	4922      	ldr	r1, [pc, #136]	; (800ef94 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ef0c:	6878      	ldr	r0, [r7, #4]
 800ef0e:	f7ff fd84 	bl	800ea1a <strcat.isra.0>
 800ef12:	4921      	ldr	r1, [pc, #132]	; (800ef98 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ef14:	4b21      	ldr	r3, [pc, #132]	; (800ef9c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800ef16:	6878      	ldr	r0, [r7, #4]
 800ef18:	f1bb 0f01 	cmp.w	fp, #1
 800ef1c:	bf18      	it	ne
 800ef1e:	4619      	movne	r1, r3
 800ef20:	f7ff fd7b 	bl	800ea1a <strcat.isra.0>
 800ef24:	f1ba 0f00 	cmp.w	sl, #0
 800ef28:	d009      	beq.n	800ef3e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800ef2a:	4650      	mov	r0, sl
 800ef2c:	f7ff fd58 	bl	800e9e0 <strlen>
 800ef30:	3001      	adds	r0, #1
 800ef32:	f003 f93d 	bl	80121b0 <operator new[](unsigned int)>
 800ef36:	4651      	mov	r1, sl
 800ef38:	60b8      	str	r0, [r7, #8]
 800ef3a:	f7ff fd66 	bl	800ea0a <strcpy.isra.0>
 800ef3e:	4621      	mov	r1, r4
 800ef40:	4640      	mov	r0, r8
 800ef42:	f7ff ff63 	bl	800ee0c <MDNS::CreateMDNSMessage(unsigned int)>
 800ef46:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ef4a:	4915      	ldr	r1, [pc, #84]	; (800efa0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800ef4c:	4815      	ldr	r0, [pc, #84]	; (800efa4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800ef4e:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ef52:	9300      	str	r3, [sp, #0]
 800ef54:	4b14      	ldr	r3, [pc, #80]	; (800efa8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800ef56:	7800      	ldrb	r0, [r0, #0]
 800ef58:	681b      	ldr	r3, [r3, #0]
 800ef5a:	f7ff fc91 	bl	800e880 <udp_send>
 800ef5e:	2001      	movs	r0, #1
 800ef60:	e010      	b.n	800ef84 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800ef62:	4638      	mov	r0, r7
 800ef64:	f7ff fd3c 	bl	800e9e0 <strlen>
 800ef68:	9003      	str	r0, [sp, #12]
 800ef6a:	4630      	mov	r0, r6
 800ef6c:	f7ff fd38 	bl	800e9e0 <strlen>
 800ef70:	9b03      	ldr	r3, [sp, #12]
 800ef72:	4418      	add	r0, r3
 800ef74:	3001      	adds	r0, #1
 800ef76:	f003 f91b 	bl	80121b0 <operator new[](unsigned int)>
 800ef7a:	4639      	mov	r1, r7
 800ef7c:	f845 0009 	str.w	r0, [r5, r9]
 800ef80:	e7ac      	b.n	800eedc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800ef82:	2000      	movs	r0, #0
 800ef84:	b005      	add	sp, #20
 800ef86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef8a:	bf00      	nop
 800ef8c:	2000954c 	andcs	r9, r0, ip, asr #10
 800ef90:	2000977c 	andcs	r9, r0, ip, ror r7
 800ef94:	0801496b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, fp, lr}
 800ef98:	0801651c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, lr}
 800ef9c:	08016539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, lr}
 800efa0:	20009570 	andcs	r9, r0, r0, ror r5
 800efa4:	20000008 	andcs	r0, r0, r8
 800efa8:	20009344 	andcs	r9, r0, r4, asr #6

0800efac <MDNS::HandleRequest(unsigned short)>:
 800efac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efb0:	4605      	mov	r5, r0
 800efb2:	2700      	movs	r7, #0
 800efb4:	f04f 080c 	mov.w	r8, #12
 800efb8:	b0c5      	sub	sp, #276	; 0x114
 800efba:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800f07c <MDNS::HandleRequest(unsigned short)+0xd0>
 800efbe:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800f080 <MDNS::HandleRequest(unsigned short)+0xd4>
 800efc2:	9103      	str	r1, [sp, #12]
 800efc4:	9b03      	ldr	r3, [sp, #12]
 800efc6:	42bb      	cmp	r3, r7
 800efc8:	d802      	bhi.n	800efd0 <MDNS::HandleRequest(unsigned short)+0x24>
 800efca:	b045      	add	sp, #276	; 0x114
 800efcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efd0:	f8da 1000 	ldr.w	r1, [sl]
 800efd4:	aa04      	add	r2, sp, #16
 800efd6:	4441      	add	r1, r8
 800efd8:	4628      	mov	r0, r5
 800efda:	f7ff fd55 	bl	800ea88 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800efde:	f8da 2000 	ldr.w	r2, [sl]
 800efe2:	4440      	add	r0, r8
 800efe4:	1813      	adds	r3, r2, r0
 800efe6:	885b      	ldrh	r3, [r3, #2]
 800efe8:	f100 0804 	add.w	r8, r0, #4
 800efec:	ba5b      	rev16	r3, r3
 800efee:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800eff2:	2b01      	cmp	r3, #1
 800eff4:	d13d      	bne.n	800f072 <MDNS::HandleRequest(unsigned short)+0xc6>
 800eff6:	5a14      	ldrh	r4, [r2, r0]
 800eff8:	4b22      	ldr	r3, [pc, #136]	; (800f084 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800effa:	ba64      	rev16	r4, r4
 800effc:	6818      	ldr	r0, [r3, #0]
 800effe:	a904      	add	r1, sp, #16
 800f000:	b2a4      	uxth	r4, r4
 800f002:	f7ff fcf5 	bl	800e9f0 <strcmp>
 800f006:	b968      	cbnz	r0, 800f024 <MDNS::HandleRequest(unsigned short)+0x78>
 800f008:	2c01      	cmp	r4, #1
 800f00a:	d10b      	bne.n	800f024 <MDNS::HandleRequest(unsigned short)+0x78>
 800f00c:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f010:	491d      	ldr	r1, [pc, #116]	; (800f088 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800f012:	481e      	ldr	r0, [pc, #120]	; (800f08c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f014:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f018:	9300      	str	r3, [sp, #0]
 800f01a:	4b1d      	ldr	r3, [pc, #116]	; (800f090 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f01c:	7800      	ldrb	r0, [r0, #0]
 800f01e:	681b      	ldr	r3, [r3, #0]
 800f020:	f7ff fc2e 	bl	800e880 <udp_send>
 800f024:	481b      	ldr	r0, [pc, #108]	; (800f094 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f026:	a904      	add	r1, sp, #16
 800f028:	f7ff fce2 	bl	800e9f0 <strcmp>
 800f02c:	f04f 0900 	mov.w	r9, #0
 800f030:	4e19      	ldr	r6, [pc, #100]	; (800f098 <MDNS::HandleRequest(unsigned short)+0xec>)
 800f032:	9002      	str	r0, [sp, #8]
 800f034:	6833      	ldr	r3, [r6, #0]
 800f036:	b1c3      	cbz	r3, 800f06a <MDNS::HandleRequest(unsigned short)+0xbe>
 800f038:	9b02      	ldr	r3, [sp, #8]
 800f03a:	b123      	cbz	r3, 800f046 <MDNS::HandleRequest(unsigned short)+0x9a>
 800f03c:	6870      	ldr	r0, [r6, #4]
 800f03e:	a904      	add	r1, sp, #16
 800f040:	f7ff fcd6 	bl	800e9f0 <strcmp>
 800f044:	b988      	cbnz	r0, 800f06a <MDNS::HandleRequest(unsigned short)+0xbe>
 800f046:	2c0c      	cmp	r4, #12
 800f048:	d10f      	bne.n	800f06a <MDNS::HandleRequest(unsigned short)+0xbe>
 800f04a:	4649      	mov	r1, r9
 800f04c:	4628      	mov	r0, r5
 800f04e:	f7ff fedd 	bl	800ee0c <MDNS::CreateMDNSMessage(unsigned int)>
 800f052:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f056:	480d      	ldr	r0, [pc, #52]	; (800f08c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f058:	9300      	str	r3, [sp, #0]
 800f05a:	4b0d      	ldr	r3, [pc, #52]	; (800f090 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f05c:	f8bb 2000 	ldrh.w	r2, [fp]
 800f060:	681b      	ldr	r3, [r3, #0]
 800f062:	490e      	ldr	r1, [pc, #56]	; (800f09c <MDNS::HandleRequest(unsigned short)+0xf0>)
 800f064:	7800      	ldrb	r0, [r0, #0]
 800f066:	f7ff fc0b 	bl	800e880 <udp_send>
 800f06a:	3610      	adds	r6, #16
 800f06c:	f1b9 0f00 	cmp.w	r9, #0
 800f070:	d001      	beq.n	800f076 <MDNS::HandleRequest(unsigned short)+0xca>
 800f072:	3701      	adds	r7, #1
 800f074:	e7a6      	b.n	800efc4 <MDNS::HandleRequest(unsigned short)+0x18>
 800f076:	f04f 0901 	mov.w	r9, #1
 800f07a:	e7db      	b.n	800f034 <MDNS::HandleRequest(unsigned short)+0x88>
 800f07c:	20009778 	andcs	r9, r0, r8, ror r7
 800f080:	20009570 	andcs	r9, r0, r0, ror r5
 800f084:	20009774 	andcs	r9, r0, r4, ror r7
 800f088:	20009348 	andcs	r9, r0, r8, asr #6
 800f08c:	20000008 	andcs	r0, r0, r8
 800f090:	20009344 	andcs	r9, r0, r4, asr #6
 800f094:	08016527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, sp, lr}
 800f098:	2000954c 	andcs	r9, r0, ip, asr #10
 800f09c:	20009574 	andcs	r9, r0, r4, ror r5

0800f0a0 <MDNS::Parse()>:
 800f0a0:	4b08      	ldr	r3, [pc, #32]	; (800f0c4 <MDNS::Parse()+0x24>)
 800f0a2:	681a      	ldr	r2, [r3, #0]
 800f0a4:	8853      	ldrh	r3, [r2, #2]
 800f0a6:	ba5b      	rev16	r3, r3
 800f0a8:	b299      	uxth	r1, r3
 800f0aa:	041b      	lsls	r3, r3, #16
 800f0ac:	d408      	bmi.n	800f0c0 <MDNS::Parse()+0x20>
 800f0ae:	0b89      	lsrs	r1, r1, #14
 800f0b0:	d106      	bne.n	800f0c0 <MDNS::Parse()+0x20>
 800f0b2:	8891      	ldrh	r1, [r2, #4]
 800f0b4:	b28b      	uxth	r3, r1
 800f0b6:	b11b      	cbz	r3, 800f0c0 <MDNS::Parse()+0x20>
 800f0b8:	ba49      	rev16	r1, r1
 800f0ba:	b289      	uxth	r1, r1
 800f0bc:	f7ff bf76 	b.w	800efac <MDNS::HandleRequest(unsigned short)>
 800f0c0:	4770      	bx	lr
 800f0c2:	bf00      	nop
 800f0c4:	20009778 	andcs	r9, r0, r8, ror r7

0800f0c8 <MDNS::Run()>:
 800f0c8:	b538      	push	{r3, r4, r5, lr}
 800f0ca:	4d0c      	ldr	r5, [pc, #48]	; (800f0fc <MDNS::Run()+0x34>)
 800f0cc:	4604      	mov	r4, r0
 800f0ce:	480c      	ldr	r0, [pc, #48]	; (800f100 <MDNS::Run()+0x38>)
 800f0d0:	462b      	mov	r3, r5
 800f0d2:	4a0c      	ldr	r2, [pc, #48]	; (800f104 <MDNS::Run()+0x3c>)
 800f0d4:	490c      	ldr	r1, [pc, #48]	; (800f108 <MDNS::Run()+0x40>)
 800f0d6:	7800      	ldrb	r0, [r0, #0]
 800f0d8:	f7ff fbac 	bl	800e834 <udp_recv2>
 800f0dc:	4b0b      	ldr	r3, [pc, #44]	; (800f10c <MDNS::Run()+0x44>)
 800f0de:	882a      	ldrh	r2, [r5, #0]
 800f0e0:	8018      	strh	r0, [r3, #0]
 800f0e2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f0e6:	429a      	cmp	r2, r3
 800f0e8:	d106      	bne.n	800f0f8 <MDNS::Run()+0x30>
 800f0ea:	280c      	cmp	r0, #12
 800f0ec:	d904      	bls.n	800f0f8 <MDNS::Run()+0x30>
 800f0ee:	4620      	mov	r0, r4
 800f0f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f0f4:	f7ff bfd4 	b.w	800f0a0 <MDNS::Parse()>
 800f0f8:	bd38      	pop	{r3, r4, r5, pc}
 800f0fa:	bf00      	nop
 800f0fc:	20009340 	andcs	r9, r0, r0, asr #6
 800f100:	20000008 	andcs	r0, r0, r8
 800f104:	2000933c 	andcs	r9, r0, ip, lsr r3
 800f108:	20009778 	andcs	r9, r0, r8, ror r7
 800f10c:	2000956c 	andcs	r9, r0, ip, ror #10

0800f110 <MDNS::Print()>:
 800f110:	b510      	push	{r4, lr}
 800f112:	4816      	ldr	r0, [pc, #88]	; (800f16c <MDNS::Print()+0x5c>)
 800f114:	f7fa f8b4 	bl	8009280 <printf>
 800f118:	4b15      	ldr	r3, [pc, #84]	; (800f170 <MDNS::Print()+0x60>)
 800f11a:	681b      	ldr	r3, [r3, #0]
 800f11c:	3301      	adds	r3, #1
 800f11e:	d104      	bne.n	800f12a <MDNS::Print()+0x1a>
 800f120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f124:	4813      	ldr	r0, [pc, #76]	; (800f174 <MDNS::Print()+0x64>)
 800f126:	f7fa b8ab 	b.w	8009280 <printf>
 800f12a:	4b13      	ldr	r3, [pc, #76]	; (800f178 <MDNS::Print()+0x68>)
 800f12c:	4c13      	ldr	r4, [pc, #76]	; (800f17c <MDNS::Print()+0x6c>)
 800f12e:	6819      	ldr	r1, [r3, #0]
 800f130:	4813      	ldr	r0, [pc, #76]	; (800f180 <MDNS::Print()+0x70>)
 800f132:	f7fa f8a5 	bl	8009280 <printf>
 800f136:	6823      	ldr	r3, [r4, #0]
 800f138:	b14b      	cbz	r3, 800f14e <MDNS::Print()+0x3e>
 800f13a:	4a12      	ldr	r2, [pc, #72]	; (800f184 <MDNS::Print()+0x74>)
 800f13c:	68a3      	ldr	r3, [r4, #8]
 800f13e:	6861      	ldr	r1, [r4, #4]
 800f140:	2b00      	cmp	r3, #0
 800f142:	bf08      	it	eq
 800f144:	4613      	moveq	r3, r2
 800f146:	4810      	ldr	r0, [pc, #64]	; (800f188 <MDNS::Print()+0x78>)
 800f148:	89a2      	ldrh	r2, [r4, #12]
 800f14a:	f7fa f899 	bl	8009280 <printf>
 800f14e:	6923      	ldr	r3, [r4, #16]
 800f150:	b15b      	cbz	r3, 800f16a <MDNS::Print()+0x5a>
 800f152:	69a3      	ldr	r3, [r4, #24]
 800f154:	4a0b      	ldr	r2, [pc, #44]	; (800f184 <MDNS::Print()+0x74>)
 800f156:	6961      	ldr	r1, [r4, #20]
 800f158:	2b00      	cmp	r3, #0
 800f15a:	bf08      	it	eq
 800f15c:	4613      	moveq	r3, r2
 800f15e:	480a      	ldr	r0, [pc, #40]	; (800f188 <MDNS::Print()+0x78>)
 800f160:	8ba2      	ldrh	r2, [r4, #28]
 800f162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f166:	f7fa b88b 	b.w	8009280 <printf>
 800f16a:	bd10      	pop	{r4, pc}
 800f16c:	08016544 	stmdaeq	r1, {r2, r6, r8, sl, sp, lr}
 800f170:	20000008 	andcs	r0, r0, r8
 800f174:	0801654a 	stmdaeq	r1, {r1, r3, r6, r8, sl, sp, lr}
 800f178:	20009774 	andcs	r9, r0, r4, ror r7
 800f17c:	2000954c 	andcs	r9, r0, ip, asr #10
 800f180:	08016558 	stmdaeq	r1, {r3, r4, r6, r8, sl, sp, lr}
 800f184:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 800f188:	08016564 	stmdaeq	r1, {r2, r5, r6, r8, sl, sp, lr}

0800f18c <strncpy.constprop.0.isra.0>:
 800f18c:	233f      	movs	r3, #63	; 0x3f
 800f18e:	3901      	subs	r1, #1
 800f190:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f194:	b92a      	cbnz	r2, 800f1a2 <strncpy.constprop.0.isra.0+0x16>
 800f196:	4403      	add	r3, r0
 800f198:	4298      	cmp	r0, r3
 800f19a:	d006      	beq.n	800f1aa <strncpy.constprop.0.isra.0+0x1e>
 800f19c:	f800 2b01 	strb.w	r2, [r0], #1
 800f1a0:	e7fa      	b.n	800f198 <strncpy.constprop.0.isra.0+0xc>
 800f1a2:	3b01      	subs	r3, #1
 800f1a4:	f800 2b01 	strb.w	r2, [r0], #1
 800f1a8:	d1f2      	bne.n	800f190 <strncpy.constprop.0.isra.0+0x4>
 800f1aa:	4770      	bx	lr

0800f1ac <Network::Network()>:
 800f1ac:	4a11      	ldr	r2, [pc, #68]	; (800f1f4 <Network::Network()+0x48>)
 800f1ae:	2300      	movs	r3, #0
 800f1b0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800f1b4:	6010      	str	r0, [r2, #0]
 800f1b6:	2201      	movs	r2, #1
 800f1b8:	e9c0 2100 	strd	r2, r1, [r0]
 800f1bc:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800f1c0:	2200      	movs	r2, #0
 800f1c2:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 800f1c6:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800f1ca:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800f1ce:	490a      	ldr	r1, [pc, #40]	; (800f1f8 <Network::Network()+0x4c>)
 800f1d0:	6102      	str	r2, [r0, #16]
 800f1d2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800f1d6:	61c3      	str	r3, [r0, #28]
 800f1d8:	f880 3020 	strb.w	r3, [r0, #32]
 800f1dc:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800f1e0:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800f1e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f1e8:	f802 3f01 	strb.w	r3, [r2, #1]!
 800f1ec:	2b00      	cmp	r3, #0
 800f1ee:	d1f9      	bne.n	800f1e4 <Network::Network()+0x38>
 800f1f0:	4770      	bx	lr
 800f1f2:	bf00      	nop
 800f1f4:	2000977c 	andcs	r9, r0, ip, ror r7
 800f1f8:	0801656f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, sp, lr}

0800f1fc <Network::Shutdown()>:
 800f1fc:	b508      	push	{r3, lr}
 800f1fe:	f001 fb5b 	bl	80108b8 <network::display_emac_shutdown()>
 800f202:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f206:	f7f7 bff3 	b.w	80071f0 <net_shutdown>

0800f20a <Network::Begin(unsigned short)>:
 800f20a:	4608      	mov	r0, r1
 800f20c:	f7ff baa2 	b.w	800e754 <udp_bind>

0800f210 <Network::End(unsigned short)>:
 800f210:	4608      	mov	r0, r1
 800f212:	f7ff bab9 	b.w	800e788 <udp_unbind>

0800f216 <Network::MacAddressCopyTo(unsigned char*)>:
 800f216:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800f21a:	3901      	subs	r1, #1
 800f21c:	30a5      	adds	r0, #165	; 0xa5
 800f21e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800f222:	4283      	cmp	r3, r0
 800f224:	f801 2f01 	strb.w	r2, [r1, #1]!
 800f228:	d1f9      	bne.n	800f21e <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800f22a:	4770      	bx	lr

0800f22c <Network::JoinGroup(int, unsigned int)>:
 800f22c:	4610      	mov	r0, r2
 800f22e:	f000 beed 	b.w	801000c <igmp_join>

0800f232 <Network::LeaveGroup(int, unsigned int)>:
 800f232:	4610      	mov	r0, r2
 800f234:	f000 bf16 	b.w	8010064 <igmp_leave>

0800f238 <Network::SetDefaultIp()>:
 800f238:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800f23c:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800f240:	041b      	lsls	r3, r3, #16
 800f242:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800f246:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800f24a:	3302      	adds	r3, #2
 800f24c:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800f250:	22ff      	movs	r2, #255	; 0xff
 800f252:	6143      	str	r3, [r0, #20]
 800f254:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800f258:	4770      	bx	lr
	...

0800f25c <Network::Init(NetworkParamsStore*)>:
 800f25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f260:	b0a5      	sub	sp, #148	; 0x94
 800f262:	4604      	mov	r4, r0
 800f264:	a80b      	add	r0, sp, #44	; 0x2c
 800f266:	f000 f9b9 	bl	800f5dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800f26a:	a80b      	add	r0, sp, #44	; 0x2c
 800f26c:	f000 f9c2 	bl	800f5f4 <NetworkParams::Load()>
 800f270:	b110      	cbz	r0, 800f278 <Network::Init(NetworkParamsStore*)+0x1c>
 800f272:	a80b      	add	r0, sp, #44	; 0x2c
 800f274:	f000 fb9b 	bl	800f9ae <NetworkParams::Dump()>
 800f278:	f001 fb12 	bl	80108a0 <network::display_emac_start()>
 800f27c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f27e:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800f282:	9308      	str	r3, [sp, #32]
 800f284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f286:	4628      	mov	r0, r5
 800f288:	9309      	str	r3, [sp, #36]	; 0x24
 800f28a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f28c:	f104 0620 	add.w	r6, r4, #32
 800f290:	930a      	str	r3, [sp, #40]	; 0x28
 800f292:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f296:	7163      	strb	r3, [r4, #5]
 800f298:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f29a:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800f29e:	bf18      	it	ne
 800f2a0:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800f2a4:	061b      	lsls	r3, r3, #24
 800f2a6:	bf54      	ite	pl
 800f2a8:	2300      	movpl	r3, #0
 800f2aa:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800f2ae:	60e2      	str	r2, [r4, #12]
 800f2b0:	6123      	str	r3, [r4, #16]
 800f2b2:	f004 fd71 	bl	8013d98 <emac_start(unsigned char*)>
 800f2b6:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800f2ba:	2b00      	cmp	r3, #0
 800f2bc:	f040 80bf 	bne.w	800f43e <Network::Init(NetworkParamsStore*)+0x1e2>
 800f2c0:	497e      	ldr	r1, [pc, #504]	; (800f4bc <Network::Init(NetworkParamsStore*)+0x260>)
 800f2c2:	f104 001f 	add.w	r0, r4, #31
 800f2c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f2ca:	1c5f      	adds	r7, r3, #1
 800f2cc:	2a00      	cmp	r2, #0
 800f2ce:	f040 80b2 	bne.w	800f436 <Network::Init(NetworkParamsStore*)+0x1da>
 800f2d2:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800f2d6:	18e1      	adds	r1, r4, r3
 800f2d8:	0910      	lsrs	r0, r2, #4
 800f2da:	2a9f      	cmp	r2, #159	; 0x9f
 800f2dc:	f002 020f 	and.w	r2, r2, #15
 800f2e0:	bf94      	ite	ls
 800f2e2:	3030      	addls	r0, #48	; 0x30
 800f2e4:	3037      	addhi	r0, #55	; 0x37
 800f2e6:	2a09      	cmp	r2, #9
 800f2e8:	bf94      	ite	ls
 800f2ea:	3230      	addls	r2, #48	; 0x30
 800f2ec:	3237      	addhi	r2, #55	; 0x37
 800f2ee:	4427      	add	r7, r4
 800f2f0:	f881 0020 	strb.w	r0, [r1, #32]
 800f2f4:	f887 2020 	strb.w	r2, [r7, #32]
 800f2f8:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800f2fc:	f103 0e02 	add.w	lr, r3, #2
 800f300:	0910      	lsrs	r0, r2, #4
 800f302:	2a9f      	cmp	r2, #159	; 0x9f
 800f304:	f002 020f 	and.w	r2, r2, #15
 800f308:	bf94      	ite	ls
 800f30a:	3030      	addls	r0, #48	; 0x30
 800f30c:	3037      	addhi	r0, #55	; 0x37
 800f30e:	f103 0c03 	add.w	ip, r3, #3
 800f312:	2a09      	cmp	r2, #9
 800f314:	eb04 070e 	add.w	r7, r4, lr
 800f318:	f887 0020 	strb.w	r0, [r7, #32]
 800f31c:	bf94      	ite	ls
 800f31e:	3230      	addls	r2, #48	; 0x30
 800f320:	3237      	addhi	r2, #55	; 0x37
 800f322:	eb04 000c 	add.w	r0, r4, ip
 800f326:	f880 2020 	strb.w	r2, [r0, #32]
 800f32a:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800f32e:	1d1f      	adds	r7, r3, #4
 800f330:	0910      	lsrs	r0, r2, #4
 800f332:	2a9f      	cmp	r2, #159	; 0x9f
 800f334:	f002 020f 	and.w	r2, r2, #15
 800f338:	bf94      	ite	ls
 800f33a:	3030      	addls	r0, #48	; 0x30
 800f33c:	3037      	addhi	r0, #55	; 0x37
 800f33e:	3305      	adds	r3, #5
 800f340:	2a09      	cmp	r2, #9
 800f342:	4423      	add	r3, r4
 800f344:	4427      	add	r7, r4
 800f346:	bf94      	ite	ls
 800f348:	3230      	addls	r2, #48	; 0x30
 800f34a:	3237      	addhi	r2, #55	; 0x37
 800f34c:	f887 0020 	strb.w	r0, [r7, #32]
 800f350:	f883 2020 	strb.w	r2, [r3, #32]
 800f354:	2300      	movs	r3, #0
 800f356:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800f35a:	f000 fee9 	bl	8010130 <net::link_register_read()>
 800f35e:	7963      	ldrb	r3, [r4, #5]
 800f360:	6020      	str	r0, [r4, #0]
 800f362:	2800      	cmp	r0, #0
 800f364:	f040 8095 	bne.w	800f492 <Network::Init(NetworkParamsStore*)+0x236>
 800f368:	2b00      	cmp	r3, #0
 800f36a:	f040 80a3 	bne.w	800f4b4 <Network::Init(NetworkParamsStore*)+0x258>
 800f36e:	9b08      	ldr	r3, [sp, #32]
 800f370:	2b00      	cmp	r3, #0
 800f372:	d16d      	bne.n	800f450 <Network::Init(NetworkParamsStore*)+0x1f4>
 800f374:	4620      	mov	r0, r4
 800f376:	f7ff ff5f 	bl	800f238 <Network::SetDefaultIp()>
 800f37a:	6963      	ldr	r3, [r4, #20]
 800f37c:	69e2      	ldr	r2, [r4, #28]
 800f37e:	9308      	str	r3, [sp, #32]
 800f380:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800f384:	f104 0805 	add.w	r8, r4, #5
 800f388:	f104 0907 	add.w	r9, r4, #7
 800f38c:	4643      	mov	r3, r8
 800f38e:	4632      	mov	r2, r6
 800f390:	4628      	mov	r0, r5
 800f392:	f8cd 9000 	str.w	r9, [sp]
 800f396:	a908      	add	r1, sp, #32
 800f398:	f7f7 feda 	bl	8007150 <net_init>
 800f39c:	79e3      	ldrb	r3, [r4, #7]
 800f39e:	b113      	cbz	r3, 800f3a6 <Network::Init(NetworkParamsStore*)+0x14a>
 800f3a0:	2004      	movs	r0, #4
 800f3a2:	f001 fa8f 	bl	80108c4 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800f3a6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f3aa:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800f3ae:	9304      	str	r3, [sp, #16]
 800f3b0:	233c      	movs	r3, #60	; 0x3c
 800f3b2:	fb03 f30a 	mul.w	r3, r3, sl
 800f3b6:	4f42      	ldr	r7, [pc, #264]	; (800f4c0 <Network::Init(NetworkParamsStore*)+0x264>)
 800f3b8:	f8df b108 	ldr.w	fp, [pc, #264]	; 800f4c4 <Network::Init(NetworkParamsStore*)+0x268>
 800f3bc:	9303      	str	r3, [sp, #12]
 800f3be:	79e3      	ldrb	r3, [r4, #7]
 800f3c0:	b373      	cbz	r3, 800f420 <Network::Init(NetworkParamsStore*)+0x1c4>
 800f3c2:	f1ba 0f00 	cmp.w	sl, #0
 800f3c6:	d02b      	beq.n	800f420 <Network::Init(NetworkParamsStore*)+0x1c4>
 800f3c8:	9b04      	ldr	r3, [sp, #16]
 800f3ca:	b34b      	cbz	r3, 800f420 <Network::Init(NetworkParamsStore*)+0x1c4>
 800f3cc:	2104      	movs	r1, #4
 800f3ce:	6838      	ldr	r0, [r7, #0]
 800f3d0:	f002 fe0c 	bl	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800f3d4:	2003      	movs	r0, #3
 800f3d6:	f001 fa75 	bl	80108c4 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800f3da:	2000      	movs	r0, #0
 800f3dc:	f003 f89c 	bl	8012518 <time>
 800f3e0:	9005      	str	r0, [sp, #20]
 800f3e2:	2000      	movs	r0, #0
 800f3e4:	f003 f898 	bl	8012518 <time>
 800f3e8:	9b05      	ldr	r3, [sp, #20]
 800f3ea:	4937      	ldr	r1, [pc, #220]	; (800f4c8 <Network::Init(NetworkParamsStore*)+0x26c>)
 800f3ec:	1ac0      	subs	r0, r0, r3
 800f3ee:	9b03      	ldr	r3, [sp, #12]
 800f3f0:	4298      	cmp	r0, r3
 800f3f2:	db35      	blt.n	800f460 <Network::Init(NetworkParamsStore*)+0x204>
 800f3f4:	2001      	movs	r0, #1
 800f3f6:	f001 fa65 	bl	80108c4 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800f3fa:	2101      	movs	r1, #1
 800f3fc:	6838      	ldr	r0, [r7, #0]
 800f3fe:	f002 fdf5 	bl	8011fec <LedBlink::SetMode(ledblink::Mode)>
 800f402:	2301      	movs	r3, #1
 800f404:	7163      	strb	r3, [r4, #5]
 800f406:	2300      	movs	r3, #0
 800f408:	4632      	mov	r2, r6
 800f40a:	71e3      	strb	r3, [r4, #7]
 800f40c:	4628      	mov	r0, r5
 800f40e:	4643      	mov	r3, r8
 800f410:	f8cd 9000 	str.w	r9, [sp]
 800f414:	a908      	add	r1, sp, #32
 800f416:	f7f7 fe9b 	bl	8007150 <net_init>
 800f41a:	7963      	ldrb	r3, [r4, #5]
 800f41c:	2b00      	cmp	r3, #0
 800f41e:	d0ce      	beq.n	800f3be <Network::Init(NetworkParamsStore*)+0x162>
 800f420:	9b08      	ldr	r3, [sp, #32]
 800f422:	6163      	str	r3, [r4, #20]
 800f424:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f426:	61e3      	str	r3, [r4, #28]
 800f428:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f42a:	61a3      	str	r3, [r4, #24]
 800f42c:	f001 fa3e 	bl	80108ac <network::display_ip()>
 800f430:	b025      	add	sp, #148	; 0x94
 800f432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f436:	463b      	mov	r3, r7
 800f438:	f800 2f01 	strb.w	r2, [r0, #1]!
 800f43c:	e743      	b.n	800f2c6 <Network::Init(NetworkParamsStore*)+0x6a>
 800f43e:	4630      	mov	r0, r6
 800f440:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800f444:	f7ff fea2 	bl	800f18c <strncpy.constprop.0.isra.0>
 800f448:	2300      	movs	r3, #0
 800f44a:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800f44e:	e784      	b.n	800f35a <Network::Init(NetworkParamsStore*)+0xfe>
 800f450:	69e1      	ldr	r1, [r4, #28]
 800f452:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800f456:	4053      	eors	r3, r2
 800f458:	420b      	tst	r3, r1
 800f45a:	bf18      	it	ne
 800f45c:	920a      	strne	r2, [sp, #40]	; 0x28
 800f45e:	e791      	b.n	800f384 <Network::Init(NetworkParamsStore*)+0x128>
 800f460:	683b      	ldr	r3, [r7, #0]
 800f462:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800f466:	f1bc 0f00 	cmp.w	ip, #0
 800f46a:	d0ba      	beq.n	800f3e2 <Network::Init(NetworkParamsStore*)+0x186>
 800f46c:	6808      	ldr	r0, [r1, #0]
 800f46e:	695a      	ldr	r2, [r3, #20]
 800f470:	1a80      	subs	r0, r0, r2
 800f472:	4584      	cmp	ip, r0
 800f474:	d8b5      	bhi.n	800f3e2 <Network::Init(NetworkParamsStore*)+0x186>
 800f476:	6808      	ldr	r0, [r1, #0]
 800f478:	6158      	str	r0, [r3, #20]
 800f47a:	6918      	ldr	r0, [r3, #16]
 800f47c:	2801      	cmp	r0, #1
 800f47e:	f080 0201 	eor.w	r2, r0, #1
 800f482:	611a      	str	r2, [r3, #16]
 800f484:	bf16      	itet	ne
 800f486:	2301      	movne	r3, #1
 800f488:	f8cb 0014 	streq.w	r0, [fp, #20]
 800f48c:	f8cb 3010 	strne.w	r3, [fp, #16]
 800f490:	e7a7      	b.n	800f3e2 <Network::Init(NetworkParamsStore*)+0x186>
 800f492:	b11b      	cbz	r3, 800f49c <Network::Init(NetworkParamsStore*)+0x240>
 800f494:	2300      	movs	r3, #0
 800f496:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800f49a:	9308      	str	r3, [sp, #32]
 800f49c:	2300      	movs	r3, #0
 800f49e:	f88d 301f 	strb.w	r3, [sp, #31]
 800f4a2:	f10d 031f 	add.w	r3, sp, #31
 800f4a6:	4632      	mov	r2, r6
 800f4a8:	4628      	mov	r0, r5
 800f4aa:	9300      	str	r3, [sp, #0]
 800f4ac:	a908      	add	r1, sp, #32
 800f4ae:	f7f7 fe4f 	bl	8007150 <net_init>
 800f4b2:	e7b5      	b.n	800f420 <Network::Init(NetworkParamsStore*)+0x1c4>
 800f4b4:	2001      	movs	r0, #1
 800f4b6:	f001 fa05 	bl	80108c4 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800f4ba:	e763      	b.n	800f384 <Network::Init(NetworkParamsStore*)+0x128>
 800f4bc:	08016574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, sp, lr}
 800f4c0:	2000ae8c 	andcs	sl, r0, ip, lsl #29
 800f4c4:	40011000 	andmi	r1, r1, r0
 800f4c8:	2000aea4 	andcs	sl, r0, r4, lsr #29

0800f4cc <Network::Print()>:
 800f4cc:	b530      	push	{r4, r5, lr}
 800f4ce:	4604      	mov	r4, r0
 800f4d0:	b085      	sub	sp, #20
 800f4d2:	4832      	ldr	r0, [pc, #200]	; (800f59c <Network::Print()+0xd0>)
 800f4d4:	f7f9 fed4 	bl	8009280 <printf>
 800f4d8:	f104 0120 	add.w	r1, r4, #32
 800f4dc:	4830      	ldr	r0, [pc, #192]	; (800f5a0 <Network::Print()+0xd4>)
 800f4de:	f7f9 fecf 	bl	8009280 <printf>
 800f4e2:	68a1      	ldr	r1, [r4, #8]
 800f4e4:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800f4e8:	482e      	ldr	r0, [pc, #184]	; (800f5a4 <Network::Print()+0xd8>)
 800f4ea:	f7f9 fec9 	bl	8009280 <printf>
 800f4ee:	69e0      	ldr	r0, [r4, #28]
 800f4f0:	f004 ff9c 	bl	801442c <__popcountsi2>
 800f4f4:	6965      	ldr	r5, [r4, #20]
 800f4f6:	9001      	str	r0, [sp, #4]
 800f4f8:	0e2b      	lsrs	r3, r5, #24
 800f4fa:	9300      	str	r3, [sp, #0]
 800f4fc:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800f500:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800f504:	b2e9      	uxtb	r1, r5
 800f506:	4828      	ldr	r0, [pc, #160]	; (800f5a8 <Network::Print()+0xdc>)
 800f508:	f7f9 feba 	bl	8009280 <printf>
 800f50c:	69e1      	ldr	r1, [r4, #28]
 800f50e:	4827      	ldr	r0, [pc, #156]	; (800f5ac <Network::Print()+0xe0>)
 800f510:	0e0b      	lsrs	r3, r1, #24
 800f512:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f516:	9300      	str	r3, [sp, #0]
 800f518:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f51c:	b2c9      	uxtb	r1, r1
 800f51e:	f7f9 feaf 	bl	8009280 <printf>
 800f522:	69a1      	ldr	r1, [r4, #24]
 800f524:	4822      	ldr	r0, [pc, #136]	; (800f5b0 <Network::Print()+0xe4>)
 800f526:	0e0b      	lsrs	r3, r1, #24
 800f528:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f52c:	9300      	str	r3, [sp, #0]
 800f52e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f532:	b2c9      	uxtb	r1, r1
 800f534:	f7f9 fea4 	bl	8009280 <printf>
 800f538:	69e3      	ldr	r3, [r4, #28]
 800f53a:	6961      	ldr	r1, [r4, #20]
 800f53c:	481d      	ldr	r0, [pc, #116]	; (800f5b4 <Network::Print()+0xe8>)
 800f53e:	ea61 0103 	orn	r1, r1, r3
 800f542:	0e0b      	lsrs	r3, r1, #24
 800f544:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f548:	9300      	str	r3, [sp, #0]
 800f54a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f54e:	b2c9      	uxtb	r1, r1
 800f550:	f7f9 fe96 	bl	8009280 <printf>
 800f554:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800f558:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800f55c:	9302      	str	r3, [sp, #8]
 800f55e:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800f562:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800f566:	9301      	str	r3, [sp, #4]
 800f568:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800f56c:	4812      	ldr	r0, [pc, #72]	; (800f5b8 <Network::Print()+0xec>)
 800f56e:	9300      	str	r3, [sp, #0]
 800f570:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800f574:	f7f9 fe84 	bl	8009280 <printf>
 800f578:	4b10      	ldr	r3, [pc, #64]	; (800f5bc <Network::Print()+0xf0>)
 800f57a:	681b      	ldr	r3, [r3, #0]
 800f57c:	79da      	ldrb	r2, [r3, #7]
 800f57e:	b952      	cbnz	r2, 800f596 <Network::Print()+0xca>
 800f580:	795b      	ldrb	r3, [r3, #5]
 800f582:	2b00      	cmp	r3, #0
 800f584:	bf14      	ite	ne
 800f586:	2144      	movne	r1, #68	; 0x44
 800f588:	2153      	moveq	r1, #83	; 0x53
 800f58a:	480d      	ldr	r0, [pc, #52]	; (800f5c0 <Network::Print()+0xf4>)
 800f58c:	b005      	add	sp, #20
 800f58e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f592:	f7f9 be75 	b.w	8009280 <printf>
 800f596:	215a      	movs	r1, #90	; 0x5a
 800f598:	e7f7      	b.n	800f58a <Network::Print()+0xbe>
 800f59a:	bf00      	nop
 800f59c:	08016580 	stmdaeq	r1, {r7, r8, sl, sp, lr}
 800f5a0:	08016589 	stmdaeq	r1, {r0, r3, r7, r8, sl, sp, lr}
 800f5a4:	0801659a 	stmdaeq	r1, {r1, r3, r4, r7, r8, sl, sp, lr}
 800f5a8:	080165af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sl, sp, lr}
 800f5ac:	080165cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, sp, lr}
 800f5b0:	080165e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, sl, sp, lr}
 800f5b4:	08016600 	stmdaeq	r1, {r9, sl, sp, lr}
 800f5b8:	0801661a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp, lr}
 800f5bc:	2000977c 	andcs	r9, r0, ip, ror r7
 800f5c0:	08016646 	stmdaeq	r1, {r1, r2, r6, r9, sl, sp, lr}

0800f5c4 <Network::TcpBegin(unsigned short)>:
 800f5c4:	4608      	mov	r0, r1
 800f5c6:	f7fe bfff 	b.w	800e5c8 <tcp_begin>

0800f5ca <Network::TcpRead(int, unsigned char const**)>:
 800f5ca:	4608      	mov	r0, r1
 800f5cc:	4611      	mov	r1, r2
 800f5ce:	f7ff b839 	b.w	800e644 <tcp_read>

0800f5d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800f5d2:	4608      	mov	r0, r1
 800f5d4:	4611      	mov	r1, r2
 800f5d6:	461a      	mov	r2, r3
 800f5d8:	f7ff b810 	b.w	800e5fc <tcp_write>

0800f5dc <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800f5dc:	b510      	push	{r4, lr}
 800f5de:	225e      	movs	r2, #94	; 0x5e
 800f5e0:	4604      	mov	r4, r0
 800f5e2:	f840 1b04 	str.w	r1, [r0], #4
 800f5e6:	2100      	movs	r1, #0
 800f5e8:	f002 fe8e 	bl	8012308 <memset>
 800f5ec:	2301      	movs	r3, #1
 800f5ee:	4620      	mov	r0, r4
 800f5f0:	7623      	strb	r3, [r4, #24]
 800f5f2:	bd10      	pop	{r4, pc}

0800f5f4 <NetworkParams::Load()>:
 800f5f4:	b508      	push	{r3, lr}
 800f5f6:	2300      	movs	r3, #0
 800f5f8:	4601      	mov	r1, r0
 800f5fa:	6043      	str	r3, [r0, #4]
 800f5fc:	6800      	ldr	r0, [r0, #0]
 800f5fe:	b120      	cbz	r0, 800f60a <NetworkParams::Load()+0x16>
 800f600:	6803      	ldr	r3, [r0, #0]
 800f602:	3104      	adds	r1, #4
 800f604:	68db      	ldr	r3, [r3, #12]
 800f606:	4798      	blx	r3
 800f608:	2001      	movs	r0, #1
 800f60a:	bd08      	pop	{r3, pc}

0800f60c <NetworkParams::Load(char const*, unsigned int)>:
 800f60c:	6803      	ldr	r3, [r0, #0]
 800f60e:	b1d3      	cbz	r3, 800f646 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800f610:	2300      	movs	r3, #0
 800f612:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f614:	460d      	mov	r5, r1
 800f616:	4616      	mov	r6, r2
 800f618:	4604      	mov	r4, r0
 800f61a:	6043      	str	r3, [r0, #4]
 800f61c:	4602      	mov	r2, r0
 800f61e:	490a      	ldr	r1, [pc, #40]	; (800f648 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800f620:	4668      	mov	r0, sp
 800f622:	f002 f819 	bl	8011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f626:	4632      	mov	r2, r6
 800f628:	4629      	mov	r1, r5
 800f62a:	4668      	mov	r0, sp
 800f62c:	f002 f818 	bl	8011660 <ReadConfigFile::Read(char const*, unsigned int)>
 800f630:	4621      	mov	r1, r4
 800f632:	f851 0b04 	ldr.w	r0, [r1], #4
 800f636:	6803      	ldr	r3, [r0, #0]
 800f638:	689b      	ldr	r3, [r3, #8]
 800f63a:	4798      	blx	r3
 800f63c:	4668      	mov	r0, sp
 800f63e:	f002 f80e 	bl	801165e <ReadConfigFile::~ReadConfigFile()>
 800f642:	b002      	add	sp, #8
 800f644:	bd70      	pop	{r4, r5, r6, pc}
 800f646:	4770      	bx	lr
 800f648:	0800f779 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp, lr, pc}

0800f64c <NetworkParams::callbackFunction(char const*)>:
 800f64c:	b530      	push	{r4, r5, lr}
 800f64e:	460d      	mov	r5, r1
 800f650:	b085      	sub	sp, #20
 800f652:	4604      	mov	r4, r0
 800f654:	4942      	ldr	r1, [pc, #264]	; (800f760 <NetworkParams::callbackFunction(char const*)+0x114>)
 800f656:	4628      	mov	r0, r5
 800f658:	f10d 0207 	add.w	r2, sp, #7
 800f65c:	f002 f938 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f660:	b978      	cbnz	r0, 800f682 <NetworkParams::callbackFunction(char const*)+0x36>
 800f662:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f666:	6863      	ldr	r3, [r4, #4]
 800f668:	b142      	cbz	r2, 800f67c <NetworkParams::callbackFunction(char const*)+0x30>
 800f66a:	f023 0301 	bic.w	r3, r3, #1
 800f66e:	3a00      	subs	r2, #0
 800f670:	bf18      	it	ne
 800f672:	2201      	movne	r2, #1
 800f674:	6063      	str	r3, [r4, #4]
 800f676:	7622      	strb	r2, [r4, #24]
 800f678:	b005      	add	sp, #20
 800f67a:	bd30      	pop	{r4, r5, pc}
 800f67c:	f043 0301 	orr.w	r3, r3, #1
 800f680:	e7f5      	b.n	800f66e <NetworkParams::callbackFunction(char const*)+0x22>
 800f682:	4628      	mov	r0, r5
 800f684:	4937      	ldr	r1, [pc, #220]	; (800f764 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f686:	f10d 0207 	add.w	r2, sp, #7
 800f68a:	f002 f921 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f68e:	b980      	cbnz	r0, 800f6b2 <NetworkParams::callbackFunction(char const*)+0x66>
 800f690:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f694:	6863      	ldr	r3, [r4, #4]
 800f696:	1e51      	subs	r1, r2, #1
 800f698:	2904      	cmp	r1, #4
 800f69a:	bf97      	itett	ls
 800f69c:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f6a0:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f6a4:	6063      	strls	r3, [r4, #4]
 800f6a6:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800f6aa:	bf84      	itt	hi
 800f6ac:	6063      	strhi	r3, [r4, #4]
 800f6ae:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800f6b2:	4628      	mov	r0, r5
 800f6b4:	492c      	ldr	r1, [pc, #176]	; (800f768 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800f6b6:	aa02      	add	r2, sp, #8
 800f6b8:	f002 f882 	bl	80117c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f6bc:	b9e8      	cbnz	r0, 800f6fa <NetworkParams::callbackFunction(char const*)+0xae>
 800f6be:	9a02      	ldr	r2, [sp, #8]
 800f6c0:	6863      	ldr	r3, [r4, #4]
 800f6c2:	b2d1      	uxtb	r1, r2
 800f6c4:	29ac      	cmp	r1, #172	; 0xac
 800f6c6:	f3c2 2007 	ubfx	r0, r2, #8, #8
 800f6ca:	d007      	beq.n	800f6dc <NetworkParams::callbackFunction(char const*)+0x90>
 800f6cc:	29c0      	cmp	r1, #192	; 0xc0
 800f6ce:	d00c      	beq.n	800f6ea <NetworkParams::callbackFunction(char const*)+0x9e>
 800f6d0:	290a      	cmp	r1, #10
 800f6d2:	d10d      	bne.n	800f6f0 <NetworkParams::callbackFunction(char const*)+0xa4>
 800f6d4:	60a2      	str	r2, [r4, #8]
 800f6d6:	f043 0302 	orr.w	r3, r3, #2
 800f6da:	e004      	b.n	800f6e6 <NetworkParams::callbackFunction(char const*)+0x9a>
 800f6dc:	3810      	subs	r0, #16
 800f6de:	280f      	cmp	r0, #15
 800f6e0:	d9f8      	bls.n	800f6d4 <NetworkParams::callbackFunction(char const*)+0x88>
 800f6e2:	f023 0302 	bic.w	r3, r3, #2
 800f6e6:	6063      	str	r3, [r4, #4]
 800f6e8:	e7c6      	b.n	800f678 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f6ea:	28a8      	cmp	r0, #168	; 0xa8
 800f6ec:	d1f9      	bne.n	800f6e2 <NetworkParams::callbackFunction(char const*)+0x96>
 800f6ee:	e7f1      	b.n	800f6d4 <NetworkParams::callbackFunction(char const*)+0x88>
 800f6f0:	2902      	cmp	r1, #2
 800f6f2:	d0ef      	beq.n	800f6d4 <NetworkParams::callbackFunction(char const*)+0x88>
 800f6f4:	2a00      	cmp	r2, #0
 800f6f6:	d0ed      	beq.n	800f6d4 <NetworkParams::callbackFunction(char const*)+0x88>
 800f6f8:	e7f3      	b.n	800f6e2 <NetworkParams::callbackFunction(char const*)+0x96>
 800f6fa:	4628      	mov	r0, r5
 800f6fc:	491b      	ldr	r1, [pc, #108]	; (800f76c <NetworkParams::callbackFunction(char const*)+0x120>)
 800f6fe:	aa02      	add	r2, sp, #8
 800f700:	f002 f85e 	bl	80117c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f704:	b970      	cbnz	r0, 800f724 <NetworkParams::callbackFunction(char const*)+0xd8>
 800f706:	9a02      	ldr	r2, [sp, #8]
 800f708:	6863      	ldr	r3, [r4, #4]
 800f70a:	b142      	cbz	r2, 800f71e <NetworkParams::callbackFunction(char const*)+0xd2>
 800f70c:	ba11      	rev	r1, r2
 800f70e:	43c8      	mvns	r0, r1
 800f710:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 800f714:	d103      	bne.n	800f71e <NetworkParams::callbackFunction(char const*)+0xd2>
 800f716:	60e2      	str	r2, [r4, #12]
 800f718:	f043 0304 	orr.w	r3, r3, #4
 800f71c:	e7e3      	b.n	800f6e6 <NetworkParams::callbackFunction(char const*)+0x9a>
 800f71e:	f023 0304 	bic.w	r3, r3, #4
 800f722:	e7e0      	b.n	800f6e6 <NetworkParams::callbackFunction(char const*)+0x9a>
 800f724:	4628      	mov	r0, r5
 800f726:	4912      	ldr	r1, [pc, #72]	; (800f770 <NetworkParams::callbackFunction(char const*)+0x124>)
 800f728:	aa02      	add	r2, sp, #8
 800f72a:	f002 f849 	bl	80117c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f72e:	b928      	cbnz	r0, 800f73c <NetworkParams::callbackFunction(char const*)+0xf0>
 800f730:	9b02      	ldr	r3, [sp, #8]
 800f732:	6123      	str	r3, [r4, #16]
 800f734:	6863      	ldr	r3, [r4, #4]
 800f736:	f043 0308 	orr.w	r3, r3, #8
 800f73a:	e7d4      	b.n	800f6e6 <NetworkParams::callbackFunction(char const*)+0x9a>
 800f73c:	233f      	movs	r3, #63	; 0x3f
 800f73e:	4628      	mov	r0, r5
 800f740:	9303      	str	r3, [sp, #12]
 800f742:	490c      	ldr	r1, [pc, #48]	; (800f774 <NetworkParams::callbackFunction(char const*)+0x128>)
 800f744:	ab03      	add	r3, sp, #12
 800f746:	f104 0219 	add.w	r2, r4, #25
 800f74a:	f001 ffbd 	bl	80116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f74e:	2800      	cmp	r0, #0
 800f750:	d192      	bne.n	800f678 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f752:	9b03      	ldr	r3, [sp, #12]
 800f754:	4423      	add	r3, r4
 800f756:	7658      	strb	r0, [r3, #25]
 800f758:	6863      	ldr	r3, [r4, #4]
 800f75a:	f043 0320 	orr.w	r3, r3, #32
 800f75e:	e7c2      	b.n	800f6e6 <NetworkParams::callbackFunction(char const*)+0x9a>
 800f760:	0801669e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, sl, sp, lr}
 800f764:	0801667c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, sp, lr}
 800f768:	08016661 	stmdaeq	r1, {r0, r5, r6, r9, sl, sp, lr}
 800f76c:	08016695 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, sp, lr}
 800f770:	0801666c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, sp, lr}
 800f774:	0801668c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp, lr}

0800f778 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800f778:	f7ff bf68 	b.w	800f64c <NetworkParams::callbackFunction(char const*)>

0800f77c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800f77c:	b570      	push	{r4, r5, r6, lr}
 800f77e:	4604      	mov	r4, r0
 800f780:	4615      	mov	r5, r2
 800f782:	461e      	mov	r6, r3
 800f784:	b086      	sub	sp, #24
 800f786:	3004      	adds	r0, #4
 800f788:	2900      	cmp	r1, #0
 800f78a:	d02b      	beq.n	800f7e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800f78c:	225e      	movs	r2, #94	; 0x5e
 800f78e:	f002 fda4 	bl	80122da <memmove>
 800f792:	462a      	mov	r2, r5
 800f794:	4633      	mov	r3, r6
 800f796:	4970      	ldr	r1, [pc, #448]	; (800f958 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f798:	a803      	add	r0, sp, #12
 800f79a:	f001 febd 	bl	8011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f79e:	6863      	ldr	r3, [r4, #4]
 800f7a0:	079a      	lsls	r2, r3, #30
 800f7a2:	bf5f      	itttt	pl
 800f7a4:	4a6d      	ldrpl	r2, [pc, #436]	; (800f95c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7a6:	6812      	ldrpl	r2, [r2, #0]
 800f7a8:	6952      	ldrpl	r2, [r2, #20]
 800f7aa:	60a2      	strpl	r2, [r4, #8]
 800f7ac:	075e      	lsls	r6, r3, #29
 800f7ae:	bf5f      	itttt	pl
 800f7b0:	4a6a      	ldrpl	r2, [pc, #424]	; (800f95c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7b2:	6812      	ldrpl	r2, [r2, #0]
 800f7b4:	69d2      	ldrpl	r2, [r2, #28]
 800f7b6:	60e2      	strpl	r2, [r4, #12]
 800f7b8:	071d      	lsls	r5, r3, #28
 800f7ba:	bf58      	it	pl
 800f7bc:	4a67      	ldrpl	r2, [pc, #412]	; (800f95c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7be:	f104 0519 	add.w	r5, r4, #25
 800f7c2:	bf5e      	ittt	pl
 800f7c4:	6812      	ldrpl	r2, [r2, #0]
 800f7c6:	6992      	ldrpl	r2, [r2, #24]
 800f7c8:	6122      	strpl	r2, [r4, #16]
 800f7ca:	0698      	lsls	r0, r3, #26
 800f7cc:	d418      	bmi.n	800f800 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800f7ce:	4628      	mov	r0, r5
 800f7d0:	223f      	movs	r2, #63	; 0x3f
 800f7d2:	4b62      	ldr	r3, [pc, #392]	; (800f95c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7d4:	681b      	ldr	r3, [r3, #0]
 800f7d6:	331f      	adds	r3, #31
 800f7d8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f7dc:	b949      	cbnz	r1, 800f7f2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800f7de:	f002 fd93 	bl	8012308 <memset>
 800f7e2:	e00a      	b.n	800f7fa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800f7e4:	6823      	ldr	r3, [r4, #0]
 800f7e6:	4601      	mov	r1, r0
 800f7e8:	681a      	ldr	r2, [r3, #0]
 800f7ea:	4618      	mov	r0, r3
 800f7ec:	68d2      	ldr	r2, [r2, #12]
 800f7ee:	4790      	blx	r2
 800f7f0:	e7cf      	b.n	800f792 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800f7f2:	3a01      	subs	r2, #1
 800f7f4:	f800 1b01 	strb.w	r1, [r0], #1
 800f7f8:	d1ee      	bne.n	800f7d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800f7fa:	2300      	movs	r3, #0
 800f7fc:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800f800:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f804:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800f808:	7e23      	ldrb	r3, [r4, #24]
 800f80a:	42b2      	cmp	r2, r6
 800f80c:	6861      	ldr	r1, [r4, #4]
 800f80e:	d21a      	bcs.n	800f846 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800f810:	9803      	ldr	r0, [sp, #12]
 800f812:	07c9      	lsls	r1, r1, #31
 800f814:	4410      	add	r0, r2
 800f816:	eba6 0602 	sub.w	r6, r6, r2
 800f81a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f81e:	d404      	bmi.n	800f82a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800f820:	b922      	cbnz	r2, 800f82c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800f822:	9300      	str	r3, [sp, #0]
 800f824:	4a4e      	ldr	r2, [pc, #312]	; (800f960 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f826:	4b4f      	ldr	r3, [pc, #316]	; (800f964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f828:	e003      	b.n	800f832 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800f82a:	b312      	cbz	r2, 800f872 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800f82c:	9300      	str	r3, [sp, #0]
 800f82e:	4a4e      	ldr	r2, [pc, #312]	; (800f968 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f830:	4b4c      	ldr	r3, [pc, #304]	; (800f964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f832:	4631      	mov	r1, r6
 800f834:	f7f9 fd4c 	bl	80092d0 <snprintf>
 800f838:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f83c:	4286      	cmp	r6, r0
 800f83e:	bfa4      	itt	ge
 800f840:	181b      	addge	r3, r3, r0
 800f842:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800f846:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f84a:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800f84e:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800f852:	42b2      	cmp	r2, r6
 800f854:	6861      	ldr	r1, [r4, #4]
 800f856:	d21f      	bcs.n	800f898 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800f858:	9803      	ldr	r0, [sp, #12]
 800f85a:	05c9      	lsls	r1, r1, #23
 800f85c:	4410      	add	r0, r2
 800f85e:	eba6 0602 	sub.w	r6, r6, r2
 800f862:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f866:	d408      	bmi.n	800f87a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800f868:	b94a      	cbnz	r2, 800f87e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800f86a:	9300      	str	r3, [sp, #0]
 800f86c:	4a3c      	ldr	r2, [pc, #240]	; (800f960 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f86e:	4b3f      	ldr	r3, [pc, #252]	; (800f96c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f870:	e008      	b.n	800f884 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800f872:	9300      	str	r3, [sp, #0]
 800f874:	4a3e      	ldr	r2, [pc, #248]	; (800f970 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f876:	4b3b      	ldr	r3, [pc, #236]	; (800f964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f878:	e7db      	b.n	800f832 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800f87a:	2a00      	cmp	r2, #0
 800f87c:	d03c      	beq.n	800f8f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800f87e:	9300      	str	r3, [sp, #0]
 800f880:	4a39      	ldr	r2, [pc, #228]	; (800f968 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f882:	4b3a      	ldr	r3, [pc, #232]	; (800f96c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f884:	4631      	mov	r1, r6
 800f886:	f7f9 fd23 	bl	80092d0 <snprintf>
 800f88a:	4286      	cmp	r6, r0
 800f88c:	bfa2      	ittt	ge
 800f88e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f892:	18c0      	addge	r0, r0, r3
 800f894:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f898:	4936      	ldr	r1, [pc, #216]	; (800f974 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800f89a:	a803      	add	r0, sp, #12
 800f89c:	f001 fec2 	bl	8011624 <PropertiesBuilder::AddComment(char const*)>
 800f8a0:	6863      	ldr	r3, [r4, #4]
 800f8a2:	68a2      	ldr	r2, [r4, #8]
 800f8a4:	4934      	ldr	r1, [pc, #208]	; (800f978 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800f8a6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800f8aa:	a803      	add	r0, sp, #12
 800f8ac:	f001 fe76 	bl	801159c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f8b0:	6863      	ldr	r3, [r4, #4]
 800f8b2:	68e2      	ldr	r2, [r4, #12]
 800f8b4:	4931      	ldr	r1, [pc, #196]	; (800f97c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800f8b6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800f8ba:	a803      	add	r0, sp, #12
 800f8bc:	f001 fe6e 	bl	801159c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f8c0:	6863      	ldr	r3, [r4, #4]
 800f8c2:	6922      	ldr	r2, [r4, #16]
 800f8c4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800f8c8:	492d      	ldr	r1, [pc, #180]	; (800f980 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800f8ca:	a803      	add	r0, sp, #12
 800f8cc:	f001 fe66 	bl	801159c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f8d0:	6862      	ldr	r2, [r4, #4]
 800f8d2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f8d6:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800f8da:	42a3      	cmp	r3, r4
 800f8dc:	d21e      	bcs.n	800f91c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800f8de:	9803      	ldr	r0, [sp, #12]
 800f8e0:	0692      	lsls	r2, r2, #26
 800f8e2:	4418      	add	r0, r3
 800f8e4:	eba4 0403 	sub.w	r4, r4, r3
 800f8e8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f8ec:	d408      	bmi.n	800f900 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800f8ee:	b943      	cbnz	r3, 800f902 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800f8f0:	4b24      	ldr	r3, [pc, #144]	; (800f984 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f8f2:	4a25      	ldr	r2, [pc, #148]	; (800f988 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f8f4:	9500      	str	r5, [sp, #0]
 800f8f6:	e007      	b.n	800f908 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800f8f8:	9300      	str	r3, [sp, #0]
 800f8fa:	4a1d      	ldr	r2, [pc, #116]	; (800f970 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f8fc:	4b1b      	ldr	r3, [pc, #108]	; (800f96c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f8fe:	e7c1      	b.n	800f884 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800f900:	b32b      	cbz	r3, 800f94e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800f902:	4b20      	ldr	r3, [pc, #128]	; (800f984 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f904:	4a21      	ldr	r2, [pc, #132]	; (800f98c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800f906:	9500      	str	r5, [sp, #0]
 800f908:	4621      	mov	r1, r4
 800f90a:	f7f9 fce1 	bl	80092d0 <snprintf>
 800f90e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f912:	4284      	cmp	r4, r0
 800f914:	bfa4      	itt	ge
 800f916:	181b      	addge	r3, r3, r0
 800f918:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800f91c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f920:	b17b      	cbz	r3, 800f942 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800f922:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f926:	9b03      	ldr	r3, [sp, #12]
 800f928:	4413      	add	r3, r2
 800f92a:	227d      	movs	r2, #125	; 0x7d
 800f92c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f930:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f934:	9903      	ldr	r1, [sp, #12]
 800f936:	54ca      	strb	r2, [r1, r3]
 800f938:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f93c:	3301      	adds	r3, #1
 800f93e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f942:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f946:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f948:	601a      	str	r2, [r3, #0]
 800f94a:	b006      	add	sp, #24
 800f94c:	bd70      	pop	{r4, r5, r6, pc}
 800f94e:	4b0d      	ldr	r3, [pc, #52]	; (800f984 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f950:	4a0f      	ldr	r2, [pc, #60]	; (800f990 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800f952:	9500      	str	r5, [sp, #0]
 800f954:	e7d8      	b.n	800f908 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800f956:	bf00      	nop
 800f958:	080166a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, sl, sp, lr}
 800f95c:	2000977c 	andcs	r9, r0, ip, ror r7
 800f960:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 800f964:	0801669e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, sl, sp, lr}
 800f968:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 800f96c:	0801667c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, sp, lr}
 800f970:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}
 800f974:	08016657 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sl, sp, lr}
 800f978:	08016661 	stmdaeq	r1, {r0, r5, r6, r9, sl, sp, lr}
 800f97c:	08016695 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, sp, lr}
 800f980:	0801666c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, sp, lr}
 800f984:	0801668c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp, lr}
 800f988:	08014948 	stmdaeq	r1, {r3, r6, r8, fp, lr}
 800f98c:	0801493d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, lr}
 800f990:	08014949 	stmdaeq	r1, {r0, r3, r6, r8, fp, lr}

0800f994 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800f994:	b513      	push	{r0, r1, r4, lr}
 800f996:	6804      	ldr	r4, [r0, #0]
 800f998:	b914      	cbnz	r4, 800f9a0 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800f99a:	601c      	str	r4, [r3, #0]
 800f99c:	b002      	add	sp, #8
 800f99e:	bd10      	pop	{r4, pc}
 800f9a0:	9300      	str	r3, [sp, #0]
 800f9a2:	4613      	mov	r3, r2
 800f9a4:	460a      	mov	r2, r1
 800f9a6:	2100      	movs	r1, #0
 800f9a8:	f7ff fee8 	bl	800f77c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800f9ac:	e7f6      	b.n	800f99c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800f9ae <NetworkParams::Dump()>:
 800f9ae:	4770      	bx	lr

0800f9b0 <memcpy.isra.0>:
 800f9b0:	3801      	subs	r0, #1
 800f9b2:	440a      	add	r2, r1
 800f9b4:	4291      	cmp	r1, r2
 800f9b6:	d100      	bne.n	800f9ba <memcpy.isra.0+0xa>
 800f9b8:	4770      	bx	lr
 800f9ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f9be:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f9c2:	e7f7      	b.n	800f9b4 <memcpy.isra.0+0x4>

0800f9c4 <arp_announce>:
 800f9c4:	4803      	ldr	r0, [pc, #12]	; (800f9d4 <arp_announce+0x10>)
 800f9c6:	69c3      	ldr	r3, [r0, #28]
 800f9c8:	b113      	cbz	r3, 800f9d0 <arp_announce+0xc>
 800f9ca:	212a      	movs	r1, #42	; 0x2a
 800f9cc:	f003 be6c 	b.w	80136a8 <emac_eth_send>
 800f9d0:	4770      	bx	lr
 800f9d2:	bf00      	nop
 800f9d4:	20009780 	andcs	r9, r0, r0, lsl #15

0800f9d8 <arp_handle_request>:
 800f9d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f9da:	2204      	movs	r2, #4
 800f9dc:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800f9e0:	4604      	mov	r4, r0
 800f9e2:	eb0d 0002 	add.w	r0, sp, r2
 800f9e6:	f7ff ffe3 	bl	800f9b0 <memcpy.isra.0>
 800f9ea:	4b0d      	ldr	r3, [pc, #52]	; (800fa20 <arp_handle_request+0x48>)
 800f9ec:	9a01      	ldr	r2, [sp, #4]
 800f9ee:	69db      	ldr	r3, [r3, #28]
 800f9f0:	429a      	cmp	r2, r3
 800f9f2:	d113      	bne.n	800fa1c <arp_handle_request+0x44>
 800f9f4:	2206      	movs	r2, #6
 800f9f6:	4d0b      	ldr	r5, [pc, #44]	; (800fa24 <arp_handle_request+0x4c>)
 800f9f8:	18a1      	adds	r1, r4, r2
 800f9fa:	4628      	mov	r0, r5
 800f9fc:	f7ff ffd8 	bl	800f9b0 <memcpy.isra.0>
 800fa00:	f104 0116 	add.w	r1, r4, #22
 800fa04:	f105 0020 	add.w	r0, r5, #32
 800fa08:	2206      	movs	r2, #6
 800fa0a:	f7ff ffd1 	bl	800f9b0 <memcpy.isra.0>
 800fa0e:	69e3      	ldr	r3, [r4, #28]
 800fa10:	212a      	movs	r1, #42	; 0x2a
 800fa12:	4628      	mov	r0, r5
 800fa14:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800fa18:	f003 fe46 	bl	80136a8 <emac_eth_send>
 800fa1c:	b003      	add	sp, #12
 800fa1e:	bd30      	pop	{r4, r5, pc}
 800fa20:	20009780 	andcs	r9, r0, r0, lsl #15
 800fa24:	200097ac 	andcs	r9, r0, ip, lsr #15

0800fa28 <arp_handle_reply>:
 800fa28:	69c1      	ldr	r1, [r0, #28]
 800fa2a:	3016      	adds	r0, #22
 800fa2c:	f000 b80a 	b.w	800fa44 <arp_cache_update>

0800fa30 <arp_send_request>:
 800fa30:	4b03      	ldr	r3, [pc, #12]	; (800fa40 <arp_send_request+0x10>)
 800fa32:	212a      	movs	r1, #42	; 0x2a
 800fa34:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800fa38:	4618      	mov	r0, r3
 800fa3a:	f003 be35 	b.w	80136a8 <emac_eth_send>
 800fa3e:	bf00      	nop
 800fa40:	200097d8 	ldrdcs	r9, [r0], -r8

0800fa44 <arp_cache_update>:
 800fa44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa46:	4e11      	ldr	r6, [pc, #68]	; (800fa8c <arp_cache_update+0x48>)
 800fa48:	8833      	ldrh	r3, [r6, #0]
 800fa4a:	2b20      	cmp	r3, #32
 800fa4c:	d018      	beq.n	800fa80 <arp_cache_update+0x3c>
 800fa4e:	2400      	movs	r4, #0
 800fa50:	220c      	movs	r2, #12
 800fa52:	4d0f      	ldr	r5, [pc, #60]	; (800fa90 <arp_cache_update+0x4c>)
 800fa54:	b2a7      	uxth	r7, r4
 800fa56:	42bb      	cmp	r3, r7
 800fa58:	d80b      	bhi.n	800fa72 <arp_cache_update+0x2e>
 800fa5a:	fb02 5203 	mla	r2, r2, r3, r5
 800fa5e:	1d84      	adds	r4, r0, #6
 800fa60:	3203      	adds	r2, #3
 800fa62:	42a0      	cmp	r0, r4
 800fa64:	d10d      	bne.n	800fa82 <arp_cache_update+0x3e>
 800fa66:	220c      	movs	r2, #12
 800fa68:	435a      	muls	r2, r3
 800fa6a:	3301      	adds	r3, #1
 800fa6c:	50a9      	str	r1, [r5, r2]
 800fa6e:	8033      	strh	r3, [r6, #0]
 800fa70:	e006      	b.n	800fa80 <arp_cache_update+0x3c>
 800fa72:	3401      	adds	r4, #1
 800fa74:	fb02 5704 	mla	r7, r2, r4, r5
 800fa78:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800fa7c:	428f      	cmp	r7, r1
 800fa7e:	d1e9      	bne.n	800fa54 <arp_cache_update+0x10>
 800fa80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa82:	f810 7b01 	ldrb.w	r7, [r0], #1
 800fa86:	f802 7f01 	strb.w	r7, [r2, #1]!
 800fa8a:	e7ea      	b.n	800fa62 <arp_cache_update+0x1e>
 800fa8c:	20009984 	andcs	r9, r0, r4, lsl #19
 800fa90:	20009804 	andcs	r9, r0, r4, lsl #16

0800fa94 <arp_cache_lookup>:
 800fa94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa98:	2200      	movs	r2, #0
 800fa9a:	4606      	mov	r6, r0
 800fa9c:	460c      	mov	r4, r1
 800fa9e:	200c      	movs	r0, #12
 800faa0:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800fb28 <arp_cache_lookup+0x94>
 800faa4:	fb00 f302 	mul.w	r3, r0, r2
 800faa8:	f853 1008 	ldr.w	r1, [r3, r8]
 800faac:	42b1      	cmp	r1, r6
 800faae:	d10d      	bne.n	800facc <arp_cache_lookup+0x38>
 800fab0:	3304      	adds	r3, #4
 800fab2:	4443      	add	r3, r8
 800fab4:	3c01      	subs	r4, #1
 800fab6:	1d9a      	adds	r2, r3, #6
 800fab8:	4293      	cmp	r3, r2
 800faba:	d102      	bne.n	800fac2 <arp_cache_lookup+0x2e>
 800fabc:	4630      	mov	r0, r6
 800fabe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fac2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fac6:	f804 1f01 	strb.w	r1, [r4, #1]!
 800faca:	e7f5      	b.n	800fab8 <arp_cache_lookup+0x24>
 800facc:	b111      	cbz	r1, 800fad4 <arp_cache_lookup+0x40>
 800face:	3201      	adds	r2, #1
 800fad0:	2a20      	cmp	r2, #32
 800fad2:	d1e7      	bne.n	800faa4 <arp_cache_lookup+0x10>
 800fad4:	2704      	movs	r7, #4
 800fad6:	f8df a054 	ldr.w	sl, [pc, #84]	; 800fb2c <arp_cache_lookup+0x98>
 800fada:	f8ba 5000 	ldrh.w	r5, [sl]
 800fade:	3f01      	subs	r7, #1
 800fae0:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800fae4:	d101      	bne.n	800faea <arp_cache_lookup+0x56>
 800fae6:	463e      	mov	r6, r7
 800fae8:	e7e8      	b.n	800fabc <arp_cache_lookup+0x28>
 800faea:	4630      	mov	r0, r6
 800faec:	f7ff ffa0 	bl	800fa30 <arp_send_request>
 800faf0:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800faf4:	f1b9 0901 	subs.w	r9, r9, #1
 800faf8:	f8ba 3000 	ldrh.w	r3, [sl]
 800fafc:	d011      	beq.n	800fb22 <arp_cache_lookup+0x8e>
 800fafe:	429d      	cmp	r5, r3
 800fb00:	d00c      	beq.n	800fb1c <arp_cache_lookup+0x88>
 800fb02:	230c      	movs	r3, #12
 800fb04:	fb03 8505 	mla	r5, r3, r5, r8
 800fb08:	3c01      	subs	r4, #1
 800fb0a:	1d2b      	adds	r3, r5, #4
 800fb0c:	350a      	adds	r5, #10
 800fb0e:	42ab      	cmp	r3, r5
 800fb10:	d0d4      	beq.n	800fabc <arp_cache_lookup+0x28>
 800fb12:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb16:	f804 2f01 	strb.w	r2, [r4, #1]!
 800fb1a:	e7f8      	b.n	800fb0e <arp_cache_lookup+0x7a>
 800fb1c:	f7f7 fd00 	bl	8007520 <net_handle>
 800fb20:	e7e8      	b.n	800faf4 <arp_cache_lookup+0x60>
 800fb22:	429d      	cmp	r5, r3
 800fb24:	d0db      	beq.n	800fade <arp_cache_lookup+0x4a>
 800fb26:	e7ec      	b.n	800fb02 <arp_cache_lookup+0x6e>
 800fb28:	20009804 	andcs	r9, r0, r4, lsl #16
 800fb2c:	20009984 	andcs	r9, r0, r4, lsl #19

0800fb30 <_parse_response>:
 800fb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb34:	2400      	movs	r4, #0
 800fb36:	460d      	mov	r5, r1
 800fb38:	46a3      	mov	fp, r4
 800fb3a:	4627      	mov	r7, r4
 800fb3c:	46a2      	mov	sl, r4
 800fb3e:	46a1      	mov	r9, r4
 800fb40:	46a0      	mov	r8, r4
 800fb42:	4e50      	ldr	r6, [pc, #320]	; (800fc84 <_parse_response+0x154>)
 800fb44:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800fb48:	6833      	ldr	r3, [r6, #0]
 800fb4a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800fb4e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800fb52:	9009      	str	r0, [sp, #36]	; 0x24
 800fb54:	9402      	str	r4, [sp, #8]
 800fb56:	9407      	str	r4, [sp, #28]
 800fb58:	9308      	str	r3, [sp, #32]
 800fb5a:	f7f7 fce1 	bl	8007520 <net_handle>
 800fb5e:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800fb62:	9300      	str	r3, [sp, #0]
 800fb64:	f44f 7209 	mov.w	r2, #548	; 0x224
 800fb68:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800fb6c:	ab0c      	add	r3, sp, #48	; 0x30
 800fb6e:	a90d      	add	r1, sp, #52	; 0x34
 800fb70:	f7fe fe2a 	bl	800e7c8 <udp_recv>
 800fb74:	2800      	cmp	r0, #0
 800fb76:	d03f      	beq.n	800fbf8 <_parse_response+0xc8>
 800fb78:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800fb7c:	2b43      	cmp	r3, #67	; 0x43
 800fb7e:	d13b      	bne.n	800fbf8 <_parse_response+0xc8>
 800fb80:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800fb84:	1e6b      	subs	r3, r5, #1
 800fb86:	1d69      	adds	r1, r5, #5
 800fb88:	4299      	cmp	r1, r3
 800fb8a:	d12f      	bne.n	800fbec <_parse_response+0xbc>
 800fb8c:	2100      	movs	r1, #0
 800fb8e:	ab0d      	add	r3, sp, #52	; 0x34
 800fb90:	181d      	adds	r5, r3, r0
 800fb92:	468c      	mov	ip, r1
 800fb94:	460e      	mov	r6, r1
 800fb96:	4608      	mov	r0, r1
 800fb98:	ab49      	add	r3, sp, #292	; 0x124
 800fb9a:	42ab      	cmp	r3, r5
 800fb9c:	d337      	bcc.n	800fc0e <_parse_response+0xde>
 800fb9e:	b141      	cbz	r1, 800fbb2 <_parse_response+0x82>
 800fba0:	4b39      	ldr	r3, [pc, #228]	; (800fc88 <_parse_response+0x158>)
 800fba2:	9a07      	ldr	r2, [sp, #28]
 800fba4:	f883 8003 	strb.w	r8, [r3, #3]
 800fba8:	709a      	strb	r2, [r3, #2]
 800fbaa:	9a06      	ldr	r2, [sp, #24]
 800fbac:	705a      	strb	r2, [r3, #1]
 800fbae:	9a05      	ldr	r2, [sp, #20]
 800fbb0:	701a      	strb	r2, [r3, #0]
 800fbb2:	f1bc 0f00 	cmp.w	ip, #0
 800fbb6:	d007      	beq.n	800fbc8 <_parse_response+0x98>
 800fbb8:	4b34      	ldr	r3, [pc, #208]	; (800fc8c <_parse_response+0x15c>)
 800fbba:	9a04      	ldr	r2, [sp, #16]
 800fbbc:	705c      	strb	r4, [r3, #1]
 800fbbe:	70da      	strb	r2, [r3, #3]
 800fbc0:	9a03      	ldr	r2, [sp, #12]
 800fbc2:	709a      	strb	r2, [r3, #2]
 800fbc4:	9a02      	ldr	r2, [sp, #8]
 800fbc6:	701a      	strb	r2, [r3, #0]
 800fbc8:	b13e      	cbz	r6, 800fbda <_parse_response+0xaa>
 800fbca:	4b31      	ldr	r3, [pc, #196]	; (800fc90 <_parse_response+0x160>)
 800fbcc:	70df      	strb	r7, [r3, #3]
 800fbce:	f883 a002 	strb.w	sl, [r3, #2]
 800fbd2:	f883 9001 	strb.w	r9, [r3, #1]
 800fbd6:	f883 b000 	strb.w	fp, [r3]
 800fbda:	2802      	cmp	r0, #2
 800fbdc:	d102      	bne.n	800fbe4 <_parse_response+0xb4>
 800fbde:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fbe0:	4b2c      	ldr	r3, [pc, #176]	; (800fc94 <_parse_response+0x164>)
 800fbe2:	601a      	str	r2, [r3, #0]
 800fbe4:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800fbe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbec:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800fbf0:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800fbf4:	45e6      	cmp	lr, ip
 800fbf6:	d0c7      	beq.n	800fb88 <_parse_response+0x58>
 800fbf8:	6833      	ldr	r3, [r6, #0]
 800fbfa:	9a08      	ldr	r2, [sp, #32]
 800fbfc:	1a9b      	subs	r3, r3, r2
 800fbfe:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800fc02:	d3aa      	bcc.n	800fb5a <_parse_response+0x2a>
 800fc04:	2800      	cmp	r0, #0
 800fc06:	d1c1      	bne.n	800fb8c <_parse_response+0x5c>
 800fc08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fc0c:	e7ea      	b.n	800fbe4 <_parse_response+0xb4>
 800fc0e:	781a      	ldrb	r2, [r3, #0]
 800fc10:	2a35      	cmp	r2, #53	; 0x35
 800fc12:	d011      	beq.n	800fc38 <_parse_response+0x108>
 800fc14:	d808      	bhi.n	800fc28 <_parse_response+0xf8>
 800fc16:	2a01      	cmp	r2, #1
 800fc18:	d011      	beq.n	800fc3e <_parse_response+0x10e>
 800fc1a:	2a03      	cmp	r2, #3
 800fc1c:	d019      	beq.n	800fc52 <_parse_response+0x122>
 800fc1e:	b14a      	cbz	r2, 800fc34 <_parse_response+0x104>
 800fc20:	1c9a      	adds	r2, r3, #2
 800fc22:	785b      	ldrb	r3, [r3, #1]
 800fc24:	4413      	add	r3, r2
 800fc26:	e7b8      	b.n	800fb9a <_parse_response+0x6a>
 800fc28:	2a36      	cmp	r2, #54	; 0x36
 800fc2a:	d01f      	beq.n	800fc6c <_parse_response+0x13c>
 800fc2c:	2aff      	cmp	r2, #255	; 0xff
 800fc2e:	d1f7      	bne.n	800fc20 <_parse_response+0xf0>
 800fc30:	462b      	mov	r3, r5
 800fc32:	e7b2      	b.n	800fb9a <_parse_response+0x6a>
 800fc34:	3301      	adds	r3, #1
 800fc36:	e7b0      	b.n	800fb9a <_parse_response+0x6a>
 800fc38:	7898      	ldrb	r0, [r3, #2]
 800fc3a:	3303      	adds	r3, #3
 800fc3c:	e7ad      	b.n	800fb9a <_parse_response+0x6a>
 800fc3e:	f893 b002 	ldrb.w	fp, [r3, #2]
 800fc42:	f893 9003 	ldrb.w	r9, [r3, #3]
 800fc46:	f893 a004 	ldrb.w	sl, [r3, #4]
 800fc4a:	795f      	ldrb	r7, [r3, #5]
 800fc4c:	4616      	mov	r6, r2
 800fc4e:	3306      	adds	r3, #6
 800fc50:	e7a3      	b.n	800fb9a <_parse_response+0x6a>
 800fc52:	789a      	ldrb	r2, [r3, #2]
 800fc54:	78dc      	ldrb	r4, [r3, #3]
 800fc56:	9202      	str	r2, [sp, #8]
 800fc58:	791a      	ldrb	r2, [r3, #4]
 800fc5a:	f04f 0c01 	mov.w	ip, #1
 800fc5e:	9203      	str	r2, [sp, #12]
 800fc60:	795a      	ldrb	r2, [r3, #5]
 800fc62:	9204      	str	r2, [sp, #16]
 800fc64:	785a      	ldrb	r2, [r3, #1]
 800fc66:	4413      	add	r3, r2
 800fc68:	3302      	adds	r3, #2
 800fc6a:	e796      	b.n	800fb9a <_parse_response+0x6a>
 800fc6c:	789a      	ldrb	r2, [r3, #2]
 800fc6e:	f893 8005 	ldrb.w	r8, [r3, #5]
 800fc72:	9205      	str	r2, [sp, #20]
 800fc74:	78da      	ldrb	r2, [r3, #3]
 800fc76:	2101      	movs	r1, #1
 800fc78:	9206      	str	r2, [sp, #24]
 800fc7a:	791a      	ldrb	r2, [r3, #4]
 800fc7c:	3306      	adds	r3, #6
 800fc7e:	9207      	str	r2, [sp, #28]
 800fc80:	e78b      	b.n	800fb9a <_parse_response+0x6a>
 800fc82:	bf00      	nop
 800fc84:	2000aea4 	andcs	sl, r0, r4, lsr #29
 800fc88:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800fc8c:	20009988 	andcs	r9, r0, r8, lsl #19
 800fc90:	20009990 	mulcs	r0, r0, r9
 800fc94:	2000998c 	andcs	r9, r0, ip, lsl #19

0800fc98 <memcpy.isra.0>:
 800fc98:	3801      	subs	r0, #1
 800fc9a:	440a      	add	r2, r1
 800fc9c:	4291      	cmp	r1, r2
 800fc9e:	d100      	bne.n	800fca2 <memcpy.isra.0+0xa>
 800fca0:	4770      	bx	lr
 800fca2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fca6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fcaa:	e7f7      	b.n	800fc9c <memcpy.isra.0+0x4>

0800fcac <dhcp_client>:
 800fcac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcb0:	b087      	sub	sp, #28
 800fcb2:	9203      	str	r2, [sp, #12]
 800fcb4:	4a77      	ldr	r2, [pc, #476]	; (800fe94 <dhcp_client+0x1e8>)
 800fcb6:	460f      	mov	r7, r1
 800fcb8:	4605      	mov	r5, r0
 800fcba:	f44f 7309 	mov.w	r3, #548	; 0x224
 800fcbe:	4614      	mov	r4, r2
 800fcc0:	2100      	movs	r1, #0
 800fcc2:	3b01      	subs	r3, #1
 800fcc4:	f802 1b01 	strb.w	r1, [r2], #1
 800fcc8:	d1fb      	bne.n	800fcc2 <dhcp_client+0x16>
 800fcca:	f240 1301 	movw	r3, #257	; 0x101
 800fcce:	2206      	movs	r2, #6
 800fcd0:	4629      	mov	r1, r5
 800fcd2:	4871      	ldr	r0, [pc, #452]	; (800fe98 <dhcp_client+0x1ec>)
 800fcd4:	8023      	strh	r3, [r4, #0]
 800fcd6:	70a2      	strb	r2, [r4, #2]
 800fcd8:	f7ff ffde 	bl	800fc98 <memcpy.isra.0>
 800fcdc:	4b6f      	ldr	r3, [pc, #444]	; (800fe9c <dhcp_client+0x1f0>)
 800fcde:	2044      	movs	r0, #68	; 0x44
 800fce0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800fce4:	f240 1335 	movw	r3, #309	; 0x135
 800fce8:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800fcec:	f7fe fd32 	bl	800e754 <udp_bind>
 800fcf0:	1e06      	subs	r6, r0, #0
 800fcf2:	f2c0 80c9 	blt.w	800fe88 <dhcp_client+0x1dc>
 800fcf6:	f04f 0915 	mov.w	r9, #21
 800fcfa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800fe94 <dhcp_client+0x1e8>
 800fcfe:	f1b9 0901 	subs.w	r9, r9, #1
 800fd02:	d11f      	bne.n	800fd44 <dhcp_client+0x98>
 800fd04:	464c      	mov	r4, r9
 800fd06:	2044      	movs	r0, #68	; 0x44
 800fd08:	f7fe fd3e 	bl	800e788 <udp_unbind>
 800fd0c:	2c00      	cmp	r4, #0
 800fd0e:	f000 80be 	beq.w	800fe8e <dhcp_client+0x1e2>
 800fd12:	2204      	movs	r2, #4
 800fd14:	4962      	ldr	r1, [pc, #392]	; (800fea0 <dhcp_client+0x1f4>)
 800fd16:	a805      	add	r0, sp, #20
 800fd18:	f7ff ffbe 	bl	800fc98 <memcpy.isra.0>
 800fd1c:	9b05      	ldr	r3, [sp, #20]
 800fd1e:	2204      	movs	r2, #4
 800fd20:	4960      	ldr	r1, [pc, #384]	; (800fea4 <dhcp_client+0x1f8>)
 800fd22:	603b      	str	r3, [r7, #0]
 800fd24:	a805      	add	r0, sp, #20
 800fd26:	f7ff ffb7 	bl	800fc98 <memcpy.isra.0>
 800fd2a:	9b05      	ldr	r3, [sp, #20]
 800fd2c:	a805      	add	r0, sp, #20
 800fd2e:	60bb      	str	r3, [r7, #8]
 800fd30:	2204      	movs	r2, #4
 800fd32:	495d      	ldr	r1, [pc, #372]	; (800fea8 <dhcp_client+0x1fc>)
 800fd34:	f7ff ffb0 	bl	800fc98 <memcpy.isra.0>
 800fd38:	2000      	movs	r0, #0
 800fd3a:	9b05      	ldr	r3, [sp, #20]
 800fd3c:	607b      	str	r3, [r7, #4]
 800fd3e:	b007      	add	sp, #28
 800fd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd44:	f643 5301 	movw	r3, #15617	; 0x3d01
 800fd48:	f240 1807 	movw	r8, #263	; 0x107
 800fd4c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fd50:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fd54:	782b      	ldrb	r3, [r5, #0]
 800fd56:	4a55      	ldr	r2, [pc, #340]	; (800feac <dhcp_client+0x200>)
 800fd58:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fd5c:	786b      	ldrb	r3, [r5, #1]
 800fd5e:	fa5f fb86 	uxtb.w	fp, r6
 800fd62:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fd66:	78ab      	ldrb	r3, [r5, #2]
 800fd68:	4651      	mov	r1, sl
 800fd6a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fd6e:	78eb      	ldrb	r3, [r5, #3]
 800fd70:	4658      	mov	r0, fp
 800fd72:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fd76:	792b      	ldrb	r3, [r5, #4]
 800fd78:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fd7c:	796b      	ldrb	r3, [r5, #5]
 800fd7e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fd82:	4b4b      	ldr	r3, [pc, #300]	; (800feb0 <dhcp_client+0x204>)
 800fd84:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800fd88:	23ff      	movs	r3, #255	; 0xff
 800fd8a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800fd8e:	2343      	movs	r3, #67	; 0x43
 800fd90:	f240 1205 	movw	r2, #261	; 0x105
 800fd94:	9300      	str	r3, [sp, #0]
 800fd96:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fd9a:	f7fe fd71 	bl	800e880 <udp_send>
 800fd9e:	4629      	mov	r1, r5
 800fda0:	4630      	mov	r0, r6
 800fda2:	f7ff fec5 	bl	800fb30 <_parse_response>
 800fda6:	2802      	cmp	r0, #2
 800fda8:	d1a9      	bne.n	800fcfe <dhcp_client+0x52>
 800fdaa:	f643 5303 	movw	r3, #15619	; 0x3d03
 800fdae:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fdb2:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fdb6:	782b      	ldrb	r3, [r5, #0]
 800fdb8:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800feb4 <dhcp_client+0x208>
 800fdbc:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fdc0:	786b      	ldrb	r3, [r5, #1]
 800fdc2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fdc6:	78ab      	ldrb	r3, [r5, #2]
 800fdc8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fdcc:	78eb      	ldrb	r3, [r5, #3]
 800fdce:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fdd2:	792b      	ldrb	r3, [r5, #4]
 800fdd4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fdd8:	796b      	ldrb	r3, [r5, #5]
 800fdda:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fdde:	f240 4332 	movw	r3, #1074	; 0x432
 800fde2:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800fde6:	4b2e      	ldr	r3, [pc, #184]	; (800fea0 <dhcp_client+0x1f4>)
 800fde8:	881a      	ldrh	r2, [r3, #0]
 800fdea:	885b      	ldrh	r3, [r3, #2]
 800fdec:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800fdf0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800fdf4:	f240 4336 	movw	r3, #1078	; 0x436
 800fdf8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800fdfc:	4b2e      	ldr	r3, [pc, #184]	; (800feb8 <dhcp_client+0x20c>)
 800fdfe:	221e      	movs	r2, #30
 800fe00:	681b      	ldr	r3, [r3, #0]
 800fe02:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800fe06:	230c      	movs	r3, #12
 800fe08:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800fe0c:	9b03      	ldr	r3, [sp, #12]
 800fe0e:	1e58      	subs	r0, r3, #1
 800fe10:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800fe14:	f1a2 0e1e 	sub.w	lr, r2, #30
 800fe18:	1c51      	adds	r1, r2, #1
 800fe1a:	bb8b      	cbnz	r3, 800fe80 <dhcp_client+0x1d4>
 800fe1c:	2037      	movs	r0, #55	; 0x37
 800fe1e:	18a3      	adds	r3, r4, r2
 800fe20:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800fe24:	2006      	movs	r0, #6
 800fe26:	4421      	add	r1, r4
 800fe28:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800fe2c:	2103      	movs	r1, #3
 800fe2e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800fe32:	210f      	movs	r1, #15
 800fe34:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800fe38:	213a      	movs	r1, #58	; 0x3a
 800fe3a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800fe3e:	213b      	movs	r1, #59	; 0x3b
 800fe40:	f04f 0801 	mov.w	r8, #1
 800fe44:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800fe48:	21ff      	movs	r1, #255	; 0xff
 800fe4a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800fe4e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800fe52:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800fe56:	2343      	movs	r3, #67	; 0x43
 800fe58:	32f5      	adds	r2, #245	; 0xf5
 800fe5a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800fe5e:	4651      	mov	r1, sl
 800fe60:	9300      	str	r3, [sp, #0]
 800fe62:	b292      	uxth	r2, r2
 800fe64:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fe68:	4658      	mov	r0, fp
 800fe6a:	f7fe fd09 	bl	800e880 <udp_send>
 800fe6e:	4629      	mov	r1, r5
 800fe70:	4630      	mov	r0, r6
 800fe72:	f7ff fe5d 	bl	800fb30 <_parse_response>
 800fe76:	2805      	cmp	r0, #5
 800fe78:	f47f af41 	bne.w	800fcfe <dhcp_client+0x52>
 800fe7c:	4644      	mov	r4, r8
 800fe7e:	e742      	b.n	800fd06 <dhcp_client+0x5a>
 800fe80:	460a      	mov	r2, r1
 800fe82:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800fe86:	e7c3      	b.n	800fe10 <dhcp_client+0x164>
 800fe88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fe8c:	e757      	b.n	800fd3e <dhcp_client+0x92>
 800fe8e:	f06f 0001 	mvn.w	r0, #1
 800fe92:	e754      	b.n	800fd3e <dhcp_client+0x92>
 800fe94:	20009994 	mulcs	r0, r4, r9
 800fe98:	200099b0 			; <UNDEFINED> instruction: 0x200099b0
 800fe9c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800fea0:	2000998c 	andcs	r9, r0, ip, lsl #19
 800fea4:	20009988 	andcs	r9, r0, r8, lsl #19
 800fea8:	20009990 	mulcs	r0, r0, r9
 800feac:	03010637 	movweq	r0, #5687	; 0x1637
 800feb0:	3b3a0f06 	blcc	8e93ad0 <__exidx_end+0xe7cb88>
 800feb4:	20009a9d 	mulcs	r0, sp, sl
 800feb8:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800febc <dhcp_client_release>:
 800febc:	b507      	push	{r0, r1, r2, lr}
 800febe:	2044      	movs	r0, #68	; 0x44
 800fec0:	f7fe fc48 	bl	800e754 <udp_bind>
 800fec4:	f243 6307 	movw	r3, #13831	; 0x3607
 800fec8:	4911      	ldr	r1, [pc, #68]	; (800ff10 <dhcp_client_release+0x54>)
 800feca:	b2c0      	uxtb	r0, r0
 800fecc:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800fed0:	2304      	movs	r3, #4
 800fed2:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800fed6:	4b0f      	ldr	r3, [pc, #60]	; (800ff14 <dhcp_client_release+0x58>)
 800fed8:	781a      	ldrb	r2, [r3, #0]
 800feda:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800fede:	785a      	ldrb	r2, [r3, #1]
 800fee0:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800fee4:	789a      	ldrb	r2, [r3, #2]
 800fee6:	78db      	ldrb	r3, [r3, #3]
 800fee8:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800feec:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800fef0:	23ff      	movs	r3, #255	; 0xff
 800fef2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800fef6:	2343      	movs	r3, #67	; 0x43
 800fef8:	22fa      	movs	r2, #250	; 0xfa
 800fefa:	9300      	str	r3, [sp, #0]
 800fefc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ff00:	f7fe fcbe 	bl	800e880 <udp_send>
 800ff04:	2044      	movs	r0, #68	; 0x44
 800ff06:	b003      	add	sp, #12
 800ff08:	f85d eb04 	ldr.w	lr, [sp], #4
 800ff0c:	f7fe bc3c 	b.w	800e788 <udp_unbind>
 800ff10:	20009994 	mulcs	r0, r4, r9
 800ff14:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800ff18 <memcpy.isra.0>:
 800ff18:	3801      	subs	r0, #1
 800ff1a:	440a      	add	r2, r1
 800ff1c:	4291      	cmp	r1, r2
 800ff1e:	d100      	bne.n	800ff22 <memcpy.isra.0+0xa>
 800ff20:	4770      	bx	lr
 800ff22:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ff26:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ff2a:	e7f7      	b.n	800ff1c <memcpy.isra.0+0x4>

0800ff2c <_send_report>:
 800ff2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ff2e:	491c      	ldr	r1, [pc, #112]	; (800ffa0 <_send_report+0x74>)
 800ff30:	4c1c      	ldr	r4, [pc, #112]	; (800ffa4 <_send_report+0x78>)
 800ff32:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800ff36:	9001      	str	r0, [sp, #4]
 800ff38:	70cb      	strb	r3, [r1, #3]
 800ff3a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800ff3e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800ff42:	710b      	strb	r3, [r1, #4]
 800ff44:	7148      	strb	r0, [r1, #5]
 800ff46:	2206      	movs	r2, #6
 800ff48:	4620      	mov	r0, r4
 800ff4a:	f7ff ffe5 	bl	800ff18 <memcpy.isra.0>
 800ff4e:	2204      	movs	r2, #4
 800ff50:	2700      	movs	r7, #0
 800ff52:	4d15      	ldr	r5, [pc, #84]	; (800ffa8 <_send_report+0x7c>)
 800ff54:	eb0d 0102 	add.w	r1, sp, r2
 800ff58:	882b      	ldrh	r3, [r5, #0]
 800ff5a:	f104 001e 	add.w	r0, r4, #30
 800ff5e:	f104 060e 	add.w	r6, r4, #14
 800ff62:	8263      	strh	r3, [r4, #18]
 800ff64:	f7ff ffd8 	bl	800ff18 <memcpy.isra.0>
 800ff68:	2118      	movs	r1, #24
 800ff6a:	4630      	mov	r0, r6
 800ff6c:	8327      	strh	r7, [r4, #24]
 800ff6e:	f000 f8c6 	bl	80100fe <net_chksum>
 800ff72:	2204      	movs	r2, #4
 800ff74:	8320      	strh	r0, [r4, #24]
 800ff76:	eb0d 0102 	add.w	r1, sp, r2
 800ff7a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800ff7e:	f7ff ffcb 	bl	800ff18 <memcpy.isra.0>
 800ff82:	2120      	movs	r1, #32
 800ff84:	4630      	mov	r0, r6
 800ff86:	8527      	strh	r7, [r4, #40]	; 0x28
 800ff88:	f000 f8b9 	bl	80100fe <net_chksum>
 800ff8c:	212e      	movs	r1, #46	; 0x2e
 800ff8e:	8520      	strh	r0, [r4, #40]	; 0x28
 800ff90:	4620      	mov	r0, r4
 800ff92:	f003 fb89 	bl	80136a8 <emac_eth_send>
 800ff96:	882b      	ldrh	r3, [r5, #0]
 800ff98:	3301      	adds	r3, #1
 800ff9a:	802b      	strh	r3, [r5, #0]
 800ff9c:	b003      	add	sp, #12
 800ff9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffa0:	20009d14 	andcs	r9, r0, r4, lsl sp
 800ffa4:	20009d1c 	andcs	r9, r0, ip, lsl sp
 800ffa8:	20009cdc 	ldrdcs	r9, [r0], -ip

0800ffac <igmp_set_ip>:
 800ffac:	b507      	push	{r0, r1, r2, lr}
 800ffae:	2204      	movs	r2, #4
 800ffb0:	6803      	ldr	r3, [r0, #0]
 800ffb2:	eb0d 0102 	add.w	r1, sp, r2
 800ffb6:	4806      	ldr	r0, [pc, #24]	; (800ffd0 <igmp_set_ip+0x24>)
 800ffb8:	9301      	str	r3, [sp, #4]
 800ffba:	f7ff ffad 	bl	800ff18 <memcpy.isra.0>
 800ffbe:	2204      	movs	r2, #4
 800ffc0:	4804      	ldr	r0, [pc, #16]	; (800ffd4 <igmp_set_ip+0x28>)
 800ffc2:	eb0d 0102 	add.w	r1, sp, r2
 800ffc6:	f7ff ffa7 	bl	800ff18 <memcpy.isra.0>
 800ffca:	b003      	add	sp, #12
 800ffcc:	f85d fb04 	ldr.w	pc, [sp], #4
 800ffd0:	20009d36 	andcs	r9, r0, r6, lsr sp
 800ffd4:	20009cfe 	strdcs	r9, [r0], -lr

0800ffd8 <igmp_timer>:
 800ffd8:	b570      	push	{r4, r5, r6, lr}
 800ffda:	2500      	movs	r5, #0
 800ffdc:	2602      	movs	r6, #2
 800ffde:	4c0a      	ldr	r4, [pc, #40]	; (8010008 <igmp_timer+0x30>)
 800ffe0:	7963      	ldrb	r3, [r4, #5]
 800ffe2:	2b01      	cmp	r3, #1
 800ffe4:	d109      	bne.n	800fffa <igmp_timer+0x22>
 800ffe6:	7923      	ldrb	r3, [r4, #4]
 800ffe8:	b13b      	cbz	r3, 800fffa <igmp_timer+0x22>
 800ffea:	3b01      	subs	r3, #1
 800ffec:	b2db      	uxtb	r3, r3
 800ffee:	7123      	strb	r3, [r4, #4]
 800fff0:	b91b      	cbnz	r3, 800fffa <igmp_timer+0x22>
 800fff2:	6820      	ldr	r0, [r4, #0]
 800fff4:	f7ff ff9a 	bl	800ff2c <_send_report>
 800fff8:	7166      	strb	r6, [r4, #5]
 800fffa:	3501      	adds	r5, #1
 800fffc:	2d24      	cmp	r5, #36	; 0x24
 800fffe:	f104 0408 	add.w	r4, r4, #8
 8010002:	d1ed      	bne.n	800ffe0 <igmp_timer+0x8>
 8010004:	bd70      	pop	{r4, r5, r6, pc}
 8010006:	bf00      	nop
 8010008:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0801000c <igmp_join>:
 801000c:	b538      	push	{r3, r4, r5, lr}
 801000e:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8010012:	2be0      	cmp	r3, #224	; 0xe0
 8010014:	d11b      	bne.n	801004e <igmp_join+0x42>
 8010016:	4911      	ldr	r1, [pc, #68]	; (801005c <igmp_join+0x50>)
 8010018:	680c      	ldr	r4, [r1, #0]
 801001a:	2c24      	cmp	r4, #36	; 0x24
 801001c:	d01a      	beq.n	8010054 <igmp_join+0x48>
 801001e:	2300      	movs	r3, #0
 8010020:	4a0f      	ldr	r2, [pc, #60]	; (8010060 <igmp_join+0x54>)
 8010022:	429c      	cmp	r4, r3
 8010024:	dc0d      	bgt.n	8010042 <igmp_join+0x36>
 8010026:	f44f 7381 	mov.w	r3, #258	; 0x102
 801002a:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 801002e:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8010032:	8093      	strh	r3, [r2, #4]
 8010034:	1c63      	adds	r3, r4, #1
 8010036:	600b      	str	r3, [r1, #0]
 8010038:	f7ff ff78 	bl	800ff2c <_send_report>
 801003c:	4623      	mov	r3, r4
 801003e:	4618      	mov	r0, r3
 8010040:	bd38      	pop	{r3, r4, r5, pc}
 8010042:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8010046:	4285      	cmp	r5, r0
 8010048:	d0f9      	beq.n	801003e <igmp_join+0x32>
 801004a:	3301      	adds	r3, #1
 801004c:	e7e9      	b.n	8010022 <igmp_join+0x16>
 801004e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010052:	e7f4      	b.n	801003e <igmp_join+0x32>
 8010054:	f06f 0301 	mvn.w	r3, #1
 8010058:	e7f1      	b.n	801003e <igmp_join+0x32>
 801005a:	bf00      	nop
 801005c:	20009ce0 	andcs	r9, r0, r0, ror #25
 8010060:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08010064 <igmp_leave>:
 8010064:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010068:	2600      	movs	r6, #0
 801006a:	4f1c      	ldr	r7, [pc, #112]	; (80100dc <igmp_leave+0x78>)
 801006c:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8010070:	4283      	cmp	r3, r0
 8010072:	d007      	beq.n	8010084 <igmp_leave+0x20>
 8010074:	3601      	adds	r6, #1
 8010076:	2e24      	cmp	r6, #36	; 0x24
 8010078:	d1f8      	bne.n	801006c <igmp_leave+0x8>
 801007a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801007e:	b002      	add	sp, #8
 8010080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010084:	2400      	movs	r4, #0
 8010086:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80100e0 <igmp_leave+0x7c>
 801008a:	4d16      	ldr	r5, [pc, #88]	; (80100e4 <igmp_leave+0x80>)
 801008c:	f8b8 3000 	ldrh.w	r3, [r8]
 8010090:	2118      	movs	r1, #24
 8010092:	9001      	str	r0, [sp, #4]
 8010094:	4814      	ldr	r0, [pc, #80]	; (80100e8 <igmp_leave+0x84>)
 8010096:	826b      	strh	r3, [r5, #18]
 8010098:	832c      	strh	r4, [r5, #24]
 801009a:	f000 f830 	bl	80100fe <net_chksum>
 801009e:	2204      	movs	r2, #4
 80100a0:	8328      	strh	r0, [r5, #24]
 80100a2:	eb0d 0102 	add.w	r1, sp, r2
 80100a6:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80100aa:	f7ff ff35 	bl	800ff18 <memcpy.isra.0>
 80100ae:	2120      	movs	r1, #32
 80100b0:	f105 000e 	add.w	r0, r5, #14
 80100b4:	852c      	strh	r4, [r5, #40]	; 0x28
 80100b6:	f000 f822 	bl	80100fe <net_chksum>
 80100ba:	212e      	movs	r1, #46	; 0x2e
 80100bc:	8528      	strh	r0, [r5, #40]	; 0x28
 80100be:	4628      	mov	r0, r5
 80100c0:	f003 faf2 	bl	80136a8 <emac_eth_send>
 80100c4:	f8b8 3000 	ldrh.w	r3, [r8]
 80100c8:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 80100cc:	3301      	adds	r3, #1
 80100ce:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 80100d2:	4620      	mov	r0, r4
 80100d4:	f8a8 3000 	strh.w	r3, [r8]
 80100d8:	80bc      	strh	r4, [r7, #4]
 80100da:	e7d0      	b.n	801007e <igmp_leave+0x1a>
 80100dc:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 80100e0:	20009cdc 	ldrdcs	r9, [r0], -ip
 80100e4:	20009ce4 	andcs	r9, r0, r4, ror #25
 80100e8:	20009d2a 	andcs	r9, r0, sl, lsr #26

080100ec <ip_set_ip>:
 80100ec:	b510      	push	{r4, lr}
 80100ee:	4604      	mov	r4, r0
 80100f0:	f7fe fb10 	bl	800e714 <udp_set_ip>
 80100f4:	4620      	mov	r0, r4
 80100f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80100fa:	f7ff bf57 	b.w	800ffac <igmp_set_ip>

080100fe <net_chksum>:
 80100fe:	2300      	movs	r3, #0
 8010100:	f021 0201 	bic.w	r2, r1, #1
 8010104:	b530      	push	{r4, r5, lr}
 8010106:	1884      	adds	r4, r0, r2
 8010108:	42a0      	cmp	r0, r4
 801010a:	d10b      	bne.n	8010124 <net_chksum+0x26>
 801010c:	4291      	cmp	r1, r2
 801010e:	d004      	beq.n	801011a <net_chksum+0x1c>
 8010110:	7802      	ldrb	r2, [r0, #0]
 8010112:	0212      	lsls	r2, r2, #8
 8010114:	ba52      	rev16	r2, r2
 8010116:	b292      	uxth	r2, r2
 8010118:	4413      	add	r3, r2
 801011a:	0c1a      	lsrs	r2, r3, #16
 801011c:	d106      	bne.n	801012c <net_chksum+0x2e>
 801011e:	43d8      	mvns	r0, r3
 8010120:	b280      	uxth	r0, r0
 8010122:	bd30      	pop	{r4, r5, pc}
 8010124:	f830 5b02 	ldrh.w	r5, [r0], #2
 8010128:	442b      	add	r3, r5
 801012a:	e7ed      	b.n	8010108 <net_chksum+0xa>
 801012c:	b29b      	uxth	r3, r3
 801012e:	e7f3      	b.n	8010118 <net_chksum+0x1a>

08010130 <net::link_register_read()>:
 8010130:	b507      	push	{r0, r1, r2, lr}
 8010132:	2201      	movs	r2, #1
 8010134:	f10d 0306 	add.w	r3, sp, #6
 8010138:	4611      	mov	r1, r2
 801013a:	2000      	movs	r0, #0
 801013c:	f002 fc0c 	bl	8012958 <enet_phy_write_read>
 8010140:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010144:	f080 0004 	eor.w	r0, r0, #4
 8010148:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801014c:	b003      	add	sp, #12
 801014e:	f85d fb04 	ldr.w	pc, [sp], #4

08010152 <memcpy.isra.0>:
 8010152:	3801      	subs	r0, #1
 8010154:	440a      	add	r2, r1
 8010156:	4291      	cmp	r1, r2
 8010158:	d100      	bne.n	801015c <memcpy.isra.0+0xa>
 801015a:	4770      	bx	lr
 801015c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010160:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010164:	e7f7      	b.n	8010156 <memcpy.isra.0+0x4>

08010166 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8010166:	b430      	push	{r4, r5}
 8010168:	b168      	cbz	r0, 8010186 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 801016a:	2300      	movs	r3, #0
 801016c:	7905      	ldrb	r5, [r0, #4]
 801016e:	5cd4      	ldrb	r4, [r2, r3]
 8010170:	b11c      	cbz	r4, 801017a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8010172:	1c5c      	adds	r4, r3, #1
 8010174:	429d      	cmp	r5, r3
 8010176:	4623      	mov	r3, r4
 8010178:	dcf9      	bgt.n	801016e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 801017a:	6804      	ldr	r4, [r0, #0]
 801017c:	b2db      	uxtb	r3, r3
 801017e:	69e4      	ldr	r4, [r4, #28]
 8010180:	46a4      	mov	ip, r4
 8010182:	bc30      	pop	{r4, r5}
 8010184:	4760      	bx	ip
 8010186:	bc30      	pop	{r4, r5}
 8010188:	4770      	bx	lr

0801018a <Display::ClearLine(unsigned char) [clone .isra.0]>:
 801018a:	b110      	cbz	r0, 8010192 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801018c:	6803      	ldr	r3, [r0, #0]
 801018e:	691b      	ldr	r3, [r3, #16]
 8010190:	4718      	bx	r3
 8010192:	4770      	bx	lr

08010194 <DisplayUdf::DisplayUdf()>:
 8010194:	b510      	push	{r4, lr}
 8010196:	4604      	mov	r4, r0
 8010198:	f001 fc4e 	bl	8011a38 <Display::Display()>
 801019c:	2202      	movs	r2, #2
 801019e:	2300      	movs	r3, #0
 80101a0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 80101a4:	4b05      	ldr	r3, [pc, #20]	; (80101bc <DisplayUdf::DisplayUdf()+0x28>)
 80101a6:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 80101aa:	601c      	str	r4, [r3, #0]
 80101ac:	2301      	movs	r3, #1
 80101ae:	f802 3f01 	strb.w	r3, [r2, #1]!
 80101b2:	3301      	adds	r3, #1
 80101b4:	2b15      	cmp	r3, #21
 80101b6:	d1fa      	bne.n	80101ae <DisplayUdf::DisplayUdf()+0x1a>
 80101b8:	4620      	mov	r0, r4
 80101ba:	bd10      	pop	{r4, pc}
 80101bc:	20009d4c 	andcs	r9, r0, ip, asr #26

080101c0 <DisplayUdf::SetTitle(char const*, ...)>:
 80101c0:	b40e      	push	{r1, r2, r3}
 80101c2:	b517      	push	{r0, r1, r2, r4, lr}
 80101c4:	ab05      	add	r3, sp, #20
 80101c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80101ca:	4604      	mov	r4, r0
 80101cc:	211f      	movs	r1, #31
 80101ce:	301c      	adds	r0, #28
 80101d0:	9301      	str	r3, [sp, #4]
 80101d2:	f7f9 f895 	bl	8009300 <vsnprintf>
 80101d6:	2300      	movs	r3, #0
 80101d8:	4404      	add	r4, r0
 80101da:	7723      	strb	r3, [r4, #28]
 80101dc:	b003      	add	sp, #12
 80101de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101e2:	b003      	add	sp, #12
 80101e4:	4770      	bx	lr

080101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80101e6:	1e4b      	subs	r3, r1, #1
 80101e8:	2b05      	cmp	r3, #5
 80101ea:	b530      	push	{r4, r5, lr}
 80101ec:	d80f      	bhi.n	801020e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80101ee:	2300      	movs	r3, #0
 80101f0:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80101f4:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80101f8:	428d      	cmp	r5, r1
 80101fa:	d109      	bne.n	8010210 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80101fc:	1884      	adds	r4, r0, r2
 80101fe:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8010202:	4403      	add	r3, r0
 8010204:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8010208:	4410      	add	r0, r2
 801020a:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 801020e:	bd30      	pop	{r4, r5, pc}
 8010210:	3301      	adds	r3, #1
 8010212:	2b14      	cmp	r3, #20
 8010214:	d1ee      	bne.n	80101f4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8010216:	e7f7      	b.n	8010208 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

08010218 <DisplayUdf::ShowEmacStart()>:
 8010218:	b510      	push	{r4, lr}
 801021a:	4604      	mov	r4, r0
 801021c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010220:	6980      	ldr	r0, [r0, #24]
 8010222:	f7ff ffb2 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010226:	4620      	mov	r0, r4
 8010228:	4a02      	ldr	r2, [pc, #8]	; (8010234 <DisplayUdf::ShowEmacStart()+0x1c>)
 801022a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801022e:	f7f8 fa0d 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010232:	bd10      	pop	{r4, pc}
 8010234:	080166b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, sp, lr}

08010238 <DisplayUdf::ShowIpAddress()>:
 8010238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801023c:	4604      	mov	r4, r0
 801023e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8010242:	b086      	sub	sp, #24
 8010244:	6980      	ldr	r0, [r0, #24]
 8010246:	f7ff ffa0 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 801024a:	4b13      	ldr	r3, [pc, #76]	; (8010298 <DisplayUdf::ShowIpAddress()+0x60>)
 801024c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8010250:	681d      	ldr	r5, [r3, #0]
 8010252:	69e8      	ldr	r0, [r5, #28]
 8010254:	696e      	ldr	r6, [r5, #20]
 8010256:	f004 f8e9 	bl	801442c <__popcountsi2>
 801025a:	79eb      	ldrb	r3, [r5, #7]
 801025c:	fa5f f886 	uxtb.w	r8, r6
 8010260:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8010264:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8010268:	0e36      	lsrs	r6, r6, #24
 801026a:	b99b      	cbnz	r3, 8010294 <DisplayUdf::ShowIpAddress()+0x5c>
 801026c:	796b      	ldrb	r3, [r5, #5]
 801026e:	2b00      	cmp	r3, #0
 8010270:	bf14      	ite	ne
 8010272:	2244      	movne	r2, #68	; 0x44
 8010274:	2253      	moveq	r2, #83	; 0x53
 8010276:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801027a:	4643      	mov	r3, r8
 801027c:	4639      	mov	r1, r7
 801027e:	4620      	mov	r0, r4
 8010280:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010284:	4a05      	ldr	r2, [pc, #20]	; (801029c <DisplayUdf::ShowIpAddress()+0x64>)
 8010286:	f8cd 9000 	str.w	r9, [sp]
 801028a:	f7f8 f9df 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 801028e:	b006      	add	sp, #24
 8010290:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010294:	225a      	movs	r2, #90	; 0x5a
 8010296:	e7ee      	b.n	8010276 <DisplayUdf::ShowIpAddress()+0x3e>
 8010298:	2000977c 	andcs	r9, r0, ip, ror r7
 801029c:	080166c2 	stmdaeq	r1, {r1, r6, r7, r9, sl, sp, lr}

080102a0 <DisplayUdf::ShowNetmask()>:
 80102a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80102a2:	4604      	mov	r4, r0
 80102a4:	4b0b      	ldr	r3, [pc, #44]	; (80102d4 <DisplayUdf::ShowNetmask()+0x34>)
 80102a6:	681b      	ldr	r3, [r3, #0]
 80102a8:	69db      	ldr	r3, [r3, #28]
 80102aa:	0e1a      	lsrs	r2, r3, #24
 80102ac:	9202      	str	r2, [sp, #8]
 80102ae:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80102b2:	9201      	str	r2, [sp, #4]
 80102b4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80102b8:	9200      	str	r2, [sp, #0]
 80102ba:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 80102be:	4a06      	ldr	r2, [pc, #24]	; (80102d8 <DisplayUdf::ShowNetmask()+0x38>)
 80102c0:	b2db      	uxtb	r3, r3
 80102c2:	f7f8 f9c3 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80102c6:	4620      	mov	r0, r4
 80102c8:	b004      	add	sp, #16
 80102ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102ce:	f7ff bfb3 	b.w	8010238 <DisplayUdf::ShowIpAddress()>
 80102d2:	bf00      	nop
 80102d4:	2000977c 	andcs	r9, r0, ip, ror r7
 80102d8:	080166d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp, lr}

080102dc <DisplayUdf::ShowGatewayIp()>:
 80102dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80102de:	4604      	mov	r4, r0
 80102e0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80102e4:	6980      	ldr	r0, [r0, #24]
 80102e6:	f7ff ff50 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80102ea:	4b0a      	ldr	r3, [pc, #40]	; (8010314 <DisplayUdf::ShowGatewayIp()+0x38>)
 80102ec:	4620      	mov	r0, r4
 80102ee:	681b      	ldr	r3, [r3, #0]
 80102f0:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80102f4:	699b      	ldr	r3, [r3, #24]
 80102f6:	0e1a      	lsrs	r2, r3, #24
 80102f8:	9202      	str	r2, [sp, #8]
 80102fa:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80102fe:	9201      	str	r2, [sp, #4]
 8010300:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010304:	9200      	str	r2, [sp, #0]
 8010306:	b2db      	uxtb	r3, r3
 8010308:	4a03      	ldr	r2, [pc, #12]	; (8010318 <DisplayUdf::ShowGatewayIp()+0x3c>)
 801030a:	f7f8 f99f 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 801030e:	b004      	add	sp, #16
 8010310:	bd10      	pop	{r4, pc}
 8010312:	bf00      	nop
 8010314:	2000977c 	andcs	r9, r0, ip, ror r7
 8010318:	080166e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, sl, sp, lr}

0801031c <DisplayUdf::ShowHostName()>:
 801031c:	b510      	push	{r4, lr}
 801031e:	4604      	mov	r4, r0
 8010320:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8010324:	6980      	ldr	r0, [r0, #24]
 8010326:	f7ff ff30 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 801032a:	4b05      	ldr	r3, [pc, #20]	; (8010340 <DisplayUdf::ShowHostName()+0x24>)
 801032c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8010330:	681a      	ldr	r2, [r3, #0]
 8010332:	69a0      	ldr	r0, [r4, #24]
 8010334:	3220      	adds	r2, #32
 8010336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801033a:	f7ff bf14 	b.w	8010166 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801033e:	bf00      	nop
 8010340:	2000977c 	andcs	r9, r0, ip, ror r7

08010344 <DisplayUdf::Show()>:
 8010344:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010346:	4604      	mov	r4, r0
 8010348:	21ff      	movs	r1, #255	; 0xff
 801034a:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 801034e:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8010352:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010356:	2806      	cmp	r0, #6
 8010358:	bf88      	it	hi
 801035a:	7019      	strbhi	r1, [r3, #0]
 801035c:	429a      	cmp	r2, r3
 801035e:	d1f8      	bne.n	8010352 <DisplayUdf::Show()+0xe>
 8010360:	2501      	movs	r5, #1
 8010362:	4629      	mov	r1, r5
 8010364:	3501      	adds	r5, #1
 8010366:	69a0      	ldr	r0, [r4, #24]
 8010368:	b2ed      	uxtb	r5, r5
 801036a:	f7ff ff0e 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 801036e:	2d06      	cmp	r5, #6
 8010370:	d1f7      	bne.n	8010362 <DisplayUdf::Show()+0x1e>
 8010372:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8010376:	69a0      	ldr	r0, [r4, #24]
 8010378:	f104 021c 	add.w	r2, r4, #28
 801037c:	f7ff fef3 	bl	8010166 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010380:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8010384:	69a0      	ldr	r0, [r4, #24]
 8010386:	4a0d      	ldr	r2, [pc, #52]	; (80103bc <DisplayUdf::Show()+0x78>)
 8010388:	f7ff feed 	bl	8010166 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801038c:	4b0c      	ldr	r3, [pc, #48]	; (80103c0 <DisplayUdf::Show()+0x7c>)
 801038e:	4a0d      	ldr	r2, [pc, #52]	; (80103c4 <DisplayUdf::Show()+0x80>)
 8010390:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8010394:	9300      	str	r3, [sp, #0]
 8010396:	4620      	mov	r0, r4
 8010398:	2303      	movs	r3, #3
 801039a:	f7f8 f957 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 801039e:	4620      	mov	r0, r4
 80103a0:	f7ff ff4a 	bl	8010238 <DisplayUdf::ShowIpAddress()>
 80103a4:	4620      	mov	r0, r4
 80103a6:	f7ff ff99 	bl	80102dc <DisplayUdf::ShowGatewayIp()>
 80103aa:	4620      	mov	r0, r4
 80103ac:	f7ff ff78 	bl	80102a0 <DisplayUdf::ShowNetmask()>
 80103b0:	4620      	mov	r0, r4
 80103b2:	b003      	add	sp, #12
 80103b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80103b8:	f7ff bfb0 	b.w	801031c <DisplayUdf::ShowHostName()>
 80103bc:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 80103c0:	2000ae30 	andcs	sl, r0, r0, lsr lr
 80103c4:	080166f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sl, sp, lr}

080103c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80103c8:	3901      	subs	r1, #1
 80103ca:	b510      	push	{r4, lr}
 80103cc:	4604      	mov	r4, r0
 80103ce:	2903      	cmp	r1, #3
 80103d0:	d814      	bhi.n	80103fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80103d2:	e8df f001 	tbb	[pc, r1]
 80103d6:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80103da:	4b14      	ldr	r3, [pc, #80]	; (801042c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80103dc:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80103e0:	6818      	ldr	r0, [r3, #0]
 80103e2:	f7f9 fa03 	bl	80097ec <Display::Status(Display7SegmentMessage)>
 80103e6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80103ea:	69a0      	ldr	r0, [r4, #24]
 80103ec:	f7ff fecd 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 80103f0:	4a0f      	ldr	r2, [pc, #60]	; (8010430 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80103f2:	4620      	mov	r0, r4
 80103f4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80103f8:	f7f8 f928 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 80103fc:	bd10      	pop	{r4, pc}
 80103fe:	f248 0180 	movw	r1, #32896	; 0x8080
 8010402:	4b0a      	ldr	r3, [pc, #40]	; (801042c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8010404:	6818      	ldr	r0, [r3, #0]
 8010406:	f7f9 f9f1 	bl	80097ec <Display::Status(Display7SegmentMessage)>
 801040a:	e7f7      	b.n	80103fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801040c:	4b07      	ldr	r3, [pc, #28]	; (801042c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 801040e:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8010412:	6818      	ldr	r0, [r3, #0]
 8010414:	f7f9 f9ea 	bl	80097ec <Display::Status(Display7SegmentMessage)>
 8010418:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801041c:	69a0      	ldr	r0, [r4, #24]
 801041e:	f7ff feb4 	bl	801018a <Display::ClearLine(unsigned char) [clone .isra.0]>
 8010422:	4a04      	ldr	r2, [pc, #16]	; (8010434 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8010424:	e7e5      	b.n	80103f2 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8010426:	f645 3179 	movw	r1, #23417	; 0x5b79
 801042a:	e7ea      	b.n	8010402 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 801042c:	2000ada0 	andcs	sl, r0, r0, lsr #27
 8010430:	08016701 	stmdaeq	r1, {r0, r8, r9, sl, sp, lr}
 8010434:	0801670f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, sp, lr}

08010438 <DisplayUdf::ShowShutdown()>:
 8010438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801043c:	4604      	mov	r4, r0
 801043e:	6980      	ldr	r0, [r0, #24]
 8010440:	b1d0      	cbz	r0, 8010478 <DisplayUdf::ShowShutdown()+0x40>
 8010442:	f890 8005 	ldrb.w	r8, [r0, #5]
 8010446:	6803      	ldr	r3, [r0, #0]
 8010448:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 801044c:	b2ed      	uxtb	r5, r5
 801044e:	462a      	mov	r2, r5
 8010450:	2100      	movs	r1, #0
 8010452:	6a1b      	ldr	r3, [r3, #32]
 8010454:	7906      	ldrb	r6, [r0, #4]
 8010456:	2700      	movs	r7, #0
 8010458:	4798      	blx	r3
 801045a:	3e01      	subs	r6, #1
 801045c:	42b7      	cmp	r7, r6
 801045e:	69a0      	ldr	r0, [r4, #24]
 8010460:	d311      	bcc.n	8010486 <DisplayUdf::ShowShutdown()+0x4e>
 8010462:	b120      	cbz	r0, 801046e <DisplayUdf::ShowShutdown()+0x36>
 8010464:	6803      	ldr	r3, [r0, #0]
 8010466:	462a      	mov	r2, r5
 8010468:	2100      	movs	r1, #0
 801046a:	6a1b      	ldr	r3, [r3, #32]
 801046c:	4798      	blx	r3
 801046e:	4641      	mov	r1, r8
 8010470:	4a08      	ldr	r2, [pc, #32]	; (8010494 <DisplayUdf::ShowShutdown()+0x5c>)
 8010472:	69a0      	ldr	r0, [r4, #24]
 8010474:	f7ff fe77 	bl	8010166 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8010478:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801047c:	4620      	mov	r0, r4
 801047e:	f7f9 f9b5 	bl	80097ec <Display::Status(Display7SegmentMessage)>
 8010482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010486:	b118      	cbz	r0, 8010490 <DisplayUdf::ShowShutdown()+0x58>
 8010488:	6803      	ldr	r3, [r0, #0]
 801048a:	2120      	movs	r1, #32
 801048c:	695b      	ldr	r3, [r3, #20]
 801048e:	4798      	blx	r3
 8010490:	3701      	adds	r7, #1
 8010492:	e7e3      	b.n	801045c <DisplayUdf::ShowShutdown()+0x24>
 8010494:	0801671d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, sp, lr}

08010498 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8010498:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801049a:	88c6      	ldrh	r6, [r0, #6]
 801049c:	8885      	ldrh	r5, [r0, #4]
 801049e:	42ae      	cmp	r6, r5
 80104a0:	d216      	bcs.n	80104d0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80104a2:	4604      	mov	r4, r0
 80104a4:	6800      	ldr	r0, [r0, #0]
 80104a6:	1bad      	subs	r5, r5, r6
 80104a8:	4430      	add	r0, r6
 80104aa:	7a26      	ldrb	r6, [r4, #8]
 80104ac:	b923      	cbnz	r3, 80104b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80104ae:	b926      	cbnz	r6, 80104ba <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80104b0:	9200      	str	r2, [sp, #0]
 80104b2:	460b      	mov	r3, r1
 80104b4:	4a09      	ldr	r2, [pc, #36]	; (80104dc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80104b6:	e003      	b.n	80104c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80104b8:	b166      	cbz	r6, 80104d4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 80104ba:	460b      	mov	r3, r1
 80104bc:	9200      	str	r2, [sp, #0]
 80104be:	4a08      	ldr	r2, [pc, #32]	; (80104e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 80104c0:	4629      	mov	r1, r5
 80104c2:	f7f8 ff05 	bl	80092d0 <snprintf>
 80104c6:	4285      	cmp	r5, r0
 80104c8:	bfa2      	ittt	ge
 80104ca:	88e3      	ldrhge	r3, [r4, #6]
 80104cc:	181b      	addge	r3, r3, r0
 80104ce:	80e3      	strhge	r3, [r4, #6]
 80104d0:	b002      	add	sp, #8
 80104d2:	bd70      	pop	{r4, r5, r6, pc}
 80104d4:	9200      	str	r2, [sp, #0]
 80104d6:	460b      	mov	r3, r1
 80104d8:	4a02      	ldr	r2, [pc, #8]	; (80104e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 80104da:	e7f1      	b.n	80104c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80104dc:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 80104e0:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 80104e4:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}

080104e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80104e8:	b510      	push	{r4, lr}
 80104ea:	2220      	movs	r2, #32
 80104ec:	4604      	mov	r4, r0
 80104ee:	f840 1b04 	str.w	r1, [r0], #4
 80104f2:	2100      	movs	r1, #0
 80104f4:	f001 ff08 	bl	8012308 <memset>
 80104f8:	f647 7305 	movw	r3, #32517	; 0x7f05
 80104fc:	4620      	mov	r0, r4
 80104fe:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010500:	bd10      	pop	{r4, pc}

08010502 <DisplayUdfParams::Load()>:
 8010502:	b508      	push	{r3, lr}
 8010504:	2300      	movs	r3, #0
 8010506:	4601      	mov	r1, r0
 8010508:	6043      	str	r3, [r0, #4]
 801050a:	6800      	ldr	r0, [r0, #0]
 801050c:	b120      	cbz	r0, 8010518 <DisplayUdfParams::Load()+0x16>
 801050e:	6803      	ldr	r3, [r0, #0]
 8010510:	3104      	adds	r1, #4
 8010512:	68db      	ldr	r3, [r3, #12]
 8010514:	4798      	blx	r3
 8010516:	2001      	movs	r0, #1
 8010518:	bd08      	pop	{r3, pc}
	...

0801051c <DisplayUdfParams::Load(char const*, unsigned int)>:
 801051c:	6803      	ldr	r3, [r0, #0]
 801051e:	b1d3      	cbz	r3, 8010556 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8010520:	2300      	movs	r3, #0
 8010522:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010524:	460d      	mov	r5, r1
 8010526:	4616      	mov	r6, r2
 8010528:	4604      	mov	r4, r0
 801052a:	6043      	str	r3, [r0, #4]
 801052c:	4602      	mov	r2, r0
 801052e:	490a      	ldr	r1, [pc, #40]	; (8010558 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8010530:	4668      	mov	r0, sp
 8010532:	f001 f891 	bl	8011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010536:	4632      	mov	r2, r6
 8010538:	4629      	mov	r1, r5
 801053a:	4668      	mov	r0, sp
 801053c:	f001 f890 	bl	8011660 <ReadConfigFile::Read(char const*, unsigned int)>
 8010540:	4621      	mov	r1, r4
 8010542:	f851 0b04 	ldr.w	r0, [r1], #4
 8010546:	6803      	ldr	r3, [r0, #0]
 8010548:	689b      	ldr	r3, [r3, #8]
 801054a:	4798      	blx	r3
 801054c:	4668      	mov	r0, sp
 801054e:	f001 f886 	bl	801165e <ReadConfigFile::~ReadConfigFile()>
 8010552:	b002      	add	sp, #8
 8010554:	bd70      	pop	{r4, r5, r6, pc}
 8010556:	4770      	bx	lr
 8010558:	08010625 	stmdaeq	r1, {r0, r2, r5, r9, sl}

0801055c <DisplayUdfParams::callbackFunction(char const*)>:
 801055c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801055e:	460e      	mov	r6, r1
 8010560:	4604      	mov	r4, r0
 8010562:	492c      	ldr	r1, [pc, #176]	; (8010614 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8010564:	4630      	mov	r0, r6
 8010566:	f10d 0207 	add.w	r2, sp, #7
 801056a:	f001 f9b1 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801056e:	b968      	cbnz	r0, 801058c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8010570:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010574:	6863      	ldr	r3, [r4, #4]
 8010576:	2a7f      	cmp	r2, #127	; 0x7f
 8010578:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 801057c:	bf14      	ite	ne
 801057e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8010582:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8010586:	6063      	str	r3, [r4, #4]
 8010588:	b003      	add	sp, #12
 801058a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801058c:	4630      	mov	r0, r6
 801058e:	4922      	ldr	r1, [pc, #136]	; (8010618 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8010590:	f10d 0207 	add.w	r2, sp, #7
 8010594:	f001 f99c 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010598:	b958      	cbnz	r0, 80105b2 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 801059a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801059e:	6863      	ldr	r3, [r4, #4]
 80105a0:	2a05      	cmp	r2, #5
 80105a2:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80105a6:	bf14      	ite	ne
 80105a8:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80105ac:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80105b0:	e7e9      	b.n	8010586 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80105b2:	4630      	mov	r0, r6
 80105b4:	4919      	ldr	r1, [pc, #100]	; (801061c <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 80105b6:	f10d 0207 	add.w	r2, sp, #7
 80105ba:	f001 f989 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80105be:	b948      	cbnz	r0, 80105d4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 80105c0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80105c4:	6863      	ldr	r3, [r4, #4]
 80105c6:	b112      	cbz	r2, 80105ce <DisplayUdfParams::callbackFunction(char const*)+0x72>
 80105c8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80105cc:	e7db      	b.n	8010586 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80105ce:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80105d2:	e7d8      	b.n	8010586 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80105d4:	2500      	movs	r5, #0
 80105d6:	4f12      	ldr	r7, [pc, #72]	; (8010620 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 80105d8:	4630      	mov	r0, r6
 80105da:	f857 1b04 	ldr.w	r1, [r7], #4
 80105de:	f10d 0207 	add.w	r2, sp, #7
 80105e2:	f001 f975 	bl	80118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80105e6:	b980      	cbnz	r0, 801060a <DisplayUdfParams::callbackFunction(char const*)+0xae>
 80105e8:	2301      	movs	r3, #1
 80105ea:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80105ee:	40ab      	lsls	r3, r5
 80105f0:	1e4e      	subs	r6, r1, #1
 80105f2:	2e05      	cmp	r6, #5
 80105f4:	6862      	ldr	r2, [r4, #4]
 80105f6:	4425      	add	r5, r4
 80105f8:	d802      	bhi.n	8010600 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 80105fa:	7229      	strb	r1, [r5, #8]
 80105fc:	4313      	orrs	r3, r2
 80105fe:	e7c2      	b.n	8010586 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8010600:	ea22 0203 	bic.w	r2, r2, r3
 8010604:	7228      	strb	r0, [r5, #8]
 8010606:	6062      	str	r2, [r4, #4]
 8010608:	e7be      	b.n	8010588 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801060a:	3501      	adds	r5, #1
 801060c:	2d14      	cmp	r5, #20
 801060e:	d1e3      	bne.n	80105d8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8010610:	e7ba      	b.n	8010588 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8010612:	bf00      	nop
 8010614:	080167de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, sp, lr}
 8010618:	080167a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, sp, lr}
 801061c:	080167b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, sp, lr}
 8010620:	08016730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, lr}

08010624 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8010624:	f7ff bf9a 	b.w	801055c <DisplayUdfParams::callbackFunction(char const*)>

08010628 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8010628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801062c:	4604      	mov	r4, r0
 801062e:	4615      	mov	r5, r2
 8010630:	461e      	mov	r6, r3
 8010632:	b086      	sub	sp, #24
 8010634:	3004      	adds	r0, #4
 8010636:	b379      	cbz	r1, 8010698 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8010638:	2222      	movs	r2, #34	; 0x22
 801063a:	f001 fe4e 	bl	80122da <memmove>
 801063e:	462a      	mov	r2, r5
 8010640:	4633      	mov	r3, r6
 8010642:	493d      	ldr	r1, [pc, #244]	; (8010738 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8010644:	a803      	add	r0, sp, #12
 8010646:	f000 ff67 	bl	8011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801064a:	6863      	ldr	r3, [r4, #4]
 801064c:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8010650:	493a      	ldr	r1, [pc, #232]	; (801073c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8010652:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8010656:	a803      	add	r0, sp, #12
 8010658:	f7ff ff1e 	bl	8010498 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801065c:	6863      	ldr	r3, [r4, #4]
 801065e:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8010662:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8010666:	4936      	ldr	r1, [pc, #216]	; (8010740 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8010668:	a803      	add	r0, sp, #12
 801066a:	f7ff ff15 	bl	8010498 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801066e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010672:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8010676:	6863      	ldr	r3, [r4, #4]
 8010678:	42aa      	cmp	r2, r5
 801067a:	d226      	bcs.n	80106ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 801067c:	9803      	ldr	r0, [sp, #12]
 801067e:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8010682:	4410      	add	r0, r2
 8010684:	eba5 0502 	sub.w	r5, r5, r2
 8010688:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801068c:	d10b      	bne.n	80106a6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 801068e:	b962      	cbnz	r2, 80106aa <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8010690:	9200      	str	r2, [sp, #0]
 8010692:	4b2c      	ldr	r3, [pc, #176]	; (8010744 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8010694:	4a2c      	ldr	r2, [pc, #176]	; (8010748 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8010696:	e00e      	b.n	80106b6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8010698:	6823      	ldr	r3, [r4, #0]
 801069a:	4601      	mov	r1, r0
 801069c:	681a      	ldr	r2, [r3, #0]
 801069e:	4618      	mov	r0, r3
 80106a0:	68d2      	ldr	r2, [r2, #12]
 80106a2:	4790      	blx	r2
 80106a4:	e7cb      	b.n	801063e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80106a6:	2a00      	cmp	r2, #0
 80106a8:	d041      	beq.n	801072e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80106aa:	3b00      	subs	r3, #0
 80106ac:	bf18      	it	ne
 80106ae:	2301      	movne	r3, #1
 80106b0:	4a26      	ldr	r2, [pc, #152]	; (801074c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80106b2:	9300      	str	r3, [sp, #0]
 80106b4:	4b23      	ldr	r3, [pc, #140]	; (8010744 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80106b6:	4629      	mov	r1, r5
 80106b8:	f7f8 fe0a 	bl	80092d0 <snprintf>
 80106bc:	4285      	cmp	r5, r0
 80106be:	bfa2      	ittt	ge
 80106c0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80106c4:	181b      	addge	r3, r3, r0
 80106c6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80106ca:	2500      	movs	r5, #0
 80106cc:	2701      	movs	r7, #1
 80106ce:	4e20      	ldr	r6, [pc, #128]	; (8010750 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 80106d0:	f104 0808 	add.w	r8, r4, #8
 80106d4:	f856 1b04 	ldr.w	r1, [r6], #4
 80106d8:	780b      	ldrb	r3, [r1, #0]
 80106da:	b15b      	cbz	r3, 80106f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 80106dc:	6862      	ldr	r2, [r4, #4]
 80106de:	fa07 f305 	lsl.w	r3, r7, r5
 80106e2:	4393      	bics	r3, r2
 80106e4:	bf0c      	ite	eq
 80106e6:	2301      	moveq	r3, #1
 80106e8:	2300      	movne	r3, #0
 80106ea:	f818 2005 	ldrb.w	r2, [r8, r5]
 80106ee:	a803      	add	r0, sp, #12
 80106f0:	f7ff fed2 	bl	8010498 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80106f4:	3501      	adds	r5, #1
 80106f6:	2d14      	cmp	r5, #20
 80106f8:	d1ec      	bne.n	80106d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80106fa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80106fe:	b17b      	cbz	r3, 8010720 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8010700:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010704:	9b03      	ldr	r3, [sp, #12]
 8010706:	4413      	add	r3, r2
 8010708:	227d      	movs	r2, #125	; 0x7d
 801070a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801070e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010712:	9903      	ldr	r1, [sp, #12]
 8010714:	54ca      	strb	r2, [r1, r3]
 8010716:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801071a:	3301      	adds	r3, #1
 801071c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010720:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010724:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010726:	601a      	str	r2, [r3, #0]
 8010728:	b006      	add	sp, #24
 801072a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801072e:	2301      	movs	r3, #1
 8010730:	4a08      	ldr	r2, [pc, #32]	; (8010754 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8010732:	9300      	str	r3, [sp, #0]
 8010734:	4b03      	ldr	r3, [pc, #12]	; (8010744 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8010736:	e7be      	b.n	80106b6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8010738:	080167d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, sp, lr}
 801073c:	080167de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, sp, lr}
 8010740:	080167a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, sp, lr}
 8010744:	080167b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, sp, lr}
 8010748:	08014935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, lr}
 801074c:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 8010750:	08016730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, lr}
 8010754:	08014936 	stmdaeq	r1, {r1, r2, r4, r5, r8, fp, lr}

08010758 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8010758:	b513      	push	{r0, r1, r4, lr}
 801075a:	6804      	ldr	r4, [r0, #0]
 801075c:	b914      	cbnz	r4, 8010764 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 801075e:	601c      	str	r4, [r3, #0]
 8010760:	b002      	add	sp, #8
 8010762:	bd10      	pop	{r4, pc}
 8010764:	9300      	str	r3, [sp, #0]
 8010766:	4613      	mov	r3, r2
 8010768:	460a      	mov	r2, r1
 801076a:	2100      	movs	r1, #0
 801076c:	f7ff ff5c 	bl	8010628 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8010770:	e7f6      	b.n	8010760 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08010772 <DisplayUdfParams::Set(DisplayUdf*)>:
 8010772:	6843      	ldr	r3, [r0, #4]
 8010774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010778:	009a      	lsls	r2, r3, #2
 801077a:	4604      	mov	r4, r0
 801077c:	460e      	mov	r6, r1
 801077e:	d506      	bpl.n	801078e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8010780:	6988      	ldr	r0, [r1, #24]
 8010782:	b120      	cbz	r0, 801078e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8010784:	6803      	ldr	r3, [r0, #0]
 8010786:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801078a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801078c:	4798      	blx	r3
 801078e:	6863      	ldr	r3, [r4, #4]
 8010790:	69b0      	ldr	r0, [r6, #24]
 8010792:	00db      	lsls	r3, r3, #3
 8010794:	bf41      	itttt	mi
 8010796:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 801079a:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 801079e:	4353      	mulmi	r3, r2
 80107a0:	6173      	strmi	r3, [r6, #20]
 80107a2:	6861      	ldr	r1, [r4, #4]
 80107a4:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80107a8:	b110      	cbz	r0, 80107b0 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80107aa:	6803      	ldr	r3, [r0, #0]
 80107ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107ae:	4798      	blx	r3
 80107b0:	2500      	movs	r5, #0
 80107b2:	2701      	movs	r7, #1
 80107b4:	f104 0808 	add.w	r8, r4, #8
 80107b8:	6862      	ldr	r2, [r4, #4]
 80107ba:	fa07 f305 	lsl.w	r3, r7, r5
 80107be:	4393      	bics	r3, r2
 80107c0:	d105      	bne.n	80107ce <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 80107c2:	462a      	mov	r2, r5
 80107c4:	4630      	mov	r0, r6
 80107c6:	f818 1005 	ldrb.w	r1, [r8, r5]
 80107ca:	f7ff fd0c 	bl	80101e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80107ce:	3501      	adds	r5, #1
 80107d0:	2d14      	cmp	r5, #20
 80107d2:	d1f1      	bne.n	80107b8 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80107d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080107d8 <DisplayUdfParams::Dump()>:
 80107d8:	4770      	bx	lr
	...

080107dc <DisplayUdf::Show(E131Bridge*)>:
 80107dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80107e0:	460e      	mov	r6, r1
 80107e2:	4604      	mov	r4, r0
 80107e4:	b085      	sub	sp, #20
 80107e6:	f7ff fdad 	bl	8010344 <DisplayUdf::Show()>
 80107ea:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 80107ee:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 80107f2:	4620      	mov	r0, r4
 80107f4:	4413      	add	r3, r2
 80107f6:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 80107fa:	4a21      	ldr	r2, [pc, #132]	; (8010880 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 80107fc:	f7f7 ff26 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010800:	2500      	movs	r5, #0
 8010802:	4f20      	ldr	r7, [pc, #128]	; (8010884 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8010804:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8010888 <DisplayUdf::Show(E131Bridge*)+0xac>
 8010808:	f8df 9080 	ldr.w	r9, [pc, #128]	; 801088c <DisplayUdf::Show(E131Bridge*)+0xb0>
 801080c:	2301      	movs	r3, #1
 801080e:	4629      	mov	r1, r5
 8010810:	4630      	mov	r0, r6
 8010812:	f10d 020e 	add.w	r2, sp, #14
 8010816:	f7fa fb4d 	bl	800aeb4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 801081a:	b1a8      	cbz	r0, 8010848 <DisplayUdf::Show(E131Bridge*)+0x6c>
 801081c:	2344      	movs	r3, #68	; 0x44
 801081e:	436b      	muls	r3, r5
 8010820:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8010824:	58d2      	ldr	r2, [r2, r3]
 8010826:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 801082a:	2a00      	cmp	r2, #0
 801082c:	bf0c      	ite	eq
 801082e:	463b      	moveq	r3, r7
 8010830:	4643      	movne	r3, r8
 8010832:	e9cd 0300 	strd	r0, r3, [sp]
 8010836:	f104 0144 	add.w	r1, r4, #68	; 0x44
 801083a:	464a      	mov	r2, r9
 801083c:	4620      	mov	r0, r4
 801083e:	5d49      	ldrb	r1, [r1, r5]
 8010840:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8010844:	f7f7 ff02 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010848:	3501      	adds	r5, #1
 801084a:	2d04      	cmp	r5, #4
 801084c:	d1de      	bne.n	801080c <DisplayUdf::Show(E131Bridge*)+0x30>
 801084e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8010850:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8010854:	2a02      	cmp	r2, #2
 8010856:	d001      	beq.n	801085c <DisplayUdf::Show(E131Bridge*)+0x80>
 8010858:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801085a:	b933      	cbnz	r3, 801086a <DisplayUdf::Show(E131Bridge*)+0x8e>
 801085c:	4620      	mov	r0, r4
 801085e:	4a0c      	ldr	r2, [pc, #48]	; (8010890 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8010860:	f7f7 fef4 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 8010864:	b005      	add	sp, #20
 8010866:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801086a:	480a      	ldr	r0, [pc, #40]	; (8010894 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 801086c:	9300      	str	r3, [sp, #0]
 801086e:	4b0a      	ldr	r3, [pc, #40]	; (8010898 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8010870:	2a00      	cmp	r2, #0
 8010872:	bf08      	it	eq
 8010874:	4603      	moveq	r3, r0
 8010876:	4620      	mov	r0, r4
 8010878:	4a08      	ldr	r2, [pc, #32]	; (801089c <DisplayUdf::Show(E131Bridge*)+0xc0>)
 801087a:	f7f7 fee7 	bl	800864c <Display::Printf(unsigned char, char const*, ...)>
 801087e:	e7f1      	b.n	8010864 <DisplayUdf::Show(E131Bridge*)+0x88>
 8010880:	080167e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, lr}
 8010884:	080156fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, ip, lr}
 8010888:	08015700 	stmdaeq	r1, {r8, r9, sl, ip, lr}
 801088c:	080167ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, sl, sp, lr}
 8010890:	080167fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 8010894:	08015814 	stmdaeq	r1, {r2, r4, fp, ip, lr}
 8010898:	08015809 	stmdaeq	r1, {r0, r3, fp, ip, lr}
 801089c:	08016805 	stmdaeq	r1, {r0, r2, fp, sp, lr}

080108a0 <network::display_emac_start()>:
 80108a0:	4b01      	ldr	r3, [pc, #4]	; (80108a8 <network::display_emac_start()+0x8>)
 80108a2:	6818      	ldr	r0, [r3, #0]
 80108a4:	f7ff bcb8 	b.w	8010218 <DisplayUdf::ShowEmacStart()>
 80108a8:	20009d4c 	andcs	r9, r0, ip, asr #26

080108ac <network::display_ip()>:
 80108ac:	4b01      	ldr	r3, [pc, #4]	; (80108b4 <network::display_ip()+0x8>)
 80108ae:	6818      	ldr	r0, [r3, #0]
 80108b0:	f7ff bcc2 	b.w	8010238 <DisplayUdf::ShowIpAddress()>
 80108b4:	20009d4c 	andcs	r9, r0, ip, asr #26

080108b8 <network::display_emac_shutdown()>:
 80108b8:	4b01      	ldr	r3, [pc, #4]	; (80108c0 <network::display_emac_shutdown()+0x8>)
 80108ba:	6818      	ldr	r0, [r3, #0]
 80108bc:	f7ff bdbc 	b.w	8010438 <DisplayUdf::ShowShutdown()>
 80108c0:	20009d4c 	andcs	r9, r0, ip, asr #26

080108c4 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 80108c4:	4b02      	ldr	r3, [pc, #8]	; (80108d0 <network::display_dhcp_status(network::dhcp::ClientStatus)+0xc>)
 80108c6:	4601      	mov	r1, r0
 80108c8:	6818      	ldr	r0, [r3, #0]
 80108ca:	f7ff bd7d 	b.w	80103c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80108ce:	bf00      	nop
 80108d0:	20009d4c 	andcs	r9, r0, ip, asr #26

080108d4 <ConfigStore::GetStoreOffset(configstore::Store)>:
 80108d4:	2300      	movs	r3, #0
 80108d6:	2020      	movs	r0, #32
 80108d8:	b510      	push	{r4, lr}
 80108da:	4a04      	ldr	r2, [pc, #16]	; (80108ec <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 80108dc:	428b      	cmp	r3, r1
 80108de:	d100      	bne.n	80108e2 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 80108e0:	bd10      	pop	{r4, pc}
 80108e2:	f852 4b04 	ldr.w	r4, [r2], #4
 80108e6:	3301      	adds	r3, #1
 80108e8:	4420      	add	r0, r4
 80108ea:	e7f7      	b.n	80108dc <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 80108ec:	08016810 	stmdaeq	r1, {r4, fp, sp, lr}

080108f0 <ConfigStore::Init()>:
 80108f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80108f4:	b085      	sub	sp, #20
 80108f6:	4607      	mov	r7, r0
 80108f8:	f000 fab0 	bl	8010e5c <StoreDevice::GetSectorSize() const>
 80108fc:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8010900:	4605      	mov	r5, r0
 8010902:	d004      	beq.n	801090e <ConfigStore::Init()+0x1e>
 8010904:	2500      	movs	r5, #0
 8010906:	4628      	mov	r0, r5
 8010908:	b005      	add	sp, #20
 801090a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801090e:	4638      	mov	r0, r7
 8010910:	f000 faa2 	bl	8010e58 <StoreDevice::GetSize() const>
 8010914:	4b3a      	ldr	r3, [pc, #232]	; (8010a00 <ConfigStore::Init()+0x110>)
 8010916:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 801091a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 801091e:	6019      	str	r1, [r3, #0]
 8010920:	2e00      	cmp	r6, #0
 8010922:	d1ef      	bne.n	8010904 <ConfigStore::Init()+0x14>
 8010924:	4c37      	ldr	r4, [pc, #220]	; (8010a04 <ConfigStore::Init()+0x114>)
 8010926:	ab03      	add	r3, sp, #12
 8010928:	462a      	mov	r2, r5
 801092a:	9300      	str	r3, [sp, #0]
 801092c:	4638      	mov	r0, r7
 801092e:	4623      	mov	r3, r4
 8010930:	f000 fa96 	bl	8010e60 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 8010934:	7823      	ldrb	r3, [r4, #0]
 8010936:	2b41      	cmp	r3, #65	; 0x41
 8010938:	bf1c      	itt	ne
 801093a:	2341      	movne	r3, #65	; 0x41
 801093c:	7023      	strbne	r3, [r4, #0]
 801093e:	7863      	ldrb	r3, [r4, #1]
 8010940:	bf14      	ite	ne
 8010942:	4635      	movne	r5, r6
 8010944:	2501      	moveq	r5, #1
 8010946:	2b76      	cmp	r3, #118	; 0x76
 8010948:	bf1c      	itt	ne
 801094a:	2376      	movne	r3, #118	; 0x76
 801094c:	7063      	strbne	r3, [r4, #1]
 801094e:	78a3      	ldrb	r3, [r4, #2]
 8010950:	bf18      	it	ne
 8010952:	2500      	movne	r5, #0
 8010954:	2b56      	cmp	r3, #86	; 0x56
 8010956:	bf1c      	itt	ne
 8010958:	2356      	movne	r3, #86	; 0x56
 801095a:	70a3      	strbne	r3, [r4, #2]
 801095c:	78e3      	ldrb	r3, [r4, #3]
 801095e:	bf18      	it	ne
 8010960:	2500      	movne	r5, #0
 8010962:	2b10      	cmp	r3, #16
 8010964:	d01f      	beq.n	80109a6 <ConfigStore::Init()+0xb6>
 8010966:	2310      	movs	r3, #16
 8010968:	70e3      	strb	r3, [r4, #3]
 801096a:	2201      	movs	r2, #1
 801096c:	2500      	movs	r5, #0
 801096e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8010972:	4b25      	ldr	r3, [pc, #148]	; (8010a08 <ConfigStore::Init()+0x118>)
 8010974:	f8df 8094 	ldr.w	r8, [pc, #148]	; 8010a0c <ConfigStore::Init()+0x11c>
 8010978:	701a      	strb	r2, [r3, #0]
 801097a:	4631      	mov	r1, r6
 801097c:	4638      	mov	r0, r7
 801097e:	f7ff ffa9 	bl	80108d4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8010982:	1823      	adds	r3, r4, r0
 8010984:	5425      	strb	r5, [r4, r0]
 8010986:	705d      	strb	r5, [r3, #1]
 8010988:	709d      	strb	r5, [r3, #2]
 801098a:	70dd      	strb	r5, [r3, #3]
 801098c:	f858 3b04 	ldr.w	r3, [r8], #4
 8010990:	1d02      	adds	r2, r0, #4
 8010992:	4403      	add	r3, r0
 8010994:	429a      	cmp	r2, r3
 8010996:	d32f      	bcc.n	80109f8 <ConfigStore::Init()+0x108>
 8010998:	3601      	adds	r6, #1
 801099a:	2e1c      	cmp	r6, #28
 801099c:	d1ed      	bne.n	801097a <ConfigStore::Init()+0x8a>
 801099e:	2501      	movs	r5, #1
 80109a0:	4b1b      	ldr	r3, [pc, #108]	; (8010a10 <ConfigStore::Init()+0x120>)
 80109a2:	601d      	str	r5, [r3, #0]
 80109a4:	e7af      	b.n	8010906 <ConfigStore::Init()+0x16>
 80109a6:	2d00      	cmp	r5, #0
 80109a8:	d0df      	beq.n	801096a <ConfigStore::Init()+0x7a>
 80109aa:	f04f 0900 	mov.w	r9, #0
 80109ae:	46c8      	mov	r8, r9
 80109b0:	4631      	mov	r1, r6
 80109b2:	4638      	mov	r0, r7
 80109b4:	f7ff ff8e 	bl	80108d4 <ConfigStore::GetStoreOffset(configstore::Store)>
 80109b8:	5c23      	ldrb	r3, [r4, r0]
 80109ba:	2bff      	cmp	r3, #255	; 0xff
 80109bc:	d112      	bne.n	80109e4 <ConfigStore::Init()+0xf4>
 80109be:	1823      	adds	r3, r4, r0
 80109c0:	785a      	ldrb	r2, [r3, #1]
 80109c2:	2aff      	cmp	r2, #255	; 0xff
 80109c4:	d10e      	bne.n	80109e4 <ConfigStore::Init()+0xf4>
 80109c6:	789a      	ldrb	r2, [r3, #2]
 80109c8:	2aff      	cmp	r2, #255	; 0xff
 80109ca:	d10b      	bne.n	80109e4 <ConfigStore::Init()+0xf4>
 80109cc:	78da      	ldrb	r2, [r3, #3]
 80109ce:	2aff      	cmp	r2, #255	; 0xff
 80109d0:	d108      	bne.n	80109e4 <ConfigStore::Init()+0xf4>
 80109d2:	46a9      	mov	r9, r5
 80109d4:	f804 8000 	strb.w	r8, [r4, r0]
 80109d8:	f883 8001 	strb.w	r8, [r3, #1]
 80109dc:	f883 8002 	strb.w	r8, [r3, #2]
 80109e0:	f883 8003 	strb.w	r8, [r3, #3]
 80109e4:	3601      	adds	r6, #1
 80109e6:	2e1c      	cmp	r6, #28
 80109e8:	d1e2      	bne.n	80109b0 <ConfigStore::Init()+0xc0>
 80109ea:	f1b9 0f00 	cmp.w	r9, #0
 80109ee:	d08a      	beq.n	8010906 <ConfigStore::Init()+0x16>
 80109f0:	2201      	movs	r2, #1
 80109f2:	4b07      	ldr	r3, [pc, #28]	; (8010a10 <ConfigStore::Init()+0x120>)
 80109f4:	601a      	str	r2, [r3, #0]
 80109f6:	e786      	b.n	8010906 <ConfigStore::Init()+0x16>
 80109f8:	f804 9002 	strb.w	r9, [r4, r2]
 80109fc:	3201      	adds	r2, #1
 80109fe:	e7c9      	b.n	8010994 <ConfigStore::Init()+0xa4>
 8010a00:	2000ad54 	andcs	sl, r0, r4, asr sp
 8010a04:	20009d54 	andcs	r9, r0, r4, asr sp
 8010a08:	2000ad68 	andcs	sl, r0, r8, ror #26
 8010a0c:	08016810 	stmdaeq	r1, {r4, fp, sp, lr}
 8010a10:	2000ad60 	andcs	sl, r0, r0, ror #26

08010a14 <ConfigStore::ConfigStore()>:
 8010a14:	b538      	push	{r3, r4, r5, lr}
 8010a16:	4604      	mov	r4, r0
 8010a18:	f000 fa16 	bl	8010e48 <StoreDevice::StoreDevice()>
 8010a1c:	4b0b      	ldr	r3, [pc, #44]	; (8010a4c <ConfigStore::ConfigStore()+0x38>)
 8010a1e:	4d0c      	ldr	r5, [pc, #48]	; (8010a50 <ConfigStore::ConfigStore()+0x3c>)
 8010a20:	601c      	str	r4, [r3, #0]
 8010a22:	7863      	ldrb	r3, [r4, #1]
 8010a24:	b11b      	cbz	r3, 8010a2e <ConfigStore::ConfigStore()+0x1a>
 8010a26:	4620      	mov	r0, r4
 8010a28:	f7ff ff62 	bl	80108f0 <ConfigStore::Init()>
 8010a2c:	7028      	strb	r0, [r5, #0]
 8010a2e:	782b      	ldrb	r3, [r5, #0]
 8010a30:	b153      	cbz	r3, 8010a48 <ConfigStore::ConfigStore()+0x34>
 8010a32:	2320      	movs	r3, #32
 8010a34:	2200      	movs	r2, #0
 8010a36:	4907      	ldr	r1, [pc, #28]	; (8010a54 <ConfigStore::ConfigStore()+0x40>)
 8010a38:	f851 0b04 	ldr.w	r0, [r1], #4
 8010a3c:	3201      	adds	r2, #1
 8010a3e:	2a1c      	cmp	r2, #28
 8010a40:	4403      	add	r3, r0
 8010a42:	d1f9      	bne.n	8010a38 <ConfigStore::ConfigStore()+0x24>
 8010a44:	4a04      	ldr	r2, [pc, #16]	; (8010a58 <ConfigStore::ConfigStore()+0x44>)
 8010a46:	6013      	str	r3, [r2, #0]
 8010a48:	4620      	mov	r0, r4
 8010a4a:	bd38      	pop	{r3, r4, r5, pc}
 8010a4c:	2000ad64 	andcs	sl, r0, r4, ror #26
 8010a50:	2000ad58 	andcs	sl, r0, r8, asr sp
 8010a54:	08016810 	stmdaeq	r1, {r4, fp, sp, lr}
 8010a58:	2000ad5c 	andcs	sl, r0, ip, asr sp

08010a5c <ConfigStore::ResetSetList(configstore::Store)>:
 8010a5c:	b508      	push	{r3, lr}
 8010a5e:	f7ff ff39 	bl	80108d4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8010a62:	2300      	movs	r3, #0
 8010a64:	4904      	ldr	r1, [pc, #16]	; (8010a78 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 8010a66:	1842      	adds	r2, r0, r1
 8010a68:	540b      	strb	r3, [r1, r0]
 8010a6a:	7053      	strb	r3, [r2, #1]
 8010a6c:	7093      	strb	r3, [r2, #2]
 8010a6e:	70d3      	strb	r3, [r2, #3]
 8010a70:	2201      	movs	r2, #1
 8010a72:	4b02      	ldr	r3, [pc, #8]	; (8010a7c <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 8010a74:	601a      	str	r2, [r3, #0]
 8010a76:	bd08      	pop	{r3, pc}
 8010a78:	20009d54 	andcs	r9, r0, r4, asr sp
 8010a7c:	2000ad60 	andcs	sl, r0, r0, ror #26

08010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8010a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a84:	461c      	mov	r4, r3
 8010a86:	4b19      	ldr	r3, [pc, #100]	; (8010aec <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8010a88:	4616      	mov	r6, r2
 8010a8a:	781f      	ldrb	r7, [r3, #0]
 8010a8c:	9d07      	ldr	r5, [sp, #28]
 8010a8e:	b307      	cbz	r7, 8010ad2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010a90:	f7ff ff20 	bl	80108d4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8010a94:	f04f 0c00 	mov.w	ip, #0
 8010a98:	4a15      	ldr	r2, [pc, #84]	; (8010af0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8010a9a:	1831      	adds	r1, r6, r0
 8010a9c:	1e63      	subs	r3, r4, #1
 8010a9e:	9c06      	ldr	r4, [sp, #24]
 8010aa0:	4411      	add	r1, r2
 8010aa2:	440c      	add	r4, r1
 8010aa4:	42a1      	cmp	r1, r4
 8010aa6:	d116      	bne.n	8010ad6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8010aa8:	f1bc 0f00 	cmp.w	ip, #0
 8010aac:	d011      	beq.n	8010ad2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010aae:	4b11      	ldr	r3, [pc, #68]	; (8010af4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8010ab0:	6819      	ldr	r1, [r3, #0]
 8010ab2:	b109      	cbz	r1, 8010ab8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8010ab4:	2906      	cmp	r1, #6
 8010ab6:	d101      	bne.n	8010abc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8010ab8:	2101      	movs	r1, #1
 8010aba:	6019      	str	r1, [r3, #0]
 8010abc:	4b0e      	ldr	r3, [pc, #56]	; (8010af8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8010abe:	6819      	ldr	r1, [r3, #0]
 8010ac0:	4b0e      	ldr	r3, [pc, #56]	; (8010afc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8010ac2:	6019      	str	r1, [r3, #0]
 8010ac4:	b12e      	cbz	r6, 8010ad2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010ac6:	b125      	cbz	r5, 8010ad2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010ac8:	9b08      	ldr	r3, [sp, #32]
 8010aca:	4418      	add	r0, r3
 8010acc:	5813      	ldr	r3, [r2, r0]
 8010ace:	432b      	orrs	r3, r5
 8010ad0:	5013      	str	r3, [r2, r0]
 8010ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ad6:	f891 8000 	ldrb.w	r8, [r1]
 8010ada:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8010ade:	3101      	adds	r1, #1
 8010ae0:	45f0      	cmp	r8, lr
 8010ae2:	bf1c      	itt	ne
 8010ae4:	f801 ec01 	strbne.w	lr, [r1, #-1]
 8010ae8:	46bc      	movne	ip, r7
 8010aea:	e7db      	b.n	8010aa4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8010aec:	2000ad58 	andcs	sl, r0, r8, asr sp
 8010af0:	20009d54 	andcs	r9, r0, r4, asr sp
 8010af4:	2000ad60 	andcs	sl, r0, r0, ror #26
 8010af8:	2000aea4 	andcs	sl, r0, r4, lsr #29
 8010afc:	20009d50 	andcs	r9, r0, r0, asr sp

08010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 8010b00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b04:	461d      	mov	r5, r3
 8010b06:	4b15      	ldr	r3, [pc, #84]	; (8010b5c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8010b08:	b085      	sub	sp, #20
 8010b0a:	781b      	ldrb	r3, [r3, #0]
 8010b0c:	4607      	mov	r7, r0
 8010b0e:	4614      	mov	r4, r2
 8010b10:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8010b14:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8010b18:	b193      	cbz	r3, 8010b40 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8010b1a:	f7ff fedb 	bl	80108d4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8010b1e:	4a10      	ldr	r2, [pc, #64]	; (8010b60 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 8010b20:	eb08 0600 	add.w	r6, r8, r0
 8010b24:	18b3      	adds	r3, r6, r2
 8010b26:	f1b9 0f00 	cmp.w	r9, #0
 8010b2a:	d013      	beq.n	8010b54 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8010b2c:	5990      	ldr	r0, [r2, r6]
 8010b2e:	b988      	cbnz	r0, 8010b54 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8010b30:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8010b34:	4623      	mov	r3, r4
 8010b36:	4642      	mov	r2, r8
 8010b38:	4638      	mov	r0, r7
 8010b3a:	9500      	str	r5, [sp, #0]
 8010b3c:	f7ff ffa0 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010b40:	b005      	add	sp, #20
 8010b42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b46:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010b4a:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010b4e:	429d      	cmp	r5, r3
 8010b50:	d1f9      	bne.n	8010b46 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 8010b52:	e7f5      	b.n	8010b40 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8010b54:	3c01      	subs	r4, #1
 8010b56:	441d      	add	r5, r3
 8010b58:	e7f9      	b.n	8010b4e <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 8010b5a:	bf00      	nop
 8010b5c:	2000ad58 	andcs	sl, r0, r8, asr sp
 8010b60:	20009d54 	andcs	r9, r0, r4, asr sp

08010b64 <ConfigStore::Flash()>:
 8010b64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010b66:	4c24      	ldr	r4, [pc, #144]	; (8010bf8 <ConfigStore::Flash()+0x94>)
 8010b68:	6823      	ldr	r3, [r4, #0]
 8010b6a:	2b00      	cmp	r3, #0
 8010b6c:	d041      	beq.n	8010bf2 <ConfigStore::Flash()+0x8e>
 8010b6e:	3b01      	subs	r3, #1
 8010b70:	2b05      	cmp	r3, #5
 8010b72:	d82f      	bhi.n	8010bd4 <ConfigStore::Flash()+0x70>
 8010b74:	e8df f003 	tbb	[pc, r3]
 8010b78:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8010b7c:	4b1f2e23 	blmi	87dc410 <__exidx_end+0x7c54c8>
 8010b80:	681a      	ldr	r2, [r3, #0]
 8010b82:	4b1f      	ldr	r3, [pc, #124]	; (8010c00 <ConfigStore::Flash()+0x9c>)
 8010b84:	601a      	str	r2, [r3, #0]
 8010b86:	2302      	movs	r3, #2
 8010b88:	6023      	str	r3, [r4, #0]
 8010b8a:	2001      	movs	r0, #1
 8010b8c:	e02f      	b.n	8010bee <ConfigStore::Flash()+0x8a>
 8010b8e:	4b1b      	ldr	r3, [pc, #108]	; (8010bfc <ConfigStore::Flash()+0x98>)
 8010b90:	4a1b      	ldr	r2, [pc, #108]	; (8010c00 <ConfigStore::Flash()+0x9c>)
 8010b92:	681b      	ldr	r3, [r3, #0]
 8010b94:	6812      	ldr	r2, [r2, #0]
 8010b96:	1a9b      	subs	r3, r3, r2
 8010b98:	2b63      	cmp	r3, #99	; 0x63
 8010b9a:	d9f6      	bls.n	8010b8a <ConfigStore::Flash()+0x26>
 8010b9c:	2303      	movs	r3, #3
 8010b9e:	e7f3      	b.n	8010b88 <ConfigStore::Flash()+0x24>
 8010ba0:	4918      	ldr	r1, [pc, #96]	; (8010c04 <ConfigStore::Flash()+0xa0>)
 8010ba2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010ba6:	6809      	ldr	r1, [r1, #0]
 8010ba8:	ab03      	add	r3, sp, #12
 8010baa:	f000 f963 	bl	8010e74 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8010bae:	2800      	cmp	r0, #0
 8010bb0:	d0eb      	beq.n	8010b8a <ConfigStore::Flash()+0x26>
 8010bb2:	4b12      	ldr	r3, [pc, #72]	; (8010bfc <ConfigStore::Flash()+0x98>)
 8010bb4:	681a      	ldr	r2, [r3, #0]
 8010bb6:	4b12      	ldr	r3, [pc, #72]	; (8010c00 <ConfigStore::Flash()+0x9c>)
 8010bb8:	601a      	str	r2, [r3, #0]
 8010bba:	2305      	movs	r3, #5
 8010bbc:	e7e4      	b.n	8010b88 <ConfigStore::Flash()+0x24>
 8010bbe:	4b0f      	ldr	r3, [pc, #60]	; (8010bfc <ConfigStore::Flash()+0x98>)
 8010bc0:	4a0f      	ldr	r2, [pc, #60]	; (8010c00 <ConfigStore::Flash()+0x9c>)
 8010bc2:	681b      	ldr	r3, [r3, #0]
 8010bc4:	6812      	ldr	r2, [r2, #0]
 8010bc6:	1a9b      	subs	r3, r3, r2
 8010bc8:	2b63      	cmp	r3, #99	; 0x63
 8010bca:	d9de      	bls.n	8010b8a <ConfigStore::Flash()+0x26>
 8010bcc:	2304      	movs	r3, #4
 8010bce:	e7db      	b.n	8010b88 <ConfigStore::Flash()+0x24>
 8010bd0:	2306      	movs	r3, #6
 8010bd2:	e7d9      	b.n	8010b88 <ConfigStore::Flash()+0x24>
 8010bd4:	ab03      	add	r3, sp, #12
 8010bd6:	4a0c      	ldr	r2, [pc, #48]	; (8010c08 <ConfigStore::Flash()+0xa4>)
 8010bd8:	490a      	ldr	r1, [pc, #40]	; (8010c04 <ConfigStore::Flash()+0xa0>)
 8010bda:	9300      	str	r3, [sp, #0]
 8010bdc:	6812      	ldr	r2, [r2, #0]
 8010bde:	4b0b      	ldr	r3, [pc, #44]	; (8010c0c <ConfigStore::Flash()+0xa8>)
 8010be0:	6809      	ldr	r1, [r1, #0]
 8010be2:	f000 f950 	bl	8010e86 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 8010be6:	2800      	cmp	r0, #0
 8010be8:	d0cf      	beq.n	8010b8a <ConfigStore::Flash()+0x26>
 8010bea:	2000      	movs	r0, #0
 8010bec:	6020      	str	r0, [r4, #0]
 8010bee:	b004      	add	sp, #16
 8010bf0:	bd10      	pop	{r4, pc}
 8010bf2:	4618      	mov	r0, r3
 8010bf4:	e7fb      	b.n	8010bee <ConfigStore::Flash()+0x8a>
 8010bf6:	bf00      	nop
 8010bf8:	2000ad60 	andcs	sl, r0, r0, ror #26
 8010bfc:	2000aea4 	andcs	sl, r0, r4, lsr #29
 8010c00:	20009d50 	andcs	r9, r0, r0, asr sp
 8010c04:	2000ad54 	andcs	sl, r0, r4, asr sp
 8010c08:	2000ad5c 	andcs	sl, r0, ip, asr sp
 8010c0c:	20009d54 	andcs	r9, r0, r4, asr sp

08010c10 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8010c10:	4770      	bx	lr
	...

08010c14 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8010c14:	b507      	push	{r0, r1, r2, lr}
 8010c16:	2300      	movs	r3, #0
 8010c18:	460a      	mov	r2, r1
 8010c1a:	2101      	movs	r1, #1
 8010c1c:	e9cd 3100 	strd	r3, r1, [sp]
 8010c20:	4804      	ldr	r0, [pc, #16]	; (8010c34 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 8010c22:	2322      	movs	r3, #34	; 0x22
 8010c24:	210f      	movs	r1, #15
 8010c26:	6800      	ldr	r0, [r0, #0]
 8010c28:	f7ff ff6a 	bl	8010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8010c2c:	b003      	add	sp, #12
 8010c2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c32:	bf00      	nop
 8010c34:	2000ad64 	andcs	sl, r0, r4, ror #26

08010c38 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8010c38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c3a:	2200      	movs	r2, #0
 8010c3c:	460b      	mov	r3, r1
 8010c3e:	2122      	movs	r1, #34	; 0x22
 8010c40:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010c44:	4804      	ldr	r0, [pc, #16]	; (8010c58 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8010c46:	9100      	str	r1, [sp, #0]
 8010c48:	6800      	ldr	r0, [r0, #0]
 8010c4a:	210f      	movs	r1, #15
 8010c4c:	f7ff ff18 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c50:	b005      	add	sp, #20
 8010c52:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c56:	bf00      	nop
 8010c58:	2000ad64 	andcs	sl, r0, r4, ror #26

08010c5c <StoreDisplayUdf::~StoreDisplayUdf()>:
 8010c5c:	b510      	push	{r4, lr}
 8010c5e:	4604      	mov	r4, r0
 8010c60:	f001 faa0 	bl	80121a4 <operator delete(void*)>
 8010c64:	4620      	mov	r0, r4
 8010c66:	bd10      	pop	{r4, pc}

08010c68 <StoreDisplayUdf::StoreDisplayUdf()>:
 8010c68:	4a02      	ldr	r2, [pc, #8]	; (8010c74 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 8010c6a:	6002      	str	r2, [r0, #0]
 8010c6c:	4a02      	ldr	r2, [pc, #8]	; (8010c78 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 8010c6e:	6010      	str	r0, [r2, #0]
 8010c70:	4770      	bx	lr
 8010c72:	bf00      	nop
 8010c74:	08016888 	stmdaeq	r1, {r3, r7, fp, sp, lr}
 8010c78:	2000ad6c 	andcs	sl, r0, ip, ror #26

08010c7c <StoreNetwork::~StoreNetwork()>:
 8010c7c:	4770      	bx	lr

08010c7e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8010c7e:	3804      	subs	r0, #4
 8010c80:	4770      	bx	lr
	...

08010c84 <StoreNetwork::Update(networkparams::Params const*)>:
 8010c84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c86:	2200      	movs	r2, #0
 8010c88:	460b      	mov	r3, r1
 8010c8a:	215e      	movs	r1, #94	; 0x5e
 8010c8c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010c90:	4804      	ldr	r0, [pc, #16]	; (8010ca4 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 8010c92:	9100      	str	r1, [sp, #0]
 8010c94:	6800      	ldr	r0, [r0, #0]
 8010c96:	4611      	mov	r1, r2
 8010c98:	f7ff fef2 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c9c:	b005      	add	sp, #20
 8010c9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ca2:	bf00      	nop
 8010ca4:	2000ad64 	andcs	sl, r0, r4, ror #26

08010ca8 <StoreNetwork::SaveDhcp(bool)>:
 8010ca8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010caa:	2301      	movs	r3, #1
 8010cac:	f88d 1017 	strb.w	r1, [sp, #23]
 8010cb0:	2100      	movs	r1, #0
 8010cb2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010cb6:	4805      	ldr	r0, [pc, #20]	; (8010ccc <StoreNetwork::SaveDhcp(bool)+0x24>)
 8010cb8:	9300      	str	r3, [sp, #0]
 8010cba:	2214      	movs	r2, #20
 8010cbc:	6800      	ldr	r0, [r0, #0]
 8010cbe:	f10d 0317 	add.w	r3, sp, #23
 8010cc2:	f7ff fedd 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010cc6:	b007      	add	sp, #28
 8010cc8:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ccc:	2000ad64 	andcs	sl, r0, r4, ror #26

08010cd0 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 8010cd0:	f1a0 0004 	sub.w	r0, r0, #4
 8010cd4:	e7e8      	b.n	8010ca8 <StoreNetwork::SaveDhcp(bool)>
 8010cd6:	bf00      	nop

08010cd8 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 8010cd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010cda:	2308      	movs	r3, #8
 8010cdc:	9105      	str	r1, [sp, #20]
 8010cde:	2100      	movs	r1, #0
 8010ce0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ce4:	2304      	movs	r3, #4
 8010ce6:	4805      	ldr	r0, [pc, #20]	; (8010cfc <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 8010ce8:	9300      	str	r3, [sp, #0]
 8010cea:	220c      	movs	r2, #12
 8010cec:	6800      	ldr	r0, [r0, #0]
 8010cee:	ab05      	add	r3, sp, #20
 8010cf0:	f7ff fec6 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010cf4:	b007      	add	sp, #28
 8010cf6:	f85d fb04 	ldr.w	pc, [sp], #4
 8010cfa:	bf00      	nop
 8010cfc:	2000ad64 	andcs	sl, r0, r4, ror #26

08010d00 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 8010d00:	f1a0 0004 	sub.w	r0, r0, #4
 8010d04:	e7e8      	b.n	8010cd8 <StoreNetwork::SaveGatewayIp(unsigned int)>
 8010d06:	bf00      	nop

08010d08 <StoreNetwork::SaveNetMask(unsigned int)>:
 8010d08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d0a:	2304      	movs	r3, #4
 8010d0c:	9105      	str	r1, [sp, #20]
 8010d0e:	2100      	movs	r1, #0
 8010d10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010d14:	4804      	ldr	r0, [pc, #16]	; (8010d28 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8010d16:	9300      	str	r3, [sp, #0]
 8010d18:	2208      	movs	r2, #8
 8010d1a:	6800      	ldr	r0, [r0, #0]
 8010d1c:	ab05      	add	r3, sp, #20
 8010d1e:	f7ff feaf 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d22:	b007      	add	sp, #28
 8010d24:	f85d fb04 	ldr.w	pc, [sp], #4
 8010d28:	2000ad64 	andcs	sl, r0, r4, ror #26

08010d2c <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8010d2c:	f1a0 0004 	sub.w	r0, r0, #4
 8010d30:	e7ea      	b.n	8010d08 <StoreNetwork::SaveNetMask(unsigned int)>
 8010d32:	bf00      	nop

08010d34 <StoreNetwork::SaveIp(unsigned int)>:
 8010d34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d36:	2302      	movs	r3, #2
 8010d38:	9105      	str	r1, [sp, #20]
 8010d3a:	2100      	movs	r1, #0
 8010d3c:	2204      	movs	r2, #4
 8010d3e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010d42:	4804      	ldr	r0, [pc, #16]	; (8010d54 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8010d44:	9200      	str	r2, [sp, #0]
 8010d46:	6800      	ldr	r0, [r0, #0]
 8010d48:	ab05      	add	r3, sp, #20
 8010d4a:	f7ff fe99 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d4e:	b007      	add	sp, #28
 8010d50:	f85d fb04 	ldr.w	pc, [sp], #4
 8010d54:	2000ad64 	andcs	sl, r0, r4, ror #26

08010d58 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8010d58:	f1a0 0004 	sub.w	r0, r0, #4
 8010d5c:	e7ea      	b.n	8010d34 <StoreNetwork::SaveIp(unsigned int)>
 8010d5e:	bf00      	nop

08010d60 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8010d60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010d62:	460b      	mov	r3, r1
 8010d64:	2020      	movs	r0, #32
 8010d66:	2100      	movs	r1, #0
 8010d68:	2a40      	cmp	r2, #64	; 0x40
 8010d6a:	bf28      	it	cs
 8010d6c:	2240      	movcs	r2, #64	; 0x40
 8010d6e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8010d72:	4804      	ldr	r0, [pc, #16]	; (8010d84 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 8010d74:	9200      	str	r2, [sp, #0]
 8010d76:	6800      	ldr	r0, [r0, #0]
 8010d78:	2215      	movs	r2, #21
 8010d7a:	f7ff fe81 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d7e:	b005      	add	sp, #20
 8010d80:	f85d fb04 	ldr.w	pc, [sp], #4
 8010d84:	2000ad64 	andcs	sl, r0, r4, ror #26

08010d88 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8010d88:	f1a0 0004 	sub.w	r0, r0, #4
 8010d8c:	e7e8      	b.n	8010d60 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 8010d8e:	bf00      	nop

08010d90 <StoreNetwork::~StoreNetwork()>:
 8010d90:	b510      	push	{r4, lr}
 8010d92:	4604      	mov	r4, r0
 8010d94:	f001 fa06 	bl	80121a4 <operator delete(void*)>
 8010d98:	4620      	mov	r0, r4
 8010d9a:	bd10      	pop	{r4, pc}

08010d9c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8010d9c:	f1a0 0004 	sub.w	r0, r0, #4
 8010da0:	e7f6      	b.n	8010d90 <StoreNetwork::~StoreNetwork()>
	...

08010da4 <StoreNetwork::Copy(networkparams::Params*)>:
 8010da4:	b507      	push	{r0, r1, r2, lr}
 8010da6:	2301      	movs	r3, #1
 8010da8:	460a      	mov	r2, r1
 8010daa:	2100      	movs	r1, #0
 8010dac:	e9cd 1300 	strd	r1, r3, [sp]
 8010db0:	4803      	ldr	r0, [pc, #12]	; (8010dc0 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 8010db2:	235e      	movs	r3, #94	; 0x5e
 8010db4:	6800      	ldr	r0, [r0, #0]
 8010db6:	f7ff fea3 	bl	8010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8010dba:	b003      	add	sp, #12
 8010dbc:	f85d fb04 	ldr.w	pc, [sp], #4
 8010dc0:	2000ad64 	andcs	sl, r0, r4, ror #26

08010dc4 <StoreNetwork::StoreNetwork()>:
 8010dc4:	4a03      	ldr	r2, [pc, #12]	; (8010dd4 <StoreNetwork::StoreNetwork()+0x10>)
 8010dc6:	6002      	str	r2, [r0, #0]
 8010dc8:	322c      	adds	r2, #44	; 0x2c
 8010dca:	6042      	str	r2, [r0, #4]
 8010dcc:	4a02      	ldr	r2, [pc, #8]	; (8010dd8 <StoreNetwork::StoreNetwork()+0x14>)
 8010dce:	6010      	str	r0, [r2, #0]
 8010dd0:	4770      	bx	lr
 8010dd2:	bf00      	nop
 8010dd4:	080168a0 	stmdaeq	r1, {r5, r7, fp, sp, lr}
 8010dd8:	2000ad70 	andcs	sl, r0, r0, ror sp

08010ddc <StoreRemoteConfig::~StoreRemoteConfig()>:
 8010ddc:	4770      	bx	lr
	...

08010de0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8010de0:	b507      	push	{r0, r1, r2, lr}
 8010de2:	2300      	movs	r3, #0
 8010de4:	460a      	mov	r2, r1
 8010de6:	2101      	movs	r1, #1
 8010de8:	e9cd 3100 	strd	r3, r1, [sp]
 8010dec:	4804      	ldr	r0, [pc, #16]	; (8010e00 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 8010dee:	2320      	movs	r3, #32
 8010df0:	210c      	movs	r1, #12
 8010df2:	6800      	ldr	r0, [r0, #0]
 8010df4:	f7ff fe84 	bl	8010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8010df8:	b003      	add	sp, #12
 8010dfa:	f85d fb04 	ldr.w	pc, [sp], #4
 8010dfe:	bf00      	nop
 8010e00:	2000ad64 	andcs	sl, r0, r4, ror #26

08010e04 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8010e04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e06:	2200      	movs	r2, #0
 8010e08:	460b      	mov	r3, r1
 8010e0a:	2120      	movs	r1, #32
 8010e0c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010e10:	4804      	ldr	r0, [pc, #16]	; (8010e24 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8010e12:	9100      	str	r1, [sp, #0]
 8010e14:	6800      	ldr	r0, [r0, #0]
 8010e16:	210c      	movs	r1, #12
 8010e18:	f7ff fe32 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010e1c:	b005      	add	sp, #20
 8010e1e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e22:	bf00      	nop
 8010e24:	2000ad64 	andcs	sl, r0, r4, ror #26

08010e28 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8010e28:	b510      	push	{r4, lr}
 8010e2a:	4604      	mov	r4, r0
 8010e2c:	f001 f9ba 	bl	80121a4 <operator delete(void*)>
 8010e30:	4620      	mov	r0, r4
 8010e32:	bd10      	pop	{r4, pc}

08010e34 <StoreRemoteConfig::StoreRemoteConfig()>:
 8010e34:	4a02      	ldr	r2, [pc, #8]	; (8010e40 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 8010e36:	6002      	str	r2, [r0, #0]
 8010e38:	4a02      	ldr	r2, [pc, #8]	; (8010e44 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 8010e3a:	6010      	str	r0, [r2, #0]
 8010e3c:	4770      	bx	lr
 8010e3e:	bf00      	nop
 8010e40:	080168f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, sp, lr}
 8010e44:	2000ad74 	andcs	sl, r0, r4, ror sp

08010e48 <StoreDevice::StoreDevice()>:
 8010e48:	b510      	push	{r4, lr}
 8010e4a:	4604      	mov	r4, r0
 8010e4c:	f000 f938 	bl	80110c0 <FlashCode::FlashCode()>
 8010e50:	7823      	ldrb	r3, [r4, #0]
 8010e52:	4620      	mov	r0, r4
 8010e54:	7063      	strb	r3, [r4, #1]
 8010e56:	bd10      	pop	{r4, pc}

08010e58 <StoreDevice::GetSize() const>:
 8010e58:	f000 b94c 	b.w	80110f4 <FlashCode::GetSize() const>

08010e5c <StoreDevice::GetSectorSize() const>:
 8010e5c:	f000 b952 	b.w	8011104 <FlashCode::GetSectorSize() const>

08010e60 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 8010e60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e62:	ac03      	add	r4, sp, #12
 8010e64:	9400      	str	r4, [sp, #0]
 8010e66:	f000 f950 	bl	801110a <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 8010e6a:	9b06      	ldr	r3, [sp, #24]
 8010e6c:	9a03      	ldr	r2, [sp, #12]
 8010e6e:	601a      	str	r2, [r3, #0]
 8010e70:	b004      	add	sp, #16
 8010e72:	bd10      	pop	{r4, pc}

08010e74 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8010e74:	b513      	push	{r0, r1, r4, lr}
 8010e76:	461c      	mov	r4, r3
 8010e78:	ab01      	add	r3, sp, #4
 8010e7a:	f000 f955 	bl	8011128 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 8010e7e:	9b01      	ldr	r3, [sp, #4]
 8010e80:	6023      	str	r3, [r4, #0]
 8010e82:	b002      	add	sp, #8
 8010e84:	bd10      	pop	{r4, pc}

08010e86 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8010e86:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e88:	ac03      	add	r4, sp, #12
 8010e8a:	9400      	str	r4, [sp, #0]
 8010e8c:	f000 f9ec 	bl	8011268 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 8010e90:	9b06      	ldr	r3, [sp, #24]
 8010e92:	9a03      	ldr	r2, [sp, #12]
 8010e94:	601a      	str	r2, [r3, #0]
 8010e96:	b004      	add	sp, #16
 8010e98:	bd10      	pop	{r4, pc}

08010e9a <StoreE131::~StoreE131()>:
 8010e9a:	4770      	bx	lr

08010e9c <StoreE131::Copy(e131params::Params*)>:
 8010e9c:	b507      	push	{r0, r1, r2, lr}
 8010e9e:	2300      	movs	r3, #0
 8010ea0:	460a      	mov	r2, r1
 8010ea2:	2101      	movs	r1, #1
 8010ea4:	e9cd 3100 	strd	r3, r1, [sp]
 8010ea8:	4804      	ldr	r0, [pc, #16]	; (8010ebc <StoreE131::Copy(e131params::Params*)+0x20>)
 8010eaa:	231f      	movs	r3, #31
 8010eac:	2104      	movs	r1, #4
 8010eae:	6800      	ldr	r0, [r0, #0]
 8010eb0:	f7ff fe26 	bl	8010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8010eb4:	b003      	add	sp, #12
 8010eb6:	f85d fb04 	ldr.w	pc, [sp], #4
 8010eba:	bf00      	nop
 8010ebc:	2000ad64 	andcs	sl, r0, r4, ror #26

08010ec0 <StoreE131::Update(e131params::Params const*)>:
 8010ec0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010ec2:	2200      	movs	r2, #0
 8010ec4:	460b      	mov	r3, r1
 8010ec6:	211f      	movs	r1, #31
 8010ec8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010ecc:	4804      	ldr	r0, [pc, #16]	; (8010ee0 <StoreE131::Update(e131params::Params const*)+0x20>)
 8010ece:	9100      	str	r1, [sp, #0]
 8010ed0:	6800      	ldr	r0, [r0, #0]
 8010ed2:	2104      	movs	r1, #4
 8010ed4:	f7ff fdd4 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010ed8:	b005      	add	sp, #20
 8010eda:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ede:	bf00      	nop
 8010ee0:	2000ad64 	andcs	sl, r0, r4, ror #26

08010ee4 <StoreE131::~StoreE131()>:
 8010ee4:	b510      	push	{r4, lr}
 8010ee6:	4604      	mov	r4, r0
 8010ee8:	f001 f95c 	bl	80121a4 <operator delete(void*)>
 8010eec:	4620      	mov	r0, r4
 8010eee:	bd10      	pop	{r4, pc}

08010ef0 <StoreE131::StoreE131()>:
 8010ef0:	4a02      	ldr	r2, [pc, #8]	; (8010efc <StoreE131::StoreE131()+0xc>)
 8010ef2:	6002      	str	r2, [r0, #0]
 8010ef4:	4a02      	ldr	r2, [pc, #8]	; (8010f00 <StoreE131::StoreE131()+0x10>)
 8010ef6:	6010      	str	r0, [r2, #0]
 8010ef8:	4770      	bx	lr
 8010efa:	bf00      	nop
 8010efc:	08016908 	stmdaeq	r1, {r3, r8, fp, sp, lr}
 8010f00:	2000ad78 	andcs	sl, r0, r8, ror sp

08010f04 <StorePixelDmx::~StorePixelDmx()>:
 8010f04:	4770      	bx	lr

08010f06 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8010f06:	3804      	subs	r0, #4
 8010f08:	4770      	bx	lr
	...

08010f0c <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 8010f0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010f0e:	2200      	movs	r2, #0
 8010f10:	460b      	mov	r3, r1
 8010f12:	2118      	movs	r1, #24
 8010f14:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010f18:	4804      	ldr	r0, [pc, #16]	; (8010f2c <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8010f1a:	9100      	str	r1, [sp, #0]
 8010f1c:	6800      	ldr	r0, [r0, #0]
 8010f1e:	2103      	movs	r1, #3
 8010f20:	f7ff fdae 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010f24:	b005      	add	sp, #20
 8010f26:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f2a:	bf00      	nop
 8010f2c:	2000ad64 	andcs	sl, r0, r4, ror #26

08010f30 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8010f30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f32:	2304      	movs	r3, #4
 8010f34:	2200      	movs	r2, #0
 8010f36:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010f3a:	2302      	movs	r3, #2
 8010f3c:	4806      	ldr	r0, [pc, #24]	; (8010f58 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 8010f3e:	9300      	str	r3, [sp, #0]
 8010f40:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010f44:	2207      	movs	r2, #7
 8010f46:	2103      	movs	r1, #3
 8010f48:	6800      	ldr	r0, [r0, #0]
 8010f4a:	f10d 0316 	add.w	r3, sp, #22
 8010f4e:	f7ff fd97 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010f52:	b007      	add	sp, #28
 8010f54:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f58:	2000ad64 	andcs	sl, r0, r4, ror #26

08010f5c <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8010f5c:	f1a0 0004 	sub.w	r0, r0, #4
 8010f60:	e7e6      	b.n	8010f30 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 8010f62:	bf00      	nop

08010f64 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8010f64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f66:	2308      	movs	r3, #8
 8010f68:	2200      	movs	r2, #0
 8010f6a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010f6e:	2301      	movs	r3, #1
 8010f70:	4806      	ldr	r0, [pc, #24]	; (8010f8c <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 8010f72:	9300      	str	r3, [sp, #0]
 8010f74:	f88d 1017 	strb.w	r1, [sp, #23]
 8010f78:	2210      	movs	r2, #16
 8010f7a:	2103      	movs	r1, #3
 8010f7c:	6800      	ldr	r0, [r0, #0]
 8010f7e:	f10d 0317 	add.w	r3, sp, #23
 8010f82:	f7ff fd7d 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010f86:	b007      	add	sp, #28
 8010f88:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f8c:	2000ad64 	andcs	sl, r0, r4, ror #26

08010f90 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 8010f90:	f1a0 0004 	sub.w	r0, r0, #4
 8010f94:	e7e6      	b.n	8010f64 <StorePixelDmx::SaveTestPattern(unsigned char)>
 8010f96:	bf00      	nop

08010f98 <StorePixelDmx::SaveMap(unsigned char)>:
 8010f98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f9a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010f9e:	2200      	movs	r2, #0
 8010fa0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010fa4:	2301      	movs	r3, #1
 8010fa6:	4807      	ldr	r0, [pc, #28]	; (8010fc4 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 8010fa8:	9300      	str	r3, [sp, #0]
 8010faa:	f88d 1017 	strb.w	r1, [sp, #23]
 8010fae:	2213      	movs	r2, #19
 8010fb0:	2103      	movs	r1, #3
 8010fb2:	6800      	ldr	r0, [r0, #0]
 8010fb4:	f10d 0317 	add.w	r3, sp, #23
 8010fb8:	f7ff fd62 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010fbc:	b007      	add	sp, #28
 8010fbe:	f85d fb04 	ldr.w	pc, [sp], #4
 8010fc2:	bf00      	nop
 8010fc4:	2000ad64 	andcs	sl, r0, r4, ror #26

08010fc8 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 8010fc8:	f1a0 0004 	sub.w	r0, r0, #4
 8010fcc:	e7e4      	b.n	8010f98 <StorePixelDmx::SaveMap(unsigned char)>
 8010fce:	bf00      	nop

08010fd0 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8010fd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010fd2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010fd6:	2200      	movs	r2, #0
 8010fd8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010fdc:	2302      	movs	r3, #2
 8010fde:	4807      	ldr	r0, [pc, #28]	; (8010ffc <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 8010fe0:	9300      	str	r3, [sp, #0]
 8010fe2:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010fe6:	2211      	movs	r2, #17
 8010fe8:	2103      	movs	r1, #3
 8010fea:	6800      	ldr	r0, [r0, #0]
 8010fec:	f10d 0316 	add.w	r3, sp, #22
 8010ff0:	f7ff fd46 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010ff4:	b007      	add	sp, #28
 8010ff6:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ffa:	bf00      	nop
 8010ffc:	2000ad64 	andcs	sl, r0, r4, ror #26

08011000 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 8011000:	f1a0 0004 	sub.w	r0, r0, #4
 8011004:	e7e4      	b.n	8010fd0 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 8011006:	bf00      	nop

08011008 <StorePixelDmx::SaveCount(unsigned short)>:
 8011008:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801100a:	2302      	movs	r3, #2
 801100c:	2200      	movs	r2, #0
 801100e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011012:	4807      	ldr	r0, [pc, #28]	; (8011030 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8011014:	9300      	str	r3, [sp, #0]
 8011016:	f8ad 1016 	strh.w	r1, [sp, #22]
 801101a:	2205      	movs	r2, #5
 801101c:	2103      	movs	r1, #3
 801101e:	6800      	ldr	r0, [r0, #0]
 8011020:	f10d 0316 	add.w	r3, sp, #22
 8011024:	f7ff fd2c 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011028:	b007      	add	sp, #28
 801102a:	f85d fb04 	ldr.w	pc, [sp], #4
 801102e:	bf00      	nop
 8011030:	2000ad64 	andcs	sl, r0, r4, ror #26

08011034 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8011034:	f1a0 0004 	sub.w	r0, r0, #4
 8011038:	e7e6      	b.n	8011008 <StorePixelDmx::SaveCount(unsigned short)>
 801103a:	bf00      	nop

0801103c <StorePixelDmx::SaveType(unsigned char)>:
 801103c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801103e:	2301      	movs	r3, #1
 8011040:	2200      	movs	r2, #0
 8011042:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011046:	4807      	ldr	r0, [pc, #28]	; (8011064 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8011048:	9300      	str	r3, [sp, #0]
 801104a:	f88d 1017 	strb.w	r1, [sp, #23]
 801104e:	2204      	movs	r2, #4
 8011050:	2103      	movs	r1, #3
 8011052:	6800      	ldr	r0, [r0, #0]
 8011054:	f10d 0317 	add.w	r3, sp, #23
 8011058:	f7ff fd12 	bl	8010a80 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801105c:	b007      	add	sp, #28
 801105e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011062:	bf00      	nop
 8011064:	2000ad64 	andcs	sl, r0, r4, ror #26

08011068 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8011068:	f1a0 0004 	sub.w	r0, r0, #4
 801106c:	e7e6      	b.n	801103c <StorePixelDmx::SaveType(unsigned char)>
 801106e:	bf00      	nop

08011070 <StorePixelDmx::~StorePixelDmx()>:
 8011070:	b510      	push	{r4, lr}
 8011072:	4604      	mov	r4, r0
 8011074:	f001 f896 	bl	80121a4 <operator delete(void*)>
 8011078:	4620      	mov	r0, r4
 801107a:	bd10      	pop	{r4, pc}

0801107c <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 801107c:	f1a0 0004 	sub.w	r0, r0, #4
 8011080:	e7f6      	b.n	8011070 <StorePixelDmx::~StorePixelDmx()>
	...

08011084 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 8011084:	b507      	push	{r0, r1, r2, lr}
 8011086:	2300      	movs	r3, #0
 8011088:	460a      	mov	r2, r1
 801108a:	2101      	movs	r1, #1
 801108c:	e9cd 3100 	strd	r3, r1, [sp]
 8011090:	4804      	ldr	r0, [pc, #16]	; (80110a4 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 8011092:	2318      	movs	r3, #24
 8011094:	2103      	movs	r1, #3
 8011096:	6800      	ldr	r0, [r0, #0]
 8011098:	f7ff fd32 	bl	8010b00 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 801109c:	b003      	add	sp, #12
 801109e:	f85d fb04 	ldr.w	pc, [sp], #4
 80110a2:	bf00      	nop
 80110a4:	2000ad64 	andcs	sl, r0, r4, ror #26

080110a8 <StorePixelDmx::StorePixelDmx()>:
 80110a8:	4a03      	ldr	r2, [pc, #12]	; (80110b8 <StorePixelDmx::StorePixelDmx()+0x10>)
 80110aa:	6002      	str	r2, [r0, #0]
 80110ac:	3230      	adds	r2, #48	; 0x30
 80110ae:	6042      	str	r2, [r0, #4]
 80110b0:	4a02      	ldr	r2, [pc, #8]	; (80110bc <StorePixelDmx::StorePixelDmx()+0x14>)
 80110b2:	6010      	str	r0, [r2, #0]
 80110b4:	4770      	bx	lr
 80110b6:	bf00      	nop
 80110b8:	08016920 	stmdaeq	r1, {r5, r8, fp, sp, lr}
 80110bc:	2000ad7c 	andcs	sl, r0, ip, ror sp

080110c0 <FlashCode::FlashCode()>:
 80110c0:	b538      	push	{r3, r4, r5, lr}
 80110c2:	4b09      	ldr	r3, [pc, #36]	; (80110e8 <FlashCode::FlashCode()+0x28>)
 80110c4:	4604      	mov	r4, r0
 80110c6:	6018      	str	r0, [r3, #0]
 80110c8:	2301      	movs	r3, #1
 80110ca:	7003      	strb	r3, [r0, #0]
 80110cc:	f000 f812 	bl	80110f4 <FlashCode::GetSize() const>
 80110d0:	4605      	mov	r5, r0
 80110d2:	4620      	mov	r0, r4
 80110d4:	f000 f80e 	bl	80110f4 <FlashCode::GetSize() const>
 80110d8:	462a      	mov	r2, r5
 80110da:	0a83      	lsrs	r3, r0, #10
 80110dc:	4903      	ldr	r1, [pc, #12]	; (80110ec <FlashCode::FlashCode()+0x2c>)
 80110de:	4804      	ldr	r0, [pc, #16]	; (80110f0 <FlashCode::FlashCode()+0x30>)
 80110e0:	f7f8 f8ce 	bl	8009280 <printf>
 80110e4:	4620      	mov	r0, r4
 80110e6:	bd38      	pop	{r3, r4, r5, pc}
 80110e8:	2000ad80 	andcs	sl, r0, r0, lsl #27
 80110ec:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 80110f0:	08016970 	stmdaeq	r1, {r4, r5, r6, r8, fp, sp, lr}

080110f4 <FlashCode::GetSize() const>:
 80110f4:	4b02      	ldr	r3, [pc, #8]	; (8011100 <FlashCode::GetSize() const+0xc>)
 80110f6:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 80110fa:	0280      	lsls	r0, r0, #10
 80110fc:	4770      	bx	lr
 80110fe:	bf00      	nop
 8011100:	1ffff700 	svcne	0x00fff700

08011104 <FlashCode::GetSectorSize() const>:
 8011104:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8011108:	4770      	bx	lr

0801110a <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 801110a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 801110e:	441a      	add	r2, r3
 8011110:	4293      	cmp	r3, r2
 8011112:	d104      	bne.n	801111e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 8011114:	2200      	movs	r2, #0
 8011116:	9b00      	ldr	r3, [sp, #0]
 8011118:	2001      	movs	r0, #1
 801111a:	601a      	str	r2, [r3, #0]
 801111c:	4770      	bx	lr
 801111e:	f851 0b04 	ldr.w	r0, [r1], #4
 8011122:	f843 0b04 	str.w	r0, [r3], #4
 8011126:	e7f3      	b.n	8011110 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

08011128 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 8011128:	2000      	movs	r0, #0
 801112a:	b538      	push	{r3, r4, r5, lr}
 801112c:	4c47      	ldr	r4, [pc, #284]	; (801124c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 801112e:	6018      	str	r0, [r3, #0]
 8011130:	6823      	ldr	r3, [r4, #0]
 8011132:	2b04      	cmp	r3, #4
 8011134:	f200 8082 	bhi.w	801123c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8011138:	e8df f003 	tbb	[pc, r3]
 801113c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8011140:	4b430080 	blmi	90d1348 <__exidx_end+0x10ba400>
 8011144:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8011148:	6019      	str	r1, [r3, #0]
 801114a:	4b42      	ldr	r3, [pc, #264]	; (8011254 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 801114c:	601a      	str	r2, [r3, #0]
 801114e:	4b42      	ldr	r3, [pc, #264]	; (8011258 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 8011150:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8011154:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011158:	4b40      	ldr	r3, [pc, #256]	; (801125c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 801115a:	d807      	bhi.n	801116c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 801115c:	2201      	movs	r2, #1
 801115e:	701a      	strb	r2, [r3, #0]
 8011160:	f001 feac 	bl	8012ebc <fmc_bank0_unlock>
 8011164:	2301      	movs	r3, #1
 8011166:	6023      	str	r3, [r4, #0]
 8011168:	2000      	movs	r0, #0
 801116a:	e026      	b.n	80111ba <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 801116c:	4a3c      	ldr	r2, [pc, #240]	; (8011260 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 801116e:	4291      	cmp	r1, r2
 8011170:	d3f4      	bcc.n	801115c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 8011172:	2200      	movs	r2, #0
 8011174:	701a      	strb	r2, [r3, #0]
 8011176:	f001 feaf 	bl	8012ed8 <fmc_bank1_unlock>
 801117a:	e7f3      	b.n	8011164 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 801117c:	4d37      	ldr	r5, [pc, #220]	; (801125c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 801117e:	782b      	ldrb	r3, [r5, #0]
 8011180:	b15b      	cbz	r3, 801119a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 8011182:	f001 fec7 	bl	8012f14 <fmc_bank0_state_get>
 8011186:	2801      	cmp	r0, #1
 8011188:	d0ee      	beq.n	8011168 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 801118a:	7829      	ldrb	r1, [r5, #0]
 801118c:	4b35      	ldr	r3, [pc, #212]	; (8011264 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 801118e:	b939      	cbnz	r1, 80111a0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 8011190:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011192:	f022 0202 	bic.w	r2, r2, #2
 8011196:	651a      	str	r2, [r3, #80]	; 0x50
 8011198:	e006      	b.n	80111a8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 801119a:	f001 fecd 	bl	8012f38 <fmc_bank1_state_get>
 801119e:	e7f2      	b.n	8011186 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 80111a0:	691a      	ldr	r2, [r3, #16]
 80111a2:	f022 0202 	bic.w	r2, r2, #2
 80111a6:	611a      	str	r2, [r3, #16]
 80111a8:	4b2a      	ldr	r3, [pc, #168]	; (8011254 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 80111aa:	681b      	ldr	r3, [r3, #0]
 80111ac:	b94b      	cbnz	r3, 80111c2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 80111ae:	b129      	cbz	r1, 80111bc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 80111b0:	f001 fea0 	bl	8012ef4 <fmc_bank0_lock>
 80111b4:	2300      	movs	r3, #0
 80111b6:	2001      	movs	r0, #1
 80111b8:	6023      	str	r3, [r4, #0]
 80111ba:	bd38      	pop	{r3, r4, r5, pc}
 80111bc:	f001 fea2 	bl	8012f04 <fmc_bank1_lock>
 80111c0:	e7f8      	b.n	80111b4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 80111c2:	2302      	movs	r3, #2
 80111c4:	e7cf      	b.n	8011166 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 80111c6:	4923      	ldr	r1, [pc, #140]	; (8011254 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 80111c8:	680b      	ldr	r3, [r1, #0]
 80111ca:	2b00      	cmp	r3, #0
 80111cc:	d0ca      	beq.n	8011164 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 80111ce:	4b23      	ldr	r3, [pc, #140]	; (801125c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 80111d0:	4a1f      	ldr	r2, [pc, #124]	; (8011250 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 80111d2:	7818      	ldrb	r0, [r3, #0]
 80111d4:	4b23      	ldr	r3, [pc, #140]	; (8011264 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 80111d6:	b190      	cbz	r0, 80111fe <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 80111d8:	6918      	ldr	r0, [r3, #16]
 80111da:	f040 0002 	orr.w	r0, r0, #2
 80111de:	6118      	str	r0, [r3, #16]
 80111e0:	6810      	ldr	r0, [r2, #0]
 80111e2:	6158      	str	r0, [r3, #20]
 80111e4:	6918      	ldr	r0, [r3, #16]
 80111e6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80111ea:	6118      	str	r0, [r3, #16]
 80111ec:	680b      	ldr	r3, [r1, #0]
 80111ee:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80111f2:	600b      	str	r3, [r1, #0]
 80111f4:	6813      	ldr	r3, [r2, #0]
 80111f6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80111fa:	6013      	str	r3, [r2, #0]
 80111fc:	e7b2      	b.n	8011164 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 80111fe:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8011200:	f040 0002 	orr.w	r0, r0, #2
 8011204:	6518      	str	r0, [r3, #80]	; 0x50
 8011206:	6810      	ldr	r0, [r2, #0]
 8011208:	6558      	str	r0, [r3, #84]	; 0x54
 801120a:	69dd      	ldr	r5, [r3, #28]
 801120c:	07ad      	lsls	r5, r5, #30
 801120e:	bf48      	it	mi
 8011210:	6158      	strmi	r0, [r3, #20]
 8011212:	4814      	ldr	r0, [pc, #80]	; (8011264 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8011214:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8011216:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801121a:	6503      	str	r3, [r0, #80]	; 0x50
 801121c:	680b      	ldr	r3, [r1, #0]
 801121e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8011222:	600b      	str	r3, [r1, #0]
 8011224:	6813      	ldr	r3, [r2, #0]
 8011226:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801122a:	e7e6      	b.n	80111fa <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 801122c:	4b0b      	ldr	r3, [pc, #44]	; (801125c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 801122e:	781a      	ldrb	r2, [r3, #0]
 8011230:	4b0c      	ldr	r3, [pc, #48]	; (8011264 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8011232:	b132      	cbz	r2, 8011242 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 8011234:	691a      	ldr	r2, [r3, #16]
 8011236:	f022 0201 	bic.w	r2, r2, #1
 801123a:	611a      	str	r2, [r3, #16]
 801123c:	2000      	movs	r0, #0
 801123e:	6020      	str	r0, [r4, #0]
 8011240:	e7bb      	b.n	80111ba <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 8011242:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011244:	f022 0201 	bic.w	r2, r2, #1
 8011248:	651a      	str	r2, [r3, #80]	; 0x50
 801124a:	e7f7      	b.n	801123c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 801124c:	2000ad88 	andcs	sl, r0, r8, lsl #27
 8011250:	2000ad8c 	andcs	sl, r0, ip, lsl #27
 8011254:	2000ad98 	mulcs	r0, r8, sp
 8011258:	1ffff700 	svcne	0x00fff700
 801125c:	2000ad94 	mulcs	r0, r4, sp
 8011260:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8011264:	40022000 	andmi	r2, r2, r0

08011268 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 8011268:	b570      	push	{r4, r5, r6, lr}
 801126a:	2400      	movs	r4, #0
 801126c:	9804      	ldr	r0, [sp, #16]
 801126e:	6004      	str	r4, [r0, #0]
 8011270:	4c48      	ldr	r4, [pc, #288]	; (8011394 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 8011272:	6820      	ldr	r0, [r4, #0]
 8011274:	2804      	cmp	r0, #4
 8011276:	d848      	bhi.n	801130a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 8011278:	e8df f000 	tbb	[pc, r0]
 801127c:	22847c03 	addcs	r7, r4, #768	; 0x300
 8011280:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8011284:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8011288:	6001      	str	r1, [r0, #0]
 801128a:	4844      	ldr	r0, [pc, #272]	; (801139c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 801128c:	6003      	str	r3, [r0, #0]
 801128e:	4b44      	ldr	r3, [pc, #272]	; (80113a0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8011290:	601a      	str	r2, [r3, #0]
 8011292:	4b44      	ldr	r3, [pc, #272]	; (80113a4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 8011294:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8011298:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801129c:	4b42      	ldr	r3, [pc, #264]	; (80113a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 801129e:	d807      	bhi.n	80112b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 80112a0:	2201      	movs	r2, #1
 80112a2:	701a      	strb	r2, [r3, #0]
 80112a4:	f001 fe0a 	bl	8012ebc <fmc_bank0_unlock>
 80112a8:	2303      	movs	r3, #3
 80112aa:	6023      	str	r3, [r4, #0]
 80112ac:	2000      	movs	r0, #0
 80112ae:	e026      	b.n	80112fe <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 80112b0:	4a3e      	ldr	r2, [pc, #248]	; (80113ac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 80112b2:	4291      	cmp	r1, r2
 80112b4:	d3f4      	bcc.n	80112a0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 80112b6:	2200      	movs	r2, #0
 80112b8:	701a      	strb	r2, [r3, #0]
 80112ba:	f001 fe0d 	bl	8012ed8 <fmc_bank1_unlock>
 80112be:	e7f3      	b.n	80112a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 80112c0:	4d39      	ldr	r5, [pc, #228]	; (80113a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 80112c2:	782b      	ldrb	r3, [r5, #0]
 80112c4:	b15b      	cbz	r3, 80112de <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 80112c6:	f001 fe25 	bl	8012f14 <fmc_bank0_state_get>
 80112ca:	2801      	cmp	r0, #1
 80112cc:	d0ee      	beq.n	80112ac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 80112ce:	7829      	ldrb	r1, [r5, #0]
 80112d0:	4b37      	ldr	r3, [pc, #220]	; (80113b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 80112d2:	b939      	cbnz	r1, 80112e4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 80112d4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80112d6:	f022 0201 	bic.w	r2, r2, #1
 80112da:	651a      	str	r2, [r3, #80]	; 0x50
 80112dc:	e006      	b.n	80112ec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 80112de:	f001 fe2b 	bl	8012f38 <fmc_bank1_state_get>
 80112e2:	e7f2      	b.n	80112ca <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 80112e4:	691a      	ldr	r2, [r3, #16]
 80112e6:	f022 0201 	bic.w	r2, r2, #1
 80112ea:	611a      	str	r2, [r3, #16]
 80112ec:	4b2c      	ldr	r3, [pc, #176]	; (80113a0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 80112ee:	681b      	ldr	r3, [r3, #0]
 80112f0:	b94b      	cbnz	r3, 8011306 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 80112f2:	b129      	cbz	r1, 8011300 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 80112f4:	f001 fdfe 	bl	8012ef4 <fmc_bank0_lock>
 80112f8:	2300      	movs	r3, #0
 80112fa:	2001      	movs	r0, #1
 80112fc:	6023      	str	r3, [r4, #0]
 80112fe:	bd70      	pop	{r4, r5, r6, pc}
 8011300:	f001 fe00 	bl	8012f04 <fmc_bank1_lock>
 8011304:	e7f8      	b.n	80112f8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 8011306:	2304      	movs	r3, #4
 8011308:	e7cf      	b.n	80112aa <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 801130a:	4a25      	ldr	r2, [pc, #148]	; (80113a0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 801130c:	6813      	ldr	r3, [r2, #0]
 801130e:	2b03      	cmp	r3, #3
 8011310:	d91a      	bls.n	8011348 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 8011312:	4b25      	ldr	r3, [pc, #148]	; (80113a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8011314:	7819      	ldrb	r1, [r3, #0]
 8011316:	4b26      	ldr	r3, [pc, #152]	; (80113b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8011318:	b189      	cbz	r1, 801133e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 801131a:	6919      	ldr	r1, [r3, #16]
 801131c:	f041 0101 	orr.w	r1, r1, #1
 8011320:	6119      	str	r1, [r3, #16]
 8011322:	4d1e      	ldr	r5, [pc, #120]	; (801139c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8011324:	481c      	ldr	r0, [pc, #112]	; (8011398 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8011326:	6829      	ldr	r1, [r5, #0]
 8011328:	6803      	ldr	r3, [r0, #0]
 801132a:	f851 6b04 	ldr.w	r6, [r1], #4
 801132e:	f843 6b04 	str.w	r6, [r3], #4
 8011332:	6003      	str	r3, [r0, #0]
 8011334:	6813      	ldr	r3, [r2, #0]
 8011336:	6029      	str	r1, [r5, #0]
 8011338:	3b04      	subs	r3, #4
 801133a:	6013      	str	r3, [r2, #0]
 801133c:	e7b4      	b.n	80112a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 801133e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8011340:	f041 0101 	orr.w	r1, r1, #1
 8011344:	6519      	str	r1, [r3, #80]	; 0x50
 8011346:	e7ec      	b.n	8011322 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 8011348:	2b00      	cmp	r3, #0
 801134a:	d0ad      	beq.n	80112a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 801134c:	4b16      	ldr	r3, [pc, #88]	; (80113a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 801134e:	781a      	ldrb	r2, [r3, #0]
 8011350:	4b17      	ldr	r3, [pc, #92]	; (80113b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8011352:	b152      	cbz	r2, 801136a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 8011354:	691a      	ldr	r2, [r3, #16]
 8011356:	f042 0201 	orr.w	r2, r2, #1
 801135a:	611a      	str	r2, [r3, #16]
 801135c:	4a0f      	ldr	r2, [pc, #60]	; (801139c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 801135e:	4b0e      	ldr	r3, [pc, #56]	; (8011398 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8011360:	6812      	ldr	r2, [r2, #0]
 8011362:	681b      	ldr	r3, [r3, #0]
 8011364:	6812      	ldr	r2, [r2, #0]
 8011366:	601a      	str	r2, [r3, #0]
 8011368:	e79e      	b.n	80112a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 801136a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801136c:	f042 0201 	orr.w	r2, r2, #1
 8011370:	651a      	str	r2, [r3, #80]	; 0x50
 8011372:	e7f3      	b.n	801135c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 8011374:	4b0c      	ldr	r3, [pc, #48]	; (80113a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8011376:	781a      	ldrb	r2, [r3, #0]
 8011378:	4b0d      	ldr	r3, [pc, #52]	; (80113b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 801137a:	b132      	cbz	r2, 801138a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 801137c:	691a      	ldr	r2, [r3, #16]
 801137e:	f022 0202 	bic.w	r2, r2, #2
 8011382:	611a      	str	r2, [r3, #16]
 8011384:	2000      	movs	r0, #0
 8011386:	6020      	str	r0, [r4, #0]
 8011388:	e7b9      	b.n	80112fe <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 801138a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801138c:	f022 0202 	bic.w	r2, r2, #2
 8011390:	651a      	str	r2, [r3, #80]	; 0x50
 8011392:	e7f7      	b.n	8011384 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 8011394:	2000ad88 	andcs	sl, r0, r8, lsl #27
 8011398:	2000ad84 	andcs	sl, r0, r4, lsl #27
 801139c:	2000ad90 	mulcs	r0, r0, sp
 80113a0:	2000ad98 	mulcs	r0, r8, sp
 80113a4:	1ffff700 	svcne	0x00fff700
 80113a8:	2000ad94 	mulcs	r0, r4, sp
 80113ac:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 80113b0:	40022000 	andmi	r2, r2, r0

080113b4 <properties::convert_json_file(char*, unsigned short, bool)>:
 80113b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113b8:	4603      	mov	r3, r0
 80113ba:	7800      	ldrb	r0, [r0, #0]
 80113bc:	287b      	cmp	r0, #123	; 0x7b
 80113be:	f040 80a2 	bne.w	8011506 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 80113c2:	b17a      	cbz	r2, 80113e4 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80113c4:	2401      	movs	r4, #1
 80113c6:	461e      	mov	r6, r3
 80113c8:	4620      	mov	r0, r4
 80113ca:	2a00      	cmp	r2, #0
 80113cc:	bf0c      	ite	eq
 80113ce:	f04f 0c0a 	moveq.w	ip, #10
 80113d2:	f04f 0c00 	movne.w	ip, #0
 80113d6:	273d      	movs	r7, #61	; 0x3d
 80113d8:	42a1      	cmp	r1, r4
 80113da:	d850      	bhi.n	801147e <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 80113dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113e0:	463c      	mov	r4, r7
 80113e2:	e7f2      	b.n	80113ca <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80113e4:	2023      	movs	r0, #35	; 0x23
 80113e6:	f803 0b01 	strb.w	r0, [r3], #1
 80113ea:	461c      	mov	r4, r3
 80113ec:	2701      	movs	r7, #1
 80113ee:	42b9      	cmp	r1, r7
 80113f0:	d811      	bhi.n	8011416 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 80113f2:	2001      	movs	r0, #1
 80113f4:	461e      	mov	r6, r3
 80113f6:	230a      	movs	r3, #10
 80113f8:	4625      	mov	r5, r4
 80113fa:	f806 3b01 	strb.w	r3, [r6], #1
 80113fe:	3001      	adds	r0, #1
 8011400:	462b      	mov	r3, r5
 8011402:	781c      	ldrb	r4, [r3, #0]
 8011404:	3501      	adds	r5, #1
 8011406:	2c7b      	cmp	r4, #123	; 0x7b
 8011408:	d0ea      	beq.n	80113e0 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 801140a:	42b9      	cmp	r1, r7
 801140c:	f107 0401 	add.w	r4, r7, #1
 8011410:	d9db      	bls.n	80113ca <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011412:	4627      	mov	r7, r4
 8011414:	e7f4      	b.n	8011400 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8011416:	f814 0b01 	ldrb.w	r0, [r4], #1
 801141a:	2822      	cmp	r0, #34	; 0x22
 801141c:	d119      	bne.n	8011452 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 801141e:	46a4      	mov	ip, r4
 8011420:	461d      	mov	r5, r3
 8011422:	2601      	movs	r6, #1
 8011424:	f89c e000 	ldrb.w	lr, [ip]
 8011428:	4664      	mov	r4, ip
 801142a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801142e:	462b      	mov	r3, r5
 8011430:	4630      	mov	r0, r6
 8011432:	f10c 0c01 	add.w	ip, ip, #1
 8011436:	f105 0501 	add.w	r5, r5, #1
 801143a:	f106 0601 	add.w	r6, r6, #1
 801143e:	d0d9      	beq.n	80113f4 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011440:	3701      	adds	r7, #1
 8011442:	42b9      	cmp	r1, r7
 8011444:	4664      	mov	r4, ip
 8011446:	f805 ec01 	strb.w	lr, [r5, #-1]
 801144a:	d8eb      	bhi.n	8011424 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 801144c:	4630      	mov	r0, r6
 801144e:	462b      	mov	r3, r5
 8011450:	e7d0      	b.n	80113f4 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011452:	3701      	adds	r7, #1
 8011454:	e7cb      	b.n	80113ee <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8011456:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801145a:	d110      	bne.n	801147e <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 801145c:	eba0 0803 	sub.w	r8, r0, r3
 8011460:	461a      	mov	r2, r3
 8011462:	eb08 0003 	add.w	r0, r8, r3
 8011466:	f813 eb01 	ldrb.w	lr, [r3], #1
 801146a:	1c65      	adds	r5, r4, #1
 801146c:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011470:	d04c      	beq.n	801150c <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 8011472:	42a1      	cmp	r1, r4
 8011474:	d911      	bls.n	801149a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8011476:	462c      	mov	r4, r5
 8011478:	f806 eb01 	strb.w	lr, [r6], #1
 801147c:	e7f0      	b.n	8011460 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 801147e:	42a1      	cmp	r1, r4
 8011480:	461d      	mov	r5, r3
 8011482:	f893 e000 	ldrb.w	lr, [r3]
 8011486:	f104 0401 	add.w	r4, r4, #1
 801148a:	f103 0301 	add.w	r3, r3, #1
 801148e:	d8e2      	bhi.n	8011456 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011490:	462b      	mov	r3, r5
 8011492:	e7e3      	b.n	801145c <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8011494:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8011498:	d009      	beq.n	80114ae <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 801149a:	42a9      	cmp	r1, r5
 801149c:	4614      	mov	r4, r2
 801149e:	f892 e000 	ldrb.w	lr, [r2]
 80114a2:	f105 0501 	add.w	r5, r5, #1
 80114a6:	f102 0201 	add.w	r2, r2, #1
 80114aa:	d8f3      	bhi.n	8011494 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 80114ac:	4622      	mov	r2, r4
 80114ae:	7814      	ldrb	r4, [r2, #0]
 80114b0:	4696      	mov	lr, r2
 80114b2:	2c2f      	cmp	r4, #47	; 0x2f
 80114b4:	462b      	mov	r3, r5
 80114b6:	f102 0201 	add.w	r2, r2, #1
 80114ba:	f105 0501 	add.w	r5, r5, #1
 80114be:	d81a      	bhi.n	80114f6 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 80114c0:	4299      	cmp	r1, r3
 80114c2:	d8f4      	bhi.n	80114ae <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80114c4:	2c22      	cmp	r4, #34	; 0x22
 80114c6:	bf08      	it	eq
 80114c8:	4696      	moveq	lr, r2
 80114ca:	4673      	mov	r3, lr
 80114cc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80114d0:	1c6c      	adds	r4, r5, #1
 80114d2:	2a22      	cmp	r2, #34	; 0x22
 80114d4:	d011      	beq.n	80114fa <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80114d6:	2a2c      	cmp	r2, #44	; 0x2c
 80114d8:	d00f      	beq.n	80114fa <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80114da:	2a7d      	cmp	r2, #125	; 0x7d
 80114dc:	d00d      	beq.n	80114fa <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80114de:	42a9      	cmp	r1, r5
 80114e0:	d90f      	bls.n	8011502 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 80114e2:	f1a2 0520 	sub.w	r5, r2, #32
 80114e6:	2d5a      	cmp	r5, #90	; 0x5a
 80114e8:	d803      	bhi.n	80114f2 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 80114ea:	469e      	mov	lr, r3
 80114ec:	f806 2b01 	strb.w	r2, [r6], #1
 80114f0:	3001      	adds	r0, #1
 80114f2:	4625      	mov	r5, r4
 80114f4:	e7e9      	b.n	80114ca <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80114f6:	461d      	mov	r5, r3
 80114f8:	e7e7      	b.n	80114ca <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80114fa:	462c      	mov	r4, r5
 80114fc:	f806 cb01 	strb.w	ip, [r6], #1
 8011500:	3001      	adds	r0, #1
 8011502:	3401      	adds	r4, #1
 8011504:	e768      	b.n	80113d8 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8011506:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801150a:	e767      	b.n	80113dc <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 801150c:	4625      	mov	r5, r4
 801150e:	f806 7b01 	strb.w	r7, [r6], #1
 8011512:	3001      	adds	r0, #1
 8011514:	e7c1      	b.n	801149a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08011518 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8011518:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801151c:	6002      	str	r2, [r0, #0]
 801151e:	4614      	mov	r4, r2
 8011520:	2200      	movs	r2, #0
 8011522:	80c2      	strh	r2, [r0, #6]
 8011524:	4a1c      	ldr	r2, [pc, #112]	; (8011598 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8011526:	4606      	mov	r6, r0
 8011528:	7812      	ldrb	r2, [r2, #0]
 801152a:	8083      	strh	r3, [r0, #4]
 801152c:	f002 0201 	and.w	r2, r2, #1
 8011530:	7202      	strb	r2, [r0, #8]
 8011532:	4608      	mov	r0, r1
 8011534:	4605      	mov	r5, r0
 8011536:	782f      	ldrb	r7, [r5, #0]
 8011538:	3001      	adds	r0, #1
 801153a:	2f00      	cmp	r7, #0
 801153c:	d1fa      	bne.n	8011534 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 801153e:	1a6d      	subs	r5, r5, r1
 8011540:	b29b      	uxth	r3, r3
 8011542:	b1d2      	cbz	r2, 801157a <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8011544:	1d2f      	adds	r7, r5, #4
 8011546:	429f      	cmp	r7, r3
 8011548:	d814      	bhi.n	8011574 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801154a:	f04f 087b 	mov.w	r8, #123	; 0x7b
 801154e:	f04f 0922 	mov.w	r9, #34	; 0x22
 8011552:	462a      	mov	r2, r5
 8011554:	f884 8000 	strb.w	r8, [r4]
 8011558:	f884 9001 	strb.w	r9, [r4, #1]
 801155c:	1ca0      	adds	r0, r4, #2
 801155e:	f000 febc 	bl	80122da <memmove>
 8011562:	223a      	movs	r2, #58	; 0x3a
 8011564:	1963      	adds	r3, r4, r5
 8011566:	3505      	adds	r5, #5
 8011568:	f883 9002 	strb.w	r9, [r3, #2]
 801156c:	70da      	strb	r2, [r3, #3]
 801156e:	80f5      	strh	r5, [r6, #6]
 8011570:	f804 8007 	strb.w	r8, [r4, r7]
 8011574:	4630      	mov	r0, r6
 8011576:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801157a:	1caf      	adds	r7, r5, #2
 801157c:	429f      	cmp	r7, r3
 801157e:	d8f9      	bhi.n	8011574 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011580:	4620      	mov	r0, r4
 8011582:	2323      	movs	r3, #35	; 0x23
 8011584:	462a      	mov	r2, r5
 8011586:	f800 3b01 	strb.w	r3, [r0], #1
 801158a:	f000 fea6 	bl	80122da <memmove>
 801158e:	230a      	movs	r3, #10
 8011590:	442c      	add	r4, r5
 8011592:	7063      	strb	r3, [r4, #1]
 8011594:	80f7      	strh	r7, [r6, #6]
 8011596:	e7ed      	b.n	8011574 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011598:	2000ad9c 	mulcs	r0, ip, sp

0801159c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 801159c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801159e:	469c      	mov	ip, r3
 80115a0:	8885      	ldrh	r5, [r0, #4]
 80115a2:	88c3      	ldrh	r3, [r0, #6]
 80115a4:	b085      	sub	sp, #20
 80115a6:	42ab      	cmp	r3, r5
 80115a8:	d302      	bcc.n	80115b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80115aa:	2000      	movs	r0, #0
 80115ac:	b005      	add	sp, #20
 80115ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115b0:	4604      	mov	r4, r0
 80115b2:	6800      	ldr	r0, [r0, #0]
 80115b4:	1aed      	subs	r5, r5, r3
 80115b6:	4418      	add	r0, r3
 80115b8:	b2d6      	uxtb	r6, r2
 80115ba:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80115be:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80115c2:	f894 e008 	ldrb.w	lr, [r4, #8]
 80115c6:	0e12      	lsrs	r2, r2, #24
 80115c8:	f1bc 0f00 	cmp.w	ip, #0
 80115cc:	d109      	bne.n	80115e2 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80115ce:	f1be 0f00 	cmp.w	lr, #0
 80115d2:	d109      	bne.n	80115e8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80115d4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80115d8:	e9cd 6700 	strd	r6, r7, [sp]
 80115dc:	460b      	mov	r3, r1
 80115de:	4a0e      	ldr	r2, [pc, #56]	; (8011618 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80115e0:	e008      	b.n	80115f4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80115e2:	f1be 0f00 	cmp.w	lr, #0
 80115e6:	d00f      	beq.n	8011608 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80115e8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80115ec:	460b      	mov	r3, r1
 80115ee:	e9cd 6700 	strd	r6, r7, [sp]
 80115f2:	4a0a      	ldr	r2, [pc, #40]	; (801161c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80115f4:	4629      	mov	r1, r5
 80115f6:	f7f7 fe6b 	bl	80092d0 <snprintf>
 80115fa:	4285      	cmp	r5, r0
 80115fc:	dbd5      	blt.n	80115aa <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80115fe:	88e3      	ldrh	r3, [r4, #6]
 8011600:	4403      	add	r3, r0
 8011602:	80e3      	strh	r3, [r4, #6]
 8011604:	2001      	movs	r0, #1
 8011606:	e7d1      	b.n	80115ac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8011608:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801160c:	e9cd 6700 	strd	r6, r7, [sp]
 8011610:	460b      	mov	r3, r1
 8011612:	4a03      	ldr	r2, [pc, #12]	; (8011620 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8011614:	e7ee      	b.n	80115f4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011616:	bf00      	nop
 8011618:	08016a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, sp, lr}
 801161c:	08016a38 	stmdaeq	r1, {r3, r4, r5, r9, fp, sp, lr}
 8011620:	08016a4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, fp, sp, lr}

08011624 <PropertiesBuilder::AddComment(char const*)>:
 8011624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011626:	7a06      	ldrb	r6, [r0, #8]
 8011628:	b996      	cbnz	r6, 8011650 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801162a:	4604      	mov	r4, r0
 801162c:	88c0      	ldrh	r0, [r0, #6]
 801162e:	88a5      	ldrh	r5, [r4, #4]
 8011630:	42a8      	cmp	r0, r5
 8011632:	d20d      	bcs.n	8011650 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011634:	6827      	ldr	r7, [r4, #0]
 8011636:	1a2d      	subs	r5, r5, r0
 8011638:	460b      	mov	r3, r1
 801163a:	4a06      	ldr	r2, [pc, #24]	; (8011654 <PropertiesBuilder::AddComment(char const*)+0x30>)
 801163c:	4629      	mov	r1, r5
 801163e:	4438      	add	r0, r7
 8011640:	f7f7 fe46 	bl	80092d0 <snprintf>
 8011644:	4285      	cmp	r5, r0
 8011646:	bfa1      	itttt	ge
 8011648:	2601      	movge	r6, #1
 801164a:	88e3      	ldrhge	r3, [r4, #6]
 801164c:	18c0      	addge	r0, r0, r3
 801164e:	80e0      	strhge	r0, [r4, #6]
 8011650:	4630      	mov	r0, r6
 8011652:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011654:	08016a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, sp, lr}

08011658 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8011658:	e9c0 1200 	strd	r1, r2, [r0]
 801165c:	4770      	bx	lr

0801165e <ReadConfigFile::~ReadConfigFile()>:
 801165e:	4770      	bx	lr

08011660 <ReadConfigFile::Read(char const*, unsigned int)>:
 8011660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011664:	4606      	mov	r6, r0
 8011666:	460d      	mov	r5, r1
 8011668:	4614      	mov	r4, r2
 801166a:	f04f 0800 	mov.w	r8, #0
 801166e:	b0a0      	sub	sp, #128	; 0x80
 8011670:	b33c      	cbz	r4, 80116c2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011672:	466b      	mov	r3, sp
 8011674:	462a      	mov	r2, r5
 8011676:	4619      	mov	r1, r3
 8011678:	e007      	b.n	801168a <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 801167a:	f803 7b01 	strb.w	r7, [r3], #1
 801167e:	1a58      	subs	r0, r3, r1
 8011680:	287f      	cmp	r0, #127	; 0x7f
 8011682:	4615      	mov	r5, r2
 8011684:	dc1d      	bgt.n	80116c2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011686:	3c01      	subs	r4, #1
 8011688:	d00f      	beq.n	80116aa <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801168a:	7817      	ldrb	r7, [r2, #0]
 801168c:	4610      	mov	r0, r2
 801168e:	2f0d      	cmp	r7, #13
 8011690:	f102 0201 	add.w	r2, r2, #1
 8011694:	d001      	beq.n	801169a <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011696:	2f0a      	cmp	r7, #10
 8011698:	d1ef      	bne.n	801167a <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 801169a:	4605      	mov	r5, r0
 801169c:	b12c      	cbz	r4, 80116aa <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801169e:	f810 2b01 	ldrb.w	r2, [r0], #1
 80116a2:	2a0d      	cmp	r2, #13
 80116a4:	d00b      	beq.n	80116be <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80116a6:	2a0a      	cmp	r2, #10
 80116a8:	d009      	beq.n	80116be <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80116aa:	f89d 2000 	ldrb.w	r2, [sp]
 80116ae:	2a60      	cmp	r2, #96	; 0x60
 80116b0:	d9de      	bls.n	8011670 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80116b2:	f883 8000 	strb.w	r8, [r3]
 80116b6:	e9d6 3000 	ldrd	r3, r0, [r6]
 80116ba:	4798      	blx	r3
 80116bc:	e7d8      	b.n	8011670 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80116be:	3c01      	subs	r4, #1
 80116c0:	e7eb      	b.n	801169a <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80116c2:	b020      	add	sp, #128	; 0x80
 80116c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080116c8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80116c8:	b570      	push	{r4, r5, r6, lr}
 80116ca:	4615      	mov	r5, r2
 80116cc:	461c      	mov	r4, r3
 80116ce:	f000 f91c 	bl	801190a <Sscan::checkName(char const*, char const*)>
 80116d2:	b180      	cbz	r0, 80116f6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80116d4:	2100      	movs	r1, #0
 80116d6:	5c43      	ldrb	r3, [r0, r1]
 80116d8:	6826      	ldr	r6, [r4, #0]
 80116da:	b28a      	uxth	r2, r1
 80116dc:	b143      	cbz	r3, 80116f0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80116de:	42b2      	cmp	r2, r6
 80116e0:	d303      	bcc.n	80116ea <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80116e2:	2b0a      	cmp	r3, #10
 80116e4:	d004      	beq.n	80116f0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80116e6:	2002      	movs	r0, #2
 80116e8:	e004      	b.n	80116f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80116ea:	546b      	strb	r3, [r5, r1]
 80116ec:	3101      	adds	r1, #1
 80116ee:	e7f2      	b.n	80116d6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80116f0:	2000      	movs	r0, #0
 80116f2:	6022      	str	r2, [r4, #0]
 80116f4:	bd70      	pop	{r4, r5, r6, pc}
 80116f6:	2001      	movs	r0, #1
 80116f8:	e7fc      	b.n	80116f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

080116fa <Sscan::Float(char const*, char const*, float&)>:
 80116fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80116fe:	4616      	mov	r6, r2
 8011700:	f000 f903 	bl	801190a <Sscan::checkName(char const*, char const*)>
 8011704:	2800      	cmp	r0, #0
 8011706:	d059      	beq.n	80117bc <Sscan::Float(char const*, char const*, float&)+0xc2>
 8011708:	4604      	mov	r4, r0
 801170a:	7803      	ldrb	r3, [r0, #0]
 801170c:	2b2d      	cmp	r3, #45	; 0x2d
 801170e:	bf08      	it	eq
 8011710:	3401      	addeq	r4, #1
 8011712:	7823      	ldrb	r3, [r4, #0]
 8011714:	bf0c      	ite	eq
 8011716:	f04f 0801 	moveq.w	r8, #1
 801171a:	f04f 0800 	movne.w	r8, #0
 801171e:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011722:	d103      	bne.n	801172c <Sscan::Float(char const*, char const*, float&)+0x32>
 8011724:	2702      	movs	r7, #2
 8011726:	4638      	mov	r0, r7
 8011728:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801172c:	2000      	movs	r0, #0
 801172e:	220a      	movs	r2, #10
 8011730:	7823      	ldrb	r3, [r4, #0]
 8011732:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8011736:	2909      	cmp	r1, #9
 8011738:	d8f4      	bhi.n	8011724 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801173a:	fb02 3000 	mla	r0, r2, r0, r3
 801173e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011742:	3830      	subs	r0, #48	; 0x30
 8011744:	2b2e      	cmp	r3, #46	; 0x2e
 8011746:	d002      	beq.n	801174e <Sscan::Float(char const*, char const*, float&)+0x54>
 8011748:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801174c:	d1f0      	bne.n	8011730 <Sscan::Float(char const*, char const*, float&)+0x36>
 801174e:	f7f6 facf 	bl	8007cf0 <__aeabi_ui2f>
 8011752:	6030      	str	r0, [r6, #0]
 8011754:	7823      	ldrb	r3, [r4, #0]
 8011756:	4605      	mov	r5, r0
 8011758:	2b2e      	cmp	r3, #46	; 0x2e
 801175a:	d008      	beq.n	801176e <Sscan::Float(char const*, char const*, float&)+0x74>
 801175c:	f1b8 0f00 	cmp.w	r8, #0
 8011760:	d101      	bne.n	8011766 <Sscan::Float(char const*, char const*, float&)+0x6c>
 8011762:	2700      	movs	r7, #0
 8011764:	e7df      	b.n	8011726 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011766:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 801176a:	6035      	str	r5, [r6, #0]
 801176c:	e7f9      	b.n	8011762 <Sscan::Float(char const*, char const*, float&)+0x68>
 801176e:	f04f 0901 	mov.w	r9, #1
 8011772:	2000      	movs	r0, #0
 8011774:	220a      	movs	r2, #10
 8011776:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801177a:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 801177e:	d111      	bne.n	80117a4 <Sscan::Float(char const*, char const*, float&)+0xaa>
 8011780:	f7f6 fab6 	bl	8007cf0 <__aeabi_ui2f>
 8011784:	4604      	mov	r4, r0
 8011786:	4648      	mov	r0, r9
 8011788:	f7f6 fab2 	bl	8007cf0 <__aeabi_ui2f>
 801178c:	4601      	mov	r1, r0
 801178e:	4620      	mov	r0, r4
 8011790:	f7f6 fe2c 	bl	80083ec <__aeabi_fdiv>
 8011794:	4629      	mov	r1, r5
 8011796:	f7f6 f9fb 	bl	8007b90 <__addsf3>
 801179a:	f1b8 0f00 	cmp.w	r8, #0
 801179e:	d109      	bne.n	80117b4 <Sscan::Float(char const*, char const*, float&)+0xba>
 80117a0:	6030      	str	r0, [r6, #0]
 80117a2:	e7de      	b.n	8011762 <Sscan::Float(char const*, char const*, float&)+0x68>
 80117a4:	3b30      	subs	r3, #48	; 0x30
 80117a6:	2b09      	cmp	r3, #9
 80117a8:	d8bc      	bhi.n	8011724 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80117aa:	fb02 3000 	mla	r0, r2, r0, r3
 80117ae:	fb02 f909 	mul.w	r9, r2, r9
 80117b2:	e7e0      	b.n	8011776 <Sscan::Float(char const*, char const*, float&)+0x7c>
 80117b4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80117b8:	6030      	str	r0, [r6, #0]
 80117ba:	e7b4      	b.n	8011726 <Sscan::Float(char const*, char const*, float&)+0x2c>
 80117bc:	2701      	movs	r7, #1
 80117be:	e7b2      	b.n	8011726 <Sscan::Float(char const*, char const*, float&)+0x2c>

080117c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80117c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80117c2:	4615      	mov	r5, r2
 80117c4:	f000 f8a1 	bl	801190a <Sscan::checkName(char const*, char const*)>
 80117c8:	bb58      	cbnz	r0, 8011822 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 80117ca:	2001      	movs	r0, #1
 80117cc:	e027      	b.n	801181e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80117ce:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80117d2:	2b09      	cmp	r3, #9
 80117d4:	d822      	bhi.n	801181c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80117d6:	4603      	mov	r3, r0
 80117d8:	fb0c 2101 	mla	r1, ip, r1, r2
 80117dc:	3930      	subs	r1, #48	; 0x30
 80117de:	4618      	mov	r0, r3
 80117e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80117e4:	2a2e      	cmp	r2, #46	; 0x2e
 80117e6:	d115      	bne.n	8011814 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80117e8:	29ff      	cmp	r1, #255	; 0xff
 80117ea:	d817      	bhi.n	801181c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80117ec:	3401      	adds	r4, #1
 80117ee:	2c03      	cmp	r4, #3
 80117f0:	f806 1b01 	strb.w	r1, [r6], #1
 80117f4:	d119      	bne.n	801182a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 80117f6:	2400      	movs	r4, #0
 80117f8:	260a      	movs	r6, #10
 80117fa:	1d1a      	adds	r2, r3, #4
 80117fc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011800:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011804:	d115      	bne.n	8011832 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8011806:	2cff      	cmp	r4, #255	; 0xff
 8011808:	d808      	bhi.n	801181c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801180a:	f88d 4007 	strb.w	r4, [sp, #7]
 801180e:	9b01      	ldr	r3, [sp, #4]
 8011810:	602b      	str	r3, [r5, #0]
 8011812:	e004      	b.n	801181e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011814:	2a00      	cmp	r2, #0
 8011816:	d0e7      	beq.n	80117e8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8011818:	42b8      	cmp	r0, r7
 801181a:	d1d8      	bne.n	80117ce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 801181c:	2002      	movs	r0, #2
 801181e:	b003      	add	sp, #12
 8011820:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011822:	2400      	movs	r4, #0
 8011824:	f04f 0c0a 	mov.w	ip, #10
 8011828:	ae01      	add	r6, sp, #4
 801182a:	4603      	mov	r3, r0
 801182c:	2100      	movs	r1, #0
 801182e:	1d07      	adds	r7, r0, #4
 8011830:	e7d5      	b.n	80117de <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8011832:	4293      	cmp	r3, r2
 8011834:	d0f2      	beq.n	801181c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011836:	3930      	subs	r1, #48	; 0x30
 8011838:	2909      	cmp	r1, #9
 801183a:	d8ef      	bhi.n	801181c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801183c:	fb06 1404 	mla	r4, r6, r4, r1
 8011840:	e7dc      	b.n	80117fc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08011842 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8011842:	b538      	push	{r3, r4, r5, lr}
 8011844:	4615      	mov	r5, r2
 8011846:	f000 f860 	bl	801190a <Sscan::checkName(char const*, char const*)>
 801184a:	b1a0      	cbz	r0, 8011876 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 801184c:	4604      	mov	r4, r0
 801184e:	2100      	movs	r1, #0
 8011850:	220a      	movs	r2, #10
 8011852:	7823      	ldrb	r3, [r4, #0]
 8011854:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011858:	2809      	cmp	r0, #9
 801185a:	d80e      	bhi.n	801187a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801185c:	fb02 3101 	mla	r1, r2, r1, r3
 8011860:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011864:	3930      	subs	r1, #48	; 0x30
 8011866:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801186a:	d1f2      	bne.n	8011852 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 801186c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8011870:	d203      	bcs.n	801187a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011872:	8029      	strh	r1, [r5, #0]
 8011874:	bd38      	pop	{r3, r4, r5, pc}
 8011876:	2001      	movs	r0, #1
 8011878:	e7fc      	b.n	8011874 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 801187a:	2002      	movs	r0, #2
 801187c:	e7fa      	b.n	8011874 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801187e <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 801187e:	b570      	push	{r4, r5, r6, lr}
 8011880:	4615      	mov	r5, r2
 8011882:	f000 f842 	bl	801190a <Sscan::checkName(char const*, char const*)>
 8011886:	b1f8      	cbz	r0, 80118c8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8011888:	2300      	movs	r3, #0
 801188a:	4604      	mov	r4, r0
 801188c:	461a      	mov	r2, r3
 801188e:	260a      	movs	r6, #10
 8011890:	7820      	ldrb	r0, [r4, #0]
 8011892:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 8011896:	2909      	cmp	r1, #9
 8011898:	d818      	bhi.n	80118cc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801189a:	fba3 3106 	umull	r3, r1, r3, r6
 801189e:	fb06 1102 	mla	r1, r6, r2, r1
 80118a2:	3b30      	subs	r3, #48	; 0x30
 80118a4:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 80118a8:	18c3      	adds	r3, r0, r3
 80118aa:	f141 0200 	adc.w	r2, r1, #0
 80118ae:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80118b2:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80118b6:	d1eb      	bne.n	8011890 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 80118b8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80118bc:	4299      	cmp	r1, r3
 80118be:	eb70 0202 	sbcs.w	r2, r0, r2
 80118c2:	d303      	bcc.n	80118cc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80118c4:	602b      	str	r3, [r5, #0]
 80118c6:	bd70      	pop	{r4, r5, r6, pc}
 80118c8:	2001      	movs	r0, #1
 80118ca:	e7fc      	b.n	80118c6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 80118cc:	2002      	movs	r0, #2
 80118ce:	e7fa      	b.n	80118c6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

080118d0 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80118d0:	b538      	push	{r3, r4, r5, lr}
 80118d2:	4615      	mov	r5, r2
 80118d4:	f000 f819 	bl	801190a <Sscan::checkName(char const*, char const*)>
 80118d8:	b198      	cbz	r0, 8011902 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80118da:	4604      	mov	r4, r0
 80118dc:	2100      	movs	r1, #0
 80118de:	220a      	movs	r2, #10
 80118e0:	7823      	ldrb	r3, [r4, #0]
 80118e2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80118e6:	2809      	cmp	r0, #9
 80118e8:	d80d      	bhi.n	8011906 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80118ea:	fb02 3101 	mla	r1, r2, r1, r3
 80118ee:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80118f2:	3930      	subs	r1, #48	; 0x30
 80118f4:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80118f8:	d1f2      	bne.n	80118e0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80118fa:	29ff      	cmp	r1, #255	; 0xff
 80118fc:	d803      	bhi.n	8011906 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80118fe:	7029      	strb	r1, [r5, #0]
 8011900:	bd38      	pop	{r3, r4, r5, pc}
 8011902:	2001      	movs	r0, #1
 8011904:	e7fc      	b.n	8011900 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8011906:	2002      	movs	r0, #2
 8011908:	e7fa      	b.n	8011900 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0801190a <Sscan::checkName(char const*, char const*)>:
 801190a:	4603      	mov	r3, r0
 801190c:	b510      	push	{r4, lr}
 801190e:	3901      	subs	r1, #1
 8011910:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8011914:	461c      	mov	r4, r3
 8011916:	f813 2b01 	ldrb.w	r2, [r3], #1
 801191a:	b120      	cbz	r0, 8011926 <Sscan::checkName(char const*, char const*)+0x1c>
 801191c:	b10a      	cbz	r2, 8011922 <Sscan::checkName(char const*, char const*)+0x18>
 801191e:	4290      	cmp	r0, r2
 8011920:	d0f6      	beq.n	8011910 <Sscan::checkName(char const*, char const*)+0x6>
 8011922:	2000      	movs	r0, #0
 8011924:	e006      	b.n	8011934 <Sscan::checkName(char const*, char const*)+0x2a>
 8011926:	2a3d      	cmp	r2, #61	; 0x3d
 8011928:	d104      	bne.n	8011934 <Sscan::checkName(char const*, char const*)+0x2a>
 801192a:	7860      	ldrb	r0, [r4, #1]
 801192c:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8011930:	d000      	beq.n	8011934 <Sscan::checkName(char const*, char const*)+0x2a>
 8011932:	1c60      	adds	r0, r4, #1
 8011934:	bd10      	pop	{r4, pc}
	...

08011938 <Display::PrintInfo() [clone .isra.0]>:
 8011938:	b910      	cbnz	r0, 8011940 <Display::PrintInfo() [clone .isra.0]+0x8>
 801193a:	4803      	ldr	r0, [pc, #12]	; (8011948 <Display::PrintInfo() [clone .isra.0]+0x10>)
 801193c:	f000 bd05 	b.w	801234a <puts>
 8011940:	6803      	ldr	r3, [r0, #0]
 8011942:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011944:	4718      	bx	r3
 8011946:	bf00      	nop
 8011948:	08016b83 	stmdaeq	r1, {r0, r1, r7, r8, r9, fp, sp, lr}

0801194c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 801194c:	b513      	push	{r0, r1, r4, lr}
 801194e:	4604      	mov	r4, r0
 8011950:	0a13      	lsrs	r3, r2, #8
 8011952:	7800      	ldrb	r0, [r0, #0]
 8011954:	f88d 1004 	strb.w	r1, [sp, #4]
 8011958:	f88d 3005 	strb.w	r3, [sp, #5]
 801195c:	f88d 2006 	strb.w	r2, [sp, #6]
 8011960:	f001 ff3a 	bl	80137d8 <gd32_i2c_set_address>
 8011964:	6860      	ldr	r0, [r4, #4]
 8011966:	f001 ff2f 	bl	80137c8 <gd32_i2c_set_baudrate>
 801196a:	2103      	movs	r1, #3
 801196c:	a801      	add	r0, sp, #4
 801196e:	f001 ff39 	bl	80137e4 <gd32_i2c_write>
 8011972:	b002      	add	sp, #8
 8011974:	bd10      	pop	{r4, pc}

08011976 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8011976:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011978:	460d      	mov	r5, r1
 801197a:	4604      	mov	r4, r0
 801197c:	f001 ff2c 	bl	80137d8 <gd32_i2c_set_address>
 8011980:	4628      	mov	r0, r5
 8011982:	f001 ff21 	bl	80137c8 <gd32_i2c_set_baudrate>
 8011986:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801198a:	2b07      	cmp	r3, #7
 801198c:	d902      	bls.n	8011994 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801198e:	3c50      	subs	r4, #80	; 0x50
 8011990:	2c0f      	cmp	r4, #15
 8011992:	d809      	bhi.n	80119a8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011994:	2101      	movs	r1, #1
 8011996:	f10d 0007 	add.w	r0, sp, #7
 801199a:	f001 ff89 	bl	80138b0 <gd32_i2c_read>
 801199e:	fab0 f080 	clz	r0, r0
 80119a2:	0940      	lsrs	r0, r0, #5
 80119a4:	b003      	add	sp, #12
 80119a6:	bd30      	pop	{r4, r5, pc}
 80119a8:	2100      	movs	r1, #0
 80119aa:	4608      	mov	r0, r1
 80119ac:	f001 ff1a 	bl	80137e4 <gd32_i2c_write>
 80119b0:	e7f5      	b.n	801199e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080119b2 <Display::Detect7Segment()>:
 80119b2:	b538      	push	{r3, r4, r5, lr}
 80119b4:	68c1      	ldr	r1, [r0, #12]
 80119b6:	4604      	mov	r4, r0
 80119b8:	7a00      	ldrb	r0, [r0, #8]
 80119ba:	f7ff ffdc 	bl	8011976 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80119be:	7460      	strb	r0, [r4, #17]
 80119c0:	b170      	cbz	r0, 80119e0 <Display::Detect7Segment()+0x2e>
 80119c2:	2200      	movs	r2, #0
 80119c4:	f104 0508 	add.w	r5, r4, #8
 80119c8:	4611      	mov	r1, r2
 80119ca:	4628      	mov	r0, r5
 80119cc:	f7ff ffbe 	bl	801194c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80119d0:	7c63      	ldrb	r3, [r4, #17]
 80119d2:	b12b      	cbz	r3, 80119e0 <Display::Detect7Segment()+0x2e>
 80119d4:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80119d8:	2112      	movs	r1, #18
 80119da:	4628      	mov	r0, r5
 80119dc:	f7ff ffb6 	bl	801194c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80119e0:	bd38      	pop	{r3, r4, r5, pc}

080119e2 <Display::Detect(display::Type)>:
 80119e2:	2902      	cmp	r1, #2
 80119e4:	b538      	push	{r3, r4, r5, lr}
 80119e6:	4604      	mov	r4, r0
 80119e8:	d014      	beq.n	8011a14 <Display::Detect(display::Type)+0x32>
 80119ea:	2904      	cmp	r1, #4
 80119ec:	d01b      	beq.n	8011a26 <Display::Detect(display::Type)+0x44>
 80119ee:	69a0      	ldr	r0, [r4, #24]
 80119f0:	b168      	cbz	r0, 8011a0e <Display::Detect(display::Type)+0x2c>
 80119f2:	6803      	ldr	r3, [r0, #0]
 80119f4:	689b      	ldr	r3, [r3, #8]
 80119f6:	4798      	blx	r3
 80119f8:	4603      	mov	r3, r0
 80119fa:	69a0      	ldr	r0, [r4, #24]
 80119fc:	b9ab      	cbnz	r3, 8011a2a <Display::Detect(display::Type)+0x48>
 80119fe:	b110      	cbz	r0, 8011a06 <Display::Detect(display::Type)+0x24>
 8011a00:	6803      	ldr	r3, [r0, #0]
 8011a02:	685b      	ldr	r3, [r3, #4]
 8011a04:	4798      	blx	r3
 8011a06:	2300      	movs	r3, #0
 8011a08:	61a3      	str	r3, [r4, #24]
 8011a0a:	2304      	movs	r3, #4
 8011a0c:	6023      	str	r3, [r4, #0]
 8011a0e:	2300      	movs	r3, #0
 8011a10:	6163      	str	r3, [r4, #20]
 8011a12:	e010      	b.n	8011a36 <Display::Detect(display::Type)+0x54>
 8011a14:	2018      	movs	r0, #24
 8011a16:	f000 fbc9 	bl	80121ac <operator new(unsigned int)>
 8011a1a:	4605      	mov	r5, r0
 8011a1c:	2100      	movs	r1, #0
 8011a1e:	f000 f89d 	bl	8011b5c <Ssd1306::Ssd1306(TOledPanel)>
 8011a22:	61a5      	str	r5, [r4, #24]
 8011a24:	e7e3      	b.n	80119ee <Display::Detect(display::Type)+0xc>
 8011a26:	6001      	str	r1, [r0, #0]
 8011a28:	e7e1      	b.n	80119ee <Display::Detect(display::Type)+0xc>
 8011a2a:	6803      	ldr	r3, [r0, #0]
 8011a2c:	68db      	ldr	r3, [r3, #12]
 8011a2e:	4798      	blx	r3
 8011a30:	69a3      	ldr	r3, [r4, #24]
 8011a32:	2b00      	cmp	r3, #0
 8011a34:	d0eb      	beq.n	8011a0e <Display::Detect(display::Type)+0x2c>
 8011a36:	bd38      	pop	{r3, r4, r5, pc}

08011a38 <Display::Display()>:
 8011a38:	2304      	movs	r3, #4
 8011a3a:	b510      	push	{r4, lr}
 8011a3c:	6003      	str	r3, [r0, #0]
 8011a3e:	4b0f      	ldr	r3, [pc, #60]	; (8011a7c <Display::Display()+0x44>)
 8011a40:	4604      	mov	r4, r0
 8011a42:	681b      	ldr	r3, [r3, #0]
 8011a44:	4a0e      	ldr	r2, [pc, #56]	; (8011a80 <Display::Display()+0x48>)
 8011a46:	6043      	str	r3, [r0, #4]
 8011a48:	2321      	movs	r3, #33	; 0x21
 8011a4a:	7203      	strb	r3, [r0, #8]
 8011a4c:	4b0d      	ldr	r3, [pc, #52]	; (8011a84 <Display::Display()+0x4c>)
 8011a4e:	2102      	movs	r1, #2
 8011a50:	60c3      	str	r3, [r0, #12]
 8011a52:	2300      	movs	r3, #0
 8011a54:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8011a58:	8203      	strh	r3, [r0, #16]
 8011a5a:	4b0b      	ldr	r3, [pc, #44]	; (8011a88 <Display::Display()+0x50>)
 8011a5c:	6018      	str	r0, [r3, #0]
 8011a5e:	f7ff ffc0 	bl	80119e2 <Display::Detect(display::Type)>
 8011a62:	4620      	mov	r0, r4
 8011a64:	f7ff ffa5 	bl	80119b2 <Display::Detect7Segment()>
 8011a68:	69a3      	ldr	r3, [r4, #24]
 8011a6a:	b10b      	cbz	r3, 8011a70 <Display::Display()+0x38>
 8011a6c:	f7f6 fe78 	bl	8008760 <display::timeout::gpio_init()>
 8011a70:	69a0      	ldr	r0, [r4, #24]
 8011a72:	f7ff ff61 	bl	8011938 <Display::PrintInfo() [clone .isra.0]>
 8011a76:	4620      	mov	r0, r4
 8011a78:	bd10      	pop	{r4, pc}
 8011a7a:	bf00      	nop
 8011a7c:	2000aea4 	andcs	sl, r0, r4, lsr #29
 8011a80:	000493e0 	andeq	r9, r4, r0, ror #7
 8011a84:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011a88:	2000ada0 	andcs	sl, r0, r0, lsr #27

08011a8c <Ssd1306::~Ssd1306()>:
 8011a8c:	4770      	bx	lr

08011a8e <Ssd1306::SetCursor(unsigned int)>:
 8011a8e:	4770      	bx	lr

08011a90 <Ssd1306::PrintInfo()>:
 8011a90:	b410      	push	{r4}
 8011a92:	4906      	ldr	r1, [pc, #24]	; (8011aac <Ssd1306::PrintInfo()+0x1c>)
 8011a94:	7c44      	ldrb	r4, [r0, #17]
 8011a96:	7903      	ldrb	r3, [r0, #4]
 8011a98:	7942      	ldrb	r2, [r0, #5]
 8011a9a:	4805      	ldr	r0, [pc, #20]	; (8011ab0 <Ssd1306::PrintInfo()+0x20>)
 8011a9c:	2c00      	cmp	r4, #0
 8011a9e:	bf08      	it	eq
 8011aa0:	4601      	moveq	r1, r0
 8011aa2:	4804      	ldr	r0, [pc, #16]	; (8011ab4 <Ssd1306::PrintInfo()+0x24>)
 8011aa4:	bc10      	pop	{r4}
 8011aa6:	f7f7 bbeb 	b.w	8009280 <printf>
 8011aaa:	bf00      	nop
 8011aac:	08016b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, sp, lr}
 8011ab0:	08016b9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, fp, sp, lr}
 8011ab4:	08016ba3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, fp, sp, lr}

08011ab8 <Ssd1306::~Ssd1306()>:
 8011ab8:	b510      	push	{r4, lr}
 8011aba:	4604      	mov	r4, r0
 8011abc:	f000 fb72 	bl	80121a4 <operator delete(void*)>
 8011ac0:	4620      	mov	r0, r4
 8011ac2:	bd10      	pop	{r4, pc}

08011ac4 <HAL_I2C::Setup()>:
 8011ac4:	b510      	push	{r4, lr}
 8011ac6:	4604      	mov	r4, r0
 8011ac8:	7800      	ldrb	r0, [r0, #0]
 8011aca:	f001 fe85 	bl	80137d8 <gd32_i2c_set_address>
 8011ace:	6860      	ldr	r0, [r4, #4]
 8011ad0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ad4:	f001 be78 	b.w	80137c8 <gd32_i2c_set_baudrate>

08011ad8 <Ssd1306::PutChar(int)>:
 8011ad8:	b510      	push	{r4, lr}
 8011ada:	f1a1 0420 	sub.w	r4, r1, #32
 8011ade:	2c5f      	cmp	r4, #95	; 0x5f
 8011ae0:	bf88      	it	hi
 8011ae2:	2400      	movhi	r4, #0
 8011ae4:	3008      	adds	r0, #8
 8011ae6:	f7ff ffed 	bl	8011ac4 <HAL_I2C::Setup()>
 8011aea:	4804      	ldr	r0, [pc, #16]	; (8011afc <Ssd1306::PutChar(int)+0x24>)
 8011aec:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8011af0:	4420      	add	r0, r4
 8011af2:	2107      	movs	r1, #7
 8011af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011af8:	f001 be74 	b.w	80137e4 <gd32_i2c_write>
 8011afc:	08016bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, sp, lr}

08011b00 <Ssd1306::PutString(char const*)>:
 8011b00:	b538      	push	{r3, r4, r5, lr}
 8011b02:	4605      	mov	r5, r0
 8011b04:	1e4c      	subs	r4, r1, #1
 8011b06:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011b0a:	b901      	cbnz	r1, 8011b0e <Ssd1306::PutString(char const*)+0xe>
 8011b0c:	bd38      	pop	{r3, r4, r5, pc}
 8011b0e:	4628      	mov	r0, r5
 8011b10:	f7ff ffe2 	bl	8011ad8 <Ssd1306::PutChar(int)>
 8011b14:	e7f7      	b.n	8011b06 <Ssd1306::PutString(char const*)+0x6>

08011b16 <Ssd1306::Text(char const*, unsigned int)>:
 8011b16:	b570      	push	{r4, r5, r6, lr}
 8011b18:	7903      	ldrb	r3, [r0, #4]
 8011b1a:	4605      	mov	r5, r0
 8011b1c:	460c      	mov	r4, r1
 8011b1e:	4293      	cmp	r3, r2
 8011b20:	bf94      	ite	ls
 8011b22:	18ce      	addls	r6, r1, r3
 8011b24:	188e      	addhi	r6, r1, r2
 8011b26:	42b4      	cmp	r4, r6
 8011b28:	d100      	bne.n	8011b2c <Ssd1306::Text(char const*, unsigned int)+0x16>
 8011b2a:	bd70      	pop	{r4, r5, r6, pc}
 8011b2c:	4628      	mov	r0, r5
 8011b2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011b32:	f7ff ffd1 	bl	8011ad8 <Ssd1306::PutChar(int)>
 8011b36:	e7f6      	b.n	8011b26 <Ssd1306::Text(char const*, unsigned int)+0x10>

08011b38 <Ssd1306::InitMembers()>:
 8011b38:	7c03      	ldrb	r3, [r0, #16]
 8011b3a:	b14b      	cbz	r3, 8011b50 <Ssd1306::InitMembers()+0x18>
 8011b3c:	3b01      	subs	r3, #1
 8011b3e:	2b01      	cmp	r3, #1
 8011b40:	d909      	bls.n	8011b56 <Ssd1306::InitMembers()+0x1e>
 8011b42:	2308      	movs	r3, #8
 8011b44:	2204      	movs	r2, #4
 8011b46:	2115      	movs	r1, #21
 8011b48:	7143      	strb	r3, [r0, #5]
 8011b4a:	7101      	strb	r1, [r0, #4]
 8011b4c:	6142      	str	r2, [r0, #20]
 8011b4e:	4770      	bx	lr
 8011b50:	2308      	movs	r3, #8
 8011b52:	461a      	mov	r2, r3
 8011b54:	e7f7      	b.n	8011b46 <Ssd1306::InitMembers()+0xe>
 8011b56:	2304      	movs	r3, #4
 8011b58:	e7fb      	b.n	8011b52 <Ssd1306::InitMembers()+0x1a>
	...

08011b5c <Ssd1306::Ssd1306(TOledPanel)>:
 8011b5c:	4a08      	ldr	r2, [pc, #32]	; (8011b80 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8011b5e:	b508      	push	{r3, lr}
 8011b60:	6002      	str	r2, [r0, #0]
 8011b62:	227f      	movs	r2, #127	; 0x7f
 8011b64:	80c2      	strh	r2, [r0, #6]
 8011b66:	223c      	movs	r2, #60	; 0x3c
 8011b68:	7202      	strb	r2, [r0, #8]
 8011b6a:	4a06      	ldr	r2, [pc, #24]	; (8011b84 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8011b6c:	7401      	strb	r1, [r0, #16]
 8011b6e:	60c2      	str	r2, [r0, #12]
 8011b70:	2200      	movs	r2, #0
 8011b72:	7442      	strb	r2, [r0, #17]
 8011b74:	4a04      	ldr	r2, [pc, #16]	; (8011b88 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8011b76:	6010      	str	r0, [r2, #0]
 8011b78:	f7ff ffde 	bl	8011b38 <Ssd1306::InitMembers()>
 8011b7c:	bd08      	pop	{r3, pc}
 8011b7e:	bf00      	nop
 8011b80:	08016e90 	stmdaeq	r1, {r4, r7, r9, sl, fp, sp, lr}
 8011b84:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011b88:	2000ae2c 	andcs	sl, r0, ip, lsr #28

08011b8c <Ssd1306::SendCommand(unsigned char)>:
 8011b8c:	2300      	movs	r3, #0
 8011b8e:	b507      	push	{r0, r1, r2, lr}
 8011b90:	3008      	adds	r0, #8
 8011b92:	f88d 3004 	strb.w	r3, [sp, #4]
 8011b96:	f88d 1005 	strb.w	r1, [sp, #5]
 8011b9a:	f7ff ff93 	bl	8011ac4 <HAL_I2C::Setup()>
 8011b9e:	2102      	movs	r1, #2
 8011ba0:	a801      	add	r0, sp, #4
 8011ba2:	f001 fe1f 	bl	80137e4 <gd32_i2c_write>
 8011ba6:	b003      	add	sp, #12
 8011ba8:	f85d fb04 	ldr.w	pc, [sp], #4

08011bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8011bac:	2914      	cmp	r1, #20
 8011bae:	b570      	push	{r4, r5, r6, lr}
 8011bb0:	4605      	mov	r5, r0
 8011bb2:	4616      	mov	r6, r2
 8011bb4:	d81c      	bhi.n	8011bf0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011bb6:	7943      	ldrb	r3, [r0, #5]
 8011bb8:	4293      	cmp	r3, r2
 8011bba:	d919      	bls.n	8011bf0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011bbc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011bc0:	7c43      	ldrb	r3, [r0, #17]
 8011bc2:	004c      	lsls	r4, r1, #1
 8011bc4:	b2e4      	uxtb	r4, r4
 8011bc6:	b10b      	cbz	r3, 8011bcc <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8011bc8:	3404      	adds	r4, #4
 8011bca:	b2e4      	uxtb	r4, r4
 8011bcc:	4628      	mov	r0, r5
 8011bce:	f004 010e 	and.w	r1, r4, #14
 8011bd2:	f7ff ffdb 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011bd6:	0921      	lsrs	r1, r4, #4
 8011bd8:	4628      	mov	r0, r5
 8011bda:	f041 0110 	orr.w	r1, r1, #16
 8011bde:	f7ff ffd5 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011be2:	4628      	mov	r0, r5
 8011be4:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8011be8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bec:	f7ff bfce 	b.w	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011bf0:	bd70      	pop	{r4, r5, r6, pc}

08011bf2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8011bf2:	b570      	push	{r4, r5, r6, lr}
 8011bf4:	461e      	mov	r6, r3
 8011bf6:	7943      	ldrb	r3, [r0, #5]
 8011bf8:	4604      	mov	r4, r0
 8011bfa:	428b      	cmp	r3, r1
 8011bfc:	4615      	mov	r5, r2
 8011bfe:	d30b      	bcc.n	8011c18 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8011c00:	3901      	subs	r1, #1
 8011c02:	b2ca      	uxtb	r2, r1
 8011c04:	2100      	movs	r1, #0
 8011c06:	f7ff ffd1 	bl	8011bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011c0a:	4632      	mov	r2, r6
 8011c0c:	4629      	mov	r1, r5
 8011c0e:	4620      	mov	r0, r4
 8011c10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c14:	f7ff bf7f 	b.w	8011b16 <Ssd1306::Text(char const*, unsigned int)>
 8011c18:	bd70      	pop	{r4, r5, r6, pc}
	...

08011c1c <Ssd1306::ClearLine(unsigned char)>:
 8011c1c:	b538      	push	{r3, r4, r5, lr}
 8011c1e:	7943      	ldrb	r3, [r0, #5]
 8011c20:	4605      	mov	r5, r0
 8011c22:	428b      	cmp	r3, r1
 8011c24:	d314      	bcc.n	8011c50 <Ssd1306::ClearLine(unsigned char)+0x34>
 8011c26:	3901      	subs	r1, #1
 8011c28:	b2cc      	uxtb	r4, r1
 8011c2a:	4622      	mov	r2, r4
 8011c2c:	2100      	movs	r1, #0
 8011c2e:	f7ff ffbd 	bl	8011bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011c32:	f105 0008 	add.w	r0, r5, #8
 8011c36:	f7ff ff45 	bl	8011ac4 <HAL_I2C::Setup()>
 8011c3a:	2181      	movs	r1, #129	; 0x81
 8011c3c:	4805      	ldr	r0, [pc, #20]	; (8011c54 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8011c3e:	f001 fdd1 	bl	80137e4 <gd32_i2c_write>
 8011c42:	4622      	mov	r2, r4
 8011c44:	4628      	mov	r0, r5
 8011c46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011c4a:	2100      	movs	r1, #0
 8011c4c:	f7ff bfae 	b.w	8011bac <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011c50:	bd38      	pop	{r3, r4, r5, pc}
 8011c52:	bf00      	nop
 8011c54:	2000ada4 	andcs	sl, r0, r4, lsr #27

08011c58 <Ssd1306::SetSleep(bool)>:
 8011c58:	b111      	cbz	r1, 8011c60 <Ssd1306::SetSleep(bool)+0x8>
 8011c5a:	21ae      	movs	r1, #174	; 0xae
 8011c5c:	f7ff bf96 	b.w	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011c60:	21af      	movs	r1, #175	; 0xaf
 8011c62:	e7fb      	b.n	8011c5c <Ssd1306::SetSleep(bool)+0x4>

08011c64 <Ssd1306::SetContrast(unsigned char)>:
 8011c64:	b538      	push	{r3, r4, r5, lr}
 8011c66:	4604      	mov	r4, r0
 8011c68:	460d      	mov	r5, r1
 8011c6a:	7181      	strb	r1, [r0, #6]
 8011c6c:	2181      	movs	r1, #129	; 0x81
 8011c6e:	f7ff ff8d 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011c72:	4629      	mov	r1, r5
 8011c74:	4620      	mov	r0, r4
 8011c76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011c7a:	f7ff bf87 	b.w	8011b8c <Ssd1306::SendCommand(unsigned char)>

08011c7e <Ssd1306::SetFlipVertically(bool)>:
 8011c7e:	b510      	push	{r4, lr}
 8011c80:	4604      	mov	r4, r0
 8011c82:	71c1      	strb	r1, [r0, #7]
 8011c84:	b141      	cbz	r1, 8011c98 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8011c86:	21c0      	movs	r1, #192	; 0xc0
 8011c88:	f7ff ff80 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011c8c:	21a0      	movs	r1, #160	; 0xa0
 8011c8e:	4620      	mov	r0, r4
 8011c90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011c94:	f7ff bf7a 	b.w	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011c98:	21c8      	movs	r1, #200	; 0xc8
 8011c9a:	f7ff ff77 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011c9e:	21a1      	movs	r1, #161	; 0xa1
 8011ca0:	e7f5      	b.n	8011c8e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08011ca4 <Ssd1306::CheckSH1106()>:
 8011ca4:	b530      	push	{r4, r5, lr}
 8011ca6:	4604      	mov	r4, r0
 8011ca8:	b087      	sub	sp, #28
 8011caa:	2100      	movs	r1, #0
 8011cac:	f7ff ff6e 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011cb0:	2190      	movs	r1, #144	; 0x90
 8011cb2:	4620      	mov	r0, r4
 8011cb4:	f7ff ff6a 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011cb8:	21b0      	movs	r1, #176	; 0xb0
 8011cba:	4620      	mov	r0, r4
 8011cbc:	f7ff ff66 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011cc0:	4b22      	ldr	r3, [pc, #136]	; (8011d4c <Ssd1306::CheckSH1106()+0xa8>)
 8011cc2:	f104 0508 	add.w	r5, r4, #8
 8011cc6:	6818      	ldr	r0, [r3, #0]
 8011cc8:	791b      	ldrb	r3, [r3, #4]
 8011cca:	9002      	str	r0, [sp, #8]
 8011ccc:	4628      	mov	r0, r5
 8011cce:	f88d 300c 	strb.w	r3, [sp, #12]
 8011cd2:	f7ff fef7 	bl	8011ac4 <HAL_I2C::Setup()>
 8011cd6:	2105      	movs	r1, #5
 8011cd8:	a802      	add	r0, sp, #8
 8011cda:	f001 fd83 	bl	80137e4 <gd32_i2c_write>
 8011cde:	2100      	movs	r1, #0
 8011ce0:	4620      	mov	r0, r4
 8011ce2:	f7ff ff53 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011ce6:	2190      	movs	r1, #144	; 0x90
 8011ce8:	4620      	mov	r0, r4
 8011cea:	f7ff ff4f 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011cee:	21b0      	movs	r1, #176	; 0xb0
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	f7ff ff4b 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011cf6:	2300      	movs	r3, #0
 8011cf8:	9304      	str	r3, [sp, #16]
 8011cfa:	f88d 3014 	strb.w	r3, [sp, #20]
 8011cfe:	2340      	movs	r3, #64	; 0x40
 8011d00:	4628      	mov	r0, r5
 8011d02:	f88d 3007 	strb.w	r3, [sp, #7]
 8011d06:	f7ff fedd 	bl	8011ac4 <HAL_I2C::Setup()>
 8011d0a:	2101      	movs	r1, #1
 8011d0c:	f10d 0007 	add.w	r0, sp, #7
 8011d10:	f001 fd68 	bl	80137e4 <gd32_i2c_write>
 8011d14:	4628      	mov	r0, r5
 8011d16:	f7ff fed5 	bl	8011ac4 <HAL_I2C::Setup()>
 8011d1a:	2105      	movs	r1, #5
 8011d1c:	a804      	add	r0, sp, #16
 8011d1e:	f001 fdc7 	bl	80138b0 <gd32_i2c_read>
 8011d22:	2004      	movs	r0, #4
 8011d24:	aa02      	add	r2, sp, #8
 8011d26:	a904      	add	r1, sp, #16
 8011d28:	3801      	subs	r0, #1
 8011d2a:	d201      	bcs.n	8011d30 <Ssd1306::CheckSH1106()+0x8c>
 8011d2c:	2300      	movs	r3, #0
 8011d2e:	e006      	b.n	8011d3e <Ssd1306::CheckSH1106()+0x9a>
 8011d30:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8011d34:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8011d38:	42ab      	cmp	r3, r5
 8011d3a:	d0f5      	beq.n	8011d28 <Ssd1306::CheckSH1106()+0x84>
 8011d3c:	1b5b      	subs	r3, r3, r5
 8011d3e:	fab3 f383 	clz	r3, r3
 8011d42:	095b      	lsrs	r3, r3, #5
 8011d44:	7463      	strb	r3, [r4, #17]
 8011d46:	b007      	add	sp, #28
 8011d48:	bd30      	pop	{r4, r5, pc}
 8011d4a:	bf00      	nop
 8011d4c:	08016baf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, fp, sp, lr}

08011d50 <Ssd1306::Cls()>:
 8011d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d54:	4604      	mov	r4, r0
 8011d56:	2600      	movs	r6, #0
 8011d58:	7c45      	ldrb	r5, [r0, #17]
 8011d5a:	00ad      	lsls	r5, r5, #2
 8011d5c:	b2ed      	uxtb	r5, r5
 8011d5e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8011d62:	f045 0810 	orr.w	r8, r5, #16
 8011d66:	b2ff      	uxtb	r7, r7
 8011d68:	6963      	ldr	r3, [r4, #20]
 8011d6a:	4629      	mov	r1, r5
 8011d6c:	42b3      	cmp	r3, r6
 8011d6e:	4620      	mov	r0, r4
 8011d70:	d80b      	bhi.n	8011d8a <Ssd1306::Cls()+0x3a>
 8011d72:	f7ff ff0b 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011d76:	4641      	mov	r1, r8
 8011d78:	4620      	mov	r0, r4
 8011d7a:	f7ff ff07 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011d7e:	4620      	mov	r0, r4
 8011d80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011d84:	21b0      	movs	r1, #176	; 0xb0
 8011d86:	f7ff bf01 	b.w	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011d8a:	f7ff feff 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011d8e:	4641      	mov	r1, r8
 8011d90:	4620      	mov	r0, r4
 8011d92:	f7ff fefb 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011d96:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8011d9a:	4620      	mov	r0, r4
 8011d9c:	b2c9      	uxtb	r1, r1
 8011d9e:	f7ff fef5 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011da2:	7c23      	ldrb	r3, [r4, #16]
 8011da4:	b123      	cbz	r3, 8011db0 <Ssd1306::Cls()+0x60>
 8011da6:	3b01      	subs	r3, #1
 8011da8:	2b01      	cmp	r3, #1
 8011daa:	d901      	bls.n	8011db0 <Ssd1306::Cls()+0x60>
 8011dac:	3601      	adds	r6, #1
 8011dae:	e7db      	b.n	8011d68 <Ssd1306::Cls()+0x18>
 8011db0:	f104 0008 	add.w	r0, r4, #8
 8011db4:	f7ff fe86 	bl	8011ac4 <HAL_I2C::Setup()>
 8011db8:	4639      	mov	r1, r7
 8011dba:	4802      	ldr	r0, [pc, #8]	; (8011dc4 <Ssd1306::Cls()+0x74>)
 8011dbc:	f001 fd12 	bl	80137e4 <gd32_i2c_write>
 8011dc0:	e7f4      	b.n	8011dac <Ssd1306::Cls()+0x5c>
 8011dc2:	bf00      	nop
 8011dc4:	2000ada4 	andcs	sl, r0, r4, lsr #27

08011dc8 <Ssd1306::Start()>:
 8011dc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011dca:	7a04      	ldrb	r4, [r0, #8]
 8011dcc:	68c6      	ldr	r6, [r0, #12]
 8011dce:	4605      	mov	r5, r0
 8011dd0:	4620      	mov	r0, r4
 8011dd2:	f001 fd01 	bl	80137d8 <gd32_i2c_set_address>
 8011dd6:	4630      	mov	r0, r6
 8011dd8:	f001 fcf6 	bl	80137c8 <gd32_i2c_set_baudrate>
 8011ddc:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011de0:	2b07      	cmp	r3, #7
 8011de2:	d902      	bls.n	8011dea <Ssd1306::Start()+0x22>
 8011de4:	3c50      	subs	r4, #80	; 0x50
 8011de6:	2c0f      	cmp	r4, #15
 8011de8:	d80f      	bhi.n	8011e0a <Ssd1306::Start()+0x42>
 8011dea:	2101      	movs	r1, #1
 8011dec:	f10d 0007 	add.w	r0, sp, #7
 8011df0:	f001 fd5e 	bl	80138b0 <gd32_i2c_read>
 8011df4:	fab0 f480 	clz	r4, r0
 8011df8:	0964      	lsrs	r4, r4, #5
 8011dfa:	b35c      	cbz	r4, 8011e54 <Ssd1306::Start()+0x8c>
 8011dfc:	7c2e      	ldrb	r6, [r5, #16]
 8011dfe:	b14e      	cbz	r6, 8011e14 <Ssd1306::Start()+0x4c>
 8011e00:	3e01      	subs	r6, #1
 8011e02:	2e01      	cmp	r6, #1
 8011e04:	d929      	bls.n	8011e5a <Ssd1306::Start()+0x92>
 8011e06:	2400      	movs	r4, #0
 8011e08:	e024      	b.n	8011e54 <Ssd1306::Start()+0x8c>
 8011e0a:	2100      	movs	r1, #0
 8011e0c:	4608      	mov	r0, r1
 8011e0e:	f001 fce9 	bl	80137e4 <gd32_i2c_write>
 8011e12:	e7ef      	b.n	8011df4 <Ssd1306::Start()+0x2c>
 8011e14:	4f16      	ldr	r7, [pc, #88]	; (8011e70 <Ssd1306::Start()+0xa8>)
 8011e16:	4628      	mov	r0, r5
 8011e18:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011e1c:	3601      	adds	r6, #1
 8011e1e:	f7ff feb5 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011e22:	2e18      	cmp	r6, #24
 8011e24:	d1f7      	bne.n	8011e16 <Ssd1306::Start()+0x4e>
 8011e26:	2300      	movs	r3, #0
 8011e28:	4a12      	ldr	r2, [pc, #72]	; (8011e74 <Ssd1306::Start()+0xac>)
 8011e2a:	4618      	mov	r0, r3
 8011e2c:	4611      	mov	r1, r2
 8011e2e:	3301      	adds	r3, #1
 8011e30:	2b86      	cmp	r3, #134	; 0x86
 8011e32:	f802 0b01 	strb.w	r0, [r2], #1
 8011e36:	d1fa      	bne.n	8011e2e <Ssd1306::Start()+0x66>
 8011e38:	2340      	movs	r3, #64	; 0x40
 8011e3a:	4628      	mov	r0, r5
 8011e3c:	700b      	strb	r3, [r1, #0]
 8011e3e:	f7ff ff31 	bl	8011ca4 <Ssd1306::CheckSH1106()>
 8011e42:	4628      	mov	r0, r5
 8011e44:	f7ff ff84 	bl	8011d50 <Ssd1306::Cls()>
 8011e48:	21af      	movs	r1, #175	; 0xaf
 8011e4a:	4628      	mov	r0, r5
 8011e4c:	f7ff fe9e 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011e50:	2301      	movs	r3, #1
 8011e52:	71eb      	strb	r3, [r5, #7]
 8011e54:	4620      	mov	r0, r4
 8011e56:	b003      	add	sp, #12
 8011e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e5a:	2600      	movs	r6, #0
 8011e5c:	4f06      	ldr	r7, [pc, #24]	; (8011e78 <Ssd1306::Start()+0xb0>)
 8011e5e:	4628      	mov	r0, r5
 8011e60:	f817 1b01 	ldrb.w	r1, [r7], #1
 8011e64:	3601      	adds	r6, #1
 8011e66:	f7ff fe91 	bl	8011b8c <Ssd1306::SendCommand(unsigned char)>
 8011e6a:	2e18      	cmp	r6, #24
 8011e6c:	d1f7      	bne.n	8011e5e <Ssd1306::Start()+0x96>
 8011e6e:	e7da      	b.n	8011e26 <Ssd1306::Start()+0x5e>
 8011e70:	08016e70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, sp, lr}
 8011e74:	2000ada4 	andcs	sl, r0, r4, lsr #27
 8011e78:	08016e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, sp, lr}

08011e7c <console_putc>:
 8011e7c:	f000 bb68 	b.w	8012550 <uart0_putc>

08011e80 <console_puts>:
 8011e80:	f000 bb86 	b.w	8012590 <uart0_puts>

08011e84 <console_set_fg_color>:
 8011e84:	2807      	cmp	r0, #7
 8011e86:	d810      	bhi.n	8011eaa <console_set_fg_color+0x26>
 8011e88:	e8df f000 	tbb	[pc, r0]
 8011e8c:	0b090704 	bleq	8253aa4 <__exidx_end+0x23cb5c>
 8011e90:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8011e5c <Ssd1306::Start()+0x94>
 8011e94:	4806      	ldr	r0, [pc, #24]	; (8011eb0 <console_set_fg_color+0x2c>)
 8011e96:	f000 bb7b 	b.w	8012590 <uart0_puts>
 8011e9a:	4806      	ldr	r0, [pc, #24]	; (8011eb4 <console_set_fg_color+0x30>)
 8011e9c:	e7fb      	b.n	8011e96 <console_set_fg_color+0x12>
 8011e9e:	4806      	ldr	r0, [pc, #24]	; (8011eb8 <console_set_fg_color+0x34>)
 8011ea0:	e7f9      	b.n	8011e96 <console_set_fg_color+0x12>
 8011ea2:	4806      	ldr	r0, [pc, #24]	; (8011ebc <console_set_fg_color+0x38>)
 8011ea4:	e7f7      	b.n	8011e96 <console_set_fg_color+0x12>
 8011ea6:	4806      	ldr	r0, [pc, #24]	; (8011ec0 <console_set_fg_color+0x3c>)
 8011ea8:	e7f5      	b.n	8011e96 <console_set_fg_color+0x12>
 8011eaa:	4806      	ldr	r0, [pc, #24]	; (8011ec4 <console_set_fg_color+0x40>)
 8011eac:	e7f3      	b.n	8011e96 <console_set_fg_color+0x12>
 8011eae:	bf00      	nop
 8011eb0:	08016ece 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, fp, sp, lr}
 8011eb4:	08016ed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, sp, lr}
 8011eb8:	08016eda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, fp, sp, lr}
 8011ebc:	08016ee0 	stmdaeq	r1, {r5, r6, r7, r9, sl, fp, sp, lr}
 8011ec0:	080144b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, lr}
 8011ec4:	08016ee6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, fp, sp, lr}

08011ec8 <console_error>:
 8011ec8:	b510      	push	{r4, lr}
 8011eca:	4604      	mov	r4, r0
 8011ecc:	4805      	ldr	r0, [pc, #20]	; (8011ee4 <console_error+0x1c>)
 8011ece:	f000 fb5f 	bl	8012590 <uart0_puts>
 8011ed2:	4620      	mov	r0, r4
 8011ed4:	f000 fb5c 	bl	8012590 <uart0_puts>
 8011ed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011edc:	4802      	ldr	r0, [pc, #8]	; (8011ee8 <console_error+0x20>)
 8011ede:	f000 bb57 	b.w	8012590 <uart0_puts>
 8011ee2:	bf00      	nop
 8011ee4:	08016ed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, sp, lr}
 8011ee8:	080144b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, lr}

08011eec <console_status>:
 8011eec:	b510      	push	{r4, lr}
 8011eee:	460c      	mov	r4, r1
 8011ef0:	b280      	uxth	r0, r0
 8011ef2:	f7ff ffc7 	bl	8011e84 <console_set_fg_color>
 8011ef6:	4807      	ldr	r0, [pc, #28]	; (8011f14 <console_status+0x28>)
 8011ef8:	f000 fb4a 	bl	8012590 <uart0_puts>
 8011efc:	4620      	mov	r0, r4
 8011efe:	f000 fb47 	bl	8012590 <uart0_puts>
 8011f02:	200a      	movs	r0, #10
 8011f04:	f000 fb24 	bl	8012550 <uart0_putc>
 8011f08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f0c:	4802      	ldr	r0, [pc, #8]	; (8011f18 <console_status+0x2c>)
 8011f0e:	f000 bb3f 	b.w	8012590 <uart0_puts>
 8011f12:	bf00      	nop
 8011f14:	08016ec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp, sp, lr}
 8011f18:	080144b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, lr}

08011f1c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8011f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f20:	4617      	mov	r7, r2
 8011f22:	461e      	mov	r6, r3
 8011f24:	4d14      	ldr	r5, [pc, #80]	; (8011f78 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8011f26:	4b15      	ldr	r3, [pc, #84]	; (8011f7c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8011f28:	b086      	sub	sp, #24
 8011f2a:	6018      	str	r0, [r3, #0]
 8011f2c:	4604      	mov	r4, r0
 8011f2e:	f105 0803 	add.w	r8, r5, #3
 8011f32:	2203      	movs	r2, #3
 8011f34:	4628      	mov	r0, r5
 8011f36:	f000 f9d0 	bl	80122da <memmove>
 8011f3a:	4639      	mov	r1, r7
 8011f3c:	220b      	movs	r2, #11
 8011f3e:	4640      	mov	r0, r8
 8011f40:	f000 f9cb 	bl	80122da <memmove>
 8011f44:	f105 030e 	add.w	r3, r5, #14
 8011f48:	4631      	mov	r1, r6
 8011f4a:	2208      	movs	r2, #8
 8011f4c:	4618      	mov	r0, r3
 8011f4e:	f000 f9c4 	bl	80122da <memmove>
 8011f52:	2308      	movs	r3, #8
 8011f54:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8011f58:	230b      	movs	r3, #11
 8011f5a:	9302      	str	r3, [sp, #8]
 8011f5c:	4b08      	ldr	r3, [pc, #32]	; (8011f80 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8011f5e:	9005      	str	r0, [sp, #20]
 8011f60:	e9cd 5300 	strd	r5, r3, [sp]
 8011f64:	213f      	movs	r1, #63	; 0x3f
 8011f66:	2303      	movs	r3, #3
 8011f68:	4a06      	ldr	r2, [pc, #24]	; (8011f84 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8011f6a:	4807      	ldr	r0, [pc, #28]	; (8011f88 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8011f6c:	f7f7 f9b0 	bl	80092d0 <snprintf>
 8011f70:	4620      	mov	r0, r4
 8011f72:	b006      	add	sp, #24
 8011f74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f78:	2000ae30 	andcs	sl, r0, r0, lsr lr
 8011f7c:	2000ae88 	andcs	sl, r0, r8, lsl #29
 8011f80:	08014c8e 	stmdaeq	r1, {r1, r2, r3, r7, sl, fp, lr}
 8011f84:	08016eec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 8011f88:	2000ae46 	andcs	sl, r0, r6, asr #28

08011f8c <FirmwareVersion::Print(char const*)>:
 8011f8c:	b510      	push	{r4, lr}
 8011f8e:	460c      	mov	r4, r1
 8011f90:	4804      	ldr	r0, [pc, #16]	; (8011fa4 <FirmwareVersion::Print(char const*)+0x18>)
 8011f92:	f000 f9da 	bl	801234a <puts>
 8011f96:	b124      	cbz	r4, 8011fa2 <FirmwareVersion::Print(char const*)+0x16>
 8011f98:	4620      	mov	r0, r4
 8011f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f9e:	f000 b9d4 	b.w	801234a <puts>
 8011fa2:	bd10      	pop	{r4, pc}
 8011fa4:	2000ae46 	andcs	sl, r0, r6, asr #28

08011fa8 <LedBlink::LedBlink()>:
 8011fa8:	b538      	push	{r3, r4, r5, lr}
 8011faa:	2205      	movs	r2, #5
 8011fac:	2300      	movs	r3, #0
 8011fae:	e9c0 3200 	strd	r3, r2, [r0]
 8011fb2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8011fb6:	6083      	str	r3, [r0, #8]
 8011fb8:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011fbc:	6143      	str	r3, [r0, #20]
 8011fbe:	4b09      	ldr	r3, [pc, #36]	; (8011fe4 <LedBlink::LedBlink()+0x3c>)
 8011fc0:	4d09      	ldr	r5, [pc, #36]	; (8011fe8 <LedBlink::LedBlink()+0x40>)
 8011fc2:	4604      	mov	r4, r0
 8011fc4:	6018      	str	r0, [r3, #0]
 8011fc6:	f240 6004 	movw	r0, #1540	; 0x604
 8011fca:	f001 f899 	bl	8013100 <rcu_periph_clock_enable>
 8011fce:	4628      	mov	r0, r5
 8011fd0:	2301      	movs	r3, #1
 8011fd2:	2203      	movs	r2, #3
 8011fd4:	2110      	movs	r1, #16
 8011fd6:	f000 fffb 	bl	8012fd0 <gpio_init>
 8011fda:	2301      	movs	r3, #1
 8011fdc:	4620      	mov	r0, r4
 8011fde:	616b      	str	r3, [r5, #20]
 8011fe0:	bd38      	pop	{r3, r4, r5, pc}
 8011fe2:	bf00      	nop
 8011fe4:	2000ae8c 	andcs	sl, r0, ip, lsl #29
 8011fe8:	40011000 	andmi	r1, r1, r0

08011fec <LedBlink::SetMode(ledblink::Mode)>:
 8011fec:	6843      	ldr	r3, [r0, #4]
 8011fee:	428b      	cmp	r3, r1
 8011ff0:	d02f      	beq.n	8012052 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8011ff2:	6041      	str	r1, [r0, #4]
 8011ff4:	2904      	cmp	r1, #4
 8011ff6:	d822      	bhi.n	801203e <LedBlink::SetMode(ledblink::Mode)+0x52>
 8011ff8:	e8df f001 	tbb	[pc, r1]
 8011ffc:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8012000:	23ff001d 	mvnscs	r0, #29
 8012004:	6003      	str	r3, [r0, #0]
 8012006:	2300      	movs	r3, #0
 8012008:	2201      	movs	r2, #1
 801200a:	60c3      	str	r3, [r0, #12]
 801200c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012010:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8012014:	611a      	str	r2, [r3, #16]
 8012016:	6880      	ldr	r0, [r0, #8]
 8012018:	b1d8      	cbz	r0, 8012052 <LedBlink::SetMode(ledblink::Mode)+0x66>
 801201a:	6803      	ldr	r3, [r0, #0]
 801201c:	689b      	ldr	r3, [r3, #8]
 801201e:	4718      	bx	r3
 8012020:	2301      	movs	r3, #1
 8012022:	6003      	str	r3, [r0, #0]
 8012024:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8012028:	60c3      	str	r3, [r0, #12]
 801202a:	e7f4      	b.n	8012016 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 801202c:	2303      	movs	r3, #3
 801202e:	6003      	str	r3, [r0, #0]
 8012030:	f240 134d 	movw	r3, #333	; 0x14d
 8012034:	e7f8      	b.n	8012028 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8012036:	2305      	movs	r3, #5
 8012038:	6003      	str	r3, [r0, #0]
 801203a:	23c8      	movs	r3, #200	; 0xc8
 801203c:	e7f4      	b.n	8012028 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 801203e:	2300      	movs	r3, #0
 8012040:	2201      	movs	r2, #1
 8012042:	6003      	str	r3, [r0, #0]
 8012044:	60c3      	str	r3, [r0, #12]
 8012046:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801204a:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 801204e:	615a      	str	r2, [r3, #20]
 8012050:	e7e1      	b.n	8012016 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8012052:	4770      	bx	lr

08012054 <Hardware::Hardware()>:
 8012054:	b570      	push	{r4, r5, r6, lr}
 8012056:	2400      	movs	r4, #0
 8012058:	4b24      	ldr	r3, [pc, #144]	; (80120ec <Hardware::Hardware()+0x98>)
 801205a:	b090      	sub	sp, #64	; 0x40
 801205c:	7004      	strb	r4, [r0, #0]
 801205e:	6018      	str	r0, [r3, #0]
 8012060:	4605      	mov	r5, r0
 8012062:	f7f5 fa4d 	bl	8007500 <console_init>
 8012066:	f000 faa3 	bl	80125b0 <systick_config>
 801206a:	f001 fe69 	bl	8013d40 <udelay_init()>
 801206e:	f001 fe65 	bl	8013d3c <micros_init()>
 8012072:	f240 701b 	movw	r0, #1819	; 0x71b
 8012076:	f001 f843 	bl	8013100 <rcu_periph_clock_enable>
 801207a:	f240 701c 	movw	r0, #1820	; 0x71c
 801207e:	f001 f83f 	bl	8013100 <rcu_periph_clock_enable>
 8012082:	4e1b      	ldr	r6, [pc, #108]	; (80120f0 <Hardware::Hardware()+0x9c>)
 8012084:	f001 f834 	bl	80130f0 <pmu_backup_write_enable>
 8012088:	4621      	mov	r1, r4
 801208a:	2002      	movs	r0, #2
 801208c:	f000 fb2e 	bl	80126ec <bkp_data_write>
 8012090:	f240 7004 	movw	r0, #1796	; 0x704
 8012094:	f001 f834 	bl	8013100 <rcu_periph_clock_enable>
 8012098:	4630      	mov	r0, r6
 801209a:	f001 f989 	bl	80133b0 <timer_deinit>
 801209e:	236b      	movs	r3, #107	; 0x6b
 80120a0:	f8ad 300c 	strh.w	r3, [sp, #12]
 80120a4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80120a8:	a903      	add	r1, sp, #12
 80120aa:	4630      	mov	r0, r6
 80120ac:	9305      	str	r3, [sp, #20]
 80120ae:	f001 f9e1 	bl	8013474 <timer_init>
 80120b2:	4630      	mov	r0, r6
 80120b4:	f001 fa36 	bl	8013524 <timer_enable>
 80120b8:	f001 faf8 	bl	80136ac <gd32_adc_init()>
 80120bc:	2219      	movs	r2, #25
 80120be:	230b      	movs	r3, #11
 80120c0:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80120c4:	237a      	movs	r3, #122	; 0x7a
 80120c6:	a807      	add	r0, sp, #28
 80120c8:	930c      	str	r3, [sp, #48]	; 0x30
 80120ca:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80120ce:	9407      	str	r4, [sp, #28]
 80120d0:	940f      	str	r4, [sp, #60]	; 0x3c
 80120d2:	f000 f993 	bl	80123fc <mktime>
 80120d6:	4621      	mov	r1, r4
 80120d8:	e9cd 0401 	strd	r0, r4, [sp, #4]
 80120dc:	a801      	add	r0, sp, #4
 80120de:	f000 fa03 	bl	80124e8 <settimeofday>
 80120e2:	f001 fb3d 	bl	8013760 <gd32_i2c_begin>
 80120e6:	4628      	mov	r0, r5
 80120e8:	b010      	add	sp, #64	; 0x40
 80120ea:	bd70      	pop	{r4, r5, r6, pc}
 80120ec:	2000ae90 	mulcs	r0, r0, lr
 80120f0:	40001000 	andmi	r1, r0, r0

080120f4 <Hardware::GetUuid(unsigned char*)>:
 80120f4:	4a0c      	ldr	r2, [pc, #48]	; (8012128 <Hardware::GetUuid(unsigned char*)+0x34>)
 80120f6:	b084      	sub	sp, #16
 80120f8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80120fc:	9300      	str	r3, [sp, #0]
 80120fe:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8012102:	9001      	str	r0, [sp, #4]
 8012104:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8012108:	4403      	add	r3, r0
 801210a:	4413      	add	r3, r2
 801210c:	9202      	str	r2, [sp, #8]
 801210e:	466a      	mov	r2, sp
 8012110:	9303      	str	r3, [sp, #12]
 8012112:	1e4b      	subs	r3, r1, #1
 8012114:	310f      	adds	r1, #15
 8012116:	428b      	cmp	r3, r1
 8012118:	d101      	bne.n	801211e <Hardware::GetUuid(unsigned char*)+0x2a>
 801211a:	b004      	add	sp, #16
 801211c:	4770      	bx	lr
 801211e:	f812 0b01 	ldrb.w	r0, [r2], #1
 8012122:	f803 0f01 	strb.w	r0, [r3, #1]!
 8012126:	e7f6      	b.n	8012116 <Hardware::GetUuid(unsigned char*)+0x22>
 8012128:	1ffff000 	svcne	0x00fff000

0801212c <Hardware::Reboot()>:
 801212c:	b508      	push	{r3, lr}
 801212e:	2300      	movs	r3, #0
 8012130:	4604      	mov	r4, r0
 8012132:	7003      	strb	r3, [r0, #0]
 8012134:	2104      	movs	r1, #4
 8012136:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801213a:	f000 ff1f 	bl	8012f7c <fwdgt_config>
 801213e:	4620      	mov	r0, r4
 8012140:	f7f6 fb28 	bl	8008794 <Hardware::RebootHandler()>
 8012144:	2102      	movs	r1, #2
 8012146:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801214a:	f000 ff17 	bl	8012f7c <fwdgt_config>
 801214e:	2801      	cmp	r0, #1
 8012150:	bf0c      	ite	eq
 8012152:	2301      	moveq	r3, #1
 8012154:	2300      	movne	r3, #0
 8012156:	7023      	strb	r3, [r4, #0]
 8012158:	d101      	bne.n	801215e <Hardware::Reboot()+0x32>
 801215a:	f000 feff 	bl	8012f5c <fwdgt_enable>
 801215e:	2208      	movs	r2, #8
 8012160:	4b0d      	ldr	r3, [pc, #52]	; (8012198 <Hardware::Reboot()+0x6c>)
 8012162:	2501      	movs	r5, #1
 8012164:	681b      	ldr	r3, [r3, #0]
 8012166:	480d      	ldr	r0, [pc, #52]	; (801219c <Hardware::Reboot()+0x70>)
 8012168:	601a      	str	r2, [r3, #0]
 801216a:	227d      	movs	r2, #125	; 0x7d
 801216c:	490c      	ldr	r1, [pc, #48]	; (80121a0 <Hardware::Reboot()+0x74>)
 801216e:	60da      	str	r2, [r3, #12]
 8012170:	68dc      	ldr	r4, [r3, #12]
 8012172:	b904      	cbnz	r4, 8012176 <Hardware::Reboot()+0x4a>
 8012174:	e7fe      	b.n	8012174 <Hardware::Reboot()+0x48>
 8012176:	6802      	ldr	r2, [r0, #0]
 8012178:	695e      	ldr	r6, [r3, #20]
 801217a:	1b92      	subs	r2, r2, r6
 801217c:	4294      	cmp	r4, r2
 801217e:	d8f8      	bhi.n	8012172 <Hardware::Reboot()+0x46>
 8012180:	6802      	ldr	r2, [r0, #0]
 8012182:	615a      	str	r2, [r3, #20]
 8012184:	691a      	ldr	r2, [r3, #16]
 8012186:	2a01      	cmp	r2, #1
 8012188:	f082 0401 	eor.w	r4, r2, #1
 801218c:	611c      	str	r4, [r3, #16]
 801218e:	bf14      	ite	ne
 8012190:	610d      	strne	r5, [r1, #16]
 8012192:	614a      	streq	r2, [r1, #20]
 8012194:	e7ec      	b.n	8012170 <Hardware::Reboot()+0x44>
 8012196:	bf00      	nop
 8012198:	2000ae8c 	andcs	sl, r0, ip, lsl #29
 801219c:	2000aea4 	andcs	sl, r0, r4, lsr #29
 80121a0:	40011000 	andmi	r1, r1, r0

080121a4 <operator delete(void*)>:
 80121a4:	f000 b874 	b.w	8012290 <free>

080121a8 <operator delete[](void*)>:
 80121a8:	f000 b872 	b.w	8012290 <free>

080121ac <operator new(unsigned int)>:
 80121ac:	f000 b842 	b.w	8012234 <malloc>

080121b0 <operator new[](unsigned int)>:
 80121b0:	f000 b840 	b.w	8012234 <malloc>

080121b4 <inet_aton>:
 80121b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80121b6:	f04f 0c0a 	mov.w	ip, #10
 80121ba:	2500      	movs	r5, #0
 80121bc:	ae01      	add	r6, sp, #4
 80121be:	4603      	mov	r3, r0
 80121c0:	2200      	movs	r2, #0
 80121c2:	1d07      	adds	r7, r0, #4
 80121c4:	e007      	b.n	80121d6 <inet_aton+0x22>
 80121c6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80121ca:	2b09      	cmp	r3, #9
 80121cc:	d820      	bhi.n	8012210 <inet_aton+0x5c>
 80121ce:	4603      	mov	r3, r0
 80121d0:	fb0c 4202 	mla	r2, ip, r2, r4
 80121d4:	3a30      	subs	r2, #48	; 0x30
 80121d6:	4618      	mov	r0, r3
 80121d8:	f810 4b01 	ldrb.w	r4, [r0], #1
 80121dc:	2c2e      	cmp	r4, #46	; 0x2e
 80121de:	d111      	bne.n	8012204 <inet_aton+0x50>
 80121e0:	3501      	adds	r5, #1
 80121e2:	2d03      	cmp	r5, #3
 80121e4:	f806 2b01 	strb.w	r2, [r6], #1
 80121e8:	d1e9      	bne.n	80121be <inet_aton+0xa>
 80121ea:	2200      	movs	r2, #0
 80121ec:	250a      	movs	r5, #10
 80121ee:	1d1c      	adds	r4, r3, #4
 80121f0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80121f4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 80121f8:	d10d      	bne.n	8012216 <inet_aton+0x62>
 80121fa:	f88d 2007 	strb.w	r2, [sp, #7]
 80121fe:	b9b1      	cbnz	r1, 801222e <inet_aton+0x7a>
 8012200:	2001      	movs	r0, #1
 8012202:	e006      	b.n	8012212 <inet_aton+0x5e>
 8012204:	2c00      	cmp	r4, #0
 8012206:	d0eb      	beq.n	80121e0 <inet_aton+0x2c>
 8012208:	2c0a      	cmp	r4, #10
 801220a:	d0e9      	beq.n	80121e0 <inet_aton+0x2c>
 801220c:	42b8      	cmp	r0, r7
 801220e:	d1da      	bne.n	80121c6 <inet_aton+0x12>
 8012210:	2000      	movs	r0, #0
 8012212:	b003      	add	sp, #12
 8012214:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012216:	280a      	cmp	r0, #10
 8012218:	d0ef      	beq.n	80121fa <inet_aton+0x46>
 801221a:	42a3      	cmp	r3, r4
 801221c:	d0f8      	beq.n	8012210 <inet_aton+0x5c>
 801221e:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8012222:	2e09      	cmp	r6, #9
 8012224:	d8f4      	bhi.n	8012210 <inet_aton+0x5c>
 8012226:	fb05 0202 	mla	r2, r5, r2, r0
 801222a:	3a30      	subs	r2, #48	; 0x30
 801222c:	e7e0      	b.n	80121f0 <inet_aton+0x3c>
 801222e:	9b01      	ldr	r3, [sp, #4]
 8012230:	600b      	str	r3, [r1, #0]
 8012232:	e7e5      	b.n	8012200 <inet_aton+0x4c>

08012234 <malloc>:
 8012234:	b510      	push	{r4, lr}
 8012236:	b1d8      	cbz	r0, 8012270 <malloc+0x3c>
 8012238:	4a11      	ldr	r2, [pc, #68]	; (8012280 <malloc+0x4c>)
 801223a:	6811      	ldr	r1, [r2, #0]
 801223c:	b971      	cbnz	r1, 801225c <malloc+0x28>
 801223e:	4911      	ldr	r1, [pc, #68]	; (8012284 <malloc+0x50>)
 8012240:	f100 021b 	add.w	r2, r0, #27
 8012244:	680b      	ldr	r3, [r1, #0]
 8012246:	4c10      	ldr	r4, [pc, #64]	; (8012288 <malloc+0x54>)
 8012248:	f022 020f 	bic.w	r2, r2, #15
 801224c:	441a      	add	r2, r3
 801224e:	42a2      	cmp	r2, r4
 8012250:	d80f      	bhi.n	8012272 <malloc+0x3e>
 8012252:	600a      	str	r2, [r1, #0]
 8012254:	4a0d      	ldr	r2, [pc, #52]	; (801228c <malloc+0x58>)
 8012256:	e9c3 2000 	strd	r2, r0, [r3]
 801225a:	e005      	b.n	8012268 <malloc+0x34>
 801225c:	4288      	cmp	r0, r1
 801225e:	d90a      	bls.n	8012276 <malloc+0x42>
 8012260:	3208      	adds	r2, #8
 8012262:	e7ea      	b.n	801223a <malloc+0x6>
 8012264:	6899      	ldr	r1, [r3, #8]
 8012266:	6051      	str	r1, [r2, #4]
 8012268:	2200      	movs	r2, #0
 801226a:	f103 000c 	add.w	r0, r3, #12
 801226e:	609a      	str	r2, [r3, #8]
 8012270:	bd10      	pop	{r4, pc}
 8012272:	2000      	movs	r0, #0
 8012274:	e7fc      	b.n	8012270 <malloc+0x3c>
 8012276:	6853      	ldr	r3, [r2, #4]
 8012278:	2b00      	cmp	r3, #0
 801227a:	d1f3      	bne.n	8012264 <malloc+0x30>
 801227c:	4608      	mov	r0, r1
 801227e:	e7de      	b.n	801223e <malloc+0xa>
 8012280:	20000010 	andcs	r0, r0, r0, lsl r0
 8012284:	2000000c 	andcs	r0, r0, ip
 8012288:	20016000 	andcs	r6, r1, r0
 801228c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012290 <free>:
 8012290:	b138      	cbz	r0, 80122a2 <free+0x12>
 8012292:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 8012296:	4b09      	ldr	r3, [pc, #36]	; (80122bc <free+0x2c>)
 8012298:	429a      	cmp	r2, r3
 801229a:	d102      	bne.n	80122a2 <free+0x12>
 801229c:	4b08      	ldr	r3, [pc, #32]	; (80122c0 <free+0x30>)
 801229e:	681a      	ldr	r2, [r3, #0]
 80122a0:	b902      	cbnz	r2, 80122a4 <free+0x14>
 80122a2:	4770      	bx	lr
 80122a4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80122a8:	4291      	cmp	r1, r2
 80122aa:	d104      	bne.n	80122b6 <free+0x26>
 80122ac:	685a      	ldr	r2, [r3, #4]
 80122ae:	380c      	subs	r0, #12
 80122b0:	6082      	str	r2, [r0, #8]
 80122b2:	6058      	str	r0, [r3, #4]
 80122b4:	4770      	bx	lr
 80122b6:	3308      	adds	r3, #8
 80122b8:	e7f1      	b.n	801229e <free+0xe>
 80122ba:	bf00      	nop
 80122bc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80122c0:	20000010 	andcs	r0, r0, r0, lsl r0

080122c4 <memcpy>:
 80122c4:	b510      	push	{r4, lr}
 80122c6:	1e43      	subs	r3, r0, #1
 80122c8:	440a      	add	r2, r1
 80122ca:	4291      	cmp	r1, r2
 80122cc:	d100      	bne.n	80122d0 <memcpy+0xc>
 80122ce:	bd10      	pop	{r4, pc}
 80122d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80122d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80122d8:	e7f7      	b.n	80122ca <memcpy+0x6>

080122da <memmove>:
 80122da:	4288      	cmp	r0, r1
 80122dc:	b510      	push	{r4, lr}
 80122de:	eb01 0302 	add.w	r3, r1, r2
 80122e2:	d208      	bcs.n	80122f6 <memmove+0x1c>
 80122e4:	1e42      	subs	r2, r0, #1
 80122e6:	4299      	cmp	r1, r3
 80122e8:	d100      	bne.n	80122ec <memmove+0x12>
 80122ea:	bd10      	pop	{r4, pc}
 80122ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 80122f0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80122f4:	e7f7      	b.n	80122e6 <memmove+0xc>
 80122f6:	4601      	mov	r1, r0
 80122f8:	4402      	add	r2, r0
 80122fa:	428a      	cmp	r2, r1
 80122fc:	d0f5      	beq.n	80122ea <memmove+0x10>
 80122fe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012302:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012306:	e7f8      	b.n	80122fa <memmove+0x20>

08012308 <memset>:
 8012308:	b5f0      	push	{r4, r5, r6, r7, lr}
 801230a:	b1c2      	cbz	r2, 801233e <memset+0x36>
 801230c:	4603      	mov	r3, r0
 801230e:	b2c9      	uxtb	r1, r1
 8012310:	075c      	lsls	r4, r3, #29
 8012312:	d110      	bne.n	8012336 <memset+0x2e>
 8012314:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8012318:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 801231c:	463d      	mov	r5, r7
 801231e:	461e      	mov	r6, r3
 8012320:	f022 0407 	bic.w	r4, r2, #7
 8012324:	441c      	add	r4, r3
 8012326:	42a6      	cmp	r6, r4
 8012328:	d10a      	bne.n	8012340 <memset+0x38>
 801232a:	4413      	add	r3, r2
 801232c:	429c      	cmp	r4, r3
 801232e:	d006      	beq.n	801233e <memset+0x36>
 8012330:	f804 1b01 	strb.w	r1, [r4], #1
 8012334:	e7fa      	b.n	801232c <memset+0x24>
 8012336:	3a01      	subs	r2, #1
 8012338:	f803 1b01 	strb.w	r1, [r3], #1
 801233c:	d1e8      	bne.n	8012310 <memset+0x8>
 801233e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012340:	f846 7b08 	str.w	r7, [r6], #8
 8012344:	f846 5c04 	str.w	r5, [r6, #-4]
 8012348:	e7ed      	b.n	8012326 <memset+0x1e>

0801234a <puts>:
 801234a:	b508      	push	{r3, lr}
 801234c:	f7ff fd98 	bl	8011e80 <console_puts>
 8012350:	200a      	movs	r0, #10
 8012352:	f7ff fd93 	bl	8011e7c <console_putc>
 8012356:	2001      	movs	r0, #1
 8012358:	bd08      	pop	{r3, pc}
	...

0801235c <strtok>:
 801235c:	b530      	push	{r4, r5, lr}
 801235e:	b910      	cbnz	r0, 8012366 <strtok+0xa>
 8012360:	4b12      	ldr	r3, [pc, #72]	; (80123ac <strtok+0x50>)
 8012362:	6818      	ldr	r0, [r3, #0]
 8012364:	b158      	cbz	r0, 801237e <strtok+0x22>
 8012366:	4603      	mov	r3, r0
 8012368:	460d      	mov	r5, r1
 801236a:	4618      	mov	r0, r3
 801236c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012370:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012374:	b924      	cbnz	r4, 8012380 <strtok+0x24>
 8012376:	b94a      	cbnz	r2, 801238c <strtok+0x30>
 8012378:	4610      	mov	r0, r2
 801237a:	4b0c      	ldr	r3, [pc, #48]	; (80123ac <strtok+0x50>)
 801237c:	601a      	str	r2, [r3, #0]
 801237e:	bd30      	pop	{r4, r5, pc}
 8012380:	42a2      	cmp	r2, r4
 8012382:	d1f5      	bne.n	8012370 <strtok+0x14>
 8012384:	e7f0      	b.n	8012368 <strtok+0xc>
 8012386:	4613      	mov	r3, r2
 8012388:	e00c      	b.n	80123a4 <strtok+0x48>
 801238a:	b914      	cbnz	r4, 8012392 <strtok+0x36>
 801238c:	460d      	mov	r5, r1
 801238e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012392:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012396:	42a2      	cmp	r2, r4
 8012398:	d1f7      	bne.n	801238a <strtok+0x2e>
 801239a:	2a00      	cmp	r2, #0
 801239c:	d0f3      	beq.n	8012386 <strtok+0x2a>
 801239e:	2200      	movs	r2, #0
 80123a0:	f803 2c01 	strb.w	r2, [r3, #-1]
 80123a4:	4a01      	ldr	r2, [pc, #4]	; (80123ac <strtok+0x50>)
 80123a6:	6013      	str	r3, [r2, #0]
 80123a8:	e7e9      	b.n	801237e <strtok+0x22>
 80123aa:	bf00      	nop
 80123ac:	2000ae94 	mulcs	r0, r4, lr

080123b0 <isleapyear>:
 80123b0:	2264      	movs	r2, #100	; 0x64
 80123b2:	fb90 f3f2 	sdiv	r3, r0, r2
 80123b6:	fb02 0313 	mls	r3, r2, r3, r0
 80123ba:	b94b      	cbnz	r3, 80123d0 <isleapyear+0x20>
 80123bc:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80123c0:	fb90 f2f3 	sdiv	r2, r0, r3
 80123c4:	fb03 0012 	mls	r0, r3, r2, r0
 80123c8:	fab0 f080 	clz	r0, r0
 80123cc:	0940      	lsrs	r0, r0, #5
 80123ce:	4770      	bx	lr
 80123d0:	f010 0f03 	tst.w	r0, #3
 80123d4:	bf0c      	ite	eq
 80123d6:	2001      	moveq	r0, #1
 80123d8:	2000      	movne	r0, #0
 80123da:	4770      	bx	lr

080123dc <getdaysofmonth>:
 80123dc:	b510      	push	{r4, lr}
 80123de:	4604      	mov	r4, r0
 80123e0:	2c01      	cmp	r4, #1
 80123e2:	4608      	mov	r0, r1
 80123e4:	d102      	bne.n	80123ec <getdaysofmonth+0x10>
 80123e6:	f7ff ffe3 	bl	80123b0 <isleapyear>
 80123ea:	b918      	cbnz	r0, 80123f4 <getdaysofmonth+0x18>
 80123ec:	4b02      	ldr	r3, [pc, #8]	; (80123f8 <getdaysofmonth+0x1c>)
 80123ee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80123f2:	bd10      	pop	{r4, pc}
 80123f4:	201d      	movs	r0, #29
 80123f6:	e7fc      	b.n	80123f2 <getdaysofmonth+0x16>
 80123f8:	08016f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, sp, lr}

080123fc <mktime>:
 80123fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012400:	4604      	mov	r4, r0
 8012402:	2800      	cmp	r0, #0
 8012404:	d043      	beq.n	801248e <mktime+0x92>
 8012406:	6941      	ldr	r1, [r0, #20]
 8012408:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 801240c:	2b45      	cmp	r3, #69	; 0x45
 801240e:	d83e      	bhi.n	801248e <mktime+0x92>
 8012410:	2600      	movs	r6, #0
 8012412:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8012416:	f240 186d 	movw	r8, #365	; 0x16d
 801241a:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 801241e:	42af      	cmp	r7, r5
 8012420:	da24      	bge.n	801246c <mktime+0x70>
 8012422:	6927      	ldr	r7, [r4, #16]
 8012424:	2f0b      	cmp	r7, #11
 8012426:	d832      	bhi.n	801248e <mktime+0x92>
 8012428:	2500      	movs	r5, #0
 801242a:	42af      	cmp	r7, r5
 801242c:	d129      	bne.n	8012482 <mktime+0x86>
 801242e:	68e5      	ldr	r5, [r4, #12]
 8012430:	2d00      	cmp	r5, #0
 8012432:	dd2c      	ble.n	801248e <mktime+0x92>
 8012434:	4638      	mov	r0, r7
 8012436:	f7ff ffd1 	bl	80123dc <getdaysofmonth>
 801243a:	4285      	cmp	r5, r0
 801243c:	dc27      	bgt.n	801248e <mktime+0x92>
 801243e:	2318      	movs	r3, #24
 8012440:	3d01      	subs	r5, #1
 8012442:	4435      	add	r5, r6
 8012444:	435d      	muls	r5, r3
 8012446:	68a3      	ldr	r3, [r4, #8]
 8012448:	2b17      	cmp	r3, #23
 801244a:	d820      	bhi.n	801248e <mktime+0x92>
 801244c:	213c      	movs	r1, #60	; 0x3c
 801244e:	442b      	add	r3, r5
 8012450:	fb01 f203 	mul.w	r2, r1, r3
 8012454:	6863      	ldr	r3, [r4, #4]
 8012456:	2b3b      	cmp	r3, #59	; 0x3b
 8012458:	d819      	bhi.n	801248e <mktime+0x92>
 801245a:	6820      	ldr	r0, [r4, #0]
 801245c:	4413      	add	r3, r2
 801245e:	283b      	cmp	r0, #59	; 0x3b
 8012460:	fb01 f303 	mul.w	r3, r1, r3
 8012464:	d813      	bhi.n	801248e <mktime+0x92>
 8012466:	4418      	add	r0, r3
 8012468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801246c:	4628      	mov	r0, r5
 801246e:	f7ff ff9f 	bl	80123b0 <isleapyear>
 8012472:	2800      	cmp	r0, #0
 8012474:	bf14      	ite	ne
 8012476:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801247a:	4643      	moveq	r3, r8
 801247c:	3501      	adds	r5, #1
 801247e:	441e      	add	r6, r3
 8012480:	e7cd      	b.n	801241e <mktime+0x22>
 8012482:	4628      	mov	r0, r5
 8012484:	f7ff ffaa 	bl	80123dc <getdaysofmonth>
 8012488:	3501      	adds	r5, #1
 801248a:	4406      	add	r6, r0
 801248c:	e7cd      	b.n	801242a <mktime+0x2e>
 801248e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012492:	e7e9      	b.n	8012468 <mktime+0x6c>

08012494 <gettimeofday>:
 8012494:	b538      	push	{r3, r4, r5, lr}
 8012496:	4b10      	ldr	r3, [pc, #64]	; (80124d8 <gettimeofday+0x44>)
 8012498:	4a10      	ldr	r2, [pc, #64]	; (80124dc <gettimeofday+0x48>)
 801249a:	681b      	ldr	r3, [r3, #0]
 801249c:	6814      	ldr	r4, [r2, #0]
 801249e:	6013      	str	r3, [r2, #0]
 80124a0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80124a4:	429c      	cmp	r4, r3
 80124a6:	bf2c      	ite	cs
 80124a8:	1ae4      	subcs	r4, r4, r3
 80124aa:	1b1c      	subcc	r4, r3, r4
 80124ac:	4354      	muls	r4, r2
 80124ae:	4b0c      	ldr	r3, [pc, #48]	; (80124e0 <gettimeofday+0x4c>)
 80124b0:	4605      	mov	r5, r0
 80124b2:	e9d3 2100 	ldrd	r2, r1, [r3]
 80124b6:	18a4      	adds	r4, r4, r2
 80124b8:	f141 0100 	adc.w	r1, r1, #0
 80124bc:	e9c3 4100 	strd	r4, r1, [r3]
 80124c0:	4620      	mov	r0, r4
 80124c2:	2300      	movs	r3, #0
 80124c4:	4a07      	ldr	r2, [pc, #28]	; (80124e4 <gettimeofday+0x50>)
 80124c6:	f7f5 fd07 	bl	8007ed8 <__aeabi_uldivmod>
 80124ca:	4b06      	ldr	r3, [pc, #24]	; (80124e4 <gettimeofday+0x50>)
 80124cc:	6028      	str	r0, [r5, #0]
 80124ce:	fb03 4410 	mls	r4, r3, r0, r4
 80124d2:	2000      	movs	r0, #0
 80124d4:	606c      	str	r4, [r5, #4]
 80124d6:	bd38      	pop	{r3, r4, r5, pc}
 80124d8:	2000aea4 	andcs	sl, r0, r4, lsr #29
 80124dc:	2000aea0 	andcs	sl, r0, r0, lsr #29
 80124e0:	2000ae98 	mulcs	r0, r8, lr
 80124e4:	000f4240 	andeq	r4, pc, r0, asr #4

080124e8 <settimeofday>:
 80124e8:	4b07      	ldr	r3, [pc, #28]	; (8012508 <settimeofday+0x20>)
 80124ea:	b510      	push	{r4, lr}
 80124ec:	681a      	ldr	r2, [r3, #0]
 80124ee:	4b07      	ldr	r3, [pc, #28]	; (801250c <settimeofday+0x24>)
 80124f0:	6804      	ldr	r4, [r0, #0]
 80124f2:	601a      	str	r2, [r3, #0]
 80124f4:	6843      	ldr	r3, [r0, #4]
 80124f6:	4806      	ldr	r0, [pc, #24]	; (8012510 <settimeofday+0x28>)
 80124f8:	17da      	asrs	r2, r3, #31
 80124fa:	fbc4 3200 	smlal	r3, r2, r4, r0
 80124fe:	4905      	ldr	r1, [pc, #20]	; (8012514 <settimeofday+0x2c>)
 8012500:	2000      	movs	r0, #0
 8012502:	e9c1 3200 	strd	r3, r2, [r1]
 8012506:	bd10      	pop	{r4, pc}
 8012508:	2000aea4 	andcs	sl, r0, r4, lsr #29
 801250c:	2000aea0 	andcs	sl, r0, r0, lsr #29
 8012510:	000f4240 	andeq	r4, pc, r0, asr #4
 8012514:	2000ae98 	mulcs	r0, r8, lr

08012518 <time>:
 8012518:	b513      	push	{r0, r1, r4, lr}
 801251a:	4604      	mov	r4, r0
 801251c:	2100      	movs	r1, #0
 801251e:	4668      	mov	r0, sp
 8012520:	f7ff ffb8 	bl	8012494 <gettimeofday>
 8012524:	9800      	ldr	r0, [sp, #0]
 8012526:	b104      	cbz	r4, 801252a <time+0x12>
 8012528:	6020      	str	r0, [r4, #0]
 801252a:	b002      	add	sp, #8
 801252c:	bd10      	pop	{r4, pc}
	...

08012530 <uart0_init>:
 8012530:	2301      	movs	r3, #1
 8012532:	b507      	push	{r0, r1, r2, lr}
 8012534:	2208      	movs	r2, #8
 8012536:	9300      	str	r3, [sp, #0]
 8012538:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 801253c:	2300      	movs	r3, #0
 801253e:	4803      	ldr	r0, [pc, #12]	; (801254c <uart0_init+0x1c>)
 8012540:	f001 fb24 	bl	8013b8c <gd32_uart_begin>
 8012544:	b003      	add	sp, #12
 8012546:	f85d fb04 	ldr.w	pc, [sp], #4
 801254a:	bf00      	nop
 801254c:	40013800 	andmi	r3, r1, r0, lsl #16

08012550 <uart0_putc>:
 8012550:	280a      	cmp	r0, #10
 8012552:	b538      	push	{r3, r4, r5, lr}
 8012554:	4604      	mov	r4, r0
 8012556:	d10a      	bne.n	801256e <uart0_putc+0x1e>
 8012558:	4d0b      	ldr	r5, [pc, #44]	; (8012588 <uart0_putc+0x38>)
 801255a:	2107      	movs	r1, #7
 801255c:	4628      	mov	r0, r5
 801255e:	f001 f87f 	bl	8013660 <usart_flag_get>
 8012562:	2800      	cmp	r0, #0
 8012564:	d0f9      	beq.n	801255a <uart0_putc+0xa>
 8012566:	220d      	movs	r2, #13
 8012568:	4b08      	ldr	r3, [pc, #32]	; (801258c <uart0_putc+0x3c>)
 801256a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801256e:	4d06      	ldr	r5, [pc, #24]	; (8012588 <uart0_putc+0x38>)
 8012570:	2107      	movs	r1, #7
 8012572:	4628      	mov	r0, r5
 8012574:	f001 f874 	bl	8013660 <usart_flag_get>
 8012578:	2800      	cmp	r0, #0
 801257a:	d0f9      	beq.n	8012570 <uart0_putc+0x20>
 801257c:	4b03      	ldr	r3, [pc, #12]	; (801258c <uart0_putc+0x3c>)
 801257e:	b2e4      	uxtb	r4, r4
 8012580:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012584:	bd38      	pop	{r3, r4, r5, pc}
 8012586:	bf00      	nop
 8012588:	40013800 	andmi	r3, r1, r0, lsl #16
 801258c:	40013000 	andmi	r3, r1, r0

08012590 <uart0_puts>:
 8012590:	b510      	push	{r4, lr}
 8012592:	1e44      	subs	r4, r0, #1
 8012594:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012598:	b903      	cbnz	r3, 801259c <uart0_puts+0xc>
 801259a:	bd10      	pop	{r4, pc}
 801259c:	2b0a      	cmp	r3, #10
 801259e:	d102      	bne.n	80125a6 <uart0_puts+0x16>
 80125a0:	200d      	movs	r0, #13
 80125a2:	f7ff ffd5 	bl	8012550 <uart0_putc>
 80125a6:	7820      	ldrb	r0, [r4, #0]
 80125a8:	f7ff ffd2 	bl	8012550 <uart0_putc>
 80125ac:	e7f2      	b.n	8012594 <uart0_puts+0x4>
	...

080125b0 <systick_config>:
 80125b0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80125b4:	4b0b      	ldr	r3, [pc, #44]	; (80125e4 <systick_config+0x34>)
 80125b6:	681b      	ldr	r3, [r3, #0]
 80125b8:	fbb3 f3f2 	udiv	r3, r3, r2
 80125bc:	3b01      	subs	r3, #1
 80125be:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80125c2:	d20d      	bcs.n	80125e0 <systick_config+0x30>
 80125c4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80125c8:	21f0      	movs	r1, #240	; 0xf0
 80125ca:	6153      	str	r3, [r2, #20]
 80125cc:	4b06      	ldr	r3, [pc, #24]	; (80125e8 <systick_config+0x38>)
 80125ce:	2007      	movs	r0, #7
 80125d0:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80125d4:	2100      	movs	r1, #0
 80125d6:	6191      	str	r1, [r2, #24]
 80125d8:	6110      	str	r0, [r2, #16]
 80125da:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80125de:	4770      	bx	lr
 80125e0:	e7fe      	b.n	80125e0 <systick_config+0x30>
 80125e2:	bf00      	nop
 80125e4:	20000078 	andcs	r0, r0, r8, ror r0
 80125e8:	e000ed00 	and	lr, r0, r0, lsl #26

080125ec <SysTick_Handler>:
 80125ec:	4a02      	ldr	r2, [pc, #8]	; (80125f8 <SysTick_Handler+0xc>)
 80125ee:	6813      	ldr	r3, [r2, #0]
 80125f0:	3301      	adds	r3, #1
 80125f2:	6013      	str	r3, [r2, #0]
 80125f4:	4770      	bx	lr
 80125f6:	bf00      	nop
 80125f8:	2000aea4 	andcs	sl, r0, r4, lsr #29

080125fc <SystemInit>:
 80125fc:	4b37      	ldr	r3, [pc, #220]	; (80126dc <SystemInit+0xe0>)
 80125fe:	4938      	ldr	r1, [pc, #224]	; (80126e0 <SystemInit+0xe4>)
 8012600:	681a      	ldr	r2, [r3, #0]
 8012602:	f042 0201 	orr.w	r2, r2, #1
 8012606:	601a      	str	r2, [r3, #0]
 8012608:	685a      	ldr	r2, [r3, #4]
 801260a:	f022 0203 	bic.w	r2, r2, #3
 801260e:	605a      	str	r2, [r3, #4]
 8012610:	681a      	ldr	r2, [r3, #0]
 8012612:	400a      	ands	r2, r1
 8012614:	601a      	str	r2, [r3, #0]
 8012616:	6858      	ldr	r0, [r3, #4]
 8012618:	4a32      	ldr	r2, [pc, #200]	; (80126e4 <SystemInit+0xe8>)
 801261a:	4002      	ands	r2, r0
 801261c:	605a      	str	r2, [r3, #4]
 801261e:	681a      	ldr	r2, [r3, #0]
 8012620:	400a      	ands	r2, r1
 8012622:	601a      	str	r2, [r3, #0]
 8012624:	681a      	ldr	r2, [r3, #0]
 8012626:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801262a:	601a      	str	r2, [r3, #0]
 801262c:	685a      	ldr	r2, [r3, #4]
 801262e:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8012632:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012636:	605a      	str	r2, [r3, #4]
 8012638:	2200      	movs	r2, #0
 801263a:	62da      	str	r2, [r3, #44]	; 0x2c
 801263c:	681a      	ldr	r2, [r3, #0]
 801263e:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 8012642:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 8012646:	601a      	str	r2, [r3, #0]
 8012648:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 801264c:	609a      	str	r2, [r3, #8]
 801264e:	681a      	ldr	r2, [r3, #0]
 8012650:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8012654:	601a      	str	r2, [r3, #0]
 8012656:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801265a:	6819      	ldr	r1, [r3, #0]
 801265c:	0389      	lsls	r1, r1, #14
 801265e:	d401      	bmi.n	8012664 <SystemInit+0x68>
 8012660:	3a01      	subs	r2, #1
 8012662:	d1fa      	bne.n	801265a <SystemInit+0x5e>
 8012664:	681a      	ldr	r2, [r3, #0]
 8012666:	0392      	lsls	r2, r2, #14
 8012668:	d400      	bmi.n	801266c <SystemInit+0x70>
 801266a:	e7fe      	b.n	801266a <SystemInit+0x6e>
 801266c:	685a      	ldr	r2, [r3, #4]
 801266e:	605a      	str	r2, [r3, #4]
 8012670:	685a      	ldr	r2, [r3, #4]
 8012672:	605a      	str	r2, [r3, #4]
 8012674:	685a      	ldr	r2, [r3, #4]
 8012676:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801267a:	605a      	str	r2, [r3, #4]
 801267c:	685a      	ldr	r2, [r3, #4]
 801267e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8012682:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8012686:	605a      	str	r2, [r3, #4]
 8012688:	685a      	ldr	r2, [r3, #4]
 801268a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 801268e:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 8012692:	605a      	str	r2, [r3, #4]
 8012694:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012696:	4a14      	ldr	r2, [pc, #80]	; (80126e8 <SystemInit+0xec>)
 8012698:	400a      	ands	r2, r1
 801269a:	62da      	str	r2, [r3, #44]	; 0x2c
 801269c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801269e:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 80126a2:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 80126a6:	62da      	str	r2, [r3, #44]	; 0x2c
 80126a8:	681a      	ldr	r2, [r3, #0]
 80126aa:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80126ae:	601a      	str	r2, [r3, #0]
 80126b0:	681a      	ldr	r2, [r3, #0]
 80126b2:	0110      	lsls	r0, r2, #4
 80126b4:	d5fc      	bpl.n	80126b0 <SystemInit+0xb4>
 80126b6:	681a      	ldr	r2, [r3, #0]
 80126b8:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80126bc:	601a      	str	r2, [r3, #0]
 80126be:	681a      	ldr	r2, [r3, #0]
 80126c0:	0191      	lsls	r1, r2, #6
 80126c2:	d5fc      	bpl.n	80126be <SystemInit+0xc2>
 80126c4:	685a      	ldr	r2, [r3, #4]
 80126c6:	f022 0203 	bic.w	r2, r2, #3
 80126ca:	605a      	str	r2, [r3, #4]
 80126cc:	685a      	ldr	r2, [r3, #4]
 80126ce:	f042 0202 	orr.w	r2, r2, #2
 80126d2:	605a      	str	r2, [r3, #4]
 80126d4:	685a      	ldr	r2, [r3, #4]
 80126d6:	0712      	lsls	r2, r2, #28
 80126d8:	d5fc      	bpl.n	80126d4 <SystemInit+0xd8>
 80126da:	4770      	bx	lr
 80126dc:	40021000 	andmi	r1, r2, r0
 80126e0:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80126e4:	e0ff000c 	rscs	r0, pc, ip
 80126e8:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080126ec <bkp_data_write>:
 80126ec:	f1a0 030b 	sub.w	r3, r0, #11
 80126f0:	2b1f      	cmp	r3, #31
 80126f2:	d804      	bhi.n	80126fe <bkp_data_write+0x12>
 80126f4:	4b07      	ldr	r3, [pc, #28]	; (8012714 <bkp_data_write+0x28>)
 80126f6:	4403      	add	r3, r0
 80126f8:	009b      	lsls	r3, r3, #2
 80126fa:	8019      	strh	r1, [r3, #0]
 80126fc:	4770      	bx	lr
 80126fe:	1e43      	subs	r3, r0, #1
 8012700:	2b09      	cmp	r3, #9
 8012702:	bf9f      	itttt	ls
 8012704:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012708:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 801270c:	0080      	lslls	r0, r0, #2
 801270e:	8001      	strhls	r1, [r0, #0]
 8012710:	4770      	bx	lr
 8012712:	bf00      	nop
 8012714:	10001b05 	andne	r1, r0, r5, lsl #22

08012718 <bkp_data_read>:
 8012718:	f1a0 030b 	sub.w	r3, r0, #11
 801271c:	2b1f      	cmp	r3, #31
 801271e:	d805      	bhi.n	801272c <bkp_data_read+0x14>
 8012720:	4b08      	ldr	r3, [pc, #32]	; (8012744 <bkp_data_read+0x2c>)
 8012722:	4403      	add	r3, r0
 8012724:	009b      	lsls	r3, r3, #2
 8012726:	8818      	ldrh	r0, [r3, #0]
 8012728:	b280      	uxth	r0, r0
 801272a:	4770      	bx	lr
 801272c:	1e43      	subs	r3, r0, #1
 801272e:	2b09      	cmp	r3, #9
 8012730:	d806      	bhi.n	8012740 <bkp_data_read+0x28>
 8012732:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012736:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 801273a:	0080      	lsls	r0, r0, #2
 801273c:	8800      	ldrh	r0, [r0, #0]
 801273e:	e7f3      	b.n	8012728 <bkp_data_read+0x10>
 8012740:	2000      	movs	r0, #0
 8012742:	4770      	bx	lr
 8012744:	10001b05 	andne	r1, r0, r5, lsl #22

08012748 <enet_delay>:
 8012748:	2300      	movs	r3, #0
 801274a:	b082      	sub	sp, #8
 801274c:	9301      	str	r3, [sp, #4]
 801274e:	9001      	str	r0, [sp, #4]
 8012750:	9b01      	ldr	r3, [sp, #4]
 8012752:	b90b      	cbnz	r3, 8012758 <enet_delay+0x10>
 8012754:	b002      	add	sp, #8
 8012756:	4770      	bx	lr
 8012758:	9b01      	ldr	r3, [sp, #4]
 801275a:	3b01      	subs	r3, #1
 801275c:	9301      	str	r3, [sp, #4]
 801275e:	e7f7      	b.n	8012750 <enet_delay+0x8>

08012760 <enet_software_reset>:
 8012760:	4b07      	ldr	r3, [pc, #28]	; (8012780 <enet_software_reset+0x20>)
 8012762:	681a      	ldr	r2, [r3, #0]
 8012764:	f042 0201 	orr.w	r2, r2, #1
 8012768:	601a      	str	r2, [r3, #0]
 801276a:	4a06      	ldr	r2, [pc, #24]	; (8012784 <enet_software_reset+0x24>)
 801276c:	6819      	ldr	r1, [r3, #0]
 801276e:	07c9      	lsls	r1, r1, #31
 8012770:	d501      	bpl.n	8012776 <enet_software_reset+0x16>
 8012772:	3a01      	subs	r2, #1
 8012774:	d1fa      	bne.n	801276c <enet_software_reset+0xc>
 8012776:	6818      	ldr	r0, [r3, #0]
 8012778:	43c0      	mvns	r0, r0
 801277a:	f000 0001 	and.w	r0, r0, #1
 801277e:	4770      	bx	lr
 8012780:	40029000 	andmi	r9, r2, r0
 8012784:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012788 <enet_descriptors_chain_init>:
 8012788:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 801278c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801278e:	4a19      	ldr	r2, [pc, #100]	; (80127f4 <enet_descriptors_chain_init+0x6c>)
 8012790:	d125      	bne.n	80127de <enet_descriptors_chain_init+0x56>
 8012792:	2500      	movs	r5, #0
 8012794:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8012798:	2002      	movs	r0, #2
 801279a:	4b17      	ldr	r3, [pc, #92]	; (80127f8 <enet_descriptors_chain_init+0x70>)
 801279c:	4c17      	ldr	r4, [pc, #92]	; (80127fc <enet_descriptors_chain_init+0x74>)
 801279e:	6113      	str	r3, [r2, #16]
 80127a0:	4a17      	ldr	r2, [pc, #92]	; (8012800 <enet_descriptors_chain_init+0x78>)
 80127a2:	6013      	str	r3, [r2, #0]
 80127a4:	2200      	movs	r2, #0
 80127a6:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80127aa:	4916      	ldr	r1, [pc, #88]	; (8012804 <enet_descriptors_chain_init+0x7c>)
 80127ac:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80127b0:	600a      	str	r2, [r1, #0]
 80127b2:	4915      	ldr	r1, [pc, #84]	; (8012808 <enet_descriptors_chain_init+0x80>)
 80127b4:	600a      	str	r2, [r1, #0]
 80127b6:	f103 0110 	add.w	r1, r3, #16
 80127ba:	fb0e 4702 	mla	r7, lr, r2, r4
 80127be:	f841 7c08 	str.w	r7, [r1, #-8]
 80127c2:	4594      	cmp	ip, r2
 80127c4:	bf94      	ite	ls
 80127c6:	461f      	movls	r7, r3
 80127c8:	460f      	movhi	r7, r1
 80127ca:	3201      	adds	r2, #1
 80127cc:	4290      	cmp	r0, r2
 80127ce:	e941 6504 	strd	r6, r5, [r1, #-16]
 80127d2:	f841 7c04 	str.w	r7, [r1, #-4]
 80127d6:	f101 0110 	add.w	r1, r1, #16
 80127da:	d1ee      	bne.n	80127ba <enet_descriptors_chain_init+0x32>
 80127dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127de:	4b0b      	ldr	r3, [pc, #44]	; (801280c <enet_descriptors_chain_init+0x84>)
 80127e0:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80127e4:	60d3      	str	r3, [r2, #12]
 80127e6:	4a0a      	ldr	r2, [pc, #40]	; (8012810 <enet_descriptors_chain_init+0x88>)
 80127e8:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80127ec:	2008      	movs	r0, #8
 80127ee:	4c09      	ldr	r4, [pc, #36]	; (8012814 <enet_descriptors_chain_init+0x8c>)
 80127f0:	6013      	str	r3, [r2, #0]
 80127f2:	e7d7      	b.n	80127a4 <enet_descriptors_chain_init+0x1c>
 80127f4:	40029000 	andmi	r9, r2, r0
 80127f8:	2000eafc 	strdcs	lr, [r0], -ip
 80127fc:	2000df14 	andcs	sp, r0, r4, lsl pc
 8012800:	2000aeb4 			; <UNDEFINED> instruction: 0x2000aeb4
 8012804:	2000aea8 	andcs	sl, r0, r8, lsr #29
 8012808:	2000aeac 	andcs	sl, r0, ip, lsr #29
 801280c:	2000de94 	mulcs	r0, r4, lr
 8012810:	2000aeb0 			; <UNDEFINED> instruction: 0x2000aeb0
 8012814:	2000aef4 	strdcs	sl, [r0], -r4

08012818 <enet_frame_receive>:
 8012818:	4a1d      	ldr	r2, [pc, #116]	; (8012890 <enet_frame_receive+0x78>)
 801281a:	b510      	push	{r4, lr}
 801281c:	6813      	ldr	r3, [r2, #0]
 801281e:	681b      	ldr	r3, [r3, #0]
 8012820:	2b00      	cmp	r3, #0
 8012822:	db33      	blt.n	801288c <enet_frame_receive+0x74>
 8012824:	b970      	cbnz	r0, 8012844 <enet_frame_receive+0x2c>
 8012826:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801282a:	6813      	ldr	r3, [r2, #0]
 801282c:	6019      	str	r1, [r3, #0]
 801282e:	4919      	ldr	r1, [pc, #100]	; (8012894 <enet_frame_receive+0x7c>)
 8012830:	6948      	ldr	r0, [r1, #20]
 8012832:	0604      	lsls	r4, r0, #24
 8012834:	d419      	bmi.n	801286a <enet_frame_receive+0x52>
 8012836:	6859      	ldr	r1, [r3, #4]
 8012838:	0448      	lsls	r0, r1, #17
 801283a:	d51b      	bpl.n	8012874 <enet_frame_receive+0x5c>
 801283c:	68db      	ldr	r3, [r3, #12]
 801283e:	2001      	movs	r0, #1
 8012840:	6013      	str	r3, [r2, #0]
 8012842:	bd10      	pop	{r4, pc}
 8012844:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8012848:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 801284c:	d11e      	bne.n	801288c <enet_frame_receive+0x74>
 801284e:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8012852:	3b04      	subs	r3, #4
 8012854:	428b      	cmp	r3, r1
 8012856:	d819      	bhi.n	801288c <enet_frame_receive+0x74>
 8012858:	2100      	movs	r1, #0
 801285a:	4299      	cmp	r1, r3
 801285c:	6814      	ldr	r4, [r2, #0]
 801285e:	d2e2      	bcs.n	8012826 <enet_frame_receive+0xe>
 8012860:	68a4      	ldr	r4, [r4, #8]
 8012862:	5d0c      	ldrb	r4, [r1, r4]
 8012864:	5444      	strb	r4, [r0, r1]
 8012866:	3101      	adds	r1, #1
 8012868:	e7f7      	b.n	801285a <enet_frame_receive+0x42>
 801286a:	2080      	movs	r0, #128	; 0x80
 801286c:	6148      	str	r0, [r1, #20]
 801286e:	2000      	movs	r0, #0
 8012870:	6088      	str	r0, [r1, #8]
 8012872:	e7e0      	b.n	8012836 <enet_frame_receive+0x1e>
 8012874:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8012878:	4906      	ldr	r1, [pc, #24]	; (8012894 <enet_frame_receive+0x7c>)
 801287a:	bf05      	ittet	eq
 801287c:	3310      	addeq	r3, #16
 801287e:	6809      	ldreq	r1, [r1, #0]
 8012880:	68cb      	ldrne	r3, [r1, #12]
 8012882:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012886:	bf08      	it	eq
 8012888:	185b      	addeq	r3, r3, r1
 801288a:	e7d8      	b.n	801283e <enet_frame_receive+0x26>
 801288c:	2000      	movs	r0, #0
 801288e:	e7d8      	b.n	8012842 <enet_frame_receive+0x2a>
 8012890:	2000aeb0 			; <UNDEFINED> instruction: 0x2000aeb0
 8012894:	40029000 	andmi	r9, r2, r0

08012898 <enet_frame_transmit>:
 8012898:	4a1e      	ldr	r2, [pc, #120]	; (8012914 <enet_frame_transmit+0x7c>)
 801289a:	b530      	push	{r4, r5, lr}
 801289c:	6813      	ldr	r3, [r2, #0]
 801289e:	681b      	ldr	r3, [r3, #0]
 80128a0:	2b00      	cmp	r3, #0
 80128a2:	db34      	blt.n	801290e <enet_frame_transmit+0x76>
 80128a4:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80128a8:	4299      	cmp	r1, r3
 80128aa:	d830      	bhi.n	801290e <enet_frame_transmit+0x76>
 80128ac:	b9e8      	cbnz	r0, 80128ea <enet_frame_transmit+0x52>
 80128ae:	6813      	ldr	r3, [r2, #0]
 80128b0:	4819      	ldr	r0, [pc, #100]	; (8012918 <enet_frame_transmit+0x80>)
 80128b2:	6059      	str	r1, [r3, #4]
 80128b4:	6819      	ldr	r1, [r3, #0]
 80128b6:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80128ba:	6019      	str	r1, [r3, #0]
 80128bc:	6941      	ldr	r1, [r0, #20]
 80128be:	6944      	ldr	r4, [r0, #20]
 80128c0:	f001 0104 	and.w	r1, r1, #4
 80128c4:	f004 0420 	and.w	r4, r4, #32
 80128c8:	4321      	orrs	r1, r4
 80128ca:	d110      	bne.n	80128ee <enet_frame_transmit+0x56>
 80128cc:	6819      	ldr	r1, [r3, #0]
 80128ce:	02c8      	lsls	r0, r1, #11
 80128d0:	d511      	bpl.n	80128f6 <enet_frame_transmit+0x5e>
 80128d2:	68db      	ldr	r3, [r3, #12]
 80128d4:	2001      	movs	r0, #1
 80128d6:	6013      	str	r3, [r2, #0]
 80128d8:	bd30      	pop	{r4, r5, pc}
 80128da:	5cc5      	ldrb	r5, [r0, r3]
 80128dc:	68a4      	ldr	r4, [r4, #8]
 80128de:	551d      	strb	r5, [r3, r4]
 80128e0:	3301      	adds	r3, #1
 80128e2:	428b      	cmp	r3, r1
 80128e4:	6814      	ldr	r4, [r2, #0]
 80128e6:	d1f8      	bne.n	80128da <enet_frame_transmit+0x42>
 80128e8:	e7e1      	b.n	80128ae <enet_frame_transmit+0x16>
 80128ea:	2300      	movs	r3, #0
 80128ec:	e7f9      	b.n	80128e2 <enet_frame_transmit+0x4a>
 80128ee:	6141      	str	r1, [r0, #20]
 80128f0:	2100      	movs	r1, #0
 80128f2:	6041      	str	r1, [r0, #4]
 80128f4:	e7ea      	b.n	80128cc <enet_frame_transmit+0x34>
 80128f6:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80128fa:	4907      	ldr	r1, [pc, #28]	; (8012918 <enet_frame_transmit+0x80>)
 80128fc:	bf05      	ittet	eq
 80128fe:	3310      	addeq	r3, #16
 8012900:	6809      	ldreq	r1, [r1, #0]
 8012902:	690b      	ldrne	r3, [r1, #16]
 8012904:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012908:	bf08      	it	eq
 801290a:	185b      	addeq	r3, r3, r1
 801290c:	e7e2      	b.n	80128d4 <enet_frame_transmit+0x3c>
 801290e:	2000      	movs	r0, #0
 8012910:	e7e2      	b.n	80128d8 <enet_frame_transmit+0x40>
 8012912:	bf00      	nop
 8012914:	2000aeb4 			; <UNDEFINED> instruction: 0x2000aeb4
 8012918:	40029000 	andmi	r9, r2, r0

0801291c <enet_transmit_checksum_config>:
 801291c:	6803      	ldr	r3, [r0, #0]
 801291e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8012922:	430b      	orrs	r3, r1
 8012924:	6003      	str	r3, [r0, #0]
 8012926:	4770      	bx	lr

08012928 <enet_mac_address_set>:
 8012928:	888a      	ldrh	r2, [r1, #4]
 801292a:	4b03      	ldr	r3, [pc, #12]	; (8012938 <enet_mac_address_set+0x10>)
 801292c:	50c2      	str	r2, [r0, r3]
 801292e:	680a      	ldr	r2, [r1, #0]
 8012930:	3304      	adds	r3, #4
 8012932:	50c2      	str	r2, [r0, r3]
 8012934:	4770      	bx	lr
 8012936:	bf00      	nop
 8012938:	40028040 	andmi	r8, r2, r0, asr #32

0801293c <enet_rx_enable>:
 801293c:	4a05      	ldr	r2, [pc, #20]	; (8012954 <enet_rx_enable+0x18>)
 801293e:	6813      	ldr	r3, [r2, #0]
 8012940:	f043 0304 	orr.w	r3, r3, #4
 8012944:	6013      	str	r3, [r2, #0]
 8012946:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801294a:	6993      	ldr	r3, [r2, #24]
 801294c:	f043 0302 	orr.w	r3, r3, #2
 8012950:	6193      	str	r3, [r2, #24]
 8012952:	4770      	bx	lr
 8012954:	40028000 	andmi	r8, r2, r0

08012958 <enet_phy_write_read>:
 8012958:	b530      	push	{r4, r5, lr}
 801295a:	4604      	mov	r4, r0
 801295c:	4d13      	ldr	r5, [pc, #76]	; (80129ac <enet_phy_write_read+0x54>)
 801295e:	0192      	lsls	r2, r2, #6
 8012960:	6928      	ldr	r0, [r5, #16]
 8012962:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8012966:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801296a:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801296e:	4302      	orrs	r2, r0
 8012970:	02c9      	lsls	r1, r1, #11
 8012972:	b289      	uxth	r1, r1
 8012974:	2c02      	cmp	r4, #2
 8012976:	ea42 0204 	orr.w	r2, r2, r4
 801297a:	ea42 0201 	orr.w	r2, r2, r1
 801297e:	bf08      	it	eq
 8012980:	8819      	ldrheq	r1, [r3, #0]
 8012982:	f042 0201 	orr.w	r2, r2, #1
 8012986:	bf08      	it	eq
 8012988:	6169      	streq	r1, [r5, #20]
 801298a:	612a      	str	r2, [r5, #16]
 801298c:	4907      	ldr	r1, [pc, #28]	; (80129ac <enet_phy_write_read+0x54>)
 801298e:	4a08      	ldr	r2, [pc, #32]	; (80129b0 <enet_phy_write_read+0x58>)
 8012990:	6908      	ldr	r0, [r1, #16]
 8012992:	07c0      	lsls	r0, r0, #31
 8012994:	d501      	bpl.n	801299a <enet_phy_write_read+0x42>
 8012996:	3a01      	subs	r2, #1
 8012998:	d1fa      	bne.n	8012990 <enet_phy_write_read+0x38>
 801299a:	690a      	ldr	r2, [r1, #16]
 801299c:	43d2      	mvns	r2, r2
 801299e:	f002 0001 	and.w	r0, r2, #1
 80129a2:	b90c      	cbnz	r4, 80129a8 <enet_phy_write_read+0x50>
 80129a4:	694a      	ldr	r2, [r1, #20]
 80129a6:	801a      	strh	r2, [r3, #0]
 80129a8:	bd30      	pop	{r4, r5, pc}
 80129aa:	bf00      	nop
 80129ac:	40028000 	andmi	r8, r2, r0
 80129b0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080129b4 <enet_phy_config>:
 80129b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80129b6:	4d22      	ldr	r5, [pc, #136]	; (8012a40 <enet_phy_config+0x8c>)
 80129b8:	2001      	movs	r0, #1
 80129ba:	692c      	ldr	r4, [r5, #16]
 80129bc:	f000 fc70 	bl	80132a0 <rcu_clock_freq_get>
 80129c0:	4b20      	ldr	r3, [pc, #128]	; (8012a44 <enet_phy_config+0x90>)
 80129c2:	4a21      	ldr	r2, [pc, #132]	; (8012a48 <enet_phy_config+0x94>)
 80129c4:	4403      	add	r3, r0
 80129c6:	4293      	cmp	r3, r2
 80129c8:	f024 041c 	bic.w	r4, r4, #28
 80129cc:	d21f      	bcs.n	8012a0e <enet_phy_config+0x5a>
 80129ce:	f044 0408 	orr.w	r4, r4, #8
 80129d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80129d6:	612c      	str	r4, [r5, #16]
 80129d8:	2200      	movs	r2, #0
 80129da:	f8ad 3006 	strh.w	r3, [sp, #6]
 80129de:	2101      	movs	r1, #1
 80129e0:	2002      	movs	r0, #2
 80129e2:	f10d 0306 	add.w	r3, sp, #6
 80129e6:	f7ff ffb7 	bl	8012958 <enet_phy_write_read>
 80129ea:	b310      	cbz	r0, 8012a32 <enet_phy_config+0x7e>
 80129ec:	2200      	movs	r2, #0
 80129ee:	4817      	ldr	r0, [pc, #92]	; (8012a4c <enet_phy_config+0x98>)
 80129f0:	f7ff feaa 	bl	8012748 <enet_delay>
 80129f4:	2101      	movs	r1, #1
 80129f6:	4610      	mov	r0, r2
 80129f8:	f10d 0306 	add.w	r3, sp, #6
 80129fc:	f7ff ffac 	bl	8012958 <enet_phy_write_read>
 8012a00:	b1b8      	cbz	r0, 8012a32 <enet_phy_config+0x7e>
 8012a02:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012a06:	43c0      	mvns	r0, r0
 8012a08:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012a0c:	e012      	b.n	8012a34 <enet_phy_config+0x80>
 8012a0e:	4b10      	ldr	r3, [pc, #64]	; (8012a50 <enet_phy_config+0x9c>)
 8012a10:	4a10      	ldr	r2, [pc, #64]	; (8012a54 <enet_phy_config+0xa0>)
 8012a12:	4403      	add	r3, r0
 8012a14:	4293      	cmp	r3, r2
 8012a16:	d802      	bhi.n	8012a1e <enet_phy_config+0x6a>
 8012a18:	f044 040c 	orr.w	r4, r4, #12
 8012a1c:	e7d9      	b.n	80129d2 <enet_phy_config+0x1e>
 8012a1e:	4b0e      	ldr	r3, [pc, #56]	; (8012a58 <enet_phy_config+0xa4>)
 8012a20:	4a0e      	ldr	r2, [pc, #56]	; (8012a5c <enet_phy_config+0xa8>)
 8012a22:	4403      	add	r3, r0
 8012a24:	4293      	cmp	r3, r2
 8012a26:	d9d4      	bls.n	80129d2 <enet_phy_config+0x1e>
 8012a28:	4b0d      	ldr	r3, [pc, #52]	; (8012a60 <enet_phy_config+0xac>)
 8012a2a:	4a0e      	ldr	r2, [pc, #56]	; (8012a64 <enet_phy_config+0xb0>)
 8012a2c:	4403      	add	r3, r0
 8012a2e:	4293      	cmp	r3, r2
 8012a30:	d902      	bls.n	8012a38 <enet_phy_config+0x84>
 8012a32:	2000      	movs	r0, #0
 8012a34:	b003      	add	sp, #12
 8012a36:	bd30      	pop	{r4, r5, pc}
 8012a38:	f044 0404 	orr.w	r4, r4, #4
 8012a3c:	e7c9      	b.n	80129d2 <enet_phy_config+0x1e>
 8012a3e:	bf00      	nop
 8012a40:	40028000 	andmi	r8, r2, r0
 8012a44:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8012a48:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8012a4c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012a50:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8012a54:	017d783f 	cmneq	sp, pc, lsr r8
 8012a58:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8012a5c:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8012a60:	faa2b580 	blx	68c0068 <__stack_size+0x68be068>
 8012a64:	0112a880 	tsteq	r2, r0, lsl #17

08012a68 <enet_init>:
 8012a68:	2300      	movs	r3, #0
 8012a6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a6c:	4604      	mov	r4, r0
 8012a6e:	460d      	mov	r5, r1
 8012a70:	4616      	mov	r6, r2
 8012a72:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012a76:	f7ff ff9d 	bl	80129b4 <enet_phy_config>
 8012a7a:	2800      	cmp	r0, #0
 8012a7c:	d037      	beq.n	8012aee <enet_init+0x86>
 8012a7e:	4b3b      	ldr	r3, [pc, #236]	; (8012b6c <enet_init+0x104>)
 8012a80:	4a3b      	ldr	r2, [pc, #236]	; (8012b70 <enet_init+0x108>)
 8012a82:	6819      	ldr	r1, [r3, #0]
 8012a84:	2c01      	cmp	r4, #1
 8012a86:	ea02 0201 	and.w	r2, r2, r1
 8012a8a:	601a      	str	r2, [r3, #0]
 8012a8c:	f04f 0200 	mov.w	r2, #0
 8012a90:	605a      	str	r2, [r3, #4]
 8012a92:	609a      	str	r2, [r3, #8]
 8012a94:	60da      	str	r2, [r3, #12]
 8012a96:	6999      	ldr	r1, [r3, #24]
 8012a98:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8012a9c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8012aa0:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8012aa4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8012aa8:	6199      	str	r1, [r3, #24]
 8012aaa:	4932      	ldr	r1, [pc, #200]	; (8012b74 <enet_init+0x10c>)
 8012aac:	61da      	str	r2, [r3, #28]
 8012aae:	6988      	ldr	r0, [r1, #24]
 8012ab0:	4b31      	ldr	r3, [pc, #196]	; (8012b78 <enet_init+0x110>)
 8012ab2:	ea03 0300 	and.w	r3, r3, r0
 8012ab6:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8012aba:	618b      	str	r3, [r1, #24]
 8012abc:	680b      	ldr	r3, [r1, #0]
 8012abe:	4b2f      	ldr	r3, [pc, #188]	; (8012b7c <enet_init+0x114>)
 8012ac0:	600b      	str	r3, [r1, #0]
 8012ac2:	d01e      	beq.n	8012b02 <enet_init+0x9a>
 8012ac4:	08e3      	lsrs	r3, r4, #3
 8012ac6:	0861      	lsrs	r1, r4, #1
 8012ac8:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8012acc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012ad0:	430b      	orrs	r3, r1
 8012ad2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012ad6:	2101      	movs	r1, #1
 8012ad8:	2002      	movs	r0, #2
 8012ada:	f10d 0306 	add.w	r3, sp, #6
 8012ade:	f7ff ff3b 	bl	8012958 <enet_phy_write_read>
 8012ae2:	b158      	cbz	r0, 8012afc <enet_init+0x94>
 8012ae4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8012ae8:	f7ff fe2e 	bl	8012748 <enet_delay>
 8012aec:	e05d      	b.n	8012baa <enet_init+0x142>
 8012aee:	4824      	ldr	r0, [pc, #144]	; (8012b80 <enet_init+0x118>)
 8012af0:	f7ff fe2a 	bl	8012748 <enet_delay>
 8012af4:	f7ff ff5e 	bl	80129b4 <enet_phy_config>
 8012af8:	2800      	cmp	r0, #0
 8012afa:	d1c0      	bne.n	8012a7e <enet_init+0x16>
 8012afc:	2000      	movs	r0, #0
 8012afe:	b003      	add	sp, #12
 8012b00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b02:	4614      	mov	r4, r2
 8012b04:	4f1f      	ldr	r7, [pc, #124]	; (8012b84 <enet_init+0x11c>)
 8012b06:	2201      	movs	r2, #1
 8012b08:	2000      	movs	r0, #0
 8012b0a:	4611      	mov	r1, r2
 8012b0c:	f10d 0306 	add.w	r3, sp, #6
 8012b10:	f7ff ff22 	bl	8012958 <enet_phy_write_read>
 8012b14:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012b18:	3401      	adds	r4, #1
 8012b1a:	f002 0204 	and.w	r2, r2, #4
 8012b1e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012b22:	b912      	cbnz	r2, 8012b2a <enet_init+0xc2>
 8012b24:	42bc      	cmp	r4, r7
 8012b26:	d1ee      	bne.n	8012b06 <enet_init+0x9e>
 8012b28:	e7e8      	b.n	8012afc <enet_init+0x94>
 8012b2a:	42bc      	cmp	r4, r7
 8012b2c:	d0e6      	beq.n	8012afc <enet_init+0x94>
 8012b2e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012b32:	2101      	movs	r1, #1
 8012b34:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012b38:	2002      	movs	r0, #2
 8012b3a:	2200      	movs	r2, #0
 8012b3c:	f7ff ff0c 	bl	8012958 <enet_phy_write_read>
 8012b40:	2800      	cmp	r0, #0
 8012b42:	d0db      	beq.n	8012afc <enet_init+0x94>
 8012b44:	2400      	movs	r4, #0
 8012b46:	4f0f      	ldr	r7, [pc, #60]	; (8012b84 <enet_init+0x11c>)
 8012b48:	2201      	movs	r2, #1
 8012b4a:	2000      	movs	r0, #0
 8012b4c:	4611      	mov	r1, r2
 8012b4e:	f10d 0306 	add.w	r3, sp, #6
 8012b52:	f7ff ff01 	bl	8012958 <enet_phy_write_read>
 8012b56:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012b5a:	3401      	adds	r4, #1
 8012b5c:	f002 0220 	and.w	r2, r2, #32
 8012b60:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012b64:	b982      	cbnz	r2, 8012b88 <enet_init+0x120>
 8012b66:	42bc      	cmp	r4, r7
 8012b68:	d1ee      	bne.n	8012b48 <enet_init+0xe0>
 8012b6a:	e7c7      	b.n	8012afc <enet_init+0x94>
 8012b6c:	40028000 	andmi	r8, r2, r0
 8012b70:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8012b74:	40029000 	andmi	r9, r2, r0
 8012b78:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8012b7c:	02c16000 	sbceq	r6, r1, #0
 8012b80:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8012b84:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012b88:	42bc      	cmp	r4, r7
 8012b8a:	d0b7      	beq.n	8012afc <enet_init+0x94>
 8012b8c:	2101      	movs	r1, #1
 8012b8e:	2210      	movs	r2, #16
 8012b90:	2000      	movs	r0, #0
 8012b92:	f7ff fee1 	bl	8012958 <enet_phy_write_read>
 8012b96:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012b9a:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8012b9e:	0799      	lsls	r1, r3, #30
 8012ba0:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8012ba4:	d401      	bmi.n	8012baa <enet_init+0x142>
 8012ba6:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8012baa:	4b63      	ldr	r3, [pc, #396]	; (8012d38 <enet_init+0x2d0>)
 8012bac:	681a      	ldr	r2, [r3, #0]
 8012bae:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8012bb2:	4314      	orrs	r4, r2
 8012bb4:	056a      	lsls	r2, r5, #21
 8012bb6:	601c      	str	r4, [r3, #0]
 8012bb8:	d50b      	bpl.n	8012bd2 <enet_init+0x16a>
 8012bba:	681a      	ldr	r2, [r3, #0]
 8012bbc:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8012bc0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012bc4:	601a      	str	r2, [r3, #0]
 8012bc6:	4a5d      	ldr	r2, [pc, #372]	; (8012d3c <enet_init+0x2d4>)
 8012bc8:	6993      	ldr	r3, [r2, #24]
 8012bca:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8012bce:	431d      	orrs	r5, r3
 8012bd0:	6195      	str	r5, [r2, #24]
 8012bd2:	4959      	ldr	r1, [pc, #356]	; (8012d38 <enet_init+0x2d0>)
 8012bd4:	684b      	ldr	r3, [r1, #4]
 8012bd6:	431e      	orrs	r6, r3
 8012bd8:	4b59      	ldr	r3, [pc, #356]	; (8012d40 <enet_init+0x2d8>)
 8012bda:	604e      	str	r6, [r1, #4]
 8012bdc:	681a      	ldr	r2, [r3, #0]
 8012bde:	07d7      	lsls	r7, r2, #31
 8012be0:	d510      	bpl.n	8012c04 <enet_init+0x19c>
 8012be2:	685a      	ldr	r2, [r3, #4]
 8012be4:	680c      	ldr	r4, [r1, #0]
 8012be6:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8012bea:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8012bee:	4320      	orrs	r0, r4
 8012bf0:	6008      	str	r0, [r1, #0]
 8012bf2:	4852      	ldr	r0, [pc, #328]	; (8012d3c <enet_init+0x2d4>)
 8012bf4:	0892      	lsrs	r2, r2, #2
 8012bf6:	6981      	ldr	r1, [r0, #24]
 8012bf8:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8012bfc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8012c00:	430a      	orrs	r2, r1
 8012c02:	6182      	str	r2, [r0, #24]
 8012c04:	681a      	ldr	r2, [r3, #0]
 8012c06:	0796      	lsls	r6, r2, #30
 8012c08:	d508      	bpl.n	8012c1c <enet_init+0x1b4>
 8012c0a:	494c      	ldr	r1, [pc, #304]	; (8012d3c <enet_init+0x2d4>)
 8012c0c:	6898      	ldr	r0, [r3, #8]
 8012c0e:	680a      	ldr	r2, [r1, #0]
 8012c10:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8012c14:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012c18:	4302      	orrs	r2, r0
 8012c1a:	600a      	str	r2, [r1, #0]
 8012c1c:	681a      	ldr	r2, [r3, #0]
 8012c1e:	0755      	lsls	r5, r2, #29
 8012c20:	d508      	bpl.n	8012c34 <enet_init+0x1cc>
 8012c22:	4946      	ldr	r1, [pc, #280]	; (8012d3c <enet_init+0x2d4>)
 8012c24:	68d8      	ldr	r0, [r3, #12]
 8012c26:	680a      	ldr	r2, [r1, #0]
 8012c28:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8012c2c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8012c30:	4302      	orrs	r2, r0
 8012c32:	600a      	str	r2, [r1, #0]
 8012c34:	681a      	ldr	r2, [r3, #0]
 8012c36:	0714      	lsls	r4, r2, #28
 8012c38:	d508      	bpl.n	8012c4c <enet_init+0x1e4>
 8012c3a:	4940      	ldr	r1, [pc, #256]	; (8012d3c <enet_init+0x2d4>)
 8012c3c:	6918      	ldr	r0, [r3, #16]
 8012c3e:	680a      	ldr	r2, [r1, #0]
 8012c40:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012c44:	f022 0202 	bic.w	r2, r2, #2
 8012c48:	4302      	orrs	r2, r0
 8012c4a:	600a      	str	r2, [r1, #0]
 8012c4c:	681a      	ldr	r2, [r3, #0]
 8012c4e:	06d0      	lsls	r0, r2, #27
 8012c50:	d506      	bpl.n	8012c60 <enet_init+0x1f8>
 8012c52:	493a      	ldr	r1, [pc, #232]	; (8012d3c <enet_init+0x2d4>)
 8012c54:	4a3b      	ldr	r2, [pc, #236]	; (8012d44 <enet_init+0x2dc>)
 8012c56:	6988      	ldr	r0, [r1, #24]
 8012c58:	4002      	ands	r2, r0
 8012c5a:	6958      	ldr	r0, [r3, #20]
 8012c5c:	4302      	orrs	r2, r0
 8012c5e:	618a      	str	r2, [r1, #24]
 8012c60:	681a      	ldr	r2, [r3, #0]
 8012c62:	0691      	lsls	r1, r2, #26
 8012c64:	d508      	bpl.n	8012c78 <enet_init+0x210>
 8012c66:	4935      	ldr	r1, [pc, #212]	; (8012d3c <enet_init+0x2d4>)
 8012c68:	6998      	ldr	r0, [r3, #24]
 8012c6a:	698a      	ldr	r2, [r1, #24]
 8012c6c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8012c70:	f022 0204 	bic.w	r2, r2, #4
 8012c74:	4302      	orrs	r2, r0
 8012c76:	618a      	str	r2, [r1, #24]
 8012c78:	681a      	ldr	r2, [r3, #0]
 8012c7a:	0652      	lsls	r2, r2, #25
 8012c7c:	d506      	bpl.n	8012c8c <enet_init+0x224>
 8012c7e:	492e      	ldr	r1, [pc, #184]	; (8012d38 <enet_init+0x2d0>)
 8012c80:	69d8      	ldr	r0, [r3, #28]
 8012c82:	69ca      	ldr	r2, [r1, #28]
 8012c84:	0c52      	lsrs	r2, r2, #17
 8012c86:	0452      	lsls	r2, r2, #17
 8012c88:	4302      	orrs	r2, r0
 8012c8a:	61ca      	str	r2, [r1, #28]
 8012c8c:	681a      	ldr	r2, [r3, #0]
 8012c8e:	0617      	lsls	r7, r2, #24
 8012c90:	d517      	bpl.n	8012cc2 <enet_init+0x25a>
 8012c92:	4c29      	ldr	r4, [pc, #164]	; (8012d38 <enet_init+0x2d0>)
 8012c94:	6a1a      	ldr	r2, [r3, #32]
 8012c96:	69a0      	ldr	r0, [r4, #24]
 8012c98:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8012c9c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8012ca0:	0400      	lsls	r0, r0, #16
 8012ca2:	0c00      	lsrs	r0, r0, #16
 8012ca4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8012ca8:	4301      	orrs	r1, r0
 8012caa:	4824      	ldr	r0, [pc, #144]	; (8012d3c <enet_init+0x2d4>)
 8012cac:	61a1      	str	r1, [r4, #24]
 8012cae:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8012cb2:	0a12      	lsrs	r2, r2, #8
 8012cb4:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8012cb8:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8012cbc:	430a      	orrs	r2, r1
 8012cbe:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8012cc2:	681a      	ldr	r2, [r3, #0]
 8012cc4:	05d6      	lsls	r6, r2, #23
 8012cc6:	bf42      	ittt	mi
 8012cc8:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8012cca:	4a1b      	ldrmi	r2, [pc, #108]	; (8012d38 <enet_init+0x2d0>)
 8012ccc:	6091      	strmi	r1, [r2, #8]
 8012cce:	681a      	ldr	r2, [r3, #0]
 8012cd0:	0595      	lsls	r5, r2, #22
 8012cd2:	bf42      	ittt	mi
 8012cd4:	4a18      	ldrmi	r2, [pc, #96]	; (8012d38 <enet_init+0x2d0>)
 8012cd6:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8012cd8:	60d1      	strmi	r1, [r2, #12]
 8012cda:	681a      	ldr	r2, [r3, #0]
 8012cdc:	0554      	lsls	r4, r2, #21
 8012cde:	d508      	bpl.n	8012cf2 <enet_init+0x28a>
 8012ce0:	4915      	ldr	r1, [pc, #84]	; (8012d38 <enet_init+0x2d0>)
 8012ce2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8012ce4:	684a      	ldr	r2, [r1, #4]
 8012ce6:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8012cea:	f022 0206 	bic.w	r2, r2, #6
 8012cee:	4302      	orrs	r2, r0
 8012cf0:	604a      	str	r2, [r1, #4]
 8012cf2:	681a      	ldr	r2, [r3, #0]
 8012cf4:	0510      	lsls	r0, r2, #20
 8012cf6:	d508      	bpl.n	8012d0a <enet_init+0x2a2>
 8012cf8:	490f      	ldr	r1, [pc, #60]	; (8012d38 <enet_init+0x2d0>)
 8012cfa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8012cfc:	680a      	ldr	r2, [r1, #0]
 8012cfe:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8012d02:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8012d06:	4302      	orrs	r2, r0
 8012d08:	600a      	str	r2, [r1, #0]
 8012d0a:	681a      	ldr	r2, [r3, #0]
 8012d0c:	04d1      	lsls	r1, r2, #19
 8012d0e:	d506      	bpl.n	8012d1e <enet_init+0x2b6>
 8012d10:	4909      	ldr	r1, [pc, #36]	; (8012d38 <enet_init+0x2d0>)
 8012d12:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8012d14:	680a      	ldr	r2, [r1, #0]
 8012d16:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8012d1a:	4302      	orrs	r2, r0
 8012d1c:	600a      	str	r2, [r1, #0]
 8012d1e:	681a      	ldr	r2, [r3, #0]
 8012d20:	0492      	lsls	r2, r2, #18
 8012d22:	d506      	bpl.n	8012d32 <enet_init+0x2ca>
 8012d24:	4904      	ldr	r1, [pc, #16]	; (8012d38 <enet_init+0x2d0>)
 8012d26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d28:	680a      	ldr	r2, [r1, #0]
 8012d2a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8012d2e:	4313      	orrs	r3, r2
 8012d30:	600b      	str	r3, [r1, #0]
 8012d32:	2001      	movs	r0, #1
 8012d34:	e6e3      	b.n	8012afe <enet_init+0x96>
 8012d36:	bf00      	nop
 8012d38:	40028000 	andmi	r8, r2, r0
 8012d3c:	40029000 	andmi	r9, r2, r0
 8012d40:	2000aeb8 			; <UNDEFINED> instruction: 0x2000aeb8
 8012d44:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08012d48 <enet_txfifo_flush>:
 8012d48:	4b06      	ldr	r3, [pc, #24]	; (8012d64 <enet_txfifo_flush+0x1c>)
 8012d4a:	4807      	ldr	r0, [pc, #28]	; (8012d68 <enet_txfifo_flush+0x20>)
 8012d4c:	699a      	ldr	r2, [r3, #24]
 8012d4e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8012d52:	619a      	str	r2, [r3, #24]
 8012d54:	699a      	ldr	r2, [r3, #24]
 8012d56:	02d2      	lsls	r2, r2, #11
 8012d58:	d502      	bpl.n	8012d60 <enet_txfifo_flush+0x18>
 8012d5a:	3801      	subs	r0, #1
 8012d5c:	d1fa      	bne.n	8012d54 <enet_txfifo_flush+0xc>
 8012d5e:	4770      	bx	lr
 8012d60:	2001      	movs	r0, #1
 8012d62:	4770      	bx	lr
 8012d64:	40029000 	andmi	r9, r2, r0
 8012d68:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012d6c <enet_tx_enable>:
 8012d6c:	4a06      	ldr	r2, [pc, #24]	; (8012d88 <enet_tx_enable+0x1c>)
 8012d6e:	b508      	push	{r3, lr}
 8012d70:	6813      	ldr	r3, [r2, #0]
 8012d72:	f043 0308 	orr.w	r3, r3, #8
 8012d76:	6013      	str	r3, [r2, #0]
 8012d78:	f7ff ffe6 	bl	8012d48 <enet_txfifo_flush>
 8012d7c:	4a03      	ldr	r2, [pc, #12]	; (8012d8c <enet_tx_enable+0x20>)
 8012d7e:	6993      	ldr	r3, [r2, #24]
 8012d80:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012d84:	6193      	str	r3, [r2, #24]
 8012d86:	bd08      	pop	{r3, pc}
 8012d88:	40028000 	andmi	r8, r2, r0
 8012d8c:	40029000 	andmi	r9, r2, r0

08012d90 <enet_enable>:
 8012d90:	b508      	push	{r3, lr}
 8012d92:	f7ff ffeb 	bl	8012d6c <enet_tx_enable>
 8012d96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012d9a:	f7ff bdcf 	b.w	801293c <enet_rx_enable>

08012d9e <enet_desc_information_get>:
 8012d9e:	2905      	cmp	r1, #5
 8012da0:	d817      	bhi.n	8012dd2 <enet_desc_information_get+0x34>
 8012da2:	e8df f001 	tbb	[pc, r1]
 8012da6:	03091012 	movweq	r1, #36882	; 0x9012
 8012daa:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8012dae:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012db2:	4770      	bx	lr
 8012db4:	88c0      	ldrh	r0, [r0, #6]
 8012db6:	e7fa      	b.n	8012dae <enet_desc_information_get+0x10>
 8012db8:	8840      	ldrh	r0, [r0, #2]
 8012dba:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8012dbe:	2804      	cmp	r0, #4
 8012dc0:	d90a      	bls.n	8012dd8 <enet_desc_information_get+0x3a>
 8012dc2:	3804      	subs	r0, #4
 8012dc4:	4770      	bx	lr
 8012dc6:	6880      	ldr	r0, [r0, #8]
 8012dc8:	4770      	bx	lr
 8012dca:	6800      	ldr	r0, [r0, #0]
 8012dcc:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8012dd0:	4770      	bx	lr
 8012dd2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012dd6:	4770      	bx	lr
 8012dd8:	2000      	movs	r0, #0
 8012dda:	4770      	bx	lr

08012ddc <enet_rxframe_drop>:
 8012ddc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8012de0:	4814      	ldr	r0, [pc, #80]	; (8012e34 <enet_rxframe_drop+0x58>)
 8012de2:	b510      	push	{r4, lr}
 8012de4:	6802      	ldr	r2, [r0, #0]
 8012de6:	4914      	ldr	r1, [pc, #80]	; (8012e38 <enet_rxframe_drop+0x5c>)
 8012de8:	6854      	ldr	r4, [r2, #4]
 8012dea:	6013      	str	r3, [r2, #0]
 8012dec:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8012df0:	680b      	ldr	r3, [r1, #0]
 8012df2:	d009      	beq.n	8012e08 <enet_rxframe_drop+0x2c>
 8012df4:	b12b      	cbz	r3, 8012e02 <enet_rxframe_drop+0x26>
 8012df6:	68da      	ldr	r2, [r3, #12]
 8012df8:	6002      	str	r2, [r0, #0]
 8012dfa:	681a      	ldr	r2, [r3, #0]
 8012dfc:	b1ba      	cbz	r2, 8012e2e <enet_rxframe_drop+0x52>
 8012dfe:	600a      	str	r2, [r1, #0]
 8012e00:	bd10      	pop	{r4, pc}
 8012e02:	68d3      	ldr	r3, [r2, #12]
 8012e04:	6003      	str	r3, [r0, #0]
 8012e06:	e7fb      	b.n	8012e00 <enet_rxframe_drop+0x24>
 8012e08:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8012e0c:	4c0b      	ldr	r4, [pc, #44]	; (8012e3c <enet_rxframe_drop+0x60>)
 8012e0e:	d006      	beq.n	8012e1e <enet_rxframe_drop+0x42>
 8012e10:	68e2      	ldr	r2, [r4, #12]
 8012e12:	6002      	str	r2, [r0, #0]
 8012e14:	2b00      	cmp	r3, #0
 8012e16:	d0f3      	beq.n	8012e00 <enet_rxframe_drop+0x24>
 8012e18:	681b      	ldr	r3, [r3, #0]
 8012e1a:	600b      	str	r3, [r1, #0]
 8012e1c:	e7f0      	b.n	8012e00 <enet_rxframe_drop+0x24>
 8012e1e:	6824      	ldr	r4, [r4, #0]
 8012e20:	3210      	adds	r2, #16
 8012e22:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8012e26:	4422      	add	r2, r4
 8012e28:	6002      	str	r2, [r0, #0]
 8012e2a:	2b00      	cmp	r3, #0
 8012e2c:	d0e8      	beq.n	8012e00 <enet_rxframe_drop+0x24>
 8012e2e:	3310      	adds	r3, #16
 8012e30:	e7f3      	b.n	8012e1a <enet_rxframe_drop+0x3e>
 8012e32:	bf00      	nop
 8012e34:	2000aeb0 			; <UNDEFINED> instruction: 0x2000aeb0
 8012e38:	2000aea8 	andcs	sl, r0, r8, lsr #29
 8012e3c:	40029000 	andmi	r9, r2, r0

08012e40 <enet_rxframe_size_get>:
 8012e40:	b508      	push	{r3, lr}
 8012e42:	4b0c      	ldr	r3, [pc, #48]	; (8012e74 <enet_rxframe_size_get+0x34>)
 8012e44:	681b      	ldr	r3, [r3, #0]
 8012e46:	6818      	ldr	r0, [r3, #0]
 8012e48:	2800      	cmp	r0, #0
 8012e4a:	db10      	blt.n	8012e6e <enet_rxframe_size_get+0x2e>
 8012e4c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8012e50:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012e54:	d003      	beq.n	8012e5e <enet_rxframe_size_get+0x1e>
 8012e56:	f7ff ffc1 	bl	8012ddc <enet_rxframe_drop>
 8012e5a:	2001      	movs	r0, #1
 8012e5c:	bd08      	pop	{r3, pc}
 8012e5e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8012e62:	2b21      	cmp	r3, #33	; 0x21
 8012e64:	d0f7      	beq.n	8012e56 <enet_rxframe_size_get+0x16>
 8012e66:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8012e6a:	3804      	subs	r0, #4
 8012e6c:	e7f6      	b.n	8012e5c <enet_rxframe_size_get+0x1c>
 8012e6e:	2000      	movs	r0, #0
 8012e70:	e7f4      	b.n	8012e5c <enet_rxframe_size_get+0x1c>
 8012e72:	bf00      	nop
 8012e74:	2000aeb0 			; <UNDEFINED> instruction: 0x2000aeb0

08012e78 <enet_initpara_reset>:
 8012e78:	2200      	movs	r2, #0
 8012e7a:	4b08      	ldr	r3, [pc, #32]	; (8012e9c <enet_initpara_reset+0x24>)
 8012e7c:	e9c3 2200 	strd	r2, r2, [r3]
 8012e80:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8012e84:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8012e88:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8012e8c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8012e90:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8012e94:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8012e98:	639a      	str	r2, [r3, #56]	; 0x38
 8012e9a:	4770      	bx	lr
 8012e9c:	2000aeb8 			; <UNDEFINED> instruction: 0x2000aeb8

08012ea0 <enet_deinit>:
 8012ea0:	b508      	push	{r3, lr}
 8012ea2:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012ea6:	f000 f946 	bl	8013136 <rcu_periph_reset_enable>
 8012eaa:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012eae:	f000 f944 	bl	801313a <rcu_periph_reset_disable>
 8012eb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012eb6:	f7ff bfdf 	b.w	8012e78 <enet_initpara_reset>
	...

08012ebc <fmc_bank0_unlock>:
 8012ebc:	4b04      	ldr	r3, [pc, #16]	; (8012ed0 <fmc_bank0_unlock+0x14>)
 8012ebe:	691a      	ldr	r2, [r3, #16]
 8012ec0:	0612      	lsls	r2, r2, #24
 8012ec2:	bf41      	itttt	mi
 8012ec4:	4a03      	ldrmi	r2, [pc, #12]	; (8012ed4 <fmc_bank0_unlock+0x18>)
 8012ec6:	605a      	strmi	r2, [r3, #4]
 8012ec8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012ecc:	605a      	strmi	r2, [r3, #4]
 8012ece:	4770      	bx	lr
 8012ed0:	40022000 	andmi	r2, r2, r0
 8012ed4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012ed8 <fmc_bank1_unlock>:
 8012ed8:	4b04      	ldr	r3, [pc, #16]	; (8012eec <fmc_bank1_unlock+0x14>)
 8012eda:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012edc:	0612      	lsls	r2, r2, #24
 8012ede:	bf41      	itttt	mi
 8012ee0:	4a03      	ldrmi	r2, [pc, #12]	; (8012ef0 <fmc_bank1_unlock+0x18>)
 8012ee2:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012ee4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012ee8:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012eea:	4770      	bx	lr
 8012eec:	40022000 	andmi	r2, r2, r0
 8012ef0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012ef4 <fmc_bank0_lock>:
 8012ef4:	4a02      	ldr	r2, [pc, #8]	; (8012f00 <fmc_bank0_lock+0xc>)
 8012ef6:	6913      	ldr	r3, [r2, #16]
 8012ef8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012efc:	6113      	str	r3, [r2, #16]
 8012efe:	4770      	bx	lr
 8012f00:	40022000 	andmi	r2, r2, r0

08012f04 <fmc_bank1_lock>:
 8012f04:	4a02      	ldr	r2, [pc, #8]	; (8012f10 <fmc_bank1_lock+0xc>)
 8012f06:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8012f08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012f0c:	6513      	str	r3, [r2, #80]	; 0x50
 8012f0e:	4770      	bx	lr
 8012f10:	40022000 	andmi	r2, r2, r0

08012f14 <fmc_bank0_state_get>:
 8012f14:	4b07      	ldr	r3, [pc, #28]	; (8012f34 <fmc_bank0_state_get+0x20>)
 8012f16:	68da      	ldr	r2, [r3, #12]
 8012f18:	07d1      	lsls	r1, r2, #31
 8012f1a:	d407      	bmi.n	8012f2c <fmc_bank0_state_get+0x18>
 8012f1c:	68da      	ldr	r2, [r3, #12]
 8012f1e:	06d2      	lsls	r2, r2, #27
 8012f20:	d406      	bmi.n	8012f30 <fmc_bank0_state_get+0x1c>
 8012f22:	68d8      	ldr	r0, [r3, #12]
 8012f24:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012f28:	0040      	lsls	r0, r0, #1
 8012f2a:	4770      	bx	lr
 8012f2c:	2001      	movs	r0, #1
 8012f2e:	4770      	bx	lr
 8012f30:	2003      	movs	r0, #3
 8012f32:	4770      	bx	lr
 8012f34:	40022000 	andmi	r2, r2, r0

08012f38 <fmc_bank1_state_get>:
 8012f38:	4b07      	ldr	r3, [pc, #28]	; (8012f58 <fmc_bank1_state_get+0x20>)
 8012f3a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012f3c:	07d1      	lsls	r1, r2, #31
 8012f3e:	d407      	bmi.n	8012f50 <fmc_bank1_state_get+0x18>
 8012f40:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012f42:	06d2      	lsls	r2, r2, #27
 8012f44:	d406      	bmi.n	8012f54 <fmc_bank1_state_get+0x1c>
 8012f46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012f48:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012f4c:	0040      	lsls	r0, r0, #1
 8012f4e:	4770      	bx	lr
 8012f50:	2001      	movs	r0, #1
 8012f52:	4770      	bx	lr
 8012f54:	2003      	movs	r0, #3
 8012f56:	4770      	bx	lr
 8012f58:	40022000 	andmi	r2, r2, r0

08012f5c <fwdgt_enable>:
 8012f5c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8012f60:	4b01      	ldr	r3, [pc, #4]	; (8012f68 <fwdgt_enable+0xc>)
 8012f62:	601a      	str	r2, [r3, #0]
 8012f64:	4770      	bx	lr
 8012f66:	bf00      	nop
 8012f68:	40003000 	andmi	r3, r0, r0

08012f6c <fwdgt_counter_reload>:
 8012f6c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8012f70:	4b01      	ldr	r3, [pc, #4]	; (8012f78 <fwdgt_counter_reload+0xc>)
 8012f72:	601a      	str	r2, [r3, #0]
 8012f74:	4770      	bx	lr
 8012f76:	bf00      	nop
 8012f78:	40003000 	andmi	r3, r0, r0

08012f7c <fwdgt_config>:
 8012f7c:	f245 5355 	movw	r3, #21845	; 0x5555
 8012f80:	4a11      	ldr	r2, [pc, #68]	; (8012fc8 <fwdgt_config+0x4c>)
 8012f82:	b510      	push	{r4, lr}
 8012f84:	4c11      	ldr	r4, [pc, #68]	; (8012fcc <fwdgt_config+0x50>)
 8012f86:	6013      	str	r3, [r2, #0]
 8012f88:	68d3      	ldr	r3, [r2, #12]
 8012f8a:	3c01      	subs	r4, #1
 8012f8c:	f003 0301 	and.w	r3, r3, #1
 8012f90:	d013      	beq.n	8012fba <fwdgt_config+0x3e>
 8012f92:	2b00      	cmp	r3, #0
 8012f94:	d1f8      	bne.n	8012f88 <fwdgt_config+0xc>
 8012f96:	6051      	str	r1, [r2, #4]
 8012f98:	490c      	ldr	r1, [pc, #48]	; (8012fcc <fwdgt_config+0x50>)
 8012f9a:	4a0b      	ldr	r2, [pc, #44]	; (8012fc8 <fwdgt_config+0x4c>)
 8012f9c:	68d3      	ldr	r3, [r2, #12]
 8012f9e:	3901      	subs	r1, #1
 8012fa0:	f003 0302 	and.w	r3, r3, #2
 8012fa4:	d00d      	beq.n	8012fc2 <fwdgt_config+0x46>
 8012fa6:	2b00      	cmp	r3, #0
 8012fa8:	d1f8      	bne.n	8012f9c <fwdgt_config+0x20>
 8012faa:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8012fae:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8012fb2:	6090      	str	r0, [r2, #8]
 8012fb4:	2001      	movs	r0, #1
 8012fb6:	6013      	str	r3, [r2, #0]
 8012fb8:	e002      	b.n	8012fc0 <fwdgt_config+0x44>
 8012fba:	2b00      	cmp	r3, #0
 8012fbc:	d0eb      	beq.n	8012f96 <fwdgt_config+0x1a>
 8012fbe:	2000      	movs	r0, #0
 8012fc0:	bd10      	pop	{r4, pc}
 8012fc2:	2b00      	cmp	r3, #0
 8012fc4:	d1fb      	bne.n	8012fbe <fwdgt_config+0x42>
 8012fc6:	e7f0      	b.n	8012faa <fwdgt_config+0x2e>
 8012fc8:	40003000 	andmi	r3, r0, r0
 8012fcc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012fd0 <gpio_init>:
 8012fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fd4:	f04f 0c0f 	mov.w	ip, #15
 8012fd8:	06cf      	lsls	r7, r1, #27
 8012fda:	f04f 0400 	mov.w	r4, #0
 8012fde:	f04f 0701 	mov.w	r7, #1
 8012fe2:	f001 050f 	and.w	r5, r1, #15
 8012fe6:	bf48      	it	mi
 8012fe8:	4315      	orrmi	r5, r2
 8012fea:	fa23 f204 	lsr.w	r2, r3, r4
 8012fee:	07d6      	lsls	r6, r2, #31
 8012ff0:	d510      	bpl.n	8013014 <gpio_init+0x44>
 8012ff2:	00a2      	lsls	r2, r4, #2
 8012ff4:	6806      	ldr	r6, [r0, #0]
 8012ff6:	fa0c fe02 	lsl.w	lr, ip, r2
 8012ffa:	ea26 060e 	bic.w	r6, r6, lr
 8012ffe:	fa05 f202 	lsl.w	r2, r5, r2
 8013002:	2928      	cmp	r1, #40	; 0x28
 8013004:	ea42 0206 	orr.w	r2, r2, r6
 8013008:	d128      	bne.n	801305c <gpio_init+0x8c>
 801300a:	fa07 f604 	lsl.w	r6, r7, r4
 801300e:	401e      	ands	r6, r3
 8013010:	6146      	str	r6, [r0, #20]
 8013012:	6002      	str	r2, [r0, #0]
 8013014:	3401      	adds	r4, #1
 8013016:	2c08      	cmp	r4, #8
 8013018:	d1e7      	bne.n	8012fea <gpio_init+0x1a>
 801301a:	2600      	movs	r6, #0
 801301c:	f04f 0c0f 	mov.w	ip, #15
 8013020:	2701      	movs	r7, #1
 8013022:	f106 0208 	add.w	r2, r6, #8
 8013026:	fa23 f402 	lsr.w	r4, r3, r2
 801302a:	07e4      	lsls	r4, r4, #31
 801302c:	d511      	bpl.n	8013052 <gpio_init+0x82>
 801302e:	00b4      	lsls	r4, r6, #2
 8013030:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8013034:	fa0c f804 	lsl.w	r8, ip, r4
 8013038:	ea2e 0e08 	bic.w	lr, lr, r8
 801303c:	fa05 f404 	lsl.w	r4, r5, r4
 8013040:	2928      	cmp	r1, #40	; 0x28
 8013042:	ea44 040e 	orr.w	r4, r4, lr
 8013046:	d110      	bne.n	801306a <gpio_init+0x9a>
 8013048:	fa07 f202 	lsl.w	r2, r7, r2
 801304c:	401a      	ands	r2, r3
 801304e:	6142      	str	r2, [r0, #20]
 8013050:	6044      	str	r4, [r0, #4]
 8013052:	3601      	adds	r6, #1
 8013054:	2e08      	cmp	r6, #8
 8013056:	d1e4      	bne.n	8013022 <gpio_init+0x52>
 8013058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801305c:	2948      	cmp	r1, #72	; 0x48
 801305e:	bf02      	ittt	eq
 8013060:	fa07 f604 	lsleq.w	r6, r7, r4
 8013064:	401e      	andeq	r6, r3
 8013066:	6106      	streq	r6, [r0, #16]
 8013068:	e7d3      	b.n	8013012 <gpio_init+0x42>
 801306a:	2948      	cmp	r1, #72	; 0x48
 801306c:	bf02      	ittt	eq
 801306e:	fa07 f202 	lsleq.w	r2, r7, r2
 8013072:	401a      	andeq	r2, r3
 8013074:	6102      	streq	r2, [r0, #16]
 8013076:	e7eb      	b.n	8013050 <gpio_init+0x80>

08013078 <gpio_pin_remap_config>:
 8013078:	2800      	cmp	r0, #0
 801307a:	4a16      	ldr	r2, [pc, #88]	; (80130d4 <gpio_pin_remap_config+0x5c>)
 801307c:	b530      	push	{r4, r5, lr}
 801307e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8013082:	bfb4      	ite	lt
 8013084:	69d3      	ldrlt	r3, [r2, #28]
 8013086:	6853      	ldrge	r3, [r2, #4]
 8013088:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 801308c:	b284      	uxth	r4, r0
 801308e:	d110      	bne.n	80130b2 <gpio_pin_remap_config+0x3a>
 8013090:	6855      	ldr	r5, [r2, #4]
 8013092:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013096:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801309a:	6055      	str	r5, [r2, #4]
 801309c:	b119      	cbz	r1, 80130a6 <gpio_pin_remap_config+0x2e>
 801309e:	0d42      	lsrs	r2, r0, #21
 80130a0:	0112      	lsls	r2, r2, #4
 80130a2:	4094      	lsls	r4, r2
 80130a4:	4323      	orrs	r3, r4
 80130a6:	4a0b      	ldr	r2, [pc, #44]	; (80130d4 <gpio_pin_remap_config+0x5c>)
 80130a8:	2800      	cmp	r0, #0
 80130aa:	bfb4      	ite	lt
 80130ac:	61d3      	strlt	r3, [r2, #28]
 80130ae:	6053      	strge	r3, [r2, #4]
 80130b0:	bd30      	pop	{r4, r5, pc}
 80130b2:	02c2      	lsls	r2, r0, #11
 80130b4:	bf4d      	iteet	mi
 80130b6:	2203      	movmi	r2, #3
 80130b8:	0d42      	lsrpl	r2, r0, #21
 80130ba:	0112      	lslpl	r2, r2, #4
 80130bc:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80130c0:	bf4c      	ite	mi
 80130c2:	40aa      	lslmi	r2, r5
 80130c4:	fa04 f202 	lslpl.w	r2, r4, r2
 80130c8:	ea23 0302 	bic.w	r3, r3, r2
 80130cc:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80130d0:	e7e4      	b.n	801309c <gpio_pin_remap_config+0x24>
 80130d2:	bf00      	nop
 80130d4:	40010000 	andmi	r0, r1, r0

080130d8 <gpio_ethernet_phy_select>:
 80130d8:	4b04      	ldr	r3, [pc, #16]	; (80130ec <gpio_ethernet_phy_select+0x14>)
 80130da:	685a      	ldr	r2, [r3, #4]
 80130dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80130e0:	605a      	str	r2, [r3, #4]
 80130e2:	685a      	ldr	r2, [r3, #4]
 80130e4:	4302      	orrs	r2, r0
 80130e6:	605a      	str	r2, [r3, #4]
 80130e8:	4770      	bx	lr
 80130ea:	bf00      	nop
 80130ec:	40010000 	andmi	r0, r1, r0

080130f0 <pmu_backup_write_enable>:
 80130f0:	4a02      	ldr	r2, [pc, #8]	; (80130fc <pmu_backup_write_enable+0xc>)
 80130f2:	6813      	ldr	r3, [r2, #0]
 80130f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80130f8:	6013      	str	r3, [r2, #0]
 80130fa:	4770      	bx	lr
 80130fc:	40007000 	andmi	r7, r0, r0

08013100 <rcu_periph_clock_enable>:
 8013100:	2201      	movs	r2, #1
 8013102:	0983      	lsrs	r3, r0, #6
 8013104:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013108:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801310c:	6819      	ldr	r1, [r3, #0]
 801310e:	f000 001f 	and.w	r0, r0, #31
 8013112:	4082      	lsls	r2, r0
 8013114:	430a      	orrs	r2, r1
 8013116:	601a      	str	r2, [r3, #0]
 8013118:	4770      	bx	lr

0801311a <rcu_periph_clock_disable>:
 801311a:	2101      	movs	r1, #1
 801311c:	0983      	lsrs	r3, r0, #6
 801311e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013122:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013126:	681a      	ldr	r2, [r3, #0]
 8013128:	f000 001f 	and.w	r0, r0, #31
 801312c:	4081      	lsls	r1, r0
 801312e:	ea22 0201 	bic.w	r2, r2, r1
 8013132:	601a      	str	r2, [r3, #0]
 8013134:	4770      	bx	lr

08013136 <rcu_periph_reset_enable>:
 8013136:	f7ff bfe3 	b.w	8013100 <rcu_periph_clock_enable>

0801313a <rcu_periph_reset_disable>:
 801313a:	f7ff bfee 	b.w	801311a <rcu_periph_clock_disable>
	...

08013140 <rcu_ckout0_config>:
 8013140:	4a03      	ldr	r2, [pc, #12]	; (8013150 <rcu_ckout0_config+0x10>)
 8013142:	6853      	ldr	r3, [r2, #4]
 8013144:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013148:	4303      	orrs	r3, r0
 801314a:	6053      	str	r3, [r2, #4]
 801314c:	4770      	bx	lr
 801314e:	bf00      	nop
 8013150:	40021000 	andmi	r1, r2, r0

08013154 <rcu_pll2_config>:
 8013154:	4b04      	ldr	r3, [pc, #16]	; (8013168 <rcu_pll2_config+0x14>)
 8013156:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013158:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 801315c:	62da      	str	r2, [r3, #44]	; 0x2c
 801315e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013160:	4302      	orrs	r2, r0
 8013162:	62da      	str	r2, [r3, #44]	; 0x2c
 8013164:	4770      	bx	lr
 8013166:	bf00      	nop
 8013168:	40021000 	andmi	r1, r2, r0

0801316c <rcu_adc_clock_config>:
 801316c:	490c      	ldr	r1, [pc, #48]	; (80131a0 <rcu_adc_clock_config+0x34>)
 801316e:	2805      	cmp	r0, #5
 8013170:	684b      	ldr	r3, [r1, #4]
 8013172:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8013176:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801317a:	d006      	beq.n	801318a <rcu_adc_clock_config+0x1e>
 801317c:	d803      	bhi.n	8013186 <rcu_adc_clock_config+0x1a>
 801317e:	2804      	cmp	r0, #4
 8013180:	d10a      	bne.n	8013198 <rcu_adc_clock_config+0x2c>
 8013182:	604b      	str	r3, [r1, #4]
 8013184:	4770      	bx	lr
 8013186:	2807      	cmp	r0, #7
 8013188:	d1fb      	bne.n	8013182 <rcu_adc_clock_config+0x16>
 801318a:	4a06      	ldr	r2, [pc, #24]	; (80131a4 <rcu_adc_clock_config+0x38>)
 801318c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8013190:	4313      	orrs	r3, r2
 8013192:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8013196:	e7f4      	b.n	8013182 <rcu_adc_clock_config+0x16>
 8013198:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801319c:	e7f1      	b.n	8013182 <rcu_adc_clock_config+0x16>
 801319e:	bf00      	nop
 80131a0:	40021000 	andmi	r1, r2, r0
 80131a4:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

080131a8 <rcu_i2s2_clock_config>:
 80131a8:	4a03      	ldr	r2, [pc, #12]	; (80131b8 <rcu_i2s2_clock_config+0x10>)
 80131aa:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80131ac:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80131b0:	4303      	orrs	r3, r0
 80131b2:	62d3      	str	r3, [r2, #44]	; 0x2c
 80131b4:	4770      	bx	lr
 80131b6:	bf00      	nop
 80131b8:	40021000 	andmi	r1, r2, r0

080131bc <rcu_flag_get>:
 80131bc:	0983      	lsrs	r3, r0, #6
 80131be:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80131c2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80131c6:	681a      	ldr	r2, [r3, #0]
 80131c8:	2301      	movs	r3, #1
 80131ca:	f000 001f 	and.w	r0, r0, #31
 80131ce:	4083      	lsls	r3, r0
 80131d0:	4213      	tst	r3, r2
 80131d2:	bf14      	ite	ne
 80131d4:	2001      	movne	r0, #1
 80131d6:	2000      	moveq	r0, #0
 80131d8:	4770      	bx	lr
	...

080131dc <rcu_osci_stab_wait>:
 80131dc:	281a      	cmp	r0, #26
 80131de:	b508      	push	{r3, lr}
 80131e0:	d051      	beq.n	8013286 <rcu_osci_stab_wait+0xaa>
 80131e2:	d806      	bhi.n	80131f2 <rcu_osci_stab_wait+0x16>
 80131e4:	2810      	cmp	r0, #16
 80131e6:	d015      	beq.n	8013214 <rcu_osci_stab_wait+0x38>
 80131e8:	2818      	cmp	r0, #24
 80131ea:	d043      	beq.n	8013274 <rcu_osci_stab_wait+0x98>
 80131ec:	b368      	cbz	r0, 801324a <rcu_osci_stab_wait+0x6e>
 80131ee:	2000      	movs	r0, #0
 80131f0:	bd08      	pop	{r3, pc}
 80131f2:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80131f6:	d01c      	beq.n	8013232 <rcu_osci_stab_wait+0x56>
 80131f8:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80131fc:	d02f      	beq.n	801325e <rcu_osci_stab_wait+0x82>
 80131fe:	281c      	cmp	r0, #28
 8013200:	d1f5      	bne.n	80131ee <rcu_osci_stab_wait+0x12>
 8013202:	4925      	ldr	r1, [pc, #148]	; (8013298 <rcu_osci_stab_wait+0xbc>)
 8013204:	201d      	movs	r0, #29
 8013206:	f7ff ffd9 	bl	80131bc <rcu_flag_get>
 801320a:	b908      	cbnz	r0, 8013210 <rcu_osci_stab_wait+0x34>
 801320c:	3901      	subs	r1, #1
 801320e:	d1f9      	bne.n	8013204 <rcu_osci_stab_wait+0x28>
 8013210:	201d      	movs	r0, #29
 8013212:	e008      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 8013214:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013218:	2011      	movs	r0, #17
 801321a:	f7ff ffcf 	bl	80131bc <rcu_flag_get>
 801321e:	b908      	cbnz	r0, 8013224 <rcu_osci_stab_wait+0x48>
 8013220:	3901      	subs	r1, #1
 8013222:	d1f9      	bne.n	8013218 <rcu_osci_stab_wait+0x3c>
 8013224:	2011      	movs	r0, #17
 8013226:	f7ff ffc9 	bl	80131bc <rcu_flag_get>
 801322a:	3800      	subs	r0, #0
 801322c:	bf18      	it	ne
 801322e:	2001      	movne	r0, #1
 8013230:	e7de      	b.n	80131f0 <rcu_osci_stab_wait+0x14>
 8013232:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8013236:	f640 0001 	movw	r0, #2049	; 0x801
 801323a:	f7ff ffbf 	bl	80131bc <rcu_flag_get>
 801323e:	b908      	cbnz	r0, 8013244 <rcu_osci_stab_wait+0x68>
 8013240:	3901      	subs	r1, #1
 8013242:	d1f8      	bne.n	8013236 <rcu_osci_stab_wait+0x5a>
 8013244:	f640 0001 	movw	r0, #2049	; 0x801
 8013248:	e7ed      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 801324a:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801324e:	2001      	movs	r0, #1
 8013250:	f7ff ffb4 	bl	80131bc <rcu_flag_get>
 8013254:	b908      	cbnz	r0, 801325a <rcu_osci_stab_wait+0x7e>
 8013256:	3901      	subs	r1, #1
 8013258:	d1f9      	bne.n	801324e <rcu_osci_stab_wait+0x72>
 801325a:	2001      	movs	r0, #1
 801325c:	e7e3      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 801325e:	490e      	ldr	r1, [pc, #56]	; (8013298 <rcu_osci_stab_wait+0xbc>)
 8013260:	f640 1001 	movw	r0, #2305	; 0x901
 8013264:	f7ff ffaa 	bl	80131bc <rcu_flag_get>
 8013268:	b908      	cbnz	r0, 801326e <rcu_osci_stab_wait+0x92>
 801326a:	3901      	subs	r1, #1
 801326c:	d1f8      	bne.n	8013260 <rcu_osci_stab_wait+0x84>
 801326e:	f640 1001 	movw	r0, #2305	; 0x901
 8013272:	e7d8      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 8013274:	4908      	ldr	r1, [pc, #32]	; (8013298 <rcu_osci_stab_wait+0xbc>)
 8013276:	2019      	movs	r0, #25
 8013278:	f7ff ffa0 	bl	80131bc <rcu_flag_get>
 801327c:	b908      	cbnz	r0, 8013282 <rcu_osci_stab_wait+0xa6>
 801327e:	3901      	subs	r1, #1
 8013280:	d1f9      	bne.n	8013276 <rcu_osci_stab_wait+0x9a>
 8013282:	2019      	movs	r0, #25
 8013284:	e7cf      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 8013286:	4904      	ldr	r1, [pc, #16]	; (8013298 <rcu_osci_stab_wait+0xbc>)
 8013288:	201b      	movs	r0, #27
 801328a:	f7ff ff97 	bl	80131bc <rcu_flag_get>
 801328e:	b908      	cbnz	r0, 8013294 <rcu_osci_stab_wait+0xb8>
 8013290:	3901      	subs	r1, #1
 8013292:	d1f9      	bne.n	8013288 <rcu_osci_stab_wait+0xac>
 8013294:	201b      	movs	r0, #27
 8013296:	e7c6      	b.n	8013226 <rcu_osci_stab_wait+0x4a>
 8013298:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801329c <rcu_osci_on>:
 801329c:	f7ff bf30 	b.w	8013100 <rcu_periph_clock_enable>

080132a0 <rcu_clock_freq_get>:
 80132a0:	4b3e      	ldr	r3, [pc, #248]	; (801339c <rcu_clock_freq_get+0xfc>)
 80132a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80132a4:	4604      	mov	r4, r0
 80132a6:	461f      	mov	r7, r3
 80132a8:	b089      	sub	sp, #36	; 0x24
 80132aa:	ad04      	add	r5, sp, #16
 80132ac:	f103 0610 	add.w	r6, r3, #16
 80132b0:	462a      	mov	r2, r5
 80132b2:	6818      	ldr	r0, [r3, #0]
 80132b4:	6859      	ldr	r1, [r3, #4]
 80132b6:	3308      	adds	r3, #8
 80132b8:	c203      	stmia	r2!, {r0, r1}
 80132ba:	42b3      	cmp	r3, r6
 80132bc:	4615      	mov	r5, r2
 80132be:	d1f7      	bne.n	80132b0 <rcu_clock_freq_get+0x10>
 80132c0:	466b      	mov	r3, sp
 80132c2:	6938      	ldr	r0, [r7, #16]
 80132c4:	6871      	ldr	r1, [r6, #4]
 80132c6:	4a36      	ldr	r2, [pc, #216]	; (80133a0 <rcu_clock_freq_get+0x100>)
 80132c8:	c303      	stmia	r3!, {r0, r1}
 80132ca:	c303      	stmia	r3!, {r0, r1}
 80132cc:	6853      	ldr	r3, [r2, #4]
 80132ce:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132d2:	2b01      	cmp	r3, #1
 80132d4:	d053      	beq.n	801337e <rcu_clock_freq_get+0xde>
 80132d6:	2b02      	cmp	r3, #2
 80132d8:	d153      	bne.n	8013382 <rcu_clock_freq_get+0xe2>
 80132da:	6853      	ldr	r3, [r2, #4]
 80132dc:	03dd      	lsls	r5, r3, #15
 80132de:	d523      	bpl.n	8013328 <rcu_clock_freq_get+0x88>
 80132e0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80132e2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80132e6:	4b2f      	ldr	r3, [pc, #188]	; (80133a4 <rcu_clock_freq_get+0x104>)
 80132e8:	d00e      	beq.n	8013308 <rcu_clock_freq_get+0x68>
 80132ea:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80132ec:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80132ee:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80132f2:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80132f6:	3101      	adds	r1, #1
 80132f8:	280f      	cmp	r0, #15
 80132fa:	f100 0502 	add.w	r5, r0, #2
 80132fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8013302:	bf08      	it	eq
 8013304:	2514      	moveq	r5, #20
 8013306:	436b      	muls	r3, r5
 8013308:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801330a:	f001 010f 	and.w	r1, r1, #15
 801330e:	3101      	adds	r1, #1
 8013310:	fbb3 f3f1 	udiv	r3, r3, r1
 8013314:	6851      	ldr	r1, [r2, #4]
 8013316:	6850      	ldr	r0, [r2, #4]
 8013318:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801331c:	0080      	lsls	r0, r0, #2
 801331e:	d505      	bpl.n	801332c <rcu_clock_freq_get+0x8c>
 8013320:	f041 0110 	orr.w	r1, r1, #16
 8013324:	1c48      	adds	r0, r1, #1
 8013326:	e007      	b.n	8013338 <rcu_clock_freq_get+0x98>
 8013328:	4b1f      	ldr	r3, [pc, #124]	; (80133a8 <rcu_clock_freq_get+0x108>)
 801332a:	e7f3      	b.n	8013314 <rcu_clock_freq_get+0x74>
 801332c:	290f      	cmp	r1, #15
 801332e:	d0f9      	beq.n	8013324 <rcu_clock_freq_get+0x84>
 8013330:	290d      	cmp	r1, #13
 8013332:	f101 0002 	add.w	r0, r1, #2
 8013336:	d01d      	beq.n	8013374 <rcu_clock_freq_get+0xd4>
 8013338:	4358      	muls	r0, r3
 801333a:	6853      	ldr	r3, [r2, #4]
 801333c:	6851      	ldr	r1, [r2, #4]
 801333e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8013342:	6852      	ldr	r2, [r2, #4]
 8013344:	3320      	adds	r3, #32
 8013346:	446b      	add	r3, sp
 8013348:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801334c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8013350:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8013354:	3120      	adds	r1, #32
 8013356:	3220      	adds	r2, #32
 8013358:	4469      	add	r1, sp
 801335a:	446a      	add	r2, sp
 801335c:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8013360:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8013364:	fa20 f303 	lsr.w	r3, r0, r3
 8013368:	2c03      	cmp	r4, #3
 801336a:	d815      	bhi.n	8013398 <rcu_clock_freq_get+0xf8>
 801336c:	e8df f004 	tbb	[pc, r4]
 8013370:	110e0b0c 	tstne	lr, ip, lsl #22
 8013374:	2006      	movs	r0, #6
 8013376:	0859      	lsrs	r1, r3, #1
 8013378:	fb00 1003 	mla	r0, r0, r3, r1
 801337c:	e7dd      	b.n	801333a <rcu_clock_freq_get+0x9a>
 801337e:	4809      	ldr	r0, [pc, #36]	; (80133a4 <rcu_clock_freq_get+0x104>)
 8013380:	e7db      	b.n	801333a <rcu_clock_freq_get+0x9a>
 8013382:	480a      	ldr	r0, [pc, #40]	; (80133ac <rcu_clock_freq_get+0x10c>)
 8013384:	e7d9      	b.n	801333a <rcu_clock_freq_get+0x9a>
 8013386:	4618      	mov	r0, r3
 8013388:	b009      	add	sp, #36	; 0x24
 801338a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801338c:	fa23 f001 	lsr.w	r0, r3, r1
 8013390:	e7fa      	b.n	8013388 <rcu_clock_freq_get+0xe8>
 8013392:	fa23 f002 	lsr.w	r0, r3, r2
 8013396:	e7f7      	b.n	8013388 <rcu_clock_freq_get+0xe8>
 8013398:	2000      	movs	r0, #0
 801339a:	e7f5      	b.n	8013388 <rcu_clock_freq_get+0xe8>
 801339c:	08014454 	stmdaeq	r1, {r2, r4, r6, sl, lr}
 80133a0:	40021000 	andmi	r1, r2, r0
 80133a4:	017d7840 	cmneq	sp, r0, asr #16
 80133a8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80133ac:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080133b0 <timer_deinit>:
 80133b0:	b508      	push	{r3, lr}
 80133b2:	4b2d      	ldr	r3, [pc, #180]	; (8013468 <timer_deinit+0xb8>)
 80133b4:	4298      	cmp	r0, r3
 80133b6:	d048      	beq.n	801344a <timer_deinit+0x9a>
 80133b8:	d816      	bhi.n	80133e8 <timer_deinit+0x38>
 80133ba:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80133be:	4298      	cmp	r0, r3
 80133c0:	d03c      	beq.n	801343c <timer_deinit+0x8c>
 80133c2:	d807      	bhi.n	80133d4 <timer_deinit+0x24>
 80133c4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80133c8:	d02a      	beq.n	8013420 <timer_deinit+0x70>
 80133ca:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80133ce:	4298      	cmp	r0, r3
 80133d0:	d02d      	beq.n	801342e <timer_deinit+0x7e>
 80133d2:	bd08      	pop	{r3, pc}
 80133d4:	4b25      	ldr	r3, [pc, #148]	; (801346c <timer_deinit+0xbc>)
 80133d6:	4298      	cmp	r0, r3
 80133d8:	d1fb      	bne.n	80133d2 <timer_deinit+0x22>
 80133da:	f240 4003 	movw	r0, #1027	; 0x403
 80133de:	f7ff feaa 	bl	8013136 <rcu_periph_reset_enable>
 80133e2:	f240 4003 	movw	r0, #1027	; 0x403
 80133e6:	e017      	b.n	8013418 <timer_deinit+0x68>
 80133e8:	4b21      	ldr	r3, [pc, #132]	; (8013470 <timer_deinit+0xc0>)
 80133ea:	4298      	cmp	r0, r3
 80133ec:	d00e      	beq.n	801340c <timer_deinit+0x5c>
 80133ee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80133f2:	4298      	cmp	r0, r3
 80133f4:	d030      	beq.n	8013458 <timer_deinit+0xa8>
 80133f6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80133fa:	4298      	cmp	r0, r3
 80133fc:	d1e9      	bne.n	80133d2 <timer_deinit+0x22>
 80133fe:	f240 4005 	movw	r0, #1029	; 0x405
 8013402:	f7ff fe98 	bl	8013136 <rcu_periph_reset_enable>
 8013406:	f240 4005 	movw	r0, #1029	; 0x405
 801340a:	e005      	b.n	8013418 <timer_deinit+0x68>
 801340c:	f240 300b 	movw	r0, #779	; 0x30b
 8013410:	f7ff fe91 	bl	8013136 <rcu_periph_reset_enable>
 8013414:	f240 300b 	movw	r0, #779	; 0x30b
 8013418:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801341c:	f7ff be8d 	b.w	801313a <rcu_periph_reset_disable>
 8013420:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8013424:	f7ff fe87 	bl	8013136 <rcu_periph_reset_enable>
 8013428:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801342c:	e7f4      	b.n	8013418 <timer_deinit+0x68>
 801342e:	f240 4001 	movw	r0, #1025	; 0x401
 8013432:	f7ff fe80 	bl	8013136 <rcu_periph_reset_enable>
 8013436:	f240 4001 	movw	r0, #1025	; 0x401
 801343a:	e7ed      	b.n	8013418 <timer_deinit+0x68>
 801343c:	f240 4002 	movw	r0, #1026	; 0x402
 8013440:	f7ff fe79 	bl	8013136 <rcu_periph_reset_enable>
 8013444:	f240 4002 	movw	r0, #1026	; 0x402
 8013448:	e7e6      	b.n	8013418 <timer_deinit+0x68>
 801344a:	f240 4004 	movw	r0, #1028	; 0x404
 801344e:	f7ff fe72 	bl	8013136 <rcu_periph_reset_enable>
 8013452:	f240 4004 	movw	r0, #1028	; 0x404
 8013456:	e7df      	b.n	8013418 <timer_deinit+0x68>
 8013458:	f240 300d 	movw	r0, #781	; 0x30d
 801345c:	f7ff fe6b 	bl	8013136 <rcu_periph_reset_enable>
 8013460:	f240 300d 	movw	r0, #781	; 0x30d
 8013464:	e7d8      	b.n	8013418 <timer_deinit+0x68>
 8013466:	bf00      	nop
 8013468:	40001000 	andmi	r1, r0, r0
 801346c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8013470:	40012c00 	andmi	r2, r1, r0, lsl #24

08013474 <timer_init>:
 8013474:	880b      	ldrh	r3, [r1, #0]
 8013476:	6283      	str	r3, [r0, #40]	; 0x28
 8013478:	4b26      	ldr	r3, [pc, #152]	; (8013514 <timer_init+0xa0>)
 801347a:	4298      	cmp	r0, r3
 801347c:	d018      	beq.n	80134b0 <timer_init+0x3c>
 801347e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8013482:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8013486:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801348a:	d011      	beq.n	80134b0 <timer_init+0x3c>
 801348c:	4a22      	ldr	r2, [pc, #136]	; (8013518 <timer_init+0xa4>)
 801348e:	4290      	cmp	r0, r2
 8013490:	d00e      	beq.n	80134b0 <timer_init+0x3c>
 8013492:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8013496:	4290      	cmp	r0, r2
 8013498:	d00a      	beq.n	80134b0 <timer_init+0x3c>
 801349a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801349e:	4293      	cmp	r3, r2
 80134a0:	d006      	beq.n	80134b0 <timer_init+0x3c>
 80134a2:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80134a6:	4293      	cmp	r3, r2
 80134a8:	d002      	beq.n	80134b0 <timer_init+0x3c>
 80134aa:	4b1c      	ldr	r3, [pc, #112]	; (801351c <timer_init+0xa8>)
 80134ac:	4298      	cmp	r0, r3
 80134ae:	d10f      	bne.n	80134d0 <timer_init+0x5c>
 80134b0:	6803      	ldr	r3, [r0, #0]
 80134b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80134b6:	6003      	str	r3, [r0, #0]
 80134b8:	884b      	ldrh	r3, [r1, #2]
 80134ba:	6802      	ldr	r2, [r0, #0]
 80134bc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80134c0:	4313      	orrs	r3, r2
 80134c2:	6003      	str	r3, [r0, #0]
 80134c4:	888b      	ldrh	r3, [r1, #4]
 80134c6:	6802      	ldr	r2, [r0, #0]
 80134c8:	f003 0310 	and.w	r3, r3, #16
 80134cc:	4313      	orrs	r3, r2
 80134ce:	6003      	str	r3, [r0, #0]
 80134d0:	688b      	ldr	r3, [r1, #8]
 80134d2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80134d4:	4b12      	ldr	r3, [pc, #72]	; (8013520 <timer_init+0xac>)
 80134d6:	4298      	cmp	r0, r3
 80134d8:	d003      	beq.n	80134e2 <timer_init+0x6e>
 80134da:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80134de:	4298      	cmp	r0, r3
 80134e0:	d104      	bne.n	80134ec <timer_init+0x78>
 80134e2:	6943      	ldr	r3, [r0, #20]
 80134e4:	f043 0301 	orr.w	r3, r3, #1
 80134e8:	6143      	str	r3, [r0, #20]
 80134ea:	4770      	bx	lr
 80134ec:	6803      	ldr	r3, [r0, #0]
 80134ee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80134f2:	6003      	str	r3, [r0, #0]
 80134f4:	898b      	ldrh	r3, [r1, #12]
 80134f6:	6802      	ldr	r2, [r0, #0]
 80134f8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80134fc:	4313      	orrs	r3, r2
 80134fe:	6003      	str	r3, [r0, #0]
 8013500:	4b04      	ldr	r3, [pc, #16]	; (8013514 <timer_init+0xa0>)
 8013502:	4298      	cmp	r0, r3
 8013504:	d002      	beq.n	801350c <timer_init+0x98>
 8013506:	4b04      	ldr	r3, [pc, #16]	; (8013518 <timer_init+0xa4>)
 8013508:	4298      	cmp	r0, r3
 801350a:	d1ea      	bne.n	80134e2 <timer_init+0x6e>
 801350c:	7b8b      	ldrb	r3, [r1, #14]
 801350e:	6303      	str	r3, [r0, #48]	; 0x30
 8013510:	e7e7      	b.n	80134e2 <timer_init+0x6e>
 8013512:	bf00      	nop
 8013514:	40012c00 	andmi	r2, r1, r0, lsl #24
 8013518:	40013400 	andmi	r3, r1, r0, lsl #8
 801351c:	40002000 	andmi	r2, r0, r0
 8013520:	40001000 	andmi	r1, r0, r0

08013524 <timer_enable>:
 8013524:	6803      	ldr	r3, [r0, #0]
 8013526:	f043 0301 	orr.w	r3, r3, #1
 801352a:	6003      	str	r3, [r0, #0]
 801352c:	4770      	bx	lr
	...

08013530 <usart_deinit>:
 8013530:	b508      	push	{r3, lr}
 8013532:	4b1d      	ldr	r3, [pc, #116]	; (80135a8 <usart_deinit+0x78>)
 8013534:	4298      	cmp	r0, r3
 8013536:	d028      	beq.n	801358a <usart_deinit+0x5a>
 8013538:	d808      	bhi.n	801354c <usart_deinit+0x1c>
 801353a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801353e:	4298      	cmp	r0, r3
 8013540:	d015      	beq.n	801356e <usart_deinit+0x3e>
 8013542:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013546:	4298      	cmp	r0, r3
 8013548:	d018      	beq.n	801357c <usart_deinit+0x4c>
 801354a:	bd08      	pop	{r3, pc}
 801354c:	4b17      	ldr	r3, [pc, #92]	; (80135ac <usart_deinit+0x7c>)
 801354e:	4298      	cmp	r0, r3
 8013550:	d022      	beq.n	8013598 <usart_deinit+0x68>
 8013552:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8013556:	4298      	cmp	r0, r3
 8013558:	d1f7      	bne.n	801354a <usart_deinit+0x1a>
 801355a:	f240 300e 	movw	r0, #782	; 0x30e
 801355e:	f7ff fdea 	bl	8013136 <rcu_periph_reset_enable>
 8013562:	f240 300e 	movw	r0, #782	; 0x30e
 8013566:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801356a:	f7ff bde6 	b.w	801313a <rcu_periph_reset_disable>
 801356e:	f240 4011 	movw	r0, #1041	; 0x411
 8013572:	f7ff fde0 	bl	8013136 <rcu_periph_reset_enable>
 8013576:	f240 4011 	movw	r0, #1041	; 0x411
 801357a:	e7f4      	b.n	8013566 <usart_deinit+0x36>
 801357c:	f240 4012 	movw	r0, #1042	; 0x412
 8013580:	f7ff fdd9 	bl	8013136 <rcu_periph_reset_enable>
 8013584:	f240 4012 	movw	r0, #1042	; 0x412
 8013588:	e7ed      	b.n	8013566 <usart_deinit+0x36>
 801358a:	f240 4013 	movw	r0, #1043	; 0x413
 801358e:	f7ff fdd2 	bl	8013136 <rcu_periph_reset_enable>
 8013592:	f240 4013 	movw	r0, #1043	; 0x413
 8013596:	e7e6      	b.n	8013566 <usart_deinit+0x36>
 8013598:	f240 4014 	movw	r0, #1044	; 0x414
 801359c:	f7ff fdcb 	bl	8013136 <rcu_periph_reset_enable>
 80135a0:	f240 4014 	movw	r0, #1044	; 0x414
 80135a4:	e7df      	b.n	8013566 <usart_deinit+0x36>
 80135a6:	bf00      	nop
 80135a8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80135ac:	40005000 	andmi	r5, r0, r0

080135b0 <usart_baudrate_set>:
 80135b0:	b538      	push	{r3, r4, r5, lr}
 80135b2:	4b11      	ldr	r3, [pc, #68]	; (80135f8 <usart_baudrate_set+0x48>)
 80135b4:	4604      	mov	r4, r0
 80135b6:	4298      	cmp	r0, r3
 80135b8:	460d      	mov	r5, r1
 80135ba:	d01b      	beq.n	80135f4 <usart_baudrate_set+0x44>
 80135bc:	d809      	bhi.n	80135d2 <usart_baudrate_set+0x22>
 80135be:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80135c2:	4298      	cmp	r0, r3
 80135c4:	d016      	beq.n	80135f4 <usart_baudrate_set+0x44>
 80135c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80135ca:	4298      	cmp	r0, r3
 80135cc:	d012      	beq.n	80135f4 <usart_baudrate_set+0x44>
 80135ce:	2000      	movs	r0, #0
 80135d0:	e009      	b.n	80135e6 <usart_baudrate_set+0x36>
 80135d2:	4b0a      	ldr	r3, [pc, #40]	; (80135fc <usart_baudrate_set+0x4c>)
 80135d4:	4298      	cmp	r0, r3
 80135d6:	d00d      	beq.n	80135f4 <usart_baudrate_set+0x44>
 80135d8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80135dc:	4298      	cmp	r0, r3
 80135de:	d1f6      	bne.n	80135ce <usart_baudrate_set+0x1e>
 80135e0:	2003      	movs	r0, #3
 80135e2:	f7ff fe5d 	bl	80132a0 <rcu_clock_freq_get>
 80135e6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80135ea:	fbb1 f1f5 	udiv	r1, r1, r5
 80135ee:	b289      	uxth	r1, r1
 80135f0:	60a1      	str	r1, [r4, #8]
 80135f2:	bd38      	pop	{r3, r4, r5, pc}
 80135f4:	2002      	movs	r0, #2
 80135f6:	e7f4      	b.n	80135e2 <usart_baudrate_set+0x32>
 80135f8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80135fc:	40005000 	andmi	r5, r0, r0

08013600 <usart_parity_config>:
 8013600:	68c3      	ldr	r3, [r0, #12]
 8013602:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8013606:	60c3      	str	r3, [r0, #12]
 8013608:	68c3      	ldr	r3, [r0, #12]
 801360a:	430b      	orrs	r3, r1
 801360c:	60c3      	str	r3, [r0, #12]
 801360e:	4770      	bx	lr

08013610 <usart_word_length_set>:
 8013610:	68c3      	ldr	r3, [r0, #12]
 8013612:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8013616:	60c3      	str	r3, [r0, #12]
 8013618:	68c3      	ldr	r3, [r0, #12]
 801361a:	430b      	orrs	r3, r1
 801361c:	60c3      	str	r3, [r0, #12]
 801361e:	4770      	bx	lr

08013620 <usart_stop_bit_set>:
 8013620:	6903      	ldr	r3, [r0, #16]
 8013622:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8013626:	6103      	str	r3, [r0, #16]
 8013628:	6903      	ldr	r3, [r0, #16]
 801362a:	430b      	orrs	r3, r1
 801362c:	6103      	str	r3, [r0, #16]
 801362e:	4770      	bx	lr

08013630 <usart_transmit_config>:
 8013630:	68c3      	ldr	r3, [r0, #12]
 8013632:	f023 0308 	bic.w	r3, r3, #8
 8013636:	430b      	orrs	r3, r1
 8013638:	60c3      	str	r3, [r0, #12]
 801363a:	4770      	bx	lr

0801363c <usart_receive_config>:
 801363c:	68c3      	ldr	r3, [r0, #12]
 801363e:	f023 0304 	bic.w	r3, r3, #4
 8013642:	430b      	orrs	r3, r1
 8013644:	60c3      	str	r3, [r0, #12]
 8013646:	4770      	bx	lr

08013648 <usart_hardware_flow_rts_config>:
 8013648:	6943      	ldr	r3, [r0, #20]
 801364a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801364e:	430b      	orrs	r3, r1
 8013650:	6143      	str	r3, [r0, #20]
 8013652:	4770      	bx	lr

08013654 <usart_hardware_flow_cts_config>:
 8013654:	6943      	ldr	r3, [r0, #20]
 8013656:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801365a:	430b      	orrs	r3, r1
 801365c:	6143      	str	r3, [r0, #20]
 801365e:	4770      	bx	lr

08013660 <usart_flag_get>:
 8013660:	098b      	lsrs	r3, r1, #6
 8013662:	581a      	ldr	r2, [r3, r0]
 8013664:	2301      	movs	r3, #1
 8013666:	f001 011f 	and.w	r1, r1, #31
 801366a:	408b      	lsls	r3, r1
 801366c:	4213      	tst	r3, r2
 801366e:	bf14      	ite	ne
 8013670:	2001      	movne	r0, #1
 8013672:	2000      	moveq	r0, #0
 8013674:	4770      	bx	lr
	...

08013678 <emac_eth_recv>:
 8013678:	b538      	push	{r3, r4, r5, lr}
 801367a:	4605      	mov	r5, r0
 801367c:	f7ff fbe0 	bl	8012e40 <enet_rxframe_size_get>
 8013680:	4604      	mov	r4, r0
 8013682:	b138      	cbz	r0, 8013694 <emac_eth_recv+0x1c>
 8013684:	4b05      	ldr	r3, [pc, #20]	; (801369c <emac_eth_recv+0x24>)
 8013686:	2105      	movs	r1, #5
 8013688:	6818      	ldr	r0, [r3, #0]
 801368a:	f7ff fb88 	bl	8012d9e <enet_desc_information_get>
 801368e:	6028      	str	r0, [r5, #0]
 8013690:	4620      	mov	r0, r4
 8013692:	bd38      	pop	{r3, r4, r5, pc}
 8013694:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013698:	e7fb      	b.n	8013692 <emac_eth_recv+0x1a>
 801369a:	bf00      	nop
 801369c:	2000aeb0 			; <UNDEFINED> instruction: 0x2000aeb0

080136a0 <emac_free_pkt>:
 80136a0:	2100      	movs	r1, #0
 80136a2:	4608      	mov	r0, r1
 80136a4:	f7ff b8b8 	b.w	8012818 <enet_frame_receive>

080136a8 <emac_eth_send>:
 80136a8:	f7ff b8f6 	b.w	8012898 <enet_frame_transmit>

080136ac <gd32_adc_init()>:
 80136ac:	b510      	push	{r4, lr}
 80136ae:	f240 6009 	movw	r0, #1545	; 0x609
 80136b2:	4c21      	ldr	r4, [pc, #132]	; (8013738 <gd32_adc_init()+0x8c>)
 80136b4:	f7ff fd24 	bl	8013100 <rcu_periph_clock_enable>
 80136b8:	2005      	movs	r0, #5
 80136ba:	f7ff fd57 	bl	801316c <rcu_adc_clock_config>
 80136be:	4620      	mov	r0, r4
 80136c0:	2201      	movs	r2, #1
 80136c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80136c6:	f000 fc1f 	bl	8013f08 <adc_special_function_config>
 80136ca:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 80136ce:	4620      	mov	r0, r4
 80136d0:	2102      	movs	r1, #2
 80136d2:	f000 fcb8 	bl	8014046 <adc_external_trigger_source_config>
 80136d6:	2100      	movs	r1, #0
 80136d8:	4620      	mov	r0, r4
 80136da:	f000 fc3d 	bl	8013f58 <adc_data_alignment_config>
 80136de:	2000      	movs	r0, #0
 80136e0:	f000 fc02 	bl	8013ee8 <adc_mode_config>
 80136e4:	2202      	movs	r2, #2
 80136e6:	4620      	mov	r0, r4
 80136e8:	4611      	mov	r1, r2
 80136ea:	f000 fc61 	bl	8013fb0 <adc_channel_length_config>
 80136ee:	4620      	mov	r0, r4
 80136f0:	2307      	movs	r3, #7
 80136f2:	2210      	movs	r2, #16
 80136f4:	2100      	movs	r1, #0
 80136f6:	f000 fc78 	bl	8013fea <adc_inserted_channel_config>
 80136fa:	2307      	movs	r3, #7
 80136fc:	4620      	mov	r0, r4
 80136fe:	2211      	movs	r2, #17
 8013700:	2101      	movs	r1, #1
 8013702:	f000 fc72 	bl	8013fea <adc_inserted_channel_config>
 8013706:	2201      	movs	r2, #1
 8013708:	2102      	movs	r1, #2
 801370a:	4620      	mov	r0, r4
 801370c:	f000 fcac 	bl	8014068 <adc_external_trigger_config>
 8013710:	f000 fc44 	bl	8013f9c <adc_tempsensor_vrefint_enable>
 8013714:	4620      	mov	r0, r4
 8013716:	f000 fc28 	bl	8013f6a <adc_enable>
 801371a:	2100      	movs	r1, #0
 801371c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013720:	f000 fb22 	bl	8013d68 <udelay(unsigned int, unsigned int)>
 8013724:	4620      	mov	r0, r4
 8013726:	f000 fc28 	bl	8013f7a <adc_calibration_enable>
 801372a:	4620      	mov	r0, r4
 801372c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013730:	2102      	movs	r1, #2
 8013732:	f000 bcb4 	b.w	801409e <adc_software_trigger_enable>
 8013736:	bf00      	nop
 8013738:	40012400 	andmi	r2, r1, r0, lsl #8

0801373c <_stop() [clone .isra.0]>:
 801373c:	b508      	push	{r3, lr}
 801373e:	4806      	ldr	r0, [pc, #24]	; (8013758 <_stop() [clone .isra.0]+0x1c>)
 8013740:	f000 fdc0 	bl	80142c4 <i2c_stop_on_bus>
 8013744:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013748:	4904      	ldr	r1, [pc, #16]	; (801375c <_stop() [clone .isra.0]+0x20>)
 801374a:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801374e:	0592      	lsls	r2, r2, #22
 8013750:	d501      	bpl.n	8013756 <_stop() [clone .isra.0]+0x1a>
 8013752:	3b01      	subs	r3, #1
 8013754:	d1f9      	bne.n	801374a <_stop() [clone .isra.0]+0xe>
 8013756:	bd08      	pop	{r3, pc}
 8013758:	40005400 	andmi	r5, r0, r0, lsl #8
 801375c:	40005000 	andmi	r5, r0, r0

08013760 <gd32_i2c_begin>:
 8013760:	b510      	push	{r4, lr}
 8013762:	f240 7015 	movw	r0, #1813	; 0x715
 8013766:	f7ff fccb 	bl	8013100 <rcu_periph_clock_enable>
 801376a:	4c15      	ldr	r4, [pc, #84]	; (80137c0 <gd32_i2c_begin+0x60>)
 801376c:	f240 6003 	movw	r0, #1539	; 0x603
 8013770:	f7ff fcc6 	bl	8013100 <rcu_periph_clock_enable>
 8013774:	f240 6003 	movw	r0, #1539	; 0x603
 8013778:	f7ff fcc2 	bl	8013100 <rcu_periph_clock_enable>
 801377c:	4620      	mov	r0, r4
 801377e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013782:	2203      	movs	r2, #3
 8013784:	211c      	movs	r1, #28
 8013786:	f7ff fc23 	bl	8012fd0 <gpio_init>
 801378a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801378e:	2203      	movs	r2, #3
 8013790:	4620      	mov	r0, r4
 8013792:	211c      	movs	r1, #28
 8013794:	f7ff fc1c 	bl	8012fd0 <gpio_init>
 8013798:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 801379c:	2101      	movs	r1, #1
 801379e:	2002      	movs	r0, #2
 80137a0:	f7ff fc6a 	bl	8013078 <gpio_pin_remap_config>
 80137a4:	4620      	mov	r0, r4
 80137a6:	4907      	ldr	r1, [pc, #28]	; (80137c4 <gd32_i2c_begin+0x64>)
 80137a8:	2200      	movs	r2, #0
 80137aa:	f000 fd05 	bl	80141b8 <i2c_clock_config>
 80137ae:	4620      	mov	r0, r4
 80137b0:	f000 fd7e 	bl	80142b0 <i2c_enable>
 80137b4:	4620      	mov	r0, r4
 80137b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137ba:	2101      	movs	r1, #1
 80137bc:	f000 bd5e 	b.w	801427c <i2c_ack_config>
 80137c0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80137c4:	00061a80 	andeq	r1, r6, r0, lsl #21

080137c8 <gd32_i2c_set_baudrate>:
 80137c8:	4601      	mov	r1, r0
 80137ca:	2200      	movs	r2, #0
 80137cc:	4801      	ldr	r0, [pc, #4]	; (80137d4 <gd32_i2c_set_baudrate+0xc>)
 80137ce:	f000 bcf3 	b.w	80141b8 <i2c_clock_config>
 80137d2:	bf00      	nop
 80137d4:	40005400 	andmi	r5, r0, r0, lsl #8

080137d8 <gd32_i2c_set_address>:
 80137d8:	4b01      	ldr	r3, [pc, #4]	; (80137e0 <gd32_i2c_set_address+0x8>)
 80137da:	0040      	lsls	r0, r0, #1
 80137dc:	7018      	strb	r0, [r3, #0]
 80137de:	4770      	bx	lr
 80137e0:	2000eb1c 	andcs	lr, r0, ip, lsl fp

080137e4 <gd32_i2c_write>:
 80137e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80137e6:	4604      	mov	r4, r0
 80137e8:	460f      	mov	r7, r1
 80137ea:	f640 75ff 	movw	r5, #4095	; 0xfff
 80137ee:	4e2e      	ldr	r6, [pc, #184]	; (80138a8 <gd32_i2c_write+0xc4>)
 80137f0:	f240 6101 	movw	r1, #1537	; 0x601
 80137f4:	4630      	mov	r0, r6
 80137f6:	f000 fd6f 	bl	80142d8 <i2c_flag_get>
 80137fa:	b9b0      	cbnz	r0, 801382a <gd32_i2c_write+0x46>
 80137fc:	482a      	ldr	r0, [pc, #168]	; (80138a8 <gd32_i2c_write+0xc4>)
 80137fe:	f000 fd5c 	bl	80142ba <i2c_start_on_bus>
 8013802:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013806:	4e28      	ldr	r6, [pc, #160]	; (80138a8 <gd32_i2c_write+0xc4>)
 8013808:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801380c:	4630      	mov	r0, r6
 801380e:	f000 fd63 	bl	80142d8 <i2c_flag_get>
 8013812:	b190      	cbz	r0, 801383a <gd32_i2c_write+0x56>
 8013814:	4b25      	ldr	r3, [pc, #148]	; (80138ac <gd32_i2c_write+0xc8>)
 8013816:	f06f 0201 	mvn.w	r2, #1
 801381a:	7819      	ldrb	r1, [r3, #0]
 801381c:	4822      	ldr	r0, [pc, #136]	; (80138a8 <gd32_i2c_write+0xc4>)
 801381e:	f000 fd3f 	bl	80142a0 <i2c_master_addressing>
 8013822:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013826:	4e20      	ldr	r6, [pc, #128]	; (80138a8 <gd32_i2c_write+0xc4>)
 8013828:	e00c      	b.n	8013844 <gd32_i2c_write+0x60>
 801382a:	3d01      	subs	r5, #1
 801382c:	d1e0      	bne.n	80137f0 <gd32_i2c_write+0xc>
 801382e:	f7ff ff85 	bl	801373c <_stop() [clone .isra.0]>
 8013832:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013836:	4240      	negs	r0, r0
 8013838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801383a:	3d01      	subs	r5, #1
 801383c:	d1e4      	bne.n	8013808 <gd32_i2c_write+0x24>
 801383e:	e7f6      	b.n	801382e <gd32_i2c_write+0x4a>
 8013840:	3d01      	subs	r5, #1
 8013842:	d0f4      	beq.n	801382e <gd32_i2c_write+0x4a>
 8013844:	f240 5101 	movw	r1, #1281	; 0x501
 8013848:	4630      	mov	r0, r6
 801384a:	f000 fd45 	bl	80142d8 <i2c_flag_get>
 801384e:	2800      	cmp	r0, #0
 8013850:	d0f6      	beq.n	8013840 <gd32_i2c_write+0x5c>
 8013852:	f240 5101 	movw	r1, #1281	; 0x501
 8013856:	4814      	ldr	r0, [pc, #80]	; (80138a8 <gd32_i2c_write+0xc4>)
 8013858:	f000 fd49 	bl	80142ee <i2c_flag_clear>
 801385c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013860:	4e11      	ldr	r6, [pc, #68]	; (80138a8 <gd32_i2c_write+0xc4>)
 8013862:	f240 5107 	movw	r1, #1287	; 0x507
 8013866:	4630      	mov	r0, r6
 8013868:	f000 fd36 	bl	80142d8 <i2c_flag_get>
 801386c:	2801      	cmp	r0, #1
 801386e:	d107      	bne.n	8013880 <gd32_i2c_write+0x9c>
 8013870:	4e0d      	ldr	r6, [pc, #52]	; (80138a8 <gd32_i2c_write+0xc4>)
 8013872:	4427      	add	r7, r4
 8013874:	42a7      	cmp	r7, r4
 8013876:	d106      	bne.n	8013886 <gd32_i2c_write+0xa2>
 8013878:	f7ff ff60 	bl	801373c <_stop() [clone .isra.0]>
 801387c:	2000      	movs	r0, #0
 801387e:	e7da      	b.n	8013836 <gd32_i2c_write+0x52>
 8013880:	3d01      	subs	r5, #1
 8013882:	d1ee      	bne.n	8013862 <gd32_i2c_write+0x7e>
 8013884:	e7d3      	b.n	801382e <gd32_i2c_write+0x4a>
 8013886:	4630      	mov	r0, r6
 8013888:	f814 1b01 	ldrb.w	r1, [r4], #1
 801388c:	f000 fd1f 	bl	80142ce <i2c_data_transmit>
 8013890:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013894:	f240 5102 	movw	r1, #1282	; 0x502
 8013898:	4630      	mov	r0, r6
 801389a:	f000 fd1d 	bl	80142d8 <i2c_flag_get>
 801389e:	2800      	cmp	r0, #0
 80138a0:	d1e8      	bne.n	8013874 <gd32_i2c_write+0x90>
 80138a2:	3d01      	subs	r5, #1
 80138a4:	d1f6      	bne.n	8013894 <gd32_i2c_write+0xb0>
 80138a6:	e7c2      	b.n	801382e <gd32_i2c_write+0x4a>
 80138a8:	40005400 	andmi	r5, r0, r0, lsl #8
 80138ac:	2000eb1c 	andcs	lr, r0, ip, lsl fp

080138b0 <gd32_i2c_read>:
 80138b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80138b4:	4680      	mov	r8, r0
 80138b6:	460c      	mov	r4, r1
 80138b8:	f640 76ff 	movw	r6, #4095	; 0xfff
 80138bc:	4f4b      	ldr	r7, [pc, #300]	; (80139ec <gd32_i2c_read+0x13c>)
 80138be:	f240 6101 	movw	r1, #1537	; 0x601
 80138c2:	4638      	mov	r0, r7
 80138c4:	f000 fd08 	bl	80142d8 <i2c_flag_get>
 80138c8:	4605      	mov	r5, r0
 80138ca:	bb08      	cbnz	r0, 8013910 <gd32_i2c_read+0x60>
 80138cc:	2c02      	cmp	r4, #2
 80138ce:	d103      	bne.n	80138d8 <gd32_i2c_read+0x28>
 80138d0:	4601      	mov	r1, r0
 80138d2:	4846      	ldr	r0, [pc, #280]	; (80139ec <gd32_i2c_read+0x13c>)
 80138d4:	f000 fcdb 	bl	801428e <i2c_ackpos_config>
 80138d8:	4844      	ldr	r0, [pc, #272]	; (80139ec <gd32_i2c_read+0x13c>)
 80138da:	f000 fcee 	bl	80142ba <i2c_start_on_bus>
 80138de:	f640 76ff 	movw	r6, #4095	; 0xfff
 80138e2:	4f42      	ldr	r7, [pc, #264]	; (80139ec <gd32_i2c_read+0x13c>)
 80138e4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80138e8:	4638      	mov	r0, r7
 80138ea:	f000 fcf5 	bl	80142d8 <i2c_flag_get>
 80138ee:	b1a8      	cbz	r0, 801391c <gd32_i2c_read+0x6c>
 80138f0:	4b3f      	ldr	r3, [pc, #252]	; (80139f0 <gd32_i2c_read+0x140>)
 80138f2:	2201      	movs	r2, #1
 80138f4:	7819      	ldrb	r1, [r3, #0]
 80138f6:	483d      	ldr	r0, [pc, #244]	; (80139ec <gd32_i2c_read+0x13c>)
 80138f8:	f000 fcd2 	bl	80142a0 <i2c_master_addressing>
 80138fc:	2c02      	cmp	r4, #2
 80138fe:	d803      	bhi.n	8013908 <gd32_i2c_read+0x58>
 8013900:	2100      	movs	r1, #0
 8013902:	483a      	ldr	r0, [pc, #232]	; (80139ec <gd32_i2c_read+0x13c>)
 8013904:	f000 fcba 	bl	801427c <i2c_ack_config>
 8013908:	f640 76ff 	movw	r6, #4095	; 0xfff
 801390c:	4f37      	ldr	r7, [pc, #220]	; (80139ec <gd32_i2c_read+0x13c>)
 801390e:	e00a      	b.n	8013926 <gd32_i2c_read+0x76>
 8013910:	3e01      	subs	r6, #1
 8013912:	d1d4      	bne.n	80138be <gd32_i2c_read+0xe>
 8013914:	f7ff ff12 	bl	801373c <_stop() [clone .isra.0]>
 8013918:	2504      	movs	r5, #4
 801391a:	e04d      	b.n	80139b8 <gd32_i2c_read+0x108>
 801391c:	3e01      	subs	r6, #1
 801391e:	d1e1      	bne.n	80138e4 <gd32_i2c_read+0x34>
 8013920:	e7f8      	b.n	8013914 <gd32_i2c_read+0x64>
 8013922:	3e01      	subs	r6, #1
 8013924:	d0f6      	beq.n	8013914 <gd32_i2c_read+0x64>
 8013926:	f240 5101 	movw	r1, #1281	; 0x501
 801392a:	4638      	mov	r0, r7
 801392c:	f000 fcd4 	bl	80142d8 <i2c_flag_get>
 8013930:	2800      	cmp	r0, #0
 8013932:	d0f6      	beq.n	8013922 <gd32_i2c_read+0x72>
 8013934:	f240 5101 	movw	r1, #1281	; 0x501
 8013938:	482c      	ldr	r0, [pc, #176]	; (80139ec <gd32_i2c_read+0x13c>)
 801393a:	f000 fcd8 	bl	80142ee <i2c_flag_clear>
 801393e:	2c01      	cmp	r4, #1
 8013940:	d102      	bne.n	8013948 <gd32_i2c_read+0x98>
 8013942:	482a      	ldr	r0, [pc, #168]	; (80139ec <gd32_i2c_read+0x13c>)
 8013944:	f000 fcbe 	bl	80142c4 <i2c_stop_on_bus>
 8013948:	f640 77ff 	movw	r7, #4095	; 0xfff
 801394c:	4e27      	ldr	r6, [pc, #156]	; (80139ec <gd32_i2c_read+0x13c>)
 801394e:	e022      	b.n	8013996 <gd32_i2c_read+0xe6>
 8013950:	2c03      	cmp	r4, #3
 8013952:	d134      	bne.n	80139be <gd32_i2c_read+0x10e>
 8013954:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013958:	e002      	b.n	8013960 <gd32_i2c_read+0xb0>
 801395a:	f1b9 0901 	subs.w	r9, r9, #1
 801395e:	d0d9      	beq.n	8013914 <gd32_i2c_read+0x64>
 8013960:	f240 5102 	movw	r1, #1282	; 0x502
 8013964:	4630      	mov	r0, r6
 8013966:	f000 fcb7 	bl	80142d8 <i2c_flag_get>
 801396a:	2800      	cmp	r0, #0
 801396c:	d0f5      	beq.n	801395a <gd32_i2c_read+0xaa>
 801396e:	2100      	movs	r1, #0
 8013970:	4630      	mov	r0, r6
 8013972:	f000 fc83 	bl	801427c <i2c_ack_config>
 8013976:	f240 5106 	movw	r1, #1286	; 0x506
 801397a:	4630      	mov	r0, r6
 801397c:	f000 fcac 	bl	80142d8 <i2c_flag_get>
 8013980:	b138      	cbz	r0, 8013992 <gd32_i2c_read+0xe2>
 8013982:	4630      	mov	r0, r6
 8013984:	f000 fca5 	bl	80142d2 <i2c_data_receive>
 8013988:	f640 77ff 	movw	r7, #4095	; 0xfff
 801398c:	f808 0b01 	strb.w	r0, [r8], #1
 8013990:	3c01      	subs	r4, #1
 8013992:	3f01      	subs	r7, #1
 8013994:	d0be      	beq.n	8013914 <gd32_i2c_read+0x64>
 8013996:	2c00      	cmp	r4, #0
 8013998:	d1da      	bne.n	8013950 <gd32_i2c_read+0xa0>
 801399a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801399e:	4915      	ldr	r1, [pc, #84]	; (80139f4 <gd32_i2c_read+0x144>)
 80139a0:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80139a4:	0592      	lsls	r2, r2, #22
 80139a6:	d41d      	bmi.n	80139e4 <gd32_i2c_read+0x134>
 80139a8:	2101      	movs	r1, #1
 80139aa:	4810      	ldr	r0, [pc, #64]	; (80139ec <gd32_i2c_read+0x13c>)
 80139ac:	f000 fc66 	bl	801427c <i2c_ack_config>
 80139b0:	2101      	movs	r1, #1
 80139b2:	480e      	ldr	r0, [pc, #56]	; (80139ec <gd32_i2c_read+0x13c>)
 80139b4:	f000 fc6b 	bl	801428e <i2c_ackpos_config>
 80139b8:	4628      	mov	r0, r5
 80139ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80139be:	2c02      	cmp	r4, #2
 80139c0:	d1d9      	bne.n	8013976 <gd32_i2c_read+0xc6>
 80139c2:	f640 79ff 	movw	r9, #4095	; 0xfff
 80139c6:	e002      	b.n	80139ce <gd32_i2c_read+0x11e>
 80139c8:	f1b9 0901 	subs.w	r9, r9, #1
 80139cc:	d0a2      	beq.n	8013914 <gd32_i2c_read+0x64>
 80139ce:	f240 5102 	movw	r1, #1282	; 0x502
 80139d2:	4630      	mov	r0, r6
 80139d4:	f000 fc80 	bl	80142d8 <i2c_flag_get>
 80139d8:	2800      	cmp	r0, #0
 80139da:	d0f5      	beq.n	80139c8 <gd32_i2c_read+0x118>
 80139dc:	4630      	mov	r0, r6
 80139de:	f000 fc71 	bl	80142c4 <i2c_stop_on_bus>
 80139e2:	e7c8      	b.n	8013976 <gd32_i2c_read+0xc6>
 80139e4:	3b01      	subs	r3, #1
 80139e6:	d1db      	bne.n	80139a0 <gd32_i2c_read+0xf0>
 80139e8:	e796      	b.n	8013918 <gd32_i2c_read+0x68>
 80139ea:	bf00      	nop
 80139ec:	40005400 	andmi	r5, r0, r0, lsl #8
 80139f0:	2000eb1c 	andcs	lr, r0, ip, lsl fp
 80139f4:	40005000 	andmi	r5, r0, r0

080139f8 <gd32_spi_dma_begin()>:
 80139f8:	b510      	push	{r4, lr}
 80139fa:	f240 6002 	movw	r0, #1538	; 0x602
 80139fe:	b088      	sub	sp, #32
 8013a00:	f7ff fb7e 	bl	8013100 <rcu_periph_clock_enable>
 8013a04:	f240 6003 	movw	r0, #1539	; 0x603
 8013a08:	f7ff fb7a 	bl	8013100 <rcu_periph_clock_enable>
 8013a0c:	f240 700f 	movw	r0, #1807	; 0x70f
 8013a10:	f7ff fb76 	bl	8013100 <rcu_periph_clock_enable>
 8013a14:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013a18:	f7ff fb72 	bl	8013100 <rcu_periph_clock_enable>
 8013a1c:	2338      	movs	r3, #56	; 0x38
 8013a1e:	2203      	movs	r2, #3
 8013a20:	2118      	movs	r1, #24
 8013a22:	4831      	ldr	r0, [pc, #196]	; (8013ae8 <gd32_spi_dma_begin()+0xf0>)
 8013a24:	f7ff fad4 	bl	8012fd0 <gpio_init>
 8013a28:	4c30      	ldr	r4, [pc, #192]	; (8013aec <gd32_spi_dma_begin()+0xf4>)
 8013a2a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013a2e:	2203      	movs	r2, #3
 8013a30:	2118      	movs	r1, #24
 8013a32:	482f      	ldr	r0, [pc, #188]	; (8013af0 <gd32_spi_dma_begin()+0xf8>)
 8013a34:	f7ff facc 	bl	8012fd0 <gpio_init>
 8013a38:	2101      	movs	r1, #1
 8013a3a:	482e      	ldr	r0, [pc, #184]	; (8013af4 <gd32_spi_dma_begin()+0xfc>)
 8013a3c:	f7ff fb1c 	bl	8013078 <gpio_pin_remap_config>
 8013a40:	6823      	ldr	r3, [r4, #0]
 8013a42:	f44f 4060 	mov.w	r0, #57344	; 0xe000
 8013a46:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8013a4a:	6023      	str	r3, [r4, #0]
 8013a4c:	f7ff fb82 	bl	8013154 <rcu_pll2_config>
 8013a50:	6823      	ldr	r3, [r4, #0]
 8013a52:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8013a56:	6023      	str	r3, [r4, #0]
 8013a58:	6823      	ldr	r3, [r4, #0]
 8013a5a:	0098      	lsls	r0, r3, #2
 8013a5c:	d5fc      	bpl.n	8013a58 <gd32_spi_dma_begin()+0x60>
 8013a5e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8013a62:	f7ff fba1 	bl	80131a8 <rcu_i2s2_clock_config>
 8013a66:	4824      	ldr	r0, [pc, #144]	; (8013af8 <gd32_spi_dma_begin()+0x100>)
 8013a68:	f000 fcbf 	bl	80143ea <i2s_disable>
 8013a6c:	2300      	movs	r3, #0
 8013a6e:	4923      	ldr	r1, [pc, #140]	; (8013afc <gd32_spi_dma_begin()+0x104>)
 8013a70:	461a      	mov	r2, r3
 8013a72:	4821      	ldr	r0, [pc, #132]	; (8013af8 <gd32_spi_dma_begin()+0x100>)
 8013a74:	f000 fc5c 	bl	8014330 <i2s_psc_config>
 8013a78:	2300      	movs	r3, #0
 8013a7a:	2210      	movs	r2, #16
 8013a7c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8013a80:	481d      	ldr	r0, [pc, #116]	; (8013af8 <gd32_spi_dma_begin()+0x100>)
 8013a82:	f000 fc46 	bl	8014312 <i2s_init>
 8013a86:	481c      	ldr	r0, [pc, #112]	; (8013af8 <gd32_spi_dma_begin()+0x100>)
 8013a88:	f000 fcaa 	bl	80143e0 <i2s_enable>
 8013a8c:	f240 5001 	movw	r0, #1281	; 0x501
 8013a90:	f7ff fb36 	bl	8013100 <rcu_periph_clock_enable>
 8013a94:	2101      	movs	r1, #1
 8013a96:	481a      	ldr	r0, [pc, #104]	; (8013b00 <gd32_spi_dma_begin()+0x108>)
 8013a98:	f000 fb0e 	bl	80140b8 <dma_deinit>
 8013a9c:	a801      	add	r0, sp, #4
 8013a9e:	f000 fb27 	bl	80140f0 <dma_struct_para_init>
 8013aa2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013aa6:	2401      	movs	r4, #1
 8013aa8:	9304      	str	r3, [sp, #16]
 8013aaa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8013aae:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013ab2:	4914      	ldr	r1, [pc, #80]	; (8013b04 <gd32_spi_dma_begin()+0x10c>)
 8013ab4:	9206      	str	r2, [sp, #24]
 8013ab6:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8013aba:	aa01      	add	r2, sp, #4
 8013abc:	4621      	mov	r1, r4
 8013abe:	4810      	ldr	r0, [pc, #64]	; (8013b00 <gd32_spi_dma_begin()+0x108>)
 8013ac0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ac4:	f88d 401e 	strb.w	r4, [sp, #30]
 8013ac8:	f000 fb1c 	bl	8014104 <dma_init>
 8013acc:	4621      	mov	r1, r4
 8013ace:	480c      	ldr	r0, [pc, #48]	; (8013b00 <gd32_spi_dma_begin()+0x108>)
 8013ad0:	f000 fb52 	bl	8014178 <dma_circulation_disable>
 8013ad4:	4621      	mov	r1, r4
 8013ad6:	480a      	ldr	r0, [pc, #40]	; (8013b00 <gd32_spi_dma_begin()+0x108>)
 8013ad8:	f000 fb5e 	bl	8014198 <dma_memory_to_memory_disable>
 8013adc:	2200      	movs	r2, #0
 8013ade:	4b0a      	ldr	r3, [pc, #40]	; (8013b08 <gd32_spi_dma_begin()+0x110>)
 8013ae0:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 8013ae4:	b008      	add	sp, #32
 8013ae6:	bd10      	pop	{r4, pc}
 8013ae8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013aec:	40021000 	andmi	r1, r2, r0
 8013af0:	40010800 	andmi	r0, r1, r0, lsl #16
 8013af4:	00300400 	eorseq	r0, r0, r0, lsl #8
 8013af8:	40003c00 	andmi	r3, r0, r0, lsl #24
 8013afc:	00030d40 	andeq	r0, r3, r0, asr #26
 8013b00:	40020400 	andmi	r0, r2, r0, lsl #8
 8013b04:	40003c0c 	andmi	r3, r0, ip, lsl #24
 8013b08:	40020000 	andmi	r0, r2, r0

08013b0c <gd32_spi_dma_set_speed_hz(unsigned int)>:
 8013b0c:	b538      	push	{r3, r4, r5, lr}
 8013b0e:	4c08      	ldr	r4, [pc, #32]	; (8013b30 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 8013b10:	4605      	mov	r5, r0
 8013b12:	4620      	mov	r0, r4
 8013b14:	f000 fc69 	bl	80143ea <i2s_disable>
 8013b18:	2300      	movs	r3, #0
 8013b1a:	4620      	mov	r0, r4
 8013b1c:	461a      	mov	r2, r3
 8013b1e:	0969      	lsrs	r1, r5, #5
 8013b20:	f000 fc06 	bl	8014330 <i2s_psc_config>
 8013b24:	4620      	mov	r0, r4
 8013b26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013b2a:	f000 bc59 	b.w	80143e0 <i2s_enable>
 8013b2e:	bf00      	nop
 8013b30:	40003c00 	andmi	r3, r0, r0, lsl #24

08013b34 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 8013b34:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8013b38:	6003      	str	r3, [r0, #0]
 8013b3a:	4801      	ldr	r0, [pc, #4]	; (8013b40 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 8013b3c:	4770      	bx	lr
 8013b3e:	bf00      	nop
 8013b40:	2000eb20 	andcs	lr, r0, r0, lsr #22

08013b44 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 8013b44:	4a0a      	ldr	r2, [pc, #40]	; (8013b70 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 8013b46:	3101      	adds	r1, #1
 8013b48:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 8013b4c:	f3c1 014f 	ubfx	r1, r1, #1, #16
 8013b50:	f023 0301 	bic.w	r3, r3, #1
 8013b54:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8013b58:	f043 0301 	orr.w	r3, r3, #1
 8013b5c:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 8013b60:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 8013b64:	4803      	ldr	r0, [pc, #12]	; (8013b74 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 8013b66:	2100      	movs	r1, #0
 8013b68:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8013b6c:	f000 bc42 	b.w	80143f4 <spi_dma_enable>
 8013b70:	40020000 	andmi	r0, r2, r0
 8013b74:	40003c00 	andmi	r3, r0, r0, lsl #24

08013b78 <gd32_spi_dma_tx_is_active()>:
 8013b78:	4b03      	ldr	r3, [pc, #12]	; (8013b88 <gd32_spi_dma_tx_is_active()+0x10>)
 8013b7a:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 8013b7e:	3800      	subs	r0, #0
 8013b80:	bf18      	it	ne
 8013b82:	2001      	movne	r0, #1
 8013b84:	4770      	bx	lr
 8013b86:	bf00      	nop
 8013b88:	40020000 	andmi	r0, r2, r0

08013b8c <gd32_uart_begin>:
 8013b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013b8e:	461e      	mov	r6, r3
 8013b90:	4b63      	ldr	r3, [pc, #396]	; (8013d20 <gd32_uart_begin+0x194>)
 8013b92:	4604      	mov	r4, r0
 8013b94:	4298      	cmp	r0, r3
 8013b96:	460f      	mov	r7, r1
 8013b98:	4615      	mov	r5, r2
 8013b9a:	d03b      	beq.n	8013c14 <gd32_uart_begin+0x88>
 8013b9c:	d80a      	bhi.n	8013bb4 <gd32_uart_begin+0x28>
 8013b9e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013ba2:	4298      	cmp	r0, r3
 8013ba4:	d02f      	beq.n	8013c06 <gd32_uart_begin+0x7a>
 8013ba6:	f240 7012 	movw	r0, #1810	; 0x712
 8013baa:	f7ff faa9 	bl	8013100 <rcu_periph_clock_enable>
 8013bae:	f240 6004 	movw	r0, #1540	; 0x604
 8013bb2:	e008      	b.n	8013bc6 <gd32_uart_begin+0x3a>
 8013bb4:	4b5b      	ldr	r3, [pc, #364]	; (8013d24 <gd32_uart_begin+0x198>)
 8013bb6:	4298      	cmp	r0, r3
 8013bb8:	d02f      	beq.n	8013c1a <gd32_uart_begin+0x8e>
 8013bba:	f240 600e 	movw	r0, #1550	; 0x60e
 8013bbe:	f7ff fa9f 	bl	8013100 <rcu_periph_clock_enable>
 8013bc2:	f240 6003 	movw	r0, #1539	; 0x603
 8013bc6:	f7ff fa9b 	bl	8013100 <rcu_periph_clock_enable>
 8013bca:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013bce:	f7ff fa97 	bl	8013100 <rcu_periph_clock_enable>
 8013bd2:	4b53      	ldr	r3, [pc, #332]	; (8013d20 <gd32_uart_begin+0x194>)
 8013bd4:	429c      	cmp	r4, r3
 8013bd6:	f000 8084 	beq.w	8013ce2 <gd32_uart_begin+0x156>
 8013bda:	d829      	bhi.n	8013c30 <gd32_uart_begin+0xa4>
 8013bdc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013be0:	429c      	cmp	r4, r3
 8013be2:	d071      	beq.n	8013cc8 <gd32_uart_begin+0x13c>
 8013be4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013be8:	2203      	movs	r2, #3
 8013bea:	2118      	movs	r1, #24
 8013bec:	484e      	ldr	r0, [pc, #312]	; (8013d28 <gd32_uart_begin+0x19c>)
 8013bee:	f7ff f9ef 	bl	8012fd0 <gpio_init>
 8013bf2:	2104      	movs	r1, #4
 8013bf4:	484c      	ldr	r0, [pc, #304]	; (8013d28 <gd32_uart_begin+0x19c>)
 8013bf6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013bfa:	2203      	movs	r2, #3
 8013bfc:	f7ff f9e8 	bl	8012fd0 <gpio_init>
 8013c00:	2101      	movs	r1, #1
 8013c02:	484a      	ldr	r0, [pc, #296]	; (8013d2c <gd32_uart_begin+0x1a0>)
 8013c04:	e025      	b.n	8013c52 <gd32_uart_begin+0xc6>
 8013c06:	f240 7011 	movw	r0, #1809	; 0x711
 8013c0a:	f7ff fa79 	bl	8013100 <rcu_periph_clock_enable>
 8013c0e:	f240 6002 	movw	r0, #1538	; 0x602
 8013c12:	e7d8      	b.n	8013bc6 <gd32_uart_begin+0x3a>
 8013c14:	f240 7013 	movw	r0, #1811	; 0x713
 8013c18:	e7c7      	b.n	8013baa <gd32_uart_begin+0x1e>
 8013c1a:	f240 7014 	movw	r0, #1812	; 0x714
 8013c1e:	f7ff fa6f 	bl	8013100 <rcu_periph_clock_enable>
 8013c22:	f240 6004 	movw	r0, #1540	; 0x604
 8013c26:	f7ff fa6b 	bl	8013100 <rcu_periph_clock_enable>
 8013c2a:	f240 6005 	movw	r0, #1541	; 0x605
 8013c2e:	e7ca      	b.n	8013bc6 <gd32_uart_begin+0x3a>
 8013c30:	4b3c      	ldr	r3, [pc, #240]	; (8013d24 <gd32_uart_begin+0x198>)
 8013c32:	429c      	cmp	r4, r3
 8013c34:	d062      	beq.n	8013cfc <gd32_uart_begin+0x170>
 8013c36:	2340      	movs	r3, #64	; 0x40
 8013c38:	2203      	movs	r2, #3
 8013c3a:	2118      	movs	r1, #24
 8013c3c:	483c      	ldr	r0, [pc, #240]	; (8013d30 <gd32_uart_begin+0x1a4>)
 8013c3e:	f7ff f9c7 	bl	8012fd0 <gpio_init>
 8013c42:	2104      	movs	r1, #4
 8013c44:	483a      	ldr	r0, [pc, #232]	; (8013d30 <gd32_uart_begin+0x1a4>)
 8013c46:	2380      	movs	r3, #128	; 0x80
 8013c48:	2203      	movs	r2, #3
 8013c4a:	f7ff f9c1 	bl	8012fd0 <gpio_init>
 8013c4e:	2101      	movs	r1, #1
 8013c50:	2004      	movs	r0, #4
 8013c52:	f7ff fa11 	bl	8013078 <gpio_pin_remap_config>
 8013c56:	4620      	mov	r0, r4
 8013c58:	f7ff fc6a 	bl	8013530 <usart_deinit>
 8013c5c:	68e3      	ldr	r3, [r4, #12]
 8013c5e:	4639      	mov	r1, r7
 8013c60:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013c64:	4620      	mov	r0, r4
 8013c66:	60e3      	str	r3, [r4, #12]
 8013c68:	f7ff fca2 	bl	80135b0 <usart_baudrate_set>
 8013c6c:	f1a5 0309 	sub.w	r3, r5, #9
 8013c70:	4259      	negs	r1, r3
 8013c72:	4159      	adcs	r1, r3
 8013c74:	4620      	mov	r0, r4
 8013c76:	0309      	lsls	r1, r1, #12
 8013c78:	f7ff fcca 	bl	8013610 <usart_word_length_set>
 8013c7c:	9906      	ldr	r1, [sp, #24]
 8013c7e:	4620      	mov	r0, r4
 8013c80:	1e8a      	subs	r2, r1, #2
 8013c82:	4251      	negs	r1, r2
 8013c84:	4151      	adcs	r1, r2
 8013c86:	0349      	lsls	r1, r1, #13
 8013c88:	f7ff fcca 	bl	8013620 <usart_stop_bit_set>
 8013c8c:	2e01      	cmp	r6, #1
 8013c8e:	d041      	beq.n	8013d14 <gd32_uart_begin+0x188>
 8013c90:	2e02      	cmp	r6, #2
 8013c92:	d142      	bne.n	8013d1a <gd32_uart_begin+0x18e>
 8013c94:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013c98:	4620      	mov	r0, r4
 8013c9a:	f7ff fcb1 	bl	8013600 <usart_parity_config>
 8013c9e:	2100      	movs	r1, #0
 8013ca0:	4620      	mov	r0, r4
 8013ca2:	f7ff fcd1 	bl	8013648 <usart_hardware_flow_rts_config>
 8013ca6:	2100      	movs	r1, #0
 8013ca8:	4620      	mov	r0, r4
 8013caa:	f7ff fcd3 	bl	8013654 <usart_hardware_flow_cts_config>
 8013cae:	2104      	movs	r1, #4
 8013cb0:	4620      	mov	r0, r4
 8013cb2:	f7ff fcc3 	bl	801363c <usart_receive_config>
 8013cb6:	2108      	movs	r1, #8
 8013cb8:	4620      	mov	r0, r4
 8013cba:	f7ff fcb9 	bl	8013630 <usart_transmit_config>
 8013cbe:	68e3      	ldr	r3, [r4, #12]
 8013cc0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013cc4:	60e3      	str	r3, [r4, #12]
 8013cc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013cc8:	2304      	movs	r3, #4
 8013cca:	2203      	movs	r2, #3
 8013ccc:	2118      	movs	r1, #24
 8013cce:	4819      	ldr	r0, [pc, #100]	; (8013d34 <gd32_uart_begin+0x1a8>)
 8013cd0:	f7ff f97e 	bl	8012fd0 <gpio_init>
 8013cd4:	2308      	movs	r3, #8
 8013cd6:	2203      	movs	r2, #3
 8013cd8:	2104      	movs	r1, #4
 8013cda:	4816      	ldr	r0, [pc, #88]	; (8013d34 <gd32_uart_begin+0x1a8>)
 8013cdc:	f7ff f978 	bl	8012fd0 <gpio_init>
 8013ce0:	e7b9      	b.n	8013c56 <gd32_uart_begin+0xca>
 8013ce2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013ce6:	2203      	movs	r2, #3
 8013ce8:	2118      	movs	r1, #24
 8013cea:	480f      	ldr	r0, [pc, #60]	; (8013d28 <gd32_uart_begin+0x19c>)
 8013cec:	f7ff f970 	bl	8012fd0 <gpio_init>
 8013cf0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013cf4:	2203      	movs	r2, #3
 8013cf6:	2104      	movs	r1, #4
 8013cf8:	480b      	ldr	r0, [pc, #44]	; (8013d28 <gd32_uart_begin+0x19c>)
 8013cfa:	e7ef      	b.n	8013cdc <gd32_uart_begin+0x150>
 8013cfc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013d00:	2203      	movs	r2, #3
 8013d02:	2118      	movs	r1, #24
 8013d04:	4808      	ldr	r0, [pc, #32]	; (8013d28 <gd32_uart_begin+0x19c>)
 8013d06:	f7ff f963 	bl	8012fd0 <gpio_init>
 8013d0a:	2304      	movs	r3, #4
 8013d0c:	2203      	movs	r2, #3
 8013d0e:	4619      	mov	r1, r3
 8013d10:	4809      	ldr	r0, [pc, #36]	; (8013d38 <gd32_uart_begin+0x1ac>)
 8013d12:	e7e3      	b.n	8013cdc <gd32_uart_begin+0x150>
 8013d14:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8013d18:	e7be      	b.n	8013c98 <gd32_uart_begin+0x10c>
 8013d1a:	2100      	movs	r1, #0
 8013d1c:	e7bc      	b.n	8013c98 <gd32_uart_begin+0x10c>
 8013d1e:	bf00      	nop
 8013d20:	40004c00 	andmi	r4, r0, r0, lsl #24
 8013d24:	40005000 	andmi	r5, r0, r0
 8013d28:	40011000 	andmi	r1, r1, r0
 8013d2c:	00140010 	andseq	r0, r4, r0, lsl r0
 8013d30:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013d34:	40010800 	andmi	r0, r1, r0, lsl #16
 8013d38:	40011400 	andmi	r1, r1, r0, lsl #8

08013d3c <micros_init()>:
 8013d3c:	4770      	bx	lr
	...

08013d40 <udelay_init()>:
 8013d40:	4a07      	ldr	r2, [pc, #28]	; (8013d60 <udelay_init()+0x20>)
 8013d42:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8013d46:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8013d4a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013d4e:	2200      	movs	r2, #0
 8013d50:	4b04      	ldr	r3, [pc, #16]	; (8013d64 <udelay_init()+0x24>)
 8013d52:	605a      	str	r2, [r3, #4]
 8013d54:	681a      	ldr	r2, [r3, #0]
 8013d56:	f042 0201 	orr.w	r2, r2, #1
 8013d5a:	601a      	str	r2, [r3, #0]
 8013d5c:	4770      	bx	lr
 8013d5e:	bf00      	nop
 8013d60:	e000ed00 	and	lr, r0, r0, lsl #26
 8013d64:	e0001000 	and	r1, r0, r0

08013d68 <udelay(unsigned int, unsigned int)>:
 8013d68:	236c      	movs	r3, #108	; 0x6c
 8013d6a:	b530      	push	{r4, r5, lr}
 8013d6c:	4358      	muls	r0, r3
 8013d6e:	b909      	cbnz	r1, 8013d74 <udelay(unsigned int, unsigned int)+0xc>
 8013d70:	4b08      	ldr	r3, [pc, #32]	; (8013d94 <udelay(unsigned int, unsigned int)+0x2c>)
 8013d72:	6859      	ldr	r1, [r3, #4]
 8013d74:	2300      	movs	r3, #0
 8013d76:	4c07      	ldr	r4, [pc, #28]	; (8013d94 <udelay(unsigned int, unsigned int)+0x2c>)
 8013d78:	6862      	ldr	r2, [r4, #4]
 8013d7a:	4291      	cmp	r1, r2
 8013d7c:	d0fc      	beq.n	8013d78 <udelay(unsigned int, unsigned int)+0x10>
 8013d7e:	bf2a      	itet	cs
 8013d80:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8013d84:	189b      	addcc	r3, r3, r2
 8013d86:	195b      	addcs	r3, r3, r5
 8013d88:	1a5b      	subs	r3, r3, r1
 8013d8a:	4283      	cmp	r3, r0
 8013d8c:	d300      	bcc.n	8013d90 <udelay(unsigned int, unsigned int)+0x28>
 8013d8e:	bd30      	pop	{r4, r5, pc}
 8013d90:	4611      	mov	r1, r2
 8013d92:	e7f1      	b.n	8013d78 <udelay(unsigned int, unsigned int)+0x10>
 8013d94:	e0001000 	and	r1, r0, r0

08013d98 <emac_start(unsigned char*)>:
 8013d98:	b538      	push	{r3, r4, r5, lr}
 8013d9a:	4605      	mov	r5, r0
 8013d9c:	f240 6002 	movw	r0, #1538	; 0x602
 8013da0:	f7ff f9ae 	bl	8013100 <rcu_periph_clock_enable>
 8013da4:	f240 6003 	movw	r0, #1539	; 0x603
 8013da8:	f7ff f9aa 	bl	8013100 <rcu_periph_clock_enable>
 8013dac:	f240 6004 	movw	r0, #1540	; 0x604
 8013db0:	f7ff f9a6 	bl	8013100 <rcu_periph_clock_enable>
 8013db4:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013db8:	f7ff f9a2 	bl	8013100 <rcu_periph_clock_enable>
 8013dbc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013dc0:	2203      	movs	r2, #3
 8013dc2:	2118      	movs	r1, #24
 8013dc4:	4843      	ldr	r0, [pc, #268]	; (8013ed4 <emac_start(unsigned char*)+0x13c>)
 8013dc6:	f7ff f903 	bl	8012fd0 <gpio_init>
 8013dca:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8013dce:	f7ff f9c1 	bl	8013154 <rcu_pll2_config>
 8013dd2:	201c      	movs	r0, #28
 8013dd4:	f7ff fa62 	bl	801329c <rcu_osci_on>
 8013dd8:	201c      	movs	r0, #28
 8013dda:	f7ff f9ff 	bl	80131dc <rcu_osci_stab_wait>
 8013dde:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8013de2:	f7ff f9ad 	bl	8013140 <rcu_ckout0_config>
 8013de6:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8013dea:	f7ff f975 	bl	80130d8 <gpio_ethernet_phy_select>
 8013dee:	2302      	movs	r3, #2
 8013df0:	2203      	movs	r2, #3
 8013df2:	2104      	movs	r1, #4
 8013df4:	4837      	ldr	r0, [pc, #220]	; (8013ed4 <emac_start(unsigned char*)+0x13c>)
 8013df6:	f7ff f8eb 	bl	8012fd0 <gpio_init>
 8013dfa:	2304      	movs	r3, #4
 8013dfc:	2203      	movs	r2, #3
 8013dfe:	2118      	movs	r1, #24
 8013e00:	4834      	ldr	r0, [pc, #208]	; (8013ed4 <emac_start(unsigned char*)+0x13c>)
 8013e02:	f7ff f8e5 	bl	8012fd0 <gpio_init>
 8013e06:	2380      	movs	r3, #128	; 0x80
 8013e08:	2203      	movs	r2, #3
 8013e0a:	2104      	movs	r1, #4
 8013e0c:	4831      	ldr	r0, [pc, #196]	; (8013ed4 <emac_start(unsigned char*)+0x13c>)
 8013e0e:	f7ff f8df 	bl	8012fd0 <gpio_init>
 8013e12:	2302      	movs	r3, #2
 8013e14:	2203      	movs	r2, #3
 8013e16:	2118      	movs	r1, #24
 8013e18:	482f      	ldr	r0, [pc, #188]	; (8013ed8 <emac_start(unsigned char*)+0x140>)
 8013e1a:	f7ff f8d9 	bl	8012fd0 <gpio_init>
 8013e1e:	2310      	movs	r3, #16
 8013e20:	2203      	movs	r2, #3
 8013e22:	2104      	movs	r1, #4
 8013e24:	482c      	ldr	r0, [pc, #176]	; (8013ed8 <emac_start(unsigned char*)+0x140>)
 8013e26:	f7ff f8d3 	bl	8012fd0 <gpio_init>
 8013e2a:	2320      	movs	r3, #32
 8013e2c:	2203      	movs	r2, #3
 8013e2e:	2104      	movs	r1, #4
 8013e30:	4829      	ldr	r0, [pc, #164]	; (8013ed8 <emac_start(unsigned char*)+0x140>)
 8013e32:	f7ff f8cd 	bl	8012fd0 <gpio_init>
 8013e36:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013e3a:	2203      	movs	r2, #3
 8013e3c:	2118      	movs	r1, #24
 8013e3e:	4827      	ldr	r0, [pc, #156]	; (8013edc <emac_start(unsigned char*)+0x144>)
 8013e40:	f7ff f8c6 	bl	8012fd0 <gpio_init>
 8013e44:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013e48:	2203      	movs	r2, #3
 8013e4a:	2118      	movs	r1, #24
 8013e4c:	4823      	ldr	r0, [pc, #140]	; (8013edc <emac_start(unsigned char*)+0x144>)
 8013e4e:	f7ff f8bf 	bl	8012fd0 <gpio_init>
 8013e52:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013e56:	2203      	movs	r2, #3
 8013e58:	2118      	movs	r1, #24
 8013e5a:	4820      	ldr	r0, [pc, #128]	; (8013edc <emac_start(unsigned char*)+0x144>)
 8013e5c:	f7ff f8b8 	bl	8012fd0 <gpio_init>
 8013e60:	f240 500e 	movw	r0, #1294	; 0x50e
 8013e64:	f7ff f94c 	bl	8013100 <rcu_periph_clock_enable>
 8013e68:	f240 500f 	movw	r0, #1295	; 0x50f
 8013e6c:	f7ff f948 	bl	8013100 <rcu_periph_clock_enable>
 8013e70:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8013e74:	f7ff f944 	bl	8013100 <rcu_periph_clock_enable>
 8013e78:	f7ff f812 	bl	8012ea0 <enet_deinit>
 8013e7c:	f7fe fc70 	bl	8012760 <enet_software_reset>
 8013e80:	4604      	mov	r4, r0
 8013e82:	b138      	cbz	r0, 8013e94 <emac_start(unsigned char*)+0xfc>
 8013e84:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8013e88:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013e8c:	2001      	movs	r0, #1
 8013e8e:	f7fe fdeb 	bl	8012a68 <enet_init>
 8013e92:	4604      	mov	r4, r0
 8013e94:	4628      	mov	r0, r5
 8013e96:	f000 fab7 	bl	8014408 <mac_address_get(unsigned char*)>
 8013e9a:	4629      	mov	r1, r5
 8013e9c:	2000      	movs	r0, #0
 8013e9e:	f7fe fd43 	bl	8012928 <enet_mac_address_set>
 8013ea2:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8013ea6:	f7fe fc6f 	bl	8012788 <enet_descriptors_chain_init>
 8013eaa:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8013eae:	f7fe fc6b 	bl	8012788 <enet_descriptors_chain_init>
 8013eb2:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013eb6:	480a      	ldr	r0, [pc, #40]	; (8013ee0 <emac_start(unsigned char*)+0x148>)
 8013eb8:	f7fe fd30 	bl	801291c <enet_transmit_checksum_config>
 8013ebc:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013ec0:	4808      	ldr	r0, [pc, #32]	; (8013ee4 <emac_start(unsigned char*)+0x14c>)
 8013ec2:	f7fe fd2b 	bl	801291c <enet_transmit_checksum_config>
 8013ec6:	f7fe ff63 	bl	8012d90 <enet_enable>
 8013eca:	fab4 f084 	clz	r0, r4
 8013ece:	0940      	lsrs	r0, r0, #5
 8013ed0:	4240      	negs	r0, r0
 8013ed2:	bd38      	pop	{r3, r4, r5, pc}
 8013ed4:	40010800 	andmi	r0, r1, r0, lsl #16
 8013ed8:	40011000 	andmi	r1, r1, r0
 8013edc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013ee0:	2000eafc 	strdcs	lr, [r0], -ip
 8013ee4:	2000eb0c 	andcs	lr, r0, ip, lsl #22

08013ee8 <adc_mode_config>:
 8013ee8:	4b06      	ldr	r3, [pc, #24]	; (8013f04 <adc_mode_config+0x1c>)
 8013eea:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013eee:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8013ef2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013ef6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013efa:	4302      	orrs	r2, r0
 8013efc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013f00:	4770      	bx	lr
 8013f02:	bf00      	nop
 8013f04:	40012000 	andmi	r2, r1, r0

08013f08 <adc_special_function_config>:
 8013f08:	b510      	push	{r4, lr}
 8013f0a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8013f0e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8013f12:	f001 0102 	and.w	r1, r1, #2
 8013f16:	b17a      	cbz	r2, 8013f38 <adc_special_function_config+0x30>
 8013f18:	b11b      	cbz	r3, 8013f22 <adc_special_function_config+0x1a>
 8013f1a:	6843      	ldr	r3, [r0, #4]
 8013f1c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013f20:	6043      	str	r3, [r0, #4]
 8013f22:	b11c      	cbz	r4, 8013f2c <adc_special_function_config+0x24>
 8013f24:	6843      	ldr	r3, [r0, #4]
 8013f26:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8013f2a:	6043      	str	r3, [r0, #4]
 8013f2c:	b119      	cbz	r1, 8013f36 <adc_special_function_config+0x2e>
 8013f2e:	6883      	ldr	r3, [r0, #8]
 8013f30:	f043 0302 	orr.w	r3, r3, #2
 8013f34:	6083      	str	r3, [r0, #8]
 8013f36:	bd10      	pop	{r4, pc}
 8013f38:	b11b      	cbz	r3, 8013f42 <adc_special_function_config+0x3a>
 8013f3a:	6843      	ldr	r3, [r0, #4]
 8013f3c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013f40:	6043      	str	r3, [r0, #4]
 8013f42:	b11c      	cbz	r4, 8013f4c <adc_special_function_config+0x44>
 8013f44:	6843      	ldr	r3, [r0, #4]
 8013f46:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8013f4a:	6043      	str	r3, [r0, #4]
 8013f4c:	2900      	cmp	r1, #0
 8013f4e:	d0f2      	beq.n	8013f36 <adc_special_function_config+0x2e>
 8013f50:	6883      	ldr	r3, [r0, #8]
 8013f52:	f023 0302 	bic.w	r3, r3, #2
 8013f56:	e7ed      	b.n	8013f34 <adc_special_function_config+0x2c>

08013f58 <adc_data_alignment_config>:
 8013f58:	6883      	ldr	r3, [r0, #8]
 8013f5a:	b119      	cbz	r1, 8013f64 <adc_data_alignment_config+0xc>
 8013f5c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013f60:	6083      	str	r3, [r0, #8]
 8013f62:	4770      	bx	lr
 8013f64:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013f68:	e7fa      	b.n	8013f60 <adc_data_alignment_config+0x8>

08013f6a <adc_enable>:
 8013f6a:	6883      	ldr	r3, [r0, #8]
 8013f6c:	07db      	lsls	r3, r3, #31
 8013f6e:	bf5e      	ittt	pl
 8013f70:	6883      	ldrpl	r3, [r0, #8]
 8013f72:	f043 0301 	orrpl.w	r3, r3, #1
 8013f76:	6083      	strpl	r3, [r0, #8]
 8013f78:	4770      	bx	lr

08013f7a <adc_calibration_enable>:
 8013f7a:	6883      	ldr	r3, [r0, #8]
 8013f7c:	f100 0208 	add.w	r2, r0, #8
 8013f80:	f043 0308 	orr.w	r3, r3, #8
 8013f84:	6083      	str	r3, [r0, #8]
 8013f86:	6813      	ldr	r3, [r2, #0]
 8013f88:	0719      	lsls	r1, r3, #28
 8013f8a:	d4fc      	bmi.n	8013f86 <adc_calibration_enable+0xc>
 8013f8c:	6883      	ldr	r3, [r0, #8]
 8013f8e:	f043 0304 	orr.w	r3, r3, #4
 8013f92:	6083      	str	r3, [r0, #8]
 8013f94:	6813      	ldr	r3, [r2, #0]
 8013f96:	075b      	lsls	r3, r3, #29
 8013f98:	d4fc      	bmi.n	8013f94 <adc_calibration_enable+0x1a>
 8013f9a:	4770      	bx	lr

08013f9c <adc_tempsensor_vrefint_enable>:
 8013f9c:	4a03      	ldr	r2, [pc, #12]	; (8013fac <adc_tempsensor_vrefint_enable+0x10>)
 8013f9e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8013fa2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8013fa6:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8013faa:	4770      	bx	lr
 8013fac:	40012000 	andmi	r2, r1, r0

08013fb0 <adc_channel_length_config>:
 8013fb0:	2901      	cmp	r1, #1
 8013fb2:	d002      	beq.n	8013fba <adc_channel_length_config+0xa>
 8013fb4:	2902      	cmp	r1, #2
 8013fb6:	d00c      	beq.n	8013fd2 <adc_channel_length_config+0x22>
 8013fb8:	4770      	bx	lr
 8013fba:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013fbc:	3a01      	subs	r2, #1
 8013fbe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8013fc2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8013fc4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013fc6:	0512      	lsls	r2, r2, #20
 8013fc8:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8013fcc:	431a      	orrs	r2, r3
 8013fce:	62c2      	str	r2, [r0, #44]	; 0x2c
 8013fd0:	4770      	bx	lr
 8013fd2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013fd4:	3a01      	subs	r2, #1
 8013fd6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8013fda:	6383      	str	r3, [r0, #56]	; 0x38
 8013fdc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013fde:	0512      	lsls	r2, r2, #20
 8013fe0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8013fe4:	431a      	orrs	r2, r3
 8013fe6:	6382      	str	r2, [r0, #56]	; 0x38
 8013fe8:	4770      	bx	lr

08013fea <adc_inserted_channel_config>:
 8013fea:	b530      	push	{r4, r5, lr}
 8013fec:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8013fee:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013ff0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8013ff4:	1a61      	subs	r1, r4, r1
 8013ff6:	f06f 0404 	mvn.w	r4, #4
 8013ffa:	4361      	muls	r1, r4
 8013ffc:	241f      	movs	r4, #31
 8013ffe:	310f      	adds	r1, #15
 8014000:	408c      	lsls	r4, r1
 8014002:	ea25 0504 	bic.w	r5, r5, r4
 8014006:	fa02 f101 	lsl.w	r1, r2, r1
 801400a:	4329      	orrs	r1, r5
 801400c:	2a09      	cmp	r2, #9
 801400e:	6381      	str	r1, [r0, #56]	; 0x38
 8014010:	d80b      	bhi.n	801402a <adc_inserted_channel_config+0x40>
 8014012:	2407      	movs	r4, #7
 8014014:	6901      	ldr	r1, [r0, #16]
 8014016:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801401a:	4094      	lsls	r4, r2
 801401c:	ea21 0104 	bic.w	r1, r1, r4
 8014020:	fa03 f202 	lsl.w	r2, r3, r2
 8014024:	430a      	orrs	r2, r1
 8014026:	6102      	str	r2, [r0, #16]
 8014028:	bd30      	pop	{r4, r5, pc}
 801402a:	2a11      	cmp	r2, #17
 801402c:	d8fc      	bhi.n	8014028 <adc_inserted_channel_config+0x3e>
 801402e:	2407      	movs	r4, #7
 8014030:	3a0a      	subs	r2, #10
 8014032:	68c1      	ldr	r1, [r0, #12]
 8014034:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014038:	4094      	lsls	r4, r2
 801403a:	ea21 0104 	bic.w	r1, r1, r4
 801403e:	4093      	lsls	r3, r2
 8014040:	430b      	orrs	r3, r1
 8014042:	60c3      	str	r3, [r0, #12]
 8014044:	e7f0      	b.n	8014028 <adc_inserted_channel_config+0x3e>

08014046 <adc_external_trigger_source_config>:
 8014046:	2901      	cmp	r1, #1
 8014048:	d002      	beq.n	8014050 <adc_external_trigger_source_config+0xa>
 801404a:	2902      	cmp	r1, #2
 801404c:	d008      	beq.n	8014060 <adc_external_trigger_source_config+0x1a>
 801404e:	4770      	bx	lr
 8014050:	6883      	ldr	r3, [r0, #8]
 8014052:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8014056:	6083      	str	r3, [r0, #8]
 8014058:	6883      	ldr	r3, [r0, #8]
 801405a:	4313      	orrs	r3, r2
 801405c:	6083      	str	r3, [r0, #8]
 801405e:	4770      	bx	lr
 8014060:	6883      	ldr	r3, [r0, #8]
 8014062:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014066:	e7f6      	b.n	8014056 <adc_external_trigger_source_config+0x10>

08014068 <adc_external_trigger_config>:
 8014068:	f001 0301 	and.w	r3, r1, #1
 801406c:	f001 0102 	and.w	r1, r1, #2
 8014070:	b152      	cbz	r2, 8014088 <adc_external_trigger_config+0x20>
 8014072:	b11b      	cbz	r3, 801407c <adc_external_trigger_config+0x14>
 8014074:	6883      	ldr	r3, [r0, #8]
 8014076:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801407a:	6083      	str	r3, [r0, #8]
 801407c:	b119      	cbz	r1, 8014086 <adc_external_trigger_config+0x1e>
 801407e:	6883      	ldr	r3, [r0, #8]
 8014080:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014084:	6083      	str	r3, [r0, #8]
 8014086:	4770      	bx	lr
 8014088:	b11b      	cbz	r3, 8014092 <adc_external_trigger_config+0x2a>
 801408a:	6883      	ldr	r3, [r0, #8]
 801408c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8014090:	6083      	str	r3, [r0, #8]
 8014092:	2900      	cmp	r1, #0
 8014094:	d0f7      	beq.n	8014086 <adc_external_trigger_config+0x1e>
 8014096:	6883      	ldr	r3, [r0, #8]
 8014098:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801409c:	e7f2      	b.n	8014084 <adc_external_trigger_config+0x1c>

0801409e <adc_software_trigger_enable>:
 801409e:	07ca      	lsls	r2, r1, #31
 80140a0:	bf42      	ittt	mi
 80140a2:	6883      	ldrmi	r3, [r0, #8]
 80140a4:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80140a8:	6083      	strmi	r3, [r0, #8]
 80140aa:	078b      	lsls	r3, r1, #30
 80140ac:	bf42      	ittt	mi
 80140ae:	6883      	ldrmi	r3, [r0, #8]
 80140b0:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80140b4:	6083      	strmi	r3, [r0, #8]
 80140b6:	4770      	bx	lr

080140b8 <dma_deinit>:
 80140b8:	4b0c      	ldr	r3, [pc, #48]	; (80140ec <dma_deinit+0x34>)
 80140ba:	4298      	cmp	r0, r3
 80140bc:	d102      	bne.n	80140c4 <dma_deinit+0xc>
 80140be:	2904      	cmp	r1, #4
 80140c0:	d900      	bls.n	80140c4 <dma_deinit+0xc>
 80140c2:	e7fe      	b.n	80140c2 <dma_deinit+0xa>
 80140c4:	2314      	movs	r3, #20
 80140c6:	fb03 0301 	mla	r3, r3, r1, r0
 80140ca:	689a      	ldr	r2, [r3, #8]
 80140cc:	0089      	lsls	r1, r1, #2
 80140ce:	f022 0201 	bic.w	r2, r2, #1
 80140d2:	609a      	str	r2, [r3, #8]
 80140d4:	2200      	movs	r2, #0
 80140d6:	609a      	str	r2, [r3, #8]
 80140d8:	60da      	str	r2, [r3, #12]
 80140da:	611a      	str	r2, [r3, #16]
 80140dc:	615a      	str	r2, [r3, #20]
 80140de:	230f      	movs	r3, #15
 80140e0:	6842      	ldr	r2, [r0, #4]
 80140e2:	408b      	lsls	r3, r1
 80140e4:	4313      	orrs	r3, r2
 80140e6:	6043      	str	r3, [r0, #4]
 80140e8:	4770      	bx	lr
 80140ea:	bf00      	nop
 80140ec:	40020400 	andmi	r0, r2, r0, lsl #8

080140f0 <dma_struct_para_init>:
 80140f0:	2300      	movs	r3, #0
 80140f2:	e9c0 3300 	strd	r3, r3, [r0]
 80140f6:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80140fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80140fe:	8303      	strh	r3, [r0, #24]
 8014100:	7683      	strb	r3, [r0, #26]
 8014102:	4770      	bx	lr

08014104 <dma_init>:
 8014104:	4b1b      	ldr	r3, [pc, #108]	; (8014174 <dma_init+0x70>)
 8014106:	b510      	push	{r4, lr}
 8014108:	4298      	cmp	r0, r3
 801410a:	d102      	bne.n	8014112 <dma_init+0xe>
 801410c:	2904      	cmp	r1, #4
 801410e:	d900      	bls.n	8014112 <dma_init+0xe>
 8014110:	e7fe      	b.n	8014110 <dma_init+0xc>
 8014112:	2314      	movs	r3, #20
 8014114:	fb03 0101 	mla	r1, r3, r1, r0
 8014118:	6813      	ldr	r3, [r2, #0]
 801411a:	610b      	str	r3, [r1, #16]
 801411c:	6893      	ldr	r3, [r2, #8]
 801411e:	614b      	str	r3, [r1, #20]
 8014120:	8a13      	ldrh	r3, [r2, #16]
 8014122:	60cb      	str	r3, [r1, #12]
 8014124:	68d4      	ldr	r4, [r2, #12]
 8014126:	6853      	ldr	r3, [r2, #4]
 8014128:	6888      	ldr	r0, [r1, #8]
 801412a:	4323      	orrs	r3, r4
 801412c:	6954      	ldr	r4, [r2, #20]
 801412e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8014132:	4323      	orrs	r3, r4
 8014134:	4303      	orrs	r3, r0
 8014136:	608b      	str	r3, [r1, #8]
 8014138:	7e13      	ldrb	r3, [r2, #24]
 801413a:	2b01      	cmp	r3, #1
 801413c:	688b      	ldr	r3, [r1, #8]
 801413e:	bf0c      	ite	eq
 8014140:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8014144:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8014148:	608b      	str	r3, [r1, #8]
 801414a:	7e53      	ldrb	r3, [r2, #25]
 801414c:	2b01      	cmp	r3, #1
 801414e:	688b      	ldr	r3, [r1, #8]
 8014150:	bf0c      	ite	eq
 8014152:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8014156:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 801415a:	608b      	str	r3, [r1, #8]
 801415c:	7e93      	ldrb	r3, [r2, #26]
 801415e:	b923      	cbnz	r3, 801416a <dma_init+0x66>
 8014160:	688b      	ldr	r3, [r1, #8]
 8014162:	f023 0310 	bic.w	r3, r3, #16
 8014166:	608b      	str	r3, [r1, #8]
 8014168:	bd10      	pop	{r4, pc}
 801416a:	688b      	ldr	r3, [r1, #8]
 801416c:	f043 0310 	orr.w	r3, r3, #16
 8014170:	e7f9      	b.n	8014166 <dma_init+0x62>
 8014172:	bf00      	nop
 8014174:	40020400 	andmi	r0, r2, r0, lsl #8

08014178 <dma_circulation_disable>:
 8014178:	4b06      	ldr	r3, [pc, #24]	; (8014194 <dma_circulation_disable+0x1c>)
 801417a:	4298      	cmp	r0, r3
 801417c:	d102      	bne.n	8014184 <dma_circulation_disable+0xc>
 801417e:	2904      	cmp	r1, #4
 8014180:	d900      	bls.n	8014184 <dma_circulation_disable+0xc>
 8014182:	e7fe      	b.n	8014182 <dma_circulation_disable+0xa>
 8014184:	2314      	movs	r3, #20
 8014186:	4359      	muls	r1, r3
 8014188:	3008      	adds	r0, #8
 801418a:	580b      	ldr	r3, [r1, r0]
 801418c:	f023 0320 	bic.w	r3, r3, #32
 8014190:	500b      	str	r3, [r1, r0]
 8014192:	4770      	bx	lr
 8014194:	40020400 	andmi	r0, r2, r0, lsl #8

08014198 <dma_memory_to_memory_disable>:
 8014198:	4b06      	ldr	r3, [pc, #24]	; (80141b4 <dma_memory_to_memory_disable+0x1c>)
 801419a:	4298      	cmp	r0, r3
 801419c:	d102      	bne.n	80141a4 <dma_memory_to_memory_disable+0xc>
 801419e:	2904      	cmp	r1, #4
 80141a0:	d900      	bls.n	80141a4 <dma_memory_to_memory_disable+0xc>
 80141a2:	e7fe      	b.n	80141a2 <dma_memory_to_memory_disable+0xa>
 80141a4:	2314      	movs	r3, #20
 80141a6:	4359      	muls	r1, r3
 80141a8:	3008      	adds	r0, #8
 80141aa:	580b      	ldr	r3, [r1, r0]
 80141ac:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80141b0:	500b      	str	r3, [r1, r0]
 80141b2:	4770      	bx	lr
 80141b4:	40020400 	andmi	r0, r2, r0, lsl #8

080141b8 <i2c_clock_config>:
 80141b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141ba:	4605      	mov	r5, r0
 80141bc:	2002      	movs	r0, #2
 80141be:	460c      	mov	r4, r1
 80141c0:	4617      	mov	r7, r2
 80141c2:	f7ff f86d 	bl	80132a0 <rcu_clock_freq_get>
 80141c6:	4603      	mov	r3, r0
 80141c8:	4828      	ldr	r0, [pc, #160]	; (801426c <i2c_clock_config+0xb4>)
 80141ca:	4a29      	ldr	r2, [pc, #164]	; (8014270 <i2c_clock_config+0xb8>)
 80141cc:	fbb3 f0f0 	udiv	r0, r3, r0
 80141d0:	4293      	cmp	r3, r2
 80141d2:	bf34      	ite	cc
 80141d4:	4601      	movcc	r1, r0
 80141d6:	2136      	movcs	r1, #54	; 0x36
 80141d8:	686e      	ldr	r6, [r5, #4]
 80141da:	4a26      	ldr	r2, [pc, #152]	; (8014274 <i2c_clock_config+0xbc>)
 80141dc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 80141e0:	430e      	orrs	r6, r1
 80141e2:	4294      	cmp	r4, r2
 80141e4:	606e      	str	r6, [r5, #4]
 80141e6:	d816      	bhi.n	8014216 <i2c_clock_config+0x5e>
 80141e8:	3001      	adds	r0, #1
 80141ea:	2835      	cmp	r0, #53	; 0x35
 80141ec:	d90d      	bls.n	801420a <i2c_clock_config+0x52>
 80141ee:	2236      	movs	r2, #54	; 0x36
 80141f0:	622a      	str	r2, [r5, #32]
 80141f2:	0064      	lsls	r4, r4, #1
 80141f4:	fbb3 f4f4 	udiv	r4, r3, r4
 80141f8:	2c04      	cmp	r4, #4
 80141fa:	bf38      	it	cc
 80141fc:	2404      	movcc	r4, #4
 80141fe:	69ea      	ldr	r2, [r5, #28]
 8014200:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8014204:	4314      	orrs	r4, r2
 8014206:	61ec      	str	r4, [r5, #28]
 8014208:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801420a:	2802      	cmp	r0, #2
 801420c:	d801      	bhi.n	8014212 <i2c_clock_config+0x5a>
 801420e:	2202      	movs	r2, #2
 8014210:	e7ee      	b.n	80141f0 <i2c_clock_config+0x38>
 8014212:	6228      	str	r0, [r5, #32]
 8014214:	e7ed      	b.n	80141f2 <i2c_clock_config+0x3a>
 8014216:	4a18      	ldr	r2, [pc, #96]	; (8014278 <i2c_clock_config+0xc0>)
 8014218:	4294      	cmp	r4, r2
 801421a:	d8f5      	bhi.n	8014208 <i2c_clock_config+0x50>
 801421c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014220:	4351      	muls	r1, r2
 8014222:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014226:	fbb1 f1f2 	udiv	r1, r1, r2
 801422a:	3101      	adds	r1, #1
 801422c:	6229      	str	r1, [r5, #32]
 801422e:	b9a7      	cbnz	r7, 801425a <i2c_clock_config+0xa2>
 8014230:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014234:	fbb3 f4f4 	udiv	r4, r3, r4
 8014238:	69eb      	ldr	r3, [r5, #28]
 801423a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801423e:	61eb      	str	r3, [r5, #28]
 8014240:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8014244:	b90b      	cbnz	r3, 801424a <i2c_clock_config+0x92>
 8014246:	f044 0401 	orr.w	r4, r4, #1
 801424a:	69eb      	ldr	r3, [r5, #28]
 801424c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014250:	61eb      	str	r3, [r5, #28]
 8014252:	69eb      	ldr	r3, [r5, #28]
 8014254:	4323      	orrs	r3, r4
 8014256:	61eb      	str	r3, [r5, #28]
 8014258:	e7d6      	b.n	8014208 <i2c_clock_config+0x50>
 801425a:	2219      	movs	r2, #25
 801425c:	4354      	muls	r4, r2
 801425e:	fbb3 f4f4 	udiv	r4, r3, r4
 8014262:	69eb      	ldr	r3, [r5, #28]
 8014264:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8014268:	e7e9      	b.n	801423e <i2c_clock_config+0x86>
 801426a:	bf00      	nop
 801426c:	000f4240 	andeq	r4, pc, r0, asr #4
 8014270:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8014274:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014278:	00061a80 	andeq	r1, r6, r0, lsl #21

0801427c <i2c_ack_config>:
 801427c:	6803      	ldr	r3, [r0, #0]
 801427e:	2901      	cmp	r1, #1
 8014280:	bf0c      	ite	eq
 8014282:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8014286:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 801428a:	6003      	str	r3, [r0, #0]
 801428c:	4770      	bx	lr

0801428e <i2c_ackpos_config>:
 801428e:	6803      	ldr	r3, [r0, #0]
 8014290:	b919      	cbnz	r1, 801429a <i2c_ackpos_config+0xc>
 8014292:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014296:	6003      	str	r3, [r0, #0]
 8014298:	4770      	bx	lr
 801429a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801429e:	e7fa      	b.n	8014296 <i2c_ackpos_config+0x8>

080142a0 <i2c_master_addressing>:
 80142a0:	3202      	adds	r2, #2
 80142a2:	bf0c      	ite	eq
 80142a4:	f021 0101 	biceq.w	r1, r1, #1
 80142a8:	f041 0101 	orrne.w	r1, r1, #1
 80142ac:	6101      	str	r1, [r0, #16]
 80142ae:	4770      	bx	lr

080142b0 <i2c_enable>:
 80142b0:	6803      	ldr	r3, [r0, #0]
 80142b2:	f043 0301 	orr.w	r3, r3, #1
 80142b6:	6003      	str	r3, [r0, #0]
 80142b8:	4770      	bx	lr

080142ba <i2c_start_on_bus>:
 80142ba:	6803      	ldr	r3, [r0, #0]
 80142bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80142c0:	6003      	str	r3, [r0, #0]
 80142c2:	4770      	bx	lr

080142c4 <i2c_stop_on_bus>:
 80142c4:	6803      	ldr	r3, [r0, #0]
 80142c6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80142ca:	6003      	str	r3, [r0, #0]
 80142cc:	4770      	bx	lr

080142ce <i2c_data_transmit>:
 80142ce:	6101      	str	r1, [r0, #16]
 80142d0:	4770      	bx	lr

080142d2 <i2c_data_receive>:
 80142d2:	6900      	ldr	r0, [r0, #16]
 80142d4:	b2c0      	uxtb	r0, r0
 80142d6:	4770      	bx	lr

080142d8 <i2c_flag_get>:
 80142d8:	098b      	lsrs	r3, r1, #6
 80142da:	581a      	ldr	r2, [r3, r0]
 80142dc:	2301      	movs	r3, #1
 80142de:	f001 011f 	and.w	r1, r1, #31
 80142e2:	408b      	lsls	r3, r1
 80142e4:	4213      	tst	r3, r2
 80142e6:	bf14      	ite	ne
 80142e8:	2001      	movne	r0, #1
 80142ea:	2000      	moveq	r0, #0
 80142ec:	4770      	bx	lr

080142ee <i2c_flag_clear>:
 80142ee:	f240 5301 	movw	r3, #1281	; 0x501
 80142f2:	4299      	cmp	r1, r3
 80142f4:	b510      	push	{r4, lr}
 80142f6:	d102      	bne.n	80142fe <i2c_flag_clear+0x10>
 80142f8:	6943      	ldr	r3, [r0, #20]
 80142fa:	6983      	ldr	r3, [r0, #24]
 80142fc:	bd10      	pop	{r4, pc}
 80142fe:	2201      	movs	r2, #1
 8014300:	098c      	lsrs	r4, r1, #6
 8014302:	5823      	ldr	r3, [r4, r0]
 8014304:	f001 011f 	and.w	r1, r1, #31
 8014308:	408a      	lsls	r2, r1
 801430a:	ea23 0302 	bic.w	r3, r3, r2
 801430e:	5023      	str	r3, [r4, r0]
 8014310:	e7f4      	b.n	80142fc <i2c_flag_clear+0xe>

08014312 <i2s_init>:
 8014312:	b510      	push	{r4, lr}
 8014314:	69c4      	ldr	r4, [r0, #28]
 8014316:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 801431a:	f024 0408 	bic.w	r4, r4, #8
 801431e:	0424      	lsls	r4, r4, #16
 8014320:	0c24      	lsrs	r4, r4, #16
 8014322:	431c      	orrs	r4, r3
 8014324:	4314      	orrs	r4, r2
 8014326:	430c      	orrs	r4, r1
 8014328:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 801432c:	61c4      	str	r4, [r0, #28]
 801432e:	bd10      	pop	{r4, pc}

08014330 <i2s_psc_config>:
 8014330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014334:	4698      	mov	r8, r3
 8014336:	2302      	movs	r3, #2
 8014338:	6203      	str	r3, [r0, #32]
 801433a:	4b26      	ldr	r3, [pc, #152]	; (80143d4 <i2s_psc_config+0xa4>)
 801433c:	4617      	mov	r7, r2
 801433e:	4298      	cmp	r0, r3
 8014340:	bf0c      	ite	eq
 8014342:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 8014346:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 801434a:	4a23      	ldr	r2, [pc, #140]	; (80143d8 <i2s_psc_config+0xa8>)
 801434c:	4605      	mov	r5, r0
 801434e:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8014350:	460e      	mov	r6, r1
 8014352:	4018      	ands	r0, r3
 8014354:	d036      	beq.n	80143c4 <i2s_psc_config+0x94>
 8014356:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8014358:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801435c:	1f99      	subs	r1, r3, #6
 801435e:	2908      	cmp	r1, #8
 8014360:	d82c      	bhi.n	80143bc <i2s_psc_config+0x8c>
 8014362:	3302      	adds	r3, #2
 8014364:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8014366:	481d      	ldr	r0, [pc, #116]	; (80143dc <i2s_psc_config+0xac>)
 8014368:	f3c2 1203 	ubfx	r2, r2, #4, #4
 801436c:	3201      	adds	r2, #1
 801436e:	fbb0 f0f2 	udiv	r0, r0, r2
 8014372:	4358      	muls	r0, r3
 8014374:	0040      	lsls	r0, r0, #1
 8014376:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 801437a:	f04f 030a 	mov.w	r3, #10
 801437e:	d124      	bne.n	80143ca <i2s_psc_config+0x9a>
 8014380:	0a04      	lsrs	r4, r0, #8
 8014382:	435c      	muls	r4, r3
 8014384:	fbb4 f6f6 	udiv	r6, r4, r6
 8014388:	230a      	movs	r3, #10
 801438a:	3605      	adds	r6, #5
 801438c:	fbb6 f6f3 	udiv	r6, r6, r3
 8014390:	f006 0301 	and.w	r3, r6, #1
 8014394:	0876      	lsrs	r6, r6, #1
 8014396:	1eb2      	subs	r2, r6, #2
 8014398:	2afd      	cmp	r2, #253	; 0xfd
 801439a:	bf86      	itte	hi
 801439c:	2300      	movhi	r3, #0
 801439e:	2602      	movhi	r6, #2
 80143a0:	021b      	lslls	r3, r3, #8
 80143a2:	431e      	orrs	r6, r3
 80143a4:	ea46 0608 	orr.w	r6, r6, r8
 80143a8:	622e      	str	r6, [r5, #32]
 80143aa:	69eb      	ldr	r3, [r5, #28]
 80143ac:	f023 0307 	bic.w	r3, r3, #7
 80143b0:	61eb      	str	r3, [r5, #28]
 80143b2:	69eb      	ldr	r3, [r5, #28]
 80143b4:	433b      	orrs	r3, r7
 80143b6:	61eb      	str	r3, [r5, #28]
 80143b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143bc:	2b0f      	cmp	r3, #15
 80143be:	bf08      	it	eq
 80143c0:	2314      	moveq	r3, #20
 80143c2:	e7cf      	b.n	8014364 <i2s_psc_config+0x34>
 80143c4:	f7fe ff6c 	bl	80132a0 <rcu_clock_freq_get>
 80143c8:	e7d5      	b.n	8014376 <i2s_psc_config+0x46>
 80143ca:	b90f      	cbnz	r7, 80143d0 <i2s_psc_config+0xa0>
 80143cc:	0944      	lsrs	r4, r0, #5
 80143ce:	e7d8      	b.n	8014382 <i2s_psc_config+0x52>
 80143d0:	0984      	lsrs	r4, r0, #6
 80143d2:	e7d6      	b.n	8014382 <i2s_psc_config+0x52>
 80143d4:	40003800 	andmi	r3, r0, r0, lsl #16
 80143d8:	40021000 	andmi	r1, r2, r0
 80143dc:	017d7840 	cmneq	sp, r0, asr #16

080143e0 <i2s_enable>:
 80143e0:	69c3      	ldr	r3, [r0, #28]
 80143e2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80143e6:	61c3      	str	r3, [r0, #28]
 80143e8:	4770      	bx	lr

080143ea <i2s_disable>:
 80143ea:	69c3      	ldr	r3, [r0, #28]
 80143ec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80143f0:	61c3      	str	r3, [r0, #28]
 80143f2:	4770      	bx	lr

080143f4 <spi_dma_enable>:
 80143f4:	6843      	ldr	r3, [r0, #4]
 80143f6:	b919      	cbnz	r1, 8014400 <spi_dma_enable+0xc>
 80143f8:	f043 0302 	orr.w	r3, r3, #2
 80143fc:	6043      	str	r3, [r0, #4]
 80143fe:	4770      	bx	lr
 8014400:	f043 0301 	orr.w	r3, r3, #1
 8014404:	e7fa      	b.n	80143fc <spi_dma_enable+0x8>
	...

08014408 <mac_address_get(unsigned char*)>:
 8014408:	2102      	movs	r1, #2
 801440a:	4a07      	ldr	r2, [pc, #28]	; (8014428 <mac_address_get(unsigned char*)+0x20>)
 801440c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014410:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014414:	7001      	strb	r1, [r0, #0]
 8014416:	7042      	strb	r2, [r0, #1]
 8014418:	0e1a      	lsrs	r2, r3, #24
 801441a:	7082      	strb	r2, [r0, #2]
 801441c:	0c1a      	lsrs	r2, r3, #16
 801441e:	70c2      	strb	r2, [r0, #3]
 8014420:	0a1a      	lsrs	r2, r3, #8
 8014422:	7102      	strb	r2, [r0, #4]
 8014424:	7143      	strb	r3, [r0, #5]
 8014426:	4770      	bx	lr
 8014428:	1ffff000 	svcne	0x00fff000

0801442c <__popcountsi2>:
 801442c:	0843      	lsrs	r3, r0, #1
 801442e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8014432:	1ac0      	subs	r0, r0, r3
 8014434:	0883      	lsrs	r3, r0, #2
 8014436:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 801443a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 801443e:	4418      	add	r0, r3
 8014440:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8014444:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014448:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 801444c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014450:	0e00      	lsrs	r0, r0, #24
 8014452:	4770      	bx	lr

Disassembly of section .rodata:

08014454 <vtable for DisplayHandler-0xb0>:
	...
 801445c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014460:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014464:	00000000 	andeq	r0, r0, r0
 8014468:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801446c:	313a3131 	teqcc	sl, r1, lsr r1
 8014470:	31353a35 	teqcc	r5, r5, lsr sl
 8014474:	63654400 	cmnvs	r5, #0, 8
 8014478:	20353220 	eorscs	r3, r5, r0, lsr #4
 801447c:	32323032 	eorscc	r3, r2, #50	; 0x32
 8014480:	335b1b00 	cmpcc	fp, #0, 22
 8014484:	41736d32 	cmnmi	r3, r2, lsr sp
 8014488:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801448c:	31332e31 	teqcc	r3, r1, lsr lr
 8014490:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8014494:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8014498:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 801449c:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80144a0:	317b2072 	cmncc	fp, r2, ror r0
 80144a4:	20342078 	eorscs	r2, r4, r8, ror r0
 80144a8:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 80144ac:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80144b0:	5b1b7d73 	blpl	86f3a84 <__exidx_end+0x6dcb3c>
 80144b4:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 80144b8:	6f635f2e 	svcvs	0x00635f2e
 80144bc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80144c0:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 80144c4:	00707474 	rsbseq	r7, r0, r4, ror r4
 80144c8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80144cc:	4341733d 	movtmi	r7, #4925	; 0x133d
 80144d0:	3145204e 	cmpcc	r5, lr, asr #32
 80144d4:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80144d8:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80144dc:	4173006c 	cmnmi	r3, ip, rrx
 80144e0:	50204e43 	eorpl	r4, r0, r3, asr #28
 80144e4:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80144e8:	34783120 	ldrbtcc	r3, [r8], #-288	; 0xfffffee0
 80144ec:	73250055 			; <UNDEFINED> instruction: 0x73250055
 80144f0:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 80144f4:	20642547 	rsbcs	r2, r4, r7, asr #10
 80144f8:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 80144fc:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8014500:	00000000 	andeq	r0, r0, r0

08014504 <vtable for DisplayHandler>:
	...
 801450c:	080085b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, sl, pc}
 8014510:	080085d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, pc}
 8014514:	080085fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, pc}

08014518 <vtable for PixelDmxStartStop>:
	...
 8014520:	080085b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, pc}
 8014524:	080085dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, pc}
 8014528:	080085b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, pc}
 801452c:	080085c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, pc}

08014530 <CSWTCH.65>:
 8014530:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014534:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08014535 <SOFTWARE_VERSION>:
 8014535:	00342e31 	eorseq	r2, r4, r1, lsr lr

08014539 <gamma10_0>:
 8014539:	03020100 	movweq	r0, #8448	; 0x2100
 801453d:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014541:	0b0a0908 	bleq	8296969 <__exidx_end+0x27fa21>
 8014545:	0f0e0d0c 	svceq	0x000e0d0c
 8014549:	13121110 	tstne	r2, #16, 2
 801454d:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014551:	1b1a1918 	blne	869a9b9 <__exidx_end+0x683a71>
 8014555:	1f1e1d1c 	svcne	0x001e1d1c
 8014559:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801455d:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014561:	2b2a2928 	blcs	8a9ea09 <__exidx_end+0xa87ac1>
 8014565:	2f2e2d2c 	svccs	0x002e2d2c
 8014569:	33323130 	teqcc	r2, #48, 2
 801456d:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014571:	3b3a3938 	blcc	8ea2a59 <__exidx_end+0xe8bb11>
 8014575:	3f3e3d3c 	svccc	0x003e3d3c
 8014579:	43424140 	movtmi	r4, #8512	; 0x2140
 801457d:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014581:	4b4a4948 	blmi	92a6aa9 <__exidx_end+0x128fb61>
 8014585:	4f4e4d4c 	svcmi	0x004e4d4c
 8014589:	53525150 	cmppl	r2, #80, 2
 801458d:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8014591:	5b5a5958 	blpl	96aaaf9 <__exidx_end+0x1693bb1>
 8014595:	5f5e5d5c 	svcpl	0x005e5d5c
 8014599:	63626160 	cmnvs	r2, #96, 2
 801459d:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80145a1:	6b6a6968 	blvs	9aaeb49 <__exidx_end+0x1a97c01>
 80145a5:	6f6e6d6c 	svcvs	0x006e6d6c
 80145a9:	73727170 	cmnvc	r2, #112, 2
 80145ad:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80145b1:	7b7a7978 	blvc	9eb2b99 <__exidx_end+0x1e9bc51>
 80145b5:	7f7e7d7c 	svcvc	0x007e7d7c
 80145b9:	83828180 	orrhi	r8, r2, #128, 2
 80145bd:	87868584 	strhi	r8, [r6, r4, lsl #11]
 80145c1:	8b8a8988 	blhi	62b6be9 <__stack_size+0x62b4be9>
 80145c5:	8f8e8d8c 	svchi	0x008e8d8c
 80145c9:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 80145cd:	97969594 			; <UNDEFINED> instruction: 0x97969594
 80145d1:	9b9a9998 	blls	66bac39 <__stack_size+0x66b8c39>
 80145d5:	9f9e9d9c 	svcls	0x009e9d9c
 80145d9:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80145dd:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 80145e1:	abaaa9a8 	blge	6abec89 <__stack_size+0x6abcc89>
 80145e5:	afaeadac 	svcge	0x00aeadac
 80145e9:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 80145ed:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 80145f1:	bbbab9b8 	bllt	6ec2cd9 <__stack_size+0x6ec0cd9>
 80145f5:	bfbebdbc 	svclt	0x00bebdbc
 80145f9:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 80145fd:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8014601:	cbcac9c8 	blgt	72c6d29 <__stack_size+0x72c4d29>
 8014605:	cfcecdcc 	svcgt	0x00cecdcc
 8014609:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 801460d:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014611:	dbdad9d8 	blle	76cad79 <__stack_size+0x76c8d79>
 8014615:	dfdedddc 	svcle	0x00dedddc
 8014619:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 801461d:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014621:	ebeae9e8 	bl	7acedc9 <__stack_size+0x7accdc9>
 8014625:	efeeedec 	svc	0x00eeedec
 8014629:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 801462d:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014631:	fbfaf9f8 	blx	7ed2e1b <__stack_size+0x7ed0e1b>
 8014635:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 8014639:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801463d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014641:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8014645:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014649:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 801464d:	0a73252c 	beq	9cddb05 <__exidx_end+0x1cc6bbd>
 8014651:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8014655:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014659:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801465d:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8014661:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014665:	4f000a64 	svcmi	0x00000a64
 8014669:	664f006e 	strbvs	r0, [pc], -lr, rrx
 801466d:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8014671:	616c7073 	smcvs	50947	; 0xc703
 8014675:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8014679:	6674000a 	ldrbtvs	r0, [r4], -sl
 801467d:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8014681:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8014685:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014689:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 801468d:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8014691:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014695:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014699:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 801469d:	20505446 	subscs	r5, r0, r6, asr #8
 80146a1:	20206e4f 	eorcs	r6, r0, pc, asr #28
 80146a5:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 80146a9:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 80146ad:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 80146b1:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 80146b5:	525b2066 	subspl	r2, fp, #102	; 0x66
 80146b9:	6f6f6265 	svcvs	0x006f6265
 80146bd:	00205d74 	eoreq	r5, r0, r4, ror sp
 80146c1:	4f525245 	svcmi	0x00525245
 80146c5:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 80146c9:	000a7465 	andeq	r7, sl, r5, ror #8
 80146cd:	70746674 	rsbsvc	r6, r4, r4, ror r6
 80146d1:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 80146d5:	616c7073 	smcvs	50947	; 0xc703
 80146d9:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 80146dd:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 80146e1:	000a2123 	andeq	r2, sl, r3, lsr #2
 80146e5:	4f525245 	svcmi	0x00525245
 80146e9:	0a3f2352 	beq	8fdd439 <__exidx_end+0xfc64f1>
 80146ed:	62657200 	rsbvs	r7, r5, #0, 4
 80146f1:	23746f6f 	cmncs	r4, #444	; 0x1bc
 80146f5:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 80146f9:	00237473 	eoreq	r7, r3, r3, ror r4
 80146fd:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014701:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8014705:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014709:	76002365 	strvc	r2, [r0], -r5, ror #6
 801470d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014711:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8014715:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014719:	63616600 	cmnvs	r1, #0, 12
 801471d:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014721:	 	tstmi	r0, r3, lsr #6

08014724 <s_Node>:
 8014724:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014728:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8014734:	41730000 	cmnmi	r3, r0
 8014738:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801473c:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014748:	2043534f 	subcs	r5, r3, pc, asr #6
 801474c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014750:	00007265 	andeq	r7, r0, r5, ror #4
 8014754:	00000000 	andeq	r0, r0, r0
 8014758:	544c0000 	strbpl	r0, [ip], #-0
 801475c:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801476c:	2043534f 	subcs	r5, r3, pc, asr #6
 8014770:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8014774:	0000746e 	andeq	r7, r0, lr, ror #8
 8014778:	00000000 	andeq	r0, r0, r0
 801477c:	44520000 	ldrbmi	r0, [r2], #-0
 8014780:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8014784:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8014788:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801478c:	0000796c 	andeq	r7, r0, ip, ror #18
 8014790:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8014794:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80147a0:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80147a4:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80147b4:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80147c4:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 80147c8:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80147cc:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 80147d0:	00000072 	andeq	r0, r0, r2, ror r0
 80147d4:	00000000 	andeq	r0, r0, r0
 80147d8:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

080147ea <s_Output>:
 80147ea:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80147f6:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8014802:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014806:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801480a:	00000000 	andeq	r0, r0, r0
 801480e:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014812:	0000006c 	andeq	r0, r0, ip, rrx
 8014816:	00000000 	andeq	r0, r0, r0
 801481a:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801481e:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8014822:	00000000 	andeq	r0, r0, r0
 8014826:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8014832:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014836:	00006769 	andeq	r6, r0, r9, ror #14
 801483a:	00000000 	andeq	r0, r0, r0
 801483e:	70657453 	rsbvc	r7, r5, r3, asr r4
 8014842:	00726570 	rsbseq	r6, r2, r0, ror r5
 8014846:	00000000 	andeq	r0, r0, r0
 801484a:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801484e:	00007265 	andeq	r7, r0, r5, ror #4
 8014852:	00000000 	andeq	r0, r0, r0
 8014856:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801485a:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801485e:	00000000 	andeq	r0, r0, r0
 8014862:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8014866:	00006c61 	andeq	r6, r0, r1, ror #24
 801486a:	00000000 	andeq	r0, r0, r0
 801486e:	20424752 	subcs	r4, r2, r2, asr r7
 8014872:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8014876:	0000006c 	andeq	r0, r0, ip, rrx
	...

0801487c <RemoteConfig::s_GET>:
 801487c:	0800a0f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sp, pc}
 8014880:	00000000 	andeq	r0, r0, r0
 8014884:	080146ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, lr}
 8014888:	00000008 	andeq	r0, r0, r8
 801488c:	080095ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, ip, pc}
 8014890:	00000000 	andeq	r0, r0, r0
 8014894:	080146f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, lr}
 8014898:	00000005 	andeq	r0, r0, r5
 801489c:	080095ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, ip, pc}
 80148a0:	00000000 	andeq	r0, r0, r0
 80148a4:	080146fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, lr}
 80148a8:	00000006 	andeq	r0, r0, r6
 80148ac:	080097a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, ip, pc}
 80148b0:	00000000 	andeq	r0, r0, r0
 80148b4:	08014704 	stmdaeq	r1, {r2, r8, r9, sl, lr}
 80148b8:	00000007 	andeq	r0, r0, r7
 80148bc:	08009761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, pc}
 80148c0:	00000000 	andeq	r0, r0, r0
 80148c4:	0801470c 	stmdaeq	r1, {r2, r3, r8, r9, sl, lr}
 80148c8:	00000008 	andeq	r0, r0, r8
 80148cc:	080096bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, ip, pc}
 80148d0:	00000000 	andeq	r0, r0, r0
 80148d4:	080146d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, lr}
 80148d8:	00000008 	andeq	r0, r0, r8
 80148dc:	08009a75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, fp, ip, pc}
 80148e0:	00000000 	andeq	r0, r0, r0
 80148e4:	08014715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, lr}
 80148e8:	00010004 	andeq	r0, r1, r4
 80148ec:	08009711 	stmdaeq	r0, {r0, r4, r8, r9, sl, ip, pc}
 80148f0:	00000000 	andeq	r0, r0, r0
 80148f4:	080146cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, lr}
 80148f8:	00000005 	andeq	r0, r0, r5
 80148fc:	08009de9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp, ip, pc}
 8014900:	00000000 	andeq	r0, r0, r0
 8014904:	0801471a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sl, lr}
 8014908:	00000009 	andeq	r0, r0, r9

0801490c <RemoteConfig::s_SET>:
 801490c:	0800984d 	stmdaeq	r0, {r0, r2, r3, r6, fp, ip, pc}
 8014910:	00000000 	andeq	r0, r0, r0
 8014914:	080146cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, lr}
 8014918:	00010005 	andeq	r0, r1, r5
 801491c:	08009825 	stmdaeq	r0, {r0, r2, r5, fp, ip, pc}
 8014920:	00000000 	andeq	r0, r0, r0
 8014924:	080146d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, lr}
 8014928:	00010008 	andeq	r0, r1, r8
 801492c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014930:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8014934:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8014938:	0a64253d 	beq	991de34 <__exidx_end+0x1906eec>
 801493c:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8014940:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014944:	002c2273 	eoreq	r2, ip, r3, ror r2
 8014948:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801494c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014950:	6f626552 	svcvs	0x00626552
 8014954:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8014958:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 801495c:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8014960:	6f6f6265 	svcvs	0x006f6265
 8014964:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014968:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 801496c:	6f637200 	svcvs	0x00637200
 8014970:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8014974:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014978:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 801497c:	6b726f77 	blvs	9cb0760 <__exidx_end+0x1c99818>
 8014980:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014984:	73696400 	cmnvc	r9, #0, 8
 8014988:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801498c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014990:	33316500 	teqcc	r1, #0, 10
 8014994:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8014998:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 801499c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80149a0:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 80149a4:	00000074 	andeq	r0, r0, r4, ror r0

080149a8 <RemoteConfig::s_TXT>:
 80149a8:	08009a7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp, ip, pc}
 80149ac:	00000000 	andeq	r0, r0, r0
 80149b0:	08009d19 	stmdaeq	r0, {r0, r3, r4, r8, sl, fp, ip, pc}
 80149b4:	00000000 	andeq	r0, r0, r0
 80149b8:	0801496d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, fp, lr}
 80149bc:	0000000b 	andeq	r0, r0, fp
 80149c0:	0000000c 	andeq	r0, r0, ip
 80149c4:	08009aa9 	stmdaeq	r0, {r0, r3, r5, r7, r9, fp, ip, pc}
 80149c8:	00000000 	andeq	r0, r0, r0
 80149cc:	08009d49 	stmdaeq	r0, {r0, r3, r6, r8, sl, fp, ip, pc}
 80149d0:	00000000 	andeq	r0, r0, r0
 80149d4:	08014979 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, fp, lr}
 80149d8:	0000000b 	andeq	r0, r0, fp
 80149dc:	00000000 	andeq	r0, r0, r0
 80149e0:	08009b2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, ip, pc}
 80149e4:	00000000 	andeq	r0, r0, r0
 80149e8:	08009dc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, pc}
 80149ec:	00000000 	andeq	r0, r0, r0
 80149f0:	08014985 	stmdaeq	r1, {r0, r2, r7, r8, fp, lr}
 80149f4:	0000000b 	andeq	r0, r0, fp
 80149f8:	0000000f 	andeq	r0, r0, pc
 80149fc:	08009ad5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, ip, pc}
 8014a00:	00000000 	andeq	r0, r0, r0
 8014a04:	08009d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, ip, pc}
 8014a08:	00000000 	andeq	r0, r0, r0
 8014a0c:	08014991 	stmdaeq	r1, {r0, r4, r7, r8, fp, lr}
 8014a10:	00000008 	andeq	r0, r0, r8
 8014a14:	00000004 	andeq	r0, r0, r4
 8014a18:	08009b01 	stmdaeq	r0, {r0, r8, r9, fp, ip, pc}
 8014a1c:	00000000 	andeq	r0, r0, r0
 8014a20:	08009d99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, ip, pc}
 8014a24:	00000000 	andeq	r0, r0, r0
 8014a28:	0801499a 	stmdaeq	r1, {r1, r3, r4, r7, r8, fp, lr}
 8014a2c:	0000000b 	andeq	r0, r0, fp
 8014a30:	00000003 	andeq	r0, r0, r3
 8014a34:	00544547 	subseq	r4, r4, r7, asr #10
 8014a38:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8014a3c:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8014a40:	0a200050 	beq	8814b88 <__exidx_end+0x7fdc40>
 8014a44:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8014a48:	43003a00 	movwmi	r3, #2560	; 0xa00
 8014a4c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8014a50:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8014a54:	00657079 	rsbeq	r7, r5, r9, ror r0
 8014a58:	61003b20 	tstvs	r0, r0, lsr #22
 8014a5c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8014a60:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8014a64:	6a2f6e6f 	bvs	8bf0428 <__exidx_end+0xbd94e0>
 8014a68:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8014a6c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014a70:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014a74:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014a78:	2f006874 	svccs	0x00006874
 8014a7c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014a80:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8014a84:	2f006c6d 	svccs	0x00006c6d
 8014a88:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014a8c:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014a90:	2f007373 	svccs	0x00007373
 8014a94:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014a98:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8014a9c:	736a2f00 	cmnvc	sl, #0, 30
 8014aa0:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8014aa4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014aa8:	72657600 	rsbvc	r7, r5, #0, 12
 8014aac:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8014ab0:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8014ab4:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8014ab8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014abc:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8014ac0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014ac4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014ac8:	6a2f0079 	bvs	8bd4cb4 <__exidx_end+0xbbdd6c>
 8014acc:	2f6e6f73 	svccs	0x006e6f73
 8014ad0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8014ad4:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8014ad8:	6f6f6265 	svcvs	0x006f6265
 8014adc:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8014ae0:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8014ae4:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8014ae8:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014aec:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014af0:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014af4:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014af8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014afc:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014b00:	3e646165 	powccsz	f6, f4, f5
 8014b04:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014b08:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8014b0c:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8014b10:	742f3c74 	strtvc	r3, [pc], #-3188	; 8014b18 <RemoteConfig::s_TXT+0x170>
 8014b14:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8014b18:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014b1c:	3e646165 	powccsz	f6, f4, f5
 8014b20:	6f623c0a 	svcvs	0x00623c0a
 8014b24:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8014b28:	4f3e3168 	svcmi	0x003e3168
 8014b2c:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014b30:	2f3c3e31 	svccs	0x003c3e31
 8014b34:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014b38:	2f3c0a3e 	svccs	0x003c0a3e
 8014b3c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014b40:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8014b44:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8014b48:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8014b4c:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8014b50:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8014b54:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8014b58:	71655200 	cmnvc	r5, r0, lsl #4
 8014b5c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8014b60:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8014b64:	20797469 	rsbscs	r7, r9, r9, ror #8
 8014b68:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8014b6c:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8014b70:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8014b74:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8014b78:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8014b7c:	6f542049 	svcvs	0x00542049
 8014b80:	6f4c206f 	svcvs	0x004c206f
 8014b84:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8014b88:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8014b8c:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8014b90:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014b94:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8014b98:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8014b9c:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8014ba0:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8014ba4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014ba8:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8014bac:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014bb0:	00646574 	rsbeq	r6, r4, r4, ror r5
 8014bb4:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8014bb8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014bbc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014bc0:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8014bc4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8014bc8:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8014bcc:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8014bd0:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8014bd4:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8014bd8:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8014bdc:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014be0:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014be4:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014be8:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014bec:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014bf0:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014bf4:	3e646165 	powccsz	f6, f4, f5
 8014bf8:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014bfc:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8014c00:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014c04:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014c08:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8014c0c:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014c10:	0a3e6461 	beq	8fadd9c <__exidx_end+0xf96e54>
 8014c14:	646f623c 	strbtvs	r6, [pc], #-572	; 8014c1c <RemoteConfig::s_TXT+0x274>
 8014c18:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8014c1c:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8014c20:	31682f3c 	cmncc	r8, ip, lsr pc
 8014c24:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8014c28:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014c2c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014c30:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014c34:	5448000a 	strbpl	r0, [r8], #-10
 8014c38:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8014c3c:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8014c40:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014c44:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8014c48:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8014c4c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8014c50:	6f430a0d 	svcvs	0x00430a0d
 8014c54:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014c58:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8014c5c:	203a6570 	eorscs	r6, sl, r0, ror r5
 8014c60:	0a0d7325 	beq	83718fc <__exidx_end+0x35a9b4>
 8014c64:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014c68:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014c6c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014c70:	203a6874 	eorscs	r6, sl, r4, ror r8
 8014c74:	0a0d7525 	beq	8372110 <__exidx_end+0x35b1c8>
 8014c78:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8014c7c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8014c80:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8014c84:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8014c88:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8014c8c:	4447000a 	strbmi	r0, [r7], #-10
 8014c90:	31463233 	cmpcc	r6, r3, lsr r2
 8014c94:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
	...

08014c99 <contentType>:
 8014c99:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014c9d:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8014ca1:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8014cb9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014cbd:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8014cd9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8014cdd:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8014ce1:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8014ce5:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8014cf9:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8014cfd:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8014d01:	2f6e6f69 	svccs	0x006e6f69
 8014d05:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08014d19 <RemoteConfigConst::PARAMS_DISABLE>:
 8014d19:	61736964 	cmnvs	r3, r4, ror #18
 8014d1d:	00656c62 	rsbeq	r6, r5, r2, ror #24

08014d21 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8014d21:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8014d25:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8014d29:	00747874 	rsbseq	r7, r4, r4, ror r8

08014d2d <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8014d2d:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014d31:	5f79616c 	svcpl	0x0079616c
 8014d35:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014d3a <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8014d3a:	61736964 	cmnvs	r3, r4, ror #18
 8014d3e:	5f656c62 	svcpl	0x00656c62
 8014d42:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8014d46:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014d48 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8014d48:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d4c:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8014d50:	6f6f6265 	svcvs	0x006f6265
 8014d54:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08014d56 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8014d56:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d5a:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80147f6 <s_Output+0xc>
 8014d5e:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014d62:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014d64 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8014d64:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8014d68:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8014d6c:	6f746361 	svcvs	0x00746361
 8014d70:	7b007972 	blvc	8033340 <__exidx_end+0x1c3f8>
 8014d74:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8014d78:	7b3a2274 	blvc	8e9d750 <__exidx_end+0xe86808>
 8014d7c:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8014d80:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8014d84:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014d88:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014d8c:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8014d90:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8014d94:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014d98:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014d9c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8014da0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014da4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014da8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014dac:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014db0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014db4:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8014db8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014dbc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014dc0:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8014dc4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014dc8:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8014dcc:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8014dd0:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8014dd4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014dd8:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8014ddc:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8014de0:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8014de4:	616f6222 	cmnvs	pc, r2, lsr #4
 8014de8:	3a226472 	bcc	88adfb8 <__exidx_end+0x897070>
 8014dec:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014df0:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8014df4:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8014df8:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8014dfc:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8014e00:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8014e04:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8014e08:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8014e0c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8014e10:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8014e14:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8014e18:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8014e1c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014e20:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8014e24:	7b000a7d 	blvc	8017820 <__exidx_end+0x8d8>
 8014e28:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8014e2c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014e30:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8014e34:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8014e38:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014e3c:	7b3a2273 	blvc	8e9d810 <__exidx_end+0xe868c8>
 8014e40:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8014e44:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8014e48:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8014e4c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014e50:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014e54:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8014e58:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8014e5c:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8014e60:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014e64:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8014e68:	5020584d 	eorpl	r5, r0, sp, asr #16
 8014e6c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014e70:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8014e74:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8014e78:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 8014e7c:	3a227478 	bcc	88b2064 <__exidx_end+0x89b11c>
 8014e80:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8014e84:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014e88:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8014e8c:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8014e90:	6f777465 	svcvs	0x00777465
 8014e94:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8014e98:	3a227478 	bcc	88b2080 <__exidx_end+0x89b138>
 8014e9c:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8014ea0:	6b726f77 	blvs	9cb0c84 <__exidx_end+0x1c99d3c>
 8014ea4:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8014ea8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014eac:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8014eb0:	3a227478 	bcc	88b2098 <__exidx_end+0x89b150>
 8014eb4:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8014eb8:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8014ebc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014ec0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8014ec4:	6f697461 	svcvs	0x00697461
 8014ec8:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08014ecd <index_html>:
 8014ecd:	4f44213c 	svcmi	0x0044213c
 8014ed1:	50595443 	subspl	r5, r9, r3, asr #8
 8014ed5:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8014ed9:	0a3e6c6d 	beq	8fb0095 <__exidx_end+0xf9914d>
 8014edd:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8014ee1:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014ee5:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8014ee9:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8014eed:	6b6e696c 	blvs	9baf4a5 <__exidx_end+0x1b9855d>
 8014ef1:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8014ef5:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8014ef9:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8014efd:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8014f01:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8014f05:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8014f09:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014f0d:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014f11:	20227373 	eorcs	r7, r2, r3, ror r3
 8014f15:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8014f19:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014f1d:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8014f21:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8014f25:	0a3e656c 	beq	8fae4dd <__exidx_end+0xf97595>
 8014f29:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014f2d:	0a3e6461 	beq	8fae0b9 <__exidx_end+0xf97171>
 8014f31:	646f623c 	strbtvs	r6, [pc], #-572	; 8014f39 <index_html+0x6c>
 8014f35:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8014f39:	6165683c 	cmnvs	r5, ip, lsr r8
 8014f3d:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8014f41:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8014f45:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8014f49:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8014f4d:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8014f51:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8014f55:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014f59:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8014f5d:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8014f61:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8014f65:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8014f69:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8014f6d:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8014f71:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014f75:	6f746365 	svcvs	0x00746365
 8014f79:	20227972 	eorcs	r7, r2, r2, ror r9
 8014f7d:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014f81:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8014f85:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8014f89:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8014f8d:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8014f91:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8014f95:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8014f99:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8014f9d:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8014fa1:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8014fa5:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8014fa9:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8014fad:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8014fb1:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8014fb5:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8014fb9:	20227478 	eorcs	r7, r2, r8, ror r4
 8014fbd:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8014fc1:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8014fc5:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8014fc9:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8014fcd:	0a3e656c 	beq	8fae585 <__exidx_end+0xf9763d>
 8014fd1:	6f663c09 	svcvs	0x00663c09
 8014fd5:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8014fd9:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8014fdd:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8014fe1:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8014fe5:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014fe9:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8014fed:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8014ff1:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8014ff5:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8014ff9:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8014ffd:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8015001:	20747069 	rsbscs	r7, r4, r9, rrx
 8015005:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8015009:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801500d:	6a2e7865 	bvs	8bb31a9 <__exidx_end+0xb9c261>
 8015011:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8015015:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8015019:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801501d:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8015021:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015025:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015029:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801502d:	 	svcvs	0x0062000a

0801502f <styles_css>:
 801502f:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015033:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015037:	63616220 	cmnvs	r1, #32, 4
 801503b:	6f72676b 	svcvs	0x0072676b
 801503f:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8015043:	6f6c6f63 	svcvs	0x006c6f63
 8015047:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801504b:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801504f:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8015053:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8015057:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801505b:	6f6c6f63 	svcvs	0x006c6f63
 801505f:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8015063:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8015067:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801506b:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 801506f:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8015073:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015077:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801507b:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801507f:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015083:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015087:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801508b:	0a3b7865 	beq	8ef3227 <__exidx_end+0xedc2df>
 801508f:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8015093:	0a7b2069 	beq	9edd23f <__exidx_end+0x1ec62f7>
 8015097:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801509b:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801509f:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80150a3:	6f6e203a 	svcvs	0x006e203a
 80150a7:	0a3b656e 	beq	8eee667 <__exidx_end+0xed771f>
 80150ab:	616d2020 	cmnvs	sp, r0, lsr #32
 80150af:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80150b3:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80150b7:	70352078 	eorsvc	r2, r5, r8, ror r0
 80150bb:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80150bf:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80150c3:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80150c7:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80150cb:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80150cf:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80150d3:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80150d7:	0a3b7865 	beq	8ef3273 <__exidx_end+0xedc32b>
 80150db:	6f622020 	svcvs	0x00622020
 80150df:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80150e3:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80150e7:	3a737569 	bcc	9cf2693 <__exidx_end+0x1cdb74b>
 80150eb:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80150ef:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80150f3:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80150f7:	203a7265 	eorscs	r7, sl, r5, ror #4
 80150fb:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80150ff:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015103:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8015107:	0a3b7870 	beq	8ef32cf <__exidx_end+0xedc387>
 801510b:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801510f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015113:	0a7b2072 	beq	9edd2e3 <__exidx_end+0x1ec639b>
 8015117:	69642020 	stmdbvs	r4!, {r5, sp}^
 801511b:	616c7073 	smcvs	50947	; 0xc703
 801511f:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8015123:	3b78656c 	blcc	9e2e6db <__exidx_end+0x1e17793>
 8015127:	6a20200a 	bvs	881d157 <__exidx_end+0x80620f>
 801512b:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801512f:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8015133:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8015137:	203a746e 	eorscs	r7, sl, lr, ror #8
 801513b:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801513f:	0a3b7265 	beq	8ef1adb <__exidx_end+0xedab93>
 8015143:	6f622020 	svcvs	0x00622020
 8015147:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801514b:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801514f:	3a737569 	bcc	9cf26fb <__exidx_end+0x1cdb7b3>
 8015153:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015157:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801515b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801515f:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015163:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015167:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801516b:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801516f:	0a3b7870 	beq	8ef3337 <__exidx_end+0xedc3ef>
 8015173:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08015178 <HttpContent>:
 8015178:	08014a88 	stmdaeq	r1, {r3, r7, r9, fp, lr}
 801517c:	0801502f 	stmdaeq	r1, {r0, r1, r2, r3, r5, ip, lr}
 8015180:	08014a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, lr}
 8015184:	08015190 	stmdaeq	r1, {r4, r7, r8, ip, lr}
 8015188:	08014a7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, fp, lr}
 801518c:	08014ecd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, fp, lr}

08015190 <index_js>:
 8015190:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015194:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015198:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801519c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80151a0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80151a4:	6a284e4f 	bvs	8a28ae8 <__exidx_end+0xa11ba0>
 80151a8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80151ac:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80151b0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80151b4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80151b8:	6a2f273d 	bvs	8bdeeb4 <__exidx_end+0xbc7f6c>
 80151bc:	2f6e6f73 	svccs	0x006e6f73
 80151c0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80151c4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80151c8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80151cc:	20797274 	rsbscs	r7, r9, r4, ror r2
 80151d0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80151d4:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80151d8:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80151dc:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 80151e0:	20746961 	rsbscs	r6, r4, r1, ror #18
 80151e4:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 80151e8:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 80151ec:	0a3b296c 	beq	8edf7a4 <__exidx_end+0xec885c>
 80151f0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80151f4:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 80151f8:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 80151fc:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015200:	73657220 	cmnvc	r5, #32, 4
 8015204:	6f736a2e 	svcvs	0x00736a2e
 8015208:	3b29286e 	blcc	8a5f3c8 <__exidx_end+0xa48480>
 801520c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015210:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8015214:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8015218:	6f727265 	svcvs	0x00727265
 801521c:	7b202972 	blvc	881f7ec <__exidx_end+0x8088a4>
 8015220:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015224:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8015228:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801522c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8015230:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8015234:	3b29726f 	blcc	8a71bf8 <__exidx_end+0xa5acb0>
 8015238:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801523c:	0a0a7d0a 	beq	82b466c <__exidx_end+0x29d724>
 8015240:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015244:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015248:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801524c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8015250:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015254:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015258:	20292874 	eorcs	r2, r9, r4, ror r8
 801525c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8015260:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015264:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015268:	6177613d 	cmnvs	r7, sp, lsr r1
 801526c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015270:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015274:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015278:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801527c:	0a3b2927 	beq	8edf720 <__exidx_end+0xec87d8>
 8015280:	6f640909 	svcvs	0x00640909
 8015284:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015288:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801528c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015290:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015294:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015298:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801529c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80152a0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80152a4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80152a8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80152ac:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80152b0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80152b4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80152b8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80152bc:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80152c0:	2b656d61 	blcs	997084c <__exidx_end+0x1959904>
 80152c4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015244 <index_js+0xb4>
 80152c8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80152cc:	2b223e69 	blcs	88a4c78 <__exidx_end+0x88dd30>
 80152d0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80152d4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80152d8:	6f6e2e74 	svcvs	0x006e2e74
 80152dc:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80152e0:	2b657079 	blcs	99714cc <__exidx_end+0x195a584>
 80152e4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015264 <index_js+0xd4>
 80152e8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80152ec:	2b223e69 	blcs	88a4c98 <__exidx_end+0x88dd50>
 80152f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80152f4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80152f8:	6f6e2e74 	svcvs	0x006e2e74
 80152fc:	702e6564 	eorvc	r6, lr, r4, ror #10
 8015300:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8015304:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015308:	2f3c222b 	svccs	0x003c222b
 801530c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015310:	0a7d0a3b 	beq	9f57c04 <__exidx_end+0x1f40cbc>
 8015314:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8015318:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801531c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015320:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8015324:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015328:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801532c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015330:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8015334:	0a7b2029 	beq	9edd3e0 <__exidx_end+0x1ec6498>
 8015338:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801533c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8015340:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015344:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015348:	6177613d 	cmnvs	r7, sp, lsr r1
 801534c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015350:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015354:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015358:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801535c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015360:	3b292779 	blcc	8a5f14c <__exidx_end+0xa48204>
 8015364:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015368:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801536c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015370:	0a22223d 	beq	889dc6c <__exidx_end+0x886d24>
 8015374:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015378:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801537c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8015380:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8015384:	6a624f3d 	bvs	98a9080 <__exidx_end+0x1892138>
 8015388:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 801538c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8015390:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8015394:	6f746365 	svcvs	0x00746365
 8015398:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 801539c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80153a0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80153a4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80153a8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80153ac:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80153b0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80153b4:	6145726f 	cmpvs	r5, pc, ror #4
 80153b8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80153bc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80153c0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80153c4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80153c8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80153cc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80153d0:	20726176 	rsbscs	r6, r2, r6, ror r1
 80153d4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80153d8:	203d2065 	eorscs	r2, sp, r5, rrx
 80153dc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80153e0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80153e4:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 80153e8:	73656c69 	cmnvc	r5, #26880	; 0x6900
 80153ec:	6b5b5d22 	blvs	96ec87c <__exidx_end+0x16d5934>
 80153f0:	3b5d7965 	blcc	977398c <__exidx_end+0x175ca44>
 80153f4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80153f8:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 80153fc:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015400:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8015404:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015408:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801540c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8015410:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015414:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8015418:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801541c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015420:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8015424:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015428:	0a3b223e 	beq	8eddd28 <__exidx_end+0xec6de0>
 801542c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8015430:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015434:	6f640909 	svcvs	0x00640909
 8015438:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801543c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015440:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015444:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015448:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801544c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015450:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015454:	6f746365 	svcvs	0x00746365
 8015458:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801545c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8015460:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8015464:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8015468:	3b6c6d74 	blcc	9b30a40 <__exidx_end+0x1b19af8>
 801546c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015470:	5f746567 	svcpl	0x00746567
 8015474:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8015478:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801547c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015480:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8015484:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015488:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 801548c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015490:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015494:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015498:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 801549c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80154a0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80154a4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80154a8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80154ac:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80154b0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80154b4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80154b8:	6177613d 	cmnvs	r7, sp, lsr r1
 80154bc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80154c0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80154c4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80154c8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80154cc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80154d0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80154d4:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80154d8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80154dc:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 80154e0:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 80154e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 80154e8:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 80154ec:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 80154f0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80154f4:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80154f8:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 80154fc:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015500:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8015504:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8015508:	2b22563e 	blcs	88aae08 <__exidx_end+0x893ec0>
 801550c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015510:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015514:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015518:	2b6e6f69 	blcs	9bb12c4 <__exidx_end+0x1b9a37c>
 801551c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801549c <index_js+0x30c>
 8015520:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015524:	2b223e69 	blcs	88a4ed0 <__exidx_end+0x88df88>
 8015528:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801552c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015530:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8015534:	61642e64 	cmnvs	r4, r4, ror #28
 8015538:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801553c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8015540:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8015544:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8015548:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801554c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8015550:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8015554:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8015558:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801555c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8015560:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8015564:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8015568:	6f697372 	svcvs	0x00697372
 801556c:	6f622e6e 	svcvs	0x00622e6e
 8015570:	2b647261 	blcs	9931efc <__exidx_end+0x191afb4>
 8015574:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80154f4 <index_js+0x364>
 8015578:	3b223e69 	blcc	88a4f24 <__exidx_end+0x88dfdc>
 801557c:	0a0a7d0a 	beq	82b49ac <__exidx_end+0x29da64>
 8015580:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015584:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015588:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801558c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015590:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8015598 <index_js+0x408>
 8015594:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8015598:	20296c65 	eorcs	r6, r9, r5, ror #24
 801559c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80155a0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80155a4:	613d7478 	teqvs	sp, r8, ror r4
 80155a8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80155ac:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80155b0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80155b4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80155b8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80155bc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80155c0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80155c4:	3b22223d 	blcc	889dec0 <__exidx_end+0x886f78>
 80155c8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80155cc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80155d0:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80155d4:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80155d8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80155dc:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80155e0:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80155e4:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 80155e8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80155ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80155f0:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80155f4:	0a7b2029 	beq	9edd6a0 <__exidx_end+0x1ec6758>
 80155f8:	61760909 	cmnvs	r6, r9, lsl #18
 80155fc:	61762072 	cmnvs	r6, r2, ror r0
 8015600:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8015604:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015608:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801560c:	6b5b5d6c 	blvs	96ecbc4 <__exidx_end+0x16d5c7c>
 8015610:	3b5d7965 	blcc	9773bac <__exidx_end+0x175cc64>
 8015614:	2009090a 	andcs	r0, r9, sl, lsl #18
 8015618:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801561c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8015620:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8015624:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015628:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801562c:	2f3c222b 	svccs	0x003c222b
 8015630:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8015634:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015638:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801563c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015640:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8015644:	742f3c3e 	strtvc	r3, [pc], #-3134	; 801564c <index_js+0x4bc>
 8015648:	3b223e72 	blcc	88a5018 <__exidx_end+0x88e0d0>
 801564c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8015650:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8015654:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8015658:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801565c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8015660:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8015664:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8015668:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801566c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8015670:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015674:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015678:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801567c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8015680:	0a3b6c6d 	beq	8ef083c <__exidx_end+0xed98f4>
 8015684:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8015688:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801568c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015690:	3b292874 	blcc	8a5f868 <__exidx_end+0xa48920>
 8015694:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8015698:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 801569c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80156a0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80156a4:	0a3b2928 	beq	8edfb4c <__exidx_end+0xec8c04>
 80156a8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80156ac:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80156b0:	6f697372 	svcvs	0x00697372
 80156b4:	3b29286e 	blcc	8a5f874 <__exidx_end+0xa4892c>
 80156b8:	3332000a 	teqcc	r2, #10
 80156bc:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 80156c0:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 80156c4:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 80156c8:	20733834 	rsbscs	r3, r3, r4, lsr r8
 80156cc:	30007325 	andcc	r7, r0, r5, lsr #6
 80156d0:	6f4e202e 	svcvs	0x004e202e
 80156d4:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 80156d8:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 80156dc:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 80156e0:	202c6465 	eorcs	r6, ip, r5, ror #8
 80156e4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 80156e8:	6f687320 	svcvs	0x00687320
 80156ec:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 80156f0:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 80156f4:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 80156f8:	000a216e 	andeq	r2, sl, lr, ror #2
 80156fc:	00505448 	subseq	r5, r0, r8, asr #8
 8015700:	0050544c 	subseq	r5, r0, ip, asr #8
 8015704:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8015708:	000a6567 	andeq	r6, sl, r7, ror #10
 801570c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8015710:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8015714:	203a2065 	eorscs	r2, sl, r5, rrx
 8015718:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801571c:	20000a64 	andcs	r0, r0, r4, ror #20
 8015720:	20444943 	subcs	r4, r4, r3, asr #18
 8015724:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015728:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801572c:	20000a73 	andcs	r0, r0, r3, ror sl
 8015730:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8015734:	000a7475 	andeq	r7, sl, r5, ror r4
 8015738:	6f502020 	svcvs	0x00502020
 801573c:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8015740:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8015744:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8015748:	20657372 	rsbcs	r7, r5, r2, ror r3
 801574c:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8015750:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8015754:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015758:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 801575c:	20000a74 	andcs	r0, r0, r4, ror sl
 8015760:	726f5020 	rsbvc	r5, pc, #32
 8015764:	32252074 	eorcc	r2, r5, #116	; 0x74
 8015768:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 801576c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8015770:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8015774:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8015778:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801577c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8015780:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8015784:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015788:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 801578c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8015790:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8015794:	000a6465 	andeq	r6, sl, r5, ror #8

08015798 <E131MsgConst::START>:
 8015798:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801579c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80157a0:	43417320 	movtmi	r7, #4896	; 0x1320
 80157a4:	3145204e 	cmpcc	r5, lr, asr #32
 80157a8:	0031332e 	eorseq	r3, r1, lr, lsr #6

080157ac <E131MsgConst::PARAMS>:
 80157ac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80157b0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80157b4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80157b8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80157bc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80157c0:	 	movwvc	r3, #307	; 0x133

080157c3 <E131MsgConst::STARTED>:
 80157c3:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80157c7:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80157cb:	73203133 			; <UNDEFINED> instruction: 0x73203133
 80157cf:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80157d3:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 80157d7:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 80157db:	0066666f 	rsbeq	r6, r6, pc, ror #12
 80157df:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80157e3:	6b636162 	blvs	98edd73 <__exidx_end+0x18d6e2b>
 80157e7:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 80157eb:	6f007475 	svcvs	0x00007475
 80157ef:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 80157f3:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 80157f7:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 80157fb:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 80157ff:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8015803:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8015807:	754f2058 	strbvc	r2, [pc, #-88]	; 80157b7 <E131MsgConst::PARAMS+0xb>
 801580b:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 801580f:	584d4400 	stmdapl	sp, {sl, lr}^
 8015813:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8015817:	00007475 	andeq	r7, r0, r5, ror r4
	...

0801581c <CSWTCH.56>:
 801581c:	080157d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sl, ip, lr}
 8015820:	080157db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, ip, lr}
 8015824:	08014aae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, fp, lr}
 8015828:	080157df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, ip, lr}

0801582c <E131ParamsConst::PRIORITY>:
 801582c:	6f697270 	svcvs	0x00697270
 8015830:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015834:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015838:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801583c:	72700000 	rsbsvc	r0, r0, #0
 8015840:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015844:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015848:	5f74726f 	svcpl	0x0074726f
 801584c:	00000062 	andeq	r0, r0, r2, rrx
 8015850:	6f697270 	svcvs	0x00697270
 8015854:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015858:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801585c:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015860:	72700000 	rsbsvc	r0, r0, #0
 8015864:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015868:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801586c:	5f74726f 	svcpl	0x0074726f
 8015870:	00000064 	andeq	r0, r0, r4, rrx

08015874 <E131ParamsConst::FILE_NAME>:
 8015874:	31333165 	teqcc	r3, r5, ror #2
 8015878:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

0801587d <E117Const::ACN_PACKET_IDENTIFIER>:
 801587d:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8015881:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8015885:	00000037 	andeq	r0, r0, r7, lsr r0

08015889 <E131BridgeConst::VERSION>:
 8015889:	30251901 	eorcc	r1, r5, r1, lsl #18
 801588d:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8015891:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 8015895:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8015899:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 801589d:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 80158a1:	30252d78 	eorcc	r2, r5, r8, ror sp
 80158a5:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158a9:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158ad:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158b1:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158b5:	30257832 	eorcc	r7, r5, r2, lsr r8
 80158b9:	50007832 	andpl	r7, r0, r2, lsr r8
 80158bd:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80158c1:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80158c5:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80158c9:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80158cd:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80158d1:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80158d5:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 80158d9:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 80158dd:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80158e1:	20000a64 	andcs	r0, r0, r4, ror #20
 80158e5:	756f7247 	strbvc	r7, [pc, #-583]!	; 80156a6 <index_js+0x516>
 80158e9:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80158ed:	756f6320 	strbvc	r6, [pc, #-800]!	; 80155d5 <index_js+0x445>
 80158f1:	3a20746e 	bcc	8832ab1 <__exidx_end+0x81bb69>
 80158f5:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80158f9:	6f72475b 	svcvs	0x0072475b
 80158fd:	20737075 	rsbscs	r7, r3, r5, ror r0
 8015901:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015905:	 	andeq	r0, r0, sp, asr sl

08015908 <vtable for WS28xxDmx>:
	...
 8015910:	0800c299 	stmdaeq	r0, {r0, r3, r4, r7, r9, lr, pc}
 8015914:	0800c2b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, lr, pc}
 8015918:	0800c40d 	stmdaeq	r0, {r0, r2, r3, sl, lr, pc}
 801591c:	0800c425 	stmdaeq	r0, {r0, r2, r5, sl, lr, pc}
 8015920:	0800c2f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, lr, pc}
 8015924:	0800c2cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r9, lr, pc}
 8015928:	0800c3f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, lr, pc}
 801592c:	0800c407 	stmdaeq	r0, {r0, r1, r2, sl, lr, pc}
 8015930:	0800c43d 	stmdaeq	r0, {r0, r2, r3, r4, r5, sl, lr, pc}
 8015934:	0800c28d 	stmdaeq	r0, {r0, r2, r3, r7, r9, lr, pc}
 8015938:	0800c293 	stmdaeq	r0, {r0, r1, r4, r7, r9, lr, pc}
 801593c:	0800c475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, lr, pc}
 8015940:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015944:	2a2e253a 	bcs	8b9ee34 <__exidx_end+0xb87eec>
 8015948:	23002c66 	movwcs	r2, #3174	; 0xc66
 801594c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8015950:	0a662a2e 	beq	99a0210 <__exidx_end+0x19892c8>
 8015954:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 8015958:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801595c:	4f003e74 	svcmi	0x00003e74
 8015960:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8015964:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8015968:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801596c:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8015970:	4f007465 	svcmi	0x00007465
 8015974:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8015978:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801597c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8015980:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015984:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8015988:	6f724700 	svcvs	0x00724700
 801598c:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8015990:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8015994:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8015998:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 801599c:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 80159a0:	00737069 	rsbseq	r7, r3, r9, rrx
 80159a4:	31415041 	cmpcc	r1, r1, asr #32
 80159a8:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 80159ac:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 80159b0:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 80159b4:	70207473 	eorvc	r7, r0, r3, ror r4
 80159b8:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 80159bc:	59006e72 	stmdbpl	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
 80159c0:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 80159c4:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 80159c8:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80159cc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80159d0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80159d4:	6f697461 	svcvs	0x00697461
 80159d8:	20000a6e 	andcs	r0, r0, lr, ror #20
 80159dc:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80159e0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80159e4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80159e8:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80159ec:	20000a5d 	andcs	r0, r0, sp, asr sl
 80159f0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 80159f4:	20202074 	eorcs	r2, r0, r4, ror r0
 80159f8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80159fc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8015a00:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8015a04:	3a20676e 	bcc	882f7c4 <__exidx_end+0x81887c>
 8015a08:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8015a0c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8015a10:	5420000a 	strtpl	r0, [r0], #-10
 8015a14:	20204830 	eorcs	r4, r0, r0, lsr r8
 8015a18:	3a202020 	bcc	881daa0 <__exidx_end+0x806b58>
 8015a1c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8015a20:	305b2066 	subscc	r2, fp, r6, rrx
 8015a24:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8015a28:	5420000a 	strtpl	r0, [r0], #-10
 8015a2c:	20204831 	eorcs	r4, r0, r1, lsr r8
 8015a30:	3a202020 	bcc	881dab8 <__exidx_end+0x806b70>
 8015a34:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8015a38:	305b2066 	subscc	r2, fp, r6, rrx
 8015a3c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8015a40:	4720000a 	strmi	r0, [r0, -sl]!
 8015a44:	61626f6c 	cmnvs	r2, ip, ror #30
 8015a48:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 8015a4c:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8015a50:	3a737365 	bcc	9cf27ec <__exidx_end+0x1cdb8a4>
 8015a54:	0a752520 	beq	9d5eedc <__exidx_end+0x1d47f94>
 8015a58:	61472000 	mrsvs	r2, (UNDEF: 71)
 8015a5c:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 8015a60:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 8015a64:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8015a68:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8015a6c:	20000a73 	andcs	r0, r0, r3, ror sl
 8015a70:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8015a74:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 8015a78:	7a482075 	bvc	921dc54 <__exidx_end+0x1206d0c>
 8015a7c:	0000000a 	andeq	r0, r0, sl

08015a80 <CSWTCH.9>:
 8015a80:	08015c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, lr}
 8015a84:	08015d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, lr}
 8015a88:	08015e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, lr}
 8015a8c:	08015f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, ip, lr}
 8015a90:	08016094 	stmdaeq	r1, {r2, r4, r7, sp, lr}

08015a94 <gamma10_0>:
 8015a94:	03020100 	movweq	r0, #8448	; 0x2100
 8015a98:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8015a9c:	0b0a0908 	bleq	8297ec4 <__exidx_end+0x280f7c>
 8015aa0:	0f0e0d0c 	svceq	0x000e0d0c
 8015aa4:	13121110 	tstne	r2, #16, 2
 8015aa8:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8015aac:	1b1a1918 	blne	869bf14 <__exidx_end+0x684fcc>
 8015ab0:	1f1e1d1c 	svcne	0x001e1d1c
 8015ab4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8015ab8:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8015abc:	2b2a2928 	blcs	8a9ff64 <__exidx_end+0xa8901c>
 8015ac0:	2f2e2d2c 	svccs	0x002e2d2c
 8015ac4:	33323130 	teqcc	r2, #48, 2
 8015ac8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015acc:	3b3a3938 	blcc	8ea3fb4 <__exidx_end+0xe8d06c>
 8015ad0:	3f3e3d3c 	svccc	0x003e3d3c
 8015ad4:	43424140 	movtmi	r4, #8512	; 0x2140
 8015ad8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015adc:	4b4a4948 	blmi	92a8004 <__exidx_end+0x12910bc>
 8015ae0:	4f4e4d4c 	svcmi	0x004e4d4c
 8015ae4:	53525150 	cmppl	r2, #80, 2
 8015ae8:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8015aec:	5b5a5958 	blpl	96ac054 <__exidx_end+0x169510c>
 8015af0:	5f5e5d5c 	svcpl	0x005e5d5c
 8015af4:	63626160 	cmnvs	r2, #96, 2
 8015af8:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8015afc:	6b6a6968 	blvs	9ab00a4 <__exidx_end+0x1a9915c>
 8015b00:	6f6e6d6c 	svcvs	0x006e6d6c
 8015b04:	73727170 	cmnvc	r2, #112, 2
 8015b08:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8015b0c:	7b7a7978 	blvc	9eb40f4 <__exidx_end+0x1e9d1ac>
 8015b10:	7f7e7d7c 	svcvc	0x007e7d7c
 8015b14:	83828180 	orrhi	r8, r2, #128, 2
 8015b18:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8015b1c:	8b8a8988 	blhi	62b8144 <__stack_size+0x62b6144>
 8015b20:	8f8e8d8c 	svchi	0x008e8d8c
 8015b24:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8015b28:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8015b2c:	9b9a9998 	blls	66bc194 <__stack_size+0x66ba194>
 8015b30:	9f9e9d9c 	svcls	0x009e9d9c
 8015b34:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8015b38:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8015b3c:	abaaa9a8 	blge	6ac01e4 <__stack_size+0x6abe1e4>
 8015b40:	afaeadac 	svcge	0x00aeadac
 8015b44:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8015b48:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8015b4c:	bbbab9b8 	bllt	6ec4234 <__stack_size+0x6ec2234>
 8015b50:	bfbebdbc 	svclt	0x00bebdbc
 8015b54:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8015b58:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8015b5c:	cbcac9c8 	blgt	72c8284 <__stack_size+0x72c6284>
 8015b60:	cfcecdcc 	svcgt	0x00cecdcc
 8015b64:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8015b68:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8015b6c:	dbdad9d8 	blle	76cc2d4 <__stack_size+0x76ca2d4>
 8015b70:	dfdedddc 	svcle	0x00dedddc
 8015b74:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8015b78:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8015b7c:	ebeae9e8 	bl	7ad0324 <__stack_size+0x7ace324>
 8015b80:	efeeedec 	svc	0x00eeedec
 8015b84:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8015b88:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8015b8c:	fbfaf9f8 	blx	7ed4376 <__stack_size+0x7ed2376>
 8015b90:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08015b94 <gamma20_0>:
	...
 8015ba0:	01010101 	tsteq	r1, r1, lsl #2
 8015ba4:	01010101 	tsteq	r1, r1, lsl #2
 8015ba8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015bac:	03030202 	movweq	r0, #12802	; 0x3202
 8015bb0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8015bb4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8015bb8:	06060505 	streq	r0, [r6], -r5, lsl #10
 8015bbc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015bc0:	09080808 	stmdbeq	r8, {r3, fp}
 8015bc4:	0a0a0909 	beq	8297ff0 <__exidx_end+0x2810a8>
 8015bc8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015bcc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8015bd0:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8015bd4:	12111110 	andsne	r1, r1, #16, 2
 8015bd8:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8015bdc:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8015be0:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8015be4:	1b1a1a19 	blne	869c450 <__exidx_end+0x685508>
 8015be8:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8015bec:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8015bf0:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8015bf4:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8015bf8:	2a292827 	bcs	8a5fc9c <__exidx_end+0xa48d54>
 8015bfc:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8015c00:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8015c04:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8015c08:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8015c0c:	3b3a3938 	blcc	8ea40f4 <__exidx_end+0xe8d1ac>
 8015c10:	3f3e3d3c 	svccc	0x003e3d3c
 8015c14:	43424140 	movtmi	r4, #8512	; 0x2140
 8015c18:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015c1c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015c20:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8015c24:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8015c28:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8015c2c:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8015c30:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8015c34:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8015c38:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8015c3c:	7371706f 	cmnvc	r1, #111	; 0x6f
 8015c40:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8015c44:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8015c48:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8015c4c:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8015c50:	8f8e8c8b 	svchi	0x008e8c8b
 8015c54:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8015c58:	9b9a9897 	blls	66bbebc <__stack_size+0x66b9ebc>
 8015c5c:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8015c60:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8015c64:	afadabaa 	svcge	0x00adabaa
 8015c68:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8015c6c:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8015c70:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8015c74:	cac8c7c5 	bgt	7247b90 <__stack_size+0x7245b90>
 8015c78:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8015c7c:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8015c80:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8015c84:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8015c88:	efedebe9 	svc	0x00edebe9
 8015c8c:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8015c90:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08015c94 <gamma21_0>:
	...
 8015ca0:	01010000 	mrseq	r0, (UNDEF: 1)
 8015ca4:	01010101 	tsteq	r1, r1, lsl #2
 8015ca8:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8015cac:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015cb0:	03030302 	movweq	r0, #13058	; 0x3302
 8015cb4:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8015cb8:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8015cbc:	06060505 	streq	r0, [r6], -r5, lsl #10
 8015cc0:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015cc4:	09080808 	stmdbeq	r8, {r3, fp}
 8015cc8:	0a0a0909 	beq	82980f4 <__exidx_end+0x2811ac>
 8015ccc:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015cd0:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8015cd4:	0f0f0e0e 	svceq	0x000f0e0e
 8015cd8:	11111010 	tstne	r1, r0, lsl r0
 8015cdc:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8015ce0:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8015ce4:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8015ce8:	1b1a1919 	blne	869c154 <__exidx_end+0x68520c>
 8015cec:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8015cf0:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8015cf4:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8015cf8:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8015cfc:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8015d00:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8015d04:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015d08:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8015d0c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015d10:	3b3a3938 	blcc	8ea41f8 <__exidx_end+0xe8d2b0>
 8015d14:	3f3e3d3c 	svccc	0x003e3d3c
 8015d18:	43424140 	movtmi	r4, #8512	; 0x2140
 8015d1c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015d20:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8015d24:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8015d28:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8015d2c:	5a585756 	bpl	962ba8c <__exidx_end+0x1614b44>
 8015d30:	5f5d5c5b 	svcpl	0x005d5c5b
 8015d34:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8015d38:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8015d3c:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8015d40:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8015d44:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8015d48:	7f7e7c7b 	svcvc	0x007e7c7b
 8015d4c:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8015d50:	8b898886 	blhi	6277f70 <__stack_size+0x6275f70>
 8015d54:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8015d58:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8015d5c:	9e9c9b99 	vmovls.32	r9, d28[0]
 8015d60:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8015d64:	abaaa8a6 	blge	6ac0004 <__stack_size+0x6abe004>
 8015d68:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8015d6c:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8015d70:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8015d74:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8015d78:	cfcdcbca 	svcgt	0x00cdcbca
 8015d7c:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8015d80:	dfdddbd9 	svcle	0x00dddbd9
 8015d84:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8015d88:	eeeceae8 	vfms.f32	s29, s25, s17
 8015d8c:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8015d90:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08015d94 <gamma22_0>:
	...
 8015da0:	01000000 	mrseq	r0, (UNDEF: 0)
 8015da4:	01010101 	tsteq	r1, r1, lsl #2
 8015da8:	01010101 	tsteq	r1, r1, lsl #2
 8015dac:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8015db0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015db4:	03030303 	movweq	r0, #13059	; 0x3303
 8015db8:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8015dbc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8015dc0:	06060605 	streq	r0, [r6], -r5, lsl #12
 8015dc4:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8015dc8:	09080808 	stmdbeq	r8, {r3, fp}
 8015dcc:	0a0a0909 	beq	82981f8 <__exidx_end+0x2812b0>
 8015dd0:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015dd4:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8015dd8:	0f0f0e0e 	svceq	0x000f0e0e
 8015ddc:	11111010 	tstne	r1, r0, lsl r0
 8015de0:	13131212 	tstne	r3, #536870913	; 0x20000001
 8015de4:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8015de8:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8015dec:	1a1a1919 	bne	869c258 <__exidx_end+0x685310>
 8015df0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8015df4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8015df8:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8015dfc:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8015e00:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8015e04:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8015e08:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015e0c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8015e10:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015e14:	3b3a3938 	blcc	8ea42fc <__exidx_end+0xe8d3b4>
 8015e18:	3f3e3d3c 	svccc	0x003e3d3c
 8015e1c:	43424140 	movtmi	r4, #8512	; 0x2140
 8015e20:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015e24:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015e28:	514f4e4d 	cmppl	pc, sp, asr #28
 8015e2c:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8015e30:	5a595857 	bpl	966bf94 <__exidx_end+0x165504c>
 8015e34:	5f5e5d5b 	svcpl	0x005e5d5b
 8015e38:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8015e3c:	6a696766 	bvs	9a6fbdc <__exidx_end+0x1a58c94>
 8015e40:	6f6e6d6b 	svcvs	0x006e6d6b
 8015e44:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8015e48:	7b797877 	blvc	9e7402c <__exidx_end+0x1e5d0e4>
 8015e4c:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8015e50:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8015e54:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8015e58:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8015e5c:	9a999795 	bls	667bcb8 <__stack_size+0x6679cb8>
 8015e60:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8015e64:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8015e68:	afadacaa 	svcge	0x00adacaa
 8015e6c:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8015e70:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8015e74:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8015e78:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8015e7c:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8015e80:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8015e84:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8015e88:	eeeceae7 	vfms.f32	s29, s25, s15
 8015e8c:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8015e90:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08015e94 <gamma23_0>:
	...
 8015ea4:	01010100 	mrseq	r0, (UNDEF: 17)
 8015ea8:	01010101 	tsteq	r1, r1, lsl #2
 8015eac:	01010101 	tsteq	r1, r1, lsl #2
 8015eb0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015eb4:	03020202 	movweq	r0, #8706	; 0x2202
 8015eb8:	03030303 	movweq	r0, #13059	; 0x3303
 8015ebc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8015ec0:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8015ec4:	06060605 	streq	r0, [r6], -r5, lsl #12
 8015ec8:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8015ecc:	09080808 	stmdbeq	r8, {r3, fp}
 8015ed0:	0a0a0a09 	beq	82986fc <__exidx_end+0x2817b4>
 8015ed4:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015ed8:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8015edc:	0f0f0e0e 	svceq	0x000f0e0e
 8015ee0:	11111010 	tstne	r1, r0, lsl r0
 8015ee4:	13131212 	tstne	r3, #536870913	; 0x20000001
 8015ee8:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8015eec:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8015ef0:	1a1a1918 	bne	869c358 <__exidx_end+0x685410>
 8015ef4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8015ef8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8015efc:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8015f00:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8015f04:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8015f08:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8015f0c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8015f10:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8015f14:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015f18:	3b3a3938 	blcc	8ea4400 <__exidx_end+0xe8d4b8>
 8015f1c:	3f3e3d3c 	svccc	0x003e3d3c
 8015f20:	43424140 	movtmi	r4, #8512	; 0x2140
 8015f24:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8015f28:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8015f2c:	51504f4e 	cmppl	r0, lr, asr #30
 8015f30:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8015f34:	5b5a5957 	blpl	96ac498 <__exidx_end+0x1695550>
 8015f38:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8015f3c:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8015f40:	6b6a6867 	blvs	9ab00e4 <__exidx_end+0x1a9919c>
 8015f44:	71706e6d 	cmnvc	r0, sp, ror #28
 8015f48:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8015f4c:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8015f50:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8015f54:	8a888685 	bhi	6237970 <__stack_size+0x6235970>
 8015f58:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8015f5c:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8015f60:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8015f64:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8015f68:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8015f6c:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8015f70:	bbb9b7b6 	bllt	6e83e50 <__stack_size+0x6e81e50>
 8015f74:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8015f78:	cbc9c7c5 	blgt	7287e94 <__stack_size+0x7285e94>
 8015f7c:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8015f80:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8015f84:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8015f88:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8015f8c:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8015f90:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08015f94 <gamma24_0>:
	...
 8015fa4:	01000000 	mrseq	r0, (UNDEF: 0)
 8015fa8:	01010101 	tsteq	r1, r1, lsl #2
 8015fac:	01010101 	tsteq	r1, r1, lsl #2
 8015fb0:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8015fb4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8015fb8:	03030202 	movweq	r0, #12802	; 0x3202
 8015fbc:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8015fc0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8015fc4:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8015fc8:	06060606 	streq	r0, [r6], -r6, lsl #12
 8015fcc:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8015fd0:	09090808 	stmdbeq	r9, {r3, fp}
 8015fd4:	0a0a0a09 	beq	8298800 <__exidx_end+0x2818b8>
 8015fd8:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8015fdc:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8015fe0:	0f0f0e0e 	svceq	0x000f0e0e
 8015fe4:	11111010 	tstne	r1, r0, lsl r0
 8015fe8:	13131212 	tstne	r3, #536870913	; 0x20000001
 8015fec:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8015ff0:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8015ff4:	1a1a1918 	bne	869c45c <__exidx_end+0x685514>
 8015ff8:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8015ffc:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016000:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016004:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016008:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801600c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016010:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016014:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016018:	37363535 			; <UNDEFINED> instruction: 0x37363535
 801601c:	3b3a3938 	blcc	8ea4504 <__exidx_end+0xe8d5bc>
 8016020:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8016024:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8016028:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 801602c:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8016030:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8016034:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8016038:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 801603c:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8016040:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8016044:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8016048:	7372706f 	cmnvc	r2, #111	; 0x6f
 801604c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8016050:	7f7e7c7b 	svcvc	0x007e7c7b
 8016054:	86848381 	strhi	r8, [r4], r1, lsl #7
 8016058:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 801605c:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8016060:	9b999795 	blls	667bebc <__stack_size+0x6679ebc>
 8016064:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8016068:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 801606c:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8016070:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8016074:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8016078:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 801607c:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8016080:	dad8d6d4 	ble	764bbd8 <__stack_size+0x7649bd8>
 8016084:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8016088:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 801608c:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8016090:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016094 <gamma25_0>:
	...
 80160a8:	01010000 	mrseq	r0, (UNDEF: 1)
 80160ac:	01010101 	tsteq	r1, r1, lsl #2
 80160b0:	01010101 	tsteq	r1, r1, lsl #2
 80160b4:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 80160b8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80160bc:	03030302 	movweq	r0, #13058	; 0x3302
 80160c0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80160c4:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 80160c8:	06050505 	streq	r0, [r5], -r5, lsl #10
 80160cc:	07060606 	streq	r0, [r6, -r6, lsl #12]
 80160d0:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 80160d4:	09090808 	stmdbeq	r9, {r3, fp}
 80160d8:	0a0a0a09 	beq	8298904 <__exidx_end+0x2819bc>
 80160dc:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 80160e0:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 80160e4:	0f0f0f0e 	svceq	0x000f0f0e
 80160e8:	11111010 	tstne	r1, r0, lsl r0
 80160ec:	13131212 	tstne	r3, #536870913	; 0x20000001
 80160f0:	16151414 			; <UNDEFINED> instruction: 0x16151414
 80160f4:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 80160f8:	1a1a1919 	bne	869c564 <__exidx_end+0x68561c>
 80160fc:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016100:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016104:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016108:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 801610c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016110:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016114:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8016118:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801611c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016120:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8016124:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8016128:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 801612c:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8016130:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8016134:	53525150 	cmppl	r2, #80, 2
 8016138:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801613c:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8016140:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8016144:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8016148:	6f6e6c6b 	svcvs	0x006e6c6b
 801614c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8016150:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8016154:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8016158:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 801615c:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8016160:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8016164:	9f9d9b99 	svcls	0x009d9b99
 8016168:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 801616c:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8016170:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8016174:	bfbdbab8 	svclt	0x00bdbab8
 8016178:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 801617c:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8016180:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8016184:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8016188:	ebe9e7e4 	bl	7a90120 <__stack_size+0x7a8e120>
 801618c:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8016190:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016194 <gamma25_5>:
 8016194:	01010100 	mrseq	r0, (UNDEF: 17)
 8016198:	01010101 	tsteq	r1, r1, lsl #2
 801619c:	01010101 	tsteq	r1, r1, lsl #2
 80161a0:	01010101 	tsteq	r1, r1, lsl #2
 80161a4:	01010101 	tsteq	r1, r1, lsl #2
 80161a8:	01010101 	tsteq	r1, r1, lsl #2
 80161ac:	01010101 	tsteq	r1, r1, lsl #2
 80161b0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80161b4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80161b8:	03030302 	movweq	r0, #13058	; 0x3302
 80161bc:	03030303 	movweq	r0, #13059	; 0x3303
 80161c0:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 80161c4:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 80161c8:	06060605 	streq	r0, [r6], -r5, lsl #12
 80161cc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 80161d0:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 80161d4:	0a090909 	beq	8258600 <__exidx_end+0x2416b8>
 80161d8:	0b0b0a0a 	bleq	82d8a08 <__exidx_end+0x2c1ac0>
 80161dc:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 80161e0:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 80161e4:	100f0f0f 	andne	r0, pc, pc, lsl #30
 80161e8:	12111110 	andsne	r1, r1, #16, 2
 80161ec:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 80161f0:	16161514 			; <UNDEFINED> instruction: 0x16161514
 80161f4:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 80161f8:	1b1a1a19 	blne	869ca64 <__exidx_end+0x685b1c>
 80161fc:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8016200:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8016204:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8016208:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801620c:	2a292827 	bcs	8a602b0 <__exidx_end+0xa49368>
 8016210:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8016214:	31302f2e 	teqcc	r0, lr, lsr #30
 8016218:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801621c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016220:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8016224:	41403f3e 	cmpmi	r0, lr, lsr pc
 8016228:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801622c:	4a494846 	bmi	926834c <__exidx_end+0x1251404>
 8016230:	4f4e4c4b 	svcmi	0x004e4c4b
 8016234:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8016238:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801623c:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8016240:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8016244:	6a686765 	bvs	9a2ffe0 <__exidx_end+0x1a19098>
 8016248:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801624c:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8016250:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8016254:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8016258:	8a888685 	bhi	6237c74 <__stack_size+0x6235c74>
 801625c:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8016260:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8016264:	9f9d9c9a 	svcls	0x009d9c9a
 8016268:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 801626c:	afadaba9 	svcge	0x00adaba9
 8016270:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8016274:	bfbdbbb9 	svclt	0x00bdbbb9
 8016278:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 801627c:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 8016280:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8016284:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 8016288:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 801628c:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 8016290:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 8016294:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8016298:	006e776f 	rsbeq	r7, lr, pc, ror #14
 801629c:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80162a0:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80162a4:	 	andeq	r0, r0, #100	; 0x64

080162a6 <CSWTCH.18>:
 80162a6:	02020200 	andeq	r0, r2, #0, 4
 80162aa:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 80162ae:	 	ldrbmi	r0, [r2, -r0, lsl #10]

080162b0 <PixelType::MAPS>:
 80162b0:	00424752 	subeq	r4, r2, r2, asr r7
 80162b4:	00474252 	subeq	r4, r7, r2, asr r2
 80162b8:	00425247 	subeq	r5, r2, r7, asr #4
 80162bc:	00524247 	subseq	r4, r2, r7, asr #4
 80162c0:	00475242 	subeq	r5, r7, r2, asr #4
 80162c4:	00524742 	subseq	r4, r2, r2, asr #14

080162c8 <PixelType::TYPES>:
 80162c8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162cc:	00003130 	andeq	r3, r0, r0, lsr r1
 80162d0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162d4:	00003131 	andeq	r3, r0, r1, lsr r1
 80162d8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162dc:	00003231 	andeq	r3, r0, r1, lsr r2
 80162e0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162e4:	00423231 	subeq	r3, r2, r1, lsr r2
 80162e8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162ec:	00003331 	andeq	r3, r0, r1, lsr r3
 80162f0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80162f4:	00003531 	andeq	r3, r0, r1, lsr r5
 80162f8:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80162fc:	00003231 	andeq	r3, r0, r1, lsr r2
 8016300:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016304:	00573231 	subseq	r3, r7, r1, lsr r2
 8016308:	31534355 	cmpcc	r3, r5, asr r3
 801630c:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016310:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8016314:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016318:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801631c:	00003231 	andeq	r3, r0, r1, lsr r2
 8016320:	31415041 	cmpcc	r1, r1, asr #32
 8016324:	00003230 	andeq	r3, r0, r0, lsr r2
 8016328:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801632c:	00003232 	andeq	r3, r0, r2, lsr r2
 8016330:	31383950 	teqcc	r8, r0, asr r9
 8016334:	00000033 	andeq	r0, r0, r3, lsr r0

08016338 <s_patternName>:
 8016338:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8016344:	61520000 	cmpvs	r2, r0
 8016348:	6f626e69 	svcvs	0x00626e69
 801634c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 8016350:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8016354:	61656854 	cmnvs	r5, r4, asr r8
 8016358:	20726574 	rsbscs	r6, r2, r4, ror r5
 801635c:	73616863 	cmnvc	r1, #6488064	; 0x630000
 8016360:	6f430065 	svcvs	0x00430065
 8016364:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 8016368:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801636c:	00000065 	andeq	r0, r0, r5, rrx
 8016370:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 8016374:	0072656e 	rsbseq	r6, r2, lr, ror #10
 8016378:	00000000 	andeq	r0, r0, r0
 801637c:	61460000 	mrsvs	r0, (UNDEF: 70)
 8016380:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801638c <gamma10_0>:
 801638c:	03020100 	movweq	r0, #8448	; 0x2100
 8016390:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8016394:	0b0a0908 	bleq	82987bc <__exidx_end+0x281874>
 8016398:	0f0e0d0c 	svceq	0x000e0d0c
 801639c:	13121110 	tstne	r2, #16, 2
 80163a0:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80163a4:	1b1a1918 	blne	869c80c <__exidx_end+0x6858c4>
 80163a8:	1f1e1d1c 	svcne	0x001e1d1c
 80163ac:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80163b0:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80163b4:	2b2a2928 	blcs	8aa085c <__exidx_end+0xa89914>
 80163b8:	2f2e2d2c 	svccs	0x002e2d2c
 80163bc:	33323130 	teqcc	r2, #48, 2
 80163c0:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80163c4:	3b3a3938 	blcc	8ea48ac <__exidx_end+0xe8d964>
 80163c8:	3f3e3d3c 	svccc	0x003e3d3c
 80163cc:	43424140 	movtmi	r4, #8512	; 0x2140
 80163d0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80163d4:	4b4a4948 	blmi	92a88fc <__exidx_end+0x12919b4>
 80163d8:	4f4e4d4c 	svcmi	0x004e4d4c
 80163dc:	53525150 	cmppl	r2, #80, 2
 80163e0:	57565554 			; <UNDEFINED> instruction: 0x57565554
 80163e4:	5b5a5958 	blpl	96ac94c <__exidx_end+0x1695a04>
 80163e8:	5f5e5d5c 	svcpl	0x005e5d5c
 80163ec:	63626160 	cmnvs	r2, #96, 2
 80163f0:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80163f4:	6b6a6968 	blvs	9ab099c <__exidx_end+0x1a99a54>
 80163f8:	6f6e6d6c 	svcvs	0x006e6d6c
 80163fc:	73727170 	cmnvc	r2, #112, 2
 8016400:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016404:	7b7a7978 	blvc	9eb49ec <__exidx_end+0x1e9daa4>
 8016408:	7f7e7d7c 	svcvc	0x007e7d7c
 801640c:	83828180 	orrhi	r8, r2, #128, 2
 8016410:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016414:	8b8a8988 	blhi	62b8a3c <__stack_size+0x62b6a3c>
 8016418:	8f8e8d8c 	svchi	0x008e8d8c
 801641c:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016420:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016424:	9b9a9998 	blls	66bca8c <__stack_size+0x66baa8c>
 8016428:	9f9e9d9c 	svcls	0x009e9d9c
 801642c:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016430:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8016434:	abaaa9a8 	blge	6ac0adc <__stack_size+0x6abeadc>
 8016438:	afaeadac 	svcge	0x00aeadac
 801643c:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016440:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8016444:	bbbab9b8 	bllt	6ec4b2c <__stack_size+0x6ec2b2c>
 8016448:	bfbebdbc 	svclt	0x00bebdbc
 801644c:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016450:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8016454:	cbcac9c8 	blgt	72c8b7c <__stack_size+0x72c6b7c>
 8016458:	cfcecdcc 	svcgt	0x00cecdcc
 801645c:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8016460:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8016464:	dbdad9d8 	blle	76ccbcc <__stack_size+0x76cabcc>
 8016468:	dfdedddc 	svcle	0x00dedddc
 801646c:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8016470:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8016474:	ebeae9e8 	bl	7ad0c1c <__stack_size+0x7acec1c>
 8016478:	efeeedec 	svc	0x00eeedec
 801647c:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8016480:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8016484:	fbfaf9f8 	blx	7ed4c6e <__stack_size+0x7ed2c6e>
 8016488:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 801648c:	5f706374 	svcpl	0x00706374
 8016490:	69676562 	stmdbvs	r7!, {r1, r5, r6, r8, sl, sp, lr}^
 8016494:	74203a6e 	strtvc	r3, [r0], #-2670	; 0xfffff592
 8016498:	6d206f6f 	stcvs	15, cr6, [r0, #-444]!	; 0xfffffe44
 801649c:	20796e61 	rsbscs	r6, r9, r1, ror #28
 80164a0:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
 80164a4:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80164a8:	00736e6f 	rsbseq	r6, r3, pc, ror #28
 80164ac:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 80164b0:	626e7500 	rsbvs	r7, lr, #0, 10
 80164b4:	0a646e69 	beq	9931e60 <__exidx_end+0x191af18>
 80164b8:	50524100 	subspl	r4, r2, r0, lsl #2
 80164bc:	6f6f6c20 	svcvs	0x006f6c20
 80164c0:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80164c4:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80164c8:	2d206465 	cfstrscs	mvf6, [r0, #-404]!	; 0xfffffe6c
 80164cc:	6564203e 	strbvs	r2, [r4, #-62]!	; 0xffffffc2
 80164d0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 80164d4:	61672074 	smcvs	29188	; 0x7204
 80164d8:	61776574 	cmnvs	r7, r4, ror r5
 80164dc:	41000a79 	tstmi	r0, r9, ror sl
 80164e0:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80164e4:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80164e8:	61662070 	smcvs	25088	; 0x6200
 80164ec:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80164f0:	 	svcvs	0x0043000a

080164f2 <NetworkConst::MSG_MDNS_CONFIG>:
 80164f2:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80164f6:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80164fa:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80164fe:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08016503 <NetworkConst::MSG_NETWORK_INIT>:
 8016503:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8016507:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801650b:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801650f:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8016513:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8016517:	3135322e 	teqcc	r5, lr, lsr #4
 801651b:	63745f00 	cmnvs	r4, #0, 30
 801651f:	6f6c2e70 	svcvs	0x006c2e70
 8016523:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8016527:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801652b:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801652f:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8016537 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8016533:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8016537:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80156db <index_js+0x54b>
 801653b:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801653f:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8016543:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8016547:	20000a53 	andcs	r0, r0, r3, asr sl
 801654b:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801654f:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8016553:	0a676e69 	beq	99f1eff <__exidx_end+0x19dafb7>
 8016557:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801655b:	3a20656d 	bcc	882fb17 <__exidx_end+0x818bcf>
 801655f:	0a732520 	beq	9cdf9e7 <__exidx_end+0x1cc8a9f>
 8016563:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8016567:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801656b:	000a7325 	andeq	r7, sl, r5, lsr #6
 801656f:	30687465 	rsbcc	r7, r8, r5, ror #8
 8016573:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8016577:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801657b:	5f656369 	svcpl	0x00656369
 801657f:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8016583:	6b726f77 	blvs	9cb2367 <__exidx_end+0x1c9b41f>
 8016587:	4820000a 	stmdami	r0!, {r1, r3}
 801658b:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801658f:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8016593:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016597:	20000a73 	andcs	r0, r0, r3, ror sl
 801659b:	614e6649 	cmpvs	lr, r9, asr #12
 801659f:	2020656d 	eorcs	r6, r0, sp, ror #10
 80165a3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80165a7:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80165ab:	000a7325 	andeq	r7, sl, r5, lsr #6
 80165af:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80165b3:	20202074 	eorcs	r2, r0, r4, ror r0
 80165b7:	3a202020 	bcc	881e63f <__exidx_end+0x8076f7>
 80165bb:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80165bf:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165c3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165c7:	0a64252f 	beq	991fa8b <__exidx_end+0x1908b43>
 80165cb:	654e2000 	strbvs	r2, [lr, #-0]
 80165cf:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80165d3:	2020206b 	eorcs	r2, r0, fp, rrx
 80165d7:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80165db:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80165df:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165e3:	20000a64 	andcs	r0, r0, r4, ror #20
 80165e7:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80165eb:	20796177 	rsbscs	r6, r9, r7, ror r1
 80165ef:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80165f3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165f7:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165fb:	0a64252e 	beq	991fabb <__exidx_end+0x1908b73>
 80165ff:	72422000 	subvc	r2, r2, #0
 8016603:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8016607:	20747361 	rsbscs	r7, r4, r1, ror #6
 801660b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801660f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016613:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016617:	20000a64 	andcs	r0, r0, r4, ror #20
 801661b:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801661f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016623:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016627:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801662b:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801662f:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8016633:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8016637:	3a78322e 	bcc	9e22ef7 <__exidx_end+0x1e0bfaf>
 801663b:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801663f:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8016643:	20000a78 	andcs	r0, r0, r8, ror sl
 8016647:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801664b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801664f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016653:	000a6325 	andeq	r6, sl, r5, lsr #6
 8016657:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801665b:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801665f:	 	rsbvc	r0, r9, r0, asr r0

08016661 <NetworkParamsConst::IP_ADDRESS>:
 8016661:	615f7069 	cmpvs	pc, r9, rrx
 8016665:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8016669:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801666c <NetworkParamsConst::DEFAULT_GATEWAY>:
 801666c:	61666564 	cmnvs	r6, r4, ror #10
 8016670:	5f746c75 	svcpl	0x00746c75
 8016674:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016678:	00796177 	rsbseq	r6, r9, r7, ror r1

0801667c <NetworkParamsConst::DHCP_RETRY_TIME>:
 801667c:	70636864 	rsbvc	r6, r3, r4, ror #16
 8016680:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8016684:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801668c <NetworkParamsConst::HOSTNAME>
 8016688:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801668c <NetworkParamsConst::HOSTNAME>:
 801668c:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8016690:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016695 <NetworkParamsConst::NET_MASK>:
 8016695:	5f74656e 	svcpl	0x0074656e
 8016699:	6b73616d 	blvs	9ceec55 <__exidx_end+0x1cd7d0d>
	...

0801669e <NetworkParamsConst::USE_DHCP>:
 801669e:	5f657375 	svcpl	0x00657375
 80166a2:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080166a7 <NetworkParamsConst::FILE_NAME>:
 80166a7:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80166ab:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80166af:	00747874 	rsbseq	r7, r4, r4, ror r8
 80166b3:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80166b7:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80166bb:	61747320 	cmnvs	r4, r0, lsr #6
 80166bf:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80166c3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80166c7:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80166cb:	252f6425 	strcs	r6, [pc, #-1061]!	; 80162ae <CSWTCH.18+0x8>
 80166cf:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80166d3:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80166d7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80166db:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80166df:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80166e3:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80166e7:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80166eb:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80166ef:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80166f3:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80166f7:	20657261 	rsbcs	r7, r5, r1, ror #4
 80166fb:	2a2e2556 	bcs	8b9fc5b <__exidx_end+0xb88d13>
 80166ff:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8016703:	72205043 	eorvc	r5, r0, #67	; 0x43
 8016707:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801670b:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801670f:	50434844 	subpl	r4, r3, r4, asr #16
 8016713:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8016717:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801671b:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801671f:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8016723:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8016727:	6f647475 	svcvs	0x00647475
 801672b:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08016730 <pArray>:
 8016730:	080167c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, sp, lr}
 8016734:	08016780 	stmdaeq	r1, {r7, r8, r9, sl, sp, lr}
 8016738:	08016661 	stmdaeq	r1, {r0, r5, r6, r9, sl, sp, lr}
 801673c:	080167ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, sl, sp, lr}
 8016740:	08016b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, sp, lr}
 8016744:	0801678b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, sp, lr}
 8016748:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 801674c:	0801668c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp, lr}
 8016750:	08016a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, sp, lr}
 8016754:	08016a75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, fp, sp, lr}
 8016758:	08016a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, sp, lr}
 801675c:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016760:	08016695 	stmdaeq	r1, {r0, r2, r4, r7, r9, sl, sp, lr}
 8016764:	08016b01 	stmdaeq	r1, {r0, r8, r9, fp, sp, lr}
 8016768:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 801676c:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 8016770:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 8016774:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 8016778:	0801666c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, sp, lr}
 801677c:	08016798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, sp, lr}

08016780 <DisplayUdfParamsConst::BOARD_NAME>:
 8016780:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8016784:	616e5f64 	cmnvs	lr, r4, ror #30
 8016788:	 	tstvs	r0, sp, ror #10

0801678b <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801678b:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801678f:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8016793:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08016798 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8016798:	5f786d64 	svcpl	0x00786d64
 801679c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80167a0:	6f697463 	svcvs	0x00697463
 80167a4:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080167a6 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80167a6:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80167aa:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80167ae:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8016249 <gamma25_5+0xb5>
 80167b2:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080167b4 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80167b4:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80167b8:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80167bc:	61636974 	smcvs	13972	; 0x3694
 80167c0:	00796c6c 	rsbseq	r6, r9, ip, ror #24

080167c4 <DisplayUdfParamsConst::TITLE>:
 80167c4:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80167c8:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080167ca <DisplayUdfParamsConst::VERSION>:
 80167ca:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80167ce:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080167d2 <DisplayUdfParamsConst::FILE_NAME>:
 80167d2:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80167d6:	2e79616c 	rpwcsez	f6, f1, #4.0
 80167da:	00747874 	rsbseq	r7, r4, r4, ror r8

080167de <DisplayUdfParamsConst::INTENSITY>:
 80167de:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80167e2:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80167e6:	50410079 	subpl	r0, r1, r9, ror r0
 80167ea:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80167ee:	726f5000 	rsbvc	r5, pc, #0
 80167f2:	63252074 			; <UNDEFINED> instruction: 0x63252074
 80167f6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80167fa:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80167fe:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8016802:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8016806:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801680a:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

08016810 <s_aStorSize>:
 8016810:	00000060 	andeq	r0, r0, r0, rrx
 8016814:	00000090 	muleq	r0, r0, r0
 8016818:	00000020 	andeq	r0, r0, r0, lsr #32
 801681c:	00000040 	andeq	r0, r0, r0, asr #32
 8016820:	00000060 	andeq	r0, r0, r0, rrx
 8016824:	00000040 	andeq	r0, r0, r0, asr #32
 8016828:	00000020 	andeq	r0, r0, r0, lsr #32
 801682c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016830:	000001e0 	andeq	r0, r0, r0, ror #3
 8016834:	00000040 	andeq	r0, r0, r0, asr #32
 8016838:	00000020 	andeq	r0, r0, r0, lsr #32
 801683c:	00000060 	andeq	r0, r0, r0, rrx
 8016840:	00000030 	andeq	r0, r0, r0, lsr r0
 8016844:	00000020 	andeq	r0, r0, r0, lsr #32
 8016848:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 801684c:	00000030 	andeq	r0, r0, r0, lsr r0
 8016850:	00000040 	andeq	r0, r0, r0, asr #32
 8016854:	00000020 	andeq	r0, r0, r0, lsr #32
 8016858:	00000060 	andeq	r0, r0, r0, rrx
 801685c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016860:	00000400 	andeq	r0, r0, r0, lsl #8
 8016864:	00000020 	andeq	r0, r0, r0, lsr #32
 8016868:	00000020 	andeq	r0, r0, r0, lsr #32
 801686c:	00000040 	andeq	r0, r0, r0, asr #32
 8016870:	00000060 	andeq	r0, r0, r0, rrx
 8016874:	00000020 	andeq	r0, r0, r0, lsr #32
 8016878:	00000020 	andeq	r0, r0, r0, lsr #32
 801687c:	000000c0 	andeq	r0, r0, r0, asr #1

08016880 <vtable for StoreDisplayUdf>:
	...
 8016888:	08010c11 	stmdaeq	r1, {r0, r4, sl, fp}
 801688c:	08010c5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, fp}
 8016890:	08010c39 	stmdaeq	r1, {r0, r3, r4, r5, sl, fp}
 8016894:	08010c15 	stmdaeq	r1, {r0, r2, r4, sl, fp}

08016898 <vtable for StoreNetwork>:
	...
 80168a0:	08010c7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sl, fp}
 80168a4:	08010d91 	stmdaeq	r1, {r0, r4, r7, r8, sl, fp}
 80168a8:	08010c85 	stmdaeq	r1, {r0, r2, r7, sl, fp}
 80168ac:	08010da5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, fp}
 80168b0:	08010d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp}
 80168b4:	08010d09 	stmdaeq	r1, {r0, r3, r8, sl, fp}
 80168b8:	08010cd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, fp}
 80168bc:	08010d61 	stmdaeq	r1, {r0, r5, r6, r8, sl, fp}
 80168c0:	08010ca9 	stmdaeq	r1, {r0, r3, r5, r7, sl, fp}
 80168c4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80168c8:	00000000 	andeq	r0, r0, r0
 80168cc:	08010c7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, fp}
 80168d0:	08010d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp}
 80168d4:	08010d59 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, fp}
 80168d8:	08010d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp}
 80168dc:	08010d01 	stmdaeq	r1, {r0, r8, sl, fp}
 80168e0:	08010d89 	stmdaeq	r1, {r0, r3, r7, r8, sl, fp}
 80168e4:	08010cd1 	stmdaeq	r1, {r0, r4, r6, r7, sl, fp}

080168e8 <vtable for StoreRemoteConfig>:
	...
 80168f0:	08010ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp}
 80168f4:	08010e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp}
 80168f8:	08010e05 	stmdaeq	r1, {r0, r2, r9, sl, fp}
 80168fc:	08010de1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, fp}

08016900 <vtable for StoreE131>:
	...
 8016908:	08010e9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, fp}
 801690c:	08010ee5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, fp}
 8016910:	08010ec1 	stmdaeq	r1, {r0, r6, r7, r9, sl, fp}
 8016914:	08010e9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp}

08016918 <vtable for StorePixelDmx>:
	...
 8016920:	08010f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp}
 8016924:	08011071 	stmdaeq	r1, {r0, r4, r5, r6, ip}
 8016928:	08010f0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sl, fp}
 801692c:	08011085 	stmdaeq	r1, {r0, r2, r7, ip}
 8016930:	0801103d 	stmdaeq	r1, {r0, r2, r3, r4, r5, ip}
 8016934:	08011009 	stmdaeq	r1, {r0, r3, ip}
 8016938:	08010fd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, fp}
 801693c:	08010f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp}
 8016940:	08010f65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, fp}
 8016944:	08010f31 	stmdaeq	r1, {r0, r4, r5, r8, r9, sl, fp}
 8016948:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801694c:	00000000 	andeq	r0, r0, r0
 8016950:	08010f07 	stmdaeq	r1, {r0, r1, r2, r8, r9, sl, fp}
 8016954:	0801107d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, ip}
 8016958:	08011069 	stmdaeq	r1, {r0, r3, r5, r6, ip}
 801695c:	08011035 	stmdaeq	r1, {r0, r2, r4, r5, ip}
 8016960:	08011001 	stmdaeq	r1, {r0, ip}
 8016964:	08010fc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sl, fp}
 8016968:	08010f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp}
 801696c:	08010f5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, fp}
 8016970:	3a434d46 	bcc	90e9e90 <__exidx_end+0x10d2f48>
 8016974:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8016978:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 801697c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8016980:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8016984:	6f742068 	svcvs	0x00742068
 8016988:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801698c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8016990:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8016994:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016998:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 801699c:	 	cmnvs	r7, sl

0801699e <DevicesParamsConst::GAMMA_VALUE>:
 801699e:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80169a2:	61765f61 	cmnvs	r6, r1, ror #30
 80169a6:	0065756c 	rsbeq	r7, r5, ip, ror #10

080169aa <DevicesParamsConst::SPI_SPEED_HZ>:
 80169aa:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 80169ae:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 80169b2:	5f646565 	svcpl	0x00646565
 80169b6:	 	strvc	r7, [r0], #-2664	; 0xfffff598

080169b9 <DevicesParamsConst::TEST_PATTERN>:
 80169b9:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80169bd:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80169c1:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080169c6 <DevicesParamsConst::GROUPING_COUNT>:
 80169c6:	5f64656c 	svcpl	0x0064656c
 80169ca:	756f7267 	strbvc	r7, [pc, #-615]!	; 801676b <pArray+0x3b>
 80169ce:	6f635f70 	svcvs	0x00635f70
 80169d2:	00746e75 	rsbseq	r6, r4, r5, ror lr

080169d6 <DevicesParamsConst::GAMMA_CORRECTION>:
 80169d6:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80169da:	6f635f61 	svcvs	0x00635f61
 80169de:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 80169e2:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

080169e7 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 80169e7:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 80169eb:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 80169ef:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80169f3:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 80169f7:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

080169f9 <DevicesParamsConst::MAP>:
 80169f9:	5f64656c 	svcpl	0x0064656c
 80169fd:	5f626772 	svcpl	0x00626772
 8016a01:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8016a05:	00676e69 	rsbeq	r6, r7, r9, ror #28

08016a09 <DevicesParamsConst::TYPE>:
 8016a09:	5f64656c 	svcpl	0x0064656c
 8016a0d:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08016a12 <DevicesParamsConst::COUNT>:
 8016a12:	5f64656c 	svcpl	0x0064656c
 8016a16:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016a1a:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08016a1c <DevicesParamsConst::LED_T0H>:
 8016a1c:	5f64656c 	svcpl	0x0064656c
 8016a20:	00683074 	rsbeq	r3, r8, r4, ror r0

08016a24 <DevicesParamsConst::LED_T1H>:
 8016a24:	5f64656c 	svcpl	0x0064656c
 8016a28:	00683174 	rsbeq	r3, r8, r4, ror r1

08016a2c <DevicesParamsConst::FILE_NAME>:
 8016a2c:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8016a30:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8016a34:	00747874 	rsbseq	r7, r4, r4, ror r8
 8016a38:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016a3c:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016a40:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016a44:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016a48:	002c2264 	eoreq	r2, ip, r4, ror #4
 8016a4c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8016a50:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016a54:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016a58:	0a64252e 	beq	991ff18 <__exidx_end+0x1908fd0>
 8016a5c:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8016a60:	0a232073 	beq	88dec34 <__exidx_end+0x8c7cec>
	...

08016a65 <LightSetParamsConst::UNIVERSE_PORT>:
 8016a65:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a69:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a6d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016a71:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016a75:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a79:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a7d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016a81:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016a85:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a89:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a8d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016a91:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016a95:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016a99:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016a9d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016aa1:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016aa5 <LightSetParamsConst::START_UNI_PORT>:
 8016aa5:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8016aa9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8016aad:	6f705f69 	svcvs	0x00705f69
 8016ab1:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8016ab5:	00000000 	andeq	r0, r0, r0

08016ab9 <LightSetParamsConst::MERGE_MODE_PORT>:
 8016ab9:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016abd:	6f6d5f65 	svcvs	0x006d5f65
 8016ac1:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016ac5:	5f74726f 	svcpl	0x0074726f
 8016ac9:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8016acd:	5f656772 	svcpl	0x00656772
 8016ad1:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016ad5:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016ad9:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016add:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016ae1:	6f6d5f65 	svcvs	0x006d5f65
 8016ae5:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016ae9:	5f74726f 	svcpl	0x0074726f
 8016aed:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8016af1:	5f656772 	svcpl	0x00656772
 8016af5:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016af9:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016afd:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016b01 <LightSetParamsConst::DMX_START_ADDRESS>:
 8016b01:	5f786d64 	svcpl	0x00786d64
 8016b05:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8016b09:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8016b0d:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8016b11:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

08016b13 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 8016b13:	61736964 	cmnvs	r3, r4, ror #18
 8016b17:	5f656c62 	svcpl	0x00656c62
 8016b1b:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016b1f:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016b23:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80165be <NetworkConst::MSG_NETWORK_INIT+0xbb>
 8016b27:	 	smcvs	24580	; 0x6004

08016b29 <LightSetParamsConst::FAILSAFE>:
 8016b29:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8016b2d:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

08016b32 <LightSetParamsConst::UNIVERSE>:
 8016b32:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016b36:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08016b3b <LightSetParamsConst::DIRECTION>:
 8016b3b:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016b3f:	6f697463 	svcvs	0x00697463
 8016b43:	6f705f6e 	svcvs	0x00705f6e
 8016b47:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8016b4b:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016b4f:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016b53:	5f6e6f69 	svcpl	0x006e6f69
 8016b57:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016b5b:	0000625f 	andeq	r6, r0, pc, asr r2
 8016b5f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016b63:	6f697463 	svcvs	0x00697463
 8016b67:	6f705f6e 	svcvs	0x00705f6e
 8016b6b:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8016b6f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016b73:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016b77:	5f6e6f69 	svcpl	0x006e6f69
 8016b7b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016b7f:	0000645f 	andeq	r6, r0, pc, asr r4
 8016b83:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8016b87:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016b8b:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8016b8f:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8016b93:	31485300 	mrscc	r5, (UNDEF: 120)
 8016b97:	00363031 	eorseq	r3, r6, r1, lsr r0
 8016b9b:	31445353 	cmpcc	r4, r3, asr r3
 8016b9f:	00363033 	eorseq	r3, r6, r3, lsr r0
 8016ba3:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016ba7:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8016bab:	000a2964 	andeq	r2, sl, r4, ror #18
 8016baf:	aaeeaa40 	bge	7bc14b7 <__stack_size+0x7bbf4b7>
 8016bb3:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08016bb8 <_OledFont8x6>:
 8016bb8:	00000040 	andeq	r0, r0, r0, asr #32
 8016bbc:	40000000 	andmi	r0, r0, r0
 8016bc0:	005f0000 	subseq	r0, pc, r0
 8016bc4:	00400000 	subeq	r0, r0, r0
 8016bc8:	00070007 	andeq	r0, r7, r7
 8016bcc:	7f144000 	svcvc	0x00144000
 8016bd0:	00147f14 	andseq	r7, r4, r4, lsl pc
 8016bd4:	7f2a2440 	svcvc	0x002a2440
 8016bd8:	4000122a 	andmi	r1, r0, sl, lsr #4
 8016bdc:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8016be0:	36400062 	strbcc	r0, [r0], -r2, rrx
 8016be4:	50205649 	eorpl	r5, r0, r9, asr #12
 8016be8:	08004000 	stmdaeq	r0, {lr}
 8016bec:	00000307 	andeq	r0, r0, r7, lsl #6
 8016bf0:	221c0040 	andscs	r0, ip, #64	; 0x40
 8016bf4:	40000041 	andmi	r0, r0, r1, asr #32
 8016bf8:	1c224100 	stfnes	f4, [r2], #-0
 8016bfc:	2a400000 	bcs	9016c04 <__exidx_end+0xfffcbc>
 8016c00:	2a1c7f1c 	bcs	8736878 <__exidx_end+0x71f930>
 8016c04:	08084000 	stmdaeq	r8, {lr}
 8016c08:	0008083e 	andeq	r0, r8, lr, lsr r8
 8016c0c:	70800040 	addvc	r0, r0, r0, asr #32
 8016c10:	40000030 	andmi	r0, r0, r0, lsr r0
 8016c14:	08080808 	stmdaeq	r8, {r3, fp}
 8016c18:	00400008 	subeq	r0, r0, r8
 8016c1c:	00606000 	rsbeq	r6, r0, r0
 8016c20:	10204000 	eorne	r4, r0, r0
 8016c24:	00020408 	andeq	r0, r2, r8, lsl #8
 8016c28:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8016c2c:	40003e45 	andmi	r3, r0, r5, asr #28
 8016c30:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8016c34:	72400000 	subvc	r0, r0, #0
 8016c38:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8016c3c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8016c40:	00334d49 	eorseq	r4, r3, r9, asr #26
 8016c44:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8016c48:	4000107f 	andmi	r1, r0, pc, ror r0
 8016c4c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8016c50:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8016c54:	3149494a 	cmpcc	r9, sl, asr #18
 8016c58:	21414000 	mrscs	r4, (UNDEF: 65)
 8016c5c:	00070911 	andeq	r0, r7, r1, lsl r9
 8016c60:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8016c64:	40003649 	andmi	r3, r0, r9, asr #12
 8016c68:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8016c6c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8016c70:	00001400 	andeq	r1, r0, r0, lsl #8
 8016c74:	40004000 	andmi	r4, r0, r0
 8016c78:	00000034 	andeq	r0, r0, r4, lsr r0
 8016c7c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8016c80:	40004122 	andmi	r4, r0, r2, lsr #2
 8016c84:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8016c88:	00400014 	subeq	r0, r0, r4, lsl r0
 8016c8c:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8016c90:	01024000 	mrseq	r4, (UNDEF: 2)
 8016c94:	00060959 	andeq	r0, r6, r9, asr r9
 8016c98:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8016c9c:	40004e59 	andmi	r4, r0, r9, asr lr
 8016ca0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8016ca4:	7f40007c 	svcvc	0x0040007c
 8016ca8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8016cac:	413e4000 	teqmi	lr, r0
 8016cb0:	00224141 	eoreq	r4, r2, r1, asr #2
 8016cb4:	41417f40 	cmpmi	r1, r0, asr #30
 8016cb8:	40003e41 	andmi	r3, r0, r1, asr #28
 8016cbc:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8016cc0:	7f400041 	svcvc	0x00400041
 8016cc4:	01090909 	tsteq	r9, r9, lsl #18
 8016cc8:	413e4000 	teqmi	lr, r0
 8016ccc:	00735141 	rsbseq	r5, r3, r1, asr #2
 8016cd0:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016cd4:	40007f08 	andmi	r7, r0, r8, lsl #30
 8016cd8:	417f4100 	cmnmi	pc, r0, lsl #2
 8016cdc:	20400000 	subcs	r0, r0, r0
 8016ce0:	013f4140 	teqeq	pc, r0, asr #2
 8016ce4:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8016ce8:	00412214 	subeq	r2, r1, r4, lsl r2
 8016cec:	40407f40 	submi	r7, r0, r0, asr #30
 8016cf0:	40004040 	andmi	r4, r0, r0, asr #32
 8016cf4:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8016cf8:	7f40007f 	svcvc	0x0040007f
 8016cfc:	7f100804 	svcvc	0x00100804
 8016d00:	413e4000 	teqmi	lr, r0
 8016d04:	003e4141 	eorseq	r4, lr, r1, asr #2
 8016d08:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016d0c:	40000609 	andmi	r0, r0, r9, lsl #12
 8016d10:	2151413e 	cmpcs	r1, lr, lsr r1
 8016d14:	7f40005e 	svcvc	0x0040005e
 8016d18:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8016d1c:	49264000 	stmdbmi	r6!, {lr}
 8016d20:	00324949 	eorseq	r4, r2, r9, asr #18
 8016d24:	7f010340 	svcvc	0x00010340
 8016d28:	40000301 	andmi	r0, r0, r1, lsl #6
 8016d2c:	4040403f 	submi	r4, r0, pc, lsr r0
 8016d30:	1f40003f 	svcne	0x0040003f
 8016d34:	1f204020 	svcne	0x00204020
 8016d38:	403f4000 	eorsmi	r4, pc, r0
 8016d3c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8016d40:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8016d44:	40006314 	andmi	r6, r0, r4, lsl r3
 8016d48:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8016d4c:	61400003 	cmpvs	r0, r3
 8016d50:	434d4959 	movtmi	r4, #55641	; 0xd959
 8016d54:	7f004000 	svcvc	0x00004000
 8016d58:	00414141 	subeq	r4, r1, r1, asr #2
 8016d5c:	08040240 	stmdaeq	r4, {r6, r9}
 8016d60:	40002010 	andmi	r2, r0, r0, lsl r0
 8016d64:	41414100 	mrsmi	r4, (UNDEF: 81)
 8016d68:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8016d6c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8016d70:	40404000 	submi	r4, r0, r0
 8016d74:	00404040 	subeq	r4, r0, r0, asr #32
 8016d78:	07030040 	streq	r0, [r3, -r0, asr #32]
 8016d7c:	40000008 	andmi	r0, r0, r8
 8016d80:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8016d84:	7f400040 	svcvc	0x00400040
 8016d88:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8016d8c:	44384000 	ldrtmi	r4, [r8], #-0
 8016d90:	00284444 	eoreq	r4, r8, r4, asr #8
 8016d94:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8016d98:	40007f28 	andmi	r7, r0, r8, lsr #30
 8016d9c:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8016da0:	00400018 	subeq	r0, r0, r8, lsl r0
 8016da4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8016da8:	a4184000 	ldrge	r4, [r8], #-0
 8016dac:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8016db0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8016db4:	40007804 	andmi	r7, r0, r4, lsl #16
 8016db8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8016dbc:	20400000 	subcs	r0, r0, r0
 8016dc0:	003d4040 	eorseq	r4, sp, r0, asr #32
 8016dc4:	107f4000 	rsbsne	r4, pc, r0
 8016dc8:	00004428 	andeq	r4, r0, r8, lsr #8
 8016dcc:	7f410040 	svcvc	0x00410040
 8016dd0:	40000040 	andmi	r0, r0, r0, asr #32
 8016dd4:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8016dd8:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8016ddc:	78040408 	stmdavc	r4, {r3, sl}
 8016de0:	44384000 	ldrtmi	r4, [r8], #-0
 8016de4:	00384444 	eorseq	r4, r8, r4, asr #8
 8016de8:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8016dec:	40001824 	andmi	r1, r0, r4, lsr #16
 8016df0:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8016df4:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8016df8:	08040408 	stmdaeq	r4, {r3, sl}
 8016dfc:	54484000 	strbpl	r4, [r8], #-0
 8016e00:	00245454 	eoreq	r5, r4, r4, asr r4
 8016e04:	3f040440 	svccc	0x00040440
 8016e08:	40002444 	andmi	r2, r0, r4, asr #8
 8016e0c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8016e10:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8016e14:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8016e18:	403c4000 	eorsmi	r4, ip, r0
 8016e1c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8016e20:	10284440 	eorne	r4, r8, r0, asr #8
 8016e24:	40004428 	andmi	r4, r0, r8, lsr #8
 8016e28:	9090904c 	addsls	r9, r0, ip, asr #32
 8016e2c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8016e30:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8016e34:	08004000 	stmdaeq	r0, {lr}
 8016e38:	00004136 	andeq	r4, r0, r6, lsr r1
 8016e3c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8016e40:	40000000 	andmi	r0, r0, r0
 8016e44:	08364100 	ldmdaeq	r6!, {r8, lr}
 8016e48:	02400000 	subeq	r0, r0, #0
 8016e4c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8016e50:	263c4000 	ldrtcs	r4, [ip], -r0
 8016e54:	003c2623 	eorseq	r2, ip, r3, lsr #12

08016e58 <oled_128x32_init>:
 8016e58:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016e5c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8016e60:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016e64:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8016e68:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016e6c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016e70 <oled_128x64_init>:
 8016e70:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016e74:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8016e78:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016e7c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8016e80:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016e84:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016e88 <vtable for Ssd1306>:
	...
 8016e90:	08011a8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, fp, ip}
 8016e94:	08011ab9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, fp, ip}
 8016e98:	08011dc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, fp, ip}
 8016e9c:	08011d51 	stmdaeq	r1, {r0, r4, r6, r8, sl, fp, ip}
 8016ea0:	08011c1d 	stmdaeq	r1, {r0, r2, r3, r4, sl, fp, ip}
 8016ea4:	08011ad9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, fp, ip}
 8016ea8:	08011b01 	stmdaeq	r1, {r0, r8, r9, fp, ip}
 8016eac:	08011bf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, fp, ip}
 8016eb0:	08011bad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, fp, ip}
 8016eb4:	08011a8f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, fp, ip}
 8016eb8:	08011c59 	stmdaeq	r1, {r0, r3, r4, r6, sl, fp, ip}
 8016ebc:	08011c65 	stmdaeq	r1, {r0, r2, r5, r6, sl, fp, ip}
 8016ec0:	08011c7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, fp, ip}
 8016ec4:	08011a91 	stmdaeq	r1, {r0, r4, r7, r9, fp, ip}
 8016ec8:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8016ecc:	5b1b006d 	blpl	86d7088 <__exidx_end+0x6c0140>
 8016ed0:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8016ed4:	31335b1b 	teqcc	r3, fp, lsl fp
 8016ed8:	5b1b006d 	blpl	86d7094 <__exidx_end+0x6c014c>
 8016edc:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8016ee0:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8016ee4:	5b1b006d 	blpl	86d70a0 <__exidx_end+0x6c0158>
 8016ee8:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8016eec:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8016ef0:	205d732a 	subscs	r7, sp, sl, lsr #6
 8016ef4:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8016ef8:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8016efc:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8016f00:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8016f04:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8016f08:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8016f0c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20

08016f10 <days_of_month>:
 8016f10:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f14:	0000001c 	andeq	r0, r0, ip, lsl r0
 8016f18:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f1c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016f20:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f24:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016f28:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f2c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f30:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016f34:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016f38:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016f3c:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08016f40 <__exidx_start>:
 8016f40:	7fff23e0 	svcvc	0x00ff23e0
 8016f44:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08016f48 <.ARM.attributes>:
 8016f48:	00002e41 	andeq	r2, r0, r1, asr #28
 8016f4c:	61656100 	cmnvs	r5, r0, lsl #2
 8016f50:	01006962 	tsteq	r0, r2, ror #18
 8016f54:	00000024 	andeq	r0, r0, r4, lsr #32
 8016f58:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8016f5c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8016f60:	0600334d 	streq	r3, [r0], -sp, asr #6
 8016f64:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8016f68:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8016f6c:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8016f70:	1a011803 	bne	805cf84 <__exidx_end+0x4603c>
 8016f74:	Address 0x0000000008016f74 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20015800 	andcs	r5, r1, r0, lsl #16

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000020 	andeq	r0, r0, r0, lsr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000040 	andeq	r0, r0, r0, asr #32
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000060 	andeq	r0, r0, r0, rrx
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000080 	andeq	r0, r0, r0, lsl #1
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000100 	andeq	r0, r0, r0, lsl #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000140 	andeq	r0, r0, r0, asr #2
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000180 	andeq	r0, r0, r0, lsl #3
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000200 	andeq	r0, r0, r0, lsl #4
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000300 	andeq	r0, r0, r0, lsl #6
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000400 	andeq	r0, r0, r0, lsl #8
20000064:	00000000 	andeq	r0, r0, r0
20000068:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000078 <SystemCoreClock>:
20000078:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

20000080 <outptr>:
20000080:	00000000 	andeq	r0, r0, r0

20000084 <RemoteConfig::s_pUdpBuffer>:
20000084:	00000000 	andeq	r0, r0, r0

20000088 <RemoteConfig::s_RemoteConfigListBin>:
	...

200000ac <RemoteConfig::s_pThis>:
200000ac:	00000000 	andeq	r0, r0, r0

200000b0 <HttpDaemon::m_Content>:
	...

20000650 <guard variable for lightset::Data::Get()::instance>:
20000650:	00000000 	andeq	r0, r0, r0

20000654 <lightset::Data::Get()::instance>:
	...

20001e64 <E131Bridge::s_pThis>:
20001e64:	00000000 	andeq	r0, r0, r0

20001e68 <s_ReceivingMask>:
20001e68:	00000000 	andeq	r0, r0, r0

20001e6c <s_nPortsMax>:
20001e6c:	00000000 	andeq	r0, r0, r0

20001e70 <WS28xxDmx::s_pThis>:
20001e70:	00000000 	andeq	r0, r0, r0

20001e74 <PixelPatterns::m_PortConfig>:
	...

20001e94 <PixelPatterns::m_nActivePorts>:
20001e94:	00000000 	andeq	r0, r0, r0

20001e98 <PixelPatterns::m_pScannerColours>:
20001e98:	00000000 	andeq	r0, r0, r0

20001e9c <PixelPatterns::m_nCount>:
20001e9c:	00000000 	andeq	r0, r0, r0

20001ea0 <PixelPatterns::m_pOutput>:
20001ea0:	00000000 	andeq	r0, r0, r0

20001ea4 <PixelTestPattern::s_Pattern>:
20001ea4:	00000000 	andeq	r0, r0, r0

20001ea8 <s_tmp>:
20001ea8:	00000000 	andeq	r0, r0, r0

20001eac <WS28xx::s_pThis>:
20001eac:	00000000 	andeq	r0, r0, r0

20001eb0 <g_ip_info>:
	...

20001ebc <g_mac_address>:
20001ebc:	00000000 	andeq	r0, r0, r0
	...

20001ec2 <s_is_dhcp>:
	...

20001ec4 <s_p>:
20001ec4:	00000000 	andeq	r0, r0, r0

20001ec8 <s_ticker>:
20001ec8:	00000000 	andeq	r0, r0, r0

20001ecc <s_mac_address>:
	...

20001ed4 <s_mac_address_arp_reply>:
	...

20001edc <s_id>:
20001edc:	00000000 	andeq	r0, r0, r0

20001ee0 <s_recv_queue>:
	...

20002a50 <s_tcb>:
	...

20002a94 <s_tcp>:
	...

20003080 <broadcast_mask>:
20003080:	00000000 	andeq	r0, r0, r0

20003084 <gw_ip>:
20003084:	00000000 	andeq	r0, r0, r0

20003088 <on_network_mask>:
20003088:	00000000 	andeq	r0, r0, r0

2000308c <s_id>:
2000308c:	00000000 	andeq	r0, r0, r0

20003090 <s_ports_allowed>:
	...

200030b0 <s_recv_queue>:
	...

20008d50 <s_send_packet>:
	...

2000933c <MDNS::s_nRemoteIp>:
2000933c:	00000000 	andeq	r0, r0, r0

20009340 <MDNS::s_nRemotePort>:
20009340:	00000000 	andeq	r0, r0, r0

20009344 <MDNS::s_nMulticastIp>:
20009344:	00000000 	andeq	r0, r0, r0

20009348 <MDNS::s_AnswerLocalIp>:
	...

2000954c <MDNS::s_ServiceRecords>:
	...

2000956c <MDNS::s_nBytesReceived>:
2000956c:	00000000 	andeq	r0, r0, r0

20009570 <MDNS::s_ServiceRecordsData>:
	...

20009774 <MDNS::s_pName>:
20009774:	00000000 	andeq	r0, r0, r0

20009778 <MDNS::s_pBuffer>:
20009778:	00000000 	andeq	r0, r0, r0

2000977c <Network::s_pThis>:
2000977c:	00000000 	andeq	r0, r0, r0

20009780 <s_arp_announce>:
	...

200097ac <s_arp_reply>:
	...

200097d8 <s_arp_request>:
	...

20009804 <s_arp_records>:
	...

20009984 <s_entry_current>:
20009984:	00000000 	andeq	r0, r0, r0

20009988 <s_dhcp_allocated_gw>:
20009988:	00000000 	andeq	r0, r0, r0

2000998c <s_dhcp_allocated_ip>:
2000998c:	00000000 	andeq	r0, r0, r0

20009990 <s_dhcp_allocated_netmask>:
20009990:	00000000 	andeq	r0, r0, r0

20009994 <s_dhcp_message>:
	...

20009bb8 <s_dhcp_server_ip>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <s_groups>:
	...

20009cdc <s_id>:
20009cdc:	00000000 	andeq	r0, r0, r0

20009ce0 <s_joins_allowed_index>:
20009ce0:	00000000 	andeq	r0, r0, r0

20009ce4 <s_leave>:
	...

20009d14 <s_multicast_mac>:
	...

20009d1c <s_report>:
	...

20009d4c <DisplayUdf::s_pThis>:
20009d4c:	00000000 	andeq	r0, r0, r0

20009d50 <ConfigStore::s_nWaitMillis>:
20009d50:	00000000 	andeq	r0, r0, r0

20009d54 <ConfigStore::s_SpiFlashData>:
	...

2000ad54 <ConfigStore::s_nStartAddress>:
2000ad54:	00000000 	andeq	r0, r0, r0

2000ad58 <ConfigStore::s_bHaveFlashChip>:
2000ad58:	00000000 	andeq	r0, r0, r0

2000ad5c <ConfigStore::s_nSpiFlashStoreSize>:
2000ad5c:	00000000 	andeq	r0, r0, r0

2000ad60 <ConfigStore::s_State>:
2000ad60:	00000000 	andeq	r0, r0, r0

2000ad64 <ConfigStore::s_pThis>:
2000ad64:	00000000 	andeq	r0, r0, r0

2000ad68 <ConfigStore::s_bIsNew>:
2000ad68:	00000000 	andeq	r0, r0, r0

2000ad6c <StoreDisplayUdf::s_pThis>:
2000ad6c:	00000000 	andeq	r0, r0, r0

2000ad70 <StoreNetwork::s_pThis>:
2000ad70:	00000000 	andeq	r0, r0, r0

2000ad74 <StoreRemoteConfig::s_pThis>:
2000ad74:	00000000 	andeq	r0, r0, r0

2000ad78 <StoreE131::s_pThis>:
2000ad78:	00000000 	andeq	r0, r0, r0

2000ad7c <StorePixelDmx::s_pThis>:
2000ad7c:	00000000 	andeq	r0, r0, r0

2000ad80 <FlashCode::s_pThis>:
2000ad80:	00000000 	andeq	r0, r0, r0

2000ad84 <flashcode::s_nAddress>:
2000ad84:	00000000 	andeq	r0, r0, r0

2000ad88 <flashcode::s_State>:
2000ad88:	00000000 	andeq	r0, r0, r0

2000ad8c <flashcode::s_nPage>:
2000ad8c:	00000000 	andeq	r0, r0, r0

2000ad90 <flashcode::s_pData>:
2000ad90:	00000000 	andeq	r0, r0, r0

2000ad94 <flashcode::s_isBank0>:
2000ad94:	00000000 	andeq	r0, r0, r0

2000ad98 <flashcode::s_nLength>:
2000ad98:	00000000 	andeq	r0, r0, r0

2000ad9c <PropertiesConfig::s_Config>:
2000ad9c:	00000000 	andeq	r0, r0, r0

2000ada0 <Display::s_pThis>:
2000ada0:	00000000 	andeq	r0, r0, r0

2000ada4 <_ClearBuffer>:
	...

2000ae2c <Ssd1306::s_pThis>:
2000ae2c:	00000000 	andeq	r0, r0, r0

2000ae30 <FirmwareVersion::s_FirmwareVersion>:
	...

2000ae46 <FirmwareVersion::s_Print>:
	...

2000ae88 <FirmwareVersion::s_pThis>:
2000ae88:	00000000 	andeq	r0, r0, r0

2000ae8c <LedBlink::s_pThis>:
2000ae8c:	00000000 	andeq	r0, r0, r0

2000ae90 <Hardware::s_pThis>:
2000ae90:	00000000 	andeq	r0, r0, r0

2000ae94 <last.0>:
2000ae94:	00000000 	andeq	r0, r0, r0

2000ae98 <s_micros>:
	...

2000aea0 <set_timer>:
2000aea0:	00000000 	andeq	r0, r0, r0

2000aea4 <s_nSysTickMillis>:
2000aea4:	00000000 	andeq	r0, r0, r0

2000aea8 <dma_current_ptp_rxdesc>:
2000aea8:	00000000 	andeq	r0, r0, r0

2000aeac <dma_current_ptp_txdesc>:
2000aeac:	00000000 	andeq	r0, r0, r0

2000aeb0 <dma_current_rxdesc>:
2000aeb0:	00000000 	andeq	r0, r0, r0

2000aeb4 <dma_current_txdesc>:
2000aeb4:	00000000 	andeq	r0, r0, r0

2000aeb8 <enet_initpara>:
	...

2000aef4 <rx_buff>:
	...

2000de94 <rxdesc_tab>:
	...

2000df14 <tx_buff>:
	...

2000eafc <txdesc_tab>:
	...

2000eb1c <s_nAddress>:
2000eb1c:	00000000 	andeq	r0, r0, r0

2000eb20 <s_TxBuffer>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
