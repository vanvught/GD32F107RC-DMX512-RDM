
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp, ip, sp, lr}
 8007008:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800700c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007010:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007014:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007018:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 800702c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007030:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800703c:	0800ff01 	stmdaeq	r0, {r0, r8, r9, sl, fp, ip, sp, lr, pc}
 8007040:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007044:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007048:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800704c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007050:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007054:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007058:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800705c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007060:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007064:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007068:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800706c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007070:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007074:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007078:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800707c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007080:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007084:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007088:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800708c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007090:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007094:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007098:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800709c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ac:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070b0:	0800b285 	stmdaeq	r0, {r0, r2, r7, r9, ip, sp, pc}
 80070b4:	0800b335 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, ip, sp, pc}
 80070b8:	0800b39d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, ip, sp, pc}
 80070bc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070cc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070dc:	0800b091 	stmdaeq	r0, {r0, r4, r7, ip, sp, pc}
 80070e0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ec:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 8007100:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800710c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007110:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007114:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007118:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800711c:	0800b3b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, ip, sp, pc}
 8007120:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007124:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007128:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800712c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007130:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007134:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007138:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800713c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007140:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007144:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007148:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800714c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 f8f7 	bl	800d394 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f004 fc1e 	bl	800b9f0 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 fb08 	bl	800d7d4 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	200010bc 	strhcs	r1, [r0], -ip
 80071e8:	200010b0 	strhcs	r1, [r0], -r0
 80071ec:	200010c2 	andcs	r1, r0, r2, asr #1

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 b9d0 	b.w	800d5a4 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	200010c2 	andcs	r1, r0, r2, asr #1

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	200010cc 	andcs	r1, r0, ip, asr #1

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f004 fc39 	bl	800baa4 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f004 fc2d 	bl	800baa4 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20001c94 	mulcs	r0, r4, ip
 800725c:	200010bc 	strhcs	r1, [r0], -ip
 8007260:	200010b0 	strhcs	r1, [r0], -r0
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f004 fd8c 	bl	800bdac <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f004 fdad 	bl	800bdfc <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	200022b0 			; <UNDEFINED> instruction: 0x200022b0
 80072ac:	20002290 	mulcs	r0, r0, r2
 80072b0:	20007f50 	andcs	r7, r0, r0, asr pc
 80072b4:	2000228c 	andcs	r2, r0, ip, lsl #5
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f005 fede 	bl	800d098 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f005 fecb 	bl	800d098 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f005 febf 	bl	800d098 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f005 feae 	bl	800d098 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f005 fea2 	bl	800d098 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f005 fe96 	bl	800d098 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f005 be9b 	b.w	800d0ac <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	20008986 	andcs	r8, r0, r6, lsl #19
 8007394:	20008980 	andcs	r8, r0, r0, lsl #19
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20008996 	mulcs	r0, r6, r9
 80073a4:	200089a0 	andcs	r8, r0, r0, lsr #19
 80073a8:	200089de 	ldrdcs	r8, [r0], -lr
 80073ac:	200089d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 80073b0:	200089ee 	andcs	r8, r0, lr, ror #19
 80073b4:	200089f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 80073b8:	200089ac 	andcs	r8, r0, ip, lsr #19

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20008b84 	andcs	r8, r0, r4, lsl #23
 80073ec:	20008a08 	andcs	r8, r0, r8, lsl #20

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 f93a 	bl	800d694 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 f8e6 	bl	800d600 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 f8cc 	bl	800d600 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc
 8007490:	20008ee0 	andcs	r8, r0, r0, ror #29
 8007494:	20008f1c 	andcs	r8, r0, ip, lsl pc
 8007498:	20008edc 	ldrdcs	r8, [r0], -ip
 800749c:	20008f14 	andcs	r8, r0, r4, lsl pc
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20008ee4 	andcs	r8, r0, r4, ror #29
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 f944 	bl	800d74c <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f008 fc9f 	bl	800fe44 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f008 fccc 	bl	800fea4 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f008 fcc9 	bl	800fea4 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	08011e9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip}
 800751c:	08013b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f009 fe03 	bl	8011130 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f009 fe0d 	bl	8011158 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 ba45 	b.w	800b9d0 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	200010c4 	andcs	r1, r0, r4, asr #1

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 faa1 	bl	800bab8 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 fa82 	bl	800baa4 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 fa73 	bl	800baa4 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 fa6b 	bl	800baa4 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 fb14 	bl	800bc50 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 fa2c 	bl	800baa4 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fa25 	bl	800baa4 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 fa44 	bl	800bb04 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 f9df 	bl	800ba70 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 f9c0 	bl	800ba70 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 f9fd 	bl	800bb04 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 fa9a 	bl	800bc50 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 fa78 	bl	800bc50 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 f987 	bl	800baa4 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 f9a3 	bl	800bb04 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 f985 	bl	800bb04 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20001c50 	andcs	r1, r0, r0, asr ip
 8007814:	20001c58 	andcs	r1, r0, r8, asr ip
 8007818:	200010e0 	andcs	r1, r0, r0, ror #1
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 f8fb 	bl	800ba70 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 f936 	bl	800bb04 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20001c50 	andcs	r1, r0, r0, asr ip

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 fa44 	bl	800bdac <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 fa3d 	bl	800bdac <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20002290 	mulcs	r0, r0, r2
 800795c:	200022b0 			; <UNDEFINED> instruction: 0x200022b0

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f005 bba6 	b.w	800d0c0 <arp_handle_request>
 8007974:	f005 bbcc 	b.w	800d110 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20008ee0 	andcs	r8, r0, r0, ror #29
 8007a14:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f005 fee8 	bl	800d83a <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f005 fee3 	bl	800d83a <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f005 fed8 	bl	800d83a <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f005 fecd 	bl	800d83a <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f005 fe9d 	bl	800d7e6 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f005 fe90 	bl	800d7e6 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f009 fb45 	bl	8011160 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	200010bc 	strhcs	r1, [r0], -ip
 8007ae0:	200010b0 	strhcs	r1, [r0], -r0

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f00a f83e 	bl	8011b84 <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <Reset_Handler>:
 8007b18:	480c      	ldr	r0, [pc, #48]	; (8007b4c <Zerobss+0x10>)
 8007b1a:	4685      	mov	sp, r0
 8007b1c:	2100      	movs	r1, #0
 8007b1e:	e003      	b.n	8007b28 <DataInit>

08007b20 <CopyData>:
 8007b20:	4b0b      	ldr	r3, [pc, #44]	; (8007b50 <Zerobss+0x14>)
 8007b22:	585b      	ldr	r3, [r3, r1]
 8007b24:	5043      	str	r3, [r0, r1]
 8007b26:	3104      	adds	r1, #4

08007b28 <DataInit>:
 8007b28:	480a      	ldr	r0, [pc, #40]	; (8007b54 <Zerobss+0x18>)
 8007b2a:	4b0b      	ldr	r3, [pc, #44]	; (8007b58 <Zerobss+0x1c>)
 8007b2c:	1842      	adds	r2, r0, r1
 8007b2e:	429a      	cmp	r2, r3
 8007b30:	d3f6      	bcc.n	8007b20 <CopyData>
 8007b32:	4a0a      	ldr	r2, [pc, #40]	; (8007b5c <Zerobss+0x20>)
 8007b34:	e002      	b.n	8007b3c <Zerobss>

08007b36 <FillZerobss>:
 8007b36:	2300      	movs	r3, #0
 8007b38:	f842 3b04 	str.w	r3, [r2], #4

08007b3c <Zerobss>:
 8007b3c:	4b08      	ldr	r3, [pc, #32]	; (8007b60 <Zerobss+0x24>)
 8007b3e:	429a      	cmp	r2, r3
 8007b40:	d3f9      	bcc.n	8007b36 <FillZerobss>
 8007b42:	f008 f9e5 	bl	800ff10 <SystemInit>
 8007b46:	f000 f901 	bl	8007d4c <main>
 8007b4a:	4770      	bx	lr
 8007b4c:	20018000 	andcs	r8, r1, r0
 8007b50:	08013c1c 	stmdaeq	r1, {r2, r3, r4, sl, fp, ip, sp}
 8007b54:	20000000 	andcs	r0, r0, r0
 8007b58:	2000008c 	andcs	r0, r0, ip, lsl #1
 8007b5c:	20000090 	mulcs	r0, r0, r0
 8007b60:	2000dd28 	andcs	sp, r0, r8, lsr #26

08007b64 <ADC0_1_IRQHandler>:
 8007b64:	e7fe      	b.n	8007b64 <ADC0_1_IRQHandler>

08007b66 <memcmp>:
 8007b66:	b510      	push	{r4, lr}
 8007b68:	3901      	subs	r1, #1
 8007b6a:	4402      	add	r2, r0
 8007b6c:	4290      	cmp	r0, r2
 8007b6e:	d101      	bne.n	8007b74 <memcmp+0xe>
 8007b70:	2000      	movs	r0, #0
 8007b72:	e005      	b.n	8007b80 <memcmp+0x1a>
 8007b74:	7803      	ldrb	r3, [r0, #0]
 8007b76:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007b7a:	42a3      	cmp	r3, r4
 8007b7c:	d001      	beq.n	8007b82 <memcmp+0x1c>
 8007b7e:	1b18      	subs	r0, r3, r4
 8007b80:	bd10      	pop	{r4, pc}
 8007b82:	3001      	adds	r0, #1
 8007b84:	e7f2      	b.n	8007b6c <memcmp+0x6>

08007b86 <DisplayHandler::~DisplayHandler()>:
 8007b86:	4770      	bx	lr

08007b88 <dmxconfigudp::atoi(char const*, unsigned int)>:
 8007b88:	4603      	mov	r3, r0
 8007b8a:	b530      	push	{r4, r5, lr}
 8007b8c:	4401      	add	r1, r0
 8007b8e:	250a      	movs	r5, #10
 8007b90:	2000      	movs	r0, #0
 8007b92:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007b96:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8007b9a:	2c09      	cmp	r4, #9
 8007b9c:	d805      	bhi.n	8007baa <dmxconfigudp::atoi(char const*, unsigned int)+0x22>
 8007b9e:	fb05 2000 	mla	r0, r5, r0, r2
 8007ba2:	4299      	cmp	r1, r3
 8007ba4:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8007ba8:	d1f3      	bne.n	8007b92 <dmxconfigudp::atoi(char const*, unsigned int)+0xa>
 8007baa:	bd30      	pop	{r4, r5, pc}

08007bac <DisplayHandler::~DisplayHandler()>:
 8007bac:	b510      	push	{r4, lr}
 8007bae:	4604      	mov	r4, r0
 8007bb0:	f007 fd3a 	bl	800f628 <operator delete(void*)>
 8007bb4:	4620      	mov	r0, r4
 8007bb6:	bd10      	pop	{r4, pc}

08007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007bb8:	b110      	cbz	r0, 8007bc0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007bba:	6803      	ldr	r3, [r0, #0]
 8007bbc:	6a1b      	ldr	r3, [r3, #32]
 8007bbe:	4718      	bx	r3
 8007bc0:	4770      	bx	lr

08007bc2 <Display::PutChar(int) [clone .isra.0]>:
 8007bc2:	b110      	cbz	r0, 8007bca <Display::PutChar(int) [clone .isra.0]+0x8>
 8007bc4:	6803      	ldr	r3, [r0, #0]
 8007bc6:	695b      	ldr	r3, [r3, #20]
 8007bc8:	4718      	bx	r3
 8007bca:	4770      	bx	lr

08007bcc <DisplayHandler::Print(unsigned int)>:
 8007bcc:	b538      	push	{r3, r4, r5, lr}
 8007bce:	7903      	ldrb	r3, [r0, #4]
 8007bd0:	b1f3      	cbz	r3, 8007c10 <DisplayHandler::Print(unsigned int)+0x44>
 8007bd2:	2904      	cmp	r1, #4
 8007bd4:	bf98      	it	ls
 8007bd6:	4b0f      	ldrls	r3, [pc, #60]	; (8007c14 <DisplayHandler::Print(unsigned int)+0x48>)
 8007bd8:	4d0f      	ldr	r5, [pc, #60]	; (8007c18 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007bda:	bf98      	it	ls
 8007bdc:	5c5c      	ldrbls	r4, [r3, r1]
 8007bde:	682b      	ldr	r3, [r5, #0]
 8007be0:	bf88      	it	hi
 8007be2:	2455      	movhi	r4, #85	; 0x55
 8007be4:	6998      	ldr	r0, [r3, #24]
 8007be6:	b178      	cbz	r0, 8007c08 <DisplayHandler::Print(unsigned int)+0x3c>
 8007be8:	7901      	ldrb	r1, [r0, #4]
 8007bea:	3901      	subs	r1, #1
 8007bec:	b2c9      	uxtb	r1, r1
 8007bee:	b168      	cbz	r0, 8007c0c <DisplayHandler::Print(unsigned int)+0x40>
 8007bf0:	7942      	ldrb	r2, [r0, #5]
 8007bf2:	3a01      	subs	r2, #1
 8007bf4:	b2d2      	uxtb	r2, r2
 8007bf6:	f7ff ffdf 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007bfa:	682b      	ldr	r3, [r5, #0]
 8007bfc:	4621      	mov	r1, r4
 8007bfe:	6998      	ldr	r0, [r3, #24]
 8007c00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007c04:	f7ff bfdd 	b.w	8007bc2 <Display::PutChar(int) [clone .isra.0]>
 8007c08:	4601      	mov	r1, r0
 8007c0a:	e7ee      	b.n	8007bea <DisplayHandler::Print(unsigned int)+0x1e>
 8007c0c:	4602      	mov	r2, r0
 8007c0e:	e7f0      	b.n	8007bf2 <DisplayHandler::Print(unsigned int)+0x26>
 8007c10:	bd38      	pop	{r3, r4, r5, pc}
 8007c12:	bf00      	nop
 8007c14:	08011f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip}
 8007c18:	20009fa0 	andcs	r9, r0, r0, lsr #31

08007c1c <Display::TextStatus(char const*)>:
 8007c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c20:	4604      	mov	r4, r0
 8007c22:	6980      	ldr	r0, [r0, #24]
 8007c24:	460d      	mov	r5, r1
 8007c26:	b360      	cbz	r0, 8007c82 <Display::TextStatus(char const*)+0x66>
 8007c28:	7947      	ldrb	r7, [r0, #5]
 8007c2a:	2100      	movs	r1, #0
 8007c2c:	1e7e      	subs	r6, r7, #1
 8007c2e:	b2f6      	uxtb	r6, r6
 8007c30:	4632      	mov	r2, r6
 8007c32:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007c36:	f04f 0800 	mov.w	r8, #0
 8007c3a:	f7ff ffbd 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c3e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007c42:	45c1      	cmp	r9, r8
 8007c44:	69a0      	ldr	r0, [r4, #24]
 8007c46:	d816      	bhi.n	8007c76 <Display::TextStatus(char const*)+0x5a>
 8007c48:	4632      	mov	r2, r6
 8007c4a:	2100      	movs	r1, #0
 8007c4c:	f7ff ffb4 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c50:	69a0      	ldr	r0, [r4, #24]
 8007c52:	b1b0      	cbz	r0, 8007c82 <Display::TextStatus(char const*)+0x66>
 8007c54:	2300      	movs	r3, #0
 8007c56:	7901      	ldrb	r1, [r0, #4]
 8007c58:	5cea      	ldrb	r2, [r5, r3]
 8007c5a:	b11a      	cbz	r2, 8007c64 <Display::TextStatus(char const*)+0x48>
 8007c5c:	1c5a      	adds	r2, r3, #1
 8007c5e:	4299      	cmp	r1, r3
 8007c60:	4613      	mov	r3, r2
 8007c62:	dcf9      	bgt.n	8007c58 <Display::TextStatus(char const*)+0x3c>
 8007c64:	6802      	ldr	r2, [r0, #0]
 8007c66:	4639      	mov	r1, r7
 8007c68:	69d4      	ldr	r4, [r2, #28]
 8007c6a:	b2db      	uxtb	r3, r3
 8007c6c:	462a      	mov	r2, r5
 8007c6e:	46a4      	mov	ip, r4
 8007c70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c74:	4760      	bx	ip
 8007c76:	2120      	movs	r1, #32
 8007c78:	f7ff ffa3 	bl	8007bc2 <Display::PutChar(int) [clone .isra.0]>
 8007c7c:	f108 0801 	add.w	r8, r8, #1
 8007c80:	e7df      	b.n	8007c42 <Display::TextStatus(char const*)+0x26>
 8007c82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007c86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c88:	4605      	mov	r5, r0
 8007c8a:	461e      	mov	r6, r3
 8007c8c:	460f      	mov	r7, r1
 8007c8e:	4614      	mov	r4, r2
 8007c90:	f7ff ffc4 	bl	8007c1c <Display::TextStatus(char const*)>
 8007c94:	7c6b      	ldrb	r3, [r5, #17]
 8007c96:	b19b      	cbz	r3, 8007cc0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8007c98:	43e2      	mvns	r2, r4
 8007c9a:	2312      	movs	r3, #18
 8007c9c:	7a28      	ldrb	r0, [r5, #8]
 8007c9e:	f88d 3004 	strb.w	r3, [sp, #4]
 8007ca2:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007ca6:	f88d 3005 	strb.w	r3, [sp, #5]
 8007caa:	f88d 2006 	strb.w	r2, [sp, #6]
 8007cae:	f009 faef 	bl	8011290 <gd32_i2c_set_address>
 8007cb2:	68e8      	ldr	r0, [r5, #12]
 8007cb4:	f009 fae4 	bl	8011280 <gd32_i2c_set_baudrate>
 8007cb8:	2103      	movs	r1, #3
 8007cba:	a801      	add	r0, sp, #4
 8007cbc:	f009 faee 	bl	801129c <gd32_i2c_write>
 8007cc0:	1c73      	adds	r3, r6, #1
 8007cc2:	d006      	beq.n	8007cd2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8007cc4:	4639      	mov	r1, r7
 8007cc6:	4630      	mov	r0, r6
 8007cc8:	b003      	add	sp, #12
 8007cca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8007cce:	f007 bb4f 	b.w	800f370 <console_status>
 8007cd2:	b003      	add	sp, #12
 8007cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007cd8 <Display::SetSleep(bool)>:
 8007cd8:	b538      	push	{r3, r4, r5, lr}
 8007cda:	4604      	mov	r4, r0
 8007cdc:	6980      	ldr	r0, [r0, #24]
 8007cde:	460d      	mov	r5, r1
 8007ce0:	b138      	cbz	r0, 8007cf2 <Display::SetSleep(bool)+0x1a>
 8007ce2:	6803      	ldr	r3, [r0, #0]
 8007ce4:	7421      	strb	r1, [r4, #16]
 8007ce6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ce8:	4798      	blx	r3
 8007cea:	b915      	cbnz	r5, 8007cf2 <Display::SetSleep(bool)+0x1a>
 8007cec:	4b01      	ldr	r3, [pc, #4]	; (8007cf4 <Display::SetSleep(bool)+0x1c>)
 8007cee:	681b      	ldr	r3, [r3, #0]
 8007cf0:	6063      	str	r3, [r4, #4]
 8007cf2:	bd38      	pop	{r3, r4, r5, pc}
 8007cf4:	2000a0ac 	andcs	sl, r0, ip, lsr #1

08007cf8 <display::timeout::gpio_init()>:
 8007cf8:	b510      	push	{r4, lr}
 8007cfa:	f240 6003 	movw	r0, #1539	; 0x603
 8007cfe:	f008 feff 	bl	8010b00 <rcu_periph_clock_enable>
 8007d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d06:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8007d0a:	2203      	movs	r2, #3
 8007d0c:	2148      	movs	r1, #72	; 0x48
 8007d0e:	4801      	ldr	r0, [pc, #4]	; (8007d14 <display::timeout::gpio_init()+0x1c>)
 8007d10:	f008 be5e 	b.w	80109d0 <gpio_init>
 8007d14:	40010c00 	andmi	r0, r1, r0, lsl #24

08007d18 <display::timeout::gpio_renew()>:
 8007d18:	4b03      	ldr	r3, [pc, #12]	; (8007d28 <display::timeout::gpio_renew()+0x10>)
 8007d1a:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8007d1e:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 8007d22:	f3c0 3080 	ubfx	r0, r0, #14, #1
 8007d26:	4770      	bx	lr
 8007d28:	40010000 	andmi	r0, r1, r0

08007d2c <Hardware::RebootHandler()>:
 8007d2c:	b508      	push	{r3, lr}
 8007d2e:	4b05      	ldr	r3, [pc, #20]	; (8007d44 <Hardware::RebootHandler()+0x18>)
 8007d30:	6818      	ldr	r0, [r3, #0]
 8007d32:	f003 fde1 	bl	800b8f8 <Dmx::Blackout()>
 8007d36:	4b04      	ldr	r3, [pc, #16]	; (8007d48 <Hardware::RebootHandler()+0x1c>)
 8007d38:	6818      	ldr	r0, [r3, #0]
 8007d3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007d3e:	f001 be29 	b.w	8009994 <E131Bridge::Stop()>
 8007d42:	bf00      	nop
 8007d44:	200010a4 	andcs	r1, r0, r4, lsr #1
 8007d48:	20000c68 	andcs	r0, r0, r8, ror #24

08007d4c <main>:
 8007d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d50:	f2ad 7dbc 	subw	sp, sp, #1980	; 0x7bc
 8007d54:	a803      	add	r0, sp, #12
 8007d56:	f007 fbbf 	bl	800f4d8 <Hardware::Hardware()>
 8007d5a:	a863      	add	r0, sp, #396	; 0x18c
 8007d5c:	f004 fd9a 	bl	800c894 <Network::Network()>
 8007d60:	a814      	add	r0, sp, #80	; 0x50
 8007d62:	f007 fb63 	bl	800f42c <LedBlink::LedBlink()>
 8007d66:	a84d      	add	r0, sp, #308	; 0x134
 8007d68:	f005 fda4 	bl	800d8b4 <DisplayUdf::DisplayUdf()>
 8007d6c:	4ab1      	ldr	r2, [pc, #708]	; (8008034 <main+0x2e8>)
 8007d6e:	4bb2      	ldr	r3, [pc, #712]	; (8008038 <main+0x2ec>)
 8007d70:	49b2      	ldr	r1, [pc, #712]	; (800803c <main+0x2f0>)
 8007d72:	a804      	add	r0, sp, #16
 8007d74:	f007 fb14 	bl	800f3a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007d78:	a806      	add	r0, sp, #24
 8007d7a:	f006 f9cd 	bl	800e118 <ConfigStore::ConfigStore()>
 8007d7e:	49b0      	ldr	r1, [pc, #704]	; (8008040 <main+0x2f4>)
 8007d80:	a804      	add	r0, sp, #16
 8007d82:	f007 fb45 	bl	800f410 <FirmwareVersion::Print(char const*)>
 8007d86:	2301      	movs	r3, #1
 8007d88:	4fae      	ldr	r7, [pc, #696]	; (8008044 <main+0x2f8>)
 8007d8a:	2008      	movs	r0, #8
 8007d8c:	613b      	str	r3, [r7, #16]
 8007d8e:	f007 fc4f 	bl	800f630 <operator new(unsigned int)>
 8007d92:	4bad      	ldr	r3, [pc, #692]	; (8008048 <main+0x2fc>)
 8007d94:	6003      	str	r3, [r0, #0]
 8007d96:	4bad      	ldr	r3, [pc, #692]	; (800804c <main+0x300>)
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	2b00      	cmp	r3, #0
 8007d9c:	bf14      	ite	ne
 8007d9e:	2201      	movne	r2, #1
 8007da0:	2200      	moveq	r2, #0
 8007da2:	7102      	strb	r2, [r0, #4]
 8007da4:	d004      	beq.n	8007db0 <main+0x64>
 8007da6:	699b      	ldr	r3, [r3, #24]
 8007da8:	3b00      	subs	r3, #0
 8007daa:	bf18      	it	ne
 8007dac:	2301      	movne	r3, #1
 8007dae:	7103      	strb	r3, [r0, #4]
 8007db0:	2400      	movs	r4, #0
 8007db2:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8007db6:	2303      	movs	r3, #3
 8007db8:	49a5      	ldr	r1, [pc, #660]	; (8008050 <main+0x304>)
 8007dba:	9016      	str	r0, [sp, #88]	; 0x58
 8007dbc:	a84d      	add	r0, sp, #308	; 0x134
 8007dbe:	f7ff ff62 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007dc2:	a80e      	add	r0, sp, #56	; 0x38
 8007dc4:	f006 fb9e 	bl	800e504 <StoreNetwork::StoreNetwork()>
 8007dc8:	ab0f      	add	r3, sp, #60	; 0x3c
 8007dca:	a90e      	add	r1, sp, #56	; 0x38
 8007dcc:	a863      	add	r0, sp, #396	; 0x18c
 8007dce:	9391      	str	r3, [sp, #580]	; 0x244
 8007dd0:	f004 fdb8 	bl	800c944 <Network::Init(NetworkParamsStore*)>
 8007dd4:	a863      	add	r0, sp, #396	; 0x18c
 8007dd6:	f004 feed 	bl	800cbb4 <Network::Print()>
 8007dda:	2303      	movs	r3, #3
 8007ddc:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8007de0:	499c      	ldr	r1, [pc, #624]	; (8008054 <main+0x308>)
 8007de2:	a84d      	add	r0, sp, #308	; 0x134
 8007de4:	f7ff ff4f 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007de8:	a805      	add	r0, sp, #20
 8007dea:	f004 f995 	bl	800c118 <MDNS::MDNS()>
 8007dee:	a805      	add	r0, sp, #20
 8007df0:	f004 fa52 	bl	800c298 <MDNS::Start()>
 8007df4:	f642 1305 	movw	r3, #10501	; 0x2905
 8007df8:	4621      	mov	r1, r4
 8007dfa:	4a97      	ldr	r2, [pc, #604]	; (8008058 <main+0x30c>)
 8007dfc:	e9cd 4400 	strd	r4, r4, [sp]
 8007e00:	a805      	add	r0, sp, #20
 8007e02:	f004 fbb3 	bl	800c56c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007e06:	4b95      	ldr	r3, [pc, #596]	; (800805c <main+0x310>)
 8007e08:	4621      	mov	r1, r4
 8007e0a:	9301      	str	r3, [sp, #4]
 8007e0c:	2301      	movs	r3, #1
 8007e0e:	4a94      	ldr	r2, [pc, #592]	; (8008060 <main+0x314>)
 8007e10:	9300      	str	r3, [sp, #0]
 8007e12:	a805      	add	r0, sp, #20
 8007e14:	2350      	movs	r3, #80	; 0x50
 8007e16:	f004 fba9 	bl	800c56c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007e1a:	a805      	add	r0, sp, #20
 8007e1c:	f004 fcec 	bl	800c7f8 <MDNS::Print()>
 8007e20:	a839      	add	r0, sp, #228	; 0xe4
 8007e22:	f001 f8a7 	bl	8008f74 <HttpDaemon::HttpDaemon()>
 8007e26:	a839      	add	r0, sp, #228	; 0xe4
 8007e28:	f001 f8b8 	bl	8008f9c <HttpDaemon::Start()>
 8007e2c:	2303      	movs	r3, #3
 8007e2e:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8007e32:	498c      	ldr	r1, [pc, #560]	; (8008064 <main+0x318>)
 8007e34:	a84d      	add	r0, sp, #308	; 0x134
 8007e36:	f7ff ff26 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007e3a:	a807      	add	r0, sp, #28
 8007e3c:	f006 fbf8 	bl	800e630 <StoreE131::StoreE131()>
 8007e40:	a907      	add	r1, sp, #28
 8007e42:	a81a      	add	r0, sp, #104	; 0x68
 8007e44:	f002 fbce 	bl	800a5e4 <E131Params::E131Params(E131ParamsStore*)>
 8007e48:	a895      	add	r0, sp, #596	; 0x254
 8007e4a:	f001 fd11 	bl	8009870 <E131Bridge::E131Bridge()>
 8007e4e:	a81a      	add	r0, sp, #104	; 0x68
 8007e50:	f002 fbe0 	bl	800a614 <E131Params::Load()>
 8007e54:	b130      	cbz	r0, 8007e64 <main+0x118>
 8007e56:	a81a      	add	r0, sp, #104	; 0x68
 8007e58:	f002 fed2 	bl	800ac00 <E131Params::Dump()>
 8007e5c:	4621      	mov	r1, r4
 8007e5e:	a81a      	add	r0, sp, #104	; 0x68
 8007e60:	f002 fe8e 	bl	800ab80 <E131Params::Set(unsigned int)>
 8007e64:	f8bd 207c 	ldrh.w	r2, [sp, #124]	; 0x7c
 8007e68:	f8bd 3073 	ldrh.w	r3, [sp, #115]	; 0x73
 8007e6c:	f002 0203 	and.w	r2, r2, #3
 8007e70:	2100      	movs	r1, #0
 8007e72:	a895      	add	r0, sp, #596	; 0x254
 8007e74:	f001 fdf2 	bl	8009a5c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8007e78:	a808      	add	r0, sp, #32
 8007e7a:	f006 faad 	bl	800e3d8 <StoreDmxSend::StoreDmxSend()>
 8007e7e:	a908      	add	r1, sp, #32
 8007e80:	a810      	add	r0, sp, #64	; 0x40
 8007e82:	f002 ffa9 	bl	800add8 <DmxParams::DmxParams(DmxParamsStore*)>
 8007e86:	a820      	add	r0, sp, #128	; 0x80
 8007e88:	f003 fbde 	bl	800b648 <Dmx::Dmx()>
 8007e8c:	a810      	add	r0, sp, #64	; 0x40
 8007e8e:	f002 ffaf 	bl	800adf0 <DmxParams::Load()>
 8007e92:	b130      	cbz	r0, 8007ea2 <main+0x156>
 8007e94:	a810      	add	r0, sp, #64	; 0x40
 8007e96:	f003 f8f9 	bl	800b08c <DmxParams::Dump()>
 8007e9a:	a920      	add	r1, sp, #128	; 0x80
 8007e9c:	a810      	add	r0, sp, #64	; 0x40
 8007e9e:	f003 f8cb 	bl	800b038 <DmxParams::Set(Dmx*)>
 8007ea2:	4b71      	ldr	r3, [pc, #452]	; (8008068 <main+0x31c>)
 8007ea4:	ac09      	add	r4, sp, #36	; 0x24
 8007ea6:	4620      	mov	r0, r4
 8007ea8:	9309      	str	r3, [sp, #36]	; 0x24
 8007eaa:	f002 ff3b 	bl	800ad24 <DmxSend::Print()>
 8007eae:	f89d 575f 	ldrb.w	r5, [sp, #1887]	; 0x75f
 8007eb2:	b165      	cbz	r5, 8007ece <main+0x182>
 8007eb4:	2001      	movs	r0, #1
 8007eb6:	9496      	str	r4, [sp, #600]	; 0x258
 8007eb8:	f007 fbba 	bl	800f630 <operator new(unsigned int)>
 8007ebc:	4b6b      	ldr	r3, [pc, #428]	; (800806c <main+0x320>)
 8007ebe:	4605      	mov	r5, r0
 8007ec0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8007ec4:	6818      	ldr	r0, [r3, #0]
 8007ec6:	f004 fd14 	bl	800c8f2 <Network::Begin(unsigned short)>
 8007eca:	4b69      	ldr	r3, [pc, #420]	; (8008070 <main+0x324>)
 8007ecc:	6018      	str	r0, [r3, #0]
 8007ece:	ac0a      	add	r4, sp, #40	; 0x28
 8007ed0:	4620      	mov	r0, r4
 8007ed2:	f000 f9e1 	bl	8008298 <DmxInput::DmxInput()>
 8007ed6:	f89d 375e 	ldrb.w	r3, [sp, #1886]	; 0x75e
 8007eda:	b103      	cbz	r3, 8007ede <main+0x192>
 8007edc:	949a      	str	r4, [sp, #616]	; 0x268
 8007ede:	f89d 475f 	ldrb.w	r4, [sp, #1887]	; 0x75f
 8007ee2:	a895      	add	r0, sp, #596	; 0x254
 8007ee4:	441c      	add	r4, r3
 8007ee6:	f002 fadb 	bl	800a4a0 <E131Bridge::Print()>
 8007eea:	f8bd 307c 	ldrh.w	r3, [sp, #124]	; 0x7c
 8007eee:	4a61      	ldr	r2, [pc, #388]	; (8008074 <main+0x328>)
 8007ef0:	f013 0f03 	tst.w	r3, #3
 8007ef4:	4b60      	ldr	r3, [pc, #384]	; (8008078 <main+0x32c>)
 8007ef6:	4961      	ldr	r1, [pc, #388]	; (800807c <main+0x330>)
 8007ef8:	bf18      	it	ne
 8007efa:	461a      	movne	r2, r3
 8007efc:	a84d      	add	r0, sp, #308	; 0x134
 8007efe:	f005 fcef 	bl	800d8e0 <DisplayUdf::SetTitle(char const*, ...)>
 8007f02:	2202      	movs	r2, #2
 8007f04:	a84d      	add	r0, sp, #308	; 0x134
 8007f06:	4611      	mov	r1, r2
 8007f08:	f005 fcfd 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f0c:	2207      	movs	r2, #7
 8007f0e:	2103      	movs	r1, #3
 8007f10:	a84d      	add	r0, sp, #308	; 0x134
 8007f12:	f005 fcf8 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f16:	2203      	movs	r2, #3
 8007f18:	2104      	movs	r1, #4
 8007f1a:	a84d      	add	r0, sp, #308	; 0x134
 8007f1c:	f005 fcf3 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f20:	2208      	movs	r2, #8
 8007f22:	2105      	movs	r1, #5
 8007f24:	a84d      	add	r0, sp, #308	; 0x134
 8007f26:	f005 fcee 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f2a:	2201      	movs	r2, #1
 8007f2c:	2106      	movs	r1, #6
 8007f2e:	a84d      	add	r0, sp, #308	; 0x134
 8007f30:	f005 fce9 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f34:	a80b      	add	r0, sp, #44	; 0x2c
 8007f36:	f006 fa19 	bl	800e36c <StoreDisplayUdf::StoreDisplayUdf()>
 8007f3a:	a90b      	add	r1, sp, #44	; 0x2c
 8007f3c:	a843      	add	r0, sp, #268	; 0x10c
 8007f3e:	f005 fe63 	bl	800dc08 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8007f42:	a843      	add	r0, sp, #268	; 0x10c
 8007f44:	f005 fe6d 	bl	800dc22 <DisplayUdfParams::Load()>
 8007f48:	b130      	cbz	r0, 8007f58 <main+0x20c>
 8007f4a:	a843      	add	r0, sp, #268	; 0x10c
 8007f4c:	a94d      	add	r1, sp, #308	; 0x134
 8007f4e:	f005 ffa0 	bl	800de92 <DisplayUdfParams::Set(DisplayUdf*)>
 8007f52:	a843      	add	r0, sp, #268	; 0x10c
 8007f54:	f005 ffd0 	bl	800def8 <DisplayUdfParams::Dump()>
 8007f58:	a995      	add	r1, sp, #596	; 0x254
 8007f5a:	a84d      	add	r0, sp, #308	; 0x134
 8007f5c:	f005 ffce 	bl	800defc <DisplayUdf::Show(E131Bridge*)>
 8007f60:	4623      	mov	r3, r4
 8007f62:	2200      	movs	r2, #0
 8007f64:	2101      	movs	r1, #1
 8007f66:	a827      	add	r0, sp, #156	; 0x9c
 8007f68:	f000 fb1e 	bl	80085a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8007f6c:	a80c      	add	r0, sp, #48	; 0x30
 8007f6e:	f006 fb01 	bl	800e574 <StoreRemoteConfig::StoreRemoteConfig()>
 8007f72:	a90c      	add	r1, sp, #48	; 0x30
 8007f74:	a830      	add	r0, sp, #192	; 0xc0
 8007f76:	f000 fde7 	bl	8008b48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8007f7a:	a830      	add	r0, sp, #192	; 0xc0
 8007f7c:	f000 fdee 	bl	8008b5c <RemoteConfigParams::Load()>
 8007f80:	b130      	cbz	r0, 8007f90 <main+0x244>
 8007f82:	a830      	add	r0, sp, #192	; 0xc0
 8007f84:	f000 ff31 	bl	8008dea <RemoteConfigParams::Dump()>
 8007f88:	a927      	add	r1, sp, #156	; 0x9c
 8007f8a:	a830      	add	r0, sp, #192	; 0xc0
 8007f8c:	f000 ff0d 	bl	8008daa <RemoteConfigParams::Set(RemoteConfig*)>
 8007f90:	a806      	add	r0, sp, #24
 8007f92:	f006 f969 	bl	800e268 <ConfigStore::Flash()>
 8007f96:	2800      	cmp	r0, #0
 8007f98:	d1fa      	bne.n	8007f90 <main+0x244>
 8007f9a:	2303      	movs	r3, #3
 8007f9c:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8007fa0:	4937      	ldr	r1, [pc, #220]	; (8008080 <main+0x334>)
 8007fa2:	a84d      	add	r0, sp, #308	; 0x134
 8007fa4:	f7ff fe6f 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007fa8:	a895      	add	r0, sp, #596	; 0x254
 8007faa:	f001 fcbf 	bl	800992c <E131Bridge::Start()>
 8007fae:	2302      	movs	r3, #2
 8007fb0:	f248 0280 	movw	r2, #32896	; 0x8080
 8007fb4:	4933      	ldr	r1, [pc, #204]	; (8008084 <main+0x338>)
 8007fb6:	a84d      	add	r0, sp, #308	; 0x134
 8007fb8:	f7ff fe65 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007fbc:	2102      	movs	r1, #2
 8007fbe:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007fc2:	f008 fcdb 	bl	801097c <fwdgt_config>
 8007fc6:	2801      	cmp	r0, #1
 8007fc8:	bf0c      	ite	eq
 8007fca:	2301      	moveq	r3, #1
 8007fcc:	2300      	movne	r3, #0
 8007fce:	f88d 300c 	strb.w	r3, [sp, #12]
 8007fd2:	d101      	bne.n	8007fd8 <main+0x28c>
 8007fd4:	f008 fcc2 	bl	801095c <fwdgt_enable>
 8007fd8:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8008088 <main+0x33c>
 8007fdc:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8008070 <main+0x324>
 8007fe0:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 800808c <main+0x340>
 8007fe4:	f008 fcc2 	bl	801096c <fwdgt_counter_reload>
 8007fe8:	f7ff fa9a 	bl	8007520 <net_handle>
 8007fec:	a895      	add	r0, sp, #596	; 0x254
 8007fee:	f002 f82f 	bl	800a050 <E131Bridge::Run()>
 8007ff2:	a827      	add	r0, sp, #156	; 0x9c
 8007ff4:	f000 fc6c 	bl	80088d0 <RemoteConfig::Run()>
 8007ff8:	a806      	add	r0, sp, #24
 8007ffa:	f006 f935 	bl	800e268 <ConfigStore::Flash()>
 8007ffe:	2d00      	cmp	r5, #0
 8008000:	d067      	beq.n	80080d2 <main+0x386>
 8008002:	f10d 031a 	add.w	r3, sp, #26
 8008006:	4920      	ldr	r1, [pc, #128]	; (8008088 <main+0x33c>)
 8008008:	f899 0000 	ldrb.w	r0, [r9]
 800800c:	aa0d      	add	r2, sp, #52	; 0x34
 800800e:	f003 ff85 	bl	800bf1c <udp_recv2>
 8008012:	f1a0 030b 	sub.w	r3, r0, #11
 8008016:	b29b      	uxth	r3, r3
 8008018:	2b05      	cmp	r3, #5
 800801a:	4604      	mov	r4, r0
 800801c:	d859      	bhi.n	80080d2 <main+0x386>
 800801e:	f8d8 6000 	ldr.w	r6, [r8]
 8008022:	2204      	movs	r2, #4
 8008024:	4631      	mov	r1, r6
 8008026:	4650      	mov	r0, sl
 8008028:	f7ff fd9d 	bl	8007b66 <memcmp>
 800802c:	2800      	cmp	r0, #0
 800802e:	d150      	bne.n	80080d2 <main+0x386>
 8008030:	e02e      	b.n	8008090 <main+0x344>
 8008032:	bf00      	nop
 8008034:	08011e71 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, fp, ip}
 8008038:	08011e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip}
 800803c:	08011f15 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, fp, ip}
 8008040:	08011e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip}
 8008044:	40011000 	andmi	r1, r1, r0
 8008048:	08011f04 	stmdaeq	r1, {r2, r8, r9, sl, fp, ip}
 800804c:	20009fa0 	andcs	r9, r0, r0, lsr #31
 8008050:	080132c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, ip, sp}
 8008054:	080132b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, ip, sp}
 8008058:	08011ea3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, fp, ip}
 800805c:	08011eb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, fp, ip}
 8008060:	08011eac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, ip}
 8008064:	080130ac 	stmdaeq	r1, {r2, r3, r5, r7, ip, sp}
 8008068:	080131e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, ip, sp}
 800806c:	2000897c 	andcs	r8, r0, ip, ror r9
 8008070:	2000000c 	andcs	r0, r0, ip
 8008074:	08013114 	stmdaeq	r1, {r2, r4, r8, ip, sp}
 8008078:	08013109 	stmdaeq	r1, {r0, r3, r8, ip, sp}
 800807c:	08011ec7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, fp, ip}
 8008080:	08013098 	stmdaeq	r1, {r3, r4, r7, ip, sp}
 8008084:	080130c3 	stmdaeq	r1, {r0, r1, r6, r7, ip, sp}
 8008088:	200010ac 	andcs	r1, r0, ip, lsr #1
 800808c:	08011ed9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, fp, ip}
 8008090:	1933      	adds	r3, r6, r4
 8008092:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8008096:	f106 0b04 	add.w	fp, r6, #4
 800809a:	2b0a      	cmp	r3, #10
 800809c:	bf04      	itt	eq
 800809e:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 80080a2:	b2a4      	uxtheq	r4, r4
 80080a4:	2c0a      	cmp	r4, #10
 80080a6:	d042      	beq.n	800812e <main+0x3e2>
 80080a8:	2c0e      	cmp	r4, #14
 80080aa:	d840      	bhi.n	800812e <main+0x3e2>
 80080ac:	2206      	movs	r2, #6
 80080ae:	4659      	mov	r1, fp
 80080b0:	4847      	ldr	r0, [pc, #284]	; (80081d0 <main+0x484>)
 80080b2:	f7ff fd58 	bl	8007b66 <memcmp>
 80080b6:	2800      	cmp	r0, #0
 80080b8:	d139      	bne.n	800812e <main+0x3e2>
 80080ba:	2104      	movs	r1, #4
 80080bc:	f106 000a 	add.w	r0, r6, #10
 80080c0:	f7ff fd62 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 80080c4:	285b      	cmp	r0, #91	; 0x5b
 80080c6:	4601      	mov	r1, r0
 80080c8:	d903      	bls.n	80080d2 <main+0x386>
 80080ca:	4b42      	ldr	r3, [pc, #264]	; (80081d4 <main+0x488>)
 80080cc:	6818      	ldr	r0, [r3, #0]
 80080ce:	f003 fbc9 	bl	800b864 <Dmx::SetDmxBreakTime(unsigned int)>
 80080d2:	a805      	add	r0, sp, #20
 80080d4:	f004 fb6c 	bl	800c7b0 <MDNS::Run()>
 80080d8:	a839      	add	r0, sp, #228	; 0xe4
 80080da:	f001 f9cb 	bl	8009474 <HttpDaemon::Run()>
 80080de:	9a52      	ldr	r2, [sp, #328]	; 0x148
 80080e0:	b16a      	cbz	r2, 80080fe <main+0x3b2>
 80080e2:	f89d 3144 	ldrb.w	r3, [sp, #324]	; 0x144
 80080e6:	2b00      	cmp	r3, #0
 80080e8:	d16b      	bne.n	80081c2 <main+0x476>
 80080ea:	4b3b      	ldr	r3, [pc, #236]	; (80081d8 <main+0x48c>)
 80080ec:	994e      	ldr	r1, [sp, #312]	; 0x138
 80080ee:	681b      	ldr	r3, [r3, #0]
 80080f0:	1a5b      	subs	r3, r3, r1
 80080f2:	429a      	cmp	r2, r3
 80080f4:	d203      	bcs.n	80080fe <main+0x3b2>
 80080f6:	2101      	movs	r1, #1
 80080f8:	a84d      	add	r0, sp, #308	; 0x134
 80080fa:	f7ff fded 	bl	8007cd8 <Display::SetSleep(bool)>
 80080fe:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008100:	2900      	cmp	r1, #0
 8008102:	f43f af6f 	beq.w	8007fe4 <main+0x298>
 8008106:	4a34      	ldr	r2, [pc, #208]	; (80081d8 <main+0x48c>)
 8008108:	9819      	ldr	r0, [sp, #100]	; 0x64
 800810a:	6813      	ldr	r3, [r2, #0]
 800810c:	1a1b      	subs	r3, r3, r0
 800810e:	4299      	cmp	r1, r3
 8008110:	f63f af68 	bhi.w	8007fe4 <main+0x298>
 8008114:	6813      	ldr	r3, [r2, #0]
 8008116:	9319      	str	r3, [sp, #100]	; 0x64
 8008118:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800811a:	2b01      	cmp	r3, #1
 800811c:	f083 0201 	eor.w	r2, r3, #1
 8008120:	bf18      	it	ne
 8008122:	2301      	movne	r3, #1
 8008124:	9218      	str	r2, [sp, #96]	; 0x60
 8008126:	bf14      	ite	ne
 8008128:	613b      	strne	r3, [r7, #16]
 800812a:	617b      	streq	r3, [r7, #20]
 800812c:	e75a      	b.n	8007fe4 <main+0x298>
 800812e:	2204      	movs	r2, #4
 8008130:	4659      	mov	r1, fp
 8008132:	482a      	ldr	r0, [pc, #168]	; (80081dc <main+0x490>)
 8008134:	f7ff fd17 	bl	8007b66 <memcmp>
 8008138:	b978      	cbnz	r0, 800815a <main+0x40e>
 800813a:	2107      	movs	r1, #7
 800813c:	f106 0008 	add.w	r0, r6, #8
 8008140:	f7ff fd22 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 8008144:	4b26      	ldr	r3, [pc, #152]	; (80081e0 <main+0x494>)
 8008146:	f1a0 020c 	sub.w	r2, r0, #12
 800814a:	429a      	cmp	r2, r3
 800814c:	4601      	mov	r1, r0
 800814e:	d8c0      	bhi.n	80080d2 <main+0x386>
 8008150:	4b20      	ldr	r3, [pc, #128]	; (80081d4 <main+0x488>)
 8008152:	6818      	ldr	r0, [r3, #0]
 8008154:	f003 fb90 	bl	800b878 <Dmx::SetDmxMabTime(unsigned int)>
 8008158:	e7bb      	b.n	80080d2 <main+0x386>
 800815a:	2c0c      	cmp	r4, #12
 800815c:	d916      	bls.n	800818c <main+0x440>
 800815e:	2c0e      	cmp	r4, #14
 8008160:	d82c      	bhi.n	80081bc <main+0x470>
 8008162:	2208      	movs	r2, #8
 8008164:	4659      	mov	r1, fp
 8008166:	481f      	ldr	r0, [pc, #124]	; (80081e4 <main+0x498>)
 8008168:	f7ff fcfd 	bl	8007b66 <memcmp>
 800816c:	bb30      	cbnz	r0, 80081bc <main+0x470>
 800816e:	2102      	movs	r1, #2
 8008170:	f106 000c 	add.w	r0, r6, #12
 8008174:	f7ff fd08 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 8008178:	4601      	mov	r1, r0
 800817a:	b110      	cbz	r0, 8008182 <main+0x436>
 800817c:	4b1a      	ldr	r3, [pc, #104]	; (80081e8 <main+0x49c>)
 800817e:	fbb3 f1f0 	udiv	r1, r3, r0
 8008182:	4b14      	ldr	r3, [pc, #80]	; (80081d4 <main+0x488>)
 8008184:	6818      	ldr	r0, [r3, #0]
 8008186:	f003 fb3d 	bl	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800818a:	e7a2      	b.n	80080d2 <main+0x386>
 800818c:	2c0a      	cmp	r4, #10
 800818e:	d0a0      	beq.n	80080d2 <main+0x386>
 8008190:	2206      	movs	r2, #6
 8008192:	4659      	mov	r1, fp
 8008194:	4815      	ldr	r0, [pc, #84]	; (80081ec <main+0x4a0>)
 8008196:	f7ff fce6 	bl	8007b66 <memcmp>
 800819a:	2800      	cmp	r0, #0
 800819c:	d199      	bne.n	80080d2 <main+0x386>
 800819e:	2103      	movs	r1, #3
 80081a0:	f106 000a 	add.w	r0, r6, #10
 80081a4:	f7ff fcf0 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 80081a8:	1e83      	subs	r3, r0, #2
 80081aa:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80081ae:	d890      	bhi.n	80080d2 <main+0x386>
 80081b0:	4b08      	ldr	r3, [pc, #32]	; (80081d4 <main+0x488>)
 80081b2:	b281      	uxth	r1, r0
 80081b4:	6818      	ldr	r0, [r3, #0]
 80081b6:	f003 fb69 	bl	800b88c <Dmx::SetDmxSlots(unsigned short)>
 80081ba:	e78a      	b.n	80080d2 <main+0x386>
 80081bc:	2c0d      	cmp	r4, #13
 80081be:	d188      	bne.n	80080d2 <main+0x386>
 80081c0:	e7e6      	b.n	8008190 <main+0x444>
 80081c2:	f7ff fda9 	bl	8007d18 <display::timeout::gpio_renew()>
 80081c6:	2800      	cmp	r0, #0
 80081c8:	d099      	beq.n	80080fe <main+0x3b2>
 80081ca:	2100      	movs	r1, #0
 80081cc:	e794      	b.n	80080f8 <main+0x3ac>
 80081ce:	bf00      	nop
 80081d0:	08011ede 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, fp, ip}
 80081d4:	200010a4 	andcs	r1, r0, r4, lsr #1
 80081d8:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 80081dc:	08011ee5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, fp, ip}
 80081e0:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 80081e4:	08011eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, ip}
 80081e8:	000f4240 	andeq	r4, pc, r0, asr #4
 80081ec:	08011ef3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, fp, ip}

080081f0 <DmxInput::~DmxInput()>:
 80081f0:	4770      	bx	lr
	...

080081f4 <DmxInput::Start(unsigned int)>:
 80081f4:	2301      	movs	r3, #1
 80081f6:	b410      	push	{r4}
 80081f8:	4808      	ldr	r0, [pc, #32]	; (800821c <DmxInput::Start(unsigned int)+0x28>)
 80081fa:	fa03 f101 	lsl.w	r1, r3, r1
 80081fe:	7802      	ldrb	r2, [r0, #0]
 8008200:	ea31 0402 	bics.w	r4, r1, r2
 8008204:	d008      	beq.n	8008218 <DmxInput::Start(unsigned int)+0x24>
 8008206:	430a      	orrs	r2, r1
 8008208:	7002      	strb	r2, [r0, #0]
 800820a:	4805      	ldr	r0, [pc, #20]	; (8008220 <DmxInput::Start(unsigned int)+0x2c>)
 800820c:	461a      	mov	r2, r3
 800820e:	2100      	movs	r1, #0
 8008210:	6800      	ldr	r0, [r0, #0]
 8008212:	bc10      	pop	{r4}
 8008214:	f003 b9ea 	b.w	800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008218:	bc10      	pop	{r4}
 800821a:	4770      	bx	lr
 800821c:	20000090 	mulcs	r0, r0, r0
 8008220:	200010a4 	andcs	r1, r0, r4, lsr #1

08008224 <DmxInput::Stop(unsigned int)>:
 8008224:	2201      	movs	r2, #1
 8008226:	b410      	push	{r4}
 8008228:	4809      	ldr	r0, [pc, #36]	; (8008250 <DmxInput::Stop(unsigned int)+0x2c>)
 800822a:	fa02 f101 	lsl.w	r1, r2, r1
 800822e:	7803      	ldrb	r3, [r0, #0]
 8008230:	ea31 0403 	bics.w	r4, r1, r3
 8008234:	d109      	bne.n	800824a <DmxInput::Stop(unsigned int)+0x26>
 8008236:	ea23 0301 	bic.w	r3, r3, r1
 800823a:	7003      	strb	r3, [r0, #0]
 800823c:	2300      	movs	r3, #0
 800823e:	4805      	ldr	r0, [pc, #20]	; (8008254 <DmxInput::Stop(unsigned int)+0x30>)
 8008240:	4619      	mov	r1, r3
 8008242:	6800      	ldr	r0, [r0, #0]
 8008244:	bc10      	pop	{r4}
 8008246:	f003 b9d1 	b.w	800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800824a:	bc10      	pop	{r4}
 800824c:	4770      	bx	lr
 800824e:	bf00      	nop
 8008250:	20000090 	mulcs	r0, r0, r0
 8008254:	200010a4 	andcs	r1, r0, r4, lsr #1

08008258 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800825a:	4f0b      	ldr	r7, [pc, #44]	; (8008288 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x30>)
 800825c:	2100      	movs	r1, #0
 800825e:	6838      	ldr	r0, [r7, #0]
 8008260:	461e      	mov	r6, r3
 8008262:	4615      	mov	r5, r2
 8008264:	f003 fb98 	bl	800b998 <Dmx::GetDmxAvailable(unsigned int)>
 8008268:	2100      	movs	r1, #0
 800826a:	4604      	mov	r4, r0
 800826c:	6838      	ldr	r0, [r7, #0]
 800826e:	f003 fba7 	bl	800b9c0 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008272:	6030      	str	r0, [r6, #0]
 8008274:	b12c      	cbz	r4, 8008282 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2a>
 8008276:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 800827a:	3301      	adds	r3, #1
 800827c:	4620      	mov	r0, r4
 800827e:	602b      	str	r3, [r5, #0]
 8008280:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008282:	4623      	mov	r3, r4
 8008284:	e7fa      	b.n	800827c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x24>
 8008286:	bf00      	nop
 8008288:	200010a4 	andcs	r1, r0, r4, lsr #1

0800828c <DmxInput::~DmxInput()>:
 800828c:	b510      	push	{r4, lr}
 800828e:	4604      	mov	r4, r0
 8008290:	f007 f9ca 	bl	800f628 <operator delete(void*)>
 8008294:	4620      	mov	r0, r4
 8008296:	bd10      	pop	{r4, pc}

08008298 <DmxInput::DmxInput()>:
 8008298:	b510      	push	{r4, lr}
 800829a:	4604      	mov	r4, r0
 800829c:	4b03      	ldr	r3, [pc, #12]	; (80082ac <DmxInput::DmxInput()+0x14>)
 800829e:	2100      	movs	r1, #0
 80082a0:	6003      	str	r3, [r0, #0]
 80082a2:	f7ff ffbf 	bl	8008224 <DmxInput::Stop(unsigned int)>
 80082a6:	4620      	mov	r0, r4
 80082a8:	bd10      	pop	{r4, pc}
 80082aa:	bf00      	nop
 80082ac:	08011f24 	stmdaeq	r1, {r2, r5, r8, r9, sl, fp, ip}

080082b0 <StoreNetwork::SaveDhcp(bool)>:
 80082b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80082b2:	2301      	movs	r3, #1
 80082b4:	f88d 1017 	strb.w	r1, [sp, #23]
 80082b8:	2100      	movs	r1, #0
 80082ba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80082be:	4805      	ldr	r0, [pc, #20]	; (80082d4 <StoreNetwork::SaveDhcp(bool)+0x24>)
 80082c0:	9300      	str	r3, [sp, #0]
 80082c2:	2214      	movs	r2, #20
 80082c4:	6800      	ldr	r0, [r0, #0]
 80082c6:	f10d 0317 	add.w	r3, sp, #23
 80082ca:	f005 ff5b 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80082ce:	b007      	add	sp, #28
 80082d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80082d4:	20009f64 	andcs	r9, r0, r4, ror #30

080082d8 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80082d8:	f1a0 0004 	sub.w	r0, r0, #4
 80082dc:	e7e8      	b.n	80082b0 <StoreNetwork::SaveDhcp(bool)>
 80082de:	bf00      	nop

080082e0 <RemoteConfig::HandleList()>:
 80082e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80082e4:	6801      	ldr	r1, [r0, #0]
 80082e6:	4604      	mov	r4, r0
 80082e8:	2012      	movs	r0, #18
 80082ea:	f04f 080c 	mov.w	r8, #12
 80082ee:	4a29      	ldr	r2, [pc, #164]	; (8008394 <RemoteConfig::HandleList()+0xb4>)
 80082f0:	4b29      	ldr	r3, [pc, #164]	; (8008398 <RemoteConfig::HandleList()+0xb8>)
 80082f2:	fb00 2201 	mla	r2, r0, r1, r2
 80082f6:	6860      	ldr	r0, [r4, #4]
 80082f8:	4928      	ldr	r1, [pc, #160]	; (800839c <RemoteConfig::HandleList()+0xbc>)
 80082fa:	681b      	ldr	r3, [r3, #0]
 80082fc:	fb08 1100 	mla	r1, r8, r0, r1
 8008300:	4e27      	ldr	r6, [pc, #156]	; (80083a0 <RemoteConfig::HandleList()+0xc0>)
 8008302:	4828      	ldr	r0, [pc, #160]	; (80083a4 <RemoteConfig::HandleList()+0xc4>)
 8008304:	695f      	ldr	r7, [r3, #20]
 8008306:	6835      	ldr	r5, [r6, #0]
 8008308:	f890 9009 	ldrb.w	r9, [r0, #9]
 800830c:	b2fb      	uxtb	r3, r7
 800830e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8008312:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8008316:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800831a:	b089      	sub	sp, #36	; 0x24
 800831c:	3507      	adds	r5, #7
 800831e:	0e3f      	lsrs	r7, r7, #24
 8008320:	f1b9 0f00 	cmp.w	r9, #0
 8008324:	d01d      	beq.n	8008362 <RemoteConfig::HandleList()+0x82>
 8008326:	3009      	adds	r0, #9
 8008328:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800832c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8008330:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008334:	4628      	mov	r0, r5
 8008336:	e9cd e701 	strd	lr, r7, [sp, #4]
 800833a:	4a1b      	ldr	r2, [pc, #108]	; (80083a8 <RemoteConfig::HandleList()+0xc8>)
 800833c:	f8cd c000 	str.w	ip, [sp]
 8008340:	f007 fc66 	bl	800fc10 <snprintf>
 8008344:	69e3      	ldr	r3, [r4, #28]
 8008346:	2b05      	cmp	r3, #5
 8008348:	d118      	bne.n	800837c <RemoteConfig::HandleList()+0x9c>
 800834a:	f642 1305 	movw	r3, #10501	; 0x2905
 800834e:	9300      	str	r3, [sp, #0]
 8008350:	69a3      	ldr	r3, [r4, #24]
 8008352:	b282      	uxth	r2, r0
 8008354:	4629      	mov	r1, r5
 8008356:	7d20      	ldrb	r0, [r4, #20]
 8008358:	f003 fe06 	bl	800bf68 <udp_send>
 800835c:	b009      	add	sp, #36	; 0x24
 800835e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008362:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8008366:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800836a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800836e:	4628      	mov	r0, r5
 8008370:	e9cd ce00 	strd	ip, lr, [sp]
 8008374:	4a0d      	ldr	r2, [pc, #52]	; (80083ac <RemoteConfig::HandleList()+0xcc>)
 8008376:	f007 fc4b 	bl	800fc10 <snprintf>
 800837a:	e7e3      	b.n	8008344 <RemoteConfig::HandleList()+0x64>
 800837c:	2b06      	cmp	r3, #6
 800837e:	d1ed      	bne.n	800835c <RemoteConfig::HandleList()+0x7c>
 8008380:	6833      	ldr	r3, [r6, #0]
 8008382:	799b      	ldrb	r3, [r3, #6]
 8008384:	2b2a      	cmp	r3, #42	; 0x2a
 8008386:	d1e9      	bne.n	800835c <RemoteConfig::HandleList()+0x7c>
 8008388:	f642 1305 	movw	r3, #10501	; 0x2905
 800838c:	9300      	str	r3, [sp, #0]
 800838e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008392:	e7de      	b.n	8008352 <RemoteConfig::HandleList()+0x72>
 8008394:	08012023 	stmdaeq	r1, {r0, r1, r5, sp}
 8008398:	2000897c 	andcs	r8, r0, ip, ror r9
 800839c:	080120e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sp}
 80083a0:	20000094 	mulcs	r0, r4, r0
 80083a4:	20000098 	mulcs	r0, r8, r0
 80083a8:	08011f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip}
 80083ac:	08011f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip}

080083b0 <RemoteConfig::HandleDisplayGet()>:
 80083b0:	69c3      	ldr	r3, [r0, #28]
 80083b2:	2b08      	cmp	r3, #8
 80083b4:	d11b      	bne.n	80083ee <RemoteConfig::HandleDisplayGet()+0x3e>
 80083b6:	4b0e      	ldr	r3, [pc, #56]	; (80083f0 <RemoteConfig::HandleDisplayGet()+0x40>)
 80083b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083ba:	681b      	ldr	r3, [r3, #0]
 80083bc:	4d0d      	ldr	r5, [pc, #52]	; (80083f4 <RemoteConfig::HandleDisplayGet()+0x44>)
 80083be:	7c19      	ldrb	r1, [r3, #16]
 80083c0:	4a0d      	ldr	r2, [pc, #52]	; (80083f8 <RemoteConfig::HandleDisplayGet()+0x48>)
 80083c2:	4b0e      	ldr	r3, [pc, #56]	; (80083fc <RemoteConfig::HandleDisplayGet()+0x4c>)
 80083c4:	4604      	mov	r4, r0
 80083c6:	2900      	cmp	r1, #0
 80083c8:	bf18      	it	ne
 80083ca:	4613      	movne	r3, r2
 80083cc:	6828      	ldr	r0, [r5, #0]
 80083ce:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80083d2:	4a0b      	ldr	r2, [pc, #44]	; (8008400 <RemoteConfig::HandleDisplayGet()+0x50>)
 80083d4:	f007 fc1c 	bl	800fc10 <snprintf>
 80083d8:	f642 1305 	movw	r3, #10501	; 0x2905
 80083dc:	9300      	str	r3, [sp, #0]
 80083de:	b282      	uxth	r2, r0
 80083e0:	69a3      	ldr	r3, [r4, #24]
 80083e2:	6829      	ldr	r1, [r5, #0]
 80083e4:	7d20      	ldrb	r0, [r4, #20]
 80083e6:	f003 fdbf 	bl	800bf68 <udp_send>
 80083ea:	b003      	add	sp, #12
 80083ec:	bd30      	pop	{r4, r5, pc}
 80083ee:	4770      	bx	lr
 80083f0:	20009fa0 	andcs	r9, r0, r0, lsr #31
 80083f4:	20000094 	mulcs	r0, r4, r0
 80083f8:	08011f6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
 80083fc:	08011f67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip}
 8008400:	08011f6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip}

08008404 <RemoteConfig::HandleTftpGet()>:
 8008404:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008406:	4604      	mov	r4, r0
 8008408:	f000 fd74 	bl	8008ef4 <RemoteConfig::PlatformHandleTftpGet()>
 800840c:	69e3      	ldr	r3, [r4, #28]
 800840e:	2b05      	cmp	r3, #5
 8008410:	d116      	bne.n	8008440 <RemoteConfig::HandleTftpGet()+0x3c>
 8008412:	f894 1020 	ldrb.w	r1, [r4, #32]
 8008416:	4d0b      	ldr	r5, [pc, #44]	; (8008444 <RemoteConfig::HandleTftpGet()+0x40>)
 8008418:	4a0b      	ldr	r2, [pc, #44]	; (8008448 <RemoteConfig::HandleTftpGet()+0x44>)
 800841a:	4b0c      	ldr	r3, [pc, #48]	; (800844c <RemoteConfig::HandleTftpGet()+0x48>)
 800841c:	6828      	ldr	r0, [r5, #0]
 800841e:	2900      	cmp	r1, #0
 8008420:	bf08      	it	eq
 8008422:	4613      	moveq	r3, r2
 8008424:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008428:	4a09      	ldr	r2, [pc, #36]	; (8008450 <RemoteConfig::HandleTftpGet()+0x4c>)
 800842a:	f007 fbf1 	bl	800fc10 <snprintf>
 800842e:	f642 1305 	movw	r3, #10501	; 0x2905
 8008432:	b282      	uxth	r2, r0
 8008434:	9300      	str	r3, [sp, #0]
 8008436:	6829      	ldr	r1, [r5, #0]
 8008438:	69a3      	ldr	r3, [r4, #24]
 800843a:	7d20      	ldrb	r0, [r4, #20]
 800843c:	f003 fd94 	bl	800bf68 <udp_send>
 8008440:	b003      	add	sp, #12
 8008442:	bd30      	pop	{r4, r5, pc}
 8008444:	20000094 	mulcs	r0, r4, r0
 8008448:	08011f6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
 800844c:	08011f67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip}
 8008450:	08011f7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, fp, ip}

08008454 <RemoteConfig::HandleVersion()>:
 8008454:	69c3      	ldr	r3, [r0, #28]
 8008456:	2b08      	cmp	r3, #8
 8008458:	d114      	bne.n	8008484 <RemoteConfig::HandleVersion()+0x30>
 800845a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800845c:	4d0a      	ldr	r5, [pc, #40]	; (8008488 <RemoteConfig::HandleVersion()+0x34>)
 800845e:	4604      	mov	r4, r0
 8008460:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008464:	4b09      	ldr	r3, [pc, #36]	; (800848c <RemoteConfig::HandleVersion()+0x38>)
 8008466:	4a0a      	ldr	r2, [pc, #40]	; (8008490 <RemoteConfig::HandleVersion()+0x3c>)
 8008468:	6828      	ldr	r0, [r5, #0]
 800846a:	f007 fbd1 	bl	800fc10 <snprintf>
 800846e:	f642 1305 	movw	r3, #10501	; 0x2905
 8008472:	9300      	str	r3, [sp, #0]
 8008474:	b282      	uxth	r2, r0
 8008476:	69a3      	ldr	r3, [r4, #24]
 8008478:	6829      	ldr	r1, [r5, #0]
 800847a:	7d20      	ldrb	r0, [r4, #20]
 800847c:	f003 fd74 	bl	800bf68 <udp_send>
 8008480:	b003      	add	sp, #12
 8008482:	bd30      	pop	{r4, r5, pc}
 8008484:	4770      	bx	lr
 8008486:	bf00      	nop
 8008488:	20000094 	mulcs	r0, r4, r0
 800848c:	2000a046 	andcs	sl, r0, r6, asr #32
 8008490:	08011f83 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, fp, ip}

08008494 <RemoteConfig::HandleUptime()>:
 8008494:	7bc3      	ldrb	r3, [r0, #15]
 8008496:	b1e3      	cbz	r3, 80084d2 <RemoteConfig::HandleUptime()+0x3e>
 8008498:	4b0e      	ldr	r3, [pc, #56]	; (80084d4 <RemoteConfig::HandleUptime()+0x40>)
 800849a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800849c:	681a      	ldr	r2, [r3, #0]
 800849e:	69c3      	ldr	r3, [r0, #28]
 80084a0:	4604      	mov	r4, r0
 80084a2:	2b07      	cmp	r3, #7
 80084a4:	d113      	bne.n	80084ce <RemoteConfig::HandleUptime()+0x3a>
 80084a6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80084aa:	4d0b      	ldr	r5, [pc, #44]	; (80084d8 <RemoteConfig::HandleUptime()+0x44>)
 80084ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80084b0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80084b4:	4a09      	ldr	r2, [pc, #36]	; (80084dc <RemoteConfig::HandleUptime()+0x48>)
 80084b6:	6828      	ldr	r0, [r5, #0]
 80084b8:	f007 fbaa 	bl	800fc10 <snprintf>
 80084bc:	f642 1305 	movw	r3, #10501	; 0x2905
 80084c0:	9300      	str	r3, [sp, #0]
 80084c2:	b282      	uxth	r2, r0
 80084c4:	69a3      	ldr	r3, [r4, #24]
 80084c6:	6829      	ldr	r1, [r5, #0]
 80084c8:	7d20      	ldrb	r0, [r4, #20]
 80084ca:	f003 fd4d 	bl	800bf68 <udp_send>
 80084ce:	b003      	add	sp, #12
 80084d0:	bd30      	pop	{r4, r5, pc}
 80084d2:	4770      	bx	lr
 80084d4:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 80084d8:	20000094 	mulcs	r0, r4, r0
 80084dc:	08011f8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, fp, ip}

080084e0 <Display::Status(Display7SegmentMessage)>:
 80084e0:	7c43      	ldrb	r3, [r0, #17]
 80084e2:	b1bb      	cbz	r3, 8008514 <Display::Status(Display7SegmentMessage)+0x34>
 80084e4:	b513      	push	{r0, r1, r4, lr}
 80084e6:	2312      	movs	r3, #18
 80084e8:	43c9      	mvns	r1, r1
 80084ea:	4604      	mov	r4, r0
 80084ec:	f88d 3004 	strb.w	r3, [sp, #4]
 80084f0:	7a00      	ldrb	r0, [r0, #8]
 80084f2:	f3c1 2307 	ubfx	r3, r1, #8, #8
 80084f6:	f88d 3005 	strb.w	r3, [sp, #5]
 80084fa:	f88d 1006 	strb.w	r1, [sp, #6]
 80084fe:	f008 fec7 	bl	8011290 <gd32_i2c_set_address>
 8008502:	68e0      	ldr	r0, [r4, #12]
 8008504:	f008 febc 	bl	8011280 <gd32_i2c_set_baudrate>
 8008508:	2103      	movs	r1, #3
 800850a:	a801      	add	r0, sp, #4
 800850c:	f008 fec6 	bl	801129c <gd32_i2c_write>
 8008510:	b002      	add	sp, #8
 8008512:	bd10      	pop	{r4, pc}
 8008514:	4770      	bx	lr
	...

08008518 <RemoteConfig::HandleDisplaySet()>:
 8008518:	b508      	push	{r3, lr}
 800851a:	69c3      	ldr	r3, [r0, #28]
 800851c:	2b09      	cmp	r3, #9
 800851e:	d10a      	bne.n	8008536 <RemoteConfig::HandleDisplaySet()+0x1e>
 8008520:	4b05      	ldr	r3, [pc, #20]	; (8008538 <RemoteConfig::HandleDisplaySet()+0x20>)
 8008522:	681b      	ldr	r3, [r3, #0]
 8008524:	7a59      	ldrb	r1, [r3, #9]
 8008526:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800852a:	4259      	negs	r1, r3
 800852c:	4159      	adcs	r1, r3
 800852e:	4b03      	ldr	r3, [pc, #12]	; (800853c <RemoteConfig::HandleDisplaySet()+0x24>)
 8008530:	6818      	ldr	r0, [r3, #0]
 8008532:	f7ff fbd1 	bl	8007cd8 <Display::SetSleep(bool)>
 8008536:	bd08      	pop	{r3, pc}
 8008538:	20000094 	mulcs	r0, r4, r0
 800853c:	20009fa0 	andcs	r9, r0, r0, lsr #31

08008540 <RemoteConfig::HandleTftpSet()>:
 8008540:	69c3      	ldr	r3, [r0, #28]
 8008542:	2b06      	cmp	r3, #6
 8008544:	d127      	bne.n	8008596 <RemoteConfig::HandleTftpSet()+0x56>
 8008546:	b570      	push	{r4, r5, r6, lr}
 8008548:	4b13      	ldr	r3, [pc, #76]	; (8008598 <RemoteConfig::HandleTftpSet()+0x58>)
 800854a:	4e14      	ldr	r6, [pc, #80]	; (800859c <RemoteConfig::HandleTftpSet()+0x5c>)
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	4604      	mov	r4, r0
 8008550:	799b      	ldrb	r3, [r3, #6]
 8008552:	6835      	ldr	r5, [r6, #0]
 8008554:	2b30      	cmp	r3, #48	; 0x30
 8008556:	bf14      	ite	ne
 8008558:	2301      	movne	r3, #1
 800855a:	2300      	moveq	r3, #0
 800855c:	f880 3020 	strb.w	r3, [r0, #32]
 8008560:	d012      	beq.n	8008588 <RemoteConfig::HandleTftpSet()+0x48>
 8008562:	4628      	mov	r0, r5
 8008564:	2100      	movs	r1, #0
 8008566:	f7ff fbb7 	bl	8007cd8 <Display::SetSleep(bool)>
 800856a:	6835      	ldr	r5, [r6, #0]
 800856c:	490c      	ldr	r1, [pc, #48]	; (80085a0 <RemoteConfig::HandleTftpSet()+0x60>)
 800856e:	4628      	mov	r0, r5
 8008570:	f7ff fb54 	bl	8007c1c <Display::TextStatus(char const*)>
 8008574:	f244 0171 	movw	r1, #16497	; 0x4071
 8008578:	4628      	mov	r0, r5
 800857a:	f7ff ffb1 	bl	80084e0 <Display::Status(Display7SegmentMessage)>
 800857e:	4620      	mov	r0, r4
 8008580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008584:	f000 bcae 	b.w	8008ee4 <RemoteConfig::PlatformHandleTftpSet()>
 8008588:	4906      	ldr	r1, [pc, #24]	; (80085a4 <RemoteConfig::HandleTftpSet()+0x64>)
 800858a:	4628      	mov	r0, r5
 800858c:	f7ff fb46 	bl	8007c1c <Display::TextStatus(char const*)>
 8008590:	f248 0171 	movw	r1, #32881	; 0x8071
 8008594:	e7f0      	b.n	8008578 <RemoteConfig::HandleTftpSet()+0x38>
 8008596:	4770      	bx	lr
 8008598:	20000094 	mulcs	r0, r4, r0
 800859c:	20009fa0 	andcs	r9, r0, r0, lsr #31
 80085a0:	08011f9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, fp, ip}
 80085a4:	08011fad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip}

080085a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80085a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80085ac:	2500      	movs	r5, #0
 80085ae:	461f      	mov	r7, r3
 80085b0:	6083      	str	r3, [r0, #8]
 80085b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80085b6:	4690      	mov	r8, r2
 80085b8:	4689      	mov	r9, r1
 80085ba:	4e12      	ldr	r6, [pc, #72]	; (8008604 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 80085bc:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80085c0:	f8df a044 	ldr.w	sl, [pc, #68]	; 8008608 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 80085c4:	4b11      	ldr	r3, [pc, #68]	; (800860c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 80085c6:	e9c0 1200 	strd	r1, r2, [r0]
 80085ca:	4604      	mov	r4, r0
 80085cc:	6018      	str	r0, [r3, #0]
 80085ce:	4631      	mov	r1, r6
 80085d0:	60c5      	str	r5, [r0, #12]
 80085d2:	8205      	strh	r5, [r0, #16]
 80085d4:	61c5      	str	r5, [r0, #28]
 80085d6:	f880 5020 	strb.w	r5, [r0, #32]
 80085da:	f8da 0000 	ldr.w	r0, [sl]
 80085de:	f004 f98e 	bl	800c8fe <Network::MacAddressCopyTo(unsigned char*)>
 80085e2:	f642 1105 	movw	r1, #10501	; 0x2905
 80085e6:	f8da 0000 	ldr.w	r0, [sl]
 80085ea:	f886 9006 	strb.w	r9, [r6, #6]
 80085ee:	f886 8007 	strb.w	r8, [r6, #7]
 80085f2:	7237      	strb	r7, [r6, #8]
 80085f4:	7275      	strb	r5, [r6, #9]
 80085f6:	f004 f97c 	bl	800c8f2 <Network::Begin(unsigned short)>
 80085fa:	6160      	str	r0, [r4, #20]
 80085fc:	4620      	mov	r0, r4
 80085fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008602:	bf00      	nop
 8008604:	20000098 	mulcs	r0, r8, r0
 8008608:	2000897c 	andcs	r8, r0, ip, ror r9
 800860c:	200000bc 	strhcs	r0, [r0], -ip

08008610 <RemoteConfig::GetStringNode() const>:
 8008610:	2012      	movs	r0, #18
 8008612:	4b03      	ldr	r3, [pc, #12]	; (8008620 <RemoteConfig::GetStringNode() const+0x10>)
 8008614:	799a      	ldrb	r2, [r3, #6]
 8008616:	4b03      	ldr	r3, [pc, #12]	; (8008624 <RemoteConfig::GetStringNode() const+0x14>)
 8008618:	fb00 3002 	mla	r0, r0, r2, r3
 800861c:	4770      	bx	lr
 800861e:	bf00      	nop
 8008620:	20000098 	mulcs	r0, r8, r0
 8008624:	08012023 	stmdaeq	r1, {r0, r1, r5, sp}

08008628 <RemoteConfig::GetStringOutput() const>:
 8008628:	200c      	movs	r0, #12
 800862a:	4b03      	ldr	r3, [pc, #12]	; (8008638 <RemoteConfig::GetStringOutput() const+0x10>)
 800862c:	79da      	ldrb	r2, [r3, #7]
 800862e:	4b03      	ldr	r3, [pc, #12]	; (800863c <RemoteConfig::GetStringOutput() const+0x14>)
 8008630:	fb00 3002 	mla	r0, r0, r2, r3
 8008634:	4770      	bx	lr
 8008636:	bf00      	nop
 8008638:	20000098 	mulcs	r0, r8, r0
 800863c:	080120e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sp}

08008640 <RemoteConfig::SetDisable(bool)>:
 8008640:	b538      	push	{r3, r4, r5, lr}
 8008642:	4604      	mov	r4, r0
 8008644:	7b03      	ldrb	r3, [r0, #12]
 8008646:	b161      	cbz	r1, 8008662 <RemoteConfig::SetDisable(bool)+0x22>
 8008648:	b953      	cbnz	r3, 8008660 <RemoteConfig::SetDisable(bool)+0x20>
 800864a:	4b0c      	ldr	r3, [pc, #48]	; (800867c <RemoteConfig::SetDisable(bool)+0x3c>)
 800864c:	f642 1105 	movw	r1, #10501	; 0x2905
 8008650:	6818      	ldr	r0, [r3, #0]
 8008652:	f004 f951 	bl	800c8f8 <Network::End(unsigned short)>
 8008656:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800865a:	6163      	str	r3, [r4, #20]
 800865c:	2301      	movs	r3, #1
 800865e:	7323      	strb	r3, [r4, #12]
 8008660:	bd38      	pop	{r3, r4, r5, pc}
 8008662:	2b00      	cmp	r3, #0
 8008664:	d0fc      	beq.n	8008660 <RemoteConfig::SetDisable(bool)+0x20>
 8008666:	4b05      	ldr	r3, [pc, #20]	; (800867c <RemoteConfig::SetDisable(bool)+0x3c>)
 8008668:	460d      	mov	r5, r1
 800866a:	6818      	ldr	r0, [r3, #0]
 800866c:	f642 1105 	movw	r1, #10501	; 0x2905
 8008670:	f004 f93f 	bl	800c8f2 <Network::Begin(unsigned short)>
 8008674:	7325      	strb	r5, [r4, #12]
 8008676:	6160      	str	r0, [r4, #20]
 8008678:	e7f2      	b.n	8008660 <RemoteConfig::SetDisable(bool)+0x20>
 800867a:	bf00      	nop
 800867c:	2000897c 	andcs	r8, r0, ip, ror r9

08008680 <RemoteConfig::SetDisplayName(char const*)>:
 8008680:	2217      	movs	r2, #23
 8008682:	4809      	ldr	r0, [pc, #36]	; (80086a8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8008684:	b508      	push	{r3, lr}
 8008686:	1e4b      	subs	r3, r1, #1
 8008688:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800868c:	b911      	cbnz	r1, 8008694 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800868e:	f007 f87d 	bl	800f78c <memset>
 8008692:	e003      	b.n	800869c <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8008694:	3a01      	subs	r2, #1
 8008696:	f800 1b01 	strb.w	r1, [r0], #1
 800869a:	d1f5      	bne.n	8008688 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800869c:	2200      	movs	r2, #0
 800869e:	4b03      	ldr	r3, [pc, #12]	; (80086ac <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80086a0:	f883 2020 	strb.w	r2, [r3, #32]
 80086a4:	bd08      	pop	{r3, pc}
 80086a6:	bf00      	nop
 80086a8:	200000a1 	andcs	r0, r0, r1, lsr #1
 80086ac:	20000098 	mulcs	r0, r8, r0

080086b0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80086b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80086b2:	4604      	mov	r4, r0
 80086b4:	4616      	mov	r6, r2
 80086b6:	460d      	mov	r5, r1
 80086b8:	4f28      	ldr	r7, [pc, #160]	; (800875c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 80086ba:	b085      	sub	sp, #20
 80086bc:	b9a9      	cbnz	r1, 80086ea <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 80086be:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80086c2:	6839      	ldr	r1, [r7, #0]
 80086c4:	aa03      	add	r2, sp, #12
 80086c6:	3105      	adds	r1, #5
 80086c8:	9303      	str	r3, [sp, #12]
 80086ca:	f000 fbe1 	bl	8008e90 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80086ce:	1e03      	subs	r3, r0, #0
 80086d0:	da1b      	bge.n	800870a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80086d2:	f642 1305 	movw	r3, #10501	; 0x2905
 80086d6:	220b      	movs	r2, #11
 80086d8:	9300      	str	r3, [sp, #0]
 80086da:	4921      	ldr	r1, [pc, #132]	; (8008760 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80086dc:	69a3      	ldr	r3, [r4, #24]
 80086de:	7d20      	ldrb	r0, [r4, #20]
 80086e0:	f003 fc42 	bl	800bf68 <udp_send>
 80086e4:	200c      	movs	r0, #12
 80086e6:	b005      	add	sp, #20
 80086e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086ea:	9203      	str	r2, [sp, #12]
 80086ec:	aa03      	add	r2, sp, #12
 80086ee:	6039      	str	r1, [r7, #0]
 80086f0:	f000 fbce 	bl	8008e90 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80086f4:	1e03      	subs	r3, r0, #0
 80086f6:	da08      	bge.n	800870a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80086f8:	2e0b      	cmp	r6, #11
 80086fa:	4632      	mov	r2, r6
 80086fc:	4628      	mov	r0, r5
 80086fe:	bf28      	it	cs
 8008700:	220b      	movcs	r2, #11
 8008702:	4917      	ldr	r1, [pc, #92]	; (8008760 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8008704:	f007 f820 	bl	800f748 <memcpy>
 8008708:	e7ec      	b.n	80086e4 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800870a:	221c      	movs	r2, #28
 800870c:	4353      	muls	r3, r2
 800870e:	4915      	ldr	r1, [pc, #84]	; (8008764 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8008710:	18ca      	adds	r2, r1, r3
 8008712:	6852      	ldr	r2, [r2, #4]
 8008714:	58cb      	ldr	r3, [r1, r3]
 8008716:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800871a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800871e:	07d2      	lsls	r2, r2, #31
 8008720:	bf48      	it	mi
 8008722:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8008726:	a903      	add	r1, sp, #12
 8008728:	bf48      	it	mi
 800872a:	58d3      	ldrmi	r3, [r2, r3]
 800872c:	4798      	blx	r3
 800872e:	b95d      	cbnz	r5, 8008748 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8008730:	f642 1305 	movw	r3, #10501	; 0x2905
 8008734:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8008738:	9300      	str	r3, [sp, #0]
 800873a:	6839      	ldr	r1, [r7, #0]
 800873c:	69a3      	ldr	r3, [r4, #24]
 800873e:	7d20      	ldrb	r0, [r4, #20]
 8008740:	f003 fc12 	bl	800bf68 <udp_send>
 8008744:	9803      	ldr	r0, [sp, #12]
 8008746:	e7ce      	b.n	80086e6 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8008748:	9a03      	ldr	r2, [sp, #12]
 800874a:	4628      	mov	r0, r5
 800874c:	42b2      	cmp	r2, r6
 800874e:	bf28      	it	cs
 8008750:	4632      	movcs	r2, r6
 8008752:	6839      	ldr	r1, [r7, #0]
 8008754:	f007 f803 	bl	800f75e <memmove>
 8008758:	e7f4      	b.n	8008744 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800875a:	bf00      	nop
 800875c:	20000094 	mulcs	r0, r4, r0
 8008760:	08011fc0 	stmdaeq	r1, {r6, r7, r8, r9, sl, fp, ip}
 8008764:	080122a8 	stmdaeq	r1, {r3, r5, r7, r9, sp}

08008768 <RemoteConfig::HandleGetNoParams()>:
 8008768:	2200      	movs	r2, #0
 800876a:	4611      	mov	r1, r2
 800876c:	f7ff bfa0 	b.w	80086b0 <RemoteConfig::HandleGet(void*, unsigned int)>

08008770 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8008770:	b510      	push	{r4, lr}
 8008772:	460c      	mov	r4, r1
 8008774:	4b07      	ldr	r3, [pc, #28]	; (8008794 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8008776:	b08a      	sub	sp, #40	; 0x28
 8008778:	6819      	ldr	r1, [r3, #0]
 800877a:	a801      	add	r0, sp, #4
 800877c:	f000 f9e4 	bl	8008b48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008780:	4905      	ldr	r1, [pc, #20]	; (8008798 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8008782:	4623      	mov	r3, r4
 8008784:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008788:	6809      	ldr	r1, [r1, #0]
 800878a:	a801      	add	r0, sp, #4
 800878c:	f000 fb00 	bl	8008d90 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8008790:	b00a      	add	sp, #40	; 0x28
 8008792:	bd10      	pop	{r4, pc}
 8008794:	20009f78 	andcs	r9, r0, r8, ror pc
 8008798:	20000094 	mulcs	r0, r4, r0

0800879c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800879c:	b510      	push	{r4, lr}
 800879e:	460c      	mov	r4, r1
 80087a0:	4b07      	ldr	r3, [pc, #28]	; (80087c0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80087a2:	b09a      	sub	sp, #104	; 0x68
 80087a4:	6819      	ldr	r1, [r3, #0]
 80087a6:	a801      	add	r0, sp, #4
 80087a8:	f004 fa8c 	bl	800ccc4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80087ac:	4905      	ldr	r1, [pc, #20]	; (80087c4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80087ae:	4623      	mov	r3, r4
 80087b0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80087b4:	6809      	ldr	r1, [r1, #0]
 80087b6:	a801      	add	r0, sp, #4
 80087b8:	f004 fc60 	bl	800d07c <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80087bc:	b01a      	add	sp, #104	; 0x68
 80087be:	bd10      	pop	{r4, pc}
 80087c0:	20009f74 	andcs	r9, r0, r4, ror pc
 80087c4:	20000094 	mulcs	r0, r4, r0

080087c8 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 80087c8:	b510      	push	{r4, lr}
 80087ca:	460c      	mov	r4, r1
 80087cc:	4b07      	ldr	r3, [pc, #28]	; (80087ec <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 80087ce:	b086      	sub	sp, #24
 80087d0:	6819      	ldr	r1, [r3, #0]
 80087d2:	4668      	mov	r0, sp
 80087d4:	f001 ff06 	bl	800a5e4 <E131Params::E131Params(E131ParamsStore*)>
 80087d8:	4905      	ldr	r1, [pc, #20]	; (80087f0 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 80087da:	4623      	mov	r3, r4
 80087dc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80087e0:	4668      	mov	r0, sp
 80087e2:	6809      	ldr	r1, [r1, #0]
 80087e4:	f002 f9be 	bl	800ab64 <E131Params::Save(char*, unsigned int, unsigned int&)>
 80087e8:	b006      	add	sp, #24
 80087ea:	bd10      	pop	{r4, pc}
 80087ec:	20009f7c 	andcs	r9, r0, ip, ror pc
 80087f0:	20000094 	mulcs	r0, r4, r0

080087f4 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 80087f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80087f6:	460c      	mov	r4, r1
 80087f8:	4b07      	ldr	r3, [pc, #28]	; (8008818 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 80087fa:	4668      	mov	r0, sp
 80087fc:	6819      	ldr	r1, [r3, #0]
 80087fe:	f002 faeb 	bl	800add8 <DmxParams::DmxParams(DmxParamsStore*)>
 8008802:	4906      	ldr	r1, [pc, #24]	; (800881c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8008804:	4623      	mov	r3, r4
 8008806:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800880a:	4668      	mov	r0, sp
 800880c:	6809      	ldr	r1, [r1, #0]
 800880e:	f002 fc05 	bl	800b01c <DmxParams::Save(char*, unsigned int, unsigned int&)>
 8008812:	b004      	add	sp, #16
 8008814:	bd10      	pop	{r4, pc}
 8008816:	bf00      	nop
 8008818:	20009f70 	andcs	r9, r0, r0, ror pc
 800881c:	20000094 	mulcs	r0, r4, r0

08008820 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8008820:	b510      	push	{r4, lr}
 8008822:	460c      	mov	r4, r1
 8008824:	4b07      	ldr	r3, [pc, #28]	; (8008844 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8008826:	b08a      	sub	sp, #40	; 0x28
 8008828:	6819      	ldr	r1, [r3, #0]
 800882a:	4668      	mov	r0, sp
 800882c:	f005 f9ec 	bl	800dc08 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008830:	4905      	ldr	r1, [pc, #20]	; (8008848 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8008832:	4623      	mov	r3, r4
 8008834:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008838:	4668      	mov	r0, sp
 800883a:	6809      	ldr	r1, [r1, #0]
 800883c:	f005 fb1c 	bl	800de78 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8008840:	b00a      	add	sp, #40	; 0x28
 8008842:	bd10      	pop	{r4, pc}
 8008844:	20009f6c 	andcs	r9, r0, ip, ror #30
 8008848:	20000094 	mulcs	r0, r4, r0

0800884c <RemoteConfig::HandleSet(void*, unsigned int)>:
 800884c:	b530      	push	{r4, r5, lr}
 800884e:	b085      	sub	sp, #20
 8008850:	4604      	mov	r4, r0
 8008852:	9201      	str	r2, [sp, #4]
 8008854:	b9d1      	cbnz	r1, 800888c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8008856:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800885a:	9303      	str	r3, [sp, #12]
 800885c:	4b19      	ldr	r3, [pc, #100]	; (80088c4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800885e:	aa03      	add	r2, sp, #12
 8008860:	6819      	ldr	r1, [r3, #0]
 8008862:	3101      	adds	r1, #1
 8008864:	f000 fb14 	bl	8008e90 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008868:	2800      	cmp	r0, #0
 800886a:	db0d      	blt.n	8008888 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800886c:	221c      	movs	r2, #28
 800886e:	4b16      	ldr	r3, [pc, #88]	; (80088c8 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8008870:	fb02 3300 	mla	r3, r2, r0, r3
 8008874:	68da      	ldr	r2, [r3, #12]
 8008876:	689b      	ldr	r3, [r3, #8]
 8008878:	1051      	asrs	r1, r2, #1
 800887a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800887e:	07d2      	lsls	r2, r2, #31
 8008880:	bf44      	itt	mi
 8008882:	5862      	ldrmi	r2, [r4, r1]
 8008884:	58d3      	ldrmi	r3, [r2, r3]
 8008886:	4798      	blx	r3
 8008888:	b005      	add	sp, #20
 800888a:	bd30      	pop	{r4, r5, pc}
 800888c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008890:	d8fa      	bhi.n	8008888 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8008892:	4b0e      	ldr	r3, [pc, #56]	; (80088cc <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8008894:	460d      	mov	r5, r1
 8008896:	781b      	ldrb	r3, [r3, #0]
 8008898:	07d9      	lsls	r1, r3, #31
 800889a:	d50b      	bpl.n	80088b4 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800889c:	782b      	ldrb	r3, [r5, #0]
 800889e:	2b7b      	cmp	r3, #123	; 0x7b
 80088a0:	d108      	bne.n	80088b4 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 80088a2:	1e51      	subs	r1, r2, #1
 80088a4:	4628      	mov	r0, r5
 80088a6:	2200      	movs	r2, #0
 80088a8:	b289      	uxth	r1, r1
 80088aa:	f006 f845 	bl	800e938 <properties::convert_json_file(char*, unsigned short, bool)>
 80088ae:	1e02      	subs	r2, r0, #0
 80088b0:	ddea      	ble.n	8008888 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 80088b2:	b292      	uxth	r2, r2
 80088b4:	4b03      	ldr	r3, [pc, #12]	; (80088c4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 80088b6:	61e2      	str	r2, [r4, #28]
 80088b8:	4620      	mov	r0, r4
 80088ba:	601d      	str	r5, [r3, #0]
 80088bc:	aa01      	add	r2, sp, #4
 80088be:	1c69      	adds	r1, r5, #1
 80088c0:	e7d0      	b.n	8008864 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80088c2:	bf00      	nop
 80088c4:	20000094 	mulcs	r0, r4, r0
 80088c8:	080122a8 	stmdaeq	r1, {r3, r5, r7, r9, sp}
 80088cc:	20009f9c 	mulcs	r0, ip, pc	; <UNPREDICTABLE>

080088d0 <RemoteConfig::Run()>:
 80088d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80088d4:	7b05      	ldrb	r5, [r0, #12]
 80088d6:	2d00      	cmp	r5, #0
 80088d8:	d156      	bne.n	8008988 <RemoteConfig::Run()+0xb8>
 80088da:	4e45      	ldr	r6, [pc, #276]	; (80089f0 <RemoteConfig::Run()+0x120>)
 80088dc:	4604      	mov	r4, r0
 80088de:	f100 0218 	add.w	r2, r0, #24
 80088e2:	4631      	mov	r1, r6
 80088e4:	7d00      	ldrb	r0, [r0, #20]
 80088e6:	f10d 030e 	add.w	r3, sp, #14
 80088ea:	f003 fb17 	bl	800bf1c <udp_recv2>
 80088ee:	2803      	cmp	r0, #3
 80088f0:	61e0      	str	r0, [r4, #28]
 80088f2:	d949      	bls.n	8008988 <RemoteConfig::Run()+0xb8>
 80088f4:	6831      	ldr	r1, [r6, #0]
 80088f6:	1e43      	subs	r3, r0, #1
 80088f8:	5cca      	ldrb	r2, [r1, r3]
 80088fa:	2a0a      	cmp	r2, #10
 80088fc:	bf18      	it	ne
 80088fe:	4603      	movne	r3, r0
 8008900:	61e3      	str	r3, [r4, #28]
 8008902:	7808      	ldrb	r0, [r1, #0]
 8008904:	283f      	cmp	r0, #63	; 0x3f
 8008906:	d137      	bne.n	8008978 <RemoteConfig::Run()+0xa8>
 8008908:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 80089f4 <RemoteConfig::Run()+0x124>
 800890c:	462a      	mov	r2, r5
 800890e:	4667      	mov	r7, ip
 8008910:	3b01      	subs	r3, #1
 8008912:	61e3      	str	r3, [r4, #28]
 8008914:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8008918:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 800891c:	b16d      	cbz	r5, 800893a <RemoteConfig::Run()+0x6a>
 800891e:	4283      	cmp	r3, r0
 8008920:	d80d      	bhi.n	800893e <RemoteConfig::Run()+0x6e>
 8008922:	3201      	adds	r2, #1
 8008924:	2a09      	cmp	r2, #9
 8008926:	f10c 0c10 	add.w	ip, ip, #16
 800892a:	d1f3      	bne.n	8008914 <RemoteConfig::Run()+0x44>
 800892c:	f642 1305 	movw	r3, #10501	; 0x2905
 8008930:	9300      	str	r3, [sp, #0]
 8008932:	2208      	movs	r2, #8
 8008934:	69a3      	ldr	r3, [r4, #24]
 8008936:	4930      	ldr	r1, [pc, #192]	; (80089f8 <RemoteConfig::Run()+0x128>)
 8008938:	e04e      	b.n	80089d8 <RemoteConfig::Run()+0x108>
 800893a:	4283      	cmp	r3, r0
 800893c:	d1f1      	bne.n	8008922 <RemoteConfig::Run()+0x52>
 800893e:	460e      	mov	r6, r1
 8008940:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8008944:	4408      	add	r0, r1
 8008946:	3d01      	subs	r5, #1
 8008948:	4286      	cmp	r6, r0
 800894a:	d10b      	bne.n	8008964 <RemoteConfig::Run()+0x94>
 800894c:	0113      	lsls	r3, r2, #4
 800894e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008952:	6852      	ldr	r2, [r2, #4]
 8008954:	58fb      	ldr	r3, [r7, r3]
 8008956:	1051      	asrs	r1, r2, #1
 8008958:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800895c:	07d2      	lsls	r2, r2, #31
 800895e:	d408      	bmi.n	8008972 <RemoteConfig::Run()+0xa2>
 8008960:	4798      	blx	r3
 8008962:	e011      	b.n	8008988 <RemoteConfig::Run()+0xb8>
 8008964:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8008968:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800896c:	45f0      	cmp	r8, lr
 800896e:	d0eb      	beq.n	8008948 <RemoteConfig::Run()+0x78>
 8008970:	e7d7      	b.n	8008922 <RemoteConfig::Run()+0x52>
 8008972:	5862      	ldr	r2, [r4, r1]
 8008974:	58d3      	ldr	r3, [r2, r3]
 8008976:	e7f3      	b.n	8008960 <RemoteConfig::Run()+0x90>
 8008978:	7b62      	ldrb	r2, [r4, #13]
 800897a:	b92a      	cbnz	r2, 8008988 <RemoteConfig::Run()+0xb8>
 800897c:	2823      	cmp	r0, #35	; 0x23
 800897e:	d106      	bne.n	800898e <RemoteConfig::Run()+0xbe>
 8008980:	4611      	mov	r1, r2
 8008982:	4620      	mov	r0, r4
 8008984:	f7ff ff62 	bl	800884c <RemoteConfig::HandleSet(void*, unsigned int)>
 8008988:	b004      	add	sp, #16
 800898a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800898e:	2821      	cmp	r0, #33	; 0x21
 8008990:	d1fa      	bne.n	8008988 <RemoteConfig::Run()+0xb8>
 8008992:	3b01      	subs	r3, #1
 8008994:	2b05      	cmp	r3, #5
 8008996:	61e3      	str	r3, [r4, #28]
 8008998:	d918      	bls.n	80089cc <RemoteConfig::Run()+0xfc>
 800899a:	460a      	mov	r2, r1
 800899c:	4608      	mov	r0, r1
 800899e:	4d17      	ldr	r5, [pc, #92]	; (80089fc <RemoteConfig::Run()+0x12c>)
 80089a0:	f101 0c05 	add.w	ip, r1, #5
 80089a4:	4560      	cmp	r0, ip
 80089a6:	d01b      	beq.n	80089e0 <RemoteConfig::Run()+0x110>
 80089a8:	f815 6b01 	ldrb.w	r6, [r5], #1
 80089ac:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 80089b0:	42b7      	cmp	r7, r6
 80089b2:	d0f7      	beq.n	80089a4 <RemoteConfig::Run()+0xd4>
 80089b4:	2b08      	cmp	r3, #8
 80089b6:	d909      	bls.n	80089cc <RemoteConfig::Run()+0xfc>
 80089b8:	4b11      	ldr	r3, [pc, #68]	; (8008a00 <RemoteConfig::Run()+0x130>)
 80089ba:	3108      	adds	r1, #8
 80089bc:	428a      	cmp	r2, r1
 80089be:	d015      	beq.n	80089ec <RemoteConfig::Run()+0x11c>
 80089c0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80089c4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80089c8:	4285      	cmp	r5, r0
 80089ca:	d0f7      	beq.n	80089bc <RemoteConfig::Run()+0xec>
 80089cc:	f642 1305 	movw	r3, #10501	; 0x2905
 80089d0:	2208      	movs	r2, #8
 80089d2:	9300      	str	r3, [sp, #0]
 80089d4:	69a3      	ldr	r3, [r4, #24]
 80089d6:	490b      	ldr	r1, [pc, #44]	; (8008a04 <RemoteConfig::Run()+0x134>)
 80089d8:	7d20      	ldrb	r0, [r4, #20]
 80089da:	f003 fac5 	bl	800bf68 <udp_send>
 80089de:	e7d3      	b.n	8008988 <RemoteConfig::Run()+0xb8>
 80089e0:	2300      	movs	r3, #0
 80089e2:	4a09      	ldr	r2, [pc, #36]	; (8008a08 <RemoteConfig::Run()+0x138>)
 80089e4:	011b      	lsls	r3, r3, #4
 80089e6:	4620      	mov	r0, r4
 80089e8:	58d3      	ldr	r3, [r2, r3]
 80089ea:	e7b9      	b.n	8008960 <RemoteConfig::Run()+0x90>
 80089ec:	2301      	movs	r3, #1
 80089ee:	e7f8      	b.n	80089e2 <RemoteConfig::Run()+0x112>
 80089f0:	20000094 	mulcs	r0, r4, r0
 80089f4:	0801217c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sp}
 80089f8:	08011fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
 80089fc:	08011fcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, fp, ip}
 8008a00:	08011fd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, fp, ip}
 8008a04:	08011fdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, fp, ip}
 8008a08:	0801220c 	stmdaeq	r1, {r2, r3, r9, sp}

08008a0c <RemoteConfig::HandleSetRconfig()>:
 8008a0c:	b510      	push	{r4, lr}
 8008a0e:	4604      	mov	r4, r0
 8008a10:	4b08      	ldr	r3, [pc, #32]	; (8008a34 <RemoteConfig::HandleSetRconfig()+0x28>)
 8008a12:	b08a      	sub	sp, #40	; 0x28
 8008a14:	6819      	ldr	r1, [r3, #0]
 8008a16:	a801      	add	r0, sp, #4
 8008a18:	f000 f896 	bl	8008b48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008a1c:	4b06      	ldr	r3, [pc, #24]	; (8008a38 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8008a1e:	69e2      	ldr	r2, [r4, #28]
 8008a20:	6819      	ldr	r1, [r3, #0]
 8008a22:	a801      	add	r0, sp, #4
 8008a24:	f000 f8a6 	bl	8008b74 <RemoteConfigParams::Load(char const*, unsigned int)>
 8008a28:	4621      	mov	r1, r4
 8008a2a:	a801      	add	r0, sp, #4
 8008a2c:	f000 f9bd 	bl	8008daa <RemoteConfigParams::Set(RemoteConfig*)>
 8008a30:	b00a      	add	sp, #40	; 0x28
 8008a32:	bd10      	pop	{r4, pc}
 8008a34:	20009f78 	andcs	r9, r0, r8, ror pc
 8008a38:	20000094 	mulcs	r0, r4, r0

08008a3c <RemoteConfig::HandleSetNetworkTxt()>:
 8008a3c:	b510      	push	{r4, lr}
 8008a3e:	4604      	mov	r4, r0
 8008a40:	4b06      	ldr	r3, [pc, #24]	; (8008a5c <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8008a42:	b09a      	sub	sp, #104	; 0x68
 8008a44:	6819      	ldr	r1, [r3, #0]
 8008a46:	a801      	add	r0, sp, #4
 8008a48:	f004 f93c 	bl	800ccc4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8008a4c:	4b04      	ldr	r3, [pc, #16]	; (8008a60 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8008a4e:	69e2      	ldr	r2, [r4, #28]
 8008a50:	6819      	ldr	r1, [r3, #0]
 8008a52:	a801      	add	r0, sp, #4
 8008a54:	f004 f94e 	bl	800ccf4 <NetworkParams::Load(char const*, unsigned int)>
 8008a58:	b01a      	add	sp, #104	; 0x68
 8008a5a:	bd10      	pop	{r4, pc}
 8008a5c:	20009f74 	andcs	r9, r0, r4, ror pc
 8008a60:	20000094 	mulcs	r0, r4, r0

08008a64 <RemoteConfig::HandleSetE131Txt()>:
 8008a64:	b510      	push	{r4, lr}
 8008a66:	4604      	mov	r4, r0
 8008a68:	4b06      	ldr	r3, [pc, #24]	; (8008a84 <RemoteConfig::HandleSetE131Txt()+0x20>)
 8008a6a:	b086      	sub	sp, #24
 8008a6c:	6819      	ldr	r1, [r3, #0]
 8008a6e:	4668      	mov	r0, sp
 8008a70:	f001 fdb8 	bl	800a5e4 <E131Params::E131Params(E131ParamsStore*)>
 8008a74:	4b04      	ldr	r3, [pc, #16]	; (8008a88 <RemoteConfig::HandleSetE131Txt()+0x24>)
 8008a76:	4668      	mov	r0, sp
 8008a78:	69e2      	ldr	r2, [r4, #28]
 8008a7a:	6819      	ldr	r1, [r3, #0]
 8008a7c:	f001 fdd6 	bl	800a62c <E131Params::Load(char const*, unsigned int)>
 8008a80:	b006      	add	sp, #24
 8008a82:	bd10      	pop	{r4, pc}
 8008a84:	20009f7c 	andcs	r9, r0, ip, ror pc
 8008a88:	20000094 	mulcs	r0, r4, r0

08008a8c <RemoteConfig::HandleSetParamsTxt()>:
 8008a8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008a8e:	4604      	mov	r4, r0
 8008a90:	4b06      	ldr	r3, [pc, #24]	; (8008aac <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8008a92:	4668      	mov	r0, sp
 8008a94:	6819      	ldr	r1, [r3, #0]
 8008a96:	f002 f99f 	bl	800add8 <DmxParams::DmxParams(DmxParamsStore*)>
 8008a9a:	4b05      	ldr	r3, [pc, #20]	; (8008ab0 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 8008a9c:	4668      	mov	r0, sp
 8008a9e:	69e2      	ldr	r2, [r4, #28]
 8008aa0:	6819      	ldr	r1, [r3, #0]
 8008aa2:	f002 f9b1 	bl	800ae08 <DmxParams::Load(char const*, unsigned int)>
 8008aa6:	b004      	add	sp, #16
 8008aa8:	bd10      	pop	{r4, pc}
 8008aaa:	bf00      	nop
 8008aac:	20009f70 	andcs	r9, r0, r0, ror pc
 8008ab0:	20000094 	mulcs	r0, r4, r0

08008ab4 <RemoteConfig::HandleSetDisplayTxt()>:
 8008ab4:	b510      	push	{r4, lr}
 8008ab6:	4604      	mov	r4, r0
 8008ab8:	4b06      	ldr	r3, [pc, #24]	; (8008ad4 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8008aba:	b08a      	sub	sp, #40	; 0x28
 8008abc:	6819      	ldr	r1, [r3, #0]
 8008abe:	4668      	mov	r0, sp
 8008ac0:	f005 f8a2 	bl	800dc08 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008ac4:	4b04      	ldr	r3, [pc, #16]	; (8008ad8 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8008ac6:	4668      	mov	r0, sp
 8008ac8:	69e2      	ldr	r2, [r4, #28]
 8008aca:	6819      	ldr	r1, [r3, #0]
 8008acc:	f005 f8b6 	bl	800dc3c <DisplayUdfParams::Load(char const*, unsigned int)>
 8008ad0:	b00a      	add	sp, #40	; 0x28
 8008ad2:	bd10      	pop	{r4, pc}
 8008ad4:	20009f6c 	andcs	r9, r0, ip, ror #30
 8008ad8:	20000094 	mulcs	r0, r4, r0

08008adc <RemoteConfig::HandleFactory()>:
 8008adc:	b538      	push	{r3, r4, r5, lr}
 8008ade:	2400      	movs	r4, #0
 8008ae0:	4d04      	ldr	r5, [pc, #16]	; (8008af4 <RemoteConfig::HandleFactory()+0x18>)
 8008ae2:	4621      	mov	r1, r4
 8008ae4:	6828      	ldr	r0, [r5, #0]
 8008ae6:	3401      	adds	r4, #1
 8008ae8:	f005 fb3a 	bl	800e160 <ConfigStore::ResetSetList(configstore::Store)>
 8008aec:	2c1c      	cmp	r4, #28
 8008aee:	d1f8      	bne.n	8008ae2 <RemoteConfig::HandleFactory()+0x6>
 8008af0:	bd38      	pop	{r3, r4, r5, pc}
 8008af2:	bf00      	nop
 8008af4:	20009f64 	andcs	r9, r0, r4, ror #30

08008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8008af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008afa:	460b      	mov	r3, r1
 8008afc:	8885      	ldrh	r5, [r0, #4]
 8008afe:	88c1      	ldrh	r1, [r0, #6]
 8008b00:	42a9      	cmp	r1, r5
 8008b02:	d214      	bcs.n	8008b2e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8008b04:	4604      	mov	r4, r0
 8008b06:	6800      	ldr	r0, [r0, #0]
 8008b08:	1a6d      	subs	r5, r5, r1
 8008b0a:	4408      	add	r0, r1
 8008b0c:	7a21      	ldrb	r1, [r4, #8]
 8008b0e:	b91a      	cbnz	r2, 8008b18 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8008b10:	b919      	cbnz	r1, 8008b1a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8008b12:	4a0a      	ldr	r2, [pc, #40]	; (8008b3c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8008b14:	9100      	str	r1, [sp, #0]
 8008b16:	e002      	b.n	8008b1e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008b18:	b159      	cbz	r1, 8008b32 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8008b1a:	9200      	str	r2, [sp, #0]
 8008b1c:	4a08      	ldr	r2, [pc, #32]	; (8008b40 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8008b1e:	4629      	mov	r1, r5
 8008b20:	f007 f876 	bl	800fc10 <snprintf>
 8008b24:	4285      	cmp	r5, r0
 8008b26:	bfa2      	ittt	ge
 8008b28:	88e3      	ldrhge	r3, [r4, #6]
 8008b2a:	181b      	addge	r3, r3, r0
 8008b2c:	80e3      	strhge	r3, [r4, #6]
 8008b2e:	b003      	add	sp, #12
 8008b30:	bd30      	pop	{r4, r5, pc}
 8008b32:	2201      	movs	r2, #1
 8008b34:	9200      	str	r2, [sp, #0]
 8008b36:	4a03      	ldr	r2, [pc, #12]	; (8008b44 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8008b38:	e7f1      	b.n	8008b1e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008b3a:	bf00      	nop
 8008b3c:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 8008b40:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 8008b44:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}

08008b48 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8008b48:	b510      	push	{r4, lr}
 8008b4a:	4604      	mov	r4, r0
 8008b4c:	2220      	movs	r2, #32
 8008b4e:	f840 1b04 	str.w	r1, [r0], #4
 8008b52:	2100      	movs	r1, #0
 8008b54:	f006 fe1a 	bl	800f78c <memset>
 8008b58:	4620      	mov	r0, r4
 8008b5a:	bd10      	pop	{r4, pc}

08008b5c <RemoteConfigParams::Load()>:
 8008b5c:	b508      	push	{r3, lr}
 8008b5e:	2300      	movs	r3, #0
 8008b60:	4601      	mov	r1, r0
 8008b62:	6043      	str	r3, [r0, #4]
 8008b64:	6800      	ldr	r0, [r0, #0]
 8008b66:	b120      	cbz	r0, 8008b72 <RemoteConfigParams::Load()+0x16>
 8008b68:	6803      	ldr	r3, [r0, #0]
 8008b6a:	3104      	adds	r1, #4
 8008b6c:	68db      	ldr	r3, [r3, #12]
 8008b6e:	4798      	blx	r3
 8008b70:	2001      	movs	r0, #1
 8008b72:	bd08      	pop	{r3, pc}

08008b74 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8008b74:	2300      	movs	r3, #0
 8008b76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b78:	460d      	mov	r5, r1
 8008b7a:	4616      	mov	r6, r2
 8008b7c:	4604      	mov	r4, r0
 8008b7e:	6043      	str	r3, [r0, #4]
 8008b80:	4602      	mov	r2, r0
 8008b82:	490a      	ldr	r1, [pc, #40]	; (8008bac <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8008b84:	4668      	mov	r0, sp
 8008b86:	f006 f829 	bl	800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8008b8a:	4632      	mov	r2, r6
 8008b8c:	4629      	mov	r1, r5
 8008b8e:	4668      	mov	r0, sp
 8008b90:	f006 f828 	bl	800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>
 8008b94:	4621      	mov	r1, r4
 8008b96:	f851 0b04 	ldr.w	r0, [r1], #4
 8008b9a:	6803      	ldr	r3, [r0, #0]
 8008b9c:	689b      	ldr	r3, [r3, #8]
 8008b9e:	4798      	blx	r3
 8008ba0:	4668      	mov	r0, sp
 8008ba2:	f006 f81e 	bl	800ebe2 <ReadConfigFile::~ReadConfigFile()>
 8008ba6:	b002      	add	sp, #8
 8008ba8:	bd70      	pop	{r4, r5, r6, pc}
 8008baa:	bf00      	nop
 8008bac:	08008c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, pc}

08008bb0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8008bb0:	6843      	ldr	r3, [r0, #4]
 8008bb2:	b111      	cbz	r1, 8008bba <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8008bb4:	4313      	orrs	r3, r2
 8008bb6:	6043      	str	r3, [r0, #4]
 8008bb8:	4770      	bx	lr
 8008bba:	ea23 0302 	bic.w	r3, r3, r2
 8008bbe:	e7fa      	b.n	8008bb6 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08008bc0 <RemoteConfigParams::callbackFunction(char const*)>:
 8008bc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008bc2:	460d      	mov	r5, r1
 8008bc4:	4604      	mov	r4, r0
 8008bc6:	4923      	ldr	r1, [pc, #140]	; (8008c54 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8008bc8:	4628      	mov	r0, r5
 8008bca:	f10d 0203 	add.w	r2, sp, #3
 8008bce:	f006 f8b5 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bd2:	b940      	cbnz	r0, 8008be6 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8008bd4:	2201      	movs	r2, #1
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8008bdc:	b003      	add	sp, #12
 8008bde:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008be2:	f7ff bfe5 	b.w	8008bb0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8008be6:	4628      	mov	r0, r5
 8008be8:	491b      	ldr	r1, [pc, #108]	; (8008c58 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8008bea:	f10d 0203 	add.w	r2, sp, #3
 8008bee:	f006 f8a5 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bf2:	b908      	cbnz	r0, 8008bf8 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8008bf4:	2202      	movs	r2, #2
 8008bf6:	e7ee      	b.n	8008bd6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008bf8:	4628      	mov	r0, r5
 8008bfa:	4918      	ldr	r1, [pc, #96]	; (8008c5c <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8008bfc:	f10d 0203 	add.w	r2, sp, #3
 8008c00:	f006 f89c 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c04:	b908      	cbnz	r0, 8008c0a <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8008c06:	2204      	movs	r2, #4
 8008c08:	e7e5      	b.n	8008bd6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008c0a:	4628      	mov	r0, r5
 8008c0c:	4914      	ldr	r1, [pc, #80]	; (8008c60 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8008c0e:	f10d 0203 	add.w	r2, sp, #3
 8008c12:	f006 f893 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c16:	b908      	cbnz	r0, 8008c1c <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8008c18:	2208      	movs	r2, #8
 8008c1a:	e7dc      	b.n	8008bd6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008c1c:	4628      	mov	r0, r5
 8008c1e:	4911      	ldr	r1, [pc, #68]	; (8008c64 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8008c20:	f10d 0203 	add.w	r2, sp, #3
 8008c24:	f006 f88a 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c28:	b908      	cbnz	r0, 8008c2e <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8008c2a:	2220      	movs	r2, #32
 8008c2c:	e7d3      	b.n	8008bd6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008c2e:	2317      	movs	r3, #23
 8008c30:	4628      	mov	r0, r5
 8008c32:	9301      	str	r3, [sp, #4]
 8008c34:	490c      	ldr	r1, [pc, #48]	; (8008c68 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8008c36:	ab01      	add	r3, sp, #4
 8008c38:	f104 020c 	add.w	r2, r4, #12
 8008c3c:	f006 f806 	bl	800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008c40:	b930      	cbnz	r0, 8008c50 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8008c42:	9b01      	ldr	r3, [sp, #4]
 8008c44:	4423      	add	r3, r4
 8008c46:	7318      	strb	r0, [r3, #12]
 8008c48:	6863      	ldr	r3, [r4, #4]
 8008c4a:	f043 0310 	orr.w	r3, r3, #16
 8008c4e:	6063      	str	r3, [r4, #4]
 8008c50:	b003      	add	sp, #12
 8008c52:	bd30      	pop	{r4, r5, pc}
 8008c54:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 8008c58:	0801263a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, sp}
 8008c5c:	08012648 	stmdaeq	r1, {r3, r6, r9, sl, sp}
 8008c60:	08012656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, sp}
 8008c64:	08012664 	stmdaeq	r1, {r2, r5, r6, r9, sl, sp}
 8008c68:	0801262d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, sp}

08008c6c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8008c6c:	f7ff bfa8 	b.w	8008bc0 <RemoteConfigParams::callbackFunction(char const*)>

08008c70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8008c70:	b570      	push	{r4, r5, r6, lr}
 8008c72:	4604      	mov	r4, r0
 8008c74:	4615      	mov	r5, r2
 8008c76:	461e      	mov	r6, r3
 8008c78:	b086      	sub	sp, #24
 8008c7a:	3004      	adds	r0, #4
 8008c7c:	2900      	cmp	r1, #0
 8008c7e:	d041      	beq.n	8008d04 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8008c80:	2220      	movs	r2, #32
 8008c82:	f006 fd6c 	bl	800f75e <memmove>
 8008c86:	4633      	mov	r3, r6
 8008c88:	462a      	mov	r2, r5
 8008c8a:	4937      	ldr	r1, [pc, #220]	; (8008d68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8008c8c:	a803      	add	r0, sp, #12
 8008c8e:	f005 ff05 	bl	800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8008c92:	6862      	ldr	r2, [r4, #4]
 8008c94:	4935      	ldr	r1, [pc, #212]	; (8008d6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8008c96:	f002 0201 	and.w	r2, r2, #1
 8008c9a:	a803      	add	r0, sp, #12
 8008c9c:	f7ff ff2c 	bl	8008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008ca0:	6862      	ldr	r2, [r4, #4]
 8008ca2:	4933      	ldr	r1, [pc, #204]	; (8008d70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8008ca4:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8008ca8:	a803      	add	r0, sp, #12
 8008caa:	f7ff ff25 	bl	8008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008cae:	6862      	ldr	r2, [r4, #4]
 8008cb0:	4930      	ldr	r1, [pc, #192]	; (8008d74 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8008cb2:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8008cb6:	a803      	add	r0, sp, #12
 8008cb8:	f7ff ff1e 	bl	8008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008cbc:	6862      	ldr	r2, [r4, #4]
 8008cbe:	492e      	ldr	r1, [pc, #184]	; (8008d78 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8008cc0:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8008cc4:	a803      	add	r0, sp, #12
 8008cc6:	f7ff ff17 	bl	8008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008cca:	6862      	ldr	r2, [r4, #4]
 8008ccc:	492b      	ldr	r1, [pc, #172]	; (8008d7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8008cce:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8008cd2:	a803      	add	r0, sp, #12
 8008cd4:	f7ff ff10 	bl	8008af8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008cd8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008cdc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8008ce0:	6862      	ldr	r2, [r4, #4]
 8008ce2:	42ab      	cmp	r3, r5
 8008ce4:	d223      	bcs.n	8008d2e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 8008ce6:	9803      	ldr	r0, [sp, #12]
 8008ce8:	06d2      	lsls	r2, r2, #27
 8008cea:	4418      	add	r0, r3
 8008cec:	eba5 0503 	sub.w	r5, r5, r3
 8008cf0:	f104 040c 	add.w	r4, r4, #12
 8008cf4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008cf8:	d40b      	bmi.n	8008d12 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8008cfa:	b95b      	cbnz	r3, 8008d14 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8008cfc:	4b20      	ldr	r3, [pc, #128]	; (8008d80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008cfe:	4a21      	ldr	r2, [pc, #132]	; (8008d84 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8008d00:	9400      	str	r4, [sp, #0]
 8008d02:	e00a      	b.n	8008d1a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8008d04:	6823      	ldr	r3, [r4, #0]
 8008d06:	4601      	mov	r1, r0
 8008d08:	681a      	ldr	r2, [r3, #0]
 8008d0a:	4618      	mov	r0, r3
 8008d0c:	68d2      	ldr	r2, [r2, #12]
 8008d0e:	4790      	blx	r2
 8008d10:	e7b9      	b.n	8008c86 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8008d12:	b32b      	cbz	r3, 8008d60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 8008d14:	4b1a      	ldr	r3, [pc, #104]	; (8008d80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008d16:	4a1c      	ldr	r2, [pc, #112]	; (8008d88 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8008d18:	9400      	str	r4, [sp, #0]
 8008d1a:	4629      	mov	r1, r5
 8008d1c:	f006 ff78 	bl	800fc10 <snprintf>
 8008d20:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008d24:	4285      	cmp	r5, r0
 8008d26:	bfa4      	itt	ge
 8008d28:	181b      	addge	r3, r3, r0
 8008d2a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8008d2e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008d32:	b17b      	cbz	r3, 8008d54 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 8008d34:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008d38:	9b03      	ldr	r3, [sp, #12]
 8008d3a:	4413      	add	r3, r2
 8008d3c:	227d      	movs	r2, #125	; 0x7d
 8008d3e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8008d42:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008d46:	9903      	ldr	r1, [sp, #12]
 8008d48:	54ca      	strb	r2, [r1, r3]
 8008d4a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008d4e:	3301      	adds	r3, #1
 8008d50:	f8ad 3012 	strh.w	r3, [sp, #18]
 8008d54:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d5a:	601a      	str	r2, [r3, #0]
 8008d5c:	b006      	add	sp, #24
 8008d5e:	bd70      	pop	{r4, r5, r6, pc}
 8008d60:	4b07      	ldr	r3, [pc, #28]	; (8008d80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008d62:	4a0a      	ldr	r2, [pc, #40]	; (8008d8c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8008d64:	9400      	str	r4, [sp, #0]
 8008d66:	e7d8      	b.n	8008d1a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8008d68:	08012621 	stmdaeq	r1, {r0, r5, r9, sl, sp}
 8008d6c:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 8008d70:	0801263a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, sp}
 8008d74:	08012648 	stmdaeq	r1, {r3, r6, r9, sl, sp}
 8008d78:	08012656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, sp}
 8008d7c:	08012664 	stmdaeq	r1, {r2, r5, r6, r9, sl, sp}
 8008d80:	0801262d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, sp}
 8008d84:	08012248 	stmdaeq	r1, {r3, r6, r9, sp}
 8008d88:	0801223d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp}
 8008d8c:	08012249 	stmdaeq	r1, {r0, r3, r6, r9, sp}

08008d90 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8008d90:	b513      	push	{r0, r1, r4, lr}
 8008d92:	6804      	ldr	r4, [r0, #0]
 8008d94:	b914      	cbnz	r4, 8008d9c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8008d96:	601c      	str	r4, [r3, #0]
 8008d98:	b002      	add	sp, #8
 8008d9a:	bd10      	pop	{r4, pc}
 8008d9c:	9300      	str	r3, [sp, #0]
 8008d9e:	4613      	mov	r3, r2
 8008da0:	460a      	mov	r2, r1
 8008da2:	2100      	movs	r1, #0
 8008da4:	f7ff ff64 	bl	8008c70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8008da8:	e7f6      	b.n	8008d98 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08008daa <RemoteConfigParams::Set(RemoteConfig*)>:
 8008daa:	b538      	push	{r3, r4, r5, lr}
 8008dac:	460c      	mov	r4, r1
 8008dae:	4605      	mov	r5, r0
 8008db0:	6841      	ldr	r1, [r0, #4]
 8008db2:	4620      	mov	r0, r4
 8008db4:	f001 0101 	and.w	r1, r1, #1
 8008db8:	f7ff fc42 	bl	8008640 <RemoteConfig::SetDisable(bool)>
 8008dbc:	686b      	ldr	r3, [r5, #4]
 8008dbe:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8008dc2:	7362      	strb	r2, [r4, #13]
 8008dc4:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8008dc8:	73a2      	strb	r2, [r4, #14]
 8008dca:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8008dce:	73e2      	strb	r2, [r4, #15]
 8008dd0:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8008dd4:	06db      	lsls	r3, r3, #27
 8008dd6:	7422      	strb	r2, [r4, #16]
 8008dd8:	d506      	bpl.n	8008de8 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8008dda:	4620      	mov	r0, r4
 8008ddc:	f105 010c 	add.w	r1, r5, #12
 8008de0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008de4:	f7ff bc4c 	b.w	8008680 <RemoteConfig::SetDisplayName(char const*)>
 8008de8:	bd38      	pop	{r3, r4, r5, pc}

08008dea <RemoteConfigParams::Dump()>:
 8008dea:	4770      	bx	lr

08008dec <RemoteConfig::HandleReboot()>:
 8008dec:	7b83      	ldrb	r3, [r0, #14]
 8008dee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d03c      	beq.n	8008e6e <RemoteConfig::HandleReboot()+0x82>
 8008df4:	2301      	movs	r3, #1
 8008df6:	4c1f      	ldr	r4, [pc, #124]	; (8008e74 <RemoteConfig::HandleReboot()+0x88>)
 8008df8:	7443      	strb	r3, [r0, #17]
 8008dfa:	6825      	ldr	r5, [r4, #0]
 8008dfc:	69a8      	ldr	r0, [r5, #24]
 8008dfe:	b138      	cbz	r0, 8008e10 <RemoteConfig::HandleReboot()+0x24>
 8008e00:	2100      	movs	r1, #0
 8008e02:	6803      	ldr	r3, [r0, #0]
 8008e04:	7429      	strb	r1, [r5, #16]
 8008e06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e08:	4798      	blx	r3
 8008e0a:	4b1b      	ldr	r3, [pc, #108]	; (8008e78 <RemoteConfig::HandleReboot()+0x8c>)
 8008e0c:	681b      	ldr	r3, [r3, #0]
 8008e0e:	606b      	str	r3, [r5, #4]
 8008e10:	4d1a      	ldr	r5, [pc, #104]	; (8008e7c <RemoteConfig::HandleReboot()+0x90>)
 8008e12:	6828      	ldr	r0, [r5, #0]
 8008e14:	f005 fa28 	bl	800e268 <ConfigStore::Flash()>
 8008e18:	2800      	cmp	r0, #0
 8008e1a:	d1fa      	bne.n	8008e12 <RemoteConfig::HandleReboot()+0x26>
 8008e1c:	4b18      	ldr	r3, [pc, #96]	; (8008e80 <RemoteConfig::HandleReboot()+0x94>)
 8008e1e:	6818      	ldr	r0, [r3, #0]
 8008e20:	f003 fd60 	bl	800c8e4 <Network::Shutdown()>
 8008e24:	4817      	ldr	r0, [pc, #92]	; (8008e84 <RemoteConfig::HandleReboot()+0x98>)
 8008e26:	f006 fecb 	bl	800fbc0 <printf>
 8008e2a:	6823      	ldr	r3, [r4, #0]
 8008e2c:	6998      	ldr	r0, [r3, #24]
 8008e2e:	b110      	cbz	r0, 8008e36 <RemoteConfig::HandleReboot()+0x4a>
 8008e30:	6803      	ldr	r3, [r0, #0]
 8008e32:	68db      	ldr	r3, [r3, #12]
 8008e34:	4798      	blx	r3
 8008e36:	6824      	ldr	r4, [r4, #0]
 8008e38:	4913      	ldr	r1, [pc, #76]	; (8008e88 <RemoteConfig::HandleReboot()+0x9c>)
 8008e3a:	4620      	mov	r0, r4
 8008e3c:	f7fe feee 	bl	8007c1c <Display::TextStatus(char const*)>
 8008e40:	7c63      	ldrb	r3, [r4, #17]
 8008e42:	b183      	cbz	r3, 8008e66 <RemoteConfig::HandleReboot()+0x7a>
 8008e44:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8008e48:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008e4c:	23bf      	movs	r3, #191	; 0xbf
 8008e4e:	7a20      	ldrb	r0, [r4, #8]
 8008e50:	f88d 3006 	strb.w	r3, [sp, #6]
 8008e54:	f008 fa1c 	bl	8011290 <gd32_i2c_set_address>
 8008e58:	68e0      	ldr	r0, [r4, #12]
 8008e5a:	f008 fa11 	bl	8011280 <gd32_i2c_set_baudrate>
 8008e5e:	2103      	movs	r1, #3
 8008e60:	a801      	add	r0, sp, #4
 8008e62:	f008 fa1b 	bl	801129c <gd32_i2c_write>
 8008e66:	4b09      	ldr	r3, [pc, #36]	; (8008e8c <RemoteConfig::HandleReboot()+0xa0>)
 8008e68:	6818      	ldr	r0, [r3, #0]
 8008e6a:	f006 fba1 	bl	800f5b0 <Hardware::Reboot()>
 8008e6e:	b003      	add	sp, #12
 8008e70:	bd30      	pop	{r4, r5, pc}
 8008e72:	bf00      	nop
 8008e74:	20009fa0 	andcs	r9, r0, r0, lsr #31
 8008e78:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 8008e7c:	20009f64 	andcs	r9, r0, r4, ror #30
 8008e80:	2000897c 	andcs	r8, r0, ip, ror r9
 8008e84:	08012250 	stmdaeq	r1, {r4, r6, r9, sp}
 8008e88:	0801225f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sp}
 8008e8c:	2000a090 	mulcs	r0, r0, r0

08008e90 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8008e90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008e94:	2000      	movs	r0, #0
 8008e96:	4d12      	ldr	r5, [pc, #72]	; (8008ee0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8008e98:	f10d 0c04 	add.w	ip, sp, #4
 8008e9c:	6814      	ldr	r4, [r2, #0]
 8008e9e:	7d2b      	ldrb	r3, [r5, #20]
 8008ea0:	692e      	ldr	r6, [r5, #16]
 8008ea2:	42a3      	cmp	r3, r4
 8008ea4:	bf34      	ite	cc
 8008ea6:	4664      	movcc	r4, ip
 8008ea8:	4614      	movcs	r4, r2
 8008eaa:	9301      	str	r3, [sp, #4]
 8008eac:	6827      	ldr	r7, [r4, #0]
 8008eae:	460c      	mov	r4, r1
 8008eb0:	3e01      	subs	r6, #1
 8008eb2:	440f      	add	r7, r1
 8008eb4:	42bc      	cmp	r4, r7
 8008eb6:	d101      	bne.n	8008ebc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 8008eb8:	6013      	str	r3, [r2, #0]
 8008eba:	e00c      	b.n	8008ed6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 8008ebc:	f894 8000 	ldrb.w	r8, [r4]
 8008ec0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8008ec4:	45f0      	cmp	r8, lr
 8008ec6:	d009      	beq.n	8008edc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8008ec8:	3001      	adds	r0, #1
 8008eca:	2805      	cmp	r0, #5
 8008ecc:	f105 051c 	add.w	r5, r5, #28
 8008ed0:	d1e4      	bne.n	8008e9c <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8008ed2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008ed6:	b002      	add	sp, #8
 8008ed8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008edc:	3401      	adds	r4, #1
 8008ede:	e7e9      	b.n	8008eb4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8008ee0:	080122a8 	stmdaeq	r1, {r3, r5, r7, r9, sp}

08008ee4 <RemoteConfig::PlatformHandleTftpSet()>:
 8008ee4:	f890 1020 	ldrb.w	r1, [r0, #32]
 8008ee8:	b109      	cbz	r1, 8008eee <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8008eea:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8008eee:	2002      	movs	r0, #2
 8008ef0:	f007 b886 	b.w	8010000 <bkp_data_write>

08008ef4 <RemoteConfig::PlatformHandleTftpGet()>:
 8008ef4:	b510      	push	{r4, lr}
 8008ef6:	4604      	mov	r4, r0
 8008ef8:	2002      	movs	r0, #2
 8008efa:	f007 f897 	bl	801002c <bkp_data_read>
 8008efe:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8008f02:	1ac3      	subs	r3, r0, r3
 8008f04:	4258      	negs	r0, r3
 8008f06:	4158      	adcs	r0, r3
 8008f08:	f884 0020 	strb.w	r0, [r4, #32]
 8008f0c:	bd10      	pop	{r4, pc}

08008f0e <strcmp>:
 8008f0e:	1e43      	subs	r3, r0, #1
 8008f10:	3901      	subs	r1, #1
 8008f12:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008f16:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8008f1a:	4290      	cmp	r0, r2
 8008f1c:	d001      	beq.n	8008f22 <strcmp+0x14>
 8008f1e:	1a80      	subs	r0, r0, r2
 8008f20:	e001      	b.n	8008f26 <strcmp+0x18>
 8008f22:	2800      	cmp	r0, #0
 8008f24:	d1f5      	bne.n	8008f12 <strcmp+0x4>
 8008f26:	4770      	bx	lr

08008f28 <strcasecmp>:
 8008f28:	b530      	push	{r4, r5, lr}
 8008f2a:	1e42      	subs	r2, r0, #1
 8008f2c:	3901      	subs	r1, #1
 8008f2e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8008f32:	4604      	mov	r4, r0
 8008f34:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8008f38:	2b19      	cmp	r3, #25
 8008f3a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008f3e:	bf98      	it	ls
 8008f40:	f100 0420 	addls.w	r4, r0, #32
 8008f44:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8008f48:	2d19      	cmp	r5, #25
 8008f4a:	bf98      	it	ls
 8008f4c:	3320      	addls	r3, #32
 8008f4e:	42a3      	cmp	r3, r4
 8008f50:	d001      	beq.n	8008f56 <strcasecmp+0x2e>
 8008f52:	1ae0      	subs	r0, r4, r3
 8008f54:	e001      	b.n	8008f5a <strcasecmp+0x32>
 8008f56:	2800      	cmp	r0, #0
 8008f58:	d1e9      	bne.n	8008f2e <strcasecmp+0x6>
 8008f5a:	bd30      	pop	{r4, r5, pc}

08008f5c <PropertiesConfig::EnableJSON(bool)>:
 8008f5c:	4a04      	ldr	r2, [pc, #16]	; (8008f70 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8008f5e:	7813      	ldrb	r3, [r2, #0]
 8008f60:	b118      	cbz	r0, 8008f6a <PropertiesConfig::EnableJSON(bool)+0xe>
 8008f62:	f043 0301 	orr.w	r3, r3, #1
 8008f66:	7013      	strb	r3, [r2, #0]
 8008f68:	4770      	bx	lr
 8008f6a:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8008f6e:	e7fa      	b.n	8008f66 <PropertiesConfig::EnableJSON(bool)+0xa>
 8008f70:	20009f9c 	mulcs	r0, ip, pc	; <UNPREDICTABLE>

08008f74 <HttpDaemon::HttpDaemon()>:
 8008f74:	4a08      	ldr	r2, [pc, #32]	; (8008f98 <HttpDaemon::HttpDaemon()+0x24>)
 8008f76:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8008f7a:	6002      	str	r2, [r0, #0]
 8008f7c:	2200      	movs	r2, #0
 8008f7e:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8008f82:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8008f86:	2102      	movs	r1, #2
 8008f88:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8008f8c:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8008f90:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8008f94:	60c2      	str	r2, [r0, #12]
 8008f96:	4770      	bx	lr
 8008f98:	08012599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, sp}

08008f9c <HttpDaemon::Start()>:
 8008f9c:	4b04      	ldr	r3, [pc, #16]	; (8008fb0 <HttpDaemon::Start()+0x14>)
 8008f9e:	b510      	push	{r4, lr}
 8008fa0:	2150      	movs	r1, #80	; 0x50
 8008fa2:	4604      	mov	r4, r0
 8008fa4:	6818      	ldr	r0, [r3, #0]
 8008fa6:	f003 fe81 	bl	800ccac <Network::TcpBegin(unsigned short)>
 8008faa:	6120      	str	r0, [r4, #16]
 8008fac:	bd10      	pop	{r4, pc}
 8008fae:	bf00      	nop
 8008fb0:	2000897c 	andcs	r8, r0, ip, ror r9

08008fb4 <HttpDaemon::ParseMethod(char*)>:
 8008fb4:	b538      	push	{r3, r4, r5, lr}
 8008fb6:	4604      	mov	r4, r0
 8008fb8:	4608      	mov	r0, r1
 8008fba:	491a      	ldr	r1, [pc, #104]	; (8009024 <HttpDaemon::ParseMethod(char*)+0x70>)
 8008fbc:	f006 fe58 	bl	800fc70 <strtok>
 8008fc0:	4605      	mov	r5, r0
 8008fc2:	b360      	cbz	r0, 800901e <HttpDaemon::ParseMethod(char*)+0x6a>
 8008fc4:	4918      	ldr	r1, [pc, #96]	; (8009028 <HttpDaemon::ParseMethod(char*)+0x74>)
 8008fc6:	f7ff ffa2 	bl	8008f0e <strcmp>
 8008fca:	b128      	cbz	r0, 8008fd8 <HttpDaemon::ParseMethod(char*)+0x24>
 8008fcc:	4628      	mov	r0, r5
 8008fce:	4917      	ldr	r1, [pc, #92]	; (800902c <HttpDaemon::ParseMethod(char*)+0x78>)
 8008fd0:	f7ff ff9d 	bl	8008f0e <strcmp>
 8008fd4:	bb18      	cbnz	r0, 800901e <HttpDaemon::ParseMethod(char*)+0x6a>
 8008fd6:	2001      	movs	r0, #1
 8008fd8:	61e0      	str	r0, [r4, #28]
 8008fda:	4912      	ldr	r1, [pc, #72]	; (8009024 <HttpDaemon::ParseMethod(char*)+0x70>)
 8008fdc:	2000      	movs	r0, #0
 8008fde:	f006 fe47 	bl	800fc70 <strtok>
 8008fe2:	b910      	cbnz	r0, 8008fea <HttpDaemon::ParseMethod(char*)+0x36>
 8008fe4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8008fe8:	bd38      	pop	{r3, r4, r5, pc}
 8008fea:	6060      	str	r0, [r4, #4]
 8008fec:	4910      	ldr	r1, [pc, #64]	; (8009030 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8008fee:	2000      	movs	r0, #0
 8008ff0:	f006 fe3e 	bl	800fc70 <strtok>
 8008ff4:	2800      	cmp	r0, #0
 8008ff6:	d0f5      	beq.n	8008fe4 <HttpDaemon::ParseMethod(char*)+0x30>
 8008ff8:	490e      	ldr	r1, [pc, #56]	; (8009034 <HttpDaemon::ParseMethod(char*)+0x80>)
 8008ffa:	f7ff ff88 	bl	8008f0e <strcmp>
 8008ffe:	2800      	cmp	r0, #0
 8009000:	d1f0      	bne.n	8008fe4 <HttpDaemon::ParseMethod(char*)+0x30>
 8009002:	490d      	ldr	r1, [pc, #52]	; (8009038 <HttpDaemon::ParseMethod(char*)+0x84>)
 8009004:	f006 fe34 	bl	800fc70 <strtok>
 8009008:	2800      	cmp	r0, #0
 800900a:	d0eb      	beq.n	8008fe4 <HttpDaemon::ParseMethod(char*)+0x30>
 800900c:	490b      	ldr	r1, [pc, #44]	; (800903c <HttpDaemon::ParseMethod(char*)+0x88>)
 800900e:	f7ff ff7e 	bl	8008f0e <strcmp>
 8009012:	2800      	cmp	r0, #0
 8009014:	f240 10f9 	movw	r0, #505	; 0x1f9
 8009018:	bf08      	it	eq
 800901a:	20c8      	moveq	r0, #200	; 0xc8
 800901c:	e7e4      	b.n	8008fe8 <HttpDaemon::ParseMethod(char*)+0x34>
 800901e:	f240 10f5 	movw	r0, #501	; 0x1f5
 8009022:	e7e1      	b.n	8008fe8 <HttpDaemon::ParseMethod(char*)+0x34>
 8009024:	08011fbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
 8009028:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}
 800902c:	08012338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp}
 8009030:	080123a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sp}
 8009034:	0801233d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sp}
 8009038:	08012342 	stmdaeq	r1, {r1, r6, r8, r9, sp}
 800903c:	08012345 	stmdaeq	r1, {r0, r2, r6, r8, r9, sp}

08009040 <HttpDaemon::ParseHeaderField(char*)>:
 8009040:	b538      	push	{r3, r4, r5, lr}
 8009042:	4605      	mov	r5, r0
 8009044:	4608      	mov	r0, r1
 8009046:	491d      	ldr	r1, [pc, #116]	; (80090bc <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009048:	f006 fe12 	bl	800fc70 <strtok>
 800904c:	4604      	mov	r4, r0
 800904e:	b910      	cbnz	r0, 8009056 <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009050:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009054:	bd38      	pop	{r3, r4, r5, pc}
 8009056:	491a      	ldr	r1, [pc, #104]	; (80090c0 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009058:	f7ff ff66 	bl	8008f28 <strcasecmp>
 800905c:	b970      	cbnz	r0, 800907c <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800905e:	4919      	ldr	r1, [pc, #100]	; (80090c4 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009060:	f006 fe06 	bl	800fc70 <strtok>
 8009064:	2800      	cmp	r0, #0
 8009066:	d0f3      	beq.n	8009050 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009068:	4917      	ldr	r1, [pc, #92]	; (80090c8 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800906a:	f7ff ff50 	bl	8008f0e <strcmp>
 800906e:	b108      	cbz	r0, 8009074 <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009070:	20c8      	movs	r0, #200	; 0xc8
 8009072:	e7ef      	b.n	8009054 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009074:	2301      	movs	r3, #1
 8009076:	f885 3020 	strb.w	r3, [r5, #32]
 800907a:	e7f9      	b.n	8009070 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800907c:	4620      	mov	r0, r4
 800907e:	4913      	ldr	r1, [pc, #76]	; (80090cc <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009080:	f7ff ff52 	bl	8008f28 <strcasecmp>
 8009084:	4604      	mov	r4, r0
 8009086:	2800      	cmp	r0, #0
 8009088:	d1f2      	bne.n	8009070 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800908a:	4911      	ldr	r1, [pc, #68]	; (80090d0 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800908c:	f006 fdf0 	bl	800fc70 <strtok>
 8009090:	2800      	cmp	r0, #0
 8009092:	d0dd      	beq.n	8009050 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009094:	1e42      	subs	r2, r0, #1
 8009096:	4623      	mov	r3, r4
 8009098:	200a      	movs	r0, #10
 800909a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800909e:	b909      	cbnz	r1, 80090a4 <HttpDaemon::ParseHeaderField(char*)+0x64>
 80090a0:	84eb      	strh	r3, [r5, #38]	; 0x26
 80090a2:	e7e5      	b.n	8009070 <HttpDaemon::ParseHeaderField(char*)+0x30>
 80090a4:	3930      	subs	r1, #48	; 0x30
 80090a6:	2909      	cmp	r1, #9
 80090a8:	d8d2      	bhi.n	8009050 <HttpDaemon::ParseHeaderField(char*)+0x10>
 80090aa:	fb00 1303 	mla	r3, r0, r3, r1
 80090ae:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 80090b2:	d9f2      	bls.n	800909a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 80090b4:	f240 109d 	movw	r0, #413	; 0x19d
 80090b8:	e7cc      	b.n	8009054 <HttpDaemon::ParseHeaderField(char*)+0x14>
 80090ba:	bf00      	nop
 80090bc:	08012349 	stmdaeq	r1, {r0, r3, r6, r8, r9, sp}
 80090c0:	0801234b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sp}
 80090c4:	08012358 	stmdaeq	r1, {r3, r4, r6, r8, r9, sp}
 80090c8:	0801235b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sp}
 80090cc:	0801236c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sp}
 80090d0:	08011fbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}

080090d4 <HttpDaemon::ParseRequest()>:
 80090d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090d6:	2400      	movs	r4, #0
 80090d8:	4605      	mov	r5, r0
 80090da:	4622      	mov	r2, r4
 80090dc:	4626      	mov	r6, r4
 80090de:	68c1      	ldr	r1, [r0, #12]
 80090e0:	f880 4020 	strb.w	r4, [r0, #32]
 80090e4:	6244      	str	r4, [r0, #36]	; 0x24
 80090e6:	8aab      	ldrh	r3, [r5, #20]
 80090e8:	42a3      	cmp	r3, r4
 80090ea:	d91d      	bls.n	8009128 <HttpDaemon::ParseRequest()+0x54>
 80090ec:	68eb      	ldr	r3, [r5, #12]
 80090ee:	5d18      	ldrb	r0, [r3, r4]
 80090f0:	280a      	cmp	r0, #10
 80090f2:	d10e      	bne.n	8009112 <HttpDaemon::ParseRequest()+0x3e>
 80090f4:	4423      	add	r3, r4
 80090f6:	f803 6c01 	strb.w	r6, [r3, #-1]
 80090fa:	1c57      	adds	r7, r2, #1
 80090fc:	b962      	cbnz	r2, 8009118 <HttpDaemon::ParseRequest()+0x44>
 80090fe:	4628      	mov	r0, r5
 8009100:	f7ff ff58 	bl	8008fb4 <HttpDaemon::ParseMethod(char*)>
 8009104:	28c8      	cmp	r0, #200	; 0xc8
 8009106:	d110      	bne.n	800912a <HttpDaemon::ParseRequest()+0x56>
 8009108:	463a      	mov	r2, r7
 800910a:	68e9      	ldr	r1, [r5, #12]
 800910c:	3401      	adds	r4, #1
 800910e:	b2a4      	uxth	r4, r4
 8009110:	4421      	add	r1, r4
 8009112:	3401      	adds	r4, #1
 8009114:	b2a4      	uxth	r4, r4
 8009116:	e7e6      	b.n	80090e6 <HttpDaemon::ParseRequest()+0x12>
 8009118:	7808      	ldrb	r0, [r1, #0]
 800911a:	b968      	cbnz	r0, 8009138 <HttpDaemon::ParseRequest()+0x64>
 800911c:	696b      	ldr	r3, [r5, #20]
 800911e:	3b01      	subs	r3, #1
 8009120:	1b1b      	subs	r3, r3, r4
 8009122:	b29b      	uxth	r3, r3
 8009124:	84ab      	strh	r3, [r5, #36]	; 0x24
 8009126:	b90b      	cbnz	r3, 800912c <HttpDaemon::ParseRequest()+0x58>
 8009128:	20c8      	movs	r0, #200	; 0xc8
 800912a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800912c:	68ea      	ldr	r2, [r5, #12]
 800912e:	3401      	adds	r4, #1
 8009130:	4414      	add	r4, r2
 8009132:	60ac      	str	r4, [r5, #8]
 8009134:	54e0      	strb	r0, [r4, r3]
 8009136:	e7f7      	b.n	8009128 <HttpDaemon::ParseRequest()+0x54>
 8009138:	4628      	mov	r0, r5
 800913a:	f7ff ff81 	bl	8009040 <HttpDaemon::ParseHeaderField(char*)>
 800913e:	e7e1      	b.n	8009104 <HttpDaemon::ParseRequest()+0x30>

08009140 <HttpDaemon::HandleGetTxt()>:
 8009140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009144:	6846      	ldr	r6, [r0, #4]
 8009146:	4607      	mov	r7, r0
 8009148:	1db4      	adds	r4, r6, #6
 800914a:	4622      	mov	r2, r4
 800914c:	4613      	mov	r3, r2
 800914e:	7819      	ldrb	r1, [r3, #0]
 8009150:	3201      	adds	r2, #1
 8009152:	2900      	cmp	r1, #0
 8009154:	d1fa      	bne.n	800914c <HttpDaemon::HandleGetTxt()+0xc>
 8009156:	1b1b      	subs	r3, r3, r4
 8009158:	2b04      	cmp	r3, #4
 800915a:	d803      	bhi.n	8009164 <HttpDaemon::HandleGetTxt()+0x24>
 800915c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009164:	3b04      	subs	r3, #4
 8009166:	4914      	ldr	r1, [pc, #80]	; (80091b8 <HttpDaemon::HandleGetTxt()+0x78>)
 8009168:	18e0      	adds	r0, r4, r3
 800916a:	f7ff fed0 	bl	8008f0e <strcmp>
 800916e:	2800      	cmp	r0, #0
 8009170:	d1f4      	bne.n	800915c <HttpDaemon::HandleGetTxt()+0x1c>
 8009172:	4b12      	ldr	r3, [pc, #72]	; (80091bc <HttpDaemon::HandleGetTxt()+0x7c>)
 8009174:	2001      	movs	r0, #1
 8009176:	f893 8000 	ldrb.w	r8, [r3]
 800917a:	f7ff feef 	bl	8008f5c <PropertiesConfig::EnableJSON(bool)>
 800917e:	4b10      	ldr	r3, [pc, #64]	; (80091c0 <HttpDaemon::HandleGetTxt()+0x80>)
 8009180:	f240 529b 	movw	r2, #1435	; 0x59b
 8009184:	4621      	mov	r1, r4
 8009186:	6818      	ldr	r0, [r3, #0]
 8009188:	f7ff fa92 	bl	80086b0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800918c:	4605      	mov	r5, r0
 800918e:	f008 0801 	and.w	r8, r8, #1
 8009192:	4640      	mov	r0, r8
 8009194:	f7ff fee2 	bl	8008f5c <PropertiesConfig::EnableJSON(bool)>
 8009198:	2d00      	cmp	r5, #0
 800919a:	d0df      	beq.n	800915c <HttpDaemon::HandleGetTxt()+0x1c>
 800919c:	847d      	strh	r5, [r7, #34]	; 0x22
 800919e:	4b09      	ldr	r3, [pc, #36]	; (80091c4 <HttpDaemon::HandleGetTxt()+0x84>)
 80091a0:	3506      	adds	r5, #6
 80091a2:	442e      	add	r6, r5
 80091a4:	42b4      	cmp	r4, r6
 80091a6:	d101      	bne.n	80091ac <HttpDaemon::HandleGetTxt()+0x6c>
 80091a8:	20c8      	movs	r0, #200	; 0xc8
 80091aa:	e7d9      	b.n	8009160 <HttpDaemon::HandleGetTxt()+0x20>
 80091ac:	f814 2b01 	ldrb.w	r2, [r4], #1
 80091b0:	f803 2b01 	strb.w	r2, [r3], #1
 80091b4:	e7f6      	b.n	80091a4 <HttpDaemon::HandleGetTxt()+0x64>
 80091b6:	bf00      	nop
 80091b8:	08012295 	stmdaeq	r1, {r0, r2, r4, r7, r9, sp}
 80091bc:	20009f9c 	mulcs	r0, ip, pc	; <UNPREDICTABLE>
 80091c0:	200000bc 	strhcs	r0, [r0], -ip
 80091c4:	200000c0 	andcs	r0, r0, r0, asr #1

080091c8 <HttpDaemon::HandleGet()>:
 80091c8:	b570      	push	{r4, r5, r6, lr}
 80091ca:	6845      	ldr	r5, [r0, #4]
 80091cc:	4604      	mov	r4, r0
 80091ce:	493e      	ldr	r1, [pc, #248]	; (80092c8 <HttpDaemon::HandleGet()+0x100>)
 80091d0:	4628      	mov	r0, r5
 80091d2:	f7ff fe9c 	bl	8008f0e <strcmp>
 80091d6:	b120      	cbz	r0, 80091e2 <HttpDaemon::HandleGet()+0x1a>
 80091d8:	4628      	mov	r0, r5
 80091da:	493c      	ldr	r1, [pc, #240]	; (80092cc <HttpDaemon::HandleGet()+0x104>)
 80091dc:	f7ff fe97 	bl	8008f0e <strcmp>
 80091e0:	b950      	cbnz	r0, 80091f8 <HttpDaemon::HandleGet()+0x30>
 80091e2:	4b3b      	ldr	r3, [pc, #236]	; (80092d0 <HttpDaemon::HandleGet()+0x108>)
 80091e4:	493b      	ldr	r1, [pc, #236]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 80091e6:	483c      	ldr	r0, [pc, #240]	; (80092d8 <HttpDaemon::HandleGet()+0x110>)
 80091e8:	6023      	str	r3, [r4, #0]
 80091ea:	f000 fa67 	bl	80096bc <get_file_content(char const*, char*)>
 80091ee:	2800      	cmp	r0, #0
 80091f0:	dd2f      	ble.n	8009252 <HttpDaemon::HandleGet()+0x8a>
 80091f2:	8460      	strh	r0, [r4, #34]	; 0x22
 80091f4:	20c8      	movs	r0, #200	; 0xc8
 80091f6:	bd70      	pop	{r4, r5, r6, pc}
 80091f8:	4628      	mov	r0, r5
 80091fa:	4938      	ldr	r1, [pc, #224]	; (80092dc <HttpDaemon::HandleGet()+0x114>)
 80091fc:	f7ff fe87 	bl	8008f0e <strcmp>
 8009200:	b920      	cbnz	r0, 800920c <HttpDaemon::HandleGet()+0x44>
 8009202:	4b37      	ldr	r3, [pc, #220]	; (80092e0 <HttpDaemon::HandleGet()+0x118>)
 8009204:	4933      	ldr	r1, [pc, #204]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 8009206:	4837      	ldr	r0, [pc, #220]	; (80092e4 <HttpDaemon::HandleGet()+0x11c>)
 8009208:	6023      	str	r3, [r4, #0]
 800920a:	e7ee      	b.n	80091ea <HttpDaemon::HandleGet()+0x22>
 800920c:	4628      	mov	r0, r5
 800920e:	4936      	ldr	r1, [pc, #216]	; (80092e8 <HttpDaemon::HandleGet()+0x120>)
 8009210:	f7ff fe7d 	bl	8008f0e <strcmp>
 8009214:	b190      	cbz	r0, 800923c <HttpDaemon::HandleGet()+0x74>
 8009216:	4a35      	ldr	r2, [pc, #212]	; (80092ec <HttpDaemon::HandleGet()+0x124>)
 8009218:	1e6b      	subs	r3, r5, #1
 800921a:	1d69      	adds	r1, r5, #5
 800921c:	428b      	cmp	r3, r1
 800921e:	d112      	bne.n	8009246 <HttpDaemon::HandleGet()+0x7e>
 8009220:	4b33      	ldr	r3, [pc, #204]	; (80092f0 <HttpDaemon::HandleGet()+0x128>)
 8009222:	3506      	adds	r5, #6
 8009224:	4628      	mov	r0, r5
 8009226:	4933      	ldr	r1, [pc, #204]	; (80092f4 <HttpDaemon::HandleGet()+0x12c>)
 8009228:	6023      	str	r3, [r4, #0]
 800922a:	f7ff fe70 	bl	8008f0e <strcmp>
 800922e:	b998      	cbnz	r0, 8009258 <HttpDaemon::HandleGet()+0x90>
 8009230:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009234:	4827      	ldr	r0, [pc, #156]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 8009236:	f000 f9c9 	bl	80095cc <remoteconfig::json_get_list(char*, unsigned short)>
 800923a:	e7d8      	b.n	80091ee <HttpDaemon::HandleGet()+0x26>
 800923c:	4b2e      	ldr	r3, [pc, #184]	; (80092f8 <HttpDaemon::HandleGet()+0x130>)
 800923e:	4925      	ldr	r1, [pc, #148]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 8009240:	482e      	ldr	r0, [pc, #184]	; (80092fc <HttpDaemon::HandleGet()+0x134>)
 8009242:	6023      	str	r3, [r4, #0]
 8009244:	e7d1      	b.n	80091ea <HttpDaemon::HandleGet()+0x22>
 8009246:	f812 0b01 	ldrb.w	r0, [r2], #1
 800924a:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800924e:	4286      	cmp	r6, r0
 8009250:	d0e4      	beq.n	800921c <HttpDaemon::HandleGet()+0x54>
 8009252:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009256:	e7ce      	b.n	80091f6 <HttpDaemon::HandleGet()+0x2e>
 8009258:	4628      	mov	r0, r5
 800925a:	4929      	ldr	r1, [pc, #164]	; (8009300 <HttpDaemon::HandleGet()+0x138>)
 800925c:	f7ff fe57 	bl	8008f0e <strcmp>
 8009260:	b928      	cbnz	r0, 800926e <HttpDaemon::HandleGet()+0xa6>
 8009262:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009266:	481b      	ldr	r0, [pc, #108]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 8009268:	f000 f9e4 	bl	8009634 <remoteconfig::json_get_version(char*, unsigned short)>
 800926c:	e7bf      	b.n	80091ee <HttpDaemon::HandleGet()+0x26>
 800926e:	4628      	mov	r0, r5
 8009270:	4924      	ldr	r1, [pc, #144]	; (8009304 <HttpDaemon::HandleGet()+0x13c>)
 8009272:	f7ff fe4c 	bl	8008f0e <strcmp>
 8009276:	b948      	cbnz	r0, 800928c <HttpDaemon::HandleGet()+0xc4>
 8009278:	4b23      	ldr	r3, [pc, #140]	; (8009308 <HttpDaemon::HandleGet()+0x140>)
 800927a:	681b      	ldr	r3, [r3, #0]
 800927c:	7bdb      	ldrb	r3, [r3, #15]
 800927e:	b303      	cbz	r3, 80092c2 <HttpDaemon::HandleGet()+0xfa>
 8009280:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009284:	4813      	ldr	r0, [pc, #76]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 8009286:	f000 f9f1 	bl	800966c <remoteconfig::json_get_uptime(char*, unsigned short)>
 800928a:	e7b0      	b.n	80091ee <HttpDaemon::HandleGet()+0x26>
 800928c:	4628      	mov	r0, r5
 800928e:	491f      	ldr	r1, [pc, #124]	; (800930c <HttpDaemon::HandleGet()+0x144>)
 8009290:	f7ff fe3d 	bl	8008f0e <strcmp>
 8009294:	b928      	cbnz	r0, 80092a2 <HttpDaemon::HandleGet()+0xda>
 8009296:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800929a:	480e      	ldr	r0, [pc, #56]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 800929c:	f000 f9f6 	bl	800968c <remoteconfig::json_get_display(char*, unsigned short)>
 80092a0:	e7a5      	b.n	80091ee <HttpDaemon::HandleGet()+0x26>
 80092a2:	4628      	mov	r0, r5
 80092a4:	491a      	ldr	r1, [pc, #104]	; (8009310 <HttpDaemon::HandleGet()+0x148>)
 80092a6:	f7ff fe32 	bl	8008f0e <strcmp>
 80092aa:	b928      	cbnz	r0, 80092b8 <HttpDaemon::HandleGet()+0xf0>
 80092ac:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 80092b0:	4808      	ldr	r0, [pc, #32]	; (80092d4 <HttpDaemon::HandleGet()+0x10c>)
 80092b2:	f000 f9fb 	bl	80096ac <remoteconfig::json_get_directory(char*, unsigned short)>
 80092b6:	e79a      	b.n	80091ee <HttpDaemon::HandleGet()+0x26>
 80092b8:	4620      	mov	r0, r4
 80092ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092be:	f7ff bf3f 	b.w	8009140 <HttpDaemon::HandleGetTxt()>
 80092c2:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80092c6:	e796      	b.n	80091f6 <HttpDaemon::HandleGet()+0x2e>
 80092c8:	080123a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sp}
 80092cc:	0801237b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sp}
 80092d0:	08012599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, sp}
 80092d4:	200000c0 	andcs	r0, r0, r0, asr #1
 80092d8:	0801237c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sp}
 80092dc:	08012387 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, sp}
 80092e0:	080125b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, sp}
 80092e4:	08012388 	stmdaeq	r1, {r3, r7, r8, r9, sp}
 80092e8:	08012393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sp}
 80092ec:	0801239d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sp}
 80092f0:	080125f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, sp}
 80092f4:	080123a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sp}
 80092f8:	080125d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, sp}
 80092fc:	08012394 	stmdaeq	r1, {r2, r4, r7, r8, r9, sp}
 8009300:	080123a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sp}
 8009304:	080123b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sp}
 8009308:	200000bc 	strhcs	r0, [r0], -ip
 800930c:	080123b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sp}
 8009310:	080123c0 	stmdaeq	r1, {r6, r7, r8, r9, sp}

08009314 <HttpDaemon::HandlePost(bool)>:
 8009314:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009316:	4604      	mov	r4, r0
 8009318:	2900      	cmp	r1, #0
 800931a:	f040 808a 	bne.w	8009432 <HttpDaemon::HandlePost(bool)+0x11e>
 800931e:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009322:	2b00      	cmp	r3, #0
 8009324:	d05a      	beq.n	80093dc <HttpDaemon::HandlePost(bool)+0xc8>
 8009326:	6845      	ldr	r5, [r0, #4]
 8009328:	4944      	ldr	r1, [pc, #272]	; (800943c <HttpDaemon::HandlePost(bool)+0x128>)
 800932a:	4628      	mov	r0, r5
 800932c:	f7ff fdef 	bl	8008f0e <strcmp>
 8009330:	2800      	cmp	r0, #0
 8009332:	bf0c      	ite	eq
 8009334:	2301      	moveq	r3, #1
 8009336:	2300      	movne	r3, #0
 8009338:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800933c:	d052      	beq.n	80093e4 <HttpDaemon::HandlePost(bool)+0xd0>
 800933e:	4628      	mov	r0, r5
 8009340:	493f      	ldr	r1, [pc, #252]	; (8009440 <HttpDaemon::HandlePost(bool)+0x12c>)
 8009342:	f7ff fde4 	bl	8008f0e <strcmp>
 8009346:	2800      	cmp	r0, #0
 8009348:	d04c      	beq.n	80093e4 <HttpDaemon::HandlePost(bool)+0xd0>
 800934a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800934e:	e047      	b.n	80093e0 <HttpDaemon::HandlePost(bool)+0xcc>
 8009350:	493c      	ldr	r1, [pc, #240]	; (8009444 <HttpDaemon::HandlePost(bool)+0x130>)
 8009352:	68a0      	ldr	r0, [r4, #8]
 8009354:	f10d 0207 	add.w	r2, sp, #7
 8009358:	f005 fcf0 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800935c:	b9d8      	cbnz	r0, 8009396 <HttpDaemon::HandlePost(bool)+0x82>
 800935e:	f89d 6007 	ldrb.w	r6, [sp, #7]
 8009362:	4b39      	ldr	r3, [pc, #228]	; (8009448 <HttpDaemon::HandlePost(bool)+0x134>)
 8009364:	fab6 f186 	clz	r1, r6
 8009368:	681d      	ldr	r5, [r3, #0]
 800936a:	0949      	lsrs	r1, r1, #5
 800936c:	69a8      	ldr	r0, [r5, #24]
 800936e:	b138      	cbz	r0, 8009380 <HttpDaemon::HandlePost(bool)+0x6c>
 8009370:	6803      	ldr	r3, [r0, #0]
 8009372:	7429      	strb	r1, [r5, #16]
 8009374:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009376:	4798      	blx	r3
 8009378:	b116      	cbz	r6, 8009380 <HttpDaemon::HandlePost(bool)+0x6c>
 800937a:	4b34      	ldr	r3, [pc, #208]	; (800944c <HttpDaemon::HandlePost(bool)+0x138>)
 800937c:	681b      	ldr	r3, [r3, #0]
 800937e:	606b      	str	r3, [r5, #4]
 8009380:	4b33      	ldr	r3, [pc, #204]	; (8009450 <HttpDaemon::HandlePost(bool)+0x13c>)
 8009382:	f240 519f 	movw	r1, #1439	; 0x59f
 8009386:	4a33      	ldr	r2, [pc, #204]	; (8009454 <HttpDaemon::HandlePost(bool)+0x140>)
 8009388:	4833      	ldr	r0, [pc, #204]	; (8009458 <HttpDaemon::HandlePost(bool)+0x144>)
 800938a:	6023      	str	r3, [r4, #0]
 800938c:	f006 fc40 	bl	800fc10 <snprintf>
 8009390:	8460      	strh	r0, [r4, #34]	; 0x22
 8009392:	20c8      	movs	r0, #200	; 0xc8
 8009394:	e024      	b.n	80093e0 <HttpDaemon::HandlePost(bool)+0xcc>
 8009396:	4931      	ldr	r1, [pc, #196]	; (800945c <HttpDaemon::HandlePost(bool)+0x148>)
 8009398:	68a0      	ldr	r0, [r4, #8]
 800939a:	f10d 0207 	add.w	r2, sp, #7
 800939e:	f005 fccd 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80093a2:	b9d8      	cbnz	r0, 80093dc <HttpDaemon::HandlePost(bool)+0xc8>
 80093a4:	4b2e      	ldr	r3, [pc, #184]	; (8009460 <HttpDaemon::HandlePost(bool)+0x14c>)
 80093a6:	6818      	ldr	r0, [r3, #0]
 80093a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80093ac:	b11b      	cbz	r3, 80093b6 <HttpDaemon::HandlePost(bool)+0xa2>
 80093ae:	2104      	movs	r1, #4
 80093b0:	f006 f85e 	bl	800f470 <LedBlink::SetMode(ledblink::Mode)>
 80093b4:	e7e4      	b.n	8009380 <HttpDaemon::HandlePost(bool)+0x6c>
 80093b6:	2102      	movs	r1, #2
 80093b8:	e7fa      	b.n	80093b0 <HttpDaemon::HandlePost(bool)+0x9c>
 80093ba:	4b2a      	ldr	r3, [pc, #168]	; (8009464 <HttpDaemon::HandlePost(bool)+0x150>)
 80093bc:	2001      	movs	r0, #1
 80093be:	781d      	ldrb	r5, [r3, #0]
 80093c0:	f7ff fdcc 	bl	8008f5c <PropertiesConfig::EnableJSON(bool)>
 80093c4:	4b28      	ldr	r3, [pc, #160]	; (8009468 <HttpDaemon::HandlePost(bool)+0x154>)
 80093c6:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 80093c8:	6818      	ldr	r0, [r3, #0]
 80093ca:	68a1      	ldr	r1, [r4, #8]
 80093cc:	f005 0501 	and.w	r5, r5, #1
 80093d0:	f7ff fa3c 	bl	800884c <RemoteConfig::HandleSet(void*, unsigned int)>
 80093d4:	4628      	mov	r0, r5
 80093d6:	f7ff fdc1 	bl	8008f5c <PropertiesConfig::EnableJSON(bool)>
 80093da:	e7d1      	b.n	8009380 <HttpDaemon::HandlePost(bool)+0x6c>
 80093dc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80093e0:	b002      	add	sp, #8
 80093e2:	bd70      	pop	{r4, r5, r6, pc}
 80093e4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80093e6:	6962      	ldr	r2, [r4, #20]
 80093e8:	429a      	cmp	r2, r3
 80093ea:	dbd2      	blt.n	8009392 <HttpDaemon::HandlePost(bool)+0x7e>
 80093ec:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	d0cf      	beq.n	8009392 <HttpDaemon::HandlePost(bool)+0x7e>
 80093f2:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d0df      	beq.n	80093ba <HttpDaemon::HandlePost(bool)+0xa6>
 80093fa:	2201      	movs	r2, #1
 80093fc:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 80093fe:	68a0      	ldr	r0, [r4, #8]
 8009400:	f005 fa9a 	bl	800e938 <properties::convert_json_file(char*, unsigned short, bool)>
 8009404:	2800      	cmp	r0, #0
 8009406:	dde9      	ble.n	80093dc <HttpDaemon::HandlePost(bool)+0xc8>
 8009408:	4918      	ldr	r1, [pc, #96]	; (800946c <HttpDaemon::HandlePost(bool)+0x158>)
 800940a:	68a0      	ldr	r0, [r4, #8]
 800940c:	f10d 0207 	add.w	r2, sp, #7
 8009410:	f005 fc94 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009414:	2800      	cmp	r0, #0
 8009416:	d19b      	bne.n	8009350 <HttpDaemon::HandlePost(bool)+0x3c>
 8009418:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800941c:	2b00      	cmp	r3, #0
 800941e:	d0af      	beq.n	8009380 <HttpDaemon::HandlePost(bool)+0x6c>
 8009420:	4b11      	ldr	r3, [pc, #68]	; (8009468 <HttpDaemon::HandlePost(bool)+0x154>)
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	7b9b      	ldrb	r3, [r3, #14]
 8009426:	2b00      	cmp	r3, #0
 8009428:	d0d8      	beq.n	80093dc <HttpDaemon::HandlePost(bool)+0xc8>
 800942a:	4b11      	ldr	r3, [pc, #68]	; (8009470 <HttpDaemon::HandlePost(bool)+0x15c>)
 800942c:	6818      	ldr	r0, [r3, #0]
 800942e:	f006 f8bf 	bl	800f5b0 <Hardware::Reboot()>
 8009432:	68c3      	ldr	r3, [r0, #12]
 8009434:	6083      	str	r3, [r0, #8]
 8009436:	6943      	ldr	r3, [r0, #20]
 8009438:	8483      	strh	r3, [r0, #36]	; 0x24
 800943a:	e7da      	b.n	80093f2 <HttpDaemon::HandlePost(bool)+0xde>
 800943c:	080123ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, sp}
 8009440:	08012366 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sp}
 8009444:	080123b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sp}
 8009448:	20009fa0 	andcs	r9, r0, r0, lsr #31
 800944c:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 8009450:	08012599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, sp}
 8009454:	080123e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sp}
 8009458:	200000c0 	andcs	r0, r0, r0, asr #1
 800945c:	080123de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sp}
 8009460:	2000a08c 	andcs	sl, r0, ip, lsl #1
 8009464:	20009f9c 	mulcs	r0, ip, pc	; <UNPREDICTABLE>
 8009468:	200000bc 	strhcs	r0, [r0], -ip
 800946c:	080123d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sp}
 8009470:	2000a090 	mulcs	r0, r0, r0

08009474 <HttpDaemon::Run()>:
 8009474:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009476:	4e46      	ldr	r6, [pc, #280]	; (8009590 <HttpDaemon::Run()+0x11c>)
 8009478:	4604      	mov	r4, r0
 800947a:	6901      	ldr	r1, [r0, #16]
 800947c:	f100 020c 	add.w	r2, r0, #12
 8009480:	6830      	ldr	r0, [r6, #0]
 8009482:	f003 fc16 	bl	800ccb2 <Network::TcpRead(int, unsigned char const**)>
 8009486:	6160      	str	r0, [r4, #20]
 8009488:	2800      	cmp	r0, #0
 800948a:	d05b      	beq.n	8009544 <HttpDaemon::Run()+0xd0>
 800948c:	69a3      	ldr	r3, [r4, #24]
 800948e:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8009492:	d159      	bne.n	8009548 <HttpDaemon::Run()+0xd4>
 8009494:	4620      	mov	r0, r4
 8009496:	f7ff fe1d 	bl	80090d4 <HttpDaemon::ParseRequest()>
 800949a:	28c8      	cmp	r0, #200	; 0xc8
 800949c:	61a0      	str	r0, [r4, #24]
 800949e:	d106      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 80094a0:	69e3      	ldr	r3, [r4, #28]
 80094a2:	2b00      	cmp	r3, #0
 80094a4:	d142      	bne.n	800952c <HttpDaemon::Run()+0xb8>
 80094a6:	4620      	mov	r0, r4
 80094a8:	f7ff fe8e 	bl	80091c8 <HttpDaemon::HandleGet()>
 80094ac:	61a0      	str	r0, [r4, #24]
 80094ae:	69a3      	ldr	r3, [r4, #24]
 80094b0:	2bc8      	cmp	r3, #200	; 0xc8
 80094b2:	d06b      	beq.n	800958c <HttpDaemon::Run()+0x118>
 80094b4:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 80094b8:	d05e      	beq.n	8009578 <HttpDaemon::Run()+0x104>
 80094ba:	dc4e      	bgt.n	800955a <HttpDaemon::Run()+0xe6>
 80094bc:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 80094c0:	d05c      	beq.n	800957c <HttpDaemon::Run()+0x108>
 80094c2:	f240 129d 	movw	r2, #413	; 0x19d
 80094c6:	4293      	cmp	r3, r2
 80094c8:	d05a      	beq.n	8009580 <HttpDaemon::Run()+0x10c>
 80094ca:	4d32      	ldr	r5, [pc, #200]	; (8009594 <HttpDaemon::Run()+0x120>)
 80094cc:	4a32      	ldr	r2, [pc, #200]	; (8009598 <HttpDaemon::Run()+0x124>)
 80094ce:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80094d2:	bf18      	it	ne
 80094d4:	4615      	movne	r5, r2
 80094d6:	4a31      	ldr	r2, [pc, #196]	; (800959c <HttpDaemon::Run()+0x128>)
 80094d8:	f240 519f 	movw	r1, #1439	; 0x59f
 80094dc:	6022      	str	r2, [r4, #0]
 80094de:	e9cd 5500 	strd	r5, r5, [sp]
 80094e2:	4a2f      	ldr	r2, [pc, #188]	; (80095a0 <HttpDaemon::Run()+0x12c>)
 80094e4:	482f      	ldr	r0, [pc, #188]	; (80095a4 <HttpDaemon::Run()+0x130>)
 80094e6:	f006 fb93 	bl	800fc10 <snprintf>
 80094ea:	8460      	strh	r0, [r4, #34]	; 0x22
 80094ec:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 80094ee:	f240 519f 	movw	r1, #1439	; 0x59f
 80094f2:	9303      	str	r3, [sp, #12]
 80094f4:	6823      	ldr	r3, [r4, #0]
 80094f6:	4a2c      	ldr	r2, [pc, #176]	; (80095a8 <HttpDaemon::Run()+0x134>)
 80094f8:	9302      	str	r3, [sp, #8]
 80094fa:	4b2c      	ldr	r3, [pc, #176]	; (80095ac <HttpDaemon::Run()+0x138>)
 80094fc:	68e0      	ldr	r0, [r4, #12]
 80094fe:	e9cd 5300 	strd	r5, r3, [sp]
 8009502:	69a3      	ldr	r3, [r4, #24]
 8009504:	f006 fb84 	bl	800fc10 <snprintf>
 8009508:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800950c:	b283      	uxth	r3, r0
 800950e:	6830      	ldr	r0, [r6, #0]
 8009510:	f003 fbd3 	bl	800ccba <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009514:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8009516:	4a23      	ldr	r2, [pc, #140]	; (80095a4 <HttpDaemon::Run()+0x130>)
 8009518:	6921      	ldr	r1, [r4, #16]
 800951a:	6830      	ldr	r0, [r6, #0]
 800951c:	f003 fbcd 	bl	800ccba <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009520:	f44f 7202 	mov.w	r2, #520	; 0x208
 8009524:	2302      	movs	r3, #2
 8009526:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800952a:	e00b      	b.n	8009544 <HttpDaemon::Run()+0xd0>
 800952c:	2b01      	cmp	r3, #1
 800952e:	d1be      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 8009530:	2100      	movs	r1, #0
 8009532:	4620      	mov	r0, r4
 8009534:	f7ff feee 	bl	8009314 <HttpDaemon::HandlePost(bool)>
 8009538:	28c8      	cmp	r0, #200	; 0xc8
 800953a:	61a0      	str	r0, [r4, #24]
 800953c:	d1b7      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 800953e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009540:	2b00      	cmp	r3, #0
 8009542:	d1b4      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 8009544:	b004      	add	sp, #16
 8009546:	bd70      	pop	{r4, r5, r6, pc}
 8009548:	2bc8      	cmp	r3, #200	; 0xc8
 800954a:	d1b0      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 800954c:	69e1      	ldr	r1, [r4, #28]
 800954e:	2901      	cmp	r1, #1
 8009550:	d1ad      	bne.n	80094ae <HttpDaemon::Run()+0x3a>
 8009552:	4620      	mov	r0, r4
 8009554:	f7ff fede 	bl	8009314 <HttpDaemon::HandlePost(bool)>
 8009558:	e7a8      	b.n	80094ac <HttpDaemon::Run()+0x38>
 800955a:	f240 12f5 	movw	r2, #501	; 0x1f5
 800955e:	4293      	cmp	r3, r2
 8009560:	d010      	beq.n	8009584 <HttpDaemon::Run()+0x110>
 8009562:	f240 12f9 	movw	r2, #505	; 0x1f9
 8009566:	4293      	cmp	r3, r2
 8009568:	d00e      	beq.n	8009588 <HttpDaemon::Run()+0x114>
 800956a:	4d11      	ldr	r5, [pc, #68]	; (80095b0 <HttpDaemon::Run()+0x13c>)
 800956c:	4a0a      	ldr	r2, [pc, #40]	; (8009598 <HttpDaemon::Run()+0x124>)
 800956e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8009572:	bf18      	it	ne
 8009574:	4615      	movne	r5, r2
 8009576:	e7ae      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 8009578:	4d0e      	ldr	r5, [pc, #56]	; (80095b4 <HttpDaemon::Run()+0x140>)
 800957a:	e7ac      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 800957c:	4d0e      	ldr	r5, [pc, #56]	; (80095b8 <HttpDaemon::Run()+0x144>)
 800957e:	e7aa      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 8009580:	4d0e      	ldr	r5, [pc, #56]	; (80095bc <HttpDaemon::Run()+0x148>)
 8009582:	e7a8      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 8009584:	4d0e      	ldr	r5, [pc, #56]	; (80095c0 <HttpDaemon::Run()+0x14c>)
 8009586:	e7a6      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 8009588:	4d0e      	ldr	r5, [pc, #56]	; (80095c4 <HttpDaemon::Run()+0x150>)
 800958a:	e7a4      	b.n	80094d6 <HttpDaemon::Run()+0x62>
 800958c:	4d0e      	ldr	r5, [pc, #56]	; (80095c8 <HttpDaemon::Run()+0x154>)
 800958e:	e7ad      	b.n	80094ec <HttpDaemon::Run()+0x78>
 8009590:	2000897c 	andcs	r8, r0, ip, ror r9
 8009594:	08012443 	stmdaeq	r1, {r0, r1, r6, sl, sp}
 8009598:	080124ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, sp}
 800959c:	08012599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, sp}
 80095a0:	080124db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, sp}
 80095a4:	200000c0 	andcs	r0, r0, r0, asr #1
 80095a8:	08012536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, sp}
 80095ac:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 80095b0:	08012487 	stmdaeq	r1, {r0, r1, r2, r7, sl, sp}
 80095b4:	08012472 	stmdaeq	r1, {r1, r4, r5, r6, sl, sp}
 80095b8:	0801244f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp}
 80095bc:	08012459 	stmdaeq	r1, {r0, r3, r4, r6, sl, sp}
 80095c0:	0801249d 	stmdaeq	r1, {r0, r2, r3, r4, r7, sl, sp}
 80095c4:	080124b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp}
 80095c8:	080124d8 	stmdaeq	r1, {r3, r4, r6, r7, sl, sp}

080095cc <remoteconfig::json_get_list(char*, unsigned short)>:
 80095cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095d0:	4b14      	ldr	r3, [pc, #80]	; (8009624 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 80095d2:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8009628 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 80095d6:	681b      	ldr	r3, [r3, #0]
 80095d8:	b088      	sub	sp, #32
 80095da:	4605      	mov	r5, r0
 80095dc:	f8d8 0000 	ldr.w	r0, [r8]
 80095e0:	695c      	ldr	r4, [r3, #20]
 80095e2:	460e      	mov	r6, r1
 80095e4:	f7ff f814 	bl	8008610 <RemoteConfig::GetStringNode() const>
 80095e8:	4607      	mov	r7, r0
 80095ea:	f8d8 0000 	ldr.w	r0, [r8]
 80095ee:	f7ff f81b 	bl	8008628 <RemoteConfig::GetStringOutput() const>
 80095f2:	4b0e      	ldr	r3, [pc, #56]	; (800962c <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 80095f4:	4631      	mov	r1, r6
 80095f6:	7a1a      	ldrb	r2, [r3, #8]
 80095f8:	3309      	adds	r3, #9
 80095fa:	9303      	str	r3, [sp, #12]
 80095fc:	0e23      	lsrs	r3, r4, #24
 80095fe:	9302      	str	r3, [sp, #8]
 8009600:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8009604:	9301      	str	r3, [sp, #4]
 8009606:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800960a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800960e:	9300      	str	r3, [sp, #0]
 8009610:	4628      	mov	r0, r5
 8009612:	4a07      	ldr	r2, [pc, #28]	; (8009630 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 8009614:	9704      	str	r7, [sp, #16]
 8009616:	b2e3      	uxtb	r3, r4
 8009618:	f006 fafa 	bl	800fc10 <snprintf>
 800961c:	b280      	uxth	r0, r0
 800961e:	b008      	add	sp, #32
 8009620:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009624:	2000897c 	andcs	r8, r0, ip, ror r9
 8009628:	200000bc 	strhcs	r0, [r0], -ip
 800962c:	20000098 	mulcs	r0, r8, r0
 8009630:	08012673 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, sp}

08009634 <remoteconfig::json_get_version(char*, unsigned short)>:
 8009634:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009636:	2208      	movs	r2, #8
 8009638:	4b09      	ldr	r3, [pc, #36]	; (8009660 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800963a:	9204      	str	r2, [sp, #16]
 800963c:	f1a3 020b 	sub.w	r2, r3, #11
 8009640:	9203      	str	r2, [sp, #12]
 8009642:	220b      	movs	r2, #11
 8009644:	9202      	str	r2, [sp, #8]
 8009646:	4a07      	ldr	r2, [pc, #28]	; (8009664 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 8009648:	9305      	str	r3, [sp, #20]
 800964a:	3b0e      	subs	r3, #14
 800964c:	9201      	str	r2, [sp, #4]
 800964e:	9300      	str	r3, [sp, #0]
 8009650:	4a05      	ldr	r2, [pc, #20]	; (8009668 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 8009652:	2303      	movs	r3, #3
 8009654:	f006 fadc 	bl	800fc10 <snprintf>
 8009658:	b280      	uxth	r0, r0
 800965a:	b007      	add	sp, #28
 800965c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009660:	2000a03e 	andcs	sl, r0, lr, lsr r0
 8009664:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 8009668:	080126d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sl, sp}

0800966c <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800966c:	b508      	push	{r3, lr}
 800966e:	4b05      	ldr	r3, [pc, #20]	; (8009684 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 8009670:	681a      	ldr	r2, [r3, #0]
 8009672:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009676:	fbb2 f3f3 	udiv	r3, r2, r3
 800967a:	4a03      	ldr	r2, [pc, #12]	; (8009688 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800967c:	f006 fac8 	bl	800fc10 <snprintf>
 8009680:	b280      	uxth	r0, r0
 8009682:	bd08      	pop	{r3, pc}
 8009684:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 8009688:	08012718 	stmdaeq	r1, {r3, r4, r8, r9, sl, sp}

0800968c <remoteconfig::json_get_display(char*, unsigned short)>:
 800968c:	b508      	push	{r3, lr}
 800968e:	4b05      	ldr	r3, [pc, #20]	; (80096a4 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 8009690:	4a05      	ldr	r2, [pc, #20]	; (80096a8 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 8009692:	681b      	ldr	r3, [r3, #0]
 8009694:	7c1b      	ldrb	r3, [r3, #16]
 8009696:	f083 0301 	eor.w	r3, r3, #1
 800969a:	f006 fab9 	bl	800fc10 <snprintf>
 800969e:	b280      	uxth	r0, r0
 80096a0:	bd08      	pop	{r3, pc}
 80096a2:	bf00      	nop
 80096a4:	20009fa0 	andcs	r9, r0, r0, lsr #31
 80096a8:	08012727 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, sp}

080096ac <remoteconfig::json_get_directory(char*, unsigned short)>:
 80096ac:	b508      	push	{r3, lr}
 80096ae:	4a02      	ldr	r2, [pc, #8]	; (80096b8 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 80096b0:	f006 faae 	bl	800fc10 <snprintf>
 80096b4:	b280      	uxth	r0, r0
 80096b6:	bd08      	pop	{r3, pc}
 80096b8:	08012736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, sp}

080096bc <get_file_content(char const*, char*)>:
 80096bc:	2300      	movs	r3, #0
 80096be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096c0:	4a10      	ldr	r2, [pc, #64]	; (8009704 <get_file_content(char const*, char*)+0x48>)
 80096c2:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80096c6:	1e46      	subs	r6, r0, #1
 80096c8:	3c01      	subs	r4, #1
 80096ca:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 80096ce:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80096d2:	42bd      	cmp	r5, r7
 80096d4:	d005      	beq.n	80096e2 <get_file_content(char const*, char*)+0x26>
 80096d6:	3301      	adds	r3, #1
 80096d8:	2b03      	cmp	r3, #3
 80096da:	d1f2      	bne.n	80096c2 <get_file_content(char const*, char*)+0x6>
 80096dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80096e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096e2:	2d00      	cmp	r5, #0
 80096e4:	d1f1      	bne.n	80096ca <get_file_content(char const*, char*)+0xe>
 80096e6:	4608      	mov	r0, r1
 80096e8:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80096ec:	6853      	ldr	r3, [r2, #4]
 80096ee:	3b01      	subs	r3, #1
 80096f0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80096f4:	f800 2b01 	strb.w	r2, [r0], #1
 80096f8:	2a00      	cmp	r2, #0
 80096fa:	d1f9      	bne.n	80096f0 <get_file_content(char const*, char*)+0x34>
 80096fc:	1a40      	subs	r0, r0, r1
 80096fe:	3801      	subs	r0, #1
 8009700:	e7ee      	b.n	80096e0 <get_file_content(char const*, char*)+0x24>
 8009702:	bf00      	nop
 8009704:	08012a78 	stmdaeq	r1, {r3, r4, r5, r6, r9, fp, sp}

08009708 <e131::universe_to_multicast_ip(unsigned short)>:
 8009708:	b513      	push	{r0, r1, r4, lr}
 800970a:	4604      	mov	r4, r0
 800970c:	a901      	add	r1, sp, #4
 800970e:	4806      	ldr	r0, [pc, #24]	; (8009728 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 8009710:	f005 ff92 	bl	800f638 <inet_aton>
 8009714:	9801      	ldr	r0, [sp, #4]
 8009716:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800971a:	0224      	lsls	r4, r4, #8
 800971c:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8009720:	4320      	orrs	r0, r4
 8009722:	b002      	add	sp, #8
 8009724:	bd10      	pop	{r4, pc}
 8009726:	bf00      	nop
 8009728:	08012fba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, fp, sp}

0800972c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800972c:	f240 6304 	movw	r3, #1540	; 0x604
 8009730:	fb03 0001 	mla	r0, r3, r1, r0
 8009734:	2300      	movs	r3, #0
 8009736:	b510      	push	{r4, lr}
 8009738:	4293      	cmp	r3, r2
 800973a:	d100      	bne.n	800973e <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800973c:	bd10      	pop	{r4, pc}
 800973e:	f810 4b01 	ldrb.w	r4, [r0], #1
 8009742:	3301      	adds	r3, #1
 8009744:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 8009748:	42a1      	cmp	r1, r4
 800974a:	bf38      	it	cc
 800974c:	4621      	movcc	r1, r4
 800974e:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 8009752:	e7f1      	b.n	8009738 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

08009754 <memset.constprop.0.isra.0>:
 8009754:	2300      	movs	r3, #0
 8009756:	4401      	add	r1, r0
 8009758:	4288      	cmp	r0, r1
 800975a:	d100      	bne.n	800975e <memset.constprop.0.isra.0+0xa>
 800975c:	4770      	bx	lr
 800975e:	f800 3b01 	strb.w	r3, [r0], #1
 8009762:	e7f9      	b.n	8009758 <memset.constprop.0.isra.0+0x4>

08009764 <memcpy.isra.0>:
 8009764:	3801      	subs	r0, #1
 8009766:	440a      	add	r2, r1
 8009768:	4291      	cmp	r1, r2
 800976a:	d100      	bne.n	800976e <memcpy.isra.0+0xa>
 800976c:	4770      	bx	lr
 800976e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009772:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009776:	e7f7      	b.n	8009768 <memcpy.isra.0+0x4>

08009778 <lightset::Data::Get()>:
 8009778:	4b03      	ldr	r3, [pc, #12]	; (8009788 <lightset::Data::Get()+0x10>)
 800977a:	4804      	ldr	r0, [pc, #16]	; (800978c <lightset::Data::Get()+0x14>)
 800977c:	681a      	ldr	r2, [r3, #0]
 800977e:	07d2      	lsls	r2, r2, #31
 8009780:	bf5c      	itt	pl
 8009782:	2201      	movpl	r2, #1
 8009784:	601a      	strpl	r2, [r3, #0]
 8009786:	4770      	bx	lr
 8009788:	20000660 	andcs	r0, r0, r0, ror #12
 800978c:	20000664 	andcs	r0, r0, r4, ror #12

08009790 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8009790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009794:	4615      	mov	r5, r2
 8009796:	460f      	mov	r7, r1
 8009798:	4604      	mov	r4, r0
 800979a:	f7ff ffed 	bl	8009778 <lightset::Data::Get()>
 800979e:	f240 6304 	movw	r3, #1540	; 0x604
 80097a2:	4606      	mov	r6, r0
 80097a4:	435c      	muls	r4, r3
 80097a6:	eb00 0804 	add.w	r8, r0, r4
 80097aa:	462a      	mov	r2, r5
 80097ac:	4639      	mov	r1, r7
 80097ae:	4640      	mov	r0, r8
 80097b0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80097b4:	f7ff ffd6 	bl	8009764 <memcpy.isra.0>
 80097b8:	462a      	mov	r2, r5
 80097ba:	4639      	mov	r1, r7
 80097bc:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 80097c0:	1930      	adds	r0, r6, r4
 80097c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80097c6:	f7ff bfcd 	b.w	8009764 <memcpy.isra.0>

080097ca <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80097ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80097ce:	4680      	mov	r8, r0
 80097d0:	f240 6404 	movw	r4, #1540	; 0x604
 80097d4:	4615      	mov	r5, r2
 80097d6:	460f      	mov	r7, r1
 80097d8:	4699      	mov	r9, r3
 80097da:	f7ff ffcd 	bl	8009778 <lightset::Data::Get()>
 80097de:	fb04 f408 	mul.w	r4, r4, r8
 80097e2:	eb00 0a04 	add.w	sl, r0, r4
 80097e6:	4606      	mov	r6, r0
 80097e8:	462a      	mov	r2, r5
 80097ea:	4639      	mov	r1, r7
 80097ec:	4650      	mov	r0, sl
 80097ee:	f7ff ffb9 	bl	8009764 <memcpy.isra.0>
 80097f2:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 80097f6:	f1b9 0f00 	cmp.w	r9, #0
 80097fa:	d106      	bne.n	800980a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 80097fc:	462a      	mov	r2, r5
 80097fe:	4641      	mov	r1, r8
 8009800:	4630      	mov	r0, r6
 8009802:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009806:	f7ff bf91 	b.w	800972c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800980a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800980e:	462a      	mov	r2, r5
 8009810:	4639      	mov	r1, r7
 8009812:	1930      	adds	r0, r6, r4
 8009814:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009818:	f7ff bfa4 	b.w	8009764 <memcpy.isra.0>

0800981c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800981c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009820:	4616      	mov	r6, r2
 8009822:	4699      	mov	r9, r3
 8009824:	4680      	mov	r8, r0
 8009826:	460f      	mov	r7, r1
 8009828:	f7ff ffa6 	bl	8009778 <lightset::Data::Get()>
 800982c:	f240 6404 	movw	r4, #1540	; 0x604
 8009830:	4605      	mov	r5, r0
 8009832:	fb04 f408 	mul.w	r4, r4, r8
 8009836:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800983a:	4632      	mov	r2, r6
 800983c:	4639      	mov	r1, r7
 800983e:	4428      	add	r0, r5
 8009840:	f7ff ff90 	bl	8009764 <memcpy.isra.0>
 8009844:	192b      	adds	r3, r5, r4
 8009846:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800984a:	f1b9 0f00 	cmp.w	r9, #0
 800984e:	d106      	bne.n	800985e <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009850:	4632      	mov	r2, r6
 8009852:	4641      	mov	r1, r8
 8009854:	4628      	mov	r0, r5
 8009856:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800985a:	f7ff bf67 	b.w	800972c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800985e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009862:	4632      	mov	r2, r6
 8009864:	4639      	mov	r1, r7
 8009866:	1928      	adds	r0, r5, r4
 8009868:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800986c:	f7ff bf7a 	b.w	8009764 <memcpy.isra.0>

08009870 <E131Bridge::E131Bridge()>:
 8009870:	2300      	movs	r3, #0
 8009872:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009876:	b530      	push	{r4, r5, lr}
 8009878:	e9c0 2300 	strd	r2, r3, [r0]
 800987c:	2201      	movs	r2, #1
 800987e:	4604      	mov	r4, r0
 8009880:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009884:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009888:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800988c:	6743      	str	r3, [r0, #116]	; 0x74
 800988e:	4b22      	ldr	r3, [pc, #136]	; (8009918 <E131Bridge::E131Bridge()+0xa8>)
 8009890:	b093      	sub	sp, #76	; 0x4c
 8009892:	6018      	str	r0, [r3, #0]
 8009894:	7202      	strb	r2, [r0, #8]
 8009896:	2144      	movs	r1, #68	; 0x44
 8009898:	f200 5014 	addw	r0, r0, #1300	; 0x514
 800989c:	f7ff ff5a 	bl	8009754 <memset.constprop.0.isra.0>
 80098a0:	210c      	movs	r1, #12
 80098a2:	f504 60ab 	add.w	r0, r4, #1368	; 0x558
 80098a6:	f7ff ff55 	bl	8009754 <memset.constprop.0.isra.0>
 80098aa:	2364      	movs	r3, #100	; 0x64
 80098ac:	4d1b      	ldr	r5, [pc, #108]	; (800991c <E131Bridge::E131Bridge()+0xac>)
 80098ae:	2120      	movs	r1, #32
 80098b0:	f884 3561 	strb.w	r3, [r4, #1377]	; 0x561
 80098b4:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 80098b8:	f7ff ff4c 	bl	8009754 <memset.constprop.0.isra.0>
 80098bc:	682b      	ldr	r3, [r5, #0]
 80098be:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 80098c2:	4a17      	ldr	r2, [pc, #92]	; (8009920 <E131Bridge::E131Bridge()+0xb0>)
 80098c4:	2140      	movs	r1, #64	; 0x40
 80098c6:	9200      	str	r2, [sp, #0]
 80098c8:	3320      	adds	r3, #32
 80098ca:	4a16      	ldr	r2, [pc, #88]	; (8009924 <E131Bridge::E131Bridge()+0xb4>)
 80098cc:	a802      	add	r0, sp, #8
 80098ce:	f006 f99f 	bl	800fc10 <snprintf>
 80098d2:	233f      	movs	r3, #63	; 0x3f
 80098d4:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80098d8:	a902      	add	r1, sp, #8
 80098da:	f811 0b01 	ldrb.w	r0, [r1], #1
 80098de:	b928      	cbnz	r0, 80098ec <E131Bridge::E131Bridge()+0x7c>
 80098e0:	4413      	add	r3, r2
 80098e2:	429a      	cmp	r2, r3
 80098e4:	d006      	beq.n	80098f4 <E131Bridge::E131Bridge()+0x84>
 80098e6:	f802 0b01 	strb.w	r0, [r2], #1
 80098ea:	e7fa      	b.n	80098e2 <E131Bridge::E131Bridge()+0x72>
 80098ec:	3b01      	subs	r3, #1
 80098ee:	f802 0b01 	strb.w	r0, [r2], #1
 80098f2:	d1f2      	bne.n	80098da <E131Bridge::E131Bridge()+0x6a>
 80098f4:	2300      	movs	r3, #0
 80098f6:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 80098fa:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 80098fe:	6828      	ldr	r0, [r5, #0]
 8009900:	f002 fff7 	bl	800c8f2 <Network::Begin(unsigned short)>
 8009904:	4621      	mov	r1, r4
 8009906:	4b08      	ldr	r3, [pc, #32]	; (8009928 <E131Bridge::E131Bridge()+0xb8>)
 8009908:	f841 0b24 	str.w	r0, [r1], #36
 800990c:	6818      	ldr	r0, [r3, #0]
 800990e:	f005 fe33 	bl	800f578 <Hardware::GetUuid(unsigned char*)>
 8009912:	4620      	mov	r0, r4
 8009914:	b013      	add	sp, #76	; 0x4c
 8009916:	bd30      	pop	{r4, r5, pc}
 8009918:	20000c68 	andcs	r0, r0, r8, ror #24
 800991c:	2000897c 	andcs	r8, r0, ip, ror r9
 8009920:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 8009924:	08012fc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, fp, sp}
 8009928:	2000a090 	mulcs	r0, r0, r0

0800992c <E131Bridge::Start()>:
 800992c:	6943      	ldr	r3, [r0, #20]
 800992e:	b513      	push	{r0, r1, r4, lr}
 8009930:	4604      	mov	r4, r0
 8009932:	b31b      	cbz	r3, 800997c <E131Bridge::Start()+0x50>
 8009934:	6983      	ldr	r3, [r0, #24]
 8009936:	b9cb      	cbnz	r3, 800996c <E131Bridge::Start()+0x40>
 8009938:	a901      	add	r1, sp, #4
 800993a:	4814      	ldr	r0, [pc, #80]	; (800998c <E131Bridge::Start()+0x60>)
 800993c:	f005 fe7c 	bl	800f638 <inet_aton>
 8009940:	9b01      	ldr	r3, [sp, #4]
 8009942:	f240 207e 	movw	r0, #638	; 0x27e
 8009946:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800994a:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800994e:	6223      	str	r3, [r4, #32]
 8009950:	f005 fe6e 	bl	800f630 <operator new(unsigned int)>
 8009954:	61a0      	str	r0, [r4, #24]
 8009956:	4620      	mov	r0, r4
 8009958:	f000 fca2 	bl	800a2a0 <E131Bridge::FillDataPacket()>
 800995c:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009960:	f005 fe66 	bl	800f630 <operator new(unsigned int)>
 8009964:	61e0      	str	r0, [r4, #28]
 8009966:	4620      	mov	r0, r4
 8009968:	f000 fbfa 	bl	800a160 <E131Bridge::FillDiscoveryPacket()>
 800996c:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 8009970:	b123      	cbz	r3, 800997c <E131Bridge::Start()+0x50>
 8009972:	6960      	ldr	r0, [r4, #20]
 8009974:	2100      	movs	r1, #0
 8009976:	6803      	ldr	r3, [r0, #0]
 8009978:	689b      	ldr	r3, [r3, #8]
 800997a:	4798      	blx	r3
 800997c:	2102      	movs	r1, #2
 800997e:	4b04      	ldr	r3, [pc, #16]	; (8009990 <E131Bridge::Start()+0x64>)
 8009980:	6818      	ldr	r0, [r3, #0]
 8009982:	b002      	add	sp, #8
 8009984:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009988:	f005 bd72 	b.w	800f470 <LedBlink::SetMode(ledblink::Mode)>
 800998c:	08012fba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, fp, sp}
 8009990:	2000a08c 	andcs	sl, r0, ip, lsl #1

08009994 <E131Bridge::Stop()>:
 8009994:	2301      	movs	r3, #1
 8009996:	b510      	push	{r4, lr}
 8009998:	4604      	mov	r4, r0
 800999a:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800999e:	6840      	ldr	r0, [r0, #4]
 80099a0:	b118      	cbz	r0, 80099aa <E131Bridge::Stop()+0x16>
 80099a2:	6803      	ldr	r3, [r0, #0]
 80099a4:	2100      	movs	r1, #0
 80099a6:	68db      	ldr	r3, [r3, #12]
 80099a8:	4798      	blx	r3
 80099aa:	f7ff fee5 	bl	8009778 <lightset::Data::Get()>
 80099ae:	2100      	movs	r1, #0
 80099b0:	f8c0 1600 	str.w	r1, [r0, #1536]	; 0x600
 80099b4:	6960      	ldr	r0, [r4, #20]
 80099b6:	f884 1554 	strb.w	r1, [r4, #1364]	; 0x554
 80099ba:	b930      	cbnz	r0, 80099ca <E131Bridge::Stop()+0x36>
 80099bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80099c0:	4b06      	ldr	r3, [pc, #24]	; (80099dc <E131Bridge::Stop()+0x48>)
 80099c2:	2100      	movs	r1, #0
 80099c4:	6818      	ldr	r0, [r3, #0]
 80099c6:	f005 bd53 	b.w	800f470 <LedBlink::SetMode(ledblink::Mode)>
 80099ca:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 80099ce:	2b00      	cmp	r3, #0
 80099d0:	d0f4      	beq.n	80099bc <E131Bridge::Stop()+0x28>
 80099d2:	6803      	ldr	r3, [r0, #0]
 80099d4:	68db      	ldr	r3, [r3, #12]
 80099d6:	4798      	blx	r3
 80099d8:	e7f0      	b.n	80099bc <E131Bridge::Stop()+0x28>
 80099da:	bf00      	nop
 80099dc:	2000a08c 	andcs	sl, r0, ip, lsl #1

080099e0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 80099e0:	b538      	push	{r3, r4, r5, lr}
 80099e2:	4603      	mov	r3, r0
 80099e4:	4610      	mov	r0, r2
 80099e6:	b119      	cbz	r1, 80099f0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x10>
 80099e8:	f8b3 2514 	ldrh.w	r2, [r3, #1300]	; 0x514
 80099ec:	4282      	cmp	r2, r0
 80099ee:	d00b      	beq.n	8009a08 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x28>
 80099f0:	681d      	ldr	r5, [r3, #0]
 80099f2:	4b06      	ldr	r3, [pc, #24]	; (8009a0c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x2c>)
 80099f4:	681c      	ldr	r4, [r3, #0]
 80099f6:	f7ff fe87 	bl	8009708 <e131::universe_to_multicast_ip(unsigned short)>
 80099fa:	4629      	mov	r1, r5
 80099fc:	4602      	mov	r2, r0
 80099fe:	4620      	mov	r0, r4
 8009a00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009a04:	f002 bf89 	b.w	800c91a <Network::LeaveGroup(int, unsigned int)>
 8009a08:	bd38      	pop	{r3, r4, r5, pc}
 8009a0a:	bf00      	nop
 8009a0c:	2000897c 	andcs	r8, r0, ip, ror r9

08009a10 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8009a10:	b570      	push	{r4, r5, r6, lr}
 8009a12:	4604      	mov	r4, r0
 8009a14:	461d      	mov	r5, r3
 8009a16:	b1c1      	cbz	r1, 8009a4a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 8009a18:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009a1c:	f200 5606 	addw	r6, r0, #1286	; 0x506
 8009a20:	b12a      	cbz	r2, 8009a2e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 8009a22:	42aa      	cmp	r2, r5
 8009a24:	d017      	beq.n	8009a56 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009a26:	2101      	movs	r1, #1
 8009a28:	4620      	mov	r0, r4
 8009a2a:	f7ff ffd9 	bl	80099e0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009a2e:	4b0a      	ldr	r3, [pc, #40]	; (8009a58 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 8009a30:	8035      	strh	r5, [r6, #0]
 8009a32:	4628      	mov	r0, r5
 8009a34:	6826      	ldr	r6, [r4, #0]
 8009a36:	681c      	ldr	r4, [r3, #0]
 8009a38:	f7ff fe66 	bl	8009708 <e131::universe_to_multicast_ip(unsigned short)>
 8009a3c:	4631      	mov	r1, r6
 8009a3e:	4602      	mov	r2, r0
 8009a40:	4620      	mov	r0, r4
 8009a42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a46:	f002 bf65 	b.w	800c914 <Network::JoinGroup(int, unsigned int)>
 8009a4a:	b122      	cbz	r2, 8009a56 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009a4c:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009a50:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009a54:	e7e4      	b.n	8009a20 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009a56:	bd70      	pop	{r4, r5, r6, pc}
 8009a58:	2000897c 	andcs	r8, r0, ip, ror r9

08009a5c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8009a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a60:	4604      	mov	r4, r0
 8009a62:	460d      	mov	r5, r1
 8009a64:	461e      	mov	r6, r3
 8009a66:	b9ca      	cbnz	r2, 8009a9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x40>
 8009a68:	bbb1      	cbnz	r1, 8009ad8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8009a6a:	f890 355a 	ldrb.w	r3, [r0, #1370]	; 0x55a
 8009a6e:	b12b      	cbz	r3, 8009a7c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20>
 8009a70:	f8b0 3558 	ldrh.w	r3, [r0, #1368]	; 0x558
 8009a74:	42b3      	cmp	r3, r6
 8009a76:	d109      	bne.n	8009a8c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x30>
 8009a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a7c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8009a80:	3301      	adds	r3, #1
 8009a82:	f880 350a 	strb.w	r3, [r0, #1290]	; 0x50a
 8009a86:	2301      	movs	r3, #1
 8009a88:	f880 355a 	strb.w	r3, [r0, #1370]	; 0x55a
 8009a8c:	4630      	mov	r0, r6
 8009a8e:	f8a4 6558 	strh.w	r6, [r4, #1368]	; 0x558
 8009a92:	f7ff fe39 	bl	8009708 <e131::universe_to_multicast_ip(unsigned short)>
 8009a96:	f8c4 055c 	str.w	r0, [r4, #1372]	; 0x55c
 8009a9a:	e7ed      	b.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009a9c:	2a02      	cmp	r2, #2
 8009a9e:	d11b      	bne.n	8009ad8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8009aa0:	2900      	cmp	r1, #0
 8009aa2:	d1e9      	bne.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009aa4:	f890 3516 	ldrb.w	r3, [r0, #1302]	; 0x516
 8009aa8:	b14b      	cbz	r3, 8009abe <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x62>
 8009aaa:	f884 1516 	strb.w	r1, [r4, #1302]	; 0x516
 8009aae:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009ab2:	4632      	mov	r2, r6
 8009ab4:	3b01      	subs	r3, #1
 8009ab6:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009aba:	f7ff ff91 	bl	80099e0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009abe:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 8009ac2:	2b00      	cmp	r3, #0
 8009ac4:	d0d8      	beq.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009ac6:	2300      	movs	r3, #0
 8009ac8:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
 8009acc:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009ad0:	3b01      	subs	r3, #1
 8009ad2:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009ad6:	e7cf      	b.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009ad8:	2344      	movs	r3, #68	; 0x44
 8009ada:	fb03 4305 	mla	r3, r3, r5, r4
 8009ade:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 8009ae2:	b1d2      	cbz	r2, 8009b1a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xbe>
 8009ae4:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 8009ae8:	42b3      	cmp	r3, r6
 8009aea:	d0c5      	beq.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009aec:	4632      	mov	r2, r6
 8009aee:	4629      	mov	r1, r5
 8009af0:	4620      	mov	r0, r4
 8009af2:	f7ff ff75 	bl	80099e0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009af6:	4b0d      	ldr	r3, [pc, #52]	; (8009b2c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd0>)
 8009af8:	4630      	mov	r0, r6
 8009afa:	681f      	ldr	r7, [r3, #0]
 8009afc:	f8d4 8000 	ldr.w	r8, [r4]
 8009b00:	f7ff fe02 	bl	8009708 <e131::universe_to_multicast_ip(unsigned short)>
 8009b04:	4641      	mov	r1, r8
 8009b06:	4602      	mov	r2, r0
 8009b08:	4638      	mov	r0, r7
 8009b0a:	f002 ff03 	bl	800c914 <Network::JoinGroup(int, unsigned int)>
 8009b0e:	2344      	movs	r3, #68	; 0x44
 8009b10:	fb03 4505 	mla	r5, r3, r5, r4
 8009b14:	f8a5 6514 	strh.w	r6, [r5, #1300]	; 0x514
 8009b18:	e7ae      	b.n	8009a78 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009b1a:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009b1e:	3201      	adds	r2, #1
 8009b20:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009b24:	2201      	movs	r2, #1
 8009b26:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 8009b2a:	e7e4      	b.n	8009af6 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9a>
 8009b2c:	2000897c 	andcs	r8, r0, ip, ror r9

08009b30 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009b30:	b510      	push	{r4, lr}
 8009b32:	4604      	mov	r4, r0
 8009b34:	4618      	mov	r0, r3
 8009b36:	b933      	cbnz	r3, 8009b46 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x16>
 8009b38:	b921      	cbnz	r1, 8009b44 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>
 8009b3a:	f8b4 3558 	ldrh.w	r3, [r4, #1368]	; 0x558
 8009b3e:	f894 055a 	ldrb.w	r0, [r4, #1370]	; 0x55a
 8009b42:	8013      	strh	r3, [r2, #0]
 8009b44:	bd10      	pop	{r4, pc}
 8009b46:	2344      	movs	r3, #68	; 0x44
 8009b48:	fb03 4401 	mla	r4, r3, r1, r4
 8009b4c:	f8b4 3514 	ldrh.w	r3, [r4, #1300]	; 0x514
 8009b50:	f894 0516 	ldrb.w	r0, [r4, #1302]	; 0x516
 8009b54:	8013      	strh	r3, [r2, #0]
 8009b56:	e7f5      	b.n	8009b44 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>

08009b58 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009b58:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009b5c:	b923      	cbnz	r3, 8009b68 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009b5e:	2301      	movs	r3, #1
 8009b60:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009b64:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009b68:	2344      	movs	r3, #68	; 0x44
 8009b6a:	fb03 0001 	mla	r0, r3, r1, r0
 8009b6e:	2301      	movs	r3, #1
 8009b70:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 8009b74:	4770      	bx	lr

08009b76 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009b76:	4602      	mov	r2, r0
 8009b78:	2044      	movs	r0, #68	; 0x44
 8009b7a:	4348      	muls	r0, r1
 8009b7c:	b570      	push	{r4, r5, r6, lr}
 8009b7e:	1815      	adds	r5, r2, r0
 8009b80:	460c      	mov	r4, r1
 8009b82:	68d3      	ldr	r3, [r2, #12]
 8009b84:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 8009b88:	1a5b      	subs	r3, r3, r1
 8009b8a:	f242 7110 	movw	r1, #10000	; 0x2710
 8009b8e:	428b      	cmp	r3, r1
 8009b90:	d90a      	bls.n	8009ba8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009b92:	2600      	movs	r6, #0
 8009b94:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 8009b98:	2110      	movs	r1, #16
 8009b9a:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 8009b9e:	4410      	add	r0, r2
 8009ba0:	f7ff fdd8 	bl	8009754 <memset.constprop.0.isra.0>
 8009ba4:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 8009ba8:	2344      	movs	r3, #68	; 0x44
 8009baa:	435c      	muls	r4, r3
 8009bac:	1915      	adds	r5, r2, r4
 8009bae:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 8009bb2:	68d3      	ldr	r3, [r2, #12]
 8009bb4:	1a5b      	subs	r3, r3, r1
 8009bb6:	f242 7110 	movw	r1, #10000	; 0x2710
 8009bba:	428b      	cmp	r3, r1
 8009bbc:	d90a      	bls.n	8009bd4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8009bbe:	2600      	movs	r6, #0
 8009bc0:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 8009bc4:	2110      	movs	r1, #16
 8009bc6:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 8009bca:	1910      	adds	r0, r2, r4
 8009bcc:	f7ff fdc2 	bl	8009754 <memset.constprop.0.isra.0>
 8009bd0:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 8009bd4:	f892 3555 	ldrb.w	r3, [r2, #1365]	; 0x555
 8009bd8:	b923      	cbnz	r3, 8009be4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x6e>
 8009bda:	2101      	movs	r1, #1
 8009bdc:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8009be0:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8009be4:	bd70      	pop	{r4, r5, r6, pc}

08009be6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8009be6:	2244      	movs	r2, #68	; 0x44
 8009be8:	fb02 0101 	mla	r1, r2, r1, r0
 8009bec:	68c3      	ldr	r3, [r0, #12]
 8009bee:	b510      	push	{r4, lr}
 8009bf0:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 8009bf4:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 8009bf8:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 8009bfc:	1a9a      	subs	r2, r3, r2
 8009bfe:	b184      	cbz	r4, 8009c22 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8009c00:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 8009c04:	1a5b      	subs	r3, r3, r1
 8009c06:	b128      	cbz	r0, 8009c14 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8009c08:	f242 700f 	movw	r0, #9999	; 0x270f
 8009c0c:	4283      	cmp	r3, r0
 8009c0e:	d90d      	bls.n	8009c2c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8009c10:	4282      	cmp	r2, r0
 8009c12:	e002      	b.n	8009c1a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8009c14:	f242 7010 	movw	r0, #10000	; 0x2710
 8009c18:	4283      	cmp	r3, r0
 8009c1a:	bf94      	ite	ls
 8009c1c:	2000      	movls	r0, #0
 8009c1e:	2001      	movhi	r0, #1
 8009c20:	bd10      	pop	{r4, pc}
 8009c22:	2800      	cmp	r0, #0
 8009c24:	d0fc      	beq.n	8009c20 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8009c26:	f242 7010 	movw	r0, #10000	; 0x2710
 8009c2a:	e7f1      	b.n	8009c10 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8009c2c:	2000      	movs	r0, #0
 8009c2e:	e7f7      	b.n	8009c20 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08009c30 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8009c30:	684a      	ldr	r2, [r1, #4]
 8009c32:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009c34:	b510      	push	{r4, lr}
 8009c36:	429a      	cmp	r2, r3
 8009c38:	d10d      	bne.n	8009c56 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8009c3a:	f100 0391 	add.w	r3, r0, #145	; 0x91
 8009c3e:	3107      	adds	r1, #7
 8009c40:	30a1      	adds	r0, #161	; 0xa1
 8009c42:	4283      	cmp	r3, r0
 8009c44:	d101      	bne.n	8009c4a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 8009c46:	2001      	movs	r0, #1
 8009c48:	bd10      	pop	{r4, pc}
 8009c4a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009c4e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009c52:	4294      	cmp	r4, r2
 8009c54:	d0f5      	beq.n	8009c42 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8009c56:	2000      	movs	r0, #0
 8009c58:	e7f6      	b.n	8009c48 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

08009c5c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8009c5c:	b538      	push	{r3, r4, r5, lr}
 8009c5e:	4604      	mov	r4, r0
 8009c60:	2001      	movs	r0, #1
 8009c62:	460d      	mov	r5, r1
 8009c64:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8009c68:	f884 04f8 	strb.w	r0, [r4, #1272]	; 0x4f8
 8009c6c:	2900      	cmp	r1, #0
 8009c6e:	d052      	beq.n	8009d16 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009c70:	2a00      	cmp	r2, #0
 8009c72:	d037      	beq.n	8009ce4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x88>
 8009c74:	f8c4 04f4 	str.w	r0, [r4, #1268]	; 0x4f4
 8009c78:	f884 050c 	strb.w	r0, [r4, #1292]	; 0x50c
 8009c7c:	b1e3      	cbz	r3, 8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009c7e:	2500      	movs	r5, #0
 8009c80:	2110      	movs	r1, #16
 8009c82:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009c86:	f8c4 551c 	str.w	r5, [r4, #1308]	; 0x51c
 8009c8a:	f7ff fd63 	bl	8009754 <memset.constprop.0.isra.0>
 8009c8e:	2110      	movs	r1, #16
 8009c90:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009c94:	f8c4 5538 	str.w	r5, [r4, #1336]	; 0x538
 8009c98:	f7ff fd5c 	bl	8009754 <memset.constprop.0.isra.0>
 8009c9c:	f7ff fd6c 	bl	8009778 <lightset::Data::Get()>
 8009ca0:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8009ca4:	f8a4 5554 	strh.w	r5, [r4, #1364]	; 0x554
 8009ca8:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 8009cac:	f884 5556 	strb.w	r5, [r4, #1366]	; 0x556
 8009cb0:	2901      	cmp	r1, #1
 8009cb2:	d00d      	beq.n	8009cd0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 8009cb4:	2902      	cmp	r1, #2
 8009cb6:	d010      	beq.n	8009cda <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x7e>
 8009cb8:	4b20      	ldr	r3, [pc, #128]	; (8009d3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xe0>)
 8009cba:	2102      	movs	r1, #2
 8009cbc:	6818      	ldr	r0, [r3, #0]
 8009cbe:	f005 fbd7 	bl	800f470 <LedBlink::SetMode(ledblink::Mode)>
 8009cc2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009cc6:	f023 0302 	bic.w	r3, r3, #2
 8009cca:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8009cce:	bd38      	pop	{r3, r4, r5, pc}
 8009cd0:	6860      	ldr	r0, [r4, #4]
 8009cd2:	6803      	ldr	r3, [r0, #0]
 8009cd4:	695b      	ldr	r3, [r3, #20]
 8009cd6:	4798      	blx	r3
 8009cd8:	e7ee      	b.n	8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009cda:	6860      	ldr	r0, [r4, #4]
 8009cdc:	6803      	ldr	r3, [r0, #0]
 8009cde:	699b      	ldr	r3, [r3, #24]
 8009ce0:	4798      	blx	r3
 8009ce2:	e7e9      	b.n	8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009ce4:	2b00      	cmp	r3, #0
 8009ce6:	d0e7      	beq.n	8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009ce8:	f8d4 351c 	ldr.w	r3, [r4, #1308]	; 0x51c
 8009cec:	b143      	cbz	r3, 8009d00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009cee:	2110      	movs	r1, #16
 8009cf0:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009cf4:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009cf8:	f7ff fd2c 	bl	8009754 <memset.constprop.0.isra.0>
 8009cfc:	f884 2555 	strb.w	r2, [r4, #1365]	; 0x555
 8009d00:	f894 54f5 	ldrb.w	r5, [r4, #1269]	; 0x4f5
 8009d04:	2d00      	cmp	r5, #0
 8009d06:	d1d7      	bne.n	8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009d08:	f7ff fd36 	bl	8009778 <lightset::Data::Get()>
 8009d0c:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8009d10:	f884 5554 	strb.w	r5, [r4, #1364]	; 0x554
 8009d14:	e7c8      	b.n	8009ca8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4c>
 8009d16:	2b00      	cmp	r3, #0
 8009d18:	d0ce      	beq.n	8009cb8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009d1a:	2a00      	cmp	r2, #0
 8009d1c:	d0f0      	beq.n	8009d00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009d1e:	f8d4 3538 	ldr.w	r3, [r4, #1336]	; 0x538
 8009d22:	2b00      	cmp	r3, #0
 8009d24:	d0ec      	beq.n	8009d00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009d26:	2110      	movs	r1, #16
 8009d28:	f8c4 5538 	str.w	r5, [r4, #1336]	; 0x538
 8009d2c:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009d30:	f7ff fd10 	bl	8009754 <memset.constprop.0.isra.0>
 8009d34:	f884 5555 	strb.w	r5, [r4, #1365]	; 0x555
 8009d38:	e7e2      	b.n	8009d00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009d3a:	bf00      	nop
 8009d3c:	2000a08c 	andcs	sl, r0, ip, lsl #1

08009d40 <E131Bridge::HandleDmx()>:
 8009d40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d44:	f8b0 50f7 	ldrh.w	r5, [r0, #247]	; 0xf7
 8009d48:	f890 3516 	ldrb.w	r3, [r0, #1302]	; 0x516
 8009d4c:	ba6d      	rev16	r5, r5
 8009d4e:	b2ad      	uxth	r5, r5
 8009d50:	4604      	mov	r4, r0
 8009d52:	f100 08fa 	add.w	r8, r0, #250	; 0xfa
 8009d56:	3d01      	subs	r5, #1
 8009d58:	b343      	cbz	r3, 8009dac <E131Bridge::HandleDmx()+0x6c>
 8009d5a:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 8009d5e:	f8b0 20ed 	ldrh.w	r2, [r0, #237]	; 0xed
 8009d62:	ba5b      	rev16	r3, r3
 8009d64:	b29b      	uxth	r3, r3
 8009d66:	429a      	cmp	r2, r3
 8009d68:	d120      	bne.n	8009dac <E131Bridge::HandleDmx()+0x6c>
 8009d6a:	f500 61a3 	add.w	r1, r0, #1304	; 0x518
 8009d6e:	f8d0 a51c 	ldr.w	sl, [r0, #1308]	; 0x51c
 8009d72:	f8d0 9538 	ldr.w	r9, [r0, #1336]	; 0x538
 8009d76:	f7ff ff5b 	bl	8009c30 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d7a:	f204 5134 	addw	r1, r4, #1332	; 0x534
 8009d7e:	4607      	mov	r7, r0
 8009d80:	4620      	mov	r0, r4
 8009d82:	f7ff ff55 	bl	8009c30 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d86:	4606      	mov	r6, r0
 8009d88:	b197      	cbz	r7, 8009db0 <E131Bridge::HandleDmx()+0x70>
 8009d8a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009d8e:	f894 2530 	ldrb.w	r2, [r4, #1328]	; 0x530
 8009d92:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009d96:	3313      	adds	r3, #19
 8009d98:	1a9b      	subs	r3, r3, r2
 8009d9a:	b2db      	uxtb	r3, r3
 8009d9c:	2b13      	cmp	r3, #19
 8009d9e:	d905      	bls.n	8009dac <E131Bridge::HandleDmx()+0x6c>
 8009da0:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8009da4:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009da8:	2a00      	cmp	r2, #0
 8009daa:	da0a      	bge.n	8009dc2 <E131Bridge::HandleDmx()+0x82>
 8009dac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009db0:	2800      	cmp	r0, #0
 8009db2:	d0f5      	beq.n	8009da0 <E131Bridge::HandleDmx()+0x60>
 8009db4:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009db8:	f894 254c 	ldrb.w	r2, [r4, #1356]	; 0x54c
 8009dbc:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009dc0:	e7e9      	b.n	8009d96 <E131Bridge::HandleDmx()+0x56>
 8009dc2:	065a      	lsls	r2, r3, #25
 8009dc4:	d509      	bpl.n	8009dda <E131Bridge::HandleDmx()+0x9a>
 8009dc6:	b90f      	cbnz	r7, 8009dcc <E131Bridge::HandleDmx()+0x8c>
 8009dc8:	2e00      	cmp	r6, #0
 8009dca:	d0ef      	beq.n	8009dac <E131Bridge::HandleDmx()+0x6c>
 8009dcc:	4632      	mov	r2, r6
 8009dce:	4639      	mov	r1, r7
 8009dd0:	4620      	mov	r0, r4
 8009dd2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dd6:	f7ff bf41 	b.w	8009c5c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8009dda:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8009dde:	b12b      	cbz	r3, 8009dec <E131Bridge::HandleDmx()+0xac>
 8009de0:	f894 14f9 	ldrb.w	r1, [r4, #1273]	; 0x4f9
 8009de4:	b911      	cbnz	r1, 8009dec <E131Bridge::HandleDmx()+0xac>
 8009de6:	4620      	mov	r0, r4
 8009de8:	f7ff fec5 	bl	8009b76 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 8009dec:	f894 b0e8 	ldrb.w	fp, [r4, #232]	; 0xe8
 8009df0:	f894 350c 	ldrb.w	r3, [r4, #1292]	; 0x50c
 8009df4:	459b      	cmp	fp, r3
 8009df6:	d258      	bcs.n	8009eaa <E131Bridge::HandleDmx()+0x16a>
 8009df8:	2100      	movs	r1, #0
 8009dfa:	4620      	mov	r0, r4
 8009dfc:	f7ff fef3 	bl	8009be6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 8009e00:	2800      	cmp	r0, #0
 8009e02:	d0d3      	beq.n	8009dac <E131Bridge::HandleDmx()+0x6c>
 8009e04:	f884 b50c 	strb.w	fp, [r4, #1292]	; 0x50c
 8009e08:	f1ba 0f00 	cmp.w	sl, #0
 8009e0c:	d156      	bne.n	8009ebc <E131Bridge::HandleDmx()+0x17c>
 8009e0e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009e12:	f1b9 0f00 	cmp.w	r9, #0
 8009e16:	d15c      	bne.n	8009ed2 <E131Bridge::HandleDmx()+0x192>
 8009e18:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8009e1a:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009e1e:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009e22:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009e26:	2210      	movs	r2, #16
 8009e28:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009e2c:	f7ff fc9a 	bl	8009764 <memcpy.isra.0>
 8009e30:	68e3      	ldr	r3, [r4, #12]
 8009e32:	462a      	mov	r2, r5
 8009e34:	4641      	mov	r1, r8
 8009e36:	4648      	mov	r0, r9
 8009e38:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8009e3c:	f7ff fca8 	bl	8009790 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 8009e40:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009e44:	069b      	lsls	r3, r3, #26
 8009e46:	f100 80a2 	bmi.w	8009f8e <E131Bridge::HandleDmx()+0x24e>
 8009e4a:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8009e4e:	b29a      	uxth	r2, r3
 8009e50:	2a00      	cmp	r2, #0
 8009e52:	f000 809f 	beq.w	8009f94 <E131Bridge::HandleDmx()+0x254>
 8009e56:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 8009e5a:	2a00      	cmp	r2, #0
 8009e5c:	f040 809a 	bne.w	8009f94 <E131Bridge::HandleDmx()+0x254>
 8009e60:	ba5b      	rev16	r3, r3
 8009e62:	b29b      	uxth	r3, r3
 8009e64:	2f00      	cmp	r7, #0
 8009e66:	f040 808f 	bne.w	8009f88 <E131Bridge::HandleDmx()+0x248>
 8009e6a:	2e00      	cmp	r6, #0
 8009e6c:	f040 808c 	bne.w	8009f88 <E131Bridge::HandleDmx()+0x248>
 8009e70:	f8d4 2538 	ldr.w	r2, [r4, #1336]	; 0x538
 8009e74:	f8d4 151c 	ldr.w	r1, [r4, #1308]	; 0x51c
 8009e78:	3a00      	subs	r2, #0
 8009e7a:	bf18      	it	ne
 8009e7c:	2201      	movne	r2, #1
 8009e7e:	3900      	subs	r1, #0
 8009e80:	bf18      	it	ne
 8009e82:	2101      	movne	r1, #1
 8009e84:	4620      	mov	r0, r4
 8009e86:	f7ff fdc3 	bl	8009a10 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 8009e8a:	f240 1301 	movw	r3, #257	; 0x101
 8009e8e:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8009e92:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 8009e96:	2b00      	cmp	r3, #0
 8009e98:	f040 8081 	bne.w	8009f9e <E131Bridge::HandleDmx()+0x25e>
 8009e9c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009ea0:	f043 0302 	orr.w	r3, r3, #2
 8009ea4:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8009ea8:	e780      	b.n	8009dac <E131Bridge::HandleDmx()+0x6c>
 8009eaa:	d9ad      	bls.n	8009e08 <E131Bridge::HandleDmx()+0xc8>
 8009eac:	2300      	movs	r3, #0
 8009eae:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
 8009eb2:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
 8009eb6:	f884 34f5 	strb.w	r3, [r4, #1269]	; 0x4f5
 8009eba:	e7a3      	b.n	8009e04 <E131Bridge::HandleDmx()+0xc4>
 8009ebc:	2f00      	cmp	r7, #0
 8009ebe:	f000 8089 	beq.w	8009fd4 <E131Bridge::HandleDmx()+0x294>
 8009ec2:	f1b9 0f00 	cmp.w	r9, #0
 8009ec6:	d154      	bne.n	8009f72 <E131Bridge::HandleDmx()+0x232>
 8009ec8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009ecc:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009ed0:	e7ae      	b.n	8009e30 <E131Bridge::HandleDmx()+0xf0>
 8009ed2:	b39e      	cbz	r6, 8009f3c <E131Bridge::HandleDmx()+0x1fc>
 8009ed4:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009ed8:	68e3      	ldr	r3, [r4, #12]
 8009eda:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8009ede:	f7ff fc4b 	bl	8009778 <lightset::Data::Get()>
 8009ee2:	4681      	mov	r9, r0
 8009ee4:	462a      	mov	r2, r5
 8009ee6:	4641      	mov	r1, r8
 8009ee8:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8009eec:	f7ff fc3a 	bl	8009764 <memcpy.isra.0>
 8009ef0:	462a      	mov	r2, r5
 8009ef2:	4641      	mov	r1, r8
 8009ef4:	f8c9 5600 	str.w	r5, [r9, #1536]	; 0x600
 8009ef8:	f509 6080 	add.w	r0, r9, #1024	; 0x400
 8009efc:	f7ff fc32 	bl	8009764 <memcpy.isra.0>
 8009f00:	e79e      	b.n	8009e40 <E131Bridge::HandleDmx()+0x100>
 8009f02:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8009f04:	2210      	movs	r2, #16
 8009f06:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
 8009f0a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009f0e:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009f12:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009f16:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009f1a:	f7ff fc23 	bl	8009764 <memcpy.isra.0>
 8009f1e:	68e3      	ldr	r3, [r4, #12]
 8009f20:	4639      	mov	r1, r7
 8009f22:	4620      	mov	r0, r4
 8009f24:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8009f28:	f7ff fe16 	bl	8009b58 <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009f2c:	462a      	mov	r2, r5
 8009f2e:	4641      	mov	r1, r8
 8009f30:	4638      	mov	r0, r7
 8009f32:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
 8009f36:	f7ff fc71 	bl	800981c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009f3a:	e781      	b.n	8009e40 <E131Bridge::HandleDmx()+0x100>
 8009f3c:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8009f3e:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009f42:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009f46:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009f4a:	2210      	movs	r2, #16
 8009f4c:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009f50:	f7ff fc08 	bl	8009764 <memcpy.isra.0>
 8009f54:	68e3      	ldr	r3, [r4, #12]
 8009f56:	4631      	mov	r1, r6
 8009f58:	4620      	mov	r0, r4
 8009f5a:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8009f5e:	f7ff fdfb 	bl	8009b58 <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009f62:	462a      	mov	r2, r5
 8009f64:	4641      	mov	r1, r8
 8009f66:	4630      	mov	r0, r6
 8009f68:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
 8009f6c:	f7ff fc2d 	bl	80097ca <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009f70:	e766      	b.n	8009e40 <E131Bridge::HandleDmx()+0x100>
 8009f72:	b926      	cbnz	r6, 8009f7e <E131Bridge::HandleDmx()+0x23e>
 8009f74:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009f78:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009f7c:	e7ea      	b.n	8009f54 <E131Bridge::HandleDmx()+0x214>
 8009f7e:	481a      	ldr	r0, [pc, #104]	; (8009fe8 <E131Bridge::HandleDmx()+0x2a8>)
 8009f80:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f84:	f005 be1c 	b.w	800fbc0 <printf>
 8009f88:	4632      	mov	r2, r6
 8009f8a:	4639      	mov	r1, r7
 8009f8c:	e77a      	b.n	8009e84 <E131Bridge::HandleDmx()+0x144>
 8009f8e:	2300      	movs	r3, #0
 8009f90:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8009f94:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8009f98:	2b00      	cmp	r3, #0
 8009f9a:	f47f af7a 	bne.w	8009e92 <E131Bridge::HandleDmx()+0x152>
 8009f9e:	6865      	ldr	r5, [r4, #4]
 8009fa0:	f7ff fbea 	bl	8009778 <lightset::Data::Get()>
 8009fa4:	682b      	ldr	r3, [r5, #0]
 8009fa6:	2100      	movs	r1, #0
 8009fa8:	691e      	ldr	r6, [r3, #16]
 8009faa:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8009fae:	f8d0 3600 	ldr.w	r3, [r0, #1536]	; 0x600
 8009fb2:	4628      	mov	r0, r5
 8009fb4:	47b0      	blx	r6
 8009fb6:	f894 1556 	ldrb.w	r1, [r4, #1366]	; 0x556
 8009fba:	2900      	cmp	r1, #0
 8009fbc:	f47f af6e 	bne.w	8009e9c <E131Bridge::HandleDmx()+0x15c>
 8009fc0:	6860      	ldr	r0, [r4, #4]
 8009fc2:	6803      	ldr	r3, [r0, #0]
 8009fc4:	689b      	ldr	r3, [r3, #8]
 8009fc6:	4798      	blx	r3
 8009fc8:	2301      	movs	r3, #1
 8009fca:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8009fce:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 8009fd2:	e763      	b.n	8009e9c <E131Bridge::HandleDmx()+0x15c>
 8009fd4:	f1b9 0f00 	cmp.w	r9, #0
 8009fd8:	d093      	beq.n	8009f02 <E131Bridge::HandleDmx()+0x1c2>
 8009fda:	2e00      	cmp	r6, #0
 8009fdc:	d0cf      	beq.n	8009f7e <E131Bridge::HandleDmx()+0x23e>
 8009fde:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009fe2:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009fe6:	e79a      	b.n	8009f1e <E131Bridge::HandleDmx()+0x1de>
 8009fe8:	08012fcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, fp, sp}

08009fec <E131Bridge::IsValidRoot()>:
 8009fec:	b530      	push	{r4, r5, lr}
 8009fee:	4a0d      	ldr	r2, [pc, #52]	; (800a024 <E131Bridge::IsValidRoot()+0x38>)
 8009ff0:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 8009ff4:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 8009ff8:	4299      	cmp	r1, r3
 8009ffa:	d109      	bne.n	800a010 <E131Bridge::IsValidRoot()+0x24>
 8009ffc:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800a000:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800a004:	d00c      	beq.n	800a020 <E131Bridge::IsValidRoot()+0x34>
 800a006:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800a00a:	4258      	negs	r0, r3
 800a00c:	4158      	adcs	r0, r3
 800a00e:	bd30      	pop	{r4, r5, pc}
 800a010:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a014:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800a018:	42a5      	cmp	r5, r4
 800a01a:	d0ed      	beq.n	8009ff8 <E131Bridge::IsValidRoot()+0xc>
 800a01c:	2000      	movs	r0, #0
 800a01e:	e7f6      	b.n	800a00e <E131Bridge::IsValidRoot()+0x22>
 800a020:	2001      	movs	r0, #1
 800a022:	e7f4      	b.n	800a00e <E131Bridge::IsValidRoot()+0x22>
 800a024:	08013147 	stmdaeq	r1, {r0, r1, r2, r6, r8, ip, sp}

0800a028 <E131Bridge::IsValidDataPacket()>:
 800a028:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800a02c:	2b02      	cmp	r3, #2
 800a02e:	d10d      	bne.n	800a04c <E131Bridge::IsValidDataPacket()+0x24>
 800a030:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800a034:	2ba1      	cmp	r3, #161	; 0xa1
 800a036:	d109      	bne.n	800a04c <E131Bridge::IsValidDataPacket()+0x24>
 800a038:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a03c:	b933      	cbnz	r3, 800a04c <E131Bridge::IsValidDataPacket()+0x24>
 800a03e:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a042:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a046:	4258      	negs	r0, r3
 800a048:	4158      	adcs	r0, r3
 800a04a:	4770      	bx	lr
 800a04c:	2000      	movs	r0, #0
 800a04e:	4770      	bx	lr

0800a050 <E131Bridge::Run()>:
 800a050:	b530      	push	{r4, r5, lr}
 800a052:	4601      	mov	r1, r0
 800a054:	4604      	mov	r4, r0
 800a056:	b085      	sub	sp, #20
 800a058:	f10d 030e 	add.w	r3, sp, #14
 800a05c:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a060:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a064:	9300      	str	r3, [sp, #0]
 800a066:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a06a:	f001 ff21 	bl	800beb0 <udp_recv>
 800a06e:	4b3a      	ldr	r3, [pc, #232]	; (800a158 <E131Bridge::Run()+0x108>)
 800a070:	681d      	ldr	r5, [r3, #0]
 800a072:	60e5      	str	r5, [r4, #12]
 800a074:	2800      	cmp	r0, #0
 800a076:	d138      	bne.n	800a0ea <E131Bridge::Run()+0x9a>
 800a078:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a07c:	b16b      	cbz	r3, 800a09a <E131Bridge::Run()+0x4a>
 800a07e:	6923      	ldr	r3, [r4, #16]
 800a080:	1aed      	subs	r5, r5, r3
 800a082:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a086:	429d      	cmp	r5, r3
 800a088:	d928      	bls.n	800a0dc <E131Bridge::Run()+0x8c>
 800a08a:	6863      	ldr	r3, [r4, #4]
 800a08c:	b9eb      	cbnz	r3, 800a0ca <E131Bridge::Run()+0x7a>
 800a08e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a092:	f023 0302 	bic.w	r3, r3, #2
 800a096:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a09a:	6963      	ldr	r3, [r4, #20]
 800a09c:	b12b      	cbz	r3, 800a0aa <E131Bridge::Run()+0x5a>
 800a09e:	4620      	mov	r0, r4
 800a0a0:	f000 f944 	bl	800a32c <E131Bridge::HandleDmxIn()>
 800a0a4:	4620      	mov	r0, r4
 800a0a6:	f000 f8c7 	bl	800a238 <E131Bridge::SendDiscoveryPacket()>
 800a0aa:	7a23      	ldrb	r3, [r4, #8]
 800a0ac:	b15b      	cbz	r3, 800a0c6 <E131Bridge::Run()+0x76>
 800a0ae:	4b2b      	ldr	r3, [pc, #172]	; (800a15c <E131Bridge::Run()+0x10c>)
 800a0b0:	6818      	ldr	r0, [r3, #0]
 800a0b2:	6843      	ldr	r3, [r0, #4]
 800a0b4:	2b04      	cmp	r3, #4
 800a0b6:	d006      	beq.n	800a0c6 <E131Bridge::Run()+0x76>
 800a0b8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a0bc:	2b00      	cmp	r3, #0
 800a0be:	d049      	beq.n	800a154 <E131Bridge::Run()+0x104>
 800a0c0:	2103      	movs	r1, #3
 800a0c2:	f005 f9d5 	bl	800f470 <LedBlink::SetMode(ledblink::Mode)>
 800a0c6:	b005      	add	sp, #20
 800a0c8:	bd30      	pop	{r4, r5, pc}
 800a0ca:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a0ce:	2b00      	cmp	r3, #0
 800a0d0:	d1dd      	bne.n	800a08e <E131Bridge::Run()+0x3e>
 800a0d2:	2201      	movs	r2, #1
 800a0d4:	4620      	mov	r0, r4
 800a0d6:	4611      	mov	r1, r2
 800a0d8:	f7ff fdc0 	bl	8009c5c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a0dc:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a0e0:	1a9b      	subs	r3, r3, r2
 800a0e2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a0e6:	d3d8      	bcc.n	800a09a <E131Bridge::Run()+0x4a>
 800a0e8:	e7d1      	b.n	800a08e <E131Bridge::Run()+0x3e>
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	f7ff ff7e 	bl	8009fec <E131Bridge::IsValidRoot()>
 800a0f0:	2800      	cmp	r0, #0
 800a0f2:	d0e8      	beq.n	800a0c6 <E131Bridge::Run()+0x76>
 800a0f4:	2300      	movs	r3, #0
 800a0f6:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a0fa:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a0fe:	6125      	str	r5, [r4, #16]
 800a100:	b15b      	cbz	r3, 800a11a <E131Bridge::Run()+0xca>
 800a102:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a106:	b943      	cbnz	r3, 800a11a <E131Bridge::Run()+0xca>
 800a108:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a10c:	1aad      	subs	r5, r5, r2
 800a10e:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a112:	4295      	cmp	r5, r2
 800a114:	bf88      	it	hi
 800a116:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a11a:	6863      	ldr	r3, [r4, #4]
 800a11c:	2b00      	cmp	r3, #0
 800a11e:	d0bc      	beq.n	800a09a <E131Bridge::Run()+0x4a>
 800a120:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a124:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a128:	ba1a      	rev	r2, r3
 800a12a:	d108      	bne.n	800a13e <E131Bridge::Run()+0xee>
 800a12c:	4620      	mov	r0, r4
 800a12e:	f7ff ff7b 	bl	800a028 <E131Bridge::IsValidDataPacket()>
 800a132:	2800      	cmp	r0, #0
 800a134:	d0b1      	beq.n	800a09a <E131Bridge::Run()+0x4a>
 800a136:	4620      	mov	r0, r4
 800a138:	f7ff fe02 	bl	8009d40 <E131Bridge::HandleDmx()>
 800a13c:	e7ad      	b.n	800a09a <E131Bridge::Run()+0x4a>
 800a13e:	2a08      	cmp	r2, #8
 800a140:	d1ab      	bne.n	800a09a <E131Bridge::Run()+0x4a>
 800a142:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a146:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a14a:	d1a6      	bne.n	800a09a <E131Bridge::Run()+0x4a>
 800a14c:	4620      	mov	r0, r4
 800a14e:	f000 f959 	bl	800a404 <E131Bridge::HandleSynchronization()>
 800a152:	e7a2      	b.n	800a09a <E131Bridge::Run()+0x4a>
 800a154:	2102      	movs	r1, #2
 800a156:	e7b4      	b.n	800a0c2 <E131Bridge::Run()+0x72>
 800a158:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800a15c:	2000a08c 	andcs	sl, r0, ip, lsl #1

0800a160 <E131Bridge::FillDiscoveryPacket()>:
 800a160:	2200      	movs	r2, #0
 800a162:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a166:	b510      	push	{r4, lr}
 800a168:	333c      	adds	r3, #60	; 0x3c
 800a16a:	005b      	lsls	r3, r3, #1
 800a16c:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a170:	69c3      	ldr	r3, [r0, #28]
 800a172:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a176:	428b      	cmp	r3, r1
 800a178:	d14a      	bne.n	800a210 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800a17a:	69c3      	ldr	r3, [r0, #28]
 800a17c:	492d      	ldr	r1, [pc, #180]	; (800a234 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800a17e:	701a      	strb	r2, [r3, #0]
 800a180:	2210      	movs	r2, #16
 800a182:	705a      	strb	r2, [r3, #1]
 800a184:	1cda      	adds	r2, r3, #3
 800a186:	330f      	adds	r3, #15
 800a188:	4293      	cmp	r3, r2
 800a18a:	d144      	bne.n	800a216 <E131Bridge::FillDiscoveryPacket()+0xb6>
 800a18c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a190:	69c3      	ldr	r3, [r0, #28]
 800a192:	3234      	adds	r2, #52	; 0x34
 800a194:	0052      	lsls	r2, r2, #1
 800a196:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a19a:	ba52      	rev16	r2, r2
 800a19c:	821a      	strh	r2, [r3, #16]
 800a19e:	2200      	movs	r2, #0
 800a1a0:	749a      	strb	r2, [r3, #18]
 800a1a2:	74da      	strb	r2, [r3, #19]
 800a1a4:	751a      	strb	r2, [r3, #20]
 800a1a6:	2208      	movs	r2, #8
 800a1a8:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a1ac:	f803 2f15 	strb.w	r2, [r3, #21]!
 800a1b0:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800a1b4:	4291      	cmp	r1, r2
 800a1b6:	d133      	bne.n	800a220 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800a1b8:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a1bc:	69c3      	ldr	r3, [r0, #28]
 800a1be:	3229      	adds	r2, #41	; 0x29
 800a1c0:	0052      	lsls	r2, r2, #1
 800a1c2:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a1c6:	ba52      	rev16	r2, r2
 800a1c8:	84da      	strh	r2, [r3, #38]	; 0x26
 800a1ca:	2200      	movs	r2, #0
 800a1cc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a1d0:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a1d4:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a1d8:	2202      	movs	r2, #2
 800a1da:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800a1de:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800a1e2:	4291      	cmp	r1, r2
 800a1e4:	d121      	bne.n	800a22a <E131Bridge::FillDiscoveryPacket()+0xca>
 800a1e6:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a1ea:	69c2      	ldr	r2, [r0, #28]
 800a1ec:	3304      	adds	r3, #4
 800a1ee:	005b      	lsls	r3, r3, #1
 800a1f0:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a1f4:	ba5b      	rev16	r3, r3
 800a1f6:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a1fa:	2300      	movs	r3, #0
 800a1fc:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a200:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a204:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a208:	2301      	movs	r3, #1
 800a20a:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a20e:	bd10      	pop	{r4, pc}
 800a210:	f803 2b01 	strb.w	r2, [r3], #1
 800a214:	e7af      	b.n	800a176 <E131Bridge::FillDiscoveryPacket()+0x16>
 800a216:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a21a:	f802 4f01 	strb.w	r4, [r2, #1]!
 800a21e:	e7b3      	b.n	800a188 <E131Bridge::FillDiscoveryPacket()+0x28>
 800a220:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a224:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a228:	e7c4      	b.n	800a1b4 <E131Bridge::FillDiscoveryPacket()+0x54>
 800a22a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a22e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a232:	e7d6      	b.n	800a1e2 <E131Bridge::FillDiscoveryPacket()+0x82>
 800a234:	08013147 	stmdaeq	r1, {r0, r1, r2, r6, r8, ip, sp}

0800a238 <E131Bridge::SendDiscoveryPacket()>:
 800a238:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a23a:	f242 710f 	movw	r1, #9999	; 0x270f
 800a23e:	68c2      	ldr	r2, [r0, #12]
 800a240:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a244:	4604      	mov	r4, r0
 800a246:	1ad3      	subs	r3, r2, r3
 800a248:	428b      	cmp	r3, r1
 800a24a:	d90e      	bls.n	800a26a <E131Bridge::SendDiscoveryPacket()+0x32>
 800a24c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a250:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a254:	b95b      	cbnz	r3, 800a26e <E131Bridge::SendDiscoveryPacket()+0x36>
 800a256:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a25a:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a25e:	9300      	str	r3, [sp, #0]
 800a260:	69e1      	ldr	r1, [r4, #28]
 800a262:	6a23      	ldr	r3, [r4, #32]
 800a264:	7820      	ldrb	r0, [r4, #0]
 800a266:	f001 fe7f 	bl	800bf68 <udp_send>
 800a26a:	b004      	add	sp, #16
 800a26c:	bd10      	pop	{r4, pc}
 800a26e:	2300      	movs	r3, #0
 800a270:	f10d 020e 	add.w	r2, sp, #14
 800a274:	4619      	mov	r1, r3
 800a276:	f7ff fc5b 	bl	8009b30 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a27a:	2800      	cmp	r0, #0
 800a27c:	d0eb      	beq.n	800a256 <E131Bridge::SendDiscoveryPacket()+0x1e>
 800a27e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a282:	69e2      	ldr	r2, [r4, #28]
 800a284:	ba5b      	rev16	r3, r3
 800a286:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 800a28a:	e7e4      	b.n	800a256 <E131Bridge::SendDiscoveryPacket()+0x1e>

0800a28c <memcpy.isra.0>:
 800a28c:	3801      	subs	r0, #1
 800a28e:	440a      	add	r2, r1
 800a290:	4291      	cmp	r1, r2
 800a292:	d100      	bne.n	800a296 <memcpy.isra.0+0xa>
 800a294:	4770      	bx	lr
 800a296:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a29a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a29e:	e7f7      	b.n	800a290 <memcpy.isra.0+0x4>

0800a2a0 <E131Bridge::FillDataPacket()>:
 800a2a0:	b570      	push	{r4, r5, r6, lr}
 800a2a2:	2400      	movs	r4, #0
 800a2a4:	2610      	movs	r6, #16
 800a2a6:	4605      	mov	r5, r0
 800a2a8:	6980      	ldr	r0, [r0, #24]
 800a2aa:	220c      	movs	r2, #12
 800a2ac:	7046      	strb	r6, [r0, #1]
 800a2ae:	7004      	strb	r4, [r0, #0]
 800a2b0:	7084      	strb	r4, [r0, #2]
 800a2b2:	70c4      	strb	r4, [r0, #3]
 800a2b4:	491c      	ldr	r1, [pc, #112]	; (800a328 <E131Bridge::FillDataPacket()+0x88>)
 800a2b6:	3004      	adds	r0, #4
 800a2b8:	f7ff ffe8 	bl	800a28c <memcpy.isra.0>
 800a2bc:	2304      	movs	r3, #4
 800a2be:	4632      	mov	r2, r6
 800a2c0:	2602      	movs	r6, #2
 800a2c2:	69a8      	ldr	r0, [r5, #24]
 800a2c4:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a2c8:	7543      	strb	r3, [r0, #21]
 800a2ca:	7484      	strb	r4, [r0, #18]
 800a2cc:	74c4      	strb	r4, [r0, #19]
 800a2ce:	7504      	strb	r4, [r0, #20]
 800a2d0:	3016      	adds	r0, #22
 800a2d2:	f7ff ffdb 	bl	800a28c <memcpy.isra.0>
 800a2d6:	69a8      	ldr	r0, [r5, #24]
 800a2d8:	2240      	movs	r2, #64	; 0x40
 800a2da:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a2de:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a2e2:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a2e6:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a2ea:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a2ee:	302c      	adds	r0, #44	; 0x2c
 800a2f0:	f7ff ffcc 	bl	800a28c <memcpy.isra.0>
 800a2f4:	22a1      	movs	r2, #161	; 0xa1
 800a2f6:	69ab      	ldr	r3, [r5, #24]
 800a2f8:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a2fc:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a300:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a304:	69ab      	ldr	r3, [r5, #24]
 800a306:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a30a:	69ab      	ldr	r3, [r5, #24]
 800a30c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a310:	2201      	movs	r2, #1
 800a312:	69ab      	ldr	r3, [r5, #24]
 800a314:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a318:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a31c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a320:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a324:	bd70      	pop	{r4, r5, r6, pc}
 800a326:	bf00      	nop
 800a328:	08013147 	stmdaeq	r1, {r0, r1, r2, r6, r8, ip, sp}

0800a32c <E131Bridge::HandleDmxIn()>:
 800a32c:	b530      	push	{r4, r5, lr}
 800a32e:	f890 355a 	ldrb.w	r3, [r0, #1370]	; 0x55a
 800a332:	4604      	mov	r4, r0
 800a334:	b085      	sub	sp, #20
 800a336:	2b00      	cmp	r3, #0
 800a338:	d050      	beq.n	800a3dc <E131Bridge::HandleDmxIn()+0xb0>
 800a33a:	6940      	ldr	r0, [r0, #20]
 800a33c:	2100      	movs	r1, #0
 800a33e:	6803      	ldr	r3, [r0, #0]
 800a340:	aa02      	add	r2, sp, #8
 800a342:	691d      	ldr	r5, [r3, #16]
 800a344:	ab03      	add	r3, sp, #12
 800a346:	47a8      	blx	r5
 800a348:	4601      	mov	r1, r0
 800a34a:	2800      	cmp	r0, #0
 800a34c:	d048      	beq.n	800a3e0 <E131Bridge::HandleDmxIn()+0xb4>
 800a34e:	9a02      	ldr	r2, [sp, #8]
 800a350:	69a0      	ldr	r0, [r4, #24]
 800a352:	b293      	uxth	r3, r2
 800a354:	f103 056d 	add.w	r5, r3, #109	; 0x6d
 800a358:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 800a35c:	ba6d      	rev16	r5, r5
 800a35e:	8205      	strh	r5, [r0, #16]
 800a360:	f103 0557 	add.w	r5, r3, #87	; 0x57
 800a364:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 800a368:	ba6d      	rev16	r5, r5
 800a36a:	84c5      	strh	r5, [r0, #38]	; 0x26
 800a36c:	f894 5561 	ldrb.w	r5, [r4, #1377]	; 0x561
 800a370:	330a      	adds	r3, #10
 800a372:	f880 506c 	strb.w	r5, [r0, #108]	; 0x6c
 800a376:	f894 0560 	ldrb.w	r0, [r4, #1376]	; 0x560
 800a37a:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a37e:	1c45      	adds	r5, r0, #1
 800a380:	f884 5560 	strb.w	r5, [r4, #1376]	; 0x560
 800a384:	69a5      	ldr	r5, [r4, #24]
 800a386:	ba5b      	rev16	r3, r3
 800a388:	f885 006f 	strb.w	r0, [r5, #111]	; 0x6f
 800a38c:	f8b4 5558 	ldrh.w	r5, [r4, #1368]	; 0x558
 800a390:	69a0      	ldr	r0, [r4, #24]
 800a392:	ba6d      	rev16	r5, r5
 800a394:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a398:	f8a0 5071 	strh.w	r5, [r0, #113]	; 0x71
 800a39c:	307d      	adds	r0, #125	; 0x7d
 800a39e:	f7ff ff75 	bl	800a28c <memcpy.isra.0>
 800a3a2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a3a6:	69a1      	ldr	r1, [r4, #24]
 800a3a8:	ba53      	rev16	r3, r2
 800a3aa:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a3ae:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a3b2:	327d      	adds	r2, #125	; 0x7d
 800a3b4:	9300      	str	r3, [sp, #0]
 800a3b6:	b292      	uxth	r2, r2
 800a3b8:	f8d4 355c 	ldr.w	r3, [r4, #1372]	; 0x55c
 800a3bc:	7820      	ldrb	r0, [r4, #0]
 800a3be:	f001 fdd3 	bl	800bf68 <udp_send>
 800a3c2:	4a0f      	ldr	r2, [pc, #60]	; (800a400 <E131Bridge::HandleDmxIn()+0xd4>)
 800a3c4:	6813      	ldr	r3, [r2, #0]
 800a3c6:	07d9      	lsls	r1, r3, #31
 800a3c8:	d408      	bmi.n	800a3dc <E131Bridge::HandleDmxIn()+0xb0>
 800a3ca:	f043 0301 	orr.w	r3, r3, #1
 800a3ce:	6013      	str	r3, [r2, #0]
 800a3d0:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3d4:	f043 0301 	orr.w	r3, r3, #1
 800a3d8:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a3dc:	b005      	add	sp, #20
 800a3de:	bd30      	pop	{r4, r5, pc}
 800a3e0:	9b03      	ldr	r3, [sp, #12]
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d1fa      	bne.n	800a3dc <E131Bridge::HandleDmxIn()+0xb0>
 800a3e6:	4a06      	ldr	r2, [pc, #24]	; (800a400 <E131Bridge::HandleDmxIn()+0xd4>)
 800a3e8:	6813      	ldr	r3, [r2, #0]
 800a3ea:	f023 0301 	bic.w	r3, r3, #1
 800a3ee:	6013      	str	r3, [r2, #0]
 800a3f0:	2b00      	cmp	r3, #0
 800a3f2:	d1f3      	bne.n	800a3dc <E131Bridge::HandleDmxIn()+0xb0>
 800a3f4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3f8:	f023 0301 	bic.w	r3, r3, #1
 800a3fc:	e7ec      	b.n	800a3d8 <E131Bridge::HandleDmxIn()+0xac>
 800a3fe:	bf00      	nop
 800a400:	20000c6c 	andcs	r0, r0, ip, ror #24

0800a404 <E131Bridge::HandleSynchronization()>:
 800a404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a408:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a40c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a410:	ba5b      	rev16	r3, r3
 800a412:	b29b      	uxth	r3, r3
 800a414:	429a      	cmp	r2, r3
 800a416:	4604      	mov	r4, r0
 800a418:	d00a      	beq.n	800a430 <E131Bridge::HandleSynchronization()+0x2c>
 800a41a:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a41e:	429a      	cmp	r2, r3
 800a420:	d006      	beq.n	800a430 <E131Bridge::HandleSynchronization()+0x2c>
 800a422:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a426:	4b1b      	ldr	r3, [pc, #108]	; (800a494 <E131Bridge::HandleSynchronization()+0x90>)
 800a428:	2102      	movs	r1, #2
 800a42a:	6818      	ldr	r0, [r3, #0]
 800a42c:	f005 b820 	b.w	800f470 <LedBlink::SetMode(ledblink::Mode)>
 800a430:	68e3      	ldr	r3, [r4, #12]
 800a432:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a436:	f894 3516 	ldrb.w	r3, [r4, #1302]	; 0x516
 800a43a:	b30b      	cbz	r3, 800a480 <E131Bridge::HandleSynchronization()+0x7c>
 800a43c:	4d16      	ldr	r5, [pc, #88]	; (800a498 <E131Bridge::HandleSynchronization()+0x94>)
 800a43e:	6860      	ldr	r0, [r4, #4]
 800a440:	682b      	ldr	r3, [r5, #0]
 800a442:	4e16      	ldr	r6, [pc, #88]	; (800a49c <E131Bridge::HandleSynchronization()+0x98>)
 800a444:	07da      	lsls	r2, r3, #31
 800a446:	bf5c      	itt	pl
 800a448:	2301      	movpl	r3, #1
 800a44a:	602b      	strpl	r3, [r5, #0]
 800a44c:	6803      	ldr	r3, [r0, #0]
 800a44e:	2100      	movs	r1, #0
 800a450:	691f      	ldr	r7, [r3, #16]
 800a452:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a456:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a45a:	47b8      	blx	r7
 800a45c:	f894 1556 	ldrb.w	r1, [r4, #1366]	; 0x556
 800a460:	b931      	cbnz	r1, 800a470 <E131Bridge::HandleSynchronization()+0x6c>
 800a462:	6860      	ldr	r0, [r4, #4]
 800a464:	6803      	ldr	r3, [r0, #0]
 800a466:	689b      	ldr	r3, [r3, #8]
 800a468:	4798      	blx	r3
 800a46a:	2301      	movs	r3, #1
 800a46c:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 800a470:	682b      	ldr	r3, [r5, #0]
 800a472:	07db      	lsls	r3, r3, #31
 800a474:	bf5c      	itt	pl
 800a476:	2301      	movpl	r3, #1
 800a478:	602b      	strpl	r3, [r5, #0]
 800a47a:	2300      	movs	r3, #0
 800a47c:	f8c6 3600 	str.w	r3, [r6, #1536]	; 0x600
 800a480:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a482:	b120      	cbz	r0, 800a48e <E131Bridge::HandleSynchronization()+0x8a>
 800a484:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a488:	6803      	ldr	r3, [r0, #0]
 800a48a:	689b      	ldr	r3, [r3, #8]
 800a48c:	4718      	bx	r3
 800a48e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a492:	bf00      	nop
 800a494:	2000a08c 	andcs	sl, r0, ip, lsl #1
 800a498:	20000660 	andcs	r0, r0, r0, ror #12
 800a49c:	20000664 	andcs	r0, r0, r4, ror #12

0800a4a0 <E131Bridge::Print()>:
 800a4a0:	b530      	push	{r4, r5, lr}
 800a4a2:	2500      	movs	r5, #0
 800a4a4:	4604      	mov	r4, r0
 800a4a6:	b08d      	sub	sp, #52	; 0x34
 800a4a8:	a902      	add	r1, sp, #8
 800a4aa:	3024      	adds	r0, #36	; 0x24
 800a4ac:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a4b0:	f000 fbea 	bl	800ac88 <uuid_unparse>
 800a4b4:	4822      	ldr	r0, [pc, #136]	; (800a540 <E131Bridge::Print()+0xa0>)
 800a4b6:	f005 fb83 	bl	800fbc0 <printf>
 800a4ba:	4b22      	ldr	r3, [pc, #136]	; (800a544 <E131Bridge::Print()+0xa4>)
 800a4bc:	4822      	ldr	r0, [pc, #136]	; (800a548 <E131Bridge::Print()+0xa8>)
 800a4be:	7819      	ldrb	r1, [r3, #0]
 800a4c0:	785a      	ldrb	r2, [r3, #1]
 800a4c2:	f005 fb7d 	bl	800fbc0 <printf>
 800a4c6:	4821      	ldr	r0, [pc, #132]	; (800a54c <E131Bridge::Print()+0xac>)
 800a4c8:	a902      	add	r1, sp, #8
 800a4ca:	f005 fb79 	bl	800fbc0 <printf>
 800a4ce:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a4d2:	b1bb      	cbz	r3, 800a504 <E131Bridge::Print()+0x64>
 800a4d4:	481e      	ldr	r0, [pc, #120]	; (800a550 <E131Bridge::Print()+0xb0>)
 800a4d6:	f005 fb73 	bl	800fbc0 <printf>
 800a4da:	2301      	movs	r3, #1
 800a4dc:	4629      	mov	r1, r5
 800a4de:	4620      	mov	r0, r4
 800a4e0:	f10d 0206 	add.w	r2, sp, #6
 800a4e4:	f7ff fb24 	bl	8009b30 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a4e8:	b160      	cbz	r0, 800a504 <E131Bridge::Print()+0x64>
 800a4ea:	f8d4 1550 	ldr.w	r1, [r4, #1360]	; 0x550
 800a4ee:	4a19      	ldr	r2, [pc, #100]	; (800a554 <E131Bridge::Print()+0xb4>)
 800a4f0:	4b19      	ldr	r3, [pc, #100]	; (800a558 <E131Bridge::Print()+0xb8>)
 800a4f2:	481a      	ldr	r0, [pc, #104]	; (800a55c <E131Bridge::Print()+0xbc>)
 800a4f4:	42a9      	cmp	r1, r5
 800a4f6:	bf18      	it	ne
 800a4f8:	4613      	movne	r3, r2
 800a4fa:	4629      	mov	r1, r5
 800a4fc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a500:	f005 fb5e 	bl	800fbc0 <printf>
 800a504:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a508:	b193      	cbz	r3, 800a530 <E131Bridge::Print()+0x90>
 800a50a:	4815      	ldr	r0, [pc, #84]	; (800a560 <E131Bridge::Print()+0xc0>)
 800a50c:	f005 fb58 	bl	800fbc0 <printf>
 800a510:	2300      	movs	r3, #0
 800a512:	4620      	mov	r0, r4
 800a514:	4619      	mov	r1, r3
 800a516:	f10d 0206 	add.w	r2, sp, #6
 800a51a:	f7ff fb09 	bl	8009b30 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a51e:	b138      	cbz	r0, 800a530 <E131Bridge::Print()+0x90>
 800a520:	2100      	movs	r1, #0
 800a522:	f894 3561 	ldrb.w	r3, [r4, #1377]	; 0x561
 800a526:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a52a:	480e      	ldr	r0, [pc, #56]	; (800a564 <E131Bridge::Print()+0xc4>)
 800a52c:	f005 fb48 	bl	800fbc0 <printf>
 800a530:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800a534:	b113      	cbz	r3, 800a53c <E131Bridge::Print()+0x9c>
 800a536:	480c      	ldr	r0, [pc, #48]	; (800a568 <E131Bridge::Print()+0xc8>)
 800a538:	f005 fb42 	bl	800fbc0 <printf>
 800a53c:	b00d      	add	sp, #52	; 0x34
 800a53e:	bd30      	pop	{r4, r5, pc}
 800a540:	08013004 	stmdaeq	r1, {r2, ip, sp}
 800a544:	08013153 	stmdaeq	r1, {r0, r1, r4, r6, r8, ip, sp}
 800a548:	0801300c 	stmdaeq	r1, {r2, r3, ip, sp}
 800a54c:	0801301f 	stmdaeq	r1, {r0, r1, r2, r3, r4, ip, sp}
 800a550:	0801302f 	stmdaeq	r1, {r0, r1, r2, r3, r5, ip, sp}
 800a554:	08013000 	stmdaeq	r1, {ip, sp}
 800a558:	08012ffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 800a55c:	08013038 	stmdaeq	r1, {r3, r4, r5, ip, sp}
 800a560:	08013057 	stmdaeq	r1, {r0, r1, r2, r4, r6, ip, sp}
 800a564:	0801305f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip, sp}
 800a568:	0801307e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, ip, sp}

0800a56c <memcmp>:
 800a56c:	4402      	add	r2, r0
 800a56e:	4290      	cmp	r0, r2
 800a570:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800a574:	d106      	bne.n	800a584 <memcmp+0x18>
 800a576:	2000      	movs	r0, #0
 800a578:	4770      	bx	lr
 800a57a:	3001      	adds	r0, #1
 800a57c:	4290      	cmp	r0, r2
 800a57e:	d102      	bne.n	800a586 <memcmp+0x1a>
 800a580:	2000      	movs	r0, #0
 800a582:	e006      	b.n	800a592 <memcmp+0x26>
 800a584:	b510      	push	{r4, lr}
 800a586:	7803      	ldrb	r3, [r0, #0]
 800a588:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a58c:	42a3      	cmp	r3, r4
 800a58e:	d0f4      	beq.n	800a57a <memcmp+0xe>
 800a590:	1b18      	subs	r0, r3, r4
 800a592:	bd10      	pop	{r4, pc}

0800a594 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a594:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a596:	88c6      	ldrh	r6, [r0, #6]
 800a598:	8885      	ldrh	r5, [r0, #4]
 800a59a:	42ae      	cmp	r6, r5
 800a59c:	d216      	bcs.n	800a5cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a59e:	4604      	mov	r4, r0
 800a5a0:	6800      	ldr	r0, [r0, #0]
 800a5a2:	1bad      	subs	r5, r5, r6
 800a5a4:	4430      	add	r0, r6
 800a5a6:	7a26      	ldrb	r6, [r4, #8]
 800a5a8:	b923      	cbnz	r3, 800a5b4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a5aa:	b926      	cbnz	r6, 800a5b6 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a5ac:	9200      	str	r2, [sp, #0]
 800a5ae:	460b      	mov	r3, r1
 800a5b0:	4a09      	ldr	r2, [pc, #36]	; (800a5d8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a5b2:	e003      	b.n	800a5bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5b4:	b166      	cbz	r6, 800a5d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a5b6:	460b      	mov	r3, r1
 800a5b8:	9200      	str	r2, [sp, #0]
 800a5ba:	4a08      	ldr	r2, [pc, #32]	; (800a5dc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a5bc:	4629      	mov	r1, r5
 800a5be:	f005 fb27 	bl	800fc10 <snprintf>
 800a5c2:	4285      	cmp	r5, r0
 800a5c4:	bfa2      	ittt	ge
 800a5c6:	88e3      	ldrhge	r3, [r4, #6]
 800a5c8:	181b      	addge	r3, r3, r0
 800a5ca:	80e3      	strhge	r3, [r4, #6]
 800a5cc:	b002      	add	sp, #8
 800a5ce:	bd70      	pop	{r4, r5, r6, pc}
 800a5d0:	9200      	str	r2, [sp, #0]
 800a5d2:	460b      	mov	r3, r1
 800a5d4:	4a02      	ldr	r2, [pc, #8]	; (800a5e0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a5d6:	e7f1      	b.n	800a5bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5d8:	08012248 	stmdaeq	r1, {r3, r6, r9, sp}
 800a5dc:	0801223d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp}
 800a5e0:	08012249 	stmdaeq	r1, {r0, r3, r6, r9, sp}

0800a5e4 <E131Params::E131Params(E131ParamsStore*)>:
 800a5e4:	b510      	push	{r4, lr}
 800a5e6:	2210      	movs	r2, #16
 800a5e8:	4604      	mov	r4, r0
 800a5ea:	f840 1b04 	str.w	r1, [r0], #4
 800a5ee:	2100      	movs	r1, #0
 800a5f0:	f005 f8cc 	bl	800f78c <memset>
 800a5f4:	2200      	movs	r2, #0
 800a5f6:	7322      	strb	r2, [r4, #12]
 800a5f8:	2264      	movs	r2, #100	; 0x64
 800a5fa:	2301      	movs	r3, #1
 800a5fc:	75a2      	strb	r2, [r4, #22]
 800a5fe:	4a04      	ldr	r2, [pc, #16]	; (800a610 <E131Params::E131Params(E131ParamsStore*)+0x2c>)
 800a600:	72e3      	strb	r3, [r4, #11]
 800a602:	6811      	ldr	r1, [r2, #0]
 800a604:	82a3      	strh	r3, [r4, #20]
 800a606:	b901      	cbnz	r1, 800a60a <E131Params::E131Params(E131ParamsStore*)+0x26>
 800a608:	6013      	str	r3, [r2, #0]
 800a60a:	4620      	mov	r0, r4
 800a60c:	bd10      	pop	{r4, pc}
 800a60e:	bf00      	nop
 800a610:	20000c70 	andcs	r0, r0, r0, ror ip

0800a614 <E131Params::Load()>:
 800a614:	b508      	push	{r3, lr}
 800a616:	2300      	movs	r3, #0
 800a618:	4601      	mov	r1, r0
 800a61a:	6043      	str	r3, [r0, #4]
 800a61c:	6800      	ldr	r0, [r0, #0]
 800a61e:	b120      	cbz	r0, 800a62a <E131Params::Load()+0x16>
 800a620:	6803      	ldr	r3, [r0, #0]
 800a622:	3104      	adds	r1, #4
 800a624:	68db      	ldr	r3, [r3, #12]
 800a626:	4798      	blx	r3
 800a628:	2001      	movs	r0, #1
 800a62a:	bd08      	pop	{r3, pc}

0800a62c <E131Params::Load(char const*, unsigned int)>:
 800a62c:	6803      	ldr	r3, [r0, #0]
 800a62e:	b1d3      	cbz	r3, 800a666 <E131Params::Load(char const*, unsigned int)+0x3a>
 800a630:	2300      	movs	r3, #0
 800a632:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a634:	460d      	mov	r5, r1
 800a636:	4616      	mov	r6, r2
 800a638:	4604      	mov	r4, r0
 800a63a:	6043      	str	r3, [r0, #4]
 800a63c:	4602      	mov	r2, r0
 800a63e:	490a      	ldr	r1, [pc, #40]	; (800a668 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800a640:	4668      	mov	r0, sp
 800a642:	f004 facb 	bl	800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a646:	4632      	mov	r2, r6
 800a648:	4629      	mov	r1, r5
 800a64a:	4668      	mov	r0, sp
 800a64c:	f004 faca 	bl	800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>
 800a650:	4621      	mov	r1, r4
 800a652:	f851 0b04 	ldr.w	r0, [r1], #4
 800a656:	6803      	ldr	r3, [r0, #0]
 800a658:	689b      	ldr	r3, [r3, #8]
 800a65a:	4798      	blx	r3
 800a65c:	4668      	mov	r0, sp
 800a65e:	f004 fac0 	bl	800ebe2 <ReadConfigFile::~ReadConfigFile()>
 800a662:	b002      	add	sp, #8
 800a664:	bd70      	pop	{r4, r5, r6, pc}
 800a666:	4770      	bx	lr
 800a668:	0800a8b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, sp, pc}

0800a66c <E131Params::callbackFunction(char const*)>:
 800a66c:	b570      	push	{r4, r5, r6, lr}
 800a66e:	460d      	mov	r5, r1
 800a670:	2608      	movs	r6, #8
 800a672:	b086      	sub	sp, #24
 800a674:	4604      	mov	r4, r0
 800a676:	4985      	ldr	r1, [pc, #532]	; (800a88c <E131Params::callbackFunction(char const*)+0x220>)
 800a678:	4628      	mov	r0, r5
 800a67a:	ab01      	add	r3, sp, #4
 800a67c:	eb0d 0206 	add.w	r2, sp, r6
 800a680:	9601      	str	r6, [sp, #4]
 800a682:	f004 fae3 	bl	800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a686:	2800      	cmp	r0, #0
 800a688:	f040 80de 	bne.w	800a848 <E131Params::callbackFunction(char const*)+0x1dc>
 800a68c:	2204      	movs	r2, #4
 800a68e:	4980      	ldr	r1, [pc, #512]	; (800a890 <E131Params::callbackFunction(char const*)+0x224>)
 800a690:	eb0d 0006 	add.w	r0, sp, r6
 800a694:	f7ff ff6a 	bl	800a56c <memcmp>
 800a698:	6865      	ldr	r5, [r4, #4]
 800a69a:	b1a0      	cbz	r0, 800a6c6 <E131Params::callbackFunction(char const*)+0x5a>
 800a69c:	2203      	movs	r2, #3
 800a69e:	497d      	ldr	r1, [pc, #500]	; (800a894 <E131Params::callbackFunction(char const*)+0x228>)
 800a6a0:	eb0d 0006 	add.w	r0, sp, r6
 800a6a4:	f7ff ff62 	bl	800a56c <memcmp>
 800a6a8:	b1a8      	cbz	r0, 800a6d6 <E131Params::callbackFunction(char const*)+0x6a>
 800a6aa:	2202      	movs	r2, #2
 800a6ac:	497a      	ldr	r1, [pc, #488]	; (800a898 <E131Params::callbackFunction(char const*)+0x22c>)
 800a6ae:	eb0d 0006 	add.w	r0, sp, r6
 800a6b2:	f7ff ff5b 	bl	800a56c <memcmp>
 800a6b6:	b190      	cbz	r0, 800a6de <E131Params::callbackFunction(char const*)+0x72>
 800a6b8:	4632      	mov	r2, r6
 800a6ba:	4978      	ldr	r1, [pc, #480]	; (800a89c <E131Params::callbackFunction(char const*)+0x230>)
 800a6bc:	eb0d 0006 	add.w	r0, sp, r6
 800a6c0:	f7ff ff54 	bl	800a56c <memcmp>
 800a6c4:	b168      	cbz	r0, 800a6e2 <E131Params::callbackFunction(char const*)+0x76>
 800a6c6:	2300      	movs	r3, #0
 800a6c8:	f025 0501 	bic.w	r5, r5, #1
 800a6cc:	6065      	str	r5, [r4, #4]
 800a6ce:	f8a4 3009 	strh.w	r3, [r4, #9]
 800a6d2:	b006      	add	sp, #24
 800a6d4:	bd70      	pop	{r4, r5, r6, pc}
 800a6d6:	2301      	movs	r3, #1
 800a6d8:	f045 0501 	orr.w	r5, r5, #1
 800a6dc:	e7f6      	b.n	800a6cc <E131Params::callbackFunction(char const*)+0x60>
 800a6de:	2302      	movs	r3, #2
 800a6e0:	e7fa      	b.n	800a6d8 <E131Params::callbackFunction(char const*)+0x6c>
 800a6e2:	2303      	movs	r3, #3
 800a6e4:	e7f8      	b.n	800a6d8 <E131Params::callbackFunction(char const*)+0x6c>
 800a6e6:	2303      	movs	r3, #3
 800a6e8:	4628      	mov	r0, r5
 800a6ea:	9301      	str	r3, [sp, #4]
 800a6ec:	496c      	ldr	r1, [pc, #432]	; (800a8a0 <E131Params::callbackFunction(char const*)+0x234>)
 800a6ee:	ab01      	add	r3, sp, #4
 800a6f0:	aa02      	add	r2, sp, #8
 800a6f2:	f004 faab 	bl	800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a6f6:	b9e0      	cbnz	r0, 800a732 <E131Params::callbackFunction(char const*)+0xc6>
 800a6f8:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800a6fc:	6863      	ldr	r3, [r4, #4]
 800a6fe:	f042 0220 	orr.w	r2, r2, #32
 800a702:	2a6c      	cmp	r2, #108	; 0x6c
 800a704:	d110      	bne.n	800a728 <E131Params::callbackFunction(char const*)+0xbc>
 800a706:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800a70a:	f042 0220 	orr.w	r2, r2, #32
 800a70e:	2a74      	cmp	r2, #116	; 0x74
 800a710:	d10a      	bne.n	800a728 <E131Params::callbackFunction(char const*)+0xbc>
 800a712:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800a716:	f042 0220 	orr.w	r2, r2, #32
 800a71a:	2a70      	cmp	r2, #112	; 0x70
 800a71c:	d104      	bne.n	800a728 <E131Params::callbackFunction(char const*)+0xbc>
 800a71e:	2201      	movs	r2, #1
 800a720:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a724:	73a2      	strb	r2, [r4, #14]
 800a726:	e0ab      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a728:	2200      	movs	r2, #0
 800a72a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a72e:	73a2      	strb	r2, [r4, #14]
 800a730:	e0a6      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a732:	2307      	movs	r3, #7
 800a734:	4628      	mov	r0, r5
 800a736:	9301      	str	r3, [sp, #4]
 800a738:	495a      	ldr	r1, [pc, #360]	; (800a8a4 <E131Params::callbackFunction(char const*)+0x238>)
 800a73a:	ab01      	add	r3, sp, #4
 800a73c:	aa02      	add	r2, sp, #8
 800a73e:	f004 fa85 	bl	800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a742:	2800      	cmp	r0, #0
 800a744:	d157      	bne.n	800a7f6 <E131Params::callbackFunction(char const*)+0x18a>
 800a746:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800a74a:	f043 0320 	orr.w	r3, r3, #32
 800a74e:	2b69      	cmp	r3, #105	; 0x69
 800a750:	d11f      	bne.n	800a792 <E131Params::callbackFunction(char const*)+0x126>
 800a752:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800a756:	f043 0320 	orr.w	r3, r3, #32
 800a75a:	2b6e      	cmp	r3, #110	; 0x6e
 800a75c:	d142      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a75e:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800a762:	f043 0320 	orr.w	r3, r3, #32
 800a766:	2b70      	cmp	r3, #112	; 0x70
 800a768:	d13c      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a76a:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800a76e:	f043 0320 	orr.w	r3, r3, #32
 800a772:	2b75      	cmp	r3, #117	; 0x75
 800a774:	d136      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a776:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800a77a:	f043 0320 	orr.w	r3, r3, #32
 800a77e:	3b74      	subs	r3, #116	; 0x74
 800a780:	bf18      	it	ne
 800a782:	2301      	movne	r3, #1
 800a784:	8aa2      	ldrh	r2, [r4, #20]
 800a786:	f022 0203 	bic.w	r2, r2, #3
 800a78a:	b292      	uxth	r2, r2
 800a78c:	bb63      	cbnz	r3, 800a7e8 <E131Params::callbackFunction(char const*)+0x17c>
 800a78e:	82a2      	strh	r2, [r4, #20]
 800a790:	e79f      	b.n	800a6d2 <E131Params::callbackFunction(char const*)+0x66>
 800a792:	2b64      	cmp	r3, #100	; 0x64
 800a794:	d126      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a796:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800a79a:	f043 0320 	orr.w	r3, r3, #32
 800a79e:	2b69      	cmp	r3, #105	; 0x69
 800a7a0:	d120      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a7a2:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800a7a6:	f043 0320 	orr.w	r3, r3, #32
 800a7aa:	2b73      	cmp	r3, #115	; 0x73
 800a7ac:	d11a      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a7ae:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800a7b2:	f043 0320 	orr.w	r3, r3, #32
 800a7b6:	2b61      	cmp	r3, #97	; 0x61
 800a7b8:	d114      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a7ba:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800a7be:	f043 0320 	orr.w	r3, r3, #32
 800a7c2:	2b62      	cmp	r3, #98	; 0x62
 800a7c4:	d10e      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a7c6:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800a7ca:	f043 0320 	orr.w	r3, r3, #32
 800a7ce:	2b6c      	cmp	r3, #108	; 0x6c
 800a7d0:	d108      	bne.n	800a7e4 <E131Params::callbackFunction(char const*)+0x178>
 800a7d2:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800a7d6:	f043 0320 	orr.w	r3, r3, #32
 800a7da:	2b65      	cmp	r3, #101	; 0x65
 800a7dc:	bf14      	ite	ne
 800a7de:	2301      	movne	r3, #1
 800a7e0:	2302      	moveq	r3, #2
 800a7e2:	e7cf      	b.n	800a784 <E131Params::callbackFunction(char const*)+0x118>
 800a7e4:	2301      	movs	r3, #1
 800a7e6:	e7cd      	b.n	800a784 <E131Params::callbackFunction(char const*)+0x118>
 800a7e8:	2b02      	cmp	r3, #2
 800a7ea:	bf0c      	ite	eq
 800a7ec:	f042 0202 	orreq.w	r2, r2, #2
 800a7f0:	f042 0201 	orrne.w	r2, r2, #1
 800a7f4:	e7cb      	b.n	800a78e <E131Params::callbackFunction(char const*)+0x122>
 800a7f6:	4628      	mov	r0, r5
 800a7f8:	492b      	ldr	r1, [pc, #172]	; (800a8a8 <E131Params::callbackFunction(char const*)+0x23c>)
 800a7fa:	f10d 0201 	add.w	r2, sp, #1
 800a7fe:	f004 fa9d 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a802:	b178      	cbz	r0, 800a824 <E131Params::callbackFunction(char const*)+0x1b8>
 800a804:	4628      	mov	r0, r5
 800a806:	4929      	ldr	r1, [pc, #164]	; (800a8ac <E131Params::callbackFunction(char const*)+0x240>)
 800a808:	f10d 0201 	add.w	r2, sp, #1
 800a80c:	f004 fa96 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a810:	2800      	cmp	r0, #0
 800a812:	f47f af5e 	bne.w	800a6d2 <E131Params::callbackFunction(char const*)+0x66>
 800a816:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a81a:	6863      	ldr	r3, [r4, #4]
 800a81c:	b392      	cbz	r2, 800a884 <E131Params::callbackFunction(char const*)+0x218>
 800a81e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800a822:	e02d      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a824:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a828:	6863      	ldr	r3, [r4, #4]
 800a82a:	1e51      	subs	r1, r2, #1
 800a82c:	b2c9      	uxtb	r1, r1
 800a82e:	29c7      	cmp	r1, #199	; 0xc7
 800a830:	d805      	bhi.n	800a83e <E131Params::callbackFunction(char const*)+0x1d2>
 800a832:	2a64      	cmp	r2, #100	; 0x64
 800a834:	d003      	beq.n	800a83e <E131Params::callbackFunction(char const*)+0x1d2>
 800a836:	75a2      	strb	r2, [r4, #22]
 800a838:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a83c:	e020      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a83e:	2264      	movs	r2, #100	; 0x64
 800a840:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800a844:	75a2      	strb	r2, [r4, #22]
 800a846:	e01b      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a848:	4628      	mov	r0, r5
 800a84a:	4919      	ldr	r1, [pc, #100]	; (800a8b0 <E131Params::callbackFunction(char const*)+0x244>)
 800a84c:	f10d 0202 	add.w	r2, sp, #2
 800a850:	f004 fa56 	bl	800ed00 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a854:	2800      	cmp	r0, #0
 800a856:	f47f af46 	bne.w	800a6e6 <E131Params::callbackFunction(char const*)+0x7a>
 800a85a:	f64f 15fe 	movw	r5, #63998	; 0xf9fe
 800a85e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800a862:	6863      	ldr	r3, [r4, #4]
 800a864:	1e4a      	subs	r2, r1, #1
 800a866:	b292      	uxth	r2, r2
 800a868:	42aa      	cmp	r2, r5
 800a86a:	bf81      	itttt	hi
 800a86c:	2201      	movhi	r2, #1
 800a86e:	7320      	strbhi	r0, [r4, #12]
 800a870:	72e2      	strbhi	r2, [r4, #11]
 800a872:	f023 0310 	bichi.w	r3, r3, #16
 800a876:	bf9c      	itt	ls
 800a878:	f8a4 100b 	strhls.w	r1, [r4, #11]
 800a87c:	f043 0310 	orrls.w	r3, r3, #16
 800a880:	6063      	str	r3, [r4, #4]
 800a882:	e726      	b.n	800a6d2 <E131Params::callbackFunction(char const*)+0x66>
 800a884:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a888:	e7fa      	b.n	800a880 <E131Params::callbackFunction(char const*)+0x214>
 800a88a:	bf00      	nop
 800a88c:	080137ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 800a890:	080130d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, ip, sp}
 800a894:	080130db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, ip, sp}
 800a898:	080123ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sp}
 800a89c:	080130df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, ip, sp}
 800a8a0:	0801378f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, sl, ip, sp}
 800a8a4:	08013811 	stmdaeq	r1, {r0, r4, fp, ip, sp}
 800a8a8:	0801312c 	stmdaeq	r1, {r2, r3, r5, r8, ip, sp}
 800a8ac:	080137e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp}
 800a8b0:	0801374f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp}

0800a8b4 <E131Params::staticCallbackFunction(void*, char const*)>:
 800a8b4:	f7ff beda 	b.w	800a66c <E131Params::callbackFunction(char const*)>

0800a8b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800a8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8bc:	4604      	mov	r4, r0
 800a8be:	4615      	mov	r5, r2
 800a8c0:	461e      	mov	r6, r3
 800a8c2:	b087      	sub	sp, #28
 800a8c4:	3004      	adds	r0, #4
 800a8c6:	2900      	cmp	r1, #0
 800a8c8:	d05f      	beq.n	800a98a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800a8ca:	2213      	movs	r2, #19
 800a8cc:	f004 ff47 	bl	800f75e <memmove>
 800a8d0:	4633      	mov	r3, r6
 800a8d2:	462a      	mov	r2, r5
 800a8d4:	498f      	ldr	r1, [pc, #572]	; (800ab14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x25c>)
 800a8d6:	a803      	add	r0, sp, #12
 800a8d8:	f004 f8e0 	bl	800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a8dc:	2500      	movs	r5, #0
 800a8de:	4f8e      	ldr	r7, [pc, #568]	; (800ab18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800a8e0:	4e8e      	ldr	r6, [pc, #568]	; (800ab1c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800a8e2:	f8df 823c 	ldr.w	r8, [pc, #572]	; 800ab20 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>
 800a8e6:	f8df 923c 	ldr.w	r9, [pc, #572]	; 800ab24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800a8ea:	f8d8 2000 	ldr.w	r2, [r8]
 800a8ee:	6863      	ldr	r3, [r4, #4]
 800a8f0:	42aa      	cmp	r2, r5
 800a8f2:	d851      	bhi.n	800a998 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800a8f4:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800a8f8:	4a8b      	ldr	r2, [pc, #556]	; (800ab28 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800a8fa:	f003 0301 	and.w	r3, r3, #1
 800a8fe:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800a902:	a803      	add	r0, sp, #12
 800a904:	4989      	ldr	r1, [pc, #548]	; (800ab2c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800a906:	f7ff fe45 	bl	800a594 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a90a:	4989      	ldr	r1, [pc, #548]	; (800ab30 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800a90c:	a803      	add	r0, sp, #12
 800a90e:	f004 f94b 	bl	800eba8 <PropertiesBuilder::AddComment(char const*)>
 800a912:	2500      	movs	r5, #0
 800a914:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800a918:	4e86      	ldr	r6, [pc, #536]	; (800ab34 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800a91a:	f8df 921c 	ldr.w	r9, [pc, #540]	; 800ab38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>
 800a91e:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800ab3c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800a922:	f104 070d 	add.w	r7, r4, #13
 800a926:	f8d8 3000 	ldr.w	r3, [r8]
 800a92a:	42ab      	cmp	r3, r5
 800a92c:	d87e      	bhi.n	800aa2c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x174>
 800a92e:	4984      	ldr	r1, [pc, #528]	; (800ab40 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800a930:	a803      	add	r0, sp, #12
 800a932:	f004 f939 	bl	800eba8 <PropertiesBuilder::AddComment(char const*)>
 800a936:	2700      	movs	r7, #0
 800a938:	4e82      	ldr	r6, [pc, #520]	; (800ab44 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800a93a:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800ab48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>
 800a93e:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800ab4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800a942:	f104 0915 	add.w	r9, r4, #21
 800a946:	f8d8 3000 	ldr.w	r3, [r8]
 800a94a:	42bb      	cmp	r3, r7
 800a94c:	f200 8082 	bhi.w	800aa54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>
 800a950:	497f      	ldr	r1, [pc, #508]	; (800ab50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800a952:	a803      	add	r0, sp, #12
 800a954:	f004 f928 	bl	800eba8 <PropertiesBuilder::AddComment(char const*)>
 800a958:	6863      	ldr	r3, [r4, #4]
 800a95a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a95e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a962:	42a2      	cmp	r2, r4
 800a964:	f080 80b7 	bcs.w	800aad6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21e>
 800a968:	9803      	ldr	r0, [sp, #12]
 800a96a:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800a96e:	4410      	add	r0, r2
 800a970:	eba4 0402 	sub.w	r4, r4, r2
 800a974:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a978:	f040 809c 	bne.w	800aab4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fc>
 800a97c:	2a00      	cmp	r2, #0
 800a97e:	f040 809a 	bne.w	800aab6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800a982:	9200      	str	r2, [sp, #0]
 800a984:	4b73      	ldr	r3, [pc, #460]	; (800ab54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800a986:	4a71      	ldr	r2, [pc, #452]	; (800ab4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800a988:	e09b      	b.n	800aac2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20a>
 800a98a:	6823      	ldr	r3, [r4, #0]
 800a98c:	4601      	mov	r1, r0
 800a98e:	681a      	ldr	r2, [r3, #0]
 800a990:	4618      	mov	r0, r3
 800a992:	68d2      	ldr	r2, [r2, #12]
 800a994:	4790      	blx	r2
 800a996:	e79b      	b.n	800a8d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800a998:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800a99c:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800a9a0:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800a9a4:	45dc      	cmp	ip, fp
 800a9a6:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800a9aa:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800a9ae:	d221      	bcs.n	800a9f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800a9b0:	2110      	movs	r1, #16
 800a9b2:	9803      	ldr	r0, [sp, #12]
 800a9b4:	40a9      	lsls	r1, r5
 800a9b6:	ea31 0303 	bics.w	r3, r1, r3
 800a9ba:	4460      	add	r0, ip
 800a9bc:	ebab 0b0c 	sub.w	fp, fp, ip
 800a9c0:	f89d c014 	ldrb.w	ip, [sp, #20]
 800a9c4:	d006      	beq.n	800a9d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800a9c6:	f1bc 0f00 	cmp.w	ip, #0
 800a9ca:	d106      	bne.n	800a9da <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800a9cc:	9200      	str	r2, [sp, #0]
 800a9ce:	4633      	mov	r3, r6
 800a9d0:	4a5e      	ldr	r2, [pc, #376]	; (800ab4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800a9d2:	e005      	b.n	800a9e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800a9d4:	f1bc 0f00 	cmp.w	ip, #0
 800a9d8:	d022      	beq.n	800aa20 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x168>
 800a9da:	9200      	str	r2, [sp, #0]
 800a9dc:	4633      	mov	r3, r6
 800a9de:	464a      	mov	r2, r9
 800a9e0:	4659      	mov	r1, fp
 800a9e2:	f005 f915 	bl	800fc10 <snprintf>
 800a9e6:	4583      	cmp	fp, r0
 800a9e8:	bfa2      	ittt	ge
 800a9ea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a9ee:	18c0      	addge	r0, r0, r3
 800a9f0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a9f4:	8aa3      	ldrh	r3, [r4, #20]
 800a9f6:	fa23 f30a 	lsr.w	r3, r3, sl
 800a9fa:	f013 0303 	ands.w	r3, r3, #3
 800a9fe:	d013      	beq.n	800aa28 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>
 800aa00:	4a55      	ldr	r2, [pc, #340]	; (800ab58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800aa02:	4956      	ldr	r1, [pc, #344]	; (800ab5c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800aa04:	2b02      	cmp	r3, #2
 800aa06:	bf08      	it	eq
 800aa08:	460a      	moveq	r2, r1
 800aa0a:	3b01      	subs	r3, #1
 800aa0c:	4639      	mov	r1, r7
 800aa0e:	bf18      	it	ne
 800aa10:	2301      	movne	r3, #1
 800aa12:	a803      	add	r0, sp, #12
 800aa14:	f7ff fdbe 	bl	800a594 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800aa18:	3501      	adds	r5, #1
 800aa1a:	3712      	adds	r7, #18
 800aa1c:	3610      	adds	r6, #16
 800aa1e:	e764      	b.n	800a8ea <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800aa20:	9200      	str	r2, [sp, #0]
 800aa22:	4633      	mov	r3, r6
 800aa24:	4a48      	ldr	r2, [pc, #288]	; (800ab48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800aa26:	e7db      	b.n	800a9e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800aa28:	4a4d      	ldr	r2, [pc, #308]	; (800ab60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800aa2a:	e7ee      	b.n	800aa0a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x152>
 800aa2c:	6861      	ldr	r1, [r4, #4]
 800aa2e:	fa0b f305 	lsl.w	r3, fp, r5
 800aa32:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800aa36:	438b      	bics	r3, r1
 800aa38:	bf0c      	ite	eq
 800aa3a:	2301      	moveq	r3, #1
 800aa3c:	2300      	movne	r3, #0
 800aa3e:	4631      	mov	r1, r6
 800aa40:	2a00      	cmp	r2, #0
 800aa42:	bf0c      	ite	eq
 800aa44:	464a      	moveq	r2, r9
 800aa46:	4652      	movne	r2, sl
 800aa48:	a803      	add	r0, sp, #12
 800aa4a:	f7ff fda3 	bl	800a594 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800aa4e:	3501      	adds	r5, #1
 800aa50:	3612      	adds	r6, #18
 800aa52:	e768      	b.n	800a926 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800aa54:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800aa58:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aa5c:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800aa60:	42a9      	cmp	r1, r5
 800aa62:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800aa66:	d21e      	bcs.n	800aaa6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ee>
 800aa68:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800aa6c:	9803      	ldr	r0, [sp, #12]
 800aa6e:	40ba      	lsls	r2, r7
 800aa70:	ea32 0c0c 	bics.w	ip, r2, ip
 800aa74:	4408      	add	r0, r1
 800aa76:	eba5 0501 	sub.w	r5, r5, r1
 800aa7a:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800aa7e:	d004      	beq.n	800aa8a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800aa80:	b921      	cbnz	r1, 800aa8c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800aa82:	9300      	str	r3, [sp, #0]
 800aa84:	465a      	mov	r2, fp
 800aa86:	4633      	mov	r3, r6
 800aa88:	e003      	b.n	800aa92 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1da>
 800aa8a:	b179      	cbz	r1, 800aaac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f4>
 800aa8c:	9300      	str	r3, [sp, #0]
 800aa8e:	4633      	mov	r3, r6
 800aa90:	4a24      	ldr	r2, [pc, #144]	; (800ab24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800aa92:	4629      	mov	r1, r5
 800aa94:	f005 f8bc 	bl	800fc10 <snprintf>
 800aa98:	4285      	cmp	r5, r0
 800aa9a:	bfa2      	ittt	ge
 800aa9c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800aaa0:	18c0      	addge	r0, r0, r3
 800aaa2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800aaa6:	3701      	adds	r7, #1
 800aaa8:	3612      	adds	r6, #18
 800aaaa:	e74c      	b.n	800a946 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800aaac:	9300      	str	r3, [sp, #0]
 800aaae:	4652      	mov	r2, sl
 800aab0:	4633      	mov	r3, r6
 800aab2:	e7ee      	b.n	800aa92 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1da>
 800aab4:	b34a      	cbz	r2, 800ab0a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x252>
 800aab6:	3b00      	subs	r3, #0
 800aab8:	bf18      	it	ne
 800aaba:	2301      	movne	r3, #1
 800aabc:	4a19      	ldr	r2, [pc, #100]	; (800ab24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800aabe:	9300      	str	r3, [sp, #0]
 800aac0:	4b24      	ldr	r3, [pc, #144]	; (800ab54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800aac2:	4621      	mov	r1, r4
 800aac4:	f005 f8a4 	bl	800fc10 <snprintf>
 800aac8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aacc:	4284      	cmp	r4, r0
 800aace:	bfa4      	itt	ge
 800aad0:	181b      	addge	r3, r3, r0
 800aad2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800aad6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aada:	b17b      	cbz	r3, 800aafc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x244>
 800aadc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aae0:	9b03      	ldr	r3, [sp, #12]
 800aae2:	4413      	add	r3, r2
 800aae4:	227d      	movs	r2, #125	; 0x7d
 800aae6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800aaea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aaee:	9903      	ldr	r1, [sp, #12]
 800aaf0:	54ca      	strb	r2, [r1, r3]
 800aaf2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aaf6:	3301      	adds	r3, #1
 800aaf8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800aafc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ab00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ab02:	601a      	str	r2, [r3, #0]
 800ab04:	b007      	add	sp, #28
 800ab06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab0a:	2301      	movs	r3, #1
 800ab0c:	4a0e      	ldr	r2, [pc, #56]	; (800ab48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800ab0e:	9300      	str	r3, [sp, #0]
 800ab10:	4b10      	ldr	r3, [pc, #64]	; (800ab54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ab12:	e7d6      	b.n	800aac2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20a>
 800ab14:	0801313e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, ip, sp}
 800ab18:	08013811 	stmdaeq	r1, {r0, r4, fp, ip, sp}
 800ab1c:	0801374f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp}
 800ab20:	20000c70 	andcs	r0, r0, r0, ror ip
 800ab24:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800ab28:	0801311c 	stmdaeq	r1, {r2, r3, r4, r8, ip, sp}
 800ab2c:	080137ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 800ab30:	08013105 	stmdaeq	r1, {r0, r2, r8, ip, sp}
 800ab34:	0801378f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, sl, ip, sp}
 800ab38:	08013101 	stmdaeq	r1, {r0, r8, ip, sp}
 800ab3c:	080130fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, ip, sp}
 800ab40:	08013110 	stmdaeq	r1, {r4, r8, ip, sp}
 800ab44:	0801312c 	stmdaeq	r1, {r2, r3, r5, r8, ip, sp}
 800ab48:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}
 800ab4c:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800ab50:	08011ff4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800ab54:	080137e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp}
 800ab58:	080130ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, ip, sp}
 800ab5c:	080130f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, ip, sp}
 800ab60:	080130e8 	stmdaeq	r1, {r3, r5, r6, r7, ip, sp}

0800ab64 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ab64:	b513      	push	{r0, r1, r4, lr}
 800ab66:	6804      	ldr	r4, [r0, #0]
 800ab68:	b914      	cbnz	r4, 800ab70 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ab6a:	601c      	str	r4, [r3, #0]
 800ab6c:	b002      	add	sp, #8
 800ab6e:	bd10      	pop	{r4, pc}
 800ab70:	9300      	str	r3, [sp, #0]
 800ab72:	4613      	mov	r3, r2
 800ab74:	460a      	mov	r2, r1
 800ab76:	2100      	movs	r1, #0
 800ab78:	f7ff fe9e 	bl	800a8b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ab7c:	e7f6      	b.n	800ab6c <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800ab80 <E131Params::Set(unsigned int)>:
 800ab80:	6843      	ldr	r3, [r0, #4]
 800ab82:	2b00      	cmp	r3, #0
 800ab84:	d037      	beq.n	800abf6 <E131Params::Set(unsigned int)+0x76>
 800ab86:	4b1c      	ldr	r3, [pc, #112]	; (800abf8 <E131Params::Set(unsigned int)+0x78>)
 800ab88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab8c:	681a      	ldr	r2, [r3, #0]
 800ab8e:	4b1b      	ldr	r3, [pc, #108]	; (800abfc <E131Params::Set(unsigned int)+0x7c>)
 800ab90:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800ab94:	681f      	ldr	r7, [r3, #0]
 800ab96:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800ab9a:	2300      	movs	r3, #0
 800ab9c:	f04f 090c 	mov.w	r9, #12
 800aba0:	f100 040e 	add.w	r4, r0, #14
 800aba4:	f202 5861 	addw	r8, r2, #1377	; 0x561
 800aba8:	429f      	cmp	r7, r3
 800abaa:	6845      	ldr	r5, [r0, #4]
 800abac:	d10a      	bne.n	800abc4 <E131Params::Set(unsigned int)+0x44>
 800abae:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800abb2:	f8c2 3510 	str.w	r3, [r2, #1296]	; 0x510
 800abb6:	04ab      	lsls	r3, r5, #18
 800abb8:	bf44      	itt	mi
 800abba:	2301      	movmi	r3, #1
 800abbc:	f882 34f9 	strbmi.w	r3, [r2, #1273]	; 0x4f9
 800abc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800abc4:	42cb      	cmn	r3, r1
 800abc6:	d1f2      	bne.n	800abae <E131Params::Set(unsigned int)+0x2e>
 800abc8:	fa0c f603 	lsl.w	r6, ip, r3
 800abcc:	43ae      	bics	r6, r5
 800abce:	bf04      	itt	eq
 800abd0:	7826      	ldrbeq	r6, [r4, #0]
 800abd2:	f8c2 6550 	streq.w	r6, [r2, #1360]	; 0x550
 800abd6:	fa0e f603 	lsl.w	r6, lr, r3
 800abda:	43ae      	bics	r6, r5
 800abdc:	d108      	bne.n	800abf0 <E131Params::Set(unsigned int)+0x70>
 800abde:	7a26      	ldrb	r6, [r4, #8]
 800abe0:	1e75      	subs	r5, r6, #1
 800abe2:	b2ed      	uxtb	r5, r5
 800abe4:	2dc7      	cmp	r5, #199	; 0xc7
 800abe6:	bf9c      	itt	ls
 800abe8:	fb09 f503 	mulls.w	r5, r9, r3
 800abec:	f808 6005 	strbls.w	r6, [r8, r5]
 800abf0:	3301      	adds	r3, #1
 800abf2:	3401      	adds	r4, #1
 800abf4:	e7d8      	b.n	800aba8 <E131Params::Set(unsigned int)+0x28>
 800abf6:	4770      	bx	lr
 800abf8:	20000c68 	andcs	r0, r0, r8, ror #24
 800abfc:	20000c70 	andcs	r0, r0, r0, ror ip

0800ac00 <E131Params::Dump()>:
 800ac00:	4770      	bx	lr

0800ac02 <uuid_unparse_x>:
 800ac02:	4603      	mov	r3, r0
 800ac04:	b530      	push	{r4, r5, lr}
 800ac06:	4608      	mov	r0, r1
 800ac08:	4611      	mov	r1, r2
 800ac0a:	681a      	ldr	r2, [r3, #0]
 800ac0c:	b08f      	sub	sp, #60	; 0x3c
 800ac0e:	ba12      	rev	r2, r2
 800ac10:	920a      	str	r2, [sp, #40]	; 0x28
 800ac12:	889a      	ldrh	r2, [r3, #4]
 800ac14:	891c      	ldrh	r4, [r3, #8]
 800ac16:	ba52      	rev16	r2, r2
 800ac18:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ac1c:	88da      	ldrh	r2, [r3, #6]
 800ac1e:	ba64      	rev16	r4, r4
 800ac20:	ba52      	rev16	r2, r2
 800ac22:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800ac26:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800ac2a:	f103 020a 	add.w	r2, r3, #10
 800ac2e:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800ac32:	3310      	adds	r3, #16
 800ac34:	4293      	cmp	r3, r2
 800ac36:	d122      	bne.n	800ac7e <uuid_unparse_x+0x7c>
 800ac38:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800ac3c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800ac40:	9208      	str	r2, [sp, #32]
 800ac42:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800ac46:	0a1b      	lsrs	r3, r3, #8
 800ac48:	9207      	str	r2, [sp, #28]
 800ac4a:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800ac4e:	9301      	str	r3, [sp, #4]
 800ac50:	9206      	str	r2, [sp, #24]
 800ac52:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800ac56:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800ac5a:	9205      	str	r2, [sp, #20]
 800ac5c:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800ac60:	9300      	str	r3, [sp, #0]
 800ac62:	9204      	str	r2, [sp, #16]
 800ac64:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800ac68:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800ac6c:	9203      	str	r2, [sp, #12]
 800ac6e:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800ac72:	9202      	str	r2, [sp, #8]
 800ac74:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ac76:	f004 ffb3 	bl	800fbe0 <sprintf>
 800ac7a:	b00f      	add	sp, #60	; 0x3c
 800ac7c:	bd30      	pop	{r4, r5, pc}
 800ac7e:	f812 5b01 	ldrb.w	r5, [r2], #1
 800ac82:	f804 5f01 	strb.w	r5, [r4, #1]!
 800ac86:	e7d5      	b.n	800ac34 <uuid_unparse_x+0x32>

0800ac88 <uuid_unparse>:
 800ac88:	4a01      	ldr	r2, [pc, #4]	; (800ac90 <uuid_unparse+0x8>)
 800ac8a:	f7ff bfba 	b.w	800ac02 <uuid_unparse_x>
 800ac8e:	bf00      	nop
 800ac90:	08013155 	stmdaeq	r1, {r0, r2, r4, r6, r8, ip, sp}

0800ac94 <DmxSend::~DmxSend()>:
 800ac94:	4770      	bx	lr
	...

0800ac98 <DmxSend::Start(unsigned int)>:
 800ac98:	2301      	movs	r3, #1
 800ac9a:	b430      	push	{r4, r5}
 800ac9c:	4c08      	ldr	r4, [pc, #32]	; (800acc0 <DmxSend::Start(unsigned int)+0x28>)
 800ac9e:	fa03 f001 	lsl.w	r0, r3, r1
 800aca2:	7822      	ldrb	r2, [r4, #0]
 800aca4:	ea30 0502 	bics.w	r5, r0, r2
 800aca8:	d007      	beq.n	800acba <DmxSend::Start(unsigned int)+0x22>
 800acaa:	4302      	orrs	r2, r0
 800acac:	4805      	ldr	r0, [pc, #20]	; (800acc4 <DmxSend::Start(unsigned int)+0x2c>)
 800acae:	7022      	strb	r2, [r4, #0]
 800acb0:	6800      	ldr	r0, [r0, #0]
 800acb2:	2200      	movs	r2, #0
 800acb4:	bc30      	pop	{r4, r5}
 800acb6:	f000 bc99 	b.w	800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800acba:	bc30      	pop	{r4, r5}
 800acbc:	4770      	bx	lr
 800acbe:	bf00      	nop
 800acc0:	20000c74 	andcs	r0, r0, r4, ror ip
 800acc4:	200010a4 	andcs	r1, r0, r4, lsr #1

0800acc8 <DmxSend::Stop(unsigned int)>:
 800acc8:	2201      	movs	r2, #1
 800acca:	b410      	push	{r4}
 800accc:	4809      	ldr	r0, [pc, #36]	; (800acf4 <DmxSend::Stop(unsigned int)+0x2c>)
 800acce:	408a      	lsls	r2, r1
 800acd0:	7803      	ldrb	r3, [r0, #0]
 800acd2:	ea03 0402 	and.w	r4, r3, r2
 800acd6:	439a      	bics	r2, r3
 800acd8:	d109      	bne.n	800acee <DmxSend::Stop(unsigned int)+0x26>
 800acda:	ea23 0304 	bic.w	r3, r3, r4
 800acde:	7003      	strb	r3, [r0, #0]
 800ace0:	2300      	movs	r3, #0
 800ace2:	4805      	ldr	r0, [pc, #20]	; (800acf8 <DmxSend::Stop(unsigned int)+0x30>)
 800ace4:	461a      	mov	r2, r3
 800ace6:	6800      	ldr	r0, [r0, #0]
 800ace8:	bc10      	pop	{r4}
 800acea:	f000 bc7f 	b.w	800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800acee:	bc10      	pop	{r4}
 800acf0:	4770      	bx	lr
 800acf2:	bf00      	nop
 800acf4:	20000c74 	andcs	r0, r0, r4, ror ip
 800acf8:	200010a4 	andcs	r1, r0, r4, lsr #1

0800acfc <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800acfc:	b11b      	cbz	r3, 800ad06 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800acfe:	4802      	ldr	r0, [pc, #8]	; (800ad08 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800ad00:	6800      	ldr	r0, [r0, #0]
 800ad02:	f000 bdd3 	b.w	800b8ac <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800ad06:	4770      	bx	lr
 800ad08:	200010a4 	andcs	r1, r0, r4, lsr #1

0800ad0c <DmxSend::Blackout(bool)>:
 800ad0c:	4b01      	ldr	r3, [pc, #4]	; (800ad14 <DmxSend::Blackout(bool)+0x8>)
 800ad0e:	6818      	ldr	r0, [r3, #0]
 800ad10:	f000 bdf2 	b.w	800b8f8 <Dmx::Blackout()>
 800ad14:	200010a4 	andcs	r1, r0, r4, lsr #1

0800ad18 <DmxSend::FullOn()>:
 800ad18:	4b01      	ldr	r3, [pc, #4]	; (800ad20 <DmxSend::FullOn()+0x8>)
 800ad1a:	6818      	ldr	r0, [r3, #0]
 800ad1c:	f000 be14 	b.w	800b948 <Dmx::FullOn()>
 800ad20:	200010a4 	andcs	r1, r0, r4, lsr #1

0800ad24 <DmxSend::Print()>:
 800ad24:	b510      	push	{r4, lr}
 800ad26:	4c0e      	ldr	r4, [pc, #56]	; (800ad60 <DmxSend::Print()+0x3c>)
 800ad28:	480e      	ldr	r0, [pc, #56]	; (800ad64 <DmxSend::Print()+0x40>)
 800ad2a:	f004 ff49 	bl	800fbc0 <printf>
 800ad2e:	6823      	ldr	r3, [r4, #0]
 800ad30:	480d      	ldr	r0, [pc, #52]	; (800ad68 <DmxSend::Print()+0x44>)
 800ad32:	6819      	ldr	r1, [r3, #0]
 800ad34:	f004 ff44 	bl	800fbc0 <printf>
 800ad38:	6823      	ldr	r3, [r4, #0]
 800ad3a:	480c      	ldr	r0, [pc, #48]	; (800ad6c <DmxSend::Print()+0x48>)
 800ad3c:	6859      	ldr	r1, [r3, #4]
 800ad3e:	f004 ff3f 	bl	800fbc0 <printf>
 800ad42:	6823      	ldr	r3, [r4, #0]
 800ad44:	490a      	ldr	r1, [pc, #40]	; (800ad70 <DmxSend::Print()+0x4c>)
 800ad46:	689b      	ldr	r3, [r3, #8]
 800ad48:	480a      	ldr	r0, [pc, #40]	; (800ad74 <DmxSend::Print()+0x50>)
 800ad4a:	fbb1 f1f3 	udiv	r1, r1, r3
 800ad4e:	f004 ff37 	bl	800fbc0 <printf>
 800ad52:	6823      	ldr	r3, [r4, #0]
 800ad54:	4808      	ldr	r0, [pc, #32]	; (800ad78 <DmxSend::Print()+0x54>)
 800ad56:	8a19      	ldrh	r1, [r3, #16]
 800ad58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad5c:	f004 bf30 	b.w	800fbc0 <printf>
 800ad60:	200010a4 	andcs	r1, r0, r4, lsr #1
 800ad64:	08013186 	stmdaeq	r1, {r1, r2, r7, r8, ip, sp}
 800ad68:	08013190 	stmdaeq	r1, {r4, r7, r8, ip, sp}
 800ad6c:	080131a4 	stmdaeq	r1, {r2, r5, r7, r8, ip, sp}
 800ad70:	000f4240 	andeq	r4, pc, r0, asr #4
 800ad74:	080131b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, sp}
 800ad78:	080131cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp}

0800ad7c <DmxSend::~DmxSend()>:
 800ad7c:	b510      	push	{r4, lr}
 800ad7e:	4604      	mov	r4, r0
 800ad80:	f004 fc52 	bl	800f628 <operator delete(void*)>
 800ad84:	4620      	mov	r0, r4
 800ad86:	bd10      	pop	{r4, pc}

0800ad88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800ad88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad8a:	88c6      	ldrh	r6, [r0, #6]
 800ad8c:	8885      	ldrh	r5, [r0, #4]
 800ad8e:	42ae      	cmp	r6, r5
 800ad90:	d216      	bcs.n	800adc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800ad92:	4604      	mov	r4, r0
 800ad94:	6800      	ldr	r0, [r0, #0]
 800ad96:	1bad      	subs	r5, r5, r6
 800ad98:	4430      	add	r0, r6
 800ad9a:	7a26      	ldrb	r6, [r4, #8]
 800ad9c:	b923      	cbnz	r3, 800ada8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800ad9e:	b926      	cbnz	r6, 800adaa <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800ada0:	9200      	str	r2, [sp, #0]
 800ada2:	460b      	mov	r3, r1
 800ada4:	4a09      	ldr	r2, [pc, #36]	; (800adcc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800ada6:	e003      	b.n	800adb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ada8:	b166      	cbz	r6, 800adc4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800adaa:	460b      	mov	r3, r1
 800adac:	9200      	str	r2, [sp, #0]
 800adae:	4a08      	ldr	r2, [pc, #32]	; (800add0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800adb0:	4629      	mov	r1, r5
 800adb2:	f004 ff2d 	bl	800fc10 <snprintf>
 800adb6:	4285      	cmp	r5, r0
 800adb8:	bfa2      	ittt	ge
 800adba:	88e3      	ldrhge	r3, [r4, #6]
 800adbc:	181b      	addge	r3, r3, r0
 800adbe:	80e3      	strhge	r3, [r4, #6]
 800adc0:	b002      	add	sp, #8
 800adc2:	bd70      	pop	{r4, r5, r6, pc}
 800adc4:	9200      	str	r2, [sp, #0]
 800adc6:	460b      	mov	r3, r1
 800adc8:	4a02      	ldr	r2, [pc, #8]	; (800add4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800adca:	e7f1      	b.n	800adb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800adcc:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800add0:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800add4:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}

0800add8 <DmxParams::DmxParams(DmxParamsStore*)>:
 800add8:	6001      	str	r1, [r0, #0]
 800adda:	2100      	movs	r1, #0
 800addc:	4a03      	ldr	r2, [pc, #12]	; (800adec <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800adde:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ade2:	f64f 7228 	movw	r2, #65320	; 0xff28
 800ade6:	8182      	strh	r2, [r0, #12]
 800ade8:	4770      	bx	lr
 800adea:	bf00      	nop
 800adec:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800adf0 <DmxParams::Load()>:
 800adf0:	b508      	push	{r3, lr}
 800adf2:	2300      	movs	r3, #0
 800adf4:	4601      	mov	r1, r0
 800adf6:	6043      	str	r3, [r0, #4]
 800adf8:	6800      	ldr	r0, [r0, #0]
 800adfa:	b120      	cbz	r0, 800ae06 <DmxParams::Load()+0x16>
 800adfc:	6803      	ldr	r3, [r0, #0]
 800adfe:	3104      	adds	r1, #4
 800ae00:	68db      	ldr	r3, [r3, #12]
 800ae02:	4798      	blx	r3
 800ae04:	2001      	movs	r0, #1
 800ae06:	bd08      	pop	{r3, pc}

0800ae08 <DmxParams::Load(char const*, unsigned int)>:
 800ae08:	6803      	ldr	r3, [r0, #0]
 800ae0a:	b1d3      	cbz	r3, 800ae42 <DmxParams::Load(char const*, unsigned int)+0x3a>
 800ae0c:	2300      	movs	r3, #0
 800ae0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae10:	460d      	mov	r5, r1
 800ae12:	4616      	mov	r6, r2
 800ae14:	4604      	mov	r4, r0
 800ae16:	6043      	str	r3, [r0, #4]
 800ae18:	4602      	mov	r2, r0
 800ae1a:	490a      	ldr	r1, [pc, #40]	; (800ae44 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800ae1c:	4668      	mov	r0, sp
 800ae1e:	f003 fedd 	bl	800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ae22:	4632      	mov	r2, r6
 800ae24:	4629      	mov	r1, r5
 800ae26:	4668      	mov	r0, sp
 800ae28:	f003 fedc 	bl	800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>
 800ae2c:	4621      	mov	r1, r4
 800ae2e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ae32:	6803      	ldr	r3, [r0, #0]
 800ae34:	689b      	ldr	r3, [r3, #8]
 800ae36:	4798      	blx	r3
 800ae38:	4668      	mov	r0, sp
 800ae3a:	f003 fed2 	bl	800ebe2 <ReadConfigFile::~ReadConfigFile()>
 800ae3e:	b002      	add	sp, #8
 800ae40:	bd70      	pop	{r4, r5, r6, pc}
 800ae42:	4770      	bx	lr
 800ae44:	0800af15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, sp, pc}

0800ae48 <DmxParams::callbackFunction(char const*)>:
 800ae48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae4a:	460d      	mov	r5, r1
 800ae4c:	4604      	mov	r4, r0
 800ae4e:	492d      	ldr	r1, [pc, #180]	; (800af04 <DmxParams::callbackFunction(char const*)+0xbc>)
 800ae50:	4628      	mov	r0, r5
 800ae52:	f10d 0206 	add.w	r2, sp, #6
 800ae56:	f003 ff53 	bl	800ed00 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ae5a:	b988      	cbnz	r0, 800ae80 <DmxParams::callbackFunction(char const*)+0x38>
 800ae5c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ae60:	6863      	ldr	r3, [r4, #4]
 800ae62:	2a5b      	cmp	r2, #91	; 0x5b
 800ae64:	d907      	bls.n	800ae76 <DmxParams::callbackFunction(char const*)+0x2e>
 800ae66:	2ab0      	cmp	r2, #176	; 0xb0
 800ae68:	d005      	beq.n	800ae76 <DmxParams::callbackFunction(char const*)+0x2e>
 800ae6a:	8122      	strh	r2, [r4, #8]
 800ae6c:	f043 0301 	orr.w	r3, r3, #1
 800ae70:	6063      	str	r3, [r4, #4]
 800ae72:	b003      	add	sp, #12
 800ae74:	bd30      	pop	{r4, r5, pc}
 800ae76:	22b0      	movs	r2, #176	; 0xb0
 800ae78:	f023 0301 	bic.w	r3, r3, #1
 800ae7c:	8122      	strh	r2, [r4, #8]
 800ae7e:	e7f7      	b.n	800ae70 <DmxParams::callbackFunction(char const*)+0x28>
 800ae80:	4628      	mov	r0, r5
 800ae82:	4921      	ldr	r1, [pc, #132]	; (800af08 <DmxParams::callbackFunction(char const*)+0xc0>)
 800ae84:	f10d 0206 	add.w	r2, sp, #6
 800ae88:	f003 ff3a 	bl	800ed00 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ae8c:	b968      	cbnz	r0, 800aeaa <DmxParams::callbackFunction(char const*)+0x62>
 800ae8e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ae92:	6863      	ldr	r3, [r4, #4]
 800ae94:	2a0c      	cmp	r2, #12
 800ae96:	bf93      	iteet	ls
 800ae98:	220c      	movls	r2, #12
 800ae9a:	8162      	strhhi	r2, [r4, #10]
 800ae9c:	f043 0302 	orrhi.w	r3, r3, #2
 800aea0:	8162      	strhls	r2, [r4, #10]
 800aea2:	bf98      	it	ls
 800aea4:	f023 0302 	bicls.w	r3, r3, #2
 800aea8:	e7e2      	b.n	800ae70 <DmxParams::callbackFunction(char const*)+0x28>
 800aeaa:	4628      	mov	r0, r5
 800aeac:	4917      	ldr	r1, [pc, #92]	; (800af0c <DmxParams::callbackFunction(char const*)+0xc4>)
 800aeae:	f10d 0205 	add.w	r2, sp, #5
 800aeb2:	f003 ff43 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aeb6:	b950      	cbnz	r0, 800aece <DmxParams::callbackFunction(char const*)+0x86>
 800aeb8:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800aebc:	6863      	ldr	r3, [r4, #4]
 800aebe:	2a28      	cmp	r2, #40	; 0x28
 800aec0:	7322      	strb	r2, [r4, #12]
 800aec2:	bf14      	ite	ne
 800aec4:	f043 0304 	orrne.w	r3, r3, #4
 800aec8:	f023 0304 	biceq.w	r3, r3, #4
 800aecc:	e7d0      	b.n	800ae70 <DmxParams::callbackFunction(char const*)+0x28>
 800aece:	4628      	mov	r0, r5
 800aed0:	490f      	ldr	r1, [pc, #60]	; (800af10 <DmxParams::callbackFunction(char const*)+0xc8>)
 800aed2:	f10d 0206 	add.w	r2, sp, #6
 800aed6:	f003 ff13 	bl	800ed00 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aeda:	2800      	cmp	r0, #0
 800aedc:	d1c9      	bne.n	800ae72 <DmxParams::callbackFunction(char const*)+0x2a>
 800aede:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aee2:	6863      	ldr	r3, [r4, #4]
 800aee4:	1e91      	subs	r1, r2, #2
 800aee6:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800aeea:	bf2f      	iteee	cs
 800aeec:	22ff      	movcs	r2, #255	; 0xff
 800aeee:	0852      	lsrcc	r2, r2, #1
 800aef0:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800aef4:	7362      	strbcc	r2, [r4, #13]
 800aef6:	bf32      	itee	cc
 800aef8:	f043 0308 	orrcc.w	r3, r3, #8
 800aefc:	7362      	strbcs	r2, [r4, #13]
 800aefe:	f023 0308 	biccs.w	r3, r3, #8
 800af02:	e7b5      	b.n	800ae70 <DmxParams::callbackFunction(char const*)+0x28>
 800af04:	08013218 	stmdaeq	r1, {r3, r4, r9, ip, sp}
 800af08:	0801323c 	stmdaeq	r1, {r2, r3, r4, r5, r9, ip, sp}
 800af0c:	0801322f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, ip, sp}
 800af10:	08013223 	stmdaeq	r1, {r0, r1, r5, r9, ip, sp}

0800af14 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800af14:	f7ff bf98 	b.w	800ae48 <DmxParams::callbackFunction(char const*)>

0800af18 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800af18:	b570      	push	{r4, r5, r6, lr}
 800af1a:	4604      	mov	r4, r0
 800af1c:	4615      	mov	r5, r2
 800af1e:	461e      	mov	r6, r3
 800af20:	b086      	sub	sp, #24
 800af22:	3004      	adds	r0, #4
 800af24:	b369      	cbz	r1, 800af82 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800af26:	220a      	movs	r2, #10
 800af28:	f004 fc19 	bl	800f75e <memmove>
 800af2c:	462a      	mov	r2, r5
 800af2e:	4633      	mov	r3, r6
 800af30:	4932      	ldr	r1, [pc, #200]	; (800affc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800af32:	a803      	add	r0, sp, #12
 800af34:	f003 fdb2 	bl	800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800af38:	6863      	ldr	r3, [r4, #4]
 800af3a:	8922      	ldrh	r2, [r4, #8]
 800af3c:	4930      	ldr	r1, [pc, #192]	; (800b000 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800af3e:	f003 0301 	and.w	r3, r3, #1
 800af42:	a803      	add	r0, sp, #12
 800af44:	f7ff ff20 	bl	800ad88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800af48:	6863      	ldr	r3, [r4, #4]
 800af4a:	8962      	ldrh	r2, [r4, #10]
 800af4c:	492d      	ldr	r1, [pc, #180]	; (800b004 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800af4e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800af52:	a803      	add	r0, sp, #12
 800af54:	f7ff ff18 	bl	800ad88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800af58:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af5c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800af60:	7b23      	ldrb	r3, [r4, #12]
 800af62:	42aa      	cmp	r2, r5
 800af64:	6861      	ldr	r1, [r4, #4]
 800af66:	d221      	bcs.n	800afac <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800af68:	9803      	ldr	r0, [sp, #12]
 800af6a:	0749      	lsls	r1, r1, #29
 800af6c:	4410      	add	r0, r2
 800af6e:	eba5 0502 	sub.w	r5, r5, r2
 800af72:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800af76:	d40b      	bmi.n	800af90 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800af78:	b95a      	cbnz	r2, 800af92 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800af7a:	9300      	str	r3, [sp, #0]
 800af7c:	4a22      	ldr	r2, [pc, #136]	; (800b008 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800af7e:	4b23      	ldr	r3, [pc, #140]	; (800b00c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800af80:	e00a      	b.n	800af98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800af82:	6823      	ldr	r3, [r4, #0]
 800af84:	4601      	mov	r1, r0
 800af86:	681a      	ldr	r2, [r3, #0]
 800af88:	4618      	mov	r0, r3
 800af8a:	68d2      	ldr	r2, [r2, #12]
 800af8c:	4790      	blx	r2
 800af8e:	e7cd      	b.n	800af2c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800af90:	b37a      	cbz	r2, 800aff2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800af92:	9300      	str	r3, [sp, #0]
 800af94:	4a1e      	ldr	r2, [pc, #120]	; (800b010 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800af96:	4b1d      	ldr	r3, [pc, #116]	; (800b00c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800af98:	4629      	mov	r1, r5
 800af9a:	f004 fe39 	bl	800fc10 <snprintf>
 800af9e:	4285      	cmp	r5, r0
 800afa0:	bfa2      	ittt	ge
 800afa2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800afa6:	18c0      	addge	r0, r0, r3
 800afa8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800afac:	7b62      	ldrb	r2, [r4, #13]
 800afae:	6863      	ldr	r3, [r4, #4]
 800afb0:	3201      	adds	r2, #1
 800afb2:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800afb6:	4917      	ldr	r1, [pc, #92]	; (800b014 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800afb8:	0052      	lsls	r2, r2, #1
 800afba:	a803      	add	r0, sp, #12
 800afbc:	f7ff fee4 	bl	800ad88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800afc0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800afc4:	b17b      	cbz	r3, 800afe6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800afc6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800afca:	9b03      	ldr	r3, [sp, #12]
 800afcc:	4413      	add	r3, r2
 800afce:	227d      	movs	r2, #125	; 0x7d
 800afd0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800afd4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800afd8:	9903      	ldr	r1, [sp, #12]
 800afda:	54ca      	strb	r2, [r1, r3]
 800afdc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800afe0:	3301      	adds	r3, #1
 800afe2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800afe6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800afea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800afec:	601a      	str	r2, [r3, #0]
 800afee:	b006      	add	sp, #24
 800aff0:	bd70      	pop	{r4, r5, r6, pc}
 800aff2:	9300      	str	r3, [sp, #0]
 800aff4:	4a08      	ldr	r2, [pc, #32]	; (800b018 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800aff6:	4b05      	ldr	r3, [pc, #20]	; (800b00c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800aff8:	e7ce      	b.n	800af98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800affa:	bf00      	nop
 800affc:	08013245 	stmdaeq	r1, {r0, r2, r6, r9, ip, sp}
 800b000:	08013218 	stmdaeq	r1, {r3, r4, r9, ip, sp}
 800b004:	0801323c 	stmdaeq	r1, {r2, r3, r4, r5, r9, ip, sp}
 800b008:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800b00c:	0801322f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, ip, sp}
 800b010:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800b014:	08013223 	stmdaeq	r1, {r0, r1, r5, r9, ip, sp}
 800b018:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}

0800b01c <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800b01c:	b513      	push	{r0, r1, r4, lr}
 800b01e:	6804      	ldr	r4, [r0, #0]
 800b020:	b914      	cbnz	r4, 800b028 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b022:	601c      	str	r4, [r3, #0]
 800b024:	b002      	add	sp, #8
 800b026:	bd10      	pop	{r4, pc}
 800b028:	9300      	str	r3, [sp, #0]
 800b02a:	4613      	mov	r3, r2
 800b02c:	460a      	mov	r2, r1
 800b02e:	2100      	movs	r1, #0
 800b030:	f7ff ff72 	bl	800af18 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800b034:	e7f6      	b.n	800b024 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800b038 <DmxParams::Set(Dmx*)>:
 800b038:	b538      	push	{r3, r4, r5, lr}
 800b03a:	6843      	ldr	r3, [r0, #4]
 800b03c:	4604      	mov	r4, r0
 800b03e:	07d8      	lsls	r0, r3, #31
 800b040:	460d      	mov	r5, r1
 800b042:	d503      	bpl.n	800b04c <DmxParams::Set(Dmx*)+0x14>
 800b044:	4628      	mov	r0, r5
 800b046:	8921      	ldrh	r1, [r4, #8]
 800b048:	f000 fc0c 	bl	800b864 <Dmx::SetDmxBreakTime(unsigned int)>
 800b04c:	6863      	ldr	r3, [r4, #4]
 800b04e:	0799      	lsls	r1, r3, #30
 800b050:	d503      	bpl.n	800b05a <DmxParams::Set(Dmx*)+0x22>
 800b052:	4628      	mov	r0, r5
 800b054:	8961      	ldrh	r1, [r4, #10]
 800b056:	f000 fc0f 	bl	800b878 <Dmx::SetDmxMabTime(unsigned int)>
 800b05a:	6863      	ldr	r3, [r4, #4]
 800b05c:	075a      	lsls	r2, r3, #29
 800b05e:	d507      	bpl.n	800b070 <DmxParams::Set(Dmx*)+0x38>
 800b060:	7b21      	ldrb	r1, [r4, #12]
 800b062:	b111      	cbz	r1, 800b06a <DmxParams::Set(Dmx*)+0x32>
 800b064:	4b08      	ldr	r3, [pc, #32]	; (800b088 <DmxParams::Set(Dmx*)+0x50>)
 800b066:	fbb3 f1f1 	udiv	r1, r3, r1
 800b06a:	4628      	mov	r0, r5
 800b06c:	f000 fbca 	bl	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b070:	6863      	ldr	r3, [r4, #4]
 800b072:	071b      	lsls	r3, r3, #28
 800b074:	d507      	bpl.n	800b086 <DmxParams::Set(Dmx*)+0x4e>
 800b076:	7b61      	ldrb	r1, [r4, #13]
 800b078:	4628      	mov	r0, r5
 800b07a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b07e:	3101      	adds	r1, #1
 800b080:	0049      	lsls	r1, r1, #1
 800b082:	f000 bc03 	b.w	800b88c <Dmx::SetDmxSlots(unsigned short)>
 800b086:	bd38      	pop	{r3, r4, r5, pc}
 800b088:	000f4240 	andeq	r4, pc, r0, asr #4

0800b08c <DmxParams::Dump()>:
 800b08c:	4770      	bx	lr
	...

0800b090 <USART2_IRQHandler>:
 800b090:	b510      	push	{r4, lr}
 800b092:	2408      	movs	r4, #8
 800b094:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 800b098:	4975      	ldr	r1, [pc, #468]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b09a:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800b09e:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800b0a2:	f013 0f02 	tst.w	r3, #2
 800b0a6:	4b73      	ldr	r3, [pc, #460]	; (800b274 <USART2_IRQHandler+0x1e4>)
 800b0a8:	d018      	beq.n	800b0dc <USART2_IRQHandler+0x4c>
 800b0aa:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800b0ae:	f020 0002 	bic.w	r0, r0, #2
 800b0b2:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 800b0b6:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b0ba:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b0be:	b962      	cbnz	r2, 800b0da <USART2_IRQHandler+0x4a>
 800b0c0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b0c4:	2201      	movs	r2, #1
 800b0c6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b0ca:	2310      	movs	r3, #16
 800b0cc:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800b0d0:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b0d4:	2320      	movs	r3, #32
 800b0d6:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b0da:	bd10      	pop	{r4, pc}
 800b0dc:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b0e0:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 800b0e4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b0e8:	2807      	cmp	r0, #7
 800b0ea:	f200 80bc 	bhi.w	800b266 <USART2_IRQHandler+0x1d6>
 800b0ee:	e8df f000 	tbb	[pc, r0]
 800b0f2:	41ba1804 			; <UNDEFINED> instruction: 0x41ba1804
 800b0f6:	a1807056 	orrge	r7, r0, r6, asr r0
 800b0fa:	701a      	strb	r2, [r3, #0]
 800b0fc:	2107      	movs	r1, #7
 800b0fe:	2201      	movs	r2, #1
 800b100:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b104:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b108:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b10c:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 800b110:	4a59      	ldr	r2, [pc, #356]	; (800b278 <USART2_IRQHandler+0x1e8>)
 800b112:	b29b      	uxth	r3, r3
 800b114:	8193      	strh	r3, [r2, #12]
 800b116:	2210      	movs	r2, #16
 800b118:	4b55      	ldr	r3, [pc, #340]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b11a:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b11e:	2220      	movs	r2, #32
 800b120:	e017      	b.n	800b152 <USART2_IRQHandler+0xc2>
 800b122:	b11a      	cbz	r2, 800b12c <USART2_IRQHandler+0x9c>
 800b124:	2acc      	cmp	r2, #204	; 0xcc
 800b126:	d01b      	beq.n	800b160 <USART2_IRQHandler+0xd0>
 800b128:	2200      	movs	r2, #0
 800b12a:	e05f      	b.n	800b1ec <USART2_IRQHandler+0x15c>
 800b12c:	701a      	strb	r2, [r3, #0]
 800b12e:	2201      	movs	r2, #1
 800b130:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b134:	4a50      	ldr	r2, [pc, #320]	; (800b278 <USART2_IRQHandler+0x1e8>)
 800b136:	6851      	ldr	r1, [r2, #4]
 800b138:	3101      	adds	r1, #1
 800b13a:	6051      	str	r1, [r2, #4]
 800b13c:	2103      	movs	r1, #3
 800b13e:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b142:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b146:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 800b14a:	b29b      	uxth	r3, r3
 800b14c:	8193      	strh	r3, [r2, #12]
 800b14e:	2210      	movs	r2, #16
 800b150:	4b47      	ldr	r3, [pc, #284]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b152:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b156:	2208      	movs	r2, #8
 800b158:	4b45      	ldr	r3, [pc, #276]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b15a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b15e:	e7bc      	b.n	800b0da <USART2_IRQHandler+0x4a>
 800b160:	701a      	strb	r2, [r3, #0]
 800b162:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b166:	2201      	movs	r2, #1
 800b168:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b16c:	2204      	movs	r2, #4
 800b16e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b172:	e7ec      	b.n	800b14e <USART2_IRQHandler+0xbe>
 800b174:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b178:	545a      	strb	r2, [r3, r1]
 800b17a:	1c4a      	adds	r2, r1, #1
 800b17c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800b180:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b184:	d95e      	bls.n	800b244 <USART2_IRQHandler+0x1b4>
 800b186:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b18a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b18e:	2200      	movs	r2, #0
 800b190:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b194:	2210      	movs	r2, #16
 800b196:	4b36      	ldr	r3, [pc, #216]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b198:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b19c:	e7db      	b.n	800b156 <USART2_IRQHandler+0xc6>
 800b19e:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b1a2:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 800b1a6:	545a      	strb	r2, [r3, r1]
 800b1a8:	1c48      	adds	r0, r1, #1
 800b1aa:	3917      	subs	r1, #23
 800b1ac:	4422      	add	r2, r4
 800b1ae:	29e9      	cmp	r1, #233	; 0xe9
 800b1b0:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800b1b4:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b1b8:	d807      	bhi.n	800b1ca <USART2_IRQHandler+0x13a>
 800b1ba:	789a      	ldrb	r2, [r3, #2]
 800b1bc:	4290      	cmp	r0, r2
 800b1be:	d104      	bne.n	800b1ca <USART2_IRQHandler+0x13a>
 800b1c0:	2205      	movs	r2, #5
 800b1c2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1c6:	4b2a      	ldr	r3, [pc, #168]	; (800b270 <USART2_IRQHandler+0x1e0>)
 800b1c8:	e7a9      	b.n	800b11e <USART2_IRQHandler+0x8e>
 800b1ca:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 800b1ce:	d3c2      	bcc.n	800b156 <USART2_IRQHandler+0xc6>
 800b1d0:	e7aa      	b.n	800b128 <USART2_IRQHandler+0x98>
 800b1d2:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b1d6:	545a      	strb	r2, [r3, r1]
 800b1d8:	3101      	adds	r1, #1
 800b1da:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 800b1de:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800b1e2:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 800b1e6:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b1ea:	2206      	movs	r2, #6
 800b1ec:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1f0:	e7b1      	b.n	800b156 <USART2_IRQHandler+0xc6>
 800b1f2:	2020      	movs	r0, #32
 800b1f4:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800b1f8:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 800b1fc:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 800b200:	541a      	strb	r2, [r3, r0]
 800b202:	1aa2      	subs	r2, r4, r2
 800b204:	b292      	uxth	r2, r2
 800b206:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b20a:	b912      	cbnz	r2, 800b212 <USART2_IRQHandler+0x182>
 800b20c:	785a      	ldrb	r2, [r3, #1]
 800b20e:	2a01      	cmp	r2, #1
 800b210:	d003      	beq.n	800b21a <USART2_IRQHandler+0x18a>
 800b212:	2200      	movs	r2, #0
 800b214:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b218:	e786      	b.n	800b128 <USART2_IRQHandler+0x98>
 800b21a:	3001      	adds	r0, #1
 800b21c:	4a17      	ldr	r2, [pc, #92]	; (800b27c <USART2_IRQHandler+0x1ec>)
 800b21e:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 800b222:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800b226:	6850      	ldr	r0, [r2, #4]
 800b228:	4a15      	ldr	r2, [pc, #84]	; (800b280 <USART2_IRQHandler+0x1f0>)
 800b22a:	6010      	str	r0, [r2, #0]
 800b22c:	2210      	movs	r2, #16
 800b22e:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 800b232:	e779      	b.n	800b128 <USART2_IRQHandler+0x98>
 800b234:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b238:	2917      	cmp	r1, #23
 800b23a:	bf9e      	ittt	ls
 800b23c:	545a      	strbls	r2, [r3, r1]
 800b23e:	3101      	addls	r1, #1
 800b240:	f8c3 1204 	strls.w	r1, [r3, #516]	; 0x204
 800b244:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800b248:	480b      	ldr	r0, [pc, #44]	; (800b278 <USART2_IRQHandler+0x1e8>)
 800b24a:	f8d1 2424 	ldr.w	r2, [r1, #1060]	; 0x424
 800b24e:	8983      	ldrh	r3, [r0, #12]
 800b250:	b292      	uxth	r2, r2
 800b252:	b29b      	uxth	r3, r3
 800b254:	f1c3 0304 	rsb	r3, r3, #4
 800b258:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b25c:	b29b      	uxth	r3, r3
 800b25e:	8182      	strh	r2, [r0, #12]
 800b260:	f8c1 3434 	str.w	r3, [r1, #1076]	; 0x434
 800b264:	e777      	b.n	800b156 <USART2_IRQHandler+0xc6>
 800b266:	2200      	movs	r2, #0
 800b268:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b26c:	e7be      	b.n	800b1ec <USART2_IRQHandler+0x15c>
 800b26e:	bf00      	nop
 800b270:	40010000 	andmi	r0, r1, r0
 800b274:	20000c78 	andcs	r0, r0, r8, ror ip
 800b278:	20001090 	mulcs	r0, r0, r0
 800b27c:	e0001000 	and	r1, r0, r0
 800b280:	200010a8 	andcs	r1, r0, r8, lsr #1

0800b284 <TIMER1_IRQHandler>:
 800b284:	b538      	push	{r3, r4, r5, lr}
 800b286:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b28a:	2008      	movs	r0, #8
 800b28c:	4a23      	ldr	r2, [pc, #140]	; (800b31c <TIMER1_IRQHandler+0x98>)
 800b28e:	691c      	ldr	r4, [r3, #16]
 800b290:	4923      	ldr	r1, [pc, #140]	; (800b320 <TIMER1_IRQHandler+0x9c>)
 800b292:	8813      	ldrh	r3, [r2, #0]
 800b294:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 800b298:	07a1      	lsls	r1, r4, #30
 800b29a:	b29b      	uxth	r3, r3
 800b29c:	d51b      	bpl.n	800b2d6 <TIMER1_IRQHandler+0x52>
 800b29e:	07dd      	lsls	r5, r3, #31
 800b2a0:	d50f      	bpl.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b2a2:	8813      	ldrh	r3, [r2, #0]
 800b2a4:	4d1f      	ldr	r5, [pc, #124]	; (800b324 <TIMER1_IRQHandler+0xa0>)
 800b2a6:	b29b      	uxth	r3, r3
 800b2a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b2ac:	8013      	strh	r3, [r2, #0]
 800b2ae:	2110      	movs	r1, #16
 800b2b0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2b4:	2203      	movs	r2, #3
 800b2b6:	4628      	mov	r0, r5
 800b2b8:	f005 fb8a 	bl	80109d0 <gpio_init>
 800b2bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2c0:	616b      	str	r3, [r5, #20]
 800b2c2:	4621      	mov	r1, r4
 800b2c4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b2c8:	f005 fe5f 	bl	8010f8a <timer_interrupt_flag_clear>
 800b2cc:	2208      	movs	r2, #8
 800b2ce:	4b14      	ldr	r3, [pc, #80]	; (800b320 <TIMER1_IRQHandler+0x9c>)
 800b2d0:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b2d4:	bd38      	pop	{r3, r4, r5, pc}
 800b2d6:	0760      	lsls	r0, r4, #29
 800b2d8:	d509      	bpl.n	800b2ee <TIMER1_IRQHandler+0x6a>
 800b2da:	05d9      	lsls	r1, r3, #23
 800b2dc:	d5f1      	bpl.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b2de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2e2:	2203      	movs	r2, #3
 800b2e4:	2118      	movs	r1, #24
 800b2e6:	480f      	ldr	r0, [pc, #60]	; (800b324 <TIMER1_IRQHandler+0xa0>)
 800b2e8:	f005 fb72 	bl	80109d0 <gpio_init>
 800b2ec:	e7e9      	b.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b2ee:	0722      	lsls	r2, r4, #28
 800b2f0:	d5e7      	bpl.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b2f2:	05db      	lsls	r3, r3, #23
 800b2f4:	d5e5      	bpl.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b2f6:	4b0c      	ldr	r3, [pc, #48]	; (800b328 <TIMER1_IRQHandler+0xa4>)
 800b2f8:	2180      	movs	r1, #128	; 0x80
 800b2fa:	69da      	ldr	r2, [r3, #28]
 800b2fc:	480b      	ldr	r0, [pc, #44]	; (800b32c <TIMER1_IRQHandler+0xa8>)
 800b2fe:	f022 0201 	bic.w	r2, r2, #1
 800b302:	61da      	str	r2, [r3, #28]
 800b304:	4a0a      	ldr	r2, [pc, #40]	; (800b330 <TIMER1_IRQHandler+0xac>)
 800b306:	629a      	str	r2, [r3, #40]	; 0x28
 800b308:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800b30c:	621a      	str	r2, [r3, #32]
 800b30e:	69da      	ldr	r2, [r3, #28]
 800b310:	f042 0201 	orr.w	r2, r2, #1
 800b314:	61da      	str	r2, [r3, #28]
 800b316:	f005 fed7 	bl	80110c8 <usart_dma_transmit_config>
 800b31a:	e7d2      	b.n	800b2c2 <TIMER1_IRQHandler+0x3e>
 800b31c:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b320:	40010000 	andmi	r0, r1, r0
 800b324:	40011000 	andmi	r1, r1, r0
 800b328:	40020000 	andmi	r0, r2, r0
 800b32c:	40004800 	andmi	r4, r0, r0, lsl #16
 800b330:	20000e88 	andcs	r0, r0, r8, lsl #29

0800b334 <TIMER2_IRQHandler>:
 800b334:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b338:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800b33c:	078b      	lsls	r3, r1, #30
 800b33e:	d511      	bpl.n	800b364 <TIMER2_IRQHandler+0x30>
 800b340:	4b13      	ldr	r3, [pc, #76]	; (800b390 <TIMER2_IRQHandler+0x5c>)
 800b342:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b346:	2a03      	cmp	r2, #3
 800b348:	d10f      	bne.n	800b36a <TIMER2_IRQHandler+0x36>
 800b34a:	2200      	movs	r2, #0
 800b34c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b350:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b354:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b358:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b35c:	2210      	movs	r2, #16
 800b35e:	4b0d      	ldr	r3, [pc, #52]	; (800b394 <TIMER2_IRQHandler+0x60>)
 800b360:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b364:	480c      	ldr	r0, [pc, #48]	; (800b398 <TIMER2_IRQHandler+0x64>)
 800b366:	f005 be10 	b.w	8010f8a <timer_interrupt_flag_clear>
 800b36a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b36e:	2a07      	cmp	r2, #7
 800b370:	d1f8      	bne.n	800b364 <TIMER2_IRQHandler+0x30>
 800b372:	2200      	movs	r2, #0
 800b374:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b378:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b37c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b380:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b384:	2210      	movs	r2, #16
 800b386:	4b03      	ldr	r3, [pc, #12]	; (800b394 <TIMER2_IRQHandler+0x60>)
 800b388:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b38c:	2220      	movs	r2, #32
 800b38e:	e7e7      	b.n	800b360 <TIMER2_IRQHandler+0x2c>
 800b390:	20000c78 	andcs	r0, r0, r8, ror ip
 800b394:	40010000 	andmi	r0, r1, r0
 800b398:	40000400 	andmi	r0, r0, r0, lsl #8

0800b39c <TIMER3_IRQHandler>:
 800b39c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b3a0:	4802      	ldr	r0, [pc, #8]	; (800b3ac <TIMER3_IRQHandler+0x10>)
 800b3a2:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800b3a6:	f005 bdf0 	b.w	8010f8a <timer_interrupt_flag_clear>
 800b3aa:	bf00      	nop
 800b3ac:	40000800 	andmi	r0, r0, r0, lsl #16

0800b3b0 <TIMER6_IRQHandler>:
 800b3b0:	4b05      	ldr	r3, [pc, #20]	; (800b3c8 <TIMER6_IRQHandler+0x18>)
 800b3b2:	4806      	ldr	r0, [pc, #24]	; (800b3cc <TIMER6_IRQHandler+0x1c>)
 800b3b4:	685a      	ldr	r2, [r3, #4]
 800b3b6:	6899      	ldr	r1, [r3, #8]
 800b3b8:	1a52      	subs	r2, r2, r1
 800b3ba:	601a      	str	r2, [r3, #0]
 800b3bc:	685a      	ldr	r2, [r3, #4]
 800b3be:	2101      	movs	r1, #1
 800b3c0:	609a      	str	r2, [r3, #8]
 800b3c2:	f005 bde2 	b.w	8010f8a <timer_interrupt_flag_clear>
 800b3c6:	bf00      	nop
 800b3c8:	20001090 	mulcs	r0, r0, r0
 800b3cc:	40001400 	andmi	r1, r0, r0, lsl #8

0800b3d0 <Dmx::ClearData(unsigned int)>:
 800b3d0:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b3d4:	b510      	push	{r4, lr}
 800b3d6:	2400      	movs	r4, #0
 800b3d8:	4a08      	ldr	r2, [pc, #32]	; (800b3fc <Dmx::ClearData(unsigned int)+0x2c>)
 800b3da:	fb03 2301 	mla	r3, r3, r1, r2
 800b3de:	f203 2002 	addw	r0, r3, #514	; 0x202
 800b3e2:	f823 4b02 	strh.w	r4, [r3], #2
 800b3e6:	4283      	cmp	r3, r0
 800b3e8:	d1fb      	bne.n	800b3e2 <Dmx::ClearData(unsigned int)+0x12>
 800b3ea:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b3ee:	fb03 2201 	mla	r2, r3, r1, r2
 800b3f2:	f240 2301 	movw	r3, #513	; 0x201
 800b3f6:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800b3fa:	bd10      	pop	{r4, pc}
 800b3fc:	20000e88 	andcs	r0, r0, r8, lsl #29

0800b400 <Dmx::StartData(unsigned int, unsigned int)>:
 800b400:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b402:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800b406:	6943      	ldr	r3, [r0, #20]
 800b408:	460c      	mov	r4, r1
 800b40a:	4615      	mov	r5, r2
 800b40c:	b085      	sub	sp, #20
 800b40e:	2b00      	cmp	r3, #0
 800b410:	d16c      	bne.n	800b4ec <Dmx::StartData(unsigned int, unsigned int)+0xec>
 800b412:	4e48      	ldr	r6, [pc, #288]	; (800b534 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800b414:	8834      	ldrh	r4, [r6, #0]
 800b416:	b2a4      	uxth	r4, r4
 800b418:	2c00      	cmp	r4, #0
 800b41a:	d15b      	bne.n	800b4d4 <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 800b41c:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800b420:	f005 fb6e 	bl	8010b00 <rcu_periph_clock_enable>
 800b424:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b428:	f005 fcb8 	bl	8010d9c <timer_deinit>
 800b42c:	236b      	movs	r3, #107	; 0x6b
 800b42e:	9300      	str	r3, [sp, #0]
 800b430:	4b41      	ldr	r3, [pc, #260]	; (800b538 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800b432:	4669      	mov	r1, sp
 800b434:	681b      	ldr	r3, [r3, #0]
 800b436:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b43a:	9302      	str	r3, [sp, #8]
 800b43c:	f8ad 4004 	strh.w	r4, [sp, #4]
 800b440:	f8ad 400c 	strh.w	r4, [sp, #12]
 800b444:	f88d 400e 	strb.w	r4, [sp, #14]
 800b448:	f005 fd0a 	bl	8010e60 <timer_init>
 800b44c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b450:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b454:	f005 fd9c 	bl	8010f90 <timer_flag_clear>
 800b458:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b45c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b460:	f005 fd93 	bl	8010f8a <timer_interrupt_flag_clear>
 800b464:	2210      	movs	r2, #16
 800b466:	4621      	mov	r1, r4
 800b468:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b46c:	f005 fd55 	bl	8010f1a <timer_channel_output_mode_config>
 800b470:	2210      	movs	r2, #16
 800b472:	2101      	movs	r1, #1
 800b474:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b478:	f005 fd4f 	bl	8010f1a <timer_channel_output_mode_config>
 800b47c:	4f2f      	ldr	r7, [pc, #188]	; (800b53c <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800b47e:	2210      	movs	r2, #16
 800b480:	2102      	movs	r1, #2
 800b482:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b486:	f005 fd48 	bl	8010f1a <timer_channel_output_mode_config>
 800b48a:	4622      	mov	r2, r4
 800b48c:	4621      	mov	r1, r4
 800b48e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b492:	f005 fd68 	bl	8010f66 <timer_channel_output_pulse_value_config>
 800b496:	2101      	movs	r1, #1
 800b498:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b49c:	883a      	ldrh	r2, [r7, #0]
 800b49e:	f005 fd62 	bl	8010f66 <timer_channel_output_pulse_value_config>
 800b4a2:	4b27      	ldr	r3, [pc, #156]	; (800b540 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800b4a4:	683a      	ldr	r2, [r7, #0]
 800b4a6:	681b      	ldr	r3, [r3, #0]
 800b4a8:	2102      	movs	r1, #2
 800b4aa:	441a      	add	r2, r3
 800b4ac:	b292      	uxth	r2, r2
 800b4ae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4b2:	f005 fd58 	bl	8010f66 <timer_channel_output_pulse_value_config>
 800b4b6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4ba:	210e      	movs	r1, #14
 800b4bc:	f005 fd61 	bl	8010f82 <timer_interrupt_enable>
 800b4c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4c4:	4b1f      	ldr	r3, [pc, #124]	; (800b544 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800b4c6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4ca:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800b4ce:	601a      	str	r2, [r3, #0]
 800b4d0:	f005 fd1e 	bl	8010f10 <timer_enable>
 800b4d4:	2201      	movs	r2, #1
 800b4d6:	8831      	ldrh	r1, [r6, #0]
 800b4d8:	fa02 f305 	lsl.w	r3, r2, r5
 800b4dc:	430b      	orrs	r3, r1
 800b4de:	b29b      	uxth	r3, r3
 800b4e0:	8033      	strh	r3, [r6, #0]
 800b4e2:	4b19      	ldr	r3, [pc, #100]	; (800b548 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b4e4:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b4e8:	b005      	add	sp, #20
 800b4ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4ec:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b4f0:	4b16      	ldr	r3, [pc, #88]	; (800b54c <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800b4f2:	fb02 3305 	mla	r3, r2, r5, r3
 800b4f6:	2200      	movs	r2, #0
 800b4f8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b4fc:	2107      	movs	r1, #7
 800b4fe:	4620      	mov	r0, r4
 800b500:	f005 fde8 	bl	80110d4 <usart_flag_get>
 800b504:	2800      	cmp	r0, #0
 800b506:	d0f9      	beq.n	800b4fc <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 800b508:	4620      	mov	r0, r4
 800b50a:	4911      	ldr	r1, [pc, #68]	; (800b550 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800b50c:	f005 fe04 	bl	8011118 <usart_interrupt_flag_clear>
 800b510:	f240 3105 	movw	r1, #773	; 0x305
 800b514:	4620      	mov	r0, r4
 800b516:	f005 fde8 	bl	80110ea <usart_interrupt_enable>
 800b51a:	2202      	movs	r2, #2
 800b51c:	4b0a      	ldr	r3, [pc, #40]	; (800b548 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b51e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b522:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b526:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b52a:	f043 0302 	orr.w	r3, r3, #2
 800b52e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b532:	e7d9      	b.n	800b4e8 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800b534:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b538:	20000000 	andcs	r0, r0, r0
 800b53c:	20000008 	andcs	r0, r0, r8
 800b540:	20000004 	andcs	r0, r0, r4
 800b544:	e000e100 	and	lr, r0, r0, lsl #2
 800b548:	2000108c 	andcs	r1, r0, ip, lsl #1
 800b54c:	20000c78 	andcs	r0, r0, r8, ror ip
 800b550:	00050305 	andeq	r0, r5, r5, lsl #6

0800b554 <Dmx::StopData(unsigned int, unsigned int)>:
 800b554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b558:	4f21      	ldr	r7, [pc, #132]	; (800b5e0 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800b55a:	4688      	mov	r8, r1
 800b55c:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800b560:	4614      	mov	r4, r2
 800b562:	b323      	cbz	r3, 800b5ae <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 800b564:	6943      	ldr	r3, [r0, #20]
 800b566:	bb23      	cbnz	r3, 800b5b2 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800b568:	2601      	movs	r6, #1
 800b56a:	4d1e      	ldr	r5, [pc, #120]	; (800b5e4 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800b56c:	fa06 f202 	lsl.w	r2, r6, r2
 800b570:	882b      	ldrh	r3, [r5, #0]
 800b572:	b29b      	uxth	r3, r3
 800b574:	ea23 0302 	bic.w	r3, r3, r2
 800b578:	802b      	strh	r3, [r5, #0]
 800b57a:	f3bf 8f5f 	dmb	sy
 800b57e:	882b      	ldrh	r3, [r5, #0]
 800b580:	f104 0208 	add.w	r2, r4, #8
 800b584:	b29b      	uxth	r3, r3
 800b586:	4096      	lsls	r6, r2
 800b588:	ea36 0303 	bics.w	r3, r6, r3
 800b58c:	d105      	bne.n	800b59a <Dmx::StopData(unsigned int, unsigned int)+0x46>
 800b58e:	2107      	movs	r1, #7
 800b590:	4640      	mov	r0, r8
 800b592:	f005 fd9f 	bl	80110d4 <usart_flag_get>
 800b596:	2801      	cmp	r0, #1
 800b598:	d1f9      	bne.n	800b58e <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 800b59a:	882b      	ldrh	r3, [r5, #0]
 800b59c:	b29b      	uxth	r3, r3
 800b59e:	ea23 0306 	bic.w	r3, r3, r6
 800b5a2:	802b      	strh	r3, [r5, #0]
 800b5a4:	f3bf 8f4f 	dsb	sy
 800b5a8:	2300      	movs	r3, #0
 800b5aa:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800b5ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5b2:	f240 3105 	movw	r1, #773	; 0x305
 800b5b6:	4640      	mov	r0, r8
 800b5b8:	f005 fda2 	bl	8011100 <usart_interrupt_disable>
 800b5bc:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b5c0:	4b09      	ldr	r3, [pc, #36]	; (800b5e8 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800b5c2:	fb02 3304 	mla	r3, r2, r4, r3
 800b5c6:	2200      	movs	r2, #0
 800b5c8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b5cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b5d0:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b5d4:	f023 0302 	bic.w	r3, r3, #2
 800b5d8:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b5dc:	e7e4      	b.n	800b5a8 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 800b5de:	bf00      	nop
 800b5e0:	2000108c 	andcs	r1, r0, ip, lsl #1
 800b5e4:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b5e8:	20000c78 	andcs	r0, r0, r8, ror ip

0800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800b5ec:	b570      	push	{r4, r5, r6, lr}
 800b5ee:	461d      	mov	r5, r3
 800b5f0:	6943      	ldr	r3, [r0, #20]
 800b5f2:	4606      	mov	r6, r0
 800b5f4:	4293      	cmp	r3, r2
 800b5f6:	4614      	mov	r4, r2
 800b5f8:	d014      	beq.n	800b624 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800b5fa:	6142      	str	r2, [r0, #20]
 800b5fc:	4910      	ldr	r1, [pc, #64]	; (800b640 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b5fe:	2200      	movs	r2, #0
 800b600:	f7ff ffa8 	bl	800b554 <Dmx::StopData(unsigned int, unsigned int)>
 800b604:	b934      	cbnz	r4, 800b614 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800b606:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b60a:	4b0e      	ldr	r3, [pc, #56]	; (800b644 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b60c:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b610:	b94d      	cbnz	r5, 800b626 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800b612:	bd70      	pop	{r4, r5, r6, pc}
 800b614:	2c01      	cmp	r4, #1
 800b616:	d1fb      	bne.n	800b610 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b618:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b61c:	4b09      	ldr	r3, [pc, #36]	; (800b644 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b61e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b622:	e7f5      	b.n	800b610 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b624:	b135      	cbz	r5, 800b634 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800b626:	4630      	mov	r0, r6
 800b628:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b62c:	2200      	movs	r2, #0
 800b62e:	4904      	ldr	r1, [pc, #16]	; (800b640 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b630:	f7ff bee6 	b.w	800b400 <Dmx::StartData(unsigned int, unsigned int)>
 800b634:	462a      	mov	r2, r5
 800b636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b63a:	4901      	ldr	r1, [pc, #4]	; (800b640 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b63c:	f7ff bf8a 	b.w	800b554 <Dmx::StopData(unsigned int, unsigned int)>
 800b640:	40004800 	andmi	r4, r0, r0, lsl #16
 800b644:	40010000 	andmi	r0, r1, r0

0800b648 <Dmx::Dmx()>:
 800b648:	225c      	movs	r2, #92	; 0x5c
 800b64a:	230c      	movs	r3, #12
 800b64c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b650:	e9c0 2300 	strd	r2, r3, [r0]
 800b654:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800b658:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800b65c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b660:	2400      	movs	r4, #0
 800b662:	4605      	mov	r5, r0
 800b664:	8203      	strh	r3, [r0, #16]
 800b666:	4b5d      	ldr	r3, [pc, #372]	; (800b7dc <Dmx::Dmx()+0x194>)
 800b668:	b08b      	sub	sp, #44	; 0x2c
 800b66a:	6018      	str	r0, [r3, #0]
 800b66c:	4b5c      	ldr	r3, [pc, #368]	; (800b7e0 <Dmx::Dmx()+0x198>)
 800b66e:	2203      	movs	r2, #3
 800b670:	801c      	strh	r4, [r3, #0]
 800b672:	2110      	movs	r1, #16
 800b674:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b678:	485a      	ldr	r0, [pc, #360]	; (800b7e4 <Dmx::Dmx()+0x19c>)
 800b67a:	f005 f9a9 	bl	80109d0 <gpio_init>
 800b67e:	4621      	mov	r1, r4
 800b680:	4628      	mov	r0, r5
 800b682:	f7ff fea5 	bl	800b3d0 <Dmx::ClearData(unsigned int)>
 800b686:	4b58      	ldr	r3, [pc, #352]	; (800b7e8 <Dmx::Dmx()+0x1a0>)
 800b688:	2201      	movs	r2, #1
 800b68a:	4628      	mov	r0, r5
 800b68c:	601c      	str	r4, [r3, #0]
 800b68e:	4623      	mov	r3, r4
 800b690:	f7ff ffac 	bl	800b5ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800b694:	4b55      	ldr	r3, [pc, #340]	; (800b7ec <Dmx::Dmx()+0x1a4>)
 800b696:	4e56      	ldr	r6, [pc, #344]	; (800b7f0 <Dmx::Dmx()+0x1a8>)
 800b698:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800b69c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800b6a0:	f005 fa2e 	bl	8010b00 <rcu_periph_clock_enable>
 800b6a4:	f240 5001 	movw	r0, #1281	; 0x501
 800b6a8:	f005 fa2a 	bl	8010b00 <rcu_periph_clock_enable>
 800b6ac:	4630      	mov	r0, r6
 800b6ae:	2101      	movs	r1, #1
 800b6b0:	f004 fcd4 	bl	801005c <dma_deinit>
 800b6b4:	4b4f      	ldr	r3, [pc, #316]	; (800b7f4 <Dmx::Dmx()+0x1ac>)
 800b6b6:	2701      	movs	r7, #1
 800b6b8:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800b6bc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800b6c0:	9308      	str	r3, [sp, #32]
 800b6c2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b6c6:	aa03      	add	r2, sp, #12
 800b6c8:	4639      	mov	r1, r7
 800b6ca:	4630      	mov	r0, r6
 800b6cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b6d0:	9406      	str	r4, [sp, #24]
 800b6d2:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800b6d6:	f004 fcdd 	bl	8010094 <dma_init>
 800b6da:	4639      	mov	r1, r7
 800b6dc:	4630      	mov	r0, r6
 800b6de:	f004 fd13 	bl	8010108 <dma_circulation_disable>
 800b6e2:	4639      	mov	r1, r7
 800b6e4:	4630      	mov	r0, r6
 800b6e6:	f004 fd1f 	bl	8010128 <dma_memory_to_memory_disable>
 800b6ea:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800b6ee:	f240 7001 	movw	r0, #1793	; 0x701
 800b6f2:	f005 fa05 	bl	8010b00 <rcu_periph_clock_enable>
 800b6f6:	4630      	mov	r0, r6
 800b6f8:	f005 fb50 	bl	8010d9c <timer_deinit>
 800b6fc:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800b700:	236b      	movs	r3, #107	; 0x6b
 800b702:	4630      	mov	r0, r6
 800b704:	a903      	add	r1, sp, #12
 800b706:	9303      	str	r3, [sp, #12]
 800b708:	f8ad 4010 	strh.w	r4, [sp, #16]
 800b70c:	f8cd 9014 	str.w	r9, [sp, #20]
 800b710:	f8ad 4018 	strh.w	r4, [sp, #24]
 800b714:	f88d 401a 	strb.w	r4, [sp, #26]
 800b718:	f005 fba2 	bl	8010e60 <timer_init>
 800b71c:	4649      	mov	r1, r9
 800b71e:	4630      	mov	r0, r6
 800b720:	f005 fc36 	bl	8010f90 <timer_flag_clear>
 800b724:	4649      	mov	r1, r9
 800b726:	4630      	mov	r0, r6
 800b728:	f005 fc2f 	bl	8010f8a <timer_interrupt_flag_clear>
 800b72c:	4621      	mov	r1, r4
 800b72e:	4630      	mov	r0, r6
 800b730:	2210      	movs	r2, #16
 800b732:	f005 fbf2 	bl	8010f1a <timer_channel_output_mode_config>
 800b736:	4639      	mov	r1, r7
 800b738:	4630      	mov	r0, r6
 800b73a:	2210      	movs	r2, #16
 800b73c:	f005 fbed 	bl	8010f1a <timer_channel_output_mode_config>
 800b740:	4630      	mov	r0, r6
 800b742:	2210      	movs	r2, #16
 800b744:	2102      	movs	r1, #2
 800b746:	f005 fbe8 	bl	8010f1a <timer_channel_output_mode_config>
 800b74a:	2210      	movs	r2, #16
 800b74c:	2103      	movs	r1, #3
 800b74e:	4630      	mov	r0, r6
 800b750:	f005 fbe3 	bl	8010f1a <timer_channel_output_mode_config>
 800b754:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800b758:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800b7f8 <Dmx::Dmx()+0x1b0>
 800b75c:	4630      	mov	r0, r6
 800b75e:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800b762:	f8c8 3000 	str.w	r3, [r8]
 800b766:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800b76a:	f005 fbd1 	bl	8010f10 <timer_enable>
 800b76e:	f240 7005 	movw	r0, #1797	; 0x705
 800b772:	f005 f9c5 	bl	8010b00 <rcu_periph_clock_enable>
 800b776:	4630      	mov	r0, r6
 800b778:	f005 fb10 	bl	8010d9c <timer_deinit>
 800b77c:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800b780:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b784:	f242 7310 	movw	r3, #10000	; 0x2710
 800b788:	4630      	mov	r0, r6
 800b78a:	a903      	add	r1, sp, #12
 800b78c:	9305      	str	r3, [sp, #20]
 800b78e:	f005 fb67 	bl	8010e60 <timer_init>
 800b792:	4649      	mov	r1, r9
 800b794:	4630      	mov	r0, r6
 800b796:	f005 fbfb 	bl	8010f90 <timer_flag_clear>
 800b79a:	4649      	mov	r1, r9
 800b79c:	4630      	mov	r0, r6
 800b79e:	f005 fbf4 	bl	8010f8a <timer_interrupt_flag_clear>
 800b7a2:	4639      	mov	r1, r7
 800b7a4:	4630      	mov	r0, r6
 800b7a6:	f005 fbec 	bl	8010f82 <timer_interrupt_enable>
 800b7aa:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800b7ae:	4630      	mov	r0, r6
 800b7b0:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800b7b4:	f8c8 3004 	str.w	r3, [r8, #4]
 800b7b8:	f005 fbaa 	bl	8010f10 <timer_enable>
 800b7bc:	2302      	movs	r3, #2
 800b7be:	2208      	movs	r2, #8
 800b7c0:	9300      	str	r3, [sp, #0]
 800b7c2:	490e      	ldr	r1, [pc, #56]	; (800b7fc <Dmx::Dmx()+0x1b4>)
 800b7c4:	4623      	mov	r3, r4
 800b7c6:	480e      	ldr	r0, [pc, #56]	; (800b800 <Dmx::Dmx()+0x1b8>)
 800b7c8:	f005 fe72 	bl	80114b0 <gd32_uart_begin>
 800b7cc:	2380      	movs	r3, #128	; 0x80
 800b7ce:	4628      	mov	r0, r5
 800b7d0:	f8c8 3004 	str.w	r3, [r8, #4]
 800b7d4:	b00b      	add	sp, #44	; 0x2c
 800b7d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b7da:	bf00      	nop
 800b7dc:	200010a4 	andcs	r1, r0, r4, lsr #1
 800b7e0:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b7e4:	40010c00 	andmi	r0, r1, r0, lsl #24
 800b7e8:	2000108c 	andcs	r1, r0, ip, lsl #1
 800b7ec:	20000c78 	andcs	r0, r0, r8, ror ip
 800b7f0:	40020000 	andmi	r0, r2, r0
 800b7f4:	40004804 	andmi	r4, r0, r4, lsl #16
 800b7f8:	e000e100 	and	lr, r0, r0, lsl #2
 800b7fc:	0003d090 	muleq	r3, r0, r0
 800b800:	40004800 	andmi	r4, r0, r0, lsl #16

0800b804 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800b804:	4b13      	ldr	r3, [pc, #76]	; (800b854 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800b806:	b570      	push	{r4, r5, r6, lr}
 800b808:	60c1      	str	r1, [r0, #12]
 800b80a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800b80e:	232c      	movs	r3, #44	; 0x2c
 800b810:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800b814:	4d10      	ldr	r5, [pc, #64]	; (800b858 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800b816:	4c11      	ldr	r4, [pc, #68]	; (800b85c <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800b818:	4358      	muls	r0, r3
 800b81a:	682a      	ldr	r2, [r5, #0]
 800b81c:	6823      	ldr	r3, [r4, #0]
 800b81e:	4413      	add	r3, r2
 800b820:	4403      	add	r3, r0
 800b822:	42b3      	cmp	r3, r6
 800b824:	d908      	bls.n	800b838 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800b826:	2ab0      	cmp	r2, #176	; 0xb0
 800b828:	4613      	mov	r3, r2
 800b82a:	bf28      	it	cs
 800b82c:	23b0      	movcs	r3, #176	; 0xb0
 800b82e:	220c      	movs	r2, #12
 800b830:	602b      	str	r3, [r5, #0]
 800b832:	4413      	add	r3, r2
 800b834:	6022      	str	r2, [r4, #0]
 800b836:	4403      	add	r3, r0
 800b838:	b109      	cbz	r1, 800b83e <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800b83a:	428b      	cmp	r3, r1
 800b83c:	d906      	bls.n	800b84c <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800b83e:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800b842:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800b846:	4299      	cmp	r1, r3
 800b848:	bf38      	it	cc
 800b84a:	4619      	movcc	r1, r3
 800b84c:	4b04      	ldr	r3, [pc, #16]	; (800b860 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800b84e:	6019      	str	r1, [r3, #0]
 800b850:	bd70      	pop	{r4, r5, r6, pc}
 800b852:	bf00      	nop
 800b854:	20000e88 	andcs	r0, r0, r8, lsl #29
 800b858:	20000008 	andcs	r0, r0, r8
 800b85c:	20000004 	andcs	r0, r0, r4
 800b860:	20000000 	andcs	r0, r0, r0

0800b864 <Dmx::SetDmxBreakTime(unsigned int)>:
 800b864:	295c      	cmp	r1, #92	; 0x5c
 800b866:	bf38      	it	cc
 800b868:	215c      	movcc	r1, #92	; 0x5c
 800b86a:	4b02      	ldr	r3, [pc, #8]	; (800b874 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800b86c:	6019      	str	r1, [r3, #0]
 800b86e:	68c1      	ldr	r1, [r0, #12]
 800b870:	f7ff bfc8 	b.w	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b874:	20000008 	andcs	r0, r0, r8

0800b878 <Dmx::SetDmxMabTime(unsigned int)>:
 800b878:	290c      	cmp	r1, #12
 800b87a:	bf38      	it	cc
 800b87c:	210c      	movcc	r1, #12
 800b87e:	4b02      	ldr	r3, [pc, #8]	; (800b888 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800b880:	6019      	str	r1, [r3, #0]
 800b882:	68c1      	ldr	r1, [r0, #12]
 800b884:	f7ff bfbe 	b.w	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b888:	20000004 	andcs	r0, r0, r4

0800b88c <Dmx::SetDmxSlots(unsigned short)>:
 800b88c:	1e8b      	subs	r3, r1, #2
 800b88e:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800b892:	d809      	bhi.n	800b8a8 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800b894:	6983      	ldr	r3, [r0, #24]
 800b896:	8201      	strh	r1, [r0, #16]
 800b898:	b11b      	cbz	r3, 800b8a2 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800b89a:	4299      	cmp	r1, r3
 800b89c:	bf94      	ite	ls
 800b89e:	6181      	strls	r1, [r0, #24]
 800b8a0:	6183      	strhi	r3, [r0, #24]
 800b8a2:	68c1      	ldr	r1, [r0, #12]
 800b8a4:	f7ff bfae 	b.w	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8a8:	4770      	bx	lr
	...

0800b8ac <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800b8ac:	b470      	push	{r4, r5, r6}
 800b8ae:	8a04      	ldrh	r4, [r0, #16]
 800b8b0:	f44f 7501 	mov.w	r5, #516	; 0x204
 800b8b4:	42a3      	cmp	r3, r4
 800b8b6:	bf28      	it	cs
 800b8b8:	4623      	movcs	r3, r4
 800b8ba:	4c0e      	ldr	r4, [pc, #56]	; (800b8f4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800b8bc:	f892 f000 	pld	[r2]
 800b8c0:	fb05 4401 	mla	r4, r5, r1, r4
 800b8c4:	1c5d      	adds	r5, r3, #1
 800b8c6:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800b8ca:	18d5      	adds	r5, r2, r3
 800b8cc:	4295      	cmp	r5, r2
 800b8ce:	d109      	bne.n	800b8e4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800b8d0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b8d4:	698a      	ldr	r2, [r1, #24]
 800b8d6:	429a      	cmp	r2, r3
 800b8d8:	d009      	beq.n	800b8ee <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800b8da:	bc70      	pop	{r4, r5, r6}
 800b8dc:	618b      	str	r3, [r1, #24]
 800b8de:	68c1      	ldr	r1, [r0, #12]
 800b8e0:	f7ff bf90 	b.w	800b804 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8e4:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b8e8:	f804 6f01 	strb.w	r6, [r4, #1]!
 800b8ec:	e7ee      	b.n	800b8cc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800b8ee:	bc70      	pop	{r4, r5, r6}
 800b8f0:	4770      	bx	lr
 800b8f2:	bf00      	nop
 800b8f4:	20000e88 	andcs	r0, r0, r8, lsl #29

0800b8f8 <Dmx::Blackout()>:
 800b8f8:	4a10      	ldr	r2, [pc, #64]	; (800b93c <Dmx::Blackout()+0x44>)
 800b8fa:	b510      	push	{r4, lr}
 800b8fc:	8813      	ldrh	r3, [r2, #0]
 800b8fe:	b29b      	uxth	r3, r3
 800b900:	b903      	cbnz	r3, 800b904 <Dmx::Blackout()+0xc>
 800b902:	bd10      	pop	{r4, pc}
 800b904:	f3bf 8f5f 	dmb	sy
 800b908:	8813      	ldrh	r3, [r2, #0]
 800b90a:	05db      	lsls	r3, r3, #23
 800b90c:	d5f9      	bpl.n	800b902 <Dmx::Blackout()+0xa>
 800b90e:	4c0c      	ldr	r4, [pc, #48]	; (800b940 <Dmx::Blackout()+0x48>)
 800b910:	2107      	movs	r1, #7
 800b912:	4620      	mov	r0, r4
 800b914:	f005 fbde 	bl	80110d4 <usart_flag_get>
 800b918:	2801      	cmp	r0, #1
 800b91a:	d1f9      	bne.n	800b910 <Dmx::Blackout()+0x18>
 800b91c:	2300      	movs	r3, #0
 800b91e:	4a09      	ldr	r2, [pc, #36]	; (800b944 <Dmx::Blackout()+0x4c>)
 800b920:	461c      	mov	r4, r3
 800b922:	4611      	mov	r1, r2
 800b924:	f240 1001 	movw	r0, #257	; 0x101
 800b928:	3301      	adds	r3, #1
 800b92a:	4283      	cmp	r3, r0
 800b92c:	f822 4b02 	strh.w	r4, [r2], #2
 800b930:	d1fa      	bne.n	800b928 <Dmx::Blackout()+0x30>
 800b932:	f04f 0300 	mov.w	r3, #0
 800b936:	700b      	strb	r3, [r1, #0]
 800b938:	e7e3      	b.n	800b902 <Dmx::Blackout()+0xa>
 800b93a:	bf00      	nop
 800b93c:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b940:	40004800 	andmi	r4, r0, r0, lsl #16
 800b944:	20000e88 	andcs	r0, r0, r8, lsl #29

0800b948 <Dmx::FullOn()>:
 800b948:	4a10      	ldr	r2, [pc, #64]	; (800b98c <Dmx::FullOn()+0x44>)
 800b94a:	b510      	push	{r4, lr}
 800b94c:	8813      	ldrh	r3, [r2, #0]
 800b94e:	b29b      	uxth	r3, r3
 800b950:	b903      	cbnz	r3, 800b954 <Dmx::FullOn()+0xc>
 800b952:	bd10      	pop	{r4, pc}
 800b954:	f3bf 8f5f 	dmb	sy
 800b958:	8813      	ldrh	r3, [r2, #0]
 800b95a:	05db      	lsls	r3, r3, #23
 800b95c:	d5f9      	bpl.n	800b952 <Dmx::FullOn()+0xa>
 800b95e:	4c0c      	ldr	r4, [pc, #48]	; (800b990 <Dmx::FullOn()+0x48>)
 800b960:	2107      	movs	r1, #7
 800b962:	4620      	mov	r0, r4
 800b964:	f005 fbb6 	bl	80110d4 <usart_flag_get>
 800b968:	2801      	cmp	r0, #1
 800b96a:	d1f9      	bne.n	800b960 <Dmx::FullOn()+0x18>
 800b96c:	4a09      	ldr	r2, [pc, #36]	; (800b994 <Dmx::FullOn()+0x4c>)
 800b96e:	2300      	movs	r3, #0
 800b970:	4611      	mov	r1, r2
 800b972:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800b976:	f240 1001 	movw	r0, #257	; 0x101
 800b97a:	3301      	adds	r3, #1
 800b97c:	4283      	cmp	r3, r0
 800b97e:	f822 4b02 	strh.w	r4, [r2], #2
 800b982:	d1fa      	bne.n	800b97a <Dmx::FullOn()+0x32>
 800b984:	2300      	movs	r3, #0
 800b986:	700b      	strb	r3, [r1, #0]
 800b988:	e7e3      	b.n	800b952 <Dmx::FullOn()+0xa>
 800b98a:	bf00      	nop
 800b98c:	200010a0 	andcs	r1, r0, r0, lsr #1
 800b990:	40004800 	andmi	r4, r0, r0, lsl #16
 800b994:	20000e88 	andcs	r0, r0, r8, lsl #29

0800b998 <Dmx::GetDmxAvailable(unsigned int)>:
 800b998:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b99c:	4b07      	ldr	r3, [pc, #28]	; (800b9bc <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800b99e:	fb02 3101 	mla	r1, r2, r1, r3
 800b9a2:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800b9a6:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800b9aa:	bf1f      	itttt	ne
 800b9ac:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800b9b0:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800b9b4:	4608      	movne	r0, r1
 800b9b6:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800b9ba:	4770      	bx	lr
 800b9bc:	20000c78 	andcs	r0, r0, r8, ror ip

0800b9c0 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800b9c0:	f3bf 8f5f 	dmb	sy
 800b9c4:	4b01      	ldr	r3, [pc, #4]	; (800b9cc <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800b9c6:	0109      	lsls	r1, r1, #4
 800b9c8:	5858      	ldr	r0, [r3, r1]
 800b9ca:	4770      	bx	lr
 800b9cc:	20001090 	mulcs	r0, r0, r0

0800b9d0 <net_timers_run>:
 800b9d0:	4b05      	ldr	r3, [pc, #20]	; (800b9e8 <net_timers_run+0x18>)
 800b9d2:	4a06      	ldr	r2, [pc, #24]	; (800b9ec <net_timers_run+0x1c>)
 800b9d4:	681b      	ldr	r3, [r3, #0]
 800b9d6:	6811      	ldr	r1, [r2, #0]
 800b9d8:	4299      	cmp	r1, r3
 800b9da:	d803      	bhi.n	800b9e4 <net_timers_run+0x14>
 800b9dc:	3364      	adds	r3, #100	; 0x64
 800b9de:	6013      	str	r3, [r2, #0]
 800b9e0:	f001 be6e 	b.w	800d6c0 <igmp_timer>
 800b9e4:	4770      	bx	lr
 800b9e6:	bf00      	nop
 800b9e8:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800b9ec:	200010c8 	andcs	r1, r0, r8, asr #1

0800b9f0 <rfc3927>:
 800b9f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9f4:	4606      	mov	r6, r0
 800b9f6:	25ff      	movs	r5, #255	; 0xff
 800b9f8:	4b18      	ldr	r3, [pc, #96]	; (800ba5c <rfc3927+0x6c>)
 800b9fa:	4f19      	ldr	r7, [pc, #100]	; (800ba60 <rfc3927+0x70>)
 800b9fc:	791a      	ldrb	r2, [r3, #4]
 800b9fe:	78dc      	ldrb	r4, [r3, #3]
 800ba00:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ba64 <rfc3927+0x74>
 800ba04:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800ba08:	f8d7 9000 	ldr.w	r9, [r7]
 800ba0c:	f8df b058 	ldr.w	fp, [pc, #88]	; 800ba68 <rfc3927+0x78>
 800ba10:	f8df a058 	ldr.w	sl, [pc, #88]	; 800ba6c <rfc3927+0x7c>
 800ba14:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800ba18:	4659      	mov	r1, fp
 800ba1a:	4620      	mov	r0, r4
 800ba1c:	f001 fbae 	bl	800d17c <arp_cache_lookup>
 800ba20:	b190      	cbz	r0, 800ba48 <rfc3927+0x58>
 800ba22:	ba24      	rev	r4, r4
 800ba24:	3401      	adds	r4, #1
 800ba26:	3d01      	subs	r5, #1
 800ba28:	ba24      	rev	r4, r4
 800ba2a:	b2ad      	uxth	r5, r5
 800ba2c:	4554      	cmp	r4, sl
 800ba2e:	bf08      	it	eq
 800ba30:	4644      	moveq	r4, r8
 800ba32:	b18d      	cbz	r5, 800ba58 <rfc3927+0x68>
 800ba34:	683b      	ldr	r3, [r7, #0]
 800ba36:	eba3 0309 	sub.w	r3, r3, r9
 800ba3a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ba3e:	d3eb      	bcc.n	800ba18 <rfc3927+0x28>
 800ba40:	2400      	movs	r4, #0
 800ba42:	4623      	mov	r3, r4
 800ba44:	4620      	mov	r0, r4
 800ba46:	e002      	b.n	800ba4e <rfc3927+0x5e>
 800ba48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba4c:	2001      	movs	r0, #1
 800ba4e:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800ba52:	6034      	str	r4, [r6, #0]
 800ba54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba58:	462c      	mov	r4, r5
 800ba5a:	e7f2      	b.n	800ba42 <rfc3927+0x52>
 800ba5c:	200010cc 	andcs	r1, r0, ip, asr #1
 800ba60:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800ba64:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800ba68:	200010d4 	ldrdcs	r1, [r0], -r4
 800ba6c:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800ba70 <_init_tcb>:
 800ba70:	b510      	push	{r4, lr}
 800ba72:	4603      	mov	r3, r0
 800ba74:	2400      	movs	r4, #0
 800ba76:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800ba7a:	4293      	cmp	r3, r2
 800ba7c:	d10d      	bne.n	800ba9a <_init_tcb+0x2a>
 800ba7e:	4b08      	ldr	r3, [pc, #32]	; (800baa0 <_init_tcb+0x30>)
 800ba80:	f640 3268 	movw	r2, #2920	; 0xb68
 800ba84:	681b      	ldr	r3, [r3, #0]
 800ba86:	8702      	strh	r2, [r0, #56]	; 0x38
 800ba88:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ba8c:	6283      	str	r3, [r0, #40]	; 0x28
 800ba8e:	6243      	str	r3, [r0, #36]	; 0x24
 800ba90:	2301      	movs	r3, #1
 800ba92:	8001      	strh	r1, [r0, #0]
 800ba94:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ba98:	bd10      	pop	{r4, pc}
 800ba9a:	f803 4b01 	strb.w	r4, [r3], #1
 800ba9e:	e7ec      	b.n	800ba7a <_init_tcb+0xa>
 800baa0:	2000a0ac 	andcs	sl, r0, ip, lsr #1

0800baa4 <memcpy.isra.0>:
 800baa4:	3801      	subs	r0, #1
 800baa6:	440a      	add	r2, r1
 800baa8:	4291      	cmp	r1, r2
 800baaa:	d100      	bne.n	800baae <memcpy.isra.0+0xa>
 800baac:	4770      	bx	lr
 800baae:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bab2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bab6:	e7f7      	b.n	800baa8 <memcpy.isra.0+0x4>

0800bab8 <_bswap32>:
 800bab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800baba:	2204      	movs	r2, #4
 800babc:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800bac0:	4629      	mov	r1, r5
 800bac2:	4604      	mov	r4, r0
 800bac4:	eb0d 0002 	add.w	r0, sp, r2
 800bac8:	f7ff ffec 	bl	800baa4 <memcpy.isra.0>
 800bacc:	2204      	movs	r2, #4
 800bace:	9b01      	ldr	r3, [sp, #4]
 800bad0:	eb0d 0102 	add.w	r1, sp, r2
 800bad4:	ba1b      	rev	r3, r3
 800bad6:	4628      	mov	r0, r5
 800bad8:	9301      	str	r3, [sp, #4]
 800bada:	f7ff ffe3 	bl	800baa4 <memcpy.isra.0>
 800bade:	2204      	movs	r2, #4
 800bae0:	3426      	adds	r4, #38	; 0x26
 800bae2:	eb0d 0002 	add.w	r0, sp, r2
 800bae6:	4621      	mov	r1, r4
 800bae8:	f7ff ffdc 	bl	800baa4 <memcpy.isra.0>
 800baec:	2204      	movs	r2, #4
 800baee:	9b01      	ldr	r3, [sp, #4]
 800baf0:	4620      	mov	r0, r4
 800baf2:	ba1b      	rev	r3, r3
 800baf4:	eb0d 0102 	add.w	r1, sp, r2
 800baf8:	9301      	str	r3, [sp, #4]
 800bafa:	f7ff ffd3 	bl	800baa4 <memcpy.isra.0>
 800bafe:	b003      	add	sp, #12
 800bb00:	bd30      	pop	{r4, r5, pc}
	...

0800bb04 <_tcp_send_package>:
 800bb04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bb08:	7a0b      	ldrb	r3, [r1, #8]
 800bb0a:	4605      	mov	r5, r0
 800bb0c:	f013 0f02 	tst.w	r3, #2
 800bb10:	bf0c      	ite	eq
 800bb12:	f04f 0805 	moveq.w	r8, #5
 800bb16:	f04f 0806 	movne.w	r8, #6
 800bb1a:	f04f 0a00 	mov.w	sl, #0
 800bb1e:	4c47      	ldr	r4, [pc, #284]	; (800bc3c <_tcp_send_package+0x138>)
 800bb20:	460f      	mov	r7, r1
 800bb22:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800bb24:	f100 0108 	add.w	r1, r0, #8
 800bb28:	2206      	movs	r2, #6
 800bb2a:	4620      	mov	r0, r4
 800bb2c:	f7ff ffba 	bl	800baa4 <memcpy.isra.0>
 800bb30:	4a43      	ldr	r2, [pc, #268]	; (800bc40 <_tcp_send_package+0x13c>)
 800bb32:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800bb36:	8813      	ldrh	r3, [r2, #0]
 800bb38:	b2b6      	uxth	r6, r6
 800bb3a:	1c59      	adds	r1, r3, #1
 800bb3c:	8263      	strh	r3, [r4, #18]
 800bb3e:	f105 0904 	add.w	r9, r5, #4
 800bb42:	f106 0314 	add.w	r3, r6, #20
 800bb46:	ba5b      	rev16	r3, r3
 800bb48:	8011      	strh	r1, [r2, #0]
 800bb4a:	f104 001e 	add.w	r0, r4, #30
 800bb4e:	2204      	movs	r2, #4
 800bb50:	4649      	mov	r1, r9
 800bb52:	8223      	strh	r3, [r4, #16]
 800bb54:	f7ff ffa6 	bl	800baa4 <memcpy.isra.0>
 800bb58:	2114      	movs	r1, #20
 800bb5a:	f104 000e 	add.w	r0, r4, #14
 800bb5e:	f8a4 a018 	strh.w	sl, [r4, #24]
 800bb62:	f001 fe40 	bl	800d7e6 <net_chksum>
 800bb66:	882b      	ldrh	r3, [r5, #0]
 800bb68:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800bb6c:	8463      	strh	r3, [r4, #34]	; 0x22
 800bb6e:	886b      	ldrh	r3, [r5, #2]
 800bb70:	8320      	strh	r0, [r4, #24]
 800bb72:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bb74:	683b      	ldr	r3, [r7, #0]
 800bb76:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800bb78:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800bb82:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800bb86:	7a3b      	ldrb	r3, [r7, #8]
 800bb88:	8622      	strh	r2, [r4, #48]	; 0x30
 800bb8a:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800bb8e:	079b      	lsls	r3, r3, #30
 800bb90:	bf48      	it	mi
 800bb92:	f240 4302 	movwmi	r3, #1026	; 0x402
 800bb96:	8baa      	ldrh	r2, [r5, #28]
 800bb98:	bf48      	it	mi
 800bb9a:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800bb9c:	86a2      	strh	r2, [r4, #52]	; 0x34
 800bb9e:	bf42      	ittt	mi
 800bba0:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800bba4:	4622      	movmi	r2, r4
 800bba6:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800bbaa:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800bbac:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800bbb0:	bf58      	it	pl
 800bbb2:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800bbb6:	2b00      	cmp	r3, #0
 800bbb8:	d13e      	bne.n	800bc38 <_tcp_send_package+0x134>
 800bbba:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800bbbc:	481f      	ldr	r0, [pc, #124]	; (800bc3c <_tcp_send_package+0x138>)
 800bbbe:	ba5b      	rev16	r3, r3
 800bbc0:	8463      	strh	r3, [r4, #34]	; 0x22
 800bbc2:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800bbc4:	ba5b      	rev16	r3, r3
 800bbc6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bbc8:	f7ff ff76 	bl	800bab8 <_bswap32>
 800bbcc:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bbce:	a801      	add	r0, sp, #4
 800bbd0:	ba5b      	rev16	r3, r3
 800bbd2:	8623      	strh	r3, [r4, #48]	; 0x30
 800bbd4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bbd6:	220c      	movs	r2, #12
 800bbd8:	ba5b      	rev16	r3, r3
 800bbda:	491a      	ldr	r1, [pc, #104]	; (800bc44 <_tcp_send_package+0x140>)
 800bbdc:	86a3      	strh	r3, [r4, #52]	; 0x34
 800bbde:	f7ff ff61 	bl	800baa4 <memcpy.isra.0>
 800bbe2:	2204      	movs	r2, #4
 800bbe4:	4918      	ldr	r1, [pc, #96]	; (800bc48 <_tcp_send_package+0x144>)
 800bbe6:	4817      	ldr	r0, [pc, #92]	; (800bc44 <_tcp_send_package+0x140>)
 800bbe8:	f7ff ff5c 	bl	800baa4 <memcpy.isra.0>
 800bbec:	2204      	movs	r2, #4
 800bbee:	4649      	mov	r1, r9
 800bbf0:	4816      	ldr	r0, [pc, #88]	; (800bc4c <_tcp_send_package+0x148>)
 800bbf2:	f7ff ff57 	bl	800baa4 <memcpy.isra.0>
 800bbf6:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800bbfa:	f106 010c 	add.w	r1, r6, #12
 800bbfe:	83e3      	strh	r3, [r4, #30]
 800bc00:	4810      	ldr	r0, [pc, #64]	; (800bc44 <_tcp_send_package+0x140>)
 800bc02:	ba73      	rev16	r3, r6
 800bc04:	8423      	strh	r3, [r4, #32]
 800bc06:	f001 fdee 	bl	800d7e6 <net_chksum>
 800bc0a:	a901      	add	r1, sp, #4
 800bc0c:	4605      	mov	r5, r0
 800bc0e:	220c      	movs	r2, #12
 800bc10:	480c      	ldr	r0, [pc, #48]	; (800bc44 <_tcp_send_package+0x140>)
 800bc12:	f7ff ff47 	bl	800baa4 <memcpy.isra.0>
 800bc16:	4809      	ldr	r0, [pc, #36]	; (800bc3c <_tcp_send_package+0x138>)
 800bc18:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800bc1c:	8665      	strh	r5, [r4, #50]	; 0x32
 800bc1e:	b004      	add	sp, #16
 800bc20:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc24:	f005 ba9c 	b.w	8011160 <emac_eth_send>
 800bc28:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800bc2a:	5cc9      	ldrb	r1, [r1, r3]
 800bc2c:	54d1      	strb	r1, [r2, r3]
 800bc2e:	3301      	adds	r3, #1
 800bc30:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800bc32:	4299      	cmp	r1, r3
 800bc34:	d8f8      	bhi.n	800bc28 <_tcp_send_package+0x124>
 800bc36:	e7c0      	b.n	800bbba <_tcp_send_package+0xb6>
 800bc38:	2300      	movs	r3, #0
 800bc3a:	e7f9      	b.n	800bc30 <_tcp_send_package+0x12c>
 800bc3c:	20001c94 	mulcs	r0, r4, ip
 800bc40:	200010dc 	ldrdcs	r1, [r0], -ip
 800bc44:	20001caa 	andcs	r1, r0, sl, lsr #25
 800bc48:	200010b0 	strhcs	r1, [r0], -r0
 800bc4c:	20001cae 	andcs	r1, r0, lr, lsr #25

0800bc50 <_send_reset>:
 800bc50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc52:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800bc56:	4604      	mov	r4, r0
 800bc58:	075a      	lsls	r2, r3, #29
 800bc5a:	460e      	mov	r6, r1
 800bc5c:	d421      	bmi.n	800bca2 <_send_reset+0x52>
 800bc5e:	2204      	movs	r2, #4
 800bc60:	f013 0310 	ands.w	r3, r3, #16
 800bc64:	f88d 200c 	strb.w	r2, [sp, #12]
 800bc68:	d01d      	beq.n	800bca6 <_send_reset+0x56>
 800bc6a:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800bc6e:	4668      	mov	r0, sp
 800bc70:	f7ff ff18 	bl	800baa4 <memcpy.isra.0>
 800bc74:	9b00      	ldr	r3, [sp, #0]
 800bc76:	9301      	str	r3, [sp, #4]
 800bc78:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800bc7c:	4668      	mov	r0, sp
 800bc7e:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800bc82:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800bc86:	07db      	lsls	r3, r3, #31
 800bc88:	f04f 0204 	mov.w	r2, #4
 800bc8c:	bf48      	it	mi
 800bc8e:	3501      	addmi	r5, #1
 800bc90:	f7ff ff08 	bl	800baa4 <memcpy.isra.0>
 800bc94:	9b00      	ldr	r3, [sp, #0]
 800bc96:	4630      	mov	r0, r6
 800bc98:	441d      	add	r5, r3
 800bc9a:	a901      	add	r1, sp, #4
 800bc9c:	9502      	str	r5, [sp, #8]
 800bc9e:	f7ff ff31 	bl	800bb04 <_tcp_send_package>
 800bca2:	b004      	add	sp, #16
 800bca4:	bd70      	pop	{r4, r5, r6, pc}
 800bca6:	9301      	str	r3, [sp, #4]
 800bca8:	2314      	movs	r3, #20
 800bcaa:	f88d 300c 	strb.w	r3, [sp, #12]
 800bcae:	e7e3      	b.n	800bc78 <_send_reset+0x28>

0800bcb0 <tcp_begin>:
 800bcb0:	b508      	push	{r3, lr}
 800bcb2:	4b0a      	ldr	r3, [pc, #40]	; (800bcdc <tcp_begin+0x2c>)
 800bcb4:	4601      	mov	r1, r0
 800bcb6:	881a      	ldrh	r2, [r3, #0]
 800bcb8:	4282      	cmp	r2, r0
 800bcba:	d102      	bne.n	800bcc2 <tcp_begin+0x12>
 800bcbc:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800bcc0:	b130      	cbz	r0, 800bcd0 <tcp_begin+0x20>
 800bcc2:	b12a      	cbz	r2, 800bcd0 <tcp_begin+0x20>
 800bcc4:	4806      	ldr	r0, [pc, #24]	; (800bce0 <tcp_begin+0x30>)
 800bcc6:	f003 fb41 	bl	800f34c <console_error>
 800bcca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bcce:	bd08      	pop	{r3, pc}
 800bcd0:	4802      	ldr	r0, [pc, #8]	; (800bcdc <tcp_begin+0x2c>)
 800bcd2:	8019      	strh	r1, [r3, #0]
 800bcd4:	f7ff fecc 	bl	800ba70 <_init_tcb>
 800bcd8:	2000      	movs	r0, #0
 800bcda:	e7f8      	b.n	800bcce <tcp_begin+0x1e>
 800bcdc:	20001c50 	andcs	r1, r0, r0, asr ip
 800bce0:	08013250 	stmdaeq	r1, {r4, r6, r9, ip, sp}

0800bce4 <tcp_write>:
 800bce4:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800bce8:	429a      	cmp	r2, r3
 800bcea:	bf28      	it	cs
 800bcec:	461a      	movcs	r2, r3
 800bcee:	2344      	movs	r3, #68	; 0x44
 800bcf0:	b530      	push	{r4, r5, lr}
 800bcf2:	4c0d      	ldr	r4, [pc, #52]	; (800bd28 <tcp_write+0x44>)
 800bcf4:	b085      	sub	sp, #20
 800bcf6:	fb03 4400 	mla	r4, r3, r0, r4
 800bcfa:	6963      	ldr	r3, [r4, #20]
 800bcfc:	62e1      	str	r1, [r4, #44]	; 0x2c
 800bcfe:	9301      	str	r3, [sp, #4]
 800bd00:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd02:	4620      	mov	r0, r4
 800bd04:	9302      	str	r3, [sp, #8]
 800bd06:	2318      	movs	r3, #24
 800bd08:	8622      	strh	r2, [r4, #48]	; 0x30
 800bd0a:	a901      	add	r1, sp, #4
 800bd0c:	4615      	mov	r5, r2
 800bd0e:	f88d 300c 	strb.w	r3, [sp, #12]
 800bd12:	f7ff fef7 	bl	800bb04 <_tcp_send_package>
 800bd16:	2300      	movs	r3, #0
 800bd18:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bd1a:	8623      	strh	r3, [r4, #48]	; 0x30
 800bd1c:	6963      	ldr	r3, [r4, #20]
 800bd1e:	442b      	add	r3, r5
 800bd20:	6163      	str	r3, [r4, #20]
 800bd22:	b005      	add	sp, #20
 800bd24:	bd30      	pop	{r4, r5, pc}
 800bd26:	bf00      	nop
 800bd28:	20001c50 	andcs	r1, r0, r0, asr ip

0800bd2c <tcp_read>:
 800bd2c:	2344      	movs	r3, #68	; 0x44
 800bd2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd30:	4c1c      	ldr	r4, [pc, #112]	; (800bda4 <tcp_read+0x78>)
 800bd32:	b085      	sub	sp, #20
 800bd34:	fb03 4400 	mla	r4, r3, r0, r4
 800bd38:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bd3c:	2b07      	cmp	r3, #7
 800bd3e:	d112      	bne.n	800bd66 <tcp_read+0x3a>
 800bd40:	6963      	ldr	r3, [r4, #20]
 800bd42:	4620      	mov	r0, r4
 800bd44:	9301      	str	r3, [sp, #4]
 800bd46:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd48:	a901      	add	r1, sp, #4
 800bd4a:	9302      	str	r3, [sp, #8]
 800bd4c:	2311      	movs	r3, #17
 800bd4e:	f88d 300c 	strb.w	r3, [sp, #12]
 800bd52:	f7ff fed7 	bl	800bb04 <_tcp_send_package>
 800bd56:	2309      	movs	r3, #9
 800bd58:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bd5c:	6963      	ldr	r3, [r4, #20]
 800bd5e:	3301      	adds	r3, #1
 800bd60:	6163      	str	r3, [r4, #20]
 800bd62:	2000      	movs	r0, #0
 800bd64:	e01b      	b.n	800bd9e <tcp_read+0x72>
 800bd66:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800bd6a:	4358      	muls	r0, r3
 800bd6c:	4a0e      	ldr	r2, [pc, #56]	; (800bda8 <tcp_read+0x7c>)
 800bd6e:	1817      	adds	r7, r2, r0
 800bd70:	887b      	ldrh	r3, [r7, #2]
 800bd72:	5a15      	ldrh	r5, [r2, r0]
 800bd74:	429d      	cmp	r5, r3
 800bd76:	d0f4      	beq.n	800bd62 <tcp_read+0x36>
 800bd78:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800bd7c:	435d      	muls	r5, r3
 800bd7e:	1d06      	adds	r6, r0, #4
 800bd80:	442e      	add	r6, r5
 800bd82:	4416      	add	r6, r2
 800bd84:	4405      	add	r5, r0
 800bd86:	600e      	str	r6, [r1, #0]
 800bd88:	442a      	add	r2, r5
 800bd8a:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800bd8e:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800bd90:	3301      	adds	r3, #1
 800bd92:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800bd96:	f003 0301 	and.w	r3, r3, #1
 800bd9a:	8722      	strh	r2, [r4, #56]	; 0x38
 800bd9c:	807b      	strh	r3, [r7, #2]
 800bd9e:	b005      	add	sp, #20
 800bda0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bda2:	bf00      	nop
 800bda4:	20001c50 	andcs	r1, r0, r0, asr ip
 800bda8:	200010e0 	andcs	r1, r0, r0, ror #1

0800bdac <memcpy.isra.0>:
 800bdac:	3801      	subs	r0, #1
 800bdae:	440a      	add	r2, r1
 800bdb0:	4291      	cmp	r1, r2
 800bdb2:	d100      	bne.n	800bdb6 <memcpy.isra.0+0xa>
 800bdb4:	4770      	bx	lr
 800bdb6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bdba:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bdbe:	e7f7      	b.n	800bdb0 <memcpy.isra.0+0x4>

0800bdc0 <net_memcpy>:
 800bdc0:	ea40 0301 	orr.w	r3, r0, r1
 800bdc4:	079b      	lsls	r3, r3, #30
 800bdc6:	b570      	push	{r4, r5, r6, lr}
 800bdc8:	d108      	bne.n	800bddc <net_memcpy+0x1c>
 800bdca:	f022 0303 	bic.w	r3, r2, #3
 800bdce:	1f04      	subs	r4, r0, #4
 800bdd0:	18cd      	adds	r5, r1, r3
 800bdd2:	42a9      	cmp	r1, r5
 800bdd4:	d108      	bne.n	800bde8 <net_memcpy+0x28>
 800bdd6:	1ad2      	subs	r2, r2, r3
 800bdd8:	4403      	add	r3, r0
 800bdda:	e000      	b.n	800bdde <net_memcpy+0x1e>
 800bddc:	4603      	mov	r3, r0
 800bdde:	3b01      	subs	r3, #1
 800bde0:	440a      	add	r2, r1
 800bde2:	4291      	cmp	r1, r2
 800bde4:	d105      	bne.n	800bdf2 <net_memcpy+0x32>
 800bde6:	bd70      	pop	{r4, r5, r6, pc}
 800bde8:	f851 6b04 	ldr.w	r6, [r1], #4
 800bdec:	f844 6f04 	str.w	r6, [r4, #4]!
 800bdf0:	e7ef      	b.n	800bdd2 <net_memcpy+0x12>
 800bdf2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bdf6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800bdfa:	e7f2      	b.n	800bde2 <net_memcpy+0x22>

0800bdfc <udp_set_ip>:
 800bdfc:	2204      	movs	r2, #4
 800bdfe:	b513      	push	{r0, r1, r4, lr}
 800be00:	4604      	mov	r4, r0
 800be02:	6803      	ldr	r3, [r0, #0]
 800be04:	eb0d 0102 	add.w	r1, sp, r2
 800be08:	4808      	ldr	r0, [pc, #32]	; (800be2c <udp_set_ip+0x30>)
 800be0a:	9301      	str	r3, [sp, #4]
 800be0c:	f7ff ffce 	bl	800bdac <memcpy.isra.0>
 800be10:	6862      	ldr	r2, [r4, #4]
 800be12:	4b07      	ldr	r3, [pc, #28]	; (800be30 <udp_set_ip+0x34>)
 800be14:	43d1      	mvns	r1, r2
 800be16:	6019      	str	r1, [r3, #0]
 800be18:	6823      	ldr	r3, [r4, #0]
 800be1a:	4013      	ands	r3, r2
 800be1c:	4a05      	ldr	r2, [pc, #20]	; (800be34 <udp_set_ip+0x38>)
 800be1e:	6013      	str	r3, [r2, #0]
 800be20:	68a2      	ldr	r2, [r4, #8]
 800be22:	4b05      	ldr	r3, [pc, #20]	; (800be38 <udp_set_ip+0x3c>)
 800be24:	601a      	str	r2, [r3, #0]
 800be26:	b002      	add	sp, #8
 800be28:	bd10      	pop	{r4, pc}
 800be2a:	bf00      	nop
 800be2c:	20007f6a 	andcs	r7, r0, sl, ror #30
 800be30:	20002280 	andcs	r2, r0, r0, lsl #5
 800be34:	20002288 	andcs	r2, r0, r8, lsl #5
 800be38:	20002284 	andcs	r2, r0, r4, lsl #5

0800be3c <udp_bind>:
 800be3c:	4a0a      	ldr	r2, [pc, #40]	; (800be68 <udp_bind+0x2c>)
 800be3e:	4603      	mov	r3, r0
 800be40:	b510      	push	{r4, lr}
 800be42:	2000      	movs	r0, #0
 800be44:	4614      	mov	r4, r2
 800be46:	f852 1b04 	ldr.w	r1, [r2], #4
 800be4a:	4299      	cmp	r1, r3
 800be4c:	d008      	beq.n	800be60 <udp_bind+0x24>
 800be4e:	b141      	cbz	r1, 800be62 <udp_bind+0x26>
 800be50:	3001      	adds	r0, #1
 800be52:	2808      	cmp	r0, #8
 800be54:	d1f7      	bne.n	800be46 <udp_bind+0xa>
 800be56:	4805      	ldr	r0, [pc, #20]	; (800be6c <udp_bind+0x30>)
 800be58:	f003 fa78 	bl	800f34c <console_error>
 800be5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800be60:	bd10      	pop	{r4, pc}
 800be62:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800be66:	e7fb      	b.n	800be60 <udp_bind+0x24>
 800be68:	20002290 	mulcs	r0, r0, r2
 800be6c:	08013270 	stmdaeq	r1, {r4, r5, r6, r9, ip, sp}

0800be70 <udp_unbind>:
 800be70:	4a0c      	ldr	r2, [pc, #48]	; (800bea4 <udp_unbind+0x34>)
 800be72:	2300      	movs	r3, #0
 800be74:	4611      	mov	r1, r2
 800be76:	b510      	push	{r4, lr}
 800be78:	f852 4b04 	ldr.w	r4, [r2], #4
 800be7c:	4284      	cmp	r4, r0
 800be7e:	d108      	bne.n	800be92 <udp_unbind+0x22>
 800be80:	2000      	movs	r0, #0
 800be82:	f640 3294 	movw	r2, #2964	; 0xb94
 800be86:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800be8a:	4353      	muls	r3, r2
 800be8c:	4a06      	ldr	r2, [pc, #24]	; (800bea8 <udp_unbind+0x38>)
 800be8e:	50d0      	str	r0, [r2, r3]
 800be90:	bd10      	pop	{r4, pc}
 800be92:	3301      	adds	r3, #1
 800be94:	2b08      	cmp	r3, #8
 800be96:	d1ef      	bne.n	800be78 <udp_unbind+0x8>
 800be98:	4804      	ldr	r0, [pc, #16]	; (800beac <udp_unbind+0x3c>)
 800be9a:	f003 fa57 	bl	800f34c <console_error>
 800be9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bea2:	e7f5      	b.n	800be90 <udp_unbind+0x20>
 800bea4:	20002290 	mulcs	r0, r0, r2
 800bea8:	200022b0 			; <UNDEFINED> instruction: 0x200022b0
 800beac:	08013275 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, ip, sp}

0800beb0 <udp_recv>:
 800beb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beb4:	4604      	mov	r4, r0
 800beb6:	4698      	mov	r8, r3
 800beb8:	f640 3394 	movw	r3, #2964	; 0xb94
 800bebc:	435c      	muls	r4, r3
 800bebe:	4608      	mov	r0, r1
 800bec0:	4915      	ldr	r1, [pc, #84]	; (800bf18 <udp_recv+0x68>)
 800bec2:	190f      	adds	r7, r1, r4
 800bec4:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800bec8:	5b0b      	ldrh	r3, [r1, r4]
 800beca:	4563      	cmp	r3, ip
 800becc:	d021      	beq.n	800bf12 <udp_recv+0x62>
 800bece:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800bed2:	fb03 fc0c 	mul.w	ip, r3, ip
 800bed6:	eb0c 0604 	add.w	r6, ip, r4
 800beda:	440e      	add	r6, r1
 800bedc:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800bee0:	3404      	adds	r4, #4
 800bee2:	4295      	cmp	r5, r2
 800bee4:	bf28      	it	cs
 800bee6:	4615      	movcs	r5, r2
 800bee8:	4464      	add	r4, ip
 800beea:	462a      	mov	r2, r5
 800beec:	4421      	add	r1, r4
 800beee:	f7ff ff67 	bl	800bdc0 <net_memcpy>
 800bef2:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800bef6:	f8c8 3000 	str.w	r3, [r8]
 800befa:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800befe:	9b06      	ldr	r3, [sp, #24]
 800bf00:	801a      	strh	r2, [r3, #0]
 800bf02:	887b      	ldrh	r3, [r7, #2]
 800bf04:	3301      	adds	r3, #1
 800bf06:	f003 0301 	and.w	r3, r3, #1
 800bf0a:	807b      	strh	r3, [r7, #2]
 800bf0c:	4628      	mov	r0, r5
 800bf0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf12:	2500      	movs	r5, #0
 800bf14:	e7fa      	b.n	800bf0c <udp_recv+0x5c>
 800bf16:	bf00      	nop
 800bf18:	200022b0 			; <UNDEFINED> instruction: 0x200022b0

0800bf1c <udp_recv2>:
 800bf1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf1e:	f640 3594 	movw	r5, #2964	; 0xb94
 800bf22:	4368      	muls	r0, r5
 800bf24:	4c0f      	ldr	r4, [pc, #60]	; (800bf64 <udp_recv2+0x48>)
 800bf26:	1827      	adds	r7, r4, r0
 800bf28:	887d      	ldrh	r5, [r7, #2]
 800bf2a:	5a26      	ldrh	r6, [r4, r0]
 800bf2c:	42ae      	cmp	r6, r5
 800bf2e:	d017      	beq.n	800bf60 <udp_recv2+0x44>
 800bf30:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800bf34:	fb0c f505 	mul.w	r5, ip, r5
 800bf38:	1d06      	adds	r6, r0, #4
 800bf3a:	442e      	add	r6, r5
 800bf3c:	4405      	add	r5, r0
 800bf3e:	4426      	add	r6, r4
 800bf40:	442c      	add	r4, r5
 800bf42:	600e      	str	r6, [r1, #0]
 800bf44:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800bf48:	6011      	str	r1, [r2, #0]
 800bf4a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800bf4e:	801a      	strh	r2, [r3, #0]
 800bf50:	887b      	ldrh	r3, [r7, #2]
 800bf52:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800bf56:	3301      	adds	r3, #1
 800bf58:	f003 0301 	and.w	r3, r3, #1
 800bf5c:	807b      	strh	r3, [r7, #2]
 800bf5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf60:	2000      	movs	r0, #0
 800bf62:	e7fc      	b.n	800bf5e <udp_recv2+0x42>
 800bf64:	200022b0 			; <UNDEFINED> instruction: 0x200022b0

0800bf68 <udp_send>:
 800bf68:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800bf6c:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c0a0 <udp_send+0x138>
 800bf70:	461c      	mov	r4, r3
 800bf72:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800bf76:	4607      	mov	r7, r0
 800bf78:	4688      	mov	r8, r1
 800bf7a:	4616      	mov	r6, r2
 800bf7c:	2b00      	cmp	r3, #0
 800bf7e:	f000 808b 	beq.w	800c098 <udp_send+0x130>
 800bf82:	1c63      	adds	r3, r4, #1
 800bf84:	d141      	bne.n	800c00a <udp_send+0xa2>
 800bf86:	4a47      	ldr	r2, [pc, #284]	; (800c0a4 <udp_send+0x13c>)
 800bf88:	2307      	movs	r3, #7
 800bf8a:	4611      	mov	r1, r2
 800bf8c:	20ff      	movs	r0, #255	; 0xff
 800bf8e:	e001      	b.n	800bf94 <udp_send+0x2c>
 800bf90:	f802 0b01 	strb.w	r0, [r2], #1
 800bf94:	3b01      	subs	r3, #1
 800bf96:	d1fb      	bne.n	800bf90 <udp_send+0x28>
 800bf98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf9c:	83cb      	strh	r3, [r1, #30]
 800bf9e:	840b      	strh	r3, [r1, #32]
 800bfa0:	2500      	movs	r5, #0
 800bfa2:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c0a8 <udp_send+0x140>
 800bfa6:	4c3f      	ldr	r4, [pc, #252]	; (800c0a4 <udp_send+0x13c>)
 800bfa8:	f8ba 3000 	ldrh.w	r3, [sl]
 800bfac:	2114      	movs	r1, #20
 800bfae:	8263      	strh	r3, [r4, #18]
 800bfb0:	f106 031c 	add.w	r3, r6, #28
 800bfb4:	ba5b      	rev16	r3, r3
 800bfb6:	f104 000e 	add.w	r0, r4, #14
 800bfba:	8223      	strh	r3, [r4, #16]
 800bfbc:	8325      	strh	r5, [r4, #24]
 800bfbe:	f001 fc12 	bl	800d7e6 <net_chksum>
 800bfc2:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800bfc6:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800bfca:	ba5b      	rev16	r3, r3
 800bfcc:	8463      	strh	r3, [r4, #34]	; 0x22
 800bfce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800bfd2:	4632      	mov	r2, r6
 800bfd4:	ba5b      	rev16	r3, r3
 800bfd6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bfd8:	f106 0308 	add.w	r3, r6, #8
 800bfdc:	ba5b      	rev16	r3, r3
 800bfde:	bf28      	it	cs
 800bfe0:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800bfe4:	4641      	mov	r1, r8
 800bfe6:	8320      	strh	r0, [r4, #24]
 800bfe8:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800bfec:	84e3      	strh	r3, [r4, #38]	; 0x26
 800bfee:	f7ff fee7 	bl	800bdc0 <net_memcpy>
 800bff2:	4620      	mov	r0, r4
 800bff4:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800bff8:	f005 f8b2 	bl	8011160 <emac_eth_send>
 800bffc:	f8ba 3000 	ldrh.w	r3, [sl]
 800c000:	4628      	mov	r0, r5
 800c002:	3301      	adds	r3, #1
 800c004:	f8aa 3000 	strh.w	r3, [sl]
 800c008:	e037      	b.n	800c07a <udp_send+0x112>
 800c00a:	4b28      	ldr	r3, [pc, #160]	; (800c0ac <udp_send+0x144>)
 800c00c:	681b      	ldr	r3, [r3, #0]
 800c00e:	43a3      	bics	r3, r4
 800c010:	d10f      	bne.n	800c032 <udp_send+0xca>
 800c012:	2307      	movs	r3, #7
 800c014:	21ff      	movs	r1, #255	; 0xff
 800c016:	4a23      	ldr	r2, [pc, #140]	; (800c0a4 <udp_send+0x13c>)
 800c018:	e001      	b.n	800c01e <udp_send+0xb6>
 800c01a:	f802 1b01 	strb.w	r1, [r2], #1
 800c01e:	3b01      	subs	r3, #1
 800c020:	d1fb      	bne.n	800c01a <udp_send+0xb2>
 800c022:	2204      	movs	r2, #4
 800c024:	4822      	ldr	r0, [pc, #136]	; (800c0b0 <udp_send+0x148>)
 800c026:	eb0d 0102 	add.w	r1, sp, r2
 800c02a:	9401      	str	r4, [sp, #4]
 800c02c:	f7ff febe 	bl	800bdac <memcpy.isra.0>
 800c030:	e7b6      	b.n	800bfa0 <udp_send+0x38>
 800c032:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c036:	2be0      	cmp	r3, #224	; 0xe0
 800c038:	d10e      	bne.n	800c058 <udp_send+0xf0>
 800c03a:	491e      	ldr	r1, [pc, #120]	; (800c0b4 <udp_send+0x14c>)
 800c03c:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c040:	70cb      	strb	r3, [r1, #3]
 800c042:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c046:	710b      	strb	r3, [r1, #4]
 800c048:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c04c:	2206      	movs	r2, #6
 800c04e:	4815      	ldr	r0, [pc, #84]	; (800c0a4 <udp_send+0x13c>)
 800c050:	714b      	strb	r3, [r1, #5]
 800c052:	f7ff feab 	bl	800bdac <memcpy.isra.0>
 800c056:	e7e4      	b.n	800c022 <udp_send+0xba>
 800c058:	4b17      	ldr	r3, [pc, #92]	; (800c0b8 <udp_send+0x150>)
 800c05a:	681b      	ldr	r3, [r3, #0]
 800c05c:	43a3      	bics	r3, r4
 800c05e:	d00f      	beq.n	800c080 <udp_send+0x118>
 800c060:	4d16      	ldr	r5, [pc, #88]	; (800c0bc <udp_send+0x154>)
 800c062:	4910      	ldr	r1, [pc, #64]	; (800c0a4 <udp_send+0x13c>)
 800c064:	6828      	ldr	r0, [r5, #0]
 800c066:	f001 f889 	bl	800d17c <arp_cache_lookup>
 800c06a:	682b      	ldr	r3, [r5, #0]
 800c06c:	4298      	cmp	r0, r3
 800c06e:	d0d8      	beq.n	800c022 <udp_send+0xba>
 800c070:	4813      	ldr	r0, [pc, #76]	; (800c0c0 <udp_send+0x158>)
 800c072:	f003 f96b 	bl	800f34c <console_error>
 800c076:	f06f 0002 	mvn.w	r0, #2
 800c07a:	b002      	add	sp, #8
 800c07c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c080:	4620      	mov	r0, r4
 800c082:	4908      	ldr	r1, [pc, #32]	; (800c0a4 <udp_send+0x13c>)
 800c084:	f001 f87a 	bl	800d17c <arp_cache_lookup>
 800c088:	42a0      	cmp	r0, r4
 800c08a:	d0ca      	beq.n	800c022 <udp_send+0xba>
 800c08c:	480d      	ldr	r0, [pc, #52]	; (800c0c4 <udp_send+0x15c>)
 800c08e:	f003 f95d 	bl	800f34c <console_error>
 800c092:	f06f 0001 	mvn.w	r0, #1
 800c096:	e7f0      	b.n	800c07a <udp_send+0x112>
 800c098:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c09c:	e7ed      	b.n	800c07a <udp_send+0x112>
 800c09e:	bf00      	nop
 800c0a0:	20002290 	mulcs	r0, r0, r2
 800c0a4:	20007f50 	andcs	r7, r0, r0, asr pc
 800c0a8:	2000228c 	andcs	r2, r0, ip, lsl #5
 800c0ac:	20002280 	andcs	r2, r0, r0, lsl #5
 800c0b0:	20007f6e 	andcs	r7, r0, lr, ror #30
 800c0b4:	20000010 	andcs	r0, r0, r0, lsl r0
 800c0b8:	20002288 	andcs	r2, r0, r8, lsl #5
 800c0bc:	20002284 	andcs	r2, r0, r4, lsl #5
 800c0c0:	0801327d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, ip, sp}
 800c0c4:	080132a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, ip, sp}

0800c0c8 <strlen>:
 800c0c8:	4603      	mov	r3, r0
 800c0ca:	461a      	mov	r2, r3
 800c0cc:	7811      	ldrb	r1, [r2, #0]
 800c0ce:	3301      	adds	r3, #1
 800c0d0:	2900      	cmp	r1, #0
 800c0d2:	d1fa      	bne.n	800c0ca <strlen+0x2>
 800c0d4:	1a10      	subs	r0, r2, r0
 800c0d6:	4770      	bx	lr

0800c0d8 <strcmp>:
 800c0d8:	1e43      	subs	r3, r0, #1
 800c0da:	3901      	subs	r1, #1
 800c0dc:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c0e0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c0e4:	4290      	cmp	r0, r2
 800c0e6:	d001      	beq.n	800c0ec <strcmp+0x14>
 800c0e8:	1a80      	subs	r0, r0, r2
 800c0ea:	e001      	b.n	800c0f0 <strcmp+0x18>
 800c0ec:	2800      	cmp	r0, #0
 800c0ee:	d1f5      	bne.n	800c0dc <strcmp+0x4>
 800c0f0:	4770      	bx	lr

0800c0f2 <strcpy.isra.0>:
 800c0f2:	3801      	subs	r0, #1
 800c0f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c0f8:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c0fc:	2b00      	cmp	r3, #0
 800c0fe:	d1f9      	bne.n	800c0f4 <strcpy.isra.0+0x2>
 800c100:	4770      	bx	lr

0800c102 <strcat.isra.0>:
 800c102:	b538      	push	{r3, r4, r5, lr}
 800c104:	4604      	mov	r4, r0
 800c106:	460d      	mov	r5, r1
 800c108:	f7ff ffde 	bl	800c0c8 <strlen>
 800c10c:	4629      	mov	r1, r5
 800c10e:	4420      	add	r0, r4
 800c110:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c114:	f7ff bfed 	b.w	800c0f2 <strcpy.isra.0>

0800c118 <MDNS::MDNS()>:
 800c118:	b513      	push	{r0, r1, r4, lr}
 800c11a:	4604      	mov	r4, r0
 800c11c:	a901      	add	r1, sp, #4
 800c11e:	4804      	ldr	r0, [pc, #16]	; (800c130 <MDNS::MDNS()+0x18>)
 800c120:	f003 fa8a 	bl	800f638 <inet_aton>
 800c124:	4620      	mov	r0, r4
 800c126:	4b03      	ldr	r3, [pc, #12]	; (800c134 <MDNS::MDNS()+0x1c>)
 800c128:	9a01      	ldr	r2, [sp, #4]
 800c12a:	601a      	str	r2, [r3, #0]
 800c12c:	b002      	add	sp, #8
 800c12e:	bd10      	pop	{r4, pc}
 800c130:	080132d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, ip, sp}
 800c134:	20008544 	andcs	r8, r0, r4, asr #10

0800c138 <MDNS::SetName(char const*)>:
 800c138:	b538      	push	{r3, r4, r5, lr}
 800c13a:	4d0b      	ldr	r5, [pc, #44]	; (800c168 <MDNS::SetName(char const*)+0x30>)
 800c13c:	460c      	mov	r4, r1
 800c13e:	6828      	ldr	r0, [r5, #0]
 800c140:	b108      	cbz	r0, 800c146 <MDNS::SetName(char const*)+0xe>
 800c142:	f003 fa73 	bl	800f62c <operator delete[](void*)>
 800c146:	4620      	mov	r0, r4
 800c148:	f7ff ffbe 	bl	800c0c8 <strlen>
 800c14c:	3007      	adds	r0, #7
 800c14e:	f003 fa71 	bl	800f634 <operator new[](unsigned int)>
 800c152:	4621      	mov	r1, r4
 800c154:	6028      	str	r0, [r5, #0]
 800c156:	f7ff ffcc 	bl	800c0f2 <strcpy.isra.0>
 800c15a:	6828      	ldr	r0, [r5, #0]
 800c15c:	4903      	ldr	r1, [pc, #12]	; (800c16c <MDNS::SetName(char const*)+0x34>)
 800c15e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c162:	f7ff bfce 	b.w	800c102 <strcat.isra.0>
 800c166:	bf00      	nop
 800c168:	20008974 	andcs	r8, r0, r4, ror r9
 800c16c:	080132e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, ip, sp}

0800c170 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800c170:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c174:	f04f 0e00 	mov.w	lr, #0
 800c178:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800c17c:	4675      	mov	r5, lr
 800c17e:	4e1b      	ldr	r6, [pc, #108]	; (800c1ec <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800c180:	4f1b      	ldr	r7, [pc, #108]	; (800c1f0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800c182:	780b      	ldrb	r3, [r1, #0]
 800c184:	1c68      	adds	r0, r5, #1
 800c186:	b913      	cbnz	r3, 800c18e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800c188:	7013      	strb	r3, [r2, #0]
 800c18a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c18e:	2b3f      	cmp	r3, #63	; 0x3f
 800c190:	d91c      	bls.n	800c1cc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800c192:	7849      	ldrb	r1, [r1, #1]
 800c194:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800c198:	430b      	orrs	r3, r1
 800c19a:	6839      	ldr	r1, [r7, #0]
 800c19c:	f1be 0f00 	cmp.w	lr, #0
 800c1a0:	bf08      	it	eq
 800c1a2:	4605      	moveq	r5, r0
 800c1a4:	5ccc      	ldrb	r4, [r1, r3]
 800c1a6:	3301      	adds	r3, #1
 800c1a8:	4419      	add	r1, r3
 800c1aa:	2300      	movs	r3, #0
 800c1ac:	42a3      	cmp	r3, r4
 800c1ae:	5cc8      	ldrb	r0, [r1, r3]
 800c1b0:	d309      	bcc.n	800c1c6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800c1b2:	f04f 0e01 	mov.w	lr, #1
 800c1b6:	4421      	add	r1, r4
 800c1b8:	4414      	add	r4, r2
 800c1ba:	780b      	ldrb	r3, [r1, #0]
 800c1bc:	b10b      	cbz	r3, 800c1c2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800c1be:	f804 cb01 	strb.w	ip, [r4], #1
 800c1c2:	4622      	mov	r2, r4
 800c1c4:	e7dd      	b.n	800c182 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800c1c6:	54d0      	strb	r0, [r2, r3]
 800c1c8:	3301      	adds	r3, #1
 800c1ca:	e7ef      	b.n	800c1ac <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800c1cc:	4688      	mov	r8, r1
 800c1ce:	18d4      	adds	r4, r2, r3
 800c1d0:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800c1d4:	f802 9b01 	strb.w	r9, [r2], #1
 800c1d8:	4294      	cmp	r4, r2
 800c1da:	d1f9      	bne.n	800c1d0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800c1dc:	1c5a      	adds	r2, r3, #1
 800c1de:	4411      	add	r1, r2
 800c1e0:	f1be 0f00 	cmp.w	lr, #0
 800c1e4:	d1e9      	bne.n	800c1ba <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c1e6:	181d      	adds	r5, r3, r0
 800c1e8:	e7e7      	b.n	800c1ba <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c1ea:	bf00      	nop
 800c1ec:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800c1f0:	20008978 	andcs	r8, r0, r8, ror r9

0800c1f4 <MDNS::FindFirstDotFromRight(char const*) const>:
 800c1f4:	b510      	push	{r4, lr}
 800c1f6:	4608      	mov	r0, r1
 800c1f8:	460c      	mov	r4, r1
 800c1fa:	f7ff ff65 	bl	800c0c8 <strlen>
 800c1fe:	4420      	add	r0, r4
 800c200:	42a0      	cmp	r0, r4
 800c202:	d903      	bls.n	800c20c <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800c204:	f810 3901 	ldrb.w	r3, [r0], #-1
 800c208:	2b2e      	cmp	r3, #46	; 0x2e
 800c20a:	d1f9      	bne.n	800c200 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800c20c:	3001      	adds	r0, #1
 800c20e:	bd10      	pop	{r4, pc}

0800c210 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800c210:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c212:	4614      	mov	r4, r2
 800c214:	460f      	mov	r7, r1
 800c216:	1c60      	adds	r0, r4, #1
 800c218:	463d      	mov	r5, r7
 800c21a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800c21e:	b946      	cbnz	r6, 800c232 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800c220:	1a69      	subs	r1, r5, r1
 800c222:	7021      	strb	r1, [r4, #0]
 800c224:	7829      	ldrb	r1, [r5, #0]
 800c226:	b949      	cbnz	r1, 800c23c <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800c228:	b10b      	cbz	r3, 800c22e <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800c22a:	f800 1b01 	strb.w	r1, [r0], #1
 800c22e:	1a80      	subs	r0, r0, r2
 800c230:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c232:	2e2e      	cmp	r6, #46	; 0x2e
 800c234:	d0f4      	beq.n	800c220 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800c236:	f800 6b01 	strb.w	r6, [r0], #1
 800c23a:	e7ed      	b.n	800c218 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800c23c:	4604      	mov	r4, r0
 800c23e:	1c69      	adds	r1, r5, #1
 800c240:	e7e8      	b.n	800c214 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800c244 <MDNS::CreateAnswerLocalIpAddress()>:
 800c244:	2384      	movs	r3, #132	; 0x84
 800c246:	b510      	push	{r4, lr}
 800c248:	4c0f      	ldr	r4, [pc, #60]	; (800c288 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800c24a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800c24e:	80e3      	strh	r3, [r4, #6]
 800c250:	2300      	movs	r3, #0
 800c252:	490e      	ldr	r1, [pc, #56]	; (800c28c <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800c254:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800c258:	6809      	ldr	r1, [r1, #0]
 800c25a:	f104 0210 	add.w	r2, r4, #16
 800c25e:	2301      	movs	r3, #1
 800c260:	f7ff ffd6 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c264:	490a      	ldr	r1, [pc, #40]	; (800c290 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800c266:	1813      	adds	r3, r2, r0
 800c268:	5011      	str	r1, [r2, r0]
 800c26a:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800c26e:	605a      	str	r2, [r3, #4]
 800c270:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c274:	811a      	strh	r2, [r3, #8]
 800c276:	4a07      	ldr	r2, [pc, #28]	; (800c294 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800c278:	6812      	ldr	r2, [r2, #0]
 800c27a:	6952      	ldr	r2, [r2, #20]
 800c27c:	f8c3 200a 	str.w	r2, [r3, #10]
 800c280:	1b1b      	subs	r3, r3, r4
 800c282:	330a      	adds	r3, #10
 800c284:	6023      	str	r3, [r4, #0]
 800c286:	bd10      	pop	{r4, pc}
 800c288:	20008548 	andcs	r8, r0, r8, asr #10
 800c28c:	20008974 	andcs	r8, r0, r4, ror r9
 800c290:	01800100 	orreq	r0, r0, r0, lsl #2
 800c294:	2000897c 	andcs	r8, r0, ip, ror r9

0800c298 <MDNS::Start()>:
 800c298:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c29a:	4c1d      	ldr	r4, [pc, #116]	; (800c310 <MDNS::Start()+0x78>)
 800c29c:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800c2a0:	4605      	mov	r5, r0
 800c2a2:	6820      	ldr	r0, [r4, #0]
 800c2a4:	f000 fb25 	bl	800c8f2 <Network::Begin(unsigned short)>
 800c2a8:	4e1a      	ldr	r6, [pc, #104]	; (800c314 <MDNS::Start()+0x7c>)
 800c2aa:	4f1b      	ldr	r7, [pc, #108]	; (800c318 <MDNS::Start()+0x80>)
 800c2ac:	4601      	mov	r1, r0
 800c2ae:	6030      	str	r0, [r6, #0]
 800c2b0:	683a      	ldr	r2, [r7, #0]
 800c2b2:	6820      	ldr	r0, [r4, #0]
 800c2b4:	f000 fb2e 	bl	800c914 <Network::JoinGroup(int, unsigned int)>
 800c2b8:	4b18      	ldr	r3, [pc, #96]	; (800c31c <MDNS::Start()+0x84>)
 800c2ba:	681b      	ldr	r3, [r3, #0]
 800c2bc:	b923      	cbnz	r3, 800c2c8 <MDNS::Start()+0x30>
 800c2be:	6821      	ldr	r1, [r4, #0]
 800c2c0:	4628      	mov	r0, r5
 800c2c2:	3120      	adds	r1, #32
 800c2c4:	f7ff ff38 	bl	800c138 <MDNS::SetName(char const*)>
 800c2c8:	4628      	mov	r0, r5
 800c2ca:	f7ff ffbb 	bl	800c244 <MDNS::CreateAnswerLocalIpAddress()>
 800c2ce:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c2d2:	4913      	ldr	r1, [pc, #76]	; (800c320 <MDNS::Start()+0x88>)
 800c2d4:	7830      	ldrb	r0, [r6, #0]
 800c2d6:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c2da:	9300      	str	r3, [sp, #0]
 800c2dc:	683b      	ldr	r3, [r7, #0]
 800c2de:	f7ff fe43 	bl	800bf68 <udp_send>
 800c2e2:	233f      	movs	r3, #63	; 0x3f
 800c2e4:	6820      	ldr	r0, [r4, #0]
 800c2e6:	4c0f      	ldr	r4, [pc, #60]	; (800c324 <MDNS::Start()+0x8c>)
 800c2e8:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800c2ec:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800c2f0:	b929      	cbnz	r1, 800c2fe <MDNS::Start()+0x66>
 800c2f2:	4413      	add	r3, r2
 800c2f4:	429a      	cmp	r2, r3
 800c2f6:	d006      	beq.n	800c306 <MDNS::Start()+0x6e>
 800c2f8:	f802 1b01 	strb.w	r1, [r2], #1
 800c2fc:	e7fa      	b.n	800c2f4 <MDNS::Start()+0x5c>
 800c2fe:	3b01      	subs	r3, #1
 800c300:	f802 1b01 	strb.w	r1, [r2], #1
 800c304:	d1f2      	bne.n	800c2ec <MDNS::Start()+0x54>
 800c306:	2300      	movs	r3, #0
 800c308:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800c30c:	b003      	add	sp, #12
 800c30e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c310:	2000897c 	andcs	r8, r0, ip, ror r9
 800c314:	20000018 	andcs	r0, r0, r8, lsl r0
 800c318:	20008544 	andcs	r8, r0, r4, asr #10
 800c31c:	20008974 	andcs	r8, r0, r4, ror r9
 800c320:	20008548 	andcs	r8, r0, r8, asr #10
 800c324:	080132e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, ip, sp}

0800c328 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800c328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c32c:	4c1b      	ldr	r4, [pc, #108]	; (800c39c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800c32e:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800c332:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800c336:	2300      	movs	r3, #0
 800c338:	f854 100c 	ldr.w	r1, [r4, ip]
 800c33c:	4607      	mov	r7, r0
 800c33e:	f7ff ff67 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c342:	2301      	movs	r3, #1
 800c344:	7bac      	ldrb	r4, [r5, #14]
 800c346:	4616      	mov	r6, r2
 800c348:	4915      	ldr	r1, [pc, #84]	; (800c3a0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800c34a:	4402      	add	r2, r0
 800c34c:	4815      	ldr	r0, [pc, #84]	; (800c3a4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800c34e:	429c      	cmp	r4, r3
 800c350:	bf18      	it	ne
 800c352:	4601      	movne	r1, r0
 800c354:	4638      	mov	r0, r7
 800c356:	f7ff ff5b 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c35a:	4b13      	ldr	r3, [pc, #76]	; (800c3a8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800c35c:	1814      	adds	r4, r2, r0
 800c35e:	5013      	str	r3, [r2, r0]
 800c360:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c364:	6063      	str	r3, [r4, #4]
 800c366:	4b11      	ldr	r3, [pc, #68]	; (800c3ac <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800c368:	f8d3 8000 	ldr.w	r8, [r3]
 800c36c:	4640      	mov	r0, r8
 800c36e:	f7ff feab 	bl	800c0c8 <strlen>
 800c372:	f100 0308 	add.w	r3, r0, #8
 800c376:	ba5b      	rev16	r3, r3
 800c378:	8123      	strh	r3, [r4, #8]
 800c37a:	2300      	movs	r3, #0
 800c37c:	f8c4 300a 	str.w	r3, [r4, #10]
 800c380:	89ab      	ldrh	r3, [r5, #12]
 800c382:	f104 0210 	add.w	r2, r4, #16
 800c386:	ba5b      	rev16	r3, r3
 800c388:	81e3      	strh	r3, [r4, #14]
 800c38a:	4641      	mov	r1, r8
 800c38c:	2301      	movs	r3, #1
 800c38e:	4638      	mov	r0, r7
 800c390:	f7ff ff3e 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c394:	4410      	add	r0, r2
 800c396:	1b80      	subs	r0, r0, r6
 800c398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c39c:	2000874c 	andcs	r8, r0, ip, asr #14
 800c3a0:	080132e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, sp}
 800c3a4:	080132fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 800c3a8:	01802100 	orreq	r2, r0, r0, lsl #2
 800c3ac:	20008974 	andcs	r8, r0, r4, ror r9

0800c3b0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800c3b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3b4:	4e19      	ldr	r6, [pc, #100]	; (800c41c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800c3b6:	010f      	lsls	r7, r1, #4
 800c3b8:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800c3bc:	2300      	movs	r3, #0
 800c3be:	59f1      	ldr	r1, [r6, r7]
 800c3c0:	4604      	mov	r4, r0
 800c3c2:	f7ff ff25 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c3c6:	2301      	movs	r3, #1
 800c3c8:	7bae      	ldrb	r6, [r5, #14]
 800c3ca:	4690      	mov	r8, r2
 800c3cc:	4914      	ldr	r1, [pc, #80]	; (800c420 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800c3ce:	4402      	add	r2, r0
 800c3d0:	4814      	ldr	r0, [pc, #80]	; (800c424 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800c3d2:	429e      	cmp	r6, r3
 800c3d4:	bf18      	it	ne
 800c3d6:	4601      	movne	r1, r0
 800c3d8:	4620      	mov	r0, r4
 800c3da:	f7ff ff19 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c3de:	4b12      	ldr	r3, [pc, #72]	; (800c428 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800c3e0:	1816      	adds	r6, r2, r0
 800c3e2:	5013      	str	r3, [r2, r0]
 800c3e4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c3e8:	68a8      	ldr	r0, [r5, #8]
 800c3ea:	6073      	str	r3, [r6, #4]
 800c3ec:	f106 040b 	add.w	r4, r6, #11
 800c3f0:	b938      	cbnz	r0, 800c402 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800c3f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c3f6:	72b0      	strb	r0, [r6, #10]
 800c3f8:	8133      	strh	r3, [r6, #8]
 800c3fa:	eba4 0008 	sub.w	r0, r4, r8
 800c3fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c402:	f7ff fe61 	bl	800c0c8 <strlen>
 800c406:	4607      	mov	r7, r0
 800c408:	1c43      	adds	r3, r0, #1
 800c40a:	72b0      	strb	r0, [r6, #10]
 800c40c:	ba5b      	rev16	r3, r3
 800c40e:	4620      	mov	r0, r4
 800c410:	68a9      	ldr	r1, [r5, #8]
 800c412:	8133      	strh	r3, [r6, #8]
 800c414:	f7ff fe6d 	bl	800c0f2 <strcpy.isra.0>
 800c418:	443c      	add	r4, r7
 800c41a:	e7ee      	b.n	800c3fa <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800c41c:	2000874c 	andcs	r8, r0, ip, asr #14
 800c420:	080132e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, sp}
 800c424:	080132fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 800c428:	01801000 	orreq	r1, r0, r0

0800c42c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800c42c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c430:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c494 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800c434:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800c438:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800c43c:	6869      	ldr	r1, [r5, #4]
 800c43e:	2301      	movs	r3, #1
 800c440:	4607      	mov	r7, r0
 800c442:	f7ff fee5 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c446:	4b14      	ldr	r3, [pc, #80]	; (800c498 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800c448:	f858 8009 	ldr.w	r8, [r8, r9]
 800c44c:	5013      	str	r3, [r2, r0]
 800c44e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c452:	1816      	adds	r6, r2, r0
 800c454:	6073      	str	r3, [r6, #4]
 800c456:	4640      	mov	r0, r8
 800c458:	4614      	mov	r4, r2
 800c45a:	f7ff fe35 	bl	800c0c8 <strlen>
 800c45e:	f100 030d 	add.w	r3, r0, #13
 800c462:	ba5b      	rev16	r3, r3
 800c464:	4641      	mov	r1, r8
 800c466:	8133      	strh	r3, [r6, #8]
 800c468:	f106 020a 	add.w	r2, r6, #10
 800c46c:	2300      	movs	r3, #0
 800c46e:	4638      	mov	r0, r7
 800c470:	f7ff fece 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c474:	2301      	movs	r3, #1
 800c476:	4402      	add	r2, r0
 800c478:	7bad      	ldrb	r5, [r5, #14]
 800c47a:	4808      	ldr	r0, [pc, #32]	; (800c49c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800c47c:	4908      	ldr	r1, [pc, #32]	; (800c4a0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800c47e:	429d      	cmp	r5, r3
 800c480:	bf18      	it	ne
 800c482:	4601      	movne	r1, r0
 800c484:	4638      	mov	r0, r7
 800c486:	f7ff fec3 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c48a:	4410      	add	r0, r2
 800c48c:	1b00      	subs	r0, r0, r4
 800c48e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c492:	bf00      	nop
 800c494:	2000874c 	andcs	r8, r0, ip, asr #14
 800c498:	01000c00 	tsteq	r0, r0, lsl #24
 800c49c:	080132fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 800c4a0:	080132e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, sp}

0800c4a4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800c4a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4a6:	460f      	mov	r7, r1
 800c4a8:	2301      	movs	r3, #1
 800c4aa:	490f      	ldr	r1, [pc, #60]	; (800c4e8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800c4ac:	4606      	mov	r6, r0
 800c4ae:	f7ff feaf 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c4b2:	4b0e      	ldr	r3, [pc, #56]	; (800c4ec <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800c4b4:	490e      	ldr	r1, [pc, #56]	; (800c4f0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800c4b6:	5013      	str	r3, [r2, r0]
 800c4b8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c4bc:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800c4c0:	684f      	ldr	r7, [r1, #4]
 800c4c2:	1815      	adds	r5, r2, r0
 800c4c4:	606b      	str	r3, [r5, #4]
 800c4c6:	4638      	mov	r0, r7
 800c4c8:	4614      	mov	r4, r2
 800c4ca:	f7ff fdfd 	bl	800c0c8 <strlen>
 800c4ce:	1c83      	adds	r3, r0, #2
 800c4d0:	ba5b      	rev16	r3, r3
 800c4d2:	812b      	strh	r3, [r5, #8]
 800c4d4:	f105 020a 	add.w	r2, r5, #10
 800c4d8:	2301      	movs	r3, #1
 800c4da:	4639      	mov	r1, r7
 800c4dc:	4630      	mov	r0, r6
 800c4de:	f7ff fe97 	bl	800c210 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c4e2:	4410      	add	r0, r2
 800c4e4:	1b00      	subs	r0, r0, r4
 800c4e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4e8:	080132eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, ip, sp}
 800c4ec:	01000c00 	tsteq	r0, r0, lsl #24
 800c4f0:	2000874c 	andcs	r8, r0, ip, asr #14

0800c4f4 <MDNS::CreateMDNSMessage(unsigned int)>:
 800c4f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4f6:	2384      	movs	r3, #132	; 0x84
 800c4f8:	4d19      	ldr	r5, [pc, #100]	; (800c560 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800c4fa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800c4fe:	80eb      	strh	r3, [r5, #6]
 800c500:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c504:	f105 0410 	add.w	r4, r5, #16
 800c508:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800c50c:	4622      	mov	r2, r4
 800c50e:	4606      	mov	r6, r0
 800c510:	460f      	mov	r7, r1
 800c512:	f7ff ff09 	bl	800c328 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800c516:	4404      	add	r4, r0
 800c518:	4622      	mov	r2, r4
 800c51a:	4639      	mov	r1, r7
 800c51c:	4630      	mov	r0, r6
 800c51e:	f7ff ff47 	bl	800c3b0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800c522:	4404      	add	r4, r0
 800c524:	4622      	mov	r2, r4
 800c526:	4639      	mov	r1, r7
 800c528:	4630      	mov	r0, r6
 800c52a:	f7ff ffbb 	bl	800c4a4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800c52e:	4404      	add	r4, r0
 800c530:	4622      	mov	r2, r4
 800c532:	4639      	mov	r1, r7
 800c534:	4630      	mov	r0, r6
 800c536:	f7ff ff79 	bl	800c42c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800c53a:	4a0a      	ldr	r2, [pc, #40]	; (800c564 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800c53c:	4404      	add	r4, r0
 800c53e:	f852 3b10 	ldr.w	r3, [r2], #16
 800c542:	1e60      	subs	r0, r4, #1
 800c544:	3b0c      	subs	r3, #12
 800c546:	4619      	mov	r1, r3
 800c548:	3901      	subs	r1, #1
 800c54a:	d204      	bcs.n	800c556 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800c54c:	441c      	add	r4, r3
 800c54e:	4b06      	ldr	r3, [pc, #24]	; (800c568 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800c550:	1ae4      	subs	r4, r4, r3
 800c552:	602c      	str	r4, [r5, #0]
 800c554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c556:	f812 6b01 	ldrb.w	r6, [r2], #1
 800c55a:	f800 6f01 	strb.w	r6, [r0, #1]!
 800c55e:	e7f3      	b.n	800c548 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800c560:	20008770 	andcs	r8, r0, r0, ror r7
 800c564:	20008548 	andcs	r8, r0, r8, asr #10
 800c568:	20008774 	andcs	r8, r0, r4, ror r7

0800c56c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800c56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c570:	4d40      	ldr	r5, [pc, #256]	; (800c674 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800c572:	b085      	sub	sp, #20
 800c574:	682c      	ldr	r4, [r5, #0]
 800c576:	4680      	mov	r8, r0
 800c578:	460f      	mov	r7, r1
 800c57a:	4616      	mov	r6, r2
 800c57c:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800c580:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800c584:	b11c      	cbz	r4, 800c58e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800c586:	692a      	ldr	r2, [r5, #16]
 800c588:	2a00      	cmp	r2, #0
 800c58a:	d16e      	bne.n	800c66a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800c58c:	2401      	movs	r4, #1
 800c58e:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800c592:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800c596:	8193      	strh	r3, [r2, #12]
 800c598:	f882 b00e 	strb.w	fp, [r2, #14]
 800c59c:	2f00      	cmp	r7, #0
 800c59e:	d154      	bne.n	800c64a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800c5a0:	4b35      	ldr	r3, [pc, #212]	; (800c678 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800c5a2:	6818      	ldr	r0, [r3, #0]
 800c5a4:	3020      	adds	r0, #32
 800c5a6:	f7ff fd8f 	bl	800c0c8 <strlen>
 800c5aa:	4607      	mov	r7, r0
 800c5ac:	4630      	mov	r0, r6
 800c5ae:	f7ff fd8b 	bl	800c0c8 <strlen>
 800c5b2:	4438      	add	r0, r7
 800c5b4:	3001      	adds	r0, #1
 800c5b6:	f003 f83d 	bl	800f634 <operator new[](unsigned int)>
 800c5ba:	4b2f      	ldr	r3, [pc, #188]	; (800c678 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800c5bc:	f845 0009 	str.w	r0, [r5, r9]
 800c5c0:	6819      	ldr	r1, [r3, #0]
 800c5c2:	3120      	adds	r1, #32
 800c5c4:	f7ff fd95 	bl	800c0f2 <strcpy.isra.0>
 800c5c8:	f855 0009 	ldr.w	r0, [r5, r9]
 800c5cc:	4631      	mov	r1, r6
 800c5ce:	f7ff fd98 	bl	800c102 <strcat.isra.0>
 800c5d2:	4631      	mov	r1, r6
 800c5d4:	4640      	mov	r0, r8
 800c5d6:	f7ff fe0d 	bl	800c1f4 <MDNS::FindFirstDotFromRight(char const*) const>
 800c5da:	eb05 0709 	add.w	r7, r5, r9
 800c5de:	4605      	mov	r5, r0
 800c5e0:	f7ff fd72 	bl	800c0c8 <strlen>
 800c5e4:	300d      	adds	r0, #13
 800c5e6:	f003 f825 	bl	800f634 <operator new[](unsigned int)>
 800c5ea:	4629      	mov	r1, r5
 800c5ec:	6078      	str	r0, [r7, #4]
 800c5ee:	f7ff fd80 	bl	800c0f2 <strcpy.isra.0>
 800c5f2:	4922      	ldr	r1, [pc, #136]	; (800c67c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800c5f4:	6878      	ldr	r0, [r7, #4]
 800c5f6:	f7ff fd84 	bl	800c102 <strcat.isra.0>
 800c5fa:	4921      	ldr	r1, [pc, #132]	; (800c680 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800c5fc:	4b21      	ldr	r3, [pc, #132]	; (800c684 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800c5fe:	6878      	ldr	r0, [r7, #4]
 800c600:	f1bb 0f01 	cmp.w	fp, #1
 800c604:	bf18      	it	ne
 800c606:	4619      	movne	r1, r3
 800c608:	f7ff fd7b 	bl	800c102 <strcat.isra.0>
 800c60c:	f1ba 0f00 	cmp.w	sl, #0
 800c610:	d009      	beq.n	800c626 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800c612:	4650      	mov	r0, sl
 800c614:	f7ff fd58 	bl	800c0c8 <strlen>
 800c618:	3001      	adds	r0, #1
 800c61a:	f003 f80b 	bl	800f634 <operator new[](unsigned int)>
 800c61e:	4651      	mov	r1, sl
 800c620:	60b8      	str	r0, [r7, #8]
 800c622:	f7ff fd66 	bl	800c0f2 <strcpy.isra.0>
 800c626:	4621      	mov	r1, r4
 800c628:	4640      	mov	r0, r8
 800c62a:	f7ff ff63 	bl	800c4f4 <MDNS::CreateMDNSMessage(unsigned int)>
 800c62e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c632:	4915      	ldr	r1, [pc, #84]	; (800c688 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800c634:	4815      	ldr	r0, [pc, #84]	; (800c68c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800c636:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c63a:	9300      	str	r3, [sp, #0]
 800c63c:	4b14      	ldr	r3, [pc, #80]	; (800c690 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800c63e:	7800      	ldrb	r0, [r0, #0]
 800c640:	681b      	ldr	r3, [r3, #0]
 800c642:	f7ff fc91 	bl	800bf68 <udp_send>
 800c646:	2001      	movs	r0, #1
 800c648:	e010      	b.n	800c66c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800c64a:	4638      	mov	r0, r7
 800c64c:	f7ff fd3c 	bl	800c0c8 <strlen>
 800c650:	9003      	str	r0, [sp, #12]
 800c652:	4630      	mov	r0, r6
 800c654:	f7ff fd38 	bl	800c0c8 <strlen>
 800c658:	9b03      	ldr	r3, [sp, #12]
 800c65a:	4418      	add	r0, r3
 800c65c:	3001      	adds	r0, #1
 800c65e:	f002 ffe9 	bl	800f634 <operator new[](unsigned int)>
 800c662:	4639      	mov	r1, r7
 800c664:	f845 0009 	str.w	r0, [r5, r9]
 800c668:	e7ac      	b.n	800c5c4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800c66a:	2000      	movs	r0, #0
 800c66c:	b005      	add	sp, #20
 800c66e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c672:	bf00      	nop
 800c674:	2000874c 	andcs	r8, r0, ip, asr #14
 800c678:	2000897c 	andcs	r8, r0, ip, ror r9
 800c67c:	0801226b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sp}
 800c680:	080132e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, sp}
 800c684:	080132fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 800c688:	20008770 	andcs	r8, r0, r0, ror r7
 800c68c:	20000018 	andcs	r0, r0, r8, lsl r0
 800c690:	20008544 	andcs	r8, r0, r4, asr #10

0800c694 <MDNS::HandleRequest(unsigned short)>:
 800c694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c698:	4605      	mov	r5, r0
 800c69a:	2700      	movs	r7, #0
 800c69c:	f04f 080c 	mov.w	r8, #12
 800c6a0:	b0c5      	sub	sp, #276	; 0x114
 800c6a2:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800c764 <MDNS::HandleRequest(unsigned short)+0xd0>
 800c6a6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800c768 <MDNS::HandleRequest(unsigned short)+0xd4>
 800c6aa:	9103      	str	r1, [sp, #12]
 800c6ac:	9b03      	ldr	r3, [sp, #12]
 800c6ae:	42bb      	cmp	r3, r7
 800c6b0:	d802      	bhi.n	800c6b8 <MDNS::HandleRequest(unsigned short)+0x24>
 800c6b2:	b045      	add	sp, #276	; 0x114
 800c6b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6b8:	f8da 1000 	ldr.w	r1, [sl]
 800c6bc:	aa04      	add	r2, sp, #16
 800c6be:	4441      	add	r1, r8
 800c6c0:	4628      	mov	r0, r5
 800c6c2:	f7ff fd55 	bl	800c170 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800c6c6:	f8da 2000 	ldr.w	r2, [sl]
 800c6ca:	4440      	add	r0, r8
 800c6cc:	1813      	adds	r3, r2, r0
 800c6ce:	885b      	ldrh	r3, [r3, #2]
 800c6d0:	f100 0804 	add.w	r8, r0, #4
 800c6d4:	ba5b      	rev16	r3, r3
 800c6d6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c6da:	2b01      	cmp	r3, #1
 800c6dc:	d13d      	bne.n	800c75a <MDNS::HandleRequest(unsigned short)+0xc6>
 800c6de:	5a14      	ldrh	r4, [r2, r0]
 800c6e0:	4b22      	ldr	r3, [pc, #136]	; (800c76c <MDNS::HandleRequest(unsigned short)+0xd8>)
 800c6e2:	ba64      	rev16	r4, r4
 800c6e4:	6818      	ldr	r0, [r3, #0]
 800c6e6:	a904      	add	r1, sp, #16
 800c6e8:	b2a4      	uxth	r4, r4
 800c6ea:	f7ff fcf5 	bl	800c0d8 <strcmp>
 800c6ee:	b968      	cbnz	r0, 800c70c <MDNS::HandleRequest(unsigned short)+0x78>
 800c6f0:	2c01      	cmp	r4, #1
 800c6f2:	d10b      	bne.n	800c70c <MDNS::HandleRequest(unsigned short)+0x78>
 800c6f4:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c6f8:	491d      	ldr	r1, [pc, #116]	; (800c770 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800c6fa:	481e      	ldr	r0, [pc, #120]	; (800c774 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800c6fc:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c700:	9300      	str	r3, [sp, #0]
 800c702:	4b1d      	ldr	r3, [pc, #116]	; (800c778 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800c704:	7800      	ldrb	r0, [r0, #0]
 800c706:	681b      	ldr	r3, [r3, #0]
 800c708:	f7ff fc2e 	bl	800bf68 <udp_send>
 800c70c:	481b      	ldr	r0, [pc, #108]	; (800c77c <MDNS::HandleRequest(unsigned short)+0xe8>)
 800c70e:	a904      	add	r1, sp, #16
 800c710:	f7ff fce2 	bl	800c0d8 <strcmp>
 800c714:	f04f 0900 	mov.w	r9, #0
 800c718:	4e19      	ldr	r6, [pc, #100]	; (800c780 <MDNS::HandleRequest(unsigned short)+0xec>)
 800c71a:	9002      	str	r0, [sp, #8]
 800c71c:	6833      	ldr	r3, [r6, #0]
 800c71e:	b1c3      	cbz	r3, 800c752 <MDNS::HandleRequest(unsigned short)+0xbe>
 800c720:	9b02      	ldr	r3, [sp, #8]
 800c722:	b123      	cbz	r3, 800c72e <MDNS::HandleRequest(unsigned short)+0x9a>
 800c724:	6870      	ldr	r0, [r6, #4]
 800c726:	a904      	add	r1, sp, #16
 800c728:	f7ff fcd6 	bl	800c0d8 <strcmp>
 800c72c:	b988      	cbnz	r0, 800c752 <MDNS::HandleRequest(unsigned short)+0xbe>
 800c72e:	2c0c      	cmp	r4, #12
 800c730:	d10f      	bne.n	800c752 <MDNS::HandleRequest(unsigned short)+0xbe>
 800c732:	4649      	mov	r1, r9
 800c734:	4628      	mov	r0, r5
 800c736:	f7ff fedd 	bl	800c4f4 <MDNS::CreateMDNSMessage(unsigned int)>
 800c73a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c73e:	480d      	ldr	r0, [pc, #52]	; (800c774 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800c740:	9300      	str	r3, [sp, #0]
 800c742:	4b0d      	ldr	r3, [pc, #52]	; (800c778 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800c744:	f8bb 2000 	ldrh.w	r2, [fp]
 800c748:	681b      	ldr	r3, [r3, #0]
 800c74a:	490e      	ldr	r1, [pc, #56]	; (800c784 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800c74c:	7800      	ldrb	r0, [r0, #0]
 800c74e:	f7ff fc0b 	bl	800bf68 <udp_send>
 800c752:	3610      	adds	r6, #16
 800c754:	f1b9 0f00 	cmp.w	r9, #0
 800c758:	d001      	beq.n	800c75e <MDNS::HandleRequest(unsigned short)+0xca>
 800c75a:	3701      	adds	r7, #1
 800c75c:	e7a6      	b.n	800c6ac <MDNS::HandleRequest(unsigned short)+0x18>
 800c75e:	f04f 0901 	mov.w	r9, #1
 800c762:	e7db      	b.n	800c71c <MDNS::HandleRequest(unsigned short)+0x88>
 800c764:	20008978 	andcs	r8, r0, r8, ror r9
 800c768:	20008770 	andcs	r8, r0, r0, ror r7
 800c76c:	20008974 	andcs	r8, r0, r4, ror r9
 800c770:	20008548 	andcs	r8, r0, r8, asr #10
 800c774:	20000018 	andcs	r0, r0, r8, lsl r0
 800c778:	20008544 	andcs	r8, r0, r4, asr #10
 800c77c:	080132eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, ip, sp}
 800c780:	2000874c 	andcs	r8, r0, ip, asr #14
 800c784:	20008774 	andcs	r8, r0, r4, ror r7

0800c788 <MDNS::Parse()>:
 800c788:	4b08      	ldr	r3, [pc, #32]	; (800c7ac <MDNS::Parse()+0x24>)
 800c78a:	681a      	ldr	r2, [r3, #0]
 800c78c:	8853      	ldrh	r3, [r2, #2]
 800c78e:	ba5b      	rev16	r3, r3
 800c790:	b299      	uxth	r1, r3
 800c792:	041b      	lsls	r3, r3, #16
 800c794:	d408      	bmi.n	800c7a8 <MDNS::Parse()+0x20>
 800c796:	0b89      	lsrs	r1, r1, #14
 800c798:	d106      	bne.n	800c7a8 <MDNS::Parse()+0x20>
 800c79a:	8891      	ldrh	r1, [r2, #4]
 800c79c:	b28b      	uxth	r3, r1
 800c79e:	b11b      	cbz	r3, 800c7a8 <MDNS::Parse()+0x20>
 800c7a0:	ba49      	rev16	r1, r1
 800c7a2:	b289      	uxth	r1, r1
 800c7a4:	f7ff bf76 	b.w	800c694 <MDNS::HandleRequest(unsigned short)>
 800c7a8:	4770      	bx	lr
 800c7aa:	bf00      	nop
 800c7ac:	20008978 	andcs	r8, r0, r8, ror r9

0800c7b0 <MDNS::Run()>:
 800c7b0:	b538      	push	{r3, r4, r5, lr}
 800c7b2:	4d0c      	ldr	r5, [pc, #48]	; (800c7e4 <MDNS::Run()+0x34>)
 800c7b4:	4604      	mov	r4, r0
 800c7b6:	480c      	ldr	r0, [pc, #48]	; (800c7e8 <MDNS::Run()+0x38>)
 800c7b8:	462b      	mov	r3, r5
 800c7ba:	4a0c      	ldr	r2, [pc, #48]	; (800c7ec <MDNS::Run()+0x3c>)
 800c7bc:	490c      	ldr	r1, [pc, #48]	; (800c7f0 <MDNS::Run()+0x40>)
 800c7be:	7800      	ldrb	r0, [r0, #0]
 800c7c0:	f7ff fbac 	bl	800bf1c <udp_recv2>
 800c7c4:	4b0b      	ldr	r3, [pc, #44]	; (800c7f4 <MDNS::Run()+0x44>)
 800c7c6:	882a      	ldrh	r2, [r5, #0]
 800c7c8:	8018      	strh	r0, [r3, #0]
 800c7ca:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c7ce:	429a      	cmp	r2, r3
 800c7d0:	d106      	bne.n	800c7e0 <MDNS::Run()+0x30>
 800c7d2:	280c      	cmp	r0, #12
 800c7d4:	d904      	bls.n	800c7e0 <MDNS::Run()+0x30>
 800c7d6:	4620      	mov	r0, r4
 800c7d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7dc:	f7ff bfd4 	b.w	800c788 <MDNS::Parse()>
 800c7e0:	bd38      	pop	{r3, r4, r5, pc}
 800c7e2:	bf00      	nop
 800c7e4:	20008540 	andcs	r8, r0, r0, asr #10
 800c7e8:	20000018 	andcs	r0, r0, r8, lsl r0
 800c7ec:	2000853c 	andcs	r8, r0, ip, lsr r5
 800c7f0:	20008978 	andcs	r8, r0, r8, ror r9
 800c7f4:	2000876c 	andcs	r8, r0, ip, ror #14

0800c7f8 <MDNS::Print()>:
 800c7f8:	b510      	push	{r4, lr}
 800c7fa:	4816      	ldr	r0, [pc, #88]	; (800c854 <MDNS::Print()+0x5c>)
 800c7fc:	f003 f9e0 	bl	800fbc0 <printf>
 800c800:	4b15      	ldr	r3, [pc, #84]	; (800c858 <MDNS::Print()+0x60>)
 800c802:	681b      	ldr	r3, [r3, #0]
 800c804:	3301      	adds	r3, #1
 800c806:	d104      	bne.n	800c812 <MDNS::Print()+0x1a>
 800c808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c80c:	4813      	ldr	r0, [pc, #76]	; (800c85c <MDNS::Print()+0x64>)
 800c80e:	f003 b9d7 	b.w	800fbc0 <printf>
 800c812:	4b13      	ldr	r3, [pc, #76]	; (800c860 <MDNS::Print()+0x68>)
 800c814:	4c13      	ldr	r4, [pc, #76]	; (800c864 <MDNS::Print()+0x6c>)
 800c816:	6819      	ldr	r1, [r3, #0]
 800c818:	4813      	ldr	r0, [pc, #76]	; (800c868 <MDNS::Print()+0x70>)
 800c81a:	f003 f9d1 	bl	800fbc0 <printf>
 800c81e:	6823      	ldr	r3, [r4, #0]
 800c820:	b14b      	cbz	r3, 800c836 <MDNS::Print()+0x3e>
 800c822:	4a12      	ldr	r2, [pc, #72]	; (800c86c <MDNS::Print()+0x74>)
 800c824:	68a3      	ldr	r3, [r4, #8]
 800c826:	6861      	ldr	r1, [r4, #4]
 800c828:	2b00      	cmp	r3, #0
 800c82a:	bf08      	it	eq
 800c82c:	4613      	moveq	r3, r2
 800c82e:	4810      	ldr	r0, [pc, #64]	; (800c870 <MDNS::Print()+0x78>)
 800c830:	89a2      	ldrh	r2, [r4, #12]
 800c832:	f003 f9c5 	bl	800fbc0 <printf>
 800c836:	6923      	ldr	r3, [r4, #16]
 800c838:	b15b      	cbz	r3, 800c852 <MDNS::Print()+0x5a>
 800c83a:	69a3      	ldr	r3, [r4, #24]
 800c83c:	4a0b      	ldr	r2, [pc, #44]	; (800c86c <MDNS::Print()+0x74>)
 800c83e:	6961      	ldr	r1, [r4, #20]
 800c840:	2b00      	cmp	r3, #0
 800c842:	bf08      	it	eq
 800c844:	4613      	moveq	r3, r2
 800c846:	480a      	ldr	r0, [pc, #40]	; (800c870 <MDNS::Print()+0x78>)
 800c848:	8ba2      	ldrh	r2, [r4, #28]
 800c84a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c84e:	f003 b9b7 	b.w	800fbc0 <printf>
 800c852:	bd10      	pop	{r4, pc}
 800c854:	08013308 	stmdaeq	r1, {r3, r8, r9, ip, sp}
 800c858:	20000018 	andcs	r0, r0, r8, lsl r0
 800c85c:	0801330e 	stmdaeq	r1, {r1, r2, r3, r8, r9, ip, sp}
 800c860:	20008974 	andcs	r8, r0, r4, ror r9
 800c864:	2000874c 	andcs	r8, r0, ip, asr #14
 800c868:	0801331c 	stmdaeq	r1, {r2, r3, r4, r8, r9, ip, sp}
 800c86c:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 800c870:	08013328 	stmdaeq	r1, {r3, r5, r8, r9, ip, sp}

0800c874 <strncpy.constprop.0.isra.0>:
 800c874:	233f      	movs	r3, #63	; 0x3f
 800c876:	3901      	subs	r1, #1
 800c878:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c87c:	b92a      	cbnz	r2, 800c88a <strncpy.constprop.0.isra.0+0x16>
 800c87e:	4403      	add	r3, r0
 800c880:	4298      	cmp	r0, r3
 800c882:	d006      	beq.n	800c892 <strncpy.constprop.0.isra.0+0x1e>
 800c884:	f800 2b01 	strb.w	r2, [r0], #1
 800c888:	e7fa      	b.n	800c880 <strncpy.constprop.0.isra.0+0xc>
 800c88a:	3b01      	subs	r3, #1
 800c88c:	f800 2b01 	strb.w	r2, [r0], #1
 800c890:	d1f2      	bne.n	800c878 <strncpy.constprop.0.isra.0+0x4>
 800c892:	4770      	bx	lr

0800c894 <Network::Network()>:
 800c894:	4a11      	ldr	r2, [pc, #68]	; (800c8dc <Network::Network()+0x48>)
 800c896:	2300      	movs	r3, #0
 800c898:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800c89c:	6010      	str	r0, [r2, #0]
 800c89e:	2201      	movs	r2, #1
 800c8a0:	e9c0 2100 	strd	r2, r1, [r0]
 800c8a4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800c8a8:	2200      	movs	r2, #0
 800c8aa:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 800c8ae:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800c8b2:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c8b6:	490a      	ldr	r1, [pc, #40]	; (800c8e0 <Network::Network()+0x4c>)
 800c8b8:	6102      	str	r2, [r0, #16]
 800c8ba:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800c8be:	61c3      	str	r3, [r0, #28]
 800c8c0:	f880 3020 	strb.w	r3, [r0, #32]
 800c8c4:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800c8c8:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800c8cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c8d0:	f802 3f01 	strb.w	r3, [r2, #1]!
 800c8d4:	2b00      	cmp	r3, #0
 800c8d6:	d1f9      	bne.n	800c8cc <Network::Network()+0x38>
 800c8d8:	4770      	bx	lr
 800c8da:	bf00      	nop
 800c8dc:	2000897c 	andcs	r8, r0, ip, ror r9
 800c8e0:	08013333 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, ip, sp}

0800c8e4 <Network::Shutdown()>:
 800c8e4:	b508      	push	{r3, lr}
 800c8e6:	f001 fb69 	bl	800dfbc <network::display_emac_shutdown()>
 800c8ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c8ee:	f7fa bc7f 	b.w	80071f0 <net_shutdown>

0800c8f2 <Network::Begin(unsigned short)>:
 800c8f2:	4608      	mov	r0, r1
 800c8f4:	f7ff baa2 	b.w	800be3c <udp_bind>

0800c8f8 <Network::End(unsigned short)>:
 800c8f8:	4608      	mov	r0, r1
 800c8fa:	f7ff bab9 	b.w	800be70 <udp_unbind>

0800c8fe <Network::MacAddressCopyTo(unsigned char*)>:
 800c8fe:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800c902:	3901      	subs	r1, #1
 800c904:	30a5      	adds	r0, #165	; 0xa5
 800c906:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c90a:	4283      	cmp	r3, r0
 800c90c:	f801 2f01 	strb.w	r2, [r1, #1]!
 800c910:	d1f9      	bne.n	800c906 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800c912:	4770      	bx	lr

0800c914 <Network::JoinGroup(int, unsigned int)>:
 800c914:	4610      	mov	r0, r2
 800c916:	f000 beed 	b.w	800d6f4 <igmp_join>

0800c91a <Network::LeaveGroup(int, unsigned int)>:
 800c91a:	4610      	mov	r0, r2
 800c91c:	f000 bf16 	b.w	800d74c <igmp_leave>

0800c920 <Network::SetDefaultIp()>:
 800c920:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800c924:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800c928:	041b      	lsls	r3, r3, #16
 800c92a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800c92e:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800c932:	3302      	adds	r3, #2
 800c934:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800c938:	22ff      	movs	r2, #255	; 0xff
 800c93a:	6143      	str	r3, [r0, #20]
 800c93c:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800c940:	4770      	bx	lr
	...

0800c944 <Network::Init(NetworkParamsStore*)>:
 800c944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c948:	b0a5      	sub	sp, #148	; 0x94
 800c94a:	4604      	mov	r4, r0
 800c94c:	a80b      	add	r0, sp, #44	; 0x2c
 800c94e:	f000 f9b9 	bl	800ccc4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800c952:	a80b      	add	r0, sp, #44	; 0x2c
 800c954:	f000 f9c2 	bl	800ccdc <NetworkParams::Load()>
 800c958:	b110      	cbz	r0, 800c960 <Network::Init(NetworkParamsStore*)+0x1c>
 800c95a:	a80b      	add	r0, sp, #44	; 0x2c
 800c95c:	f000 fb9b 	bl	800d096 <NetworkParams::Dump()>
 800c960:	f001 fb20 	bl	800dfa4 <network::display_emac_start()>
 800c964:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c966:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800c96a:	9308      	str	r3, [sp, #32]
 800c96c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c96e:	4628      	mov	r0, r5
 800c970:	9309      	str	r3, [sp, #36]	; 0x24
 800c972:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c974:	f104 0620 	add.w	r6, r4, #32
 800c978:	930a      	str	r3, [sp, #40]	; 0x28
 800c97a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c97e:	7163      	strb	r3, [r4, #5]
 800c980:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c982:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800c986:	bf18      	it	ne
 800c988:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800c98c:	061b      	lsls	r3, r3, #24
 800c98e:	bf54      	ite	pl
 800c990:	2300      	movpl	r3, #0
 800c992:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800c996:	60e2      	str	r2, [r4, #12]
 800c998:	6123      	str	r3, [r4, #16]
 800c99a:	f004 fe8f 	bl	80116bc <emac_start(unsigned char*)>
 800c99e:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	f040 80bf 	bne.w	800cb26 <Network::Init(NetworkParamsStore*)+0x1e2>
 800c9a8:	497e      	ldr	r1, [pc, #504]	; (800cba4 <Network::Init(NetworkParamsStore*)+0x260>)
 800c9aa:	f104 001f 	add.w	r0, r4, #31
 800c9ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c9b2:	1c5f      	adds	r7, r3, #1
 800c9b4:	2a00      	cmp	r2, #0
 800c9b6:	f040 80b2 	bne.w	800cb1e <Network::Init(NetworkParamsStore*)+0x1da>
 800c9ba:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800c9be:	18e1      	adds	r1, r4, r3
 800c9c0:	0910      	lsrs	r0, r2, #4
 800c9c2:	2a9f      	cmp	r2, #159	; 0x9f
 800c9c4:	f002 020f 	and.w	r2, r2, #15
 800c9c8:	bf94      	ite	ls
 800c9ca:	3030      	addls	r0, #48	; 0x30
 800c9cc:	3037      	addhi	r0, #55	; 0x37
 800c9ce:	2a09      	cmp	r2, #9
 800c9d0:	bf94      	ite	ls
 800c9d2:	3230      	addls	r2, #48	; 0x30
 800c9d4:	3237      	addhi	r2, #55	; 0x37
 800c9d6:	4427      	add	r7, r4
 800c9d8:	f881 0020 	strb.w	r0, [r1, #32]
 800c9dc:	f887 2020 	strb.w	r2, [r7, #32]
 800c9e0:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800c9e4:	f103 0e02 	add.w	lr, r3, #2
 800c9e8:	0910      	lsrs	r0, r2, #4
 800c9ea:	2a9f      	cmp	r2, #159	; 0x9f
 800c9ec:	f002 020f 	and.w	r2, r2, #15
 800c9f0:	bf94      	ite	ls
 800c9f2:	3030      	addls	r0, #48	; 0x30
 800c9f4:	3037      	addhi	r0, #55	; 0x37
 800c9f6:	f103 0c03 	add.w	ip, r3, #3
 800c9fa:	2a09      	cmp	r2, #9
 800c9fc:	eb04 070e 	add.w	r7, r4, lr
 800ca00:	f887 0020 	strb.w	r0, [r7, #32]
 800ca04:	bf94      	ite	ls
 800ca06:	3230      	addls	r2, #48	; 0x30
 800ca08:	3237      	addhi	r2, #55	; 0x37
 800ca0a:	eb04 000c 	add.w	r0, r4, ip
 800ca0e:	f880 2020 	strb.w	r2, [r0, #32]
 800ca12:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800ca16:	1d1f      	adds	r7, r3, #4
 800ca18:	0910      	lsrs	r0, r2, #4
 800ca1a:	2a9f      	cmp	r2, #159	; 0x9f
 800ca1c:	f002 020f 	and.w	r2, r2, #15
 800ca20:	bf94      	ite	ls
 800ca22:	3030      	addls	r0, #48	; 0x30
 800ca24:	3037      	addhi	r0, #55	; 0x37
 800ca26:	3305      	adds	r3, #5
 800ca28:	2a09      	cmp	r2, #9
 800ca2a:	4423      	add	r3, r4
 800ca2c:	4427      	add	r7, r4
 800ca2e:	bf94      	ite	ls
 800ca30:	3230      	addls	r2, #48	; 0x30
 800ca32:	3237      	addhi	r2, #55	; 0x37
 800ca34:	f887 0020 	strb.w	r0, [r7, #32]
 800ca38:	f883 2020 	strb.w	r2, [r3, #32]
 800ca3c:	2300      	movs	r3, #0
 800ca3e:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800ca42:	f000 fee9 	bl	800d818 <net::link_register_read()>
 800ca46:	7963      	ldrb	r3, [r4, #5]
 800ca48:	6020      	str	r0, [r4, #0]
 800ca4a:	2800      	cmp	r0, #0
 800ca4c:	f040 8095 	bne.w	800cb7a <Network::Init(NetworkParamsStore*)+0x236>
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	f040 80a3 	bne.w	800cb9c <Network::Init(NetworkParamsStore*)+0x258>
 800ca56:	9b08      	ldr	r3, [sp, #32]
 800ca58:	2b00      	cmp	r3, #0
 800ca5a:	d16d      	bne.n	800cb38 <Network::Init(NetworkParamsStore*)+0x1f4>
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	f7ff ff5f 	bl	800c920 <Network::SetDefaultIp()>
 800ca62:	6963      	ldr	r3, [r4, #20]
 800ca64:	69e2      	ldr	r2, [r4, #28]
 800ca66:	9308      	str	r3, [sp, #32]
 800ca68:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800ca6c:	f104 0805 	add.w	r8, r4, #5
 800ca70:	f104 0907 	add.w	r9, r4, #7
 800ca74:	4643      	mov	r3, r8
 800ca76:	4632      	mov	r2, r6
 800ca78:	4628      	mov	r0, r5
 800ca7a:	f8cd 9000 	str.w	r9, [sp]
 800ca7e:	a908      	add	r1, sp, #32
 800ca80:	f7fa fb66 	bl	8007150 <net_init>
 800ca84:	79e3      	ldrb	r3, [r4, #7]
 800ca86:	b113      	cbz	r3, 800ca8e <Network::Init(NetworkParamsStore*)+0x14a>
 800ca88:	2004      	movs	r0, #4
 800ca8a:	f001 fa9d 	bl	800dfc8 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800ca8e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ca92:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800ca96:	9304      	str	r3, [sp, #16]
 800ca98:	233c      	movs	r3, #60	; 0x3c
 800ca9a:	fb03 f30a 	mul.w	r3, r3, sl
 800ca9e:	4f42      	ldr	r7, [pc, #264]	; (800cba8 <Network::Init(NetworkParamsStore*)+0x264>)
 800caa0:	f8df b108 	ldr.w	fp, [pc, #264]	; 800cbac <Network::Init(NetworkParamsStore*)+0x268>
 800caa4:	9303      	str	r3, [sp, #12]
 800caa6:	79e3      	ldrb	r3, [r4, #7]
 800caa8:	b373      	cbz	r3, 800cb08 <Network::Init(NetworkParamsStore*)+0x1c4>
 800caaa:	f1ba 0f00 	cmp.w	sl, #0
 800caae:	d02b      	beq.n	800cb08 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cab0:	9b04      	ldr	r3, [sp, #16]
 800cab2:	b34b      	cbz	r3, 800cb08 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cab4:	2104      	movs	r1, #4
 800cab6:	6838      	ldr	r0, [r7, #0]
 800cab8:	f002 fcda 	bl	800f470 <LedBlink::SetMode(ledblink::Mode)>
 800cabc:	2003      	movs	r0, #3
 800cabe:	f001 fa83 	bl	800dfc8 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cac2:	2000      	movs	r0, #0
 800cac4:	f003 f9b2 	bl	800fe2c <time>
 800cac8:	9005      	str	r0, [sp, #20]
 800caca:	2000      	movs	r0, #0
 800cacc:	f003 f9ae 	bl	800fe2c <time>
 800cad0:	9b05      	ldr	r3, [sp, #20]
 800cad2:	4937      	ldr	r1, [pc, #220]	; (800cbb0 <Network::Init(NetworkParamsStore*)+0x26c>)
 800cad4:	1ac0      	subs	r0, r0, r3
 800cad6:	9b03      	ldr	r3, [sp, #12]
 800cad8:	4298      	cmp	r0, r3
 800cada:	db35      	blt.n	800cb48 <Network::Init(NetworkParamsStore*)+0x204>
 800cadc:	2001      	movs	r0, #1
 800cade:	f001 fa73 	bl	800dfc8 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cae2:	2101      	movs	r1, #1
 800cae4:	6838      	ldr	r0, [r7, #0]
 800cae6:	f002 fcc3 	bl	800f470 <LedBlink::SetMode(ledblink::Mode)>
 800caea:	2301      	movs	r3, #1
 800caec:	7163      	strb	r3, [r4, #5]
 800caee:	2300      	movs	r3, #0
 800caf0:	4632      	mov	r2, r6
 800caf2:	71e3      	strb	r3, [r4, #7]
 800caf4:	4628      	mov	r0, r5
 800caf6:	4643      	mov	r3, r8
 800caf8:	f8cd 9000 	str.w	r9, [sp]
 800cafc:	a908      	add	r1, sp, #32
 800cafe:	f7fa fb27 	bl	8007150 <net_init>
 800cb02:	7963      	ldrb	r3, [r4, #5]
 800cb04:	2b00      	cmp	r3, #0
 800cb06:	d0ce      	beq.n	800caa6 <Network::Init(NetworkParamsStore*)+0x162>
 800cb08:	9b08      	ldr	r3, [sp, #32]
 800cb0a:	6163      	str	r3, [r4, #20]
 800cb0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb0e:	61e3      	str	r3, [r4, #28]
 800cb10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb12:	61a3      	str	r3, [r4, #24]
 800cb14:	f001 fa4c 	bl	800dfb0 <network::display_ip()>
 800cb18:	b025      	add	sp, #148	; 0x94
 800cb1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb1e:	463b      	mov	r3, r7
 800cb20:	f800 2f01 	strb.w	r2, [r0, #1]!
 800cb24:	e743      	b.n	800c9ae <Network::Init(NetworkParamsStore*)+0x6a>
 800cb26:	4630      	mov	r0, r6
 800cb28:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800cb2c:	f7ff fea2 	bl	800c874 <strncpy.constprop.0.isra.0>
 800cb30:	2300      	movs	r3, #0
 800cb32:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800cb36:	e784      	b.n	800ca42 <Network::Init(NetworkParamsStore*)+0xfe>
 800cb38:	69e1      	ldr	r1, [r4, #28]
 800cb3a:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800cb3e:	4053      	eors	r3, r2
 800cb40:	420b      	tst	r3, r1
 800cb42:	bf18      	it	ne
 800cb44:	920a      	strne	r2, [sp, #40]	; 0x28
 800cb46:	e791      	b.n	800ca6c <Network::Init(NetworkParamsStore*)+0x128>
 800cb48:	683b      	ldr	r3, [r7, #0]
 800cb4a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800cb4e:	f1bc 0f00 	cmp.w	ip, #0
 800cb52:	d0ba      	beq.n	800caca <Network::Init(NetworkParamsStore*)+0x186>
 800cb54:	6808      	ldr	r0, [r1, #0]
 800cb56:	695a      	ldr	r2, [r3, #20]
 800cb58:	1a80      	subs	r0, r0, r2
 800cb5a:	4584      	cmp	ip, r0
 800cb5c:	d8b5      	bhi.n	800caca <Network::Init(NetworkParamsStore*)+0x186>
 800cb5e:	6808      	ldr	r0, [r1, #0]
 800cb60:	6158      	str	r0, [r3, #20]
 800cb62:	6918      	ldr	r0, [r3, #16]
 800cb64:	2801      	cmp	r0, #1
 800cb66:	f080 0201 	eor.w	r2, r0, #1
 800cb6a:	611a      	str	r2, [r3, #16]
 800cb6c:	bf16      	itet	ne
 800cb6e:	2301      	movne	r3, #1
 800cb70:	f8cb 0014 	streq.w	r0, [fp, #20]
 800cb74:	f8cb 3010 	strne.w	r3, [fp, #16]
 800cb78:	e7a7      	b.n	800caca <Network::Init(NetworkParamsStore*)+0x186>
 800cb7a:	b11b      	cbz	r3, 800cb84 <Network::Init(NetworkParamsStore*)+0x240>
 800cb7c:	2300      	movs	r3, #0
 800cb7e:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800cb82:	9308      	str	r3, [sp, #32]
 800cb84:	2300      	movs	r3, #0
 800cb86:	f88d 301f 	strb.w	r3, [sp, #31]
 800cb8a:	f10d 031f 	add.w	r3, sp, #31
 800cb8e:	4632      	mov	r2, r6
 800cb90:	4628      	mov	r0, r5
 800cb92:	9300      	str	r3, [sp, #0]
 800cb94:	a908      	add	r1, sp, #32
 800cb96:	f7fa fadb 	bl	8007150 <net_init>
 800cb9a:	e7b5      	b.n	800cb08 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cb9c:	2001      	movs	r0, #1
 800cb9e:	f001 fa13 	bl	800dfc8 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cba2:	e763      	b.n	800ca6c <Network::Init(NetworkParamsStore*)+0x128>
 800cba4:	08013338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip, sp}
 800cba8:	2000a08c 	andcs	sl, r0, ip, lsl #1
 800cbac:	40011000 	andmi	r1, r1, r0
 800cbb0:	2000a0ac 	andcs	sl, r0, ip, lsr #1

0800cbb4 <Network::Print()>:
 800cbb4:	b530      	push	{r4, r5, lr}
 800cbb6:	4604      	mov	r4, r0
 800cbb8:	b085      	sub	sp, #20
 800cbba:	4832      	ldr	r0, [pc, #200]	; (800cc84 <Network::Print()+0xd0>)
 800cbbc:	f003 f800 	bl	800fbc0 <printf>
 800cbc0:	f104 0120 	add.w	r1, r4, #32
 800cbc4:	4830      	ldr	r0, [pc, #192]	; (800cc88 <Network::Print()+0xd4>)
 800cbc6:	f002 fffb 	bl	800fbc0 <printf>
 800cbca:	68a1      	ldr	r1, [r4, #8]
 800cbcc:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800cbd0:	482e      	ldr	r0, [pc, #184]	; (800cc8c <Network::Print()+0xd8>)
 800cbd2:	f002 fff5 	bl	800fbc0 <printf>
 800cbd6:	69e0      	ldr	r0, [r4, #28]
 800cbd8:	f004 ffc0 	bl	8011b5c <__popcountsi2>
 800cbdc:	6965      	ldr	r5, [r4, #20]
 800cbde:	9001      	str	r0, [sp, #4]
 800cbe0:	0e2b      	lsrs	r3, r5, #24
 800cbe2:	9300      	str	r3, [sp, #0]
 800cbe4:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800cbe8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800cbec:	b2e9      	uxtb	r1, r5
 800cbee:	4828      	ldr	r0, [pc, #160]	; (800cc90 <Network::Print()+0xdc>)
 800cbf0:	f002 ffe6 	bl	800fbc0 <printf>
 800cbf4:	69e1      	ldr	r1, [r4, #28]
 800cbf6:	4827      	ldr	r0, [pc, #156]	; (800cc94 <Network::Print()+0xe0>)
 800cbf8:	0e0b      	lsrs	r3, r1, #24
 800cbfa:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cbfe:	9300      	str	r3, [sp, #0]
 800cc00:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc04:	b2c9      	uxtb	r1, r1
 800cc06:	f002 ffdb 	bl	800fbc0 <printf>
 800cc0a:	69a1      	ldr	r1, [r4, #24]
 800cc0c:	4822      	ldr	r0, [pc, #136]	; (800cc98 <Network::Print()+0xe4>)
 800cc0e:	0e0b      	lsrs	r3, r1, #24
 800cc10:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cc14:	9300      	str	r3, [sp, #0]
 800cc16:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc1a:	b2c9      	uxtb	r1, r1
 800cc1c:	f002 ffd0 	bl	800fbc0 <printf>
 800cc20:	69e3      	ldr	r3, [r4, #28]
 800cc22:	6961      	ldr	r1, [r4, #20]
 800cc24:	481d      	ldr	r0, [pc, #116]	; (800cc9c <Network::Print()+0xe8>)
 800cc26:	ea61 0103 	orn	r1, r1, r3
 800cc2a:	0e0b      	lsrs	r3, r1, #24
 800cc2c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cc30:	9300      	str	r3, [sp, #0]
 800cc32:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc36:	b2c9      	uxtb	r1, r1
 800cc38:	f002 ffc2 	bl	800fbc0 <printf>
 800cc3c:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800cc40:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800cc44:	9302      	str	r3, [sp, #8]
 800cc46:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800cc4a:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800cc4e:	9301      	str	r3, [sp, #4]
 800cc50:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800cc54:	4812      	ldr	r0, [pc, #72]	; (800cca0 <Network::Print()+0xec>)
 800cc56:	9300      	str	r3, [sp, #0]
 800cc58:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800cc5c:	f002 ffb0 	bl	800fbc0 <printf>
 800cc60:	4b10      	ldr	r3, [pc, #64]	; (800cca4 <Network::Print()+0xf0>)
 800cc62:	681b      	ldr	r3, [r3, #0]
 800cc64:	79da      	ldrb	r2, [r3, #7]
 800cc66:	b952      	cbnz	r2, 800cc7e <Network::Print()+0xca>
 800cc68:	795b      	ldrb	r3, [r3, #5]
 800cc6a:	2b00      	cmp	r3, #0
 800cc6c:	bf14      	ite	ne
 800cc6e:	2144      	movne	r1, #68	; 0x44
 800cc70:	2153      	moveq	r1, #83	; 0x53
 800cc72:	480d      	ldr	r0, [pc, #52]	; (800cca8 <Network::Print()+0xf4>)
 800cc74:	b005      	add	sp, #20
 800cc76:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cc7a:	f002 bfa1 	b.w	800fbc0 <printf>
 800cc7e:	215a      	movs	r1, #90	; 0x5a
 800cc80:	e7f7      	b.n	800cc72 <Network::Print()+0xbe>
 800cc82:	bf00      	nop
 800cc84:	08013344 	stmdaeq	r1, {r2, r6, r8, r9, ip, sp}
 800cc88:	0801334d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, ip, sp}
 800cc8c:	0801335e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, ip, sp}
 800cc90:	08013373 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, ip, sp}
 800cc94:	08013390 	stmdaeq	r1, {r4, r7, r8, r9, ip, sp}
 800cc98:	080133aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, ip, sp}
 800cc9c:	080133c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, ip, sp}
 800cca0:	080133de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, ip, sp}
 800cca4:	2000897c 	andcs	r8, r0, ip, ror r9
 800cca8:	0801340a 	stmdaeq	r1, {r1, r3, sl, ip, sp}

0800ccac <Network::TcpBegin(unsigned short)>:
 800ccac:	4608      	mov	r0, r1
 800ccae:	f7fe bfff 	b.w	800bcb0 <tcp_begin>

0800ccb2 <Network::TcpRead(int, unsigned char const**)>:
 800ccb2:	4608      	mov	r0, r1
 800ccb4:	4611      	mov	r1, r2
 800ccb6:	f7ff b839 	b.w	800bd2c <tcp_read>

0800ccba <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800ccba:	4608      	mov	r0, r1
 800ccbc:	4611      	mov	r1, r2
 800ccbe:	461a      	mov	r2, r3
 800ccc0:	f7ff b810 	b.w	800bce4 <tcp_write>

0800ccc4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800ccc4:	b510      	push	{r4, lr}
 800ccc6:	225e      	movs	r2, #94	; 0x5e
 800ccc8:	4604      	mov	r4, r0
 800ccca:	f840 1b04 	str.w	r1, [r0], #4
 800ccce:	2100      	movs	r1, #0
 800ccd0:	f002 fd5c 	bl	800f78c <memset>
 800ccd4:	2301      	movs	r3, #1
 800ccd6:	4620      	mov	r0, r4
 800ccd8:	7623      	strb	r3, [r4, #24]
 800ccda:	bd10      	pop	{r4, pc}

0800ccdc <NetworkParams::Load()>:
 800ccdc:	b508      	push	{r3, lr}
 800ccde:	2300      	movs	r3, #0
 800cce0:	4601      	mov	r1, r0
 800cce2:	6043      	str	r3, [r0, #4]
 800cce4:	6800      	ldr	r0, [r0, #0]
 800cce6:	b120      	cbz	r0, 800ccf2 <NetworkParams::Load()+0x16>
 800cce8:	6803      	ldr	r3, [r0, #0]
 800ccea:	3104      	adds	r1, #4
 800ccec:	68db      	ldr	r3, [r3, #12]
 800ccee:	4798      	blx	r3
 800ccf0:	2001      	movs	r0, #1
 800ccf2:	bd08      	pop	{r3, pc}

0800ccf4 <NetworkParams::Load(char const*, unsigned int)>:
 800ccf4:	6803      	ldr	r3, [r0, #0]
 800ccf6:	b1d3      	cbz	r3, 800cd2e <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800ccf8:	2300      	movs	r3, #0
 800ccfa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ccfc:	460d      	mov	r5, r1
 800ccfe:	4616      	mov	r6, r2
 800cd00:	4604      	mov	r4, r0
 800cd02:	6043      	str	r3, [r0, #4]
 800cd04:	4602      	mov	r2, r0
 800cd06:	490a      	ldr	r1, [pc, #40]	; (800cd30 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800cd08:	4668      	mov	r0, sp
 800cd0a:	f001 ff67 	bl	800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cd0e:	4632      	mov	r2, r6
 800cd10:	4629      	mov	r1, r5
 800cd12:	4668      	mov	r0, sp
 800cd14:	f001 ff66 	bl	800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>
 800cd18:	4621      	mov	r1, r4
 800cd1a:	f851 0b04 	ldr.w	r0, [r1], #4
 800cd1e:	6803      	ldr	r3, [r0, #0]
 800cd20:	689b      	ldr	r3, [r3, #8]
 800cd22:	4798      	blx	r3
 800cd24:	4668      	mov	r0, sp
 800cd26:	f001 ff5c 	bl	800ebe2 <ReadConfigFile::~ReadConfigFile()>
 800cd2a:	b002      	add	sp, #8
 800cd2c:	bd70      	pop	{r4, r5, r6, pc}
 800cd2e:	4770      	bx	lr
 800cd30:	0800ce61 	stmdaeq	r0, {r0, r5, r6, r9, sl, fp, lr, pc}

0800cd34 <NetworkParams::callbackFunction(char const*)>:
 800cd34:	b530      	push	{r4, r5, lr}
 800cd36:	460d      	mov	r5, r1
 800cd38:	b085      	sub	sp, #20
 800cd3a:	4604      	mov	r4, r0
 800cd3c:	4942      	ldr	r1, [pc, #264]	; (800ce48 <NetworkParams::callbackFunction(char const*)+0x114>)
 800cd3e:	4628      	mov	r0, r5
 800cd40:	f10d 0207 	add.w	r2, sp, #7
 800cd44:	f001 fffa 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd48:	b978      	cbnz	r0, 800cd6a <NetworkParams::callbackFunction(char const*)+0x36>
 800cd4a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800cd4e:	6863      	ldr	r3, [r4, #4]
 800cd50:	b142      	cbz	r2, 800cd64 <NetworkParams::callbackFunction(char const*)+0x30>
 800cd52:	f023 0301 	bic.w	r3, r3, #1
 800cd56:	3a00      	subs	r2, #0
 800cd58:	bf18      	it	ne
 800cd5a:	2201      	movne	r2, #1
 800cd5c:	6063      	str	r3, [r4, #4]
 800cd5e:	7622      	strb	r2, [r4, #24]
 800cd60:	b005      	add	sp, #20
 800cd62:	bd30      	pop	{r4, r5, pc}
 800cd64:	f043 0301 	orr.w	r3, r3, #1
 800cd68:	e7f5      	b.n	800cd56 <NetworkParams::callbackFunction(char const*)+0x22>
 800cd6a:	4628      	mov	r0, r5
 800cd6c:	4937      	ldr	r1, [pc, #220]	; (800ce4c <NetworkParams::callbackFunction(char const*)+0x118>)
 800cd6e:	f10d 0207 	add.w	r2, sp, #7
 800cd72:	f001 ffe3 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd76:	b980      	cbnz	r0, 800cd9a <NetworkParams::callbackFunction(char const*)+0x66>
 800cd78:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800cd7c:	6863      	ldr	r3, [r4, #4]
 800cd7e:	1e51      	subs	r1, r2, #1
 800cd80:	2904      	cmp	r1, #4
 800cd82:	bf97      	itett	ls
 800cd84:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800cd88:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800cd8c:	6063      	strls	r3, [r4, #4]
 800cd8e:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800cd92:	bf84      	itt	hi
 800cd94:	6063      	strhi	r3, [r4, #4]
 800cd96:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800cd9a:	4628      	mov	r0, r5
 800cd9c:	492c      	ldr	r1, [pc, #176]	; (800ce50 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800cd9e:	aa02      	add	r2, sp, #8
 800cda0:	f001 ff6d 	bl	800ec7e <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800cda4:	b9e8      	cbnz	r0, 800cde2 <NetworkParams::callbackFunction(char const*)+0xae>
 800cda6:	9a02      	ldr	r2, [sp, #8]
 800cda8:	6863      	ldr	r3, [r4, #4]
 800cdaa:	b2d1      	uxtb	r1, r2
 800cdac:	29ac      	cmp	r1, #172	; 0xac
 800cdae:	f3c2 2007 	ubfx	r0, r2, #8, #8
 800cdb2:	d007      	beq.n	800cdc4 <NetworkParams::callbackFunction(char const*)+0x90>
 800cdb4:	29c0      	cmp	r1, #192	; 0xc0
 800cdb6:	d00c      	beq.n	800cdd2 <NetworkParams::callbackFunction(char const*)+0x9e>
 800cdb8:	290a      	cmp	r1, #10
 800cdba:	d10d      	bne.n	800cdd8 <NetworkParams::callbackFunction(char const*)+0xa4>
 800cdbc:	60a2      	str	r2, [r4, #8]
 800cdbe:	f043 0302 	orr.w	r3, r3, #2
 800cdc2:	e004      	b.n	800cdce <NetworkParams::callbackFunction(char const*)+0x9a>
 800cdc4:	3810      	subs	r0, #16
 800cdc6:	280f      	cmp	r0, #15
 800cdc8:	d9f8      	bls.n	800cdbc <NetworkParams::callbackFunction(char const*)+0x88>
 800cdca:	f023 0302 	bic.w	r3, r3, #2
 800cdce:	6063      	str	r3, [r4, #4]
 800cdd0:	e7c6      	b.n	800cd60 <NetworkParams::callbackFunction(char const*)+0x2c>
 800cdd2:	28a8      	cmp	r0, #168	; 0xa8
 800cdd4:	d1f9      	bne.n	800cdca <NetworkParams::callbackFunction(char const*)+0x96>
 800cdd6:	e7f1      	b.n	800cdbc <NetworkParams::callbackFunction(char const*)+0x88>
 800cdd8:	2902      	cmp	r1, #2
 800cdda:	d0ef      	beq.n	800cdbc <NetworkParams::callbackFunction(char const*)+0x88>
 800cddc:	2a00      	cmp	r2, #0
 800cdde:	d0ed      	beq.n	800cdbc <NetworkParams::callbackFunction(char const*)+0x88>
 800cde0:	e7f3      	b.n	800cdca <NetworkParams::callbackFunction(char const*)+0x96>
 800cde2:	4628      	mov	r0, r5
 800cde4:	491b      	ldr	r1, [pc, #108]	; (800ce54 <NetworkParams::callbackFunction(char const*)+0x120>)
 800cde6:	aa02      	add	r2, sp, #8
 800cde8:	f001 ff49 	bl	800ec7e <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800cdec:	b970      	cbnz	r0, 800ce0c <NetworkParams::callbackFunction(char const*)+0xd8>
 800cdee:	9a02      	ldr	r2, [sp, #8]
 800cdf0:	6863      	ldr	r3, [r4, #4]
 800cdf2:	b142      	cbz	r2, 800ce06 <NetworkParams::callbackFunction(char const*)+0xd2>
 800cdf4:	ba11      	rev	r1, r2
 800cdf6:	43c8      	mvns	r0, r1
 800cdf8:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 800cdfc:	d103      	bne.n	800ce06 <NetworkParams::callbackFunction(char const*)+0xd2>
 800cdfe:	60e2      	str	r2, [r4, #12]
 800ce00:	f043 0304 	orr.w	r3, r3, #4
 800ce04:	e7e3      	b.n	800cdce <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce06:	f023 0304 	bic.w	r3, r3, #4
 800ce0a:	e7e0      	b.n	800cdce <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce0c:	4628      	mov	r0, r5
 800ce0e:	4912      	ldr	r1, [pc, #72]	; (800ce58 <NetworkParams::callbackFunction(char const*)+0x124>)
 800ce10:	aa02      	add	r2, sp, #8
 800ce12:	f001 ff34 	bl	800ec7e <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800ce16:	b928      	cbnz	r0, 800ce24 <NetworkParams::callbackFunction(char const*)+0xf0>
 800ce18:	9b02      	ldr	r3, [sp, #8]
 800ce1a:	6123      	str	r3, [r4, #16]
 800ce1c:	6863      	ldr	r3, [r4, #4]
 800ce1e:	f043 0308 	orr.w	r3, r3, #8
 800ce22:	e7d4      	b.n	800cdce <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce24:	233f      	movs	r3, #63	; 0x3f
 800ce26:	4628      	mov	r0, r5
 800ce28:	9303      	str	r3, [sp, #12]
 800ce2a:	490c      	ldr	r1, [pc, #48]	; (800ce5c <NetworkParams::callbackFunction(char const*)+0x128>)
 800ce2c:	ab03      	add	r3, sp, #12
 800ce2e:	f104 0219 	add.w	r2, r4, #25
 800ce32:	f001 ff0b 	bl	800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ce36:	2800      	cmp	r0, #0
 800ce38:	d192      	bne.n	800cd60 <NetworkParams::callbackFunction(char const*)+0x2c>
 800ce3a:	9b03      	ldr	r3, [sp, #12]
 800ce3c:	4423      	add	r3, r4
 800ce3e:	7658      	strb	r0, [r3, #25]
 800ce40:	6863      	ldr	r3, [r4, #4]
 800ce42:	f043 0320 	orr.w	r3, r3, #32
 800ce46:	e7c2      	b.n	800cdce <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce48:	08013462 	stmdaeq	r1, {r1, r5, r6, sl, ip, sp}
 800ce4c:	08013440 	stmdaeq	r1, {r6, sl, ip, sp}
 800ce50:	08013425 	stmdaeq	r1, {r0, r2, r5, sl, ip, sp}
 800ce54:	08013459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, sp}
 800ce58:	08013430 	stmdaeq	r1, {r4, r5, sl, ip, sp}
 800ce5c:	08013450 	stmdaeq	r1, {r4, r6, sl, ip, sp}

0800ce60 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800ce60:	f7ff bf68 	b.w	800cd34 <NetworkParams::callbackFunction(char const*)>

0800ce64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800ce64:	b570      	push	{r4, r5, r6, lr}
 800ce66:	4604      	mov	r4, r0
 800ce68:	4615      	mov	r5, r2
 800ce6a:	461e      	mov	r6, r3
 800ce6c:	b086      	sub	sp, #24
 800ce6e:	3004      	adds	r0, #4
 800ce70:	2900      	cmp	r1, #0
 800ce72:	d02b      	beq.n	800cecc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800ce74:	225e      	movs	r2, #94	; 0x5e
 800ce76:	f002 fc72 	bl	800f75e <memmove>
 800ce7a:	462a      	mov	r2, r5
 800ce7c:	4633      	mov	r3, r6
 800ce7e:	4970      	ldr	r1, [pc, #448]	; (800d040 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800ce80:	a803      	add	r0, sp, #12
 800ce82:	f001 fe0b 	bl	800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ce86:	6863      	ldr	r3, [r4, #4]
 800ce88:	079a      	lsls	r2, r3, #30
 800ce8a:	bf5f      	itttt	pl
 800ce8c:	4a6d      	ldrpl	r2, [pc, #436]	; (800d044 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ce8e:	6812      	ldrpl	r2, [r2, #0]
 800ce90:	6952      	ldrpl	r2, [r2, #20]
 800ce92:	60a2      	strpl	r2, [r4, #8]
 800ce94:	075e      	lsls	r6, r3, #29
 800ce96:	bf5f      	itttt	pl
 800ce98:	4a6a      	ldrpl	r2, [pc, #424]	; (800d044 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ce9a:	6812      	ldrpl	r2, [r2, #0]
 800ce9c:	69d2      	ldrpl	r2, [r2, #28]
 800ce9e:	60e2      	strpl	r2, [r4, #12]
 800cea0:	071d      	lsls	r5, r3, #28
 800cea2:	bf58      	it	pl
 800cea4:	4a67      	ldrpl	r2, [pc, #412]	; (800d044 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800cea6:	f104 0519 	add.w	r5, r4, #25
 800ceaa:	bf5e      	ittt	pl
 800ceac:	6812      	ldrpl	r2, [r2, #0]
 800ceae:	6992      	ldrpl	r2, [r2, #24]
 800ceb0:	6122      	strpl	r2, [r4, #16]
 800ceb2:	0698      	lsls	r0, r3, #26
 800ceb4:	d418      	bmi.n	800cee8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800ceb6:	4628      	mov	r0, r5
 800ceb8:	223f      	movs	r2, #63	; 0x3f
 800ceba:	4b62      	ldr	r3, [pc, #392]	; (800d044 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800cebc:	681b      	ldr	r3, [r3, #0]
 800cebe:	331f      	adds	r3, #31
 800cec0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800cec4:	b949      	cbnz	r1, 800ceda <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800cec6:	f002 fc61 	bl	800f78c <memset>
 800ceca:	e00a      	b.n	800cee2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800cecc:	6823      	ldr	r3, [r4, #0]
 800cece:	4601      	mov	r1, r0
 800ced0:	681a      	ldr	r2, [r3, #0]
 800ced2:	4618      	mov	r0, r3
 800ced4:	68d2      	ldr	r2, [r2, #12]
 800ced6:	4790      	blx	r2
 800ced8:	e7cf      	b.n	800ce7a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800ceda:	3a01      	subs	r2, #1
 800cedc:	f800 1b01 	strb.w	r1, [r0], #1
 800cee0:	d1ee      	bne.n	800cec0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800cee2:	2300      	movs	r3, #0
 800cee4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800cee8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ceec:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800cef0:	7e23      	ldrb	r3, [r4, #24]
 800cef2:	42b2      	cmp	r2, r6
 800cef4:	6861      	ldr	r1, [r4, #4]
 800cef6:	d21a      	bcs.n	800cf2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800cef8:	9803      	ldr	r0, [sp, #12]
 800cefa:	07c9      	lsls	r1, r1, #31
 800cefc:	4410      	add	r0, r2
 800cefe:	eba6 0602 	sub.w	r6, r6, r2
 800cf02:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cf06:	d404      	bmi.n	800cf12 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800cf08:	b922      	cbnz	r2, 800cf14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800cf0a:	9300      	str	r3, [sp, #0]
 800cf0c:	4a4e      	ldr	r2, [pc, #312]	; (800d048 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800cf0e:	4b4f      	ldr	r3, [pc, #316]	; (800d04c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf10:	e003      	b.n	800cf1a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cf12:	b312      	cbz	r2, 800cf5a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800cf14:	9300      	str	r3, [sp, #0]
 800cf16:	4a4e      	ldr	r2, [pc, #312]	; (800d050 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800cf18:	4b4c      	ldr	r3, [pc, #304]	; (800d04c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf1a:	4631      	mov	r1, r6
 800cf1c:	f002 fe78 	bl	800fc10 <snprintf>
 800cf20:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cf24:	4286      	cmp	r6, r0
 800cf26:	bfa4      	itt	ge
 800cf28:	181b      	addge	r3, r3, r0
 800cf2a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800cf2e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cf32:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800cf36:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800cf3a:	42b2      	cmp	r2, r6
 800cf3c:	6861      	ldr	r1, [r4, #4]
 800cf3e:	d21f      	bcs.n	800cf80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800cf40:	9803      	ldr	r0, [sp, #12]
 800cf42:	05c9      	lsls	r1, r1, #23
 800cf44:	4410      	add	r0, r2
 800cf46:	eba6 0602 	sub.w	r6, r6, r2
 800cf4a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cf4e:	d408      	bmi.n	800cf62 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800cf50:	b94a      	cbnz	r2, 800cf66 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800cf52:	9300      	str	r3, [sp, #0]
 800cf54:	4a3c      	ldr	r2, [pc, #240]	; (800d048 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800cf56:	4b3f      	ldr	r3, [pc, #252]	; (800d054 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800cf58:	e008      	b.n	800cf6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800cf5a:	9300      	str	r3, [sp, #0]
 800cf5c:	4a3e      	ldr	r2, [pc, #248]	; (800d058 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800cf5e:	4b3b      	ldr	r3, [pc, #236]	; (800d04c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf60:	e7db      	b.n	800cf1a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cf62:	2a00      	cmp	r2, #0
 800cf64:	d03c      	beq.n	800cfe0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800cf66:	9300      	str	r3, [sp, #0]
 800cf68:	4a39      	ldr	r2, [pc, #228]	; (800d050 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800cf6a:	4b3a      	ldr	r3, [pc, #232]	; (800d054 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800cf6c:	4631      	mov	r1, r6
 800cf6e:	f002 fe4f 	bl	800fc10 <snprintf>
 800cf72:	4286      	cmp	r6, r0
 800cf74:	bfa2      	ittt	ge
 800cf76:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cf7a:	18c0      	addge	r0, r0, r3
 800cf7c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cf80:	4936      	ldr	r1, [pc, #216]	; (800d05c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800cf82:	a803      	add	r0, sp, #12
 800cf84:	f001 fe10 	bl	800eba8 <PropertiesBuilder::AddComment(char const*)>
 800cf88:	6863      	ldr	r3, [r4, #4]
 800cf8a:	68a2      	ldr	r2, [r4, #8]
 800cf8c:	4934      	ldr	r1, [pc, #208]	; (800d060 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800cf8e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cf92:	a803      	add	r0, sp, #12
 800cf94:	f001 fdc4 	bl	800eb20 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cf98:	6863      	ldr	r3, [r4, #4]
 800cf9a:	68e2      	ldr	r2, [r4, #12]
 800cf9c:	4931      	ldr	r1, [pc, #196]	; (800d064 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800cf9e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800cfa2:	a803      	add	r0, sp, #12
 800cfa4:	f001 fdbc 	bl	800eb20 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cfa8:	6863      	ldr	r3, [r4, #4]
 800cfaa:	6922      	ldr	r2, [r4, #16]
 800cfac:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cfb0:	492d      	ldr	r1, [pc, #180]	; (800d068 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800cfb2:	a803      	add	r0, sp, #12
 800cfb4:	f001 fdb4 	bl	800eb20 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cfb8:	6862      	ldr	r2, [r4, #4]
 800cfba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cfbe:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800cfc2:	42a3      	cmp	r3, r4
 800cfc4:	d21e      	bcs.n	800d004 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800cfc6:	9803      	ldr	r0, [sp, #12]
 800cfc8:	0692      	lsls	r2, r2, #26
 800cfca:	4418      	add	r0, r3
 800cfcc:	eba4 0403 	sub.w	r4, r4, r3
 800cfd0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cfd4:	d408      	bmi.n	800cfe8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800cfd6:	b943      	cbnz	r3, 800cfea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800cfd8:	4b24      	ldr	r3, [pc, #144]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800cfda:	4a25      	ldr	r2, [pc, #148]	; (800d070 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800cfdc:	9500      	str	r5, [sp, #0]
 800cfde:	e007      	b.n	800cff0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800cfe0:	9300      	str	r3, [sp, #0]
 800cfe2:	4a1d      	ldr	r2, [pc, #116]	; (800d058 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800cfe4:	4b1b      	ldr	r3, [pc, #108]	; (800d054 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800cfe6:	e7c1      	b.n	800cf6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800cfe8:	b32b      	cbz	r3, 800d036 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800cfea:	4b20      	ldr	r3, [pc, #128]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800cfec:	4a21      	ldr	r2, [pc, #132]	; (800d074 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800cfee:	9500      	str	r5, [sp, #0]
 800cff0:	4621      	mov	r1, r4
 800cff2:	f002 fe0d 	bl	800fc10 <snprintf>
 800cff6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cffa:	4284      	cmp	r4, r0
 800cffc:	bfa4      	itt	ge
 800cffe:	181b      	addge	r3, r3, r0
 800d000:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d004:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d008:	b17b      	cbz	r3, 800d02a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800d00a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d00e:	9b03      	ldr	r3, [sp, #12]
 800d010:	4413      	add	r3, r2
 800d012:	227d      	movs	r2, #125	; 0x7d
 800d014:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d018:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d01c:	9903      	ldr	r1, [sp, #12]
 800d01e:	54ca      	strb	r2, [r1, r3]
 800d020:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d024:	3301      	adds	r3, #1
 800d026:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d02a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d02e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d030:	601a      	str	r2, [r3, #0]
 800d032:	b006      	add	sp, #24
 800d034:	bd70      	pop	{r4, r5, r6, pc}
 800d036:	4b0d      	ldr	r3, [pc, #52]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d038:	4a0f      	ldr	r2, [pc, #60]	; (800d078 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d03a:	9500      	str	r5, [sp, #0]
 800d03c:	e7d8      	b.n	800cff0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d03e:	bf00      	nop
 800d040:	0801346b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, ip, sp}
 800d044:	2000897c 	andcs	r8, r0, ip, ror r9
 800d048:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800d04c:	08013462 	stmdaeq	r1, {r1, r5, r6, sl, ip, sp}
 800d050:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800d054:	08013440 	stmdaeq	r1, {r6, sl, ip, sp}
 800d058:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}
 800d05c:	0801341b 	stmdaeq	r1, {r0, r1, r3, r4, sl, ip, sp}
 800d060:	08013425 	stmdaeq	r1, {r0, r2, r5, sl, ip, sp}
 800d064:	08013459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, sp}
 800d068:	08013430 	stmdaeq	r1, {r4, r5, sl, ip, sp}
 800d06c:	08013450 	stmdaeq	r1, {r4, r6, sl, ip, sp}
 800d070:	08012248 	stmdaeq	r1, {r3, r6, r9, sp}
 800d074:	0801223d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp}
 800d078:	08012249 	stmdaeq	r1, {r0, r3, r6, r9, sp}

0800d07c <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d07c:	b513      	push	{r0, r1, r4, lr}
 800d07e:	6804      	ldr	r4, [r0, #0]
 800d080:	b914      	cbnz	r4, 800d088 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d082:	601c      	str	r4, [r3, #0]
 800d084:	b002      	add	sp, #8
 800d086:	bd10      	pop	{r4, pc}
 800d088:	9300      	str	r3, [sp, #0]
 800d08a:	4613      	mov	r3, r2
 800d08c:	460a      	mov	r2, r1
 800d08e:	2100      	movs	r1, #0
 800d090:	f7ff fee8 	bl	800ce64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800d094:	e7f6      	b.n	800d084 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d096 <NetworkParams::Dump()>:
 800d096:	4770      	bx	lr

0800d098 <memcpy.isra.0>:
 800d098:	3801      	subs	r0, #1
 800d09a:	440a      	add	r2, r1
 800d09c:	4291      	cmp	r1, r2
 800d09e:	d100      	bne.n	800d0a2 <memcpy.isra.0+0xa>
 800d0a0:	4770      	bx	lr
 800d0a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d0a6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d0aa:	e7f7      	b.n	800d09c <memcpy.isra.0+0x4>

0800d0ac <arp_announce>:
 800d0ac:	4803      	ldr	r0, [pc, #12]	; (800d0bc <arp_announce+0x10>)
 800d0ae:	69c3      	ldr	r3, [r0, #28]
 800d0b0:	b113      	cbz	r3, 800d0b8 <arp_announce+0xc>
 800d0b2:	212a      	movs	r1, #42	; 0x2a
 800d0b4:	f004 b854 	b.w	8011160 <emac_eth_send>
 800d0b8:	4770      	bx	lr
 800d0ba:	bf00      	nop
 800d0bc:	20008980 	andcs	r8, r0, r0, lsl #19

0800d0c0 <arp_handle_request>:
 800d0c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d0c2:	2204      	movs	r2, #4
 800d0c4:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d0c8:	4604      	mov	r4, r0
 800d0ca:	eb0d 0002 	add.w	r0, sp, r2
 800d0ce:	f7ff ffe3 	bl	800d098 <memcpy.isra.0>
 800d0d2:	4b0d      	ldr	r3, [pc, #52]	; (800d108 <arp_handle_request+0x48>)
 800d0d4:	9a01      	ldr	r2, [sp, #4]
 800d0d6:	69db      	ldr	r3, [r3, #28]
 800d0d8:	429a      	cmp	r2, r3
 800d0da:	d113      	bne.n	800d104 <arp_handle_request+0x44>
 800d0dc:	2206      	movs	r2, #6
 800d0de:	4d0b      	ldr	r5, [pc, #44]	; (800d10c <arp_handle_request+0x4c>)
 800d0e0:	18a1      	adds	r1, r4, r2
 800d0e2:	4628      	mov	r0, r5
 800d0e4:	f7ff ffd8 	bl	800d098 <memcpy.isra.0>
 800d0e8:	f104 0116 	add.w	r1, r4, #22
 800d0ec:	f105 0020 	add.w	r0, r5, #32
 800d0f0:	2206      	movs	r2, #6
 800d0f2:	f7ff ffd1 	bl	800d098 <memcpy.isra.0>
 800d0f6:	69e3      	ldr	r3, [r4, #28]
 800d0f8:	212a      	movs	r1, #42	; 0x2a
 800d0fa:	4628      	mov	r0, r5
 800d0fc:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d100:	f004 f82e 	bl	8011160 <emac_eth_send>
 800d104:	b003      	add	sp, #12
 800d106:	bd30      	pop	{r4, r5, pc}
 800d108:	20008980 	andcs	r8, r0, r0, lsl #19
 800d10c:	200089ac 	andcs	r8, r0, ip, lsr #19

0800d110 <arp_handle_reply>:
 800d110:	69c1      	ldr	r1, [r0, #28]
 800d112:	3016      	adds	r0, #22
 800d114:	f000 b80a 	b.w	800d12c <arp_cache_update>

0800d118 <arp_send_request>:
 800d118:	4b03      	ldr	r3, [pc, #12]	; (800d128 <arp_send_request+0x10>)
 800d11a:	212a      	movs	r1, #42	; 0x2a
 800d11c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800d120:	4618      	mov	r0, r3
 800d122:	f004 b81d 	b.w	8011160 <emac_eth_send>
 800d126:	bf00      	nop
 800d128:	200089d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>

0800d12c <arp_cache_update>:
 800d12c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d12e:	4e11      	ldr	r6, [pc, #68]	; (800d174 <arp_cache_update+0x48>)
 800d130:	8833      	ldrh	r3, [r6, #0]
 800d132:	2b20      	cmp	r3, #32
 800d134:	d018      	beq.n	800d168 <arp_cache_update+0x3c>
 800d136:	2400      	movs	r4, #0
 800d138:	220c      	movs	r2, #12
 800d13a:	4d0f      	ldr	r5, [pc, #60]	; (800d178 <arp_cache_update+0x4c>)
 800d13c:	b2a7      	uxth	r7, r4
 800d13e:	42bb      	cmp	r3, r7
 800d140:	d80b      	bhi.n	800d15a <arp_cache_update+0x2e>
 800d142:	fb02 5203 	mla	r2, r2, r3, r5
 800d146:	1d84      	adds	r4, r0, #6
 800d148:	3203      	adds	r2, #3
 800d14a:	42a0      	cmp	r0, r4
 800d14c:	d10d      	bne.n	800d16a <arp_cache_update+0x3e>
 800d14e:	220c      	movs	r2, #12
 800d150:	435a      	muls	r2, r3
 800d152:	3301      	adds	r3, #1
 800d154:	50a9      	str	r1, [r5, r2]
 800d156:	8033      	strh	r3, [r6, #0]
 800d158:	e006      	b.n	800d168 <arp_cache_update+0x3c>
 800d15a:	3401      	adds	r4, #1
 800d15c:	fb02 5704 	mla	r7, r2, r4, r5
 800d160:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800d164:	428f      	cmp	r7, r1
 800d166:	d1e9      	bne.n	800d13c <arp_cache_update+0x10>
 800d168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d16a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d16e:	f802 7f01 	strb.w	r7, [r2, #1]!
 800d172:	e7ea      	b.n	800d14a <arp_cache_update+0x1e>
 800d174:	20008b84 	andcs	r8, r0, r4, lsl #23
 800d178:	20008a04 	andcs	r8, r0, r4, lsl #20

0800d17c <arp_cache_lookup>:
 800d17c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d180:	2200      	movs	r2, #0
 800d182:	4606      	mov	r6, r0
 800d184:	460c      	mov	r4, r1
 800d186:	200c      	movs	r0, #12
 800d188:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800d210 <arp_cache_lookup+0x94>
 800d18c:	fb00 f302 	mul.w	r3, r0, r2
 800d190:	f853 1008 	ldr.w	r1, [r3, r8]
 800d194:	42b1      	cmp	r1, r6
 800d196:	d10d      	bne.n	800d1b4 <arp_cache_lookup+0x38>
 800d198:	3304      	adds	r3, #4
 800d19a:	4443      	add	r3, r8
 800d19c:	3c01      	subs	r4, #1
 800d19e:	1d9a      	adds	r2, r3, #6
 800d1a0:	4293      	cmp	r3, r2
 800d1a2:	d102      	bne.n	800d1aa <arp_cache_lookup+0x2e>
 800d1a4:	4630      	mov	r0, r6
 800d1a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d1aa:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d1ae:	f804 1f01 	strb.w	r1, [r4, #1]!
 800d1b2:	e7f5      	b.n	800d1a0 <arp_cache_lookup+0x24>
 800d1b4:	b111      	cbz	r1, 800d1bc <arp_cache_lookup+0x40>
 800d1b6:	3201      	adds	r2, #1
 800d1b8:	2a20      	cmp	r2, #32
 800d1ba:	d1e7      	bne.n	800d18c <arp_cache_lookup+0x10>
 800d1bc:	2704      	movs	r7, #4
 800d1be:	f8df a054 	ldr.w	sl, [pc, #84]	; 800d214 <arp_cache_lookup+0x98>
 800d1c2:	f8ba 5000 	ldrh.w	r5, [sl]
 800d1c6:	3f01      	subs	r7, #1
 800d1c8:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800d1cc:	d101      	bne.n	800d1d2 <arp_cache_lookup+0x56>
 800d1ce:	463e      	mov	r6, r7
 800d1d0:	e7e8      	b.n	800d1a4 <arp_cache_lookup+0x28>
 800d1d2:	4630      	mov	r0, r6
 800d1d4:	f7ff ffa0 	bl	800d118 <arp_send_request>
 800d1d8:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800d1dc:	f1b9 0901 	subs.w	r9, r9, #1
 800d1e0:	f8ba 3000 	ldrh.w	r3, [sl]
 800d1e4:	d011      	beq.n	800d20a <arp_cache_lookup+0x8e>
 800d1e6:	429d      	cmp	r5, r3
 800d1e8:	d00c      	beq.n	800d204 <arp_cache_lookup+0x88>
 800d1ea:	230c      	movs	r3, #12
 800d1ec:	fb03 8505 	mla	r5, r3, r5, r8
 800d1f0:	3c01      	subs	r4, #1
 800d1f2:	1d2b      	adds	r3, r5, #4
 800d1f4:	350a      	adds	r5, #10
 800d1f6:	42ab      	cmp	r3, r5
 800d1f8:	d0d4      	beq.n	800d1a4 <arp_cache_lookup+0x28>
 800d1fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d1fe:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d202:	e7f8      	b.n	800d1f6 <arp_cache_lookup+0x7a>
 800d204:	f7fa f98c 	bl	8007520 <net_handle>
 800d208:	e7e8      	b.n	800d1dc <arp_cache_lookup+0x60>
 800d20a:	429d      	cmp	r5, r3
 800d20c:	d0db      	beq.n	800d1c6 <arp_cache_lookup+0x4a>
 800d20e:	e7ec      	b.n	800d1ea <arp_cache_lookup+0x6e>
 800d210:	20008a04 	andcs	r8, r0, r4, lsl #20
 800d214:	20008b84 	andcs	r8, r0, r4, lsl #23

0800d218 <_parse_response>:
 800d218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d21c:	2400      	movs	r4, #0
 800d21e:	460d      	mov	r5, r1
 800d220:	46a3      	mov	fp, r4
 800d222:	4627      	mov	r7, r4
 800d224:	46a2      	mov	sl, r4
 800d226:	46a1      	mov	r9, r4
 800d228:	46a0      	mov	r8, r4
 800d22a:	4e50      	ldr	r6, [pc, #320]	; (800d36c <_parse_response+0x154>)
 800d22c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800d230:	6833      	ldr	r3, [r6, #0]
 800d232:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800d236:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800d23a:	9009      	str	r0, [sp, #36]	; 0x24
 800d23c:	9402      	str	r4, [sp, #8]
 800d23e:	9407      	str	r4, [sp, #28]
 800d240:	9308      	str	r3, [sp, #32]
 800d242:	f7fa f96d 	bl	8007520 <net_handle>
 800d246:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800d24a:	9300      	str	r3, [sp, #0]
 800d24c:	f44f 7209 	mov.w	r2, #548	; 0x224
 800d250:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800d254:	ab0c      	add	r3, sp, #48	; 0x30
 800d256:	a90d      	add	r1, sp, #52	; 0x34
 800d258:	f7fe fe2a 	bl	800beb0 <udp_recv>
 800d25c:	2800      	cmp	r0, #0
 800d25e:	d03f      	beq.n	800d2e0 <_parse_response+0xc8>
 800d260:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d264:	2b43      	cmp	r3, #67	; 0x43
 800d266:	d13b      	bne.n	800d2e0 <_parse_response+0xc8>
 800d268:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800d26c:	1e6b      	subs	r3, r5, #1
 800d26e:	1d69      	adds	r1, r5, #5
 800d270:	4299      	cmp	r1, r3
 800d272:	d12f      	bne.n	800d2d4 <_parse_response+0xbc>
 800d274:	2100      	movs	r1, #0
 800d276:	ab0d      	add	r3, sp, #52	; 0x34
 800d278:	181d      	adds	r5, r3, r0
 800d27a:	468c      	mov	ip, r1
 800d27c:	460e      	mov	r6, r1
 800d27e:	4608      	mov	r0, r1
 800d280:	ab49      	add	r3, sp, #292	; 0x124
 800d282:	42ab      	cmp	r3, r5
 800d284:	d337      	bcc.n	800d2f6 <_parse_response+0xde>
 800d286:	b141      	cbz	r1, 800d29a <_parse_response+0x82>
 800d288:	4b39      	ldr	r3, [pc, #228]	; (800d370 <_parse_response+0x158>)
 800d28a:	9a07      	ldr	r2, [sp, #28]
 800d28c:	f883 8003 	strb.w	r8, [r3, #3]
 800d290:	709a      	strb	r2, [r3, #2]
 800d292:	9a06      	ldr	r2, [sp, #24]
 800d294:	705a      	strb	r2, [r3, #1]
 800d296:	9a05      	ldr	r2, [sp, #20]
 800d298:	701a      	strb	r2, [r3, #0]
 800d29a:	f1bc 0f00 	cmp.w	ip, #0
 800d29e:	d007      	beq.n	800d2b0 <_parse_response+0x98>
 800d2a0:	4b34      	ldr	r3, [pc, #208]	; (800d374 <_parse_response+0x15c>)
 800d2a2:	9a04      	ldr	r2, [sp, #16]
 800d2a4:	705c      	strb	r4, [r3, #1]
 800d2a6:	70da      	strb	r2, [r3, #3]
 800d2a8:	9a03      	ldr	r2, [sp, #12]
 800d2aa:	709a      	strb	r2, [r3, #2]
 800d2ac:	9a02      	ldr	r2, [sp, #8]
 800d2ae:	701a      	strb	r2, [r3, #0]
 800d2b0:	b13e      	cbz	r6, 800d2c2 <_parse_response+0xaa>
 800d2b2:	4b31      	ldr	r3, [pc, #196]	; (800d378 <_parse_response+0x160>)
 800d2b4:	70df      	strb	r7, [r3, #3]
 800d2b6:	f883 a002 	strb.w	sl, [r3, #2]
 800d2ba:	f883 9001 	strb.w	r9, [r3, #1]
 800d2be:	f883 b000 	strb.w	fp, [r3]
 800d2c2:	2802      	cmp	r0, #2
 800d2c4:	d102      	bne.n	800d2cc <_parse_response+0xb4>
 800d2c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d2c8:	4b2c      	ldr	r3, [pc, #176]	; (800d37c <_parse_response+0x164>)
 800d2ca:	601a      	str	r2, [r3, #0]
 800d2cc:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800d2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2d4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800d2d8:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800d2dc:	45e6      	cmp	lr, ip
 800d2de:	d0c7      	beq.n	800d270 <_parse_response+0x58>
 800d2e0:	6833      	ldr	r3, [r6, #0]
 800d2e2:	9a08      	ldr	r2, [sp, #32]
 800d2e4:	1a9b      	subs	r3, r3, r2
 800d2e6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d2ea:	d3aa      	bcc.n	800d242 <_parse_response+0x2a>
 800d2ec:	2800      	cmp	r0, #0
 800d2ee:	d1c1      	bne.n	800d274 <_parse_response+0x5c>
 800d2f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d2f4:	e7ea      	b.n	800d2cc <_parse_response+0xb4>
 800d2f6:	781a      	ldrb	r2, [r3, #0]
 800d2f8:	2a35      	cmp	r2, #53	; 0x35
 800d2fa:	d011      	beq.n	800d320 <_parse_response+0x108>
 800d2fc:	d808      	bhi.n	800d310 <_parse_response+0xf8>
 800d2fe:	2a01      	cmp	r2, #1
 800d300:	d011      	beq.n	800d326 <_parse_response+0x10e>
 800d302:	2a03      	cmp	r2, #3
 800d304:	d019      	beq.n	800d33a <_parse_response+0x122>
 800d306:	b14a      	cbz	r2, 800d31c <_parse_response+0x104>
 800d308:	1c9a      	adds	r2, r3, #2
 800d30a:	785b      	ldrb	r3, [r3, #1]
 800d30c:	4413      	add	r3, r2
 800d30e:	e7b8      	b.n	800d282 <_parse_response+0x6a>
 800d310:	2a36      	cmp	r2, #54	; 0x36
 800d312:	d01f      	beq.n	800d354 <_parse_response+0x13c>
 800d314:	2aff      	cmp	r2, #255	; 0xff
 800d316:	d1f7      	bne.n	800d308 <_parse_response+0xf0>
 800d318:	462b      	mov	r3, r5
 800d31a:	e7b2      	b.n	800d282 <_parse_response+0x6a>
 800d31c:	3301      	adds	r3, #1
 800d31e:	e7b0      	b.n	800d282 <_parse_response+0x6a>
 800d320:	7898      	ldrb	r0, [r3, #2]
 800d322:	3303      	adds	r3, #3
 800d324:	e7ad      	b.n	800d282 <_parse_response+0x6a>
 800d326:	f893 b002 	ldrb.w	fp, [r3, #2]
 800d32a:	f893 9003 	ldrb.w	r9, [r3, #3]
 800d32e:	f893 a004 	ldrb.w	sl, [r3, #4]
 800d332:	795f      	ldrb	r7, [r3, #5]
 800d334:	4616      	mov	r6, r2
 800d336:	3306      	adds	r3, #6
 800d338:	e7a3      	b.n	800d282 <_parse_response+0x6a>
 800d33a:	789a      	ldrb	r2, [r3, #2]
 800d33c:	78dc      	ldrb	r4, [r3, #3]
 800d33e:	9202      	str	r2, [sp, #8]
 800d340:	791a      	ldrb	r2, [r3, #4]
 800d342:	f04f 0c01 	mov.w	ip, #1
 800d346:	9203      	str	r2, [sp, #12]
 800d348:	795a      	ldrb	r2, [r3, #5]
 800d34a:	9204      	str	r2, [sp, #16]
 800d34c:	785a      	ldrb	r2, [r3, #1]
 800d34e:	4413      	add	r3, r2
 800d350:	3302      	adds	r3, #2
 800d352:	e796      	b.n	800d282 <_parse_response+0x6a>
 800d354:	789a      	ldrb	r2, [r3, #2]
 800d356:	f893 8005 	ldrb.w	r8, [r3, #5]
 800d35a:	9205      	str	r2, [sp, #20]
 800d35c:	78da      	ldrb	r2, [r3, #3]
 800d35e:	2101      	movs	r1, #1
 800d360:	9206      	str	r2, [sp, #24]
 800d362:	791a      	ldrb	r2, [r3, #4]
 800d364:	3306      	adds	r3, #6
 800d366:	9207      	str	r2, [sp, #28]
 800d368:	e78b      	b.n	800d282 <_parse_response+0x6a>
 800d36a:	bf00      	nop
 800d36c:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800d370:	20008db8 			; <UNDEFINED> instruction: 0x20008db8
 800d374:	20008b88 	andcs	r8, r0, r8, lsl #23
 800d378:	20008b90 	mulcs	r0, r0, fp
 800d37c:	20008b8c 	andcs	r8, r0, ip, lsl #23

0800d380 <memcpy.isra.0>:
 800d380:	3801      	subs	r0, #1
 800d382:	440a      	add	r2, r1
 800d384:	4291      	cmp	r1, r2
 800d386:	d100      	bne.n	800d38a <memcpy.isra.0+0xa>
 800d388:	4770      	bx	lr
 800d38a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d38e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d392:	e7f7      	b.n	800d384 <memcpy.isra.0+0x4>

0800d394 <dhcp_client>:
 800d394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d398:	b087      	sub	sp, #28
 800d39a:	9203      	str	r2, [sp, #12]
 800d39c:	4a77      	ldr	r2, [pc, #476]	; (800d57c <dhcp_client+0x1e8>)
 800d39e:	460f      	mov	r7, r1
 800d3a0:	4605      	mov	r5, r0
 800d3a2:	f44f 7309 	mov.w	r3, #548	; 0x224
 800d3a6:	4614      	mov	r4, r2
 800d3a8:	2100      	movs	r1, #0
 800d3aa:	3b01      	subs	r3, #1
 800d3ac:	f802 1b01 	strb.w	r1, [r2], #1
 800d3b0:	d1fb      	bne.n	800d3aa <dhcp_client+0x16>
 800d3b2:	f240 1301 	movw	r3, #257	; 0x101
 800d3b6:	2206      	movs	r2, #6
 800d3b8:	4629      	mov	r1, r5
 800d3ba:	4871      	ldr	r0, [pc, #452]	; (800d580 <dhcp_client+0x1ec>)
 800d3bc:	8023      	strh	r3, [r4, #0]
 800d3be:	70a2      	strb	r2, [r4, #2]
 800d3c0:	f7ff ffde 	bl	800d380 <memcpy.isra.0>
 800d3c4:	4b6f      	ldr	r3, [pc, #444]	; (800d584 <dhcp_client+0x1f0>)
 800d3c6:	2044      	movs	r0, #68	; 0x44
 800d3c8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800d3cc:	f240 1335 	movw	r3, #309	; 0x135
 800d3d0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800d3d4:	f7fe fd32 	bl	800be3c <udp_bind>
 800d3d8:	1e06      	subs	r6, r0, #0
 800d3da:	f2c0 80c9 	blt.w	800d570 <dhcp_client+0x1dc>
 800d3de:	f04f 0915 	mov.w	r9, #21
 800d3e2:	f8df a198 	ldr.w	sl, [pc, #408]	; 800d57c <dhcp_client+0x1e8>
 800d3e6:	f1b9 0901 	subs.w	r9, r9, #1
 800d3ea:	d11f      	bne.n	800d42c <dhcp_client+0x98>
 800d3ec:	464c      	mov	r4, r9
 800d3ee:	2044      	movs	r0, #68	; 0x44
 800d3f0:	f7fe fd3e 	bl	800be70 <udp_unbind>
 800d3f4:	2c00      	cmp	r4, #0
 800d3f6:	f000 80be 	beq.w	800d576 <dhcp_client+0x1e2>
 800d3fa:	2204      	movs	r2, #4
 800d3fc:	4962      	ldr	r1, [pc, #392]	; (800d588 <dhcp_client+0x1f4>)
 800d3fe:	a805      	add	r0, sp, #20
 800d400:	f7ff ffbe 	bl	800d380 <memcpy.isra.0>
 800d404:	9b05      	ldr	r3, [sp, #20]
 800d406:	2204      	movs	r2, #4
 800d408:	4960      	ldr	r1, [pc, #384]	; (800d58c <dhcp_client+0x1f8>)
 800d40a:	603b      	str	r3, [r7, #0]
 800d40c:	a805      	add	r0, sp, #20
 800d40e:	f7ff ffb7 	bl	800d380 <memcpy.isra.0>
 800d412:	9b05      	ldr	r3, [sp, #20]
 800d414:	a805      	add	r0, sp, #20
 800d416:	60bb      	str	r3, [r7, #8]
 800d418:	2204      	movs	r2, #4
 800d41a:	495d      	ldr	r1, [pc, #372]	; (800d590 <dhcp_client+0x1fc>)
 800d41c:	f7ff ffb0 	bl	800d380 <memcpy.isra.0>
 800d420:	2000      	movs	r0, #0
 800d422:	9b05      	ldr	r3, [sp, #20]
 800d424:	607b      	str	r3, [r7, #4]
 800d426:	b007      	add	sp, #28
 800d428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d42c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800d430:	f240 1807 	movw	r8, #263	; 0x107
 800d434:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d438:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d43c:	782b      	ldrb	r3, [r5, #0]
 800d43e:	4a55      	ldr	r2, [pc, #340]	; (800d594 <dhcp_client+0x200>)
 800d440:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d444:	786b      	ldrb	r3, [r5, #1]
 800d446:	fa5f fb86 	uxtb.w	fp, r6
 800d44a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d44e:	78ab      	ldrb	r3, [r5, #2]
 800d450:	4651      	mov	r1, sl
 800d452:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d456:	78eb      	ldrb	r3, [r5, #3]
 800d458:	4658      	mov	r0, fp
 800d45a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d45e:	792b      	ldrb	r3, [r5, #4]
 800d460:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d464:	796b      	ldrb	r3, [r5, #5]
 800d466:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d46a:	4b4b      	ldr	r3, [pc, #300]	; (800d598 <dhcp_client+0x204>)
 800d46c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800d470:	23ff      	movs	r3, #255	; 0xff
 800d472:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800d476:	2343      	movs	r3, #67	; 0x43
 800d478:	f240 1205 	movw	r2, #261	; 0x105
 800d47c:	9300      	str	r3, [sp, #0]
 800d47e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d482:	f7fe fd71 	bl	800bf68 <udp_send>
 800d486:	4629      	mov	r1, r5
 800d488:	4630      	mov	r0, r6
 800d48a:	f7ff fec5 	bl	800d218 <_parse_response>
 800d48e:	2802      	cmp	r0, #2
 800d490:	d1a9      	bne.n	800d3e6 <dhcp_client+0x52>
 800d492:	f643 5303 	movw	r3, #15619	; 0x3d03
 800d496:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d49a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d49e:	782b      	ldrb	r3, [r5, #0]
 800d4a0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800d59c <dhcp_client+0x208>
 800d4a4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d4a8:	786b      	ldrb	r3, [r5, #1]
 800d4aa:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d4ae:	78ab      	ldrb	r3, [r5, #2]
 800d4b0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d4b4:	78eb      	ldrb	r3, [r5, #3]
 800d4b6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d4ba:	792b      	ldrb	r3, [r5, #4]
 800d4bc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d4c0:	796b      	ldrb	r3, [r5, #5]
 800d4c2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d4c6:	f240 4332 	movw	r3, #1074	; 0x432
 800d4ca:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800d4ce:	4b2e      	ldr	r3, [pc, #184]	; (800d588 <dhcp_client+0x1f4>)
 800d4d0:	881a      	ldrh	r2, [r3, #0]
 800d4d2:	885b      	ldrh	r3, [r3, #2]
 800d4d4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800d4d8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800d4dc:	f240 4336 	movw	r3, #1078	; 0x436
 800d4e0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800d4e4:	4b2e      	ldr	r3, [pc, #184]	; (800d5a0 <dhcp_client+0x20c>)
 800d4e6:	221e      	movs	r2, #30
 800d4e8:	681b      	ldr	r3, [r3, #0]
 800d4ea:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800d4ee:	230c      	movs	r3, #12
 800d4f0:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800d4f4:	9b03      	ldr	r3, [sp, #12]
 800d4f6:	1e58      	subs	r0, r3, #1
 800d4f8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800d4fc:	f1a2 0e1e 	sub.w	lr, r2, #30
 800d500:	1c51      	adds	r1, r2, #1
 800d502:	bb8b      	cbnz	r3, 800d568 <dhcp_client+0x1d4>
 800d504:	2037      	movs	r0, #55	; 0x37
 800d506:	18a3      	adds	r3, r4, r2
 800d508:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800d50c:	2006      	movs	r0, #6
 800d50e:	4421      	add	r1, r4
 800d510:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800d514:	2103      	movs	r1, #3
 800d516:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800d51a:	210f      	movs	r1, #15
 800d51c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800d520:	213a      	movs	r1, #58	; 0x3a
 800d522:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800d526:	213b      	movs	r1, #59	; 0x3b
 800d528:	f04f 0801 	mov.w	r8, #1
 800d52c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800d530:	21ff      	movs	r1, #255	; 0xff
 800d532:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800d536:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800d53a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800d53e:	2343      	movs	r3, #67	; 0x43
 800d540:	32f5      	adds	r2, #245	; 0xf5
 800d542:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800d546:	4651      	mov	r1, sl
 800d548:	9300      	str	r3, [sp, #0]
 800d54a:	b292      	uxth	r2, r2
 800d54c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d550:	4658      	mov	r0, fp
 800d552:	f7fe fd09 	bl	800bf68 <udp_send>
 800d556:	4629      	mov	r1, r5
 800d558:	4630      	mov	r0, r6
 800d55a:	f7ff fe5d 	bl	800d218 <_parse_response>
 800d55e:	2805      	cmp	r0, #5
 800d560:	f47f af41 	bne.w	800d3e6 <dhcp_client+0x52>
 800d564:	4644      	mov	r4, r8
 800d566:	e742      	b.n	800d3ee <dhcp_client+0x5a>
 800d568:	460a      	mov	r2, r1
 800d56a:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800d56e:	e7c3      	b.n	800d4f8 <dhcp_client+0x164>
 800d570:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d574:	e757      	b.n	800d426 <dhcp_client+0x92>
 800d576:	f06f 0001 	mvn.w	r0, #1
 800d57a:	e754      	b.n	800d426 <dhcp_client+0x92>
 800d57c:	20008b94 	mulcs	r0, r4, fp
 800d580:	20008bb0 			; <UNDEFINED> instruction: 0x20008bb0
 800d584:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800d588:	20008b8c 	andcs	r8, r0, ip, lsl #23
 800d58c:	20008b88 	andcs	r8, r0, r8, lsl #23
 800d590:	20008b90 	mulcs	r0, r0, fp
 800d594:	03010637 	movweq	r0, #5687	; 0x1637
 800d598:	3b3a0f06 	blcc	8e911b8 <__exidx_end+0xe7d59c>
 800d59c:	20008c9d 	mulcs	r0, sp, ip
 800d5a0:	20008db8 			; <UNDEFINED> instruction: 0x20008db8

0800d5a4 <dhcp_client_release>:
 800d5a4:	b507      	push	{r0, r1, r2, lr}
 800d5a6:	2044      	movs	r0, #68	; 0x44
 800d5a8:	f7fe fc48 	bl	800be3c <udp_bind>
 800d5ac:	f243 6307 	movw	r3, #13831	; 0x3607
 800d5b0:	4911      	ldr	r1, [pc, #68]	; (800d5f8 <dhcp_client_release+0x54>)
 800d5b2:	b2c0      	uxtb	r0, r0
 800d5b4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800d5b8:	2304      	movs	r3, #4
 800d5ba:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800d5be:	4b0f      	ldr	r3, [pc, #60]	; (800d5fc <dhcp_client_release+0x58>)
 800d5c0:	781a      	ldrb	r2, [r3, #0]
 800d5c2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800d5c6:	785a      	ldrb	r2, [r3, #1]
 800d5c8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800d5cc:	789a      	ldrb	r2, [r3, #2]
 800d5ce:	78db      	ldrb	r3, [r3, #3]
 800d5d0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800d5d4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800d5d8:	23ff      	movs	r3, #255	; 0xff
 800d5da:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800d5de:	2343      	movs	r3, #67	; 0x43
 800d5e0:	22fa      	movs	r2, #250	; 0xfa
 800d5e2:	9300      	str	r3, [sp, #0]
 800d5e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d5e8:	f7fe fcbe 	bl	800bf68 <udp_send>
 800d5ec:	2044      	movs	r0, #68	; 0x44
 800d5ee:	b003      	add	sp, #12
 800d5f0:	f85d eb04 	ldr.w	lr, [sp], #4
 800d5f4:	f7fe bc3c 	b.w	800be70 <udp_unbind>
 800d5f8:	20008b94 	mulcs	r0, r4, fp
 800d5fc:	20008db8 			; <UNDEFINED> instruction: 0x20008db8

0800d600 <memcpy.isra.0>:
 800d600:	3801      	subs	r0, #1
 800d602:	440a      	add	r2, r1
 800d604:	4291      	cmp	r1, r2
 800d606:	d100      	bne.n	800d60a <memcpy.isra.0+0xa>
 800d608:	4770      	bx	lr
 800d60a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d60e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d612:	e7f7      	b.n	800d604 <memcpy.isra.0+0x4>

0800d614 <_send_report>:
 800d614:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d616:	491c      	ldr	r1, [pc, #112]	; (800d688 <_send_report+0x74>)
 800d618:	4c1c      	ldr	r4, [pc, #112]	; (800d68c <_send_report+0x78>)
 800d61a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800d61e:	9001      	str	r0, [sp, #4]
 800d620:	70cb      	strb	r3, [r1, #3]
 800d622:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800d626:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800d62a:	710b      	strb	r3, [r1, #4]
 800d62c:	7148      	strb	r0, [r1, #5]
 800d62e:	2206      	movs	r2, #6
 800d630:	4620      	mov	r0, r4
 800d632:	f7ff ffe5 	bl	800d600 <memcpy.isra.0>
 800d636:	2204      	movs	r2, #4
 800d638:	2700      	movs	r7, #0
 800d63a:	4d15      	ldr	r5, [pc, #84]	; (800d690 <_send_report+0x7c>)
 800d63c:	eb0d 0102 	add.w	r1, sp, r2
 800d640:	882b      	ldrh	r3, [r5, #0]
 800d642:	f104 001e 	add.w	r0, r4, #30
 800d646:	f104 060e 	add.w	r6, r4, #14
 800d64a:	8263      	strh	r3, [r4, #18]
 800d64c:	f7ff ffd8 	bl	800d600 <memcpy.isra.0>
 800d650:	2118      	movs	r1, #24
 800d652:	4630      	mov	r0, r6
 800d654:	8327      	strh	r7, [r4, #24]
 800d656:	f000 f8c6 	bl	800d7e6 <net_chksum>
 800d65a:	2204      	movs	r2, #4
 800d65c:	8320      	strh	r0, [r4, #24]
 800d65e:	eb0d 0102 	add.w	r1, sp, r2
 800d662:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800d666:	f7ff ffcb 	bl	800d600 <memcpy.isra.0>
 800d66a:	2120      	movs	r1, #32
 800d66c:	4630      	mov	r0, r6
 800d66e:	8527      	strh	r7, [r4, #40]	; 0x28
 800d670:	f000 f8b9 	bl	800d7e6 <net_chksum>
 800d674:	212e      	movs	r1, #46	; 0x2e
 800d676:	8520      	strh	r0, [r4, #40]	; 0x28
 800d678:	4620      	mov	r0, r4
 800d67a:	f003 fd71 	bl	8011160 <emac_eth_send>
 800d67e:	882b      	ldrh	r3, [r5, #0]
 800d680:	3301      	adds	r3, #1
 800d682:	802b      	strh	r3, [r5, #0]
 800d684:	b003      	add	sp, #12
 800d686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d688:	20008f14 	andcs	r8, r0, r4, lsl pc
 800d68c:	20008f1c 	andcs	r8, r0, ip, lsl pc
 800d690:	20008edc 	ldrdcs	r8, [r0], -ip

0800d694 <igmp_set_ip>:
 800d694:	b507      	push	{r0, r1, r2, lr}
 800d696:	2204      	movs	r2, #4
 800d698:	6803      	ldr	r3, [r0, #0]
 800d69a:	eb0d 0102 	add.w	r1, sp, r2
 800d69e:	4806      	ldr	r0, [pc, #24]	; (800d6b8 <igmp_set_ip+0x24>)
 800d6a0:	9301      	str	r3, [sp, #4]
 800d6a2:	f7ff ffad 	bl	800d600 <memcpy.isra.0>
 800d6a6:	2204      	movs	r2, #4
 800d6a8:	4804      	ldr	r0, [pc, #16]	; (800d6bc <igmp_set_ip+0x28>)
 800d6aa:	eb0d 0102 	add.w	r1, sp, r2
 800d6ae:	f7ff ffa7 	bl	800d600 <memcpy.isra.0>
 800d6b2:	b003      	add	sp, #12
 800d6b4:	f85d fb04 	ldr.w	pc, [sp], #4
 800d6b8:	20008f36 	andcs	r8, r0, r6, lsr pc
 800d6bc:	20008efe 	strdcs	r8, [r0], -lr

0800d6c0 <igmp_timer>:
 800d6c0:	b570      	push	{r4, r5, r6, lr}
 800d6c2:	2500      	movs	r5, #0
 800d6c4:	2602      	movs	r6, #2
 800d6c6:	4c0a      	ldr	r4, [pc, #40]	; (800d6f0 <igmp_timer+0x30>)
 800d6c8:	7963      	ldrb	r3, [r4, #5]
 800d6ca:	2b01      	cmp	r3, #1
 800d6cc:	d109      	bne.n	800d6e2 <igmp_timer+0x22>
 800d6ce:	7923      	ldrb	r3, [r4, #4]
 800d6d0:	b13b      	cbz	r3, 800d6e2 <igmp_timer+0x22>
 800d6d2:	3b01      	subs	r3, #1
 800d6d4:	b2db      	uxtb	r3, r3
 800d6d6:	7123      	strb	r3, [r4, #4]
 800d6d8:	b91b      	cbnz	r3, 800d6e2 <igmp_timer+0x22>
 800d6da:	6820      	ldr	r0, [r4, #0]
 800d6dc:	f7ff ff9a 	bl	800d614 <_send_report>
 800d6e0:	7166      	strb	r6, [r4, #5]
 800d6e2:	3501      	adds	r5, #1
 800d6e4:	2d24      	cmp	r5, #36	; 0x24
 800d6e6:	f104 0408 	add.w	r4, r4, #8
 800d6ea:	d1ed      	bne.n	800d6c8 <igmp_timer+0x8>
 800d6ec:	bd70      	pop	{r4, r5, r6, pc}
 800d6ee:	bf00      	nop
 800d6f0:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc

0800d6f4 <igmp_join>:
 800d6f4:	b538      	push	{r3, r4, r5, lr}
 800d6f6:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800d6fa:	2be0      	cmp	r3, #224	; 0xe0
 800d6fc:	d11b      	bne.n	800d736 <igmp_join+0x42>
 800d6fe:	4911      	ldr	r1, [pc, #68]	; (800d744 <igmp_join+0x50>)
 800d700:	680c      	ldr	r4, [r1, #0]
 800d702:	2c24      	cmp	r4, #36	; 0x24
 800d704:	d01a      	beq.n	800d73c <igmp_join+0x48>
 800d706:	2300      	movs	r3, #0
 800d708:	4a0f      	ldr	r2, [pc, #60]	; (800d748 <igmp_join+0x54>)
 800d70a:	429c      	cmp	r4, r3
 800d70c:	dc0d      	bgt.n	800d72a <igmp_join+0x36>
 800d70e:	f44f 7381 	mov.w	r3, #258	; 0x102
 800d712:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800d716:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800d71a:	8093      	strh	r3, [r2, #4]
 800d71c:	1c63      	adds	r3, r4, #1
 800d71e:	600b      	str	r3, [r1, #0]
 800d720:	f7ff ff78 	bl	800d614 <_send_report>
 800d724:	4623      	mov	r3, r4
 800d726:	4618      	mov	r0, r3
 800d728:	bd38      	pop	{r3, r4, r5, pc}
 800d72a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800d72e:	4285      	cmp	r5, r0
 800d730:	d0f9      	beq.n	800d726 <igmp_join+0x32>
 800d732:	3301      	adds	r3, #1
 800d734:	e7e9      	b.n	800d70a <igmp_join+0x16>
 800d736:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d73a:	e7f4      	b.n	800d726 <igmp_join+0x32>
 800d73c:	f06f 0301 	mvn.w	r3, #1
 800d740:	e7f1      	b.n	800d726 <igmp_join+0x32>
 800d742:	bf00      	nop
 800d744:	20008ee0 	andcs	r8, r0, r0, ror #29
 800d748:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc

0800d74c <igmp_leave>:
 800d74c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d750:	2600      	movs	r6, #0
 800d752:	4f1c      	ldr	r7, [pc, #112]	; (800d7c4 <igmp_leave+0x78>)
 800d754:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800d758:	4283      	cmp	r3, r0
 800d75a:	d007      	beq.n	800d76c <igmp_leave+0x20>
 800d75c:	3601      	adds	r6, #1
 800d75e:	2e24      	cmp	r6, #36	; 0x24
 800d760:	d1f8      	bne.n	800d754 <igmp_leave+0x8>
 800d762:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d766:	b002      	add	sp, #8
 800d768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d76c:	2400      	movs	r4, #0
 800d76e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800d7c8 <igmp_leave+0x7c>
 800d772:	4d16      	ldr	r5, [pc, #88]	; (800d7cc <igmp_leave+0x80>)
 800d774:	f8b8 3000 	ldrh.w	r3, [r8]
 800d778:	2118      	movs	r1, #24
 800d77a:	9001      	str	r0, [sp, #4]
 800d77c:	4814      	ldr	r0, [pc, #80]	; (800d7d0 <igmp_leave+0x84>)
 800d77e:	826b      	strh	r3, [r5, #18]
 800d780:	832c      	strh	r4, [r5, #24]
 800d782:	f000 f830 	bl	800d7e6 <net_chksum>
 800d786:	2204      	movs	r2, #4
 800d788:	8328      	strh	r0, [r5, #24]
 800d78a:	eb0d 0102 	add.w	r1, sp, r2
 800d78e:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800d792:	f7ff ff35 	bl	800d600 <memcpy.isra.0>
 800d796:	2120      	movs	r1, #32
 800d798:	f105 000e 	add.w	r0, r5, #14
 800d79c:	852c      	strh	r4, [r5, #40]	; 0x28
 800d79e:	f000 f822 	bl	800d7e6 <net_chksum>
 800d7a2:	212e      	movs	r1, #46	; 0x2e
 800d7a4:	8528      	strh	r0, [r5, #40]	; 0x28
 800d7a6:	4628      	mov	r0, r5
 800d7a8:	f003 fcda 	bl	8011160 <emac_eth_send>
 800d7ac:	f8b8 3000 	ldrh.w	r3, [r8]
 800d7b0:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800d7b4:	3301      	adds	r3, #1
 800d7b6:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800d7ba:	4620      	mov	r0, r4
 800d7bc:	f8a8 3000 	strh.w	r3, [r8]
 800d7c0:	80bc      	strh	r4, [r7, #4]
 800d7c2:	e7d0      	b.n	800d766 <igmp_leave+0x1a>
 800d7c4:	20008dbc 			; <UNDEFINED> instruction: 0x20008dbc
 800d7c8:	20008edc 	ldrdcs	r8, [r0], -ip
 800d7cc:	20008ee4 	andcs	r8, r0, r4, ror #29
 800d7d0:	20008f2a 	andcs	r8, r0, sl, lsr #30

0800d7d4 <ip_set_ip>:
 800d7d4:	b510      	push	{r4, lr}
 800d7d6:	4604      	mov	r4, r0
 800d7d8:	f7fe fb10 	bl	800bdfc <udp_set_ip>
 800d7dc:	4620      	mov	r0, r4
 800d7de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d7e2:	f7ff bf57 	b.w	800d694 <igmp_set_ip>

0800d7e6 <net_chksum>:
 800d7e6:	2300      	movs	r3, #0
 800d7e8:	f021 0201 	bic.w	r2, r1, #1
 800d7ec:	b530      	push	{r4, r5, lr}
 800d7ee:	1884      	adds	r4, r0, r2
 800d7f0:	42a0      	cmp	r0, r4
 800d7f2:	d10b      	bne.n	800d80c <net_chksum+0x26>
 800d7f4:	4291      	cmp	r1, r2
 800d7f6:	d004      	beq.n	800d802 <net_chksum+0x1c>
 800d7f8:	7802      	ldrb	r2, [r0, #0]
 800d7fa:	0212      	lsls	r2, r2, #8
 800d7fc:	ba52      	rev16	r2, r2
 800d7fe:	b292      	uxth	r2, r2
 800d800:	4413      	add	r3, r2
 800d802:	0c1a      	lsrs	r2, r3, #16
 800d804:	d106      	bne.n	800d814 <net_chksum+0x2e>
 800d806:	43d8      	mvns	r0, r3
 800d808:	b280      	uxth	r0, r0
 800d80a:	bd30      	pop	{r4, r5, pc}
 800d80c:	f830 5b02 	ldrh.w	r5, [r0], #2
 800d810:	442b      	add	r3, r5
 800d812:	e7ed      	b.n	800d7f0 <net_chksum+0xa>
 800d814:	b29b      	uxth	r3, r3
 800d816:	e7f3      	b.n	800d800 <net_chksum+0x1a>

0800d818 <net::link_register_read()>:
 800d818:	b507      	push	{r0, r1, r2, lr}
 800d81a:	2201      	movs	r2, #1
 800d81c:	f10d 0306 	add.w	r3, sp, #6
 800d820:	4611      	mov	r1, r2
 800d822:	2000      	movs	r0, #0
 800d824:	f002 fd98 	bl	8010358 <enet_phy_write_read>
 800d828:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d82c:	f080 0004 	eor.w	r0, r0, #4
 800d830:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800d834:	b003      	add	sp, #12
 800d836:	f85d fb04 	ldr.w	pc, [sp], #4

0800d83a <memcpy.isra.0>:
 800d83a:	3801      	subs	r0, #1
 800d83c:	440a      	add	r2, r1
 800d83e:	4291      	cmp	r1, r2
 800d840:	d100      	bne.n	800d844 <memcpy.isra.0+0xa>
 800d842:	4770      	bx	lr
 800d844:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d848:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d84c:	e7f7      	b.n	800d83e <memcpy.isra.0+0x4>

0800d84e <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800d84e:	b430      	push	{r4, r5}
 800d850:	b168      	cbz	r0, 800d86e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800d852:	2300      	movs	r3, #0
 800d854:	7905      	ldrb	r5, [r0, #4]
 800d856:	5cd4      	ldrb	r4, [r2, r3]
 800d858:	b11c      	cbz	r4, 800d862 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800d85a:	1c5c      	adds	r4, r3, #1
 800d85c:	429d      	cmp	r5, r3
 800d85e:	4623      	mov	r3, r4
 800d860:	dcf9      	bgt.n	800d856 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800d862:	6804      	ldr	r4, [r0, #0]
 800d864:	b2db      	uxtb	r3, r3
 800d866:	69e4      	ldr	r4, [r4, #28]
 800d868:	46a4      	mov	ip, r4
 800d86a:	bc30      	pop	{r4, r5}
 800d86c:	4760      	bx	ip
 800d86e:	bc30      	pop	{r4, r5}
 800d870:	4770      	bx	lr

0800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800d872:	b110      	cbz	r0, 800d87a <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800d874:	6803      	ldr	r3, [r0, #0]
 800d876:	691b      	ldr	r3, [r3, #16]
 800d878:	4718      	bx	r3
 800d87a:	4770      	bx	lr

0800d87c <Display::Printf(unsigned char, char const*, ...)>:
 800d87c:	b40c      	push	{r2, r3}
 800d87e:	b570      	push	{r4, r5, r6, lr}
 800d880:	6984      	ldr	r4, [r0, #24]
 800d882:	4605      	mov	r5, r0
 800d884:	460e      	mov	r6, r1
 800d886:	b08a      	sub	sp, #40	; 0x28
 800d888:	b174      	cbz	r4, 800d8a8 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800d88a:	ab0f      	add	r3, sp, #60	; 0x3c
 800d88c:	2120      	movs	r1, #32
 800d88e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d890:	a802      	add	r0, sp, #8
 800d892:	9301      	str	r3, [sp, #4]
 800d894:	f002 f9d4 	bl	800fc40 <vsnprintf>
 800d898:	4604      	mov	r4, r0
 800d89a:	69a8      	ldr	r0, [r5, #24]
 800d89c:	4631      	mov	r1, r6
 800d89e:	6803      	ldr	r3, [r0, #0]
 800d8a0:	aa02      	add	r2, sp, #8
 800d8a2:	69dd      	ldr	r5, [r3, #28]
 800d8a4:	b2a3      	uxth	r3, r4
 800d8a6:	47a8      	blx	r5
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	b00a      	add	sp, #40	; 0x28
 800d8ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d8b0:	b002      	add	sp, #8
 800d8b2:	4770      	bx	lr

0800d8b4 <DisplayUdf::DisplayUdf()>:
 800d8b4:	b510      	push	{r4, lr}
 800d8b6:	4604      	mov	r4, r0
 800d8b8:	f001 fb00 	bl	800eebc <Display::Display()>
 800d8bc:	2202      	movs	r2, #2
 800d8be:	2300      	movs	r3, #0
 800d8c0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800d8c4:	4b05      	ldr	r3, [pc, #20]	; (800d8dc <DisplayUdf::DisplayUdf()+0x28>)
 800d8c6:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 800d8ca:	601c      	str	r4, [r3, #0]
 800d8cc:	2301      	movs	r3, #1
 800d8ce:	f802 3f01 	strb.w	r3, [r2, #1]!
 800d8d2:	3301      	adds	r3, #1
 800d8d4:	2b15      	cmp	r3, #21
 800d8d6:	d1fa      	bne.n	800d8ce <DisplayUdf::DisplayUdf()+0x1a>
 800d8d8:	4620      	mov	r0, r4
 800d8da:	bd10      	pop	{r4, pc}
 800d8dc:	20008f4c 	andcs	r8, r0, ip, asr #30

0800d8e0 <DisplayUdf::SetTitle(char const*, ...)>:
 800d8e0:	b40e      	push	{r1, r2, r3}
 800d8e2:	b517      	push	{r0, r1, r2, r4, lr}
 800d8e4:	ab05      	add	r3, sp, #20
 800d8e6:	f853 2b04 	ldr.w	r2, [r3], #4
 800d8ea:	4604      	mov	r4, r0
 800d8ec:	211f      	movs	r1, #31
 800d8ee:	301c      	adds	r0, #28
 800d8f0:	9301      	str	r3, [sp, #4]
 800d8f2:	f002 f9a5 	bl	800fc40 <vsnprintf>
 800d8f6:	2300      	movs	r3, #0
 800d8f8:	4404      	add	r4, r0
 800d8fa:	7723      	strb	r3, [r4, #28]
 800d8fc:	b003      	add	sp, #12
 800d8fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d902:	b003      	add	sp, #12
 800d904:	4770      	bx	lr

0800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800d906:	1e4b      	subs	r3, r1, #1
 800d908:	2b05      	cmp	r3, #5
 800d90a:	b530      	push	{r4, r5, lr}
 800d90c:	d80f      	bhi.n	800d92e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800d90e:	2300      	movs	r3, #0
 800d910:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 800d914:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800d918:	428d      	cmp	r5, r1
 800d91a:	d109      	bne.n	800d930 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800d91c:	1884      	adds	r4, r0, r2
 800d91e:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800d922:	4403      	add	r3, r0
 800d924:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800d928:	4410      	add	r0, r2
 800d92a:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800d92e:	bd30      	pop	{r4, r5, pc}
 800d930:	3301      	adds	r3, #1
 800d932:	2b14      	cmp	r3, #20
 800d934:	d1ee      	bne.n	800d914 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800d936:	e7f7      	b.n	800d928 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

0800d938 <DisplayUdf::ShowEmacStart()>:
 800d938:	b510      	push	{r4, lr}
 800d93a:	4604      	mov	r4, r0
 800d93c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800d940:	6980      	ldr	r0, [r0, #24]
 800d942:	f7ff ff96 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800d946:	4620      	mov	r0, r4
 800d948:	4a02      	ldr	r2, [pc, #8]	; (800d954 <DisplayUdf::ShowEmacStart()+0x1c>)
 800d94a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800d94e:	f7ff ff95 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800d952:	bd10      	pop	{r4, pc}
 800d954:	08013477 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, ip, sp}

0800d958 <DisplayUdf::ShowIpAddress()>:
 800d958:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d95c:	4604      	mov	r4, r0
 800d95e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800d962:	b086      	sub	sp, #24
 800d964:	6980      	ldr	r0, [r0, #24]
 800d966:	f7ff ff84 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800d96a:	4b13      	ldr	r3, [pc, #76]	; (800d9b8 <DisplayUdf::ShowIpAddress()+0x60>)
 800d96c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800d970:	681d      	ldr	r5, [r3, #0]
 800d972:	69e8      	ldr	r0, [r5, #28]
 800d974:	696e      	ldr	r6, [r5, #20]
 800d976:	f004 f8f1 	bl	8011b5c <__popcountsi2>
 800d97a:	79eb      	ldrb	r3, [r5, #7]
 800d97c:	fa5f f886 	uxtb.w	r8, r6
 800d980:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800d984:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800d988:	0e36      	lsrs	r6, r6, #24
 800d98a:	b99b      	cbnz	r3, 800d9b4 <DisplayUdf::ShowIpAddress()+0x5c>
 800d98c:	796b      	ldrb	r3, [r5, #5]
 800d98e:	2b00      	cmp	r3, #0
 800d990:	bf14      	ite	ne
 800d992:	2244      	movne	r2, #68	; 0x44
 800d994:	2253      	moveq	r2, #83	; 0x53
 800d996:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800d99a:	4643      	mov	r3, r8
 800d99c:	4639      	mov	r1, r7
 800d99e:	4620      	mov	r0, r4
 800d9a0:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d9a4:	4a05      	ldr	r2, [pc, #20]	; (800d9bc <DisplayUdf::ShowIpAddress()+0x64>)
 800d9a6:	f8cd 9000 	str.w	r9, [sp]
 800d9aa:	f7ff ff67 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800d9ae:	b006      	add	sp, #24
 800d9b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d9b4:	225a      	movs	r2, #90	; 0x5a
 800d9b6:	e7ee      	b.n	800d996 <DisplayUdf::ShowIpAddress()+0x3e>
 800d9b8:	2000897c 	andcs	r8, r0, ip, ror r9
 800d9bc:	08013486 	stmdaeq	r1, {r1, r2, r7, sl, ip, sp}

0800d9c0 <DisplayUdf::ShowNetmask()>:
 800d9c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d9c2:	4604      	mov	r4, r0
 800d9c4:	4b0b      	ldr	r3, [pc, #44]	; (800d9f4 <DisplayUdf::ShowNetmask()+0x34>)
 800d9c6:	681b      	ldr	r3, [r3, #0]
 800d9c8:	69db      	ldr	r3, [r3, #28]
 800d9ca:	0e1a      	lsrs	r2, r3, #24
 800d9cc:	9202      	str	r2, [sp, #8]
 800d9ce:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800d9d2:	9201      	str	r2, [sp, #4]
 800d9d4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d9d8:	9200      	str	r2, [sp, #0]
 800d9da:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800d9de:	4a06      	ldr	r2, [pc, #24]	; (800d9f8 <DisplayUdf::ShowNetmask()+0x38>)
 800d9e0:	b2db      	uxtb	r3, r3
 800d9e2:	f7ff ff4b 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800d9e6:	4620      	mov	r0, r4
 800d9e8:	b004      	add	sp, #16
 800d9ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d9ee:	f7ff bfb3 	b.w	800d958 <DisplayUdf::ShowIpAddress()>
 800d9f2:	bf00      	nop
 800d9f4:	2000897c 	andcs	r8, r0, ip, ror r9
 800d9f8:	08013498 	stmdaeq	r1, {r3, r4, r7, sl, ip, sp}

0800d9fc <DisplayUdf::ShowGatewayIp()>:
 800d9fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d9fe:	4604      	mov	r4, r0
 800da00:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800da04:	6980      	ldr	r0, [r0, #24]
 800da06:	f7ff ff34 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800da0a:	4b0a      	ldr	r3, [pc, #40]	; (800da34 <DisplayUdf::ShowGatewayIp()+0x38>)
 800da0c:	4620      	mov	r0, r4
 800da0e:	681b      	ldr	r3, [r3, #0]
 800da10:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800da14:	699b      	ldr	r3, [r3, #24]
 800da16:	0e1a      	lsrs	r2, r3, #24
 800da18:	9202      	str	r2, [sp, #8]
 800da1a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800da1e:	9201      	str	r2, [sp, #4]
 800da20:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800da24:	9200      	str	r2, [sp, #0]
 800da26:	b2db      	uxtb	r3, r3
 800da28:	4a03      	ldr	r2, [pc, #12]	; (800da38 <DisplayUdf::ShowGatewayIp()+0x3c>)
 800da2a:	f7ff ff27 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800da2e:	b004      	add	sp, #16
 800da30:	bd10      	pop	{r4, pc}
 800da32:	bf00      	nop
 800da34:	2000897c 	andcs	r8, r0, ip, ror r9
 800da38:	080134a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, ip, sp}

0800da3c <DisplayUdf::ShowHostName()>:
 800da3c:	b510      	push	{r4, lr}
 800da3e:	4604      	mov	r4, r0
 800da40:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800da44:	6980      	ldr	r0, [r0, #24]
 800da46:	f7ff ff14 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800da4a:	4b05      	ldr	r3, [pc, #20]	; (800da60 <DisplayUdf::ShowHostName()+0x24>)
 800da4c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800da50:	681a      	ldr	r2, [r3, #0]
 800da52:	69a0      	ldr	r0, [r4, #24]
 800da54:	3220      	adds	r2, #32
 800da56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da5a:	f7ff bef8 	b.w	800d84e <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800da5e:	bf00      	nop
 800da60:	2000897c 	andcs	r8, r0, ip, ror r9

0800da64 <DisplayUdf::Show()>:
 800da64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da66:	4604      	mov	r4, r0
 800da68:	21ff      	movs	r1, #255	; 0xff
 800da6a:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 800da6e:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 800da72:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800da76:	2806      	cmp	r0, #6
 800da78:	bf88      	it	hi
 800da7a:	7019      	strbhi	r1, [r3, #0]
 800da7c:	429a      	cmp	r2, r3
 800da7e:	d1f8      	bne.n	800da72 <DisplayUdf::Show()+0xe>
 800da80:	2501      	movs	r5, #1
 800da82:	4629      	mov	r1, r5
 800da84:	3501      	adds	r5, #1
 800da86:	69a0      	ldr	r0, [r4, #24]
 800da88:	b2ed      	uxtb	r5, r5
 800da8a:	f7ff fef2 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800da8e:	2d06      	cmp	r5, #6
 800da90:	d1f7      	bne.n	800da82 <DisplayUdf::Show()+0x1e>
 800da92:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800da96:	69a0      	ldr	r0, [r4, #24]
 800da98:	f104 021c 	add.w	r2, r4, #28
 800da9c:	f7ff fed7 	bl	800d84e <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800daa0:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800daa4:	69a0      	ldr	r0, [r4, #24]
 800daa6:	4a0d      	ldr	r2, [pc, #52]	; (800dadc <DisplayUdf::Show()+0x78>)
 800daa8:	f7ff fed1 	bl	800d84e <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800daac:	4b0c      	ldr	r3, [pc, #48]	; (800dae0 <DisplayUdf::Show()+0x7c>)
 800daae:	4a0d      	ldr	r2, [pc, #52]	; (800dae4 <DisplayUdf::Show()+0x80>)
 800dab0:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800dab4:	9300      	str	r3, [sp, #0]
 800dab6:	4620      	mov	r0, r4
 800dab8:	2303      	movs	r3, #3
 800daba:	f7ff fedf 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800dabe:	4620      	mov	r0, r4
 800dac0:	f7ff ff4a 	bl	800d958 <DisplayUdf::ShowIpAddress()>
 800dac4:	4620      	mov	r0, r4
 800dac6:	f7ff ff99 	bl	800d9fc <DisplayUdf::ShowGatewayIp()>
 800daca:	4620      	mov	r0, r4
 800dacc:	f7ff ff78 	bl	800d9c0 <DisplayUdf::ShowNetmask()>
 800dad0:	4620      	mov	r0, r4
 800dad2:	b003      	add	sp, #12
 800dad4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dad8:	f7ff bfb0 	b.w	800da3c <DisplayUdf::ShowHostName()>
 800dadc:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 800dae0:	2000a030 	andcs	sl, r0, r0, lsr r0
 800dae4:	080134b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, ip, sp}

0800dae8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800dae8:	3901      	subs	r1, #1
 800daea:	b510      	push	{r4, lr}
 800daec:	4604      	mov	r4, r0
 800daee:	2903      	cmp	r1, #3
 800daf0:	d814      	bhi.n	800db1c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800daf2:	e8df f001 	tbb	[pc, r1]
 800daf6:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800dafa:	4b14      	ldr	r3, [pc, #80]	; (800db4c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800dafc:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800db00:	6818      	ldr	r0, [r3, #0]
 800db02:	f7fa fced 	bl	80084e0 <Display::Status(Display7SegmentMessage)>
 800db06:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800db0a:	69a0      	ldr	r0, [r4, #24]
 800db0c:	f7ff feb1 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800db10:	4a0f      	ldr	r2, [pc, #60]	; (800db50 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800db12:	4620      	mov	r0, r4
 800db14:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800db18:	f7ff feb0 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800db1c:	bd10      	pop	{r4, pc}
 800db1e:	f248 0180 	movw	r1, #32896	; 0x8080
 800db22:	4b0a      	ldr	r3, [pc, #40]	; (800db4c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800db24:	6818      	ldr	r0, [r3, #0]
 800db26:	f7fa fcdb 	bl	80084e0 <Display::Status(Display7SegmentMessage)>
 800db2a:	e7f7      	b.n	800db1c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800db2c:	4b07      	ldr	r3, [pc, #28]	; (800db4c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800db2e:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800db32:	6818      	ldr	r0, [r3, #0]
 800db34:	f7fa fcd4 	bl	80084e0 <Display::Status(Display7SegmentMessage)>
 800db38:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800db3c:	69a0      	ldr	r0, [r4, #24]
 800db3e:	f7ff fe98 	bl	800d872 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800db42:	4a04      	ldr	r2, [pc, #16]	; (800db54 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800db44:	e7e5      	b.n	800db12 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800db46:	f645 3179 	movw	r1, #23417	; 0x5b79
 800db4a:	e7ea      	b.n	800db22 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800db4c:	20009fa0 	andcs	r9, r0, r0, lsr #31
 800db50:	080134c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, ip, sp}
 800db54:	080134d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, ip, sp}

0800db58 <DisplayUdf::ShowShutdown()>:
 800db58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db5c:	4604      	mov	r4, r0
 800db5e:	6980      	ldr	r0, [r0, #24]
 800db60:	b1d0      	cbz	r0, 800db98 <DisplayUdf::ShowShutdown()+0x40>
 800db62:	f890 8005 	ldrb.w	r8, [r0, #5]
 800db66:	6803      	ldr	r3, [r0, #0]
 800db68:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800db6c:	b2ed      	uxtb	r5, r5
 800db6e:	462a      	mov	r2, r5
 800db70:	2100      	movs	r1, #0
 800db72:	6a1b      	ldr	r3, [r3, #32]
 800db74:	7906      	ldrb	r6, [r0, #4]
 800db76:	2700      	movs	r7, #0
 800db78:	4798      	blx	r3
 800db7a:	3e01      	subs	r6, #1
 800db7c:	42b7      	cmp	r7, r6
 800db7e:	69a0      	ldr	r0, [r4, #24]
 800db80:	d311      	bcc.n	800dba6 <DisplayUdf::ShowShutdown()+0x4e>
 800db82:	b120      	cbz	r0, 800db8e <DisplayUdf::ShowShutdown()+0x36>
 800db84:	6803      	ldr	r3, [r0, #0]
 800db86:	462a      	mov	r2, r5
 800db88:	2100      	movs	r1, #0
 800db8a:	6a1b      	ldr	r3, [r3, #32]
 800db8c:	4798      	blx	r3
 800db8e:	4641      	mov	r1, r8
 800db90:	4a08      	ldr	r2, [pc, #32]	; (800dbb4 <DisplayUdf::ShowShutdown()+0x5c>)
 800db92:	69a0      	ldr	r0, [r4, #24]
 800db94:	f7ff fe5b 	bl	800d84e <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800db98:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800db9c:	4620      	mov	r0, r4
 800db9e:	f7fa fc9f 	bl	80084e0 <Display::Status(Display7SegmentMessage)>
 800dba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dba6:	b118      	cbz	r0, 800dbb0 <DisplayUdf::ShowShutdown()+0x58>
 800dba8:	6803      	ldr	r3, [r0, #0]
 800dbaa:	2120      	movs	r1, #32
 800dbac:	695b      	ldr	r3, [r3, #20]
 800dbae:	4798      	blx	r3
 800dbb0:	3701      	adds	r7, #1
 800dbb2:	e7e3      	b.n	800db7c <DisplayUdf::ShowShutdown()+0x24>
 800dbb4:	080134e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, ip, sp}

0800dbb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800dbb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dbba:	88c6      	ldrh	r6, [r0, #6]
 800dbbc:	8885      	ldrh	r5, [r0, #4]
 800dbbe:	42ae      	cmp	r6, r5
 800dbc0:	d216      	bcs.n	800dbf0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800dbc2:	4604      	mov	r4, r0
 800dbc4:	6800      	ldr	r0, [r0, #0]
 800dbc6:	1bad      	subs	r5, r5, r6
 800dbc8:	4430      	add	r0, r6
 800dbca:	7a26      	ldrb	r6, [r4, #8]
 800dbcc:	b923      	cbnz	r3, 800dbd8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800dbce:	b926      	cbnz	r6, 800dbda <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800dbd0:	9200      	str	r2, [sp, #0]
 800dbd2:	460b      	mov	r3, r1
 800dbd4:	4a09      	ldr	r2, [pc, #36]	; (800dbfc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800dbd6:	e003      	b.n	800dbe0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800dbd8:	b166      	cbz	r6, 800dbf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800dbda:	460b      	mov	r3, r1
 800dbdc:	9200      	str	r2, [sp, #0]
 800dbde:	4a08      	ldr	r2, [pc, #32]	; (800dc00 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800dbe0:	4629      	mov	r1, r5
 800dbe2:	f002 f815 	bl	800fc10 <snprintf>
 800dbe6:	4285      	cmp	r5, r0
 800dbe8:	bfa2      	ittt	ge
 800dbea:	88e3      	ldrhge	r3, [r4, #6]
 800dbec:	181b      	addge	r3, r3, r0
 800dbee:	80e3      	strhge	r3, [r4, #6]
 800dbf0:	b002      	add	sp, #8
 800dbf2:	bd70      	pop	{r4, r5, r6, pc}
 800dbf4:	9200      	str	r2, [sp, #0]
 800dbf6:	460b      	mov	r3, r1
 800dbf8:	4a02      	ldr	r2, [pc, #8]	; (800dc04 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800dbfa:	e7f1      	b.n	800dbe0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800dbfc:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800dc00:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800dc04:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}

0800dc08 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800dc08:	b510      	push	{r4, lr}
 800dc0a:	2220      	movs	r2, #32
 800dc0c:	4604      	mov	r4, r0
 800dc0e:	f840 1b04 	str.w	r1, [r0], #4
 800dc12:	2100      	movs	r1, #0
 800dc14:	f001 fdba 	bl	800f78c <memset>
 800dc18:	f647 7305 	movw	r3, #32517	; 0x7f05
 800dc1c:	4620      	mov	r0, r4
 800dc1e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800dc20:	bd10      	pop	{r4, pc}

0800dc22 <DisplayUdfParams::Load()>:
 800dc22:	b508      	push	{r3, lr}
 800dc24:	2300      	movs	r3, #0
 800dc26:	4601      	mov	r1, r0
 800dc28:	6043      	str	r3, [r0, #4]
 800dc2a:	6800      	ldr	r0, [r0, #0]
 800dc2c:	b120      	cbz	r0, 800dc38 <DisplayUdfParams::Load()+0x16>
 800dc2e:	6803      	ldr	r3, [r0, #0]
 800dc30:	3104      	adds	r1, #4
 800dc32:	68db      	ldr	r3, [r3, #12]
 800dc34:	4798      	blx	r3
 800dc36:	2001      	movs	r0, #1
 800dc38:	bd08      	pop	{r3, pc}
	...

0800dc3c <DisplayUdfParams::Load(char const*, unsigned int)>:
 800dc3c:	6803      	ldr	r3, [r0, #0]
 800dc3e:	b1d3      	cbz	r3, 800dc76 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800dc40:	2300      	movs	r3, #0
 800dc42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dc44:	460d      	mov	r5, r1
 800dc46:	4616      	mov	r6, r2
 800dc48:	4604      	mov	r4, r0
 800dc4a:	6043      	str	r3, [r0, #4]
 800dc4c:	4602      	mov	r2, r0
 800dc4e:	490a      	ldr	r1, [pc, #40]	; (800dc78 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800dc50:	4668      	mov	r0, sp
 800dc52:	f000 ffc3 	bl	800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800dc56:	4632      	mov	r2, r6
 800dc58:	4629      	mov	r1, r5
 800dc5a:	4668      	mov	r0, sp
 800dc5c:	f000 ffc2 	bl	800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>
 800dc60:	4621      	mov	r1, r4
 800dc62:	f851 0b04 	ldr.w	r0, [r1], #4
 800dc66:	6803      	ldr	r3, [r0, #0]
 800dc68:	689b      	ldr	r3, [r3, #8]
 800dc6a:	4798      	blx	r3
 800dc6c:	4668      	mov	r0, sp
 800dc6e:	f000 ffb8 	bl	800ebe2 <ReadConfigFile::~ReadConfigFile()>
 800dc72:	b002      	add	sp, #8
 800dc74:	bd70      	pop	{r4, r5, r6, pc}
 800dc76:	4770      	bx	lr
 800dc78:	0800dd45 	stmdaeq	r0, {r0, r2, r6, r8, sl, fp, ip, lr, pc}

0800dc7c <DisplayUdfParams::callbackFunction(char const*)>:
 800dc7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dc7e:	460e      	mov	r6, r1
 800dc80:	4604      	mov	r4, r0
 800dc82:	492c      	ldr	r1, [pc, #176]	; (800dd34 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800dc84:	4630      	mov	r0, r6
 800dc86:	f10d 0207 	add.w	r2, sp, #7
 800dc8a:	f001 f857 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dc8e:	b968      	cbnz	r0, 800dcac <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800dc90:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800dc94:	6863      	ldr	r3, [r4, #4]
 800dc96:	2a7f      	cmp	r2, #127	; 0x7f
 800dc98:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800dc9c:	bf14      	ite	ne
 800dc9e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800dca2:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800dca6:	6063      	str	r3, [r4, #4]
 800dca8:	b003      	add	sp, #12
 800dcaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dcac:	4630      	mov	r0, r6
 800dcae:	4922      	ldr	r1, [pc, #136]	; (800dd38 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800dcb0:	f10d 0207 	add.w	r2, sp, #7
 800dcb4:	f001 f842 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dcb8:	b958      	cbnz	r0, 800dcd2 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800dcba:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800dcbe:	6863      	ldr	r3, [r4, #4]
 800dcc0:	2a05      	cmp	r2, #5
 800dcc2:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800dcc6:	bf14      	ite	ne
 800dcc8:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800dccc:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800dcd0:	e7e9      	b.n	800dca6 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800dcd2:	4630      	mov	r0, r6
 800dcd4:	4919      	ldr	r1, [pc, #100]	; (800dd3c <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800dcd6:	f10d 0207 	add.w	r2, sp, #7
 800dcda:	f001 f82f 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dcde:	b948      	cbnz	r0, 800dcf4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800dce0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800dce4:	6863      	ldr	r3, [r4, #4]
 800dce6:	b112      	cbz	r2, 800dcee <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800dce8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800dcec:	e7db      	b.n	800dca6 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800dcee:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800dcf2:	e7d8      	b.n	800dca6 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800dcf4:	2500      	movs	r5, #0
 800dcf6:	4f12      	ldr	r7, [pc, #72]	; (800dd40 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 800dcf8:	4630      	mov	r0, r6
 800dcfa:	f857 1b04 	ldr.w	r1, [r7], #4
 800dcfe:	f10d 0207 	add.w	r2, sp, #7
 800dd02:	f001 f81b 	bl	800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dd06:	b980      	cbnz	r0, 800dd2a <DisplayUdfParams::callbackFunction(char const*)+0xae>
 800dd08:	2301      	movs	r3, #1
 800dd0a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800dd0e:	40ab      	lsls	r3, r5
 800dd10:	1e4e      	subs	r6, r1, #1
 800dd12:	2e05      	cmp	r6, #5
 800dd14:	6862      	ldr	r2, [r4, #4]
 800dd16:	4425      	add	r5, r4
 800dd18:	d802      	bhi.n	800dd20 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 800dd1a:	7229      	strb	r1, [r5, #8]
 800dd1c:	4313      	orrs	r3, r2
 800dd1e:	e7c2      	b.n	800dca6 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800dd20:	ea22 0203 	bic.w	r2, r2, r3
 800dd24:	7228      	strb	r0, [r5, #8]
 800dd26:	6062      	str	r2, [r4, #4]
 800dd28:	e7be      	b.n	800dca8 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800dd2a:	3501      	adds	r5, #1
 800dd2c:	2d14      	cmp	r5, #20
 800dd2e:	d1e3      	bne.n	800dcf8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800dd30:	e7ba      	b.n	800dca8 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800dd32:	bf00      	nop
 800dd34:	080135a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, sp}
 800dd38:	0801356a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, sp}
 800dd3c:	08013578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, sp}
 800dd40:	080134f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, ip, sp}

0800dd44 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800dd44:	f7ff bf9a 	b.w	800dc7c <DisplayUdfParams::callbackFunction(char const*)>

0800dd48 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800dd48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd4c:	4604      	mov	r4, r0
 800dd4e:	4615      	mov	r5, r2
 800dd50:	461e      	mov	r6, r3
 800dd52:	b086      	sub	sp, #24
 800dd54:	3004      	adds	r0, #4
 800dd56:	b379      	cbz	r1, 800ddb8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800dd58:	2222      	movs	r2, #34	; 0x22
 800dd5a:	f001 fd00 	bl	800f75e <memmove>
 800dd5e:	462a      	mov	r2, r5
 800dd60:	4633      	mov	r3, r6
 800dd62:	493d      	ldr	r1, [pc, #244]	; (800de58 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800dd64:	a803      	add	r0, sp, #12
 800dd66:	f000 fe99 	bl	800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800dd6a:	6863      	ldr	r3, [r4, #4]
 800dd6c:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800dd70:	493a      	ldr	r1, [pc, #232]	; (800de5c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800dd72:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800dd76:	a803      	add	r0, sp, #12
 800dd78:	f7ff ff1e 	bl	800dbb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800dd7c:	6863      	ldr	r3, [r4, #4]
 800dd7e:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800dd82:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800dd86:	4936      	ldr	r1, [pc, #216]	; (800de60 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800dd88:	a803      	add	r0, sp, #12
 800dd8a:	f7ff ff15 	bl	800dbb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800dd8e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800dd92:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800dd96:	6863      	ldr	r3, [r4, #4]
 800dd98:	42aa      	cmp	r2, r5
 800dd9a:	d226      	bcs.n	800ddea <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800dd9c:	9803      	ldr	r0, [sp, #12]
 800dd9e:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800dda2:	4410      	add	r0, r2
 800dda4:	eba5 0502 	sub.w	r5, r5, r2
 800dda8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ddac:	d10b      	bne.n	800ddc6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800ddae:	b962      	cbnz	r2, 800ddca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800ddb0:	9200      	str	r2, [sp, #0]
 800ddb2:	4b2c      	ldr	r3, [pc, #176]	; (800de64 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800ddb4:	4a2c      	ldr	r2, [pc, #176]	; (800de68 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800ddb6:	e00e      	b.n	800ddd6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800ddb8:	6823      	ldr	r3, [r4, #0]
 800ddba:	4601      	mov	r1, r0
 800ddbc:	681a      	ldr	r2, [r3, #0]
 800ddbe:	4618      	mov	r0, r3
 800ddc0:	68d2      	ldr	r2, [r2, #12]
 800ddc2:	4790      	blx	r2
 800ddc4:	e7cb      	b.n	800dd5e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800ddc6:	2a00      	cmp	r2, #0
 800ddc8:	d041      	beq.n	800de4e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800ddca:	3b00      	subs	r3, #0
 800ddcc:	bf18      	it	ne
 800ddce:	2301      	movne	r3, #1
 800ddd0:	4a26      	ldr	r2, [pc, #152]	; (800de6c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800ddd2:	9300      	str	r3, [sp, #0]
 800ddd4:	4b23      	ldr	r3, [pc, #140]	; (800de64 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800ddd6:	4629      	mov	r1, r5
 800ddd8:	f001 ff1a 	bl	800fc10 <snprintf>
 800dddc:	4285      	cmp	r5, r0
 800ddde:	bfa2      	ittt	ge
 800dde0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800dde4:	181b      	addge	r3, r3, r0
 800dde6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800ddea:	2500      	movs	r5, #0
 800ddec:	2701      	movs	r7, #1
 800ddee:	4e20      	ldr	r6, [pc, #128]	; (800de70 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800ddf0:	f104 0808 	add.w	r8, r4, #8
 800ddf4:	f856 1b04 	ldr.w	r1, [r6], #4
 800ddf8:	780b      	ldrb	r3, [r1, #0]
 800ddfa:	b15b      	cbz	r3, 800de14 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800ddfc:	6862      	ldr	r2, [r4, #4]
 800ddfe:	fa07 f305 	lsl.w	r3, r7, r5
 800de02:	4393      	bics	r3, r2
 800de04:	bf0c      	ite	eq
 800de06:	2301      	moveq	r3, #1
 800de08:	2300      	movne	r3, #0
 800de0a:	f818 2005 	ldrb.w	r2, [r8, r5]
 800de0e:	a803      	add	r0, sp, #12
 800de10:	f7ff fed2 	bl	800dbb8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800de14:	3501      	adds	r5, #1
 800de16:	2d14      	cmp	r5, #20
 800de18:	d1ec      	bne.n	800ddf4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800de1a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800de1e:	b17b      	cbz	r3, 800de40 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800de20:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800de24:	9b03      	ldr	r3, [sp, #12]
 800de26:	4413      	add	r3, r2
 800de28:	227d      	movs	r2, #125	; 0x7d
 800de2a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800de2e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800de32:	9903      	ldr	r1, [sp, #12]
 800de34:	54ca      	strb	r2, [r1, r3]
 800de36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800de3a:	3301      	adds	r3, #1
 800de3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800de40:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800de44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800de46:	601a      	str	r2, [r3, #0]
 800de48:	b006      	add	sp, #24
 800de4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de4e:	2301      	movs	r3, #1
 800de50:	4a08      	ldr	r2, [pc, #32]	; (800de74 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800de52:	9300      	str	r3, [sp, #0]
 800de54:	4b03      	ldr	r3, [pc, #12]	; (800de64 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800de56:	e7be      	b.n	800ddd6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800de58:	08013596 	stmdaeq	r1, {r1, r2, r4, r7, r8, sl, ip, sp}
 800de5c:	080135a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, sp}
 800de60:	0801356a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, sp}
 800de64:	08013578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, sp}
 800de68:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800de6c:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800de70:	080134f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, ip, sp}
 800de74:	08012236 	stmdaeq	r1, {r1, r2, r4, r5, r9, sp}

0800de78 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800de78:	b513      	push	{r0, r1, r4, lr}
 800de7a:	6804      	ldr	r4, [r0, #0]
 800de7c:	b914      	cbnz	r4, 800de84 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800de7e:	601c      	str	r4, [r3, #0]
 800de80:	b002      	add	sp, #8
 800de82:	bd10      	pop	{r4, pc}
 800de84:	9300      	str	r3, [sp, #0]
 800de86:	4613      	mov	r3, r2
 800de88:	460a      	mov	r2, r1
 800de8a:	2100      	movs	r1, #0
 800de8c:	f7ff ff5c 	bl	800dd48 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800de90:	e7f6      	b.n	800de80 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800de92 <DisplayUdfParams::Set(DisplayUdf*)>:
 800de92:	6843      	ldr	r3, [r0, #4]
 800de94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de98:	009a      	lsls	r2, r3, #2
 800de9a:	4604      	mov	r4, r0
 800de9c:	460e      	mov	r6, r1
 800de9e:	d506      	bpl.n	800deae <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800dea0:	6988      	ldr	r0, [r1, #24]
 800dea2:	b120      	cbz	r0, 800deae <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800dea4:	6803      	ldr	r3, [r0, #0]
 800dea6:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800deaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800deac:	4798      	blx	r3
 800deae:	6863      	ldr	r3, [r4, #4]
 800deb0:	69b0      	ldr	r0, [r6, #24]
 800deb2:	00db      	lsls	r3, r3, #3
 800deb4:	bf41      	itttt	mi
 800deb6:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800deba:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800debe:	4353      	mulmi	r3, r2
 800dec0:	6173      	strmi	r3, [r6, #20]
 800dec2:	6861      	ldr	r1, [r4, #4]
 800dec4:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800dec8:	b110      	cbz	r0, 800ded0 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800deca:	6803      	ldr	r3, [r0, #0]
 800decc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dece:	4798      	blx	r3
 800ded0:	2500      	movs	r5, #0
 800ded2:	2701      	movs	r7, #1
 800ded4:	f104 0808 	add.w	r8, r4, #8
 800ded8:	6862      	ldr	r2, [r4, #4]
 800deda:	fa07 f305 	lsl.w	r3, r7, r5
 800dede:	4393      	bics	r3, r2
 800dee0:	d105      	bne.n	800deee <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800dee2:	462a      	mov	r2, r5
 800dee4:	4630      	mov	r0, r6
 800dee6:	f818 1005 	ldrb.w	r1, [r8, r5]
 800deea:	f7ff fd0c 	bl	800d906 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800deee:	3501      	adds	r5, #1
 800def0:	2d14      	cmp	r5, #20
 800def2:	d1f1      	bne.n	800ded8 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800def4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800def8 <DisplayUdfParams::Dump()>:
 800def8:	4770      	bx	lr
	...

0800defc <DisplayUdf::Show(E131Bridge*)>:
 800defc:	b530      	push	{r4, r5, lr}
 800defe:	460d      	mov	r5, r1
 800df00:	4604      	mov	r4, r0
 800df02:	b085      	sub	sp, #20
 800df04:	f7ff fdae 	bl	800da64 <DisplayUdf::Show()>
 800df08:	f895 250b 	ldrb.w	r2, [r5, #1291]	; 0x50b
 800df0c:	f895 350a 	ldrb.w	r3, [r5, #1290]	; 0x50a
 800df10:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800df14:	4413      	add	r3, r2
 800df16:	4620      	mov	r0, r4
 800df18:	4a1a      	ldr	r2, [pc, #104]	; (800df84 <DisplayUdf::Show(E131Bridge*)+0x88>)
 800df1a:	f7ff fcaf 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800df1e:	2301      	movs	r3, #1
 800df20:	2100      	movs	r1, #0
 800df22:	4628      	mov	r0, r5
 800df24:	f10d 020e 	add.w	r2, sp, #14
 800df28:	f7fb fe02 	bl	8009b30 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800df2c:	b188      	cbz	r0, 800df52 <DisplayUdf::Show(E131Bridge*)+0x56>
 800df2e:	f8d5 0550 	ldr.w	r0, [r5, #1360]	; 0x550
 800df32:	4915      	ldr	r1, [pc, #84]	; (800df88 <DisplayUdf::Show(E131Bridge*)+0x8c>)
 800df34:	4b15      	ldr	r3, [pc, #84]	; (800df8c <DisplayUdf::Show(E131Bridge*)+0x90>)
 800df36:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800df3a:	2800      	cmp	r0, #0
 800df3c:	bf18      	it	ne
 800df3e:	460b      	movne	r3, r1
 800df40:	4620      	mov	r0, r4
 800df42:	e9cd 2300 	strd	r2, r3, [sp]
 800df46:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 800df4a:	2341      	movs	r3, #65	; 0x41
 800df4c:	4a10      	ldr	r2, [pc, #64]	; (800df90 <DisplayUdf::Show(E131Bridge*)+0x94>)
 800df4e:	f7ff fc95 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800df52:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800df54:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800df58:	2a02      	cmp	r2, #2
 800df5a:	d001      	beq.n	800df60 <DisplayUdf::Show(E131Bridge*)+0x64>
 800df5c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800df5e:	b92b      	cbnz	r3, 800df6c <DisplayUdf::Show(E131Bridge*)+0x70>
 800df60:	4620      	mov	r0, r4
 800df62:	4a0c      	ldr	r2, [pc, #48]	; (800df94 <DisplayUdf::Show(E131Bridge*)+0x98>)
 800df64:	f7ff fc8a 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800df68:	b005      	add	sp, #20
 800df6a:	bd30      	pop	{r4, r5, pc}
 800df6c:	480a      	ldr	r0, [pc, #40]	; (800df98 <DisplayUdf::Show(E131Bridge*)+0x9c>)
 800df6e:	9300      	str	r3, [sp, #0]
 800df70:	4b0a      	ldr	r3, [pc, #40]	; (800df9c <DisplayUdf::Show(E131Bridge*)+0xa0>)
 800df72:	2a00      	cmp	r2, #0
 800df74:	bf08      	it	eq
 800df76:	4603      	moveq	r3, r0
 800df78:	4620      	mov	r0, r4
 800df7a:	4a09      	ldr	r2, [pc, #36]	; (800dfa0 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800df7c:	f7ff fc7e 	bl	800d87c <Display::Printf(unsigned char, char const*, ...)>
 800df80:	e7f2      	b.n	800df68 <DisplayUdf::Show(E131Bridge*)+0x6c>
 800df82:	bf00      	nop
 800df84:	080135ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, sp}
 800df88:	08013000 	stmdaeq	r1, {ip, sp}
 800df8c:	08012ffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 800df90:	080135b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, ip, sp}
 800df94:	080135c2 	stmdaeq	r1, {r1, r6, r7, r8, sl, ip, sp}
 800df98:	08013114 	stmdaeq	r1, {r2, r4, r8, ip, sp}
 800df9c:	08013109 	stmdaeq	r1, {r0, r3, r8, ip, sp}
 800dfa0:	080135c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, ip, sp}

0800dfa4 <network::display_emac_start()>:
 800dfa4:	4b01      	ldr	r3, [pc, #4]	; (800dfac <network::display_emac_start()+0x8>)
 800dfa6:	6818      	ldr	r0, [r3, #0]
 800dfa8:	f7ff bcc6 	b.w	800d938 <DisplayUdf::ShowEmacStart()>
 800dfac:	20008f4c 	andcs	r8, r0, ip, asr #30

0800dfb0 <network::display_ip()>:
 800dfb0:	4b01      	ldr	r3, [pc, #4]	; (800dfb8 <network::display_ip()+0x8>)
 800dfb2:	6818      	ldr	r0, [r3, #0]
 800dfb4:	f7ff bcd0 	b.w	800d958 <DisplayUdf::ShowIpAddress()>
 800dfb8:	20008f4c 	andcs	r8, r0, ip, asr #30

0800dfbc <network::display_emac_shutdown()>:
 800dfbc:	4b01      	ldr	r3, [pc, #4]	; (800dfc4 <network::display_emac_shutdown()+0x8>)
 800dfbe:	6818      	ldr	r0, [r3, #0]
 800dfc0:	f7ff bdca 	b.w	800db58 <DisplayUdf::ShowShutdown()>
 800dfc4:	20008f4c 	andcs	r8, r0, ip, asr #30

0800dfc8 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 800dfc8:	4b02      	ldr	r3, [pc, #8]	; (800dfd4 <network::display_dhcp_status(network::dhcp::ClientStatus)+0xc>)
 800dfca:	4601      	mov	r1, r0
 800dfcc:	6818      	ldr	r0, [r3, #0]
 800dfce:	f7ff bd8b 	b.w	800dae8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800dfd2:	bf00      	nop
 800dfd4:	20008f4c 	andcs	r8, r0, ip, asr #30

0800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>:
 800dfd8:	2300      	movs	r3, #0
 800dfda:	2020      	movs	r0, #32
 800dfdc:	b510      	push	{r4, lr}
 800dfde:	4a04      	ldr	r2, [pc, #16]	; (800dff0 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 800dfe0:	428b      	cmp	r3, r1
 800dfe2:	d100      	bne.n	800dfe6 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 800dfe4:	bd10      	pop	{r4, pc}
 800dfe6:	f852 4b04 	ldr.w	r4, [r2], #4
 800dfea:	3301      	adds	r3, #1
 800dfec:	4420      	add	r0, r4
 800dfee:	e7f7      	b.n	800dfe0 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 800dff0:	080135d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, ip, sp}

0800dff4 <ConfigStore::Init()>:
 800dff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dff8:	b085      	sub	sp, #20
 800dffa:	4607      	mov	r7, r0
 800dffc:	f000 face 	bl	800e59c <StoreDevice::GetSectorSize() const>
 800e000:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e004:	4605      	mov	r5, r0
 800e006:	d004      	beq.n	800e012 <ConfigStore::Init()+0x1e>
 800e008:	2500      	movs	r5, #0
 800e00a:	4628      	mov	r0, r5
 800e00c:	b005      	add	sp, #20
 800e00e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e012:	4638      	mov	r0, r7
 800e014:	f000 fac0 	bl	800e598 <StoreDevice::GetSize() const>
 800e018:	4b3a      	ldr	r3, [pc, #232]	; (800e104 <ConfigStore::Init()+0x110>)
 800e01a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e01e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e022:	6019      	str	r1, [r3, #0]
 800e024:	2e00      	cmp	r6, #0
 800e026:	d1ef      	bne.n	800e008 <ConfigStore::Init()+0x14>
 800e028:	4c37      	ldr	r4, [pc, #220]	; (800e108 <ConfigStore::Init()+0x114>)
 800e02a:	ab03      	add	r3, sp, #12
 800e02c:	462a      	mov	r2, r5
 800e02e:	9300      	str	r3, [sp, #0]
 800e030:	4638      	mov	r0, r7
 800e032:	4623      	mov	r3, r4
 800e034:	f000 fab4 	bl	800e5a0 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 800e038:	7823      	ldrb	r3, [r4, #0]
 800e03a:	2b41      	cmp	r3, #65	; 0x41
 800e03c:	bf1c      	itt	ne
 800e03e:	2341      	movne	r3, #65	; 0x41
 800e040:	7023      	strbne	r3, [r4, #0]
 800e042:	7863      	ldrb	r3, [r4, #1]
 800e044:	bf14      	ite	ne
 800e046:	4635      	movne	r5, r6
 800e048:	2501      	moveq	r5, #1
 800e04a:	2b76      	cmp	r3, #118	; 0x76
 800e04c:	bf1c      	itt	ne
 800e04e:	2376      	movne	r3, #118	; 0x76
 800e050:	7063      	strbne	r3, [r4, #1]
 800e052:	78a3      	ldrb	r3, [r4, #2]
 800e054:	bf18      	it	ne
 800e056:	2500      	movne	r5, #0
 800e058:	2b56      	cmp	r3, #86	; 0x56
 800e05a:	bf1c      	itt	ne
 800e05c:	2356      	movne	r3, #86	; 0x56
 800e05e:	70a3      	strbne	r3, [r4, #2]
 800e060:	78e3      	ldrb	r3, [r4, #3]
 800e062:	bf18      	it	ne
 800e064:	2500      	movne	r5, #0
 800e066:	2b10      	cmp	r3, #16
 800e068:	d01f      	beq.n	800e0aa <ConfigStore::Init()+0xb6>
 800e06a:	2310      	movs	r3, #16
 800e06c:	70e3      	strb	r3, [r4, #3]
 800e06e:	2201      	movs	r2, #1
 800e070:	2500      	movs	r5, #0
 800e072:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e076:	4b25      	ldr	r3, [pc, #148]	; (800e10c <ConfigStore::Init()+0x118>)
 800e078:	f8df 8094 	ldr.w	r8, [pc, #148]	; 800e110 <ConfigStore::Init()+0x11c>
 800e07c:	701a      	strb	r2, [r3, #0]
 800e07e:	4631      	mov	r1, r6
 800e080:	4638      	mov	r0, r7
 800e082:	f7ff ffa9 	bl	800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>
 800e086:	1823      	adds	r3, r4, r0
 800e088:	5425      	strb	r5, [r4, r0]
 800e08a:	705d      	strb	r5, [r3, #1]
 800e08c:	709d      	strb	r5, [r3, #2]
 800e08e:	70dd      	strb	r5, [r3, #3]
 800e090:	f858 3b04 	ldr.w	r3, [r8], #4
 800e094:	1d02      	adds	r2, r0, #4
 800e096:	4403      	add	r3, r0
 800e098:	429a      	cmp	r2, r3
 800e09a:	d32f      	bcc.n	800e0fc <ConfigStore::Init()+0x108>
 800e09c:	3601      	adds	r6, #1
 800e09e:	2e1c      	cmp	r6, #28
 800e0a0:	d1ed      	bne.n	800e07e <ConfigStore::Init()+0x8a>
 800e0a2:	2501      	movs	r5, #1
 800e0a4:	4b1b      	ldr	r3, [pc, #108]	; (800e114 <ConfigStore::Init()+0x120>)
 800e0a6:	601d      	str	r5, [r3, #0]
 800e0a8:	e7af      	b.n	800e00a <ConfigStore::Init()+0x16>
 800e0aa:	2d00      	cmp	r5, #0
 800e0ac:	d0df      	beq.n	800e06e <ConfigStore::Init()+0x7a>
 800e0ae:	f04f 0900 	mov.w	r9, #0
 800e0b2:	46c8      	mov	r8, r9
 800e0b4:	4631      	mov	r1, r6
 800e0b6:	4638      	mov	r0, r7
 800e0b8:	f7ff ff8e 	bl	800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>
 800e0bc:	5c23      	ldrb	r3, [r4, r0]
 800e0be:	2bff      	cmp	r3, #255	; 0xff
 800e0c0:	d112      	bne.n	800e0e8 <ConfigStore::Init()+0xf4>
 800e0c2:	1823      	adds	r3, r4, r0
 800e0c4:	785a      	ldrb	r2, [r3, #1]
 800e0c6:	2aff      	cmp	r2, #255	; 0xff
 800e0c8:	d10e      	bne.n	800e0e8 <ConfigStore::Init()+0xf4>
 800e0ca:	789a      	ldrb	r2, [r3, #2]
 800e0cc:	2aff      	cmp	r2, #255	; 0xff
 800e0ce:	d10b      	bne.n	800e0e8 <ConfigStore::Init()+0xf4>
 800e0d0:	78da      	ldrb	r2, [r3, #3]
 800e0d2:	2aff      	cmp	r2, #255	; 0xff
 800e0d4:	d108      	bne.n	800e0e8 <ConfigStore::Init()+0xf4>
 800e0d6:	46a9      	mov	r9, r5
 800e0d8:	f804 8000 	strb.w	r8, [r4, r0]
 800e0dc:	f883 8001 	strb.w	r8, [r3, #1]
 800e0e0:	f883 8002 	strb.w	r8, [r3, #2]
 800e0e4:	f883 8003 	strb.w	r8, [r3, #3]
 800e0e8:	3601      	adds	r6, #1
 800e0ea:	2e1c      	cmp	r6, #28
 800e0ec:	d1e2      	bne.n	800e0b4 <ConfigStore::Init()+0xc0>
 800e0ee:	f1b9 0f00 	cmp.w	r9, #0
 800e0f2:	d08a      	beq.n	800e00a <ConfigStore::Init()+0x16>
 800e0f4:	2201      	movs	r2, #1
 800e0f6:	4b07      	ldr	r3, [pc, #28]	; (800e114 <ConfigStore::Init()+0x120>)
 800e0f8:	601a      	str	r2, [r3, #0]
 800e0fa:	e786      	b.n	800e00a <ConfigStore::Init()+0x16>
 800e0fc:	f804 9002 	strb.w	r9, [r4, r2]
 800e100:	3201      	adds	r2, #1
 800e102:	e7c9      	b.n	800e098 <ConfigStore::Init()+0xa4>
 800e104:	20009f54 	andcs	r9, r0, r4, asr pc
 800e108:	20008f54 	andcs	r8, r0, r4, asr pc
 800e10c:	20009f68 	andcs	r9, r0, r8, ror #30
 800e110:	080135d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, ip, sp}
 800e114:	20009f60 	andcs	r9, r0, r0, ror #30

0800e118 <ConfigStore::ConfigStore()>:
 800e118:	b538      	push	{r3, r4, r5, lr}
 800e11a:	4604      	mov	r4, r0
 800e11c:	f000 fa34 	bl	800e588 <StoreDevice::StoreDevice()>
 800e120:	4b0b      	ldr	r3, [pc, #44]	; (800e150 <ConfigStore::ConfigStore()+0x38>)
 800e122:	4d0c      	ldr	r5, [pc, #48]	; (800e154 <ConfigStore::ConfigStore()+0x3c>)
 800e124:	601c      	str	r4, [r3, #0]
 800e126:	7863      	ldrb	r3, [r4, #1]
 800e128:	b11b      	cbz	r3, 800e132 <ConfigStore::ConfigStore()+0x1a>
 800e12a:	4620      	mov	r0, r4
 800e12c:	f7ff ff62 	bl	800dff4 <ConfigStore::Init()>
 800e130:	7028      	strb	r0, [r5, #0]
 800e132:	782b      	ldrb	r3, [r5, #0]
 800e134:	b153      	cbz	r3, 800e14c <ConfigStore::ConfigStore()+0x34>
 800e136:	2320      	movs	r3, #32
 800e138:	2200      	movs	r2, #0
 800e13a:	4907      	ldr	r1, [pc, #28]	; (800e158 <ConfigStore::ConfigStore()+0x40>)
 800e13c:	f851 0b04 	ldr.w	r0, [r1], #4
 800e140:	3201      	adds	r2, #1
 800e142:	2a1c      	cmp	r2, #28
 800e144:	4403      	add	r3, r0
 800e146:	d1f9      	bne.n	800e13c <ConfigStore::ConfigStore()+0x24>
 800e148:	4a04      	ldr	r2, [pc, #16]	; (800e15c <ConfigStore::ConfigStore()+0x44>)
 800e14a:	6013      	str	r3, [r2, #0]
 800e14c:	4620      	mov	r0, r4
 800e14e:	bd38      	pop	{r3, r4, r5, pc}
 800e150:	20009f64 	andcs	r9, r0, r4, ror #30
 800e154:	20009f58 	andcs	r9, r0, r8, asr pc
 800e158:	080135d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, ip, sp}
 800e15c:	20009f5c 	andcs	r9, r0, ip, asr pc

0800e160 <ConfigStore::ResetSetList(configstore::Store)>:
 800e160:	b508      	push	{r3, lr}
 800e162:	f7ff ff39 	bl	800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>
 800e166:	2300      	movs	r3, #0
 800e168:	4904      	ldr	r1, [pc, #16]	; (800e17c <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 800e16a:	1842      	adds	r2, r0, r1
 800e16c:	540b      	strb	r3, [r1, r0]
 800e16e:	7053      	strb	r3, [r2, #1]
 800e170:	7093      	strb	r3, [r2, #2]
 800e172:	70d3      	strb	r3, [r2, #3]
 800e174:	2201      	movs	r2, #1
 800e176:	4b02      	ldr	r3, [pc, #8]	; (800e180 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 800e178:	601a      	str	r2, [r3, #0]
 800e17a:	bd08      	pop	{r3, pc}
 800e17c:	20008f54 	andcs	r8, r0, r4, asr pc
 800e180:	20009f60 	andcs	r9, r0, r0, ror #30

0800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e188:	461c      	mov	r4, r3
 800e18a:	4b19      	ldr	r3, [pc, #100]	; (800e1f0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e18c:	4616      	mov	r6, r2
 800e18e:	781f      	ldrb	r7, [r3, #0]
 800e190:	9d07      	ldr	r5, [sp, #28]
 800e192:	b307      	cbz	r7, 800e1d6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e194:	f7ff ff20 	bl	800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>
 800e198:	f04f 0c00 	mov.w	ip, #0
 800e19c:	4a15      	ldr	r2, [pc, #84]	; (800e1f4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e19e:	1831      	adds	r1, r6, r0
 800e1a0:	1e63      	subs	r3, r4, #1
 800e1a2:	9c06      	ldr	r4, [sp, #24]
 800e1a4:	4411      	add	r1, r2
 800e1a6:	440c      	add	r4, r1
 800e1a8:	42a1      	cmp	r1, r4
 800e1aa:	d116      	bne.n	800e1da <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e1ac:	f1bc 0f00 	cmp.w	ip, #0
 800e1b0:	d011      	beq.n	800e1d6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e1b2:	4b11      	ldr	r3, [pc, #68]	; (800e1f8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e1b4:	6819      	ldr	r1, [r3, #0]
 800e1b6:	b109      	cbz	r1, 800e1bc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e1b8:	2906      	cmp	r1, #6
 800e1ba:	d101      	bne.n	800e1c0 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e1bc:	2101      	movs	r1, #1
 800e1be:	6019      	str	r1, [r3, #0]
 800e1c0:	4b0e      	ldr	r3, [pc, #56]	; (800e1fc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e1c2:	6819      	ldr	r1, [r3, #0]
 800e1c4:	4b0e      	ldr	r3, [pc, #56]	; (800e200 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e1c6:	6019      	str	r1, [r3, #0]
 800e1c8:	b12e      	cbz	r6, 800e1d6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e1ca:	b125      	cbz	r5, 800e1d6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e1cc:	9b08      	ldr	r3, [sp, #32]
 800e1ce:	4418      	add	r0, r3
 800e1d0:	5813      	ldr	r3, [r2, r0]
 800e1d2:	432b      	orrs	r3, r5
 800e1d4:	5013      	str	r3, [r2, r0]
 800e1d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1da:	f891 8000 	ldrb.w	r8, [r1]
 800e1de:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e1e2:	3101      	adds	r1, #1
 800e1e4:	45f0      	cmp	r8, lr
 800e1e6:	bf1c      	itt	ne
 800e1e8:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e1ec:	46bc      	movne	ip, r7
 800e1ee:	e7db      	b.n	800e1a8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e1f0:	20009f58 	andcs	r9, r0, r8, asr pc
 800e1f4:	20008f54 	andcs	r8, r0, r4, asr pc
 800e1f8:	20009f60 	andcs	r9, r0, r0, ror #30
 800e1fc:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800e200:	20008f50 	andcs	r8, r0, r0, asr pc

0800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 800e204:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e208:	461d      	mov	r5, r3
 800e20a:	4b15      	ldr	r3, [pc, #84]	; (800e260 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800e20c:	b085      	sub	sp, #20
 800e20e:	781b      	ldrb	r3, [r3, #0]
 800e210:	4607      	mov	r7, r0
 800e212:	4614      	mov	r4, r2
 800e214:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e218:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e21c:	b193      	cbz	r3, 800e244 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e21e:	f7ff fedb 	bl	800dfd8 <ConfigStore::GetStoreOffset(configstore::Store)>
 800e222:	4a10      	ldr	r2, [pc, #64]	; (800e264 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800e224:	eb08 0600 	add.w	r6, r8, r0
 800e228:	18b3      	adds	r3, r6, r2
 800e22a:	f1b9 0f00 	cmp.w	r9, #0
 800e22e:	d013      	beq.n	800e258 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e230:	5990      	ldr	r0, [r2, r6]
 800e232:	b988      	cbnz	r0, 800e258 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e234:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e238:	4623      	mov	r3, r4
 800e23a:	4642      	mov	r2, r8
 800e23c:	4638      	mov	r0, r7
 800e23e:	9500      	str	r5, [sp, #0]
 800e240:	f7ff ffa0 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e244:	b005      	add	sp, #20
 800e246:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e24a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e24e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e252:	429d      	cmp	r5, r3
 800e254:	d1f9      	bne.n	800e24a <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800e256:	e7f5      	b.n	800e244 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e258:	3c01      	subs	r4, #1
 800e25a:	441d      	add	r5, r3
 800e25c:	e7f9      	b.n	800e252 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800e25e:	bf00      	nop
 800e260:	20009f58 	andcs	r9, r0, r8, asr pc
 800e264:	20008f54 	andcs	r8, r0, r4, asr pc

0800e268 <ConfigStore::Flash()>:
 800e268:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e26a:	4c24      	ldr	r4, [pc, #144]	; (800e2fc <ConfigStore::Flash()+0x94>)
 800e26c:	6823      	ldr	r3, [r4, #0]
 800e26e:	2b00      	cmp	r3, #0
 800e270:	d041      	beq.n	800e2f6 <ConfigStore::Flash()+0x8e>
 800e272:	3b01      	subs	r3, #1
 800e274:	2b05      	cmp	r3, #5
 800e276:	d82f      	bhi.n	800e2d8 <ConfigStore::Flash()+0x70>
 800e278:	e8df f003 	tbb	[pc, r3]
 800e27c:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 800e280:	4b1f2e23 	blmi	87d9b14 <__exidx_end+0x7c5ef8>
 800e284:	681a      	ldr	r2, [r3, #0]
 800e286:	4b1f      	ldr	r3, [pc, #124]	; (800e304 <ConfigStore::Flash()+0x9c>)
 800e288:	601a      	str	r2, [r3, #0]
 800e28a:	2302      	movs	r3, #2
 800e28c:	6023      	str	r3, [r4, #0]
 800e28e:	2001      	movs	r0, #1
 800e290:	e02f      	b.n	800e2f2 <ConfigStore::Flash()+0x8a>
 800e292:	4b1b      	ldr	r3, [pc, #108]	; (800e300 <ConfigStore::Flash()+0x98>)
 800e294:	4a1b      	ldr	r2, [pc, #108]	; (800e304 <ConfigStore::Flash()+0x9c>)
 800e296:	681b      	ldr	r3, [r3, #0]
 800e298:	6812      	ldr	r2, [r2, #0]
 800e29a:	1a9b      	subs	r3, r3, r2
 800e29c:	2b63      	cmp	r3, #99	; 0x63
 800e29e:	d9f6      	bls.n	800e28e <ConfigStore::Flash()+0x26>
 800e2a0:	2303      	movs	r3, #3
 800e2a2:	e7f3      	b.n	800e28c <ConfigStore::Flash()+0x24>
 800e2a4:	4918      	ldr	r1, [pc, #96]	; (800e308 <ConfigStore::Flash()+0xa0>)
 800e2a6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e2aa:	6809      	ldr	r1, [r1, #0]
 800e2ac:	ab03      	add	r3, sp, #12
 800e2ae:	f000 f981 	bl	800e5b4 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 800e2b2:	2800      	cmp	r0, #0
 800e2b4:	d0eb      	beq.n	800e28e <ConfigStore::Flash()+0x26>
 800e2b6:	4b12      	ldr	r3, [pc, #72]	; (800e300 <ConfigStore::Flash()+0x98>)
 800e2b8:	681a      	ldr	r2, [r3, #0]
 800e2ba:	4b12      	ldr	r3, [pc, #72]	; (800e304 <ConfigStore::Flash()+0x9c>)
 800e2bc:	601a      	str	r2, [r3, #0]
 800e2be:	2305      	movs	r3, #5
 800e2c0:	e7e4      	b.n	800e28c <ConfigStore::Flash()+0x24>
 800e2c2:	4b0f      	ldr	r3, [pc, #60]	; (800e300 <ConfigStore::Flash()+0x98>)
 800e2c4:	4a0f      	ldr	r2, [pc, #60]	; (800e304 <ConfigStore::Flash()+0x9c>)
 800e2c6:	681b      	ldr	r3, [r3, #0]
 800e2c8:	6812      	ldr	r2, [r2, #0]
 800e2ca:	1a9b      	subs	r3, r3, r2
 800e2cc:	2b63      	cmp	r3, #99	; 0x63
 800e2ce:	d9de      	bls.n	800e28e <ConfigStore::Flash()+0x26>
 800e2d0:	2304      	movs	r3, #4
 800e2d2:	e7db      	b.n	800e28c <ConfigStore::Flash()+0x24>
 800e2d4:	2306      	movs	r3, #6
 800e2d6:	e7d9      	b.n	800e28c <ConfigStore::Flash()+0x24>
 800e2d8:	ab03      	add	r3, sp, #12
 800e2da:	4a0c      	ldr	r2, [pc, #48]	; (800e30c <ConfigStore::Flash()+0xa4>)
 800e2dc:	490a      	ldr	r1, [pc, #40]	; (800e308 <ConfigStore::Flash()+0xa0>)
 800e2de:	9300      	str	r3, [sp, #0]
 800e2e0:	6812      	ldr	r2, [r2, #0]
 800e2e2:	4b0b      	ldr	r3, [pc, #44]	; (800e310 <ConfigStore::Flash()+0xa8>)
 800e2e4:	6809      	ldr	r1, [r1, #0]
 800e2e6:	f000 f96e 	bl	800e5c6 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 800e2ea:	2800      	cmp	r0, #0
 800e2ec:	d0cf      	beq.n	800e28e <ConfigStore::Flash()+0x26>
 800e2ee:	2000      	movs	r0, #0
 800e2f0:	6020      	str	r0, [r4, #0]
 800e2f2:	b004      	add	sp, #16
 800e2f4:	bd10      	pop	{r4, pc}
 800e2f6:	4618      	mov	r0, r3
 800e2f8:	e7fb      	b.n	800e2f2 <ConfigStore::Flash()+0x8a>
 800e2fa:	bf00      	nop
 800e2fc:	20009f60 	andcs	r9, r0, r0, ror #30
 800e300:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800e304:	20008f50 	andcs	r8, r0, r0, asr pc
 800e308:	20009f54 	andcs	r9, r0, r4, asr pc
 800e30c:	20009f5c 	andcs	r9, r0, ip, asr pc
 800e310:	20008f54 	andcs	r8, r0, r4, asr pc

0800e314 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e314:	4770      	bx	lr
	...

0800e318 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e318:	b507      	push	{r0, r1, r2, lr}
 800e31a:	2300      	movs	r3, #0
 800e31c:	460a      	mov	r2, r1
 800e31e:	2101      	movs	r1, #1
 800e320:	e9cd 3100 	strd	r3, r1, [sp]
 800e324:	4804      	ldr	r0, [pc, #16]	; (800e338 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800e326:	2322      	movs	r3, #34	; 0x22
 800e328:	210f      	movs	r1, #15
 800e32a:	6800      	ldr	r0, [r0, #0]
 800e32c:	f7ff ff6a 	bl	800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800e330:	b003      	add	sp, #12
 800e332:	f85d fb04 	ldr.w	pc, [sp], #4
 800e336:	bf00      	nop
 800e338:	20009f64 	andcs	r9, r0, r4, ror #30

0800e33c <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e33c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e33e:	2200      	movs	r2, #0
 800e340:	460b      	mov	r3, r1
 800e342:	2122      	movs	r1, #34	; 0x22
 800e344:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e348:	4804      	ldr	r0, [pc, #16]	; (800e35c <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e34a:	9100      	str	r1, [sp, #0]
 800e34c:	6800      	ldr	r0, [r0, #0]
 800e34e:	210f      	movs	r1, #15
 800e350:	f7ff ff18 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e354:	b005      	add	sp, #20
 800e356:	f85d fb04 	ldr.w	pc, [sp], #4
 800e35a:	bf00      	nop
 800e35c:	20009f64 	andcs	r9, r0, r4, ror #30

0800e360 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e360:	b510      	push	{r4, lr}
 800e362:	4604      	mov	r4, r0
 800e364:	f001 f960 	bl	800f628 <operator delete(void*)>
 800e368:	4620      	mov	r0, r4
 800e36a:	bd10      	pop	{r4, pc}

0800e36c <StoreDisplayUdf::StoreDisplayUdf()>:
 800e36c:	4a02      	ldr	r2, [pc, #8]	; (800e378 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e36e:	6002      	str	r2, [r0, #0]
 800e370:	4a02      	ldr	r2, [pc, #8]	; (800e37c <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e372:	6010      	str	r0, [r2, #0]
 800e374:	4770      	bx	lr
 800e376:	bf00      	nop
 800e378:	0801364c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, sp}
 800e37c:	20009f6c 	andcs	r9, r0, ip, ror #30

0800e380 <StoreDmxSend::~StoreDmxSend()>:
 800e380:	4770      	bx	lr
	...

0800e384 <StoreDmxSend::Copy(TDmxParams*)>:
 800e384:	b507      	push	{r0, r1, r2, lr}
 800e386:	2300      	movs	r3, #0
 800e388:	460a      	mov	r2, r1
 800e38a:	2101      	movs	r1, #1
 800e38c:	e9cd 3100 	strd	r3, r1, [sp]
 800e390:	4804      	ldr	r0, [pc, #16]	; (800e3a4 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 800e392:	230a      	movs	r3, #10
 800e394:	2102      	movs	r1, #2
 800e396:	6800      	ldr	r0, [r0, #0]
 800e398:	f7ff ff34 	bl	800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800e39c:	b003      	add	sp, #12
 800e39e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3a2:	bf00      	nop
 800e3a4:	20009f64 	andcs	r9, r0, r4, ror #30

0800e3a8 <StoreDmxSend::Update(TDmxParams const*)>:
 800e3a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e3aa:	2200      	movs	r2, #0
 800e3ac:	460b      	mov	r3, r1
 800e3ae:	210a      	movs	r1, #10
 800e3b0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e3b4:	4804      	ldr	r0, [pc, #16]	; (800e3c8 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800e3b6:	9100      	str	r1, [sp, #0]
 800e3b8:	6800      	ldr	r0, [r0, #0]
 800e3ba:	2102      	movs	r1, #2
 800e3bc:	f7ff fee2 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e3c0:	b005      	add	sp, #20
 800e3c2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3c6:	bf00      	nop
 800e3c8:	20009f64 	andcs	r9, r0, r4, ror #30

0800e3cc <StoreDmxSend::~StoreDmxSend()>:
 800e3cc:	b510      	push	{r4, lr}
 800e3ce:	4604      	mov	r4, r0
 800e3d0:	f001 f92a 	bl	800f628 <operator delete(void*)>
 800e3d4:	4620      	mov	r0, r4
 800e3d6:	bd10      	pop	{r4, pc}

0800e3d8 <StoreDmxSend::StoreDmxSend()>:
 800e3d8:	4a02      	ldr	r2, [pc, #8]	; (800e3e4 <StoreDmxSend::StoreDmxSend()+0xc>)
 800e3da:	6002      	str	r2, [r0, #0]
 800e3dc:	4a02      	ldr	r2, [pc, #8]	; (800e3e8 <StoreDmxSend::StoreDmxSend()+0x10>)
 800e3de:	6010      	str	r0, [r2, #0]
 800e3e0:	4770      	bx	lr
 800e3e2:	bf00      	nop
 800e3e4:	08013664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip, sp}
 800e3e8:	20009f70 	andcs	r9, r0, r0, ror pc

0800e3ec <StoreNetwork::~StoreNetwork()>:
 800e3ec:	4770      	bx	lr

0800e3ee <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e3ee:	3804      	subs	r0, #4
 800e3f0:	4770      	bx	lr
	...

0800e3f4 <StoreNetwork::Update(networkparams::Params const*)>:
 800e3f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e3f6:	2200      	movs	r2, #0
 800e3f8:	460b      	mov	r3, r1
 800e3fa:	215e      	movs	r1, #94	; 0x5e
 800e3fc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e400:	4804      	ldr	r0, [pc, #16]	; (800e414 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800e402:	9100      	str	r1, [sp, #0]
 800e404:	6800      	ldr	r0, [r0, #0]
 800e406:	4611      	mov	r1, r2
 800e408:	f7ff febc 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e40c:	b005      	add	sp, #20
 800e40e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e412:	bf00      	nop
 800e414:	20009f64 	andcs	r9, r0, r4, ror #30

0800e418 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e418:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e41a:	2308      	movs	r3, #8
 800e41c:	9105      	str	r1, [sp, #20]
 800e41e:	2100      	movs	r1, #0
 800e420:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e424:	2304      	movs	r3, #4
 800e426:	4805      	ldr	r0, [pc, #20]	; (800e43c <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e428:	9300      	str	r3, [sp, #0]
 800e42a:	220c      	movs	r2, #12
 800e42c:	6800      	ldr	r0, [r0, #0]
 800e42e:	ab05      	add	r3, sp, #20
 800e430:	f7ff fea8 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e434:	b007      	add	sp, #28
 800e436:	f85d fb04 	ldr.w	pc, [sp], #4
 800e43a:	bf00      	nop
 800e43c:	20009f64 	andcs	r9, r0, r4, ror #30

0800e440 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e440:	f1a0 0004 	sub.w	r0, r0, #4
 800e444:	e7e8      	b.n	800e418 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e446:	bf00      	nop

0800e448 <StoreNetwork::SaveNetMask(unsigned int)>:
 800e448:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e44a:	2304      	movs	r3, #4
 800e44c:	9105      	str	r1, [sp, #20]
 800e44e:	2100      	movs	r1, #0
 800e450:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e454:	4804      	ldr	r0, [pc, #16]	; (800e468 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e456:	9300      	str	r3, [sp, #0]
 800e458:	2208      	movs	r2, #8
 800e45a:	6800      	ldr	r0, [r0, #0]
 800e45c:	ab05      	add	r3, sp, #20
 800e45e:	f7ff fe91 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e462:	b007      	add	sp, #28
 800e464:	f85d fb04 	ldr.w	pc, [sp], #4
 800e468:	20009f64 	andcs	r9, r0, r4, ror #30

0800e46c <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e46c:	f1a0 0004 	sub.w	r0, r0, #4
 800e470:	e7ea      	b.n	800e448 <StoreNetwork::SaveNetMask(unsigned int)>
 800e472:	bf00      	nop

0800e474 <StoreNetwork::SaveIp(unsigned int)>:
 800e474:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e476:	2302      	movs	r3, #2
 800e478:	9105      	str	r1, [sp, #20]
 800e47a:	2100      	movs	r1, #0
 800e47c:	2204      	movs	r2, #4
 800e47e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e482:	4804      	ldr	r0, [pc, #16]	; (800e494 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e484:	9200      	str	r2, [sp, #0]
 800e486:	6800      	ldr	r0, [r0, #0]
 800e488:	ab05      	add	r3, sp, #20
 800e48a:	f7ff fe7b 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e48e:	b007      	add	sp, #28
 800e490:	f85d fb04 	ldr.w	pc, [sp], #4
 800e494:	20009f64 	andcs	r9, r0, r4, ror #30

0800e498 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e498:	f1a0 0004 	sub.w	r0, r0, #4
 800e49c:	e7ea      	b.n	800e474 <StoreNetwork::SaveIp(unsigned int)>
 800e49e:	bf00      	nop

0800e4a0 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e4a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e4a2:	460b      	mov	r3, r1
 800e4a4:	2020      	movs	r0, #32
 800e4a6:	2100      	movs	r1, #0
 800e4a8:	2a40      	cmp	r2, #64	; 0x40
 800e4aa:	bf28      	it	cs
 800e4ac:	2240      	movcs	r2, #64	; 0x40
 800e4ae:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e4b2:	4804      	ldr	r0, [pc, #16]	; (800e4c4 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e4b4:	9200      	str	r2, [sp, #0]
 800e4b6:	6800      	ldr	r0, [r0, #0]
 800e4b8:	2215      	movs	r2, #21
 800e4ba:	f7ff fe63 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e4be:	b005      	add	sp, #20
 800e4c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4c4:	20009f64 	andcs	r9, r0, r4, ror #30

0800e4c8 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e4c8:	f1a0 0004 	sub.w	r0, r0, #4
 800e4cc:	e7e8      	b.n	800e4a0 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e4ce:	bf00      	nop

0800e4d0 <StoreNetwork::~StoreNetwork()>:
 800e4d0:	b510      	push	{r4, lr}
 800e4d2:	4604      	mov	r4, r0
 800e4d4:	f001 f8a8 	bl	800f628 <operator delete(void*)>
 800e4d8:	4620      	mov	r0, r4
 800e4da:	bd10      	pop	{r4, pc}

0800e4dc <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e4dc:	f1a0 0004 	sub.w	r0, r0, #4
 800e4e0:	e7f6      	b.n	800e4d0 <StoreNetwork::~StoreNetwork()>
	...

0800e4e4 <StoreNetwork::Copy(networkparams::Params*)>:
 800e4e4:	b507      	push	{r0, r1, r2, lr}
 800e4e6:	2301      	movs	r3, #1
 800e4e8:	460a      	mov	r2, r1
 800e4ea:	2100      	movs	r1, #0
 800e4ec:	e9cd 1300 	strd	r1, r3, [sp]
 800e4f0:	4803      	ldr	r0, [pc, #12]	; (800e500 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800e4f2:	235e      	movs	r3, #94	; 0x5e
 800e4f4:	6800      	ldr	r0, [r0, #0]
 800e4f6:	f7ff fe85 	bl	800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800e4fa:	b003      	add	sp, #12
 800e4fc:	f85d fb04 	ldr.w	pc, [sp], #4
 800e500:	20009f64 	andcs	r9, r0, r4, ror #30

0800e504 <StoreNetwork::StoreNetwork()>:
 800e504:	4a03      	ldr	r2, [pc, #12]	; (800e514 <StoreNetwork::StoreNetwork()+0x10>)
 800e506:	6002      	str	r2, [r0, #0]
 800e508:	322c      	adds	r2, #44	; 0x2c
 800e50a:	6042      	str	r2, [r0, #4]
 800e50c:	4a02      	ldr	r2, [pc, #8]	; (800e518 <StoreNetwork::StoreNetwork()+0x14>)
 800e50e:	6010      	str	r0, [r2, #0]
 800e510:	4770      	bx	lr
 800e512:	bf00      	nop
 800e514:	0801367c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, ip, sp}
 800e518:	20009f74 	andcs	r9, r0, r4, ror pc

0800e51c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e51c:	4770      	bx	lr
	...

0800e520 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800e520:	b507      	push	{r0, r1, r2, lr}
 800e522:	2300      	movs	r3, #0
 800e524:	460a      	mov	r2, r1
 800e526:	2101      	movs	r1, #1
 800e528:	e9cd 3100 	strd	r3, r1, [sp]
 800e52c:	4804      	ldr	r0, [pc, #16]	; (800e540 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800e52e:	2320      	movs	r3, #32
 800e530:	210c      	movs	r1, #12
 800e532:	6800      	ldr	r0, [r0, #0]
 800e534:	f7ff fe66 	bl	800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800e538:	b003      	add	sp, #12
 800e53a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e53e:	bf00      	nop
 800e540:	20009f64 	andcs	r9, r0, r4, ror #30

0800e544 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800e544:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e546:	2200      	movs	r2, #0
 800e548:	460b      	mov	r3, r1
 800e54a:	2120      	movs	r1, #32
 800e54c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e550:	4804      	ldr	r0, [pc, #16]	; (800e564 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800e552:	9100      	str	r1, [sp, #0]
 800e554:	6800      	ldr	r0, [r0, #0]
 800e556:	210c      	movs	r1, #12
 800e558:	f7ff fe14 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e55c:	b005      	add	sp, #20
 800e55e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e562:	bf00      	nop
 800e564:	20009f64 	andcs	r9, r0, r4, ror #30

0800e568 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e568:	b510      	push	{r4, lr}
 800e56a:	4604      	mov	r4, r0
 800e56c:	f001 f85c 	bl	800f628 <operator delete(void*)>
 800e570:	4620      	mov	r0, r4
 800e572:	bd10      	pop	{r4, pc}

0800e574 <StoreRemoteConfig::StoreRemoteConfig()>:
 800e574:	4a02      	ldr	r2, [pc, #8]	; (800e580 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800e576:	6002      	str	r2, [r0, #0]
 800e578:	4a02      	ldr	r2, [pc, #8]	; (800e584 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800e57a:	6010      	str	r0, [r2, #0]
 800e57c:	4770      	bx	lr
 800e57e:	bf00      	nop
 800e580:	080136cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp}
 800e584:	20009f78 	andcs	r9, r0, r8, ror pc

0800e588 <StoreDevice::StoreDevice()>:
 800e588:	b510      	push	{r4, lr}
 800e58a:	4604      	mov	r4, r0
 800e58c:	f000 f85a 	bl	800e644 <FlashCode::FlashCode()>
 800e590:	7823      	ldrb	r3, [r4, #0]
 800e592:	4620      	mov	r0, r4
 800e594:	7063      	strb	r3, [r4, #1]
 800e596:	bd10      	pop	{r4, pc}

0800e598 <StoreDevice::GetSize() const>:
 800e598:	f000 b86e 	b.w	800e678 <FlashCode::GetSize() const>

0800e59c <StoreDevice::GetSectorSize() const>:
 800e59c:	f000 b874 	b.w	800e688 <FlashCode::GetSectorSize() const>

0800e5a0 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 800e5a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e5a2:	ac03      	add	r4, sp, #12
 800e5a4:	9400      	str	r4, [sp, #0]
 800e5a6:	f000 f872 	bl	800e68e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 800e5aa:	9b06      	ldr	r3, [sp, #24]
 800e5ac:	9a03      	ldr	r2, [sp, #12]
 800e5ae:	601a      	str	r2, [r3, #0]
 800e5b0:	b004      	add	sp, #16
 800e5b2:	bd10      	pop	{r4, pc}

0800e5b4 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 800e5b4:	b513      	push	{r0, r1, r4, lr}
 800e5b6:	461c      	mov	r4, r3
 800e5b8:	ab01      	add	r3, sp, #4
 800e5ba:	f000 f877 	bl	800e6ac <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 800e5be:	9b01      	ldr	r3, [sp, #4]
 800e5c0:	6023      	str	r3, [r4, #0]
 800e5c2:	b002      	add	sp, #8
 800e5c4:	bd10      	pop	{r4, pc}

0800e5c6 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 800e5c6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e5c8:	ac03      	add	r4, sp, #12
 800e5ca:	9400      	str	r4, [sp, #0]
 800e5cc:	f000 f90e 	bl	800e7ec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 800e5d0:	9b06      	ldr	r3, [sp, #24]
 800e5d2:	9a03      	ldr	r2, [sp, #12]
 800e5d4:	601a      	str	r2, [r3, #0]
 800e5d6:	b004      	add	sp, #16
 800e5d8:	bd10      	pop	{r4, pc}

0800e5da <StoreE131::~StoreE131()>:
 800e5da:	4770      	bx	lr

0800e5dc <StoreE131::Copy(e131params::Params*)>:
 800e5dc:	b507      	push	{r0, r1, r2, lr}
 800e5de:	2300      	movs	r3, #0
 800e5e0:	460a      	mov	r2, r1
 800e5e2:	2101      	movs	r1, #1
 800e5e4:	e9cd 3100 	strd	r3, r1, [sp]
 800e5e8:	4804      	ldr	r0, [pc, #16]	; (800e5fc <StoreE131::Copy(e131params::Params*)+0x20>)
 800e5ea:	2313      	movs	r3, #19
 800e5ec:	2104      	movs	r1, #4
 800e5ee:	6800      	ldr	r0, [r0, #0]
 800e5f0:	f7ff fe08 	bl	800e204 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800e5f4:	b003      	add	sp, #12
 800e5f6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e5fa:	bf00      	nop
 800e5fc:	20009f64 	andcs	r9, r0, r4, ror #30

0800e600 <StoreE131::Update(e131params::Params const*)>:
 800e600:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e602:	2200      	movs	r2, #0
 800e604:	460b      	mov	r3, r1
 800e606:	2113      	movs	r1, #19
 800e608:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e60c:	4804      	ldr	r0, [pc, #16]	; (800e620 <StoreE131::Update(e131params::Params const*)+0x20>)
 800e60e:	9100      	str	r1, [sp, #0]
 800e610:	6800      	ldr	r0, [r0, #0]
 800e612:	2104      	movs	r1, #4
 800e614:	f7ff fdb6 	bl	800e184 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e618:	b005      	add	sp, #20
 800e61a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e61e:	bf00      	nop
 800e620:	20009f64 	andcs	r9, r0, r4, ror #30

0800e624 <StoreE131::~StoreE131()>:
 800e624:	b510      	push	{r4, lr}
 800e626:	4604      	mov	r4, r0
 800e628:	f000 fffe 	bl	800f628 <operator delete(void*)>
 800e62c:	4620      	mov	r0, r4
 800e62e:	bd10      	pop	{r4, pc}

0800e630 <StoreE131::StoreE131()>:
 800e630:	4a02      	ldr	r2, [pc, #8]	; (800e63c <StoreE131::StoreE131()+0xc>)
 800e632:	6002      	str	r2, [r0, #0]
 800e634:	4a02      	ldr	r2, [pc, #8]	; (800e640 <StoreE131::StoreE131()+0x10>)
 800e636:	6010      	str	r0, [r2, #0]
 800e638:	4770      	bx	lr
 800e63a:	bf00      	nop
 800e63c:	080136e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, ip, sp}
 800e640:	20009f7c 	andcs	r9, r0, ip, ror pc

0800e644 <FlashCode::FlashCode()>:
 800e644:	b538      	push	{r3, r4, r5, lr}
 800e646:	4b09      	ldr	r3, [pc, #36]	; (800e66c <FlashCode::FlashCode()+0x28>)
 800e648:	4604      	mov	r4, r0
 800e64a:	6018      	str	r0, [r3, #0]
 800e64c:	2301      	movs	r3, #1
 800e64e:	7003      	strb	r3, [r0, #0]
 800e650:	f000 f812 	bl	800e678 <FlashCode::GetSize() const>
 800e654:	4605      	mov	r5, r0
 800e656:	4620      	mov	r0, r4
 800e658:	f000 f80e 	bl	800e678 <FlashCode::GetSize() const>
 800e65c:	462a      	mov	r2, r5
 800e65e:	0a83      	lsrs	r3, r0, #10
 800e660:	4903      	ldr	r1, [pc, #12]	; (800e670 <FlashCode::FlashCode()+0x2c>)
 800e662:	4804      	ldr	r0, [pc, #16]	; (800e674 <FlashCode::FlashCode()+0x30>)
 800e664:	f001 faac 	bl	800fbc0 <printf>
 800e668:	4620      	mov	r0, r4
 800e66a:	bd38      	pop	{r3, r4, r5, pc}
 800e66c:	20009f80 	andcs	r9, r0, r0, lsl #31
 800e670:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 800e674:	080136f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, ip, sp}

0800e678 <FlashCode::GetSize() const>:
 800e678:	4b02      	ldr	r3, [pc, #8]	; (800e684 <FlashCode::GetSize() const+0xc>)
 800e67a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800e67e:	0280      	lsls	r0, r0, #10
 800e680:	4770      	bx	lr
 800e682:	bf00      	nop
 800e684:	1ffff700 	svcne	0x00fff700

0800e688 <FlashCode::GetSectorSize() const>:
 800e688:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800e68c:	4770      	bx	lr

0800e68e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 800e68e:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e692:	441a      	add	r2, r3
 800e694:	4293      	cmp	r3, r2
 800e696:	d104      	bne.n	800e6a2 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 800e698:	2200      	movs	r2, #0
 800e69a:	9b00      	ldr	r3, [sp, #0]
 800e69c:	2001      	movs	r0, #1
 800e69e:	601a      	str	r2, [r3, #0]
 800e6a0:	4770      	bx	lr
 800e6a2:	f851 0b04 	ldr.w	r0, [r1], #4
 800e6a6:	f843 0b04 	str.w	r0, [r3], #4
 800e6aa:	e7f3      	b.n	800e694 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

0800e6ac <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 800e6ac:	2000      	movs	r0, #0
 800e6ae:	b538      	push	{r3, r4, r5, lr}
 800e6b0:	4c47      	ldr	r4, [pc, #284]	; (800e7d0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 800e6b2:	6018      	str	r0, [r3, #0]
 800e6b4:	6823      	ldr	r3, [r4, #0]
 800e6b6:	2b04      	cmp	r3, #4
 800e6b8:	f200 8082 	bhi.w	800e7c0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 800e6bc:	e8df f003 	tbb	[pc, r3]
 800e6c0:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800e6c4:	4b430080 	blmi	90ce8cc <__exidx_end+0x10bacb0>
 800e6c8:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e6cc:	6019      	str	r1, [r3, #0]
 800e6ce:	4b42      	ldr	r3, [pc, #264]	; (800e7d8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800e6d0:	601a      	str	r2, [r3, #0]
 800e6d2:	4b42      	ldr	r3, [pc, #264]	; (800e7dc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 800e6d4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e6d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e6dc:	4b40      	ldr	r3, [pc, #256]	; (800e7e0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800e6de:	d807      	bhi.n	800e6f0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 800e6e0:	2201      	movs	r2, #1
 800e6e2:	701a      	strb	r2, [r3, #0]
 800e6e4:	f002 f8ea 	bl	80108bc <fmc_bank0_unlock>
 800e6e8:	2301      	movs	r3, #1
 800e6ea:	6023      	str	r3, [r4, #0]
 800e6ec:	2000      	movs	r0, #0
 800e6ee:	e026      	b.n	800e73e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800e6f0:	4a3c      	ldr	r2, [pc, #240]	; (800e7e4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 800e6f2:	4291      	cmp	r1, r2
 800e6f4:	d3f4      	bcc.n	800e6e0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 800e6f6:	2200      	movs	r2, #0
 800e6f8:	701a      	strb	r2, [r3, #0]
 800e6fa:	f002 f8ed 	bl	80108d8 <fmc_bank1_unlock>
 800e6fe:	e7f3      	b.n	800e6e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800e700:	4d37      	ldr	r5, [pc, #220]	; (800e7e0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800e702:	782b      	ldrb	r3, [r5, #0]
 800e704:	b15b      	cbz	r3, 800e71e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 800e706:	f002 f905 	bl	8010914 <fmc_bank0_state_get>
 800e70a:	2801      	cmp	r0, #1
 800e70c:	d0ee      	beq.n	800e6ec <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 800e70e:	7829      	ldrb	r1, [r5, #0]
 800e710:	4b35      	ldr	r3, [pc, #212]	; (800e7e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800e712:	b939      	cbnz	r1, 800e724 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 800e714:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e716:	f022 0202 	bic.w	r2, r2, #2
 800e71a:	651a      	str	r2, [r3, #80]	; 0x50
 800e71c:	e006      	b.n	800e72c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 800e71e:	f002 f90b 	bl	8010938 <fmc_bank1_state_get>
 800e722:	e7f2      	b.n	800e70a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 800e724:	691a      	ldr	r2, [r3, #16]
 800e726:	f022 0202 	bic.w	r2, r2, #2
 800e72a:	611a      	str	r2, [r3, #16]
 800e72c:	4b2a      	ldr	r3, [pc, #168]	; (800e7d8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800e72e:	681b      	ldr	r3, [r3, #0]
 800e730:	b94b      	cbnz	r3, 800e746 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 800e732:	b129      	cbz	r1, 800e740 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 800e734:	f002 f8de 	bl	80108f4 <fmc_bank0_lock>
 800e738:	2300      	movs	r3, #0
 800e73a:	2001      	movs	r0, #1
 800e73c:	6023      	str	r3, [r4, #0]
 800e73e:	bd38      	pop	{r3, r4, r5, pc}
 800e740:	f002 f8e0 	bl	8010904 <fmc_bank1_lock>
 800e744:	e7f8      	b.n	800e738 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 800e746:	2302      	movs	r3, #2
 800e748:	e7cf      	b.n	800e6ea <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 800e74a:	4923      	ldr	r1, [pc, #140]	; (800e7d8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800e74c:	680b      	ldr	r3, [r1, #0]
 800e74e:	2b00      	cmp	r3, #0
 800e750:	d0ca      	beq.n	800e6e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800e752:	4b23      	ldr	r3, [pc, #140]	; (800e7e0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800e754:	4a1f      	ldr	r2, [pc, #124]	; (800e7d4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 800e756:	7818      	ldrb	r0, [r3, #0]
 800e758:	4b23      	ldr	r3, [pc, #140]	; (800e7e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800e75a:	b190      	cbz	r0, 800e782 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 800e75c:	6918      	ldr	r0, [r3, #16]
 800e75e:	f040 0002 	orr.w	r0, r0, #2
 800e762:	6118      	str	r0, [r3, #16]
 800e764:	6810      	ldr	r0, [r2, #0]
 800e766:	6158      	str	r0, [r3, #20]
 800e768:	6918      	ldr	r0, [r3, #16]
 800e76a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800e76e:	6118      	str	r0, [r3, #16]
 800e770:	680b      	ldr	r3, [r1, #0]
 800e772:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800e776:	600b      	str	r3, [r1, #0]
 800e778:	6813      	ldr	r3, [r2, #0]
 800e77a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800e77e:	6013      	str	r3, [r2, #0]
 800e780:	e7b2      	b.n	800e6e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800e782:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800e784:	f040 0002 	orr.w	r0, r0, #2
 800e788:	6518      	str	r0, [r3, #80]	; 0x50
 800e78a:	6810      	ldr	r0, [r2, #0]
 800e78c:	6558      	str	r0, [r3, #84]	; 0x54
 800e78e:	69dd      	ldr	r5, [r3, #28]
 800e790:	07ad      	lsls	r5, r5, #30
 800e792:	bf48      	it	mi
 800e794:	6158      	strmi	r0, [r3, #20]
 800e796:	4814      	ldr	r0, [pc, #80]	; (800e7e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800e798:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e79a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e79e:	6503      	str	r3, [r0, #80]	; 0x50
 800e7a0:	680b      	ldr	r3, [r1, #0]
 800e7a2:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800e7a6:	600b      	str	r3, [r1, #0]
 800e7a8:	6813      	ldr	r3, [r2, #0]
 800e7aa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e7ae:	e7e6      	b.n	800e77e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 800e7b0:	4b0b      	ldr	r3, [pc, #44]	; (800e7e0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800e7b2:	781a      	ldrb	r2, [r3, #0]
 800e7b4:	4b0c      	ldr	r3, [pc, #48]	; (800e7e8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800e7b6:	b132      	cbz	r2, 800e7c6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 800e7b8:	691a      	ldr	r2, [r3, #16]
 800e7ba:	f022 0201 	bic.w	r2, r2, #1
 800e7be:	611a      	str	r2, [r3, #16]
 800e7c0:	2000      	movs	r0, #0
 800e7c2:	6020      	str	r0, [r4, #0]
 800e7c4:	e7bb      	b.n	800e73e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800e7c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e7c8:	f022 0201 	bic.w	r2, r2, #1
 800e7cc:	651a      	str	r2, [r3, #80]	; 0x50
 800e7ce:	e7f7      	b.n	800e7c0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 800e7d0:	20009f88 	andcs	r9, r0, r8, lsl #31
 800e7d4:	20009f8c 	andcs	r9, r0, ip, lsl #31
 800e7d8:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
 800e7dc:	1ffff700 	svcne	0x00fff700
 800e7e0:	20009f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800e7e4:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e7e8:	40022000 	andmi	r2, r2, r0

0800e7ec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 800e7ec:	b570      	push	{r4, r5, r6, lr}
 800e7ee:	2400      	movs	r4, #0
 800e7f0:	9804      	ldr	r0, [sp, #16]
 800e7f2:	6004      	str	r4, [r0, #0]
 800e7f4:	4c48      	ldr	r4, [pc, #288]	; (800e918 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 800e7f6:	6820      	ldr	r0, [r4, #0]
 800e7f8:	2804      	cmp	r0, #4
 800e7fa:	d848      	bhi.n	800e88e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 800e7fc:	e8df f000 	tbb	[pc, r0]
 800e800:	22847c03 	addcs	r7, r4, #768	; 0x300
 800e804:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800e808:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e80c:	6001      	str	r1, [r0, #0]
 800e80e:	4844      	ldr	r0, [pc, #272]	; (800e920 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e810:	6003      	str	r3, [r0, #0]
 800e812:	4b44      	ldr	r3, [pc, #272]	; (800e924 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e814:	601a      	str	r2, [r3, #0]
 800e816:	4b44      	ldr	r3, [pc, #272]	; (800e928 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 800e818:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e81c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e820:	4b42      	ldr	r3, [pc, #264]	; (800e92c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e822:	d807      	bhi.n	800e834 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 800e824:	2201      	movs	r2, #1
 800e826:	701a      	strb	r2, [r3, #0]
 800e828:	f002 f848 	bl	80108bc <fmc_bank0_unlock>
 800e82c:	2303      	movs	r3, #3
 800e82e:	6023      	str	r3, [r4, #0]
 800e830:	2000      	movs	r0, #0
 800e832:	e026      	b.n	800e882 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 800e834:	4a3e      	ldr	r2, [pc, #248]	; (800e930 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 800e836:	4291      	cmp	r1, r2
 800e838:	d3f4      	bcc.n	800e824 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 800e83a:	2200      	movs	r2, #0
 800e83c:	701a      	strb	r2, [r3, #0]
 800e83e:	f002 f84b 	bl	80108d8 <fmc_bank1_unlock>
 800e842:	e7f3      	b.n	800e82c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e844:	4d39      	ldr	r5, [pc, #228]	; (800e92c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e846:	782b      	ldrb	r3, [r5, #0]
 800e848:	b15b      	cbz	r3, 800e862 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 800e84a:	f002 f863 	bl	8010914 <fmc_bank0_state_get>
 800e84e:	2801      	cmp	r0, #1
 800e850:	d0ee      	beq.n	800e830 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 800e852:	7829      	ldrb	r1, [r5, #0]
 800e854:	4b37      	ldr	r3, [pc, #220]	; (800e934 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e856:	b939      	cbnz	r1, 800e868 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 800e858:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e85a:	f022 0201 	bic.w	r2, r2, #1
 800e85e:	651a      	str	r2, [r3, #80]	; 0x50
 800e860:	e006      	b.n	800e870 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 800e862:	f002 f869 	bl	8010938 <fmc_bank1_state_get>
 800e866:	e7f2      	b.n	800e84e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 800e868:	691a      	ldr	r2, [r3, #16]
 800e86a:	f022 0201 	bic.w	r2, r2, #1
 800e86e:	611a      	str	r2, [r3, #16]
 800e870:	4b2c      	ldr	r3, [pc, #176]	; (800e924 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e872:	681b      	ldr	r3, [r3, #0]
 800e874:	b94b      	cbnz	r3, 800e88a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 800e876:	b129      	cbz	r1, 800e884 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 800e878:	f002 f83c 	bl	80108f4 <fmc_bank0_lock>
 800e87c:	2300      	movs	r3, #0
 800e87e:	2001      	movs	r0, #1
 800e880:	6023      	str	r3, [r4, #0]
 800e882:	bd70      	pop	{r4, r5, r6, pc}
 800e884:	f002 f83e 	bl	8010904 <fmc_bank1_lock>
 800e888:	e7f8      	b.n	800e87c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 800e88a:	2304      	movs	r3, #4
 800e88c:	e7cf      	b.n	800e82e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 800e88e:	4a25      	ldr	r2, [pc, #148]	; (800e924 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e890:	6813      	ldr	r3, [r2, #0]
 800e892:	2b03      	cmp	r3, #3
 800e894:	d91a      	bls.n	800e8cc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 800e896:	4b25      	ldr	r3, [pc, #148]	; (800e92c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e898:	7819      	ldrb	r1, [r3, #0]
 800e89a:	4b26      	ldr	r3, [pc, #152]	; (800e934 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e89c:	b189      	cbz	r1, 800e8c2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 800e89e:	6919      	ldr	r1, [r3, #16]
 800e8a0:	f041 0101 	orr.w	r1, r1, #1
 800e8a4:	6119      	str	r1, [r3, #16]
 800e8a6:	4d1e      	ldr	r5, [pc, #120]	; (800e920 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e8a8:	481c      	ldr	r0, [pc, #112]	; (800e91c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 800e8aa:	6829      	ldr	r1, [r5, #0]
 800e8ac:	6803      	ldr	r3, [r0, #0]
 800e8ae:	f851 6b04 	ldr.w	r6, [r1], #4
 800e8b2:	f843 6b04 	str.w	r6, [r3], #4
 800e8b6:	6003      	str	r3, [r0, #0]
 800e8b8:	6813      	ldr	r3, [r2, #0]
 800e8ba:	6029      	str	r1, [r5, #0]
 800e8bc:	3b04      	subs	r3, #4
 800e8be:	6013      	str	r3, [r2, #0]
 800e8c0:	e7b4      	b.n	800e82c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e8c2:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800e8c4:	f041 0101 	orr.w	r1, r1, #1
 800e8c8:	6519      	str	r1, [r3, #80]	; 0x50
 800e8ca:	e7ec      	b.n	800e8a6 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 800e8cc:	2b00      	cmp	r3, #0
 800e8ce:	d0ad      	beq.n	800e82c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e8d0:	4b16      	ldr	r3, [pc, #88]	; (800e92c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e8d2:	781a      	ldrb	r2, [r3, #0]
 800e8d4:	4b17      	ldr	r3, [pc, #92]	; (800e934 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e8d6:	b152      	cbz	r2, 800e8ee <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 800e8d8:	691a      	ldr	r2, [r3, #16]
 800e8da:	f042 0201 	orr.w	r2, r2, #1
 800e8de:	611a      	str	r2, [r3, #16]
 800e8e0:	4a0f      	ldr	r2, [pc, #60]	; (800e920 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e8e2:	4b0e      	ldr	r3, [pc, #56]	; (800e91c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 800e8e4:	6812      	ldr	r2, [r2, #0]
 800e8e6:	681b      	ldr	r3, [r3, #0]
 800e8e8:	6812      	ldr	r2, [r2, #0]
 800e8ea:	601a      	str	r2, [r3, #0]
 800e8ec:	e79e      	b.n	800e82c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e8ee:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e8f0:	f042 0201 	orr.w	r2, r2, #1
 800e8f4:	651a      	str	r2, [r3, #80]	; 0x50
 800e8f6:	e7f3      	b.n	800e8e0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 800e8f8:	4b0c      	ldr	r3, [pc, #48]	; (800e92c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e8fa:	781a      	ldrb	r2, [r3, #0]
 800e8fc:	4b0d      	ldr	r3, [pc, #52]	; (800e934 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e8fe:	b132      	cbz	r2, 800e90e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 800e900:	691a      	ldr	r2, [r3, #16]
 800e902:	f022 0202 	bic.w	r2, r2, #2
 800e906:	611a      	str	r2, [r3, #16]
 800e908:	2000      	movs	r0, #0
 800e90a:	6020      	str	r0, [r4, #0]
 800e90c:	e7b9      	b.n	800e882 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 800e90e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e910:	f022 0202 	bic.w	r2, r2, #2
 800e914:	651a      	str	r2, [r3, #80]	; 0x50
 800e916:	e7f7      	b.n	800e908 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 800e918:	20009f88 	andcs	r9, r0, r8, lsl #31
 800e91c:	20009f84 	andcs	r9, r0, r4, lsl #31
 800e920:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
 800e924:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
 800e928:	1ffff700 	svcne	0x00fff700
 800e92c:	20009f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800e930:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e934:	40022000 	andmi	r2, r2, r0

0800e938 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e93c:	4603      	mov	r3, r0
 800e93e:	7800      	ldrb	r0, [r0, #0]
 800e940:	287b      	cmp	r0, #123	; 0x7b
 800e942:	f040 80a2 	bne.w	800ea8a <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e946:	b17a      	cbz	r2, 800e968 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e948:	2401      	movs	r4, #1
 800e94a:	461e      	mov	r6, r3
 800e94c:	4620      	mov	r0, r4
 800e94e:	2a00      	cmp	r2, #0
 800e950:	bf0c      	ite	eq
 800e952:	f04f 0c0a 	moveq.w	ip, #10
 800e956:	f04f 0c00 	movne.w	ip, #0
 800e95a:	273d      	movs	r7, #61	; 0x3d
 800e95c:	42a1      	cmp	r1, r4
 800e95e:	d850      	bhi.n	800ea02 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e964:	463c      	mov	r4, r7
 800e966:	e7f2      	b.n	800e94e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e968:	2023      	movs	r0, #35	; 0x23
 800e96a:	f803 0b01 	strb.w	r0, [r3], #1
 800e96e:	461c      	mov	r4, r3
 800e970:	2701      	movs	r7, #1
 800e972:	42b9      	cmp	r1, r7
 800e974:	d811      	bhi.n	800e99a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e976:	2001      	movs	r0, #1
 800e978:	461e      	mov	r6, r3
 800e97a:	230a      	movs	r3, #10
 800e97c:	4625      	mov	r5, r4
 800e97e:	f806 3b01 	strb.w	r3, [r6], #1
 800e982:	3001      	adds	r0, #1
 800e984:	462b      	mov	r3, r5
 800e986:	781c      	ldrb	r4, [r3, #0]
 800e988:	3501      	adds	r5, #1
 800e98a:	2c7b      	cmp	r4, #123	; 0x7b
 800e98c:	d0ea      	beq.n	800e964 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e98e:	42b9      	cmp	r1, r7
 800e990:	f107 0401 	add.w	r4, r7, #1
 800e994:	d9db      	bls.n	800e94e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e996:	4627      	mov	r7, r4
 800e998:	e7f4      	b.n	800e984 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e99a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e99e:	2822      	cmp	r0, #34	; 0x22
 800e9a0:	d119      	bne.n	800e9d6 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e9a2:	46a4      	mov	ip, r4
 800e9a4:	461d      	mov	r5, r3
 800e9a6:	2601      	movs	r6, #1
 800e9a8:	f89c e000 	ldrb.w	lr, [ip]
 800e9ac:	4664      	mov	r4, ip
 800e9ae:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e9b2:	462b      	mov	r3, r5
 800e9b4:	4630      	mov	r0, r6
 800e9b6:	f10c 0c01 	add.w	ip, ip, #1
 800e9ba:	f105 0501 	add.w	r5, r5, #1
 800e9be:	f106 0601 	add.w	r6, r6, #1
 800e9c2:	d0d9      	beq.n	800e978 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e9c4:	3701      	adds	r7, #1
 800e9c6:	42b9      	cmp	r1, r7
 800e9c8:	4664      	mov	r4, ip
 800e9ca:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e9ce:	d8eb      	bhi.n	800e9a8 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e9d0:	4630      	mov	r0, r6
 800e9d2:	462b      	mov	r3, r5
 800e9d4:	e7d0      	b.n	800e978 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e9d6:	3701      	adds	r7, #1
 800e9d8:	e7cb      	b.n	800e972 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e9da:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e9de:	d110      	bne.n	800ea02 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e9e0:	eba0 0803 	sub.w	r8, r0, r3
 800e9e4:	461a      	mov	r2, r3
 800e9e6:	eb08 0003 	add.w	r0, r8, r3
 800e9ea:	f813 eb01 	ldrb.w	lr, [r3], #1
 800e9ee:	1c65      	adds	r5, r4, #1
 800e9f0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e9f4:	d04c      	beq.n	800ea90 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800e9f6:	42a1      	cmp	r1, r4
 800e9f8:	d911      	bls.n	800ea1e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e9fa:	462c      	mov	r4, r5
 800e9fc:	f806 eb01 	strb.w	lr, [r6], #1
 800ea00:	e7f0      	b.n	800e9e4 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800ea02:	42a1      	cmp	r1, r4
 800ea04:	461d      	mov	r5, r3
 800ea06:	f893 e000 	ldrb.w	lr, [r3]
 800ea0a:	f104 0401 	add.w	r4, r4, #1
 800ea0e:	f103 0301 	add.w	r3, r3, #1
 800ea12:	d8e2      	bhi.n	800e9da <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800ea14:	462b      	mov	r3, r5
 800ea16:	e7e3      	b.n	800e9e0 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800ea18:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800ea1c:	d009      	beq.n	800ea32 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800ea1e:	42a9      	cmp	r1, r5
 800ea20:	4614      	mov	r4, r2
 800ea22:	f892 e000 	ldrb.w	lr, [r2]
 800ea26:	f105 0501 	add.w	r5, r5, #1
 800ea2a:	f102 0201 	add.w	r2, r2, #1
 800ea2e:	d8f3      	bhi.n	800ea18 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800ea30:	4622      	mov	r2, r4
 800ea32:	7814      	ldrb	r4, [r2, #0]
 800ea34:	4696      	mov	lr, r2
 800ea36:	2c2f      	cmp	r4, #47	; 0x2f
 800ea38:	462b      	mov	r3, r5
 800ea3a:	f102 0201 	add.w	r2, r2, #1
 800ea3e:	f105 0501 	add.w	r5, r5, #1
 800ea42:	d81a      	bhi.n	800ea7a <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800ea44:	4299      	cmp	r1, r3
 800ea46:	d8f4      	bhi.n	800ea32 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800ea48:	2c22      	cmp	r4, #34	; 0x22
 800ea4a:	bf08      	it	eq
 800ea4c:	4696      	moveq	lr, r2
 800ea4e:	4673      	mov	r3, lr
 800ea50:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ea54:	1c6c      	adds	r4, r5, #1
 800ea56:	2a22      	cmp	r2, #34	; 0x22
 800ea58:	d011      	beq.n	800ea7e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea5a:	2a2c      	cmp	r2, #44	; 0x2c
 800ea5c:	d00f      	beq.n	800ea7e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea5e:	2a7d      	cmp	r2, #125	; 0x7d
 800ea60:	d00d      	beq.n	800ea7e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea62:	42a9      	cmp	r1, r5
 800ea64:	d90f      	bls.n	800ea86 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800ea66:	f1a2 0520 	sub.w	r5, r2, #32
 800ea6a:	2d5a      	cmp	r5, #90	; 0x5a
 800ea6c:	d803      	bhi.n	800ea76 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800ea6e:	469e      	mov	lr, r3
 800ea70:	f806 2b01 	strb.w	r2, [r6], #1
 800ea74:	3001      	adds	r0, #1
 800ea76:	4625      	mov	r5, r4
 800ea78:	e7e9      	b.n	800ea4e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800ea7a:	461d      	mov	r5, r3
 800ea7c:	e7e7      	b.n	800ea4e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800ea7e:	462c      	mov	r4, r5
 800ea80:	f806 cb01 	strb.w	ip, [r6], #1
 800ea84:	3001      	adds	r0, #1
 800ea86:	3401      	adds	r4, #1
 800ea88:	e768      	b.n	800e95c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800ea8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ea8e:	e767      	b.n	800e960 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800ea90:	4625      	mov	r5, r4
 800ea92:	f806 7b01 	strb.w	r7, [r6], #1
 800ea96:	3001      	adds	r0, #1
 800ea98:	e7c1      	b.n	800ea1e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800ea9c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800ea9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eaa0:	6002      	str	r2, [r0, #0]
 800eaa2:	4614      	mov	r4, r2
 800eaa4:	2200      	movs	r2, #0
 800eaa6:	80c2      	strh	r2, [r0, #6]
 800eaa8:	4a1c      	ldr	r2, [pc, #112]	; (800eb1c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800eaaa:	4606      	mov	r6, r0
 800eaac:	7812      	ldrb	r2, [r2, #0]
 800eaae:	8083      	strh	r3, [r0, #4]
 800eab0:	f002 0201 	and.w	r2, r2, #1
 800eab4:	7202      	strb	r2, [r0, #8]
 800eab6:	4608      	mov	r0, r1
 800eab8:	4605      	mov	r5, r0
 800eaba:	782f      	ldrb	r7, [r5, #0]
 800eabc:	3001      	adds	r0, #1
 800eabe:	2f00      	cmp	r7, #0
 800eac0:	d1fa      	bne.n	800eab8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800eac2:	1a6d      	subs	r5, r5, r1
 800eac4:	b29b      	uxth	r3, r3
 800eac6:	b1d2      	cbz	r2, 800eafe <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800eac8:	1d2f      	adds	r7, r5, #4
 800eaca:	429f      	cmp	r7, r3
 800eacc:	d814      	bhi.n	800eaf8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eace:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800ead2:	f04f 0922 	mov.w	r9, #34	; 0x22
 800ead6:	462a      	mov	r2, r5
 800ead8:	f884 8000 	strb.w	r8, [r4]
 800eadc:	f884 9001 	strb.w	r9, [r4, #1]
 800eae0:	1ca0      	adds	r0, r4, #2
 800eae2:	f000 fe3c 	bl	800f75e <memmove>
 800eae6:	223a      	movs	r2, #58	; 0x3a
 800eae8:	1963      	adds	r3, r4, r5
 800eaea:	3505      	adds	r5, #5
 800eaec:	f883 9002 	strb.w	r9, [r3, #2]
 800eaf0:	70da      	strb	r2, [r3, #3]
 800eaf2:	80f5      	strh	r5, [r6, #6]
 800eaf4:	f804 8007 	strb.w	r8, [r4, r7]
 800eaf8:	4630      	mov	r0, r6
 800eafa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eafe:	1caf      	adds	r7, r5, #2
 800eb00:	429f      	cmp	r7, r3
 800eb02:	d8f9      	bhi.n	800eaf8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eb04:	4620      	mov	r0, r4
 800eb06:	2323      	movs	r3, #35	; 0x23
 800eb08:	462a      	mov	r2, r5
 800eb0a:	f800 3b01 	strb.w	r3, [r0], #1
 800eb0e:	f000 fe26 	bl	800f75e <memmove>
 800eb12:	230a      	movs	r3, #10
 800eb14:	442c      	add	r4, r5
 800eb16:	7063      	strb	r3, [r4, #1]
 800eb18:	80f7      	strh	r7, [r6, #6]
 800eb1a:	e7ed      	b.n	800eaf8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eb1c:	20009f9c 	mulcs	r0, ip, pc	; <UNPREDICTABLE>

0800eb20 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800eb20:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb22:	469c      	mov	ip, r3
 800eb24:	8885      	ldrh	r5, [r0, #4]
 800eb26:	88c3      	ldrh	r3, [r0, #6]
 800eb28:	b085      	sub	sp, #20
 800eb2a:	42ab      	cmp	r3, r5
 800eb2c:	d302      	bcc.n	800eb34 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800eb2e:	2000      	movs	r0, #0
 800eb30:	b005      	add	sp, #20
 800eb32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb34:	4604      	mov	r4, r0
 800eb36:	6800      	ldr	r0, [r0, #0]
 800eb38:	1aed      	subs	r5, r5, r3
 800eb3a:	4418      	add	r0, r3
 800eb3c:	b2d6      	uxtb	r6, r2
 800eb3e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800eb42:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800eb46:	f894 e008 	ldrb.w	lr, [r4, #8]
 800eb4a:	0e12      	lsrs	r2, r2, #24
 800eb4c:	f1bc 0f00 	cmp.w	ip, #0
 800eb50:	d109      	bne.n	800eb66 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800eb52:	f1be 0f00 	cmp.w	lr, #0
 800eb56:	d109      	bne.n	800eb6c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800eb58:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eb5c:	e9cd 6700 	strd	r6, r7, [sp]
 800eb60:	460b      	mov	r3, r1
 800eb62:	4a0e      	ldr	r2, [pc, #56]	; (800eb9c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800eb64:	e008      	b.n	800eb78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800eb66:	f1be 0f00 	cmp.w	lr, #0
 800eb6a:	d00f      	beq.n	800eb8c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800eb6c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eb70:	460b      	mov	r3, r1
 800eb72:	e9cd 6700 	strd	r6, r7, [sp]
 800eb76:	4a0a      	ldr	r2, [pc, #40]	; (800eba0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800eb78:	4629      	mov	r1, r5
 800eb7a:	f001 f849 	bl	800fc10 <snprintf>
 800eb7e:	4285      	cmp	r5, r0
 800eb80:	dbd5      	blt.n	800eb2e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800eb82:	88e3      	ldrh	r3, [r4, #6]
 800eb84:	4403      	add	r3, r0
 800eb86:	80e3      	strh	r3, [r4, #6]
 800eb88:	2001      	movs	r0, #1
 800eb8a:	e7d1      	b.n	800eb30 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800eb8c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eb90:	e9cd 6700 	strd	r6, r7, [sp]
 800eb94:	460b      	mov	r3, r1
 800eb96:	4a03      	ldr	r2, [pc, #12]	; (800eba4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800eb98:	e7ee      	b.n	800eb78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800eb9a:	bf00      	nop
 800eb9c:	08013736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 800eba0:	08013722 	stmdaeq	r1, {r1, r5, r8, r9, sl, ip, sp}
 800eba4:	08013737 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}

0800eba8 <PropertiesBuilder::AddComment(char const*)>:
 800eba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ebaa:	7a06      	ldrb	r6, [r0, #8]
 800ebac:	b996      	cbnz	r6, 800ebd4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800ebae:	4604      	mov	r4, r0
 800ebb0:	88c0      	ldrh	r0, [r0, #6]
 800ebb2:	88a5      	ldrh	r5, [r4, #4]
 800ebb4:	42a8      	cmp	r0, r5
 800ebb6:	d20d      	bcs.n	800ebd4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800ebb8:	6827      	ldr	r7, [r4, #0]
 800ebba:	1a2d      	subs	r5, r5, r0
 800ebbc:	460b      	mov	r3, r1
 800ebbe:	4a06      	ldr	r2, [pc, #24]	; (800ebd8 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800ebc0:	4629      	mov	r1, r5
 800ebc2:	4438      	add	r0, r7
 800ebc4:	f001 f824 	bl	800fc10 <snprintf>
 800ebc8:	4285      	cmp	r5, r0
 800ebca:	bfa1      	itttt	ge
 800ebcc:	2601      	movge	r6, #1
 800ebce:	88e3      	ldrhge	r3, [r4, #6]
 800ebd0:	18c0      	addge	r0, r0, r3
 800ebd2:	80e0      	strhge	r0, [r4, #6]
 800ebd4:	4630      	mov	r0, r6
 800ebd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ebd8:	08013747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp}

0800ebdc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800ebdc:	e9c0 1200 	strd	r1, r2, [r0]
 800ebe0:	4770      	bx	lr

0800ebe2 <ReadConfigFile::~ReadConfigFile()>:
 800ebe2:	4770      	bx	lr

0800ebe4 <ReadConfigFile::Read(char const*, unsigned int)>:
 800ebe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebe8:	4606      	mov	r6, r0
 800ebea:	460d      	mov	r5, r1
 800ebec:	4614      	mov	r4, r2
 800ebee:	f04f 0800 	mov.w	r8, #0
 800ebf2:	b0a0      	sub	sp, #128	; 0x80
 800ebf4:	b33c      	cbz	r4, 800ec46 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ebf6:	466b      	mov	r3, sp
 800ebf8:	462a      	mov	r2, r5
 800ebfa:	4619      	mov	r1, r3
 800ebfc:	e007      	b.n	800ec0e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800ebfe:	f803 7b01 	strb.w	r7, [r3], #1
 800ec02:	1a58      	subs	r0, r3, r1
 800ec04:	287f      	cmp	r0, #127	; 0x7f
 800ec06:	4615      	mov	r5, r2
 800ec08:	dc1d      	bgt.n	800ec46 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ec0a:	3c01      	subs	r4, #1
 800ec0c:	d00f      	beq.n	800ec2e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ec0e:	7817      	ldrb	r7, [r2, #0]
 800ec10:	4610      	mov	r0, r2
 800ec12:	2f0d      	cmp	r7, #13
 800ec14:	f102 0201 	add.w	r2, r2, #1
 800ec18:	d001      	beq.n	800ec1e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ec1a:	2f0a      	cmp	r7, #10
 800ec1c:	d1ef      	bne.n	800ebfe <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800ec1e:	4605      	mov	r5, r0
 800ec20:	b12c      	cbz	r4, 800ec2e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ec22:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ec26:	2a0d      	cmp	r2, #13
 800ec28:	d00b      	beq.n	800ec42 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ec2a:	2a0a      	cmp	r2, #10
 800ec2c:	d009      	beq.n	800ec42 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ec2e:	f89d 2000 	ldrb.w	r2, [sp]
 800ec32:	2a60      	cmp	r2, #96	; 0x60
 800ec34:	d9de      	bls.n	800ebf4 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ec36:	f883 8000 	strb.w	r8, [r3]
 800ec3a:	e9d6 3000 	ldrd	r3, r0, [r6]
 800ec3e:	4798      	blx	r3
 800ec40:	e7d8      	b.n	800ebf4 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ec42:	3c01      	subs	r4, #1
 800ec44:	e7eb      	b.n	800ec1e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ec46:	b020      	add	sp, #128	; 0x80
 800ec48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ec4c <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800ec4c:	b570      	push	{r4, r5, r6, lr}
 800ec4e:	4615      	mov	r5, r2
 800ec50:	461c      	mov	r4, r3
 800ec52:	f000 f890 	bl	800ed76 <Sscan::checkName(char const*, char const*)>
 800ec56:	b180      	cbz	r0, 800ec7a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800ec58:	2100      	movs	r1, #0
 800ec5a:	5c43      	ldrb	r3, [r0, r1]
 800ec5c:	6826      	ldr	r6, [r4, #0]
 800ec5e:	b28a      	uxth	r2, r1
 800ec60:	b143      	cbz	r3, 800ec74 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800ec62:	42b2      	cmp	r2, r6
 800ec64:	d303      	bcc.n	800ec6e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800ec66:	2b0a      	cmp	r3, #10
 800ec68:	d004      	beq.n	800ec74 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800ec6a:	2002      	movs	r0, #2
 800ec6c:	e004      	b.n	800ec78 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800ec6e:	546b      	strb	r3, [r5, r1]
 800ec70:	3101      	adds	r1, #1
 800ec72:	e7f2      	b.n	800ec5a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800ec74:	2000      	movs	r0, #0
 800ec76:	6022      	str	r2, [r4, #0]
 800ec78:	bd70      	pop	{r4, r5, r6, pc}
 800ec7a:	2001      	movs	r0, #1
 800ec7c:	e7fc      	b.n	800ec78 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800ec7e <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800ec7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec80:	4615      	mov	r5, r2
 800ec82:	f000 f878 	bl	800ed76 <Sscan::checkName(char const*, char const*)>
 800ec86:	bb58      	cbnz	r0, 800ece0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800ec88:	2001      	movs	r0, #1
 800ec8a:	e027      	b.n	800ecdc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800ec8c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ec90:	2b09      	cmp	r3, #9
 800ec92:	d822      	bhi.n	800ecda <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ec94:	4603      	mov	r3, r0
 800ec96:	fb0c 2101 	mla	r1, ip, r1, r2
 800ec9a:	3930      	subs	r1, #48	; 0x30
 800ec9c:	4618      	mov	r0, r3
 800ec9e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eca2:	2a2e      	cmp	r2, #46	; 0x2e
 800eca4:	d115      	bne.n	800ecd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800eca6:	29ff      	cmp	r1, #255	; 0xff
 800eca8:	d817      	bhi.n	800ecda <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecaa:	3401      	adds	r4, #1
 800ecac:	2c03      	cmp	r4, #3
 800ecae:	f806 1b01 	strb.w	r1, [r6], #1
 800ecb2:	d119      	bne.n	800ece8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800ecb4:	2400      	movs	r4, #0
 800ecb6:	260a      	movs	r6, #10
 800ecb8:	1d1a      	adds	r2, r3, #4
 800ecba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ecbe:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800ecc2:	d115      	bne.n	800ecf0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800ecc4:	2cff      	cmp	r4, #255	; 0xff
 800ecc6:	d808      	bhi.n	800ecda <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecc8:	f88d 4007 	strb.w	r4, [sp, #7]
 800eccc:	9b01      	ldr	r3, [sp, #4]
 800ecce:	602b      	str	r3, [r5, #0]
 800ecd0:	e004      	b.n	800ecdc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800ecd2:	2a00      	cmp	r2, #0
 800ecd4:	d0e7      	beq.n	800eca6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ecd6:	42b8      	cmp	r0, r7
 800ecd8:	d1d8      	bne.n	800ec8c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800ecda:	2002      	movs	r0, #2
 800ecdc:	b003      	add	sp, #12
 800ecde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ece0:	2400      	movs	r4, #0
 800ece2:	f04f 0c0a 	mov.w	ip, #10
 800ece6:	ae01      	add	r6, sp, #4
 800ece8:	4603      	mov	r3, r0
 800ecea:	2100      	movs	r1, #0
 800ecec:	1d07      	adds	r7, r0, #4
 800ecee:	e7d5      	b.n	800ec9c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800ecf0:	4293      	cmp	r3, r2
 800ecf2:	d0f2      	beq.n	800ecda <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecf4:	3930      	subs	r1, #48	; 0x30
 800ecf6:	2909      	cmp	r1, #9
 800ecf8:	d8ef      	bhi.n	800ecda <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecfa:	fb06 1404 	mla	r4, r6, r4, r1
 800ecfe:	e7dc      	b.n	800ecba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800ed00 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800ed00:	b538      	push	{r3, r4, r5, lr}
 800ed02:	4615      	mov	r5, r2
 800ed04:	f000 f837 	bl	800ed76 <Sscan::checkName(char const*, char const*)>
 800ed08:	b1a0      	cbz	r0, 800ed34 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800ed0a:	4604      	mov	r4, r0
 800ed0c:	2100      	movs	r1, #0
 800ed0e:	220a      	movs	r2, #10
 800ed10:	7823      	ldrb	r3, [r4, #0]
 800ed12:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ed16:	2809      	cmp	r0, #9
 800ed18:	d80e      	bhi.n	800ed38 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ed1a:	fb02 3101 	mla	r1, r2, r1, r3
 800ed1e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ed22:	3930      	subs	r1, #48	; 0x30
 800ed24:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ed28:	d1f2      	bne.n	800ed10 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800ed2a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ed2e:	d203      	bcs.n	800ed38 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ed30:	8029      	strh	r1, [r5, #0]
 800ed32:	bd38      	pop	{r3, r4, r5, pc}
 800ed34:	2001      	movs	r0, #1
 800ed36:	e7fc      	b.n	800ed32 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800ed38:	2002      	movs	r0, #2
 800ed3a:	e7fa      	b.n	800ed32 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800ed3c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800ed3c:	b538      	push	{r3, r4, r5, lr}
 800ed3e:	4615      	mov	r5, r2
 800ed40:	f000 f819 	bl	800ed76 <Sscan::checkName(char const*, char const*)>
 800ed44:	b198      	cbz	r0, 800ed6e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ed46:	4604      	mov	r4, r0
 800ed48:	2100      	movs	r1, #0
 800ed4a:	220a      	movs	r2, #10
 800ed4c:	7823      	ldrb	r3, [r4, #0]
 800ed4e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ed52:	2809      	cmp	r0, #9
 800ed54:	d80d      	bhi.n	800ed72 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ed56:	fb02 3101 	mla	r1, r2, r1, r3
 800ed5a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ed5e:	3930      	subs	r1, #48	; 0x30
 800ed60:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ed64:	d1f2      	bne.n	800ed4c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800ed66:	29ff      	cmp	r1, #255	; 0xff
 800ed68:	d803      	bhi.n	800ed72 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ed6a:	7029      	strb	r1, [r5, #0]
 800ed6c:	bd38      	pop	{r3, r4, r5, pc}
 800ed6e:	2001      	movs	r0, #1
 800ed70:	e7fc      	b.n	800ed6c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800ed72:	2002      	movs	r0, #2
 800ed74:	e7fa      	b.n	800ed6c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800ed76 <Sscan::checkName(char const*, char const*)>:
 800ed76:	4603      	mov	r3, r0
 800ed78:	b510      	push	{r4, lr}
 800ed7a:	3901      	subs	r1, #1
 800ed7c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ed80:	461c      	mov	r4, r3
 800ed82:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ed86:	b120      	cbz	r0, 800ed92 <Sscan::checkName(char const*, char const*)+0x1c>
 800ed88:	b10a      	cbz	r2, 800ed8e <Sscan::checkName(char const*, char const*)+0x18>
 800ed8a:	4290      	cmp	r0, r2
 800ed8c:	d0f6      	beq.n	800ed7c <Sscan::checkName(char const*, char const*)+0x6>
 800ed8e:	2000      	movs	r0, #0
 800ed90:	e006      	b.n	800eda0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ed92:	2a3d      	cmp	r2, #61	; 0x3d
 800ed94:	d104      	bne.n	800eda0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ed96:	7860      	ldrb	r0, [r4, #1]
 800ed98:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800ed9c:	d000      	beq.n	800eda0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ed9e:	1c60      	adds	r0, r4, #1
 800eda0:	bd10      	pop	{r4, pc}

0800eda2 <LightSet::GetDmxStartAddress()>:
 800eda2:	2001      	movs	r0, #1
 800eda4:	4770      	bx	lr

0800eda6 <LightSet::GetDmxFootprint()>:
 800eda6:	f44f 7000 	mov.w	r0, #512	; 0x200
 800edaa:	4770      	bx	lr

0800edac <LightSet::SetDmxStartAddress(unsigned short)>:
 800edac:	2000      	movs	r0, #0
 800edae:	4770      	bx	lr

0800edb0 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800edb0:	2300      	movs	r3, #0
 800edb2:	2001      	movs	r0, #1
 800edb4:	7093      	strb	r3, [r2, #2]
 800edb6:	8010      	strh	r0, [r2, #0]
 800edb8:	4770      	bx	lr
	...

0800edbc <Display::PrintInfo() [clone .isra.0]>:
 800edbc:	b910      	cbnz	r0, 800edc4 <Display::PrintInfo() [clone .isra.0]+0x8>
 800edbe:	4803      	ldr	r0, [pc, #12]	; (800edcc <Display::PrintInfo() [clone .isra.0]+0x10>)
 800edc0:	f000 bf4e 	b.w	800fc60 <puts>
 800edc4:	6803      	ldr	r3, [r0, #0]
 800edc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800edc8:	4718      	bx	r3
 800edca:	bf00      	nop
 800edcc:	08013859 	stmdaeq	r1, {r0, r3, r4, r6, fp, ip, sp}

0800edd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800edd0:	b513      	push	{r0, r1, r4, lr}
 800edd2:	4604      	mov	r4, r0
 800edd4:	0a13      	lsrs	r3, r2, #8
 800edd6:	7800      	ldrb	r0, [r0, #0]
 800edd8:	f88d 1004 	strb.w	r1, [sp, #4]
 800eddc:	f88d 3005 	strb.w	r3, [sp, #5]
 800ede0:	f88d 2006 	strb.w	r2, [sp, #6]
 800ede4:	f002 fa54 	bl	8011290 <gd32_i2c_set_address>
 800ede8:	6860      	ldr	r0, [r4, #4]
 800edea:	f002 fa49 	bl	8011280 <gd32_i2c_set_baudrate>
 800edee:	2103      	movs	r1, #3
 800edf0:	a801      	add	r0, sp, #4
 800edf2:	f002 fa53 	bl	801129c <gd32_i2c_write>
 800edf6:	b002      	add	sp, #8
 800edf8:	bd10      	pop	{r4, pc}

0800edfa <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800edfa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800edfc:	460d      	mov	r5, r1
 800edfe:	4604      	mov	r4, r0
 800ee00:	f002 fa46 	bl	8011290 <gd32_i2c_set_address>
 800ee04:	4628      	mov	r0, r5
 800ee06:	f002 fa3b 	bl	8011280 <gd32_i2c_set_baudrate>
 800ee0a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee0e:	2b07      	cmp	r3, #7
 800ee10:	d902      	bls.n	800ee18 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800ee12:	3c50      	subs	r4, #80	; 0x50
 800ee14:	2c0f      	cmp	r4, #15
 800ee16:	d809      	bhi.n	800ee2c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800ee18:	2101      	movs	r1, #1
 800ee1a:	f10d 0007 	add.w	r0, sp, #7
 800ee1e:	f002 faa3 	bl	8011368 <gd32_i2c_read>
 800ee22:	fab0 f080 	clz	r0, r0
 800ee26:	0940      	lsrs	r0, r0, #5
 800ee28:	b003      	add	sp, #12
 800ee2a:	bd30      	pop	{r4, r5, pc}
 800ee2c:	2100      	movs	r1, #0
 800ee2e:	4608      	mov	r0, r1
 800ee30:	f002 fa34 	bl	801129c <gd32_i2c_write>
 800ee34:	e7f5      	b.n	800ee22 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800ee36 <Display::Detect7Segment()>:
 800ee36:	b538      	push	{r3, r4, r5, lr}
 800ee38:	68c1      	ldr	r1, [r0, #12]
 800ee3a:	4604      	mov	r4, r0
 800ee3c:	7a00      	ldrb	r0, [r0, #8]
 800ee3e:	f7ff ffdc 	bl	800edfa <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800ee42:	7460      	strb	r0, [r4, #17]
 800ee44:	b170      	cbz	r0, 800ee64 <Display::Detect7Segment()+0x2e>
 800ee46:	2200      	movs	r2, #0
 800ee48:	f104 0508 	add.w	r5, r4, #8
 800ee4c:	4611      	mov	r1, r2
 800ee4e:	4628      	mov	r0, r5
 800ee50:	f7ff ffbe 	bl	800edd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ee54:	7c63      	ldrb	r3, [r4, #17]
 800ee56:	b12b      	cbz	r3, 800ee64 <Display::Detect7Segment()+0x2e>
 800ee58:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800ee5c:	2112      	movs	r1, #18
 800ee5e:	4628      	mov	r0, r5
 800ee60:	f7ff ffb6 	bl	800edd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ee64:	bd38      	pop	{r3, r4, r5, pc}

0800ee66 <Display::Detect(display::Type)>:
 800ee66:	2902      	cmp	r1, #2
 800ee68:	b538      	push	{r3, r4, r5, lr}
 800ee6a:	4604      	mov	r4, r0
 800ee6c:	d014      	beq.n	800ee98 <Display::Detect(display::Type)+0x32>
 800ee6e:	2904      	cmp	r1, #4
 800ee70:	d01b      	beq.n	800eeaa <Display::Detect(display::Type)+0x44>
 800ee72:	69a0      	ldr	r0, [r4, #24]
 800ee74:	b168      	cbz	r0, 800ee92 <Display::Detect(display::Type)+0x2c>
 800ee76:	6803      	ldr	r3, [r0, #0]
 800ee78:	689b      	ldr	r3, [r3, #8]
 800ee7a:	4798      	blx	r3
 800ee7c:	4603      	mov	r3, r0
 800ee7e:	69a0      	ldr	r0, [r4, #24]
 800ee80:	b9ab      	cbnz	r3, 800eeae <Display::Detect(display::Type)+0x48>
 800ee82:	b110      	cbz	r0, 800ee8a <Display::Detect(display::Type)+0x24>
 800ee84:	6803      	ldr	r3, [r0, #0]
 800ee86:	685b      	ldr	r3, [r3, #4]
 800ee88:	4798      	blx	r3
 800ee8a:	2300      	movs	r3, #0
 800ee8c:	61a3      	str	r3, [r4, #24]
 800ee8e:	2304      	movs	r3, #4
 800ee90:	6023      	str	r3, [r4, #0]
 800ee92:	2300      	movs	r3, #0
 800ee94:	6163      	str	r3, [r4, #20]
 800ee96:	e010      	b.n	800eeba <Display::Detect(display::Type)+0x54>
 800ee98:	2018      	movs	r0, #24
 800ee9a:	f000 fbc9 	bl	800f630 <operator new(unsigned int)>
 800ee9e:	4605      	mov	r5, r0
 800eea0:	2100      	movs	r1, #0
 800eea2:	f000 f89d 	bl	800efe0 <Ssd1306::Ssd1306(TOledPanel)>
 800eea6:	61a5      	str	r5, [r4, #24]
 800eea8:	e7e3      	b.n	800ee72 <Display::Detect(display::Type)+0xc>
 800eeaa:	6001      	str	r1, [r0, #0]
 800eeac:	e7e1      	b.n	800ee72 <Display::Detect(display::Type)+0xc>
 800eeae:	6803      	ldr	r3, [r0, #0]
 800eeb0:	68db      	ldr	r3, [r3, #12]
 800eeb2:	4798      	blx	r3
 800eeb4:	69a3      	ldr	r3, [r4, #24]
 800eeb6:	2b00      	cmp	r3, #0
 800eeb8:	d0eb      	beq.n	800ee92 <Display::Detect(display::Type)+0x2c>
 800eeba:	bd38      	pop	{r3, r4, r5, pc}

0800eebc <Display::Display()>:
 800eebc:	2304      	movs	r3, #4
 800eebe:	b510      	push	{r4, lr}
 800eec0:	6003      	str	r3, [r0, #0]
 800eec2:	4b0f      	ldr	r3, [pc, #60]	; (800ef00 <Display::Display()+0x44>)
 800eec4:	4604      	mov	r4, r0
 800eec6:	681b      	ldr	r3, [r3, #0]
 800eec8:	4a0e      	ldr	r2, [pc, #56]	; (800ef04 <Display::Display()+0x48>)
 800eeca:	6043      	str	r3, [r0, #4]
 800eecc:	2321      	movs	r3, #33	; 0x21
 800eece:	7203      	strb	r3, [r0, #8]
 800eed0:	4b0d      	ldr	r3, [pc, #52]	; (800ef08 <Display::Display()+0x4c>)
 800eed2:	2102      	movs	r1, #2
 800eed4:	60c3      	str	r3, [r0, #12]
 800eed6:	2300      	movs	r3, #0
 800eed8:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800eedc:	8203      	strh	r3, [r0, #16]
 800eede:	4b0b      	ldr	r3, [pc, #44]	; (800ef0c <Display::Display()+0x50>)
 800eee0:	6018      	str	r0, [r3, #0]
 800eee2:	f7ff ffc0 	bl	800ee66 <Display::Detect(display::Type)>
 800eee6:	4620      	mov	r0, r4
 800eee8:	f7ff ffa5 	bl	800ee36 <Display::Detect7Segment()>
 800eeec:	69a3      	ldr	r3, [r4, #24]
 800eeee:	b10b      	cbz	r3, 800eef4 <Display::Display()+0x38>
 800eef0:	f7f8 ff02 	bl	8007cf8 <display::timeout::gpio_init()>
 800eef4:	69a0      	ldr	r0, [r4, #24]
 800eef6:	f7ff ff61 	bl	800edbc <Display::PrintInfo() [clone .isra.0]>
 800eefa:	4620      	mov	r0, r4
 800eefc:	bd10      	pop	{r4, pc}
 800eefe:	bf00      	nop
 800ef00:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800ef04:	000493e0 	andeq	r9, r4, r0, ror #7
 800ef08:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ef0c:	20009fa0 	andcs	r9, r0, r0, lsr #31

0800ef10 <Ssd1306::~Ssd1306()>:
 800ef10:	4770      	bx	lr

0800ef12 <Ssd1306::SetCursor(unsigned int)>:
 800ef12:	4770      	bx	lr

0800ef14 <Ssd1306::PrintInfo()>:
 800ef14:	b410      	push	{r4}
 800ef16:	4906      	ldr	r1, [pc, #24]	; (800ef30 <Ssd1306::PrintInfo()+0x1c>)
 800ef18:	7c44      	ldrb	r4, [r0, #17]
 800ef1a:	7903      	ldrb	r3, [r0, #4]
 800ef1c:	7942      	ldrb	r2, [r0, #5]
 800ef1e:	4805      	ldr	r0, [pc, #20]	; (800ef34 <Ssd1306::PrintInfo()+0x20>)
 800ef20:	2c00      	cmp	r4, #0
 800ef22:	bf08      	it	eq
 800ef24:	4601      	moveq	r1, r0
 800ef26:	4804      	ldr	r0, [pc, #16]	; (800ef38 <Ssd1306::PrintInfo()+0x24>)
 800ef28:	bc10      	pop	{r4}
 800ef2a:	f000 be49 	b.w	800fbc0 <printf>
 800ef2e:	bf00      	nop
 800ef30:	0801386a 	stmdaeq	r1, {r1, r3, r5, r6, fp, ip, sp}
 800ef34:	08013871 	stmdaeq	r1, {r0, r4, r5, r6, fp, ip, sp}
 800ef38:	08013879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, ip, sp}

0800ef3c <Ssd1306::~Ssd1306()>:
 800ef3c:	b510      	push	{r4, lr}
 800ef3e:	4604      	mov	r4, r0
 800ef40:	f000 fb72 	bl	800f628 <operator delete(void*)>
 800ef44:	4620      	mov	r0, r4
 800ef46:	bd10      	pop	{r4, pc}

0800ef48 <HAL_I2C::Setup()>:
 800ef48:	b510      	push	{r4, lr}
 800ef4a:	4604      	mov	r4, r0
 800ef4c:	7800      	ldrb	r0, [r0, #0]
 800ef4e:	f002 f99f 	bl	8011290 <gd32_i2c_set_address>
 800ef52:	6860      	ldr	r0, [r4, #4]
 800ef54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef58:	f002 b992 	b.w	8011280 <gd32_i2c_set_baudrate>

0800ef5c <Ssd1306::PutChar(int)>:
 800ef5c:	b510      	push	{r4, lr}
 800ef5e:	f1a1 0420 	sub.w	r4, r1, #32
 800ef62:	2c5f      	cmp	r4, #95	; 0x5f
 800ef64:	bf88      	it	hi
 800ef66:	2400      	movhi	r4, #0
 800ef68:	3008      	adds	r0, #8
 800ef6a:	f7ff ffed 	bl	800ef48 <HAL_I2C::Setup()>
 800ef6e:	4804      	ldr	r0, [pc, #16]	; (800ef80 <Ssd1306::PutChar(int)+0x24>)
 800ef70:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800ef74:	4420      	add	r0, r4
 800ef76:	2107      	movs	r1, #7
 800ef78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef7c:	f002 b98e 	b.w	801129c <gd32_i2c_write>
 800ef80:	0801388c 	stmdaeq	r1, {r2, r3, r7, fp, ip, sp}

0800ef84 <Ssd1306::PutString(char const*)>:
 800ef84:	b538      	push	{r3, r4, r5, lr}
 800ef86:	4605      	mov	r5, r0
 800ef88:	1e4c      	subs	r4, r1, #1
 800ef8a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ef8e:	b901      	cbnz	r1, 800ef92 <Ssd1306::PutString(char const*)+0xe>
 800ef90:	bd38      	pop	{r3, r4, r5, pc}
 800ef92:	4628      	mov	r0, r5
 800ef94:	f7ff ffe2 	bl	800ef5c <Ssd1306::PutChar(int)>
 800ef98:	e7f7      	b.n	800ef8a <Ssd1306::PutString(char const*)+0x6>

0800ef9a <Ssd1306::Text(char const*, unsigned int)>:
 800ef9a:	b570      	push	{r4, r5, r6, lr}
 800ef9c:	7903      	ldrb	r3, [r0, #4]
 800ef9e:	4605      	mov	r5, r0
 800efa0:	460c      	mov	r4, r1
 800efa2:	4293      	cmp	r3, r2
 800efa4:	bf94      	ite	ls
 800efa6:	18ce      	addls	r6, r1, r3
 800efa8:	188e      	addhi	r6, r1, r2
 800efaa:	42b4      	cmp	r4, r6
 800efac:	d100      	bne.n	800efb0 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800efae:	bd70      	pop	{r4, r5, r6, pc}
 800efb0:	4628      	mov	r0, r5
 800efb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800efb6:	f7ff ffd1 	bl	800ef5c <Ssd1306::PutChar(int)>
 800efba:	e7f6      	b.n	800efaa <Ssd1306::Text(char const*, unsigned int)+0x10>

0800efbc <Ssd1306::InitMembers()>:
 800efbc:	7c03      	ldrb	r3, [r0, #16]
 800efbe:	b14b      	cbz	r3, 800efd4 <Ssd1306::InitMembers()+0x18>
 800efc0:	3b01      	subs	r3, #1
 800efc2:	2b01      	cmp	r3, #1
 800efc4:	d909      	bls.n	800efda <Ssd1306::InitMembers()+0x1e>
 800efc6:	2308      	movs	r3, #8
 800efc8:	2204      	movs	r2, #4
 800efca:	2115      	movs	r1, #21
 800efcc:	7143      	strb	r3, [r0, #5]
 800efce:	7101      	strb	r1, [r0, #4]
 800efd0:	6142      	str	r2, [r0, #20]
 800efd2:	4770      	bx	lr
 800efd4:	2308      	movs	r3, #8
 800efd6:	461a      	mov	r2, r3
 800efd8:	e7f7      	b.n	800efca <Ssd1306::InitMembers()+0xe>
 800efda:	2304      	movs	r3, #4
 800efdc:	e7fb      	b.n	800efd6 <Ssd1306::InitMembers()+0x1a>
	...

0800efe0 <Ssd1306::Ssd1306(TOledPanel)>:
 800efe0:	4a08      	ldr	r2, [pc, #32]	; (800f004 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800efe2:	b508      	push	{r3, lr}
 800efe4:	6002      	str	r2, [r0, #0]
 800efe6:	227f      	movs	r2, #127	; 0x7f
 800efe8:	80c2      	strh	r2, [r0, #6]
 800efea:	223c      	movs	r2, #60	; 0x3c
 800efec:	7202      	strb	r2, [r0, #8]
 800efee:	4a06      	ldr	r2, [pc, #24]	; (800f008 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800eff0:	7401      	strb	r1, [r0, #16]
 800eff2:	60c2      	str	r2, [r0, #12]
 800eff4:	2200      	movs	r2, #0
 800eff6:	7442      	strb	r2, [r0, #17]
 800eff8:	4a04      	ldr	r2, [pc, #16]	; (800f00c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800effa:	6010      	str	r0, [r2, #0]
 800effc:	f7ff ffde 	bl	800efbc <Ssd1306::InitMembers()>
 800f000:	bd08      	pop	{r3, pc}
 800f002:	bf00      	nop
 800f004:	08013b64 	stmdaeq	r1, {r2, r5, r6, r8, r9, fp, ip, sp}
 800f008:	00061a80 	andeq	r1, r6, r0, lsl #21
 800f00c:	2000a02c 	andcs	sl, r0, ip, lsr #32

0800f010 <Ssd1306::SendCommand(unsigned char)>:
 800f010:	2300      	movs	r3, #0
 800f012:	b507      	push	{r0, r1, r2, lr}
 800f014:	3008      	adds	r0, #8
 800f016:	f88d 3004 	strb.w	r3, [sp, #4]
 800f01a:	f88d 1005 	strb.w	r1, [sp, #5]
 800f01e:	f7ff ff93 	bl	800ef48 <HAL_I2C::Setup()>
 800f022:	2102      	movs	r1, #2
 800f024:	a801      	add	r0, sp, #4
 800f026:	f002 f939 	bl	801129c <gd32_i2c_write>
 800f02a:	b003      	add	sp, #12
 800f02c:	f85d fb04 	ldr.w	pc, [sp], #4

0800f030 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800f030:	2914      	cmp	r1, #20
 800f032:	b570      	push	{r4, r5, r6, lr}
 800f034:	4605      	mov	r5, r0
 800f036:	4616      	mov	r6, r2
 800f038:	d81c      	bhi.n	800f074 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f03a:	7943      	ldrb	r3, [r0, #5]
 800f03c:	4293      	cmp	r3, r2
 800f03e:	d919      	bls.n	800f074 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f040:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f044:	7c43      	ldrb	r3, [r0, #17]
 800f046:	004c      	lsls	r4, r1, #1
 800f048:	b2e4      	uxtb	r4, r4
 800f04a:	b10b      	cbz	r3, 800f050 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800f04c:	3404      	adds	r4, #4
 800f04e:	b2e4      	uxtb	r4, r4
 800f050:	4628      	mov	r0, r5
 800f052:	f004 010e 	and.w	r1, r4, #14
 800f056:	f7ff ffdb 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f05a:	0921      	lsrs	r1, r4, #4
 800f05c:	4628      	mov	r0, r5
 800f05e:	f041 0110 	orr.w	r1, r1, #16
 800f062:	f7ff ffd5 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f066:	4628      	mov	r0, r5
 800f068:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800f06c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f070:	f7ff bfce 	b.w	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f074:	bd70      	pop	{r4, r5, r6, pc}

0800f076 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800f076:	b570      	push	{r4, r5, r6, lr}
 800f078:	461e      	mov	r6, r3
 800f07a:	7943      	ldrb	r3, [r0, #5]
 800f07c:	4604      	mov	r4, r0
 800f07e:	428b      	cmp	r3, r1
 800f080:	4615      	mov	r5, r2
 800f082:	d30b      	bcc.n	800f09c <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 800f084:	3901      	subs	r1, #1
 800f086:	b2ca      	uxtb	r2, r1
 800f088:	2100      	movs	r1, #0
 800f08a:	f7ff ffd1 	bl	800f030 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f08e:	4632      	mov	r2, r6
 800f090:	4629      	mov	r1, r5
 800f092:	4620      	mov	r0, r4
 800f094:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f098:	f7ff bf7f 	b.w	800ef9a <Ssd1306::Text(char const*, unsigned int)>
 800f09c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f0a0 <Ssd1306::ClearLine(unsigned char)>:
 800f0a0:	b538      	push	{r3, r4, r5, lr}
 800f0a2:	7943      	ldrb	r3, [r0, #5]
 800f0a4:	4605      	mov	r5, r0
 800f0a6:	428b      	cmp	r3, r1
 800f0a8:	d314      	bcc.n	800f0d4 <Ssd1306::ClearLine(unsigned char)+0x34>
 800f0aa:	3901      	subs	r1, #1
 800f0ac:	b2cc      	uxtb	r4, r1
 800f0ae:	4622      	mov	r2, r4
 800f0b0:	2100      	movs	r1, #0
 800f0b2:	f7ff ffbd 	bl	800f030 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f0b6:	f105 0008 	add.w	r0, r5, #8
 800f0ba:	f7ff ff45 	bl	800ef48 <HAL_I2C::Setup()>
 800f0be:	2181      	movs	r1, #129	; 0x81
 800f0c0:	4805      	ldr	r0, [pc, #20]	; (800f0d8 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800f0c2:	f002 f8eb 	bl	801129c <gd32_i2c_write>
 800f0c6:	4622      	mov	r2, r4
 800f0c8:	4628      	mov	r0, r5
 800f0ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f0ce:	2100      	movs	r1, #0
 800f0d0:	f7ff bfae 	b.w	800f030 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f0d4:	bd38      	pop	{r3, r4, r5, pc}
 800f0d6:	bf00      	nop
 800f0d8:	20009fa4 	andcs	r9, r0, r4, lsr #31

0800f0dc <Ssd1306::SetSleep(bool)>:
 800f0dc:	b111      	cbz	r1, 800f0e4 <Ssd1306::SetSleep(bool)+0x8>
 800f0de:	21ae      	movs	r1, #174	; 0xae
 800f0e0:	f7ff bf96 	b.w	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f0e4:	21af      	movs	r1, #175	; 0xaf
 800f0e6:	e7fb      	b.n	800f0e0 <Ssd1306::SetSleep(bool)+0x4>

0800f0e8 <Ssd1306::SetContrast(unsigned char)>:
 800f0e8:	b538      	push	{r3, r4, r5, lr}
 800f0ea:	4604      	mov	r4, r0
 800f0ec:	460d      	mov	r5, r1
 800f0ee:	7181      	strb	r1, [r0, #6]
 800f0f0:	2181      	movs	r1, #129	; 0x81
 800f0f2:	f7ff ff8d 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f0f6:	4629      	mov	r1, r5
 800f0f8:	4620      	mov	r0, r4
 800f0fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f0fe:	f7ff bf87 	b.w	800f010 <Ssd1306::SendCommand(unsigned char)>

0800f102 <Ssd1306::SetFlipVertically(bool)>:
 800f102:	b510      	push	{r4, lr}
 800f104:	4604      	mov	r4, r0
 800f106:	71c1      	strb	r1, [r0, #7]
 800f108:	b141      	cbz	r1, 800f11c <Ssd1306::SetFlipVertically(bool)+0x1a>
 800f10a:	21c0      	movs	r1, #192	; 0xc0
 800f10c:	f7ff ff80 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f110:	21a0      	movs	r1, #160	; 0xa0
 800f112:	4620      	mov	r0, r4
 800f114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f118:	f7ff bf7a 	b.w	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f11c:	21c8      	movs	r1, #200	; 0xc8
 800f11e:	f7ff ff77 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f122:	21a1      	movs	r1, #161	; 0xa1
 800f124:	e7f5      	b.n	800f112 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800f128 <Ssd1306::CheckSH1106()>:
 800f128:	b530      	push	{r4, r5, lr}
 800f12a:	4604      	mov	r4, r0
 800f12c:	b087      	sub	sp, #28
 800f12e:	2100      	movs	r1, #0
 800f130:	f7ff ff6e 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f134:	2190      	movs	r1, #144	; 0x90
 800f136:	4620      	mov	r0, r4
 800f138:	f7ff ff6a 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f13c:	21b0      	movs	r1, #176	; 0xb0
 800f13e:	4620      	mov	r0, r4
 800f140:	f7ff ff66 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f144:	4b22      	ldr	r3, [pc, #136]	; (800f1d0 <Ssd1306::CheckSH1106()+0xa8>)
 800f146:	f104 0508 	add.w	r5, r4, #8
 800f14a:	6818      	ldr	r0, [r3, #0]
 800f14c:	791b      	ldrb	r3, [r3, #4]
 800f14e:	9002      	str	r0, [sp, #8]
 800f150:	4628      	mov	r0, r5
 800f152:	f88d 300c 	strb.w	r3, [sp, #12]
 800f156:	f7ff fef7 	bl	800ef48 <HAL_I2C::Setup()>
 800f15a:	2105      	movs	r1, #5
 800f15c:	a802      	add	r0, sp, #8
 800f15e:	f002 f89d 	bl	801129c <gd32_i2c_write>
 800f162:	2100      	movs	r1, #0
 800f164:	4620      	mov	r0, r4
 800f166:	f7ff ff53 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f16a:	2190      	movs	r1, #144	; 0x90
 800f16c:	4620      	mov	r0, r4
 800f16e:	f7ff ff4f 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f172:	21b0      	movs	r1, #176	; 0xb0
 800f174:	4620      	mov	r0, r4
 800f176:	f7ff ff4b 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f17a:	2300      	movs	r3, #0
 800f17c:	9304      	str	r3, [sp, #16]
 800f17e:	f88d 3014 	strb.w	r3, [sp, #20]
 800f182:	2340      	movs	r3, #64	; 0x40
 800f184:	4628      	mov	r0, r5
 800f186:	f88d 3007 	strb.w	r3, [sp, #7]
 800f18a:	f7ff fedd 	bl	800ef48 <HAL_I2C::Setup()>
 800f18e:	2101      	movs	r1, #1
 800f190:	f10d 0007 	add.w	r0, sp, #7
 800f194:	f002 f882 	bl	801129c <gd32_i2c_write>
 800f198:	4628      	mov	r0, r5
 800f19a:	f7ff fed5 	bl	800ef48 <HAL_I2C::Setup()>
 800f19e:	2105      	movs	r1, #5
 800f1a0:	a804      	add	r0, sp, #16
 800f1a2:	f002 f8e1 	bl	8011368 <gd32_i2c_read>
 800f1a6:	2004      	movs	r0, #4
 800f1a8:	aa02      	add	r2, sp, #8
 800f1aa:	a904      	add	r1, sp, #16
 800f1ac:	3801      	subs	r0, #1
 800f1ae:	d201      	bcs.n	800f1b4 <Ssd1306::CheckSH1106()+0x8c>
 800f1b0:	2300      	movs	r3, #0
 800f1b2:	e006      	b.n	800f1c2 <Ssd1306::CheckSH1106()+0x9a>
 800f1b4:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800f1b8:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800f1bc:	42ab      	cmp	r3, r5
 800f1be:	d0f5      	beq.n	800f1ac <Ssd1306::CheckSH1106()+0x84>
 800f1c0:	1b5b      	subs	r3, r3, r5
 800f1c2:	fab3 f383 	clz	r3, r3
 800f1c6:	095b      	lsrs	r3, r3, #5
 800f1c8:	7463      	strb	r3, [r4, #17]
 800f1ca:	b007      	add	sp, #28
 800f1cc:	bd30      	pop	{r4, r5, pc}
 800f1ce:	bf00      	nop
 800f1d0:	08013885 	stmdaeq	r1, {r0, r2, r7, fp, ip, sp}

0800f1d4 <Ssd1306::Cls()>:
 800f1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1d8:	4604      	mov	r4, r0
 800f1da:	2600      	movs	r6, #0
 800f1dc:	7c45      	ldrb	r5, [r0, #17]
 800f1de:	00ad      	lsls	r5, r5, #2
 800f1e0:	b2ed      	uxtb	r5, r5
 800f1e2:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800f1e6:	f045 0810 	orr.w	r8, r5, #16
 800f1ea:	b2ff      	uxtb	r7, r7
 800f1ec:	6963      	ldr	r3, [r4, #20]
 800f1ee:	4629      	mov	r1, r5
 800f1f0:	42b3      	cmp	r3, r6
 800f1f2:	4620      	mov	r0, r4
 800f1f4:	d80b      	bhi.n	800f20e <Ssd1306::Cls()+0x3a>
 800f1f6:	f7ff ff0b 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f1fa:	4641      	mov	r1, r8
 800f1fc:	4620      	mov	r0, r4
 800f1fe:	f7ff ff07 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f202:	4620      	mov	r0, r4
 800f204:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f208:	21b0      	movs	r1, #176	; 0xb0
 800f20a:	f7ff bf01 	b.w	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f20e:	f7ff feff 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f212:	4641      	mov	r1, r8
 800f214:	4620      	mov	r0, r4
 800f216:	f7ff fefb 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f21a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800f21e:	4620      	mov	r0, r4
 800f220:	b2c9      	uxtb	r1, r1
 800f222:	f7ff fef5 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f226:	7c23      	ldrb	r3, [r4, #16]
 800f228:	b123      	cbz	r3, 800f234 <Ssd1306::Cls()+0x60>
 800f22a:	3b01      	subs	r3, #1
 800f22c:	2b01      	cmp	r3, #1
 800f22e:	d901      	bls.n	800f234 <Ssd1306::Cls()+0x60>
 800f230:	3601      	adds	r6, #1
 800f232:	e7db      	b.n	800f1ec <Ssd1306::Cls()+0x18>
 800f234:	f104 0008 	add.w	r0, r4, #8
 800f238:	f7ff fe86 	bl	800ef48 <HAL_I2C::Setup()>
 800f23c:	4639      	mov	r1, r7
 800f23e:	4802      	ldr	r0, [pc, #8]	; (800f248 <Ssd1306::Cls()+0x74>)
 800f240:	f002 f82c 	bl	801129c <gd32_i2c_write>
 800f244:	e7f4      	b.n	800f230 <Ssd1306::Cls()+0x5c>
 800f246:	bf00      	nop
 800f248:	20009fa4 	andcs	r9, r0, r4, lsr #31

0800f24c <Ssd1306::Start()>:
 800f24c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f24e:	7a04      	ldrb	r4, [r0, #8]
 800f250:	68c6      	ldr	r6, [r0, #12]
 800f252:	4605      	mov	r5, r0
 800f254:	4620      	mov	r0, r4
 800f256:	f002 f81b 	bl	8011290 <gd32_i2c_set_address>
 800f25a:	4630      	mov	r0, r6
 800f25c:	f002 f810 	bl	8011280 <gd32_i2c_set_baudrate>
 800f260:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f264:	2b07      	cmp	r3, #7
 800f266:	d902      	bls.n	800f26e <Ssd1306::Start()+0x22>
 800f268:	3c50      	subs	r4, #80	; 0x50
 800f26a:	2c0f      	cmp	r4, #15
 800f26c:	d80f      	bhi.n	800f28e <Ssd1306::Start()+0x42>
 800f26e:	2101      	movs	r1, #1
 800f270:	f10d 0007 	add.w	r0, sp, #7
 800f274:	f002 f878 	bl	8011368 <gd32_i2c_read>
 800f278:	fab0 f480 	clz	r4, r0
 800f27c:	0964      	lsrs	r4, r4, #5
 800f27e:	b35c      	cbz	r4, 800f2d8 <Ssd1306::Start()+0x8c>
 800f280:	7c2e      	ldrb	r6, [r5, #16]
 800f282:	b14e      	cbz	r6, 800f298 <Ssd1306::Start()+0x4c>
 800f284:	3e01      	subs	r6, #1
 800f286:	2e01      	cmp	r6, #1
 800f288:	d929      	bls.n	800f2de <Ssd1306::Start()+0x92>
 800f28a:	2400      	movs	r4, #0
 800f28c:	e024      	b.n	800f2d8 <Ssd1306::Start()+0x8c>
 800f28e:	2100      	movs	r1, #0
 800f290:	4608      	mov	r0, r1
 800f292:	f002 f803 	bl	801129c <gd32_i2c_write>
 800f296:	e7ef      	b.n	800f278 <Ssd1306::Start()+0x2c>
 800f298:	4f16      	ldr	r7, [pc, #88]	; (800f2f4 <Ssd1306::Start()+0xa8>)
 800f29a:	4628      	mov	r0, r5
 800f29c:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f2a0:	3601      	adds	r6, #1
 800f2a2:	f7ff feb5 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f2a6:	2e18      	cmp	r6, #24
 800f2a8:	d1f7      	bne.n	800f29a <Ssd1306::Start()+0x4e>
 800f2aa:	2300      	movs	r3, #0
 800f2ac:	4a12      	ldr	r2, [pc, #72]	; (800f2f8 <Ssd1306::Start()+0xac>)
 800f2ae:	4618      	mov	r0, r3
 800f2b0:	4611      	mov	r1, r2
 800f2b2:	3301      	adds	r3, #1
 800f2b4:	2b86      	cmp	r3, #134	; 0x86
 800f2b6:	f802 0b01 	strb.w	r0, [r2], #1
 800f2ba:	d1fa      	bne.n	800f2b2 <Ssd1306::Start()+0x66>
 800f2bc:	2340      	movs	r3, #64	; 0x40
 800f2be:	4628      	mov	r0, r5
 800f2c0:	700b      	strb	r3, [r1, #0]
 800f2c2:	f7ff ff31 	bl	800f128 <Ssd1306::CheckSH1106()>
 800f2c6:	4628      	mov	r0, r5
 800f2c8:	f7ff ff84 	bl	800f1d4 <Ssd1306::Cls()>
 800f2cc:	21af      	movs	r1, #175	; 0xaf
 800f2ce:	4628      	mov	r0, r5
 800f2d0:	f7ff fe9e 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f2d4:	2301      	movs	r3, #1
 800f2d6:	71eb      	strb	r3, [r5, #7]
 800f2d8:	4620      	mov	r0, r4
 800f2da:	b003      	add	sp, #12
 800f2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f2de:	2600      	movs	r6, #0
 800f2e0:	4f06      	ldr	r7, [pc, #24]	; (800f2fc <Ssd1306::Start()+0xb0>)
 800f2e2:	4628      	mov	r0, r5
 800f2e4:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f2e8:	3601      	adds	r6, #1
 800f2ea:	f7ff fe91 	bl	800f010 <Ssd1306::SendCommand(unsigned char)>
 800f2ee:	2e18      	cmp	r6, #24
 800f2f0:	d1f7      	bne.n	800f2e2 <Ssd1306::Start()+0x96>
 800f2f2:	e7da      	b.n	800f2aa <Ssd1306::Start()+0x5e>
 800f2f4:	08013b44 	stmdaeq	r1, {r2, r6, r8, r9, fp, ip, sp}
 800f2f8:	20009fa4 	andcs	r9, r0, r4, lsr #31
 800f2fc:	08013b2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, ip, sp}

0800f300 <console_putc>:
 800f300:	f000 bdb0 	b.w	800fe64 <uart0_putc>

0800f304 <console_puts>:
 800f304:	f000 bdce 	b.w	800fea4 <uart0_puts>

0800f308 <console_set_fg_color>:
 800f308:	2807      	cmp	r0, #7
 800f30a:	d810      	bhi.n	800f32e <console_set_fg_color+0x26>
 800f30c:	e8df f000 	tbb	[pc, r0]
 800f310:	0b090704 	bleq	8250f28 <__exidx_end+0x23d30c>
 800f314:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800f2e0 <Ssd1306::Start()+0x94>
 800f318:	4806      	ldr	r0, [pc, #24]	; (800f334 <console_set_fg_color+0x2c>)
 800f31a:	f000 bdc3 	b.w	800fea4 <uart0_puts>
 800f31e:	4806      	ldr	r0, [pc, #24]	; (800f338 <console_set_fg_color+0x30>)
 800f320:	e7fb      	b.n	800f31a <console_set_fg_color+0x12>
 800f322:	4806      	ldr	r0, [pc, #24]	; (800f33c <console_set_fg_color+0x34>)
 800f324:	e7f9      	b.n	800f31a <console_set_fg_color+0x12>
 800f326:	4806      	ldr	r0, [pc, #24]	; (800f340 <console_set_fg_color+0x38>)
 800f328:	e7f7      	b.n	800f31a <console_set_fg_color+0x12>
 800f32a:	4806      	ldr	r0, [pc, #24]	; (800f344 <console_set_fg_color+0x3c>)
 800f32c:	e7f5      	b.n	800f31a <console_set_fg_color+0x12>
 800f32e:	4806      	ldr	r0, [pc, #24]	; (800f348 <console_set_fg_color+0x40>)
 800f330:	e7f3      	b.n	800f31a <console_set_fg_color+0x12>
 800f332:	bf00      	nop
 800f334:	08013ba2 	stmdaeq	r1, {r1, r5, r7, r8, r9, fp, ip, sp}
 800f338:	08013ba8 	stmdaeq	r1, {r3, r5, r7, r8, r9, fp, ip, sp}
 800f33c:	08013bae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, fp, ip, sp}
 800f340:	08013bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, sp}
 800f344:	08011e9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip}
 800f348:	08013bba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, fp, ip, sp}

0800f34c <console_error>:
 800f34c:	b510      	push	{r4, lr}
 800f34e:	4604      	mov	r4, r0
 800f350:	4805      	ldr	r0, [pc, #20]	; (800f368 <console_error+0x1c>)
 800f352:	f000 fda7 	bl	800fea4 <uart0_puts>
 800f356:	4620      	mov	r0, r4
 800f358:	f000 fda4 	bl	800fea4 <uart0_puts>
 800f35c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f360:	4802      	ldr	r0, [pc, #8]	; (800f36c <console_error+0x20>)
 800f362:	f000 bd9f 	b.w	800fea4 <uart0_puts>
 800f366:	bf00      	nop
 800f368:	08013ba8 	stmdaeq	r1, {r3, r5, r7, r8, r9, fp, ip, sp}
 800f36c:	08011e9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip}

0800f370 <console_status>:
 800f370:	b510      	push	{r4, lr}
 800f372:	460c      	mov	r4, r1
 800f374:	b280      	uxth	r0, r0
 800f376:	f7ff ffc7 	bl	800f308 <console_set_fg_color>
 800f37a:	4807      	ldr	r0, [pc, #28]	; (800f398 <console_status+0x28>)
 800f37c:	f000 fd92 	bl	800fea4 <uart0_puts>
 800f380:	4620      	mov	r0, r4
 800f382:	f000 fd8f 	bl	800fea4 <uart0_puts>
 800f386:	200a      	movs	r0, #10
 800f388:	f000 fd6c 	bl	800fe64 <uart0_putc>
 800f38c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f390:	4802      	ldr	r0, [pc, #8]	; (800f39c <console_status+0x2c>)
 800f392:	f000 bd87 	b.w	800fea4 <uart0_puts>
 800f396:	bf00      	nop
 800f398:	08013b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, sp}
 800f39c:	08011e9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip}

0800f3a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800f3a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3a4:	4617      	mov	r7, r2
 800f3a6:	461e      	mov	r6, r3
 800f3a8:	4d14      	ldr	r5, [pc, #80]	; (800f3fc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800f3aa:	4b15      	ldr	r3, [pc, #84]	; (800f400 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800f3ac:	b086      	sub	sp, #24
 800f3ae:	6018      	str	r0, [r3, #0]
 800f3b0:	4604      	mov	r4, r0
 800f3b2:	f105 0803 	add.w	r8, r5, #3
 800f3b6:	2203      	movs	r2, #3
 800f3b8:	4628      	mov	r0, r5
 800f3ba:	f000 f9d0 	bl	800f75e <memmove>
 800f3be:	4639      	mov	r1, r7
 800f3c0:	220b      	movs	r2, #11
 800f3c2:	4640      	mov	r0, r8
 800f3c4:	f000 f9cb 	bl	800f75e <memmove>
 800f3c8:	f105 030e 	add.w	r3, r5, #14
 800f3cc:	4631      	mov	r1, r6
 800f3ce:	2208      	movs	r2, #8
 800f3d0:	4618      	mov	r0, r3
 800f3d2:	f000 f9c4 	bl	800f75e <memmove>
 800f3d6:	2308      	movs	r3, #8
 800f3d8:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800f3dc:	230b      	movs	r3, #11
 800f3de:	9302      	str	r3, [sp, #8]
 800f3e0:	4b08      	ldr	r3, [pc, #32]	; (800f404 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800f3e2:	9005      	str	r0, [sp, #20]
 800f3e4:	e9cd 5300 	strd	r5, r3, [sp]
 800f3e8:	213f      	movs	r1, #63	; 0x3f
 800f3ea:	2303      	movs	r3, #3
 800f3ec:	4a06      	ldr	r2, [pc, #24]	; (800f408 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800f3ee:	4807      	ldr	r0, [pc, #28]	; (800f40c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800f3f0:	f000 fc0e 	bl	800fc10 <snprintf>
 800f3f4:	4620      	mov	r0, r4
 800f3f6:	b006      	add	sp, #24
 800f3f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f3fc:	2000a030 	andcs	sl, r0, r0, lsr r0
 800f400:	2000a088 	andcs	sl, r0, r8, lsl #1
 800f404:	0801258e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, sp}
 800f408:	08013bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, ip, sp}
 800f40c:	2000a046 	andcs	sl, r0, r6, asr #32

0800f410 <FirmwareVersion::Print(char const*)>:
 800f410:	b510      	push	{r4, lr}
 800f412:	460c      	mov	r4, r1
 800f414:	4804      	ldr	r0, [pc, #16]	; (800f428 <FirmwareVersion::Print(char const*)+0x18>)
 800f416:	f000 fc23 	bl	800fc60 <puts>
 800f41a:	b124      	cbz	r4, 800f426 <FirmwareVersion::Print(char const*)+0x16>
 800f41c:	4620      	mov	r0, r4
 800f41e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f422:	f000 bc1d 	b.w	800fc60 <puts>
 800f426:	bd10      	pop	{r4, pc}
 800f428:	2000a046 	andcs	sl, r0, r6, asr #32

0800f42c <LedBlink::LedBlink()>:
 800f42c:	b538      	push	{r3, r4, r5, lr}
 800f42e:	2205      	movs	r2, #5
 800f430:	2300      	movs	r3, #0
 800f432:	e9c0 3200 	strd	r3, r2, [r0]
 800f436:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800f43a:	6083      	str	r3, [r0, #8]
 800f43c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800f440:	6143      	str	r3, [r0, #20]
 800f442:	4b09      	ldr	r3, [pc, #36]	; (800f468 <LedBlink::LedBlink()+0x3c>)
 800f444:	4d09      	ldr	r5, [pc, #36]	; (800f46c <LedBlink::LedBlink()+0x40>)
 800f446:	4604      	mov	r4, r0
 800f448:	6018      	str	r0, [r3, #0]
 800f44a:	f240 6004 	movw	r0, #1540	; 0x604
 800f44e:	f001 fb57 	bl	8010b00 <rcu_periph_clock_enable>
 800f452:	4628      	mov	r0, r5
 800f454:	2301      	movs	r3, #1
 800f456:	2203      	movs	r2, #3
 800f458:	2110      	movs	r1, #16
 800f45a:	f001 fab9 	bl	80109d0 <gpio_init>
 800f45e:	2301      	movs	r3, #1
 800f460:	4620      	mov	r0, r4
 800f462:	616b      	str	r3, [r5, #20]
 800f464:	bd38      	pop	{r3, r4, r5, pc}
 800f466:	bf00      	nop
 800f468:	2000a08c 	andcs	sl, r0, ip, lsl #1
 800f46c:	40011000 	andmi	r1, r1, r0

0800f470 <LedBlink::SetMode(ledblink::Mode)>:
 800f470:	6843      	ldr	r3, [r0, #4]
 800f472:	428b      	cmp	r3, r1
 800f474:	d02f      	beq.n	800f4d6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f476:	6041      	str	r1, [r0, #4]
 800f478:	2904      	cmp	r1, #4
 800f47a:	d822      	bhi.n	800f4c2 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800f47c:	e8df f001 	tbb	[pc, r1]
 800f480:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800f484:	23ff001d 	mvnscs	r0, #29
 800f488:	6003      	str	r3, [r0, #0]
 800f48a:	2300      	movs	r3, #0
 800f48c:	2201      	movs	r2, #1
 800f48e:	60c3      	str	r3, [r0, #12]
 800f490:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f494:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f498:	611a      	str	r2, [r3, #16]
 800f49a:	6880      	ldr	r0, [r0, #8]
 800f49c:	b1d8      	cbz	r0, 800f4d6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f49e:	6803      	ldr	r3, [r0, #0]
 800f4a0:	689b      	ldr	r3, [r3, #8]
 800f4a2:	4718      	bx	r3
 800f4a4:	2301      	movs	r3, #1
 800f4a6:	6003      	str	r3, [r0, #0]
 800f4a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f4ac:	60c3      	str	r3, [r0, #12]
 800f4ae:	e7f4      	b.n	800f49a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f4b0:	2303      	movs	r3, #3
 800f4b2:	6003      	str	r3, [r0, #0]
 800f4b4:	f240 134d 	movw	r3, #333	; 0x14d
 800f4b8:	e7f8      	b.n	800f4ac <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f4ba:	2305      	movs	r3, #5
 800f4bc:	6003      	str	r3, [r0, #0]
 800f4be:	23c8      	movs	r3, #200	; 0xc8
 800f4c0:	e7f4      	b.n	800f4ac <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f4c2:	2300      	movs	r3, #0
 800f4c4:	2201      	movs	r2, #1
 800f4c6:	6003      	str	r3, [r0, #0]
 800f4c8:	60c3      	str	r3, [r0, #12]
 800f4ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f4ce:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f4d2:	615a      	str	r2, [r3, #20]
 800f4d4:	e7e1      	b.n	800f49a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f4d6:	4770      	bx	lr

0800f4d8 <Hardware::Hardware()>:
 800f4d8:	b570      	push	{r4, r5, r6, lr}
 800f4da:	2400      	movs	r4, #0
 800f4dc:	4b24      	ldr	r3, [pc, #144]	; (800f570 <Hardware::Hardware()+0x98>)
 800f4de:	b090      	sub	sp, #64	; 0x40
 800f4e0:	7004      	strb	r4, [r0, #0]
 800f4e2:	6018      	str	r0, [r3, #0]
 800f4e4:	4605      	mov	r5, r0
 800f4e6:	f7f8 f80b 	bl	8007500 <console_init>
 800f4ea:	f000 fceb 	bl	800fec4 <systick_config>
 800f4ee:	f002 f8b9 	bl	8011664 <udelay_init()>
 800f4f2:	f002 f8b5 	bl	8011660 <micros_init()>
 800f4f6:	f240 701b 	movw	r0, #1819	; 0x71b
 800f4fa:	f001 fb01 	bl	8010b00 <rcu_periph_clock_enable>
 800f4fe:	f240 701c 	movw	r0, #1820	; 0x71c
 800f502:	f001 fafd 	bl	8010b00 <rcu_periph_clock_enable>
 800f506:	4e1b      	ldr	r6, [pc, #108]	; (800f574 <Hardware::Hardware()+0x9c>)
 800f508:	f001 faf2 	bl	8010af0 <pmu_backup_write_enable>
 800f50c:	4621      	mov	r1, r4
 800f50e:	2002      	movs	r0, #2
 800f510:	f000 fd76 	bl	8010000 <bkp_data_write>
 800f514:	f240 7004 	movw	r0, #1796	; 0x704
 800f518:	f001 faf2 	bl	8010b00 <rcu_periph_clock_enable>
 800f51c:	4630      	mov	r0, r6
 800f51e:	f001 fc3d 	bl	8010d9c <timer_deinit>
 800f522:	236b      	movs	r3, #107	; 0x6b
 800f524:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f528:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f52c:	a903      	add	r1, sp, #12
 800f52e:	4630      	mov	r0, r6
 800f530:	9305      	str	r3, [sp, #20]
 800f532:	f001 fc95 	bl	8010e60 <timer_init>
 800f536:	4630      	mov	r0, r6
 800f538:	f001 fcea 	bl	8010f10 <timer_enable>
 800f53c:	f001 fe12 	bl	8011164 <gd32_adc_init()>
 800f540:	2219      	movs	r2, #25
 800f542:	230b      	movs	r3, #11
 800f544:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800f548:	237a      	movs	r3, #122	; 0x7a
 800f54a:	a807      	add	r0, sp, #28
 800f54c:	930c      	str	r3, [sp, #48]	; 0x30
 800f54e:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800f552:	9407      	str	r4, [sp, #28]
 800f554:	940f      	str	r4, [sp, #60]	; 0x3c
 800f556:	f000 fbdb 	bl	800fd10 <mktime>
 800f55a:	4621      	mov	r1, r4
 800f55c:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800f560:	a801      	add	r0, sp, #4
 800f562:	f000 fc4b 	bl	800fdfc <settimeofday>
 800f566:	f001 fe57 	bl	8011218 <gd32_i2c_begin>
 800f56a:	4628      	mov	r0, r5
 800f56c:	b010      	add	sp, #64	; 0x40
 800f56e:	bd70      	pop	{r4, r5, r6, pc}
 800f570:	2000a090 	mulcs	r0, r0, r0
 800f574:	40001000 	andmi	r1, r0, r0

0800f578 <Hardware::GetUuid(unsigned char*)>:
 800f578:	4a0c      	ldr	r2, [pc, #48]	; (800f5ac <Hardware::GetUuid(unsigned char*)+0x34>)
 800f57a:	b084      	sub	sp, #16
 800f57c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800f580:	9300      	str	r3, [sp, #0]
 800f582:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 800f586:	9001      	str	r0, [sp, #4]
 800f588:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800f58c:	4403      	add	r3, r0
 800f58e:	4413      	add	r3, r2
 800f590:	9202      	str	r2, [sp, #8]
 800f592:	466a      	mov	r2, sp
 800f594:	9303      	str	r3, [sp, #12]
 800f596:	1e4b      	subs	r3, r1, #1
 800f598:	310f      	adds	r1, #15
 800f59a:	428b      	cmp	r3, r1
 800f59c:	d101      	bne.n	800f5a2 <Hardware::GetUuid(unsigned char*)+0x2a>
 800f59e:	b004      	add	sp, #16
 800f5a0:	4770      	bx	lr
 800f5a2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f5a6:	f803 0f01 	strb.w	r0, [r3, #1]!
 800f5aa:	e7f6      	b.n	800f59a <Hardware::GetUuid(unsigned char*)+0x22>
 800f5ac:	1ffff000 	svcne	0x00fff000

0800f5b0 <Hardware::Reboot()>:
 800f5b0:	b508      	push	{r3, lr}
 800f5b2:	2300      	movs	r3, #0
 800f5b4:	4604      	mov	r4, r0
 800f5b6:	7003      	strb	r3, [r0, #0]
 800f5b8:	2104      	movs	r1, #4
 800f5ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f5be:	f001 f9dd 	bl	801097c <fwdgt_config>
 800f5c2:	4620      	mov	r0, r4
 800f5c4:	f7f8 fbb2 	bl	8007d2c <Hardware::RebootHandler()>
 800f5c8:	2102      	movs	r1, #2
 800f5ca:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f5ce:	f001 f9d5 	bl	801097c <fwdgt_config>
 800f5d2:	2801      	cmp	r0, #1
 800f5d4:	bf0c      	ite	eq
 800f5d6:	2301      	moveq	r3, #1
 800f5d8:	2300      	movne	r3, #0
 800f5da:	7023      	strb	r3, [r4, #0]
 800f5dc:	d101      	bne.n	800f5e2 <Hardware::Reboot()+0x32>
 800f5de:	f001 f9bd 	bl	801095c <fwdgt_enable>
 800f5e2:	2208      	movs	r2, #8
 800f5e4:	4b0d      	ldr	r3, [pc, #52]	; (800f61c <Hardware::Reboot()+0x6c>)
 800f5e6:	2501      	movs	r5, #1
 800f5e8:	681b      	ldr	r3, [r3, #0]
 800f5ea:	480d      	ldr	r0, [pc, #52]	; (800f620 <Hardware::Reboot()+0x70>)
 800f5ec:	601a      	str	r2, [r3, #0]
 800f5ee:	227d      	movs	r2, #125	; 0x7d
 800f5f0:	490c      	ldr	r1, [pc, #48]	; (800f624 <Hardware::Reboot()+0x74>)
 800f5f2:	60da      	str	r2, [r3, #12]
 800f5f4:	68dc      	ldr	r4, [r3, #12]
 800f5f6:	b904      	cbnz	r4, 800f5fa <Hardware::Reboot()+0x4a>
 800f5f8:	e7fe      	b.n	800f5f8 <Hardware::Reboot()+0x48>
 800f5fa:	6802      	ldr	r2, [r0, #0]
 800f5fc:	695e      	ldr	r6, [r3, #20]
 800f5fe:	1b92      	subs	r2, r2, r6
 800f600:	4294      	cmp	r4, r2
 800f602:	d8f8      	bhi.n	800f5f6 <Hardware::Reboot()+0x46>
 800f604:	6802      	ldr	r2, [r0, #0]
 800f606:	615a      	str	r2, [r3, #20]
 800f608:	691a      	ldr	r2, [r3, #16]
 800f60a:	2a01      	cmp	r2, #1
 800f60c:	f082 0401 	eor.w	r4, r2, #1
 800f610:	611c      	str	r4, [r3, #16]
 800f612:	bf14      	ite	ne
 800f614:	610d      	strne	r5, [r1, #16]
 800f616:	614a      	streq	r2, [r1, #20]
 800f618:	e7ec      	b.n	800f5f4 <Hardware::Reboot()+0x44>
 800f61a:	bf00      	nop
 800f61c:	2000a08c 	andcs	sl, r0, ip, lsl #1
 800f620:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800f624:	40011000 	andmi	r1, r1, r0

0800f628 <operator delete(void*)>:
 800f628:	f000 b874 	b.w	800f714 <free>

0800f62c <operator delete[](void*)>:
 800f62c:	f000 b872 	b.w	800f714 <free>

0800f630 <operator new(unsigned int)>:
 800f630:	f000 b842 	b.w	800f6b8 <malloc>

0800f634 <operator new[](unsigned int)>:
 800f634:	f000 b840 	b.w	800f6b8 <malloc>

0800f638 <inet_aton>:
 800f638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f63a:	f04f 0c0a 	mov.w	ip, #10
 800f63e:	2500      	movs	r5, #0
 800f640:	ae01      	add	r6, sp, #4
 800f642:	4603      	mov	r3, r0
 800f644:	2200      	movs	r2, #0
 800f646:	1d07      	adds	r7, r0, #4
 800f648:	e007      	b.n	800f65a <inet_aton+0x22>
 800f64a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f64e:	2b09      	cmp	r3, #9
 800f650:	d820      	bhi.n	800f694 <inet_aton+0x5c>
 800f652:	4603      	mov	r3, r0
 800f654:	fb0c 4202 	mla	r2, ip, r2, r4
 800f658:	3a30      	subs	r2, #48	; 0x30
 800f65a:	4618      	mov	r0, r3
 800f65c:	f810 4b01 	ldrb.w	r4, [r0], #1
 800f660:	2c2e      	cmp	r4, #46	; 0x2e
 800f662:	d111      	bne.n	800f688 <inet_aton+0x50>
 800f664:	3501      	adds	r5, #1
 800f666:	2d03      	cmp	r5, #3
 800f668:	f806 2b01 	strb.w	r2, [r6], #1
 800f66c:	d1e9      	bne.n	800f642 <inet_aton+0xa>
 800f66e:	2200      	movs	r2, #0
 800f670:	250a      	movs	r5, #10
 800f672:	1d1c      	adds	r4, r3, #4
 800f674:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f678:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800f67c:	d10d      	bne.n	800f69a <inet_aton+0x62>
 800f67e:	f88d 2007 	strb.w	r2, [sp, #7]
 800f682:	b9b1      	cbnz	r1, 800f6b2 <inet_aton+0x7a>
 800f684:	2001      	movs	r0, #1
 800f686:	e006      	b.n	800f696 <inet_aton+0x5e>
 800f688:	2c00      	cmp	r4, #0
 800f68a:	d0eb      	beq.n	800f664 <inet_aton+0x2c>
 800f68c:	2c0a      	cmp	r4, #10
 800f68e:	d0e9      	beq.n	800f664 <inet_aton+0x2c>
 800f690:	42b8      	cmp	r0, r7
 800f692:	d1da      	bne.n	800f64a <inet_aton+0x12>
 800f694:	2000      	movs	r0, #0
 800f696:	b003      	add	sp, #12
 800f698:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f69a:	280a      	cmp	r0, #10
 800f69c:	d0ef      	beq.n	800f67e <inet_aton+0x46>
 800f69e:	42a3      	cmp	r3, r4
 800f6a0:	d0f8      	beq.n	800f694 <inet_aton+0x5c>
 800f6a2:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800f6a6:	2e09      	cmp	r6, #9
 800f6a8:	d8f4      	bhi.n	800f694 <inet_aton+0x5c>
 800f6aa:	fb05 0202 	mla	r2, r5, r2, r0
 800f6ae:	3a30      	subs	r2, #48	; 0x30
 800f6b0:	e7e0      	b.n	800f674 <inet_aton+0x3c>
 800f6b2:	9b01      	ldr	r3, [sp, #4]
 800f6b4:	600b      	str	r3, [r1, #0]
 800f6b6:	e7e5      	b.n	800f684 <inet_aton+0x4c>

0800f6b8 <malloc>:
 800f6b8:	b510      	push	{r4, lr}
 800f6ba:	b1d8      	cbz	r0, 800f6f4 <malloc+0x3c>
 800f6bc:	4a11      	ldr	r2, [pc, #68]	; (800f704 <malloc+0x4c>)
 800f6be:	6811      	ldr	r1, [r2, #0]
 800f6c0:	b971      	cbnz	r1, 800f6e0 <malloc+0x28>
 800f6c2:	4911      	ldr	r1, [pc, #68]	; (800f708 <malloc+0x50>)
 800f6c4:	f100 021b 	add.w	r2, r0, #27
 800f6c8:	680b      	ldr	r3, [r1, #0]
 800f6ca:	4c10      	ldr	r4, [pc, #64]	; (800f70c <malloc+0x54>)
 800f6cc:	f022 020f 	bic.w	r2, r2, #15
 800f6d0:	441a      	add	r2, r3
 800f6d2:	42a2      	cmp	r2, r4
 800f6d4:	d80f      	bhi.n	800f6f6 <malloc+0x3e>
 800f6d6:	600a      	str	r2, [r1, #0]
 800f6d8:	4a0d      	ldr	r2, [pc, #52]	; (800f710 <malloc+0x58>)
 800f6da:	e9c3 2000 	strd	r2, r0, [r3]
 800f6de:	e005      	b.n	800f6ec <malloc+0x34>
 800f6e0:	4288      	cmp	r0, r1
 800f6e2:	d90a      	bls.n	800f6fa <malloc+0x42>
 800f6e4:	3208      	adds	r2, #8
 800f6e6:	e7ea      	b.n	800f6be <malloc+0x6>
 800f6e8:	6899      	ldr	r1, [r3, #8]
 800f6ea:	6051      	str	r1, [r2, #4]
 800f6ec:	2200      	movs	r2, #0
 800f6ee:	f103 000c 	add.w	r0, r3, #12
 800f6f2:	609a      	str	r2, [r3, #8]
 800f6f4:	bd10      	pop	{r4, pc}
 800f6f6:	2000      	movs	r0, #0
 800f6f8:	e7fc      	b.n	800f6f4 <malloc+0x3c>
 800f6fa:	6853      	ldr	r3, [r2, #4]
 800f6fc:	2b00      	cmp	r3, #0
 800f6fe:	d1f3      	bne.n	800f6e8 <malloc+0x30>
 800f700:	4608      	mov	r0, r1
 800f702:	e7de      	b.n	800f6c2 <malloc+0xa>
 800f704:	20000020 	andcs	r0, r0, r0, lsr #32
 800f708:	2000001c 	andcs	r0, r0, ip, lsl r0
 800f70c:	20016000 	andcs	r6, r1, r0
 800f710:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800f714 <free>:
 800f714:	b138      	cbz	r0, 800f726 <free+0x12>
 800f716:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 800f71a:	4b09      	ldr	r3, [pc, #36]	; (800f740 <free+0x2c>)
 800f71c:	429a      	cmp	r2, r3
 800f71e:	d102      	bne.n	800f726 <free+0x12>
 800f720:	4b08      	ldr	r3, [pc, #32]	; (800f744 <free+0x30>)
 800f722:	681a      	ldr	r2, [r3, #0]
 800f724:	b902      	cbnz	r2, 800f728 <free+0x14>
 800f726:	4770      	bx	lr
 800f728:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800f72c:	4291      	cmp	r1, r2
 800f72e:	d104      	bne.n	800f73a <free+0x26>
 800f730:	685a      	ldr	r2, [r3, #4]
 800f732:	380c      	subs	r0, #12
 800f734:	6082      	str	r2, [r0, #8]
 800f736:	6058      	str	r0, [r3, #4]
 800f738:	4770      	bx	lr
 800f73a:	3308      	adds	r3, #8
 800f73c:	e7f1      	b.n	800f722 <free+0xe>
 800f73e:	bf00      	nop
 800f740:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800f744:	20000020 	andcs	r0, r0, r0, lsr #32

0800f748 <memcpy>:
 800f748:	b510      	push	{r4, lr}
 800f74a:	1e43      	subs	r3, r0, #1
 800f74c:	440a      	add	r2, r1
 800f74e:	4291      	cmp	r1, r2
 800f750:	d100      	bne.n	800f754 <memcpy+0xc>
 800f752:	bd10      	pop	{r4, pc}
 800f754:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f758:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f75c:	e7f7      	b.n	800f74e <memcpy+0x6>

0800f75e <memmove>:
 800f75e:	4288      	cmp	r0, r1
 800f760:	b510      	push	{r4, lr}
 800f762:	eb01 0302 	add.w	r3, r1, r2
 800f766:	d208      	bcs.n	800f77a <memmove+0x1c>
 800f768:	1e42      	subs	r2, r0, #1
 800f76a:	4299      	cmp	r1, r3
 800f76c:	d100      	bne.n	800f770 <memmove+0x12>
 800f76e:	bd10      	pop	{r4, pc}
 800f770:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f774:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f778:	e7f7      	b.n	800f76a <memmove+0xc>
 800f77a:	4601      	mov	r1, r0
 800f77c:	4402      	add	r2, r0
 800f77e:	428a      	cmp	r2, r1
 800f780:	d0f5      	beq.n	800f76e <memmove+0x10>
 800f782:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f786:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f78a:	e7f8      	b.n	800f77e <memmove+0x20>

0800f78c <memset>:
 800f78c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f78e:	b1c2      	cbz	r2, 800f7c2 <memset+0x36>
 800f790:	4603      	mov	r3, r0
 800f792:	b2c9      	uxtb	r1, r1
 800f794:	075c      	lsls	r4, r3, #29
 800f796:	d110      	bne.n	800f7ba <memset+0x2e>
 800f798:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f79c:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f7a0:	463d      	mov	r5, r7
 800f7a2:	461e      	mov	r6, r3
 800f7a4:	f022 0407 	bic.w	r4, r2, #7
 800f7a8:	441c      	add	r4, r3
 800f7aa:	42a6      	cmp	r6, r4
 800f7ac:	d10a      	bne.n	800f7c4 <memset+0x38>
 800f7ae:	4413      	add	r3, r2
 800f7b0:	429c      	cmp	r4, r3
 800f7b2:	d006      	beq.n	800f7c2 <memset+0x36>
 800f7b4:	f804 1b01 	strb.w	r1, [r4], #1
 800f7b8:	e7fa      	b.n	800f7b0 <memset+0x24>
 800f7ba:	3a01      	subs	r2, #1
 800f7bc:	f803 1b01 	strb.w	r1, [r3], #1
 800f7c0:	d1e8      	bne.n	800f794 <memset+0x8>
 800f7c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7c4:	f846 7b08 	str.w	r7, [r6], #8
 800f7c8:	f846 5c04 	str.w	r5, [r6, #-4]
 800f7cc:	e7ed      	b.n	800f7aa <memset+0x1e>
	...

0800f7d0 <_xputch>:
 800f7d0:	4603      	mov	r3, r0
 800f7d2:	b410      	push	{r4}
 800f7d4:	4c08      	ldr	r4, [pc, #32]	; (800f7f8 <_xputch+0x28>)
 800f7d6:	68da      	ldr	r2, [r3, #12]
 800f7d8:	4608      	mov	r0, r1
 800f7da:	6821      	ldr	r1, [r4, #0]
 800f7dc:	3201      	adds	r2, #1
 800f7de:	60da      	str	r2, [r3, #12]
 800f7e0:	b139      	cbz	r1, 800f7f2 <_xputch+0x22>
 800f7e2:	691b      	ldr	r3, [r3, #16]
 800f7e4:	429a      	cmp	r2, r3
 800f7e6:	da02      	bge.n	800f7ee <_xputch+0x1e>
 800f7e8:	1c4b      	adds	r3, r1, #1
 800f7ea:	6023      	str	r3, [r4, #0]
 800f7ec:	7008      	strb	r0, [r1, #0]
 800f7ee:	bc10      	pop	{r4}
 800f7f0:	4770      	bx	lr
 800f7f2:	bc10      	pop	{r4}
 800f7f4:	f7ff bd84 	b.w	800f300 <console_putc>
 800f7f8:	2000a094 	mulcs	r0, r4, r0

0800f7fc <_format_int>:
 800f7fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f800:	4698      	mov	r8, r3
 800f802:	b091      	sub	sp, #68	; 0x44
 800f804:	ea52 0308 	orrs.w	r3, r2, r8
 800f808:	4606      	mov	r6, r0
 800f80a:	4617      	mov	r7, r2
 800f80c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800f810:	d133      	bne.n	800f87a <_format_int+0x7e>
 800f812:	2330      	movs	r3, #48	; 0x30
 800f814:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800f818:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f81c:	6833      	ldr	r3, [r6, #0]
 800f81e:	07d8      	lsls	r0, r3, #31
 800f820:	d507      	bpl.n	800f832 <_format_int+0x36>
 800f822:	466a      	mov	r2, sp
 800f824:	2030      	movs	r0, #48	; 0x30
 800f826:	6871      	ldr	r1, [r6, #4]
 800f828:	1b2f      	subs	r7, r5, r4
 800f82a:	428f      	cmp	r7, r1
 800f82c:	da01      	bge.n	800f832 <_format_int+0x36>
 800f82e:	4294      	cmp	r4, r2
 800f830:	d839      	bhi.n	800f8a6 <_format_int+0xaa>
 800f832:	0699      	lsls	r1, r3, #26
 800f834:	d507      	bpl.n	800f846 <_format_int+0x4a>
 800f836:	466a      	mov	r2, sp
 800f838:	2030      	movs	r0, #48	; 0x30
 800f83a:	68b1      	ldr	r1, [r6, #8]
 800f83c:	1b2f      	subs	r7, r5, r4
 800f83e:	428f      	cmp	r7, r1
 800f840:	da01      	bge.n	800f846 <_format_int+0x4a>
 800f842:	4294      	cmp	r4, r2
 800f844:	d832      	bhi.n	800f8ac <_format_int+0xb0>
 800f846:	071a      	lsls	r2, r3, #28
 800f848:	bf44      	itt	mi
 800f84a:	222d      	movmi	r2, #45	; 0x2d
 800f84c:	f804 2901 	strbmi.w	r2, [r4], #-1
 800f850:	065b      	lsls	r3, r3, #25
 800f852:	d407      	bmi.n	800f864 <_format_int+0x68>
 800f854:	466b      	mov	r3, sp
 800f856:	2120      	movs	r1, #32
 800f858:	68b2      	ldr	r2, [r6, #8]
 800f85a:	1b28      	subs	r0, r5, r4
 800f85c:	4290      	cmp	r0, r2
 800f85e:	da01      	bge.n	800f864 <_format_int+0x68>
 800f860:	429c      	cmp	r4, r3
 800f862:	d826      	bhi.n	800f8b2 <_format_int+0xb6>
 800f864:	1b2d      	subs	r5, r5, r4
 800f866:	3401      	adds	r4, #1
 800f868:	ab10      	add	r3, sp, #64	; 0x40
 800f86a:	429c      	cmp	r4, r3
 800f86c:	d324      	bcc.n	800f8b8 <_format_int+0xbc>
 800f86e:	68b3      	ldr	r3, [r6, #8]
 800f870:	42ab      	cmp	r3, r5
 800f872:	dc27      	bgt.n	800f8c4 <_format_int+0xc8>
 800f874:	b011      	add	sp, #68	; 0x44
 800f876:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f87a:	462c      	mov	r4, r5
 800f87c:	46e9      	mov	r9, sp
 800f87e:	4638      	mov	r0, r7
 800f880:	4641      	mov	r1, r8
 800f882:	220a      	movs	r2, #10
 800f884:	2300      	movs	r3, #0
 800f886:	f7f8 f92d 	bl	8007ae4 <__aeabi_uldivmod>
 800f88a:	3230      	adds	r2, #48	; 0x30
 800f88c:	f804 2901 	strb.w	r2, [r4], #-1
 800f890:	463a      	mov	r2, r7
 800f892:	4643      	mov	r3, r8
 800f894:	2a0a      	cmp	r2, #10
 800f896:	f173 0300 	sbcs.w	r3, r3, #0
 800f89a:	4607      	mov	r7, r0
 800f89c:	4688      	mov	r8, r1
 800f89e:	d3bd      	bcc.n	800f81c <_format_int+0x20>
 800f8a0:	454c      	cmp	r4, r9
 800f8a2:	d1ec      	bne.n	800f87e <_format_int+0x82>
 800f8a4:	e7ba      	b.n	800f81c <_format_int+0x20>
 800f8a6:	f804 0901 	strb.w	r0, [r4], #-1
 800f8aa:	e7bd      	b.n	800f828 <_format_int+0x2c>
 800f8ac:	f804 0901 	strb.w	r0, [r4], #-1
 800f8b0:	e7c4      	b.n	800f83c <_format_int+0x40>
 800f8b2:	f804 1901 	strb.w	r1, [r4], #-1
 800f8b6:	e7d0      	b.n	800f85a <_format_int+0x5e>
 800f8b8:	4630      	mov	r0, r6
 800f8ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f8be:	f7ff ff87 	bl	800f7d0 <_xputch>
 800f8c2:	e7d1      	b.n	800f868 <_format_int+0x6c>
 800f8c4:	2120      	movs	r1, #32
 800f8c6:	4630      	mov	r0, r6
 800f8c8:	f7ff ff82 	bl	800f7d0 <_xputch>
 800f8cc:	3501      	adds	r5, #1
 800f8ce:	e7ce      	b.n	800f86e <_format_int+0x72>

0800f8d0 <_format_hex>:
 800f8d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8d2:	b091      	sub	sp, #68	; 0x44
 800f8d4:	4606      	mov	r6, r0
 800f8d6:	6804      	ldr	r4, [r0, #0]
 800f8d8:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800f8dc:	bb61      	cbnz	r1, 800f938 <_format_hex+0x68>
 800f8de:	2330      	movs	r3, #48	; 0x30
 800f8e0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f8e4:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800f8e8:	07e5      	lsls	r5, r4, #31
 800f8ea:	d507      	bpl.n	800f8fc <_format_hex+0x2c>
 800f8ec:	4669      	mov	r1, sp
 800f8ee:	2530      	movs	r5, #48	; 0x30
 800f8f0:	6870      	ldr	r0, [r6, #4]
 800f8f2:	1ad7      	subs	r7, r2, r3
 800f8f4:	4287      	cmp	r7, r0
 800f8f6:	da01      	bge.n	800f8fc <_format_hex+0x2c>
 800f8f8:	428b      	cmp	r3, r1
 800f8fa:	d831      	bhi.n	800f960 <_format_hex+0x90>
 800f8fc:	06a0      	lsls	r0, r4, #26
 800f8fe:	d507      	bpl.n	800f910 <_format_hex+0x40>
 800f900:	4669      	mov	r1, sp
 800f902:	2530      	movs	r5, #48	; 0x30
 800f904:	68b0      	ldr	r0, [r6, #8]
 800f906:	1ad7      	subs	r7, r2, r3
 800f908:	4287      	cmp	r7, r0
 800f90a:	da01      	bge.n	800f910 <_format_hex+0x40>
 800f90c:	428b      	cmp	r3, r1
 800f90e:	d82a      	bhi.n	800f966 <_format_hex+0x96>
 800f910:	0661      	lsls	r1, r4, #25
 800f912:	d407      	bmi.n	800f924 <_format_hex+0x54>
 800f914:	4669      	mov	r1, sp
 800f916:	2420      	movs	r4, #32
 800f918:	68b0      	ldr	r0, [r6, #8]
 800f91a:	1ad5      	subs	r5, r2, r3
 800f91c:	4285      	cmp	r5, r0
 800f91e:	da01      	bge.n	800f924 <_format_hex+0x54>
 800f920:	428b      	cmp	r3, r1
 800f922:	d823      	bhi.n	800f96c <_format_hex+0x9c>
 800f924:	1ad5      	subs	r5, r2, r3
 800f926:	1c5c      	adds	r4, r3, #1
 800f928:	ab10      	add	r3, sp, #64	; 0x40
 800f92a:	429c      	cmp	r4, r3
 800f92c:	d321      	bcc.n	800f972 <_format_hex+0xa2>
 800f92e:	68b3      	ldr	r3, [r6, #8]
 800f930:	429d      	cmp	r5, r3
 800f932:	db24      	blt.n	800f97e <_format_hex+0xae>
 800f934:	b011      	add	sp, #68	; 0x44
 800f936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f938:	f014 0f02 	tst.w	r4, #2
 800f93c:	bf0c      	ite	eq
 800f93e:	2757      	moveq	r7, #87	; 0x57
 800f940:	2737      	movne	r7, #55	; 0x37
 800f942:	4613      	mov	r3, r2
 800f944:	466d      	mov	r5, sp
 800f946:	f001 000f 	and.w	r0, r1, #15
 800f94a:	2809      	cmp	r0, #9
 800f94c:	bf94      	ite	ls
 800f94e:	3030      	addls	r0, #48	; 0x30
 800f950:	19c0      	addhi	r0, r0, r7
 800f952:	0909      	lsrs	r1, r1, #4
 800f954:	f803 0901 	strb.w	r0, [r3], #-1
 800f958:	d0c6      	beq.n	800f8e8 <_format_hex+0x18>
 800f95a:	42ab      	cmp	r3, r5
 800f95c:	d1f3      	bne.n	800f946 <_format_hex+0x76>
 800f95e:	e7c3      	b.n	800f8e8 <_format_hex+0x18>
 800f960:	f803 5901 	strb.w	r5, [r3], #-1
 800f964:	e7c5      	b.n	800f8f2 <_format_hex+0x22>
 800f966:	f803 5901 	strb.w	r5, [r3], #-1
 800f96a:	e7cc      	b.n	800f906 <_format_hex+0x36>
 800f96c:	f803 4901 	strb.w	r4, [r3], #-1
 800f970:	e7d3      	b.n	800f91a <_format_hex+0x4a>
 800f972:	4630      	mov	r0, r6
 800f974:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f978:	f7ff ff2a 	bl	800f7d0 <_xputch>
 800f97c:	e7d4      	b.n	800f928 <_format_hex+0x58>
 800f97e:	2120      	movs	r1, #32
 800f980:	4630      	mov	r0, r6
 800f982:	f7ff ff25 	bl	800f7d0 <_xputch>
 800f986:	3501      	adds	r5, #1
 800f988:	e7d1      	b.n	800f92e <_format_hex+0x5e>
	...

0800f98c <_vprintf>:
 800f98c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f990:	2700      	movs	r7, #0
 800f992:	460b      	mov	r3, r1
 800f994:	4614      	mov	r4, r2
 800f996:	f04f 080a 	mov.w	r8, #10
 800f99a:	b086      	sub	sp, #24
 800f99c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800f9a0:	7819      	ldrb	r1, [r3, #0]
 800f9a2:	b919      	cbnz	r1, 800f9ac <_vprintf+0x20>
 800f9a4:	9804      	ldr	r0, [sp, #16]
 800f9a6:	b006      	add	sp, #24
 800f9a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f9ac:	2925      	cmp	r1, #37	; 0x25
 800f9ae:	f103 0601 	add.w	r6, r3, #1
 800f9b2:	d004      	beq.n	800f9be <_vprintf+0x32>
 800f9b4:	a801      	add	r0, sp, #4
 800f9b6:	f7ff ff0b 	bl	800f7d0 <_xputch>
 800f9ba:	4633      	mov	r3, r6
 800f9bc:	e7f0      	b.n	800f9a0 <_vprintf+0x14>
 800f9be:	785a      	ldrb	r2, [r3, #1]
 800f9c0:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800f9c4:	2a30      	cmp	r2, #48	; 0x30
 800f9c6:	9703      	str	r7, [sp, #12]
 800f9c8:	d126      	bne.n	800fa18 <_vprintf+0x8c>
 800f9ca:	2220      	movs	r2, #32
 800f9cc:	9201      	str	r2, [sp, #4]
 800f9ce:	1c9e      	adds	r6, r3, #2
 800f9d0:	2200      	movs	r2, #0
 800f9d2:	4635      	mov	r5, r6
 800f9d4:	4613      	mov	r3, r2
 800f9d6:	7829      	ldrb	r1, [r5, #0]
 800f9d8:	462e      	mov	r6, r5
 800f9da:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800f9de:	2809      	cmp	r0, #9
 800f9e0:	f105 0501 	add.w	r5, r5, #1
 800f9e4:	d91c      	bls.n	800fa20 <_vprintf+0x94>
 800f9e6:	b12a      	cbz	r2, 800f9f4 <_vprintf+0x68>
 800f9e8:	9303      	str	r3, [sp, #12]
 800f9ea:	b11b      	cbz	r3, 800f9f4 <_vprintf+0x68>
 800f9ec:	9b01      	ldr	r3, [sp, #4]
 800f9ee:	f043 0310 	orr.w	r3, r3, #16
 800f9f2:	9301      	str	r3, [sp, #4]
 800f9f4:	292e      	cmp	r1, #46	; 0x2e
 800f9f6:	d122      	bne.n	800fa3e <_vprintf+0xb2>
 800f9f8:	7873      	ldrb	r3, [r6, #1]
 800f9fa:	2b2a      	cmp	r3, #42	; 0x2a
 800f9fc:	d014      	beq.n	800fa28 <_vprintf+0x9c>
 800f9fe:	2100      	movs	r1, #0
 800fa00:	460a      	mov	r2, r1
 800fa02:	1c70      	adds	r0, r6, #1
 800fa04:	7803      	ldrb	r3, [r0, #0]
 800fa06:	4606      	mov	r6, r0
 800fa08:	3b30      	subs	r3, #48	; 0x30
 800fa0a:	2b09      	cmp	r3, #9
 800fa0c:	f100 0001 	add.w	r0, r0, #1
 800fa10:	d930      	bls.n	800fa74 <_vprintf+0xe8>
 800fa12:	b181      	cbz	r1, 800fa36 <_vprintf+0xaa>
 800fa14:	9202      	str	r2, [sp, #8]
 800fa16:	e00e      	b.n	800fa36 <_vprintf+0xaa>
 800fa18:	2a2d      	cmp	r2, #45	; 0x2d
 800fa1a:	d1d9      	bne.n	800f9d0 <_vprintf+0x44>
 800fa1c:	2240      	movs	r2, #64	; 0x40
 800fa1e:	e7d5      	b.n	800f9cc <_vprintf+0x40>
 800fa20:	2201      	movs	r2, #1
 800fa22:	fb08 0303 	mla	r3, r8, r3, r0
 800fa26:	e7d6      	b.n	800f9d6 <_vprintf+0x4a>
 800fa28:	f854 3b04 	ldr.w	r3, [r4], #4
 800fa2c:	3602      	adds	r6, #2
 800fa2e:	2b00      	cmp	r3, #0
 800fa30:	bfb8      	it	lt
 800fa32:	425b      	neglt	r3, r3
 800fa34:	9302      	str	r3, [sp, #8]
 800fa36:	9b01      	ldr	r3, [sp, #4]
 800fa38:	f043 0301 	orr.w	r3, r3, #1
 800fa3c:	9301      	str	r3, [sp, #4]
 800fa3e:	7833      	ldrb	r3, [r6, #0]
 800fa40:	2b6c      	cmp	r3, #108	; 0x6c
 800fa42:	bf04      	itt	eq
 800fa44:	9b01      	ldreq	r3, [sp, #4]
 800fa46:	3601      	addeq	r6, #1
 800fa48:	7831      	ldrb	r1, [r6, #0]
 800fa4a:	bf04      	itt	eq
 800fa4c:	f043 0304 	orreq.w	r3, r3, #4
 800fa50:	9301      	streq	r3, [sp, #4]
 800fa52:	2978      	cmp	r1, #120	; 0x78
 800fa54:	d8ae      	bhi.n	800f9b4 <_vprintf+0x28>
 800fa56:	296f      	cmp	r1, #111	; 0x6f
 800fa58:	d810      	bhi.n	800fa7c <_vprintf+0xf0>
 800fa5a:	2963      	cmp	r1, #99	; 0x63
 800fa5c:	d048      	beq.n	800faf0 <_vprintf+0x164>
 800fa5e:	d827      	bhi.n	800fab0 <_vprintf+0x124>
 800fa60:	2958      	cmp	r1, #88	; 0x58
 800fa62:	d1a7      	bne.n	800f9b4 <_vprintf+0x28>
 800fa64:	9b01      	ldr	r3, [sp, #4]
 800fa66:	f043 0302 	orr.w	r3, r3, #2
 800fa6a:	9301      	str	r3, [sp, #4]
 800fa6c:	4625      	mov	r5, r4
 800fa6e:	f855 1b04 	ldr.w	r1, [r5], #4
 800fa72:	e056      	b.n	800fb22 <_vprintf+0x196>
 800fa74:	2101      	movs	r1, #1
 800fa76:	fb08 3202 	mla	r2, r8, r2, r3
 800fa7a:	e7c3      	b.n	800fa04 <_vprintf+0x78>
 800fa7c:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800fa80:	2b08      	cmp	r3, #8
 800fa82:	d897      	bhi.n	800f9b4 <_vprintf+0x28>
 800fa84:	a201      	add	r2, pc, #4	; (adr r2, 800fa8c <_vprintf+0x100>)
 800fa86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fa8a:	bf00      	nop
 800fa8c:	0800fb03 	stmdaeq	r0, {r0, r1, r8, r9, fp, ip, sp, lr, pc}
 800fa90:	0800f9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp, lr, pc}
 800fa94:	0800f9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp, lr, pc}
 800fa98:	0800fb2b 	stmdaeq	r0, {r0, r1, r3, r5, r8, r9, fp, ip, sp, lr, pc}
 800fa9c:	0800f9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp, lr, pc}
 800faa0:	0800fb9f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, r9, fp, ip, sp, lr, pc}
 800faa4:	0800f9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp, lr, pc}
 800faa8:	0800f9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp, lr, pc}
 800faac:	0800fa6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, ip, sp, lr, pc}
 800fab0:	2964      	cmp	r1, #100	; 0x64
 800fab2:	d002      	beq.n	800faba <_vprintf+0x12e>
 800fab4:	2969      	cmp	r1, #105	; 0x69
 800fab6:	f47f af7d 	bne.w	800f9b4 <_vprintf+0x28>
 800faba:	9901      	ldr	r1, [sp, #4]
 800fabc:	074d      	lsls	r5, r1, #29
 800fabe:	bf51      	iteee	pl
 800fac0:	4625      	movpl	r5, r4
 800fac2:	3407      	addmi	r4, #7
 800fac4:	f024 0407 	bicmi.w	r4, r4, #7
 800fac8:	4625      	movmi	r5, r4
 800faca:	bf55      	itete	pl
 800facc:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800fad0:	6863      	ldrmi	r3, [r4, #4]
 800fad2:	17d3      	asrpl	r3, r2, #31
 800fad4:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800fad8:	2b00      	cmp	r3, #0
 800fada:	da05      	bge.n	800fae8 <_vprintf+0x15c>
 800fadc:	f041 0108 	orr.w	r1, r1, #8
 800fae0:	4252      	negs	r2, r2
 800fae2:	9101      	str	r1, [sp, #4]
 800fae4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800fae8:	a801      	add	r0, sp, #4
 800faea:	f7ff fe87 	bl	800f7fc <_format_int>
 800faee:	e005      	b.n	800fafc <_vprintf+0x170>
 800faf0:	4625      	mov	r5, r4
 800faf2:	a801      	add	r0, sp, #4
 800faf4:	f855 1b04 	ldr.w	r1, [r5], #4
 800faf8:	f7ff fe6a 	bl	800f7d0 <_xputch>
 800fafc:	462c      	mov	r4, r5
 800fafe:	3601      	adds	r6, #1
 800fb00:	e75b      	b.n	800f9ba <_vprintf+0x2e>
 800fb02:	2308      	movs	r3, #8
 800fb04:	4625      	mov	r5, r4
 800fb06:	9303      	str	r3, [sp, #12]
 800fb08:	2320      	movs	r3, #32
 800fb0a:	2130      	movs	r1, #48	; 0x30
 800fb0c:	f855 4b04 	ldr.w	r4, [r5], #4
 800fb10:	a801      	add	r0, sp, #4
 800fb12:	9301      	str	r3, [sp, #4]
 800fb14:	f7ff fe5c 	bl	800f7d0 <_xputch>
 800fb18:	2178      	movs	r1, #120	; 0x78
 800fb1a:	a801      	add	r0, sp, #4
 800fb1c:	f7ff fe58 	bl	800f7d0 <_xputch>
 800fb20:	4621      	mov	r1, r4
 800fb22:	a801      	add	r0, sp, #4
 800fb24:	f7ff fed4 	bl	800f8d0 <_format_hex>
 800fb28:	e7e8      	b.n	800fafc <_vprintf+0x170>
 800fb2a:	4625      	mov	r5, r4
 800fb2c:	2400      	movs	r4, #0
 800fb2e:	f855 9b04 	ldr.w	r9, [r5], #4
 800fb32:	f819 3004 	ldrb.w	r3, [r9, r4]
 800fb36:	b993      	cbnz	r3, 800fb5e <_vprintf+0x1d2>
 800fb38:	9b01      	ldr	r3, [sp, #4]
 800fb3a:	07d9      	lsls	r1, r3, #31
 800fb3c:	d503      	bpl.n	800fb46 <_vprintf+0x1ba>
 800fb3e:	9b02      	ldr	r3, [sp, #8]
 800fb40:	429c      	cmp	r4, r3
 800fb42:	bfa8      	it	ge
 800fb44:	461c      	movge	r4, r3
 800fb46:	9b01      	ldr	r3, [sp, #4]
 800fb48:	f104 0a01 	add.w	sl, r4, #1
 800fb4c:	065a      	lsls	r2, r3, #25
 800fb4e:	d403      	bmi.n	800fb58 <_vprintf+0x1cc>
 800fb50:	9b03      	ldr	r3, [sp, #12]
 800fb52:	429c      	cmp	r4, r3
 800fb54:	db05      	blt.n	800fb62 <_vprintf+0x1d6>
 800fb56:	4654      	mov	r4, sl
 800fb58:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800fb5c:	e00d      	b.n	800fb7a <_vprintf+0x1ee>
 800fb5e:	3401      	adds	r4, #1
 800fb60:	e7e7      	b.n	800fb32 <_vprintf+0x1a6>
 800fb62:	2120      	movs	r1, #32
 800fb64:	a801      	add	r0, sp, #4
 800fb66:	f7ff fe33 	bl	800f7d0 <_xputch>
 800fb6a:	4654      	mov	r4, sl
 800fb6c:	e7eb      	b.n	800fb46 <_vprintf+0x1ba>
 800fb6e:	a801      	add	r0, sp, #4
 800fb70:	f7ff fe2e 	bl	800f7d0 <_xputch>
 800fb74:	9b02      	ldr	r3, [sp, #8]
 800fb76:	3b01      	subs	r3, #1
 800fb78:	9302      	str	r3, [sp, #8]
 800fb7a:	9b01      	ldr	r3, [sp, #4]
 800fb7c:	07db      	lsls	r3, r3, #31
 800fb7e:	d501      	bpl.n	800fb84 <_vprintf+0x1f8>
 800fb80:	9b02      	ldr	r3, [sp, #8]
 800fb82:	b11b      	cbz	r3, 800fb8c <_vprintf+0x200>
 800fb84:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800fb88:	2900      	cmp	r1, #0
 800fb8a:	d1f0      	bne.n	800fb6e <_vprintf+0x1e2>
 800fb8c:	9b03      	ldr	r3, [sp, #12]
 800fb8e:	42a3      	cmp	r3, r4
 800fb90:	ddb4      	ble.n	800fafc <_vprintf+0x170>
 800fb92:	2120      	movs	r1, #32
 800fb94:	a801      	add	r0, sp, #4
 800fb96:	f7ff fe1b 	bl	800f7d0 <_xputch>
 800fb9a:	3401      	adds	r4, #1
 800fb9c:	e7f6      	b.n	800fb8c <_vprintf+0x200>
 800fb9e:	9b01      	ldr	r3, [sp, #4]
 800fba0:	f013 0304 	ands.w	r3, r3, #4
 800fba4:	bf1d      	ittte	ne
 800fba6:	3407      	addne	r4, #7
 800fba8:	f024 0407 	bicne.w	r4, r4, #7
 800fbac:	4625      	movne	r5, r4
 800fbae:	4625      	moveq	r5, r4
 800fbb0:	bf1a      	itte	ne
 800fbb2:	f855 2b08 	ldrne.w	r2, [r5], #8
 800fbb6:	6863      	ldrne	r3, [r4, #4]
 800fbb8:	f855 2b04 	ldreq.w	r2, [r5], #4
 800fbbc:	e794      	b.n	800fae8 <_vprintf+0x15c>
 800fbbe:	bf00      	nop

0800fbc0 <printf>:
 800fbc0:	b40f      	push	{r0, r1, r2, r3}
 800fbc2:	b507      	push	{r0, r1, r2, lr}
 800fbc4:	aa04      	add	r2, sp, #16
 800fbc6:	f852 1b04 	ldr.w	r1, [r2], #4
 800fbca:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fbce:	9201      	str	r2, [sp, #4]
 800fbd0:	f7ff fedc 	bl	800f98c <_vprintf>
 800fbd4:	b003      	add	sp, #12
 800fbd6:	f85d eb04 	ldr.w	lr, [sp], #4
 800fbda:	b004      	add	sp, #16
 800fbdc:	4770      	bx	lr
	...

0800fbe0 <sprintf>:
 800fbe0:	b40e      	push	{r1, r2, r3}
 800fbe2:	b517      	push	{r0, r1, r2, r4, lr}
 800fbe4:	4c09      	ldr	r4, [pc, #36]	; (800fc0c <sprintf+0x2c>)
 800fbe6:	aa05      	add	r2, sp, #20
 800fbe8:	f852 1b04 	ldr.w	r1, [r2], #4
 800fbec:	6020      	str	r0, [r4, #0]
 800fbee:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fbf2:	9201      	str	r2, [sp, #4]
 800fbf4:	f7ff feca 	bl	800f98c <_vprintf>
 800fbf8:	2300      	movs	r3, #0
 800fbfa:	6822      	ldr	r2, [r4, #0]
 800fbfc:	6023      	str	r3, [r4, #0]
 800fbfe:	7013      	strb	r3, [r2, #0]
 800fc00:	b003      	add	sp, #12
 800fc02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc06:	b003      	add	sp, #12
 800fc08:	4770      	bx	lr
 800fc0a:	bf00      	nop
 800fc0c:	2000a094 	mulcs	r0, r4, r0

0800fc10 <snprintf>:
 800fc10:	b40c      	push	{r2, r3}
 800fc12:	460b      	mov	r3, r1
 800fc14:	b513      	push	{r0, r1, r4, lr}
 800fc16:	4c09      	ldr	r4, [pc, #36]	; (800fc3c <snprintf+0x2c>)
 800fc18:	aa04      	add	r2, sp, #16
 800fc1a:	f852 1b04 	ldr.w	r1, [r2], #4
 800fc1e:	6020      	str	r0, [r4, #0]
 800fc20:	4618      	mov	r0, r3
 800fc22:	9201      	str	r2, [sp, #4]
 800fc24:	f7ff feb2 	bl	800f98c <_vprintf>
 800fc28:	2300      	movs	r3, #0
 800fc2a:	6822      	ldr	r2, [r4, #0]
 800fc2c:	6023      	str	r3, [r4, #0]
 800fc2e:	7013      	strb	r3, [r2, #0]
 800fc30:	b002      	add	sp, #8
 800fc32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc36:	b002      	add	sp, #8
 800fc38:	4770      	bx	lr
 800fc3a:	bf00      	nop
 800fc3c:	2000a094 	mulcs	r0, r4, r0

0800fc40 <vsnprintf>:
 800fc40:	b538      	push	{r3, r4, r5, lr}
 800fc42:	4605      	mov	r5, r0
 800fc44:	4c05      	ldr	r4, [pc, #20]	; (800fc5c <vsnprintf+0x1c>)
 800fc46:	4608      	mov	r0, r1
 800fc48:	4611      	mov	r1, r2
 800fc4a:	461a      	mov	r2, r3
 800fc4c:	6025      	str	r5, [r4, #0]
 800fc4e:	f7ff fe9d 	bl	800f98c <_vprintf>
 800fc52:	2300      	movs	r3, #0
 800fc54:	6822      	ldr	r2, [r4, #0]
 800fc56:	6023      	str	r3, [r4, #0]
 800fc58:	7013      	strb	r3, [r2, #0]
 800fc5a:	bd38      	pop	{r3, r4, r5, pc}
 800fc5c:	2000a094 	mulcs	r0, r4, r0

0800fc60 <puts>:
 800fc60:	b508      	push	{r3, lr}
 800fc62:	f7ff fb4f 	bl	800f304 <console_puts>
 800fc66:	200a      	movs	r0, #10
 800fc68:	f7ff fb4a 	bl	800f300 <console_putc>
 800fc6c:	2001      	movs	r0, #1
 800fc6e:	bd08      	pop	{r3, pc}

0800fc70 <strtok>:
 800fc70:	b530      	push	{r4, r5, lr}
 800fc72:	b910      	cbnz	r0, 800fc7a <strtok+0xa>
 800fc74:	4b12      	ldr	r3, [pc, #72]	; (800fcc0 <strtok+0x50>)
 800fc76:	6818      	ldr	r0, [r3, #0]
 800fc78:	b158      	cbz	r0, 800fc92 <strtok+0x22>
 800fc7a:	4603      	mov	r3, r0
 800fc7c:	460d      	mov	r5, r1
 800fc7e:	4618      	mov	r0, r3
 800fc80:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fc84:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fc88:	b924      	cbnz	r4, 800fc94 <strtok+0x24>
 800fc8a:	b94a      	cbnz	r2, 800fca0 <strtok+0x30>
 800fc8c:	4610      	mov	r0, r2
 800fc8e:	4b0c      	ldr	r3, [pc, #48]	; (800fcc0 <strtok+0x50>)
 800fc90:	601a      	str	r2, [r3, #0]
 800fc92:	bd30      	pop	{r4, r5, pc}
 800fc94:	42a2      	cmp	r2, r4
 800fc96:	d1f5      	bne.n	800fc84 <strtok+0x14>
 800fc98:	e7f0      	b.n	800fc7c <strtok+0xc>
 800fc9a:	4613      	mov	r3, r2
 800fc9c:	e00c      	b.n	800fcb8 <strtok+0x48>
 800fc9e:	b914      	cbnz	r4, 800fca6 <strtok+0x36>
 800fca0:	460d      	mov	r5, r1
 800fca2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fca6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fcaa:	42a2      	cmp	r2, r4
 800fcac:	d1f7      	bne.n	800fc9e <strtok+0x2e>
 800fcae:	2a00      	cmp	r2, #0
 800fcb0:	d0f3      	beq.n	800fc9a <strtok+0x2a>
 800fcb2:	2200      	movs	r2, #0
 800fcb4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fcb8:	4a01      	ldr	r2, [pc, #4]	; (800fcc0 <strtok+0x50>)
 800fcba:	6013      	str	r3, [r2, #0]
 800fcbc:	e7e9      	b.n	800fc92 <strtok+0x22>
 800fcbe:	bf00      	nop
 800fcc0:	2000a098 	mulcs	r0, r8, r0

0800fcc4 <isleapyear>:
 800fcc4:	2264      	movs	r2, #100	; 0x64
 800fcc6:	fb90 f3f2 	sdiv	r3, r0, r2
 800fcca:	fb02 0313 	mls	r3, r2, r3, r0
 800fcce:	b94b      	cbnz	r3, 800fce4 <isleapyear+0x20>
 800fcd0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800fcd4:	fb90 f2f3 	sdiv	r2, r0, r3
 800fcd8:	fb03 0012 	mls	r0, r3, r2, r0
 800fcdc:	fab0 f080 	clz	r0, r0
 800fce0:	0940      	lsrs	r0, r0, #5
 800fce2:	4770      	bx	lr
 800fce4:	f010 0f03 	tst.w	r0, #3
 800fce8:	bf0c      	ite	eq
 800fcea:	2001      	moveq	r0, #1
 800fcec:	2000      	movne	r0, #0
 800fcee:	4770      	bx	lr

0800fcf0 <getdaysofmonth>:
 800fcf0:	b510      	push	{r4, lr}
 800fcf2:	4604      	mov	r4, r0
 800fcf4:	2c01      	cmp	r4, #1
 800fcf6:	4608      	mov	r0, r1
 800fcf8:	d102      	bne.n	800fd00 <getdaysofmonth+0x10>
 800fcfa:	f7ff ffe3 	bl	800fcc4 <isleapyear>
 800fcfe:	b918      	cbnz	r0, 800fd08 <getdaysofmonth+0x18>
 800fd00:	4b02      	ldr	r3, [pc, #8]	; (800fd0c <getdaysofmonth+0x1c>)
 800fd02:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800fd06:	bd10      	pop	{r4, pc}
 800fd08:	201d      	movs	r0, #29
 800fd0a:	e7fc      	b.n	800fd06 <getdaysofmonth+0x16>
 800fd0c:	08013be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, ip, sp}

0800fd10 <mktime>:
 800fd10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd14:	4604      	mov	r4, r0
 800fd16:	2800      	cmp	r0, #0
 800fd18:	d043      	beq.n	800fda2 <mktime+0x92>
 800fd1a:	6941      	ldr	r1, [r0, #20]
 800fd1c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800fd20:	2b45      	cmp	r3, #69	; 0x45
 800fd22:	d83e      	bhi.n	800fda2 <mktime+0x92>
 800fd24:	2600      	movs	r6, #0
 800fd26:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800fd2a:	f240 186d 	movw	r8, #365	; 0x16d
 800fd2e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800fd32:	42af      	cmp	r7, r5
 800fd34:	da24      	bge.n	800fd80 <mktime+0x70>
 800fd36:	6927      	ldr	r7, [r4, #16]
 800fd38:	2f0b      	cmp	r7, #11
 800fd3a:	d832      	bhi.n	800fda2 <mktime+0x92>
 800fd3c:	2500      	movs	r5, #0
 800fd3e:	42af      	cmp	r7, r5
 800fd40:	d129      	bne.n	800fd96 <mktime+0x86>
 800fd42:	68e5      	ldr	r5, [r4, #12]
 800fd44:	2d00      	cmp	r5, #0
 800fd46:	dd2c      	ble.n	800fda2 <mktime+0x92>
 800fd48:	4638      	mov	r0, r7
 800fd4a:	f7ff ffd1 	bl	800fcf0 <getdaysofmonth>
 800fd4e:	4285      	cmp	r5, r0
 800fd50:	dc27      	bgt.n	800fda2 <mktime+0x92>
 800fd52:	2318      	movs	r3, #24
 800fd54:	3d01      	subs	r5, #1
 800fd56:	4435      	add	r5, r6
 800fd58:	435d      	muls	r5, r3
 800fd5a:	68a3      	ldr	r3, [r4, #8]
 800fd5c:	2b17      	cmp	r3, #23
 800fd5e:	d820      	bhi.n	800fda2 <mktime+0x92>
 800fd60:	213c      	movs	r1, #60	; 0x3c
 800fd62:	442b      	add	r3, r5
 800fd64:	fb01 f203 	mul.w	r2, r1, r3
 800fd68:	6863      	ldr	r3, [r4, #4]
 800fd6a:	2b3b      	cmp	r3, #59	; 0x3b
 800fd6c:	d819      	bhi.n	800fda2 <mktime+0x92>
 800fd6e:	6820      	ldr	r0, [r4, #0]
 800fd70:	4413      	add	r3, r2
 800fd72:	283b      	cmp	r0, #59	; 0x3b
 800fd74:	fb01 f303 	mul.w	r3, r1, r3
 800fd78:	d813      	bhi.n	800fda2 <mktime+0x92>
 800fd7a:	4418      	add	r0, r3
 800fd7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd80:	4628      	mov	r0, r5
 800fd82:	f7ff ff9f 	bl	800fcc4 <isleapyear>
 800fd86:	2800      	cmp	r0, #0
 800fd88:	bf14      	ite	ne
 800fd8a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800fd8e:	4643      	moveq	r3, r8
 800fd90:	3501      	adds	r5, #1
 800fd92:	441e      	add	r6, r3
 800fd94:	e7cd      	b.n	800fd32 <mktime+0x22>
 800fd96:	4628      	mov	r0, r5
 800fd98:	f7ff ffaa 	bl	800fcf0 <getdaysofmonth>
 800fd9c:	3501      	adds	r5, #1
 800fd9e:	4406      	add	r6, r0
 800fda0:	e7cd      	b.n	800fd3e <mktime+0x2e>
 800fda2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fda6:	e7e9      	b.n	800fd7c <mktime+0x6c>

0800fda8 <gettimeofday>:
 800fda8:	b538      	push	{r3, r4, r5, lr}
 800fdaa:	4b10      	ldr	r3, [pc, #64]	; (800fdec <gettimeofday+0x44>)
 800fdac:	4a10      	ldr	r2, [pc, #64]	; (800fdf0 <gettimeofday+0x48>)
 800fdae:	681b      	ldr	r3, [r3, #0]
 800fdb0:	6814      	ldr	r4, [r2, #0]
 800fdb2:	6013      	str	r3, [r2, #0]
 800fdb4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fdb8:	429c      	cmp	r4, r3
 800fdba:	bf2c      	ite	cs
 800fdbc:	1ae4      	subcs	r4, r4, r3
 800fdbe:	1b1c      	subcc	r4, r3, r4
 800fdc0:	4354      	muls	r4, r2
 800fdc2:	4b0c      	ldr	r3, [pc, #48]	; (800fdf4 <gettimeofday+0x4c>)
 800fdc4:	4605      	mov	r5, r0
 800fdc6:	e9d3 2100 	ldrd	r2, r1, [r3]
 800fdca:	18a4      	adds	r4, r4, r2
 800fdcc:	f141 0100 	adc.w	r1, r1, #0
 800fdd0:	e9c3 4100 	strd	r4, r1, [r3]
 800fdd4:	4620      	mov	r0, r4
 800fdd6:	2300      	movs	r3, #0
 800fdd8:	4a07      	ldr	r2, [pc, #28]	; (800fdf8 <gettimeofday+0x50>)
 800fdda:	f7f7 fe83 	bl	8007ae4 <__aeabi_uldivmod>
 800fdde:	4b06      	ldr	r3, [pc, #24]	; (800fdf8 <gettimeofday+0x50>)
 800fde0:	6028      	str	r0, [r5, #0]
 800fde2:	fb03 4410 	mls	r4, r3, r0, r4
 800fde6:	2000      	movs	r0, #0
 800fde8:	606c      	str	r4, [r5, #4]
 800fdea:	bd38      	pop	{r3, r4, r5, pc}
 800fdec:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800fdf0:	2000a0a8 	andcs	sl, r0, r8, lsr #1
 800fdf4:	2000a0a0 	andcs	sl, r0, r0, lsr #1
 800fdf8:	000f4240 	andeq	r4, pc, r0, asr #4

0800fdfc <settimeofday>:
 800fdfc:	4b07      	ldr	r3, [pc, #28]	; (800fe1c <settimeofday+0x20>)
 800fdfe:	b510      	push	{r4, lr}
 800fe00:	681a      	ldr	r2, [r3, #0]
 800fe02:	4b07      	ldr	r3, [pc, #28]	; (800fe20 <settimeofday+0x24>)
 800fe04:	6804      	ldr	r4, [r0, #0]
 800fe06:	601a      	str	r2, [r3, #0]
 800fe08:	6843      	ldr	r3, [r0, #4]
 800fe0a:	4806      	ldr	r0, [pc, #24]	; (800fe24 <settimeofday+0x28>)
 800fe0c:	17da      	asrs	r2, r3, #31
 800fe0e:	fbc4 3200 	smlal	r3, r2, r4, r0
 800fe12:	4905      	ldr	r1, [pc, #20]	; (800fe28 <settimeofday+0x2c>)
 800fe14:	2000      	movs	r0, #0
 800fe16:	e9c1 3200 	strd	r3, r2, [r1]
 800fe1a:	bd10      	pop	{r4, pc}
 800fe1c:	2000a0ac 	andcs	sl, r0, ip, lsr #1
 800fe20:	2000a0a8 	andcs	sl, r0, r8, lsr #1
 800fe24:	000f4240 	andeq	r4, pc, r0, asr #4
 800fe28:	2000a0a0 	andcs	sl, r0, r0, lsr #1

0800fe2c <time>:
 800fe2c:	b513      	push	{r0, r1, r4, lr}
 800fe2e:	4604      	mov	r4, r0
 800fe30:	2100      	movs	r1, #0
 800fe32:	4668      	mov	r0, sp
 800fe34:	f7ff ffb8 	bl	800fda8 <gettimeofday>
 800fe38:	9800      	ldr	r0, [sp, #0]
 800fe3a:	b104      	cbz	r4, 800fe3e <time+0x12>
 800fe3c:	6020      	str	r0, [r4, #0]
 800fe3e:	b002      	add	sp, #8
 800fe40:	bd10      	pop	{r4, pc}
	...

0800fe44 <uart0_init>:
 800fe44:	2301      	movs	r3, #1
 800fe46:	b507      	push	{r0, r1, r2, lr}
 800fe48:	2208      	movs	r2, #8
 800fe4a:	9300      	str	r3, [sp, #0]
 800fe4c:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800fe50:	2300      	movs	r3, #0
 800fe52:	4803      	ldr	r0, [pc, #12]	; (800fe60 <uart0_init+0x1c>)
 800fe54:	f001 fb2c 	bl	80114b0 <gd32_uart_begin>
 800fe58:	b003      	add	sp, #12
 800fe5a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe5e:	bf00      	nop
 800fe60:	40013800 	andmi	r3, r1, r0, lsl #16

0800fe64 <uart0_putc>:
 800fe64:	280a      	cmp	r0, #10
 800fe66:	b538      	push	{r3, r4, r5, lr}
 800fe68:	4604      	mov	r4, r0
 800fe6a:	d10a      	bne.n	800fe82 <uart0_putc+0x1e>
 800fe6c:	4d0b      	ldr	r5, [pc, #44]	; (800fe9c <uart0_putc+0x38>)
 800fe6e:	2107      	movs	r1, #7
 800fe70:	4628      	mov	r0, r5
 800fe72:	f001 f92f 	bl	80110d4 <usart_flag_get>
 800fe76:	2800      	cmp	r0, #0
 800fe78:	d0f9      	beq.n	800fe6e <uart0_putc+0xa>
 800fe7a:	220d      	movs	r2, #13
 800fe7c:	4b08      	ldr	r3, [pc, #32]	; (800fea0 <uart0_putc+0x3c>)
 800fe7e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800fe82:	4d06      	ldr	r5, [pc, #24]	; (800fe9c <uart0_putc+0x38>)
 800fe84:	2107      	movs	r1, #7
 800fe86:	4628      	mov	r0, r5
 800fe88:	f001 f924 	bl	80110d4 <usart_flag_get>
 800fe8c:	2800      	cmp	r0, #0
 800fe8e:	d0f9      	beq.n	800fe84 <uart0_putc+0x20>
 800fe90:	4b03      	ldr	r3, [pc, #12]	; (800fea0 <uart0_putc+0x3c>)
 800fe92:	b2e4      	uxtb	r4, r4
 800fe94:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800fe98:	bd38      	pop	{r3, r4, r5, pc}
 800fe9a:	bf00      	nop
 800fe9c:	40013800 	andmi	r3, r1, r0, lsl #16
 800fea0:	40013000 	andmi	r3, r1, r0

0800fea4 <uart0_puts>:
 800fea4:	b510      	push	{r4, lr}
 800fea6:	1e44      	subs	r4, r0, #1
 800fea8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800feac:	b903      	cbnz	r3, 800feb0 <uart0_puts+0xc>
 800feae:	bd10      	pop	{r4, pc}
 800feb0:	2b0a      	cmp	r3, #10
 800feb2:	d102      	bne.n	800feba <uart0_puts+0x16>
 800feb4:	200d      	movs	r0, #13
 800feb6:	f7ff ffd5 	bl	800fe64 <uart0_putc>
 800feba:	7820      	ldrb	r0, [r4, #0]
 800febc:	f7ff ffd2 	bl	800fe64 <uart0_putc>
 800fec0:	e7f2      	b.n	800fea8 <uart0_puts+0x4>
	...

0800fec4 <systick_config>:
 800fec4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fec8:	4b0b      	ldr	r3, [pc, #44]	; (800fef8 <systick_config+0x34>)
 800feca:	681b      	ldr	r3, [r3, #0]
 800fecc:	fbb3 f3f2 	udiv	r3, r3, r2
 800fed0:	3b01      	subs	r3, #1
 800fed2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800fed6:	d20d      	bcs.n	800fef4 <systick_config+0x30>
 800fed8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800fedc:	21f0      	movs	r1, #240	; 0xf0
 800fede:	6153      	str	r3, [r2, #20]
 800fee0:	4b06      	ldr	r3, [pc, #24]	; (800fefc <systick_config+0x38>)
 800fee2:	2007      	movs	r0, #7
 800fee4:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800fee8:	2100      	movs	r1, #0
 800feea:	6191      	str	r1, [r2, #24]
 800feec:	6110      	str	r0, [r2, #16]
 800feee:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800fef2:	4770      	bx	lr
 800fef4:	e7fe      	b.n	800fef4 <systick_config+0x30>
 800fef6:	bf00      	nop
 800fef8:	20000088 	andcs	r0, r0, r8, lsl #1
 800fefc:	e000ed00 	and	lr, r0, r0, lsl #26

0800ff00 <SysTick_Handler>:
 800ff00:	4a02      	ldr	r2, [pc, #8]	; (800ff0c <SysTick_Handler+0xc>)
 800ff02:	6813      	ldr	r3, [r2, #0]
 800ff04:	3301      	adds	r3, #1
 800ff06:	6013      	str	r3, [r2, #0]
 800ff08:	4770      	bx	lr
 800ff0a:	bf00      	nop
 800ff0c:	2000a0ac 	andcs	sl, r0, ip, lsr #1

0800ff10 <SystemInit>:
 800ff10:	4b37      	ldr	r3, [pc, #220]	; (800fff0 <SystemInit+0xe0>)
 800ff12:	4938      	ldr	r1, [pc, #224]	; (800fff4 <SystemInit+0xe4>)
 800ff14:	681a      	ldr	r2, [r3, #0]
 800ff16:	f042 0201 	orr.w	r2, r2, #1
 800ff1a:	601a      	str	r2, [r3, #0]
 800ff1c:	685a      	ldr	r2, [r3, #4]
 800ff1e:	f022 0203 	bic.w	r2, r2, #3
 800ff22:	605a      	str	r2, [r3, #4]
 800ff24:	681a      	ldr	r2, [r3, #0]
 800ff26:	400a      	ands	r2, r1
 800ff28:	601a      	str	r2, [r3, #0]
 800ff2a:	6858      	ldr	r0, [r3, #4]
 800ff2c:	4a32      	ldr	r2, [pc, #200]	; (800fff8 <SystemInit+0xe8>)
 800ff2e:	4002      	ands	r2, r0
 800ff30:	605a      	str	r2, [r3, #4]
 800ff32:	681a      	ldr	r2, [r3, #0]
 800ff34:	400a      	ands	r2, r1
 800ff36:	601a      	str	r2, [r3, #0]
 800ff38:	681a      	ldr	r2, [r3, #0]
 800ff3a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ff3e:	601a      	str	r2, [r3, #0]
 800ff40:	685a      	ldr	r2, [r3, #4]
 800ff42:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800ff46:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800ff4a:	605a      	str	r2, [r3, #4]
 800ff4c:	2200      	movs	r2, #0
 800ff4e:	62da      	str	r2, [r3, #44]	; 0x2c
 800ff50:	681a      	ldr	r2, [r3, #0]
 800ff52:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800ff56:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800ff5a:	601a      	str	r2, [r3, #0]
 800ff5c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800ff60:	609a      	str	r2, [r3, #8]
 800ff62:	681a      	ldr	r2, [r3, #0]
 800ff64:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800ff68:	601a      	str	r2, [r3, #0]
 800ff6a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ff6e:	6819      	ldr	r1, [r3, #0]
 800ff70:	0389      	lsls	r1, r1, #14
 800ff72:	d401      	bmi.n	800ff78 <SystemInit+0x68>
 800ff74:	3a01      	subs	r2, #1
 800ff76:	d1fa      	bne.n	800ff6e <SystemInit+0x5e>
 800ff78:	681a      	ldr	r2, [r3, #0]
 800ff7a:	0392      	lsls	r2, r2, #14
 800ff7c:	d400      	bmi.n	800ff80 <SystemInit+0x70>
 800ff7e:	e7fe      	b.n	800ff7e <SystemInit+0x6e>
 800ff80:	685a      	ldr	r2, [r3, #4]
 800ff82:	605a      	str	r2, [r3, #4]
 800ff84:	685a      	ldr	r2, [r3, #4]
 800ff86:	605a      	str	r2, [r3, #4]
 800ff88:	685a      	ldr	r2, [r3, #4]
 800ff8a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ff8e:	605a      	str	r2, [r3, #4]
 800ff90:	685a      	ldr	r2, [r3, #4]
 800ff92:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800ff96:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800ff9a:	605a      	str	r2, [r3, #4]
 800ff9c:	685a      	ldr	r2, [r3, #4]
 800ff9e:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800ffa2:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800ffa6:	605a      	str	r2, [r3, #4]
 800ffa8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800ffaa:	4a14      	ldr	r2, [pc, #80]	; (800fffc <SystemInit+0xec>)
 800ffac:	400a      	ands	r2, r1
 800ffae:	62da      	str	r2, [r3, #44]	; 0x2c
 800ffb0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ffb2:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800ffb6:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800ffba:	62da      	str	r2, [r3, #44]	; 0x2c
 800ffbc:	681a      	ldr	r2, [r3, #0]
 800ffbe:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800ffc2:	601a      	str	r2, [r3, #0]
 800ffc4:	681a      	ldr	r2, [r3, #0]
 800ffc6:	0110      	lsls	r0, r2, #4
 800ffc8:	d5fc      	bpl.n	800ffc4 <SystemInit+0xb4>
 800ffca:	681a      	ldr	r2, [r3, #0]
 800ffcc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800ffd0:	601a      	str	r2, [r3, #0]
 800ffd2:	681a      	ldr	r2, [r3, #0]
 800ffd4:	0191      	lsls	r1, r2, #6
 800ffd6:	d5fc      	bpl.n	800ffd2 <SystemInit+0xc2>
 800ffd8:	685a      	ldr	r2, [r3, #4]
 800ffda:	f022 0203 	bic.w	r2, r2, #3
 800ffde:	605a      	str	r2, [r3, #4]
 800ffe0:	685a      	ldr	r2, [r3, #4]
 800ffe2:	f042 0202 	orr.w	r2, r2, #2
 800ffe6:	605a      	str	r2, [r3, #4]
 800ffe8:	685a      	ldr	r2, [r3, #4]
 800ffea:	0712      	lsls	r2, r2, #28
 800ffec:	d5fc      	bpl.n	800ffe8 <SystemInit+0xd8>
 800ffee:	4770      	bx	lr
 800fff0:	40021000 	andmi	r1, r2, r0
 800fff4:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800fff8:	e0ff000c 	rscs	r0, pc, ip
 800fffc:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08010000 <bkp_data_write>:
 8010000:	f1a0 030b 	sub.w	r3, r0, #11
 8010004:	2b1f      	cmp	r3, #31
 8010006:	d804      	bhi.n	8010012 <bkp_data_write+0x12>
 8010008:	4b07      	ldr	r3, [pc, #28]	; (8010028 <bkp_data_write+0x28>)
 801000a:	4403      	add	r3, r0
 801000c:	009b      	lsls	r3, r3, #2
 801000e:	8019      	strh	r1, [r3, #0]
 8010010:	4770      	bx	lr
 8010012:	1e43      	subs	r3, r0, #1
 8010014:	2b09      	cmp	r3, #9
 8010016:	bf9f      	itttt	ls
 8010018:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 801001c:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8010020:	0080      	lslls	r0, r0, #2
 8010022:	8001      	strhls	r1, [r0, #0]
 8010024:	4770      	bx	lr
 8010026:	bf00      	nop
 8010028:	10001b05 	andne	r1, r0, r5, lsl #22

0801002c <bkp_data_read>:
 801002c:	f1a0 030b 	sub.w	r3, r0, #11
 8010030:	2b1f      	cmp	r3, #31
 8010032:	d805      	bhi.n	8010040 <bkp_data_read+0x14>
 8010034:	4b08      	ldr	r3, [pc, #32]	; (8010058 <bkp_data_read+0x2c>)
 8010036:	4403      	add	r3, r0
 8010038:	009b      	lsls	r3, r3, #2
 801003a:	8818      	ldrh	r0, [r3, #0]
 801003c:	b280      	uxth	r0, r0
 801003e:	4770      	bx	lr
 8010040:	1e43      	subs	r3, r0, #1
 8010042:	2b09      	cmp	r3, #9
 8010044:	d806      	bhi.n	8010054 <bkp_data_read+0x28>
 8010046:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 801004a:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 801004e:	0080      	lsls	r0, r0, #2
 8010050:	8800      	ldrh	r0, [r0, #0]
 8010052:	e7f3      	b.n	801003c <bkp_data_read+0x10>
 8010054:	2000      	movs	r0, #0
 8010056:	4770      	bx	lr
 8010058:	10001b05 	andne	r1, r0, r5, lsl #22

0801005c <dma_deinit>:
 801005c:	4b0c      	ldr	r3, [pc, #48]	; (8010090 <dma_deinit+0x34>)
 801005e:	4298      	cmp	r0, r3
 8010060:	d102      	bne.n	8010068 <dma_deinit+0xc>
 8010062:	2904      	cmp	r1, #4
 8010064:	d900      	bls.n	8010068 <dma_deinit+0xc>
 8010066:	e7fe      	b.n	8010066 <dma_deinit+0xa>
 8010068:	2314      	movs	r3, #20
 801006a:	fb03 0301 	mla	r3, r3, r1, r0
 801006e:	689a      	ldr	r2, [r3, #8]
 8010070:	0089      	lsls	r1, r1, #2
 8010072:	f022 0201 	bic.w	r2, r2, #1
 8010076:	609a      	str	r2, [r3, #8]
 8010078:	2200      	movs	r2, #0
 801007a:	609a      	str	r2, [r3, #8]
 801007c:	60da      	str	r2, [r3, #12]
 801007e:	611a      	str	r2, [r3, #16]
 8010080:	615a      	str	r2, [r3, #20]
 8010082:	230f      	movs	r3, #15
 8010084:	6842      	ldr	r2, [r0, #4]
 8010086:	408b      	lsls	r3, r1
 8010088:	4313      	orrs	r3, r2
 801008a:	6043      	str	r3, [r0, #4]
 801008c:	4770      	bx	lr
 801008e:	bf00      	nop
 8010090:	40020400 	andmi	r0, r2, r0, lsl #8

08010094 <dma_init>:
 8010094:	4b1b      	ldr	r3, [pc, #108]	; (8010104 <dma_init+0x70>)
 8010096:	b510      	push	{r4, lr}
 8010098:	4298      	cmp	r0, r3
 801009a:	d102      	bne.n	80100a2 <dma_init+0xe>
 801009c:	2904      	cmp	r1, #4
 801009e:	d900      	bls.n	80100a2 <dma_init+0xe>
 80100a0:	e7fe      	b.n	80100a0 <dma_init+0xc>
 80100a2:	2314      	movs	r3, #20
 80100a4:	fb03 0101 	mla	r1, r3, r1, r0
 80100a8:	6813      	ldr	r3, [r2, #0]
 80100aa:	610b      	str	r3, [r1, #16]
 80100ac:	6893      	ldr	r3, [r2, #8]
 80100ae:	614b      	str	r3, [r1, #20]
 80100b0:	8a13      	ldrh	r3, [r2, #16]
 80100b2:	60cb      	str	r3, [r1, #12]
 80100b4:	68d4      	ldr	r4, [r2, #12]
 80100b6:	6853      	ldr	r3, [r2, #4]
 80100b8:	6888      	ldr	r0, [r1, #8]
 80100ba:	4323      	orrs	r3, r4
 80100bc:	6954      	ldr	r4, [r2, #20]
 80100be:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80100c2:	4323      	orrs	r3, r4
 80100c4:	4303      	orrs	r3, r0
 80100c6:	608b      	str	r3, [r1, #8]
 80100c8:	7e13      	ldrb	r3, [r2, #24]
 80100ca:	2b01      	cmp	r3, #1
 80100cc:	688b      	ldr	r3, [r1, #8]
 80100ce:	bf0c      	ite	eq
 80100d0:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 80100d4:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 80100d8:	608b      	str	r3, [r1, #8]
 80100da:	7e53      	ldrb	r3, [r2, #25]
 80100dc:	2b01      	cmp	r3, #1
 80100de:	688b      	ldr	r3, [r1, #8]
 80100e0:	bf0c      	ite	eq
 80100e2:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 80100e6:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 80100ea:	608b      	str	r3, [r1, #8]
 80100ec:	7e93      	ldrb	r3, [r2, #26]
 80100ee:	b923      	cbnz	r3, 80100fa <dma_init+0x66>
 80100f0:	688b      	ldr	r3, [r1, #8]
 80100f2:	f023 0310 	bic.w	r3, r3, #16
 80100f6:	608b      	str	r3, [r1, #8]
 80100f8:	bd10      	pop	{r4, pc}
 80100fa:	688b      	ldr	r3, [r1, #8]
 80100fc:	f043 0310 	orr.w	r3, r3, #16
 8010100:	e7f9      	b.n	80100f6 <dma_init+0x62>
 8010102:	bf00      	nop
 8010104:	40020400 	andmi	r0, r2, r0, lsl #8

08010108 <dma_circulation_disable>:
 8010108:	4b06      	ldr	r3, [pc, #24]	; (8010124 <dma_circulation_disable+0x1c>)
 801010a:	4298      	cmp	r0, r3
 801010c:	d102      	bne.n	8010114 <dma_circulation_disable+0xc>
 801010e:	2904      	cmp	r1, #4
 8010110:	d900      	bls.n	8010114 <dma_circulation_disable+0xc>
 8010112:	e7fe      	b.n	8010112 <dma_circulation_disable+0xa>
 8010114:	2314      	movs	r3, #20
 8010116:	4359      	muls	r1, r3
 8010118:	3008      	adds	r0, #8
 801011a:	580b      	ldr	r3, [r1, r0]
 801011c:	f023 0320 	bic.w	r3, r3, #32
 8010120:	500b      	str	r3, [r1, r0]
 8010122:	4770      	bx	lr
 8010124:	40020400 	andmi	r0, r2, r0, lsl #8

08010128 <dma_memory_to_memory_disable>:
 8010128:	4b06      	ldr	r3, [pc, #24]	; (8010144 <dma_memory_to_memory_disable+0x1c>)
 801012a:	4298      	cmp	r0, r3
 801012c:	d102      	bne.n	8010134 <dma_memory_to_memory_disable+0xc>
 801012e:	2904      	cmp	r1, #4
 8010130:	d900      	bls.n	8010134 <dma_memory_to_memory_disable+0xc>
 8010132:	e7fe      	b.n	8010132 <dma_memory_to_memory_disable+0xa>
 8010134:	2314      	movs	r3, #20
 8010136:	4359      	muls	r1, r3
 8010138:	3008      	adds	r0, #8
 801013a:	580b      	ldr	r3, [r1, r0]
 801013c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010140:	500b      	str	r3, [r1, r0]
 8010142:	4770      	bx	lr
 8010144:	40020400 	andmi	r0, r2, r0, lsl #8

08010148 <enet_delay>:
 8010148:	2300      	movs	r3, #0
 801014a:	b082      	sub	sp, #8
 801014c:	9301      	str	r3, [sp, #4]
 801014e:	9001      	str	r0, [sp, #4]
 8010150:	9b01      	ldr	r3, [sp, #4]
 8010152:	b90b      	cbnz	r3, 8010158 <enet_delay+0x10>
 8010154:	b002      	add	sp, #8
 8010156:	4770      	bx	lr
 8010158:	9b01      	ldr	r3, [sp, #4]
 801015a:	3b01      	subs	r3, #1
 801015c:	9301      	str	r3, [sp, #4]
 801015e:	e7f7      	b.n	8010150 <enet_delay+0x8>

08010160 <enet_software_reset>:
 8010160:	4b07      	ldr	r3, [pc, #28]	; (8010180 <enet_software_reset+0x20>)
 8010162:	681a      	ldr	r2, [r3, #0]
 8010164:	f042 0201 	orr.w	r2, r2, #1
 8010168:	601a      	str	r2, [r3, #0]
 801016a:	4a06      	ldr	r2, [pc, #24]	; (8010184 <enet_software_reset+0x24>)
 801016c:	6819      	ldr	r1, [r3, #0]
 801016e:	07c9      	lsls	r1, r1, #31
 8010170:	d501      	bpl.n	8010176 <enet_software_reset+0x16>
 8010172:	3a01      	subs	r2, #1
 8010174:	d1fa      	bne.n	801016c <enet_software_reset+0xc>
 8010176:	6818      	ldr	r0, [r3, #0]
 8010178:	43c0      	mvns	r0, r0
 801017a:	f000 0001 	and.w	r0, r0, #1
 801017e:	4770      	bx	lr
 8010180:	40029000 	andmi	r9, r2, r0
 8010184:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010188 <enet_descriptors_chain_init>:
 8010188:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 801018c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801018e:	4a19      	ldr	r2, [pc, #100]	; (80101f4 <enet_descriptors_chain_init+0x6c>)
 8010190:	d125      	bne.n	80101de <enet_descriptors_chain_init+0x56>
 8010192:	2500      	movs	r5, #0
 8010194:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8010198:	2002      	movs	r0, #2
 801019a:	4b17      	ldr	r3, [pc, #92]	; (80101f8 <enet_descriptors_chain_init+0x70>)
 801019c:	4c17      	ldr	r4, [pc, #92]	; (80101fc <enet_descriptors_chain_init+0x74>)
 801019e:	6113      	str	r3, [r2, #16]
 80101a0:	4a17      	ldr	r2, [pc, #92]	; (8010200 <enet_descriptors_chain_init+0x78>)
 80101a2:	6013      	str	r3, [r2, #0]
 80101a4:	2200      	movs	r2, #0
 80101a6:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80101aa:	4916      	ldr	r1, [pc, #88]	; (8010204 <enet_descriptors_chain_init+0x7c>)
 80101ac:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80101b0:	600a      	str	r2, [r1, #0]
 80101b2:	4915      	ldr	r1, [pc, #84]	; (8010208 <enet_descriptors_chain_init+0x80>)
 80101b4:	600a      	str	r2, [r1, #0]
 80101b6:	f103 0110 	add.w	r1, r3, #16
 80101ba:	fb0e 4702 	mla	r7, lr, r2, r4
 80101be:	f841 7c08 	str.w	r7, [r1, #-8]
 80101c2:	4594      	cmp	ip, r2
 80101c4:	bf94      	ite	ls
 80101c6:	461f      	movls	r7, r3
 80101c8:	460f      	movhi	r7, r1
 80101ca:	3201      	adds	r2, #1
 80101cc:	4290      	cmp	r0, r2
 80101ce:	e941 6504 	strd	r6, r5, [r1, #-16]
 80101d2:	f841 7c04 	str.w	r7, [r1, #-4]
 80101d6:	f101 0110 	add.w	r1, r1, #16
 80101da:	d1ee      	bne.n	80101ba <enet_descriptors_chain_init+0x32>
 80101dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101de:	4b0b      	ldr	r3, [pc, #44]	; (801020c <enet_descriptors_chain_init+0x84>)
 80101e0:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80101e4:	60d3      	str	r3, [r2, #12]
 80101e6:	4a0a      	ldr	r2, [pc, #40]	; (8010210 <enet_descriptors_chain_init+0x88>)
 80101e8:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80101ec:	2008      	movs	r0, #8
 80101ee:	4c09      	ldr	r4, [pc, #36]	; (8010214 <enet_descriptors_chain_init+0x8c>)
 80101f0:	6013      	str	r3, [r2, #0]
 80101f2:	e7d7      	b.n	80101a4 <enet_descriptors_chain_init+0x1c>
 80101f4:	40029000 	andmi	r9, r2, r0
 80101f8:	2000dd04 	andcs	sp, r0, r4, lsl #26
 80101fc:	2000d11c 	andcs	sp, r0, ip, lsl r1
 8010200:	2000a0bc 	strhcs	sl, [r0], -ip
 8010204:	2000a0b0 	strhcs	sl, [r0], -r0
 8010208:	2000a0b4 	strhcs	sl, [r0], -r4
 801020c:	2000d09c 	mulcs	r0, ip, r0
 8010210:	2000a0b8 	strhcs	sl, [r0], -r8
 8010214:	2000a0fc 	strdcs	sl, [r0], -ip

08010218 <enet_frame_receive>:
 8010218:	4a1d      	ldr	r2, [pc, #116]	; (8010290 <enet_frame_receive+0x78>)
 801021a:	b510      	push	{r4, lr}
 801021c:	6813      	ldr	r3, [r2, #0]
 801021e:	681b      	ldr	r3, [r3, #0]
 8010220:	2b00      	cmp	r3, #0
 8010222:	db33      	blt.n	801028c <enet_frame_receive+0x74>
 8010224:	b970      	cbnz	r0, 8010244 <enet_frame_receive+0x2c>
 8010226:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801022a:	6813      	ldr	r3, [r2, #0]
 801022c:	6019      	str	r1, [r3, #0]
 801022e:	4919      	ldr	r1, [pc, #100]	; (8010294 <enet_frame_receive+0x7c>)
 8010230:	6948      	ldr	r0, [r1, #20]
 8010232:	0604      	lsls	r4, r0, #24
 8010234:	d419      	bmi.n	801026a <enet_frame_receive+0x52>
 8010236:	6859      	ldr	r1, [r3, #4]
 8010238:	0448      	lsls	r0, r1, #17
 801023a:	d51b      	bpl.n	8010274 <enet_frame_receive+0x5c>
 801023c:	68db      	ldr	r3, [r3, #12]
 801023e:	2001      	movs	r0, #1
 8010240:	6013      	str	r3, [r2, #0]
 8010242:	bd10      	pop	{r4, pc}
 8010244:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8010248:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 801024c:	d11e      	bne.n	801028c <enet_frame_receive+0x74>
 801024e:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8010252:	3b04      	subs	r3, #4
 8010254:	428b      	cmp	r3, r1
 8010256:	d819      	bhi.n	801028c <enet_frame_receive+0x74>
 8010258:	2100      	movs	r1, #0
 801025a:	4299      	cmp	r1, r3
 801025c:	6814      	ldr	r4, [r2, #0]
 801025e:	d2e2      	bcs.n	8010226 <enet_frame_receive+0xe>
 8010260:	68a4      	ldr	r4, [r4, #8]
 8010262:	5d0c      	ldrb	r4, [r1, r4]
 8010264:	5444      	strb	r4, [r0, r1]
 8010266:	3101      	adds	r1, #1
 8010268:	e7f7      	b.n	801025a <enet_frame_receive+0x42>
 801026a:	2080      	movs	r0, #128	; 0x80
 801026c:	6148      	str	r0, [r1, #20]
 801026e:	2000      	movs	r0, #0
 8010270:	6088      	str	r0, [r1, #8]
 8010272:	e7e0      	b.n	8010236 <enet_frame_receive+0x1e>
 8010274:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8010278:	4906      	ldr	r1, [pc, #24]	; (8010294 <enet_frame_receive+0x7c>)
 801027a:	bf05      	ittet	eq
 801027c:	3310      	addeq	r3, #16
 801027e:	6809      	ldreq	r1, [r1, #0]
 8010280:	68cb      	ldrne	r3, [r1, #12]
 8010282:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010286:	bf08      	it	eq
 8010288:	185b      	addeq	r3, r3, r1
 801028a:	e7d8      	b.n	801023e <enet_frame_receive+0x26>
 801028c:	2000      	movs	r0, #0
 801028e:	e7d8      	b.n	8010242 <enet_frame_receive+0x2a>
 8010290:	2000a0b8 	strhcs	sl, [r0], -r8
 8010294:	40029000 	andmi	r9, r2, r0

08010298 <enet_frame_transmit>:
 8010298:	4a1e      	ldr	r2, [pc, #120]	; (8010314 <enet_frame_transmit+0x7c>)
 801029a:	b530      	push	{r4, r5, lr}
 801029c:	6813      	ldr	r3, [r2, #0]
 801029e:	681b      	ldr	r3, [r3, #0]
 80102a0:	2b00      	cmp	r3, #0
 80102a2:	db34      	blt.n	801030e <enet_frame_transmit+0x76>
 80102a4:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80102a8:	4299      	cmp	r1, r3
 80102aa:	d830      	bhi.n	801030e <enet_frame_transmit+0x76>
 80102ac:	b9e8      	cbnz	r0, 80102ea <enet_frame_transmit+0x52>
 80102ae:	6813      	ldr	r3, [r2, #0]
 80102b0:	4819      	ldr	r0, [pc, #100]	; (8010318 <enet_frame_transmit+0x80>)
 80102b2:	6059      	str	r1, [r3, #4]
 80102b4:	6819      	ldr	r1, [r3, #0]
 80102b6:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80102ba:	6019      	str	r1, [r3, #0]
 80102bc:	6941      	ldr	r1, [r0, #20]
 80102be:	6944      	ldr	r4, [r0, #20]
 80102c0:	f001 0104 	and.w	r1, r1, #4
 80102c4:	f004 0420 	and.w	r4, r4, #32
 80102c8:	4321      	orrs	r1, r4
 80102ca:	d110      	bne.n	80102ee <enet_frame_transmit+0x56>
 80102cc:	6819      	ldr	r1, [r3, #0]
 80102ce:	02c8      	lsls	r0, r1, #11
 80102d0:	d511      	bpl.n	80102f6 <enet_frame_transmit+0x5e>
 80102d2:	68db      	ldr	r3, [r3, #12]
 80102d4:	2001      	movs	r0, #1
 80102d6:	6013      	str	r3, [r2, #0]
 80102d8:	bd30      	pop	{r4, r5, pc}
 80102da:	5cc5      	ldrb	r5, [r0, r3]
 80102dc:	68a4      	ldr	r4, [r4, #8]
 80102de:	551d      	strb	r5, [r3, r4]
 80102e0:	3301      	adds	r3, #1
 80102e2:	428b      	cmp	r3, r1
 80102e4:	6814      	ldr	r4, [r2, #0]
 80102e6:	d1f8      	bne.n	80102da <enet_frame_transmit+0x42>
 80102e8:	e7e1      	b.n	80102ae <enet_frame_transmit+0x16>
 80102ea:	2300      	movs	r3, #0
 80102ec:	e7f9      	b.n	80102e2 <enet_frame_transmit+0x4a>
 80102ee:	6141      	str	r1, [r0, #20]
 80102f0:	2100      	movs	r1, #0
 80102f2:	6041      	str	r1, [r0, #4]
 80102f4:	e7ea      	b.n	80102cc <enet_frame_transmit+0x34>
 80102f6:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80102fa:	4907      	ldr	r1, [pc, #28]	; (8010318 <enet_frame_transmit+0x80>)
 80102fc:	bf05      	ittet	eq
 80102fe:	3310      	addeq	r3, #16
 8010300:	6809      	ldreq	r1, [r1, #0]
 8010302:	690b      	ldrne	r3, [r1, #16]
 8010304:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010308:	bf08      	it	eq
 801030a:	185b      	addeq	r3, r3, r1
 801030c:	e7e2      	b.n	80102d4 <enet_frame_transmit+0x3c>
 801030e:	2000      	movs	r0, #0
 8010310:	e7e2      	b.n	80102d8 <enet_frame_transmit+0x40>
 8010312:	bf00      	nop
 8010314:	2000a0bc 	strhcs	sl, [r0], -ip
 8010318:	40029000 	andmi	r9, r2, r0

0801031c <enet_transmit_checksum_config>:
 801031c:	6803      	ldr	r3, [r0, #0]
 801031e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8010322:	430b      	orrs	r3, r1
 8010324:	6003      	str	r3, [r0, #0]
 8010326:	4770      	bx	lr

08010328 <enet_mac_address_set>:
 8010328:	888a      	ldrh	r2, [r1, #4]
 801032a:	4b03      	ldr	r3, [pc, #12]	; (8010338 <enet_mac_address_set+0x10>)
 801032c:	50c2      	str	r2, [r0, r3]
 801032e:	680a      	ldr	r2, [r1, #0]
 8010330:	3304      	adds	r3, #4
 8010332:	50c2      	str	r2, [r0, r3]
 8010334:	4770      	bx	lr
 8010336:	bf00      	nop
 8010338:	40028040 	andmi	r8, r2, r0, asr #32

0801033c <enet_rx_enable>:
 801033c:	4a05      	ldr	r2, [pc, #20]	; (8010354 <enet_rx_enable+0x18>)
 801033e:	6813      	ldr	r3, [r2, #0]
 8010340:	f043 0304 	orr.w	r3, r3, #4
 8010344:	6013      	str	r3, [r2, #0]
 8010346:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801034a:	6993      	ldr	r3, [r2, #24]
 801034c:	f043 0302 	orr.w	r3, r3, #2
 8010350:	6193      	str	r3, [r2, #24]
 8010352:	4770      	bx	lr
 8010354:	40028000 	andmi	r8, r2, r0

08010358 <enet_phy_write_read>:
 8010358:	b530      	push	{r4, r5, lr}
 801035a:	4604      	mov	r4, r0
 801035c:	4d13      	ldr	r5, [pc, #76]	; (80103ac <enet_phy_write_read+0x54>)
 801035e:	0192      	lsls	r2, r2, #6
 8010360:	6928      	ldr	r0, [r5, #16]
 8010362:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8010366:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801036a:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801036e:	4302      	orrs	r2, r0
 8010370:	02c9      	lsls	r1, r1, #11
 8010372:	b289      	uxth	r1, r1
 8010374:	2c02      	cmp	r4, #2
 8010376:	ea42 0204 	orr.w	r2, r2, r4
 801037a:	ea42 0201 	orr.w	r2, r2, r1
 801037e:	bf08      	it	eq
 8010380:	8819      	ldrheq	r1, [r3, #0]
 8010382:	f042 0201 	orr.w	r2, r2, #1
 8010386:	bf08      	it	eq
 8010388:	6169      	streq	r1, [r5, #20]
 801038a:	612a      	str	r2, [r5, #16]
 801038c:	4907      	ldr	r1, [pc, #28]	; (80103ac <enet_phy_write_read+0x54>)
 801038e:	4a08      	ldr	r2, [pc, #32]	; (80103b0 <enet_phy_write_read+0x58>)
 8010390:	6908      	ldr	r0, [r1, #16]
 8010392:	07c0      	lsls	r0, r0, #31
 8010394:	d501      	bpl.n	801039a <enet_phy_write_read+0x42>
 8010396:	3a01      	subs	r2, #1
 8010398:	d1fa      	bne.n	8010390 <enet_phy_write_read+0x38>
 801039a:	690a      	ldr	r2, [r1, #16]
 801039c:	43d2      	mvns	r2, r2
 801039e:	f002 0001 	and.w	r0, r2, #1
 80103a2:	b90c      	cbnz	r4, 80103a8 <enet_phy_write_read+0x50>
 80103a4:	694a      	ldr	r2, [r1, #20]
 80103a6:	801a      	strh	r2, [r3, #0]
 80103a8:	bd30      	pop	{r4, r5, pc}
 80103aa:	bf00      	nop
 80103ac:	40028000 	andmi	r8, r2, r0
 80103b0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080103b4 <enet_phy_config>:
 80103b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80103b6:	4d22      	ldr	r5, [pc, #136]	; (8010440 <enet_phy_config+0x8c>)
 80103b8:	2001      	movs	r0, #1
 80103ba:	692c      	ldr	r4, [r5, #16]
 80103bc:	f000 fc66 	bl	8010c8c <rcu_clock_freq_get>
 80103c0:	4b20      	ldr	r3, [pc, #128]	; (8010444 <enet_phy_config+0x90>)
 80103c2:	4a21      	ldr	r2, [pc, #132]	; (8010448 <enet_phy_config+0x94>)
 80103c4:	4403      	add	r3, r0
 80103c6:	4293      	cmp	r3, r2
 80103c8:	f024 041c 	bic.w	r4, r4, #28
 80103cc:	d21f      	bcs.n	801040e <enet_phy_config+0x5a>
 80103ce:	f044 0408 	orr.w	r4, r4, #8
 80103d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80103d6:	612c      	str	r4, [r5, #16]
 80103d8:	2200      	movs	r2, #0
 80103da:	f8ad 3006 	strh.w	r3, [sp, #6]
 80103de:	2101      	movs	r1, #1
 80103e0:	2002      	movs	r0, #2
 80103e2:	f10d 0306 	add.w	r3, sp, #6
 80103e6:	f7ff ffb7 	bl	8010358 <enet_phy_write_read>
 80103ea:	b310      	cbz	r0, 8010432 <enet_phy_config+0x7e>
 80103ec:	2200      	movs	r2, #0
 80103ee:	4817      	ldr	r0, [pc, #92]	; (801044c <enet_phy_config+0x98>)
 80103f0:	f7ff feaa 	bl	8010148 <enet_delay>
 80103f4:	2101      	movs	r1, #1
 80103f6:	4610      	mov	r0, r2
 80103f8:	f10d 0306 	add.w	r3, sp, #6
 80103fc:	f7ff ffac 	bl	8010358 <enet_phy_write_read>
 8010400:	b1b8      	cbz	r0, 8010432 <enet_phy_config+0x7e>
 8010402:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010406:	43c0      	mvns	r0, r0
 8010408:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801040c:	e012      	b.n	8010434 <enet_phy_config+0x80>
 801040e:	4b10      	ldr	r3, [pc, #64]	; (8010450 <enet_phy_config+0x9c>)
 8010410:	4a10      	ldr	r2, [pc, #64]	; (8010454 <enet_phy_config+0xa0>)
 8010412:	4403      	add	r3, r0
 8010414:	4293      	cmp	r3, r2
 8010416:	d802      	bhi.n	801041e <enet_phy_config+0x6a>
 8010418:	f044 040c 	orr.w	r4, r4, #12
 801041c:	e7d9      	b.n	80103d2 <enet_phy_config+0x1e>
 801041e:	4b0e      	ldr	r3, [pc, #56]	; (8010458 <enet_phy_config+0xa4>)
 8010420:	4a0e      	ldr	r2, [pc, #56]	; (801045c <enet_phy_config+0xa8>)
 8010422:	4403      	add	r3, r0
 8010424:	4293      	cmp	r3, r2
 8010426:	d9d4      	bls.n	80103d2 <enet_phy_config+0x1e>
 8010428:	4b0d      	ldr	r3, [pc, #52]	; (8010460 <enet_phy_config+0xac>)
 801042a:	4a0e      	ldr	r2, [pc, #56]	; (8010464 <enet_phy_config+0xb0>)
 801042c:	4403      	add	r3, r0
 801042e:	4293      	cmp	r3, r2
 8010430:	d902      	bls.n	8010438 <enet_phy_config+0x84>
 8010432:	2000      	movs	r0, #0
 8010434:	b003      	add	sp, #12
 8010436:	bd30      	pop	{r4, r5, pc}
 8010438:	f044 0404 	orr.w	r4, r4, #4
 801043c:	e7c9      	b.n	80103d2 <enet_phy_config+0x1e>
 801043e:	bf00      	nop
 8010440:	40028000 	andmi	r8, r2, r0
 8010444:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8010448:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 801044c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010450:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8010454:	017d783f 	cmneq	sp, pc, lsr r8
 8010458:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 801045c:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8010460:	faa2b580 	blx	68bda68 <__stack_size+0x68bba68>
 8010464:	0112a880 	tsteq	r2, r0, lsl #17

08010468 <enet_init>:
 8010468:	2300      	movs	r3, #0
 801046a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801046c:	4604      	mov	r4, r0
 801046e:	460d      	mov	r5, r1
 8010470:	4616      	mov	r6, r2
 8010472:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010476:	f7ff ff9d 	bl	80103b4 <enet_phy_config>
 801047a:	2800      	cmp	r0, #0
 801047c:	d037      	beq.n	80104ee <enet_init+0x86>
 801047e:	4b3b      	ldr	r3, [pc, #236]	; (801056c <enet_init+0x104>)
 8010480:	4a3b      	ldr	r2, [pc, #236]	; (8010570 <enet_init+0x108>)
 8010482:	6819      	ldr	r1, [r3, #0]
 8010484:	2c01      	cmp	r4, #1
 8010486:	ea02 0201 	and.w	r2, r2, r1
 801048a:	601a      	str	r2, [r3, #0]
 801048c:	f04f 0200 	mov.w	r2, #0
 8010490:	605a      	str	r2, [r3, #4]
 8010492:	609a      	str	r2, [r3, #8]
 8010494:	60da      	str	r2, [r3, #12]
 8010496:	6999      	ldr	r1, [r3, #24]
 8010498:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801049c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80104a0:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80104a4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80104a8:	6199      	str	r1, [r3, #24]
 80104aa:	4932      	ldr	r1, [pc, #200]	; (8010574 <enet_init+0x10c>)
 80104ac:	61da      	str	r2, [r3, #28]
 80104ae:	6988      	ldr	r0, [r1, #24]
 80104b0:	4b31      	ldr	r3, [pc, #196]	; (8010578 <enet_init+0x110>)
 80104b2:	ea03 0300 	and.w	r3, r3, r0
 80104b6:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80104ba:	618b      	str	r3, [r1, #24]
 80104bc:	680b      	ldr	r3, [r1, #0]
 80104be:	4b2f      	ldr	r3, [pc, #188]	; (801057c <enet_init+0x114>)
 80104c0:	600b      	str	r3, [r1, #0]
 80104c2:	d01e      	beq.n	8010502 <enet_init+0x9a>
 80104c4:	08e3      	lsrs	r3, r4, #3
 80104c6:	0861      	lsrs	r1, r4, #1
 80104c8:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80104cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80104d0:	430b      	orrs	r3, r1
 80104d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80104d6:	2101      	movs	r1, #1
 80104d8:	2002      	movs	r0, #2
 80104da:	f10d 0306 	add.w	r3, sp, #6
 80104de:	f7ff ff3b 	bl	8010358 <enet_phy_write_read>
 80104e2:	b158      	cbz	r0, 80104fc <enet_init+0x94>
 80104e4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80104e8:	f7ff fe2e 	bl	8010148 <enet_delay>
 80104ec:	e05d      	b.n	80105aa <enet_init+0x142>
 80104ee:	4824      	ldr	r0, [pc, #144]	; (8010580 <enet_init+0x118>)
 80104f0:	f7ff fe2a 	bl	8010148 <enet_delay>
 80104f4:	f7ff ff5e 	bl	80103b4 <enet_phy_config>
 80104f8:	2800      	cmp	r0, #0
 80104fa:	d1c0      	bne.n	801047e <enet_init+0x16>
 80104fc:	2000      	movs	r0, #0
 80104fe:	b003      	add	sp, #12
 8010500:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010502:	4614      	mov	r4, r2
 8010504:	4f1f      	ldr	r7, [pc, #124]	; (8010584 <enet_init+0x11c>)
 8010506:	2201      	movs	r2, #1
 8010508:	2000      	movs	r0, #0
 801050a:	4611      	mov	r1, r2
 801050c:	f10d 0306 	add.w	r3, sp, #6
 8010510:	f7ff ff22 	bl	8010358 <enet_phy_write_read>
 8010514:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010518:	3401      	adds	r4, #1
 801051a:	f002 0204 	and.w	r2, r2, #4
 801051e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010522:	b912      	cbnz	r2, 801052a <enet_init+0xc2>
 8010524:	42bc      	cmp	r4, r7
 8010526:	d1ee      	bne.n	8010506 <enet_init+0x9e>
 8010528:	e7e8      	b.n	80104fc <enet_init+0x94>
 801052a:	42bc      	cmp	r4, r7
 801052c:	d0e6      	beq.n	80104fc <enet_init+0x94>
 801052e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010532:	2101      	movs	r1, #1
 8010534:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010538:	2002      	movs	r0, #2
 801053a:	2200      	movs	r2, #0
 801053c:	f7ff ff0c 	bl	8010358 <enet_phy_write_read>
 8010540:	2800      	cmp	r0, #0
 8010542:	d0db      	beq.n	80104fc <enet_init+0x94>
 8010544:	2400      	movs	r4, #0
 8010546:	4f0f      	ldr	r7, [pc, #60]	; (8010584 <enet_init+0x11c>)
 8010548:	2201      	movs	r2, #1
 801054a:	2000      	movs	r0, #0
 801054c:	4611      	mov	r1, r2
 801054e:	f10d 0306 	add.w	r3, sp, #6
 8010552:	f7ff ff01 	bl	8010358 <enet_phy_write_read>
 8010556:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801055a:	3401      	adds	r4, #1
 801055c:	f002 0220 	and.w	r2, r2, #32
 8010560:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010564:	b982      	cbnz	r2, 8010588 <enet_init+0x120>
 8010566:	42bc      	cmp	r4, r7
 8010568:	d1ee      	bne.n	8010548 <enet_init+0xe0>
 801056a:	e7c7      	b.n	80104fc <enet_init+0x94>
 801056c:	40028000 	andmi	r8, r2, r0
 8010570:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8010574:	40029000 	andmi	r9, r2, r0
 8010578:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 801057c:	02c16000 	sbceq	r6, r1, #0
 8010580:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8010584:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010588:	42bc      	cmp	r4, r7
 801058a:	d0b7      	beq.n	80104fc <enet_init+0x94>
 801058c:	2101      	movs	r1, #1
 801058e:	2210      	movs	r2, #16
 8010590:	2000      	movs	r0, #0
 8010592:	f7ff fee1 	bl	8010358 <enet_phy_write_read>
 8010596:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801059a:	f3c3 0480 	ubfx	r4, r3, #2, #1
 801059e:	0799      	lsls	r1, r3, #30
 80105a0:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80105a4:	d401      	bmi.n	80105aa <enet_init+0x142>
 80105a6:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80105aa:	4b63      	ldr	r3, [pc, #396]	; (8010738 <enet_init+0x2d0>)
 80105ac:	681a      	ldr	r2, [r3, #0]
 80105ae:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80105b2:	4314      	orrs	r4, r2
 80105b4:	056a      	lsls	r2, r5, #21
 80105b6:	601c      	str	r4, [r3, #0]
 80105b8:	d50b      	bpl.n	80105d2 <enet_init+0x16a>
 80105ba:	681a      	ldr	r2, [r3, #0]
 80105bc:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80105c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80105c4:	601a      	str	r2, [r3, #0]
 80105c6:	4a5d      	ldr	r2, [pc, #372]	; (801073c <enet_init+0x2d4>)
 80105c8:	6993      	ldr	r3, [r2, #24]
 80105ca:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80105ce:	431d      	orrs	r5, r3
 80105d0:	6195      	str	r5, [r2, #24]
 80105d2:	4959      	ldr	r1, [pc, #356]	; (8010738 <enet_init+0x2d0>)
 80105d4:	684b      	ldr	r3, [r1, #4]
 80105d6:	431e      	orrs	r6, r3
 80105d8:	4b59      	ldr	r3, [pc, #356]	; (8010740 <enet_init+0x2d8>)
 80105da:	604e      	str	r6, [r1, #4]
 80105dc:	681a      	ldr	r2, [r3, #0]
 80105de:	07d7      	lsls	r7, r2, #31
 80105e0:	d510      	bpl.n	8010604 <enet_init+0x19c>
 80105e2:	685a      	ldr	r2, [r3, #4]
 80105e4:	680c      	ldr	r4, [r1, #0]
 80105e6:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80105ea:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80105ee:	4320      	orrs	r0, r4
 80105f0:	6008      	str	r0, [r1, #0]
 80105f2:	4852      	ldr	r0, [pc, #328]	; (801073c <enet_init+0x2d4>)
 80105f4:	0892      	lsrs	r2, r2, #2
 80105f6:	6981      	ldr	r1, [r0, #24]
 80105f8:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80105fc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8010600:	430a      	orrs	r2, r1
 8010602:	6182      	str	r2, [r0, #24]
 8010604:	681a      	ldr	r2, [r3, #0]
 8010606:	0796      	lsls	r6, r2, #30
 8010608:	d508      	bpl.n	801061c <enet_init+0x1b4>
 801060a:	494c      	ldr	r1, [pc, #304]	; (801073c <enet_init+0x2d4>)
 801060c:	6898      	ldr	r0, [r3, #8]
 801060e:	680a      	ldr	r2, [r1, #0]
 8010610:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8010614:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8010618:	4302      	orrs	r2, r0
 801061a:	600a      	str	r2, [r1, #0]
 801061c:	681a      	ldr	r2, [r3, #0]
 801061e:	0755      	lsls	r5, r2, #29
 8010620:	d508      	bpl.n	8010634 <enet_init+0x1cc>
 8010622:	4946      	ldr	r1, [pc, #280]	; (801073c <enet_init+0x2d4>)
 8010624:	68d8      	ldr	r0, [r3, #12]
 8010626:	680a      	ldr	r2, [r1, #0]
 8010628:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 801062c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8010630:	4302      	orrs	r2, r0
 8010632:	600a      	str	r2, [r1, #0]
 8010634:	681a      	ldr	r2, [r3, #0]
 8010636:	0714      	lsls	r4, r2, #28
 8010638:	d508      	bpl.n	801064c <enet_init+0x1e4>
 801063a:	4940      	ldr	r1, [pc, #256]	; (801073c <enet_init+0x2d4>)
 801063c:	6918      	ldr	r0, [r3, #16]
 801063e:	680a      	ldr	r2, [r1, #0]
 8010640:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8010644:	f022 0202 	bic.w	r2, r2, #2
 8010648:	4302      	orrs	r2, r0
 801064a:	600a      	str	r2, [r1, #0]
 801064c:	681a      	ldr	r2, [r3, #0]
 801064e:	06d0      	lsls	r0, r2, #27
 8010650:	d506      	bpl.n	8010660 <enet_init+0x1f8>
 8010652:	493a      	ldr	r1, [pc, #232]	; (801073c <enet_init+0x2d4>)
 8010654:	4a3b      	ldr	r2, [pc, #236]	; (8010744 <enet_init+0x2dc>)
 8010656:	6988      	ldr	r0, [r1, #24]
 8010658:	4002      	ands	r2, r0
 801065a:	6958      	ldr	r0, [r3, #20]
 801065c:	4302      	orrs	r2, r0
 801065e:	618a      	str	r2, [r1, #24]
 8010660:	681a      	ldr	r2, [r3, #0]
 8010662:	0691      	lsls	r1, r2, #26
 8010664:	d508      	bpl.n	8010678 <enet_init+0x210>
 8010666:	4935      	ldr	r1, [pc, #212]	; (801073c <enet_init+0x2d4>)
 8010668:	6998      	ldr	r0, [r3, #24]
 801066a:	698a      	ldr	r2, [r1, #24]
 801066c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8010670:	f022 0204 	bic.w	r2, r2, #4
 8010674:	4302      	orrs	r2, r0
 8010676:	618a      	str	r2, [r1, #24]
 8010678:	681a      	ldr	r2, [r3, #0]
 801067a:	0652      	lsls	r2, r2, #25
 801067c:	d506      	bpl.n	801068c <enet_init+0x224>
 801067e:	492e      	ldr	r1, [pc, #184]	; (8010738 <enet_init+0x2d0>)
 8010680:	69d8      	ldr	r0, [r3, #28]
 8010682:	69ca      	ldr	r2, [r1, #28]
 8010684:	0c52      	lsrs	r2, r2, #17
 8010686:	0452      	lsls	r2, r2, #17
 8010688:	4302      	orrs	r2, r0
 801068a:	61ca      	str	r2, [r1, #28]
 801068c:	681a      	ldr	r2, [r3, #0]
 801068e:	0617      	lsls	r7, r2, #24
 8010690:	d517      	bpl.n	80106c2 <enet_init+0x25a>
 8010692:	4c29      	ldr	r4, [pc, #164]	; (8010738 <enet_init+0x2d0>)
 8010694:	6a1a      	ldr	r2, [r3, #32]
 8010696:	69a0      	ldr	r0, [r4, #24]
 8010698:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 801069c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80106a0:	0400      	lsls	r0, r0, #16
 80106a2:	0c00      	lsrs	r0, r0, #16
 80106a4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80106a8:	4301      	orrs	r1, r0
 80106aa:	4824      	ldr	r0, [pc, #144]	; (801073c <enet_init+0x2d4>)
 80106ac:	61a1      	str	r1, [r4, #24]
 80106ae:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80106b2:	0a12      	lsrs	r2, r2, #8
 80106b4:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80106b8:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80106bc:	430a      	orrs	r2, r1
 80106be:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80106c2:	681a      	ldr	r2, [r3, #0]
 80106c4:	05d6      	lsls	r6, r2, #23
 80106c6:	bf42      	ittt	mi
 80106c8:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80106ca:	4a1b      	ldrmi	r2, [pc, #108]	; (8010738 <enet_init+0x2d0>)
 80106cc:	6091      	strmi	r1, [r2, #8]
 80106ce:	681a      	ldr	r2, [r3, #0]
 80106d0:	0595      	lsls	r5, r2, #22
 80106d2:	bf42      	ittt	mi
 80106d4:	4a18      	ldrmi	r2, [pc, #96]	; (8010738 <enet_init+0x2d0>)
 80106d6:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80106d8:	60d1      	strmi	r1, [r2, #12]
 80106da:	681a      	ldr	r2, [r3, #0]
 80106dc:	0554      	lsls	r4, r2, #21
 80106de:	d508      	bpl.n	80106f2 <enet_init+0x28a>
 80106e0:	4915      	ldr	r1, [pc, #84]	; (8010738 <enet_init+0x2d0>)
 80106e2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80106e4:	684a      	ldr	r2, [r1, #4]
 80106e6:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80106ea:	f022 0206 	bic.w	r2, r2, #6
 80106ee:	4302      	orrs	r2, r0
 80106f0:	604a      	str	r2, [r1, #4]
 80106f2:	681a      	ldr	r2, [r3, #0]
 80106f4:	0510      	lsls	r0, r2, #20
 80106f6:	d508      	bpl.n	801070a <enet_init+0x2a2>
 80106f8:	490f      	ldr	r1, [pc, #60]	; (8010738 <enet_init+0x2d0>)
 80106fa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80106fc:	680a      	ldr	r2, [r1, #0]
 80106fe:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8010702:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8010706:	4302      	orrs	r2, r0
 8010708:	600a      	str	r2, [r1, #0]
 801070a:	681a      	ldr	r2, [r3, #0]
 801070c:	04d1      	lsls	r1, r2, #19
 801070e:	d506      	bpl.n	801071e <enet_init+0x2b6>
 8010710:	4909      	ldr	r1, [pc, #36]	; (8010738 <enet_init+0x2d0>)
 8010712:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010714:	680a      	ldr	r2, [r1, #0]
 8010716:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801071a:	4302      	orrs	r2, r0
 801071c:	600a      	str	r2, [r1, #0]
 801071e:	681a      	ldr	r2, [r3, #0]
 8010720:	0492      	lsls	r2, r2, #18
 8010722:	d506      	bpl.n	8010732 <enet_init+0x2ca>
 8010724:	4904      	ldr	r1, [pc, #16]	; (8010738 <enet_init+0x2d0>)
 8010726:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010728:	680a      	ldr	r2, [r1, #0]
 801072a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801072e:	4313      	orrs	r3, r2
 8010730:	600b      	str	r3, [r1, #0]
 8010732:	2001      	movs	r0, #1
 8010734:	e6e3      	b.n	80104fe <enet_init+0x96>
 8010736:	bf00      	nop
 8010738:	40028000 	andmi	r8, r2, r0
 801073c:	40029000 	andmi	r9, r2, r0
 8010740:	2000a0c0 	andcs	sl, r0, r0, asr #1
 8010744:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08010748 <enet_txfifo_flush>:
 8010748:	4b06      	ldr	r3, [pc, #24]	; (8010764 <enet_txfifo_flush+0x1c>)
 801074a:	4807      	ldr	r0, [pc, #28]	; (8010768 <enet_txfifo_flush+0x20>)
 801074c:	699a      	ldr	r2, [r3, #24]
 801074e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8010752:	619a      	str	r2, [r3, #24]
 8010754:	699a      	ldr	r2, [r3, #24]
 8010756:	02d2      	lsls	r2, r2, #11
 8010758:	d502      	bpl.n	8010760 <enet_txfifo_flush+0x18>
 801075a:	3801      	subs	r0, #1
 801075c:	d1fa      	bne.n	8010754 <enet_txfifo_flush+0xc>
 801075e:	4770      	bx	lr
 8010760:	2001      	movs	r0, #1
 8010762:	4770      	bx	lr
 8010764:	40029000 	andmi	r9, r2, r0
 8010768:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801076c <enet_tx_enable>:
 801076c:	4a06      	ldr	r2, [pc, #24]	; (8010788 <enet_tx_enable+0x1c>)
 801076e:	b508      	push	{r3, lr}
 8010770:	6813      	ldr	r3, [r2, #0]
 8010772:	f043 0308 	orr.w	r3, r3, #8
 8010776:	6013      	str	r3, [r2, #0]
 8010778:	f7ff ffe6 	bl	8010748 <enet_txfifo_flush>
 801077c:	4a03      	ldr	r2, [pc, #12]	; (801078c <enet_tx_enable+0x20>)
 801077e:	6993      	ldr	r3, [r2, #24]
 8010780:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010784:	6193      	str	r3, [r2, #24]
 8010786:	bd08      	pop	{r3, pc}
 8010788:	40028000 	andmi	r8, r2, r0
 801078c:	40029000 	andmi	r9, r2, r0

08010790 <enet_enable>:
 8010790:	b508      	push	{r3, lr}
 8010792:	f7ff ffeb 	bl	801076c <enet_tx_enable>
 8010796:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801079a:	f7ff bdcf 	b.w	801033c <enet_rx_enable>

0801079e <enet_desc_information_get>:
 801079e:	2905      	cmp	r1, #5
 80107a0:	d817      	bhi.n	80107d2 <enet_desc_information_get+0x34>
 80107a2:	e8df f001 	tbb	[pc, r1]
 80107a6:	03091012 	movweq	r1, #36882	; 0x9012
 80107aa:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80107ae:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80107b2:	4770      	bx	lr
 80107b4:	88c0      	ldrh	r0, [r0, #6]
 80107b6:	e7fa      	b.n	80107ae <enet_desc_information_get+0x10>
 80107b8:	8840      	ldrh	r0, [r0, #2]
 80107ba:	f3c0 000d 	ubfx	r0, r0, #0, #14
 80107be:	2804      	cmp	r0, #4
 80107c0:	d90a      	bls.n	80107d8 <enet_desc_information_get+0x3a>
 80107c2:	3804      	subs	r0, #4
 80107c4:	4770      	bx	lr
 80107c6:	6880      	ldr	r0, [r0, #8]
 80107c8:	4770      	bx	lr
 80107ca:	6800      	ldr	r0, [r0, #0]
 80107cc:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80107d0:	4770      	bx	lr
 80107d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80107d6:	4770      	bx	lr
 80107d8:	2000      	movs	r0, #0
 80107da:	4770      	bx	lr

080107dc <enet_rxframe_drop>:
 80107dc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80107e0:	4814      	ldr	r0, [pc, #80]	; (8010834 <enet_rxframe_drop+0x58>)
 80107e2:	b510      	push	{r4, lr}
 80107e4:	6802      	ldr	r2, [r0, #0]
 80107e6:	4914      	ldr	r1, [pc, #80]	; (8010838 <enet_rxframe_drop+0x5c>)
 80107e8:	6854      	ldr	r4, [r2, #4]
 80107ea:	6013      	str	r3, [r2, #0]
 80107ec:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 80107f0:	680b      	ldr	r3, [r1, #0]
 80107f2:	d009      	beq.n	8010808 <enet_rxframe_drop+0x2c>
 80107f4:	b12b      	cbz	r3, 8010802 <enet_rxframe_drop+0x26>
 80107f6:	68da      	ldr	r2, [r3, #12]
 80107f8:	6002      	str	r2, [r0, #0]
 80107fa:	681a      	ldr	r2, [r3, #0]
 80107fc:	b1ba      	cbz	r2, 801082e <enet_rxframe_drop+0x52>
 80107fe:	600a      	str	r2, [r1, #0]
 8010800:	bd10      	pop	{r4, pc}
 8010802:	68d3      	ldr	r3, [r2, #12]
 8010804:	6003      	str	r3, [r0, #0]
 8010806:	e7fb      	b.n	8010800 <enet_rxframe_drop+0x24>
 8010808:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 801080c:	4c0b      	ldr	r4, [pc, #44]	; (801083c <enet_rxframe_drop+0x60>)
 801080e:	d006      	beq.n	801081e <enet_rxframe_drop+0x42>
 8010810:	68e2      	ldr	r2, [r4, #12]
 8010812:	6002      	str	r2, [r0, #0]
 8010814:	2b00      	cmp	r3, #0
 8010816:	d0f3      	beq.n	8010800 <enet_rxframe_drop+0x24>
 8010818:	681b      	ldr	r3, [r3, #0]
 801081a:	600b      	str	r3, [r1, #0]
 801081c:	e7f0      	b.n	8010800 <enet_rxframe_drop+0x24>
 801081e:	6824      	ldr	r4, [r4, #0]
 8010820:	3210      	adds	r2, #16
 8010822:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8010826:	4422      	add	r2, r4
 8010828:	6002      	str	r2, [r0, #0]
 801082a:	2b00      	cmp	r3, #0
 801082c:	d0e8      	beq.n	8010800 <enet_rxframe_drop+0x24>
 801082e:	3310      	adds	r3, #16
 8010830:	e7f3      	b.n	801081a <enet_rxframe_drop+0x3e>
 8010832:	bf00      	nop
 8010834:	2000a0b8 	strhcs	sl, [r0], -r8
 8010838:	2000a0b0 	strhcs	sl, [r0], -r0
 801083c:	40029000 	andmi	r9, r2, r0

08010840 <enet_rxframe_size_get>:
 8010840:	b508      	push	{r3, lr}
 8010842:	4b0c      	ldr	r3, [pc, #48]	; (8010874 <enet_rxframe_size_get+0x34>)
 8010844:	681b      	ldr	r3, [r3, #0]
 8010846:	6818      	ldr	r0, [r3, #0]
 8010848:	2800      	cmp	r0, #0
 801084a:	db10      	blt.n	801086e <enet_rxframe_size_get+0x2e>
 801084c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8010850:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010854:	d003      	beq.n	801085e <enet_rxframe_size_get+0x1e>
 8010856:	f7ff ffc1 	bl	80107dc <enet_rxframe_drop>
 801085a:	2001      	movs	r0, #1
 801085c:	bd08      	pop	{r3, pc}
 801085e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8010862:	2b21      	cmp	r3, #33	; 0x21
 8010864:	d0f7      	beq.n	8010856 <enet_rxframe_size_get+0x16>
 8010866:	f3c0 400d 	ubfx	r0, r0, #16, #14
 801086a:	3804      	subs	r0, #4
 801086c:	e7f6      	b.n	801085c <enet_rxframe_size_get+0x1c>
 801086e:	2000      	movs	r0, #0
 8010870:	e7f4      	b.n	801085c <enet_rxframe_size_get+0x1c>
 8010872:	bf00      	nop
 8010874:	2000a0b8 	strhcs	sl, [r0], -r8

08010878 <enet_initpara_reset>:
 8010878:	2200      	movs	r2, #0
 801087a:	4b08      	ldr	r3, [pc, #32]	; (801089c <enet_initpara_reset+0x24>)
 801087c:	e9c3 2200 	strd	r2, r2, [r3]
 8010880:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8010884:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8010888:	e9c3 2206 	strd	r2, r2, [r3, #24]
 801088c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8010890:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8010894:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8010898:	639a      	str	r2, [r3, #56]	; 0x38
 801089a:	4770      	bx	lr
 801089c:	2000a0c0 	andcs	sl, r0, r0, asr #1

080108a0 <enet_deinit>:
 80108a0:	b508      	push	{r3, lr}
 80108a2:	f640 200e 	movw	r0, #2574	; 0xa0e
 80108a6:	f000 f946 	bl	8010b36 <rcu_periph_reset_enable>
 80108aa:	f640 200e 	movw	r0, #2574	; 0xa0e
 80108ae:	f000 f944 	bl	8010b3a <rcu_periph_reset_disable>
 80108b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80108b6:	f7ff bfdf 	b.w	8010878 <enet_initpara_reset>
	...

080108bc <fmc_bank0_unlock>:
 80108bc:	4b04      	ldr	r3, [pc, #16]	; (80108d0 <fmc_bank0_unlock+0x14>)
 80108be:	691a      	ldr	r2, [r3, #16]
 80108c0:	0612      	lsls	r2, r2, #24
 80108c2:	bf41      	itttt	mi
 80108c4:	4a03      	ldrmi	r2, [pc, #12]	; (80108d4 <fmc_bank0_unlock+0x18>)
 80108c6:	605a      	strmi	r2, [r3, #4]
 80108c8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80108cc:	605a      	strmi	r2, [r3, #4]
 80108ce:	4770      	bx	lr
 80108d0:	40022000 	andmi	r2, r2, r0
 80108d4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080108d8 <fmc_bank1_unlock>:
 80108d8:	4b04      	ldr	r3, [pc, #16]	; (80108ec <fmc_bank1_unlock+0x14>)
 80108da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80108dc:	0612      	lsls	r2, r2, #24
 80108de:	bf41      	itttt	mi
 80108e0:	4a03      	ldrmi	r2, [pc, #12]	; (80108f0 <fmc_bank1_unlock+0x18>)
 80108e2:	645a      	strmi	r2, [r3, #68]	; 0x44
 80108e4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80108e8:	645a      	strmi	r2, [r3, #68]	; 0x44
 80108ea:	4770      	bx	lr
 80108ec:	40022000 	andmi	r2, r2, r0
 80108f0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080108f4 <fmc_bank0_lock>:
 80108f4:	4a02      	ldr	r2, [pc, #8]	; (8010900 <fmc_bank0_lock+0xc>)
 80108f6:	6913      	ldr	r3, [r2, #16]
 80108f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80108fc:	6113      	str	r3, [r2, #16]
 80108fe:	4770      	bx	lr
 8010900:	40022000 	andmi	r2, r2, r0

08010904 <fmc_bank1_lock>:
 8010904:	4a02      	ldr	r2, [pc, #8]	; (8010910 <fmc_bank1_lock+0xc>)
 8010906:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8010908:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801090c:	6513      	str	r3, [r2, #80]	; 0x50
 801090e:	4770      	bx	lr
 8010910:	40022000 	andmi	r2, r2, r0

08010914 <fmc_bank0_state_get>:
 8010914:	4b07      	ldr	r3, [pc, #28]	; (8010934 <fmc_bank0_state_get+0x20>)
 8010916:	68da      	ldr	r2, [r3, #12]
 8010918:	07d1      	lsls	r1, r2, #31
 801091a:	d407      	bmi.n	801092c <fmc_bank0_state_get+0x18>
 801091c:	68da      	ldr	r2, [r3, #12]
 801091e:	06d2      	lsls	r2, r2, #27
 8010920:	d406      	bmi.n	8010930 <fmc_bank0_state_get+0x1c>
 8010922:	68d8      	ldr	r0, [r3, #12]
 8010924:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8010928:	0040      	lsls	r0, r0, #1
 801092a:	4770      	bx	lr
 801092c:	2001      	movs	r0, #1
 801092e:	4770      	bx	lr
 8010930:	2003      	movs	r0, #3
 8010932:	4770      	bx	lr
 8010934:	40022000 	andmi	r2, r2, r0

08010938 <fmc_bank1_state_get>:
 8010938:	4b07      	ldr	r3, [pc, #28]	; (8010958 <fmc_bank1_state_get+0x20>)
 801093a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801093c:	07d1      	lsls	r1, r2, #31
 801093e:	d407      	bmi.n	8010950 <fmc_bank1_state_get+0x18>
 8010940:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010942:	06d2      	lsls	r2, r2, #27
 8010944:	d406      	bmi.n	8010954 <fmc_bank1_state_get+0x1c>
 8010946:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010948:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801094c:	0040      	lsls	r0, r0, #1
 801094e:	4770      	bx	lr
 8010950:	2001      	movs	r0, #1
 8010952:	4770      	bx	lr
 8010954:	2003      	movs	r0, #3
 8010956:	4770      	bx	lr
 8010958:	40022000 	andmi	r2, r2, r0

0801095c <fwdgt_enable>:
 801095c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8010960:	4b01      	ldr	r3, [pc, #4]	; (8010968 <fwdgt_enable+0xc>)
 8010962:	601a      	str	r2, [r3, #0]
 8010964:	4770      	bx	lr
 8010966:	bf00      	nop
 8010968:	40003000 	andmi	r3, r0, r0

0801096c <fwdgt_counter_reload>:
 801096c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8010970:	4b01      	ldr	r3, [pc, #4]	; (8010978 <fwdgt_counter_reload+0xc>)
 8010972:	601a      	str	r2, [r3, #0]
 8010974:	4770      	bx	lr
 8010976:	bf00      	nop
 8010978:	40003000 	andmi	r3, r0, r0

0801097c <fwdgt_config>:
 801097c:	f245 5355 	movw	r3, #21845	; 0x5555
 8010980:	4a11      	ldr	r2, [pc, #68]	; (80109c8 <fwdgt_config+0x4c>)
 8010982:	b510      	push	{r4, lr}
 8010984:	4c11      	ldr	r4, [pc, #68]	; (80109cc <fwdgt_config+0x50>)
 8010986:	6013      	str	r3, [r2, #0]
 8010988:	68d3      	ldr	r3, [r2, #12]
 801098a:	3c01      	subs	r4, #1
 801098c:	f003 0301 	and.w	r3, r3, #1
 8010990:	d013      	beq.n	80109ba <fwdgt_config+0x3e>
 8010992:	2b00      	cmp	r3, #0
 8010994:	d1f8      	bne.n	8010988 <fwdgt_config+0xc>
 8010996:	6051      	str	r1, [r2, #4]
 8010998:	490c      	ldr	r1, [pc, #48]	; (80109cc <fwdgt_config+0x50>)
 801099a:	4a0b      	ldr	r2, [pc, #44]	; (80109c8 <fwdgt_config+0x4c>)
 801099c:	68d3      	ldr	r3, [r2, #12]
 801099e:	3901      	subs	r1, #1
 80109a0:	f003 0302 	and.w	r3, r3, #2
 80109a4:	d00d      	beq.n	80109c2 <fwdgt_config+0x46>
 80109a6:	2b00      	cmp	r3, #0
 80109a8:	d1f8      	bne.n	801099c <fwdgt_config+0x20>
 80109aa:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80109ae:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80109b2:	6090      	str	r0, [r2, #8]
 80109b4:	2001      	movs	r0, #1
 80109b6:	6013      	str	r3, [r2, #0]
 80109b8:	e002      	b.n	80109c0 <fwdgt_config+0x44>
 80109ba:	2b00      	cmp	r3, #0
 80109bc:	d0eb      	beq.n	8010996 <fwdgt_config+0x1a>
 80109be:	2000      	movs	r0, #0
 80109c0:	bd10      	pop	{r4, pc}
 80109c2:	2b00      	cmp	r3, #0
 80109c4:	d1fb      	bne.n	80109be <fwdgt_config+0x42>
 80109c6:	e7f0      	b.n	80109aa <fwdgt_config+0x2e>
 80109c8:	40003000 	andmi	r3, r0, r0
 80109cc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080109d0 <gpio_init>:
 80109d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109d4:	f04f 0c0f 	mov.w	ip, #15
 80109d8:	06cf      	lsls	r7, r1, #27
 80109da:	f04f 0400 	mov.w	r4, #0
 80109de:	f04f 0701 	mov.w	r7, #1
 80109e2:	f001 050f 	and.w	r5, r1, #15
 80109e6:	bf48      	it	mi
 80109e8:	4315      	orrmi	r5, r2
 80109ea:	fa23 f204 	lsr.w	r2, r3, r4
 80109ee:	07d6      	lsls	r6, r2, #31
 80109f0:	d510      	bpl.n	8010a14 <gpio_init+0x44>
 80109f2:	00a2      	lsls	r2, r4, #2
 80109f4:	6806      	ldr	r6, [r0, #0]
 80109f6:	fa0c fe02 	lsl.w	lr, ip, r2
 80109fa:	ea26 060e 	bic.w	r6, r6, lr
 80109fe:	fa05 f202 	lsl.w	r2, r5, r2
 8010a02:	2928      	cmp	r1, #40	; 0x28
 8010a04:	ea42 0206 	orr.w	r2, r2, r6
 8010a08:	d128      	bne.n	8010a5c <gpio_init+0x8c>
 8010a0a:	fa07 f604 	lsl.w	r6, r7, r4
 8010a0e:	401e      	ands	r6, r3
 8010a10:	6146      	str	r6, [r0, #20]
 8010a12:	6002      	str	r2, [r0, #0]
 8010a14:	3401      	adds	r4, #1
 8010a16:	2c08      	cmp	r4, #8
 8010a18:	d1e7      	bne.n	80109ea <gpio_init+0x1a>
 8010a1a:	2600      	movs	r6, #0
 8010a1c:	f04f 0c0f 	mov.w	ip, #15
 8010a20:	2701      	movs	r7, #1
 8010a22:	f106 0208 	add.w	r2, r6, #8
 8010a26:	fa23 f402 	lsr.w	r4, r3, r2
 8010a2a:	07e4      	lsls	r4, r4, #31
 8010a2c:	d511      	bpl.n	8010a52 <gpio_init+0x82>
 8010a2e:	00b4      	lsls	r4, r6, #2
 8010a30:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8010a34:	fa0c f804 	lsl.w	r8, ip, r4
 8010a38:	ea2e 0e08 	bic.w	lr, lr, r8
 8010a3c:	fa05 f404 	lsl.w	r4, r5, r4
 8010a40:	2928      	cmp	r1, #40	; 0x28
 8010a42:	ea44 040e 	orr.w	r4, r4, lr
 8010a46:	d110      	bne.n	8010a6a <gpio_init+0x9a>
 8010a48:	fa07 f202 	lsl.w	r2, r7, r2
 8010a4c:	401a      	ands	r2, r3
 8010a4e:	6142      	str	r2, [r0, #20]
 8010a50:	6044      	str	r4, [r0, #4]
 8010a52:	3601      	adds	r6, #1
 8010a54:	2e08      	cmp	r6, #8
 8010a56:	d1e4      	bne.n	8010a22 <gpio_init+0x52>
 8010a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a5c:	2948      	cmp	r1, #72	; 0x48
 8010a5e:	bf02      	ittt	eq
 8010a60:	fa07 f604 	lsleq.w	r6, r7, r4
 8010a64:	401e      	andeq	r6, r3
 8010a66:	6106      	streq	r6, [r0, #16]
 8010a68:	e7d3      	b.n	8010a12 <gpio_init+0x42>
 8010a6a:	2948      	cmp	r1, #72	; 0x48
 8010a6c:	bf02      	ittt	eq
 8010a6e:	fa07 f202 	lsleq.w	r2, r7, r2
 8010a72:	401a      	andeq	r2, r3
 8010a74:	6102      	streq	r2, [r0, #16]
 8010a76:	e7eb      	b.n	8010a50 <gpio_init+0x80>

08010a78 <gpio_pin_remap_config>:
 8010a78:	2800      	cmp	r0, #0
 8010a7a:	4a16      	ldr	r2, [pc, #88]	; (8010ad4 <gpio_pin_remap_config+0x5c>)
 8010a7c:	b530      	push	{r4, r5, lr}
 8010a7e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8010a82:	bfb4      	ite	lt
 8010a84:	69d3      	ldrlt	r3, [r2, #28]
 8010a86:	6853      	ldrge	r3, [r2, #4]
 8010a88:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8010a8c:	b284      	uxth	r4, r0
 8010a8e:	d110      	bne.n	8010ab2 <gpio_pin_remap_config+0x3a>
 8010a90:	6855      	ldr	r5, [r2, #4]
 8010a92:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8010a96:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8010a9a:	6055      	str	r5, [r2, #4]
 8010a9c:	b119      	cbz	r1, 8010aa6 <gpio_pin_remap_config+0x2e>
 8010a9e:	0d42      	lsrs	r2, r0, #21
 8010aa0:	0112      	lsls	r2, r2, #4
 8010aa2:	4094      	lsls	r4, r2
 8010aa4:	4323      	orrs	r3, r4
 8010aa6:	4a0b      	ldr	r2, [pc, #44]	; (8010ad4 <gpio_pin_remap_config+0x5c>)
 8010aa8:	2800      	cmp	r0, #0
 8010aaa:	bfb4      	ite	lt
 8010aac:	61d3      	strlt	r3, [r2, #28]
 8010aae:	6053      	strge	r3, [r2, #4]
 8010ab0:	bd30      	pop	{r4, r5, pc}
 8010ab2:	02c2      	lsls	r2, r0, #11
 8010ab4:	bf4d      	iteet	mi
 8010ab6:	2203      	movmi	r2, #3
 8010ab8:	0d42      	lsrpl	r2, r0, #21
 8010aba:	0112      	lslpl	r2, r2, #4
 8010abc:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8010ac0:	bf4c      	ite	mi
 8010ac2:	40aa      	lslmi	r2, r5
 8010ac4:	fa04 f202 	lslpl.w	r2, r4, r2
 8010ac8:	ea23 0302 	bic.w	r3, r3, r2
 8010acc:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8010ad0:	e7e4      	b.n	8010a9c <gpio_pin_remap_config+0x24>
 8010ad2:	bf00      	nop
 8010ad4:	40010000 	andmi	r0, r1, r0

08010ad8 <gpio_ethernet_phy_select>:
 8010ad8:	4b04      	ldr	r3, [pc, #16]	; (8010aec <gpio_ethernet_phy_select+0x14>)
 8010ada:	685a      	ldr	r2, [r3, #4]
 8010adc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8010ae0:	605a      	str	r2, [r3, #4]
 8010ae2:	685a      	ldr	r2, [r3, #4]
 8010ae4:	4302      	orrs	r2, r0
 8010ae6:	605a      	str	r2, [r3, #4]
 8010ae8:	4770      	bx	lr
 8010aea:	bf00      	nop
 8010aec:	40010000 	andmi	r0, r1, r0

08010af0 <pmu_backup_write_enable>:
 8010af0:	4a02      	ldr	r2, [pc, #8]	; (8010afc <pmu_backup_write_enable+0xc>)
 8010af2:	6813      	ldr	r3, [r2, #0]
 8010af4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010af8:	6013      	str	r3, [r2, #0]
 8010afa:	4770      	bx	lr
 8010afc:	40007000 	andmi	r7, r0, r0

08010b00 <rcu_periph_clock_enable>:
 8010b00:	2201      	movs	r2, #1
 8010b02:	0983      	lsrs	r3, r0, #6
 8010b04:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010b08:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010b0c:	6819      	ldr	r1, [r3, #0]
 8010b0e:	f000 001f 	and.w	r0, r0, #31
 8010b12:	4082      	lsls	r2, r0
 8010b14:	430a      	orrs	r2, r1
 8010b16:	601a      	str	r2, [r3, #0]
 8010b18:	4770      	bx	lr

08010b1a <rcu_periph_clock_disable>:
 8010b1a:	2101      	movs	r1, #1
 8010b1c:	0983      	lsrs	r3, r0, #6
 8010b1e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010b22:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010b26:	681a      	ldr	r2, [r3, #0]
 8010b28:	f000 001f 	and.w	r0, r0, #31
 8010b2c:	4081      	lsls	r1, r0
 8010b2e:	ea22 0201 	bic.w	r2, r2, r1
 8010b32:	601a      	str	r2, [r3, #0]
 8010b34:	4770      	bx	lr

08010b36 <rcu_periph_reset_enable>:
 8010b36:	f7ff bfe3 	b.w	8010b00 <rcu_periph_clock_enable>

08010b3a <rcu_periph_reset_disable>:
 8010b3a:	f7ff bfee 	b.w	8010b1a <rcu_periph_clock_disable>
	...

08010b40 <rcu_ckout0_config>:
 8010b40:	4a03      	ldr	r2, [pc, #12]	; (8010b50 <rcu_ckout0_config+0x10>)
 8010b42:	6853      	ldr	r3, [r2, #4]
 8010b44:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8010b48:	4303      	orrs	r3, r0
 8010b4a:	6053      	str	r3, [r2, #4]
 8010b4c:	4770      	bx	lr
 8010b4e:	bf00      	nop
 8010b50:	40021000 	andmi	r1, r2, r0

08010b54 <rcu_pll2_config>:
 8010b54:	4b04      	ldr	r3, [pc, #16]	; (8010b68 <rcu_pll2_config+0x14>)
 8010b56:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010b58:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8010b5c:	62da      	str	r2, [r3, #44]	; 0x2c
 8010b5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010b60:	4302      	orrs	r2, r0
 8010b62:	62da      	str	r2, [r3, #44]	; 0x2c
 8010b64:	4770      	bx	lr
 8010b66:	bf00      	nop
 8010b68:	40021000 	andmi	r1, r2, r0

08010b6c <rcu_adc_clock_config>:
 8010b6c:	490c      	ldr	r1, [pc, #48]	; (8010ba0 <rcu_adc_clock_config+0x34>)
 8010b6e:	2805      	cmp	r0, #5
 8010b70:	684b      	ldr	r3, [r1, #4]
 8010b72:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8010b76:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8010b7a:	d006      	beq.n	8010b8a <rcu_adc_clock_config+0x1e>
 8010b7c:	d803      	bhi.n	8010b86 <rcu_adc_clock_config+0x1a>
 8010b7e:	2804      	cmp	r0, #4
 8010b80:	d10a      	bne.n	8010b98 <rcu_adc_clock_config+0x2c>
 8010b82:	604b      	str	r3, [r1, #4]
 8010b84:	4770      	bx	lr
 8010b86:	2807      	cmp	r0, #7
 8010b88:	d1fb      	bne.n	8010b82 <rcu_adc_clock_config+0x16>
 8010b8a:	4a06      	ldr	r2, [pc, #24]	; (8010ba4 <rcu_adc_clock_config+0x38>)
 8010b8c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8010b90:	4313      	orrs	r3, r2
 8010b92:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8010b96:	e7f4      	b.n	8010b82 <rcu_adc_clock_config+0x16>
 8010b98:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8010b9c:	e7f1      	b.n	8010b82 <rcu_adc_clock_config+0x16>
 8010b9e:	bf00      	nop
 8010ba0:	40021000 	andmi	r1, r2, r0
 8010ba4:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08010ba8 <rcu_flag_get>:
 8010ba8:	0983      	lsrs	r3, r0, #6
 8010baa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010bae:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010bb2:	681a      	ldr	r2, [r3, #0]
 8010bb4:	2301      	movs	r3, #1
 8010bb6:	f000 001f 	and.w	r0, r0, #31
 8010bba:	4083      	lsls	r3, r0
 8010bbc:	4213      	tst	r3, r2
 8010bbe:	bf14      	ite	ne
 8010bc0:	2001      	movne	r0, #1
 8010bc2:	2000      	moveq	r0, #0
 8010bc4:	4770      	bx	lr
	...

08010bc8 <rcu_osci_stab_wait>:
 8010bc8:	281a      	cmp	r0, #26
 8010bca:	b508      	push	{r3, lr}
 8010bcc:	d051      	beq.n	8010c72 <rcu_osci_stab_wait+0xaa>
 8010bce:	d806      	bhi.n	8010bde <rcu_osci_stab_wait+0x16>
 8010bd0:	2810      	cmp	r0, #16
 8010bd2:	d015      	beq.n	8010c00 <rcu_osci_stab_wait+0x38>
 8010bd4:	2818      	cmp	r0, #24
 8010bd6:	d043      	beq.n	8010c60 <rcu_osci_stab_wait+0x98>
 8010bd8:	b368      	cbz	r0, 8010c36 <rcu_osci_stab_wait+0x6e>
 8010bda:	2000      	movs	r0, #0
 8010bdc:	bd08      	pop	{r3, pc}
 8010bde:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8010be2:	d01c      	beq.n	8010c1e <rcu_osci_stab_wait+0x56>
 8010be4:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8010be8:	d02f      	beq.n	8010c4a <rcu_osci_stab_wait+0x82>
 8010bea:	281c      	cmp	r0, #28
 8010bec:	d1f5      	bne.n	8010bda <rcu_osci_stab_wait+0x12>
 8010bee:	4925      	ldr	r1, [pc, #148]	; (8010c84 <rcu_osci_stab_wait+0xbc>)
 8010bf0:	201d      	movs	r0, #29
 8010bf2:	f7ff ffd9 	bl	8010ba8 <rcu_flag_get>
 8010bf6:	b908      	cbnz	r0, 8010bfc <rcu_osci_stab_wait+0x34>
 8010bf8:	3901      	subs	r1, #1
 8010bfa:	d1f9      	bne.n	8010bf0 <rcu_osci_stab_wait+0x28>
 8010bfc:	201d      	movs	r0, #29
 8010bfe:	e008      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c00:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010c04:	2011      	movs	r0, #17
 8010c06:	f7ff ffcf 	bl	8010ba8 <rcu_flag_get>
 8010c0a:	b908      	cbnz	r0, 8010c10 <rcu_osci_stab_wait+0x48>
 8010c0c:	3901      	subs	r1, #1
 8010c0e:	d1f9      	bne.n	8010c04 <rcu_osci_stab_wait+0x3c>
 8010c10:	2011      	movs	r0, #17
 8010c12:	f7ff ffc9 	bl	8010ba8 <rcu_flag_get>
 8010c16:	3800      	subs	r0, #0
 8010c18:	bf18      	it	ne
 8010c1a:	2001      	movne	r0, #1
 8010c1c:	e7de      	b.n	8010bdc <rcu_osci_stab_wait+0x14>
 8010c1e:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8010c22:	f640 0001 	movw	r0, #2049	; 0x801
 8010c26:	f7ff ffbf 	bl	8010ba8 <rcu_flag_get>
 8010c2a:	b908      	cbnz	r0, 8010c30 <rcu_osci_stab_wait+0x68>
 8010c2c:	3901      	subs	r1, #1
 8010c2e:	d1f8      	bne.n	8010c22 <rcu_osci_stab_wait+0x5a>
 8010c30:	f640 0001 	movw	r0, #2049	; 0x801
 8010c34:	e7ed      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c36:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010c3a:	2001      	movs	r0, #1
 8010c3c:	f7ff ffb4 	bl	8010ba8 <rcu_flag_get>
 8010c40:	b908      	cbnz	r0, 8010c46 <rcu_osci_stab_wait+0x7e>
 8010c42:	3901      	subs	r1, #1
 8010c44:	d1f9      	bne.n	8010c3a <rcu_osci_stab_wait+0x72>
 8010c46:	2001      	movs	r0, #1
 8010c48:	e7e3      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c4a:	490e      	ldr	r1, [pc, #56]	; (8010c84 <rcu_osci_stab_wait+0xbc>)
 8010c4c:	f640 1001 	movw	r0, #2305	; 0x901
 8010c50:	f7ff ffaa 	bl	8010ba8 <rcu_flag_get>
 8010c54:	b908      	cbnz	r0, 8010c5a <rcu_osci_stab_wait+0x92>
 8010c56:	3901      	subs	r1, #1
 8010c58:	d1f8      	bne.n	8010c4c <rcu_osci_stab_wait+0x84>
 8010c5a:	f640 1001 	movw	r0, #2305	; 0x901
 8010c5e:	e7d8      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c60:	4908      	ldr	r1, [pc, #32]	; (8010c84 <rcu_osci_stab_wait+0xbc>)
 8010c62:	2019      	movs	r0, #25
 8010c64:	f7ff ffa0 	bl	8010ba8 <rcu_flag_get>
 8010c68:	b908      	cbnz	r0, 8010c6e <rcu_osci_stab_wait+0xa6>
 8010c6a:	3901      	subs	r1, #1
 8010c6c:	d1f9      	bne.n	8010c62 <rcu_osci_stab_wait+0x9a>
 8010c6e:	2019      	movs	r0, #25
 8010c70:	e7cf      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c72:	4904      	ldr	r1, [pc, #16]	; (8010c84 <rcu_osci_stab_wait+0xbc>)
 8010c74:	201b      	movs	r0, #27
 8010c76:	f7ff ff97 	bl	8010ba8 <rcu_flag_get>
 8010c7a:	b908      	cbnz	r0, 8010c80 <rcu_osci_stab_wait+0xb8>
 8010c7c:	3901      	subs	r1, #1
 8010c7e:	d1f9      	bne.n	8010c74 <rcu_osci_stab_wait+0xac>
 8010c80:	201b      	movs	r0, #27
 8010c82:	e7c6      	b.n	8010c12 <rcu_osci_stab_wait+0x4a>
 8010c84:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08010c88 <rcu_osci_on>:
 8010c88:	f7ff bf3a 	b.w	8010b00 <rcu_periph_clock_enable>

08010c8c <rcu_clock_freq_get>:
 8010c8c:	4b3e      	ldr	r3, [pc, #248]	; (8010d88 <rcu_clock_freq_get+0xfc>)
 8010c8e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c90:	4604      	mov	r4, r0
 8010c92:	461f      	mov	r7, r3
 8010c94:	b089      	sub	sp, #36	; 0x24
 8010c96:	ad04      	add	r5, sp, #16
 8010c98:	f103 0610 	add.w	r6, r3, #16
 8010c9c:	462a      	mov	r2, r5
 8010c9e:	6818      	ldr	r0, [r3, #0]
 8010ca0:	6859      	ldr	r1, [r3, #4]
 8010ca2:	3308      	adds	r3, #8
 8010ca4:	c203      	stmia	r2!, {r0, r1}
 8010ca6:	42b3      	cmp	r3, r6
 8010ca8:	4615      	mov	r5, r2
 8010caa:	d1f7      	bne.n	8010c9c <rcu_clock_freq_get+0x10>
 8010cac:	466b      	mov	r3, sp
 8010cae:	6938      	ldr	r0, [r7, #16]
 8010cb0:	6871      	ldr	r1, [r6, #4]
 8010cb2:	4a36      	ldr	r2, [pc, #216]	; (8010d8c <rcu_clock_freq_get+0x100>)
 8010cb4:	c303      	stmia	r3!, {r0, r1}
 8010cb6:	c303      	stmia	r3!, {r0, r1}
 8010cb8:	6853      	ldr	r3, [r2, #4]
 8010cba:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010cbe:	2b01      	cmp	r3, #1
 8010cc0:	d053      	beq.n	8010d6a <rcu_clock_freq_get+0xde>
 8010cc2:	2b02      	cmp	r3, #2
 8010cc4:	d153      	bne.n	8010d6e <rcu_clock_freq_get+0xe2>
 8010cc6:	6853      	ldr	r3, [r2, #4]
 8010cc8:	03dd      	lsls	r5, r3, #15
 8010cca:	d523      	bpl.n	8010d14 <rcu_clock_freq_get+0x88>
 8010ccc:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8010cce:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8010cd2:	4b2f      	ldr	r3, [pc, #188]	; (8010d90 <rcu_clock_freq_get+0x104>)
 8010cd4:	d00e      	beq.n	8010cf4 <rcu_clock_freq_get+0x68>
 8010cd6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8010cd8:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8010cda:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8010cde:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8010ce2:	3101      	adds	r1, #1
 8010ce4:	280f      	cmp	r0, #15
 8010ce6:	f100 0502 	add.w	r5, r0, #2
 8010cea:	fbb3 f3f1 	udiv	r3, r3, r1
 8010cee:	bf08      	it	eq
 8010cf0:	2514      	moveq	r5, #20
 8010cf2:	436b      	muls	r3, r5
 8010cf4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8010cf6:	f001 010f 	and.w	r1, r1, #15
 8010cfa:	3101      	adds	r1, #1
 8010cfc:	fbb3 f3f1 	udiv	r3, r3, r1
 8010d00:	6851      	ldr	r1, [r2, #4]
 8010d02:	6850      	ldr	r0, [r2, #4]
 8010d04:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8010d08:	0080      	lsls	r0, r0, #2
 8010d0a:	d505      	bpl.n	8010d18 <rcu_clock_freq_get+0x8c>
 8010d0c:	f041 0110 	orr.w	r1, r1, #16
 8010d10:	1c48      	adds	r0, r1, #1
 8010d12:	e007      	b.n	8010d24 <rcu_clock_freq_get+0x98>
 8010d14:	4b1f      	ldr	r3, [pc, #124]	; (8010d94 <rcu_clock_freq_get+0x108>)
 8010d16:	e7f3      	b.n	8010d00 <rcu_clock_freq_get+0x74>
 8010d18:	290f      	cmp	r1, #15
 8010d1a:	d0f9      	beq.n	8010d10 <rcu_clock_freq_get+0x84>
 8010d1c:	290d      	cmp	r1, #13
 8010d1e:	f101 0002 	add.w	r0, r1, #2
 8010d22:	d01d      	beq.n	8010d60 <rcu_clock_freq_get+0xd4>
 8010d24:	4358      	muls	r0, r3
 8010d26:	6853      	ldr	r3, [r2, #4]
 8010d28:	6851      	ldr	r1, [r2, #4]
 8010d2a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8010d2e:	6852      	ldr	r2, [r2, #4]
 8010d30:	3320      	adds	r3, #32
 8010d32:	446b      	add	r3, sp
 8010d34:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8010d38:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8010d3c:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8010d40:	3120      	adds	r1, #32
 8010d42:	3220      	adds	r2, #32
 8010d44:	4469      	add	r1, sp
 8010d46:	446a      	add	r2, sp
 8010d48:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8010d4c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8010d50:	fa20 f303 	lsr.w	r3, r0, r3
 8010d54:	2c03      	cmp	r4, #3
 8010d56:	d815      	bhi.n	8010d84 <rcu_clock_freq_get+0xf8>
 8010d58:	e8df f004 	tbb	[pc, r4]
 8010d5c:	110e0b0c 	tstne	lr, ip, lsl #22
 8010d60:	2006      	movs	r0, #6
 8010d62:	0859      	lsrs	r1, r3, #1
 8010d64:	fb00 1003 	mla	r0, r0, r3, r1
 8010d68:	e7dd      	b.n	8010d26 <rcu_clock_freq_get+0x9a>
 8010d6a:	4809      	ldr	r0, [pc, #36]	; (8010d90 <rcu_clock_freq_get+0x104>)
 8010d6c:	e7db      	b.n	8010d26 <rcu_clock_freq_get+0x9a>
 8010d6e:	480a      	ldr	r0, [pc, #40]	; (8010d98 <rcu_clock_freq_get+0x10c>)
 8010d70:	e7d9      	b.n	8010d26 <rcu_clock_freq_get+0x9a>
 8010d72:	4618      	mov	r0, r3
 8010d74:	b009      	add	sp, #36	; 0x24
 8010d76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d78:	fa23 f001 	lsr.w	r0, r3, r1
 8010d7c:	e7fa      	b.n	8010d74 <rcu_clock_freq_get+0xe8>
 8010d7e:	fa23 f002 	lsr.w	r0, r3, r2
 8010d82:	e7f7      	b.n	8010d74 <rcu_clock_freq_get+0xe8>
 8010d84:	2000      	movs	r0, #0
 8010d86:	e7f5      	b.n	8010d74 <rcu_clock_freq_get+0xe8>
 8010d88:	08011e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, ip}
 8010d8c:	40021000 	andmi	r1, r2, r0
 8010d90:	017d7840 	cmneq	sp, r0, asr #16
 8010d94:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8010d98:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08010d9c <timer_deinit>:
 8010d9c:	b508      	push	{r3, lr}
 8010d9e:	4b2d      	ldr	r3, [pc, #180]	; (8010e54 <timer_deinit+0xb8>)
 8010da0:	4298      	cmp	r0, r3
 8010da2:	d048      	beq.n	8010e36 <timer_deinit+0x9a>
 8010da4:	d816      	bhi.n	8010dd4 <timer_deinit+0x38>
 8010da6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010daa:	4298      	cmp	r0, r3
 8010dac:	d03c      	beq.n	8010e28 <timer_deinit+0x8c>
 8010dae:	d807      	bhi.n	8010dc0 <timer_deinit+0x24>
 8010db0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8010db4:	d02a      	beq.n	8010e0c <timer_deinit+0x70>
 8010db6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8010dba:	4298      	cmp	r0, r3
 8010dbc:	d02d      	beq.n	8010e1a <timer_deinit+0x7e>
 8010dbe:	bd08      	pop	{r3, pc}
 8010dc0:	4b25      	ldr	r3, [pc, #148]	; (8010e58 <timer_deinit+0xbc>)
 8010dc2:	4298      	cmp	r0, r3
 8010dc4:	d1fb      	bne.n	8010dbe <timer_deinit+0x22>
 8010dc6:	f240 4003 	movw	r0, #1027	; 0x403
 8010dca:	f7ff feb4 	bl	8010b36 <rcu_periph_reset_enable>
 8010dce:	f240 4003 	movw	r0, #1027	; 0x403
 8010dd2:	e017      	b.n	8010e04 <timer_deinit+0x68>
 8010dd4:	4b21      	ldr	r3, [pc, #132]	; (8010e5c <timer_deinit+0xc0>)
 8010dd6:	4298      	cmp	r0, r3
 8010dd8:	d00e      	beq.n	8010df8 <timer_deinit+0x5c>
 8010dda:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8010dde:	4298      	cmp	r0, r3
 8010de0:	d030      	beq.n	8010e44 <timer_deinit+0xa8>
 8010de2:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8010de6:	4298      	cmp	r0, r3
 8010de8:	d1e9      	bne.n	8010dbe <timer_deinit+0x22>
 8010dea:	f240 4005 	movw	r0, #1029	; 0x405
 8010dee:	f7ff fea2 	bl	8010b36 <rcu_periph_reset_enable>
 8010df2:	f240 4005 	movw	r0, #1029	; 0x405
 8010df6:	e005      	b.n	8010e04 <timer_deinit+0x68>
 8010df8:	f240 300b 	movw	r0, #779	; 0x30b
 8010dfc:	f7ff fe9b 	bl	8010b36 <rcu_periph_reset_enable>
 8010e00:	f240 300b 	movw	r0, #779	; 0x30b
 8010e04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010e08:	f7ff be97 	b.w	8010b3a <rcu_periph_reset_disable>
 8010e0c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010e10:	f7ff fe91 	bl	8010b36 <rcu_periph_reset_enable>
 8010e14:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010e18:	e7f4      	b.n	8010e04 <timer_deinit+0x68>
 8010e1a:	f240 4001 	movw	r0, #1025	; 0x401
 8010e1e:	f7ff fe8a 	bl	8010b36 <rcu_periph_reset_enable>
 8010e22:	f240 4001 	movw	r0, #1025	; 0x401
 8010e26:	e7ed      	b.n	8010e04 <timer_deinit+0x68>
 8010e28:	f240 4002 	movw	r0, #1026	; 0x402
 8010e2c:	f7ff fe83 	bl	8010b36 <rcu_periph_reset_enable>
 8010e30:	f240 4002 	movw	r0, #1026	; 0x402
 8010e34:	e7e6      	b.n	8010e04 <timer_deinit+0x68>
 8010e36:	f240 4004 	movw	r0, #1028	; 0x404
 8010e3a:	f7ff fe7c 	bl	8010b36 <rcu_periph_reset_enable>
 8010e3e:	f240 4004 	movw	r0, #1028	; 0x404
 8010e42:	e7df      	b.n	8010e04 <timer_deinit+0x68>
 8010e44:	f240 300d 	movw	r0, #781	; 0x30d
 8010e48:	f7ff fe75 	bl	8010b36 <rcu_periph_reset_enable>
 8010e4c:	f240 300d 	movw	r0, #781	; 0x30d
 8010e50:	e7d8      	b.n	8010e04 <timer_deinit+0x68>
 8010e52:	bf00      	nop
 8010e54:	40001000 	andmi	r1, r0, r0
 8010e58:	40000c00 	andmi	r0, r0, r0, lsl #24
 8010e5c:	40012c00 	andmi	r2, r1, r0, lsl #24

08010e60 <timer_init>:
 8010e60:	880b      	ldrh	r3, [r1, #0]
 8010e62:	6283      	str	r3, [r0, #40]	; 0x28
 8010e64:	4b26      	ldr	r3, [pc, #152]	; (8010f00 <timer_init+0xa0>)
 8010e66:	4298      	cmp	r0, r3
 8010e68:	d018      	beq.n	8010e9c <timer_init+0x3c>
 8010e6a:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8010e6e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8010e72:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8010e76:	d011      	beq.n	8010e9c <timer_init+0x3c>
 8010e78:	4a22      	ldr	r2, [pc, #136]	; (8010f04 <timer_init+0xa4>)
 8010e7a:	4290      	cmp	r0, r2
 8010e7c:	d00e      	beq.n	8010e9c <timer_init+0x3c>
 8010e7e:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8010e82:	4290      	cmp	r0, r2
 8010e84:	d00a      	beq.n	8010e9c <timer_init+0x3c>
 8010e86:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8010e8a:	4293      	cmp	r3, r2
 8010e8c:	d006      	beq.n	8010e9c <timer_init+0x3c>
 8010e8e:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8010e92:	4293      	cmp	r3, r2
 8010e94:	d002      	beq.n	8010e9c <timer_init+0x3c>
 8010e96:	4b1c      	ldr	r3, [pc, #112]	; (8010f08 <timer_init+0xa8>)
 8010e98:	4298      	cmp	r0, r3
 8010e9a:	d10f      	bne.n	8010ebc <timer_init+0x5c>
 8010e9c:	6803      	ldr	r3, [r0, #0]
 8010e9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010ea2:	6003      	str	r3, [r0, #0]
 8010ea4:	884b      	ldrh	r3, [r1, #2]
 8010ea6:	6802      	ldr	r2, [r0, #0]
 8010ea8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010eac:	4313      	orrs	r3, r2
 8010eae:	6003      	str	r3, [r0, #0]
 8010eb0:	888b      	ldrh	r3, [r1, #4]
 8010eb2:	6802      	ldr	r2, [r0, #0]
 8010eb4:	f003 0310 	and.w	r3, r3, #16
 8010eb8:	4313      	orrs	r3, r2
 8010eba:	6003      	str	r3, [r0, #0]
 8010ebc:	688b      	ldr	r3, [r1, #8]
 8010ebe:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010ec0:	4b12      	ldr	r3, [pc, #72]	; (8010f0c <timer_init+0xac>)
 8010ec2:	4298      	cmp	r0, r3
 8010ec4:	d003      	beq.n	8010ece <timer_init+0x6e>
 8010ec6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010eca:	4298      	cmp	r0, r3
 8010ecc:	d104      	bne.n	8010ed8 <timer_init+0x78>
 8010ece:	6943      	ldr	r3, [r0, #20]
 8010ed0:	f043 0301 	orr.w	r3, r3, #1
 8010ed4:	6143      	str	r3, [r0, #20]
 8010ed6:	4770      	bx	lr
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8010ede:	6003      	str	r3, [r0, #0]
 8010ee0:	898b      	ldrh	r3, [r1, #12]
 8010ee2:	6802      	ldr	r2, [r0, #0]
 8010ee4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8010ee8:	4313      	orrs	r3, r2
 8010eea:	6003      	str	r3, [r0, #0]
 8010eec:	4b04      	ldr	r3, [pc, #16]	; (8010f00 <timer_init+0xa0>)
 8010eee:	4298      	cmp	r0, r3
 8010ef0:	d002      	beq.n	8010ef8 <timer_init+0x98>
 8010ef2:	4b04      	ldr	r3, [pc, #16]	; (8010f04 <timer_init+0xa4>)
 8010ef4:	4298      	cmp	r0, r3
 8010ef6:	d1ea      	bne.n	8010ece <timer_init+0x6e>
 8010ef8:	7b8b      	ldrb	r3, [r1, #14]
 8010efa:	6303      	str	r3, [r0, #48]	; 0x30
 8010efc:	e7e7      	b.n	8010ece <timer_init+0x6e>
 8010efe:	bf00      	nop
 8010f00:	40012c00 	andmi	r2, r1, r0, lsl #24
 8010f04:	40013400 	andmi	r3, r1, r0, lsl #8
 8010f08:	40002000 	andmi	r2, r0, r0
 8010f0c:	40001000 	andmi	r1, r0, r0

08010f10 <timer_enable>:
 8010f10:	6803      	ldr	r3, [r0, #0]
 8010f12:	f043 0301 	orr.w	r3, r3, #1
 8010f16:	6003      	str	r3, [r0, #0]
 8010f18:	4770      	bx	lr

08010f1a <timer_channel_output_mode_config>:
 8010f1a:	2903      	cmp	r1, #3
 8010f1c:	d81a      	bhi.n	8010f54 <timer_channel_output_mode_config+0x3a>
 8010f1e:	e8df f001 	tbb	[pc, r1]
 8010f22:	1a120a02 	bne	8493732 <__exidx_end+0x47fb16>
 8010f26:	6983      	ldr	r3, [r0, #24]
 8010f28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010f2c:	6183      	str	r3, [r0, #24]
 8010f2e:	6983      	ldr	r3, [r0, #24]
 8010f30:	4313      	orrs	r3, r2
 8010f32:	6183      	str	r3, [r0, #24]
 8010f34:	4770      	bx	lr
 8010f36:	6983      	ldr	r3, [r0, #24]
 8010f38:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010f3c:	6183      	str	r3, [r0, #24]
 8010f3e:	6983      	ldr	r3, [r0, #24]
 8010f40:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8010f44:	e7f5      	b.n	8010f32 <timer_channel_output_mode_config+0x18>
 8010f46:	69c3      	ldr	r3, [r0, #28]
 8010f48:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010f4c:	61c3      	str	r3, [r0, #28]
 8010f4e:	69c3      	ldr	r3, [r0, #28]
 8010f50:	4313      	orrs	r3, r2
 8010f52:	61c3      	str	r3, [r0, #28]
 8010f54:	4770      	bx	lr
 8010f56:	69c3      	ldr	r3, [r0, #28]
 8010f58:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010f5c:	61c3      	str	r3, [r0, #28]
 8010f5e:	69c3      	ldr	r3, [r0, #28]
 8010f60:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8010f64:	e7f5      	b.n	8010f52 <timer_channel_output_mode_config+0x38>

08010f66 <timer_channel_output_pulse_value_config>:
 8010f66:	2903      	cmp	r1, #3
 8010f68:	d80a      	bhi.n	8010f80 <timer_channel_output_pulse_value_config+0x1a>
 8010f6a:	e8df f001 	tbb	[pc, r1]
 8010f6e:	08060402 	stmdaeq	r6, {r1, sl}
 8010f72:	6342      	str	r2, [r0, #52]	; 0x34
 8010f74:	4770      	bx	lr
 8010f76:	6382      	str	r2, [r0, #56]	; 0x38
 8010f78:	4770      	bx	lr
 8010f7a:	63c2      	str	r2, [r0, #60]	; 0x3c
 8010f7c:	4770      	bx	lr
 8010f7e:	6402      	str	r2, [r0, #64]	; 0x40
 8010f80:	4770      	bx	lr

08010f82 <timer_interrupt_enable>:
 8010f82:	68c3      	ldr	r3, [r0, #12]
 8010f84:	430b      	orrs	r3, r1
 8010f86:	60c3      	str	r3, [r0, #12]
 8010f88:	4770      	bx	lr

08010f8a <timer_interrupt_flag_clear>:
 8010f8a:	43c9      	mvns	r1, r1
 8010f8c:	6101      	str	r1, [r0, #16]
 8010f8e:	4770      	bx	lr

08010f90 <timer_flag_clear>:
 8010f90:	43c9      	mvns	r1, r1
 8010f92:	6101      	str	r1, [r0, #16]
 8010f94:	4770      	bx	lr
	...

08010f98 <usart_deinit>:
 8010f98:	b508      	push	{r3, lr}
 8010f9a:	4b1d      	ldr	r3, [pc, #116]	; (8011010 <usart_deinit+0x78>)
 8010f9c:	4298      	cmp	r0, r3
 8010f9e:	d028      	beq.n	8010ff2 <usart_deinit+0x5a>
 8010fa0:	d808      	bhi.n	8010fb4 <usart_deinit+0x1c>
 8010fa2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010fa6:	4298      	cmp	r0, r3
 8010fa8:	d015      	beq.n	8010fd6 <usart_deinit+0x3e>
 8010faa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010fae:	4298      	cmp	r0, r3
 8010fb0:	d018      	beq.n	8010fe4 <usart_deinit+0x4c>
 8010fb2:	bd08      	pop	{r3, pc}
 8010fb4:	4b17      	ldr	r3, [pc, #92]	; (8011014 <usart_deinit+0x7c>)
 8010fb6:	4298      	cmp	r0, r3
 8010fb8:	d022      	beq.n	8011000 <usart_deinit+0x68>
 8010fba:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8010fbe:	4298      	cmp	r0, r3
 8010fc0:	d1f7      	bne.n	8010fb2 <usart_deinit+0x1a>
 8010fc2:	f240 300e 	movw	r0, #782	; 0x30e
 8010fc6:	f7ff fdb6 	bl	8010b36 <rcu_periph_reset_enable>
 8010fca:	f240 300e 	movw	r0, #782	; 0x30e
 8010fce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010fd2:	f7ff bdb2 	b.w	8010b3a <rcu_periph_reset_disable>
 8010fd6:	f240 4011 	movw	r0, #1041	; 0x411
 8010fda:	f7ff fdac 	bl	8010b36 <rcu_periph_reset_enable>
 8010fde:	f240 4011 	movw	r0, #1041	; 0x411
 8010fe2:	e7f4      	b.n	8010fce <usart_deinit+0x36>
 8010fe4:	f240 4012 	movw	r0, #1042	; 0x412
 8010fe8:	f7ff fda5 	bl	8010b36 <rcu_periph_reset_enable>
 8010fec:	f240 4012 	movw	r0, #1042	; 0x412
 8010ff0:	e7ed      	b.n	8010fce <usart_deinit+0x36>
 8010ff2:	f240 4013 	movw	r0, #1043	; 0x413
 8010ff6:	f7ff fd9e 	bl	8010b36 <rcu_periph_reset_enable>
 8010ffa:	f240 4013 	movw	r0, #1043	; 0x413
 8010ffe:	e7e6      	b.n	8010fce <usart_deinit+0x36>
 8011000:	f240 4014 	movw	r0, #1044	; 0x414
 8011004:	f7ff fd97 	bl	8010b36 <rcu_periph_reset_enable>
 8011008:	f240 4014 	movw	r0, #1044	; 0x414
 801100c:	e7df      	b.n	8010fce <usart_deinit+0x36>
 801100e:	bf00      	nop
 8011010:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011014:	40005000 	andmi	r5, r0, r0

08011018 <usart_baudrate_set>:
 8011018:	b538      	push	{r3, r4, r5, lr}
 801101a:	4b11      	ldr	r3, [pc, #68]	; (8011060 <usart_baudrate_set+0x48>)
 801101c:	4604      	mov	r4, r0
 801101e:	4298      	cmp	r0, r3
 8011020:	460d      	mov	r5, r1
 8011022:	d01b      	beq.n	801105c <usart_baudrate_set+0x44>
 8011024:	d809      	bhi.n	801103a <usart_baudrate_set+0x22>
 8011026:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801102a:	4298      	cmp	r0, r3
 801102c:	d016      	beq.n	801105c <usart_baudrate_set+0x44>
 801102e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011032:	4298      	cmp	r0, r3
 8011034:	d012      	beq.n	801105c <usart_baudrate_set+0x44>
 8011036:	2000      	movs	r0, #0
 8011038:	e009      	b.n	801104e <usart_baudrate_set+0x36>
 801103a:	4b0a      	ldr	r3, [pc, #40]	; (8011064 <usart_baudrate_set+0x4c>)
 801103c:	4298      	cmp	r0, r3
 801103e:	d00d      	beq.n	801105c <usart_baudrate_set+0x44>
 8011040:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011044:	4298      	cmp	r0, r3
 8011046:	d1f6      	bne.n	8011036 <usart_baudrate_set+0x1e>
 8011048:	2003      	movs	r0, #3
 801104a:	f7ff fe1f 	bl	8010c8c <rcu_clock_freq_get>
 801104e:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8011052:	fbb1 f1f5 	udiv	r1, r1, r5
 8011056:	b289      	uxth	r1, r1
 8011058:	60a1      	str	r1, [r4, #8]
 801105a:	bd38      	pop	{r3, r4, r5, pc}
 801105c:	2002      	movs	r0, #2
 801105e:	e7f4      	b.n	801104a <usart_baudrate_set+0x32>
 8011060:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011064:	40005000 	andmi	r5, r0, r0

08011068 <usart_parity_config>:
 8011068:	68c3      	ldr	r3, [r0, #12]
 801106a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801106e:	60c3      	str	r3, [r0, #12]
 8011070:	68c3      	ldr	r3, [r0, #12]
 8011072:	430b      	orrs	r3, r1
 8011074:	60c3      	str	r3, [r0, #12]
 8011076:	4770      	bx	lr

08011078 <usart_word_length_set>:
 8011078:	68c3      	ldr	r3, [r0, #12]
 801107a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801107e:	60c3      	str	r3, [r0, #12]
 8011080:	68c3      	ldr	r3, [r0, #12]
 8011082:	430b      	orrs	r3, r1
 8011084:	60c3      	str	r3, [r0, #12]
 8011086:	4770      	bx	lr

08011088 <usart_stop_bit_set>:
 8011088:	6903      	ldr	r3, [r0, #16]
 801108a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801108e:	6103      	str	r3, [r0, #16]
 8011090:	6903      	ldr	r3, [r0, #16]
 8011092:	430b      	orrs	r3, r1
 8011094:	6103      	str	r3, [r0, #16]
 8011096:	4770      	bx	lr

08011098 <usart_transmit_config>:
 8011098:	68c3      	ldr	r3, [r0, #12]
 801109a:	f023 0308 	bic.w	r3, r3, #8
 801109e:	430b      	orrs	r3, r1
 80110a0:	60c3      	str	r3, [r0, #12]
 80110a2:	4770      	bx	lr

080110a4 <usart_receive_config>:
 80110a4:	68c3      	ldr	r3, [r0, #12]
 80110a6:	f023 0304 	bic.w	r3, r3, #4
 80110aa:	430b      	orrs	r3, r1
 80110ac:	60c3      	str	r3, [r0, #12]
 80110ae:	4770      	bx	lr

080110b0 <usart_hardware_flow_rts_config>:
 80110b0:	6943      	ldr	r3, [r0, #20]
 80110b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80110b6:	430b      	orrs	r3, r1
 80110b8:	6143      	str	r3, [r0, #20]
 80110ba:	4770      	bx	lr

080110bc <usart_hardware_flow_cts_config>:
 80110bc:	6943      	ldr	r3, [r0, #20]
 80110be:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80110c2:	430b      	orrs	r3, r1
 80110c4:	6143      	str	r3, [r0, #20]
 80110c6:	4770      	bx	lr

080110c8 <usart_dma_transmit_config>:
 80110c8:	6943      	ldr	r3, [r0, #20]
 80110ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80110ce:	430b      	orrs	r3, r1
 80110d0:	6143      	str	r3, [r0, #20]
 80110d2:	4770      	bx	lr

080110d4 <usart_flag_get>:
 80110d4:	098b      	lsrs	r3, r1, #6
 80110d6:	581a      	ldr	r2, [r3, r0]
 80110d8:	2301      	movs	r3, #1
 80110da:	f001 011f 	and.w	r1, r1, #31
 80110de:	408b      	lsls	r3, r1
 80110e0:	4213      	tst	r3, r2
 80110e2:	bf14      	ite	ne
 80110e4:	2001      	movne	r0, #1
 80110e6:	2000      	moveq	r0, #0
 80110e8:	4770      	bx	lr

080110ea <usart_interrupt_enable>:
 80110ea:	2301      	movs	r3, #1
 80110ec:	b510      	push	{r4, lr}
 80110ee:	f3c1 1289 	ubfx	r2, r1, #6, #10
 80110f2:	5814      	ldr	r4, [r2, r0]
 80110f4:	f001 011f 	and.w	r1, r1, #31
 80110f8:	408b      	lsls	r3, r1
 80110fa:	4323      	orrs	r3, r4
 80110fc:	5013      	str	r3, [r2, r0]
 80110fe:	bd10      	pop	{r4, pc}

08011100 <usart_interrupt_disable>:
 8011100:	2201      	movs	r2, #1
 8011102:	b510      	push	{r4, lr}
 8011104:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8011108:	5823      	ldr	r3, [r4, r0]
 801110a:	f001 011f 	and.w	r1, r1, #31
 801110e:	408a      	lsls	r2, r1
 8011110:	ea23 0302 	bic.w	r3, r3, r2
 8011114:	5023      	str	r3, [r4, r0]
 8011116:	bd10      	pop	{r4, pc}

08011118 <usart_interrupt_flag_clear>:
 8011118:	2201      	movs	r2, #1
 801111a:	b510      	push	{r4, lr}
 801111c:	0d8c      	lsrs	r4, r1, #22
 801111e:	5823      	ldr	r3, [r4, r0]
 8011120:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8011124:	408a      	lsls	r2, r1
 8011126:	ea23 0302 	bic.w	r3, r3, r2
 801112a:	5023      	str	r3, [r4, r0]
 801112c:	bd10      	pop	{r4, pc}
	...

08011130 <emac_eth_recv>:
 8011130:	b538      	push	{r3, r4, r5, lr}
 8011132:	4605      	mov	r5, r0
 8011134:	f7ff fb84 	bl	8010840 <enet_rxframe_size_get>
 8011138:	4604      	mov	r4, r0
 801113a:	b138      	cbz	r0, 801114c <emac_eth_recv+0x1c>
 801113c:	4b05      	ldr	r3, [pc, #20]	; (8011154 <emac_eth_recv+0x24>)
 801113e:	2105      	movs	r1, #5
 8011140:	6818      	ldr	r0, [r3, #0]
 8011142:	f7ff fb2c 	bl	801079e <enet_desc_information_get>
 8011146:	6028      	str	r0, [r5, #0]
 8011148:	4620      	mov	r0, r4
 801114a:	bd38      	pop	{r3, r4, r5, pc}
 801114c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011150:	e7fb      	b.n	801114a <emac_eth_recv+0x1a>
 8011152:	bf00      	nop
 8011154:	2000a0b8 	strhcs	sl, [r0], -r8

08011158 <emac_free_pkt>:
 8011158:	2100      	movs	r1, #0
 801115a:	4608      	mov	r0, r1
 801115c:	f7ff b85c 	b.w	8010218 <enet_frame_receive>

08011160 <emac_eth_send>:
 8011160:	f7ff b89a 	b.w	8010298 <enet_frame_transmit>

08011164 <gd32_adc_init()>:
 8011164:	b510      	push	{r4, lr}
 8011166:	f240 6009 	movw	r0, #1545	; 0x609
 801116a:	4c21      	ldr	r4, [pc, #132]	; (80111f0 <gd32_adc_init()+0x8c>)
 801116c:	f7ff fcc8 	bl	8010b00 <rcu_periph_clock_enable>
 8011170:	2005      	movs	r0, #5
 8011172:	f7ff fcfb 	bl	8010b6c <rcu_adc_clock_config>
 8011176:	4620      	mov	r0, r4
 8011178:	2201      	movs	r2, #1
 801117a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801117e:	f000 fb55 	bl	801182c <adc_special_function_config>
 8011182:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8011186:	4620      	mov	r0, r4
 8011188:	2102      	movs	r1, #2
 801118a:	f000 fbee 	bl	801196a <adc_external_trigger_source_config>
 801118e:	2100      	movs	r1, #0
 8011190:	4620      	mov	r0, r4
 8011192:	f000 fb73 	bl	801187c <adc_data_alignment_config>
 8011196:	2000      	movs	r0, #0
 8011198:	f000 fb38 	bl	801180c <adc_mode_config>
 801119c:	2202      	movs	r2, #2
 801119e:	4620      	mov	r0, r4
 80111a0:	4611      	mov	r1, r2
 80111a2:	f000 fb97 	bl	80118d4 <adc_channel_length_config>
 80111a6:	4620      	mov	r0, r4
 80111a8:	2307      	movs	r3, #7
 80111aa:	2210      	movs	r2, #16
 80111ac:	2100      	movs	r1, #0
 80111ae:	f000 fbae 	bl	801190e <adc_inserted_channel_config>
 80111b2:	2307      	movs	r3, #7
 80111b4:	4620      	mov	r0, r4
 80111b6:	2211      	movs	r2, #17
 80111b8:	2101      	movs	r1, #1
 80111ba:	f000 fba8 	bl	801190e <adc_inserted_channel_config>
 80111be:	2201      	movs	r2, #1
 80111c0:	2102      	movs	r1, #2
 80111c2:	4620      	mov	r0, r4
 80111c4:	f000 fbe2 	bl	801198c <adc_external_trigger_config>
 80111c8:	f000 fb7a 	bl	80118c0 <adc_tempsensor_vrefint_enable>
 80111cc:	4620      	mov	r0, r4
 80111ce:	f000 fb5e 	bl	801188e <adc_enable>
 80111d2:	2100      	movs	r1, #0
 80111d4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80111d8:	f000 fa58 	bl	801168c <udelay(unsigned int, unsigned int)>
 80111dc:	4620      	mov	r0, r4
 80111de:	f000 fb5e 	bl	801189e <adc_calibration_enable>
 80111e2:	4620      	mov	r0, r4
 80111e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111e8:	2102      	movs	r1, #2
 80111ea:	f000 bbea 	b.w	80119c2 <adc_software_trigger_enable>
 80111ee:	bf00      	nop
 80111f0:	40012400 	andmi	r2, r1, r0, lsl #8

080111f4 <_stop() [clone .isra.0]>:
 80111f4:	b508      	push	{r3, lr}
 80111f6:	4806      	ldr	r0, [pc, #24]	; (8011210 <_stop() [clone .isra.0]+0x1c>)
 80111f8:	f000 fc76 	bl	8011ae8 <i2c_stop_on_bus>
 80111fc:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011200:	4904      	ldr	r1, [pc, #16]	; (8011214 <_stop() [clone .isra.0]+0x20>)
 8011202:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8011206:	0592      	lsls	r2, r2, #22
 8011208:	d501      	bpl.n	801120e <_stop() [clone .isra.0]+0x1a>
 801120a:	3b01      	subs	r3, #1
 801120c:	d1f9      	bne.n	8011202 <_stop() [clone .isra.0]+0xe>
 801120e:	bd08      	pop	{r3, pc}
 8011210:	40005400 	andmi	r5, r0, r0, lsl #8
 8011214:	40005000 	andmi	r5, r0, r0

08011218 <gd32_i2c_begin>:
 8011218:	b510      	push	{r4, lr}
 801121a:	f240 7015 	movw	r0, #1813	; 0x715
 801121e:	f7ff fc6f 	bl	8010b00 <rcu_periph_clock_enable>
 8011222:	4c15      	ldr	r4, [pc, #84]	; (8011278 <gd32_i2c_begin+0x60>)
 8011224:	f240 6003 	movw	r0, #1539	; 0x603
 8011228:	f7ff fc6a 	bl	8010b00 <rcu_periph_clock_enable>
 801122c:	f240 6003 	movw	r0, #1539	; 0x603
 8011230:	f7ff fc66 	bl	8010b00 <rcu_periph_clock_enable>
 8011234:	4620      	mov	r0, r4
 8011236:	f44f 7380 	mov.w	r3, #256	; 0x100
 801123a:	2203      	movs	r2, #3
 801123c:	211c      	movs	r1, #28
 801123e:	f7ff fbc7 	bl	80109d0 <gpio_init>
 8011242:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011246:	2203      	movs	r2, #3
 8011248:	4620      	mov	r0, r4
 801124a:	211c      	movs	r1, #28
 801124c:	f7ff fbc0 	bl	80109d0 <gpio_init>
 8011250:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8011254:	2101      	movs	r1, #1
 8011256:	2002      	movs	r0, #2
 8011258:	f7ff fc0e 	bl	8010a78 <gpio_pin_remap_config>
 801125c:	4620      	mov	r0, r4
 801125e:	4907      	ldr	r1, [pc, #28]	; (801127c <gd32_i2c_begin+0x64>)
 8011260:	2200      	movs	r2, #0
 8011262:	f000 fbbb 	bl	80119dc <i2c_clock_config>
 8011266:	4620      	mov	r0, r4
 8011268:	f000 fc34 	bl	8011ad4 <i2c_enable>
 801126c:	4620      	mov	r0, r4
 801126e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011272:	2101      	movs	r1, #1
 8011274:	f000 bc14 	b.w	8011aa0 <i2c_ack_config>
 8011278:	40010c00 	andmi	r0, r1, r0, lsl #24
 801127c:	00061a80 	andeq	r1, r6, r0, lsl #21

08011280 <gd32_i2c_set_baudrate>:
 8011280:	4601      	mov	r1, r0
 8011282:	2200      	movs	r2, #0
 8011284:	4801      	ldr	r0, [pc, #4]	; (801128c <gd32_i2c_set_baudrate+0xc>)
 8011286:	f000 bba9 	b.w	80119dc <i2c_clock_config>
 801128a:	bf00      	nop
 801128c:	40005400 	andmi	r5, r0, r0, lsl #8

08011290 <gd32_i2c_set_address>:
 8011290:	4b01      	ldr	r3, [pc, #4]	; (8011298 <gd32_i2c_set_address+0x8>)
 8011292:	0040      	lsls	r0, r0, #1
 8011294:	7018      	strb	r0, [r3, #0]
 8011296:	4770      	bx	lr
 8011298:	2000dd24 	andcs	sp, r0, r4, lsr #26

0801129c <gd32_i2c_write>:
 801129c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801129e:	4604      	mov	r4, r0
 80112a0:	460f      	mov	r7, r1
 80112a2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80112a6:	4e2e      	ldr	r6, [pc, #184]	; (8011360 <gd32_i2c_write+0xc4>)
 80112a8:	f240 6101 	movw	r1, #1537	; 0x601
 80112ac:	4630      	mov	r0, r6
 80112ae:	f000 fc25 	bl	8011afc <i2c_flag_get>
 80112b2:	b9b0      	cbnz	r0, 80112e2 <gd32_i2c_write+0x46>
 80112b4:	482a      	ldr	r0, [pc, #168]	; (8011360 <gd32_i2c_write+0xc4>)
 80112b6:	f000 fc12 	bl	8011ade <i2c_start_on_bus>
 80112ba:	f640 75ff 	movw	r5, #4095	; 0xfff
 80112be:	4e28      	ldr	r6, [pc, #160]	; (8011360 <gd32_i2c_write+0xc4>)
 80112c0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80112c4:	4630      	mov	r0, r6
 80112c6:	f000 fc19 	bl	8011afc <i2c_flag_get>
 80112ca:	b190      	cbz	r0, 80112f2 <gd32_i2c_write+0x56>
 80112cc:	4b25      	ldr	r3, [pc, #148]	; (8011364 <gd32_i2c_write+0xc8>)
 80112ce:	f06f 0201 	mvn.w	r2, #1
 80112d2:	7819      	ldrb	r1, [r3, #0]
 80112d4:	4822      	ldr	r0, [pc, #136]	; (8011360 <gd32_i2c_write+0xc4>)
 80112d6:	f000 fbf5 	bl	8011ac4 <i2c_master_addressing>
 80112da:	f640 75ff 	movw	r5, #4095	; 0xfff
 80112de:	4e20      	ldr	r6, [pc, #128]	; (8011360 <gd32_i2c_write+0xc4>)
 80112e0:	e00c      	b.n	80112fc <gd32_i2c_write+0x60>
 80112e2:	3d01      	subs	r5, #1
 80112e4:	d1e0      	bne.n	80112a8 <gd32_i2c_write+0xc>
 80112e6:	f7ff ff85 	bl	80111f4 <_stop() [clone .isra.0]>
 80112ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112ee:	4240      	negs	r0, r0
 80112f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80112f2:	3d01      	subs	r5, #1
 80112f4:	d1e4      	bne.n	80112c0 <gd32_i2c_write+0x24>
 80112f6:	e7f6      	b.n	80112e6 <gd32_i2c_write+0x4a>
 80112f8:	3d01      	subs	r5, #1
 80112fa:	d0f4      	beq.n	80112e6 <gd32_i2c_write+0x4a>
 80112fc:	f240 5101 	movw	r1, #1281	; 0x501
 8011300:	4630      	mov	r0, r6
 8011302:	f000 fbfb 	bl	8011afc <i2c_flag_get>
 8011306:	2800      	cmp	r0, #0
 8011308:	d0f6      	beq.n	80112f8 <gd32_i2c_write+0x5c>
 801130a:	f240 5101 	movw	r1, #1281	; 0x501
 801130e:	4814      	ldr	r0, [pc, #80]	; (8011360 <gd32_i2c_write+0xc4>)
 8011310:	f000 fbff 	bl	8011b12 <i2c_flag_clear>
 8011314:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011318:	4e11      	ldr	r6, [pc, #68]	; (8011360 <gd32_i2c_write+0xc4>)
 801131a:	f240 5107 	movw	r1, #1287	; 0x507
 801131e:	4630      	mov	r0, r6
 8011320:	f000 fbec 	bl	8011afc <i2c_flag_get>
 8011324:	2801      	cmp	r0, #1
 8011326:	d107      	bne.n	8011338 <gd32_i2c_write+0x9c>
 8011328:	4e0d      	ldr	r6, [pc, #52]	; (8011360 <gd32_i2c_write+0xc4>)
 801132a:	4427      	add	r7, r4
 801132c:	42a7      	cmp	r7, r4
 801132e:	d106      	bne.n	801133e <gd32_i2c_write+0xa2>
 8011330:	f7ff ff60 	bl	80111f4 <_stop() [clone .isra.0]>
 8011334:	2000      	movs	r0, #0
 8011336:	e7da      	b.n	80112ee <gd32_i2c_write+0x52>
 8011338:	3d01      	subs	r5, #1
 801133a:	d1ee      	bne.n	801131a <gd32_i2c_write+0x7e>
 801133c:	e7d3      	b.n	80112e6 <gd32_i2c_write+0x4a>
 801133e:	4630      	mov	r0, r6
 8011340:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011344:	f000 fbd5 	bl	8011af2 <i2c_data_transmit>
 8011348:	f640 75ff 	movw	r5, #4095	; 0xfff
 801134c:	f240 5102 	movw	r1, #1282	; 0x502
 8011350:	4630      	mov	r0, r6
 8011352:	f000 fbd3 	bl	8011afc <i2c_flag_get>
 8011356:	2800      	cmp	r0, #0
 8011358:	d1e8      	bne.n	801132c <gd32_i2c_write+0x90>
 801135a:	3d01      	subs	r5, #1
 801135c:	d1f6      	bne.n	801134c <gd32_i2c_write+0xb0>
 801135e:	e7c2      	b.n	80112e6 <gd32_i2c_write+0x4a>
 8011360:	40005400 	andmi	r5, r0, r0, lsl #8
 8011364:	2000dd24 	andcs	sp, r0, r4, lsr #26

08011368 <gd32_i2c_read>:
 8011368:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801136c:	4680      	mov	r8, r0
 801136e:	460c      	mov	r4, r1
 8011370:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011374:	4f4b      	ldr	r7, [pc, #300]	; (80114a4 <gd32_i2c_read+0x13c>)
 8011376:	f240 6101 	movw	r1, #1537	; 0x601
 801137a:	4638      	mov	r0, r7
 801137c:	f000 fbbe 	bl	8011afc <i2c_flag_get>
 8011380:	4605      	mov	r5, r0
 8011382:	bb08      	cbnz	r0, 80113c8 <gd32_i2c_read+0x60>
 8011384:	2c02      	cmp	r4, #2
 8011386:	d103      	bne.n	8011390 <gd32_i2c_read+0x28>
 8011388:	4601      	mov	r1, r0
 801138a:	4846      	ldr	r0, [pc, #280]	; (80114a4 <gd32_i2c_read+0x13c>)
 801138c:	f000 fb91 	bl	8011ab2 <i2c_ackpos_config>
 8011390:	4844      	ldr	r0, [pc, #272]	; (80114a4 <gd32_i2c_read+0x13c>)
 8011392:	f000 fba4 	bl	8011ade <i2c_start_on_bus>
 8011396:	f640 76ff 	movw	r6, #4095	; 0xfff
 801139a:	4f42      	ldr	r7, [pc, #264]	; (80114a4 <gd32_i2c_read+0x13c>)
 801139c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80113a0:	4638      	mov	r0, r7
 80113a2:	f000 fbab 	bl	8011afc <i2c_flag_get>
 80113a6:	b1a8      	cbz	r0, 80113d4 <gd32_i2c_read+0x6c>
 80113a8:	4b3f      	ldr	r3, [pc, #252]	; (80114a8 <gd32_i2c_read+0x140>)
 80113aa:	2201      	movs	r2, #1
 80113ac:	7819      	ldrb	r1, [r3, #0]
 80113ae:	483d      	ldr	r0, [pc, #244]	; (80114a4 <gd32_i2c_read+0x13c>)
 80113b0:	f000 fb88 	bl	8011ac4 <i2c_master_addressing>
 80113b4:	2c02      	cmp	r4, #2
 80113b6:	d803      	bhi.n	80113c0 <gd32_i2c_read+0x58>
 80113b8:	2100      	movs	r1, #0
 80113ba:	483a      	ldr	r0, [pc, #232]	; (80114a4 <gd32_i2c_read+0x13c>)
 80113bc:	f000 fb70 	bl	8011aa0 <i2c_ack_config>
 80113c0:	f640 76ff 	movw	r6, #4095	; 0xfff
 80113c4:	4f37      	ldr	r7, [pc, #220]	; (80114a4 <gd32_i2c_read+0x13c>)
 80113c6:	e00a      	b.n	80113de <gd32_i2c_read+0x76>
 80113c8:	3e01      	subs	r6, #1
 80113ca:	d1d4      	bne.n	8011376 <gd32_i2c_read+0xe>
 80113cc:	f7ff ff12 	bl	80111f4 <_stop() [clone .isra.0]>
 80113d0:	2504      	movs	r5, #4
 80113d2:	e04d      	b.n	8011470 <gd32_i2c_read+0x108>
 80113d4:	3e01      	subs	r6, #1
 80113d6:	d1e1      	bne.n	801139c <gd32_i2c_read+0x34>
 80113d8:	e7f8      	b.n	80113cc <gd32_i2c_read+0x64>
 80113da:	3e01      	subs	r6, #1
 80113dc:	d0f6      	beq.n	80113cc <gd32_i2c_read+0x64>
 80113de:	f240 5101 	movw	r1, #1281	; 0x501
 80113e2:	4638      	mov	r0, r7
 80113e4:	f000 fb8a 	bl	8011afc <i2c_flag_get>
 80113e8:	2800      	cmp	r0, #0
 80113ea:	d0f6      	beq.n	80113da <gd32_i2c_read+0x72>
 80113ec:	f240 5101 	movw	r1, #1281	; 0x501
 80113f0:	482c      	ldr	r0, [pc, #176]	; (80114a4 <gd32_i2c_read+0x13c>)
 80113f2:	f000 fb8e 	bl	8011b12 <i2c_flag_clear>
 80113f6:	2c01      	cmp	r4, #1
 80113f8:	d102      	bne.n	8011400 <gd32_i2c_read+0x98>
 80113fa:	482a      	ldr	r0, [pc, #168]	; (80114a4 <gd32_i2c_read+0x13c>)
 80113fc:	f000 fb74 	bl	8011ae8 <i2c_stop_on_bus>
 8011400:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011404:	4e27      	ldr	r6, [pc, #156]	; (80114a4 <gd32_i2c_read+0x13c>)
 8011406:	e022      	b.n	801144e <gd32_i2c_read+0xe6>
 8011408:	2c03      	cmp	r4, #3
 801140a:	d134      	bne.n	8011476 <gd32_i2c_read+0x10e>
 801140c:	f640 79ff 	movw	r9, #4095	; 0xfff
 8011410:	e002      	b.n	8011418 <gd32_i2c_read+0xb0>
 8011412:	f1b9 0901 	subs.w	r9, r9, #1
 8011416:	d0d9      	beq.n	80113cc <gd32_i2c_read+0x64>
 8011418:	f240 5102 	movw	r1, #1282	; 0x502
 801141c:	4630      	mov	r0, r6
 801141e:	f000 fb6d 	bl	8011afc <i2c_flag_get>
 8011422:	2800      	cmp	r0, #0
 8011424:	d0f5      	beq.n	8011412 <gd32_i2c_read+0xaa>
 8011426:	2100      	movs	r1, #0
 8011428:	4630      	mov	r0, r6
 801142a:	f000 fb39 	bl	8011aa0 <i2c_ack_config>
 801142e:	f240 5106 	movw	r1, #1286	; 0x506
 8011432:	4630      	mov	r0, r6
 8011434:	f000 fb62 	bl	8011afc <i2c_flag_get>
 8011438:	b138      	cbz	r0, 801144a <gd32_i2c_read+0xe2>
 801143a:	4630      	mov	r0, r6
 801143c:	f000 fb5b 	bl	8011af6 <i2c_data_receive>
 8011440:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011444:	f808 0b01 	strb.w	r0, [r8], #1
 8011448:	3c01      	subs	r4, #1
 801144a:	3f01      	subs	r7, #1
 801144c:	d0be      	beq.n	80113cc <gd32_i2c_read+0x64>
 801144e:	2c00      	cmp	r4, #0
 8011450:	d1da      	bne.n	8011408 <gd32_i2c_read+0xa0>
 8011452:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011456:	4915      	ldr	r1, [pc, #84]	; (80114ac <gd32_i2c_read+0x144>)
 8011458:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801145c:	0592      	lsls	r2, r2, #22
 801145e:	d41d      	bmi.n	801149c <gd32_i2c_read+0x134>
 8011460:	2101      	movs	r1, #1
 8011462:	4810      	ldr	r0, [pc, #64]	; (80114a4 <gd32_i2c_read+0x13c>)
 8011464:	f000 fb1c 	bl	8011aa0 <i2c_ack_config>
 8011468:	2101      	movs	r1, #1
 801146a:	480e      	ldr	r0, [pc, #56]	; (80114a4 <gd32_i2c_read+0x13c>)
 801146c:	f000 fb21 	bl	8011ab2 <i2c_ackpos_config>
 8011470:	4628      	mov	r0, r5
 8011472:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011476:	2c02      	cmp	r4, #2
 8011478:	d1d9      	bne.n	801142e <gd32_i2c_read+0xc6>
 801147a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801147e:	e002      	b.n	8011486 <gd32_i2c_read+0x11e>
 8011480:	f1b9 0901 	subs.w	r9, r9, #1
 8011484:	d0a2      	beq.n	80113cc <gd32_i2c_read+0x64>
 8011486:	f240 5102 	movw	r1, #1282	; 0x502
 801148a:	4630      	mov	r0, r6
 801148c:	f000 fb36 	bl	8011afc <i2c_flag_get>
 8011490:	2800      	cmp	r0, #0
 8011492:	d0f5      	beq.n	8011480 <gd32_i2c_read+0x118>
 8011494:	4630      	mov	r0, r6
 8011496:	f000 fb27 	bl	8011ae8 <i2c_stop_on_bus>
 801149a:	e7c8      	b.n	801142e <gd32_i2c_read+0xc6>
 801149c:	3b01      	subs	r3, #1
 801149e:	d1db      	bne.n	8011458 <gd32_i2c_read+0xf0>
 80114a0:	e796      	b.n	80113d0 <gd32_i2c_read+0x68>
 80114a2:	bf00      	nop
 80114a4:	40005400 	andmi	r5, r0, r0, lsl #8
 80114a8:	2000dd24 	andcs	sp, r0, r4, lsr #26
 80114ac:	40005000 	andmi	r5, r0, r0

080114b0 <gd32_uart_begin>:
 80114b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80114b2:	461e      	mov	r6, r3
 80114b4:	4b63      	ldr	r3, [pc, #396]	; (8011644 <gd32_uart_begin+0x194>)
 80114b6:	4604      	mov	r4, r0
 80114b8:	4298      	cmp	r0, r3
 80114ba:	460f      	mov	r7, r1
 80114bc:	4615      	mov	r5, r2
 80114be:	d03b      	beq.n	8011538 <gd32_uart_begin+0x88>
 80114c0:	d80a      	bhi.n	80114d8 <gd32_uart_begin+0x28>
 80114c2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80114c6:	4298      	cmp	r0, r3
 80114c8:	d02f      	beq.n	801152a <gd32_uart_begin+0x7a>
 80114ca:	f240 7012 	movw	r0, #1810	; 0x712
 80114ce:	f7ff fb17 	bl	8010b00 <rcu_periph_clock_enable>
 80114d2:	f240 6004 	movw	r0, #1540	; 0x604
 80114d6:	e008      	b.n	80114ea <gd32_uart_begin+0x3a>
 80114d8:	4b5b      	ldr	r3, [pc, #364]	; (8011648 <gd32_uart_begin+0x198>)
 80114da:	4298      	cmp	r0, r3
 80114dc:	d02f      	beq.n	801153e <gd32_uart_begin+0x8e>
 80114de:	f240 600e 	movw	r0, #1550	; 0x60e
 80114e2:	f7ff fb0d 	bl	8010b00 <rcu_periph_clock_enable>
 80114e6:	f240 6003 	movw	r0, #1539	; 0x603
 80114ea:	f7ff fb09 	bl	8010b00 <rcu_periph_clock_enable>
 80114ee:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80114f2:	f7ff fb05 	bl	8010b00 <rcu_periph_clock_enable>
 80114f6:	4b53      	ldr	r3, [pc, #332]	; (8011644 <gd32_uart_begin+0x194>)
 80114f8:	429c      	cmp	r4, r3
 80114fa:	f000 8084 	beq.w	8011606 <gd32_uart_begin+0x156>
 80114fe:	d829      	bhi.n	8011554 <gd32_uart_begin+0xa4>
 8011500:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011504:	429c      	cmp	r4, r3
 8011506:	d071      	beq.n	80115ec <gd32_uart_begin+0x13c>
 8011508:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801150c:	2203      	movs	r2, #3
 801150e:	2118      	movs	r1, #24
 8011510:	484e      	ldr	r0, [pc, #312]	; (801164c <gd32_uart_begin+0x19c>)
 8011512:	f7ff fa5d 	bl	80109d0 <gpio_init>
 8011516:	2104      	movs	r1, #4
 8011518:	484c      	ldr	r0, [pc, #304]	; (801164c <gd32_uart_begin+0x19c>)
 801151a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801151e:	2203      	movs	r2, #3
 8011520:	f7ff fa56 	bl	80109d0 <gpio_init>
 8011524:	2101      	movs	r1, #1
 8011526:	484a      	ldr	r0, [pc, #296]	; (8011650 <gd32_uart_begin+0x1a0>)
 8011528:	e025      	b.n	8011576 <gd32_uart_begin+0xc6>
 801152a:	f240 7011 	movw	r0, #1809	; 0x711
 801152e:	f7ff fae7 	bl	8010b00 <rcu_periph_clock_enable>
 8011532:	f240 6002 	movw	r0, #1538	; 0x602
 8011536:	e7d8      	b.n	80114ea <gd32_uart_begin+0x3a>
 8011538:	f240 7013 	movw	r0, #1811	; 0x713
 801153c:	e7c7      	b.n	80114ce <gd32_uart_begin+0x1e>
 801153e:	f240 7014 	movw	r0, #1812	; 0x714
 8011542:	f7ff fadd 	bl	8010b00 <rcu_periph_clock_enable>
 8011546:	f240 6004 	movw	r0, #1540	; 0x604
 801154a:	f7ff fad9 	bl	8010b00 <rcu_periph_clock_enable>
 801154e:	f240 6005 	movw	r0, #1541	; 0x605
 8011552:	e7ca      	b.n	80114ea <gd32_uart_begin+0x3a>
 8011554:	4b3c      	ldr	r3, [pc, #240]	; (8011648 <gd32_uart_begin+0x198>)
 8011556:	429c      	cmp	r4, r3
 8011558:	d062      	beq.n	8011620 <gd32_uart_begin+0x170>
 801155a:	2340      	movs	r3, #64	; 0x40
 801155c:	2203      	movs	r2, #3
 801155e:	2118      	movs	r1, #24
 8011560:	483c      	ldr	r0, [pc, #240]	; (8011654 <gd32_uart_begin+0x1a4>)
 8011562:	f7ff fa35 	bl	80109d0 <gpio_init>
 8011566:	2104      	movs	r1, #4
 8011568:	483a      	ldr	r0, [pc, #232]	; (8011654 <gd32_uart_begin+0x1a4>)
 801156a:	2380      	movs	r3, #128	; 0x80
 801156c:	2203      	movs	r2, #3
 801156e:	f7ff fa2f 	bl	80109d0 <gpio_init>
 8011572:	2101      	movs	r1, #1
 8011574:	2004      	movs	r0, #4
 8011576:	f7ff fa7f 	bl	8010a78 <gpio_pin_remap_config>
 801157a:	4620      	mov	r0, r4
 801157c:	f7ff fd0c 	bl	8010f98 <usart_deinit>
 8011580:	68e3      	ldr	r3, [r4, #12]
 8011582:	4639      	mov	r1, r7
 8011584:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8011588:	4620      	mov	r0, r4
 801158a:	60e3      	str	r3, [r4, #12]
 801158c:	f7ff fd44 	bl	8011018 <usart_baudrate_set>
 8011590:	f1a5 0309 	sub.w	r3, r5, #9
 8011594:	4259      	negs	r1, r3
 8011596:	4159      	adcs	r1, r3
 8011598:	4620      	mov	r0, r4
 801159a:	0309      	lsls	r1, r1, #12
 801159c:	f7ff fd6c 	bl	8011078 <usart_word_length_set>
 80115a0:	9906      	ldr	r1, [sp, #24]
 80115a2:	4620      	mov	r0, r4
 80115a4:	1e8a      	subs	r2, r1, #2
 80115a6:	4251      	negs	r1, r2
 80115a8:	4151      	adcs	r1, r2
 80115aa:	0349      	lsls	r1, r1, #13
 80115ac:	f7ff fd6c 	bl	8011088 <usart_stop_bit_set>
 80115b0:	2e01      	cmp	r6, #1
 80115b2:	d041      	beq.n	8011638 <gd32_uart_begin+0x188>
 80115b4:	2e02      	cmp	r6, #2
 80115b6:	d142      	bne.n	801163e <gd32_uart_begin+0x18e>
 80115b8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80115bc:	4620      	mov	r0, r4
 80115be:	f7ff fd53 	bl	8011068 <usart_parity_config>
 80115c2:	2100      	movs	r1, #0
 80115c4:	4620      	mov	r0, r4
 80115c6:	f7ff fd73 	bl	80110b0 <usart_hardware_flow_rts_config>
 80115ca:	2100      	movs	r1, #0
 80115cc:	4620      	mov	r0, r4
 80115ce:	f7ff fd75 	bl	80110bc <usart_hardware_flow_cts_config>
 80115d2:	2104      	movs	r1, #4
 80115d4:	4620      	mov	r0, r4
 80115d6:	f7ff fd65 	bl	80110a4 <usart_receive_config>
 80115da:	2108      	movs	r1, #8
 80115dc:	4620      	mov	r0, r4
 80115de:	f7ff fd5b 	bl	8011098 <usart_transmit_config>
 80115e2:	68e3      	ldr	r3, [r4, #12]
 80115e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80115e8:	60e3      	str	r3, [r4, #12]
 80115ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80115ec:	2304      	movs	r3, #4
 80115ee:	2203      	movs	r2, #3
 80115f0:	2118      	movs	r1, #24
 80115f2:	4819      	ldr	r0, [pc, #100]	; (8011658 <gd32_uart_begin+0x1a8>)
 80115f4:	f7ff f9ec 	bl	80109d0 <gpio_init>
 80115f8:	2308      	movs	r3, #8
 80115fa:	2203      	movs	r2, #3
 80115fc:	2104      	movs	r1, #4
 80115fe:	4816      	ldr	r0, [pc, #88]	; (8011658 <gd32_uart_begin+0x1a8>)
 8011600:	f7ff f9e6 	bl	80109d0 <gpio_init>
 8011604:	e7b9      	b.n	801157a <gd32_uart_begin+0xca>
 8011606:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801160a:	2203      	movs	r2, #3
 801160c:	2118      	movs	r1, #24
 801160e:	480f      	ldr	r0, [pc, #60]	; (801164c <gd32_uart_begin+0x19c>)
 8011610:	f7ff f9de 	bl	80109d0 <gpio_init>
 8011614:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011618:	2203      	movs	r2, #3
 801161a:	2104      	movs	r1, #4
 801161c:	480b      	ldr	r0, [pc, #44]	; (801164c <gd32_uart_begin+0x19c>)
 801161e:	e7ef      	b.n	8011600 <gd32_uart_begin+0x150>
 8011620:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8011624:	2203      	movs	r2, #3
 8011626:	2118      	movs	r1, #24
 8011628:	4808      	ldr	r0, [pc, #32]	; (801164c <gd32_uart_begin+0x19c>)
 801162a:	f7ff f9d1 	bl	80109d0 <gpio_init>
 801162e:	2304      	movs	r3, #4
 8011630:	2203      	movs	r2, #3
 8011632:	4619      	mov	r1, r3
 8011634:	4809      	ldr	r0, [pc, #36]	; (801165c <gd32_uart_begin+0x1ac>)
 8011636:	e7e3      	b.n	8011600 <gd32_uart_begin+0x150>
 8011638:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 801163c:	e7be      	b.n	80115bc <gd32_uart_begin+0x10c>
 801163e:	2100      	movs	r1, #0
 8011640:	e7bc      	b.n	80115bc <gd32_uart_begin+0x10c>
 8011642:	bf00      	nop
 8011644:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011648:	40005000 	andmi	r5, r0, r0
 801164c:	40011000 	andmi	r1, r1, r0
 8011650:	00140010 	andseq	r0, r4, r0, lsl r0
 8011654:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011658:	40010800 	andmi	r0, r1, r0, lsl #16
 801165c:	40011400 	andmi	r1, r1, r0, lsl #8

08011660 <micros_init()>:
 8011660:	4770      	bx	lr
	...

08011664 <udelay_init()>:
 8011664:	4a07      	ldr	r2, [pc, #28]	; (8011684 <udelay_init()+0x20>)
 8011666:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801166a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801166e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8011672:	2200      	movs	r2, #0
 8011674:	4b04      	ldr	r3, [pc, #16]	; (8011688 <udelay_init()+0x24>)
 8011676:	605a      	str	r2, [r3, #4]
 8011678:	681a      	ldr	r2, [r3, #0]
 801167a:	f042 0201 	orr.w	r2, r2, #1
 801167e:	601a      	str	r2, [r3, #0]
 8011680:	4770      	bx	lr
 8011682:	bf00      	nop
 8011684:	e000ed00 	and	lr, r0, r0, lsl #26
 8011688:	e0001000 	and	r1, r0, r0

0801168c <udelay(unsigned int, unsigned int)>:
 801168c:	236c      	movs	r3, #108	; 0x6c
 801168e:	b530      	push	{r4, r5, lr}
 8011690:	4358      	muls	r0, r3
 8011692:	b909      	cbnz	r1, 8011698 <udelay(unsigned int, unsigned int)+0xc>
 8011694:	4b08      	ldr	r3, [pc, #32]	; (80116b8 <udelay(unsigned int, unsigned int)+0x2c>)
 8011696:	6859      	ldr	r1, [r3, #4]
 8011698:	2300      	movs	r3, #0
 801169a:	4c07      	ldr	r4, [pc, #28]	; (80116b8 <udelay(unsigned int, unsigned int)+0x2c>)
 801169c:	6862      	ldr	r2, [r4, #4]
 801169e:	4291      	cmp	r1, r2
 80116a0:	d0fc      	beq.n	801169c <udelay(unsigned int, unsigned int)+0x10>
 80116a2:	bf2a      	itet	cs
 80116a4:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80116a8:	189b      	addcc	r3, r3, r2
 80116aa:	195b      	addcs	r3, r3, r5
 80116ac:	1a5b      	subs	r3, r3, r1
 80116ae:	4283      	cmp	r3, r0
 80116b0:	d300      	bcc.n	80116b4 <udelay(unsigned int, unsigned int)+0x28>
 80116b2:	bd30      	pop	{r4, r5, pc}
 80116b4:	4611      	mov	r1, r2
 80116b6:	e7f1      	b.n	801169c <udelay(unsigned int, unsigned int)+0x10>
 80116b8:	e0001000 	and	r1, r0, r0

080116bc <emac_start(unsigned char*)>:
 80116bc:	b538      	push	{r3, r4, r5, lr}
 80116be:	4605      	mov	r5, r0
 80116c0:	f240 6002 	movw	r0, #1538	; 0x602
 80116c4:	f7ff fa1c 	bl	8010b00 <rcu_periph_clock_enable>
 80116c8:	f240 6003 	movw	r0, #1539	; 0x603
 80116cc:	f7ff fa18 	bl	8010b00 <rcu_periph_clock_enable>
 80116d0:	f240 6004 	movw	r0, #1540	; 0x604
 80116d4:	f7ff fa14 	bl	8010b00 <rcu_periph_clock_enable>
 80116d8:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80116dc:	f7ff fa10 	bl	8010b00 <rcu_periph_clock_enable>
 80116e0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80116e4:	2203      	movs	r2, #3
 80116e6:	2118      	movs	r1, #24
 80116e8:	4843      	ldr	r0, [pc, #268]	; (80117f8 <emac_start(unsigned char*)+0x13c>)
 80116ea:	f7ff f971 	bl	80109d0 <gpio_init>
 80116ee:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80116f2:	f7ff fa2f 	bl	8010b54 <rcu_pll2_config>
 80116f6:	201c      	movs	r0, #28
 80116f8:	f7ff fac6 	bl	8010c88 <rcu_osci_on>
 80116fc:	201c      	movs	r0, #28
 80116fe:	f7ff fa63 	bl	8010bc8 <rcu_osci_stab_wait>
 8011702:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8011706:	f7ff fa1b 	bl	8010b40 <rcu_ckout0_config>
 801170a:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801170e:	f7ff f9e3 	bl	8010ad8 <gpio_ethernet_phy_select>
 8011712:	2302      	movs	r3, #2
 8011714:	2203      	movs	r2, #3
 8011716:	2104      	movs	r1, #4
 8011718:	4837      	ldr	r0, [pc, #220]	; (80117f8 <emac_start(unsigned char*)+0x13c>)
 801171a:	f7ff f959 	bl	80109d0 <gpio_init>
 801171e:	2304      	movs	r3, #4
 8011720:	2203      	movs	r2, #3
 8011722:	2118      	movs	r1, #24
 8011724:	4834      	ldr	r0, [pc, #208]	; (80117f8 <emac_start(unsigned char*)+0x13c>)
 8011726:	f7ff f953 	bl	80109d0 <gpio_init>
 801172a:	2380      	movs	r3, #128	; 0x80
 801172c:	2203      	movs	r2, #3
 801172e:	2104      	movs	r1, #4
 8011730:	4831      	ldr	r0, [pc, #196]	; (80117f8 <emac_start(unsigned char*)+0x13c>)
 8011732:	f7ff f94d 	bl	80109d0 <gpio_init>
 8011736:	2302      	movs	r3, #2
 8011738:	2203      	movs	r2, #3
 801173a:	2118      	movs	r1, #24
 801173c:	482f      	ldr	r0, [pc, #188]	; (80117fc <emac_start(unsigned char*)+0x140>)
 801173e:	f7ff f947 	bl	80109d0 <gpio_init>
 8011742:	2310      	movs	r3, #16
 8011744:	2203      	movs	r2, #3
 8011746:	2104      	movs	r1, #4
 8011748:	482c      	ldr	r0, [pc, #176]	; (80117fc <emac_start(unsigned char*)+0x140>)
 801174a:	f7ff f941 	bl	80109d0 <gpio_init>
 801174e:	2320      	movs	r3, #32
 8011750:	2203      	movs	r2, #3
 8011752:	2104      	movs	r1, #4
 8011754:	4829      	ldr	r0, [pc, #164]	; (80117fc <emac_start(unsigned char*)+0x140>)
 8011756:	f7ff f93b 	bl	80109d0 <gpio_init>
 801175a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801175e:	2203      	movs	r2, #3
 8011760:	2118      	movs	r1, #24
 8011762:	4827      	ldr	r0, [pc, #156]	; (8011800 <emac_start(unsigned char*)+0x144>)
 8011764:	f7ff f934 	bl	80109d0 <gpio_init>
 8011768:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801176c:	2203      	movs	r2, #3
 801176e:	2118      	movs	r1, #24
 8011770:	4823      	ldr	r0, [pc, #140]	; (8011800 <emac_start(unsigned char*)+0x144>)
 8011772:	f7ff f92d 	bl	80109d0 <gpio_init>
 8011776:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 801177a:	2203      	movs	r2, #3
 801177c:	2118      	movs	r1, #24
 801177e:	4820      	ldr	r0, [pc, #128]	; (8011800 <emac_start(unsigned char*)+0x144>)
 8011780:	f7ff f926 	bl	80109d0 <gpio_init>
 8011784:	f240 500e 	movw	r0, #1294	; 0x50e
 8011788:	f7ff f9ba 	bl	8010b00 <rcu_periph_clock_enable>
 801178c:	f240 500f 	movw	r0, #1295	; 0x50f
 8011790:	f7ff f9b6 	bl	8010b00 <rcu_periph_clock_enable>
 8011794:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8011798:	f7ff f9b2 	bl	8010b00 <rcu_periph_clock_enable>
 801179c:	f7ff f880 	bl	80108a0 <enet_deinit>
 80117a0:	f7fe fcde 	bl	8010160 <enet_software_reset>
 80117a4:	4604      	mov	r4, r0
 80117a6:	b138      	cbz	r0, 80117b8 <emac_start(unsigned char*)+0xfc>
 80117a8:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80117ac:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80117b0:	2001      	movs	r0, #1
 80117b2:	f7fe fe59 	bl	8010468 <enet_init>
 80117b6:	4604      	mov	r4, r0
 80117b8:	4628      	mov	r0, r5
 80117ba:	f000 f9bd 	bl	8011b38 <mac_address_get(unsigned char*)>
 80117be:	4629      	mov	r1, r5
 80117c0:	2000      	movs	r0, #0
 80117c2:	f7fe fdb1 	bl	8010328 <enet_mac_address_set>
 80117c6:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80117ca:	f7fe fcdd 	bl	8010188 <enet_descriptors_chain_init>
 80117ce:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80117d2:	f7fe fcd9 	bl	8010188 <enet_descriptors_chain_init>
 80117d6:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80117da:	480a      	ldr	r0, [pc, #40]	; (8011804 <emac_start(unsigned char*)+0x148>)
 80117dc:	f7fe fd9e 	bl	801031c <enet_transmit_checksum_config>
 80117e0:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80117e4:	4808      	ldr	r0, [pc, #32]	; (8011808 <emac_start(unsigned char*)+0x14c>)
 80117e6:	f7fe fd99 	bl	801031c <enet_transmit_checksum_config>
 80117ea:	f7fe ffd1 	bl	8010790 <enet_enable>
 80117ee:	fab4 f084 	clz	r0, r4
 80117f2:	0940      	lsrs	r0, r0, #5
 80117f4:	4240      	negs	r0, r0
 80117f6:	bd38      	pop	{r3, r4, r5, pc}
 80117f8:	40010800 	andmi	r0, r1, r0, lsl #16
 80117fc:	40011000 	andmi	r1, r1, r0
 8011800:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011804:	2000dd04 	andcs	sp, r0, r4, lsl #26
 8011808:	2000dd14 	andcs	sp, r0, r4, lsl sp

0801180c <adc_mode_config>:
 801180c:	4b06      	ldr	r3, [pc, #24]	; (8011828 <adc_mode_config+0x1c>)
 801180e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8011812:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8011816:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801181a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801181e:	4302      	orrs	r2, r0
 8011820:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8011824:	4770      	bx	lr
 8011826:	bf00      	nop
 8011828:	40012000 	andmi	r2, r1, r0

0801182c <adc_special_function_config>:
 801182c:	b510      	push	{r4, lr}
 801182e:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8011832:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8011836:	f001 0102 	and.w	r1, r1, #2
 801183a:	b17a      	cbz	r2, 801185c <adc_special_function_config+0x30>
 801183c:	b11b      	cbz	r3, 8011846 <adc_special_function_config+0x1a>
 801183e:	6843      	ldr	r3, [r0, #4]
 8011840:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011844:	6043      	str	r3, [r0, #4]
 8011846:	b11c      	cbz	r4, 8011850 <adc_special_function_config+0x24>
 8011848:	6843      	ldr	r3, [r0, #4]
 801184a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801184e:	6043      	str	r3, [r0, #4]
 8011850:	b119      	cbz	r1, 801185a <adc_special_function_config+0x2e>
 8011852:	6883      	ldr	r3, [r0, #8]
 8011854:	f043 0302 	orr.w	r3, r3, #2
 8011858:	6083      	str	r3, [r0, #8]
 801185a:	bd10      	pop	{r4, pc}
 801185c:	b11b      	cbz	r3, 8011866 <adc_special_function_config+0x3a>
 801185e:	6843      	ldr	r3, [r0, #4]
 8011860:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8011864:	6043      	str	r3, [r0, #4]
 8011866:	b11c      	cbz	r4, 8011870 <adc_special_function_config+0x44>
 8011868:	6843      	ldr	r3, [r0, #4]
 801186a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801186e:	6043      	str	r3, [r0, #4]
 8011870:	2900      	cmp	r1, #0
 8011872:	d0f2      	beq.n	801185a <adc_special_function_config+0x2e>
 8011874:	6883      	ldr	r3, [r0, #8]
 8011876:	f023 0302 	bic.w	r3, r3, #2
 801187a:	e7ed      	b.n	8011858 <adc_special_function_config+0x2c>

0801187c <adc_data_alignment_config>:
 801187c:	6883      	ldr	r3, [r0, #8]
 801187e:	b119      	cbz	r1, 8011888 <adc_data_alignment_config+0xc>
 8011880:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011884:	6083      	str	r3, [r0, #8]
 8011886:	4770      	bx	lr
 8011888:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801188c:	e7fa      	b.n	8011884 <adc_data_alignment_config+0x8>

0801188e <adc_enable>:
 801188e:	6883      	ldr	r3, [r0, #8]
 8011890:	07db      	lsls	r3, r3, #31
 8011892:	bf5e      	ittt	pl
 8011894:	6883      	ldrpl	r3, [r0, #8]
 8011896:	f043 0301 	orrpl.w	r3, r3, #1
 801189a:	6083      	strpl	r3, [r0, #8]
 801189c:	4770      	bx	lr

0801189e <adc_calibration_enable>:
 801189e:	6883      	ldr	r3, [r0, #8]
 80118a0:	f100 0208 	add.w	r2, r0, #8
 80118a4:	f043 0308 	orr.w	r3, r3, #8
 80118a8:	6083      	str	r3, [r0, #8]
 80118aa:	6813      	ldr	r3, [r2, #0]
 80118ac:	0719      	lsls	r1, r3, #28
 80118ae:	d4fc      	bmi.n	80118aa <adc_calibration_enable+0xc>
 80118b0:	6883      	ldr	r3, [r0, #8]
 80118b2:	f043 0304 	orr.w	r3, r3, #4
 80118b6:	6083      	str	r3, [r0, #8]
 80118b8:	6813      	ldr	r3, [r2, #0]
 80118ba:	075b      	lsls	r3, r3, #29
 80118bc:	d4fc      	bmi.n	80118b8 <adc_calibration_enable+0x1a>
 80118be:	4770      	bx	lr

080118c0 <adc_tempsensor_vrefint_enable>:
 80118c0:	4a03      	ldr	r2, [pc, #12]	; (80118d0 <adc_tempsensor_vrefint_enable+0x10>)
 80118c2:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80118c6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80118ca:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80118ce:	4770      	bx	lr
 80118d0:	40012000 	andmi	r2, r1, r0

080118d4 <adc_channel_length_config>:
 80118d4:	2901      	cmp	r1, #1
 80118d6:	d002      	beq.n	80118de <adc_channel_length_config+0xa>
 80118d8:	2902      	cmp	r1, #2
 80118da:	d00c      	beq.n	80118f6 <adc_channel_length_config+0x22>
 80118dc:	4770      	bx	lr
 80118de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80118e0:	3a01      	subs	r2, #1
 80118e2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80118e6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80118e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80118ea:	0512      	lsls	r2, r2, #20
 80118ec:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80118f0:	431a      	orrs	r2, r3
 80118f2:	62c2      	str	r2, [r0, #44]	; 0x2c
 80118f4:	4770      	bx	lr
 80118f6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80118f8:	3a01      	subs	r2, #1
 80118fa:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80118fe:	6383      	str	r3, [r0, #56]	; 0x38
 8011900:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011902:	0512      	lsls	r2, r2, #20
 8011904:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8011908:	431a      	orrs	r2, r3
 801190a:	6382      	str	r2, [r0, #56]	; 0x38
 801190c:	4770      	bx	lr

0801190e <adc_inserted_channel_config>:
 801190e:	b530      	push	{r4, r5, lr}
 8011910:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8011912:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011914:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8011918:	1a61      	subs	r1, r4, r1
 801191a:	f06f 0404 	mvn.w	r4, #4
 801191e:	4361      	muls	r1, r4
 8011920:	241f      	movs	r4, #31
 8011922:	310f      	adds	r1, #15
 8011924:	408c      	lsls	r4, r1
 8011926:	ea25 0504 	bic.w	r5, r5, r4
 801192a:	fa02 f101 	lsl.w	r1, r2, r1
 801192e:	4329      	orrs	r1, r5
 8011930:	2a09      	cmp	r2, #9
 8011932:	6381      	str	r1, [r0, #56]	; 0x38
 8011934:	d80b      	bhi.n	801194e <adc_inserted_channel_config+0x40>
 8011936:	2407      	movs	r4, #7
 8011938:	6901      	ldr	r1, [r0, #16]
 801193a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801193e:	4094      	lsls	r4, r2
 8011940:	ea21 0104 	bic.w	r1, r1, r4
 8011944:	fa03 f202 	lsl.w	r2, r3, r2
 8011948:	430a      	orrs	r2, r1
 801194a:	6102      	str	r2, [r0, #16]
 801194c:	bd30      	pop	{r4, r5, pc}
 801194e:	2a11      	cmp	r2, #17
 8011950:	d8fc      	bhi.n	801194c <adc_inserted_channel_config+0x3e>
 8011952:	2407      	movs	r4, #7
 8011954:	3a0a      	subs	r2, #10
 8011956:	68c1      	ldr	r1, [r0, #12]
 8011958:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801195c:	4094      	lsls	r4, r2
 801195e:	ea21 0104 	bic.w	r1, r1, r4
 8011962:	4093      	lsls	r3, r2
 8011964:	430b      	orrs	r3, r1
 8011966:	60c3      	str	r3, [r0, #12]
 8011968:	e7f0      	b.n	801194c <adc_inserted_channel_config+0x3e>

0801196a <adc_external_trigger_source_config>:
 801196a:	2901      	cmp	r1, #1
 801196c:	d002      	beq.n	8011974 <adc_external_trigger_source_config+0xa>
 801196e:	2902      	cmp	r1, #2
 8011970:	d008      	beq.n	8011984 <adc_external_trigger_source_config+0x1a>
 8011972:	4770      	bx	lr
 8011974:	6883      	ldr	r3, [r0, #8]
 8011976:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 801197a:	6083      	str	r3, [r0, #8]
 801197c:	6883      	ldr	r3, [r0, #8]
 801197e:	4313      	orrs	r3, r2
 8011980:	6083      	str	r3, [r0, #8]
 8011982:	4770      	bx	lr
 8011984:	6883      	ldr	r3, [r0, #8]
 8011986:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801198a:	e7f6      	b.n	801197a <adc_external_trigger_source_config+0x10>

0801198c <adc_external_trigger_config>:
 801198c:	f001 0301 	and.w	r3, r1, #1
 8011990:	f001 0102 	and.w	r1, r1, #2
 8011994:	b152      	cbz	r2, 80119ac <adc_external_trigger_config+0x20>
 8011996:	b11b      	cbz	r3, 80119a0 <adc_external_trigger_config+0x14>
 8011998:	6883      	ldr	r3, [r0, #8]
 801199a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801199e:	6083      	str	r3, [r0, #8]
 80119a0:	b119      	cbz	r1, 80119aa <adc_external_trigger_config+0x1e>
 80119a2:	6883      	ldr	r3, [r0, #8]
 80119a4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80119a8:	6083      	str	r3, [r0, #8]
 80119aa:	4770      	bx	lr
 80119ac:	b11b      	cbz	r3, 80119b6 <adc_external_trigger_config+0x2a>
 80119ae:	6883      	ldr	r3, [r0, #8]
 80119b0:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80119b4:	6083      	str	r3, [r0, #8]
 80119b6:	2900      	cmp	r1, #0
 80119b8:	d0f7      	beq.n	80119aa <adc_external_trigger_config+0x1e>
 80119ba:	6883      	ldr	r3, [r0, #8]
 80119bc:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80119c0:	e7f2      	b.n	80119a8 <adc_external_trigger_config+0x1c>

080119c2 <adc_software_trigger_enable>:
 80119c2:	07ca      	lsls	r2, r1, #31
 80119c4:	bf42      	ittt	mi
 80119c6:	6883      	ldrmi	r3, [r0, #8]
 80119c8:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80119cc:	6083      	strmi	r3, [r0, #8]
 80119ce:	078b      	lsls	r3, r1, #30
 80119d0:	bf42      	ittt	mi
 80119d2:	6883      	ldrmi	r3, [r0, #8]
 80119d4:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80119d8:	6083      	strmi	r3, [r0, #8]
 80119da:	4770      	bx	lr

080119dc <i2c_clock_config>:
 80119dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80119de:	4605      	mov	r5, r0
 80119e0:	2002      	movs	r0, #2
 80119e2:	460c      	mov	r4, r1
 80119e4:	4617      	mov	r7, r2
 80119e6:	f7ff f951 	bl	8010c8c <rcu_clock_freq_get>
 80119ea:	4603      	mov	r3, r0
 80119ec:	4828      	ldr	r0, [pc, #160]	; (8011a90 <i2c_clock_config+0xb4>)
 80119ee:	4a29      	ldr	r2, [pc, #164]	; (8011a94 <i2c_clock_config+0xb8>)
 80119f0:	fbb3 f0f0 	udiv	r0, r3, r0
 80119f4:	4293      	cmp	r3, r2
 80119f6:	bf34      	ite	cc
 80119f8:	4601      	movcc	r1, r0
 80119fa:	2136      	movcs	r1, #54	; 0x36
 80119fc:	686e      	ldr	r6, [r5, #4]
 80119fe:	4a26      	ldr	r2, [pc, #152]	; (8011a98 <i2c_clock_config+0xbc>)
 8011a00:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8011a04:	430e      	orrs	r6, r1
 8011a06:	4294      	cmp	r4, r2
 8011a08:	606e      	str	r6, [r5, #4]
 8011a0a:	d816      	bhi.n	8011a3a <i2c_clock_config+0x5e>
 8011a0c:	3001      	adds	r0, #1
 8011a0e:	2835      	cmp	r0, #53	; 0x35
 8011a10:	d90d      	bls.n	8011a2e <i2c_clock_config+0x52>
 8011a12:	2236      	movs	r2, #54	; 0x36
 8011a14:	622a      	str	r2, [r5, #32]
 8011a16:	0064      	lsls	r4, r4, #1
 8011a18:	fbb3 f4f4 	udiv	r4, r3, r4
 8011a1c:	2c04      	cmp	r4, #4
 8011a1e:	bf38      	it	cc
 8011a20:	2404      	movcc	r4, #4
 8011a22:	69ea      	ldr	r2, [r5, #28]
 8011a24:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8011a28:	4314      	orrs	r4, r2
 8011a2a:	61ec      	str	r4, [r5, #28]
 8011a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a2e:	2802      	cmp	r0, #2
 8011a30:	d801      	bhi.n	8011a36 <i2c_clock_config+0x5a>
 8011a32:	2202      	movs	r2, #2
 8011a34:	e7ee      	b.n	8011a14 <i2c_clock_config+0x38>
 8011a36:	6228      	str	r0, [r5, #32]
 8011a38:	e7ed      	b.n	8011a16 <i2c_clock_config+0x3a>
 8011a3a:	4a18      	ldr	r2, [pc, #96]	; (8011a9c <i2c_clock_config+0xc0>)
 8011a3c:	4294      	cmp	r4, r2
 8011a3e:	d8f5      	bhi.n	8011a2c <i2c_clock_config+0x50>
 8011a40:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8011a44:	4351      	muls	r1, r2
 8011a46:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011a4a:	fbb1 f1f2 	udiv	r1, r1, r2
 8011a4e:	3101      	adds	r1, #1
 8011a50:	6229      	str	r1, [r5, #32]
 8011a52:	b9a7      	cbnz	r7, 8011a7e <i2c_clock_config+0xa2>
 8011a54:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011a58:	fbb3 f4f4 	udiv	r4, r3, r4
 8011a5c:	69eb      	ldr	r3, [r5, #28]
 8011a5e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8011a62:	61eb      	str	r3, [r5, #28]
 8011a64:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8011a68:	b90b      	cbnz	r3, 8011a6e <i2c_clock_config+0x92>
 8011a6a:	f044 0401 	orr.w	r4, r4, #1
 8011a6e:	69eb      	ldr	r3, [r5, #28]
 8011a70:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8011a74:	61eb      	str	r3, [r5, #28]
 8011a76:	69eb      	ldr	r3, [r5, #28]
 8011a78:	4323      	orrs	r3, r4
 8011a7a:	61eb      	str	r3, [r5, #28]
 8011a7c:	e7d6      	b.n	8011a2c <i2c_clock_config+0x50>
 8011a7e:	2219      	movs	r2, #25
 8011a80:	4354      	muls	r4, r2
 8011a82:	fbb3 f4f4 	udiv	r4, r3, r4
 8011a86:	69eb      	ldr	r3, [r5, #28]
 8011a88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8011a8c:	e7e9      	b.n	8011a62 <i2c_clock_config+0x86>
 8011a8e:	bf00      	nop
 8011a90:	000f4240 	andeq	r4, pc, r0, asr #4
 8011a94:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8011a98:	000186a0 	andeq	r8, r1, r0, lsr #13
 8011a9c:	00061a80 	andeq	r1, r6, r0, lsl #21

08011aa0 <i2c_ack_config>:
 8011aa0:	6803      	ldr	r3, [r0, #0]
 8011aa2:	2901      	cmp	r1, #1
 8011aa4:	bf0c      	ite	eq
 8011aa6:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8011aaa:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8011aae:	6003      	str	r3, [r0, #0]
 8011ab0:	4770      	bx	lr

08011ab2 <i2c_ackpos_config>:
 8011ab2:	6803      	ldr	r3, [r0, #0]
 8011ab4:	b919      	cbnz	r1, 8011abe <i2c_ackpos_config+0xc>
 8011ab6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011aba:	6003      	str	r3, [r0, #0]
 8011abc:	4770      	bx	lr
 8011abe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011ac2:	e7fa      	b.n	8011aba <i2c_ackpos_config+0x8>

08011ac4 <i2c_master_addressing>:
 8011ac4:	3202      	adds	r2, #2
 8011ac6:	bf0c      	ite	eq
 8011ac8:	f021 0101 	biceq.w	r1, r1, #1
 8011acc:	f041 0101 	orrne.w	r1, r1, #1
 8011ad0:	6101      	str	r1, [r0, #16]
 8011ad2:	4770      	bx	lr

08011ad4 <i2c_enable>:
 8011ad4:	6803      	ldr	r3, [r0, #0]
 8011ad6:	f043 0301 	orr.w	r3, r3, #1
 8011ada:	6003      	str	r3, [r0, #0]
 8011adc:	4770      	bx	lr

08011ade <i2c_start_on_bus>:
 8011ade:	6803      	ldr	r3, [r0, #0]
 8011ae0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011ae4:	6003      	str	r3, [r0, #0]
 8011ae6:	4770      	bx	lr

08011ae8 <i2c_stop_on_bus>:
 8011ae8:	6803      	ldr	r3, [r0, #0]
 8011aea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8011aee:	6003      	str	r3, [r0, #0]
 8011af0:	4770      	bx	lr

08011af2 <i2c_data_transmit>:
 8011af2:	6101      	str	r1, [r0, #16]
 8011af4:	4770      	bx	lr

08011af6 <i2c_data_receive>:
 8011af6:	6900      	ldr	r0, [r0, #16]
 8011af8:	b2c0      	uxtb	r0, r0
 8011afa:	4770      	bx	lr

08011afc <i2c_flag_get>:
 8011afc:	098b      	lsrs	r3, r1, #6
 8011afe:	581a      	ldr	r2, [r3, r0]
 8011b00:	2301      	movs	r3, #1
 8011b02:	f001 011f 	and.w	r1, r1, #31
 8011b06:	408b      	lsls	r3, r1
 8011b08:	4213      	tst	r3, r2
 8011b0a:	bf14      	ite	ne
 8011b0c:	2001      	movne	r0, #1
 8011b0e:	2000      	moveq	r0, #0
 8011b10:	4770      	bx	lr

08011b12 <i2c_flag_clear>:
 8011b12:	f240 5301 	movw	r3, #1281	; 0x501
 8011b16:	4299      	cmp	r1, r3
 8011b18:	b510      	push	{r4, lr}
 8011b1a:	d102      	bne.n	8011b22 <i2c_flag_clear+0x10>
 8011b1c:	6943      	ldr	r3, [r0, #20]
 8011b1e:	6983      	ldr	r3, [r0, #24]
 8011b20:	bd10      	pop	{r4, pc}
 8011b22:	2201      	movs	r2, #1
 8011b24:	098c      	lsrs	r4, r1, #6
 8011b26:	5823      	ldr	r3, [r4, r0]
 8011b28:	f001 011f 	and.w	r1, r1, #31
 8011b2c:	408a      	lsls	r2, r1
 8011b2e:	ea23 0302 	bic.w	r3, r3, r2
 8011b32:	5023      	str	r3, [r4, r0]
 8011b34:	e7f4      	b.n	8011b20 <i2c_flag_clear+0xe>
	...

08011b38 <mac_address_get(unsigned char*)>:
 8011b38:	2102      	movs	r1, #2
 8011b3a:	4a07      	ldr	r2, [pc, #28]	; (8011b58 <mac_address_get(unsigned char*)+0x20>)
 8011b3c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8011b40:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8011b44:	7001      	strb	r1, [r0, #0]
 8011b46:	7042      	strb	r2, [r0, #1]
 8011b48:	0e1a      	lsrs	r2, r3, #24
 8011b4a:	7082      	strb	r2, [r0, #2]
 8011b4c:	0c1a      	lsrs	r2, r3, #16
 8011b4e:	70c2      	strb	r2, [r0, #3]
 8011b50:	0a1a      	lsrs	r2, r3, #8
 8011b52:	7102      	strb	r2, [r0, #4]
 8011b54:	7143      	strb	r3, [r0, #5]
 8011b56:	4770      	bx	lr
 8011b58:	1ffff000 	svcne	0x00fff000

08011b5c <__popcountsi2>:
 8011b5c:	0843      	lsrs	r3, r0, #1
 8011b5e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8011b62:	1ac0      	subs	r0, r0, r3
 8011b64:	0883      	lsrs	r3, r0, #2
 8011b66:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8011b6a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8011b6e:	4418      	add	r0, r3
 8011b70:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8011b74:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8011b78:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8011b7c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8011b80:	0e00      	lsrs	r0, r0, #24
 8011b82:	4770      	bx	lr

08011b84 <__udivmoddi4>:
 8011b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b88:	9e08      	ldr	r6, [sp, #32]
 8011b8a:	460d      	mov	r5, r1
 8011b8c:	4604      	mov	r4, r0
 8011b8e:	468e      	mov	lr, r1
 8011b90:	2b00      	cmp	r3, #0
 8011b92:	d14c      	bne.n	8011c2e <__udivmoddi4+0xaa>
 8011b94:	428a      	cmp	r2, r1
 8011b96:	4694      	mov	ip, r2
 8011b98:	d967      	bls.n	8011c6a <__udivmoddi4+0xe6>
 8011b9a:	fab2 f382 	clz	r3, r2
 8011b9e:	b153      	cbz	r3, 8011bb6 <__udivmoddi4+0x32>
 8011ba0:	fa02 fc03 	lsl.w	ip, r2, r3
 8011ba4:	f1c3 0220 	rsb	r2, r3, #32
 8011ba8:	fa01 fe03 	lsl.w	lr, r1, r3
 8011bac:	fa20 f202 	lsr.w	r2, r0, r2
 8011bb0:	ea42 0e0e 	orr.w	lr, r2, lr
 8011bb4:	409c      	lsls	r4, r3
 8011bb6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011bba:	fbbe f1f7 	udiv	r1, lr, r7
 8011bbe:	fa1f f58c 	uxth.w	r5, ip
 8011bc2:	fb07 ee11 	mls	lr, r7, r1, lr
 8011bc6:	fb01 f005 	mul.w	r0, r1, r5
 8011bca:	0c22      	lsrs	r2, r4, #16
 8011bcc:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8011bd0:	4290      	cmp	r0, r2
 8011bd2:	d90a      	bls.n	8011bea <__udivmoddi4+0x66>
 8011bd4:	eb1c 0202 	adds.w	r2, ip, r2
 8011bd8:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8011bdc:	f080 8119 	bcs.w	8011e12 <__udivmoddi4+0x28e>
 8011be0:	4290      	cmp	r0, r2
 8011be2:	f240 8116 	bls.w	8011e12 <__udivmoddi4+0x28e>
 8011be6:	3902      	subs	r1, #2
 8011be8:	4462      	add	r2, ip
 8011bea:	1a12      	subs	r2, r2, r0
 8011bec:	fbb2 f0f7 	udiv	r0, r2, r7
 8011bf0:	fb07 2210 	mls	r2, r7, r0, r2
 8011bf4:	fb00 f505 	mul.w	r5, r0, r5
 8011bf8:	b2a4      	uxth	r4, r4
 8011bfa:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011bfe:	42a5      	cmp	r5, r4
 8011c00:	d90a      	bls.n	8011c18 <__udivmoddi4+0x94>
 8011c02:	eb1c 0404 	adds.w	r4, ip, r4
 8011c06:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011c0a:	f080 8104 	bcs.w	8011e16 <__udivmoddi4+0x292>
 8011c0e:	42a5      	cmp	r5, r4
 8011c10:	f240 8101 	bls.w	8011e16 <__udivmoddi4+0x292>
 8011c14:	4464      	add	r4, ip
 8011c16:	3802      	subs	r0, #2
 8011c18:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8011c1c:	2100      	movs	r1, #0
 8011c1e:	1b64      	subs	r4, r4, r5
 8011c20:	b11e      	cbz	r6, 8011c2a <__udivmoddi4+0xa6>
 8011c22:	40dc      	lsrs	r4, r3
 8011c24:	2300      	movs	r3, #0
 8011c26:	e9c6 4300 	strd	r4, r3, [r6]
 8011c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011c2e:	428b      	cmp	r3, r1
 8011c30:	d908      	bls.n	8011c44 <__udivmoddi4+0xc0>
 8011c32:	2e00      	cmp	r6, #0
 8011c34:	f000 80ea 	beq.w	8011e0c <__udivmoddi4+0x288>
 8011c38:	2100      	movs	r1, #0
 8011c3a:	e9c6 0500 	strd	r0, r5, [r6]
 8011c3e:	4608      	mov	r0, r1
 8011c40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011c44:	fab3 f183 	clz	r1, r3
 8011c48:	2900      	cmp	r1, #0
 8011c4a:	d148      	bne.n	8011cde <__udivmoddi4+0x15a>
 8011c4c:	42ab      	cmp	r3, r5
 8011c4e:	d302      	bcc.n	8011c56 <__udivmoddi4+0xd2>
 8011c50:	4282      	cmp	r2, r0
 8011c52:	f200 80f8 	bhi.w	8011e46 <__udivmoddi4+0x2c2>
 8011c56:	1a84      	subs	r4, r0, r2
 8011c58:	eb65 0203 	sbc.w	r2, r5, r3
 8011c5c:	2001      	movs	r0, #1
 8011c5e:	4696      	mov	lr, r2
 8011c60:	2e00      	cmp	r6, #0
 8011c62:	d0e2      	beq.n	8011c2a <__udivmoddi4+0xa6>
 8011c64:	e9c6 4e00 	strd	r4, lr, [r6]
 8011c68:	e7df      	b.n	8011c2a <__udivmoddi4+0xa6>
 8011c6a:	b902      	cbnz	r2, 8011c6e <__udivmoddi4+0xea>
 8011c6c:	deff      	udf	#255	; 0xff
 8011c6e:	fab2 f382 	clz	r3, r2
 8011c72:	2b00      	cmp	r3, #0
 8011c74:	f040 808e 	bne.w	8011d94 <__udivmoddi4+0x210>
 8011c78:	1a88      	subs	r0, r1, r2
 8011c7a:	2101      	movs	r1, #1
 8011c7c:	0c17      	lsrs	r7, r2, #16
 8011c7e:	fa1f fe82 	uxth.w	lr, r2
 8011c82:	fbb0 f5f7 	udiv	r5, r0, r7
 8011c86:	fb07 0015 	mls	r0, r7, r5, r0
 8011c8a:	0c22      	lsrs	r2, r4, #16
 8011c8c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8011c90:	fb0e f005 	mul.w	r0, lr, r5
 8011c94:	4290      	cmp	r0, r2
 8011c96:	d908      	bls.n	8011caa <__udivmoddi4+0x126>
 8011c98:	eb1c 0202 	adds.w	r2, ip, r2
 8011c9c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011ca0:	d202      	bcs.n	8011ca8 <__udivmoddi4+0x124>
 8011ca2:	4290      	cmp	r0, r2
 8011ca4:	f200 80cc 	bhi.w	8011e40 <__udivmoddi4+0x2bc>
 8011ca8:	4645      	mov	r5, r8
 8011caa:	1a12      	subs	r2, r2, r0
 8011cac:	fbb2 f0f7 	udiv	r0, r2, r7
 8011cb0:	fb07 2210 	mls	r2, r7, r0, r2
 8011cb4:	fb0e fe00 	mul.w	lr, lr, r0
 8011cb8:	b2a4      	uxth	r4, r4
 8011cba:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011cbe:	45a6      	cmp	lr, r4
 8011cc0:	d908      	bls.n	8011cd4 <__udivmoddi4+0x150>
 8011cc2:	eb1c 0404 	adds.w	r4, ip, r4
 8011cc6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011cca:	d202      	bcs.n	8011cd2 <__udivmoddi4+0x14e>
 8011ccc:	45a6      	cmp	lr, r4
 8011cce:	f200 80b4 	bhi.w	8011e3a <__udivmoddi4+0x2b6>
 8011cd2:	4610      	mov	r0, r2
 8011cd4:	eba4 040e 	sub.w	r4, r4, lr
 8011cd8:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8011cdc:	e7a0      	b.n	8011c20 <__udivmoddi4+0x9c>
 8011cde:	f1c1 0720 	rsb	r7, r1, #32
 8011ce2:	408b      	lsls	r3, r1
 8011ce4:	fa22 fc07 	lsr.w	ip, r2, r7
 8011ce8:	ea4c 0c03 	orr.w	ip, ip, r3
 8011cec:	fa25 fa07 	lsr.w	sl, r5, r7
 8011cf0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8011cf4:	fbba f8f9 	udiv	r8, sl, r9
 8011cf8:	408d      	lsls	r5, r1
 8011cfa:	fa20 f307 	lsr.w	r3, r0, r7
 8011cfe:	fb09 aa18 	mls	sl, r9, r8, sl
 8011d02:	fa1f fe8c 	uxth.w	lr, ip
 8011d06:	432b      	orrs	r3, r5
 8011d08:	fa00 f501 	lsl.w	r5, r0, r1
 8011d0c:	fb08 f00e 	mul.w	r0, r8, lr
 8011d10:	0c1c      	lsrs	r4, r3, #16
 8011d12:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8011d16:	42a0      	cmp	r0, r4
 8011d18:	fa02 f201 	lsl.w	r2, r2, r1
 8011d1c:	d90b      	bls.n	8011d36 <__udivmoddi4+0x1b2>
 8011d1e:	eb1c 0404 	adds.w	r4, ip, r4
 8011d22:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8011d26:	f080 8086 	bcs.w	8011e36 <__udivmoddi4+0x2b2>
 8011d2a:	42a0      	cmp	r0, r4
 8011d2c:	f240 8083 	bls.w	8011e36 <__udivmoddi4+0x2b2>
 8011d30:	f1a8 0802 	sub.w	r8, r8, #2
 8011d34:	4464      	add	r4, ip
 8011d36:	1a24      	subs	r4, r4, r0
 8011d38:	b298      	uxth	r0, r3
 8011d3a:	fbb4 f3f9 	udiv	r3, r4, r9
 8011d3e:	fb09 4413 	mls	r4, r9, r3, r4
 8011d42:	fb03 fe0e 	mul.w	lr, r3, lr
 8011d46:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8011d4a:	45a6      	cmp	lr, r4
 8011d4c:	d908      	bls.n	8011d60 <__udivmoddi4+0x1dc>
 8011d4e:	eb1c 0404 	adds.w	r4, ip, r4
 8011d52:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8011d56:	d26a      	bcs.n	8011e2e <__udivmoddi4+0x2aa>
 8011d58:	45a6      	cmp	lr, r4
 8011d5a:	d968      	bls.n	8011e2e <__udivmoddi4+0x2aa>
 8011d5c:	3b02      	subs	r3, #2
 8011d5e:	4464      	add	r4, ip
 8011d60:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8011d64:	fba0 9302 	umull	r9, r3, r0, r2
 8011d68:	eba4 040e 	sub.w	r4, r4, lr
 8011d6c:	429c      	cmp	r4, r3
 8011d6e:	46c8      	mov	r8, r9
 8011d70:	469e      	mov	lr, r3
 8011d72:	d354      	bcc.n	8011e1e <__udivmoddi4+0x29a>
 8011d74:	d051      	beq.n	8011e1a <__udivmoddi4+0x296>
 8011d76:	2e00      	cmp	r6, #0
 8011d78:	d067      	beq.n	8011e4a <__udivmoddi4+0x2c6>
 8011d7a:	ebb5 0308 	subs.w	r3, r5, r8
 8011d7e:	eb64 040e 	sbc.w	r4, r4, lr
 8011d82:	40cb      	lsrs	r3, r1
 8011d84:	fa04 f707 	lsl.w	r7, r4, r7
 8011d88:	431f      	orrs	r7, r3
 8011d8a:	40cc      	lsrs	r4, r1
 8011d8c:	e9c6 7400 	strd	r7, r4, [r6]
 8011d90:	2100      	movs	r1, #0
 8011d92:	e74a      	b.n	8011c2a <__udivmoddi4+0xa6>
 8011d94:	fa02 fc03 	lsl.w	ip, r2, r3
 8011d98:	f1c3 0020 	rsb	r0, r3, #32
 8011d9c:	40c1      	lsrs	r1, r0
 8011d9e:	409d      	lsls	r5, r3
 8011da0:	fa24 f000 	lsr.w	r0, r4, r0
 8011da4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011da8:	4328      	orrs	r0, r5
 8011daa:	fbb1 f5f7 	udiv	r5, r1, r7
 8011dae:	fb07 1115 	mls	r1, r7, r5, r1
 8011db2:	fa1f fe8c 	uxth.w	lr, ip
 8011db6:	0c02      	lsrs	r2, r0, #16
 8011db8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8011dbc:	fb05 f10e 	mul.w	r1, r5, lr
 8011dc0:	4291      	cmp	r1, r2
 8011dc2:	fa04 f403 	lsl.w	r4, r4, r3
 8011dc6:	d908      	bls.n	8011dda <__udivmoddi4+0x256>
 8011dc8:	eb1c 0202 	adds.w	r2, ip, r2
 8011dcc:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011dd0:	d22f      	bcs.n	8011e32 <__udivmoddi4+0x2ae>
 8011dd2:	4291      	cmp	r1, r2
 8011dd4:	d92d      	bls.n	8011e32 <__udivmoddi4+0x2ae>
 8011dd6:	3d02      	subs	r5, #2
 8011dd8:	4462      	add	r2, ip
 8011dda:	1a52      	subs	r2, r2, r1
 8011ddc:	fbb2 f1f7 	udiv	r1, r2, r7
 8011de0:	fb07 2211 	mls	r2, r7, r1, r2
 8011de4:	b280      	uxth	r0, r0
 8011de6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8011dea:	fb01 f20e 	mul.w	r2, r1, lr
 8011dee:	4282      	cmp	r2, r0
 8011df0:	d908      	bls.n	8011e04 <__udivmoddi4+0x280>
 8011df2:	eb1c 0000 	adds.w	r0, ip, r0
 8011df6:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8011dfa:	d216      	bcs.n	8011e2a <__udivmoddi4+0x2a6>
 8011dfc:	4282      	cmp	r2, r0
 8011dfe:	d914      	bls.n	8011e2a <__udivmoddi4+0x2a6>
 8011e00:	3902      	subs	r1, #2
 8011e02:	4460      	add	r0, ip
 8011e04:	1a80      	subs	r0, r0, r2
 8011e06:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8011e0a:	e73a      	b.n	8011c82 <__udivmoddi4+0xfe>
 8011e0c:	4631      	mov	r1, r6
 8011e0e:	4630      	mov	r0, r6
 8011e10:	e70b      	b.n	8011c2a <__udivmoddi4+0xa6>
 8011e12:	4671      	mov	r1, lr
 8011e14:	e6e9      	b.n	8011bea <__udivmoddi4+0x66>
 8011e16:	4610      	mov	r0, r2
 8011e18:	e6fe      	b.n	8011c18 <__udivmoddi4+0x94>
 8011e1a:	454d      	cmp	r5, r9
 8011e1c:	d2ab      	bcs.n	8011d76 <__udivmoddi4+0x1f2>
 8011e1e:	ebb9 0802 	subs.w	r8, r9, r2
 8011e22:	eb63 0e0c 	sbc.w	lr, r3, ip
 8011e26:	3801      	subs	r0, #1
 8011e28:	e7a5      	b.n	8011d76 <__udivmoddi4+0x1f2>
 8011e2a:	4641      	mov	r1, r8
 8011e2c:	e7ea      	b.n	8011e04 <__udivmoddi4+0x280>
 8011e2e:	4603      	mov	r3, r0
 8011e30:	e796      	b.n	8011d60 <__udivmoddi4+0x1dc>
 8011e32:	4645      	mov	r5, r8
 8011e34:	e7d1      	b.n	8011dda <__udivmoddi4+0x256>
 8011e36:	46d0      	mov	r8, sl
 8011e38:	e77d      	b.n	8011d36 <__udivmoddi4+0x1b2>
 8011e3a:	4464      	add	r4, ip
 8011e3c:	3802      	subs	r0, #2
 8011e3e:	e749      	b.n	8011cd4 <__udivmoddi4+0x150>
 8011e40:	3d02      	subs	r5, #2
 8011e42:	4462      	add	r2, ip
 8011e44:	e731      	b.n	8011caa <__udivmoddi4+0x126>
 8011e46:	4608      	mov	r0, r1
 8011e48:	e70a      	b.n	8011c60 <__udivmoddi4+0xdc>
 8011e4a:	4631      	mov	r1, r6
 8011e4c:	e6ed      	b.n	8011c2a <__udivmoddi4+0xa6>
 8011e4e:	bf00      	nop

Disassembly of section .rodata:

08011e50 <vtable for DisplayHandler-0xac>:
	...
 8011e58:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011e5c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8011e60:	00000000 	andeq	r0, r0, r0
 8011e64:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011e68:	313a3131 	teqcc	sl, r1, lsr r1
 8011e6c:	39343a35 	ldmdbcc	r4!, {r0, r2, r4, r5, r9, fp, ip, sp}
 8011e70:	63654400 	cmnvs	r5, #0, 8
 8011e74:	20353220 	eorscs	r3, r5, r0, lsr #4
 8011e78:	32323032 	eorscc	r3, r2, #50	; 0x32
 8011e7c:	335b1b00 	cmpcc	fp, #0, 22
 8011e80:	41736d32 	cmnmi	r3, r2, lsr sp
 8011e84:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011e88:	31332e31 	teqcc	r3, r1, lsr lr
 8011e8c:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8011e90:	20317b20 	eorscs	r7, r1, r0, lsr #22
 8011e94:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8011e98:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8011e9c:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8011ea0:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8011ea4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8011ea8:	00676966 	rsbeq	r6, r7, r6, ror #18
 8011eac:	74685f2e 	strbtvc	r5, [r8], #-3886	; 0xfffff0d2
 8011eb0:	6e007074 	mcrvs	0, 0, r7, cr0, cr4, {3}
 8011eb4:	3d65646f 	cfstrdcc	mvd6, [r5, #-444]!	; 0xfffffe44
 8011eb8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011ebc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011ec0:	44203133 	strtmi	r3, [r0], #-307	; 0xfffffecd
 8011ec4:	7300584d 	movwvc	r5, #2125	; 0x84d
 8011ec8:	204e4341 	subcs	r4, lr, r1, asr #6
 8011ecc:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8011ed0:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8011ed4:	73252058 			; <UNDEFINED> instruction: 0x73252058
 8011ed8:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 8011edc:	72620021 	rsbvc	r0, r2, #33	; 0x21
 8011ee0:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8011ee4:	62616d00 	rsbvs	r6, r1, #0, 26
 8011ee8:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 8011eec:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8011ef0:	73002368 	movwvc	r2, #872	; 0x368
 8011ef4:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8011ef8:	00000023 	andeq	r0, r0, r3, lsr #32

08011efc <vtable for DisplayHandler>:
	...
 8011f04:	08007b87 	stmdaeq	r0, {r0, r1, r2, r7, r8, r9, fp, ip, sp, lr}
 8011f08:	08007bad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, fp, ip, sp, lr}
 8011f0c:	08007bcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, lr}

08011f10 <CSWTCH.84>:
 8011f10:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011f14:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08011f15 <SOFTWARE_VERSION>:
 8011f15:	00342e31 	eorseq	r2, r4, r1, lsr lr
 8011f19:	 	andeq	r0, r0, r0

08011f1c <vtable for DmxInput>:
	...
 8011f24:	080081f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, pc}
 8011f28:	0800828d 	stmdaeq	r0, {r0, r2, r3, r7, r9, pc}
 8011f2c:	080081f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, pc}
 8011f30:	08008225 	stmdaeq	r0, {r0, r2, r5, r9, pc}
 8011f34:	08008259 	stmdaeq	r0, {r0, r3, r4, r6, r9, pc}
 8011f38:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011f3c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011f40:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8011f44:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011f48:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8011f4c:	0a73252c 	beq	9cdb404 <__exidx_end+0x1cc77e8>
 8011f50:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8011f54:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011f58:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011f5c:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8011f60:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011f64:	4f000a64 	svcmi	0x00000a64
 8011f68:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8011f6c:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8011f70:	616c7073 	smcvs	50947	; 0xc703
 8011f74:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8011f78:	6674000a 	ldrbtvs	r0, [r4], -sl
 8011f7c:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8011f80:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8011f84:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011f88:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8011f8c:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8011f90:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011f94:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8011f98:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8011f9c:	20505446 	subscs	r5, r0, r6, asr #8
 8011fa0:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8011fa4:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8011fa8:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8011fac:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8011fb0:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8011fb4:	525b2066 	subspl	r2, fp, #102	; 0x66
 8011fb8:	6f6f6265 	svcvs	0x006f6265
 8011fbc:	00205d74 	eoreq	r5, r0, r4, ror sp
 8011fc0:	4f525245 	svcmi	0x00525245
 8011fc4:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8011fc8:	000a7465 	andeq	r7, sl, r5, ror #8
 8011fcc:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8011fd0:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8011fd4:	616c7073 	smcvs	50947	; 0xc703
 8011fd8:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8011fdc:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8011fe0:	000a2123 	andeq	r2, sl, r3, lsr #2
 8011fe4:	4f525245 	svcmi	0x00525245
 8011fe8:	0a3f2352 	beq	8fdad38 <__exidx_end+0xfc711c>
 8011fec:	62657200 	rsbvs	r7, r5, #0, 4
 8011ff0:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8011ff4:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8011ff8:	00237473 	eoreq	r7, r3, r3, ror r4
 8011ffc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012000:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8012004:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8012008:	76002365 	strvc	r2, [r0], -r5, ror #6
 801200c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012010:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8012014:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8012018:	63616600 	cmnvs	r1, #0, 12
 801201c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012020:	 	tstmi	r0, r3, lsr #6

08012023 <s_Node>:
 8012023:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8012027:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8012033:	41730000 	cmnmi	r3, r0
 8012037:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801203b:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8012047:	2043534f 	subcs	r5, r3, pc, asr #6
 801204b:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801204f:	00007265 	andeq	r7, r0, r5, ror #4
 8012053:	00000000 	andeq	r0, r0, r0
 8012057:	544c0000 	strbpl	r0, [ip], #-0
 801205b:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801206b:	2043534f 	subcs	r5, r3, pc, asr #6
 801206f:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8012073:	0000746e 	andeq	r7, r0, lr, ror #8
 8012077:	00000000 	andeq	r0, r0, r0
 801207b:	44520000 	ldrbmi	r0, [r2], #-0
 801207f:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8012083:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8012087:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801208b:	0000796c 	andeq	r7, r0, ip, ror #18
 801208f:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8012093:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 801209f:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80120a3:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80120b3:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80120c3:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 80120c7:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80120cb:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 80120cf:	00000072 	andeq	r0, r0, r2, ror r0
 80120d3:	00000000 	andeq	r0, r0, r0
 80120d7:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

080120e9 <s_Output>:
 80120e9:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80120f5:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8012101:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8012105:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8012109:	00000000 	andeq	r0, r0, r0
 801210d:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8012111:	0000006c 	andeq	r0, r0, ip, rrx
 8012115:	00000000 	andeq	r0, r0, r0
 8012119:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801211d:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8012121:	00000000 	andeq	r0, r0, r0
 8012125:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8012131:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8012135:	00006769 	andeq	r6, r0, r9, ror #14
 8012139:	00000000 	andeq	r0, r0, r0
 801213d:	70657453 	rsbvc	r7, r5, r3, asr r4
 8012141:	00726570 	rsbseq	r6, r2, r0, ror r5
 8012145:	00000000 	andeq	r0, r0, r0
 8012149:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801214d:	00007265 	andeq	r7, r0, r5, ror #4
 8012151:	00000000 	andeq	r0, r0, r0
 8012155:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8012159:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801215d:	00000000 	andeq	r0, r0, r0
 8012161:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8012165:	00006c61 	andeq	r6, r0, r1, ror #24
 8012169:	00000000 	andeq	r0, r0, r0
 801216d:	20424752 	subcs	r4, r2, r2, asr r7
 8012171:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8012175:	0000006c 	andeq	r0, r0, ip, rrx
 8012179:	 	stc	0, cr0, [r0, #-0]

0801217c <RemoteConfig::s_GET>:
 801217c:	08008ded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, pc}
 8012180:	00000000 	andeq	r0, r0, r0
 8012184:	08011fed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip}
 8012188:	00000008 	andeq	r0, r0, r8
 801218c:	080082e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, pc}
 8012190:	00000000 	andeq	r0, r0, r0
 8012194:	08011ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8012198:	00000005 	andeq	r0, r0, r5
 801219c:	080082e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, pc}
 80121a0:	00000000 	andeq	r0, r0, r0
 80121a4:	08011ffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80121a8:	00000006 	andeq	r0, r0, r6
 80121ac:	08008495 	stmdaeq	r0, {r0, r2, r4, r7, sl, pc}
 80121b0:	00000000 	andeq	r0, r0, r0
 80121b4:	08012003 	stmdaeq	r1, {r0, r1, sp}
 80121b8:	00000007 	andeq	r0, r0, r7
 80121bc:	08008455 	stmdaeq	r0, {r0, r2, r4, r6, sl, pc}
 80121c0:	00000000 	andeq	r0, r0, r0
 80121c4:	0801200b 	stmdaeq	r1, {r0, r1, r3, sp}
 80121c8:	00000008 	andeq	r0, r0, r8
 80121cc:	080083b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, pc}
 80121d0:	00000000 	andeq	r0, r0, r0
 80121d4:	08011fd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, fp, ip}
 80121d8:	00000008 	andeq	r0, r0, r8
 80121dc:	08008769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, pc}
 80121e0:	00000000 	andeq	r0, r0, r0
 80121e4:	08012014 	stmdaeq	r1, {r2, r4, sp}
 80121e8:	00010004 	andeq	r0, r1, r4
 80121ec:	08008405 	stmdaeq	r0, {r0, r2, sl, pc}
 80121f0:	00000000 	andeq	r0, r0, r0
 80121f4:	08011fcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, fp, ip}
 80121f8:	00000005 	andeq	r0, r0, r5
 80121fc:	08008add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, pc}
 8012200:	00000000 	andeq	r0, r0, r0
 8012204:	08012019 	stmdaeq	r1, {r0, r3, r4, sp}
 8012208:	00000009 	andeq	r0, r0, r9

0801220c <RemoteConfig::s_SET>:
 801220c:	08008541 	stmdaeq	r0, {r0, r6, r8, sl, pc}
 8012210:	00000000 	andeq	r0, r0, r0
 8012214:	08011fcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, fp, ip}
 8012218:	00010005 	andeq	r0, r1, r5
 801221c:	08008519 	stmdaeq	r0, {r0, r3, r4, r8, sl, pc}
 8012220:	00000000 	andeq	r0, r0, r0
 8012224:	08011fd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, fp, ip}
 8012228:	00010008 	andeq	r0, r1, r8
 801222c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8012230:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8012234:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8012238:	0a64253d 	beq	991b734 <__exidx_end+0x1907b18>
 801223c:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8012240:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012244:	002c2273 	eoreq	r2, ip, r3, ror r2
 8012248:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801224c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8012250:	6f626552 	svcvs	0x00626552
 8012254:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8012258:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 801225c:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8012260:	6f6f6265 	svcvs	0x006f6265
 8012264:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8012268:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 801226c:	6f637200 	svcvs	0x00637200
 8012270:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012274:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012278:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 801227c:	6b726f77 	blvs	9cae060 <__exidx_end+0x1c9a444>
 8012280:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012284:	73696400 	cmnvc	r9, #0, 8
 8012288:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801228c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012290:	33316500 	teqcc	r1, #0, 10
 8012294:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8012298:	61700074 	cmnvs	r0, r4, ror r0
 801229c:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80122a0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80122a4:	00000000 	andeq	r0, r0, r0

080122a8 <RemoteConfig::s_TXT>:
 80122a8:	08008771 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, pc}
 80122ac:	00000000 	andeq	r0, r0, r0
 80122b0:	08008a0d 	stmdaeq	r0, {r0, r2, r3, r9, fp, pc}
 80122b4:	00000000 	andeq	r0, r0, r0
 80122b8:	0801226d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sp}
 80122bc:	0000000b 	andeq	r0, r0, fp
 80122c0:	0000000c 	andeq	r0, r0, ip
 80122c4:	0800879d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, pc}
 80122c8:	00000000 	andeq	r0, r0, r0
 80122cc:	08008a3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, pc}
 80122d0:	00000000 	andeq	r0, r0, r0
 80122d4:	08012279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sp}
 80122d8:	0000000b 	andeq	r0, r0, fp
 80122dc:	00000000 	andeq	r0, r0, r0
 80122e0:	08008821 	stmdaeq	r0, {r0, r5, fp, pc}
 80122e4:	00000000 	andeq	r0, r0, r0
 80122e8:	08008ab5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, fp, pc}
 80122ec:	00000000 	andeq	r0, r0, r0
 80122f0:	08012285 	stmdaeq	r1, {r0, r2, r7, r9, sp}
 80122f4:	0000000b 	andeq	r0, r0, fp
 80122f8:	0000000f 	andeq	r0, r0, pc
 80122fc:	080087c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, pc}
 8012300:	00000000 	andeq	r0, r0, r0
 8012304:	08008a65 	stmdaeq	r0, {r0, r2, r5, r6, r9, fp, pc}
 8012308:	00000000 	andeq	r0, r0, r0
 801230c:	08012291 	stmdaeq	r1, {r0, r4, r7, r9, sp}
 8012310:	00000008 	andeq	r0, r0, r8
 8012314:	00000004 	andeq	r0, r0, r4
 8012318:	080087f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, pc}
 801231c:	00000000 	andeq	r0, r0, r0
 8012320:	08008a8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, pc}
 8012324:	00000000 	andeq	r0, r0, r0
 8012328:	0801229a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sp}
 801232c:	0000000a 	andeq	r0, r0, sl
 8012330:	00000002 	andeq	r0, r0, r2
 8012334:	00544547 	subseq	r4, r4, r7, asr #10
 8012338:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 801233c:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8012340:	0a200050 	beq	8812488 <__exidx_end+0x7fe86c>
 8012344:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8012348:	43003a00 	movwmi	r3, #2560	; 0xa00
 801234c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012350:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8012354:	00657079 	rsbeq	r7, r5, r9, ror r0
 8012358:	61003b20 	tstvs	r0, r0, lsr #22
 801235c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8012360:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8012364:	6a2f6e6f 	bvs	8bedd28 <__exidx_end+0xbda10c>
 8012368:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 801236c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8012370:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8012374:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8012378:	2f006874 	svccs	0x00006874
 801237c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8012380:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8012384:	2f006c6d 	svccs	0x00006c6d
 8012388:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801238c:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8012390:	2f007373 	svccs	0x00007373
 8012394:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8012398:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 801239c:	736a2f00 	cmnvc	sl, #0, 30
 80123a0:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80123a4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80123a8:	72657600 	rsbvc	r7, r5, #0, 12
 80123ac:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80123b0:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80123b4:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80123b8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80123bc:	0079616c 	rsbseq	r6, r9, ip, ror #2
 80123c0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80123c4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80123c8:	6a2f0079 	bvs	8bd25b4 <__exidx_end+0xbbe998>
 80123cc:	2f6e6f73 	svccs	0x006e6f73
 80123d0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80123d4:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 80123d8:	6f6f6265 	svcvs	0x006f6265
 80123dc:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 80123e0:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 80123e4:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 80123e8:	434f4421 	movtmi	r4, #62497	; 0xf421
 80123ec:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 80123f0:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 80123f4:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80123f8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80123fc:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8012400:	3e646165 	powccsz	f6, f4, f5
 8012404:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8012408:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 801240c:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8012410:	742f3c74 	strtvc	r3, [pc], #-3188	; 8012418 <RemoteConfig::s_TXT+0x170>
 8012414:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8012418:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801241c:	3e646165 	powccsz	f6, f4, f5
 8012420:	6f623c0a 	svcvs	0x00623c0a
 8012424:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8012428:	4f3e3168 	svcmi	0x003e3168
 801242c:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012430:	2f3c3e31 	svccs	0x003c3e31
 8012434:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012438:	2f3c0a3e 	svccs	0x003c0a3e
 801243c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012440:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8012444:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8012448:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801244c:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8012450:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8012454:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8012458:	71655200 	cmnvc	r5, r0, lsl #4
 801245c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8012460:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8012464:	20797469 	rsbscs	r7, r9, r9, ror #8
 8012468:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 801246c:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8012470:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8012474:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8012478:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 801247c:	6f542049 	svcvs	0x00542049
 8012480:	6f4c206f 	svcvs	0x004c206f
 8012484:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8012488:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 801248c:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8012490:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8012494:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8012498:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 801249c:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80124a0:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80124a4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80124a8:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80124ac:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80124b0:	00646574 	rsbeq	r6, r4, r4, ror r5
 80124b4:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80124b8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80124bc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80124c0:	70707553 	rsbsvc	r7, r0, r3, asr r5
 80124c4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 80124c8:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 80124cc:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 80124d0:	7245206e 	subvc	r2, r5, #110	; 0x6e
 80124d4:	00726f72 	rsbseq	r6, r2, r2, ror pc
 80124d8:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 80124dc:	434f4421 	movtmi	r4, #62497	; 0xf421
 80124e0:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 80124e4:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 80124e8:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80124ec:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80124f0:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 80124f4:	3e646165 	powccsz	f6, f4, f5
 80124f8:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80124fc:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8012500:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8012504:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012508:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801250c:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8012510:	0a3e6461 	beq	8fab69c <__exidx_end+0xf97a80>
 8012514:	646f623c 	strbtvs	r6, [pc], #-572	; 801251c <RemoteConfig::s_TXT+0x274>
 8012518:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801251c:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8012520:	31682f3c 	cmncc	r8, ip, lsr pc
 8012524:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8012528:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801252c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012530:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012534:	5448000a 	strbpl	r0, [r8], #-10
 8012538:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 801253c:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8012540:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8012544:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8012548:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 801254c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8012550:	6f430a0d 	svcvs	0x00430a0d
 8012554:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8012558:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 801255c:	203a6570 	eorscs	r6, sl, r0, ror r5
 8012560:	0a0d7325 	beq	836f1fc <__exidx_end+0x35b5e0>
 8012564:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8012568:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 801256c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8012570:	203a6874 	eorscs	r6, sl, r4, ror r8
 8012574:	0a0d7525 	beq	836fa10 <__exidx_end+0x35bdf4>
 8012578:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 801257c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8012580:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8012584:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8012588:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 801258c:	4447000a 	strbmi	r0, [r7], #-10
 8012590:	31463233 	cmpcc	r6, r3, lsr r2
 8012594:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
	...

08012599 <contentType>:
 8012599:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801259d:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80125a1:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80125b9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80125bd:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80125d9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80125dd:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80125e1:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80125e5:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80125f9:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80125fd:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8012601:	2f6e6f69 	svccs	0x006e6f69
 8012605:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08012619 <RemoteConfigConst::PARAMS_DISABLE>:
 8012619:	61736964 	cmnvs	r3, r4, ror #18
 801261d:	00656c62 	rsbeq	r6, r5, r2, ror #24

08012621 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8012621:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8012625:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8012629:	00747874 	rsbseq	r7, r4, r4, ror r8

0801262d <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801262d:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012631:	5f79616c 	svcpl	0x0079616c
 8012635:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801263a <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801263a:	61736964 	cmnvs	r3, r4, ror #18
 801263e:	5f656c62 	svcpl	0x00656c62
 8012642:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8012646:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08012648 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8012648:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801264c:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8012650:	6f6f6265 	svcvs	0x006f6265
 8012654:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08012656 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8012656:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801265a:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80120f6 <s_Output+0xd>
 801265e:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8012662:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08012664 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8012664:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8012668:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801266c:	6f746361 	svcvs	0x00746361
 8012670:	7b007972 	blvc	8030c40 <__exidx_end+0x1d024>
 8012674:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8012678:	7b3a2274 	blvc	8e9b050 <__exidx_end+0xe87434>
 801267c:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8012680:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8012684:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012688:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801268c:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8012690:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012694:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012698:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801269c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80126a0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80126a4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80126a8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80126ac:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80126b0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80126b4:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80126b8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80126bc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80126c0:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80126c4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80126c8:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80126cc:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80126d0:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80126d4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80126d8:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80126dc:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80126e0:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80126e4:	616f6222 	cmnvs	pc, r2, lsr #4
 80126e8:	3a226472 	bcc	88ab8b8 <__exidx_end+0x897c9c>
 80126ec:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80126f0:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80126f4:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80126f8:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80126fc:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8012700:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8012704:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8012708:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801270c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8012710:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8012714:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8012718:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801271c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8012720:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8012724:	7b000a7d 	blvc	8015120 <__exidx_end+0x1504>
 8012728:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801272c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012730:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8012734:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8012738:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801273c:	7b3a2273 	blvc	8e9b110 <__exidx_end+0xe874f4>
 8012740:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8012744:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8012748:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 801274c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8012750:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8012754:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8012758:	72617022 	rsbvc	r7, r1, #34	; 0x22
 801275c:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8012760:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8012764:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8012768:	72542058 	subsvc	r2, r4, #88	; 0x58
 801276c:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8012770:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8012774:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8012778:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801277c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012780:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8012784:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8012788:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 801278c:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 8012790:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 8012794:	6b726f77 	blvs	9cae578 <__exidx_end+0x1c9a95c>
 8012798:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801279c:	4e223a22 	vmulmi.f32	s6, s4, s5
 80127a0:	6f777465 	svcvs	0x00777465
 80127a4:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 80127a8:	6f637222 	svcvs	0x00637222
 80127ac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80127b0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80127b4:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 80127b8:	746f6d65 	strbtvc	r6, [pc], #-3429	; 80127c0 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 80127bc:	6f632065 	svcvs	0x00632065
 80127c0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80127c4:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 80127c8:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80127cc:	 	stccc	13, cr7, [r0], {125}	; 0x7d

080127cf <index_html>:
 80127cf:	4f44213c 	svcmi	0x0044213c
 80127d3:	50595443 	subspl	r5, r9, r3, asr #8
 80127d7:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 80127db:	0a3e6c6d 	beq	8fad997 <__exidx_end+0xf99d7b>
 80127df:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 80127e3:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80127e7:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80127eb:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 80127ef:	6b6e696c 	blvs	9bacda7 <__exidx_end+0x1b9918b>
 80127f3:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80127f7:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80127fb:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80127ff:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8012803:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8012807:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801280b:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801280f:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8012813:	20227373 	eorcs	r7, r2, r3, ror r3
 8012817:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801281b:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801281f:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8012823:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8012827:	0a3e656c 	beq	8fabddf <__exidx_end+0xf981c3>
 801282b:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801282f:	0a3e6461 	beq	8fab9bb <__exidx_end+0xf97d9f>
 8012833:	646f623c 	strbtvs	r6, [pc], #-572	; 801283b <index_html+0x6c>
 8012837:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801283b:	6165683c 	cmnvs	r5, ip, lsr r8
 801283f:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8012843:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8012847:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 801284b:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801284f:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8012853:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012857:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801285b:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801285f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8012863:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8012867:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 801286b:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801286f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8012873:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012877:	6f746365 	svcvs	0x00746365
 801287b:	20227972 	eorcs	r7, r2, r2, ror r9
 801287f:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8012883:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8012887:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 801288b:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801288f:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8012893:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8012897:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 801289b:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801289f:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80128a3:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80128a7:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80128ab:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80128af:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80128b3:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80128b7:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80128bb:	20227478 	eorcs	r7, r2, r8, ror r4
 80128bf:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80128c3:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 80128c7:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 80128cb:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 80128cf:	0a3e656c 	beq	8fabe87 <__exidx_end+0xf9826b>
 80128d3:	6f663c09 	svcvs	0x00663c09
 80128d7:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 80128db:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 80128df:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80128e3:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 80128e7:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80128eb:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 80128ef:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80128f3:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 80128f7:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80128fb:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80128ff:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8012903:	20747069 	rsbscs	r7, r4, r9, rrx
 8012907:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801290b:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801290f:	6a2e7865 	bvs	8bb0aab <__exidx_end+0xb9ce8f>
 8012913:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8012917:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 801291b:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801291f:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8012923:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8012927:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801292b:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801292f:	 	svcvs	0x0062000a

08012931 <styles_css>:
 8012931:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012935:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012939:	63616220 	cmnvs	r1, #32, 4
 801293d:	6f72676b 	svcvs	0x0072676b
 8012941:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8012945:	6f6c6f63 	svcvs	0x006c6f63
 8012949:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801294d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012951:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8012955:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8012959:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801295d:	6f6c6f63 	svcvs	0x006c6f63
 8012961:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012965:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012969:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801296d:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8012971:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8012975:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012979:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801297d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012981:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012985:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012989:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801298d:	0a3b7865 	beq	8ef0b29 <__exidx_end+0xedcf0d>
 8012991:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8012995:	0a7b2069 	beq	9edab41 <__exidx_end+0x1ec6f25>
 8012999:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801299d:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80129a1:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80129a5:	6f6e203a 	svcvs	0x006e203a
 80129a9:	0a3b656e 	beq	8eebf69 <__exidx_end+0xed834d>
 80129ad:	616d2020 	cmnvs	sp, r0, lsr #32
 80129b1:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80129b5:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80129b9:	70352078 	eorsvc	r2, r5, r8, ror r0
 80129bd:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80129c1:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80129c5:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80129c9:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80129cd:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80129d1:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80129d5:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80129d9:	0a3b7865 	beq	8ef0b75 <__exidx_end+0xedcf59>
 80129dd:	6f622020 	svcvs	0x00622020
 80129e1:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80129e5:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80129e9:	3a737569 	bcc	9ceff95 <__exidx_end+0x1cdc379>
 80129ed:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80129f1:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80129f5:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80129f9:	203a7265 	eorscs	r7, sl, r5, ror #4
 80129fd:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012a01:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012a05:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012a09:	0a3b7870 	beq	8ef0bd1 <__exidx_end+0xedcfb5>
 8012a0d:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8012a11:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012a15:	0a7b2072 	beq	9edabe5 <__exidx_end+0x1ec6fc9>
 8012a19:	69642020 	stmdbvs	r4!, {r5, sp}^
 8012a1d:	616c7073 	smcvs	50947	; 0xc703
 8012a21:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8012a25:	3b78656c 	blcc	9e2bfdd <__exidx_end+0x1e183c1>
 8012a29:	6a20200a 	bvs	881aa59 <__exidx_end+0x806e3d>
 8012a2d:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8012a31:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8012a35:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012a39:	203a746e 	eorscs	r7, sl, lr, ror #8
 8012a3d:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8012a41:	0a3b7265 	beq	8eef3dd <__exidx_end+0xedb7c1>
 8012a45:	6f622020 	svcvs	0x00622020
 8012a49:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012a4d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012a51:	3a737569 	bcc	9cefffd <__exidx_end+0x1cdc3e1>
 8012a55:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012a59:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012a5d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012a61:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012a65:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012a69:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012a6d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012a71:	0a3b7870 	beq	8ef0c39 <__exidx_end+0xedd01d>
 8012a75:	 	stmdahi	r0, {r0, r2, r3, r4, r5, r6, r9, fp}

08012a78 <HttpContent>:
 8012a78:	08012388 	stmdaeq	r1, {r3, r7, r8, r9, sp}
 8012a7c:	08012931 	stmdaeq	r1, {r0, r4, r5, r8, fp, sp}
 8012a80:	08012394 	stmdaeq	r1, {r2, r4, r7, r8, r9, sp}
 8012a84:	08012a90 	stmdaeq	r1, {r4, r7, r9, fp, sp}
 8012a88:	0801237c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sp}
 8012a8c:	080127cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, sp}

08012a90 <index_js>:
 8012a90:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012a94:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012a98:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012a9c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012aa0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012aa4:	6a284e4f 	bvs	8a263e8 <__exidx_end+0xa127cc>
 8012aa8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012aac:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012ab0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012ab4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8012ab8:	6a2f273d 	bvs	8bdc7b4 <__exidx_end+0xbc8b98>
 8012abc:	2f6e6f73 	svccs	0x006e6f73
 8012ac0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8012ac4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012ac8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012acc:	20797274 	rsbscs	r7, r9, r4, ror r2
 8012ad0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012ad4:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8012ad8:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8012adc:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8012ae0:	20746961 	rsbscs	r6, r4, r1, ror #18
 8012ae4:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8012ae8:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8012aec:	0a3b296c 	beq	8edd0a4 <__exidx_end+0xec9488>
 8012af0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012af4:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8012af8:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8012afc:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012b00:	73657220 	cmnvc	r5, #32, 4
 8012b04:	6f736a2e 	svcvs	0x00736a2e
 8012b08:	3b29286e 	blcc	8a5ccc8 <__exidx_end+0xa490ac>
 8012b0c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012b10:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8012b14:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8012b18:	6f727265 	svcvs	0x00727265
 8012b1c:	7b202972 	blvc	881d0ec <__exidx_end+0x8094d0>
 8012b20:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012b24:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8012b28:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8012b2c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8012b30:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8012b34:	3b29726f 	blcc	8a6f4f8 <__exidx_end+0xa5b8dc>
 8012b38:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012b3c:	0a0a7d0a 	beq	82b1f6c <__exidx_end+0x29e350>
 8012b40:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012b44:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012b48:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012b4c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8012b50:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012b54:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012b58:	20292874 	eorcs	r2, r9, r4, ror r8
 8012b5c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012b60:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012b64:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012b68:	6177613d 	cmnvs	r7, sp, lsr r1
 8012b6c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012b70:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012b74:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012b78:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012b7c:	0a3b2927 	beq	8edd020 <__exidx_end+0xec9404>
 8012b80:	6f640909 	svcvs	0x00640909
 8012b84:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012b88:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012b8c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012b90:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012b94:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012b98:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012b9c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8012ba0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012ba4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012ba8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012bac:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8012bb0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012bb4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8012bb8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8012bbc:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8012bc0:	2b656d61 	blcs	996e14c <__exidx_end+0x195a530>
 8012bc4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012b44 <index_js+0xb4>
 8012bc8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012bcc:	2b223e69 	blcs	88a2578 <__exidx_end+0x88e95c>
 8012bd0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012bd4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012bd8:	6f6e2e74 	svcvs	0x006e2e74
 8012bdc:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8012be0:	2b657079 	blcs	996edcc <__exidx_end+0x195b1b0>
 8012be4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012b64 <index_js+0xd4>
 8012be8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012bec:	2b223e69 	blcs	88a2598 <__exidx_end+0x88e97c>
 8012bf0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012bf4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012bf8:	6f6e2e74 	svcvs	0x006e2e74
 8012bfc:	702e6564 	eorvc	r6, lr, r4, ror #10
 8012c00:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8012c04:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012c08:	2f3c222b 	svccs	0x003c222b
 8012c0c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012c10:	0a7d0a3b 	beq	9f55504 <__exidx_end+0x1f418e8>
 8012c14:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8012c18:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8012c1c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012c20:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012c24:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012c28:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012c2c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012c30:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8012c34:	0a7b2029 	beq	9edace0 <__exidx_end+0x1ec70c4>
 8012c38:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012c3c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8012c40:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012c44:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012c48:	6177613d 	cmnvs	r7, sp, lsr r1
 8012c4c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012c50:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012c54:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012c58:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012c5c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012c60:	3b292779 	blcc	8a5ca4c <__exidx_end+0xa48e30>
 8012c64:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012c68:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012c6c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012c70:	0a22223d 	beq	889b56c <__exidx_end+0x887950>
 8012c74:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012c78:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8012c7c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8012c80:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8012c84:	6a624f3d 	bvs	98a6980 <__exidx_end+0x1892d64>
 8012c88:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8012c8c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8012c90:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8012c94:	6f746365 	svcvs	0x00746365
 8012c98:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8012c9c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012ca0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8012ca4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012ca8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8012cac:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8012cb0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8012cb4:	6145726f 	cmpvs	r5, pc, ror #4
 8012cb8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8012cbc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012cc0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012cc4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8012cc8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012ccc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012cd0:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012cd4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012cd8:	203d2065 	eorscs	r2, sp, r5, rrx
 8012cdc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012ce0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012ce4:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012ce8:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8012cec:	6b5b5d22 	blvs	96ea17c <__exidx_end+0x16d6560>
 8012cf0:	3b5d7965 	blcc	977128c <__exidx_end+0x175d670>
 8012cf4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012cf8:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8012cfc:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012d00:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012d04:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012d08:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8012d0c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012d10:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012d14:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012d18:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012d1c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012d20:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012d24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012d28:	0a3b223e 	beq	8edb628 <__exidx_end+0xec7a0c>
 8012d2c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012d30:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012d34:	6f640909 	svcvs	0x00640909
 8012d38:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012d3c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012d40:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012d44:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012d48:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012d4c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012d50:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012d54:	6f746365 	svcvs	0x00746365
 8012d58:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8012d5c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012d60:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012d64:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012d68:	3b6c6d74 	blcc	9b2e340 <__exidx_end+0x1b1a724>
 8012d6c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012d70:	5f746567 	svcpl	0x00746567
 8012d74:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012d78:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012d7c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012d80:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8012d84:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012d88:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8012d8c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8012d90:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012d94:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012d98:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8012d9c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8012da0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012da4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8012da8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012dac:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012db0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8012db4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012db8:	6177613d 	cmnvs	r7, sp, lsr r1
 8012dbc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012dc0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012dc4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012dc8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012dcc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012dd0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012dd4:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012dd8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8012ddc:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012de0:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012de4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012de8:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8012dec:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012df0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012df4:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012df8:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8012dfc:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012e00:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012e04:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012e08:	2b22563e 	blcs	88a8708 <__exidx_end+0x894aec>
 8012e0c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012e10:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012e14:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012e18:	2b6e6f69 	blcs	9baebc4 <__exidx_end+0x1b9afa8>
 8012e1c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012d9c <index_js+0x30c>
 8012e20:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012e24:	2b223e69 	blcs	88a27d0 <__exidx_end+0x88ebb4>
 8012e28:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012e2c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012e30:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012e34:	61642e64 	cmnvs	r4, r4, ror #28
 8012e38:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8012e3c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012e40:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012e44:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012e48:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012e4c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8012e50:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8012e54:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8012e58:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8012e5c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8012e60:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8012e64:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8012e68:	6f697372 	svcvs	0x00697372
 8012e6c:	6f622e6e 	svcvs	0x00622e6e
 8012e70:	2b647261 	blcs	992f7fc <__exidx_end+0x191bbe0>
 8012e74:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012df4 <index_js+0x364>
 8012e78:	3b223e69 	blcc	88a2824 <__exidx_end+0x88ec08>
 8012e7c:	0a0a7d0a 	beq	82b22ac <__exidx_end+0x29e690>
 8012e80:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012e84:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012e88:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012e8c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012e90:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8012e98 <index_js+0x408>
 8012e94:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8012e98:	20296c65 	eorcs	r6, r9, r5, ror #24
 8012e9c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8012ea0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8012ea4:	613d7478 	teqvs	sp, r8, ror r4
 8012ea8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012eac:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8012eb0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8012eb4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8012eb8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012ebc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012ec0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012ec4:	3b22223d 	blcc	889b7c0 <__exidx_end+0x887ba4>
 8012ec8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8012ecc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8012ed0:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8012ed4:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8012ed8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012edc:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012ee0:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012ee4:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8012ee8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012eec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012ef0:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012ef4:	0a7b2029 	beq	9edafa0 <__exidx_end+0x1ec7384>
 8012ef8:	61760909 	cmnvs	r6, r9, lsl #18
 8012efc:	61762072 	cmnvs	r6, r2, ror r0
 8012f00:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012f04:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8012f08:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012f0c:	6b5b5d6c 	blvs	96ea4c4 <__exidx_end+0x16d68a8>
 8012f10:	3b5d7965 	blcc	97714ac <__exidx_end+0x175d890>
 8012f14:	2009090a 	andcs	r0, r9, sl, lsl #18
 8012f18:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012f1c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012f20:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012f24:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012f28:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012f2c:	2f3c222b 	svccs	0x003c222b
 8012f30:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012f34:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012f38:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012f3c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012f40:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012f44:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8012f4c <index_js+0x4bc>
 8012f48:	3b223e72 	blcc	88a2918 <__exidx_end+0x88ecfc>
 8012f4c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012f50:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012f54:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8012f58:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8012f5c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012f60:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012f64:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8012f68:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8012f6c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012f70:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012f74:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012f78:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012f7c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8012f80:	0a3b6c6d 	beq	8eee13c <__exidx_end+0xeda520>
 8012f84:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8012f88:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012f8c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012f90:	3b292874 	blcc	8a5d168 <__exidx_end+0xa4954c>
 8012f94:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8012f98:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8012f9c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012fa0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012fa4:	0a3b2928 	beq	8edd44c <__exidx_end+0xec9830>
 8012fa8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012fac:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8012fb0:	6f697372 	svcvs	0x00697372
 8012fb4:	3b29286e 	blcc	8a5d174 <__exidx_end+0xa49558>
 8012fb8:	3332000a 	teqcc	r2, #10
 8012fbc:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8012fc0:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8012fc4:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8012fc8:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8012fcc:	30007325 	andcc	r7, r0, r5, lsr #6
 8012fd0:	6f4e202e 	svcvs	0x004e202e
 8012fd4:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8012fd8:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8012fdc:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8012fe0:	202c6465 	eorcs	r6, ip, r5, ror #8
 8012fe4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8012fe8:	6f687320 	svcvs	0x00687320
 8012fec:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8012ff0:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8012ff4:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8012ff8:	000a216e 	andeq	r2, sl, lr, ror #2
 8012ffc:	00505448 	subseq	r5, r0, r8, asr #8
 8013000:	0050544c 	subseq	r5, r0, ip, asr #8
 8013004:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8013008:	000a6567 	andeq	r6, sl, r7, ror #10
 801300c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8013010:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8013014:	203a2065 	eorscs	r2, sl, r5, rrx
 8013018:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801301c:	20000a64 	andcs	r0, r0, r4, ror #20
 8013020:	20444943 	subcs	r4, r4, r3, asr #18
 8013024:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013028:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801302c:	20000a73 	andcs	r0, r0, r3, ror sl
 8013030:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8013034:	000a7475 	andeq	r7, sl, r5, ror r4
 8013038:	6f502020 	svcvs	0x00502020
 801303c:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8013040:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8013044:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8013048:	20657372 	rsbcs	r7, r5, r2, ror r3
 801304c:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8013050:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8013054:	20000a5d 	andcs	r0, r0, sp, asr sl
 8013058:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 801305c:	20000a74 	andcs	r0, r0, r4, ror sl
 8013060:	726f5020 	rsbvc	r5, pc, #32
 8013064:	32252074 	eorcc	r2, r5, #116	; 0x74
 8013068:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 801306c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8013070:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8013074:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8013078:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801307c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8013080:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8013084:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013088:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 801308c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8013090:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8013094:	000a6465 	andeq	r6, sl, r5, ror #8

08013098 <E131MsgConst::START>:
 8013098:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801309c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80130a0:	43417320 	movtmi	r7, #4896	; 0x1320
 80130a4:	3145204e 	cmpcc	r5, lr, asr #32
 80130a8:	0031332e 	eorseq	r3, r1, lr, lsr #6

080130ac <E131MsgConst::PARAMS>:
 80130ac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80130b0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80130b4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80130b8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80130bc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80130c0:	 	movwvc	r3, #307	; 0x133

080130c3 <E131MsgConst::STARTED>:
 80130c3:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80130c7:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80130cb:	73203133 			; <UNDEFINED> instruction: 0x73203133
 80130cf:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80130d3:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 80130d7:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 80130db:	0066666f 	rsbeq	r6, r6, pc, ror #12
 80130df:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80130e3:	6b636162 	blvs	98eb673 <__exidx_end+0x18d7a57>
 80130e7:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 80130eb:	6f007475 	svcvs	0x00007475
 80130ef:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 80130f3:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 80130f7:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 80130fb:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 80130ff:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8013103:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8013107:	754f2058 	strbvc	r2, [pc, #-88]	; 80130b7 <E131MsgConst::PARAMS+0xb>
 801310b:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 801310f:	584d4400 	stmdapl	sp, {sl, lr}^
 8013113:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8013117:	00007475 	andeq	r7, r0, r5, ror r4
	...

0801311c <CSWTCH.56>:
 801311c:	080130d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, ip, sp}
 8013120:	080130db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, ip, sp}
 8013124:	080123ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sp}
 8013128:	080130df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, ip, sp}

0801312c <E131ParamsConst::PRIORITY>:
 801312c:	6f697270 	svcvs	0x00697270
 8013130:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8013134:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013138:	00615f74 	rsbeq	r5, r1, r4, ror pc
	...

0801313e <E131ParamsConst::FILE_NAME>:
 801313e:	31333165 	teqcc	r3, r5, ror #2
 8013142:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08013147 <E117Const::ACN_PACKET_IDENTIFIER>:
 8013147:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 801314b:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 801314f:	00000037 	andeq	r0, r0, r7, lsr r0

08013153 <E131BridgeConst::VERSION>:
 8013153:	30251901 	eorcc	r1, r5, r1, lsl #18
 8013157:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 801315b:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 801315f:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8013163:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8013167:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 801316b:	30252d78 	eorcc	r2, r5, r8, ror sp
 801316f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8013173:	30257832 	eorcc	r7, r5, r2, lsr r8
 8013177:	30257832 	eorcc	r7, r5, r2, lsr r8
 801317b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801317f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8013183:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 8013187:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 801318b:	0a646e65 	beq	992eb27 <__exidx_end+0x191af0b>
 801318f:	72422000 	subvc	r2, r2, #0
 8013193:	206b6165 	rsbcs	r6, fp, r5, ror #2
 8013197:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801319b:	3a202020 	bcc	881b223 <__exidx_end+0x807607>
 801319f:	0a752520 	beq	9d5c627 <__exidx_end+0x1d48a0b>
 80131a3:	414d2000 	mrsmi	r2, (UNDEF: 77)
 80131a7:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 80131ab:	2020656d 	eorcs	r6, r0, sp, ror #10
 80131af:	3a202020 	bcc	881b237 <__exidx_end+0x80761b>
 80131b3:	0a752520 	beq	9d5c63b <__exidx_end+0x1d48a1f>
 80131b7:	65522000 	ldrbvs	r2, [r2, #-0]
 80131bb:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 80131bf:	61722068 	cmnvs	r2, r8, rrx
 80131c3:	3a206574 	bcc	882c79b <__exidx_end+0x818b7f>
 80131c7:	0a752520 	beq	9d5c64f <__exidx_end+0x1d48a33>
 80131cb:	6c532000 	mravs	r2, r3, acc0
 80131cf:	2073746f 	rsbscs	r7, r3, pc, ror #8
 80131d3:	20202020 	eorcs	r2, r0, r0, lsr #32
 80131d7:	3a202020 	bcc	881b25f <__exidx_end+0x807643>
 80131db:	0a752520 	beq	9d5c663 <__exidx_end+0x1d48a47>
	...

080131e0 <vtable for DmxSend>:
	...
 80131e8:	0800ac95 	stmdaeq	r0, {r0, r2, r4, r7, sl, fp, sp, pc}
 80131ec:	0800ad7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, sp, pc}
 80131f0:	0800ac99 	stmdaeq	r0, {r0, r3, r4, r7, sl, fp, sp, pc}
 80131f4:	0800acc9 	stmdaeq	r0, {r0, r3, r6, r7, sl, fp, sp, pc}
 80131f8:	0800acfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 80131fc:	0800ad0d 	stmdaeq	r0, {r0, r2, r3, r8, sl, fp, sp, pc}
 8013200:	0800ad19 	stmdaeq	r0, {r0, r3, r4, r8, sl, fp, sp, pc}
 8013204:	0800ad25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, sp, pc}
 8013208:	0800edad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, sp, lr, pc}
 801320c:	0800eda3 	stmdaeq	r0, {r0, r1, r5, r7, r8, sl, fp, sp, lr, pc}
 8013210:	0800eda7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, sl, fp, sp, lr, pc}
 8013214:	0800edb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, fp, sp, lr, pc}

08013218 <DmxParamsConst::BREAK_TIME>:
 8013218:	61657262 	cmnvs	r5, r2, ror #4
 801321c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013220:	 	movwvc	r6, #1389	; 0x56d

08013223 <DmxParamsConst::SLOTS_COUNT>:
 8013223:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801322b <DmxParamsConst::SLOTS_COUNT+0x8>
 8013227:	6f635f73 	svcvs	0x00635f73
 801322b:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801322f <DmxParamsConst::REFRESH_RATE>:
 801322f:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8013233:	5f687365 	svcpl	0x00687365
 8013237:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

0801323c <DmxParamsConst::MAB_TIME>:
 801323c:	5f62616d 	svcpl	0x0062616d
 8013240:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08013245 <DmxParamsConst::FILE_NAME>:
 8013245:	61726170 	cmnvs	r2, r0, ror r1
 8013249:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 801324d:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
 8013251:	625f7063 	subsvs	r7, pc, #99	; 0x63
 8013255:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
 8013259:	6f74203a 	svcvs	0x0074203a
 801325d:	616d206f 	cmnvs	sp, pc, rrx
 8013261:	6320796e 			; <UNDEFINED> instruction: 0x6320796e
 8013265:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
 8013269:	6f697463 	svcvs	0x00697463
 801326d:	6200736e 	andvs	r7, r0, #-1207959551	; 0xb8000001
 8013271:	00646e69 	rsbeq	r6, r4, r9, ror #28
 8013275:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 8013279:	000a646e 	andeq	r6, sl, lr, ror #8
 801327d:	20505241 	subscs	r5, r0, r1, asr #4
 8013281:	6b6f6f6c 	blvs	9bef039 <__exidx_end+0x1bdb41d>
 8013285:	66207075 			; <UNDEFINED> instruction: 0x66207075
 8013289:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 801328d:	3e2d2064 	cdpcc	0, 2, cr2, cr13, cr4, {3}
 8013291:	66656420 	strbtvs	r6, [r5], -r0, lsr #8
 8013295:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8013299:	74616720 	strbtvc	r6, [r1], #-1824	; 0xfffff8e0
 801329d:	79617765 	stmdbvc	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
 80132a1:	5241000a 	subpl	r0, r1, #10
 80132a5:	6f6c2050 	svcvs	0x006c2050
 80132a9:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 80132ad:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 80132b1:	0a64656c 	beq	992c869 <__exidx_end+0x1918c4d>
	...

080132b6 <NetworkConst::MSG_MDNS_CONFIG>:
 80132b6:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80132ba:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80132be:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80132c2:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080132c7 <NetworkConst::MSG_NETWORK_INIT>:
 80132c7:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80132cb:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80132cf:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80132d3:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80132d7:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80132db:	3135322e 	teqcc	r5, lr, lsr #4
 80132df:	63745f00 	cmnvs	r4, #0, 30
 80132e3:	6f6c2e70 	svcvs	0x006c2e70
 80132e7:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80132eb:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80132ef:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80132f3:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80132fb <NetworkConst::MSG_NETWORK_INIT+0x34>
 80132f7:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80132fb:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801249f <RemoteConfig::s_TXT+0x1f7>
 80132ff:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8013303:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8013307:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801330b:	20000a53 	andcs	r0, r0, r3, asr sl
 801330f:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8013313:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8013317:	0a676e69 	beq	99eecc3 <__exidx_end+0x19db0a7>
 801331b:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801331f:	3a20656d 	bcc	882c8db <__exidx_end+0x818cbf>
 8013323:	0a732520 	beq	9cdc7ab <__exidx_end+0x1cc8b8f>
 8013327:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801332b:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801332f:	000a7325 	andeq	r7, sl, r5, lsr #6
 8013333:	30687465 	rsbcc	r7, r8, r5, ror #8
 8013337:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801333b:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801333f:	5f656369 	svcpl	0x00656369
 8013343:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8013347:	6b726f77 	blvs	9caf12b <__exidx_end+0x1c9b50f>
 801334b:	4820000a 	stmdami	r0!, {r1, r3}
 801334f:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8013353:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8013357:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801335b:	20000a73 	andcs	r0, r0, r3, ror sl
 801335f:	614e6649 	cmpvs	lr, r9, asr #12
 8013363:	2020656d 	eorcs	r6, r0, sp, ror #10
 8013367:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801336b:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801336f:	000a7325 	andeq	r7, sl, r5, lsr #6
 8013373:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8013377:	20202074 	eorcs	r2, r0, r4, ror r0
 801337b:	3a202020 	bcc	881b403 <__exidx_end+0x8077e7>
 801337f:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8013383:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013387:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801338b:	0a64252f 	beq	991c84f <__exidx_end+0x1908c33>
 801338f:	654e2000 	strbvs	r2, [lr, #-0]
 8013393:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8013397:	2020206b 	eorcs	r2, r0, fp, rrx
 801339b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801339f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80133a3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80133a7:	20000a64 	andcs	r0, r0, r4, ror #20
 80133ab:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80133af:	20796177 	rsbscs	r6, r9, r7, ror r1
 80133b3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80133b7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80133bb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80133bf:	0a64252e 	beq	991c87f <__exidx_end+0x1908c63>
 80133c3:	72422000 	subvc	r2, r2, #0
 80133c7:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80133cb:	20747361 	rsbscs	r7, r4, r1, ror #6
 80133cf:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80133d3:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80133d7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80133db:	20000a64 	andcs	r0, r0, r4, ror #20
 80133df:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80133e3:	20202020 	eorcs	r2, r0, r0, lsr #32
 80133e7:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80133eb:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80133ef:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80133f3:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80133f7:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80133fb:	3a78322e 	bcc	9e1fcbb <__exidx_end+0x1e0c09f>
 80133ff:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8013403:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8013407:	20000a78 	andcs	r0, r0, r8, ror sl
 801340b:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801340f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013413:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013417:	000a6325 	andeq	r6, sl, r5, lsr #6
 801341b:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801341f:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8013423:	 	rsbvc	r0, r9, r0, asr r0

08013425 <NetworkParamsConst::IP_ADDRESS>:
 8013425:	615f7069 	cmpvs	pc, r9, rrx
 8013429:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801342d:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08013430 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8013430:	61666564 	cmnvs	r6, r4, ror #10
 8013434:	5f746c75 	svcpl	0x00746c75
 8013438:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801343c:	00796177 	rsbseq	r6, r9, r7, ror r1

08013440 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8013440:	70636864 	rsbvc	r6, r3, r4, ror #16
 8013444:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8013448:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8013450 <NetworkParamsConst::HOSTNAME>
 801344c:	00656d69 	rsbeq	r6, r5, r9, ror #26

08013450 <NetworkParamsConst::HOSTNAME>:
 8013450:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8013454:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013459 <NetworkParamsConst::NET_MASK>:
 8013459:	5f74656e 	svcpl	0x0074656e
 801345d:	6b73616d 	blvs	9ceba19 <__exidx_end+0x1cd7dfd>
	...

08013462 <NetworkParamsConst::USE_DHCP>:
 8013462:	5f657375 	svcpl	0x00657375
 8013466:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801346b <NetworkParamsConst::FILE_NAME>:
 801346b:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801346f:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8013473:	00747874 	rsbseq	r7, r4, r4, ror r8
 8013477:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 801347b:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 801347f:	61747320 	cmnvs	r4, r0, lsr #6
 8013483:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8013487:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801348b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801348f:	252f6425 	strcs	r6, [pc, #-1061]!	; 8013072 <index_js+0x5e2>
 8013493:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013497:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 801349b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801349f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134a3:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80134a7:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80134ab:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134af:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80134b3:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80134b7:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80134bb:	20657261 	rsbcs	r7, r5, r1, ror #4
 80134bf:	2a2e2556 	bcs	8b9ca1f <__exidx_end+0xb88e03>
 80134c3:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 80134c7:	72205043 	eorvc	r5, r0, #67	; 0x43
 80134cb:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80134cf:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80134d3:	50434844 	subpl	r4, r3, r4, asr #16
 80134d7:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80134db:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80134df:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80134e3:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80134e7:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80134eb:	6f647475 	svcvs	0x00647475
 80134ef:	00006e77 	andeq	r6, r0, r7, ror lr
	...

080134f4 <pArray>:
 80134f4:	08013588 	stmdaeq	r1, {r3, r7, r8, sl, ip, sp}
 80134f8:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 80134fc:	08013425 	stmdaeq	r1, {r0, r2, r5, sl, ip, sp}
 8013500:	0801358e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, ip, sp}
 8013504:	08013808 	stmdaeq	r1, {r3, fp, ip, sp}
 8013508:	0801354f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sl, ip, sp}
 801350c:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 8013510:	08013450 	stmdaeq	r1, {r4, r6, sl, ip, sp}
 8013514:	0801374f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp}
 8013518:	0801375f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp}
 801351c:	0801376f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp}
 8013520:	0801377f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, ip, sp}
 8013524:	08013459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, sp}
 8013528:	080137d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, sp}
 801352c:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 8013530:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 8013534:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 8013538:	0801258d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, sp}
 801353c:	08013430 	stmdaeq	r1, {r4, r5, sl, ip, sp}
 8013540:	0801355c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, ip, sp}

08013544 <DisplayUdfParamsConst::BOARD_NAME>:
 8013544:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8013548:	616e5f64 	cmnvs	lr, r4, ror #30
 801354c:	 	tstvs	r0, sp, ror #10

0801354f <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801354f:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8013553:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8013557:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

0801355c <DisplayUdfParamsConst::DMX_DIRECTION>:
 801355c:	5f786d64 	svcpl	0x00786d64
 8013560:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013564:	6f697463 	svcvs	0x00697463
 8013568:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801356a <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801356a:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 801356e:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013572:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801300d <index_js+0x57d>
 8013576:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08013578 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8013578:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801357c:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8013580:	61636974 	smcvs	13972	; 0x3694
 8013584:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08013588 <DisplayUdfParamsConst::TITLE>:
 8013588:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 801358c:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801358e <DisplayUdfParamsConst::VERSION>:
 801358e:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013592:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08013596 <DisplayUdfParamsConst::FILE_NAME>:
 8013596:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801359a:	2e79616c 	rpwcsez	f6, f1, #4.0
 801359e:	00747874 	rsbseq	r7, r4, r4, ror r8

080135a2 <DisplayUdfParamsConst::INTENSITY>:
 80135a2:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80135a6:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80135aa:	50410079 	subpl	r0, r1, r9, ror r0
 80135ae:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80135b2:	726f5000 	rsbvc	r5, pc, #0
 80135b6:	63252074 			; <UNDEFINED> instruction: 0x63252074
 80135ba:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80135be:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80135c2:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 80135c6:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 80135ca:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 80135ce:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

080135d4 <s_aStorSize>:
 80135d4:	00000060 	andeq	r0, r0, r0, rrx
 80135d8:	00000090 	muleq	r0, r0, r0
 80135dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80135e0:	00000040 	andeq	r0, r0, r0, asr #32
 80135e4:	00000060 	andeq	r0, r0, r0, rrx
 80135e8:	00000040 	andeq	r0, r0, r0, asr #32
 80135ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80135f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80135f4:	000001e0 	andeq	r0, r0, r0, ror #3
 80135f8:	00000040 	andeq	r0, r0, r0, asr #32
 80135fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8013600:	00000060 	andeq	r0, r0, r0, rrx
 8013604:	00000030 	andeq	r0, r0, r0, lsr r0
 8013608:	00000020 	andeq	r0, r0, r0, lsr #32
 801360c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8013610:	00000030 	andeq	r0, r0, r0, lsr r0
 8013614:	00000040 	andeq	r0, r0, r0, asr #32
 8013618:	00000020 	andeq	r0, r0, r0, lsr #32
 801361c:	00000060 	andeq	r0, r0, r0, rrx
 8013620:	00000020 	andeq	r0, r0, r0, lsr #32
 8013624:	00000400 	andeq	r0, r0, r0, lsl #8
 8013628:	00000020 	andeq	r0, r0, r0, lsr #32
 801362c:	00000020 	andeq	r0, r0, r0, lsr #32
 8013630:	00000040 	andeq	r0, r0, r0, asr #32
 8013634:	00000060 	andeq	r0, r0, r0, rrx
 8013638:	00000020 	andeq	r0, r0, r0, lsr #32
 801363c:	00000020 	andeq	r0, r0, r0, lsr #32
 8013640:	000000c0 	andeq	r0, r0, r0, asr #1

08013644 <vtable for StoreDisplayUdf>:
	...
 801364c:	0800e315 	stmdaeq	r0, {r0, r2, r4, r8, r9, sp, lr, pc}
 8013650:	0800e361 	stmdaeq	r0, {r0, r5, r6, r8, r9, sp, lr, pc}
 8013654:	0800e33d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sp, lr, pc}
 8013658:	0800e319 	stmdaeq	r0, {r0, r3, r4, r8, r9, sp, lr, pc}

0801365c <vtable for StoreDmxSend>:
	...
 8013664:	0800e381 	stmdaeq	r0, {r0, r7, r8, r9, sp, lr, pc}
 8013668:	0800e3cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sp, lr, pc}
 801366c:	0800e3a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sp, lr, pc}
 8013670:	0800e385 	stmdaeq	r0, {r0, r2, r7, r8, r9, sp, lr, pc}

08013674 <vtable for StoreNetwork>:
	...
 801367c:	0800e3ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sp, lr, pc}
 8013680:	0800e4d1 	stmdaeq	r0, {r0, r4, r6, r7, sl, sp, lr, pc}
 8013684:	0800e3f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sp, lr, pc}
 8013688:	0800e4e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, sp, lr, pc}
 801368c:	0800e475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, sp, lr, pc}
 8013690:	0800e449 	stmdaeq	r0, {r0, r3, r6, sl, sp, lr, pc}
 8013694:	0800e419 	stmdaeq	r0, {r0, r3, r4, sl, sp, lr, pc}
 8013698:	0800e4a1 	stmdaeq	r0, {r0, r5, r7, sl, sp, lr, pc}
 801369c:	080082b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, pc}
 80136a0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80136a4:	00000000 	andeq	r0, r0, r0
 80136a8:	0800e3ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r8, r9, sp, lr, pc}
 80136ac:	0800e4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, sp, lr, pc}
 80136b0:	0800e499 	stmdaeq	r0, {r0, r3, r4, r7, sl, sp, lr, pc}
 80136b4:	0800e46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, sp, lr, pc}
 80136b8:	0800e441 	stmdaeq	r0, {r0, r6, sl, sp, lr, pc}
 80136bc:	0800e4c9 	stmdaeq	r0, {r0, r3, r6, r7, sl, sp, lr, pc}
 80136c0:	080082d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, pc}

080136c4 <vtable for StoreRemoteConfig>:
	...
 80136cc:	0800e51d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, sp, lr, pc}
 80136d0:	0800e569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, sp, lr, pc}
 80136d4:	0800e545 	stmdaeq	r0, {r0, r2, r6, r8, sl, sp, lr, pc}
 80136d8:	0800e521 	stmdaeq	r0, {r0, r5, r8, sl, sp, lr, pc}

080136dc <vtable for StoreE131>:
	...
 80136e4:	0800e5db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, sl, sp, lr, pc}
 80136e8:	0800e625 	stmdaeq	r0, {r0, r2, r5, r9, sl, sp, lr, pc}
 80136ec:	0800e601 	stmdaeq	r0, {r0, r9, sl, sp, lr, pc}
 80136f0:	0800e5dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, sp, lr, pc}
 80136f4:	3a434d46 	bcc	90e6c14 <__exidx_end+0x10d2ff8>
 80136f8:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 80136fc:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8013700:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8013704:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8013708:	6f742068 	svcvs	0x00742068
 801370c:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8013710:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8013714:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8013718:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801371c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8013720:	2522000a 	strcs	r0, [r2, #-10]!
 8013724:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8013728:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801372c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013730:	2264252e 	rsbcs	r2, r4, #192937984	; 0xb800000
 8013734:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8013738:	64253d73 	strtvs	r3, [r5], #-3443	; 0xfffff28d
 801373c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013740:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013744:	23000a64 	movwcs	r0, #2660	; 0xa64
 8013748:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801374c:	 	strvc	r0, [r0, #-2595]	; 0xfffff5dd

0801374f <LightSetParamsConst::UNIVERSE_PORT>:
 801374f:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013753:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013757:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801375b:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801375f:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013763:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013767:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801376b:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801376f:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013773:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013777:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801377b:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801377f:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013783:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013787:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801378b:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801378f <LightSetParamsConst::MERGE_MODE_PORT>:
 801378f:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8013793:	6f6d5f65 	svcvs	0x006d5f65
 8013797:	705f6564 	subsvc	r6, pc, r4, ror #10
 801379b:	5f74726f 	svcpl	0x0074726f
 801379f:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 80137a3:	5f656772 	svcpl	0x00656772
 80137a7:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80137ab:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80137af:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80137b3:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80137b7:	6f6d5f65 	svcvs	0x006d5f65
 80137bb:	705f6564 	subsvc	r6, pc, r4, ror #10
 80137bf:	5f74726f 	svcpl	0x0074726f
 80137c3:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 80137c7:	5f656772 	svcpl	0x00656772
 80137cb:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80137cf:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80137d3:	00645f74 	rsbeq	r5, r4, r4, ror pc

080137d7 <LightSetParamsConst::DMX_START_ADDRESS>:
 80137d7:	5f786d64 	svcpl	0x00786d64
 80137db:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80137df:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 80137e3:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80137e7:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

080137e9 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 80137e9:	61736964 	cmnvs	r3, r4, ror #18
 80137ed:	5f656c62 	svcpl	0x00656c62
 80137f1:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80137f5:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 80137f9:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8013294 <DmxParamsConst::FILE_NAME+0x4f>
 80137fd:	 	smcvs	24580	; 0x6004

080137ff <LightSetParamsConst::FAILSAFE>:
 80137ff:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8013803:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

08013808 <LightSetParamsConst::UNIVERSE>:
 8013808:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801380c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08013811 <LightSetParamsConst::DIRECTION>:
 8013811:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013815:	6f697463 	svcvs	0x00697463
 8013819:	6f705f6e 	svcvs	0x00705f6e
 801381d:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8013821:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013825:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8013829:	5f6e6f69 	svcpl	0x006e6f69
 801382d:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013831:	0000625f 	andeq	r6, r0, pc, asr r2
 8013835:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013839:	6f697463 	svcvs	0x00697463
 801383d:	6f705f6e 	svcvs	0x00705f6e
 8013841:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8013845:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013849:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801384d:	5f6e6f69 	svcpl	0x006e6f69
 8013851:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013855:	0000645f 	andeq	r6, r0, pc, asr r4
 8013859:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801385d:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8013861:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8013865:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8013869:	31485300 	mrscc	r5, (UNDEF: 120)
 801386d:	00363031 	eorseq	r3, r6, r1, lsr r0
 8013871:	31445353 	cmpcc	r4, r3, asr r3
 8013875:	00363033 	eorseq	r3, r6, r3, lsr r0
 8013879:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801387d:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8013881:	000a2964 	andeq	r2, sl, r4, ror #18
 8013885:	aaeeaa40 	bge	7bbe18d <__stack_size+0x7bbc18d>
 8013889:	 	andmi	r0, r0, lr, ror #1

0801388c <_OledFont8x6>:
 801388c:	00000040 	andeq	r0, r0, r0, asr #32
 8013890:	40000000 	andmi	r0, r0, r0
 8013894:	005f0000 	subseq	r0, pc, r0
 8013898:	00400000 	subeq	r0, r0, r0
 801389c:	00070007 	andeq	r0, r7, r7
 80138a0:	7f144000 	svcvc	0x00144000
 80138a4:	00147f14 	andseq	r7, r4, r4, lsl pc
 80138a8:	7f2a2440 	svcvc	0x002a2440
 80138ac:	4000122a 	andmi	r1, r0, sl, lsr #4
 80138b0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80138b4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80138b8:	50205649 	eorpl	r5, r0, r9, asr #12
 80138bc:	08004000 	stmdaeq	r0, {lr}
 80138c0:	00000307 	andeq	r0, r0, r7, lsl #6
 80138c4:	221c0040 	andscs	r0, ip, #64	; 0x40
 80138c8:	40000041 	andmi	r0, r0, r1, asr #32
 80138cc:	1c224100 	stfnes	f4, [r2], #-0
 80138d0:	2a400000 	bcs	90138d8 <__exidx_end+0xfffcbc>
 80138d4:	2a1c7f1c 	bcs	873354c <__exidx_end+0x71f930>
 80138d8:	08084000 	stmdaeq	r8, {lr}
 80138dc:	0008083e 	andeq	r0, r8, lr, lsr r8
 80138e0:	70800040 	addvc	r0, r0, r0, asr #32
 80138e4:	40000030 	andmi	r0, r0, r0, lsr r0
 80138e8:	08080808 	stmdaeq	r8, {r3, fp}
 80138ec:	00400008 	subeq	r0, r0, r8
 80138f0:	00606000 	rsbeq	r6, r0, r0
 80138f4:	10204000 	eorne	r4, r0, r0
 80138f8:	00020408 	andeq	r0, r2, r8, lsl #8
 80138fc:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8013900:	40003e45 	andmi	r3, r0, r5, asr #28
 8013904:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8013908:	72400000 	subvc	r0, r0, #0
 801390c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8013910:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8013914:	00334d49 	eorseq	r4, r3, r9, asr #26
 8013918:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801391c:	4000107f 	andmi	r1, r0, pc, ror r0
 8013920:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8013924:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8013928:	3149494a 	cmpcc	r9, sl, asr #18
 801392c:	21414000 	mrscs	r4, (UNDEF: 65)
 8013930:	00070911 	andeq	r0, r7, r1, lsl r9
 8013934:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8013938:	40003649 	andmi	r3, r0, r9, asr #12
 801393c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8013940:	0040001e 	subeq	r0, r0, lr, lsl r0
 8013944:	00001400 	andeq	r1, r0, r0, lsl #8
 8013948:	40004000 	andmi	r4, r0, r0
 801394c:	00000034 	andeq	r0, r0, r4, lsr r0
 8013950:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8013954:	40004122 	andmi	r4, r0, r2, lsr #2
 8013958:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801395c:	00400014 	subeq	r0, r0, r4, lsl r0
 8013960:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8013964:	01024000 	mrseq	r4, (UNDEF: 2)
 8013968:	00060959 	andeq	r0, r6, r9, asr r9
 801396c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8013970:	40004e59 	andmi	r4, r0, r9, asr lr
 8013974:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8013978:	7f40007c 	svcvc	0x0040007c
 801397c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8013980:	413e4000 	teqmi	lr, r0
 8013984:	00224141 	eoreq	r4, r2, r1, asr #2
 8013988:	41417f40 	cmpmi	r1, r0, asr #30
 801398c:	40003e41 	andmi	r3, r0, r1, asr #28
 8013990:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8013994:	7f400041 	svcvc	0x00400041
 8013998:	01090909 	tsteq	r9, r9, lsl #18
 801399c:	413e4000 	teqmi	lr, r0
 80139a0:	00735141 	rsbseq	r5, r3, r1, asr #2
 80139a4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80139a8:	40007f08 	andmi	r7, r0, r8, lsl #30
 80139ac:	417f4100 	cmnmi	pc, r0, lsl #2
 80139b0:	20400000 	subcs	r0, r0, r0
 80139b4:	013f4140 	teqeq	pc, r0, asr #2
 80139b8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80139bc:	00412214 	subeq	r2, r1, r4, lsl r2
 80139c0:	40407f40 	submi	r7, r0, r0, asr #30
 80139c4:	40004040 	andmi	r4, r0, r0, asr #32
 80139c8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80139cc:	7f40007f 	svcvc	0x0040007f
 80139d0:	7f100804 	svcvc	0x00100804
 80139d4:	413e4000 	teqmi	lr, r0
 80139d8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80139dc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80139e0:	40000609 	andmi	r0, r0, r9, lsl #12
 80139e4:	2151413e 	cmpcs	r1, lr, lsr r1
 80139e8:	7f40005e 	svcvc	0x0040005e
 80139ec:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80139f0:	49264000 	stmdbmi	r6!, {lr}
 80139f4:	00324949 	eorseq	r4, r2, r9, asr #18
 80139f8:	7f010340 	svcvc	0x00010340
 80139fc:	40000301 	andmi	r0, r0, r1, lsl #6
 8013a00:	4040403f 	submi	r4, r0, pc, lsr r0
 8013a04:	1f40003f 	svcne	0x0040003f
 8013a08:	1f204020 	svcne	0x00204020
 8013a0c:	403f4000 	eorsmi	r4, pc, r0
 8013a10:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8013a14:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8013a18:	40006314 	andmi	r6, r0, r4, lsl r3
 8013a1c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8013a20:	61400003 	cmpvs	r0, r3
 8013a24:	434d4959 	movtmi	r4, #55641	; 0xd959
 8013a28:	7f004000 	svcvc	0x00004000
 8013a2c:	00414141 	subeq	r4, r1, r1, asr #2
 8013a30:	08040240 	stmdaeq	r4, {r6, r9}
 8013a34:	40002010 	andmi	r2, r0, r0, lsl r0
 8013a38:	41414100 	mrsmi	r4, (UNDEF: 81)
 8013a3c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8013a40:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8013a44:	40404000 	submi	r4, r0, r0
 8013a48:	00404040 	subeq	r4, r0, r0, asr #32
 8013a4c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8013a50:	40000008 	andmi	r0, r0, r8
 8013a54:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8013a58:	7f400040 	svcvc	0x00400040
 8013a5c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8013a60:	44384000 	ldrtmi	r4, [r8], #-0
 8013a64:	00284444 	eoreq	r4, r8, r4, asr #8
 8013a68:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8013a6c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8013a70:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8013a74:	00400018 	subeq	r0, r0, r8, lsl r0
 8013a78:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8013a7c:	a4184000 	ldrge	r4, [r8], #-0
 8013a80:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8013a84:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8013a88:	40007804 	andmi	r7, r0, r4, lsl #16
 8013a8c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8013a90:	20400000 	subcs	r0, r0, r0
 8013a94:	003d4040 	eorseq	r4, sp, r0, asr #32
 8013a98:	107f4000 	rsbsne	r4, pc, r0
 8013a9c:	00004428 	andeq	r4, r0, r8, lsr #8
 8013aa0:	7f410040 	svcvc	0x00410040
 8013aa4:	40000040 	andmi	r0, r0, r0, asr #32
 8013aa8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8013aac:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8013ab0:	78040408 	stmdavc	r4, {r3, sl}
 8013ab4:	44384000 	ldrtmi	r4, [r8], #-0
 8013ab8:	00384444 	eorseq	r4, r8, r4, asr #8
 8013abc:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8013ac0:	40001824 	andmi	r1, r0, r4, lsr #16
 8013ac4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8013ac8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8013acc:	08040408 	stmdaeq	r4, {r3, sl}
 8013ad0:	54484000 	strbpl	r4, [r8], #-0
 8013ad4:	00245454 	eoreq	r5, r4, r4, asr r4
 8013ad8:	3f040440 	svccc	0x00040440
 8013adc:	40002444 	andmi	r2, r0, r4, asr #8
 8013ae0:	2040403c 	subcs	r4, r0, ip, lsr r0
 8013ae4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8013ae8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8013aec:	403c4000 	eorsmi	r4, ip, r0
 8013af0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8013af4:	10284440 	eorne	r4, r8, r0, asr #8
 8013af8:	40004428 	andmi	r4, r0, r8, lsr #8
 8013afc:	9090904c 	addsls	r9, r0, ip, asr #32
 8013b00:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8013b04:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8013b08:	08004000 	stmdaeq	r0, {lr}
 8013b0c:	00004136 	andeq	r4, r0, r6, lsr r1
 8013b10:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8013b14:	40000000 	andmi	r0, r0, r0
 8013b18:	08364100 	ldmdaeq	r6!, {r8, lr}
 8013b1c:	02400000 	subeq	r0, r0, #0
 8013b20:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8013b24:	263c4000 	ldrtcs	r4, [ip], -r0
 8013b28:	003c2623 	eorseq	r2, ip, r3, lsr #12

08013b2c <oled_128x32_init>:
 8013b2c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013b30:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8013b34:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013b38:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8013b3c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013b40:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013b44 <oled_128x64_init>:
 8013b44:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013b48:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8013b4c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013b50:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8013b54:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013b58:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013b5c <vtable for Ssd1306>:
	...
 8013b64:	0800ef11 	stmdaeq	r0, {r0, r4, r8, r9, sl, fp, sp, lr, pc}
 8013b68:	0800ef3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, fp, sp, lr, pc}
 8013b6c:	0800f24d 	stmdaeq	r0, {r0, r2, r3, r6, r9, ip, sp, lr, pc}
 8013b70:	0800f1d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, ip, sp, lr, pc}
 8013b74:	0800f0a1 	stmdaeq	r0, {r0, r5, r7, ip, sp, lr, pc}
 8013b78:	0800ef5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, sl, fp, sp, lr, pc}
 8013b7c:	0800ef85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, sp, lr, pc}
 8013b80:	0800f077 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, ip, sp, lr, pc}
 8013b84:	0800f031 	stmdaeq	r0, {r0, r4, r5, ip, sp, lr, pc}
 8013b88:	0800ef13 	stmdaeq	r0, {r0, r1, r4, r8, r9, sl, fp, sp, lr, pc}
 8013b8c:	0800f0dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, ip, sp, lr, pc}
 8013b90:	0800f0e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, ip, sp, lr, pc}
 8013b94:	0800f103 	stmdaeq	r0, {r0, r1, r8, ip, sp, lr, pc}
 8013b98:	0800ef15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, sp, lr, pc}
 8013b9c:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8013ba0:	5b1b006d 	blpl	86d3d5c <__exidx_end+0x6c0140>
 8013ba4:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8013ba8:	31335b1b 	teqcc	r3, fp, lsl fp
 8013bac:	5b1b006d 	blpl	86d3d68 <__exidx_end+0x6c014c>
 8013bb0:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8013bb4:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8013bb8:	5b1b006d 	blpl	86d3d74 <__exidx_end+0x6c0158>
 8013bbc:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8013bc0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8013bc4:	205d732a 	subscs	r7, sp, sl, lsr #6
 8013bc8:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8013bcc:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8013bd0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8013bd4:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8013bd8:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8013bdc:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8013be0:	00732a2e 	rsbseq	r2, r3, lr, lsr #20

08013be4 <days_of_month>:
 8013be4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013be8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8013bec:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013bf0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013bf4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013bf8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013bfc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013c00:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013c04:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013c08:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013c0c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013c10:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08013c14 <__exidx_start>:
 8013c14:	7fffdf70 	svcvc	0x00ffdf70
 8013c18:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08013c1c <.ARM.attributes>:
 8013c1c:	00002e41 	andeq	r2, r0, r1, asr #28
 8013c20:	61656100 	cmnvs	r5, r0, lsl #2
 8013c24:	01006962 	tsteq	r0, r2, ror #18
 8013c28:	00000024 	andeq	r0, r0, r4, lsr #32
 8013c2c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8013c30:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8013c34:	0600334d 	streq	r3, [r0], -sp, asr #6
 8013c38:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8013c3c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8013c40:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8013c44:	1a011803 	bne	8059c58 <__exidx_end+0x4603c>
 8013c48:	Address 0x0000000008013c48 is out of bounds.


Disassembly of section .data:

20000000 <s_nDmxTransmitPeriod>:
20000000:	000061a8 	andeq	r6, r0, r8, lsr #3

20000004 <s_nDmxTransmitMabTime>:
20000004:	0000000c 	andeq	r0, r0, ip

20000008 <s_nDmxTransmitBreakTime>:
20000008:	0000005c 	andeq	r0, r0, ip, asr r0

2000000c <DmxConfigUdp::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <s_multicast_mac>:
20000010:	005e0001 	subseq	r0, lr, r1
20000014:	00000000 	andeq	r0, r0, r0

20000018 <MDNS::s_nHandle>:
20000018:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000001c <next_block>:
2000001c:	20015800 	andcs	r5, r1, r0, lsl #16

20000020 <s_block_bucket>:
20000020:	00000010 	andeq	r0, r0, r0, lsl r0
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000040 	andeq	r0, r0, r0, asr #32
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000060 	andeq	r0, r0, r0, rrx
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000080 	andeq	r0, r0, r0, lsl #1
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000100 	andeq	r0, r0, r0, lsl #2
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000140 	andeq	r0, r0, r0, asr #2
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000180 	andeq	r0, r0, r0, lsl #3
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000200 	andeq	r0, r0, r0, lsl #4
20000064:	00000000 	andeq	r0, r0, r0
20000068:	00000300 	andeq	r0, r0, r0, lsl #6
2000006c:	00000000 	andeq	r0, r0, r0
20000070:	00000400 	andeq	r0, r0, r0, lsl #8
20000074:	00000000 	andeq	r0, r0, r0
20000078:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000088 <SystemCoreClock>:
20000088:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

20000090 <DmxInput::s_nStarted>:
20000090:	00000000 	andeq	r0, r0, r0

20000094 <RemoteConfig::s_pUdpBuffer>:
20000094:	00000000 	andeq	r0, r0, r0

20000098 <RemoteConfig::s_RemoteConfigListBin>:
	...

200000bc <RemoteConfig::s_pThis>:
200000bc:	00000000 	andeq	r0, r0, r0

200000c0 <HttpDaemon::m_Content>:
	...

20000660 <guard variable for lightset::Data::Get()::instance>:
20000660:	00000000 	andeq	r0, r0, r0

20000664 <lightset::Data::Get()::instance>:
	...

20000c68 <E131Bridge::s_pThis>:
20000c68:	00000000 	andeq	r0, r0, r0

20000c6c <s_ReceivingMask>:
20000c6c:	00000000 	andeq	r0, r0, r0

20000c70 <s_nPortsMax>:
20000c70:	00000000 	andeq	r0, r0, r0

20000c74 <DmxSend::s_nStarted>:
20000c74:	00000000 	andeq	r0, r0, r0

20000c78 <s_RxBuffer>:
	...

20000e88 <s_TxBuffer>:
	...

2000108c <sv_PortState>:
2000108c:	00000000 	andeq	r0, r0, r0

20001090 <sv_nRxDmxPackets>:
	...

200010a0 <sv_nUartsSending>:
200010a0:	00000000 	andeq	r0, r0, r0

200010a4 <Dmx::s_pThis>:
200010a4:	00000000 	andeq	r0, r0, r0

200010a8 <gv_RdmDataReceiveEnd>:
200010a8:	00000000 	andeq	r0, r0, r0

200010ac <DmxConfigUdp::s_pUdpBuffer>:
200010ac:	00000000 	andeq	r0, r0, r0

200010b0 <g_ip_info>:
	...

200010bc <g_mac_address>:
200010bc:	00000000 	andeq	r0, r0, r0
	...

200010c2 <s_is_dhcp>:
	...

200010c4 <s_p>:
200010c4:	00000000 	andeq	r0, r0, r0

200010c8 <s_ticker>:
200010c8:	00000000 	andeq	r0, r0, r0

200010cc <s_mac_address>:
	...

200010d4 <s_mac_address_arp_reply>:
	...

200010dc <s_id>:
200010dc:	00000000 	andeq	r0, r0, r0

200010e0 <s_recv_queue>:
	...

20001c50 <s_tcb>:
	...

20001c94 <s_tcp>:
	...

20002280 <broadcast_mask>:
20002280:	00000000 	andeq	r0, r0, r0

20002284 <gw_ip>:
20002284:	00000000 	andeq	r0, r0, r0

20002288 <on_network_mask>:
20002288:	00000000 	andeq	r0, r0, r0

2000228c <s_id>:
2000228c:	00000000 	andeq	r0, r0, r0

20002290 <s_ports_allowed>:
	...

200022b0 <s_recv_queue>:
	...

20007f50 <s_send_packet>:
	...

2000853c <MDNS::s_nRemoteIp>:
2000853c:	00000000 	andeq	r0, r0, r0

20008540 <MDNS::s_nRemotePort>:
20008540:	00000000 	andeq	r0, r0, r0

20008544 <MDNS::s_nMulticastIp>:
20008544:	00000000 	andeq	r0, r0, r0

20008548 <MDNS::s_AnswerLocalIp>:
	...

2000874c <MDNS::s_ServiceRecords>:
	...

2000876c <MDNS::s_nBytesReceived>:
2000876c:	00000000 	andeq	r0, r0, r0

20008770 <MDNS::s_ServiceRecordsData>:
	...

20008974 <MDNS::s_pName>:
20008974:	00000000 	andeq	r0, r0, r0

20008978 <MDNS::s_pBuffer>:
20008978:	00000000 	andeq	r0, r0, r0

2000897c <Network::s_pThis>:
2000897c:	00000000 	andeq	r0, r0, r0

20008980 <s_arp_announce>:
	...

200089ac <s_arp_reply>:
	...

200089d8 <s_arp_request>:
	...

20008a04 <s_arp_records>:
	...

20008b84 <s_entry_current>:
20008b84:	00000000 	andeq	r0, r0, r0

20008b88 <s_dhcp_allocated_gw>:
20008b88:	00000000 	andeq	r0, r0, r0

20008b8c <s_dhcp_allocated_ip>:
20008b8c:	00000000 	andeq	r0, r0, r0

20008b90 <s_dhcp_allocated_netmask>:
20008b90:	00000000 	andeq	r0, r0, r0

20008b94 <s_dhcp_message>:
	...

20008db8 <s_dhcp_server_ip>:
20008db8:	00000000 	andeq	r0, r0, r0

20008dbc <s_groups>:
	...

20008edc <s_id>:
20008edc:	00000000 	andeq	r0, r0, r0

20008ee0 <s_joins_allowed_index>:
20008ee0:	00000000 	andeq	r0, r0, r0

20008ee4 <s_leave>:
	...

20008f14 <s_multicast_mac>:
	...

20008f1c <s_report>:
	...

20008f4c <DisplayUdf::s_pThis>:
20008f4c:	00000000 	andeq	r0, r0, r0

20008f50 <ConfigStore::s_nWaitMillis>:
20008f50:	00000000 	andeq	r0, r0, r0

20008f54 <ConfigStore::s_SpiFlashData>:
	...

20009f54 <ConfigStore::s_nStartAddress>:
20009f54:	00000000 	andeq	r0, r0, r0

20009f58 <ConfigStore::s_bHaveFlashChip>:
20009f58:	00000000 	andeq	r0, r0, r0

20009f5c <ConfigStore::s_nSpiFlashStoreSize>:
20009f5c:	00000000 	andeq	r0, r0, r0

20009f60 <ConfigStore::s_State>:
20009f60:	00000000 	andeq	r0, r0, r0

20009f64 <ConfigStore::s_pThis>:
20009f64:	00000000 	andeq	r0, r0, r0

20009f68 <ConfigStore::s_bIsNew>:
20009f68:	00000000 	andeq	r0, r0, r0

20009f6c <StoreDisplayUdf::s_pThis>:
20009f6c:	00000000 	andeq	r0, r0, r0

20009f70 <StoreDmxSend::s_pThis>:
20009f70:	00000000 	andeq	r0, r0, r0

20009f74 <StoreNetwork::s_pThis>:
20009f74:	00000000 	andeq	r0, r0, r0

20009f78 <StoreRemoteConfig::s_pThis>:
20009f78:	00000000 	andeq	r0, r0, r0

20009f7c <StoreE131::s_pThis>:
20009f7c:	00000000 	andeq	r0, r0, r0

20009f80 <FlashCode::s_pThis>:
20009f80:	00000000 	andeq	r0, r0, r0

20009f84 <flashcode::s_nAddress>:
20009f84:	00000000 	andeq	r0, r0, r0

20009f88 <flashcode::s_State>:
20009f88:	00000000 	andeq	r0, r0, r0

20009f8c <flashcode::s_nPage>:
20009f8c:	00000000 	andeq	r0, r0, r0

20009f90 <flashcode::s_pData>:
20009f90:	00000000 	andeq	r0, r0, r0

20009f94 <flashcode::s_isBank0>:
20009f94:	00000000 	andeq	r0, r0, r0

20009f98 <flashcode::s_nLength>:
20009f98:	00000000 	andeq	r0, r0, r0

20009f9c <PropertiesConfig::s_Config>:
20009f9c:	00000000 	andeq	r0, r0, r0

20009fa0 <Display::s_pThis>:
20009fa0:	00000000 	andeq	r0, r0, r0

20009fa4 <_ClearBuffer>:
	...

2000a02c <Ssd1306::s_pThis>:
2000a02c:	00000000 	andeq	r0, r0, r0

2000a030 <FirmwareVersion::s_FirmwareVersion>:
	...

2000a046 <FirmwareVersion::s_Print>:
	...

2000a088 <FirmwareVersion::s_pThis>:
2000a088:	00000000 	andeq	r0, r0, r0

2000a08c <LedBlink::s_pThis>:
2000a08c:	00000000 	andeq	r0, r0, r0

2000a090 <Hardware::s_pThis>:
2000a090:	00000000 	andeq	r0, r0, r0

2000a094 <outptr>:
2000a094:	00000000 	andeq	r0, r0, r0

2000a098 <last.0>:
	...

2000a0a0 <s_micros>:
	...

2000a0a8 <set_timer>:
2000a0a8:	00000000 	andeq	r0, r0, r0

2000a0ac <s_nSysTickMillis>:
2000a0ac:	00000000 	andeq	r0, r0, r0

2000a0b0 <dma_current_ptp_rxdesc>:
2000a0b0:	00000000 	andeq	r0, r0, r0

2000a0b4 <dma_current_ptp_txdesc>:
2000a0b4:	00000000 	andeq	r0, r0, r0

2000a0b8 <dma_current_rxdesc>:
2000a0b8:	00000000 	andeq	r0, r0, r0

2000a0bc <dma_current_txdesc>:
2000a0bc:	00000000 	andeq	r0, r0, r0

2000a0c0 <enet_initpara>:
	...

2000a0fc <rx_buff>:
	...

2000d09c <rxdesc_tab>:
	...

2000d11c <tx_buff>:
	...

2000dd04 <txdesc_tab>:
	...

2000dd24 <s_nAddress>:
2000dd24:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
