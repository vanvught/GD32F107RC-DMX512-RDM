
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007481 	stmdaeq	r0, {r0, r7, sl, ip, sp, lr}
 8007008:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800700c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007010:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007014:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007018:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
	...
 800702c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007030:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800703c:	0800fec5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, fp, ip, sp, lr, pc}
 8007040:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007044:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007048:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800704c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007050:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007054:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007058:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800705c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007060:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007064:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007068:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800706c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007070:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007074:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007078:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800707c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007080:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007084:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007088:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800708c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007090:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007094:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007098:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800709c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070a0:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070a4:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070a8:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070ac:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070b0:	08009551 	stmdaeq	r0, {r0, r4, r6, r8, sl, ip, pc}
 80070b4:	080095f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, ip, pc}
 80070b8:	08009635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, ip, pc}
 80070bc:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070c0:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070c4:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070c8:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070cc:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070d0:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070d4:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070d8:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070dc:	08009359 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, ip, pc}
 80070e0:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070e4:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070e8:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070ec:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070f0:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 80070f4:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
	...
 8007100:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800710c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007110:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007114:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007118:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800711c:	08009655 	stmdaeq	r0, {r0, r2, r4, r6, r9, sl, ip, pc}
 8007120:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007124:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007128:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800712c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007130:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007134:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007138:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800713c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007140:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007144:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8007148:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 800714c:	080074cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, sp, lr}

Disassembly of section .text:

08007150 <__aeabi_uldivmod>:
 8007150:	b953      	cbnz	r3, 8007168 <__aeabi_uldivmod+0x18>
 8007152:	b94a      	cbnz	r2, 8007168 <__aeabi_uldivmod+0x18>
 8007154:	2900      	cmp	r1, #0
 8007156:	bf08      	it	eq
 8007158:	2800      	cmpeq	r0, #0
 800715a:	bf1c      	itt	ne
 800715c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007160:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007164:	f000 b98a 	b.w	800747c <__aeabi_idiv0>
 8007168:	f1ad 0c08 	sub.w	ip, sp, #8
 800716c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007170:	f000 f81a 	bl	80071a8 <__udivmoddi4>
 8007174:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007178:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800717c:	b004      	add	sp, #16
 800717e:	4770      	bx	lr

08007180 <__popcountsi2>:
 8007180:	0843      	lsrs	r3, r0, #1
 8007182:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007186:	1ac0      	subs	r0, r0, r3
 8007188:	0883      	lsrs	r3, r0, #2
 800718a:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 800718e:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007192:	4418      	add	r0, r3
 8007194:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007198:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 800719c:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 80071a0:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 80071a4:	0e00      	lsrs	r0, r0, #24
 80071a6:	4770      	bx	lr

080071a8 <__udivmoddi4>:
 80071a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80071ac:	9e08      	ldr	r6, [sp, #32]
 80071ae:	460d      	mov	r5, r1
 80071b0:	4604      	mov	r4, r0
 80071b2:	4688      	mov	r8, r1
 80071b4:	2b00      	cmp	r3, #0
 80071b6:	d14d      	bne.n	8007254 <__udivmoddi4+0xac>
 80071b8:	428a      	cmp	r2, r1
 80071ba:	4694      	mov	ip, r2
 80071bc:	d968      	bls.n	8007290 <__udivmoddi4+0xe8>
 80071be:	fab2 f282 	clz	r2, r2
 80071c2:	b152      	cbz	r2, 80071da <__udivmoddi4+0x32>
 80071c4:	fa01 f302 	lsl.w	r3, r1, r2
 80071c8:	f1c2 0120 	rsb	r1, r2, #32
 80071cc:	fa20 f101 	lsr.w	r1, r0, r1
 80071d0:	fa0c fc02 	lsl.w	ip, ip, r2
 80071d4:	ea41 0803 	orr.w	r8, r1, r3
 80071d8:	4094      	lsls	r4, r2
 80071da:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80071de:	fbb8 f7f1 	udiv	r7, r8, r1
 80071e2:	fa1f fe8c 	uxth.w	lr, ip
 80071e6:	fb01 8817 	mls	r8, r1, r7, r8
 80071ea:	fb07 f00e 	mul.w	r0, r7, lr
 80071ee:	0c23      	lsrs	r3, r4, #16
 80071f0:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80071f4:	4298      	cmp	r0, r3
 80071f6:	d90a      	bls.n	800720e <__udivmoddi4+0x66>
 80071f8:	eb1c 0303 	adds.w	r3, ip, r3
 80071fc:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007200:	f080 811e 	bcs.w	8007440 <__udivmoddi4+0x298>
 8007204:	4298      	cmp	r0, r3
 8007206:	f240 811b 	bls.w	8007440 <__udivmoddi4+0x298>
 800720a:	3f02      	subs	r7, #2
 800720c:	4463      	add	r3, ip
 800720e:	1a1b      	subs	r3, r3, r0
 8007210:	fbb3 f0f1 	udiv	r0, r3, r1
 8007214:	fb01 3310 	mls	r3, r1, r0, r3
 8007218:	fb00 fe0e 	mul.w	lr, r0, lr
 800721c:	b2a4      	uxth	r4, r4
 800721e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007222:	45a6      	cmp	lr, r4
 8007224:	d90a      	bls.n	800723c <__udivmoddi4+0x94>
 8007226:	eb1c 0404 	adds.w	r4, ip, r4
 800722a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800722e:	f080 8109 	bcs.w	8007444 <__udivmoddi4+0x29c>
 8007232:	45a6      	cmp	lr, r4
 8007234:	f240 8106 	bls.w	8007444 <__udivmoddi4+0x29c>
 8007238:	4464      	add	r4, ip
 800723a:	3802      	subs	r0, #2
 800723c:	2100      	movs	r1, #0
 800723e:	eba4 040e 	sub.w	r4, r4, lr
 8007242:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007246:	b11e      	cbz	r6, 8007250 <__udivmoddi4+0xa8>
 8007248:	2300      	movs	r3, #0
 800724a:	40d4      	lsrs	r4, r2
 800724c:	e9c6 4300 	strd	r4, r3, [r6]
 8007250:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007254:	428b      	cmp	r3, r1
 8007256:	d908      	bls.n	800726a <__udivmoddi4+0xc2>
 8007258:	2e00      	cmp	r6, #0
 800725a:	f000 80ee 	beq.w	800743a <__udivmoddi4+0x292>
 800725e:	2100      	movs	r1, #0
 8007260:	e9c6 0500 	strd	r0, r5, [r6]
 8007264:	4608      	mov	r0, r1
 8007266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800726a:	fab3 f183 	clz	r1, r3
 800726e:	2900      	cmp	r1, #0
 8007270:	d14a      	bne.n	8007308 <__udivmoddi4+0x160>
 8007272:	42ab      	cmp	r3, r5
 8007274:	d302      	bcc.n	800727c <__udivmoddi4+0xd4>
 8007276:	4282      	cmp	r2, r0
 8007278:	f200 80fc 	bhi.w	8007474 <__udivmoddi4+0x2cc>
 800727c:	1a84      	subs	r4, r0, r2
 800727e:	eb65 0303 	sbc.w	r3, r5, r3
 8007282:	2001      	movs	r0, #1
 8007284:	4698      	mov	r8, r3
 8007286:	2e00      	cmp	r6, #0
 8007288:	d0e2      	beq.n	8007250 <__udivmoddi4+0xa8>
 800728a:	e9c6 4800 	strd	r4, r8, [r6]
 800728e:	e7df      	b.n	8007250 <__udivmoddi4+0xa8>
 8007290:	b902      	cbnz	r2, 8007294 <__udivmoddi4+0xec>
 8007292:	deff      	udf	#255	; 0xff
 8007294:	fab2 f282 	clz	r2, r2
 8007298:	2a00      	cmp	r2, #0
 800729a:	f040 8091 	bne.w	80073c0 <__udivmoddi4+0x218>
 800729e:	eba1 000c 	sub.w	r0, r1, ip
 80072a2:	2101      	movs	r1, #1
 80072a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80072a8:	fa1f fe8c 	uxth.w	lr, ip
 80072ac:	fbb0 f3f7 	udiv	r3, r0, r7
 80072b0:	fb07 0013 	mls	r0, r7, r3, r0
 80072b4:	0c25      	lsrs	r5, r4, #16
 80072b6:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80072ba:	fb0e f003 	mul.w	r0, lr, r3
 80072be:	42a8      	cmp	r0, r5
 80072c0:	d908      	bls.n	80072d4 <__udivmoddi4+0x12c>
 80072c2:	eb1c 0505 	adds.w	r5, ip, r5
 80072c6:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80072ca:	d202      	bcs.n	80072d2 <__udivmoddi4+0x12a>
 80072cc:	42a8      	cmp	r0, r5
 80072ce:	f200 80ce 	bhi.w	800746e <__udivmoddi4+0x2c6>
 80072d2:	4643      	mov	r3, r8
 80072d4:	1a2d      	subs	r5, r5, r0
 80072d6:	fbb5 f0f7 	udiv	r0, r5, r7
 80072da:	fb07 5510 	mls	r5, r7, r0, r5
 80072de:	fb0e fe00 	mul.w	lr, lr, r0
 80072e2:	b2a4      	uxth	r4, r4
 80072e4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80072e8:	45a6      	cmp	lr, r4
 80072ea:	d908      	bls.n	80072fe <__udivmoddi4+0x156>
 80072ec:	eb1c 0404 	adds.w	r4, ip, r4
 80072f0:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80072f4:	d202      	bcs.n	80072fc <__udivmoddi4+0x154>
 80072f6:	45a6      	cmp	lr, r4
 80072f8:	f200 80b6 	bhi.w	8007468 <__udivmoddi4+0x2c0>
 80072fc:	4628      	mov	r0, r5
 80072fe:	eba4 040e 	sub.w	r4, r4, lr
 8007302:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007306:	e79e      	b.n	8007246 <__udivmoddi4+0x9e>
 8007308:	f1c1 0720 	rsb	r7, r1, #32
 800730c:	408b      	lsls	r3, r1
 800730e:	fa22 fc07 	lsr.w	ip, r2, r7
 8007312:	ea4c 0c03 	orr.w	ip, ip, r3
 8007316:	fa25 fa07 	lsr.w	sl, r5, r7
 800731a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800731e:	fbba f8f9 	udiv	r8, sl, r9
 8007322:	fa20 f307 	lsr.w	r3, r0, r7
 8007326:	fb09 aa18 	mls	sl, r9, r8, sl
 800732a:	408d      	lsls	r5, r1
 800732c:	fa1f fe8c 	uxth.w	lr, ip
 8007330:	431d      	orrs	r5, r3
 8007332:	fa00 f301 	lsl.w	r3, r0, r1
 8007336:	fb08 f00e 	mul.w	r0, r8, lr
 800733a:	0c2c      	lsrs	r4, r5, #16
 800733c:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007340:	42a0      	cmp	r0, r4
 8007342:	fa02 f201 	lsl.w	r2, r2, r1
 8007346:	d90b      	bls.n	8007360 <__udivmoddi4+0x1b8>
 8007348:	eb1c 0404 	adds.w	r4, ip, r4
 800734c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007350:	f080 8088 	bcs.w	8007464 <__udivmoddi4+0x2bc>
 8007354:	42a0      	cmp	r0, r4
 8007356:	f240 8085 	bls.w	8007464 <__udivmoddi4+0x2bc>
 800735a:	f1a8 0802 	sub.w	r8, r8, #2
 800735e:	4464      	add	r4, ip
 8007360:	1a24      	subs	r4, r4, r0
 8007362:	fbb4 f0f9 	udiv	r0, r4, r9
 8007366:	fb09 4410 	mls	r4, r9, r0, r4
 800736a:	fb00 fe0e 	mul.w	lr, r0, lr
 800736e:	b2ad      	uxth	r5, r5
 8007370:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007374:	45a6      	cmp	lr, r4
 8007376:	d908      	bls.n	800738a <__udivmoddi4+0x1e2>
 8007378:	eb1c 0404 	adds.w	r4, ip, r4
 800737c:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007380:	d26c      	bcs.n	800745c <__udivmoddi4+0x2b4>
 8007382:	45a6      	cmp	lr, r4
 8007384:	d96a      	bls.n	800745c <__udivmoddi4+0x2b4>
 8007386:	3802      	subs	r0, #2
 8007388:	4464      	add	r4, ip
 800738a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800738e:	fba0 9502 	umull	r9, r5, r0, r2
 8007392:	eba4 040e 	sub.w	r4, r4, lr
 8007396:	42ac      	cmp	r4, r5
 8007398:	46c8      	mov	r8, r9
 800739a:	46ae      	mov	lr, r5
 800739c:	d356      	bcc.n	800744c <__udivmoddi4+0x2a4>
 800739e:	d053      	beq.n	8007448 <__udivmoddi4+0x2a0>
 80073a0:	2e00      	cmp	r6, #0
 80073a2:	d069      	beq.n	8007478 <__udivmoddi4+0x2d0>
 80073a4:	ebb3 0208 	subs.w	r2, r3, r8
 80073a8:	eb64 040e 	sbc.w	r4, r4, lr
 80073ac:	fa22 f301 	lsr.w	r3, r2, r1
 80073b0:	fa04 f707 	lsl.w	r7, r4, r7
 80073b4:	431f      	orrs	r7, r3
 80073b6:	40cc      	lsrs	r4, r1
 80073b8:	e9c6 7400 	strd	r7, r4, [r6]
 80073bc:	2100      	movs	r1, #0
 80073be:	e747      	b.n	8007250 <__udivmoddi4+0xa8>
 80073c0:	fa0c fc02 	lsl.w	ip, ip, r2
 80073c4:	f1c2 0120 	rsb	r1, r2, #32
 80073c8:	fa25 f301 	lsr.w	r3, r5, r1
 80073cc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80073d0:	fa20 f101 	lsr.w	r1, r0, r1
 80073d4:	4095      	lsls	r5, r2
 80073d6:	430d      	orrs	r5, r1
 80073d8:	fbb3 f1f7 	udiv	r1, r3, r7
 80073dc:	fb07 3311 	mls	r3, r7, r1, r3
 80073e0:	fa1f fe8c 	uxth.w	lr, ip
 80073e4:	0c28      	lsrs	r0, r5, #16
 80073e6:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80073ea:	fb01 f30e 	mul.w	r3, r1, lr
 80073ee:	4283      	cmp	r3, r0
 80073f0:	fa04 f402 	lsl.w	r4, r4, r2
 80073f4:	d908      	bls.n	8007408 <__udivmoddi4+0x260>
 80073f6:	eb1c 0000 	adds.w	r0, ip, r0
 80073fa:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80073fe:	d22f      	bcs.n	8007460 <__udivmoddi4+0x2b8>
 8007400:	4283      	cmp	r3, r0
 8007402:	d92d      	bls.n	8007460 <__udivmoddi4+0x2b8>
 8007404:	3902      	subs	r1, #2
 8007406:	4460      	add	r0, ip
 8007408:	1ac0      	subs	r0, r0, r3
 800740a:	fbb0 f3f7 	udiv	r3, r0, r7
 800740e:	fb07 0013 	mls	r0, r7, r3, r0
 8007412:	b2ad      	uxth	r5, r5
 8007414:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007418:	fb03 f00e 	mul.w	r0, r3, lr
 800741c:	42a8      	cmp	r0, r5
 800741e:	d908      	bls.n	8007432 <__udivmoddi4+0x28a>
 8007420:	eb1c 0505 	adds.w	r5, ip, r5
 8007424:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007428:	d216      	bcs.n	8007458 <__udivmoddi4+0x2b0>
 800742a:	42a8      	cmp	r0, r5
 800742c:	d914      	bls.n	8007458 <__udivmoddi4+0x2b0>
 800742e:	3b02      	subs	r3, #2
 8007430:	4465      	add	r5, ip
 8007432:	1a28      	subs	r0, r5, r0
 8007434:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007438:	e738      	b.n	80072ac <__udivmoddi4+0x104>
 800743a:	4631      	mov	r1, r6
 800743c:	4630      	mov	r0, r6
 800743e:	e707      	b.n	8007250 <__udivmoddi4+0xa8>
 8007440:	462f      	mov	r7, r5
 8007442:	e6e4      	b.n	800720e <__udivmoddi4+0x66>
 8007444:	4618      	mov	r0, r3
 8007446:	e6f9      	b.n	800723c <__udivmoddi4+0x94>
 8007448:	454b      	cmp	r3, r9
 800744a:	d2a9      	bcs.n	80073a0 <__udivmoddi4+0x1f8>
 800744c:	ebb9 0802 	subs.w	r8, r9, r2
 8007450:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007454:	3801      	subs	r0, #1
 8007456:	e7a3      	b.n	80073a0 <__udivmoddi4+0x1f8>
 8007458:	4643      	mov	r3, r8
 800745a:	e7ea      	b.n	8007432 <__udivmoddi4+0x28a>
 800745c:	4628      	mov	r0, r5
 800745e:	e794      	b.n	800738a <__udivmoddi4+0x1e2>
 8007460:	4641      	mov	r1, r8
 8007462:	e7d1      	b.n	8007408 <__udivmoddi4+0x260>
 8007464:	46d0      	mov	r8, sl
 8007466:	e77b      	b.n	8007360 <__udivmoddi4+0x1b8>
 8007468:	4464      	add	r4, ip
 800746a:	3802      	subs	r0, #2
 800746c:	e747      	b.n	80072fe <__udivmoddi4+0x156>
 800746e:	3b02      	subs	r3, #2
 8007470:	4465      	add	r5, ip
 8007472:	e72f      	b.n	80072d4 <__udivmoddi4+0x12c>
 8007474:	4608      	mov	r0, r1
 8007476:	e706      	b.n	8007286 <__udivmoddi4+0xde>
 8007478:	4631      	mov	r1, r6
 800747a:	e6e9      	b.n	8007250 <__udivmoddi4+0xa8>

0800747c <__aeabi_idiv0>:
 800747c:	4770      	bx	lr
 800747e:	bf00      	nop

08007480 <Reset_Handler>:
 8007480:	480c      	ldr	r0, [pc, #48]	; (80074b4 <Zerobss+0x10>)
 8007482:	4685      	mov	sp, r0
 8007484:	2100      	movs	r1, #0
 8007486:	e003      	b.n	8007490 <DataInit>

08007488 <CopyData>:
 8007488:	4b0b      	ldr	r3, [pc, #44]	; (80074b8 <Zerobss+0x14>)
 800748a:	585b      	ldr	r3, [r3, r1]
 800748c:	5043      	str	r3, [r0, r1]
 800748e:	3104      	adds	r1, #4

08007490 <DataInit>:
 8007490:	480a      	ldr	r0, [pc, #40]	; (80074bc <Zerobss+0x18>)
 8007492:	4b0b      	ldr	r3, [pc, #44]	; (80074c0 <Zerobss+0x1c>)
 8007494:	1842      	adds	r2, r0, r1
 8007496:	429a      	cmp	r2, r3
 8007498:	d3f6      	bcc.n	8007488 <CopyData>
 800749a:	4a0a      	ldr	r2, [pc, #40]	; (80074c4 <Zerobss+0x20>)
 800749c:	e002      	b.n	80074a4 <Zerobss>

0800749e <FillZerobss>:
 800749e:	2300      	movs	r3, #0
 80074a0:	f842 3b04 	str.w	r3, [r2], #4

080074a4 <Zerobss>:
 80074a4:	4b08      	ldr	r3, [pc, #32]	; (80074c8 <Zerobss+0x24>)
 80074a6:	429a      	cmp	r2, r3
 80074a8:	d3f9      	bcc.n	800749e <FillZerobss>
 80074aa:	f008 fd13 	bl	800fed4 <SystemInit>
 80074ae:	f000 f8df 	bl	8007670 <main>
 80074b2:	4770      	bx	lr
 80074b4:	20018000 	andcs	r8, r1, r0
 80074b8:	080138a8 	stmdaeq	r1, {r3, r5, r7, fp, ip, sp}
 80074bc:	20000000 	andcs	r0, r0, r0
 80074c0:	200000f8 	strdcs	r0, [r0], -r8
 80074c4:	200000f8 	strdcs	r0, [r0], -r8
 80074c8:	2000d854 	andcs	sp, r0, r4, asr r8

080074cc <ADC0_1_IRQHandler>:
 80074cc:	e7fe      	b.n	80074cc <ADC0_1_IRQHandler>

080074ce <memcmp>:
 80074ce:	b510      	push	{r4, lr}
 80074d0:	3901      	subs	r1, #1
 80074d2:	4402      	add	r2, r0
 80074d4:	4290      	cmp	r0, r2
 80074d6:	d008      	beq.n	80074ea <memcmp+0x1c>
 80074d8:	7803      	ldrb	r3, [r0, #0]
 80074da:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80074de:	42a3      	cmp	r3, r4
 80074e0:	d001      	beq.n	80074e6 <memcmp+0x18>
 80074e2:	1b18      	subs	r0, r3, r4
 80074e4:	bd10      	pop	{r4, pc}
 80074e6:	3001      	adds	r0, #1
 80074e8:	e7f4      	b.n	80074d4 <memcmp+0x6>
 80074ea:	2000      	movs	r0, #0
 80074ec:	e7fa      	b.n	80074e4 <memcmp+0x16>

080074ee <DisplayHandler::~DisplayHandler()>:
 80074ee:	4770      	bx	lr

080074f0 <E131Reboot::~E131Reboot()>:
 80074f0:	4770      	bx	lr

080074f2 <dmxconfigudp::atoi(char const*, unsigned char)>:
 80074f2:	b530      	push	{r4, r5, lr}
 80074f4:	1e42      	subs	r2, r0, #1
 80074f6:	240a      	movs	r4, #10
 80074f8:	2000      	movs	r0, #0
 80074fa:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80074fe:	3b30      	subs	r3, #48	; 0x30
 8007500:	b2dd      	uxtb	r5, r3
 8007502:	2d09      	cmp	r5, #9
 8007504:	d805      	bhi.n	8007512 <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8007506:	3901      	subs	r1, #1
 8007508:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800750c:	fb04 3000 	mla	r0, r4, r0, r3
 8007510:	d1f3      	bne.n	80074fa <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8007512:	bd30      	pop	{r4, r5, pc}

08007514 <E131Reboot::Run()>:
 8007514:	b510      	push	{r4, lr}
 8007516:	4c07      	ldr	r4, [pc, #28]	; (8007534 <E131Reboot::Run()+0x20>)
 8007518:	6820      	ldr	r0, [r4, #0]
 800751a:	f000 fc37 	bl	8007d8c <E131Bridge::Stop()>
 800751e:	6823      	ldr	r3, [r4, #0]
 8007520:	6858      	ldr	r0, [r3, #4]
 8007522:	b128      	cbz	r0, 8007530 <E131Reboot::Run()+0x1c>
 8007524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007528:	6803      	ldr	r3, [r0, #0]
 800752a:	2101      	movs	r1, #1
 800752c:	695b      	ldr	r3, [r3, #20]
 800752e:	4718      	bx	r3
 8007530:	bd10      	pop	{r4, pc}
 8007532:	bf00      	nop
 8007534:	20000704 	andcs	r0, r0, r4, lsl #14

08007538 <E131Reboot::~E131Reboot()>:
 8007538:	b510      	push	{r4, lr}
 800753a:	4604      	mov	r4, r0
 800753c:	f008 f826 	bl	800f58c <operator delete(void*)>
 8007540:	4620      	mov	r0, r4
 8007542:	bd10      	pop	{r4, pc}

08007544 <DisplayHandler::~DisplayHandler()>:
 8007544:	b510      	push	{r4, lr}
 8007546:	4604      	mov	r4, r0
 8007548:	f008 f820 	bl	800f58c <operator delete(void*)>
 800754c:	4620      	mov	r0, r4
 800754e:	bd10      	pop	{r4, pc}

08007550 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007550:	b110      	cbz	r0, 8007558 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007552:	6803      	ldr	r3, [r0, #0]
 8007554:	6a1b      	ldr	r3, [r3, #32]
 8007556:	4718      	bx	r3
 8007558:	4770      	bx	lr

0800755a <Display::PutChar(int) [clone .isra.0]>:
 800755a:	b110      	cbz	r0, 8007562 <Display::PutChar(int) [clone .isra.0]+0x8>
 800755c:	6803      	ldr	r3, [r0, #0]
 800755e:	695b      	ldr	r3, [r3, #20]
 8007560:	4718      	bx	r3
 8007562:	4770      	bx	lr

08007564 <DisplayHandler::Print(unsigned int)>:
 8007564:	b538      	push	{r3, r4, r5, lr}
 8007566:	7903      	ldrb	r3, [r0, #4]
 8007568:	b1f3      	cbz	r3, 80075a8 <DisplayHandler::Print(unsigned int)+0x44>
 800756a:	2904      	cmp	r1, #4
 800756c:	bf98      	it	ls
 800756e:	4b0f      	ldrls	r3, [pc, #60]	; (80075ac <DisplayHandler::Print(unsigned int)+0x48>)
 8007570:	4d0f      	ldr	r5, [pc, #60]	; (80075b0 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007572:	bf98      	it	ls
 8007574:	5c5c      	ldrbls	r4, [r3, r1]
 8007576:	682b      	ldr	r3, [r5, #0]
 8007578:	bf88      	it	hi
 800757a:	2455      	movhi	r4, #85	; 0x55
 800757c:	6998      	ldr	r0, [r3, #24]
 800757e:	b178      	cbz	r0, 80075a0 <DisplayHandler::Print(unsigned int)+0x3c>
 8007580:	7901      	ldrb	r1, [r0, #4]
 8007582:	3901      	subs	r1, #1
 8007584:	b2c9      	uxtb	r1, r1
 8007586:	b168      	cbz	r0, 80075a4 <DisplayHandler::Print(unsigned int)+0x40>
 8007588:	7942      	ldrb	r2, [r0, #5]
 800758a:	3a01      	subs	r2, #1
 800758c:	b2d2      	uxtb	r2, r2
 800758e:	f7ff ffdf 	bl	8007550 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007592:	682b      	ldr	r3, [r5, #0]
 8007594:	4621      	mov	r1, r4
 8007596:	6998      	ldr	r0, [r3, #24]
 8007598:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800759c:	f7ff bfdd 	b.w	800755a <Display::PutChar(int) [clone .isra.0]>
 80075a0:	4601      	mov	r1, r0
 80075a2:	e7ee      	b.n	8007582 <DisplayHandler::Print(unsigned int)+0x1e>
 80075a4:	4602      	mov	r2, r0
 80075a6:	e7f0      	b.n	800758a <DisplayHandler::Print(unsigned int)+0x26>
 80075a8:	bd38      	pop	{r3, r4, r5, pc}
 80075aa:	bf00      	nop
 80075ac:	08011b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip}
 80075b0:	20009acc 	andcs	r9, r0, ip, asr #21

080075b4 <Display::TextStatus(char const*)>:
 80075b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80075b8:	4604      	mov	r4, r0
 80075ba:	6980      	ldr	r0, [r0, #24]
 80075bc:	460d      	mov	r5, r1
 80075be:	b360      	cbz	r0, 800761a <Display::TextStatus(char const*)+0x66>
 80075c0:	7947      	ldrb	r7, [r0, #5]
 80075c2:	2100      	movs	r1, #0
 80075c4:	1e7e      	subs	r6, r7, #1
 80075c6:	b2f6      	uxtb	r6, r6
 80075c8:	4632      	mov	r2, r6
 80075ca:	f890 9004 	ldrb.w	r9, [r0, #4]
 80075ce:	f04f 0800 	mov.w	r8, #0
 80075d2:	f7ff ffbd 	bl	8007550 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80075d6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80075da:	45c1      	cmp	r9, r8
 80075dc:	69a0      	ldr	r0, [r4, #24]
 80075de:	d905      	bls.n	80075ec <Display::TextStatus(char const*)+0x38>
 80075e0:	2120      	movs	r1, #32
 80075e2:	f7ff ffba 	bl	800755a <Display::PutChar(int) [clone .isra.0]>
 80075e6:	f108 0801 	add.w	r8, r8, #1
 80075ea:	e7f6      	b.n	80075da <Display::TextStatus(char const*)+0x26>
 80075ec:	4632      	mov	r2, r6
 80075ee:	2100      	movs	r1, #0
 80075f0:	f7ff ffae 	bl	8007550 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80075f4:	69a0      	ldr	r0, [r4, #24]
 80075f6:	b180      	cbz	r0, 800761a <Display::TextStatus(char const*)+0x66>
 80075f8:	2300      	movs	r3, #0
 80075fa:	7901      	ldrb	r1, [r0, #4]
 80075fc:	5cea      	ldrb	r2, [r5, r3]
 80075fe:	b11a      	cbz	r2, 8007608 <Display::TextStatus(char const*)+0x54>
 8007600:	1c5a      	adds	r2, r3, #1
 8007602:	4299      	cmp	r1, r3
 8007604:	4613      	mov	r3, r2
 8007606:	dcf9      	bgt.n	80075fc <Display::TextStatus(char const*)+0x48>
 8007608:	6802      	ldr	r2, [r0, #0]
 800760a:	4639      	mov	r1, r7
 800760c:	69d4      	ldr	r4, [r2, #28]
 800760e:	b2db      	uxtb	r3, r3
 8007610:	462a      	mov	r2, r5
 8007612:	46a4      	mov	ip, r4
 8007614:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007618:	4760      	bx	ip
 800761a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800761e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 800761e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007620:	4605      	mov	r5, r0
 8007622:	461e      	mov	r6, r3
 8007624:	460f      	mov	r7, r1
 8007626:	4614      	mov	r4, r2
 8007628:	f7ff ffc4 	bl	80075b4 <Display::TextStatus(char const*)>
 800762c:	7c6b      	ldrb	r3, [r5, #17]
 800762e:	b19b      	cbz	r3, 8007658 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8007630:	43e2      	mvns	r2, r4
 8007632:	2312      	movs	r3, #18
 8007634:	7a28      	ldrb	r0, [r5, #8]
 8007636:	f88d 3004 	strb.w	r3, [sp, #4]
 800763a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800763e:	f88d 3005 	strb.w	r3, [sp, #5]
 8007642:	f88d 2006 	strb.w	r2, [sp, #6]
 8007646:	f009 fac3 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800764a:	68e8      	ldr	r0, [r5, #12]
 800764c:	f009 fab8 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 8007650:	2103      	movs	r1, #3
 8007652:	a801      	add	r0, sp, #4
 8007654:	f009 fac2 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 8007658:	1c73      	adds	r3, r6, #1
 800765a:	d006      	beq.n	800766a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800765c:	4639      	mov	r1, r7
 800765e:	4630      	mov	r0, r6
 8007660:	b003      	add	sp, #12
 8007662:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8007666:	f007 be45 	b.w	800f2f4 <console_status>
 800766a:	b003      	add	sp, #12
 800766c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007670 <main>:
 8007670:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007674:	2501      	movs	r5, #1
 8007676:	f6ad 5d6c 	subw	sp, sp, #3436	; 0xd6c
 800767a:	a80e      	add	r0, sp, #56	; 0x38
 800767c:	f007 fedc 	bl	800f438 <Hardware::Hardware()>
 8007680:	a855      	add	r0, sp, #340	; 0x154
 8007682:	f005 fb51 	bl	800cd28 <Network::Network()>
 8007686:	a816      	add	r0, sp, #88	; 0x58
 8007688:	f007 fe92 	bl	800f3b0 <LedBlink::LedBlink()>
 800768c:	a83f      	add	r0, sp, #252	; 0xfc
 800768e:	f006 fd61 	bl	800e154 <DisplayUdf::DisplayUdf()>
 8007692:	4aaf      	ldr	r2, [pc, #700]	; (8007950 <main+0x2e0>)
 8007694:	4baf      	ldr	r3, [pc, #700]	; (8007954 <main+0x2e4>)
 8007696:	49b0      	ldr	r1, [pc, #704]	; (8007958 <main+0x2e8>)
 8007698:	a803      	add	r0, sp, #12
 800769a:	f007 fe43 	bl	800f324 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800769e:	a804      	add	r0, sp, #16
 80076a0:	f003 ff6a 	bl	800b578 <FlashRom::FlashRom()>
 80076a4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 800795c <main+0x2ec>
 80076a8:	a805      	add	r0, sp, #20
 80076aa:	f003 fce1 	bl	800b070 <SpiFlashStore::SpiFlashStore()>
 80076ae:	49ac      	ldr	r1, [pc, #688]	; (8007960 <main+0x2f0>)
 80076b0:	a803      	add	r0, sp, #12
 80076b2:	f007 fe6f 	bl	800f394 <FirmwareVersion::Print(char const*)>
 80076b6:	2004      	movs	r0, #4
 80076b8:	f8c8 5010 	str.w	r5, [r8, #16]
 80076bc:	f007 ff6a 	bl	800f594 <operator new(unsigned int)>
 80076c0:	4ba8      	ldr	r3, [pc, #672]	; (8007964 <main+0x2f4>)
 80076c2:	900e      	str	r0, [sp, #56]	; 0x38
 80076c4:	6003      	str	r3, [r0, #0]
 80076c6:	2008      	movs	r0, #8
 80076c8:	f007 ff64 	bl	800f594 <operator new(unsigned int)>
 80076cc:	4ba6      	ldr	r3, [pc, #664]	; (8007968 <main+0x2f8>)
 80076ce:	2400      	movs	r4, #0
 80076d0:	6003      	str	r3, [r0, #0]
 80076d2:	4ba6      	ldr	r3, [pc, #664]	; (800796c <main+0x2fc>)
 80076d4:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80076d8:	681b      	ldr	r3, [r3, #0]
 80076da:	49a5      	ldr	r1, [pc, #660]	; (8007970 <main+0x300>)
 80076dc:	3b00      	subs	r3, #0
 80076de:	bf18      	it	ne
 80076e0:	2301      	movne	r3, #1
 80076e2:	9018      	str	r0, [sp, #96]	; 0x60
 80076e4:	7103      	strb	r3, [r0, #4]
 80076e6:	2303      	movs	r3, #3
 80076e8:	a83f      	add	r0, sp, #252	; 0xfc
 80076ea:	f7ff ff98 	bl	800761e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80076ee:	a810      	add	r0, sp, #64	; 0x40
 80076f0:	f003 ff02 	bl	800b4f8 <StoreNetwork::StoreNetwork()>
 80076f4:	ab11      	add	r3, sp, #68	; 0x44
 80076f6:	a910      	add	r1, sp, #64	; 0x40
 80076f8:	a855      	add	r0, sp, #340	; 0x154
 80076fa:	9382      	str	r3, [sp, #520]	; 0x208
 80076fc:	f005 fb6c 	bl	800cdd8 <Network::Init(NetworkParamsStore*)>
 8007700:	a855      	add	r0, sp, #340	; 0x154
 8007702:	f005 fc99 	bl	800d038 <Network::Print()>
 8007706:	a806      	add	r0, sp, #24
 8007708:	f004 ff48 	bl	800c59c <MDNS::MDNS()>
 800770c:	a806      	add	r0, sp, #24
 800770e:	f005 f809 	bl	800c724 <MDNS::Start()>
 8007712:	f642 1305 	movw	r3, #10501	; 0x2905
 8007716:	4621      	mov	r1, r4
 8007718:	4a96      	ldr	r2, [pc, #600]	; (8007974 <main+0x304>)
 800771a:	e9cd 4400 	strd	r4, r4, [sp]
 800771e:	a806      	add	r0, sp, #24
 8007720:	f005 f96c 	bl	800c9fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007724:	4b94      	ldr	r3, [pc, #592]	; (8007978 <main+0x308>)
 8007726:	4621      	mov	r1, r4
 8007728:	4a94      	ldr	r2, [pc, #592]	; (800797c <main+0x30c>)
 800772a:	e9cd 5300 	strd	r5, r3, [sp]
 800772e:	a806      	add	r0, sp, #24
 8007730:	2350      	movs	r3, #80	; 0x50
 8007732:	f005 f963 	bl	800c9fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007736:	a806      	add	r0, sp, #24
 8007738:	f005 faa6 	bl	800cc88 <MDNS::Print()>
 800773c:	2303      	movs	r3, #3
 800773e:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8007742:	498f      	ldr	r1, [pc, #572]	; (8007980 <main+0x310>)
 8007744:	a83f      	add	r0, sp, #252	; 0xfc
 8007746:	f7ff ff6a 	bl	800761e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800774a:	a807      	add	r0, sp, #28
 800774c:	f003 fe28 	bl	800b3a0 <StoreE131::StoreE131()>
 8007750:	a907      	add	r1, sp, #28
 8007752:	a823      	add	r0, sp, #140	; 0x8c
 8007754:	f001 f9b8 	bl	8008ac8 <E131Params::E131Params(E131ParamsStore*)>
 8007758:	a887      	add	r0, sp, #540	; 0x21c
 800775a:	f000 fb53 	bl	8007e04 <E131Bridge::E131Bridge()>
 800775e:	a823      	add	r0, sp, #140	; 0x8c
 8007760:	f001 f9d2 	bl	8008b08 <E131Params::Load()>
 8007764:	b130      	cbz	r0, 8007774 <main+0x104>
 8007766:	a823      	add	r0, sp, #140	; 0x8c
 8007768:	a987      	add	r1, sp, #540	; 0x21c
 800776a:	f001 fb9e 	bl	8008eaa <E131Params::Set(E131Bridge*)>
 800776e:	a823      	add	r0, sp, #140	; 0x8c
 8007770:	f001 fbb7 	bl	8008ee2 <E131Params::Dump()>
 8007774:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8007776:	06da      	lsls	r2, r3, #27
 8007778:	d509      	bpl.n	800778e <main+0x11e>
 800777a:	f89d 20aa 	ldrb.w	r2, [sp, #170]	; 0xaa
 800777e:	2100      	movs	r1, #0
 8007780:	f8bd 3097 	ldrh.w	r3, [sp, #151]	; 0x97
 8007784:	f002 0201 	and.w	r2, r2, #1
 8007788:	a887      	add	r0, sp, #540	; 0x21c
 800778a:	f000 fbc9 	bl	8007f20 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800778e:	a808      	add	r0, sp, #32
 8007790:	f003 fdd2 	bl	800b338 <StoreDmxSend::StoreDmxSend()>
 8007794:	a908      	add	r1, sp, #32
 8007796:	a812      	add	r0, sp, #72	; 0x48
 8007798:	f001 fc84 	bl	80090a4 <DmxParams::DmxParams(DmxParamsStore*)>
 800779c:	a81c      	add	r0, sp, #112	; 0x70
 800779e:	f002 f891 	bl	80098c4 <Dmx::Dmx()>
 80077a2:	a812      	add	r0, sp, #72	; 0x48
 80077a4:	f001 fc8a 	bl	80090bc <DmxParams::Load()>
 80077a8:	b130      	cbz	r0, 80077b8 <main+0x148>
 80077aa:	a812      	add	r0, sp, #72	; 0x48
 80077ac:	f001 fdd2 	bl	8009354 <DmxParams::Dump()>
 80077b0:	a91c      	add	r1, sp, #112	; 0x70
 80077b2:	a812      	add	r0, sp, #72	; 0x48
 80077b4:	f001 fda4 	bl	8009300 <DmxParams::Set(Dmx*)>
 80077b8:	4b72      	ldr	r3, [pc, #456]	; (8007984 <main+0x314>)
 80077ba:	ac09      	add	r4, sp, #36	; 0x24
 80077bc:	4620      	mov	r0, r4
 80077be:	9309      	str	r3, [sp, #36]	; 0x24
 80077c0:	f001 fc16 	bl	8008ff0 <DmxSend::Print()>
 80077c4:	f89d 5727 	ldrb.w	r5, [sp, #1831]	; 0x727
 80077c8:	b165      	cbz	r5, 80077e4 <main+0x174>
 80077ca:	2001      	movs	r0, #1
 80077cc:	9488      	str	r4, [sp, #544]	; 0x220
 80077ce:	f007 fee1 	bl	800f594 <operator new(unsigned int)>
 80077d2:	4b6d      	ldr	r3, [pc, #436]	; (8007988 <main+0x318>)
 80077d4:	4605      	mov	r5, r0
 80077d6:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80077da:	6818      	ldr	r0, [r3, #0]
 80077dc:	f005 fad4 	bl	800cd88 <Network::Begin(unsigned short)>
 80077e0:	4b6a      	ldr	r3, [pc, #424]	; (800798c <main+0x31c>)
 80077e2:	6018      	str	r0, [r3, #0]
 80077e4:	ac0a      	add	r4, sp, #40	; 0x28
 80077e6:	4620      	mov	r0, r4
 80077e8:	f000 f9dc 	bl	8007ba4 <DmxInput::DmxInput()>
 80077ec:	f89d 3726 	ldrb.w	r3, [sp, #1830]	; 0x726
 80077f0:	b103      	cbz	r3, 80077f4 <main+0x184>
 80077f2:	948c      	str	r4, [sp, #560]	; 0x230
 80077f4:	a887      	add	r0, sp, #540	; 0x21c
 80077f6:	f001 f8b1 	bl	800895c <E131Bridge::Print()>
 80077fa:	f89d 30aa 	ldrb.w	r3, [sp, #170]	; 0xaa
 80077fe:	4a64      	ldr	r2, [pc, #400]	; (8007990 <main+0x320>)
 8007800:	f013 0f01 	tst.w	r3, #1
 8007804:	4b63      	ldr	r3, [pc, #396]	; (8007994 <main+0x324>)
 8007806:	4964      	ldr	r1, [pc, #400]	; (8007998 <main+0x328>)
 8007808:	bf18      	it	ne
 800780a:	461a      	movne	r2, r3
 800780c:	a83f      	add	r0, sp, #252	; 0xfc
 800780e:	f006 fcb7 	bl	800e180 <DisplayUdf::SetTitle(char const*, ...)>
 8007812:	2202      	movs	r2, #2
 8007814:	a83f      	add	r0, sp, #252	; 0xfc
 8007816:	4611      	mov	r1, r2
 8007818:	f006 fe08 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800781c:	2207      	movs	r2, #7
 800781e:	2103      	movs	r1, #3
 8007820:	a83f      	add	r0, sp, #252	; 0xfc
 8007822:	f006 fe03 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007826:	2203      	movs	r2, #3
 8007828:	2104      	movs	r1, #4
 800782a:	a83f      	add	r0, sp, #252	; 0xfc
 800782c:	f006 fdfe 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007830:	2208      	movs	r2, #8
 8007832:	2105      	movs	r1, #5
 8007834:	a83f      	add	r0, sp, #252	; 0xfc
 8007836:	f006 fdf9 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800783a:	2205      	movs	r2, #5
 800783c:	2106      	movs	r1, #6
 800783e:	a83f      	add	r0, sp, #252	; 0xfc
 8007840:	f006 fdf4 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007844:	a80b      	add	r0, sp, #44	; 0x2c
 8007846:	f003 fd43 	bl	800b2d0 <StoreDisplayUdf::StoreDisplayUdf()>
 800784a:	a90b      	add	r1, sp, #44	; 0x2c
 800784c:	a835      	add	r0, sp, #212	; 0xd4
 800784e:	f006 fe2f 	bl	800e4b0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8007852:	a835      	add	r0, sp, #212	; 0xd4
 8007854:	f006 fe39 	bl	800e4ca <DisplayUdfParams::Load()>
 8007858:	b130      	cbz	r0, 8007868 <main+0x1f8>
 800785a:	a835      	add	r0, sp, #212	; 0xd4
 800785c:	a93f      	add	r1, sp, #252	; 0xfc
 800785e:	f006 ff6a 	bl	800e736 <DisplayUdfParams::Set(DisplayUdf*)>
 8007862:	a835      	add	r0, sp, #212	; 0xd4
 8007864:	f006 ff9a 	bl	800e79c <DisplayUdfParams::Dump()>
 8007868:	a987      	add	r1, sp, #540	; 0x21c
 800786a:	a83f      	add	r0, sp, #252	; 0xfc
 800786c:	f006 ff98 	bl	800e7a0 <DisplayUdf::Show(E131Bridge*)>
 8007870:	f89d 30aa 	ldrb.w	r3, [sp, #170]	; 0xaa
 8007874:	2200      	movs	r2, #0
 8007876:	07db      	lsls	r3, r3, #31
 8007878:	bf54      	ite	pl
 800787a:	f89d 3726 	ldrbpl.w	r3, [sp, #1830]	; 0x726
 800787e:	f89d 3727 	ldrbmi.w	r3, [sp, #1831]	; 0x727
 8007882:	2101      	movs	r1, #1
 8007884:	f20d 707c 	addw	r0, sp, #1916	; 0x77c
 8007888:	f002 fa98 	bl	8009dbc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 800788c:	a80c      	add	r0, sp, #48	; 0x30
 800788e:	f003 fe69 	bl	800b564 <StoreRemoteConfig::StoreRemoteConfig()>
 8007892:	a90c      	add	r1, sp, #48	; 0x30
 8007894:	a82c      	add	r0, sp, #176	; 0xb0
 8007896:	f002 fd59 	bl	800a34c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800789a:	a82c      	add	r0, sp, #176	; 0xb0
 800789c:	f002 fd60 	bl	800a360 <RemoteConfigParams::Load()>
 80078a0:	b138      	cbz	r0, 80078b2 <main+0x242>
 80078a2:	a82c      	add	r0, sp, #176	; 0xb0
 80078a4:	f20d 717c 	addw	r1, sp, #1916	; 0x77c
 80078a8:	f002 fe81 	bl	800a5ae <RemoteConfigParams::Set(RemoteConfig*)>
 80078ac:	a82c      	add	r0, sp, #176	; 0xb0
 80078ae:	f002 fe9e 	bl	800a5ee <RemoteConfigParams::Dump()>
 80078b2:	a805      	add	r0, sp, #20
 80078b4:	f003 fc88 	bl	800b1c8 <SpiFlashStore::Flash()>
 80078b8:	2800      	cmp	r0, #0
 80078ba:	d1fa      	bne.n	80078b2 <main+0x242>
 80078bc:	2303      	movs	r3, #3
 80078be:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80078c2:	4936      	ldr	r1, [pc, #216]	; (800799c <main+0x32c>)
 80078c4:	a83f      	add	r0, sp, #252	; 0xfc
 80078c6:	f7ff feaa 	bl	800761e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80078ca:	a887      	add	r0, sp, #540	; 0x21c
 80078cc:	f000 fa2a 	bl	8007d24 <E131Bridge::Start()>
 80078d0:	2302      	movs	r3, #2
 80078d2:	f248 0280 	movw	r2, #32896	; 0x8080
 80078d6:	4932      	ldr	r1, [pc, #200]	; (80079a0 <main+0x330>)
 80078d8:	a83f      	add	r0, sp, #252	; 0xfc
 80078da:	f7ff fea0 	bl	800761e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80078de:	2102      	movs	r1, #2
 80078e0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80078e4:	f008 fc48 	bl	8010178 <fwdgt_config>
 80078e8:	2801      	cmp	r0, #1
 80078ea:	bf0c      	ite	eq
 80078ec:	2301      	moveq	r3, #1
 80078ee:	2300      	movne	r3, #0
 80078f0:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 80078f4:	d101      	bne.n	80078fa <main+0x28a>
 80078f6:	f008 fc2f 	bl	8010158 <fwdgt_enable>
 80078fa:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 80079a4 <main+0x334>
 80078fe:	4f2a      	ldr	r7, [pc, #168]	; (80079a8 <main+0x338>)
 8007900:	f008 fc32 	bl	8010168 <fwdgt_counter_reload>
 8007904:	f004 f810 	bl	800b928 <net_handle>
 8007908:	a887      	add	r0, sp, #540	; 0x21c
 800790a:	f000 fdfb 	bl	8008504 <E131Bridge::Run()>
 800790e:	f20d 707c 	addw	r0, sp, #1916	; 0x77c
 8007912:	f002 fbef 	bl	800a0f4 <RemoteConfig::Run()>
 8007916:	a805      	add	r0, sp, #20
 8007918:	f003 fc56 	bl	800b1c8 <SpiFlashStore::Flash()>
 800791c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800791e:	2a00      	cmp	r2, #0
 8007920:	d044      	beq.n	80079ac <main+0x33c>
 8007922:	f8d9 3000 	ldr.w	r3, [r9]
 8007926:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007928:	1a5b      	subs	r3, r3, r1
 800792a:	429a      	cmp	r2, r3
 800792c:	d83e      	bhi.n	80079ac <main+0x33c>
 800792e:	f8d9 3000 	ldr.w	r3, [r9]
 8007932:	931b      	str	r3, [sp, #108]	; 0x6c
 8007934:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007936:	2b01      	cmp	r3, #1
 8007938:	f083 0201 	eor.w	r2, r3, #1
 800793c:	bf18      	it	ne
 800793e:	2301      	movne	r3, #1
 8007940:	921a      	str	r2, [sp, #104]	; 0x68
 8007942:	bf14      	ite	ne
 8007944:	f8c8 3010 	strne.w	r3, [r8, #16]
 8007948:	f8c8 3014 	streq.w	r3, [r8, #20]
 800794c:	e02e      	b.n	80079ac <main+0x33c>
 800794e:	bf00      	nop
 8007950:	08011ac5 	stmdaeq	r1, {r0, r2, r6, r7, r9, fp, ip}
 8007954:	08011abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip}
 8007958:	08011b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, ip}
 800795c:	40011000 	andmi	r1, r1, r0
 8007960:	08011ad1 	stmdaeq	r1, {r0, r4, r6, r7, r9, fp, ip}
 8007964:	08011b7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip}
 8007968:	08011b68 	stmdaeq	r1, {r3, r5, r6, r8, r9, fp, ip}
 800796c:	20009acc 	andcs	r9, r0, ip, asr #21
 8007970:	08013043 	stmdaeq	r1, {r0, r1, r6, ip, sp}
 8007974:	08011b06 	stmdaeq	r1, {r1, r2, r8, r9, fp, ip}
 8007978:	08011b16 	stmdaeq	r1, {r1, r2, r4, r8, r9, fp, ip}
 800797c:	08011b0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, fp, ip}
 8007980:	08011cac 	stmdaeq	r1, {r2, r3, r5, r7, sl, fp, ip}
 8007984:	08011e54 	stmdaeq	r1, {r2, r4, r6, r9, sl, fp, ip}
 8007988:	20009494 	mulcs	r0, r4, r4
 800798c:	20000004 	andcs	r0, r0, r4
 8007990:	08011d1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, fp, ip}
 8007994:	08011d13 	stmdaeq	r1, {r0, r1, r4, r8, sl, fp, ip}
 8007998:	08011b2a 	stmdaeq	r1, {r1, r3, r5, r8, r9, fp, ip}
 800799c:	08011c98 	stmdaeq	r1, {r3, r4, r7, sl, fp, ip}
 80079a0:	08011cc3 	stmdaeq	r1, {r0, r1, r6, r7, sl, fp, ip}
 80079a4:	20009bd4 	ldrdcs	r9, [r0], -r4
 80079a8:	20000000 	andcs	r0, r0, r0
 80079ac:	9a44      	ldr	r2, [sp, #272]	; 0x110
 80079ae:	b182      	cbz	r2, 80079d2 <main+0x362>
 80079b0:	f89d 310c 	ldrb.w	r3, [sp, #268]	; 0x10c
 80079b4:	b96b      	cbnz	r3, 80079d2 <main+0x362>
 80079b6:	f8d9 3000 	ldr.w	r3, [r9]
 80079ba:	9940      	ldr	r1, [sp, #256]	; 0x100
 80079bc:	1a5b      	subs	r3, r3, r1
 80079be:	429a      	cmp	r2, r3
 80079c0:	d207      	bcs.n	80079d2 <main+0x362>
 80079c2:	9845      	ldr	r0, [sp, #276]	; 0x114
 80079c4:	b128      	cbz	r0, 80079d2 <main+0x362>
 80079c6:	2101      	movs	r1, #1
 80079c8:	6803      	ldr	r3, [r0, #0]
 80079ca:	f88d 110c 	strb.w	r1, [sp, #268]	; 0x10c
 80079ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80079d0:	4798      	blx	r3
 80079d2:	b385      	cbz	r5, 8007a36 <main+0x3c6>
 80079d4:	f10d 031a 	add.w	r3, sp, #26
 80079d8:	4e3e      	ldr	r6, [pc, #248]	; (8007ad4 <main+0x464>)
 80079da:	483f      	ldr	r0, [pc, #252]	; (8007ad8 <main+0x468>)
 80079dc:	9300      	str	r3, [sp, #0]
 80079de:	2210      	movs	r2, #16
 80079e0:	4631      	mov	r1, r6
 80079e2:	7800      	ldrb	r0, [r0, #0]
 80079e4:	ab0d      	add	r3, sp, #52	; 0x34
 80079e6:	f004 fca3 	bl	800c330 <udp_recv>
 80079ea:	280a      	cmp	r0, #10
 80079ec:	4604      	mov	r4, r0
 80079ee:	d922      	bls.n	8007a36 <main+0x3c6>
 80079f0:	2204      	movs	r2, #4
 80079f2:	4631      	mov	r1, r6
 80079f4:	4839      	ldr	r0, [pc, #228]	; (8007adc <main+0x46c>)
 80079f6:	f7ff fd6a 	bl	80074ce <memcmp>
 80079fa:	b9e0      	cbnz	r0, 8007a36 <main+0x3c6>
 80079fc:	4426      	add	r6, r4
 80079fe:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8007a02:	2b0a      	cmp	r3, #10
 8007a04:	d103      	bne.n	8007a0e <main+0x39e>
 8007a06:	3c01      	subs	r4, #1
 8007a08:	b2a4      	uxth	r4, r4
 8007a0a:	2c0a      	cmp	r4, #10
 8007a0c:	d04b      	beq.n	8007aa6 <main+0x436>
 8007a0e:	2c0e      	cmp	r4, #14
 8007a10:	d847      	bhi.n	8007aa2 <main+0x432>
 8007a12:	2206      	movs	r2, #6
 8007a14:	6839      	ldr	r1, [r7, #0]
 8007a16:	4832      	ldr	r0, [pc, #200]	; (8007ae0 <main+0x470>)
 8007a18:	f7ff fd59 	bl	80074ce <memcmp>
 8007a1c:	2800      	cmp	r0, #0
 8007a1e:	d142      	bne.n	8007aa6 <main+0x436>
 8007a20:	2104      	movs	r1, #4
 8007a22:	4830      	ldr	r0, [pc, #192]	; (8007ae4 <main+0x474>)
 8007a24:	f7ff fd65 	bl	80074f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007a28:	285b      	cmp	r0, #91	; 0x5b
 8007a2a:	4601      	mov	r1, r0
 8007a2c:	d903      	bls.n	8007a36 <main+0x3c6>
 8007a2e:	4b2e      	ldr	r3, [pc, #184]	; (8007ae8 <main+0x478>)
 8007a30:	6818      	ldr	r0, [r3, #0]
 8007a32:	f002 f85b 	bl	8009aec <Dmx::SetDmxBreakTime(unsigned int)>
 8007a36:	a806      	add	r0, sp, #24
 8007a38:	f005 f902 	bl	800cc40 <MDNS::Run()>
 8007a3c:	e760      	b.n	8007900 <main+0x290>
 8007a3e:	2c0c      	cmp	r4, #12
 8007a40:	d915      	bls.n	8007a6e <main+0x3fe>
 8007a42:	2c0e      	cmp	r4, #14
 8007a44:	d82a      	bhi.n	8007a9c <main+0x42c>
 8007a46:	2208      	movs	r2, #8
 8007a48:	6839      	ldr	r1, [r7, #0]
 8007a4a:	4828      	ldr	r0, [pc, #160]	; (8007aec <main+0x47c>)
 8007a4c:	f7ff fd3f 	bl	80074ce <memcmp>
 8007a50:	bb20      	cbnz	r0, 8007a9c <main+0x42c>
 8007a52:	2102      	movs	r1, #2
 8007a54:	4826      	ldr	r0, [pc, #152]	; (8007af0 <main+0x480>)
 8007a56:	f7ff fd4c 	bl	80074f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007a5a:	4601      	mov	r1, r0
 8007a5c:	b110      	cbz	r0, 8007a64 <main+0x3f4>
 8007a5e:	4b25      	ldr	r3, [pc, #148]	; (8007af4 <main+0x484>)
 8007a60:	fbb3 f1f0 	udiv	r1, r3, r0
 8007a64:	4b20      	ldr	r3, [pc, #128]	; (8007ae8 <main+0x478>)
 8007a66:	6818      	ldr	r0, [r3, #0]
 8007a68:	f002 f810 	bl	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8007a6c:	e7e3      	b.n	8007a36 <main+0x3c6>
 8007a6e:	2c0a      	cmp	r4, #10
 8007a70:	d0e1      	beq.n	8007a36 <main+0x3c6>
 8007a72:	2206      	movs	r2, #6
 8007a74:	6839      	ldr	r1, [r7, #0]
 8007a76:	4820      	ldr	r0, [pc, #128]	; (8007af8 <main+0x488>)
 8007a78:	f7ff fd29 	bl	80074ce <memcmp>
 8007a7c:	2800      	cmp	r0, #0
 8007a7e:	d1da      	bne.n	8007a36 <main+0x3c6>
 8007a80:	2103      	movs	r1, #3
 8007a82:	4818      	ldr	r0, [pc, #96]	; (8007ae4 <main+0x474>)
 8007a84:	f7ff fd35 	bl	80074f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007a88:	1e83      	subs	r3, r0, #2
 8007a8a:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8007a8e:	d8d2      	bhi.n	8007a36 <main+0x3c6>
 8007a90:	4b15      	ldr	r3, [pc, #84]	; (8007ae8 <main+0x478>)
 8007a92:	b281      	uxth	r1, r0
 8007a94:	6818      	ldr	r0, [r3, #0]
 8007a96:	f002 f83d 	bl	8009b14 <Dmx::SetDmxSlots(unsigned short)>
 8007a9a:	e7cc      	b.n	8007a36 <main+0x3c6>
 8007a9c:	2c0d      	cmp	r4, #13
 8007a9e:	d0e8      	beq.n	8007a72 <main+0x402>
 8007aa0:	e7c9      	b.n	8007a36 <main+0x3c6>
 8007aa2:	2c10      	cmp	r4, #16
 8007aa4:	d8c7      	bhi.n	8007a36 <main+0x3c6>
 8007aa6:	2204      	movs	r2, #4
 8007aa8:	6839      	ldr	r1, [r7, #0]
 8007aaa:	4814      	ldr	r0, [pc, #80]	; (8007afc <main+0x48c>)
 8007aac:	f7ff fd0f 	bl	80074ce <memcmp>
 8007ab0:	2800      	cmp	r0, #0
 8007ab2:	d1c4      	bne.n	8007a3e <main+0x3ce>
 8007ab4:	2107      	movs	r1, #7
 8007ab6:	4812      	ldr	r0, [pc, #72]	; (8007b00 <main+0x490>)
 8007ab8:	f7ff fd1b 	bl	80074f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007abc:	4b11      	ldr	r3, [pc, #68]	; (8007b04 <main+0x494>)
 8007abe:	f1a0 020c 	sub.w	r2, r0, #12
 8007ac2:	429a      	cmp	r2, r3
 8007ac4:	4601      	mov	r1, r0
 8007ac6:	d8b6      	bhi.n	8007a36 <main+0x3c6>
 8007ac8:	4b07      	ldr	r3, [pc, #28]	; (8007ae8 <main+0x478>)
 8007aca:	6818      	ldr	r0, [r3, #0]
 8007acc:	f002 f818 	bl	8009b00 <Dmx::SetDmxMabTime(unsigned int)>
 8007ad0:	e7b1      	b.n	8007a36 <main+0x3c6>
 8007ad2:	bf00      	nop
 8007ad4:	2000070d 	andcs	r0, r0, sp, lsl #14
 8007ad8:	20000004 	andcs	r0, r0, r4
 8007adc:	08011b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, ip}
 8007ae0:	08011b41 	stmdaeq	r1, {r0, r6, r8, r9, fp, ip}
 8007ae4:	20000717 	andcs	r0, r0, r7, lsl r7
 8007ae8:	20000b4c 	andcs	r0, r0, ip, asr #22
 8007aec:	08011b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, ip}
 8007af0:	20000719 	andcs	r0, r0, r9, lsl r7
 8007af4:	000f4240 	andeq	r4, pc, r0, asr #4
 8007af8:	08011b56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, fp, ip}
 8007afc:	08011b48 	stmdaeq	r1, {r3, r6, r8, r9, fp, ip}
 8007b00:	20000715 	andcs	r0, r0, r5, lsl r7
 8007b04:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08007b08 <DmxInput::~DmxInput()>:
 8007b08:	4770      	bx	lr
	...

08007b0c <DmxInput::Start(unsigned int)>:
 8007b0c:	2301      	movs	r3, #1
 8007b0e:	4808      	ldr	r0, [pc, #32]	; (8007b30 <DmxInput::Start(unsigned int)+0x24>)
 8007b10:	fa03 f101 	lsl.w	r1, r3, r1
 8007b14:	7802      	ldrb	r2, [r0, #0]
 8007b16:	ea31 0c02 	bics.w	ip, r1, r2
 8007b1a:	d007      	beq.n	8007b2c <DmxInput::Start(unsigned int)+0x20>
 8007b1c:	430a      	orrs	r2, r1
 8007b1e:	7002      	strb	r2, [r0, #0]
 8007b20:	4804      	ldr	r0, [pc, #16]	; (8007b34 <DmxInput::Start(unsigned int)+0x28>)
 8007b22:	461a      	mov	r2, r3
 8007b24:	2100      	movs	r1, #0
 8007b26:	6800      	ldr	r0, [r0, #0]
 8007b28:	f001 be9e 	b.w	8009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8007b2c:	4770      	bx	lr
 8007b2e:	bf00      	nop
 8007b30:	200000f8 	strdcs	r0, [r0], -r8
 8007b34:	20000b4c 	andcs	r0, r0, ip, asr #22

08007b38 <DmxInput::Stop(unsigned int)>:
 8007b38:	2201      	movs	r2, #1
 8007b3a:	4808      	ldr	r0, [pc, #32]	; (8007b5c <DmxInput::Stop(unsigned int)+0x24>)
 8007b3c:	fa02 f101 	lsl.w	r1, r2, r1
 8007b40:	7803      	ldrb	r3, [r0, #0]
 8007b42:	ea31 0c03 	bics.w	ip, r1, r3
 8007b46:	d108      	bne.n	8007b5a <DmxInput::Stop(unsigned int)+0x22>
 8007b48:	ea23 0301 	bic.w	r3, r3, r1
 8007b4c:	7003      	strb	r3, [r0, #0]
 8007b4e:	2300      	movs	r3, #0
 8007b50:	4803      	ldr	r0, [pc, #12]	; (8007b60 <DmxInput::Stop(unsigned int)+0x28>)
 8007b52:	4619      	mov	r1, r3
 8007b54:	6800      	ldr	r0, [r0, #0]
 8007b56:	f001 be87 	b.w	8009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8007b5a:	4770      	bx	lr
 8007b5c:	200000f8 	strdcs	r0, [r0], -r8
 8007b60:	20000b4c 	andcs	r0, r0, ip, asr #22

08007b64 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8007b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b66:	4f0b      	ldr	r7, [pc, #44]	; (8007b94 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x30>)
 8007b68:	2100      	movs	r1, #0
 8007b6a:	6838      	ldr	r0, [r7, #0]
 8007b6c:	461e      	mov	r6, r3
 8007b6e:	4615      	mov	r5, r2
 8007b70:	f002 f808 	bl	8009b84 <Dmx::GetDmxAvailable(unsigned int)>
 8007b74:	2100      	movs	r1, #0
 8007b76:	4604      	mov	r4, r0
 8007b78:	6838      	ldr	r0, [r7, #0]
 8007b7a:	f002 f817 	bl	8009bac <Dmx::GetUpdatesPerSecond(unsigned int)>
 8007b7e:	6030      	str	r0, [r6, #0]
 8007b80:	b12c      	cbz	r4, 8007b8e <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2a>
 8007b82:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 8007b86:	3301      	adds	r3, #1
 8007b88:	4620      	mov	r0, r4
 8007b8a:	602b      	str	r3, [r5, #0]
 8007b8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b8e:	4623      	mov	r3, r4
 8007b90:	e7fa      	b.n	8007b88 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x24>
 8007b92:	bf00      	nop
 8007b94:	20000b4c 	andcs	r0, r0, ip, asr #22

08007b98 <DmxInput::~DmxInput()>:
 8007b98:	b510      	push	{r4, lr}
 8007b9a:	4604      	mov	r4, r0
 8007b9c:	f007 fcf6 	bl	800f58c <operator delete(void*)>
 8007ba0:	4620      	mov	r0, r4
 8007ba2:	bd10      	pop	{r4, pc}

08007ba4 <DmxInput::DmxInput()>:
 8007ba4:	b510      	push	{r4, lr}
 8007ba6:	4604      	mov	r4, r0
 8007ba8:	4b03      	ldr	r3, [pc, #12]	; (8007bb8 <DmxInput::DmxInput()+0x14>)
 8007baa:	2100      	movs	r1, #0
 8007bac:	6003      	str	r3, [r0, #0]
 8007bae:	f7ff ffc3 	bl	8007b38 <DmxInput::Stop(unsigned int)>
 8007bb2:	4620      	mov	r0, r4
 8007bb4:	bd10      	pop	{r4, pc}
 8007bb6:	bf00      	nop
 8007bb8:	08011b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip}

08007bbc <e131::universe_to_multicast_ip(unsigned short)>:
 8007bbc:	b513      	push	{r0, r1, r4, lr}
 8007bbe:	4604      	mov	r4, r0
 8007bc0:	a901      	add	r1, sp, #4
 8007bc2:	4806      	ldr	r0, [pc, #24]	; (8007bdc <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 8007bc4:	f007 fcea 	bl	800f59c <inet_aton>
 8007bc8:	9801      	ldr	r0, [sp, #4]
 8007bca:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 8007bce:	0224      	lsls	r4, r4, #8
 8007bd0:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8007bd4:	4320      	orrs	r0, r4
 8007bd6:	b002      	add	sp, #8
 8007bd8:	bd10      	pop	{r4, pc}
 8007bda:	bf00      	nop
 8007bdc:	08011bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, ip}

08007be0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 8007be0:	f240 6304 	movw	r3, #1540	; 0x604
 8007be4:	fb03 0101 	mla	r1, r3, r1, r0
 8007be8:	2300      	movs	r3, #0
 8007bea:	b510      	push	{r4, lr}
 8007bec:	4293      	cmp	r3, r2
 8007bee:	d00a      	beq.n	8007c06 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 8007bf0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007bf4:	3301      	adds	r3, #1
 8007bf6:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 8007bfa:	42a0      	cmp	r0, r4
 8007bfc:	bf38      	it	cc
 8007bfe:	4620      	movcc	r0, r4
 8007c00:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 8007c04:	e7f2      	b.n	8007bec <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 8007c06:	bd10      	pop	{r4, pc}

08007c08 <memset.constprop.0.isra.0>:
 8007c08:	2300      	movs	r3, #0
 8007c0a:	4401      	add	r1, r0
 8007c0c:	4288      	cmp	r0, r1
 8007c0e:	d002      	beq.n	8007c16 <memset.constprop.0.isra.0+0xe>
 8007c10:	f800 3b01 	strb.w	r3, [r0], #1
 8007c14:	e7fa      	b.n	8007c0c <memset.constprop.0.isra.0+0x4>
 8007c16:	4770      	bx	lr

08007c18 <memcpy.isra.0>:
 8007c18:	3801      	subs	r0, #1
 8007c1a:	440a      	add	r2, r1
 8007c1c:	4291      	cmp	r1, r2
 8007c1e:	d004      	beq.n	8007c2a <memcpy.isra.0+0x12>
 8007c20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007c24:	f800 3f01 	strb.w	r3, [r0, #1]!
 8007c28:	e7f8      	b.n	8007c1c <memcpy.isra.0+0x4>
 8007c2a:	4770      	bx	lr

08007c2c <lightset::Data::Get()>:
 8007c2c:	4b03      	ldr	r3, [pc, #12]	; (8007c3c <lightset::Data::Get()+0x10>)
 8007c2e:	4804      	ldr	r0, [pc, #16]	; (8007c40 <lightset::Data::Get()+0x14>)
 8007c30:	681a      	ldr	r2, [r3, #0]
 8007c32:	07d2      	lsls	r2, r2, #31
 8007c34:	bf5c      	itt	pl
 8007c36:	2201      	movpl	r2, #1
 8007c38:	601a      	strpl	r2, [r3, #0]
 8007c3a:	4770      	bx	lr
 8007c3c:	200000fc 	strdcs	r0, [r0], -ip
 8007c40:	20000100 	andcs	r0, r0, r0, lsl #2

08007c44 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8007c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c48:	4615      	mov	r5, r2
 8007c4a:	460f      	mov	r7, r1
 8007c4c:	4604      	mov	r4, r0
 8007c4e:	f7ff ffed 	bl	8007c2c <lightset::Data::Get()>
 8007c52:	4606      	mov	r6, r0
 8007c54:	f240 6004 	movw	r0, #1540	; 0x604
 8007c58:	4344      	muls	r4, r0
 8007c5a:	eb06 0804 	add.w	r8, r6, r4
 8007c5e:	462a      	mov	r2, r5
 8007c60:	4639      	mov	r1, r7
 8007c62:	4640      	mov	r0, r8
 8007c64:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c68:	f7ff ffd6 	bl	8007c18 <memcpy.isra.0>
 8007c6c:	462a      	mov	r2, r5
 8007c6e:	4639      	mov	r1, r7
 8007c70:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8007c74:	1930      	adds	r0, r6, r4
 8007c76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007c7a:	f7ff bfcd 	b.w	8007c18 <memcpy.isra.0>

08007c7e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8007c7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c82:	4680      	mov	r8, r0
 8007c84:	f240 6404 	movw	r4, #1540	; 0x604
 8007c88:	4615      	mov	r5, r2
 8007c8a:	460f      	mov	r7, r1
 8007c8c:	4699      	mov	r9, r3
 8007c8e:	f7ff ffcd 	bl	8007c2c <lightset::Data::Get()>
 8007c92:	fb04 f408 	mul.w	r4, r4, r8
 8007c96:	eb00 0a04 	add.w	sl, r0, r4
 8007c9a:	4606      	mov	r6, r0
 8007c9c:	462a      	mov	r2, r5
 8007c9e:	4639      	mov	r1, r7
 8007ca0:	4650      	mov	r0, sl
 8007ca2:	f7ff ffb9 	bl	8007c18 <memcpy.isra.0>
 8007ca6:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 8007caa:	f1b9 0f00 	cmp.w	r9, #0
 8007cae:	d106      	bne.n	8007cbe <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 8007cb0:	462a      	mov	r2, r5
 8007cb2:	4641      	mov	r1, r8
 8007cb4:	4630      	mov	r0, r6
 8007cb6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007cba:	f7ff bf91 	b.w	8007be0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8007cbe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007cc2:	462a      	mov	r2, r5
 8007cc4:	4639      	mov	r1, r7
 8007cc6:	1930      	adds	r0, r6, r4
 8007cc8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ccc:	f7ff bfa4 	b.w	8007c18 <memcpy.isra.0>

08007cd0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8007cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007cd4:	4616      	mov	r6, r2
 8007cd6:	4699      	mov	r9, r3
 8007cd8:	4680      	mov	r8, r0
 8007cda:	460f      	mov	r7, r1
 8007cdc:	f7ff ffa6 	bl	8007c2c <lightset::Data::Get()>
 8007ce0:	f240 6404 	movw	r4, #1540	; 0x604
 8007ce4:	4605      	mov	r5, r0
 8007ce6:	fb04 f408 	mul.w	r4, r4, r8
 8007cea:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8007cee:	4632      	mov	r2, r6
 8007cf0:	4639      	mov	r1, r7
 8007cf2:	4428      	add	r0, r5
 8007cf4:	f7ff ff90 	bl	8007c18 <memcpy.isra.0>
 8007cf8:	192b      	adds	r3, r5, r4
 8007cfa:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 8007cfe:	f1b9 0f00 	cmp.w	r9, #0
 8007d02:	d106      	bne.n	8007d12 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8007d04:	4632      	mov	r2, r6
 8007d06:	4641      	mov	r1, r8
 8007d08:	4628      	mov	r0, r5
 8007d0a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d0e:	f7ff bf67 	b.w	8007be0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8007d12:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007d16:	4632      	mov	r2, r6
 8007d18:	4639      	mov	r1, r7
 8007d1a:	1928      	adds	r0, r5, r4
 8007d1c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d20:	f7ff bf7a 	b.w	8007c18 <memcpy.isra.0>

08007d24 <E131Bridge::Start()>:
 8007d24:	6943      	ldr	r3, [r0, #20]
 8007d26:	b513      	push	{r0, r1, r4, lr}
 8007d28:	4604      	mov	r4, r0
 8007d2a:	b31b      	cbz	r3, 8007d74 <E131Bridge::Start()+0x50>
 8007d2c:	6983      	ldr	r3, [r0, #24]
 8007d2e:	b9cb      	cbnz	r3, 8007d64 <E131Bridge::Start()+0x40>
 8007d30:	a901      	add	r1, sp, #4
 8007d32:	4814      	ldr	r0, [pc, #80]	; (8007d84 <E131Bridge::Start()+0x60>)
 8007d34:	f007 fc32 	bl	800f59c <inet_aton>
 8007d38:	9b01      	ldr	r3, [sp, #4]
 8007d3a:	f240 207e 	movw	r0, #638	; 0x27e
 8007d3e:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8007d42:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8007d46:	6223      	str	r3, [r4, #32]
 8007d48:	f007 fc24 	bl	800f594 <operator new(unsigned int)>
 8007d4c:	61a0      	str	r0, [r4, #24]
 8007d4e:	4620      	mov	r0, r4
 8007d50:	f000 fd04 	bl	800875c <E131Bridge::FillDataPacket()>
 8007d54:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8007d58:	f007 fc1c 	bl	800f594 <operator new(unsigned int)>
 8007d5c:	61e0      	str	r0, [r4, #28]
 8007d5e:	4620      	mov	r0, r4
 8007d60:	f000 fc5c 	bl	800861c <E131Bridge::FillDiscoveryPacket()>
 8007d64:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8007d68:	b123      	cbz	r3, 8007d74 <E131Bridge::Start()+0x50>
 8007d6a:	6960      	ldr	r0, [r4, #20]
 8007d6c:	2100      	movs	r1, #0
 8007d6e:	6803      	ldr	r3, [r0, #0]
 8007d70:	689b      	ldr	r3, [r3, #8]
 8007d72:	4798      	blx	r3
 8007d74:	2102      	movs	r1, #2
 8007d76:	4b04      	ldr	r3, [pc, #16]	; (8007d88 <E131Bridge::Start()+0x64>)
 8007d78:	6818      	ldr	r0, [r3, #0]
 8007d7a:	b002      	add	sp, #8
 8007d7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d80:	f007 bb26 	b.w	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 8007d84:	08011bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, ip}
 8007d88:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

08007d8c <E131Bridge::Stop()>:
 8007d8c:	2301      	movs	r3, #1
 8007d8e:	b510      	push	{r4, lr}
 8007d90:	4604      	mov	r4, r0
 8007d92:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 8007d96:	6840      	ldr	r0, [r0, #4]
 8007d98:	b118      	cbz	r0, 8007da2 <E131Bridge::Stop()+0x16>
 8007d9a:	6803      	ldr	r3, [r0, #0]
 8007d9c:	2100      	movs	r1, #0
 8007d9e:	68db      	ldr	r3, [r3, #12]
 8007da0:	4798      	blx	r3
 8007da2:	f7ff ff43 	bl	8007c2c <lightset::Data::Get()>
 8007da6:	2100      	movs	r1, #0
 8007da8:	f8c0 1600 	str.w	r1, [r0, #1536]	; 0x600
 8007dac:	6960      	ldr	r0, [r4, #20]
 8007dae:	f884 1550 	strb.w	r1, [r4, #1360]	; 0x550
 8007db2:	b930      	cbnz	r0, 8007dc2 <E131Bridge::Stop()+0x36>
 8007db4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007db8:	4b06      	ldr	r3, [pc, #24]	; (8007dd4 <E131Bridge::Stop()+0x48>)
 8007dba:	2100      	movs	r1, #0
 8007dbc:	6818      	ldr	r0, [r3, #0]
 8007dbe:	f007 bb07 	b.w	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 8007dc2:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	d0f4      	beq.n	8007db4 <E131Bridge::Stop()+0x28>
 8007dca:	6803      	ldr	r3, [r0, #0]
 8007dcc:	68db      	ldr	r3, [r3, #12]
 8007dce:	4798      	blx	r3
 8007dd0:	e7f0      	b.n	8007db4 <E131Bridge::Stop()+0x28>
 8007dd2:	bf00      	nop
 8007dd4:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

08007dd8 <E131Bridge::SetSourceName(char const*)>:
 8007dd8:	223f      	movs	r2, #63	; 0x3f
 8007dda:	b510      	push	{r4, lr}
 8007ddc:	f100 0334 	add.w	r3, r0, #52	; 0x34
 8007de0:	3901      	subs	r1, #1
 8007de2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007de6:	b92c      	cbnz	r4, 8007df4 <E131Bridge::SetSourceName(char const*)+0x1c>
 8007de8:	441a      	add	r2, r3
 8007dea:	4293      	cmp	r3, r2
 8007dec:	d006      	beq.n	8007dfc <E131Bridge::SetSourceName(char const*)+0x24>
 8007dee:	f803 4b01 	strb.w	r4, [r3], #1
 8007df2:	e7fa      	b.n	8007dea <E131Bridge::SetSourceName(char const*)+0x12>
 8007df4:	3a01      	subs	r2, #1
 8007df6:	f803 4b01 	strb.w	r4, [r3], #1
 8007dfa:	d1f2      	bne.n	8007de2 <E131Bridge::SetSourceName(char const*)+0xa>
 8007dfc:	2300      	movs	r3, #0
 8007dfe:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 8007e02:	bd10      	pop	{r4, pc}

08007e04 <E131Bridge::E131Bridge()>:
 8007e04:	2300      	movs	r3, #0
 8007e06:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007e0a:	b530      	push	{r4, r5, lr}
 8007e0c:	e9c0 2300 	strd	r2, r3, [r0]
 8007e10:	2201      	movs	r2, #1
 8007e12:	4604      	mov	r4, r0
 8007e14:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007e18:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8007e1c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8007e20:	6743      	str	r3, [r0, #116]	; 0x74
 8007e22:	4b1a      	ldr	r3, [pc, #104]	; (8007e8c <E131Bridge::E131Bridge()+0x88>)
 8007e24:	b093      	sub	sp, #76	; 0x4c
 8007e26:	6018      	str	r0, [r3, #0]
 8007e28:	7202      	strb	r2, [r0, #8]
 8007e2a:	2144      	movs	r1, #68	; 0x44
 8007e2c:	f500 60a2 	add.w	r0, r0, #1296	; 0x510
 8007e30:	f7ff feea 	bl	8007c08 <memset.constprop.0.isra.0>
 8007e34:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8007e38:	210c      	movs	r1, #12
 8007e3a:	f7ff fee5 	bl	8007c08 <memset.constprop.0.isra.0>
 8007e3e:	2364      	movs	r3, #100	; 0x64
 8007e40:	4d13      	ldr	r5, [pc, #76]	; (8007e90 <E131Bridge::E131Bridge()+0x8c>)
 8007e42:	f884 355d 	strb.w	r3, [r4, #1373]	; 0x55d
 8007e46:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 8007e4a:	211c      	movs	r1, #28
 8007e4c:	f7ff fedc 	bl	8007c08 <memset.constprop.0.isra.0>
 8007e50:	682b      	ldr	r3, [r5, #0]
 8007e52:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 8007e56:	4a0f      	ldr	r2, [pc, #60]	; (8007e94 <E131Bridge::E131Bridge()+0x90>)
 8007e58:	331c      	adds	r3, #28
 8007e5a:	9200      	str	r2, [sp, #0]
 8007e5c:	2140      	movs	r1, #64	; 0x40
 8007e5e:	4a0e      	ldr	r2, [pc, #56]	; (8007e98 <E131Bridge::E131Bridge()+0x94>)
 8007e60:	a802      	add	r0, sp, #8
 8007e62:	f007 feb7 	bl	800fbd4 <snprintf>
 8007e66:	4620      	mov	r0, r4
 8007e68:	a902      	add	r1, sp, #8
 8007e6a:	f7ff ffb5 	bl	8007dd8 <E131Bridge::SetSourceName(char const*)>
 8007e6e:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8007e72:	6828      	ldr	r0, [r5, #0]
 8007e74:	f004 ff88 	bl	800cd88 <Network::Begin(unsigned short)>
 8007e78:	4621      	mov	r1, r4
 8007e7a:	4b08      	ldr	r3, [pc, #32]	; (8007e9c <E131Bridge::E131Bridge()+0x98>)
 8007e7c:	f841 0b24 	str.w	r0, [r1], #36
 8007e80:	6818      	ldr	r0, [r3, #0]
 8007e82:	f007 fb29 	bl	800f4d8 <Hardware::GetUuid(unsigned char*)>
 8007e86:	4620      	mov	r0, r4
 8007e88:	b013      	add	sp, #76	; 0x4c
 8007e8a:	bd30      	pop	{r4, r5, pc}
 8007e8c:	20000704 	andcs	r0, r0, r4, lsl #14
 8007e90:	20009494 	mulcs	r0, r4, r4
 8007e94:	08011bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip}
 8007e98:	08011bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, ip}
 8007e9c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08007ea0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 8007ea0:	b538      	push	{r3, r4, r5, lr}
 8007ea2:	4603      	mov	r3, r0
 8007ea4:	4610      	mov	r0, r2
 8007ea6:	b119      	cbz	r1, 8007eb0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x10>
 8007ea8:	f8b3 2510 	ldrh.w	r2, [r3, #1296]	; 0x510
 8007eac:	4282      	cmp	r2, r0
 8007eae:	d00b      	beq.n	8007ec8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x28>
 8007eb0:	681d      	ldr	r5, [r3, #0]
 8007eb2:	4b06      	ldr	r3, [pc, #24]	; (8007ecc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x2c>)
 8007eb4:	681c      	ldr	r4, [r3, #0]
 8007eb6:	f7ff fe81 	bl	8007bbc <e131::universe_to_multicast_ip(unsigned short)>
 8007eba:	4629      	mov	r1, r5
 8007ebc:	4602      	mov	r2, r0
 8007ebe:	4620      	mov	r0, r4
 8007ec0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007ec4:	f004 bf74 	b.w	800cdb0 <Network::LeaveGroup(int, unsigned int)>
 8007ec8:	bd38      	pop	{r3, r4, r5, pc}
 8007eca:	bf00      	nop
 8007ecc:	20009494 	mulcs	r0, r4, r4

08007ed0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8007ed0:	b570      	push	{r4, r5, r6, lr}
 8007ed2:	4604      	mov	r4, r0
 8007ed4:	461d      	mov	r5, r3
 8007ed6:	b191      	cbz	r1, 8007efe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 8007ed8:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8007edc:	f200 5606 	addw	r6, r0, #1286	; 0x506
 8007ee0:	b99a      	cbnz	r2, 8007f0a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 8007ee2:	4b0e      	ldr	r3, [pc, #56]	; (8007f1c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 8007ee4:	8035      	strh	r5, [r6, #0]
 8007ee6:	4628      	mov	r0, r5
 8007ee8:	6826      	ldr	r6, [r4, #0]
 8007eea:	681c      	ldr	r4, [r3, #0]
 8007eec:	f7ff fe66 	bl	8007bbc <e131::universe_to_multicast_ip(unsigned short)>
 8007ef0:	4631      	mov	r1, r6
 8007ef2:	4602      	mov	r2, r0
 8007ef4:	4620      	mov	r0, r4
 8007ef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007efa:	f004 bf56 	b.w	800cdaa <Network::JoinGroup(int, unsigned int)>
 8007efe:	b15a      	cbz	r2, 8007f18 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 8007f00:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8007f04:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8007f08:	e7ea      	b.n	8007ee0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8007f0a:	42aa      	cmp	r2, r5
 8007f0c:	d004      	beq.n	8007f18 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 8007f0e:	2101      	movs	r1, #1
 8007f10:	4620      	mov	r0, r4
 8007f12:	f7ff ffc5 	bl	8007ea0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8007f16:	e7e4      	b.n	8007ee2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 8007f18:	bd70      	pop	{r4, r5, r6, pc}
 8007f1a:	bf00      	nop
 8007f1c:	20009494 	mulcs	r0, r4, r4

08007f20 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8007f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f24:	4604      	mov	r4, r0
 8007f26:	460d      	mov	r5, r1
 8007f28:	461e      	mov	r6, r3
 8007f2a:	b9ca      	cbnz	r2, 8007f60 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x40>
 8007f2c:	bbb1      	cbnz	r1, 8007f9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8007f2e:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 8007f32:	b12b      	cbz	r3, 8007f40 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20>
 8007f34:	f8b0 3554 	ldrh.w	r3, [r0, #1364]	; 0x554
 8007f38:	42b3      	cmp	r3, r6
 8007f3a:	d109      	bne.n	8007f50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x30>
 8007f3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f40:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8007f44:	3301      	adds	r3, #1
 8007f46:	f880 350a 	strb.w	r3, [r0, #1290]	; 0x50a
 8007f4a:	2301      	movs	r3, #1
 8007f4c:	f880 3556 	strb.w	r3, [r0, #1366]	; 0x556
 8007f50:	4630      	mov	r0, r6
 8007f52:	f8a4 6554 	strh.w	r6, [r4, #1364]	; 0x554
 8007f56:	f7ff fe31 	bl	8007bbc <e131::universe_to_multicast_ip(unsigned short)>
 8007f5a:	f8c4 0558 	str.w	r0, [r4, #1368]	; 0x558
 8007f5e:	e7ed      	b.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007f60:	2a02      	cmp	r2, #2
 8007f62:	d11b      	bne.n	8007f9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8007f64:	2900      	cmp	r1, #0
 8007f66:	d1e9      	bne.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007f68:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 8007f6c:	b14b      	cbz	r3, 8007f82 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x62>
 8007f6e:	f884 1512 	strb.w	r1, [r4, #1298]	; 0x512
 8007f72:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8007f76:	4632      	mov	r2, r6
 8007f78:	3b01      	subs	r3, #1
 8007f7a:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8007f7e:	f7ff ff8f 	bl	8007ea0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8007f82:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8007f86:	2b00      	cmp	r3, #0
 8007f88:	d0d8      	beq.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007f8a:	2300      	movs	r3, #0
 8007f8c:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 8007f90:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8007f94:	3b01      	subs	r3, #1
 8007f96:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8007f9a:	e7cf      	b.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007f9c:	2344      	movs	r3, #68	; 0x44
 8007f9e:	fb03 4305 	mla	r3, r3, r5, r4
 8007fa2:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8007fa6:	b1d2      	cbz	r2, 8007fde <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xbe>
 8007fa8:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8007fac:	42b3      	cmp	r3, r6
 8007fae:	d0c5      	beq.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007fb0:	4632      	mov	r2, r6
 8007fb2:	4629      	mov	r1, r5
 8007fb4:	4620      	mov	r0, r4
 8007fb6:	f7ff ff73 	bl	8007ea0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8007fba:	4b0d      	ldr	r3, [pc, #52]	; (8007ff0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd0>)
 8007fbc:	4630      	mov	r0, r6
 8007fbe:	681f      	ldr	r7, [r3, #0]
 8007fc0:	f8d4 8000 	ldr.w	r8, [r4]
 8007fc4:	f7ff fdfa 	bl	8007bbc <e131::universe_to_multicast_ip(unsigned short)>
 8007fc8:	4641      	mov	r1, r8
 8007fca:	4602      	mov	r2, r0
 8007fcc:	4638      	mov	r0, r7
 8007fce:	f004 feec 	bl	800cdaa <Network::JoinGroup(int, unsigned int)>
 8007fd2:	2144      	movs	r1, #68	; 0x44
 8007fd4:	fb01 4405 	mla	r4, r1, r5, r4
 8007fd8:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 8007fdc:	e7ae      	b.n	8007f3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8007fde:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8007fe2:	3201      	adds	r2, #1
 8007fe4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8007fe8:	2201      	movs	r2, #1
 8007fea:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8007fee:	e7e4      	b.n	8007fba <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9a>
 8007ff0:	20009494 	mulcs	r0, r4, r4

08007ff4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8007ff4:	b510      	push	{r4, lr}
 8007ff6:	4604      	mov	r4, r0
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	b933      	cbnz	r3, 800800a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x16>
 8007ffc:	b921      	cbnz	r1, 8008008 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>
 8007ffe:	f8b4 3554 	ldrh.w	r3, [r4, #1364]	; 0x554
 8008002:	f894 0556 	ldrb.w	r0, [r4, #1366]	; 0x556
 8008006:	8013      	strh	r3, [r2, #0]
 8008008:	bd10      	pop	{r4, pc}
 800800a:	2044      	movs	r0, #68	; 0x44
 800800c:	fb00 4401 	mla	r4, r0, r1, r4
 8008010:	f8b4 3510 	ldrh.w	r3, [r4, #1296]	; 0x510
 8008014:	f894 0512 	ldrb.w	r0, [r4, #1298]	; 0x512
 8008018:	8013      	strh	r3, [r2, #0]
 800801a:	e7f5      	b.n	8008008 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>

0800801c <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800801c:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8008020:	b923      	cbnz	r3, 800802c <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8008022:	2301      	movs	r3, #1
 8008024:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8008028:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800802c:	2344      	movs	r3, #68	; 0x44
 800802e:	fb03 0001 	mla	r0, r3, r1, r0
 8008032:	2301      	movs	r3, #1
 8008034:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8008038:	4770      	bx	lr

0800803a <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800803a:	4602      	mov	r2, r0
 800803c:	2044      	movs	r0, #68	; 0x44
 800803e:	4348      	muls	r0, r1
 8008040:	b570      	push	{r4, r5, r6, lr}
 8008042:	1815      	adds	r5, r2, r0
 8008044:	460c      	mov	r4, r1
 8008046:	68d3      	ldr	r3, [r2, #12]
 8008048:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800804c:	1a5b      	subs	r3, r3, r1
 800804e:	f242 7110 	movw	r1, #10000	; 0x2710
 8008052:	428b      	cmp	r3, r1
 8008054:	d90a      	bls.n	800806c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8008056:	2600      	movs	r6, #0
 8008058:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800805c:	2110      	movs	r1, #16
 800805e:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8008062:	4410      	add	r0, r2
 8008064:	f7ff fdd0 	bl	8007c08 <memset.constprop.0.isra.0>
 8008068:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800806c:	2044      	movs	r0, #68	; 0x44
 800806e:	4344      	muls	r4, r0
 8008070:	1915      	adds	r5, r2, r4
 8008072:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8008076:	68d3      	ldr	r3, [r2, #12]
 8008078:	1a5b      	subs	r3, r3, r1
 800807a:	f242 7110 	movw	r1, #10000	; 0x2710
 800807e:	428b      	cmp	r3, r1
 8008080:	d90a      	bls.n	8008098 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8008082:	2600      	movs	r6, #0
 8008084:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8008088:	2110      	movs	r1, #16
 800808a:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800808e:	1910      	adds	r0, r2, r4
 8008090:	f7ff fdba 	bl	8007c08 <memset.constprop.0.isra.0>
 8008094:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8008098:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 800809c:	b923      	cbnz	r3, 80080a8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x6e>
 800809e:	2101      	movs	r1, #1
 80080a0:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 80080a4:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 80080a8:	bd70      	pop	{r4, r5, r6, pc}

080080aa <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 80080aa:	2244      	movs	r2, #68	; 0x44
 80080ac:	fb02 0101 	mla	r1, r2, r1, r0
 80080b0:	68c3      	ldr	r3, [r0, #12]
 80080b2:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 80080b6:	b510      	push	{r4, lr}
 80080b8:	1a1a      	subs	r2, r3, r0
 80080ba:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 80080be:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 80080c2:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 80080c6:	b171      	cbz	r1, 80080e6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 80080c8:	1b1b      	subs	r3, r3, r4
 80080ca:	b128      	cbz	r0, 80080d8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 80080cc:	f242 700f 	movw	r0, #9999	; 0x270f
 80080d0:	4283      	cmp	r3, r0
 80080d2:	d90d      	bls.n	80080f0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 80080d4:	4282      	cmp	r2, r0
 80080d6:	e002      	b.n	80080de <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 80080d8:	f242 7010 	movw	r0, #10000	; 0x2710
 80080dc:	4283      	cmp	r3, r0
 80080de:	bf94      	ite	ls
 80080e0:	2000      	movls	r0, #0
 80080e2:	2001      	movhi	r0, #1
 80080e4:	bd10      	pop	{r4, pc}
 80080e6:	2800      	cmp	r0, #0
 80080e8:	d0fc      	beq.n	80080e4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 80080ea:	f242 7010 	movw	r0, #10000	; 0x2710
 80080ee:	e7f1      	b.n	80080d4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 80080f0:	2000      	movs	r0, #0
 80080f2:	e7f7      	b.n	80080e4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

080080f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 80080f4:	684a      	ldr	r2, [r1, #4]
 80080f6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80080f8:	b510      	push	{r4, lr}
 80080fa:	429a      	cmp	r2, r3
 80080fc:	d10b      	bne.n	8008116 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 80080fe:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8008102:	3108      	adds	r1, #8
 8008104:	30a2      	adds	r0, #162	; 0xa2
 8008106:	4298      	cmp	r0, r3
 8008108:	d007      	beq.n	800811a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800810a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800810e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008112:	4294      	cmp	r4, r2
 8008114:	d0f7      	beq.n	8008106 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8008116:	2000      	movs	r0, #0
 8008118:	bd10      	pop	{r4, pc}
 800811a:	2001      	movs	r0, #1
 800811c:	e7fc      	b.n	8008118 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

08008120 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8008120:	b538      	push	{r3, r4, r5, lr}
 8008122:	4604      	mov	r4, r0
 8008124:	2001      	movs	r0, #1
 8008126:	460d      	mov	r5, r1
 8008128:	f894 3552 	ldrb.w	r3, [r4, #1362]	; 0x552
 800812c:	f884 04f8 	strb.w	r0, [r4, #1272]	; 0x4f8
 8008130:	2900      	cmp	r1, #0
 8008132:	d04b      	beq.n	80081cc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 8008134:	b362      	cbz	r2, 8008190 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x70>
 8008136:	f8c4 04f4 	str.w	r0, [r4, #1268]	; 0x4f4
 800813a:	f884 050c 	strb.w	r0, [r4, #1292]	; 0x50c
 800813e:	b1db      	cbz	r3, 8008178 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008140:	2500      	movs	r5, #0
 8008142:	6860      	ldr	r0, [r4, #4]
 8008144:	2100      	movs	r1, #0
 8008146:	6803      	ldr	r3, [r0, #0]
 8008148:	68db      	ldr	r3, [r3, #12]
 800814a:	4798      	blx	r3
 800814c:	2110      	movs	r1, #16
 800814e:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008152:	f8c4 5518 	str.w	r5, [r4, #1304]	; 0x518
 8008156:	f7ff fd57 	bl	8007c08 <memset.constprop.0.isra.0>
 800815a:	2110      	movs	r1, #16
 800815c:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008160:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 8008164:	f7ff fd50 	bl	8007c08 <memset.constprop.0.isra.0>
 8008168:	f7ff fd60 	bl	8007c2c <lightset::Data::Get()>
 800816c:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8008170:	f8a4 5550 	strh.w	r5, [r4, #1360]	; 0x550
 8008174:	f884 5552 	strb.w	r5, [r4, #1362]	; 0x552
 8008178:	4b1d      	ldr	r3, [pc, #116]	; (80081f0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>)
 800817a:	2102      	movs	r1, #2
 800817c:	6818      	ldr	r0, [r3, #0]
 800817e:	f007 f927 	bl	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 8008182:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008186:	f023 0302 	bic.w	r3, r3, #2
 800818a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800818e:	bd38      	pop	{r3, r4, r5, pc}
 8008190:	2b00      	cmp	r3, #0
 8008192:	d0f1      	beq.n	8008178 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008194:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
 8008198:	b143      	cbz	r3, 80081ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 800819a:	2110      	movs	r1, #16
 800819c:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 80081a0:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 80081a4:	f7ff fd30 	bl	8007c08 <memset.constprop.0.isra.0>
 80081a8:	f884 2551 	strb.w	r2, [r4, #1361]	; 0x551
 80081ac:	f894 54f5 	ldrb.w	r5, [r4, #1269]	; 0x4f5
 80081b0:	2d00      	cmp	r5, #0
 80081b2:	d1e1      	bne.n	8008178 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 80081b4:	6860      	ldr	r0, [r4, #4]
 80081b6:	4629      	mov	r1, r5
 80081b8:	6803      	ldr	r3, [r0, #0]
 80081ba:	68db      	ldr	r3, [r3, #12]
 80081bc:	4798      	blx	r3
 80081be:	f7ff fd35 	bl	8007c2c <lightset::Data::Get()>
 80081c2:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 80081c6:	f884 5550 	strb.w	r5, [r4, #1360]	; 0x550
 80081ca:	e7d3      	b.n	8008174 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x54>
 80081cc:	2b00      	cmp	r3, #0
 80081ce:	d0d3      	beq.n	8008178 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 80081d0:	2a00      	cmp	r2, #0
 80081d2:	d0eb      	beq.n	80081ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80081d4:	f8d4 3534 	ldr.w	r3, [r4, #1332]	; 0x534
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d0e7      	beq.n	80081ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80081dc:	2110      	movs	r1, #16
 80081de:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 80081e2:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 80081e6:	f7ff fd0f 	bl	8007c08 <memset.constprop.0.isra.0>
 80081ea:	f884 5551 	strb.w	r5, [r4, #1361]	; 0x551
 80081ee:	e7dd      	b.n	80081ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80081f0:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

080081f4 <E131Bridge::HandleDmx()>:
 80081f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081f8:	f8b0 50f7 	ldrh.w	r5, [r0, #247]	; 0xf7
 80081fc:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 8008200:	ba6d      	rev16	r5, r5
 8008202:	b2ad      	uxth	r5, r5
 8008204:	4604      	mov	r4, r0
 8008206:	f100 08fa 	add.w	r8, r0, #250	; 0xfa
 800820a:	3d01      	subs	r5, #1
 800820c:	b343      	cbz	r3, 8008260 <E131Bridge::HandleDmx()+0x6c>
 800820e:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8008212:	f8b0 20ed 	ldrh.w	r2, [r0, #237]	; 0xed
 8008216:	ba5b      	rev16	r3, r3
 8008218:	b29b      	uxth	r3, r3
 800821a:	429a      	cmp	r2, r3
 800821c:	d120      	bne.n	8008260 <E131Bridge::HandleDmx()+0x6c>
 800821e:	f200 5114 	addw	r1, r0, #1300	; 0x514
 8008222:	f8d0 a518 	ldr.w	sl, [r0, #1304]	; 0x518
 8008226:	f8d0 9534 	ldr.w	r9, [r0, #1332]	; 0x534
 800822a:	f7ff ff63 	bl	80080f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800822e:	f504 61a6 	add.w	r1, r4, #1328	; 0x530
 8008232:	4607      	mov	r7, r0
 8008234:	4620      	mov	r0, r4
 8008236:	f7ff ff5d 	bl	80080f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800823a:	4606      	mov	r6, r0
 800823c:	b197      	cbz	r7, 8008264 <E131Bridge::HandleDmx()+0x70>
 800823e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008242:	f894 252c 	ldrb.w	r2, [r4, #1324]	; 0x52c
 8008246:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 800824a:	3313      	adds	r3, #19
 800824c:	1a9b      	subs	r3, r3, r2
 800824e:	b2db      	uxtb	r3, r3
 8008250:	2b13      	cmp	r3, #19
 8008252:	d905      	bls.n	8008260 <E131Bridge::HandleDmx()+0x6c>
 8008254:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8008258:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800825c:	2a00      	cmp	r2, #0
 800825e:	da0a      	bge.n	8008276 <E131Bridge::HandleDmx()+0x82>
 8008260:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008264:	2800      	cmp	r0, #0
 8008266:	d0f5      	beq.n	8008254 <E131Bridge::HandleDmx()+0x60>
 8008268:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800826c:	f894 2548 	ldrb.w	r2, [r4, #1352]	; 0x548
 8008270:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008274:	e7e9      	b.n	800824a <E131Bridge::HandleDmx()+0x56>
 8008276:	065a      	lsls	r2, r3, #25
 8008278:	d509      	bpl.n	800828e <E131Bridge::HandleDmx()+0x9a>
 800827a:	b90f      	cbnz	r7, 8008280 <E131Bridge::HandleDmx()+0x8c>
 800827c:	2e00      	cmp	r6, #0
 800827e:	d0ef      	beq.n	8008260 <E131Bridge::HandleDmx()+0x6c>
 8008280:	4632      	mov	r2, r6
 8008282:	4639      	mov	r1, r7
 8008284:	4620      	mov	r0, r4
 8008286:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800828a:	f7ff bf49 	b.w	8008120 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800828e:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8008292:	b12b      	cbz	r3, 80082a0 <E131Bridge::HandleDmx()+0xac>
 8008294:	f894 14fa 	ldrb.w	r1, [r4, #1274]	; 0x4fa
 8008298:	b911      	cbnz	r1, 80082a0 <E131Bridge::HandleDmx()+0xac>
 800829a:	4620      	mov	r0, r4
 800829c:	f7ff fecd 	bl	800803a <E131Bridge::CheckMergeTimeouts(unsigned int)>
 80082a0:	f894 b0e8 	ldrb.w	fp, [r4, #232]	; 0xe8
 80082a4:	f894 350c 	ldrb.w	r3, [r4, #1292]	; 0x50c
 80082a8:	459b      	cmp	fp, r3
 80082aa:	d258      	bcs.n	800835e <E131Bridge::HandleDmx()+0x16a>
 80082ac:	2100      	movs	r1, #0
 80082ae:	4620      	mov	r0, r4
 80082b0:	f7ff fefb 	bl	80080aa <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 80082b4:	2800      	cmp	r0, #0
 80082b6:	d0d3      	beq.n	8008260 <E131Bridge::HandleDmx()+0x6c>
 80082b8:	f884 b50c 	strb.w	fp, [r4, #1292]	; 0x50c
 80082bc:	f1ba 0f00 	cmp.w	sl, #0
 80082c0:	d156      	bne.n	8008370 <E131Bridge::HandleDmx()+0x17c>
 80082c2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 80082c6:	f1b9 0f00 	cmp.w	r9, #0
 80082ca:	d15c      	bne.n	8008386 <E131Bridge::HandleDmx()+0x192>
 80082cc:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 80082ce:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 80082d2:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 80082d6:	f104 0192 	add.w	r1, r4, #146	; 0x92
 80082da:	2210      	movs	r2, #16
 80082dc:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 80082e0:	f7ff fc9a 	bl	8007c18 <memcpy.isra.0>
 80082e4:	68e3      	ldr	r3, [r4, #12]
 80082e6:	462a      	mov	r2, r5
 80082e8:	4641      	mov	r1, r8
 80082ea:	4648      	mov	r0, r9
 80082ec:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 80082f0:	f7ff fca8 	bl	8007c44 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 80082f4:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 80082f8:	069b      	lsls	r3, r3, #26
 80082fa:	f100 80a2 	bmi.w	8008442 <E131Bridge::HandleDmx()+0x24e>
 80082fe:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8008302:	b29a      	uxth	r2, r3
 8008304:	2a00      	cmp	r2, #0
 8008306:	f000 809f 	beq.w	8008448 <E131Bridge::HandleDmx()+0x254>
 800830a:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800830e:	2a00      	cmp	r2, #0
 8008310:	f040 809a 	bne.w	8008448 <E131Bridge::HandleDmx()+0x254>
 8008314:	ba5b      	rev16	r3, r3
 8008316:	b29b      	uxth	r3, r3
 8008318:	2f00      	cmp	r7, #0
 800831a:	f040 808f 	bne.w	800843c <E131Bridge::HandleDmx()+0x248>
 800831e:	2e00      	cmp	r6, #0
 8008320:	f040 808c 	bne.w	800843c <E131Bridge::HandleDmx()+0x248>
 8008324:	f8d4 2534 	ldr.w	r2, [r4, #1332]	; 0x534
 8008328:	f8d4 1518 	ldr.w	r1, [r4, #1304]	; 0x518
 800832c:	3a00      	subs	r2, #0
 800832e:	bf18      	it	ne
 8008330:	2201      	movne	r2, #1
 8008332:	3900      	subs	r1, #0
 8008334:	bf18      	it	ne
 8008336:	2101      	movne	r1, #1
 8008338:	4620      	mov	r0, r4
 800833a:	f7ff fdc9 	bl	8007ed0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800833e:	f240 1301 	movw	r3, #257	; 0x101
 8008342:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8008346:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800834a:	2b00      	cmp	r3, #0
 800834c:	f040 8081 	bne.w	8008452 <E131Bridge::HandleDmx()+0x25e>
 8008350:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008354:	f043 0302 	orr.w	r3, r3, #2
 8008358:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800835c:	e780      	b.n	8008260 <E131Bridge::HandleDmx()+0x6c>
 800835e:	d9ad      	bls.n	80082bc <E131Bridge::HandleDmx()+0xc8>
 8008360:	2300      	movs	r3, #0
 8008362:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8008366:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 800836a:	f884 34f5 	strb.w	r3, [r4, #1269]	; 0x4f5
 800836e:	e7a3      	b.n	80082b8 <E131Bridge::HandleDmx()+0xc4>
 8008370:	2f00      	cmp	r7, #0
 8008372:	f000 8089 	beq.w	8008488 <E131Bridge::HandleDmx()+0x294>
 8008376:	f1b9 0f00 	cmp.w	r9, #0
 800837a:	d154      	bne.n	8008426 <E131Bridge::HandleDmx()+0x232>
 800837c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008380:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008384:	e7ae      	b.n	80082e4 <E131Bridge::HandleDmx()+0xf0>
 8008386:	b39e      	cbz	r6, 80083f0 <E131Bridge::HandleDmx()+0x1fc>
 8008388:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 800838c:	68e3      	ldr	r3, [r4, #12]
 800838e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 8008392:	f7ff fc4b 	bl	8007c2c <lightset::Data::Get()>
 8008396:	4681      	mov	r9, r0
 8008398:	462a      	mov	r2, r5
 800839a:	4641      	mov	r1, r8
 800839c:	f500 7000 	add.w	r0, r0, #512	; 0x200
 80083a0:	f7ff fc3a 	bl	8007c18 <memcpy.isra.0>
 80083a4:	462a      	mov	r2, r5
 80083a6:	4641      	mov	r1, r8
 80083a8:	f8c9 5600 	str.w	r5, [r9, #1536]	; 0x600
 80083ac:	f509 6080 	add.w	r0, r9, #1024	; 0x400
 80083b0:	f7ff fc32 	bl	8007c18 <memcpy.isra.0>
 80083b4:	e79e      	b.n	80082f4 <E131Bridge::HandleDmx()+0x100>
 80083b6:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 80083b8:	2210      	movs	r2, #16
 80083ba:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 80083be:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 80083c2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 80083c6:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 80083ca:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 80083ce:	f7ff fc23 	bl	8007c18 <memcpy.isra.0>
 80083d2:	68e3      	ldr	r3, [r4, #12]
 80083d4:	4639      	mov	r1, r7
 80083d6:	4620      	mov	r0, r4
 80083d8:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 80083dc:	f7ff fe1e 	bl	800801c <E131Bridge::UpdateMergeStatus(unsigned int)>
 80083e0:	462a      	mov	r2, r5
 80083e2:	4641      	mov	r1, r8
 80083e4:	4638      	mov	r0, r7
 80083e6:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 80083ea:	f7ff fc71 	bl	8007cd0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 80083ee:	e781      	b.n	80082f4 <E131Bridge::HandleDmx()+0x100>
 80083f0:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 80083f2:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 80083f6:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 80083fa:	f104 0192 	add.w	r1, r4, #146	; 0x92
 80083fe:	2210      	movs	r2, #16
 8008400:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008404:	f7ff fc08 	bl	8007c18 <memcpy.isra.0>
 8008408:	68e3      	ldr	r3, [r4, #12]
 800840a:	4631      	mov	r1, r6
 800840c:	4620      	mov	r0, r4
 800840e:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 8008412:	f7ff fe03 	bl	800801c <E131Bridge::UpdateMergeStatus(unsigned int)>
 8008416:	462a      	mov	r2, r5
 8008418:	4641      	mov	r1, r8
 800841a:	4630      	mov	r0, r6
 800841c:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 8008420:	f7ff fc2d 	bl	8007c7e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8008424:	e766      	b.n	80082f4 <E131Bridge::HandleDmx()+0x100>
 8008426:	b926      	cbnz	r6, 8008432 <E131Bridge::HandleDmx()+0x23e>
 8008428:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800842c:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008430:	e7ea      	b.n	8008408 <E131Bridge::HandleDmx()+0x214>
 8008432:	481a      	ldr	r0, [pc, #104]	; (800849c <E131Bridge::HandleDmx()+0x2a8>)
 8008434:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008438:	f007 bba4 	b.w	800fb84 <printf>
 800843c:	4632      	mov	r2, r6
 800843e:	4639      	mov	r1, r7
 8008440:	e77a      	b.n	8008338 <E131Bridge::HandleDmx()+0x144>
 8008442:	2300      	movs	r3, #0
 8008444:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8008448:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800844c:	2b00      	cmp	r3, #0
 800844e:	f47f af7a 	bne.w	8008346 <E131Bridge::HandleDmx()+0x152>
 8008452:	6865      	ldr	r5, [r4, #4]
 8008454:	f7ff fbea 	bl	8007c2c <lightset::Data::Get()>
 8008458:	682b      	ldr	r3, [r5, #0]
 800845a:	2100      	movs	r1, #0
 800845c:	691e      	ldr	r6, [r3, #16]
 800845e:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8008462:	f8d0 3600 	ldr.w	r3, [r0, #1536]	; 0x600
 8008466:	4628      	mov	r0, r5
 8008468:	47b0      	blx	r6
 800846a:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 800846e:	2900      	cmp	r1, #0
 8008470:	f47f af6e 	bne.w	8008350 <E131Bridge::HandleDmx()+0x15c>
 8008474:	6860      	ldr	r0, [r4, #4]
 8008476:	6803      	ldr	r3, [r0, #0]
 8008478:	689b      	ldr	r3, [r3, #8]
 800847a:	4798      	blx	r3
 800847c:	2301      	movs	r3, #1
 800847e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8008482:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 8008486:	e763      	b.n	8008350 <E131Bridge::HandleDmx()+0x15c>
 8008488:	f1b9 0f00 	cmp.w	r9, #0
 800848c:	d093      	beq.n	80083b6 <E131Bridge::HandleDmx()+0x1c2>
 800848e:	2e00      	cmp	r6, #0
 8008490:	d0cf      	beq.n	8008432 <E131Bridge::HandleDmx()+0x23e>
 8008492:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008496:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 800849a:	e79a      	b.n	80083d2 <E131Bridge::HandleDmx()+0x1de>
 800849c:	08011bcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, fp, ip}

080084a0 <E131Bridge::IsValidRoot()>:
 80084a0:	4a0d      	ldr	r2, [pc, #52]	; (80084d8 <E131Bridge::IsValidRoot()+0x38>)
 80084a2:	b530      	push	{r4, r5, lr}
 80084a4:	f100 0380 	add.w	r3, r0, #128	; 0x80
 80084a8:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 80084ac:	42ab      	cmp	r3, r5
 80084ae:	d007      	beq.n	80084c0 <E131Bridge::IsValidRoot()+0x20>
 80084b0:	f813 4b01 	ldrb.w	r4, [r3], #1
 80084b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80084b8:	428c      	cmp	r4, r1
 80084ba:	d0f7      	beq.n	80084ac <E131Bridge::IsValidRoot()+0xc>
 80084bc:	2000      	movs	r0, #0
 80084be:	e008      	b.n	80084d2 <E131Bridge::IsValidRoot()+0x32>
 80084c0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 80084c4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 80084c8:	d004      	beq.n	80084d4 <E131Bridge::IsValidRoot()+0x34>
 80084ca:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80084ce:	4258      	negs	r0, r3
 80084d0:	4158      	adcs	r0, r3
 80084d2:	bd30      	pop	{r4, r5, pc}
 80084d4:	2001      	movs	r0, #1
 80084d6:	e7fc      	b.n	80084d2 <E131Bridge::IsValidRoot()+0x32>
 80084d8:	08011db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, ip}

080084dc <E131Bridge::IsValidDataPacket()>:
 80084dc:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 80084e0:	2b02      	cmp	r3, #2
 80084e2:	d10d      	bne.n	8008500 <E131Bridge::IsValidDataPacket()+0x24>
 80084e4:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 80084e8:	2ba1      	cmp	r3, #161	; 0xa1
 80084ea:	d109      	bne.n	8008500 <E131Bridge::IsValidDataPacket()+0x24>
 80084ec:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 80084f0:	b933      	cbnz	r3, 8008500 <E131Bridge::IsValidDataPacket()+0x24>
 80084f2:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 80084f6:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 80084fa:	4258      	negs	r0, r3
 80084fc:	4158      	adcs	r0, r3
 80084fe:	4770      	bx	lr
 8008500:	2000      	movs	r0, #0
 8008502:	4770      	bx	lr

08008504 <E131Bridge::Run()>:
 8008504:	b530      	push	{r4, r5, lr}
 8008506:	4601      	mov	r1, r0
 8008508:	4604      	mov	r4, r0
 800850a:	b085      	sub	sp, #20
 800850c:	f10d 030e 	add.w	r3, sp, #14
 8008510:	f811 0b7c 	ldrb.w	r0, [r1], #124
 8008514:	f44f 628f 	mov.w	r2, #1144	; 0x478
 8008518:	9300      	str	r3, [sp, #0]
 800851a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800851e:	f003 ff07 	bl	800c330 <udp_recv>
 8008522:	4b3c      	ldr	r3, [pc, #240]	; (8008614 <E131Bridge::Run()+0x110>)
 8008524:	681d      	ldr	r5, [r3, #0]
 8008526:	60e5      	str	r5, [r4, #12]
 8008528:	2800      	cmp	r0, #0
 800852a:	d13b      	bne.n	80085a4 <E131Bridge::Run()+0xa0>
 800852c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 8008530:	b183      	cbz	r3, 8008554 <E131Bridge::Run()+0x50>
 8008532:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 8008536:	bb73      	cbnz	r3, 8008596 <E131Bridge::Run()+0x92>
 8008538:	6923      	ldr	r3, [r4, #16]
 800853a:	1aed      	subs	r5, r5, r3
 800853c:	f640 13c3 	movw	r3, #2499	; 0x9c3
 8008540:	429d      	cmp	r5, r3
 8008542:	d928      	bls.n	8008596 <E131Bridge::Run()+0x92>
 8008544:	6863      	ldr	r3, [r4, #4]
 8008546:	b9eb      	cbnz	r3, 8008584 <E131Bridge::Run()+0x80>
 8008548:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800854c:	f023 0302 	bic.w	r3, r3, #2
 8008550:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008554:	6963      	ldr	r3, [r4, #20]
 8008556:	b12b      	cbz	r3, 8008564 <E131Bridge::Run()+0x60>
 8008558:	4620      	mov	r0, r4
 800855a:	f000 f945 	bl	80087e8 <E131Bridge::HandleDmxIn()>
 800855e:	4620      	mov	r0, r4
 8008560:	f000 f8ca 	bl	80086f8 <E131Bridge::SendDiscoveryPacket()>
 8008564:	7a23      	ldrb	r3, [r4, #8]
 8008566:	b15b      	cbz	r3, 8008580 <E131Bridge::Run()+0x7c>
 8008568:	4b2b      	ldr	r3, [pc, #172]	; (8008618 <E131Bridge::Run()+0x114>)
 800856a:	6818      	ldr	r0, [r3, #0]
 800856c:	6843      	ldr	r3, [r0, #4]
 800856e:	2b04      	cmp	r3, #4
 8008570:	d006      	beq.n	8008580 <E131Bridge::Run()+0x7c>
 8008572:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008576:	2b00      	cmp	r3, #0
 8008578:	d049      	beq.n	800860e <E131Bridge::Run()+0x10a>
 800857a:	2103      	movs	r1, #3
 800857c:	f006 ff28 	bl	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 8008580:	b005      	add	sp, #20
 8008582:	bd30      	pop	{r4, r5, pc}
 8008584:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 8008588:	2b00      	cmp	r3, #0
 800858a:	d1dd      	bne.n	8008548 <E131Bridge::Run()+0x44>
 800858c:	2201      	movs	r2, #1
 800858e:	4620      	mov	r0, r4
 8008590:	4611      	mov	r1, r2
 8008592:	f7ff fdc5 	bl	8008120 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8008596:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800859a:	1a9b      	subs	r3, r3, r2
 800859c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80085a0:	d3d8      	bcc.n	8008554 <E131Bridge::Run()+0x50>
 80085a2:	e7d1      	b.n	8008548 <E131Bridge::Run()+0x44>
 80085a4:	4620      	mov	r0, r4
 80085a6:	f7ff ff7b 	bl	80084a0 <E131Bridge::IsValidRoot()>
 80085aa:	2800      	cmp	r0, #0
 80085ac:	d0e8      	beq.n	8008580 <E131Bridge::Run()+0x7c>
 80085ae:	2300      	movs	r3, #0
 80085b0:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 80085b4:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 80085b8:	6125      	str	r5, [r4, #16]
 80085ba:	b15b      	cbz	r3, 80085d4 <E131Bridge::Run()+0xd0>
 80085bc:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 80085c0:	b943      	cbnz	r3, 80085d4 <E131Bridge::Run()+0xd0>
 80085c2:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 80085c6:	1aad      	subs	r5, r5, r2
 80085c8:	f640 12c3 	movw	r2, #2499	; 0x9c3
 80085cc:	4295      	cmp	r5, r2
 80085ce:	bf88      	it	hi
 80085d0:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 80085d4:	6863      	ldr	r3, [r4, #4]
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d0bc      	beq.n	8008554 <E131Bridge::Run()+0x50>
 80085da:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 80085de:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80085e2:	ba1a      	rev	r2, r3
 80085e4:	d108      	bne.n	80085f8 <E131Bridge::Run()+0xf4>
 80085e6:	4620      	mov	r0, r4
 80085e8:	f7ff ff78 	bl	80084dc <E131Bridge::IsValidDataPacket()>
 80085ec:	2800      	cmp	r0, #0
 80085ee:	d0b1      	beq.n	8008554 <E131Bridge::Run()+0x50>
 80085f0:	4620      	mov	r0, r4
 80085f2:	f7ff fdff 	bl	80081f4 <E131Bridge::HandleDmx()>
 80085f6:	e7ad      	b.n	8008554 <E131Bridge::Run()+0x50>
 80085f8:	2a08      	cmp	r2, #8
 80085fa:	d1ab      	bne.n	8008554 <E131Bridge::Run()+0x50>
 80085fc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008600:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008604:	d1a6      	bne.n	8008554 <E131Bridge::Run()+0x50>
 8008606:	4620      	mov	r0, r4
 8008608:	f000 f95a 	bl	80088c0 <E131Bridge::HandleSynchronization()>
 800860c:	e7a2      	b.n	8008554 <E131Bridge::Run()+0x50>
 800860e:	2102      	movs	r1, #2
 8008610:	e7b4      	b.n	800857c <E131Bridge::Run()+0x78>
 8008612:	bf00      	nop
 8008614:	20009bd4 	ldrdcs	r9, [r0], -r4
 8008618:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800861c <E131Bridge::FillDiscoveryPacket()>:
 800861c:	2200      	movs	r2, #0
 800861e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008622:	b510      	push	{r4, lr}
 8008624:	333c      	adds	r3, #60	; 0x3c
 8008626:	005b      	lsls	r3, r3, #1
 8008628:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800862c:	69c3      	ldr	r3, [r0, #28]
 800862e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 8008632:	428b      	cmp	r3, r1
 8008634:	d002      	beq.n	800863c <E131Bridge::FillDiscoveryPacket()+0x20>
 8008636:	f803 2b01 	strb.w	r2, [r3], #1
 800863a:	e7fa      	b.n	8008632 <E131Bridge::FillDiscoveryPacket()+0x16>
 800863c:	69c3      	ldr	r3, [r0, #28]
 800863e:	492d      	ldr	r1, [pc, #180]	; (80086f4 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 8008640:	701a      	strb	r2, [r3, #0]
 8008642:	2210      	movs	r2, #16
 8008644:	705a      	strb	r2, [r3, #1]
 8008646:	1d1a      	adds	r2, r3, #4
 8008648:	3310      	adds	r3, #16
 800864a:	4293      	cmp	r3, r2
 800864c:	d004      	beq.n	8008658 <E131Bridge::FillDiscoveryPacket()+0x3c>
 800864e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008652:	f802 4b01 	strb.w	r4, [r2], #1
 8008656:	e7f8      	b.n	800864a <E131Bridge::FillDiscoveryPacket()+0x2e>
 8008658:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800865c:	69c3      	ldr	r3, [r0, #28]
 800865e:	3234      	adds	r2, #52	; 0x34
 8008660:	0052      	lsls	r2, r2, #1
 8008662:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8008666:	ba52      	rev16	r2, r2
 8008668:	821a      	strh	r2, [r3, #16]
 800866a:	2200      	movs	r2, #0
 800866c:	749a      	strb	r2, [r3, #18]
 800866e:	74da      	strb	r2, [r3, #19]
 8008670:	751a      	strb	r2, [r3, #20]
 8008672:	2208      	movs	r2, #8
 8008674:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8008678:	755a      	strb	r2, [r3, #21]
 800867a:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800867e:	3316      	adds	r3, #22
 8008680:	42a1      	cmp	r1, r4
 8008682:	d004      	beq.n	800868e <E131Bridge::FillDiscoveryPacket()+0x72>
 8008684:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008688:	f803 2b01 	strb.w	r2, [r3], #1
 800868c:	e7f8      	b.n	8008680 <E131Bridge::FillDiscoveryPacket()+0x64>
 800868e:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8008692:	69c3      	ldr	r3, [r0, #28]
 8008694:	3229      	adds	r2, #41	; 0x29
 8008696:	0052      	lsls	r2, r2, #1
 8008698:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800869c:	ba52      	rev16	r2, r2
 800869e:	84da      	strh	r2, [r3, #38]	; 0x26
 80086a0:	2200      	movs	r2, #0
 80086a2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80086a6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 80086aa:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80086ae:	2202      	movs	r2, #2
 80086b0:	332c      	adds	r3, #44	; 0x2c
 80086b2:	f803 2c01 	strb.w	r2, [r3, #-1]
 80086b6:	f100 0474 	add.w	r4, r0, #116	; 0x74
 80086ba:	42a1      	cmp	r1, r4
 80086bc:	d004      	beq.n	80086c8 <E131Bridge::FillDiscoveryPacket()+0xac>
 80086be:	f811 2b01 	ldrb.w	r2, [r1], #1
 80086c2:	f803 2b01 	strb.w	r2, [r3], #1
 80086c6:	e7f8      	b.n	80086ba <E131Bridge::FillDiscoveryPacket()+0x9e>
 80086c8:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 80086cc:	69c2      	ldr	r2, [r0, #28]
 80086ce:	3304      	adds	r3, #4
 80086d0:	005b      	lsls	r3, r3, #1
 80086d2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 80086d6:	ba5b      	rev16	r3, r3
 80086d8:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 80086dc:	2300      	movs	r3, #0
 80086de:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 80086e2:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 80086e6:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 80086ea:	2301      	movs	r3, #1
 80086ec:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 80086f0:	bd10      	pop	{r4, pc}
 80086f2:	bf00      	nop
 80086f4:	08011db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, ip}

080086f8 <E131Bridge::SendDiscoveryPacket()>:
 80086f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80086fa:	f242 710f 	movw	r1, #9999	; 0x270f
 80086fe:	68c2      	ldr	r2, [r0, #12]
 8008700:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 8008704:	4604      	mov	r4, r0
 8008706:	1ad3      	subs	r3, r2, r3
 8008708:	428b      	cmp	r3, r1
 800870a:	d91b      	bls.n	8008744 <E131Bridge::SendDiscoveryPacket()+0x4c>
 800870c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008710:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 8008714:	b163      	cbz	r3, 8008730 <E131Bridge::SendDiscoveryPacket()+0x38>
 8008716:	2300      	movs	r3, #0
 8008718:	f10d 020e 	add.w	r2, sp, #14
 800871c:	4619      	mov	r1, r3
 800871e:	f7ff fc69 	bl	8007ff4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8008722:	b128      	cbz	r0, 8008730 <E131Bridge::SendDiscoveryPacket()+0x38>
 8008724:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008728:	69e2      	ldr	r2, [r4, #28]
 800872a:	ba5b      	rev16	r3, r3
 800872c:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 8008730:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 8008734:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 8008738:	9300      	str	r3, [sp, #0]
 800873a:	69e1      	ldr	r1, [r4, #28]
 800873c:	6a23      	ldr	r3, [r4, #32]
 800873e:	7820      	ldrb	r0, [r4, #0]
 8008740:	f003 fe52 	bl	800c3e8 <udp_send>
 8008744:	b004      	add	sp, #16
 8008746:	bd10      	pop	{r4, pc}

08008748 <memcpy.isra.0>:
 8008748:	3801      	subs	r0, #1
 800874a:	440a      	add	r2, r1
 800874c:	4291      	cmp	r1, r2
 800874e:	d004      	beq.n	800875a <memcpy.isra.0+0x12>
 8008750:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008754:	f800 3f01 	strb.w	r3, [r0, #1]!
 8008758:	e7f8      	b.n	800874c <memcpy.isra.0+0x4>
 800875a:	4770      	bx	lr

0800875c <E131Bridge::FillDataPacket()>:
 800875c:	b570      	push	{r4, r5, r6, lr}
 800875e:	2400      	movs	r4, #0
 8008760:	2610      	movs	r6, #16
 8008762:	4605      	mov	r5, r0
 8008764:	6980      	ldr	r0, [r0, #24]
 8008766:	220c      	movs	r2, #12
 8008768:	7046      	strb	r6, [r0, #1]
 800876a:	7004      	strb	r4, [r0, #0]
 800876c:	7084      	strb	r4, [r0, #2]
 800876e:	70c4      	strb	r4, [r0, #3]
 8008770:	491c      	ldr	r1, [pc, #112]	; (80087e4 <E131Bridge::FillDataPacket()+0x88>)
 8008772:	3004      	adds	r0, #4
 8008774:	f7ff ffe8 	bl	8008748 <memcpy.isra.0>
 8008778:	2304      	movs	r3, #4
 800877a:	4632      	mov	r2, r6
 800877c:	2602      	movs	r6, #2
 800877e:	69a8      	ldr	r0, [r5, #24]
 8008780:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8008784:	7543      	strb	r3, [r0, #21]
 8008786:	7484      	strb	r4, [r0, #18]
 8008788:	74c4      	strb	r4, [r0, #19]
 800878a:	7504      	strb	r4, [r0, #20]
 800878c:	3016      	adds	r0, #22
 800878e:	f7ff ffdb 	bl	8008748 <memcpy.isra.0>
 8008792:	69a8      	ldr	r0, [r5, #24]
 8008794:	2240      	movs	r2, #64	; 0x40
 8008796:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800879a:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800879e:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 80087a2:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 80087a6:	f105 0134 	add.w	r1, r5, #52	; 0x34
 80087aa:	302c      	adds	r0, #44	; 0x2c
 80087ac:	f7ff ffcc 	bl	8008748 <memcpy.isra.0>
 80087b0:	22a1      	movs	r2, #161	; 0xa1
 80087b2:	69ab      	ldr	r3, [r5, #24]
 80087b4:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 80087b8:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 80087bc:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 80087c0:	69ab      	ldr	r3, [r5, #24]
 80087c2:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 80087c6:	69ab      	ldr	r3, [r5, #24]
 80087c8:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 80087cc:	2201      	movs	r2, #1
 80087ce:	69ab      	ldr	r3, [r5, #24]
 80087d0:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 80087d4:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 80087d8:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 80087dc:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 80087e0:	bd70      	pop	{r4, r5, r6, pc}
 80087e2:	bf00      	nop
 80087e4:	08011db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, ip}

080087e8 <E131Bridge::HandleDmxIn()>:
 80087e8:	b530      	push	{r4, r5, lr}
 80087ea:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 80087ee:	4604      	mov	r4, r0
 80087f0:	b085      	sub	sp, #20
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	d051      	beq.n	800889a <E131Bridge::HandleDmxIn()+0xb2>
 80087f6:	6940      	ldr	r0, [r0, #20]
 80087f8:	2100      	movs	r1, #0
 80087fa:	6803      	ldr	r3, [r0, #0]
 80087fc:	aa02      	add	r2, sp, #8
 80087fe:	691d      	ldr	r5, [r3, #16]
 8008800:	ab03      	add	r3, sp, #12
 8008802:	47a8      	blx	r5
 8008804:	4601      	mov	r1, r0
 8008806:	2800      	cmp	r0, #0
 8008808:	d049      	beq.n	800889e <E131Bridge::HandleDmxIn()+0xb6>
 800880a:	9b02      	ldr	r3, [sp, #8]
 800880c:	69a0      	ldr	r0, [r4, #24]
 800880e:	b29b      	uxth	r3, r3
 8008810:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 8008814:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8008818:	ba52      	rev16	r2, r2
 800881a:	8202      	strh	r2, [r0, #16]
 800881c:	f103 0257 	add.w	r2, r3, #87	; 0x57
 8008820:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8008824:	ba52      	rev16	r2, r2
 8008826:	84c2      	strh	r2, [r0, #38]	; 0x26
 8008828:	f894 255d 	ldrb.w	r2, [r4, #1373]	; 0x55d
 800882c:	330a      	adds	r3, #10
 800882e:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 8008832:	f894 255c 	ldrb.w	r2, [r4, #1372]	; 0x55c
 8008836:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800883a:	1c50      	adds	r0, r2, #1
 800883c:	f884 055c 	strb.w	r0, [r4, #1372]	; 0x55c
 8008840:	69a0      	ldr	r0, [r4, #24]
 8008842:	ba5b      	rev16	r3, r3
 8008844:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 8008848:	f8b4 2554 	ldrh.w	r2, [r4, #1364]	; 0x554
 800884c:	69a0      	ldr	r0, [r4, #24]
 800884e:	ba52      	rev16	r2, r2
 8008850:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 8008854:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 8008858:	9a02      	ldr	r2, [sp, #8]
 800885a:	307d      	adds	r0, #125	; 0x7d
 800885c:	f7ff ff74 	bl	8008748 <memcpy.isra.0>
 8008860:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8008864:	69a1      	ldr	r1, [r4, #24]
 8008866:	ba53      	rev16	r3, r2
 8008868:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800886c:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 8008870:	327d      	adds	r2, #125	; 0x7d
 8008872:	9300      	str	r3, [sp, #0]
 8008874:	b292      	uxth	r2, r2
 8008876:	f8d4 3558 	ldr.w	r3, [r4, #1368]	; 0x558
 800887a:	7820      	ldrb	r0, [r4, #0]
 800887c:	f003 fdb4 	bl	800c3e8 <udp_send>
 8008880:	4a0e      	ldr	r2, [pc, #56]	; (80088bc <E131Bridge::HandleDmxIn()+0xd4>)
 8008882:	6813      	ldr	r3, [r2, #0]
 8008884:	07d9      	lsls	r1, r3, #31
 8008886:	d408      	bmi.n	800889a <E131Bridge::HandleDmxIn()+0xb2>
 8008888:	f043 0301 	orr.w	r3, r3, #1
 800888c:	6013      	str	r3, [r2, #0]
 800888e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008892:	f043 0301 	orr.w	r3, r3, #1
 8008896:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800889a:	b005      	add	sp, #20
 800889c:	bd30      	pop	{r4, r5, pc}
 800889e:	9b03      	ldr	r3, [sp, #12]
 80088a0:	2b00      	cmp	r3, #0
 80088a2:	d1fa      	bne.n	800889a <E131Bridge::HandleDmxIn()+0xb2>
 80088a4:	4a05      	ldr	r2, [pc, #20]	; (80088bc <E131Bridge::HandleDmxIn()+0xd4>)
 80088a6:	6813      	ldr	r3, [r2, #0]
 80088a8:	f023 0301 	bic.w	r3, r3, #1
 80088ac:	6013      	str	r3, [r2, #0]
 80088ae:	2b00      	cmp	r3, #0
 80088b0:	d1f3      	bne.n	800889a <E131Bridge::HandleDmxIn()+0xb2>
 80088b2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 80088b6:	f023 0301 	bic.w	r3, r3, #1
 80088ba:	e7ec      	b.n	8008896 <E131Bridge::HandleDmxIn()+0xae>
 80088bc:	20000708 	andcs	r0, r0, r8, lsl #14

080088c0 <E131Bridge::HandleSynchronization()>:
 80088c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80088c4:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 80088c8:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 80088cc:	ba5b      	rev16	r3, r3
 80088ce:	b29b      	uxth	r3, r3
 80088d0:	429a      	cmp	r2, r3
 80088d2:	4604      	mov	r4, r0
 80088d4:	d00a      	beq.n	80088ec <E131Bridge::HandleSynchronization()+0x2c>
 80088d6:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 80088da:	429a      	cmp	r2, r3
 80088dc:	d006      	beq.n	80088ec <E131Bridge::HandleSynchronization()+0x2c>
 80088de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80088e2:	4b1b      	ldr	r3, [pc, #108]	; (8008950 <E131Bridge::HandleSynchronization()+0x90>)
 80088e4:	2102      	movs	r1, #2
 80088e6:	6818      	ldr	r0, [r3, #0]
 80088e8:	f006 bd72 	b.w	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 80088ec:	68e3      	ldr	r3, [r4, #12]
 80088ee:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 80088f2:	f894 3512 	ldrb.w	r3, [r4, #1298]	; 0x512
 80088f6:	b30b      	cbz	r3, 800893c <E131Bridge::HandleSynchronization()+0x7c>
 80088f8:	4d16      	ldr	r5, [pc, #88]	; (8008954 <E131Bridge::HandleSynchronization()+0x94>)
 80088fa:	6860      	ldr	r0, [r4, #4]
 80088fc:	682b      	ldr	r3, [r5, #0]
 80088fe:	4e16      	ldr	r6, [pc, #88]	; (8008958 <E131Bridge::HandleSynchronization()+0x98>)
 8008900:	07da      	lsls	r2, r3, #31
 8008902:	bf5c      	itt	pl
 8008904:	2301      	movpl	r3, #1
 8008906:	602b      	strpl	r3, [r5, #0]
 8008908:	6803      	ldr	r3, [r0, #0]
 800890a:	2100      	movs	r1, #0
 800890c:	691f      	ldr	r7, [r3, #16]
 800890e:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 8008912:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 8008916:	47b8      	blx	r7
 8008918:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 800891c:	b931      	cbnz	r1, 800892c <E131Bridge::HandleSynchronization()+0x6c>
 800891e:	6860      	ldr	r0, [r4, #4]
 8008920:	6803      	ldr	r3, [r0, #0]
 8008922:	689b      	ldr	r3, [r3, #8]
 8008924:	4798      	blx	r3
 8008926:	2301      	movs	r3, #1
 8008928:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 800892c:	682b      	ldr	r3, [r5, #0]
 800892e:	07db      	lsls	r3, r3, #31
 8008930:	bf5c      	itt	pl
 8008932:	2301      	movpl	r3, #1
 8008934:	602b      	strpl	r3, [r5, #0]
 8008936:	2300      	movs	r3, #0
 8008938:	f8c6 3600 	str.w	r3, [r6, #1536]	; 0x600
 800893c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800893e:	b120      	cbz	r0, 800894a <E131Bridge::HandleSynchronization()+0x8a>
 8008940:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008944:	6803      	ldr	r3, [r0, #0]
 8008946:	689b      	ldr	r3, [r3, #8]
 8008948:	4718      	bx	r3
 800894a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800894e:	bf00      	nop
 8008950:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 8008954:	200000fc 	strdcs	r0, [r0], -ip
 8008958:	20000100 	andcs	r0, r0, r0, lsl #2

0800895c <E131Bridge::Print()>:
 800895c:	b530      	push	{r4, r5, lr}
 800895e:	2500      	movs	r5, #0
 8008960:	4604      	mov	r4, r0
 8008962:	b08d      	sub	sp, #52	; 0x34
 8008964:	a902      	add	r1, sp, #8
 8008966:	3024      	adds	r0, #36	; 0x24
 8008968:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800896c:	f000 fafe 	bl	8008f6c <uuid_unparse>
 8008970:	4822      	ldr	r0, [pc, #136]	; (80089fc <E131Bridge::Print()+0xa0>)
 8008972:	f007 f907 	bl	800fb84 <printf>
 8008976:	4b22      	ldr	r3, [pc, #136]	; (8008a00 <E131Bridge::Print()+0xa4>)
 8008978:	4822      	ldr	r0, [pc, #136]	; (8008a04 <E131Bridge::Print()+0xa8>)
 800897a:	7819      	ldrb	r1, [r3, #0]
 800897c:	785a      	ldrb	r2, [r3, #1]
 800897e:	f007 f901 	bl	800fb84 <printf>
 8008982:	4821      	ldr	r0, [pc, #132]	; (8008a08 <E131Bridge::Print()+0xac>)
 8008984:	a902      	add	r1, sp, #8
 8008986:	f007 f8fd 	bl	800fb84 <printf>
 800898a:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800898e:	b1bb      	cbz	r3, 80089c0 <E131Bridge::Print()+0x64>
 8008990:	481e      	ldr	r0, [pc, #120]	; (8008a0c <E131Bridge::Print()+0xb0>)
 8008992:	f007 f8f7 	bl	800fb84 <printf>
 8008996:	2301      	movs	r3, #1
 8008998:	4629      	mov	r1, r5
 800899a:	4620      	mov	r0, r4
 800899c:	f10d 0206 	add.w	r2, sp, #6
 80089a0:	f7ff fb28 	bl	8007ff4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80089a4:	b160      	cbz	r0, 80089c0 <E131Bridge::Print()+0x64>
 80089a6:	f8d4 154c 	ldr.w	r1, [r4, #1356]	; 0x54c
 80089aa:	4a19      	ldr	r2, [pc, #100]	; (8008a10 <E131Bridge::Print()+0xb4>)
 80089ac:	4b19      	ldr	r3, [pc, #100]	; (8008a14 <E131Bridge::Print()+0xb8>)
 80089ae:	481a      	ldr	r0, [pc, #104]	; (8008a18 <E131Bridge::Print()+0xbc>)
 80089b0:	42a9      	cmp	r1, r5
 80089b2:	bf18      	it	ne
 80089b4:	4613      	movne	r3, r2
 80089b6:	4629      	mov	r1, r5
 80089b8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80089bc:	f007 f8e2 	bl	800fb84 <printf>
 80089c0:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 80089c4:	b193      	cbz	r3, 80089ec <E131Bridge::Print()+0x90>
 80089c6:	4815      	ldr	r0, [pc, #84]	; (8008a1c <E131Bridge::Print()+0xc0>)
 80089c8:	f007 f8dc 	bl	800fb84 <printf>
 80089cc:	2300      	movs	r3, #0
 80089ce:	4620      	mov	r0, r4
 80089d0:	4619      	mov	r1, r3
 80089d2:	f10d 0206 	add.w	r2, sp, #6
 80089d6:	f7ff fb0d 	bl	8007ff4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80089da:	b138      	cbz	r0, 80089ec <E131Bridge::Print()+0x90>
 80089dc:	2100      	movs	r1, #0
 80089de:	f894 355d 	ldrb.w	r3, [r4, #1373]	; 0x55d
 80089e2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80089e6:	480e      	ldr	r0, [pc, #56]	; (8008a20 <E131Bridge::Print()+0xc4>)
 80089e8:	f007 f8cc 	bl	800fb84 <printf>
 80089ec:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 80089f0:	b113      	cbz	r3, 80089f8 <E131Bridge::Print()+0x9c>
 80089f2:	480c      	ldr	r0, [pc, #48]	; (8008a24 <E131Bridge::Print()+0xc8>)
 80089f4:	f007 f8c6 	bl	800fb84 <printf>
 80089f8:	b00d      	add	sp, #52	; 0x34
 80089fa:	bd30      	pop	{r4, r5, pc}
 80089fc:	08011c04 	stmdaeq	r1, {r2, sl, fp, ip}
 8008a00:	08011dbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, ip}
 8008a04:	08011c0c 	stmdaeq	r1, {r2, r3, sl, fp, ip}
 8008a08:	08011c1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, fp, ip}
 8008a0c:	08011c2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, sl, fp, ip}
 8008a10:	08011c00 	stmdaeq	r1, {sl, fp, ip}
 8008a14:	08011bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, ip}
 8008a18:	08011c38 	stmdaeq	r1, {r3, r4, r5, sl, fp, ip}
 8008a1c:	08011c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip}
 8008a20:	08011c5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, sl, fp, ip}
 8008a24:	08011c7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, fp, ip}

08008a28 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 8008a28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008a2a:	88c5      	ldrh	r5, [r0, #6]
 8008a2c:	8886      	ldrh	r6, [r0, #4]
 8008a2e:	42b5      	cmp	r5, r6
 8008a30:	d216      	bcs.n	8008a60 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 8008a32:	4604      	mov	r4, r0
 8008a34:	6800      	ldr	r0, [r0, #0]
 8008a36:	4428      	add	r0, r5
 8008a38:	1b75      	subs	r5, r6, r5
 8008a3a:	7a26      	ldrb	r6, [r4, #8]
 8008a3c:	b923      	cbnz	r3, 8008a48 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 8008a3e:	b926      	cbnz	r6, 8008a4a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 8008a40:	9200      	str	r2, [sp, #0]
 8008a42:	460b      	mov	r3, r1
 8008a44:	4a09      	ldr	r2, [pc, #36]	; (8008a6c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 8008a46:	e003      	b.n	8008a50 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8008a48:	b166      	cbz	r6, 8008a64 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 8008a4a:	460b      	mov	r3, r1
 8008a4c:	9200      	str	r2, [sp, #0]
 8008a4e:	4a08      	ldr	r2, [pc, #32]	; (8008a70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 8008a50:	4629      	mov	r1, r5
 8008a52:	f007 f8bf 	bl	800fbd4 <snprintf>
 8008a56:	4285      	cmp	r5, r0
 8008a58:	bfa2      	ittt	ge
 8008a5a:	88e3      	ldrhge	r3, [r4, #6]
 8008a5c:	181b      	addge	r3, r3, r0
 8008a5e:	80e3      	strhge	r3, [r4, #6]
 8008a60:	b002      	add	sp, #8
 8008a62:	bd70      	pop	{r4, r5, r6, pc}
 8008a64:	9200      	str	r2, [sp, #0]
 8008a66:	460b      	mov	r3, r1
 8008a68:	4a02      	ldr	r2, [pc, #8]	; (8008a74 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 8008a6a:	e7f1      	b.n	8008a50 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8008a6c:	08011ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, ip}
 8008a70:	08011cd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, fp, ip}
 8008a74:	08011ce2 	stmdaeq	r1, {r1, r5, r6, r7, sl, fp, ip}

08008a78 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8008a78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008a7a:	460b      	mov	r3, r1
 8008a7c:	8885      	ldrh	r5, [r0, #4]
 8008a7e:	88c1      	ldrh	r1, [r0, #6]
 8008a80:	42a9      	cmp	r1, r5
 8008a82:	d214      	bcs.n	8008aae <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8008a84:	4604      	mov	r4, r0
 8008a86:	6800      	ldr	r0, [r0, #0]
 8008a88:	1a6d      	subs	r5, r5, r1
 8008a8a:	4408      	add	r0, r1
 8008a8c:	7a21      	ldrb	r1, [r4, #8]
 8008a8e:	b91a      	cbnz	r2, 8008a98 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8008a90:	b919      	cbnz	r1, 8008a9a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8008a92:	4a0a      	ldr	r2, [pc, #40]	; (8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8008a94:	9100      	str	r1, [sp, #0]
 8008a96:	e002      	b.n	8008a9e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008a98:	b159      	cbz	r1, 8008ab2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8008a9a:	9200      	str	r2, [sp, #0]
 8008a9c:	4a08      	ldr	r2, [pc, #32]	; (8008ac0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8008a9e:	4629      	mov	r1, r5
 8008aa0:	f007 f898 	bl	800fbd4 <snprintf>
 8008aa4:	4285      	cmp	r5, r0
 8008aa6:	bfa2      	ittt	ge
 8008aa8:	88e3      	ldrhge	r3, [r4, #6]
 8008aaa:	181b      	addge	r3, r3, r0
 8008aac:	80e3      	strhge	r3, [r4, #6]
 8008aae:	b003      	add	sp, #12
 8008ab0:	bd30      	pop	{r4, r5, pc}
 8008ab2:	2201      	movs	r2, #1
 8008ab4:	9200      	str	r2, [sp, #0]
 8008ab6:	4a03      	ldr	r2, [pc, #12]	; (8008ac4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8008ab8:	e7f1      	b.n	8008a9e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008aba:	bf00      	nop
 8008abc:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 8008ac0:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 8008ac4:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

08008ac8 <E131Params::E131Params(E131ParamsStore*)>:
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	221a      	movs	r2, #26
 8008acc:	4604      	mov	r4, r0
 8008ace:	f840 1b04 	str.w	r1, [r0], #4
 8008ad2:	2100      	movs	r1, #0
 8008ad4:	f006 fe34 	bl	800f740 <memset>
 8008ad8:	2300      	movs	r3, #0
 8008ada:	2201      	movs	r2, #1
 8008adc:	7323      	strb	r3, [r4, #12]
 8008ade:	72e2      	strb	r2, [r4, #11]
 8008ae0:	73a3      	strb	r3, [r4, #14]
 8008ae2:	2202      	movs	r2, #2
 8008ae4:	7423      	strb	r3, [r4, #16]
 8008ae6:	74a3      	strb	r3, [r4, #18]
 8008ae8:	f246 43ff 	movw	r3, #25855	; 0x64ff
 8008aec:	7362      	strb	r2, [r4, #13]
 8008aee:	83e3      	strh	r3, [r4, #30]
 8008af0:	2203      	movs	r2, #3
 8008af2:	f246 4364 	movw	r3, #25700	; 0x6464
 8008af6:	73e2      	strb	r2, [r4, #15]
 8008af8:	8423      	strh	r3, [r4, #32]
 8008afa:	2204      	movs	r2, #4
 8008afc:	2364      	movs	r3, #100	; 0x64
 8008afe:	4620      	mov	r0, r4
 8008b00:	7462      	strb	r2, [r4, #17]
 8008b02:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8008b06:	bd10      	pop	{r4, pc}

08008b08 <E131Params::Load()>:
 8008b08:	b508      	push	{r3, lr}
 8008b0a:	2300      	movs	r3, #0
 8008b0c:	4601      	mov	r1, r0
 8008b0e:	6043      	str	r3, [r0, #4]
 8008b10:	6800      	ldr	r0, [r0, #0]
 8008b12:	b120      	cbz	r0, 8008b1e <E131Params::Load()+0x16>
 8008b14:	6803      	ldr	r3, [r0, #0]
 8008b16:	3104      	adds	r1, #4
 8008b18:	68db      	ldr	r3, [r3, #12]
 8008b1a:	4798      	blx	r3
 8008b1c:	2001      	movs	r0, #1
 8008b1e:	bd08      	pop	{r3, pc}

08008b20 <E131Params::Load(char const*, unsigned int)>:
 8008b20:	6803      	ldr	r3, [r0, #0]
 8008b22:	b1d3      	cbz	r3, 8008b5a <E131Params::Load(char const*, unsigned int)+0x3a>
 8008b24:	2300      	movs	r3, #0
 8008b26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b28:	460d      	mov	r5, r1
 8008b2a:	4616      	mov	r6, r2
 8008b2c:	4604      	mov	r4, r0
 8008b2e:	6043      	str	r3, [r0, #4]
 8008b30:	4602      	mov	r2, r0
 8008b32:	490a      	ldr	r1, [pc, #40]	; (8008b5c <E131Params::Load(char const*, unsigned int)+0x3c>)
 8008b34:	4668      	mov	r0, sp
 8008b36:	f005 fffb 	bl	800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8008b3a:	4632      	mov	r2, r6
 8008b3c:	4629      	mov	r1, r5
 8008b3e:	4668      	mov	r0, sp
 8008b40:	f005 fffa 	bl	800eb38 <ReadConfigFile::Read(char const*, unsigned int)>
 8008b44:	4621      	mov	r1, r4
 8008b46:	f851 0b04 	ldr.w	r0, [r1], #4
 8008b4a:	6803      	ldr	r3, [r0, #0]
 8008b4c:	689b      	ldr	r3, [r3, #8]
 8008b4e:	4798      	blx	r3
 8008b50:	4668      	mov	r0, sp
 8008b52:	f005 fff0 	bl	800eb36 <ReadConfigFile::~ReadConfigFile()>
 8008b56:	b002      	add	sp, #8
 8008b58:	bd70      	pop	{r4, r5, r6, pc}
 8008b5a:	4770      	bx	lr
 8008b5c:	08008cdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, pc}

08008b60 <E131Params::callbackFunction(char const*)>:
 8008b60:	b530      	push	{r4, r5, lr}
 8008b62:	460d      	mov	r5, r1
 8008b64:	b087      	sub	sp, #28
 8008b66:	4604      	mov	r4, r0
 8008b68:	4956      	ldr	r1, [pc, #344]	; (8008cc4 <E131Params::callbackFunction(char const*)+0x164>)
 8008b6a:	4628      	mov	r0, r5
 8008b6c:	f10d 0202 	add.w	r2, sp, #2
 8008b70:	f006 f86f 	bl	800ec52 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8008b74:	b9a0      	cbnz	r0, 8008ba0 <E131Params::callbackFunction(char const*)+0x40>
 8008b76:	f64f 15fe 	movw	r5, #63998	; 0xf9fe
 8008b7a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8008b7e:	6863      	ldr	r3, [r4, #4]
 8008b80:	1e4a      	subs	r2, r1, #1
 8008b82:	b292      	uxth	r2, r2
 8008b84:	42aa      	cmp	r2, r5
 8008b86:	bf81      	itttt	hi
 8008b88:	2201      	movhi	r2, #1
 8008b8a:	7320      	strbhi	r0, [r4, #12]
 8008b8c:	72e2      	strbhi	r2, [r4, #11]
 8008b8e:	f023 0310 	bichi.w	r3, r3, #16
 8008b92:	bf9c      	itt	ls
 8008b94:	f8a4 100b 	strhls.w	r1, [r4, #11]
 8008b98:	f043 0310 	orrls.w	r3, r3, #16
 8008b9c:	6063      	str	r3, [r4, #4]
 8008b9e:	e053      	b.n	8008c48 <E131Params::callbackFunction(char const*)+0xe8>
 8008ba0:	2303      	movs	r3, #3
 8008ba2:	4628      	mov	r0, r5
 8008ba4:	9301      	str	r3, [sp, #4]
 8008ba6:	4948      	ldr	r1, [pc, #288]	; (8008cc8 <E131Params::callbackFunction(char const*)+0x168>)
 8008ba8:	ab01      	add	r3, sp, #4
 8008baa:	aa02      	add	r2, sp, #8
 8008bac:	f005 fff8 	bl	800eba0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008bb0:	b9e0      	cbnz	r0, 8008bec <E131Params::callbackFunction(char const*)+0x8c>
 8008bb2:	f89d 2008 	ldrb.w	r2, [sp, #8]
 8008bb6:	6863      	ldr	r3, [r4, #4]
 8008bb8:	f042 0220 	orr.w	r2, r2, #32
 8008bbc:	2a6c      	cmp	r2, #108	; 0x6c
 8008bbe:	d110      	bne.n	8008be2 <E131Params::callbackFunction(char const*)+0x82>
 8008bc0:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8008bc4:	f042 0220 	orr.w	r2, r2, #32
 8008bc8:	2a74      	cmp	r2, #116	; 0x74
 8008bca:	d10a      	bne.n	8008be2 <E131Params::callbackFunction(char const*)+0x82>
 8008bcc:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8008bd0:	f042 0220 	orr.w	r2, r2, #32
 8008bd4:	2a70      	cmp	r2, #112	; 0x70
 8008bd6:	d104      	bne.n	8008be2 <E131Params::callbackFunction(char const*)+0x82>
 8008bd8:	2201      	movs	r2, #1
 8008bda:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008bde:	7522      	strb	r2, [r4, #20]
 8008be0:	e7dc      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008be2:	2200      	movs	r2, #0
 8008be4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008be8:	7522      	strb	r2, [r4, #20]
 8008bea:	e7d7      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008bec:	2305      	movs	r3, #5
 8008bee:	4628      	mov	r0, r5
 8008bf0:	9301      	str	r3, [sp, #4]
 8008bf2:	4936      	ldr	r1, [pc, #216]	; (8008ccc <E131Params::callbackFunction(char const*)+0x16c>)
 8008bf4:	ab01      	add	r3, sp, #4
 8008bf6:	aa02      	add	r2, sp, #8
 8008bf8:	f005 ffd2 	bl	800eba0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008bfc:	bb30      	cbnz	r0, 8008c4c <E131Params::callbackFunction(char const*)+0xec>
 8008bfe:	f89d 2008 	ldrb.w	r2, [sp, #8]
 8008c02:	7fa3      	ldrb	r3, [r4, #30]
 8008c04:	f042 0220 	orr.w	r2, r2, #32
 8008c08:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8008c0c:	2a69      	cmp	r2, #105	; 0x69
 8008c0e:	77a3      	strb	r3, [r4, #30]
 8008c10:	d117      	bne.n	8008c42 <E131Params::callbackFunction(char const*)+0xe2>
 8008c12:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8008c16:	f042 0220 	orr.w	r2, r2, #32
 8008c1a:	2a6e      	cmp	r2, #110	; 0x6e
 8008c1c:	d111      	bne.n	8008c42 <E131Params::callbackFunction(char const*)+0xe2>
 8008c1e:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8008c22:	f042 0220 	orr.w	r2, r2, #32
 8008c26:	2a70      	cmp	r2, #112	; 0x70
 8008c28:	d10b      	bne.n	8008c42 <E131Params::callbackFunction(char const*)+0xe2>
 8008c2a:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8008c2e:	f042 0220 	orr.w	r2, r2, #32
 8008c32:	2a75      	cmp	r2, #117	; 0x75
 8008c34:	d105      	bne.n	8008c42 <E131Params::callbackFunction(char const*)+0xe2>
 8008c36:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8008c3a:	f042 0220 	orr.w	r2, r2, #32
 8008c3e:	2a74      	cmp	r2, #116	; 0x74
 8008c40:	d002      	beq.n	8008c48 <E131Params::callbackFunction(char const*)+0xe8>
 8008c42:	f043 0301 	orr.w	r3, r3, #1
 8008c46:	77a3      	strb	r3, [r4, #30]
 8008c48:	b007      	add	sp, #28
 8008c4a:	bd30      	pop	{r4, r5, pc}
 8008c4c:	4628      	mov	r0, r5
 8008c4e:	4920      	ldr	r1, [pc, #128]	; (8008cd0 <E131Params::callbackFunction(char const*)+0x170>)
 8008c50:	f10d 0201 	add.w	r2, sp, #1
 8008c54:	f006 f81b 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c58:	b1a8      	cbz	r0, 8008c86 <E131Params::callbackFunction(char const*)+0x126>
 8008c5a:	4628      	mov	r0, r5
 8008c5c:	491d      	ldr	r1, [pc, #116]	; (8008cd4 <E131Params::callbackFunction(char const*)+0x174>)
 8008c5e:	f10d 0201 	add.w	r2, sp, #1
 8008c62:	f006 f814 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c66:	b300      	cbz	r0, 8008caa <E131Params::callbackFunction(char const*)+0x14a>
 8008c68:	4628      	mov	r0, r5
 8008c6a:	491b      	ldr	r1, [pc, #108]	; (8008cd8 <E131Params::callbackFunction(char const*)+0x178>)
 8008c6c:	f10d 0201 	add.w	r2, sp, #1
 8008c70:	f006 f80d 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008c74:	2800      	cmp	r0, #0
 8008c76:	d1e7      	bne.n	8008c48 <E131Params::callbackFunction(char const*)+0xe8>
 8008c78:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8008c7c:	6863      	ldr	r3, [r4, #4]
 8008c7e:	b1f2      	cbz	r2, 8008cbe <E131Params::callbackFunction(char const*)+0x15e>
 8008c80:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8008c84:	e78a      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008c86:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8008c8a:	6863      	ldr	r3, [r4, #4]
 8008c8c:	1e51      	subs	r1, r2, #1
 8008c8e:	b2c9      	uxtb	r1, r1
 8008c90:	29c7      	cmp	r1, #199	; 0xc7
 8008c92:	d805      	bhi.n	8008ca0 <E131Params::callbackFunction(char const*)+0x140>
 8008c94:	2a64      	cmp	r2, #100	; 0x64
 8008c96:	d003      	beq.n	8008ca0 <E131Params::callbackFunction(char const*)+0x140>
 8008c98:	77e2      	strb	r2, [r4, #31]
 8008c9a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008c9e:	e77d      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008ca0:	2264      	movs	r2, #100	; 0x64
 8008ca2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008ca6:	77e2      	strb	r2, [r4, #31]
 8008ca8:	e778      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008caa:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8008cae:	6863      	ldr	r3, [r4, #4]
 8008cb0:	b112      	cbz	r2, 8008cb8 <E131Params::callbackFunction(char const*)+0x158>
 8008cb2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8008cb6:	e771      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008cb8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008cbc:	e76e      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008cbe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008cc2:	e76b      	b.n	8008b9c <E131Params::callbackFunction(char const*)+0x3c>
 8008cc4:	0801337c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 8008cc8:	080133bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, sp}
 8008ccc:	0801341f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip, sp}
 8008cd0:	08011d62 	stmdaeq	r1, {r1, r5, r6, r8, sl, fp, ip}
 8008cd4:	08011d40 	stmdaeq	r1, {r6, r8, sl, fp, ip}
 8008cd8:	08011d2a 	stmdaeq	r1, {r1, r3, r5, r8, sl, fp, ip}

08008cdc <E131Params::staticCallbackFunction(void*, char const*)>:
 8008cdc:	f7ff bf40 	b.w	8008b60 <E131Params::callbackFunction(char const*)>

08008ce0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 8008ce0:	b570      	push	{r4, r5, r6, lr}
 8008ce2:	4604      	mov	r4, r0
 8008ce4:	4615      	mov	r5, r2
 8008ce6:	461e      	mov	r6, r3
 8008ce8:	b086      	sub	sp, #24
 8008cea:	3004      	adds	r0, #4
 8008cec:	b361      	cbz	r1, 8008d48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x68>
 8008cee:	221f      	movs	r2, #31
 8008cf0:	f006 fd0f 	bl	800f712 <memmove>
 8008cf4:	462a      	mov	r2, r5
 8008cf6:	4633      	mov	r3, r6
 8008cf8:	4954      	ldr	r1, [pc, #336]	; (8008e4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16c>)
 8008cfa:	a803      	add	r0, sp, #12
 8008cfc:	f005 fe78 	bl	800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8008d00:	7fa3      	ldrb	r3, [r4, #30]
 8008d02:	4953      	ldr	r1, [pc, #332]	; (8008e50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>)
 8008d04:	f013 0f01 	tst.w	r3, #1
 8008d08:	ea6f 0303 	mvn.w	r3, r3
 8008d0c:	4a51      	ldr	r2, [pc, #324]	; (8008e54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x174>)
 8008d0e:	f003 0301 	and.w	r3, r3, #1
 8008d12:	bf08      	it	eq
 8008d14:	460a      	moveq	r2, r1
 8008d16:	a803      	add	r0, sp, #12
 8008d18:	494f      	ldr	r1, [pc, #316]	; (8008e58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x178>)
 8008d1a:	f7ff fe85 	bl	8008a28 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 8008d1e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8008d22:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8008d26:	42a9      	cmp	r1, r5
 8008d28:	d224      	bcs.n	8008d74 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x94>
 8008d2a:	9803      	ldr	r0, [sp, #12]
 8008d2c:	1a6d      	subs	r5, r5, r1
 8008d2e:	4408      	add	r0, r1
 8008d30:	6861      	ldr	r1, [r4, #4]
 8008d32:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8008d36:	06ce      	lsls	r6, r1, #27
 8008d38:	f8b4 300b 	ldrh.w	r3, [r4, #11]
 8008d3c:	d40b      	bmi.n	8008d56 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x76>
 8008d3e:	b962      	cbnz	r2, 8008d5a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x7a>
 8008d40:	9300      	str	r3, [sp, #0]
 8008d42:	4a46      	ldr	r2, [pc, #280]	; (8008e5c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>)
 8008d44:	4b46      	ldr	r3, [pc, #280]	; (8008e60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 8008d46:	e00b      	b.n	8008d60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x80>
 8008d48:	6823      	ldr	r3, [r4, #0]
 8008d4a:	4601      	mov	r1, r0
 8008d4c:	681a      	ldr	r2, [r3, #0]
 8008d4e:	4618      	mov	r0, r3
 8008d50:	68d2      	ldr	r2, [r2, #12]
 8008d52:	4790      	blx	r2
 8008d54:	e7ce      	b.n	8008cf4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x14>
 8008d56:	2a00      	cmp	r2, #0
 8008d58:	d035      	beq.n	8008dc6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe6>
 8008d5a:	9300      	str	r3, [sp, #0]
 8008d5c:	4a41      	ldr	r2, [pc, #260]	; (8008e64 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 8008d5e:	4b40      	ldr	r3, [pc, #256]	; (8008e60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 8008d60:	4629      	mov	r1, r5
 8008d62:	f006 ff37 	bl	800fbd4 <snprintf>
 8008d66:	4285      	cmp	r5, r0
 8008d68:	bfa2      	ittt	ge
 8008d6a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8008d6e:	18c0      	addge	r0, r0, r3
 8008d70:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8008d74:	493c      	ldr	r1, [pc, #240]	; (8008e68 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x188>)
 8008d76:	a803      	add	r0, sp, #12
 8008d78:	f005 fec0 	bl	800eafc <PropertiesBuilder::AddComment(char const*)>
 8008d7c:	7d20      	ldrb	r0, [r4, #20]
 8008d7e:	6863      	ldr	r3, [r4, #4]
 8008d80:	493a      	ldr	r1, [pc, #232]	; (8008e6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18c>)
 8008d82:	4a3b      	ldr	r2, [pc, #236]	; (8008e70 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x190>)
 8008d84:	f3c3 2300 	ubfx	r3, r3, #8, #1
 8008d88:	2800      	cmp	r0, #0
 8008d8a:	bf18      	it	ne
 8008d8c:	460a      	movne	r2, r1
 8008d8e:	4939      	ldr	r1, [pc, #228]	; (8008e74 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x194>)
 8008d90:	a803      	add	r0, sp, #12
 8008d92:	f7ff fe49 	bl	8008a28 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 8008d96:	4938      	ldr	r1, [pc, #224]	; (8008e78 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x198>)
 8008d98:	a803      	add	r0, sp, #12
 8008d9a:	f005 feaf 	bl	800eafc <PropertiesBuilder::AddComment(char const*)>
 8008d9e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8008da2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8008da6:	42a9      	cmp	r1, r5
 8008da8:	d220      	bcs.n	8008dec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x10c>
 8008daa:	9803      	ldr	r0, [sp, #12]
 8008dac:	1a6d      	subs	r5, r5, r1
 8008dae:	4408      	add	r0, r1
 8008db0:	6861      	ldr	r1, [r4, #4]
 8008db2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8008db6:	03c9      	lsls	r1, r1, #15
 8008db8:	7fe3      	ldrb	r3, [r4, #31]
 8008dba:	d408      	bmi.n	8008dce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xee>
 8008dbc:	b94a      	cbnz	r2, 8008dd2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 8008dbe:	9300      	str	r3, [sp, #0]
 8008dc0:	4a26      	ldr	r2, [pc, #152]	; (8008e5c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>)
 8008dc2:	4b2e      	ldr	r3, [pc, #184]	; (8008e7c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 8008dc4:	e008      	b.n	8008dd8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8008dc6:	9300      	str	r3, [sp, #0]
 8008dc8:	4a2d      	ldr	r2, [pc, #180]	; (8008e80 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 8008dca:	4b25      	ldr	r3, [pc, #148]	; (8008e60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 8008dcc:	e7c8      	b.n	8008d60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x80>
 8008dce:	2a00      	cmp	r2, #0
 8008dd0:	d037      	beq.n	8008e42 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x162>
 8008dd2:	9300      	str	r3, [sp, #0]
 8008dd4:	4a23      	ldr	r2, [pc, #140]	; (8008e64 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 8008dd6:	4b29      	ldr	r3, [pc, #164]	; (8008e7c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 8008dd8:	4629      	mov	r1, r5
 8008dda:	f006 fefb 	bl	800fbd4 <snprintf>
 8008dde:	4285      	cmp	r5, r0
 8008de0:	bfa2      	ittt	ge
 8008de2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8008de6:	18c0      	addge	r0, r0, r3
 8008de8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8008dec:	4925      	ldr	r1, [pc, #148]	; (8008e84 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a4>)
 8008dee:	a803      	add	r0, sp, #12
 8008df0:	f005 fe84 	bl	800eafc <PropertiesBuilder::AddComment(char const*)>
 8008df4:	6862      	ldr	r2, [r4, #4]
 8008df6:	4924      	ldr	r1, [pc, #144]	; (8008e88 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a8>)
 8008df8:	f3c2 3200 	ubfx	r2, r2, #12, #1
 8008dfc:	a803      	add	r0, sp, #12
 8008dfe:	f7ff fe3b 	bl	8008a78 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008e02:	6862      	ldr	r2, [r4, #4]
 8008e04:	4921      	ldr	r1, [pc, #132]	; (8008e8c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ac>)
 8008e06:	f3c2 3240 	ubfx	r2, r2, #13, #1
 8008e0a:	a803      	add	r0, sp, #12
 8008e0c:	f7ff fe34 	bl	8008a78 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008e10:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008e14:	b17b      	cbz	r3, 8008e36 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x156>
 8008e16:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008e1a:	9b03      	ldr	r3, [sp, #12]
 8008e1c:	4413      	add	r3, r2
 8008e1e:	227d      	movs	r2, #125	; 0x7d
 8008e20:	f803 2c01 	strb.w	r2, [r3, #-1]
 8008e24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008e28:	9903      	ldr	r1, [sp, #12]
 8008e2a:	54ca      	strb	r2, [r1, r3]
 8008e2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008e30:	3301      	adds	r3, #1
 8008e32:	f8ad 3012 	strh.w	r3, [sp, #18]
 8008e36:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008e3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e3c:	601a      	str	r2, [r3, #0]
 8008e3e:	b006      	add	sp, #24
 8008e40:	bd70      	pop	{r4, r5, r6, pc}
 8008e42:	9300      	str	r3, [sp, #0]
 8008e44:	4a0e      	ldr	r2, [pc, #56]	; (8008e80 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 8008e46:	4b0d      	ldr	r3, [pc, #52]	; (8008e7c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 8008e48:	e7c6      	b.n	8008dd8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8008e4a:	bf00      	nop
 8008e4c:	08011daa 	stmdaeq	r1, {r1, r3, r5, r7, r8, sl, fp, ip}
 8008e50:	08011cfa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
 8008e54:	08011d00 	stmdaeq	r1, {r8, sl, fp, ip}
 8008e58:	0801341f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip, sp}
 8008e5c:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 8008e60:	0801337c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 8008e64:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 8008e68:	08011d0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, sl, fp, ip}
 8008e6c:	08011d0b 	stmdaeq	r1, {r0, r1, r3, r8, sl, fp, ip}
 8008e70:	08011d07 	stmdaeq	r1, {r0, r1, r2, r8, sl, fp, ip}
 8008e74:	080133bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, sp}
 8008e78:	08011d1a 	stmdaeq	r1, {r1, r3, r4, r8, sl, fp, ip}
 8008e7c:	08011d62 	stmdaeq	r1, {r1, r5, r6, r8, sl, fp, ip}
 8008e80:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}
 8008e84:	08011d24 	stmdaeq	r1, {r2, r5, r8, sl, fp, ip}
 8008e88:	08011d40 	stmdaeq	r1, {r6, r8, sl, fp, ip}
 8008e8c:	08011d2a 	stmdaeq	r1, {r1, r3, r5, r8, sl, fp, ip}

08008e90 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 8008e90:	b513      	push	{r0, r1, r4, lr}
 8008e92:	6804      	ldr	r4, [r0, #0]
 8008e94:	b914      	cbnz	r4, 8008e9c <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 8008e96:	601c      	str	r4, [r3, #0]
 8008e98:	b002      	add	sp, #8
 8008e9a:	bd10      	pop	{r4, pc}
 8008e9c:	9300      	str	r3, [sp, #0]
 8008e9e:	4613      	mov	r3, r2
 8008ea0:	460a      	mov	r2, r1
 8008ea2:	2100      	movs	r1, #0
 8008ea4:	f7ff ff1c 	bl	8008ce0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 8008ea8:	e7f6      	b.n	8008e98 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

08008eaa <E131Params::Set(E131Bridge*)>:
 8008eaa:	6843      	ldr	r3, [r0, #4]
 8008eac:	b1c3      	cbz	r3, 8008ee0 <E131Params::Set(E131Bridge*)+0x36>
 8008eae:	05da      	lsls	r2, r3, #23
 8008eb0:	bf44      	itt	mi
 8008eb2:	7d02      	ldrbmi	r2, [r0, #20]
 8008eb4:	f8c1 254c 	strmi.w	r2, [r1, #1356]	; 0x54c
 8008eb8:	03db      	lsls	r3, r3, #15
 8008eba:	d506      	bpl.n	8008eca <E131Params::Set(E131Bridge*)+0x20>
 8008ebc:	7fc2      	ldrb	r2, [r0, #31]
 8008ebe:	1e53      	subs	r3, r2, #1
 8008ec0:	b2db      	uxtb	r3, r3
 8008ec2:	2bc7      	cmp	r3, #199	; 0xc7
 8008ec4:	bf98      	it	ls
 8008ec6:	f881 255d 	strbls.w	r2, [r1, #1373]	; 0x55d
 8008eca:	6843      	ldr	r3, [r0, #4]
 8008ecc:	04da      	lsls	r2, r3, #19
 8008ece:	bf44      	itt	mi
 8008ed0:	2201      	movmi	r2, #1
 8008ed2:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 8008ed6:	049b      	lsls	r3, r3, #18
 8008ed8:	bf44      	itt	mi
 8008eda:	2301      	movmi	r3, #1
 8008edc:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 8008ee0:	4770      	bx	lr

08008ee2 <E131Params::Dump()>:
 8008ee2:	4770      	bx	lr

08008ee4 <uuid_unparse_x>:
 8008ee4:	4603      	mov	r3, r0
 8008ee6:	b530      	push	{r4, r5, lr}
 8008ee8:	4608      	mov	r0, r1
 8008eea:	4611      	mov	r1, r2
 8008eec:	681a      	ldr	r2, [r3, #0]
 8008eee:	b08f      	sub	sp, #60	; 0x3c
 8008ef0:	ba12      	rev	r2, r2
 8008ef2:	920a      	str	r2, [sp, #40]	; 0x28
 8008ef4:	889a      	ldrh	r2, [r3, #4]
 8008ef6:	891c      	ldrh	r4, [r3, #8]
 8008ef8:	ba52      	rev16	r2, r2
 8008efa:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8008efe:	88da      	ldrh	r2, [r3, #6]
 8008f00:	ba64      	rev16	r4, r4
 8008f02:	ba52      	rev16	r2, r2
 8008f04:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8008f08:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 8008f0c:	f103 020a 	add.w	r2, r3, #10
 8008f10:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 8008f14:	3310      	adds	r3, #16
 8008f16:	4293      	cmp	r3, r2
 8008f18:	d122      	bne.n	8008f60 <uuid_unparse_x+0x7c>
 8008f1a:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 8008f1e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008f22:	9208      	str	r2, [sp, #32]
 8008f24:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 8008f28:	0a1b      	lsrs	r3, r3, #8
 8008f2a:	9207      	str	r2, [sp, #28]
 8008f2c:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 8008f30:	9301      	str	r3, [sp, #4]
 8008f32:	9206      	str	r2, [sp, #24]
 8008f34:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8008f38:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8008f3c:	9205      	str	r2, [sp, #20]
 8008f3e:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 8008f42:	9300      	str	r3, [sp, #0]
 8008f44:	9204      	str	r2, [sp, #16]
 8008f46:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 8008f4a:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8008f4e:	9203      	str	r2, [sp, #12]
 8008f50:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 8008f54:	9202      	str	r2, [sp, #8]
 8008f56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008f58:	f006 fe24 	bl	800fba4 <sprintf>
 8008f5c:	b00f      	add	sp, #60	; 0x3c
 8008f5e:	bd30      	pop	{r4, r5, pc}
 8008f60:	f812 5b01 	ldrb.w	r5, [r2], #1
 8008f64:	f804 5b01 	strb.w	r5, [r4], #1
 8008f68:	e7d5      	b.n	8008f16 <uuid_unparse_x+0x32>
	...

08008f6c <uuid_unparse>:
 8008f6c:	4a01      	ldr	r2, [pc, #4]	; (8008f74 <uuid_unparse+0x8>)
 8008f6e:	f7ff bfb9 	b.w	8008ee4 <uuid_unparse_x>
 8008f72:	bf00      	nop
 8008f74:	08011dc1 	stmdaeq	r1, {r0, r6, r7, r8, sl, fp, ip}

08008f78 <LightSet::Blackout(bool)>:
 8008f78:	4770      	bx	lr

08008f7a <DmxSend::~DmxSend()>:
 8008f7a:	4770      	bx	lr

08008f7c <DmxSend::Start(unsigned int)>:
 8008f7c:	2301      	movs	r3, #1
 8008f7e:	b410      	push	{r4}
 8008f80:	4c08      	ldr	r4, [pc, #32]	; (8008fa4 <DmxSend::Start(unsigned int)+0x28>)
 8008f82:	fa03 f001 	lsl.w	r0, r3, r1
 8008f86:	7822      	ldrb	r2, [r4, #0]
 8008f88:	ea30 0c02 	bics.w	ip, r0, r2
 8008f8c:	d007      	beq.n	8008f9e <DmxSend::Start(unsigned int)+0x22>
 8008f8e:	4302      	orrs	r2, r0
 8008f90:	4805      	ldr	r0, [pc, #20]	; (8008fa8 <DmxSend::Start(unsigned int)+0x2c>)
 8008f92:	7022      	strb	r2, [r4, #0]
 8008f94:	6800      	ldr	r0, [r0, #0]
 8008f96:	2200      	movs	r2, #0
 8008f98:	bc10      	pop	{r4}
 8008f9a:	f000 bc65 	b.w	8009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f9e:	bc10      	pop	{r4}
 8008fa0:	4770      	bx	lr
 8008fa2:	bf00      	nop
 8008fa4:	2000070c 	andcs	r0, r0, ip, lsl #14
 8008fa8:	20000b4c 	andcs	r0, r0, ip, asr #22

08008fac <DmxSend::Stop(unsigned int)>:
 8008fac:	2201      	movs	r2, #1
 8008fae:	b410      	push	{r4}
 8008fb0:	4809      	ldr	r0, [pc, #36]	; (8008fd8 <DmxSend::Stop(unsigned int)+0x2c>)
 8008fb2:	408a      	lsls	r2, r1
 8008fb4:	7803      	ldrb	r3, [r0, #0]
 8008fb6:	ea03 0402 	and.w	r4, r3, r2
 8008fba:	439a      	bics	r2, r3
 8008fbc:	d109      	bne.n	8008fd2 <DmxSend::Stop(unsigned int)+0x26>
 8008fbe:	ea23 0304 	bic.w	r3, r3, r4
 8008fc2:	7003      	strb	r3, [r0, #0]
 8008fc4:	2300      	movs	r3, #0
 8008fc6:	4805      	ldr	r0, [pc, #20]	; (8008fdc <DmxSend::Stop(unsigned int)+0x30>)
 8008fc8:	461a      	mov	r2, r3
 8008fca:	6800      	ldr	r0, [r0, #0]
 8008fcc:	bc10      	pop	{r4}
 8008fce:	f000 bc4b 	b.w	8009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008fd2:	bc10      	pop	{r4}
 8008fd4:	4770      	bx	lr
 8008fd6:	bf00      	nop
 8008fd8:	2000070c 	andcs	r0, r0, ip, lsl #14
 8008fdc:	20000b4c 	andcs	r0, r0, ip, asr #22

08008fe0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 8008fe0:	b11b      	cbz	r3, 8008fea <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 8008fe2:	4802      	ldr	r0, [pc, #8]	; (8008fec <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 8008fe4:	6800      	ldr	r0, [r0, #0]
 8008fe6:	f000 bda5 	b.w	8009b34 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 8008fea:	4770      	bx	lr
 8008fec:	20000b4c 	andcs	r0, r0, ip, asr #22

08008ff0 <DmxSend::Print()>:
 8008ff0:	b510      	push	{r4, lr}
 8008ff2:	4c0e      	ldr	r4, [pc, #56]	; (800902c <DmxSend::Print()+0x3c>)
 8008ff4:	480e      	ldr	r0, [pc, #56]	; (8009030 <DmxSend::Print()+0x40>)
 8008ff6:	f006 fdc5 	bl	800fb84 <printf>
 8008ffa:	6823      	ldr	r3, [r4, #0]
 8008ffc:	480d      	ldr	r0, [pc, #52]	; (8009034 <DmxSend::Print()+0x44>)
 8008ffe:	6819      	ldr	r1, [r3, #0]
 8009000:	f006 fdc0 	bl	800fb84 <printf>
 8009004:	6823      	ldr	r3, [r4, #0]
 8009006:	480c      	ldr	r0, [pc, #48]	; (8009038 <DmxSend::Print()+0x48>)
 8009008:	6859      	ldr	r1, [r3, #4]
 800900a:	f006 fdbb 	bl	800fb84 <printf>
 800900e:	6823      	ldr	r3, [r4, #0]
 8009010:	490a      	ldr	r1, [pc, #40]	; (800903c <DmxSend::Print()+0x4c>)
 8009012:	689b      	ldr	r3, [r3, #8]
 8009014:	480a      	ldr	r0, [pc, #40]	; (8009040 <DmxSend::Print()+0x50>)
 8009016:	fbb1 f1f3 	udiv	r1, r1, r3
 800901a:	f006 fdb3 	bl	800fb84 <printf>
 800901e:	6823      	ldr	r3, [r4, #0]
 8009020:	4808      	ldr	r0, [pc, #32]	; (8009044 <DmxSend::Print()+0x54>)
 8009022:	8a19      	ldrh	r1, [r3, #16]
 8009024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009028:	f006 bdac 	b.w	800fb84 <printf>
 800902c:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009030:	08011df2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, fp, ip}
 8009034:	08011dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
 8009038:	08011e10 	stmdaeq	r1, {r4, r9, sl, fp, ip}
 800903c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009040:	08011e24 	stmdaeq	r1, {r2, r5, r9, sl, fp, ip}
 8009044:	08011e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, ip}

08009048 <DmxSend::~DmxSend()>:
 8009048:	b510      	push	{r4, lr}
 800904a:	4604      	mov	r4, r0
 800904c:	f006 fa9e 	bl	800f58c <operator delete(void*)>
 8009050:	4620      	mov	r0, r4
 8009052:	bd10      	pop	{r4, pc}

08009054 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8009054:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009056:	88c5      	ldrh	r5, [r0, #6]
 8009058:	8886      	ldrh	r6, [r0, #4]
 800905a:	42b5      	cmp	r5, r6
 800905c:	d216      	bcs.n	800908c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800905e:	4604      	mov	r4, r0
 8009060:	6800      	ldr	r0, [r0, #0]
 8009062:	4428      	add	r0, r5
 8009064:	1b75      	subs	r5, r6, r5
 8009066:	7a26      	ldrb	r6, [r4, #8]
 8009068:	b923      	cbnz	r3, 8009074 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800906a:	b926      	cbnz	r6, 8009076 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800906c:	9200      	str	r2, [sp, #0]
 800906e:	460b      	mov	r3, r1
 8009070:	4a09      	ldr	r2, [pc, #36]	; (8009098 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8009072:	e003      	b.n	800907c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009074:	b166      	cbz	r6, 8009090 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8009076:	460b      	mov	r3, r1
 8009078:	9200      	str	r2, [sp, #0]
 800907a:	4a08      	ldr	r2, [pc, #32]	; (800909c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800907c:	4629      	mov	r1, r5
 800907e:	f006 fda9 	bl	800fbd4 <snprintf>
 8009082:	4285      	cmp	r5, r0
 8009084:	bfa2      	ittt	ge
 8009086:	88e3      	ldrhge	r3, [r4, #6]
 8009088:	181b      	addge	r3, r3, r0
 800908a:	80e3      	strhge	r3, [r4, #6]
 800908c:	b002      	add	sp, #8
 800908e:	bd70      	pop	{r4, r5, r6, pc}
 8009090:	9200      	str	r2, [sp, #0]
 8009092:	460b      	mov	r3, r1
 8009094:	4a02      	ldr	r2, [pc, #8]	; (80090a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009096:	e7f1      	b.n	800907c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009098:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 800909c:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 80090a0:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

080090a4 <DmxParams::DmxParams(DmxParamsStore*)>:
 80090a4:	6001      	str	r1, [r0, #0]
 80090a6:	2100      	movs	r1, #0
 80090a8:	4a03      	ldr	r2, [pc, #12]	; (80090b8 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 80090aa:	e9c0 1201 	strd	r1, r2, [r0, #4]
 80090ae:	f64f 7228 	movw	r2, #65320	; 0xff28
 80090b2:	8182      	strh	r2, [r0, #12]
 80090b4:	4770      	bx	lr
 80090b6:	bf00      	nop
 80090b8:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

080090bc <DmxParams::Load()>:
 80090bc:	b508      	push	{r3, lr}
 80090be:	2300      	movs	r3, #0
 80090c0:	4601      	mov	r1, r0
 80090c2:	6043      	str	r3, [r0, #4]
 80090c4:	6800      	ldr	r0, [r0, #0]
 80090c6:	b120      	cbz	r0, 80090d2 <DmxParams::Load()+0x16>
 80090c8:	6803      	ldr	r3, [r0, #0]
 80090ca:	3104      	adds	r1, #4
 80090cc:	68db      	ldr	r3, [r3, #12]
 80090ce:	4798      	blx	r3
 80090d0:	2001      	movs	r0, #1
 80090d2:	bd08      	pop	{r3, pc}

080090d4 <DmxParams::Load(char const*, unsigned int)>:
 80090d4:	6803      	ldr	r3, [r0, #0]
 80090d6:	b1d3      	cbz	r3, 800910e <DmxParams::Load(char const*, unsigned int)+0x3a>
 80090d8:	2300      	movs	r3, #0
 80090da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80090dc:	460d      	mov	r5, r1
 80090de:	4616      	mov	r6, r2
 80090e0:	4604      	mov	r4, r0
 80090e2:	6043      	str	r3, [r0, #4]
 80090e4:	4602      	mov	r2, r0
 80090e6:	490a      	ldr	r1, [pc, #40]	; (8009110 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 80090e8:	4668      	mov	r0, sp
 80090ea:	f005 fd21 	bl	800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80090ee:	4632      	mov	r2, r6
 80090f0:	4629      	mov	r1, r5
 80090f2:	4668      	mov	r0, sp
 80090f4:	f005 fd20 	bl	800eb38 <ReadConfigFile::Read(char const*, unsigned int)>
 80090f8:	4621      	mov	r1, r4
 80090fa:	f851 0b04 	ldr.w	r0, [r1], #4
 80090fe:	6803      	ldr	r3, [r0, #0]
 8009100:	689b      	ldr	r3, [r3, #8]
 8009102:	4798      	blx	r3
 8009104:	4668      	mov	r0, sp
 8009106:	f005 fd16 	bl	800eb36 <ReadConfigFile::~ReadConfigFile()>
 800910a:	b002      	add	sp, #8
 800910c:	bd70      	pop	{r4, r5, r6, pc}
 800910e:	4770      	bx	lr
 8009110:	080091e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, ip, pc}

08009114 <DmxParams::callbackFunction(char const*)>:
 8009114:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009116:	460d      	mov	r5, r1
 8009118:	4604      	mov	r4, r0
 800911a:	492d      	ldr	r1, [pc, #180]	; (80091d0 <DmxParams::callbackFunction(char const*)+0xbc>)
 800911c:	4628      	mov	r0, r5
 800911e:	f10d 0206 	add.w	r2, sp, #6
 8009122:	f005 fd96 	bl	800ec52 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009126:	b988      	cbnz	r0, 800914c <DmxParams::callbackFunction(char const*)+0x38>
 8009128:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800912c:	6863      	ldr	r3, [r4, #4]
 800912e:	2a5b      	cmp	r2, #91	; 0x5b
 8009130:	d907      	bls.n	8009142 <DmxParams::callbackFunction(char const*)+0x2e>
 8009132:	2ab0      	cmp	r2, #176	; 0xb0
 8009134:	d005      	beq.n	8009142 <DmxParams::callbackFunction(char const*)+0x2e>
 8009136:	8122      	strh	r2, [r4, #8]
 8009138:	f043 0301 	orr.w	r3, r3, #1
 800913c:	6063      	str	r3, [r4, #4]
 800913e:	b003      	add	sp, #12
 8009140:	bd30      	pop	{r4, r5, pc}
 8009142:	22b0      	movs	r2, #176	; 0xb0
 8009144:	f023 0301 	bic.w	r3, r3, #1
 8009148:	8122      	strh	r2, [r4, #8]
 800914a:	e7f7      	b.n	800913c <DmxParams::callbackFunction(char const*)+0x28>
 800914c:	4628      	mov	r0, r5
 800914e:	4921      	ldr	r1, [pc, #132]	; (80091d4 <DmxParams::callbackFunction(char const*)+0xc0>)
 8009150:	f10d 0206 	add.w	r2, sp, #6
 8009154:	f005 fd7d 	bl	800ec52 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009158:	b968      	cbnz	r0, 8009176 <DmxParams::callbackFunction(char const*)+0x62>
 800915a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800915e:	6863      	ldr	r3, [r4, #4]
 8009160:	2a0c      	cmp	r2, #12
 8009162:	bf93      	iteet	ls
 8009164:	220c      	movls	r2, #12
 8009166:	8162      	strhhi	r2, [r4, #10]
 8009168:	f043 0302 	orrhi.w	r3, r3, #2
 800916c:	8162      	strhls	r2, [r4, #10]
 800916e:	bf98      	it	ls
 8009170:	f023 0302 	bicls.w	r3, r3, #2
 8009174:	e7e2      	b.n	800913c <DmxParams::callbackFunction(char const*)+0x28>
 8009176:	4628      	mov	r0, r5
 8009178:	4917      	ldr	r1, [pc, #92]	; (80091d8 <DmxParams::callbackFunction(char const*)+0xc4>)
 800917a:	f10d 0205 	add.w	r2, sp, #5
 800917e:	f005 fd86 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009182:	b950      	cbnz	r0, 800919a <DmxParams::callbackFunction(char const*)+0x86>
 8009184:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009188:	6863      	ldr	r3, [r4, #4]
 800918a:	2a28      	cmp	r2, #40	; 0x28
 800918c:	7322      	strb	r2, [r4, #12]
 800918e:	bf14      	ite	ne
 8009190:	f043 0304 	orrne.w	r3, r3, #4
 8009194:	f023 0304 	biceq.w	r3, r3, #4
 8009198:	e7d0      	b.n	800913c <DmxParams::callbackFunction(char const*)+0x28>
 800919a:	4628      	mov	r0, r5
 800919c:	490f      	ldr	r1, [pc, #60]	; (80091dc <DmxParams::callbackFunction(char const*)+0xc8>)
 800919e:	f10d 0206 	add.w	r2, sp, #6
 80091a2:	f005 fd56 	bl	800ec52 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80091a6:	2800      	cmp	r0, #0
 80091a8:	d1c9      	bne.n	800913e <DmxParams::callbackFunction(char const*)+0x2a>
 80091aa:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80091ae:	6863      	ldr	r3, [r4, #4]
 80091b0:	1e91      	subs	r1, r2, #2
 80091b2:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 80091b6:	bf2f      	iteee	cs
 80091b8:	22ff      	movcs	r2, #255	; 0xff
 80091ba:	0852      	lsrcc	r2, r2, #1
 80091bc:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 80091c0:	7362      	strbcc	r2, [r4, #13]
 80091c2:	bf32      	itee	cc
 80091c4:	f043 0308 	orrcc.w	r3, r3, #8
 80091c8:	7362      	strbcs	r2, [r4, #13]
 80091ca:	f023 0308 	biccs.w	r3, r3, #8
 80091ce:	e7b5      	b.n	800913c <DmxParams::callbackFunction(char const*)+0x28>
 80091d0:	08011e80 	stmdaeq	r1, {r7, r9, sl, fp, ip}
 80091d4:	08011ea4 	stmdaeq	r1, {r2, r5, r7, r9, sl, fp, ip}
 80091d8:	08011e97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, fp, ip}
 80091dc:	08011e8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, fp, ip}

080091e0 <DmxParams::staticCallbackFunction(void*, char const*)>:
 80091e0:	f7ff bf98 	b.w	8009114 <DmxParams::callbackFunction(char const*)>

080091e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 80091e4:	b570      	push	{r4, r5, r6, lr}
 80091e6:	4604      	mov	r4, r0
 80091e8:	4615      	mov	r5, r2
 80091ea:	461e      	mov	r6, r3
 80091ec:	b086      	sub	sp, #24
 80091ee:	3004      	adds	r0, #4
 80091f0:	b361      	cbz	r1, 800924c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 80091f2:	220a      	movs	r2, #10
 80091f4:	f006 fa8d 	bl	800f712 <memmove>
 80091f8:	462a      	mov	r2, r5
 80091fa:	4633      	mov	r3, r6
 80091fc:	4931      	ldr	r1, [pc, #196]	; (80092c4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 80091fe:	a803      	add	r0, sp, #12
 8009200:	f005 fbf6 	bl	800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009204:	6863      	ldr	r3, [r4, #4]
 8009206:	8922      	ldrh	r2, [r4, #8]
 8009208:	492f      	ldr	r1, [pc, #188]	; (80092c8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800920a:	f003 0301 	and.w	r3, r3, #1
 800920e:	a803      	add	r0, sp, #12
 8009210:	f7ff ff20 	bl	8009054 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009214:	6863      	ldr	r3, [r4, #4]
 8009216:	492d      	ldr	r1, [pc, #180]	; (80092cc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 8009218:	8962      	ldrh	r2, [r4, #10]
 800921a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800921e:	a803      	add	r0, sp, #12
 8009220:	f7ff ff18 	bl	8009054 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009224:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009228:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800922c:	42a9      	cmp	r1, r5
 800922e:	d222      	bcs.n	8009276 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 8009230:	9803      	ldr	r0, [sp, #12]
 8009232:	1a6d      	subs	r5, r5, r1
 8009234:	4408      	add	r0, r1
 8009236:	6861      	ldr	r1, [r4, #4]
 8009238:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800923c:	0749      	lsls	r1, r1, #29
 800923e:	7b23      	ldrb	r3, [r4, #12]
 8009240:	d40b      	bmi.n	800925a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 8009242:	b95a      	cbnz	r2, 800925c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 8009244:	9300      	str	r3, [sp, #0]
 8009246:	4a22      	ldr	r2, [pc, #136]	; (80092d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 8009248:	4b22      	ldr	r3, [pc, #136]	; (80092d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800924a:	e00a      	b.n	8009262 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800924c:	6823      	ldr	r3, [r4, #0]
 800924e:	4601      	mov	r1, r0
 8009250:	681a      	ldr	r2, [r3, #0]
 8009252:	4618      	mov	r0, r3
 8009254:	68d2      	ldr	r2, [r2, #12]
 8009256:	4790      	blx	r2
 8009258:	e7ce      	b.n	80091f8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800925a:	b37a      	cbz	r2, 80092bc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 800925c:	9300      	str	r3, [sp, #0]
 800925e:	4a1e      	ldr	r2, [pc, #120]	; (80092d8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009260:	4b1c      	ldr	r3, [pc, #112]	; (80092d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009262:	4629      	mov	r1, r5
 8009264:	f006 fcb6 	bl	800fbd4 <snprintf>
 8009268:	4285      	cmp	r5, r0
 800926a:	bfa2      	ittt	ge
 800926c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009270:	18c0      	addge	r0, r0, r3
 8009272:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009276:	7b62      	ldrb	r2, [r4, #13]
 8009278:	6863      	ldr	r3, [r4, #4]
 800927a:	3201      	adds	r2, #1
 800927c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8009280:	4916      	ldr	r1, [pc, #88]	; (80092dc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009282:	0052      	lsls	r2, r2, #1
 8009284:	a803      	add	r0, sp, #12
 8009286:	f7ff fee5 	bl	8009054 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800928a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800928e:	b17b      	cbz	r3, 80092b0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 8009290:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009294:	9b03      	ldr	r3, [sp, #12]
 8009296:	4413      	add	r3, r2
 8009298:	227d      	movs	r2, #125	; 0x7d
 800929a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800929e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80092a2:	9903      	ldr	r1, [sp, #12]
 80092a4:	54ca      	strb	r2, [r1, r3]
 80092a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80092aa:	3301      	adds	r3, #1
 80092ac:	f8ad 3012 	strh.w	r3, [sp, #18]
 80092b0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80092b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80092b6:	601a      	str	r2, [r3, #0]
 80092b8:	b006      	add	sp, #24
 80092ba:	bd70      	pop	{r4, r5, r6, pc}
 80092bc:	9300      	str	r3, [sp, #0]
 80092be:	4a08      	ldr	r2, [pc, #32]	; (80092e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 80092c0:	4b04      	ldr	r3, [pc, #16]	; (80092d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 80092c2:	e7ce      	b.n	8009262 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 80092c4:	08011ead 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, fp, ip}
 80092c8:	08011e80 	stmdaeq	r1, {r7, r9, sl, fp, ip}
 80092cc:	08011ea4 	stmdaeq	r1, {r2, r5, r7, r9, sl, fp, ip}
 80092d0:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 80092d4:	08011e97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, fp, ip}
 80092d8:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 80092dc:	08011e8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, fp, ip}
 80092e0:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

080092e4 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 80092e4:	b513      	push	{r0, r1, r4, lr}
 80092e6:	6804      	ldr	r4, [r0, #0]
 80092e8:	b914      	cbnz	r4, 80092f0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80092ea:	601c      	str	r4, [r3, #0]
 80092ec:	b002      	add	sp, #8
 80092ee:	bd10      	pop	{r4, pc}
 80092f0:	9300      	str	r3, [sp, #0]
 80092f2:	4613      	mov	r3, r2
 80092f4:	460a      	mov	r2, r1
 80092f6:	2100      	movs	r1, #0
 80092f8:	f7ff ff74 	bl	80091e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 80092fc:	e7f6      	b.n	80092ec <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009300 <DmxParams::Set(Dmx*)>:
 8009300:	b538      	push	{r3, r4, r5, lr}
 8009302:	6843      	ldr	r3, [r0, #4]
 8009304:	4604      	mov	r4, r0
 8009306:	07d8      	lsls	r0, r3, #31
 8009308:	460d      	mov	r5, r1
 800930a:	d503      	bpl.n	8009314 <DmxParams::Set(Dmx*)+0x14>
 800930c:	4628      	mov	r0, r5
 800930e:	8921      	ldrh	r1, [r4, #8]
 8009310:	f000 fbec 	bl	8009aec <Dmx::SetDmxBreakTime(unsigned int)>
 8009314:	6863      	ldr	r3, [r4, #4]
 8009316:	0799      	lsls	r1, r3, #30
 8009318:	d503      	bpl.n	8009322 <DmxParams::Set(Dmx*)+0x22>
 800931a:	4628      	mov	r0, r5
 800931c:	8961      	ldrh	r1, [r4, #10]
 800931e:	f000 fbef 	bl	8009b00 <Dmx::SetDmxMabTime(unsigned int)>
 8009322:	6863      	ldr	r3, [r4, #4]
 8009324:	075a      	lsls	r2, r3, #29
 8009326:	d507      	bpl.n	8009338 <DmxParams::Set(Dmx*)+0x38>
 8009328:	7b21      	ldrb	r1, [r4, #12]
 800932a:	b111      	cbz	r1, 8009332 <DmxParams::Set(Dmx*)+0x32>
 800932c:	4b08      	ldr	r3, [pc, #32]	; (8009350 <DmxParams::Set(Dmx*)+0x50>)
 800932e:	fbb3 f1f1 	udiv	r1, r3, r1
 8009332:	4628      	mov	r0, r5
 8009334:	f000 fbaa 	bl	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009338:	6863      	ldr	r3, [r4, #4]
 800933a:	071b      	lsls	r3, r3, #28
 800933c:	d507      	bpl.n	800934e <DmxParams::Set(Dmx*)+0x4e>
 800933e:	7b61      	ldrb	r1, [r4, #13]
 8009340:	4628      	mov	r0, r5
 8009342:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009346:	3101      	adds	r1, #1
 8009348:	0049      	lsls	r1, r1, #1
 800934a:	f000 bbe3 	b.w	8009b14 <Dmx::SetDmxSlots(unsigned short)>
 800934e:	bd38      	pop	{r3, r4, r5, pc}
 8009350:	000f4240 	andeq	r4, pc, r0, asr #4

08009354 <DmxParams::Dump()>:
 8009354:	4770      	bx	lr
	...

08009358 <USART2_IRQHandler>:
 8009358:	b510      	push	{r4, lr}
 800935a:	f3bf 8f5f 	dmb	sy
 800935e:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8009362:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8009366:	f013 0f02 	tst.w	r3, #2
 800936a:	4b74      	ldr	r3, [pc, #464]	; (800953c <USART2_IRQHandler+0x1e4>)
 800936c:	d00e      	beq.n	800938c <USART2_IRQHandler+0x34>
 800936e:	f8d2 1800 	ldr.w	r1, [r2, #2048]	; 0x800
 8009372:	f021 0102 	bic.w	r1, r1, #2
 8009376:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 800937a:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800937e:	2200      	movs	r2, #0
 8009380:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009384:	2202      	movs	r2, #2
 8009386:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800938a:	bd10      	pop	{r4, pc}
 800938c:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009390:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 8009394:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009398:	290a      	cmp	r1, #10
 800939a:	f200 80ca 	bhi.w	8009532 <USART2_IRQHandler+0x1da>
 800939e:	e8df f001 	tbb	[pc, r1]
 80093a2:	c810c806 	ldmdagt	r0, {r1, r2, fp, lr, pc}
 80093a6:	6d5f482c 	ldclvs	8, cr4, [pc, #-176]	; 80092fc <DmxParams::Save(char*, unsigned int, unsigned int&)+0x18>
 80093aa:	00ac9886 	adceq	r9, ip, r6, lsl #17
 80093ae:	2108      	movs	r1, #8
 80093b0:	701a      	strb	r2, [r3, #0]
 80093b2:	2201      	movs	r2, #1
 80093b4:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80093b8:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80093bc:	f3bf 8f5f 	dmb	sy
 80093c0:	e7e3      	b.n	800938a <USART2_IRQHandler+0x32>
 80093c2:	b11a      	cbz	r2, 80093cc <USART2_IRQHandler+0x74>
 80093c4:	2acc      	cmp	r2, #204	; 0xcc
 80093c6:	d012      	beq.n	80093ee <USART2_IRQHandler+0x96>
 80093c8:	2200      	movs	r2, #0
 80093ca:	e00d      	b.n	80093e8 <USART2_IRQHandler+0x90>
 80093cc:	701a      	strb	r2, [r3, #0]
 80093ce:	2201      	movs	r2, #1
 80093d0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80093d4:	4a5a      	ldr	r2, [pc, #360]	; (8009540 <USART2_IRQHandler+0x1e8>)
 80093d6:	6851      	ldr	r1, [r2, #4]
 80093d8:	3101      	adds	r1, #1
 80093da:	6051      	str	r1, [r2, #4]
 80093dc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80093e0:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 80093e4:	60d1      	str	r1, [r2, #12]
 80093e6:	2204      	movs	r2, #4
 80093e8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80093ec:	e7e6      	b.n	80093bc <USART2_IRQHandler+0x64>
 80093ee:	701a      	strb	r2, [r3, #0]
 80093f0:	4a54      	ldr	r2, [pc, #336]	; (8009544 <USART2_IRQHandler+0x1ec>)
 80093f2:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80093f6:	2205      	movs	r2, #5
 80093f8:	e7f6      	b.n	80093e8 <USART2_IRQHandler+0x90>
 80093fa:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 80093fe:	b288      	uxth	r0, r1
 8009400:	541a      	strb	r2, [r3, r0]
 8009402:	1c4a      	adds	r2, r1, #1
 8009404:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009408:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800940c:	d904      	bls.n	8009418 <USART2_IRQHandler+0xc0>
 800940e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009412:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009416:	e7d7      	b.n	80093c8 <USART2_IRQHandler+0x70>
 8009418:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800941c:	4848      	ldr	r0, [pc, #288]	; (8009540 <USART2_IRQHandler+0x1e8>)
 800941e:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8009422:	68c3      	ldr	r3, [r0, #12]
 8009424:	60c1      	str	r1, [r0, #12]
 8009426:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 800942a:	3304      	adds	r3, #4
 800942c:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8009430:	e7c4      	b.n	80093bc <USART2_IRQHandler+0x64>
 8009432:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009436:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800943a:	541a      	strb	r2, [r3, r0]
 800943c:	1c41      	adds	r1, r0, #1
 800943e:	3817      	subs	r0, #23
 8009440:	b289      	uxth	r1, r1
 8009442:	4422      	add	r2, r4
 8009444:	28e7      	cmp	r0, #231	; 0xe7
 8009446:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800944a:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800944e:	d804      	bhi.n	800945a <USART2_IRQHandler+0x102>
 8009450:	789a      	ldrb	r2, [r3, #2]
 8009452:	428a      	cmp	r2, r1
 8009454:	d101      	bne.n	800945a <USART2_IRQHandler+0x102>
 8009456:	2206      	movs	r2, #6
 8009458:	e7c6      	b.n	80093e8 <USART2_IRQHandler+0x90>
 800945a:	29ff      	cmp	r1, #255	; 0xff
 800945c:	d9ae      	bls.n	80093bc <USART2_IRQHandler+0x64>
 800945e:	e7b3      	b.n	80093c8 <USART2_IRQHandler+0x70>
 8009460:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009464:	545a      	strb	r2, [r3, r1]
 8009466:	3101      	adds	r1, #1
 8009468:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800946c:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8009470:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8009474:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009478:	2207      	movs	r2, #7
 800947a:	e7b5      	b.n	80093e8 <USART2_IRQHandler+0x90>
 800947c:	f8b3 0206 	ldrh.w	r0, [r3, #518]	; 0x206
 8009480:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009484:	545a      	strb	r2, [r3, r1]
 8009486:	1a82      	subs	r2, r0, r2
 8009488:	b292      	uxth	r2, r2
 800948a:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800948e:	b912      	cbnz	r2, 8009496 <USART2_IRQHandler+0x13e>
 8009490:	785a      	ldrb	r2, [r3, #1]
 8009492:	2a01      	cmp	r2, #1
 8009494:	d001      	beq.n	800949a <USART2_IRQHandler+0x142>
 8009496:	2200      	movs	r2, #0
 8009498:	e7bb      	b.n	8009412 <USART2_IRQHandler+0xba>
 800949a:	3101      	adds	r1, #1
 800949c:	4a2a      	ldr	r2, [pc, #168]	; (8009548 <USART2_IRQHandler+0x1f0>)
 800949e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80094a2:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80094a6:	6851      	ldr	r1, [r2, #4]
 80094a8:	4a28      	ldr	r2, [pc, #160]	; (800954c <USART2_IRQHandler+0x1f4>)
 80094aa:	6011      	str	r1, [r2, #0]
 80094ac:	e78c      	b.n	80093c8 <USART2_IRQHandler+0x70>
 80094ae:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80094b2:	2aaa      	cmp	r2, #170	; 0xaa
 80094b4:	545a      	strb	r2, [r3, r1]
 80094b6:	f101 0101 	add.w	r1, r1, #1
 80094ba:	b289      	uxth	r1, r1
 80094bc:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80094c0:	d002      	beq.n	80094c8 <USART2_IRQHandler+0x170>
 80094c2:	2909      	cmp	r1, #9
 80094c4:	f47f af7a 	bne.w	80093bc <USART2_IRQHandler+0x64>
 80094c8:	2200      	movs	r2, #0
 80094ca:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80094ce:	2209      	movs	r2, #9
 80094d0:	e78a      	b.n	80093e8 <USART2_IRQHandler+0x90>
 80094d2:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80094d6:	545a      	strb	r2, [r3, r1]
 80094d8:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 80094dc:	3101      	adds	r1, #1
 80094de:	3201      	adds	r2, #1
 80094e0:	b292      	uxth	r2, r2
 80094e2:	2a0c      	cmp	r2, #12
 80094e4:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80094e8:	d002      	beq.n	80094f0 <USART2_IRQHandler+0x198>
 80094ea:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80094ee:	e765      	b.n	80093bc <USART2_IRQHandler+0x64>
 80094f0:	2200      	movs	r2, #0
 80094f2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 80094f6:	220a      	movs	r2, #10
 80094f8:	e776      	b.n	80093e8 <USART2_IRQHandler+0x90>
 80094fa:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80094fe:	545a      	strb	r2, [r3, r1]
 8009500:	1c4a      	adds	r2, r1, #1
 8009502:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8009506:	b292      	uxth	r2, r2
 8009508:	3101      	adds	r1, #1
 800950a:	b289      	uxth	r1, r1
 800950c:	2904      	cmp	r1, #4
 800950e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009512:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8009516:	f47f af51 	bne.w	80093bc <USART2_IRQHandler+0x64>
 800951a:	2100      	movs	r1, #0
 800951c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009520:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009524:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009528:	4b07      	ldr	r3, [pc, #28]	; (8009548 <USART2_IRQHandler+0x1f0>)
 800952a:	685a      	ldr	r2, [r3, #4]
 800952c:	4b07      	ldr	r3, [pc, #28]	; (800954c <USART2_IRQHandler+0x1f4>)
 800952e:	601a      	str	r2, [r3, #0]
 8009530:	e744      	b.n	80093bc <USART2_IRQHandler+0x64>
 8009532:	2200      	movs	r2, #0
 8009534:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009538:	e756      	b.n	80093e8 <USART2_IRQHandler+0x90>
 800953a:	bf00      	nop
 800953c:	20000720 	andcs	r0, r0, r0, lsr #14
 8009540:	20000b3c 	andcs	r0, r0, ip, lsr fp
 8009544:	00cc0001 	sbceq	r0, ip, r1
 8009548:	e0001000 	and	r1, r0, r0
 800954c:	20000b50 	andcs	r0, r0, r0, asr fp

08009550 <TIMER1_IRQHandler>:
 8009550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009552:	f3bf 8f5f 	dmb	sy
 8009556:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800955a:	691c      	ldr	r4, [r3, #16]
 800955c:	4e1f      	ldr	r6, [pc, #124]	; (80095dc <TIMER1_IRQHandler+0x8c>)
 800955e:	07a7      	lsls	r7, r4, #30
 8009560:	8835      	ldrh	r5, [r6, #0]
 8009562:	d518      	bpl.n	8009596 <TIMER1_IRQHandler+0x46>
 8009564:	4f1e      	ldr	r7, [pc, #120]	; (80095e0 <TIMER1_IRQHandler+0x90>)
 8009566:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800956a:	2203      	movs	r2, #3
 800956c:	2110      	movs	r1, #16
 800956e:	4638      	mov	r0, r7
 8009570:	f006 fe2c 	bl	80101cc <gpio_init>
 8009574:	07ed      	lsls	r5, r5, #31
 8009576:	d506      	bpl.n	8009586 <TIMER1_IRQHandler+0x36>
 8009578:	8833      	ldrh	r3, [r6, #0]
 800957a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800957e:	8033      	strh	r3, [r6, #0]
 8009580:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009584:	617b      	str	r3, [r7, #20]
 8009586:	4621      	mov	r1, r4
 8009588:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800958c:	f007 f8f1 	bl	8010772 <timer_interrupt_flag_clear>
 8009590:	f3bf 8f5f 	dmb	sy
 8009594:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009596:	0760      	lsls	r0, r4, #29
 8009598:	d509      	bpl.n	80095ae <TIMER1_IRQHandler+0x5e>
 800959a:	05e9      	lsls	r1, r5, #23
 800959c:	d5f3      	bpl.n	8009586 <TIMER1_IRQHandler+0x36>
 800959e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80095a2:	2203      	movs	r2, #3
 80095a4:	2118      	movs	r1, #24
 80095a6:	480e      	ldr	r0, [pc, #56]	; (80095e0 <TIMER1_IRQHandler+0x90>)
 80095a8:	f006 fe10 	bl	80101cc <gpio_init>
 80095ac:	e7eb      	b.n	8009586 <TIMER1_IRQHandler+0x36>
 80095ae:	0722      	lsls	r2, r4, #28
 80095b0:	d5e9      	bpl.n	8009586 <TIMER1_IRQHandler+0x36>
 80095b2:	05eb      	lsls	r3, r5, #23
 80095b4:	d5e7      	bpl.n	8009586 <TIMER1_IRQHandler+0x36>
 80095b6:	4b0b      	ldr	r3, [pc, #44]	; (80095e4 <TIMER1_IRQHandler+0x94>)
 80095b8:	2180      	movs	r1, #128	; 0x80
 80095ba:	69da      	ldr	r2, [r3, #28]
 80095bc:	480a      	ldr	r0, [pc, #40]	; (80095e8 <TIMER1_IRQHandler+0x98>)
 80095be:	f022 0201 	bic.w	r2, r2, #1
 80095c2:	61da      	str	r2, [r3, #28]
 80095c4:	4a09      	ldr	r2, [pc, #36]	; (80095ec <TIMER1_IRQHandler+0x9c>)
 80095c6:	629a      	str	r2, [r3, #40]	; 0x28
 80095c8:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 80095cc:	621a      	str	r2, [r3, #32]
 80095ce:	69da      	ldr	r2, [r3, #28]
 80095d0:	f042 0201 	orr.w	r2, r2, #1
 80095d4:	61da      	str	r2, [r3, #28]
 80095d6:	f007 f96b 	bl	80108b0 <usart_dma_transmit_config>
 80095da:	e7d4      	b.n	8009586 <TIMER1_IRQHandler+0x36>
 80095dc:	20000b38 	andcs	r0, r0, r8, lsr fp
 80095e0:	40011000 	andmi	r1, r1, r0
 80095e4:	40020000 	andmi	r0, r2, r0
 80095e8:	40004800 	andmi	r4, r0, r0, lsl #16
 80095ec:	20000930 	andcs	r0, r0, r0, lsr r9

080095f0 <TIMER2_IRQHandler>:
 80095f0:	b508      	push	{r3, lr}
 80095f2:	f3bf 8f5f 	dmb	sy
 80095f6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80095fa:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 80095fe:	078b      	lsls	r3, r1, #30
 8009600:	d50d      	bpl.n	800961e <TIMER2_IRQHandler+0x2e>
 8009602:	4b0a      	ldr	r3, [pc, #40]	; (800962c <TIMER2_IRQHandler+0x3c>)
 8009604:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009608:	2a04      	cmp	r2, #4
 800960a:	d108      	bne.n	800961e <TIMER2_IRQHandler+0x2e>
 800960c:	2200      	movs	r2, #0
 800960e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009612:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009616:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800961a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800961e:	4804      	ldr	r0, [pc, #16]	; (8009630 <TIMER2_IRQHandler+0x40>)
 8009620:	f007 f8a7 	bl	8010772 <timer_interrupt_flag_clear>
 8009624:	f3bf 8f5f 	dmb	sy
 8009628:	bd08      	pop	{r3, pc}
 800962a:	bf00      	nop
 800962c:	20000720 	andcs	r0, r0, r0, lsr #14
 8009630:	40000400 	andmi	r0, r0, r0, lsl #8

08009634 <TIMER3_IRQHandler>:
 8009634:	b508      	push	{r3, lr}
 8009636:	f3bf 8f5f 	dmb	sy
 800963a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800963e:	4804      	ldr	r0, [pc, #16]	; (8009650 <TIMER3_IRQHandler+0x1c>)
 8009640:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8009644:	f007 f895 	bl	8010772 <timer_interrupt_flag_clear>
 8009648:	f3bf 8f5f 	dmb	sy
 800964c:	bd08      	pop	{r3, pc}
 800964e:	bf00      	nop
 8009650:	40000800 	andmi	r0, r0, r0, lsl #16

08009654 <TIMER6_IRQHandler>:
 8009654:	b508      	push	{r3, lr}
 8009656:	f3bf 8f5f 	dmb	sy
 800965a:	4b07      	ldr	r3, [pc, #28]	; (8009678 <TIMER6_IRQHandler+0x24>)
 800965c:	4807      	ldr	r0, [pc, #28]	; (800967c <TIMER6_IRQHandler+0x28>)
 800965e:	685a      	ldr	r2, [r3, #4]
 8009660:	6899      	ldr	r1, [r3, #8]
 8009662:	1a52      	subs	r2, r2, r1
 8009664:	601a      	str	r2, [r3, #0]
 8009666:	685a      	ldr	r2, [r3, #4]
 8009668:	2101      	movs	r1, #1
 800966a:	609a      	str	r2, [r3, #8]
 800966c:	f007 f881 	bl	8010772 <timer_interrupt_flag_clear>
 8009670:	f3bf 8f5f 	dmb	sy
 8009674:	bd08      	pop	{r3, pc}
 8009676:	bf00      	nop
 8009678:	20000b3c 	andcs	r0, r0, ip, lsr fp
 800967c:	40001400 	andmi	r1, r0, r0, lsl #8

08009680 <Dmx::ClearData(unsigned int)>:
 8009680:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009684:	b510      	push	{r4, lr}
 8009686:	2400      	movs	r4, #0
 8009688:	4a08      	ldr	r2, [pc, #32]	; (80096ac <Dmx::ClearData(unsigned int)+0x2c>)
 800968a:	fb03 2301 	mla	r3, r3, r1, r2
 800968e:	f203 2002 	addw	r0, r3, #514	; 0x202
 8009692:	f823 4b02 	strh.w	r4, [r3], #2
 8009696:	4283      	cmp	r3, r0
 8009698:	d1fb      	bne.n	8009692 <Dmx::ClearData(unsigned int)+0x12>
 800969a:	f44f 7301 	mov.w	r3, #516	; 0x204
 800969e:	fb03 2201 	mla	r2, r3, r1, r2
 80096a2:	f240 2301 	movw	r3, #513	; 0x201
 80096a6:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 80096aa:	bd10      	pop	{r4, pc}
 80096ac:	20000930 	andcs	r0, r0, r0, lsr r9

080096b0 <Dmx::StartData(unsigned int, unsigned int)>:
 80096b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096b2:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80096b6:	6943      	ldr	r3, [r0, #20]
 80096b8:	460c      	mov	r4, r1
 80096ba:	4615      	mov	r5, r2
 80096bc:	b085      	sub	sp, #20
 80096be:	2b00      	cmp	r3, #0
 80096c0:	d16a      	bne.n	8009798 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 80096c2:	4e48      	ldr	r6, [pc, #288]	; (80097e4 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 80096c4:	8834      	ldrh	r4, [r6, #0]
 80096c6:	2c00      	cmp	r4, #0
 80096c8:	d15b      	bne.n	8009782 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 80096ca:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 80096ce:	f006 fe0d 	bl	80102ec <rcu_periph_clock_enable>
 80096d2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096d6:	f006 ff55 	bl	8010584 <timer_deinit>
 80096da:	236b      	movs	r3, #107	; 0x6b
 80096dc:	9300      	str	r3, [sp, #0]
 80096de:	4b42      	ldr	r3, [pc, #264]	; (80097e8 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 80096e0:	4669      	mov	r1, sp
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096e8:	9302      	str	r3, [sp, #8]
 80096ea:	f8ad 4004 	strh.w	r4, [sp, #4]
 80096ee:	f8ad 400c 	strh.w	r4, [sp, #12]
 80096f2:	f88d 400e 	strb.w	r4, [sp, #14]
 80096f6:	f006 ffa7 	bl	8010648 <timer_init>
 80096fa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80096fe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009702:	f007 f839 	bl	8010778 <timer_flag_clear>
 8009706:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800970a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800970e:	f007 f830 	bl	8010772 <timer_interrupt_flag_clear>
 8009712:	2210      	movs	r2, #16
 8009714:	4621      	mov	r1, r4
 8009716:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800971a:	f006 fff2 	bl	8010702 <timer_channel_output_mode_config>
 800971e:	2210      	movs	r2, #16
 8009720:	2101      	movs	r1, #1
 8009722:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009726:	f006 ffec 	bl	8010702 <timer_channel_output_mode_config>
 800972a:	4f30      	ldr	r7, [pc, #192]	; (80097ec <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800972c:	2210      	movs	r2, #16
 800972e:	2102      	movs	r1, #2
 8009730:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009734:	f006 ffe5 	bl	8010702 <timer_channel_output_mode_config>
 8009738:	4622      	mov	r2, r4
 800973a:	4621      	mov	r1, r4
 800973c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009740:	f007 f805 	bl	801074e <timer_channel_output_pulse_value_config>
 8009744:	2101      	movs	r1, #1
 8009746:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800974a:	883a      	ldrh	r2, [r7, #0]
 800974c:	f006 ffff 	bl	801074e <timer_channel_output_pulse_value_config>
 8009750:	4b27      	ldr	r3, [pc, #156]	; (80097f0 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8009752:	683a      	ldr	r2, [r7, #0]
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	2102      	movs	r1, #2
 8009758:	441a      	add	r2, r3
 800975a:	b292      	uxth	r2, r2
 800975c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009760:	f006 fff5 	bl	801074e <timer_channel_output_pulse_value_config>
 8009764:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009768:	210e      	movs	r1, #14
 800976a:	f006 fffe 	bl	801076a <timer_interrupt_enable>
 800976e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009772:	4b20      	ldr	r3, [pc, #128]	; (80097f4 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8009774:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009778:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800977c:	601a      	str	r2, [r3, #0]
 800977e:	f006 ffbb 	bl	80106f8 <timer_enable>
 8009782:	2201      	movs	r2, #1
 8009784:	8831      	ldrh	r1, [r6, #0]
 8009786:	fa02 f305 	lsl.w	r3, r2, r5
 800978a:	430b      	orrs	r3, r1
 800978c:	8033      	strh	r3, [r6, #0]
 800978e:	4b1a      	ldr	r3, [pc, #104]	; (80097f8 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8009790:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009794:	b005      	add	sp, #20
 8009796:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009798:	f44f 7204 	mov.w	r2, #528	; 0x210
 800979c:	4b17      	ldr	r3, [pc, #92]	; (80097fc <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800979e:	fb02 3305 	mla	r3, r2, r5, r3
 80097a2:	2200      	movs	r2, #0
 80097a4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80097a8:	2107      	movs	r1, #7
 80097aa:	4620      	mov	r0, r4
 80097ac:	f007 f886 	bl	80108bc <usart_flag_get>
 80097b0:	2800      	cmp	r0, #0
 80097b2:	d0f9      	beq.n	80097a8 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 80097b4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80097b8:	4620      	mov	r0, r4
 80097ba:	f007 f8a0 	bl	80108fe <usart_interrupt_flag_clear>
 80097be:	f240 3105 	movw	r1, #773	; 0x305
 80097c2:	4620      	mov	r0, r4
 80097c4:	f007 f882 	bl	80108cc <usart_interrupt_enable>
 80097c8:	2202      	movs	r2, #2
 80097ca:	4b0b      	ldr	r3, [pc, #44]	; (80097f8 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 80097cc:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80097d0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80097d4:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80097d8:	f043 0302 	orr.w	r3, r3, #2
 80097dc:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 80097e0:	e7d8      	b.n	8009794 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 80097e2:	bf00      	nop
 80097e4:	20000b38 	andcs	r0, r0, r8, lsr fp
 80097e8:	20000008 	andcs	r0, r0, r8
 80097ec:	20000010 	andcs	r0, r0, r0, lsl r0
 80097f0:	2000000c 	andcs	r0, r0, ip
 80097f4:	e000e100 	and	lr, r0, r0, lsl #2
 80097f8:	20000b34 	andcs	r0, r0, r4, lsr fp
 80097fc:	20000720 	andcs	r0, r0, r0, lsr #14

08009800 <Dmx::StopData(unsigned int, unsigned int)>:
 8009800:	b538      	push	{r3, r4, r5, lr}
 8009802:	4d16      	ldr	r5, [pc, #88]	; (800985c <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 8009804:	4614      	mov	r4, r2
 8009806:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800980a:	4603      	mov	r3, r0
 800980c:	4608      	mov	r0, r1
 800980e:	b17a      	cbz	r2, 8009830 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 8009810:	695b      	ldr	r3, [r3, #20]
 8009812:	b973      	cbnz	r3, 8009832 <Dmx::StopData(unsigned int, unsigned int)+0x32>
 8009814:	2201      	movs	r2, #1
 8009816:	4912      	ldr	r1, [pc, #72]	; (8009860 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 8009818:	f104 0308 	add.w	r3, r4, #8
 800981c:	fa02 f303 	lsl.w	r3, r2, r3
 8009820:	40a2      	lsls	r2, r4
 8009822:	4313      	orrs	r3, r2
 8009824:	880a      	ldrh	r2, [r1, #0]
 8009826:	4013      	ands	r3, r2
 8009828:	800b      	strh	r3, [r1, #0]
 800982a:	2300      	movs	r3, #0
 800982c:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8009830:	bd38      	pop	{r3, r4, r5, pc}
 8009832:	f240 3105 	movw	r1, #773	; 0x305
 8009836:	f007 f855 	bl	80108e4 <usart_interrupt_disable>
 800983a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800983e:	4b09      	ldr	r3, [pc, #36]	; (8009864 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 8009840:	fb02 3304 	mla	r3, r2, r4, r3
 8009844:	2200      	movs	r2, #0
 8009846:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800984a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800984e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8009852:	f023 0302 	bic.w	r3, r3, #2
 8009856:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800985a:	e7e6      	b.n	800982a <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 800985c:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009860:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009864:	20000720 	andcs	r0, r0, r0, lsr #14

08009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8009868:	b570      	push	{r4, r5, r6, lr}
 800986a:	461d      	mov	r5, r3
 800986c:	6943      	ldr	r3, [r0, #20]
 800986e:	4606      	mov	r6, r0
 8009870:	4293      	cmp	r3, r2
 8009872:	4614      	mov	r4, r2
 8009874:	d014      	beq.n	80098a0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8009876:	6142      	str	r2, [r0, #20]
 8009878:	4910      	ldr	r1, [pc, #64]	; (80098bc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800987a:	2200      	movs	r2, #0
 800987c:	f7ff ffc0 	bl	8009800 <Dmx::StopData(unsigned int, unsigned int)>
 8009880:	b934      	cbnz	r4, 8009890 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8009882:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009886:	4b0e      	ldr	r3, [pc, #56]	; (80098c0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8009888:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800988c:	b94d      	cbnz	r5, 80098a2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800988e:	bd70      	pop	{r4, r5, r6, pc}
 8009890:	2c01      	cmp	r4, #1
 8009892:	d1fb      	bne.n	800988c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8009894:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009898:	4b09      	ldr	r3, [pc, #36]	; (80098c0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800989a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800989e:	e7f5      	b.n	800988c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 80098a0:	b135      	cbz	r5, 80098b0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 80098a2:	4630      	mov	r0, r6
 80098a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80098a8:	2200      	movs	r2, #0
 80098aa:	4904      	ldr	r1, [pc, #16]	; (80098bc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 80098ac:	f7ff bf00 	b.w	80096b0 <Dmx::StartData(unsigned int, unsigned int)>
 80098b0:	462a      	mov	r2, r5
 80098b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80098b6:	4901      	ldr	r1, [pc, #4]	; (80098bc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 80098b8:	f7ff bfa2 	b.w	8009800 <Dmx::StopData(unsigned int, unsigned int)>
 80098bc:	40004800 	andmi	r4, r0, r0, lsl #16
 80098c0:	40010000 	andmi	r0, r1, r0

080098c4 <Dmx::Dmx()>:
 80098c4:	225c      	movs	r2, #92	; 0x5c
 80098c6:	230c      	movs	r3, #12
 80098c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098cc:	e9c0 2300 	strd	r2, r3, [r0]
 80098d0:	f246 13a8 	movw	r3, #25000	; 0x61a8
 80098d4:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80098d8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80098dc:	2400      	movs	r4, #0
 80098de:	4605      	mov	r5, r0
 80098e0:	8203      	strh	r3, [r0, #16]
 80098e2:	4b5f      	ldr	r3, [pc, #380]	; (8009a60 <Dmx::Dmx()+0x19c>)
 80098e4:	b08b      	sub	sp, #44	; 0x2c
 80098e6:	6018      	str	r0, [r3, #0]
 80098e8:	4b5e      	ldr	r3, [pc, #376]	; (8009a64 <Dmx::Dmx()+0x1a0>)
 80098ea:	2203      	movs	r2, #3
 80098ec:	801c      	strh	r4, [r3, #0]
 80098ee:	2110      	movs	r1, #16
 80098f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80098f4:	485c      	ldr	r0, [pc, #368]	; (8009a68 <Dmx::Dmx()+0x1a4>)
 80098f6:	f006 fc69 	bl	80101cc <gpio_init>
 80098fa:	4621      	mov	r1, r4
 80098fc:	4628      	mov	r0, r5
 80098fe:	f7ff febf 	bl	8009680 <Dmx::ClearData(unsigned int)>
 8009902:	4b5a      	ldr	r3, [pc, #360]	; (8009a6c <Dmx::Dmx()+0x1a8>)
 8009904:	2201      	movs	r2, #1
 8009906:	4628      	mov	r0, r5
 8009908:	601c      	str	r4, [r3, #0]
 800990a:	4623      	mov	r3, r4
 800990c:	f7ff ffac 	bl	8009868 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8009910:	4b57      	ldr	r3, [pc, #348]	; (8009a70 <Dmx::Dmx()+0x1ac>)
 8009912:	4e58      	ldr	r6, [pc, #352]	; (8009a74 <Dmx::Dmx()+0x1b0>)
 8009914:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8009918:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800991c:	f006 fce6 	bl	80102ec <rcu_periph_clock_enable>
 8009920:	f240 5001 	movw	r0, #1281	; 0x501
 8009924:	f006 fce2 	bl	80102ec <rcu_periph_clock_enable>
 8009928:	4630      	mov	r0, r6
 800992a:	2101      	movs	r1, #1
 800992c:	f006 fb4a 	bl	800ffc4 <dma_deinit>
 8009930:	4b51      	ldr	r3, [pc, #324]	; (8009a78 <Dmx::Dmx()+0x1b4>)
 8009932:	2701      	movs	r7, #1
 8009934:	e9cd 3405 	strd	r3, r4, [sp, #20]
 8009938:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800993c:	aa03      	add	r2, sp, #12
 800993e:	9307      	str	r3, [sp, #28]
 8009940:	4b4e      	ldr	r3, [pc, #312]	; (8009a7c <Dmx::Dmx()+0x1b8>)
 8009942:	4639      	mov	r1, r7
 8009944:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8009948:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800994c:	9308      	str	r3, [sp, #32]
 800994e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009952:	4630      	mov	r0, r6
 8009954:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009958:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800995c:	f006 fb4e 	bl	800fffc <dma_init>
 8009960:	4639      	mov	r1, r7
 8009962:	4630      	mov	r0, r6
 8009964:	f006 fb84 	bl	8010070 <dma_circulation_disable>
 8009968:	4639      	mov	r1, r7
 800996a:	4630      	mov	r0, r6
 800996c:	f006 fb90 	bl	8010090 <dma_memory_to_memory_disable>
 8009970:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 8009974:	f240 7001 	movw	r0, #1793	; 0x701
 8009978:	f006 fcb8 	bl	80102ec <rcu_periph_clock_enable>
 800997c:	4630      	mov	r0, r6
 800997e:	f006 fe01 	bl	8010584 <timer_deinit>
 8009982:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8009986:	236b      	movs	r3, #107	; 0x6b
 8009988:	4630      	mov	r0, r6
 800998a:	a903      	add	r1, sp, #12
 800998c:	9303      	str	r3, [sp, #12]
 800998e:	f8ad 4010 	strh.w	r4, [sp, #16]
 8009992:	f8cd 9014 	str.w	r9, [sp, #20]
 8009996:	f8ad 4018 	strh.w	r4, [sp, #24]
 800999a:	f88d 401a 	strb.w	r4, [sp, #26]
 800999e:	f006 fe53 	bl	8010648 <timer_init>
 80099a2:	4649      	mov	r1, r9
 80099a4:	4630      	mov	r0, r6
 80099a6:	f006 fee7 	bl	8010778 <timer_flag_clear>
 80099aa:	4649      	mov	r1, r9
 80099ac:	4630      	mov	r0, r6
 80099ae:	f006 fee0 	bl	8010772 <timer_interrupt_flag_clear>
 80099b2:	4621      	mov	r1, r4
 80099b4:	4630      	mov	r0, r6
 80099b6:	2210      	movs	r2, #16
 80099b8:	f006 fea3 	bl	8010702 <timer_channel_output_mode_config>
 80099bc:	4639      	mov	r1, r7
 80099be:	4630      	mov	r0, r6
 80099c0:	2210      	movs	r2, #16
 80099c2:	f006 fe9e 	bl	8010702 <timer_channel_output_mode_config>
 80099c6:	4630      	mov	r0, r6
 80099c8:	2210      	movs	r2, #16
 80099ca:	2102      	movs	r1, #2
 80099cc:	f006 fe99 	bl	8010702 <timer_channel_output_mode_config>
 80099d0:	2210      	movs	r2, #16
 80099d2:	2103      	movs	r1, #3
 80099d4:	4630      	mov	r0, r6
 80099d6:	f006 fe94 	bl	8010702 <timer_channel_output_mode_config>
 80099da:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80099de:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009a80 <Dmx::Dmx()+0x1bc>
 80099e2:	4630      	mov	r0, r6
 80099e4:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 80099e8:	f8c8 3000 	str.w	r3, [r8]
 80099ec:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 80099f0:	f006 fe82 	bl	80106f8 <timer_enable>
 80099f4:	f240 7005 	movw	r0, #1797	; 0x705
 80099f8:	f006 fc78 	bl	80102ec <rcu_periph_clock_enable>
 80099fc:	4630      	mov	r0, r6
 80099fe:	f006 fdc1 	bl	8010584 <timer_deinit>
 8009a02:	f642 232f 	movw	r3, #10799	; 0x2a2f
 8009a06:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009a0a:	f242 7310 	movw	r3, #10000	; 0x2710
 8009a0e:	4630      	mov	r0, r6
 8009a10:	a903      	add	r1, sp, #12
 8009a12:	9305      	str	r3, [sp, #20]
 8009a14:	f006 fe18 	bl	8010648 <timer_init>
 8009a18:	4649      	mov	r1, r9
 8009a1a:	4630      	mov	r0, r6
 8009a1c:	f006 feac 	bl	8010778 <timer_flag_clear>
 8009a20:	4649      	mov	r1, r9
 8009a22:	4630      	mov	r0, r6
 8009a24:	f006 fea5 	bl	8010772 <timer_interrupt_flag_clear>
 8009a28:	4639      	mov	r1, r7
 8009a2a:	4630      	mov	r0, r6
 8009a2c:	f006 fe9d 	bl	801076a <timer_interrupt_enable>
 8009a30:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8009a34:	4630      	mov	r0, r6
 8009a36:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8009a3a:	f8c8 3004 	str.w	r3, [r8, #4]
 8009a3e:	f006 fe5b 	bl	80106f8 <timer_enable>
 8009a42:	2302      	movs	r3, #2
 8009a44:	2208      	movs	r2, #8
 8009a46:	9300      	str	r3, [sp, #0]
 8009a48:	490e      	ldr	r1, [pc, #56]	; (8009a84 <Dmx::Dmx()+0x1c0>)
 8009a4a:	4623      	mov	r3, r4
 8009a4c:	480e      	ldr	r0, [pc, #56]	; (8009a88 <Dmx::Dmx()+0x1c4>)
 8009a4e:	f007 f9cb 	bl	8010de8 <gd32_uart_begin>
 8009a52:	2380      	movs	r3, #128	; 0x80
 8009a54:	4628      	mov	r0, r5
 8009a56:	f8c8 3004 	str.w	r3, [r8, #4]
 8009a5a:	b00b      	add	sp, #44	; 0x2c
 8009a5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009a60:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009a64:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009a68:	40010c00 	andmi	r0, r1, r0, lsl #24
 8009a6c:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009a70:	20000720 	andcs	r0, r0, r0, lsr #14
 8009a74:	40020000 	andmi	r0, r2, r0
 8009a78:	20000930 	andcs	r0, r0, r0, lsr r9
 8009a7c:	40004804 	andmi	r4, r0, r4, lsl #16
 8009a80:	e000e100 	and	lr, r0, r0, lsl #2
 8009a84:	0003d090 	muleq	r3, r0, r0
 8009a88:	40004800 	andmi	r4, r0, r0, lsl #16

08009a8c <Dmx::SetDmxPeriodTime(unsigned int)>:
 8009a8c:	4b13      	ldr	r3, [pc, #76]	; (8009adc <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8009a8e:	b570      	push	{r4, r5, r6, lr}
 8009a90:	60c1      	str	r1, [r0, #12]
 8009a92:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8009a96:	232c      	movs	r3, #44	; 0x2c
 8009a98:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8009a9c:	4d10      	ldr	r5, [pc, #64]	; (8009ae0 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8009a9e:	4c11      	ldr	r4, [pc, #68]	; (8009ae4 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8009aa0:	4358      	muls	r0, r3
 8009aa2:	682a      	ldr	r2, [r5, #0]
 8009aa4:	6823      	ldr	r3, [r4, #0]
 8009aa6:	4413      	add	r3, r2
 8009aa8:	4403      	add	r3, r0
 8009aaa:	42b3      	cmp	r3, r6
 8009aac:	d908      	bls.n	8009ac0 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8009aae:	2ab0      	cmp	r2, #176	; 0xb0
 8009ab0:	4613      	mov	r3, r2
 8009ab2:	bf28      	it	cs
 8009ab4:	23b0      	movcs	r3, #176	; 0xb0
 8009ab6:	220c      	movs	r2, #12
 8009ab8:	602b      	str	r3, [r5, #0]
 8009aba:	4413      	add	r3, r2
 8009abc:	6022      	str	r2, [r4, #0]
 8009abe:	4403      	add	r3, r0
 8009ac0:	4a09      	ldr	r2, [pc, #36]	; (8009ae8 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8009ac2:	b109      	cbz	r1, 8009ac8 <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>
 8009ac4:	428b      	cmp	r3, r1
 8009ac6:	d907      	bls.n	8009ad8 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>
 8009ac8:	f240 41b4 	movw	r1, #1204	; 0x4b4
 8009acc:	332c      	adds	r3, #44	; 0x2c
 8009ace:	428b      	cmp	r3, r1
 8009ad0:	bf2c      	ite	cs
 8009ad2:	6013      	strcs	r3, [r2, #0]
 8009ad4:	6011      	strcc	r1, [r2, #0]
 8009ad6:	e000      	b.n	8009ada <Dmx::SetDmxPeriodTime(unsigned int)+0x4e>
 8009ad8:	6011      	str	r1, [r2, #0]
 8009ada:	bd70      	pop	{r4, r5, r6, pc}
 8009adc:	20000930 	andcs	r0, r0, r0, lsr r9
 8009ae0:	20000010 	andcs	r0, r0, r0, lsl r0
 8009ae4:	2000000c 	andcs	r0, r0, ip
 8009ae8:	20000008 	andcs	r0, r0, r8

08009aec <Dmx::SetDmxBreakTime(unsigned int)>:
 8009aec:	295c      	cmp	r1, #92	; 0x5c
 8009aee:	bf38      	it	cc
 8009af0:	215c      	movcc	r1, #92	; 0x5c
 8009af2:	4b02      	ldr	r3, [pc, #8]	; (8009afc <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8009af4:	6019      	str	r1, [r3, #0]
 8009af6:	68c1      	ldr	r1, [r0, #12]
 8009af8:	f7ff bfc8 	b.w	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009afc:	20000010 	andcs	r0, r0, r0, lsl r0

08009b00 <Dmx::SetDmxMabTime(unsigned int)>:
 8009b00:	290c      	cmp	r1, #12
 8009b02:	bf38      	it	cc
 8009b04:	210c      	movcc	r1, #12
 8009b06:	4b02      	ldr	r3, [pc, #8]	; (8009b10 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8009b08:	6019      	str	r1, [r3, #0]
 8009b0a:	68c1      	ldr	r1, [r0, #12]
 8009b0c:	f7ff bfbe 	b.w	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009b10:	2000000c 	andcs	r0, r0, ip

08009b14 <Dmx::SetDmxSlots(unsigned short)>:
 8009b14:	1e8b      	subs	r3, r1, #2
 8009b16:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009b1a:	d809      	bhi.n	8009b30 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 8009b1c:	6983      	ldr	r3, [r0, #24]
 8009b1e:	8201      	strh	r1, [r0, #16]
 8009b20:	b11b      	cbz	r3, 8009b2a <Dmx::SetDmxSlots(unsigned short)+0x16>
 8009b22:	4299      	cmp	r1, r3
 8009b24:	bf94      	ite	ls
 8009b26:	6181      	strls	r1, [r0, #24]
 8009b28:	6183      	strhi	r3, [r0, #24]
 8009b2a:	68c1      	ldr	r1, [r0, #12]
 8009b2c:	f7ff bfae 	b.w	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009b30:	4770      	bx	lr
	...

08009b34 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 8009b34:	b4f0      	push	{r4, r5, r6, r7}
 8009b36:	8a04      	ldrh	r4, [r0, #16]
 8009b38:	4d11      	ldr	r5, [pc, #68]	; (8009b80 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8009b3a:	42a3      	cmp	r3, r4
 8009b3c:	bf28      	it	cs
 8009b3e:	4623      	movcs	r3, r4
 8009b40:	f44f 7401 	mov.w	r4, #516	; 0x204
 8009b44:	434c      	muls	r4, r1
 8009b46:	1c5f      	adds	r7, r3, #1
 8009b48:	192e      	adds	r6, r5, r4
 8009b4a:	f892 f000 	pld	[r2]
 8009b4e:	3401      	adds	r4, #1
 8009b50:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8009b54:	442c      	add	r4, r5
 8009b56:	18d6      	adds	r6, r2, r3
 8009b58:	4296      	cmp	r6, r2
 8009b5a:	d004      	beq.n	8009b66 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 8009b5c:	f812 5b01 	ldrb.w	r5, [r2], #1
 8009b60:	f804 5b01 	strb.w	r5, [r4], #1
 8009b64:	e7f8      	b.n	8009b58 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 8009b66:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8009b6a:	698a      	ldr	r2, [r1, #24]
 8009b6c:	429a      	cmp	r2, r3
 8009b6e:	d004      	beq.n	8009b7a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 8009b70:	bcf0      	pop	{r4, r5, r6, r7}
 8009b72:	618b      	str	r3, [r1, #24]
 8009b74:	68c1      	ldr	r1, [r0, #12]
 8009b76:	f7ff bf89 	b.w	8009a8c <Dmx::SetDmxPeriodTime(unsigned int)>
 8009b7a:	bcf0      	pop	{r4, r5, r6, r7}
 8009b7c:	4770      	bx	lr
 8009b7e:	bf00      	nop
 8009b80:	20000930 	andcs	r0, r0, r0, lsr r9

08009b84 <Dmx::GetDmxAvailable(unsigned int)>:
 8009b84:	f44f 7304 	mov.w	r3, #528	; 0x210
 8009b88:	4807      	ldr	r0, [pc, #28]	; (8009ba8 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 8009b8a:	fb03 0001 	mla	r0, r3, r1, r0
 8009b8e:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 8009b92:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 8009b96:	bf1b      	ittet	ne
 8009b98:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8009b9c:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8009ba0:	4608      	moveq	r0, r1
 8009ba2:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 8009ba6:	4770      	bx	lr
 8009ba8:	20000720 	andcs	r0, r0, r0, lsr #14

08009bac <Dmx::GetUpdatesPerSecond(unsigned int)>:
 8009bac:	f3bf 8f5f 	dmb	sy
 8009bb0:	4b01      	ldr	r3, [pc, #4]	; (8009bb8 <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 8009bb2:	0109      	lsls	r1, r1, #4
 8009bb4:	5858      	ldr	r0, [r3, r1]
 8009bb6:	4770      	bx	lr
 8009bb8:	20000b3c 	andcs	r0, r0, ip, lsr fp

08009bbc <RemoteConfig::HandleList()>:
 8009bbc:	2212      	movs	r2, #18
 8009bbe:	6803      	ldr	r3, [r0, #0]
 8009bc0:	492f      	ldr	r1, [pc, #188]	; (8009c80 <RemoteConfig::HandleList()+0xc4>)
 8009bc2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bc6:	fb02 1103 	mla	r1, r2, r3, r1
 8009bca:	220c      	movs	r2, #12
 8009bcc:	4604      	mov	r4, r0
 8009bce:	6843      	ldr	r3, [r0, #4]
 8009bd0:	482c      	ldr	r0, [pc, #176]	; (8009c84 <RemoteConfig::HandleList()+0xc8>)
 8009bd2:	4e2d      	ldr	r6, [pc, #180]	; (8009c88 <RemoteConfig::HandleList()+0xcc>)
 8009bd4:	fb02 0003 	mla	r0, r2, r3, r0
 8009bd8:	4b2c      	ldr	r3, [pc, #176]	; (8009c8c <RemoteConfig::HandleList()+0xd0>)
 8009bda:	4f2d      	ldr	r7, [pc, #180]	; (8009c90 <RemoteConfig::HandleList()+0xd4>)
 8009bdc:	681b      	ldr	r3, [r3, #0]
 8009bde:	6835      	ldr	r5, [r6, #0]
 8009be0:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8009be4:	f897 9009 	ldrb.w	r9, [r7, #9]
 8009be8:	fa5f f38c 	uxtb.w	r3, ip
 8009bec:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8009bf0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8009bf4:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009bf8:	b089      	sub	sp, #36	; 0x24
 8009bfa:	3507      	adds	r5, #7
 8009bfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8009c00:	f1b9 0f00 	cmp.w	r9, #0
 8009c04:	d020      	beq.n	8009c48 <RemoteConfig::HandleList()+0x8c>
 8009c06:	b2d2      	uxtb	r2, r2
 8009c08:	3709      	adds	r7, #9
 8009c0a:	9201      	str	r2, [sp, #4]
 8009c0c:	fa5f f28c 	uxtb.w	r2, ip
 8009c10:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8009c14:	9200      	str	r2, [sp, #0]
 8009c16:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009c1a:	4628      	mov	r0, r5
 8009c1c:	e9cd 8705 	strd	r8, r7, [sp, #20]
 8009c20:	4a1c      	ldr	r2, [pc, #112]	; (8009c94 <RemoteConfig::HandleList()+0xd8>)
 8009c22:	f8cd e008 	str.w	lr, [sp, #8]
 8009c26:	f005 ffd5 	bl	800fbd4 <snprintf>
 8009c2a:	8ba3      	ldrh	r3, [r4, #28]
 8009c2c:	2b05      	cmp	r3, #5
 8009c2e:	d11b      	bne.n	8009c68 <RemoteConfig::HandleList()+0xac>
 8009c30:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c34:	9300      	str	r3, [sp, #0]
 8009c36:	69a3      	ldr	r3, [r4, #24]
 8009c38:	b282      	uxth	r2, r0
 8009c3a:	4629      	mov	r1, r5
 8009c3c:	7d20      	ldrb	r0, [r4, #20]
 8009c3e:	f002 fbd3 	bl	800c3e8 <udp_send>
 8009c42:	b009      	add	sp, #36	; 0x24
 8009c44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c48:	b2d2      	uxtb	r2, r2
 8009c4a:	9201      	str	r2, [sp, #4]
 8009c4c:	fa5f f28c 	uxtb.w	r2, ip
 8009c50:	e9cd 0804 	strd	r0, r8, [sp, #16]
 8009c54:	e9cd e102 	strd	lr, r1, [sp, #8]
 8009c58:	9200      	str	r2, [sp, #0]
 8009c5a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009c5e:	4628      	mov	r0, r5
 8009c60:	4a0d      	ldr	r2, [pc, #52]	; (8009c98 <RemoteConfig::HandleList()+0xdc>)
 8009c62:	f005 ffb7 	bl	800fbd4 <snprintf>
 8009c66:	e7e0      	b.n	8009c2a <RemoteConfig::HandleList()+0x6e>
 8009c68:	2b06      	cmp	r3, #6
 8009c6a:	d1ea      	bne.n	8009c42 <RemoteConfig::HandleList()+0x86>
 8009c6c:	6833      	ldr	r3, [r6, #0]
 8009c6e:	799b      	ldrb	r3, [r3, #6]
 8009c70:	2b2a      	cmp	r3, #42	; 0x2a
 8009c72:	d1e6      	bne.n	8009c42 <RemoteConfig::HandleList()+0x86>
 8009c74:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c78:	9300      	str	r3, [sp, #0]
 8009c7a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009c7e:	e7db      	b.n	8009c38 <RemoteConfig::HandleList()+0x7c>
 8009c80:	08011f6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip}
 8009c84:	08012011 	stmdaeq	r1, {r0, r4, sp}
 8009c88:	20000b54 	andcs	r0, r0, r4, asr fp
 8009c8c:	20009494 	mulcs	r0, r4, r4
 8009c90:	20000b58 	andcs	r0, r0, r8, asr fp
 8009c94:	08011eb8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, fp, ip}
 8009c98:	08011ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip}

08009c9c <RemoteConfig::HandleDisplayGet()>:
 8009c9c:	8b83      	ldrh	r3, [r0, #28]
 8009c9e:	2b08      	cmp	r3, #8
 8009ca0:	d11b      	bne.n	8009cda <RemoteConfig::HandleDisplayGet()+0x3e>
 8009ca2:	4b0e      	ldr	r3, [pc, #56]	; (8009cdc <RemoteConfig::HandleDisplayGet()+0x40>)
 8009ca4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ca6:	681b      	ldr	r3, [r3, #0]
 8009ca8:	4d0d      	ldr	r5, [pc, #52]	; (8009ce0 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009caa:	7c19      	ldrb	r1, [r3, #16]
 8009cac:	4a0d      	ldr	r2, [pc, #52]	; (8009ce4 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009cae:	4b0e      	ldr	r3, [pc, #56]	; (8009ce8 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009cb0:	4604      	mov	r4, r0
 8009cb2:	2900      	cmp	r1, #0
 8009cb4:	bf18      	it	ne
 8009cb6:	4613      	movne	r3, r2
 8009cb8:	6828      	ldr	r0, [r5, #0]
 8009cba:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009cbe:	4a0b      	ldr	r2, [pc, #44]	; (8009cec <RemoteConfig::HandleDisplayGet()+0x50>)
 8009cc0:	f005 ff88 	bl	800fbd4 <snprintf>
 8009cc4:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cc8:	9300      	str	r3, [sp, #0]
 8009cca:	b282      	uxth	r2, r0
 8009ccc:	69a3      	ldr	r3, [r4, #24]
 8009cce:	6829      	ldr	r1, [r5, #0]
 8009cd0:	7d20      	ldrb	r0, [r4, #20]
 8009cd2:	f002 fb89 	bl	800c3e8 <udp_send>
 8009cd6:	b003      	add	sp, #12
 8009cd8:	bd30      	pop	{r4, r5, pc}
 8009cda:	4770      	bx	lr
 8009cdc:	20009acc 	andcs	r9, r0, ip, asr #21
 8009ce0:	20000b54 	andcs	r0, r0, r4, asr fp
 8009ce4:	08011eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, ip}
 8009ce8:	08011ee7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, fp, ip}
 8009cec:	08011eee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, fp, ip}

08009cf0 <RemoteConfig::HandleVersion()>:
 8009cf0:	8b83      	ldrh	r3, [r0, #28]
 8009cf2:	2b08      	cmp	r3, #8
 8009cf4:	d114      	bne.n	8009d20 <RemoteConfig::HandleVersion()+0x30>
 8009cf6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cf8:	4d0a      	ldr	r5, [pc, #40]	; (8009d24 <RemoteConfig::HandleVersion()+0x34>)
 8009cfa:	4604      	mov	r4, r0
 8009cfc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009d00:	4b09      	ldr	r3, [pc, #36]	; (8009d28 <RemoteConfig::HandleVersion()+0x38>)
 8009d02:	4a0a      	ldr	r2, [pc, #40]	; (8009d2c <RemoteConfig::HandleVersion()+0x3c>)
 8009d04:	6828      	ldr	r0, [r5, #0]
 8009d06:	f005 ff65 	bl	800fbd4 <snprintf>
 8009d0a:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d0e:	9300      	str	r3, [sp, #0]
 8009d10:	b282      	uxth	r2, r0
 8009d12:	69a3      	ldr	r3, [r4, #24]
 8009d14:	6829      	ldr	r1, [r5, #0]
 8009d16:	7d20      	ldrb	r0, [r4, #20]
 8009d18:	f002 fb66 	bl	800c3e8 <udp_send>
 8009d1c:	b003      	add	sp, #12
 8009d1e:	bd30      	pop	{r4, r5, pc}
 8009d20:	4770      	bx	lr
 8009d22:	bf00      	nop
 8009d24:	20000b54 	andcs	r0, r0, r4, asr fp
 8009d28:	20009b72 	andcs	r9, r0, r2, ror fp
 8009d2c:	08011efa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, fp, ip}

08009d30 <RemoteConfig::HandleUptime()>:
 8009d30:	7bc3      	ldrb	r3, [r0, #15]
 8009d32:	b1e3      	cbz	r3, 8009d6e <RemoteConfig::HandleUptime()+0x3e>
 8009d34:	4b0e      	ldr	r3, [pc, #56]	; (8009d70 <RemoteConfig::HandleUptime()+0x40>)
 8009d36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	8b83      	ldrh	r3, [r0, #28]
 8009d3c:	4604      	mov	r4, r0
 8009d3e:	2b07      	cmp	r3, #7
 8009d40:	d113      	bne.n	8009d6a <RemoteConfig::HandleUptime()+0x3a>
 8009d42:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009d46:	4d0b      	ldr	r5, [pc, #44]	; (8009d74 <RemoteConfig::HandleUptime()+0x44>)
 8009d48:	fbb2 f3f3 	udiv	r3, r2, r3
 8009d4c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009d50:	4a09      	ldr	r2, [pc, #36]	; (8009d78 <RemoteConfig::HandleUptime()+0x48>)
 8009d52:	6828      	ldr	r0, [r5, #0]
 8009d54:	f005 ff3e 	bl	800fbd4 <snprintf>
 8009d58:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d5c:	9300      	str	r3, [sp, #0]
 8009d5e:	b282      	uxth	r2, r0
 8009d60:	69a3      	ldr	r3, [r4, #24]
 8009d62:	6829      	ldr	r1, [r5, #0]
 8009d64:	7d20      	ldrb	r0, [r4, #20]
 8009d66:	f002 fb3f 	bl	800c3e8 <udp_send>
 8009d6a:	b003      	add	sp, #12
 8009d6c:	bd30      	pop	{r4, r5, pc}
 8009d6e:	4770      	bx	lr
 8009d70:	20009bd4 	ldrdcs	r9, [r0], -r4
 8009d74:	20000b54 	andcs	r0, r0, r4, asr fp
 8009d78:	08011f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip}

08009d7c <RemoteConfig::HandleDisplaySet()>:
 8009d7c:	b538      	push	{r3, r4, r5, lr}
 8009d7e:	8b83      	ldrh	r3, [r0, #28]
 8009d80:	2b09      	cmp	r3, #9
 8009d82:	d113      	bne.n	8009dac <RemoteConfig::HandleDisplaySet()+0x30>
 8009d84:	4b0a      	ldr	r3, [pc, #40]	; (8009db0 <RemoteConfig::HandleDisplaySet()+0x34>)
 8009d86:	681c      	ldr	r4, [r3, #0]
 8009d88:	4b0a      	ldr	r3, [pc, #40]	; (8009db4 <RemoteConfig::HandleDisplaySet()+0x38>)
 8009d8a:	69a0      	ldr	r0, [r4, #24]
 8009d8c:	681b      	ldr	r3, [r3, #0]
 8009d8e:	7a5d      	ldrb	r5, [r3, #9]
 8009d90:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8009d94:	4259      	negs	r1, r3
 8009d96:	4159      	adcs	r1, r3
 8009d98:	b140      	cbz	r0, 8009dac <RemoteConfig::HandleDisplaySet()+0x30>
 8009d9a:	6803      	ldr	r3, [r0, #0]
 8009d9c:	7421      	strb	r1, [r4, #16]
 8009d9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009da0:	4798      	blx	r3
 8009da2:	2d30      	cmp	r5, #48	; 0x30
 8009da4:	bf1e      	ittt	ne
 8009da6:	4b04      	ldrne	r3, [pc, #16]	; (8009db8 <RemoteConfig::HandleDisplaySet()+0x3c>)
 8009da8:	681b      	ldrne	r3, [r3, #0]
 8009daa:	6063      	strne	r3, [r4, #4]
 8009dac:	bd38      	pop	{r3, r4, r5, pc}
 8009dae:	bf00      	nop
 8009db0:	20009acc 	andcs	r9, r0, ip, asr #21
 8009db4:	20000b54 	andcs	r0, r0, r4, asr fp
 8009db8:	20009bd4 	ldrdcs	r9, [r0], -r4

08009dbc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009dbc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dc0:	2500      	movs	r5, #0
 8009dc2:	461f      	mov	r7, r3
 8009dc4:	6083      	str	r3, [r0, #8]
 8009dc6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009dca:	4604      	mov	r4, r0
 8009dcc:	4690      	mov	r8, r2
 8009dce:	4689      	mov	r9, r1
 8009dd0:	f100 0a24 	add.w	sl, r0, #36	; 0x24
 8009dd4:	e9c0 1200 	strd	r1, r2, [r0]
 8009dd8:	4e12      	ldr	r6, [pc, #72]	; (8009e24 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>)
 8009dda:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009dde:	f8df b048 	ldr.w	fp, [pc, #72]	; 8009e28 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>
 8009de2:	60c5      	str	r5, [r0, #12]
 8009de4:	8205      	strh	r5, [r0, #16]
 8009de6:	8385      	strh	r5, [r0, #28]
 8009de8:	6205      	str	r5, [r0, #32]
 8009dea:	4650      	mov	r0, sl
 8009dec:	f000 fcb0 	bl	800a750 <HttpDaemon::HttpDaemon()>
 8009df0:	4b0e      	ldr	r3, [pc, #56]	; (8009e2c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>)
 8009df2:	4631      	mov	r1, r6
 8009df4:	f8db 0000 	ldr.w	r0, [fp]
 8009df8:	601c      	str	r4, [r3, #0]
 8009dfa:	f002 ffcb 	bl	800cd94 <Network::MacAddressCopyTo(unsigned char*)>
 8009dfe:	f642 1105 	movw	r1, #10501	; 0x2905
 8009e02:	f8db 0000 	ldr.w	r0, [fp]
 8009e06:	f886 9006 	strb.w	r9, [r6, #6]
 8009e0a:	f886 8007 	strb.w	r8, [r6, #7]
 8009e0e:	7237      	strb	r7, [r6, #8]
 8009e10:	7275      	strb	r5, [r6, #9]
 8009e12:	f002 ffb9 	bl	800cd88 <Network::Begin(unsigned short)>
 8009e16:	6160      	str	r0, [r4, #20]
 8009e18:	4650      	mov	r0, sl
 8009e1a:	f000 fcb1 	bl	800a780 <HttpDaemon::Start()>
 8009e1e:	4620      	mov	r0, r4
 8009e20:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e24:	20000b58 	andcs	r0, r0, r8, asr fp
 8009e28:	20009494 	mulcs	r0, r4, r4
 8009e2c:	20000b7c 	andcs	r0, r0, ip, ror fp

08009e30 <RemoteConfig::GetStringNode() const>:
 8009e30:	2012      	movs	r0, #18
 8009e32:	4b03      	ldr	r3, [pc, #12]	; (8009e40 <RemoteConfig::GetStringNode() const+0x10>)
 8009e34:	799a      	ldrb	r2, [r3, #6]
 8009e36:	4b03      	ldr	r3, [pc, #12]	; (8009e44 <RemoteConfig::GetStringNode() const+0x14>)
 8009e38:	fb00 3002 	mla	r0, r0, r2, r3
 8009e3c:	4770      	bx	lr
 8009e3e:	bf00      	nop
 8009e40:	20000b58 	andcs	r0, r0, r8, asr fp
 8009e44:	08011f6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip}

08009e48 <RemoteConfig::GetStringOutput() const>:
 8009e48:	200c      	movs	r0, #12
 8009e4a:	4b03      	ldr	r3, [pc, #12]	; (8009e58 <RemoteConfig::GetStringOutput() const+0x10>)
 8009e4c:	79da      	ldrb	r2, [r3, #7]
 8009e4e:	4b03      	ldr	r3, [pc, #12]	; (8009e5c <RemoteConfig::GetStringOutput() const+0x14>)
 8009e50:	fb00 3002 	mla	r0, r0, r2, r3
 8009e54:	4770      	bx	lr
 8009e56:	bf00      	nop
 8009e58:	20000b58 	andcs	r0, r0, r8, asr fp
 8009e5c:	08012011 	stmdaeq	r1, {r0, r4, sp}

08009e60 <RemoteConfig::SetDisable(bool)>:
 8009e60:	b538      	push	{r3, r4, r5, lr}
 8009e62:	4604      	mov	r4, r0
 8009e64:	7b03      	ldrb	r3, [r0, #12]
 8009e66:	b161      	cbz	r1, 8009e82 <RemoteConfig::SetDisable(bool)+0x22>
 8009e68:	b953      	cbnz	r3, 8009e80 <RemoteConfig::SetDisable(bool)+0x20>
 8009e6a:	4b0c      	ldr	r3, [pc, #48]	; (8009e9c <RemoteConfig::SetDisable(bool)+0x3c>)
 8009e6c:	f642 1105 	movw	r1, #10501	; 0x2905
 8009e70:	6818      	ldr	r0, [r3, #0]
 8009e72:	f002 ff8c 	bl	800cd8e <Network::End(unsigned short)>
 8009e76:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009e7a:	6163      	str	r3, [r4, #20]
 8009e7c:	2301      	movs	r3, #1
 8009e7e:	7323      	strb	r3, [r4, #12]
 8009e80:	bd38      	pop	{r3, r4, r5, pc}
 8009e82:	2b00      	cmp	r3, #0
 8009e84:	d0fc      	beq.n	8009e80 <RemoteConfig::SetDisable(bool)+0x20>
 8009e86:	4b05      	ldr	r3, [pc, #20]	; (8009e9c <RemoteConfig::SetDisable(bool)+0x3c>)
 8009e88:	460d      	mov	r5, r1
 8009e8a:	6818      	ldr	r0, [r3, #0]
 8009e8c:	f642 1105 	movw	r1, #10501	; 0x2905
 8009e90:	f002 ff7a 	bl	800cd88 <Network::Begin(unsigned short)>
 8009e94:	7325      	strb	r5, [r4, #12]
 8009e96:	6160      	str	r0, [r4, #20]
 8009e98:	e7f2      	b.n	8009e80 <RemoteConfig::SetDisable(bool)+0x20>
 8009e9a:	bf00      	nop
 8009e9c:	20009494 	mulcs	r0, r4, r4

08009ea0 <RemoteConfig::SetDisplayName(char const*)>:
 8009ea0:	2217      	movs	r2, #23
 8009ea2:	4809      	ldr	r0, [pc, #36]	; (8009ec8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009ea4:	b508      	push	{r3, lr}
 8009ea6:	1e4b      	subs	r3, r1, #1
 8009ea8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009eac:	b931      	cbnz	r1, 8009ebc <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009eae:	f005 fc47 	bl	800f740 <memset>
 8009eb2:	2200      	movs	r2, #0
 8009eb4:	4b05      	ldr	r3, [pc, #20]	; (8009ecc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009eb6:	f883 2020 	strb.w	r2, [r3, #32]
 8009eba:	bd08      	pop	{r3, pc}
 8009ebc:	3a01      	subs	r2, #1
 8009ebe:	f800 1b01 	strb.w	r1, [r0], #1
 8009ec2:	d1f1      	bne.n	8009ea8 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009ec4:	e7f5      	b.n	8009eb2 <RemoteConfig::SetDisplayName(char const*)+0x12>
 8009ec6:	bf00      	nop
 8009ec8:	20000b61 	andcs	r0, r0, r1, ror #22
 8009ecc:	20000b58 	andcs	r0, r0, r8, asr fp

08009ed0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ed2:	4604      	mov	r4, r0
 8009ed4:	4616      	mov	r6, r2
 8009ed6:	460d      	mov	r5, r1
 8009ed8:	4f27      	ldr	r7, [pc, #156]	; (8009f78 <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 8009eda:	b085      	sub	sp, #20
 8009edc:	b9a9      	cbnz	r1, 8009f0a <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009ede:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009ee2:	6839      	ldr	r1, [r7, #0]
 8009ee4:	aa03      	add	r2, sp, #12
 8009ee6:	3105      	adds	r1, #5
 8009ee8:	9303      	str	r3, [sp, #12]
 8009eea:	f000 fbd3 	bl	800a694 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009eee:	1e03      	subs	r3, r0, #0
 8009ef0:	da1b      	bge.n	8009f2a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009ef2:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ef6:	220b      	movs	r2, #11
 8009ef8:	9300      	str	r3, [sp, #0]
 8009efa:	4920      	ldr	r1, [pc, #128]	; (8009f7c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009efc:	69a3      	ldr	r3, [r4, #24]
 8009efe:	7d20      	ldrb	r0, [r4, #20]
 8009f00:	f002 fa72 	bl	800c3e8 <udp_send>
 8009f04:	200c      	movs	r0, #12
 8009f06:	b005      	add	sp, #20
 8009f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f0a:	9203      	str	r2, [sp, #12]
 8009f0c:	aa03      	add	r2, sp, #12
 8009f0e:	6039      	str	r1, [r7, #0]
 8009f10:	f000 fbc0 	bl	800a694 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009f14:	1e03      	subs	r3, r0, #0
 8009f16:	da08      	bge.n	8009f2a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009f18:	2e0b      	cmp	r6, #11
 8009f1a:	4632      	mov	r2, r6
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	bf28      	it	cs
 8009f20:	220b      	movcs	r2, #11
 8009f22:	4916      	ldr	r1, [pc, #88]	; (8009f7c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009f24:	f005 fbea 	bl	800f6fc <memcpy>
 8009f28:	e7ec      	b.n	8009f04 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009f2a:	201c      	movs	r0, #28
 8009f2c:	4343      	muls	r3, r0
 8009f2e:	4914      	ldr	r1, [pc, #80]	; (8009f80 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009f30:	18ca      	adds	r2, r1, r3
 8009f32:	6852      	ldr	r2, [r2, #4]
 8009f34:	58cb      	ldr	r3, [r1, r3]
 8009f36:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009f3a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009f3e:	07d2      	lsls	r2, r2, #31
 8009f40:	bf48      	it	mi
 8009f42:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009f46:	a903      	add	r1, sp, #12
 8009f48:	bf48      	it	mi
 8009f4a:	58d3      	ldrmi	r3, [r2, r3]
 8009f4c:	4798      	blx	r3
 8009f4e:	9a03      	ldr	r2, [sp, #12]
 8009f50:	b955      	cbnz	r5, 8009f68 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009f52:	f642 1305 	movw	r3, #10501	; 0x2905
 8009f56:	6839      	ldr	r1, [r7, #0]
 8009f58:	9300      	str	r3, [sp, #0]
 8009f5a:	7d20      	ldrb	r0, [r4, #20]
 8009f5c:	69a3      	ldr	r3, [r4, #24]
 8009f5e:	b292      	uxth	r2, r2
 8009f60:	f002 fa42 	bl	800c3e8 <udp_send>
 8009f64:	9803      	ldr	r0, [sp, #12]
 8009f66:	e7ce      	b.n	8009f06 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009f68:	42b2      	cmp	r2, r6
 8009f6a:	bf28      	it	cs
 8009f6c:	4632      	movcs	r2, r6
 8009f6e:	4628      	mov	r0, r5
 8009f70:	6839      	ldr	r1, [r7, #0]
 8009f72:	f005 fbce 	bl	800f712 <memmove>
 8009f76:	e7f5      	b.n	8009f64 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009f78:	20000b54 	andcs	r0, r0, r4, asr fp
 8009f7c:	08011f12 	stmdaeq	r1, {r1, r4, r8, r9, sl, fp, ip}
 8009f80:	0801217c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sp}

08009f84 <RemoteConfig::HandleGetNoParams()>:
 8009f84:	2200      	movs	r2, #0
 8009f86:	4611      	mov	r1, r2
 8009f88:	f7ff bfa2 	b.w	8009ed0 <RemoteConfig::HandleGet(void*, unsigned int)>

08009f8c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009f8c:	b510      	push	{r4, lr}
 8009f8e:	460c      	mov	r4, r1
 8009f90:	4b07      	ldr	r3, [pc, #28]	; (8009fb0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009f92:	b08a      	sub	sp, #40	; 0x28
 8009f94:	6819      	ldr	r1, [r3, #0]
 8009f96:	a801      	add	r0, sp, #4
 8009f98:	f000 f9d8 	bl	800a34c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009f9c:	4905      	ldr	r1, [pc, #20]	; (8009fb4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009f9e:	4623      	mov	r3, r4
 8009fa0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009fa4:	6809      	ldr	r1, [r1, #0]
 8009fa6:	a801      	add	r0, sp, #4
 8009fa8:	f000 faf4 	bl	800a594 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009fac:	b00a      	add	sp, #40	; 0x28
 8009fae:	bd10      	pop	{r4, pc}
 8009fb0:	20001bac 	andcs	r1, r0, ip, lsr #23
 8009fb4:	20000b54 	andcs	r0, r0, r4, asr fp

08009fb8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009fb8:	b513      	push	{r0, r1, r4, lr}
 8009fba:	460c      	mov	r4, r1
 8009fbc:	4b07      	ldr	r3, [pc, #28]	; (8009fdc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009fbe:	a801      	add	r0, sp, #4
 8009fc0:	6819      	ldr	r1, [r3, #0]
 8009fc2:	f003 f8c1 	bl	800d148 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009fc6:	4906      	ldr	r1, [pc, #24]	; (8009fe0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009fc8:	4623      	mov	r3, r4
 8009fca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009fce:	6809      	ldr	r1, [r1, #0]
 8009fd0:	a801      	add	r0, sp, #4
 8009fd2:	f003 faa5 	bl	800d520 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009fd6:	b002      	add	sp, #8
 8009fd8:	bd10      	pop	{r4, pc}
 8009fda:	bf00      	nop
 8009fdc:	20001ba8 	andcs	r1, r0, r8, lsr #23
 8009fe0:	20000b54 	andcs	r0, r0, r4, asr fp

08009fe4 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8009fe4:	b510      	push	{r4, lr}
 8009fe6:	460c      	mov	r4, r1
 8009fe8:	4b07      	ldr	r3, [pc, #28]	; (800a008 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8009fea:	b08a      	sub	sp, #40	; 0x28
 8009fec:	6819      	ldr	r1, [r3, #0]
 8009fee:	a801      	add	r0, sp, #4
 8009ff0:	f7fe fd6a 	bl	8008ac8 <E131Params::E131Params(E131ParamsStore*)>
 8009ff4:	4905      	ldr	r1, [pc, #20]	; (800a00c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8009ff6:	4623      	mov	r3, r4
 8009ff8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ffc:	6809      	ldr	r1, [r1, #0]
 8009ffe:	a801      	add	r0, sp, #4
 800a000:	f7fe ff46 	bl	8008e90 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800a004:	b00a      	add	sp, #40	; 0x28
 800a006:	bd10      	pop	{r4, pc}
 800a008:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800a00c:	20000b54 	andcs	r0, r0, r4, asr fp

0800a010 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800a010:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a012:	460c      	mov	r4, r1
 800a014:	4b07      	ldr	r3, [pc, #28]	; (800a034 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800a016:	4668      	mov	r0, sp
 800a018:	6819      	ldr	r1, [r3, #0]
 800a01a:	f7ff f843 	bl	80090a4 <DmxParams::DmxParams(DmxParamsStore*)>
 800a01e:	4906      	ldr	r1, [pc, #24]	; (800a038 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800a020:	4623      	mov	r3, r4
 800a022:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a026:	4668      	mov	r0, sp
 800a028:	6809      	ldr	r1, [r1, #0]
 800a02a:	f7ff f95b 	bl	80092e4 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800a02e:	b004      	add	sp, #16
 800a030:	bd10      	pop	{r4, pc}
 800a032:	bf00      	nop
 800a034:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a038:	20000b54 	andcs	r0, r0, r4, asr fp

0800a03c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800a03c:	b510      	push	{r4, lr}
 800a03e:	460c      	mov	r4, r1
 800a040:	4b07      	ldr	r3, [pc, #28]	; (800a060 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800a042:	b08a      	sub	sp, #40	; 0x28
 800a044:	6819      	ldr	r1, [r3, #0]
 800a046:	4668      	mov	r0, sp
 800a048:	f004 fa32 	bl	800e4b0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a04c:	4905      	ldr	r1, [pc, #20]	; (800a064 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800a04e:	4623      	mov	r3, r4
 800a050:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a054:	4668      	mov	r0, sp
 800a056:	6809      	ldr	r1, [r1, #0]
 800a058:	f004 fb60 	bl	800e71c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800a05c:	b00a      	add	sp, #40	; 0x28
 800a05e:	bd10      	pop	{r4, pc}
 800a060:	20001b9c 	mulcs	r0, ip, fp
 800a064:	20000b54 	andcs	r0, r0, r4, asr fp

0800a068 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800a068:	b530      	push	{r4, r5, lr}
 800a06a:	b085      	sub	sp, #20
 800a06c:	4604      	mov	r4, r0
 800a06e:	9201      	str	r2, [sp, #4]
 800a070:	b9c9      	cbnz	r1, 800a0a6 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800a072:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800a076:	9303      	str	r3, [sp, #12]
 800a078:	4b1b      	ldr	r3, [pc, #108]	; (800a0e8 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800a07a:	aa03      	add	r2, sp, #12
 800a07c:	6819      	ldr	r1, [r3, #0]
 800a07e:	3101      	adds	r1, #1
 800a080:	f000 fb08 	bl	800a694 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a084:	2800      	cmp	r0, #0
 800a086:	db24      	blt.n	800a0d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800a088:	221c      	movs	r2, #28
 800a08a:	4b18      	ldr	r3, [pc, #96]	; (800a0ec <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800a08c:	fb02 3300 	mla	r3, r2, r0, r3
 800a090:	68da      	ldr	r2, [r3, #12]
 800a092:	689b      	ldr	r3, [r3, #8]
 800a094:	1051      	asrs	r1, r2, #1
 800a096:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a09a:	07d2      	lsls	r2, r2, #31
 800a09c:	bf44      	itt	mi
 800a09e:	5862      	ldrmi	r2, [r4, r1]
 800a0a0:	58d3      	ldrmi	r3, [r2, r3]
 800a0a2:	4798      	blx	r3
 800a0a4:	e015      	b.n	800a0d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800a0a6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a0aa:	4613      	mov	r3, r2
 800a0ac:	d811      	bhi.n	800a0d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800a0ae:	2200      	movs	r2, #0
 800a0b0:	460d      	mov	r5, r1
 800a0b2:	490f      	ldr	r1, [pc, #60]	; (800a0f0 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800a0b4:	6202      	str	r2, [r0, #32]
 800a0b6:	7809      	ldrb	r1, [r1, #0]
 800a0b8:	b29b      	uxth	r3, r3
 800a0ba:	07c9      	lsls	r1, r1, #31
 800a0bc:	d50b      	bpl.n	800a0d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800a0be:	7829      	ldrb	r1, [r5, #0]
 800a0c0:	297b      	cmp	r1, #123	; 0x7b
 800a0c2:	d108      	bne.n	800a0d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800a0c4:	3b01      	subs	r3, #1
 800a0c6:	4628      	mov	r0, r5
 800a0c8:	b299      	uxth	r1, r3
 800a0ca:	f004 fbe3 	bl	800e894 <properties::convert_json_file(char*, unsigned short, bool)>
 800a0ce:	2800      	cmp	r0, #0
 800a0d0:	dc08      	bgt.n	800a0e4 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 800a0d2:	b005      	add	sp, #20
 800a0d4:	bd30      	pop	{r4, r5, pc}
 800a0d6:	83a3      	strh	r3, [r4, #28]
 800a0d8:	4b03      	ldr	r3, [pc, #12]	; (800a0e8 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800a0da:	4620      	mov	r0, r4
 800a0dc:	601d      	str	r5, [r3, #0]
 800a0de:	aa01      	add	r2, sp, #4
 800a0e0:	1c69      	adds	r1, r5, #1
 800a0e2:	e7cd      	b.n	800a080 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800a0e4:	83a0      	strh	r0, [r4, #28]
 800a0e6:	e7f7      	b.n	800a0d8 <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 800a0e8:	20000b54 	andcs	r0, r0, r4, asr fp
 800a0ec:	0801217c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sp}
 800a0f0:	20009ac8 	andcs	r9, r0, r8, asr #21

0800a0f4 <RemoteConfig::Run()>:
 800a0f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a0f8:	7b03      	ldrb	r3, [r0, #12]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d14f      	bne.n	800a19e <RemoteConfig::Run()+0xaa>
 800a0fe:	4604      	mov	r4, r0
 800a100:	4d3e      	ldr	r5, [pc, #248]	; (800a1fc <RemoteConfig::Run()+0x108>)
 800a102:	3024      	adds	r0, #36	; 0x24
 800a104:	f000 fdb6 	bl	800ac74 <HttpDaemon::Run()>
 800a108:	4629      	mov	r1, r5
 800a10a:	7d20      	ldrb	r0, [r4, #20]
 800a10c:	f10d 030e 	add.w	r3, sp, #14
 800a110:	f104 0218 	add.w	r2, r4, #24
 800a114:	f002 f942 	bl	800c39c <udp_recv2>
 800a118:	2803      	cmp	r0, #3
 800a11a:	83a0      	strh	r0, [r4, #28]
 800a11c:	d93f      	bls.n	800a19e <RemoteConfig::Run()+0xaa>
 800a11e:	682b      	ldr	r3, [r5, #0]
 800a120:	181a      	adds	r2, r3, r0
 800a122:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800a126:	2a0a      	cmp	r2, #10
 800a128:	bf04      	itt	eq
 800a12a:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 800a12e:	83a0      	strheq	r0, [r4, #28]
 800a130:	7819      	ldrb	r1, [r3, #0]
 800a132:	293f      	cmp	r1, #63	; 0x3f
 800a134:	d139      	bne.n	800a1aa <RemoteConfig::Run()+0xb6>
 800a136:	4832      	ldr	r0, [pc, #200]	; (800a200 <RemoteConfig::Run()+0x10c>)
 800a138:	2200      	movs	r2, #0
 800a13a:	4607      	mov	r7, r0
 800a13c:	8ba1      	ldrh	r1, [r4, #28]
 800a13e:	3901      	subs	r1, #1
 800a140:	b289      	uxth	r1, r1
 800a142:	83a1      	strh	r1, [r4, #28]
 800a144:	7b86      	ldrb	r6, [r0, #14]
 800a146:	8985      	ldrh	r5, [r0, #12]
 800a148:	b17e      	cbz	r6, 800a16a <RemoteConfig::Run()+0x76>
 800a14a:	42a9      	cmp	r1, r5
 800a14c:	d80f      	bhi.n	800a16e <RemoteConfig::Run()+0x7a>
 800a14e:	3201      	adds	r2, #1
 800a150:	2a08      	cmp	r2, #8
 800a152:	f100 0010 	add.w	r0, r0, #16
 800a156:	d1f5      	bne.n	800a144 <RemoteConfig::Run()+0x50>
 800a158:	f642 1305 	movw	r3, #10501	; 0x2905
 800a15c:	9300      	str	r3, [sp, #0]
 800a15e:	69a3      	ldr	r3, [r4, #24]
 800a160:	4928      	ldr	r1, [pc, #160]	; (800a204 <RemoteConfig::Run()+0x110>)
 800a162:	7d20      	ldrb	r0, [r4, #20]
 800a164:	f002 f940 	bl	800c3e8 <udp_send>
 800a168:	e019      	b.n	800a19e <RemoteConfig::Run()+0xaa>
 800a16a:	42a9      	cmp	r1, r5
 800a16c:	d1ef      	bne.n	800a14e <RemoteConfig::Run()+0x5a>
 800a16e:	6886      	ldr	r6, [r0, #8]
 800a170:	f103 0c01 	add.w	ip, r3, #1
 800a174:	4435      	add	r5, r6
 800a176:	42b5      	cmp	r5, r6
 800a178:	d006      	beq.n	800a188 <RemoteConfig::Run()+0x94>
 800a17a:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800a17e:	f816 eb01 	ldrb.w	lr, [r6], #1
 800a182:	45f0      	cmp	r8, lr
 800a184:	d0f7      	beq.n	800a176 <RemoteConfig::Run()+0x82>
 800a186:	e7e2      	b.n	800a14e <RemoteConfig::Run()+0x5a>
 800a188:	0113      	lsls	r3, r2, #4
 800a18a:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800a18e:	6852      	ldr	r2, [r2, #4]
 800a190:	58fb      	ldr	r3, [r7, r3]
 800a192:	1051      	asrs	r1, r2, #1
 800a194:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a198:	07d2      	lsls	r2, r2, #31
 800a19a:	d403      	bmi.n	800a1a4 <RemoteConfig::Run()+0xb0>
 800a19c:	4798      	blx	r3
 800a19e:	b004      	add	sp, #16
 800a1a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1a4:	5862      	ldr	r2, [r4, r1]
 800a1a6:	58d3      	ldr	r3, [r2, r3]
 800a1a8:	e7f8      	b.n	800a19c <RemoteConfig::Run()+0xa8>
 800a1aa:	7b62      	ldrb	r2, [r4, #13]
 800a1ac:	2a00      	cmp	r2, #0
 800a1ae:	d1f6      	bne.n	800a19e <RemoteConfig::Run()+0xaa>
 800a1b0:	2923      	cmp	r1, #35	; 0x23
 800a1b2:	d105      	bne.n	800a1c0 <RemoteConfig::Run()+0xcc>
 800a1b4:	4611      	mov	r1, r2
 800a1b6:	4620      	mov	r0, r4
 800a1b8:	6222      	str	r2, [r4, #32]
 800a1ba:	f7ff ff55 	bl	800a068 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a1be:	e7ee      	b.n	800a19e <RemoteConfig::Run()+0xaa>
 800a1c0:	2921      	cmp	r1, #33	; 0x21
 800a1c2:	d1ec      	bne.n	800a19e <RemoteConfig::Run()+0xaa>
 800a1c4:	8ba2      	ldrh	r2, [r4, #28]
 800a1c6:	3a01      	subs	r2, #1
 800a1c8:	b292      	uxth	r2, r2
 800a1ca:	2a08      	cmp	r2, #8
 800a1cc:	83a2      	strh	r2, [r4, #28]
 800a1ce:	d90a      	bls.n	800a1e6 <RemoteConfig::Run()+0xf2>
 800a1d0:	490d      	ldr	r1, [pc, #52]	; (800a208 <RemoteConfig::Run()+0x114>)
 800a1d2:	1c5a      	adds	r2, r3, #1
 800a1d4:	3309      	adds	r3, #9
 800a1d6:	4293      	cmp	r3, r2
 800a1d8:	d00c      	beq.n	800a1f4 <RemoteConfig::Run()+0x100>
 800a1da:	f812 5b01 	ldrb.w	r5, [r2], #1
 800a1de:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a1e2:	4285      	cmp	r5, r0
 800a1e4:	d0f7      	beq.n	800a1d6 <RemoteConfig::Run()+0xe2>
 800a1e6:	f642 1305 	movw	r3, #10501	; 0x2905
 800a1ea:	9300      	str	r3, [sp, #0]
 800a1ec:	2208      	movs	r2, #8
 800a1ee:	69a3      	ldr	r3, [r4, #24]
 800a1f0:	4906      	ldr	r1, [pc, #24]	; (800a20c <RemoteConfig::Run()+0x118>)
 800a1f2:	e7b6      	b.n	800a162 <RemoteConfig::Run()+0x6e>
 800a1f4:	4620      	mov	r0, r4
 800a1f6:	f7ff fdc1 	bl	8009d7c <RemoteConfig::HandleDisplaySet()>
 800a1fa:	e7d0      	b.n	800a19e <RemoteConfig::Run()+0xaa>
 800a1fc:	20000b54 	andcs	r0, r0, r4, asr fp
 800a200:	080120a4 	stmdaeq	r1, {r2, r5, r7, sp}
 800a204:	08011f27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, fp, ip}
 800a208:	08011f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, ip}
 800a20c:	08011f30 	stmdaeq	r1, {r4, r5, r8, r9, sl, fp, ip}

0800a210 <RemoteConfig::HandleSetRconfig()>:
 800a210:	b510      	push	{r4, lr}
 800a212:	4604      	mov	r4, r0
 800a214:	4b08      	ldr	r3, [pc, #32]	; (800a238 <RemoteConfig::HandleSetRconfig()+0x28>)
 800a216:	b08a      	sub	sp, #40	; 0x28
 800a218:	6819      	ldr	r1, [r3, #0]
 800a21a:	a801      	add	r0, sp, #4
 800a21c:	f000 f896 	bl	800a34c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a220:	4b06      	ldr	r3, [pc, #24]	; (800a23c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800a222:	8ba2      	ldrh	r2, [r4, #28]
 800a224:	6819      	ldr	r1, [r3, #0]
 800a226:	a801      	add	r0, sp, #4
 800a228:	f000 f8a6 	bl	800a378 <RemoteConfigParams::Load(char const*, unsigned int)>
 800a22c:	4621      	mov	r1, r4
 800a22e:	a801      	add	r0, sp, #4
 800a230:	f000 f9bd 	bl	800a5ae <RemoteConfigParams::Set(RemoteConfig*)>
 800a234:	b00a      	add	sp, #40	; 0x28
 800a236:	bd10      	pop	{r4, pc}
 800a238:	20001bac 	andcs	r1, r0, ip, lsr #23
 800a23c:	20000b54 	andcs	r0, r0, r4, asr fp

0800a240 <RemoteConfig::HandleSetNetworkTxt()>:
 800a240:	b513      	push	{r0, r1, r4, lr}
 800a242:	4604      	mov	r4, r0
 800a244:	4b06      	ldr	r3, [pc, #24]	; (800a260 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800a246:	a801      	add	r0, sp, #4
 800a248:	6819      	ldr	r1, [r3, #0]
 800a24a:	f002 ff7d 	bl	800d148 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a24e:	4b05      	ldr	r3, [pc, #20]	; (800a264 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800a250:	8ba2      	ldrh	r2, [r4, #28]
 800a252:	6819      	ldr	r1, [r3, #0]
 800a254:	a801      	add	r0, sp, #4
 800a256:	f002 ff97 	bl	800d188 <NetworkParams::Load(char const*, unsigned int)>
 800a25a:	b002      	add	sp, #8
 800a25c:	bd10      	pop	{r4, pc}
 800a25e:	bf00      	nop
 800a260:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800a264:	20000b54 	andcs	r0, r0, r4, asr fp

0800a268 <RemoteConfig::HandleSetE131Txt()>:
 800a268:	b510      	push	{r4, lr}
 800a26a:	4604      	mov	r4, r0
 800a26c:	4b06      	ldr	r3, [pc, #24]	; (800a288 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800a26e:	b08a      	sub	sp, #40	; 0x28
 800a270:	6819      	ldr	r1, [r3, #0]
 800a272:	a801      	add	r0, sp, #4
 800a274:	f7fe fc28 	bl	8008ac8 <E131Params::E131Params(E131ParamsStore*)>
 800a278:	4b04      	ldr	r3, [pc, #16]	; (800a28c <RemoteConfig::HandleSetE131Txt()+0x24>)
 800a27a:	8ba2      	ldrh	r2, [r4, #28]
 800a27c:	6819      	ldr	r1, [r3, #0]
 800a27e:	a801      	add	r0, sp, #4
 800a280:	f7fe fc4e 	bl	8008b20 <E131Params::Load(char const*, unsigned int)>
 800a284:	b00a      	add	sp, #40	; 0x28
 800a286:	bd10      	pop	{r4, pc}
 800a288:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800a28c:	20000b54 	andcs	r0, r0, r4, asr fp

0800a290 <RemoteConfig::HandleSetParamsTxt()>:
 800a290:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a292:	4604      	mov	r4, r0
 800a294:	4b06      	ldr	r3, [pc, #24]	; (800a2b0 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800a296:	4668      	mov	r0, sp
 800a298:	6819      	ldr	r1, [r3, #0]
 800a29a:	f7fe ff03 	bl	80090a4 <DmxParams::DmxParams(DmxParamsStore*)>
 800a29e:	4b05      	ldr	r3, [pc, #20]	; (800a2b4 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800a2a0:	4668      	mov	r0, sp
 800a2a2:	8ba2      	ldrh	r2, [r4, #28]
 800a2a4:	6819      	ldr	r1, [r3, #0]
 800a2a6:	f7fe ff15 	bl	80090d4 <DmxParams::Load(char const*, unsigned int)>
 800a2aa:	b004      	add	sp, #16
 800a2ac:	bd10      	pop	{r4, pc}
 800a2ae:	bf00      	nop
 800a2b0:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a2b4:	20000b54 	andcs	r0, r0, r4, asr fp

0800a2b8 <RemoteConfig::HandleSetDisplayTxt()>:
 800a2b8:	b510      	push	{r4, lr}
 800a2ba:	4604      	mov	r4, r0
 800a2bc:	4b06      	ldr	r3, [pc, #24]	; (800a2d8 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800a2be:	b08a      	sub	sp, #40	; 0x28
 800a2c0:	6819      	ldr	r1, [r3, #0]
 800a2c2:	4668      	mov	r0, sp
 800a2c4:	f004 f8f4 	bl	800e4b0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a2c8:	4b04      	ldr	r3, [pc, #16]	; (800a2dc <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800a2ca:	4668      	mov	r0, sp
 800a2cc:	8ba2      	ldrh	r2, [r4, #28]
 800a2ce:	6819      	ldr	r1, [r3, #0]
 800a2d0:	f004 f908 	bl	800e4e4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800a2d4:	b00a      	add	sp, #40	; 0x28
 800a2d6:	bd10      	pop	{r4, pc}
 800a2d8:	20001b9c 	mulcs	r0, ip, fp
 800a2dc:	20000b54 	andcs	r0, r0, r4, asr fp

0800a2e0 <RemoteConfig::HandleFactory()>:
 800a2e0:	b538      	push	{r3, r4, r5, lr}
 800a2e2:	2400      	movs	r4, #0
 800a2e4:	4d04      	ldr	r5, [pc, #16]	; (800a2f8 <RemoteConfig::HandleFactory()+0x18>)
 800a2e6:	4621      	mov	r1, r4
 800a2e8:	6828      	ldr	r0, [r5, #0]
 800a2ea:	3401      	adds	r4, #1
 800a2ec:	f000 fee6 	bl	800b0bc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800a2f0:	2c1c      	cmp	r4, #28
 800a2f2:	d1f8      	bne.n	800a2e6 <RemoteConfig::HandleFactory()+0x6>
 800a2f4:	bd38      	pop	{r3, r4, r5, pc}
 800a2f6:	bf00      	nop
 800a2f8:	20001b94 	mulcs	r0, r4, fp

0800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a2fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a2fe:	460b      	mov	r3, r1
 800a300:	8885      	ldrh	r5, [r0, #4]
 800a302:	88c1      	ldrh	r1, [r0, #6]
 800a304:	42a9      	cmp	r1, r5
 800a306:	d214      	bcs.n	800a332 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a308:	4604      	mov	r4, r0
 800a30a:	6800      	ldr	r0, [r0, #0]
 800a30c:	1a6d      	subs	r5, r5, r1
 800a30e:	4408      	add	r0, r1
 800a310:	7a21      	ldrb	r1, [r4, #8]
 800a312:	b91a      	cbnz	r2, 800a31c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a314:	b919      	cbnz	r1, 800a31e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a316:	4a0a      	ldr	r2, [pc, #40]	; (800a340 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a318:	9100      	str	r1, [sp, #0]
 800a31a:	e002      	b.n	800a322 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a31c:	b159      	cbz	r1, 800a336 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a31e:	9200      	str	r2, [sp, #0]
 800a320:	4a08      	ldr	r2, [pc, #32]	; (800a344 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a322:	4629      	mov	r1, r5
 800a324:	f005 fc56 	bl	800fbd4 <snprintf>
 800a328:	4285      	cmp	r5, r0
 800a32a:	bfa2      	ittt	ge
 800a32c:	88e3      	ldrhge	r3, [r4, #6]
 800a32e:	181b      	addge	r3, r3, r0
 800a330:	80e3      	strhge	r3, [r4, #6]
 800a332:	b003      	add	sp, #12
 800a334:	bd30      	pop	{r4, r5, pc}
 800a336:	2201      	movs	r2, #1
 800a338:	9200      	str	r2, [sp, #0]
 800a33a:	4a03      	ldr	r2, [pc, #12]	; (800a348 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a33c:	e7f1      	b.n	800a322 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a33e:	bf00      	nop
 800a340:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 800a344:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 800a348:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

0800a34c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800a34c:	b510      	push	{r4, lr}
 800a34e:	4604      	mov	r4, r0
 800a350:	2220      	movs	r2, #32
 800a352:	f840 1b04 	str.w	r1, [r0], #4
 800a356:	2100      	movs	r1, #0
 800a358:	f005 f9f2 	bl	800f740 <memset>
 800a35c:	4620      	mov	r0, r4
 800a35e:	bd10      	pop	{r4, pc}

0800a360 <RemoteConfigParams::Load()>:
 800a360:	b508      	push	{r3, lr}
 800a362:	2300      	movs	r3, #0
 800a364:	4601      	mov	r1, r0
 800a366:	6043      	str	r3, [r0, #4]
 800a368:	6800      	ldr	r0, [r0, #0]
 800a36a:	b120      	cbz	r0, 800a376 <RemoteConfigParams::Load()+0x16>
 800a36c:	6803      	ldr	r3, [r0, #0]
 800a36e:	3104      	adds	r1, #4
 800a370:	68db      	ldr	r3, [r3, #12]
 800a372:	4798      	blx	r3
 800a374:	2001      	movs	r0, #1
 800a376:	bd08      	pop	{r3, pc}

0800a378 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800a378:	2300      	movs	r3, #0
 800a37a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a37c:	460d      	mov	r5, r1
 800a37e:	4616      	mov	r6, r2
 800a380:	4604      	mov	r4, r0
 800a382:	6043      	str	r3, [r0, #4]
 800a384:	4602      	mov	r2, r0
 800a386:	490a      	ldr	r1, [pc, #40]	; (800a3b0 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800a388:	4668      	mov	r0, sp
 800a38a:	f004 fbd1 	bl	800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a38e:	4632      	mov	r2, r6
 800a390:	4629      	mov	r1, r5
 800a392:	4668      	mov	r0, sp
 800a394:	f004 fbd0 	bl	800eb38 <ReadConfigFile::Read(char const*, unsigned int)>
 800a398:	4621      	mov	r1, r4
 800a39a:	f851 0b04 	ldr.w	r0, [r1], #4
 800a39e:	6803      	ldr	r3, [r0, #0]
 800a3a0:	689b      	ldr	r3, [r3, #8]
 800a3a2:	4798      	blx	r3
 800a3a4:	4668      	mov	r0, sp
 800a3a6:	f004 fbc6 	bl	800eb36 <ReadConfigFile::~ReadConfigFile()>
 800a3aa:	b002      	add	sp, #8
 800a3ac:	bd70      	pop	{r4, r5, r6, pc}
 800a3ae:	bf00      	nop
 800a3b0:	0800a471 	stmdaeq	r0, {r0, r4, r5, r6, sl, sp, pc}

0800a3b4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800a3b4:	6843      	ldr	r3, [r0, #4]
 800a3b6:	b111      	cbz	r1, 800a3be <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800a3b8:	4313      	orrs	r3, r2
 800a3ba:	6043      	str	r3, [r0, #4]
 800a3bc:	4770      	bx	lr
 800a3be:	ea23 0302 	bic.w	r3, r3, r2
 800a3c2:	e7fa      	b.n	800a3ba <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800a3c4 <RemoteConfigParams::callbackFunction(char const*)>:
 800a3c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a3c6:	460d      	mov	r5, r1
 800a3c8:	4604      	mov	r4, r0
 800a3ca:	4923      	ldr	r1, [pc, #140]	; (800a458 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800a3cc:	4628      	mov	r0, r5
 800a3ce:	f10d 0203 	add.w	r2, sp, #3
 800a3d2:	f004 fc5c 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a3d6:	b938      	cbnz	r0, 800a3e8 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800a3d8:	2201      	movs	r2, #1
 800a3da:	4620      	mov	r0, r4
 800a3dc:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800a3e0:	f7ff ffe8 	bl	800a3b4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800a3e4:	b003      	add	sp, #12
 800a3e6:	bd30      	pop	{r4, r5, pc}
 800a3e8:	4628      	mov	r0, r5
 800a3ea:	491c      	ldr	r1, [pc, #112]	; (800a45c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800a3ec:	f10d 0203 	add.w	r2, sp, #3
 800a3f0:	f004 fc4d 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a3f4:	b908      	cbnz	r0, 800a3fa <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800a3f6:	2202      	movs	r2, #2
 800a3f8:	e7ef      	b.n	800a3da <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a3fa:	4628      	mov	r0, r5
 800a3fc:	4918      	ldr	r1, [pc, #96]	; (800a460 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800a3fe:	f10d 0203 	add.w	r2, sp, #3
 800a402:	f004 fc44 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a406:	b908      	cbnz	r0, 800a40c <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800a408:	2204      	movs	r2, #4
 800a40a:	e7e6      	b.n	800a3da <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a40c:	4628      	mov	r0, r5
 800a40e:	4915      	ldr	r1, [pc, #84]	; (800a464 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800a410:	f10d 0203 	add.w	r2, sp, #3
 800a414:	f004 fc3b 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a418:	b908      	cbnz	r0, 800a41e <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800a41a:	2208      	movs	r2, #8
 800a41c:	e7dd      	b.n	800a3da <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a41e:	4628      	mov	r0, r5
 800a420:	4911      	ldr	r1, [pc, #68]	; (800a468 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800a422:	f10d 0203 	add.w	r2, sp, #3
 800a426:	f004 fc32 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a42a:	b908      	cbnz	r0, 800a430 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800a42c:	2220      	movs	r2, #32
 800a42e:	e7d4      	b.n	800a3da <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a430:	2317      	movs	r3, #23
 800a432:	4628      	mov	r0, r5
 800a434:	9301      	str	r3, [sp, #4]
 800a436:	490d      	ldr	r1, [pc, #52]	; (800a46c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800a438:	ab01      	add	r3, sp, #4
 800a43a:	f104 020c 	add.w	r2, r4, #12
 800a43e:	f004 fbaf 	bl	800eba0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a442:	2800      	cmp	r0, #0
 800a444:	d1ce      	bne.n	800a3e4 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800a446:	9b01      	ldr	r3, [sp, #4]
 800a448:	4423      	add	r3, r4
 800a44a:	7318      	strb	r0, [r3, #12]
 800a44c:	6863      	ldr	r3, [r4, #4]
 800a44e:	f043 0310 	orr.w	r3, r3, #16
 800a452:	6063      	str	r3, [r4, #4]
 800a454:	e7c6      	b.n	800a3e4 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800a456:	bf00      	nop
 800a458:	080124e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, sp}
 800a45c:	08012505 	stmdaeq	r1, {r0, r2, r8, sl, sp}
 800a460:	08012513 	stmdaeq	r1, {r0, r1, r4, r8, sl, sp}
 800a464:	08012521 	stmdaeq	r1, {r0, r5, r8, sl, sp}
 800a468:	0801252f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, sp}
 800a46c:	080124f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, sp}

0800a470 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a470:	f7ff bfa8 	b.w	800a3c4 <RemoteConfigParams::callbackFunction(char const*)>

0800a474 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800a474:	b570      	push	{r4, r5, r6, lr}
 800a476:	4604      	mov	r4, r0
 800a478:	4615      	mov	r5, r2
 800a47a:	461e      	mov	r6, r3
 800a47c:	b086      	sub	sp, #24
 800a47e:	3004      	adds	r0, #4
 800a480:	2900      	cmp	r1, #0
 800a482:	d040      	beq.n	800a506 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800a484:	2220      	movs	r2, #32
 800a486:	f005 f944 	bl	800f712 <memmove>
 800a48a:	4633      	mov	r3, r6
 800a48c:	462a      	mov	r2, r5
 800a48e:	4937      	ldr	r1, [pc, #220]	; (800a56c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800a490:	a803      	add	r0, sp, #12
 800a492:	f004 faad 	bl	800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a496:	6862      	ldr	r2, [r4, #4]
 800a498:	4935      	ldr	r1, [pc, #212]	; (800a570 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800a49a:	f002 0201 	and.w	r2, r2, #1
 800a49e:	a803      	add	r0, sp, #12
 800a4a0:	f7ff ff2c 	bl	800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a4a4:	6862      	ldr	r2, [r4, #4]
 800a4a6:	4933      	ldr	r1, [pc, #204]	; (800a574 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800a4a8:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a4ac:	a803      	add	r0, sp, #12
 800a4ae:	f7ff ff25 	bl	800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a4b2:	6862      	ldr	r2, [r4, #4]
 800a4b4:	4930      	ldr	r1, [pc, #192]	; (800a578 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a4b6:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a4ba:	a803      	add	r0, sp, #12
 800a4bc:	f7ff ff1e 	bl	800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a4c0:	6862      	ldr	r2, [r4, #4]
 800a4c2:	492e      	ldr	r1, [pc, #184]	; (800a57c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a4c4:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a4c8:	a803      	add	r0, sp, #12
 800a4ca:	f7ff ff17 	bl	800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a4ce:	6862      	ldr	r2, [r4, #4]
 800a4d0:	492b      	ldr	r1, [pc, #172]	; (800a580 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a4d2:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a4d6:	a803      	add	r0, sp, #12
 800a4d8:	f7ff ff10 	bl	800a2fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a4dc:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800a4e0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a4e4:	42a9      	cmp	r1, r5
 800a4e6:	d223      	bcs.n	800a530 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800a4e8:	9803      	ldr	r0, [sp, #12]
 800a4ea:	1a6d      	subs	r5, r5, r1
 800a4ec:	4408      	add	r0, r1
 800a4ee:	6861      	ldr	r1, [r4, #4]
 800a4f0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a4f4:	06c9      	lsls	r1, r1, #27
 800a4f6:	f104 030c 	add.w	r3, r4, #12
 800a4fa:	d40b      	bmi.n	800a514 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800a4fc:	b95a      	cbnz	r2, 800a516 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a4fe:	9300      	str	r3, [sp, #0]
 800a500:	4a20      	ldr	r2, [pc, #128]	; (800a584 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a502:	4b21      	ldr	r3, [pc, #132]	; (800a588 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a504:	e00a      	b.n	800a51c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800a506:	6823      	ldr	r3, [r4, #0]
 800a508:	4601      	mov	r1, r0
 800a50a:	681a      	ldr	r2, [r3, #0]
 800a50c:	4618      	mov	r0, r3
 800a50e:	68d2      	ldr	r2, [r2, #12]
 800a510:	4790      	blx	r2
 800a512:	e7ba      	b.n	800a48a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a514:	b32a      	cbz	r2, 800a562 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800a516:	9300      	str	r3, [sp, #0]
 800a518:	4a1c      	ldr	r2, [pc, #112]	; (800a58c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a51a:	4b1b      	ldr	r3, [pc, #108]	; (800a588 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a51c:	4629      	mov	r1, r5
 800a51e:	f005 fb59 	bl	800fbd4 <snprintf>
 800a522:	4285      	cmp	r5, r0
 800a524:	bfa2      	ittt	ge
 800a526:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a52a:	18c0      	addge	r0, r0, r3
 800a52c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a530:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a534:	b17b      	cbz	r3, 800a556 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800a536:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a53a:	9b03      	ldr	r3, [sp, #12]
 800a53c:	4413      	add	r3, r2
 800a53e:	227d      	movs	r2, #125	; 0x7d
 800a540:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a544:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a548:	9903      	ldr	r1, [sp, #12]
 800a54a:	54ca      	strb	r2, [r1, r3]
 800a54c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a550:	3301      	adds	r3, #1
 800a552:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a556:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a55a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a55c:	601a      	str	r2, [r3, #0]
 800a55e:	b006      	add	sp, #24
 800a560:	bd70      	pop	{r4, r5, r6, pc}
 800a562:	9300      	str	r3, [sp, #0]
 800a564:	4a0a      	ldr	r2, [pc, #40]	; (800a590 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a566:	4b08      	ldr	r3, [pc, #32]	; (800a588 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a568:	e7d8      	b.n	800a51c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800a56a:	bf00      	nop
 800a56c:	080124ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, sp}
 800a570:	080124e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, sp}
 800a574:	08012505 	stmdaeq	r1, {r0, r2, r8, sl, sp}
 800a578:	08012513 	stmdaeq	r1, {r0, r1, r4, r8, sl, sp}
 800a57c:	08012521 	stmdaeq	r1, {r0, r5, r8, sl, sp}
 800a580:	0801252f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, sp}
 800a584:	08011ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, ip}
 800a588:	080124f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, sp}
 800a58c:	08011cd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, fp, ip}
 800a590:	08011ce2 	stmdaeq	r1, {r1, r5, r6, r7, sl, fp, ip}

0800a594 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a594:	b513      	push	{r0, r1, r4, lr}
 800a596:	6804      	ldr	r4, [r0, #0]
 800a598:	b914      	cbnz	r4, 800a5a0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a59a:	601c      	str	r4, [r3, #0]
 800a59c:	b002      	add	sp, #8
 800a59e:	bd10      	pop	{r4, pc}
 800a5a0:	9300      	str	r3, [sp, #0]
 800a5a2:	4613      	mov	r3, r2
 800a5a4:	460a      	mov	r2, r1
 800a5a6:	2100      	movs	r1, #0
 800a5a8:	f7ff ff64 	bl	800a474 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a5ac:	e7f6      	b.n	800a59c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a5ae <RemoteConfigParams::Set(RemoteConfig*)>:
 800a5ae:	b538      	push	{r3, r4, r5, lr}
 800a5b0:	460c      	mov	r4, r1
 800a5b2:	4605      	mov	r5, r0
 800a5b4:	6841      	ldr	r1, [r0, #4]
 800a5b6:	4620      	mov	r0, r4
 800a5b8:	f001 0101 	and.w	r1, r1, #1
 800a5bc:	f7ff fc50 	bl	8009e60 <RemoteConfig::SetDisable(bool)>
 800a5c0:	686b      	ldr	r3, [r5, #4]
 800a5c2:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a5c6:	7362      	strb	r2, [r4, #13]
 800a5c8:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a5cc:	73a2      	strb	r2, [r4, #14]
 800a5ce:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a5d2:	73e2      	strb	r2, [r4, #15]
 800a5d4:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a5d8:	06db      	lsls	r3, r3, #27
 800a5da:	7422      	strb	r2, [r4, #16]
 800a5dc:	d506      	bpl.n	800a5ec <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a5de:	4620      	mov	r0, r4
 800a5e0:	f105 010c 	add.w	r1, r5, #12
 800a5e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a5e8:	f7ff bc5a 	b.w	8009ea0 <RemoteConfig::SetDisplayName(char const*)>
 800a5ec:	bd38      	pop	{r3, r4, r5, pc}

0800a5ee <RemoteConfigParams::Dump()>:
 800a5ee:	4770      	bx	lr

0800a5f0 <RemoteConfig::HandleReboot()>:
 800a5f0:	7b83      	ldrb	r3, [r0, #14]
 800a5f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a5f4:	2b00      	cmp	r3, #0
 800a5f6:	d03d      	beq.n	800a674 <RemoteConfig::HandleReboot()+0x84>
 800a5f8:	2301      	movs	r3, #1
 800a5fa:	4c1f      	ldr	r4, [pc, #124]	; (800a678 <RemoteConfig::HandleReboot()+0x88>)
 800a5fc:	7443      	strb	r3, [r0, #17]
 800a5fe:	6825      	ldr	r5, [r4, #0]
 800a600:	69a8      	ldr	r0, [r5, #24]
 800a602:	b138      	cbz	r0, 800a614 <RemoteConfig::HandleReboot()+0x24>
 800a604:	2100      	movs	r1, #0
 800a606:	6803      	ldr	r3, [r0, #0]
 800a608:	7429      	strb	r1, [r5, #16]
 800a60a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a60c:	4798      	blx	r3
 800a60e:	4b1b      	ldr	r3, [pc, #108]	; (800a67c <RemoteConfig::HandleReboot()+0x8c>)
 800a610:	681b      	ldr	r3, [r3, #0]
 800a612:	606b      	str	r3, [r5, #4]
 800a614:	4d1a      	ldr	r5, [pc, #104]	; (800a680 <RemoteConfig::HandleReboot()+0x90>)
 800a616:	6828      	ldr	r0, [r5, #0]
 800a618:	f000 fdd6 	bl	800b1c8 <SpiFlashStore::Flash()>
 800a61c:	2800      	cmp	r0, #0
 800a61e:	d1fa      	bne.n	800a616 <RemoteConfig::HandleReboot()+0x26>
 800a620:	4b18      	ldr	r3, [pc, #96]	; (800a684 <RemoteConfig::HandleReboot()+0x94>)
 800a622:	6818      	ldr	r0, [r3, #0]
 800a624:	f002 fba8 	bl	800cd78 <Network::Shutdown()>
 800a628:	4817      	ldr	r0, [pc, #92]	; (800a688 <RemoteConfig::HandleReboot()+0x98>)
 800a62a:	f005 faab 	bl	800fb84 <printf>
 800a62e:	6823      	ldr	r3, [r4, #0]
 800a630:	6998      	ldr	r0, [r3, #24]
 800a632:	b110      	cbz	r0, 800a63a <RemoteConfig::HandleReboot()+0x4a>
 800a634:	6803      	ldr	r3, [r0, #0]
 800a636:	68db      	ldr	r3, [r3, #12]
 800a638:	4798      	blx	r3
 800a63a:	6824      	ldr	r4, [r4, #0]
 800a63c:	4913      	ldr	r1, [pc, #76]	; (800a68c <RemoteConfig::HandleReboot()+0x9c>)
 800a63e:	4620      	mov	r0, r4
 800a640:	f7fc ffb8 	bl	80075b4 <Display::TextStatus(char const*)>
 800a644:	7c63      	ldrb	r3, [r4, #17]
 800a646:	b18b      	cbz	r3, 800a66c <RemoteConfig::HandleReboot()+0x7c>
 800a648:	2312      	movs	r3, #18
 800a64a:	f88d 3004 	strb.w	r3, [sp, #4]
 800a64e:	23bf      	movs	r3, #191	; 0xbf
 800a650:	7a20      	ldrb	r0, [r4, #8]
 800a652:	f88d 3005 	strb.w	r3, [sp, #5]
 800a656:	f88d 3006 	strb.w	r3, [sp, #6]
 800a65a:	f006 fab9 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800a65e:	68e0      	ldr	r0, [r4, #12]
 800a660:	f006 faae 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 800a664:	2103      	movs	r1, #3
 800a666:	a801      	add	r0, sp, #4
 800a668:	f006 fab8 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800a66c:	4b08      	ldr	r3, [pc, #32]	; (800a690 <RemoteConfig::HandleReboot()+0xa0>)
 800a66e:	6818      	ldr	r0, [r3, #0]
 800a670:	f004 ff4e 	bl	800f510 <Hardware::Reboot()>
 800a674:	b003      	add	sp, #12
 800a676:	bd30      	pop	{r4, r5, pc}
 800a678:	20009acc 	andcs	r9, r0, ip, asr #21
 800a67c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800a680:	20001b94 	mulcs	r0, r4, fp
 800a684:	20009494 	mulcs	r0, r4, r4
 800a688:	08012124 	stmdaeq	r1, {r2, r5, r8, sp}
 800a68c:	08012133 	stmdaeq	r1, {r0, r1, r4, r5, r8, sp}
 800a690:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800a694 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a694:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a698:	2000      	movs	r0, #0
 800a69a:	4d12      	ldr	r5, [pc, #72]	; (800a6e4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a69c:	f10d 0c04 	add.w	ip, sp, #4
 800a6a0:	6814      	ldr	r4, [r2, #0]
 800a6a2:	7d2b      	ldrb	r3, [r5, #20]
 800a6a4:	692e      	ldr	r6, [r5, #16]
 800a6a6:	42a3      	cmp	r3, r4
 800a6a8:	bf34      	ite	cc
 800a6aa:	4664      	movcc	r4, ip
 800a6ac:	4614      	movcs	r4, r2
 800a6ae:	9301      	str	r3, [sp, #4]
 800a6b0:	6827      	ldr	r7, [r4, #0]
 800a6b2:	460c      	mov	r4, r1
 800a6b4:	3e01      	subs	r6, #1
 800a6b6:	440f      	add	r7, r1
 800a6b8:	42bc      	cmp	r4, r7
 800a6ba:	d011      	beq.n	800a6e0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a6bc:	f894 8000 	ldrb.w	r8, [r4]
 800a6c0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a6c4:	45f0      	cmp	r8, lr
 800a6c6:	d009      	beq.n	800a6dc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800a6c8:	3001      	adds	r0, #1
 800a6ca:	2805      	cmp	r0, #5
 800a6cc:	f105 051c 	add.w	r5, r5, #28
 800a6d0:	d1e6      	bne.n	800a6a0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a6d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a6d6:	b002      	add	sp, #8
 800a6d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6dc:	3401      	adds	r4, #1
 800a6de:	e7eb      	b.n	800a6b8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a6e0:	6013      	str	r3, [r2, #0]
 800a6e2:	e7f8      	b.n	800a6d6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800a6e4:	0801217c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sp}

0800a6e8 <strcmp>:
 800a6e8:	1e43      	subs	r3, r0, #1
 800a6ea:	3901      	subs	r1, #1
 800a6ec:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a6f0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a6f4:	4290      	cmp	r0, r2
 800a6f6:	d102      	bne.n	800a6fe <strcmp+0x16>
 800a6f8:	2800      	cmp	r0, #0
 800a6fa:	d1f7      	bne.n	800a6ec <strcmp+0x4>
 800a6fc:	4770      	bx	lr
 800a6fe:	1a80      	subs	r0, r0, r2
 800a700:	4770      	bx	lr

0800a702 <strcasecmp>:
 800a702:	b530      	push	{r4, r5, lr}
 800a704:	1e42      	subs	r2, r0, #1
 800a706:	3901      	subs	r1, #1
 800a708:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a70c:	4604      	mov	r4, r0
 800a70e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a712:	2b19      	cmp	r3, #25
 800a714:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a718:	bf98      	it	ls
 800a71a:	f100 0420 	addls.w	r4, r0, #32
 800a71e:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a722:	2d19      	cmp	r5, #25
 800a724:	bf98      	it	ls
 800a726:	3320      	addls	r3, #32
 800a728:	42a3      	cmp	r3, r4
 800a72a:	d102      	bne.n	800a732 <strcasecmp+0x30>
 800a72c:	2800      	cmp	r0, #0
 800a72e:	d1eb      	bne.n	800a708 <strcasecmp+0x6>
 800a730:	bd30      	pop	{r4, r5, pc}
 800a732:	1ae0      	subs	r0, r4, r3
 800a734:	e7fc      	b.n	800a730 <strcasecmp+0x2e>
	...

0800a738 <PropertiesConfig::EnableJSON(bool)>:
 800a738:	4a04      	ldr	r2, [pc, #16]	; (800a74c <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a73a:	7813      	ldrb	r3, [r2, #0]
 800a73c:	b118      	cbz	r0, 800a746 <PropertiesConfig::EnableJSON(bool)+0xe>
 800a73e:	f043 0301 	orr.w	r3, r3, #1
 800a742:	7013      	strb	r3, [r2, #0]
 800a744:	4770      	bx	lr
 800a746:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a74a:	e7fa      	b.n	800a742 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a74c:	20009ac8 	andcs	r9, r0, r8, asr #21

0800a750 <HttpDaemon::HttpDaemon()>:
 800a750:	4a0a      	ldr	r2, [pc, #40]	; (800a77c <HttpDaemon::HttpDaemon()+0x2c>)
 800a752:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a756:	6002      	str	r2, [r0, #0]
 800a758:	2200      	movs	r2, #0
 800a75a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a75e:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a762:	2102      	movs	r1, #2
 800a764:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a768:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a76c:	60c2      	str	r2, [r0, #12]
 800a76e:	8402      	strh	r2, [r0, #32]
 800a770:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800a774:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800a778:	4770      	bx	lr
 800a77a:	bf00      	nop
 800a77c:	08012464 	stmdaeq	r1, {r2, r5, r6, sl, sp}

0800a780 <HttpDaemon::Start()>:
 800a780:	4b04      	ldr	r3, [pc, #16]	; (800a794 <HttpDaemon::Start()+0x14>)
 800a782:	b510      	push	{r4, lr}
 800a784:	2150      	movs	r1, #80	; 0x50
 800a786:	4604      	mov	r4, r0
 800a788:	6818      	ldr	r0, [r3, #0]
 800a78a:	f002 fcd1 	bl	800d130 <Network::TcpBegin(unsigned short)>
 800a78e:	6120      	str	r0, [r4, #16]
 800a790:	bd10      	pop	{r4, pc}
 800a792:	bf00      	nop
 800a794:	20009494 	mulcs	r0, r4, r4

0800a798 <HttpDaemon::ParseMethod(char*)>:
 800a798:	b538      	push	{r3, r4, r5, lr}
 800a79a:	4604      	mov	r4, r0
 800a79c:	4608      	mov	r0, r1
 800a79e:	491b      	ldr	r1, [pc, #108]	; (800a80c <HttpDaemon::ParseMethod(char*)+0x74>)
 800a7a0:	f005 fa48 	bl	800fc34 <strtok>
 800a7a4:	4605      	mov	r5, r0
 800a7a6:	b370      	cbz	r0, 800a806 <HttpDaemon::ParseMethod(char*)+0x6e>
 800a7a8:	4919      	ldr	r1, [pc, #100]	; (800a810 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a7aa:	f7ff ff9d 	bl	800a6e8 <strcmp>
 800a7ae:	b940      	cbnz	r0, 800a7c2 <HttpDaemon::ParseMethod(char*)+0x2a>
 800a7b0:	61e0      	str	r0, [r4, #28]
 800a7b2:	2000      	movs	r0, #0
 800a7b4:	4915      	ldr	r1, [pc, #84]	; (800a80c <HttpDaemon::ParseMethod(char*)+0x74>)
 800a7b6:	f005 fa3d 	bl	800fc34 <strtok>
 800a7ba:	b950      	cbnz	r0, 800a7d2 <HttpDaemon::ParseMethod(char*)+0x3a>
 800a7bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a7c0:	bd38      	pop	{r3, r4, r5, pc}
 800a7c2:	4628      	mov	r0, r5
 800a7c4:	4913      	ldr	r1, [pc, #76]	; (800a814 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a7c6:	f7ff ff8f 	bl	800a6e8 <strcmp>
 800a7ca:	b9e0      	cbnz	r0, 800a806 <HttpDaemon::ParseMethod(char*)+0x6e>
 800a7cc:	2301      	movs	r3, #1
 800a7ce:	61e3      	str	r3, [r4, #28]
 800a7d0:	e7ef      	b.n	800a7b2 <HttpDaemon::ParseMethod(char*)+0x1a>
 800a7d2:	6060      	str	r0, [r4, #4]
 800a7d4:	4910      	ldr	r1, [pc, #64]	; (800a818 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a7d6:	2000      	movs	r0, #0
 800a7d8:	f005 fa2c 	bl	800fc34 <strtok>
 800a7dc:	2800      	cmp	r0, #0
 800a7de:	d0ed      	beq.n	800a7bc <HttpDaemon::ParseMethod(char*)+0x24>
 800a7e0:	490e      	ldr	r1, [pc, #56]	; (800a81c <HttpDaemon::ParseMethod(char*)+0x84>)
 800a7e2:	f7ff ff81 	bl	800a6e8 <strcmp>
 800a7e6:	2800      	cmp	r0, #0
 800a7e8:	d1e8      	bne.n	800a7bc <HttpDaemon::ParseMethod(char*)+0x24>
 800a7ea:	490d      	ldr	r1, [pc, #52]	; (800a820 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a7ec:	f005 fa22 	bl	800fc34 <strtok>
 800a7f0:	2800      	cmp	r0, #0
 800a7f2:	d0e3      	beq.n	800a7bc <HttpDaemon::ParseMethod(char*)+0x24>
 800a7f4:	490b      	ldr	r1, [pc, #44]	; (800a824 <HttpDaemon::ParseMethod(char*)+0x8c>)
 800a7f6:	f7ff ff77 	bl	800a6e8 <strcmp>
 800a7fa:	2800      	cmp	r0, #0
 800a7fc:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a800:	bf08      	it	eq
 800a802:	20c8      	moveq	r0, #200	; 0xc8
 800a804:	e7dc      	b.n	800a7c0 <HttpDaemon::ParseMethod(char*)+0x28>
 800a806:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a80a:	e7d9      	b.n	800a7c0 <HttpDaemon::ParseMethod(char*)+0x28>
 800a80c:	08012208 	stmdaeq	r1, {r3, r9, sp}
 800a810:	0801220a 	stmdaeq	r1, {r1, r3, r9, sp}
 800a814:	0801220e 	stmdaeq	r1, {r1, r2, r3, r9, sp}
 800a818:	08012278 	stmdaeq	r1, {r3, r4, r5, r6, r9, sp}
 800a81c:	08012213 	stmdaeq	r1, {r0, r1, r4, r9, sp}
 800a820:	08012218 	stmdaeq	r1, {r3, r4, r9, sp}
 800a824:	0801221b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sp}

0800a828 <HttpDaemon::ParseHeaderField(char*)>:
 800a828:	b538      	push	{r3, r4, r5, lr}
 800a82a:	4605      	mov	r5, r0
 800a82c:	4608      	mov	r0, r1
 800a82e:	491d      	ldr	r1, [pc, #116]	; (800a8a4 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a830:	f005 fa00 	bl	800fc34 <strtok>
 800a834:	4604      	mov	r4, r0
 800a836:	b910      	cbnz	r0, 800a83e <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a838:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a83c:	bd38      	pop	{r3, r4, r5, pc}
 800a83e:	491a      	ldr	r1, [pc, #104]	; (800a8a8 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a840:	f7ff ff5f 	bl	800a702 <strcasecmp>
 800a844:	b970      	cbnz	r0, 800a864 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a846:	4919      	ldr	r1, [pc, #100]	; (800a8ac <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a848:	f005 f9f4 	bl	800fc34 <strtok>
 800a84c:	2800      	cmp	r0, #0
 800a84e:	d0f3      	beq.n	800a838 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a850:	4917      	ldr	r1, [pc, #92]	; (800a8b0 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a852:	f7ff ff49 	bl	800a6e8 <strcmp>
 800a856:	b108      	cbz	r0, 800a85c <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a858:	20c8      	movs	r0, #200	; 0xc8
 800a85a:	e7ef      	b.n	800a83c <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a85c:	2301      	movs	r3, #1
 800a85e:	f885 3020 	strb.w	r3, [r5, #32]
 800a862:	e7f9      	b.n	800a858 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a864:	4620      	mov	r0, r4
 800a866:	4913      	ldr	r1, [pc, #76]	; (800a8b4 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a868:	f7ff ff4b 	bl	800a702 <strcasecmp>
 800a86c:	4604      	mov	r4, r0
 800a86e:	2800      	cmp	r0, #0
 800a870:	d1f2      	bne.n	800a858 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a872:	4911      	ldr	r1, [pc, #68]	; (800a8b8 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a874:	f005 f9de 	bl	800fc34 <strtok>
 800a878:	2800      	cmp	r0, #0
 800a87a:	d0dd      	beq.n	800a838 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a87c:	1e42      	subs	r2, r0, #1
 800a87e:	4623      	mov	r3, r4
 800a880:	200a      	movs	r0, #10
 800a882:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a886:	b151      	cbz	r1, 800a89e <HttpDaemon::ParseHeaderField(char*)+0x76>
 800a888:	3930      	subs	r1, #48	; 0x30
 800a88a:	2909      	cmp	r1, #9
 800a88c:	d8d4      	bhi.n	800a838 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a88e:	fb00 1303 	mla	r3, r0, r3, r1
 800a892:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a896:	d9f4      	bls.n	800a882 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a898:	f240 109d 	movw	r0, #413	; 0x19d
 800a89c:	e7ce      	b.n	800a83c <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a89e:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800a8a2:	e7d9      	b.n	800a858 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a8a4:	0801221f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sp}
 800a8a8:	08012221 	stmdaeq	r1, {r0, r5, r9, sp}
 800a8ac:	0801222e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sp}
 800a8b0:	08012231 	stmdaeq	r1, {r0, r4, r5, r9, sp}
 800a8b4:	08012242 	stmdaeq	r1, {r1, r6, r9, sp}
 800a8b8:	08012208 	stmdaeq	r1, {r3, r9, sp}

0800a8bc <HttpDaemon::ParseRequest()>:
 800a8bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a8be:	2400      	movs	r4, #0
 800a8c0:	4605      	mov	r5, r0
 800a8c2:	4622      	mov	r2, r4
 800a8c4:	4626      	mov	r6, r4
 800a8c6:	68c1      	ldr	r1, [r0, #12]
 800a8c8:	f880 4020 	strb.w	r4, [r0, #32]
 800a8cc:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800a8d0:	8aab      	ldrh	r3, [r5, #20]
 800a8d2:	42a3      	cmp	r3, r4
 800a8d4:	d923      	bls.n	800a91e <HttpDaemon::ParseRequest()+0x62>
 800a8d6:	68eb      	ldr	r3, [r5, #12]
 800a8d8:	5d18      	ldrb	r0, [r3, r4]
 800a8da:	280a      	cmp	r0, #10
 800a8dc:	d10e      	bne.n	800a8fc <HttpDaemon::ParseRequest()+0x40>
 800a8de:	4423      	add	r3, r4
 800a8e0:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a8e4:	1c57      	adds	r7, r2, #1
 800a8e6:	b962      	cbnz	r2, 800a902 <HttpDaemon::ParseRequest()+0x46>
 800a8e8:	4628      	mov	r0, r5
 800a8ea:	f7ff ff55 	bl	800a798 <HttpDaemon::ParseMethod(char*)>
 800a8ee:	28c8      	cmp	r0, #200	; 0xc8
 800a8f0:	d116      	bne.n	800a920 <HttpDaemon::ParseRequest()+0x64>
 800a8f2:	463a      	mov	r2, r7
 800a8f4:	68e9      	ldr	r1, [r5, #12]
 800a8f6:	3401      	adds	r4, #1
 800a8f8:	b2a4      	uxth	r4, r4
 800a8fa:	4421      	add	r1, r4
 800a8fc:	3401      	adds	r4, #1
 800a8fe:	b2a4      	uxth	r4, r4
 800a900:	e7e6      	b.n	800a8d0 <HttpDaemon::ParseRequest()+0x14>
 800a902:	7808      	ldrb	r0, [r1, #0]
 800a904:	b968      	cbnz	r0, 800a922 <HttpDaemon::ParseRequest()+0x66>
 800a906:	696b      	ldr	r3, [r5, #20]
 800a908:	3b01      	subs	r3, #1
 800a90a:	1b1b      	subs	r3, r3, r4
 800a90c:	b29b      	uxth	r3, r3
 800a90e:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800a912:	b123      	cbz	r3, 800a91e <HttpDaemon::ParseRequest()+0x62>
 800a914:	68ea      	ldr	r2, [r5, #12]
 800a916:	3401      	adds	r4, #1
 800a918:	4414      	add	r4, r2
 800a91a:	60ac      	str	r4, [r5, #8]
 800a91c:	54e0      	strb	r0, [r4, r3]
 800a91e:	20c8      	movs	r0, #200	; 0xc8
 800a920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a922:	4628      	mov	r0, r5
 800a924:	f7ff ff80 	bl	800a828 <HttpDaemon::ParseHeaderField(char*)>
 800a928:	e7e1      	b.n	800a8ee <HttpDaemon::ParseRequest()+0x32>
	...

0800a92c <HttpDaemon::HandleGetTxt()>:
 800a92c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a930:	6847      	ldr	r7, [r0, #4]
 800a932:	4604      	mov	r4, r0
 800a934:	1dbd      	adds	r5, r7, #6
 800a936:	462b      	mov	r3, r5
 800a938:	4618      	mov	r0, r3
 800a93a:	7802      	ldrb	r2, [r0, #0]
 800a93c:	3301      	adds	r3, #1
 800a93e:	2a00      	cmp	r2, #0
 800a940:	d1fa      	bne.n	800a938 <HttpDaemon::HandleGetTxt()+0xc>
 800a942:	1b40      	subs	r0, r0, r5
 800a944:	2804      	cmp	r0, #4
 800a946:	d925      	bls.n	800a994 <HttpDaemon::HandleGetTxt()+0x68>
 800a948:	3804      	subs	r0, #4
 800a94a:	4915      	ldr	r1, [pc, #84]	; (800a9a0 <HttpDaemon::HandleGetTxt()+0x74>)
 800a94c:	4428      	add	r0, r5
 800a94e:	f7ff fecb 	bl	800a6e8 <strcmp>
 800a952:	b9f8      	cbnz	r0, 800a994 <HttpDaemon::HandleGetTxt()+0x68>
 800a954:	4b13      	ldr	r3, [pc, #76]	; (800a9a4 <HttpDaemon::HandleGetTxt()+0x78>)
 800a956:	2001      	movs	r0, #1
 800a958:	f893 8000 	ldrb.w	r8, [r3]
 800a95c:	f7ff feec 	bl	800a738 <PropertiesConfig::EnableJSON(bool)>
 800a960:	4b11      	ldr	r3, [pc, #68]	; (800a9a8 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a962:	f240 529b 	movw	r2, #1435	; 0x59b
 800a966:	4629      	mov	r1, r5
 800a968:	6818      	ldr	r0, [r3, #0]
 800a96a:	f7ff fab1 	bl	8009ed0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a96e:	4606      	mov	r6, r0
 800a970:	f008 0801 	and.w	r8, r8, #1
 800a974:	4640      	mov	r0, r8
 800a976:	f7ff fedf 	bl	800a738 <PropertiesConfig::EnableJSON(bool)>
 800a97a:	b15e      	cbz	r6, 800a994 <HttpDaemon::HandleGetTxt()+0x68>
 800a97c:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800a980:	3606      	adds	r6, #6
 800a982:	3422      	adds	r4, #34	; 0x22
 800a984:	443e      	add	r6, r7
 800a986:	42b5      	cmp	r5, r6
 800a988:	d008      	beq.n	800a99c <HttpDaemon::HandleGetTxt()+0x70>
 800a98a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800a98e:	f804 3b01 	strb.w	r3, [r4], #1
 800a992:	e7f8      	b.n	800a986 <HttpDaemon::HandleGetTxt()+0x5a>
 800a994:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a99c:	20c8      	movs	r0, #200	; 0xc8
 800a99e:	e7fb      	b.n	800a998 <HttpDaemon::HandleGetTxt()+0x6c>
 800a9a0:	08012169 	stmdaeq	r1, {r0, r3, r5, r6, r8, sp}
 800a9a4:	20009ac8 	andcs	r9, r0, r8, asr #21
 800a9a8:	20000b7c 	andcs	r0, r0, ip, ror fp

0800a9ac <HttpDaemon::HandleGet()>:
 800a9ac:	b570      	push	{r4, r5, r6, lr}
 800a9ae:	6845      	ldr	r5, [r0, #4]
 800a9b0:	4604      	mov	r4, r0
 800a9b2:	4943      	ldr	r1, [pc, #268]	; (800aac0 <HttpDaemon::HandleGet()+0x114>)
 800a9b4:	4628      	mov	r0, r5
 800a9b6:	f7ff fe97 	bl	800a6e8 <strcmp>
 800a9ba:	b120      	cbz	r0, 800a9c6 <HttpDaemon::HandleGet()+0x1a>
 800a9bc:	4628      	mov	r0, r5
 800a9be:	4941      	ldr	r1, [pc, #260]	; (800aac4 <HttpDaemon::HandleGet()+0x118>)
 800a9c0:	f7ff fe92 	bl	800a6e8 <strcmp>
 800a9c4:	b960      	cbnz	r0, 800a9e0 <HttpDaemon::HandleGet()+0x34>
 800a9c6:	4621      	mov	r1, r4
 800a9c8:	4b3f      	ldr	r3, [pc, #252]	; (800aac8 <HttpDaemon::HandleGet()+0x11c>)
 800a9ca:	4840      	ldr	r0, [pc, #256]	; (800aacc <HttpDaemon::HandleGet()+0x120>)
 800a9cc:	f841 3b22 	str.w	r3, [r1], #34
 800a9d0:	f000 fa7a 	bl	800aec8 <get_file_content(char const*, char*)>
 800a9d4:	2800      	cmp	r0, #0
 800a9d6:	dd1e      	ble.n	800aa16 <HttpDaemon::HandleGet()+0x6a>
 800a9d8:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a9dc:	20c8      	movs	r0, #200	; 0xc8
 800a9de:	bd70      	pop	{r4, r5, r6, pc}
 800a9e0:	4628      	mov	r0, r5
 800a9e2:	493b      	ldr	r1, [pc, #236]	; (800aad0 <HttpDaemon::HandleGet()+0x124>)
 800a9e4:	f7ff fe80 	bl	800a6e8 <strcmp>
 800a9e8:	b928      	cbnz	r0, 800a9f6 <HttpDaemon::HandleGet()+0x4a>
 800a9ea:	4621      	mov	r1, r4
 800a9ec:	4b39      	ldr	r3, [pc, #228]	; (800aad4 <HttpDaemon::HandleGet()+0x128>)
 800a9ee:	483a      	ldr	r0, [pc, #232]	; (800aad8 <HttpDaemon::HandleGet()+0x12c>)
 800a9f0:	f841 3b22 	str.w	r3, [r1], #34
 800a9f4:	e7ec      	b.n	800a9d0 <HttpDaemon::HandleGet()+0x24>
 800a9f6:	4628      	mov	r0, r5
 800a9f8:	4938      	ldr	r1, [pc, #224]	; (800aadc <HttpDaemon::HandleGet()+0x130>)
 800a9fa:	f7ff fe75 	bl	800a6e8 <strcmp>
 800a9fe:	b168      	cbz	r0, 800aa1c <HttpDaemon::HandleGet()+0x70>
 800aa00:	4a37      	ldr	r2, [pc, #220]	; (800aae0 <HttpDaemon::HandleGet()+0x134>)
 800aa02:	1e6b      	subs	r3, r5, #1
 800aa04:	1d6e      	adds	r6, r5, #5
 800aa06:	42b3      	cmp	r3, r6
 800aa08:	d00e      	beq.n	800aa28 <HttpDaemon::HandleGet()+0x7c>
 800aa0a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aa0e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800aa12:	4288      	cmp	r0, r1
 800aa14:	d0f7      	beq.n	800aa06 <HttpDaemon::HandleGet()+0x5a>
 800aa16:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800aa1a:	e7e0      	b.n	800a9de <HttpDaemon::HandleGet()+0x32>
 800aa1c:	4621      	mov	r1, r4
 800aa1e:	4b31      	ldr	r3, [pc, #196]	; (800aae4 <HttpDaemon::HandleGet()+0x138>)
 800aa20:	4831      	ldr	r0, [pc, #196]	; (800aae8 <HttpDaemon::HandleGet()+0x13c>)
 800aa22:	f841 3b22 	str.w	r3, [r1], #34
 800aa26:	e7d3      	b.n	800a9d0 <HttpDaemon::HandleGet()+0x24>
 800aa28:	4b30      	ldr	r3, [pc, #192]	; (800aaec <HttpDaemon::HandleGet()+0x140>)
 800aa2a:	3506      	adds	r5, #6
 800aa2c:	4628      	mov	r0, r5
 800aa2e:	4930      	ldr	r1, [pc, #192]	; (800aaf0 <HttpDaemon::HandleGet()+0x144>)
 800aa30:	6023      	str	r3, [r4, #0]
 800aa32:	f7ff fe59 	bl	800a6e8 <strcmp>
 800aa36:	b930      	cbnz	r0, 800aa46 <HttpDaemon::HandleGet()+0x9a>
 800aa38:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa3c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa40:	f000 f9ca 	bl	800add8 <remoteconfig::json_get_list(char*, unsigned short)>
 800aa44:	e7c6      	b.n	800a9d4 <HttpDaemon::HandleGet()+0x28>
 800aa46:	4628      	mov	r0, r5
 800aa48:	492a      	ldr	r1, [pc, #168]	; (800aaf4 <HttpDaemon::HandleGet()+0x148>)
 800aa4a:	f7ff fe4d 	bl	800a6e8 <strcmp>
 800aa4e:	b930      	cbnz	r0, 800aa5e <HttpDaemon::HandleGet()+0xb2>
 800aa50:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa54:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa58:	f000 f9f2 	bl	800ae40 <remoteconfig::json_get_version(char*, unsigned short)>
 800aa5c:	e7ba      	b.n	800a9d4 <HttpDaemon::HandleGet()+0x28>
 800aa5e:	4628      	mov	r0, r5
 800aa60:	4925      	ldr	r1, [pc, #148]	; (800aaf8 <HttpDaemon::HandleGet()+0x14c>)
 800aa62:	f7ff fe41 	bl	800a6e8 <strcmp>
 800aa66:	b950      	cbnz	r0, 800aa7e <HttpDaemon::HandleGet()+0xd2>
 800aa68:	4b24      	ldr	r3, [pc, #144]	; (800aafc <HttpDaemon::HandleGet()+0x150>)
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	7bdb      	ldrb	r3, [r3, #15]
 800aa6e:	b31b      	cbz	r3, 800aab8 <HttpDaemon::HandleGet()+0x10c>
 800aa70:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa74:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa78:	f000 f9fe 	bl	800ae78 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800aa7c:	e7aa      	b.n	800a9d4 <HttpDaemon::HandleGet()+0x28>
 800aa7e:	4628      	mov	r0, r5
 800aa80:	491f      	ldr	r1, [pc, #124]	; (800ab00 <HttpDaemon::HandleGet()+0x154>)
 800aa82:	f7ff fe31 	bl	800a6e8 <strcmp>
 800aa86:	b930      	cbnz	r0, 800aa96 <HttpDaemon::HandleGet()+0xea>
 800aa88:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa8c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa90:	f000 fa02 	bl	800ae98 <remoteconfig::json_get_display(char*, unsigned short)>
 800aa94:	e79e      	b.n	800a9d4 <HttpDaemon::HandleGet()+0x28>
 800aa96:	4628      	mov	r0, r5
 800aa98:	491a      	ldr	r1, [pc, #104]	; (800ab04 <HttpDaemon::HandleGet()+0x158>)
 800aa9a:	f7ff fe25 	bl	800a6e8 <strcmp>
 800aa9e:	b930      	cbnz	r0, 800aaae <HttpDaemon::HandleGet()+0x102>
 800aaa0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aaa4:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aaa8:	f000 fa06 	bl	800aeb8 <remoteconfig::json_get_directory(char*, unsigned short)>
 800aaac:	e792      	b.n	800a9d4 <HttpDaemon::HandleGet()+0x28>
 800aaae:	4620      	mov	r0, r4
 800aab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aab4:	f7ff bf3a 	b.w	800a92c <HttpDaemon::HandleGetTxt()>
 800aab8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800aabc:	e78f      	b.n	800a9de <HttpDaemon::HandleGet()+0x32>
 800aabe:	bf00      	nop
 800aac0:	08012278 	stmdaeq	r1, {r3, r4, r5, r6, r9, sp}
 800aac4:	08012251 	stmdaeq	r1, {r0, r4, r6, r9, sp}
 800aac8:	08012464 	stmdaeq	r1, {r2, r5, r6, sl, sp}
 800aacc:	08012252 	stmdaeq	r1, {r1, r4, r6, r9, sp}
 800aad0:	0801225d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, sp}
 800aad4:	08012484 	stmdaeq	r1, {r2, r7, sl, sp}
 800aad8:	0801225e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sp}
 800aadc:	08012269 	stmdaeq	r1, {r0, r3, r5, r6, r9, sp}
 800aae0:	08012273 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sp}
 800aae4:	080124a4 	stmdaeq	r1, {r2, r5, r7, sl, sp}
 800aae8:	0801226a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sp}
 800aaec:	080124c4 	stmdaeq	r1, {r2, r6, r7, sl, sp}
 800aaf0:	0801227a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, sp}
 800aaf4:	0801227f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sp}
 800aaf8:	08012287 	stmdaeq	r1, {r0, r1, r2, r7, r9, sp}
 800aafc:	20000b7c 	andcs	r0, r0, ip, ror fp
 800ab00:	0801228e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sp}
 800ab04:	08012296 	stmdaeq	r1, {r1, r2, r4, r7, r9, sp}

0800ab08 <HttpDaemon::HandlePost(bool)>:
 800ab08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ab0a:	4604      	mov	r4, r0
 800ab0c:	2900      	cmp	r1, #0
 800ab0e:	f040 8090 	bne.w	800ac32 <HttpDaemon::HandlePost(bool)+0x12a>
 800ab12:	f890 3020 	ldrb.w	r3, [r0, #32]
 800ab16:	2b00      	cmp	r3, #0
 800ab18:	d05d      	beq.n	800abd6 <HttpDaemon::HandlePost(bool)+0xce>
 800ab1a:	6845      	ldr	r5, [r0, #4]
 800ab1c:	4948      	ldr	r1, [pc, #288]	; (800ac40 <HttpDaemon::HandlePost(bool)+0x138>)
 800ab1e:	4628      	mov	r0, r5
 800ab20:	f7ff fde2 	bl	800a6e8 <strcmp>
 800ab24:	2800      	cmp	r0, #0
 800ab26:	bf0c      	ite	eq
 800ab28:	2301      	moveq	r3, #1
 800ab2a:	2300      	movne	r3, #0
 800ab2c:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800ab30:	d055      	beq.n	800abde <HttpDaemon::HandlePost(bool)+0xd6>
 800ab32:	4628      	mov	r0, r5
 800ab34:	4943      	ldr	r1, [pc, #268]	; (800ac44 <HttpDaemon::HandlePost(bool)+0x13c>)
 800ab36:	f7ff fdd7 	bl	800a6e8 <strcmp>
 800ab3a:	2800      	cmp	r0, #0
 800ab3c:	d04f      	beq.n	800abde <HttpDaemon::HandlePost(bool)+0xd6>
 800ab3e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800ab42:	e04a      	b.n	800abda <HttpDaemon::HandlePost(bool)+0xd2>
 800ab44:	4940      	ldr	r1, [pc, #256]	; (800ac48 <HttpDaemon::HandlePost(bool)+0x140>)
 800ab46:	68a0      	ldr	r0, [r4, #8]
 800ab48:	f10d 0207 	add.w	r2, sp, #7
 800ab4c:	f004 f89f 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab50:	b9e8      	cbnz	r0, 800ab8e <HttpDaemon::HandlePost(bool)+0x86>
 800ab52:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800ab56:	4b3d      	ldr	r3, [pc, #244]	; (800ac4c <HttpDaemon::HandlePost(bool)+0x144>)
 800ab58:	fab6 f186 	clz	r1, r6
 800ab5c:	681d      	ldr	r5, [r3, #0]
 800ab5e:	0949      	lsrs	r1, r1, #5
 800ab60:	69a8      	ldr	r0, [r5, #24]
 800ab62:	b138      	cbz	r0, 800ab74 <HttpDaemon::HandlePost(bool)+0x6c>
 800ab64:	6803      	ldr	r3, [r0, #0]
 800ab66:	7429      	strb	r1, [r5, #16]
 800ab68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab6a:	4798      	blx	r3
 800ab6c:	b116      	cbz	r6, 800ab74 <HttpDaemon::HandlePost(bool)+0x6c>
 800ab6e:	4b38      	ldr	r3, [pc, #224]	; (800ac50 <HttpDaemon::HandlePost(bool)+0x148>)
 800ab70:	681b      	ldr	r3, [r3, #0]
 800ab72:	606b      	str	r3, [r5, #4]
 800ab74:	4620      	mov	r0, r4
 800ab76:	4b37      	ldr	r3, [pc, #220]	; (800ac54 <HttpDaemon::HandlePost(bool)+0x14c>)
 800ab78:	f240 519f 	movw	r1, #1439	; 0x59f
 800ab7c:	4a36      	ldr	r2, [pc, #216]	; (800ac58 <HttpDaemon::HandlePost(bool)+0x150>)
 800ab7e:	f840 3b22 	str.w	r3, [r0], #34
 800ab82:	f005 f827 	bl	800fbd4 <snprintf>
 800ab86:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800ab8a:	20c8      	movs	r0, #200	; 0xc8
 800ab8c:	e025      	b.n	800abda <HttpDaemon::HandlePost(bool)+0xd2>
 800ab8e:	4933      	ldr	r1, [pc, #204]	; (800ac5c <HttpDaemon::HandlePost(bool)+0x154>)
 800ab90:	68a0      	ldr	r0, [r4, #8]
 800ab92:	f10d 0207 	add.w	r2, sp, #7
 800ab96:	f004 f87a 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab9a:	b9e0      	cbnz	r0, 800abd6 <HttpDaemon::HandlePost(bool)+0xce>
 800ab9c:	4b30      	ldr	r3, [pc, #192]	; (800ac60 <HttpDaemon::HandlePost(bool)+0x158>)
 800ab9e:	6818      	ldr	r0, [r3, #0]
 800aba0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800aba4:	b11b      	cbz	r3, 800abae <HttpDaemon::HandlePost(bool)+0xa6>
 800aba6:	2104      	movs	r1, #4
 800aba8:	f004 fc12 	bl	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 800abac:	e7e2      	b.n	800ab74 <HttpDaemon::HandlePost(bool)+0x6c>
 800abae:	2102      	movs	r1, #2
 800abb0:	e7fa      	b.n	800aba8 <HttpDaemon::HandlePost(bool)+0xa0>
 800abb2:	4b2c      	ldr	r3, [pc, #176]	; (800ac64 <HttpDaemon::HandlePost(bool)+0x15c>)
 800abb4:	2001      	movs	r0, #1
 800abb6:	781d      	ldrb	r5, [r3, #0]
 800abb8:	f7ff fdbe 	bl	800a738 <PropertiesConfig::EnableJSON(bool)>
 800abbc:	4b2a      	ldr	r3, [pc, #168]	; (800ac68 <HttpDaemon::HandlePost(bool)+0x160>)
 800abbe:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800abc2:	6818      	ldr	r0, [r3, #0]
 800abc4:	68a1      	ldr	r1, [r4, #8]
 800abc6:	f005 0501 	and.w	r5, r5, #1
 800abca:	f7ff fa4d 	bl	800a068 <RemoteConfig::HandleSet(void*, unsigned int)>
 800abce:	4628      	mov	r0, r5
 800abd0:	f7ff fdb2 	bl	800a738 <PropertiesConfig::EnableJSON(bool)>
 800abd4:	e7ce      	b.n	800ab74 <HttpDaemon::HandlePost(bool)+0x6c>
 800abd6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800abda:	b002      	add	sp, #8
 800abdc:	bd70      	pop	{r4, r5, r6, pc}
 800abde:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800abe2:	6962      	ldr	r2, [r4, #20]
 800abe4:	429a      	cmp	r2, r3
 800abe6:	dbd0      	blt.n	800ab8a <HttpDaemon::HandlePost(bool)+0x82>
 800abe8:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800abec:	2b00      	cmp	r3, #0
 800abee:	d0cc      	beq.n	800ab8a <HttpDaemon::HandlePost(bool)+0x82>
 800abf0:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800abf4:	2b00      	cmp	r3, #0
 800abf6:	d0dc      	beq.n	800abb2 <HttpDaemon::HandlePost(bool)+0xaa>
 800abf8:	2201      	movs	r2, #1
 800abfa:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800abfe:	68a0      	ldr	r0, [r4, #8]
 800ac00:	f003 fe48 	bl	800e894 <properties::convert_json_file(char*, unsigned short, bool)>
 800ac04:	2800      	cmp	r0, #0
 800ac06:	dde6      	ble.n	800abd6 <HttpDaemon::HandlePost(bool)+0xce>
 800ac08:	4918      	ldr	r1, [pc, #96]	; (800ac6c <HttpDaemon::HandlePost(bool)+0x164>)
 800ac0a:	68a0      	ldr	r0, [r4, #8]
 800ac0c:	f10d 0207 	add.w	r2, sp, #7
 800ac10:	f004 f83d 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ac14:	2800      	cmp	r0, #0
 800ac16:	d195      	bne.n	800ab44 <HttpDaemon::HandlePost(bool)+0x3c>
 800ac18:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ac1c:	2b00      	cmp	r3, #0
 800ac1e:	d0a9      	beq.n	800ab74 <HttpDaemon::HandlePost(bool)+0x6c>
 800ac20:	4b11      	ldr	r3, [pc, #68]	; (800ac68 <HttpDaemon::HandlePost(bool)+0x160>)
 800ac22:	681b      	ldr	r3, [r3, #0]
 800ac24:	7b9b      	ldrb	r3, [r3, #14]
 800ac26:	2b00      	cmp	r3, #0
 800ac28:	d0d5      	beq.n	800abd6 <HttpDaemon::HandlePost(bool)+0xce>
 800ac2a:	4b11      	ldr	r3, [pc, #68]	; (800ac70 <HttpDaemon::HandlePost(bool)+0x168>)
 800ac2c:	6818      	ldr	r0, [r3, #0]
 800ac2e:	f004 fc6f 	bl	800f510 <Hardware::Reboot()>
 800ac32:	68c3      	ldr	r3, [r0, #12]
 800ac34:	6083      	str	r3, [r0, #8]
 800ac36:	6943      	ldr	r3, [r0, #20]
 800ac38:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800ac3c:	e7d8      	b.n	800abf0 <HttpDaemon::HandlePost(bool)+0xe8>
 800ac3e:	bf00      	nop
 800ac40:	080122a0 	stmdaeq	r1, {r5, r7, r9, sp}
 800ac44:	0801223c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sp}
 800ac48:	0801228e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sp}
 800ac4c:	20009acc 	andcs	r9, r0, ip, asr #21
 800ac50:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ac54:	08012464 	stmdaeq	r1, {r2, r5, r6, sl, sp}
 800ac58:	080122bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, sp}
 800ac5c:	080122b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sp}
 800ac60:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800ac64:	20009ac8 	andcs	r9, r0, r8, asr #21
 800ac68:	20000b7c 	andcs	r0, r0, ip, ror fp
 800ac6c:	080122ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sp}
 800ac70:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800ac74 <HttpDaemon::Run()>:
 800ac74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac76:	4e4a      	ldr	r6, [pc, #296]	; (800ada0 <HttpDaemon::Run()+0x12c>)
 800ac78:	4604      	mov	r4, r0
 800ac7a:	6901      	ldr	r1, [r0, #16]
 800ac7c:	f100 020c 	add.w	r2, r0, #12
 800ac80:	b085      	sub	sp, #20
 800ac82:	6830      	ldr	r0, [r6, #0]
 800ac84:	f002 fa57 	bl	800d136 <Network::TcpRead(int, unsigned char const**)>
 800ac88:	6160      	str	r0, [r4, #20]
 800ac8a:	2800      	cmp	r0, #0
 800ac8c:	d061      	beq.n	800ad52 <HttpDaemon::Run()+0xde>
 800ac8e:	69a3      	ldr	r3, [r4, #24]
 800ac90:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ac94:	d15f      	bne.n	800ad56 <HttpDaemon::Run()+0xe2>
 800ac96:	4620      	mov	r0, r4
 800ac98:	f7ff fe10 	bl	800a8bc <HttpDaemon::ParseRequest()>
 800ac9c:	28c8      	cmp	r0, #200	; 0xc8
 800ac9e:	61a0      	str	r0, [r4, #24]
 800aca0:	d106      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800aca2:	69e3      	ldr	r3, [r4, #28]
 800aca4:	2b00      	cmp	r3, #0
 800aca6:	d147      	bne.n	800ad38 <HttpDaemon::Run()+0xc4>
 800aca8:	4620      	mov	r0, r4
 800acaa:	f7ff fe7f 	bl	800a9ac <HttpDaemon::HandleGet()>
 800acae:	61a0      	str	r0, [r4, #24]
 800acb0:	69a3      	ldr	r3, [r4, #24]
 800acb2:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800acb6:	2bc8      	cmp	r3, #200	; 0xc8
 800acb8:	d06f      	beq.n	800ad9a <HttpDaemon::Run()+0x126>
 800acba:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800acbe:	d062      	beq.n	800ad86 <HttpDaemon::Run()+0x112>
 800acc0:	dc52      	bgt.n	800ad68 <HttpDaemon::Run()+0xf4>
 800acc2:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800acc6:	d060      	beq.n	800ad8a <HttpDaemon::Run()+0x116>
 800acc8:	f240 129d 	movw	r2, #413	; 0x19d
 800accc:	4293      	cmp	r3, r2
 800acce:	d05e      	beq.n	800ad8e <HttpDaemon::Run()+0x11a>
 800acd0:	4d34      	ldr	r5, [pc, #208]	; (800ada4 <HttpDaemon::Run()+0x130>)
 800acd2:	4a35      	ldr	r2, [pc, #212]	; (800ada8 <HttpDaemon::Run()+0x134>)
 800acd4:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800acd8:	bf18      	it	ne
 800acda:	4615      	movne	r5, r2
 800acdc:	4a33      	ldr	r2, [pc, #204]	; (800adac <HttpDaemon::Run()+0x138>)
 800acde:	f240 519f 	movw	r1, #1439	; 0x59f
 800ace2:	6022      	str	r2, [r4, #0]
 800ace4:	4638      	mov	r0, r7
 800ace6:	e9cd 5500 	strd	r5, r5, [sp]
 800acea:	4a31      	ldr	r2, [pc, #196]	; (800adb0 <HttpDaemon::Run()+0x13c>)
 800acec:	f004 ff72 	bl	800fbd4 <snprintf>
 800acf0:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800acf4:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800acf8:	f240 519f 	movw	r1, #1439	; 0x59f
 800acfc:	9303      	str	r3, [sp, #12]
 800acfe:	6823      	ldr	r3, [r4, #0]
 800ad00:	4a2c      	ldr	r2, [pc, #176]	; (800adb4 <HttpDaemon::Run()+0x140>)
 800ad02:	9302      	str	r3, [sp, #8]
 800ad04:	4b2c      	ldr	r3, [pc, #176]	; (800adb8 <HttpDaemon::Run()+0x144>)
 800ad06:	68e0      	ldr	r0, [r4, #12]
 800ad08:	e9cd 5300 	strd	r5, r3, [sp]
 800ad0c:	69a3      	ldr	r3, [r4, #24]
 800ad0e:	f004 ff61 	bl	800fbd4 <snprintf>
 800ad12:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800ad16:	b283      	uxth	r3, r0
 800ad18:	6830      	ldr	r0, [r6, #0]
 800ad1a:	f002 fa10 	bl	800d13e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800ad1e:	463a      	mov	r2, r7
 800ad20:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800ad24:	6921      	ldr	r1, [r4, #16]
 800ad26:	6830      	ldr	r0, [r6, #0]
 800ad28:	f002 fa09 	bl	800d13e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800ad2c:	f44f 7202 	mov.w	r2, #520	; 0x208
 800ad30:	2302      	movs	r3, #2
 800ad32:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800ad36:	e00c      	b.n	800ad52 <HttpDaemon::Run()+0xde>
 800ad38:	2b01      	cmp	r3, #1
 800ad3a:	d1b9      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800ad3c:	2100      	movs	r1, #0
 800ad3e:	4620      	mov	r0, r4
 800ad40:	f7ff fee2 	bl	800ab08 <HttpDaemon::HandlePost(bool)>
 800ad44:	28c8      	cmp	r0, #200	; 0xc8
 800ad46:	61a0      	str	r0, [r4, #24]
 800ad48:	d1b2      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800ad4a:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800ad4e:	2b00      	cmp	r3, #0
 800ad50:	d1ae      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800ad52:	b005      	add	sp, #20
 800ad54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad56:	2bc8      	cmp	r3, #200	; 0xc8
 800ad58:	d1aa      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800ad5a:	69e1      	ldr	r1, [r4, #28]
 800ad5c:	2901      	cmp	r1, #1
 800ad5e:	d1a7      	bne.n	800acb0 <HttpDaemon::Run()+0x3c>
 800ad60:	4620      	mov	r0, r4
 800ad62:	f7ff fed1 	bl	800ab08 <HttpDaemon::HandlePost(bool)>
 800ad66:	e7a2      	b.n	800acae <HttpDaemon::Run()+0x3a>
 800ad68:	f240 12f5 	movw	r2, #501	; 0x1f5
 800ad6c:	4293      	cmp	r3, r2
 800ad6e:	d010      	beq.n	800ad92 <HttpDaemon::Run()+0x11e>
 800ad70:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ad74:	4293      	cmp	r3, r2
 800ad76:	d00e      	beq.n	800ad96 <HttpDaemon::Run()+0x122>
 800ad78:	4d10      	ldr	r5, [pc, #64]	; (800adbc <HttpDaemon::Run()+0x148>)
 800ad7a:	4a0b      	ldr	r2, [pc, #44]	; (800ada8 <HttpDaemon::Run()+0x134>)
 800ad7c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ad80:	bf18      	it	ne
 800ad82:	4615      	movne	r5, r2
 800ad84:	e7aa      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad86:	4d0e      	ldr	r5, [pc, #56]	; (800adc0 <HttpDaemon::Run()+0x14c>)
 800ad88:	e7a8      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad8a:	4d0e      	ldr	r5, [pc, #56]	; (800adc4 <HttpDaemon::Run()+0x150>)
 800ad8c:	e7a6      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad8e:	4d0e      	ldr	r5, [pc, #56]	; (800adc8 <HttpDaemon::Run()+0x154>)
 800ad90:	e7a4      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad92:	4d0e      	ldr	r5, [pc, #56]	; (800adcc <HttpDaemon::Run()+0x158>)
 800ad94:	e7a2      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad96:	4d0e      	ldr	r5, [pc, #56]	; (800add0 <HttpDaemon::Run()+0x15c>)
 800ad98:	e7a0      	b.n	800acdc <HttpDaemon::Run()+0x68>
 800ad9a:	4d0e      	ldr	r5, [pc, #56]	; (800add4 <HttpDaemon::Run()+0x160>)
 800ad9c:	e7aa      	b.n	800acf4 <HttpDaemon::Run()+0x80>
 800ad9e:	bf00      	nop
 800ada0:	20009494 	mulcs	r0, r4, r4
 800ada4:	0801237e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sp}
 800ada8:	0801238a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sp}
 800adac:	08012464 	stmdaeq	r1, {r2, r5, r6, sl, sp}
 800adb0:	080123b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sp}
 800adb4:	0801240c 	stmdaeq	r1, {r2, r3, sl, sp}
 800adb8:	08011bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip}
 800adbc:	08012398 	stmdaeq	r1, {r3, r4, r7, r8, r9, sp}
 800adc0:	0801233c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sp}
 800adc4:	08012332 	stmdaeq	r1, {r1, r4, r5, r8, r9, sp}
 800adc8:	08012319 	stmdaeq	r1, {r0, r3, r4, r8, r9, sp}
 800adcc:	08012367 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sp}
 800add0:	08012351 	stmdaeq	r1, {r0, r4, r6, r8, r9, sp}
 800add4:	080123ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sp}

0800add8 <remoteconfig::json_get_list(char*, unsigned short)>:
 800add8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800addc:	4b14      	ldr	r3, [pc, #80]	; (800ae30 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800adde:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800ae34 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ade2:	681b      	ldr	r3, [r3, #0]
 800ade4:	b088      	sub	sp, #32
 800ade6:	4605      	mov	r5, r0
 800ade8:	f8d8 0000 	ldr.w	r0, [r8]
 800adec:	691c      	ldr	r4, [r3, #16]
 800adee:	460e      	mov	r6, r1
 800adf0:	f7ff f81e 	bl	8009e30 <RemoteConfig::GetStringNode() const>
 800adf4:	4607      	mov	r7, r0
 800adf6:	f8d8 0000 	ldr.w	r0, [r8]
 800adfa:	f7ff f825 	bl	8009e48 <RemoteConfig::GetStringOutput() const>
 800adfe:	4b0e      	ldr	r3, [pc, #56]	; (800ae38 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ae00:	4631      	mov	r1, r6
 800ae02:	7a1a      	ldrb	r2, [r3, #8]
 800ae04:	3309      	adds	r3, #9
 800ae06:	9303      	str	r3, [sp, #12]
 800ae08:	0e23      	lsrs	r3, r4, #24
 800ae0a:	9302      	str	r3, [sp, #8]
 800ae0c:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ae10:	9301      	str	r3, [sp, #4]
 800ae12:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800ae16:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800ae1a:	9300      	str	r3, [sp, #0]
 800ae1c:	4628      	mov	r0, r5
 800ae1e:	4a07      	ldr	r2, [pc, #28]	; (800ae3c <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800ae20:	9704      	str	r7, [sp, #16]
 800ae22:	b2e3      	uxtb	r3, r4
 800ae24:	f004 fed6 	bl	800fbd4 <snprintf>
 800ae28:	b280      	uxth	r0, r0
 800ae2a:	b008      	add	sp, #32
 800ae2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae30:	20009494 	mulcs	r0, r4, r4
 800ae34:	20000b7c 	andcs	r0, r0, ip, ror fp
 800ae38:	20000b58 	andcs	r0, r0, r8, asr fp
 800ae3c:	0801253e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, sl, sp}

0800ae40 <remoteconfig::json_get_version(char*, unsigned short)>:
 800ae40:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ae42:	2208      	movs	r2, #8
 800ae44:	4b09      	ldr	r3, [pc, #36]	; (800ae6c <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800ae46:	9204      	str	r2, [sp, #16]
 800ae48:	f1a3 020b 	sub.w	r2, r3, #11
 800ae4c:	9203      	str	r2, [sp, #12]
 800ae4e:	220b      	movs	r2, #11
 800ae50:	9202      	str	r2, [sp, #8]
 800ae52:	4a07      	ldr	r2, [pc, #28]	; (800ae70 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800ae54:	9305      	str	r3, [sp, #20]
 800ae56:	3b0e      	subs	r3, #14
 800ae58:	9201      	str	r2, [sp, #4]
 800ae5a:	9300      	str	r3, [sp, #0]
 800ae5c:	4a05      	ldr	r2, [pc, #20]	; (800ae74 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800ae5e:	2303      	movs	r3, #3
 800ae60:	f004 feb8 	bl	800fbd4 <snprintf>
 800ae64:	b280      	uxth	r0, r0
 800ae66:	b007      	add	sp, #28
 800ae68:	f85d fb04 	ldr.w	pc, [sp], #4
 800ae6c:	20009b6a 	andcs	r9, r0, sl, ror #22
 800ae70:	08011bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip}
 800ae74:	0801259d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, sp}

0800ae78 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800ae78:	b508      	push	{r3, lr}
 800ae7a:	4b05      	ldr	r3, [pc, #20]	; (800ae90 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800ae7c:	681a      	ldr	r2, [r3, #0]
 800ae7e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ae82:	fbb2 f3f3 	udiv	r3, r2, r3
 800ae86:	4a03      	ldr	r2, [pc, #12]	; (800ae94 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800ae88:	f004 fea4 	bl	800fbd4 <snprintf>
 800ae8c:	b280      	uxth	r0, r0
 800ae8e:	bd08      	pop	{r3, pc}
 800ae90:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ae94:	080125e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, sp}

0800ae98 <remoteconfig::json_get_display(char*, unsigned short)>:
 800ae98:	b508      	push	{r3, lr}
 800ae9a:	4b05      	ldr	r3, [pc, #20]	; (800aeb0 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800ae9c:	4a05      	ldr	r2, [pc, #20]	; (800aeb4 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800ae9e:	681b      	ldr	r3, [r3, #0]
 800aea0:	7c1b      	ldrb	r3, [r3, #16]
 800aea2:	f083 0301 	eor.w	r3, r3, #1
 800aea6:	f004 fe95 	bl	800fbd4 <snprintf>
 800aeaa:	b280      	uxth	r0, r0
 800aeac:	bd08      	pop	{r3, pc}
 800aeae:	bf00      	nop
 800aeb0:	20009acc 	andcs	r9, r0, ip, asr #21
 800aeb4:	080125f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, sp}

0800aeb8 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800aeb8:	b508      	push	{r3, lr}
 800aeba:	4a02      	ldr	r2, [pc, #8]	; (800aec4 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800aebc:	f004 fe8a 	bl	800fbd4 <snprintf>
 800aec0:	b280      	uxth	r0, r0
 800aec2:	bd08      	pop	{r3, pc}
 800aec4:	08012601 	stmdaeq	r1, {r0, r9, sl, sp}

0800aec8 <get_file_content(char const*, char*)>:
 800aec8:	2300      	movs	r3, #0
 800aeca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aecc:	4a10      	ldr	r2, [pc, #64]	; (800af10 <get_file_content(char const*, char*)+0x48>)
 800aece:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800aed2:	1e46      	subs	r6, r0, #1
 800aed4:	3c01      	subs	r4, #1
 800aed6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800aeda:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800aede:	42bd      	cmp	r5, r7
 800aee0:	d10f      	bne.n	800af02 <get_file_content(char const*, char*)+0x3a>
 800aee2:	2d00      	cmp	r5, #0
 800aee4:	d1f7      	bne.n	800aed6 <get_file_content(char const*, char*)+0xe>
 800aee6:	4608      	mov	r0, r1
 800aee8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800aeec:	685b      	ldr	r3, [r3, #4]
 800aeee:	3b01      	subs	r3, #1
 800aef0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800aef4:	f800 2b01 	strb.w	r2, [r0], #1
 800aef8:	2a00      	cmp	r2, #0
 800aefa:	d1f9      	bne.n	800aef0 <get_file_content(char const*, char*)+0x28>
 800aefc:	1a40      	subs	r0, r0, r1
 800aefe:	3801      	subs	r0, #1
 800af00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af02:	3301      	adds	r3, #1
 800af04:	2b03      	cmp	r3, #3
 800af06:	d1e2      	bne.n	800aece <get_file_content(char const*, char*)+0x6>
 800af08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800af0c:	e7f8      	b.n	800af00 <get_file_content(char const*, char*)+0x38>
 800af0e:	bf00      	nop
 800af10:	08012944 	stmdaeq	r1, {r2, r6, r8, fp, sp}

0800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800af14:	2300      	movs	r3, #0
 800af16:	2020      	movs	r0, #32
 800af18:	b510      	push	{r4, lr}
 800af1a:	4a04      	ldr	r2, [pc, #16]	; (800af2c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800af1c:	428b      	cmp	r3, r1
 800af1e:	d004      	beq.n	800af2a <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800af20:	f852 4b04 	ldr.w	r4, [r2], #4
 800af24:	3301      	adds	r3, #1
 800af26:	4420      	add	r0, r4
 800af28:	e7f8      	b.n	800af1c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800af2a:	bd10      	pop	{r4, pc}
 800af2c:	08012e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, sp}

0800af30 <SpiFlashStore::Init()>:
 800af30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af34:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800b058 <SpiFlashStore::Init()+0x128>
 800af38:	4607      	mov	r7, r0
 800af3a:	b085      	sub	sp, #20
 800af3c:	f8d8 0000 	ldr.w	r0, [r8]
 800af40:	f000 fb3c 	bl	800b5bc <FlashRom::GetSectorSize()>
 800af44:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800af48:	4605      	mov	r5, r0
 800af4a:	f040 8083 	bne.w	800b054 <SpiFlashStore::Init()+0x124>
 800af4e:	f8d8 0000 	ldr.w	r0, [r8]
 800af52:	f000 fb2b 	bl	800b5ac <FlashRom::GetSize()>
 800af56:	4b41      	ldr	r3, [pc, #260]	; (800b05c <SpiFlashStore::Init()+0x12c>)
 800af58:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800af5c:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800af60:	6019      	str	r1, [r3, #0]
 800af62:	2e00      	cmp	r6, #0
 800af64:	d176      	bne.n	800b054 <SpiFlashStore::Init()+0x124>
 800af66:	4c3e      	ldr	r4, [pc, #248]	; (800b060 <SpiFlashStore::Init()+0x130>)
 800af68:	ab03      	add	r3, sp, #12
 800af6a:	9300      	str	r3, [sp, #0]
 800af6c:	462a      	mov	r2, r5
 800af6e:	4623      	mov	r3, r4
 800af70:	f8d8 0000 	ldr.w	r0, [r8]
 800af74:	f000 fb25 	bl	800b5c2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800af78:	7823      	ldrb	r3, [r4, #0]
 800af7a:	2b41      	cmp	r3, #65	; 0x41
 800af7c:	bf1c      	itt	ne
 800af7e:	2341      	movne	r3, #65	; 0x41
 800af80:	7023      	strbne	r3, [r4, #0]
 800af82:	7863      	ldrb	r3, [r4, #1]
 800af84:	bf14      	ite	ne
 800af86:	4635      	movne	r5, r6
 800af88:	2501      	moveq	r5, #1
 800af8a:	2b76      	cmp	r3, #118	; 0x76
 800af8c:	bf1c      	itt	ne
 800af8e:	2376      	movne	r3, #118	; 0x76
 800af90:	7063      	strbne	r3, [r4, #1]
 800af92:	78a3      	ldrb	r3, [r4, #2]
 800af94:	bf18      	it	ne
 800af96:	2500      	movne	r5, #0
 800af98:	2b56      	cmp	r3, #86	; 0x56
 800af9a:	bf1c      	itt	ne
 800af9c:	2356      	movne	r3, #86	; 0x56
 800af9e:	70a3      	strbne	r3, [r4, #2]
 800afa0:	78e3      	ldrb	r3, [r4, #3]
 800afa2:	bf18      	it	ne
 800afa4:	2500      	movne	r5, #0
 800afa6:	2b10      	cmp	r3, #16
 800afa8:	d01c      	beq.n	800afe4 <SpiFlashStore::Init()+0xb4>
 800afaa:	2310      	movs	r3, #16
 800afac:	70e3      	strb	r3, [r4, #3]
 800afae:	2201      	movs	r2, #1
 800afb0:	2500      	movs	r5, #0
 800afb2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800afb6:	4b2b      	ldr	r3, [pc, #172]	; (800b064 <SpiFlashStore::Init()+0x134>)
 800afb8:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800b068 <SpiFlashStore::Init()+0x138>
 800afbc:	701a      	strb	r2, [r3, #0]
 800afbe:	4631      	mov	r1, r6
 800afc0:	4638      	mov	r0, r7
 800afc2:	f7ff ffa7 	bl	800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800afc6:	1823      	adds	r3, r4, r0
 800afc8:	5425      	strb	r5, [r4, r0]
 800afca:	705d      	strb	r5, [r3, #1]
 800afcc:	709d      	strb	r5, [r3, #2]
 800afce:	70dd      	strb	r5, [r3, #3]
 800afd0:	f858 3b04 	ldr.w	r3, [r8], #4
 800afd4:	1d02      	adds	r2, r0, #4
 800afd6:	4403      	add	r3, r0
 800afd8:	4293      	cmp	r3, r2
 800afda:	d931      	bls.n	800b040 <SpiFlashStore::Init()+0x110>
 800afdc:	f804 9002 	strb.w	r9, [r4, r2]
 800afe0:	3201      	adds	r2, #1
 800afe2:	e7f9      	b.n	800afd8 <SpiFlashStore::Init()+0xa8>
 800afe4:	2d00      	cmp	r5, #0
 800afe6:	d0e2      	beq.n	800afae <SpiFlashStore::Init()+0x7e>
 800afe8:	f04f 0900 	mov.w	r9, #0
 800afec:	46c8      	mov	r8, r9
 800afee:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800b06c <SpiFlashStore::Init()+0x13c>
 800aff2:	f8da b000 	ldr.w	fp, [sl]
 800aff6:	4631      	mov	r1, r6
 800aff8:	4638      	mov	r0, r7
 800affa:	f7ff ff8b 	bl	800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800affe:	5c23      	ldrb	r3, [r4, r0]
 800b000:	2bff      	cmp	r3, #255	; 0xff
 800b002:	d114      	bne.n	800b02e <SpiFlashStore::Init()+0xfe>
 800b004:	1823      	adds	r3, r4, r0
 800b006:	785a      	ldrb	r2, [r3, #1]
 800b008:	2aff      	cmp	r2, #255	; 0xff
 800b00a:	d110      	bne.n	800b02e <SpiFlashStore::Init()+0xfe>
 800b00c:	789a      	ldrb	r2, [r3, #2]
 800b00e:	2aff      	cmp	r2, #255	; 0xff
 800b010:	d10d      	bne.n	800b02e <SpiFlashStore::Init()+0xfe>
 800b012:	78da      	ldrb	r2, [r3, #3]
 800b014:	2aff      	cmp	r2, #255	; 0xff
 800b016:	d10a      	bne.n	800b02e <SpiFlashStore::Init()+0xfe>
 800b018:	46a9      	mov	r9, r5
 800b01a:	f04f 0b01 	mov.w	fp, #1
 800b01e:	f804 8000 	strb.w	r8, [r4, r0]
 800b022:	f883 8001 	strb.w	r8, [r3, #1]
 800b026:	f883 8002 	strb.w	r8, [r3, #2]
 800b02a:	f883 8003 	strb.w	r8, [r3, #3]
 800b02e:	3601      	adds	r6, #1
 800b030:	2e1c      	cmp	r6, #28
 800b032:	d1e0      	bne.n	800aff6 <SpiFlashStore::Init()+0xc6>
 800b034:	f1b9 0f00 	cmp.w	r9, #0
 800b038:	d008      	beq.n	800b04c <SpiFlashStore::Init()+0x11c>
 800b03a:	f8ca b000 	str.w	fp, [sl]
 800b03e:	e005      	b.n	800b04c <SpiFlashStore::Init()+0x11c>
 800b040:	3601      	adds	r6, #1
 800b042:	2e1c      	cmp	r6, #28
 800b044:	d1bb      	bne.n	800afbe <SpiFlashStore::Init()+0x8e>
 800b046:	2501      	movs	r5, #1
 800b048:	4b08      	ldr	r3, [pc, #32]	; (800b06c <SpiFlashStore::Init()+0x13c>)
 800b04a:	601d      	str	r5, [r3, #0]
 800b04c:	4628      	mov	r0, r5
 800b04e:	b005      	add	sp, #20
 800b050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b054:	2500      	movs	r5, #0
 800b056:	e7f9      	b.n	800b04c <SpiFlashStore::Init()+0x11c>
 800b058:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b05c:	20001b84 	andcs	r1, r0, r4, lsl #23
 800b060:	20000b84 	andcs	r0, r0, r4, lsl #23
 800b064:	20001b98 	mulcs	r0, r8, fp
 800b068:	08012e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, sp}
 800b06c:	20001b90 	mulcs	r0, r0, fp

0800b070 <SpiFlashStore::SpiFlashStore()>:
 800b070:	b538      	push	{r3, r4, r5, lr}
 800b072:	4b0d      	ldr	r3, [pc, #52]	; (800b0a8 <SpiFlashStore::SpiFlashStore()+0x38>)
 800b074:	4604      	mov	r4, r0
 800b076:	6018      	str	r0, [r3, #0]
 800b078:	4b0c      	ldr	r3, [pc, #48]	; (800b0ac <SpiFlashStore::SpiFlashStore()+0x3c>)
 800b07a:	4d0d      	ldr	r5, [pc, #52]	; (800b0b0 <SpiFlashStore::SpiFlashStore()+0x40>)
 800b07c:	681b      	ldr	r3, [r3, #0]
 800b07e:	781b      	ldrb	r3, [r3, #0]
 800b080:	b113      	cbz	r3, 800b088 <SpiFlashStore::SpiFlashStore()+0x18>
 800b082:	f7ff ff55 	bl	800af30 <SpiFlashStore::Init()>
 800b086:	7028      	strb	r0, [r5, #0]
 800b088:	782b      	ldrb	r3, [r5, #0]
 800b08a:	b153      	cbz	r3, 800b0a2 <SpiFlashStore::SpiFlashStore()+0x32>
 800b08c:	2320      	movs	r3, #32
 800b08e:	2200      	movs	r2, #0
 800b090:	4908      	ldr	r1, [pc, #32]	; (800b0b4 <SpiFlashStore::SpiFlashStore()+0x44>)
 800b092:	f851 0b04 	ldr.w	r0, [r1], #4
 800b096:	3201      	adds	r2, #1
 800b098:	2a1c      	cmp	r2, #28
 800b09a:	4403      	add	r3, r0
 800b09c:	d1f9      	bne.n	800b092 <SpiFlashStore::SpiFlashStore()+0x22>
 800b09e:	4a06      	ldr	r2, [pc, #24]	; (800b0b8 <SpiFlashStore::SpiFlashStore()+0x48>)
 800b0a0:	6013      	str	r3, [r2, #0]
 800b0a2:	4620      	mov	r0, r4
 800b0a4:	bd38      	pop	{r3, r4, r5, pc}
 800b0a6:	bf00      	nop
 800b0a8:	20001b94 	mulcs	r0, r4, fp
 800b0ac:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b0b0:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b0b4:	08012e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, sp}
 800b0b8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b0bc <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800b0bc:	b508      	push	{r3, lr}
 800b0be:	f7ff ff29 	bl	800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b0c2:	2300      	movs	r3, #0
 800b0c4:	4904      	ldr	r1, [pc, #16]	; (800b0d8 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800b0c6:	1842      	adds	r2, r0, r1
 800b0c8:	540b      	strb	r3, [r1, r0]
 800b0ca:	7053      	strb	r3, [r2, #1]
 800b0cc:	7093      	strb	r3, [r2, #2]
 800b0ce:	70d3      	strb	r3, [r2, #3]
 800b0d0:	2201      	movs	r2, #1
 800b0d2:	4b02      	ldr	r3, [pc, #8]	; (800b0dc <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800b0d4:	601a      	str	r2, [r3, #0]
 800b0d6:	bd08      	pop	{r3, pc}
 800b0d8:	20000b84 	andcs	r0, r0, r4, lsl #23
 800b0dc:	20001b90 	mulcs	r0, r0, fp

0800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800b0e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0e4:	461c      	mov	r4, r3
 800b0e6:	4b19      	ldr	r3, [pc, #100]	; (800b14c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800b0e8:	4615      	mov	r5, r2
 800b0ea:	781f      	ldrb	r7, [r3, #0]
 800b0ec:	9e07      	ldr	r6, [sp, #28]
 800b0ee:	b35f      	cbz	r7, 800b148 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b0f0:	f7ff ff10 	bl	800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b0f4:	f04f 0c00 	mov.w	ip, #0
 800b0f8:	4a15      	ldr	r2, [pc, #84]	; (800b150 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800b0fa:	1941      	adds	r1, r0, r5
 800b0fc:	1e63      	subs	r3, r4, #1
 800b0fe:	9c06      	ldr	r4, [sp, #24]
 800b100:	4411      	add	r1, r2
 800b102:	440c      	add	r4, r1
 800b104:	42a1      	cmp	r1, r4
 800b106:	d00a      	beq.n	800b11e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800b108:	f891 8000 	ldrb.w	r8, [r1]
 800b10c:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800b110:	3101      	adds	r1, #1
 800b112:	45f0      	cmp	r8, lr
 800b114:	bf1c      	itt	ne
 800b116:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800b11a:	46bc      	movne	ip, r7
 800b11c:	e7f2      	b.n	800b104 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800b11e:	f1bc 0f00 	cmp.w	ip, #0
 800b122:	d011      	beq.n	800b148 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b124:	4b0b      	ldr	r3, [pc, #44]	; (800b154 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800b126:	6819      	ldr	r1, [r3, #0]
 800b128:	b109      	cbz	r1, 800b12e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800b12a:	2906      	cmp	r1, #6
 800b12c:	d101      	bne.n	800b132 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b12e:	2101      	movs	r1, #1
 800b130:	6019      	str	r1, [r3, #0]
 800b132:	4b09      	ldr	r3, [pc, #36]	; (800b158 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800b134:	6819      	ldr	r1, [r3, #0]
 800b136:	4b09      	ldr	r3, [pc, #36]	; (800b15c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800b138:	6019      	str	r1, [r3, #0]
 800b13a:	b12d      	cbz	r5, 800b148 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b13c:	b126      	cbz	r6, 800b148 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b13e:	9b08      	ldr	r3, [sp, #32]
 800b140:	4418      	add	r0, r3
 800b142:	5813      	ldr	r3, [r2, r0]
 800b144:	4333      	orrs	r3, r6
 800b146:	5013      	str	r3, [r2, r0]
 800b148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b14c:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b150:	20000b84 	andcs	r0, r0, r4, lsl #23
 800b154:	20001b90 	mulcs	r0, r0, fp
 800b158:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b15c:	20000b80 	andcs	r0, r0, r0, lsl #23

0800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800b160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b164:	461d      	mov	r5, r3
 800b166:	4b15      	ldr	r3, [pc, #84]	; (800b1bc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800b168:	b085      	sub	sp, #20
 800b16a:	781b      	ldrb	r3, [r3, #0]
 800b16c:	4607      	mov	r7, r0
 800b16e:	4688      	mov	r8, r1
 800b170:	4614      	mov	r4, r2
 800b172:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800b176:	b1eb      	cbz	r3, 800b1b4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800b178:	f7ff fecc 	bl	800af14 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b17c:	4910      	ldr	r1, [pc, #64]	; (800b1c0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800b17e:	4a11      	ldr	r2, [pc, #68]	; (800b1c4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800b180:	7809      	ldrb	r1, [r1, #0]
 800b182:	eb00 0309 	add.w	r3, r0, r9
 800b186:	189e      	adds	r6, r3, r2
 800b188:	b951      	cbnz	r1, 800b1a0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800b18a:	589b      	ldr	r3, [r3, r2]
 800b18c:	b143      	cbz	r3, 800b1a0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800b18e:	3c01      	subs	r4, #1
 800b190:	4435      	add	r5, r6
 800b192:	42b5      	cmp	r5, r6
 800b194:	d00e      	beq.n	800b1b4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800b196:	f816 3b01 	ldrb.w	r3, [r6], #1
 800b19a:	f804 3f01 	strb.w	r3, [r4, #1]!
 800b19e:	e7f8      	b.n	800b192 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800b1a0:	2300      	movs	r3, #0
 800b1a2:	464a      	mov	r2, r9
 800b1a4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b1a8:	4641      	mov	r1, r8
 800b1aa:	4623      	mov	r3, r4
 800b1ac:	4638      	mov	r0, r7
 800b1ae:	9500      	str	r5, [sp, #0]
 800b1b0:	f7ff ff96 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b1b4:	b005      	add	sp, #20
 800b1b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1ba:	bf00      	nop
 800b1bc:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b1c0:	20001b98 	mulcs	r0, r8, fp
 800b1c4:	20000b84 	andcs	r0, r0, r4, lsl #23

0800b1c8 <SpiFlashStore::Flash()>:
 800b1c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b1ca:	4c25      	ldr	r4, [pc, #148]	; (800b260 <SpiFlashStore::Flash()+0x98>)
 800b1cc:	6820      	ldr	r0, [r4, #0]
 800b1ce:	2800      	cmp	r0, #0
 800b1d0:	d043      	beq.n	800b25a <SpiFlashStore::Flash()+0x92>
 800b1d2:	3801      	subs	r0, #1
 800b1d4:	2805      	cmp	r0, #5
 800b1d6:	d831      	bhi.n	800b23c <SpiFlashStore::Flash()+0x74>
 800b1d8:	e8df f000 	tbb	[pc, r0]
 800b1dc:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800b1e0:	4b203025 	blmi	881727c <__exidx_end+0x8039d4>
 800b1e4:	681a      	ldr	r2, [r3, #0]
 800b1e6:	4b20      	ldr	r3, [pc, #128]	; (800b268 <SpiFlashStore::Flash()+0xa0>)
 800b1e8:	601a      	str	r2, [r3, #0]
 800b1ea:	2302      	movs	r3, #2
 800b1ec:	6023      	str	r3, [r4, #0]
 800b1ee:	2001      	movs	r0, #1
 800b1f0:	e033      	b.n	800b25a <SpiFlashStore::Flash()+0x92>
 800b1f2:	4b1c      	ldr	r3, [pc, #112]	; (800b264 <SpiFlashStore::Flash()+0x9c>)
 800b1f4:	4a1c      	ldr	r2, [pc, #112]	; (800b268 <SpiFlashStore::Flash()+0xa0>)
 800b1f6:	681b      	ldr	r3, [r3, #0]
 800b1f8:	6812      	ldr	r2, [r2, #0]
 800b1fa:	1a9b      	subs	r3, r3, r2
 800b1fc:	2b63      	cmp	r3, #99	; 0x63
 800b1fe:	d9f6      	bls.n	800b1ee <SpiFlashStore::Flash()+0x26>
 800b200:	2303      	movs	r3, #3
 800b202:	e7f3      	b.n	800b1ec <SpiFlashStore::Flash()+0x24>
 800b204:	4919      	ldr	r1, [pc, #100]	; (800b26c <SpiFlashStore::Flash()+0xa4>)
 800b206:	481a      	ldr	r0, [pc, #104]	; (800b270 <SpiFlashStore::Flash()+0xa8>)
 800b208:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800b20c:	6809      	ldr	r1, [r1, #0]
 800b20e:	6800      	ldr	r0, [r0, #0]
 800b210:	ab03      	add	r3, sp, #12
 800b212:	f000 f9e5 	bl	800b5e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800b216:	2800      	cmp	r0, #0
 800b218:	d0e9      	beq.n	800b1ee <SpiFlashStore::Flash()+0x26>
 800b21a:	4b12      	ldr	r3, [pc, #72]	; (800b264 <SpiFlashStore::Flash()+0x9c>)
 800b21c:	681a      	ldr	r2, [r3, #0]
 800b21e:	4b12      	ldr	r3, [pc, #72]	; (800b268 <SpiFlashStore::Flash()+0xa0>)
 800b220:	601a      	str	r2, [r3, #0]
 800b222:	2305      	movs	r3, #5
 800b224:	e7e2      	b.n	800b1ec <SpiFlashStore::Flash()+0x24>
 800b226:	4b0f      	ldr	r3, [pc, #60]	; (800b264 <SpiFlashStore::Flash()+0x9c>)
 800b228:	4a0f      	ldr	r2, [pc, #60]	; (800b268 <SpiFlashStore::Flash()+0xa0>)
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	6812      	ldr	r2, [r2, #0]
 800b22e:	1a9b      	subs	r3, r3, r2
 800b230:	2b63      	cmp	r3, #99	; 0x63
 800b232:	d9dc      	bls.n	800b1ee <SpiFlashStore::Flash()+0x26>
 800b234:	2304      	movs	r3, #4
 800b236:	e7d9      	b.n	800b1ec <SpiFlashStore::Flash()+0x24>
 800b238:	2306      	movs	r3, #6
 800b23a:	e7d7      	b.n	800b1ec <SpiFlashStore::Flash()+0x24>
 800b23c:	ab03      	add	r3, sp, #12
 800b23e:	4a0d      	ldr	r2, [pc, #52]	; (800b274 <SpiFlashStore::Flash()+0xac>)
 800b240:	490a      	ldr	r1, [pc, #40]	; (800b26c <SpiFlashStore::Flash()+0xa4>)
 800b242:	480b      	ldr	r0, [pc, #44]	; (800b270 <SpiFlashStore::Flash()+0xa8>)
 800b244:	9300      	str	r3, [sp, #0]
 800b246:	6812      	ldr	r2, [r2, #0]
 800b248:	4b0b      	ldr	r3, [pc, #44]	; (800b278 <SpiFlashStore::Flash()+0xb0>)
 800b24a:	6809      	ldr	r1, [r1, #0]
 800b24c:	6800      	ldr	r0, [r0, #0]
 800b24e:	f000 fa67 	bl	800b720 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800b252:	2800      	cmp	r0, #0
 800b254:	d0cb      	beq.n	800b1ee <SpiFlashStore::Flash()+0x26>
 800b256:	2000      	movs	r0, #0
 800b258:	6020      	str	r0, [r4, #0]
 800b25a:	b004      	add	sp, #16
 800b25c:	bd10      	pop	{r4, pc}
 800b25e:	bf00      	nop
 800b260:	20001b90 	mulcs	r0, r0, fp
 800b264:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b268:	20000b80 	andcs	r0, r0, r0, lsl #23
 800b26c:	20001b84 	andcs	r1, r0, r4, lsl #23
 800b270:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b274:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800b278:	20000b84 	andcs	r0, r0, r4, lsl #23

0800b27c <StoreDisplayUdf::~StoreDisplayUdf()>:
 800b27c:	4770      	bx	lr
	...

0800b280 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800b280:	2300      	movs	r3, #0
 800b282:	b507      	push	{r0, r1, r2, lr}
 800b284:	4805      	ldr	r0, [pc, #20]	; (800b29c <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800b286:	9300      	str	r3, [sp, #0]
 800b288:	460a      	mov	r2, r1
 800b28a:	2322      	movs	r3, #34	; 0x22
 800b28c:	210f      	movs	r1, #15
 800b28e:	6800      	ldr	r0, [r0, #0]
 800b290:	f7ff ff66 	bl	800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b294:	b003      	add	sp, #12
 800b296:	f85d fb04 	ldr.w	pc, [sp], #4
 800b29a:	bf00      	nop
 800b29c:	20001b94 	mulcs	r0, r4, fp

0800b2a0 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800b2a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b2a2:	2200      	movs	r2, #0
 800b2a4:	460b      	mov	r3, r1
 800b2a6:	2122      	movs	r1, #34	; 0x22
 800b2a8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b2ac:	4804      	ldr	r0, [pc, #16]	; (800b2c0 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800b2ae:	9100      	str	r1, [sp, #0]
 800b2b0:	6800      	ldr	r0, [r0, #0]
 800b2b2:	210f      	movs	r1, #15
 800b2b4:	f7ff ff14 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b2b8:	b005      	add	sp, #20
 800b2ba:	f85d fb04 	ldr.w	pc, [sp], #4
 800b2be:	bf00      	nop
 800b2c0:	20001b94 	mulcs	r0, r4, fp

0800b2c4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800b2c4:	b510      	push	{r4, lr}
 800b2c6:	4604      	mov	r4, r0
 800b2c8:	f004 f960 	bl	800f58c <operator delete(void*)>
 800b2cc:	4620      	mov	r0, r4
 800b2ce:	bd10      	pop	{r4, pc}

0800b2d0 <StoreDisplayUdf::StoreDisplayUdf()>:
 800b2d0:	4a02      	ldr	r2, [pc, #8]	; (800b2dc <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800b2d2:	6002      	str	r2, [r0, #0]
 800b2d4:	4a02      	ldr	r2, [pc, #8]	; (800b2e0 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800b2d6:	6010      	str	r0, [r2, #0]
 800b2d8:	4770      	bx	lr
 800b2da:	bf00      	nop
 800b2dc:	08012f00 	stmdaeq	r1, {r8, r9, sl, fp, sp}
 800b2e0:	20001b9c 	mulcs	r0, ip, fp

0800b2e4 <StoreDmxSend::~StoreDmxSend()>:
 800b2e4:	4770      	bx	lr
	...

0800b2e8 <StoreDmxSend::Copy(TDmxParams*)>:
 800b2e8:	2300      	movs	r3, #0
 800b2ea:	b507      	push	{r0, r1, r2, lr}
 800b2ec:	4805      	ldr	r0, [pc, #20]	; (800b304 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800b2ee:	9300      	str	r3, [sp, #0]
 800b2f0:	460a      	mov	r2, r1
 800b2f2:	230a      	movs	r3, #10
 800b2f4:	2102      	movs	r1, #2
 800b2f6:	6800      	ldr	r0, [r0, #0]
 800b2f8:	f7ff ff32 	bl	800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b2fc:	b003      	add	sp, #12
 800b2fe:	f85d fb04 	ldr.w	pc, [sp], #4
 800b302:	bf00      	nop
 800b304:	20001b94 	mulcs	r0, r4, fp

0800b308 <StoreDmxSend::Update(TDmxParams const*)>:
 800b308:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b30a:	2200      	movs	r2, #0
 800b30c:	460b      	mov	r3, r1
 800b30e:	210a      	movs	r1, #10
 800b310:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b314:	4804      	ldr	r0, [pc, #16]	; (800b328 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800b316:	9100      	str	r1, [sp, #0]
 800b318:	6800      	ldr	r0, [r0, #0]
 800b31a:	2102      	movs	r1, #2
 800b31c:	f7ff fee0 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b320:	b005      	add	sp, #20
 800b322:	f85d fb04 	ldr.w	pc, [sp], #4
 800b326:	bf00      	nop
 800b328:	20001b94 	mulcs	r0, r4, fp

0800b32c <StoreDmxSend::~StoreDmxSend()>:
 800b32c:	b510      	push	{r4, lr}
 800b32e:	4604      	mov	r4, r0
 800b330:	f004 f92c 	bl	800f58c <operator delete(void*)>
 800b334:	4620      	mov	r0, r4
 800b336:	bd10      	pop	{r4, pc}

0800b338 <StoreDmxSend::StoreDmxSend()>:
 800b338:	4a02      	ldr	r2, [pc, #8]	; (800b344 <StoreDmxSend::StoreDmxSend()+0xc>)
 800b33a:	6002      	str	r2, [r0, #0]
 800b33c:	4a02      	ldr	r2, [pc, #8]	; (800b348 <StoreDmxSend::StoreDmxSend()+0x10>)
 800b33e:	6010      	str	r0, [r2, #0]
 800b340:	4770      	bx	lr
 800b342:	bf00      	nop
 800b344:	08012f18 	stmdaeq	r1, {r3, r4, r8, r9, sl, fp, sp}
 800b348:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800b34c <StoreE131::~StoreE131()>:
 800b34c:	4770      	bx	lr
	...

0800b350 <StoreE131::Copy(e131params::Params*)>:
 800b350:	2300      	movs	r3, #0
 800b352:	b507      	push	{r0, r1, r2, lr}
 800b354:	4805      	ldr	r0, [pc, #20]	; (800b36c <StoreE131::Copy(e131params::Params*)+0x1c>)
 800b356:	9300      	str	r3, [sp, #0]
 800b358:	460a      	mov	r2, r1
 800b35a:	231f      	movs	r3, #31
 800b35c:	2104      	movs	r1, #4
 800b35e:	6800      	ldr	r0, [r0, #0]
 800b360:	f7ff fefe 	bl	800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b364:	b003      	add	sp, #12
 800b366:	f85d fb04 	ldr.w	pc, [sp], #4
 800b36a:	bf00      	nop
 800b36c:	20001b94 	mulcs	r0, r4, fp

0800b370 <StoreE131::Update(e131params::Params const*)>:
 800b370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b372:	2200      	movs	r2, #0
 800b374:	460b      	mov	r3, r1
 800b376:	211f      	movs	r1, #31
 800b378:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b37c:	4804      	ldr	r0, [pc, #16]	; (800b390 <StoreE131::Update(e131params::Params const*)+0x20>)
 800b37e:	9100      	str	r1, [sp, #0]
 800b380:	6800      	ldr	r0, [r0, #0]
 800b382:	2104      	movs	r1, #4
 800b384:	f7ff feac 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b388:	b005      	add	sp, #20
 800b38a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b38e:	bf00      	nop
 800b390:	20001b94 	mulcs	r0, r4, fp

0800b394 <StoreE131::~StoreE131()>:
 800b394:	b510      	push	{r4, lr}
 800b396:	4604      	mov	r4, r0
 800b398:	f004 f8f8 	bl	800f58c <operator delete(void*)>
 800b39c:	4620      	mov	r0, r4
 800b39e:	bd10      	pop	{r4, pc}

0800b3a0 <StoreE131::StoreE131()>:
 800b3a0:	4a02      	ldr	r2, [pc, #8]	; (800b3ac <StoreE131::StoreE131()+0xc>)
 800b3a2:	6002      	str	r2, [r0, #0]
 800b3a4:	4a02      	ldr	r2, [pc, #8]	; (800b3b0 <StoreE131::StoreE131()+0x10>)
 800b3a6:	6010      	str	r0, [r2, #0]
 800b3a8:	4770      	bx	lr
 800b3aa:	bf00      	nop
 800b3ac:	08012f30 	stmdaeq	r1, {r4, r5, r8, r9, sl, fp, sp}
 800b3b0:	20001ba4 	andcs	r1, r0, r4, lsr #23

0800b3b4 <StoreNetwork::~StoreNetwork()>:
 800b3b4:	4770      	bx	lr

0800b3b6 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800b3b6:	3804      	subs	r0, #4
 800b3b8:	4770      	bx	lr
	...

0800b3bc <StoreNetwork::Update(TNetworkParams const*)>:
 800b3bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b3be:	2200      	movs	r2, #0
 800b3c0:	460b      	mov	r3, r1
 800b3c2:	215e      	movs	r1, #94	; 0x5e
 800b3c4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b3c8:	4804      	ldr	r0, [pc, #16]	; (800b3dc <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800b3ca:	9100      	str	r1, [sp, #0]
 800b3cc:	6800      	ldr	r0, [r0, #0]
 800b3ce:	4611      	mov	r1, r2
 800b3d0:	f7ff fe86 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b3d4:	b005      	add	sp, #20
 800b3d6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b3da:	bf00      	nop
 800b3dc:	20001b94 	mulcs	r0, r4, fp

0800b3e0 <StoreNetwork::SaveDhcp(bool)>:
 800b3e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3e2:	2301      	movs	r3, #1
 800b3e4:	f88d 1017 	strb.w	r1, [sp, #23]
 800b3e8:	2100      	movs	r1, #0
 800b3ea:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b3ee:	4805      	ldr	r0, [pc, #20]	; (800b404 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800b3f0:	9300      	str	r3, [sp, #0]
 800b3f2:	2214      	movs	r2, #20
 800b3f4:	6800      	ldr	r0, [r0, #0]
 800b3f6:	f10d 0317 	add.w	r3, sp, #23
 800b3fa:	f7ff fe71 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b3fe:	b007      	add	sp, #28
 800b400:	f85d fb04 	ldr.w	pc, [sp], #4
 800b404:	20001b94 	mulcs	r0, r4, fp

0800b408 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800b408:	f1a0 0004 	sub.w	r0, r0, #4
 800b40c:	e7e8      	b.n	800b3e0 <StoreNetwork::SaveDhcp(bool)>
 800b40e:	bf00      	nop

0800b410 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800b410:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b412:	2308      	movs	r3, #8
 800b414:	9105      	str	r1, [sp, #20]
 800b416:	2100      	movs	r1, #0
 800b418:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b41c:	2304      	movs	r3, #4
 800b41e:	4805      	ldr	r0, [pc, #20]	; (800b434 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800b420:	9300      	str	r3, [sp, #0]
 800b422:	220c      	movs	r2, #12
 800b424:	6800      	ldr	r0, [r0, #0]
 800b426:	ab05      	add	r3, sp, #20
 800b428:	f7ff fe5a 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b42c:	b007      	add	sp, #28
 800b42e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b432:	bf00      	nop
 800b434:	20001b94 	mulcs	r0, r4, fp

0800b438 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800b438:	f1a0 0004 	sub.w	r0, r0, #4
 800b43c:	e7e8      	b.n	800b410 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800b43e:	bf00      	nop

0800b440 <StoreNetwork::SaveNetMask(unsigned int)>:
 800b440:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b442:	2304      	movs	r3, #4
 800b444:	9105      	str	r1, [sp, #20]
 800b446:	2100      	movs	r1, #0
 800b448:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b44c:	4804      	ldr	r0, [pc, #16]	; (800b460 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800b44e:	9300      	str	r3, [sp, #0]
 800b450:	2208      	movs	r2, #8
 800b452:	6800      	ldr	r0, [r0, #0]
 800b454:	ab05      	add	r3, sp, #20
 800b456:	f7ff fe43 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b45a:	b007      	add	sp, #28
 800b45c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b460:	20001b94 	mulcs	r0, r4, fp

0800b464 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800b464:	f1a0 0004 	sub.w	r0, r0, #4
 800b468:	e7ea      	b.n	800b440 <StoreNetwork::SaveNetMask(unsigned int)>
 800b46a:	bf00      	nop

0800b46c <StoreNetwork::SaveIp(unsigned int)>:
 800b46c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b46e:	2302      	movs	r3, #2
 800b470:	9105      	str	r1, [sp, #20]
 800b472:	2100      	movs	r1, #0
 800b474:	2204      	movs	r2, #4
 800b476:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b47a:	4804      	ldr	r0, [pc, #16]	; (800b48c <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800b47c:	9200      	str	r2, [sp, #0]
 800b47e:	6800      	ldr	r0, [r0, #0]
 800b480:	ab05      	add	r3, sp, #20
 800b482:	f7ff fe2d 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b486:	b007      	add	sp, #28
 800b488:	f85d fb04 	ldr.w	pc, [sp], #4
 800b48c:	20001b94 	mulcs	r0, r4, fp

0800b490 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800b490:	f1a0 0004 	sub.w	r0, r0, #4
 800b494:	e7ea      	b.n	800b46c <StoreNetwork::SaveIp(unsigned int)>
 800b496:	bf00      	nop

0800b498 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800b498:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b49a:	460b      	mov	r3, r1
 800b49c:	2020      	movs	r0, #32
 800b49e:	2100      	movs	r1, #0
 800b4a0:	2a40      	cmp	r2, #64	; 0x40
 800b4a2:	bf28      	it	cs
 800b4a4:	2240      	movcs	r2, #64	; 0x40
 800b4a6:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800b4aa:	4804      	ldr	r0, [pc, #16]	; (800b4bc <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800b4ac:	9200      	str	r2, [sp, #0]
 800b4ae:	6800      	ldr	r0, [r0, #0]
 800b4b0:	2215      	movs	r2, #21
 800b4b2:	f7ff fe15 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b4b6:	b005      	add	sp, #20
 800b4b8:	f85d fb04 	ldr.w	pc, [sp], #4
 800b4bc:	20001b94 	mulcs	r0, r4, fp

0800b4c0 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800b4c0:	f1a0 0004 	sub.w	r0, r0, #4
 800b4c4:	e7e8      	b.n	800b498 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800b4c6:	bf00      	nop

0800b4c8 <StoreNetwork::~StoreNetwork()>:
 800b4c8:	b510      	push	{r4, lr}
 800b4ca:	4604      	mov	r4, r0
 800b4cc:	f004 f85e 	bl	800f58c <operator delete(void*)>
 800b4d0:	4620      	mov	r0, r4
 800b4d2:	bd10      	pop	{r4, pc}

0800b4d4 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800b4d4:	f1a0 0004 	sub.w	r0, r0, #4
 800b4d8:	e7f6      	b.n	800b4c8 <StoreNetwork::~StoreNetwork()>
	...

0800b4dc <StoreNetwork::Copy(TNetworkParams*)>:
 800b4dc:	b507      	push	{r0, r1, r2, lr}
 800b4de:	460a      	mov	r2, r1
 800b4e0:	2100      	movs	r1, #0
 800b4e2:	4804      	ldr	r0, [pc, #16]	; (800b4f4 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800b4e4:	9100      	str	r1, [sp, #0]
 800b4e6:	235e      	movs	r3, #94	; 0x5e
 800b4e8:	6800      	ldr	r0, [r0, #0]
 800b4ea:	f7ff fe39 	bl	800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b4ee:	b003      	add	sp, #12
 800b4f0:	f85d fb04 	ldr.w	pc, [sp], #4
 800b4f4:	20001b94 	mulcs	r0, r4, fp

0800b4f8 <StoreNetwork::StoreNetwork()>:
 800b4f8:	4a03      	ldr	r2, [pc, #12]	; (800b508 <StoreNetwork::StoreNetwork()+0x10>)
 800b4fa:	6002      	str	r2, [r0, #0]
 800b4fc:	322c      	adds	r2, #44	; 0x2c
 800b4fe:	6042      	str	r2, [r0, #4]
 800b500:	4a02      	ldr	r2, [pc, #8]	; (800b50c <StoreNetwork::StoreNetwork()+0x14>)
 800b502:	6010      	str	r0, [r2, #0]
 800b504:	4770      	bx	lr
 800b506:	bf00      	nop
 800b508:	08012f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, sp}
 800b50c:	20001ba8 	andcs	r1, r0, r8, lsr #23

0800b510 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800b510:	4770      	bx	lr
	...

0800b514 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800b514:	2300      	movs	r3, #0
 800b516:	b507      	push	{r0, r1, r2, lr}
 800b518:	4805      	ldr	r0, [pc, #20]	; (800b530 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800b51a:	9300      	str	r3, [sp, #0]
 800b51c:	460a      	mov	r2, r1
 800b51e:	2320      	movs	r3, #32
 800b520:	210c      	movs	r1, #12
 800b522:	6800      	ldr	r0, [r0, #0]
 800b524:	f7ff fe1c 	bl	800b160 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b528:	b003      	add	sp, #12
 800b52a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b52e:	bf00      	nop
 800b530:	20001b94 	mulcs	r0, r4, fp

0800b534 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800b534:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b536:	2200      	movs	r2, #0
 800b538:	460b      	mov	r3, r1
 800b53a:	2120      	movs	r1, #32
 800b53c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b540:	4804      	ldr	r0, [pc, #16]	; (800b554 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800b542:	9100      	str	r1, [sp, #0]
 800b544:	6800      	ldr	r0, [r0, #0]
 800b546:	210c      	movs	r1, #12
 800b548:	f7ff fdca 	bl	800b0e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b54c:	b005      	add	sp, #20
 800b54e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b552:	bf00      	nop
 800b554:	20001b94 	mulcs	r0, r4, fp

0800b558 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800b558:	b510      	push	{r4, lr}
 800b55a:	4604      	mov	r4, r0
 800b55c:	f004 f816 	bl	800f58c <operator delete(void*)>
 800b560:	4620      	mov	r0, r4
 800b562:	bd10      	pop	{r4, pc}

0800b564 <StoreRemoteConfig::StoreRemoteConfig()>:
 800b564:	4a02      	ldr	r2, [pc, #8]	; (800b570 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800b566:	6002      	str	r2, [r0, #0]
 800b568:	4a02      	ldr	r2, [pc, #8]	; (800b574 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800b56a:	6010      	str	r0, [r2, #0]
 800b56c:	4770      	bx	lr
 800b56e:	bf00      	nop
 800b570:	08012f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp, sp}
 800b574:	20001bac 	andcs	r1, r0, ip, lsr #23

0800b578 <FlashRom::FlashRom()>:
 800b578:	4b08      	ldr	r3, [pc, #32]	; (800b59c <FlashRom::FlashRom()+0x24>)
 800b57a:	b510      	push	{r4, lr}
 800b57c:	6018      	str	r0, [r3, #0]
 800b57e:	2301      	movs	r3, #1
 800b580:	4604      	mov	r4, r0
 800b582:	7003      	strb	r3, [r0, #0]
 800b584:	4b06      	ldr	r3, [pc, #24]	; (800b5a0 <FlashRom::FlashRom()+0x28>)
 800b586:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800b58a:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b58e:	4905      	ldr	r1, [pc, #20]	; (800b5a4 <FlashRom::FlashRom()+0x2c>)
 800b590:	029b      	lsls	r3, r3, #10
 800b592:	4805      	ldr	r0, [pc, #20]	; (800b5a8 <FlashRom::FlashRom()+0x30>)
 800b594:	f004 faf6 	bl	800fb84 <printf>
 800b598:	4620      	mov	r0, r4
 800b59a:	bd10      	pop	{r4, pc}
 800b59c:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b5a0:	1ffff700 	svcne	0x00fff700
 800b5a4:	08012fa8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, fp, sp}
 800b5a8:	08012fad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, fp, sp}

0800b5ac <FlashRom::GetSize()>:
 800b5ac:	4b02      	ldr	r3, [pc, #8]	; (800b5b8 <FlashRom::GetSize()+0xc>)
 800b5ae:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800b5b2:	0280      	lsls	r0, r0, #10
 800b5b4:	4770      	bx	lr
 800b5b6:	bf00      	nop
 800b5b8:	1ffff700 	svcne	0x00fff700

0800b5bc <FlashRom::GetSectorSize()>:
 800b5bc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800b5c0:	4770      	bx	lr

0800b5c2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800b5c2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b5c6:	441a      	add	r2, r3
 800b5c8:	4293      	cmp	r3, r2
 800b5ca:	d004      	beq.n	800b5d6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800b5cc:	f851 0b04 	ldr.w	r0, [r1], #4
 800b5d0:	f843 0b04 	str.w	r0, [r3], #4
 800b5d4:	e7f8      	b.n	800b5c8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800b5d6:	2200      	movs	r2, #0
 800b5d8:	9b00      	ldr	r3, [sp, #0]
 800b5da:	2001      	movs	r0, #1
 800b5dc:	601a      	str	r2, [r3, #0]
 800b5de:	4770      	bx	lr

0800b5e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800b5e0:	2000      	movs	r0, #0
 800b5e2:	b538      	push	{r3, r4, r5, lr}
 800b5e4:	4c47      	ldr	r4, [pc, #284]	; (800b704 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800b5e6:	6018      	str	r0, [r3, #0]
 800b5e8:	6823      	ldr	r3, [r4, #0]
 800b5ea:	2b04      	cmp	r3, #4
 800b5ec:	f200 8082 	bhi.w	800b6f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800b5f0:	e8df f003 	tbb	[pc, r3]
 800b5f4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800b5f8:	4b430080 	blmi	90cb800 <__exidx_end+0x10b7f58>
 800b5fc:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b600:	6019      	str	r1, [r3, #0]
 800b602:	4b42      	ldr	r3, [pc, #264]	; (800b70c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b604:	601a      	str	r2, [r3, #0]
 800b606:	4b42      	ldr	r3, [pc, #264]	; (800b710 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800b608:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b60c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b610:	4b40      	ldr	r3, [pc, #256]	; (800b714 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b612:	d807      	bhi.n	800b624 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800b614:	2201      	movs	r2, #1
 800b616:	701a      	strb	r2, [r3, #0]
 800b618:	f004 fd4a 	bl	80100b0 <fmc_bank0_unlock>
 800b61c:	2301      	movs	r3, #1
 800b61e:	6023      	str	r3, [r4, #0]
 800b620:	2000      	movs	r0, #0
 800b622:	e026      	b.n	800b672 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800b624:	4a3c      	ldr	r2, [pc, #240]	; (800b718 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800b626:	4291      	cmp	r1, r2
 800b628:	d3f4      	bcc.n	800b614 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800b62a:	2200      	movs	r2, #0
 800b62c:	701a      	strb	r2, [r3, #0]
 800b62e:	f004 fd4d 	bl	80100cc <fmc_bank1_unlock>
 800b632:	e7f3      	b.n	800b61c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b634:	4d37      	ldr	r5, [pc, #220]	; (800b714 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b636:	782b      	ldrb	r3, [r5, #0]
 800b638:	b15b      	cbz	r3, 800b652 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800b63a:	f004 fd65 	bl	8010108 <fmc_bank0_state_get>
 800b63e:	2801      	cmp	r0, #1
 800b640:	d0ee      	beq.n	800b620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800b642:	7829      	ldrb	r1, [r5, #0]
 800b644:	4b35      	ldr	r3, [pc, #212]	; (800b71c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b646:	b939      	cbnz	r1, 800b658 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800b648:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b64a:	f022 0202 	bic.w	r2, r2, #2
 800b64e:	651a      	str	r2, [r3, #80]	; 0x50
 800b650:	e006      	b.n	800b660 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800b652:	f004 fd6d 	bl	8010130 <fmc_bank1_state_get>
 800b656:	e7f2      	b.n	800b63e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800b658:	691a      	ldr	r2, [r3, #16]
 800b65a:	f022 0202 	bic.w	r2, r2, #2
 800b65e:	611a      	str	r2, [r3, #16]
 800b660:	4b2a      	ldr	r3, [pc, #168]	; (800b70c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b662:	681b      	ldr	r3, [r3, #0]
 800b664:	b94b      	cbnz	r3, 800b67a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800b666:	b129      	cbz	r1, 800b674 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800b668:	f004 fd3e 	bl	80100e8 <fmc_bank0_lock>
 800b66c:	2300      	movs	r3, #0
 800b66e:	2001      	movs	r0, #1
 800b670:	6023      	str	r3, [r4, #0]
 800b672:	bd38      	pop	{r3, r4, r5, pc}
 800b674:	f004 fd40 	bl	80100f8 <fmc_bank1_lock>
 800b678:	e7f8      	b.n	800b66c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800b67a:	2302      	movs	r3, #2
 800b67c:	e7cf      	b.n	800b61e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800b67e:	4923      	ldr	r1, [pc, #140]	; (800b70c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b680:	680b      	ldr	r3, [r1, #0]
 800b682:	2b00      	cmp	r3, #0
 800b684:	d0ca      	beq.n	800b61c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b686:	4b23      	ldr	r3, [pc, #140]	; (800b714 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b688:	4a1f      	ldr	r2, [pc, #124]	; (800b708 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800b68a:	7818      	ldrb	r0, [r3, #0]
 800b68c:	4b23      	ldr	r3, [pc, #140]	; (800b71c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b68e:	b190      	cbz	r0, 800b6b6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800b690:	6918      	ldr	r0, [r3, #16]
 800b692:	f040 0002 	orr.w	r0, r0, #2
 800b696:	6118      	str	r0, [r3, #16]
 800b698:	6810      	ldr	r0, [r2, #0]
 800b69a:	6158      	str	r0, [r3, #20]
 800b69c:	6918      	ldr	r0, [r3, #16]
 800b69e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800b6a2:	6118      	str	r0, [r3, #16]
 800b6a4:	680b      	ldr	r3, [r1, #0]
 800b6a6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800b6aa:	600b      	str	r3, [r1, #0]
 800b6ac:	6813      	ldr	r3, [r2, #0]
 800b6ae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800b6b2:	6013      	str	r3, [r2, #0]
 800b6b4:	e7b2      	b.n	800b61c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b6b6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800b6b8:	f040 0002 	orr.w	r0, r0, #2
 800b6bc:	6518      	str	r0, [r3, #80]	; 0x50
 800b6be:	6810      	ldr	r0, [r2, #0]
 800b6c0:	6558      	str	r0, [r3, #84]	; 0x54
 800b6c2:	69dd      	ldr	r5, [r3, #28]
 800b6c4:	07ad      	lsls	r5, r5, #30
 800b6c6:	bf48      	it	mi
 800b6c8:	6158      	strmi	r0, [r3, #20]
 800b6ca:	4814      	ldr	r0, [pc, #80]	; (800b71c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b6cc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b6ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b6d2:	6503      	str	r3, [r0, #80]	; 0x50
 800b6d4:	680b      	ldr	r3, [r1, #0]
 800b6d6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800b6da:	600b      	str	r3, [r1, #0]
 800b6dc:	6813      	ldr	r3, [r2, #0]
 800b6de:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800b6e2:	e7e6      	b.n	800b6b2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800b6e4:	4b0b      	ldr	r3, [pc, #44]	; (800b714 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b6e6:	781a      	ldrb	r2, [r3, #0]
 800b6e8:	4b0c      	ldr	r3, [pc, #48]	; (800b71c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b6ea:	b132      	cbz	r2, 800b6fa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800b6ec:	691a      	ldr	r2, [r3, #16]
 800b6ee:	f022 0201 	bic.w	r2, r2, #1
 800b6f2:	611a      	str	r2, [r3, #16]
 800b6f4:	2000      	movs	r0, #0
 800b6f6:	6020      	str	r0, [r4, #0]
 800b6f8:	e7bb      	b.n	800b672 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800b6fa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b6fc:	f022 0201 	bic.w	r2, r2, #1
 800b700:	651a      	str	r2, [r3, #80]	; 0x50
 800b702:	e7f7      	b.n	800b6f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800b704:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800b708:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800b70c:	20001bc8 	andcs	r1, r0, r8, asr #23
 800b710:	1ffff700 	svcne	0x00fff700
 800b714:	20001bc4 	andcs	r1, r0, r4, asr #23
 800b718:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800b71c:	40022000 	andmi	r2, r2, r0

0800b720 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800b720:	b570      	push	{r4, r5, r6, lr}
 800b722:	2400      	movs	r4, #0
 800b724:	9804      	ldr	r0, [sp, #16]
 800b726:	6004      	str	r4, [r0, #0]
 800b728:	4c48      	ldr	r4, [pc, #288]	; (800b84c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800b72a:	6820      	ldr	r0, [r4, #0]
 800b72c:	2804      	cmp	r0, #4
 800b72e:	d848      	bhi.n	800b7c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800b730:	e8df f000 	tbb	[pc, r0]
 800b734:	22847c03 	addcs	r7, r4, #768	; 0x300
 800b738:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800b73c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b740:	6001      	str	r1, [r0, #0]
 800b742:	4844      	ldr	r0, [pc, #272]	; (800b854 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b744:	6003      	str	r3, [r0, #0]
 800b746:	4b44      	ldr	r3, [pc, #272]	; (800b858 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b748:	601a      	str	r2, [r3, #0]
 800b74a:	4b44      	ldr	r3, [pc, #272]	; (800b85c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800b74c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b750:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b754:	4b42      	ldr	r3, [pc, #264]	; (800b860 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b756:	d807      	bhi.n	800b768 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800b758:	2201      	movs	r2, #1
 800b75a:	701a      	strb	r2, [r3, #0]
 800b75c:	f004 fca8 	bl	80100b0 <fmc_bank0_unlock>
 800b760:	2303      	movs	r3, #3
 800b762:	6023      	str	r3, [r4, #0]
 800b764:	2000      	movs	r0, #0
 800b766:	e026      	b.n	800b7b6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800b768:	4a3e      	ldr	r2, [pc, #248]	; (800b864 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800b76a:	4291      	cmp	r1, r2
 800b76c:	d3f4      	bcc.n	800b758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800b76e:	2200      	movs	r2, #0
 800b770:	701a      	strb	r2, [r3, #0]
 800b772:	f004 fcab 	bl	80100cc <fmc_bank1_unlock>
 800b776:	e7f3      	b.n	800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b778:	4d39      	ldr	r5, [pc, #228]	; (800b860 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b77a:	782b      	ldrb	r3, [r5, #0]
 800b77c:	b15b      	cbz	r3, 800b796 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800b77e:	f004 fcc3 	bl	8010108 <fmc_bank0_state_get>
 800b782:	2801      	cmp	r0, #1
 800b784:	d0ee      	beq.n	800b764 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800b786:	7829      	ldrb	r1, [r5, #0]
 800b788:	4b37      	ldr	r3, [pc, #220]	; (800b868 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b78a:	b939      	cbnz	r1, 800b79c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800b78c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b78e:	f022 0201 	bic.w	r2, r2, #1
 800b792:	651a      	str	r2, [r3, #80]	; 0x50
 800b794:	e006      	b.n	800b7a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800b796:	f004 fccb 	bl	8010130 <fmc_bank1_state_get>
 800b79a:	e7f2      	b.n	800b782 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800b79c:	691a      	ldr	r2, [r3, #16]
 800b79e:	f022 0201 	bic.w	r2, r2, #1
 800b7a2:	611a      	str	r2, [r3, #16]
 800b7a4:	4b2c      	ldr	r3, [pc, #176]	; (800b858 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b7a6:	681b      	ldr	r3, [r3, #0]
 800b7a8:	b94b      	cbnz	r3, 800b7be <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800b7aa:	b129      	cbz	r1, 800b7b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800b7ac:	f004 fc9c 	bl	80100e8 <fmc_bank0_lock>
 800b7b0:	2300      	movs	r3, #0
 800b7b2:	2001      	movs	r0, #1
 800b7b4:	6023      	str	r3, [r4, #0]
 800b7b6:	bd70      	pop	{r4, r5, r6, pc}
 800b7b8:	f004 fc9e 	bl	80100f8 <fmc_bank1_lock>
 800b7bc:	e7f8      	b.n	800b7b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800b7be:	2304      	movs	r3, #4
 800b7c0:	e7cf      	b.n	800b762 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800b7c2:	4a25      	ldr	r2, [pc, #148]	; (800b858 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b7c4:	6813      	ldr	r3, [r2, #0]
 800b7c6:	2b03      	cmp	r3, #3
 800b7c8:	d91a      	bls.n	800b800 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800b7ca:	4b25      	ldr	r3, [pc, #148]	; (800b860 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b7cc:	7819      	ldrb	r1, [r3, #0]
 800b7ce:	4b26      	ldr	r3, [pc, #152]	; (800b868 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b7d0:	b189      	cbz	r1, 800b7f6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800b7d2:	6919      	ldr	r1, [r3, #16]
 800b7d4:	f041 0101 	orr.w	r1, r1, #1
 800b7d8:	6119      	str	r1, [r3, #16]
 800b7da:	4d1e      	ldr	r5, [pc, #120]	; (800b854 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b7dc:	481c      	ldr	r0, [pc, #112]	; (800b850 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800b7de:	6829      	ldr	r1, [r5, #0]
 800b7e0:	6803      	ldr	r3, [r0, #0]
 800b7e2:	f851 6b04 	ldr.w	r6, [r1], #4
 800b7e6:	f843 6b04 	str.w	r6, [r3], #4
 800b7ea:	6003      	str	r3, [r0, #0]
 800b7ec:	6813      	ldr	r3, [r2, #0]
 800b7ee:	6029      	str	r1, [r5, #0]
 800b7f0:	3b04      	subs	r3, #4
 800b7f2:	6013      	str	r3, [r2, #0]
 800b7f4:	e7b4      	b.n	800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b7f6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800b7f8:	f041 0101 	orr.w	r1, r1, #1
 800b7fc:	6519      	str	r1, [r3, #80]	; 0x50
 800b7fe:	e7ec      	b.n	800b7da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800b800:	2b00      	cmp	r3, #0
 800b802:	d0ad      	beq.n	800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b804:	4b16      	ldr	r3, [pc, #88]	; (800b860 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b806:	781a      	ldrb	r2, [r3, #0]
 800b808:	4b17      	ldr	r3, [pc, #92]	; (800b868 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b80a:	b152      	cbz	r2, 800b822 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800b80c:	691a      	ldr	r2, [r3, #16]
 800b80e:	f042 0201 	orr.w	r2, r2, #1
 800b812:	611a      	str	r2, [r3, #16]
 800b814:	4a0f      	ldr	r2, [pc, #60]	; (800b854 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b816:	4b0e      	ldr	r3, [pc, #56]	; (800b850 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800b818:	6812      	ldr	r2, [r2, #0]
 800b81a:	681b      	ldr	r3, [r3, #0]
 800b81c:	6812      	ldr	r2, [r2, #0]
 800b81e:	601a      	str	r2, [r3, #0]
 800b820:	e79e      	b.n	800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b822:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b824:	f042 0201 	orr.w	r2, r2, #1
 800b828:	651a      	str	r2, [r3, #80]	; 0x50
 800b82a:	e7f3      	b.n	800b814 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800b82c:	4b0c      	ldr	r3, [pc, #48]	; (800b860 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b82e:	781a      	ldrb	r2, [r3, #0]
 800b830:	4b0d      	ldr	r3, [pc, #52]	; (800b868 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b832:	b132      	cbz	r2, 800b842 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800b834:	691a      	ldr	r2, [r3, #16]
 800b836:	f022 0202 	bic.w	r2, r2, #2
 800b83a:	611a      	str	r2, [r3, #16]
 800b83c:	2000      	movs	r0, #0
 800b83e:	6020      	str	r0, [r4, #0]
 800b840:	e7b9      	b.n	800b7b6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800b842:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b844:	f022 0202 	bic.w	r2, r2, #2
 800b848:	651a      	str	r2, [r3, #80]	; 0x50
 800b84a:	e7f7      	b.n	800b83c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800b84c:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800b850:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800b854:	20001bc0 	andcs	r1, r0, r0, asr #23
 800b858:	20001bc8 	andcs	r1, r0, r8, asr #23
 800b85c:	1ffff700 	svcne	0x00fff700
 800b860:	20001bc4 	andcs	r1, r0, r4, asr #23
 800b864:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800b868:	40022000 	andmi	r2, r2, r0

0800b86c <net_init>:
 800b86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b870:	460c      	mov	r4, r1
 800b872:	4616      	mov	r6, r2
 800b874:	9f06      	ldr	r7, [sp, #24]
 800b876:	4a22      	ldr	r2, [pc, #136]	; (800b900 <net_init+0x94>)
 800b878:	461d      	mov	r5, r3
 800b87a:	1e43      	subs	r3, r0, #1
 800b87c:	3005      	adds	r0, #5
 800b87e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b882:	4283      	cmp	r3, r0
 800b884:	f802 1b01 	strb.w	r1, [r2], #1
 800b888:	d1f9      	bne.n	800b87e <net_init+0x12>
 800b88a:	4623      	mov	r3, r4
 800b88c:	4a1d      	ldr	r2, [pc, #116]	; (800b904 <net_init+0x98>)
 800b88e:	f104 010c 	add.w	r1, r4, #12
 800b892:	f813 0b01 	ldrb.w	r0, [r3], #1
 800b896:	428b      	cmp	r3, r1
 800b898:	f802 0b01 	strb.w	r0, [r2], #1
 800b89c:	d1f9      	bne.n	800b892 <net_init+0x26>
 800b89e:	f04f 0800 	mov.w	r8, #0
 800b8a2:	4918      	ldr	r1, [pc, #96]	; (800b904 <net_init+0x98>)
 800b8a4:	4816      	ldr	r0, [pc, #88]	; (800b900 <net_init+0x94>)
 800b8a6:	f002 fb68 	bl	800df7a <ip_init>
 800b8aa:	4815      	ldr	r0, [pc, #84]	; (800b900 <net_init+0x94>)
 800b8ac:	f000 f868 	bl	800b980 <rfc3927_init>
 800b8b0:	f887 8000 	strb.w	r8, [r7]
 800b8b4:	782b      	ldrb	r3, [r5, #0]
 800b8b6:	b163      	cbz	r3, 800b8d2 <net_init+0x66>
 800b8b8:	4632      	mov	r2, r6
 800b8ba:	4912      	ldr	r1, [pc, #72]	; (800b904 <net_init+0x98>)
 800b8bc:	4810      	ldr	r0, [pc, #64]	; (800b900 <net_init+0x94>)
 800b8be:	f002 f86d 	bl	800d99c <dhcp_client>
 800b8c2:	4540      	cmp	r0, r8
 800b8c4:	da05      	bge.n	800b8d2 <net_init+0x66>
 800b8c6:	480f      	ldr	r0, [pc, #60]	; (800b904 <net_init+0x98>)
 800b8c8:	f885 8000 	strb.w	r8, [r5]
 800b8cc:	f000 f864 	bl	800b998 <rfc3927>
 800b8d0:	7038      	strb	r0, [r7, #0]
 800b8d2:	490c      	ldr	r1, [pc, #48]	; (800b904 <net_init+0x98>)
 800b8d4:	480a      	ldr	r0, [pc, #40]	; (800b900 <net_init+0x94>)
 800b8d6:	f001 fe71 	bl	800d5bc <arp_init>
 800b8da:	480a      	ldr	r0, [pc, #40]	; (800b904 <net_init+0x98>)
 800b8dc:	f002 fb44 	bl	800df68 <ip_set_ip>
 800b8e0:	f000 f9c2 	bl	800bc68 <tcp_init>
 800b8e4:	4a07      	ldr	r2, [pc, #28]	; (800b904 <net_init+0x98>)
 800b8e6:	1e63      	subs	r3, r4, #1
 800b8e8:	340b      	adds	r4, #11
 800b8ea:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b8ee:	f803 1f01 	strb.w	r1, [r3, #1]!
 800b8f2:	429c      	cmp	r4, r3
 800b8f4:	d1f9      	bne.n	800b8ea <net_init+0x7e>
 800b8f6:	782a      	ldrb	r2, [r5, #0]
 800b8f8:	4b03      	ldr	r3, [pc, #12]	; (800b908 <net_init+0x9c>)
 800b8fa:	701a      	strb	r2, [r3, #0]
 800b8fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b900:	20001bd8 	ldrdcs	r1, [r0], -r8
 800b904:	20001bcc 	andcs	r1, r0, ip, asr #23
 800b908:	20001bde 	ldrdcs	r1, [r0], -lr

0800b90c <net_shutdown>:
 800b90c:	b508      	push	{r3, lr}
 800b90e:	f002 fb3f 	bl	800df90 <ip_shutdown>
 800b912:	4b04      	ldr	r3, [pc, #16]	; (800b924 <net_shutdown+0x18>)
 800b914:	781b      	ldrb	r3, [r3, #0]
 800b916:	b11b      	cbz	r3, 800b920 <net_shutdown+0x14>
 800b918:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b91c:	f002 b946 	b.w	800dbac <dhcp_client_release>
 800b920:	bd08      	pop	{r3, pc}
 800b922:	bf00      	nop
 800b924:	20001bde 	ldrdcs	r1, [r0], -lr

0800b928 <net_handle>:
 800b928:	b510      	push	{r4, lr}
 800b92a:	4c0c      	ldr	r4, [pc, #48]	; (800b95c <net_handle+0x34>)
 800b92c:	4620      	mov	r0, r4
 800b92e:	f005 f89f 	bl	8010a70 <emac_eth_recv>
 800b932:	2800      	cmp	r0, #0
 800b934:	dd07      	ble.n	800b946 <net_handle+0x1e>
 800b936:	6820      	ldr	r0, [r4, #0]
 800b938:	8983      	ldrh	r3, [r0, #12]
 800b93a:	2b08      	cmp	r3, #8
 800b93c:	d107      	bne.n	800b94e <net_handle+0x26>
 800b93e:	f002 fb2e 	bl	800df9e <ip_handle>
 800b942:	f005 f8a9 	bl	8010a98 <emac_free_pkt>
 800b946:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b94a:	f000 b809 	b.w	800b960 <net_timers_run>
 800b94e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800b952:	d1f6      	bne.n	800b942 <net_handle+0x1a>
 800b954:	f001 feb8 	bl	800d6c8 <arp_handle>
 800b958:	e7f3      	b.n	800b942 <net_handle+0x1a>
 800b95a:	bf00      	nop
 800b95c:	20001be0 	andcs	r1, r0, r0, ror #23

0800b960 <net_timers_run>:
 800b960:	4b05      	ldr	r3, [pc, #20]	; (800b978 <net_timers_run+0x18>)
 800b962:	4a06      	ldr	r2, [pc, #24]	; (800b97c <net_timers_run+0x1c>)
 800b964:	681b      	ldr	r3, [r3, #0]
 800b966:	6811      	ldr	r1, [r2, #0]
 800b968:	4299      	cmp	r1, r3
 800b96a:	d803      	bhi.n	800b974 <net_timers_run+0x14>
 800b96c:	3364      	adds	r3, #100	; 0x64
 800b96e:	6013      	str	r3, [r2, #0]
 800b970:	f002 ba5c 	b.w	800de2c <igmp_timer>
 800b974:	4770      	bx	lr
 800b976:	bf00      	nop
 800b978:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b97c:	20001be4 	andcs	r1, r0, r4, ror #23

0800b980 <rfc3927_init>:
 800b980:	4b04      	ldr	r3, [pc, #16]	; (800b994 <rfc3927_init+0x14>)
 800b982:	1d82      	adds	r2, r0, #6
 800b984:	4290      	cmp	r0, r2
 800b986:	d100      	bne.n	800b98a <rfc3927_init+0xa>
 800b988:	4770      	bx	lr
 800b98a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800b98e:	f803 1b01 	strb.w	r1, [r3], #1
 800b992:	e7f7      	b.n	800b984 <rfc3927_init+0x4>
 800b994:	20001be8 	andcs	r1, r0, r8, ror #23

0800b998 <rfc3927>:
 800b998:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b99c:	4605      	mov	r5, r0
 800b99e:	26ff      	movs	r6, #255	; 0xff
 800b9a0:	4b18      	ldr	r3, [pc, #96]	; (800ba04 <rfc3927+0x6c>)
 800b9a2:	4f19      	ldr	r7, [pc, #100]	; (800ba08 <rfc3927+0x70>)
 800b9a4:	791a      	ldrb	r2, [r3, #4]
 800b9a6:	78dc      	ldrb	r4, [r3, #3]
 800b9a8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ba0c <rfc3927+0x74>
 800b9ac:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800b9b0:	f8d7 9000 	ldr.w	r9, [r7]
 800b9b4:	f8df b058 	ldr.w	fp, [pc, #88]	; 800ba10 <rfc3927+0x78>
 800b9b8:	f8df a058 	ldr.w	sl, [pc, #88]	; 800ba14 <rfc3927+0x7c>
 800b9bc:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800b9c0:	4659      	mov	r1, fp
 800b9c2:	4620      	mov	r0, r4
 800b9c4:	f001 fece 	bl	800d764 <arp_cache_lookup>
 800b9c8:	b938      	cbnz	r0, 800b9da <rfc3927+0x42>
 800b9ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b9ce:	2001      	movs	r0, #1
 800b9d0:	602c      	str	r4, [r5, #0]
 800b9d2:	60ac      	str	r4, [r5, #8]
 800b9d4:	606b      	str	r3, [r5, #4]
 800b9d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9da:	ba24      	rev	r4, r4
 800b9dc:	3401      	adds	r4, #1
 800b9de:	3e01      	subs	r6, #1
 800b9e0:	ba24      	rev	r4, r4
 800b9e2:	b2b6      	uxth	r6, r6
 800b9e4:	4554      	cmp	r4, sl
 800b9e6:	bf08      	it	eq
 800b9e8:	4644      	moveq	r4, r8
 800b9ea:	b12e      	cbz	r6, 800b9f8 <rfc3927+0x60>
 800b9ec:	683b      	ldr	r3, [r7, #0]
 800b9ee:	eba3 0309 	sub.w	r3, r3, r9
 800b9f2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b9f6:	d3e3      	bcc.n	800b9c0 <rfc3927+0x28>
 800b9f8:	2000      	movs	r0, #0
 800b9fa:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800b9fe:	6028      	str	r0, [r5, #0]
 800ba00:	e7e9      	b.n	800b9d6 <rfc3927+0x3e>
 800ba02:	bf00      	nop
 800ba04:	20001be8 	andcs	r1, r0, r8, ror #23
 800ba08:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ba0c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800ba10:	20001bf0 	strdcs	r1, [r0], -r0
 800ba14:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800ba18 <_init_tcb>:
 800ba18:	b510      	push	{r4, lr}
 800ba1a:	4603      	mov	r3, r0
 800ba1c:	2400      	movs	r4, #0
 800ba1e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800ba22:	4293      	cmp	r3, r2
 800ba24:	d10d      	bne.n	800ba42 <_init_tcb+0x2a>
 800ba26:	4b08      	ldr	r3, [pc, #32]	; (800ba48 <_init_tcb+0x30>)
 800ba28:	f640 3268 	movw	r2, #2920	; 0xb68
 800ba2c:	681b      	ldr	r3, [r3, #0]
 800ba2e:	8702      	strh	r2, [r0, #56]	; 0x38
 800ba30:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ba34:	6283      	str	r3, [r0, #40]	; 0x28
 800ba36:	6243      	str	r3, [r0, #36]	; 0x24
 800ba38:	2301      	movs	r3, #1
 800ba3a:	8001      	strh	r1, [r0, #0]
 800ba3c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ba40:	bd10      	pop	{r4, pc}
 800ba42:	f803 4b01 	strb.w	r4, [r3], #1
 800ba46:	e7ec      	b.n	800ba22 <_init_tcb+0xa>
 800ba48:	20009bd4 	ldrdcs	r9, [r0], -r4

0800ba4c <memcpy.isra.0>:
 800ba4c:	3801      	subs	r0, #1
 800ba4e:	440a      	add	r2, r1
 800ba50:	4291      	cmp	r1, r2
 800ba52:	d100      	bne.n	800ba56 <memcpy.isra.0+0xa>
 800ba54:	4770      	bx	lr
 800ba56:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ba5a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ba5e:	e7f7      	b.n	800ba50 <memcpy.isra.0+0x4>

0800ba60 <_bswap32>:
 800ba60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba62:	2204      	movs	r2, #4
 800ba64:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800ba68:	4629      	mov	r1, r5
 800ba6a:	4604      	mov	r4, r0
 800ba6c:	eb0d 0002 	add.w	r0, sp, r2
 800ba70:	f7ff ffec 	bl	800ba4c <memcpy.isra.0>
 800ba74:	2204      	movs	r2, #4
 800ba76:	9b01      	ldr	r3, [sp, #4]
 800ba78:	eb0d 0102 	add.w	r1, sp, r2
 800ba7c:	ba1b      	rev	r3, r3
 800ba7e:	4628      	mov	r0, r5
 800ba80:	9301      	str	r3, [sp, #4]
 800ba82:	f7ff ffe3 	bl	800ba4c <memcpy.isra.0>
 800ba86:	2204      	movs	r2, #4
 800ba88:	3426      	adds	r4, #38	; 0x26
 800ba8a:	eb0d 0002 	add.w	r0, sp, r2
 800ba8e:	4621      	mov	r1, r4
 800ba90:	f7ff ffdc 	bl	800ba4c <memcpy.isra.0>
 800ba94:	2204      	movs	r2, #4
 800ba96:	9b01      	ldr	r3, [sp, #4]
 800ba98:	4620      	mov	r0, r4
 800ba9a:	ba1b      	rev	r3, r3
 800ba9c:	eb0d 0102 	add.w	r1, sp, r2
 800baa0:	9301      	str	r3, [sp, #4]
 800baa2:	f7ff ffd3 	bl	800ba4c <memcpy.isra.0>
 800baa6:	b003      	add	sp, #12
 800baa8:	bd30      	pop	{r4, r5, pc}
	...

0800baac <_tcp_send_package>:
 800baac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bab0:	7a0b      	ldrb	r3, [r1, #8]
 800bab2:	4605      	mov	r5, r0
 800bab4:	f013 0f02 	tst.w	r3, #2
 800bab8:	bf0c      	ite	eq
 800baba:	f04f 0905 	moveq.w	r9, #5
 800babe:	f04f 0906 	movne.w	r9, #6
 800bac2:	f04f 0800 	mov.w	r8, #0
 800bac6:	4c4b      	ldr	r4, [pc, #300]	; (800bbf4 <_tcp_send_package+0x148>)
 800bac8:	460f      	mov	r7, r1
 800baca:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800bacc:	f100 0108 	add.w	r1, r0, #8
 800bad0:	2206      	movs	r2, #6
 800bad2:	4620      	mov	r0, r4
 800bad4:	f7ff ffba 	bl	800ba4c <memcpy.isra.0>
 800bad8:	4a47      	ldr	r2, [pc, #284]	; (800bbf8 <_tcp_send_package+0x14c>)
 800bada:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800bade:	8813      	ldrh	r3, [r2, #0]
 800bae0:	b2b6      	uxth	r6, r6
 800bae2:	1c59      	adds	r1, r3, #1
 800bae4:	8263      	strh	r3, [r4, #18]
 800bae6:	f105 0a04 	add.w	sl, r5, #4
 800baea:	f106 0314 	add.w	r3, r6, #20
 800baee:	ba5b      	rev16	r3, r3
 800baf0:	8011      	strh	r1, [r2, #0]
 800baf2:	f104 001e 	add.w	r0, r4, #30
 800baf6:	2204      	movs	r2, #4
 800baf8:	4651      	mov	r1, sl
 800bafa:	8223      	strh	r3, [r4, #16]
 800bafc:	f7ff ffa6 	bl	800ba4c <memcpy.isra.0>
 800bb00:	2114      	movs	r1, #20
 800bb02:	f104 000e 	add.w	r0, r4, #14
 800bb06:	f884 8018 	strb.w	r8, [r4, #24]
 800bb0a:	f884 8019 	strb.w	r8, [r4, #25]
 800bb0e:	f002 fa5f 	bl	800dfd0 <net_chksum>
 800bb12:	882b      	ldrh	r3, [r5, #0]
 800bb14:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800bb18:	8463      	strh	r3, [r4, #34]	; 0x22
 800bb1a:	886b      	ldrh	r3, [r5, #2]
 800bb1c:	8320      	strh	r0, [r4, #24]
 800bb1e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bb20:	683b      	ldr	r3, [r7, #0]
 800bb22:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800bb24:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800bb2e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800bb32:	7a3b      	ldrb	r3, [r7, #8]
 800bb34:	8622      	strh	r2, [r4, #48]	; 0x30
 800bb36:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800bb3a:	079b      	lsls	r3, r3, #30
 800bb3c:	bf48      	it	mi
 800bb3e:	2302      	movmi	r3, #2
 800bb40:	8baa      	ldrh	r2, [r5, #28]
 800bb42:	bf44      	itt	mi
 800bb44:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800bb48:	2304      	movmi	r3, #4
 800bb4a:	86a2      	strh	r2, [r4, #52]	; 0x34
 800bb4c:	bf41      	itttt	mi
 800bb4e:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800bb52:	4622      	movmi	r2, r4
 800bb54:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800bb58:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800bb5c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800bb5e:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800bb62:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800bb66:	bf58      	it	pl
 800bb68:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	d13f      	bne.n	800bbf0 <_tcp_send_package+0x144>
 800bb70:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800bb72:	4820      	ldr	r0, [pc, #128]	; (800bbf4 <_tcp_send_package+0x148>)
 800bb74:	ba5b      	rev16	r3, r3
 800bb76:	8463      	strh	r3, [r4, #34]	; 0x22
 800bb78:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800bb7a:	ba5b      	rev16	r3, r3
 800bb7c:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bb7e:	f7ff ff6f 	bl	800ba60 <_bswap32>
 800bb82:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bb84:	a801      	add	r0, sp, #4
 800bb86:	ba5b      	rev16	r3, r3
 800bb88:	8623      	strh	r3, [r4, #48]	; 0x30
 800bb8a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bb8c:	220c      	movs	r2, #12
 800bb8e:	ba5b      	rev16	r3, r3
 800bb90:	491a      	ldr	r1, [pc, #104]	; (800bbfc <_tcp_send_package+0x150>)
 800bb92:	86a3      	strh	r3, [r4, #52]	; 0x34
 800bb94:	f7ff ff5a 	bl	800ba4c <memcpy.isra.0>
 800bb98:	2204      	movs	r2, #4
 800bb9a:	4919      	ldr	r1, [pc, #100]	; (800bc00 <_tcp_send_package+0x154>)
 800bb9c:	4817      	ldr	r0, [pc, #92]	; (800bbfc <_tcp_send_package+0x150>)
 800bb9e:	f7ff ff55 	bl	800ba4c <memcpy.isra.0>
 800bba2:	2204      	movs	r2, #4
 800bba4:	4651      	mov	r1, sl
 800bba6:	4817      	ldr	r0, [pc, #92]	; (800bc04 <_tcp_send_package+0x158>)
 800bba8:	f7ff ff50 	bl	800ba4c <memcpy.isra.0>
 800bbac:	2300      	movs	r3, #0
 800bbae:	77a3      	strb	r3, [r4, #30]
 800bbb0:	2306      	movs	r3, #6
 800bbb2:	f106 010c 	add.w	r1, r6, #12
 800bbb6:	77e3      	strb	r3, [r4, #31]
 800bbb8:	4810      	ldr	r0, [pc, #64]	; (800bbfc <_tcp_send_package+0x150>)
 800bbba:	ba73      	rev16	r3, r6
 800bbbc:	8423      	strh	r3, [r4, #32]
 800bbbe:	f002 fa07 	bl	800dfd0 <net_chksum>
 800bbc2:	a901      	add	r1, sp, #4
 800bbc4:	4605      	mov	r5, r0
 800bbc6:	220c      	movs	r2, #12
 800bbc8:	480c      	ldr	r0, [pc, #48]	; (800bbfc <_tcp_send_package+0x150>)
 800bbca:	f7ff ff3f 	bl	800ba4c <memcpy.isra.0>
 800bbce:	4809      	ldr	r0, [pc, #36]	; (800bbf4 <_tcp_send_package+0x148>)
 800bbd0:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800bbd4:	8665      	strh	r5, [r4, #50]	; 0x32
 800bbd6:	b004      	add	sp, #16
 800bbd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bbdc:	f004 bf60 	b.w	8010aa0 <emac_eth_send>
 800bbe0:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800bbe2:	5cc9      	ldrb	r1, [r1, r3]
 800bbe4:	54d1      	strb	r1, [r2, r3]
 800bbe6:	3301      	adds	r3, #1
 800bbe8:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800bbea:	4299      	cmp	r1, r3
 800bbec:	d8f8      	bhi.n	800bbe0 <_tcp_send_package+0x134>
 800bbee:	e7bf      	b.n	800bb70 <_tcp_send_package+0xc4>
 800bbf0:	2300      	movs	r3, #0
 800bbf2:	e7f9      	b.n	800bbe8 <_tcp_send_package+0x13c>
 800bbf4:	200027ac 	andcs	r2, r0, ip, lsr #15
 800bbf8:	20001bf6 	strdcs	r1, [r0], -r6
 800bbfc:	200027c2 	andcs	r2, r0, r2, asr #15
 800bc00:	20001bcc 	andcs	r1, r0, ip, asr #23
 800bc04:	200027c6 	andcs	r2, r0, r6, asr #15

0800bc08 <_send_reset>:
 800bc08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc0a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800bc0e:	4604      	mov	r4, r0
 800bc10:	075a      	lsls	r2, r3, #29
 800bc12:	460e      	mov	r6, r1
 800bc14:	d421      	bmi.n	800bc5a <_send_reset+0x52>
 800bc16:	2204      	movs	r2, #4
 800bc18:	f013 0310 	ands.w	r3, r3, #16
 800bc1c:	f88d 200c 	strb.w	r2, [sp, #12]
 800bc20:	d01d      	beq.n	800bc5e <_send_reset+0x56>
 800bc22:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800bc26:	4668      	mov	r0, sp
 800bc28:	f7ff ff10 	bl	800ba4c <memcpy.isra.0>
 800bc2c:	9b00      	ldr	r3, [sp, #0]
 800bc2e:	9301      	str	r3, [sp, #4]
 800bc30:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800bc34:	4668      	mov	r0, sp
 800bc36:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800bc3a:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800bc3e:	07db      	lsls	r3, r3, #31
 800bc40:	f04f 0204 	mov.w	r2, #4
 800bc44:	bf48      	it	mi
 800bc46:	3501      	addmi	r5, #1
 800bc48:	f7ff ff00 	bl	800ba4c <memcpy.isra.0>
 800bc4c:	9b00      	ldr	r3, [sp, #0]
 800bc4e:	4630      	mov	r0, r6
 800bc50:	441d      	add	r5, r3
 800bc52:	a901      	add	r1, sp, #4
 800bc54:	9502      	str	r5, [sp, #8]
 800bc56:	f7ff ff29 	bl	800baac <_tcp_send_package>
 800bc5a:	b004      	add	sp, #16
 800bc5c:	bd70      	pop	{r4, r5, r6, pc}
 800bc5e:	9301      	str	r3, [sp, #4]
 800bc60:	2314      	movs	r3, #20
 800bc62:	f88d 300c 	strb.w	r3, [sp, #12]
 800bc66:	e7e3      	b.n	800bc30 <_send_reset+0x28>

0800bc68 <tcp_init>:
 800bc68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc6a:	2206      	movs	r2, #6
 800bc6c:	4c0e      	ldr	r4, [pc, #56]	; (800bca8 <tcp_init+0x40>)
 800bc6e:	490f      	ldr	r1, [pc, #60]	; (800bcac <tcp_init+0x44>)
 800bc70:	18a0      	adds	r0, r4, r2
 800bc72:	f7ff feeb 	bl	800ba4c <memcpy.isra.0>
 800bc76:	2308      	movs	r3, #8
 800bc78:	2204      	movs	r2, #4
 800bc7a:	2500      	movs	r5, #0
 800bc7c:	7323      	strb	r3, [r4, #12]
 800bc7e:	4b0c      	ldr	r3, [pc, #48]	; (800bcb0 <tcp_init+0x48>)
 800bc80:	eb0d 0102 	add.w	r1, sp, r2
 800bc84:	681b      	ldr	r3, [r3, #0]
 800bc86:	f104 001a 	add.w	r0, r4, #26
 800bc8a:	9301      	str	r3, [sp, #4]
 800bc8c:	7365      	strb	r5, [r4, #13]
 800bc8e:	f7ff fedd 	bl	800ba4c <memcpy.isra.0>
 800bc92:	2345      	movs	r3, #69	; 0x45
 800bc94:	73a3      	strb	r3, [r4, #14]
 800bc96:	2340      	movs	r3, #64	; 0x40
 800bc98:	7523      	strb	r3, [r4, #20]
 800bc9a:	75a3      	strb	r3, [r4, #22]
 800bc9c:	2306      	movs	r3, #6
 800bc9e:	73e5      	strb	r5, [r4, #15]
 800bca0:	7565      	strb	r5, [r4, #21]
 800bca2:	75e3      	strb	r3, [r4, #23]
 800bca4:	b003      	add	sp, #12
 800bca6:	bd30      	pop	{r4, r5, pc}
 800bca8:	200027ac 	andcs	r2, r0, ip, lsr #15
 800bcac:	20001bd8 	ldrdcs	r1, [r0], -r8
 800bcb0:	20001bcc 	andcs	r1, r0, ip, asr #23

0800bcb4 <tcp_handle>:
 800bcb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcb8:	4605      	mov	r5, r0
 800bcba:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 800bcbc:	b085      	sub	sp, #20
 800bcbe:	ba5b      	rev16	r3, r3
 800bcc0:	8443      	strh	r3, [r0, #34]	; 0x22
 800bcc2:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800bcc4:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 800bcc8:	ba5b      	rev16	r3, r3
 800bcca:	8483      	strh	r3, [r0, #36]	; 0x24
 800bccc:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800bcd0:	f7ff fec6 	bl	800ba60 <_bswap32>
 800bcd4:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 800bcd6:	4ca6      	ldr	r4, [pc, #664]	; (800bf70 <tcp_handle+0x2bc>)
 800bcd8:	ba5b      	rev16	r3, r3
 800bcda:	862b      	strh	r3, [r5, #48]	; 0x30
 800bcdc:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800bcde:	8822      	ldrh	r2, [r4, #0]
 800bce0:	ba5b      	rev16	r3, r3
 800bce2:	86ab      	strh	r3, [r5, #52]	; 0x34
 800bce4:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 800bce6:	429a      	cmp	r2, r3
 800bce8:	d14d      	bne.n	800bd86 <tcp_handle+0xd2>
 800bcea:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bcee:	2b01      	cmp	r3, #1
 800bcf0:	d00d      	beq.n	800bd0e <tcp_handle+0x5a>
 800bcf2:	2204      	movs	r2, #4
 800bcf4:	4668      	mov	r0, sp
 800bcf6:	f105 011a 	add.w	r1, r5, #26
 800bcfa:	f7ff fea7 	bl	800ba4c <memcpy.isra.0>
 800bcfe:	8862      	ldrh	r2, [r4, #2]
 800bd00:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800bd02:	429a      	cmp	r2, r3
 800bd04:	d13f      	bne.n	800bd86 <tcp_handle+0xd2>
 800bd06:	6862      	ldr	r2, [r4, #4]
 800bd08:	9b00      	ldr	r3, [sp, #0]
 800bd0a:	429a      	cmp	r2, r3
 800bd0c:	d13b      	bne.n	800bd86 <tcp_handle+0xd2>
 800bd0e:	2204      	movs	r2, #4
 800bd10:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800bd14:	eb0d 0002 	add.w	r0, sp, r2
 800bd18:	f7ff fe98 	bl	800ba4c <memcpy.isra.0>
 800bd1c:	2204      	movs	r2, #4
 800bd1e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800bd22:	eb0d 0002 	add.w	r0, sp, r2
 800bd26:	9e01      	ldr	r6, [sp, #4]
 800bd28:	f7ff fe90 	bl	800ba4c <memcpy.isra.0>
 800bd2c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bd30:	9f01      	ldr	r7, [sp, #4]
 800bd32:	2a01      	cmp	r2, #1
 800bd34:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800bd38:	d01b      	beq.n	800bd72 <tcp_handle+0xbe>
 800bd3a:	1ed3      	subs	r3, r2, #3
 800bd3c:	2b07      	cmp	r3, #7
 800bd3e:	d822      	bhi.n	800bd86 <tcp_handle+0xd2>
 800bd40:	ea4f 1318 	mov.w	r3, r8, lsr #4
 800bd44:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800bd48:	fa9b fb9b 	rev16.w	fp, fp
 800bd4c:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800bd50:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800bd52:	44d8      	add	r8, fp
 800bd54:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800bd58:	ea4f 0983 	mov.w	r9, r3, lsl #2
 800bd5c:	fa1f f888 	uxth.w	r8, r8
 800bd60:	2900      	cmp	r1, #0
 800bd62:	d142      	bne.n	800bdea <tcp_handle+0x136>
 800bd64:	f1b8 0f00 	cmp.w	r8, #0
 800bd68:	d16b      	bne.n	800be42 <tcp_handle+0x18e>
 800bd6a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd6c:	42bb      	cmp	r3, r7
 800bd6e:	d168      	bne.n	800be42 <tcp_handle+0x18e>
 800bd70:	e048      	b.n	800be04 <tcp_handle+0x150>
 800bd72:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800bd76:	075a      	lsls	r2, r3, #29
 800bd78:	d405      	bmi.n	800bd86 <tcp_handle+0xd2>
 800bd7a:	06d8      	lsls	r0, r3, #27
 800bd7c:	d506      	bpl.n	800bd8c <tcp_handle+0xd8>
 800bd7e:	4628      	mov	r0, r5
 800bd80:	497b      	ldr	r1, [pc, #492]	; (800bf70 <tcp_handle+0x2bc>)
 800bd82:	f7ff ff41 	bl	800bc08 <_send_reset>
 800bd86:	b005      	add	sp, #20
 800bd88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd8c:	0799      	lsls	r1, r3, #30
 800bd8e:	d5fa      	bpl.n	800bd86 <tcp_handle+0xd2>
 800bd90:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800bd94:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800bd98:	4668      	mov	r0, sp
 800bd9a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800bd9e:	f105 011a 	add.w	r1, r5, #26
 800bda2:	2204      	movs	r2, #4
 800bda4:	8063      	strh	r3, [r4, #2]
 800bda6:	f7ff fe51 	bl	800ba4c <memcpy.isra.0>
 800bdaa:	2206      	movs	r2, #6
 800bdac:	9b00      	ldr	r3, [sp, #0]
 800bdae:	18a9      	adds	r1, r5, r2
 800bdb0:	4870      	ldr	r0, [pc, #448]	; (800bf74 <tcp_handle+0x2c0>)
 800bdb2:	6063      	str	r3, [r4, #4]
 800bdb4:	f7ff fe4a 	bl	800ba4c <memcpy.isra.0>
 800bdb8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bdba:	1c7b      	adds	r3, r7, #1
 800bdbc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800bdc0:	6363      	str	r3, [r4, #52]	; 0x34
 800bdc2:	2312      	movs	r3, #18
 800bdc4:	486a      	ldr	r0, [pc, #424]	; (800bf70 <tcp_handle+0x2bc>)
 800bdc6:	a901      	add	r1, sp, #4
 800bdc8:	f88d 300c 	strb.w	r3, [sp, #12]
 800bdcc:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800bdd0:	63e7      	str	r7, [r4, #60]	; 0x3c
 800bdd2:	f8c4 a018 	str.w	sl, [r4, #24]
 800bdd6:	f7ff fe69 	bl	800baac <_tcp_send_package>
 800bdda:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bddc:	1c5a      	adds	r2, r3, #1
 800bdde:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800bde2:	2303      	movs	r3, #3
 800bde4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bde8:	e7cd      	b.n	800bd86 <tcp_handle+0xd2>
 800bdea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bdec:	eba3 0c07 	sub.w	ip, r3, r7
 800bdf0:	f1b8 0f00 	cmp.w	r8, #0
 800bdf4:	d10d      	bne.n	800be12 <tcp_handle+0x15e>
 800bdf6:	f1bc 0f00 	cmp.w	ip, #0
 800bdfa:	dc22      	bgt.n	800be42 <tcp_handle+0x18e>
 800bdfc:	1afb      	subs	r3, r7, r3
 800bdfe:	1a5b      	subs	r3, r3, r1
 800be00:	2b00      	cmp	r3, #0
 800be02:	da1e      	bge.n	800be42 <tcp_handle+0x18e>
 800be04:	0743      	lsls	r3, r0, #29
 800be06:	d530      	bpl.n	800be6a <tcp_handle+0x1b6>
 800be08:	8821      	ldrh	r1, [r4, #0]
 800be0a:	4859      	ldr	r0, [pc, #356]	; (800bf70 <tcp_handle+0x2bc>)
 800be0c:	f7ff fe04 	bl	800ba18 <_init_tcb>
 800be10:	e7b9      	b.n	800bd86 <tcp_handle+0xd2>
 800be12:	f1bc 0f00 	cmp.w	ip, #0
 800be16:	dc06      	bgt.n	800be26 <tcp_handle+0x172>
 800be18:	eba7 0c03 	sub.w	ip, r7, r3
 800be1c:	ebac 0c01 	sub.w	ip, ip, r1
 800be20:	f1bc 0f00 	cmp.w	ip, #0
 800be24:	dbee      	blt.n	800be04 <tcp_handle+0x150>
 800be26:	eb08 0c07 	add.w	ip, r8, r7
 800be2a:	f103 0e01 	add.w	lr, r3, #1
 800be2e:	ebae 0e0c 	sub.w	lr, lr, ip
 800be32:	f1be 0f00 	cmp.w	lr, #0
 800be36:	dc04      	bgt.n	800be42 <tcp_handle+0x18e>
 800be38:	43db      	mvns	r3, r3
 800be3a:	1a5b      	subs	r3, r3, r1
 800be3c:	eb13 0f0c 	cmn.w	r3, ip
 800be40:	d4e0      	bmi.n	800be04 <tcp_handle+0x150>
 800be42:	0742      	lsls	r2, r0, #29
 800be44:	d505      	bpl.n	800be52 <tcp_handle+0x19e>
 800be46:	8821      	ldrh	r1, [r4, #0]
 800be48:	4849      	ldr	r0, [pc, #292]	; (800bf70 <tcp_handle+0x2bc>)
 800be4a:	f7ff fde5 	bl	800ba18 <_init_tcb>
 800be4e:	2301      	movs	r3, #1
 800be50:	e7c8      	b.n	800bde4 <tcp_handle+0x130>
 800be52:	6963      	ldr	r3, [r4, #20]
 800be54:	9301      	str	r3, [sp, #4]
 800be56:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800be58:	9302      	str	r3, [sp, #8]
 800be5a:	2310      	movs	r3, #16
 800be5c:	4844      	ldr	r0, [pc, #272]	; (800bf70 <tcp_handle+0x2bc>)
 800be5e:	a901      	add	r1, sp, #4
 800be60:	f88d 300c 	strb.w	r3, [sp, #12]
 800be64:	f7ff fe22 	bl	800baac <_tcp_send_package>
 800be68:	e78d      	b.n	800bd86 <tcp_handle+0xd2>
 800be6a:	0781      	lsls	r1, r0, #30
 800be6c:	d505      	bpl.n	800be7a <tcp_handle+0x1c6>
 800be6e:	2a03      	cmp	r2, #3
 800be70:	d0ed      	beq.n	800be4e <tcp_handle+0x19a>
 800be72:	4628      	mov	r0, r5
 800be74:	493e      	ldr	r1, [pc, #248]	; (800bf70 <tcp_handle+0x2bc>)
 800be76:	f7ff fec7 	bl	800bc08 <_send_reset>
 800be7a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800be7e:	06da      	lsls	r2, r3, #27
 800be80:	d581      	bpl.n	800bd86 <tcp_handle+0xd2>
 800be82:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800be86:	3b03      	subs	r3, #3
 800be88:	2b07      	cmp	r3, #7
 800be8a:	d818      	bhi.n	800bebe <tcp_handle+0x20a>
 800be8c:	e8df f003 	tbb	[pc, r3]
 800be90:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 800be94:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800be98:	6923      	ldr	r3, [r4, #16]
 800be9a:	1b9b      	subs	r3, r3, r6
 800be9c:	2b00      	cmp	r3, #0
 800be9e:	dc0a      	bgt.n	800beb6 <tcp_handle+0x202>
 800bea0:	6963      	ldr	r3, [r4, #20]
 800bea2:	1af3      	subs	r3, r6, r3
 800bea4:	2b00      	cmp	r3, #0
 800bea6:	dc06      	bgt.n	800beb6 <tcp_handle+0x202>
 800bea8:	2304      	movs	r3, #4
 800beaa:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800beae:	f8c4 a018 	str.w	sl, [r4, #24]
 800beb2:	6126      	str	r6, [r4, #16]
 800beb4:	e796      	b.n	800bde4 <tcp_handle+0x130>
 800beb6:	4628      	mov	r0, r5
 800beb8:	492d      	ldr	r1, [pc, #180]	; (800bf70 <tcp_handle+0x2bc>)
 800beba:	f7ff fea5 	bl	800bc08 <_send_reset>
 800bebe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bec2:	3b04      	subs	r3, #4
 800bec4:	2b02      	cmp	r3, #2
 800bec6:	d830      	bhi.n	800bf2a <tcp_handle+0x276>
 800bec8:	f1b8 0f00 	cmp.w	r8, #0
 800becc:	d02d      	beq.n	800bf2a <tcp_handle+0x276>
 800bece:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bed0:	42bb      	cmp	r3, r7
 800bed2:	f040 8092 	bne.w	800bffa <tcp_handle+0x346>
 800bed6:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800beda:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800bf78 <tcp_handle+0x2c4>
 800bede:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800bee2:	f8ba 7000 	ldrh.w	r7, [sl]
 800bee6:	4642      	mov	r2, r8
 800bee8:	435f      	muls	r7, r3
 800beea:	1d38      	adds	r0, r7, #4
 800beec:	4449      	add	r1, r9
 800beee:	4450      	add	r0, sl
 800bef0:	f7ff fdac 	bl	800ba4c <memcpy.isra.0>
 800bef4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800bef6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bef8:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800befc:	8722      	strh	r2, [r4, #56]	; 0x38
 800befe:	6962      	ldr	r2, [r4, #20]
 800bf00:	4443      	add	r3, r8
 800bf02:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800bf06:	6363      	str	r3, [r4, #52]	; 0x34
 800bf08:	2310      	movs	r3, #16
 800bf0a:	4457      	add	r7, sl
 800bf0c:	4818      	ldr	r0, [pc, #96]	; (800bf70 <tcp_handle+0x2bc>)
 800bf0e:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800bf12:	a901      	add	r1, sp, #4
 800bf14:	f88d 300c 	strb.w	r3, [sp, #12]
 800bf18:	f7ff fdc8 	bl	800baac <_tcp_send_package>
 800bf1c:	f8ba 3000 	ldrh.w	r3, [sl]
 800bf20:	3301      	adds	r3, #1
 800bf22:	f003 0301 	and.w	r3, r3, #1
 800bf26:	f8aa 3000 	strh.w	r3, [sl]
 800bf2a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bf2e:	2b02      	cmp	r3, #2
 800bf30:	f67f af29 	bls.w	800bd86 <tcp_handle+0xd2>
 800bf34:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800bf38:	07db      	lsls	r3, r3, #31
 800bf3a:	f57f af24 	bpl.w	800bd86 <tcp_handle+0xd2>
 800bf3e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bf40:	6962      	ldr	r2, [r4, #20]
 800bf42:	3301      	adds	r3, #1
 800bf44:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800bf48:	6363      	str	r3, [r4, #52]	; 0x34
 800bf4a:	2310      	movs	r3, #16
 800bf4c:	4808      	ldr	r0, [pc, #32]	; (800bf70 <tcp_handle+0x2bc>)
 800bf4e:	a901      	add	r1, sp, #4
 800bf50:	f88d 300c 	strb.w	r3, [sp, #12]
 800bf54:	f7ff fdaa 	bl	800baac <_tcp_send_package>
 800bf58:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bf5c:	2b05      	cmp	r3, #5
 800bf5e:	d054      	beq.n	800c00a <tcp_handle+0x356>
 800bf60:	d84e      	bhi.n	800c000 <tcp_handle+0x34c>
 800bf62:	3b03      	subs	r3, #3
 800bf64:	2b01      	cmp	r3, #1
 800bf66:	f63f af0e 	bhi.w	800bd86 <tcp_handle+0xd2>
 800bf6a:	2307      	movs	r3, #7
 800bf6c:	e73a      	b.n	800bde4 <tcp_handle+0x130>
 800bf6e:	bf00      	nop
 800bf70:	20002768 	andcs	r2, r0, r8, ror #14
 800bf74:	20002770 	andcs	r2, r0, r0, ror r7
 800bf78:	20001bf8 	strdcs	r1, [r0], -r8
 800bf7c:	6923      	ldr	r3, [r4, #16]
 800bf7e:	1b99      	subs	r1, r3, r6
 800bf80:	d513      	bpl.n	800bfaa <tcp_handle+0x2f6>
 800bf82:	6962      	ldr	r2, [r4, #20]
 800bf84:	1ab2      	subs	r2, r6, r2
 800bf86:	2a00      	cmp	r2, #0
 800bf88:	dc0f      	bgt.n	800bfaa <tcp_handle+0x2f6>
 800bf8a:	6126      	str	r6, [r4, #16]
 800bf8c:	6a23      	ldr	r3, [r4, #32]
 800bf8e:	1bda      	subs	r2, r3, r7
 800bf90:	2a00      	cmp	r2, #0
 800bf92:	db05      	blt.n	800bfa0 <tcp_handle+0x2ec>
 800bf94:	42bb      	cmp	r3, r7
 800bf96:	d192      	bne.n	800bebe <tcp_handle+0x20a>
 800bf98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bf9a:	1b9b      	subs	r3, r3, r6
 800bf9c:	2b00      	cmp	r3, #0
 800bf9e:	dc8e      	bgt.n	800bebe <tcp_handle+0x20a>
 800bfa0:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800bfa4:	f8c4 a018 	str.w	sl, [r4, #24]
 800bfa8:	e789      	b.n	800bebe <tcp_handle+0x20a>
 800bfaa:	1af3      	subs	r3, r6, r3
 800bfac:	2b00      	cmp	r3, #0
 800bfae:	dc06      	bgt.n	800bfbe <tcp_handle+0x30a>
 800bfb0:	2900      	cmp	r1, #0
 800bfb2:	dc84      	bgt.n	800bebe <tcp_handle+0x20a>
 800bfb4:	6963      	ldr	r3, [r4, #20]
 800bfb6:	1af3      	subs	r3, r6, r3
 800bfb8:	2b00      	cmp	r3, #0
 800bfba:	dc80      	bgt.n	800bebe <tcp_handle+0x20a>
 800bfbc:	e7e6      	b.n	800bf8c <tcp_handle+0x2d8>
 800bfbe:	6963      	ldr	r3, [r4, #20]
 800bfc0:	1b9a      	subs	r2, r3, r6
 800bfc2:	2a00      	cmp	r2, #0
 800bfc4:	f6bf af7b 	bge.w	800bebe <tcp_handle+0x20a>
 800bfc8:	e744      	b.n	800be54 <tcp_handle+0x1a0>
 800bfca:	6963      	ldr	r3, [r4, #20]
 800bfcc:	42b3      	cmp	r3, r6
 800bfce:	f47f af76 	bne.w	800bebe <tcp_handle+0x20a>
 800bfd2:	8821      	ldrh	r1, [r4, #0]
 800bfd4:	480f      	ldr	r0, [pc, #60]	; (800c014 <tcp_handle+0x360>)
 800bfd6:	f7ff fd1f 	bl	800ba18 <_init_tcb>
 800bfda:	e770      	b.n	800bebe <tcp_handle+0x20a>
 800bfdc:	6963      	ldr	r3, [r4, #20]
 800bfde:	42b3      	cmp	r3, r6
 800bfe0:	f47f af6d 	bne.w	800bebe <tcp_handle+0x20a>
 800bfe4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bfe6:	480b      	ldr	r0, [pc, #44]	; (800c014 <tcp_handle+0x360>)
 800bfe8:	9302      	str	r3, [sp, #8]
 800bfea:	2310      	movs	r3, #16
 800bfec:	a901      	add	r1, sp, #4
 800bfee:	9601      	str	r6, [sp, #4]
 800bff0:	f88d 300c 	strb.w	r3, [sp, #12]
 800bff4:	f7ff fd5a 	bl	800baac <_tcp_send_package>
 800bff8:	e761      	b.n	800bebe <tcp_handle+0x20a>
 800bffa:	6962      	ldr	r2, [r4, #20]
 800bffc:	9201      	str	r2, [sp, #4]
 800bffe:	e72b      	b.n	800be58 <tcp_handle+0x1a4>
 800c000:	2b06      	cmp	r3, #6
 800c002:	f47f aec0 	bne.w	800bd86 <tcp_handle+0xd2>
 800c006:	230a      	movs	r3, #10
 800c008:	e6ec      	b.n	800bde4 <tcp_handle+0x130>
 800c00a:	6963      	ldr	r3, [r4, #20]
 800c00c:	42b3      	cmp	r3, r6
 800c00e:	d0fa      	beq.n	800c006 <tcp_handle+0x352>
 800c010:	2308      	movs	r3, #8
 800c012:	e6e7      	b.n	800bde4 <tcp_handle+0x130>
 800c014:	20002768 	andcs	r2, r0, r8, ror #14

0800c018 <tcp_begin>:
 800c018:	b508      	push	{r3, lr}
 800c01a:	4b0a      	ldr	r3, [pc, #40]	; (800c044 <tcp_begin+0x2c>)
 800c01c:	4601      	mov	r1, r0
 800c01e:	881a      	ldrh	r2, [r3, #0]
 800c020:	4282      	cmp	r2, r0
 800c022:	d102      	bne.n	800c02a <tcp_begin+0x12>
 800c024:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c028:	b130      	cbz	r0, 800c038 <tcp_begin+0x20>
 800c02a:	b12a      	cbz	r2, 800c038 <tcp_begin+0x20>
 800c02c:	4806      	ldr	r0, [pc, #24]	; (800c048 <tcp_begin+0x30>)
 800c02e:	f003 f94f 	bl	800f2d0 <console_error>
 800c032:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c036:	bd08      	pop	{r3, pc}
 800c038:	4802      	ldr	r0, [pc, #8]	; (800c044 <tcp_begin+0x2c>)
 800c03a:	8019      	strh	r1, [r3, #0]
 800c03c:	f7ff fcec 	bl	800ba18 <_init_tcb>
 800c040:	2000      	movs	r0, #0
 800c042:	e7f8      	b.n	800c036 <tcp_begin+0x1e>
 800c044:	20002768 	andcs	r2, r0, r8, ror #14
 800c048:	08012fdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, sp}

0800c04c <tcp_write>:
 800c04c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c050:	429a      	cmp	r2, r3
 800c052:	bf28      	it	cs
 800c054:	461a      	movcs	r2, r3
 800c056:	2344      	movs	r3, #68	; 0x44
 800c058:	b530      	push	{r4, r5, lr}
 800c05a:	4c0d      	ldr	r4, [pc, #52]	; (800c090 <tcp_write+0x44>)
 800c05c:	b085      	sub	sp, #20
 800c05e:	fb03 4400 	mla	r4, r3, r0, r4
 800c062:	6963      	ldr	r3, [r4, #20]
 800c064:	4615      	mov	r5, r2
 800c066:	9301      	str	r3, [sp, #4]
 800c068:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c06a:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c06c:	9302      	str	r3, [sp, #8]
 800c06e:	2318      	movs	r3, #24
 800c070:	8622      	strh	r2, [r4, #48]	; 0x30
 800c072:	4620      	mov	r0, r4
 800c074:	a901      	add	r1, sp, #4
 800c076:	f88d 300c 	strb.w	r3, [sp, #12]
 800c07a:	f7ff fd17 	bl	800baac <_tcp_send_package>
 800c07e:	2300      	movs	r3, #0
 800c080:	6962      	ldr	r2, [r4, #20]
 800c082:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c084:	442a      	add	r2, r5
 800c086:	8623      	strh	r3, [r4, #48]	; 0x30
 800c088:	6162      	str	r2, [r4, #20]
 800c08a:	b005      	add	sp, #20
 800c08c:	bd30      	pop	{r4, r5, pc}
 800c08e:	bf00      	nop
 800c090:	20002768 	andcs	r2, r0, r8, ror #14

0800c094 <tcp_read>:
 800c094:	2344      	movs	r3, #68	; 0x44
 800c096:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c098:	4c1c      	ldr	r4, [pc, #112]	; (800c10c <tcp_read+0x78>)
 800c09a:	b085      	sub	sp, #20
 800c09c:	fb03 4400 	mla	r4, r3, r0, r4
 800c0a0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c0a4:	2b07      	cmp	r3, #7
 800c0a6:	d112      	bne.n	800c0ce <tcp_read+0x3a>
 800c0a8:	6963      	ldr	r3, [r4, #20]
 800c0aa:	4620      	mov	r0, r4
 800c0ac:	9301      	str	r3, [sp, #4]
 800c0ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c0b0:	a901      	add	r1, sp, #4
 800c0b2:	9302      	str	r3, [sp, #8]
 800c0b4:	2311      	movs	r3, #17
 800c0b6:	f88d 300c 	strb.w	r3, [sp, #12]
 800c0ba:	f7ff fcf7 	bl	800baac <_tcp_send_package>
 800c0be:	2309      	movs	r3, #9
 800c0c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c0c4:	6963      	ldr	r3, [r4, #20]
 800c0c6:	3301      	adds	r3, #1
 800c0c8:	6163      	str	r3, [r4, #20]
 800c0ca:	2000      	movs	r0, #0
 800c0cc:	e01b      	b.n	800c106 <tcp_read+0x72>
 800c0ce:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c0d2:	4358      	muls	r0, r3
 800c0d4:	4a0e      	ldr	r2, [pc, #56]	; (800c110 <tcp_read+0x7c>)
 800c0d6:	1817      	adds	r7, r2, r0
 800c0d8:	887b      	ldrh	r3, [r7, #2]
 800c0da:	5a15      	ldrh	r5, [r2, r0]
 800c0dc:	429d      	cmp	r5, r3
 800c0de:	d0f4      	beq.n	800c0ca <tcp_read+0x36>
 800c0e0:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c0e4:	435d      	muls	r5, r3
 800c0e6:	1d06      	adds	r6, r0, #4
 800c0e8:	442e      	add	r6, r5
 800c0ea:	4416      	add	r6, r2
 800c0ec:	4428      	add	r0, r5
 800c0ee:	600e      	str	r6, [r1, #0]
 800c0f0:	4402      	add	r2, r0
 800c0f2:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c0f6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c0f8:	3301      	adds	r3, #1
 800c0fa:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c0fe:	f003 0301 	and.w	r3, r3, #1
 800c102:	8722      	strh	r2, [r4, #56]	; 0x38
 800c104:	807b      	strh	r3, [r7, #2]
 800c106:	b005      	add	sp, #20
 800c108:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c10a:	bf00      	nop
 800c10c:	20002768 	andcs	r2, r0, r8, ror #14
 800c110:	20001bf8 	strdcs	r1, [r0], -r8

0800c114 <memcpy.isra.0>:
 800c114:	3801      	subs	r0, #1
 800c116:	440a      	add	r2, r1
 800c118:	4291      	cmp	r1, r2
 800c11a:	d100      	bne.n	800c11e <memcpy.isra.0+0xa>
 800c11c:	4770      	bx	lr
 800c11e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c122:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c126:	e7f7      	b.n	800c118 <memcpy.isra.0+0x4>

0800c128 <net_memcpy>:
 800c128:	ea41 0300 	orr.w	r3, r1, r0
 800c12c:	079b      	lsls	r3, r3, #30
 800c12e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c130:	d115      	bne.n	800c15e <net_memcpy+0x36>
 800c132:	f022 0303 	bic.w	r3, r2, #3
 800c136:	1f04      	subs	r4, r0, #4
 800c138:	0895      	lsrs	r5, r2, #2
 800c13a:	18ce      	adds	r6, r1, r3
 800c13c:	42b1      	cmp	r1, r6
 800c13e:	d109      	bne.n	800c154 <net_memcpy+0x2c>
 800c140:	f06f 0403 	mvn.w	r4, #3
 800c144:	fb04 2205 	mla	r2, r4, r5, r2
 800c148:	4403      	add	r3, r0
 800c14a:	3b01      	subs	r3, #1
 800c14c:	440a      	add	r2, r1
 800c14e:	4291      	cmp	r1, r2
 800c150:	d107      	bne.n	800c162 <net_memcpy+0x3a>
 800c152:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c154:	f851 7b04 	ldr.w	r7, [r1], #4
 800c158:	f844 7f04 	str.w	r7, [r4, #4]!
 800c15c:	e7ee      	b.n	800c13c <net_memcpy+0x14>
 800c15e:	4603      	mov	r3, r0
 800c160:	e7f3      	b.n	800c14a <net_memcpy+0x22>
 800c162:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c166:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c16a:	e7f0      	b.n	800c14e <net_memcpy+0x26>

0800c16c <udp_set_ip>:
 800c16c:	2204      	movs	r2, #4
 800c16e:	b513      	push	{r0, r1, r4, lr}
 800c170:	4604      	mov	r4, r0
 800c172:	6803      	ldr	r3, [r0, #0]
 800c174:	eb0d 0102 	add.w	r1, sp, r2
 800c178:	4808      	ldr	r0, [pc, #32]	; (800c19c <udp_set_ip+0x30>)
 800c17a:	9301      	str	r3, [sp, #4]
 800c17c:	f7ff ffca 	bl	800c114 <memcpy.isra.0>
 800c180:	6862      	ldr	r2, [r4, #4]
 800c182:	4b07      	ldr	r3, [pc, #28]	; (800c1a0 <udp_set_ip+0x34>)
 800c184:	43d1      	mvns	r1, r2
 800c186:	6019      	str	r1, [r3, #0]
 800c188:	6823      	ldr	r3, [r4, #0]
 800c18a:	4013      	ands	r3, r2
 800c18c:	4a05      	ldr	r2, [pc, #20]	; (800c1a4 <udp_set_ip+0x38>)
 800c18e:	6013      	str	r3, [r2, #0]
 800c190:	68a2      	ldr	r2, [r4, #8]
 800c192:	4b05      	ldr	r3, [pc, #20]	; (800c1a8 <udp_set_ip+0x3c>)
 800c194:	601a      	str	r2, [r3, #0]
 800c196:	b002      	add	sp, #8
 800c198:	bd10      	pop	{r4, pc}
 800c19a:	bf00      	nop
 800c19c:	20008a82 	andcs	r8, r0, r2, lsl #21
 800c1a0:	20002d98 	mulcs	r0, r8, sp
 800c1a4:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c1a8:	20002d9c 	mulcs	r0, ip, sp

0800c1ac <udp_init>:
 800c1ac:	b570      	push	{r4, r5, r6, lr}
 800c1ae:	2200      	movs	r2, #0
 800c1b0:	2508      	movs	r5, #8
 800c1b2:	460e      	mov	r6, r1
 800c1b4:	4b12      	ldr	r3, [pc, #72]	; (800c200 <udp_init+0x54>)
 800c1b6:	4913      	ldr	r1, [pc, #76]	; (800c204 <udp_init+0x58>)
 800c1b8:	3d01      	subs	r5, #1
 800c1ba:	801a      	strh	r2, [r3, #0]
 800c1bc:	805a      	strh	r2, [r3, #2]
 800c1be:	f841 2b04 	str.w	r2, [r1], #4
 800c1c2:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800c1c6:	d1f7      	bne.n	800c1b8 <udp_init+0xc>
 800c1c8:	2206      	movs	r2, #6
 800c1ca:	4c0f      	ldr	r4, [pc, #60]	; (800c208 <udp_init+0x5c>)
 800c1cc:	4b0f      	ldr	r3, [pc, #60]	; (800c20c <udp_init+0x60>)
 800c1ce:	4601      	mov	r1, r0
 800c1d0:	18a0      	adds	r0, r4, r2
 800c1d2:	801d      	strh	r5, [r3, #0]
 800c1d4:	f7ff ff9e 	bl	800c114 <memcpy.isra.0>
 800c1d8:	2308      	movs	r3, #8
 800c1da:	7323      	strb	r3, [r4, #12]
 800c1dc:	2345      	movs	r3, #69	; 0x45
 800c1de:	73a3      	strb	r3, [r4, #14]
 800c1e0:	2340      	movs	r3, #64	; 0x40
 800c1e2:	7523      	strb	r3, [r4, #20]
 800c1e4:	75a3      	strb	r3, [r4, #22]
 800c1e6:	2311      	movs	r3, #17
 800c1e8:	4630      	mov	r0, r6
 800c1ea:	7365      	strb	r5, [r4, #13]
 800c1ec:	73e5      	strb	r5, [r4, #15]
 800c1ee:	7565      	strb	r5, [r4, #21]
 800c1f0:	75e3      	strb	r3, [r4, #23]
 800c1f2:	f7ff ffbb 	bl	800c16c <udp_set_ip>
 800c1f6:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 800c1fa:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800c1fe:	bd70      	pop	{r4, r5, r6, pc}
 800c200:	20002dc8 	andcs	r2, r0, r8, asr #27
 800c204:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c208:	20008a68 	andcs	r8, r0, r8, ror #20
 800c20c:	20002da4 	andcs	r2, r0, r4, lsr #27

0800c210 <udp_shutdown>:
 800c210:	4770      	bx	lr
	...

0800c214 <udp_handle>:
 800c214:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c218:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800c21a:	4607      	mov	r7, r0
 800c21c:	ba5b      	rev16	r3, r3
 800c21e:	b29b      	uxth	r3, r3
 800c220:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800c224:	2a01      	cmp	r2, #1
 800c226:	d904      	bls.n	800c232 <udp_handle+0x1e>
 800c228:	2b7b      	cmp	r3, #123	; 0x7b
 800c22a:	d002      	beq.n	800c232 <udp_handle+0x1e>
 800c22c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c230:	d308      	bcc.n	800c244 <udp_handle+0x30>
 800c232:	2400      	movs	r4, #0
 800c234:	4a1f      	ldr	r2, [pc, #124]	; (800c2b4 <udp_handle+0xa0>)
 800c236:	f852 1b04 	ldr.w	r1, [r2], #4
 800c23a:	4299      	cmp	r1, r3
 800c23c:	d005      	beq.n	800c24a <udp_handle+0x36>
 800c23e:	3401      	adds	r4, #1
 800c240:	2c08      	cmp	r4, #8
 800c242:	d1f8      	bne.n	800c236 <udp_handle+0x22>
 800c244:	b002      	add	sp, #8
 800c246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c24a:	f640 3394 	movw	r3, #2964	; 0xb94
 800c24e:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800c250:	435c      	muls	r4, r3
 800c252:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c256:	ba76      	rev16	r6, r6
 800c258:	3e08      	subs	r6, #8
 800c25a:	b2b6      	uxth	r6, r6
 800c25c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c260:	bf28      	it	cs
 800c262:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800c266:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800c2b8 <udp_handle+0xa4>
 800c26a:	1d20      	adds	r0, r4, #4
 800c26c:	f838 5004 	ldrh.w	r5, [r8, r4]
 800c270:	4632      	mov	r2, r6
 800c272:	435d      	muls	r5, r3
 800c274:	4428      	add	r0, r5
 800c276:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800c27a:	4440      	add	r0, r8
 800c27c:	f7ff ff4a 	bl	800c114 <memcpy.isra.0>
 800c280:	2204      	movs	r2, #4
 800c282:	f107 011a 	add.w	r1, r7, #26
 800c286:	eb0d 0002 	add.w	r0, sp, r2
 800c28a:	f7ff ff43 	bl	800c114 <memcpy.isra.0>
 800c28e:	9a01      	ldr	r2, [sp, #4]
 800c290:	192b      	adds	r3, r5, r4
 800c292:	4443      	add	r3, r8
 800c294:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800c298:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800c29a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800c29e:	ba52      	rev16	r2, r2
 800c2a0:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800c2a4:	f838 3004 	ldrh.w	r3, [r8, r4]
 800c2a8:	3301      	adds	r3, #1
 800c2aa:	f003 0301 	and.w	r3, r3, #1
 800c2ae:	f828 3004 	strh.w	r3, [r8, r4]
 800c2b2:	e7c7      	b.n	800c244 <udp_handle+0x30>
 800c2b4:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c2b8:	20002dc8 	andcs	r2, r0, r8, asr #27

0800c2bc <udp_bind>:
 800c2bc:	4a0a      	ldr	r2, [pc, #40]	; (800c2e8 <udp_bind+0x2c>)
 800c2be:	4603      	mov	r3, r0
 800c2c0:	b510      	push	{r4, lr}
 800c2c2:	2000      	movs	r0, #0
 800c2c4:	4614      	mov	r4, r2
 800c2c6:	f852 1b04 	ldr.w	r1, [r2], #4
 800c2ca:	4299      	cmp	r1, r3
 800c2cc:	d008      	beq.n	800c2e0 <udp_bind+0x24>
 800c2ce:	b141      	cbz	r1, 800c2e2 <udp_bind+0x26>
 800c2d0:	3001      	adds	r0, #1
 800c2d2:	2808      	cmp	r0, #8
 800c2d4:	d1f7      	bne.n	800c2c6 <udp_bind+0xa>
 800c2d6:	4805      	ldr	r0, [pc, #20]	; (800c2ec <udp_bind+0x30>)
 800c2d8:	f002 fffa 	bl	800f2d0 <console_error>
 800c2dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c2e0:	bd10      	pop	{r4, pc}
 800c2e2:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c2e6:	e7fb      	b.n	800c2e0 <udp_bind+0x24>
 800c2e8:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c2ec:	08012ffd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}

0800c2f0 <udp_unbind>:
 800c2f0:	4a0c      	ldr	r2, [pc, #48]	; (800c324 <udp_unbind+0x34>)
 800c2f2:	2300      	movs	r3, #0
 800c2f4:	4611      	mov	r1, r2
 800c2f6:	b510      	push	{r4, lr}
 800c2f8:	f852 4b04 	ldr.w	r4, [r2], #4
 800c2fc:	4284      	cmp	r4, r0
 800c2fe:	d108      	bne.n	800c312 <udp_unbind+0x22>
 800c300:	2000      	movs	r0, #0
 800c302:	f640 3294 	movw	r2, #2964	; 0xb94
 800c306:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c30a:	4353      	muls	r3, r2
 800c30c:	4a06      	ldr	r2, [pc, #24]	; (800c328 <udp_unbind+0x38>)
 800c30e:	5098      	str	r0, [r3, r2]
 800c310:	bd10      	pop	{r4, pc}
 800c312:	3301      	adds	r3, #1
 800c314:	2b08      	cmp	r3, #8
 800c316:	d1ef      	bne.n	800c2f8 <udp_unbind+0x8>
 800c318:	4804      	ldr	r0, [pc, #16]	; (800c32c <udp_unbind+0x3c>)
 800c31a:	f002 ffd9 	bl	800f2d0 <console_error>
 800c31e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c322:	e7f5      	b.n	800c310 <udp_unbind+0x20>
 800c324:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c328:	20002dc8 	andcs	r2, r0, r8, asr #27
 800c32c:	08013002 	stmdaeq	r1, {r1, ip, sp}

0800c330 <udp_recv>:
 800c330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c334:	4604      	mov	r4, r0
 800c336:	4698      	mov	r8, r3
 800c338:	f640 3394 	movw	r3, #2964	; 0xb94
 800c33c:	435c      	muls	r4, r3
 800c33e:	4608      	mov	r0, r1
 800c340:	4915      	ldr	r1, [pc, #84]	; (800c398 <udp_recv+0x68>)
 800c342:	190f      	adds	r7, r1, r4
 800c344:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c348:	5b0b      	ldrh	r3, [r1, r4]
 800c34a:	4563      	cmp	r3, ip
 800c34c:	d021      	beq.n	800c392 <udp_recv+0x62>
 800c34e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c352:	fb03 fc0c 	mul.w	ip, r3, ip
 800c356:	eb0c 0604 	add.w	r6, ip, r4
 800c35a:	440e      	add	r6, r1
 800c35c:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c360:	3404      	adds	r4, #4
 800c362:	4295      	cmp	r5, r2
 800c364:	bf28      	it	cs
 800c366:	4615      	movcs	r5, r2
 800c368:	4464      	add	r4, ip
 800c36a:	462a      	mov	r2, r5
 800c36c:	4421      	add	r1, r4
 800c36e:	f7ff fedb 	bl	800c128 <net_memcpy>
 800c372:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c376:	f8c8 3000 	str.w	r3, [r8]
 800c37a:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c37e:	9b06      	ldr	r3, [sp, #24]
 800c380:	801a      	strh	r2, [r3, #0]
 800c382:	887b      	ldrh	r3, [r7, #2]
 800c384:	3301      	adds	r3, #1
 800c386:	f003 0301 	and.w	r3, r3, #1
 800c38a:	807b      	strh	r3, [r7, #2]
 800c38c:	4628      	mov	r0, r5
 800c38e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c392:	2500      	movs	r5, #0
 800c394:	e7fa      	b.n	800c38c <udp_recv+0x5c>
 800c396:	bf00      	nop
 800c398:	20002dc8 	andcs	r2, r0, r8, asr #27

0800c39c <udp_recv2>:
 800c39c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c39e:	f640 3594 	movw	r5, #2964	; 0xb94
 800c3a2:	4368      	muls	r0, r5
 800c3a4:	4c0f      	ldr	r4, [pc, #60]	; (800c3e4 <udp_recv2+0x48>)
 800c3a6:	1827      	adds	r7, r4, r0
 800c3a8:	887d      	ldrh	r5, [r7, #2]
 800c3aa:	5a26      	ldrh	r6, [r4, r0]
 800c3ac:	42ae      	cmp	r6, r5
 800c3ae:	d017      	beq.n	800c3e0 <udp_recv2+0x44>
 800c3b0:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c3b4:	fb0c f505 	mul.w	r5, ip, r5
 800c3b8:	1d06      	adds	r6, r0, #4
 800c3ba:	442e      	add	r6, r5
 800c3bc:	4405      	add	r5, r0
 800c3be:	4426      	add	r6, r4
 800c3c0:	442c      	add	r4, r5
 800c3c2:	600e      	str	r6, [r1, #0]
 800c3c4:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c3c8:	6011      	str	r1, [r2, #0]
 800c3ca:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c3ce:	801a      	strh	r2, [r3, #0]
 800c3d0:	887b      	ldrh	r3, [r7, #2]
 800c3d2:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c3d6:	3301      	adds	r3, #1
 800c3d8:	f003 0301 	and.w	r3, r3, #1
 800c3dc:	807b      	strh	r3, [r7, #2]
 800c3de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3e0:	2000      	movs	r0, #0
 800c3e2:	e7fc      	b.n	800c3de <udp_recv2+0x42>
 800c3e4:	20002dc8 	andcs	r2, r0, r8, asr #27

0800c3e8 <udp_send>:
 800c3e8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c3ec:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800c524 <udp_send+0x13c>
 800c3f0:	461c      	mov	r4, r3
 800c3f2:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c3f6:	4607      	mov	r7, r0
 800c3f8:	4688      	mov	r8, r1
 800c3fa:	4616      	mov	r6, r2
 800c3fc:	2b00      	cmp	r3, #0
 800c3fe:	f000 808e 	beq.w	800c51e <udp_send+0x136>
 800c402:	1c63      	adds	r3, r4, #1
 800c404:	d144      	bne.n	800c490 <udp_send+0xa8>
 800c406:	4848      	ldr	r0, [pc, #288]	; (800c528 <udp_send+0x140>)
 800c408:	2107      	movs	r1, #7
 800c40a:	4602      	mov	r2, r0
 800c40c:	23ff      	movs	r3, #255	; 0xff
 800c40e:	e001      	b.n	800c414 <udp_send+0x2c>
 800c410:	f800 3b01 	strb.w	r3, [r0], #1
 800c414:	3901      	subs	r1, #1
 800c416:	d1fb      	bne.n	800c410 <udp_send+0x28>
 800c418:	7793      	strb	r3, [r2, #30]
 800c41a:	77d3      	strb	r3, [r2, #31]
 800c41c:	f882 3020 	strb.w	r3, [r2, #32]
 800c420:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 800c424:	2500      	movs	r5, #0
 800c426:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c52c <udp_send+0x144>
 800c42a:	4c3f      	ldr	r4, [pc, #252]	; (800c528 <udp_send+0x140>)
 800c42c:	f8ba 3000 	ldrh.w	r3, [sl]
 800c430:	2114      	movs	r1, #20
 800c432:	8263      	strh	r3, [r4, #18]
 800c434:	f106 031c 	add.w	r3, r6, #28
 800c438:	ba5b      	rev16	r3, r3
 800c43a:	f104 000e 	add.w	r0, r4, #14
 800c43e:	8223      	strh	r3, [r4, #16]
 800c440:	7625      	strb	r5, [r4, #24]
 800c442:	7665      	strb	r5, [r4, #25]
 800c444:	f001 fdc4 	bl	800dfd0 <net_chksum>
 800c448:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c44c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c450:	ba5b      	rev16	r3, r3
 800c452:	8463      	strh	r3, [r4, #34]	; 0x22
 800c454:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c458:	4632      	mov	r2, r6
 800c45a:	ba5b      	rev16	r3, r3
 800c45c:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c45e:	f106 0308 	add.w	r3, r6, #8
 800c462:	ba5b      	rev16	r3, r3
 800c464:	bf28      	it	cs
 800c466:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c46a:	4641      	mov	r1, r8
 800c46c:	8320      	strh	r0, [r4, #24]
 800c46e:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c472:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c474:	f7ff fe58 	bl	800c128 <net_memcpy>
 800c478:	4620      	mov	r0, r4
 800c47a:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c47e:	f004 fb0f 	bl	8010aa0 <emac_eth_send>
 800c482:	f8ba 3000 	ldrh.w	r3, [sl]
 800c486:	4628      	mov	r0, r5
 800c488:	3301      	adds	r3, #1
 800c48a:	f8aa 3000 	strh.w	r3, [sl]
 800c48e:	e037      	b.n	800c500 <udp_send+0x118>
 800c490:	4b27      	ldr	r3, [pc, #156]	; (800c530 <udp_send+0x148>)
 800c492:	681b      	ldr	r3, [r3, #0]
 800c494:	43a3      	bics	r3, r4
 800c496:	d10f      	bne.n	800c4b8 <udp_send+0xd0>
 800c498:	2307      	movs	r3, #7
 800c49a:	21ff      	movs	r1, #255	; 0xff
 800c49c:	4a22      	ldr	r2, [pc, #136]	; (800c528 <udp_send+0x140>)
 800c49e:	e001      	b.n	800c4a4 <udp_send+0xbc>
 800c4a0:	f802 1b01 	strb.w	r1, [r2], #1
 800c4a4:	3b01      	subs	r3, #1
 800c4a6:	d1fb      	bne.n	800c4a0 <udp_send+0xb8>
 800c4a8:	2204      	movs	r2, #4
 800c4aa:	4822      	ldr	r0, [pc, #136]	; (800c534 <udp_send+0x14c>)
 800c4ac:	eb0d 0102 	add.w	r1, sp, r2
 800c4b0:	9401      	str	r4, [sp, #4]
 800c4b2:	f7ff fe2f 	bl	800c114 <memcpy.isra.0>
 800c4b6:	e7b5      	b.n	800c424 <udp_send+0x3c>
 800c4b8:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c4bc:	2be0      	cmp	r3, #224	; 0xe0
 800c4be:	d10e      	bne.n	800c4de <udp_send+0xf6>
 800c4c0:	491d      	ldr	r1, [pc, #116]	; (800c538 <udp_send+0x150>)
 800c4c2:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c4c6:	70cb      	strb	r3, [r1, #3]
 800c4c8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c4cc:	710b      	strb	r3, [r1, #4]
 800c4ce:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c4d2:	2206      	movs	r2, #6
 800c4d4:	4814      	ldr	r0, [pc, #80]	; (800c528 <udp_send+0x140>)
 800c4d6:	714b      	strb	r3, [r1, #5]
 800c4d8:	f7ff fe1c 	bl	800c114 <memcpy.isra.0>
 800c4dc:	e7e4      	b.n	800c4a8 <udp_send+0xc0>
 800c4de:	4b17      	ldr	r3, [pc, #92]	; (800c53c <udp_send+0x154>)
 800c4e0:	681b      	ldr	r3, [r3, #0]
 800c4e2:	43a3      	bics	r3, r4
 800c4e4:	d00f      	beq.n	800c506 <udp_send+0x11e>
 800c4e6:	4d16      	ldr	r5, [pc, #88]	; (800c540 <udp_send+0x158>)
 800c4e8:	490f      	ldr	r1, [pc, #60]	; (800c528 <udp_send+0x140>)
 800c4ea:	6828      	ldr	r0, [r5, #0]
 800c4ec:	f001 f93a 	bl	800d764 <arp_cache_lookup>
 800c4f0:	682b      	ldr	r3, [r5, #0]
 800c4f2:	4298      	cmp	r0, r3
 800c4f4:	d0d8      	beq.n	800c4a8 <udp_send+0xc0>
 800c4f6:	4813      	ldr	r0, [pc, #76]	; (800c544 <udp_send+0x15c>)
 800c4f8:	f002 feea 	bl	800f2d0 <console_error>
 800c4fc:	f06f 0002 	mvn.w	r0, #2
 800c500:	b002      	add	sp, #8
 800c502:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c506:	4620      	mov	r0, r4
 800c508:	4907      	ldr	r1, [pc, #28]	; (800c528 <udp_send+0x140>)
 800c50a:	f001 f92b 	bl	800d764 <arp_cache_lookup>
 800c50e:	42a0      	cmp	r0, r4
 800c510:	d0ca      	beq.n	800c4a8 <udp_send+0xc0>
 800c512:	480d      	ldr	r0, [pc, #52]	; (800c548 <udp_send+0x160>)
 800c514:	f002 fedc 	bl	800f2d0 <console_error>
 800c518:	f06f 0001 	mvn.w	r0, #1
 800c51c:	e7f0      	b.n	800c500 <udp_send+0x118>
 800c51e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c522:	e7ed      	b.n	800c500 <udp_send+0x118>
 800c524:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c528:	20008a68 	andcs	r8, r0, r8, ror #20
 800c52c:	20002da4 	andcs	r2, r0, r4, lsr #27
 800c530:	20002d98 	mulcs	r0, r8, sp
 800c534:	20008a86 	andcs	r8, r0, r6, lsl #21
 800c538:	20000014 	andcs	r0, r0, r4, lsl r0
 800c53c:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c540:	20002d9c 	mulcs	r0, ip, sp
 800c544:	0801300a 	stmdaeq	r1, {r1, r3, ip, sp}
 800c548:	08013030 	stmdaeq	r1, {r4, r5, ip, sp}

0800c54c <strlen>:
 800c54c:	4603      	mov	r3, r0
 800c54e:	461a      	mov	r2, r3
 800c550:	7811      	ldrb	r1, [r2, #0]
 800c552:	3301      	adds	r3, #1
 800c554:	2900      	cmp	r1, #0
 800c556:	d1fa      	bne.n	800c54e <strlen+0x2>
 800c558:	1a10      	subs	r0, r2, r0
 800c55a:	4770      	bx	lr

0800c55c <strcmp>:
 800c55c:	1e43      	subs	r3, r0, #1
 800c55e:	3901      	subs	r1, #1
 800c560:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c564:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c568:	4290      	cmp	r0, r2
 800c56a:	d102      	bne.n	800c572 <strcmp+0x16>
 800c56c:	2800      	cmp	r0, #0
 800c56e:	d1f7      	bne.n	800c560 <strcmp+0x4>
 800c570:	4770      	bx	lr
 800c572:	1a80      	subs	r0, r0, r2
 800c574:	4770      	bx	lr

0800c576 <strcpy.isra.0>:
 800c576:	3801      	subs	r0, #1
 800c578:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c57c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c580:	2b00      	cmp	r3, #0
 800c582:	d1f9      	bne.n	800c578 <strcpy.isra.0+0x2>
 800c584:	4770      	bx	lr

0800c586 <strcat.isra.0>:
 800c586:	b538      	push	{r3, r4, r5, lr}
 800c588:	4604      	mov	r4, r0
 800c58a:	460d      	mov	r5, r1
 800c58c:	f7ff ffde 	bl	800c54c <strlen>
 800c590:	4629      	mov	r1, r5
 800c592:	4420      	add	r0, r4
 800c594:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c598:	f7ff bfed 	b.w	800c576 <strcpy.isra.0>

0800c59c <MDNS::MDNS()>:
 800c59c:	b513      	push	{r0, r1, r4, lr}
 800c59e:	4604      	mov	r4, r0
 800c5a0:	a901      	add	r1, sp, #4
 800c5a2:	4804      	ldr	r0, [pc, #16]	; (800c5b4 <MDNS::MDNS()+0x18>)
 800c5a4:	f002 fffa 	bl	800f59c <inet_aton>
 800c5a8:	4620      	mov	r0, r4
 800c5aa:	4b03      	ldr	r3, [pc, #12]	; (800c5b8 <MDNS::MDNS()+0x1c>)
 800c5ac:	9a01      	ldr	r2, [sp, #4]
 800c5ae:	601a      	str	r2, [r3, #0]
 800c5b0:	b002      	add	sp, #8
 800c5b2:	bd10      	pop	{r4, pc}
 800c5b4:	08013050 	stmdaeq	r1, {r4, r6, ip, sp}
 800c5b8:	2000905c 	andcs	r9, r0, ip, asr r0

0800c5bc <MDNS::SetName(char const*)>:
 800c5bc:	b538      	push	{r3, r4, r5, lr}
 800c5be:	4d0b      	ldr	r5, [pc, #44]	; (800c5ec <MDNS::SetName(char const*)+0x30>)
 800c5c0:	460c      	mov	r4, r1
 800c5c2:	6828      	ldr	r0, [r5, #0]
 800c5c4:	b108      	cbz	r0, 800c5ca <MDNS::SetName(char const*)+0xe>
 800c5c6:	f002 ffe3 	bl	800f590 <operator delete[](void*)>
 800c5ca:	4620      	mov	r0, r4
 800c5cc:	f7ff ffbe 	bl	800c54c <strlen>
 800c5d0:	3007      	adds	r0, #7
 800c5d2:	f002 ffe1 	bl	800f598 <operator new[](unsigned int)>
 800c5d6:	4621      	mov	r1, r4
 800c5d8:	6028      	str	r0, [r5, #0]
 800c5da:	f7ff ffcc 	bl	800c576 <strcpy.isra.0>
 800c5de:	6828      	ldr	r0, [r5, #0]
 800c5e0:	4903      	ldr	r1, [pc, #12]	; (800c5f0 <MDNS::SetName(char const*)+0x34>)
 800c5e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5e6:	f7ff bfce 	b.w	800c586 <strcat.isra.0>
 800c5ea:	bf00      	nop
 800c5ec:	2000948c 	andcs	r9, r0, ip, lsl #9
 800c5f0:	08013060 	stmdaeq	r1, {r5, r6, ip, sp}

0800c5f4 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800c5f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c5f8:	f04f 0e00 	mov.w	lr, #0
 800c5fc:	262e      	movs	r6, #46	; 0x2e
 800c5fe:	4675      	mov	r5, lr
 800c600:	4694      	mov	ip, r2
 800c602:	4f1d      	ldr	r7, [pc, #116]	; (800c678 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800c604:	4a1d      	ldr	r2, [pc, #116]	; (800c67c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800c606:	780b      	ldrb	r3, [r1, #0]
 800c608:	1c68      	adds	r0, r5, #1
 800c60a:	b383      	cbz	r3, 800c66e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800c60c:	2b3f      	cmp	r3, #63	; 0x3f
 800c60e:	d91d      	bls.n	800c64c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800c610:	f1be 0f00 	cmp.w	lr, #0
 800c614:	bf08      	it	eq
 800c616:	4605      	moveq	r5, r0
 800c618:	2000      	movs	r0, #0
 800c61a:	7849      	ldrb	r1, [r1, #1]
 800c61c:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800c620:	430b      	orrs	r3, r1
 800c622:	6811      	ldr	r1, [r2, #0]
 800c624:	5ccc      	ldrb	r4, [r1, r3]
 800c626:	3301      	adds	r3, #1
 800c628:	440b      	add	r3, r1
 800c62a:	42a0      	cmp	r0, r4
 800c62c:	5c19      	ldrb	r1, [r3, r0]
 800c62e:	d309      	bcc.n	800c644 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800c630:	f04f 0e01 	mov.w	lr, #1
 800c634:	1919      	adds	r1, r3, r4
 800c636:	4464      	add	r4, ip
 800c638:	780b      	ldrb	r3, [r1, #0]
 800c63a:	b10b      	cbz	r3, 800c640 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800c63c:	f804 6b01 	strb.w	r6, [r4], #1
 800c640:	46a4      	mov	ip, r4
 800c642:	e7e0      	b.n	800c606 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800c644:	f80c 1000 	strb.w	r1, [ip, r0]
 800c648:	3001      	adds	r0, #1
 800c64a:	e7ee      	b.n	800c62a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800c64c:	4688      	mov	r8, r1
 800c64e:	eb0c 0403 	add.w	r4, ip, r3
 800c652:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800c656:	f80c 9b01 	strb.w	r9, [ip], #1
 800c65a:	4564      	cmp	r4, ip
 800c65c:	d1f9      	bne.n	800c652 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800c65e:	f103 0c01 	add.w	ip, r3, #1
 800c662:	4461      	add	r1, ip
 800c664:	f1be 0f00 	cmp.w	lr, #0
 800c668:	d1e6      	bne.n	800c638 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800c66a:	18c5      	adds	r5, r0, r3
 800c66c:	e7e4      	b.n	800c638 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800c66e:	f88c 3000 	strb.w	r3, [ip]
 800c672:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c676:	bf00      	nop
 800c678:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800c67c:	20009490 	mulcs	r0, r0, r4

0800c680 <MDNS::FindFirstDotFromRight(char const*) const>:
 800c680:	b510      	push	{r4, lr}
 800c682:	4608      	mov	r0, r1
 800c684:	460c      	mov	r4, r1
 800c686:	f7ff ff61 	bl	800c54c <strlen>
 800c68a:	4420      	add	r0, r4
 800c68c:	42a0      	cmp	r0, r4
 800c68e:	d903      	bls.n	800c698 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800c690:	f810 3901 	ldrb.w	r3, [r0], #-1
 800c694:	2b2e      	cmp	r3, #46	; 0x2e
 800c696:	d1f9      	bne.n	800c68c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800c698:	3001      	adds	r0, #1
 800c69a:	bd10      	pop	{r4, pc}

0800c69c <MDNS::WriteDnsName(char const*, char*, bool)>:
 800c69c:	4610      	mov	r0, r2
 800c69e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6a0:	460f      	mov	r7, r1
 800c6a2:	1c44      	adds	r4, r0, #1
 800c6a4:	463d      	mov	r5, r7
 800c6a6:	f817 6b01 	ldrb.w	r6, [r7], #1
 800c6aa:	b126      	cbz	r6, 800c6b6 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800c6ac:	2e2e      	cmp	r6, #46	; 0x2e
 800c6ae:	d002      	beq.n	800c6b6 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800c6b0:	f804 6b01 	strb.w	r6, [r4], #1
 800c6b4:	e7f6      	b.n	800c6a4 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800c6b6:	1a69      	subs	r1, r5, r1
 800c6b8:	7001      	strb	r1, [r0, #0]
 800c6ba:	7829      	ldrb	r1, [r5, #0]
 800c6bc:	b921      	cbnz	r1, 800c6c8 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800c6be:	b10b      	cbz	r3, 800c6c4 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800c6c0:	f804 1b01 	strb.w	r1, [r4], #1
 800c6c4:	1aa0      	subs	r0, r4, r2
 800c6c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6c8:	4620      	mov	r0, r4
 800c6ca:	1c69      	adds	r1, r5, #1
 800c6cc:	e7e8      	b.n	800c6a0 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800c6d0 <MDNS::CreateAnswerLocalIpAddress()>:
 800c6d0:	2384      	movs	r3, #132	; 0x84
 800c6d2:	b510      	push	{r4, lr}
 800c6d4:	4c0f      	ldr	r4, [pc, #60]	; (800c714 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800c6d6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800c6da:	80e3      	strh	r3, [r4, #6]
 800c6dc:	2300      	movs	r3, #0
 800c6de:	490e      	ldr	r1, [pc, #56]	; (800c718 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800c6e0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800c6e4:	6809      	ldr	r1, [r1, #0]
 800c6e6:	f104 0210 	add.w	r2, r4, #16
 800c6ea:	2301      	movs	r3, #1
 800c6ec:	f7ff ffd6 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c6f0:	490a      	ldr	r1, [pc, #40]	; (800c71c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800c6f2:	1813      	adds	r3, r2, r0
 800c6f4:	5011      	str	r1, [r2, r0]
 800c6f6:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800c6fa:	605a      	str	r2, [r3, #4]
 800c6fc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c700:	811a      	strh	r2, [r3, #8]
 800c702:	4a07      	ldr	r2, [pc, #28]	; (800c720 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800c704:	6812      	ldr	r2, [r2, #0]
 800c706:	6912      	ldr	r2, [r2, #16]
 800c708:	f8c3 200a 	str.w	r2, [r3, #10]
 800c70c:	1b1b      	subs	r3, r3, r4
 800c70e:	330a      	adds	r3, #10
 800c710:	6023      	str	r3, [r4, #0]
 800c712:	bd10      	pop	{r4, pc}
 800c714:	20009060 	andcs	r9, r0, r0, rrx
 800c718:	2000948c 	andcs	r9, r0, ip, lsl #9
 800c71c:	01800100 	orreq	r0, r0, r0, lsl #2
 800c720:	20009494 	mulcs	r0, r4, r4

0800c724 <MDNS::Start()>:
 800c724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c726:	4c1e      	ldr	r4, [pc, #120]	; (800c7a0 <MDNS::Start()+0x7c>)
 800c728:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800c72c:	4605      	mov	r5, r0
 800c72e:	6820      	ldr	r0, [r4, #0]
 800c730:	f000 fb2a 	bl	800cd88 <Network::Begin(unsigned short)>
 800c734:	4e1b      	ldr	r6, [pc, #108]	; (800c7a4 <MDNS::Start()+0x80>)
 800c736:	4f1c      	ldr	r7, [pc, #112]	; (800c7a8 <MDNS::Start()+0x84>)
 800c738:	4601      	mov	r1, r0
 800c73a:	6030      	str	r0, [r6, #0]
 800c73c:	683a      	ldr	r2, [r7, #0]
 800c73e:	6820      	ldr	r0, [r4, #0]
 800c740:	f000 fb33 	bl	800cdaa <Network::JoinGroup(int, unsigned int)>
 800c744:	4b19      	ldr	r3, [pc, #100]	; (800c7ac <MDNS::Start()+0x88>)
 800c746:	681b      	ldr	r3, [r3, #0]
 800c748:	b923      	cbnz	r3, 800c754 <MDNS::Start()+0x30>
 800c74a:	6821      	ldr	r1, [r4, #0]
 800c74c:	4628      	mov	r0, r5
 800c74e:	311c      	adds	r1, #28
 800c750:	f7ff ff34 	bl	800c5bc <MDNS::SetName(char const*)>
 800c754:	4628      	mov	r0, r5
 800c756:	f7ff ffbb 	bl	800c6d0 <MDNS::CreateAnswerLocalIpAddress()>
 800c75a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c75e:	4914      	ldr	r1, [pc, #80]	; (800c7b0 <MDNS::Start()+0x8c>)
 800c760:	7830      	ldrb	r0, [r6, #0]
 800c762:	f851 2b04 	ldr.w	r2, [r1], #4
 800c766:	9300      	str	r3, [sp, #0]
 800c768:	b292      	uxth	r2, r2
 800c76a:	683b      	ldr	r3, [r7, #0]
 800c76c:	f7ff fe3c 	bl	800c3e8 <udp_send>
 800c770:	223f      	movs	r2, #63	; 0x3f
 800c772:	6820      	ldr	r0, [r4, #0]
 800c774:	4c0f      	ldr	r4, [pc, #60]	; (800c7b4 <MDNS::Start()+0x90>)
 800c776:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800c77a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800c77e:	b929      	cbnz	r1, 800c78c <MDNS::Start()+0x68>
 800c780:	441a      	add	r2, r3
 800c782:	4293      	cmp	r3, r2
 800c784:	d006      	beq.n	800c794 <MDNS::Start()+0x70>
 800c786:	f803 1b01 	strb.w	r1, [r3], #1
 800c78a:	e7fa      	b.n	800c782 <MDNS::Start()+0x5e>
 800c78c:	3a01      	subs	r2, #1
 800c78e:	f803 1b01 	strb.w	r1, [r3], #1
 800c792:	d1f2      	bne.n	800c77a <MDNS::Start()+0x56>
 800c794:	2300      	movs	r3, #0
 800c796:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800c79a:	b003      	add	sp, #12
 800c79c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c79e:	bf00      	nop
 800c7a0:	20009494 	mulcs	r0, r4, r4
 800c7a4:	2000001c 	andcs	r0, r0, ip, lsl r0
 800c7a8:	2000905c 	andcs	r9, r0, ip, asr r0
 800c7ac:	2000948c 	andcs	r9, r0, ip, lsl #9
 800c7b0:	20009060 	andcs	r9, r0, r0, rrx
 800c7b4:	08013060 	stmdaeq	r1, {r5, r6, ip, sp}

0800c7b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800c7b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7bc:	4c1b      	ldr	r4, [pc, #108]	; (800c82c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800c7be:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800c7c2:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800c7c6:	2300      	movs	r3, #0
 800c7c8:	f854 100c 	ldr.w	r1, [r4, ip]
 800c7cc:	4607      	mov	r7, r0
 800c7ce:	f7ff ff65 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c7d2:	2301      	movs	r3, #1
 800c7d4:	7bac      	ldrb	r4, [r5, #14]
 800c7d6:	4616      	mov	r6, r2
 800c7d8:	4915      	ldr	r1, [pc, #84]	; (800c830 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800c7da:	4402      	add	r2, r0
 800c7dc:	4815      	ldr	r0, [pc, #84]	; (800c834 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800c7de:	429c      	cmp	r4, r3
 800c7e0:	bf18      	it	ne
 800c7e2:	4601      	movne	r1, r0
 800c7e4:	4638      	mov	r0, r7
 800c7e6:	f7ff ff59 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c7ea:	4b13      	ldr	r3, [pc, #76]	; (800c838 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800c7ec:	1814      	adds	r4, r2, r0
 800c7ee:	5013      	str	r3, [r2, r0]
 800c7f0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c7f4:	6063      	str	r3, [r4, #4]
 800c7f6:	4b11      	ldr	r3, [pc, #68]	; (800c83c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800c7f8:	f8d3 8000 	ldr.w	r8, [r3]
 800c7fc:	4640      	mov	r0, r8
 800c7fe:	f7ff fea5 	bl	800c54c <strlen>
 800c802:	f100 0308 	add.w	r3, r0, #8
 800c806:	ba5b      	rev16	r3, r3
 800c808:	8123      	strh	r3, [r4, #8]
 800c80a:	2300      	movs	r3, #0
 800c80c:	f8c4 300a 	str.w	r3, [r4, #10]
 800c810:	89ab      	ldrh	r3, [r5, #12]
 800c812:	f104 0210 	add.w	r2, r4, #16
 800c816:	ba5b      	rev16	r3, r3
 800c818:	81e3      	strh	r3, [r4, #14]
 800c81a:	4641      	mov	r1, r8
 800c81c:	2301      	movs	r3, #1
 800c81e:	4638      	mov	r0, r7
 800c820:	f7ff ff3c 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c824:	4410      	add	r0, r2
 800c826:	1b80      	subs	r0, r0, r6
 800c828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c82c:	20009264 	andcs	r9, r0, r4, ror #4
 800c830:	0801305c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp}
 800c834:	08013079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, sp}
 800c838:	01802100 	orreq	r2, r0, r0, lsl #2
 800c83c:	2000948c 	andcs	r9, r0, ip, lsl #9

0800c840 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800c840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c844:	4e19      	ldr	r6, [pc, #100]	; (800c8ac <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800c846:	010f      	lsls	r7, r1, #4
 800c848:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800c84c:	2300      	movs	r3, #0
 800c84e:	59f1      	ldr	r1, [r6, r7]
 800c850:	4604      	mov	r4, r0
 800c852:	f7ff ff23 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c856:	2301      	movs	r3, #1
 800c858:	7bae      	ldrb	r6, [r5, #14]
 800c85a:	4690      	mov	r8, r2
 800c85c:	4914      	ldr	r1, [pc, #80]	; (800c8b0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800c85e:	4402      	add	r2, r0
 800c860:	4814      	ldr	r0, [pc, #80]	; (800c8b4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800c862:	429e      	cmp	r6, r3
 800c864:	bf18      	it	ne
 800c866:	4601      	movne	r1, r0
 800c868:	4620      	mov	r0, r4
 800c86a:	f7ff ff17 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c86e:	4b12      	ldr	r3, [pc, #72]	; (800c8b8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800c870:	1816      	adds	r6, r2, r0
 800c872:	5013      	str	r3, [r2, r0]
 800c874:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c878:	68a8      	ldr	r0, [r5, #8]
 800c87a:	6073      	str	r3, [r6, #4]
 800c87c:	f106 040b 	add.w	r4, r6, #11
 800c880:	b938      	cbnz	r0, 800c892 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800c882:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c886:	72b0      	strb	r0, [r6, #10]
 800c888:	8133      	strh	r3, [r6, #8]
 800c88a:	eba4 0008 	sub.w	r0, r4, r8
 800c88e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c892:	f7ff fe5b 	bl	800c54c <strlen>
 800c896:	4607      	mov	r7, r0
 800c898:	1c43      	adds	r3, r0, #1
 800c89a:	72b0      	strb	r0, [r6, #10]
 800c89c:	ba5b      	rev16	r3, r3
 800c89e:	4620      	mov	r0, r4
 800c8a0:	68a9      	ldr	r1, [r5, #8]
 800c8a2:	8133      	strh	r3, [r6, #8]
 800c8a4:	f7ff fe67 	bl	800c576 <strcpy.isra.0>
 800c8a8:	443c      	add	r4, r7
 800c8aa:	e7ee      	b.n	800c88a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800c8ac:	20009264 	andcs	r9, r0, r4, ror #4
 800c8b0:	0801305c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp}
 800c8b4:	08013079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, sp}
 800c8b8:	01801000 	orreq	r1, r0, r0

0800c8bc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800c8bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c8c0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c924 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800c8c4:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800c8c8:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800c8cc:	6869      	ldr	r1, [r5, #4]
 800c8ce:	2301      	movs	r3, #1
 800c8d0:	4607      	mov	r7, r0
 800c8d2:	f7ff fee3 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c8d6:	4b14      	ldr	r3, [pc, #80]	; (800c928 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800c8d8:	f858 8009 	ldr.w	r8, [r8, r9]
 800c8dc:	5013      	str	r3, [r2, r0]
 800c8de:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c8e2:	1816      	adds	r6, r2, r0
 800c8e4:	6073      	str	r3, [r6, #4]
 800c8e6:	4640      	mov	r0, r8
 800c8e8:	4614      	mov	r4, r2
 800c8ea:	f7ff fe2f 	bl	800c54c <strlen>
 800c8ee:	f100 030d 	add.w	r3, r0, #13
 800c8f2:	ba5b      	rev16	r3, r3
 800c8f4:	4641      	mov	r1, r8
 800c8f6:	8133      	strh	r3, [r6, #8]
 800c8f8:	f106 020a 	add.w	r2, r6, #10
 800c8fc:	2300      	movs	r3, #0
 800c8fe:	4638      	mov	r0, r7
 800c900:	f7ff fecc 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c904:	2301      	movs	r3, #1
 800c906:	4402      	add	r2, r0
 800c908:	7bad      	ldrb	r5, [r5, #14]
 800c90a:	4808      	ldr	r0, [pc, #32]	; (800c92c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800c90c:	4908      	ldr	r1, [pc, #32]	; (800c930 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800c90e:	429d      	cmp	r5, r3
 800c910:	bf18      	it	ne
 800c912:	4601      	movne	r1, r0
 800c914:	4638      	mov	r0, r7
 800c916:	f7ff fec1 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c91a:	4410      	add	r0, r2
 800c91c:	1b00      	subs	r0, r0, r4
 800c91e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c922:	bf00      	nop
 800c924:	20009264 	andcs	r9, r0, r4, ror #4
 800c928:	01000c00 	tsteq	r0, r0, lsl #24
 800c92c:	08013079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, sp}
 800c930:	0801305c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp}

0800c934 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800c934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c936:	460f      	mov	r7, r1
 800c938:	2301      	movs	r3, #1
 800c93a:	490f      	ldr	r1, [pc, #60]	; (800c978 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800c93c:	4606      	mov	r6, r0
 800c93e:	f7ff fead 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c942:	4b0e      	ldr	r3, [pc, #56]	; (800c97c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800c944:	490e      	ldr	r1, [pc, #56]	; (800c980 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800c946:	5013      	str	r3, [r2, r0]
 800c948:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c94c:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800c950:	684f      	ldr	r7, [r1, #4]
 800c952:	1815      	adds	r5, r2, r0
 800c954:	606b      	str	r3, [r5, #4]
 800c956:	4638      	mov	r0, r7
 800c958:	4614      	mov	r4, r2
 800c95a:	f7ff fdf7 	bl	800c54c <strlen>
 800c95e:	1c83      	adds	r3, r0, #2
 800c960:	ba5b      	rev16	r3, r3
 800c962:	812b      	strh	r3, [r5, #8]
 800c964:	f105 020a 	add.w	r2, r5, #10
 800c968:	2301      	movs	r3, #1
 800c96a:	4639      	mov	r1, r7
 800c96c:	4630      	mov	r0, r6
 800c96e:	f7ff fe95 	bl	800c69c <MDNS::WriteDnsName(char const*, char*, bool)>
 800c972:	4410      	add	r0, r2
 800c974:	1b00      	subs	r0, r0, r4
 800c976:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c978:	08013067 	stmdaeq	r1, {r0, r1, r2, r5, r6, ip, sp}
 800c97c:	01000c00 	tsteq	r0, r0, lsl #24
 800c980:	20009264 	andcs	r9, r0, r4, ror #4

0800c984 <MDNS::CreateMDNSMessage(unsigned int)>:
 800c984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c986:	2384      	movs	r3, #132	; 0x84
 800c988:	4d19      	ldr	r5, [pc, #100]	; (800c9f0 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800c98a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800c98e:	80eb      	strh	r3, [r5, #6]
 800c990:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c994:	f105 0410 	add.w	r4, r5, #16
 800c998:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800c99c:	4622      	mov	r2, r4
 800c99e:	4606      	mov	r6, r0
 800c9a0:	460f      	mov	r7, r1
 800c9a2:	f7ff ff09 	bl	800c7b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800c9a6:	4404      	add	r4, r0
 800c9a8:	4622      	mov	r2, r4
 800c9aa:	4639      	mov	r1, r7
 800c9ac:	4630      	mov	r0, r6
 800c9ae:	f7ff ff47 	bl	800c840 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800c9b2:	4404      	add	r4, r0
 800c9b4:	4622      	mov	r2, r4
 800c9b6:	4639      	mov	r1, r7
 800c9b8:	4630      	mov	r0, r6
 800c9ba:	f7ff ffbb 	bl	800c934 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800c9be:	4404      	add	r4, r0
 800c9c0:	4622      	mov	r2, r4
 800c9c2:	4639      	mov	r1, r7
 800c9c4:	4630      	mov	r0, r6
 800c9c6:	f7ff ff79 	bl	800c8bc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800c9ca:	4b0a      	ldr	r3, [pc, #40]	; (800c9f4 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800c9cc:	4404      	add	r4, r0
 800c9ce:	f853 2b10 	ldr.w	r2, [r3], #16
 800c9d2:	1e60      	subs	r0, r4, #1
 800c9d4:	3a0c      	subs	r2, #12
 800c9d6:	4611      	mov	r1, r2
 800c9d8:	3901      	subs	r1, #1
 800c9da:	d304      	bcc.n	800c9e6 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800c9dc:	f813 6b01 	ldrb.w	r6, [r3], #1
 800c9e0:	f800 6f01 	strb.w	r6, [r0, #1]!
 800c9e4:	e7f8      	b.n	800c9d8 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800c9e6:	4414      	add	r4, r2
 800c9e8:	4a03      	ldr	r2, [pc, #12]	; (800c9f8 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800c9ea:	1aa4      	subs	r4, r4, r2
 800c9ec:	602c      	str	r4, [r5, #0]
 800c9ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c9f0:	20009288 	andcs	r9, r0, r8, lsl #5
 800c9f4:	20009060 	andcs	r9, r0, r0, rrx
 800c9f8:	2000928c 	andcs	r9, r0, ip, lsl #5

0800c9fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800c9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca00:	4d3f      	ldr	r5, [pc, #252]	; (800cb00 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800ca02:	b085      	sub	sp, #20
 800ca04:	682c      	ldr	r4, [r5, #0]
 800ca06:	4680      	mov	r8, r0
 800ca08:	460f      	mov	r7, r1
 800ca0a:	4616      	mov	r6, r2
 800ca0c:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800ca10:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800ca14:	b11c      	cbz	r4, 800ca1e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800ca16:	692a      	ldr	r2, [r5, #16]
 800ca18:	2a00      	cmp	r2, #0
 800ca1a:	d16d      	bne.n	800caf8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800ca1c:	2401      	movs	r4, #1
 800ca1e:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800ca22:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800ca26:	8193      	strh	r3, [r2, #12]
 800ca28:	f882 b00e 	strb.w	fp, [r2, #14]
 800ca2c:	2f00      	cmp	r7, #0
 800ca2e:	d153      	bne.n	800cad8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800ca30:	4630      	mov	r0, r6
 800ca32:	f7ff fd8b 	bl	800c54c <strlen>
 800ca36:	4f33      	ldr	r7, [pc, #204]	; (800cb04 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ca38:	683b      	ldr	r3, [r7, #0]
 800ca3a:	331c      	adds	r3, #28
 800ca3c:	4418      	add	r0, r3
 800ca3e:	f7ff fd85 	bl	800c54c <strlen>
 800ca42:	3001      	adds	r0, #1
 800ca44:	f002 fda8 	bl	800f598 <operator new[](unsigned int)>
 800ca48:	6839      	ldr	r1, [r7, #0]
 800ca4a:	f845 0009 	str.w	r0, [r5, r9]
 800ca4e:	311c      	adds	r1, #28
 800ca50:	f7ff fd91 	bl	800c576 <strcpy.isra.0>
 800ca54:	f855 0009 	ldr.w	r0, [r5, r9]
 800ca58:	4631      	mov	r1, r6
 800ca5a:	f7ff fd94 	bl	800c586 <strcat.isra.0>
 800ca5e:	4631      	mov	r1, r6
 800ca60:	4640      	mov	r0, r8
 800ca62:	f7ff fe0d 	bl	800c680 <MDNS::FindFirstDotFromRight(char const*) const>
 800ca66:	eb05 0709 	add.w	r7, r5, r9
 800ca6a:	4605      	mov	r5, r0
 800ca6c:	f7ff fd6e 	bl	800c54c <strlen>
 800ca70:	300d      	adds	r0, #13
 800ca72:	f002 fd91 	bl	800f598 <operator new[](unsigned int)>
 800ca76:	4629      	mov	r1, r5
 800ca78:	6078      	str	r0, [r7, #4]
 800ca7a:	f7ff fd7c 	bl	800c576 <strcpy.isra.0>
 800ca7e:	4922      	ldr	r1, [pc, #136]	; (800cb08 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ca80:	6878      	ldr	r0, [r7, #4]
 800ca82:	f7ff fd80 	bl	800c586 <strcat.isra.0>
 800ca86:	4921      	ldr	r1, [pc, #132]	; (800cb0c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ca88:	4b21      	ldr	r3, [pc, #132]	; (800cb10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ca8a:	6878      	ldr	r0, [r7, #4]
 800ca8c:	f1bb 0f01 	cmp.w	fp, #1
 800ca90:	bf18      	it	ne
 800ca92:	4619      	movne	r1, r3
 800ca94:	f7ff fd77 	bl	800c586 <strcat.isra.0>
 800ca98:	f1ba 0f00 	cmp.w	sl, #0
 800ca9c:	d009      	beq.n	800cab2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800ca9e:	4650      	mov	r0, sl
 800caa0:	f7ff fd54 	bl	800c54c <strlen>
 800caa4:	3001      	adds	r0, #1
 800caa6:	f002 fd77 	bl	800f598 <operator new[](unsigned int)>
 800caaa:	4651      	mov	r1, sl
 800caac:	60b8      	str	r0, [r7, #8]
 800caae:	f7ff fd62 	bl	800c576 <strcpy.isra.0>
 800cab2:	4621      	mov	r1, r4
 800cab4:	4640      	mov	r0, r8
 800cab6:	f7ff ff65 	bl	800c984 <MDNS::CreateMDNSMessage(unsigned int)>
 800caba:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cabe:	4915      	ldr	r1, [pc, #84]	; (800cb14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800cac0:	4815      	ldr	r0, [pc, #84]	; (800cb18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cac2:	f851 2b04 	ldr.w	r2, [r1], #4
 800cac6:	9300      	str	r3, [sp, #0]
 800cac8:	4b14      	ldr	r3, [pc, #80]	; (800cb1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800caca:	7800      	ldrb	r0, [r0, #0]
 800cacc:	681b      	ldr	r3, [r3, #0]
 800cace:	b292      	uxth	r2, r2
 800cad0:	f7ff fc8a 	bl	800c3e8 <udp_send>
 800cad4:	2001      	movs	r0, #1
 800cad6:	e010      	b.n	800cafa <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800cad8:	4638      	mov	r0, r7
 800cada:	f7ff fd37 	bl	800c54c <strlen>
 800cade:	9003      	str	r0, [sp, #12]
 800cae0:	4630      	mov	r0, r6
 800cae2:	f7ff fd33 	bl	800c54c <strlen>
 800cae6:	9b03      	ldr	r3, [sp, #12]
 800cae8:	4418      	add	r0, r3
 800caea:	3001      	adds	r0, #1
 800caec:	f002 fd54 	bl	800f598 <operator new[](unsigned int)>
 800caf0:	4639      	mov	r1, r7
 800caf2:	f845 0009 	str.w	r0, [r5, r9]
 800caf6:	e7ab      	b.n	800ca50 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800caf8:	2000      	movs	r0, #0
 800cafa:	b005      	add	sp, #20
 800cafc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb00:	20009264 	andcs	r9, r0, r4, ror #4
 800cb04:	20009494 	mulcs	r0, r4, r4
 800cb08:	0801213f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sp}
 800cb0c:	0801305c 	stmdaeq	r1, {r2, r3, r4, r6, ip, sp}
 800cb10:	08013079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, sp}
 800cb14:	20009288 	andcs	r9, r0, r8, lsl #5
 800cb18:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cb1c:	2000905c 	andcs	r9, r0, ip, asr r0

0800cb20 <MDNS::HandleRequest(unsigned short)>:
 800cb20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb24:	4605      	mov	r5, r0
 800cb26:	2700      	movs	r7, #0
 800cb28:	f04f 080c 	mov.w	r8, #12
 800cb2c:	b0c5      	sub	sp, #276	; 0x114
 800cb2e:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800cbf4 <MDNS::HandleRequest(unsigned short)+0xd4>
 800cb32:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800cbf8 <MDNS::HandleRequest(unsigned short)+0xd8>
 800cb36:	9103      	str	r1, [sp, #12]
 800cb38:	9b03      	ldr	r3, [sp, #12]
 800cb3a:	42bb      	cmp	r3, r7
 800cb3c:	d956      	bls.n	800cbec <MDNS::HandleRequest(unsigned short)+0xcc>
 800cb3e:	f8da 1000 	ldr.w	r1, [sl]
 800cb42:	aa04      	add	r2, sp, #16
 800cb44:	4441      	add	r1, r8
 800cb46:	4628      	mov	r0, r5
 800cb48:	f7ff fd54 	bl	800c5f4 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800cb4c:	f8da 2000 	ldr.w	r2, [sl]
 800cb50:	4440      	add	r0, r8
 800cb52:	1813      	adds	r3, r2, r0
 800cb54:	885b      	ldrh	r3, [r3, #2]
 800cb56:	f100 0804 	add.w	r8, r0, #4
 800cb5a:	ba5b      	rev16	r3, r3
 800cb5c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800cb60:	2b01      	cmp	r3, #1
 800cb62:	d13e      	bne.n	800cbe2 <MDNS::HandleRequest(unsigned short)+0xc2>
 800cb64:	5a14      	ldrh	r4, [r2, r0]
 800cb66:	4b25      	ldr	r3, [pc, #148]	; (800cbfc <MDNS::HandleRequest(unsigned short)+0xdc>)
 800cb68:	ba64      	rev16	r4, r4
 800cb6a:	6818      	ldr	r0, [r3, #0]
 800cb6c:	a904      	add	r1, sp, #16
 800cb6e:	b2a4      	uxth	r4, r4
 800cb70:	f7ff fcf4 	bl	800c55c <strcmp>
 800cb74:	b970      	cbnz	r0, 800cb94 <MDNS::HandleRequest(unsigned short)+0x74>
 800cb76:	2c01      	cmp	r4, #1
 800cb78:	d10c      	bne.n	800cb94 <MDNS::HandleRequest(unsigned short)+0x74>
 800cb7a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cb7e:	4920      	ldr	r1, [pc, #128]	; (800cc00 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800cb80:	4820      	ldr	r0, [pc, #128]	; (800cc04 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800cb82:	f851 2b04 	ldr.w	r2, [r1], #4
 800cb86:	9300      	str	r3, [sp, #0]
 800cb88:	4b1f      	ldr	r3, [pc, #124]	; (800cc08 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800cb8a:	7800      	ldrb	r0, [r0, #0]
 800cb8c:	681b      	ldr	r3, [r3, #0]
 800cb8e:	b292      	uxth	r2, r2
 800cb90:	f7ff fc2a 	bl	800c3e8 <udp_send>
 800cb94:	481d      	ldr	r0, [pc, #116]	; (800cc0c <MDNS::HandleRequest(unsigned short)+0xec>)
 800cb96:	a904      	add	r1, sp, #16
 800cb98:	f7ff fce0 	bl	800c55c <strcmp>
 800cb9c:	f04f 0900 	mov.w	r9, #0
 800cba0:	4e1b      	ldr	r6, [pc, #108]	; (800cc10 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800cba2:	9002      	str	r0, [sp, #8]
 800cba4:	6833      	ldr	r3, [r6, #0]
 800cba6:	b1c3      	cbz	r3, 800cbda <MDNS::HandleRequest(unsigned short)+0xba>
 800cba8:	9b02      	ldr	r3, [sp, #8]
 800cbaa:	b123      	cbz	r3, 800cbb6 <MDNS::HandleRequest(unsigned short)+0x96>
 800cbac:	6870      	ldr	r0, [r6, #4]
 800cbae:	a904      	add	r1, sp, #16
 800cbb0:	f7ff fcd4 	bl	800c55c <strcmp>
 800cbb4:	b988      	cbnz	r0, 800cbda <MDNS::HandleRequest(unsigned short)+0xba>
 800cbb6:	2c0c      	cmp	r4, #12
 800cbb8:	d10f      	bne.n	800cbda <MDNS::HandleRequest(unsigned short)+0xba>
 800cbba:	4649      	mov	r1, r9
 800cbbc:	4628      	mov	r0, r5
 800cbbe:	f7ff fee1 	bl	800c984 <MDNS::CreateMDNSMessage(unsigned int)>
 800cbc2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cbc6:	480f      	ldr	r0, [pc, #60]	; (800cc04 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800cbc8:	9300      	str	r3, [sp, #0]
 800cbca:	4b0f      	ldr	r3, [pc, #60]	; (800cc08 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800cbcc:	f8bb 2000 	ldrh.w	r2, [fp]
 800cbd0:	681b      	ldr	r3, [r3, #0]
 800cbd2:	4910      	ldr	r1, [pc, #64]	; (800cc14 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800cbd4:	7800      	ldrb	r0, [r0, #0]
 800cbd6:	f7ff fc07 	bl	800c3e8 <udp_send>
 800cbda:	3610      	adds	r6, #16
 800cbdc:	f1b9 0f00 	cmp.w	r9, #0
 800cbe0:	d001      	beq.n	800cbe6 <MDNS::HandleRequest(unsigned short)+0xc6>
 800cbe2:	3701      	adds	r7, #1
 800cbe4:	e7a8      	b.n	800cb38 <MDNS::HandleRequest(unsigned short)+0x18>
 800cbe6:	f04f 0901 	mov.w	r9, #1
 800cbea:	e7db      	b.n	800cba4 <MDNS::HandleRequest(unsigned short)+0x84>
 800cbec:	b045      	add	sp, #276	; 0x114
 800cbee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbf2:	bf00      	nop
 800cbf4:	20009490 	mulcs	r0, r0, r4
 800cbf8:	20009288 	andcs	r9, r0, r8, lsl #5
 800cbfc:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cc00:	20009060 	andcs	r9, r0, r0, rrx
 800cc04:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cc08:	2000905c 	andcs	r9, r0, ip, asr r0
 800cc0c:	08013067 	stmdaeq	r1, {r0, r1, r2, r5, r6, ip, sp}
 800cc10:	20009264 	andcs	r9, r0, r4, ror #4
 800cc14:	2000928c 	andcs	r9, r0, ip, lsl #5

0800cc18 <MDNS::Parse()>:
 800cc18:	4b08      	ldr	r3, [pc, #32]	; (800cc3c <MDNS::Parse()+0x24>)
 800cc1a:	681a      	ldr	r2, [r3, #0]
 800cc1c:	8853      	ldrh	r3, [r2, #2]
 800cc1e:	ba5b      	rev16	r3, r3
 800cc20:	b299      	uxth	r1, r3
 800cc22:	041b      	lsls	r3, r3, #16
 800cc24:	d408      	bmi.n	800cc38 <MDNS::Parse()+0x20>
 800cc26:	0b8b      	lsrs	r3, r1, #14
 800cc28:	d106      	bne.n	800cc38 <MDNS::Parse()+0x20>
 800cc2a:	8891      	ldrh	r1, [r2, #4]
 800cc2c:	b28b      	uxth	r3, r1
 800cc2e:	b11b      	cbz	r3, 800cc38 <MDNS::Parse()+0x20>
 800cc30:	ba49      	rev16	r1, r1
 800cc32:	b289      	uxth	r1, r1
 800cc34:	f7ff bf74 	b.w	800cb20 <MDNS::HandleRequest(unsigned short)>
 800cc38:	4770      	bx	lr
 800cc3a:	bf00      	nop
 800cc3c:	20009490 	mulcs	r0, r0, r4

0800cc40 <MDNS::Run()>:
 800cc40:	b538      	push	{r3, r4, r5, lr}
 800cc42:	4d0c      	ldr	r5, [pc, #48]	; (800cc74 <MDNS::Run()+0x34>)
 800cc44:	4604      	mov	r4, r0
 800cc46:	480c      	ldr	r0, [pc, #48]	; (800cc78 <MDNS::Run()+0x38>)
 800cc48:	462b      	mov	r3, r5
 800cc4a:	4a0c      	ldr	r2, [pc, #48]	; (800cc7c <MDNS::Run()+0x3c>)
 800cc4c:	490c      	ldr	r1, [pc, #48]	; (800cc80 <MDNS::Run()+0x40>)
 800cc4e:	7800      	ldrb	r0, [r0, #0]
 800cc50:	f7ff fba4 	bl	800c39c <udp_recv2>
 800cc54:	4b0b      	ldr	r3, [pc, #44]	; (800cc84 <MDNS::Run()+0x44>)
 800cc56:	882a      	ldrh	r2, [r5, #0]
 800cc58:	8018      	strh	r0, [r3, #0]
 800cc5a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cc5e:	429a      	cmp	r2, r3
 800cc60:	d106      	bne.n	800cc70 <MDNS::Run()+0x30>
 800cc62:	280c      	cmp	r0, #12
 800cc64:	d904      	bls.n	800cc70 <MDNS::Run()+0x30>
 800cc66:	4620      	mov	r0, r4
 800cc68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc6c:	f7ff bfd4 	b.w	800cc18 <MDNS::Parse()>
 800cc70:	bd38      	pop	{r3, r4, r5, pc}
 800cc72:	bf00      	nop
 800cc74:	20009058 	andcs	r9, r0, r8, asr r0
 800cc78:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cc7c:	20009054 	andcs	r9, r0, r4, asr r0
 800cc80:	20009490 	mulcs	r0, r0, r4
 800cc84:	20009284 	andcs	r9, r0, r4, lsl #5

0800cc88 <MDNS::Print()>:
 800cc88:	b510      	push	{r4, lr}
 800cc8a:	4816      	ldr	r0, [pc, #88]	; (800cce4 <MDNS::Print()+0x5c>)
 800cc8c:	f002 ff7a 	bl	800fb84 <printf>
 800cc90:	4b15      	ldr	r3, [pc, #84]	; (800cce8 <MDNS::Print()+0x60>)
 800cc92:	681b      	ldr	r3, [r3, #0]
 800cc94:	3301      	adds	r3, #1
 800cc96:	d104      	bne.n	800cca2 <MDNS::Print()+0x1a>
 800cc98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc9c:	4813      	ldr	r0, [pc, #76]	; (800ccec <MDNS::Print()+0x64>)
 800cc9e:	f002 bf71 	b.w	800fb84 <printf>
 800cca2:	4b13      	ldr	r3, [pc, #76]	; (800ccf0 <MDNS::Print()+0x68>)
 800cca4:	4c13      	ldr	r4, [pc, #76]	; (800ccf4 <MDNS::Print()+0x6c>)
 800cca6:	6819      	ldr	r1, [r3, #0]
 800cca8:	4813      	ldr	r0, [pc, #76]	; (800ccf8 <MDNS::Print()+0x70>)
 800ccaa:	f002 ff6b 	bl	800fb84 <printf>
 800ccae:	6823      	ldr	r3, [r4, #0]
 800ccb0:	b14b      	cbz	r3, 800ccc6 <MDNS::Print()+0x3e>
 800ccb2:	4a12      	ldr	r2, [pc, #72]	; (800ccfc <MDNS::Print()+0x74>)
 800ccb4:	68a3      	ldr	r3, [r4, #8]
 800ccb6:	6861      	ldr	r1, [r4, #4]
 800ccb8:	2b00      	cmp	r3, #0
 800ccba:	bf08      	it	eq
 800ccbc:	4613      	moveq	r3, r2
 800ccbe:	4810      	ldr	r0, [pc, #64]	; (800cd00 <MDNS::Print()+0x78>)
 800ccc0:	89a2      	ldrh	r2, [r4, #12]
 800ccc2:	f002 ff5f 	bl	800fb84 <printf>
 800ccc6:	6923      	ldr	r3, [r4, #16]
 800ccc8:	b15b      	cbz	r3, 800cce2 <MDNS::Print()+0x5a>
 800ccca:	69a3      	ldr	r3, [r4, #24]
 800cccc:	4a0b      	ldr	r2, [pc, #44]	; (800ccfc <MDNS::Print()+0x74>)
 800ccce:	6961      	ldr	r1, [r4, #20]
 800ccd0:	2b00      	cmp	r3, #0
 800ccd2:	bf08      	it	eq
 800ccd4:	4613      	moveq	r3, r2
 800ccd6:	480a      	ldr	r0, [pc, #40]	; (800cd00 <MDNS::Print()+0x78>)
 800ccd8:	8ba2      	ldrh	r2, [r4, #28]
 800ccda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ccde:	f002 bf51 	b.w	800fb84 <printf>
 800cce2:	bd10      	pop	{r4, pc}
 800cce4:	08013084 	stmdaeq	r1, {r2, r7, ip, sp}
 800cce8:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ccec:	0801308a 	stmdaeq	r1, {r1, r3, r7, ip, sp}
 800ccf0:	2000948c 	andcs	r9, r0, ip, lsl #9
 800ccf4:	20009264 	andcs	r9, r0, r4, ror #4
 800ccf8:	08013098 	stmdaeq	r1, {r3, r4, r7, ip, sp}
 800ccfc:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 800cd00:	080130a4 	stmdaeq	r1, {r2, r5, r7, ip, sp}

0800cd04 <strncpy.constprop.0.isra.0>:
 800cd04:	233f      	movs	r3, #63	; 0x3f
 800cd06:	3901      	subs	r1, #1
 800cd08:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800cd0c:	b92a      	cbnz	r2, 800cd1a <strncpy.constprop.0.isra.0+0x16>
 800cd0e:	4403      	add	r3, r0
 800cd10:	4298      	cmp	r0, r3
 800cd12:	d007      	beq.n	800cd24 <strncpy.constprop.0.isra.0+0x20>
 800cd14:	f800 2b01 	strb.w	r2, [r0], #1
 800cd18:	e7fa      	b.n	800cd10 <strncpy.constprop.0.isra.0+0xc>
 800cd1a:	3b01      	subs	r3, #1
 800cd1c:	f800 2b01 	strb.w	r2, [r0], #1
 800cd20:	d1f2      	bne.n	800cd08 <strncpy.constprop.0.isra.0+0x4>
 800cd22:	4770      	bx	lr
 800cd24:	4770      	bx	lr
	...

0800cd28 <Network::Network()>:
 800cd28:	4a11      	ldr	r2, [pc, #68]	; (800cd70 <Network::Network()+0x48>)
 800cd2a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800cd2e:	6010      	str	r0, [r2, #0]
 800cd30:	2201      	movs	r2, #1
 800cd32:	2300      	movs	r3, #0
 800cd34:	e9c0 1200 	strd	r1, r2, [r0]
 800cd38:	2200      	movs	r2, #0
 800cd3a:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800cd3e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800cd42:	490c      	ldr	r1, [pc, #48]	; (800cd74 <Network::Network()+0x4c>)
 800cd44:	60c2      	str	r2, [r0, #12]
 800cd46:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800cd4a:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800cd4e:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800cd52:	6083      	str	r3, [r0, #8]
 800cd54:	6183      	str	r3, [r0, #24]
 800cd56:	7703      	strb	r3, [r0, #28]
 800cd58:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800cd5c:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800cd60:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cd64:	f802 3b01 	strb.w	r3, [r2], #1
 800cd68:	2b00      	cmp	r3, #0
 800cd6a:	d1f9      	bne.n	800cd60 <Network::Network()+0x38>
 800cd6c:	4770      	bx	lr
 800cd6e:	bf00      	nop
 800cd70:	20009494 	mulcs	r0, r4, r4
 800cd74:	080130af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, ip, sp}

0800cd78 <Network::Shutdown()>:
 800cd78:	b508      	push	{r3, lr}
 800cd7a:	30b8      	adds	r0, #184	; 0xb8
 800cd7c:	f001 fd7e 	bl	800e87c <NetworkDisplay::ShowShutdown()>
 800cd80:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd84:	f7fe bdc2 	b.w	800b90c <net_shutdown>

0800cd88 <Network::Begin(unsigned short)>:
 800cd88:	4608      	mov	r0, r1
 800cd8a:	f7ff ba97 	b.w	800c2bc <udp_bind>

0800cd8e <Network::End(unsigned short)>:
 800cd8e:	4608      	mov	r0, r1
 800cd90:	f7ff baae 	b.w	800c2f0 <udp_unbind>

0800cd94 <Network::MacAddressCopyTo(unsigned char*)>:
 800cd94:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800cd98:	3901      	subs	r1, #1
 800cd9a:	30a2      	adds	r0, #162	; 0xa2
 800cd9c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cda0:	4283      	cmp	r3, r0
 800cda2:	f801 2f01 	strb.w	r2, [r1, #1]!
 800cda6:	d1f9      	bne.n	800cd9c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800cda8:	4770      	bx	lr

0800cdaa <Network::JoinGroup(int, unsigned int)>:
 800cdaa:	4610      	mov	r0, r2
 800cdac:	f001 b858 	b.w	800de60 <igmp_join>

0800cdb0 <Network::LeaveGroup(int, unsigned int)>:
 800cdb0:	4610      	mov	r0, r2
 800cdb2:	f001 b881 	b.w	800deb8 <igmp_leave>

0800cdb6 <Network::SetDefaultIp()>:
 800cdb6:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800cdba:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800cdbe:	041b      	lsls	r3, r3, #16
 800cdc0:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800cdc4:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800cdc8:	3302      	adds	r3, #2
 800cdca:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800cdce:	22ff      	movs	r2, #255	; 0xff
 800cdd0:	6103      	str	r3, [r0, #16]
 800cdd2:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800cdd6:	4770      	bx	lr

0800cdd8 <Network::Init(NetworkParamsStore*)>:
 800cdd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cddc:	b08b      	sub	sp, #44	; 0x2c
 800cdde:	4604      	mov	r4, r0
 800cde0:	a806      	add	r0, sp, #24
 800cde2:	f000 f9b1 	bl	800d148 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800cde6:	a806      	add	r0, sp, #24
 800cde8:	f000 f9be 	bl	800d168 <NetworkParams::Load()>
 800cdec:	b110      	cbz	r0, 800cdf4 <Network::Init(NetworkParamsStore*)+0x1c>
 800cdee:	a806      	add	r0, sp, #24
 800cdf0:	f000 fba3 	bl	800d53a <NetworkParams::Dump()>
 800cdf4:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800cdf8:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800d020 <Network::Init(NetworkParamsStore*)+0x248>
 800cdfc:	4628      	mov	r0, r5
 800cdfe:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800ce02:	f001 fd2f 	bl	800e864 <NetworkDisplay::ShowEmacStart()>
 800ce06:	4638      	mov	r0, r7
 800ce08:	f003 fd86 	bl	8010918 <emac_start>
 800ce0c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800ce10:	f104 061c 	add.w	r6, r4, #28
 800ce14:	9307      	str	r3, [sp, #28]
 800ce16:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ce1a:	9308      	str	r3, [sp, #32]
 800ce1c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ce20:	9309      	str	r3, [sp, #36]	; 0x24
 800ce22:	f898 3014 	ldrb.w	r3, [r8, #20]
 800ce26:	7063      	strb	r3, [r4, #1]
 800ce28:	f8d8 3000 	ldr.w	r3, [r8]
 800ce2c:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800ce30:	bf18      	it	ne
 800ce32:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800ce36:	061b      	lsls	r3, r3, #24
 800ce38:	bf58      	it	pl
 800ce3a:	2300      	movpl	r3, #0
 800ce3c:	60a2      	str	r2, [r4, #8]
 800ce3e:	bf48      	it	mi
 800ce40:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800ce44:	60e3      	str	r3, [r4, #12]
 800ce46:	f898 3015 	ldrb.w	r3, [r8, #21]
 800ce4a:	2b00      	cmp	r3, #0
 800ce4c:	d15e      	bne.n	800cf0c <Network::Init(NetworkParamsStore*)+0x134>
 800ce4e:	4632      	mov	r2, r6
 800ce50:	4874      	ldr	r0, [pc, #464]	; (800d024 <Network::Init(NetworkParamsStore*)+0x24c>)
 800ce52:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ce56:	f103 0c01 	add.w	ip, r3, #1
 800ce5a:	b119      	cbz	r1, 800ce64 <Network::Init(NetworkParamsStore*)+0x8c>
 800ce5c:	4663      	mov	r3, ip
 800ce5e:	f802 1b01 	strb.w	r1, [r2], #1
 800ce62:	e7f6      	b.n	800ce52 <Network::Init(NetworkParamsStore*)+0x7a>
 800ce64:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800ce68:	18e1      	adds	r1, r4, r3
 800ce6a:	0910      	lsrs	r0, r2, #4
 800ce6c:	2a9f      	cmp	r2, #159	; 0x9f
 800ce6e:	f002 020f 	and.w	r2, r2, #15
 800ce72:	bf94      	ite	ls
 800ce74:	3030      	addls	r0, #48	; 0x30
 800ce76:	3037      	addhi	r0, #55	; 0x37
 800ce78:	2a09      	cmp	r2, #9
 800ce7a:	bf94      	ite	ls
 800ce7c:	3230      	addls	r2, #48	; 0x30
 800ce7e:	3237      	addhi	r2, #55	; 0x37
 800ce80:	44a4      	add	ip, r4
 800ce82:	7708      	strb	r0, [r1, #28]
 800ce84:	f88c 201c 	strb.w	r2, [ip, #28]
 800ce88:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800ce8c:	f103 0e02 	add.w	lr, r3, #2
 800ce90:	0910      	lsrs	r0, r2, #4
 800ce92:	2a9f      	cmp	r2, #159	; 0x9f
 800ce94:	f002 020f 	and.w	r2, r2, #15
 800ce98:	bf94      	ite	ls
 800ce9a:	3030      	addls	r0, #48	; 0x30
 800ce9c:	3037      	addhi	r0, #55	; 0x37
 800ce9e:	f103 0903 	add.w	r9, r3, #3
 800cea2:	2a09      	cmp	r2, #9
 800cea4:	44a6      	add	lr, r4
 800cea6:	f88e 001c 	strb.w	r0, [lr, #28]
 800ceaa:	bf94      	ite	ls
 800ceac:	3230      	addls	r2, #48	; 0x30
 800ceae:	3237      	addhi	r2, #55	; 0x37
 800ceb0:	eb04 0009 	add.w	r0, r4, r9
 800ceb4:	7702      	strb	r2, [r0, #28]
 800ceb6:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800ceba:	f103 0c04 	add.w	ip, r3, #4
 800cebe:	0910      	lsrs	r0, r2, #4
 800cec0:	2a9f      	cmp	r2, #159	; 0x9f
 800cec2:	f002 020f 	and.w	r2, r2, #15
 800cec6:	bf94      	ite	ls
 800cec8:	3030      	addls	r0, #48	; 0x30
 800ceca:	3037      	addhi	r0, #55	; 0x37
 800cecc:	3305      	adds	r3, #5
 800cece:	2a09      	cmp	r2, #9
 800ced0:	4423      	add	r3, r4
 800ced2:	44a4      	add	ip, r4
 800ced4:	bf94      	ite	ls
 800ced6:	3230      	addls	r2, #48	; 0x30
 800ced8:	3237      	addhi	r2, #55	; 0x37
 800ceda:	f88c 001c 	strb.w	r0, [ip, #28]
 800cede:	771a      	strb	r2, [r3, #28]
 800cee0:	2300      	movs	r3, #0
 800cee2:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800cee6:	7863      	ldrb	r3, [r4, #1]
 800cee8:	b95b      	cbnz	r3, 800cf02 <Network::Init(NetworkParamsStore*)+0x12a>
 800ceea:	9b07      	ldr	r3, [sp, #28]
 800ceec:	b9b3      	cbnz	r3, 800cf1c <Network::Init(NetworkParamsStore*)+0x144>
 800ceee:	4620      	mov	r0, r4
 800cef0:	f7ff ff61 	bl	800cdb6 <Network::SetDefaultIp()>
 800cef4:	6923      	ldr	r3, [r4, #16]
 800cef6:	69a2      	ldr	r2, [r4, #24]
 800cef8:	9307      	str	r3, [sp, #28]
 800cefa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800cefe:	7863      	ldrb	r3, [r4, #1]
 800cf00:	b19b      	cbz	r3, 800cf2a <Network::Init(NetworkParamsStore*)+0x152>
 800cf02:	2101      	movs	r1, #1
 800cf04:	4628      	mov	r0, r5
 800cf06:	f001 fcbf 	bl	800e888 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cf0a:	e00e      	b.n	800cf2a <Network::Init(NetworkParamsStore*)+0x152>
 800cf0c:	4630      	mov	r0, r6
 800cf0e:	4946      	ldr	r1, [pc, #280]	; (800d028 <Network::Init(NetworkParamsStore*)+0x250>)
 800cf10:	f7ff fef8 	bl	800cd04 <strncpy.constprop.0.isra.0>
 800cf14:	2300      	movs	r3, #0
 800cf16:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800cf1a:	e7e4      	b.n	800cee6 <Network::Init(NetworkParamsStore*)+0x10e>
 800cf1c:	69a1      	ldr	r1, [r4, #24]
 800cf1e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800cf22:	4053      	eors	r3, r2
 800cf24:	420b      	tst	r3, r1
 800cf26:	d000      	beq.n	800cf2a <Network::Init(NetworkParamsStore*)+0x152>
 800cf28:	9209      	str	r2, [sp, #36]	; 0x24
 800cf2a:	1ce3      	adds	r3, r4, #3
 800cf2c:	f104 0901 	add.w	r9, r4, #1
 800cf30:	9302      	str	r3, [sp, #8]
 800cf32:	9300      	str	r3, [sp, #0]
 800cf34:	4632      	mov	r2, r6
 800cf36:	464b      	mov	r3, r9
 800cf38:	4638      	mov	r0, r7
 800cf3a:	a907      	add	r1, sp, #28
 800cf3c:	f7fe fc96 	bl	800b86c <net_init>
 800cf40:	78e3      	ldrb	r3, [r4, #3]
 800cf42:	b11b      	cbz	r3, 800cf4c <Network::Init(NetworkParamsStore*)+0x174>
 800cf44:	2104      	movs	r1, #4
 800cf46:	4628      	mov	r0, r5
 800cf48:	f001 fc9e 	bl	800e888 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cf4c:	f898 3014 	ldrb.w	r3, [r8, #20]
 800cf50:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800cf54:	9304      	str	r3, [sp, #16]
 800cf56:	233c      	movs	r3, #60	; 0x3c
 800cf58:	fb03 f30a 	mul.w	r3, r3, sl
 800cf5c:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800d02c <Network::Init(NetworkParamsStore*)+0x254>
 800cf60:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800d030 <Network::Init(NetworkParamsStore*)+0x258>
 800cf64:	9303      	str	r3, [sp, #12]
 800cf66:	78e3      	ldrb	r3, [r4, #3]
 800cf68:	b95b      	cbnz	r3, 800cf82 <Network::Init(NetworkParamsStore*)+0x1aa>
 800cf6a:	9b07      	ldr	r3, [sp, #28]
 800cf6c:	4628      	mov	r0, r5
 800cf6e:	6123      	str	r3, [r4, #16]
 800cf70:	9b08      	ldr	r3, [sp, #32]
 800cf72:	61a3      	str	r3, [r4, #24]
 800cf74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf76:	6163      	str	r3, [r4, #20]
 800cf78:	f001 fc7a 	bl	800e870 <NetworkDisplay::ShowIp()>
 800cf7c:	b00b      	add	sp, #44	; 0x2c
 800cf7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf82:	f1ba 0f00 	cmp.w	sl, #0
 800cf86:	d0f0      	beq.n	800cf6a <Network::Init(NetworkParamsStore*)+0x192>
 800cf88:	9b04      	ldr	r3, [sp, #16]
 800cf8a:	2b00      	cmp	r3, #0
 800cf8c:	d0ed      	beq.n	800cf6a <Network::Init(NetworkParamsStore*)+0x192>
 800cf8e:	2104      	movs	r1, #4
 800cf90:	f8d8 0000 	ldr.w	r0, [r8]
 800cf94:	f002 fa1c 	bl	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 800cf98:	2103      	movs	r1, #3
 800cf9a:	4628      	mov	r0, r5
 800cf9c:	f001 fc74 	bl	800e888 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cfa0:	2000      	movs	r0, #0
 800cfa2:	f002 ff25 	bl	800fdf0 <time>
 800cfa6:	9005      	str	r0, [sp, #20]
 800cfa8:	2000      	movs	r0, #0
 800cfaa:	f002 ff21 	bl	800fdf0 <time>
 800cfae:	9b05      	ldr	r3, [sp, #20]
 800cfb0:	1ac0      	subs	r0, r0, r3
 800cfb2:	9b03      	ldr	r3, [sp, #12]
 800cfb4:	4298      	cmp	r0, r3
 800cfb6:	da1a      	bge.n	800cfee <Network::Init(NetworkParamsStore*)+0x216>
 800cfb8:	f8d8 3000 	ldr.w	r3, [r8]
 800cfbc:	491d      	ldr	r1, [pc, #116]	; (800d034 <Network::Init(NetworkParamsStore*)+0x25c>)
 800cfbe:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800cfc2:	f1bc 0f00 	cmp.w	ip, #0
 800cfc6:	d0ef      	beq.n	800cfa8 <Network::Init(NetworkParamsStore*)+0x1d0>
 800cfc8:	6808      	ldr	r0, [r1, #0]
 800cfca:	695a      	ldr	r2, [r3, #20]
 800cfcc:	1a80      	subs	r0, r0, r2
 800cfce:	4584      	cmp	ip, r0
 800cfd0:	d8ea      	bhi.n	800cfa8 <Network::Init(NetworkParamsStore*)+0x1d0>
 800cfd2:	6808      	ldr	r0, [r1, #0]
 800cfd4:	6158      	str	r0, [r3, #20]
 800cfd6:	6918      	ldr	r0, [r3, #16]
 800cfd8:	2801      	cmp	r0, #1
 800cfda:	f080 0201 	eor.w	r2, r0, #1
 800cfde:	611a      	str	r2, [r3, #16]
 800cfe0:	bf16      	itet	ne
 800cfe2:	2301      	movne	r3, #1
 800cfe4:	f8cb 0014 	streq.w	r0, [fp, #20]
 800cfe8:	f8cb 3010 	strne.w	r3, [fp, #16]
 800cfec:	e7dc      	b.n	800cfa8 <Network::Init(NetworkParamsStore*)+0x1d0>
 800cfee:	2101      	movs	r1, #1
 800cff0:	4628      	mov	r0, r5
 800cff2:	f001 fc49 	bl	800e888 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cff6:	2101      	movs	r1, #1
 800cff8:	f8d8 0000 	ldr.w	r0, [r8]
 800cffc:	f002 f9e8 	bl	800f3d0 <LedBlink::SetMode(ledblink::Mode)>
 800d000:	2301      	movs	r3, #1
 800d002:	7063      	strb	r3, [r4, #1]
 800d004:	2300      	movs	r3, #0
 800d006:	70e3      	strb	r3, [r4, #3]
 800d008:	9b02      	ldr	r3, [sp, #8]
 800d00a:	4632      	mov	r2, r6
 800d00c:	9300      	str	r3, [sp, #0]
 800d00e:	4638      	mov	r0, r7
 800d010:	464b      	mov	r3, r9
 800d012:	a907      	add	r1, sp, #28
 800d014:	f7fe fc2a 	bl	800b86c <net_init>
 800d018:	7863      	ldrb	r3, [r4, #1]
 800d01a:	2b00      	cmp	r3, #0
 800d01c:	d0a3      	beq.n	800cf66 <Network::Init(NetworkParamsStore*)+0x18e>
 800d01e:	e7a4      	b.n	800cf6a <Network::Init(NetworkParamsStore*)+0x192>
 800d020:	20009498 	mulcs	r0, r8, r4
 800d024:	080130b4 	stmdaeq	r1, {r2, r4, r5, r7, ip, sp}
 800d028:	200094ad 	andcs	r9, r0, sp, lsr #9
 800d02c:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800d030:	40011000 	andmi	r1, r1, r0
 800d034:	20009bd4 	ldrdcs	r9, [r0], -r4

0800d038 <Network::Print()>:
 800d038:	b530      	push	{r4, r5, lr}
 800d03a:	4604      	mov	r4, r0
 800d03c:	b085      	sub	sp, #20
 800d03e:	4832      	ldr	r0, [pc, #200]	; (800d108 <Network::Print()+0xd0>)
 800d040:	f002 fda0 	bl	800fb84 <printf>
 800d044:	f104 011c 	add.w	r1, r4, #28
 800d048:	4830      	ldr	r0, [pc, #192]	; (800d10c <Network::Print()+0xd4>)
 800d04a:	f002 fd9b 	bl	800fb84 <printf>
 800d04e:	6861      	ldr	r1, [r4, #4]
 800d050:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800d054:	482e      	ldr	r0, [pc, #184]	; (800d110 <Network::Print()+0xd8>)
 800d056:	f002 fd95 	bl	800fb84 <printf>
 800d05a:	69a0      	ldr	r0, [r4, #24]
 800d05c:	f7fa f890 	bl	8007180 <__popcountsi2>
 800d060:	6925      	ldr	r5, [r4, #16]
 800d062:	9001      	str	r0, [sp, #4]
 800d064:	0e2b      	lsrs	r3, r5, #24
 800d066:	9300      	str	r3, [sp, #0]
 800d068:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d06c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d070:	b2e9      	uxtb	r1, r5
 800d072:	4828      	ldr	r0, [pc, #160]	; (800d114 <Network::Print()+0xdc>)
 800d074:	f002 fd86 	bl	800fb84 <printf>
 800d078:	69a1      	ldr	r1, [r4, #24]
 800d07a:	4827      	ldr	r0, [pc, #156]	; (800d118 <Network::Print()+0xe0>)
 800d07c:	0e0b      	lsrs	r3, r1, #24
 800d07e:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d082:	9300      	str	r3, [sp, #0]
 800d084:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d088:	b2c9      	uxtb	r1, r1
 800d08a:	f002 fd7b 	bl	800fb84 <printf>
 800d08e:	6961      	ldr	r1, [r4, #20]
 800d090:	4822      	ldr	r0, [pc, #136]	; (800d11c <Network::Print()+0xe4>)
 800d092:	0e0b      	lsrs	r3, r1, #24
 800d094:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d098:	9300      	str	r3, [sp, #0]
 800d09a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d09e:	b2c9      	uxtb	r1, r1
 800d0a0:	f002 fd70 	bl	800fb84 <printf>
 800d0a4:	69a3      	ldr	r3, [r4, #24]
 800d0a6:	6921      	ldr	r1, [r4, #16]
 800d0a8:	481d      	ldr	r0, [pc, #116]	; (800d120 <Network::Print()+0xe8>)
 800d0aa:	ea61 0103 	orn	r1, r1, r3
 800d0ae:	0e0b      	lsrs	r3, r1, #24
 800d0b0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d0b4:	9300      	str	r3, [sp, #0]
 800d0b6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d0ba:	b2c9      	uxtb	r1, r1
 800d0bc:	f002 fd62 	bl	800fb84 <printf>
 800d0c0:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800d0c4:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800d0c8:	9302      	str	r3, [sp, #8]
 800d0ca:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800d0ce:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800d0d2:	9301      	str	r3, [sp, #4]
 800d0d4:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800d0d8:	4812      	ldr	r0, [pc, #72]	; (800d124 <Network::Print()+0xec>)
 800d0da:	9300      	str	r3, [sp, #0]
 800d0dc:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800d0e0:	f002 fd50 	bl	800fb84 <printf>
 800d0e4:	4b10      	ldr	r3, [pc, #64]	; (800d128 <Network::Print()+0xf0>)
 800d0e6:	681b      	ldr	r3, [r3, #0]
 800d0e8:	78da      	ldrb	r2, [r3, #3]
 800d0ea:	b952      	cbnz	r2, 800d102 <Network::Print()+0xca>
 800d0ec:	785b      	ldrb	r3, [r3, #1]
 800d0ee:	2b00      	cmp	r3, #0
 800d0f0:	bf14      	ite	ne
 800d0f2:	2144      	movne	r1, #68	; 0x44
 800d0f4:	2153      	moveq	r1, #83	; 0x53
 800d0f6:	480d      	ldr	r0, [pc, #52]	; (800d12c <Network::Print()+0xf4>)
 800d0f8:	b005      	add	sp, #20
 800d0fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d0fe:	f002 bd41 	b.w	800fb84 <printf>
 800d102:	215a      	movs	r1, #90	; 0x5a
 800d104:	e7f7      	b.n	800d0f6 <Network::Print()+0xbe>
 800d106:	bf00      	nop
 800d108:	080130c0 	stmdaeq	r1, {r6, r7, ip, sp}
 800d10c:	080130c9 	stmdaeq	r1, {r0, r3, r6, r7, ip, sp}
 800d110:	080130da 	stmdaeq	r1, {r1, r3, r4, r6, r7, ip, sp}
 800d114:	080130ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, ip, sp}
 800d118:	0801310c 	stmdaeq	r1, {r2, r3, r8, ip, sp}
 800d11c:	08013126 	stmdaeq	r1, {r1, r2, r5, r8, ip, sp}
 800d120:	08013140 	stmdaeq	r1, {r6, r8, ip, sp}
 800d124:	0801315a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, sp}
 800d128:	20009494 	mulcs	r0, r4, r4
 800d12c:	08013186 	stmdaeq	r1, {r1, r2, r7, r8, ip, sp}

0800d130 <Network::TcpBegin(unsigned short)>:
 800d130:	4608      	mov	r0, r1
 800d132:	f7fe bf71 	b.w	800c018 <tcp_begin>

0800d136 <Network::TcpRead(int, unsigned char const**)>:
 800d136:	4608      	mov	r0, r1
 800d138:	4611      	mov	r1, r2
 800d13a:	f7fe bfab 	b.w	800c094 <tcp_read>

0800d13e <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d13e:	4608      	mov	r0, r1
 800d140:	4611      	mov	r1, r2
 800d142:	461a      	mov	r2, r3
 800d144:	f7fe bf82 	b.w	800c04c <tcp_write>

0800d148 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d148:	4b06      	ldr	r3, [pc, #24]	; (800d164 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d14a:	b510      	push	{r4, lr}
 800d14c:	225e      	movs	r2, #94	; 0x5e
 800d14e:	4604      	mov	r4, r0
 800d150:	6001      	str	r1, [r0, #0]
 800d152:	2100      	movs	r1, #0
 800d154:	4618      	mov	r0, r3
 800d156:	f002 faf3 	bl	800f740 <memset>
 800d15a:	2201      	movs	r2, #1
 800d15c:	7502      	strb	r2, [r0, #20]
 800d15e:	4620      	mov	r0, r4
 800d160:	bd10      	pop	{r4, pc}
 800d162:	bf00      	nop
 800d164:	20009498 	mulcs	r0, r8, r4

0800d168 <NetworkParams::Load()>:
 800d168:	b508      	push	{r3, lr}
 800d16a:	2300      	movs	r3, #0
 800d16c:	4905      	ldr	r1, [pc, #20]	; (800d184 <NetworkParams::Load()+0x1c>)
 800d16e:	6800      	ldr	r0, [r0, #0]
 800d170:	700b      	strb	r3, [r1, #0]
 800d172:	704b      	strb	r3, [r1, #1]
 800d174:	708b      	strb	r3, [r1, #2]
 800d176:	70cb      	strb	r3, [r1, #3]
 800d178:	b118      	cbz	r0, 800d182 <NetworkParams::Load()+0x1a>
 800d17a:	6803      	ldr	r3, [r0, #0]
 800d17c:	68db      	ldr	r3, [r3, #12]
 800d17e:	4798      	blx	r3
 800d180:	2001      	movs	r0, #1
 800d182:	bd08      	pop	{r3, pc}
 800d184:	20009498 	mulcs	r0, r8, r4

0800d188 <NetworkParams::Load(char const*, unsigned int)>:
 800d188:	6803      	ldr	r3, [r0, #0]
 800d18a:	b1eb      	cbz	r3, 800d1c8 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d18c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d18e:	2300      	movs	r3, #0
 800d190:	460e      	mov	r6, r1
 800d192:	4617      	mov	r7, r2
 800d194:	4605      	mov	r5, r0
 800d196:	4c0d      	ldr	r4, [pc, #52]	; (800d1cc <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d198:	4602      	mov	r2, r0
 800d19a:	490d      	ldr	r1, [pc, #52]	; (800d1d0 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d19c:	4668      	mov	r0, sp
 800d19e:	7023      	strb	r3, [r4, #0]
 800d1a0:	7063      	strb	r3, [r4, #1]
 800d1a2:	70a3      	strb	r3, [r4, #2]
 800d1a4:	70e3      	strb	r3, [r4, #3]
 800d1a6:	f001 fcc3 	bl	800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d1aa:	463a      	mov	r2, r7
 800d1ac:	4631      	mov	r1, r6
 800d1ae:	4668      	mov	r0, sp
 800d1b0:	f001 fcc2 	bl	800eb38 <ReadConfigFile::Read(char const*, unsigned int)>
 800d1b4:	6828      	ldr	r0, [r5, #0]
 800d1b6:	4621      	mov	r1, r4
 800d1b8:	6803      	ldr	r3, [r0, #0]
 800d1ba:	689b      	ldr	r3, [r3, #8]
 800d1bc:	4798      	blx	r3
 800d1be:	4668      	mov	r0, sp
 800d1c0:	f001 fcb9 	bl	800eb36 <ReadConfigFile::~ReadConfigFile()>
 800d1c4:	b003      	add	sp, #12
 800d1c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d1c8:	4770      	bx	lr
 800d1ca:	bf00      	nop
 800d1cc:	20009498 	mulcs	r0, r8, r4
 800d1d0:	0800d305 	stmdaeq	r0, {r0, r2, r8, r9, ip, lr, pc}

0800d1d4 <NetworkParams::callbackFunction(char const*)>:
 800d1d4:	b530      	push	{r4, r5, lr}
 800d1d6:	460c      	mov	r4, r1
 800d1d8:	b085      	sub	sp, #20
 800d1da:	4620      	mov	r0, r4
 800d1dc:	4942      	ldr	r1, [pc, #264]	; (800d2e8 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d1de:	f10d 0207 	add.w	r2, sp, #7
 800d1e2:	f001 fd54 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d1e6:	b980      	cbnz	r0, 800d20a <NetworkParams::callbackFunction(char const*)+0x36>
 800d1e8:	4940      	ldr	r1, [pc, #256]	; (800d2ec <NetworkParams::callbackFunction(char const*)+0x118>)
 800d1ea:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d1ee:	680b      	ldr	r3, [r1, #0]
 800d1f0:	b142      	cbz	r2, 800d204 <NetworkParams::callbackFunction(char const*)+0x30>
 800d1f2:	f023 0301 	bic.w	r3, r3, #1
 800d1f6:	3a00      	subs	r2, #0
 800d1f8:	bf18      	it	ne
 800d1fa:	2201      	movne	r2, #1
 800d1fc:	600b      	str	r3, [r1, #0]
 800d1fe:	750a      	strb	r2, [r1, #20]
 800d200:	b005      	add	sp, #20
 800d202:	bd30      	pop	{r4, r5, pc}
 800d204:	f043 0301 	orr.w	r3, r3, #1
 800d208:	e7f5      	b.n	800d1f6 <NetworkParams::callbackFunction(char const*)+0x22>
 800d20a:	4620      	mov	r0, r4
 800d20c:	4938      	ldr	r1, [pc, #224]	; (800d2f0 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d20e:	f10d 0207 	add.w	r2, sp, #7
 800d212:	f001 fd3c 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d216:	b988      	cbnz	r0, 800d23c <NetworkParams::callbackFunction(char const*)+0x68>
 800d218:	4a34      	ldr	r2, [pc, #208]	; (800d2ec <NetworkParams::callbackFunction(char const*)+0x118>)
 800d21a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d21e:	6813      	ldr	r3, [r2, #0]
 800d220:	1e4d      	subs	r5, r1, #1
 800d222:	2d04      	cmp	r5, #4
 800d224:	bf97      	itett	ls
 800d226:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d22a:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d22e:	6013      	strls	r3, [r2, #0]
 800d230:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d234:	bf84      	itt	hi
 800d236:	6013      	strhi	r3, [r2, #0]
 800d238:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d23c:	4620      	mov	r0, r4
 800d23e:	492d      	ldr	r1, [pc, #180]	; (800d2f4 <NetworkParams::callbackFunction(char const*)+0x120>)
 800d240:	aa02      	add	r2, sp, #8
 800d242:	f001 fcc6 	bl	800ebd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d246:	b9d0      	cbnz	r0, 800d27e <NetworkParams::callbackFunction(char const*)+0xaa>
 800d248:	9b02      	ldr	r3, [sp, #8]
 800d24a:	b2d9      	uxtb	r1, r3
 800d24c:	29ac      	cmp	r1, #172	; 0xac
 800d24e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d252:	d00a      	beq.n	800d26a <NetworkParams::callbackFunction(char const*)+0x96>
 800d254:	29c0      	cmp	r1, #192	; 0xc0
 800d256:	d00c      	beq.n	800d272 <NetworkParams::callbackFunction(char const*)+0x9e>
 800d258:	290a      	cmp	r1, #10
 800d25a:	d10d      	bne.n	800d278 <NetworkParams::callbackFunction(char const*)+0xa4>
 800d25c:	4a23      	ldr	r2, [pc, #140]	; (800d2ec <NetworkParams::callbackFunction(char const*)+0x118>)
 800d25e:	6053      	str	r3, [r2, #4]
 800d260:	6813      	ldr	r3, [r2, #0]
 800d262:	f043 0302 	orr.w	r3, r3, #2
 800d266:	6013      	str	r3, [r2, #0]
 800d268:	e7ca      	b.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d26a:	3a10      	subs	r2, #16
 800d26c:	2a0f      	cmp	r2, #15
 800d26e:	d8c7      	bhi.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d270:	e7f4      	b.n	800d25c <NetworkParams::callbackFunction(char const*)+0x88>
 800d272:	2aa8      	cmp	r2, #168	; 0xa8
 800d274:	d1c4      	bne.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d276:	e7f1      	b.n	800d25c <NetworkParams::callbackFunction(char const*)+0x88>
 800d278:	2b00      	cmp	r3, #0
 800d27a:	d0ef      	beq.n	800d25c <NetworkParams::callbackFunction(char const*)+0x88>
 800d27c:	e7c0      	b.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d27e:	4620      	mov	r0, r4
 800d280:	491d      	ldr	r1, [pc, #116]	; (800d2f8 <NetworkParams::callbackFunction(char const*)+0x124>)
 800d282:	aa02      	add	r2, sp, #8
 800d284:	f001 fca5 	bl	800ebd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d288:	b970      	cbnz	r0, 800d2a8 <NetworkParams::callbackFunction(char const*)+0xd4>
 800d28a:	9a02      	ldr	r2, [sp, #8]
 800d28c:	2a00      	cmp	r2, #0
 800d28e:	d0b7      	beq.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d290:	ba13      	rev	r3, r2
 800d292:	43d9      	mvns	r1, r3
 800d294:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d298:	d1b2      	bne.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d29a:	4b14      	ldr	r3, [pc, #80]	; (800d2ec <NetworkParams::callbackFunction(char const*)+0x118>)
 800d29c:	609a      	str	r2, [r3, #8]
 800d29e:	681a      	ldr	r2, [r3, #0]
 800d2a0:	f042 0204 	orr.w	r2, r2, #4
 800d2a4:	601a      	str	r2, [r3, #0]
 800d2a6:	e7ab      	b.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d2a8:	4620      	mov	r0, r4
 800d2aa:	4914      	ldr	r1, [pc, #80]	; (800d2fc <NetworkParams::callbackFunction(char const*)+0x128>)
 800d2ac:	aa02      	add	r2, sp, #8
 800d2ae:	f001 fc90 	bl	800ebd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d2b2:	4d0e      	ldr	r5, [pc, #56]	; (800d2ec <NetworkParams::callbackFunction(char const*)+0x118>)
 800d2b4:	b930      	cbnz	r0, 800d2c4 <NetworkParams::callbackFunction(char const*)+0xf0>
 800d2b6:	9b02      	ldr	r3, [sp, #8]
 800d2b8:	60eb      	str	r3, [r5, #12]
 800d2ba:	682b      	ldr	r3, [r5, #0]
 800d2bc:	f043 0308 	orr.w	r3, r3, #8
 800d2c0:	602b      	str	r3, [r5, #0]
 800d2c2:	e79d      	b.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d2c4:	233f      	movs	r3, #63	; 0x3f
 800d2c6:	4620      	mov	r0, r4
 800d2c8:	9303      	str	r3, [sp, #12]
 800d2ca:	490d      	ldr	r1, [pc, #52]	; (800d300 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d2cc:	ab03      	add	r3, sp, #12
 800d2ce:	f105 0215 	add.w	r2, r5, #21
 800d2d2:	f001 fc65 	bl	800eba0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d2d6:	2800      	cmp	r0, #0
 800d2d8:	d192      	bne.n	800d200 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d2da:	9b03      	ldr	r3, [sp, #12]
 800d2dc:	442b      	add	r3, r5
 800d2de:	7558      	strb	r0, [r3, #21]
 800d2e0:	682b      	ldr	r3, [r5, #0]
 800d2e2:	f043 0320 	orr.w	r3, r3, #32
 800d2e6:	e7eb      	b.n	800d2c0 <NetworkParams::callbackFunction(char const*)+0xec>
 800d2e8:	080131de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, ip, sp}
 800d2ec:	20009498 	mulcs	r0, r8, r4
 800d2f0:	080131bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, ip, sp}
 800d2f4:	080131a1 	stmdaeq	r1, {r0, r5, r7, r8, ip, sp}
 800d2f8:	080131d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, ip, sp}
 800d2fc:	080131ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip, sp}
 800d300:	080131cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp}

0800d304 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d304:	f7ff bf66 	b.w	800d1d4 <NetworkParams::callbackFunction(char const*)>

0800d308 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d308:	b530      	push	{r4, r5, lr}
 800d30a:	4614      	mov	r4, r2
 800d30c:	461d      	mov	r5, r3
 800d30e:	b087      	sub	sp, #28
 800d310:	2900      	cmp	r1, #0
 800d312:	d040      	beq.n	800d396 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800d314:	225e      	movs	r2, #94	; 0x5e
 800d316:	4871      	ldr	r0, [pc, #452]	; (800d4dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d318:	f002 f9fb 	bl	800f712 <memmove>
 800d31c:	4622      	mov	r2, r4
 800d31e:	462b      	mov	r3, r5
 800d320:	496f      	ldr	r1, [pc, #444]	; (800d4e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d322:	a803      	add	r0, sp, #12
 800d324:	f001 fb64 	bl	800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d328:	4c6c      	ldr	r4, [pc, #432]	; (800d4dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d32a:	6823      	ldr	r3, [r4, #0]
 800d32c:	0799      	lsls	r1, r3, #30
 800d32e:	bf5f      	itttt	pl
 800d330:	4a6c      	ldrpl	r2, [pc, #432]	; (800d4e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d332:	6812      	ldrpl	r2, [r2, #0]
 800d334:	6912      	ldrpl	r2, [r2, #16]
 800d336:	6062      	strpl	r2, [r4, #4]
 800d338:	075a      	lsls	r2, r3, #29
 800d33a:	bf5f      	itttt	pl
 800d33c:	4a69      	ldrpl	r2, [pc, #420]	; (800d4e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d33e:	6812      	ldrpl	r2, [r2, #0]
 800d340:	6992      	ldrpl	r2, [r2, #24]
 800d342:	60a2      	strpl	r2, [r4, #8]
 800d344:	071d      	lsls	r5, r3, #28
 800d346:	bf5f      	itttt	pl
 800d348:	4a66      	ldrpl	r2, [pc, #408]	; (800d4e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d34a:	6812      	ldrpl	r2, [r2, #0]
 800d34c:	6952      	ldrpl	r2, [r2, #20]
 800d34e:	60e2      	strpl	r2, [r4, #12]
 800d350:	0698      	lsls	r0, r3, #26
 800d352:	d40c      	bmi.n	800d36e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800d354:	223f      	movs	r2, #63	; 0x3f
 800d356:	4b63      	ldr	r3, [pc, #396]	; (800d4e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d358:	4863      	ldr	r0, [pc, #396]	; (800d4e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d35a:	681b      	ldr	r3, [r3, #0]
 800d35c:	331b      	adds	r3, #27
 800d35e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d362:	b9f1      	cbnz	r1, 800d3a2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800d364:	f002 f9ec 	bl	800f740 <memset>
 800d368:	2300      	movs	r3, #0
 800d36a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d36e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d372:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d376:	42a9      	cmp	r1, r5
 800d378:	d226      	bcs.n	800d3c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800d37a:	9803      	ldr	r0, [sp, #12]
 800d37c:	1a6d      	subs	r5, r5, r1
 800d37e:	4408      	add	r0, r1
 800d380:	6821      	ldr	r1, [r4, #0]
 800d382:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d386:	07c9      	lsls	r1, r1, #31
 800d388:	7d23      	ldrb	r3, [r4, #20]
 800d38a:	d40f      	bmi.n	800d3ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800d38c:	b97a      	cbnz	r2, 800d3ae <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d38e:	9300      	str	r3, [sp, #0]
 800d390:	4a56      	ldr	r2, [pc, #344]	; (800d4ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d392:	4b57      	ldr	r3, [pc, #348]	; (800d4f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d394:	e00e      	b.n	800d3b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d396:	6800      	ldr	r0, [r0, #0]
 800d398:	4950      	ldr	r1, [pc, #320]	; (800d4dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d39a:	6803      	ldr	r3, [r0, #0]
 800d39c:	68db      	ldr	r3, [r3, #12]
 800d39e:	4798      	blx	r3
 800d3a0:	e7bc      	b.n	800d31c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d3a2:	3a01      	subs	r2, #1
 800d3a4:	f800 1b01 	strb.w	r1, [r0], #1
 800d3a8:	d1d9      	bne.n	800d35e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d3aa:	e7dd      	b.n	800d368 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800d3ac:	b30a      	cbz	r2, 800d3f2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800d3ae:	9300      	str	r3, [sp, #0]
 800d3b0:	4a50      	ldr	r2, [pc, #320]	; (800d4f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d3b2:	4b4f      	ldr	r3, [pc, #316]	; (800d4f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d3b4:	4629      	mov	r1, r5
 800d3b6:	f002 fc0d 	bl	800fbd4 <snprintf>
 800d3ba:	4285      	cmp	r5, r0
 800d3bc:	bfa2      	ittt	ge
 800d3be:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d3c2:	18c0      	addge	r0, r0, r3
 800d3c4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d3c8:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d3cc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d3d0:	42a9      	cmp	r1, r5
 800d3d2:	d221      	bcs.n	800d418 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800d3d4:	9803      	ldr	r0, [sp, #12]
 800d3d6:	1a6d      	subs	r5, r5, r1
 800d3d8:	4408      	add	r0, r1
 800d3da:	6821      	ldr	r1, [r4, #0]
 800d3dc:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d3e0:	05c9      	lsls	r1, r1, #23
 800d3e2:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d3e6:	d408      	bmi.n	800d3fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800d3e8:	b94a      	cbnz	r2, 800d3fe <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d3ea:	9300      	str	r3, [sp, #0]
 800d3ec:	4a3f      	ldr	r2, [pc, #252]	; (800d4ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d3ee:	4b42      	ldr	r3, [pc, #264]	; (800d4f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d3f0:	e008      	b.n	800d404 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d3f2:	9300      	str	r3, [sp, #0]
 800d3f4:	4a41      	ldr	r2, [pc, #260]	; (800d4fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d3f6:	4b3e      	ldr	r3, [pc, #248]	; (800d4f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d3f8:	e7dc      	b.n	800d3b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d3fa:	2a00      	cmp	r2, #0
 800d3fc:	d03e      	beq.n	800d47c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800d3fe:	9300      	str	r3, [sp, #0]
 800d400:	4a3c      	ldr	r2, [pc, #240]	; (800d4f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d402:	4b3d      	ldr	r3, [pc, #244]	; (800d4f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d404:	4629      	mov	r1, r5
 800d406:	f002 fbe5 	bl	800fbd4 <snprintf>
 800d40a:	4285      	cmp	r5, r0
 800d40c:	bfa2      	ittt	ge
 800d40e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d412:	18c0      	addge	r0, r0, r3
 800d414:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d418:	4939      	ldr	r1, [pc, #228]	; (800d500 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d41a:	a803      	add	r0, sp, #12
 800d41c:	f001 fb6e 	bl	800eafc <PropertiesBuilder::AddComment(char const*)>
 800d420:	6823      	ldr	r3, [r4, #0]
 800d422:	6862      	ldr	r2, [r4, #4]
 800d424:	4937      	ldr	r1, [pc, #220]	; (800d504 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d426:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d42a:	a803      	add	r0, sp, #12
 800d42c:	f001 fb22 	bl	800ea74 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d430:	6823      	ldr	r3, [r4, #0]
 800d432:	68a2      	ldr	r2, [r4, #8]
 800d434:	4934      	ldr	r1, [pc, #208]	; (800d508 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d436:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d43a:	a803      	add	r0, sp, #12
 800d43c:	f001 fb1a 	bl	800ea74 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d440:	6823      	ldr	r3, [r4, #0]
 800d442:	4932      	ldr	r1, [pc, #200]	; (800d50c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d444:	68e2      	ldr	r2, [r4, #12]
 800d446:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d44a:	a803      	add	r0, sp, #12
 800d44c:	f001 fb12 	bl	800ea74 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d450:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d454:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d458:	42a9      	cmp	r1, r5
 800d45a:	d221      	bcs.n	800d4a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800d45c:	6823      	ldr	r3, [r4, #0]
 800d45e:	9803      	ldr	r0, [sp, #12]
 800d460:	f013 0f20 	tst.w	r3, #32
 800d464:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d468:	4b1f      	ldr	r3, [pc, #124]	; (800d4e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d46a:	4408      	add	r0, r1
 800d46c:	eba5 0501 	sub.w	r5, r5, r1
 800d470:	d108      	bne.n	800d484 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800d472:	b942      	cbnz	r2, 800d486 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800d474:	9300      	str	r3, [sp, #0]
 800d476:	4a26      	ldr	r2, [pc, #152]	; (800d510 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d478:	4b26      	ldr	r3, [pc, #152]	; (800d514 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d47a:	e007      	b.n	800d48c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d47c:	9300      	str	r3, [sp, #0]
 800d47e:	4a1f      	ldr	r2, [pc, #124]	; (800d4fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d480:	4b1d      	ldr	r3, [pc, #116]	; (800d4f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d482:	e7bf      	b.n	800d404 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d484:	b32a      	cbz	r2, 800d4d2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800d486:	9300      	str	r3, [sp, #0]
 800d488:	4a23      	ldr	r2, [pc, #140]	; (800d518 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d48a:	4b22      	ldr	r3, [pc, #136]	; (800d514 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d48c:	4629      	mov	r1, r5
 800d48e:	f002 fba1 	bl	800fbd4 <snprintf>
 800d492:	4285      	cmp	r5, r0
 800d494:	bfa2      	ittt	ge
 800d496:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d49a:	18c0      	addge	r0, r0, r3
 800d49c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d4a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d4a4:	b17b      	cbz	r3, 800d4c6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800d4a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d4aa:	9b03      	ldr	r3, [sp, #12]
 800d4ac:	4413      	add	r3, r2
 800d4ae:	227d      	movs	r2, #125	; 0x7d
 800d4b0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d4b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d4b8:	9903      	ldr	r1, [sp, #12]
 800d4ba:	54ca      	strb	r2, [r1, r3]
 800d4bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d4c0:	3301      	adds	r3, #1
 800d4c2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d4c6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d4ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4cc:	601a      	str	r2, [r3, #0]
 800d4ce:	b007      	add	sp, #28
 800d4d0:	bd30      	pop	{r4, r5, pc}
 800d4d2:	9300      	str	r3, [sp, #0]
 800d4d4:	4a11      	ldr	r2, [pc, #68]	; (800d51c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d4d6:	4b0f      	ldr	r3, [pc, #60]	; (800d514 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d4d8:	e7d8      	b.n	800d48c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d4da:	bf00      	nop
 800d4dc:	20009498 	mulcs	r0, r8, r4
 800d4e0:	080131e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, ip, sp}
 800d4e4:	20009494 	mulcs	r0, r4, r4
 800d4e8:	200094ad 	andcs	r9, r0, sp, lsr #9
 800d4ec:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 800d4f0:	080131de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, ip, sp}
 800d4f4:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 800d4f8:	080131bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, ip, sp}
 800d4fc:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}
 800d500:	08013197 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, ip, sp}
 800d504:	080131a1 	stmdaeq	r1, {r0, r5, r7, r8, ip, sp}
 800d508:	080131d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, ip, sp}
 800d50c:	080131ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip, sp}
 800d510:	08011ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, ip}
 800d514:	080131cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp}
 800d518:	08011cd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, fp, ip}
 800d51c:	08011ce2 	stmdaeq	r1, {r1, r5, r6, r7, sl, fp, ip}

0800d520 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d520:	b513      	push	{r0, r1, r4, lr}
 800d522:	6804      	ldr	r4, [r0, #0]
 800d524:	b914      	cbnz	r4, 800d52c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d526:	601c      	str	r4, [r3, #0]
 800d528:	b002      	add	sp, #8
 800d52a:	bd10      	pop	{r4, pc}
 800d52c:	9300      	str	r3, [sp, #0]
 800d52e:	4613      	mov	r3, r2
 800d530:	460a      	mov	r2, r1
 800d532:	2100      	movs	r1, #0
 800d534:	f7ff fee8 	bl	800d308 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800d538:	e7f6      	b.n	800d528 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d53a <NetworkParams::Dump()>:
 800d53a:	4770      	bx	lr

0800d53c <memcpy.isra.0>:
 800d53c:	3801      	subs	r0, #1
 800d53e:	440a      	add	r2, r1
 800d540:	4291      	cmp	r1, r2
 800d542:	d100      	bne.n	800d546 <memcpy.isra.0+0xa>
 800d544:	4770      	bx	lr
 800d546:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d54a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d54e:	e7f7      	b.n	800d540 <memcpy.isra.0+0x4>

0800d550 <arp_announce>:
 800d550:	4803      	ldr	r0, [pc, #12]	; (800d560 <arp_announce+0x10>)
 800d552:	69c3      	ldr	r3, [r0, #28]
 800d554:	b113      	cbz	r3, 800d55c <arp_announce+0xc>
 800d556:	212a      	movs	r1, #42	; 0x2a
 800d558:	f003 baa2 	b.w	8010aa0 <emac_eth_send>
 800d55c:	4770      	bx	lr
 800d55e:	bf00      	nop
 800d560:	200094f8 	strdcs	r9, [r0], -r8

0800d564 <arp_handle_request>:
 800d564:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d566:	2204      	movs	r2, #4
 800d568:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d56c:	4604      	mov	r4, r0
 800d56e:	eb0d 0002 	add.w	r0, sp, r2
 800d572:	f7ff ffe3 	bl	800d53c <memcpy.isra.0>
 800d576:	4b0d      	ldr	r3, [pc, #52]	; (800d5ac <arp_handle_request+0x48>)
 800d578:	9a01      	ldr	r2, [sp, #4]
 800d57a:	69db      	ldr	r3, [r3, #28]
 800d57c:	429a      	cmp	r2, r3
 800d57e:	d113      	bne.n	800d5a8 <arp_handle_request+0x44>
 800d580:	2206      	movs	r2, #6
 800d582:	4d0b      	ldr	r5, [pc, #44]	; (800d5b0 <arp_handle_request+0x4c>)
 800d584:	18a1      	adds	r1, r4, r2
 800d586:	4628      	mov	r0, r5
 800d588:	f7ff ffd8 	bl	800d53c <memcpy.isra.0>
 800d58c:	f104 0116 	add.w	r1, r4, #22
 800d590:	f105 0020 	add.w	r0, r5, #32
 800d594:	2206      	movs	r2, #6
 800d596:	f7ff ffd1 	bl	800d53c <memcpy.isra.0>
 800d59a:	69e3      	ldr	r3, [r4, #28]
 800d59c:	212a      	movs	r1, #42	; 0x2a
 800d59e:	4628      	mov	r0, r5
 800d5a0:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d5a4:	f003 fa7c 	bl	8010aa0 <emac_eth_send>
 800d5a8:	b003      	add	sp, #12
 800d5aa:	bd30      	pop	{r4, r5, pc}
 800d5ac:	200094f8 	strdcs	r9, [r0], -r8
 800d5b0:	20009524 	andcs	r9, r0, r4, lsr #10

0800d5b4 <arp_handle_reply>:
 800d5b4:	69c1      	ldr	r1, [r0, #28]
 800d5b6:	3016      	adds	r0, #22
 800d5b8:	f000 b8ac 	b.w	800d714 <arp_cache_update>

0800d5bc <arp_init>:
 800d5bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5c0:	4604      	mov	r4, r0
 800d5c2:	460d      	mov	r5, r1
 800d5c4:	f000 f88c 	bl	800d6e0 <arp_cache_init>
 800d5c8:	2206      	movs	r2, #6
 800d5ca:	4621      	mov	r1, r4
 800d5cc:	482e      	ldr	r0, [pc, #184]	; (800d688 <arp_init+0xcc>)
 800d5ce:	682f      	ldr	r7, [r5, #0]
 800d5d0:	f7ff ffb4 	bl	800d53c <memcpy.isra.0>
 800d5d4:	4b2d      	ldr	r3, [pc, #180]	; (800d68c <arp_init+0xd0>)
 800d5d6:	2507      	movs	r5, #7
 800d5d8:	461e      	mov	r6, r3
 800d5da:	22ff      	movs	r2, #255	; 0xff
 800d5dc:	3d01      	subs	r5, #1
 800d5de:	d146      	bne.n	800d66e <arp_init+0xb2>
 800d5e0:	4b2b      	ldr	r3, [pc, #172]	; (800d690 <arp_init+0xd4>)
 800d5e2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d694 <arp_init+0xd8>
 800d5e6:	2206      	movs	r2, #6
 800d5e8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800d5ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d5f0:	4621      	mov	r1, r4
 800d5f2:	4829      	ldr	r0, [pc, #164]	; (800d698 <arp_init+0xdc>)
 800d5f4:	82b3      	strh	r3, [r6, #20]
 800d5f6:	f7ff ffa1 	bl	800d53c <memcpy.isra.0>
 800d5fa:	2307      	movs	r3, #7
 800d5fc:	4a27      	ldr	r2, [pc, #156]	; (800d69c <arp_init+0xe0>)
 800d5fe:	61f7      	str	r7, [r6, #28]
 800d600:	3b01      	subs	r3, #1
 800d602:	d137      	bne.n	800d674 <arp_init+0xb8>
 800d604:	2206      	movs	r2, #6
 800d606:	4621      	mov	r1, r4
 800d608:	4825      	ldr	r0, [pc, #148]	; (800d6a0 <arp_init+0xe4>)
 800d60a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800d60e:	f7ff ff95 	bl	800d53c <memcpy.isra.0>
 800d612:	4a24      	ldr	r2, [pc, #144]	; (800d6a4 <arp_init+0xe8>)
 800d614:	2306      	movs	r3, #6
 800d616:	4615      	mov	r5, r2
 800d618:	21ff      	movs	r1, #255	; 0xff
 800d61a:	3b01      	subs	r3, #1
 800d61c:	d22d      	bcs.n	800d67a <arp_init+0xbe>
 800d61e:	4b1c      	ldr	r3, [pc, #112]	; (800d690 <arp_init+0xd4>)
 800d620:	2206      	movs	r2, #6
 800d622:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800d626:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d62a:	4621      	mov	r1, r4
 800d62c:	481e      	ldr	r0, [pc, #120]	; (800d6a8 <arp_init+0xec>)
 800d62e:	82ab      	strh	r3, [r5, #20]
 800d630:	f7ff ff84 	bl	800d53c <memcpy.isra.0>
 800d634:	2307      	movs	r3, #7
 800d636:	2100      	movs	r1, #0
 800d638:	4a1c      	ldr	r2, [pc, #112]	; (800d6ac <arp_init+0xf0>)
 800d63a:	61ef      	str	r7, [r5, #28]
 800d63c:	3b01      	subs	r3, #1
 800d63e:	d11f      	bne.n	800d680 <arp_init+0xc4>
 800d640:	2206      	movs	r2, #6
 800d642:	4d1b      	ldr	r5, [pc, #108]	; (800d6b0 <arp_init+0xf4>)
 800d644:	4621      	mov	r1, r4
 800d646:	18a8      	adds	r0, r5, r2
 800d648:	f7ff ff78 	bl	800d53c <memcpy.isra.0>
 800d64c:	4b10      	ldr	r3, [pc, #64]	; (800d690 <arp_init+0xd4>)
 800d64e:	4621      	mov	r1, r4
 800d650:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800d654:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d658:	f105 0016 	add.w	r0, r5, #22
 800d65c:	2206      	movs	r2, #6
 800d65e:	82ab      	strh	r3, [r5, #20]
 800d660:	f7ff ff6c 	bl	800d53c <memcpy.isra.0>
 800d664:	61ef      	str	r7, [r5, #28]
 800d666:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d66a:	f7ff bf71 	b.w	800d550 <arp_announce>
 800d66e:	f803 2b01 	strb.w	r2, [r3], #1
 800d672:	e7b3      	b.n	800d5dc <arp_init+0x20>
 800d674:	f802 5b01 	strb.w	r5, [r2], #1
 800d678:	e7c2      	b.n	800d600 <arp_init+0x44>
 800d67a:	f802 1b01 	strb.w	r1, [r2], #1
 800d67e:	e7cc      	b.n	800d61a <arp_init+0x5e>
 800d680:	f802 1b01 	strb.w	r1, [r2], #1
 800d684:	e7da      	b.n	800d63c <arp_init+0x80>
 800d686:	bf00      	nop
 800d688:	200094fe 	strdcs	r9, [r0], -lr
 800d68c:	200094f8 	strdcs	r9, [r0], -r8
 800d690:	01000608 	tsteq	r0, r8, lsl #12
 800d694:	04060008 	streq	r0, [r6], #-8
 800d698:	2000950e 	andcs	r9, r0, lr, lsl #10
 800d69c:	20009518 	andcs	r9, r0, r8, lsl r5
 800d6a0:	20009556 	andcs	r9, r0, r6, asr r5
 800d6a4:	20009550 	andcs	r9, r0, r0, asr r5
 800d6a8:	20009566 	andcs	r9, r0, r6, ror #10
 800d6ac:	20009570 	andcs	r9, r0, r0, ror r5
 800d6b0:	20009524 	andcs	r9, r0, r4, lsr #10

0800d6b4 <arp_send_request>:
 800d6b4:	4b03      	ldr	r3, [pc, #12]	; (800d6c4 <arp_send_request+0x10>)
 800d6b6:	212a      	movs	r1, #42	; 0x2a
 800d6b8:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800d6bc:	4618      	mov	r0, r3
 800d6be:	f003 b9ef 	b.w	8010aa0 <emac_eth_send>
 800d6c2:	bf00      	nop
 800d6c4:	20009550 	andcs	r9, r0, r0, asr r5

0800d6c8 <arp_handle>:
 800d6c8:	8a83      	ldrh	r3, [r0, #20]
 800d6ca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d6ce:	d003      	beq.n	800d6d8 <arp_handle+0x10>
 800d6d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d6d4:	d002      	beq.n	800d6dc <arp_handle+0x14>
 800d6d6:	4770      	bx	lr
 800d6d8:	f7ff bf44 	b.w	800d564 <arp_handle_request>
 800d6dc:	f7ff bf6a 	b.w	800d5b4 <arp_handle_reply>

0800d6e0 <arp_cache_init>:
 800d6e0:	2300      	movs	r3, #0
 800d6e2:	4618      	mov	r0, r3
 800d6e4:	4a09      	ldr	r2, [pc, #36]	; (800d70c <arp_cache_init+0x2c>)
 800d6e6:	b510      	push	{r4, lr}
 800d6e8:	8013      	strh	r3, [r2, #0]
 800d6ea:	4a09      	ldr	r2, [pc, #36]	; (800d710 <arp_cache_init+0x30>)
 800d6ec:	4611      	mov	r1, r2
 800d6ee:	f842 0c04 	str.w	r0, [r2, #-4]
 800d6f2:	1d94      	adds	r4, r2, #6
 800d6f4:	42a1      	cmp	r1, r4
 800d6f6:	d105      	bne.n	800d704 <arp_cache_init+0x24>
 800d6f8:	3303      	adds	r3, #3
 800d6fa:	2b60      	cmp	r3, #96	; 0x60
 800d6fc:	f102 020c 	add.w	r2, r2, #12
 800d700:	d1f4      	bne.n	800d6ec <arp_cache_init+0xc>
 800d702:	bd10      	pop	{r4, pc}
 800d704:	f801 0b01 	strb.w	r0, [r1], #1
 800d708:	e7f4      	b.n	800d6f4 <arp_cache_init+0x14>
 800d70a:	bf00      	nop
 800d70c:	200096fc 	strdcs	r9, [r0], -ip
 800d710:	20009580 	andcs	r9, r0, r0, lsl #11

0800d714 <arp_cache_update>:
 800d714:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d716:	4e11      	ldr	r6, [pc, #68]	; (800d75c <arp_cache_update+0x48>)
 800d718:	8833      	ldrh	r3, [r6, #0]
 800d71a:	2b20      	cmp	r3, #32
 800d71c:	d018      	beq.n	800d750 <arp_cache_update+0x3c>
 800d71e:	2400      	movs	r4, #0
 800d720:	220c      	movs	r2, #12
 800d722:	4d0f      	ldr	r5, [pc, #60]	; (800d760 <arp_cache_update+0x4c>)
 800d724:	b2a7      	uxth	r7, r4
 800d726:	42bb      	cmp	r3, r7
 800d728:	d80b      	bhi.n	800d742 <arp_cache_update+0x2e>
 800d72a:	fb02 5203 	mla	r2, r2, r3, r5
 800d72e:	1d84      	adds	r4, r0, #6
 800d730:	3203      	adds	r2, #3
 800d732:	42a0      	cmp	r0, r4
 800d734:	d10d      	bne.n	800d752 <arp_cache_update+0x3e>
 800d736:	220c      	movs	r2, #12
 800d738:	435a      	muls	r2, r3
 800d73a:	3301      	adds	r3, #1
 800d73c:	50a9      	str	r1, [r5, r2]
 800d73e:	8033      	strh	r3, [r6, #0]
 800d740:	e006      	b.n	800d750 <arp_cache_update+0x3c>
 800d742:	3401      	adds	r4, #1
 800d744:	fb02 5704 	mla	r7, r2, r4, r5
 800d748:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800d74c:	428f      	cmp	r7, r1
 800d74e:	d1e9      	bne.n	800d724 <arp_cache_update+0x10>
 800d750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d752:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d756:	f802 7f01 	strb.w	r7, [r2, #1]!
 800d75a:	e7ea      	b.n	800d732 <arp_cache_update+0x1e>
 800d75c:	200096fc 	strdcs	r9, [r0], -ip
 800d760:	2000957c 	andcs	r9, r0, ip, ror r5

0800d764 <arp_cache_lookup>:
 800d764:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d768:	2200      	movs	r2, #0
 800d76a:	4606      	mov	r6, r0
 800d76c:	460c      	mov	r4, r1
 800d76e:	200c      	movs	r0, #12
 800d770:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800d7f8 <arp_cache_lookup+0x94>
 800d774:	fb00 f302 	mul.w	r3, r0, r2
 800d778:	f853 1008 	ldr.w	r1, [r3, r8]
 800d77c:	42b1      	cmp	r1, r6
 800d77e:	d10d      	bne.n	800d79c <arp_cache_lookup+0x38>
 800d780:	3304      	adds	r3, #4
 800d782:	4443      	add	r3, r8
 800d784:	3c01      	subs	r4, #1
 800d786:	1d9a      	adds	r2, r3, #6
 800d788:	4293      	cmp	r3, r2
 800d78a:	d102      	bne.n	800d792 <arp_cache_lookup+0x2e>
 800d78c:	4630      	mov	r0, r6
 800d78e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d792:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d796:	f804 1f01 	strb.w	r1, [r4, #1]!
 800d79a:	e7f5      	b.n	800d788 <arp_cache_lookup+0x24>
 800d79c:	b111      	cbz	r1, 800d7a4 <arp_cache_lookup+0x40>
 800d79e:	3201      	adds	r2, #1
 800d7a0:	2a20      	cmp	r2, #32
 800d7a2:	d1e7      	bne.n	800d774 <arp_cache_lookup+0x10>
 800d7a4:	2704      	movs	r7, #4
 800d7a6:	f8df a054 	ldr.w	sl, [pc, #84]	; 800d7fc <arp_cache_lookup+0x98>
 800d7aa:	f8ba 5000 	ldrh.w	r5, [sl]
 800d7ae:	3f01      	subs	r7, #1
 800d7b0:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800d7b4:	d101      	bne.n	800d7ba <arp_cache_lookup+0x56>
 800d7b6:	463e      	mov	r6, r7
 800d7b8:	e7e8      	b.n	800d78c <arp_cache_lookup+0x28>
 800d7ba:	4630      	mov	r0, r6
 800d7bc:	f7ff ff7a 	bl	800d6b4 <arp_send_request>
 800d7c0:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800d7c4:	f1b9 0901 	subs.w	r9, r9, #1
 800d7c8:	f8ba 3000 	ldrh.w	r3, [sl]
 800d7cc:	d011      	beq.n	800d7f2 <arp_cache_lookup+0x8e>
 800d7ce:	429d      	cmp	r5, r3
 800d7d0:	d00c      	beq.n	800d7ec <arp_cache_lookup+0x88>
 800d7d2:	230c      	movs	r3, #12
 800d7d4:	fb03 8505 	mla	r5, r3, r5, r8
 800d7d8:	3c01      	subs	r4, #1
 800d7da:	1d2b      	adds	r3, r5, #4
 800d7dc:	350a      	adds	r5, #10
 800d7de:	42ab      	cmp	r3, r5
 800d7e0:	d0d4      	beq.n	800d78c <arp_cache_lookup+0x28>
 800d7e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d7e6:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d7ea:	e7f8      	b.n	800d7de <arp_cache_lookup+0x7a>
 800d7ec:	f7fe f89c 	bl	800b928 <net_handle>
 800d7f0:	e7e8      	b.n	800d7c4 <arp_cache_lookup+0x60>
 800d7f2:	429d      	cmp	r5, r3
 800d7f4:	d0db      	beq.n	800d7ae <arp_cache_lookup+0x4a>
 800d7f6:	e7ec      	b.n	800d7d2 <arp_cache_lookup+0x6e>
 800d7f8:	2000957c 	andcs	r9, r0, ip, ror r5
 800d7fc:	200096fc 	strdcs	r9, [r0], -ip

0800d800 <_parse_response>:
 800d800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d804:	460c      	mov	r4, r1
 800d806:	4e5b      	ldr	r6, [pc, #364]	; (800d974 <_parse_response+0x174>)
 800d808:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800d80c:	6837      	ldr	r7, [r6, #0]
 800d80e:	b2c5      	uxtb	r5, r0
 800d810:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800d814:	f7fe f888 	bl	800b928 <net_handle>
 800d818:	f44f 7209 	mov.w	r2, #548	; 0x224
 800d81c:	4628      	mov	r0, r5
 800d81e:	f8cd 8000 	str.w	r8, [sp]
 800d822:	ab0a      	add	r3, sp, #40	; 0x28
 800d824:	a90b      	add	r1, sp, #44	; 0x2c
 800d826:	f7fe fd83 	bl	800c330 <udp_recv>
 800d82a:	2800      	cmp	r0, #0
 800d82c:	d05f      	beq.n	800d8ee <_parse_response+0xee>
 800d82e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800d832:	2b43      	cmp	r3, #67	; 0x43
 800d834:	d15b      	bne.n	800d8ee <_parse_response+0xee>
 800d836:	aa12      	add	r2, sp, #72	; 0x48
 800d838:	1e63      	subs	r3, r4, #1
 800d83a:	1d61      	adds	r1, r4, #5
 800d83c:	428b      	cmp	r3, r1
 800d83e:	d150      	bne.n	800d8e2 <_parse_response+0xe2>
 800d840:	2100      	movs	r1, #0
 800d842:	ab0b      	add	r3, sp, #44	; 0x2c
 800d844:	181c      	adds	r4, r3, r0
 800d846:	4608      	mov	r0, r1
 800d848:	4b4b      	ldr	r3, [pc, #300]	; (800d978 <_parse_response+0x178>)
 800d84a:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800d84e:	781a      	ldrb	r2, [r3, #0]
 800d850:	f893 b001 	ldrb.w	fp, [r3, #1]
 800d854:	f893 c002 	ldrb.w	ip, [r3, #2]
 800d858:	78dd      	ldrb	r5, [r3, #3]
 800d85a:	4b48      	ldr	r3, [pc, #288]	; (800d97c <_parse_response+0x17c>)
 800d85c:	9207      	str	r2, [sp, #28]
 800d85e:	781a      	ldrb	r2, [r3, #0]
 800d860:	789f      	ldrb	r7, [r3, #2]
 800d862:	78de      	ldrb	r6, [r3, #3]
 800d864:	9206      	str	r2, [sp, #24]
 800d866:	785a      	ldrb	r2, [r3, #1]
 800d868:	4b45      	ldr	r3, [pc, #276]	; (800d980 <_parse_response+0x180>)
 800d86a:	9203      	str	r2, [sp, #12]
 800d86c:	f893 a000 	ldrb.w	sl, [r3]
 800d870:	f893 9001 	ldrb.w	r9, [r3, #1]
 800d874:	f893 8002 	ldrb.w	r8, [r3, #2]
 800d878:	f893 e003 	ldrb.w	lr, [r3, #3]
 800d87c:	ab47      	add	r3, sp, #284	; 0x11c
 800d87e:	42a3      	cmp	r3, r4
 800d880:	d33f      	bcc.n	800d902 <_parse_response+0x102>
 800d882:	9b04      	ldr	r3, [sp, #16]
 800d884:	b143      	cbz	r3, 800d898 <_parse_response+0x98>
 800d886:	4b3e      	ldr	r3, [pc, #248]	; (800d980 <_parse_response+0x180>)
 800d888:	f883 a000 	strb.w	sl, [r3]
 800d88c:	f883 9001 	strb.w	r9, [r3, #1]
 800d890:	f883 8002 	strb.w	r8, [r3, #2]
 800d894:	f883 e003 	strb.w	lr, [r3, #3]
 800d898:	9b05      	ldr	r3, [sp, #20]
 800d89a:	b133      	cbz	r3, 800d8aa <_parse_response+0xaa>
 800d89c:	4b37      	ldr	r3, [pc, #220]	; (800d97c <_parse_response+0x17c>)
 800d89e:	9a06      	ldr	r2, [sp, #24]
 800d8a0:	709f      	strb	r7, [r3, #2]
 800d8a2:	701a      	strb	r2, [r3, #0]
 800d8a4:	9a03      	ldr	r2, [sp, #12]
 800d8a6:	70de      	strb	r6, [r3, #3]
 800d8a8:	705a      	strb	r2, [r3, #1]
 800d8aa:	b139      	cbz	r1, 800d8bc <_parse_response+0xbc>
 800d8ac:	4b32      	ldr	r3, [pc, #200]	; (800d978 <_parse_response+0x178>)
 800d8ae:	9a07      	ldr	r2, [sp, #28]
 800d8b0:	f883 b001 	strb.w	fp, [r3, #1]
 800d8b4:	701a      	strb	r2, [r3, #0]
 800d8b6:	f883 c002 	strb.w	ip, [r3, #2]
 800d8ba:	70dd      	strb	r5, [r3, #3]
 800d8bc:	2802      	cmp	r0, #2
 800d8be:	d10c      	bne.n	800d8da <_parse_response+0xda>
 800d8c0:	4b30      	ldr	r3, [pc, #192]	; (800d984 <_parse_response+0x184>)
 800d8c2:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800d8c6:	701a      	strb	r2, [r3, #0]
 800d8c8:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800d8cc:	705a      	strb	r2, [r3, #1]
 800d8ce:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800d8d2:	709a      	strb	r2, [r3, #2]
 800d8d4:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800d8d8:	70da      	strb	r2, [r3, #3]
 800d8da:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800d8de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8e2:	f812 cb01 	ldrb.w	ip, [r2], #1
 800d8e6:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800d8ea:	45e6      	cmp	lr, ip
 800d8ec:	d0a6      	beq.n	800d83c <_parse_response+0x3c>
 800d8ee:	6833      	ldr	r3, [r6, #0]
 800d8f0:	1bdb      	subs	r3, r3, r7
 800d8f2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d8f6:	d38b      	bcc.n	800d810 <_parse_response+0x10>
 800d8f8:	2800      	cmp	r0, #0
 800d8fa:	d1a1      	bne.n	800d840 <_parse_response+0x40>
 800d8fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d900:	e7eb      	b.n	800d8da <_parse_response+0xda>
 800d902:	781a      	ldrb	r2, [r3, #0]
 800d904:	2a35      	cmp	r2, #53	; 0x35
 800d906:	d011      	beq.n	800d92c <_parse_response+0x12c>
 800d908:	d808      	bhi.n	800d91c <_parse_response+0x11c>
 800d90a:	2a01      	cmp	r2, #1
 800d90c:	d011      	beq.n	800d932 <_parse_response+0x132>
 800d90e:	2a03      	cmp	r2, #3
 800d910:	d01a      	beq.n	800d948 <_parse_response+0x148>
 800d912:	b14a      	cbz	r2, 800d928 <_parse_response+0x128>
 800d914:	1c9a      	adds	r2, r3, #2
 800d916:	785b      	ldrb	r3, [r3, #1]
 800d918:	4413      	add	r3, r2
 800d91a:	e7b0      	b.n	800d87e <_parse_response+0x7e>
 800d91c:	2a36      	cmp	r2, #54	; 0x36
 800d91e:	d01f      	beq.n	800d960 <_parse_response+0x160>
 800d920:	2aff      	cmp	r2, #255	; 0xff
 800d922:	d1f7      	bne.n	800d914 <_parse_response+0x114>
 800d924:	4623      	mov	r3, r4
 800d926:	e7aa      	b.n	800d87e <_parse_response+0x7e>
 800d928:	3301      	adds	r3, #1
 800d92a:	e7a8      	b.n	800d87e <_parse_response+0x7e>
 800d92c:	7898      	ldrb	r0, [r3, #2]
 800d92e:	3303      	adds	r3, #3
 800d930:	e7a5      	b.n	800d87e <_parse_response+0x7e>
 800d932:	f893 a002 	ldrb.w	sl, [r3, #2]
 800d936:	f893 9003 	ldrb.w	r9, [r3, #3]
 800d93a:	f893 8004 	ldrb.w	r8, [r3, #4]
 800d93e:	f893 e005 	ldrb.w	lr, [r3, #5]
 800d942:	9204      	str	r2, [sp, #16]
 800d944:	3306      	adds	r3, #6
 800d946:	e79a      	b.n	800d87e <_parse_response+0x7e>
 800d948:	789a      	ldrb	r2, [r3, #2]
 800d94a:	791f      	ldrb	r7, [r3, #4]
 800d94c:	9206      	str	r2, [sp, #24]
 800d94e:	78da      	ldrb	r2, [r3, #3]
 800d950:	795e      	ldrb	r6, [r3, #5]
 800d952:	9203      	str	r2, [sp, #12]
 800d954:	785a      	ldrb	r2, [r3, #1]
 800d956:	4413      	add	r3, r2
 800d958:	2201      	movs	r2, #1
 800d95a:	3302      	adds	r3, #2
 800d95c:	9205      	str	r2, [sp, #20]
 800d95e:	e78e      	b.n	800d87e <_parse_response+0x7e>
 800d960:	789a      	ldrb	r2, [r3, #2]
 800d962:	f893 b003 	ldrb.w	fp, [r3, #3]
 800d966:	f893 c004 	ldrb.w	ip, [r3, #4]
 800d96a:	795d      	ldrb	r5, [r3, #5]
 800d96c:	2101      	movs	r1, #1
 800d96e:	9207      	str	r2, [sp, #28]
 800d970:	3306      	adds	r3, #6
 800d972:	e784      	b.n	800d87e <_parse_response+0x7e>
 800d974:	20009bd4 	ldrdcs	r9, [r0], -r4
 800d978:	20009930 	andcs	r9, r0, r0, lsr r9
 800d97c:	20009700 	andcs	r9, r0, r0, lsl #14
 800d980:	20009708 	andcs	r9, r0, r8, lsl #14
 800d984:	20009704 	andcs	r9, r0, r4, lsl #14

0800d988 <memcpy.isra.0>:
 800d988:	3801      	subs	r0, #1
 800d98a:	440a      	add	r2, r1
 800d98c:	4291      	cmp	r1, r2
 800d98e:	d100      	bne.n	800d992 <memcpy.isra.0+0xa>
 800d990:	4770      	bx	lr
 800d992:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d996:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d99a:	e7f7      	b.n	800d98c <memcpy.isra.0+0x4>

0800d99c <dhcp_client>:
 800d99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9a0:	b087      	sub	sp, #28
 800d9a2:	9203      	str	r2, [sp, #12]
 800d9a4:	4a77      	ldr	r2, [pc, #476]	; (800db84 <dhcp_client+0x1e8>)
 800d9a6:	460f      	mov	r7, r1
 800d9a8:	4605      	mov	r5, r0
 800d9aa:	f44f 7309 	mov.w	r3, #548	; 0x224
 800d9ae:	4614      	mov	r4, r2
 800d9b0:	2100      	movs	r1, #0
 800d9b2:	3b01      	subs	r3, #1
 800d9b4:	f802 1b01 	strb.w	r1, [r2], #1
 800d9b8:	d1fb      	bne.n	800d9b2 <dhcp_client+0x16>
 800d9ba:	f240 1301 	movw	r3, #257	; 0x101
 800d9be:	2206      	movs	r2, #6
 800d9c0:	4629      	mov	r1, r5
 800d9c2:	4871      	ldr	r0, [pc, #452]	; (800db88 <dhcp_client+0x1ec>)
 800d9c4:	8023      	strh	r3, [r4, #0]
 800d9c6:	70a2      	strb	r2, [r4, #2]
 800d9c8:	f7ff ffde 	bl	800d988 <memcpy.isra.0>
 800d9cc:	4b6f      	ldr	r3, [pc, #444]	; (800db8c <dhcp_client+0x1f0>)
 800d9ce:	2044      	movs	r0, #68	; 0x44
 800d9d0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800d9d4:	f240 1335 	movw	r3, #309	; 0x135
 800d9d8:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800d9dc:	f7fe fc6e 	bl	800c2bc <udp_bind>
 800d9e0:	1e06      	subs	r6, r0, #0
 800d9e2:	f2c0 80c9 	blt.w	800db78 <dhcp_client+0x1dc>
 800d9e6:	f04f 0915 	mov.w	r9, #21
 800d9ea:	f8df a198 	ldr.w	sl, [pc, #408]	; 800db84 <dhcp_client+0x1e8>
 800d9ee:	f1b9 0901 	subs.w	r9, r9, #1
 800d9f2:	d11f      	bne.n	800da34 <dhcp_client+0x98>
 800d9f4:	464c      	mov	r4, r9
 800d9f6:	2044      	movs	r0, #68	; 0x44
 800d9f8:	f7fe fc7a 	bl	800c2f0 <udp_unbind>
 800d9fc:	2c00      	cmp	r4, #0
 800d9fe:	f000 80be 	beq.w	800db7e <dhcp_client+0x1e2>
 800da02:	2204      	movs	r2, #4
 800da04:	4962      	ldr	r1, [pc, #392]	; (800db90 <dhcp_client+0x1f4>)
 800da06:	a805      	add	r0, sp, #20
 800da08:	f7ff ffbe 	bl	800d988 <memcpy.isra.0>
 800da0c:	9b05      	ldr	r3, [sp, #20]
 800da0e:	2204      	movs	r2, #4
 800da10:	4960      	ldr	r1, [pc, #384]	; (800db94 <dhcp_client+0x1f8>)
 800da12:	603b      	str	r3, [r7, #0]
 800da14:	a805      	add	r0, sp, #20
 800da16:	f7ff ffb7 	bl	800d988 <memcpy.isra.0>
 800da1a:	9b05      	ldr	r3, [sp, #20]
 800da1c:	a805      	add	r0, sp, #20
 800da1e:	60bb      	str	r3, [r7, #8]
 800da20:	2204      	movs	r2, #4
 800da22:	495d      	ldr	r1, [pc, #372]	; (800db98 <dhcp_client+0x1fc>)
 800da24:	f7ff ffb0 	bl	800d988 <memcpy.isra.0>
 800da28:	2000      	movs	r0, #0
 800da2a:	9b05      	ldr	r3, [sp, #20]
 800da2c:	607b      	str	r3, [r7, #4]
 800da2e:	b007      	add	sp, #28
 800da30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da34:	f643 5301 	movw	r3, #15617	; 0x3d01
 800da38:	f240 1807 	movw	r8, #263	; 0x107
 800da3c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800da40:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800da44:	782b      	ldrb	r3, [r5, #0]
 800da46:	4a55      	ldr	r2, [pc, #340]	; (800db9c <dhcp_client+0x200>)
 800da48:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800da4c:	786b      	ldrb	r3, [r5, #1]
 800da4e:	fa5f fb86 	uxtb.w	fp, r6
 800da52:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800da56:	78ab      	ldrb	r3, [r5, #2]
 800da58:	4651      	mov	r1, sl
 800da5a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800da5e:	78eb      	ldrb	r3, [r5, #3]
 800da60:	4658      	mov	r0, fp
 800da62:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800da66:	792b      	ldrb	r3, [r5, #4]
 800da68:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800da6c:	796b      	ldrb	r3, [r5, #5]
 800da6e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800da72:	4b4b      	ldr	r3, [pc, #300]	; (800dba0 <dhcp_client+0x204>)
 800da74:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800da78:	23ff      	movs	r3, #255	; 0xff
 800da7a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800da7e:	2343      	movs	r3, #67	; 0x43
 800da80:	f240 1205 	movw	r2, #261	; 0x105
 800da84:	9300      	str	r3, [sp, #0]
 800da86:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800da8a:	f7fe fcad 	bl	800c3e8 <udp_send>
 800da8e:	4629      	mov	r1, r5
 800da90:	4630      	mov	r0, r6
 800da92:	f7ff feb5 	bl	800d800 <_parse_response>
 800da96:	2802      	cmp	r0, #2
 800da98:	d1a9      	bne.n	800d9ee <dhcp_client+0x52>
 800da9a:	f643 5303 	movw	r3, #15619	; 0x3d03
 800da9e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800daa2:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800daa6:	782b      	ldrb	r3, [r5, #0]
 800daa8:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800dba4 <dhcp_client+0x208>
 800daac:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dab0:	786b      	ldrb	r3, [r5, #1]
 800dab2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dab6:	78ab      	ldrb	r3, [r5, #2]
 800dab8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dabc:	78eb      	ldrb	r3, [r5, #3]
 800dabe:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800dac2:	792b      	ldrb	r3, [r5, #4]
 800dac4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dac8:	796b      	ldrb	r3, [r5, #5]
 800daca:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dace:	f240 4332 	movw	r3, #1074	; 0x432
 800dad2:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800dad6:	4b2e      	ldr	r3, [pc, #184]	; (800db90 <dhcp_client+0x1f4>)
 800dad8:	881a      	ldrh	r2, [r3, #0]
 800dada:	885b      	ldrh	r3, [r3, #2]
 800dadc:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800dae0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800dae4:	f240 4336 	movw	r3, #1078	; 0x436
 800dae8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800daec:	4b2e      	ldr	r3, [pc, #184]	; (800dba8 <dhcp_client+0x20c>)
 800daee:	221e      	movs	r2, #30
 800daf0:	681b      	ldr	r3, [r3, #0]
 800daf2:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800daf6:	230c      	movs	r3, #12
 800daf8:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800dafc:	9b03      	ldr	r3, [sp, #12]
 800dafe:	1e58      	subs	r0, r3, #1
 800db00:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800db04:	f1a2 0e1e 	sub.w	lr, r2, #30
 800db08:	1c51      	adds	r1, r2, #1
 800db0a:	bb8b      	cbnz	r3, 800db70 <dhcp_client+0x1d4>
 800db0c:	2037      	movs	r0, #55	; 0x37
 800db0e:	18a3      	adds	r3, r4, r2
 800db10:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800db14:	2006      	movs	r0, #6
 800db16:	4421      	add	r1, r4
 800db18:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800db1c:	2103      	movs	r1, #3
 800db1e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800db22:	210f      	movs	r1, #15
 800db24:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800db28:	213a      	movs	r1, #58	; 0x3a
 800db2a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800db2e:	213b      	movs	r1, #59	; 0x3b
 800db30:	f04f 0801 	mov.w	r8, #1
 800db34:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800db38:	21ff      	movs	r1, #255	; 0xff
 800db3a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800db3e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800db42:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800db46:	2343      	movs	r3, #67	; 0x43
 800db48:	32f5      	adds	r2, #245	; 0xf5
 800db4a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800db4e:	4651      	mov	r1, sl
 800db50:	9300      	str	r3, [sp, #0]
 800db52:	b292      	uxth	r2, r2
 800db54:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800db58:	4658      	mov	r0, fp
 800db5a:	f7fe fc45 	bl	800c3e8 <udp_send>
 800db5e:	4629      	mov	r1, r5
 800db60:	4630      	mov	r0, r6
 800db62:	f7ff fe4d 	bl	800d800 <_parse_response>
 800db66:	2805      	cmp	r0, #5
 800db68:	f47f af41 	bne.w	800d9ee <dhcp_client+0x52>
 800db6c:	4644      	mov	r4, r8
 800db6e:	e742      	b.n	800d9f6 <dhcp_client+0x5a>
 800db70:	460a      	mov	r2, r1
 800db72:	f80c 3b01 	strb.w	r3, [ip], #1
 800db76:	e7c3      	b.n	800db00 <dhcp_client+0x164>
 800db78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800db7c:	e757      	b.n	800da2e <dhcp_client+0x92>
 800db7e:	f06f 0001 	mvn.w	r0, #1
 800db82:	e754      	b.n	800da2e <dhcp_client+0x92>
 800db84:	2000970c 	andcs	r9, r0, ip, lsl #14
 800db88:	20009728 	andcs	r9, r0, r8, lsr #14
 800db8c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800db90:	20009704 	andcs	r9, r0, r4, lsl #14
 800db94:	20009700 	andcs	r9, r0, r0, lsl #14
 800db98:	20009708 	andcs	r9, r0, r8, lsl #14
 800db9c:	03010637 	movweq	r0, #5687	; 0x1637
 800dba0:	3b3a0f06 	blcc	8e917c0 <__exidx_end+0xe7df18>
 800dba4:	20009816 	andcs	r9, r0, r6, lsl r8
 800dba8:	20009930 	andcs	r9, r0, r0, lsr r9

0800dbac <dhcp_client_release>:
 800dbac:	b507      	push	{r0, r1, r2, lr}
 800dbae:	2044      	movs	r0, #68	; 0x44
 800dbb0:	f7fe fb84 	bl	800c2bc <udp_bind>
 800dbb4:	f243 6307 	movw	r3, #13831	; 0x3607
 800dbb8:	4911      	ldr	r1, [pc, #68]	; (800dc00 <dhcp_client_release+0x54>)
 800dbba:	b2c0      	uxtb	r0, r0
 800dbbc:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800dbc0:	2304      	movs	r3, #4
 800dbc2:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800dbc6:	4b0f      	ldr	r3, [pc, #60]	; (800dc04 <dhcp_client_release+0x58>)
 800dbc8:	781a      	ldrb	r2, [r3, #0]
 800dbca:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800dbce:	785a      	ldrb	r2, [r3, #1]
 800dbd0:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800dbd4:	789a      	ldrb	r2, [r3, #2]
 800dbd6:	78db      	ldrb	r3, [r3, #3]
 800dbd8:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800dbdc:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800dbe0:	23ff      	movs	r3, #255	; 0xff
 800dbe2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800dbe6:	2343      	movs	r3, #67	; 0x43
 800dbe8:	22fa      	movs	r2, #250	; 0xfa
 800dbea:	9300      	str	r3, [sp, #0]
 800dbec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dbf0:	f7fe fbfa 	bl	800c3e8 <udp_send>
 800dbf4:	2044      	movs	r0, #68	; 0x44
 800dbf6:	b003      	add	sp, #12
 800dbf8:	f85d eb04 	ldr.w	lr, [sp], #4
 800dbfc:	f7fe bb78 	b.w	800c2f0 <udp_unbind>
 800dc00:	2000970c 	andcs	r9, r0, ip, lsl #14
 800dc04:	20009930 	andcs	r9, r0, r0, lsr r9

0800dc08 <memcpy.isra.0>:
 800dc08:	3801      	subs	r0, #1
 800dc0a:	440a      	add	r2, r1
 800dc0c:	4291      	cmp	r1, r2
 800dc0e:	d100      	bne.n	800dc12 <memcpy.isra.0+0xa>
 800dc10:	4770      	bx	lr
 800dc12:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dc16:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dc1a:	e7f7      	b.n	800dc0c <memcpy.isra.0+0x4>

0800dc1c <_send_report>:
 800dc1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dc1e:	491c      	ldr	r1, [pc, #112]	; (800dc90 <_send_report+0x74>)
 800dc20:	4c1c      	ldr	r4, [pc, #112]	; (800dc94 <_send_report+0x78>)
 800dc22:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800dc26:	9001      	str	r0, [sp, #4]
 800dc28:	70cb      	strb	r3, [r1, #3]
 800dc2a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800dc2e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800dc32:	710b      	strb	r3, [r1, #4]
 800dc34:	7148      	strb	r0, [r1, #5]
 800dc36:	2206      	movs	r2, #6
 800dc38:	4620      	mov	r0, r4
 800dc3a:	f7ff ffe5 	bl	800dc08 <memcpy.isra.0>
 800dc3e:	2204      	movs	r2, #4
 800dc40:	2700      	movs	r7, #0
 800dc42:	4d15      	ldr	r5, [pc, #84]	; (800dc98 <_send_report+0x7c>)
 800dc44:	eb0d 0102 	add.w	r1, sp, r2
 800dc48:	882b      	ldrh	r3, [r5, #0]
 800dc4a:	f104 001e 	add.w	r0, r4, #30
 800dc4e:	f104 060e 	add.w	r6, r4, #14
 800dc52:	8263      	strh	r3, [r4, #18]
 800dc54:	f7ff ffd8 	bl	800dc08 <memcpy.isra.0>
 800dc58:	2118      	movs	r1, #24
 800dc5a:	4630      	mov	r0, r6
 800dc5c:	8327      	strh	r7, [r4, #24]
 800dc5e:	f000 f9b7 	bl	800dfd0 <net_chksum>
 800dc62:	2204      	movs	r2, #4
 800dc64:	8320      	strh	r0, [r4, #24]
 800dc66:	eb0d 0102 	add.w	r1, sp, r2
 800dc6a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800dc6e:	f7ff ffcb 	bl	800dc08 <memcpy.isra.0>
 800dc72:	2120      	movs	r1, #32
 800dc74:	4630      	mov	r0, r6
 800dc76:	8527      	strh	r7, [r4, #40]	; 0x28
 800dc78:	f000 f9aa 	bl	800dfd0 <net_chksum>
 800dc7c:	212e      	movs	r1, #46	; 0x2e
 800dc7e:	8520      	strh	r0, [r4, #40]	; 0x28
 800dc80:	4620      	mov	r0, r4
 800dc82:	f002 ff0d 	bl	8010aa0 <emac_eth_send>
 800dc86:	882b      	ldrh	r3, [r5, #0]
 800dc88:	3301      	adds	r3, #1
 800dc8a:	802b      	strh	r3, [r5, #0]
 800dc8c:	b003      	add	sp, #12
 800dc8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dc90:	20009a8c 	andcs	r9, r0, ip, lsl #21
 800dc94:	20009a94 	mulcs	r0, r4, sl
 800dc98:	20009a54 	andcs	r9, r0, r4, asr sl

0800dc9c <igmp_set_ip>:
 800dc9c:	b507      	push	{r0, r1, r2, lr}
 800dc9e:	2204      	movs	r2, #4
 800dca0:	6803      	ldr	r3, [r0, #0]
 800dca2:	eb0d 0102 	add.w	r1, sp, r2
 800dca6:	4806      	ldr	r0, [pc, #24]	; (800dcc0 <igmp_set_ip+0x24>)
 800dca8:	9301      	str	r3, [sp, #4]
 800dcaa:	f7ff ffad 	bl	800dc08 <memcpy.isra.0>
 800dcae:	2204      	movs	r2, #4
 800dcb0:	4804      	ldr	r0, [pc, #16]	; (800dcc4 <igmp_set_ip+0x28>)
 800dcb2:	eb0d 0102 	add.w	r1, sp, r2
 800dcb6:	f7ff ffa7 	bl	800dc08 <memcpy.isra.0>
 800dcba:	b003      	add	sp, #12
 800dcbc:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcc0:	20009aae 	andcs	r9, r0, lr, lsr #21
 800dcc4:	20009a76 	andcs	r9, r0, r6, ror sl

0800dcc8 <igmp_init>:
 800dcc8:	2200      	movs	r2, #0
 800dcca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dcce:	4605      	mov	r5, r0
 800dcd0:	4608      	mov	r0, r1
 800dcd2:	4611      	mov	r1, r2
 800dcd4:	4b23      	ldr	r3, [pc, #140]	; (800dd64 <igmp_init+0x9c>)
 800dcd6:	f103 0408 	add.w	r4, r3, #8
 800dcda:	42a3      	cmp	r3, r4
 800dcdc:	d13e      	bne.n	800dd5c <igmp_init+0x94>
 800dcde:	3201      	adds	r2, #1
 800dce0:	2a24      	cmp	r2, #36	; 0x24
 800dce2:	d1f8      	bne.n	800dcd6 <igmp_init+0xe>
 800dce4:	2600      	movs	r6, #0
 800dce6:	4b20      	ldr	r3, [pc, #128]	; (800dd68 <igmp_init+0xa0>)
 800dce8:	4c20      	ldr	r4, [pc, #128]	; (800dd6c <igmp_init+0xa4>)
 800dcea:	601e      	str	r6, [r3, #0]
 800dcec:	4b20      	ldr	r3, [pc, #128]	; (800dd70 <igmp_init+0xa8>)
 800dcee:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800dcf2:	801e      	strh	r6, [r3, #0]
 800dcf4:	f7ff ffd2 	bl	800dc9c <igmp_set_ip>
 800dcf8:	2201      	movs	r2, #1
 800dcfa:	4b1e      	ldr	r3, [pc, #120]	; (800dd74 <igmp_init+0xac>)
 800dcfc:	4629      	mov	r1, r5
 800dcfe:	801a      	strh	r2, [r3, #0]
 800dd00:	225e      	movs	r2, #94	; 0x5e
 800dd02:	709a      	strb	r2, [r3, #2]
 800dd04:	2206      	movs	r2, #6
 800dd06:	18a0      	adds	r0, r4, r2
 800dd08:	f7ff ff7e 	bl	800dc08 <memcpy.isra.0>
 800dd0c:	f240 4394 	movw	r3, #1172	; 0x494
 800dd10:	8463      	strh	r3, [r4, #34]	; 0x22
 800dd12:	2316      	movs	r3, #22
 800dd14:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800dd78 <igmp_init+0xb0>
 800dd18:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800dd7c <igmp_init+0xb4>
 800dd1c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800dd1e:	f8c4 9014 	str.w	r9, [r4, #20]
 800dd22:	4b17      	ldr	r3, [pc, #92]	; (800dd80 <igmp_init+0xb8>)
 800dd24:	f8c4 800c 	str.w	r8, [r4, #12]
 800dd28:	8227      	strh	r7, [r4, #16]
 800dd2a:	84a6      	strh	r6, [r4, #36]	; 0x24
 800dd2c:	4c15      	ldr	r4, [pc, #84]	; (800dd84 <igmp_init+0xbc>)
 800dd2e:	2206      	movs	r2, #6
 800dd30:	6023      	str	r3, [r4, #0]
 800dd32:	f44f 7300 	mov.w	r3, #512	; 0x200
 800dd36:	18a0      	adds	r0, r4, r2
 800dd38:	80a3      	strh	r3, [r4, #4]
 800dd3a:	4629      	mov	r1, r5
 800dd3c:	f7ff ff64 	bl	800dc08 <memcpy.isra.0>
 800dd40:	23e0      	movs	r3, #224	; 0xe0
 800dd42:	83e3      	strh	r3, [r4, #30]
 800dd44:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 800dd48:	4a0f      	ldr	r2, [pc, #60]	; (800dd88 <igmp_init+0xc0>)
 800dd4a:	f8c4 9014 	str.w	r9, [r4, #20]
 800dd4e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800dd52:	f8c4 800c 	str.w	r8, [r4, #12]
 800dd56:	8227      	strh	r7, [r4, #16]
 800dd58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dd5c:	f803 1b01 	strb.w	r1, [r3], #1
 800dd60:	e7bb      	b.n	800dcda <igmp_init+0x12>
 800dd62:	bf00      	nop
 800dd64:	20009934 	andcs	r9, r0, r4, lsr r9
 800dd68:	20009a58 	andcs	r9, r0, r8, asr sl
 800dd6c:	20009a94 	mulcs	r0, r4, sl
 800dd70:	20009a54 	andcs	r9, r0, r4, asr sl
 800dd74:	20009a8c 	andcs	r9, r0, ip, lsl #21
 800dd78:	02010040 	andeq	r0, r1, #64	; 0x40
 800dd7c:	00460008 	subeq	r0, r6, r8
 800dd80:	005e0001 	subseq	r0, lr, r1
 800dd84:	20009a5c 	andcs	r9, r0, ip, asr sl
 800dd88:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800dd8c <igmp_handle>:
 800dd8c:	7b83      	ldrb	r3, [r0, #14]
 800dd8e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dd92:	2b45      	cmp	r3, #69	; 0x45
 800dd94:	d116      	bne.n	800ddc4 <igmp_handle+0x38>
 800dd96:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800dd9a:	2b11      	cmp	r3, #17
 800dd9c:	d112      	bne.n	800ddc4 <igmp_handle+0x38>
 800dd9e:	4b20      	ldr	r3, [pc, #128]	; (800de20 <igmp_handle+0x94>)
 800dda0:	f100 051e 	add.w	r5, r0, #30
 800dda4:	9300      	str	r3, [sp, #0]
 800dda6:	466a      	mov	r2, sp
 800dda8:	462b      	mov	r3, r5
 800ddaa:	f100 0622 	add.w	r6, r0, #34	; 0x22
 800ddae:	42b3      	cmp	r3, r6
 800ddb0:	d10b      	bne.n	800ddca <igmp_handle+0x3e>
 800ddb2:	2401      	movs	r4, #1
 800ddb4:	2100      	movs	r1, #0
 800ddb6:	f04f 0c01 	mov.w	ip, #1
 800ddba:	4b1a      	ldr	r3, [pc, #104]	; (800de24 <igmp_handle+0x98>)
 800ddbc:	4a1a      	ldr	r2, [pc, #104]	; (800de28 <igmp_handle+0x9c>)
 800ddbe:	681f      	ldr	r7, [r3, #0]
 800ddc0:	428f      	cmp	r7, r1
 800ddc2:	d10a      	bne.n	800ddda <igmp_handle+0x4e>
 800ddc4:	b003      	add	sp, #12
 800ddc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ddca:	f813 4b01 	ldrb.w	r4, [r3], #1
 800ddce:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ddd2:	428c      	cmp	r4, r1
 800ddd4:	d0eb      	beq.n	800ddae <igmp_handle+0x22>
 800ddd6:	2400      	movs	r4, #0
 800ddd8:	e7ec      	b.n	800ddb4 <igmp_handle+0x28>
 800ddda:	6813      	ldr	r3, [r2, #0]
 800dddc:	9301      	str	r3, [sp, #4]
 800ddde:	b924      	cbnz	r4, 800ddea <igmp_handle+0x5e>
 800dde0:	462b      	mov	r3, r5
 800dde2:	f10d 0e04 	add.w	lr, sp, #4
 800dde6:	42b3      	cmp	r3, r6
 800dde8:	d10e      	bne.n	800de08 <igmp_handle+0x7c>
 800ddea:	f892 e005 	ldrb.w	lr, [r2, #5]
 800ddee:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800ddf2:	f1be 0f01 	cmp.w	lr, #1
 800ddf6:	d110      	bne.n	800de1a <igmp_handle+0x8e>
 800ddf8:	f892 e004 	ldrb.w	lr, [r2, #4]
 800ddfc:	459e      	cmp	lr, r3
 800ddfe:	d909      	bls.n	800de14 <igmp_handle+0x88>
 800de00:	085b      	lsrs	r3, r3, #1
 800de02:	3301      	adds	r3, #1
 800de04:	7113      	strb	r3, [r2, #4]
 800de06:	e005      	b.n	800de14 <igmp_handle+0x88>
 800de08:	f813 9b01 	ldrb.w	r9, [r3], #1
 800de0c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 800de10:	45c1      	cmp	r9, r8
 800de12:	d0e8      	beq.n	800dde6 <igmp_handle+0x5a>
 800de14:	3101      	adds	r1, #1
 800de16:	3208      	adds	r2, #8
 800de18:	e7d2      	b.n	800ddc0 <igmp_handle+0x34>
 800de1a:	f882 c005 	strb.w	ip, [r2, #5]
 800de1e:	e7ef      	b.n	800de00 <igmp_handle+0x74>
 800de20:	010000e0 	smlatteq	r0, r0, r0, r0
 800de24:	20009a58 	andcs	r9, r0, r8, asr sl
 800de28:	20009934 	andcs	r9, r0, r4, lsr r9

0800de2c <igmp_timer>:
 800de2c:	b570      	push	{r4, r5, r6, lr}
 800de2e:	2500      	movs	r5, #0
 800de30:	2602      	movs	r6, #2
 800de32:	4c0a      	ldr	r4, [pc, #40]	; (800de5c <igmp_timer+0x30>)
 800de34:	7963      	ldrb	r3, [r4, #5]
 800de36:	2b01      	cmp	r3, #1
 800de38:	d109      	bne.n	800de4e <igmp_timer+0x22>
 800de3a:	7923      	ldrb	r3, [r4, #4]
 800de3c:	b13b      	cbz	r3, 800de4e <igmp_timer+0x22>
 800de3e:	3b01      	subs	r3, #1
 800de40:	b2db      	uxtb	r3, r3
 800de42:	7123      	strb	r3, [r4, #4]
 800de44:	b91b      	cbnz	r3, 800de4e <igmp_timer+0x22>
 800de46:	6820      	ldr	r0, [r4, #0]
 800de48:	f7ff fee8 	bl	800dc1c <_send_report>
 800de4c:	7166      	strb	r6, [r4, #5]
 800de4e:	3501      	adds	r5, #1
 800de50:	2d24      	cmp	r5, #36	; 0x24
 800de52:	f104 0408 	add.w	r4, r4, #8
 800de56:	d1ed      	bne.n	800de34 <igmp_timer+0x8>
 800de58:	bd70      	pop	{r4, r5, r6, pc}
 800de5a:	bf00      	nop
 800de5c:	20009934 	andcs	r9, r0, r4, lsr r9

0800de60 <igmp_join>:
 800de60:	b538      	push	{r3, r4, r5, lr}
 800de62:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800de66:	2be0      	cmp	r3, #224	; 0xe0
 800de68:	d11b      	bne.n	800dea2 <igmp_join+0x42>
 800de6a:	4911      	ldr	r1, [pc, #68]	; (800deb0 <igmp_join+0x50>)
 800de6c:	680c      	ldr	r4, [r1, #0]
 800de6e:	2c24      	cmp	r4, #36	; 0x24
 800de70:	d01a      	beq.n	800dea8 <igmp_join+0x48>
 800de72:	2300      	movs	r3, #0
 800de74:	4a0f      	ldr	r2, [pc, #60]	; (800deb4 <igmp_join+0x54>)
 800de76:	429c      	cmp	r4, r3
 800de78:	dc0d      	bgt.n	800de96 <igmp_join+0x36>
 800de7a:	f44f 7381 	mov.w	r3, #258	; 0x102
 800de7e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800de82:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800de86:	8093      	strh	r3, [r2, #4]
 800de88:	1c63      	adds	r3, r4, #1
 800de8a:	600b      	str	r3, [r1, #0]
 800de8c:	f7ff fec6 	bl	800dc1c <_send_report>
 800de90:	4623      	mov	r3, r4
 800de92:	4618      	mov	r0, r3
 800de94:	bd38      	pop	{r3, r4, r5, pc}
 800de96:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800de9a:	4285      	cmp	r5, r0
 800de9c:	d0f9      	beq.n	800de92 <igmp_join+0x32>
 800de9e:	3301      	adds	r3, #1
 800dea0:	e7e9      	b.n	800de76 <igmp_join+0x16>
 800dea2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dea6:	e7f4      	b.n	800de92 <igmp_join+0x32>
 800dea8:	f06f 0301 	mvn.w	r3, #1
 800deac:	e7f1      	b.n	800de92 <igmp_join+0x32>
 800deae:	bf00      	nop
 800deb0:	20009a58 	andcs	r9, r0, r8, asr sl
 800deb4:	20009934 	andcs	r9, r0, r4, lsr r9

0800deb8 <igmp_leave>:
 800deb8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800debc:	2600      	movs	r6, #0
 800debe:	4f1c      	ldr	r7, [pc, #112]	; (800df30 <igmp_leave+0x78>)
 800dec0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800dec4:	4283      	cmp	r3, r0
 800dec6:	d007      	beq.n	800ded8 <igmp_leave+0x20>
 800dec8:	3601      	adds	r6, #1
 800deca:	2e24      	cmp	r6, #36	; 0x24
 800decc:	d1f8      	bne.n	800dec0 <igmp_leave+0x8>
 800dece:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ded2:	b002      	add	sp, #8
 800ded4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ded8:	2400      	movs	r4, #0
 800deda:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800df34 <igmp_leave+0x7c>
 800dede:	4d16      	ldr	r5, [pc, #88]	; (800df38 <igmp_leave+0x80>)
 800dee0:	f8b8 3000 	ldrh.w	r3, [r8]
 800dee4:	2118      	movs	r1, #24
 800dee6:	9001      	str	r0, [sp, #4]
 800dee8:	4814      	ldr	r0, [pc, #80]	; (800df3c <igmp_leave+0x84>)
 800deea:	826b      	strh	r3, [r5, #18]
 800deec:	832c      	strh	r4, [r5, #24]
 800deee:	f000 f86f 	bl	800dfd0 <net_chksum>
 800def2:	2204      	movs	r2, #4
 800def4:	8328      	strh	r0, [r5, #24]
 800def6:	eb0d 0102 	add.w	r1, sp, r2
 800defa:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800defe:	f7ff fe83 	bl	800dc08 <memcpy.isra.0>
 800df02:	2120      	movs	r1, #32
 800df04:	f105 000e 	add.w	r0, r5, #14
 800df08:	852c      	strh	r4, [r5, #40]	; 0x28
 800df0a:	f000 f861 	bl	800dfd0 <net_chksum>
 800df0e:	212e      	movs	r1, #46	; 0x2e
 800df10:	8528      	strh	r0, [r5, #40]	; 0x28
 800df12:	4628      	mov	r0, r5
 800df14:	f002 fdc4 	bl	8010aa0 <emac_eth_send>
 800df18:	f8b8 3000 	ldrh.w	r3, [r8]
 800df1c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800df20:	3301      	adds	r3, #1
 800df22:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800df26:	4620      	mov	r0, r4
 800df28:	f8a8 3000 	strh.w	r3, [r8]
 800df2c:	80b4      	strh	r4, [r6, #4]
 800df2e:	e7d0      	b.n	800ded2 <igmp_leave+0x1a>
 800df30:	20009934 	andcs	r9, r0, r4, lsr r9
 800df34:	20009a54 	andcs	r9, r0, r4, asr sl
 800df38:	20009a5c 	andcs	r9, r0, ip, asr sl
 800df3c:	20009aa2 	andcs	r9, r0, r2, lsr #21

0800df40 <igmp_shutdown>:
 800df40:	b570      	push	{r4, r5, r6, lr}
 800df42:	2500      	movs	r5, #0
 800df44:	462e      	mov	r6, r5
 800df46:	4c07      	ldr	r4, [pc, #28]	; (800df64 <igmp_shutdown+0x24>)
 800df48:	6820      	ldr	r0, [r4, #0]
 800df4a:	b120      	cbz	r0, 800df56 <igmp_shutdown+0x16>
 800df4c:	f7ff ffb4 	bl	800deb8 <igmp_leave>
 800df50:	6026      	str	r6, [r4, #0]
 800df52:	7166      	strb	r6, [r4, #5]
 800df54:	7126      	strb	r6, [r4, #4]
 800df56:	3501      	adds	r5, #1
 800df58:	2d24      	cmp	r5, #36	; 0x24
 800df5a:	f104 0408 	add.w	r4, r4, #8
 800df5e:	d1f3      	bne.n	800df48 <igmp_shutdown+0x8>
 800df60:	bd70      	pop	{r4, r5, r6, pc}
 800df62:	bf00      	nop
 800df64:	20009934 	andcs	r9, r0, r4, lsr r9

0800df68 <ip_set_ip>:
 800df68:	b510      	push	{r4, lr}
 800df6a:	4604      	mov	r4, r0
 800df6c:	f7fe f8fe 	bl	800c16c <udp_set_ip>
 800df70:	4620      	mov	r0, r4
 800df72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df76:	f7ff be91 	b.w	800dc9c <igmp_set_ip>

0800df7a <ip_init>:
 800df7a:	b538      	push	{r3, r4, r5, lr}
 800df7c:	4604      	mov	r4, r0
 800df7e:	460d      	mov	r5, r1
 800df80:	f7fe f914 	bl	800c1ac <udp_init>
 800df84:	4629      	mov	r1, r5
 800df86:	4620      	mov	r0, r4
 800df88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800df8c:	f7ff be9c 	b.w	800dcc8 <igmp_init>

0800df90 <ip_shutdown>:
 800df90:	b508      	push	{r3, lr}
 800df92:	f7ff ffd5 	bl	800df40 <igmp_shutdown>
 800df96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800df9a:	f7fe b939 	b.w	800c210 <udp_shutdown>

0800df9e <ip_handle>:
 800df9e:	7b82      	ldrb	r2, [r0, #14]
 800dfa0:	7dc3      	ldrb	r3, [r0, #23]
 800dfa2:	2a45      	cmp	r2, #69	; 0x45
 800dfa4:	d003      	beq.n	800dfae <ip_handle+0x10>
 800dfa6:	2b02      	cmp	r3, #2
 800dfa8:	d111      	bne.n	800dfce <ip_handle+0x30>
 800dfaa:	f7ff beef 	b.w	800dd8c <igmp_handle>
 800dfae:	2b06      	cmp	r3, #6
 800dfb0:	d00b      	beq.n	800dfca <ip_handle+0x2c>
 800dfb2:	d804      	bhi.n	800dfbe <ip_handle+0x20>
 800dfb4:	2b01      	cmp	r3, #1
 800dfb6:	d006      	beq.n	800dfc6 <ip_handle+0x28>
 800dfb8:	2b02      	cmp	r3, #2
 800dfba:	d0f6      	beq.n	800dfaa <ip_handle+0xc>
 800dfbc:	4770      	bx	lr
 800dfbe:	2b11      	cmp	r3, #17
 800dfc0:	d105      	bne.n	800dfce <ip_handle+0x30>
 800dfc2:	f7fe b927 	b.w	800c214 <udp_handle>
 800dfc6:	f000 b82b 	b.w	800e020 <icmp_handle>
 800dfca:	f7fd be73 	b.w	800bcb4 <tcp_handle>
 800dfce:	4770      	bx	lr

0800dfd0 <net_chksum>:
 800dfd0:	2300      	movs	r3, #0
 800dfd2:	f021 0201 	bic.w	r2, r1, #1
 800dfd6:	b530      	push	{r4, r5, lr}
 800dfd8:	4402      	add	r2, r0
 800dfda:	084c      	lsrs	r4, r1, #1
 800dfdc:	4290      	cmp	r0, r2
 800dfde:	d10e      	bne.n	800dffe <net_chksum+0x2e>
 800dfe0:	f06f 0201 	mvn.w	r2, #1
 800dfe4:	fb02 1104 	mla	r1, r2, r4, r1
 800dfe8:	b121      	cbz	r1, 800dff4 <net_chksum+0x24>
 800dfea:	7802      	ldrb	r2, [r0, #0]
 800dfec:	0212      	lsls	r2, r2, #8
 800dfee:	ba52      	rev16	r2, r2
 800dff0:	b292      	uxth	r2, r2
 800dff2:	4413      	add	r3, r2
 800dff4:	0c1a      	lsrs	r2, r3, #16
 800dff6:	d106      	bne.n	800e006 <net_chksum+0x36>
 800dff8:	43d8      	mvns	r0, r3
 800dffa:	b280      	uxth	r0, r0
 800dffc:	bd30      	pop	{r4, r5, pc}
 800dffe:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e002:	442b      	add	r3, r5
 800e004:	e7ea      	b.n	800dfdc <net_chksum+0xc>
 800e006:	b29b      	uxth	r3, r3
 800e008:	e7f3      	b.n	800dff2 <net_chksum+0x22>

0800e00a <memcpy.isra.0>:
 800e00a:	3801      	subs	r0, #1
 800e00c:	440a      	add	r2, r1
 800e00e:	4291      	cmp	r1, r2
 800e010:	d100      	bne.n	800e014 <memcpy.isra.0+0xa>
 800e012:	4770      	bx	lr
 800e014:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e018:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e01c:	e7f7      	b.n	800e00e <memcpy.isra.0+0x4>
	...

0800e020 <icmp_handle>:
 800e020:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e022:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800e026:	4604      	mov	r4, r0
 800e028:	2b08      	cmp	r3, #8
 800e02a:	d13e      	bne.n	800e0aa <icmp_handle+0x8a>
 800e02c:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 800e030:	2d00      	cmp	r5, #0
 800e032:	d13a      	bne.n	800e0aa <icmp_handle+0x8a>
 800e034:	1d86      	adds	r6, r0, #6
 800e036:	4631      	mov	r1, r6
 800e038:	2206      	movs	r2, #6
 800e03a:	f7ff ffe6 	bl	800e00a <memcpy.isra.0>
 800e03e:	4630      	mov	r0, r6
 800e040:	2206      	movs	r2, #6
 800e042:	491b      	ldr	r1, [pc, #108]	; (800e0b0 <icmp_handle+0x90>)
 800e044:	f7ff ffe1 	bl	800e00a <memcpy.isra.0>
 800e048:	8a63      	ldrh	r3, [r4, #18]
 800e04a:	f104 061a 	add.w	r6, r4, #26
 800e04e:	43db      	mvns	r3, r3
 800e050:	4631      	mov	r1, r6
 800e052:	2204      	movs	r2, #4
 800e054:	8263      	strh	r3, [r4, #18]
 800e056:	f104 001e 	add.w	r0, r4, #30
 800e05a:	f7ff ffd6 	bl	800e00a <memcpy.isra.0>
 800e05e:	2204      	movs	r2, #4
 800e060:	4b14      	ldr	r3, [pc, #80]	; (800e0b4 <icmp_handle+0x94>)
 800e062:	eb0d 0102 	add.w	r1, sp, r2
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	4630      	mov	r0, r6
 800e06a:	f104 060e 	add.w	r6, r4, #14
 800e06e:	9301      	str	r3, [sp, #4]
 800e070:	f7ff ffcb 	bl	800e00a <memcpy.isra.0>
 800e074:	2114      	movs	r1, #20
 800e076:	4630      	mov	r0, r6
 800e078:	7625      	strb	r5, [r4, #24]
 800e07a:	7665      	strb	r5, [r4, #25]
 800e07c:	f7ff ffa8 	bl	800dfd0 <net_chksum>
 800e080:	8a21      	ldrh	r1, [r4, #16]
 800e082:	8320      	strh	r0, [r4, #24]
 800e084:	ba49      	rev16	r1, r1
 800e086:	b289      	uxth	r1, r1
 800e088:	4630      	mov	r0, r6
 800e08a:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800e08e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800e092:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800e096:	f7ff ff9b 	bl	800dfd0 <net_chksum>
 800e09a:	8a21      	ldrh	r1, [r4, #16]
 800e09c:	84a0      	strh	r0, [r4, #36]	; 0x24
 800e09e:	ba49      	rev16	r1, r1
 800e0a0:	b289      	uxth	r1, r1
 800e0a2:	4620      	mov	r0, r4
 800e0a4:	310e      	adds	r1, #14
 800e0a6:	f002 fcfb 	bl	8010aa0 <emac_eth_send>
 800e0aa:	b002      	add	sp, #8
 800e0ac:	bd70      	pop	{r4, r5, r6, pc}
 800e0ae:	bf00      	nop
 800e0b0:	20001bd8 	ldrdcs	r1, [r0], -r8
 800e0b4:	20001bcc 	andcs	r1, r0, ip, asr #23

0800e0b8 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800e0b8:	b430      	push	{r4, r5}
 800e0ba:	b168      	cbz	r0, 800e0d8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800e0bc:	2300      	movs	r3, #0
 800e0be:	7905      	ldrb	r5, [r0, #4]
 800e0c0:	5cd4      	ldrb	r4, [r2, r3]
 800e0c2:	b11c      	cbz	r4, 800e0cc <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800e0c4:	1c5c      	adds	r4, r3, #1
 800e0c6:	429d      	cmp	r5, r3
 800e0c8:	4623      	mov	r3, r4
 800e0ca:	dcf9      	bgt.n	800e0c0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800e0cc:	6804      	ldr	r4, [r0, #0]
 800e0ce:	b2db      	uxtb	r3, r3
 800e0d0:	69e4      	ldr	r4, [r4, #28]
 800e0d2:	46a4      	mov	ip, r4
 800e0d4:	bc30      	pop	{r4, r5}
 800e0d6:	4760      	bx	ip
 800e0d8:	bc30      	pop	{r4, r5}
 800e0da:	4770      	bx	lr

0800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800e0dc:	b110      	cbz	r0, 800e0e4 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800e0de:	6803      	ldr	r3, [r0, #0]
 800e0e0:	691b      	ldr	r3, [r3, #16]
 800e0e2:	4718      	bx	r3
 800e0e4:	4770      	bx	lr

0800e0e6 <Display::Printf(unsigned char, char const*, ...)>:
 800e0e6:	b40c      	push	{r2, r3}
 800e0e8:	b570      	push	{r4, r5, r6, lr}
 800e0ea:	6984      	ldr	r4, [r0, #24]
 800e0ec:	4605      	mov	r5, r0
 800e0ee:	460e      	mov	r6, r1
 800e0f0:	b08a      	sub	sp, #40	; 0x28
 800e0f2:	b174      	cbz	r4, 800e112 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800e0f4:	ab0f      	add	r3, sp, #60	; 0x3c
 800e0f6:	2120      	movs	r1, #32
 800e0f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e0fa:	a802      	add	r0, sp, #8
 800e0fc:	9301      	str	r3, [sp, #4]
 800e0fe:	f001 fd81 	bl	800fc04 <vsnprintf>
 800e102:	4604      	mov	r4, r0
 800e104:	69a8      	ldr	r0, [r5, #24]
 800e106:	4631      	mov	r1, r6
 800e108:	6803      	ldr	r3, [r0, #0]
 800e10a:	aa02      	add	r2, sp, #8
 800e10c:	69dd      	ldr	r5, [r3, #28]
 800e10e:	b2a3      	uxth	r3, r4
 800e110:	47a8      	blx	r5
 800e112:	4620      	mov	r0, r4
 800e114:	b00a      	add	sp, #40	; 0x28
 800e116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e11a:	b002      	add	sp, #8
 800e11c:	4770      	bx	lr

0800e11e <Display::Status(Display7SegmentMessage)>:
 800e11e:	7c43      	ldrb	r3, [r0, #17]
 800e120:	b513      	push	{r0, r1, r4, lr}
 800e122:	4604      	mov	r4, r0
 800e124:	b19b      	cbz	r3, 800e14e <Display::Status(Display7SegmentMessage)+0x30>
 800e126:	43c9      	mvns	r1, r1
 800e128:	2312      	movs	r3, #18
 800e12a:	7a00      	ldrb	r0, [r0, #8]
 800e12c:	f88d 3004 	strb.w	r3, [sp, #4]
 800e130:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800e134:	f88d 1006 	strb.w	r1, [sp, #6]
 800e138:	f88d 3005 	strb.w	r3, [sp, #5]
 800e13c:	f002 fd48 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800e140:	68e0      	ldr	r0, [r4, #12]
 800e142:	f002 fd3d 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 800e146:	2103      	movs	r1, #3
 800e148:	a801      	add	r0, sp, #4
 800e14a:	f002 fd47 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800e14e:	b002      	add	sp, #8
 800e150:	bd10      	pop	{r4, pc}
	...

0800e154 <DisplayUdf::DisplayUdf()>:
 800e154:	b510      	push	{r4, lr}
 800e156:	4604      	mov	r4, r0
 800e158:	f000 fe58 	bl	800ee0c <Display::Display()>
 800e15c:	2202      	movs	r2, #2
 800e15e:	2300      	movs	r3, #0
 800e160:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800e164:	4b05      	ldr	r3, [pc, #20]	; (800e17c <DisplayUdf::DisplayUdf()+0x28>)
 800e166:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e16a:	601c      	str	r4, [r3, #0]
 800e16c:	2301      	movs	r3, #1
 800e16e:	f802 3b01 	strb.w	r3, [r2], #1
 800e172:	3301      	adds	r3, #1
 800e174:	2b15      	cmp	r3, #21
 800e176:	d1fa      	bne.n	800e16e <DisplayUdf::DisplayUdf()+0x1a>
 800e178:	4620      	mov	r0, r4
 800e17a:	bd10      	pop	{r4, pc}
 800e17c:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e180 <DisplayUdf::SetTitle(char const*, ...)>:
 800e180:	b40e      	push	{r1, r2, r3}
 800e182:	b517      	push	{r0, r1, r2, r4, lr}
 800e184:	ab05      	add	r3, sp, #20
 800e186:	f853 2b04 	ldr.w	r2, [r3], #4
 800e18a:	4604      	mov	r4, r0
 800e18c:	211f      	movs	r1, #31
 800e18e:	301c      	adds	r0, #28
 800e190:	9301      	str	r3, [sp, #4]
 800e192:	f001 fd37 	bl	800fc04 <vsnprintf>
 800e196:	2300      	movs	r3, #0
 800e198:	4404      	add	r4, r0
 800e19a:	7723      	strb	r3, [r4, #28]
 800e19c:	b003      	add	sp, #12
 800e19e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1a2:	b003      	add	sp, #12
 800e1a4:	4770      	bx	lr
	...

0800e1a8 <DisplayUdf::ShowEmacStart()>:
 800e1a8:	b510      	push	{r4, lr}
 800e1aa:	4604      	mov	r4, r0
 800e1ac:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e1b0:	6980      	ldr	r0, [r0, #24]
 800e1b2:	f7ff ff93 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e1b6:	4620      	mov	r0, r4
 800e1b8:	4a02      	ldr	r2, [pc, #8]	; (800e1c4 <DisplayUdf::ShowEmacStart()+0x1c>)
 800e1ba:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e1be:	f7ff ff92 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e1c2:	bd10      	pop	{r4, pc}
 800e1c4:	080131f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, ip, sp}

0800e1c8 <DisplayUdf::ShowIpAddress()>:
 800e1c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1cc:	4604      	mov	r4, r0
 800e1ce:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e1d2:	b086      	sub	sp, #24
 800e1d4:	6980      	ldr	r0, [r0, #24]
 800e1d6:	f7ff ff81 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e1da:	4b13      	ldr	r3, [pc, #76]	; (800e228 <DisplayUdf::ShowIpAddress()+0x60>)
 800e1dc:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800e1e0:	681d      	ldr	r5, [r3, #0]
 800e1e2:	69a8      	ldr	r0, [r5, #24]
 800e1e4:	692e      	ldr	r6, [r5, #16]
 800e1e6:	f7f8 ffcb 	bl	8007180 <__popcountsi2>
 800e1ea:	78eb      	ldrb	r3, [r5, #3]
 800e1ec:	fa5f f886 	uxtb.w	r8, r6
 800e1f0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800e1f4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800e1f8:	0e36      	lsrs	r6, r6, #24
 800e1fa:	b99b      	cbnz	r3, 800e224 <DisplayUdf::ShowIpAddress()+0x5c>
 800e1fc:	786b      	ldrb	r3, [r5, #1]
 800e1fe:	2b00      	cmp	r3, #0
 800e200:	bf14      	ite	ne
 800e202:	2244      	movne	r2, #68	; 0x44
 800e204:	2253      	moveq	r2, #83	; 0x53
 800e206:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800e20a:	4643      	mov	r3, r8
 800e20c:	4639      	mov	r1, r7
 800e20e:	4620      	mov	r0, r4
 800e210:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e214:	4a05      	ldr	r2, [pc, #20]	; (800e22c <DisplayUdf::ShowIpAddress()+0x64>)
 800e216:	f8cd 9000 	str.w	r9, [sp]
 800e21a:	f7ff ff64 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e21e:	b006      	add	sp, #24
 800e220:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e224:	225a      	movs	r2, #90	; 0x5a
 800e226:	e7ee      	b.n	800e206 <DisplayUdf::ShowIpAddress()+0x3e>
 800e228:	20009494 	mulcs	r0, r4, r4
 800e22c:	08013202 	stmdaeq	r1, {r1, r9, ip, sp}

0800e230 <DisplayUdf::ShowNetmask()>:
 800e230:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e232:	4604      	mov	r4, r0
 800e234:	4b0b      	ldr	r3, [pc, #44]	; (800e264 <DisplayUdf::ShowNetmask()+0x34>)
 800e236:	681b      	ldr	r3, [r3, #0]
 800e238:	699b      	ldr	r3, [r3, #24]
 800e23a:	0e1a      	lsrs	r2, r3, #24
 800e23c:	9202      	str	r2, [sp, #8]
 800e23e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e242:	9201      	str	r2, [sp, #4]
 800e244:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e248:	9200      	str	r2, [sp, #0]
 800e24a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800e24e:	4a06      	ldr	r2, [pc, #24]	; (800e268 <DisplayUdf::ShowNetmask()+0x38>)
 800e250:	b2db      	uxtb	r3, r3
 800e252:	f7ff ff48 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e256:	4620      	mov	r0, r4
 800e258:	b004      	add	sp, #16
 800e25a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e25e:	f7ff bfb3 	b.w	800e1c8 <DisplayUdf::ShowIpAddress()>
 800e262:	bf00      	nop
 800e264:	20009494 	mulcs	r0, r4, r4
 800e268:	08013214 	stmdaeq	r1, {r2, r4, r9, ip, sp}

0800e26c <DisplayUdf::ShowGatewayIp()>:
 800e26c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e26e:	4604      	mov	r4, r0
 800e270:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800e274:	6980      	ldr	r0, [r0, #24]
 800e276:	f7ff ff31 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e27a:	4b0a      	ldr	r3, [pc, #40]	; (800e2a4 <DisplayUdf::ShowGatewayIp()+0x38>)
 800e27c:	4620      	mov	r0, r4
 800e27e:	681b      	ldr	r3, [r3, #0]
 800e280:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800e284:	695b      	ldr	r3, [r3, #20]
 800e286:	0e1a      	lsrs	r2, r3, #24
 800e288:	9202      	str	r2, [sp, #8]
 800e28a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e28e:	9201      	str	r2, [sp, #4]
 800e290:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e294:	9200      	str	r2, [sp, #0]
 800e296:	b2db      	uxtb	r3, r3
 800e298:	4a03      	ldr	r2, [pc, #12]	; (800e2a8 <DisplayUdf::ShowGatewayIp()+0x3c>)
 800e29a:	f7ff ff24 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e29e:	b004      	add	sp, #16
 800e2a0:	bd10      	pop	{r4, pc}
 800e2a2:	bf00      	nop
 800e2a4:	20009494 	mulcs	r0, r4, r4
 800e2a8:	08013223 	stmdaeq	r1, {r0, r1, r5, r9, ip, sp}

0800e2ac <DisplayUdf::ShowHostName()>:
 800e2ac:	b510      	push	{r4, lr}
 800e2ae:	4604      	mov	r4, r0
 800e2b0:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800e2b4:	6980      	ldr	r0, [r0, #24]
 800e2b6:	f7ff ff11 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e2ba:	4b05      	ldr	r3, [pc, #20]	; (800e2d0 <DisplayUdf::ShowHostName()+0x24>)
 800e2bc:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800e2c0:	681a      	ldr	r2, [r3, #0]
 800e2c2:	69a0      	ldr	r0, [r4, #24]
 800e2c4:	321c      	adds	r2, #28
 800e2c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e2ca:	f7ff bef5 	b.w	800e0b8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e2ce:	bf00      	nop
 800e2d0:	20009494 	mulcs	r0, r4, r4

0800e2d4 <DisplayUdf::Show()>:
 800e2d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2d6:	4604      	mov	r4, r0
 800e2d8:	21ff      	movs	r1, #255	; 0xff
 800e2da:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800e2de:	f100 0250 	add.w	r2, r0, #80	; 0x50
 800e2e2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800e2e6:	2806      	cmp	r0, #6
 800e2e8:	bf88      	it	hi
 800e2ea:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 800e2ee:	429a      	cmp	r2, r3
 800e2f0:	d1f7      	bne.n	800e2e2 <DisplayUdf::Show()+0xe>
 800e2f2:	2501      	movs	r5, #1
 800e2f4:	4629      	mov	r1, r5
 800e2f6:	3501      	adds	r5, #1
 800e2f8:	69a0      	ldr	r0, [r4, #24]
 800e2fa:	b2ed      	uxtb	r5, r5
 800e2fc:	f7ff feee 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e300:	2d06      	cmp	r5, #6
 800e302:	d1f7      	bne.n	800e2f4 <DisplayUdf::Show()+0x20>
 800e304:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800e308:	69a0      	ldr	r0, [r4, #24]
 800e30a:	f104 021c 	add.w	r2, r4, #28
 800e30e:	f7ff fed3 	bl	800e0b8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e312:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800e316:	69a0      	ldr	r0, [r4, #24]
 800e318:	4a0d      	ldr	r2, [pc, #52]	; (800e350 <DisplayUdf::Show()+0x7c>)
 800e31a:	f7ff fecd 	bl	800e0b8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e31e:	4b0d      	ldr	r3, [pc, #52]	; (800e354 <DisplayUdf::Show()+0x80>)
 800e320:	4a0d      	ldr	r2, [pc, #52]	; (800e358 <DisplayUdf::Show()+0x84>)
 800e322:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800e326:	9300      	str	r3, [sp, #0]
 800e328:	4620      	mov	r0, r4
 800e32a:	2303      	movs	r3, #3
 800e32c:	f7ff fedb 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e330:	4620      	mov	r0, r4
 800e332:	f7ff ff49 	bl	800e1c8 <DisplayUdf::ShowIpAddress()>
 800e336:	4620      	mov	r0, r4
 800e338:	f7ff ff98 	bl	800e26c <DisplayUdf::ShowGatewayIp()>
 800e33c:	4620      	mov	r0, r4
 800e33e:	f7ff ff77 	bl	800e230 <DisplayUdf::ShowNetmask()>
 800e342:	4620      	mov	r0, r4
 800e344:	b003      	add	sp, #12
 800e346:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e34a:	f7ff bfaf 	b.w	800e2ac <DisplayUdf::ShowHostName()>
 800e34e:	bf00      	nop
 800e350:	08011bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip}
 800e354:	20009b5c 	andcs	r9, r0, ip, asr fp
 800e358:	08013232 	stmdaeq	r1, {r1, r4, r5, r9, ip, sp}

0800e35c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e35c:	3901      	subs	r1, #1
 800e35e:	b510      	push	{r4, lr}
 800e360:	4604      	mov	r4, r0
 800e362:	2903      	cmp	r1, #3
 800e364:	d814      	bhi.n	800e390 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e366:	e8df f001 	tbb	[pc, r1]
 800e36a:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800e36e:	4b14      	ldr	r3, [pc, #80]	; (800e3c0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e370:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e374:	6818      	ldr	r0, [r3, #0]
 800e376:	f7ff fed2 	bl	800e11e <Display::Status(Display7SegmentMessage)>
 800e37a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e37e:	69a0      	ldr	r0, [r4, #24]
 800e380:	f7ff feac 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e384:	4a0f      	ldr	r2, [pc, #60]	; (800e3c4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800e386:	4620      	mov	r0, r4
 800e388:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e38c:	f7ff feab 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e390:	bd10      	pop	{r4, pc}
 800e392:	f248 0180 	movw	r1, #32896	; 0x8080
 800e396:	4b0a      	ldr	r3, [pc, #40]	; (800e3c0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e398:	6818      	ldr	r0, [r3, #0]
 800e39a:	f7ff fec0 	bl	800e11e <Display::Status(Display7SegmentMessage)>
 800e39e:	e7f7      	b.n	800e390 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e3a0:	4b07      	ldr	r3, [pc, #28]	; (800e3c0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e3a2:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e3a6:	6818      	ldr	r0, [r3, #0]
 800e3a8:	f7ff feb9 	bl	800e11e <Display::Status(Display7SegmentMessage)>
 800e3ac:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e3b0:	69a0      	ldr	r0, [r4, #24]
 800e3b2:	f7ff fe93 	bl	800e0dc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e3b6:	4a04      	ldr	r2, [pc, #16]	; (800e3c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800e3b8:	e7e5      	b.n	800e386 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800e3ba:	f645 3179 	movw	r1, #23417	; 0x5b79
 800e3be:	e7ea      	b.n	800e396 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800e3c0:	20009acc 	andcs	r9, r0, ip, asr #21
 800e3c4:	08013241 	stmdaeq	r1, {r0, r6, r9, ip, sp}
 800e3c8:	0801324f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, ip, sp}

0800e3cc <DisplayUdf::ShowShutdown()>:
 800e3cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3d0:	4604      	mov	r4, r0
 800e3d2:	6980      	ldr	r0, [r0, #24]
 800e3d4:	b308      	cbz	r0, 800e41a <DisplayUdf::ShowShutdown()+0x4e>
 800e3d6:	f890 8005 	ldrb.w	r8, [r0, #5]
 800e3da:	6803      	ldr	r3, [r0, #0]
 800e3dc:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800e3e0:	b2ed      	uxtb	r5, r5
 800e3e2:	462a      	mov	r2, r5
 800e3e4:	2100      	movs	r1, #0
 800e3e6:	6a1b      	ldr	r3, [r3, #32]
 800e3e8:	7907      	ldrb	r7, [r0, #4]
 800e3ea:	2600      	movs	r6, #0
 800e3ec:	4798      	blx	r3
 800e3ee:	3f01      	subs	r7, #1
 800e3f0:	42b7      	cmp	r7, r6
 800e3f2:	69a0      	ldr	r0, [r4, #24]
 800e3f4:	d906      	bls.n	800e404 <DisplayUdf::ShowShutdown()+0x38>
 800e3f6:	b118      	cbz	r0, 800e400 <DisplayUdf::ShowShutdown()+0x34>
 800e3f8:	6803      	ldr	r3, [r0, #0]
 800e3fa:	2120      	movs	r1, #32
 800e3fc:	695b      	ldr	r3, [r3, #20]
 800e3fe:	4798      	blx	r3
 800e400:	3601      	adds	r6, #1
 800e402:	e7f5      	b.n	800e3f0 <DisplayUdf::ShowShutdown()+0x24>
 800e404:	b120      	cbz	r0, 800e410 <DisplayUdf::ShowShutdown()+0x44>
 800e406:	6803      	ldr	r3, [r0, #0]
 800e408:	462a      	mov	r2, r5
 800e40a:	2100      	movs	r1, #0
 800e40c:	6a1b      	ldr	r3, [r3, #32]
 800e40e:	4798      	blx	r3
 800e410:	4641      	mov	r1, r8
 800e412:	4a05      	ldr	r2, [pc, #20]	; (800e428 <DisplayUdf::ShowShutdown()+0x5c>)
 800e414:	69a0      	ldr	r0, [r4, #24]
 800e416:	f7ff fe4f 	bl	800e0b8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e41a:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800e41e:	4620      	mov	r0, r4
 800e420:	f7ff fe7d 	bl	800e11e <Display::Status(Display7SegmentMessage)>
 800e424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e428:	0801325d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, ip, sp}

0800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800e42c:	1e4b      	subs	r3, r1, #1
 800e42e:	2b05      	cmp	r3, #5
 800e430:	b530      	push	{r4, r5, lr}
 800e432:	d80f      	bhi.n	800e454 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800e434:	2300      	movs	r3, #0
 800e436:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 800e43a:	f814 5b01 	ldrb.w	r5, [r4], #1
 800e43e:	428d      	cmp	r5, r1
 800e440:	d109      	bne.n	800e456 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800e442:	1884      	adds	r4, r0, r2
 800e444:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800e448:	4403      	add	r3, r0
 800e44a:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800e44e:	4410      	add	r0, r2
 800e450:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800e454:	bd30      	pop	{r4, r5, pc}
 800e456:	3301      	adds	r3, #1
 800e458:	2b14      	cmp	r3, #20
 800e45a:	d1ee      	bne.n	800e43a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800e45c:	e7f7      	b.n	800e44e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

0800e460 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e460:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e462:	88c5      	ldrh	r5, [r0, #6]
 800e464:	8886      	ldrh	r6, [r0, #4]
 800e466:	42b5      	cmp	r5, r6
 800e468:	d216      	bcs.n	800e498 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e46a:	4604      	mov	r4, r0
 800e46c:	6800      	ldr	r0, [r0, #0]
 800e46e:	4428      	add	r0, r5
 800e470:	1b75      	subs	r5, r6, r5
 800e472:	7a26      	ldrb	r6, [r4, #8]
 800e474:	b923      	cbnz	r3, 800e480 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e476:	b926      	cbnz	r6, 800e482 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e478:	9200      	str	r2, [sp, #0]
 800e47a:	460b      	mov	r3, r1
 800e47c:	4a09      	ldr	r2, [pc, #36]	; (800e4a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e47e:	e003      	b.n	800e488 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e480:	b166      	cbz	r6, 800e49c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e482:	460b      	mov	r3, r1
 800e484:	9200      	str	r2, [sp, #0]
 800e486:	4a08      	ldr	r2, [pc, #32]	; (800e4a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e488:	4629      	mov	r1, r5
 800e48a:	f001 fba3 	bl	800fbd4 <snprintf>
 800e48e:	4285      	cmp	r5, r0
 800e490:	bfa2      	ittt	ge
 800e492:	88e3      	ldrhge	r3, [r4, #6]
 800e494:	181b      	addge	r3, r3, r0
 800e496:	80e3      	strhge	r3, [r4, #6]
 800e498:	b002      	add	sp, #8
 800e49a:	bd70      	pop	{r4, r5, r6, pc}
 800e49c:	9200      	str	r2, [sp, #0]
 800e49e:	460b      	mov	r3, r1
 800e4a0:	4a02      	ldr	r2, [pc, #8]	; (800e4ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e4a2:	e7f1      	b.n	800e488 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e4a4:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 800e4a8:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 800e4ac:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

0800e4b0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800e4b0:	b510      	push	{r4, lr}
 800e4b2:	2220      	movs	r2, #32
 800e4b4:	4604      	mov	r4, r0
 800e4b6:	f840 1b04 	str.w	r1, [r0], #4
 800e4ba:	2100      	movs	r1, #0
 800e4bc:	f001 f940 	bl	800f740 <memset>
 800e4c0:	f647 7305 	movw	r3, #32517	; 0x7f05
 800e4c4:	4620      	mov	r0, r4
 800e4c6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e4c8:	bd10      	pop	{r4, pc}

0800e4ca <DisplayUdfParams::Load()>:
 800e4ca:	b508      	push	{r3, lr}
 800e4cc:	2300      	movs	r3, #0
 800e4ce:	4601      	mov	r1, r0
 800e4d0:	6043      	str	r3, [r0, #4]
 800e4d2:	6800      	ldr	r0, [r0, #0]
 800e4d4:	b120      	cbz	r0, 800e4e0 <DisplayUdfParams::Load()+0x16>
 800e4d6:	6803      	ldr	r3, [r0, #0]
 800e4d8:	3104      	adds	r1, #4
 800e4da:	68db      	ldr	r3, [r3, #12]
 800e4dc:	4798      	blx	r3
 800e4de:	2001      	movs	r0, #1
 800e4e0:	bd08      	pop	{r3, pc}
	...

0800e4e4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 800e4e4:	6803      	ldr	r3, [r0, #0]
 800e4e6:	b1d3      	cbz	r3, 800e51e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800e4e8:	2300      	movs	r3, #0
 800e4ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e4ec:	460d      	mov	r5, r1
 800e4ee:	4616      	mov	r6, r2
 800e4f0:	4604      	mov	r4, r0
 800e4f2:	6043      	str	r3, [r0, #4]
 800e4f4:	4602      	mov	r2, r0
 800e4f6:	490a      	ldr	r1, [pc, #40]	; (800e520 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800e4f8:	4668      	mov	r0, sp
 800e4fa:	f000 fb19 	bl	800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e4fe:	4632      	mov	r2, r6
 800e500:	4629      	mov	r1, r5
 800e502:	4668      	mov	r0, sp
 800e504:	f000 fb18 	bl	800eb38 <ReadConfigFile::Read(char const*, unsigned int)>
 800e508:	4621      	mov	r1, r4
 800e50a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e50e:	6803      	ldr	r3, [r0, #0]
 800e510:	689b      	ldr	r3, [r3, #8]
 800e512:	4798      	blx	r3
 800e514:	4668      	mov	r0, sp
 800e516:	f000 fb0e 	bl	800eb36 <ReadConfigFile::~ReadConfigFile()>
 800e51a:	b002      	add	sp, #8
 800e51c:	bd70      	pop	{r4, r5, r6, pc}
 800e51e:	4770      	bx	lr
 800e520:	0800e5e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, sp, lr, pc}

0800e524 <DisplayUdfParams::callbackFunction(char const*)>:
 800e524:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e526:	460e      	mov	r6, r1
 800e528:	4604      	mov	r4, r0
 800e52a:	492b      	ldr	r1, [pc, #172]	; (800e5d8 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 800e52c:	4630      	mov	r0, r6
 800e52e:	f10d 0207 	add.w	r2, sp, #7
 800e532:	f000 fbac 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e536:	b968      	cbnz	r0, 800e554 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800e538:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e53c:	6863      	ldr	r3, [r4, #4]
 800e53e:	2a7f      	cmp	r2, #127	; 0x7f
 800e540:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800e544:	bf14      	ite	ne
 800e546:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800e54a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800e54e:	6063      	str	r3, [r4, #4]
 800e550:	b003      	add	sp, #12
 800e552:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e554:	4630      	mov	r0, r6
 800e556:	4921      	ldr	r1, [pc, #132]	; (800e5dc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800e558:	f10d 0207 	add.w	r2, sp, #7
 800e55c:	f000 fb97 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e560:	b958      	cbnz	r0, 800e57a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800e562:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e566:	6863      	ldr	r3, [r4, #4]
 800e568:	2a05      	cmp	r2, #5
 800e56a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800e56e:	bf14      	ite	ne
 800e570:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800e574:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800e578:	e7e9      	b.n	800e54e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e57a:	4630      	mov	r0, r6
 800e57c:	4918      	ldr	r1, [pc, #96]	; (800e5e0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800e57e:	f10d 0207 	add.w	r2, sp, #7
 800e582:	f000 fb84 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e586:	b948      	cbnz	r0, 800e59c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800e588:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e58c:	6863      	ldr	r3, [r4, #4]
 800e58e:	b112      	cbz	r2, 800e596 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800e590:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e594:	e7db      	b.n	800e54e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e596:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800e59a:	e7d8      	b.n	800e54e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e59c:	2500      	movs	r5, #0
 800e59e:	4f11      	ldr	r7, [pc, #68]	; (800e5e4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800e5a0:	4630      	mov	r0, r6
 800e5a2:	f857 1b04 	ldr.w	r1, [r7], #4
 800e5a6:	f10d 0207 	add.w	r2, sp, #7
 800e5aa:	f000 fb70 	bl	800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e5ae:	b978      	cbnz	r0, 800e5d0 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 800e5b0:	2301      	movs	r3, #1
 800e5b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e5b6:	6862      	ldr	r2, [r4, #4]
 800e5b8:	1e4e      	subs	r6, r1, #1
 800e5ba:	2e05      	cmp	r6, #5
 800e5bc:	fa03 f305 	lsl.w	r3, r3, r5
 800e5c0:	4425      	add	r5, r4
 800e5c2:	bf99      	ittee	ls
 800e5c4:	7229      	strbls	r1, [r5, #8]
 800e5c6:	4313      	orrls	r3, r2
 800e5c8:	7228      	strbhi	r0, [r5, #8]
 800e5ca:	ea22 0303 	bichi.w	r3, r2, r3
 800e5ce:	e7be      	b.n	800e54e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e5d0:	3501      	adds	r5, #1
 800e5d2:	2d14      	cmp	r5, #20
 800e5d4:	d1e4      	bne.n	800e5a0 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800e5d6:	e7bb      	b.n	800e550 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e5d8:	0801331e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, ip, sp}
 800e5dc:	080132e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, ip, sp}
 800e5e0:	080132f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, ip, sp}
 800e5e4:	08013270 	stmdaeq	r1, {r4, r5, r6, r9, ip, sp}

0800e5e8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800e5e8:	f7ff bf9c 	b.w	800e524 <DisplayUdfParams::callbackFunction(char const*)>

0800e5ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e5ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5f0:	4604      	mov	r4, r0
 800e5f2:	4615      	mov	r5, r2
 800e5f4:	461e      	mov	r6, r3
 800e5f6:	b086      	sub	sp, #24
 800e5f8:	3004      	adds	r0, #4
 800e5fa:	b379      	cbz	r1, 800e65c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800e5fc:	2222      	movs	r2, #34	; 0x22
 800e5fe:	f001 f888 	bl	800f712 <memmove>
 800e602:	462a      	mov	r2, r5
 800e604:	4633      	mov	r3, r6
 800e606:	493d      	ldr	r1, [pc, #244]	; (800e6fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800e608:	a803      	add	r0, sp, #12
 800e60a:	f000 f9f1 	bl	800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e60e:	6863      	ldr	r3, [r4, #4]
 800e610:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800e614:	493a      	ldr	r1, [pc, #232]	; (800e700 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800e616:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800e61a:	a803      	add	r0, sp, #12
 800e61c:	f7ff ff20 	bl	800e460 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e620:	6863      	ldr	r3, [r4, #4]
 800e622:	4938      	ldr	r1, [pc, #224]	; (800e704 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800e624:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800e628:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800e62c:	a803      	add	r0, sp, #12
 800e62e:	f7ff ff17 	bl	800e460 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e632:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e636:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e63a:	42a9      	cmp	r1, r5
 800e63c:	d227      	bcs.n	800e68e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800e63e:	6863      	ldr	r3, [r4, #4]
 800e640:	9803      	ldr	r0, [sp, #12]
 800e642:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800e646:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e64a:	4408      	add	r0, r1
 800e64c:	eba5 0501 	sub.w	r5, r5, r1
 800e650:	d10b      	bne.n	800e66a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800e652:	b962      	cbnz	r2, 800e66e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e654:	9200      	str	r2, [sp, #0]
 800e656:	4b2c      	ldr	r3, [pc, #176]	; (800e708 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e658:	4a2c      	ldr	r2, [pc, #176]	; (800e70c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800e65a:	e00e      	b.n	800e67a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e65c:	6823      	ldr	r3, [r4, #0]
 800e65e:	4601      	mov	r1, r0
 800e660:	681a      	ldr	r2, [r3, #0]
 800e662:	4618      	mov	r0, r3
 800e664:	68d2      	ldr	r2, [r2, #12]
 800e666:	4790      	blx	r2
 800e668:	e7cb      	b.n	800e602 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e66a:	2a00      	cmp	r2, #0
 800e66c:	d041      	beq.n	800e6f2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800e66e:	3b00      	subs	r3, #0
 800e670:	bf18      	it	ne
 800e672:	2301      	movne	r3, #1
 800e674:	4a26      	ldr	r2, [pc, #152]	; (800e710 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800e676:	9300      	str	r3, [sp, #0]
 800e678:	4b23      	ldr	r3, [pc, #140]	; (800e708 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e67a:	4629      	mov	r1, r5
 800e67c:	f001 faaa 	bl	800fbd4 <snprintf>
 800e680:	4285      	cmp	r5, r0
 800e682:	bfa2      	ittt	ge
 800e684:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e688:	181b      	addge	r3, r3, r0
 800e68a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e68e:	2500      	movs	r5, #0
 800e690:	2701      	movs	r7, #1
 800e692:	4e20      	ldr	r6, [pc, #128]	; (800e714 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800e694:	f104 0808 	add.w	r8, r4, #8
 800e698:	f856 1b04 	ldr.w	r1, [r6], #4
 800e69c:	780b      	ldrb	r3, [r1, #0]
 800e69e:	b15b      	cbz	r3, 800e6b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800e6a0:	6862      	ldr	r2, [r4, #4]
 800e6a2:	fa07 f305 	lsl.w	r3, r7, r5
 800e6a6:	4393      	bics	r3, r2
 800e6a8:	bf0c      	ite	eq
 800e6aa:	2301      	moveq	r3, #1
 800e6ac:	2300      	movne	r3, #0
 800e6ae:	f818 2005 	ldrb.w	r2, [r8, r5]
 800e6b2:	a803      	add	r0, sp, #12
 800e6b4:	f7ff fed4 	bl	800e460 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e6b8:	3501      	adds	r5, #1
 800e6ba:	2d14      	cmp	r5, #20
 800e6bc:	d1ec      	bne.n	800e698 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800e6be:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e6c2:	b17b      	cbz	r3, 800e6e4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800e6c4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e6c8:	9b03      	ldr	r3, [sp, #12]
 800e6ca:	4413      	add	r3, r2
 800e6cc:	227d      	movs	r2, #125	; 0x7d
 800e6ce:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e6d2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6d6:	9903      	ldr	r1, [sp, #12]
 800e6d8:	54ca      	strb	r2, [r1, r3]
 800e6da:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6de:	3301      	adds	r3, #1
 800e6e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e6e4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e6e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e6ea:	601a      	str	r2, [r3, #0]
 800e6ec:	b006      	add	sp, #24
 800e6ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6f2:	2301      	movs	r3, #1
 800e6f4:	4a08      	ldr	r2, [pc, #32]	; (800e718 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800e6f6:	9300      	str	r3, [sp, #0]
 800e6f8:	4b03      	ldr	r3, [pc, #12]	; (800e708 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e6fa:	e7be      	b.n	800e67a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e6fc:	08013312 	stmdaeq	r1, {r1, r4, r8, r9, ip, sp}
 800e700:	0801331e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, ip, sp}
 800e704:	080132e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, ip, sp}
 800e708:	080132f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, ip, sp}
 800e70c:	08011cf2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, fp, ip}
 800e710:	08011ce9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, fp, ip}
 800e714:	08013270 	stmdaeq	r1, {r4, r5, r6, r9, ip, sp}
 800e718:	08011cf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, fp, ip}

0800e71c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800e71c:	b513      	push	{r0, r1, r4, lr}
 800e71e:	6804      	ldr	r4, [r0, #0]
 800e720:	b914      	cbnz	r4, 800e728 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e722:	601c      	str	r4, [r3, #0]
 800e724:	b002      	add	sp, #8
 800e726:	bd10      	pop	{r4, pc}
 800e728:	9300      	str	r3, [sp, #0]
 800e72a:	4613      	mov	r3, r2
 800e72c:	460a      	mov	r2, r1
 800e72e:	2100      	movs	r1, #0
 800e730:	f7ff ff5c 	bl	800e5ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800e734:	e7f6      	b.n	800e724 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e736 <DisplayUdfParams::Set(DisplayUdf*)>:
 800e736:	6843      	ldr	r3, [r0, #4]
 800e738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e73c:	009a      	lsls	r2, r3, #2
 800e73e:	4604      	mov	r4, r0
 800e740:	460e      	mov	r6, r1
 800e742:	d506      	bpl.n	800e752 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e744:	6988      	ldr	r0, [r1, #24]
 800e746:	b120      	cbz	r0, 800e752 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e748:	6803      	ldr	r3, [r0, #0]
 800e74a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800e74e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e750:	4798      	blx	r3
 800e752:	6863      	ldr	r3, [r4, #4]
 800e754:	69b0      	ldr	r0, [r6, #24]
 800e756:	00db      	lsls	r3, r3, #3
 800e758:	bf41      	itttt	mi
 800e75a:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800e75e:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800e762:	4353      	mulmi	r3, r2
 800e764:	6173      	strmi	r3, [r6, #20]
 800e766:	6861      	ldr	r1, [r4, #4]
 800e768:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800e76c:	b110      	cbz	r0, 800e774 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800e76e:	6803      	ldr	r3, [r0, #0]
 800e770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e772:	4798      	blx	r3
 800e774:	2500      	movs	r5, #0
 800e776:	2701      	movs	r7, #1
 800e778:	f104 0808 	add.w	r8, r4, #8
 800e77c:	6862      	ldr	r2, [r4, #4]
 800e77e:	fa07 f305 	lsl.w	r3, r7, r5
 800e782:	4393      	bics	r3, r2
 800e784:	d105      	bne.n	800e792 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800e786:	462a      	mov	r2, r5
 800e788:	4630      	mov	r0, r6
 800e78a:	f818 1005 	ldrb.w	r1, [r8, r5]
 800e78e:	f7ff fe4d 	bl	800e42c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800e792:	3501      	adds	r5, #1
 800e794:	2d14      	cmp	r5, #20
 800e796:	d1f1      	bne.n	800e77c <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800e798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e79c <DisplayUdfParams::Dump()>:
 800e79c:	4770      	bx	lr
	...

0800e7a0 <DisplayUdf::Show(E131Bridge*)>:
 800e7a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e7a4:	460e      	mov	r6, r1
 800e7a6:	4604      	mov	r4, r0
 800e7a8:	b085      	sub	sp, #20
 800e7aa:	f7ff fd93 	bl	800e2d4 <DisplayUdf::Show()>
 800e7ae:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 800e7b2:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 800e7b6:	4620      	mov	r0, r4
 800e7b8:	4413      	add	r3, r2
 800e7ba:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800e7be:	4a21      	ldr	r2, [pc, #132]	; (800e844 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800e7c0:	f7ff fc91 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e7c4:	2500      	movs	r5, #0
 800e7c6:	4f20      	ldr	r7, [pc, #128]	; (800e848 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 800e7c8:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800e84c <DisplayUdf::Show(E131Bridge*)+0xac>
 800e7cc:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800e850 <DisplayUdf::Show(E131Bridge*)+0xb0>
 800e7d0:	2301      	movs	r3, #1
 800e7d2:	4629      	mov	r1, r5
 800e7d4:	4630      	mov	r0, r6
 800e7d6:	f10d 020e 	add.w	r2, sp, #14
 800e7da:	f7f9 fc0b 	bl	8007ff4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800e7de:	b1a8      	cbz	r0, 800e80c <DisplayUdf::Show(E131Bridge*)+0x6c>
 800e7e0:	2344      	movs	r3, #68	; 0x44
 800e7e2:	436b      	muls	r3, r5
 800e7e4:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 800e7e8:	58d2      	ldr	r2, [r2, r3]
 800e7ea:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800e7ee:	2a00      	cmp	r2, #0
 800e7f0:	bf0c      	ite	eq
 800e7f2:	463b      	moveq	r3, r7
 800e7f4:	4643      	movne	r3, r8
 800e7f6:	e9cd 0300 	strd	r0, r3, [sp]
 800e7fa:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800e7fe:	464a      	mov	r2, r9
 800e800:	4620      	mov	r0, r4
 800e802:	5d49      	ldrb	r1, [r1, r5]
 800e804:	f105 0341 	add.w	r3, r5, #65	; 0x41
 800e808:	f7ff fc6d 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e80c:	3501      	adds	r5, #1
 800e80e:	2d04      	cmp	r5, #4
 800e810:	d1de      	bne.n	800e7d0 <DisplayUdf::Show(E131Bridge*)+0x30>
 800e812:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800e814:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800e818:	2a02      	cmp	r2, #2
 800e81a:	d001      	beq.n	800e820 <DisplayUdf::Show(E131Bridge*)+0x80>
 800e81c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e81e:	b933      	cbnz	r3, 800e82e <DisplayUdf::Show(E131Bridge*)+0x8e>
 800e820:	4620      	mov	r0, r4
 800e822:	4a0c      	ldr	r2, [pc, #48]	; (800e854 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 800e824:	f7ff fc5f 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e828:	b005      	add	sp, #20
 800e82a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e82e:	480a      	ldr	r0, [pc, #40]	; (800e858 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 800e830:	9300      	str	r3, [sp, #0]
 800e832:	4b0a      	ldr	r3, [pc, #40]	; (800e85c <DisplayUdf::Show(E131Bridge*)+0xbc>)
 800e834:	2a00      	cmp	r2, #0
 800e836:	bf08      	it	eq
 800e838:	4603      	moveq	r3, r0
 800e83a:	4620      	mov	r0, r4
 800e83c:	4a08      	ldr	r2, [pc, #32]	; (800e860 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 800e83e:	f7ff fc52 	bl	800e0e6 <Display::Printf(unsigned char, char const*, ...)>
 800e842:	e7f1      	b.n	800e828 <DisplayUdf::Show(E131Bridge*)+0x88>
 800e844:	08013328 	stmdaeq	r1, {r3, r5, r8, r9, ip, sp}
 800e848:	08011bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, ip}
 800e84c:	08011c00 	stmdaeq	r1, {sl, fp, ip}
 800e850:	0801332f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, ip, sp}
 800e854:	0801333e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, ip, sp}
 800e858:	08011d1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, fp, ip}
 800e85c:	08011d13 	stmdaeq	r1, {r0, r1, r4, r8, sl, fp, ip}
 800e860:	08013345 	stmdaeq	r1, {r0, r2, r6, r8, r9, ip, sp}

0800e864 <NetworkDisplay::ShowEmacStart()>:
 800e864:	4b01      	ldr	r3, [pc, #4]	; (800e86c <NetworkDisplay::ShowEmacStart()+0x8>)
 800e866:	6818      	ldr	r0, [r3, #0]
 800e868:	f7ff bc9e 	b.w	800e1a8 <DisplayUdf::ShowEmacStart()>
 800e86c:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e870 <NetworkDisplay::ShowIp()>:
 800e870:	4b01      	ldr	r3, [pc, #4]	; (800e878 <NetworkDisplay::ShowIp()+0x8>)
 800e872:	6818      	ldr	r0, [r3, #0]
 800e874:	f7ff bca8 	b.w	800e1c8 <DisplayUdf::ShowIpAddress()>
 800e878:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e87c <NetworkDisplay::ShowShutdown()>:
 800e87c:	4b01      	ldr	r3, [pc, #4]	; (800e884 <NetworkDisplay::ShowShutdown()+0x8>)
 800e87e:	6818      	ldr	r0, [r3, #0]
 800e880:	f7ff bda4 	b.w	800e3cc <DisplayUdf::ShowShutdown()>
 800e884:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e888 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e888:	4b01      	ldr	r3, [pc, #4]	; (800e890 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 800e88a:	6818      	ldr	r0, [r3, #0]
 800e88c:	f7ff bd66 	b.w	800e35c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e890:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e894 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e898:	7803      	ldrb	r3, [r0, #0]
 800e89a:	2b7b      	cmp	r3, #123	; 0x7b
 800e89c:	d170      	bne.n	800e980 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 800e89e:	b322      	cbz	r2, 800e8ea <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 800e8a0:	2301      	movs	r3, #1
 800e8a2:	4606      	mov	r6, r0
 800e8a4:	461c      	mov	r4, r3
 800e8a6:	2a00      	cmp	r2, #0
 800e8a8:	bf0c      	ite	eq
 800e8aa:	f04f 0c0a 	moveq.w	ip, #10
 800e8ae:	f04f 0c00 	movne.w	ip, #0
 800e8b2:	273d      	movs	r7, #61	; 0x3d
 800e8b4:	4299      	cmp	r1, r3
 800e8b6:	d960      	bls.n	800e97a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e8b8:	4299      	cmp	r1, r3
 800e8ba:	4602      	mov	r2, r0
 800e8bc:	f890 e000 	ldrb.w	lr, [r0]
 800e8c0:	f103 0301 	add.w	r3, r3, #1
 800e8c4:	f100 0001 	add.w	r0, r0, #1
 800e8c8:	d846      	bhi.n	800e958 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 800e8ca:	1aa0      	subs	r0, r4, r2
 800e8cc:	4615      	mov	r5, r2
 800e8ce:	1884      	adds	r4, r0, r2
 800e8d0:	f812 8b01 	ldrb.w	r8, [r2], #1
 800e8d4:	f103 0e01 	add.w	lr, r3, #1
 800e8d8:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 800e8dc:	d053      	beq.n	800e986 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 800e8de:	4299      	cmp	r1, r3
 800e8e0:	d957      	bls.n	800e992 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e8e2:	4673      	mov	r3, lr
 800e8e4:	f806 8b01 	strb.w	r8, [r6], #1
 800e8e8:	e7f0      	b.n	800e8cc <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 800e8ea:	2323      	movs	r3, #35	; 0x23
 800e8ec:	f800 3b01 	strb.w	r3, [r0], #1
 800e8f0:	4605      	mov	r5, r0
 800e8f2:	2301      	movs	r3, #1
 800e8f4:	4299      	cmp	r1, r3
 800e8f6:	d92d      	bls.n	800e954 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 800e8f8:	f815 4b01 	ldrb.w	r4, [r5], #1
 800e8fc:	2c22      	cmp	r4, #34	; 0x22
 800e8fe:	d001      	beq.n	800e904 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e900:	3301      	adds	r3, #1
 800e902:	e7f7      	b.n	800e8f4 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 800e904:	46ac      	mov	ip, r5
 800e906:	4606      	mov	r6, r0
 800e908:	2701      	movs	r7, #1
 800e90a:	f89c e000 	ldrb.w	lr, [ip]
 800e90e:	4665      	mov	r5, ip
 800e910:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e914:	4630      	mov	r0, r6
 800e916:	463c      	mov	r4, r7
 800e918:	f10c 0c01 	add.w	ip, ip, #1
 800e91c:	f106 0601 	add.w	r6, r6, #1
 800e920:	f107 0701 	add.w	r7, r7, #1
 800e924:	d007      	beq.n	800e936 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e926:	3301      	adds	r3, #1
 800e928:	4299      	cmp	r1, r3
 800e92a:	4665      	mov	r5, ip
 800e92c:	f806 ec01 	strb.w	lr, [r6, #-1]
 800e930:	d8eb      	bhi.n	800e90a <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 800e932:	463c      	mov	r4, r7
 800e934:	4630      	mov	r0, r6
 800e936:	4606      	mov	r6, r0
 800e938:	200a      	movs	r0, #10
 800e93a:	3401      	adds	r4, #1
 800e93c:	f806 0b01 	strb.w	r0, [r6], #1
 800e940:	4628      	mov	r0, r5
 800e942:	f815 7b01 	ldrb.w	r7, [r5], #1
 800e946:	2f7b      	cmp	r7, #123	; 0x7b
 800e948:	d0ad      	beq.n	800e8a6 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e94a:	1c5f      	adds	r7, r3, #1
 800e94c:	4299      	cmp	r1, r3
 800e94e:	463b      	mov	r3, r7
 800e950:	d8f6      	bhi.n	800e940 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e952:	e7a8      	b.n	800e8a6 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e954:	2401      	movs	r4, #1
 800e956:	e7ee      	b.n	800e936 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e958:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e95c:	d1ac      	bne.n	800e8b8 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e95e:	4602      	mov	r2, r0
 800e960:	e7b3      	b.n	800e8ca <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 800e962:	283a      	cmp	r0, #58	; 0x3a
 800e964:	d115      	bne.n	800e992 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e966:	462b      	mov	r3, r5
 800e968:	e01b      	b.n	800e9a2 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e96a:	4686      	mov	lr, r0
 800e96c:	e027      	b.n	800e9be <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 800e96e:	4673      	mov	r3, lr
 800e970:	f806 cb01 	strb.w	ip, [r6], #1
 800e974:	3401      	adds	r4, #1
 800e976:	3301      	adds	r3, #1
 800e978:	e79c      	b.n	800e8b4 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 800e97a:	4620      	mov	r0, r4
 800e97c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e980:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e984:	e7fa      	b.n	800e97c <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 800e986:	4630      	mov	r0, r6
 800e988:	f800 7b01 	strb.w	r7, [r0], #1
 800e98c:	469e      	mov	lr, r3
 800e98e:	4606      	mov	r6, r0
 800e990:	3401      	adds	r4, #1
 800e992:	4571      	cmp	r1, lr
 800e994:	462b      	mov	r3, r5
 800e996:	7828      	ldrb	r0, [r5, #0]
 800e998:	f10e 0e01 	add.w	lr, lr, #1
 800e99c:	f105 0501 	add.w	r5, r5, #1
 800e9a0:	d8df      	bhi.n	800e962 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 800e9a2:	781d      	ldrb	r5, [r3, #0]
 800e9a4:	461a      	mov	r2, r3
 800e9a6:	2d2f      	cmp	r5, #47	; 0x2f
 800e9a8:	4670      	mov	r0, lr
 800e9aa:	f103 0301 	add.w	r3, r3, #1
 800e9ae:	f10e 0e01 	add.w	lr, lr, #1
 800e9b2:	d8da      	bhi.n	800e96a <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 800e9b4:	4281      	cmp	r1, r0
 800e9b6:	d8f4      	bhi.n	800e9a2 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e9b8:	2d22      	cmp	r5, #34	; 0x22
 800e9ba:	bf08      	it	eq
 800e9bc:	461a      	moveq	r2, r3
 800e9be:	4610      	mov	r0, r2
 800e9c0:	f810 5b01 	ldrb.w	r5, [r0], #1
 800e9c4:	f10e 0301 	add.w	r3, lr, #1
 800e9c8:	2d22      	cmp	r5, #34	; 0x22
 800e9ca:	d0d0      	beq.n	800e96e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e9cc:	2d2c      	cmp	r5, #44	; 0x2c
 800e9ce:	d0ce      	beq.n	800e96e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e9d0:	2d7d      	cmp	r5, #125	; 0x7d
 800e9d2:	d0cc      	beq.n	800e96e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e9d4:	4571      	cmp	r1, lr
 800e9d6:	d9ce      	bls.n	800e976 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 800e9d8:	f1a5 0e20 	sub.w	lr, r5, #32
 800e9dc:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 800e9e0:	d803      	bhi.n	800e9ea <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 800e9e2:	4602      	mov	r2, r0
 800e9e4:	f806 5b01 	strb.w	r5, [r6], #1
 800e9e8:	3401      	adds	r4, #1
 800e9ea:	469e      	mov	lr, r3
 800e9ec:	e7e7      	b.n	800e9be <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

0800e9f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e9f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e9f4:	6002      	str	r2, [r0, #0]
 800e9f6:	4614      	mov	r4, r2
 800e9f8:	2200      	movs	r2, #0
 800e9fa:	4606      	mov	r6, r0
 800e9fc:	460f      	mov	r7, r1
 800e9fe:	80c2      	strh	r2, [r0, #6]
 800ea00:	4a1b      	ldr	r2, [pc, #108]	; (800ea70 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800ea02:	8083      	strh	r3, [r0, #4]
 800ea04:	7810      	ldrb	r0, [r2, #0]
 800ea06:	f000 0001 	and.w	r0, r0, #1
 800ea0a:	7230      	strb	r0, [r6, #8]
 800ea0c:	463d      	mov	r5, r7
 800ea0e:	782a      	ldrb	r2, [r5, #0]
 800ea10:	3701      	adds	r7, #1
 800ea12:	2a00      	cmp	r2, #0
 800ea14:	d1fa      	bne.n	800ea0c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800ea16:	1a6d      	subs	r5, r5, r1
 800ea18:	b29b      	uxth	r3, r3
 800ea1a:	b1d0      	cbz	r0, 800ea52 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800ea1c:	1d2f      	adds	r7, r5, #4
 800ea1e:	429f      	cmp	r7, r3
 800ea20:	d814      	bhi.n	800ea4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ea22:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800ea26:	f04f 0922 	mov.w	r9, #34	; 0x22
 800ea2a:	462a      	mov	r2, r5
 800ea2c:	f884 8000 	strb.w	r8, [r4]
 800ea30:	f884 9001 	strb.w	r9, [r4, #1]
 800ea34:	1ca0      	adds	r0, r4, #2
 800ea36:	f000 fe6c 	bl	800f712 <memmove>
 800ea3a:	223a      	movs	r2, #58	; 0x3a
 800ea3c:	1963      	adds	r3, r4, r5
 800ea3e:	3505      	adds	r5, #5
 800ea40:	f883 9002 	strb.w	r9, [r3, #2]
 800ea44:	70da      	strb	r2, [r3, #3]
 800ea46:	80f5      	strh	r5, [r6, #6]
 800ea48:	f804 8007 	strb.w	r8, [r4, r7]
 800ea4c:	4630      	mov	r0, r6
 800ea4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ea52:	1caf      	adds	r7, r5, #2
 800ea54:	429f      	cmp	r7, r3
 800ea56:	d8f9      	bhi.n	800ea4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ea58:	4620      	mov	r0, r4
 800ea5a:	2323      	movs	r3, #35	; 0x23
 800ea5c:	462a      	mov	r2, r5
 800ea5e:	f800 3b01 	strb.w	r3, [r0], #1
 800ea62:	f000 fe56 	bl	800f712 <memmove>
 800ea66:	230a      	movs	r3, #10
 800ea68:	442c      	add	r4, r5
 800ea6a:	7063      	strb	r3, [r4, #1]
 800ea6c:	80f7      	strh	r7, [r6, #6]
 800ea6e:	e7ed      	b.n	800ea4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ea70:	20009ac8 	andcs	r9, r0, r8, asr #21

0800ea74 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800ea74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea76:	469c      	mov	ip, r3
 800ea78:	8885      	ldrh	r5, [r0, #4]
 800ea7a:	88c3      	ldrh	r3, [r0, #6]
 800ea7c:	b085      	sub	sp, #20
 800ea7e:	42ab      	cmp	r3, r5
 800ea80:	d302      	bcc.n	800ea88 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800ea82:	2000      	movs	r0, #0
 800ea84:	b005      	add	sp, #20
 800ea86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ea88:	4604      	mov	r4, r0
 800ea8a:	6800      	ldr	r0, [r0, #0]
 800ea8c:	1aed      	subs	r5, r5, r3
 800ea8e:	4418      	add	r0, r3
 800ea90:	b2d6      	uxtb	r6, r2
 800ea92:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800ea96:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800ea9a:	f894 e008 	ldrb.w	lr, [r4, #8]
 800ea9e:	0e12      	lsrs	r2, r2, #24
 800eaa0:	f1bc 0f00 	cmp.w	ip, #0
 800eaa4:	d109      	bne.n	800eaba <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800eaa6:	f1be 0f00 	cmp.w	lr, #0
 800eaaa:	d109      	bne.n	800eac0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800eaac:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eab0:	e9cd 6700 	strd	r6, r7, [sp]
 800eab4:	460b      	mov	r3, r1
 800eab6:	4a0e      	ldr	r2, [pc, #56]	; (800eaf0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800eab8:	e008      	b.n	800eacc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800eaba:	f1be 0f00 	cmp.w	lr, #0
 800eabe:	d00f      	beq.n	800eae0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800eac0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eac4:	460b      	mov	r3, r1
 800eac6:	e9cd 6700 	strd	r6, r7, [sp]
 800eaca:	4a0a      	ldr	r2, [pc, #40]	; (800eaf4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800eacc:	4629      	mov	r1, r5
 800eace:	f001 f881 	bl	800fbd4 <snprintf>
 800ead2:	4285      	cmp	r5, r0
 800ead4:	dbd5      	blt.n	800ea82 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800ead6:	88e3      	ldrh	r3, [r4, #6]
 800ead8:	4403      	add	r3, r0
 800eada:	80e3      	strh	r3, [r4, #6]
 800eadc:	2001      	movs	r0, #1
 800eade:	e7d1      	b.n	800ea84 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800eae0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eae4:	e9cd 6700 	strd	r6, r7, [sp]
 800eae8:	460b      	mov	r3, r1
 800eaea:	4a03      	ldr	r2, [pc, #12]	; (800eaf8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800eaec:	e7ee      	b.n	800eacc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800eaee:	bf00      	nop
 800eaf0:	08013363 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, ip, sp}
 800eaf4:	0801334f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, ip, sp}
 800eaf8:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}

0800eafc <PropertiesBuilder::AddComment(char const*)>:
 800eafc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eafe:	7a06      	ldrb	r6, [r0, #8]
 800eb00:	b996      	cbnz	r6, 800eb28 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800eb02:	4604      	mov	r4, r0
 800eb04:	88c0      	ldrh	r0, [r0, #6]
 800eb06:	88a5      	ldrh	r5, [r4, #4]
 800eb08:	42a8      	cmp	r0, r5
 800eb0a:	d20d      	bcs.n	800eb28 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800eb0c:	6827      	ldr	r7, [r4, #0]
 800eb0e:	1a2d      	subs	r5, r5, r0
 800eb10:	460b      	mov	r3, r1
 800eb12:	4a06      	ldr	r2, [pc, #24]	; (800eb2c <PropertiesBuilder::AddComment(char const*)+0x30>)
 800eb14:	4629      	mov	r1, r5
 800eb16:	4438      	add	r0, r7
 800eb18:	f001 f85c 	bl	800fbd4 <snprintf>
 800eb1c:	4285      	cmp	r5, r0
 800eb1e:	bfa1      	itttt	ge
 800eb20:	2601      	movge	r6, #1
 800eb22:	88e3      	ldrhge	r3, [r4, #6]
 800eb24:	18c0      	addge	r0, r0, r3
 800eb26:	80e0      	strhge	r0, [r4, #6]
 800eb28:	4630      	mov	r0, r6
 800eb2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eb2c:	08013374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, ip, sp}

0800eb30 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800eb30:	e9c0 1200 	strd	r1, r2, [r0]
 800eb34:	4770      	bx	lr

0800eb36 <ReadConfigFile::~ReadConfigFile()>:
 800eb36:	4770      	bx	lr

0800eb38 <ReadConfigFile::Read(char const*, unsigned int)>:
 800eb38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb3c:	4606      	mov	r6, r0
 800eb3e:	460d      	mov	r5, r1
 800eb40:	4614      	mov	r4, r2
 800eb42:	f04f 0800 	mov.w	r8, #0
 800eb46:	b090      	sub	sp, #64	; 0x40
 800eb48:	b33c      	cbz	r4, 800eb9a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800eb4a:	466b      	mov	r3, sp
 800eb4c:	462a      	mov	r2, r5
 800eb4e:	4619      	mov	r1, r3
 800eb50:	7817      	ldrb	r7, [r2, #0]
 800eb52:	4610      	mov	r0, r2
 800eb54:	2f0d      	cmp	r7, #13
 800eb56:	f102 0201 	add.w	r2, r2, #1
 800eb5a:	d013      	beq.n	800eb84 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800eb5c:	2f0a      	cmp	r7, #10
 800eb5e:	d011      	beq.n	800eb84 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800eb60:	f803 7b01 	strb.w	r7, [r3], #1
 800eb64:	1a58      	subs	r0, r3, r1
 800eb66:	283f      	cmp	r0, #63	; 0x3f
 800eb68:	4615      	mov	r5, r2
 800eb6a:	dc16      	bgt.n	800eb9a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800eb6c:	3c01      	subs	r4, #1
 800eb6e:	d1ef      	bne.n	800eb50 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 800eb70:	f89d 2000 	ldrb.w	r2, [sp]
 800eb74:	2a60      	cmp	r2, #96	; 0x60
 800eb76:	d9e7      	bls.n	800eb48 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800eb78:	f883 8000 	strb.w	r8, [r3]
 800eb7c:	e9d6 3000 	ldrd	r3, r0, [r6]
 800eb80:	4798      	blx	r3
 800eb82:	e7e1      	b.n	800eb48 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800eb84:	4605      	mov	r5, r0
 800eb86:	2c00      	cmp	r4, #0
 800eb88:	d0f2      	beq.n	800eb70 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800eb8a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eb8e:	2a0d      	cmp	r2, #13
 800eb90:	d001      	beq.n	800eb96 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800eb92:	2a0a      	cmp	r2, #10
 800eb94:	d1ec      	bne.n	800eb70 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800eb96:	3c01      	subs	r4, #1
 800eb98:	e7f4      	b.n	800eb84 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800eb9a:	b010      	add	sp, #64	; 0x40
 800eb9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eba0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800eba0:	b570      	push	{r4, r5, r6, lr}
 800eba2:	4615      	mov	r5, r2
 800eba4:	461c      	mov	r4, r3
 800eba6:	f000 f88f 	bl	800ecc8 <Sscan::checkName(char const*, char const*)>
 800ebaa:	b160      	cbz	r0, 800ebc6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 800ebac:	2100      	movs	r1, #0
 800ebae:	5c43      	ldrb	r3, [r0, r1]
 800ebb0:	6826      	ldr	r6, [r4, #0]
 800ebb2:	b28a      	uxth	r2, r1
 800ebb4:	b123      	cbz	r3, 800ebc0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ebb6:	42b2      	cmp	r2, r6
 800ebb8:	d207      	bcs.n	800ebca <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 800ebba:	546b      	strb	r3, [r5, r1]
 800ebbc:	3101      	adds	r1, #1
 800ebbe:	e7f6      	b.n	800ebae <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800ebc0:	2000      	movs	r0, #0
 800ebc2:	6022      	str	r2, [r4, #0]
 800ebc4:	bd70      	pop	{r4, r5, r6, pc}
 800ebc6:	2001      	movs	r0, #1
 800ebc8:	e7fc      	b.n	800ebc4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 800ebca:	2b0a      	cmp	r3, #10
 800ebcc:	d0f8      	beq.n	800ebc0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ebce:	2002      	movs	r0, #2
 800ebd0:	e7f8      	b.n	800ebc4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0800ebd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800ebd2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ebd4:	4615      	mov	r5, r2
 800ebd6:	f000 f877 	bl	800ecc8 <Sscan::checkName(char const*, char const*)>
 800ebda:	b3c0      	cbz	r0, 800ec4e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 800ebdc:	2400      	movs	r4, #0
 800ebde:	270a      	movs	r7, #10
 800ebe0:	ae01      	add	r6, sp, #4
 800ebe2:	4603      	mov	r3, r0
 800ebe4:	2100      	movs	r1, #0
 800ebe6:	f100 0c04 	add.w	ip, r0, #4
 800ebea:	4618      	mov	r0, r3
 800ebec:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ebf0:	2a2e      	cmp	r2, #46	; 0x2e
 800ebf2:	d00e      	beq.n	800ec12 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800ebf4:	b16a      	cbz	r2, 800ec12 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800ebf6:	4560      	cmp	r0, ip
 800ebf8:	d102      	bne.n	800ec00 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 800ebfa:	2002      	movs	r0, #2
 800ebfc:	b003      	add	sp, #12
 800ebfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec00:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ec04:	2b09      	cmp	r3, #9
 800ec06:	d8f8      	bhi.n	800ebfa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ec08:	fb07 2101 	mla	r1, r7, r1, r2
 800ec0c:	4603      	mov	r3, r0
 800ec0e:	3930      	subs	r1, #48	; 0x30
 800ec10:	e7eb      	b.n	800ebea <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 800ec12:	29ff      	cmp	r1, #255	; 0xff
 800ec14:	d8f1      	bhi.n	800ebfa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ec16:	3401      	adds	r4, #1
 800ec18:	2c03      	cmp	r4, #3
 800ec1a:	f806 1b01 	strb.w	r1, [r6], #1
 800ec1e:	d1e0      	bne.n	800ebe2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 800ec20:	2400      	movs	r4, #0
 800ec22:	220a      	movs	r2, #10
 800ec24:	1d1e      	adds	r6, r3, #4
 800ec26:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ec2a:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800ec2e:	d007      	beq.n	800ec40 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 800ec30:	429e      	cmp	r6, r3
 800ec32:	d0e2      	beq.n	800ebfa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ec34:	3930      	subs	r1, #48	; 0x30
 800ec36:	2909      	cmp	r1, #9
 800ec38:	d8df      	bhi.n	800ebfa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ec3a:	fb02 1404 	mla	r4, r2, r4, r1
 800ec3e:	e7f2      	b.n	800ec26 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800ec40:	2cff      	cmp	r4, #255	; 0xff
 800ec42:	d8da      	bhi.n	800ebfa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ec44:	f88d 4007 	strb.w	r4, [sp, #7]
 800ec48:	9b01      	ldr	r3, [sp, #4]
 800ec4a:	602b      	str	r3, [r5, #0]
 800ec4c:	e7d6      	b.n	800ebfc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 800ec4e:	2001      	movs	r0, #1
 800ec50:	e7d4      	b.n	800ebfc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

0800ec52 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800ec52:	b538      	push	{r3, r4, r5, lr}
 800ec54:	4615      	mov	r5, r2
 800ec56:	f000 f837 	bl	800ecc8 <Sscan::checkName(char const*, char const*)>
 800ec5a:	b1a0      	cbz	r0, 800ec86 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800ec5c:	4604      	mov	r4, r0
 800ec5e:	2100      	movs	r1, #0
 800ec60:	220a      	movs	r2, #10
 800ec62:	7823      	ldrb	r3, [r4, #0]
 800ec64:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ec68:	2809      	cmp	r0, #9
 800ec6a:	d80e      	bhi.n	800ec8a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ec6c:	fb02 3101 	mla	r1, r2, r1, r3
 800ec70:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ec74:	3930      	subs	r1, #48	; 0x30
 800ec76:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ec7a:	d1f2      	bne.n	800ec62 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800ec7c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ec80:	d203      	bcs.n	800ec8a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ec82:	8029      	strh	r1, [r5, #0]
 800ec84:	bd38      	pop	{r3, r4, r5, pc}
 800ec86:	2001      	movs	r0, #1
 800ec88:	e7fc      	b.n	800ec84 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800ec8a:	2002      	movs	r0, #2
 800ec8c:	e7fa      	b.n	800ec84 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800ec8e <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800ec8e:	b538      	push	{r3, r4, r5, lr}
 800ec90:	4615      	mov	r5, r2
 800ec92:	f000 f819 	bl	800ecc8 <Sscan::checkName(char const*, char const*)>
 800ec96:	b198      	cbz	r0, 800ecc0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ec98:	4604      	mov	r4, r0
 800ec9a:	2100      	movs	r1, #0
 800ec9c:	220a      	movs	r2, #10
 800ec9e:	7823      	ldrb	r3, [r4, #0]
 800eca0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800eca4:	2809      	cmp	r0, #9
 800eca6:	d80d      	bhi.n	800ecc4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800eca8:	fb02 3101 	mla	r1, r2, r1, r3
 800ecac:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ecb0:	3930      	subs	r1, #48	; 0x30
 800ecb2:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ecb6:	d1f2      	bne.n	800ec9e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800ecb8:	29ff      	cmp	r1, #255	; 0xff
 800ecba:	d803      	bhi.n	800ecc4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ecbc:	7029      	strb	r1, [r5, #0]
 800ecbe:	bd38      	pop	{r3, r4, r5, pc}
 800ecc0:	2001      	movs	r0, #1
 800ecc2:	e7fc      	b.n	800ecbe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800ecc4:	2002      	movs	r0, #2
 800ecc6:	e7fa      	b.n	800ecbe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800ecc8 <Sscan::checkName(char const*, char const*)>:
 800ecc8:	4603      	mov	r3, r0
 800ecca:	b510      	push	{r4, lr}
 800eccc:	3901      	subs	r1, #1
 800ecce:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ecd2:	461c      	mov	r4, r3
 800ecd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ecd8:	b120      	cbz	r0, 800ece4 <Sscan::checkName(char const*, char const*)+0x1c>
 800ecda:	b10a      	cbz	r2, 800ece0 <Sscan::checkName(char const*, char const*)+0x18>
 800ecdc:	4290      	cmp	r0, r2
 800ecde:	d0f6      	beq.n	800ecce <Sscan::checkName(char const*, char const*)+0x6>
 800ece0:	2000      	movs	r0, #0
 800ece2:	e006      	b.n	800ecf2 <Sscan::checkName(char const*, char const*)+0x2a>
 800ece4:	2a3d      	cmp	r2, #61	; 0x3d
 800ece6:	d104      	bne.n	800ecf2 <Sscan::checkName(char const*, char const*)+0x2a>
 800ece8:	7860      	ldrb	r0, [r4, #1]
 800ecea:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800ecee:	d000      	beq.n	800ecf2 <Sscan::checkName(char const*, char const*)+0x2a>
 800ecf0:	1c60      	adds	r0, r4, #1
 800ecf2:	bd10      	pop	{r4, pc}

0800ecf4 <LightSet::GetDmxStartAddress()>:
 800ecf4:	2001      	movs	r0, #1
 800ecf6:	4770      	bx	lr

0800ecf8 <LightSet::GetDmxFootprint()>:
 800ecf8:	f44f 7000 	mov.w	r0, #512	; 0x200
 800ecfc:	4770      	bx	lr

0800ecfe <LightSet::SetDmxStartAddress(unsigned short)>:
 800ecfe:	2000      	movs	r0, #0
 800ed00:	4770      	bx	lr

0800ed02 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800ed02:	2300      	movs	r3, #0
 800ed04:	2001      	movs	r0, #1
 800ed06:	7093      	strb	r3, [r2, #2]
 800ed08:	8010      	strh	r0, [r2, #0]
 800ed0a:	4770      	bx	lr

0800ed0c <Display::PrintInfo() [clone .isra.0]>:
 800ed0c:	b910      	cbnz	r0, 800ed14 <Display::PrintInfo() [clone .isra.0]+0x8>
 800ed0e:	4803      	ldr	r0, [pc, #12]	; (800ed1c <Display::PrintInfo() [clone .isra.0]+0x10>)
 800ed10:	f000 bf88 	b.w	800fc24 <puts>
 800ed14:	6803      	ldr	r3, [r0, #0]
 800ed16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ed18:	4718      	bx	r3
 800ed1a:	bf00      	nop
 800ed1c:	08013467 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, ip, sp}

0800ed20 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800ed20:	b513      	push	{r0, r1, r4, lr}
 800ed22:	4604      	mov	r4, r0
 800ed24:	0a13      	lsrs	r3, r2, #8
 800ed26:	7800      	ldrb	r0, [r0, #0]
 800ed28:	f88d 1004 	strb.w	r1, [sp, #4]
 800ed2c:	f88d 3005 	strb.w	r3, [sp, #5]
 800ed30:	f88d 2006 	strb.w	r2, [sp, #6]
 800ed34:	f001 ff4c 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800ed38:	6860      	ldr	r0, [r4, #4]
 800ed3a:	f001 ff41 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 800ed3e:	2103      	movs	r1, #3
 800ed40:	a801      	add	r0, sp, #4
 800ed42:	f001 ff4b 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800ed46:	b002      	add	sp, #8
 800ed48:	bd10      	pop	{r4, pc}

0800ed4a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800ed4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ed4c:	460d      	mov	r5, r1
 800ed4e:	4604      	mov	r4, r0
 800ed50:	f001 ff3e 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800ed54:	4628      	mov	r0, r5
 800ed56:	f001 ff33 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 800ed5a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ed5e:	2b07      	cmp	r3, #7
 800ed60:	d902      	bls.n	800ed68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800ed62:	3c50      	subs	r4, #80	; 0x50
 800ed64:	2c0f      	cmp	r4, #15
 800ed66:	d809      	bhi.n	800ed7c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800ed68:	2101      	movs	r1, #1
 800ed6a:	f10d 0007 	add.w	r0, sp, #7
 800ed6e:	f001 ff9b 	bl	8010ca8 <gd32_i2c_read(char*, unsigned int)>
 800ed72:	fab0 f080 	clz	r0, r0
 800ed76:	0940      	lsrs	r0, r0, #5
 800ed78:	b003      	add	sp, #12
 800ed7a:	bd30      	pop	{r4, r5, pc}
 800ed7c:	2100      	movs	r1, #0
 800ed7e:	4608      	mov	r0, r1
 800ed80:	f001 ff2c 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800ed84:	e7f5      	b.n	800ed72 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800ed86 <Display::Detect7Segment()>:
 800ed86:	b538      	push	{r3, r4, r5, lr}
 800ed88:	68c1      	ldr	r1, [r0, #12]
 800ed8a:	4604      	mov	r4, r0
 800ed8c:	7a00      	ldrb	r0, [r0, #8]
 800ed8e:	f7ff ffdc 	bl	800ed4a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800ed92:	7460      	strb	r0, [r4, #17]
 800ed94:	b170      	cbz	r0, 800edb4 <Display::Detect7Segment()+0x2e>
 800ed96:	2200      	movs	r2, #0
 800ed98:	f104 0508 	add.w	r5, r4, #8
 800ed9c:	4611      	mov	r1, r2
 800ed9e:	4628      	mov	r0, r5
 800eda0:	f7ff ffbe 	bl	800ed20 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800eda4:	7c63      	ldrb	r3, [r4, #17]
 800eda6:	b12b      	cbz	r3, 800edb4 <Display::Detect7Segment()+0x2e>
 800eda8:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800edac:	2112      	movs	r1, #18
 800edae:	4628      	mov	r0, r5
 800edb0:	f7ff ffb6 	bl	800ed20 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800edb4:	bd38      	pop	{r3, r4, r5, pc}

0800edb6 <Display::Detect(display::Type)>:
 800edb6:	2902      	cmp	r1, #2
 800edb8:	b538      	push	{r3, r4, r5, lr}
 800edba:	4604      	mov	r4, r0
 800edbc:	d014      	beq.n	800ede8 <Display::Detect(display::Type)+0x32>
 800edbe:	2904      	cmp	r1, #4
 800edc0:	d01b      	beq.n	800edfa <Display::Detect(display::Type)+0x44>
 800edc2:	69a0      	ldr	r0, [r4, #24]
 800edc4:	b168      	cbz	r0, 800ede2 <Display::Detect(display::Type)+0x2c>
 800edc6:	6803      	ldr	r3, [r0, #0]
 800edc8:	689b      	ldr	r3, [r3, #8]
 800edca:	4798      	blx	r3
 800edcc:	4603      	mov	r3, r0
 800edce:	69a0      	ldr	r0, [r4, #24]
 800edd0:	b9ab      	cbnz	r3, 800edfe <Display::Detect(display::Type)+0x48>
 800edd2:	b110      	cbz	r0, 800edda <Display::Detect(display::Type)+0x24>
 800edd4:	6803      	ldr	r3, [r0, #0]
 800edd6:	685b      	ldr	r3, [r3, #4]
 800edd8:	4798      	blx	r3
 800edda:	2300      	movs	r3, #0
 800eddc:	61a3      	str	r3, [r4, #24]
 800edde:	2304      	movs	r3, #4
 800ede0:	6023      	str	r3, [r4, #0]
 800ede2:	2300      	movs	r3, #0
 800ede4:	6163      	str	r3, [r4, #20]
 800ede6:	e010      	b.n	800ee0a <Display::Detect(display::Type)+0x54>
 800ede8:	2018      	movs	r0, #24
 800edea:	f000 fbd3 	bl	800f594 <operator new(unsigned int)>
 800edee:	4605      	mov	r5, r0
 800edf0:	2100      	movs	r1, #0
 800edf2:	f000 f89b 	bl	800ef2c <Ssd1306::Ssd1306(TOledPanel)>
 800edf6:	61a5      	str	r5, [r4, #24]
 800edf8:	e7e3      	b.n	800edc2 <Display::Detect(display::Type)+0xc>
 800edfa:	6001      	str	r1, [r0, #0]
 800edfc:	e7e1      	b.n	800edc2 <Display::Detect(display::Type)+0xc>
 800edfe:	6803      	ldr	r3, [r0, #0]
 800ee00:	68db      	ldr	r3, [r3, #12]
 800ee02:	4798      	blx	r3
 800ee04:	69a3      	ldr	r3, [r4, #24]
 800ee06:	2b00      	cmp	r3, #0
 800ee08:	d0eb      	beq.n	800ede2 <Display::Detect(display::Type)+0x2c>
 800ee0a:	bd38      	pop	{r3, r4, r5, pc}

0800ee0c <Display::Display()>:
 800ee0c:	2304      	movs	r3, #4
 800ee0e:	b510      	push	{r4, lr}
 800ee10:	6003      	str	r3, [r0, #0]
 800ee12:	4b0d      	ldr	r3, [pc, #52]	; (800ee48 <Display::Display()+0x3c>)
 800ee14:	4604      	mov	r4, r0
 800ee16:	681b      	ldr	r3, [r3, #0]
 800ee18:	4a0c      	ldr	r2, [pc, #48]	; (800ee4c <Display::Display()+0x40>)
 800ee1a:	6043      	str	r3, [r0, #4]
 800ee1c:	2321      	movs	r3, #33	; 0x21
 800ee1e:	7203      	strb	r3, [r0, #8]
 800ee20:	4b0b      	ldr	r3, [pc, #44]	; (800ee50 <Display::Display()+0x44>)
 800ee22:	2102      	movs	r1, #2
 800ee24:	60c3      	str	r3, [r0, #12]
 800ee26:	2300      	movs	r3, #0
 800ee28:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800ee2c:	8203      	strh	r3, [r0, #16]
 800ee2e:	4b09      	ldr	r3, [pc, #36]	; (800ee54 <Display::Display()+0x48>)
 800ee30:	6018      	str	r0, [r3, #0]
 800ee32:	f7ff ffc0 	bl	800edb6 <Display::Detect(display::Type)>
 800ee36:	4620      	mov	r0, r4
 800ee38:	f7ff ffa5 	bl	800ed86 <Display::Detect7Segment()>
 800ee3c:	69a0      	ldr	r0, [r4, #24]
 800ee3e:	f7ff ff65 	bl	800ed0c <Display::PrintInfo() [clone .isra.0]>
 800ee42:	4620      	mov	r0, r4
 800ee44:	bd10      	pop	{r4, pc}
 800ee46:	bf00      	nop
 800ee48:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ee4c:	000493e0 	andeq	r9, r4, r0, ror #7
 800ee50:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ee54:	20009acc 	andcs	r9, r0, ip, asr #21

0800ee58 <Ssd1306::~Ssd1306()>:
 800ee58:	4770      	bx	lr

0800ee5a <Ssd1306::SetCursor(unsigned int)>:
 800ee5a:	4770      	bx	lr

0800ee5c <Ssd1306::PrintInfo()>:
 800ee5c:	b410      	push	{r4}
 800ee5e:	4906      	ldr	r1, [pc, #24]	; (800ee78 <Ssd1306::PrintInfo()+0x1c>)
 800ee60:	7c44      	ldrb	r4, [r0, #17]
 800ee62:	7903      	ldrb	r3, [r0, #4]
 800ee64:	7942      	ldrb	r2, [r0, #5]
 800ee66:	4805      	ldr	r0, [pc, #20]	; (800ee7c <Ssd1306::PrintInfo()+0x20>)
 800ee68:	2c00      	cmp	r4, #0
 800ee6a:	bf08      	it	eq
 800ee6c:	4601      	moveq	r1, r0
 800ee6e:	4804      	ldr	r0, [pc, #16]	; (800ee80 <Ssd1306::PrintInfo()+0x24>)
 800ee70:	bc10      	pop	{r4}
 800ee72:	f000 be87 	b.w	800fb84 <printf>
 800ee76:	bf00      	nop
 800ee78:	08013478 	stmdaeq	r1, {r3, r4, r5, r6, sl, ip, sp}
 800ee7c:	0801347f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, ip, sp}
 800ee80:	08013487 	stmdaeq	r1, {r0, r1, r2, r7, sl, ip, sp}

0800ee84 <Ssd1306::~Ssd1306()>:
 800ee84:	b510      	push	{r4, lr}
 800ee86:	4604      	mov	r4, r0
 800ee88:	f000 fb80 	bl	800f58c <operator delete(void*)>
 800ee8c:	4620      	mov	r0, r4
 800ee8e:	bd10      	pop	{r4, pc}

0800ee90 <HAL_I2C::Setup()>:
 800ee90:	b510      	push	{r4, lr}
 800ee92:	4604      	mov	r4, r0
 800ee94:	7800      	ldrb	r0, [r0, #0]
 800ee96:	f001 fe9b 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800ee9a:	6860      	ldr	r0, [r4, #4]
 800ee9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eea0:	f001 be8e 	b.w	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>

0800eea4 <Ssd1306::PutChar(int)>:
 800eea4:	b510      	push	{r4, lr}
 800eea6:	f1a1 0420 	sub.w	r4, r1, #32
 800eeaa:	2c5f      	cmp	r4, #95	; 0x5f
 800eeac:	bf88      	it	hi
 800eeae:	2400      	movhi	r4, #0
 800eeb0:	3008      	adds	r0, #8
 800eeb2:	f7ff ffed 	bl	800ee90 <HAL_I2C::Setup()>
 800eeb6:	4804      	ldr	r0, [pc, #16]	; (800eec8 <Ssd1306::PutChar(int)+0x24>)
 800eeb8:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800eebc:	4420      	add	r0, r4
 800eebe:	2107      	movs	r1, #7
 800eec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eec4:	f001 be8a 	b.w	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800eec8:	0801349c 	stmdaeq	r1, {r2, r3, r4, r7, sl, ip, sp}

0800eecc <Ssd1306::PutString(char const*)>:
 800eecc:	b538      	push	{r3, r4, r5, lr}
 800eece:	4605      	mov	r5, r0
 800eed0:	1e4c      	subs	r4, r1, #1
 800eed2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800eed6:	b119      	cbz	r1, 800eee0 <Ssd1306::PutString(char const*)+0x14>
 800eed8:	4628      	mov	r0, r5
 800eeda:	f7ff ffe3 	bl	800eea4 <Ssd1306::PutChar(int)>
 800eede:	e7f8      	b.n	800eed2 <Ssd1306::PutString(char const*)+0x6>
 800eee0:	bd38      	pop	{r3, r4, r5, pc}

0800eee2 <Ssd1306::Text(char const*, unsigned int)>:
 800eee2:	b570      	push	{r4, r5, r6, lr}
 800eee4:	7903      	ldrb	r3, [r0, #4]
 800eee6:	4605      	mov	r5, r0
 800eee8:	460c      	mov	r4, r1
 800eeea:	4293      	cmp	r3, r2
 800eeec:	bf94      	ite	ls
 800eeee:	18ce      	addls	r6, r1, r3
 800eef0:	188e      	addhi	r6, r1, r2
 800eef2:	42b4      	cmp	r4, r6
 800eef4:	d005      	beq.n	800ef02 <Ssd1306::Text(char const*, unsigned int)+0x20>
 800eef6:	4628      	mov	r0, r5
 800eef8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800eefc:	f7ff ffd2 	bl	800eea4 <Ssd1306::PutChar(int)>
 800ef00:	e7f7      	b.n	800eef2 <Ssd1306::Text(char const*, unsigned int)+0x10>
 800ef02:	bd70      	pop	{r4, r5, r6, pc}

0800ef04 <Ssd1306::InitMembers()>:
 800ef04:	7c03      	ldrb	r3, [r0, #16]
 800ef06:	b12b      	cbz	r3, 800ef14 <Ssd1306::InitMembers()+0x10>
 800ef08:	3b01      	subs	r3, #1
 800ef0a:	2b01      	cmp	r3, #1
 800ef0c:	d908      	bls.n	800ef20 <Ssd1306::InitMembers()+0x1c>
 800ef0e:	f640 0315 	movw	r3, #2069	; 0x815
 800ef12:	e007      	b.n	800ef24 <Ssd1306::InitMembers()+0x20>
 800ef14:	f640 0315 	movw	r3, #2069	; 0x815
 800ef18:	8083      	strh	r3, [r0, #4]
 800ef1a:	2308      	movs	r3, #8
 800ef1c:	6143      	str	r3, [r0, #20]
 800ef1e:	4770      	bx	lr
 800ef20:	f240 4315 	movw	r3, #1045	; 0x415
 800ef24:	8083      	strh	r3, [r0, #4]
 800ef26:	2304      	movs	r3, #4
 800ef28:	e7f8      	b.n	800ef1c <Ssd1306::InitMembers()+0x18>
	...

0800ef2c <Ssd1306::Ssd1306(TOledPanel)>:
 800ef2c:	4a08      	ldr	r2, [pc, #32]	; (800ef50 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800ef2e:	b508      	push	{r3, lr}
 800ef30:	6002      	str	r2, [r0, #0]
 800ef32:	227f      	movs	r2, #127	; 0x7f
 800ef34:	80c2      	strh	r2, [r0, #6]
 800ef36:	223c      	movs	r2, #60	; 0x3c
 800ef38:	7202      	strb	r2, [r0, #8]
 800ef3a:	4a06      	ldr	r2, [pc, #24]	; (800ef54 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800ef3c:	7401      	strb	r1, [r0, #16]
 800ef3e:	60c2      	str	r2, [r0, #12]
 800ef40:	2200      	movs	r2, #0
 800ef42:	7442      	strb	r2, [r0, #17]
 800ef44:	4a04      	ldr	r2, [pc, #16]	; (800ef58 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800ef46:	6010      	str	r0, [r2, #0]
 800ef48:	f7ff ffdc 	bl	800ef04 <Ssd1306::InitMembers()>
 800ef4c:	bd08      	pop	{r3, pc}
 800ef4e:	bf00      	nop
 800ef50:	08013774 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
 800ef54:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ef58:	20009b58 	andcs	r9, r0, r8, asr fp

0800ef5c <Ssd1306::SendCommand(unsigned char)>:
 800ef5c:	2300      	movs	r3, #0
 800ef5e:	b507      	push	{r0, r1, r2, lr}
 800ef60:	3008      	adds	r0, #8
 800ef62:	f88d 3004 	strb.w	r3, [sp, #4]
 800ef66:	f88d 1005 	strb.w	r1, [sp, #5]
 800ef6a:	f7ff ff91 	bl	800ee90 <HAL_I2C::Setup()>
 800ef6e:	2102      	movs	r1, #2
 800ef70:	a801      	add	r0, sp, #4
 800ef72:	f001 fe33 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800ef76:	b003      	add	sp, #12
 800ef78:	f85d fb04 	ldr.w	pc, [sp], #4

0800ef7c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800ef7c:	2914      	cmp	r1, #20
 800ef7e:	b570      	push	{r4, r5, r6, lr}
 800ef80:	4605      	mov	r5, r0
 800ef82:	4616      	mov	r6, r2
 800ef84:	d81c      	bhi.n	800efc0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800ef86:	7943      	ldrb	r3, [r0, #5]
 800ef88:	4293      	cmp	r3, r2
 800ef8a:	d919      	bls.n	800efc0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800ef8c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800ef90:	7c43      	ldrb	r3, [r0, #17]
 800ef92:	004c      	lsls	r4, r1, #1
 800ef94:	b2e4      	uxtb	r4, r4
 800ef96:	b10b      	cbz	r3, 800ef9c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800ef98:	3404      	adds	r4, #4
 800ef9a:	b2e4      	uxtb	r4, r4
 800ef9c:	4628      	mov	r0, r5
 800ef9e:	f004 010e 	and.w	r1, r4, #14
 800efa2:	f7ff ffdb 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800efa6:	0921      	lsrs	r1, r4, #4
 800efa8:	4628      	mov	r0, r5
 800efaa:	f041 0110 	orr.w	r1, r1, #16
 800efae:	f7ff ffd5 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800efb2:	4628      	mov	r0, r5
 800efb4:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800efb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800efbc:	f7ff bfce 	b.w	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800efc0:	bd70      	pop	{r4, r5, r6, pc}

0800efc2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800efc2:	b570      	push	{r4, r5, r6, lr}
 800efc4:	4604      	mov	r4, r0
 800efc6:	4615      	mov	r5, r2
 800efc8:	461e      	mov	r6, r3
 800efca:	b171      	cbz	r1, 800efea <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800efcc:	7943      	ldrb	r3, [r0, #5]
 800efce:	428b      	cmp	r3, r1
 800efd0:	d30b      	bcc.n	800efea <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800efd2:	3901      	subs	r1, #1
 800efd4:	b2ca      	uxtb	r2, r1
 800efd6:	2100      	movs	r1, #0
 800efd8:	f7ff ffd0 	bl	800ef7c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800efdc:	4632      	mov	r2, r6
 800efde:	4629      	mov	r1, r5
 800efe0:	4620      	mov	r0, r4
 800efe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800efe6:	f7ff bf7c 	b.w	800eee2 <Ssd1306::Text(char const*, unsigned int)>
 800efea:	bd70      	pop	{r4, r5, r6, pc}

0800efec <Ssd1306::ClearLine(unsigned char)>:
 800efec:	b538      	push	{r3, r4, r5, lr}
 800efee:	4605      	mov	r5, r0
 800eff0:	b1b9      	cbz	r1, 800f022 <Ssd1306::ClearLine(unsigned char)+0x36>
 800eff2:	7943      	ldrb	r3, [r0, #5]
 800eff4:	428b      	cmp	r3, r1
 800eff6:	d314      	bcc.n	800f022 <Ssd1306::ClearLine(unsigned char)+0x36>
 800eff8:	3901      	subs	r1, #1
 800effa:	b2cc      	uxtb	r4, r1
 800effc:	4622      	mov	r2, r4
 800effe:	2100      	movs	r1, #0
 800f000:	f7ff ffbc 	bl	800ef7c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f004:	f105 0008 	add.w	r0, r5, #8
 800f008:	f7ff ff42 	bl	800ee90 <HAL_I2C::Setup()>
 800f00c:	2181      	movs	r1, #129	; 0x81
 800f00e:	4805      	ldr	r0, [pc, #20]	; (800f024 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800f010:	f001 fde4 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800f014:	4622      	mov	r2, r4
 800f016:	4628      	mov	r0, r5
 800f018:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f01c:	2100      	movs	r1, #0
 800f01e:	f7ff bfad 	b.w	800ef7c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f022:	bd38      	pop	{r3, r4, r5, pc}
 800f024:	20009ad0 	ldrdcs	r9, [r0], -r0

0800f028 <Ssd1306::SetSleep(bool)>:
 800f028:	b111      	cbz	r1, 800f030 <Ssd1306::SetSleep(bool)+0x8>
 800f02a:	21ae      	movs	r1, #174	; 0xae
 800f02c:	f7ff bf96 	b.w	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f030:	21af      	movs	r1, #175	; 0xaf
 800f032:	e7fb      	b.n	800f02c <Ssd1306::SetSleep(bool)+0x4>

0800f034 <Ssd1306::SetContrast(unsigned char)>:
 800f034:	b538      	push	{r3, r4, r5, lr}
 800f036:	4604      	mov	r4, r0
 800f038:	460d      	mov	r5, r1
 800f03a:	7181      	strb	r1, [r0, #6]
 800f03c:	2181      	movs	r1, #129	; 0x81
 800f03e:	f7ff ff8d 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f042:	4629      	mov	r1, r5
 800f044:	4620      	mov	r0, r4
 800f046:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f04a:	f7ff bf87 	b.w	800ef5c <Ssd1306::SendCommand(unsigned char)>

0800f04e <Ssd1306::SetFlipVertically(bool)>:
 800f04e:	b510      	push	{r4, lr}
 800f050:	4604      	mov	r4, r0
 800f052:	71c1      	strb	r1, [r0, #7]
 800f054:	b141      	cbz	r1, 800f068 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800f056:	21c0      	movs	r1, #192	; 0xc0
 800f058:	f7ff ff80 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f05c:	21a0      	movs	r1, #160	; 0xa0
 800f05e:	4620      	mov	r0, r4
 800f060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f064:	f7ff bf7a 	b.w	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f068:	21c8      	movs	r1, #200	; 0xc8
 800f06a:	f7ff ff77 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f06e:	21a1      	movs	r1, #161	; 0xa1
 800f070:	e7f5      	b.n	800f05e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800f074 <Ssd1306::CheckSH1106()>:
 800f074:	b570      	push	{r4, r5, r6, lr}
 800f076:	4604      	mov	r4, r0
 800f078:	b086      	sub	sp, #24
 800f07a:	2100      	movs	r1, #0
 800f07c:	f7ff ff6e 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f080:	2190      	movs	r1, #144	; 0x90
 800f082:	4620      	mov	r0, r4
 800f084:	f7ff ff6a 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f088:	21b0      	movs	r1, #176	; 0xb0
 800f08a:	4620      	mov	r0, r4
 800f08c:	f7ff ff66 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f090:	4b22      	ldr	r3, [pc, #136]	; (800f11c <Ssd1306::CheckSH1106()+0xa8>)
 800f092:	f104 0608 	add.w	r6, r4, #8
 800f096:	6818      	ldr	r0, [r3, #0]
 800f098:	791b      	ldrb	r3, [r3, #4]
 800f09a:	ad02      	add	r5, sp, #8
 800f09c:	9002      	str	r0, [sp, #8]
 800f09e:	4630      	mov	r0, r6
 800f0a0:	712b      	strb	r3, [r5, #4]
 800f0a2:	f7ff fef5 	bl	800ee90 <HAL_I2C::Setup()>
 800f0a6:	2105      	movs	r1, #5
 800f0a8:	4628      	mov	r0, r5
 800f0aa:	f001 fd97 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800f0ae:	2100      	movs	r1, #0
 800f0b0:	4620      	mov	r0, r4
 800f0b2:	f7ff ff53 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f0b6:	2190      	movs	r1, #144	; 0x90
 800f0b8:	4620      	mov	r0, r4
 800f0ba:	f7ff ff4f 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f0be:	21b0      	movs	r1, #176	; 0xb0
 800f0c0:	4620      	mov	r0, r4
 800f0c2:	f7ff ff4b 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f0c6:	2300      	movs	r3, #0
 800f0c8:	9304      	str	r3, [sp, #16]
 800f0ca:	f88d 3014 	strb.w	r3, [sp, #20]
 800f0ce:	2340      	movs	r3, #64	; 0x40
 800f0d0:	4630      	mov	r0, r6
 800f0d2:	f88d 3007 	strb.w	r3, [sp, #7]
 800f0d6:	f7ff fedb 	bl	800ee90 <HAL_I2C::Setup()>
 800f0da:	2101      	movs	r1, #1
 800f0dc:	f10d 0007 	add.w	r0, sp, #7
 800f0e0:	f001 fd7c 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800f0e4:	4630      	mov	r0, r6
 800f0e6:	f7ff fed3 	bl	800ee90 <HAL_I2C::Setup()>
 800f0ea:	2105      	movs	r1, #5
 800f0ec:	a804      	add	r0, sp, #16
 800f0ee:	f001 fddb 	bl	8010ca8 <gd32_i2c_read(char*, unsigned int)>
 800f0f2:	2201      	movs	r2, #1
 800f0f4:	5cab      	ldrb	r3, [r5, r2]
 800f0f6:	a904      	add	r1, sp, #16
 800f0f8:	3201      	adds	r2, #1
 800f0fa:	4411      	add	r1, r2
 800f0fc:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800f100:	428b      	cmp	r3, r1
 800f102:	d006      	beq.n	800f112 <Ssd1306::CheckSH1106()+0x9e>
 800f104:	1a5b      	subs	r3, r3, r1
 800f106:	fab3 f383 	clz	r3, r3
 800f10a:	095b      	lsrs	r3, r3, #5
 800f10c:	7463      	strb	r3, [r4, #17]
 800f10e:	b006      	add	sp, #24
 800f110:	bd70      	pop	{r4, r5, r6, pc}
 800f112:	2a05      	cmp	r2, #5
 800f114:	d1ee      	bne.n	800f0f4 <Ssd1306::CheckSH1106()+0x80>
 800f116:	2300      	movs	r3, #0
 800f118:	e7f5      	b.n	800f106 <Ssd1306::CheckSH1106()+0x92>
 800f11a:	bf00      	nop
 800f11c:	08013493 	stmdaeq	r1, {r0, r1, r4, r7, sl, ip, sp}

0800f120 <Ssd1306::Cls()>:
 800f120:	7c43      	ldrb	r3, [r0, #17]
 800f122:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f126:	2b00      	cmp	r3, #0
 800f128:	bf0c      	ite	eq
 800f12a:	2500      	moveq	r5, #0
 800f12c:	2504      	movne	r5, #4
 800f12e:	4604      	mov	r4, r0
 800f130:	2600      	movs	r6, #0
 800f132:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800f136:	f045 0810 	orr.w	r8, r5, #16
 800f13a:	b2ff      	uxtb	r7, r7
 800f13c:	6963      	ldr	r3, [r4, #20]
 800f13e:	4629      	mov	r1, r5
 800f140:	42b3      	cmp	r3, r6
 800f142:	4620      	mov	r0, r4
 800f144:	d91b      	bls.n	800f17e <Ssd1306::Cls()+0x5e>
 800f146:	f7ff ff09 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f14a:	4641      	mov	r1, r8
 800f14c:	4620      	mov	r0, r4
 800f14e:	f7ff ff05 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f152:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800f156:	4620      	mov	r0, r4
 800f158:	b2c9      	uxtb	r1, r1
 800f15a:	f7ff feff 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f15e:	7c23      	ldrb	r3, [r4, #16]
 800f160:	b123      	cbz	r3, 800f16c <Ssd1306::Cls()+0x4c>
 800f162:	3b01      	subs	r3, #1
 800f164:	2b01      	cmp	r3, #1
 800f166:	d901      	bls.n	800f16c <Ssd1306::Cls()+0x4c>
 800f168:	3601      	adds	r6, #1
 800f16a:	e7e7      	b.n	800f13c <Ssd1306::Cls()+0x1c>
 800f16c:	f104 0008 	add.w	r0, r4, #8
 800f170:	f7ff fe8e 	bl	800ee90 <HAL_I2C::Setup()>
 800f174:	4639      	mov	r1, r7
 800f176:	4808      	ldr	r0, [pc, #32]	; (800f198 <Ssd1306::Cls()+0x78>)
 800f178:	f001 fd30 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800f17c:	e7f4      	b.n	800f168 <Ssd1306::Cls()+0x48>
 800f17e:	f7ff feed 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f182:	4641      	mov	r1, r8
 800f184:	4620      	mov	r0, r4
 800f186:	f7ff fee9 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f18a:	4620      	mov	r0, r4
 800f18c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f190:	21b0      	movs	r1, #176	; 0xb0
 800f192:	f7ff bee3 	b.w	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f196:	bf00      	nop
 800f198:	20009ad0 	ldrdcs	r9, [r0], -r0

0800f19c <Ssd1306::Start()>:
 800f19c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f19e:	7a04      	ldrb	r4, [r0, #8]
 800f1a0:	68c6      	ldr	r6, [r0, #12]
 800f1a2:	4605      	mov	r5, r0
 800f1a4:	4620      	mov	r0, r4
 800f1a6:	f001 fd13 	bl	8010bd0 <gd32_i2c_set_address(unsigned char)>
 800f1aa:	4630      	mov	r0, r6
 800f1ac:	f001 fd08 	bl	8010bc0 <gd32_i2c_set_baudrate(unsigned int)>
 800f1b0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f1b4:	2b07      	cmp	r3, #7
 800f1b6:	d902      	bls.n	800f1be <Ssd1306::Start()+0x22>
 800f1b8:	3c50      	subs	r4, #80	; 0x50
 800f1ba:	2c0f      	cmp	r4, #15
 800f1bc:	d80f      	bhi.n	800f1de <Ssd1306::Start()+0x42>
 800f1be:	2101      	movs	r1, #1
 800f1c0:	f10d 0007 	add.w	r0, sp, #7
 800f1c4:	f001 fd70 	bl	8010ca8 <gd32_i2c_read(char*, unsigned int)>
 800f1c8:	fab0 f480 	clz	r4, r0
 800f1cc:	0964      	lsrs	r4, r4, #5
 800f1ce:	b35c      	cbz	r4, 800f228 <Ssd1306::Start()+0x8c>
 800f1d0:	7c2e      	ldrb	r6, [r5, #16]
 800f1d2:	b14e      	cbz	r6, 800f1e8 <Ssd1306::Start()+0x4c>
 800f1d4:	3e01      	subs	r6, #1
 800f1d6:	2e01      	cmp	r6, #1
 800f1d8:	d929      	bls.n	800f22e <Ssd1306::Start()+0x92>
 800f1da:	2400      	movs	r4, #0
 800f1dc:	e024      	b.n	800f228 <Ssd1306::Start()+0x8c>
 800f1de:	2100      	movs	r1, #0
 800f1e0:	4608      	mov	r0, r1
 800f1e2:	f001 fcfb 	bl	8010bdc <gd32_i2c_write(char const*, unsigned int)>
 800f1e6:	e7ef      	b.n	800f1c8 <Ssd1306::Start()+0x2c>
 800f1e8:	4f16      	ldr	r7, [pc, #88]	; (800f244 <Ssd1306::Start()+0xa8>)
 800f1ea:	4628      	mov	r0, r5
 800f1ec:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f1f0:	3601      	adds	r6, #1
 800f1f2:	f7ff feb3 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f1f6:	2e18      	cmp	r6, #24
 800f1f8:	d1f7      	bne.n	800f1ea <Ssd1306::Start()+0x4e>
 800f1fa:	2300      	movs	r3, #0
 800f1fc:	4a12      	ldr	r2, [pc, #72]	; (800f248 <Ssd1306::Start()+0xac>)
 800f1fe:	4618      	mov	r0, r3
 800f200:	4611      	mov	r1, r2
 800f202:	3301      	adds	r3, #1
 800f204:	2b86      	cmp	r3, #134	; 0x86
 800f206:	f802 0b01 	strb.w	r0, [r2], #1
 800f20a:	d1fa      	bne.n	800f202 <Ssd1306::Start()+0x66>
 800f20c:	2340      	movs	r3, #64	; 0x40
 800f20e:	4628      	mov	r0, r5
 800f210:	700b      	strb	r3, [r1, #0]
 800f212:	f7ff ff2f 	bl	800f074 <Ssd1306::CheckSH1106()>
 800f216:	4628      	mov	r0, r5
 800f218:	f7ff ff82 	bl	800f120 <Ssd1306::Cls()>
 800f21c:	21af      	movs	r1, #175	; 0xaf
 800f21e:	4628      	mov	r0, r5
 800f220:	f7ff fe9c 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f224:	2301      	movs	r3, #1
 800f226:	71eb      	strb	r3, [r5, #7]
 800f228:	4620      	mov	r0, r4
 800f22a:	b003      	add	sp, #12
 800f22c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f22e:	2600      	movs	r6, #0
 800f230:	4f06      	ldr	r7, [pc, #24]	; (800f24c <Ssd1306::Start()+0xb0>)
 800f232:	4628      	mov	r0, r5
 800f234:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f238:	3601      	adds	r6, #1
 800f23a:	f7ff fe8f 	bl	800ef5c <Ssd1306::SendCommand(unsigned char)>
 800f23e:	2e18      	cmp	r6, #24
 800f240:	d1f7      	bne.n	800f232 <Ssd1306::Start()+0x96>
 800f242:	e7da      	b.n	800f1fa <Ssd1306::Start()+0x5e>
 800f244:	08013754 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, ip, sp}
 800f248:	20009ad0 	ldrdcs	r9, [r0], -r0
 800f24c:	0801373c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, ip, sp}

0800f250 <console_init>:
 800f250:	b508      	push	{r3, lr}
 800f252:	f000 fdd9 	bl	800fe08 <uart0_init>
 800f256:	4804      	ldr	r0, [pc, #16]	; (800f268 <console_init+0x18>)
 800f258:	f000 fe06 	bl	800fe68 <uart0_puts>
 800f25c:	4803      	ldr	r0, [pc, #12]	; (800f26c <console_init+0x1c>)
 800f25e:	f000 fe03 	bl	800fe68 <uart0_puts>
 800f262:	2000      	movs	r0, #0
 800f264:	bd08      	pop	{r3, pc}
 800f266:	bf00      	nop
 800f268:	08011b00 	stmdaeq	r1, {r8, r9, fp, ip}
 800f26c:	080137ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, ip, sp}

0800f270 <console_putc>:
 800f270:	280a      	cmp	r0, #10
 800f272:	b510      	push	{r4, lr}
 800f274:	4604      	mov	r4, r0
 800f276:	d102      	bne.n	800f27e <console_putc+0xe>
 800f278:	200d      	movs	r0, #13
 800f27a:	f000 fdd5 	bl	800fe28 <uart0_putc>
 800f27e:	4620      	mov	r0, r4
 800f280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f284:	f000 bdd0 	b.w	800fe28 <uart0_putc>

0800f288 <console_puts>:
 800f288:	f000 bdee 	b.w	800fe68 <uart0_puts>

0800f28c <console_set_fg_color>:
 800f28c:	2807      	cmp	r0, #7
 800f28e:	d810      	bhi.n	800f2b2 <console_set_fg_color+0x26>
 800f290:	e8df f000 	tbb	[pc, r0]
 800f294:	0b090704 	bleq	8250eac <__exidx_end+0x23d604>
 800f298:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800f264 <console_init+0x14>
 800f29c:	4806      	ldr	r0, [pc, #24]	; (800f2b8 <console_set_fg_color+0x2c>)
 800f29e:	f000 bde3 	b.w	800fe68 <uart0_puts>
 800f2a2:	4806      	ldr	r0, [pc, #24]	; (800f2bc <console_set_fg_color+0x30>)
 800f2a4:	e7fb      	b.n	800f29e <console_set_fg_color+0x12>
 800f2a6:	4806      	ldr	r0, [pc, #24]	; (800f2c0 <console_set_fg_color+0x34>)
 800f2a8:	e7f9      	b.n	800f29e <console_set_fg_color+0x12>
 800f2aa:	4806      	ldr	r0, [pc, #24]	; (800f2c4 <console_set_fg_color+0x38>)
 800f2ac:	e7f7      	b.n	800f29e <console_set_fg_color+0x12>
 800f2ae:	4806      	ldr	r0, [pc, #24]	; (800f2c8 <console_set_fg_color+0x3c>)
 800f2b0:	e7f5      	b.n	800f29e <console_set_fg_color+0x12>
 800f2b2:	4806      	ldr	r0, [pc, #24]	; (800f2cc <console_set_fg_color+0x40>)
 800f2b4:	e7f3      	b.n	800f29e <console_set_fg_color+0x12>
 800f2b6:	bf00      	nop
 800f2b8:	080137b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, ip, sp}
 800f2bc:	080137b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800f2c0:	080137be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800f2c4:	080137c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, ip, sp}
 800f2c8:	08011b00 	stmdaeq	r1, {r8, r9, fp, ip}
 800f2cc:	080137ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, sl, ip, sp}

0800f2d0 <console_error>:
 800f2d0:	b510      	push	{r4, lr}
 800f2d2:	4604      	mov	r4, r0
 800f2d4:	4805      	ldr	r0, [pc, #20]	; (800f2ec <console_error+0x1c>)
 800f2d6:	f000 fdc7 	bl	800fe68 <uart0_puts>
 800f2da:	4620      	mov	r0, r4
 800f2dc:	f000 fdc4 	bl	800fe68 <uart0_puts>
 800f2e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f2e4:	4802      	ldr	r0, [pc, #8]	; (800f2f0 <console_error+0x20>)
 800f2e6:	f000 bdbf 	b.w	800fe68 <uart0_puts>
 800f2ea:	bf00      	nop
 800f2ec:	080137b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800f2f0:	08011b00 	stmdaeq	r1, {r8, r9, fp, ip}

0800f2f4 <console_status>:
 800f2f4:	b510      	push	{r4, lr}
 800f2f6:	460c      	mov	r4, r1
 800f2f8:	b280      	uxth	r0, r0
 800f2fa:	f7ff ffc7 	bl	800f28c <console_set_fg_color>
 800f2fe:	4807      	ldr	r0, [pc, #28]	; (800f31c <console_status+0x28>)
 800f300:	f000 fdb2 	bl	800fe68 <uart0_puts>
 800f304:	4620      	mov	r0, r4
 800f306:	f000 fdaf 	bl	800fe68 <uart0_puts>
 800f30a:	200a      	movs	r0, #10
 800f30c:	f7ff ffb0 	bl	800f270 <console_putc>
 800f310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f314:	4802      	ldr	r0, [pc, #8]	; (800f320 <console_status+0x2c>)
 800f316:	f000 bda7 	b.w	800fe68 <uart0_puts>
 800f31a:	bf00      	nop
 800f31c:	080137ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, ip, sp}
 800f320:	08011b00 	stmdaeq	r1, {r8, r9, fp, ip}

0800f324 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800f324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f328:	4617      	mov	r7, r2
 800f32a:	461e      	mov	r6, r3
 800f32c:	4d14      	ldr	r5, [pc, #80]	; (800f380 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800f32e:	4b15      	ldr	r3, [pc, #84]	; (800f384 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800f330:	b086      	sub	sp, #24
 800f332:	6018      	str	r0, [r3, #0]
 800f334:	4604      	mov	r4, r0
 800f336:	f105 0803 	add.w	r8, r5, #3
 800f33a:	2203      	movs	r2, #3
 800f33c:	4628      	mov	r0, r5
 800f33e:	f000 f9e8 	bl	800f712 <memmove>
 800f342:	4639      	mov	r1, r7
 800f344:	220b      	movs	r2, #11
 800f346:	4640      	mov	r0, r8
 800f348:	f000 f9e3 	bl	800f712 <memmove>
 800f34c:	f105 030e 	add.w	r3, r5, #14
 800f350:	4631      	mov	r1, r6
 800f352:	2208      	movs	r2, #8
 800f354:	4618      	mov	r0, r3
 800f356:	f000 f9dc 	bl	800f712 <memmove>
 800f35a:	2308      	movs	r3, #8
 800f35c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800f360:	230b      	movs	r3, #11
 800f362:	9302      	str	r3, [sp, #8]
 800f364:	4b08      	ldr	r3, [pc, #32]	; (800f388 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800f366:	9005      	str	r0, [sp, #20]
 800f368:	e9cd 5300 	strd	r5, r3, [sp]
 800f36c:	213f      	movs	r1, #63	; 0x3f
 800f36e:	2303      	movs	r3, #3
 800f370:	4a06      	ldr	r2, [pc, #24]	; (800f38c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800f372:	4807      	ldr	r0, [pc, #28]	; (800f390 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800f374:	f000 fc2e 	bl	800fbd4 <snprintf>
 800f378:	4620      	mov	r0, r4
 800f37a:	b006      	add	sp, #24
 800f37c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f380:	20009b5c 	andcs	r9, r0, ip, asr fp
 800f384:	20009bb4 			; <UNDEFINED> instruction: 0x20009bb4
 800f388:	08011bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip}
 800f38c:	080137d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp}
 800f390:	20009b72 	andcs	r9, r0, r2, ror fp

0800f394 <FirmwareVersion::Print(char const*)>:
 800f394:	b510      	push	{r4, lr}
 800f396:	460c      	mov	r4, r1
 800f398:	4804      	ldr	r0, [pc, #16]	; (800f3ac <FirmwareVersion::Print(char const*)+0x18>)
 800f39a:	f000 fc43 	bl	800fc24 <puts>
 800f39e:	b124      	cbz	r4, 800f3aa <FirmwareVersion::Print(char const*)+0x16>
 800f3a0:	4620      	mov	r0, r4
 800f3a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f3a6:	f000 bc3d 	b.w	800fc24 <puts>
 800f3aa:	bd10      	pop	{r4, pc}
 800f3ac:	20009b72 	andcs	r9, r0, r2, ror fp

0800f3b0 <LedBlink::LedBlink()>:
 800f3b0:	2200      	movs	r2, #0
 800f3b2:	2105      	movs	r1, #5
 800f3b4:	e9c0 2100 	strd	r2, r1, [r0]
 800f3b8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800f3bc:	6082      	str	r2, [r0, #8]
 800f3be:	e9c0 1203 	strd	r1, r2, [r0, #12]
 800f3c2:	6142      	str	r2, [r0, #20]
 800f3c4:	4a01      	ldr	r2, [pc, #4]	; (800f3cc <LedBlink::LedBlink()+0x1c>)
 800f3c6:	6010      	str	r0, [r2, #0]
 800f3c8:	4770      	bx	lr
 800f3ca:	bf00      	nop
 800f3cc:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800f3d0 <LedBlink::SetMode(ledblink::Mode)>:
 800f3d0:	6843      	ldr	r3, [r0, #4]
 800f3d2:	428b      	cmp	r3, r1
 800f3d4:	d02f      	beq.n	800f436 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f3d6:	6041      	str	r1, [r0, #4]
 800f3d8:	2904      	cmp	r1, #4
 800f3da:	d822      	bhi.n	800f422 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800f3dc:	e8df f001 	tbb	[pc, r1]
 800f3e0:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800f3e4:	23ff001d 	mvnscs	r0, #29
 800f3e8:	6003      	str	r3, [r0, #0]
 800f3ea:	2300      	movs	r3, #0
 800f3ec:	2201      	movs	r2, #1
 800f3ee:	60c3      	str	r3, [r0, #12]
 800f3f0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f3f4:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f3f8:	611a      	str	r2, [r3, #16]
 800f3fa:	6880      	ldr	r0, [r0, #8]
 800f3fc:	b1d8      	cbz	r0, 800f436 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f3fe:	6803      	ldr	r3, [r0, #0]
 800f400:	689b      	ldr	r3, [r3, #8]
 800f402:	4718      	bx	r3
 800f404:	2301      	movs	r3, #1
 800f406:	6003      	str	r3, [r0, #0]
 800f408:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f40c:	60c3      	str	r3, [r0, #12]
 800f40e:	e7f4      	b.n	800f3fa <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f410:	2303      	movs	r3, #3
 800f412:	6003      	str	r3, [r0, #0]
 800f414:	f240 134d 	movw	r3, #333	; 0x14d
 800f418:	e7f8      	b.n	800f40c <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f41a:	2305      	movs	r3, #5
 800f41c:	6003      	str	r3, [r0, #0]
 800f41e:	23c8      	movs	r3, #200	; 0xc8
 800f420:	e7f4      	b.n	800f40c <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f422:	2300      	movs	r3, #0
 800f424:	2201      	movs	r2, #1
 800f426:	6003      	str	r3, [r0, #0]
 800f428:	60c3      	str	r3, [r0, #12]
 800f42a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f42e:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f432:	615a      	str	r2, [r3, #20]
 800f434:	e7e1      	b.n	800f3fa <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f436:	4770      	bx	lr

0800f438 <Hardware::Hardware()>:
 800f438:	b570      	push	{r4, r5, r6, lr}
 800f43a:	2400      	movs	r4, #0
 800f43c:	4b24      	ldr	r3, [pc, #144]	; (800f4d0 <Hardware::Hardware()+0x98>)
 800f43e:	4e25      	ldr	r6, [pc, #148]	; (800f4d4 <Hardware::Hardware()+0x9c>)
 800f440:	b090      	sub	sp, #64	; 0x40
 800f442:	4605      	mov	r5, r0
 800f444:	6004      	str	r4, [r0, #0]
 800f446:	7104      	strb	r4, [r0, #4]
 800f448:	6018      	str	r0, [r3, #0]
 800f44a:	f240 6004 	movw	r0, #1540	; 0x604
 800f44e:	f000 ff4d 	bl	80102ec <rcu_periph_clock_enable>
 800f452:	2203      	movs	r2, #3
 800f454:	2110      	movs	r1, #16
 800f456:	4630      	mov	r0, r6
 800f458:	2301      	movs	r3, #1
 800f45a:	f000 feb7 	bl	80101cc <gpio_init>
 800f45e:	2301      	movs	r3, #1
 800f460:	6173      	str	r3, [r6, #20]
 800f462:	f7ff fef5 	bl	800f250 <console_init>
 800f466:	f5a6 3680 	sub.w	r6, r6, #65536	; 0x10000
 800f46a:	f000 fd0d 	bl	800fe88 <systick_config>
 800f46e:	f001 fd8b 	bl	8010f88 <udelay_init()>
 800f472:	f001 fd87 	bl	8010f84 <micros_init()>
 800f476:	f240 7004 	movw	r0, #1796	; 0x704
 800f47a:	f000 ff37 	bl	80102ec <rcu_periph_clock_enable>
 800f47e:	4630      	mov	r0, r6
 800f480:	f001 f880 	bl	8010584 <timer_deinit>
 800f484:	236b      	movs	r3, #107	; 0x6b
 800f486:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f48a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f48e:	a903      	add	r1, sp, #12
 800f490:	4630      	mov	r0, r6
 800f492:	9305      	str	r3, [sp, #20]
 800f494:	f001 f8d8 	bl	8010648 <timer_init>
 800f498:	4630      	mov	r0, r6
 800f49a:	f001 f92d 	bl	80106f8 <timer_enable>
 800f49e:	f001 fb01 	bl	8010aa4 <gd32_adc_init()>
 800f4a2:	230e      	movs	r3, #14
 800f4a4:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 800f4a8:	237a      	movs	r3, #122	; 0x7a
 800f4aa:	a807      	add	r0, sp, #28
 800f4ac:	930c      	str	r3, [sp, #48]	; 0x30
 800f4ae:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800f4b2:	9407      	str	r4, [sp, #28]
 800f4b4:	940f      	str	r4, [sp, #60]	; 0x3c
 800f4b6:	f000 fc0d 	bl	800fcd4 <mktime>
 800f4ba:	4621      	mov	r1, r4
 800f4bc:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800f4c0:	a801      	add	r0, sp, #4
 800f4c2:	f000 fc7d 	bl	800fdc0 <settimeofday>
 800f4c6:	f001 fb47 	bl	8010b58 <gd32_i2c_begin()>
 800f4ca:	4628      	mov	r0, r5
 800f4cc:	b010      	add	sp, #64	; 0x40
 800f4ce:	bd70      	pop	{r4, r5, r6, pc}
 800f4d0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f4d4:	40011000 	andmi	r1, r1, r0

0800f4d8 <Hardware::GetUuid(unsigned char*)>:
 800f4d8:	4a0c      	ldr	r2, [pc, #48]	; (800f50c <Hardware::GetUuid(unsigned char*)+0x34>)
 800f4da:	b084      	sub	sp, #16
 800f4dc:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800f4e0:	9300      	str	r3, [sp, #0]
 800f4e2:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 800f4e6:	9001      	str	r0, [sp, #4]
 800f4e8:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800f4ec:	4403      	add	r3, r0
 800f4ee:	4413      	add	r3, r2
 800f4f0:	9202      	str	r2, [sp, #8]
 800f4f2:	466a      	mov	r2, sp
 800f4f4:	9303      	str	r3, [sp, #12]
 800f4f6:	1e4b      	subs	r3, r1, #1
 800f4f8:	310f      	adds	r1, #15
 800f4fa:	428b      	cmp	r3, r1
 800f4fc:	d004      	beq.n	800f508 <Hardware::GetUuid(unsigned char*)+0x30>
 800f4fe:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f502:	f803 0f01 	strb.w	r0, [r3, #1]!
 800f506:	e7f8      	b.n	800f4fa <Hardware::GetUuid(unsigned char*)+0x22>
 800f508:	b004      	add	sp, #16
 800f50a:	4770      	bx	lr
 800f50c:	1ffff000 	svcne	0x00fff000

0800f510 <Hardware::Reboot()>:
 800f510:	b508      	push	{r3, lr}
 800f512:	6803      	ldr	r3, [r0, #0]
 800f514:	4604      	mov	r4, r0
 800f516:	b153      	cbz	r3, 800f52e <Hardware::Reboot()+0x1e>
 800f518:	2300      	movs	r3, #0
 800f51a:	2104      	movs	r1, #4
 800f51c:	7103      	strb	r3, [r0, #4]
 800f51e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f522:	f000 fe29 	bl	8010178 <fwdgt_config>
 800f526:	6820      	ldr	r0, [r4, #0]
 800f528:	6803      	ldr	r3, [r0, #0]
 800f52a:	689b      	ldr	r3, [r3, #8]
 800f52c:	4798      	blx	r3
 800f52e:	2102      	movs	r1, #2
 800f530:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f534:	f000 fe20 	bl	8010178 <fwdgt_config>
 800f538:	2801      	cmp	r0, #1
 800f53a:	bf0c      	ite	eq
 800f53c:	2301      	moveq	r3, #1
 800f53e:	2300      	movne	r3, #0
 800f540:	7123      	strb	r3, [r4, #4]
 800f542:	d101      	bne.n	800f548 <Hardware::Reboot()+0x38>
 800f544:	f000 fe08 	bl	8010158 <fwdgt_enable>
 800f548:	2208      	movs	r2, #8
 800f54a:	4b0d      	ldr	r3, [pc, #52]	; (800f580 <Hardware::Reboot()+0x70>)
 800f54c:	2501      	movs	r5, #1
 800f54e:	681b      	ldr	r3, [r3, #0]
 800f550:	480c      	ldr	r0, [pc, #48]	; (800f584 <Hardware::Reboot()+0x74>)
 800f552:	601a      	str	r2, [r3, #0]
 800f554:	227d      	movs	r2, #125	; 0x7d
 800f556:	490c      	ldr	r1, [pc, #48]	; (800f588 <Hardware::Reboot()+0x78>)
 800f558:	60da      	str	r2, [r3, #12]
 800f55a:	68dc      	ldr	r4, [r3, #12]
 800f55c:	b904      	cbnz	r4, 800f560 <Hardware::Reboot()+0x50>
 800f55e:	e7fe      	b.n	800f55e <Hardware::Reboot()+0x4e>
 800f560:	6802      	ldr	r2, [r0, #0]
 800f562:	695e      	ldr	r6, [r3, #20]
 800f564:	1b92      	subs	r2, r2, r6
 800f566:	4294      	cmp	r4, r2
 800f568:	d8f8      	bhi.n	800f55c <Hardware::Reboot()+0x4c>
 800f56a:	6802      	ldr	r2, [r0, #0]
 800f56c:	615a      	str	r2, [r3, #20]
 800f56e:	691a      	ldr	r2, [r3, #16]
 800f570:	2a01      	cmp	r2, #1
 800f572:	f082 0401 	eor.w	r4, r2, #1
 800f576:	611c      	str	r4, [r3, #16]
 800f578:	bf14      	ite	ne
 800f57a:	610d      	strne	r5, [r1, #16]
 800f57c:	614a      	streq	r2, [r1, #20]
 800f57e:	e7ec      	b.n	800f55a <Hardware::Reboot()+0x4a>
 800f580:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f584:	20009bd4 	ldrdcs	r9, [r0], -r4
 800f588:	40011000 	andmi	r1, r1, r0

0800f58c <operator delete(void*)>:
 800f58c:	f000 b890 	b.w	800f6b0 <free>

0800f590 <operator delete[](void*)>:
 800f590:	f000 b88e 	b.w	800f6b0 <free>

0800f594 <operator new(unsigned int)>:
 800f594:	f000 b842 	b.w	800f61c <malloc>

0800f598 <operator new[](unsigned int)>:
 800f598:	f000 b840 	b.w	800f61c <malloc>

0800f59c <inet_aton>:
 800f59c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f59e:	f04f 0c0a 	mov.w	ip, #10
 800f5a2:	2500      	movs	r5, #0
 800f5a4:	ae01      	add	r6, sp, #4
 800f5a6:	4603      	mov	r3, r0
 800f5a8:	2200      	movs	r2, #0
 800f5aa:	1d07      	adds	r7, r0, #4
 800f5ac:	e007      	b.n	800f5be <inet_aton+0x22>
 800f5ae:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f5b2:	2b09      	cmp	r3, #9
 800f5b4:	d820      	bhi.n	800f5f8 <inet_aton+0x5c>
 800f5b6:	4603      	mov	r3, r0
 800f5b8:	fb0c 4202 	mla	r2, ip, r2, r4
 800f5bc:	3a30      	subs	r2, #48	; 0x30
 800f5be:	4618      	mov	r0, r3
 800f5c0:	f810 4b01 	ldrb.w	r4, [r0], #1
 800f5c4:	2c2e      	cmp	r4, #46	; 0x2e
 800f5c6:	d111      	bne.n	800f5ec <inet_aton+0x50>
 800f5c8:	3501      	adds	r5, #1
 800f5ca:	2d03      	cmp	r5, #3
 800f5cc:	f806 2b01 	strb.w	r2, [r6], #1
 800f5d0:	d1e9      	bne.n	800f5a6 <inet_aton+0xa>
 800f5d2:	2200      	movs	r2, #0
 800f5d4:	250a      	movs	r5, #10
 800f5d6:	1d1c      	adds	r4, r3, #4
 800f5d8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f5dc:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800f5e0:	d10d      	bne.n	800f5fe <inet_aton+0x62>
 800f5e2:	f88d 2007 	strb.w	r2, [sp, #7]
 800f5e6:	b9b1      	cbnz	r1, 800f616 <inet_aton+0x7a>
 800f5e8:	2001      	movs	r0, #1
 800f5ea:	e006      	b.n	800f5fa <inet_aton+0x5e>
 800f5ec:	2c00      	cmp	r4, #0
 800f5ee:	d0eb      	beq.n	800f5c8 <inet_aton+0x2c>
 800f5f0:	2c0a      	cmp	r4, #10
 800f5f2:	d0e9      	beq.n	800f5c8 <inet_aton+0x2c>
 800f5f4:	42b8      	cmp	r0, r7
 800f5f6:	d1da      	bne.n	800f5ae <inet_aton+0x12>
 800f5f8:	2000      	movs	r0, #0
 800f5fa:	b003      	add	sp, #12
 800f5fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5fe:	280a      	cmp	r0, #10
 800f600:	d0ef      	beq.n	800f5e2 <inet_aton+0x46>
 800f602:	42a3      	cmp	r3, r4
 800f604:	d0f8      	beq.n	800f5f8 <inet_aton+0x5c>
 800f606:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800f60a:	2e09      	cmp	r6, #9
 800f60c:	d8f4      	bhi.n	800f5f8 <inet_aton+0x5c>
 800f60e:	fb05 0202 	mla	r2, r5, r2, r0
 800f612:	3a30      	subs	r2, #48	; 0x30
 800f614:	e7e0      	b.n	800f5d8 <inet_aton+0x3c>
 800f616:	9b01      	ldr	r3, [sp, #4]
 800f618:	600b      	str	r3, [r1, #0]
 800f61a:	e7e5      	b.n	800f5e8 <inet_aton+0x4c>

0800f61c <malloc>:
 800f61c:	b538      	push	{r3, r4, r5, lr}
 800f61e:	4604      	mov	r4, r0
 800f620:	4601      	mov	r1, r0
 800f622:	481c      	ldr	r0, [pc, #112]	; (800f694 <malloc+0x78>)
 800f624:	f000 faae 	bl	800fb84 <printf>
 800f628:	b17c      	cbz	r4, 800f64a <malloc+0x2e>
 800f62a:	4b1b      	ldr	r3, [pc, #108]	; (800f698 <malloc+0x7c>)
 800f62c:	6818      	ldr	r0, [r3, #0]
 800f62e:	b978      	cbnz	r0, 800f650 <malloc+0x34>
 800f630:	4a1a      	ldr	r2, [pc, #104]	; (800f69c <malloc+0x80>)
 800f632:	f104 031b 	add.w	r3, r4, #27
 800f636:	6811      	ldr	r1, [r2, #0]
 800f638:	4819      	ldr	r0, [pc, #100]	; (800f6a0 <malloc+0x84>)
 800f63a:	f023 030f 	bic.w	r3, r3, #15
 800f63e:	440b      	add	r3, r1
 800f640:	4283      	cmp	r3, r0
 800f642:	d921      	bls.n	800f688 <malloc+0x6c>
 800f644:	4817      	ldr	r0, [pc, #92]	; (800f6a4 <malloc+0x88>)
 800f646:	f000 fa9d 	bl	800fb84 <printf>
 800f64a:	2500      	movs	r5, #0
 800f64c:	4628      	mov	r0, r5
 800f64e:	bd38      	pop	{r3, r4, r5, pc}
 800f650:	4284      	cmp	r4, r0
 800f652:	d80a      	bhi.n	800f66a <malloc+0x4e>
 800f654:	685a      	ldr	r2, [r3, #4]
 800f656:	6899      	ldr	r1, [r3, #8]
 800f658:	3201      	adds	r2, #1
 800f65a:	428a      	cmp	r2, r1
 800f65c:	605a      	str	r2, [r3, #4]
 800f65e:	d900      	bls.n	800f662 <malloc+0x46>
 800f660:	609a      	str	r2, [r3, #8]
 800f662:	68d9      	ldr	r1, [r3, #12]
 800f664:	b919      	cbnz	r1, 800f66e <malloc+0x52>
 800f666:	4604      	mov	r4, r0
 800f668:	e7e2      	b.n	800f630 <malloc+0x14>
 800f66a:	3310      	adds	r3, #16
 800f66c:	e7de      	b.n	800f62c <malloc+0x10>
 800f66e:	4604      	mov	r4, r0
 800f670:	688a      	ldr	r2, [r1, #8]
 800f672:	60da      	str	r2, [r3, #12]
 800f674:	2300      	movs	r3, #0
 800f676:	f101 050c 	add.w	r5, r1, #12
 800f67a:	608b      	str	r3, [r1, #8]
 800f67c:	4622      	mov	r2, r4
 800f67e:	462b      	mov	r3, r5
 800f680:	4809      	ldr	r0, [pc, #36]	; (800f6a8 <malloc+0x8c>)
 800f682:	f000 fa7f 	bl	800fb84 <printf>
 800f686:	e7e1      	b.n	800f64c <malloc+0x30>
 800f688:	6013      	str	r3, [r2, #0]
 800f68a:	4b08      	ldr	r3, [pc, #32]	; (800f6ac <malloc+0x90>)
 800f68c:	e9c1 3400 	strd	r3, r4, [r1]
 800f690:	e7f0      	b.n	800f674 <malloc+0x58>
 800f692:	bf00      	nop
 800f694:	080137f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 800f698:	20000024 	andcs	r0, r0, r4, lsr #32
 800f69c:	20000020 	andcs	r0, r0, r0, lsr #32
 800f6a0:	20016800 	andcs	r6, r1, r0, lsl #16
 800f6a4:	08013800 	stmdaeq	r1, {fp, ip, sp}
 800f6a8:	0801381c 	stmdaeq	r1, {r2, r3, r4, fp, ip, sp}
 800f6ac:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800f6b0 <free>:
 800f6b0:	b538      	push	{r3, r4, r5, lr}
 800f6b2:	4604      	mov	r4, r0
 800f6b4:	b1c8      	cbz	r0, 800f6ea <free+0x3a>
 800f6b6:	f1a0 050c 	sub.w	r5, r0, #12
 800f6ba:	4602      	mov	r2, r0
 800f6bc:	4629      	mov	r1, r5
 800f6be:	480c      	ldr	r0, [pc, #48]	; (800f6f0 <free+0x40>)
 800f6c0:	f000 fa60 	bl	800fb84 <printf>
 800f6c4:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800f6c8:	4b0a      	ldr	r3, [pc, #40]	; (800f6f4 <free+0x44>)
 800f6ca:	429a      	cmp	r2, r3
 800f6cc:	d10d      	bne.n	800f6ea <free+0x3a>
 800f6ce:	4b0a      	ldr	r3, [pc, #40]	; (800f6f8 <free+0x48>)
 800f6d0:	681a      	ldr	r2, [r3, #0]
 800f6d2:	b152      	cbz	r2, 800f6ea <free+0x3a>
 800f6d4:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800f6d8:	4291      	cmp	r1, r2
 800f6da:	d107      	bne.n	800f6ec <free+0x3c>
 800f6dc:	68da      	ldr	r2, [r3, #12]
 800f6de:	f844 2c04 	str.w	r2, [r4, #-4]
 800f6e2:	685a      	ldr	r2, [r3, #4]
 800f6e4:	60dd      	str	r5, [r3, #12]
 800f6e6:	3a01      	subs	r2, #1
 800f6e8:	605a      	str	r2, [r3, #4]
 800f6ea:	bd38      	pop	{r3, r4, r5, pc}
 800f6ec:	3310      	adds	r3, #16
 800f6ee:	e7ef      	b.n	800f6d0 <free+0x20>
 800f6f0:	08013847 	stmdaeq	r1, {r0, r1, r2, r6, fp, ip, sp}
 800f6f4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800f6f8:	20000024 	andcs	r0, r0, r4, lsr #32

0800f6fc <memcpy>:
 800f6fc:	b510      	push	{r4, lr}
 800f6fe:	1e43      	subs	r3, r0, #1
 800f700:	440a      	add	r2, r1
 800f702:	4291      	cmp	r1, r2
 800f704:	d100      	bne.n	800f708 <memcpy+0xc>
 800f706:	bd10      	pop	{r4, pc}
 800f708:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f70c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f710:	e7f7      	b.n	800f702 <memcpy+0x6>

0800f712 <memmove>:
 800f712:	4288      	cmp	r0, r1
 800f714:	b510      	push	{r4, lr}
 800f716:	eb01 0302 	add.w	r3, r1, r2
 800f71a:	d208      	bcs.n	800f72e <memmove+0x1c>
 800f71c:	1e42      	subs	r2, r0, #1
 800f71e:	4299      	cmp	r1, r3
 800f720:	d100      	bne.n	800f724 <memmove+0x12>
 800f722:	bd10      	pop	{r4, pc}
 800f724:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f728:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f72c:	e7f7      	b.n	800f71e <memmove+0xc>
 800f72e:	4601      	mov	r1, r0
 800f730:	4402      	add	r2, r0
 800f732:	428a      	cmp	r2, r1
 800f734:	d0f5      	beq.n	800f722 <memmove+0x10>
 800f736:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f73a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f73e:	e7f8      	b.n	800f732 <memmove+0x20>

0800f740 <memset>:
 800f740:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f742:	b1e2      	cbz	r2, 800f77e <memset+0x3e>
 800f744:	4603      	mov	r3, r0
 800f746:	b2c9      	uxtb	r1, r1
 800f748:	075c      	lsls	r4, r3, #29
 800f74a:	d114      	bne.n	800f776 <memset+0x36>
 800f74c:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f750:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f754:	463d      	mov	r5, r7
 800f756:	f022 0407 	bic.w	r4, r2, #7
 800f75a:	08d6      	lsrs	r6, r2, #3
 800f75c:	441c      	add	r4, r3
 800f75e:	42a3      	cmp	r3, r4
 800f760:	d10e      	bne.n	800f780 <memset+0x40>
 800f762:	f06f 0307 	mvn.w	r3, #7
 800f766:	fb03 2206 	mla	r2, r3, r6, r2
 800f76a:	4422      	add	r2, r4
 800f76c:	4294      	cmp	r4, r2
 800f76e:	d006      	beq.n	800f77e <memset+0x3e>
 800f770:	f804 1b01 	strb.w	r1, [r4], #1
 800f774:	e7fa      	b.n	800f76c <memset+0x2c>
 800f776:	3a01      	subs	r2, #1
 800f778:	f803 1b01 	strb.w	r1, [r3], #1
 800f77c:	d1e4      	bne.n	800f748 <memset+0x8>
 800f77e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f780:	f843 7b08 	str.w	r7, [r3], #8
 800f784:	f843 5c04 	str.w	r5, [r3, #-4]
 800f788:	e7e9      	b.n	800f75e <memset+0x1e>
	...

0800f78c <_xputch>:
 800f78c:	4603      	mov	r3, r0
 800f78e:	b410      	push	{r4}
 800f790:	4c08      	ldr	r4, [pc, #32]	; (800f7b4 <_xputch+0x28>)
 800f792:	68da      	ldr	r2, [r3, #12]
 800f794:	4608      	mov	r0, r1
 800f796:	6821      	ldr	r1, [r4, #0]
 800f798:	3201      	adds	r2, #1
 800f79a:	60da      	str	r2, [r3, #12]
 800f79c:	b139      	cbz	r1, 800f7ae <_xputch+0x22>
 800f79e:	691b      	ldr	r3, [r3, #16]
 800f7a0:	429a      	cmp	r2, r3
 800f7a2:	da02      	bge.n	800f7aa <_xputch+0x1e>
 800f7a4:	1c4b      	adds	r3, r1, #1
 800f7a6:	6023      	str	r3, [r4, #0]
 800f7a8:	7008      	strb	r0, [r1, #0]
 800f7aa:	bc10      	pop	{r4}
 800f7ac:	4770      	bx	lr
 800f7ae:	bc10      	pop	{r4}
 800f7b0:	f7ff bd5e 	b.w	800f270 <console_putc>
 800f7b4:	20009bc0 	andcs	r9, r0, r0, asr #23

0800f7b8 <_format_int>:
 800f7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7bc:	461f      	mov	r7, r3
 800f7be:	b091      	sub	sp, #68	; 0x44
 800f7c0:	ea52 0307 	orrs.w	r3, r2, r7
 800f7c4:	4680      	mov	r8, r0
 800f7c6:	4616      	mov	r6, r2
 800f7c8:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800f7cc:	d138      	bne.n	800f840 <_format_int+0x88>
 800f7ce:	2330      	movs	r3, #48	; 0x30
 800f7d0:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800f7d4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f7d8:	f8d8 3000 	ldr.w	r3, [r8]
 800f7dc:	07d8      	lsls	r0, r3, #31
 800f7de:	d508      	bpl.n	800f7f2 <_format_int+0x3a>
 800f7e0:	466a      	mov	r2, sp
 800f7e2:	2030      	movs	r0, #48	; 0x30
 800f7e4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800f7e8:	1b2e      	subs	r6, r5, r4
 800f7ea:	428e      	cmp	r6, r1
 800f7ec:	da01      	bge.n	800f7f2 <_format_int+0x3a>
 800f7ee:	4294      	cmp	r4, r2
 800f7f0:	d843      	bhi.n	800f87a <_format_int+0xc2>
 800f7f2:	0699      	lsls	r1, r3, #26
 800f7f4:	d508      	bpl.n	800f808 <_format_int+0x50>
 800f7f6:	466a      	mov	r2, sp
 800f7f8:	2030      	movs	r0, #48	; 0x30
 800f7fa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f7fe:	1b2e      	subs	r6, r5, r4
 800f800:	428e      	cmp	r6, r1
 800f802:	da01      	bge.n	800f808 <_format_int+0x50>
 800f804:	4294      	cmp	r4, r2
 800f806:	d83b      	bhi.n	800f880 <_format_int+0xc8>
 800f808:	071a      	lsls	r2, r3, #28
 800f80a:	bf44      	itt	mi
 800f80c:	222d      	movmi	r2, #45	; 0x2d
 800f80e:	f804 2901 	strbmi.w	r2, [r4], #-1
 800f812:	065b      	lsls	r3, r3, #25
 800f814:	d408      	bmi.n	800f828 <_format_int+0x70>
 800f816:	466b      	mov	r3, sp
 800f818:	2120      	movs	r1, #32
 800f81a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800f81e:	1b28      	subs	r0, r5, r4
 800f820:	4290      	cmp	r0, r2
 800f822:	da01      	bge.n	800f828 <_format_int+0x70>
 800f824:	429c      	cmp	r4, r3
 800f826:	d82e      	bhi.n	800f886 <_format_int+0xce>
 800f828:	1b2d      	subs	r5, r5, r4
 800f82a:	3401      	adds	r4, #1
 800f82c:	ab10      	add	r3, sp, #64	; 0x40
 800f82e:	429c      	cmp	r4, r3
 800f830:	d32c      	bcc.n	800f88c <_format_int+0xd4>
 800f832:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800f836:	42ab      	cmp	r3, r5
 800f838:	dc2e      	bgt.n	800f898 <_format_int+0xe0>
 800f83a:	b011      	add	sp, #68	; 0x44
 800f83c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f840:	462c      	mov	r4, r5
 800f842:	46eb      	mov	fp, sp
 800f844:	4630      	mov	r0, r6
 800f846:	4639      	mov	r1, r7
 800f848:	220a      	movs	r2, #10
 800f84a:	2300      	movs	r3, #0
 800f84c:	f7f7 fc80 	bl	8007150 <__aeabi_uldivmod>
 800f850:	46b2      	mov	sl, r6
 800f852:	3230      	adds	r2, #48	; 0x30
 800f854:	46b9      	mov	r9, r7
 800f856:	2300      	movs	r3, #0
 800f858:	4630      	mov	r0, r6
 800f85a:	4639      	mov	r1, r7
 800f85c:	f804 2901 	strb.w	r2, [r4], #-1
 800f860:	220a      	movs	r2, #10
 800f862:	f7f7 fc75 	bl	8007150 <__aeabi_uldivmod>
 800f866:	f1ba 0f0a 	cmp.w	sl, #10
 800f86a:	f179 0300 	sbcs.w	r3, r9, #0
 800f86e:	4606      	mov	r6, r0
 800f870:	460f      	mov	r7, r1
 800f872:	d3b1      	bcc.n	800f7d8 <_format_int+0x20>
 800f874:	455c      	cmp	r4, fp
 800f876:	d1e5      	bne.n	800f844 <_format_int+0x8c>
 800f878:	e7ae      	b.n	800f7d8 <_format_int+0x20>
 800f87a:	f804 0901 	strb.w	r0, [r4], #-1
 800f87e:	e7b3      	b.n	800f7e8 <_format_int+0x30>
 800f880:	f804 0901 	strb.w	r0, [r4], #-1
 800f884:	e7bb      	b.n	800f7fe <_format_int+0x46>
 800f886:	f804 1901 	strb.w	r1, [r4], #-1
 800f88a:	e7c8      	b.n	800f81e <_format_int+0x66>
 800f88c:	4640      	mov	r0, r8
 800f88e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f892:	f7ff ff7b 	bl	800f78c <_xputch>
 800f896:	e7c9      	b.n	800f82c <_format_int+0x74>
 800f898:	2120      	movs	r1, #32
 800f89a:	4640      	mov	r0, r8
 800f89c:	f7ff ff76 	bl	800f78c <_xputch>
 800f8a0:	3501      	adds	r5, #1
 800f8a2:	e7c6      	b.n	800f832 <_format_int+0x7a>

0800f8a4 <_format_hex>:
 800f8a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8a6:	b091      	sub	sp, #68	; 0x44
 800f8a8:	4606      	mov	r6, r0
 800f8aa:	6804      	ldr	r4, [r0, #0]
 800f8ac:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800f8b0:	bb61      	cbnz	r1, 800f90c <_format_hex+0x68>
 800f8b2:	2330      	movs	r3, #48	; 0x30
 800f8b4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f8b8:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800f8bc:	07e5      	lsls	r5, r4, #31
 800f8be:	d507      	bpl.n	800f8d0 <_format_hex+0x2c>
 800f8c0:	4669      	mov	r1, sp
 800f8c2:	2530      	movs	r5, #48	; 0x30
 800f8c4:	6870      	ldr	r0, [r6, #4]
 800f8c6:	1ad7      	subs	r7, r2, r3
 800f8c8:	4287      	cmp	r7, r0
 800f8ca:	da01      	bge.n	800f8d0 <_format_hex+0x2c>
 800f8cc:	428b      	cmp	r3, r1
 800f8ce:	d831      	bhi.n	800f934 <_format_hex+0x90>
 800f8d0:	06a0      	lsls	r0, r4, #26
 800f8d2:	d507      	bpl.n	800f8e4 <_format_hex+0x40>
 800f8d4:	4669      	mov	r1, sp
 800f8d6:	2530      	movs	r5, #48	; 0x30
 800f8d8:	68b0      	ldr	r0, [r6, #8]
 800f8da:	1ad7      	subs	r7, r2, r3
 800f8dc:	4287      	cmp	r7, r0
 800f8de:	da01      	bge.n	800f8e4 <_format_hex+0x40>
 800f8e0:	428b      	cmp	r3, r1
 800f8e2:	d82a      	bhi.n	800f93a <_format_hex+0x96>
 800f8e4:	0661      	lsls	r1, r4, #25
 800f8e6:	d407      	bmi.n	800f8f8 <_format_hex+0x54>
 800f8e8:	4669      	mov	r1, sp
 800f8ea:	2420      	movs	r4, #32
 800f8ec:	68b0      	ldr	r0, [r6, #8]
 800f8ee:	1ad5      	subs	r5, r2, r3
 800f8f0:	4285      	cmp	r5, r0
 800f8f2:	da01      	bge.n	800f8f8 <_format_hex+0x54>
 800f8f4:	428b      	cmp	r3, r1
 800f8f6:	d823      	bhi.n	800f940 <_format_hex+0x9c>
 800f8f8:	1ad5      	subs	r5, r2, r3
 800f8fa:	1c5c      	adds	r4, r3, #1
 800f8fc:	ab10      	add	r3, sp, #64	; 0x40
 800f8fe:	429c      	cmp	r4, r3
 800f900:	d321      	bcc.n	800f946 <_format_hex+0xa2>
 800f902:	68b3      	ldr	r3, [r6, #8]
 800f904:	429d      	cmp	r5, r3
 800f906:	db24      	blt.n	800f952 <_format_hex+0xae>
 800f908:	b011      	add	sp, #68	; 0x44
 800f90a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f90c:	f014 0f02 	tst.w	r4, #2
 800f910:	bf0c      	ite	eq
 800f912:	2757      	moveq	r7, #87	; 0x57
 800f914:	2737      	movne	r7, #55	; 0x37
 800f916:	4613      	mov	r3, r2
 800f918:	466d      	mov	r5, sp
 800f91a:	f001 000f 	and.w	r0, r1, #15
 800f91e:	2809      	cmp	r0, #9
 800f920:	bf94      	ite	ls
 800f922:	3030      	addls	r0, #48	; 0x30
 800f924:	19c0      	addhi	r0, r0, r7
 800f926:	0909      	lsrs	r1, r1, #4
 800f928:	f803 0901 	strb.w	r0, [r3], #-1
 800f92c:	d0c6      	beq.n	800f8bc <_format_hex+0x18>
 800f92e:	42ab      	cmp	r3, r5
 800f930:	d1f3      	bne.n	800f91a <_format_hex+0x76>
 800f932:	e7c3      	b.n	800f8bc <_format_hex+0x18>
 800f934:	f803 5901 	strb.w	r5, [r3], #-1
 800f938:	e7c5      	b.n	800f8c6 <_format_hex+0x22>
 800f93a:	f803 5901 	strb.w	r5, [r3], #-1
 800f93e:	e7cc      	b.n	800f8da <_format_hex+0x36>
 800f940:	f803 4901 	strb.w	r4, [r3], #-1
 800f944:	e7d3      	b.n	800f8ee <_format_hex+0x4a>
 800f946:	4630      	mov	r0, r6
 800f948:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f94c:	f7ff ff1e 	bl	800f78c <_xputch>
 800f950:	e7d4      	b.n	800f8fc <_format_hex+0x58>
 800f952:	2120      	movs	r1, #32
 800f954:	4630      	mov	r0, r6
 800f956:	f7ff ff19 	bl	800f78c <_xputch>
 800f95a:	3501      	adds	r5, #1
 800f95c:	e7d1      	b.n	800f902 <_format_hex+0x5e>
	...

0800f960 <_vprintf>:
 800f960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f964:	2700      	movs	r7, #0
 800f966:	460b      	mov	r3, r1
 800f968:	4614      	mov	r4, r2
 800f96a:	f04f 080a 	mov.w	r8, #10
 800f96e:	b086      	sub	sp, #24
 800f970:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800f974:	7819      	ldrb	r1, [r3, #0]
 800f976:	b919      	cbnz	r1, 800f980 <_vprintf+0x20>
 800f978:	9804      	ldr	r0, [sp, #16]
 800f97a:	b006      	add	sp, #24
 800f97c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f980:	2925      	cmp	r1, #37	; 0x25
 800f982:	f103 0501 	add.w	r5, r3, #1
 800f986:	d004      	beq.n	800f992 <_vprintf+0x32>
 800f988:	a801      	add	r0, sp, #4
 800f98a:	f7ff feff 	bl	800f78c <_xputch>
 800f98e:	462b      	mov	r3, r5
 800f990:	e7f0      	b.n	800f974 <_vprintf+0x14>
 800f992:	785a      	ldrb	r2, [r3, #1]
 800f994:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800f998:	2a30      	cmp	r2, #48	; 0x30
 800f99a:	9703      	str	r7, [sp, #12]
 800f99c:	d126      	bne.n	800f9ec <_vprintf+0x8c>
 800f99e:	2220      	movs	r2, #32
 800f9a0:	9201      	str	r2, [sp, #4]
 800f9a2:	1c9d      	adds	r5, r3, #2
 800f9a4:	2200      	movs	r2, #0
 800f9a6:	462e      	mov	r6, r5
 800f9a8:	4613      	mov	r3, r2
 800f9aa:	7831      	ldrb	r1, [r6, #0]
 800f9ac:	4635      	mov	r5, r6
 800f9ae:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800f9b2:	2809      	cmp	r0, #9
 800f9b4:	f106 0601 	add.w	r6, r6, #1
 800f9b8:	d91c      	bls.n	800f9f4 <_vprintf+0x94>
 800f9ba:	b12a      	cbz	r2, 800f9c8 <_vprintf+0x68>
 800f9bc:	9303      	str	r3, [sp, #12]
 800f9be:	b11b      	cbz	r3, 800f9c8 <_vprintf+0x68>
 800f9c0:	9b01      	ldr	r3, [sp, #4]
 800f9c2:	f043 0310 	orr.w	r3, r3, #16
 800f9c6:	9301      	str	r3, [sp, #4]
 800f9c8:	292e      	cmp	r1, #46	; 0x2e
 800f9ca:	d122      	bne.n	800fa12 <_vprintf+0xb2>
 800f9cc:	786b      	ldrb	r3, [r5, #1]
 800f9ce:	2b2a      	cmp	r3, #42	; 0x2a
 800f9d0:	d014      	beq.n	800f9fc <_vprintf+0x9c>
 800f9d2:	2100      	movs	r1, #0
 800f9d4:	460a      	mov	r2, r1
 800f9d6:	1c68      	adds	r0, r5, #1
 800f9d8:	7803      	ldrb	r3, [r0, #0]
 800f9da:	4605      	mov	r5, r0
 800f9dc:	3b30      	subs	r3, #48	; 0x30
 800f9de:	2b09      	cmp	r3, #9
 800f9e0:	f100 0001 	add.w	r0, r0, #1
 800f9e4:	d92f      	bls.n	800fa46 <_vprintf+0xe6>
 800f9e6:	b181      	cbz	r1, 800fa0a <_vprintf+0xaa>
 800f9e8:	9202      	str	r2, [sp, #8]
 800f9ea:	e00e      	b.n	800fa0a <_vprintf+0xaa>
 800f9ec:	2a2d      	cmp	r2, #45	; 0x2d
 800f9ee:	d1d9      	bne.n	800f9a4 <_vprintf+0x44>
 800f9f0:	2240      	movs	r2, #64	; 0x40
 800f9f2:	e7d5      	b.n	800f9a0 <_vprintf+0x40>
 800f9f4:	2201      	movs	r2, #1
 800f9f6:	fb08 0303 	mla	r3, r8, r3, r0
 800f9fa:	e7d6      	b.n	800f9aa <_vprintf+0x4a>
 800f9fc:	f854 3b04 	ldr.w	r3, [r4], #4
 800fa00:	3502      	adds	r5, #2
 800fa02:	2b00      	cmp	r3, #0
 800fa04:	bfb8      	it	lt
 800fa06:	425b      	neglt	r3, r3
 800fa08:	9302      	str	r3, [sp, #8]
 800fa0a:	9b01      	ldr	r3, [sp, #4]
 800fa0c:	f043 0301 	orr.w	r3, r3, #1
 800fa10:	9301      	str	r3, [sp, #4]
 800fa12:	782b      	ldrb	r3, [r5, #0]
 800fa14:	2b6c      	cmp	r3, #108	; 0x6c
 800fa16:	bf04      	itt	eq
 800fa18:	9b01      	ldreq	r3, [sp, #4]
 800fa1a:	3501      	addeq	r5, #1
 800fa1c:	7829      	ldrb	r1, [r5, #0]
 800fa1e:	bf04      	itt	eq
 800fa20:	f043 0304 	orreq.w	r3, r3, #4
 800fa24:	9301      	streq	r3, [sp, #4]
 800fa26:	2978      	cmp	r1, #120	; 0x78
 800fa28:	d8ae      	bhi.n	800f988 <_vprintf+0x28>
 800fa2a:	296f      	cmp	r1, #111	; 0x6f
 800fa2c:	d80f      	bhi.n	800fa4e <_vprintf+0xee>
 800fa2e:	2963      	cmp	r1, #99	; 0x63
 800fa30:	d045      	beq.n	800fabe <_vprintf+0x15e>
 800fa32:	d825      	bhi.n	800fa80 <_vprintf+0x120>
 800fa34:	2958      	cmp	r1, #88	; 0x58
 800fa36:	d1a7      	bne.n	800f988 <_vprintf+0x28>
 800fa38:	9b01      	ldr	r3, [sp, #4]
 800fa3a:	f043 0302 	orr.w	r3, r3, #2
 800fa3e:	9301      	str	r3, [sp, #4]
 800fa40:	f854 1b04 	ldr.w	r1, [r4], #4
 800fa44:	e051      	b.n	800faea <_vprintf+0x18a>
 800fa46:	2101      	movs	r1, #1
 800fa48:	fb08 3202 	mla	r2, r8, r2, r3
 800fa4c:	e7c4      	b.n	800f9d8 <_vprintf+0x78>
 800fa4e:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800fa52:	2b08      	cmp	r3, #8
 800fa54:	d898      	bhi.n	800f988 <_vprintf+0x28>
 800fa56:	a201      	add	r2, pc, #4	; (adr r2, 800fa5c <_vprintf+0xfc>)
 800fa58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fa5c:	0800facd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, fp, ip, sp, lr, pc}
 800fa60:	0800f989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp, lr, pc}
 800fa64:	0800f989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp, lr, pc}
 800fa68:	0800faf3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9, fp, ip, sp, lr, pc}
 800fa6c:	0800f989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp, lr, pc}
 800fa70:	0800fb65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr, pc}
 800fa74:	0800f989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp, lr, pc}
 800fa78:	0800f989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, sp, lr, pc}
 800fa7c:	0800fa41 	stmdaeq	r0, {r0, r6, r9, fp, ip, sp, lr, pc}
 800fa80:	2964      	cmp	r1, #100	; 0x64
 800fa82:	d002      	beq.n	800fa8a <_vprintf+0x12a>
 800fa84:	2969      	cmp	r1, #105	; 0x69
 800fa86:	f47f af7f 	bne.w	800f988 <_vprintf+0x28>
 800fa8a:	9901      	ldr	r1, [sp, #4]
 800fa8c:	074e      	lsls	r6, r1, #29
 800fa8e:	bf43      	ittte	mi
 800fa90:	3407      	addmi	r4, #7
 800fa92:	f024 0307 	bicmi.w	r3, r4, #7
 800fa96:	461c      	movmi	r4, r3
 800fa98:	f854 2b04 	ldrpl.w	r2, [r4], #4
 800fa9c:	bf4a      	itet	mi
 800fa9e:	685b      	ldrmi	r3, [r3, #4]
 800faa0:	17d3      	asrpl	r3, r2, #31
 800faa2:	f854 2b08 	ldrmi.w	r2, [r4], #8
 800faa6:	2b00      	cmp	r3, #0
 800faa8:	da05      	bge.n	800fab6 <_vprintf+0x156>
 800faaa:	f041 0108 	orr.w	r1, r1, #8
 800faae:	4252      	negs	r2, r2
 800fab0:	9101      	str	r1, [sp, #4]
 800fab2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800fab6:	a801      	add	r0, sp, #4
 800fab8:	f7ff fe7e 	bl	800f7b8 <_format_int>
 800fabc:	e004      	b.n	800fac8 <_vprintf+0x168>
 800fabe:	f854 1b04 	ldr.w	r1, [r4], #4
 800fac2:	a801      	add	r0, sp, #4
 800fac4:	f7ff fe62 	bl	800f78c <_xputch>
 800fac8:	3501      	adds	r5, #1
 800faca:	e760      	b.n	800f98e <_vprintf+0x2e>
 800facc:	2308      	movs	r3, #8
 800face:	9303      	str	r3, [sp, #12]
 800fad0:	2320      	movs	r3, #32
 800fad2:	2130      	movs	r1, #48	; 0x30
 800fad4:	f854 6b04 	ldr.w	r6, [r4], #4
 800fad8:	a801      	add	r0, sp, #4
 800fada:	9301      	str	r3, [sp, #4]
 800fadc:	f7ff fe56 	bl	800f78c <_xputch>
 800fae0:	2178      	movs	r1, #120	; 0x78
 800fae2:	a801      	add	r0, sp, #4
 800fae4:	f7ff fe52 	bl	800f78c <_xputch>
 800fae8:	4631      	mov	r1, r6
 800faea:	a801      	add	r0, sp, #4
 800faec:	f7ff feda 	bl	800f8a4 <_format_hex>
 800faf0:	e7ea      	b.n	800fac8 <_vprintf+0x168>
 800faf2:	2600      	movs	r6, #0
 800faf4:	f854 9b04 	ldr.w	r9, [r4], #4
 800faf8:	f819 3006 	ldrb.w	r3, [r9, r6]
 800fafc:	b993      	cbnz	r3, 800fb24 <_vprintf+0x1c4>
 800fafe:	9b01      	ldr	r3, [sp, #4]
 800fb00:	07d9      	lsls	r1, r3, #31
 800fb02:	d503      	bpl.n	800fb0c <_vprintf+0x1ac>
 800fb04:	9b02      	ldr	r3, [sp, #8]
 800fb06:	429e      	cmp	r6, r3
 800fb08:	bfa8      	it	ge
 800fb0a:	461e      	movge	r6, r3
 800fb0c:	9b01      	ldr	r3, [sp, #4]
 800fb0e:	f106 0a01 	add.w	sl, r6, #1
 800fb12:	065a      	lsls	r2, r3, #25
 800fb14:	d403      	bmi.n	800fb1e <_vprintf+0x1be>
 800fb16:	9b03      	ldr	r3, [sp, #12]
 800fb18:	429e      	cmp	r6, r3
 800fb1a:	db05      	blt.n	800fb28 <_vprintf+0x1c8>
 800fb1c:	4656      	mov	r6, sl
 800fb1e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800fb22:	e00d      	b.n	800fb40 <_vprintf+0x1e0>
 800fb24:	3601      	adds	r6, #1
 800fb26:	e7e7      	b.n	800faf8 <_vprintf+0x198>
 800fb28:	2120      	movs	r1, #32
 800fb2a:	a801      	add	r0, sp, #4
 800fb2c:	f7ff fe2e 	bl	800f78c <_xputch>
 800fb30:	4656      	mov	r6, sl
 800fb32:	e7eb      	b.n	800fb0c <_vprintf+0x1ac>
 800fb34:	a801      	add	r0, sp, #4
 800fb36:	f7ff fe29 	bl	800f78c <_xputch>
 800fb3a:	9b02      	ldr	r3, [sp, #8]
 800fb3c:	3b01      	subs	r3, #1
 800fb3e:	9302      	str	r3, [sp, #8]
 800fb40:	9b01      	ldr	r3, [sp, #4]
 800fb42:	07db      	lsls	r3, r3, #31
 800fb44:	d501      	bpl.n	800fb4a <_vprintf+0x1ea>
 800fb46:	9b02      	ldr	r3, [sp, #8]
 800fb48:	b11b      	cbz	r3, 800fb52 <_vprintf+0x1f2>
 800fb4a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800fb4e:	2900      	cmp	r1, #0
 800fb50:	d1f0      	bne.n	800fb34 <_vprintf+0x1d4>
 800fb52:	9b03      	ldr	r3, [sp, #12]
 800fb54:	42b3      	cmp	r3, r6
 800fb56:	ddb7      	ble.n	800fac8 <_vprintf+0x168>
 800fb58:	2120      	movs	r1, #32
 800fb5a:	a801      	add	r0, sp, #4
 800fb5c:	f7ff fe16 	bl	800f78c <_xputch>
 800fb60:	3601      	adds	r6, #1
 800fb62:	e7f6      	b.n	800fb52 <_vprintf+0x1f2>
 800fb64:	9b01      	ldr	r3, [sp, #4]
 800fb66:	f013 0304 	ands.w	r3, r3, #4
 800fb6a:	bf1d      	ittte	ne
 800fb6c:	3407      	addne	r4, #7
 800fb6e:	f024 0307 	bicne.w	r3, r4, #7
 800fb72:	461c      	movne	r4, r3
 800fb74:	f854 2b04 	ldreq.w	r2, [r4], #4
 800fb78:	bf1c      	itt	ne
 800fb7a:	f854 2b08 	ldrne.w	r2, [r4], #8
 800fb7e:	685b      	ldrne	r3, [r3, #4]
 800fb80:	e799      	b.n	800fab6 <_vprintf+0x156>
 800fb82:	bf00      	nop

0800fb84 <printf>:
 800fb84:	b40f      	push	{r0, r1, r2, r3}
 800fb86:	b507      	push	{r0, r1, r2, lr}
 800fb88:	aa04      	add	r2, sp, #16
 800fb8a:	f852 1b04 	ldr.w	r1, [r2], #4
 800fb8e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fb92:	9201      	str	r2, [sp, #4]
 800fb94:	f7ff fee4 	bl	800f960 <_vprintf>
 800fb98:	b003      	add	sp, #12
 800fb9a:	f85d eb04 	ldr.w	lr, [sp], #4
 800fb9e:	b004      	add	sp, #16
 800fba0:	4770      	bx	lr
	...

0800fba4 <sprintf>:
 800fba4:	b40e      	push	{r1, r2, r3}
 800fba6:	b517      	push	{r0, r1, r2, r4, lr}
 800fba8:	4c09      	ldr	r4, [pc, #36]	; (800fbd0 <sprintf+0x2c>)
 800fbaa:	aa05      	add	r2, sp, #20
 800fbac:	f852 1b04 	ldr.w	r1, [r2], #4
 800fbb0:	6020      	str	r0, [r4, #0]
 800fbb2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fbb6:	9201      	str	r2, [sp, #4]
 800fbb8:	f7ff fed2 	bl	800f960 <_vprintf>
 800fbbc:	2300      	movs	r3, #0
 800fbbe:	6822      	ldr	r2, [r4, #0]
 800fbc0:	6023      	str	r3, [r4, #0]
 800fbc2:	7013      	strb	r3, [r2, #0]
 800fbc4:	b003      	add	sp, #12
 800fbc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fbca:	b003      	add	sp, #12
 800fbcc:	4770      	bx	lr
 800fbce:	bf00      	nop
 800fbd0:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fbd4 <snprintf>:
 800fbd4:	b40c      	push	{r2, r3}
 800fbd6:	460b      	mov	r3, r1
 800fbd8:	b513      	push	{r0, r1, r4, lr}
 800fbda:	4c09      	ldr	r4, [pc, #36]	; (800fc00 <snprintf+0x2c>)
 800fbdc:	aa04      	add	r2, sp, #16
 800fbde:	f852 1b04 	ldr.w	r1, [r2], #4
 800fbe2:	6020      	str	r0, [r4, #0]
 800fbe4:	4618      	mov	r0, r3
 800fbe6:	9201      	str	r2, [sp, #4]
 800fbe8:	f7ff feba 	bl	800f960 <_vprintf>
 800fbec:	2300      	movs	r3, #0
 800fbee:	6822      	ldr	r2, [r4, #0]
 800fbf0:	6023      	str	r3, [r4, #0]
 800fbf2:	7013      	strb	r3, [r2, #0]
 800fbf4:	b002      	add	sp, #8
 800fbf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fbfa:	b002      	add	sp, #8
 800fbfc:	4770      	bx	lr
 800fbfe:	bf00      	nop
 800fc00:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fc04 <vsnprintf>:
 800fc04:	b538      	push	{r3, r4, r5, lr}
 800fc06:	4605      	mov	r5, r0
 800fc08:	4c05      	ldr	r4, [pc, #20]	; (800fc20 <vsnprintf+0x1c>)
 800fc0a:	4608      	mov	r0, r1
 800fc0c:	4611      	mov	r1, r2
 800fc0e:	461a      	mov	r2, r3
 800fc10:	6025      	str	r5, [r4, #0]
 800fc12:	f7ff fea5 	bl	800f960 <_vprintf>
 800fc16:	2300      	movs	r3, #0
 800fc18:	6822      	ldr	r2, [r4, #0]
 800fc1a:	6023      	str	r3, [r4, #0]
 800fc1c:	7013      	strb	r3, [r2, #0]
 800fc1e:	bd38      	pop	{r3, r4, r5, pc}
 800fc20:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fc24 <puts>:
 800fc24:	b508      	push	{r3, lr}
 800fc26:	f7ff fb2f 	bl	800f288 <console_puts>
 800fc2a:	200a      	movs	r0, #10
 800fc2c:	f7ff fb20 	bl	800f270 <console_putc>
 800fc30:	2001      	movs	r0, #1
 800fc32:	bd08      	pop	{r3, pc}

0800fc34 <strtok>:
 800fc34:	b530      	push	{r4, r5, lr}
 800fc36:	b910      	cbnz	r0, 800fc3e <strtok+0xa>
 800fc38:	4b12      	ldr	r3, [pc, #72]	; (800fc84 <strtok+0x50>)
 800fc3a:	6818      	ldr	r0, [r3, #0]
 800fc3c:	b158      	cbz	r0, 800fc56 <strtok+0x22>
 800fc3e:	4603      	mov	r3, r0
 800fc40:	460d      	mov	r5, r1
 800fc42:	4618      	mov	r0, r3
 800fc44:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fc48:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fc4c:	b924      	cbnz	r4, 800fc58 <strtok+0x24>
 800fc4e:	b94a      	cbnz	r2, 800fc64 <strtok+0x30>
 800fc50:	4610      	mov	r0, r2
 800fc52:	4b0c      	ldr	r3, [pc, #48]	; (800fc84 <strtok+0x50>)
 800fc54:	601a      	str	r2, [r3, #0]
 800fc56:	bd30      	pop	{r4, r5, pc}
 800fc58:	42a2      	cmp	r2, r4
 800fc5a:	d1f5      	bne.n	800fc48 <strtok+0x14>
 800fc5c:	e7f0      	b.n	800fc40 <strtok+0xc>
 800fc5e:	4613      	mov	r3, r2
 800fc60:	e00c      	b.n	800fc7c <strtok+0x48>
 800fc62:	b914      	cbnz	r4, 800fc6a <strtok+0x36>
 800fc64:	460d      	mov	r5, r1
 800fc66:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fc6a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fc6e:	42a2      	cmp	r2, r4
 800fc70:	d1f7      	bne.n	800fc62 <strtok+0x2e>
 800fc72:	2a00      	cmp	r2, #0
 800fc74:	d0f3      	beq.n	800fc5e <strtok+0x2a>
 800fc76:	2200      	movs	r2, #0
 800fc78:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fc7c:	4a01      	ldr	r2, [pc, #4]	; (800fc84 <strtok+0x50>)
 800fc7e:	6013      	str	r3, [r2, #0]
 800fc80:	e7e9      	b.n	800fc56 <strtok+0x22>
 800fc82:	bf00      	nop
 800fc84:	20009bc4 	andcs	r9, r0, r4, asr #23

0800fc88 <isleapyear>:
 800fc88:	2264      	movs	r2, #100	; 0x64
 800fc8a:	fb90 f3f2 	sdiv	r3, r0, r2
 800fc8e:	fb02 0313 	mls	r3, r2, r3, r0
 800fc92:	b94b      	cbnz	r3, 800fca8 <isleapyear+0x20>
 800fc94:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800fc98:	fb90 f2f3 	sdiv	r2, r0, r3
 800fc9c:	fb03 0012 	mls	r0, r3, r2, r0
 800fca0:	fab0 f080 	clz	r0, r0
 800fca4:	0940      	lsrs	r0, r0, #5
 800fca6:	4770      	bx	lr
 800fca8:	f010 0f03 	tst.w	r0, #3
 800fcac:	bf0c      	ite	eq
 800fcae:	2001      	moveq	r0, #1
 800fcb0:	2000      	movne	r0, #0
 800fcb2:	4770      	bx	lr

0800fcb4 <getdaysofmonth>:
 800fcb4:	b510      	push	{r4, lr}
 800fcb6:	4604      	mov	r4, r0
 800fcb8:	2c01      	cmp	r4, #1
 800fcba:	4608      	mov	r0, r1
 800fcbc:	d102      	bne.n	800fcc4 <getdaysofmonth+0x10>
 800fcbe:	f7ff ffe3 	bl	800fc88 <isleapyear>
 800fcc2:	b918      	cbnz	r0, 800fccc <getdaysofmonth+0x18>
 800fcc4:	4b02      	ldr	r3, [pc, #8]	; (800fcd0 <getdaysofmonth+0x1c>)
 800fcc6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800fcca:	bd10      	pop	{r4, pc}
 800fccc:	201d      	movs	r0, #29
 800fcce:	e7fc      	b.n	800fcca <getdaysofmonth+0x16>
 800fcd0:	08013870 	stmdaeq	r1, {r4, r5, r6, fp, ip, sp}

0800fcd4 <mktime>:
 800fcd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fcd8:	4604      	mov	r4, r0
 800fcda:	2800      	cmp	r0, #0
 800fcdc:	d042      	beq.n	800fd64 <mktime+0x90>
 800fcde:	6941      	ldr	r1, [r0, #20]
 800fce0:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800fce4:	2b45      	cmp	r3, #69	; 0x45
 800fce6:	d83d      	bhi.n	800fd64 <mktime+0x90>
 800fce8:	2600      	movs	r6, #0
 800fcea:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800fcee:	f240 186d 	movw	r8, #365	; 0x16d
 800fcf2:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800fcf6:	42af      	cmp	r7, r5
 800fcf8:	da23      	bge.n	800fd42 <mktime+0x6e>
 800fcfa:	6927      	ldr	r7, [r4, #16]
 800fcfc:	2f0b      	cmp	r7, #11
 800fcfe:	d831      	bhi.n	800fd64 <mktime+0x90>
 800fd00:	2500      	movs	r5, #0
 800fd02:	42af      	cmp	r7, r5
 800fd04:	d128      	bne.n	800fd58 <mktime+0x84>
 800fd06:	68e5      	ldr	r5, [r4, #12]
 800fd08:	2d00      	cmp	r5, #0
 800fd0a:	dd2b      	ble.n	800fd64 <mktime+0x90>
 800fd0c:	4638      	mov	r0, r7
 800fd0e:	f7ff ffd1 	bl	800fcb4 <getdaysofmonth>
 800fd12:	4285      	cmp	r5, r0
 800fd14:	dc26      	bgt.n	800fd64 <mktime+0x90>
 800fd16:	2318      	movs	r3, #24
 800fd18:	3d01      	subs	r5, #1
 800fd1a:	4435      	add	r5, r6
 800fd1c:	435d      	muls	r5, r3
 800fd1e:	68a3      	ldr	r3, [r4, #8]
 800fd20:	2b17      	cmp	r3, #23
 800fd22:	d81f      	bhi.n	800fd64 <mktime+0x90>
 800fd24:	203c      	movs	r0, #60	; 0x3c
 800fd26:	442b      	add	r3, r5
 800fd28:	fb00 f503 	mul.w	r5, r0, r3
 800fd2c:	6863      	ldr	r3, [r4, #4]
 800fd2e:	2b3b      	cmp	r3, #59	; 0x3b
 800fd30:	d818      	bhi.n	800fd64 <mktime+0x90>
 800fd32:	442b      	add	r3, r5
 800fd34:	4343      	muls	r3, r0
 800fd36:	6820      	ldr	r0, [r4, #0]
 800fd38:	283b      	cmp	r0, #59	; 0x3b
 800fd3a:	d813      	bhi.n	800fd64 <mktime+0x90>
 800fd3c:	4418      	add	r0, r3
 800fd3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd42:	4628      	mov	r0, r5
 800fd44:	f7ff ffa0 	bl	800fc88 <isleapyear>
 800fd48:	2800      	cmp	r0, #0
 800fd4a:	bf14      	ite	ne
 800fd4c:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800fd50:	4643      	moveq	r3, r8
 800fd52:	3501      	adds	r5, #1
 800fd54:	441e      	add	r6, r3
 800fd56:	e7ce      	b.n	800fcf6 <mktime+0x22>
 800fd58:	4628      	mov	r0, r5
 800fd5a:	f7ff ffab 	bl	800fcb4 <getdaysofmonth>
 800fd5e:	3501      	adds	r5, #1
 800fd60:	4406      	add	r6, r0
 800fd62:	e7ce      	b.n	800fd02 <mktime+0x2e>
 800fd64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fd68:	e7e9      	b.n	800fd3e <mktime+0x6a>
	...

0800fd6c <gettimeofday>:
 800fd6c:	b538      	push	{r3, r4, r5, lr}
 800fd6e:	4b10      	ldr	r3, [pc, #64]	; (800fdb0 <gettimeofday+0x44>)
 800fd70:	4a10      	ldr	r2, [pc, #64]	; (800fdb4 <gettimeofday+0x48>)
 800fd72:	681b      	ldr	r3, [r3, #0]
 800fd74:	6814      	ldr	r4, [r2, #0]
 800fd76:	6013      	str	r3, [r2, #0]
 800fd78:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fd7c:	429c      	cmp	r4, r3
 800fd7e:	bf2c      	ite	cs
 800fd80:	1ae4      	subcs	r4, r4, r3
 800fd82:	1b1c      	subcc	r4, r3, r4
 800fd84:	4354      	muls	r4, r2
 800fd86:	4b0c      	ldr	r3, [pc, #48]	; (800fdb8 <gettimeofday+0x4c>)
 800fd88:	4605      	mov	r5, r0
 800fd8a:	e9d3 2100 	ldrd	r2, r1, [r3]
 800fd8e:	18a4      	adds	r4, r4, r2
 800fd90:	f141 0100 	adc.w	r1, r1, #0
 800fd94:	e9c3 4100 	strd	r4, r1, [r3]
 800fd98:	4620      	mov	r0, r4
 800fd9a:	2300      	movs	r3, #0
 800fd9c:	4a07      	ldr	r2, [pc, #28]	; (800fdbc <gettimeofday+0x50>)
 800fd9e:	f7f7 f9d7 	bl	8007150 <__aeabi_uldivmod>
 800fda2:	4b06      	ldr	r3, [pc, #24]	; (800fdbc <gettimeofday+0x50>)
 800fda4:	6028      	str	r0, [r5, #0]
 800fda6:	fb03 4410 	mls	r4, r3, r0, r4
 800fdaa:	2000      	movs	r0, #0
 800fdac:	606c      	str	r4, [r5, #4]
 800fdae:	bd38      	pop	{r3, r4, r5, pc}
 800fdb0:	20009bd4 	ldrdcs	r9, [r0], -r4
 800fdb4:	20009bd0 	ldrdcs	r9, [r0], -r0
 800fdb8:	20009bc8 	andcs	r9, r0, r8, asr #23
 800fdbc:	000f4240 	andeq	r4, pc, r0, asr #4

0800fdc0 <settimeofday>:
 800fdc0:	4b07      	ldr	r3, [pc, #28]	; (800fde0 <settimeofday+0x20>)
 800fdc2:	b510      	push	{r4, lr}
 800fdc4:	681a      	ldr	r2, [r3, #0]
 800fdc6:	4b07      	ldr	r3, [pc, #28]	; (800fde4 <settimeofday+0x24>)
 800fdc8:	6804      	ldr	r4, [r0, #0]
 800fdca:	601a      	str	r2, [r3, #0]
 800fdcc:	6843      	ldr	r3, [r0, #4]
 800fdce:	4806      	ldr	r0, [pc, #24]	; (800fde8 <settimeofday+0x28>)
 800fdd0:	17da      	asrs	r2, r3, #31
 800fdd2:	fbc4 3200 	smlal	r3, r2, r4, r0
 800fdd6:	4905      	ldr	r1, [pc, #20]	; (800fdec <settimeofday+0x2c>)
 800fdd8:	2000      	movs	r0, #0
 800fdda:	e9c1 3200 	strd	r3, r2, [r1]
 800fdde:	bd10      	pop	{r4, pc}
 800fde0:	20009bd4 	ldrdcs	r9, [r0], -r4
 800fde4:	20009bd0 	ldrdcs	r9, [r0], -r0
 800fde8:	000f4240 	andeq	r4, pc, r0, asr #4
 800fdec:	20009bc8 	andcs	r9, r0, r8, asr #23

0800fdf0 <time>:
 800fdf0:	b513      	push	{r0, r1, r4, lr}
 800fdf2:	4604      	mov	r4, r0
 800fdf4:	2100      	movs	r1, #0
 800fdf6:	4668      	mov	r0, sp
 800fdf8:	f7ff ffb8 	bl	800fd6c <gettimeofday>
 800fdfc:	9800      	ldr	r0, [sp, #0]
 800fdfe:	b104      	cbz	r4, 800fe02 <time+0x12>
 800fe00:	6020      	str	r0, [r4, #0]
 800fe02:	b002      	add	sp, #8
 800fe04:	bd10      	pop	{r4, pc}
	...

0800fe08 <uart0_init>:
 800fe08:	2301      	movs	r3, #1
 800fe0a:	b507      	push	{r0, r1, r2, lr}
 800fe0c:	2208      	movs	r2, #8
 800fe0e:	9300      	str	r3, [sp, #0]
 800fe10:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800fe14:	2300      	movs	r3, #0
 800fe16:	4803      	ldr	r0, [pc, #12]	; (800fe24 <uart0_init+0x1c>)
 800fe18:	f000 ffe6 	bl	8010de8 <gd32_uart_begin>
 800fe1c:	b003      	add	sp, #12
 800fe1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe22:	bf00      	nop
 800fe24:	40013800 	andmi	r3, r1, r0, lsl #16

0800fe28 <uart0_putc>:
 800fe28:	280a      	cmp	r0, #10
 800fe2a:	b538      	push	{r3, r4, r5, lr}
 800fe2c:	4604      	mov	r4, r0
 800fe2e:	d10a      	bne.n	800fe46 <uart0_putc+0x1e>
 800fe30:	4d0b      	ldr	r5, [pc, #44]	; (800fe60 <uart0_putc+0x38>)
 800fe32:	2107      	movs	r1, #7
 800fe34:	4628      	mov	r0, r5
 800fe36:	f000 fd41 	bl	80108bc <usart_flag_get>
 800fe3a:	2800      	cmp	r0, #0
 800fe3c:	d0f9      	beq.n	800fe32 <uart0_putc+0xa>
 800fe3e:	220d      	movs	r2, #13
 800fe40:	4b08      	ldr	r3, [pc, #32]	; (800fe64 <uart0_putc+0x3c>)
 800fe42:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800fe46:	4d06      	ldr	r5, [pc, #24]	; (800fe60 <uart0_putc+0x38>)
 800fe48:	2107      	movs	r1, #7
 800fe4a:	4628      	mov	r0, r5
 800fe4c:	f000 fd36 	bl	80108bc <usart_flag_get>
 800fe50:	2800      	cmp	r0, #0
 800fe52:	d0f9      	beq.n	800fe48 <uart0_putc+0x20>
 800fe54:	4b03      	ldr	r3, [pc, #12]	; (800fe64 <uart0_putc+0x3c>)
 800fe56:	b2e4      	uxtb	r4, r4
 800fe58:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800fe5c:	bd38      	pop	{r3, r4, r5, pc}
 800fe5e:	bf00      	nop
 800fe60:	40013800 	andmi	r3, r1, r0, lsl #16
 800fe64:	40013000 	andmi	r3, r1, r0

0800fe68 <uart0_puts>:
 800fe68:	b510      	push	{r4, lr}
 800fe6a:	1e44      	subs	r4, r0, #1
 800fe6c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800fe70:	b903      	cbnz	r3, 800fe74 <uart0_puts+0xc>
 800fe72:	bd10      	pop	{r4, pc}
 800fe74:	2b0a      	cmp	r3, #10
 800fe76:	d102      	bne.n	800fe7e <uart0_puts+0x16>
 800fe78:	200d      	movs	r0, #13
 800fe7a:	f7ff ffd5 	bl	800fe28 <uart0_putc>
 800fe7e:	7820      	ldrb	r0, [r4, #0]
 800fe80:	f7ff ffd2 	bl	800fe28 <uart0_putc>
 800fe84:	e7f2      	b.n	800fe6c <uart0_puts+0x4>
	...

0800fe88 <systick_config>:
 800fe88:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fe8c:	4b0b      	ldr	r3, [pc, #44]	; (800febc <systick_config+0x34>)
 800fe8e:	681b      	ldr	r3, [r3, #0]
 800fe90:	fbb3 f3f2 	udiv	r3, r3, r2
 800fe94:	3b01      	subs	r3, #1
 800fe96:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800fe9a:	d20d      	bcs.n	800feb8 <systick_config+0x30>
 800fe9c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800fea0:	21f0      	movs	r1, #240	; 0xf0
 800fea2:	6153      	str	r3, [r2, #20]
 800fea4:	4b06      	ldr	r3, [pc, #24]	; (800fec0 <systick_config+0x38>)
 800fea6:	2007      	movs	r0, #7
 800fea8:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800feac:	2100      	movs	r1, #0
 800feae:	6191      	str	r1, [r2, #24]
 800feb0:	6110      	str	r0, [r2, #16]
 800feb2:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800feb6:	4770      	bx	lr
 800feb8:	e7fe      	b.n	800feb8 <systick_config+0x30>
 800feba:	bf00      	nop
 800febc:	200000f4 	strdcs	r0, [r0], -r4
 800fec0:	e000ed00 	and	lr, r0, r0, lsl #26

0800fec4 <SysTick_Handler>:
 800fec4:	4a02      	ldr	r2, [pc, #8]	; (800fed0 <SysTick_Handler+0xc>)
 800fec6:	6813      	ldr	r3, [r2, #0]
 800fec8:	3301      	adds	r3, #1
 800feca:	6013      	str	r3, [r2, #0]
 800fecc:	4770      	bx	lr
 800fece:	bf00      	nop
 800fed0:	20009bd4 	ldrdcs	r9, [r0], -r4

0800fed4 <SystemInit>:
 800fed4:	4b37      	ldr	r3, [pc, #220]	; (800ffb4 <SystemInit+0xe0>)
 800fed6:	4838      	ldr	r0, [pc, #224]	; (800ffb8 <SystemInit+0xe4>)
 800fed8:	681a      	ldr	r2, [r3, #0]
 800feda:	f042 0201 	orr.w	r2, r2, #1
 800fede:	601a      	str	r2, [r3, #0]
 800fee0:	685a      	ldr	r2, [r3, #4]
 800fee2:	f022 0203 	bic.w	r2, r2, #3
 800fee6:	605a      	str	r2, [r3, #4]
 800fee8:	6819      	ldr	r1, [r3, #0]
 800feea:	4001      	ands	r1, r0
 800feec:	6019      	str	r1, [r3, #0]
 800feee:	685a      	ldr	r2, [r3, #4]
 800fef0:	4932      	ldr	r1, [pc, #200]	; (800ffbc <SystemInit+0xe8>)
 800fef2:	4011      	ands	r1, r2
 800fef4:	6059      	str	r1, [r3, #4]
 800fef6:	681a      	ldr	r2, [r3, #0]
 800fef8:	4002      	ands	r2, r0
 800fefa:	601a      	str	r2, [r3, #0]
 800fefc:	681a      	ldr	r2, [r3, #0]
 800fefe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ff02:	601a      	str	r2, [r3, #0]
 800ff04:	685a      	ldr	r2, [r3, #4]
 800ff06:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800ff0a:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800ff0e:	605a      	str	r2, [r3, #4]
 800ff10:	2200      	movs	r2, #0
 800ff12:	62da      	str	r2, [r3, #44]	; 0x2c
 800ff14:	681a      	ldr	r2, [r3, #0]
 800ff16:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800ff1a:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800ff1e:	601a      	str	r2, [r3, #0]
 800ff20:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800ff24:	609a      	str	r2, [r3, #8]
 800ff26:	681a      	ldr	r2, [r3, #0]
 800ff28:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800ff2c:	601a      	str	r2, [r3, #0]
 800ff2e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ff32:	6819      	ldr	r1, [r3, #0]
 800ff34:	0389      	lsls	r1, r1, #14
 800ff36:	d401      	bmi.n	800ff3c <SystemInit+0x68>
 800ff38:	3a01      	subs	r2, #1
 800ff3a:	d1fa      	bne.n	800ff32 <SystemInit+0x5e>
 800ff3c:	681a      	ldr	r2, [r3, #0]
 800ff3e:	0392      	lsls	r2, r2, #14
 800ff40:	d400      	bmi.n	800ff44 <SystemInit+0x70>
 800ff42:	e7fe      	b.n	800ff42 <SystemInit+0x6e>
 800ff44:	685a      	ldr	r2, [r3, #4]
 800ff46:	605a      	str	r2, [r3, #4]
 800ff48:	685a      	ldr	r2, [r3, #4]
 800ff4a:	605a      	str	r2, [r3, #4]
 800ff4c:	685a      	ldr	r2, [r3, #4]
 800ff4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ff52:	605a      	str	r2, [r3, #4]
 800ff54:	685a      	ldr	r2, [r3, #4]
 800ff56:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800ff5a:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800ff5e:	605a      	str	r2, [r3, #4]
 800ff60:	685a      	ldr	r2, [r3, #4]
 800ff62:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800ff66:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800ff6a:	605a      	str	r2, [r3, #4]
 800ff6c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800ff6e:	4a14      	ldr	r2, [pc, #80]	; (800ffc0 <SystemInit+0xec>)
 800ff70:	400a      	ands	r2, r1
 800ff72:	62da      	str	r2, [r3, #44]	; 0x2c
 800ff74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ff76:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800ff7a:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800ff7e:	62da      	str	r2, [r3, #44]	; 0x2c
 800ff80:	681a      	ldr	r2, [r3, #0]
 800ff82:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800ff86:	601a      	str	r2, [r3, #0]
 800ff88:	681a      	ldr	r2, [r3, #0]
 800ff8a:	0110      	lsls	r0, r2, #4
 800ff8c:	d5fc      	bpl.n	800ff88 <SystemInit+0xb4>
 800ff8e:	681a      	ldr	r2, [r3, #0]
 800ff90:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800ff94:	601a      	str	r2, [r3, #0]
 800ff96:	681a      	ldr	r2, [r3, #0]
 800ff98:	0191      	lsls	r1, r2, #6
 800ff9a:	d5fc      	bpl.n	800ff96 <SystemInit+0xc2>
 800ff9c:	685a      	ldr	r2, [r3, #4]
 800ff9e:	f022 0203 	bic.w	r2, r2, #3
 800ffa2:	605a      	str	r2, [r3, #4]
 800ffa4:	685a      	ldr	r2, [r3, #4]
 800ffa6:	f042 0202 	orr.w	r2, r2, #2
 800ffaa:	605a      	str	r2, [r3, #4]
 800ffac:	685a      	ldr	r2, [r3, #4]
 800ffae:	0712      	lsls	r2, r2, #28
 800ffb0:	d5fc      	bpl.n	800ffac <SystemInit+0xd8>
 800ffb2:	4770      	bx	lr
 800ffb4:	40021000 	andmi	r1, r2, r0
 800ffb8:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800ffbc:	e0ff000c 	rscs	r0, pc, ip
 800ffc0:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800ffc4 <dma_deinit>:
 800ffc4:	4b0c      	ldr	r3, [pc, #48]	; (800fff8 <dma_deinit+0x34>)
 800ffc6:	4298      	cmp	r0, r3
 800ffc8:	d102      	bne.n	800ffd0 <dma_deinit+0xc>
 800ffca:	2904      	cmp	r1, #4
 800ffcc:	d900      	bls.n	800ffd0 <dma_deinit+0xc>
 800ffce:	e7fe      	b.n	800ffce <dma_deinit+0xa>
 800ffd0:	2314      	movs	r3, #20
 800ffd2:	fb03 0301 	mla	r3, r3, r1, r0
 800ffd6:	689a      	ldr	r2, [r3, #8]
 800ffd8:	0089      	lsls	r1, r1, #2
 800ffda:	f022 0201 	bic.w	r2, r2, #1
 800ffde:	609a      	str	r2, [r3, #8]
 800ffe0:	2200      	movs	r2, #0
 800ffe2:	609a      	str	r2, [r3, #8]
 800ffe4:	60da      	str	r2, [r3, #12]
 800ffe6:	611a      	str	r2, [r3, #16]
 800ffe8:	615a      	str	r2, [r3, #20]
 800ffea:	230f      	movs	r3, #15
 800ffec:	6842      	ldr	r2, [r0, #4]
 800ffee:	fa03 f101 	lsl.w	r1, r3, r1
 800fff2:	4311      	orrs	r1, r2
 800fff4:	6041      	str	r1, [r0, #4]
 800fff6:	4770      	bx	lr
 800fff8:	40020400 	andmi	r0, r2, r0, lsl #8

0800fffc <dma_init>:
 800fffc:	4b1b      	ldr	r3, [pc, #108]	; (801006c <dma_init+0x70>)
 800fffe:	b510      	push	{r4, lr}
 8010000:	4298      	cmp	r0, r3
 8010002:	d102      	bne.n	801000a <dma_init+0xe>
 8010004:	2904      	cmp	r1, #4
 8010006:	d900      	bls.n	801000a <dma_init+0xe>
 8010008:	e7fe      	b.n	8010008 <dma_init+0xc>
 801000a:	2314      	movs	r3, #20
 801000c:	fb03 0101 	mla	r1, r3, r1, r0
 8010010:	6813      	ldr	r3, [r2, #0]
 8010012:	610b      	str	r3, [r1, #16]
 8010014:	6893      	ldr	r3, [r2, #8]
 8010016:	614b      	str	r3, [r1, #20]
 8010018:	8a13      	ldrh	r3, [r2, #16]
 801001a:	60cb      	str	r3, [r1, #12]
 801001c:	68d4      	ldr	r4, [r2, #12]
 801001e:	6853      	ldr	r3, [r2, #4]
 8010020:	6888      	ldr	r0, [r1, #8]
 8010022:	4323      	orrs	r3, r4
 8010024:	6954      	ldr	r4, [r2, #20]
 8010026:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 801002a:	4323      	orrs	r3, r4
 801002c:	4303      	orrs	r3, r0
 801002e:	608b      	str	r3, [r1, #8]
 8010030:	7e13      	ldrb	r3, [r2, #24]
 8010032:	2b01      	cmp	r3, #1
 8010034:	688b      	ldr	r3, [r1, #8]
 8010036:	bf0c      	ite	eq
 8010038:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 801003c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8010040:	608b      	str	r3, [r1, #8]
 8010042:	7e53      	ldrb	r3, [r2, #25]
 8010044:	2b01      	cmp	r3, #1
 8010046:	688b      	ldr	r3, [r1, #8]
 8010048:	bf0c      	ite	eq
 801004a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 801004e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8010052:	608b      	str	r3, [r1, #8]
 8010054:	7e93      	ldrb	r3, [r2, #26]
 8010056:	b923      	cbnz	r3, 8010062 <dma_init+0x66>
 8010058:	688b      	ldr	r3, [r1, #8]
 801005a:	f023 0310 	bic.w	r3, r3, #16
 801005e:	608b      	str	r3, [r1, #8]
 8010060:	bd10      	pop	{r4, pc}
 8010062:	688b      	ldr	r3, [r1, #8]
 8010064:	f043 0310 	orr.w	r3, r3, #16
 8010068:	e7f9      	b.n	801005e <dma_init+0x62>
 801006a:	bf00      	nop
 801006c:	40020400 	andmi	r0, r2, r0, lsl #8

08010070 <dma_circulation_disable>:
 8010070:	4b06      	ldr	r3, [pc, #24]	; (801008c <dma_circulation_disable+0x1c>)
 8010072:	4298      	cmp	r0, r3
 8010074:	d102      	bne.n	801007c <dma_circulation_disable+0xc>
 8010076:	2904      	cmp	r1, #4
 8010078:	d900      	bls.n	801007c <dma_circulation_disable+0xc>
 801007a:	e7fe      	b.n	801007a <dma_circulation_disable+0xa>
 801007c:	2314      	movs	r3, #20
 801007e:	4359      	muls	r1, r3
 8010080:	3008      	adds	r0, #8
 8010082:	580b      	ldr	r3, [r1, r0]
 8010084:	f023 0320 	bic.w	r3, r3, #32
 8010088:	500b      	str	r3, [r1, r0]
 801008a:	4770      	bx	lr
 801008c:	40020400 	andmi	r0, r2, r0, lsl #8

08010090 <dma_memory_to_memory_disable>:
 8010090:	4b06      	ldr	r3, [pc, #24]	; (80100ac <dma_memory_to_memory_disable+0x1c>)
 8010092:	4298      	cmp	r0, r3
 8010094:	d102      	bne.n	801009c <dma_memory_to_memory_disable+0xc>
 8010096:	2904      	cmp	r1, #4
 8010098:	d900      	bls.n	801009c <dma_memory_to_memory_disable+0xc>
 801009a:	e7fe      	b.n	801009a <dma_memory_to_memory_disable+0xa>
 801009c:	2314      	movs	r3, #20
 801009e:	4359      	muls	r1, r3
 80100a0:	3008      	adds	r0, #8
 80100a2:	580b      	ldr	r3, [r1, r0]
 80100a4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80100a8:	500b      	str	r3, [r1, r0]
 80100aa:	4770      	bx	lr
 80100ac:	40020400 	andmi	r0, r2, r0, lsl #8

080100b0 <fmc_bank0_unlock>:
 80100b0:	4b04      	ldr	r3, [pc, #16]	; (80100c4 <fmc_bank0_unlock+0x14>)
 80100b2:	691a      	ldr	r2, [r3, #16]
 80100b4:	0612      	lsls	r2, r2, #24
 80100b6:	bf41      	itttt	mi
 80100b8:	4a03      	ldrmi	r2, [pc, #12]	; (80100c8 <fmc_bank0_unlock+0x18>)
 80100ba:	605a      	strmi	r2, [r3, #4]
 80100bc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80100c0:	605a      	strmi	r2, [r3, #4]
 80100c2:	4770      	bx	lr
 80100c4:	40022000 	andmi	r2, r2, r0
 80100c8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080100cc <fmc_bank1_unlock>:
 80100cc:	4b04      	ldr	r3, [pc, #16]	; (80100e0 <fmc_bank1_unlock+0x14>)
 80100ce:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80100d0:	0612      	lsls	r2, r2, #24
 80100d2:	bf41      	itttt	mi
 80100d4:	4a03      	ldrmi	r2, [pc, #12]	; (80100e4 <fmc_bank1_unlock+0x18>)
 80100d6:	645a      	strmi	r2, [r3, #68]	; 0x44
 80100d8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80100dc:	645a      	strmi	r2, [r3, #68]	; 0x44
 80100de:	4770      	bx	lr
 80100e0:	40022000 	andmi	r2, r2, r0
 80100e4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080100e8 <fmc_bank0_lock>:
 80100e8:	4a02      	ldr	r2, [pc, #8]	; (80100f4 <fmc_bank0_lock+0xc>)
 80100ea:	6913      	ldr	r3, [r2, #16]
 80100ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80100f0:	6113      	str	r3, [r2, #16]
 80100f2:	4770      	bx	lr
 80100f4:	40022000 	andmi	r2, r2, r0

080100f8 <fmc_bank1_lock>:
 80100f8:	4a02      	ldr	r2, [pc, #8]	; (8010104 <fmc_bank1_lock+0xc>)
 80100fa:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80100fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010100:	6513      	str	r3, [r2, #80]	; 0x50
 8010102:	4770      	bx	lr
 8010104:	40022000 	andmi	r2, r2, r0

08010108 <fmc_bank0_state_get>:
 8010108:	4b08      	ldr	r3, [pc, #32]	; (801012c <fmc_bank0_state_get+0x24>)
 801010a:	68da      	ldr	r2, [r3, #12]
 801010c:	07d1      	lsls	r1, r2, #31
 801010e:	d409      	bmi.n	8010124 <fmc_bank0_state_get+0x1c>
 8010110:	68da      	ldr	r2, [r3, #12]
 8010112:	06d2      	lsls	r2, r2, #27
 8010114:	d408      	bmi.n	8010128 <fmc_bank0_state_get+0x20>
 8010116:	68db      	ldr	r3, [r3, #12]
 8010118:	f013 0f04 	tst.w	r3, #4
 801011c:	bf0c      	ite	eq
 801011e:	2000      	moveq	r0, #0
 8010120:	2002      	movne	r0, #2
 8010122:	4770      	bx	lr
 8010124:	2001      	movs	r0, #1
 8010126:	4770      	bx	lr
 8010128:	2003      	movs	r0, #3
 801012a:	4770      	bx	lr
 801012c:	40022000 	andmi	r2, r2, r0

08010130 <fmc_bank1_state_get>:
 8010130:	4b08      	ldr	r3, [pc, #32]	; (8010154 <fmc_bank1_state_get+0x24>)
 8010132:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010134:	07d1      	lsls	r1, r2, #31
 8010136:	d409      	bmi.n	801014c <fmc_bank1_state_get+0x1c>
 8010138:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801013a:	06d2      	lsls	r2, r2, #27
 801013c:	d408      	bmi.n	8010150 <fmc_bank1_state_get+0x20>
 801013e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010140:	f013 0f04 	tst.w	r3, #4
 8010144:	bf0c      	ite	eq
 8010146:	2000      	moveq	r0, #0
 8010148:	2002      	movne	r0, #2
 801014a:	4770      	bx	lr
 801014c:	2001      	movs	r0, #1
 801014e:	4770      	bx	lr
 8010150:	2003      	movs	r0, #3
 8010152:	4770      	bx	lr
 8010154:	40022000 	andmi	r2, r2, r0

08010158 <fwdgt_enable>:
 8010158:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 801015c:	4b01      	ldr	r3, [pc, #4]	; (8010164 <fwdgt_enable+0xc>)
 801015e:	601a      	str	r2, [r3, #0]
 8010160:	4770      	bx	lr
 8010162:	bf00      	nop
 8010164:	40003000 	andmi	r3, r0, r0

08010168 <fwdgt_counter_reload>:
 8010168:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 801016c:	4b01      	ldr	r3, [pc, #4]	; (8010174 <fwdgt_counter_reload+0xc>)
 801016e:	601a      	str	r2, [r3, #0]
 8010170:	4770      	bx	lr
 8010172:	bf00      	nop
 8010174:	40003000 	andmi	r3, r0, r0

08010178 <fwdgt_config>:
 8010178:	f245 5355 	movw	r3, #21845	; 0x5555
 801017c:	4a11      	ldr	r2, [pc, #68]	; (80101c4 <fwdgt_config+0x4c>)
 801017e:	b510      	push	{r4, lr}
 8010180:	4c11      	ldr	r4, [pc, #68]	; (80101c8 <fwdgt_config+0x50>)
 8010182:	6013      	str	r3, [r2, #0]
 8010184:	68d3      	ldr	r3, [r2, #12]
 8010186:	3c01      	subs	r4, #1
 8010188:	f003 0301 	and.w	r3, r3, #1
 801018c:	d013      	beq.n	80101b6 <fwdgt_config+0x3e>
 801018e:	2b00      	cmp	r3, #0
 8010190:	d1f8      	bne.n	8010184 <fwdgt_config+0xc>
 8010192:	6051      	str	r1, [r2, #4]
 8010194:	490c      	ldr	r1, [pc, #48]	; (80101c8 <fwdgt_config+0x50>)
 8010196:	4a0b      	ldr	r2, [pc, #44]	; (80101c4 <fwdgt_config+0x4c>)
 8010198:	68d3      	ldr	r3, [r2, #12]
 801019a:	3901      	subs	r1, #1
 801019c:	f003 0302 	and.w	r3, r3, #2
 80101a0:	d00d      	beq.n	80101be <fwdgt_config+0x46>
 80101a2:	2b00      	cmp	r3, #0
 80101a4:	d1f8      	bne.n	8010198 <fwdgt_config+0x20>
 80101a6:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80101aa:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80101ae:	6090      	str	r0, [r2, #8]
 80101b0:	2001      	movs	r0, #1
 80101b2:	6013      	str	r3, [r2, #0]
 80101b4:	e002      	b.n	80101bc <fwdgt_config+0x44>
 80101b6:	2b00      	cmp	r3, #0
 80101b8:	d0eb      	beq.n	8010192 <fwdgt_config+0x1a>
 80101ba:	2000      	movs	r0, #0
 80101bc:	bd10      	pop	{r4, pc}
 80101be:	2b00      	cmp	r3, #0
 80101c0:	d1fb      	bne.n	80101ba <fwdgt_config+0x42>
 80101c2:	e7f0      	b.n	80101a6 <fwdgt_config+0x2e>
 80101c4:	40003000 	andmi	r3, r0, r0
 80101c8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080101cc <gpio_init>:
 80101cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101d0:	f04f 0c0f 	mov.w	ip, #15
 80101d4:	06cf      	lsls	r7, r1, #27
 80101d6:	f04f 0400 	mov.w	r4, #0
 80101da:	f04f 0701 	mov.w	r7, #1
 80101de:	f001 050f 	and.w	r5, r1, #15
 80101e2:	bf48      	it	mi
 80101e4:	4315      	orrmi	r5, r2
 80101e6:	fa23 f204 	lsr.w	r2, r3, r4
 80101ea:	07d6      	lsls	r6, r2, #31
 80101ec:	d510      	bpl.n	8010210 <gpio_init+0x44>
 80101ee:	00a2      	lsls	r2, r4, #2
 80101f0:	6806      	ldr	r6, [r0, #0]
 80101f2:	fa0c fe02 	lsl.w	lr, ip, r2
 80101f6:	ea26 060e 	bic.w	r6, r6, lr
 80101fa:	fa05 f202 	lsl.w	r2, r5, r2
 80101fe:	2928      	cmp	r1, #40	; 0x28
 8010200:	ea42 0206 	orr.w	r2, r2, r6
 8010204:	d128      	bne.n	8010258 <gpio_init+0x8c>
 8010206:	fa07 f604 	lsl.w	r6, r7, r4
 801020a:	401e      	ands	r6, r3
 801020c:	6146      	str	r6, [r0, #20]
 801020e:	6002      	str	r2, [r0, #0]
 8010210:	3401      	adds	r4, #1
 8010212:	2c08      	cmp	r4, #8
 8010214:	d1e7      	bne.n	80101e6 <gpio_init+0x1a>
 8010216:	2600      	movs	r6, #0
 8010218:	f04f 0c0f 	mov.w	ip, #15
 801021c:	2701      	movs	r7, #1
 801021e:	f106 0208 	add.w	r2, r6, #8
 8010222:	fa23 f402 	lsr.w	r4, r3, r2
 8010226:	07e4      	lsls	r4, r4, #31
 8010228:	d511      	bpl.n	801024e <gpio_init+0x82>
 801022a:	00b4      	lsls	r4, r6, #2
 801022c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8010230:	fa0c f804 	lsl.w	r8, ip, r4
 8010234:	ea2e 0e08 	bic.w	lr, lr, r8
 8010238:	fa05 f404 	lsl.w	r4, r5, r4
 801023c:	2928      	cmp	r1, #40	; 0x28
 801023e:	ea44 040e 	orr.w	r4, r4, lr
 8010242:	d110      	bne.n	8010266 <gpio_init+0x9a>
 8010244:	fa07 f202 	lsl.w	r2, r7, r2
 8010248:	401a      	ands	r2, r3
 801024a:	6142      	str	r2, [r0, #20]
 801024c:	6044      	str	r4, [r0, #4]
 801024e:	3601      	adds	r6, #1
 8010250:	2e08      	cmp	r6, #8
 8010252:	d1e4      	bne.n	801021e <gpio_init+0x52>
 8010254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010258:	2948      	cmp	r1, #72	; 0x48
 801025a:	bf02      	ittt	eq
 801025c:	fa07 f604 	lsleq.w	r6, r7, r4
 8010260:	401e      	andeq	r6, r3
 8010262:	6106      	streq	r6, [r0, #16]
 8010264:	e7d3      	b.n	801020e <gpio_init+0x42>
 8010266:	2948      	cmp	r1, #72	; 0x48
 8010268:	bf02      	ittt	eq
 801026a:	fa07 f202 	lsleq.w	r2, r7, r2
 801026e:	401a      	andeq	r2, r3
 8010270:	6102      	streq	r2, [r0, #16]
 8010272:	e7eb      	b.n	801024c <gpio_init+0x80>

08010274 <gpio_pin_remap_config>:
 8010274:	2800      	cmp	r0, #0
 8010276:	4a16      	ldr	r2, [pc, #88]	; (80102d0 <gpio_pin_remap_config+0x5c>)
 8010278:	b530      	push	{r4, r5, lr}
 801027a:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 801027e:	bfb4      	ite	lt
 8010280:	69d3      	ldrlt	r3, [r2, #28]
 8010282:	6853      	ldrge	r3, [r2, #4]
 8010284:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8010288:	b284      	uxth	r4, r0
 801028a:	d110      	bne.n	80102ae <gpio_pin_remap_config+0x3a>
 801028c:	6855      	ldr	r5, [r2, #4]
 801028e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8010292:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8010296:	6055      	str	r5, [r2, #4]
 8010298:	b119      	cbz	r1, 80102a2 <gpio_pin_remap_config+0x2e>
 801029a:	0d42      	lsrs	r2, r0, #21
 801029c:	0112      	lsls	r2, r2, #4
 801029e:	4094      	lsls	r4, r2
 80102a0:	4323      	orrs	r3, r4
 80102a2:	4a0b      	ldr	r2, [pc, #44]	; (80102d0 <gpio_pin_remap_config+0x5c>)
 80102a4:	2800      	cmp	r0, #0
 80102a6:	bfb4      	ite	lt
 80102a8:	61d3      	strlt	r3, [r2, #28]
 80102aa:	6053      	strge	r3, [r2, #4]
 80102ac:	bd30      	pop	{r4, r5, pc}
 80102ae:	02c2      	lsls	r2, r0, #11
 80102b0:	bf4d      	iteet	mi
 80102b2:	2203      	movmi	r2, #3
 80102b4:	0d42      	lsrpl	r2, r0, #21
 80102b6:	0112      	lslpl	r2, r2, #4
 80102b8:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80102bc:	bf4c      	ite	mi
 80102be:	40aa      	lslmi	r2, r5
 80102c0:	fa04 f202 	lslpl.w	r2, r4, r2
 80102c4:	ea23 0302 	bic.w	r3, r3, r2
 80102c8:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80102cc:	e7e4      	b.n	8010298 <gpio_pin_remap_config+0x24>
 80102ce:	bf00      	nop
 80102d0:	40010000 	andmi	r0, r1, r0

080102d4 <gpio_ethernet_phy_select>:
 80102d4:	4b04      	ldr	r3, [pc, #16]	; (80102e8 <gpio_ethernet_phy_select+0x14>)
 80102d6:	6859      	ldr	r1, [r3, #4]
 80102d8:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 80102dc:	6059      	str	r1, [r3, #4]
 80102de:	685a      	ldr	r2, [r3, #4]
 80102e0:	4302      	orrs	r2, r0
 80102e2:	605a      	str	r2, [r3, #4]
 80102e4:	4770      	bx	lr
 80102e6:	bf00      	nop
 80102e8:	40010000 	andmi	r0, r1, r0

080102ec <rcu_periph_clock_enable>:
 80102ec:	2201      	movs	r2, #1
 80102ee:	0983      	lsrs	r3, r0, #6
 80102f0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80102f4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80102f8:	6819      	ldr	r1, [r3, #0]
 80102fa:	f000 001f 	and.w	r0, r0, #31
 80102fe:	fa02 f000 	lsl.w	r0, r2, r0
 8010302:	4308      	orrs	r0, r1
 8010304:	6018      	str	r0, [r3, #0]
 8010306:	4770      	bx	lr

08010308 <rcu_periph_clock_disable>:
 8010308:	2101      	movs	r1, #1
 801030a:	0983      	lsrs	r3, r0, #6
 801030c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010310:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010314:	681a      	ldr	r2, [r3, #0]
 8010316:	f000 001f 	and.w	r0, r0, #31
 801031a:	fa01 f000 	lsl.w	r0, r1, r0
 801031e:	ea22 0000 	bic.w	r0, r2, r0
 8010322:	6018      	str	r0, [r3, #0]
 8010324:	4770      	bx	lr

08010326 <rcu_periph_reset_enable>:
 8010326:	f7ff bfe1 	b.w	80102ec <rcu_periph_clock_enable>

0801032a <rcu_periph_reset_disable>:
 801032a:	f7ff bfed 	b.w	8010308 <rcu_periph_clock_disable>
	...

08010330 <rcu_ckout0_config>:
 8010330:	4a03      	ldr	r2, [pc, #12]	; (8010340 <rcu_ckout0_config+0x10>)
 8010332:	6853      	ldr	r3, [r2, #4]
 8010334:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8010338:	4303      	orrs	r3, r0
 801033a:	6053      	str	r3, [r2, #4]
 801033c:	4770      	bx	lr
 801033e:	bf00      	nop
 8010340:	40021000 	andmi	r1, r2, r0

08010344 <rcu_pll2_config>:
 8010344:	4b04      	ldr	r3, [pc, #16]	; (8010358 <rcu_pll2_config+0x14>)
 8010346:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8010348:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 801034c:	62d9      	str	r1, [r3, #44]	; 0x2c
 801034e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010350:	4302      	orrs	r2, r0
 8010352:	62da      	str	r2, [r3, #44]	; 0x2c
 8010354:	4770      	bx	lr
 8010356:	bf00      	nop
 8010358:	40021000 	andmi	r1, r2, r0

0801035c <rcu_adc_clock_config>:
 801035c:	490c      	ldr	r1, [pc, #48]	; (8010390 <rcu_adc_clock_config+0x34>)
 801035e:	2805      	cmp	r0, #5
 8010360:	684b      	ldr	r3, [r1, #4]
 8010362:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8010366:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801036a:	d006      	beq.n	801037a <rcu_adc_clock_config+0x1e>
 801036c:	d803      	bhi.n	8010376 <rcu_adc_clock_config+0x1a>
 801036e:	2804      	cmp	r0, #4
 8010370:	d10a      	bne.n	8010388 <rcu_adc_clock_config+0x2c>
 8010372:	604b      	str	r3, [r1, #4]
 8010374:	4770      	bx	lr
 8010376:	2807      	cmp	r0, #7
 8010378:	d1fb      	bne.n	8010372 <rcu_adc_clock_config+0x16>
 801037a:	4a06      	ldr	r2, [pc, #24]	; (8010394 <rcu_adc_clock_config+0x38>)
 801037c:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8010380:	4303      	orrs	r3, r0
 8010382:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8010386:	e7f4      	b.n	8010372 <rcu_adc_clock_config+0x16>
 8010388:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801038c:	e7f1      	b.n	8010372 <rcu_adc_clock_config+0x16>
 801038e:	bf00      	nop
 8010390:	40021000 	andmi	r1, r2, r0
 8010394:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08010398 <rcu_flag_get>:
 8010398:	0983      	lsrs	r3, r0, #6
 801039a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801039e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80103a2:	681b      	ldr	r3, [r3, #0]
 80103a4:	f000 001f 	and.w	r0, r0, #31
 80103a8:	fa23 f000 	lsr.w	r0, r3, r0
 80103ac:	f000 0001 	and.w	r0, r0, #1
 80103b0:	4770      	bx	lr
	...

080103b4 <rcu_osci_stab_wait>:
 80103b4:	281a      	cmp	r0, #26
 80103b6:	b508      	push	{r3, lr}
 80103b8:	d051      	beq.n	801045e <rcu_osci_stab_wait+0xaa>
 80103ba:	d806      	bhi.n	80103ca <rcu_osci_stab_wait+0x16>
 80103bc:	2810      	cmp	r0, #16
 80103be:	d015      	beq.n	80103ec <rcu_osci_stab_wait+0x38>
 80103c0:	2818      	cmp	r0, #24
 80103c2:	d043      	beq.n	801044c <rcu_osci_stab_wait+0x98>
 80103c4:	b368      	cbz	r0, 8010422 <rcu_osci_stab_wait+0x6e>
 80103c6:	2000      	movs	r0, #0
 80103c8:	bd08      	pop	{r3, pc}
 80103ca:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80103ce:	d01c      	beq.n	801040a <rcu_osci_stab_wait+0x56>
 80103d0:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80103d4:	d02f      	beq.n	8010436 <rcu_osci_stab_wait+0x82>
 80103d6:	281c      	cmp	r0, #28
 80103d8:	d1f5      	bne.n	80103c6 <rcu_osci_stab_wait+0x12>
 80103da:	4a25      	ldr	r2, [pc, #148]	; (8010470 <rcu_osci_stab_wait+0xbc>)
 80103dc:	201d      	movs	r0, #29
 80103de:	f7ff ffdb 	bl	8010398 <rcu_flag_get>
 80103e2:	b908      	cbnz	r0, 80103e8 <rcu_osci_stab_wait+0x34>
 80103e4:	3a01      	subs	r2, #1
 80103e6:	d1f9      	bne.n	80103dc <rcu_osci_stab_wait+0x28>
 80103e8:	201d      	movs	r0, #29
 80103ea:	e008      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 80103ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80103f0:	2011      	movs	r0, #17
 80103f2:	f7ff ffd1 	bl	8010398 <rcu_flag_get>
 80103f6:	b908      	cbnz	r0, 80103fc <rcu_osci_stab_wait+0x48>
 80103f8:	3a01      	subs	r2, #1
 80103fa:	d1f9      	bne.n	80103f0 <rcu_osci_stab_wait+0x3c>
 80103fc:	2011      	movs	r0, #17
 80103fe:	f7ff ffcb 	bl	8010398 <rcu_flag_get>
 8010402:	3800      	subs	r0, #0
 8010404:	bf18      	it	ne
 8010406:	2001      	movne	r0, #1
 8010408:	e7de      	b.n	80103c8 <rcu_osci_stab_wait+0x14>
 801040a:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 801040e:	f640 0001 	movw	r0, #2049	; 0x801
 8010412:	f7ff ffc1 	bl	8010398 <rcu_flag_get>
 8010416:	b908      	cbnz	r0, 801041c <rcu_osci_stab_wait+0x68>
 8010418:	3a01      	subs	r2, #1
 801041a:	d1f8      	bne.n	801040e <rcu_osci_stab_wait+0x5a>
 801041c:	f640 0001 	movw	r0, #2049	; 0x801
 8010420:	e7ed      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 8010422:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8010426:	2001      	movs	r0, #1
 8010428:	f7ff ffb6 	bl	8010398 <rcu_flag_get>
 801042c:	b908      	cbnz	r0, 8010432 <rcu_osci_stab_wait+0x7e>
 801042e:	3a01      	subs	r2, #1
 8010430:	d1f9      	bne.n	8010426 <rcu_osci_stab_wait+0x72>
 8010432:	2001      	movs	r0, #1
 8010434:	e7e3      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 8010436:	4a0e      	ldr	r2, [pc, #56]	; (8010470 <rcu_osci_stab_wait+0xbc>)
 8010438:	f640 1001 	movw	r0, #2305	; 0x901
 801043c:	f7ff ffac 	bl	8010398 <rcu_flag_get>
 8010440:	b908      	cbnz	r0, 8010446 <rcu_osci_stab_wait+0x92>
 8010442:	3a01      	subs	r2, #1
 8010444:	d1f8      	bne.n	8010438 <rcu_osci_stab_wait+0x84>
 8010446:	f640 1001 	movw	r0, #2305	; 0x901
 801044a:	e7d8      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 801044c:	4a08      	ldr	r2, [pc, #32]	; (8010470 <rcu_osci_stab_wait+0xbc>)
 801044e:	2019      	movs	r0, #25
 8010450:	f7ff ffa2 	bl	8010398 <rcu_flag_get>
 8010454:	b908      	cbnz	r0, 801045a <rcu_osci_stab_wait+0xa6>
 8010456:	3a01      	subs	r2, #1
 8010458:	d1f9      	bne.n	801044e <rcu_osci_stab_wait+0x9a>
 801045a:	2019      	movs	r0, #25
 801045c:	e7cf      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 801045e:	4a04      	ldr	r2, [pc, #16]	; (8010470 <rcu_osci_stab_wait+0xbc>)
 8010460:	201b      	movs	r0, #27
 8010462:	f7ff ff99 	bl	8010398 <rcu_flag_get>
 8010466:	b908      	cbnz	r0, 801046c <rcu_osci_stab_wait+0xb8>
 8010468:	3a01      	subs	r2, #1
 801046a:	d1f9      	bne.n	8010460 <rcu_osci_stab_wait+0xac>
 801046c:	201b      	movs	r0, #27
 801046e:	e7c6      	b.n	80103fe <rcu_osci_stab_wait+0x4a>
 8010470:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08010474 <rcu_osci_on>:
 8010474:	f7ff bf3a 	b.w	80102ec <rcu_periph_clock_enable>

08010478 <rcu_clock_freq_get>:
 8010478:	4b3d      	ldr	r3, [pc, #244]	; (8010570 <rcu_clock_freq_get+0xf8>)
 801047a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801047c:	4604      	mov	r4, r0
 801047e:	461f      	mov	r7, r3
 8010480:	b089      	sub	sp, #36	; 0x24
 8010482:	ad04      	add	r5, sp, #16
 8010484:	f103 0610 	add.w	r6, r3, #16
 8010488:	462a      	mov	r2, r5
 801048a:	6818      	ldr	r0, [r3, #0]
 801048c:	6859      	ldr	r1, [r3, #4]
 801048e:	3308      	adds	r3, #8
 8010490:	c203      	stmia	r2!, {r0, r1}
 8010492:	42b3      	cmp	r3, r6
 8010494:	4615      	mov	r5, r2
 8010496:	d1f7      	bne.n	8010488 <rcu_clock_freq_get+0x10>
 8010498:	466b      	mov	r3, sp
 801049a:	6938      	ldr	r0, [r7, #16]
 801049c:	6871      	ldr	r1, [r6, #4]
 801049e:	4a35      	ldr	r2, [pc, #212]	; (8010574 <rcu_clock_freq_get+0xfc>)
 80104a0:	c303      	stmia	r3!, {r0, r1}
 80104a2:	c303      	stmia	r3!, {r0, r1}
 80104a4:	6853      	ldr	r3, [r2, #4]
 80104a6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80104aa:	2b01      	cmp	r3, #1
 80104ac:	d053      	beq.n	8010556 <rcu_clock_freq_get+0xde>
 80104ae:	2b02      	cmp	r3, #2
 80104b0:	d153      	bne.n	801055a <rcu_clock_freq_get+0xe2>
 80104b2:	6853      	ldr	r3, [r2, #4]
 80104b4:	03dd      	lsls	r5, r3, #15
 80104b6:	d523      	bpl.n	8010500 <rcu_clock_freq_get+0x88>
 80104b8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80104ba:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80104be:	4b2e      	ldr	r3, [pc, #184]	; (8010578 <rcu_clock_freq_get+0x100>)
 80104c0:	d00e      	beq.n	80104e0 <rcu_clock_freq_get+0x68>
 80104c2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80104c4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80104c6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80104ca:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80104ce:	3101      	adds	r1, #1
 80104d0:	280f      	cmp	r0, #15
 80104d2:	f100 0502 	add.w	r5, r0, #2
 80104d6:	fbb3 f3f1 	udiv	r3, r3, r1
 80104da:	bf08      	it	eq
 80104dc:	2514      	moveq	r5, #20
 80104de:	436b      	muls	r3, r5
 80104e0:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80104e2:	f001 010f 	and.w	r1, r1, #15
 80104e6:	3101      	adds	r1, #1
 80104e8:	fbb3 f3f1 	udiv	r3, r3, r1
 80104ec:	6851      	ldr	r1, [r2, #4]
 80104ee:	6850      	ldr	r0, [r2, #4]
 80104f0:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80104f4:	0080      	lsls	r0, r0, #2
 80104f6:	d505      	bpl.n	8010504 <rcu_clock_freq_get+0x8c>
 80104f8:	f041 0110 	orr.w	r1, r1, #16
 80104fc:	1c48      	adds	r0, r1, #1
 80104fe:	e007      	b.n	8010510 <rcu_clock_freq_get+0x98>
 8010500:	4b1e      	ldr	r3, [pc, #120]	; (801057c <rcu_clock_freq_get+0x104>)
 8010502:	e7f3      	b.n	80104ec <rcu_clock_freq_get+0x74>
 8010504:	290f      	cmp	r1, #15
 8010506:	d0f9      	beq.n	80104fc <rcu_clock_freq_get+0x84>
 8010508:	290d      	cmp	r1, #13
 801050a:	f101 0002 	add.w	r0, r1, #2
 801050e:	d01d      	beq.n	801054c <rcu_clock_freq_get+0xd4>
 8010510:	4343      	muls	r3, r0
 8010512:	6851      	ldr	r1, [r2, #4]
 8010514:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8010518:	3120      	adds	r1, #32
 801051a:	4469      	add	r1, sp
 801051c:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8010520:	fa23 f001 	lsr.w	r0, r3, r1
 8010524:	6851      	ldr	r1, [r2, #4]
 8010526:	6852      	ldr	r2, [r2, #4]
 8010528:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801052c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8010530:	3120      	adds	r1, #32
 8010532:	3220      	adds	r2, #32
 8010534:	4469      	add	r1, sp
 8010536:	446a      	add	r2, sp
 8010538:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 801053c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8010540:	2c03      	cmp	r4, #3
 8010542:	d813      	bhi.n	801056c <rcu_clock_freq_get+0xf4>
 8010544:	e8df f004 	tbb	[pc, r4]
 8010548:	100e0c0b 	andne	r0, lr, fp, lsl #24
 801054c:	2006      	movs	r0, #6
 801054e:	0859      	lsrs	r1, r3, #1
 8010550:	fb00 1303 	mla	r3, r0, r3, r1
 8010554:	e7dd      	b.n	8010512 <rcu_clock_freq_get+0x9a>
 8010556:	4b08      	ldr	r3, [pc, #32]	; (8010578 <rcu_clock_freq_get+0x100>)
 8010558:	e7db      	b.n	8010512 <rcu_clock_freq_get+0x9a>
 801055a:	4b09      	ldr	r3, [pc, #36]	; (8010580 <rcu_clock_freq_get+0x108>)
 801055c:	e7d9      	b.n	8010512 <rcu_clock_freq_get+0x9a>
 801055e:	4618      	mov	r0, r3
 8010560:	b009      	add	sp, #36	; 0x24
 8010562:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010564:	40c8      	lsrs	r0, r1
 8010566:	e7fb      	b.n	8010560 <rcu_clock_freq_get+0xe8>
 8010568:	40d0      	lsrs	r0, r2
 801056a:	e7f9      	b.n	8010560 <rcu_clock_freq_get+0xe8>
 801056c:	2000      	movs	r0, #0
 801056e:	e7f7      	b.n	8010560 <rcu_clock_freq_get+0xe8>
 8010570:	08011aa4 	stmdaeq	r1, {r2, r5, r7, r9, fp, ip}
 8010574:	40021000 	andmi	r1, r2, r0
 8010578:	017d7840 	cmneq	sp, r0, asr #16
 801057c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8010580:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08010584 <timer_deinit>:
 8010584:	b508      	push	{r3, lr}
 8010586:	4b2d      	ldr	r3, [pc, #180]	; (801063c <timer_deinit+0xb8>)
 8010588:	4298      	cmp	r0, r3
 801058a:	d048      	beq.n	801061e <timer_deinit+0x9a>
 801058c:	d816      	bhi.n	80105bc <timer_deinit+0x38>
 801058e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010592:	4298      	cmp	r0, r3
 8010594:	d03c      	beq.n	8010610 <timer_deinit+0x8c>
 8010596:	d807      	bhi.n	80105a8 <timer_deinit+0x24>
 8010598:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801059c:	d02a      	beq.n	80105f4 <timer_deinit+0x70>
 801059e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80105a2:	4298      	cmp	r0, r3
 80105a4:	d02d      	beq.n	8010602 <timer_deinit+0x7e>
 80105a6:	bd08      	pop	{r3, pc}
 80105a8:	4b25      	ldr	r3, [pc, #148]	; (8010640 <timer_deinit+0xbc>)
 80105aa:	4298      	cmp	r0, r3
 80105ac:	d1fb      	bne.n	80105a6 <timer_deinit+0x22>
 80105ae:	f240 4003 	movw	r0, #1027	; 0x403
 80105b2:	f7ff feb8 	bl	8010326 <rcu_periph_reset_enable>
 80105b6:	f240 4003 	movw	r0, #1027	; 0x403
 80105ba:	e017      	b.n	80105ec <timer_deinit+0x68>
 80105bc:	4b21      	ldr	r3, [pc, #132]	; (8010644 <timer_deinit+0xc0>)
 80105be:	4298      	cmp	r0, r3
 80105c0:	d00e      	beq.n	80105e0 <timer_deinit+0x5c>
 80105c2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80105c6:	4298      	cmp	r0, r3
 80105c8:	d030      	beq.n	801062c <timer_deinit+0xa8>
 80105ca:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80105ce:	4298      	cmp	r0, r3
 80105d0:	d1e9      	bne.n	80105a6 <timer_deinit+0x22>
 80105d2:	f240 4005 	movw	r0, #1029	; 0x405
 80105d6:	f7ff fea6 	bl	8010326 <rcu_periph_reset_enable>
 80105da:	f240 4005 	movw	r0, #1029	; 0x405
 80105de:	e005      	b.n	80105ec <timer_deinit+0x68>
 80105e0:	f240 300b 	movw	r0, #779	; 0x30b
 80105e4:	f7ff fe9f 	bl	8010326 <rcu_periph_reset_enable>
 80105e8:	f240 300b 	movw	r0, #779	; 0x30b
 80105ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80105f0:	f7ff be9b 	b.w	801032a <rcu_periph_reset_disable>
 80105f4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80105f8:	f7ff fe95 	bl	8010326 <rcu_periph_reset_enable>
 80105fc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010600:	e7f4      	b.n	80105ec <timer_deinit+0x68>
 8010602:	f240 4001 	movw	r0, #1025	; 0x401
 8010606:	f7ff fe8e 	bl	8010326 <rcu_periph_reset_enable>
 801060a:	f240 4001 	movw	r0, #1025	; 0x401
 801060e:	e7ed      	b.n	80105ec <timer_deinit+0x68>
 8010610:	f240 4002 	movw	r0, #1026	; 0x402
 8010614:	f7ff fe87 	bl	8010326 <rcu_periph_reset_enable>
 8010618:	f240 4002 	movw	r0, #1026	; 0x402
 801061c:	e7e6      	b.n	80105ec <timer_deinit+0x68>
 801061e:	f240 4004 	movw	r0, #1028	; 0x404
 8010622:	f7ff fe80 	bl	8010326 <rcu_periph_reset_enable>
 8010626:	f240 4004 	movw	r0, #1028	; 0x404
 801062a:	e7df      	b.n	80105ec <timer_deinit+0x68>
 801062c:	f240 300d 	movw	r0, #781	; 0x30d
 8010630:	f7ff fe79 	bl	8010326 <rcu_periph_reset_enable>
 8010634:	f240 300d 	movw	r0, #781	; 0x30d
 8010638:	e7d8      	b.n	80105ec <timer_deinit+0x68>
 801063a:	bf00      	nop
 801063c:	40001000 	andmi	r1, r0, r0
 8010640:	40000c00 	andmi	r0, r0, r0, lsl #24
 8010644:	40012c00 	andmi	r2, r1, r0, lsl #24

08010648 <timer_init>:
 8010648:	880b      	ldrh	r3, [r1, #0]
 801064a:	6283      	str	r3, [r0, #40]	; 0x28
 801064c:	4b26      	ldr	r3, [pc, #152]	; (80106e8 <timer_init+0xa0>)
 801064e:	4298      	cmp	r0, r3
 8010650:	d018      	beq.n	8010684 <timer_init+0x3c>
 8010652:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8010656:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 801065a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801065e:	d011      	beq.n	8010684 <timer_init+0x3c>
 8010660:	4a22      	ldr	r2, [pc, #136]	; (80106ec <timer_init+0xa4>)
 8010662:	4290      	cmp	r0, r2
 8010664:	d00e      	beq.n	8010684 <timer_init+0x3c>
 8010666:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 801066a:	4290      	cmp	r0, r2
 801066c:	d00a      	beq.n	8010684 <timer_init+0x3c>
 801066e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8010672:	4293      	cmp	r3, r2
 8010674:	d006      	beq.n	8010684 <timer_init+0x3c>
 8010676:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 801067a:	4293      	cmp	r3, r2
 801067c:	d002      	beq.n	8010684 <timer_init+0x3c>
 801067e:	4b1c      	ldr	r3, [pc, #112]	; (80106f0 <timer_init+0xa8>)
 8010680:	4298      	cmp	r0, r3
 8010682:	d10f      	bne.n	80106a4 <timer_init+0x5c>
 8010684:	6803      	ldr	r3, [r0, #0]
 8010686:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801068a:	6003      	str	r3, [r0, #0]
 801068c:	884b      	ldrh	r3, [r1, #2]
 801068e:	6802      	ldr	r2, [r0, #0]
 8010690:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010694:	4313      	orrs	r3, r2
 8010696:	6003      	str	r3, [r0, #0]
 8010698:	888b      	ldrh	r3, [r1, #4]
 801069a:	6802      	ldr	r2, [r0, #0]
 801069c:	f003 0310 	and.w	r3, r3, #16
 80106a0:	4313      	orrs	r3, r2
 80106a2:	6003      	str	r3, [r0, #0]
 80106a4:	688b      	ldr	r3, [r1, #8]
 80106a6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80106a8:	4b12      	ldr	r3, [pc, #72]	; (80106f4 <timer_init+0xac>)
 80106aa:	4298      	cmp	r0, r3
 80106ac:	d003      	beq.n	80106b6 <timer_init+0x6e>
 80106ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80106b2:	4298      	cmp	r0, r3
 80106b4:	d104      	bne.n	80106c0 <timer_init+0x78>
 80106b6:	6943      	ldr	r3, [r0, #20]
 80106b8:	f043 0301 	orr.w	r3, r3, #1
 80106bc:	6143      	str	r3, [r0, #20]
 80106be:	4770      	bx	lr
 80106c0:	6803      	ldr	r3, [r0, #0]
 80106c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80106c6:	6003      	str	r3, [r0, #0]
 80106c8:	898b      	ldrh	r3, [r1, #12]
 80106ca:	6802      	ldr	r2, [r0, #0]
 80106cc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80106d0:	4313      	orrs	r3, r2
 80106d2:	6003      	str	r3, [r0, #0]
 80106d4:	4b04      	ldr	r3, [pc, #16]	; (80106e8 <timer_init+0xa0>)
 80106d6:	4298      	cmp	r0, r3
 80106d8:	d002      	beq.n	80106e0 <timer_init+0x98>
 80106da:	4b04      	ldr	r3, [pc, #16]	; (80106ec <timer_init+0xa4>)
 80106dc:	4298      	cmp	r0, r3
 80106de:	d1ea      	bne.n	80106b6 <timer_init+0x6e>
 80106e0:	7b8b      	ldrb	r3, [r1, #14]
 80106e2:	6303      	str	r3, [r0, #48]	; 0x30
 80106e4:	e7e7      	b.n	80106b6 <timer_init+0x6e>
 80106e6:	bf00      	nop
 80106e8:	40012c00 	andmi	r2, r1, r0, lsl #24
 80106ec:	40013400 	andmi	r3, r1, r0, lsl #8
 80106f0:	40002000 	andmi	r2, r0, r0
 80106f4:	40001000 	andmi	r1, r0, r0

080106f8 <timer_enable>:
 80106f8:	6803      	ldr	r3, [r0, #0]
 80106fa:	f043 0301 	orr.w	r3, r3, #1
 80106fe:	6003      	str	r3, [r0, #0]
 8010700:	4770      	bx	lr

08010702 <timer_channel_output_mode_config>:
 8010702:	2903      	cmp	r1, #3
 8010704:	d81a      	bhi.n	801073c <timer_channel_output_mode_config+0x3a>
 8010706:	e8df f001 	tbb	[pc, r1]
 801070a:	1a120a02 	bne	8492f1a <__exidx_end+0x47f672>
 801070e:	6983      	ldr	r3, [r0, #24]
 8010710:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010714:	6183      	str	r3, [r0, #24]
 8010716:	6983      	ldr	r3, [r0, #24]
 8010718:	431a      	orrs	r2, r3
 801071a:	6182      	str	r2, [r0, #24]
 801071c:	4770      	bx	lr
 801071e:	6983      	ldr	r3, [r0, #24]
 8010720:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010724:	6183      	str	r3, [r0, #24]
 8010726:	6983      	ldr	r3, [r0, #24]
 8010728:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 801072c:	e7f5      	b.n	801071a <timer_channel_output_mode_config+0x18>
 801072e:	69c3      	ldr	r3, [r0, #28]
 8010730:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010734:	61c3      	str	r3, [r0, #28]
 8010736:	69c3      	ldr	r3, [r0, #28]
 8010738:	431a      	orrs	r2, r3
 801073a:	61c2      	str	r2, [r0, #28]
 801073c:	4770      	bx	lr
 801073e:	69c3      	ldr	r3, [r0, #28]
 8010740:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010744:	61c3      	str	r3, [r0, #28]
 8010746:	69c3      	ldr	r3, [r0, #28]
 8010748:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 801074c:	e7f5      	b.n	801073a <timer_channel_output_mode_config+0x38>

0801074e <timer_channel_output_pulse_value_config>:
 801074e:	2903      	cmp	r1, #3
 8010750:	d80a      	bhi.n	8010768 <timer_channel_output_pulse_value_config+0x1a>
 8010752:	e8df f001 	tbb	[pc, r1]
 8010756:	08060402 	stmdaeq	r6, {r1, sl}
 801075a:	6342      	str	r2, [r0, #52]	; 0x34
 801075c:	4770      	bx	lr
 801075e:	6382      	str	r2, [r0, #56]	; 0x38
 8010760:	4770      	bx	lr
 8010762:	63c2      	str	r2, [r0, #60]	; 0x3c
 8010764:	4770      	bx	lr
 8010766:	6402      	str	r2, [r0, #64]	; 0x40
 8010768:	4770      	bx	lr

0801076a <timer_interrupt_enable>:
 801076a:	68c3      	ldr	r3, [r0, #12]
 801076c:	430b      	orrs	r3, r1
 801076e:	60c3      	str	r3, [r0, #12]
 8010770:	4770      	bx	lr

08010772 <timer_interrupt_flag_clear>:
 8010772:	43c9      	mvns	r1, r1
 8010774:	6101      	str	r1, [r0, #16]
 8010776:	4770      	bx	lr

08010778 <timer_flag_clear>:
 8010778:	43c9      	mvns	r1, r1
 801077a:	6101      	str	r1, [r0, #16]
 801077c:	4770      	bx	lr
	...

08010780 <usart_deinit>:
 8010780:	b508      	push	{r3, lr}
 8010782:	4b1d      	ldr	r3, [pc, #116]	; (80107f8 <usart_deinit+0x78>)
 8010784:	4298      	cmp	r0, r3
 8010786:	d028      	beq.n	80107da <usart_deinit+0x5a>
 8010788:	d808      	bhi.n	801079c <usart_deinit+0x1c>
 801078a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801078e:	4298      	cmp	r0, r3
 8010790:	d015      	beq.n	80107be <usart_deinit+0x3e>
 8010792:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010796:	4298      	cmp	r0, r3
 8010798:	d018      	beq.n	80107cc <usart_deinit+0x4c>
 801079a:	bd08      	pop	{r3, pc}
 801079c:	4b17      	ldr	r3, [pc, #92]	; (80107fc <usart_deinit+0x7c>)
 801079e:	4298      	cmp	r0, r3
 80107a0:	d022      	beq.n	80107e8 <usart_deinit+0x68>
 80107a2:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80107a6:	4298      	cmp	r0, r3
 80107a8:	d1f7      	bne.n	801079a <usart_deinit+0x1a>
 80107aa:	f240 300e 	movw	r0, #782	; 0x30e
 80107ae:	f7ff fdba 	bl	8010326 <rcu_periph_reset_enable>
 80107b2:	f240 300e 	movw	r0, #782	; 0x30e
 80107b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80107ba:	f7ff bdb6 	b.w	801032a <rcu_periph_reset_disable>
 80107be:	f240 4011 	movw	r0, #1041	; 0x411
 80107c2:	f7ff fdb0 	bl	8010326 <rcu_periph_reset_enable>
 80107c6:	f240 4011 	movw	r0, #1041	; 0x411
 80107ca:	e7f4      	b.n	80107b6 <usart_deinit+0x36>
 80107cc:	f240 4012 	movw	r0, #1042	; 0x412
 80107d0:	f7ff fda9 	bl	8010326 <rcu_periph_reset_enable>
 80107d4:	f240 4012 	movw	r0, #1042	; 0x412
 80107d8:	e7ed      	b.n	80107b6 <usart_deinit+0x36>
 80107da:	f240 4013 	movw	r0, #1043	; 0x413
 80107de:	f7ff fda2 	bl	8010326 <rcu_periph_reset_enable>
 80107e2:	f240 4013 	movw	r0, #1043	; 0x413
 80107e6:	e7e6      	b.n	80107b6 <usart_deinit+0x36>
 80107e8:	f240 4014 	movw	r0, #1044	; 0x414
 80107ec:	f7ff fd9b 	bl	8010326 <rcu_periph_reset_enable>
 80107f0:	f240 4014 	movw	r0, #1044	; 0x414
 80107f4:	e7df      	b.n	80107b6 <usart_deinit+0x36>
 80107f6:	bf00      	nop
 80107f8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80107fc:	40005000 	andmi	r5, r0, r0

08010800 <usart_baudrate_set>:
 8010800:	b538      	push	{r3, r4, r5, lr}
 8010802:	4b11      	ldr	r3, [pc, #68]	; (8010848 <usart_baudrate_set+0x48>)
 8010804:	4604      	mov	r4, r0
 8010806:	4298      	cmp	r0, r3
 8010808:	460d      	mov	r5, r1
 801080a:	d01b      	beq.n	8010844 <usart_baudrate_set+0x44>
 801080c:	d809      	bhi.n	8010822 <usart_baudrate_set+0x22>
 801080e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010812:	4298      	cmp	r0, r3
 8010814:	d016      	beq.n	8010844 <usart_baudrate_set+0x44>
 8010816:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801081a:	4298      	cmp	r0, r3
 801081c:	d012      	beq.n	8010844 <usart_baudrate_set+0x44>
 801081e:	2000      	movs	r0, #0
 8010820:	e009      	b.n	8010836 <usart_baudrate_set+0x36>
 8010822:	4b0a      	ldr	r3, [pc, #40]	; (801084c <usart_baudrate_set+0x4c>)
 8010824:	4298      	cmp	r0, r3
 8010826:	d00d      	beq.n	8010844 <usart_baudrate_set+0x44>
 8010828:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 801082c:	4298      	cmp	r0, r3
 801082e:	d1f6      	bne.n	801081e <usart_baudrate_set+0x1e>
 8010830:	2003      	movs	r0, #3
 8010832:	f7ff fe21 	bl	8010478 <rcu_clock_freq_get>
 8010836:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 801083a:	fbb3 f1f5 	udiv	r1, r3, r5
 801083e:	b289      	uxth	r1, r1
 8010840:	60a1      	str	r1, [r4, #8]
 8010842:	bd38      	pop	{r3, r4, r5, pc}
 8010844:	2002      	movs	r0, #2
 8010846:	e7f4      	b.n	8010832 <usart_baudrate_set+0x32>
 8010848:	40004c00 	andmi	r4, r0, r0, lsl #24
 801084c:	40005000 	andmi	r5, r0, r0

08010850 <usart_parity_config>:
 8010850:	68c2      	ldr	r2, [r0, #12]
 8010852:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8010856:	60c2      	str	r2, [r0, #12]
 8010858:	68c3      	ldr	r3, [r0, #12]
 801085a:	430b      	orrs	r3, r1
 801085c:	60c3      	str	r3, [r0, #12]
 801085e:	4770      	bx	lr

08010860 <usart_word_length_set>:
 8010860:	68c2      	ldr	r2, [r0, #12]
 8010862:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8010866:	60c2      	str	r2, [r0, #12]
 8010868:	68c3      	ldr	r3, [r0, #12]
 801086a:	430b      	orrs	r3, r1
 801086c:	60c3      	str	r3, [r0, #12]
 801086e:	4770      	bx	lr

08010870 <usart_stop_bit_set>:
 8010870:	6902      	ldr	r2, [r0, #16]
 8010872:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8010876:	6102      	str	r2, [r0, #16]
 8010878:	6903      	ldr	r3, [r0, #16]
 801087a:	430b      	orrs	r3, r1
 801087c:	6103      	str	r3, [r0, #16]
 801087e:	4770      	bx	lr

08010880 <usart_transmit_config>:
 8010880:	68c3      	ldr	r3, [r0, #12]
 8010882:	f023 0308 	bic.w	r3, r3, #8
 8010886:	430b      	orrs	r3, r1
 8010888:	60c3      	str	r3, [r0, #12]
 801088a:	4770      	bx	lr

0801088c <usart_receive_config>:
 801088c:	68c3      	ldr	r3, [r0, #12]
 801088e:	f023 0304 	bic.w	r3, r3, #4
 8010892:	430b      	orrs	r3, r1
 8010894:	60c3      	str	r3, [r0, #12]
 8010896:	4770      	bx	lr

08010898 <usart_hardware_flow_rts_config>:
 8010898:	6943      	ldr	r3, [r0, #20]
 801089a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801089e:	430b      	orrs	r3, r1
 80108a0:	6143      	str	r3, [r0, #20]
 80108a2:	4770      	bx	lr

080108a4 <usart_hardware_flow_cts_config>:
 80108a4:	6943      	ldr	r3, [r0, #20]
 80108a6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80108aa:	430b      	orrs	r3, r1
 80108ac:	6143      	str	r3, [r0, #20]
 80108ae:	4770      	bx	lr

080108b0 <usart_dma_transmit_config>:
 80108b0:	6943      	ldr	r3, [r0, #20]
 80108b2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80108b6:	430b      	orrs	r3, r1
 80108b8:	6143      	str	r3, [r0, #20]
 80108ba:	4770      	bx	lr

080108bc <usart_flag_get>:
 80108bc:	098b      	lsrs	r3, r1, #6
 80108be:	5818      	ldr	r0, [r3, r0]
 80108c0:	f001 011f 	and.w	r1, r1, #31
 80108c4:	40c8      	lsrs	r0, r1
 80108c6:	f000 0001 	and.w	r0, r0, #1
 80108ca:	4770      	bx	lr

080108cc <usart_interrupt_enable>:
 80108cc:	2301      	movs	r3, #1
 80108ce:	b510      	push	{r4, lr}
 80108d0:	f3c1 1289 	ubfx	r2, r1, #6, #10
 80108d4:	5814      	ldr	r4, [r2, r0]
 80108d6:	f001 011f 	and.w	r1, r1, #31
 80108da:	fa03 f101 	lsl.w	r1, r3, r1
 80108de:	4321      	orrs	r1, r4
 80108e0:	5011      	str	r1, [r2, r0]
 80108e2:	bd10      	pop	{r4, pc}

080108e4 <usart_interrupt_disable>:
 80108e4:	2201      	movs	r2, #1
 80108e6:	b510      	push	{r4, lr}
 80108e8:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80108ec:	5823      	ldr	r3, [r4, r0]
 80108ee:	f001 011f 	and.w	r1, r1, #31
 80108f2:	fa02 f101 	lsl.w	r1, r2, r1
 80108f6:	ea23 0101 	bic.w	r1, r3, r1
 80108fa:	5021      	str	r1, [r4, r0]
 80108fc:	bd10      	pop	{r4, pc}

080108fe <usart_interrupt_flag_clear>:
 80108fe:	2201      	movs	r2, #1
 8010900:	b510      	push	{r4, lr}
 8010902:	0d8c      	lsrs	r4, r1, #22
 8010904:	5823      	ldr	r3, [r4, r0]
 8010906:	f3c1 4104 	ubfx	r1, r1, #16, #5
 801090a:	fa02 f101 	lsl.w	r1, r2, r1
 801090e:	ea23 0101 	bic.w	r1, r3, r1
 8010912:	5021      	str	r1, [r4, r0]
 8010914:	bd10      	pop	{r4, pc}
	...

08010918 <emac_start>:
 8010918:	b510      	push	{r4, lr}
 801091a:	4604      	mov	r4, r0
 801091c:	f240 6002 	movw	r0, #1538	; 0x602
 8010920:	f7ff fce4 	bl	80102ec <rcu_periph_clock_enable>
 8010924:	f240 6003 	movw	r0, #1539	; 0x603
 8010928:	f7ff fce0 	bl	80102ec <rcu_periph_clock_enable>
 801092c:	f240 6004 	movw	r0, #1540	; 0x604
 8010930:	f7ff fcdc 	bl	80102ec <rcu_periph_clock_enable>
 8010934:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010938:	2203      	movs	r2, #3
 801093a:	2118      	movs	r1, #24
 801093c:	4846      	ldr	r0, [pc, #280]	; (8010a58 <emac_start+0x140>)
 801093e:	f7ff fc45 	bl	80101cc <gpio_init>
 8010942:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010946:	f7ff fcd1 	bl	80102ec <rcu_periph_clock_enable>
 801094a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 801094e:	f7ff fcf9 	bl	8010344 <rcu_pll2_config>
 8010952:	201c      	movs	r0, #28
 8010954:	f7ff fd8e 	bl	8010474 <rcu_osci_on>
 8010958:	201c      	movs	r0, #28
 801095a:	f7ff fd2b 	bl	80103b4 <rcu_osci_stab_wait>
 801095e:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8010962:	f7ff fce5 	bl	8010330 <rcu_ckout0_config>
 8010966:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801096a:	f7ff fcb3 	bl	80102d4 <gpio_ethernet_phy_select>
 801096e:	2302      	movs	r3, #2
 8010970:	2203      	movs	r2, #3
 8010972:	2104      	movs	r1, #4
 8010974:	4838      	ldr	r0, [pc, #224]	; (8010a58 <emac_start+0x140>)
 8010976:	f7ff fc29 	bl	80101cc <gpio_init>
 801097a:	2304      	movs	r3, #4
 801097c:	2203      	movs	r2, #3
 801097e:	2118      	movs	r1, #24
 8010980:	4835      	ldr	r0, [pc, #212]	; (8010a58 <emac_start+0x140>)
 8010982:	f7ff fc23 	bl	80101cc <gpio_init>
 8010986:	2380      	movs	r3, #128	; 0x80
 8010988:	2203      	movs	r2, #3
 801098a:	2104      	movs	r1, #4
 801098c:	4832      	ldr	r0, [pc, #200]	; (8010a58 <emac_start+0x140>)
 801098e:	f7ff fc1d 	bl	80101cc <gpio_init>
 8010992:	2302      	movs	r3, #2
 8010994:	2203      	movs	r2, #3
 8010996:	2118      	movs	r1, #24
 8010998:	4830      	ldr	r0, [pc, #192]	; (8010a5c <emac_start+0x144>)
 801099a:	f7ff fc17 	bl	80101cc <gpio_init>
 801099e:	2310      	movs	r3, #16
 80109a0:	2203      	movs	r2, #3
 80109a2:	2104      	movs	r1, #4
 80109a4:	482d      	ldr	r0, [pc, #180]	; (8010a5c <emac_start+0x144>)
 80109a6:	f7ff fc11 	bl	80101cc <gpio_init>
 80109aa:	2320      	movs	r3, #32
 80109ac:	2203      	movs	r2, #3
 80109ae:	2104      	movs	r1, #4
 80109b0:	482a      	ldr	r0, [pc, #168]	; (8010a5c <emac_start+0x144>)
 80109b2:	f7ff fc0b 	bl	80101cc <gpio_init>
 80109b6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80109ba:	2203      	movs	r2, #3
 80109bc:	2118      	movs	r1, #24
 80109be:	4828      	ldr	r0, [pc, #160]	; (8010a60 <emac_start+0x148>)
 80109c0:	f7ff fc04 	bl	80101cc <gpio_init>
 80109c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80109c8:	2203      	movs	r2, #3
 80109ca:	2118      	movs	r1, #24
 80109cc:	4824      	ldr	r0, [pc, #144]	; (8010a60 <emac_start+0x148>)
 80109ce:	f7ff fbfd 	bl	80101cc <gpio_init>
 80109d2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80109d6:	2203      	movs	r2, #3
 80109d8:	2118      	movs	r1, #24
 80109da:	4821      	ldr	r0, [pc, #132]	; (8010a60 <emac_start+0x148>)
 80109dc:	f7ff fbf6 	bl	80101cc <gpio_init>
 80109e0:	f240 500e 	movw	r0, #1294	; 0x50e
 80109e4:	f7ff fc82 	bl	80102ec <rcu_periph_clock_enable>
 80109e8:	f240 500f 	movw	r0, #1295	; 0x50f
 80109ec:	f7ff fc7e 	bl	80102ec <rcu_periph_clock_enable>
 80109f0:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80109f4:	f7ff fc7a 	bl	80102ec <rcu_periph_clock_enable>
 80109f8:	f000 ff9e 	bl	8011938 <enet_deinit>
 80109fc:	f000 fbf8 	bl	80111f0 <enet_software_reset>
 8010a00:	b900      	cbnz	r0, 8010a04 <emac_start+0xec>
 8010a02:	e7fe      	b.n	8010a02 <emac_start+0xea>
 8010a04:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8010a08:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010a0c:	f44f 4090 	mov.w	r0, #18432	; 0x4800
 8010a10:	f000 fd72 	bl	80114f8 <enet_init>
 8010a14:	4b13      	ldr	r3, [pc, #76]	; (8010a64 <emac_start+0x14c>)
 8010a16:	6018      	str	r0, [r3, #0]
 8010a18:	681b      	ldr	r3, [r3, #0]
 8010a1a:	b903      	cbnz	r3, 8010a1e <emac_start+0x106>
 8010a1c:	e7fe      	b.n	8010a1c <emac_start+0x104>
 8010a1e:	4620      	mov	r0, r4
 8010a20:	f000 fade 	bl	8010fe0 <mac_address_get>
 8010a24:	4621      	mov	r1, r4
 8010a26:	2000      	movs	r0, #0
 8010a28:	f000 fcc6 	bl	80113b8 <enet_mac_address_set>
 8010a2c:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8010a30:	f000 fbf2 	bl	8011218 <enet_descriptors_chain_init>
 8010a34:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8010a38:	f000 fbee 	bl	8011218 <enet_descriptors_chain_init>
 8010a3c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010a40:	4809      	ldr	r0, [pc, #36]	; (8010a68 <emac_start+0x150>)
 8010a42:	f000 fcb3 	bl	80113ac <enet_transmit_checksum_config>
 8010a46:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010a4a:	4808      	ldr	r0, [pc, #32]	; (8010a6c <emac_start+0x154>)
 8010a4c:	f000 fcae 	bl	80113ac <enet_transmit_checksum_config>
 8010a50:	f000 feea 	bl	8011828 <enet_enable>
 8010a54:	2001      	movs	r0, #1
 8010a56:	bd10      	pop	{r4, pc}
 8010a58:	40010800 	andmi	r0, r1, r0, lsl #16
 8010a5c:	40011000 	andmi	r1, r1, r0
 8010a60:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010a64:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010a68:	2000d834 	andcs	sp, r0, r4, lsr r8
 8010a6c:	2000d844 	andcs	sp, r0, r4, asr #16

08010a70 <emac_eth_recv>:
 8010a70:	b538      	push	{r3, r4, r5, lr}
 8010a72:	4605      	mov	r5, r0
 8010a74:	f000 ff30 	bl	80118d8 <enet_rxframe_size_get>
 8010a78:	4604      	mov	r4, r0
 8010a7a:	b138      	cbz	r0, 8010a8c <emac_eth_recv+0x1c>
 8010a7c:	4b05      	ldr	r3, [pc, #20]	; (8010a94 <emac_eth_recv+0x24>)
 8010a7e:	2105      	movs	r1, #5
 8010a80:	6818      	ldr	r0, [r3, #0]
 8010a82:	f000 fed8 	bl	8011836 <enet_desc_information_get>
 8010a86:	6028      	str	r0, [r5, #0]
 8010a88:	4620      	mov	r0, r4
 8010a8a:	bd38      	pop	{r3, r4, r5, pc}
 8010a8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010a90:	e7fb      	b.n	8010a8a <emac_eth_recv+0x1a>
 8010a92:	bf00      	nop
 8010a94:	20009be8 	andcs	r9, r0, r8, ror #23

08010a98 <emac_free_pkt>:
 8010a98:	2100      	movs	r1, #0
 8010a9a:	4608      	mov	r0, r1
 8010a9c:	f000 bc04 	b.w	80112a8 <enet_frame_receive>

08010aa0 <emac_eth_send>:
 8010aa0:	f000 bc42 	b.w	8011328 <enet_frame_transmit>

08010aa4 <gd32_adc_init()>:
 8010aa4:	b510      	push	{r4, lr}
 8010aa6:	f240 6009 	movw	r0, #1545	; 0x609
 8010aaa:	4c21      	ldr	r4, [pc, #132]	; (8010b30 <gd32_adc_init()+0x8c>)
 8010aac:	f7ff fc1e 	bl	80102ec <rcu_periph_clock_enable>
 8010ab0:	2005      	movs	r0, #5
 8010ab2:	f7ff fc53 	bl	801035c <rcu_adc_clock_config>
 8010ab6:	4620      	mov	r0, r4
 8010ab8:	2201      	movs	r2, #1
 8010aba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010abe:	f000 fab1 	bl	8011024 <adc_special_function_config>
 8010ac2:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8010ac6:	4620      	mov	r0, r4
 8010ac8:	2102      	movs	r1, #2
 8010aca:	f000 fb4b 	bl	8011164 <adc_external_trigger_source_config>
 8010ace:	2100      	movs	r1, #0
 8010ad0:	4620      	mov	r0, r4
 8010ad2:	f000 facf 	bl	8011074 <adc_data_alignment_config>
 8010ad6:	2000      	movs	r0, #0
 8010ad8:	f000 fa94 	bl	8011004 <adc_mode_config>
 8010adc:	2202      	movs	r2, #2
 8010ade:	4620      	mov	r0, r4
 8010ae0:	4611      	mov	r1, r2
 8010ae2:	f000 faf3 	bl	80110cc <adc_channel_length_config>
 8010ae6:	4620      	mov	r0, r4
 8010ae8:	2307      	movs	r3, #7
 8010aea:	2210      	movs	r2, #16
 8010aec:	2100      	movs	r1, #0
 8010aee:	f000 fb0a 	bl	8011106 <adc_inserted_channel_config>
 8010af2:	2307      	movs	r3, #7
 8010af4:	4620      	mov	r0, r4
 8010af6:	2211      	movs	r2, #17
 8010af8:	2101      	movs	r1, #1
 8010afa:	f000 fb04 	bl	8011106 <adc_inserted_channel_config>
 8010afe:	2201      	movs	r2, #1
 8010b00:	2102      	movs	r1, #2
 8010b02:	4620      	mov	r0, r4
 8010b04:	f000 fb3f 	bl	8011186 <adc_external_trigger_config>
 8010b08:	f000 fad6 	bl	80110b8 <adc_tempsensor_vrefint_enable>
 8010b0c:	4620      	mov	r0, r4
 8010b0e:	f000 faba 	bl	8011086 <adc_enable>
 8010b12:	2100      	movs	r1, #0
 8010b14:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8010b18:	f000 fa4a 	bl	8010fb0 <udelay(unsigned int, unsigned int)>
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	f000 faba 	bl	8011096 <adc_calibration_enable>
 8010b22:	4620      	mov	r0, r4
 8010b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b28:	2102      	movs	r1, #2
 8010b2a:	f000 bb47 	b.w	80111bc <adc_software_trigger_enable>
 8010b2e:	bf00      	nop
 8010b30:	40012400 	andmi	r2, r1, r0, lsl #8

08010b34 <_stop() [clone .isra.0]>:
 8010b34:	b508      	push	{r3, lr}
 8010b36:	4806      	ldr	r0, [pc, #24]	; (8010b50 <_stop() [clone .isra.0]+0x1c>)
 8010b38:	f000 ff8e 	bl	8011a58 <i2c_stop_on_bus>
 8010b3c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010b40:	4a04      	ldr	r2, [pc, #16]	; (8010b54 <_stop() [clone .isra.0]+0x20>)
 8010b42:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010b46:	0589      	lsls	r1, r1, #22
 8010b48:	d501      	bpl.n	8010b4e <_stop() [clone .isra.0]+0x1a>
 8010b4a:	3b01      	subs	r3, #1
 8010b4c:	d1f9      	bne.n	8010b42 <_stop() [clone .isra.0]+0xe>
 8010b4e:	bd08      	pop	{r3, pc}
 8010b50:	40005400 	andmi	r5, r0, r0, lsl #8
 8010b54:	40005000 	andmi	r5, r0, r0

08010b58 <gd32_i2c_begin()>:
 8010b58:	b510      	push	{r4, lr}
 8010b5a:	f240 7015 	movw	r0, #1813	; 0x715
 8010b5e:	f7ff fbc5 	bl	80102ec <rcu_periph_clock_enable>
 8010b62:	4c15      	ldr	r4, [pc, #84]	; (8010bb8 <gd32_i2c_begin()+0x60>)
 8010b64:	f240 6003 	movw	r0, #1539	; 0x603
 8010b68:	f7ff fbc0 	bl	80102ec <rcu_periph_clock_enable>
 8010b6c:	f240 6003 	movw	r0, #1539	; 0x603
 8010b70:	f7ff fbbc 	bl	80102ec <rcu_periph_clock_enable>
 8010b74:	4620      	mov	r0, r4
 8010b76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010b7a:	2203      	movs	r2, #3
 8010b7c:	211c      	movs	r1, #28
 8010b7e:	f7ff fb25 	bl	80101cc <gpio_init>
 8010b82:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010b86:	2203      	movs	r2, #3
 8010b88:	4620      	mov	r0, r4
 8010b8a:	211c      	movs	r1, #28
 8010b8c:	f7ff fb1e 	bl	80101cc <gpio_init>
 8010b90:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8010b94:	2101      	movs	r1, #1
 8010b96:	2002      	movs	r0, #2
 8010b98:	f7ff fb6c 	bl	8010274 <gpio_pin_remap_config>
 8010b9c:	4620      	mov	r0, r4
 8010b9e:	4907      	ldr	r1, [pc, #28]	; (8010bbc <gd32_i2c_begin()+0x64>)
 8010ba0:	2200      	movs	r2, #0
 8010ba2:	f000 fed7 	bl	8011954 <i2c_clock_config>
 8010ba6:	4620      	mov	r0, r4
 8010ba8:	f000 ff4c 	bl	8011a44 <i2c_enable>
 8010bac:	4620      	mov	r0, r4
 8010bae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bb2:	2101      	movs	r1, #1
 8010bb4:	f000 bf2c 	b.w	8011a10 <i2c_ack_config>
 8010bb8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010bbc:	00061a80 	andeq	r1, r6, r0, lsl #21

08010bc0 <gd32_i2c_set_baudrate(unsigned int)>:
 8010bc0:	4601      	mov	r1, r0
 8010bc2:	2200      	movs	r2, #0
 8010bc4:	4801      	ldr	r0, [pc, #4]	; (8010bcc <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8010bc6:	f000 bec5 	b.w	8011954 <i2c_clock_config>
 8010bca:	bf00      	nop
 8010bcc:	40005400 	andmi	r5, r0, r0, lsl #8

08010bd0 <gd32_i2c_set_address(unsigned char)>:
 8010bd0:	4b01      	ldr	r3, [pc, #4]	; (8010bd8 <gd32_i2c_set_address(unsigned char)+0x8>)
 8010bd2:	0040      	lsls	r0, r0, #1
 8010bd4:	7018      	strb	r0, [r3, #0]
 8010bd6:	4770      	bx	lr
 8010bd8:	20009bdc 	ldrdcs	r9, [r0], -ip

08010bdc <gd32_i2c_write(char const*, unsigned int)>:
 8010bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010bde:	4604      	mov	r4, r0
 8010be0:	460f      	mov	r7, r1
 8010be2:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010be6:	4e2e      	ldr	r6, [pc, #184]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010be8:	f240 6101 	movw	r1, #1537	; 0x601
 8010bec:	4630      	mov	r0, r6
 8010bee:	f000 ff3d 	bl	8011a6c <i2c_flag_get>
 8010bf2:	b138      	cbz	r0, 8010c04 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8010bf4:	3d01      	subs	r5, #1
 8010bf6:	d1f7      	bne.n	8010be8 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8010bf8:	f7ff ff9c 	bl	8010b34 <_stop() [clone .isra.0]>
 8010bfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010c00:	4240      	negs	r0, r0
 8010c02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c04:	4826      	ldr	r0, [pc, #152]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c06:	f000 ff22 	bl	8011a4e <i2c_start_on_bus>
 8010c0a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c0e:	4e24      	ldr	r6, [pc, #144]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c10:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010c14:	4630      	mov	r0, r6
 8010c16:	f000 ff29 	bl	8011a6c <i2c_flag_get>
 8010c1a:	bb68      	cbnz	r0, 8010c78 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8010c1c:	3d01      	subs	r5, #1
 8010c1e:	d1f7      	bne.n	8010c10 <gd32_i2c_write(char const*, unsigned int)+0x34>
 8010c20:	e7ea      	b.n	8010bf8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010c22:	f240 5101 	movw	r1, #1281	; 0x501
 8010c26:	481e      	ldr	r0, [pc, #120]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c28:	f000 ff28 	bl	8011a7c <i2c_flag_clear>
 8010c2c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c30:	4e1b      	ldr	r6, [pc, #108]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c32:	f240 5107 	movw	r1, #1287	; 0x507
 8010c36:	4630      	mov	r0, r6
 8010c38:	f000 ff18 	bl	8011a6c <i2c_flag_get>
 8010c3c:	2801      	cmp	r0, #1
 8010c3e:	d114      	bne.n	8010c6a <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8010c40:	4e17      	ldr	r6, [pc, #92]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c42:	4427      	add	r7, r4
 8010c44:	42a7      	cmp	r7, r4
 8010c46:	d013      	beq.n	8010c70 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8010c48:	4630      	mov	r0, r6
 8010c4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010c4e:	f000 ff08 	bl	8011a62 <i2c_data_transmit>
 8010c52:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c56:	f240 5102 	movw	r1, #1282	; 0x502
 8010c5a:	4630      	mov	r0, r6
 8010c5c:	f000 ff06 	bl	8011a6c <i2c_flag_get>
 8010c60:	2800      	cmp	r0, #0
 8010c62:	d1ef      	bne.n	8010c44 <gd32_i2c_write(char const*, unsigned int)+0x68>
 8010c64:	3d01      	subs	r5, #1
 8010c66:	d1f6      	bne.n	8010c56 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8010c68:	e7c6      	b.n	8010bf8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010c6a:	3d01      	subs	r5, #1
 8010c6c:	d1e1      	bne.n	8010c32 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8010c6e:	e7c3      	b.n	8010bf8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010c70:	f7ff ff60 	bl	8010b34 <_stop() [clone .isra.0]>
 8010c74:	2000      	movs	r0, #0
 8010c76:	e7c3      	b.n	8010c00 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8010c78:	4b0a      	ldr	r3, [pc, #40]	; (8010ca4 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8010c7a:	f06f 0201 	mvn.w	r2, #1
 8010c7e:	7819      	ldrb	r1, [r3, #0]
 8010c80:	4807      	ldr	r0, [pc, #28]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c82:	f000 fed7 	bl	8011a34 <i2c_master_addressing>
 8010c86:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c8a:	4e05      	ldr	r6, [pc, #20]	; (8010ca0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010c8c:	f240 5101 	movw	r1, #1281	; 0x501
 8010c90:	4630      	mov	r0, r6
 8010c92:	f000 feeb 	bl	8011a6c <i2c_flag_get>
 8010c96:	2800      	cmp	r0, #0
 8010c98:	d1c3      	bne.n	8010c22 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8010c9a:	3d01      	subs	r5, #1
 8010c9c:	d1f6      	bne.n	8010c8c <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8010c9e:	e7ab      	b.n	8010bf8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010ca0:	40005400 	andmi	r5, r0, r0, lsl #8
 8010ca4:	20009bdc 	ldrdcs	r9, [r0], -ip

08010ca8 <gd32_i2c_read(char*, unsigned int)>:
 8010ca8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010cac:	4680      	mov	r8, r0
 8010cae:	460c      	mov	r4, r1
 8010cb0:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010cb4:	4f49      	ldr	r7, [pc, #292]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010cb6:	f240 6101 	movw	r1, #1537	; 0x601
 8010cba:	4638      	mov	r0, r7
 8010cbc:	f000 fed6 	bl	8011a6c <i2c_flag_get>
 8010cc0:	4605      	mov	r5, r0
 8010cc2:	b128      	cbz	r0, 8010cd0 <gd32_i2c_read(char*, unsigned int)+0x28>
 8010cc4:	3e01      	subs	r6, #1
 8010cc6:	d1f6      	bne.n	8010cb6 <gd32_i2c_read(char*, unsigned int)+0xe>
 8010cc8:	f7ff ff34 	bl	8010b34 <_stop() [clone .isra.0]>
 8010ccc:	2504      	movs	r5, #4
 8010cce:	e082      	b.n	8010dd6 <gd32_i2c_read(char*, unsigned int)+0x12e>
 8010cd0:	2c02      	cmp	r4, #2
 8010cd2:	d103      	bne.n	8010cdc <gd32_i2c_read(char*, unsigned int)+0x34>
 8010cd4:	4601      	mov	r1, r0
 8010cd6:	4841      	ldr	r0, [pc, #260]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010cd8:	f000 fea3 	bl	8011a22 <i2c_ackpos_config>
 8010cdc:	483f      	ldr	r0, [pc, #252]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010cde:	f000 feb6 	bl	8011a4e <i2c_start_on_bus>
 8010ce2:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010ce6:	4f3d      	ldr	r7, [pc, #244]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010ce8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010cec:	4638      	mov	r0, r7
 8010cee:	f000 febd 	bl	8011a6c <i2c_flag_get>
 8010cf2:	b910      	cbnz	r0, 8010cfa <gd32_i2c_read(char*, unsigned int)+0x52>
 8010cf4:	3e01      	subs	r6, #1
 8010cf6:	d1f7      	bne.n	8010ce8 <gd32_i2c_read(char*, unsigned int)+0x40>
 8010cf8:	e7e6      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010cfa:	4b39      	ldr	r3, [pc, #228]	; (8010de0 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8010cfc:	2201      	movs	r2, #1
 8010cfe:	7819      	ldrb	r1, [r3, #0]
 8010d00:	4836      	ldr	r0, [pc, #216]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d02:	f000 fe97 	bl	8011a34 <i2c_master_addressing>
 8010d06:	2c02      	cmp	r4, #2
 8010d08:	d803      	bhi.n	8010d12 <gd32_i2c_read(char*, unsigned int)+0x6a>
 8010d0a:	2100      	movs	r1, #0
 8010d0c:	4833      	ldr	r0, [pc, #204]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d0e:	f000 fe7f 	bl	8011a10 <i2c_ack_config>
 8010d12:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010d16:	4f31      	ldr	r7, [pc, #196]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d18:	f240 5101 	movw	r1, #1281	; 0x501
 8010d1c:	4638      	mov	r0, r7
 8010d1e:	f000 fea5 	bl	8011a6c <i2c_flag_get>
 8010d22:	b910      	cbnz	r0, 8010d2a <gd32_i2c_read(char*, unsigned int)+0x82>
 8010d24:	3e01      	subs	r6, #1
 8010d26:	d1f7      	bne.n	8010d18 <gd32_i2c_read(char*, unsigned int)+0x70>
 8010d28:	e7ce      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010d2a:	f240 5101 	movw	r1, #1281	; 0x501
 8010d2e:	482b      	ldr	r0, [pc, #172]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d30:	f000 fea4 	bl	8011a7c <i2c_flag_clear>
 8010d34:	2c01      	cmp	r4, #1
 8010d36:	d102      	bne.n	8010d3e <gd32_i2c_read(char*, unsigned int)+0x96>
 8010d38:	4828      	ldr	r0, [pc, #160]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d3a:	f000 fe8d 	bl	8011a58 <i2c_stop_on_bus>
 8010d3e:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010d42:	4e26      	ldr	r6, [pc, #152]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010d44:	b3ac      	cbz	r4, 8010db2 <gd32_i2c_read(char*, unsigned int)+0x10a>
 8010d46:	2c03      	cmp	r4, #3
 8010d48:	d121      	bne.n	8010d8e <gd32_i2c_read(char*, unsigned int)+0xe6>
 8010d4a:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010d4e:	f240 5102 	movw	r1, #1282	; 0x502
 8010d52:	4630      	mov	r0, r6
 8010d54:	f000 fe8a 	bl	8011a6c <i2c_flag_get>
 8010d58:	b918      	cbnz	r0, 8010d62 <gd32_i2c_read(char*, unsigned int)+0xba>
 8010d5a:	f1b9 0901 	subs.w	r9, r9, #1
 8010d5e:	d1f6      	bne.n	8010d4e <gd32_i2c_read(char*, unsigned int)+0xa6>
 8010d60:	e7b2      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010d62:	2100      	movs	r1, #0
 8010d64:	4630      	mov	r0, r6
 8010d66:	f000 fe53 	bl	8011a10 <i2c_ack_config>
 8010d6a:	f240 5106 	movw	r1, #1286	; 0x506
 8010d6e:	4630      	mov	r0, r6
 8010d70:	f000 fe7c 	bl	8011a6c <i2c_flag_get>
 8010d74:	b138      	cbz	r0, 8010d86 <gd32_i2c_read(char*, unsigned int)+0xde>
 8010d76:	4630      	mov	r0, r6
 8010d78:	f000 fe75 	bl	8011a66 <i2c_data_receive>
 8010d7c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010d80:	f808 0b01 	strb.w	r0, [r8], #1
 8010d84:	3c01      	subs	r4, #1
 8010d86:	3f01      	subs	r7, #1
 8010d88:	2f00      	cmp	r7, #0
 8010d8a:	dcdb      	bgt.n	8010d44 <gd32_i2c_read(char*, unsigned int)+0x9c>
 8010d8c:	e79c      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010d8e:	2c02      	cmp	r4, #2
 8010d90:	d1eb      	bne.n	8010d6a <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010d92:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010d96:	f240 5102 	movw	r1, #1282	; 0x502
 8010d9a:	4630      	mov	r0, r6
 8010d9c:	f000 fe66 	bl	8011a6c <i2c_flag_get>
 8010da0:	b918      	cbnz	r0, 8010daa <gd32_i2c_read(char*, unsigned int)+0x102>
 8010da2:	f1b9 0901 	subs.w	r9, r9, #1
 8010da6:	d1f6      	bne.n	8010d96 <gd32_i2c_read(char*, unsigned int)+0xee>
 8010da8:	e78e      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010daa:	4630      	mov	r0, r6
 8010dac:	f000 fe54 	bl	8011a58 <i2c_stop_on_bus>
 8010db0:	e7db      	b.n	8010d6a <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010db2:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010db6:	4a0b      	ldr	r2, [pc, #44]	; (8010de4 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010db8:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010dbc:	0589      	lsls	r1, r1, #22
 8010dbe:	d502      	bpl.n	8010dc6 <gd32_i2c_read(char*, unsigned int)+0x11e>
 8010dc0:	3b01      	subs	r3, #1
 8010dc2:	d1f9      	bne.n	8010db8 <gd32_i2c_read(char*, unsigned int)+0x110>
 8010dc4:	e782      	b.n	8010ccc <gd32_i2c_read(char*, unsigned int)+0x24>
 8010dc6:	2101      	movs	r1, #1
 8010dc8:	4804      	ldr	r0, [pc, #16]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010dca:	f000 fe21 	bl	8011a10 <i2c_ack_config>
 8010dce:	2101      	movs	r1, #1
 8010dd0:	4802      	ldr	r0, [pc, #8]	; (8010ddc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010dd2:	f000 fe26 	bl	8011a22 <i2c_ackpos_config>
 8010dd6:	4628      	mov	r0, r5
 8010dd8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010ddc:	40005400 	andmi	r5, r0, r0, lsl #8
 8010de0:	20009bdc 	ldrdcs	r9, [r0], -ip
 8010de4:	40005000 	andmi	r5, r0, r0

08010de8 <gd32_uart_begin>:
 8010de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010dea:	4604      	mov	r4, r0
 8010dec:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010df0:	461d      	mov	r5, r3
 8010df2:	460f      	mov	r7, r1
 8010df4:	4616      	mov	r6, r2
 8010df6:	f7ff fa79 	bl	80102ec <rcu_periph_clock_enable>
 8010dfa:	4b5c      	ldr	r3, [pc, #368]	; (8010f6c <gd32_uart_begin+0x184>)
 8010dfc:	429c      	cmp	r4, r3
 8010dfe:	f000 8083 	beq.w	8010f08 <gd32_uart_begin+0x120>
 8010e02:	d857      	bhi.n	8010eb4 <gd32_uart_begin+0xcc>
 8010e04:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010e08:	429c      	cmp	r4, r3
 8010e0a:	d06d      	beq.n	8010ee8 <gd32_uart_begin+0x100>
 8010e0c:	f240 7012 	movw	r0, #1810	; 0x712
 8010e10:	f7ff fa6c 	bl	80102ec <rcu_periph_clock_enable>
 8010e14:	f240 6004 	movw	r0, #1540	; 0x604
 8010e18:	f7ff fa68 	bl	80102ec <rcu_periph_clock_enable>
 8010e1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010e20:	2203      	movs	r2, #3
 8010e22:	2118      	movs	r1, #24
 8010e24:	4852      	ldr	r0, [pc, #328]	; (8010f70 <gd32_uart_begin+0x188>)
 8010e26:	f7ff f9d1 	bl	80101cc <gpio_init>
 8010e2a:	2104      	movs	r1, #4
 8010e2c:	4850      	ldr	r0, [pc, #320]	; (8010f70 <gd32_uart_begin+0x188>)
 8010e2e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010e32:	2203      	movs	r2, #3
 8010e34:	f7ff f9ca 	bl	80101cc <gpio_init>
 8010e38:	2101      	movs	r1, #1
 8010e3a:	484e      	ldr	r0, [pc, #312]	; (8010f74 <gd32_uart_begin+0x18c>)
 8010e3c:	f7ff fa1a 	bl	8010274 <gpio_pin_remap_config>
 8010e40:	4620      	mov	r0, r4
 8010e42:	f7ff fc9d 	bl	8010780 <usart_deinit>
 8010e46:	68e3      	ldr	r3, [r4, #12]
 8010e48:	4639      	mov	r1, r7
 8010e4a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010e4e:	60e3      	str	r3, [r4, #12]
 8010e50:	4620      	mov	r0, r4
 8010e52:	f7ff fcd5 	bl	8010800 <usart_baudrate_set>
 8010e56:	2e09      	cmp	r6, #9
 8010e58:	bf0c      	ite	eq
 8010e5a:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8010e5e:	2100      	movne	r1, #0
 8010e60:	4620      	mov	r0, r4
 8010e62:	f7ff fcfd 	bl	8010860 <usart_word_length_set>
 8010e66:	9b06      	ldr	r3, [sp, #24]
 8010e68:	4620      	mov	r0, r4
 8010e6a:	2b02      	cmp	r3, #2
 8010e6c:	bf0c      	ite	eq
 8010e6e:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8010e72:	2100      	movne	r1, #0
 8010e74:	f7ff fcfc 	bl	8010870 <usart_stop_bit_set>
 8010e78:	2d01      	cmp	r5, #1
 8010e7a:	d072      	beq.n	8010f62 <gd32_uart_begin+0x17a>
 8010e7c:	2d02      	cmp	r5, #2
 8010e7e:	d173      	bne.n	8010f68 <gd32_uart_begin+0x180>
 8010e80:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010e84:	4620      	mov	r0, r4
 8010e86:	f7ff fce3 	bl	8010850 <usart_parity_config>
 8010e8a:	2100      	movs	r1, #0
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	f7ff fd03 	bl	8010898 <usart_hardware_flow_rts_config>
 8010e92:	2100      	movs	r1, #0
 8010e94:	4620      	mov	r0, r4
 8010e96:	f7ff fd05 	bl	80108a4 <usart_hardware_flow_cts_config>
 8010e9a:	2104      	movs	r1, #4
 8010e9c:	4620      	mov	r0, r4
 8010e9e:	f7ff fcf5 	bl	801088c <usart_receive_config>
 8010ea2:	2108      	movs	r1, #8
 8010ea4:	4620      	mov	r0, r4
 8010ea6:	f7ff fceb 	bl	8010880 <usart_transmit_config>
 8010eaa:	68e3      	ldr	r3, [r4, #12]
 8010eac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010eb0:	60e3      	str	r3, [r4, #12]
 8010eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010eb4:	4b30      	ldr	r3, [pc, #192]	; (8010f78 <gd32_uart_begin+0x190>)
 8010eb6:	429c      	cmp	r4, r3
 8010eb8:	d03b      	beq.n	8010f32 <gd32_uart_begin+0x14a>
 8010eba:	f240 600e 	movw	r0, #1550	; 0x60e
 8010ebe:	f7ff fa15 	bl	80102ec <rcu_periph_clock_enable>
 8010ec2:	f240 6002 	movw	r0, #1538	; 0x602
 8010ec6:	f7ff fa11 	bl	80102ec <rcu_periph_clock_enable>
 8010eca:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010ece:	2203      	movs	r2, #3
 8010ed0:	2118      	movs	r1, #24
 8010ed2:	482a      	ldr	r0, [pc, #168]	; (8010f7c <gd32_uart_begin+0x194>)
 8010ed4:	f7ff f97a 	bl	80101cc <gpio_init>
 8010ed8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010edc:	2203      	movs	r2, #3
 8010ede:	2104      	movs	r1, #4
 8010ee0:	4826      	ldr	r0, [pc, #152]	; (8010f7c <gd32_uart_begin+0x194>)
 8010ee2:	f7ff f973 	bl	80101cc <gpio_init>
 8010ee6:	e7ab      	b.n	8010e40 <gd32_uart_begin+0x58>
 8010ee8:	f240 7011 	movw	r0, #1809	; 0x711
 8010eec:	f7ff f9fe 	bl	80102ec <rcu_periph_clock_enable>
 8010ef0:	f240 6002 	movw	r0, #1538	; 0x602
 8010ef4:	f7ff f9fa 	bl	80102ec <rcu_periph_clock_enable>
 8010ef8:	2304      	movs	r3, #4
 8010efa:	2203      	movs	r2, #3
 8010efc:	2118      	movs	r1, #24
 8010efe:	481f      	ldr	r0, [pc, #124]	; (8010f7c <gd32_uart_begin+0x194>)
 8010f00:	f7ff f964 	bl	80101cc <gpio_init>
 8010f04:	2308      	movs	r3, #8
 8010f06:	e7e9      	b.n	8010edc <gd32_uart_begin+0xf4>
 8010f08:	f240 7013 	movw	r0, #1811	; 0x713
 8010f0c:	f7ff f9ee 	bl	80102ec <rcu_periph_clock_enable>
 8010f10:	f240 6004 	movw	r0, #1540	; 0x604
 8010f14:	f7ff f9ea 	bl	80102ec <rcu_periph_clock_enable>
 8010f18:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010f1c:	2203      	movs	r2, #3
 8010f1e:	2118      	movs	r1, #24
 8010f20:	4813      	ldr	r0, [pc, #76]	; (8010f70 <gd32_uart_begin+0x188>)
 8010f22:	f7ff f953 	bl	80101cc <gpio_init>
 8010f26:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010f2a:	2203      	movs	r2, #3
 8010f2c:	2104      	movs	r1, #4
 8010f2e:	4810      	ldr	r0, [pc, #64]	; (8010f70 <gd32_uart_begin+0x188>)
 8010f30:	e7d7      	b.n	8010ee2 <gd32_uart_begin+0xfa>
 8010f32:	f240 7014 	movw	r0, #1812	; 0x714
 8010f36:	f7ff f9d9 	bl	80102ec <rcu_periph_clock_enable>
 8010f3a:	f240 6004 	movw	r0, #1540	; 0x604
 8010f3e:	f7ff f9d5 	bl	80102ec <rcu_periph_clock_enable>
 8010f42:	f240 6005 	movw	r0, #1541	; 0x605
 8010f46:	f7ff f9d1 	bl	80102ec <rcu_periph_clock_enable>
 8010f4a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010f4e:	2203      	movs	r2, #3
 8010f50:	2118      	movs	r1, #24
 8010f52:	4807      	ldr	r0, [pc, #28]	; (8010f70 <gd32_uart_begin+0x188>)
 8010f54:	f7ff f93a 	bl	80101cc <gpio_init>
 8010f58:	2304      	movs	r3, #4
 8010f5a:	2203      	movs	r2, #3
 8010f5c:	4619      	mov	r1, r3
 8010f5e:	4808      	ldr	r0, [pc, #32]	; (8010f80 <gd32_uart_begin+0x198>)
 8010f60:	e7bf      	b.n	8010ee2 <gd32_uart_begin+0xfa>
 8010f62:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8010f66:	e78d      	b.n	8010e84 <gd32_uart_begin+0x9c>
 8010f68:	2100      	movs	r1, #0
 8010f6a:	e78b      	b.n	8010e84 <gd32_uart_begin+0x9c>
 8010f6c:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010f70:	40011000 	andmi	r1, r1, r0
 8010f74:	00140010 	andseq	r0, r4, r0, lsl r0
 8010f78:	40005000 	andmi	r5, r0, r0
 8010f7c:	40010800 	andmi	r0, r1, r0, lsl #16
 8010f80:	40011400 	andmi	r1, r1, r0, lsl #8

08010f84 <micros_init()>:
 8010f84:	4770      	bx	lr
	...

08010f88 <udelay_init()>:
 8010f88:	4a07      	ldr	r2, [pc, #28]	; (8010fa8 <udelay_init()+0x20>)
 8010f8a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010f8e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010f92:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8010f96:	2200      	movs	r2, #0
 8010f98:	4b04      	ldr	r3, [pc, #16]	; (8010fac <udelay_init()+0x24>)
 8010f9a:	605a      	str	r2, [r3, #4]
 8010f9c:	681a      	ldr	r2, [r3, #0]
 8010f9e:	f042 0201 	orr.w	r2, r2, #1
 8010fa2:	601a      	str	r2, [r3, #0]
 8010fa4:	4770      	bx	lr
 8010fa6:	bf00      	nop
 8010fa8:	e000ed00 	and	lr, r0, r0, lsl #26
 8010fac:	e0001000 	and	r1, r0, r0

08010fb0 <udelay(unsigned int, unsigned int)>:
 8010fb0:	236c      	movs	r3, #108	; 0x6c
 8010fb2:	b510      	push	{r4, lr}
 8010fb4:	4358      	muls	r0, r3
 8010fb6:	b909      	cbnz	r1, 8010fbc <udelay(unsigned int, unsigned int)+0xc>
 8010fb8:	4b08      	ldr	r3, [pc, #32]	; (8010fdc <udelay(unsigned int, unsigned int)+0x2c>)
 8010fba:	6859      	ldr	r1, [r3, #4]
 8010fbc:	2300      	movs	r3, #0
 8010fbe:	4c07      	ldr	r4, [pc, #28]	; (8010fdc <udelay(unsigned int, unsigned int)+0x2c>)
 8010fc0:	6862      	ldr	r2, [r4, #4]
 8010fc2:	4291      	cmp	r1, r2
 8010fc4:	d0fc      	beq.n	8010fc0 <udelay(unsigned int, unsigned int)+0x10>
 8010fc6:	bf28      	it	cs
 8010fc8:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8010fcc:	1a5b      	subs	r3, r3, r1
 8010fce:	4413      	add	r3, r2
 8010fd0:	4283      	cmp	r3, r0
 8010fd2:	d300      	bcc.n	8010fd6 <udelay(unsigned int, unsigned int)+0x26>
 8010fd4:	bd10      	pop	{r4, pc}
 8010fd6:	4611      	mov	r1, r2
 8010fd8:	e7f2      	b.n	8010fc0 <udelay(unsigned int, unsigned int)+0x10>
 8010fda:	bf00      	nop
 8010fdc:	e0001000 	and	r1, r0, r0

08010fe0 <mac_address_get>:
 8010fe0:	2102      	movs	r1, #2
 8010fe2:	4a07      	ldr	r2, [pc, #28]	; (8011000 <mac_address_get+0x20>)
 8010fe4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010fe8:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010fec:	7001      	strb	r1, [r0, #0]
 8010fee:	7042      	strb	r2, [r0, #1]
 8010ff0:	0e1a      	lsrs	r2, r3, #24
 8010ff2:	7082      	strb	r2, [r0, #2]
 8010ff4:	0c1a      	lsrs	r2, r3, #16
 8010ff6:	70c2      	strb	r2, [r0, #3]
 8010ff8:	0a1a      	lsrs	r2, r3, #8
 8010ffa:	7102      	strb	r2, [r0, #4]
 8010ffc:	7143      	strb	r3, [r0, #5]
 8010ffe:	4770      	bx	lr
 8011000:	1ffff000 	svcne	0x00fff000

08011004 <adc_mode_config>:
 8011004:	4b06      	ldr	r3, [pc, #24]	; (8011020 <adc_mode_config+0x1c>)
 8011006:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 801100a:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 801100e:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8011012:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8011016:	4302      	orrs	r2, r0
 8011018:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801101c:	4770      	bx	lr
 801101e:	bf00      	nop
 8011020:	40012000 	andmi	r2, r1, r0

08011024 <adc_special_function_config>:
 8011024:	b510      	push	{r4, lr}
 8011026:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801102a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801102e:	f001 0102 	and.w	r1, r1, #2
 8011032:	b17a      	cbz	r2, 8011054 <adc_special_function_config+0x30>
 8011034:	b11b      	cbz	r3, 801103e <adc_special_function_config+0x1a>
 8011036:	6843      	ldr	r3, [r0, #4]
 8011038:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801103c:	6043      	str	r3, [r0, #4]
 801103e:	b11c      	cbz	r4, 8011048 <adc_special_function_config+0x24>
 8011040:	6843      	ldr	r3, [r0, #4]
 8011042:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8011046:	6043      	str	r3, [r0, #4]
 8011048:	b119      	cbz	r1, 8011052 <adc_special_function_config+0x2e>
 801104a:	6883      	ldr	r3, [r0, #8]
 801104c:	f043 0302 	orr.w	r3, r3, #2
 8011050:	6083      	str	r3, [r0, #8]
 8011052:	bd10      	pop	{r4, pc}
 8011054:	b11b      	cbz	r3, 801105e <adc_special_function_config+0x3a>
 8011056:	6843      	ldr	r3, [r0, #4]
 8011058:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801105c:	6043      	str	r3, [r0, #4]
 801105e:	b11c      	cbz	r4, 8011068 <adc_special_function_config+0x44>
 8011060:	6843      	ldr	r3, [r0, #4]
 8011062:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8011066:	6043      	str	r3, [r0, #4]
 8011068:	2900      	cmp	r1, #0
 801106a:	d0f2      	beq.n	8011052 <adc_special_function_config+0x2e>
 801106c:	6883      	ldr	r3, [r0, #8]
 801106e:	f023 0302 	bic.w	r3, r3, #2
 8011072:	e7ed      	b.n	8011050 <adc_special_function_config+0x2c>

08011074 <adc_data_alignment_config>:
 8011074:	6883      	ldr	r3, [r0, #8]
 8011076:	b119      	cbz	r1, 8011080 <adc_data_alignment_config+0xc>
 8011078:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801107c:	6083      	str	r3, [r0, #8]
 801107e:	4770      	bx	lr
 8011080:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011084:	e7fa      	b.n	801107c <adc_data_alignment_config+0x8>

08011086 <adc_enable>:
 8011086:	6883      	ldr	r3, [r0, #8]
 8011088:	07db      	lsls	r3, r3, #31
 801108a:	bf5e      	ittt	pl
 801108c:	6883      	ldrpl	r3, [r0, #8]
 801108e:	f043 0301 	orrpl.w	r3, r3, #1
 8011092:	6083      	strpl	r3, [r0, #8]
 8011094:	4770      	bx	lr

08011096 <adc_calibration_enable>:
 8011096:	6883      	ldr	r3, [r0, #8]
 8011098:	f100 0208 	add.w	r2, r0, #8
 801109c:	f043 0308 	orr.w	r3, r3, #8
 80110a0:	6083      	str	r3, [r0, #8]
 80110a2:	6813      	ldr	r3, [r2, #0]
 80110a4:	0719      	lsls	r1, r3, #28
 80110a6:	d4fc      	bmi.n	80110a2 <adc_calibration_enable+0xc>
 80110a8:	6883      	ldr	r3, [r0, #8]
 80110aa:	f043 0304 	orr.w	r3, r3, #4
 80110ae:	6083      	str	r3, [r0, #8]
 80110b0:	6813      	ldr	r3, [r2, #0]
 80110b2:	075b      	lsls	r3, r3, #29
 80110b4:	d4fc      	bmi.n	80110b0 <adc_calibration_enable+0x1a>
 80110b6:	4770      	bx	lr

080110b8 <adc_tempsensor_vrefint_enable>:
 80110b8:	4a03      	ldr	r2, [pc, #12]	; (80110c8 <adc_tempsensor_vrefint_enable+0x10>)
 80110ba:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80110be:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80110c2:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80110c6:	4770      	bx	lr
 80110c8:	40012000 	andmi	r2, r1, r0

080110cc <adc_channel_length_config>:
 80110cc:	2901      	cmp	r1, #1
 80110ce:	d002      	beq.n	80110d6 <adc_channel_length_config+0xa>
 80110d0:	2902      	cmp	r1, #2
 80110d2:	d00c      	beq.n	80110ee <adc_channel_length_config+0x22>
 80110d4:	4770      	bx	lr
 80110d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80110d8:	3a01      	subs	r2, #1
 80110da:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80110de:	62c3      	str	r3, [r0, #44]	; 0x2c
 80110e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80110e2:	0512      	lsls	r2, r2, #20
 80110e4:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80110e8:	431a      	orrs	r2, r3
 80110ea:	62c2      	str	r2, [r0, #44]	; 0x2c
 80110ec:	4770      	bx	lr
 80110ee:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80110f0:	3a01      	subs	r2, #1
 80110f2:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80110f6:	6383      	str	r3, [r0, #56]	; 0x38
 80110f8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80110fa:	0512      	lsls	r2, r2, #20
 80110fc:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8011100:	431a      	orrs	r2, r3
 8011102:	6382      	str	r2, [r0, #56]	; 0x38
 8011104:	4770      	bx	lr

08011106 <adc_inserted_channel_config>:
 8011106:	b530      	push	{r4, r5, lr}
 8011108:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801110a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801110c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8011110:	1a61      	subs	r1, r4, r1
 8011112:	f06f 0404 	mvn.w	r4, #4
 8011116:	4361      	muls	r1, r4
 8011118:	241f      	movs	r4, #31
 801111a:	310f      	adds	r1, #15
 801111c:	408c      	lsls	r4, r1
 801111e:	ea25 0504 	bic.w	r5, r5, r4
 8011122:	fa02 f101 	lsl.w	r1, r2, r1
 8011126:	4329      	orrs	r1, r5
 8011128:	2a09      	cmp	r2, #9
 801112a:	6381      	str	r1, [r0, #56]	; 0x38
 801112c:	d80b      	bhi.n	8011146 <adc_inserted_channel_config+0x40>
 801112e:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8011132:	2207      	movs	r2, #7
 8011134:	6904      	ldr	r4, [r0, #16]
 8011136:	408a      	lsls	r2, r1
 8011138:	ea24 0402 	bic.w	r4, r4, r2
 801113c:	fa03 f201 	lsl.w	r2, r3, r1
 8011140:	4322      	orrs	r2, r4
 8011142:	6102      	str	r2, [r0, #16]
 8011144:	bd30      	pop	{r4, r5, pc}
 8011146:	2a11      	cmp	r2, #17
 8011148:	d8fc      	bhi.n	8011144 <adc_inserted_channel_config+0x3e>
 801114a:	2407      	movs	r4, #7
 801114c:	3a0a      	subs	r2, #10
 801114e:	68c1      	ldr	r1, [r0, #12]
 8011150:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011154:	4094      	lsls	r4, r2
 8011156:	ea21 0104 	bic.w	r1, r1, r4
 801115a:	fa03 f202 	lsl.w	r2, r3, r2
 801115e:	430a      	orrs	r2, r1
 8011160:	60c2      	str	r2, [r0, #12]
 8011162:	e7ef      	b.n	8011144 <adc_inserted_channel_config+0x3e>

08011164 <adc_external_trigger_source_config>:
 8011164:	2901      	cmp	r1, #1
 8011166:	d002      	beq.n	801116e <adc_external_trigger_source_config+0xa>
 8011168:	2902      	cmp	r1, #2
 801116a:	d008      	beq.n	801117e <adc_external_trigger_source_config+0x1a>
 801116c:	4770      	bx	lr
 801116e:	6883      	ldr	r3, [r0, #8]
 8011170:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8011174:	6083      	str	r3, [r0, #8]
 8011176:	6883      	ldr	r3, [r0, #8]
 8011178:	431a      	orrs	r2, r3
 801117a:	6082      	str	r2, [r0, #8]
 801117c:	4770      	bx	lr
 801117e:	6883      	ldr	r3, [r0, #8]
 8011180:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8011184:	e7f6      	b.n	8011174 <adc_external_trigger_source_config+0x10>

08011186 <adc_external_trigger_config>:
 8011186:	f001 0301 	and.w	r3, r1, #1
 801118a:	f001 0102 	and.w	r1, r1, #2
 801118e:	b152      	cbz	r2, 80111a6 <adc_external_trigger_config+0x20>
 8011190:	b11b      	cbz	r3, 801119a <adc_external_trigger_config+0x14>
 8011192:	6883      	ldr	r3, [r0, #8]
 8011194:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011198:	6083      	str	r3, [r0, #8]
 801119a:	b119      	cbz	r1, 80111a4 <adc_external_trigger_config+0x1e>
 801119c:	6883      	ldr	r3, [r0, #8]
 801119e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80111a2:	6083      	str	r3, [r0, #8]
 80111a4:	4770      	bx	lr
 80111a6:	b11b      	cbz	r3, 80111b0 <adc_external_trigger_config+0x2a>
 80111a8:	6883      	ldr	r3, [r0, #8]
 80111aa:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80111ae:	6083      	str	r3, [r0, #8]
 80111b0:	2900      	cmp	r1, #0
 80111b2:	d0f7      	beq.n	80111a4 <adc_external_trigger_config+0x1e>
 80111b4:	6883      	ldr	r3, [r0, #8]
 80111b6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80111ba:	e7f2      	b.n	80111a2 <adc_external_trigger_config+0x1c>

080111bc <adc_software_trigger_enable>:
 80111bc:	07ca      	lsls	r2, r1, #31
 80111be:	bf42      	ittt	mi
 80111c0:	6883      	ldrmi	r3, [r0, #8]
 80111c2:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80111c6:	6083      	strmi	r3, [r0, #8]
 80111c8:	078b      	lsls	r3, r1, #30
 80111ca:	bf42      	ittt	mi
 80111cc:	6883      	ldrmi	r3, [r0, #8]
 80111ce:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80111d2:	6083      	strmi	r3, [r0, #8]
 80111d4:	4770      	bx	lr

080111d6 <enet_delay>:
 80111d6:	2300      	movs	r3, #0
 80111d8:	b082      	sub	sp, #8
 80111da:	9301      	str	r3, [sp, #4]
 80111dc:	9001      	str	r0, [sp, #4]
 80111de:	9b01      	ldr	r3, [sp, #4]
 80111e0:	b90b      	cbnz	r3, 80111e6 <enet_delay+0x10>
 80111e2:	b002      	add	sp, #8
 80111e4:	4770      	bx	lr
 80111e6:	9b01      	ldr	r3, [sp, #4]
 80111e8:	3b01      	subs	r3, #1
 80111ea:	9301      	str	r3, [sp, #4]
 80111ec:	e7f7      	b.n	80111de <enet_delay+0x8>
	...

080111f0 <enet_software_reset>:
 80111f0:	4b07      	ldr	r3, [pc, #28]	; (8011210 <enet_software_reset+0x20>)
 80111f2:	681a      	ldr	r2, [r3, #0]
 80111f4:	f042 0201 	orr.w	r2, r2, #1
 80111f8:	601a      	str	r2, [r3, #0]
 80111fa:	4a06      	ldr	r2, [pc, #24]	; (8011214 <enet_software_reset+0x24>)
 80111fc:	6819      	ldr	r1, [r3, #0]
 80111fe:	07c9      	lsls	r1, r1, #31
 8011200:	d501      	bpl.n	8011206 <enet_software_reset+0x16>
 8011202:	3a01      	subs	r2, #1
 8011204:	d1fa      	bne.n	80111fc <enet_software_reset+0xc>
 8011206:	6818      	ldr	r0, [r3, #0]
 8011208:	43c0      	mvns	r0, r0
 801120a:	f000 0001 	and.w	r0, r0, #1
 801120e:	4770      	bx	lr
 8011210:	40029000 	andmi	r9, r2, r0
 8011214:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011218 <enet_descriptors_chain_init>:
 8011218:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 801121c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801121e:	4a19      	ldr	r2, [pc, #100]	; (8011284 <enet_descriptors_chain_init+0x6c>)
 8011220:	d125      	bne.n	801126e <enet_descriptors_chain_init+0x56>
 8011222:	2500      	movs	r5, #0
 8011224:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8011228:	2002      	movs	r0, #2
 801122a:	4b17      	ldr	r3, [pc, #92]	; (8011288 <enet_descriptors_chain_init+0x70>)
 801122c:	4c17      	ldr	r4, [pc, #92]	; (801128c <enet_descriptors_chain_init+0x74>)
 801122e:	6113      	str	r3, [r2, #16]
 8011230:	4a17      	ldr	r2, [pc, #92]	; (8011290 <enet_descriptors_chain_init+0x78>)
 8011232:	6013      	str	r3, [r2, #0]
 8011234:	2200      	movs	r2, #0
 8011236:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801123a:	4916      	ldr	r1, [pc, #88]	; (8011294 <enet_descriptors_chain_init+0x7c>)
 801123c:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8011240:	600a      	str	r2, [r1, #0]
 8011242:	4915      	ldr	r1, [pc, #84]	; (8011298 <enet_descriptors_chain_init+0x80>)
 8011244:	600a      	str	r2, [r1, #0]
 8011246:	f103 0110 	add.w	r1, r3, #16
 801124a:	fb0e 4702 	mla	r7, lr, r2, r4
 801124e:	f841 7c08 	str.w	r7, [r1, #-8]
 8011252:	4594      	cmp	ip, r2
 8011254:	bf94      	ite	ls
 8011256:	461f      	movls	r7, r3
 8011258:	460f      	movhi	r7, r1
 801125a:	3201      	adds	r2, #1
 801125c:	4290      	cmp	r0, r2
 801125e:	e941 6504 	strd	r6, r5, [r1, #-16]
 8011262:	f841 7c04 	str.w	r7, [r1, #-4]
 8011266:	f101 0110 	add.w	r1, r1, #16
 801126a:	d1ee      	bne.n	801124a <enet_descriptors_chain_init+0x32>
 801126c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801126e:	4b0b      	ldr	r3, [pc, #44]	; (801129c <enet_descriptors_chain_init+0x84>)
 8011270:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8011274:	60d3      	str	r3, [r2, #12]
 8011276:	4a0a      	ldr	r2, [pc, #40]	; (80112a0 <enet_descriptors_chain_init+0x88>)
 8011278:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 801127c:	2008      	movs	r0, #8
 801127e:	4c09      	ldr	r4, [pc, #36]	; (80112a4 <enet_descriptors_chain_init+0x8c>)
 8011280:	6013      	str	r3, [r2, #0]
 8011282:	e7d7      	b.n	8011234 <enet_descriptors_chain_init+0x1c>
 8011284:	40029000 	andmi	r9, r2, r0
 8011288:	2000d834 	andcs	sp, r0, r4, lsr r8
 801128c:	2000cc4c 	andcs	ip, r0, ip, asr #24
 8011290:	20009bec 	andcs	r9, r0, ip, ror #23
 8011294:	20009be0 	andcs	r9, r0, r0, ror #23
 8011298:	20009be4 	andcs	r9, r0, r4, ror #23
 801129c:	2000cbcc 	andcs	ip, r0, ip, asr #23
 80112a0:	20009be8 	andcs	r9, r0, r8, ror #23
 80112a4:	20009c2c 	andcs	r9, r0, ip, lsr #24

080112a8 <enet_frame_receive>:
 80112a8:	4a1d      	ldr	r2, [pc, #116]	; (8011320 <enet_frame_receive+0x78>)
 80112aa:	b510      	push	{r4, lr}
 80112ac:	6813      	ldr	r3, [r2, #0]
 80112ae:	681b      	ldr	r3, [r3, #0]
 80112b0:	2b00      	cmp	r3, #0
 80112b2:	db33      	blt.n	801131c <enet_frame_receive+0x74>
 80112b4:	b970      	cbnz	r0, 80112d4 <enet_frame_receive+0x2c>
 80112b6:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80112ba:	6813      	ldr	r3, [r2, #0]
 80112bc:	6019      	str	r1, [r3, #0]
 80112be:	4919      	ldr	r1, [pc, #100]	; (8011324 <enet_frame_receive+0x7c>)
 80112c0:	6948      	ldr	r0, [r1, #20]
 80112c2:	0604      	lsls	r4, r0, #24
 80112c4:	d419      	bmi.n	80112fa <enet_frame_receive+0x52>
 80112c6:	6859      	ldr	r1, [r3, #4]
 80112c8:	0448      	lsls	r0, r1, #17
 80112ca:	d51b      	bpl.n	8011304 <enet_frame_receive+0x5c>
 80112cc:	68db      	ldr	r3, [r3, #12]
 80112ce:	2001      	movs	r0, #1
 80112d0:	6013      	str	r3, [r2, #0]
 80112d2:	bd10      	pop	{r4, pc}
 80112d4:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80112d8:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 80112dc:	d11e      	bne.n	801131c <enet_frame_receive+0x74>
 80112de:	f3c3 430d 	ubfx	r3, r3, #16, #14
 80112e2:	3b04      	subs	r3, #4
 80112e4:	428b      	cmp	r3, r1
 80112e6:	d819      	bhi.n	801131c <enet_frame_receive+0x74>
 80112e8:	2100      	movs	r1, #0
 80112ea:	4299      	cmp	r1, r3
 80112ec:	6814      	ldr	r4, [r2, #0]
 80112ee:	d2e2      	bcs.n	80112b6 <enet_frame_receive+0xe>
 80112f0:	68a4      	ldr	r4, [r4, #8]
 80112f2:	5d0c      	ldrb	r4, [r1, r4]
 80112f4:	5444      	strb	r4, [r0, r1]
 80112f6:	3101      	adds	r1, #1
 80112f8:	e7f7      	b.n	80112ea <enet_frame_receive+0x42>
 80112fa:	2080      	movs	r0, #128	; 0x80
 80112fc:	6148      	str	r0, [r1, #20]
 80112fe:	2000      	movs	r0, #0
 8011300:	6088      	str	r0, [r1, #8]
 8011302:	e7e0      	b.n	80112c6 <enet_frame_receive+0x1e>
 8011304:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8011308:	4906      	ldr	r1, [pc, #24]	; (8011324 <enet_frame_receive+0x7c>)
 801130a:	bf05      	ittet	eq
 801130c:	3310      	addeq	r3, #16
 801130e:	6809      	ldreq	r1, [r1, #0]
 8011310:	68cb      	ldrne	r3, [r1, #12]
 8011312:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011316:	bf08      	it	eq
 8011318:	185b      	addeq	r3, r3, r1
 801131a:	e7d8      	b.n	80112ce <enet_frame_receive+0x26>
 801131c:	2000      	movs	r0, #0
 801131e:	e7d8      	b.n	80112d2 <enet_frame_receive+0x2a>
 8011320:	20009be8 	andcs	r9, r0, r8, ror #23
 8011324:	40029000 	andmi	r9, r2, r0

08011328 <enet_frame_transmit>:
 8011328:	4a1e      	ldr	r2, [pc, #120]	; (80113a4 <enet_frame_transmit+0x7c>)
 801132a:	b530      	push	{r4, r5, lr}
 801132c:	6813      	ldr	r3, [r2, #0]
 801132e:	681b      	ldr	r3, [r3, #0]
 8011330:	2b00      	cmp	r3, #0
 8011332:	db34      	blt.n	801139e <enet_frame_transmit+0x76>
 8011334:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8011338:	4299      	cmp	r1, r3
 801133a:	d830      	bhi.n	801139e <enet_frame_transmit+0x76>
 801133c:	b9e8      	cbnz	r0, 801137a <enet_frame_transmit+0x52>
 801133e:	6813      	ldr	r3, [r2, #0]
 8011340:	4819      	ldr	r0, [pc, #100]	; (80113a8 <enet_frame_transmit+0x80>)
 8011342:	6059      	str	r1, [r3, #4]
 8011344:	6819      	ldr	r1, [r3, #0]
 8011346:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801134a:	6019      	str	r1, [r3, #0]
 801134c:	6941      	ldr	r1, [r0, #20]
 801134e:	6944      	ldr	r4, [r0, #20]
 8011350:	f001 0104 	and.w	r1, r1, #4
 8011354:	f004 0420 	and.w	r4, r4, #32
 8011358:	4321      	orrs	r1, r4
 801135a:	d110      	bne.n	801137e <enet_frame_transmit+0x56>
 801135c:	6819      	ldr	r1, [r3, #0]
 801135e:	02c8      	lsls	r0, r1, #11
 8011360:	d511      	bpl.n	8011386 <enet_frame_transmit+0x5e>
 8011362:	68db      	ldr	r3, [r3, #12]
 8011364:	2001      	movs	r0, #1
 8011366:	6013      	str	r3, [r2, #0]
 8011368:	bd30      	pop	{r4, r5, pc}
 801136a:	5cc5      	ldrb	r5, [r0, r3]
 801136c:	68a4      	ldr	r4, [r4, #8]
 801136e:	551d      	strb	r5, [r3, r4]
 8011370:	3301      	adds	r3, #1
 8011372:	428b      	cmp	r3, r1
 8011374:	6814      	ldr	r4, [r2, #0]
 8011376:	d1f8      	bne.n	801136a <enet_frame_transmit+0x42>
 8011378:	e7e1      	b.n	801133e <enet_frame_transmit+0x16>
 801137a:	2300      	movs	r3, #0
 801137c:	e7f9      	b.n	8011372 <enet_frame_transmit+0x4a>
 801137e:	6141      	str	r1, [r0, #20]
 8011380:	2100      	movs	r1, #0
 8011382:	6041      	str	r1, [r0, #4]
 8011384:	e7ea      	b.n	801135c <enet_frame_transmit+0x34>
 8011386:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 801138a:	4907      	ldr	r1, [pc, #28]	; (80113a8 <enet_frame_transmit+0x80>)
 801138c:	bf05      	ittet	eq
 801138e:	3310      	addeq	r3, #16
 8011390:	6809      	ldreq	r1, [r1, #0]
 8011392:	690b      	ldrne	r3, [r1, #16]
 8011394:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011398:	bf08      	it	eq
 801139a:	185b      	addeq	r3, r3, r1
 801139c:	e7e2      	b.n	8011364 <enet_frame_transmit+0x3c>
 801139e:	2000      	movs	r0, #0
 80113a0:	e7e2      	b.n	8011368 <enet_frame_transmit+0x40>
 80113a2:	bf00      	nop
 80113a4:	20009bec 	andcs	r9, r0, ip, ror #23
 80113a8:	40029000 	andmi	r9, r2, r0

080113ac <enet_transmit_checksum_config>:
 80113ac:	6803      	ldr	r3, [r0, #0]
 80113ae:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80113b2:	430b      	orrs	r3, r1
 80113b4:	6003      	str	r3, [r0, #0]
 80113b6:	4770      	bx	lr

080113b8 <enet_mac_address_set>:
 80113b8:	888a      	ldrh	r2, [r1, #4]
 80113ba:	4b03      	ldr	r3, [pc, #12]	; (80113c8 <enet_mac_address_set+0x10>)
 80113bc:	50c2      	str	r2, [r0, r3]
 80113be:	680a      	ldr	r2, [r1, #0]
 80113c0:	3304      	adds	r3, #4
 80113c2:	50c2      	str	r2, [r0, r3]
 80113c4:	4770      	bx	lr
 80113c6:	bf00      	nop
 80113c8:	40028040 	andmi	r8, r2, r0, asr #32

080113cc <enet_rx_enable>:
 80113cc:	4a05      	ldr	r2, [pc, #20]	; (80113e4 <enet_rx_enable+0x18>)
 80113ce:	6813      	ldr	r3, [r2, #0]
 80113d0:	f043 0304 	orr.w	r3, r3, #4
 80113d4:	6013      	str	r3, [r2, #0]
 80113d6:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80113da:	6993      	ldr	r3, [r2, #24]
 80113dc:	f043 0302 	orr.w	r3, r3, #2
 80113e0:	6193      	str	r3, [r2, #24]
 80113e2:	4770      	bx	lr
 80113e4:	40028000 	andmi	r8, r2, r0

080113e8 <enet_phy_write_read>:
 80113e8:	b530      	push	{r4, r5, lr}
 80113ea:	4604      	mov	r4, r0
 80113ec:	4d13      	ldr	r5, [pc, #76]	; (801143c <enet_phy_write_read+0x54>)
 80113ee:	0192      	lsls	r2, r2, #6
 80113f0:	6928      	ldr	r0, [r5, #16]
 80113f2:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 80113f6:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80113fa:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80113fe:	4302      	orrs	r2, r0
 8011400:	02c9      	lsls	r1, r1, #11
 8011402:	b289      	uxth	r1, r1
 8011404:	2c02      	cmp	r4, #2
 8011406:	ea42 0204 	orr.w	r2, r2, r4
 801140a:	ea42 0201 	orr.w	r2, r2, r1
 801140e:	bf08      	it	eq
 8011410:	8819      	ldrheq	r1, [r3, #0]
 8011412:	f042 0201 	orr.w	r2, r2, #1
 8011416:	bf08      	it	eq
 8011418:	6169      	streq	r1, [r5, #20]
 801141a:	612a      	str	r2, [r5, #16]
 801141c:	4907      	ldr	r1, [pc, #28]	; (801143c <enet_phy_write_read+0x54>)
 801141e:	4a08      	ldr	r2, [pc, #32]	; (8011440 <enet_phy_write_read+0x58>)
 8011420:	6908      	ldr	r0, [r1, #16]
 8011422:	07c0      	lsls	r0, r0, #31
 8011424:	d501      	bpl.n	801142a <enet_phy_write_read+0x42>
 8011426:	3a01      	subs	r2, #1
 8011428:	d1fa      	bne.n	8011420 <enet_phy_write_read+0x38>
 801142a:	690a      	ldr	r2, [r1, #16]
 801142c:	43d2      	mvns	r2, r2
 801142e:	f002 0001 	and.w	r0, r2, #1
 8011432:	b90c      	cbnz	r4, 8011438 <enet_phy_write_read+0x50>
 8011434:	694a      	ldr	r2, [r1, #20]
 8011436:	801a      	strh	r2, [r3, #0]
 8011438:	bd30      	pop	{r4, r5, pc}
 801143a:	bf00      	nop
 801143c:	40028000 	andmi	r8, r2, r0
 8011440:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011444 <enet_phy_config>:
 8011444:	4b22      	ldr	r3, [pc, #136]	; (80114d0 <enet_phy_config+0x8c>)
 8011446:	b513      	push	{r0, r1, r4, lr}
 8011448:	2001      	movs	r0, #1
 801144a:	691c      	ldr	r4, [r3, #16]
 801144c:	f7ff f814 	bl	8010478 <rcu_clock_freq_get>
 8011450:	4b20      	ldr	r3, [pc, #128]	; (80114d4 <enet_phy_config+0x90>)
 8011452:	4a21      	ldr	r2, [pc, #132]	; (80114d8 <enet_phy_config+0x94>)
 8011454:	4403      	add	r3, r0
 8011456:	4293      	cmp	r3, r2
 8011458:	f024 041c 	bic.w	r4, r4, #28
 801145c:	d220      	bcs.n	80114a0 <enet_phy_config+0x5c>
 801145e:	f044 0408 	orr.w	r4, r4, #8
 8011462:	4b1b      	ldr	r3, [pc, #108]	; (80114d0 <enet_phy_config+0x8c>)
 8011464:	2200      	movs	r2, #0
 8011466:	611c      	str	r4, [r3, #16]
 8011468:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801146c:	2101      	movs	r1, #1
 801146e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011472:	2002      	movs	r0, #2
 8011474:	f10d 0306 	add.w	r3, sp, #6
 8011478:	f7ff ffb6 	bl	80113e8 <enet_phy_write_read>
 801147c:	b310      	cbz	r0, 80114c4 <enet_phy_config+0x80>
 801147e:	2200      	movs	r2, #0
 8011480:	4816      	ldr	r0, [pc, #88]	; (80114dc <enet_phy_config+0x98>)
 8011482:	f7ff fea8 	bl	80111d6 <enet_delay>
 8011486:	2101      	movs	r1, #1
 8011488:	4610      	mov	r0, r2
 801148a:	f10d 0306 	add.w	r3, sp, #6
 801148e:	f7ff ffab 	bl	80113e8 <enet_phy_write_read>
 8011492:	b1b8      	cbz	r0, 80114c4 <enet_phy_config+0x80>
 8011494:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011498:	43c0      	mvns	r0, r0
 801149a:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801149e:	e012      	b.n	80114c6 <enet_phy_config+0x82>
 80114a0:	4b0f      	ldr	r3, [pc, #60]	; (80114e0 <enet_phy_config+0x9c>)
 80114a2:	4a10      	ldr	r2, [pc, #64]	; (80114e4 <enet_phy_config+0xa0>)
 80114a4:	4403      	add	r3, r0
 80114a6:	4293      	cmp	r3, r2
 80114a8:	d802      	bhi.n	80114b0 <enet_phy_config+0x6c>
 80114aa:	f044 040c 	orr.w	r4, r4, #12
 80114ae:	e7d8      	b.n	8011462 <enet_phy_config+0x1e>
 80114b0:	4b0d      	ldr	r3, [pc, #52]	; (80114e8 <enet_phy_config+0xa4>)
 80114b2:	4a0e      	ldr	r2, [pc, #56]	; (80114ec <enet_phy_config+0xa8>)
 80114b4:	4403      	add	r3, r0
 80114b6:	4293      	cmp	r3, r2
 80114b8:	d9d3      	bls.n	8011462 <enet_phy_config+0x1e>
 80114ba:	4b0d      	ldr	r3, [pc, #52]	; (80114f0 <enet_phy_config+0xac>)
 80114bc:	4a0d      	ldr	r2, [pc, #52]	; (80114f4 <enet_phy_config+0xb0>)
 80114be:	4403      	add	r3, r0
 80114c0:	4293      	cmp	r3, r2
 80114c2:	d902      	bls.n	80114ca <enet_phy_config+0x86>
 80114c4:	2000      	movs	r0, #0
 80114c6:	b002      	add	sp, #8
 80114c8:	bd10      	pop	{r4, pc}
 80114ca:	f044 0404 	orr.w	r4, r4, #4
 80114ce:	e7c8      	b.n	8011462 <enet_phy_config+0x1e>
 80114d0:	40028000 	andmi	r8, r2, r0
 80114d4:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80114d8:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80114dc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80114e0:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 80114e4:	017d783f 	cmneq	sp, pc, lsr r8
 80114e8:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80114ec:	01c9c37f 	biceq	ip, r9, pc, ror r3
 80114f0:	faa2b580 	blx	68beaf8 <__stack_size+0x68bd2f8>
 80114f4:	0112a880 	tsteq	r2, r0, lsl #17

080114f8 <enet_init>:
 80114f8:	2300      	movs	r3, #0
 80114fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80114fc:	4604      	mov	r4, r0
 80114fe:	460d      	mov	r5, r1
 8011500:	4616      	mov	r6, r2
 8011502:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011506:	f7ff ff9d 	bl	8011444 <enet_phy_config>
 801150a:	2800      	cmp	r0, #0
 801150c:	d037      	beq.n	801157e <enet_init+0x86>
 801150e:	4b3b      	ldr	r3, [pc, #236]	; (80115fc <enet_init+0x104>)
 8011510:	4a3b      	ldr	r2, [pc, #236]	; (8011600 <enet_init+0x108>)
 8011512:	6819      	ldr	r1, [r3, #0]
 8011514:	2c01      	cmp	r4, #1
 8011516:	ea02 0201 	and.w	r2, r2, r1
 801151a:	601a      	str	r2, [r3, #0]
 801151c:	f04f 0200 	mov.w	r2, #0
 8011520:	605a      	str	r2, [r3, #4]
 8011522:	609a      	str	r2, [r3, #8]
 8011524:	60da      	str	r2, [r3, #12]
 8011526:	6999      	ldr	r1, [r3, #24]
 8011528:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801152c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8011530:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8011534:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8011538:	6199      	str	r1, [r3, #24]
 801153a:	4932      	ldr	r1, [pc, #200]	; (8011604 <enet_init+0x10c>)
 801153c:	61da      	str	r2, [r3, #28]
 801153e:	6988      	ldr	r0, [r1, #24]
 8011540:	4b31      	ldr	r3, [pc, #196]	; (8011608 <enet_init+0x110>)
 8011542:	ea03 0300 	and.w	r3, r3, r0
 8011546:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 801154a:	618b      	str	r3, [r1, #24]
 801154c:	680b      	ldr	r3, [r1, #0]
 801154e:	4b2f      	ldr	r3, [pc, #188]	; (801160c <enet_init+0x114>)
 8011550:	600b      	str	r3, [r1, #0]
 8011552:	d01e      	beq.n	8011592 <enet_init+0x9a>
 8011554:	08e3      	lsrs	r3, r4, #3
 8011556:	0861      	lsrs	r1, r4, #1
 8011558:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 801155c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011560:	430b      	orrs	r3, r1
 8011562:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011566:	2101      	movs	r1, #1
 8011568:	2002      	movs	r0, #2
 801156a:	f10d 0306 	add.w	r3, sp, #6
 801156e:	f7ff ff3b 	bl	80113e8 <enet_phy_write_read>
 8011572:	b158      	cbz	r0, 801158c <enet_init+0x94>
 8011574:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011578:	f7ff fe2d 	bl	80111d6 <enet_delay>
 801157c:	e05f      	b.n	801163e <enet_init+0x146>
 801157e:	4824      	ldr	r0, [pc, #144]	; (8011610 <enet_init+0x118>)
 8011580:	f7ff fe29 	bl	80111d6 <enet_delay>
 8011584:	f7ff ff5e 	bl	8011444 <enet_phy_config>
 8011588:	2800      	cmp	r0, #0
 801158a:	d1c0      	bne.n	801150e <enet_init+0x16>
 801158c:	2000      	movs	r0, #0
 801158e:	b003      	add	sp, #12
 8011590:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011592:	4614      	mov	r4, r2
 8011594:	4f1f      	ldr	r7, [pc, #124]	; (8011614 <enet_init+0x11c>)
 8011596:	2201      	movs	r2, #1
 8011598:	2000      	movs	r0, #0
 801159a:	4611      	mov	r1, r2
 801159c:	f10d 0306 	add.w	r3, sp, #6
 80115a0:	f7ff ff22 	bl	80113e8 <enet_phy_write_read>
 80115a4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80115a8:	3401      	adds	r4, #1
 80115aa:	f002 0204 	and.w	r2, r2, #4
 80115ae:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115b2:	b912      	cbnz	r2, 80115ba <enet_init+0xc2>
 80115b4:	42bc      	cmp	r4, r7
 80115b6:	d1ee      	bne.n	8011596 <enet_init+0x9e>
 80115b8:	e7e8      	b.n	801158c <enet_init+0x94>
 80115ba:	42bc      	cmp	r4, r7
 80115bc:	d0e6      	beq.n	801158c <enet_init+0x94>
 80115be:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80115c2:	2101      	movs	r1, #1
 80115c4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115c8:	2002      	movs	r0, #2
 80115ca:	2200      	movs	r2, #0
 80115cc:	f7ff ff0c 	bl	80113e8 <enet_phy_write_read>
 80115d0:	2800      	cmp	r0, #0
 80115d2:	d0db      	beq.n	801158c <enet_init+0x94>
 80115d4:	2400      	movs	r4, #0
 80115d6:	4f0f      	ldr	r7, [pc, #60]	; (8011614 <enet_init+0x11c>)
 80115d8:	2201      	movs	r2, #1
 80115da:	2000      	movs	r0, #0
 80115dc:	4611      	mov	r1, r2
 80115de:	f10d 0306 	add.w	r3, sp, #6
 80115e2:	f7ff ff01 	bl	80113e8 <enet_phy_write_read>
 80115e6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80115ea:	3401      	adds	r4, #1
 80115ec:	f002 0220 	and.w	r2, r2, #32
 80115f0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115f4:	b982      	cbnz	r2, 8011618 <enet_init+0x120>
 80115f6:	42bc      	cmp	r4, r7
 80115f8:	d1ee      	bne.n	80115d8 <enet_init+0xe0>
 80115fa:	e7c7      	b.n	801158c <enet_init+0x94>
 80115fc:	40028000 	andmi	r8, r2, r0
 8011600:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8011604:	40029000 	andmi	r9, r2, r0
 8011608:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 801160c:	02c16000 	sbceq	r6, r1, #0
 8011610:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8011614:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011618:	42bc      	cmp	r4, r7
 801161a:	d0b7      	beq.n	801158c <enet_init+0x94>
 801161c:	2101      	movs	r1, #1
 801161e:	2210      	movs	r2, #16
 8011620:	2000      	movs	r0, #0
 8011622:	f7ff fee1 	bl	80113e8 <enet_phy_write_read>
 8011626:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801162a:	f013 0f04 	tst.w	r3, #4
 801162e:	bf14      	ite	ne
 8011630:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8011634:	2400      	moveq	r4, #0
 8011636:	0799      	lsls	r1, r3, #30
 8011638:	d401      	bmi.n	801163e <enet_init+0x146>
 801163a:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801163e:	4b64      	ldr	r3, [pc, #400]	; (80117d0 <enet_init+0x2d8>)
 8011640:	056a      	lsls	r2, r5, #21
 8011642:	6818      	ldr	r0, [r3, #0]
 8011644:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8011648:	ea44 0400 	orr.w	r4, r4, r0
 801164c:	601c      	str	r4, [r3, #0]
 801164e:	d50c      	bpl.n	801166a <enet_init+0x172>
 8011650:	681a      	ldr	r2, [r3, #0]
 8011652:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8011656:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801165a:	601a      	str	r2, [r3, #0]
 801165c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011660:	6999      	ldr	r1, [r3, #24]
 8011662:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8011666:	430d      	orrs	r5, r1
 8011668:	619d      	str	r5, [r3, #24]
 801166a:	4959      	ldr	r1, [pc, #356]	; (80117d0 <enet_init+0x2d8>)
 801166c:	4b59      	ldr	r3, [pc, #356]	; (80117d4 <enet_init+0x2dc>)
 801166e:	684a      	ldr	r2, [r1, #4]
 8011670:	4316      	orrs	r6, r2
 8011672:	604e      	str	r6, [r1, #4]
 8011674:	681a      	ldr	r2, [r3, #0]
 8011676:	07d7      	lsls	r7, r2, #31
 8011678:	d510      	bpl.n	801169c <enet_init+0x1a4>
 801167a:	685a      	ldr	r2, [r3, #4]
 801167c:	680c      	ldr	r4, [r1, #0]
 801167e:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8011682:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8011686:	4320      	orrs	r0, r4
 8011688:	6008      	str	r0, [r1, #0]
 801168a:	4853      	ldr	r0, [pc, #332]	; (80117d8 <enet_init+0x2e0>)
 801168c:	0892      	lsrs	r2, r2, #2
 801168e:	6981      	ldr	r1, [r0, #24]
 8011690:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8011694:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8011698:	430a      	orrs	r2, r1
 801169a:	6182      	str	r2, [r0, #24]
 801169c:	681a      	ldr	r2, [r3, #0]
 801169e:	0796      	lsls	r6, r2, #30
 80116a0:	d508      	bpl.n	80116b4 <enet_init+0x1bc>
 80116a2:	494d      	ldr	r1, [pc, #308]	; (80117d8 <enet_init+0x2e0>)
 80116a4:	6898      	ldr	r0, [r3, #8]
 80116a6:	680a      	ldr	r2, [r1, #0]
 80116a8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80116ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80116b0:	4302      	orrs	r2, r0
 80116b2:	600a      	str	r2, [r1, #0]
 80116b4:	681a      	ldr	r2, [r3, #0]
 80116b6:	0755      	lsls	r5, r2, #29
 80116b8:	d508      	bpl.n	80116cc <enet_init+0x1d4>
 80116ba:	4947      	ldr	r1, [pc, #284]	; (80117d8 <enet_init+0x2e0>)
 80116bc:	68d8      	ldr	r0, [r3, #12]
 80116be:	680a      	ldr	r2, [r1, #0]
 80116c0:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80116c4:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80116c8:	4302      	orrs	r2, r0
 80116ca:	600a      	str	r2, [r1, #0]
 80116cc:	681a      	ldr	r2, [r3, #0]
 80116ce:	0714      	lsls	r4, r2, #28
 80116d0:	d508      	bpl.n	80116e4 <enet_init+0x1ec>
 80116d2:	4941      	ldr	r1, [pc, #260]	; (80117d8 <enet_init+0x2e0>)
 80116d4:	6918      	ldr	r0, [r3, #16]
 80116d6:	680a      	ldr	r2, [r1, #0]
 80116d8:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80116dc:	f022 0202 	bic.w	r2, r2, #2
 80116e0:	4302      	orrs	r2, r0
 80116e2:	600a      	str	r2, [r1, #0]
 80116e4:	681a      	ldr	r2, [r3, #0]
 80116e6:	06d0      	lsls	r0, r2, #27
 80116e8:	d506      	bpl.n	80116f8 <enet_init+0x200>
 80116ea:	493b      	ldr	r1, [pc, #236]	; (80117d8 <enet_init+0x2e0>)
 80116ec:	4a3b      	ldr	r2, [pc, #236]	; (80117dc <enet_init+0x2e4>)
 80116ee:	6988      	ldr	r0, [r1, #24]
 80116f0:	4002      	ands	r2, r0
 80116f2:	6958      	ldr	r0, [r3, #20]
 80116f4:	4302      	orrs	r2, r0
 80116f6:	618a      	str	r2, [r1, #24]
 80116f8:	681a      	ldr	r2, [r3, #0]
 80116fa:	0691      	lsls	r1, r2, #26
 80116fc:	d508      	bpl.n	8011710 <enet_init+0x218>
 80116fe:	4936      	ldr	r1, [pc, #216]	; (80117d8 <enet_init+0x2e0>)
 8011700:	6998      	ldr	r0, [r3, #24]
 8011702:	698a      	ldr	r2, [r1, #24]
 8011704:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8011708:	f022 0204 	bic.w	r2, r2, #4
 801170c:	4302      	orrs	r2, r0
 801170e:	618a      	str	r2, [r1, #24]
 8011710:	681a      	ldr	r2, [r3, #0]
 8011712:	0652      	lsls	r2, r2, #25
 8011714:	d506      	bpl.n	8011724 <enet_init+0x22c>
 8011716:	492e      	ldr	r1, [pc, #184]	; (80117d0 <enet_init+0x2d8>)
 8011718:	69d8      	ldr	r0, [r3, #28]
 801171a:	69ca      	ldr	r2, [r1, #28]
 801171c:	0c52      	lsrs	r2, r2, #17
 801171e:	0452      	lsls	r2, r2, #17
 8011720:	4302      	orrs	r2, r0
 8011722:	61ca      	str	r2, [r1, #28]
 8011724:	681a      	ldr	r2, [r3, #0]
 8011726:	0617      	lsls	r7, r2, #24
 8011728:	d517      	bpl.n	801175a <enet_init+0x262>
 801172a:	4c29      	ldr	r4, [pc, #164]	; (80117d0 <enet_init+0x2d8>)
 801172c:	6a1a      	ldr	r2, [r3, #32]
 801172e:	69a0      	ldr	r0, [r4, #24]
 8011730:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8011734:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8011738:	0400      	lsls	r0, r0, #16
 801173a:	0c00      	lsrs	r0, r0, #16
 801173c:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8011740:	4301      	orrs	r1, r0
 8011742:	4825      	ldr	r0, [pc, #148]	; (80117d8 <enet_init+0x2e0>)
 8011744:	61a1      	str	r1, [r4, #24]
 8011746:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801174a:	0a12      	lsrs	r2, r2, #8
 801174c:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8011750:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8011754:	430a      	orrs	r2, r1
 8011756:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801175a:	681a      	ldr	r2, [r3, #0]
 801175c:	05d6      	lsls	r6, r2, #23
 801175e:	bf42      	ittt	mi
 8011760:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8011762:	4a1b      	ldrmi	r2, [pc, #108]	; (80117d0 <enet_init+0x2d8>)
 8011764:	6091      	strmi	r1, [r2, #8]
 8011766:	681a      	ldr	r2, [r3, #0]
 8011768:	0595      	lsls	r5, r2, #22
 801176a:	bf42      	ittt	mi
 801176c:	4a18      	ldrmi	r2, [pc, #96]	; (80117d0 <enet_init+0x2d8>)
 801176e:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8011770:	60d1      	strmi	r1, [r2, #12]
 8011772:	681a      	ldr	r2, [r3, #0]
 8011774:	0554      	lsls	r4, r2, #21
 8011776:	d508      	bpl.n	801178a <enet_init+0x292>
 8011778:	4915      	ldr	r1, [pc, #84]	; (80117d0 <enet_init+0x2d8>)
 801177a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 801177c:	684a      	ldr	r2, [r1, #4]
 801177e:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8011782:	f022 0206 	bic.w	r2, r2, #6
 8011786:	4302      	orrs	r2, r0
 8011788:	604a      	str	r2, [r1, #4]
 801178a:	681a      	ldr	r2, [r3, #0]
 801178c:	0510      	lsls	r0, r2, #20
 801178e:	d508      	bpl.n	80117a2 <enet_init+0x2aa>
 8011790:	490f      	ldr	r1, [pc, #60]	; (80117d0 <enet_init+0x2d8>)
 8011792:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8011794:	680a      	ldr	r2, [r1, #0]
 8011796:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801179a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801179e:	4302      	orrs	r2, r0
 80117a0:	600a      	str	r2, [r1, #0]
 80117a2:	681a      	ldr	r2, [r3, #0]
 80117a4:	04d1      	lsls	r1, r2, #19
 80117a6:	d506      	bpl.n	80117b6 <enet_init+0x2be>
 80117a8:	4909      	ldr	r1, [pc, #36]	; (80117d0 <enet_init+0x2d8>)
 80117aa:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80117ac:	680a      	ldr	r2, [r1, #0]
 80117ae:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80117b2:	4302      	orrs	r2, r0
 80117b4:	600a      	str	r2, [r1, #0]
 80117b6:	681a      	ldr	r2, [r3, #0]
 80117b8:	0492      	lsls	r2, r2, #18
 80117ba:	d506      	bpl.n	80117ca <enet_init+0x2d2>
 80117bc:	4904      	ldr	r1, [pc, #16]	; (80117d0 <enet_init+0x2d8>)
 80117be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117c0:	680a      	ldr	r2, [r1, #0]
 80117c2:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80117c6:	4313      	orrs	r3, r2
 80117c8:	600b      	str	r3, [r1, #0]
 80117ca:	2001      	movs	r0, #1
 80117cc:	e6df      	b.n	801158e <enet_init+0x96>
 80117ce:	bf00      	nop
 80117d0:	40028000 	andmi	r8, r2, r0
 80117d4:	20009bf0 	strdcs	r9, [r0], -r0
 80117d8:	40029000 	andmi	r9, r2, r0
 80117dc:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080117e0 <enet_txfifo_flush>:
 80117e0:	4b06      	ldr	r3, [pc, #24]	; (80117fc <enet_txfifo_flush+0x1c>)
 80117e2:	4807      	ldr	r0, [pc, #28]	; (8011800 <enet_txfifo_flush+0x20>)
 80117e4:	699a      	ldr	r2, [r3, #24]
 80117e6:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80117ea:	619a      	str	r2, [r3, #24]
 80117ec:	699a      	ldr	r2, [r3, #24]
 80117ee:	02d2      	lsls	r2, r2, #11
 80117f0:	d502      	bpl.n	80117f8 <enet_txfifo_flush+0x18>
 80117f2:	3801      	subs	r0, #1
 80117f4:	d1fa      	bne.n	80117ec <enet_txfifo_flush+0xc>
 80117f6:	4770      	bx	lr
 80117f8:	2001      	movs	r0, #1
 80117fa:	4770      	bx	lr
 80117fc:	40029000 	andmi	r9, r2, r0
 8011800:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011804 <enet_tx_enable>:
 8011804:	4a06      	ldr	r2, [pc, #24]	; (8011820 <enet_tx_enable+0x1c>)
 8011806:	b508      	push	{r3, lr}
 8011808:	6813      	ldr	r3, [r2, #0]
 801180a:	f043 0308 	orr.w	r3, r3, #8
 801180e:	6013      	str	r3, [r2, #0]
 8011810:	f7ff ffe6 	bl	80117e0 <enet_txfifo_flush>
 8011814:	4a03      	ldr	r2, [pc, #12]	; (8011824 <enet_tx_enable+0x20>)
 8011816:	6993      	ldr	r3, [r2, #24]
 8011818:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801181c:	6193      	str	r3, [r2, #24]
 801181e:	bd08      	pop	{r3, pc}
 8011820:	40028000 	andmi	r8, r2, r0
 8011824:	40029000 	andmi	r9, r2, r0

08011828 <enet_enable>:
 8011828:	b508      	push	{r3, lr}
 801182a:	f7ff ffeb 	bl	8011804 <enet_tx_enable>
 801182e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011832:	f7ff bdcb 	b.w	80113cc <enet_rx_enable>

08011836 <enet_desc_information_get>:
 8011836:	2905      	cmp	r1, #5
 8011838:	d817      	bhi.n	801186a <enet_desc_information_get+0x34>
 801183a:	e8df f001 	tbb	[pc, r1]
 801183e:	03091012 	movweq	r1, #36882	; 0x9012
 8011842:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8011846:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801184a:	4770      	bx	lr
 801184c:	88c0      	ldrh	r0, [r0, #6]
 801184e:	e7fa      	b.n	8011846 <enet_desc_information_get+0x10>
 8011850:	8840      	ldrh	r0, [r0, #2]
 8011852:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8011856:	2804      	cmp	r0, #4
 8011858:	d90a      	bls.n	8011870 <enet_desc_information_get+0x3a>
 801185a:	3804      	subs	r0, #4
 801185c:	4770      	bx	lr
 801185e:	6880      	ldr	r0, [r0, #8]
 8011860:	4770      	bx	lr
 8011862:	6800      	ldr	r0, [r0, #0]
 8011864:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8011868:	4770      	bx	lr
 801186a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801186e:	4770      	bx	lr
 8011870:	2000      	movs	r0, #0
 8011872:	4770      	bx	lr

08011874 <enet_rxframe_drop>:
 8011874:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8011878:	4814      	ldr	r0, [pc, #80]	; (80118cc <enet_rxframe_drop+0x58>)
 801187a:	b510      	push	{r4, lr}
 801187c:	6802      	ldr	r2, [r0, #0]
 801187e:	4914      	ldr	r1, [pc, #80]	; (80118d0 <enet_rxframe_drop+0x5c>)
 8011880:	6854      	ldr	r4, [r2, #4]
 8011882:	6013      	str	r3, [r2, #0]
 8011884:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8011888:	680b      	ldr	r3, [r1, #0]
 801188a:	d009      	beq.n	80118a0 <enet_rxframe_drop+0x2c>
 801188c:	b12b      	cbz	r3, 801189a <enet_rxframe_drop+0x26>
 801188e:	68da      	ldr	r2, [r3, #12]
 8011890:	6002      	str	r2, [r0, #0]
 8011892:	681a      	ldr	r2, [r3, #0]
 8011894:	b1ba      	cbz	r2, 80118c6 <enet_rxframe_drop+0x52>
 8011896:	600a      	str	r2, [r1, #0]
 8011898:	bd10      	pop	{r4, pc}
 801189a:	68d3      	ldr	r3, [r2, #12]
 801189c:	6003      	str	r3, [r0, #0]
 801189e:	e7fb      	b.n	8011898 <enet_rxframe_drop+0x24>
 80118a0:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80118a4:	4c0b      	ldr	r4, [pc, #44]	; (80118d4 <enet_rxframe_drop+0x60>)
 80118a6:	d006      	beq.n	80118b6 <enet_rxframe_drop+0x42>
 80118a8:	68e2      	ldr	r2, [r4, #12]
 80118aa:	6002      	str	r2, [r0, #0]
 80118ac:	2b00      	cmp	r3, #0
 80118ae:	d0f3      	beq.n	8011898 <enet_rxframe_drop+0x24>
 80118b0:	681b      	ldr	r3, [r3, #0]
 80118b2:	600b      	str	r3, [r1, #0]
 80118b4:	e7f0      	b.n	8011898 <enet_rxframe_drop+0x24>
 80118b6:	6824      	ldr	r4, [r4, #0]
 80118b8:	3210      	adds	r2, #16
 80118ba:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80118be:	4422      	add	r2, r4
 80118c0:	6002      	str	r2, [r0, #0]
 80118c2:	2b00      	cmp	r3, #0
 80118c4:	d0e8      	beq.n	8011898 <enet_rxframe_drop+0x24>
 80118c6:	3310      	adds	r3, #16
 80118c8:	e7f3      	b.n	80118b2 <enet_rxframe_drop+0x3e>
 80118ca:	bf00      	nop
 80118cc:	20009be8 	andcs	r9, r0, r8, ror #23
 80118d0:	20009be0 	andcs	r9, r0, r0, ror #23
 80118d4:	40029000 	andmi	r9, r2, r0

080118d8 <enet_rxframe_size_get>:
 80118d8:	b508      	push	{r3, lr}
 80118da:	4b0c      	ldr	r3, [pc, #48]	; (801190c <enet_rxframe_size_get+0x34>)
 80118dc:	681b      	ldr	r3, [r3, #0]
 80118de:	6818      	ldr	r0, [r3, #0]
 80118e0:	2800      	cmp	r0, #0
 80118e2:	db10      	blt.n	8011906 <enet_rxframe_size_get+0x2e>
 80118e4:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80118e8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80118ec:	d003      	beq.n	80118f6 <enet_rxframe_size_get+0x1e>
 80118ee:	f7ff ffc1 	bl	8011874 <enet_rxframe_drop>
 80118f2:	2001      	movs	r0, #1
 80118f4:	bd08      	pop	{r3, pc}
 80118f6:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80118fa:	2b21      	cmp	r3, #33	; 0x21
 80118fc:	d0f7      	beq.n	80118ee <enet_rxframe_size_get+0x16>
 80118fe:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8011902:	3804      	subs	r0, #4
 8011904:	e7f6      	b.n	80118f4 <enet_rxframe_size_get+0x1c>
 8011906:	2000      	movs	r0, #0
 8011908:	e7f4      	b.n	80118f4 <enet_rxframe_size_get+0x1c>
 801190a:	bf00      	nop
 801190c:	20009be8 	andcs	r9, r0, r8, ror #23

08011910 <enet_initpara_reset>:
 8011910:	2200      	movs	r2, #0
 8011912:	4b08      	ldr	r3, [pc, #32]	; (8011934 <enet_initpara_reset+0x24>)
 8011914:	e9c3 2200 	strd	r2, r2, [r3]
 8011918:	e9c3 2202 	strd	r2, r2, [r3, #8]
 801191c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8011920:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8011924:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8011928:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 801192c:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8011930:	639a      	str	r2, [r3, #56]	; 0x38
 8011932:	4770      	bx	lr
 8011934:	20009bf0 	strdcs	r9, [r0], -r0

08011938 <enet_deinit>:
 8011938:	b508      	push	{r3, lr}
 801193a:	f640 200e 	movw	r0, #2574	; 0xa0e
 801193e:	f7fe fcf2 	bl	8010326 <rcu_periph_reset_enable>
 8011942:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011946:	f7fe fcf0 	bl	801032a <rcu_periph_reset_disable>
 801194a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801194e:	f7ff bfdf 	b.w	8011910 <enet_initpara_reset>
	...

08011954 <i2c_clock_config>:
 8011954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011956:	4605      	mov	r5, r0
 8011958:	2002      	movs	r0, #2
 801195a:	460c      	mov	r4, r1
 801195c:	4617      	mov	r7, r2
 801195e:	f7fe fd8b 	bl	8010478 <rcu_clock_freq_get>
 8011962:	4927      	ldr	r1, [pc, #156]	; (8011a00 <i2c_clock_config+0xac>)
 8011964:	4a27      	ldr	r2, [pc, #156]	; (8011a04 <i2c_clock_config+0xb0>)
 8011966:	fbb0 f1f1 	udiv	r1, r0, r1
 801196a:	4290      	cmp	r0, r2
 801196c:	bf34      	ite	cc
 801196e:	460b      	movcc	r3, r1
 8011970:	2336      	movcs	r3, #54	; 0x36
 8011972:	686e      	ldr	r6, [r5, #4]
 8011974:	4a24      	ldr	r2, [pc, #144]	; (8011a08 <i2c_clock_config+0xb4>)
 8011976:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 801197a:	431e      	orrs	r6, r3
 801197c:	4294      	cmp	r4, r2
 801197e:	606e      	str	r6, [r5, #4]
 8011980:	d816      	bhi.n	80119b0 <i2c_clock_config+0x5c>
 8011982:	3101      	adds	r1, #1
 8011984:	2935      	cmp	r1, #53	; 0x35
 8011986:	d90d      	bls.n	80119a4 <i2c_clock_config+0x50>
 8011988:	2336      	movs	r3, #54	; 0x36
 801198a:	622b      	str	r3, [r5, #32]
 801198c:	0064      	lsls	r4, r4, #1
 801198e:	fbb0 f4f4 	udiv	r4, r0, r4
 8011992:	2c04      	cmp	r4, #4
 8011994:	bf38      	it	cc
 8011996:	2404      	movcc	r4, #4
 8011998:	69e8      	ldr	r0, [r5, #28]
 801199a:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801199e:	4304      	orrs	r4, r0
 80119a0:	61ec      	str	r4, [r5, #28]
 80119a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119a4:	2902      	cmp	r1, #2
 80119a6:	d801      	bhi.n	80119ac <i2c_clock_config+0x58>
 80119a8:	2302      	movs	r3, #2
 80119aa:	e7ee      	b.n	801198a <i2c_clock_config+0x36>
 80119ac:	6229      	str	r1, [r5, #32]
 80119ae:	e7ed      	b.n	801198c <i2c_clock_config+0x38>
 80119b0:	4a16      	ldr	r2, [pc, #88]	; (8011a0c <i2c_clock_config+0xb8>)
 80119b2:	4294      	cmp	r4, r2
 80119b4:	d8f5      	bhi.n	80119a2 <i2c_clock_config+0x4e>
 80119b6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80119ba:	4353      	muls	r3, r2
 80119bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80119c0:	fbb3 f3f2 	udiv	r3, r3, r2
 80119c4:	3301      	adds	r3, #1
 80119c6:	622b      	str	r3, [r5, #32]
 80119c8:	b997      	cbnz	r7, 80119f0 <i2c_clock_config+0x9c>
 80119ca:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80119ce:	fbb0 f4f4 	udiv	r4, r0, r4
 80119d2:	69eb      	ldr	r3, [r5, #28]
 80119d4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80119d8:	61eb      	str	r3, [r5, #28]
 80119da:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80119de:	b90b      	cbnz	r3, 80119e4 <i2c_clock_config+0x90>
 80119e0:	f044 0401 	orr.w	r4, r4, #1
 80119e4:	69eb      	ldr	r3, [r5, #28]
 80119e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80119ea:	61eb      	str	r3, [r5, #28]
 80119ec:	69e8      	ldr	r0, [r5, #28]
 80119ee:	e7d6      	b.n	801199e <i2c_clock_config+0x4a>
 80119f0:	2119      	movs	r1, #25
 80119f2:	434c      	muls	r4, r1
 80119f4:	69eb      	ldr	r3, [r5, #28]
 80119f6:	fbb0 f4f4 	udiv	r4, r0, r4
 80119fa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80119fe:	e7eb      	b.n	80119d8 <i2c_clock_config+0x84>
 8011a00:	000f4240 	andeq	r4, pc, r0, asr #4
 8011a04:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8011a08:	000186a0 	andeq	r8, r1, r0, lsr #13
 8011a0c:	00061a80 	andeq	r1, r6, r0, lsl #21

08011a10 <i2c_ack_config>:
 8011a10:	6803      	ldr	r3, [r0, #0]
 8011a12:	2901      	cmp	r1, #1
 8011a14:	bf0c      	ite	eq
 8011a16:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8011a1a:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8011a1e:	6003      	str	r3, [r0, #0]
 8011a20:	4770      	bx	lr

08011a22 <i2c_ackpos_config>:
 8011a22:	6803      	ldr	r3, [r0, #0]
 8011a24:	b919      	cbnz	r1, 8011a2e <i2c_ackpos_config+0xc>
 8011a26:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011a2a:	6003      	str	r3, [r0, #0]
 8011a2c:	4770      	bx	lr
 8011a2e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011a32:	e7fa      	b.n	8011a2a <i2c_ackpos_config+0x8>

08011a34 <i2c_master_addressing>:
 8011a34:	3202      	adds	r2, #2
 8011a36:	bf0c      	ite	eq
 8011a38:	f021 0101 	biceq.w	r1, r1, #1
 8011a3c:	f041 0101 	orrne.w	r1, r1, #1
 8011a40:	6101      	str	r1, [r0, #16]
 8011a42:	4770      	bx	lr

08011a44 <i2c_enable>:
 8011a44:	6803      	ldr	r3, [r0, #0]
 8011a46:	f043 0301 	orr.w	r3, r3, #1
 8011a4a:	6003      	str	r3, [r0, #0]
 8011a4c:	4770      	bx	lr

08011a4e <i2c_start_on_bus>:
 8011a4e:	6803      	ldr	r3, [r0, #0]
 8011a50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011a54:	6003      	str	r3, [r0, #0]
 8011a56:	4770      	bx	lr

08011a58 <i2c_stop_on_bus>:
 8011a58:	6803      	ldr	r3, [r0, #0]
 8011a5a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8011a5e:	6003      	str	r3, [r0, #0]
 8011a60:	4770      	bx	lr

08011a62 <i2c_data_transmit>:
 8011a62:	6101      	str	r1, [r0, #16]
 8011a64:	4770      	bx	lr

08011a66 <i2c_data_receive>:
 8011a66:	6900      	ldr	r0, [r0, #16]
 8011a68:	b2c0      	uxtb	r0, r0
 8011a6a:	4770      	bx	lr

08011a6c <i2c_flag_get>:
 8011a6c:	098b      	lsrs	r3, r1, #6
 8011a6e:	5818      	ldr	r0, [r3, r0]
 8011a70:	f001 011f 	and.w	r1, r1, #31
 8011a74:	40c8      	lsrs	r0, r1
 8011a76:	f000 0001 	and.w	r0, r0, #1
 8011a7a:	4770      	bx	lr

08011a7c <i2c_flag_clear>:
 8011a7c:	f240 5301 	movw	r3, #1281	; 0x501
 8011a80:	4299      	cmp	r1, r3
 8011a82:	b510      	push	{r4, lr}
 8011a84:	d102      	bne.n	8011a8c <i2c_flag_clear+0x10>
 8011a86:	6943      	ldr	r3, [r0, #20]
 8011a88:	6983      	ldr	r3, [r0, #24]
 8011a8a:	bd10      	pop	{r4, pc}
 8011a8c:	2201      	movs	r2, #1
 8011a8e:	098c      	lsrs	r4, r1, #6
 8011a90:	5823      	ldr	r3, [r4, r0]
 8011a92:	f001 011f 	and.w	r1, r1, #31
 8011a96:	fa02 f101 	lsl.w	r1, r2, r1
 8011a9a:	ea23 0101 	bic.w	r1, r3, r1
 8011a9e:	5021      	str	r1, [r4, r0]
 8011aa0:	e7f3      	b.n	8011a8a <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08011aa4 <vtable for DisplayHandler-0xbc>:
	...
 8011aac:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011ab0:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8011ab4:	00000000 	andeq	r0, r0, r0
 8011ab8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011abc:	343a3531 	ldrtcc	r3, [sl], #-1329	; 0xfffffacf
 8011ac0:	31313a39 	teqcc	r1, r9, lsr sl
 8011ac4:	6e614a00 	vmulvs.f32	s9, s2, s0
 8011ac8:	20343120 	eorscs	r3, r4, r0, lsr #2
 8011acc:	32323032 	eorscc	r3, r2, #50	; 0x32
 8011ad0:	43417300 	movtmi	r7, #4864	; 0x1300
 8011ad4:	3145204e 	cmpcc	r5, lr, asr #32
 8011ad8:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8011adc:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8011ae0:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8011ae4:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8011ae8:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8011920 <enet_initpara_reset+0x10>
 8011aec:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8011af0:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8011af4:	6e552034 	mrcvs	0, 2, r2, cr5, cr4, {1}
 8011af8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8011afc:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
 8011b00:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8011b04:	5f2e006d 	svcpl	0x002e006d
 8011b08:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8011b0c:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 8011b10:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8011b14:	6f6e0070 	svcvs	0x006e0070
 8011b18:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 8011b1c:	204e4341 	subcs	r4, lr, r1, asr #6
 8011b20:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8011b24:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8011b28:	41730058 	cmnmi	r3, r8, asr r0
 8011b2c:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011b30:	31332e31 	teqcc	r3, r1, lsr lr
 8011b34:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8011b38:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8011b3c:	21786d64 	cmncs	r8, r4, ror #26
 8011b40:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
 8011b44:	00236b61 	eoreq	r6, r3, r1, ror #22
 8011b48:	2362616d 	cmncs	r2, #1073741851	; 0x4000001b
 8011b4c:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
 8011b50:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8011b54:	6c730023 	ldclvs	0, cr0, [r3], #-140	; 0xffffff74
 8011b58:	2373746f 	cmncs	r3, #1862270976	; 0x6f000000
 8011b5c:	00000000 	andeq	r0, r0, r0

08011b60 <vtable for DisplayHandler>:
	...
 8011b68:	080074ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, sl, ip, sp, lr}
 8011b6c:	08007545 	stmdaeq	r0, {r0, r2, r6, r8, sl, ip, sp, lr}
 8011b70:	08007565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, ip, sp, lr}

08011b74 <vtable for E131Reboot>:
	...
 8011b7c:	080074f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, ip, sp, lr}
 8011b80:	08007539 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, ip, sp, lr}
 8011b84:	08007515 	stmdaeq	r0, {r0, r2, r4, r8, sl, ip, sp, lr}

08011b88 <CSWTCH.86>:
 8011b88:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011b8c:	 	eorcc	r3, lr, r6, asr #2

08011b8d <SOFTWARE_VERSION>:
 8011b8d:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8011b91:	 	andeq	r0, r0, r0

08011b94 <vtable for DmxInput>:
	...
 8011b9c:	08007b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, ip, sp, lr}
 8011ba0:	08007b99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, ip, sp, lr}
 8011ba4:	08007b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp, ip, sp, lr}
 8011ba8:	08007b39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, ip, sp, lr}
 8011bac:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8011bb0:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8011bb4:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8011bb8:	00302e30 	eorseq	r2, r0, r0, lsr lr
 8011bbc:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8011bc0:	73252073 			; <UNDEFINED> instruction: 0x73252073
 8011bc4:	33444700 	movtcc	r4, #18176	; 0x4700
 8011bc8:	30314632 	eorscc	r4, r1, r2, lsr r6
 8011bcc:	30005237 	andcc	r5, r0, r7, lsr r2
 8011bd0:	6f4e202e 	svcvs	0x004e202e
 8011bd4:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8011bd8:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8011bdc:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8011be0:	202c6465 	eorcs	r6, ip, r5, ror #8
 8011be4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8011be8:	6f687320 	svcvs	0x00687320
 8011bec:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8011bf0:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8011bf4:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8011bf8:	000a216e 	andeq	r2, sl, lr, ror #2
 8011bfc:	00505448 	subseq	r5, r0, r8, asr #8
 8011c00:	0050544c 	subseq	r5, r0, ip, asr #8
 8011c04:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8011c08:	000a6567 	andeq	r6, sl, r7, ror #10
 8011c0c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8011c10:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8011c14:	203a2065 	eorscs	r2, sl, r5, rrx
 8011c18:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011c1c:	20000a64 	andcs	r0, r0, r4, ror #20
 8011c20:	20444943 	subcs	r4, r4, r3, asr #18
 8011c24:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011c28:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8011c2c:	20000a73 	andcs	r0, r0, r3, ror sl
 8011c30:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011c34:	000a7475 	andeq	r7, sl, r5, ror r4
 8011c38:	6f502020 	svcvs	0x00502020
 8011c3c:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8011c40:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8011c44:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8011c48:	20657372 	rsbcs	r7, r5, r2, ror r3
 8011c4c:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8011c50:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8011c54:	20000a5d 	andcs	r0, r0, sp, asr sl
 8011c58:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8011c5c:	20000a74 	andcs	r0, r0, r4, ror sl
 8011c60:	726f5020 	rsbvc	r5, pc, #32
 8011c64:	32252074 	eorcc	r2, r5, #116	; 0x74
 8011c68:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8011c6c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8011c70:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8011c74:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8011c78:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8011c7c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8011c80:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8011c84:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011c88:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8011c8c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8011c90:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8011c94:	000a6465 	andeq	r6, sl, r5, ror #8

08011c98 <E131MsgConst::START>:
 8011c98:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8011c9c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011ca0:	43417320 	movtmi	r7, #4896	; 0x1320
 8011ca4:	3145204e 	cmpcc	r5, lr, asr #32
 8011ca8:	0031332e 	eorseq	r3, r1, lr, lsr #6

08011cac <E131MsgConst::PARAMS>:
 8011cac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011cb0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8011cb4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8011cb8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011cbc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011cc0:	 	movwvc	r3, #307	; 0x133

08011cc3 <E131MsgConst::STARTED>:
 8011cc3:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011cc7:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011ccb:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8011ccf:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8011cd3:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8011cd7:	3a227325 	bcc	88ae973 <__exidx_end+0x89b0cb>
 8011cdb:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011cdf:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8011ce3:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8011ce7:	2522000a 	strcs	r0, [r2, #-10]!
 8011ceb:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8011cef:	23002c64 	movwcs	r2, #3172	; 0xc64
 8011cf3:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8011cf7:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8011cfb:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011cff:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8011d03:	00747570 	rsbseq	r7, r4, r0, ror r5
 8011d07:	00707468 	rsbseq	r7, r0, r8, ror #8
 8011d0b:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8011d0f:	20584d44 	subscs	r4, r8, r4, asr #26
 8011d13:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011d17:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8011d1b:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8011d1f:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011d23:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8011d27:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08011d2a <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8011d2a:	61736964 	cmnvs	r3, r4, ror #18
 8011d2e:	5f656c62 	svcpl	0x00656c62
 8011d32:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8011d36:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011d3a:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80117d5 <enet_init+0x2dd>
 8011d3e:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08011d40 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8011d40:	61736964 	cmnvs	r3, r4, ror #18
 8011d44:	5f656c62 	svcpl	0x00656c62
 8011d48:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011d4c:	5f6b726f 	svcpl	0x006b726f
 8011d50:	61746164 	cmnvs	r4, r4, ror #2
 8011d54:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8011d58:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011d5c:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80117f7 <enet_txfifo_flush+0x17>
 8011d60:	 	rsbsvc	r0, r0, #116	; 0x74

08011d62 <E131ParamsConst::PRIORITY>:
 8011d62:	6f697270 	svcvs	0x00697270
 8011d66:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011d6a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011d6e:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8011d72:	72700000 	rsbsvc	r0, r0, #0
 8011d76:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d7a:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8011d7e:	5f74726f 	svcpl	0x0074726f
 8011d82:	00000062 	andeq	r0, r0, r2, rrx
 8011d86:	6f697270 	svcvs	0x00697270
 8011d8a:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011d8e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011d92:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8011d96:	72700000 	rsbsvc	r0, r0, #0
 8011d9a:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d9e:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8011da2:	5f74726f 	svcpl	0x0074726f
 8011da6:	00000064 	andeq	r0, r0, r4, rrx

08011daa <E131ParamsConst::FILE_NAME>:
 8011daa:	31333165 	teqcc	r3, r5, ror #2
 8011dae:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08011db3 <E117Const::ACN_PACKET_IDENTIFIER>:
 8011db3:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8011db7:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8011dbb:	00000037 	andeq	r0, r0, r7, lsr r0

08011dbf <E131BridgeConst::VERSION>:
 8011dbf:	30251801 	eorcc	r1, r5, r1, lsl #16
 8011dc3:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8011dc7:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 8011dcb:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8011dcf:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8011dd3:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 8011dd7:	30252d78 	eorcc	r2, r5, r8, ror sp
 8011ddb:	30257832 	eorcc	r7, r5, r2, lsr r8
 8011ddf:	30257832 	eorcc	r7, r5, r2, lsr r8
 8011de3:	30257832 	eorcc	r7, r5, r2, lsr r8
 8011de7:	30257832 	eorcc	r7, r5, r2, lsr r8
 8011deb:	30257832 	eorcc	r7, r5, r2, lsr r8
 8011def:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 8011df3:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 8011df7:	0a646e65 	beq	992d793 <__exidx_end+0x1919eeb>
 8011dfb:	72422000 	subvc	r2, r2, #0
 8011dff:	206b6165 	rsbcs	r6, fp, r5, ror #2
 8011e03:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011e07:	3a202020 	bcc	8819e8f <__exidx_end+0x8065e7>
 8011e0b:	0a642520 	beq	991b293 <__exidx_end+0x19079eb>
 8011e0f:	414d2000 	mrsmi	r2, (UNDEF: 77)
 8011e13:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 8011e17:	2020656d 	eorcs	r6, r0, sp, ror #10
 8011e1b:	3a202020 	bcc	8819ea3 <__exidx_end+0x8065fb>
 8011e1f:	0a642520 	beq	991b2a7 <__exidx_end+0x19079ff>
 8011e23:	65522000 	ldrbvs	r2, [r2, #-0]
 8011e27:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8011e2b:	61722068 	cmnvs	r2, r8, rrx
 8011e2f:	3a206574 	bcc	882b407 <__exidx_end+0x817b5f>
 8011e33:	0a642520 	beq	991b2bb <__exidx_end+0x1907a13>
 8011e37:	6c532000 	mravs	r2, r3, acc0
 8011e3b:	2073746f 	rsbscs	r7, r3, pc, ror #8
 8011e3f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011e43:	3a202020 	bcc	8819ecb <__exidx_end+0x806623>
 8011e47:	0a642520 	beq	991b2cf <__exidx_end+0x1907a27>
	...

08011e4c <vtable for DmxSend>:
	...
 8011e54:	08008f7b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, pc}
 8011e58:	08009049 	stmdaeq	r0, {r0, r3, r6, ip, pc}
 8011e5c:	08008f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, pc}
 8011e60:	08008fad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, fp, pc}
 8011e64:	08008fe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e68:	08008f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, pc}
 8011e6c:	08008ff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e70:	0800ecff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 8011e74:	0800ecf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 8011e78:	0800ecf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 8011e7c:	0800ed03 	stmdaeq	r0, {r0, r1, r8, sl, fp, sp, lr, pc}

08011e80 <DmxParamsConst::BREAK_TIME>:
 8011e80:	61657262 	cmnvs	r5, r2, ror #4
 8011e84:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011e88:	 	movwvc	r6, #1389	; 0x56d

08011e8b <DmxParamsConst::SLOTS_COUNT>:
 8011e8b:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8011e93 <DmxParamsConst::SLOTS_COUNT+0x8>
 8011e8f:	6f635f73 	svcvs	0x00635f73
 8011e93:	00746e75 	rsbseq	r6, r4, r5, ror lr

08011e97 <DmxParamsConst::REFRESH_RATE>:
 8011e97:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8011e9b:	5f687365 	svcpl	0x00687365
 8011e9f:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08011ea4 <DmxParamsConst::MAB_TIME>:
 8011ea4:	5f62616d 	svcpl	0x0062616d
 8011ea8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08011ead <DmxParamsConst::FILE_NAME>:
 8011ead:	61726170 	cmnvs	r2, r0, ror r1
 8011eb1:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8011eb5:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 8011eb9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011ebd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8011ec1:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8011ec5:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 8011ec9:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 8011ecd:	000a7325 	andeq	r7, sl, r5, lsr #6
 8011ed1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011ed5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011ed9:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8011edd:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011ee1:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8011ee5:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 8011ee9:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 8011eed:	73696400 	cmnvc	r9, #0, 8
 8011ef1:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011ef5:	0a73253a 	beq	9cdb3e5 <__exidx_end+0x1cc7b3d>
 8011ef9:	72657600 	rsbvc	r7, r5, #0, 12
 8011efd:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011f01:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 8011f05:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 8011f09:	203a656d 	eorscs	r6, sl, sp, ror #10
 8011f0d:	0a737525 	beq	9cef3a9 <__exidx_end+0x1cdbb01>
 8011f11:	52524500 	subspl	r4, r2, #0, 10
 8011f15:	3f23524f 	svccc	0x0023524f
 8011f19:	0a746567 	beq	9d2b4bd <__exidx_end+0x1d17c15>
 8011f1d:	73696400 	cmnvc	r9, #0, 8
 8011f21:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011f25:	52450023 	subpl	r0, r5, #35	; 0x23
 8011f29:	23524f52 	cmpcs	r2, #328	; 0x148
 8011f2d:	45000a3f 	strmi	r0, [r0, #-2623]	; 0xfffff5c1
 8011f31:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8011f35:	000a2123 	andeq	r2, sl, r3, lsr #2
 8011f39:	6f626572 	svcvs	0x00626572
 8011f3d:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8011f41:	73696c00 	cmnvc	r9, #0, 24
 8011f45:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8011f49:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8011f4d:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8011f51:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011f55:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8011f59:	6f697372 	svcvs	0x00697372
 8011f5d:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 8011f61:	00237465 	eoreq	r7, r3, r5, ror #8
 8011f65:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8011f69:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8011f6d:	 	subvc	r0, r1, #35	; 0x23

08011f6f <s_Node>:
 8011f6f:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8011f73:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8011f7f:	41730000 	cmnmi	r3, r0
 8011f83:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011f87:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8011f93:	2043534f 	subcs	r5, r3, pc, asr #6
 8011f97:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011f9b:	00007265 	andeq	r7, r0, r5, ror #4
 8011f9f:	00000000 	andeq	r0, r0, r0
 8011fa3:	544c0000 	strbpl	r0, [ip], #-0
 8011fa7:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8011fb7:	2043534f 	subcs	r5, r3, pc, asr #6
 8011fbb:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8011fbf:	0000746e 	andeq	r7, r0, lr, ror #8
 8011fc3:	00000000 	andeq	r0, r0, r0
 8011fc7:	44520000 	ldrbmi	r0, [r2], #-0
 8011fcb:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8011fcf:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8011fd3:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8011fd7:	0000796c 	andeq	r7, r0, ip, ror #18
 8011fdb:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8011fdf:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8011feb:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8011fef:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8011fff:	00504444 	subseq	r4, r0, r4, asr #8
	...

08012011 <s_Output>:
 8012011:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801201d:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8012029:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801202d:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8012031:	00000000 	andeq	r0, r0, r0
 8012035:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8012039:	0000006c 	andeq	r0, r0, ip, rrx
 801203d:	00000000 	andeq	r0, r0, r0
 8012041:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8012045:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8012049:	00000000 	andeq	r0, r0, r0
 801204d:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8012059:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801205d:	00006769 	andeq	r6, r0, r9, ror #14
 8012061:	00000000 	andeq	r0, r0, r0
 8012065:	70657453 	rsbvc	r7, r5, r3, asr r4
 8012069:	00726570 	rsbseq	r6, r2, r0, ror r5
 801206d:	00000000 	andeq	r0, r0, r0
 8012071:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8012075:	00007265 	andeq	r7, r0, r5, ror #4
 8012079:	00000000 	andeq	r0, r0, r0
 801207d:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8012081:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8012085:	00000000 	andeq	r0, r0, r0
 8012089:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801208d:	00006c61 	andeq	r6, r0, r1, ror #24
 8012091:	00000000 	andeq	r0, r0, r0
 8012095:	20424752 	subcs	r4, r2, r2, asr r7
 8012099:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801209d:	0000006c 	andeq	r0, r0, ip, rrx
 80120a1:	 	cps	#0

080120a4 <RemoteConfig::s_GET>:
 80120a4:	0800a5f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, sp, pc}
 80120a8:	00000000 	andeq	r0, r0, r0
 80120ac:	08011f39 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sl, fp, ip}
 80120b0:	00000008 	andeq	r0, r0, r8
 80120b4:	08009bbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, ip, pc}
 80120b8:	00000000 	andeq	r0, r0, r0
 80120bc:	08011f42 	stmdaeq	r1, {r1, r6, r8, r9, sl, fp, ip}
 80120c0:	00000005 	andeq	r0, r0, r5
 80120c4:	08009bbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, ip, pc}
 80120c8:	00000000 	andeq	r0, r0, r0
 80120cc:	08011f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, ip}
 80120d0:	00000006 	andeq	r0, r0, r6
 80120d4:	08009d31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp, ip, pc}
 80120d8:	00000000 	andeq	r0, r0, r0
 80120dc:	08011f4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip}
 80120e0:	00000007 	andeq	r0, r0, r7
 80120e4:	08009cf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, fp, ip, pc}
 80120e8:	00000000 	andeq	r0, r0, r0
 80120ec:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}
 80120f0:	00000008 	andeq	r0, r0, r8
 80120f4:	08009c9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, ip, pc}
 80120f8:	00000000 	andeq	r0, r0, r0
 80120fc:	08011f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, ip}
 8012100:	00000008 	andeq	r0, r0, r8
 8012104:	08009f85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, ip, pc}
 8012108:	00000000 	andeq	r0, r0, r0
 801210c:	08011f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, ip}
 8012110:	00010004 	andeq	r0, r1, r4
 8012114:	0800a2e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sp, pc}
 8012118:	00000000 	andeq	r0, r0, r0
 801211c:	08011f65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, fp, ip}
 8012120:	00000009 	andeq	r0, r0, r9
 8012124:	6f626552 	svcvs	0x00626552
 8012128:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801212c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8012130:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8012134:	6f6f6265 	svcvs	0x006f6265
 8012138:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801213c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8012140:	6f637200 	svcvs	0x00637200
 8012144:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012148:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801214c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8012150:	6b726f77 	blvs	9cadf34 <__exidx_end+0x1c9a68c>
 8012154:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012158:	73696400 	cmnvc	r9, #0, 8
 801215c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012160:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012164:	33316500 	teqcc	r1, #0, 10
 8012168:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 801216c:	61700074 	cmnvs	r0, r4, ror r0
 8012170:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 8012174:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012178:	00000000 	andeq	r0, r0, r0

0801217c <RemoteConfig::s_TXT>:
 801217c:	08009f8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, ip, pc}
 8012180:	00000000 	andeq	r0, r0, r0
 8012184:	0800a211 	stmdaeq	r0, {r0, r4, r9, sp, pc}
 8012188:	00000000 	andeq	r0, r0, r0
 801218c:	08012141 	stmdaeq	r1, {r0, r6, r8, sp}
 8012190:	0000000b 	andeq	r0, r0, fp
 8012194:	0000000c 	andeq	r0, r0, ip
 8012198:	08009fb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, fp, ip, pc}
 801219c:	00000000 	andeq	r0, r0, r0
 80121a0:	0800a241 	stmdaeq	r0, {r0, r6, r9, sp, pc}
 80121a4:	00000000 	andeq	r0, r0, r0
 80121a8:	0801214d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sp}
 80121ac:	0000000b 	andeq	r0, r0, fp
 80121b0:	00000000 	andeq	r0, r0, r0
 80121b4:	0800a03d 	stmdaeq	r0, {r0, r2, r3, r4, r5, sp, pc}
 80121b8:	00000000 	andeq	r0, r0, r0
 80121bc:	0800a2b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, sp, pc}
 80121c0:	00000000 	andeq	r0, r0, r0
 80121c4:	08012159 	stmdaeq	r1, {r0, r3, r4, r6, r8, sp}
 80121c8:	0000000b 	andeq	r0, r0, fp
 80121cc:	0000000f 	andeq	r0, r0, pc
 80121d0:	08009fe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 80121d4:	00000000 	andeq	r0, r0, r0
 80121d8:	0800a269 	stmdaeq	r0, {r0, r3, r5, r6, r9, sp, pc}
 80121dc:	00000000 	andeq	r0, r0, r0
 80121e0:	08012165 	stmdaeq	r1, {r0, r2, r5, r6, r8, sp}
 80121e4:	00000008 	andeq	r0, r0, r8
 80121e8:	00000004 	andeq	r0, r0, r4
 80121ec:	0800a011 	stmdaeq	r0, {r0, r4, sp, pc}
 80121f0:	00000000 	andeq	r0, r0, r0
 80121f4:	0800a291 	stmdaeq	r0, {r0, r4, r7, r9, sp, pc}
 80121f8:	00000000 	andeq	r0, r0, r0
 80121fc:	0801216e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sp}
 8012200:	0000000a 	andeq	r0, r0, sl
 8012204:	00000002 	andeq	r0, r0, r2
 8012208:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 801220c:	4f500054 	svcmi	0x00500054
 8012210:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8012214:	00505454 	subseq	r5, r0, r4, asr r4
 8012218:	31000a20 	tstcc	r0, r0, lsr #20
 801221c:	3a00312e 	bcc	801e6dc <__exidx_end+0xae34>
 8012220:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8012224:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8012228:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 801222c:	3b200065 	blcc	88123c8 <__exidx_end+0x7feb20>
 8012230:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8012234:	6163696c 	cmnvs	r3, ip, ror #18
 8012238:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801223c:	6f736a2f 	svcvs	0x00736a2f
 8012240:	6f43006e 	svcvs	0x0043006e
 8012244:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8012248:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 801224c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8012250:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8012254:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8012258:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801225c:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8012260:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8012264:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8012268:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801226c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8012270:	2f00736a 	svccs	0x0000736a
 8012274:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012278:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 801227c:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8012280:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012284:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8012288:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801228c:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8012290:	616c7073 	smcvs	50947	; 0xc703
 8012294:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8012298:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801229c:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80122a0:	6f736a2f 	svcvs	0x00736a2f
 80122a4:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80122a8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80122ac:	62657200 	rsbvs	r7, r5, #0, 4
 80122b0:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80122b4:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80122b8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80122bc:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80122c0:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80122c4:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80122c8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80122cc:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80122d0:	0a3e6c6d 	beq	8fad48c <__exidx_end+0xf99be4>
 80122d4:	6165683c 	cmnvs	r5, ip, lsr r8
 80122d8:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80122dc:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80122e0:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 80122e4:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 80122e8:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80122ec:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80122f0:	6165682f 	cmnvs	r5, pc, lsr #16
 80122f4:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 80122f8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80122fc:	31683c3e 	cmncc	r8, lr, lsr ip
 8012300:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8012304:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8012308:	6f622f3c 	svcvs	0x00622f3c
 801230c:	0a3e7964 	beq	8fb08a4 <__exidx_end+0xf9cffc>
 8012310:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8012314:	0a3e6c6d 	beq	8fad4d0 <__exidx_end+0xf99c28>
 8012318:	71655200 	cmnvc	r5, r0, lsl #4
 801231c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8012320:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8012324:	20797469 	rsbscs	r7, r9, r9, ror #8
 8012328:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 801232c:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8012330:	6f4e0065 	svcvs	0x004e0065
 8012334:	6f462074 	svcvs	0x00462074
 8012338:	00646e75 	rsbeq	r6, r4, r5, ror lr
 801233c:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8012340:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8012344:	20495255 	subcs	r5, r9, r5, asr r2
 8012348:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 801234c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8012350:	72655600 	rsbvc	r5, r5, #0, 12
 8012354:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012358:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8012360 <RemoteConfig::s_TXT+0x1e4>
 801235c:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8012360:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8012364:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8012368:	6f687465 	svcvs	0x00687465
 801236c:	6f4e2064 	svcvs	0x004e2064
 8012370:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8012374:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8012378:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801237c:	61420064 	cmpvs	r2, r4, rrx
 8012380:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8012384:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8012388:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 801238c:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8012390:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8012394:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8012398:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 801239c:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 80123a0:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80123a4:	20726576 	rsbscs	r6, r2, r6, ror r5
 80123a8:	6f727245 	svcvs	0x00727245
 80123ac:	4b4f0072 	blmi	93d257c <__exidx_end+0x13becd4>
 80123b0:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80123b4:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80123b8:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80123bc:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80123c0:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80123c4:	0a3e6c6d 	beq	8fad580 <__exidx_end+0xf99cd8>
 80123c8:	6165683c 	cmnvs	r5, ip, lsr r8
 80123cc:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80123d0:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80123d4:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 80123d8:	2f3c7325 	svccs	0x003c7325
 80123dc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80123e0:	2f3c3e65 	svccs	0x003c3e65
 80123e4:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80123e8:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 80123ec:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80123f0:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80123f4:	2f3c7325 	svccs	0x003c7325
 80123f8:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 80123fc:	646f622f 	strbtvs	r6, [pc], #-559	; 8012404 <RemoteConfig::s_TXT+0x288>
 8012400:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8012404:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8012408:	000a3e6c 	andeq	r3, sl, ip, ror #28
 801240c:	50545448 	subspl	r5, r4, r8, asr #8
 8012410:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8012414:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8012418:	0a0d7325 	beq	836f0b4 <__exidx_end+0x35b80c>
 801241c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8012420:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012424:	0a0d7325 	beq	836f0c0 <__exidx_end+0x35b818>
 8012428:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 801242c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8012430:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8012434:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8012438:	6f430a0d 	svcvs	0x00430a0d
 801243c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8012440:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8012444:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8012448:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 801244c:	6f430a0d 	svcvs	0x00430a0d
 8012450:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8012454:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012458:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 801245c:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8012460:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08012464 <contentType>:
 8012464:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012468:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801246c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8012484:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012488:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80124a4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80124a8:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80124ac:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80124b0:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80124c4:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80124c8:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80124cc:	2f6e6f69 	svccs	0x006e6f69
 80124d0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080124e4 <RemoteConfigConst::PARAMS_DISABLE>:
 80124e4:	61736964 	cmnvs	r3, r4, ror #18
 80124e8:	00656c62 	rsbeq	r6, r5, r2, ror #24

080124ec <RemoteConfigConst::PARAMS_FILE_NAME>:
 80124ec:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80124f0:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80124f4:	00747874 	rsbseq	r7, r4, r4, ror r8

080124f8 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80124f8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80124fc:	5f79616c 	svcpl	0x0079616c
 8012500:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08012505 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8012505:	61736964 	cmnvs	r3, r4, ror #18
 8012509:	5f656c62 	svcpl	0x00656c62
 801250d:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8012511:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08012513 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8012513:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8012517:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 801251b:	6f6f6265 	svcvs	0x006f6265
 801251f:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08012521 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8012521:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8012525:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8011fc1 <s_Node+0x52>
 8012529:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801252d:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801252f <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801252f:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8012533:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8012537:	6f746361 	svcvs	0x00746361
 801253b:	7b007972 	blvc	8030b0b <__exidx_end+0x1d263>
 801253f:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8012543:	7b3a2274 	blvc	8e9af1b <__exidx_end+0xe87673>
 8012547:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801254b:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801254f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012553:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012557:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801255b:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801255f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012563:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012567:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801256b:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801256f:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012573:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012577:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801257b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801257f:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8012583:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012587:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801258b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801258f:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8012593:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8012597:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801259b:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801259f:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80125a3:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80125a7:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80125ab:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80125af:	616f6222 	cmnvs	pc, r2, lsr #4
 80125b3:	3a226472 	bcc	88ab783 <__exidx_end+0x897edb>
 80125b7:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80125bb:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80125bf:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80125c3:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80125c7:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80125cb:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80125cf:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80125d3:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80125d7:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80125db:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80125df:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80125e3:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80125e7:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80125eb:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80125ef:	7b000a7d 	blvc	8014feb <__exidx_end+0x1743>
 80125f3:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80125f7:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80125fb:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80125ff:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8012603:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012607:	7b3a2273 	blvc	8e9afdb <__exidx_end+0xe87733>
 801260b:	33316522 	teqcc	r1, #142606336	; 0x8800000
 801260f:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8012613:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8012617:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801261b:	2e314520 	cfabs64cs	mvdx4, mvdx1
 801261f:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8012623:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8012627:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 801262b:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 801262f:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8012633:	72542058 	subsvc	r2, r4, #88	; 0x58
 8012637:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 801263b:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 801263f:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8012643:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012647:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801264b:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 801264f:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8012653:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8012657:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 801265b:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 801265f:	6b726f77 	blvs	9cae443 <__exidx_end+0x1c9ab9b>
 8012663:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012667:	4e223a22 	vmulmi.f32	s6, s4, s5
 801266b:	6f777465 	svcvs	0x00777465
 801266f:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8012673:	6f637222 	svcvs	0x00637222
 8012677:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801267b:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801267f:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8012683:	746f6d65 	strbtvc	r6, [pc], #-3429	; 801268b <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8012687:	6f632065 	svcvs	0x00632065
 801268b:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801268f:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8012693:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012697:	 	stccc	13, cr7, [r0], {125}	; 0x7d

0801269a <index_html>:
 801269a:	4f44213c 	svcmi	0x0044213c
 801269e:	50595443 	subspl	r5, r9, r3, asr #8
 80126a2:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 80126a6:	0a3e6c6d 	beq	8fad862 <__exidx_end+0xf99fba>
 80126aa:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 80126ae:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80126b2:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80126b6:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 80126ba:	6b6e696c 	blvs	9bacc72 <__exidx_end+0x1b993ca>
 80126be:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80126c2:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80126c6:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80126ca:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80126ce:	72682022 	rsbvc	r2, r8, #34	; 0x22
 80126d2:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80126d6:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80126da:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80126de:	20227373 	eorcs	r7, r2, r3, ror r3
 80126e2:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80126e6:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80126ea:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80126ee:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80126f2:	0a3e656c 	beq	8fabcaa <__exidx_end+0xf98402>
 80126f6:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80126fa:	0a3e6461 	beq	8fab886 <__exidx_end+0xf97fde>
 80126fe:	646f623c 	strbtvs	r6, [pc], #-572	; 8012706 <index_html+0x6c>
 8012702:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8012706:	6165683c 	cmnvs	r5, ip, lsr r8
 801270a:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 801270e:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8012712:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8012716:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801271a:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 801271e:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012722:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012726:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801272a:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801272e:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8012732:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8012736:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801273a:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801273e:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012742:	6f746365 	svcvs	0x00746365
 8012746:	20227972 	eorcs	r7, r2, r2, ror r9
 801274a:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801274e:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8012752:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8012756:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801275a:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801275e:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8012762:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8012766:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801276a:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801276e:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8012772:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8012776:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801277a:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801277e:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012782:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8012786:	20227478 	eorcs	r7, r2, r8, ror r4
 801278a:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801278e:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8012792:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8012796:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801279a:	0a3e656c 	beq	8fabd52 <__exidx_end+0xf984aa>
 801279e:	6f663c09 	svcvs	0x00663c09
 80127a2:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 80127a6:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 80127aa:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80127ae:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 80127b2:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80127b6:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 80127ba:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80127be:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 80127c2:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80127c6:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80127ca:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 80127ce:	20747069 	rsbscs	r7, r4, r9, rrx
 80127d2:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 80127d6:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 80127da:	6a2e7865 	bvs	8bb0976 <__exidx_end+0xb9d0ce>
 80127de:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80127e2:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80127e6:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80127ea:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80127ee:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80127f2:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80127f6:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80127fa:	 	svcvs	0x0062000a

080127fc <styles_css>:
 80127fc:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012800:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012804:	63616220 	cmnvs	r1, #32, 4
 8012808:	6f72676b 	svcvs	0x0072676b
 801280c:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8012810:	6f6c6f63 	svcvs	0x006c6f63
 8012814:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012818:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801281c:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8012820:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8012824:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012828:	6f6c6f63 	svcvs	0x006c6f63
 801282c:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012830:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012834:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8012838:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 801283c:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8012840:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012844:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8012848:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801284c:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012850:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012854:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012858:	0a3b7865 	beq	8ef09f4 <__exidx_end+0xedd14c>
 801285c:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8012860:	0a7b2069 	beq	9edaa0c <__exidx_end+0x1ec7164>
 8012864:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8012868:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801286c:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8012870:	6f6e203a 	svcvs	0x006e203a
 8012874:	0a3b656e 	beq	8eebe34 <__exidx_end+0xed858c>
 8012878:	616d2020 	cmnvs	sp, r0, lsr #32
 801287c:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8012880:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8012884:	70352078 	eorsvc	r2, r5, r8, ror r0
 8012888:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 801288c:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8012890:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012894:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012898:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801289c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80128a0:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80128a4:	0a3b7865 	beq	8ef0a40 <__exidx_end+0xedd198>
 80128a8:	6f622020 	svcvs	0x00622020
 80128ac:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80128b0:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80128b4:	3a737569 	bcc	9cefe60 <__exidx_end+0x1cdc5b8>
 80128b8:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80128bc:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80128c0:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80128c4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80128c8:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80128cc:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80128d0:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80128d4:	0a3b7870 	beq	8ef0a9c <__exidx_end+0xedd1f4>
 80128d8:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 80128dc:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80128e0:	0a7b2072 	beq	9edaab0 <__exidx_end+0x1ec7208>
 80128e4:	69642020 	stmdbvs	r4!, {r5, sp}^
 80128e8:	616c7073 	smcvs	50947	; 0xc703
 80128ec:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80128f0:	3b78656c 	blcc	9e2bea8 <__exidx_end+0x1e18600>
 80128f4:	6a20200a 	bvs	881a924 <__exidx_end+0x80707c>
 80128f8:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80128fc:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8012900:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012904:	203a746e 	eorscs	r7, sl, lr, ror #8
 8012908:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801290c:	0a3b7265 	beq	8eef2a8 <__exidx_end+0xedba00>
 8012910:	6f622020 	svcvs	0x00622020
 8012914:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012918:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801291c:	3a737569 	bcc	9cefec8 <__exidx_end+0x1cdc620>
 8012920:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012924:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012928:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801292c:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012930:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012934:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012938:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801293c:	0a3b7870 	beq	8ef0b04 <__exidx_end+0xedd25c>
 8012940:	00000a7d 	andeq	r0, r0, sp, ror sl

08012944 <HttpContent>:
 8012944:	0801225e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sp}
 8012948:	080127fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, sp}
 801294c:	0801226a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sp}
 8012950:	0801295c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, sp}
 8012954:	08012252 	stmdaeq	r1, {r1, r4, r6, r9, sp}
 8012958:	0801269a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, sp}

0801295c <index_js>:
 801295c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012960:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012964:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012968:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801296c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012970:	6a284e4f 	bvs	8a262b4 <__exidx_end+0xa12a0c>
 8012974:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012978:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801297c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012980:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8012984:	6a2f273d 	bvs	8bdc680 <__exidx_end+0xbc8dd8>
 8012988:	2f6e6f73 	svccs	0x006e6f73
 801298c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8012990:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012994:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012998:	20797274 	rsbscs	r7, r9, r4, ror r2
 801299c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80129a0:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80129a4:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80129a8:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 80129ac:	20746961 	rsbscs	r6, r4, r1, ror #18
 80129b0:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 80129b4:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 80129b8:	0a3b296c 	beq	8edcf70 <__exidx_end+0xec96c8>
 80129bc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80129c0:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 80129c4:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 80129c8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80129cc:	73657220 	cmnvc	r5, #32, 4
 80129d0:	6f736a2e 	svcvs	0x00736a2e
 80129d4:	3b29286e 	blcc	8a5cb94 <__exidx_end+0xa492ec>
 80129d8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80129dc:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 80129e0:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 80129e4:	6f727265 	svcvs	0x00727265
 80129e8:	7b202972 	blvc	881cfb8 <__exidx_end+0x809710>
 80129ec:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80129f0:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 80129f4:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 80129f8:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80129fc:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8012a00:	3b29726f 	blcc	8a6f3c4 <__exidx_end+0xa5bb1c>
 8012a04:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012a08:	0a0a7d0a 	beq	82b1e38 <__exidx_end+0x29e590>
 8012a0c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012a10:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012a14:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012a18:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8012a1c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012a20:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012a24:	20292874 	eorcs	r2, r9, r4, ror r8
 8012a28:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012a2c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012a30:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012a34:	6177613d 	cmnvs	r7, sp, lsr r1
 8012a38:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012a3c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012a40:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012a44:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012a48:	0a3b2927 	beq	8edceec <__exidx_end+0xec9644>
 8012a4c:	6f640909 	svcvs	0x00640909
 8012a50:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012a54:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012a58:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012a5c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012a60:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012a64:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012a68:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8012a6c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012a70:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012a74:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012a78:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8012a7c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012a80:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8012a84:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8012a88:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8012a8c:	2b656d61 	blcs	996e018 <__exidx_end+0x195a770>
 8012a90:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012a10 <index_js+0xb4>
 8012a94:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012a98:	2b223e69 	blcs	88a2444 <__exidx_end+0x88eb9c>
 8012a9c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012aa0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012aa4:	6f6e2e74 	svcvs	0x006e2e74
 8012aa8:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8012aac:	2b657079 	blcs	996ec98 <__exidx_end+0x195b3f0>
 8012ab0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012a30 <index_js+0xd4>
 8012ab4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012ab8:	2b223e69 	blcs	88a2464 <__exidx_end+0x88ebbc>
 8012abc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012ac0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012ac4:	6f6e2e74 	svcvs	0x006e2e74
 8012ac8:	702e6564 	eorvc	r6, lr, r4, ror #10
 8012acc:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8012ad0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012ad4:	2f3c222b 	svccs	0x003c222b
 8012ad8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012adc:	0a7d0a3b 	beq	9f553d0 <__exidx_end+0x1f41b28>
 8012ae0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8012ae4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8012ae8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012aec:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012af0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012af4:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012af8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012afc:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8012b00:	0a7b2029 	beq	9edabac <__exidx_end+0x1ec7304>
 8012b04:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012b08:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8012b0c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012b10:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012b14:	6177613d 	cmnvs	r7, sp, lsr r1
 8012b18:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012b1c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012b20:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012b24:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012b28:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012b2c:	3b292779 	blcc	8a5c918 <__exidx_end+0xa49070>
 8012b30:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012b34:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012b38:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012b3c:	0a22223d 	beq	889b438 <__exidx_end+0x887b90>
 8012b40:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012b44:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8012b48:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8012b4c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8012b50:	6a624f3d 	bvs	98a684c <__exidx_end+0x1892fa4>
 8012b54:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8012b58:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8012b5c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8012b60:	6f746365 	svcvs	0x00746365
 8012b64:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8012b68:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012b6c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8012b70:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012b74:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8012b78:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8012b7c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8012b80:	6145726f 	cmpvs	r5, pc, ror #4
 8012b84:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8012b88:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012b8c:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012b90:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8012b94:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012b98:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012b9c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012ba0:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012ba4:	203d2065 	eorscs	r2, sp, r5, rrx
 8012ba8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012bac:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012bb0:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012bb4:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8012bb8:	6b5b5d22 	blvs	96ea048 <__exidx_end+0x16d67a0>
 8012bbc:	3b5d7965 	blcc	9771158 <__exidx_end+0x175d8b0>
 8012bc0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012bc4:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8012bc8:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012bcc:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012bd0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012bd4:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8012bd8:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012bdc:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012be0:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012be4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012be8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012bec:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012bf0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012bf4:	0a3b223e 	beq	8edb4f4 <__exidx_end+0xec7c4c>
 8012bf8:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012bfc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012c00:	6f640909 	svcvs	0x00640909
 8012c04:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012c08:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012c0c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012c10:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012c14:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012c18:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012c1c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012c20:	6f746365 	svcvs	0x00746365
 8012c24:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8012c28:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012c2c:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012c30:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012c34:	3b6c6d74 	blcc	9b2e20c <__exidx_end+0x1b1a964>
 8012c38:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012c3c:	5f746567 	svcpl	0x00746567
 8012c40:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012c44:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012c48:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012c4c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8012c50:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012c54:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8012c58:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8012c5c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012c60:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012c64:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8012c68:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8012c6c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012c70:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8012c74:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012c78:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012c7c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8012c80:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012c84:	6177613d 	cmnvs	r7, sp, lsr r1
 8012c88:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012c8c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012c90:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012c94:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012c98:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012c9c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012ca0:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012ca4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8012ca8:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012cac:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012cb0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012cb4:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8012cb8:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012cbc:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012cc0:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012cc4:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8012cc8:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012ccc:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012cd0:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012cd4:	2b22563e 	blcs	88a85d4 <__exidx_end+0x894d2c>
 8012cd8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012cdc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012ce0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012ce4:	2b6e6f69 	blcs	9baea90 <__exidx_end+0x1b9b1e8>
 8012ce8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012c68 <index_js+0x30c>
 8012cec:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012cf0:	2b223e69 	blcs	88a269c <__exidx_end+0x88edf4>
 8012cf4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012cf8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012cfc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012d00:	61642e64 	cmnvs	r4, r4, ror #28
 8012d04:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8012d08:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012d0c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012d10:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012d14:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012d18:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8012d1c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8012d20:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8012d24:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8012d28:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8012d2c:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8012d30:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8012d34:	6f697372 	svcvs	0x00697372
 8012d38:	6f622e6e 	svcvs	0x00622e6e
 8012d3c:	2b647261 	blcs	992f6c8 <__exidx_end+0x191be20>
 8012d40:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012cc0 <index_js+0x364>
 8012d44:	3b223e69 	blcc	88a26f0 <__exidx_end+0x88ee48>
 8012d48:	0a0a7d0a 	beq	82b2178 <__exidx_end+0x29e8d0>
 8012d4c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012d50:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012d54:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012d58:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012d5c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8012d64 <index_js+0x408>
 8012d60:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8012d64:	20296c65 	eorcs	r6, r9, r5, ror #24
 8012d68:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8012d6c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8012d70:	613d7478 	teqvs	sp, r8, ror r4
 8012d74:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012d78:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8012d7c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8012d80:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8012d84:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012d88:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012d8c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012d90:	3b22223d 	blcc	889b68c <__exidx_end+0x887de4>
 8012d94:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8012d98:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8012d9c:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8012da0:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8012da4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012da8:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012dac:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012db0:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8012db4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012db8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012dbc:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012dc0:	0a7b2029 	beq	9edae6c <__exidx_end+0x1ec75c4>
 8012dc4:	61760909 	cmnvs	r6, r9, lsl #18
 8012dc8:	61762072 	cmnvs	r6, r2, ror r0
 8012dcc:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012dd0:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8012dd4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012dd8:	6b5b5d6c 	blvs	96ea390 <__exidx_end+0x16d6ae8>
 8012ddc:	3b5d7965 	blcc	9771378 <__exidx_end+0x175dad0>
 8012de0:	2009090a 	andcs	r0, r9, sl, lsl #18
 8012de4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012de8:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012dec:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012df0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012df4:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012df8:	2f3c222b 	svccs	0x003c222b
 8012dfc:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012e00:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012e04:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012e08:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012e0c:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012e10:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8012e18 <index_js+0x4bc>
 8012e14:	3b223e72 	blcc	88a27e4 <__exidx_end+0x88ef3c>
 8012e18:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012e1c:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012e20:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8012e24:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8012e28:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012e2c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012e30:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8012e34:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8012e38:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012e3c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012e40:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012e44:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012e48:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8012e4c:	0a3b6c6d 	beq	8eee008 <__exidx_end+0xeda760>
 8012e50:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8012e54:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012e58:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012e5c:	3b292874 	blcc	8a5d034 <__exidx_end+0xa4978c>
 8012e60:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8012e64:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8012e68:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012e6c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012e70:	0a3b2928 	beq	8edd318 <__exidx_end+0xec9a70>
 8012e74:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012e78:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8012e7c:	6f697372 	svcvs	0x00697372
 8012e80:	3b29286e 	blcc	8a5d040 <__exidx_end+0xa49798>
 8012e84:	0000000a 	andeq	r0, r0, sl

08012e88 <s_aStorSize>:
 8012e88:	00000060 	andeq	r0, r0, r0, rrx
 8012e8c:	00000090 	muleq	r0, r0, r0
 8012e90:	00000020 	andeq	r0, r0, r0, lsr #32
 8012e94:	00000040 	andeq	r0, r0, r0, asr #32
 8012e98:	00000060 	andeq	r0, r0, r0, rrx
 8012e9c:	00000040 	andeq	r0, r0, r0, asr #32
 8012ea0:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ea4:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ea8:	000001e0 	andeq	r0, r0, r0, ror #3
 8012eac:	00000040 	andeq	r0, r0, r0, asr #32
 8012eb0:	00000020 	andeq	r0, r0, r0, lsr #32
 8012eb4:	00000060 	andeq	r0, r0, r0, rrx
 8012eb8:	00000030 	andeq	r0, r0, r0, lsr r0
 8012ebc:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ec0:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012ec4:	00000030 	andeq	r0, r0, r0, lsr r0
 8012ec8:	00000040 	andeq	r0, r0, r0, asr #32
 8012ecc:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ed0:	00000060 	andeq	r0, r0, r0, rrx
 8012ed4:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ed8:	00000400 	andeq	r0, r0, r0, lsl #8
 8012edc:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ee0:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ee4:	00000040 	andeq	r0, r0, r0, asr #32
 8012ee8:	00000060 	andeq	r0, r0, r0, rrx
 8012eec:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ef0:	00000020 	andeq	r0, r0, r0, lsr #32
 8012ef4:	00000020 	andeq	r0, r0, r0, lsr #32

08012ef8 <vtable for StoreDisplayUdf>:
	...
 8012f00:	0800b27d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, ip, sp, pc}
 8012f04:	0800b2c5 	stmdaeq	r0, {r0, r2, r6, r7, r9, ip, sp, pc}
 8012f08:	0800b2a1 	stmdaeq	r0, {r0, r5, r7, r9, ip, sp, pc}
 8012f0c:	0800b281 	stmdaeq	r0, {r0, r7, r9, ip, sp, pc}

08012f10 <vtable for StoreDmxSend>:
	...
 8012f18:	0800b2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, ip, sp, pc}
 8012f1c:	0800b32d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, ip, sp, pc}
 8012f20:	0800b309 	stmdaeq	r0, {r0, r3, r8, r9, ip, sp, pc}
 8012f24:	0800b2e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, ip, sp, pc}

08012f28 <vtable for StoreE131>:
	...
 8012f30:	0800b34d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, ip, sp, pc}
 8012f34:	0800b395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, sp, pc}
 8012f38:	0800b371 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, ip, sp, pc}
 8012f3c:	0800b351 	stmdaeq	r0, {r0, r4, r6, r8, r9, ip, sp, pc}

08012f40 <vtable for StoreNetwork>:
	...
 8012f48:	0800b3b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, ip, sp, pc}
 8012f4c:	0800b4c9 	stmdaeq	r0, {r0, r3, r6, r7, sl, ip, sp, pc}
 8012f50:	0800b3bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, ip, sp, pc}
 8012f54:	0800b4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, ip, sp, pc}
 8012f58:	0800b46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, ip, sp, pc}
 8012f5c:	0800b441 	stmdaeq	r0, {r0, r6, sl, ip, sp, pc}
 8012f60:	0800b411 	stmdaeq	r0, {r0, r4, sl, ip, sp, pc}
 8012f64:	0800b499 	stmdaeq	r0, {r0, r3, r4, r7, sl, ip, sp, pc}
 8012f68:	0800b3e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, sp, pc}
 8012f6c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8012f70:	00000000 	andeq	r0, r0, r0
 8012f74:	0800b3b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, ip, sp, pc}
 8012f78:	0800b4d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, ip, sp, pc}
 8012f7c:	0800b491 	stmdaeq	r0, {r0, r4, r7, sl, ip, sp, pc}
 8012f80:	0800b465 	stmdaeq	r0, {r0, r2, r5, r6, sl, ip, sp, pc}
 8012f84:	0800b439 	stmdaeq	r0, {r0, r3, r4, r5, sl, ip, sp, pc}
 8012f88:	0800b4c1 	stmdaeq	r0, {r0, r6, r7, sl, ip, sp, pc}
 8012f8c:	0800b409 	stmdaeq	r0, {r0, r3, sl, ip, sp, pc}

08012f90 <vtable for StoreRemoteConfig>:
	...
 8012f98:	0800b511 	stmdaeq	r0, {r0, r4, r8, sl, ip, sp, pc}
 8012f9c:	0800b559 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, ip, sp, pc}
 8012fa0:	0800b535 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, ip, sp, pc}
 8012fa4:	0800b515 	stmdaeq	r0, {r0, r2, r4, r8, sl, ip, sp, pc}
 8012fa8:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8012fac:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8012fb0:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8012fb4:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8012fb8:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8012fbc:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 8012fc0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012fc4:	7a697320 	bvc	9a6fc4c <__exidx_end+0x1a5c3a4>
 8012fc8:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 8012fcc:	746f7420 	strbtvc	r7, [pc], #-1056	; 8012fd4 <vtable for StoreRemoteConfig+0x44>
 8012fd0:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8012fd4:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8012fd8:	0a736574 	beq	9cec5b0 <__exidx_end+0x1cd8d08>
 8012fdc:	70637400 	rsbvc	r7, r3, r0, lsl #8
 8012fe0:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8012fe4:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8012fe8:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 8012fec:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8012ff0:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8012ff4:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8012ff8:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 8012ffc:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 8013000:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8013004:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8013008:	5241000a 	subpl	r0, r1, #10
 801300c:	6f6c2050 	svcvs	0x006c2050
 8013010:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8013014:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8013018:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801301c:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 8013020:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8013024:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8013028:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 801302c:	000a7961 	andeq	r7, sl, r1, ror #18
 8013030:	20505241 	subscs	r5, r0, r1, asr #4
 8013034:	6b6f6f6c 	blvs	9beedec <__exidx_end+0x1bdb544>
 8013038:	66207075 			; <UNDEFINED> instruction: 0x66207075
 801303c:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8013040:	 	vmlsmi.f32	s0, s0, s9

08013043 <NetworkConst::MSG_NETWORK_INIT>:
 8013043:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8013047:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801304b:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801304f:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8013053:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8013057:	3135322e 	teqcc	r5, lr, lsr #4
 801305b:	63745f00 	cmnvs	r4, #0, 30
 801305f:	6f6c2e70 	svcvs	0x006c2e70
 8013063:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8013067:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801306b:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801306f:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8013077 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8013073:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8013077:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801221b <RemoteConfig::s_TXT+0x9f>
 801307b:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801307f:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8013083:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8013087:	20000a53 	andcs	r0, r0, r3, asr sl
 801308b:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801308f:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8013093:	0a676e69 	beq	99eea3f <__exidx_end+0x19db197>
 8013097:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801309b:	3a20656d 	bcc	882c657 <__exidx_end+0x818daf>
 801309f:	0a732520 	beq	9cdc527 <__exidx_end+0x1cc8c7f>
 80130a3:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80130a7:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80130ab:	000a7325 	andeq	r7, sl, r5, lsr #6
 80130af:	30687465 	rsbcc	r7, r8, r5, ror #8
 80130b3:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 80130b7:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80130bb:	5f656369 	svcpl	0x00656369
 80130bf:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 80130c3:	6b726f77 	blvs	9caeea7 <__exidx_end+0x1c9b5ff>
 80130c7:	4820000a 	stmdami	r0!, {r1, r3}
 80130cb:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80130cf:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80130d3:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80130d7:	20000a73 	andcs	r0, r0, r3, ror sl
 80130db:	614e6649 	cmpvs	lr, r9, asr #12
 80130df:	2020656d 	eorcs	r6, r0, sp, ror #10
 80130e3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80130e7:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80130eb:	000a7325 	andeq	r7, sl, r5, lsr #6
 80130ef:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80130f3:	20202074 	eorcs	r2, r0, r4, ror r0
 80130f7:	3a202020 	bcc	881b17f <__exidx_end+0x8078d7>
 80130fb:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80130ff:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013103:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013107:	0a64252f 	beq	991c5cb <__exidx_end+0x1908d23>
 801310b:	654e2000 	strbvs	r2, [lr, #-0]
 801310f:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8013113:	2020206b 	eorcs	r2, r0, fp, rrx
 8013117:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801311b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801311f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013123:	20000a64 	andcs	r0, r0, r4, ror #20
 8013127:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801312b:	20796177 	rsbscs	r6, r9, r7, ror r1
 801312f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013133:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013137:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801313b:	0a64252e 	beq	991c5fb <__exidx_end+0x1908d53>
 801313f:	72422000 	subvc	r2, r2, #0
 8013143:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8013147:	20747361 	rsbscs	r7, r4, r1, ror #6
 801314b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801314f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013153:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013157:	20000a64 	andcs	r0, r0, r4, ror #20
 801315b:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801315f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013163:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013167:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801316b:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801316f:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8013173:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8013177:	3a78322e 	bcc	9e1fa37 <__exidx_end+0x1e0c18f>
 801317b:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801317f:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8013183:	20000a78 	andcs	r0, r0, r8, ror sl
 8013187:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801318b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801318f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013193:	000a6325 	andeq	r6, sl, r5, lsr #6
 8013197:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801319b:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801319f:	 	rsbvc	r0, r9, r0, asr r0

080131a1 <NetworkParamsConst::IP_ADDRESS>:
 80131a1:	615f7069 	cmpvs	pc, r9, rrx
 80131a5:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80131a9:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080131ac <NetworkParamsConst::DEFAULT_GATEWAY>:
 80131ac:	61666564 	cmnvs	r6, r4, ror #10
 80131b0:	5f746c75 	svcpl	0x00746c75
 80131b4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80131b8:	00796177 	rsbseq	r6, r9, r7, ror r1

080131bc <NetworkParamsConst::DHCP_RETRY_TIME>:
 80131bc:	70636864 	rsbvc	r6, r3, r4, ror #16
 80131c0:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80131c4:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80131cc <NetworkParamsConst::HOSTNAME>
 80131c8:	00656d69 	rsbeq	r6, r5, r9, ror #26

080131cc <NetworkParamsConst::HOSTNAME>:
 80131cc:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80131d0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080131d5 <NetworkParamsConst::NET_MASK>:
 80131d5:	5f74656e 	svcpl	0x0074656e
 80131d9:	6b73616d 	blvs	9ceb795 <__exidx_end+0x1cd7eed>
	...

080131de <NetworkParamsConst::USE_DHCP>:
 80131de:	5f657375 	svcpl	0x00657375
 80131e2:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080131e7 <NetworkParamsConst::FILE_NAME>:
 80131e7:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80131eb:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80131ef:	00747874 	rsbseq	r7, r4, r4, ror r8
 80131f3:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80131f7:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80131fb:	61747320 	cmnvs	r4, r0, lsr #6
 80131ff:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8013203:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013207:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801320b:	252f6425 	strcs	r6, [pc, #-1061]!	; 8012dee <index_js+0x492>
 801320f:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013213:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8013217:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801321b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801321f:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8013223:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8013227:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801322b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801322f:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8013233:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8013237:	20657261 	rsbcs	r7, r5, r1, ror #4
 801323b:	2a2e2556 	bcs	8b9c79b <__exidx_end+0xb88ef3>
 801323f:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8013243:	72205043 	eorvc	r5, r0, #67	; 0x43
 8013247:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801324b:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801324f:	50434844 	subpl	r4, r3, r4, asr #16
 8013253:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8013257:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801325b:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801325f:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013263:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8013267:	6f647475 	svcvs	0x00647475
 801326b:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08013270 <pArray>:
 8013270:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 8013274:	080132c0 	stmdaeq	r1, {r6, r7, r9, ip, sp}
 8013278:	080131a1 	stmdaeq	r1, {r0, r5, r7, r8, ip, sp}
 801327c:	0801330a 	stmdaeq	r1, {r1, r3, r8, r9, ip, sp}
 8013280:	08013416 	stmdaeq	r1, {r1, r2, r4, sl, ip, sp}
 8013284:	080132cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, ip, sp}
 8013288:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 801328c:	080131cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp}
 8013290:	0801337c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 8013294:	0801338c 	stmdaeq	r1, {r2, r3, r7, r8, r9, ip, sp}
 8013298:	0801339c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, ip, sp}
 801329c:	080133ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, ip, sp}
 80132a0:	080131d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, ip, sp}
 80132a4:	08013404 	stmdaeq	r1, {r2, sl, ip, sp}
 80132a8:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 80132ac:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 80132b0:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 80132b4:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 80132b8:	080131ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip, sp}
 80132bc:	080132d8 	stmdaeq	r1, {r3, r4, r6, r7, r9, ip, sp}

080132c0 <DisplayUdfParamsConst::BOARD_NAME>:
 80132c0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80132c4:	616e5f64 	cmnvs	lr, r4, ror #30
 80132c8:	 	tstvs	r0, sp, ror #10

080132cb <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80132cb:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80132cf:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80132d3:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080132d8 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80132d8:	5f786d64 	svcpl	0x00786d64
 80132dc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80132e0:	6f697463 	svcvs	0x00697463
 80132e4:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080132e6 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80132e6:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80132ea:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80132ee:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8012d89 <index_js+0x42d>
 80132f2:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080132f4 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80132f4:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80132f8:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80132fc:	61636974 	smcvs	13972	; 0x3694
 8013300:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08013304 <DisplayUdfParamsConst::TITLE>:
 8013304:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013308:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801330a <DisplayUdfParamsConst::VERSION>:
 801330a:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801330e:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08013312 <DisplayUdfParamsConst::FILE_NAME>:
 8013312:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013316:	2e79616c 	rpwcsez	f6, f1, #4.0
 801331a:	00747874 	rsbseq	r7, r4, r4, ror r8

0801331e <DisplayUdfParamsConst::INTENSITY>:
 801331e:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8013322:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8013326:	50410079 	subpl	r0, r1, r9, ror r0
 801332a:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801332e:	726f5000 	rsbvc	r5, pc, #0
 8013332:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8013336:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801333a:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801333e:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8013342:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8013346:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801334a:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 801334e:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8013352:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013356:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801335a:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801335e:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8013362:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8013366:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 801336a:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801336e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013372:	2023000a 	eorcs	r0, r3, sl
 8013376:	23207325 			; <UNDEFINED> instruction: 0x23207325
 801337a:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

0801337c <LightSetParamsConst::UNIVERSE_PORT>:
 801337c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013380:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013384:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013388:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801338c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013390:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013394:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013398:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801339c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80133a0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80133a4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80133a8:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80133ac:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80133b0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80133b4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80133b8:	00645f74 	rsbeq	r5, r4, r4, ror pc

080133bc <LightSetParamsConst::MERGE_MODE_PORT>:
 80133bc:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80133c0:	6f6d5f65 	svcvs	0x006d5f65
 80133c4:	705f6564 	subsvc	r6, pc, r4, ror #10
 80133c8:	5f74726f 	svcpl	0x0074726f
 80133cc:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 80133d0:	5f656772 	svcpl	0x00656772
 80133d4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80133d8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80133dc:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80133e0:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80133e4:	6f6d5f65 	svcvs	0x006d5f65
 80133e8:	705f6564 	subsvc	r6, pc, r4, ror #10
 80133ec:	5f74726f 	svcpl	0x0074726f
 80133f0:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 80133f4:	5f656772 	svcpl	0x00656772
 80133f8:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80133fc:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013400:	00645f74 	rsbeq	r5, r4, r4, ror pc

08013404 <LightSetParamsConst::DMX_START_ADDRESS>:
 8013404:	5f786d64 	svcpl	0x00786d64
 8013408:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801340c:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8013410:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8013414:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08013416 <LightSetParamsConst::UNIVERSE>:
 8013416:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801341a:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801341f <LightSetParamsConst::DIRECTION>:
 801341f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013423:	6f697463 	svcvs	0x00697463
 8013427:	6f705f6e 	svcvs	0x00705f6e
 801342b:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801342f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013433:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8013437:	5f6e6f69 	svcpl	0x006e6f69
 801343b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801343f:	0000625f 	andeq	r6, r0, pc, asr r2
 8013443:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013447:	6f697463 	svcvs	0x00697463
 801344b:	6f705f6e 	svcvs	0x00705f6e
 801344f:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8013453:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013457:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801345b:	5f6e6f69 	svcpl	0x006e6f69
 801345f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013463:	0000645f 	andeq	r6, r0, pc, asr r4
 8013467:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801346b:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801346f:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8013473:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8013477:	31485300 	mrscc	r5, (UNDEF: 120)
 801347b:	00363031 	eorseq	r3, r6, r1, lsr r0
 801347f:	31445353 	cmpcc	r4, r3, asr r3
 8013483:	00363033 	eorseq	r3, r6, r3, lsr r0
 8013487:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801348b:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801348f:	000a2964 	andeq	r2, sl, r4, ror #18
 8013493:	aaeeaa40 	bge	7bbdd9b <__stack_size+0x7bbc59b>
 8013497:	000000ee 	andeq	r0, r0, lr, ror #1
	...

0801349c <_OledFont8x6>:
 801349c:	00000040 	andeq	r0, r0, r0, asr #32
 80134a0:	40000000 	andmi	r0, r0, r0
 80134a4:	005f0000 	subseq	r0, pc, r0
 80134a8:	00400000 	subeq	r0, r0, r0
 80134ac:	00070007 	andeq	r0, r7, r7
 80134b0:	7f144000 	svcvc	0x00144000
 80134b4:	00147f14 	andseq	r7, r4, r4, lsl pc
 80134b8:	7f2a2440 	svcvc	0x002a2440
 80134bc:	4000122a 	andmi	r1, r0, sl, lsr #4
 80134c0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80134c4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80134c8:	50205649 	eorpl	r5, r0, r9, asr #12
 80134cc:	08004000 	stmdaeq	r0, {lr}
 80134d0:	00000307 	andeq	r0, r0, r7, lsl #6
 80134d4:	221c0040 	andscs	r0, ip, #64	; 0x40
 80134d8:	40000041 	andmi	r0, r0, r1, asr #32
 80134dc:	1c224100 	stfnes	f4, [r2], #-0
 80134e0:	2a400000 	bcs	90134e8 <__exidx_end+0xfffc40>
 80134e4:	2a1c7f1c 	bcs	873315c <__exidx_end+0x71f8b4>
 80134e8:	08084000 	stmdaeq	r8, {lr}
 80134ec:	0008083e 	andeq	r0, r8, lr, lsr r8
 80134f0:	70800040 	addvc	r0, r0, r0, asr #32
 80134f4:	40000030 	andmi	r0, r0, r0, lsr r0
 80134f8:	08080808 	stmdaeq	r8, {r3, fp}
 80134fc:	00400008 	subeq	r0, r0, r8
 8013500:	00606000 	rsbeq	r6, r0, r0
 8013504:	10204000 	eorne	r4, r0, r0
 8013508:	00020408 	andeq	r0, r2, r8, lsl #8
 801350c:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8013510:	40003e45 	andmi	r3, r0, r5, asr #28
 8013514:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8013518:	72400000 	subvc	r0, r0, #0
 801351c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8013520:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8013524:	00334d49 	eorseq	r4, r3, r9, asr #26
 8013528:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801352c:	4000107f 	andmi	r1, r0, pc, ror r0
 8013530:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8013534:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8013538:	3149494a 	cmpcc	r9, sl, asr #18
 801353c:	21414000 	mrscs	r4, (UNDEF: 65)
 8013540:	00070911 	andeq	r0, r7, r1, lsl r9
 8013544:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8013548:	40003649 	andmi	r3, r0, r9, asr #12
 801354c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8013550:	0040001e 	subeq	r0, r0, lr, lsl r0
 8013554:	00001400 	andeq	r1, r0, r0, lsl #8
 8013558:	40004000 	andmi	r4, r0, r0
 801355c:	00000034 	andeq	r0, r0, r4, lsr r0
 8013560:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8013564:	40004122 	andmi	r4, r0, r2, lsr #2
 8013568:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801356c:	00400014 	subeq	r0, r0, r4, lsl r0
 8013570:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8013574:	01024000 	mrseq	r4, (UNDEF: 2)
 8013578:	00060959 	andeq	r0, r6, r9, asr r9
 801357c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8013580:	40004e59 	andmi	r4, r0, r9, asr lr
 8013584:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8013588:	7f40007c 	svcvc	0x0040007c
 801358c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8013590:	413e4000 	teqmi	lr, r0
 8013594:	00224141 	eoreq	r4, r2, r1, asr #2
 8013598:	41417f40 	cmpmi	r1, r0, asr #30
 801359c:	40003e41 	andmi	r3, r0, r1, asr #28
 80135a0:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80135a4:	7f400041 	svcvc	0x00400041
 80135a8:	01090909 	tsteq	r9, r9, lsl #18
 80135ac:	413e4000 	teqmi	lr, r0
 80135b0:	00735141 	rsbseq	r5, r3, r1, asr #2
 80135b4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80135b8:	40007f08 	andmi	r7, r0, r8, lsl #30
 80135bc:	417f4100 	cmnmi	pc, r0, lsl #2
 80135c0:	20400000 	subcs	r0, r0, r0
 80135c4:	013f4140 	teqeq	pc, r0, asr #2
 80135c8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80135cc:	00412214 	subeq	r2, r1, r4, lsl r2
 80135d0:	40407f40 	submi	r7, r0, r0, asr #30
 80135d4:	40004040 	andmi	r4, r0, r0, asr #32
 80135d8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80135dc:	7f40007f 	svcvc	0x0040007f
 80135e0:	7f100804 	svcvc	0x00100804
 80135e4:	413e4000 	teqmi	lr, r0
 80135e8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80135ec:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80135f0:	40000609 	andmi	r0, r0, r9, lsl #12
 80135f4:	2151413e 	cmpcs	r1, lr, lsr r1
 80135f8:	7f40005e 	svcvc	0x0040005e
 80135fc:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8013600:	49264000 	stmdbmi	r6!, {lr}
 8013604:	00324949 	eorseq	r4, r2, r9, asr #18
 8013608:	7f010340 	svcvc	0x00010340
 801360c:	40000301 	andmi	r0, r0, r1, lsl #6
 8013610:	4040403f 	submi	r4, r0, pc, lsr r0
 8013614:	1f40003f 	svcne	0x0040003f
 8013618:	1f204020 	svcne	0x00204020
 801361c:	403f4000 	eorsmi	r4, pc, r0
 8013620:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8013624:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8013628:	40006314 	andmi	r6, r0, r4, lsl r3
 801362c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8013630:	61400003 	cmpvs	r0, r3
 8013634:	434d4959 	movtmi	r4, #55641	; 0xd959
 8013638:	7f004000 	svcvc	0x00004000
 801363c:	00414141 	subeq	r4, r1, r1, asr #2
 8013640:	08040240 	stmdaeq	r4, {r6, r9}
 8013644:	40002010 	andmi	r2, r0, r0, lsl r0
 8013648:	41414100 	mrsmi	r4, (UNDEF: 81)
 801364c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8013650:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8013654:	40404000 	submi	r4, r0, r0
 8013658:	00404040 	subeq	r4, r0, r0, asr #32
 801365c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8013660:	40000008 	andmi	r0, r0, r8
 8013664:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8013668:	7f400040 	svcvc	0x00400040
 801366c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8013670:	44384000 	ldrtmi	r4, [r8], #-0
 8013674:	00284444 	eoreq	r4, r8, r4, asr #8
 8013678:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801367c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8013680:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8013684:	00400018 	subeq	r0, r0, r8, lsl r0
 8013688:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801368c:	a4184000 	ldrge	r4, [r8], #-0
 8013690:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8013694:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8013698:	40007804 	andmi	r7, r0, r4, lsl #16
 801369c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80136a0:	20400000 	subcs	r0, r0, r0
 80136a4:	003d4040 	eorseq	r4, sp, r0, asr #32
 80136a8:	107f4000 	rsbsne	r4, pc, r0
 80136ac:	00004428 	andeq	r4, r0, r8, lsr #8
 80136b0:	7f410040 	svcvc	0x00410040
 80136b4:	40000040 	andmi	r0, r0, r0, asr #32
 80136b8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80136bc:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80136c0:	78040408 	stmdavc	r4, {r3, sl}
 80136c4:	44384000 	ldrtmi	r4, [r8], #-0
 80136c8:	00384444 	eorseq	r4, r8, r4, asr #8
 80136cc:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80136d0:	40001824 	andmi	r1, r0, r4, lsr #16
 80136d4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80136d8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80136dc:	08040408 	stmdaeq	r4, {r3, sl}
 80136e0:	54484000 	strbpl	r4, [r8], #-0
 80136e4:	00245454 	eoreq	r5, r4, r4, asr r4
 80136e8:	3f040440 	svccc	0x00040440
 80136ec:	40002444 	andmi	r2, r0, r4, asr #8
 80136f0:	2040403c 	subcs	r4, r0, ip, lsr r0
 80136f4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80136f8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80136fc:	403c4000 	eorsmi	r4, ip, r0
 8013700:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8013704:	10284440 	eorne	r4, r8, r0, asr #8
 8013708:	40004428 	andmi	r4, r0, r8, lsr #8
 801370c:	9090904c 	addsls	r9, r0, ip, asr #32
 8013710:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8013714:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8013718:	08004000 	stmdaeq	r0, {lr}
 801371c:	00004136 	andeq	r4, r0, r6, lsr r1
 8013720:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8013724:	40000000 	andmi	r0, r0, r0
 8013728:	08364100 	ldmdaeq	r6!, {r8, lr}
 801372c:	02400000 	subeq	r0, r0, #0
 8013730:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8013734:	263c4000 	ldrtcs	r4, [ip], -r0
 8013738:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801373c <oled_128x32_init>:
 801373c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013740:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8013744:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013748:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801374c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013750:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013754 <oled_128x64_init>:
 8013754:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013758:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801375c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013760:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8013764:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013768:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801376c <vtable for Ssd1306>:
	...
 8013774:	0800ee59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, sp, lr, pc}
 8013778:	0800ee85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, sp, lr, pc}
 801377c:	0800f19d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, ip, sp, lr, pc}
 8013780:	0800f121 	stmdaeq	r0, {r0, r5, r8, ip, sp, lr, pc}
 8013784:	0800efed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
 8013788:	0800eea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, sp, lr, pc}
 801378c:	0800eecd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, fp, sp, lr, pc}
 8013790:	0800efc3 	stmdaeq	r0, {r0, r1, r6, r7, r8, r9, sl, fp, sp, lr, pc}
 8013794:	0800ef7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, sp, lr, pc}
 8013798:	0800ee5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r9, sl, fp, sp, lr, pc}
 801379c:	0800f029 	stmdaeq	r0, {r0, r3, r5, ip, sp, lr, pc}
 80137a0:	0800f035 	stmdaeq	r0, {r0, r2, r4, r5, ip, sp, lr, pc}
 80137a4:	0800f04f 	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
 80137a8:	0800ee5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp, sp, lr, pc}
 80137ac:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80137b0:	5b1b006d 	blpl	86d396c <__exidx_end+0x6c00c4>
 80137b4:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80137b8:	31335b1b 	teqcc	r3, fp, lsl fp
 80137bc:	5b1b006d 	blpl	86d3978 <__exidx_end+0x6c00d0>
 80137c0:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80137c4:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80137c8:	5b1b006d 	blpl	86d3984 <__exidx_end+0x6c00dc>
 80137cc:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80137d0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80137d4:	205d732a 	subscs	r7, sp, sl, lsr #6
 80137d8:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80137dc:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80137e0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80137e4:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80137e8:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80137ec:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80137f0:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80137f4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80137f8:	203a636f 	eorscs	r6, sl, pc, ror #6
 80137fc:	000a7525 	andeq	r7, sl, r5, lsr #10
 8013800:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013804:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013808:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 801380c:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8013810:	6b636f6c 	blvs	98ef5c8 <__exidx_end+0x18dbd20>
 8013814:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8013818:	000a7469 	andeq	r7, sl, r9, ror #8
 801381c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013820:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013824:	6f6c4270 	svcvs	0x006c4270
 8013828:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801382c:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013830:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8013834:	7a697320 	bvc	9a704bc <__exidx_end+0x1a5cc14>
 8013838:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 801383c:	6164202c 	cmnvs	r4, ip, lsr #32
 8013840:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8013844:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8013848:	3a656572 	bcc	996ce18 <__exidx_end+0x1959570>
 801384c:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8013850:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013854:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013858:	203d2072 	eorscs	r2, sp, r2, ror r0
 801385c:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8013860:	6f6c4270 	svcvs	0x006c4270
 8013864:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8013868:	0a702520 	beq	9c1ccf0 <__exidx_end+0x1c09448>
 801386c:	00000000 	andeq	r0, r0, r0

08013870 <days_of_month>:
 8013870:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013874:	0000001c 	andeq	r0, r0, ip, lsl r0
 8013878:	0000001f 	andeq	r0, r0, pc, lsl r0
 801387c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013880:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013884:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013888:	0000001f 	andeq	r0, r0, pc, lsl r0
 801388c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013890:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013894:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013898:	0000001e 	andeq	r0, r0, lr, lsl r0
 801389c:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080138a0 <__exidx_start>:
 80138a0:	7fff3908 	svcvc	0x00ff3908
 80138a4:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080138a8 <.ARM.attributes>:
 80138a8:	00002e41 	andeq	r2, r0, r1, asr #28
 80138ac:	61656100 	cmnvs	r5, r0, lsl #2
 80138b0:	01006962 	tsteq	r0, r2, ror #18
 80138b4:	00000024 	andeq	r0, r0, r4, lsr #32
 80138b8:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80138bc:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80138c0:	0600334d 	streq	r3, [r0], -sp, asr #6
 80138c4:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 80138c8:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 80138cc:	17011501 	strne	r1, [r1, -r1, lsl #10]
 80138d0:	1a011803 	bne	80598e4 <__exidx_end+0x4603c>
 80138d4:	Address 0x00000000080138d4 is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000711 	andcs	r0, r0, r1, lsl r7

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <guard variable for lightset::Data::Get()::instance>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <lightset::Data::Get()::instance>:
	...

20000704 <E131Bridge::s_pThis>:
20000704:	00000000 	andeq	r0, r0, r0

20000708 <s_ReceivingMask>:
20000708:	00000000 	andeq	r0, r0, r0

2000070c <DmxSend::s_nStarted>:
	...

2000070d <DmxConfigUdp::s_Buffer>:
	...

20000720 <s_RxBuffer>:
	...

20000930 <s_TxBuffer>:
	...

20000b34 <sv_PortState>:
20000b34:	00000000 	andeq	r0, r0, r0

20000b38 <s_nUartsSending>:
20000b38:	00000000 	andeq	r0, r0, r0

20000b3c <sv_nRxDmxPackets>:
	...

20000b4c <Dmx::s_pThis>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <gv_RdmDataReceiveEnd>:
20000b50:	00000000 	andeq	r0, r0, r0

20000b54 <RemoteConfig::s_pUdpBuffer>:
20000b54:	00000000 	andeq	r0, r0, r0

20000b58 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b7c <RemoteConfig::s_pThis>:
20000b7c:	00000000 	andeq	r0, r0, r0

20000b80 <SpiFlashStore::s_nWaitMillis>:
20000b80:	00000000 	andeq	r0, r0, r0

20000b84 <SpiFlashStore::s_SpiFlashData>:
	...

20001b84 <SpiFlashStore::s_nStartAddress>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_bHaveFlashChip>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_State>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <SpiFlashStore::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <SpiFlashStore::s_bIsNew>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreDisplayUdf::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreDmxSend::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <StoreE131::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <StoreNetwork::s_pThis>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <StoreRemoteConfig::s_pThis>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <FlashRom::s_pThis>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_nAddress>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_State>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nPage>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <flashrom::s_pData>:
20001bc0:	00000000 	andeq	r0, r0, r0

20001bc4 <flashrom::s_isBank0>:
20001bc4:	00000000 	andeq	r0, r0, r0

20001bc8 <flashrom::s_nLength>:
20001bc8:	00000000 	andeq	r0, r0, r0

20001bcc <g_ip_info>:
	...

20001bd8 <g_mac_address>:
20001bd8:	00000000 	andeq	r0, r0, r0
	...

20001bde <s_is_dhcp>:
	...

20001be0 <s_p>:
20001be0:	00000000 	andeq	r0, r0, r0

20001be4 <s_ticker>:
20001be4:	00000000 	andeq	r0, r0, r0

20001be8 <s_mac_address>:
	...

20001bf0 <s_mac_address_arp_reply>:
20001bf0:	00000000 	andeq	r0, r0, r0
	...

20001bf6 <s_id>:
	...

20001bf8 <s_recv_queue>:
	...

20002768 <s_tcb>:
	...

200027ac <s_tcp>:
	...

20002d98 <broadcast_mask>:
20002d98:	00000000 	andeq	r0, r0, r0

20002d9c <gw_ip>:
20002d9c:	00000000 	andeq	r0, r0, r0

20002da0 <on_network_mask>:
20002da0:	00000000 	andeq	r0, r0, r0

20002da4 <s_id>:
20002da4:	00000000 	andeq	r0, r0, r0

20002da8 <s_ports_allowed>:
	...

20002dc8 <s_recv_queue>:
	...

20008a68 <s_send_packet>:
	...

20009054 <MDNS::s_nRemoteIp>:
20009054:	00000000 	andeq	r0, r0, r0

20009058 <MDNS::s_nRemotePort>:
20009058:	00000000 	andeq	r0, r0, r0

2000905c <MDNS::s_nMulticastIp>:
2000905c:	00000000 	andeq	r0, r0, r0

20009060 <MDNS::s_AnswerLocalIp>:
	...

20009264 <MDNS::s_ServiceRecords>:
	...

20009284 <MDNS::s_nBytesReceived>:
20009284:	00000000 	andeq	r0, r0, r0

20009288 <MDNS::s_ServiceRecordsData>:
	...

2000948c <MDNS::s_pName>:
2000948c:	00000000 	andeq	r0, r0, r0

20009490 <MDNS::s_pBuffer>:
20009490:	00000000 	andeq	r0, r0, r0

20009494 <Network::s_pThis>:
20009494:	00000000 	andeq	r0, r0, r0

20009498 <NetworkParams::m_tNetworkParams>:
	...

200094f8 <s_arp_announce>:
	...

20009524 <s_arp_reply>:
	...

20009550 <s_arp_request>:
	...

2000957c <s_arp_records>:
	...

200096fc <s_entry_current>:
200096fc:	00000000 	andeq	r0, r0, r0

20009700 <s_dhcp_allocated_gw>:
20009700:	00000000 	andeq	r0, r0, r0

20009704 <s_dhcp_allocated_ip>:
20009704:	00000000 	andeq	r0, r0, r0

20009708 <s_dhcp_allocated_netmask>:
20009708:	00000000 	andeq	r0, r0, r0

2000970c <s_dhcp_message>:
	...

20009930 <s_dhcp_server_ip>:
20009930:	00000000 	andeq	r0, r0, r0

20009934 <s_groups>:
	...

20009a54 <s_id>:
20009a54:	00000000 	andeq	r0, r0, r0

20009a58 <s_joins_allowed_index>:
20009a58:	00000000 	andeq	r0, r0, r0

20009a5c <s_leave>:
	...

20009a8c <s_multicast_mac>:
	...

20009a94 <s_report>:
	...

20009ac4 <DisplayUdf::s_pThis>:
20009ac4:	00000000 	andeq	r0, r0, r0

20009ac8 <PropertiesConfig::s_Config>:
20009ac8:	00000000 	andeq	r0, r0, r0

20009acc <Display::s_pThis>:
20009acc:	00000000 	andeq	r0, r0, r0

20009ad0 <_ClearBuffer>:
	...

20009b58 <Ssd1306::s_pThis>:
20009b58:	00000000 	andeq	r0, r0, r0

20009b5c <FirmwareVersion::s_FirmwareVersion>:
	...

20009b72 <FirmwareVersion::s_Print>:
	...

20009bb4 <FirmwareVersion::s_pThis>:
20009bb4:	00000000 	andeq	r0, r0, r0

20009bb8 <LedBlink::s_pThis>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <Hardware::s_pThis>:
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <outptr>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <last.0>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <s_micros>:
	...

20009bd0 <set_timer>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <s_nSysTickMillis>:
20009bd4:	00000000 	andeq	r0, r0, r0

20009bd8 <enet_init_status>:
20009bd8:	00000000 	andeq	r0, r0, r0

20009bdc <s_nAddress>:
20009bdc:	00000000 	andeq	r0, r0, r0

20009be0 <dma_current_ptp_rxdesc>:
20009be0:	00000000 	andeq	r0, r0, r0

20009be4 <dma_current_ptp_txdesc>:
20009be4:	00000000 	andeq	r0, r0, r0

20009be8 <dma_current_rxdesc>:
20009be8:	00000000 	andeq	r0, r0, r0

20009bec <dma_current_txdesc>:
20009bec:	00000000 	andeq	r0, r0, r0

20009bf0 <enet_initpara>:
	...

20009c2c <rx_buff>:
	...

2000cbcc <rxdesc_tab>:
	...

2000cc4c <tx_buff>:
	...

2000d834 <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
