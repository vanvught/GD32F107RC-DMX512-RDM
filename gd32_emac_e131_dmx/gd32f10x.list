
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp, ip, sp, lr}
 8007008:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800700c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007010:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007014:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007018:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 800702c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007030:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800703c:	0800ff69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr, pc}
 8007040:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007044:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007048:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800704c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007050:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007054:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007058:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800705c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007060:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007064:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007068:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800706c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007070:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007074:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007078:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800707c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007080:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007084:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007088:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800708c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007090:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007094:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007098:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800709c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ac:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070b0:	0800b2ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, ip, sp, pc}
 80070b4:	0800b365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, pc}
 80070b8:	0800b3b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, ip, sp, pc}
 80070bc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070cc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070dc:	0800b055 	stmdaeq	r0, {r0, r2, r4, r6, ip, sp, pc}
 80070e0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ec:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 8007100:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800710c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007110:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007114:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007118:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800711c:	0800b3d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, ip, sp, pc}
 8007120:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007124:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007128:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800712c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007130:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007134:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007138:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800713c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007140:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007144:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007148:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800714c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fdc5 	bl	800dd30 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f005 f8e2 	bl	800c378 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 ffd6 	bl	800e170 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20002170 	andcs	r2, r0, r0, ror r1
 80071e8:	20002164 	andcs	r2, r0, r4, ror #2
 80071ec:	20002176 	andcs	r2, r0, r6, ror r1

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 be9e 	b.w	800df40 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20002176 	andcs	r2, r0, r6, ror r1

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20002180 	andcs	r2, r0, r0, lsl #3

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f005 f8fd 	bl	800c42c <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f005 f8f1 	bl	800c42c <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20002d48 	andcs	r2, r0, r8, asr #26
 800725c:	20002170 	andcs	r2, r0, r0, ror r1
 8007260:	20002164 	andcs	r2, r0, r4, ror #2
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f005 fa50 	bl	800c734 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f005 fa71 	bl	800c784 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20003364 	andcs	r3, r0, r4, ror #6
 80072ac:	20003344 	andcs	r3, r0, r4, asr #6
 80072b0:	20009004 	andcs	r9, r0, r4
 80072b4:	20003340 	andcs	r3, r0, r0, asr #6
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f006 fbac 	bl	800da34 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f006 fb99 	bl	800da34 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f006 fb8d 	bl	800da34 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f006 fb7c 	bl	800da34 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f006 fb70 	bl	800da34 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f006 fb64 	bl	800da34 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f006 bb69 	b.w	800da48 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	20009a3a 	andcs	r9, r0, sl, lsr sl
 8007394:	20009a34 	andcs	r9, r0, r4, lsr sl
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20009a4a 	andcs	r9, r0, sl, asr #20
 80073a4:	20009a54 	andcs	r9, r0, r4, asr sl
 80073a8:	20009a92 	mulcs	r0, r2, sl
 80073ac:	20009a8c 	andcs	r9, r0, ip, lsl #21
 80073b0:	20009aa2 	andcs	r9, r0, r2, lsr #21
 80073b4:	20009aac 	andcs	r9, r0, ip, lsr #21
 80073b8:	20009a60 	andcs	r9, r0, r0, ror #20

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20009c38 	andcs	r9, r0, r8, lsr ip
 80073ec:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 fe08 	bl	800e030 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 fdb4 	bl	800df9c <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 fd9a 	bl	800df9c <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20009e70 	andcs	r9, r0, r0, ror lr
 8007490:	20009f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 8007494:	20009fd0 	ldrdcs	r9, [r0], -r0
 8007498:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
 800749c:	20009fc8 	andcs	r9, r0, r8, asr #31
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 fe12 	bl	800e0e8 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20009e70 	andcs	r9, r0, r0, ror lr

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f008 fcd3 	bl	800feac <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f008 fd00 	bl	800ff0c <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f008 fcfd 	bl	800ff0c <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	08011f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp, ip}
 800751c:	08013c24 	stmdaeq	r1, {r2, r5, sl, fp, ip, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f009 fa7d 	bl	8010a24 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f009 fa87 	bl	8010a4c <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 bf09 	b.w	800c358 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20002178 	andcs	r2, r0, r8, ror r1

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 ff65 	bl	800c440 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 ff46 	bl	800c42c <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 ff37 	bl	800c42c <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 ff2f 	bl	800c42c <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 ffd8 	bl	800c5d8 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 fef0 	bl	800c42c <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fee9 	bl	800c42c <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 ff08 	bl	800c48c <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 fea3 	bl	800c3f8 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 fe84 	bl	800c3f8 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 fec1 	bl	800c48c <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 ff5e 	bl	800c5d8 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 ff3c 	bl	800c5d8 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 fe4b 	bl	800c42c <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 fe67 	bl	800c48c <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 fe49 	bl	800c48c <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20002d04 	andcs	r2, r0, r4, lsl #26
 8007814:	20002d0c 	andcs	r2, r0, ip, lsl #26
 8007818:	20002194 	mulcs	r0, r4, r1
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 fdbf 	bl	800c3f8 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 fdfa 	bl	800c48c <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20002d04 	andcs	r2, r0, r4, lsl #26

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 ff08 	bl	800c734 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 ff01 	bl	800c734 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20003344 	andcs	r3, r0, r4, asr #6
 800795c:	20003364 	andcs	r3, r0, r4, ror #6

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f006 b874 	b.w	800da5c <arp_handle_request>
 8007974:	f006 b89a 	b.w	800daac <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 8007a14:	20009e70 	andcs	r9, r0, r0, ror lr

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f006 fba5 	bl	800e1b4 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f006 fba0 	bl	800e1b4 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f006 fb95 	bl	800e1b4 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f006 fb8a 	bl	800e1b4 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f006 fb6b 	bl	800e182 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f006 fb5e 	bl	800e182 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f008 ffbf 	bl	8010a54 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20002170 	andcs	r2, r0, r0, ror r1
 8007ae0:	20002164 	andcs	r2, r0, r4, ror #2

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f00a f884 	bl	8011c10 <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <Reset_Handler>:
 8007b18:	480c      	ldr	r0, [pc, #48]	; (8007b4c <Zerobss+0x10>)
 8007b1a:	4685      	mov	sp, r0
 8007b1c:	2100      	movs	r1, #0
 8007b1e:	e003      	b.n	8007b28 <DataInit>

08007b20 <CopyData>:
 8007b20:	4b0b      	ldr	r3, [pc, #44]	; (8007b50 <Zerobss+0x14>)
 8007b22:	585b      	ldr	r3, [r3, r1]
 8007b24:	5043      	str	r3, [r0, r1]
 8007b26:	3104      	adds	r1, #4

08007b28 <DataInit>:
 8007b28:	480a      	ldr	r0, [pc, #40]	; (8007b54 <Zerobss+0x18>)
 8007b2a:	4b0b      	ldr	r3, [pc, #44]	; (8007b58 <Zerobss+0x1c>)
 8007b2c:	1842      	adds	r2, r0, r1
 8007b2e:	429a      	cmp	r2, r3
 8007b30:	d3f6      	bcc.n	8007b20 <CopyData>
 8007b32:	4a0a      	ldr	r2, [pc, #40]	; (8007b5c <Zerobss+0x20>)
 8007b34:	e002      	b.n	8007b3c <Zerobss>

08007b36 <FillZerobss>:
 8007b36:	2300      	movs	r3, #0
 8007b38:	f842 3b04 	str.w	r3, [r2], #4

08007b3c <Zerobss>:
 8007b3c:	4b08      	ldr	r3, [pc, #32]	; (8007b60 <Zerobss+0x24>)
 8007b3e:	429a      	cmp	r2, r3
 8007b40:	d3f9      	bcc.n	8007b36 <FillZerobss>
 8007b42:	f008 fa19 	bl	800ff78 <SystemInit>
 8007b46:	f000 f901 	bl	8007d4c <main>
 8007b4a:	4770      	bx	lr
 8007b4c:	20018000 	andcs	r8, r1, r0
 8007b50:	08013d20 	stmdaeq	r1, {r5, r8, sl, fp, ip, sp}
 8007b54:	20000000 	andcs	r0, r0, r0
 8007b58:	200000f4 	strdcs	r0, [r0], -r4
 8007b5c:	200000f8 	strdcs	r0, [r0], -r8
 8007b60:	2000dd90 	mulcs	r0, r0, sp

08007b64 <ADC0_1_IRQHandler>:
 8007b64:	e7fe      	b.n	8007b64 <ADC0_1_IRQHandler>

08007b66 <memcmp>:
 8007b66:	b510      	push	{r4, lr}
 8007b68:	3901      	subs	r1, #1
 8007b6a:	4402      	add	r2, r0
 8007b6c:	4290      	cmp	r0, r2
 8007b6e:	d101      	bne.n	8007b74 <memcmp+0xe>
 8007b70:	2000      	movs	r0, #0
 8007b72:	e005      	b.n	8007b80 <memcmp+0x1a>
 8007b74:	7803      	ldrb	r3, [r0, #0]
 8007b76:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007b7a:	42a3      	cmp	r3, r4
 8007b7c:	d001      	beq.n	8007b82 <memcmp+0x1c>
 8007b7e:	1b18      	subs	r0, r3, r4
 8007b80:	bd10      	pop	{r4, pc}
 8007b82:	3001      	adds	r0, #1
 8007b84:	e7f2      	b.n	8007b6c <memcmp+0x6>

08007b86 <DisplayHandler::~DisplayHandler()>:
 8007b86:	4770      	bx	lr

08007b88 <dmxconfigudp::atoi(char const*, unsigned int)>:
 8007b88:	4603      	mov	r3, r0
 8007b8a:	b530      	push	{r4, r5, lr}
 8007b8c:	4401      	add	r1, r0
 8007b8e:	250a      	movs	r5, #10
 8007b90:	2000      	movs	r0, #0
 8007b92:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007b96:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8007b9a:	2c09      	cmp	r4, #9
 8007b9c:	d805      	bhi.n	8007baa <dmxconfigudp::atoi(char const*, unsigned int)+0x22>
 8007b9e:	fb05 2000 	mla	r0, r5, r0, r2
 8007ba2:	4299      	cmp	r1, r3
 8007ba4:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8007ba8:	d1f3      	bne.n	8007b92 <dmxconfigudp::atoi(char const*, unsigned int)+0xa>
 8007baa:	bd30      	pop	{r4, r5, pc}

08007bac <DisplayHandler::~DisplayHandler()>:
 8007bac:	b510      	push	{r4, lr}
 8007bae:	4604      	mov	r4, r0
 8007bb0:	f007 fd46 	bl	800f640 <operator delete(void*)>
 8007bb4:	4620      	mov	r0, r4
 8007bb6:	bd10      	pop	{r4, pc}

08007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007bb8:	b110      	cbz	r0, 8007bc0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007bba:	6803      	ldr	r3, [r0, #0]
 8007bbc:	6a1b      	ldr	r3, [r3, #32]
 8007bbe:	4718      	bx	r3
 8007bc0:	4770      	bx	lr

08007bc2 <Display::PutChar(int) [clone .isra.0]>:
 8007bc2:	b110      	cbz	r0, 8007bca <Display::PutChar(int) [clone .isra.0]+0x8>
 8007bc4:	6803      	ldr	r3, [r0, #0]
 8007bc6:	695b      	ldr	r3, [r3, #20]
 8007bc8:	4718      	bx	r3
 8007bca:	4770      	bx	lr

08007bcc <DisplayHandler::Print(unsigned int)>:
 8007bcc:	b538      	push	{r3, r4, r5, lr}
 8007bce:	7903      	ldrb	r3, [r0, #4]
 8007bd0:	b1f3      	cbz	r3, 8007c10 <DisplayHandler::Print(unsigned int)+0x44>
 8007bd2:	2904      	cmp	r1, #4
 8007bd4:	bf98      	it	ls
 8007bd6:	4b0f      	ldrls	r3, [pc, #60]	; (8007c14 <DisplayHandler::Print(unsigned int)+0x48>)
 8007bd8:	4d0f      	ldr	r5, [pc, #60]	; (8007c18 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007bda:	bf98      	it	ls
 8007bdc:	5c5c      	ldrbls	r4, [r3, r1]
 8007bde:	682b      	ldr	r3, [r5, #0]
 8007be0:	bf88      	it	hi
 8007be2:	2455      	movhi	r4, #85	; 0x55
 8007be4:	6998      	ldr	r0, [r3, #24]
 8007be6:	b178      	cbz	r0, 8007c08 <DisplayHandler::Print(unsigned int)+0x3c>
 8007be8:	7901      	ldrb	r1, [r0, #4]
 8007bea:	3901      	subs	r1, #1
 8007bec:	b2c9      	uxtb	r1, r1
 8007bee:	b168      	cbz	r0, 8007c0c <DisplayHandler::Print(unsigned int)+0x40>
 8007bf0:	7942      	ldrb	r2, [r0, #5]
 8007bf2:	3a01      	subs	r2, #1
 8007bf4:	b2d2      	uxtb	r2, r2
 8007bf6:	f7ff ffdf 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007bfa:	682b      	ldr	r3, [r5, #0]
 8007bfc:	4621      	mov	r1, r4
 8007bfe:	6998      	ldr	r0, [r3, #24]
 8007c00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007c04:	f7ff bfdd 	b.w	8007bc2 <Display::PutChar(int) [clone .isra.0]>
 8007c08:	4601      	mov	r1, r0
 8007c0a:	e7ee      	b.n	8007bea <DisplayHandler::Print(unsigned int)+0x1e>
 8007c0c:	4602      	mov	r2, r0
 8007c0e:	e7f0      	b.n	8007bf2 <DisplayHandler::Print(unsigned int)+0x26>
 8007c10:	bd38      	pop	{r3, r4, r5, pc}
 8007c12:	bf00      	nop
 8007c14:	08011f9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, fp, ip}
 8007c18:	2000a008 	andcs	sl, r0, r8

08007c1c <Display::TextStatus(char const*)>:
 8007c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c20:	4604      	mov	r4, r0
 8007c22:	6980      	ldr	r0, [r0, #24]
 8007c24:	460d      	mov	r5, r1
 8007c26:	b360      	cbz	r0, 8007c82 <Display::TextStatus(char const*)+0x66>
 8007c28:	7947      	ldrb	r7, [r0, #5]
 8007c2a:	2100      	movs	r1, #0
 8007c2c:	1e7e      	subs	r6, r7, #1
 8007c2e:	b2f6      	uxtb	r6, r6
 8007c30:	4632      	mov	r2, r6
 8007c32:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007c36:	f04f 0800 	mov.w	r8, #0
 8007c3a:	f7ff ffbd 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c3e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007c42:	45c1      	cmp	r9, r8
 8007c44:	69a0      	ldr	r0, [r4, #24]
 8007c46:	d816      	bhi.n	8007c76 <Display::TextStatus(char const*)+0x5a>
 8007c48:	4632      	mov	r2, r6
 8007c4a:	2100      	movs	r1, #0
 8007c4c:	f7ff ffb4 	bl	8007bb8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c50:	69a0      	ldr	r0, [r4, #24]
 8007c52:	b1b0      	cbz	r0, 8007c82 <Display::TextStatus(char const*)+0x66>
 8007c54:	2300      	movs	r3, #0
 8007c56:	7901      	ldrb	r1, [r0, #4]
 8007c58:	5cea      	ldrb	r2, [r5, r3]
 8007c5a:	b11a      	cbz	r2, 8007c64 <Display::TextStatus(char const*)+0x48>
 8007c5c:	1c5a      	adds	r2, r3, #1
 8007c5e:	4299      	cmp	r1, r3
 8007c60:	4613      	mov	r3, r2
 8007c62:	dcf9      	bgt.n	8007c58 <Display::TextStatus(char const*)+0x3c>
 8007c64:	6802      	ldr	r2, [r0, #0]
 8007c66:	4639      	mov	r1, r7
 8007c68:	69d4      	ldr	r4, [r2, #28]
 8007c6a:	b2db      	uxtb	r3, r3
 8007c6c:	462a      	mov	r2, r5
 8007c6e:	46a4      	mov	ip, r4
 8007c70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c74:	4760      	bx	ip
 8007c76:	2120      	movs	r1, #32
 8007c78:	f7ff ffa3 	bl	8007bc2 <Display::PutChar(int) [clone .isra.0]>
 8007c7c:	f108 0801 	add.w	r8, r8, #1
 8007c80:	e7df      	b.n	8007c42 <Display::TextStatus(char const*)+0x26>
 8007c82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007c86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c88:	4605      	mov	r5, r0
 8007c8a:	461e      	mov	r6, r3
 8007c8c:	460f      	mov	r7, r1
 8007c8e:	4614      	mov	r4, r2
 8007c90:	f7ff ffc4 	bl	8007c1c <Display::TextStatus(char const*)>
 8007c94:	7c6b      	ldrb	r3, [r5, #17]
 8007c96:	b19b      	cbz	r3, 8007cc0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8007c98:	43e2      	mvns	r2, r4
 8007c9a:	2312      	movs	r3, #18
 8007c9c:	7a28      	ldrb	r0, [r5, #8]
 8007c9e:	f88d 3004 	strb.w	r3, [sp, #4]
 8007ca2:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007ca6:	f88d 3005 	strb.w	r3, [sp, #5]
 8007caa:	f88d 2006 	strb.w	r2, [sp, #6]
 8007cae:	f008 ff69 	bl	8010b84 <gd32_i2c_set_address>
 8007cb2:	68e8      	ldr	r0, [r5, #12]
 8007cb4:	f008 ff5e 	bl	8010b74 <gd32_i2c_set_baudrate>
 8007cb8:	2103      	movs	r1, #3
 8007cba:	a801      	add	r0, sp, #4
 8007cbc:	f008 ff68 	bl	8010b90 <gd32_i2c_write>
 8007cc0:	1c73      	adds	r3, r6, #1
 8007cc2:	d006      	beq.n	8007cd2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8007cc4:	4639      	mov	r1, r7
 8007cc6:	4630      	mov	r0, r6
 8007cc8:	b003      	add	sp, #12
 8007cca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8007cce:	f007 bb5b 	b.w	800f388 <console_status>
 8007cd2:	b003      	add	sp, #12
 8007cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007cd8 <Display::SetSleep(bool)>:
 8007cd8:	b538      	push	{r3, r4, r5, lr}
 8007cda:	4604      	mov	r4, r0
 8007cdc:	6980      	ldr	r0, [r0, #24]
 8007cde:	460d      	mov	r5, r1
 8007ce0:	b138      	cbz	r0, 8007cf2 <Display::SetSleep(bool)+0x1a>
 8007ce2:	6803      	ldr	r3, [r0, #0]
 8007ce4:	7421      	strb	r1, [r4, #16]
 8007ce6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ce8:	4798      	blx	r3
 8007cea:	b915      	cbnz	r5, 8007cf2 <Display::SetSleep(bool)+0x1a>
 8007cec:	4b01      	ldr	r3, [pc, #4]	; (8007cf4 <Display::SetSleep(bool)+0x1c>)
 8007cee:	681b      	ldr	r3, [r3, #0]
 8007cf0:	6063      	str	r3, [r4, #4]
 8007cf2:	bd38      	pop	{r3, r4, r5, pc}
 8007cf4:	2000a114 	andcs	sl, r0, r4, lsl r1

08007cf8 <display::timeout::gpio_init()>:
 8007cf8:	b510      	push	{r4, lr}
 8007cfa:	f240 6003 	movw	r0, #1539	; 0x603
 8007cfe:	f008 fb79 	bl	80103f4 <rcu_periph_clock_enable>
 8007d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d06:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8007d0a:	2203      	movs	r2, #3
 8007d0c:	2148      	movs	r1, #72	; 0x48
 8007d0e:	4801      	ldr	r0, [pc, #4]	; (8007d14 <display::timeout::gpio_init()+0x1c>)
 8007d10:	f008 bad8 	b.w	80102c4 <gpio_init>
 8007d14:	40010c00 	andmi	r0, r1, r0, lsl #24

08007d18 <display::timeout::gpio_renew()>:
 8007d18:	4b03      	ldr	r3, [pc, #12]	; (8007d28 <display::timeout::gpio_renew()+0x10>)
 8007d1a:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8007d1e:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 8007d22:	f3c0 3080 	ubfx	r0, r0, #14, #1
 8007d26:	4770      	bx	lr
 8007d28:	40010000 	andmi	r0, r1, r0

08007d2c <Hardware::RebootHandler()>:
 8007d2c:	b508      	push	{r3, lr}
 8007d2e:	4b05      	ldr	r3, [pc, #20]	; (8007d44 <Hardware::RebootHandler()+0x18>)
 8007d30:	6818      	ldr	r0, [r3, #0]
 8007d32:	f003 fdf9 	bl	800b928 <Dmx::Blackout()>
 8007d36:	4b04      	ldr	r3, [pc, #16]	; (8007d48 <Hardware::RebootHandler()+0x1c>)
 8007d38:	6818      	ldr	r0, [r3, #0]
 8007d3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007d3e:	f001 be0b 	b.w	8009958 <E131Bridge::Stop()>
 8007d42:	bf00      	nop
 8007d44:	2000110c 	andcs	r1, r0, ip, lsl #2
 8007d48:	20000cd0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08007d4c <main>:
 8007d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d50:	2501      	movs	r5, #1
 8007d52:	f2ad 7dc4 	subw	sp, sp, #1988	; 0x7c4
 8007d56:	a803      	add	r0, sp, #12
 8007d58:	f007 fbca 	bl	800f4f0 <Hardware::Hardware()>
 8007d5c:	a864      	add	r0, sp, #400	; 0x190
 8007d5e:	f005 fa5d 	bl	800d21c <Network::Network()>
 8007d62:	a815      	add	r0, sp, #84	; 0x54
 8007d64:	f007 fb6e 	bl	800f444 <LedBlink::LedBlink()>
 8007d68:	a84e      	add	r0, sp, #312	; 0x138
 8007d6a:	f006 fa61 	bl	800e230 <DisplayUdf::DisplayUdf()>
 8007d6e:	4bb5      	ldr	r3, [pc, #724]	; (8008044 <main+0x2f8>)
 8007d70:	4ab5      	ldr	r2, [pc, #724]	; (8008048 <main+0x2fc>)
 8007d72:	49b6      	ldr	r1, [pc, #728]	; (800804c <main+0x300>)
 8007d74:	a804      	add	r0, sp, #16
 8007d76:	f007 fb1f 	bl	800f3b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007d7a:	a805      	add	r0, sp, #20
 8007d7c:	f004 f974 	bl	800c068 <FlashRom::FlashRom()>
 8007d80:	4fb3      	ldr	r7, [pc, #716]	; (8008050 <main+0x304>)
 8007d82:	a806      	add	r0, sp, #24
 8007d84:	f003 fee4 	bl	800bb50 <SpiFlashStore::SpiFlashStore()>
 8007d88:	49b2      	ldr	r1, [pc, #712]	; (8008054 <main+0x308>)
 8007d8a:	a804      	add	r0, sp, #16
 8007d8c:	f007 fb4c 	bl	800f428 <FirmwareVersion::Print(char const*)>
 8007d90:	2008      	movs	r0, #8
 8007d92:	613d      	str	r5, [r7, #16]
 8007d94:	f007 fc58 	bl	800f648 <operator new(unsigned int)>
 8007d98:	4baf      	ldr	r3, [pc, #700]	; (8008058 <main+0x30c>)
 8007d9a:	2400      	movs	r4, #0
 8007d9c:	6003      	str	r3, [r0, #0]
 8007d9e:	4baf      	ldr	r3, [pc, #700]	; (800805c <main+0x310>)
 8007da0:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	49ae      	ldr	r1, [pc, #696]	; (8008060 <main+0x314>)
 8007da8:	3b00      	subs	r3, #0
 8007daa:	bf18      	it	ne
 8007dac:	2301      	movne	r3, #1
 8007dae:	9017      	str	r0, [sp, #92]	; 0x5c
 8007db0:	7103      	strb	r3, [r0, #4]
 8007db2:	2303      	movs	r3, #3
 8007db4:	a84e      	add	r0, sp, #312	; 0x138
 8007db6:	f7ff ff66 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007dba:	a80f      	add	r0, sp, #60	; 0x3c
 8007dbc:	f004 f8dc 	bl	800bf78 <StoreNetwork::StoreNetwork()>
 8007dc0:	ab10      	add	r3, sp, #64	; 0x40
 8007dc2:	a90f      	add	r1, sp, #60	; 0x3c
 8007dc4:	a864      	add	r0, sp, #400	; 0x190
 8007dc6:	9392      	str	r3, [sp, #584]	; 0x248
 8007dc8:	f005 fa82 	bl	800d2d0 <Network::Init(NetworkParamsStore*)>
 8007dcc:	a864      	add	r0, sp, #400	; 0x190
 8007dce:	f005 fbc5 	bl	800d55c <Network::Print()>
 8007dd2:	2303      	movs	r3, #3
 8007dd4:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8007dd8:	49a2      	ldr	r1, [pc, #648]	; (8008064 <main+0x318>)
 8007dda:	a84e      	add	r0, sp, #312	; 0x138
 8007ddc:	f7ff ff53 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007de0:	a807      	add	r0, sp, #28
 8007de2:	f004 fe5d 	bl	800caa0 <MDNS::MDNS()>
 8007de6:	a807      	add	r0, sp, #28
 8007de8:	f004 ff1a 	bl	800cc20 <MDNS::Start()>
 8007dec:	f642 1305 	movw	r3, #10501	; 0x2905
 8007df0:	4621      	mov	r1, r4
 8007df2:	4a9d      	ldr	r2, [pc, #628]	; (8008068 <main+0x31c>)
 8007df4:	e9cd 4400 	strd	r4, r4, [sp]
 8007df8:	a807      	add	r0, sp, #28
 8007dfa:	f005 f87b 	bl	800cef4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007dfe:	4b9b      	ldr	r3, [pc, #620]	; (800806c <main+0x320>)
 8007e00:	4621      	mov	r1, r4
 8007e02:	4a9b      	ldr	r2, [pc, #620]	; (8008070 <main+0x324>)
 8007e04:	e9cd 5300 	strd	r5, r3, [sp]
 8007e08:	a807      	add	r0, sp, #28
 8007e0a:	2350      	movs	r3, #80	; 0x50
 8007e0c:	f005 f872 	bl	800cef4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007e10:	a807      	add	r0, sp, #28
 8007e12:	f005 f9b5 	bl	800d180 <MDNS::Print()>
 8007e16:	a83a      	add	r0, sp, #232	; 0xe8
 8007e18:	f001 f88e 	bl	8008f38 <HttpDaemon::HttpDaemon()>
 8007e1c:	a83a      	add	r0, sp, #232	; 0xe8
 8007e1e:	f001 f89f 	bl	8008f60 <HttpDaemon::Start()>
 8007e22:	2303      	movs	r3, #3
 8007e24:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8007e28:	4992      	ldr	r1, [pc, #584]	; (8008074 <main+0x328>)
 8007e2a:	a84e      	add	r0, sp, #312	; 0x138
 8007e2c:	f7ff ff2b 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007e30:	a808      	add	r0, sp, #32
 8007e32:	f004 f90f 	bl	800c054 <StoreE131::StoreE131()>
 8007e36:	a908      	add	r1, sp, #32
 8007e38:	a81b      	add	r0, sp, #108	; 0x6c
 8007e3a:	f002 fbb5 	bl	800a5a8 <E131Params::E131Params(E131ParamsStore*)>
 8007e3e:	a897      	add	r0, sp, #604	; 0x25c
 8007e40:	f001 fcf8 	bl	8009834 <E131Bridge::E131Bridge()>
 8007e44:	a81b      	add	r0, sp, #108	; 0x6c
 8007e46:	f002 fbc7 	bl	800a5d8 <E131Params::Load()>
 8007e4a:	b130      	cbz	r0, 8007e5a <main+0x10e>
 8007e4c:	a81b      	add	r0, sp, #108	; 0x6c
 8007e4e:	f002 feb9 	bl	800abc4 <E131Params::Dump()>
 8007e52:	4621      	mov	r1, r4
 8007e54:	a81b      	add	r0, sp, #108	; 0x6c
 8007e56:	f002 fe75 	bl	800ab44 <E131Params::Set(unsigned int)>
 8007e5a:	f8bd 2080 	ldrh.w	r2, [sp, #128]	; 0x80
 8007e5e:	f8bd 3077 	ldrh.w	r3, [sp, #119]	; 0x77
 8007e62:	f002 0203 	and.w	r2, r2, #3
 8007e66:	2100      	movs	r1, #0
 8007e68:	a897      	add	r0, sp, #604	; 0x25c
 8007e6a:	f001 fdd9 	bl	8009a20 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8007e6e:	a809      	add	r0, sp, #36	; 0x24
 8007e70:	f003 ffd4 	bl	800be1c <StoreDmxSend::StoreDmxSend()>
 8007e74:	a909      	add	r1, sp, #36	; 0x24
 8007e76:	a811      	add	r0, sp, #68	; 0x44
 8007e78:	f002 ff90 	bl	800ad9c <DmxParams::DmxParams(DmxParamsStore*)>
 8007e7c:	a821      	add	r0, sp, #132	; 0x84
 8007e7e:	f003 fbfb 	bl	800b678 <Dmx::Dmx()>
 8007e82:	a811      	add	r0, sp, #68	; 0x44
 8007e84:	f002 ff96 	bl	800adb4 <DmxParams::Load()>
 8007e88:	b130      	cbz	r0, 8007e98 <main+0x14c>
 8007e8a:	a811      	add	r0, sp, #68	; 0x44
 8007e8c:	f003 f8e0 	bl	800b050 <DmxParams::Dump()>
 8007e90:	a921      	add	r1, sp, #132	; 0x84
 8007e92:	a811      	add	r0, sp, #68	; 0x44
 8007e94:	f003 f8b2 	bl	800affc <DmxParams::Set(Dmx*)>
 8007e98:	4b77      	ldr	r3, [pc, #476]	; (8008078 <main+0x32c>)
 8007e9a:	ac0a      	add	r4, sp, #40	; 0x28
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	930a      	str	r3, [sp, #40]	; 0x28
 8007ea0:	f002 ff22 	bl	800ace8 <DmxSend::Print()>
 8007ea4:	f89d 5767 	ldrb.w	r5, [sp, #1895]	; 0x767
 8007ea8:	b165      	cbz	r5, 8007ec4 <main+0x178>
 8007eaa:	2001      	movs	r0, #1
 8007eac:	9498      	str	r4, [sp, #608]	; 0x260
 8007eae:	f007 fbcb 	bl	800f648 <operator new(unsigned int)>
 8007eb2:	4b72      	ldr	r3, [pc, #456]	; (800807c <main+0x330>)
 8007eb4:	4605      	mov	r5, r0
 8007eb6:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8007eba:	6818      	ldr	r0, [r3, #0]
 8007ebc:	f005 f9e0 	bl	800d280 <Network::Begin(unsigned short)>
 8007ec0:	4b6f      	ldr	r3, [pc, #444]	; (8008080 <main+0x334>)
 8007ec2:	6018      	str	r0, [r3, #0]
 8007ec4:	ac0b      	add	r4, sp, #44	; 0x2c
 8007ec6:	4620      	mov	r0, r4
 8007ec8:	f000 f9e0 	bl	800828c <DmxInput::DmxInput()>
 8007ecc:	f89d 3766 	ldrb.w	r3, [sp, #1894]	; 0x766
 8007ed0:	b103      	cbz	r3, 8007ed4 <main+0x188>
 8007ed2:	949c      	str	r4, [sp, #624]	; 0x270
 8007ed4:	f89d 4767 	ldrb.w	r4, [sp, #1895]	; 0x767
 8007ed8:	a897      	add	r0, sp, #604	; 0x25c
 8007eda:	441c      	add	r4, r3
 8007edc:	f002 fac2 	bl	800a464 <E131Bridge::Print()>
 8007ee0:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 8007ee4:	4a67      	ldr	r2, [pc, #412]	; (8008084 <main+0x338>)
 8007ee6:	f013 0f03 	tst.w	r3, #3
 8007eea:	4b67      	ldr	r3, [pc, #412]	; (8008088 <main+0x33c>)
 8007eec:	4967      	ldr	r1, [pc, #412]	; (800808c <main+0x340>)
 8007eee:	bf18      	it	ne
 8007ef0:	461a      	movne	r2, r3
 8007ef2:	a84e      	add	r0, sp, #312	; 0x138
 8007ef4:	f006 f9b2 	bl	800e25c <DisplayUdf::SetTitle(char const*, ...)>
 8007ef8:	2202      	movs	r2, #2
 8007efa:	a84e      	add	r0, sp, #312	; 0x138
 8007efc:	4611      	mov	r1, r2
 8007efe:	f006 f9c0 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f02:	2207      	movs	r2, #7
 8007f04:	2103      	movs	r1, #3
 8007f06:	a84e      	add	r0, sp, #312	; 0x138
 8007f08:	f006 f9bb 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f0c:	2203      	movs	r2, #3
 8007f0e:	2104      	movs	r1, #4
 8007f10:	a84e      	add	r0, sp, #312	; 0x138
 8007f12:	f006 f9b6 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f16:	2208      	movs	r2, #8
 8007f18:	2105      	movs	r1, #5
 8007f1a:	a84e      	add	r0, sp, #312	; 0x138
 8007f1c:	f006 f9b1 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f20:	2201      	movs	r2, #1
 8007f22:	2106      	movs	r1, #6
 8007f24:	a84e      	add	r0, sp, #312	; 0x138
 8007f26:	f006 f9ac 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f2a:	a80c      	add	r0, sp, #48	; 0x30
 8007f2c:	f003 ff40 	bl	800bdb0 <StoreDisplayUdf::StoreDisplayUdf()>
 8007f30:	a90c      	add	r1, sp, #48	; 0x30
 8007f32:	a844      	add	r0, sp, #272	; 0x110
 8007f34:	f006 fb26 	bl	800e584 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8007f38:	a844      	add	r0, sp, #272	; 0x110
 8007f3a:	f006 fb30 	bl	800e59e <DisplayUdfParams::Load()>
 8007f3e:	b130      	cbz	r0, 8007f4e <main+0x202>
 8007f40:	a844      	add	r0, sp, #272	; 0x110
 8007f42:	a94e      	add	r1, sp, #312	; 0x138
 8007f44:	f006 fc63 	bl	800e80e <DisplayUdfParams::Set(DisplayUdf*)>
 8007f48:	a844      	add	r0, sp, #272	; 0x110
 8007f4a:	f006 fc93 	bl	800e874 <DisplayUdfParams::Dump()>
 8007f4e:	a997      	add	r1, sp, #604	; 0x25c
 8007f50:	a84e      	add	r0, sp, #312	; 0x138
 8007f52:	f006 fc91 	bl	800e878 <DisplayUdf::Show(E131Bridge*)>
 8007f56:	4623      	mov	r3, r4
 8007f58:	2200      	movs	r2, #0
 8007f5a:	2101      	movs	r1, #1
 8007f5c:	a828      	add	r0, sp, #160	; 0xa0
 8007f5e:	f000 fb05 	bl	800856c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8007f62:	a80d      	add	r0, sp, #52	; 0x34
 8007f64:	f004 f840 	bl	800bfe8 <StoreRemoteConfig::StoreRemoteConfig()>
 8007f68:	a90d      	add	r1, sp, #52	; 0x34
 8007f6a:	a831      	add	r0, sp, #196	; 0xc4
 8007f6c:	f000 fdce 	bl	8008b0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8007f70:	a831      	add	r0, sp, #196	; 0xc4
 8007f72:	f000 fdd5 	bl	8008b20 <RemoteConfigParams::Load()>
 8007f76:	b130      	cbz	r0, 8007f86 <main+0x23a>
 8007f78:	a831      	add	r0, sp, #196	; 0xc4
 8007f7a:	f000 ff18 	bl	8008dae <RemoteConfigParams::Dump()>
 8007f7e:	a928      	add	r1, sp, #160	; 0xa0
 8007f80:	a831      	add	r0, sp, #196	; 0xc4
 8007f82:	f000 fef4 	bl	8008d6e <RemoteConfigParams::Set(RemoteConfig*)>
 8007f86:	a806      	add	r0, sp, #24
 8007f88:	f003 fe8c 	bl	800bca4 <SpiFlashStore::Flash()>
 8007f8c:	2800      	cmp	r0, #0
 8007f8e:	d1fa      	bne.n	8007f86 <main+0x23a>
 8007f90:	2303      	movs	r3, #3
 8007f92:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8007f96:	493e      	ldr	r1, [pc, #248]	; (8008090 <main+0x344>)
 8007f98:	a84e      	add	r0, sp, #312	; 0x138
 8007f9a:	f7ff fe74 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007f9e:	a897      	add	r0, sp, #604	; 0x25c
 8007fa0:	f001 fca6 	bl	80098f0 <E131Bridge::Start()>
 8007fa4:	2302      	movs	r3, #2
 8007fa6:	f248 0280 	movw	r2, #32896	; 0x8080
 8007faa:	493a      	ldr	r1, [pc, #232]	; (8008094 <main+0x348>)
 8007fac:	a84e      	add	r0, sp, #312	; 0x138
 8007fae:	f7ff fe6a 	bl	8007c86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007fb2:	2102      	movs	r1, #2
 8007fb4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007fb8:	f008 f95a 	bl	8010270 <fwdgt_config>
 8007fbc:	2801      	cmp	r0, #1
 8007fbe:	bf0c      	ite	eq
 8007fc0:	2301      	moveq	r3, #1
 8007fc2:	2300      	movne	r3, #0
 8007fc4:	f88d 300c 	strb.w	r3, [sp, #12]
 8007fc8:	d101      	bne.n	8007fce <main+0x282>
 8007fca:	f008 f941 	bl	8010250 <fwdgt_enable>
 8007fce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8008098 <main+0x34c>
 8007fd2:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 8008080 <main+0x334>
 8007fd6:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800809c <main+0x350>
 8007fda:	f008 f941 	bl	8010260 <fwdgt_counter_reload>
 8007fde:	f7ff fa9f 	bl	8007520 <net_handle>
 8007fe2:	a897      	add	r0, sp, #604	; 0x25c
 8007fe4:	f002 f816 	bl	800a014 <E131Bridge::Run()>
 8007fe8:	a828      	add	r0, sp, #160	; 0xa0
 8007fea:	f000 fc53 	bl	8008894 <RemoteConfig::Run()>
 8007fee:	a806      	add	r0, sp, #24
 8007ff0:	f003 fe58 	bl	800bca4 <SpiFlashStore::Flash()>
 8007ff4:	2d00      	cmp	r5, #0
 8007ff6:	d066      	beq.n	80080c6 <main+0x37a>
 8007ff8:	f10d 031e 	add.w	r3, sp, #30
 8007ffc:	4926      	ldr	r1, [pc, #152]	; (8008098 <main+0x34c>)
 8007ffe:	f899 0000 	ldrb.w	r0, [r9]
 8008002:	aa0e      	add	r2, sp, #56	; 0x38
 8008004:	f004 fc4e 	bl	800c8a4 <udp_recv2>
 8008008:	f1a0 030b 	sub.w	r3, r0, #11
 800800c:	b29b      	uxth	r3, r3
 800800e:	2b05      	cmp	r3, #5
 8008010:	4604      	mov	r4, r0
 8008012:	d858      	bhi.n	80080c6 <main+0x37a>
 8008014:	f8d8 6000 	ldr.w	r6, [r8]
 8008018:	2204      	movs	r2, #4
 800801a:	4631      	mov	r1, r6
 800801c:	4650      	mov	r0, sl
 800801e:	f7ff fda2 	bl	8007b66 <memcmp>
 8008022:	2800      	cmp	r0, #0
 8008024:	d14f      	bne.n	80080c6 <main+0x37a>
 8008026:	1933      	adds	r3, r6, r4
 8008028:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800802c:	f106 0b04 	add.w	fp, r6, #4
 8008030:	2b0a      	cmp	r3, #10
 8008032:	bf04      	itt	eq
 8008034:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8008038:	b2a4      	uxtheq	r4, r4
 800803a:	2c0a      	cmp	r4, #10
 800803c:	d071      	beq.n	8008122 <main+0x3d6>
 800803e:	2c0e      	cmp	r4, #14
 8008040:	d86f      	bhi.n	8008122 <main+0x3d6>
 8008042:	e02d      	b.n	80080a0 <main+0x354>
 8008044:	08011ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, ip}
 8008048:	08011efd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip}
 800804c:	08011fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, ip}
 8008050:	40011000 	andmi	r1, r1, r0
 8008054:	08011f09 	stmdaeq	r1, {r0, r3, r8, r9, sl, fp, ip}
 8008058:	08011f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, ip}
 800805c:	2000a008 	andcs	sl, r0, r8
 8008060:	080134a1 	stmdaeq	r1, {r0, r5, r7, sl, ip, sp}
 8008064:	08013490 	stmdaeq	r1, {r4, r7, sl, ip, sp}
 8008068:	08011f2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, fp, ip}
 800806c:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8008070:	08011f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip}
 8008074:	08013138 	stmdaeq	r1, {r3, r4, r5, r8, ip, sp}
 8008078:	08013274 	stmdaeq	r1, {r2, r4, r5, r6, r9, ip, sp}
 800807c:	20009a30 	andcs	r9, r0, r0, lsr sl
 8008080:	2000000c 	andcs	r0, r0, ip
 8008084:	080131a0 	stmdaeq	r1, {r5, r7, r8, ip, sp}
 8008088:	08013195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, sp}
 800808c:	08011f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, ip}
 8008090:	08013124 	stmdaeq	r1, {r2, r5, r8, ip, sp}
 8008094:	0801314f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, ip, sp}
 8008098:	20001114 	andcs	r1, r0, r4, lsl r1
 800809c:	08011f65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, fp, ip}
 80080a0:	2206      	movs	r2, #6
 80080a2:	4659      	mov	r1, fp
 80080a4:	4847      	ldr	r0, [pc, #284]	; (80081c4 <main+0x478>)
 80080a6:	f7ff fd5e 	bl	8007b66 <memcmp>
 80080aa:	2800      	cmp	r0, #0
 80080ac:	d139      	bne.n	8008122 <main+0x3d6>
 80080ae:	2104      	movs	r1, #4
 80080b0:	f106 000a 	add.w	r0, r6, #10
 80080b4:	f7ff fd68 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 80080b8:	285b      	cmp	r0, #91	; 0x5b
 80080ba:	4601      	mov	r1, r0
 80080bc:	d903      	bls.n	80080c6 <main+0x37a>
 80080be:	4b42      	ldr	r3, [pc, #264]	; (80081c8 <main+0x47c>)
 80080c0:	6818      	ldr	r0, [r3, #0]
 80080c2:	f003 fbe7 	bl	800b894 <Dmx::SetDmxBreakTime(unsigned int)>
 80080c6:	a807      	add	r0, sp, #28
 80080c8:	f005 f836 	bl	800d138 <MDNS::Run()>
 80080cc:	a83a      	add	r0, sp, #232	; 0xe8
 80080ce:	f001 f9b3 	bl	8009438 <HttpDaemon::Run()>
 80080d2:	9a53      	ldr	r2, [sp, #332]	; 0x14c
 80080d4:	b16a      	cbz	r2, 80080f2 <main+0x3a6>
 80080d6:	f89d 3148 	ldrb.w	r3, [sp, #328]	; 0x148
 80080da:	2b00      	cmp	r3, #0
 80080dc:	d16b      	bne.n	80081b6 <main+0x46a>
 80080de:	4b3b      	ldr	r3, [pc, #236]	; (80081cc <main+0x480>)
 80080e0:	994f      	ldr	r1, [sp, #316]	; 0x13c
 80080e2:	681b      	ldr	r3, [r3, #0]
 80080e4:	1a5b      	subs	r3, r3, r1
 80080e6:	429a      	cmp	r2, r3
 80080e8:	d203      	bcs.n	80080f2 <main+0x3a6>
 80080ea:	2101      	movs	r1, #1
 80080ec:	a84e      	add	r0, sp, #312	; 0x138
 80080ee:	f7ff fdf3 	bl	8007cd8 <Display::SetSleep(bool)>
 80080f2:	9918      	ldr	r1, [sp, #96]	; 0x60
 80080f4:	2900      	cmp	r1, #0
 80080f6:	f43f af70 	beq.w	8007fda <main+0x28e>
 80080fa:	4a34      	ldr	r2, [pc, #208]	; (80081cc <main+0x480>)
 80080fc:	981a      	ldr	r0, [sp, #104]	; 0x68
 80080fe:	6813      	ldr	r3, [r2, #0]
 8008100:	1a1b      	subs	r3, r3, r0
 8008102:	4299      	cmp	r1, r3
 8008104:	f63f af69 	bhi.w	8007fda <main+0x28e>
 8008108:	6813      	ldr	r3, [r2, #0]
 800810a:	931a      	str	r3, [sp, #104]	; 0x68
 800810c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800810e:	2b01      	cmp	r3, #1
 8008110:	f083 0201 	eor.w	r2, r3, #1
 8008114:	bf18      	it	ne
 8008116:	2301      	movne	r3, #1
 8008118:	9219      	str	r2, [sp, #100]	; 0x64
 800811a:	bf14      	ite	ne
 800811c:	613b      	strne	r3, [r7, #16]
 800811e:	617b      	streq	r3, [r7, #20]
 8008120:	e75b      	b.n	8007fda <main+0x28e>
 8008122:	2204      	movs	r2, #4
 8008124:	4659      	mov	r1, fp
 8008126:	482a      	ldr	r0, [pc, #168]	; (80081d0 <main+0x484>)
 8008128:	f7ff fd1d 	bl	8007b66 <memcmp>
 800812c:	b978      	cbnz	r0, 800814e <main+0x402>
 800812e:	2107      	movs	r1, #7
 8008130:	f106 0008 	add.w	r0, r6, #8
 8008134:	f7ff fd28 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 8008138:	4b26      	ldr	r3, [pc, #152]	; (80081d4 <main+0x488>)
 800813a:	f1a0 020c 	sub.w	r2, r0, #12
 800813e:	429a      	cmp	r2, r3
 8008140:	4601      	mov	r1, r0
 8008142:	d8c0      	bhi.n	80080c6 <main+0x37a>
 8008144:	4b20      	ldr	r3, [pc, #128]	; (80081c8 <main+0x47c>)
 8008146:	6818      	ldr	r0, [r3, #0]
 8008148:	f003 fbae 	bl	800b8a8 <Dmx::SetDmxMabTime(unsigned int)>
 800814c:	e7bb      	b.n	80080c6 <main+0x37a>
 800814e:	2c0c      	cmp	r4, #12
 8008150:	d916      	bls.n	8008180 <main+0x434>
 8008152:	2c0e      	cmp	r4, #14
 8008154:	d82c      	bhi.n	80081b0 <main+0x464>
 8008156:	2208      	movs	r2, #8
 8008158:	4659      	mov	r1, fp
 800815a:	481f      	ldr	r0, [pc, #124]	; (80081d8 <main+0x48c>)
 800815c:	f7ff fd03 	bl	8007b66 <memcmp>
 8008160:	bb30      	cbnz	r0, 80081b0 <main+0x464>
 8008162:	2102      	movs	r1, #2
 8008164:	f106 000c 	add.w	r0, r6, #12
 8008168:	f7ff fd0e 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 800816c:	4601      	mov	r1, r0
 800816e:	b110      	cbz	r0, 8008176 <main+0x42a>
 8008170:	4b1a      	ldr	r3, [pc, #104]	; (80081dc <main+0x490>)
 8008172:	fbb3 f1f0 	udiv	r1, r3, r0
 8008176:	4b14      	ldr	r3, [pc, #80]	; (80081c8 <main+0x47c>)
 8008178:	6818      	ldr	r0, [r3, #0]
 800817a:	f003 fb5b 	bl	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800817e:	e7a2      	b.n	80080c6 <main+0x37a>
 8008180:	2c0a      	cmp	r4, #10
 8008182:	d0a0      	beq.n	80080c6 <main+0x37a>
 8008184:	2206      	movs	r2, #6
 8008186:	4659      	mov	r1, fp
 8008188:	4815      	ldr	r0, [pc, #84]	; (80081e0 <main+0x494>)
 800818a:	f7ff fcec 	bl	8007b66 <memcmp>
 800818e:	2800      	cmp	r0, #0
 8008190:	d199      	bne.n	80080c6 <main+0x37a>
 8008192:	2103      	movs	r1, #3
 8008194:	f106 000a 	add.w	r0, r6, #10
 8008198:	f7ff fcf6 	bl	8007b88 <dmxconfigudp::atoi(char const*, unsigned int)>
 800819c:	1e83      	subs	r3, r0, #2
 800819e:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80081a2:	d890      	bhi.n	80080c6 <main+0x37a>
 80081a4:	4b08      	ldr	r3, [pc, #32]	; (80081c8 <main+0x47c>)
 80081a6:	b281      	uxth	r1, r0
 80081a8:	6818      	ldr	r0, [r3, #0]
 80081aa:	f003 fb87 	bl	800b8bc <Dmx::SetDmxSlots(unsigned short)>
 80081ae:	e78a      	b.n	80080c6 <main+0x37a>
 80081b0:	2c0d      	cmp	r4, #13
 80081b2:	d188      	bne.n	80080c6 <main+0x37a>
 80081b4:	e7e6      	b.n	8008184 <main+0x438>
 80081b6:	f7ff fdaf 	bl	8007d18 <display::timeout::gpio_renew()>
 80081ba:	2800      	cmp	r0, #0
 80081bc:	d099      	beq.n	80080f2 <main+0x3a6>
 80081be:	2100      	movs	r1, #0
 80081c0:	e794      	b.n	80080ec <main+0x3a0>
 80081c2:	bf00      	nop
 80081c4:	08011f6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
 80081c8:	2000110c 	andcs	r1, r0, ip, lsl #2
 80081cc:	2000a114 	andcs	sl, r0, r4, lsl r1
 80081d0:	08011f71 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, sl, fp, ip}
 80081d4:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 80081d8:	08011f76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}
 80081dc:	000f4240 	andeq	r4, pc, r0, asr #4
 80081e0:	08011f7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip}

080081e4 <DmxInput::~DmxInput()>:
 80081e4:	4770      	bx	lr
	...

080081e8 <DmxInput::Start(unsigned int)>:
 80081e8:	2301      	movs	r3, #1
 80081ea:	b410      	push	{r4}
 80081ec:	4808      	ldr	r0, [pc, #32]	; (8008210 <DmxInput::Start(unsigned int)+0x28>)
 80081ee:	fa03 f101 	lsl.w	r1, r3, r1
 80081f2:	7802      	ldrb	r2, [r0, #0]
 80081f4:	ea31 0402 	bics.w	r4, r1, r2
 80081f8:	d008      	beq.n	800820c <DmxInput::Start(unsigned int)+0x24>
 80081fa:	430a      	orrs	r2, r1
 80081fc:	7002      	strb	r2, [r0, #0]
 80081fe:	4805      	ldr	r0, [pc, #20]	; (8008214 <DmxInput::Start(unsigned int)+0x2c>)
 8008200:	461a      	mov	r2, r3
 8008202:	2100      	movs	r1, #0
 8008204:	6800      	ldr	r0, [r0, #0]
 8008206:	bc10      	pop	{r4}
 8008208:	f003 ba08 	b.w	800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800820c:	bc10      	pop	{r4}
 800820e:	4770      	bx	lr
 8008210:	200000f8 	strdcs	r0, [r0], -r8
 8008214:	2000110c 	andcs	r1, r0, ip, lsl #2

08008218 <DmxInput::Stop(unsigned int)>:
 8008218:	2201      	movs	r2, #1
 800821a:	b410      	push	{r4}
 800821c:	4809      	ldr	r0, [pc, #36]	; (8008244 <DmxInput::Stop(unsigned int)+0x2c>)
 800821e:	fa02 f101 	lsl.w	r1, r2, r1
 8008222:	7803      	ldrb	r3, [r0, #0]
 8008224:	ea31 0403 	bics.w	r4, r1, r3
 8008228:	d109      	bne.n	800823e <DmxInput::Stop(unsigned int)+0x26>
 800822a:	ea23 0301 	bic.w	r3, r3, r1
 800822e:	7003      	strb	r3, [r0, #0]
 8008230:	2300      	movs	r3, #0
 8008232:	4805      	ldr	r0, [pc, #20]	; (8008248 <DmxInput::Stop(unsigned int)+0x30>)
 8008234:	4619      	mov	r1, r3
 8008236:	6800      	ldr	r0, [r0, #0]
 8008238:	bc10      	pop	{r4}
 800823a:	f003 b9ef 	b.w	800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800823e:	bc10      	pop	{r4}
 8008240:	4770      	bx	lr
 8008242:	bf00      	nop
 8008244:	200000f8 	strdcs	r0, [r0], -r8
 8008248:	2000110c 	andcs	r1, r0, ip, lsl #2

0800824c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 800824c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800824e:	4f0b      	ldr	r7, [pc, #44]	; (800827c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x30>)
 8008250:	2100      	movs	r1, #0
 8008252:	6838      	ldr	r0, [r7, #0]
 8008254:	461e      	mov	r6, r3
 8008256:	4615      	mov	r5, r2
 8008258:	f003 fbb6 	bl	800b9c8 <Dmx::GetDmxAvailable(unsigned int)>
 800825c:	2100      	movs	r1, #0
 800825e:	4604      	mov	r4, r0
 8008260:	6838      	ldr	r0, [r7, #0]
 8008262:	f003 fbc5 	bl	800b9f0 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008266:	6030      	str	r0, [r6, #0]
 8008268:	b12c      	cbz	r4, 8008276 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2a>
 800826a:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 800826e:	3301      	adds	r3, #1
 8008270:	4620      	mov	r0, r4
 8008272:	602b      	str	r3, [r5, #0]
 8008274:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008276:	4623      	mov	r3, r4
 8008278:	e7fa      	b.n	8008270 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x24>
 800827a:	bf00      	nop
 800827c:	2000110c 	andcs	r1, r0, ip, lsl #2

08008280 <DmxInput::~DmxInput()>:
 8008280:	b510      	push	{r4, lr}
 8008282:	4604      	mov	r4, r0
 8008284:	f007 f9dc 	bl	800f640 <operator delete(void*)>
 8008288:	4620      	mov	r0, r4
 800828a:	bd10      	pop	{r4, pc}

0800828c <DmxInput::DmxInput()>:
 800828c:	b510      	push	{r4, lr}
 800828e:	4604      	mov	r4, r0
 8008290:	4b03      	ldr	r3, [pc, #12]	; (80082a0 <DmxInput::DmxInput()+0x14>)
 8008292:	2100      	movs	r1, #0
 8008294:	6003      	str	r3, [r0, #0]
 8008296:	f7ff ffbf 	bl	8008218 <DmxInput::Stop(unsigned int)>
 800829a:	4620      	mov	r0, r4
 800829c:	bd10      	pop	{r4, pc}
 800829e:	bf00      	nop
 80082a0:	08011fb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp, ip}

080082a4 <RemoteConfig::HandleList()>:
 80082a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80082a8:	6801      	ldr	r1, [r0, #0]
 80082aa:	4604      	mov	r4, r0
 80082ac:	2012      	movs	r0, #18
 80082ae:	f04f 080c 	mov.w	r8, #12
 80082b2:	4a29      	ldr	r2, [pc, #164]	; (8008358 <RemoteConfig::HandleList()+0xb4>)
 80082b4:	4b29      	ldr	r3, [pc, #164]	; (800835c <RemoteConfig::HandleList()+0xb8>)
 80082b6:	fb00 2201 	mla	r2, r0, r1, r2
 80082ba:	6860      	ldr	r0, [r4, #4]
 80082bc:	4928      	ldr	r1, [pc, #160]	; (8008360 <RemoteConfig::HandleList()+0xbc>)
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	fb08 1100 	mla	r1, r8, r0, r1
 80082c4:	4e27      	ldr	r6, [pc, #156]	; (8008364 <RemoteConfig::HandleList()+0xc0>)
 80082c6:	4828      	ldr	r0, [pc, #160]	; (8008368 <RemoteConfig::HandleList()+0xc4>)
 80082c8:	695f      	ldr	r7, [r3, #20]
 80082ca:	6835      	ldr	r5, [r6, #0]
 80082cc:	f890 9009 	ldrb.w	r9, [r0, #9]
 80082d0:	b2fb      	uxtb	r3, r7
 80082d2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80082d6:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 80082da:	f8d4 8008 	ldr.w	r8, [r4, #8]
 80082de:	b089      	sub	sp, #36	; 0x24
 80082e0:	3507      	adds	r5, #7
 80082e2:	0e3f      	lsrs	r7, r7, #24
 80082e4:	f1b9 0f00 	cmp.w	r9, #0
 80082e8:	d01d      	beq.n	8008326 <RemoteConfig::HandleList()+0x82>
 80082ea:	3009      	adds	r0, #9
 80082ec:	e9cd 2103 	strd	r2, r1, [sp, #12]
 80082f0:	e9cd 8005 	strd	r8, r0, [sp, #20]
 80082f4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80082f8:	4628      	mov	r0, r5
 80082fa:	e9cd e701 	strd	lr, r7, [sp, #4]
 80082fe:	4a1b      	ldr	r2, [pc, #108]	; (800836c <RemoteConfig::HandleList()+0xc8>)
 8008300:	f8cd c000 	str.w	ip, [sp]
 8008304:	f007 fcb8 	bl	800fc78 <snprintf>
 8008308:	69e3      	ldr	r3, [r4, #28]
 800830a:	2b05      	cmp	r3, #5
 800830c:	d118      	bne.n	8008340 <RemoteConfig::HandleList()+0x9c>
 800830e:	f642 1305 	movw	r3, #10501	; 0x2905
 8008312:	9300      	str	r3, [sp, #0]
 8008314:	69a3      	ldr	r3, [r4, #24]
 8008316:	b282      	uxth	r2, r0
 8008318:	4629      	mov	r1, r5
 800831a:	7d20      	ldrb	r0, [r4, #20]
 800831c:	f004 fae8 	bl	800c8f0 <udp_send>
 8008320:	b009      	add	sp, #36	; 0x24
 8008322:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008326:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800832a:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800832e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008332:	4628      	mov	r0, r5
 8008334:	e9cd ce00 	strd	ip, lr, [sp]
 8008338:	4a0d      	ldr	r2, [pc, #52]	; (8008370 <RemoteConfig::HandleList()+0xcc>)
 800833a:	f007 fc9d 	bl	800fc78 <snprintf>
 800833e:	e7e3      	b.n	8008308 <RemoteConfig::HandleList()+0x64>
 8008340:	2b06      	cmp	r3, #6
 8008342:	d1ed      	bne.n	8008320 <RemoteConfig::HandleList()+0x7c>
 8008344:	6833      	ldr	r3, [r6, #0]
 8008346:	799b      	ldrb	r3, [r3, #6]
 8008348:	2b2a      	cmp	r3, #42	; 0x2a
 800834a:	d1e9      	bne.n	8008320 <RemoteConfig::HandleList()+0x7c>
 800834c:	f642 1305 	movw	r3, #10501	; 0x2905
 8008350:	9300      	str	r3, [sp, #0]
 8008352:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008356:	e7de      	b.n	8008316 <RemoteConfig::HandleList()+0x72>
 8008358:	080120af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, sp}
 800835c:	20009a30 	andcs	r9, r0, r0, lsr sl
 8008360:	08012175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sp}
 8008364:	200000fc 	strdcs	r0, [r0], -ip
 8008368:	20000100 	andcs	r0, r0, r0, lsl #2
 800836c:	08011fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip}
 8008370:	08011fdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip}

08008374 <RemoteConfig::HandleDisplayGet()>:
 8008374:	69c3      	ldr	r3, [r0, #28]
 8008376:	2b08      	cmp	r3, #8
 8008378:	d11b      	bne.n	80083b2 <RemoteConfig::HandleDisplayGet()+0x3e>
 800837a:	4b0e      	ldr	r3, [pc, #56]	; (80083b4 <RemoteConfig::HandleDisplayGet()+0x40>)
 800837c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	4d0d      	ldr	r5, [pc, #52]	; (80083b8 <RemoteConfig::HandleDisplayGet()+0x44>)
 8008382:	7c19      	ldrb	r1, [r3, #16]
 8008384:	4a0d      	ldr	r2, [pc, #52]	; (80083bc <RemoteConfig::HandleDisplayGet()+0x48>)
 8008386:	4b0e      	ldr	r3, [pc, #56]	; (80083c0 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8008388:	4604      	mov	r4, r0
 800838a:	2900      	cmp	r1, #0
 800838c:	bf18      	it	ne
 800838e:	4613      	movne	r3, r2
 8008390:	6828      	ldr	r0, [r5, #0]
 8008392:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008396:	4a0b      	ldr	r2, [pc, #44]	; (80083c4 <RemoteConfig::HandleDisplayGet()+0x50>)
 8008398:	f007 fc6e 	bl	800fc78 <snprintf>
 800839c:	f642 1305 	movw	r3, #10501	; 0x2905
 80083a0:	9300      	str	r3, [sp, #0]
 80083a2:	b282      	uxth	r2, r0
 80083a4:	69a3      	ldr	r3, [r4, #24]
 80083a6:	6829      	ldr	r1, [r5, #0]
 80083a8:	7d20      	ldrb	r0, [r4, #20]
 80083aa:	f004 faa1 	bl	800c8f0 <udp_send>
 80083ae:	b003      	add	sp, #12
 80083b0:	bd30      	pop	{r4, r5, pc}
 80083b2:	4770      	bx	lr
 80083b4:	2000a008 	andcs	sl, r0, r8
 80083b8:	200000fc 	strdcs	r0, [r0], -ip
 80083bc:	08011ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80083c0:	08011ff3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80083c4:	08011ffa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}

080083c8 <RemoteConfig::HandleTftpGet()>:
 80083c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083ca:	4604      	mov	r4, r0
 80083cc:	f000 fd74 	bl	8008eb8 <RemoteConfig::PlatformHandleTftpGet()>
 80083d0:	69e3      	ldr	r3, [r4, #28]
 80083d2:	2b05      	cmp	r3, #5
 80083d4:	d116      	bne.n	8008404 <RemoteConfig::HandleTftpGet()+0x3c>
 80083d6:	f894 1020 	ldrb.w	r1, [r4, #32]
 80083da:	4d0b      	ldr	r5, [pc, #44]	; (8008408 <RemoteConfig::HandleTftpGet()+0x40>)
 80083dc:	4a0b      	ldr	r2, [pc, #44]	; (800840c <RemoteConfig::HandleTftpGet()+0x44>)
 80083de:	4b0c      	ldr	r3, [pc, #48]	; (8008410 <RemoteConfig::HandleTftpGet()+0x48>)
 80083e0:	6828      	ldr	r0, [r5, #0]
 80083e2:	2900      	cmp	r1, #0
 80083e4:	bf08      	it	eq
 80083e6:	4613      	moveq	r3, r2
 80083e8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80083ec:	4a09      	ldr	r2, [pc, #36]	; (8008414 <RemoteConfig::HandleTftpGet()+0x4c>)
 80083ee:	f007 fc43 	bl	800fc78 <snprintf>
 80083f2:	f642 1305 	movw	r3, #10501	; 0x2905
 80083f6:	b282      	uxth	r2, r0
 80083f8:	9300      	str	r3, [sp, #0]
 80083fa:	6829      	ldr	r1, [r5, #0]
 80083fc:	69a3      	ldr	r3, [r4, #24]
 80083fe:	7d20      	ldrb	r0, [r4, #20]
 8008400:	f004 fa76 	bl	800c8f0 <udp_send>
 8008404:	b003      	add	sp, #12
 8008406:	bd30      	pop	{r4, r5, pc}
 8008408:	200000fc 	strdcs	r0, [r0], -ip
 800840c:	08011ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008410:	08011ff3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008414:	08012006 	stmdaeq	r1, {r1, r2, sp}

08008418 <RemoteConfig::HandleVersion()>:
 8008418:	69c3      	ldr	r3, [r0, #28]
 800841a:	2b08      	cmp	r3, #8
 800841c:	d114      	bne.n	8008448 <RemoteConfig::HandleVersion()+0x30>
 800841e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008420:	4d0a      	ldr	r5, [pc, #40]	; (800844c <RemoteConfig::HandleVersion()+0x34>)
 8008422:	4604      	mov	r4, r0
 8008424:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008428:	4b09      	ldr	r3, [pc, #36]	; (8008450 <RemoteConfig::HandleVersion()+0x38>)
 800842a:	4a0a      	ldr	r2, [pc, #40]	; (8008454 <RemoteConfig::HandleVersion()+0x3c>)
 800842c:	6828      	ldr	r0, [r5, #0]
 800842e:	f007 fc23 	bl	800fc78 <snprintf>
 8008432:	f642 1305 	movw	r3, #10501	; 0x2905
 8008436:	9300      	str	r3, [sp, #0]
 8008438:	b282      	uxth	r2, r0
 800843a:	69a3      	ldr	r3, [r4, #24]
 800843c:	6829      	ldr	r1, [r5, #0]
 800843e:	7d20      	ldrb	r0, [r4, #20]
 8008440:	f004 fa56 	bl	800c8f0 <udp_send>
 8008444:	b003      	add	sp, #12
 8008446:	bd30      	pop	{r4, r5, pc}
 8008448:	4770      	bx	lr
 800844a:	bf00      	nop
 800844c:	200000fc 	strdcs	r0, [r0], -ip
 8008450:	2000a0ae 	andcs	sl, r0, lr, lsr #1
 8008454:	0801200f 	stmdaeq	r1, {r0, r1, r2, r3, sp}

08008458 <RemoteConfig::HandleUptime()>:
 8008458:	7bc3      	ldrb	r3, [r0, #15]
 800845a:	b1e3      	cbz	r3, 8008496 <RemoteConfig::HandleUptime()+0x3e>
 800845c:	4b0e      	ldr	r3, [pc, #56]	; (8008498 <RemoteConfig::HandleUptime()+0x40>)
 800845e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008460:	681a      	ldr	r2, [r3, #0]
 8008462:	69c3      	ldr	r3, [r0, #28]
 8008464:	4604      	mov	r4, r0
 8008466:	2b07      	cmp	r3, #7
 8008468:	d113      	bne.n	8008492 <RemoteConfig::HandleUptime()+0x3a>
 800846a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800846e:	4d0b      	ldr	r5, [pc, #44]	; (800849c <RemoteConfig::HandleUptime()+0x44>)
 8008470:	fbb2 f3f3 	udiv	r3, r2, r3
 8008474:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008478:	4a09      	ldr	r2, [pc, #36]	; (80084a0 <RemoteConfig::HandleUptime()+0x48>)
 800847a:	6828      	ldr	r0, [r5, #0]
 800847c:	f007 fbfc 	bl	800fc78 <snprintf>
 8008480:	f642 1305 	movw	r3, #10501	; 0x2905
 8008484:	9300      	str	r3, [sp, #0]
 8008486:	b282      	uxth	r2, r0
 8008488:	69a3      	ldr	r3, [r4, #24]
 800848a:	6829      	ldr	r1, [r5, #0]
 800848c:	7d20      	ldrb	r0, [r4, #20]
 800848e:	f004 fa2f 	bl	800c8f0 <udp_send>
 8008492:	b003      	add	sp, #12
 8008494:	bd30      	pop	{r4, r5, pc}
 8008496:	4770      	bx	lr
 8008498:	2000a114 	andcs	sl, r0, r4, lsl r1
 800849c:	200000fc 	strdcs	r0, [r0], -ip
 80084a0:	0801201a 	stmdaeq	r1, {r1, r3, r4, sp}

080084a4 <Display::Status(Display7SegmentMessage)>:
 80084a4:	7c43      	ldrb	r3, [r0, #17]
 80084a6:	b1bb      	cbz	r3, 80084d8 <Display::Status(Display7SegmentMessage)+0x34>
 80084a8:	b513      	push	{r0, r1, r4, lr}
 80084aa:	2312      	movs	r3, #18
 80084ac:	43c9      	mvns	r1, r1
 80084ae:	4604      	mov	r4, r0
 80084b0:	f88d 3004 	strb.w	r3, [sp, #4]
 80084b4:	7a00      	ldrb	r0, [r0, #8]
 80084b6:	f3c1 2307 	ubfx	r3, r1, #8, #8
 80084ba:	f88d 3005 	strb.w	r3, [sp, #5]
 80084be:	f88d 1006 	strb.w	r1, [sp, #6]
 80084c2:	f008 fb5f 	bl	8010b84 <gd32_i2c_set_address>
 80084c6:	68e0      	ldr	r0, [r4, #12]
 80084c8:	f008 fb54 	bl	8010b74 <gd32_i2c_set_baudrate>
 80084cc:	2103      	movs	r1, #3
 80084ce:	a801      	add	r0, sp, #4
 80084d0:	f008 fb5e 	bl	8010b90 <gd32_i2c_write>
 80084d4:	b002      	add	sp, #8
 80084d6:	bd10      	pop	{r4, pc}
 80084d8:	4770      	bx	lr
	...

080084dc <RemoteConfig::HandleDisplaySet()>:
 80084dc:	b508      	push	{r3, lr}
 80084de:	69c3      	ldr	r3, [r0, #28]
 80084e0:	2b09      	cmp	r3, #9
 80084e2:	d10a      	bne.n	80084fa <RemoteConfig::HandleDisplaySet()+0x1e>
 80084e4:	4b05      	ldr	r3, [pc, #20]	; (80084fc <RemoteConfig::HandleDisplaySet()+0x20>)
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	7a59      	ldrb	r1, [r3, #9]
 80084ea:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80084ee:	4259      	negs	r1, r3
 80084f0:	4159      	adcs	r1, r3
 80084f2:	4b03      	ldr	r3, [pc, #12]	; (8008500 <RemoteConfig::HandleDisplaySet()+0x24>)
 80084f4:	6818      	ldr	r0, [r3, #0]
 80084f6:	f7ff fbef 	bl	8007cd8 <Display::SetSleep(bool)>
 80084fa:	bd08      	pop	{r3, pc}
 80084fc:	200000fc 	strdcs	r0, [r0], -ip
 8008500:	2000a008 	andcs	sl, r0, r8

08008504 <RemoteConfig::HandleTftpSet()>:
 8008504:	69c3      	ldr	r3, [r0, #28]
 8008506:	2b06      	cmp	r3, #6
 8008508:	d127      	bne.n	800855a <RemoteConfig::HandleTftpSet()+0x56>
 800850a:	b570      	push	{r4, r5, r6, lr}
 800850c:	4b13      	ldr	r3, [pc, #76]	; (800855c <RemoteConfig::HandleTftpSet()+0x58>)
 800850e:	4e14      	ldr	r6, [pc, #80]	; (8008560 <RemoteConfig::HandleTftpSet()+0x5c>)
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	4604      	mov	r4, r0
 8008514:	799b      	ldrb	r3, [r3, #6]
 8008516:	6835      	ldr	r5, [r6, #0]
 8008518:	2b30      	cmp	r3, #48	; 0x30
 800851a:	bf14      	ite	ne
 800851c:	2301      	movne	r3, #1
 800851e:	2300      	moveq	r3, #0
 8008520:	f880 3020 	strb.w	r3, [r0, #32]
 8008524:	d012      	beq.n	800854c <RemoteConfig::HandleTftpSet()+0x48>
 8008526:	4628      	mov	r0, r5
 8008528:	2100      	movs	r1, #0
 800852a:	f7ff fbd5 	bl	8007cd8 <Display::SetSleep(bool)>
 800852e:	6835      	ldr	r5, [r6, #0]
 8008530:	490c      	ldr	r1, [pc, #48]	; (8008564 <RemoteConfig::HandleTftpSet()+0x60>)
 8008532:	4628      	mov	r0, r5
 8008534:	f7ff fb72 	bl	8007c1c <Display::TextStatus(char const*)>
 8008538:	f244 0171 	movw	r1, #16497	; 0x4071
 800853c:	4628      	mov	r0, r5
 800853e:	f7ff ffb1 	bl	80084a4 <Display::Status(Display7SegmentMessage)>
 8008542:	4620      	mov	r0, r4
 8008544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008548:	f000 bcae 	b.w	8008ea8 <RemoteConfig::PlatformHandleTftpSet()>
 800854c:	4906      	ldr	r1, [pc, #24]	; (8008568 <RemoteConfig::HandleTftpSet()+0x64>)
 800854e:	4628      	mov	r0, r5
 8008550:	f7ff fb64 	bl	8007c1c <Display::TextStatus(char const*)>
 8008554:	f248 0171 	movw	r1, #32881	; 0x8071
 8008558:	e7f0      	b.n	800853c <RemoteConfig::HandleTftpSet()+0x38>
 800855a:	4770      	bx	lr
 800855c:	200000fc 	strdcs	r0, [r0], -ip
 8008560:	2000a008 	andcs	sl, r0, r8
 8008564:	08012027 	stmdaeq	r1, {r0, r1, r2, r5, sp}
 8008568:	08012039 	stmdaeq	r1, {r0, r3, r4, r5, sp}

0800856c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800856c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008570:	2500      	movs	r5, #0
 8008572:	461f      	mov	r7, r3
 8008574:	6083      	str	r3, [r0, #8]
 8008576:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800857a:	4690      	mov	r8, r2
 800857c:	4689      	mov	r9, r1
 800857e:	4e12      	ldr	r6, [pc, #72]	; (80085c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8008580:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8008584:	f8df a044 	ldr.w	sl, [pc, #68]	; 80085cc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8008588:	4b11      	ldr	r3, [pc, #68]	; (80085d0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 800858a:	e9c0 1200 	strd	r1, r2, [r0]
 800858e:	4604      	mov	r4, r0
 8008590:	6018      	str	r0, [r3, #0]
 8008592:	4631      	mov	r1, r6
 8008594:	60c5      	str	r5, [r0, #12]
 8008596:	8205      	strh	r5, [r0, #16]
 8008598:	61c5      	str	r5, [r0, #28]
 800859a:	f880 5020 	strb.w	r5, [r0, #32]
 800859e:	f8da 0000 	ldr.w	r0, [sl]
 80085a2:	f004 fe73 	bl	800d28c <Network::MacAddressCopyTo(unsigned char*)>
 80085a6:	f642 1105 	movw	r1, #10501	; 0x2905
 80085aa:	f8da 0000 	ldr.w	r0, [sl]
 80085ae:	f886 9006 	strb.w	r9, [r6, #6]
 80085b2:	f886 8007 	strb.w	r8, [r6, #7]
 80085b6:	7237      	strb	r7, [r6, #8]
 80085b8:	7275      	strb	r5, [r6, #9]
 80085ba:	f004 fe61 	bl	800d280 <Network::Begin(unsigned short)>
 80085be:	6160      	str	r0, [r4, #20]
 80085c0:	4620      	mov	r0, r4
 80085c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80085c6:	bf00      	nop
 80085c8:	20000100 	andcs	r0, r0, r0, lsl #2
 80085cc:	20009a30 	andcs	r9, r0, r0, lsr sl
 80085d0:	20000124 	andcs	r0, r0, r4, lsr #2

080085d4 <RemoteConfig::GetStringNode() const>:
 80085d4:	2012      	movs	r0, #18
 80085d6:	4b03      	ldr	r3, [pc, #12]	; (80085e4 <RemoteConfig::GetStringNode() const+0x10>)
 80085d8:	799a      	ldrb	r2, [r3, #6]
 80085da:	4b03      	ldr	r3, [pc, #12]	; (80085e8 <RemoteConfig::GetStringNode() const+0x14>)
 80085dc:	fb00 3002 	mla	r0, r0, r2, r3
 80085e0:	4770      	bx	lr
 80085e2:	bf00      	nop
 80085e4:	20000100 	andcs	r0, r0, r0, lsl #2
 80085e8:	080120af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, sp}

080085ec <RemoteConfig::GetStringOutput() const>:
 80085ec:	200c      	movs	r0, #12
 80085ee:	4b03      	ldr	r3, [pc, #12]	; (80085fc <RemoteConfig::GetStringOutput() const+0x10>)
 80085f0:	79da      	ldrb	r2, [r3, #7]
 80085f2:	4b03      	ldr	r3, [pc, #12]	; (8008600 <RemoteConfig::GetStringOutput() const+0x14>)
 80085f4:	fb00 3002 	mla	r0, r0, r2, r3
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop
 80085fc:	20000100 	andcs	r0, r0, r0, lsl #2
 8008600:	08012175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sp}

08008604 <RemoteConfig::SetDisable(bool)>:
 8008604:	b538      	push	{r3, r4, r5, lr}
 8008606:	4604      	mov	r4, r0
 8008608:	7b03      	ldrb	r3, [r0, #12]
 800860a:	b161      	cbz	r1, 8008626 <RemoteConfig::SetDisable(bool)+0x22>
 800860c:	b953      	cbnz	r3, 8008624 <RemoteConfig::SetDisable(bool)+0x20>
 800860e:	4b0c      	ldr	r3, [pc, #48]	; (8008640 <RemoteConfig::SetDisable(bool)+0x3c>)
 8008610:	f642 1105 	movw	r1, #10501	; 0x2905
 8008614:	6818      	ldr	r0, [r3, #0]
 8008616:	f004 fe36 	bl	800d286 <Network::End(unsigned short)>
 800861a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800861e:	6163      	str	r3, [r4, #20]
 8008620:	2301      	movs	r3, #1
 8008622:	7323      	strb	r3, [r4, #12]
 8008624:	bd38      	pop	{r3, r4, r5, pc}
 8008626:	2b00      	cmp	r3, #0
 8008628:	d0fc      	beq.n	8008624 <RemoteConfig::SetDisable(bool)+0x20>
 800862a:	4b05      	ldr	r3, [pc, #20]	; (8008640 <RemoteConfig::SetDisable(bool)+0x3c>)
 800862c:	460d      	mov	r5, r1
 800862e:	6818      	ldr	r0, [r3, #0]
 8008630:	f642 1105 	movw	r1, #10501	; 0x2905
 8008634:	f004 fe24 	bl	800d280 <Network::Begin(unsigned short)>
 8008638:	7325      	strb	r5, [r4, #12]
 800863a:	6160      	str	r0, [r4, #20]
 800863c:	e7f2      	b.n	8008624 <RemoteConfig::SetDisable(bool)+0x20>
 800863e:	bf00      	nop
 8008640:	20009a30 	andcs	r9, r0, r0, lsr sl

08008644 <RemoteConfig::SetDisplayName(char const*)>:
 8008644:	2217      	movs	r2, #23
 8008646:	4809      	ldr	r0, [pc, #36]	; (800866c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8008648:	b508      	push	{r3, lr}
 800864a:	1e4b      	subs	r3, r1, #1
 800864c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008650:	b911      	cbnz	r1, 8008658 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8008652:	f007 f8cf 	bl	800f7f4 <memset>
 8008656:	e003      	b.n	8008660 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8008658:	3a01      	subs	r2, #1
 800865a:	f800 1b01 	strb.w	r1, [r0], #1
 800865e:	d1f5      	bne.n	800864c <RemoteConfig::SetDisplayName(char const*)+0x8>
 8008660:	2200      	movs	r2, #0
 8008662:	4b03      	ldr	r3, [pc, #12]	; (8008670 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8008664:	f883 2020 	strb.w	r2, [r3, #32]
 8008668:	bd08      	pop	{r3, pc}
 800866a:	bf00      	nop
 800866c:	20000109 	andcs	r0, r0, r9, lsl #2
 8008670:	20000100 	andcs	r0, r0, r0, lsl #2

08008674 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8008674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008676:	4604      	mov	r4, r0
 8008678:	4616      	mov	r6, r2
 800867a:	460d      	mov	r5, r1
 800867c:	4f28      	ldr	r7, [pc, #160]	; (8008720 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800867e:	b085      	sub	sp, #20
 8008680:	b9a9      	cbnz	r1, 80086ae <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8008682:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8008686:	6839      	ldr	r1, [r7, #0]
 8008688:	aa03      	add	r2, sp, #12
 800868a:	3105      	adds	r1, #5
 800868c:	9303      	str	r3, [sp, #12]
 800868e:	f000 fbe1 	bl	8008e54 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008692:	1e03      	subs	r3, r0, #0
 8008694:	da1b      	bge.n	80086ce <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8008696:	f642 1305 	movw	r3, #10501	; 0x2905
 800869a:	220b      	movs	r2, #11
 800869c:	9300      	str	r3, [sp, #0]
 800869e:	4921      	ldr	r1, [pc, #132]	; (8008724 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80086a0:	69a3      	ldr	r3, [r4, #24]
 80086a2:	7d20      	ldrb	r0, [r4, #20]
 80086a4:	f004 f924 	bl	800c8f0 <udp_send>
 80086a8:	200c      	movs	r0, #12
 80086aa:	b005      	add	sp, #20
 80086ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086ae:	9203      	str	r2, [sp, #12]
 80086b0:	aa03      	add	r2, sp, #12
 80086b2:	6039      	str	r1, [r7, #0]
 80086b4:	f000 fbce 	bl	8008e54 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80086b8:	1e03      	subs	r3, r0, #0
 80086ba:	da08      	bge.n	80086ce <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80086bc:	2e0b      	cmp	r6, #11
 80086be:	4632      	mov	r2, r6
 80086c0:	4628      	mov	r0, r5
 80086c2:	bf28      	it	cs
 80086c4:	220b      	movcs	r2, #11
 80086c6:	4917      	ldr	r1, [pc, #92]	; (8008724 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80086c8:	f007 f872 	bl	800f7b0 <memcpy>
 80086cc:	e7ec      	b.n	80086a8 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 80086ce:	221c      	movs	r2, #28
 80086d0:	4353      	muls	r3, r2
 80086d2:	4915      	ldr	r1, [pc, #84]	; (8008728 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 80086d4:	18ca      	adds	r2, r1, r3
 80086d6:	6852      	ldr	r2, [r2, #4]
 80086d8:	58cb      	ldr	r3, [r1, r3]
 80086da:	ea4f 0c62 	mov.w	ip, r2, asr #1
 80086de:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80086e2:	07d2      	lsls	r2, r2, #31
 80086e4:	bf48      	it	mi
 80086e6:	f854 200c 	ldrmi.w	r2, [r4, ip]
 80086ea:	a903      	add	r1, sp, #12
 80086ec:	bf48      	it	mi
 80086ee:	58d3      	ldrmi	r3, [r2, r3]
 80086f0:	4798      	blx	r3
 80086f2:	b95d      	cbnz	r5, 800870c <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 80086f4:	f642 1305 	movw	r3, #10501	; 0x2905
 80086f8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80086fc:	9300      	str	r3, [sp, #0]
 80086fe:	6839      	ldr	r1, [r7, #0]
 8008700:	69a3      	ldr	r3, [r4, #24]
 8008702:	7d20      	ldrb	r0, [r4, #20]
 8008704:	f004 f8f4 	bl	800c8f0 <udp_send>
 8008708:	9803      	ldr	r0, [sp, #12]
 800870a:	e7ce      	b.n	80086aa <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800870c:	9a03      	ldr	r2, [sp, #12]
 800870e:	4628      	mov	r0, r5
 8008710:	42b2      	cmp	r2, r6
 8008712:	bf28      	it	cs
 8008714:	4632      	movcs	r2, r6
 8008716:	6839      	ldr	r1, [r7, #0]
 8008718:	f007 f855 	bl	800f7c6 <memmove>
 800871c:	e7f4      	b.n	8008708 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800871e:	bf00      	nop
 8008720:	200000fc 	strdcs	r0, [r0], -ip
 8008724:	0801204c 	stmdaeq	r1, {r2, r3, r6, sp}
 8008728:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}

0800872c <RemoteConfig::HandleGetNoParams()>:
 800872c:	2200      	movs	r2, #0
 800872e:	4611      	mov	r1, r2
 8008730:	f7ff bfa0 	b.w	8008674 <RemoteConfig::HandleGet(void*, unsigned int)>

08008734 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8008734:	b510      	push	{r4, lr}
 8008736:	460c      	mov	r4, r1
 8008738:	4b07      	ldr	r3, [pc, #28]	; (8008758 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800873a:	b08a      	sub	sp, #40	; 0x28
 800873c:	6819      	ldr	r1, [r3, #0]
 800873e:	a801      	add	r0, sp, #4
 8008740:	f000 f9e4 	bl	8008b0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008744:	4905      	ldr	r1, [pc, #20]	; (800875c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8008746:	4623      	mov	r3, r4
 8008748:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800874c:	6809      	ldr	r1, [r1, #0]
 800874e:	a801      	add	r0, sp, #4
 8008750:	f000 fb00 	bl	8008d54 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8008754:	b00a      	add	sp, #40	; 0x28
 8008756:	bd10      	pop	{r4, pc}
 8008758:	20002140 	andcs	r2, r0, r0, asr #2
 800875c:	200000fc 	strdcs	r0, [r0], -ip

08008760 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8008760:	b510      	push	{r4, lr}
 8008762:	460c      	mov	r4, r1
 8008764:	4b07      	ldr	r3, [pc, #28]	; (8008784 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8008766:	b09a      	sub	sp, #104	; 0x68
 8008768:	6819      	ldr	r1, [r3, #0]
 800876a:	a801      	add	r0, sp, #4
 800876c:	f004 ff7e 	bl	800d66c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8008770:	4905      	ldr	r1, [pc, #20]	; (8008788 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8008772:	4623      	mov	r3, r4
 8008774:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008778:	6809      	ldr	r1, [r1, #0]
 800877a:	a801      	add	r0, sp, #4
 800877c:	f005 f94c 	bl	800da18 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8008780:	b01a      	add	sp, #104	; 0x68
 8008782:	bd10      	pop	{r4, pc}
 8008784:	2000213c 	andcs	r2, r0, ip, lsr r1
 8008788:	200000fc 	strdcs	r0, [r0], -ip

0800878c <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800878c:	b510      	push	{r4, lr}
 800878e:	460c      	mov	r4, r1
 8008790:	4b07      	ldr	r3, [pc, #28]	; (80087b0 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8008792:	b086      	sub	sp, #24
 8008794:	6819      	ldr	r1, [r3, #0]
 8008796:	4668      	mov	r0, sp
 8008798:	f001 ff06 	bl	800a5a8 <E131Params::E131Params(E131ParamsStore*)>
 800879c:	4905      	ldr	r1, [pc, #20]	; (80087b4 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800879e:	4623      	mov	r3, r4
 80087a0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80087a4:	4668      	mov	r0, sp
 80087a6:	6809      	ldr	r1, [r1, #0]
 80087a8:	f002 f9be 	bl	800ab28 <E131Params::Save(char*, unsigned int, unsigned int&)>
 80087ac:	b006      	add	sp, #24
 80087ae:	bd10      	pop	{r4, pc}
 80087b0:	20002144 	andcs	r2, r0, r4, asr #2
 80087b4:	200000fc 	strdcs	r0, [r0], -ip

080087b8 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 80087b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80087ba:	460c      	mov	r4, r1
 80087bc:	4b07      	ldr	r3, [pc, #28]	; (80087dc <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 80087be:	4668      	mov	r0, sp
 80087c0:	6819      	ldr	r1, [r3, #0]
 80087c2:	f002 faeb 	bl	800ad9c <DmxParams::DmxParams(DmxParamsStore*)>
 80087c6:	4906      	ldr	r1, [pc, #24]	; (80087e0 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 80087c8:	4623      	mov	r3, r4
 80087ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80087ce:	4668      	mov	r0, sp
 80087d0:	6809      	ldr	r1, [r1, #0]
 80087d2:	f002 fc05 	bl	800afe0 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 80087d6:	b004      	add	sp, #16
 80087d8:	bd10      	pop	{r4, pc}
 80087da:	bf00      	nop
 80087dc:	20002138 	andcs	r2, r0, r8, lsr r1
 80087e0:	200000fc 	strdcs	r0, [r0], -ip

080087e4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 80087e4:	b510      	push	{r4, lr}
 80087e6:	460c      	mov	r4, r1
 80087e8:	4b07      	ldr	r3, [pc, #28]	; (8008808 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 80087ea:	b08a      	sub	sp, #40	; 0x28
 80087ec:	6819      	ldr	r1, [r3, #0]
 80087ee:	4668      	mov	r0, sp
 80087f0:	f005 fec8 	bl	800e584 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80087f4:	4905      	ldr	r1, [pc, #20]	; (800880c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 80087f6:	4623      	mov	r3, r4
 80087f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80087fc:	4668      	mov	r0, sp
 80087fe:	6809      	ldr	r1, [r1, #0]
 8008800:	f005 fff8 	bl	800e7f4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8008804:	b00a      	add	sp, #40	; 0x28
 8008806:	bd10      	pop	{r4, pc}
 8008808:	20002134 	andcs	r2, r0, r4, lsr r1
 800880c:	200000fc 	strdcs	r0, [r0], -ip

08008810 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8008810:	b530      	push	{r4, r5, lr}
 8008812:	b085      	sub	sp, #20
 8008814:	4604      	mov	r4, r0
 8008816:	9201      	str	r2, [sp, #4]
 8008818:	b9d1      	cbnz	r1, 8008850 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800881a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800881e:	9303      	str	r3, [sp, #12]
 8008820:	4b19      	ldr	r3, [pc, #100]	; (8008888 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8008822:	aa03      	add	r2, sp, #12
 8008824:	6819      	ldr	r1, [r3, #0]
 8008826:	3101      	adds	r1, #1
 8008828:	f000 fb14 	bl	8008e54 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800882c:	2800      	cmp	r0, #0
 800882e:	db0d      	blt.n	800884c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8008830:	221c      	movs	r2, #28
 8008832:	4b16      	ldr	r3, [pc, #88]	; (800888c <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8008834:	fb02 3300 	mla	r3, r2, r0, r3
 8008838:	68da      	ldr	r2, [r3, #12]
 800883a:	689b      	ldr	r3, [r3, #8]
 800883c:	1051      	asrs	r1, r2, #1
 800883e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008842:	07d2      	lsls	r2, r2, #31
 8008844:	bf44      	itt	mi
 8008846:	5862      	ldrmi	r2, [r4, r1]
 8008848:	58d3      	ldrmi	r3, [r2, r3]
 800884a:	4798      	blx	r3
 800884c:	b005      	add	sp, #20
 800884e:	bd30      	pop	{r4, r5, pc}
 8008850:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008854:	d8fa      	bhi.n	800884c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8008856:	4b0e      	ldr	r3, [pc, #56]	; (8008890 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8008858:	460d      	mov	r5, r1
 800885a:	781b      	ldrb	r3, [r3, #0]
 800885c:	07d9      	lsls	r1, r3, #31
 800885e:	d50b      	bpl.n	8008878 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8008860:	782b      	ldrb	r3, [r5, #0]
 8008862:	2b7b      	cmp	r3, #123	; 0x7b
 8008864:	d108      	bne.n	8008878 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8008866:	1e51      	subs	r1, r2, #1
 8008868:	4628      	mov	r0, r5
 800886a:	2200      	movs	r2, #0
 800886c:	b289      	uxth	r1, r1
 800886e:	f006 f86f 	bl	800e950 <properties::convert_json_file(char*, unsigned short, bool)>
 8008872:	1e02      	subs	r2, r0, #0
 8008874:	ddea      	ble.n	800884c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8008876:	b292      	uxth	r2, r2
 8008878:	4b03      	ldr	r3, [pc, #12]	; (8008888 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800887a:	61e2      	str	r2, [r4, #28]
 800887c:	4620      	mov	r0, r4
 800887e:	601d      	str	r5, [r3, #0]
 8008880:	aa01      	add	r2, sp, #4
 8008882:	1c69      	adds	r1, r5, #1
 8008884:	e7d0      	b.n	8008828 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8008886:	bf00      	nop
 8008888:	200000fc 	strdcs	r0, [r0], -ip
 800888c:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}
 8008890:	2000a004 	andcs	sl, r0, r4

08008894 <RemoteConfig::Run()>:
 8008894:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008898:	7b05      	ldrb	r5, [r0, #12]
 800889a:	2d00      	cmp	r5, #0
 800889c:	d156      	bne.n	800894c <RemoteConfig::Run()+0xb8>
 800889e:	4e45      	ldr	r6, [pc, #276]	; (80089b4 <RemoteConfig::Run()+0x120>)
 80088a0:	4604      	mov	r4, r0
 80088a2:	f100 0218 	add.w	r2, r0, #24
 80088a6:	4631      	mov	r1, r6
 80088a8:	7d00      	ldrb	r0, [r0, #20]
 80088aa:	f10d 030e 	add.w	r3, sp, #14
 80088ae:	f003 fff9 	bl	800c8a4 <udp_recv2>
 80088b2:	2803      	cmp	r0, #3
 80088b4:	61e0      	str	r0, [r4, #28]
 80088b6:	d949      	bls.n	800894c <RemoteConfig::Run()+0xb8>
 80088b8:	6831      	ldr	r1, [r6, #0]
 80088ba:	1e43      	subs	r3, r0, #1
 80088bc:	5cca      	ldrb	r2, [r1, r3]
 80088be:	2a0a      	cmp	r2, #10
 80088c0:	bf18      	it	ne
 80088c2:	4603      	movne	r3, r0
 80088c4:	61e3      	str	r3, [r4, #28]
 80088c6:	7808      	ldrb	r0, [r1, #0]
 80088c8:	283f      	cmp	r0, #63	; 0x3f
 80088ca:	d137      	bne.n	800893c <RemoteConfig::Run()+0xa8>
 80088cc:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 80089b8 <RemoteConfig::Run()+0x124>
 80088d0:	462a      	mov	r2, r5
 80088d2:	4667      	mov	r7, ip
 80088d4:	3b01      	subs	r3, #1
 80088d6:	61e3      	str	r3, [r4, #28]
 80088d8:	f89c 500e 	ldrb.w	r5, [ip, #14]
 80088dc:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 80088e0:	b16d      	cbz	r5, 80088fe <RemoteConfig::Run()+0x6a>
 80088e2:	4283      	cmp	r3, r0
 80088e4:	d80d      	bhi.n	8008902 <RemoteConfig::Run()+0x6e>
 80088e6:	3201      	adds	r2, #1
 80088e8:	2a09      	cmp	r2, #9
 80088ea:	f10c 0c10 	add.w	ip, ip, #16
 80088ee:	d1f3      	bne.n	80088d8 <RemoteConfig::Run()+0x44>
 80088f0:	f642 1305 	movw	r3, #10501	; 0x2905
 80088f4:	9300      	str	r3, [sp, #0]
 80088f6:	2208      	movs	r2, #8
 80088f8:	69a3      	ldr	r3, [r4, #24]
 80088fa:	4930      	ldr	r1, [pc, #192]	; (80089bc <RemoteConfig::Run()+0x128>)
 80088fc:	e04e      	b.n	800899c <RemoteConfig::Run()+0x108>
 80088fe:	4283      	cmp	r3, r0
 8008900:	d1f1      	bne.n	80088e6 <RemoteConfig::Run()+0x52>
 8008902:	460e      	mov	r6, r1
 8008904:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8008908:	4408      	add	r0, r1
 800890a:	3d01      	subs	r5, #1
 800890c:	4286      	cmp	r6, r0
 800890e:	d10b      	bne.n	8008928 <RemoteConfig::Run()+0x94>
 8008910:	0113      	lsls	r3, r2, #4
 8008912:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008916:	6852      	ldr	r2, [r2, #4]
 8008918:	58fb      	ldr	r3, [r7, r3]
 800891a:	1051      	asrs	r1, r2, #1
 800891c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008920:	07d2      	lsls	r2, r2, #31
 8008922:	d408      	bmi.n	8008936 <RemoteConfig::Run()+0xa2>
 8008924:	4798      	blx	r3
 8008926:	e011      	b.n	800894c <RemoteConfig::Run()+0xb8>
 8008928:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800892c:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8008930:	45f0      	cmp	r8, lr
 8008932:	d0eb      	beq.n	800890c <RemoteConfig::Run()+0x78>
 8008934:	e7d7      	b.n	80088e6 <RemoteConfig::Run()+0x52>
 8008936:	5862      	ldr	r2, [r4, r1]
 8008938:	58d3      	ldr	r3, [r2, r3]
 800893a:	e7f3      	b.n	8008924 <RemoteConfig::Run()+0x90>
 800893c:	7b62      	ldrb	r2, [r4, #13]
 800893e:	b92a      	cbnz	r2, 800894c <RemoteConfig::Run()+0xb8>
 8008940:	2823      	cmp	r0, #35	; 0x23
 8008942:	d106      	bne.n	8008952 <RemoteConfig::Run()+0xbe>
 8008944:	4611      	mov	r1, r2
 8008946:	4620      	mov	r0, r4
 8008948:	f7ff ff62 	bl	8008810 <RemoteConfig::HandleSet(void*, unsigned int)>
 800894c:	b004      	add	sp, #16
 800894e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008952:	2821      	cmp	r0, #33	; 0x21
 8008954:	d1fa      	bne.n	800894c <RemoteConfig::Run()+0xb8>
 8008956:	3b01      	subs	r3, #1
 8008958:	2b05      	cmp	r3, #5
 800895a:	61e3      	str	r3, [r4, #28]
 800895c:	d918      	bls.n	8008990 <RemoteConfig::Run()+0xfc>
 800895e:	460a      	mov	r2, r1
 8008960:	4608      	mov	r0, r1
 8008962:	4d17      	ldr	r5, [pc, #92]	; (80089c0 <RemoteConfig::Run()+0x12c>)
 8008964:	f101 0c05 	add.w	ip, r1, #5
 8008968:	4560      	cmp	r0, ip
 800896a:	d01b      	beq.n	80089a4 <RemoteConfig::Run()+0x110>
 800896c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8008970:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8008974:	42b7      	cmp	r7, r6
 8008976:	d0f7      	beq.n	8008968 <RemoteConfig::Run()+0xd4>
 8008978:	2b08      	cmp	r3, #8
 800897a:	d909      	bls.n	8008990 <RemoteConfig::Run()+0xfc>
 800897c:	4b11      	ldr	r3, [pc, #68]	; (80089c4 <RemoteConfig::Run()+0x130>)
 800897e:	3108      	adds	r1, #8
 8008980:	428a      	cmp	r2, r1
 8008982:	d015      	beq.n	80089b0 <RemoteConfig::Run()+0x11c>
 8008984:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008988:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800898c:	4285      	cmp	r5, r0
 800898e:	d0f7      	beq.n	8008980 <RemoteConfig::Run()+0xec>
 8008990:	f642 1305 	movw	r3, #10501	; 0x2905
 8008994:	2208      	movs	r2, #8
 8008996:	9300      	str	r3, [sp, #0]
 8008998:	69a3      	ldr	r3, [r4, #24]
 800899a:	490b      	ldr	r1, [pc, #44]	; (80089c8 <RemoteConfig::Run()+0x134>)
 800899c:	7d20      	ldrb	r0, [r4, #20]
 800899e:	f003 ffa7 	bl	800c8f0 <udp_send>
 80089a2:	e7d3      	b.n	800894c <RemoteConfig::Run()+0xb8>
 80089a4:	2300      	movs	r3, #0
 80089a6:	4a09      	ldr	r2, [pc, #36]	; (80089cc <RemoteConfig::Run()+0x138>)
 80089a8:	011b      	lsls	r3, r3, #4
 80089aa:	4620      	mov	r0, r4
 80089ac:	58d3      	ldr	r3, [r2, r3]
 80089ae:	e7b9      	b.n	8008924 <RemoteConfig::Run()+0x90>
 80089b0:	2301      	movs	r3, #1
 80089b2:	e7f8      	b.n	80089a6 <RemoteConfig::Run()+0x112>
 80089b4:	200000fc 	strdcs	r0, [r0], -ip
 80089b8:	08012208 	stmdaeq	r1, {r3, r9, sp}
 80089bc:	08012070 	stmdaeq	r1, {r4, r5, r6, sp}
 80089c0:	08012058 	stmdaeq	r1, {r3, r4, r6, sp}
 80089c4:	0801205e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sp}
 80089c8:	08012067 	stmdaeq	r1, {r0, r1, r2, r5, r6, sp}
 80089cc:	08012298 	stmdaeq	r1, {r3, r4, r7, r9, sp}

080089d0 <RemoteConfig::HandleSetRconfig()>:
 80089d0:	b510      	push	{r4, lr}
 80089d2:	4604      	mov	r4, r0
 80089d4:	4b08      	ldr	r3, [pc, #32]	; (80089f8 <RemoteConfig::HandleSetRconfig()+0x28>)
 80089d6:	b08a      	sub	sp, #40	; 0x28
 80089d8:	6819      	ldr	r1, [r3, #0]
 80089da:	a801      	add	r0, sp, #4
 80089dc:	f000 f896 	bl	8008b0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80089e0:	4b06      	ldr	r3, [pc, #24]	; (80089fc <RemoteConfig::HandleSetRconfig()+0x2c>)
 80089e2:	69e2      	ldr	r2, [r4, #28]
 80089e4:	6819      	ldr	r1, [r3, #0]
 80089e6:	a801      	add	r0, sp, #4
 80089e8:	f000 f8a6 	bl	8008b38 <RemoteConfigParams::Load(char const*, unsigned int)>
 80089ec:	4621      	mov	r1, r4
 80089ee:	a801      	add	r0, sp, #4
 80089f0:	f000 f9bd 	bl	8008d6e <RemoteConfigParams::Set(RemoteConfig*)>
 80089f4:	b00a      	add	sp, #40	; 0x28
 80089f6:	bd10      	pop	{r4, pc}
 80089f8:	20002140 	andcs	r2, r0, r0, asr #2
 80089fc:	200000fc 	strdcs	r0, [r0], -ip

08008a00 <RemoteConfig::HandleSetNetworkTxt()>:
 8008a00:	b510      	push	{r4, lr}
 8008a02:	4604      	mov	r4, r0
 8008a04:	4b06      	ldr	r3, [pc, #24]	; (8008a20 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8008a06:	b09a      	sub	sp, #104	; 0x68
 8008a08:	6819      	ldr	r1, [r3, #0]
 8008a0a:	a801      	add	r0, sp, #4
 8008a0c:	f004 fe2e 	bl	800d66c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8008a10:	4b04      	ldr	r3, [pc, #16]	; (8008a24 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8008a12:	69e2      	ldr	r2, [r4, #28]
 8008a14:	6819      	ldr	r1, [r3, #0]
 8008a16:	a801      	add	r0, sp, #4
 8008a18:	f004 fe40 	bl	800d69c <NetworkParams::Load(char const*, unsigned int)>
 8008a1c:	b01a      	add	sp, #104	; 0x68
 8008a1e:	bd10      	pop	{r4, pc}
 8008a20:	2000213c 	andcs	r2, r0, ip, lsr r1
 8008a24:	200000fc 	strdcs	r0, [r0], -ip

08008a28 <RemoteConfig::HandleSetE131Txt()>:
 8008a28:	b510      	push	{r4, lr}
 8008a2a:	4604      	mov	r4, r0
 8008a2c:	4b06      	ldr	r3, [pc, #24]	; (8008a48 <RemoteConfig::HandleSetE131Txt()+0x20>)
 8008a2e:	b086      	sub	sp, #24
 8008a30:	6819      	ldr	r1, [r3, #0]
 8008a32:	4668      	mov	r0, sp
 8008a34:	f001 fdb8 	bl	800a5a8 <E131Params::E131Params(E131ParamsStore*)>
 8008a38:	4b04      	ldr	r3, [pc, #16]	; (8008a4c <RemoteConfig::HandleSetE131Txt()+0x24>)
 8008a3a:	4668      	mov	r0, sp
 8008a3c:	69e2      	ldr	r2, [r4, #28]
 8008a3e:	6819      	ldr	r1, [r3, #0]
 8008a40:	f001 fdd6 	bl	800a5f0 <E131Params::Load(char const*, unsigned int)>
 8008a44:	b006      	add	sp, #24
 8008a46:	bd10      	pop	{r4, pc}
 8008a48:	20002144 	andcs	r2, r0, r4, asr #2
 8008a4c:	200000fc 	strdcs	r0, [r0], -ip

08008a50 <RemoteConfig::HandleSetParamsTxt()>:
 8008a50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008a52:	4604      	mov	r4, r0
 8008a54:	4b06      	ldr	r3, [pc, #24]	; (8008a70 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8008a56:	4668      	mov	r0, sp
 8008a58:	6819      	ldr	r1, [r3, #0]
 8008a5a:	f002 f99f 	bl	800ad9c <DmxParams::DmxParams(DmxParamsStore*)>
 8008a5e:	4b05      	ldr	r3, [pc, #20]	; (8008a74 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 8008a60:	4668      	mov	r0, sp
 8008a62:	69e2      	ldr	r2, [r4, #28]
 8008a64:	6819      	ldr	r1, [r3, #0]
 8008a66:	f002 f9b1 	bl	800adcc <DmxParams::Load(char const*, unsigned int)>
 8008a6a:	b004      	add	sp, #16
 8008a6c:	bd10      	pop	{r4, pc}
 8008a6e:	bf00      	nop
 8008a70:	20002138 	andcs	r2, r0, r8, lsr r1
 8008a74:	200000fc 	strdcs	r0, [r0], -ip

08008a78 <RemoteConfig::HandleSetDisplayTxt()>:
 8008a78:	b510      	push	{r4, lr}
 8008a7a:	4604      	mov	r4, r0
 8008a7c:	4b06      	ldr	r3, [pc, #24]	; (8008a98 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8008a7e:	b08a      	sub	sp, #40	; 0x28
 8008a80:	6819      	ldr	r1, [r3, #0]
 8008a82:	4668      	mov	r0, sp
 8008a84:	f005 fd7e 	bl	800e584 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008a88:	4b04      	ldr	r3, [pc, #16]	; (8008a9c <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8008a8a:	4668      	mov	r0, sp
 8008a8c:	69e2      	ldr	r2, [r4, #28]
 8008a8e:	6819      	ldr	r1, [r3, #0]
 8008a90:	f005 fd92 	bl	800e5b8 <DisplayUdfParams::Load(char const*, unsigned int)>
 8008a94:	b00a      	add	sp, #40	; 0x28
 8008a96:	bd10      	pop	{r4, pc}
 8008a98:	20002134 	andcs	r2, r0, r4, lsr r1
 8008a9c:	200000fc 	strdcs	r0, [r0], -ip

08008aa0 <RemoteConfig::HandleFactory()>:
 8008aa0:	b538      	push	{r3, r4, r5, lr}
 8008aa2:	2400      	movs	r4, #0
 8008aa4:	4d04      	ldr	r5, [pc, #16]	; (8008ab8 <RemoteConfig::HandleFactory()+0x18>)
 8008aa6:	4621      	mov	r1, r4
 8008aa8:	6828      	ldr	r0, [r5, #0]
 8008aaa:	3401      	adds	r4, #1
 8008aac:	f003 f876 	bl	800bb9c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8008ab0:	2c1c      	cmp	r4, #28
 8008ab2:	d1f8      	bne.n	8008aa6 <RemoteConfig::HandleFactory()+0x6>
 8008ab4:	bd38      	pop	{r3, r4, r5, pc}
 8008ab6:	bf00      	nop
 8008ab8:	2000212c 	andcs	r2, r0, ip, lsr #2

08008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8008abc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008abe:	460b      	mov	r3, r1
 8008ac0:	8885      	ldrh	r5, [r0, #4]
 8008ac2:	88c1      	ldrh	r1, [r0, #6]
 8008ac4:	42a9      	cmp	r1, r5
 8008ac6:	d214      	bcs.n	8008af2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8008ac8:	4604      	mov	r4, r0
 8008aca:	6800      	ldr	r0, [r0, #0]
 8008acc:	1a6d      	subs	r5, r5, r1
 8008ace:	4408      	add	r0, r1
 8008ad0:	7a21      	ldrb	r1, [r4, #8]
 8008ad2:	b91a      	cbnz	r2, 8008adc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8008ad4:	b919      	cbnz	r1, 8008ade <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8008ad6:	4a0a      	ldr	r2, [pc, #40]	; (8008b00 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8008ad8:	9100      	str	r1, [sp, #0]
 8008ada:	e002      	b.n	8008ae2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008adc:	b159      	cbz	r1, 8008af6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8008ade:	9200      	str	r2, [sp, #0]
 8008ae0:	4a08      	ldr	r2, [pc, #32]	; (8008b04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8008ae2:	4629      	mov	r1, r5
 8008ae4:	f007 f8c8 	bl	800fc78 <snprintf>
 8008ae8:	4285      	cmp	r5, r0
 8008aea:	bfa2      	ittt	ge
 8008aec:	88e3      	ldrhge	r3, [r4, #6]
 8008aee:	181b      	addge	r3, r3, r0
 8008af0:	80e3      	strhge	r3, [r4, #6]
 8008af2:	b003      	add	sp, #12
 8008af4:	bd30      	pop	{r4, r5, pc}
 8008af6:	2201      	movs	r2, #1
 8008af8:	9200      	str	r2, [sp, #0]
 8008afa:	4a03      	ldr	r2, [pc, #12]	; (8008b08 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8008afc:	e7f1      	b.n	8008ae2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008afe:	bf00      	nop
 8008b00:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 8008b04:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 8008b08:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}

08008b0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8008b0c:	b510      	push	{r4, lr}
 8008b0e:	4604      	mov	r4, r0
 8008b10:	2220      	movs	r2, #32
 8008b12:	f840 1b04 	str.w	r1, [r0], #4
 8008b16:	2100      	movs	r1, #0
 8008b18:	f006 fe6c 	bl	800f7f4 <memset>
 8008b1c:	4620      	mov	r0, r4
 8008b1e:	bd10      	pop	{r4, pc}

08008b20 <RemoteConfigParams::Load()>:
 8008b20:	b508      	push	{r3, lr}
 8008b22:	2300      	movs	r3, #0
 8008b24:	4601      	mov	r1, r0
 8008b26:	6043      	str	r3, [r0, #4]
 8008b28:	6800      	ldr	r0, [r0, #0]
 8008b2a:	b120      	cbz	r0, 8008b36 <RemoteConfigParams::Load()+0x16>
 8008b2c:	6803      	ldr	r3, [r0, #0]
 8008b2e:	3104      	adds	r1, #4
 8008b30:	68db      	ldr	r3, [r3, #12]
 8008b32:	4798      	blx	r3
 8008b34:	2001      	movs	r0, #1
 8008b36:	bd08      	pop	{r3, pc}

08008b38 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8008b38:	2300      	movs	r3, #0
 8008b3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b3c:	460d      	mov	r5, r1
 8008b3e:	4616      	mov	r6, r2
 8008b40:	4604      	mov	r4, r0
 8008b42:	6043      	str	r3, [r0, #4]
 8008b44:	4602      	mov	r2, r0
 8008b46:	490a      	ldr	r1, [pc, #40]	; (8008b70 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8008b48:	4668      	mov	r0, sp
 8008b4a:	f006 f853 	bl	800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8008b4e:	4632      	mov	r2, r6
 8008b50:	4629      	mov	r1, r5
 8008b52:	4668      	mov	r0, sp
 8008b54:	f006 f852 	bl	800ebfc <ReadConfigFile::Read(char const*, unsigned int)>
 8008b58:	4621      	mov	r1, r4
 8008b5a:	f851 0b04 	ldr.w	r0, [r1], #4
 8008b5e:	6803      	ldr	r3, [r0, #0]
 8008b60:	689b      	ldr	r3, [r3, #8]
 8008b62:	4798      	blx	r3
 8008b64:	4668      	mov	r0, sp
 8008b66:	f006 f848 	bl	800ebfa <ReadConfigFile::~ReadConfigFile()>
 8008b6a:	b002      	add	sp, #8
 8008b6c:	bd70      	pop	{r4, r5, r6, pc}
 8008b6e:	bf00      	nop
 8008b70:	08008c31 	stmdaeq	r0, {r0, r4, r5, sl, fp, pc}

08008b74 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8008b74:	6843      	ldr	r3, [r0, #4]
 8008b76:	b111      	cbz	r1, 8008b7e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8008b78:	4313      	orrs	r3, r2
 8008b7a:	6043      	str	r3, [r0, #4]
 8008b7c:	4770      	bx	lr
 8008b7e:	ea23 0302 	bic.w	r3, r3, r2
 8008b82:	e7fa      	b.n	8008b7a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08008b84 <RemoteConfigParams::callbackFunction(char const*)>:
 8008b84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b86:	460d      	mov	r5, r1
 8008b88:	4604      	mov	r4, r0
 8008b8a:	4923      	ldr	r1, [pc, #140]	; (8008c18 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8008b8c:	4628      	mov	r0, r5
 8008b8e:	f10d 0203 	add.w	r2, sp, #3
 8008b92:	f006 f8df 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008b96:	b940      	cbnz	r0, 8008baa <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8008b98:	2201      	movs	r2, #1
 8008b9a:	4620      	mov	r0, r4
 8008b9c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8008ba0:	b003      	add	sp, #12
 8008ba2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008ba6:	f7ff bfe5 	b.w	8008b74 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8008baa:	4628      	mov	r0, r5
 8008bac:	491b      	ldr	r1, [pc, #108]	; (8008c1c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8008bae:	f10d 0203 	add.w	r2, sp, #3
 8008bb2:	f006 f8cf 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bb6:	b908      	cbnz	r0, 8008bbc <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8008bb8:	2202      	movs	r2, #2
 8008bba:	e7ee      	b.n	8008b9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008bbc:	4628      	mov	r0, r5
 8008bbe:	4918      	ldr	r1, [pc, #96]	; (8008c20 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8008bc0:	f10d 0203 	add.w	r2, sp, #3
 8008bc4:	f006 f8c6 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bc8:	b908      	cbnz	r0, 8008bce <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8008bca:	2204      	movs	r2, #4
 8008bcc:	e7e5      	b.n	8008b9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008bce:	4628      	mov	r0, r5
 8008bd0:	4914      	ldr	r1, [pc, #80]	; (8008c24 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8008bd2:	f10d 0203 	add.w	r2, sp, #3
 8008bd6:	f006 f8bd 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bda:	b908      	cbnz	r0, 8008be0 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8008bdc:	2208      	movs	r2, #8
 8008bde:	e7dc      	b.n	8008b9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008be0:	4628      	mov	r0, r5
 8008be2:	4911      	ldr	r1, [pc, #68]	; (8008c28 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8008be4:	f10d 0203 	add.w	r2, sp, #3
 8008be8:	f006 f8b4 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008bec:	b908      	cbnz	r0, 8008bf2 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8008bee:	2220      	movs	r2, #32
 8008bf0:	e7d3      	b.n	8008b9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008bf2:	2317      	movs	r3, #23
 8008bf4:	4628      	mov	r0, r5
 8008bf6:	9301      	str	r3, [sp, #4]
 8008bf8:	490c      	ldr	r1, [pc, #48]	; (8008c2c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8008bfa:	ab01      	add	r3, sp, #4
 8008bfc:	f104 020c 	add.w	r2, r4, #12
 8008c00:	f006 f830 	bl	800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008c04:	b930      	cbnz	r0, 8008c14 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8008c06:	9b01      	ldr	r3, [sp, #4]
 8008c08:	4423      	add	r3, r4
 8008c0a:	7318      	strb	r0, [r3, #12]
 8008c0c:	6863      	ldr	r3, [r4, #4]
 8008c0e:	f043 0310 	orr.w	r3, r3, #16
 8008c12:	6063      	str	r3, [r4, #4]
 8008c14:	b003      	add	sp, #12
 8008c16:	bd30      	pop	{r4, r5, pc}
 8008c18:	080126a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, sp}
 8008c1c:	080126c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, sp}
 8008c20:	080126d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp}
 8008c24:	080126e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, sp}
 8008c28:	080126f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, sp}
 8008c2c:	080126b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp}

08008c30 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8008c30:	f7ff bfa8 	b.w	8008b84 <RemoteConfigParams::callbackFunction(char const*)>

08008c34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8008c34:	b570      	push	{r4, r5, r6, lr}
 8008c36:	4604      	mov	r4, r0
 8008c38:	4615      	mov	r5, r2
 8008c3a:	461e      	mov	r6, r3
 8008c3c:	b086      	sub	sp, #24
 8008c3e:	3004      	adds	r0, #4
 8008c40:	2900      	cmp	r1, #0
 8008c42:	d041      	beq.n	8008cc8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8008c44:	2220      	movs	r2, #32
 8008c46:	f006 fdbe 	bl	800f7c6 <memmove>
 8008c4a:	4633      	mov	r3, r6
 8008c4c:	462a      	mov	r2, r5
 8008c4e:	4937      	ldr	r1, [pc, #220]	; (8008d2c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8008c50:	a803      	add	r0, sp, #12
 8008c52:	f005 ff2f 	bl	800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8008c56:	6862      	ldr	r2, [r4, #4]
 8008c58:	4935      	ldr	r1, [pc, #212]	; (8008d30 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8008c5a:	f002 0201 	and.w	r2, r2, #1
 8008c5e:	a803      	add	r0, sp, #12
 8008c60:	f7ff ff2c 	bl	8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008c64:	6862      	ldr	r2, [r4, #4]
 8008c66:	4933      	ldr	r1, [pc, #204]	; (8008d34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8008c68:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8008c6c:	a803      	add	r0, sp, #12
 8008c6e:	f7ff ff25 	bl	8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008c72:	6862      	ldr	r2, [r4, #4]
 8008c74:	4930      	ldr	r1, [pc, #192]	; (8008d38 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8008c76:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8008c7a:	a803      	add	r0, sp, #12
 8008c7c:	f7ff ff1e 	bl	8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008c80:	6862      	ldr	r2, [r4, #4]
 8008c82:	492e      	ldr	r1, [pc, #184]	; (8008d3c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8008c84:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8008c88:	a803      	add	r0, sp, #12
 8008c8a:	f7ff ff17 	bl	8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008c8e:	6862      	ldr	r2, [r4, #4]
 8008c90:	492b      	ldr	r1, [pc, #172]	; (8008d40 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8008c92:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8008c96:	a803      	add	r0, sp, #12
 8008c98:	f7ff ff10 	bl	8008abc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8008c9c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008ca0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8008ca4:	6862      	ldr	r2, [r4, #4]
 8008ca6:	42ab      	cmp	r3, r5
 8008ca8:	d223      	bcs.n	8008cf2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 8008caa:	9803      	ldr	r0, [sp, #12]
 8008cac:	06d2      	lsls	r2, r2, #27
 8008cae:	4418      	add	r0, r3
 8008cb0:	eba5 0503 	sub.w	r5, r5, r3
 8008cb4:	f104 040c 	add.w	r4, r4, #12
 8008cb8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008cbc:	d40b      	bmi.n	8008cd6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8008cbe:	b95b      	cbnz	r3, 8008cd8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8008cc0:	4b20      	ldr	r3, [pc, #128]	; (8008d44 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008cc2:	4a21      	ldr	r2, [pc, #132]	; (8008d48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8008cc4:	9400      	str	r4, [sp, #0]
 8008cc6:	e00a      	b.n	8008cde <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8008cc8:	6823      	ldr	r3, [r4, #0]
 8008cca:	4601      	mov	r1, r0
 8008ccc:	681a      	ldr	r2, [r3, #0]
 8008cce:	4618      	mov	r0, r3
 8008cd0:	68d2      	ldr	r2, [r2, #12]
 8008cd2:	4790      	blx	r2
 8008cd4:	e7b9      	b.n	8008c4a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8008cd6:	b32b      	cbz	r3, 8008d24 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 8008cd8:	4b1a      	ldr	r3, [pc, #104]	; (8008d44 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008cda:	4a1c      	ldr	r2, [pc, #112]	; (8008d4c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8008cdc:	9400      	str	r4, [sp, #0]
 8008cde:	4629      	mov	r1, r5
 8008ce0:	f006 ffca 	bl	800fc78 <snprintf>
 8008ce4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008ce8:	4285      	cmp	r5, r0
 8008cea:	bfa4      	itt	ge
 8008cec:	181b      	addge	r3, r3, r0
 8008cee:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8008cf2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008cf6:	b17b      	cbz	r3, 8008d18 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 8008cf8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008cfc:	9b03      	ldr	r3, [sp, #12]
 8008cfe:	4413      	add	r3, r2
 8008d00:	227d      	movs	r2, #125	; 0x7d
 8008d02:	f803 2c01 	strb.w	r2, [r3, #-1]
 8008d06:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008d0a:	9903      	ldr	r1, [sp, #12]
 8008d0c:	54ca      	strb	r2, [r1, r3]
 8008d0e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008d12:	3301      	adds	r3, #1
 8008d14:	f8ad 3012 	strh.w	r3, [sp, #18]
 8008d18:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008d1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d1e:	601a      	str	r2, [r3, #0]
 8008d20:	b006      	add	sp, #24
 8008d22:	bd70      	pop	{r4, r5, r6, pc}
 8008d24:	4b07      	ldr	r3, [pc, #28]	; (8008d44 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8008d26:	4a0a      	ldr	r2, [pc, #40]	; (8008d50 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8008d28:	9400      	str	r4, [sp, #0]
 8008d2a:	e7d8      	b.n	8008cde <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8008d2c:	080126ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, sp}
 8008d30:	080126a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, sp}
 8008d34:	080126c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, sp}
 8008d38:	080126d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp}
 8008d3c:	080126e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, sp}
 8008d40:	080126f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, sp}
 8008d44:	080126b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp}
 8008d48:	080122d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sp}
 8008d4c:	080122c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sp}
 8008d50:	080122d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sp}

08008d54 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8008d54:	b513      	push	{r0, r1, r4, lr}
 8008d56:	6804      	ldr	r4, [r0, #0]
 8008d58:	b914      	cbnz	r4, 8008d60 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8008d5a:	601c      	str	r4, [r3, #0]
 8008d5c:	b002      	add	sp, #8
 8008d5e:	bd10      	pop	{r4, pc}
 8008d60:	9300      	str	r3, [sp, #0]
 8008d62:	4613      	mov	r3, r2
 8008d64:	460a      	mov	r2, r1
 8008d66:	2100      	movs	r1, #0
 8008d68:	f7ff ff64 	bl	8008c34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8008d6c:	e7f6      	b.n	8008d5c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08008d6e <RemoteConfigParams::Set(RemoteConfig*)>:
 8008d6e:	b538      	push	{r3, r4, r5, lr}
 8008d70:	460c      	mov	r4, r1
 8008d72:	4605      	mov	r5, r0
 8008d74:	6841      	ldr	r1, [r0, #4]
 8008d76:	4620      	mov	r0, r4
 8008d78:	f001 0101 	and.w	r1, r1, #1
 8008d7c:	f7ff fc42 	bl	8008604 <RemoteConfig::SetDisable(bool)>
 8008d80:	686b      	ldr	r3, [r5, #4]
 8008d82:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8008d86:	7362      	strb	r2, [r4, #13]
 8008d88:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8008d8c:	73a2      	strb	r2, [r4, #14]
 8008d8e:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8008d92:	73e2      	strb	r2, [r4, #15]
 8008d94:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8008d98:	06db      	lsls	r3, r3, #27
 8008d9a:	7422      	strb	r2, [r4, #16]
 8008d9c:	d506      	bpl.n	8008dac <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8008d9e:	4620      	mov	r0, r4
 8008da0:	f105 010c 	add.w	r1, r5, #12
 8008da4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008da8:	f7ff bc4c 	b.w	8008644 <RemoteConfig::SetDisplayName(char const*)>
 8008dac:	bd38      	pop	{r3, r4, r5, pc}

08008dae <RemoteConfigParams::Dump()>:
 8008dae:	4770      	bx	lr

08008db0 <RemoteConfig::HandleReboot()>:
 8008db0:	7b83      	ldrb	r3, [r0, #14]
 8008db2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008db4:	2b00      	cmp	r3, #0
 8008db6:	d03c      	beq.n	8008e32 <RemoteConfig::HandleReboot()+0x82>
 8008db8:	2301      	movs	r3, #1
 8008dba:	4c1f      	ldr	r4, [pc, #124]	; (8008e38 <RemoteConfig::HandleReboot()+0x88>)
 8008dbc:	7443      	strb	r3, [r0, #17]
 8008dbe:	6825      	ldr	r5, [r4, #0]
 8008dc0:	69a8      	ldr	r0, [r5, #24]
 8008dc2:	b138      	cbz	r0, 8008dd4 <RemoteConfig::HandleReboot()+0x24>
 8008dc4:	2100      	movs	r1, #0
 8008dc6:	6803      	ldr	r3, [r0, #0]
 8008dc8:	7429      	strb	r1, [r5, #16]
 8008dca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008dcc:	4798      	blx	r3
 8008dce:	4b1b      	ldr	r3, [pc, #108]	; (8008e3c <RemoteConfig::HandleReboot()+0x8c>)
 8008dd0:	681b      	ldr	r3, [r3, #0]
 8008dd2:	606b      	str	r3, [r5, #4]
 8008dd4:	4d1a      	ldr	r5, [pc, #104]	; (8008e40 <RemoteConfig::HandleReboot()+0x90>)
 8008dd6:	6828      	ldr	r0, [r5, #0]
 8008dd8:	f002 ff64 	bl	800bca4 <SpiFlashStore::Flash()>
 8008ddc:	2800      	cmp	r0, #0
 8008dde:	d1fa      	bne.n	8008dd6 <RemoteConfig::HandleReboot()+0x26>
 8008de0:	4b18      	ldr	r3, [pc, #96]	; (8008e44 <RemoteConfig::HandleReboot()+0x94>)
 8008de2:	6818      	ldr	r0, [r3, #0]
 8008de4:	f004 fa44 	bl	800d270 <Network::Shutdown()>
 8008de8:	4817      	ldr	r0, [pc, #92]	; (8008e48 <RemoteConfig::HandleReboot()+0x98>)
 8008dea:	f006 ff1d 	bl	800fc28 <printf>
 8008dee:	6823      	ldr	r3, [r4, #0]
 8008df0:	6998      	ldr	r0, [r3, #24]
 8008df2:	b110      	cbz	r0, 8008dfa <RemoteConfig::HandleReboot()+0x4a>
 8008df4:	6803      	ldr	r3, [r0, #0]
 8008df6:	68db      	ldr	r3, [r3, #12]
 8008df8:	4798      	blx	r3
 8008dfa:	6824      	ldr	r4, [r4, #0]
 8008dfc:	4913      	ldr	r1, [pc, #76]	; (8008e4c <RemoteConfig::HandleReboot()+0x9c>)
 8008dfe:	4620      	mov	r0, r4
 8008e00:	f7fe ff0c 	bl	8007c1c <Display::TextStatus(char const*)>
 8008e04:	7c63      	ldrb	r3, [r4, #17]
 8008e06:	b183      	cbz	r3, 8008e2a <RemoteConfig::HandleReboot()+0x7a>
 8008e08:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8008e0c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008e10:	23bf      	movs	r3, #191	; 0xbf
 8008e12:	7a20      	ldrb	r0, [r4, #8]
 8008e14:	f88d 3006 	strb.w	r3, [sp, #6]
 8008e18:	f007 feb4 	bl	8010b84 <gd32_i2c_set_address>
 8008e1c:	68e0      	ldr	r0, [r4, #12]
 8008e1e:	f007 fea9 	bl	8010b74 <gd32_i2c_set_baudrate>
 8008e22:	2103      	movs	r1, #3
 8008e24:	a801      	add	r0, sp, #4
 8008e26:	f007 feb3 	bl	8010b90 <gd32_i2c_write>
 8008e2a:	4b09      	ldr	r3, [pc, #36]	; (8008e50 <RemoteConfig::HandleReboot()+0xa0>)
 8008e2c:	6818      	ldr	r0, [r3, #0]
 8008e2e:	f006 fbcb 	bl	800f5c8 <Hardware::Reboot()>
 8008e32:	b003      	add	sp, #12
 8008e34:	bd30      	pop	{r4, r5, pc}
 8008e36:	bf00      	nop
 8008e38:	2000a008 	andcs	sl, r0, r8
 8008e3c:	2000a114 	andcs	sl, r0, r4, lsl r1
 8008e40:	2000212c 	andcs	r2, r0, ip, lsr #2
 8008e44:	20009a30 	andcs	r9, r0, r0, lsr sl
 8008e48:	080122dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp}
 8008e4c:	080122eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sp}
 8008e50:	2000a0f8 	strdcs	sl, [r0], -r8

08008e54 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8008e54:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008e58:	2000      	movs	r0, #0
 8008e5a:	4d12      	ldr	r5, [pc, #72]	; (8008ea4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8008e5c:	f10d 0c04 	add.w	ip, sp, #4
 8008e60:	6814      	ldr	r4, [r2, #0]
 8008e62:	7d2b      	ldrb	r3, [r5, #20]
 8008e64:	692e      	ldr	r6, [r5, #16]
 8008e66:	42a3      	cmp	r3, r4
 8008e68:	bf34      	ite	cc
 8008e6a:	4664      	movcc	r4, ip
 8008e6c:	4614      	movcs	r4, r2
 8008e6e:	9301      	str	r3, [sp, #4]
 8008e70:	6827      	ldr	r7, [r4, #0]
 8008e72:	460c      	mov	r4, r1
 8008e74:	3e01      	subs	r6, #1
 8008e76:	440f      	add	r7, r1
 8008e78:	42bc      	cmp	r4, r7
 8008e7a:	d101      	bne.n	8008e80 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 8008e7c:	6013      	str	r3, [r2, #0]
 8008e7e:	e00c      	b.n	8008e9a <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 8008e80:	f894 8000 	ldrb.w	r8, [r4]
 8008e84:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8008e88:	45f0      	cmp	r8, lr
 8008e8a:	d009      	beq.n	8008ea0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8008e8c:	3001      	adds	r0, #1
 8008e8e:	2805      	cmp	r0, #5
 8008e90:	f105 051c 	add.w	r5, r5, #28
 8008e94:	d1e4      	bne.n	8008e60 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8008e96:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008e9a:	b002      	add	sp, #8
 8008e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ea0:	3401      	adds	r4, #1
 8008ea2:	e7e9      	b.n	8008e78 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8008ea4:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}

08008ea8 <RemoteConfig::PlatformHandleTftpSet()>:
 8008ea8:	f890 1020 	ldrb.w	r1, [r0, #32]
 8008eac:	b109      	cbz	r1, 8008eb2 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8008eae:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8008eb2:	2002      	movs	r0, #2
 8008eb4:	f007 b8d8 	b.w	8010068 <bkp_data_write>

08008eb8 <RemoteConfig::PlatformHandleTftpGet()>:
 8008eb8:	b510      	push	{r4, lr}
 8008eba:	4604      	mov	r4, r0
 8008ebc:	2002      	movs	r0, #2
 8008ebe:	f007 f8e9 	bl	8010094 <bkp_data_read>
 8008ec2:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8008ec6:	1ac3      	subs	r3, r0, r3
 8008ec8:	4258      	negs	r0, r3
 8008eca:	4158      	adcs	r0, r3
 8008ecc:	f884 0020 	strb.w	r0, [r4, #32]
 8008ed0:	bd10      	pop	{r4, pc}

08008ed2 <strcmp>:
 8008ed2:	1e43      	subs	r3, r0, #1
 8008ed4:	3901      	subs	r1, #1
 8008ed6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008eda:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8008ede:	4290      	cmp	r0, r2
 8008ee0:	d001      	beq.n	8008ee6 <strcmp+0x14>
 8008ee2:	1a80      	subs	r0, r0, r2
 8008ee4:	e001      	b.n	8008eea <strcmp+0x18>
 8008ee6:	2800      	cmp	r0, #0
 8008ee8:	d1f5      	bne.n	8008ed6 <strcmp+0x4>
 8008eea:	4770      	bx	lr

08008eec <strcasecmp>:
 8008eec:	b530      	push	{r4, r5, lr}
 8008eee:	1e42      	subs	r2, r0, #1
 8008ef0:	3901      	subs	r1, #1
 8008ef2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8008ef6:	4604      	mov	r4, r0
 8008ef8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8008efc:	2b19      	cmp	r3, #25
 8008efe:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008f02:	bf98      	it	ls
 8008f04:	f100 0420 	addls.w	r4, r0, #32
 8008f08:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8008f0c:	2d19      	cmp	r5, #25
 8008f0e:	bf98      	it	ls
 8008f10:	3320      	addls	r3, #32
 8008f12:	42a3      	cmp	r3, r4
 8008f14:	d001      	beq.n	8008f1a <strcasecmp+0x2e>
 8008f16:	1ae0      	subs	r0, r4, r3
 8008f18:	e001      	b.n	8008f1e <strcasecmp+0x32>
 8008f1a:	2800      	cmp	r0, #0
 8008f1c:	d1e9      	bne.n	8008ef2 <strcasecmp+0x6>
 8008f1e:	bd30      	pop	{r4, r5, pc}

08008f20 <PropertiesConfig::EnableJSON(bool)>:
 8008f20:	4a04      	ldr	r2, [pc, #16]	; (8008f34 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8008f22:	7813      	ldrb	r3, [r2, #0]
 8008f24:	b118      	cbz	r0, 8008f2e <PropertiesConfig::EnableJSON(bool)+0xe>
 8008f26:	f043 0301 	orr.w	r3, r3, #1
 8008f2a:	7013      	strb	r3, [r2, #0]
 8008f2c:	4770      	bx	lr
 8008f2e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8008f32:	e7fa      	b.n	8008f2a <PropertiesConfig::EnableJSON(bool)+0xa>
 8008f34:	2000a004 	andcs	sl, r0, r4

08008f38 <HttpDaemon::HttpDaemon()>:
 8008f38:	4a08      	ldr	r2, [pc, #32]	; (8008f5c <HttpDaemon::HttpDaemon()+0x24>)
 8008f3a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8008f3e:	6002      	str	r2, [r0, #0]
 8008f40:	2200      	movs	r2, #0
 8008f42:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8008f46:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8008f4a:	2102      	movs	r1, #2
 8008f4c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8008f50:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8008f54:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8008f58:	60c2      	str	r2, [r0, #12]
 8008f5a:	4770      	bx	lr
 8008f5c:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}

08008f60 <HttpDaemon::Start()>:
 8008f60:	4b04      	ldr	r3, [pc, #16]	; (8008f74 <HttpDaemon::Start()+0x14>)
 8008f62:	b510      	push	{r4, lr}
 8008f64:	2150      	movs	r1, #80	; 0x50
 8008f66:	4604      	mov	r4, r0
 8008f68:	6818      	ldr	r0, [r3, #0]
 8008f6a:	f004 fb73 	bl	800d654 <Network::TcpBegin(unsigned short)>
 8008f6e:	6120      	str	r0, [r4, #16]
 8008f70:	bd10      	pop	{r4, pc}
 8008f72:	bf00      	nop
 8008f74:	20009a30 	andcs	r9, r0, r0, lsr sl

08008f78 <HttpDaemon::ParseMethod(char*)>:
 8008f78:	b538      	push	{r3, r4, r5, lr}
 8008f7a:	4604      	mov	r4, r0
 8008f7c:	4608      	mov	r0, r1
 8008f7e:	491a      	ldr	r1, [pc, #104]	; (8008fe8 <HttpDaemon::ParseMethod(char*)+0x70>)
 8008f80:	f006 feaa 	bl	800fcd8 <strtok>
 8008f84:	4605      	mov	r5, r0
 8008f86:	b360      	cbz	r0, 8008fe2 <HttpDaemon::ParseMethod(char*)+0x6a>
 8008f88:	4918      	ldr	r1, [pc, #96]	; (8008fec <HttpDaemon::ParseMethod(char*)+0x74>)
 8008f8a:	f7ff ffa2 	bl	8008ed2 <strcmp>
 8008f8e:	b128      	cbz	r0, 8008f9c <HttpDaemon::ParseMethod(char*)+0x24>
 8008f90:	4628      	mov	r0, r5
 8008f92:	4917      	ldr	r1, [pc, #92]	; (8008ff0 <HttpDaemon::ParseMethod(char*)+0x78>)
 8008f94:	f7ff ff9d 	bl	8008ed2 <strcmp>
 8008f98:	bb18      	cbnz	r0, 8008fe2 <HttpDaemon::ParseMethod(char*)+0x6a>
 8008f9a:	2001      	movs	r0, #1
 8008f9c:	61e0      	str	r0, [r4, #28]
 8008f9e:	4912      	ldr	r1, [pc, #72]	; (8008fe8 <HttpDaemon::ParseMethod(char*)+0x70>)
 8008fa0:	2000      	movs	r0, #0
 8008fa2:	f006 fe99 	bl	800fcd8 <strtok>
 8008fa6:	b910      	cbnz	r0, 8008fae <HttpDaemon::ParseMethod(char*)+0x36>
 8008fa8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8008fac:	bd38      	pop	{r3, r4, r5, pc}
 8008fae:	6060      	str	r0, [r4, #4]
 8008fb0:	4910      	ldr	r1, [pc, #64]	; (8008ff4 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8008fb2:	2000      	movs	r0, #0
 8008fb4:	f006 fe90 	bl	800fcd8 <strtok>
 8008fb8:	2800      	cmp	r0, #0
 8008fba:	d0f5      	beq.n	8008fa8 <HttpDaemon::ParseMethod(char*)+0x30>
 8008fbc:	490e      	ldr	r1, [pc, #56]	; (8008ff8 <HttpDaemon::ParseMethod(char*)+0x80>)
 8008fbe:	f7ff ff88 	bl	8008ed2 <strcmp>
 8008fc2:	2800      	cmp	r0, #0
 8008fc4:	d1f0      	bne.n	8008fa8 <HttpDaemon::ParseMethod(char*)+0x30>
 8008fc6:	490d      	ldr	r1, [pc, #52]	; (8008ffc <HttpDaemon::ParseMethod(char*)+0x84>)
 8008fc8:	f006 fe86 	bl	800fcd8 <strtok>
 8008fcc:	2800      	cmp	r0, #0
 8008fce:	d0eb      	beq.n	8008fa8 <HttpDaemon::ParseMethod(char*)+0x30>
 8008fd0:	490b      	ldr	r1, [pc, #44]	; (8009000 <HttpDaemon::ParseMethod(char*)+0x88>)
 8008fd2:	f7ff ff7e 	bl	8008ed2 <strcmp>
 8008fd6:	2800      	cmp	r0, #0
 8008fd8:	f240 10f9 	movw	r0, #505	; 0x1f9
 8008fdc:	bf08      	it	eq
 8008fde:	20c8      	moveq	r0, #200	; 0xc8
 8008fe0:	e7e4      	b.n	8008fac <HttpDaemon::ParseMethod(char*)+0x34>
 8008fe2:	f240 10f5 	movw	r0, #501	; 0x1f5
 8008fe6:	e7e1      	b.n	8008fac <HttpDaemon::ParseMethod(char*)+0x34>
 8008fe8:	0801204a 	stmdaeq	r1, {r1, r3, r6, sp}
 8008fec:	080123c0 	stmdaeq	r1, {r6, r7, r8, r9, sp}
 8008ff0:	080123c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sp}
 8008ff4:	0801242e 	stmdaeq	r1, {r1, r2, r3, r5, sl, sp}
 8008ff8:	080123c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sp}
 8008ffc:	080123ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sp}
 8009000:	080123d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sp}

08009004 <HttpDaemon::ParseHeaderField(char*)>:
 8009004:	b538      	push	{r3, r4, r5, lr}
 8009006:	4605      	mov	r5, r0
 8009008:	4608      	mov	r0, r1
 800900a:	491d      	ldr	r1, [pc, #116]	; (8009080 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800900c:	f006 fe64 	bl	800fcd8 <strtok>
 8009010:	4604      	mov	r4, r0
 8009012:	b910      	cbnz	r0, 800901a <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009014:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009018:	bd38      	pop	{r3, r4, r5, pc}
 800901a:	491a      	ldr	r1, [pc, #104]	; (8009084 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800901c:	f7ff ff66 	bl	8008eec <strcasecmp>
 8009020:	b970      	cbnz	r0, 8009040 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009022:	4919      	ldr	r1, [pc, #100]	; (8009088 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009024:	f006 fe58 	bl	800fcd8 <strtok>
 8009028:	2800      	cmp	r0, #0
 800902a:	d0f3      	beq.n	8009014 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800902c:	4917      	ldr	r1, [pc, #92]	; (800908c <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800902e:	f7ff ff50 	bl	8008ed2 <strcmp>
 8009032:	b108      	cbz	r0, 8009038 <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009034:	20c8      	movs	r0, #200	; 0xc8
 8009036:	e7ef      	b.n	8009018 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009038:	2301      	movs	r3, #1
 800903a:	f885 3020 	strb.w	r3, [r5, #32]
 800903e:	e7f9      	b.n	8009034 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009040:	4620      	mov	r0, r4
 8009042:	4913      	ldr	r1, [pc, #76]	; (8009090 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009044:	f7ff ff52 	bl	8008eec <strcasecmp>
 8009048:	4604      	mov	r4, r0
 800904a:	2800      	cmp	r0, #0
 800904c:	d1f2      	bne.n	8009034 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800904e:	4911      	ldr	r1, [pc, #68]	; (8009094 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009050:	f006 fe42 	bl	800fcd8 <strtok>
 8009054:	2800      	cmp	r0, #0
 8009056:	d0dd      	beq.n	8009014 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009058:	1e42      	subs	r2, r0, #1
 800905a:	4623      	mov	r3, r4
 800905c:	200a      	movs	r0, #10
 800905e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009062:	b909      	cbnz	r1, 8009068 <HttpDaemon::ParseHeaderField(char*)+0x64>
 8009064:	84eb      	strh	r3, [r5, #38]	; 0x26
 8009066:	e7e5      	b.n	8009034 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009068:	3930      	subs	r1, #48	; 0x30
 800906a:	2909      	cmp	r1, #9
 800906c:	d8d2      	bhi.n	8009014 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800906e:	fb00 1303 	mla	r3, r0, r3, r1
 8009072:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 8009076:	d9f2      	bls.n	800905e <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009078:	f240 109d 	movw	r0, #413	; 0x19d
 800907c:	e7cc      	b.n	8009018 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800907e:	bf00      	nop
 8009080:	080123d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sp}
 8009084:	080123d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sp}
 8009088:	080123e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp}
 800908c:	080123e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sp}
 8009090:	080123f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sp}
 8009094:	0801204a 	stmdaeq	r1, {r1, r3, r6, sp}

08009098 <HttpDaemon::ParseRequest()>:
 8009098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800909a:	2400      	movs	r4, #0
 800909c:	4605      	mov	r5, r0
 800909e:	4622      	mov	r2, r4
 80090a0:	4626      	mov	r6, r4
 80090a2:	68c1      	ldr	r1, [r0, #12]
 80090a4:	f880 4020 	strb.w	r4, [r0, #32]
 80090a8:	6244      	str	r4, [r0, #36]	; 0x24
 80090aa:	8aab      	ldrh	r3, [r5, #20]
 80090ac:	42a3      	cmp	r3, r4
 80090ae:	d91d      	bls.n	80090ec <HttpDaemon::ParseRequest()+0x54>
 80090b0:	68eb      	ldr	r3, [r5, #12]
 80090b2:	5d18      	ldrb	r0, [r3, r4]
 80090b4:	280a      	cmp	r0, #10
 80090b6:	d10e      	bne.n	80090d6 <HttpDaemon::ParseRequest()+0x3e>
 80090b8:	4423      	add	r3, r4
 80090ba:	f803 6c01 	strb.w	r6, [r3, #-1]
 80090be:	1c57      	adds	r7, r2, #1
 80090c0:	b962      	cbnz	r2, 80090dc <HttpDaemon::ParseRequest()+0x44>
 80090c2:	4628      	mov	r0, r5
 80090c4:	f7ff ff58 	bl	8008f78 <HttpDaemon::ParseMethod(char*)>
 80090c8:	28c8      	cmp	r0, #200	; 0xc8
 80090ca:	d110      	bne.n	80090ee <HttpDaemon::ParseRequest()+0x56>
 80090cc:	463a      	mov	r2, r7
 80090ce:	68e9      	ldr	r1, [r5, #12]
 80090d0:	3401      	adds	r4, #1
 80090d2:	b2a4      	uxth	r4, r4
 80090d4:	4421      	add	r1, r4
 80090d6:	3401      	adds	r4, #1
 80090d8:	b2a4      	uxth	r4, r4
 80090da:	e7e6      	b.n	80090aa <HttpDaemon::ParseRequest()+0x12>
 80090dc:	7808      	ldrb	r0, [r1, #0]
 80090de:	b968      	cbnz	r0, 80090fc <HttpDaemon::ParseRequest()+0x64>
 80090e0:	696b      	ldr	r3, [r5, #20]
 80090e2:	3b01      	subs	r3, #1
 80090e4:	1b1b      	subs	r3, r3, r4
 80090e6:	b29b      	uxth	r3, r3
 80090e8:	84ab      	strh	r3, [r5, #36]	; 0x24
 80090ea:	b90b      	cbnz	r3, 80090f0 <HttpDaemon::ParseRequest()+0x58>
 80090ec:	20c8      	movs	r0, #200	; 0xc8
 80090ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090f0:	68ea      	ldr	r2, [r5, #12]
 80090f2:	3401      	adds	r4, #1
 80090f4:	4414      	add	r4, r2
 80090f6:	60ac      	str	r4, [r5, #8]
 80090f8:	54e0      	strb	r0, [r4, r3]
 80090fa:	e7f7      	b.n	80090ec <HttpDaemon::ParseRequest()+0x54>
 80090fc:	4628      	mov	r0, r5
 80090fe:	f7ff ff81 	bl	8009004 <HttpDaemon::ParseHeaderField(char*)>
 8009102:	e7e1      	b.n	80090c8 <HttpDaemon::ParseRequest()+0x30>

08009104 <HttpDaemon::HandleGetTxt()>:
 8009104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009108:	6846      	ldr	r6, [r0, #4]
 800910a:	4607      	mov	r7, r0
 800910c:	1db4      	adds	r4, r6, #6
 800910e:	4622      	mov	r2, r4
 8009110:	4613      	mov	r3, r2
 8009112:	7819      	ldrb	r1, [r3, #0]
 8009114:	3201      	adds	r2, #1
 8009116:	2900      	cmp	r1, #0
 8009118:	d1fa      	bne.n	8009110 <HttpDaemon::HandleGetTxt()+0xc>
 800911a:	1b1b      	subs	r3, r3, r4
 800911c:	2b04      	cmp	r3, #4
 800911e:	d803      	bhi.n	8009128 <HttpDaemon::HandleGetTxt()+0x24>
 8009120:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009128:	3b04      	subs	r3, #4
 800912a:	4914      	ldr	r1, [pc, #80]	; (800917c <HttpDaemon::HandleGetTxt()+0x78>)
 800912c:	18e0      	adds	r0, r4, r3
 800912e:	f7ff fed0 	bl	8008ed2 <strcmp>
 8009132:	2800      	cmp	r0, #0
 8009134:	d1f4      	bne.n	8009120 <HttpDaemon::HandleGetTxt()+0x1c>
 8009136:	4b12      	ldr	r3, [pc, #72]	; (8009180 <HttpDaemon::HandleGetTxt()+0x7c>)
 8009138:	2001      	movs	r0, #1
 800913a:	f893 8000 	ldrb.w	r8, [r3]
 800913e:	f7ff feef 	bl	8008f20 <PropertiesConfig::EnableJSON(bool)>
 8009142:	4b10      	ldr	r3, [pc, #64]	; (8009184 <HttpDaemon::HandleGetTxt()+0x80>)
 8009144:	f240 529b 	movw	r2, #1435	; 0x59b
 8009148:	4621      	mov	r1, r4
 800914a:	6818      	ldr	r0, [r3, #0]
 800914c:	f7ff fa92 	bl	8008674 <RemoteConfig::HandleGet(void*, unsigned int)>
 8009150:	4605      	mov	r5, r0
 8009152:	f008 0801 	and.w	r8, r8, #1
 8009156:	4640      	mov	r0, r8
 8009158:	f7ff fee2 	bl	8008f20 <PropertiesConfig::EnableJSON(bool)>
 800915c:	2d00      	cmp	r5, #0
 800915e:	d0df      	beq.n	8009120 <HttpDaemon::HandleGetTxt()+0x1c>
 8009160:	847d      	strh	r5, [r7, #34]	; 0x22
 8009162:	4b09      	ldr	r3, [pc, #36]	; (8009188 <HttpDaemon::HandleGetTxt()+0x84>)
 8009164:	3506      	adds	r5, #6
 8009166:	442e      	add	r6, r5
 8009168:	42b4      	cmp	r4, r6
 800916a:	d101      	bne.n	8009170 <HttpDaemon::HandleGetTxt()+0x6c>
 800916c:	20c8      	movs	r0, #200	; 0xc8
 800916e:	e7d9      	b.n	8009124 <HttpDaemon::HandleGetTxt()+0x20>
 8009170:	f814 2b01 	ldrb.w	r2, [r4], #1
 8009174:	f803 2b01 	strb.w	r2, [r3], #1
 8009178:	e7f6      	b.n	8009168 <HttpDaemon::HandleGetTxt()+0x64>
 800917a:	bf00      	nop
 800917c:	08012321 	stmdaeq	r1, {r0, r5, r8, r9, sp}
 8009180:	2000a004 	andcs	sl, r0, r4
 8009184:	20000124 	andcs	r0, r0, r4, lsr #2
 8009188:	20000128 	andcs	r0, r0, r8, lsr #2

0800918c <HttpDaemon::HandleGet()>:
 800918c:	b570      	push	{r4, r5, r6, lr}
 800918e:	6845      	ldr	r5, [r0, #4]
 8009190:	4604      	mov	r4, r0
 8009192:	493e      	ldr	r1, [pc, #248]	; (800928c <HttpDaemon::HandleGet()+0x100>)
 8009194:	4628      	mov	r0, r5
 8009196:	f7ff fe9c 	bl	8008ed2 <strcmp>
 800919a:	b120      	cbz	r0, 80091a6 <HttpDaemon::HandleGet()+0x1a>
 800919c:	4628      	mov	r0, r5
 800919e:	493c      	ldr	r1, [pc, #240]	; (8009290 <HttpDaemon::HandleGet()+0x104>)
 80091a0:	f7ff fe97 	bl	8008ed2 <strcmp>
 80091a4:	b950      	cbnz	r0, 80091bc <HttpDaemon::HandleGet()+0x30>
 80091a6:	4b3b      	ldr	r3, [pc, #236]	; (8009294 <HttpDaemon::HandleGet()+0x108>)
 80091a8:	493b      	ldr	r1, [pc, #236]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 80091aa:	483c      	ldr	r0, [pc, #240]	; (800929c <HttpDaemon::HandleGet()+0x110>)
 80091ac:	6023      	str	r3, [r4, #0]
 80091ae:	f000 fa67 	bl	8009680 <get_file_content(char const*, char*)>
 80091b2:	2800      	cmp	r0, #0
 80091b4:	dd2f      	ble.n	8009216 <HttpDaemon::HandleGet()+0x8a>
 80091b6:	8460      	strh	r0, [r4, #34]	; 0x22
 80091b8:	20c8      	movs	r0, #200	; 0xc8
 80091ba:	bd70      	pop	{r4, r5, r6, pc}
 80091bc:	4628      	mov	r0, r5
 80091be:	4938      	ldr	r1, [pc, #224]	; (80092a0 <HttpDaemon::HandleGet()+0x114>)
 80091c0:	f7ff fe87 	bl	8008ed2 <strcmp>
 80091c4:	b920      	cbnz	r0, 80091d0 <HttpDaemon::HandleGet()+0x44>
 80091c6:	4b37      	ldr	r3, [pc, #220]	; (80092a4 <HttpDaemon::HandleGet()+0x118>)
 80091c8:	4933      	ldr	r1, [pc, #204]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 80091ca:	4837      	ldr	r0, [pc, #220]	; (80092a8 <HttpDaemon::HandleGet()+0x11c>)
 80091cc:	6023      	str	r3, [r4, #0]
 80091ce:	e7ee      	b.n	80091ae <HttpDaemon::HandleGet()+0x22>
 80091d0:	4628      	mov	r0, r5
 80091d2:	4936      	ldr	r1, [pc, #216]	; (80092ac <HttpDaemon::HandleGet()+0x120>)
 80091d4:	f7ff fe7d 	bl	8008ed2 <strcmp>
 80091d8:	b190      	cbz	r0, 8009200 <HttpDaemon::HandleGet()+0x74>
 80091da:	4a35      	ldr	r2, [pc, #212]	; (80092b0 <HttpDaemon::HandleGet()+0x124>)
 80091dc:	1e6b      	subs	r3, r5, #1
 80091de:	1d69      	adds	r1, r5, #5
 80091e0:	428b      	cmp	r3, r1
 80091e2:	d112      	bne.n	800920a <HttpDaemon::HandleGet()+0x7e>
 80091e4:	4b33      	ldr	r3, [pc, #204]	; (80092b4 <HttpDaemon::HandleGet()+0x128>)
 80091e6:	3506      	adds	r5, #6
 80091e8:	4628      	mov	r0, r5
 80091ea:	4933      	ldr	r1, [pc, #204]	; (80092b8 <HttpDaemon::HandleGet()+0x12c>)
 80091ec:	6023      	str	r3, [r4, #0]
 80091ee:	f7ff fe70 	bl	8008ed2 <strcmp>
 80091f2:	b998      	cbnz	r0, 800921c <HttpDaemon::HandleGet()+0x90>
 80091f4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 80091f8:	4827      	ldr	r0, [pc, #156]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 80091fa:	f000 f9c9 	bl	8009590 <remoteconfig::json_get_list(char*, unsigned short)>
 80091fe:	e7d8      	b.n	80091b2 <HttpDaemon::HandleGet()+0x26>
 8009200:	4b2e      	ldr	r3, [pc, #184]	; (80092bc <HttpDaemon::HandleGet()+0x130>)
 8009202:	4925      	ldr	r1, [pc, #148]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 8009204:	482e      	ldr	r0, [pc, #184]	; (80092c0 <HttpDaemon::HandleGet()+0x134>)
 8009206:	6023      	str	r3, [r4, #0]
 8009208:	e7d1      	b.n	80091ae <HttpDaemon::HandleGet()+0x22>
 800920a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800920e:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8009212:	4286      	cmp	r6, r0
 8009214:	d0e4      	beq.n	80091e0 <HttpDaemon::HandleGet()+0x54>
 8009216:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800921a:	e7ce      	b.n	80091ba <HttpDaemon::HandleGet()+0x2e>
 800921c:	4628      	mov	r0, r5
 800921e:	4929      	ldr	r1, [pc, #164]	; (80092c4 <HttpDaemon::HandleGet()+0x138>)
 8009220:	f7ff fe57 	bl	8008ed2 <strcmp>
 8009224:	b928      	cbnz	r0, 8009232 <HttpDaemon::HandleGet()+0xa6>
 8009226:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800922a:	481b      	ldr	r0, [pc, #108]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 800922c:	f000 f9e4 	bl	80095f8 <remoteconfig::json_get_version(char*, unsigned short)>
 8009230:	e7bf      	b.n	80091b2 <HttpDaemon::HandleGet()+0x26>
 8009232:	4628      	mov	r0, r5
 8009234:	4924      	ldr	r1, [pc, #144]	; (80092c8 <HttpDaemon::HandleGet()+0x13c>)
 8009236:	f7ff fe4c 	bl	8008ed2 <strcmp>
 800923a:	b948      	cbnz	r0, 8009250 <HttpDaemon::HandleGet()+0xc4>
 800923c:	4b23      	ldr	r3, [pc, #140]	; (80092cc <HttpDaemon::HandleGet()+0x140>)
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	7bdb      	ldrb	r3, [r3, #15]
 8009242:	b303      	cbz	r3, 8009286 <HttpDaemon::HandleGet()+0xfa>
 8009244:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009248:	4813      	ldr	r0, [pc, #76]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 800924a:	f000 f9f1 	bl	8009630 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800924e:	e7b0      	b.n	80091b2 <HttpDaemon::HandleGet()+0x26>
 8009250:	4628      	mov	r0, r5
 8009252:	491f      	ldr	r1, [pc, #124]	; (80092d0 <HttpDaemon::HandleGet()+0x144>)
 8009254:	f7ff fe3d 	bl	8008ed2 <strcmp>
 8009258:	b928      	cbnz	r0, 8009266 <HttpDaemon::HandleGet()+0xda>
 800925a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800925e:	480e      	ldr	r0, [pc, #56]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 8009260:	f000 f9f6 	bl	8009650 <remoteconfig::json_get_display(char*, unsigned short)>
 8009264:	e7a5      	b.n	80091b2 <HttpDaemon::HandleGet()+0x26>
 8009266:	4628      	mov	r0, r5
 8009268:	491a      	ldr	r1, [pc, #104]	; (80092d4 <HttpDaemon::HandleGet()+0x148>)
 800926a:	f7ff fe32 	bl	8008ed2 <strcmp>
 800926e:	b928      	cbnz	r0, 800927c <HttpDaemon::HandleGet()+0xf0>
 8009270:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009274:	4808      	ldr	r0, [pc, #32]	; (8009298 <HttpDaemon::HandleGet()+0x10c>)
 8009276:	f000 f9fb 	bl	8009670 <remoteconfig::json_get_directory(char*, unsigned short)>
 800927a:	e79a      	b.n	80091b2 <HttpDaemon::HandleGet()+0x26>
 800927c:	4620      	mov	r0, r4
 800927e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009282:	f7ff bf3f 	b.w	8009104 <HttpDaemon::HandleGetTxt()>
 8009286:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800928a:	e796      	b.n	80091ba <HttpDaemon::HandleGet()+0x2e>
 800928c:	0801242e 	stmdaeq	r1, {r1, r2, r3, r5, sl, sp}
 8009290:	08012407 	stmdaeq	r1, {r0, r1, r2, sl, sp}
 8009294:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}
 8009298:	20000128 	andcs	r0, r0, r8, lsr #2
 800929c:	08012408 	stmdaeq	r1, {r3, sl, sp}
 80092a0:	08012413 	stmdaeq	r1, {r0, r1, r4, sl, sp}
 80092a4:	08012645 	stmdaeq	r1, {r0, r2, r6, r9, sl, sp}
 80092a8:	08012414 	stmdaeq	r1, {r2, r4, sl, sp}
 80092ac:	0801241f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, sp}
 80092b0:	08012429 	stmdaeq	r1, {r0, r3, r5, sl, sp}
 80092b4:	08012685 	stmdaeq	r1, {r0, r2, r7, r9, sl, sp}
 80092b8:	08012430 	stmdaeq	r1, {r4, r5, sl, sp}
 80092bc:	08012665 	stmdaeq	r1, {r0, r2, r5, r6, r9, sl, sp}
 80092c0:	08012420 	stmdaeq	r1, {r5, sl, sp}
 80092c4:	08012435 	stmdaeq	r1, {r0, r2, r4, r5, sl, sp}
 80092c8:	0801243d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, sp}
 80092cc:	20000124 	andcs	r0, r0, r4, lsr #2
 80092d0:	08012444 	stmdaeq	r1, {r2, r6, sl, sp}
 80092d4:	0801244c 	stmdaeq	r1, {r2, r3, r6, sl, sp}

080092d8 <HttpDaemon::HandlePost(bool)>:
 80092d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092da:	4604      	mov	r4, r0
 80092dc:	2900      	cmp	r1, #0
 80092de:	f040 808a 	bne.w	80093f6 <HttpDaemon::HandlePost(bool)+0x11e>
 80092e2:	f890 3020 	ldrb.w	r3, [r0, #32]
 80092e6:	2b00      	cmp	r3, #0
 80092e8:	d05a      	beq.n	80093a0 <HttpDaemon::HandlePost(bool)+0xc8>
 80092ea:	6845      	ldr	r5, [r0, #4]
 80092ec:	4944      	ldr	r1, [pc, #272]	; (8009400 <HttpDaemon::HandlePost(bool)+0x128>)
 80092ee:	4628      	mov	r0, r5
 80092f0:	f7ff fdef 	bl	8008ed2 <strcmp>
 80092f4:	2800      	cmp	r0, #0
 80092f6:	bf0c      	ite	eq
 80092f8:	2301      	moveq	r3, #1
 80092fa:	2300      	movne	r3, #0
 80092fc:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 8009300:	d052      	beq.n	80093a8 <HttpDaemon::HandlePost(bool)+0xd0>
 8009302:	4628      	mov	r0, r5
 8009304:	493f      	ldr	r1, [pc, #252]	; (8009404 <HttpDaemon::HandlePost(bool)+0x12c>)
 8009306:	f7ff fde4 	bl	8008ed2 <strcmp>
 800930a:	2800      	cmp	r0, #0
 800930c:	d04c      	beq.n	80093a8 <HttpDaemon::HandlePost(bool)+0xd0>
 800930e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009312:	e047      	b.n	80093a4 <HttpDaemon::HandlePost(bool)+0xcc>
 8009314:	493c      	ldr	r1, [pc, #240]	; (8009408 <HttpDaemon::HandlePost(bool)+0x130>)
 8009316:	68a0      	ldr	r0, [r4, #8]
 8009318:	f10d 0207 	add.w	r2, sp, #7
 800931c:	f005 fd1a 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009320:	b9d8      	cbnz	r0, 800935a <HttpDaemon::HandlePost(bool)+0x82>
 8009322:	f89d 6007 	ldrb.w	r6, [sp, #7]
 8009326:	4b39      	ldr	r3, [pc, #228]	; (800940c <HttpDaemon::HandlePost(bool)+0x134>)
 8009328:	fab6 f186 	clz	r1, r6
 800932c:	681d      	ldr	r5, [r3, #0]
 800932e:	0949      	lsrs	r1, r1, #5
 8009330:	69a8      	ldr	r0, [r5, #24]
 8009332:	b138      	cbz	r0, 8009344 <HttpDaemon::HandlePost(bool)+0x6c>
 8009334:	6803      	ldr	r3, [r0, #0]
 8009336:	7429      	strb	r1, [r5, #16]
 8009338:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800933a:	4798      	blx	r3
 800933c:	b116      	cbz	r6, 8009344 <HttpDaemon::HandlePost(bool)+0x6c>
 800933e:	4b34      	ldr	r3, [pc, #208]	; (8009410 <HttpDaemon::HandlePost(bool)+0x138>)
 8009340:	681b      	ldr	r3, [r3, #0]
 8009342:	606b      	str	r3, [r5, #4]
 8009344:	4b33      	ldr	r3, [pc, #204]	; (8009414 <HttpDaemon::HandlePost(bool)+0x13c>)
 8009346:	f240 519f 	movw	r1, #1439	; 0x59f
 800934a:	4a33      	ldr	r2, [pc, #204]	; (8009418 <HttpDaemon::HandlePost(bool)+0x140>)
 800934c:	4833      	ldr	r0, [pc, #204]	; (800941c <HttpDaemon::HandlePost(bool)+0x144>)
 800934e:	6023      	str	r3, [r4, #0]
 8009350:	f006 fc92 	bl	800fc78 <snprintf>
 8009354:	8460      	strh	r0, [r4, #34]	; 0x22
 8009356:	20c8      	movs	r0, #200	; 0xc8
 8009358:	e024      	b.n	80093a4 <HttpDaemon::HandlePost(bool)+0xcc>
 800935a:	4931      	ldr	r1, [pc, #196]	; (8009420 <HttpDaemon::HandlePost(bool)+0x148>)
 800935c:	68a0      	ldr	r0, [r4, #8]
 800935e:	f10d 0207 	add.w	r2, sp, #7
 8009362:	f005 fcf7 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009366:	b9d8      	cbnz	r0, 80093a0 <HttpDaemon::HandlePost(bool)+0xc8>
 8009368:	4b2e      	ldr	r3, [pc, #184]	; (8009424 <HttpDaemon::HandlePost(bool)+0x14c>)
 800936a:	6818      	ldr	r0, [r3, #0]
 800936c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009370:	b11b      	cbz	r3, 800937a <HttpDaemon::HandlePost(bool)+0xa2>
 8009372:	2104      	movs	r1, #4
 8009374:	f006 f888 	bl	800f488 <LedBlink::SetMode(ledblink::Mode)>
 8009378:	e7e4      	b.n	8009344 <HttpDaemon::HandlePost(bool)+0x6c>
 800937a:	2102      	movs	r1, #2
 800937c:	e7fa      	b.n	8009374 <HttpDaemon::HandlePost(bool)+0x9c>
 800937e:	4b2a      	ldr	r3, [pc, #168]	; (8009428 <HttpDaemon::HandlePost(bool)+0x150>)
 8009380:	2001      	movs	r0, #1
 8009382:	781d      	ldrb	r5, [r3, #0]
 8009384:	f7ff fdcc 	bl	8008f20 <PropertiesConfig::EnableJSON(bool)>
 8009388:	4b28      	ldr	r3, [pc, #160]	; (800942c <HttpDaemon::HandlePost(bool)+0x154>)
 800938a:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800938c:	6818      	ldr	r0, [r3, #0]
 800938e:	68a1      	ldr	r1, [r4, #8]
 8009390:	f005 0501 	and.w	r5, r5, #1
 8009394:	f7ff fa3c 	bl	8008810 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009398:	4628      	mov	r0, r5
 800939a:	f7ff fdc1 	bl	8008f20 <PropertiesConfig::EnableJSON(bool)>
 800939e:	e7d1      	b.n	8009344 <HttpDaemon::HandlePost(bool)+0x6c>
 80093a0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80093a4:	b002      	add	sp, #8
 80093a6:	bd70      	pop	{r4, r5, r6, pc}
 80093a8:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80093aa:	6962      	ldr	r2, [r4, #20]
 80093ac:	429a      	cmp	r2, r3
 80093ae:	dbd2      	blt.n	8009356 <HttpDaemon::HandlePost(bool)+0x7e>
 80093b0:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d0cf      	beq.n	8009356 <HttpDaemon::HandlePost(bool)+0x7e>
 80093b6:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 80093ba:	2b00      	cmp	r3, #0
 80093bc:	d0df      	beq.n	800937e <HttpDaemon::HandlePost(bool)+0xa6>
 80093be:	2201      	movs	r2, #1
 80093c0:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 80093c2:	68a0      	ldr	r0, [r4, #8]
 80093c4:	f005 fac4 	bl	800e950 <properties::convert_json_file(char*, unsigned short, bool)>
 80093c8:	2800      	cmp	r0, #0
 80093ca:	dde9      	ble.n	80093a0 <HttpDaemon::HandlePost(bool)+0xc8>
 80093cc:	4918      	ldr	r1, [pc, #96]	; (8009430 <HttpDaemon::HandlePost(bool)+0x158>)
 80093ce:	68a0      	ldr	r0, [r4, #8]
 80093d0:	f10d 0207 	add.w	r2, sp, #7
 80093d4:	f005 fcbe 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80093d8:	2800      	cmp	r0, #0
 80093da:	d19b      	bne.n	8009314 <HttpDaemon::HandlePost(bool)+0x3c>
 80093dc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d0af      	beq.n	8009344 <HttpDaemon::HandlePost(bool)+0x6c>
 80093e4:	4b11      	ldr	r3, [pc, #68]	; (800942c <HttpDaemon::HandlePost(bool)+0x154>)
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	7b9b      	ldrb	r3, [r3, #14]
 80093ea:	2b00      	cmp	r3, #0
 80093ec:	d0d8      	beq.n	80093a0 <HttpDaemon::HandlePost(bool)+0xc8>
 80093ee:	4b11      	ldr	r3, [pc, #68]	; (8009434 <HttpDaemon::HandlePost(bool)+0x15c>)
 80093f0:	6818      	ldr	r0, [r3, #0]
 80093f2:	f006 f8e9 	bl	800f5c8 <Hardware::Reboot()>
 80093f6:	68c3      	ldr	r3, [r0, #12]
 80093f8:	6083      	str	r3, [r0, #8]
 80093fa:	6943      	ldr	r3, [r0, #20]
 80093fc:	8483      	strh	r3, [r0, #36]	; 0x24
 80093fe:	e7da      	b.n	80093b6 <HttpDaemon::HandlePost(bool)+0xde>
 8009400:	08012456 	stmdaeq	r1, {r1, r2, r4, r6, sl, sp}
 8009404:	080123f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, sp}
 8009408:	08012444 	stmdaeq	r1, {r2, r6, sl, sp}
 800940c:	2000a008 	andcs	sl, r0, r8
 8009410:	2000a114 	andcs	sl, r0, r4, lsl r1
 8009414:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}
 8009418:	08012473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, sp}
 800941c:	20000128 	andcs	r0, r0, r8, lsr #2
 8009420:	0801246a 	stmdaeq	r1, {r1, r3, r5, r6, sl, sp}
 8009424:	2000a0f4 	strdcs	sl, [r0], -r4
 8009428:	2000a004 	andcs	sl, r0, r4
 800942c:	20000124 	andcs	r0, r0, r4, lsr #2
 8009430:	08012463 	stmdaeq	r1, {r0, r1, r5, r6, sl, sp}
 8009434:	2000a0f8 	strdcs	sl, [r0], -r8

08009438 <HttpDaemon::Run()>:
 8009438:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800943a:	4e46      	ldr	r6, [pc, #280]	; (8009554 <HttpDaemon::Run()+0x11c>)
 800943c:	4604      	mov	r4, r0
 800943e:	6901      	ldr	r1, [r0, #16]
 8009440:	f100 020c 	add.w	r2, r0, #12
 8009444:	6830      	ldr	r0, [r6, #0]
 8009446:	f004 f908 	bl	800d65a <Network::TcpRead(int, unsigned char const**)>
 800944a:	6160      	str	r0, [r4, #20]
 800944c:	2800      	cmp	r0, #0
 800944e:	d05b      	beq.n	8009508 <HttpDaemon::Run()+0xd0>
 8009450:	69a3      	ldr	r3, [r4, #24]
 8009452:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8009456:	d159      	bne.n	800950c <HttpDaemon::Run()+0xd4>
 8009458:	4620      	mov	r0, r4
 800945a:	f7ff fe1d 	bl	8009098 <HttpDaemon::ParseRequest()>
 800945e:	28c8      	cmp	r0, #200	; 0xc8
 8009460:	61a0      	str	r0, [r4, #24]
 8009462:	d106      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 8009464:	69e3      	ldr	r3, [r4, #28]
 8009466:	2b00      	cmp	r3, #0
 8009468:	d142      	bne.n	80094f0 <HttpDaemon::Run()+0xb8>
 800946a:	4620      	mov	r0, r4
 800946c:	f7ff fe8e 	bl	800918c <HttpDaemon::HandleGet()>
 8009470:	61a0      	str	r0, [r4, #24]
 8009472:	69a3      	ldr	r3, [r4, #24]
 8009474:	2bc8      	cmp	r3, #200	; 0xc8
 8009476:	d06b      	beq.n	8009550 <HttpDaemon::Run()+0x118>
 8009478:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800947c:	d05e      	beq.n	800953c <HttpDaemon::Run()+0x104>
 800947e:	dc4e      	bgt.n	800951e <HttpDaemon::Run()+0xe6>
 8009480:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 8009484:	d05c      	beq.n	8009540 <HttpDaemon::Run()+0x108>
 8009486:	f240 129d 	movw	r2, #413	; 0x19d
 800948a:	4293      	cmp	r3, r2
 800948c:	d05a      	beq.n	8009544 <HttpDaemon::Run()+0x10c>
 800948e:	4d32      	ldr	r5, [pc, #200]	; (8009558 <HttpDaemon::Run()+0x120>)
 8009490:	4a32      	ldr	r2, [pc, #200]	; (800955c <HttpDaemon::Run()+0x124>)
 8009492:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8009496:	bf18      	it	ne
 8009498:	4615      	movne	r5, r2
 800949a:	4a31      	ldr	r2, [pc, #196]	; (8009560 <HttpDaemon::Run()+0x128>)
 800949c:	f240 519f 	movw	r1, #1439	; 0x59f
 80094a0:	6022      	str	r2, [r4, #0]
 80094a2:	e9cd 5500 	strd	r5, r5, [sp]
 80094a6:	4a2f      	ldr	r2, [pc, #188]	; (8009564 <HttpDaemon::Run()+0x12c>)
 80094a8:	482f      	ldr	r0, [pc, #188]	; (8009568 <HttpDaemon::Run()+0x130>)
 80094aa:	f006 fbe5 	bl	800fc78 <snprintf>
 80094ae:	8460      	strh	r0, [r4, #34]	; 0x22
 80094b0:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 80094b2:	f240 519f 	movw	r1, #1439	; 0x59f
 80094b6:	9303      	str	r3, [sp, #12]
 80094b8:	6823      	ldr	r3, [r4, #0]
 80094ba:	4a2c      	ldr	r2, [pc, #176]	; (800956c <HttpDaemon::Run()+0x134>)
 80094bc:	9302      	str	r3, [sp, #8]
 80094be:	4b2c      	ldr	r3, [pc, #176]	; (8009570 <HttpDaemon::Run()+0x138>)
 80094c0:	68e0      	ldr	r0, [r4, #12]
 80094c2:	e9cd 5300 	strd	r5, r3, [sp]
 80094c6:	69a3      	ldr	r3, [r4, #24]
 80094c8:	f006 fbd6 	bl	800fc78 <snprintf>
 80094cc:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80094d0:	b283      	uxth	r3, r0
 80094d2:	6830      	ldr	r0, [r6, #0]
 80094d4:	f004 f8c5 	bl	800d662 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 80094d8:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 80094da:	4a23      	ldr	r2, [pc, #140]	; (8009568 <HttpDaemon::Run()+0x130>)
 80094dc:	6921      	ldr	r1, [r4, #16]
 80094de:	6830      	ldr	r0, [r6, #0]
 80094e0:	f004 f8bf 	bl	800d662 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 80094e4:	f44f 7202 	mov.w	r2, #520	; 0x208
 80094e8:	2302      	movs	r3, #2
 80094ea:	e9c4 2306 	strd	r2, r3, [r4, #24]
 80094ee:	e00b      	b.n	8009508 <HttpDaemon::Run()+0xd0>
 80094f0:	2b01      	cmp	r3, #1
 80094f2:	d1be      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 80094f4:	2100      	movs	r1, #0
 80094f6:	4620      	mov	r0, r4
 80094f8:	f7ff feee 	bl	80092d8 <HttpDaemon::HandlePost(bool)>
 80094fc:	28c8      	cmp	r0, #200	; 0xc8
 80094fe:	61a0      	str	r0, [r4, #24]
 8009500:	d1b7      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 8009502:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009504:	2b00      	cmp	r3, #0
 8009506:	d1b4      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 8009508:	b004      	add	sp, #16
 800950a:	bd70      	pop	{r4, r5, r6, pc}
 800950c:	2bc8      	cmp	r3, #200	; 0xc8
 800950e:	d1b0      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 8009510:	69e1      	ldr	r1, [r4, #28]
 8009512:	2901      	cmp	r1, #1
 8009514:	d1ad      	bne.n	8009472 <HttpDaemon::Run()+0x3a>
 8009516:	4620      	mov	r0, r4
 8009518:	f7ff fede 	bl	80092d8 <HttpDaemon::HandlePost(bool)>
 800951c:	e7a8      	b.n	8009470 <HttpDaemon::Run()+0x38>
 800951e:	f240 12f5 	movw	r2, #501	; 0x1f5
 8009522:	4293      	cmp	r3, r2
 8009524:	d010      	beq.n	8009548 <HttpDaemon::Run()+0x110>
 8009526:	f240 12f9 	movw	r2, #505	; 0x1f9
 800952a:	4293      	cmp	r3, r2
 800952c:	d00e      	beq.n	800954c <HttpDaemon::Run()+0x114>
 800952e:	4d11      	ldr	r5, [pc, #68]	; (8009574 <HttpDaemon::Run()+0x13c>)
 8009530:	4a0a      	ldr	r2, [pc, #40]	; (800955c <HttpDaemon::Run()+0x124>)
 8009532:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8009536:	bf18      	it	ne
 8009538:	4615      	movne	r5, r2
 800953a:	e7ae      	b.n	800949a <HttpDaemon::Run()+0x62>
 800953c:	4d0e      	ldr	r5, [pc, #56]	; (8009578 <HttpDaemon::Run()+0x140>)
 800953e:	e7ac      	b.n	800949a <HttpDaemon::Run()+0x62>
 8009540:	4d0e      	ldr	r5, [pc, #56]	; (800957c <HttpDaemon::Run()+0x144>)
 8009542:	e7aa      	b.n	800949a <HttpDaemon::Run()+0x62>
 8009544:	4d0e      	ldr	r5, [pc, #56]	; (8009580 <HttpDaemon::Run()+0x148>)
 8009546:	e7a8      	b.n	800949a <HttpDaemon::Run()+0x62>
 8009548:	4d0e      	ldr	r5, [pc, #56]	; (8009584 <HttpDaemon::Run()+0x14c>)
 800954a:	e7a6      	b.n	800949a <HttpDaemon::Run()+0x62>
 800954c:	4d0e      	ldr	r5, [pc, #56]	; (8009588 <HttpDaemon::Run()+0x150>)
 800954e:	e7a4      	b.n	800949a <HttpDaemon::Run()+0x62>
 8009550:	4d0e      	ldr	r5, [pc, #56]	; (800958c <HttpDaemon::Run()+0x154>)
 8009552:	e7ad      	b.n	80094b0 <HttpDaemon::Run()+0x78>
 8009554:	20009a30 	andcs	r9, r0, r0, lsr sl
 8009558:	080124cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, sp}
 800955c:	08012556 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, sp}
 8009560:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}
 8009564:	08012567 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sl, sp}
 8009568:	20000128 	andcs	r0, r0, r8, lsr #2
 800956c:	080125c2 	stmdaeq	r1, {r1, r6, r7, r8, sl, sp}
 8009570:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 8009574:	08012513 	stmdaeq	r1, {r0, r1, r4, r8, sl, sp}
 8009578:	080124fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, sp}
 800957c:	080124db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, sp}
 8009580:	080124e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, sp}
 8009584:	08012529 	stmdaeq	r1, {r0, r3, r5, r8, sl, sp}
 8009588:	08012540 	stmdaeq	r1, {r6, r8, sl, sp}
 800958c:	08012564 	stmdaeq	r1, {r2, r5, r6, r8, sl, sp}

08009590 <remoteconfig::json_get_list(char*, unsigned short)>:
 8009590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009594:	4b14      	ldr	r3, [pc, #80]	; (80095e8 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 8009596:	f8df 8054 	ldr.w	r8, [pc, #84]	; 80095ec <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	b088      	sub	sp, #32
 800959e:	4605      	mov	r5, r0
 80095a0:	f8d8 0000 	ldr.w	r0, [r8]
 80095a4:	695c      	ldr	r4, [r3, #20]
 80095a6:	460e      	mov	r6, r1
 80095a8:	f7ff f814 	bl	80085d4 <RemoteConfig::GetStringNode() const>
 80095ac:	4607      	mov	r7, r0
 80095ae:	f8d8 0000 	ldr.w	r0, [r8]
 80095b2:	f7ff f81b 	bl	80085ec <RemoteConfig::GetStringOutput() const>
 80095b6:	4b0e      	ldr	r3, [pc, #56]	; (80095f0 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 80095b8:	4631      	mov	r1, r6
 80095ba:	7a1a      	ldrb	r2, [r3, #8]
 80095bc:	3309      	adds	r3, #9
 80095be:	9303      	str	r3, [sp, #12]
 80095c0:	0e23      	lsrs	r3, r4, #24
 80095c2:	9302      	str	r3, [sp, #8]
 80095c4:	f3c4 4307 	ubfx	r3, r4, #16, #8
 80095c8:	9301      	str	r3, [sp, #4]
 80095ca:	f3c4 2307 	ubfx	r3, r4, #8, #8
 80095ce:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80095d2:	9300      	str	r3, [sp, #0]
 80095d4:	4628      	mov	r0, r5
 80095d6:	4a07      	ldr	r2, [pc, #28]	; (80095f4 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 80095d8:	9704      	str	r7, [sp, #16]
 80095da:	b2e3      	uxtb	r3, r4
 80095dc:	f006 fb4c 	bl	800fc78 <snprintf>
 80095e0:	b280      	uxth	r0, r0
 80095e2:	b008      	add	sp, #32
 80095e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095e8:	20009a30 	andcs	r9, r0, r0, lsr sl
 80095ec:	20000124 	andcs	r0, r0, r4, lsr #2
 80095f0:	20000100 	andcs	r0, r0, r0, lsl #2
 80095f4:	080126ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, sp}

080095f8 <remoteconfig::json_get_version(char*, unsigned short)>:
 80095f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80095fa:	2208      	movs	r2, #8
 80095fc:	4b09      	ldr	r3, [pc, #36]	; (8009624 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 80095fe:	9204      	str	r2, [sp, #16]
 8009600:	f1a3 020b 	sub.w	r2, r3, #11
 8009604:	9203      	str	r2, [sp, #12]
 8009606:	220b      	movs	r2, #11
 8009608:	9202      	str	r2, [sp, #8]
 800960a:	4a07      	ldr	r2, [pc, #28]	; (8009628 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800960c:	9305      	str	r3, [sp, #20]
 800960e:	3b0e      	subs	r3, #14
 8009610:	9201      	str	r2, [sp, #4]
 8009612:	9300      	str	r3, [sp, #0]
 8009614:	4a05      	ldr	r2, [pc, #20]	; (800962c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 8009616:	2303      	movs	r3, #3
 8009618:	f006 fb2e 	bl	800fc78 <snprintf>
 800961c:	b280      	uxth	r0, r0
 800961e:	b007      	add	sp, #28
 8009620:	f85d fb04 	ldr.w	pc, [sp], #4
 8009624:	2000a0a6 	andcs	sl, r0, r6, lsr #1
 8009628:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 800962c:	0801275e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, sl, sp}

08009630 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 8009630:	b508      	push	{r3, lr}
 8009632:	4b05      	ldr	r3, [pc, #20]	; (8009648 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 8009634:	681a      	ldr	r2, [r3, #0]
 8009636:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800963a:	fbb2 f3f3 	udiv	r3, r2, r3
 800963e:	4a03      	ldr	r2, [pc, #12]	; (800964c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 8009640:	f006 fb1a 	bl	800fc78 <snprintf>
 8009644:	b280      	uxth	r0, r0
 8009646:	bd08      	pop	{r3, pc}
 8009648:	2000a114 	andcs	sl, r0, r4, lsl r1
 800964c:	080127a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, sp}

08009650 <remoteconfig::json_get_display(char*, unsigned short)>:
 8009650:	b508      	push	{r3, lr}
 8009652:	4b05      	ldr	r3, [pc, #20]	; (8009668 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 8009654:	4a05      	ldr	r2, [pc, #20]	; (800966c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 8009656:	681b      	ldr	r3, [r3, #0]
 8009658:	7c1b      	ldrb	r3, [r3, #16]
 800965a:	f083 0301 	eor.w	r3, r3, #1
 800965e:	f006 fb0b 	bl	800fc78 <snprintf>
 8009662:	b280      	uxth	r0, r0
 8009664:	bd08      	pop	{r3, pc}
 8009666:	bf00      	nop
 8009668:	2000a008 	andcs	sl, r0, r8
 800966c:	080127b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, sp}

08009670 <remoteconfig::json_get_directory(char*, unsigned short)>:
 8009670:	b508      	push	{r3, lr}
 8009672:	4a02      	ldr	r2, [pc, #8]	; (800967c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 8009674:	f006 fb00 	bl	800fc78 <snprintf>
 8009678:	b280      	uxth	r0, r0
 800967a:	bd08      	pop	{r3, pc}
 800967c:	080127c2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, sp}

08009680 <get_file_content(char const*, char*)>:
 8009680:	2300      	movs	r3, #0
 8009682:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009684:	4a10      	ldr	r2, [pc, #64]	; (80096c8 <get_file_content(char const*, char*)+0x48>)
 8009686:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800968a:	1e46      	subs	r6, r0, #1
 800968c:	3c01      	subs	r4, #1
 800968e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8009692:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8009696:	42bd      	cmp	r5, r7
 8009698:	d005      	beq.n	80096a6 <get_file_content(char const*, char*)+0x26>
 800969a:	3301      	adds	r3, #1
 800969c:	2b03      	cmp	r3, #3
 800969e:	d1f2      	bne.n	8009686 <get_file_content(char const*, char*)+0x6>
 80096a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80096a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096a6:	2d00      	cmp	r5, #0
 80096a8:	d1f1      	bne.n	800968e <get_file_content(char const*, char*)+0xe>
 80096aa:	4608      	mov	r0, r1
 80096ac:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80096b0:	6853      	ldr	r3, [r2, #4]
 80096b2:	3b01      	subs	r3, #1
 80096b4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80096b8:	f800 2b01 	strb.w	r2, [r0], #1
 80096bc:	2a00      	cmp	r2, #0
 80096be:	d1f9      	bne.n	80096b4 <get_file_content(char const*, char*)+0x34>
 80096c0:	1a40      	subs	r0, r0, r1
 80096c2:	3801      	subs	r0, #1
 80096c4:	e7ee      	b.n	80096a4 <get_file_content(char const*, char*)+0x24>
 80096c6:	bf00      	nop
 80096c8:	08012b04 	stmdaeq	r1, {r2, r8, r9, fp, sp}

080096cc <e131::universe_to_multicast_ip(unsigned short)>:
 80096cc:	b513      	push	{r0, r1, r4, lr}
 80096ce:	4604      	mov	r4, r0
 80096d0:	a901      	add	r1, sp, #4
 80096d2:	4806      	ldr	r0, [pc, #24]	; (80096ec <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 80096d4:	f005 ffbc 	bl	800f650 <inet_aton>
 80096d8:	9801      	ldr	r0, [sp, #4]
 80096da:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 80096de:	0224      	lsls	r4, r4, #8
 80096e0:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80096e4:	4320      	orrs	r0, r4
 80096e6:	b002      	add	sp, #8
 80096e8:	bd10      	pop	{r4, pc}
 80096ea:	bf00      	nop
 80096ec:	08013046 	stmdaeq	r1, {r1, r2, r6, ip, sp}

080096f0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 80096f0:	f240 6304 	movw	r3, #1540	; 0x604
 80096f4:	fb03 0001 	mla	r0, r3, r1, r0
 80096f8:	2300      	movs	r3, #0
 80096fa:	b510      	push	{r4, lr}
 80096fc:	4293      	cmp	r3, r2
 80096fe:	d100      	bne.n	8009702 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 8009700:	bd10      	pop	{r4, pc}
 8009702:	f810 4b01 	ldrb.w	r4, [r0], #1
 8009706:	3301      	adds	r3, #1
 8009708:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800970c:	42a1      	cmp	r1, r4
 800970e:	bf38      	it	cc
 8009710:	4621      	movcc	r1, r4
 8009712:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 8009716:	e7f1      	b.n	80096fc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

08009718 <memset.constprop.0.isra.0>:
 8009718:	2300      	movs	r3, #0
 800971a:	4401      	add	r1, r0
 800971c:	4288      	cmp	r0, r1
 800971e:	d100      	bne.n	8009722 <memset.constprop.0.isra.0+0xa>
 8009720:	4770      	bx	lr
 8009722:	f800 3b01 	strb.w	r3, [r0], #1
 8009726:	e7f9      	b.n	800971c <memset.constprop.0.isra.0+0x4>

08009728 <memcpy.isra.0>:
 8009728:	3801      	subs	r0, #1
 800972a:	440a      	add	r2, r1
 800972c:	4291      	cmp	r1, r2
 800972e:	d100      	bne.n	8009732 <memcpy.isra.0+0xa>
 8009730:	4770      	bx	lr
 8009732:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009736:	f800 3f01 	strb.w	r3, [r0, #1]!
 800973a:	e7f7      	b.n	800972c <memcpy.isra.0+0x4>

0800973c <lightset::Data::Get()>:
 800973c:	4b03      	ldr	r3, [pc, #12]	; (800974c <lightset::Data::Get()+0x10>)
 800973e:	4804      	ldr	r0, [pc, #16]	; (8009750 <lightset::Data::Get()+0x14>)
 8009740:	681a      	ldr	r2, [r3, #0]
 8009742:	07d2      	lsls	r2, r2, #31
 8009744:	bf5c      	itt	pl
 8009746:	2201      	movpl	r2, #1
 8009748:	601a      	strpl	r2, [r3, #0]
 800974a:	4770      	bx	lr
 800974c:	200006c8 	andcs	r0, r0, r8, asr #13
 8009750:	200006cc 	andcs	r0, r0, ip, asr #13

08009754 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8009754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009758:	4615      	mov	r5, r2
 800975a:	460f      	mov	r7, r1
 800975c:	4604      	mov	r4, r0
 800975e:	f7ff ffed 	bl	800973c <lightset::Data::Get()>
 8009762:	f240 6304 	movw	r3, #1540	; 0x604
 8009766:	4606      	mov	r6, r0
 8009768:	435c      	muls	r4, r3
 800976a:	eb00 0804 	add.w	r8, r0, r4
 800976e:	462a      	mov	r2, r5
 8009770:	4639      	mov	r1, r7
 8009772:	4640      	mov	r0, r8
 8009774:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009778:	f7ff ffd6 	bl	8009728 <memcpy.isra.0>
 800977c:	462a      	mov	r2, r5
 800977e:	4639      	mov	r1, r7
 8009780:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8009784:	1930      	adds	r0, r6, r4
 8009786:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800978a:	f7ff bfcd 	b.w	8009728 <memcpy.isra.0>

0800978e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800978e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009792:	4680      	mov	r8, r0
 8009794:	f240 6404 	movw	r4, #1540	; 0x604
 8009798:	4615      	mov	r5, r2
 800979a:	460f      	mov	r7, r1
 800979c:	4699      	mov	r9, r3
 800979e:	f7ff ffcd 	bl	800973c <lightset::Data::Get()>
 80097a2:	fb04 f408 	mul.w	r4, r4, r8
 80097a6:	eb00 0a04 	add.w	sl, r0, r4
 80097aa:	4606      	mov	r6, r0
 80097ac:	462a      	mov	r2, r5
 80097ae:	4639      	mov	r1, r7
 80097b0:	4650      	mov	r0, sl
 80097b2:	f7ff ffb9 	bl	8009728 <memcpy.isra.0>
 80097b6:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 80097ba:	f1b9 0f00 	cmp.w	r9, #0
 80097be:	d106      	bne.n	80097ce <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 80097c0:	462a      	mov	r2, r5
 80097c2:	4641      	mov	r1, r8
 80097c4:	4630      	mov	r0, r6
 80097c6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80097ca:	f7ff bf91 	b.w	80096f0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 80097ce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80097d2:	462a      	mov	r2, r5
 80097d4:	4639      	mov	r1, r7
 80097d6:	1930      	adds	r0, r6, r4
 80097d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80097dc:	f7ff bfa4 	b.w	8009728 <memcpy.isra.0>

080097e0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80097e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097e4:	4616      	mov	r6, r2
 80097e6:	4699      	mov	r9, r3
 80097e8:	4680      	mov	r8, r0
 80097ea:	460f      	mov	r7, r1
 80097ec:	f7ff ffa6 	bl	800973c <lightset::Data::Get()>
 80097f0:	f240 6404 	movw	r4, #1540	; 0x604
 80097f4:	4605      	mov	r5, r0
 80097f6:	fb04 f408 	mul.w	r4, r4, r8
 80097fa:	f504 7000 	add.w	r0, r4, #512	; 0x200
 80097fe:	4632      	mov	r2, r6
 8009800:	4639      	mov	r1, r7
 8009802:	4428      	add	r0, r5
 8009804:	f7ff ff90 	bl	8009728 <memcpy.isra.0>
 8009808:	192b      	adds	r3, r5, r4
 800980a:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800980e:	f1b9 0f00 	cmp.w	r9, #0
 8009812:	d106      	bne.n	8009822 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009814:	4632      	mov	r2, r6
 8009816:	4641      	mov	r1, r8
 8009818:	4628      	mov	r0, r5
 800981a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800981e:	f7ff bf67 	b.w	80096f0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009822:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009826:	4632      	mov	r2, r6
 8009828:	4639      	mov	r1, r7
 800982a:	1928      	adds	r0, r5, r4
 800982c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009830:	f7ff bf7a 	b.w	8009728 <memcpy.isra.0>

08009834 <E131Bridge::E131Bridge()>:
 8009834:	2300      	movs	r3, #0
 8009836:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800983a:	b530      	push	{r4, r5, lr}
 800983c:	e9c0 2300 	strd	r2, r3, [r0]
 8009840:	2201      	movs	r2, #1
 8009842:	4604      	mov	r4, r0
 8009844:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009848:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800984c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8009850:	6743      	str	r3, [r0, #116]	; 0x74
 8009852:	4b22      	ldr	r3, [pc, #136]	; (80098dc <E131Bridge::E131Bridge()+0xa8>)
 8009854:	b093      	sub	sp, #76	; 0x4c
 8009856:	6018      	str	r0, [r3, #0]
 8009858:	7202      	strb	r2, [r0, #8]
 800985a:	2144      	movs	r1, #68	; 0x44
 800985c:	f200 5014 	addw	r0, r0, #1300	; 0x514
 8009860:	f7ff ff5a 	bl	8009718 <memset.constprop.0.isra.0>
 8009864:	210c      	movs	r1, #12
 8009866:	f504 60ab 	add.w	r0, r4, #1368	; 0x558
 800986a:	f7ff ff55 	bl	8009718 <memset.constprop.0.isra.0>
 800986e:	2364      	movs	r3, #100	; 0x64
 8009870:	4d1b      	ldr	r5, [pc, #108]	; (80098e0 <E131Bridge::E131Bridge()+0xac>)
 8009872:	2120      	movs	r1, #32
 8009874:	f884 3561 	strb.w	r3, [r4, #1377]	; 0x561
 8009878:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800987c:	f7ff ff4c 	bl	8009718 <memset.constprop.0.isra.0>
 8009880:	682b      	ldr	r3, [r5, #0]
 8009882:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 8009886:	4a17      	ldr	r2, [pc, #92]	; (80098e4 <E131Bridge::E131Bridge()+0xb0>)
 8009888:	2140      	movs	r1, #64	; 0x40
 800988a:	9200      	str	r2, [sp, #0]
 800988c:	3320      	adds	r3, #32
 800988e:	4a16      	ldr	r2, [pc, #88]	; (80098e8 <E131Bridge::E131Bridge()+0xb4>)
 8009890:	a802      	add	r0, sp, #8
 8009892:	f006 f9f1 	bl	800fc78 <snprintf>
 8009896:	233f      	movs	r3, #63	; 0x3f
 8009898:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800989c:	a902      	add	r1, sp, #8
 800989e:	f811 0b01 	ldrb.w	r0, [r1], #1
 80098a2:	b928      	cbnz	r0, 80098b0 <E131Bridge::E131Bridge()+0x7c>
 80098a4:	4413      	add	r3, r2
 80098a6:	429a      	cmp	r2, r3
 80098a8:	d006      	beq.n	80098b8 <E131Bridge::E131Bridge()+0x84>
 80098aa:	f802 0b01 	strb.w	r0, [r2], #1
 80098ae:	e7fa      	b.n	80098a6 <E131Bridge::E131Bridge()+0x72>
 80098b0:	3b01      	subs	r3, #1
 80098b2:	f802 0b01 	strb.w	r0, [r2], #1
 80098b6:	d1f2      	bne.n	800989e <E131Bridge::E131Bridge()+0x6a>
 80098b8:	2300      	movs	r3, #0
 80098ba:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 80098be:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 80098c2:	6828      	ldr	r0, [r5, #0]
 80098c4:	f003 fcdc 	bl	800d280 <Network::Begin(unsigned short)>
 80098c8:	4621      	mov	r1, r4
 80098ca:	4b08      	ldr	r3, [pc, #32]	; (80098ec <E131Bridge::E131Bridge()+0xb8>)
 80098cc:	f841 0b24 	str.w	r0, [r1], #36
 80098d0:	6818      	ldr	r0, [r3, #0]
 80098d2:	f005 fe5d 	bl	800f590 <Hardware::GetUuid(unsigned char*)>
 80098d6:	4620      	mov	r0, r4
 80098d8:	b013      	add	sp, #76	; 0x4c
 80098da:	bd30      	pop	{r4, r5, pc}
 80098dc:	20000cd0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80098e0:	20009a30 	andcs	r9, r0, r0, lsr sl
 80098e4:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 80098e8:	08013052 	stmdaeq	r1, {r1, r4, r6, ip, sp}
 80098ec:	2000a0f8 	strdcs	sl, [r0], -r8

080098f0 <E131Bridge::Start()>:
 80098f0:	6943      	ldr	r3, [r0, #20]
 80098f2:	b513      	push	{r0, r1, r4, lr}
 80098f4:	4604      	mov	r4, r0
 80098f6:	b31b      	cbz	r3, 8009940 <E131Bridge::Start()+0x50>
 80098f8:	6983      	ldr	r3, [r0, #24]
 80098fa:	b9cb      	cbnz	r3, 8009930 <E131Bridge::Start()+0x40>
 80098fc:	a901      	add	r1, sp, #4
 80098fe:	4814      	ldr	r0, [pc, #80]	; (8009950 <E131Bridge::Start()+0x60>)
 8009900:	f005 fea6 	bl	800f650 <inet_aton>
 8009904:	9b01      	ldr	r3, [sp, #4]
 8009906:	f240 207e 	movw	r0, #638	; 0x27e
 800990a:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800990e:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8009912:	6223      	str	r3, [r4, #32]
 8009914:	f005 fe98 	bl	800f648 <operator new(unsigned int)>
 8009918:	61a0      	str	r0, [r4, #24]
 800991a:	4620      	mov	r0, r4
 800991c:	f000 fca2 	bl	800a264 <E131Bridge::FillDataPacket()>
 8009920:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009924:	f005 fe90 	bl	800f648 <operator new(unsigned int)>
 8009928:	61e0      	str	r0, [r4, #28]
 800992a:	4620      	mov	r0, r4
 800992c:	f000 fbfa 	bl	800a124 <E131Bridge::FillDiscoveryPacket()>
 8009930:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 8009934:	b123      	cbz	r3, 8009940 <E131Bridge::Start()+0x50>
 8009936:	6960      	ldr	r0, [r4, #20]
 8009938:	2100      	movs	r1, #0
 800993a:	6803      	ldr	r3, [r0, #0]
 800993c:	689b      	ldr	r3, [r3, #8]
 800993e:	4798      	blx	r3
 8009940:	2102      	movs	r1, #2
 8009942:	4b04      	ldr	r3, [pc, #16]	; (8009954 <E131Bridge::Start()+0x64>)
 8009944:	6818      	ldr	r0, [r3, #0]
 8009946:	b002      	add	sp, #8
 8009948:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800994c:	f005 bd9c 	b.w	800f488 <LedBlink::SetMode(ledblink::Mode)>
 8009950:	08013046 	stmdaeq	r1, {r1, r2, r6, ip, sp}
 8009954:	2000a0f4 	strdcs	sl, [r0], -r4

08009958 <E131Bridge::Stop()>:
 8009958:	2301      	movs	r3, #1
 800995a:	b510      	push	{r4, lr}
 800995c:	4604      	mov	r4, r0
 800995e:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 8009962:	6840      	ldr	r0, [r0, #4]
 8009964:	b118      	cbz	r0, 800996e <E131Bridge::Stop()+0x16>
 8009966:	6803      	ldr	r3, [r0, #0]
 8009968:	2100      	movs	r1, #0
 800996a:	68db      	ldr	r3, [r3, #12]
 800996c:	4798      	blx	r3
 800996e:	f7ff fee5 	bl	800973c <lightset::Data::Get()>
 8009972:	2100      	movs	r1, #0
 8009974:	f8c0 1600 	str.w	r1, [r0, #1536]	; 0x600
 8009978:	6960      	ldr	r0, [r4, #20]
 800997a:	f884 1554 	strb.w	r1, [r4, #1364]	; 0x554
 800997e:	b930      	cbnz	r0, 800998e <E131Bridge::Stop()+0x36>
 8009980:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009984:	4b06      	ldr	r3, [pc, #24]	; (80099a0 <E131Bridge::Stop()+0x48>)
 8009986:	2100      	movs	r1, #0
 8009988:	6818      	ldr	r0, [r3, #0]
 800998a:	f005 bd7d 	b.w	800f488 <LedBlink::SetMode(ledblink::Mode)>
 800998e:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 8009992:	2b00      	cmp	r3, #0
 8009994:	d0f4      	beq.n	8009980 <E131Bridge::Stop()+0x28>
 8009996:	6803      	ldr	r3, [r0, #0]
 8009998:	68db      	ldr	r3, [r3, #12]
 800999a:	4798      	blx	r3
 800999c:	e7f0      	b.n	8009980 <E131Bridge::Stop()+0x28>
 800999e:	bf00      	nop
 80099a0:	2000a0f4 	strdcs	sl, [r0], -r4

080099a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 80099a4:	b538      	push	{r3, r4, r5, lr}
 80099a6:	4603      	mov	r3, r0
 80099a8:	4610      	mov	r0, r2
 80099aa:	b119      	cbz	r1, 80099b4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x10>
 80099ac:	f8b3 2514 	ldrh.w	r2, [r3, #1300]	; 0x514
 80099b0:	4282      	cmp	r2, r0
 80099b2:	d00b      	beq.n	80099cc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x28>
 80099b4:	681d      	ldr	r5, [r3, #0]
 80099b6:	4b06      	ldr	r3, [pc, #24]	; (80099d0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x2c>)
 80099b8:	681c      	ldr	r4, [r3, #0]
 80099ba:	f7ff fe87 	bl	80096cc <e131::universe_to_multicast_ip(unsigned short)>
 80099be:	4629      	mov	r1, r5
 80099c0:	4602      	mov	r2, r0
 80099c2:	4620      	mov	r0, r4
 80099c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80099c8:	f003 bc6e 	b.w	800d2a8 <Network::LeaveGroup(int, unsigned int)>
 80099cc:	bd38      	pop	{r3, r4, r5, pc}
 80099ce:	bf00      	nop
 80099d0:	20009a30 	andcs	r9, r0, r0, lsr sl

080099d4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 80099d4:	b570      	push	{r4, r5, r6, lr}
 80099d6:	4604      	mov	r4, r0
 80099d8:	461d      	mov	r5, r3
 80099da:	b1c1      	cbz	r1, 8009a0e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 80099dc:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 80099e0:	f200 5606 	addw	r6, r0, #1286	; 0x506
 80099e4:	b12a      	cbz	r2, 80099f2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 80099e6:	42aa      	cmp	r2, r5
 80099e8:	d017      	beq.n	8009a1a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 80099ea:	2101      	movs	r1, #1
 80099ec:	4620      	mov	r0, r4
 80099ee:	f7ff ffd9 	bl	80099a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 80099f2:	4b0a      	ldr	r3, [pc, #40]	; (8009a1c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 80099f4:	8035      	strh	r5, [r6, #0]
 80099f6:	4628      	mov	r0, r5
 80099f8:	6826      	ldr	r6, [r4, #0]
 80099fa:	681c      	ldr	r4, [r3, #0]
 80099fc:	f7ff fe66 	bl	80096cc <e131::universe_to_multicast_ip(unsigned short)>
 8009a00:	4631      	mov	r1, r6
 8009a02:	4602      	mov	r2, r0
 8009a04:	4620      	mov	r0, r4
 8009a06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a0a:	f003 bc4a 	b.w	800d2a2 <Network::JoinGroup(int, unsigned int)>
 8009a0e:	b122      	cbz	r2, 8009a1a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009a10:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009a14:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009a18:	e7e4      	b.n	80099e4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009a1a:	bd70      	pop	{r4, r5, r6, pc}
 8009a1c:	20009a30 	andcs	r9, r0, r0, lsr sl

08009a20 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8009a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a24:	4604      	mov	r4, r0
 8009a26:	460d      	mov	r5, r1
 8009a28:	461e      	mov	r6, r3
 8009a2a:	b9ca      	cbnz	r2, 8009a60 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x40>
 8009a2c:	bbb1      	cbnz	r1, 8009a9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8009a2e:	f890 355a 	ldrb.w	r3, [r0, #1370]	; 0x55a
 8009a32:	b12b      	cbz	r3, 8009a40 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20>
 8009a34:	f8b0 3558 	ldrh.w	r3, [r0, #1368]	; 0x558
 8009a38:	42b3      	cmp	r3, r6
 8009a3a:	d109      	bne.n	8009a50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x30>
 8009a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a40:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8009a44:	3301      	adds	r3, #1
 8009a46:	f880 350a 	strb.w	r3, [r0, #1290]	; 0x50a
 8009a4a:	2301      	movs	r3, #1
 8009a4c:	f880 355a 	strb.w	r3, [r0, #1370]	; 0x55a
 8009a50:	4630      	mov	r0, r6
 8009a52:	f8a4 6558 	strh.w	r6, [r4, #1368]	; 0x558
 8009a56:	f7ff fe39 	bl	80096cc <e131::universe_to_multicast_ip(unsigned short)>
 8009a5a:	f8c4 055c 	str.w	r0, [r4, #1372]	; 0x55c
 8009a5e:	e7ed      	b.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009a60:	2a02      	cmp	r2, #2
 8009a62:	d11b      	bne.n	8009a9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8009a64:	2900      	cmp	r1, #0
 8009a66:	d1e9      	bne.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009a68:	f890 3516 	ldrb.w	r3, [r0, #1302]	; 0x516
 8009a6c:	b14b      	cbz	r3, 8009a82 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x62>
 8009a6e:	f884 1516 	strb.w	r1, [r4, #1302]	; 0x516
 8009a72:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009a76:	4632      	mov	r2, r6
 8009a78:	3b01      	subs	r3, #1
 8009a7a:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009a7e:	f7ff ff91 	bl	80099a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009a82:	f894 355a 	ldrb.w	r3, [r4, #1370]	; 0x55a
 8009a86:	2b00      	cmp	r3, #0
 8009a88:	d0d8      	beq.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009a8a:	2300      	movs	r3, #0
 8009a8c:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
 8009a90:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009a94:	3b01      	subs	r3, #1
 8009a96:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009a9a:	e7cf      	b.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009a9c:	2344      	movs	r3, #68	; 0x44
 8009a9e:	fb03 4305 	mla	r3, r3, r5, r4
 8009aa2:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 8009aa6:	b1d2      	cbz	r2, 8009ade <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xbe>
 8009aa8:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 8009aac:	42b3      	cmp	r3, r6
 8009aae:	d0c5      	beq.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009ab0:	4632      	mov	r2, r6
 8009ab2:	4629      	mov	r1, r5
 8009ab4:	4620      	mov	r0, r4
 8009ab6:	f7ff ff75 	bl	80099a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009aba:	4b0d      	ldr	r3, [pc, #52]	; (8009af0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd0>)
 8009abc:	4630      	mov	r0, r6
 8009abe:	681f      	ldr	r7, [r3, #0]
 8009ac0:	f8d4 8000 	ldr.w	r8, [r4]
 8009ac4:	f7ff fe02 	bl	80096cc <e131::universe_to_multicast_ip(unsigned short)>
 8009ac8:	4641      	mov	r1, r8
 8009aca:	4602      	mov	r2, r0
 8009acc:	4638      	mov	r0, r7
 8009ace:	f003 fbe8 	bl	800d2a2 <Network::JoinGroup(int, unsigned int)>
 8009ad2:	2344      	movs	r3, #68	; 0x44
 8009ad4:	fb03 4505 	mla	r5, r3, r5, r4
 8009ad8:	f8a5 6514 	strh.w	r6, [r5, #1300]	; 0x514
 8009adc:	e7ae      	b.n	8009a3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8009ade:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009ae2:	3201      	adds	r2, #1
 8009ae4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009ae8:	2201      	movs	r2, #1
 8009aea:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 8009aee:	e7e4      	b.n	8009aba <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9a>
 8009af0:	20009a30 	andcs	r9, r0, r0, lsr sl

08009af4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009af4:	b510      	push	{r4, lr}
 8009af6:	4604      	mov	r4, r0
 8009af8:	4618      	mov	r0, r3
 8009afa:	b933      	cbnz	r3, 8009b0a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x16>
 8009afc:	b921      	cbnz	r1, 8009b08 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>
 8009afe:	f8b4 3558 	ldrh.w	r3, [r4, #1368]	; 0x558
 8009b02:	f894 055a 	ldrb.w	r0, [r4, #1370]	; 0x55a
 8009b06:	8013      	strh	r3, [r2, #0]
 8009b08:	bd10      	pop	{r4, pc}
 8009b0a:	2344      	movs	r3, #68	; 0x44
 8009b0c:	fb03 4401 	mla	r4, r3, r1, r4
 8009b10:	f8b4 3514 	ldrh.w	r3, [r4, #1300]	; 0x514
 8009b14:	f894 0516 	ldrb.w	r0, [r4, #1302]	; 0x516
 8009b18:	8013      	strh	r3, [r2, #0]
 8009b1a:	e7f5      	b.n	8009b08 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>

08009b1c <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009b1c:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009b20:	b923      	cbnz	r3, 8009b2c <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009b22:	2301      	movs	r3, #1
 8009b24:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009b28:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009b2c:	2344      	movs	r3, #68	; 0x44
 8009b2e:	fb03 0001 	mla	r0, r3, r1, r0
 8009b32:	2301      	movs	r3, #1
 8009b34:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 8009b38:	4770      	bx	lr

08009b3a <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009b3a:	4602      	mov	r2, r0
 8009b3c:	2044      	movs	r0, #68	; 0x44
 8009b3e:	4348      	muls	r0, r1
 8009b40:	b570      	push	{r4, r5, r6, lr}
 8009b42:	1815      	adds	r5, r2, r0
 8009b44:	460c      	mov	r4, r1
 8009b46:	68d3      	ldr	r3, [r2, #12]
 8009b48:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 8009b4c:	1a5b      	subs	r3, r3, r1
 8009b4e:	f242 7110 	movw	r1, #10000	; 0x2710
 8009b52:	428b      	cmp	r3, r1
 8009b54:	d90a      	bls.n	8009b6c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009b56:	2600      	movs	r6, #0
 8009b58:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 8009b5c:	2110      	movs	r1, #16
 8009b5e:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 8009b62:	4410      	add	r0, r2
 8009b64:	f7ff fdd8 	bl	8009718 <memset.constprop.0.isra.0>
 8009b68:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 8009b6c:	2344      	movs	r3, #68	; 0x44
 8009b6e:	435c      	muls	r4, r3
 8009b70:	1915      	adds	r5, r2, r4
 8009b72:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 8009b76:	68d3      	ldr	r3, [r2, #12]
 8009b78:	1a5b      	subs	r3, r3, r1
 8009b7a:	f242 7110 	movw	r1, #10000	; 0x2710
 8009b7e:	428b      	cmp	r3, r1
 8009b80:	d90a      	bls.n	8009b98 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8009b82:	2600      	movs	r6, #0
 8009b84:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 8009b88:	2110      	movs	r1, #16
 8009b8a:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 8009b8e:	1910      	adds	r0, r2, r4
 8009b90:	f7ff fdc2 	bl	8009718 <memset.constprop.0.isra.0>
 8009b94:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 8009b98:	f892 3555 	ldrb.w	r3, [r2, #1365]	; 0x555
 8009b9c:	b923      	cbnz	r3, 8009ba8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x6e>
 8009b9e:	2101      	movs	r1, #1
 8009ba0:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8009ba4:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8009ba8:	bd70      	pop	{r4, r5, r6, pc}

08009baa <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8009baa:	2244      	movs	r2, #68	; 0x44
 8009bac:	fb02 0101 	mla	r1, r2, r1, r0
 8009bb0:	68c3      	ldr	r3, [r0, #12]
 8009bb2:	b510      	push	{r4, lr}
 8009bb4:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 8009bb8:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 8009bbc:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 8009bc0:	1a9a      	subs	r2, r3, r2
 8009bc2:	b184      	cbz	r4, 8009be6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8009bc4:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 8009bc8:	1a5b      	subs	r3, r3, r1
 8009bca:	b128      	cbz	r0, 8009bd8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8009bcc:	f242 700f 	movw	r0, #9999	; 0x270f
 8009bd0:	4283      	cmp	r3, r0
 8009bd2:	d90d      	bls.n	8009bf0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8009bd4:	4282      	cmp	r2, r0
 8009bd6:	e002      	b.n	8009bde <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8009bd8:	f242 7010 	movw	r0, #10000	; 0x2710
 8009bdc:	4283      	cmp	r3, r0
 8009bde:	bf94      	ite	ls
 8009be0:	2000      	movls	r0, #0
 8009be2:	2001      	movhi	r0, #1
 8009be4:	bd10      	pop	{r4, pc}
 8009be6:	2800      	cmp	r0, #0
 8009be8:	d0fc      	beq.n	8009be4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8009bea:	f242 7010 	movw	r0, #10000	; 0x2710
 8009bee:	e7f1      	b.n	8009bd4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8009bf0:	2000      	movs	r0, #0
 8009bf2:	e7f7      	b.n	8009be4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08009bf4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8009bf4:	684a      	ldr	r2, [r1, #4]
 8009bf6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009bf8:	b510      	push	{r4, lr}
 8009bfa:	429a      	cmp	r2, r3
 8009bfc:	d10d      	bne.n	8009c1a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8009bfe:	f100 0391 	add.w	r3, r0, #145	; 0x91
 8009c02:	3107      	adds	r1, #7
 8009c04:	30a1      	adds	r0, #161	; 0xa1
 8009c06:	4283      	cmp	r3, r0
 8009c08:	d101      	bne.n	8009c0e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 8009c0a:	2001      	movs	r0, #1
 8009c0c:	bd10      	pop	{r4, pc}
 8009c0e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009c12:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009c16:	4294      	cmp	r4, r2
 8009c18:	d0f5      	beq.n	8009c06 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8009c1a:	2000      	movs	r0, #0
 8009c1c:	e7f6      	b.n	8009c0c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

08009c20 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8009c20:	b538      	push	{r3, r4, r5, lr}
 8009c22:	4604      	mov	r4, r0
 8009c24:	2001      	movs	r0, #1
 8009c26:	460d      	mov	r5, r1
 8009c28:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8009c2c:	f884 04f8 	strb.w	r0, [r4, #1272]	; 0x4f8
 8009c30:	2900      	cmp	r1, #0
 8009c32:	d052      	beq.n	8009cda <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009c34:	2a00      	cmp	r2, #0
 8009c36:	d037      	beq.n	8009ca8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x88>
 8009c38:	f8c4 04f4 	str.w	r0, [r4, #1268]	; 0x4f4
 8009c3c:	f884 050c 	strb.w	r0, [r4, #1292]	; 0x50c
 8009c40:	b1e3      	cbz	r3, 8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009c42:	2500      	movs	r5, #0
 8009c44:	2110      	movs	r1, #16
 8009c46:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009c4a:	f8c4 551c 	str.w	r5, [r4, #1308]	; 0x51c
 8009c4e:	f7ff fd63 	bl	8009718 <memset.constprop.0.isra.0>
 8009c52:	2110      	movs	r1, #16
 8009c54:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009c58:	f8c4 5538 	str.w	r5, [r4, #1336]	; 0x538
 8009c5c:	f7ff fd5c 	bl	8009718 <memset.constprop.0.isra.0>
 8009c60:	f7ff fd6c 	bl	800973c <lightset::Data::Get()>
 8009c64:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8009c68:	f8a4 5554 	strh.w	r5, [r4, #1364]	; 0x554
 8009c6c:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 8009c70:	f884 5556 	strb.w	r5, [r4, #1366]	; 0x556
 8009c74:	2901      	cmp	r1, #1
 8009c76:	d00d      	beq.n	8009c94 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 8009c78:	2902      	cmp	r1, #2
 8009c7a:	d010      	beq.n	8009c9e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x7e>
 8009c7c:	4b20      	ldr	r3, [pc, #128]	; (8009d00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xe0>)
 8009c7e:	2102      	movs	r1, #2
 8009c80:	6818      	ldr	r0, [r3, #0]
 8009c82:	f005 fc01 	bl	800f488 <LedBlink::SetMode(ledblink::Mode)>
 8009c86:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009c8a:	f023 0302 	bic.w	r3, r3, #2
 8009c8e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8009c92:	bd38      	pop	{r3, r4, r5, pc}
 8009c94:	6860      	ldr	r0, [r4, #4]
 8009c96:	6803      	ldr	r3, [r0, #0]
 8009c98:	695b      	ldr	r3, [r3, #20]
 8009c9a:	4798      	blx	r3
 8009c9c:	e7ee      	b.n	8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009c9e:	6860      	ldr	r0, [r4, #4]
 8009ca0:	6803      	ldr	r3, [r0, #0]
 8009ca2:	699b      	ldr	r3, [r3, #24]
 8009ca4:	4798      	blx	r3
 8009ca6:	e7e9      	b.n	8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d0e7      	beq.n	8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009cac:	f8d4 351c 	ldr.w	r3, [r4, #1308]	; 0x51c
 8009cb0:	b143      	cbz	r3, 8009cc4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009cb2:	2110      	movs	r1, #16
 8009cb4:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009cb8:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009cbc:	f7ff fd2c 	bl	8009718 <memset.constprop.0.isra.0>
 8009cc0:	f884 2555 	strb.w	r2, [r4, #1365]	; 0x555
 8009cc4:	f894 54f5 	ldrb.w	r5, [r4, #1269]	; 0x4f5
 8009cc8:	2d00      	cmp	r5, #0
 8009cca:	d1d7      	bne.n	8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009ccc:	f7ff fd36 	bl	800973c <lightset::Data::Get()>
 8009cd0:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8009cd4:	f884 5554 	strb.w	r5, [r4, #1364]	; 0x554
 8009cd8:	e7c8      	b.n	8009c6c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4c>
 8009cda:	2b00      	cmp	r3, #0
 8009cdc:	d0ce      	beq.n	8009c7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
 8009cde:	2a00      	cmp	r2, #0
 8009ce0:	d0f0      	beq.n	8009cc4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009ce2:	f8d4 3538 	ldr.w	r3, [r4, #1336]	; 0x538
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d0ec      	beq.n	8009cc4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009cea:	2110      	movs	r1, #16
 8009cec:	f8c4 5538 	str.w	r5, [r4, #1336]	; 0x538
 8009cf0:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009cf4:	f7ff fd10 	bl	8009718 <memset.constprop.0.isra.0>
 8009cf8:	f884 5555 	strb.w	r5, [r4, #1365]	; 0x555
 8009cfc:	e7e2      	b.n	8009cc4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa4>
 8009cfe:	bf00      	nop
 8009d00:	2000a0f4 	strdcs	sl, [r0], -r4

08009d04 <E131Bridge::HandleDmx()>:
 8009d04:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d08:	f8b0 50f7 	ldrh.w	r5, [r0, #247]	; 0xf7
 8009d0c:	f890 3516 	ldrb.w	r3, [r0, #1302]	; 0x516
 8009d10:	ba6d      	rev16	r5, r5
 8009d12:	b2ad      	uxth	r5, r5
 8009d14:	4604      	mov	r4, r0
 8009d16:	f100 08fa 	add.w	r8, r0, #250	; 0xfa
 8009d1a:	3d01      	subs	r5, #1
 8009d1c:	b343      	cbz	r3, 8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009d1e:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 8009d22:	f8b0 20ed 	ldrh.w	r2, [r0, #237]	; 0xed
 8009d26:	ba5b      	rev16	r3, r3
 8009d28:	b29b      	uxth	r3, r3
 8009d2a:	429a      	cmp	r2, r3
 8009d2c:	d120      	bne.n	8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009d2e:	f500 61a3 	add.w	r1, r0, #1304	; 0x518
 8009d32:	f8d0 a51c 	ldr.w	sl, [r0, #1308]	; 0x51c
 8009d36:	f8d0 9538 	ldr.w	r9, [r0, #1336]	; 0x538
 8009d3a:	f7ff ff5b 	bl	8009bf4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d3e:	f204 5134 	addw	r1, r4, #1332	; 0x534
 8009d42:	4607      	mov	r7, r0
 8009d44:	4620      	mov	r0, r4
 8009d46:	f7ff ff55 	bl	8009bf4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8009d4a:	4606      	mov	r6, r0
 8009d4c:	b197      	cbz	r7, 8009d74 <E131Bridge::HandleDmx()+0x70>
 8009d4e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009d52:	f894 2530 	ldrb.w	r2, [r4, #1328]	; 0x530
 8009d56:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009d5a:	3313      	adds	r3, #19
 8009d5c:	1a9b      	subs	r3, r3, r2
 8009d5e:	b2db      	uxtb	r3, r3
 8009d60:	2b13      	cmp	r3, #19
 8009d62:	d905      	bls.n	8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009d64:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8009d68:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009d6c:	2a00      	cmp	r2, #0
 8009d6e:	da0a      	bge.n	8009d86 <E131Bridge::HandleDmx()+0x82>
 8009d70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d74:	2800      	cmp	r0, #0
 8009d76:	d0f5      	beq.n	8009d64 <E131Bridge::HandleDmx()+0x60>
 8009d78:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009d7c:	f894 254c 	ldrb.w	r2, [r4, #1356]	; 0x54c
 8009d80:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009d84:	e7e9      	b.n	8009d5a <E131Bridge::HandleDmx()+0x56>
 8009d86:	065a      	lsls	r2, r3, #25
 8009d88:	d509      	bpl.n	8009d9e <E131Bridge::HandleDmx()+0x9a>
 8009d8a:	b90f      	cbnz	r7, 8009d90 <E131Bridge::HandleDmx()+0x8c>
 8009d8c:	2e00      	cmp	r6, #0
 8009d8e:	d0ef      	beq.n	8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009d90:	4632      	mov	r2, r6
 8009d92:	4639      	mov	r1, r7
 8009d94:	4620      	mov	r0, r4
 8009d96:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d9a:	f7ff bf41 	b.w	8009c20 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8009d9e:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8009da2:	b12b      	cbz	r3, 8009db0 <E131Bridge::HandleDmx()+0xac>
 8009da4:	f894 14f9 	ldrb.w	r1, [r4, #1273]	; 0x4f9
 8009da8:	b911      	cbnz	r1, 8009db0 <E131Bridge::HandleDmx()+0xac>
 8009daa:	4620      	mov	r0, r4
 8009dac:	f7ff fec5 	bl	8009b3a <E131Bridge::CheckMergeTimeouts(unsigned int)>
 8009db0:	f894 b0e8 	ldrb.w	fp, [r4, #232]	; 0xe8
 8009db4:	f894 350c 	ldrb.w	r3, [r4, #1292]	; 0x50c
 8009db8:	459b      	cmp	fp, r3
 8009dba:	d258      	bcs.n	8009e6e <E131Bridge::HandleDmx()+0x16a>
 8009dbc:	2100      	movs	r1, #0
 8009dbe:	4620      	mov	r0, r4
 8009dc0:	f7ff fef3 	bl	8009baa <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 8009dc4:	2800      	cmp	r0, #0
 8009dc6:	d0d3      	beq.n	8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009dc8:	f884 b50c 	strb.w	fp, [r4, #1292]	; 0x50c
 8009dcc:	f1ba 0f00 	cmp.w	sl, #0
 8009dd0:	d156      	bne.n	8009e80 <E131Bridge::HandleDmx()+0x17c>
 8009dd2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009dd6:	f1b9 0f00 	cmp.w	r9, #0
 8009dda:	d15c      	bne.n	8009e96 <E131Bridge::HandleDmx()+0x192>
 8009ddc:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8009dde:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009de2:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009de6:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009dea:	2210      	movs	r2, #16
 8009dec:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009df0:	f7ff fc9a 	bl	8009728 <memcpy.isra.0>
 8009df4:	68e3      	ldr	r3, [r4, #12]
 8009df6:	462a      	mov	r2, r5
 8009df8:	4641      	mov	r1, r8
 8009dfa:	4648      	mov	r0, r9
 8009dfc:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8009e00:	f7ff fca8 	bl	8009754 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 8009e04:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8009e08:	069b      	lsls	r3, r3, #26
 8009e0a:	f100 80a2 	bmi.w	8009f52 <E131Bridge::HandleDmx()+0x24e>
 8009e0e:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8009e12:	b29a      	uxth	r2, r3
 8009e14:	2a00      	cmp	r2, #0
 8009e16:	f000 809f 	beq.w	8009f58 <E131Bridge::HandleDmx()+0x254>
 8009e1a:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 8009e1e:	2a00      	cmp	r2, #0
 8009e20:	f040 809a 	bne.w	8009f58 <E131Bridge::HandleDmx()+0x254>
 8009e24:	ba5b      	rev16	r3, r3
 8009e26:	b29b      	uxth	r3, r3
 8009e28:	2f00      	cmp	r7, #0
 8009e2a:	f040 808f 	bne.w	8009f4c <E131Bridge::HandleDmx()+0x248>
 8009e2e:	2e00      	cmp	r6, #0
 8009e30:	f040 808c 	bne.w	8009f4c <E131Bridge::HandleDmx()+0x248>
 8009e34:	f8d4 2538 	ldr.w	r2, [r4, #1336]	; 0x538
 8009e38:	f8d4 151c 	ldr.w	r1, [r4, #1308]	; 0x51c
 8009e3c:	3a00      	subs	r2, #0
 8009e3e:	bf18      	it	ne
 8009e40:	2201      	movne	r2, #1
 8009e42:	3900      	subs	r1, #0
 8009e44:	bf18      	it	ne
 8009e46:	2101      	movne	r1, #1
 8009e48:	4620      	mov	r0, r4
 8009e4a:	f7ff fdc3 	bl	80099d4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 8009e4e:	f240 1301 	movw	r3, #257	; 0x101
 8009e52:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8009e56:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 8009e5a:	2b00      	cmp	r3, #0
 8009e5c:	f040 8081 	bne.w	8009f62 <E131Bridge::HandleDmx()+0x25e>
 8009e60:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009e64:	f043 0302 	orr.w	r3, r3, #2
 8009e68:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8009e6c:	e780      	b.n	8009d70 <E131Bridge::HandleDmx()+0x6c>
 8009e6e:	d9ad      	bls.n	8009dcc <E131Bridge::HandleDmx()+0xc8>
 8009e70:	2300      	movs	r3, #0
 8009e72:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
 8009e76:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
 8009e7a:	f884 34f5 	strb.w	r3, [r4, #1269]	; 0x4f5
 8009e7e:	e7a3      	b.n	8009dc8 <E131Bridge::HandleDmx()+0xc4>
 8009e80:	2f00      	cmp	r7, #0
 8009e82:	f000 8089 	beq.w	8009f98 <E131Bridge::HandleDmx()+0x294>
 8009e86:	f1b9 0f00 	cmp.w	r9, #0
 8009e8a:	d154      	bne.n	8009f36 <E131Bridge::HandleDmx()+0x232>
 8009e8c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009e90:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009e94:	e7ae      	b.n	8009df4 <E131Bridge::HandleDmx()+0xf0>
 8009e96:	b39e      	cbz	r6, 8009f00 <E131Bridge::HandleDmx()+0x1fc>
 8009e98:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009e9c:	68e3      	ldr	r3, [r4, #12]
 8009e9e:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8009ea2:	f7ff fc4b 	bl	800973c <lightset::Data::Get()>
 8009ea6:	4681      	mov	r9, r0
 8009ea8:	462a      	mov	r2, r5
 8009eaa:	4641      	mov	r1, r8
 8009eac:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8009eb0:	f7ff fc3a 	bl	8009728 <memcpy.isra.0>
 8009eb4:	462a      	mov	r2, r5
 8009eb6:	4641      	mov	r1, r8
 8009eb8:	f8c9 5600 	str.w	r5, [r9, #1536]	; 0x600
 8009ebc:	f509 6080 	add.w	r0, r9, #1024	; 0x400
 8009ec0:	f7ff fc32 	bl	8009728 <memcpy.isra.0>
 8009ec4:	e79e      	b.n	8009e04 <E131Bridge::HandleDmx()+0x100>
 8009ec6:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8009ec8:	2210      	movs	r2, #16
 8009eca:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
 8009ece:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009ed2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009ed6:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009eda:	f204 503c 	addw	r0, r4, #1340	; 0x53c
 8009ede:	f7ff fc23 	bl	8009728 <memcpy.isra.0>
 8009ee2:	68e3      	ldr	r3, [r4, #12]
 8009ee4:	4639      	mov	r1, r7
 8009ee6:	4620      	mov	r0, r4
 8009ee8:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8009eec:	f7ff fe16 	bl	8009b1c <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009ef0:	462a      	mov	r2, r5
 8009ef2:	4641      	mov	r1, r8
 8009ef4:	4638      	mov	r0, r7
 8009ef6:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
 8009efa:	f7ff fc71 	bl	80097e0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009efe:	e781      	b.n	8009e04 <E131Bridge::HandleDmx()+0x100>
 8009f00:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8009f02:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009f06:	f8c4 251c 	str.w	r2, [r4, #1308]	; 0x51c
 8009f0a:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8009f0e:	2210      	movs	r2, #16
 8009f10:	f504 60a4 	add.w	r0, r4, #1312	; 0x520
 8009f14:	f7ff fc08 	bl	8009728 <memcpy.isra.0>
 8009f18:	68e3      	ldr	r3, [r4, #12]
 8009f1a:	4631      	mov	r1, r6
 8009f1c:	4620      	mov	r0, r4
 8009f1e:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8009f22:	f7ff fdfb 	bl	8009b1c <E131Bridge::UpdateMergeStatus(unsigned int)>
 8009f26:	462a      	mov	r2, r5
 8009f28:	4641      	mov	r1, r8
 8009f2a:	4630      	mov	r0, r6
 8009f2c:	f8d4 3550 	ldr.w	r3, [r4, #1360]	; 0x550
 8009f30:	f7ff fc2d 	bl	800978e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8009f34:	e766      	b.n	8009e04 <E131Bridge::HandleDmx()+0x100>
 8009f36:	b926      	cbnz	r6, 8009f42 <E131Bridge::HandleDmx()+0x23e>
 8009f38:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009f3c:	f884 3530 	strb.w	r3, [r4, #1328]	; 0x530
 8009f40:	e7ea      	b.n	8009f18 <E131Bridge::HandleDmx()+0x214>
 8009f42:	481a      	ldr	r0, [pc, #104]	; (8009fac <E131Bridge::HandleDmx()+0x2a8>)
 8009f44:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f48:	f005 be6e 	b.w	800fc28 <printf>
 8009f4c:	4632      	mov	r2, r6
 8009f4e:	4639      	mov	r1, r7
 8009f50:	e77a      	b.n	8009e48 <E131Bridge::HandleDmx()+0x144>
 8009f52:	2300      	movs	r3, #0
 8009f54:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8009f58:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8009f5c:	2b00      	cmp	r3, #0
 8009f5e:	f47f af7a 	bne.w	8009e56 <E131Bridge::HandleDmx()+0x152>
 8009f62:	6865      	ldr	r5, [r4, #4]
 8009f64:	f7ff fbea 	bl	800973c <lightset::Data::Get()>
 8009f68:	682b      	ldr	r3, [r5, #0]
 8009f6a:	2100      	movs	r1, #0
 8009f6c:	691e      	ldr	r6, [r3, #16]
 8009f6e:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8009f72:	f8d0 3600 	ldr.w	r3, [r0, #1536]	; 0x600
 8009f76:	4628      	mov	r0, r5
 8009f78:	47b0      	blx	r6
 8009f7a:	f894 1556 	ldrb.w	r1, [r4, #1366]	; 0x556
 8009f7e:	2900      	cmp	r1, #0
 8009f80:	f47f af6e 	bne.w	8009e60 <E131Bridge::HandleDmx()+0x15c>
 8009f84:	6860      	ldr	r0, [r4, #4]
 8009f86:	6803      	ldr	r3, [r0, #0]
 8009f88:	689b      	ldr	r3, [r3, #8]
 8009f8a:	4798      	blx	r3
 8009f8c:	2301      	movs	r3, #1
 8009f8e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8009f92:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 8009f96:	e763      	b.n	8009e60 <E131Bridge::HandleDmx()+0x15c>
 8009f98:	f1b9 0f00 	cmp.w	r9, #0
 8009f9c:	d093      	beq.n	8009ec6 <E131Bridge::HandleDmx()+0x1c2>
 8009f9e:	2e00      	cmp	r6, #0
 8009fa0:	d0cf      	beq.n	8009f42 <E131Bridge::HandleDmx()+0x23e>
 8009fa2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8009fa6:	f884 354c 	strb.w	r3, [r4, #1356]	; 0x54c
 8009faa:	e79a      	b.n	8009ee2 <E131Bridge::HandleDmx()+0x1de>
 8009fac:	0801305b 	stmdaeq	r1, {r0, r1, r3, r4, r6, ip, sp}

08009fb0 <E131Bridge::IsValidRoot()>:
 8009fb0:	b530      	push	{r4, r5, lr}
 8009fb2:	4a0d      	ldr	r2, [pc, #52]	; (8009fe8 <E131Bridge::IsValidRoot()+0x38>)
 8009fb4:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 8009fb8:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 8009fbc:	4299      	cmp	r1, r3
 8009fbe:	d109      	bne.n	8009fd4 <E131Bridge::IsValidRoot()+0x24>
 8009fc0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 8009fc4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 8009fc8:	d00c      	beq.n	8009fe4 <E131Bridge::IsValidRoot()+0x34>
 8009fca:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8009fce:	4258      	negs	r0, r3
 8009fd0:	4158      	adcs	r0, r3
 8009fd2:	bd30      	pop	{r4, r5, pc}
 8009fd4:	f812 4b01 	ldrb.w	r4, [r2], #1
 8009fd8:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 8009fdc:	42a5      	cmp	r5, r4
 8009fde:	d0ed      	beq.n	8009fbc <E131Bridge::IsValidRoot()+0xc>
 8009fe0:	2000      	movs	r0, #0
 8009fe2:	e7f6      	b.n	8009fd2 <E131Bridge::IsValidRoot()+0x22>
 8009fe4:	2001      	movs	r0, #1
 8009fe6:	e7f4      	b.n	8009fd2 <E131Bridge::IsValidRoot()+0x22>
 8009fe8:	080131d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, ip, sp}

08009fec <E131Bridge::IsValidDataPacket()>:
 8009fec:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8009ff0:	2b02      	cmp	r3, #2
 8009ff2:	d10d      	bne.n	800a010 <E131Bridge::IsValidDataPacket()+0x24>
 8009ff4:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 8009ff8:	2ba1      	cmp	r3, #161	; 0xa1
 8009ffa:	d109      	bne.n	800a010 <E131Bridge::IsValidDataPacket()+0x24>
 8009ffc:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a000:	b933      	cbnz	r3, 800a010 <E131Bridge::IsValidDataPacket()+0x24>
 800a002:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a006:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a00a:	4258      	negs	r0, r3
 800a00c:	4158      	adcs	r0, r3
 800a00e:	4770      	bx	lr
 800a010:	2000      	movs	r0, #0
 800a012:	4770      	bx	lr

0800a014 <E131Bridge::Run()>:
 800a014:	b530      	push	{r4, r5, lr}
 800a016:	4601      	mov	r1, r0
 800a018:	4604      	mov	r4, r0
 800a01a:	b085      	sub	sp, #20
 800a01c:	f10d 030e 	add.w	r3, sp, #14
 800a020:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a024:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a028:	9300      	str	r3, [sp, #0]
 800a02a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a02e:	f002 fc03 	bl	800c838 <udp_recv>
 800a032:	4b3a      	ldr	r3, [pc, #232]	; (800a11c <E131Bridge::Run()+0x108>)
 800a034:	681d      	ldr	r5, [r3, #0]
 800a036:	60e5      	str	r5, [r4, #12]
 800a038:	2800      	cmp	r0, #0
 800a03a:	d138      	bne.n	800a0ae <E131Bridge::Run()+0x9a>
 800a03c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a040:	b16b      	cbz	r3, 800a05e <E131Bridge::Run()+0x4a>
 800a042:	6923      	ldr	r3, [r4, #16]
 800a044:	1aed      	subs	r5, r5, r3
 800a046:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a04a:	429d      	cmp	r5, r3
 800a04c:	d928      	bls.n	800a0a0 <E131Bridge::Run()+0x8c>
 800a04e:	6863      	ldr	r3, [r4, #4]
 800a050:	b9eb      	cbnz	r3, 800a08e <E131Bridge::Run()+0x7a>
 800a052:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a056:	f023 0302 	bic.w	r3, r3, #2
 800a05a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a05e:	6963      	ldr	r3, [r4, #20]
 800a060:	b12b      	cbz	r3, 800a06e <E131Bridge::Run()+0x5a>
 800a062:	4620      	mov	r0, r4
 800a064:	f000 f944 	bl	800a2f0 <E131Bridge::HandleDmxIn()>
 800a068:	4620      	mov	r0, r4
 800a06a:	f000 f8c7 	bl	800a1fc <E131Bridge::SendDiscoveryPacket()>
 800a06e:	7a23      	ldrb	r3, [r4, #8]
 800a070:	b15b      	cbz	r3, 800a08a <E131Bridge::Run()+0x76>
 800a072:	4b2b      	ldr	r3, [pc, #172]	; (800a120 <E131Bridge::Run()+0x10c>)
 800a074:	6818      	ldr	r0, [r3, #0]
 800a076:	6843      	ldr	r3, [r0, #4]
 800a078:	2b04      	cmp	r3, #4
 800a07a:	d006      	beq.n	800a08a <E131Bridge::Run()+0x76>
 800a07c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a080:	2b00      	cmp	r3, #0
 800a082:	d049      	beq.n	800a118 <E131Bridge::Run()+0x104>
 800a084:	2103      	movs	r1, #3
 800a086:	f005 f9ff 	bl	800f488 <LedBlink::SetMode(ledblink::Mode)>
 800a08a:	b005      	add	sp, #20
 800a08c:	bd30      	pop	{r4, r5, pc}
 800a08e:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a092:	2b00      	cmp	r3, #0
 800a094:	d1dd      	bne.n	800a052 <E131Bridge::Run()+0x3e>
 800a096:	2201      	movs	r2, #1
 800a098:	4620      	mov	r0, r4
 800a09a:	4611      	mov	r1, r2
 800a09c:	f7ff fdc0 	bl	8009c20 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a0a0:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a0a4:	1a9b      	subs	r3, r3, r2
 800a0a6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a0aa:	d3d8      	bcc.n	800a05e <E131Bridge::Run()+0x4a>
 800a0ac:	e7d1      	b.n	800a052 <E131Bridge::Run()+0x3e>
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	f7ff ff7e 	bl	8009fb0 <E131Bridge::IsValidRoot()>
 800a0b4:	2800      	cmp	r0, #0
 800a0b6:	d0e8      	beq.n	800a08a <E131Bridge::Run()+0x76>
 800a0b8:	2300      	movs	r3, #0
 800a0ba:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a0be:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a0c2:	6125      	str	r5, [r4, #16]
 800a0c4:	b15b      	cbz	r3, 800a0de <E131Bridge::Run()+0xca>
 800a0c6:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a0ca:	b943      	cbnz	r3, 800a0de <E131Bridge::Run()+0xca>
 800a0cc:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a0d0:	1aad      	subs	r5, r5, r2
 800a0d2:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a0d6:	4295      	cmp	r5, r2
 800a0d8:	bf88      	it	hi
 800a0da:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a0de:	6863      	ldr	r3, [r4, #4]
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	d0bc      	beq.n	800a05e <E131Bridge::Run()+0x4a>
 800a0e4:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a0e8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a0ec:	ba1a      	rev	r2, r3
 800a0ee:	d108      	bne.n	800a102 <E131Bridge::Run()+0xee>
 800a0f0:	4620      	mov	r0, r4
 800a0f2:	f7ff ff7b 	bl	8009fec <E131Bridge::IsValidDataPacket()>
 800a0f6:	2800      	cmp	r0, #0
 800a0f8:	d0b1      	beq.n	800a05e <E131Bridge::Run()+0x4a>
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f7ff fe02 	bl	8009d04 <E131Bridge::HandleDmx()>
 800a100:	e7ad      	b.n	800a05e <E131Bridge::Run()+0x4a>
 800a102:	2a08      	cmp	r2, #8
 800a104:	d1ab      	bne.n	800a05e <E131Bridge::Run()+0x4a>
 800a106:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a10a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a10e:	d1a6      	bne.n	800a05e <E131Bridge::Run()+0x4a>
 800a110:	4620      	mov	r0, r4
 800a112:	f000 f959 	bl	800a3c8 <E131Bridge::HandleSynchronization()>
 800a116:	e7a2      	b.n	800a05e <E131Bridge::Run()+0x4a>
 800a118:	2102      	movs	r1, #2
 800a11a:	e7b4      	b.n	800a086 <E131Bridge::Run()+0x72>
 800a11c:	2000a114 	andcs	sl, r0, r4, lsl r1
 800a120:	2000a0f4 	strdcs	sl, [r0], -r4

0800a124 <E131Bridge::FillDiscoveryPacket()>:
 800a124:	2200      	movs	r2, #0
 800a126:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a12a:	b510      	push	{r4, lr}
 800a12c:	333c      	adds	r3, #60	; 0x3c
 800a12e:	005b      	lsls	r3, r3, #1
 800a130:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a134:	69c3      	ldr	r3, [r0, #28]
 800a136:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a13a:	428b      	cmp	r3, r1
 800a13c:	d14a      	bne.n	800a1d4 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800a13e:	69c3      	ldr	r3, [r0, #28]
 800a140:	492d      	ldr	r1, [pc, #180]	; (800a1f8 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800a142:	701a      	strb	r2, [r3, #0]
 800a144:	2210      	movs	r2, #16
 800a146:	705a      	strb	r2, [r3, #1]
 800a148:	1cda      	adds	r2, r3, #3
 800a14a:	330f      	adds	r3, #15
 800a14c:	4293      	cmp	r3, r2
 800a14e:	d144      	bne.n	800a1da <E131Bridge::FillDiscoveryPacket()+0xb6>
 800a150:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a154:	69c3      	ldr	r3, [r0, #28]
 800a156:	3234      	adds	r2, #52	; 0x34
 800a158:	0052      	lsls	r2, r2, #1
 800a15a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a15e:	ba52      	rev16	r2, r2
 800a160:	821a      	strh	r2, [r3, #16]
 800a162:	2200      	movs	r2, #0
 800a164:	749a      	strb	r2, [r3, #18]
 800a166:	74da      	strb	r2, [r3, #19]
 800a168:	751a      	strb	r2, [r3, #20]
 800a16a:	2208      	movs	r2, #8
 800a16c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a170:	f803 2f15 	strb.w	r2, [r3, #21]!
 800a174:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800a178:	4291      	cmp	r1, r2
 800a17a:	d133      	bne.n	800a1e4 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800a17c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a180:	69c3      	ldr	r3, [r0, #28]
 800a182:	3229      	adds	r2, #41	; 0x29
 800a184:	0052      	lsls	r2, r2, #1
 800a186:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a18a:	ba52      	rev16	r2, r2
 800a18c:	84da      	strh	r2, [r3, #38]	; 0x26
 800a18e:	2200      	movs	r2, #0
 800a190:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a194:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a198:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a19c:	2202      	movs	r2, #2
 800a19e:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800a1a2:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800a1a6:	4291      	cmp	r1, r2
 800a1a8:	d121      	bne.n	800a1ee <E131Bridge::FillDiscoveryPacket()+0xca>
 800a1aa:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a1ae:	69c2      	ldr	r2, [r0, #28]
 800a1b0:	3304      	adds	r3, #4
 800a1b2:	005b      	lsls	r3, r3, #1
 800a1b4:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a1b8:	ba5b      	rev16	r3, r3
 800a1ba:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a1be:	2300      	movs	r3, #0
 800a1c0:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a1c4:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a1c8:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a1cc:	2301      	movs	r3, #1
 800a1ce:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a1d2:	bd10      	pop	{r4, pc}
 800a1d4:	f803 2b01 	strb.w	r2, [r3], #1
 800a1d8:	e7af      	b.n	800a13a <E131Bridge::FillDiscoveryPacket()+0x16>
 800a1da:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a1de:	f802 4f01 	strb.w	r4, [r2, #1]!
 800a1e2:	e7b3      	b.n	800a14c <E131Bridge::FillDiscoveryPacket()+0x28>
 800a1e4:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a1e8:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a1ec:	e7c4      	b.n	800a178 <E131Bridge::FillDiscoveryPacket()+0x54>
 800a1ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a1f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a1f6:	e7d6      	b.n	800a1a6 <E131Bridge::FillDiscoveryPacket()+0x82>
 800a1f8:	080131d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, ip, sp}

0800a1fc <E131Bridge::SendDiscoveryPacket()>:
 800a1fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a1fe:	f242 710f 	movw	r1, #9999	; 0x270f
 800a202:	68c2      	ldr	r2, [r0, #12]
 800a204:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a208:	4604      	mov	r4, r0
 800a20a:	1ad3      	subs	r3, r2, r3
 800a20c:	428b      	cmp	r3, r1
 800a20e:	d90e      	bls.n	800a22e <E131Bridge::SendDiscoveryPacket()+0x32>
 800a210:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a214:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a218:	b95b      	cbnz	r3, 800a232 <E131Bridge::SendDiscoveryPacket()+0x36>
 800a21a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a21e:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a222:	9300      	str	r3, [sp, #0]
 800a224:	69e1      	ldr	r1, [r4, #28]
 800a226:	6a23      	ldr	r3, [r4, #32]
 800a228:	7820      	ldrb	r0, [r4, #0]
 800a22a:	f002 fb61 	bl	800c8f0 <udp_send>
 800a22e:	b004      	add	sp, #16
 800a230:	bd10      	pop	{r4, pc}
 800a232:	2300      	movs	r3, #0
 800a234:	f10d 020e 	add.w	r2, sp, #14
 800a238:	4619      	mov	r1, r3
 800a23a:	f7ff fc5b 	bl	8009af4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a23e:	2800      	cmp	r0, #0
 800a240:	d0eb      	beq.n	800a21a <E131Bridge::SendDiscoveryPacket()+0x1e>
 800a242:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a246:	69e2      	ldr	r2, [r4, #28]
 800a248:	ba5b      	rev16	r3, r3
 800a24a:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 800a24e:	e7e4      	b.n	800a21a <E131Bridge::SendDiscoveryPacket()+0x1e>

0800a250 <memcpy.isra.0>:
 800a250:	3801      	subs	r0, #1
 800a252:	440a      	add	r2, r1
 800a254:	4291      	cmp	r1, r2
 800a256:	d100      	bne.n	800a25a <memcpy.isra.0+0xa>
 800a258:	4770      	bx	lr
 800a25a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a25e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a262:	e7f7      	b.n	800a254 <memcpy.isra.0+0x4>

0800a264 <E131Bridge::FillDataPacket()>:
 800a264:	b570      	push	{r4, r5, r6, lr}
 800a266:	2400      	movs	r4, #0
 800a268:	2610      	movs	r6, #16
 800a26a:	4605      	mov	r5, r0
 800a26c:	6980      	ldr	r0, [r0, #24]
 800a26e:	220c      	movs	r2, #12
 800a270:	7046      	strb	r6, [r0, #1]
 800a272:	7004      	strb	r4, [r0, #0]
 800a274:	7084      	strb	r4, [r0, #2]
 800a276:	70c4      	strb	r4, [r0, #3]
 800a278:	491c      	ldr	r1, [pc, #112]	; (800a2ec <E131Bridge::FillDataPacket()+0x88>)
 800a27a:	3004      	adds	r0, #4
 800a27c:	f7ff ffe8 	bl	800a250 <memcpy.isra.0>
 800a280:	2304      	movs	r3, #4
 800a282:	4632      	mov	r2, r6
 800a284:	2602      	movs	r6, #2
 800a286:	69a8      	ldr	r0, [r5, #24]
 800a288:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a28c:	7543      	strb	r3, [r0, #21]
 800a28e:	7484      	strb	r4, [r0, #18]
 800a290:	74c4      	strb	r4, [r0, #19]
 800a292:	7504      	strb	r4, [r0, #20]
 800a294:	3016      	adds	r0, #22
 800a296:	f7ff ffdb 	bl	800a250 <memcpy.isra.0>
 800a29a:	69a8      	ldr	r0, [r5, #24]
 800a29c:	2240      	movs	r2, #64	; 0x40
 800a29e:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a2a2:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a2a6:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a2aa:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a2ae:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a2b2:	302c      	adds	r0, #44	; 0x2c
 800a2b4:	f7ff ffcc 	bl	800a250 <memcpy.isra.0>
 800a2b8:	22a1      	movs	r2, #161	; 0xa1
 800a2ba:	69ab      	ldr	r3, [r5, #24]
 800a2bc:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a2c0:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a2c4:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a2c8:	69ab      	ldr	r3, [r5, #24]
 800a2ca:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a2ce:	69ab      	ldr	r3, [r5, #24]
 800a2d0:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a2d4:	2201      	movs	r2, #1
 800a2d6:	69ab      	ldr	r3, [r5, #24]
 800a2d8:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a2dc:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a2e0:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a2e4:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a2e8:	bd70      	pop	{r4, r5, r6, pc}
 800a2ea:	bf00      	nop
 800a2ec:	080131d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, ip, sp}

0800a2f0 <E131Bridge::HandleDmxIn()>:
 800a2f0:	b530      	push	{r4, r5, lr}
 800a2f2:	f890 355a 	ldrb.w	r3, [r0, #1370]	; 0x55a
 800a2f6:	4604      	mov	r4, r0
 800a2f8:	b085      	sub	sp, #20
 800a2fa:	2b00      	cmp	r3, #0
 800a2fc:	d050      	beq.n	800a3a0 <E131Bridge::HandleDmxIn()+0xb0>
 800a2fe:	6940      	ldr	r0, [r0, #20]
 800a300:	2100      	movs	r1, #0
 800a302:	6803      	ldr	r3, [r0, #0]
 800a304:	aa02      	add	r2, sp, #8
 800a306:	691d      	ldr	r5, [r3, #16]
 800a308:	ab03      	add	r3, sp, #12
 800a30a:	47a8      	blx	r5
 800a30c:	4601      	mov	r1, r0
 800a30e:	2800      	cmp	r0, #0
 800a310:	d048      	beq.n	800a3a4 <E131Bridge::HandleDmxIn()+0xb4>
 800a312:	9a02      	ldr	r2, [sp, #8]
 800a314:	69a0      	ldr	r0, [r4, #24]
 800a316:	b293      	uxth	r3, r2
 800a318:	f103 056d 	add.w	r5, r3, #109	; 0x6d
 800a31c:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 800a320:	ba6d      	rev16	r5, r5
 800a322:	8205      	strh	r5, [r0, #16]
 800a324:	f103 0557 	add.w	r5, r3, #87	; 0x57
 800a328:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 800a32c:	ba6d      	rev16	r5, r5
 800a32e:	84c5      	strh	r5, [r0, #38]	; 0x26
 800a330:	f894 5561 	ldrb.w	r5, [r4, #1377]	; 0x561
 800a334:	330a      	adds	r3, #10
 800a336:	f880 506c 	strb.w	r5, [r0, #108]	; 0x6c
 800a33a:	f894 0560 	ldrb.w	r0, [r4, #1376]	; 0x560
 800a33e:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a342:	1c45      	adds	r5, r0, #1
 800a344:	f884 5560 	strb.w	r5, [r4, #1376]	; 0x560
 800a348:	69a5      	ldr	r5, [r4, #24]
 800a34a:	ba5b      	rev16	r3, r3
 800a34c:	f885 006f 	strb.w	r0, [r5, #111]	; 0x6f
 800a350:	f8b4 5558 	ldrh.w	r5, [r4, #1368]	; 0x558
 800a354:	69a0      	ldr	r0, [r4, #24]
 800a356:	ba6d      	rev16	r5, r5
 800a358:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a35c:	f8a0 5071 	strh.w	r5, [r0, #113]	; 0x71
 800a360:	307d      	adds	r0, #125	; 0x7d
 800a362:	f7ff ff75 	bl	800a250 <memcpy.isra.0>
 800a366:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a36a:	69a1      	ldr	r1, [r4, #24]
 800a36c:	ba53      	rev16	r3, r2
 800a36e:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a372:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a376:	327d      	adds	r2, #125	; 0x7d
 800a378:	9300      	str	r3, [sp, #0]
 800a37a:	b292      	uxth	r2, r2
 800a37c:	f8d4 355c 	ldr.w	r3, [r4, #1372]	; 0x55c
 800a380:	7820      	ldrb	r0, [r4, #0]
 800a382:	f002 fab5 	bl	800c8f0 <udp_send>
 800a386:	4a0f      	ldr	r2, [pc, #60]	; (800a3c4 <E131Bridge::HandleDmxIn()+0xd4>)
 800a388:	6813      	ldr	r3, [r2, #0]
 800a38a:	07d9      	lsls	r1, r3, #31
 800a38c:	d408      	bmi.n	800a3a0 <E131Bridge::HandleDmxIn()+0xb0>
 800a38e:	f043 0301 	orr.w	r3, r3, #1
 800a392:	6013      	str	r3, [r2, #0]
 800a394:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a398:	f043 0301 	orr.w	r3, r3, #1
 800a39c:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a3a0:	b005      	add	sp, #20
 800a3a2:	bd30      	pop	{r4, r5, pc}
 800a3a4:	9b03      	ldr	r3, [sp, #12]
 800a3a6:	2b00      	cmp	r3, #0
 800a3a8:	d1fa      	bne.n	800a3a0 <E131Bridge::HandleDmxIn()+0xb0>
 800a3aa:	4a06      	ldr	r2, [pc, #24]	; (800a3c4 <E131Bridge::HandleDmxIn()+0xd4>)
 800a3ac:	6813      	ldr	r3, [r2, #0]
 800a3ae:	f023 0301 	bic.w	r3, r3, #1
 800a3b2:	6013      	str	r3, [r2, #0]
 800a3b4:	2b00      	cmp	r3, #0
 800a3b6:	d1f3      	bne.n	800a3a0 <E131Bridge::HandleDmxIn()+0xb0>
 800a3b8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3bc:	f023 0301 	bic.w	r3, r3, #1
 800a3c0:	e7ec      	b.n	800a39c <E131Bridge::HandleDmxIn()+0xac>
 800a3c2:	bf00      	nop
 800a3c4:	20000cd4 	ldrdcs	r0, [r0], -r4

0800a3c8 <E131Bridge::HandleSynchronization()>:
 800a3c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3cc:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a3d0:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a3d4:	ba5b      	rev16	r3, r3
 800a3d6:	b29b      	uxth	r3, r3
 800a3d8:	429a      	cmp	r2, r3
 800a3da:	4604      	mov	r4, r0
 800a3dc:	d00a      	beq.n	800a3f4 <E131Bridge::HandleSynchronization()+0x2c>
 800a3de:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a3e2:	429a      	cmp	r2, r3
 800a3e4:	d006      	beq.n	800a3f4 <E131Bridge::HandleSynchronization()+0x2c>
 800a3e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a3ea:	4b1b      	ldr	r3, [pc, #108]	; (800a458 <E131Bridge::HandleSynchronization()+0x90>)
 800a3ec:	2102      	movs	r1, #2
 800a3ee:	6818      	ldr	r0, [r3, #0]
 800a3f0:	f005 b84a 	b.w	800f488 <LedBlink::SetMode(ledblink::Mode)>
 800a3f4:	68e3      	ldr	r3, [r4, #12]
 800a3f6:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a3fa:	f894 3516 	ldrb.w	r3, [r4, #1302]	; 0x516
 800a3fe:	b30b      	cbz	r3, 800a444 <E131Bridge::HandleSynchronization()+0x7c>
 800a400:	4d16      	ldr	r5, [pc, #88]	; (800a45c <E131Bridge::HandleSynchronization()+0x94>)
 800a402:	6860      	ldr	r0, [r4, #4]
 800a404:	682b      	ldr	r3, [r5, #0]
 800a406:	4e16      	ldr	r6, [pc, #88]	; (800a460 <E131Bridge::HandleSynchronization()+0x98>)
 800a408:	07da      	lsls	r2, r3, #31
 800a40a:	bf5c      	itt	pl
 800a40c:	2301      	movpl	r3, #1
 800a40e:	602b      	strpl	r3, [r5, #0]
 800a410:	6803      	ldr	r3, [r0, #0]
 800a412:	2100      	movs	r1, #0
 800a414:	691f      	ldr	r7, [r3, #16]
 800a416:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a41a:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a41e:	47b8      	blx	r7
 800a420:	f894 1556 	ldrb.w	r1, [r4, #1366]	; 0x556
 800a424:	b931      	cbnz	r1, 800a434 <E131Bridge::HandleSynchronization()+0x6c>
 800a426:	6860      	ldr	r0, [r4, #4]
 800a428:	6803      	ldr	r3, [r0, #0]
 800a42a:	689b      	ldr	r3, [r3, #8]
 800a42c:	4798      	blx	r3
 800a42e:	2301      	movs	r3, #1
 800a430:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 800a434:	682b      	ldr	r3, [r5, #0]
 800a436:	07db      	lsls	r3, r3, #31
 800a438:	bf5c      	itt	pl
 800a43a:	2301      	movpl	r3, #1
 800a43c:	602b      	strpl	r3, [r5, #0]
 800a43e:	2300      	movs	r3, #0
 800a440:	f8c6 3600 	str.w	r3, [r6, #1536]	; 0x600
 800a444:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a446:	b120      	cbz	r0, 800a452 <E131Bridge::HandleSynchronization()+0x8a>
 800a448:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a44c:	6803      	ldr	r3, [r0, #0]
 800a44e:	689b      	ldr	r3, [r3, #8]
 800a450:	4718      	bx	r3
 800a452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a456:	bf00      	nop
 800a458:	2000a0f4 	strdcs	sl, [r0], -r4
 800a45c:	200006c8 	andcs	r0, r0, r8, asr #13
 800a460:	200006cc 	andcs	r0, r0, ip, asr #13

0800a464 <E131Bridge::Print()>:
 800a464:	b530      	push	{r4, r5, lr}
 800a466:	2500      	movs	r5, #0
 800a468:	4604      	mov	r4, r0
 800a46a:	b08d      	sub	sp, #52	; 0x34
 800a46c:	a902      	add	r1, sp, #8
 800a46e:	3024      	adds	r0, #36	; 0x24
 800a470:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a474:	f000 fbea 	bl	800ac4c <uuid_unparse>
 800a478:	4822      	ldr	r0, [pc, #136]	; (800a504 <E131Bridge::Print()+0xa0>)
 800a47a:	f005 fbd5 	bl	800fc28 <printf>
 800a47e:	4b22      	ldr	r3, [pc, #136]	; (800a508 <E131Bridge::Print()+0xa4>)
 800a480:	4822      	ldr	r0, [pc, #136]	; (800a50c <E131Bridge::Print()+0xa8>)
 800a482:	7819      	ldrb	r1, [r3, #0]
 800a484:	785a      	ldrb	r2, [r3, #1]
 800a486:	f005 fbcf 	bl	800fc28 <printf>
 800a48a:	4821      	ldr	r0, [pc, #132]	; (800a510 <E131Bridge::Print()+0xac>)
 800a48c:	a902      	add	r1, sp, #8
 800a48e:	f005 fbcb 	bl	800fc28 <printf>
 800a492:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a496:	b1bb      	cbz	r3, 800a4c8 <E131Bridge::Print()+0x64>
 800a498:	481e      	ldr	r0, [pc, #120]	; (800a514 <E131Bridge::Print()+0xb0>)
 800a49a:	f005 fbc5 	bl	800fc28 <printf>
 800a49e:	2301      	movs	r3, #1
 800a4a0:	4629      	mov	r1, r5
 800a4a2:	4620      	mov	r0, r4
 800a4a4:	f10d 0206 	add.w	r2, sp, #6
 800a4a8:	f7ff fb24 	bl	8009af4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a4ac:	b160      	cbz	r0, 800a4c8 <E131Bridge::Print()+0x64>
 800a4ae:	f8d4 1550 	ldr.w	r1, [r4, #1360]	; 0x550
 800a4b2:	4a19      	ldr	r2, [pc, #100]	; (800a518 <E131Bridge::Print()+0xb4>)
 800a4b4:	4b19      	ldr	r3, [pc, #100]	; (800a51c <E131Bridge::Print()+0xb8>)
 800a4b6:	481a      	ldr	r0, [pc, #104]	; (800a520 <E131Bridge::Print()+0xbc>)
 800a4b8:	42a9      	cmp	r1, r5
 800a4ba:	bf18      	it	ne
 800a4bc:	4613      	movne	r3, r2
 800a4be:	4629      	mov	r1, r5
 800a4c0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a4c4:	f005 fbb0 	bl	800fc28 <printf>
 800a4c8:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a4cc:	b193      	cbz	r3, 800a4f4 <E131Bridge::Print()+0x90>
 800a4ce:	4815      	ldr	r0, [pc, #84]	; (800a524 <E131Bridge::Print()+0xc0>)
 800a4d0:	f005 fbaa 	bl	800fc28 <printf>
 800a4d4:	2300      	movs	r3, #0
 800a4d6:	4620      	mov	r0, r4
 800a4d8:	4619      	mov	r1, r3
 800a4da:	f10d 0206 	add.w	r2, sp, #6
 800a4de:	f7ff fb09 	bl	8009af4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a4e2:	b138      	cbz	r0, 800a4f4 <E131Bridge::Print()+0x90>
 800a4e4:	2100      	movs	r1, #0
 800a4e6:	f894 3561 	ldrb.w	r3, [r4, #1377]	; 0x561
 800a4ea:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a4ee:	480e      	ldr	r0, [pc, #56]	; (800a528 <E131Bridge::Print()+0xc4>)
 800a4f0:	f005 fb9a 	bl	800fc28 <printf>
 800a4f4:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800a4f8:	b113      	cbz	r3, 800a500 <E131Bridge::Print()+0x9c>
 800a4fa:	480c      	ldr	r0, [pc, #48]	; (800a52c <E131Bridge::Print()+0xc8>)
 800a4fc:	f005 fb94 	bl	800fc28 <printf>
 800a500:	b00d      	add	sp, #52	; 0x34
 800a502:	bd30      	pop	{r4, r5, pc}
 800a504:	08013090 	stmdaeq	r1, {r4, r7, ip, sp}
 800a508:	080131df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, ip, sp}
 800a50c:	08013098 	stmdaeq	r1, {r3, r4, r7, ip, sp}
 800a510:	080130ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, ip, sp}
 800a514:	080130bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, ip, sp}
 800a518:	0801308c 	stmdaeq	r1, {r2, r3, r7, ip, sp}
 800a51c:	08013088 	stmdaeq	r1, {r3, r7, ip, sp}
 800a520:	080130c4 	stmdaeq	r1, {r2, r6, r7, ip, sp}
 800a524:	080130e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, ip, sp}
 800a528:	080130eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, ip, sp}
 800a52c:	0801310a 	stmdaeq	r1, {r1, r3, r8, ip, sp}

0800a530 <memcmp>:
 800a530:	4402      	add	r2, r0
 800a532:	4290      	cmp	r0, r2
 800a534:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800a538:	d106      	bne.n	800a548 <memcmp+0x18>
 800a53a:	2000      	movs	r0, #0
 800a53c:	4770      	bx	lr
 800a53e:	3001      	adds	r0, #1
 800a540:	4290      	cmp	r0, r2
 800a542:	d102      	bne.n	800a54a <memcmp+0x1a>
 800a544:	2000      	movs	r0, #0
 800a546:	e006      	b.n	800a556 <memcmp+0x26>
 800a548:	b510      	push	{r4, lr}
 800a54a:	7803      	ldrb	r3, [r0, #0]
 800a54c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a550:	42a3      	cmp	r3, r4
 800a552:	d0f4      	beq.n	800a53e <memcmp+0xe>
 800a554:	1b18      	subs	r0, r3, r4
 800a556:	bd10      	pop	{r4, pc}

0800a558 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a558:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a55a:	88c6      	ldrh	r6, [r0, #6]
 800a55c:	8885      	ldrh	r5, [r0, #4]
 800a55e:	42ae      	cmp	r6, r5
 800a560:	d216      	bcs.n	800a590 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a562:	4604      	mov	r4, r0
 800a564:	6800      	ldr	r0, [r0, #0]
 800a566:	1bad      	subs	r5, r5, r6
 800a568:	4430      	add	r0, r6
 800a56a:	7a26      	ldrb	r6, [r4, #8]
 800a56c:	b923      	cbnz	r3, 800a578 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a56e:	b926      	cbnz	r6, 800a57a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a570:	9200      	str	r2, [sp, #0]
 800a572:	460b      	mov	r3, r1
 800a574:	4a09      	ldr	r2, [pc, #36]	; (800a59c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a576:	e003      	b.n	800a580 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a578:	b166      	cbz	r6, 800a594 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a57a:	460b      	mov	r3, r1
 800a57c:	9200      	str	r2, [sp, #0]
 800a57e:	4a08      	ldr	r2, [pc, #32]	; (800a5a0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a580:	4629      	mov	r1, r5
 800a582:	f005 fb79 	bl	800fc78 <snprintf>
 800a586:	4285      	cmp	r5, r0
 800a588:	bfa2      	ittt	ge
 800a58a:	88e3      	ldrhge	r3, [r4, #6]
 800a58c:	181b      	addge	r3, r3, r0
 800a58e:	80e3      	strhge	r3, [r4, #6]
 800a590:	b002      	add	sp, #8
 800a592:	bd70      	pop	{r4, r5, r6, pc}
 800a594:	9200      	str	r2, [sp, #0]
 800a596:	460b      	mov	r3, r1
 800a598:	4a02      	ldr	r2, [pc, #8]	; (800a5a4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a59a:	e7f1      	b.n	800a580 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a59c:	080122d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sp}
 800a5a0:	080122c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sp}
 800a5a4:	080122d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sp}

0800a5a8 <E131Params::E131Params(E131ParamsStore*)>:
 800a5a8:	b510      	push	{r4, lr}
 800a5aa:	2210      	movs	r2, #16
 800a5ac:	4604      	mov	r4, r0
 800a5ae:	f840 1b04 	str.w	r1, [r0], #4
 800a5b2:	2100      	movs	r1, #0
 800a5b4:	f005 f91e 	bl	800f7f4 <memset>
 800a5b8:	2200      	movs	r2, #0
 800a5ba:	7322      	strb	r2, [r4, #12]
 800a5bc:	2264      	movs	r2, #100	; 0x64
 800a5be:	2301      	movs	r3, #1
 800a5c0:	75a2      	strb	r2, [r4, #22]
 800a5c2:	4a04      	ldr	r2, [pc, #16]	; (800a5d4 <E131Params::E131Params(E131ParamsStore*)+0x2c>)
 800a5c4:	72e3      	strb	r3, [r4, #11]
 800a5c6:	6811      	ldr	r1, [r2, #0]
 800a5c8:	82a3      	strh	r3, [r4, #20]
 800a5ca:	b901      	cbnz	r1, 800a5ce <E131Params::E131Params(E131ParamsStore*)+0x26>
 800a5cc:	6013      	str	r3, [r2, #0]
 800a5ce:	4620      	mov	r0, r4
 800a5d0:	bd10      	pop	{r4, pc}
 800a5d2:	bf00      	nop
 800a5d4:	20000cd8 	ldrdcs	r0, [r0], -r8

0800a5d8 <E131Params::Load()>:
 800a5d8:	b508      	push	{r3, lr}
 800a5da:	2300      	movs	r3, #0
 800a5dc:	4601      	mov	r1, r0
 800a5de:	6043      	str	r3, [r0, #4]
 800a5e0:	6800      	ldr	r0, [r0, #0]
 800a5e2:	b120      	cbz	r0, 800a5ee <E131Params::Load()+0x16>
 800a5e4:	6803      	ldr	r3, [r0, #0]
 800a5e6:	3104      	adds	r1, #4
 800a5e8:	68db      	ldr	r3, [r3, #12]
 800a5ea:	4798      	blx	r3
 800a5ec:	2001      	movs	r0, #1
 800a5ee:	bd08      	pop	{r3, pc}

0800a5f0 <E131Params::Load(char const*, unsigned int)>:
 800a5f0:	6803      	ldr	r3, [r0, #0]
 800a5f2:	b1d3      	cbz	r3, 800a62a <E131Params::Load(char const*, unsigned int)+0x3a>
 800a5f4:	2300      	movs	r3, #0
 800a5f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5f8:	460d      	mov	r5, r1
 800a5fa:	4616      	mov	r6, r2
 800a5fc:	4604      	mov	r4, r0
 800a5fe:	6043      	str	r3, [r0, #4]
 800a600:	4602      	mov	r2, r0
 800a602:	490a      	ldr	r1, [pc, #40]	; (800a62c <E131Params::Load(char const*, unsigned int)+0x3c>)
 800a604:	4668      	mov	r0, sp
 800a606:	f004 faf5 	bl	800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a60a:	4632      	mov	r2, r6
 800a60c:	4629      	mov	r1, r5
 800a60e:	4668      	mov	r0, sp
 800a610:	f004 faf4 	bl	800ebfc <ReadConfigFile::Read(char const*, unsigned int)>
 800a614:	4621      	mov	r1, r4
 800a616:	f851 0b04 	ldr.w	r0, [r1], #4
 800a61a:	6803      	ldr	r3, [r0, #0]
 800a61c:	689b      	ldr	r3, [r3, #8]
 800a61e:	4798      	blx	r3
 800a620:	4668      	mov	r0, sp
 800a622:	f004 faea 	bl	800ebfa <ReadConfigFile::~ReadConfigFile()>
 800a626:	b002      	add	sp, #8
 800a628:	bd70      	pop	{r4, r5, r6, pc}
 800a62a:	4770      	bx	lr
 800a62c:	0800a879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, sp, pc}

0800a630 <E131Params::callbackFunction(char const*)>:
 800a630:	b570      	push	{r4, r5, r6, lr}
 800a632:	460d      	mov	r5, r1
 800a634:	2608      	movs	r6, #8
 800a636:	b086      	sub	sp, #24
 800a638:	4604      	mov	r4, r0
 800a63a:	4985      	ldr	r1, [pc, #532]	; (800a850 <E131Params::callbackFunction(char const*)+0x220>)
 800a63c:	4628      	mov	r0, r5
 800a63e:	ab01      	add	r3, sp, #4
 800a640:	eb0d 0206 	add.w	r2, sp, r6
 800a644:	9601      	str	r6, [sp, #4]
 800a646:	f004 fb0d 	bl	800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a64a:	2800      	cmp	r0, #0
 800a64c:	f040 80de 	bne.w	800a80c <E131Params::callbackFunction(char const*)+0x1dc>
 800a650:	2204      	movs	r2, #4
 800a652:	4980      	ldr	r1, [pc, #512]	; (800a854 <E131Params::callbackFunction(char const*)+0x224>)
 800a654:	eb0d 0006 	add.w	r0, sp, r6
 800a658:	f7ff ff6a 	bl	800a530 <memcmp>
 800a65c:	6865      	ldr	r5, [r4, #4]
 800a65e:	b1a0      	cbz	r0, 800a68a <E131Params::callbackFunction(char const*)+0x5a>
 800a660:	2203      	movs	r2, #3
 800a662:	497d      	ldr	r1, [pc, #500]	; (800a858 <E131Params::callbackFunction(char const*)+0x228>)
 800a664:	eb0d 0006 	add.w	r0, sp, r6
 800a668:	f7ff ff62 	bl	800a530 <memcmp>
 800a66c:	b1a8      	cbz	r0, 800a69a <E131Params::callbackFunction(char const*)+0x6a>
 800a66e:	2202      	movs	r2, #2
 800a670:	497a      	ldr	r1, [pc, #488]	; (800a85c <E131Params::callbackFunction(char const*)+0x22c>)
 800a672:	eb0d 0006 	add.w	r0, sp, r6
 800a676:	f7ff ff5b 	bl	800a530 <memcmp>
 800a67a:	b190      	cbz	r0, 800a6a2 <E131Params::callbackFunction(char const*)+0x72>
 800a67c:	4632      	mov	r2, r6
 800a67e:	4978      	ldr	r1, [pc, #480]	; (800a860 <E131Params::callbackFunction(char const*)+0x230>)
 800a680:	eb0d 0006 	add.w	r0, sp, r6
 800a684:	f7ff ff54 	bl	800a530 <memcmp>
 800a688:	b168      	cbz	r0, 800a6a6 <E131Params::callbackFunction(char const*)+0x76>
 800a68a:	2300      	movs	r3, #0
 800a68c:	f025 0501 	bic.w	r5, r5, #1
 800a690:	6065      	str	r5, [r4, #4]
 800a692:	f8a4 3009 	strh.w	r3, [r4, #9]
 800a696:	b006      	add	sp, #24
 800a698:	bd70      	pop	{r4, r5, r6, pc}
 800a69a:	2301      	movs	r3, #1
 800a69c:	f045 0501 	orr.w	r5, r5, #1
 800a6a0:	e7f6      	b.n	800a690 <E131Params::callbackFunction(char const*)+0x60>
 800a6a2:	2302      	movs	r3, #2
 800a6a4:	e7fa      	b.n	800a69c <E131Params::callbackFunction(char const*)+0x6c>
 800a6a6:	2303      	movs	r3, #3
 800a6a8:	e7f8      	b.n	800a69c <E131Params::callbackFunction(char const*)+0x6c>
 800a6aa:	2303      	movs	r3, #3
 800a6ac:	4628      	mov	r0, r5
 800a6ae:	9301      	str	r3, [sp, #4]
 800a6b0:	496c      	ldr	r1, [pc, #432]	; (800a864 <E131Params::callbackFunction(char const*)+0x234>)
 800a6b2:	ab01      	add	r3, sp, #4
 800a6b4:	aa02      	add	r2, sp, #8
 800a6b6:	f004 fad5 	bl	800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a6ba:	b9e0      	cbnz	r0, 800a6f6 <E131Params::callbackFunction(char const*)+0xc6>
 800a6bc:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800a6c0:	6863      	ldr	r3, [r4, #4]
 800a6c2:	f042 0220 	orr.w	r2, r2, #32
 800a6c6:	2a6c      	cmp	r2, #108	; 0x6c
 800a6c8:	d110      	bne.n	800a6ec <E131Params::callbackFunction(char const*)+0xbc>
 800a6ca:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800a6ce:	f042 0220 	orr.w	r2, r2, #32
 800a6d2:	2a74      	cmp	r2, #116	; 0x74
 800a6d4:	d10a      	bne.n	800a6ec <E131Params::callbackFunction(char const*)+0xbc>
 800a6d6:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800a6da:	f042 0220 	orr.w	r2, r2, #32
 800a6de:	2a70      	cmp	r2, #112	; 0x70
 800a6e0:	d104      	bne.n	800a6ec <E131Params::callbackFunction(char const*)+0xbc>
 800a6e2:	2201      	movs	r2, #1
 800a6e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a6e8:	73a2      	strb	r2, [r4, #14]
 800a6ea:	e0ab      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a6ec:	2200      	movs	r2, #0
 800a6ee:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a6f2:	73a2      	strb	r2, [r4, #14]
 800a6f4:	e0a6      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a6f6:	2307      	movs	r3, #7
 800a6f8:	4628      	mov	r0, r5
 800a6fa:	9301      	str	r3, [sp, #4]
 800a6fc:	495a      	ldr	r1, [pc, #360]	; (800a868 <E131Params::callbackFunction(char const*)+0x238>)
 800a6fe:	ab01      	add	r3, sp, #4
 800a700:	aa02      	add	r2, sp, #8
 800a702:	f004 faaf 	bl	800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a706:	2800      	cmp	r0, #0
 800a708:	d157      	bne.n	800a7ba <E131Params::callbackFunction(char const*)+0x18a>
 800a70a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800a70e:	f043 0320 	orr.w	r3, r3, #32
 800a712:	2b69      	cmp	r3, #105	; 0x69
 800a714:	d11f      	bne.n	800a756 <E131Params::callbackFunction(char const*)+0x126>
 800a716:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800a71a:	f043 0320 	orr.w	r3, r3, #32
 800a71e:	2b6e      	cmp	r3, #110	; 0x6e
 800a720:	d142      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a722:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800a726:	f043 0320 	orr.w	r3, r3, #32
 800a72a:	2b70      	cmp	r3, #112	; 0x70
 800a72c:	d13c      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a72e:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800a732:	f043 0320 	orr.w	r3, r3, #32
 800a736:	2b75      	cmp	r3, #117	; 0x75
 800a738:	d136      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a73a:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800a73e:	f043 0320 	orr.w	r3, r3, #32
 800a742:	3b74      	subs	r3, #116	; 0x74
 800a744:	bf18      	it	ne
 800a746:	2301      	movne	r3, #1
 800a748:	8aa2      	ldrh	r2, [r4, #20]
 800a74a:	f022 0203 	bic.w	r2, r2, #3
 800a74e:	b292      	uxth	r2, r2
 800a750:	bb63      	cbnz	r3, 800a7ac <E131Params::callbackFunction(char const*)+0x17c>
 800a752:	82a2      	strh	r2, [r4, #20]
 800a754:	e79f      	b.n	800a696 <E131Params::callbackFunction(char const*)+0x66>
 800a756:	2b64      	cmp	r3, #100	; 0x64
 800a758:	d126      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a75a:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800a75e:	f043 0320 	orr.w	r3, r3, #32
 800a762:	2b69      	cmp	r3, #105	; 0x69
 800a764:	d120      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a766:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800a76a:	f043 0320 	orr.w	r3, r3, #32
 800a76e:	2b73      	cmp	r3, #115	; 0x73
 800a770:	d11a      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a772:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800a776:	f043 0320 	orr.w	r3, r3, #32
 800a77a:	2b61      	cmp	r3, #97	; 0x61
 800a77c:	d114      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a77e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800a782:	f043 0320 	orr.w	r3, r3, #32
 800a786:	2b62      	cmp	r3, #98	; 0x62
 800a788:	d10e      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a78a:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800a78e:	f043 0320 	orr.w	r3, r3, #32
 800a792:	2b6c      	cmp	r3, #108	; 0x6c
 800a794:	d108      	bne.n	800a7a8 <E131Params::callbackFunction(char const*)+0x178>
 800a796:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800a79a:	f043 0320 	orr.w	r3, r3, #32
 800a79e:	2b65      	cmp	r3, #101	; 0x65
 800a7a0:	bf14      	ite	ne
 800a7a2:	2301      	movne	r3, #1
 800a7a4:	2302      	moveq	r3, #2
 800a7a6:	e7cf      	b.n	800a748 <E131Params::callbackFunction(char const*)+0x118>
 800a7a8:	2301      	movs	r3, #1
 800a7aa:	e7cd      	b.n	800a748 <E131Params::callbackFunction(char const*)+0x118>
 800a7ac:	2b02      	cmp	r3, #2
 800a7ae:	bf0c      	ite	eq
 800a7b0:	f042 0202 	orreq.w	r2, r2, #2
 800a7b4:	f042 0201 	orrne.w	r2, r2, #1
 800a7b8:	e7cb      	b.n	800a752 <E131Params::callbackFunction(char const*)+0x122>
 800a7ba:	4628      	mov	r0, r5
 800a7bc:	492b      	ldr	r1, [pc, #172]	; (800a86c <E131Params::callbackFunction(char const*)+0x23c>)
 800a7be:	f10d 0201 	add.w	r2, sp, #1
 800a7c2:	f004 fac7 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a7c6:	b178      	cbz	r0, 800a7e8 <E131Params::callbackFunction(char const*)+0x1b8>
 800a7c8:	4628      	mov	r0, r5
 800a7ca:	4929      	ldr	r1, [pc, #164]	; (800a870 <E131Params::callbackFunction(char const*)+0x240>)
 800a7cc:	f10d 0201 	add.w	r2, sp, #1
 800a7d0:	f004 fac0 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a7d4:	2800      	cmp	r0, #0
 800a7d6:	f47f af5e 	bne.w	800a696 <E131Params::callbackFunction(char const*)+0x66>
 800a7da:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a7de:	6863      	ldr	r3, [r4, #4]
 800a7e0:	b392      	cbz	r2, 800a848 <E131Params::callbackFunction(char const*)+0x218>
 800a7e2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800a7e6:	e02d      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a7e8:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a7ec:	6863      	ldr	r3, [r4, #4]
 800a7ee:	1e51      	subs	r1, r2, #1
 800a7f0:	b2c9      	uxtb	r1, r1
 800a7f2:	29c7      	cmp	r1, #199	; 0xc7
 800a7f4:	d805      	bhi.n	800a802 <E131Params::callbackFunction(char const*)+0x1d2>
 800a7f6:	2a64      	cmp	r2, #100	; 0x64
 800a7f8:	d003      	beq.n	800a802 <E131Params::callbackFunction(char const*)+0x1d2>
 800a7fa:	75a2      	strb	r2, [r4, #22]
 800a7fc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a800:	e020      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a802:	2264      	movs	r2, #100	; 0x64
 800a804:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800a808:	75a2      	strb	r2, [r4, #22]
 800a80a:	e01b      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a80c:	4628      	mov	r0, r5
 800a80e:	4919      	ldr	r1, [pc, #100]	; (800a874 <E131Params::callbackFunction(char const*)+0x244>)
 800a810:	f10d 0202 	add.w	r2, sp, #2
 800a814:	f004 fa80 	bl	800ed18 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a818:	2800      	cmp	r0, #0
 800a81a:	f47f af46 	bne.w	800a6aa <E131Params::callbackFunction(char const*)+0x7a>
 800a81e:	f64f 15fe 	movw	r5, #63998	; 0xf9fe
 800a822:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800a826:	6863      	ldr	r3, [r4, #4]
 800a828:	1e4a      	subs	r2, r1, #1
 800a82a:	b292      	uxth	r2, r2
 800a82c:	42aa      	cmp	r2, r5
 800a82e:	bf81      	itttt	hi
 800a830:	2201      	movhi	r2, #1
 800a832:	7320      	strbhi	r0, [r4, #12]
 800a834:	72e2      	strbhi	r2, [r4, #11]
 800a836:	f023 0310 	bichi.w	r3, r3, #16
 800a83a:	bf9c      	itt	ls
 800a83c:	f8a4 100b 	strhls.w	r1, [r4, #11]
 800a840:	f043 0310 	orrls.w	r3, r3, #16
 800a844:	6063      	str	r3, [r4, #4]
 800a846:	e726      	b.n	800a696 <E131Params::callbackFunction(char const*)+0x66>
 800a848:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a84c:	e7fa      	b.n	800a844 <E131Params::callbackFunction(char const*)+0x214>
 800a84e:	bf00      	nop
 800a850:	08013888 	stmdaeq	r1, {r3, r7, fp, ip, sp}
 800a854:	08013162 	stmdaeq	r1, {r1, r5, r6, r8, ip, sp}
 800a858:	08013167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, ip, sp}
 800a85c:	0801243a 	stmdaeq	r1, {r1, r3, r4, r5, sl, sp}
 800a860:	0801316b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, ip, sp}
 800a864:	08013818 	stmdaeq	r1, {r3, r4, fp, ip, sp}
 800a868:	0801389a 	stmdaeq	r1, {r1, r3, r4, r7, fp, ip, sp}
 800a86c:	080131b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, sp}
 800a870:	08013872 	stmdaeq	r1, {r1, r4, r5, r6, fp, ip, sp}
 800a874:	080137d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, ip, sp}

0800a878 <E131Params::staticCallbackFunction(void*, char const*)>:
 800a878:	f7ff beda 	b.w	800a630 <E131Params::callbackFunction(char const*)>

0800a87c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800a87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a880:	4604      	mov	r4, r0
 800a882:	4615      	mov	r5, r2
 800a884:	461e      	mov	r6, r3
 800a886:	b087      	sub	sp, #28
 800a888:	3004      	adds	r0, #4
 800a88a:	2900      	cmp	r1, #0
 800a88c:	d05f      	beq.n	800a94e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800a88e:	2213      	movs	r2, #19
 800a890:	f004 ff99 	bl	800f7c6 <memmove>
 800a894:	4633      	mov	r3, r6
 800a896:	462a      	mov	r2, r5
 800a898:	498f      	ldr	r1, [pc, #572]	; (800aad8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x25c>)
 800a89a:	a803      	add	r0, sp, #12
 800a89c:	f004 f90a 	bl	800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a8a0:	2500      	movs	r5, #0
 800a8a2:	4f8e      	ldr	r7, [pc, #568]	; (800aadc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800a8a4:	4e8e      	ldr	r6, [pc, #568]	; (800aae0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800a8a6:	f8df 823c 	ldr.w	r8, [pc, #572]	; 800aae4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>
 800a8aa:	f8df 923c 	ldr.w	r9, [pc, #572]	; 800aae8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800a8ae:	f8d8 2000 	ldr.w	r2, [r8]
 800a8b2:	6863      	ldr	r3, [r4, #4]
 800a8b4:	42aa      	cmp	r2, r5
 800a8b6:	d851      	bhi.n	800a95c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800a8b8:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800a8bc:	4a8b      	ldr	r2, [pc, #556]	; (800aaec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800a8be:	f003 0301 	and.w	r3, r3, #1
 800a8c2:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800a8c6:	a803      	add	r0, sp, #12
 800a8c8:	4989      	ldr	r1, [pc, #548]	; (800aaf0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800a8ca:	f7ff fe45 	bl	800a558 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a8ce:	4989      	ldr	r1, [pc, #548]	; (800aaf4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800a8d0:	a803      	add	r0, sp, #12
 800a8d2:	f004 f975 	bl	800ebc0 <PropertiesBuilder::AddComment(char const*)>
 800a8d6:	2500      	movs	r5, #0
 800a8d8:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800a8dc:	4e86      	ldr	r6, [pc, #536]	; (800aaf8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800a8de:	f8df 921c 	ldr.w	r9, [pc, #540]	; 800aafc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>
 800a8e2:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800ab00 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800a8e6:	f104 070d 	add.w	r7, r4, #13
 800a8ea:	f8d8 3000 	ldr.w	r3, [r8]
 800a8ee:	42ab      	cmp	r3, r5
 800a8f0:	d87e      	bhi.n	800a9f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x174>
 800a8f2:	4984      	ldr	r1, [pc, #528]	; (800ab04 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800a8f4:	a803      	add	r0, sp, #12
 800a8f6:	f004 f963 	bl	800ebc0 <PropertiesBuilder::AddComment(char const*)>
 800a8fa:	2700      	movs	r7, #0
 800a8fc:	4e82      	ldr	r6, [pc, #520]	; (800ab08 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800a8fe:	f8df a20c 	ldr.w	sl, [pc, #524]	; 800ab0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>
 800a902:	f8df b20c 	ldr.w	fp, [pc, #524]	; 800ab10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800a906:	f104 0915 	add.w	r9, r4, #21
 800a90a:	f8d8 3000 	ldr.w	r3, [r8]
 800a90e:	42bb      	cmp	r3, r7
 800a910:	f200 8082 	bhi.w	800aa18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>
 800a914:	497f      	ldr	r1, [pc, #508]	; (800ab14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800a916:	a803      	add	r0, sp, #12
 800a918:	f004 f952 	bl	800ebc0 <PropertiesBuilder::AddComment(char const*)>
 800a91c:	6863      	ldr	r3, [r4, #4]
 800a91e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a922:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a926:	42a2      	cmp	r2, r4
 800a928:	f080 80b7 	bcs.w	800aa9a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21e>
 800a92c:	9803      	ldr	r0, [sp, #12]
 800a92e:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800a932:	4410      	add	r0, r2
 800a934:	eba4 0402 	sub.w	r4, r4, r2
 800a938:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a93c:	f040 809c 	bne.w	800aa78 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fc>
 800a940:	2a00      	cmp	r2, #0
 800a942:	f040 809a 	bne.w	800aa7a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800a946:	9200      	str	r2, [sp, #0]
 800a948:	4b73      	ldr	r3, [pc, #460]	; (800ab18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800a94a:	4a71      	ldr	r2, [pc, #452]	; (800ab10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800a94c:	e09b      	b.n	800aa86 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20a>
 800a94e:	6823      	ldr	r3, [r4, #0]
 800a950:	4601      	mov	r1, r0
 800a952:	681a      	ldr	r2, [r3, #0]
 800a954:	4618      	mov	r0, r3
 800a956:	68d2      	ldr	r2, [r2, #12]
 800a958:	4790      	blx	r2
 800a95a:	e79b      	b.n	800a894 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800a95c:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800a960:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800a964:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800a968:	45dc      	cmp	ip, fp
 800a96a:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800a96e:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800a972:	d221      	bcs.n	800a9b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800a974:	2110      	movs	r1, #16
 800a976:	9803      	ldr	r0, [sp, #12]
 800a978:	40a9      	lsls	r1, r5
 800a97a:	ea31 0303 	bics.w	r3, r1, r3
 800a97e:	4460      	add	r0, ip
 800a980:	ebab 0b0c 	sub.w	fp, fp, ip
 800a984:	f89d c014 	ldrb.w	ip, [sp, #20]
 800a988:	d006      	beq.n	800a998 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800a98a:	f1bc 0f00 	cmp.w	ip, #0
 800a98e:	d106      	bne.n	800a99e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800a990:	9200      	str	r2, [sp, #0]
 800a992:	4633      	mov	r3, r6
 800a994:	4a5e      	ldr	r2, [pc, #376]	; (800ab10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800a996:	e005      	b.n	800a9a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800a998:	f1bc 0f00 	cmp.w	ip, #0
 800a99c:	d022      	beq.n	800a9e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x168>
 800a99e:	9200      	str	r2, [sp, #0]
 800a9a0:	4633      	mov	r3, r6
 800a9a2:	464a      	mov	r2, r9
 800a9a4:	4659      	mov	r1, fp
 800a9a6:	f005 f967 	bl	800fc78 <snprintf>
 800a9aa:	4583      	cmp	fp, r0
 800a9ac:	bfa2      	ittt	ge
 800a9ae:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a9b2:	18c0      	addge	r0, r0, r3
 800a9b4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a9b8:	8aa3      	ldrh	r3, [r4, #20]
 800a9ba:	fa23 f30a 	lsr.w	r3, r3, sl
 800a9be:	f013 0303 	ands.w	r3, r3, #3
 800a9c2:	d013      	beq.n	800a9ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>
 800a9c4:	4a55      	ldr	r2, [pc, #340]	; (800ab1c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800a9c6:	4956      	ldr	r1, [pc, #344]	; (800ab20 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800a9c8:	2b02      	cmp	r3, #2
 800a9ca:	bf08      	it	eq
 800a9cc:	460a      	moveq	r2, r1
 800a9ce:	3b01      	subs	r3, #1
 800a9d0:	4639      	mov	r1, r7
 800a9d2:	bf18      	it	ne
 800a9d4:	2301      	movne	r3, #1
 800a9d6:	a803      	add	r0, sp, #12
 800a9d8:	f7ff fdbe 	bl	800a558 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a9dc:	3501      	adds	r5, #1
 800a9de:	3712      	adds	r7, #18
 800a9e0:	3610      	adds	r6, #16
 800a9e2:	e764      	b.n	800a8ae <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800a9e4:	9200      	str	r2, [sp, #0]
 800a9e6:	4633      	mov	r3, r6
 800a9e8:	4a48      	ldr	r2, [pc, #288]	; (800ab0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800a9ea:	e7db      	b.n	800a9a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800a9ec:	4a4d      	ldr	r2, [pc, #308]	; (800ab24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800a9ee:	e7ee      	b.n	800a9ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x152>
 800a9f0:	6861      	ldr	r1, [r4, #4]
 800a9f2:	fa0b f305 	lsl.w	r3, fp, r5
 800a9f6:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800a9fa:	438b      	bics	r3, r1
 800a9fc:	bf0c      	ite	eq
 800a9fe:	2301      	moveq	r3, #1
 800aa00:	2300      	movne	r3, #0
 800aa02:	4631      	mov	r1, r6
 800aa04:	2a00      	cmp	r2, #0
 800aa06:	bf0c      	ite	eq
 800aa08:	464a      	moveq	r2, r9
 800aa0a:	4652      	movne	r2, sl
 800aa0c:	a803      	add	r0, sp, #12
 800aa0e:	f7ff fda3 	bl	800a558 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800aa12:	3501      	adds	r5, #1
 800aa14:	3612      	adds	r6, #18
 800aa16:	e768      	b.n	800a8ea <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800aa18:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800aa1c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aa20:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800aa24:	42a9      	cmp	r1, r5
 800aa26:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800aa2a:	d21e      	bcs.n	800aa6a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ee>
 800aa2c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800aa30:	9803      	ldr	r0, [sp, #12]
 800aa32:	40ba      	lsls	r2, r7
 800aa34:	ea32 0c0c 	bics.w	ip, r2, ip
 800aa38:	4408      	add	r0, r1
 800aa3a:	eba5 0501 	sub.w	r5, r5, r1
 800aa3e:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800aa42:	d004      	beq.n	800aa4e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800aa44:	b921      	cbnz	r1, 800aa50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800aa46:	9300      	str	r3, [sp, #0]
 800aa48:	465a      	mov	r2, fp
 800aa4a:	4633      	mov	r3, r6
 800aa4c:	e003      	b.n	800aa56 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1da>
 800aa4e:	b179      	cbz	r1, 800aa70 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f4>
 800aa50:	9300      	str	r3, [sp, #0]
 800aa52:	4633      	mov	r3, r6
 800aa54:	4a24      	ldr	r2, [pc, #144]	; (800aae8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800aa56:	4629      	mov	r1, r5
 800aa58:	f005 f90e 	bl	800fc78 <snprintf>
 800aa5c:	4285      	cmp	r5, r0
 800aa5e:	bfa2      	ittt	ge
 800aa60:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800aa64:	18c0      	addge	r0, r0, r3
 800aa66:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800aa6a:	3701      	adds	r7, #1
 800aa6c:	3612      	adds	r6, #18
 800aa6e:	e74c      	b.n	800a90a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800aa70:	9300      	str	r3, [sp, #0]
 800aa72:	4652      	mov	r2, sl
 800aa74:	4633      	mov	r3, r6
 800aa76:	e7ee      	b.n	800aa56 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1da>
 800aa78:	b34a      	cbz	r2, 800aace <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x252>
 800aa7a:	3b00      	subs	r3, #0
 800aa7c:	bf18      	it	ne
 800aa7e:	2301      	movne	r3, #1
 800aa80:	4a19      	ldr	r2, [pc, #100]	; (800aae8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>)
 800aa82:	9300      	str	r3, [sp, #0]
 800aa84:	4b24      	ldr	r3, [pc, #144]	; (800ab18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800aa86:	4621      	mov	r1, r4
 800aa88:	f005 f8f6 	bl	800fc78 <snprintf>
 800aa8c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aa90:	4284      	cmp	r4, r0
 800aa92:	bfa4      	itt	ge
 800aa94:	181b      	addge	r3, r3, r0
 800aa96:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800aa9a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aa9e:	b17b      	cbz	r3, 800aac0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x244>
 800aaa0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aaa4:	9b03      	ldr	r3, [sp, #12]
 800aaa6:	4413      	add	r3, r2
 800aaa8:	227d      	movs	r2, #125	; 0x7d
 800aaaa:	f803 2c01 	strb.w	r2, [r3, #-1]
 800aaae:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aab2:	9903      	ldr	r1, [sp, #12]
 800aab4:	54ca      	strb	r2, [r1, r3]
 800aab6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aaba:	3301      	adds	r3, #1
 800aabc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800aac0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aac4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800aac6:	601a      	str	r2, [r3, #0]
 800aac8:	b007      	add	sp, #28
 800aaca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aace:	2301      	movs	r3, #1
 800aad0:	4a0e      	ldr	r2, [pc, #56]	; (800ab0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800aad2:	9300      	str	r3, [sp, #0]
 800aad4:	4b10      	ldr	r3, [pc, #64]	; (800ab18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800aad6:	e7d6      	b.n	800aa86 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20a>
 800aad8:	080131ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, ip, sp}
 800aadc:	0801389a 	stmdaeq	r1, {r1, r3, r4, r7, fp, ip, sp}
 800aae0:	080137d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, ip, sp}
 800aae4:	20000cd8 	ldrdcs	r0, [r0], -r8
 800aae8:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800aaec:	080131a8 	stmdaeq	r1, {r3, r5, r7, r8, ip, sp}
 800aaf0:	08013888 	stmdaeq	r1, {r3, r7, fp, ip, sp}
 800aaf4:	08013191 	stmdaeq	r1, {r0, r4, r7, r8, ip, sp}
 800aaf8:	08013818 	stmdaeq	r1, {r3, r4, fp, ip, sp}
 800aafc:	0801318d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, sp}
 800ab00:	08013189 	stmdaeq	r1, {r0, r3, r7, r8, ip, sp}
 800ab04:	0801319c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip, sp}
 800ab08:	080131b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, sp}
 800ab0c:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}
 800ab10:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800ab14:	08012080 	stmdaeq	r1, {r7, sp}
 800ab18:	08013872 	stmdaeq	r1, {r1, r4, r5, r6, fp, ip, sp}
 800ab1c:	0801317a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp}
 800ab20:	08013181 	stmdaeq	r1, {r0, r7, r8, ip, sp}
 800ab24:	08013174 	stmdaeq	r1, {r2, r4, r5, r6, r8, ip, sp}

0800ab28 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ab28:	b513      	push	{r0, r1, r4, lr}
 800ab2a:	6804      	ldr	r4, [r0, #0]
 800ab2c:	b914      	cbnz	r4, 800ab34 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ab2e:	601c      	str	r4, [r3, #0]
 800ab30:	b002      	add	sp, #8
 800ab32:	bd10      	pop	{r4, pc}
 800ab34:	9300      	str	r3, [sp, #0]
 800ab36:	4613      	mov	r3, r2
 800ab38:	460a      	mov	r2, r1
 800ab3a:	2100      	movs	r1, #0
 800ab3c:	f7ff fe9e 	bl	800a87c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ab40:	e7f6      	b.n	800ab30 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800ab44 <E131Params::Set(unsigned int)>:
 800ab44:	6843      	ldr	r3, [r0, #4]
 800ab46:	2b00      	cmp	r3, #0
 800ab48:	d037      	beq.n	800abba <E131Params::Set(unsigned int)+0x76>
 800ab4a:	4b1c      	ldr	r3, [pc, #112]	; (800abbc <E131Params::Set(unsigned int)+0x78>)
 800ab4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab50:	681a      	ldr	r2, [r3, #0]
 800ab52:	4b1b      	ldr	r3, [pc, #108]	; (800abc0 <E131Params::Set(unsigned int)+0x7c>)
 800ab54:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800ab58:	681f      	ldr	r7, [r3, #0]
 800ab5a:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800ab5e:	2300      	movs	r3, #0
 800ab60:	f04f 090c 	mov.w	r9, #12
 800ab64:	f100 040e 	add.w	r4, r0, #14
 800ab68:	f202 5861 	addw	r8, r2, #1377	; 0x561
 800ab6c:	429f      	cmp	r7, r3
 800ab6e:	6845      	ldr	r5, [r0, #4]
 800ab70:	d10a      	bne.n	800ab88 <E131Params::Set(unsigned int)+0x44>
 800ab72:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800ab76:	f8c2 3510 	str.w	r3, [r2, #1296]	; 0x510
 800ab7a:	04ab      	lsls	r3, r5, #18
 800ab7c:	bf44      	itt	mi
 800ab7e:	2301      	movmi	r3, #1
 800ab80:	f882 34f9 	strbmi.w	r3, [r2, #1273]	; 0x4f9
 800ab84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab88:	42cb      	cmn	r3, r1
 800ab8a:	d1f2      	bne.n	800ab72 <E131Params::Set(unsigned int)+0x2e>
 800ab8c:	fa0c f603 	lsl.w	r6, ip, r3
 800ab90:	43ae      	bics	r6, r5
 800ab92:	bf04      	itt	eq
 800ab94:	7826      	ldrbeq	r6, [r4, #0]
 800ab96:	f8c2 6550 	streq.w	r6, [r2, #1360]	; 0x550
 800ab9a:	fa0e f603 	lsl.w	r6, lr, r3
 800ab9e:	43ae      	bics	r6, r5
 800aba0:	d108      	bne.n	800abb4 <E131Params::Set(unsigned int)+0x70>
 800aba2:	7a26      	ldrb	r6, [r4, #8]
 800aba4:	1e75      	subs	r5, r6, #1
 800aba6:	b2ed      	uxtb	r5, r5
 800aba8:	2dc7      	cmp	r5, #199	; 0xc7
 800abaa:	bf9c      	itt	ls
 800abac:	fb09 f503 	mulls.w	r5, r9, r3
 800abb0:	f808 6005 	strbls.w	r6, [r8, r5]
 800abb4:	3301      	adds	r3, #1
 800abb6:	3401      	adds	r4, #1
 800abb8:	e7d8      	b.n	800ab6c <E131Params::Set(unsigned int)+0x28>
 800abba:	4770      	bx	lr
 800abbc:	20000cd0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800abc0:	20000cd8 	ldrdcs	r0, [r0], -r8

0800abc4 <E131Params::Dump()>:
 800abc4:	4770      	bx	lr

0800abc6 <uuid_unparse_x>:
 800abc6:	4603      	mov	r3, r0
 800abc8:	b530      	push	{r4, r5, lr}
 800abca:	4608      	mov	r0, r1
 800abcc:	4611      	mov	r1, r2
 800abce:	681a      	ldr	r2, [r3, #0]
 800abd0:	b08f      	sub	sp, #60	; 0x3c
 800abd2:	ba12      	rev	r2, r2
 800abd4:	920a      	str	r2, [sp, #40]	; 0x28
 800abd6:	889a      	ldrh	r2, [r3, #4]
 800abd8:	891c      	ldrh	r4, [r3, #8]
 800abda:	ba52      	rev16	r2, r2
 800abdc:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800abe0:	88da      	ldrh	r2, [r3, #6]
 800abe2:	ba64      	rev16	r4, r4
 800abe4:	ba52      	rev16	r2, r2
 800abe6:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800abea:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800abee:	f103 020a 	add.w	r2, r3, #10
 800abf2:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800abf6:	3310      	adds	r3, #16
 800abf8:	4293      	cmp	r3, r2
 800abfa:	d122      	bne.n	800ac42 <uuid_unparse_x+0x7c>
 800abfc:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800ac00:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800ac04:	9208      	str	r2, [sp, #32]
 800ac06:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800ac0a:	0a1b      	lsrs	r3, r3, #8
 800ac0c:	9207      	str	r2, [sp, #28]
 800ac0e:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800ac12:	9301      	str	r3, [sp, #4]
 800ac14:	9206      	str	r2, [sp, #24]
 800ac16:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800ac1a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800ac1e:	9205      	str	r2, [sp, #20]
 800ac20:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800ac24:	9300      	str	r3, [sp, #0]
 800ac26:	9204      	str	r2, [sp, #16]
 800ac28:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800ac2c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800ac30:	9203      	str	r2, [sp, #12]
 800ac32:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800ac36:	9202      	str	r2, [sp, #8]
 800ac38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ac3a:	f005 f805 	bl	800fc48 <sprintf>
 800ac3e:	b00f      	add	sp, #60	; 0x3c
 800ac40:	bd30      	pop	{r4, r5, pc}
 800ac42:	f812 5b01 	ldrb.w	r5, [r2], #1
 800ac46:	f804 5f01 	strb.w	r5, [r4, #1]!
 800ac4a:	e7d5      	b.n	800abf8 <uuid_unparse_x+0x32>

0800ac4c <uuid_unparse>:
 800ac4c:	4a01      	ldr	r2, [pc, #4]	; (800ac54 <uuid_unparse+0x8>)
 800ac4e:	f7ff bfba 	b.w	800abc6 <uuid_unparse_x>
 800ac52:	bf00      	nop
 800ac54:	080131e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, ip, sp}

0800ac58 <DmxSend::~DmxSend()>:
 800ac58:	4770      	bx	lr
	...

0800ac5c <DmxSend::Start(unsigned int)>:
 800ac5c:	2301      	movs	r3, #1
 800ac5e:	b430      	push	{r4, r5}
 800ac60:	4c08      	ldr	r4, [pc, #32]	; (800ac84 <DmxSend::Start(unsigned int)+0x28>)
 800ac62:	fa03 f001 	lsl.w	r0, r3, r1
 800ac66:	7822      	ldrb	r2, [r4, #0]
 800ac68:	ea30 0502 	bics.w	r5, r0, r2
 800ac6c:	d007      	beq.n	800ac7e <DmxSend::Start(unsigned int)+0x22>
 800ac6e:	4302      	orrs	r2, r0
 800ac70:	4805      	ldr	r0, [pc, #20]	; (800ac88 <DmxSend::Start(unsigned int)+0x2c>)
 800ac72:	7022      	strb	r2, [r4, #0]
 800ac74:	6800      	ldr	r0, [r0, #0]
 800ac76:	2200      	movs	r2, #0
 800ac78:	bc30      	pop	{r4, r5}
 800ac7a:	f000 bccf 	b.w	800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800ac7e:	bc30      	pop	{r4, r5}
 800ac80:	4770      	bx	lr
 800ac82:	bf00      	nop
 800ac84:	20000cdc 	ldrdcs	r0, [r0], -ip
 800ac88:	2000110c 	andcs	r1, r0, ip, lsl #2

0800ac8c <DmxSend::Stop(unsigned int)>:
 800ac8c:	2201      	movs	r2, #1
 800ac8e:	b410      	push	{r4}
 800ac90:	4809      	ldr	r0, [pc, #36]	; (800acb8 <DmxSend::Stop(unsigned int)+0x2c>)
 800ac92:	408a      	lsls	r2, r1
 800ac94:	7803      	ldrb	r3, [r0, #0]
 800ac96:	ea03 0402 	and.w	r4, r3, r2
 800ac9a:	439a      	bics	r2, r3
 800ac9c:	d109      	bne.n	800acb2 <DmxSend::Stop(unsigned int)+0x26>
 800ac9e:	ea23 0304 	bic.w	r3, r3, r4
 800aca2:	7003      	strb	r3, [r0, #0]
 800aca4:	2300      	movs	r3, #0
 800aca6:	4805      	ldr	r0, [pc, #20]	; (800acbc <DmxSend::Stop(unsigned int)+0x30>)
 800aca8:	461a      	mov	r2, r3
 800acaa:	6800      	ldr	r0, [r0, #0]
 800acac:	bc10      	pop	{r4}
 800acae:	f000 bcb5 	b.w	800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800acb2:	bc10      	pop	{r4}
 800acb4:	4770      	bx	lr
 800acb6:	bf00      	nop
 800acb8:	20000cdc 	ldrdcs	r0, [r0], -ip
 800acbc:	2000110c 	andcs	r1, r0, ip, lsl #2

0800acc0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800acc0:	b11b      	cbz	r3, 800acca <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800acc2:	4802      	ldr	r0, [pc, #8]	; (800accc <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800acc4:	6800      	ldr	r0, [r0, #0]
 800acc6:	f000 be09 	b.w	800b8dc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800acca:	4770      	bx	lr
 800accc:	2000110c 	andcs	r1, r0, ip, lsl #2

0800acd0 <DmxSend::Blackout(bool)>:
 800acd0:	4b01      	ldr	r3, [pc, #4]	; (800acd8 <DmxSend::Blackout(bool)+0x8>)
 800acd2:	6818      	ldr	r0, [r3, #0]
 800acd4:	f000 be28 	b.w	800b928 <Dmx::Blackout()>
 800acd8:	2000110c 	andcs	r1, r0, ip, lsl #2

0800acdc <DmxSend::FullOn()>:
 800acdc:	4b01      	ldr	r3, [pc, #4]	; (800ace4 <DmxSend::FullOn()+0x8>)
 800acde:	6818      	ldr	r0, [r3, #0]
 800ace0:	f000 be4a 	b.w	800b978 <Dmx::FullOn()>
 800ace4:	2000110c 	andcs	r1, r0, ip, lsl #2

0800ace8 <DmxSend::Print()>:
 800ace8:	b510      	push	{r4, lr}
 800acea:	4c0e      	ldr	r4, [pc, #56]	; (800ad24 <DmxSend::Print()+0x3c>)
 800acec:	480e      	ldr	r0, [pc, #56]	; (800ad28 <DmxSend::Print()+0x40>)
 800acee:	f004 ff9b 	bl	800fc28 <printf>
 800acf2:	6823      	ldr	r3, [r4, #0]
 800acf4:	480d      	ldr	r0, [pc, #52]	; (800ad2c <DmxSend::Print()+0x44>)
 800acf6:	6819      	ldr	r1, [r3, #0]
 800acf8:	f004 ff96 	bl	800fc28 <printf>
 800acfc:	6823      	ldr	r3, [r4, #0]
 800acfe:	480c      	ldr	r0, [pc, #48]	; (800ad30 <DmxSend::Print()+0x48>)
 800ad00:	6859      	ldr	r1, [r3, #4]
 800ad02:	f004 ff91 	bl	800fc28 <printf>
 800ad06:	6823      	ldr	r3, [r4, #0]
 800ad08:	490a      	ldr	r1, [pc, #40]	; (800ad34 <DmxSend::Print()+0x4c>)
 800ad0a:	689b      	ldr	r3, [r3, #8]
 800ad0c:	480a      	ldr	r0, [pc, #40]	; (800ad38 <DmxSend::Print()+0x50>)
 800ad0e:	fbb1 f1f3 	udiv	r1, r1, r3
 800ad12:	f004 ff89 	bl	800fc28 <printf>
 800ad16:	6823      	ldr	r3, [r4, #0]
 800ad18:	4808      	ldr	r0, [pc, #32]	; (800ad3c <DmxSend::Print()+0x54>)
 800ad1a:	8a19      	ldrh	r1, [r3, #16]
 800ad1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad20:	f004 bf82 	b.w	800fc28 <printf>
 800ad24:	2000110c 	andcs	r1, r0, ip, lsl #2
 800ad28:	08013212 	stmdaeq	r1, {r1, r4, r9, ip, sp}
 800ad2c:	0801321c 	stmdaeq	r1, {r2, r3, r4, r9, ip, sp}
 800ad30:	08013230 	stmdaeq	r1, {r4, r5, r9, ip, sp}
 800ad34:	000f4240 	andeq	r4, pc, r0, asr #4
 800ad38:	08013244 	stmdaeq	r1, {r2, r6, r9, ip, sp}
 800ad3c:	08013258 	stmdaeq	r1, {r3, r4, r6, r9, ip, sp}

0800ad40 <DmxSend::~DmxSend()>:
 800ad40:	b510      	push	{r4, lr}
 800ad42:	4604      	mov	r4, r0
 800ad44:	f004 fc7c 	bl	800f640 <operator delete(void*)>
 800ad48:	4620      	mov	r0, r4
 800ad4a:	bd10      	pop	{r4, pc}

0800ad4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800ad4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad4e:	88c6      	ldrh	r6, [r0, #6]
 800ad50:	8885      	ldrh	r5, [r0, #4]
 800ad52:	42ae      	cmp	r6, r5
 800ad54:	d216      	bcs.n	800ad84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800ad56:	4604      	mov	r4, r0
 800ad58:	6800      	ldr	r0, [r0, #0]
 800ad5a:	1bad      	subs	r5, r5, r6
 800ad5c:	4430      	add	r0, r6
 800ad5e:	7a26      	ldrb	r6, [r4, #8]
 800ad60:	b923      	cbnz	r3, 800ad6c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800ad62:	b926      	cbnz	r6, 800ad6e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800ad64:	9200      	str	r2, [sp, #0]
 800ad66:	460b      	mov	r3, r1
 800ad68:	4a09      	ldr	r2, [pc, #36]	; (800ad90 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800ad6a:	e003      	b.n	800ad74 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ad6c:	b166      	cbz	r6, 800ad88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800ad6e:	460b      	mov	r3, r1
 800ad70:	9200      	str	r2, [sp, #0]
 800ad72:	4a08      	ldr	r2, [pc, #32]	; (800ad94 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800ad74:	4629      	mov	r1, r5
 800ad76:	f004 ff7f 	bl	800fc78 <snprintf>
 800ad7a:	4285      	cmp	r5, r0
 800ad7c:	bfa2      	ittt	ge
 800ad7e:	88e3      	ldrhge	r3, [r4, #6]
 800ad80:	181b      	addge	r3, r3, r0
 800ad82:	80e3      	strhge	r3, [r4, #6]
 800ad84:	b002      	add	sp, #8
 800ad86:	bd70      	pop	{r4, r5, r6, pc}
 800ad88:	9200      	str	r2, [sp, #0]
 800ad8a:	460b      	mov	r3, r1
 800ad8c:	4a02      	ldr	r2, [pc, #8]	; (800ad98 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ad8e:	e7f1      	b.n	800ad74 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ad90:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800ad94:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800ad98:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}

0800ad9c <DmxParams::DmxParams(DmxParamsStore*)>:
 800ad9c:	6001      	str	r1, [r0, #0]
 800ad9e:	2100      	movs	r1, #0
 800ada0:	4a03      	ldr	r2, [pc, #12]	; (800adb0 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800ada2:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ada6:	f64f 7228 	movw	r2, #65320	; 0xff28
 800adaa:	8182      	strh	r2, [r0, #12]
 800adac:	4770      	bx	lr
 800adae:	bf00      	nop
 800adb0:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800adb4 <DmxParams::Load()>:
 800adb4:	b508      	push	{r3, lr}
 800adb6:	2300      	movs	r3, #0
 800adb8:	4601      	mov	r1, r0
 800adba:	6043      	str	r3, [r0, #4]
 800adbc:	6800      	ldr	r0, [r0, #0]
 800adbe:	b120      	cbz	r0, 800adca <DmxParams::Load()+0x16>
 800adc0:	6803      	ldr	r3, [r0, #0]
 800adc2:	3104      	adds	r1, #4
 800adc4:	68db      	ldr	r3, [r3, #12]
 800adc6:	4798      	blx	r3
 800adc8:	2001      	movs	r0, #1
 800adca:	bd08      	pop	{r3, pc}

0800adcc <DmxParams::Load(char const*, unsigned int)>:
 800adcc:	6803      	ldr	r3, [r0, #0]
 800adce:	b1d3      	cbz	r3, 800ae06 <DmxParams::Load(char const*, unsigned int)+0x3a>
 800add0:	2300      	movs	r3, #0
 800add2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800add4:	460d      	mov	r5, r1
 800add6:	4616      	mov	r6, r2
 800add8:	4604      	mov	r4, r0
 800adda:	6043      	str	r3, [r0, #4]
 800addc:	4602      	mov	r2, r0
 800adde:	490a      	ldr	r1, [pc, #40]	; (800ae08 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800ade0:	4668      	mov	r0, sp
 800ade2:	f003 ff07 	bl	800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ade6:	4632      	mov	r2, r6
 800ade8:	4629      	mov	r1, r5
 800adea:	4668      	mov	r0, sp
 800adec:	f003 ff06 	bl	800ebfc <ReadConfigFile::Read(char const*, unsigned int)>
 800adf0:	4621      	mov	r1, r4
 800adf2:	f851 0b04 	ldr.w	r0, [r1], #4
 800adf6:	6803      	ldr	r3, [r0, #0]
 800adf8:	689b      	ldr	r3, [r3, #8]
 800adfa:	4798      	blx	r3
 800adfc:	4668      	mov	r0, sp
 800adfe:	f003 fefc 	bl	800ebfa <ReadConfigFile::~ReadConfigFile()>
 800ae02:	b002      	add	sp, #8
 800ae04:	bd70      	pop	{r4, r5, r6, pc}
 800ae06:	4770      	bx	lr
 800ae08:	0800aed9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, sp, pc}

0800ae0c <DmxParams::callbackFunction(char const*)>:
 800ae0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae0e:	460d      	mov	r5, r1
 800ae10:	4604      	mov	r4, r0
 800ae12:	492d      	ldr	r1, [pc, #180]	; (800aec8 <DmxParams::callbackFunction(char const*)+0xbc>)
 800ae14:	4628      	mov	r0, r5
 800ae16:	f10d 0206 	add.w	r2, sp, #6
 800ae1a:	f003 ff7d 	bl	800ed18 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ae1e:	b988      	cbnz	r0, 800ae44 <DmxParams::callbackFunction(char const*)+0x38>
 800ae20:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ae24:	6863      	ldr	r3, [r4, #4]
 800ae26:	2a5b      	cmp	r2, #91	; 0x5b
 800ae28:	d907      	bls.n	800ae3a <DmxParams::callbackFunction(char const*)+0x2e>
 800ae2a:	2ab0      	cmp	r2, #176	; 0xb0
 800ae2c:	d005      	beq.n	800ae3a <DmxParams::callbackFunction(char const*)+0x2e>
 800ae2e:	8122      	strh	r2, [r4, #8]
 800ae30:	f043 0301 	orr.w	r3, r3, #1
 800ae34:	6063      	str	r3, [r4, #4]
 800ae36:	b003      	add	sp, #12
 800ae38:	bd30      	pop	{r4, r5, pc}
 800ae3a:	22b0      	movs	r2, #176	; 0xb0
 800ae3c:	f023 0301 	bic.w	r3, r3, #1
 800ae40:	8122      	strh	r2, [r4, #8]
 800ae42:	e7f7      	b.n	800ae34 <DmxParams::callbackFunction(char const*)+0x28>
 800ae44:	4628      	mov	r0, r5
 800ae46:	4921      	ldr	r1, [pc, #132]	; (800aecc <DmxParams::callbackFunction(char const*)+0xc0>)
 800ae48:	f10d 0206 	add.w	r2, sp, #6
 800ae4c:	f003 ff64 	bl	800ed18 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ae50:	b968      	cbnz	r0, 800ae6e <DmxParams::callbackFunction(char const*)+0x62>
 800ae52:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ae56:	6863      	ldr	r3, [r4, #4]
 800ae58:	2a0c      	cmp	r2, #12
 800ae5a:	bf93      	iteet	ls
 800ae5c:	220c      	movls	r2, #12
 800ae5e:	8162      	strhhi	r2, [r4, #10]
 800ae60:	f043 0302 	orrhi.w	r3, r3, #2
 800ae64:	8162      	strhls	r2, [r4, #10]
 800ae66:	bf98      	it	ls
 800ae68:	f023 0302 	bicls.w	r3, r3, #2
 800ae6c:	e7e2      	b.n	800ae34 <DmxParams::callbackFunction(char const*)+0x28>
 800ae6e:	4628      	mov	r0, r5
 800ae70:	4917      	ldr	r1, [pc, #92]	; (800aed0 <DmxParams::callbackFunction(char const*)+0xc4>)
 800ae72:	f10d 0205 	add.w	r2, sp, #5
 800ae76:	f003 ff6d 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ae7a:	b950      	cbnz	r0, 800ae92 <DmxParams::callbackFunction(char const*)+0x86>
 800ae7c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800ae80:	6863      	ldr	r3, [r4, #4]
 800ae82:	2a28      	cmp	r2, #40	; 0x28
 800ae84:	7322      	strb	r2, [r4, #12]
 800ae86:	bf14      	ite	ne
 800ae88:	f043 0304 	orrne.w	r3, r3, #4
 800ae8c:	f023 0304 	biceq.w	r3, r3, #4
 800ae90:	e7d0      	b.n	800ae34 <DmxParams::callbackFunction(char const*)+0x28>
 800ae92:	4628      	mov	r0, r5
 800ae94:	490f      	ldr	r1, [pc, #60]	; (800aed4 <DmxParams::callbackFunction(char const*)+0xc8>)
 800ae96:	f10d 0206 	add.w	r2, sp, #6
 800ae9a:	f003 ff3d 	bl	800ed18 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ae9e:	2800      	cmp	r0, #0
 800aea0:	d1c9      	bne.n	800ae36 <DmxParams::callbackFunction(char const*)+0x2a>
 800aea2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aea6:	6863      	ldr	r3, [r4, #4]
 800aea8:	1e91      	subs	r1, r2, #2
 800aeaa:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800aeae:	bf2f      	iteee	cs
 800aeb0:	22ff      	movcs	r2, #255	; 0xff
 800aeb2:	0852      	lsrcc	r2, r2, #1
 800aeb4:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800aeb8:	7362      	strbcc	r2, [r4, #13]
 800aeba:	bf32      	itee	cc
 800aebc:	f043 0308 	orrcc.w	r3, r3, #8
 800aec0:	7362      	strbcs	r2, [r4, #13]
 800aec2:	f023 0308 	biccs.w	r3, r3, #8
 800aec6:	e7b5      	b.n	800ae34 <DmxParams::callbackFunction(char const*)+0x28>
 800aec8:	080132a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp}
 800aecc:	080132c8 	stmdaeq	r1, {r3, r6, r7, r9, ip, sp}
 800aed0:	080132bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, ip, sp}
 800aed4:	080132af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, ip, sp}

0800aed8 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800aed8:	f7ff bf98 	b.w	800ae0c <DmxParams::callbackFunction(char const*)>

0800aedc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800aedc:	b570      	push	{r4, r5, r6, lr}
 800aede:	4604      	mov	r4, r0
 800aee0:	4615      	mov	r5, r2
 800aee2:	461e      	mov	r6, r3
 800aee4:	b086      	sub	sp, #24
 800aee6:	3004      	adds	r0, #4
 800aee8:	b369      	cbz	r1, 800af46 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800aeea:	220a      	movs	r2, #10
 800aeec:	f004 fc6b 	bl	800f7c6 <memmove>
 800aef0:	462a      	mov	r2, r5
 800aef2:	4633      	mov	r3, r6
 800aef4:	4932      	ldr	r1, [pc, #200]	; (800afc0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800aef6:	a803      	add	r0, sp, #12
 800aef8:	f003 fddc 	bl	800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800aefc:	6863      	ldr	r3, [r4, #4]
 800aefe:	8922      	ldrh	r2, [r4, #8]
 800af00:	4930      	ldr	r1, [pc, #192]	; (800afc4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800af02:	f003 0301 	and.w	r3, r3, #1
 800af06:	a803      	add	r0, sp, #12
 800af08:	f7ff ff20 	bl	800ad4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800af0c:	6863      	ldr	r3, [r4, #4]
 800af0e:	8962      	ldrh	r2, [r4, #10]
 800af10:	492d      	ldr	r1, [pc, #180]	; (800afc8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800af12:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800af16:	a803      	add	r0, sp, #12
 800af18:	f7ff ff18 	bl	800ad4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800af1c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af20:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800af24:	7b23      	ldrb	r3, [r4, #12]
 800af26:	42aa      	cmp	r2, r5
 800af28:	6861      	ldr	r1, [r4, #4]
 800af2a:	d221      	bcs.n	800af70 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800af2c:	9803      	ldr	r0, [sp, #12]
 800af2e:	0749      	lsls	r1, r1, #29
 800af30:	4410      	add	r0, r2
 800af32:	eba5 0502 	sub.w	r5, r5, r2
 800af36:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800af3a:	d40b      	bmi.n	800af54 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800af3c:	b95a      	cbnz	r2, 800af56 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800af3e:	9300      	str	r3, [sp, #0]
 800af40:	4a22      	ldr	r2, [pc, #136]	; (800afcc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800af42:	4b23      	ldr	r3, [pc, #140]	; (800afd0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800af44:	e00a      	b.n	800af5c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800af46:	6823      	ldr	r3, [r4, #0]
 800af48:	4601      	mov	r1, r0
 800af4a:	681a      	ldr	r2, [r3, #0]
 800af4c:	4618      	mov	r0, r3
 800af4e:	68d2      	ldr	r2, [r2, #12]
 800af50:	4790      	blx	r2
 800af52:	e7cd      	b.n	800aef0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800af54:	b37a      	cbz	r2, 800afb6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800af56:	9300      	str	r3, [sp, #0]
 800af58:	4a1e      	ldr	r2, [pc, #120]	; (800afd4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800af5a:	4b1d      	ldr	r3, [pc, #116]	; (800afd0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800af5c:	4629      	mov	r1, r5
 800af5e:	f004 fe8b 	bl	800fc78 <snprintf>
 800af62:	4285      	cmp	r5, r0
 800af64:	bfa2      	ittt	ge
 800af66:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800af6a:	18c0      	addge	r0, r0, r3
 800af6c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800af70:	7b62      	ldrb	r2, [r4, #13]
 800af72:	6863      	ldr	r3, [r4, #4]
 800af74:	3201      	adds	r2, #1
 800af76:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800af7a:	4917      	ldr	r1, [pc, #92]	; (800afd8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800af7c:	0052      	lsls	r2, r2, #1
 800af7e:	a803      	add	r0, sp, #12
 800af80:	f7ff fee4 	bl	800ad4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800af84:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800af88:	b17b      	cbz	r3, 800afaa <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800af8a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af8e:	9b03      	ldr	r3, [sp, #12]
 800af90:	4413      	add	r3, r2
 800af92:	227d      	movs	r2, #125	; 0x7d
 800af94:	f803 2c01 	strb.w	r2, [r3, #-1]
 800af98:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af9c:	9903      	ldr	r1, [sp, #12]
 800af9e:	54ca      	strb	r2, [r1, r3]
 800afa0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800afa4:	3301      	adds	r3, #1
 800afa6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800afaa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800afae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800afb0:	601a      	str	r2, [r3, #0]
 800afb2:	b006      	add	sp, #24
 800afb4:	bd70      	pop	{r4, r5, r6, pc}
 800afb6:	9300      	str	r3, [sp, #0]
 800afb8:	4a08      	ldr	r2, [pc, #32]	; (800afdc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800afba:	4b05      	ldr	r3, [pc, #20]	; (800afd0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800afbc:	e7ce      	b.n	800af5c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800afbe:	bf00      	nop
 800afc0:	080132d1 	stmdaeq	r1, {r0, r4, r6, r7, r9, ip, sp}
 800afc4:	080132a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp}
 800afc8:	080132c8 	stmdaeq	r1, {r3, r6, r7, r9, ip, sp}
 800afcc:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800afd0:	080132bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, ip, sp}
 800afd4:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800afd8:	080132af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, ip, sp}
 800afdc:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}

0800afe0 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800afe0:	b513      	push	{r0, r1, r4, lr}
 800afe2:	6804      	ldr	r4, [r0, #0]
 800afe4:	b914      	cbnz	r4, 800afec <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800afe6:	601c      	str	r4, [r3, #0]
 800afe8:	b002      	add	sp, #8
 800afea:	bd10      	pop	{r4, pc}
 800afec:	9300      	str	r3, [sp, #0]
 800afee:	4613      	mov	r3, r2
 800aff0:	460a      	mov	r2, r1
 800aff2:	2100      	movs	r1, #0
 800aff4:	f7ff ff72 	bl	800aedc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800aff8:	e7f6      	b.n	800afe8 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800affc <DmxParams::Set(Dmx*)>:
 800affc:	b538      	push	{r3, r4, r5, lr}
 800affe:	6843      	ldr	r3, [r0, #4]
 800b000:	4604      	mov	r4, r0
 800b002:	07d8      	lsls	r0, r3, #31
 800b004:	460d      	mov	r5, r1
 800b006:	d503      	bpl.n	800b010 <DmxParams::Set(Dmx*)+0x14>
 800b008:	4628      	mov	r0, r5
 800b00a:	8921      	ldrh	r1, [r4, #8]
 800b00c:	f000 fc42 	bl	800b894 <Dmx::SetDmxBreakTime(unsigned int)>
 800b010:	6863      	ldr	r3, [r4, #4]
 800b012:	0799      	lsls	r1, r3, #30
 800b014:	d503      	bpl.n	800b01e <DmxParams::Set(Dmx*)+0x22>
 800b016:	4628      	mov	r0, r5
 800b018:	8961      	ldrh	r1, [r4, #10]
 800b01a:	f000 fc45 	bl	800b8a8 <Dmx::SetDmxMabTime(unsigned int)>
 800b01e:	6863      	ldr	r3, [r4, #4]
 800b020:	075a      	lsls	r2, r3, #29
 800b022:	d507      	bpl.n	800b034 <DmxParams::Set(Dmx*)+0x38>
 800b024:	7b21      	ldrb	r1, [r4, #12]
 800b026:	b111      	cbz	r1, 800b02e <DmxParams::Set(Dmx*)+0x32>
 800b028:	4b08      	ldr	r3, [pc, #32]	; (800b04c <DmxParams::Set(Dmx*)+0x50>)
 800b02a:	fbb3 f1f1 	udiv	r1, r3, r1
 800b02e:	4628      	mov	r0, r5
 800b030:	f000 fc00 	bl	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b034:	6863      	ldr	r3, [r4, #4]
 800b036:	071b      	lsls	r3, r3, #28
 800b038:	d507      	bpl.n	800b04a <DmxParams::Set(Dmx*)+0x4e>
 800b03a:	7b61      	ldrb	r1, [r4, #13]
 800b03c:	4628      	mov	r0, r5
 800b03e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b042:	3101      	adds	r1, #1
 800b044:	0049      	lsls	r1, r1, #1
 800b046:	f000 bc39 	b.w	800b8bc <Dmx::SetDmxSlots(unsigned short)>
 800b04a:	bd38      	pop	{r3, r4, r5, pc}
 800b04c:	000f4240 	andeq	r4, pc, r0, asr #4

0800b050 <DmxParams::Dump()>:
 800b050:	4770      	bx	lr
	...

0800b054 <USART2_IRQHandler>:
 800b054:	b510      	push	{r4, lr}
 800b056:	f3bf 8f5f 	dmb	sy
 800b05a:	2408      	movs	r4, #8
 800b05c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 800b060:	498c      	ldr	r1, [pc, #560]	; (800b294 <USART2_IRQHandler+0x240>)
 800b062:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800b066:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800b06a:	f013 0f02 	tst.w	r3, #2
 800b06e:	4b8a      	ldr	r3, [pc, #552]	; (800b298 <USART2_IRQHandler+0x244>)
 800b070:	d016      	beq.n	800b0a0 <USART2_IRQHandler+0x4c>
 800b072:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800b076:	f020 0002 	bic.w	r0, r0, #2
 800b07a:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 800b07e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b082:	2200      	movs	r2, #0
 800b084:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b088:	2202      	movs	r2, #2
 800b08a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b08e:	2310      	movs	r3, #16
 800b090:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800b094:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b098:	2320      	movs	r3, #32
 800b09a:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b09e:	bd10      	pop	{r4, pc}
 800b0a0:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b0a4:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 800b0a8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b0ac:	280a      	cmp	r0, #10
 800b0ae:	f200 80ec 	bhi.w	800b28a <USART2_IRQHandler+0x236>
 800b0b2:	e8df f010 	tbh	[pc, r0, lsl #1]
 800b0b6:	00ea000b 	rsceq	r0, sl, fp
 800b0ba:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 800b0be:	005c0039 	subseq	r0, ip, r9, lsr r0
 800b0c2:	00870077 	addeq	r0, r7, r7, ror r0
 800b0c6:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 800b0ca:	210800ce 	smlabtcs	r8, lr, r0, r0
 800b0ce:	701a      	strb	r2, [r3, #0]
 800b0d0:	2201      	movs	r2, #1
 800b0d2:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b0d6:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b0da:	2208      	movs	r2, #8
 800b0dc:	4b6d      	ldr	r3, [pc, #436]	; (800b294 <USART2_IRQHandler+0x240>)
 800b0de:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b0e2:	f3bf 8f5f 	dmb	sy
 800b0e6:	e7da      	b.n	800b09e <USART2_IRQHandler+0x4a>
 800b0e8:	b11a      	cbz	r2, 800b0f2 <USART2_IRQHandler+0x9e>
 800b0ea:	2acc      	cmp	r2, #204	; 0xcc
 800b0ec:	d016      	beq.n	800b11c <USART2_IRQHandler+0xc8>
 800b0ee:	2200      	movs	r2, #0
 800b0f0:	e065      	b.n	800b1be <USART2_IRQHandler+0x16a>
 800b0f2:	701a      	strb	r2, [r3, #0]
 800b0f4:	2201      	movs	r2, #1
 800b0f6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b0fa:	4a68      	ldr	r2, [pc, #416]	; (800b29c <USART2_IRQHandler+0x248>)
 800b0fc:	6851      	ldr	r1, [r2, #4]
 800b0fe:	3101      	adds	r1, #1
 800b100:	6051      	str	r1, [r2, #4]
 800b102:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800b106:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 800b10a:	60d1      	str	r1, [r2, #12]
 800b10c:	2204      	movs	r2, #4
 800b10e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b112:	2210      	movs	r2, #16
 800b114:	4b5f      	ldr	r3, [pc, #380]	; (800b294 <USART2_IRQHandler+0x240>)
 800b116:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b11a:	e7de      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b11c:	701a      	strb	r2, [r3, #0]
 800b11e:	4a60      	ldr	r2, [pc, #384]	; (800b2a0 <USART2_IRQHandler+0x24c>)
 800b120:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b124:	2205      	movs	r2, #5
 800b126:	e7f2      	b.n	800b10e <USART2_IRQHandler+0xba>
 800b128:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b12c:	b288      	uxth	r0, r1
 800b12e:	541a      	strb	r2, [r3, r0]
 800b130:	1c4a      	adds	r2, r1, #1
 800b132:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800b136:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b13a:	d90b      	bls.n	800b154 <USART2_IRQHandler+0x100>
 800b13c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b140:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b144:	2200      	movs	r2, #0
 800b146:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b14a:	2210      	movs	r2, #16
 800b14c:	4b51      	ldr	r3, [pc, #324]	; (800b294 <USART2_IRQHandler+0x240>)
 800b14e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b152:	e7c2      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b154:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b158:	4850      	ldr	r0, [pc, #320]	; (800b29c <USART2_IRQHandler+0x248>)
 800b15a:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 800b15e:	68c3      	ldr	r3, [r0, #12]
 800b160:	60c1      	str	r1, [r0, #12]
 800b162:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 800b166:	3304      	adds	r3, #4
 800b168:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 800b16c:	e7b5      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b16e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800b172:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800b176:	541a      	strb	r2, [r3, r0]
 800b178:	1c41      	adds	r1, r0, #1
 800b17a:	3817      	subs	r0, #23
 800b17c:	b289      	uxth	r1, r1
 800b17e:	4422      	add	r2, r4
 800b180:	28e7      	cmp	r0, #231	; 0xe7
 800b182:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b186:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b18a:	d808      	bhi.n	800b19e <USART2_IRQHandler+0x14a>
 800b18c:	789a      	ldrb	r2, [r3, #2]
 800b18e:	428a      	cmp	r2, r1
 800b190:	d105      	bne.n	800b19e <USART2_IRQHandler+0x14a>
 800b192:	2206      	movs	r2, #6
 800b194:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b198:	2220      	movs	r2, #32
 800b19a:	4b3e      	ldr	r3, [pc, #248]	; (800b294 <USART2_IRQHandler+0x240>)
 800b19c:	e7bb      	b.n	800b116 <USART2_IRQHandler+0xc2>
 800b19e:	29ff      	cmp	r1, #255	; 0xff
 800b1a0:	d99b      	bls.n	800b0da <USART2_IRQHandler+0x86>
 800b1a2:	e7a4      	b.n	800b0ee <USART2_IRQHandler+0x9a>
 800b1a4:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b1a8:	545a      	strb	r2, [r3, r1]
 800b1aa:	3101      	adds	r1, #1
 800b1ac:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b1b0:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 800b1b4:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 800b1b8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b1bc:	2207      	movs	r2, #7
 800b1be:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1c2:	e78a      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b1c4:	2020      	movs	r0, #32
 800b1c6:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800b1ca:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800b1ce:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800b1d2:	541a      	strb	r2, [r3, r0]
 800b1d4:	1aa2      	subs	r2, r4, r2
 800b1d6:	b292      	uxth	r2, r2
 800b1d8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b1dc:	b912      	cbnz	r2, 800b1e4 <USART2_IRQHandler+0x190>
 800b1de:	785a      	ldrb	r2, [r3, #1]
 800b1e0:	2a01      	cmp	r2, #1
 800b1e2:	d003      	beq.n	800b1ec <USART2_IRQHandler+0x198>
 800b1e4:	2200      	movs	r2, #0
 800b1e6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1ea:	e780      	b.n	800b0ee <USART2_IRQHandler+0x9a>
 800b1ec:	3001      	adds	r0, #1
 800b1ee:	4a2d      	ldr	r2, [pc, #180]	; (800b2a4 <USART2_IRQHandler+0x250>)
 800b1f0:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 800b1f4:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 800b1f8:	6850      	ldr	r0, [r2, #4]
 800b1fa:	4a2b      	ldr	r2, [pc, #172]	; (800b2a8 <USART2_IRQHandler+0x254>)
 800b1fc:	6010      	str	r0, [r2, #0]
 800b1fe:	2210      	movs	r2, #16
 800b200:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 800b204:	e773      	b.n	800b0ee <USART2_IRQHandler+0x9a>
 800b206:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b20a:	2aaa      	cmp	r2, #170	; 0xaa
 800b20c:	545a      	strb	r2, [r3, r1]
 800b20e:	f101 0101 	add.w	r1, r1, #1
 800b212:	b289      	uxth	r1, r1
 800b214:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b218:	d002      	beq.n	800b220 <USART2_IRQHandler+0x1cc>
 800b21a:	2909      	cmp	r1, #9
 800b21c:	f47f af5d 	bne.w	800b0da <USART2_IRQHandler+0x86>
 800b220:	2200      	movs	r2, #0
 800b222:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b226:	2209      	movs	r2, #9
 800b228:	e7c9      	b.n	800b1be <USART2_IRQHandler+0x16a>
 800b22a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b22e:	545a      	strb	r2, [r3, r1]
 800b230:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800b234:	3101      	adds	r1, #1
 800b236:	3201      	adds	r2, #1
 800b238:	b292      	uxth	r2, r2
 800b23a:	2a0c      	cmp	r2, #12
 800b23c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b240:	d002      	beq.n	800b248 <USART2_IRQHandler+0x1f4>
 800b242:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b246:	e748      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b248:	2200      	movs	r2, #0
 800b24a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b24e:	220a      	movs	r2, #10
 800b250:	e7b5      	b.n	800b1be <USART2_IRQHandler+0x16a>
 800b252:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b256:	545a      	strb	r2, [r3, r1]
 800b258:	1c4a      	adds	r2, r1, #1
 800b25a:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800b25e:	b292      	uxth	r2, r2
 800b260:	3101      	adds	r1, #1
 800b262:	b289      	uxth	r1, r1
 800b264:	2904      	cmp	r1, #4
 800b266:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b26a:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800b26e:	f47f af34 	bne.w	800b0da <USART2_IRQHandler+0x86>
 800b272:	2100      	movs	r1, #0
 800b274:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b278:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b27c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b280:	4b08      	ldr	r3, [pc, #32]	; (800b2a4 <USART2_IRQHandler+0x250>)
 800b282:	685a      	ldr	r2, [r3, #4]
 800b284:	4b08      	ldr	r3, [pc, #32]	; (800b2a8 <USART2_IRQHandler+0x254>)
 800b286:	601a      	str	r2, [r3, #0]
 800b288:	e727      	b.n	800b0da <USART2_IRQHandler+0x86>
 800b28a:	2200      	movs	r2, #0
 800b28c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b290:	e795      	b.n	800b1be <USART2_IRQHandler+0x16a>
 800b292:	bf00      	nop
 800b294:	40010000 	andmi	r0, r1, r0
 800b298:	20000ce0 	andcs	r0, r0, r0, ror #25
 800b29c:	200010f8 	strdcs	r1, [r0], -r8
 800b2a0:	00cc0001 	sbceq	r0, ip, r1
 800b2a4:	e0001000 	and	r1, r0, r0
 800b2a8:	20001110 	andcs	r1, r0, r0, lsl r1

0800b2ac <TIMER1_IRQHandler>:
 800b2ac:	b538      	push	{r3, r4, r5, lr}
 800b2ae:	f3bf 8f5f 	dmb	sy
 800b2b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b2b6:	2008      	movs	r0, #8
 800b2b8:	4a24      	ldr	r2, [pc, #144]	; (800b34c <TIMER1_IRQHandler+0xa0>)
 800b2ba:	691c      	ldr	r4, [r3, #16]
 800b2bc:	4924      	ldr	r1, [pc, #144]	; (800b350 <TIMER1_IRQHandler+0xa4>)
 800b2be:	8813      	ldrh	r3, [r2, #0]
 800b2c0:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 800b2c4:	07a1      	lsls	r1, r4, #30
 800b2c6:	b29b      	uxth	r3, r3
 800b2c8:	d51d      	bpl.n	800b306 <TIMER1_IRQHandler+0x5a>
 800b2ca:	07dd      	lsls	r5, r3, #31
 800b2cc:	d50f      	bpl.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b2ce:	8813      	ldrh	r3, [r2, #0]
 800b2d0:	4d20      	ldr	r5, [pc, #128]	; (800b354 <TIMER1_IRQHandler+0xa8>)
 800b2d2:	b29b      	uxth	r3, r3
 800b2d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b2d8:	8013      	strh	r3, [r2, #0]
 800b2da:	2110      	movs	r1, #16
 800b2dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2e0:	2203      	movs	r2, #3
 800b2e2:	4628      	mov	r0, r5
 800b2e4:	f004 ffee 	bl	80102c4 <gpio_init>
 800b2e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2ec:	616b      	str	r3, [r5, #20]
 800b2ee:	4621      	mov	r1, r4
 800b2f0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b2f4:	f005 fac3 	bl	801087e <timer_interrupt_flag_clear>
 800b2f8:	2208      	movs	r2, #8
 800b2fa:	4b15      	ldr	r3, [pc, #84]	; (800b350 <TIMER1_IRQHandler+0xa4>)
 800b2fc:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b300:	f3bf 8f5f 	dmb	sy
 800b304:	bd38      	pop	{r3, r4, r5, pc}
 800b306:	0760      	lsls	r0, r4, #29
 800b308:	d509      	bpl.n	800b31e <TIMER1_IRQHandler+0x72>
 800b30a:	05d9      	lsls	r1, r3, #23
 800b30c:	d5ef      	bpl.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b30e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b312:	2203      	movs	r2, #3
 800b314:	2118      	movs	r1, #24
 800b316:	480f      	ldr	r0, [pc, #60]	; (800b354 <TIMER1_IRQHandler+0xa8>)
 800b318:	f004 ffd4 	bl	80102c4 <gpio_init>
 800b31c:	e7e7      	b.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b31e:	0722      	lsls	r2, r4, #28
 800b320:	d5e5      	bpl.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b322:	05db      	lsls	r3, r3, #23
 800b324:	d5e3      	bpl.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b326:	4b0c      	ldr	r3, [pc, #48]	; (800b358 <TIMER1_IRQHandler+0xac>)
 800b328:	2180      	movs	r1, #128	; 0x80
 800b32a:	69da      	ldr	r2, [r3, #28]
 800b32c:	480b      	ldr	r0, [pc, #44]	; (800b35c <TIMER1_IRQHandler+0xb0>)
 800b32e:	f022 0201 	bic.w	r2, r2, #1
 800b332:	61da      	str	r2, [r3, #28]
 800b334:	4a0a      	ldr	r2, [pc, #40]	; (800b360 <TIMER1_IRQHandler+0xb4>)
 800b336:	629a      	str	r2, [r3, #40]	; 0x28
 800b338:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800b33c:	621a      	str	r2, [r3, #32]
 800b33e:	69da      	ldr	r2, [r3, #28]
 800b340:	f042 0201 	orr.w	r2, r2, #1
 800b344:	61da      	str	r2, [r3, #28]
 800b346:	f005 fb39 	bl	80109bc <usart_dma_transmit_config>
 800b34a:	e7d0      	b.n	800b2ee <TIMER1_IRQHandler+0x42>
 800b34c:	20001108 	andcs	r1, r0, r8, lsl #2
 800b350:	40010000 	andmi	r0, r1, r0
 800b354:	40011000 	andmi	r1, r1, r0
 800b358:	40020000 	andmi	r0, r2, r0
 800b35c:	40004800 	andmi	r4, r0, r0, lsl #16
 800b360:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800b364 <TIMER2_IRQHandler>:
 800b364:	b508      	push	{r3, lr}
 800b366:	f3bf 8f5f 	dmb	sy
 800b36a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b36e:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800b372:	078b      	lsls	r3, r1, #30
 800b374:	d511      	bpl.n	800b39a <TIMER2_IRQHandler+0x36>
 800b376:	4b0c      	ldr	r3, [pc, #48]	; (800b3a8 <TIMER2_IRQHandler+0x44>)
 800b378:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b37c:	2a04      	cmp	r2, #4
 800b37e:	d10c      	bne.n	800b39a <TIMER2_IRQHandler+0x36>
 800b380:	2200      	movs	r2, #0
 800b382:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b386:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b38a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b38e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b392:	2210      	movs	r2, #16
 800b394:	4b05      	ldr	r3, [pc, #20]	; (800b3ac <TIMER2_IRQHandler+0x48>)
 800b396:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b39a:	4805      	ldr	r0, [pc, #20]	; (800b3b0 <TIMER2_IRQHandler+0x4c>)
 800b39c:	f005 fa6f 	bl	801087e <timer_interrupt_flag_clear>
 800b3a0:	f3bf 8f5f 	dmb	sy
 800b3a4:	bd08      	pop	{r3, pc}
 800b3a6:	bf00      	nop
 800b3a8:	20000ce0 	andcs	r0, r0, r0, ror #25
 800b3ac:	40010000 	andmi	r0, r1, r0
 800b3b0:	40000400 	andmi	r0, r0, r0, lsl #8

0800b3b4 <TIMER3_IRQHandler>:
 800b3b4:	b508      	push	{r3, lr}
 800b3b6:	f3bf 8f5f 	dmb	sy
 800b3ba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b3be:	4804      	ldr	r0, [pc, #16]	; (800b3d0 <TIMER3_IRQHandler+0x1c>)
 800b3c0:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800b3c4:	f005 fa5b 	bl	801087e <timer_interrupt_flag_clear>
 800b3c8:	f3bf 8f5f 	dmb	sy
 800b3cc:	bd08      	pop	{r3, pc}
 800b3ce:	bf00      	nop
 800b3d0:	40000800 	andmi	r0, r0, r0, lsl #16

0800b3d4 <TIMER6_IRQHandler>:
 800b3d4:	b508      	push	{r3, lr}
 800b3d6:	f3bf 8f5f 	dmb	sy
 800b3da:	4b07      	ldr	r3, [pc, #28]	; (800b3f8 <TIMER6_IRQHandler+0x24>)
 800b3dc:	4807      	ldr	r0, [pc, #28]	; (800b3fc <TIMER6_IRQHandler+0x28>)
 800b3de:	685a      	ldr	r2, [r3, #4]
 800b3e0:	6899      	ldr	r1, [r3, #8]
 800b3e2:	1a52      	subs	r2, r2, r1
 800b3e4:	601a      	str	r2, [r3, #0]
 800b3e6:	685a      	ldr	r2, [r3, #4]
 800b3e8:	2101      	movs	r1, #1
 800b3ea:	609a      	str	r2, [r3, #8]
 800b3ec:	f005 fa47 	bl	801087e <timer_interrupt_flag_clear>
 800b3f0:	f3bf 8f5f 	dmb	sy
 800b3f4:	bd08      	pop	{r3, pc}
 800b3f6:	bf00      	nop
 800b3f8:	200010f8 	strdcs	r1, [r0], -r8
 800b3fc:	40001400 	andmi	r1, r0, r0, lsl #8

0800b400 <Dmx::ClearData(unsigned int)>:
 800b400:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b404:	b510      	push	{r4, lr}
 800b406:	2400      	movs	r4, #0
 800b408:	4a08      	ldr	r2, [pc, #32]	; (800b42c <Dmx::ClearData(unsigned int)+0x2c>)
 800b40a:	fb03 2301 	mla	r3, r3, r1, r2
 800b40e:	f203 2002 	addw	r0, r3, #514	; 0x202
 800b412:	f823 4b02 	strh.w	r4, [r3], #2
 800b416:	4283      	cmp	r3, r0
 800b418:	d1fb      	bne.n	800b412 <Dmx::ClearData(unsigned int)+0x12>
 800b41a:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b41e:	fb03 2201 	mla	r2, r3, r1, r2
 800b422:	f240 2301 	movw	r3, #513	; 0x201
 800b426:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800b42a:	bd10      	pop	{r4, pc}
 800b42c:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800b430 <Dmx::StartData(unsigned int, unsigned int)>:
 800b430:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b432:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800b436:	6943      	ldr	r3, [r0, #20]
 800b438:	460c      	mov	r4, r1
 800b43a:	4615      	mov	r5, r2
 800b43c:	b085      	sub	sp, #20
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d16c      	bne.n	800b51c <Dmx::StartData(unsigned int, unsigned int)+0xec>
 800b442:	4e48      	ldr	r6, [pc, #288]	; (800b564 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800b444:	8834      	ldrh	r4, [r6, #0]
 800b446:	b2a4      	uxth	r4, r4
 800b448:	2c00      	cmp	r4, #0
 800b44a:	d15b      	bne.n	800b504 <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 800b44c:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800b450:	f004 ffd0 	bl	80103f4 <rcu_periph_clock_enable>
 800b454:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b458:	f005 f91a 	bl	8010690 <timer_deinit>
 800b45c:	236b      	movs	r3, #107	; 0x6b
 800b45e:	9300      	str	r3, [sp, #0]
 800b460:	4b41      	ldr	r3, [pc, #260]	; (800b568 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800b462:	4669      	mov	r1, sp
 800b464:	681b      	ldr	r3, [r3, #0]
 800b466:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b46a:	9302      	str	r3, [sp, #8]
 800b46c:	f8ad 4004 	strh.w	r4, [sp, #4]
 800b470:	f8ad 400c 	strh.w	r4, [sp, #12]
 800b474:	f88d 400e 	strb.w	r4, [sp, #14]
 800b478:	f005 f96c 	bl	8010754 <timer_init>
 800b47c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b480:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b484:	f005 f9fe 	bl	8010884 <timer_flag_clear>
 800b488:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b48c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b490:	f005 f9f5 	bl	801087e <timer_interrupt_flag_clear>
 800b494:	2210      	movs	r2, #16
 800b496:	4621      	mov	r1, r4
 800b498:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b49c:	f005 f9b7 	bl	801080e <timer_channel_output_mode_config>
 800b4a0:	2210      	movs	r2, #16
 800b4a2:	2101      	movs	r1, #1
 800b4a4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4a8:	f005 f9b1 	bl	801080e <timer_channel_output_mode_config>
 800b4ac:	4f2f      	ldr	r7, [pc, #188]	; (800b56c <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800b4ae:	2210      	movs	r2, #16
 800b4b0:	2102      	movs	r1, #2
 800b4b2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4b6:	f005 f9aa 	bl	801080e <timer_channel_output_mode_config>
 800b4ba:	4622      	mov	r2, r4
 800b4bc:	4621      	mov	r1, r4
 800b4be:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4c2:	f005 f9ca 	bl	801085a <timer_channel_output_pulse_value_config>
 800b4c6:	2101      	movs	r1, #1
 800b4c8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4cc:	883a      	ldrh	r2, [r7, #0]
 800b4ce:	f005 f9c4 	bl	801085a <timer_channel_output_pulse_value_config>
 800b4d2:	4b27      	ldr	r3, [pc, #156]	; (800b570 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800b4d4:	683a      	ldr	r2, [r7, #0]
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	2102      	movs	r1, #2
 800b4da:	441a      	add	r2, r3
 800b4dc:	b292      	uxth	r2, r2
 800b4de:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4e2:	f005 f9ba 	bl	801085a <timer_channel_output_pulse_value_config>
 800b4e6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4ea:	210e      	movs	r1, #14
 800b4ec:	f005 f9c3 	bl	8010876 <timer_interrupt_enable>
 800b4f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4f4:	4b1f      	ldr	r3, [pc, #124]	; (800b574 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800b4f6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4fa:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800b4fe:	601a      	str	r2, [r3, #0]
 800b500:	f005 f980 	bl	8010804 <timer_enable>
 800b504:	2201      	movs	r2, #1
 800b506:	8831      	ldrh	r1, [r6, #0]
 800b508:	fa02 f305 	lsl.w	r3, r2, r5
 800b50c:	430b      	orrs	r3, r1
 800b50e:	b29b      	uxth	r3, r3
 800b510:	8033      	strh	r3, [r6, #0]
 800b512:	4b19      	ldr	r3, [pc, #100]	; (800b578 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b514:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b518:	b005      	add	sp, #20
 800b51a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b51c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b520:	4b16      	ldr	r3, [pc, #88]	; (800b57c <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800b522:	fb02 3305 	mla	r3, r2, r5, r3
 800b526:	2200      	movs	r2, #0
 800b528:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b52c:	2107      	movs	r1, #7
 800b52e:	4620      	mov	r0, r4
 800b530:	f005 fa4a 	bl	80109c8 <usart_flag_get>
 800b534:	2800      	cmp	r0, #0
 800b536:	d0f9      	beq.n	800b52c <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 800b538:	4620      	mov	r0, r4
 800b53a:	4911      	ldr	r1, [pc, #68]	; (800b580 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800b53c:	f005 fa66 	bl	8010a0c <usart_interrupt_flag_clear>
 800b540:	f240 3105 	movw	r1, #773	; 0x305
 800b544:	4620      	mov	r0, r4
 800b546:	f005 fa4a 	bl	80109de <usart_interrupt_enable>
 800b54a:	2202      	movs	r2, #2
 800b54c:	4b0a      	ldr	r3, [pc, #40]	; (800b578 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b54e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b552:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b556:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b55a:	f043 0302 	orr.w	r3, r3, #2
 800b55e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b562:	e7d9      	b.n	800b518 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800b564:	20001108 	andcs	r1, r0, r8, lsl #2
 800b568:	20000000 	andcs	r0, r0, r0
 800b56c:	20000008 	andcs	r0, r0, r8
 800b570:	20000004 	andcs	r0, r0, r4
 800b574:	e000e100 	and	lr, r0, r0, lsl #2
 800b578:	200010f4 	strdcs	r1, [r0], -r4
 800b57c:	20000ce0 	andcs	r0, r0, r0, ror #25
 800b580:	00050305 	andeq	r0, r5, r5, lsl #6

0800b584 <Dmx::StopData(unsigned int, unsigned int)>:
 800b584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b588:	4f21      	ldr	r7, [pc, #132]	; (800b610 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800b58a:	4688      	mov	r8, r1
 800b58c:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800b590:	4614      	mov	r4, r2
 800b592:	b323      	cbz	r3, 800b5de <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 800b594:	6943      	ldr	r3, [r0, #20]
 800b596:	bb23      	cbnz	r3, 800b5e2 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800b598:	2601      	movs	r6, #1
 800b59a:	4d1e      	ldr	r5, [pc, #120]	; (800b614 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800b59c:	fa06 f202 	lsl.w	r2, r6, r2
 800b5a0:	882b      	ldrh	r3, [r5, #0]
 800b5a2:	b29b      	uxth	r3, r3
 800b5a4:	ea23 0302 	bic.w	r3, r3, r2
 800b5a8:	802b      	strh	r3, [r5, #0]
 800b5aa:	f3bf 8f5f 	dmb	sy
 800b5ae:	882b      	ldrh	r3, [r5, #0]
 800b5b0:	f104 0208 	add.w	r2, r4, #8
 800b5b4:	b29b      	uxth	r3, r3
 800b5b6:	4096      	lsls	r6, r2
 800b5b8:	ea36 0303 	bics.w	r3, r6, r3
 800b5bc:	d105      	bne.n	800b5ca <Dmx::StopData(unsigned int, unsigned int)+0x46>
 800b5be:	2107      	movs	r1, #7
 800b5c0:	4640      	mov	r0, r8
 800b5c2:	f005 fa01 	bl	80109c8 <usart_flag_get>
 800b5c6:	2801      	cmp	r0, #1
 800b5c8:	d1f9      	bne.n	800b5be <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 800b5ca:	882b      	ldrh	r3, [r5, #0]
 800b5cc:	b29b      	uxth	r3, r3
 800b5ce:	ea23 0306 	bic.w	r3, r3, r6
 800b5d2:	802b      	strh	r3, [r5, #0]
 800b5d4:	f3bf 8f4f 	dsb	sy
 800b5d8:	2300      	movs	r3, #0
 800b5da:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800b5de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5e2:	f240 3105 	movw	r1, #773	; 0x305
 800b5e6:	4640      	mov	r0, r8
 800b5e8:	f005 fa04 	bl	80109f4 <usart_interrupt_disable>
 800b5ec:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b5f0:	4b09      	ldr	r3, [pc, #36]	; (800b618 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800b5f2:	fb02 3304 	mla	r3, r2, r4, r3
 800b5f6:	2200      	movs	r2, #0
 800b5f8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b5fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b600:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b604:	f023 0302 	bic.w	r3, r3, #2
 800b608:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b60c:	e7e4      	b.n	800b5d8 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 800b60e:	bf00      	nop
 800b610:	200010f4 	strdcs	r1, [r0], -r4
 800b614:	20001108 	andcs	r1, r0, r8, lsl #2
 800b618:	20000ce0 	andcs	r0, r0, r0, ror #25

0800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800b61c:	b570      	push	{r4, r5, r6, lr}
 800b61e:	461d      	mov	r5, r3
 800b620:	6943      	ldr	r3, [r0, #20]
 800b622:	4606      	mov	r6, r0
 800b624:	4293      	cmp	r3, r2
 800b626:	4614      	mov	r4, r2
 800b628:	d014      	beq.n	800b654 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800b62a:	6142      	str	r2, [r0, #20]
 800b62c:	4910      	ldr	r1, [pc, #64]	; (800b670 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b62e:	2200      	movs	r2, #0
 800b630:	f7ff ffa8 	bl	800b584 <Dmx::StopData(unsigned int, unsigned int)>
 800b634:	b934      	cbnz	r4, 800b644 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800b636:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b63a:	4b0e      	ldr	r3, [pc, #56]	; (800b674 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b63c:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b640:	b94d      	cbnz	r5, 800b656 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800b642:	bd70      	pop	{r4, r5, r6, pc}
 800b644:	2c01      	cmp	r4, #1
 800b646:	d1fb      	bne.n	800b640 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b648:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b64c:	4b09      	ldr	r3, [pc, #36]	; (800b674 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b64e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b652:	e7f5      	b.n	800b640 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b654:	b135      	cbz	r5, 800b664 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800b656:	4630      	mov	r0, r6
 800b658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b65c:	2200      	movs	r2, #0
 800b65e:	4904      	ldr	r1, [pc, #16]	; (800b670 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b660:	f7ff bee6 	b.w	800b430 <Dmx::StartData(unsigned int, unsigned int)>
 800b664:	462a      	mov	r2, r5
 800b666:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b66a:	4901      	ldr	r1, [pc, #4]	; (800b670 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b66c:	f7ff bf8a 	b.w	800b584 <Dmx::StopData(unsigned int, unsigned int)>
 800b670:	40004800 	andmi	r4, r0, r0, lsl #16
 800b674:	40010000 	andmi	r0, r1, r0

0800b678 <Dmx::Dmx()>:
 800b678:	225c      	movs	r2, #92	; 0x5c
 800b67a:	230c      	movs	r3, #12
 800b67c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b680:	e9c0 2300 	strd	r2, r3, [r0]
 800b684:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800b688:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800b68c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b690:	2400      	movs	r4, #0
 800b692:	4605      	mov	r5, r0
 800b694:	8203      	strh	r3, [r0, #16]
 800b696:	4b5d      	ldr	r3, [pc, #372]	; (800b80c <Dmx::Dmx()+0x194>)
 800b698:	b08b      	sub	sp, #44	; 0x2c
 800b69a:	6018      	str	r0, [r3, #0]
 800b69c:	4b5c      	ldr	r3, [pc, #368]	; (800b810 <Dmx::Dmx()+0x198>)
 800b69e:	2203      	movs	r2, #3
 800b6a0:	801c      	strh	r4, [r3, #0]
 800b6a2:	2110      	movs	r1, #16
 800b6a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b6a8:	485a      	ldr	r0, [pc, #360]	; (800b814 <Dmx::Dmx()+0x19c>)
 800b6aa:	f004 fe0b 	bl	80102c4 <gpio_init>
 800b6ae:	4621      	mov	r1, r4
 800b6b0:	4628      	mov	r0, r5
 800b6b2:	f7ff fea5 	bl	800b400 <Dmx::ClearData(unsigned int)>
 800b6b6:	4b58      	ldr	r3, [pc, #352]	; (800b818 <Dmx::Dmx()+0x1a0>)
 800b6b8:	2201      	movs	r2, #1
 800b6ba:	4628      	mov	r0, r5
 800b6bc:	601c      	str	r4, [r3, #0]
 800b6be:	4623      	mov	r3, r4
 800b6c0:	f7ff ffac 	bl	800b61c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800b6c4:	4b55      	ldr	r3, [pc, #340]	; (800b81c <Dmx::Dmx()+0x1a4>)
 800b6c6:	4e56      	ldr	r6, [pc, #344]	; (800b820 <Dmx::Dmx()+0x1a8>)
 800b6c8:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800b6cc:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800b6d0:	f004 fe90 	bl	80103f4 <rcu_periph_clock_enable>
 800b6d4:	f240 5001 	movw	r0, #1281	; 0x501
 800b6d8:	f004 fe8c 	bl	80103f4 <rcu_periph_clock_enable>
 800b6dc:	4630      	mov	r0, r6
 800b6de:	2101      	movs	r1, #1
 800b6e0:	f004 fcf0 	bl	80100c4 <dma_deinit>
 800b6e4:	4b4f      	ldr	r3, [pc, #316]	; (800b824 <Dmx::Dmx()+0x1ac>)
 800b6e6:	2701      	movs	r7, #1
 800b6e8:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800b6ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800b6f0:	9308      	str	r3, [sp, #32]
 800b6f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b6f6:	aa03      	add	r2, sp, #12
 800b6f8:	4639      	mov	r1, r7
 800b6fa:	4630      	mov	r0, r6
 800b6fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b700:	9406      	str	r4, [sp, #24]
 800b702:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800b706:	f004 fcf9 	bl	80100fc <dma_init>
 800b70a:	4639      	mov	r1, r7
 800b70c:	4630      	mov	r0, r6
 800b70e:	f004 fd2f 	bl	8010170 <dma_circulation_disable>
 800b712:	4639      	mov	r1, r7
 800b714:	4630      	mov	r0, r6
 800b716:	f004 fd3b 	bl	8010190 <dma_memory_to_memory_disable>
 800b71a:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800b71e:	f240 7001 	movw	r0, #1793	; 0x701
 800b722:	f004 fe67 	bl	80103f4 <rcu_periph_clock_enable>
 800b726:	4630      	mov	r0, r6
 800b728:	f004 ffb2 	bl	8010690 <timer_deinit>
 800b72c:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800b730:	236b      	movs	r3, #107	; 0x6b
 800b732:	4630      	mov	r0, r6
 800b734:	a903      	add	r1, sp, #12
 800b736:	9303      	str	r3, [sp, #12]
 800b738:	f8ad 4010 	strh.w	r4, [sp, #16]
 800b73c:	f8cd 9014 	str.w	r9, [sp, #20]
 800b740:	f8ad 4018 	strh.w	r4, [sp, #24]
 800b744:	f88d 401a 	strb.w	r4, [sp, #26]
 800b748:	f005 f804 	bl	8010754 <timer_init>
 800b74c:	4649      	mov	r1, r9
 800b74e:	4630      	mov	r0, r6
 800b750:	f005 f898 	bl	8010884 <timer_flag_clear>
 800b754:	4649      	mov	r1, r9
 800b756:	4630      	mov	r0, r6
 800b758:	f005 f891 	bl	801087e <timer_interrupt_flag_clear>
 800b75c:	4621      	mov	r1, r4
 800b75e:	4630      	mov	r0, r6
 800b760:	2210      	movs	r2, #16
 800b762:	f005 f854 	bl	801080e <timer_channel_output_mode_config>
 800b766:	4639      	mov	r1, r7
 800b768:	4630      	mov	r0, r6
 800b76a:	2210      	movs	r2, #16
 800b76c:	f005 f84f 	bl	801080e <timer_channel_output_mode_config>
 800b770:	4630      	mov	r0, r6
 800b772:	2210      	movs	r2, #16
 800b774:	2102      	movs	r1, #2
 800b776:	f005 f84a 	bl	801080e <timer_channel_output_mode_config>
 800b77a:	2210      	movs	r2, #16
 800b77c:	2103      	movs	r1, #3
 800b77e:	4630      	mov	r0, r6
 800b780:	f005 f845 	bl	801080e <timer_channel_output_mode_config>
 800b784:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800b788:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800b828 <Dmx::Dmx()+0x1b0>
 800b78c:	4630      	mov	r0, r6
 800b78e:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800b792:	f8c8 3000 	str.w	r3, [r8]
 800b796:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800b79a:	f005 f833 	bl	8010804 <timer_enable>
 800b79e:	f240 7005 	movw	r0, #1797	; 0x705
 800b7a2:	f004 fe27 	bl	80103f4 <rcu_periph_clock_enable>
 800b7a6:	4630      	mov	r0, r6
 800b7a8:	f004 ff72 	bl	8010690 <timer_deinit>
 800b7ac:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800b7b0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b7b4:	f242 7310 	movw	r3, #10000	; 0x2710
 800b7b8:	4630      	mov	r0, r6
 800b7ba:	a903      	add	r1, sp, #12
 800b7bc:	9305      	str	r3, [sp, #20]
 800b7be:	f004 ffc9 	bl	8010754 <timer_init>
 800b7c2:	4649      	mov	r1, r9
 800b7c4:	4630      	mov	r0, r6
 800b7c6:	f005 f85d 	bl	8010884 <timer_flag_clear>
 800b7ca:	4649      	mov	r1, r9
 800b7cc:	4630      	mov	r0, r6
 800b7ce:	f005 f856 	bl	801087e <timer_interrupt_flag_clear>
 800b7d2:	4639      	mov	r1, r7
 800b7d4:	4630      	mov	r0, r6
 800b7d6:	f005 f84e 	bl	8010876 <timer_interrupt_enable>
 800b7da:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800b7de:	4630      	mov	r0, r6
 800b7e0:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800b7e4:	f8c8 3004 	str.w	r3, [r8, #4]
 800b7e8:	f005 f80c 	bl	8010804 <timer_enable>
 800b7ec:	2302      	movs	r3, #2
 800b7ee:	2208      	movs	r2, #8
 800b7f0:	9300      	str	r3, [sp, #0]
 800b7f2:	490e      	ldr	r1, [pc, #56]	; (800b82c <Dmx::Dmx()+0x1b4>)
 800b7f4:	4623      	mov	r3, r4
 800b7f6:	480e      	ldr	r0, [pc, #56]	; (800b830 <Dmx::Dmx()+0x1b8>)
 800b7f8:	f005 fad4 	bl	8010da4 <gd32_uart_begin>
 800b7fc:	2380      	movs	r3, #128	; 0x80
 800b7fe:	4628      	mov	r0, r5
 800b800:	f8c8 3004 	str.w	r3, [r8, #4]
 800b804:	b00b      	add	sp, #44	; 0x2c
 800b806:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b80a:	bf00      	nop
 800b80c:	2000110c 	andcs	r1, r0, ip, lsl #2
 800b810:	20001108 	andcs	r1, r0, r8, lsl #2
 800b814:	40010c00 	andmi	r0, r1, r0, lsl #24
 800b818:	200010f4 	strdcs	r1, [r0], -r4
 800b81c:	20000ce0 	andcs	r0, r0, r0, ror #25
 800b820:	40020000 	andmi	r0, r2, r0
 800b824:	40004804 	andmi	r4, r0, r4, lsl #16
 800b828:	e000e100 	and	lr, r0, r0, lsl #2
 800b82c:	0003d090 	muleq	r3, r0, r0
 800b830:	40004800 	andmi	r4, r0, r0, lsl #16

0800b834 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800b834:	4b13      	ldr	r3, [pc, #76]	; (800b884 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800b836:	b570      	push	{r4, r5, r6, lr}
 800b838:	60c1      	str	r1, [r0, #12]
 800b83a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800b83e:	232c      	movs	r3, #44	; 0x2c
 800b840:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800b844:	4d10      	ldr	r5, [pc, #64]	; (800b888 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800b846:	4c11      	ldr	r4, [pc, #68]	; (800b88c <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800b848:	4358      	muls	r0, r3
 800b84a:	682a      	ldr	r2, [r5, #0]
 800b84c:	6823      	ldr	r3, [r4, #0]
 800b84e:	4413      	add	r3, r2
 800b850:	4403      	add	r3, r0
 800b852:	42b3      	cmp	r3, r6
 800b854:	d908      	bls.n	800b868 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800b856:	2ab0      	cmp	r2, #176	; 0xb0
 800b858:	4613      	mov	r3, r2
 800b85a:	bf28      	it	cs
 800b85c:	23b0      	movcs	r3, #176	; 0xb0
 800b85e:	220c      	movs	r2, #12
 800b860:	602b      	str	r3, [r5, #0]
 800b862:	4413      	add	r3, r2
 800b864:	6022      	str	r2, [r4, #0]
 800b866:	4403      	add	r3, r0
 800b868:	b109      	cbz	r1, 800b86e <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800b86a:	428b      	cmp	r3, r1
 800b86c:	d906      	bls.n	800b87c <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800b86e:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800b872:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800b876:	4299      	cmp	r1, r3
 800b878:	bf38      	it	cc
 800b87a:	4619      	movcc	r1, r3
 800b87c:	4b04      	ldr	r3, [pc, #16]	; (800b890 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800b87e:	6019      	str	r1, [r3, #0]
 800b880:	bd70      	pop	{r4, r5, r6, pc}
 800b882:	bf00      	nop
 800b884:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800b888:	20000008 	andcs	r0, r0, r8
 800b88c:	20000004 	andcs	r0, r0, r4
 800b890:	20000000 	andcs	r0, r0, r0

0800b894 <Dmx::SetDmxBreakTime(unsigned int)>:
 800b894:	295c      	cmp	r1, #92	; 0x5c
 800b896:	bf38      	it	cc
 800b898:	215c      	movcc	r1, #92	; 0x5c
 800b89a:	4b02      	ldr	r3, [pc, #8]	; (800b8a4 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800b89c:	6019      	str	r1, [r3, #0]
 800b89e:	68c1      	ldr	r1, [r0, #12]
 800b8a0:	f7ff bfc8 	b.w	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8a4:	20000008 	andcs	r0, r0, r8

0800b8a8 <Dmx::SetDmxMabTime(unsigned int)>:
 800b8a8:	290c      	cmp	r1, #12
 800b8aa:	bf38      	it	cc
 800b8ac:	210c      	movcc	r1, #12
 800b8ae:	4b02      	ldr	r3, [pc, #8]	; (800b8b8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800b8b0:	6019      	str	r1, [r3, #0]
 800b8b2:	68c1      	ldr	r1, [r0, #12]
 800b8b4:	f7ff bfbe 	b.w	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8b8:	20000004 	andcs	r0, r0, r4

0800b8bc <Dmx::SetDmxSlots(unsigned short)>:
 800b8bc:	1e8b      	subs	r3, r1, #2
 800b8be:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800b8c2:	d809      	bhi.n	800b8d8 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800b8c4:	6983      	ldr	r3, [r0, #24]
 800b8c6:	8201      	strh	r1, [r0, #16]
 800b8c8:	b11b      	cbz	r3, 800b8d2 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800b8ca:	4299      	cmp	r1, r3
 800b8cc:	bf94      	ite	ls
 800b8ce:	6181      	strls	r1, [r0, #24]
 800b8d0:	6183      	strhi	r3, [r0, #24]
 800b8d2:	68c1      	ldr	r1, [r0, #12]
 800b8d4:	f7ff bfae 	b.w	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8d8:	4770      	bx	lr
	...

0800b8dc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800b8dc:	b470      	push	{r4, r5, r6}
 800b8de:	8a04      	ldrh	r4, [r0, #16]
 800b8e0:	f44f 7501 	mov.w	r5, #516	; 0x204
 800b8e4:	42a3      	cmp	r3, r4
 800b8e6:	bf28      	it	cs
 800b8e8:	4623      	movcs	r3, r4
 800b8ea:	4c0e      	ldr	r4, [pc, #56]	; (800b924 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800b8ec:	f892 f000 	pld	[r2]
 800b8f0:	fb05 4401 	mla	r4, r5, r1, r4
 800b8f4:	1c5d      	adds	r5, r3, #1
 800b8f6:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800b8fa:	18d5      	adds	r5, r2, r3
 800b8fc:	4295      	cmp	r5, r2
 800b8fe:	d109      	bne.n	800b914 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800b900:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b904:	698a      	ldr	r2, [r1, #24]
 800b906:	429a      	cmp	r2, r3
 800b908:	d009      	beq.n	800b91e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800b90a:	bc70      	pop	{r4, r5, r6}
 800b90c:	618b      	str	r3, [r1, #24]
 800b90e:	68c1      	ldr	r1, [r0, #12]
 800b910:	f7ff bf90 	b.w	800b834 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b914:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b918:	f804 6f01 	strb.w	r6, [r4, #1]!
 800b91c:	e7ee      	b.n	800b8fc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800b91e:	bc70      	pop	{r4, r5, r6}
 800b920:	4770      	bx	lr
 800b922:	bf00      	nop
 800b924:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800b928 <Dmx::Blackout()>:
 800b928:	4a10      	ldr	r2, [pc, #64]	; (800b96c <Dmx::Blackout()+0x44>)
 800b92a:	b510      	push	{r4, lr}
 800b92c:	8813      	ldrh	r3, [r2, #0]
 800b92e:	b29b      	uxth	r3, r3
 800b930:	b903      	cbnz	r3, 800b934 <Dmx::Blackout()+0xc>
 800b932:	bd10      	pop	{r4, pc}
 800b934:	f3bf 8f5f 	dmb	sy
 800b938:	8813      	ldrh	r3, [r2, #0]
 800b93a:	05db      	lsls	r3, r3, #23
 800b93c:	d5f9      	bpl.n	800b932 <Dmx::Blackout()+0xa>
 800b93e:	4c0c      	ldr	r4, [pc, #48]	; (800b970 <Dmx::Blackout()+0x48>)
 800b940:	2107      	movs	r1, #7
 800b942:	4620      	mov	r0, r4
 800b944:	f005 f840 	bl	80109c8 <usart_flag_get>
 800b948:	2801      	cmp	r0, #1
 800b94a:	d1f9      	bne.n	800b940 <Dmx::Blackout()+0x18>
 800b94c:	2300      	movs	r3, #0
 800b94e:	4a09      	ldr	r2, [pc, #36]	; (800b974 <Dmx::Blackout()+0x4c>)
 800b950:	461c      	mov	r4, r3
 800b952:	4611      	mov	r1, r2
 800b954:	f240 1001 	movw	r0, #257	; 0x101
 800b958:	3301      	adds	r3, #1
 800b95a:	4283      	cmp	r3, r0
 800b95c:	f822 4b02 	strh.w	r4, [r2], #2
 800b960:	d1fa      	bne.n	800b958 <Dmx::Blackout()+0x30>
 800b962:	f04f 0300 	mov.w	r3, #0
 800b966:	700b      	strb	r3, [r1, #0]
 800b968:	e7e3      	b.n	800b932 <Dmx::Blackout()+0xa>
 800b96a:	bf00      	nop
 800b96c:	20001108 	andcs	r1, r0, r8, lsl #2
 800b970:	40004800 	andmi	r4, r0, r0, lsl #16
 800b974:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800b978 <Dmx::FullOn()>:
 800b978:	4a10      	ldr	r2, [pc, #64]	; (800b9bc <Dmx::FullOn()+0x44>)
 800b97a:	b510      	push	{r4, lr}
 800b97c:	8813      	ldrh	r3, [r2, #0]
 800b97e:	b29b      	uxth	r3, r3
 800b980:	b903      	cbnz	r3, 800b984 <Dmx::FullOn()+0xc>
 800b982:	bd10      	pop	{r4, pc}
 800b984:	f3bf 8f5f 	dmb	sy
 800b988:	8813      	ldrh	r3, [r2, #0]
 800b98a:	05db      	lsls	r3, r3, #23
 800b98c:	d5f9      	bpl.n	800b982 <Dmx::FullOn()+0xa>
 800b98e:	4c0c      	ldr	r4, [pc, #48]	; (800b9c0 <Dmx::FullOn()+0x48>)
 800b990:	2107      	movs	r1, #7
 800b992:	4620      	mov	r0, r4
 800b994:	f005 f818 	bl	80109c8 <usart_flag_get>
 800b998:	2801      	cmp	r0, #1
 800b99a:	d1f9      	bne.n	800b990 <Dmx::FullOn()+0x18>
 800b99c:	4a09      	ldr	r2, [pc, #36]	; (800b9c4 <Dmx::FullOn()+0x4c>)
 800b99e:	2300      	movs	r3, #0
 800b9a0:	4611      	mov	r1, r2
 800b9a2:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800b9a6:	f240 1001 	movw	r0, #257	; 0x101
 800b9aa:	3301      	adds	r3, #1
 800b9ac:	4283      	cmp	r3, r0
 800b9ae:	f822 4b02 	strh.w	r4, [r2], #2
 800b9b2:	d1fa      	bne.n	800b9aa <Dmx::FullOn()+0x32>
 800b9b4:	2300      	movs	r3, #0
 800b9b6:	700b      	strb	r3, [r1, #0]
 800b9b8:	e7e3      	b.n	800b982 <Dmx::FullOn()+0xa>
 800b9ba:	bf00      	nop
 800b9bc:	20001108 	andcs	r1, r0, r8, lsl #2
 800b9c0:	40004800 	andmi	r4, r0, r0, lsl #16
 800b9c4:	20000ef0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800b9c8 <Dmx::GetDmxAvailable(unsigned int)>:
 800b9c8:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b9cc:	4b07      	ldr	r3, [pc, #28]	; (800b9ec <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800b9ce:	fb02 3101 	mla	r1, r2, r1, r3
 800b9d2:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800b9d6:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800b9da:	bf1f      	itttt	ne
 800b9dc:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800b9e0:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800b9e4:	4608      	movne	r0, r1
 800b9e6:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800b9ea:	4770      	bx	lr
 800b9ec:	20000ce0 	andcs	r0, r0, r0, ror #25

0800b9f0 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800b9f0:	f3bf 8f5f 	dmb	sy
 800b9f4:	4b01      	ldr	r3, [pc, #4]	; (800b9fc <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800b9f6:	0109      	lsls	r1, r1, #4
 800b9f8:	5858      	ldr	r0, [r3, r1]
 800b9fa:	4770      	bx	lr
 800b9fc:	200010f8 	strdcs	r1, [r0], -r8

0800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800ba00:	2300      	movs	r3, #0
 800ba02:	2020      	movs	r0, #32
 800ba04:	b510      	push	{r4, lr}
 800ba06:	4a04      	ldr	r2, [pc, #16]	; (800ba18 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800ba08:	428b      	cmp	r3, r1
 800ba0a:	d100      	bne.n	800ba0e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800ba0c:	bd10      	pop	{r4, pc}
 800ba0e:	f852 4b04 	ldr.w	r4, [r2], #4
 800ba12:	3301      	adds	r3, #1
 800ba14:	4420      	add	r0, r4
 800ba16:	e7f7      	b.n	800ba08 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800ba18:	080132dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, sp}

0800ba1c <SpiFlashStore::Init()>:
 800ba1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba20:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800bb38 <SpiFlashStore::Init()+0x11c>
 800ba24:	4607      	mov	r7, r0
 800ba26:	b085      	sub	sp, #20
 800ba28:	f8d8 0000 	ldr.w	r0, [r8]
 800ba2c:	f000 fb3c 	bl	800c0a8 <FlashRom::GetSectorSize() const>
 800ba30:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800ba34:	4605      	mov	r5, r0
 800ba36:	d17d      	bne.n	800bb34 <SpiFlashStore::Init()+0x118>
 800ba38:	f8d8 0000 	ldr.w	r0, [r8]
 800ba3c:	f000 fb2c 	bl	800c098 <FlashRom::GetSize() const>
 800ba40:	4b3e      	ldr	r3, [pc, #248]	; (800bb3c <SpiFlashStore::Init()+0x120>)
 800ba42:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800ba46:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800ba4a:	6019      	str	r1, [r3, #0]
 800ba4c:	2e00      	cmp	r6, #0
 800ba4e:	d171      	bne.n	800bb34 <SpiFlashStore::Init()+0x118>
 800ba50:	4c3b      	ldr	r4, [pc, #236]	; (800bb40 <SpiFlashStore::Init()+0x124>)
 800ba52:	ab03      	add	r3, sp, #12
 800ba54:	9300      	str	r3, [sp, #0]
 800ba56:	462a      	mov	r2, r5
 800ba58:	4623      	mov	r3, r4
 800ba5a:	f8d8 0000 	ldr.w	r0, [r8]
 800ba5e:	f000 fb26 	bl	800c0ae <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800ba62:	7823      	ldrb	r3, [r4, #0]
 800ba64:	2b41      	cmp	r3, #65	; 0x41
 800ba66:	bf1c      	itt	ne
 800ba68:	2341      	movne	r3, #65	; 0x41
 800ba6a:	7023      	strbne	r3, [r4, #0]
 800ba6c:	7863      	ldrb	r3, [r4, #1]
 800ba6e:	bf14      	ite	ne
 800ba70:	4635      	movne	r5, r6
 800ba72:	2501      	moveq	r5, #1
 800ba74:	2b76      	cmp	r3, #118	; 0x76
 800ba76:	bf1c      	itt	ne
 800ba78:	2376      	movne	r3, #118	; 0x76
 800ba7a:	7063      	strbne	r3, [r4, #1]
 800ba7c:	78a3      	ldrb	r3, [r4, #2]
 800ba7e:	bf18      	it	ne
 800ba80:	2500      	movne	r5, #0
 800ba82:	2b56      	cmp	r3, #86	; 0x56
 800ba84:	bf1c      	itt	ne
 800ba86:	2356      	movne	r3, #86	; 0x56
 800ba88:	70a3      	strbne	r3, [r4, #2]
 800ba8a:	78e3      	ldrb	r3, [r4, #3]
 800ba8c:	bf18      	it	ne
 800ba8e:	2500      	movne	r5, #0
 800ba90:	2b10      	cmp	r3, #16
 800ba92:	d022      	beq.n	800bada <SpiFlashStore::Init()+0xbe>
 800ba94:	2310      	movs	r3, #16
 800ba96:	70e3      	strb	r3, [r4, #3]
 800ba98:	2201      	movs	r2, #1
 800ba9a:	2500      	movs	r5, #0
 800ba9c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800baa0:	4b28      	ldr	r3, [pc, #160]	; (800bb44 <SpiFlashStore::Init()+0x128>)
 800baa2:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800bb48 <SpiFlashStore::Init()+0x12c>
 800baa6:	701a      	strb	r2, [r3, #0]
 800baa8:	4631      	mov	r1, r6
 800baaa:	4638      	mov	r0, r7
 800baac:	f7ff ffa8 	bl	800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bab0:	1823      	adds	r3, r4, r0
 800bab2:	5425      	strb	r5, [r4, r0]
 800bab4:	705d      	strb	r5, [r3, #1]
 800bab6:	709d      	strb	r5, [r3, #2]
 800bab8:	70dd      	strb	r5, [r3, #3]
 800baba:	f858 3b04 	ldr.w	r3, [r8], #4
 800babe:	1d02      	adds	r2, r0, #4
 800bac0:	4403      	add	r3, r0
 800bac2:	429a      	cmp	r2, r3
 800bac4:	d332      	bcc.n	800bb2c <SpiFlashStore::Init()+0x110>
 800bac6:	3601      	adds	r6, #1
 800bac8:	2e1c      	cmp	r6, #28
 800baca:	d1ed      	bne.n	800baa8 <SpiFlashStore::Init()+0x8c>
 800bacc:	2501      	movs	r5, #1
 800bace:	4b1f      	ldr	r3, [pc, #124]	; (800bb4c <SpiFlashStore::Init()+0x130>)
 800bad0:	601d      	str	r5, [r3, #0]
 800bad2:	4628      	mov	r0, r5
 800bad4:	b005      	add	sp, #20
 800bad6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bada:	2d00      	cmp	r5, #0
 800badc:	d0dc      	beq.n	800ba98 <SpiFlashStore::Init()+0x7c>
 800bade:	f04f 0900 	mov.w	r9, #0
 800bae2:	46c8      	mov	r8, r9
 800bae4:	4631      	mov	r1, r6
 800bae6:	4638      	mov	r0, r7
 800bae8:	f7ff ff8a 	bl	800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800baec:	5c23      	ldrb	r3, [r4, r0]
 800baee:	2bff      	cmp	r3, #255	; 0xff
 800baf0:	d112      	bne.n	800bb18 <SpiFlashStore::Init()+0xfc>
 800baf2:	1823      	adds	r3, r4, r0
 800baf4:	785a      	ldrb	r2, [r3, #1]
 800baf6:	2aff      	cmp	r2, #255	; 0xff
 800baf8:	d10e      	bne.n	800bb18 <SpiFlashStore::Init()+0xfc>
 800bafa:	789a      	ldrb	r2, [r3, #2]
 800bafc:	2aff      	cmp	r2, #255	; 0xff
 800bafe:	d10b      	bne.n	800bb18 <SpiFlashStore::Init()+0xfc>
 800bb00:	78da      	ldrb	r2, [r3, #3]
 800bb02:	2aff      	cmp	r2, #255	; 0xff
 800bb04:	d108      	bne.n	800bb18 <SpiFlashStore::Init()+0xfc>
 800bb06:	46a9      	mov	r9, r5
 800bb08:	f804 8000 	strb.w	r8, [r4, r0]
 800bb0c:	f883 8001 	strb.w	r8, [r3, #1]
 800bb10:	f883 8002 	strb.w	r8, [r3, #2]
 800bb14:	f883 8003 	strb.w	r8, [r3, #3]
 800bb18:	3601      	adds	r6, #1
 800bb1a:	2e1c      	cmp	r6, #28
 800bb1c:	d1e2      	bne.n	800bae4 <SpiFlashStore::Init()+0xc8>
 800bb1e:	f1b9 0f00 	cmp.w	r9, #0
 800bb22:	d0d6      	beq.n	800bad2 <SpiFlashStore::Init()+0xb6>
 800bb24:	2201      	movs	r2, #1
 800bb26:	4b09      	ldr	r3, [pc, #36]	; (800bb4c <SpiFlashStore::Init()+0x130>)
 800bb28:	601a      	str	r2, [r3, #0]
 800bb2a:	e7d2      	b.n	800bad2 <SpiFlashStore::Init()+0xb6>
 800bb2c:	f804 9002 	strb.w	r9, [r4, r2]
 800bb30:	3201      	adds	r2, #1
 800bb32:	e7c6      	b.n	800bac2 <SpiFlashStore::Init()+0xa6>
 800bb34:	2500      	movs	r5, #0
 800bb36:	e7cc      	b.n	800bad2 <SpiFlashStore::Init()+0xb6>
 800bb38:	20002148 	andcs	r2, r0, r8, asr #2
 800bb3c:	2000211c 	andcs	r2, r0, ip, lsl r1
 800bb40:	2000111c 	andcs	r1, r0, ip, lsl r1
 800bb44:	20002130 	andcs	r2, r0, r0, lsr r1
 800bb48:	080132dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, sp}
 800bb4c:	20002128 	andcs	r2, r0, r8, lsr #2

0800bb50 <SpiFlashStore::SpiFlashStore()>:
 800bb50:	b538      	push	{r3, r4, r5, lr}
 800bb52:	4b0d      	ldr	r3, [pc, #52]	; (800bb88 <SpiFlashStore::SpiFlashStore()+0x38>)
 800bb54:	4604      	mov	r4, r0
 800bb56:	6018      	str	r0, [r3, #0]
 800bb58:	4b0c      	ldr	r3, [pc, #48]	; (800bb8c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800bb5a:	4d0d      	ldr	r5, [pc, #52]	; (800bb90 <SpiFlashStore::SpiFlashStore()+0x40>)
 800bb5c:	681b      	ldr	r3, [r3, #0]
 800bb5e:	781b      	ldrb	r3, [r3, #0]
 800bb60:	b113      	cbz	r3, 800bb68 <SpiFlashStore::SpiFlashStore()+0x18>
 800bb62:	f7ff ff5b 	bl	800ba1c <SpiFlashStore::Init()>
 800bb66:	7028      	strb	r0, [r5, #0]
 800bb68:	782b      	ldrb	r3, [r5, #0]
 800bb6a:	b153      	cbz	r3, 800bb82 <SpiFlashStore::SpiFlashStore()+0x32>
 800bb6c:	2320      	movs	r3, #32
 800bb6e:	2200      	movs	r2, #0
 800bb70:	4908      	ldr	r1, [pc, #32]	; (800bb94 <SpiFlashStore::SpiFlashStore()+0x44>)
 800bb72:	f851 0b04 	ldr.w	r0, [r1], #4
 800bb76:	3201      	adds	r2, #1
 800bb78:	2a1c      	cmp	r2, #28
 800bb7a:	4403      	add	r3, r0
 800bb7c:	d1f9      	bne.n	800bb72 <SpiFlashStore::SpiFlashStore()+0x22>
 800bb7e:	4a06      	ldr	r2, [pc, #24]	; (800bb98 <SpiFlashStore::SpiFlashStore()+0x48>)
 800bb80:	6013      	str	r3, [r2, #0]
 800bb82:	4620      	mov	r0, r4
 800bb84:	bd38      	pop	{r3, r4, r5, pc}
 800bb86:	bf00      	nop
 800bb88:	2000212c 	andcs	r2, r0, ip, lsr #2
 800bb8c:	20002148 	andcs	r2, r0, r8, asr #2
 800bb90:	20002120 	andcs	r2, r0, r0, lsr #2
 800bb94:	080132dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, sp}
 800bb98:	20002124 	andcs	r2, r0, r4, lsr #2

0800bb9c <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800bb9c:	b508      	push	{r3, lr}
 800bb9e:	f7ff ff2f 	bl	800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bba2:	2300      	movs	r3, #0
 800bba4:	4904      	ldr	r1, [pc, #16]	; (800bbb8 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800bba6:	1842      	adds	r2, r0, r1
 800bba8:	540b      	strb	r3, [r1, r0]
 800bbaa:	7053      	strb	r3, [r2, #1]
 800bbac:	7093      	strb	r3, [r2, #2]
 800bbae:	70d3      	strb	r3, [r2, #3]
 800bbb0:	2201      	movs	r2, #1
 800bbb2:	4b02      	ldr	r3, [pc, #8]	; (800bbbc <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800bbb4:	601a      	str	r2, [r3, #0]
 800bbb6:	bd08      	pop	{r3, pc}
 800bbb8:	2000111c 	andcs	r1, r0, ip, lsl r1
 800bbbc:	20002128 	andcs	r2, r0, r8, lsr #2

0800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800bbc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbc4:	461c      	mov	r4, r3
 800bbc6:	4b19      	ldr	r3, [pc, #100]	; (800bc2c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800bbc8:	4616      	mov	r6, r2
 800bbca:	781f      	ldrb	r7, [r3, #0]
 800bbcc:	9d07      	ldr	r5, [sp, #28]
 800bbce:	b307      	cbz	r7, 800bc12 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbd0:	f7ff ff16 	bl	800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bbd4:	f04f 0c00 	mov.w	ip, #0
 800bbd8:	4a15      	ldr	r2, [pc, #84]	; (800bc30 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800bbda:	1831      	adds	r1, r6, r0
 800bbdc:	1e63      	subs	r3, r4, #1
 800bbde:	9c06      	ldr	r4, [sp, #24]
 800bbe0:	4411      	add	r1, r2
 800bbe2:	440c      	add	r4, r1
 800bbe4:	42a1      	cmp	r1, r4
 800bbe6:	d116      	bne.n	800bc16 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800bbe8:	f1bc 0f00 	cmp.w	ip, #0
 800bbec:	d011      	beq.n	800bc12 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbee:	4b11      	ldr	r3, [pc, #68]	; (800bc34 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800bbf0:	6819      	ldr	r1, [r3, #0]
 800bbf2:	b109      	cbz	r1, 800bbf8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800bbf4:	2906      	cmp	r1, #6
 800bbf6:	d101      	bne.n	800bbfc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800bbf8:	2101      	movs	r1, #1
 800bbfa:	6019      	str	r1, [r3, #0]
 800bbfc:	4b0e      	ldr	r3, [pc, #56]	; (800bc38 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800bbfe:	6819      	ldr	r1, [r3, #0]
 800bc00:	4b0e      	ldr	r3, [pc, #56]	; (800bc3c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800bc02:	6019      	str	r1, [r3, #0]
 800bc04:	b12e      	cbz	r6, 800bc12 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc06:	b125      	cbz	r5, 800bc12 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc08:	9b08      	ldr	r3, [sp, #32]
 800bc0a:	4418      	add	r0, r3
 800bc0c:	5813      	ldr	r3, [r2, r0]
 800bc0e:	432b      	orrs	r3, r5
 800bc10:	5013      	str	r3, [r2, r0]
 800bc12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc16:	f891 8000 	ldrb.w	r8, [r1]
 800bc1a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800bc1e:	3101      	adds	r1, #1
 800bc20:	45f0      	cmp	r8, lr
 800bc22:	bf1c      	itt	ne
 800bc24:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800bc28:	46bc      	movne	ip, r7
 800bc2a:	e7db      	b.n	800bbe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800bc2c:	20002120 	andcs	r2, r0, r0, lsr #2
 800bc30:	2000111c 	andcs	r1, r0, ip, lsl r1
 800bc34:	20002128 	andcs	r2, r0, r8, lsr #2
 800bc38:	2000a114 	andcs	sl, r0, r4, lsl r1
 800bc3c:	20001118 	andcs	r1, r0, r8, lsl r1

0800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800bc40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc44:	461d      	mov	r5, r3
 800bc46:	4b15      	ldr	r3, [pc, #84]	; (800bc9c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800bc48:	b085      	sub	sp, #20
 800bc4a:	781b      	ldrb	r3, [r3, #0]
 800bc4c:	4607      	mov	r7, r0
 800bc4e:	4614      	mov	r4, r2
 800bc50:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800bc54:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800bc58:	b193      	cbz	r3, 800bc80 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800bc5a:	f7ff fed1 	bl	800ba00 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc5e:	4a10      	ldr	r2, [pc, #64]	; (800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800bc60:	eb08 0600 	add.w	r6, r8, r0
 800bc64:	18b3      	adds	r3, r6, r2
 800bc66:	f1b9 0f00 	cmp.w	r9, #0
 800bc6a:	d013      	beq.n	800bc94 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800bc6c:	5990      	ldr	r0, [r2, r6]
 800bc6e:	b988      	cbnz	r0, 800bc94 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800bc70:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800bc74:	4623      	mov	r3, r4
 800bc76:	4642      	mov	r2, r8
 800bc78:	4638      	mov	r0, r7
 800bc7a:	9500      	str	r5, [sp, #0]
 800bc7c:	f7ff ffa0 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bc80:	b005      	add	sp, #20
 800bc82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc86:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bc8a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800bc8e:	429d      	cmp	r5, r3
 800bc90:	d1f9      	bne.n	800bc86 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800bc92:	e7f5      	b.n	800bc80 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800bc94:	3c01      	subs	r4, #1
 800bc96:	441d      	add	r5, r3
 800bc98:	e7f9      	b.n	800bc8e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800bc9a:	bf00      	nop
 800bc9c:	20002120 	andcs	r2, r0, r0, lsr #2
 800bca0:	2000111c 	andcs	r1, r0, ip, lsl r1

0800bca4 <SpiFlashStore::Flash()>:
 800bca4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bca6:	4c25      	ldr	r4, [pc, #148]	; (800bd3c <SpiFlashStore::Flash()+0x98>)
 800bca8:	6820      	ldr	r0, [r4, #0]
 800bcaa:	2800      	cmp	r0, #0
 800bcac:	d043      	beq.n	800bd36 <SpiFlashStore::Flash()+0x92>
 800bcae:	3801      	subs	r0, #1
 800bcb0:	2805      	cmp	r0, #5
 800bcb2:	d831      	bhi.n	800bd18 <SpiFlashStore::Flash()+0x74>
 800bcb4:	e8df f000 	tbb	[pc, r0]
 800bcb8:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800bcbc:	4b203025 	blmi	8817d58 <__exidx_end+0x804038>
 800bcc0:	681a      	ldr	r2, [r3, #0]
 800bcc2:	4b20      	ldr	r3, [pc, #128]	; (800bd44 <SpiFlashStore::Flash()+0xa0>)
 800bcc4:	601a      	str	r2, [r3, #0]
 800bcc6:	2302      	movs	r3, #2
 800bcc8:	6023      	str	r3, [r4, #0]
 800bcca:	2001      	movs	r0, #1
 800bccc:	e033      	b.n	800bd36 <SpiFlashStore::Flash()+0x92>
 800bcce:	4b1c      	ldr	r3, [pc, #112]	; (800bd40 <SpiFlashStore::Flash()+0x9c>)
 800bcd0:	4a1c      	ldr	r2, [pc, #112]	; (800bd44 <SpiFlashStore::Flash()+0xa0>)
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	6812      	ldr	r2, [r2, #0]
 800bcd6:	1a9b      	subs	r3, r3, r2
 800bcd8:	2b63      	cmp	r3, #99	; 0x63
 800bcda:	d9f6      	bls.n	800bcca <SpiFlashStore::Flash()+0x26>
 800bcdc:	2303      	movs	r3, #3
 800bcde:	e7f3      	b.n	800bcc8 <SpiFlashStore::Flash()+0x24>
 800bce0:	4919      	ldr	r1, [pc, #100]	; (800bd48 <SpiFlashStore::Flash()+0xa4>)
 800bce2:	481a      	ldr	r0, [pc, #104]	; (800bd4c <SpiFlashStore::Flash()+0xa8>)
 800bce4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bce8:	6809      	ldr	r1, [r1, #0]
 800bcea:	6800      	ldr	r0, [r0, #0]
 800bcec:	ab03      	add	r3, sp, #12
 800bcee:	f000 f9ed 	bl	800c0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bcf2:	2800      	cmp	r0, #0
 800bcf4:	d0e9      	beq.n	800bcca <SpiFlashStore::Flash()+0x26>
 800bcf6:	4b12      	ldr	r3, [pc, #72]	; (800bd40 <SpiFlashStore::Flash()+0x9c>)
 800bcf8:	681a      	ldr	r2, [r3, #0]
 800bcfa:	4b12      	ldr	r3, [pc, #72]	; (800bd44 <SpiFlashStore::Flash()+0xa0>)
 800bcfc:	601a      	str	r2, [r3, #0]
 800bcfe:	2305      	movs	r3, #5
 800bd00:	e7e2      	b.n	800bcc8 <SpiFlashStore::Flash()+0x24>
 800bd02:	4b0f      	ldr	r3, [pc, #60]	; (800bd40 <SpiFlashStore::Flash()+0x9c>)
 800bd04:	4a0f      	ldr	r2, [pc, #60]	; (800bd44 <SpiFlashStore::Flash()+0xa0>)
 800bd06:	681b      	ldr	r3, [r3, #0]
 800bd08:	6812      	ldr	r2, [r2, #0]
 800bd0a:	1a9b      	subs	r3, r3, r2
 800bd0c:	2b63      	cmp	r3, #99	; 0x63
 800bd0e:	d9dc      	bls.n	800bcca <SpiFlashStore::Flash()+0x26>
 800bd10:	2304      	movs	r3, #4
 800bd12:	e7d9      	b.n	800bcc8 <SpiFlashStore::Flash()+0x24>
 800bd14:	2306      	movs	r3, #6
 800bd16:	e7d7      	b.n	800bcc8 <SpiFlashStore::Flash()+0x24>
 800bd18:	ab03      	add	r3, sp, #12
 800bd1a:	4a0d      	ldr	r2, [pc, #52]	; (800bd50 <SpiFlashStore::Flash()+0xac>)
 800bd1c:	490a      	ldr	r1, [pc, #40]	; (800bd48 <SpiFlashStore::Flash()+0xa4>)
 800bd1e:	480b      	ldr	r0, [pc, #44]	; (800bd4c <SpiFlashStore::Flash()+0xa8>)
 800bd20:	9300      	str	r3, [sp, #0]
 800bd22:	6812      	ldr	r2, [r2, #0]
 800bd24:	4b0b      	ldr	r3, [pc, #44]	; (800bd54 <SpiFlashStore::Flash()+0xb0>)
 800bd26:	6809      	ldr	r1, [r1, #0]
 800bd28:	6800      	ldr	r0, [r0, #0]
 800bd2a:	f000 fa6f 	bl	800c20c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bd2e:	2800      	cmp	r0, #0
 800bd30:	d0cb      	beq.n	800bcca <SpiFlashStore::Flash()+0x26>
 800bd32:	2000      	movs	r0, #0
 800bd34:	6020      	str	r0, [r4, #0]
 800bd36:	b004      	add	sp, #16
 800bd38:	bd10      	pop	{r4, pc}
 800bd3a:	bf00      	nop
 800bd3c:	20002128 	andcs	r2, r0, r8, lsr #2
 800bd40:	2000a114 	andcs	sl, r0, r4, lsl r1
 800bd44:	20001118 	andcs	r1, r0, r8, lsl r1
 800bd48:	2000211c 	andcs	r2, r0, ip, lsl r1
 800bd4c:	20002148 	andcs	r2, r0, r8, asr #2
 800bd50:	20002124 	andcs	r2, r0, r4, lsr #2
 800bd54:	2000111c 	andcs	r1, r0, ip, lsl r1

0800bd58 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bd58:	4770      	bx	lr
	...

0800bd5c <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800bd5c:	b507      	push	{r0, r1, r2, lr}
 800bd5e:	2300      	movs	r3, #0
 800bd60:	460a      	mov	r2, r1
 800bd62:	2101      	movs	r1, #1
 800bd64:	e9cd 3100 	strd	r3, r1, [sp]
 800bd68:	4804      	ldr	r0, [pc, #16]	; (800bd7c <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800bd6a:	2322      	movs	r3, #34	; 0x22
 800bd6c:	210f      	movs	r1, #15
 800bd6e:	6800      	ldr	r0, [r0, #0]
 800bd70:	f7ff ff66 	bl	800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bd74:	b003      	add	sp, #12
 800bd76:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd7a:	bf00      	nop
 800bd7c:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bd80 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800bd80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd82:	2200      	movs	r2, #0
 800bd84:	460b      	mov	r3, r1
 800bd86:	2122      	movs	r1, #34	; 0x22
 800bd88:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bd8c:	4804      	ldr	r0, [pc, #16]	; (800bda0 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800bd8e:	9100      	str	r1, [sp, #0]
 800bd90:	6800      	ldr	r0, [r0, #0]
 800bd92:	210f      	movs	r1, #15
 800bd94:	f7ff ff14 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd98:	b005      	add	sp, #20
 800bd9a:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd9e:	bf00      	nop
 800bda0:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bda4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bda4:	b510      	push	{r4, lr}
 800bda6:	4604      	mov	r4, r0
 800bda8:	f003 fc4a 	bl	800f640 <operator delete(void*)>
 800bdac:	4620      	mov	r0, r4
 800bdae:	bd10      	pop	{r4, pc}

0800bdb0 <StoreDisplayUdf::StoreDisplayUdf()>:
 800bdb0:	4a02      	ldr	r2, [pc, #8]	; (800bdbc <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800bdb2:	6002      	str	r2, [r0, #0]
 800bdb4:	4a02      	ldr	r2, [pc, #8]	; (800bdc0 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800bdb6:	6010      	str	r0, [r2, #0]
 800bdb8:	4770      	bx	lr
 800bdba:	bf00      	nop
 800bdbc:	08013354 	stmdaeq	r1, {r2, r4, r6, r8, r9, ip, sp}
 800bdc0:	20002134 	andcs	r2, r0, r4, lsr r1

0800bdc4 <StoreDmxSend::~StoreDmxSend()>:
 800bdc4:	4770      	bx	lr
	...

0800bdc8 <StoreDmxSend::Copy(TDmxParams*)>:
 800bdc8:	b507      	push	{r0, r1, r2, lr}
 800bdca:	2300      	movs	r3, #0
 800bdcc:	460a      	mov	r2, r1
 800bdce:	2101      	movs	r1, #1
 800bdd0:	e9cd 3100 	strd	r3, r1, [sp]
 800bdd4:	4804      	ldr	r0, [pc, #16]	; (800bde8 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 800bdd6:	230a      	movs	r3, #10
 800bdd8:	2102      	movs	r1, #2
 800bdda:	6800      	ldr	r0, [r0, #0]
 800bddc:	f7ff ff30 	bl	800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bde0:	b003      	add	sp, #12
 800bde2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bde6:	bf00      	nop
 800bde8:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bdec <StoreDmxSend::Update(TDmxParams const*)>:
 800bdec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bdee:	2200      	movs	r2, #0
 800bdf0:	460b      	mov	r3, r1
 800bdf2:	210a      	movs	r1, #10
 800bdf4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bdf8:	4804      	ldr	r0, [pc, #16]	; (800be0c <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800bdfa:	9100      	str	r1, [sp, #0]
 800bdfc:	6800      	ldr	r0, [r0, #0]
 800bdfe:	2102      	movs	r1, #2
 800be00:	f7ff fede 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be04:	b005      	add	sp, #20
 800be06:	f85d fb04 	ldr.w	pc, [sp], #4
 800be0a:	bf00      	nop
 800be0c:	2000212c 	andcs	r2, r0, ip, lsr #2

0800be10 <StoreDmxSend::~StoreDmxSend()>:
 800be10:	b510      	push	{r4, lr}
 800be12:	4604      	mov	r4, r0
 800be14:	f003 fc14 	bl	800f640 <operator delete(void*)>
 800be18:	4620      	mov	r0, r4
 800be1a:	bd10      	pop	{r4, pc}

0800be1c <StoreDmxSend::StoreDmxSend()>:
 800be1c:	4a02      	ldr	r2, [pc, #8]	; (800be28 <StoreDmxSend::StoreDmxSend()+0xc>)
 800be1e:	6002      	str	r2, [r0, #0]
 800be20:	4a02      	ldr	r2, [pc, #8]	; (800be2c <StoreDmxSend::StoreDmxSend()+0x10>)
 800be22:	6010      	str	r0, [r2, #0]
 800be24:	4770      	bx	lr
 800be26:	bf00      	nop
 800be28:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}
 800be2c:	20002138 	andcs	r2, r0, r8, lsr r1

0800be30 <StoreNetwork::~StoreNetwork()>:
 800be30:	4770      	bx	lr

0800be32 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800be32:	3804      	subs	r0, #4
 800be34:	4770      	bx	lr
	...

0800be38 <StoreNetwork::Update(networkparams::Params const*)>:
 800be38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be3a:	2200      	movs	r2, #0
 800be3c:	460b      	mov	r3, r1
 800be3e:	215e      	movs	r1, #94	; 0x5e
 800be40:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800be44:	4804      	ldr	r0, [pc, #16]	; (800be58 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800be46:	9100      	str	r1, [sp, #0]
 800be48:	6800      	ldr	r0, [r0, #0]
 800be4a:	4611      	mov	r1, r2
 800be4c:	f7ff feb8 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be50:	b005      	add	sp, #20
 800be52:	f85d fb04 	ldr.w	pc, [sp], #4
 800be56:	bf00      	nop
 800be58:	2000212c 	andcs	r2, r0, ip, lsr #2

0800be5c <StoreNetwork::SaveDhcp(bool)>:
 800be5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be5e:	2301      	movs	r3, #1
 800be60:	f88d 1017 	strb.w	r1, [sp, #23]
 800be64:	2100      	movs	r1, #0
 800be66:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be6a:	4805      	ldr	r0, [pc, #20]	; (800be80 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800be6c:	9300      	str	r3, [sp, #0]
 800be6e:	2214      	movs	r2, #20
 800be70:	6800      	ldr	r0, [r0, #0]
 800be72:	f10d 0317 	add.w	r3, sp, #23
 800be76:	f7ff fea3 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be7a:	b007      	add	sp, #28
 800be7c:	f85d fb04 	ldr.w	pc, [sp], #4
 800be80:	2000212c 	andcs	r2, r0, ip, lsr #2

0800be84 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800be84:	f1a0 0004 	sub.w	r0, r0, #4
 800be88:	e7e8      	b.n	800be5c <StoreNetwork::SaveDhcp(bool)>
 800be8a:	bf00      	nop

0800be8c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800be8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be8e:	2308      	movs	r3, #8
 800be90:	9105      	str	r1, [sp, #20]
 800be92:	2100      	movs	r1, #0
 800be94:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be98:	2304      	movs	r3, #4
 800be9a:	4805      	ldr	r0, [pc, #20]	; (800beb0 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800be9c:	9300      	str	r3, [sp, #0]
 800be9e:	220c      	movs	r2, #12
 800bea0:	6800      	ldr	r0, [r0, #0]
 800bea2:	ab05      	add	r3, sp, #20
 800bea4:	f7ff fe8c 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bea8:	b007      	add	sp, #28
 800beaa:	f85d fb04 	ldr.w	pc, [sp], #4
 800beae:	bf00      	nop
 800beb0:	2000212c 	andcs	r2, r0, ip, lsr #2

0800beb4 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800beb4:	f1a0 0004 	sub.w	r0, r0, #4
 800beb8:	e7e8      	b.n	800be8c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800beba:	bf00      	nop

0800bebc <StoreNetwork::SaveNetMask(unsigned int)>:
 800bebc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bebe:	2304      	movs	r3, #4
 800bec0:	9105      	str	r1, [sp, #20]
 800bec2:	2100      	movs	r1, #0
 800bec4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bec8:	4804      	ldr	r0, [pc, #16]	; (800bedc <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800beca:	9300      	str	r3, [sp, #0]
 800becc:	2208      	movs	r2, #8
 800bece:	6800      	ldr	r0, [r0, #0]
 800bed0:	ab05      	add	r3, sp, #20
 800bed2:	f7ff fe75 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bed6:	b007      	add	sp, #28
 800bed8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bedc:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bee0 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800bee0:	f1a0 0004 	sub.w	r0, r0, #4
 800bee4:	e7ea      	b.n	800bebc <StoreNetwork::SaveNetMask(unsigned int)>
 800bee6:	bf00      	nop

0800bee8 <StoreNetwork::SaveIp(unsigned int)>:
 800bee8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800beea:	2302      	movs	r3, #2
 800beec:	9105      	str	r1, [sp, #20]
 800beee:	2100      	movs	r1, #0
 800bef0:	2204      	movs	r2, #4
 800bef2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bef6:	4804      	ldr	r0, [pc, #16]	; (800bf08 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800bef8:	9200      	str	r2, [sp, #0]
 800befa:	6800      	ldr	r0, [r0, #0]
 800befc:	ab05      	add	r3, sp, #20
 800befe:	f7ff fe5f 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf02:	b007      	add	sp, #28
 800bf04:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf08:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bf0c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800bf0c:	f1a0 0004 	sub.w	r0, r0, #4
 800bf10:	e7ea      	b.n	800bee8 <StoreNetwork::SaveIp(unsigned int)>
 800bf12:	bf00      	nop

0800bf14 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bf14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf16:	460b      	mov	r3, r1
 800bf18:	2020      	movs	r0, #32
 800bf1a:	2100      	movs	r1, #0
 800bf1c:	2a40      	cmp	r2, #64	; 0x40
 800bf1e:	bf28      	it	cs
 800bf20:	2240      	movcs	r2, #64	; 0x40
 800bf22:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800bf26:	4804      	ldr	r0, [pc, #16]	; (800bf38 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800bf28:	9200      	str	r2, [sp, #0]
 800bf2a:	6800      	ldr	r0, [r0, #0]
 800bf2c:	2215      	movs	r2, #21
 800bf2e:	f7ff fe47 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf32:	b005      	add	sp, #20
 800bf34:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf38:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bf3c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bf3c:	f1a0 0004 	sub.w	r0, r0, #4
 800bf40:	e7e8      	b.n	800bf14 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800bf42:	bf00      	nop

0800bf44 <StoreNetwork::~StoreNetwork()>:
 800bf44:	b510      	push	{r4, lr}
 800bf46:	4604      	mov	r4, r0
 800bf48:	f003 fb7a 	bl	800f640 <operator delete(void*)>
 800bf4c:	4620      	mov	r0, r4
 800bf4e:	bd10      	pop	{r4, pc}

0800bf50 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bf50:	f1a0 0004 	sub.w	r0, r0, #4
 800bf54:	e7f6      	b.n	800bf44 <StoreNetwork::~StoreNetwork()>
	...

0800bf58 <StoreNetwork::Copy(networkparams::Params*)>:
 800bf58:	b507      	push	{r0, r1, r2, lr}
 800bf5a:	2301      	movs	r3, #1
 800bf5c:	460a      	mov	r2, r1
 800bf5e:	2100      	movs	r1, #0
 800bf60:	e9cd 1300 	strd	r1, r3, [sp]
 800bf64:	4803      	ldr	r0, [pc, #12]	; (800bf74 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800bf66:	235e      	movs	r3, #94	; 0x5e
 800bf68:	6800      	ldr	r0, [r0, #0]
 800bf6a:	f7ff fe69 	bl	800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bf6e:	b003      	add	sp, #12
 800bf70:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf74:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bf78 <StoreNetwork::StoreNetwork()>:
 800bf78:	4a03      	ldr	r2, [pc, #12]	; (800bf88 <StoreNetwork::StoreNetwork()+0x10>)
 800bf7a:	6002      	str	r2, [r0, #0]
 800bf7c:	322c      	adds	r2, #44	; 0x2c
 800bf7e:	6042      	str	r2, [r0, #4]
 800bf80:	4a02      	ldr	r2, [pc, #8]	; (800bf8c <StoreNetwork::StoreNetwork()+0x14>)
 800bf82:	6010      	str	r0, [r2, #0]
 800bf84:	4770      	bx	lr
 800bf86:	bf00      	nop
 800bf88:	08013384 	stmdaeq	r1, {r2, r7, r8, r9, ip, sp}
 800bf8c:	2000213c 	andcs	r2, r0, ip, lsr r1

0800bf90 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bf90:	4770      	bx	lr
	...

0800bf94 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800bf94:	b507      	push	{r0, r1, r2, lr}
 800bf96:	2300      	movs	r3, #0
 800bf98:	460a      	mov	r2, r1
 800bf9a:	2101      	movs	r1, #1
 800bf9c:	e9cd 3100 	strd	r3, r1, [sp]
 800bfa0:	4804      	ldr	r0, [pc, #16]	; (800bfb4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800bfa2:	2320      	movs	r3, #32
 800bfa4:	210c      	movs	r1, #12
 800bfa6:	6800      	ldr	r0, [r0, #0]
 800bfa8:	f7ff fe4a 	bl	800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bfac:	b003      	add	sp, #12
 800bfae:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfb2:	bf00      	nop
 800bfb4:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bfb8 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800bfb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfba:	2200      	movs	r2, #0
 800bfbc:	460b      	mov	r3, r1
 800bfbe:	2120      	movs	r1, #32
 800bfc0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bfc4:	4804      	ldr	r0, [pc, #16]	; (800bfd8 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800bfc6:	9100      	str	r1, [sp, #0]
 800bfc8:	6800      	ldr	r0, [r0, #0]
 800bfca:	210c      	movs	r1, #12
 800bfcc:	f7ff fdf8 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bfd0:	b005      	add	sp, #20
 800bfd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfd6:	bf00      	nop
 800bfd8:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bfdc <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bfdc:	b510      	push	{r4, lr}
 800bfde:	4604      	mov	r4, r0
 800bfe0:	f003 fb2e 	bl	800f640 <operator delete(void*)>
 800bfe4:	4620      	mov	r0, r4
 800bfe6:	bd10      	pop	{r4, pc}

0800bfe8 <StoreRemoteConfig::StoreRemoteConfig()>:
 800bfe8:	4a02      	ldr	r2, [pc, #8]	; (800bff4 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800bfea:	6002      	str	r2, [r0, #0]
 800bfec:	4a02      	ldr	r2, [pc, #8]	; (800bff8 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800bfee:	6010      	str	r0, [r2, #0]
 800bff0:	4770      	bx	lr
 800bff2:	bf00      	nop
 800bff4:	080133d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, ip, sp}
 800bff8:	20002140 	andcs	r2, r0, r0, asr #2

0800bffc <StoreE131::~StoreE131()>:
 800bffc:	4770      	bx	lr
	...

0800c000 <StoreE131::Copy(e131params::Params*)>:
 800c000:	b507      	push	{r0, r1, r2, lr}
 800c002:	2300      	movs	r3, #0
 800c004:	460a      	mov	r2, r1
 800c006:	2101      	movs	r1, #1
 800c008:	e9cd 3100 	strd	r3, r1, [sp]
 800c00c:	4804      	ldr	r0, [pc, #16]	; (800c020 <StoreE131::Copy(e131params::Params*)+0x20>)
 800c00e:	2313      	movs	r3, #19
 800c010:	2104      	movs	r1, #4
 800c012:	6800      	ldr	r0, [r0, #0]
 800c014:	f7ff fe14 	bl	800bc40 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800c018:	b003      	add	sp, #12
 800c01a:	f85d fb04 	ldr.w	pc, [sp], #4
 800c01e:	bf00      	nop
 800c020:	2000212c 	andcs	r2, r0, ip, lsr #2

0800c024 <StoreE131::Update(e131params::Params const*)>:
 800c024:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c026:	2200      	movs	r2, #0
 800c028:	460b      	mov	r3, r1
 800c02a:	2113      	movs	r1, #19
 800c02c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800c030:	4804      	ldr	r0, [pc, #16]	; (800c044 <StoreE131::Update(e131params::Params const*)+0x20>)
 800c032:	9100      	str	r1, [sp, #0]
 800c034:	6800      	ldr	r0, [r0, #0]
 800c036:	2104      	movs	r1, #4
 800c038:	f7ff fdc2 	bl	800bbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800c03c:	b005      	add	sp, #20
 800c03e:	f85d fb04 	ldr.w	pc, [sp], #4
 800c042:	bf00      	nop
 800c044:	2000212c 	andcs	r2, r0, ip, lsr #2

0800c048 <StoreE131::~StoreE131()>:
 800c048:	b510      	push	{r4, lr}
 800c04a:	4604      	mov	r4, r0
 800c04c:	f003 faf8 	bl	800f640 <operator delete(void*)>
 800c050:	4620      	mov	r0, r4
 800c052:	bd10      	pop	{r4, pc}

0800c054 <StoreE131::StoreE131()>:
 800c054:	4a02      	ldr	r2, [pc, #8]	; (800c060 <StoreE131::StoreE131()+0xc>)
 800c056:	6002      	str	r2, [r0, #0]
 800c058:	4a02      	ldr	r2, [pc, #8]	; (800c064 <StoreE131::StoreE131()+0x10>)
 800c05a:	6010      	str	r0, [r2, #0]
 800c05c:	4770      	bx	lr
 800c05e:	bf00      	nop
 800c060:	080133ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, ip, sp}
 800c064:	20002144 	andcs	r2, r0, r4, asr #2

0800c068 <FlashRom::FlashRom()>:
 800c068:	4b07      	ldr	r3, [pc, #28]	; (800c088 <FlashRom::FlashRom()+0x20>)
 800c06a:	b510      	push	{r4, lr}
 800c06c:	6018      	str	r0, [r3, #0]
 800c06e:	2301      	movs	r3, #1
 800c070:	4604      	mov	r4, r0
 800c072:	7003      	strb	r3, [r0, #0]
 800c074:	4b05      	ldr	r3, [pc, #20]	; (800c08c <FlashRom::FlashRom()+0x24>)
 800c076:	4906      	ldr	r1, [pc, #24]	; (800c090 <FlashRom::FlashRom()+0x28>)
 800c078:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c07c:	4805      	ldr	r0, [pc, #20]	; (800c094 <FlashRom::FlashRom()+0x2c>)
 800c07e:	029a      	lsls	r2, r3, #10
 800c080:	f003 fdd2 	bl	800fc28 <printf>
 800c084:	4620      	mov	r0, r4
 800c086:	bd10      	pop	{r4, pc}
 800c088:	20002148 	andcs	r2, r0, r8, asr #2
 800c08c:	1ffff700 	svcne	0x00fff700
 800c090:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 800c094:	080133fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}

0800c098 <FlashRom::GetSize() const>:
 800c098:	4b02      	ldr	r3, [pc, #8]	; (800c0a4 <FlashRom::GetSize() const+0xc>)
 800c09a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800c09e:	0280      	lsls	r0, r0, #10
 800c0a0:	4770      	bx	lr
 800c0a2:	bf00      	nop
 800c0a4:	1ffff700 	svcne	0x00fff700

0800c0a8 <FlashRom::GetSectorSize() const>:
 800c0a8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800c0ac:	4770      	bx	lr

0800c0ae <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800c0ae:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c0b2:	441a      	add	r2, r3
 800c0b4:	4293      	cmp	r3, r2
 800c0b6:	d104      	bne.n	800c0c2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800c0b8:	2200      	movs	r2, #0
 800c0ba:	9b00      	ldr	r3, [sp, #0]
 800c0bc:	2001      	movs	r0, #1
 800c0be:	601a      	str	r2, [r3, #0]
 800c0c0:	4770      	bx	lr
 800c0c2:	f851 0b04 	ldr.w	r0, [r1], #4
 800c0c6:	f843 0b04 	str.w	r0, [r3], #4
 800c0ca:	e7f3      	b.n	800c0b4 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800c0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800c0cc:	2000      	movs	r0, #0
 800c0ce:	b538      	push	{r3, r4, r5, lr}
 800c0d0:	4c47      	ldr	r4, [pc, #284]	; (800c1f0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800c0d2:	6018      	str	r0, [r3, #0]
 800c0d4:	6823      	ldr	r3, [r4, #0]
 800c0d6:	2b04      	cmp	r3, #4
 800c0d8:	f200 8082 	bhi.w	800c1e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c0dc:	e8df f003 	tbb	[pc, r3]
 800c0e0:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800c0e4:	4b430080 	blmi	90cc2ec <__exidx_end+0x10b85cc>
 800c0e8:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c0ec:	6019      	str	r1, [r3, #0]
 800c0ee:	4b42      	ldr	r3, [pc, #264]	; (800c1f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c0f0:	601a      	str	r2, [r3, #0]
 800c0f2:	4b42      	ldr	r3, [pc, #264]	; (800c1fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800c0f4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c0f8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c0fc:	4b40      	ldr	r3, [pc, #256]	; (800c200 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c0fe:	d807      	bhi.n	800c110 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800c100:	2201      	movs	r2, #1
 800c102:	701a      	strb	r2, [r3, #0]
 800c104:	f004 f854 	bl	80101b0 <fmc_bank0_unlock>
 800c108:	2301      	movs	r3, #1
 800c10a:	6023      	str	r3, [r4, #0]
 800c10c:	2000      	movs	r0, #0
 800c10e:	e026      	b.n	800c15e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c110:	4a3c      	ldr	r2, [pc, #240]	; (800c204 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800c112:	4291      	cmp	r1, r2
 800c114:	d3f4      	bcc.n	800c100 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800c116:	2200      	movs	r2, #0
 800c118:	701a      	strb	r2, [r3, #0]
 800c11a:	f004 f857 	bl	80101cc <fmc_bank1_unlock>
 800c11e:	e7f3      	b.n	800c108 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c120:	4d37      	ldr	r5, [pc, #220]	; (800c200 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c122:	782b      	ldrb	r3, [r5, #0]
 800c124:	b15b      	cbz	r3, 800c13e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800c126:	f004 f86f 	bl	8010208 <fmc_bank0_state_get>
 800c12a:	2801      	cmp	r0, #1
 800c12c:	d0ee      	beq.n	800c10c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800c12e:	7829      	ldrb	r1, [r5, #0]
 800c130:	4b35      	ldr	r3, [pc, #212]	; (800c208 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c132:	b939      	cbnz	r1, 800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800c134:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c136:	f022 0202 	bic.w	r2, r2, #2
 800c13a:	651a      	str	r2, [r3, #80]	; 0x50
 800c13c:	e006      	b.n	800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800c13e:	f004 f875 	bl	801022c <fmc_bank1_state_get>
 800c142:	e7f2      	b.n	800c12a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800c144:	691a      	ldr	r2, [r3, #16]
 800c146:	f022 0202 	bic.w	r2, r2, #2
 800c14a:	611a      	str	r2, [r3, #16]
 800c14c:	4b2a      	ldr	r3, [pc, #168]	; (800c1f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c14e:	681b      	ldr	r3, [r3, #0]
 800c150:	b94b      	cbnz	r3, 800c166 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800c152:	b129      	cbz	r1, 800c160 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800c154:	f004 f848 	bl	80101e8 <fmc_bank0_lock>
 800c158:	2300      	movs	r3, #0
 800c15a:	2001      	movs	r0, #1
 800c15c:	6023      	str	r3, [r4, #0]
 800c15e:	bd38      	pop	{r3, r4, r5, pc}
 800c160:	f004 f84a 	bl	80101f8 <fmc_bank1_lock>
 800c164:	e7f8      	b.n	800c158 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800c166:	2302      	movs	r3, #2
 800c168:	e7cf      	b.n	800c10a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800c16a:	4923      	ldr	r1, [pc, #140]	; (800c1f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c16c:	680b      	ldr	r3, [r1, #0]
 800c16e:	2b00      	cmp	r3, #0
 800c170:	d0ca      	beq.n	800c108 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c172:	4b23      	ldr	r3, [pc, #140]	; (800c200 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c174:	4a1f      	ldr	r2, [pc, #124]	; (800c1f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800c176:	7818      	ldrb	r0, [r3, #0]
 800c178:	4b23      	ldr	r3, [pc, #140]	; (800c208 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c17a:	b190      	cbz	r0, 800c1a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800c17c:	6918      	ldr	r0, [r3, #16]
 800c17e:	f040 0002 	orr.w	r0, r0, #2
 800c182:	6118      	str	r0, [r3, #16]
 800c184:	6810      	ldr	r0, [r2, #0]
 800c186:	6158      	str	r0, [r3, #20]
 800c188:	6918      	ldr	r0, [r3, #16]
 800c18a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800c18e:	6118      	str	r0, [r3, #16]
 800c190:	680b      	ldr	r3, [r1, #0]
 800c192:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800c196:	600b      	str	r3, [r1, #0]
 800c198:	6813      	ldr	r3, [r2, #0]
 800c19a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c19e:	6013      	str	r3, [r2, #0]
 800c1a0:	e7b2      	b.n	800c108 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c1a2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c1a4:	f040 0002 	orr.w	r0, r0, #2
 800c1a8:	6518      	str	r0, [r3, #80]	; 0x50
 800c1aa:	6810      	ldr	r0, [r2, #0]
 800c1ac:	6558      	str	r0, [r3, #84]	; 0x54
 800c1ae:	69dd      	ldr	r5, [r3, #28]
 800c1b0:	07ad      	lsls	r5, r5, #30
 800c1b2:	bf48      	it	mi
 800c1b4:	6158      	strmi	r0, [r3, #20]
 800c1b6:	4814      	ldr	r0, [pc, #80]	; (800c208 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1b8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c1ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c1be:	6503      	str	r3, [r0, #80]	; 0x50
 800c1c0:	680b      	ldr	r3, [r1, #0]
 800c1c2:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800c1c6:	600b      	str	r3, [r1, #0]
 800c1c8:	6813      	ldr	r3, [r2, #0]
 800c1ca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c1ce:	e7e6      	b.n	800c19e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800c1d0:	4b0b      	ldr	r3, [pc, #44]	; (800c200 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c1d2:	781a      	ldrb	r2, [r3, #0]
 800c1d4:	4b0c      	ldr	r3, [pc, #48]	; (800c208 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1d6:	b132      	cbz	r2, 800c1e6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800c1d8:	691a      	ldr	r2, [r3, #16]
 800c1da:	f022 0201 	bic.w	r2, r2, #1
 800c1de:	611a      	str	r2, [r3, #16]
 800c1e0:	2000      	movs	r0, #0
 800c1e2:	6020      	str	r0, [r4, #0]
 800c1e4:	e7bb      	b.n	800c15e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c1e6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c1e8:	f022 0201 	bic.w	r2, r2, #1
 800c1ec:	651a      	str	r2, [r3, #80]	; 0x50
 800c1ee:	e7f7      	b.n	800c1e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c1f0:	20002150 	andcs	r2, r0, r0, asr r1
 800c1f4:	20002154 	andcs	r2, r0, r4, asr r1
 800c1f8:	20002160 	andcs	r2, r0, r0, ror #2
 800c1fc:	1ffff700 	svcne	0x00fff700
 800c200:	2000215c 	andcs	r2, r0, ip, asr r1
 800c204:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c208:	40022000 	andmi	r2, r2, r0

0800c20c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800c20c:	b570      	push	{r4, r5, r6, lr}
 800c20e:	2400      	movs	r4, #0
 800c210:	9804      	ldr	r0, [sp, #16]
 800c212:	6004      	str	r4, [r0, #0]
 800c214:	4c48      	ldr	r4, [pc, #288]	; (800c338 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800c216:	6820      	ldr	r0, [r4, #0]
 800c218:	2804      	cmp	r0, #4
 800c21a:	d848      	bhi.n	800c2ae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800c21c:	e8df f000 	tbb	[pc, r0]
 800c220:	22847c03 	addcs	r7, r4, #768	; 0x300
 800c224:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800c228:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c22c:	6001      	str	r1, [r0, #0]
 800c22e:	4844      	ldr	r0, [pc, #272]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c230:	6003      	str	r3, [r0, #0]
 800c232:	4b44      	ldr	r3, [pc, #272]	; (800c344 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c234:	601a      	str	r2, [r3, #0]
 800c236:	4b44      	ldr	r3, [pc, #272]	; (800c348 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c238:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c23c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c240:	4b42      	ldr	r3, [pc, #264]	; (800c34c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c242:	d807      	bhi.n	800c254 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c244:	2201      	movs	r2, #1
 800c246:	701a      	strb	r2, [r3, #0]
 800c248:	f003 ffb2 	bl	80101b0 <fmc_bank0_unlock>
 800c24c:	2303      	movs	r3, #3
 800c24e:	6023      	str	r3, [r4, #0]
 800c250:	2000      	movs	r0, #0
 800c252:	e026      	b.n	800c2a2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c254:	4a3e      	ldr	r2, [pc, #248]	; (800c350 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c256:	4291      	cmp	r1, r2
 800c258:	d3f4      	bcc.n	800c244 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c25a:	2200      	movs	r2, #0
 800c25c:	701a      	strb	r2, [r3, #0]
 800c25e:	f003 ffb5 	bl	80101cc <fmc_bank1_unlock>
 800c262:	e7f3      	b.n	800c24c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c264:	4d39      	ldr	r5, [pc, #228]	; (800c34c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c266:	782b      	ldrb	r3, [r5, #0]
 800c268:	b15b      	cbz	r3, 800c282 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c26a:	f003 ffcd 	bl	8010208 <fmc_bank0_state_get>
 800c26e:	2801      	cmp	r0, #1
 800c270:	d0ee      	beq.n	800c250 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c272:	7829      	ldrb	r1, [r5, #0]
 800c274:	4b37      	ldr	r3, [pc, #220]	; (800c354 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c276:	b939      	cbnz	r1, 800c288 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c278:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c27a:	f022 0201 	bic.w	r2, r2, #1
 800c27e:	651a      	str	r2, [r3, #80]	; 0x50
 800c280:	e006      	b.n	800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c282:	f003 ffd3 	bl	801022c <fmc_bank1_state_get>
 800c286:	e7f2      	b.n	800c26e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c288:	691a      	ldr	r2, [r3, #16]
 800c28a:	f022 0201 	bic.w	r2, r2, #1
 800c28e:	611a      	str	r2, [r3, #16]
 800c290:	4b2c      	ldr	r3, [pc, #176]	; (800c344 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c292:	681b      	ldr	r3, [r3, #0]
 800c294:	b94b      	cbnz	r3, 800c2aa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c296:	b129      	cbz	r1, 800c2a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c298:	f003 ffa6 	bl	80101e8 <fmc_bank0_lock>
 800c29c:	2300      	movs	r3, #0
 800c29e:	2001      	movs	r0, #1
 800c2a0:	6023      	str	r3, [r4, #0]
 800c2a2:	bd70      	pop	{r4, r5, r6, pc}
 800c2a4:	f003 ffa8 	bl	80101f8 <fmc_bank1_lock>
 800c2a8:	e7f8      	b.n	800c29c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c2aa:	2304      	movs	r3, #4
 800c2ac:	e7cf      	b.n	800c24e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c2ae:	4a25      	ldr	r2, [pc, #148]	; (800c344 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c2b0:	6813      	ldr	r3, [r2, #0]
 800c2b2:	2b03      	cmp	r3, #3
 800c2b4:	d91a      	bls.n	800c2ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c2b6:	4b25      	ldr	r3, [pc, #148]	; (800c34c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c2b8:	7819      	ldrb	r1, [r3, #0]
 800c2ba:	4b26      	ldr	r3, [pc, #152]	; (800c354 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2bc:	b189      	cbz	r1, 800c2e2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c2be:	6919      	ldr	r1, [r3, #16]
 800c2c0:	f041 0101 	orr.w	r1, r1, #1
 800c2c4:	6119      	str	r1, [r3, #16]
 800c2c6:	4d1e      	ldr	r5, [pc, #120]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c2c8:	481c      	ldr	r0, [pc, #112]	; (800c33c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c2ca:	6829      	ldr	r1, [r5, #0]
 800c2cc:	6803      	ldr	r3, [r0, #0]
 800c2ce:	f851 6b04 	ldr.w	r6, [r1], #4
 800c2d2:	f843 6b04 	str.w	r6, [r3], #4
 800c2d6:	6003      	str	r3, [r0, #0]
 800c2d8:	6813      	ldr	r3, [r2, #0]
 800c2da:	6029      	str	r1, [r5, #0]
 800c2dc:	3b04      	subs	r3, #4
 800c2de:	6013      	str	r3, [r2, #0]
 800c2e0:	e7b4      	b.n	800c24c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c2e2:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c2e4:	f041 0101 	orr.w	r1, r1, #1
 800c2e8:	6519      	str	r1, [r3, #80]	; 0x50
 800c2ea:	e7ec      	b.n	800c2c6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c2ec:	2b00      	cmp	r3, #0
 800c2ee:	d0ad      	beq.n	800c24c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c2f0:	4b16      	ldr	r3, [pc, #88]	; (800c34c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c2f2:	781a      	ldrb	r2, [r3, #0]
 800c2f4:	4b17      	ldr	r3, [pc, #92]	; (800c354 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2f6:	b152      	cbz	r2, 800c30e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c2f8:	691a      	ldr	r2, [r3, #16]
 800c2fa:	f042 0201 	orr.w	r2, r2, #1
 800c2fe:	611a      	str	r2, [r3, #16]
 800c300:	4a0f      	ldr	r2, [pc, #60]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c302:	4b0e      	ldr	r3, [pc, #56]	; (800c33c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c304:	6812      	ldr	r2, [r2, #0]
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	6812      	ldr	r2, [r2, #0]
 800c30a:	601a      	str	r2, [r3, #0]
 800c30c:	e79e      	b.n	800c24c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c30e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c310:	f042 0201 	orr.w	r2, r2, #1
 800c314:	651a      	str	r2, [r3, #80]	; 0x50
 800c316:	e7f3      	b.n	800c300 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c318:	4b0c      	ldr	r3, [pc, #48]	; (800c34c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c31a:	781a      	ldrb	r2, [r3, #0]
 800c31c:	4b0d      	ldr	r3, [pc, #52]	; (800c354 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c31e:	b132      	cbz	r2, 800c32e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c320:	691a      	ldr	r2, [r3, #16]
 800c322:	f022 0202 	bic.w	r2, r2, #2
 800c326:	611a      	str	r2, [r3, #16]
 800c328:	2000      	movs	r0, #0
 800c32a:	6020      	str	r0, [r4, #0]
 800c32c:	e7b9      	b.n	800c2a2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c32e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c330:	f022 0202 	bic.w	r2, r2, #2
 800c334:	651a      	str	r2, [r3, #80]	; 0x50
 800c336:	e7f7      	b.n	800c328 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c338:	20002150 	andcs	r2, r0, r0, asr r1
 800c33c:	2000214c 	andcs	r2, r0, ip, asr #2
 800c340:	20002158 	andcs	r2, r0, r8, asr r1
 800c344:	20002160 	andcs	r2, r0, r0, ror #2
 800c348:	1ffff700 	svcne	0x00fff700
 800c34c:	2000215c 	andcs	r2, r0, ip, asr r1
 800c350:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c354:	40022000 	andmi	r2, r2, r0

0800c358 <net_timers_run>:
 800c358:	4b05      	ldr	r3, [pc, #20]	; (800c370 <net_timers_run+0x18>)
 800c35a:	4a06      	ldr	r2, [pc, #24]	; (800c374 <net_timers_run+0x1c>)
 800c35c:	681b      	ldr	r3, [r3, #0]
 800c35e:	6811      	ldr	r1, [r2, #0]
 800c360:	4299      	cmp	r1, r3
 800c362:	d803      	bhi.n	800c36c <net_timers_run+0x14>
 800c364:	3364      	adds	r3, #100	; 0x64
 800c366:	6013      	str	r3, [r2, #0]
 800c368:	f001 be78 	b.w	800e05c <igmp_timer>
 800c36c:	4770      	bx	lr
 800c36e:	bf00      	nop
 800c370:	2000a114 	andcs	sl, r0, r4, lsl r1
 800c374:	2000217c 	andcs	r2, r0, ip, ror r1

0800c378 <rfc3927>:
 800c378:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c37c:	4606      	mov	r6, r0
 800c37e:	25ff      	movs	r5, #255	; 0xff
 800c380:	4b18      	ldr	r3, [pc, #96]	; (800c3e4 <rfc3927+0x6c>)
 800c382:	4f19      	ldr	r7, [pc, #100]	; (800c3e8 <rfc3927+0x70>)
 800c384:	791a      	ldrb	r2, [r3, #4]
 800c386:	78dc      	ldrb	r4, [r3, #3]
 800c388:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c3ec <rfc3927+0x74>
 800c38c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c390:	f8d7 9000 	ldr.w	r9, [r7]
 800c394:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c3f0 <rfc3927+0x78>
 800c398:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c3f4 <rfc3927+0x7c>
 800c39c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c3a0:	4659      	mov	r1, fp
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	f001 fbb8 	bl	800db18 <arp_cache_lookup>
 800c3a8:	b190      	cbz	r0, 800c3d0 <rfc3927+0x58>
 800c3aa:	ba24      	rev	r4, r4
 800c3ac:	3401      	adds	r4, #1
 800c3ae:	3d01      	subs	r5, #1
 800c3b0:	ba24      	rev	r4, r4
 800c3b2:	b2ad      	uxth	r5, r5
 800c3b4:	4554      	cmp	r4, sl
 800c3b6:	bf08      	it	eq
 800c3b8:	4644      	moveq	r4, r8
 800c3ba:	b18d      	cbz	r5, 800c3e0 <rfc3927+0x68>
 800c3bc:	683b      	ldr	r3, [r7, #0]
 800c3be:	eba3 0309 	sub.w	r3, r3, r9
 800c3c2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c3c6:	d3eb      	bcc.n	800c3a0 <rfc3927+0x28>
 800c3c8:	2400      	movs	r4, #0
 800c3ca:	4623      	mov	r3, r4
 800c3cc:	4620      	mov	r0, r4
 800c3ce:	e002      	b.n	800c3d6 <rfc3927+0x5e>
 800c3d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3d4:	2001      	movs	r0, #1
 800c3d6:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800c3da:	6034      	str	r4, [r6, #0]
 800c3dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3e0:	462c      	mov	r4, r5
 800c3e2:	e7f2      	b.n	800c3ca <rfc3927+0x52>
 800c3e4:	20002180 	andcs	r2, r0, r0, lsl #3
 800c3e8:	2000a114 	andcs	sl, r0, r4, lsl r1
 800c3ec:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c3f0:	20002188 	andcs	r2, r0, r8, lsl #3
 800c3f4:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c3f8 <_init_tcb>:
 800c3f8:	b510      	push	{r4, lr}
 800c3fa:	4603      	mov	r3, r0
 800c3fc:	2400      	movs	r4, #0
 800c3fe:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c402:	4293      	cmp	r3, r2
 800c404:	d10d      	bne.n	800c422 <_init_tcb+0x2a>
 800c406:	4b08      	ldr	r3, [pc, #32]	; (800c428 <_init_tcb+0x30>)
 800c408:	f640 3268 	movw	r2, #2920	; 0xb68
 800c40c:	681b      	ldr	r3, [r3, #0]
 800c40e:	8702      	strh	r2, [r0, #56]	; 0x38
 800c410:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c414:	6283      	str	r3, [r0, #40]	; 0x28
 800c416:	6243      	str	r3, [r0, #36]	; 0x24
 800c418:	2301      	movs	r3, #1
 800c41a:	8001      	strh	r1, [r0, #0]
 800c41c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c420:	bd10      	pop	{r4, pc}
 800c422:	f803 4b01 	strb.w	r4, [r3], #1
 800c426:	e7ec      	b.n	800c402 <_init_tcb+0xa>
 800c428:	2000a114 	andcs	sl, r0, r4, lsl r1

0800c42c <memcpy.isra.0>:
 800c42c:	3801      	subs	r0, #1
 800c42e:	440a      	add	r2, r1
 800c430:	4291      	cmp	r1, r2
 800c432:	d100      	bne.n	800c436 <memcpy.isra.0+0xa>
 800c434:	4770      	bx	lr
 800c436:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c43a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c43e:	e7f7      	b.n	800c430 <memcpy.isra.0+0x4>

0800c440 <_bswap32>:
 800c440:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c442:	2204      	movs	r2, #4
 800c444:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c448:	4629      	mov	r1, r5
 800c44a:	4604      	mov	r4, r0
 800c44c:	eb0d 0002 	add.w	r0, sp, r2
 800c450:	f7ff ffec 	bl	800c42c <memcpy.isra.0>
 800c454:	2204      	movs	r2, #4
 800c456:	9b01      	ldr	r3, [sp, #4]
 800c458:	eb0d 0102 	add.w	r1, sp, r2
 800c45c:	ba1b      	rev	r3, r3
 800c45e:	4628      	mov	r0, r5
 800c460:	9301      	str	r3, [sp, #4]
 800c462:	f7ff ffe3 	bl	800c42c <memcpy.isra.0>
 800c466:	2204      	movs	r2, #4
 800c468:	3426      	adds	r4, #38	; 0x26
 800c46a:	eb0d 0002 	add.w	r0, sp, r2
 800c46e:	4621      	mov	r1, r4
 800c470:	f7ff ffdc 	bl	800c42c <memcpy.isra.0>
 800c474:	2204      	movs	r2, #4
 800c476:	9b01      	ldr	r3, [sp, #4]
 800c478:	4620      	mov	r0, r4
 800c47a:	ba1b      	rev	r3, r3
 800c47c:	eb0d 0102 	add.w	r1, sp, r2
 800c480:	9301      	str	r3, [sp, #4]
 800c482:	f7ff ffd3 	bl	800c42c <memcpy.isra.0>
 800c486:	b003      	add	sp, #12
 800c488:	bd30      	pop	{r4, r5, pc}
	...

0800c48c <_tcp_send_package>:
 800c48c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c490:	7a0b      	ldrb	r3, [r1, #8]
 800c492:	4605      	mov	r5, r0
 800c494:	f013 0f02 	tst.w	r3, #2
 800c498:	bf0c      	ite	eq
 800c49a:	f04f 0805 	moveq.w	r8, #5
 800c49e:	f04f 0806 	movne.w	r8, #6
 800c4a2:	f04f 0a00 	mov.w	sl, #0
 800c4a6:	4c47      	ldr	r4, [pc, #284]	; (800c5c4 <_tcp_send_package+0x138>)
 800c4a8:	460f      	mov	r7, r1
 800c4aa:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c4ac:	f100 0108 	add.w	r1, r0, #8
 800c4b0:	2206      	movs	r2, #6
 800c4b2:	4620      	mov	r0, r4
 800c4b4:	f7ff ffba 	bl	800c42c <memcpy.isra.0>
 800c4b8:	4a43      	ldr	r2, [pc, #268]	; (800c5c8 <_tcp_send_package+0x13c>)
 800c4ba:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800c4be:	8813      	ldrh	r3, [r2, #0]
 800c4c0:	b2b6      	uxth	r6, r6
 800c4c2:	1c59      	adds	r1, r3, #1
 800c4c4:	8263      	strh	r3, [r4, #18]
 800c4c6:	f105 0904 	add.w	r9, r5, #4
 800c4ca:	f106 0314 	add.w	r3, r6, #20
 800c4ce:	ba5b      	rev16	r3, r3
 800c4d0:	8011      	strh	r1, [r2, #0]
 800c4d2:	f104 001e 	add.w	r0, r4, #30
 800c4d6:	2204      	movs	r2, #4
 800c4d8:	4649      	mov	r1, r9
 800c4da:	8223      	strh	r3, [r4, #16]
 800c4dc:	f7ff ffa6 	bl	800c42c <memcpy.isra.0>
 800c4e0:	2114      	movs	r1, #20
 800c4e2:	f104 000e 	add.w	r0, r4, #14
 800c4e6:	f8a4 a018 	strh.w	sl, [r4, #24]
 800c4ea:	f001 fe4a 	bl	800e182 <net_chksum>
 800c4ee:	882b      	ldrh	r3, [r5, #0]
 800c4f0:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800c4f4:	8463      	strh	r3, [r4, #34]	; 0x22
 800c4f6:	886b      	ldrh	r3, [r5, #2]
 800c4f8:	8320      	strh	r0, [r4, #24]
 800c4fa:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c4fc:	683b      	ldr	r3, [r7, #0]
 800c4fe:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c500:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c504:	687b      	ldr	r3, [r7, #4]
 800c506:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800c50a:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c50e:	7a3b      	ldrb	r3, [r7, #8]
 800c510:	8622      	strh	r2, [r4, #48]	; 0x30
 800c512:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c516:	079b      	lsls	r3, r3, #30
 800c518:	bf48      	it	mi
 800c51a:	f240 4302 	movwmi	r3, #1026	; 0x402
 800c51e:	8baa      	ldrh	r2, [r5, #28]
 800c520:	bf48      	it	mi
 800c522:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800c524:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c526:	bf42      	ittt	mi
 800c528:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c52c:	4622      	movmi	r2, r4
 800c52e:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c532:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c534:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800c538:	bf58      	it	pl
 800c53a:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c53e:	2b00      	cmp	r3, #0
 800c540:	d13e      	bne.n	800c5c0 <_tcp_send_package+0x134>
 800c542:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c544:	481f      	ldr	r0, [pc, #124]	; (800c5c4 <_tcp_send_package+0x138>)
 800c546:	ba5b      	rev16	r3, r3
 800c548:	8463      	strh	r3, [r4, #34]	; 0x22
 800c54a:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c54c:	ba5b      	rev16	r3, r3
 800c54e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c550:	f7ff ff76 	bl	800c440 <_bswap32>
 800c554:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c556:	a801      	add	r0, sp, #4
 800c558:	ba5b      	rev16	r3, r3
 800c55a:	8623      	strh	r3, [r4, #48]	; 0x30
 800c55c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c55e:	220c      	movs	r2, #12
 800c560:	ba5b      	rev16	r3, r3
 800c562:	491a      	ldr	r1, [pc, #104]	; (800c5cc <_tcp_send_package+0x140>)
 800c564:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c566:	f7ff ff61 	bl	800c42c <memcpy.isra.0>
 800c56a:	2204      	movs	r2, #4
 800c56c:	4918      	ldr	r1, [pc, #96]	; (800c5d0 <_tcp_send_package+0x144>)
 800c56e:	4817      	ldr	r0, [pc, #92]	; (800c5cc <_tcp_send_package+0x140>)
 800c570:	f7ff ff5c 	bl	800c42c <memcpy.isra.0>
 800c574:	2204      	movs	r2, #4
 800c576:	4649      	mov	r1, r9
 800c578:	4816      	ldr	r0, [pc, #88]	; (800c5d4 <_tcp_send_package+0x148>)
 800c57a:	f7ff ff57 	bl	800c42c <memcpy.isra.0>
 800c57e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800c582:	f106 010c 	add.w	r1, r6, #12
 800c586:	83e3      	strh	r3, [r4, #30]
 800c588:	4810      	ldr	r0, [pc, #64]	; (800c5cc <_tcp_send_package+0x140>)
 800c58a:	ba73      	rev16	r3, r6
 800c58c:	8423      	strh	r3, [r4, #32]
 800c58e:	f001 fdf8 	bl	800e182 <net_chksum>
 800c592:	a901      	add	r1, sp, #4
 800c594:	4605      	mov	r5, r0
 800c596:	220c      	movs	r2, #12
 800c598:	480c      	ldr	r0, [pc, #48]	; (800c5cc <_tcp_send_package+0x140>)
 800c59a:	f7ff ff47 	bl	800c42c <memcpy.isra.0>
 800c59e:	4809      	ldr	r0, [pc, #36]	; (800c5c4 <_tcp_send_package+0x138>)
 800c5a0:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c5a4:	8665      	strh	r5, [r4, #50]	; 0x32
 800c5a6:	b004      	add	sp, #16
 800c5a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5ac:	f004 ba52 	b.w	8010a54 <emac_eth_send>
 800c5b0:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c5b2:	5cc9      	ldrb	r1, [r1, r3]
 800c5b4:	54d1      	strb	r1, [r2, r3]
 800c5b6:	3301      	adds	r3, #1
 800c5b8:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c5ba:	4299      	cmp	r1, r3
 800c5bc:	d8f8      	bhi.n	800c5b0 <_tcp_send_package+0x124>
 800c5be:	e7c0      	b.n	800c542 <_tcp_send_package+0xb6>
 800c5c0:	2300      	movs	r3, #0
 800c5c2:	e7f9      	b.n	800c5b8 <_tcp_send_package+0x12c>
 800c5c4:	20002d48 	andcs	r2, r0, r8, asr #26
 800c5c8:	20002190 	mulcs	r0, r0, r1
 800c5cc:	20002d5e 	andcs	r2, r0, lr, asr sp
 800c5d0:	20002164 	andcs	r2, r0, r4, ror #2
 800c5d4:	20002d62 	andcs	r2, r0, r2, ror #26

0800c5d8 <_send_reset>:
 800c5d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c5da:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c5de:	4604      	mov	r4, r0
 800c5e0:	075a      	lsls	r2, r3, #29
 800c5e2:	460e      	mov	r6, r1
 800c5e4:	d421      	bmi.n	800c62a <_send_reset+0x52>
 800c5e6:	2204      	movs	r2, #4
 800c5e8:	f013 0310 	ands.w	r3, r3, #16
 800c5ec:	f88d 200c 	strb.w	r2, [sp, #12]
 800c5f0:	d01d      	beq.n	800c62e <_send_reset+0x56>
 800c5f2:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c5f6:	4668      	mov	r0, sp
 800c5f8:	f7ff ff18 	bl	800c42c <memcpy.isra.0>
 800c5fc:	9b00      	ldr	r3, [sp, #0]
 800c5fe:	9301      	str	r3, [sp, #4]
 800c600:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c604:	4668      	mov	r0, sp
 800c606:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c60a:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c60e:	07db      	lsls	r3, r3, #31
 800c610:	f04f 0204 	mov.w	r2, #4
 800c614:	bf48      	it	mi
 800c616:	3501      	addmi	r5, #1
 800c618:	f7ff ff08 	bl	800c42c <memcpy.isra.0>
 800c61c:	9b00      	ldr	r3, [sp, #0]
 800c61e:	4630      	mov	r0, r6
 800c620:	441d      	add	r5, r3
 800c622:	a901      	add	r1, sp, #4
 800c624:	9502      	str	r5, [sp, #8]
 800c626:	f7ff ff31 	bl	800c48c <_tcp_send_package>
 800c62a:	b004      	add	sp, #16
 800c62c:	bd70      	pop	{r4, r5, r6, pc}
 800c62e:	9301      	str	r3, [sp, #4]
 800c630:	2314      	movs	r3, #20
 800c632:	f88d 300c 	strb.w	r3, [sp, #12]
 800c636:	e7e3      	b.n	800c600 <_send_reset+0x28>

0800c638 <tcp_begin>:
 800c638:	b508      	push	{r3, lr}
 800c63a:	4b0a      	ldr	r3, [pc, #40]	; (800c664 <tcp_begin+0x2c>)
 800c63c:	4601      	mov	r1, r0
 800c63e:	881a      	ldrh	r2, [r3, #0]
 800c640:	4282      	cmp	r2, r0
 800c642:	d102      	bne.n	800c64a <tcp_begin+0x12>
 800c644:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c648:	b130      	cbz	r0, 800c658 <tcp_begin+0x20>
 800c64a:	b12a      	cbz	r2, 800c658 <tcp_begin+0x20>
 800c64c:	4806      	ldr	r0, [pc, #24]	; (800c668 <tcp_begin+0x30>)
 800c64e:	f002 fe89 	bl	800f364 <console_error>
 800c652:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c656:	bd08      	pop	{r3, pc}
 800c658:	4802      	ldr	r0, [pc, #8]	; (800c664 <tcp_begin+0x2c>)
 800c65a:	8019      	strh	r1, [r3, #0]
 800c65c:	f7ff fecc 	bl	800c3f8 <_init_tcb>
 800c660:	2000      	movs	r0, #0
 800c662:	e7f8      	b.n	800c656 <tcp_begin+0x1e>
 800c664:	20002d04 	andcs	r2, r0, r4, lsl #26
 800c668:	0801342a 	stmdaeq	r1, {r1, r3, r5, sl, ip, sp}

0800c66c <tcp_write>:
 800c66c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c670:	429a      	cmp	r2, r3
 800c672:	bf28      	it	cs
 800c674:	461a      	movcs	r2, r3
 800c676:	2344      	movs	r3, #68	; 0x44
 800c678:	b530      	push	{r4, r5, lr}
 800c67a:	4c0d      	ldr	r4, [pc, #52]	; (800c6b0 <tcp_write+0x44>)
 800c67c:	b085      	sub	sp, #20
 800c67e:	fb03 4400 	mla	r4, r3, r0, r4
 800c682:	6963      	ldr	r3, [r4, #20]
 800c684:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c686:	9301      	str	r3, [sp, #4]
 800c688:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c68a:	4620      	mov	r0, r4
 800c68c:	9302      	str	r3, [sp, #8]
 800c68e:	2318      	movs	r3, #24
 800c690:	8622      	strh	r2, [r4, #48]	; 0x30
 800c692:	a901      	add	r1, sp, #4
 800c694:	4615      	mov	r5, r2
 800c696:	f88d 300c 	strb.w	r3, [sp, #12]
 800c69a:	f7ff fef7 	bl	800c48c <_tcp_send_package>
 800c69e:	2300      	movs	r3, #0
 800c6a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c6a2:	8623      	strh	r3, [r4, #48]	; 0x30
 800c6a4:	6963      	ldr	r3, [r4, #20]
 800c6a6:	442b      	add	r3, r5
 800c6a8:	6163      	str	r3, [r4, #20]
 800c6aa:	b005      	add	sp, #20
 800c6ac:	bd30      	pop	{r4, r5, pc}
 800c6ae:	bf00      	nop
 800c6b0:	20002d04 	andcs	r2, r0, r4, lsl #26

0800c6b4 <tcp_read>:
 800c6b4:	2344      	movs	r3, #68	; 0x44
 800c6b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6b8:	4c1c      	ldr	r4, [pc, #112]	; (800c72c <tcp_read+0x78>)
 800c6ba:	b085      	sub	sp, #20
 800c6bc:	fb03 4400 	mla	r4, r3, r0, r4
 800c6c0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c6c4:	2b07      	cmp	r3, #7
 800c6c6:	d112      	bne.n	800c6ee <tcp_read+0x3a>
 800c6c8:	6963      	ldr	r3, [r4, #20]
 800c6ca:	4620      	mov	r0, r4
 800c6cc:	9301      	str	r3, [sp, #4]
 800c6ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c6d0:	a901      	add	r1, sp, #4
 800c6d2:	9302      	str	r3, [sp, #8]
 800c6d4:	2311      	movs	r3, #17
 800c6d6:	f88d 300c 	strb.w	r3, [sp, #12]
 800c6da:	f7ff fed7 	bl	800c48c <_tcp_send_package>
 800c6de:	2309      	movs	r3, #9
 800c6e0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c6e4:	6963      	ldr	r3, [r4, #20]
 800c6e6:	3301      	adds	r3, #1
 800c6e8:	6163      	str	r3, [r4, #20]
 800c6ea:	2000      	movs	r0, #0
 800c6ec:	e01b      	b.n	800c726 <tcp_read+0x72>
 800c6ee:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c6f2:	4358      	muls	r0, r3
 800c6f4:	4a0e      	ldr	r2, [pc, #56]	; (800c730 <tcp_read+0x7c>)
 800c6f6:	1817      	adds	r7, r2, r0
 800c6f8:	887b      	ldrh	r3, [r7, #2]
 800c6fa:	5a15      	ldrh	r5, [r2, r0]
 800c6fc:	429d      	cmp	r5, r3
 800c6fe:	d0f4      	beq.n	800c6ea <tcp_read+0x36>
 800c700:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c704:	435d      	muls	r5, r3
 800c706:	1d06      	adds	r6, r0, #4
 800c708:	442e      	add	r6, r5
 800c70a:	4416      	add	r6, r2
 800c70c:	4405      	add	r5, r0
 800c70e:	600e      	str	r6, [r1, #0]
 800c710:	442a      	add	r2, r5
 800c712:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c716:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c718:	3301      	adds	r3, #1
 800c71a:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c71e:	f003 0301 	and.w	r3, r3, #1
 800c722:	8722      	strh	r2, [r4, #56]	; 0x38
 800c724:	807b      	strh	r3, [r7, #2]
 800c726:	b005      	add	sp, #20
 800c728:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c72a:	bf00      	nop
 800c72c:	20002d04 	andcs	r2, r0, r4, lsl #26
 800c730:	20002194 	mulcs	r0, r4, r1

0800c734 <memcpy.isra.0>:
 800c734:	3801      	subs	r0, #1
 800c736:	440a      	add	r2, r1
 800c738:	4291      	cmp	r1, r2
 800c73a:	d100      	bne.n	800c73e <memcpy.isra.0+0xa>
 800c73c:	4770      	bx	lr
 800c73e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c742:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c746:	e7f7      	b.n	800c738 <memcpy.isra.0+0x4>

0800c748 <net_memcpy>:
 800c748:	ea40 0301 	orr.w	r3, r0, r1
 800c74c:	079b      	lsls	r3, r3, #30
 800c74e:	b570      	push	{r4, r5, r6, lr}
 800c750:	d108      	bne.n	800c764 <net_memcpy+0x1c>
 800c752:	f022 0303 	bic.w	r3, r2, #3
 800c756:	1f04      	subs	r4, r0, #4
 800c758:	18cd      	adds	r5, r1, r3
 800c75a:	42a9      	cmp	r1, r5
 800c75c:	d108      	bne.n	800c770 <net_memcpy+0x28>
 800c75e:	1ad2      	subs	r2, r2, r3
 800c760:	4403      	add	r3, r0
 800c762:	e000      	b.n	800c766 <net_memcpy+0x1e>
 800c764:	4603      	mov	r3, r0
 800c766:	3b01      	subs	r3, #1
 800c768:	440a      	add	r2, r1
 800c76a:	4291      	cmp	r1, r2
 800c76c:	d105      	bne.n	800c77a <net_memcpy+0x32>
 800c76e:	bd70      	pop	{r4, r5, r6, pc}
 800c770:	f851 6b04 	ldr.w	r6, [r1], #4
 800c774:	f844 6f04 	str.w	r6, [r4, #4]!
 800c778:	e7ef      	b.n	800c75a <net_memcpy+0x12>
 800c77a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c77e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c782:	e7f2      	b.n	800c76a <net_memcpy+0x22>

0800c784 <udp_set_ip>:
 800c784:	2204      	movs	r2, #4
 800c786:	b513      	push	{r0, r1, r4, lr}
 800c788:	4604      	mov	r4, r0
 800c78a:	6803      	ldr	r3, [r0, #0]
 800c78c:	eb0d 0102 	add.w	r1, sp, r2
 800c790:	4808      	ldr	r0, [pc, #32]	; (800c7b4 <udp_set_ip+0x30>)
 800c792:	9301      	str	r3, [sp, #4]
 800c794:	f7ff ffce 	bl	800c734 <memcpy.isra.0>
 800c798:	6862      	ldr	r2, [r4, #4]
 800c79a:	4b07      	ldr	r3, [pc, #28]	; (800c7b8 <udp_set_ip+0x34>)
 800c79c:	43d1      	mvns	r1, r2
 800c79e:	6019      	str	r1, [r3, #0]
 800c7a0:	6823      	ldr	r3, [r4, #0]
 800c7a2:	4013      	ands	r3, r2
 800c7a4:	4a05      	ldr	r2, [pc, #20]	; (800c7bc <udp_set_ip+0x38>)
 800c7a6:	6013      	str	r3, [r2, #0]
 800c7a8:	68a2      	ldr	r2, [r4, #8]
 800c7aa:	4b05      	ldr	r3, [pc, #20]	; (800c7c0 <udp_set_ip+0x3c>)
 800c7ac:	601a      	str	r2, [r3, #0]
 800c7ae:	b002      	add	sp, #8
 800c7b0:	bd10      	pop	{r4, pc}
 800c7b2:	bf00      	nop
 800c7b4:	2000901e 	andcs	r9, r0, lr, lsl r0
 800c7b8:	20003334 	andcs	r3, r0, r4, lsr r3
 800c7bc:	2000333c 	andcs	r3, r0, ip, lsr r3
 800c7c0:	20003338 	andcs	r3, r0, r8, lsr r3

0800c7c4 <udp_bind>:
 800c7c4:	4a0a      	ldr	r2, [pc, #40]	; (800c7f0 <udp_bind+0x2c>)
 800c7c6:	4603      	mov	r3, r0
 800c7c8:	b510      	push	{r4, lr}
 800c7ca:	2000      	movs	r0, #0
 800c7cc:	4614      	mov	r4, r2
 800c7ce:	f852 1b04 	ldr.w	r1, [r2], #4
 800c7d2:	4299      	cmp	r1, r3
 800c7d4:	d008      	beq.n	800c7e8 <udp_bind+0x24>
 800c7d6:	b141      	cbz	r1, 800c7ea <udp_bind+0x26>
 800c7d8:	3001      	adds	r0, #1
 800c7da:	2808      	cmp	r0, #8
 800c7dc:	d1f7      	bne.n	800c7ce <udp_bind+0xa>
 800c7de:	4805      	ldr	r0, [pc, #20]	; (800c7f4 <udp_bind+0x30>)
 800c7e0:	f002 fdc0 	bl	800f364 <console_error>
 800c7e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c7e8:	bd10      	pop	{r4, pc}
 800c7ea:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c7ee:	e7fb      	b.n	800c7e8 <udp_bind+0x24>
 800c7f0:	20003344 	andcs	r3, r0, r4, asr #6
 800c7f4:	0801344a 	stmdaeq	r1, {r1, r3, r6, sl, ip, sp}

0800c7f8 <udp_unbind>:
 800c7f8:	4a0c      	ldr	r2, [pc, #48]	; (800c82c <udp_unbind+0x34>)
 800c7fa:	2300      	movs	r3, #0
 800c7fc:	4611      	mov	r1, r2
 800c7fe:	b510      	push	{r4, lr}
 800c800:	f852 4b04 	ldr.w	r4, [r2], #4
 800c804:	4284      	cmp	r4, r0
 800c806:	d108      	bne.n	800c81a <udp_unbind+0x22>
 800c808:	2000      	movs	r0, #0
 800c80a:	f640 3294 	movw	r2, #2964	; 0xb94
 800c80e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c812:	4353      	muls	r3, r2
 800c814:	4a06      	ldr	r2, [pc, #24]	; (800c830 <udp_unbind+0x38>)
 800c816:	50d0      	str	r0, [r2, r3]
 800c818:	bd10      	pop	{r4, pc}
 800c81a:	3301      	adds	r3, #1
 800c81c:	2b08      	cmp	r3, #8
 800c81e:	d1ef      	bne.n	800c800 <udp_unbind+0x8>
 800c820:	4804      	ldr	r0, [pc, #16]	; (800c834 <udp_unbind+0x3c>)
 800c822:	f002 fd9f 	bl	800f364 <console_error>
 800c826:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c82a:	e7f5      	b.n	800c818 <udp_unbind+0x20>
 800c82c:	20003344 	andcs	r3, r0, r4, asr #6
 800c830:	20003364 	andcs	r3, r0, r4, ror #6
 800c834:	0801344f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, ip, sp}

0800c838 <udp_recv>:
 800c838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c83c:	4604      	mov	r4, r0
 800c83e:	4698      	mov	r8, r3
 800c840:	f640 3394 	movw	r3, #2964	; 0xb94
 800c844:	435c      	muls	r4, r3
 800c846:	4608      	mov	r0, r1
 800c848:	4915      	ldr	r1, [pc, #84]	; (800c8a0 <udp_recv+0x68>)
 800c84a:	190f      	adds	r7, r1, r4
 800c84c:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c850:	5b0b      	ldrh	r3, [r1, r4]
 800c852:	4563      	cmp	r3, ip
 800c854:	d021      	beq.n	800c89a <udp_recv+0x62>
 800c856:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c85a:	fb03 fc0c 	mul.w	ip, r3, ip
 800c85e:	eb0c 0604 	add.w	r6, ip, r4
 800c862:	440e      	add	r6, r1
 800c864:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c868:	3404      	adds	r4, #4
 800c86a:	4295      	cmp	r5, r2
 800c86c:	bf28      	it	cs
 800c86e:	4615      	movcs	r5, r2
 800c870:	4464      	add	r4, ip
 800c872:	462a      	mov	r2, r5
 800c874:	4421      	add	r1, r4
 800c876:	f7ff ff67 	bl	800c748 <net_memcpy>
 800c87a:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c87e:	f8c8 3000 	str.w	r3, [r8]
 800c882:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c886:	9b06      	ldr	r3, [sp, #24]
 800c888:	801a      	strh	r2, [r3, #0]
 800c88a:	887b      	ldrh	r3, [r7, #2]
 800c88c:	3301      	adds	r3, #1
 800c88e:	f003 0301 	and.w	r3, r3, #1
 800c892:	807b      	strh	r3, [r7, #2]
 800c894:	4628      	mov	r0, r5
 800c896:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c89a:	2500      	movs	r5, #0
 800c89c:	e7fa      	b.n	800c894 <udp_recv+0x5c>
 800c89e:	bf00      	nop
 800c8a0:	20003364 	andcs	r3, r0, r4, ror #6

0800c8a4 <udp_recv2>:
 800c8a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8a6:	f640 3594 	movw	r5, #2964	; 0xb94
 800c8aa:	4368      	muls	r0, r5
 800c8ac:	4c0f      	ldr	r4, [pc, #60]	; (800c8ec <udp_recv2+0x48>)
 800c8ae:	1827      	adds	r7, r4, r0
 800c8b0:	887d      	ldrh	r5, [r7, #2]
 800c8b2:	5a26      	ldrh	r6, [r4, r0]
 800c8b4:	42ae      	cmp	r6, r5
 800c8b6:	d017      	beq.n	800c8e8 <udp_recv2+0x44>
 800c8b8:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c8bc:	fb0c f505 	mul.w	r5, ip, r5
 800c8c0:	1d06      	adds	r6, r0, #4
 800c8c2:	442e      	add	r6, r5
 800c8c4:	4405      	add	r5, r0
 800c8c6:	4426      	add	r6, r4
 800c8c8:	442c      	add	r4, r5
 800c8ca:	600e      	str	r6, [r1, #0]
 800c8cc:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c8d0:	6011      	str	r1, [r2, #0]
 800c8d2:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c8d6:	801a      	strh	r2, [r3, #0]
 800c8d8:	887b      	ldrh	r3, [r7, #2]
 800c8da:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c8de:	3301      	adds	r3, #1
 800c8e0:	f003 0301 	and.w	r3, r3, #1
 800c8e4:	807b      	strh	r3, [r7, #2]
 800c8e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8e8:	2000      	movs	r0, #0
 800c8ea:	e7fc      	b.n	800c8e6 <udp_recv2+0x42>
 800c8ec:	20003364 	andcs	r3, r0, r4, ror #6

0800c8f0 <udp_send>:
 800c8f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c8f4:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ca28 <udp_send+0x138>
 800c8f8:	461c      	mov	r4, r3
 800c8fa:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c8fe:	4607      	mov	r7, r0
 800c900:	4688      	mov	r8, r1
 800c902:	4616      	mov	r6, r2
 800c904:	2b00      	cmp	r3, #0
 800c906:	f000 808b 	beq.w	800ca20 <udp_send+0x130>
 800c90a:	1c63      	adds	r3, r4, #1
 800c90c:	d141      	bne.n	800c992 <udp_send+0xa2>
 800c90e:	4a47      	ldr	r2, [pc, #284]	; (800ca2c <udp_send+0x13c>)
 800c910:	2307      	movs	r3, #7
 800c912:	4611      	mov	r1, r2
 800c914:	20ff      	movs	r0, #255	; 0xff
 800c916:	e001      	b.n	800c91c <udp_send+0x2c>
 800c918:	f802 0b01 	strb.w	r0, [r2], #1
 800c91c:	3b01      	subs	r3, #1
 800c91e:	d1fb      	bne.n	800c918 <udp_send+0x28>
 800c920:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c924:	83cb      	strh	r3, [r1, #30]
 800c926:	840b      	strh	r3, [r1, #32]
 800c928:	2500      	movs	r5, #0
 800c92a:	f8df a104 	ldr.w	sl, [pc, #260]	; 800ca30 <udp_send+0x140>
 800c92e:	4c3f      	ldr	r4, [pc, #252]	; (800ca2c <udp_send+0x13c>)
 800c930:	f8ba 3000 	ldrh.w	r3, [sl]
 800c934:	2114      	movs	r1, #20
 800c936:	8263      	strh	r3, [r4, #18]
 800c938:	f106 031c 	add.w	r3, r6, #28
 800c93c:	ba5b      	rev16	r3, r3
 800c93e:	f104 000e 	add.w	r0, r4, #14
 800c942:	8223      	strh	r3, [r4, #16]
 800c944:	8325      	strh	r5, [r4, #24]
 800c946:	f001 fc1c 	bl	800e182 <net_chksum>
 800c94a:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c94e:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c952:	ba5b      	rev16	r3, r3
 800c954:	8463      	strh	r3, [r4, #34]	; 0x22
 800c956:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c95a:	4632      	mov	r2, r6
 800c95c:	ba5b      	rev16	r3, r3
 800c95e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c960:	f106 0308 	add.w	r3, r6, #8
 800c964:	ba5b      	rev16	r3, r3
 800c966:	bf28      	it	cs
 800c968:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c96c:	4641      	mov	r1, r8
 800c96e:	8320      	strh	r0, [r4, #24]
 800c970:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c974:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c976:	f7ff fee7 	bl	800c748 <net_memcpy>
 800c97a:	4620      	mov	r0, r4
 800c97c:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c980:	f004 f868 	bl	8010a54 <emac_eth_send>
 800c984:	f8ba 3000 	ldrh.w	r3, [sl]
 800c988:	4628      	mov	r0, r5
 800c98a:	3301      	adds	r3, #1
 800c98c:	f8aa 3000 	strh.w	r3, [sl]
 800c990:	e037      	b.n	800ca02 <udp_send+0x112>
 800c992:	4b28      	ldr	r3, [pc, #160]	; (800ca34 <udp_send+0x144>)
 800c994:	681b      	ldr	r3, [r3, #0]
 800c996:	43a3      	bics	r3, r4
 800c998:	d10f      	bne.n	800c9ba <udp_send+0xca>
 800c99a:	2307      	movs	r3, #7
 800c99c:	21ff      	movs	r1, #255	; 0xff
 800c99e:	4a23      	ldr	r2, [pc, #140]	; (800ca2c <udp_send+0x13c>)
 800c9a0:	e001      	b.n	800c9a6 <udp_send+0xb6>
 800c9a2:	f802 1b01 	strb.w	r1, [r2], #1
 800c9a6:	3b01      	subs	r3, #1
 800c9a8:	d1fb      	bne.n	800c9a2 <udp_send+0xb2>
 800c9aa:	2204      	movs	r2, #4
 800c9ac:	4822      	ldr	r0, [pc, #136]	; (800ca38 <udp_send+0x148>)
 800c9ae:	eb0d 0102 	add.w	r1, sp, r2
 800c9b2:	9401      	str	r4, [sp, #4]
 800c9b4:	f7ff febe 	bl	800c734 <memcpy.isra.0>
 800c9b8:	e7b6      	b.n	800c928 <udp_send+0x38>
 800c9ba:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c9be:	2be0      	cmp	r3, #224	; 0xe0
 800c9c0:	d10e      	bne.n	800c9e0 <udp_send+0xf0>
 800c9c2:	491e      	ldr	r1, [pc, #120]	; (800ca3c <udp_send+0x14c>)
 800c9c4:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c9c8:	70cb      	strb	r3, [r1, #3]
 800c9ca:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c9ce:	710b      	strb	r3, [r1, #4]
 800c9d0:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c9d4:	2206      	movs	r2, #6
 800c9d6:	4815      	ldr	r0, [pc, #84]	; (800ca2c <udp_send+0x13c>)
 800c9d8:	714b      	strb	r3, [r1, #5]
 800c9da:	f7ff feab 	bl	800c734 <memcpy.isra.0>
 800c9de:	e7e4      	b.n	800c9aa <udp_send+0xba>
 800c9e0:	4b17      	ldr	r3, [pc, #92]	; (800ca40 <udp_send+0x150>)
 800c9e2:	681b      	ldr	r3, [r3, #0]
 800c9e4:	43a3      	bics	r3, r4
 800c9e6:	d00f      	beq.n	800ca08 <udp_send+0x118>
 800c9e8:	4d16      	ldr	r5, [pc, #88]	; (800ca44 <udp_send+0x154>)
 800c9ea:	4910      	ldr	r1, [pc, #64]	; (800ca2c <udp_send+0x13c>)
 800c9ec:	6828      	ldr	r0, [r5, #0]
 800c9ee:	f001 f893 	bl	800db18 <arp_cache_lookup>
 800c9f2:	682b      	ldr	r3, [r5, #0]
 800c9f4:	4298      	cmp	r0, r3
 800c9f6:	d0d8      	beq.n	800c9aa <udp_send+0xba>
 800c9f8:	4813      	ldr	r0, [pc, #76]	; (800ca48 <udp_send+0x158>)
 800c9fa:	f002 fcb3 	bl	800f364 <console_error>
 800c9fe:	f06f 0002 	mvn.w	r0, #2
 800ca02:	b002      	add	sp, #8
 800ca04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca08:	4620      	mov	r0, r4
 800ca0a:	4908      	ldr	r1, [pc, #32]	; (800ca2c <udp_send+0x13c>)
 800ca0c:	f001 f884 	bl	800db18 <arp_cache_lookup>
 800ca10:	42a0      	cmp	r0, r4
 800ca12:	d0ca      	beq.n	800c9aa <udp_send+0xba>
 800ca14:	480d      	ldr	r0, [pc, #52]	; (800ca4c <udp_send+0x15c>)
 800ca16:	f002 fca5 	bl	800f364 <console_error>
 800ca1a:	f06f 0001 	mvn.w	r0, #1
 800ca1e:	e7f0      	b.n	800ca02 <udp_send+0x112>
 800ca20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ca24:	e7ed      	b.n	800ca02 <udp_send+0x112>
 800ca26:	bf00      	nop
 800ca28:	20003344 	andcs	r3, r0, r4, asr #6
 800ca2c:	20009004 	andcs	r9, r0, r4
 800ca30:	20003340 	andcs	r3, r0, r0, asr #6
 800ca34:	20003334 	andcs	r3, r0, r4, lsr r3
 800ca38:	20009022 	andcs	r9, r0, r2, lsr #32
 800ca3c:	20000010 	andcs	r0, r0, r0, lsl r0
 800ca40:	2000333c 	andcs	r3, r0, ip, lsr r3
 800ca44:	20003338 	andcs	r3, r0, r8, lsr r3
 800ca48:	08013457 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, ip, sp}
 800ca4c:	0801347d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sl, ip, sp}

0800ca50 <strlen>:
 800ca50:	4603      	mov	r3, r0
 800ca52:	461a      	mov	r2, r3
 800ca54:	7811      	ldrb	r1, [r2, #0]
 800ca56:	3301      	adds	r3, #1
 800ca58:	2900      	cmp	r1, #0
 800ca5a:	d1fa      	bne.n	800ca52 <strlen+0x2>
 800ca5c:	1a10      	subs	r0, r2, r0
 800ca5e:	4770      	bx	lr

0800ca60 <strcmp>:
 800ca60:	1e43      	subs	r3, r0, #1
 800ca62:	3901      	subs	r1, #1
 800ca64:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ca68:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ca6c:	4290      	cmp	r0, r2
 800ca6e:	d001      	beq.n	800ca74 <strcmp+0x14>
 800ca70:	1a80      	subs	r0, r0, r2
 800ca72:	e001      	b.n	800ca78 <strcmp+0x18>
 800ca74:	2800      	cmp	r0, #0
 800ca76:	d1f5      	bne.n	800ca64 <strcmp+0x4>
 800ca78:	4770      	bx	lr

0800ca7a <strcpy.isra.0>:
 800ca7a:	3801      	subs	r0, #1
 800ca7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ca80:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ca84:	2b00      	cmp	r3, #0
 800ca86:	d1f9      	bne.n	800ca7c <strcpy.isra.0+0x2>
 800ca88:	4770      	bx	lr

0800ca8a <strcat.isra.0>:
 800ca8a:	b538      	push	{r3, r4, r5, lr}
 800ca8c:	4604      	mov	r4, r0
 800ca8e:	460d      	mov	r5, r1
 800ca90:	f7ff ffde 	bl	800ca50 <strlen>
 800ca94:	4629      	mov	r1, r5
 800ca96:	4420      	add	r0, r4
 800ca98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca9c:	f7ff bfed 	b.w	800ca7a <strcpy.isra.0>

0800caa0 <MDNS::MDNS()>:
 800caa0:	b513      	push	{r0, r1, r4, lr}
 800caa2:	4604      	mov	r4, r0
 800caa4:	a901      	add	r1, sp, #4
 800caa6:	4804      	ldr	r0, [pc, #16]	; (800cab8 <MDNS::MDNS()+0x18>)
 800caa8:	f002 fdd2 	bl	800f650 <inet_aton>
 800caac:	4620      	mov	r0, r4
 800caae:	4b03      	ldr	r3, [pc, #12]	; (800cabc <MDNS::MDNS()+0x1c>)
 800cab0:	9a01      	ldr	r2, [sp, #4]
 800cab2:	601a      	str	r2, [r3, #0]
 800cab4:	b002      	add	sp, #8
 800cab6:	bd10      	pop	{r4, pc}
 800cab8:	080134ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, ip, sp}
 800cabc:	200095f8 	strdcs	r9, [r0], -r8

0800cac0 <MDNS::SetName(char const*)>:
 800cac0:	b538      	push	{r3, r4, r5, lr}
 800cac2:	4d0b      	ldr	r5, [pc, #44]	; (800caf0 <MDNS::SetName(char const*)+0x30>)
 800cac4:	460c      	mov	r4, r1
 800cac6:	6828      	ldr	r0, [r5, #0]
 800cac8:	b108      	cbz	r0, 800cace <MDNS::SetName(char const*)+0xe>
 800caca:	f002 fdbb 	bl	800f644 <operator delete[](void*)>
 800cace:	4620      	mov	r0, r4
 800cad0:	f7ff ffbe 	bl	800ca50 <strlen>
 800cad4:	3007      	adds	r0, #7
 800cad6:	f002 fdb9 	bl	800f64c <operator new[](unsigned int)>
 800cada:	4621      	mov	r1, r4
 800cadc:	6028      	str	r0, [r5, #0]
 800cade:	f7ff ffcc 	bl	800ca7a <strcpy.isra.0>
 800cae2:	6828      	ldr	r0, [r5, #0]
 800cae4:	4903      	ldr	r1, [pc, #12]	; (800caf4 <MDNS::SetName(char const*)+0x34>)
 800cae6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800caea:	f7ff bfce 	b.w	800ca8a <strcat.isra.0>
 800caee:	bf00      	nop
 800caf0:	20009a28 	andcs	r9, r0, r8, lsr #20
 800caf4:	080134be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, sl, ip, sp}

0800caf8 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800caf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cafc:	f04f 0e00 	mov.w	lr, #0
 800cb00:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800cb04:	4675      	mov	r5, lr
 800cb06:	4e1b      	ldr	r6, [pc, #108]	; (800cb74 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800cb08:	4f1b      	ldr	r7, [pc, #108]	; (800cb78 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800cb0a:	780b      	ldrb	r3, [r1, #0]
 800cb0c:	1c68      	adds	r0, r5, #1
 800cb0e:	b913      	cbnz	r3, 800cb16 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800cb10:	7013      	strb	r3, [r2, #0]
 800cb12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb16:	2b3f      	cmp	r3, #63	; 0x3f
 800cb18:	d91c      	bls.n	800cb54 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800cb1a:	7849      	ldrb	r1, [r1, #1]
 800cb1c:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800cb20:	430b      	orrs	r3, r1
 800cb22:	6839      	ldr	r1, [r7, #0]
 800cb24:	f1be 0f00 	cmp.w	lr, #0
 800cb28:	bf08      	it	eq
 800cb2a:	4605      	moveq	r5, r0
 800cb2c:	5ccc      	ldrb	r4, [r1, r3]
 800cb2e:	3301      	adds	r3, #1
 800cb30:	4419      	add	r1, r3
 800cb32:	2300      	movs	r3, #0
 800cb34:	42a3      	cmp	r3, r4
 800cb36:	5cc8      	ldrb	r0, [r1, r3]
 800cb38:	d309      	bcc.n	800cb4e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800cb3a:	f04f 0e01 	mov.w	lr, #1
 800cb3e:	4421      	add	r1, r4
 800cb40:	4414      	add	r4, r2
 800cb42:	780b      	ldrb	r3, [r1, #0]
 800cb44:	b10b      	cbz	r3, 800cb4a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800cb46:	f804 cb01 	strb.w	ip, [r4], #1
 800cb4a:	4622      	mov	r2, r4
 800cb4c:	e7dd      	b.n	800cb0a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800cb4e:	54d0      	strb	r0, [r2, r3]
 800cb50:	3301      	adds	r3, #1
 800cb52:	e7ef      	b.n	800cb34 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800cb54:	4688      	mov	r8, r1
 800cb56:	18d4      	adds	r4, r2, r3
 800cb58:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800cb5c:	f802 9b01 	strb.w	r9, [r2], #1
 800cb60:	4294      	cmp	r4, r2
 800cb62:	d1f9      	bne.n	800cb58 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800cb64:	1c5a      	adds	r2, r3, #1
 800cb66:	4411      	add	r1, r2
 800cb68:	f1be 0f00 	cmp.w	lr, #0
 800cb6c:	d1e9      	bne.n	800cb42 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cb6e:	181d      	adds	r5, r3, r0
 800cb70:	e7e7      	b.n	800cb42 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cb72:	bf00      	nop
 800cb74:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800cb78:	20009a2c 	andcs	r9, r0, ip, lsr #20

0800cb7c <MDNS::FindFirstDotFromRight(char const*) const>:
 800cb7c:	b510      	push	{r4, lr}
 800cb7e:	4608      	mov	r0, r1
 800cb80:	460c      	mov	r4, r1
 800cb82:	f7ff ff65 	bl	800ca50 <strlen>
 800cb86:	4420      	add	r0, r4
 800cb88:	42a0      	cmp	r0, r4
 800cb8a:	d903      	bls.n	800cb94 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800cb8c:	f810 3901 	ldrb.w	r3, [r0], #-1
 800cb90:	2b2e      	cmp	r3, #46	; 0x2e
 800cb92:	d1f9      	bne.n	800cb88 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800cb94:	3001      	adds	r0, #1
 800cb96:	bd10      	pop	{r4, pc}

0800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800cb98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb9a:	4614      	mov	r4, r2
 800cb9c:	460f      	mov	r7, r1
 800cb9e:	1c60      	adds	r0, r4, #1
 800cba0:	463d      	mov	r5, r7
 800cba2:	f817 6b01 	ldrb.w	r6, [r7], #1
 800cba6:	b946      	cbnz	r6, 800cbba <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800cba8:	1a69      	subs	r1, r5, r1
 800cbaa:	7021      	strb	r1, [r4, #0]
 800cbac:	7829      	ldrb	r1, [r5, #0]
 800cbae:	b949      	cbnz	r1, 800cbc4 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800cbb0:	b10b      	cbz	r3, 800cbb6 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800cbb2:	f800 1b01 	strb.w	r1, [r0], #1
 800cbb6:	1a80      	subs	r0, r0, r2
 800cbb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbba:	2e2e      	cmp	r6, #46	; 0x2e
 800cbbc:	d0f4      	beq.n	800cba8 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800cbbe:	f800 6b01 	strb.w	r6, [r0], #1
 800cbc2:	e7ed      	b.n	800cba0 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800cbc4:	4604      	mov	r4, r0
 800cbc6:	1c69      	adds	r1, r5, #1
 800cbc8:	e7e8      	b.n	800cb9c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800cbcc <MDNS::CreateAnswerLocalIpAddress()>:
 800cbcc:	2384      	movs	r3, #132	; 0x84
 800cbce:	b510      	push	{r4, lr}
 800cbd0:	4c0f      	ldr	r4, [pc, #60]	; (800cc10 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800cbd2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800cbd6:	80e3      	strh	r3, [r4, #6]
 800cbd8:	2300      	movs	r3, #0
 800cbda:	490e      	ldr	r1, [pc, #56]	; (800cc14 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800cbdc:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800cbe0:	6809      	ldr	r1, [r1, #0]
 800cbe2:	f104 0210 	add.w	r2, r4, #16
 800cbe6:	2301      	movs	r3, #1
 800cbe8:	f7ff ffd6 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cbec:	490a      	ldr	r1, [pc, #40]	; (800cc18 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800cbee:	1813      	adds	r3, r2, r0
 800cbf0:	5011      	str	r1, [r2, r0]
 800cbf2:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800cbf6:	605a      	str	r2, [r3, #4]
 800cbf8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cbfc:	811a      	strh	r2, [r3, #8]
 800cbfe:	4a07      	ldr	r2, [pc, #28]	; (800cc1c <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800cc00:	6812      	ldr	r2, [r2, #0]
 800cc02:	6952      	ldr	r2, [r2, #20]
 800cc04:	f8c3 200a 	str.w	r2, [r3, #10]
 800cc08:	1b1b      	subs	r3, r3, r4
 800cc0a:	330a      	adds	r3, #10
 800cc0c:	6023      	str	r3, [r4, #0]
 800cc0e:	bd10      	pop	{r4, pc}
 800cc10:	200095fc 	strdcs	r9, [r0], -ip
 800cc14:	20009a28 	andcs	r9, r0, r8, lsr #20
 800cc18:	01800100 	orreq	r0, r0, r0, lsl #2
 800cc1c:	20009a30 	andcs	r9, r0, r0, lsr sl

0800cc20 <MDNS::Start()>:
 800cc20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cc22:	4c1d      	ldr	r4, [pc, #116]	; (800cc98 <MDNS::Start()+0x78>)
 800cc24:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800cc28:	4605      	mov	r5, r0
 800cc2a:	6820      	ldr	r0, [r4, #0]
 800cc2c:	f000 fb28 	bl	800d280 <Network::Begin(unsigned short)>
 800cc30:	4e1a      	ldr	r6, [pc, #104]	; (800cc9c <MDNS::Start()+0x7c>)
 800cc32:	4f1b      	ldr	r7, [pc, #108]	; (800cca0 <MDNS::Start()+0x80>)
 800cc34:	4601      	mov	r1, r0
 800cc36:	6030      	str	r0, [r6, #0]
 800cc38:	683a      	ldr	r2, [r7, #0]
 800cc3a:	6820      	ldr	r0, [r4, #0]
 800cc3c:	f000 fb31 	bl	800d2a2 <Network::JoinGroup(int, unsigned int)>
 800cc40:	4b18      	ldr	r3, [pc, #96]	; (800cca4 <MDNS::Start()+0x84>)
 800cc42:	681b      	ldr	r3, [r3, #0]
 800cc44:	b923      	cbnz	r3, 800cc50 <MDNS::Start()+0x30>
 800cc46:	6821      	ldr	r1, [r4, #0]
 800cc48:	4628      	mov	r0, r5
 800cc4a:	3120      	adds	r1, #32
 800cc4c:	f7ff ff38 	bl	800cac0 <MDNS::SetName(char const*)>
 800cc50:	4628      	mov	r0, r5
 800cc52:	f7ff ffbb 	bl	800cbcc <MDNS::CreateAnswerLocalIpAddress()>
 800cc56:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cc5a:	4913      	ldr	r1, [pc, #76]	; (800cca8 <MDNS::Start()+0x88>)
 800cc5c:	7830      	ldrb	r0, [r6, #0]
 800cc5e:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cc62:	9300      	str	r3, [sp, #0]
 800cc64:	683b      	ldr	r3, [r7, #0]
 800cc66:	f7ff fe43 	bl	800c8f0 <udp_send>
 800cc6a:	233f      	movs	r3, #63	; 0x3f
 800cc6c:	6820      	ldr	r0, [r4, #0]
 800cc6e:	4c0f      	ldr	r4, [pc, #60]	; (800ccac <MDNS::Start()+0x8c>)
 800cc70:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800cc74:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800cc78:	b929      	cbnz	r1, 800cc86 <MDNS::Start()+0x66>
 800cc7a:	4413      	add	r3, r2
 800cc7c:	429a      	cmp	r2, r3
 800cc7e:	d006      	beq.n	800cc8e <MDNS::Start()+0x6e>
 800cc80:	f802 1b01 	strb.w	r1, [r2], #1
 800cc84:	e7fa      	b.n	800cc7c <MDNS::Start()+0x5c>
 800cc86:	3b01      	subs	r3, #1
 800cc88:	f802 1b01 	strb.w	r1, [r2], #1
 800cc8c:	d1f2      	bne.n	800cc74 <MDNS::Start()+0x54>
 800cc8e:	2300      	movs	r3, #0
 800cc90:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800cc94:	b003      	add	sp, #12
 800cc96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc98:	20009a30 	andcs	r9, r0, r0, lsr sl
 800cc9c:	20000018 	andcs	r0, r0, r8, lsl r0
 800cca0:	200095f8 	strdcs	r9, [r0], -r8
 800cca4:	20009a28 	andcs	r9, r0, r8, lsr #20
 800cca8:	200095fc 	strdcs	r9, [r0], -ip
 800ccac:	080134be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, sl, ip, sp}

0800ccb0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800ccb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ccb4:	4c1b      	ldr	r4, [pc, #108]	; (800cd24 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800ccb6:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ccba:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ccbe:	2300      	movs	r3, #0
 800ccc0:	f854 100c 	ldr.w	r1, [r4, ip]
 800ccc4:	4607      	mov	r7, r0
 800ccc6:	f7ff ff67 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccca:	2301      	movs	r3, #1
 800cccc:	7bac      	ldrb	r4, [r5, #14]
 800ccce:	4616      	mov	r6, r2
 800ccd0:	4915      	ldr	r1, [pc, #84]	; (800cd28 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ccd2:	4402      	add	r2, r0
 800ccd4:	4815      	ldr	r0, [pc, #84]	; (800cd2c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800ccd6:	429c      	cmp	r4, r3
 800ccd8:	bf18      	it	ne
 800ccda:	4601      	movne	r1, r0
 800ccdc:	4638      	mov	r0, r7
 800ccde:	f7ff ff5b 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cce2:	4b13      	ldr	r3, [pc, #76]	; (800cd30 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800cce4:	1814      	adds	r4, r2, r0
 800cce6:	5013      	str	r3, [r2, r0]
 800cce8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ccec:	6063      	str	r3, [r4, #4]
 800ccee:	4b11      	ldr	r3, [pc, #68]	; (800cd34 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800ccf0:	f8d3 8000 	ldr.w	r8, [r3]
 800ccf4:	4640      	mov	r0, r8
 800ccf6:	f7ff feab 	bl	800ca50 <strlen>
 800ccfa:	f100 0308 	add.w	r3, r0, #8
 800ccfe:	ba5b      	rev16	r3, r3
 800cd00:	8123      	strh	r3, [r4, #8]
 800cd02:	2300      	movs	r3, #0
 800cd04:	f8c4 300a 	str.w	r3, [r4, #10]
 800cd08:	89ab      	ldrh	r3, [r5, #12]
 800cd0a:	f104 0210 	add.w	r2, r4, #16
 800cd0e:	ba5b      	rev16	r3, r3
 800cd10:	81e3      	strh	r3, [r4, #14]
 800cd12:	4641      	mov	r1, r8
 800cd14:	2301      	movs	r3, #1
 800cd16:	4638      	mov	r0, r7
 800cd18:	f7ff ff3e 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd1c:	4410      	add	r0, r2
 800cd1e:	1b80      	subs	r0, r0, r6
 800cd20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd24:	20009800 	andcs	r9, r0, r0, lsl #16
 800cd28:	080134ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp}
 800cd2c:	080134d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, ip, sp}
 800cd30:	01802100 	orreq	r2, r0, r0, lsl #2
 800cd34:	20009a28 	andcs	r9, r0, r8, lsr #20

0800cd38 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cd38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd3c:	4e19      	ldr	r6, [pc, #100]	; (800cda4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cd3e:	010f      	lsls	r7, r1, #4
 800cd40:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800cd44:	2300      	movs	r3, #0
 800cd46:	59f1      	ldr	r1, [r6, r7]
 800cd48:	4604      	mov	r4, r0
 800cd4a:	f7ff ff25 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd4e:	2301      	movs	r3, #1
 800cd50:	7bae      	ldrb	r6, [r5, #14]
 800cd52:	4690      	mov	r8, r2
 800cd54:	4914      	ldr	r1, [pc, #80]	; (800cda8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800cd56:	4402      	add	r2, r0
 800cd58:	4814      	ldr	r0, [pc, #80]	; (800cdac <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800cd5a:	429e      	cmp	r6, r3
 800cd5c:	bf18      	it	ne
 800cd5e:	4601      	movne	r1, r0
 800cd60:	4620      	mov	r0, r4
 800cd62:	f7ff ff19 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd66:	4b12      	ldr	r3, [pc, #72]	; (800cdb0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800cd68:	1816      	adds	r6, r2, r0
 800cd6a:	5013      	str	r3, [r2, r0]
 800cd6c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd70:	68a8      	ldr	r0, [r5, #8]
 800cd72:	6073      	str	r3, [r6, #4]
 800cd74:	f106 040b 	add.w	r4, r6, #11
 800cd78:	b938      	cbnz	r0, 800cd8a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800cd7a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cd7e:	72b0      	strb	r0, [r6, #10]
 800cd80:	8133      	strh	r3, [r6, #8]
 800cd82:	eba4 0008 	sub.w	r0, r4, r8
 800cd86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd8a:	f7ff fe61 	bl	800ca50 <strlen>
 800cd8e:	4607      	mov	r7, r0
 800cd90:	1c43      	adds	r3, r0, #1
 800cd92:	72b0      	strb	r0, [r6, #10]
 800cd94:	ba5b      	rev16	r3, r3
 800cd96:	4620      	mov	r0, r4
 800cd98:	68a9      	ldr	r1, [r5, #8]
 800cd9a:	8133      	strh	r3, [r6, #8]
 800cd9c:	f7ff fe6d 	bl	800ca7a <strcpy.isra.0>
 800cda0:	443c      	add	r4, r7
 800cda2:	e7ee      	b.n	800cd82 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800cda4:	20009800 	andcs	r9, r0, r0, lsl #16
 800cda8:	080134ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp}
 800cdac:	080134d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, ip, sp}
 800cdb0:	01801000 	orreq	r1, r0, r0

0800cdb4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800cdb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cdb8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ce1c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800cdbc:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800cdc0:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800cdc4:	6869      	ldr	r1, [r5, #4]
 800cdc6:	2301      	movs	r3, #1
 800cdc8:	4607      	mov	r7, r0
 800cdca:	f7ff fee5 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdce:	4b14      	ldr	r3, [pc, #80]	; (800ce20 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800cdd0:	f858 8009 	ldr.w	r8, [r8, r9]
 800cdd4:	5013      	str	r3, [r2, r0]
 800cdd6:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cdda:	1816      	adds	r6, r2, r0
 800cddc:	6073      	str	r3, [r6, #4]
 800cdde:	4640      	mov	r0, r8
 800cde0:	4614      	mov	r4, r2
 800cde2:	f7ff fe35 	bl	800ca50 <strlen>
 800cde6:	f100 030d 	add.w	r3, r0, #13
 800cdea:	ba5b      	rev16	r3, r3
 800cdec:	4641      	mov	r1, r8
 800cdee:	8133      	strh	r3, [r6, #8]
 800cdf0:	f106 020a 	add.w	r2, r6, #10
 800cdf4:	2300      	movs	r3, #0
 800cdf6:	4638      	mov	r0, r7
 800cdf8:	f7ff fece 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdfc:	2301      	movs	r3, #1
 800cdfe:	4402      	add	r2, r0
 800ce00:	7bad      	ldrb	r5, [r5, #14]
 800ce02:	4808      	ldr	r0, [pc, #32]	; (800ce24 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800ce04:	4908      	ldr	r1, [pc, #32]	; (800ce28 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800ce06:	429d      	cmp	r5, r3
 800ce08:	bf18      	it	ne
 800ce0a:	4601      	movne	r1, r0
 800ce0c:	4638      	mov	r0, r7
 800ce0e:	f7ff fec3 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce12:	4410      	add	r0, r2
 800ce14:	1b00      	subs	r0, r0, r4
 800ce16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ce1a:	bf00      	nop
 800ce1c:	20009800 	andcs	r9, r0, r0, lsl #16
 800ce20:	01000c00 	tsteq	r0, r0, lsl #24
 800ce24:	080134d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, ip, sp}
 800ce28:	080134ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp}

0800ce2c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800ce2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce2e:	460f      	mov	r7, r1
 800ce30:	2301      	movs	r3, #1
 800ce32:	490f      	ldr	r1, [pc, #60]	; (800ce70 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800ce34:	4606      	mov	r6, r0
 800ce36:	f7ff feaf 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce3a:	4b0e      	ldr	r3, [pc, #56]	; (800ce74 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800ce3c:	490e      	ldr	r1, [pc, #56]	; (800ce78 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800ce3e:	5013      	str	r3, [r2, r0]
 800ce40:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ce44:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800ce48:	684f      	ldr	r7, [r1, #4]
 800ce4a:	1815      	adds	r5, r2, r0
 800ce4c:	606b      	str	r3, [r5, #4]
 800ce4e:	4638      	mov	r0, r7
 800ce50:	4614      	mov	r4, r2
 800ce52:	f7ff fdfd 	bl	800ca50 <strlen>
 800ce56:	1c83      	adds	r3, r0, #2
 800ce58:	ba5b      	rev16	r3, r3
 800ce5a:	812b      	strh	r3, [r5, #8]
 800ce5c:	f105 020a 	add.w	r2, r5, #10
 800ce60:	2301      	movs	r3, #1
 800ce62:	4639      	mov	r1, r7
 800ce64:	4630      	mov	r0, r6
 800ce66:	f7ff fe97 	bl	800cb98 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce6a:	4410      	add	r0, r2
 800ce6c:	1b00      	subs	r0, r0, r4
 800ce6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce70:	080134c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, ip, sp}
 800ce74:	01000c00 	tsteq	r0, r0, lsl #24
 800ce78:	20009800 	andcs	r9, r0, r0, lsl #16

0800ce7c <MDNS::CreateMDNSMessage(unsigned int)>:
 800ce7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce7e:	2384      	movs	r3, #132	; 0x84
 800ce80:	4d19      	ldr	r5, [pc, #100]	; (800cee8 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800ce82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800ce86:	80eb      	strh	r3, [r5, #6]
 800ce88:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ce8c:	f105 0410 	add.w	r4, r5, #16
 800ce90:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800ce94:	4622      	mov	r2, r4
 800ce96:	4606      	mov	r6, r0
 800ce98:	460f      	mov	r7, r1
 800ce9a:	f7ff ff09 	bl	800ccb0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ce9e:	4404      	add	r4, r0
 800cea0:	4622      	mov	r2, r4
 800cea2:	4639      	mov	r1, r7
 800cea4:	4630      	mov	r0, r6
 800cea6:	f7ff ff47 	bl	800cd38 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ceaa:	4404      	add	r4, r0
 800ceac:	4622      	mov	r2, r4
 800ceae:	4639      	mov	r1, r7
 800ceb0:	4630      	mov	r0, r6
 800ceb2:	f7ff ffbb 	bl	800ce2c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ceb6:	4404      	add	r4, r0
 800ceb8:	4622      	mov	r2, r4
 800ceba:	4639      	mov	r1, r7
 800cebc:	4630      	mov	r0, r6
 800cebe:	f7ff ff79 	bl	800cdb4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800cec2:	4a0a      	ldr	r2, [pc, #40]	; (800ceec <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800cec4:	4404      	add	r4, r0
 800cec6:	f852 3b10 	ldr.w	r3, [r2], #16
 800ceca:	1e60      	subs	r0, r4, #1
 800cecc:	3b0c      	subs	r3, #12
 800cece:	4619      	mov	r1, r3
 800ced0:	3901      	subs	r1, #1
 800ced2:	d204      	bcs.n	800cede <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800ced4:	441c      	add	r4, r3
 800ced6:	4b06      	ldr	r3, [pc, #24]	; (800cef0 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800ced8:	1ae4      	subs	r4, r4, r3
 800ceda:	602c      	str	r4, [r5, #0]
 800cedc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cede:	f812 6b01 	ldrb.w	r6, [r2], #1
 800cee2:	f800 6f01 	strb.w	r6, [r0, #1]!
 800cee6:	e7f3      	b.n	800ced0 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800cee8:	20009824 	andcs	r9, r0, r4, lsr #16
 800ceec:	200095fc 	strdcs	r9, [r0], -ip
 800cef0:	20009828 	andcs	r9, r0, r8, lsr #16

0800cef4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800cef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cef8:	4d40      	ldr	r5, [pc, #256]	; (800cffc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800cefa:	b085      	sub	sp, #20
 800cefc:	682c      	ldr	r4, [r5, #0]
 800cefe:	4680      	mov	r8, r0
 800cf00:	460f      	mov	r7, r1
 800cf02:	4616      	mov	r6, r2
 800cf04:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800cf08:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800cf0c:	b11c      	cbz	r4, 800cf16 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800cf0e:	692a      	ldr	r2, [r5, #16]
 800cf10:	2a00      	cmp	r2, #0
 800cf12:	d16e      	bne.n	800cff2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800cf14:	2401      	movs	r4, #1
 800cf16:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800cf1a:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800cf1e:	8193      	strh	r3, [r2, #12]
 800cf20:	f882 b00e 	strb.w	fp, [r2, #14]
 800cf24:	2f00      	cmp	r7, #0
 800cf26:	d154      	bne.n	800cfd2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800cf28:	4b35      	ldr	r3, [pc, #212]	; (800d000 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cf2a:	6818      	ldr	r0, [r3, #0]
 800cf2c:	3020      	adds	r0, #32
 800cf2e:	f7ff fd8f 	bl	800ca50 <strlen>
 800cf32:	4607      	mov	r7, r0
 800cf34:	4630      	mov	r0, r6
 800cf36:	f7ff fd8b 	bl	800ca50 <strlen>
 800cf3a:	4438      	add	r0, r7
 800cf3c:	3001      	adds	r0, #1
 800cf3e:	f002 fb85 	bl	800f64c <operator new[](unsigned int)>
 800cf42:	4b2f      	ldr	r3, [pc, #188]	; (800d000 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cf44:	f845 0009 	str.w	r0, [r5, r9]
 800cf48:	6819      	ldr	r1, [r3, #0]
 800cf4a:	3120      	adds	r1, #32
 800cf4c:	f7ff fd95 	bl	800ca7a <strcpy.isra.0>
 800cf50:	f855 0009 	ldr.w	r0, [r5, r9]
 800cf54:	4631      	mov	r1, r6
 800cf56:	f7ff fd98 	bl	800ca8a <strcat.isra.0>
 800cf5a:	4631      	mov	r1, r6
 800cf5c:	4640      	mov	r0, r8
 800cf5e:	f7ff fe0d 	bl	800cb7c <MDNS::FindFirstDotFromRight(char const*) const>
 800cf62:	eb05 0709 	add.w	r7, r5, r9
 800cf66:	4605      	mov	r5, r0
 800cf68:	f7ff fd72 	bl	800ca50 <strlen>
 800cf6c:	300d      	adds	r0, #13
 800cf6e:	f002 fb6d 	bl	800f64c <operator new[](unsigned int)>
 800cf72:	4629      	mov	r1, r5
 800cf74:	6078      	str	r0, [r7, #4]
 800cf76:	f7ff fd80 	bl	800ca7a <strcpy.isra.0>
 800cf7a:	4922      	ldr	r1, [pc, #136]	; (800d004 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800cf7c:	6878      	ldr	r0, [r7, #4]
 800cf7e:	f7ff fd84 	bl	800ca8a <strcat.isra.0>
 800cf82:	4921      	ldr	r1, [pc, #132]	; (800d008 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800cf84:	4b21      	ldr	r3, [pc, #132]	; (800d00c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800cf86:	6878      	ldr	r0, [r7, #4]
 800cf88:	f1bb 0f01 	cmp.w	fp, #1
 800cf8c:	bf18      	it	ne
 800cf8e:	4619      	movne	r1, r3
 800cf90:	f7ff fd7b 	bl	800ca8a <strcat.isra.0>
 800cf94:	f1ba 0f00 	cmp.w	sl, #0
 800cf98:	d009      	beq.n	800cfae <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800cf9a:	4650      	mov	r0, sl
 800cf9c:	f7ff fd58 	bl	800ca50 <strlen>
 800cfa0:	3001      	adds	r0, #1
 800cfa2:	f002 fb53 	bl	800f64c <operator new[](unsigned int)>
 800cfa6:	4651      	mov	r1, sl
 800cfa8:	60b8      	str	r0, [r7, #8]
 800cfaa:	f7ff fd66 	bl	800ca7a <strcpy.isra.0>
 800cfae:	4621      	mov	r1, r4
 800cfb0:	4640      	mov	r0, r8
 800cfb2:	f7ff ff63 	bl	800ce7c <MDNS::CreateMDNSMessage(unsigned int)>
 800cfb6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cfba:	4915      	ldr	r1, [pc, #84]	; (800d010 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cfbc:	4815      	ldr	r0, [pc, #84]	; (800d014 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800cfbe:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cfc2:	9300      	str	r3, [sp, #0]
 800cfc4:	4b14      	ldr	r3, [pc, #80]	; (800d018 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800cfc6:	7800      	ldrb	r0, [r0, #0]
 800cfc8:	681b      	ldr	r3, [r3, #0]
 800cfca:	f7ff fc91 	bl	800c8f0 <udp_send>
 800cfce:	2001      	movs	r0, #1
 800cfd0:	e010      	b.n	800cff4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800cfd2:	4638      	mov	r0, r7
 800cfd4:	f7ff fd3c 	bl	800ca50 <strlen>
 800cfd8:	9003      	str	r0, [sp, #12]
 800cfda:	4630      	mov	r0, r6
 800cfdc:	f7ff fd38 	bl	800ca50 <strlen>
 800cfe0:	9b03      	ldr	r3, [sp, #12]
 800cfe2:	4418      	add	r0, r3
 800cfe4:	3001      	adds	r0, #1
 800cfe6:	f002 fb31 	bl	800f64c <operator new[](unsigned int)>
 800cfea:	4639      	mov	r1, r7
 800cfec:	f845 0009 	str.w	r0, [r5, r9]
 800cff0:	e7ac      	b.n	800cf4c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800cff2:	2000      	movs	r0, #0
 800cff4:	b005      	add	sp, #20
 800cff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cffa:	bf00      	nop
 800cffc:	20009800 	andcs	r9, r0, r0, lsl #16
 800d000:	20009a30 	andcs	r9, r0, r0, lsr sl
 800d004:	080122f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sp}
 800d008:	080134ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp}
 800d00c:	080134d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, ip, sp}
 800d010:	20009824 	andcs	r9, r0, r4, lsr #16
 800d014:	20000018 	andcs	r0, r0, r8, lsl r0
 800d018:	200095f8 	strdcs	r9, [r0], -r8

0800d01c <MDNS::HandleRequest(unsigned short)>:
 800d01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d020:	4605      	mov	r5, r0
 800d022:	2700      	movs	r7, #0
 800d024:	f04f 080c 	mov.w	r8, #12
 800d028:	b0c5      	sub	sp, #276	; 0x114
 800d02a:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800d0ec <MDNS::HandleRequest(unsigned short)+0xd0>
 800d02e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800d0f0 <MDNS::HandleRequest(unsigned short)+0xd4>
 800d032:	9103      	str	r1, [sp, #12]
 800d034:	9b03      	ldr	r3, [sp, #12]
 800d036:	42bb      	cmp	r3, r7
 800d038:	d802      	bhi.n	800d040 <MDNS::HandleRequest(unsigned short)+0x24>
 800d03a:	b045      	add	sp, #276	; 0x114
 800d03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d040:	f8da 1000 	ldr.w	r1, [sl]
 800d044:	aa04      	add	r2, sp, #16
 800d046:	4441      	add	r1, r8
 800d048:	4628      	mov	r0, r5
 800d04a:	f7ff fd55 	bl	800caf8 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800d04e:	f8da 2000 	ldr.w	r2, [sl]
 800d052:	4440      	add	r0, r8
 800d054:	1813      	adds	r3, r2, r0
 800d056:	885b      	ldrh	r3, [r3, #2]
 800d058:	f100 0804 	add.w	r8, r0, #4
 800d05c:	ba5b      	rev16	r3, r3
 800d05e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d062:	2b01      	cmp	r3, #1
 800d064:	d13d      	bne.n	800d0e2 <MDNS::HandleRequest(unsigned short)+0xc6>
 800d066:	5a14      	ldrh	r4, [r2, r0]
 800d068:	4b22      	ldr	r3, [pc, #136]	; (800d0f4 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800d06a:	ba64      	rev16	r4, r4
 800d06c:	6818      	ldr	r0, [r3, #0]
 800d06e:	a904      	add	r1, sp, #16
 800d070:	b2a4      	uxth	r4, r4
 800d072:	f7ff fcf5 	bl	800ca60 <strcmp>
 800d076:	b968      	cbnz	r0, 800d094 <MDNS::HandleRequest(unsigned short)+0x78>
 800d078:	2c01      	cmp	r4, #1
 800d07a:	d10b      	bne.n	800d094 <MDNS::HandleRequest(unsigned short)+0x78>
 800d07c:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d080:	491d      	ldr	r1, [pc, #116]	; (800d0f8 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800d082:	481e      	ldr	r0, [pc, #120]	; (800d0fc <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d084:	f831 2b04 	ldrh.w	r2, [r1], #4
 800d088:	9300      	str	r3, [sp, #0]
 800d08a:	4b1d      	ldr	r3, [pc, #116]	; (800d100 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d08c:	7800      	ldrb	r0, [r0, #0]
 800d08e:	681b      	ldr	r3, [r3, #0]
 800d090:	f7ff fc2e 	bl	800c8f0 <udp_send>
 800d094:	481b      	ldr	r0, [pc, #108]	; (800d104 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800d096:	a904      	add	r1, sp, #16
 800d098:	f7ff fce2 	bl	800ca60 <strcmp>
 800d09c:	f04f 0900 	mov.w	r9, #0
 800d0a0:	4e19      	ldr	r6, [pc, #100]	; (800d108 <MDNS::HandleRequest(unsigned short)+0xec>)
 800d0a2:	9002      	str	r0, [sp, #8]
 800d0a4:	6833      	ldr	r3, [r6, #0]
 800d0a6:	b1c3      	cbz	r3, 800d0da <MDNS::HandleRequest(unsigned short)+0xbe>
 800d0a8:	9b02      	ldr	r3, [sp, #8]
 800d0aa:	b123      	cbz	r3, 800d0b6 <MDNS::HandleRequest(unsigned short)+0x9a>
 800d0ac:	6870      	ldr	r0, [r6, #4]
 800d0ae:	a904      	add	r1, sp, #16
 800d0b0:	f7ff fcd6 	bl	800ca60 <strcmp>
 800d0b4:	b988      	cbnz	r0, 800d0da <MDNS::HandleRequest(unsigned short)+0xbe>
 800d0b6:	2c0c      	cmp	r4, #12
 800d0b8:	d10f      	bne.n	800d0da <MDNS::HandleRequest(unsigned short)+0xbe>
 800d0ba:	4649      	mov	r1, r9
 800d0bc:	4628      	mov	r0, r5
 800d0be:	f7ff fedd 	bl	800ce7c <MDNS::CreateMDNSMessage(unsigned int)>
 800d0c2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d0c6:	480d      	ldr	r0, [pc, #52]	; (800d0fc <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d0c8:	9300      	str	r3, [sp, #0]
 800d0ca:	4b0d      	ldr	r3, [pc, #52]	; (800d100 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d0cc:	f8bb 2000 	ldrh.w	r2, [fp]
 800d0d0:	681b      	ldr	r3, [r3, #0]
 800d0d2:	490e      	ldr	r1, [pc, #56]	; (800d10c <MDNS::HandleRequest(unsigned short)+0xf0>)
 800d0d4:	7800      	ldrb	r0, [r0, #0]
 800d0d6:	f7ff fc0b 	bl	800c8f0 <udp_send>
 800d0da:	3610      	adds	r6, #16
 800d0dc:	f1b9 0f00 	cmp.w	r9, #0
 800d0e0:	d001      	beq.n	800d0e6 <MDNS::HandleRequest(unsigned short)+0xca>
 800d0e2:	3701      	adds	r7, #1
 800d0e4:	e7a6      	b.n	800d034 <MDNS::HandleRequest(unsigned short)+0x18>
 800d0e6:	f04f 0901 	mov.w	r9, #1
 800d0ea:	e7db      	b.n	800d0a4 <MDNS::HandleRequest(unsigned short)+0x88>
 800d0ec:	20009a2c 	andcs	r9, r0, ip, lsr #20
 800d0f0:	20009824 	andcs	r9, r0, r4, lsr #16
 800d0f4:	20009a28 	andcs	r9, r0, r8, lsr #20
 800d0f8:	200095fc 	strdcs	r9, [r0], -ip
 800d0fc:	20000018 	andcs	r0, r0, r8, lsl r0
 800d100:	200095f8 	strdcs	r9, [r0], -r8
 800d104:	080134c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, ip, sp}
 800d108:	20009800 	andcs	r9, r0, r0, lsl #16
 800d10c:	20009828 	andcs	r9, r0, r8, lsr #16

0800d110 <MDNS::Parse()>:
 800d110:	4b08      	ldr	r3, [pc, #32]	; (800d134 <MDNS::Parse()+0x24>)
 800d112:	681a      	ldr	r2, [r3, #0]
 800d114:	8853      	ldrh	r3, [r2, #2]
 800d116:	ba5b      	rev16	r3, r3
 800d118:	b299      	uxth	r1, r3
 800d11a:	041b      	lsls	r3, r3, #16
 800d11c:	d408      	bmi.n	800d130 <MDNS::Parse()+0x20>
 800d11e:	0b89      	lsrs	r1, r1, #14
 800d120:	d106      	bne.n	800d130 <MDNS::Parse()+0x20>
 800d122:	8891      	ldrh	r1, [r2, #4]
 800d124:	b28b      	uxth	r3, r1
 800d126:	b11b      	cbz	r3, 800d130 <MDNS::Parse()+0x20>
 800d128:	ba49      	rev16	r1, r1
 800d12a:	b289      	uxth	r1, r1
 800d12c:	f7ff bf76 	b.w	800d01c <MDNS::HandleRequest(unsigned short)>
 800d130:	4770      	bx	lr
 800d132:	bf00      	nop
 800d134:	20009a2c 	andcs	r9, r0, ip, lsr #20

0800d138 <MDNS::Run()>:
 800d138:	b538      	push	{r3, r4, r5, lr}
 800d13a:	4d0c      	ldr	r5, [pc, #48]	; (800d16c <MDNS::Run()+0x34>)
 800d13c:	4604      	mov	r4, r0
 800d13e:	480c      	ldr	r0, [pc, #48]	; (800d170 <MDNS::Run()+0x38>)
 800d140:	462b      	mov	r3, r5
 800d142:	4a0c      	ldr	r2, [pc, #48]	; (800d174 <MDNS::Run()+0x3c>)
 800d144:	490c      	ldr	r1, [pc, #48]	; (800d178 <MDNS::Run()+0x40>)
 800d146:	7800      	ldrb	r0, [r0, #0]
 800d148:	f7ff fbac 	bl	800c8a4 <udp_recv2>
 800d14c:	4b0b      	ldr	r3, [pc, #44]	; (800d17c <MDNS::Run()+0x44>)
 800d14e:	882a      	ldrh	r2, [r5, #0]
 800d150:	8018      	strh	r0, [r3, #0]
 800d152:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d156:	429a      	cmp	r2, r3
 800d158:	d106      	bne.n	800d168 <MDNS::Run()+0x30>
 800d15a:	280c      	cmp	r0, #12
 800d15c:	d904      	bls.n	800d168 <MDNS::Run()+0x30>
 800d15e:	4620      	mov	r0, r4
 800d160:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d164:	f7ff bfd4 	b.w	800d110 <MDNS::Parse()>
 800d168:	bd38      	pop	{r3, r4, r5, pc}
 800d16a:	bf00      	nop
 800d16c:	200095f4 	strdcs	r9, [r0], -r4
 800d170:	20000018 	andcs	r0, r0, r8, lsl r0
 800d174:	200095f0 	strdcs	r9, [r0], -r0
 800d178:	20009a2c 	andcs	r9, r0, ip, lsr #20
 800d17c:	20009820 	andcs	r9, r0, r0, lsr #16

0800d180 <MDNS::Print()>:
 800d180:	b510      	push	{r4, lr}
 800d182:	4816      	ldr	r0, [pc, #88]	; (800d1dc <MDNS::Print()+0x5c>)
 800d184:	f002 fd50 	bl	800fc28 <printf>
 800d188:	4b15      	ldr	r3, [pc, #84]	; (800d1e0 <MDNS::Print()+0x60>)
 800d18a:	681b      	ldr	r3, [r3, #0]
 800d18c:	3301      	adds	r3, #1
 800d18e:	d104      	bne.n	800d19a <MDNS::Print()+0x1a>
 800d190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d194:	4813      	ldr	r0, [pc, #76]	; (800d1e4 <MDNS::Print()+0x64>)
 800d196:	f002 bd47 	b.w	800fc28 <printf>
 800d19a:	4b13      	ldr	r3, [pc, #76]	; (800d1e8 <MDNS::Print()+0x68>)
 800d19c:	4c13      	ldr	r4, [pc, #76]	; (800d1ec <MDNS::Print()+0x6c>)
 800d19e:	6819      	ldr	r1, [r3, #0]
 800d1a0:	4813      	ldr	r0, [pc, #76]	; (800d1f0 <MDNS::Print()+0x70>)
 800d1a2:	f002 fd41 	bl	800fc28 <printf>
 800d1a6:	6823      	ldr	r3, [r4, #0]
 800d1a8:	b14b      	cbz	r3, 800d1be <MDNS::Print()+0x3e>
 800d1aa:	4a12      	ldr	r2, [pc, #72]	; (800d1f4 <MDNS::Print()+0x74>)
 800d1ac:	68a3      	ldr	r3, [r4, #8]
 800d1ae:	6861      	ldr	r1, [r4, #4]
 800d1b0:	2b00      	cmp	r3, #0
 800d1b2:	bf08      	it	eq
 800d1b4:	4613      	moveq	r3, r2
 800d1b6:	4810      	ldr	r0, [pc, #64]	; (800d1f8 <MDNS::Print()+0x78>)
 800d1b8:	89a2      	ldrh	r2, [r4, #12]
 800d1ba:	f002 fd35 	bl	800fc28 <printf>
 800d1be:	6923      	ldr	r3, [r4, #16]
 800d1c0:	b15b      	cbz	r3, 800d1da <MDNS::Print()+0x5a>
 800d1c2:	69a3      	ldr	r3, [r4, #24]
 800d1c4:	4a0b      	ldr	r2, [pc, #44]	; (800d1f4 <MDNS::Print()+0x74>)
 800d1c6:	6961      	ldr	r1, [r4, #20]
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	bf08      	it	eq
 800d1cc:	4613      	moveq	r3, r2
 800d1ce:	480a      	ldr	r0, [pc, #40]	; (800d1f8 <MDNS::Print()+0x78>)
 800d1d0:	8ba2      	ldrh	r2, [r4, #28]
 800d1d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1d6:	f002 bd27 	b.w	800fc28 <printf>
 800d1da:	bd10      	pop	{r4, pc}
 800d1dc:	080134e2 	stmdaeq	r1, {r1, r5, r6, r7, sl, ip, sp}
 800d1e0:	20000018 	andcs	r0, r0, r8, lsl r0
 800d1e4:	080134e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, ip, sp}
 800d1e8:	20009a28 	andcs	r9, r0, r8, lsr #20
 800d1ec:	20009800 	andcs	r9, r0, r0, lsl #16
 800d1f0:	080134f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, sl, ip, sp}
 800d1f4:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 800d1f8:	08013502 	stmdaeq	r1, {r1, r8, sl, ip, sp}

0800d1fc <strncpy.constprop.0.isra.0>:
 800d1fc:	233f      	movs	r3, #63	; 0x3f
 800d1fe:	3901      	subs	r1, #1
 800d200:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d204:	b92a      	cbnz	r2, 800d212 <strncpy.constprop.0.isra.0+0x16>
 800d206:	4403      	add	r3, r0
 800d208:	4298      	cmp	r0, r3
 800d20a:	d006      	beq.n	800d21a <strncpy.constprop.0.isra.0+0x1e>
 800d20c:	f800 2b01 	strb.w	r2, [r0], #1
 800d210:	e7fa      	b.n	800d208 <strncpy.constprop.0.isra.0+0xc>
 800d212:	3b01      	subs	r3, #1
 800d214:	f800 2b01 	strb.w	r2, [r0], #1
 800d218:	d1f2      	bne.n	800d200 <strncpy.constprop.0.isra.0+0x4>
 800d21a:	4770      	bx	lr

0800d21c <Network::Network()>:
 800d21c:	4a12      	ldr	r2, [pc, #72]	; (800d268 <Network::Network()+0x4c>)
 800d21e:	2300      	movs	r3, #0
 800d220:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800d224:	6010      	str	r0, [r2, #0]
 800d226:	2201      	movs	r2, #1
 800d228:	e9c0 2100 	strd	r2, r1, [r0]
 800d22c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800d230:	2200      	movs	r2, #0
 800d232:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800d236:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d23a:	490c      	ldr	r1, [pc, #48]	; (800d26c <Network::Network()+0x50>)
 800d23c:	6102      	str	r2, [r0, #16]
 800d23e:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800d242:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800d246:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800d24a:	61c3      	str	r3, [r0, #28]
 800d24c:	f880 3020 	strb.w	r3, [r0, #32]
 800d250:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800d254:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800d258:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d25c:	f802 3f01 	strb.w	r3, [r2, #1]!
 800d260:	2b00      	cmp	r3, #0
 800d262:	d1f9      	bne.n	800d258 <Network::Network()+0x3c>
 800d264:	4770      	bx	lr
 800d266:	bf00      	nop
 800d268:	20009a30 	andcs	r9, r0, r0, lsr sl
 800d26c:	0801350d 	stmdaeq	r1, {r0, r2, r3, r8, sl, ip, sp}

0800d270 <Network::Shutdown()>:
 800d270:	b508      	push	{r3, lr}
 800d272:	30bc      	adds	r0, #188	; 0xbc
 800d274:	f001 fb60 	bl	800e938 <NetworkDisplay::ShowShutdown()>
 800d278:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d27c:	f7f9 bfb8 	b.w	80071f0 <net_shutdown>

0800d280 <Network::Begin(unsigned short)>:
 800d280:	4608      	mov	r0, r1
 800d282:	f7ff ba9f 	b.w	800c7c4 <udp_bind>

0800d286 <Network::End(unsigned short)>:
 800d286:	4608      	mov	r0, r1
 800d288:	f7ff bab6 	b.w	800c7f8 <udp_unbind>

0800d28c <Network::MacAddressCopyTo(unsigned char*)>:
 800d28c:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800d290:	3901      	subs	r1, #1
 800d292:	30a5      	adds	r0, #165	; 0xa5
 800d294:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800d298:	4283      	cmp	r3, r0
 800d29a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d29e:	d1f9      	bne.n	800d294 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d2a0:	4770      	bx	lr

0800d2a2 <Network::JoinGroup(int, unsigned int)>:
 800d2a2:	4610      	mov	r0, r2
 800d2a4:	f000 bef4 	b.w	800e090 <igmp_join>

0800d2a8 <Network::LeaveGroup(int, unsigned int)>:
 800d2a8:	4610      	mov	r0, r2
 800d2aa:	f000 bf1d 	b.w	800e0e8 <igmp_leave>

0800d2ae <Network::SetDefaultIp()>:
 800d2ae:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800d2b2:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800d2b6:	041b      	lsls	r3, r3, #16
 800d2b8:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d2bc:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800d2c0:	3302      	adds	r3, #2
 800d2c2:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d2c6:	22ff      	movs	r2, #255	; 0xff
 800d2c8:	6143      	str	r3, [r0, #20]
 800d2ca:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800d2ce:	4770      	bx	lr

0800d2d0 <Network::Init(NetworkParamsStore*)>:
 800d2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2d4:	b0a5      	sub	sp, #148	; 0x94
 800d2d6:	4604      	mov	r4, r0
 800d2d8:	a80b      	add	r0, sp, #44	; 0x2c
 800d2da:	f000 f9c7 	bl	800d66c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d2de:	a80b      	add	r0, sp, #44	; 0x2c
 800d2e0:	f000 f9d0 	bl	800d684 <NetworkParams::Load()>
 800d2e4:	b110      	cbz	r0, 800d2ec <Network::Init(NetworkParamsStore*)+0x1c>
 800d2e6:	a80b      	add	r0, sp, #44	; 0x2c
 800d2e8:	f000 fba3 	bl	800da32 <NetworkParams::Dump()>
 800d2ec:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800d2f0:	4628      	mov	r0, r5
 800d2f2:	f001 fb15 	bl	800e920 <NetworkDisplay::ShowEmacStart()>
 800d2f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d2f8:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800d2fc:	9308      	str	r3, [sp, #32]
 800d2fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d300:	4630      	mov	r0, r6
 800d302:	9309      	str	r3, [sp, #36]	; 0x24
 800d304:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d306:	f104 0720 	add.w	r7, r4, #32
 800d30a:	930a      	str	r3, [sp, #40]	; 0x28
 800d30c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d310:	7163      	strb	r3, [r4, #5]
 800d312:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d314:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d318:	bf18      	it	ne
 800d31a:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800d31e:	061b      	lsls	r3, r3, #24
 800d320:	bf54      	ite	pl
 800d322:	2300      	movpl	r3, #0
 800d324:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800d328:	60e2      	str	r2, [r4, #12]
 800d32a:	6123      	str	r3, [r4, #16]
 800d32c:	f003 fe40 	bl	8010fb0 <emac_start(unsigned char*)>
 800d330:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800d334:	2b00      	cmp	r3, #0
 800d336:	f040 80c7 	bne.w	800d4c8 <Network::Init(NetworkParamsStore*)+0x1f8>
 800d33a:	4984      	ldr	r1, [pc, #528]	; (800d54c <Network::Init(NetworkParamsStore*)+0x27c>)
 800d33c:	f104 001f 	add.w	r0, r4, #31
 800d340:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d344:	f103 0c01 	add.w	ip, r3, #1
 800d348:	2a00      	cmp	r2, #0
 800d34a:	f040 80b9 	bne.w	800d4c0 <Network::Init(NetworkParamsStore*)+0x1f0>
 800d34e:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800d352:	18e1      	adds	r1, r4, r3
 800d354:	0910      	lsrs	r0, r2, #4
 800d356:	2a9f      	cmp	r2, #159	; 0x9f
 800d358:	f002 020f 	and.w	r2, r2, #15
 800d35c:	bf94      	ite	ls
 800d35e:	3030      	addls	r0, #48	; 0x30
 800d360:	3037      	addhi	r0, #55	; 0x37
 800d362:	2a09      	cmp	r2, #9
 800d364:	bf94      	ite	ls
 800d366:	3230      	addls	r2, #48	; 0x30
 800d368:	3237      	addhi	r2, #55	; 0x37
 800d36a:	44a4      	add	ip, r4
 800d36c:	f881 0020 	strb.w	r0, [r1, #32]
 800d370:	f88c 2020 	strb.w	r2, [ip, #32]
 800d374:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800d378:	f103 0802 	add.w	r8, r3, #2
 800d37c:	0910      	lsrs	r0, r2, #4
 800d37e:	2a9f      	cmp	r2, #159	; 0x9f
 800d380:	f002 020f 	and.w	r2, r2, #15
 800d384:	bf94      	ite	ls
 800d386:	3030      	addls	r0, #48	; 0x30
 800d388:	3037      	addhi	r0, #55	; 0x37
 800d38a:	f103 0e03 	add.w	lr, r3, #3
 800d38e:	2a09      	cmp	r2, #9
 800d390:	eb04 0c08 	add.w	ip, r4, r8
 800d394:	f88c 0020 	strb.w	r0, [ip, #32]
 800d398:	bf94      	ite	ls
 800d39a:	3230      	addls	r2, #48	; 0x30
 800d39c:	3237      	addhi	r2, #55	; 0x37
 800d39e:	eb04 000e 	add.w	r0, r4, lr
 800d3a2:	f880 2020 	strb.w	r2, [r0, #32]
 800d3a6:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800d3aa:	f103 0c04 	add.w	ip, r3, #4
 800d3ae:	0910      	lsrs	r0, r2, #4
 800d3b0:	2a9f      	cmp	r2, #159	; 0x9f
 800d3b2:	f002 020f 	and.w	r2, r2, #15
 800d3b6:	bf94      	ite	ls
 800d3b8:	3030      	addls	r0, #48	; 0x30
 800d3ba:	3037      	addhi	r0, #55	; 0x37
 800d3bc:	3305      	adds	r3, #5
 800d3be:	2a09      	cmp	r2, #9
 800d3c0:	4423      	add	r3, r4
 800d3c2:	44a4      	add	ip, r4
 800d3c4:	bf94      	ite	ls
 800d3c6:	3230      	addls	r2, #48	; 0x30
 800d3c8:	3237      	addhi	r2, #55	; 0x37
 800d3ca:	f88c 0020 	strb.w	r0, [ip, #32]
 800d3ce:	f883 2020 	strb.w	r2, [r3, #32]
 800d3d2:	2300      	movs	r3, #0
 800d3d4:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800d3d8:	f003 fe92 	bl	8011100 <net::link_register_read()>
 800d3dc:	7963      	ldrb	r3, [r4, #5]
 800d3de:	6020      	str	r0, [r4, #0]
 800d3e0:	2800      	cmp	r0, #0
 800d3e2:	f040 809c 	bne.w	800d51e <Network::Init(NetworkParamsStore*)+0x24e>
 800d3e6:	2b00      	cmp	r3, #0
 800d3e8:	f040 80aa 	bne.w	800d540 <Network::Init(NetworkParamsStore*)+0x270>
 800d3ec:	9b08      	ldr	r3, [sp, #32]
 800d3ee:	2b00      	cmp	r3, #0
 800d3f0:	d173      	bne.n	800d4da <Network::Init(NetworkParamsStore*)+0x20a>
 800d3f2:	4620      	mov	r0, r4
 800d3f4:	f7ff ff5b 	bl	800d2ae <Network::SetDefaultIp()>
 800d3f8:	6963      	ldr	r3, [r4, #20]
 800d3fa:	69e2      	ldr	r2, [r4, #28]
 800d3fc:	9308      	str	r3, [sp, #32]
 800d3fe:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800d402:	1de3      	adds	r3, r4, #7
 800d404:	f104 0905 	add.w	r9, r4, #5
 800d408:	9302      	str	r3, [sp, #8]
 800d40a:	9300      	str	r3, [sp, #0]
 800d40c:	463a      	mov	r2, r7
 800d40e:	464b      	mov	r3, r9
 800d410:	4630      	mov	r0, r6
 800d412:	a908      	add	r1, sp, #32
 800d414:	f7f9 fe9c 	bl	8007150 <net_init>
 800d418:	79e3      	ldrb	r3, [r4, #7]
 800d41a:	b11b      	cbz	r3, 800d424 <Network::Init(NetworkParamsStore*)+0x154>
 800d41c:	2104      	movs	r1, #4
 800d41e:	4628      	mov	r0, r5
 800d420:	f001 fa90 	bl	800e944 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d424:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d428:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800d42c:	9304      	str	r3, [sp, #16]
 800d42e:	233c      	movs	r3, #60	; 0x3c
 800d430:	fb03 f30a 	mul.w	r3, r3, sl
 800d434:	f8df 8118 	ldr.w	r8, [pc, #280]	; 800d550 <Network::Init(NetworkParamsStore*)+0x280>
 800d438:	f8df b118 	ldr.w	fp, [pc, #280]	; 800d554 <Network::Init(NetworkParamsStore*)+0x284>
 800d43c:	9303      	str	r3, [sp, #12]
 800d43e:	79e3      	ldrb	r3, [r4, #7]
 800d440:	b393      	cbz	r3, 800d4a8 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d442:	f1ba 0f00 	cmp.w	sl, #0
 800d446:	d02f      	beq.n	800d4a8 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d448:	9b04      	ldr	r3, [sp, #16]
 800d44a:	b36b      	cbz	r3, 800d4a8 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d44c:	2104      	movs	r1, #4
 800d44e:	f8d8 0000 	ldr.w	r0, [r8]
 800d452:	f002 f819 	bl	800f488 <LedBlink::SetMode(ledblink::Mode)>
 800d456:	2103      	movs	r1, #3
 800d458:	4628      	mov	r0, r5
 800d45a:	f001 fa73 	bl	800e944 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d45e:	2000      	movs	r0, #0
 800d460:	f002 fd18 	bl	800fe94 <time>
 800d464:	9005      	str	r0, [sp, #20]
 800d466:	2000      	movs	r0, #0
 800d468:	f002 fd14 	bl	800fe94 <time>
 800d46c:	9b05      	ldr	r3, [sp, #20]
 800d46e:	493a      	ldr	r1, [pc, #232]	; (800d558 <Network::Init(NetworkParamsStore*)+0x288>)
 800d470:	1ac0      	subs	r0, r0, r3
 800d472:	9b03      	ldr	r3, [sp, #12]
 800d474:	4298      	cmp	r0, r3
 800d476:	db38      	blt.n	800d4ea <Network::Init(NetworkParamsStore*)+0x21a>
 800d478:	2101      	movs	r1, #1
 800d47a:	4628      	mov	r0, r5
 800d47c:	f001 fa62 	bl	800e944 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d480:	2101      	movs	r1, #1
 800d482:	f8d8 0000 	ldr.w	r0, [r8]
 800d486:	f001 ffff 	bl	800f488 <LedBlink::SetMode(ledblink::Mode)>
 800d48a:	2301      	movs	r3, #1
 800d48c:	7163      	strb	r3, [r4, #5]
 800d48e:	2300      	movs	r3, #0
 800d490:	71e3      	strb	r3, [r4, #7]
 800d492:	9b02      	ldr	r3, [sp, #8]
 800d494:	463a      	mov	r2, r7
 800d496:	9300      	str	r3, [sp, #0]
 800d498:	4630      	mov	r0, r6
 800d49a:	464b      	mov	r3, r9
 800d49c:	a908      	add	r1, sp, #32
 800d49e:	f7f9 fe57 	bl	8007150 <net_init>
 800d4a2:	7963      	ldrb	r3, [r4, #5]
 800d4a4:	2b00      	cmp	r3, #0
 800d4a6:	d0ca      	beq.n	800d43e <Network::Init(NetworkParamsStore*)+0x16e>
 800d4a8:	9b08      	ldr	r3, [sp, #32]
 800d4aa:	4628      	mov	r0, r5
 800d4ac:	6163      	str	r3, [r4, #20]
 800d4ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d4b0:	61e3      	str	r3, [r4, #28]
 800d4b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4b4:	61a3      	str	r3, [r4, #24]
 800d4b6:	f001 fa39 	bl	800e92c <NetworkDisplay::ShowIp()>
 800d4ba:	b025      	add	sp, #148	; 0x94
 800d4bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4c0:	4663      	mov	r3, ip
 800d4c2:	f800 2f01 	strb.w	r2, [r0, #1]!
 800d4c6:	e73b      	b.n	800d340 <Network::Init(NetworkParamsStore*)+0x70>
 800d4c8:	4638      	mov	r0, r7
 800d4ca:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800d4ce:	f7ff fe95 	bl	800d1fc <strncpy.constprop.0.isra.0>
 800d4d2:	2300      	movs	r3, #0
 800d4d4:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800d4d8:	e77e      	b.n	800d3d8 <Network::Init(NetworkParamsStore*)+0x108>
 800d4da:	69e1      	ldr	r1, [r4, #28]
 800d4dc:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800d4e0:	4053      	eors	r3, r2
 800d4e2:	420b      	tst	r3, r1
 800d4e4:	bf18      	it	ne
 800d4e6:	920a      	strne	r2, [sp, #40]	; 0x28
 800d4e8:	e78b      	b.n	800d402 <Network::Init(NetworkParamsStore*)+0x132>
 800d4ea:	f8d8 3000 	ldr.w	r3, [r8]
 800d4ee:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d4f2:	f1bc 0f00 	cmp.w	ip, #0
 800d4f6:	d0b6      	beq.n	800d466 <Network::Init(NetworkParamsStore*)+0x196>
 800d4f8:	6808      	ldr	r0, [r1, #0]
 800d4fa:	695a      	ldr	r2, [r3, #20]
 800d4fc:	1a80      	subs	r0, r0, r2
 800d4fe:	4584      	cmp	ip, r0
 800d500:	d8b1      	bhi.n	800d466 <Network::Init(NetworkParamsStore*)+0x196>
 800d502:	6808      	ldr	r0, [r1, #0]
 800d504:	6158      	str	r0, [r3, #20]
 800d506:	6918      	ldr	r0, [r3, #16]
 800d508:	2801      	cmp	r0, #1
 800d50a:	f080 0201 	eor.w	r2, r0, #1
 800d50e:	611a      	str	r2, [r3, #16]
 800d510:	bf16      	itet	ne
 800d512:	2301      	movne	r3, #1
 800d514:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d518:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d51c:	e7a3      	b.n	800d466 <Network::Init(NetworkParamsStore*)+0x196>
 800d51e:	b11b      	cbz	r3, 800d528 <Network::Init(NetworkParamsStore*)+0x258>
 800d520:	2300      	movs	r3, #0
 800d522:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800d526:	9308      	str	r3, [sp, #32]
 800d528:	2300      	movs	r3, #0
 800d52a:	f88d 301f 	strb.w	r3, [sp, #31]
 800d52e:	f10d 031f 	add.w	r3, sp, #31
 800d532:	463a      	mov	r2, r7
 800d534:	4630      	mov	r0, r6
 800d536:	9300      	str	r3, [sp, #0]
 800d538:	a908      	add	r1, sp, #32
 800d53a:	f7f9 fe09 	bl	8007150 <net_init>
 800d53e:	e7b3      	b.n	800d4a8 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d540:	2101      	movs	r1, #1
 800d542:	4628      	mov	r0, r5
 800d544:	f001 f9fe 	bl	800e944 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d548:	e75b      	b.n	800d402 <Network::Init(NetworkParamsStore*)+0x132>
 800d54a:	bf00      	nop
 800d54c:	08013512 	stmdaeq	r1, {r1, r4, r8, sl, ip, sp}
 800d550:	2000a0f4 	strdcs	sl, [r0], -r4
 800d554:	40011000 	andmi	r1, r1, r0
 800d558:	2000a114 	andcs	sl, r0, r4, lsl r1

0800d55c <Network::Print()>:
 800d55c:	b530      	push	{r4, r5, lr}
 800d55e:	4604      	mov	r4, r0
 800d560:	b085      	sub	sp, #20
 800d562:	4832      	ldr	r0, [pc, #200]	; (800d62c <Network::Print()+0xd0>)
 800d564:	f002 fb60 	bl	800fc28 <printf>
 800d568:	f104 0120 	add.w	r1, r4, #32
 800d56c:	4830      	ldr	r0, [pc, #192]	; (800d630 <Network::Print()+0xd4>)
 800d56e:	f002 fb5b 	bl	800fc28 <printf>
 800d572:	68a1      	ldr	r1, [r4, #8]
 800d574:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800d578:	482e      	ldr	r0, [pc, #184]	; (800d634 <Network::Print()+0xd8>)
 800d57a:	f002 fb55 	bl	800fc28 <printf>
 800d57e:	69e0      	ldr	r0, [r4, #28]
 800d580:	f004 fb32 	bl	8011be8 <__popcountsi2>
 800d584:	6965      	ldr	r5, [r4, #20]
 800d586:	9001      	str	r0, [sp, #4]
 800d588:	0e2b      	lsrs	r3, r5, #24
 800d58a:	9300      	str	r3, [sp, #0]
 800d58c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d590:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d594:	b2e9      	uxtb	r1, r5
 800d596:	4828      	ldr	r0, [pc, #160]	; (800d638 <Network::Print()+0xdc>)
 800d598:	f002 fb46 	bl	800fc28 <printf>
 800d59c:	69e1      	ldr	r1, [r4, #28]
 800d59e:	4827      	ldr	r0, [pc, #156]	; (800d63c <Network::Print()+0xe0>)
 800d5a0:	0e0b      	lsrs	r3, r1, #24
 800d5a2:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5a6:	9300      	str	r3, [sp, #0]
 800d5a8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5ac:	b2c9      	uxtb	r1, r1
 800d5ae:	f002 fb3b 	bl	800fc28 <printf>
 800d5b2:	69a1      	ldr	r1, [r4, #24]
 800d5b4:	4822      	ldr	r0, [pc, #136]	; (800d640 <Network::Print()+0xe4>)
 800d5b6:	0e0b      	lsrs	r3, r1, #24
 800d5b8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5bc:	9300      	str	r3, [sp, #0]
 800d5be:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5c2:	b2c9      	uxtb	r1, r1
 800d5c4:	f002 fb30 	bl	800fc28 <printf>
 800d5c8:	69e3      	ldr	r3, [r4, #28]
 800d5ca:	6961      	ldr	r1, [r4, #20]
 800d5cc:	481d      	ldr	r0, [pc, #116]	; (800d644 <Network::Print()+0xe8>)
 800d5ce:	ea61 0103 	orn	r1, r1, r3
 800d5d2:	0e0b      	lsrs	r3, r1, #24
 800d5d4:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5d8:	9300      	str	r3, [sp, #0]
 800d5da:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5de:	b2c9      	uxtb	r1, r1
 800d5e0:	f002 fb22 	bl	800fc28 <printf>
 800d5e4:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800d5e8:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d5ec:	9302      	str	r3, [sp, #8]
 800d5ee:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800d5f2:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800d5f6:	9301      	str	r3, [sp, #4]
 800d5f8:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800d5fc:	4812      	ldr	r0, [pc, #72]	; (800d648 <Network::Print()+0xec>)
 800d5fe:	9300      	str	r3, [sp, #0]
 800d600:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800d604:	f002 fb10 	bl	800fc28 <printf>
 800d608:	4b10      	ldr	r3, [pc, #64]	; (800d64c <Network::Print()+0xf0>)
 800d60a:	681b      	ldr	r3, [r3, #0]
 800d60c:	79da      	ldrb	r2, [r3, #7]
 800d60e:	b952      	cbnz	r2, 800d626 <Network::Print()+0xca>
 800d610:	795b      	ldrb	r3, [r3, #5]
 800d612:	2b00      	cmp	r3, #0
 800d614:	bf14      	ite	ne
 800d616:	2144      	movne	r1, #68	; 0x44
 800d618:	2153      	moveq	r1, #83	; 0x53
 800d61a:	480d      	ldr	r0, [pc, #52]	; (800d650 <Network::Print()+0xf4>)
 800d61c:	b005      	add	sp, #20
 800d61e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d622:	f002 bb01 	b.w	800fc28 <printf>
 800d626:	215a      	movs	r1, #90	; 0x5a
 800d628:	e7f7      	b.n	800d61a <Network::Print()+0xbe>
 800d62a:	bf00      	nop
 800d62c:	0801351e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, ip, sp}
 800d630:	08013527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp}
 800d634:	08013538 	stmdaeq	r1, {r3, r4, r5, r8, sl, ip, sp}
 800d638:	0801354d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, ip, sp}
 800d63c:	0801356a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, sp}
 800d640:	08013584 	stmdaeq	r1, {r2, r7, r8, sl, ip, sp}
 800d644:	0801359e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, sl, ip, sp}
 800d648:	080135b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, sl, ip, sp}
 800d64c:	20009a30 	andcs	r9, r0, r0, lsr sl
 800d650:	080135e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, ip, sp}

0800d654 <Network::TcpBegin(unsigned short)>:
 800d654:	4608      	mov	r0, r1
 800d656:	f7fe bfef 	b.w	800c638 <tcp_begin>

0800d65a <Network::TcpRead(int, unsigned char const**)>:
 800d65a:	4608      	mov	r0, r1
 800d65c:	4611      	mov	r1, r2
 800d65e:	f7ff b829 	b.w	800c6b4 <tcp_read>

0800d662 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d662:	4608      	mov	r0, r1
 800d664:	4611      	mov	r1, r2
 800d666:	461a      	mov	r2, r3
 800d668:	f7ff b800 	b.w	800c66c <tcp_write>

0800d66c <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d66c:	b510      	push	{r4, lr}
 800d66e:	225e      	movs	r2, #94	; 0x5e
 800d670:	4604      	mov	r4, r0
 800d672:	f840 1b04 	str.w	r1, [r0], #4
 800d676:	2100      	movs	r1, #0
 800d678:	f002 f8bc 	bl	800f7f4 <memset>
 800d67c:	2301      	movs	r3, #1
 800d67e:	4620      	mov	r0, r4
 800d680:	7623      	strb	r3, [r4, #24]
 800d682:	bd10      	pop	{r4, pc}

0800d684 <NetworkParams::Load()>:
 800d684:	b508      	push	{r3, lr}
 800d686:	2300      	movs	r3, #0
 800d688:	4601      	mov	r1, r0
 800d68a:	6043      	str	r3, [r0, #4]
 800d68c:	6800      	ldr	r0, [r0, #0]
 800d68e:	b120      	cbz	r0, 800d69a <NetworkParams::Load()+0x16>
 800d690:	6803      	ldr	r3, [r0, #0]
 800d692:	3104      	adds	r1, #4
 800d694:	68db      	ldr	r3, [r3, #12]
 800d696:	4798      	blx	r3
 800d698:	2001      	movs	r0, #1
 800d69a:	bd08      	pop	{r3, pc}

0800d69c <NetworkParams::Load(char const*, unsigned int)>:
 800d69c:	6803      	ldr	r3, [r0, #0]
 800d69e:	b1d3      	cbz	r3, 800d6d6 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800d6a0:	2300      	movs	r3, #0
 800d6a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d6a4:	460d      	mov	r5, r1
 800d6a6:	4616      	mov	r6, r2
 800d6a8:	4604      	mov	r4, r0
 800d6aa:	6043      	str	r3, [r0, #4]
 800d6ac:	4602      	mov	r2, r0
 800d6ae:	490a      	ldr	r1, [pc, #40]	; (800d6d8 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800d6b0:	4668      	mov	r0, sp
 800d6b2:	f001 fa9f 	bl	800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d6b6:	4632      	mov	r2, r6
 800d6b8:	4629      	mov	r1, r5
 800d6ba:	4668      	mov	r0, sp
 800d6bc:	f001 fa9e 	bl	800ebfc <ReadConfigFile::Read(char const*, unsigned int)>
 800d6c0:	4621      	mov	r1, r4
 800d6c2:	f851 0b04 	ldr.w	r0, [r1], #4
 800d6c6:	6803      	ldr	r3, [r0, #0]
 800d6c8:	689b      	ldr	r3, [r3, #8]
 800d6ca:	4798      	blx	r3
 800d6cc:	4668      	mov	r0, sp
 800d6ce:	f001 fa94 	bl	800ebfa <ReadConfigFile::~ReadConfigFile()>
 800d6d2:	b002      	add	sp, #8
 800d6d4:	bd70      	pop	{r4, r5, r6, pc}
 800d6d6:	4770      	bx	lr
 800d6d8:	0800d7fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, lr, pc}

0800d6dc <NetworkParams::callbackFunction(char const*)>:
 800d6dc:	b530      	push	{r4, r5, lr}
 800d6de:	460d      	mov	r5, r1
 800d6e0:	b085      	sub	sp, #20
 800d6e2:	4604      	mov	r4, r0
 800d6e4:	493f      	ldr	r1, [pc, #252]	; (800d7e4 <NetworkParams::callbackFunction(char const*)+0x108>)
 800d6e6:	4628      	mov	r0, r5
 800d6e8:	f10d 0207 	add.w	r2, sp, #7
 800d6ec:	f001 fb32 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d6f0:	b978      	cbnz	r0, 800d712 <NetworkParams::callbackFunction(char const*)+0x36>
 800d6f2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d6f6:	6863      	ldr	r3, [r4, #4]
 800d6f8:	b142      	cbz	r2, 800d70c <NetworkParams::callbackFunction(char const*)+0x30>
 800d6fa:	f023 0301 	bic.w	r3, r3, #1
 800d6fe:	3a00      	subs	r2, #0
 800d700:	bf18      	it	ne
 800d702:	2201      	movne	r2, #1
 800d704:	6063      	str	r3, [r4, #4]
 800d706:	7622      	strb	r2, [r4, #24]
 800d708:	b005      	add	sp, #20
 800d70a:	bd30      	pop	{r4, r5, pc}
 800d70c:	f043 0301 	orr.w	r3, r3, #1
 800d710:	e7f5      	b.n	800d6fe <NetworkParams::callbackFunction(char const*)+0x22>
 800d712:	4628      	mov	r0, r5
 800d714:	4934      	ldr	r1, [pc, #208]	; (800d7e8 <NetworkParams::callbackFunction(char const*)+0x10c>)
 800d716:	f10d 0207 	add.w	r2, sp, #7
 800d71a:	f001 fb1b 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d71e:	b980      	cbnz	r0, 800d742 <NetworkParams::callbackFunction(char const*)+0x66>
 800d720:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d724:	6863      	ldr	r3, [r4, #4]
 800d726:	1e51      	subs	r1, r2, #1
 800d728:	2904      	cmp	r1, #4
 800d72a:	bf97      	itett	ls
 800d72c:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d730:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d734:	6063      	strls	r3, [r4, #4]
 800d736:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800d73a:	bf84      	itt	hi
 800d73c:	6063      	strhi	r3, [r4, #4]
 800d73e:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800d742:	4628      	mov	r0, r5
 800d744:	4929      	ldr	r1, [pc, #164]	; (800d7ec <NetworkParams::callbackFunction(char const*)+0x110>)
 800d746:	aa02      	add	r2, sp, #8
 800d748:	f001 faa5 	bl	800ec96 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d74c:	b9c8      	cbnz	r0, 800d782 <NetworkParams::callbackFunction(char const*)+0xa6>
 800d74e:	9b02      	ldr	r3, [sp, #8]
 800d750:	b2d9      	uxtb	r1, r3
 800d752:	29ac      	cmp	r1, #172	; 0xac
 800d754:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d758:	d009      	beq.n	800d76e <NetworkParams::callbackFunction(char const*)+0x92>
 800d75a:	29c0      	cmp	r1, #192	; 0xc0
 800d75c:	d00b      	beq.n	800d776 <NetworkParams::callbackFunction(char const*)+0x9a>
 800d75e:	290a      	cmp	r1, #10
 800d760:	d10c      	bne.n	800d77c <NetworkParams::callbackFunction(char const*)+0xa0>
 800d762:	60a3      	str	r3, [r4, #8]
 800d764:	6863      	ldr	r3, [r4, #4]
 800d766:	f043 0302 	orr.w	r3, r3, #2
 800d76a:	6063      	str	r3, [r4, #4]
 800d76c:	e7cc      	b.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d76e:	3a10      	subs	r2, #16
 800d770:	2a0f      	cmp	r2, #15
 800d772:	d8c9      	bhi.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d774:	e7f5      	b.n	800d762 <NetworkParams::callbackFunction(char const*)+0x86>
 800d776:	2aa8      	cmp	r2, #168	; 0xa8
 800d778:	d1c6      	bne.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d77a:	e7f2      	b.n	800d762 <NetworkParams::callbackFunction(char const*)+0x86>
 800d77c:	2b00      	cmp	r3, #0
 800d77e:	d0f0      	beq.n	800d762 <NetworkParams::callbackFunction(char const*)+0x86>
 800d780:	e7c2      	b.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d782:	4628      	mov	r0, r5
 800d784:	491a      	ldr	r1, [pc, #104]	; (800d7f0 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d786:	aa02      	add	r2, sp, #8
 800d788:	f001 fa85 	bl	800ec96 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d78c:	b960      	cbnz	r0, 800d7a8 <NetworkParams::callbackFunction(char const*)+0xcc>
 800d78e:	9b02      	ldr	r3, [sp, #8]
 800d790:	2b00      	cmp	r3, #0
 800d792:	d0b9      	beq.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d794:	ba1a      	rev	r2, r3
 800d796:	43d1      	mvns	r1, r2
 800d798:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 800d79c:	d1b4      	bne.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d79e:	60e3      	str	r3, [r4, #12]
 800d7a0:	6863      	ldr	r3, [r4, #4]
 800d7a2:	f043 0304 	orr.w	r3, r3, #4
 800d7a6:	e7e0      	b.n	800d76a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d7a8:	4628      	mov	r0, r5
 800d7aa:	4912      	ldr	r1, [pc, #72]	; (800d7f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d7ac:	aa02      	add	r2, sp, #8
 800d7ae:	f001 fa72 	bl	800ec96 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d7b2:	b928      	cbnz	r0, 800d7c0 <NetworkParams::callbackFunction(char const*)+0xe4>
 800d7b4:	9b02      	ldr	r3, [sp, #8]
 800d7b6:	6123      	str	r3, [r4, #16]
 800d7b8:	6863      	ldr	r3, [r4, #4]
 800d7ba:	f043 0308 	orr.w	r3, r3, #8
 800d7be:	e7d4      	b.n	800d76a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d7c0:	233f      	movs	r3, #63	; 0x3f
 800d7c2:	4628      	mov	r0, r5
 800d7c4:	9303      	str	r3, [sp, #12]
 800d7c6:	490c      	ldr	r1, [pc, #48]	; (800d7f8 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d7c8:	ab03      	add	r3, sp, #12
 800d7ca:	f104 0219 	add.w	r2, r4, #25
 800d7ce:	f001 fa49 	bl	800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d7d2:	2800      	cmp	r0, #0
 800d7d4:	d198      	bne.n	800d708 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7d6:	9b03      	ldr	r3, [sp, #12]
 800d7d8:	4423      	add	r3, r4
 800d7da:	7658      	strb	r0, [r3, #25]
 800d7dc:	6863      	ldr	r3, [r4, #4]
 800d7de:	f043 0320 	orr.w	r3, r3, #32
 800d7e2:	e7c2      	b.n	800d76a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d7e4:	0801363c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, ip, sp}
 800d7e8:	0801361a 	stmdaeq	r1, {r1, r3, r4, r9, sl, ip, sp}
 800d7ec:	080135ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 800d7f0:	08013633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, sp}
 800d7f4:	0801360a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp}
 800d7f8:	0801362a 	stmdaeq	r1, {r1, r3, r5, r9, sl, ip, sp}

0800d7fc <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d7fc:	f7ff bf6e 	b.w	800d6dc <NetworkParams::callbackFunction(char const*)>

0800d800 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800d800:	b570      	push	{r4, r5, r6, lr}
 800d802:	4604      	mov	r4, r0
 800d804:	4615      	mov	r5, r2
 800d806:	461e      	mov	r6, r3
 800d808:	b086      	sub	sp, #24
 800d80a:	3004      	adds	r0, #4
 800d80c:	2900      	cmp	r1, #0
 800d80e:	d02b      	beq.n	800d868 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800d810:	225e      	movs	r2, #94	; 0x5e
 800d812:	f001 ffd8 	bl	800f7c6 <memmove>
 800d816:	462a      	mov	r2, r5
 800d818:	4633      	mov	r3, r6
 800d81a:	4970      	ldr	r1, [pc, #448]	; (800d9dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d81c:	a803      	add	r0, sp, #12
 800d81e:	f001 f949 	bl	800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d822:	6863      	ldr	r3, [r4, #4]
 800d824:	079a      	lsls	r2, r3, #30
 800d826:	bf5f      	itttt	pl
 800d828:	4a6d      	ldrpl	r2, [pc, #436]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d82a:	6812      	ldrpl	r2, [r2, #0]
 800d82c:	6952      	ldrpl	r2, [r2, #20]
 800d82e:	60a2      	strpl	r2, [r4, #8]
 800d830:	075e      	lsls	r6, r3, #29
 800d832:	bf5f      	itttt	pl
 800d834:	4a6a      	ldrpl	r2, [pc, #424]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d836:	6812      	ldrpl	r2, [r2, #0]
 800d838:	69d2      	ldrpl	r2, [r2, #28]
 800d83a:	60e2      	strpl	r2, [r4, #12]
 800d83c:	071d      	lsls	r5, r3, #28
 800d83e:	bf58      	it	pl
 800d840:	4a67      	ldrpl	r2, [pc, #412]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d842:	f104 0519 	add.w	r5, r4, #25
 800d846:	bf5e      	ittt	pl
 800d848:	6812      	ldrpl	r2, [r2, #0]
 800d84a:	6992      	ldrpl	r2, [r2, #24]
 800d84c:	6122      	strpl	r2, [r4, #16]
 800d84e:	0698      	lsls	r0, r3, #26
 800d850:	d418      	bmi.n	800d884 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800d852:	4628      	mov	r0, r5
 800d854:	223f      	movs	r2, #63	; 0x3f
 800d856:	4b62      	ldr	r3, [pc, #392]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d858:	681b      	ldr	r3, [r3, #0]
 800d85a:	331f      	adds	r3, #31
 800d85c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d860:	b949      	cbnz	r1, 800d876 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800d862:	f001 ffc7 	bl	800f7f4 <memset>
 800d866:	e00a      	b.n	800d87e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800d868:	6823      	ldr	r3, [r4, #0]
 800d86a:	4601      	mov	r1, r0
 800d86c:	681a      	ldr	r2, [r3, #0]
 800d86e:	4618      	mov	r0, r3
 800d870:	68d2      	ldr	r2, [r2, #12]
 800d872:	4790      	blx	r2
 800d874:	e7cf      	b.n	800d816 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800d876:	3a01      	subs	r2, #1
 800d878:	f800 1b01 	strb.w	r1, [r0], #1
 800d87c:	d1ee      	bne.n	800d85c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800d87e:	2300      	movs	r3, #0
 800d880:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800d884:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d888:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800d88c:	7e23      	ldrb	r3, [r4, #24]
 800d88e:	42b2      	cmp	r2, r6
 800d890:	6861      	ldr	r1, [r4, #4]
 800d892:	d21a      	bcs.n	800d8ca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800d894:	9803      	ldr	r0, [sp, #12]
 800d896:	07c9      	lsls	r1, r1, #31
 800d898:	4410      	add	r0, r2
 800d89a:	eba6 0602 	sub.w	r6, r6, r2
 800d89e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8a2:	d404      	bmi.n	800d8ae <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800d8a4:	b922      	cbnz	r2, 800d8b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800d8a6:	9300      	str	r3, [sp, #0]
 800d8a8:	4a4e      	ldr	r2, [pc, #312]	; (800d9e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d8aa:	4b4f      	ldr	r3, [pc, #316]	; (800d9e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8ac:	e003      	b.n	800d8b6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800d8ae:	b312      	cbz	r2, 800d8f6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800d8b0:	9300      	str	r3, [sp, #0]
 800d8b2:	4a4e      	ldr	r2, [pc, #312]	; (800d9ec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d8b4:	4b4c      	ldr	r3, [pc, #304]	; (800d9e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8b6:	4631      	mov	r1, r6
 800d8b8:	f002 f9de 	bl	800fc78 <snprintf>
 800d8bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d8c0:	4286      	cmp	r6, r0
 800d8c2:	bfa4      	itt	ge
 800d8c4:	181b      	addge	r3, r3, r0
 800d8c6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d8ca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d8ce:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800d8d2:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800d8d6:	42b2      	cmp	r2, r6
 800d8d8:	6861      	ldr	r1, [r4, #4]
 800d8da:	d21f      	bcs.n	800d91c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800d8dc:	9803      	ldr	r0, [sp, #12]
 800d8de:	05c9      	lsls	r1, r1, #23
 800d8e0:	4410      	add	r0, r2
 800d8e2:	eba6 0602 	sub.w	r6, r6, r2
 800d8e6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8ea:	d408      	bmi.n	800d8fe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800d8ec:	b94a      	cbnz	r2, 800d902 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800d8ee:	9300      	str	r3, [sp, #0]
 800d8f0:	4a3c      	ldr	r2, [pc, #240]	; (800d9e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d8f2:	4b3f      	ldr	r3, [pc, #252]	; (800d9f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d8f4:	e008      	b.n	800d908 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800d8f6:	9300      	str	r3, [sp, #0]
 800d8f8:	4a3e      	ldr	r2, [pc, #248]	; (800d9f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d8fa:	4b3b      	ldr	r3, [pc, #236]	; (800d9e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8fc:	e7db      	b.n	800d8b6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800d8fe:	2a00      	cmp	r2, #0
 800d900:	d03c      	beq.n	800d97c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800d902:	9300      	str	r3, [sp, #0]
 800d904:	4a39      	ldr	r2, [pc, #228]	; (800d9ec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d906:	4b3a      	ldr	r3, [pc, #232]	; (800d9f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d908:	4631      	mov	r1, r6
 800d90a:	f002 f9b5 	bl	800fc78 <snprintf>
 800d90e:	4286      	cmp	r6, r0
 800d910:	bfa2      	ittt	ge
 800d912:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d916:	18c0      	addge	r0, r0, r3
 800d918:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d91c:	4936      	ldr	r1, [pc, #216]	; (800d9f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d91e:	a803      	add	r0, sp, #12
 800d920:	f001 f94e 	bl	800ebc0 <PropertiesBuilder::AddComment(char const*)>
 800d924:	6863      	ldr	r3, [r4, #4]
 800d926:	68a2      	ldr	r2, [r4, #8]
 800d928:	4934      	ldr	r1, [pc, #208]	; (800d9fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d92a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d92e:	a803      	add	r0, sp, #12
 800d930:	f001 f902 	bl	800eb38 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d934:	6863      	ldr	r3, [r4, #4]
 800d936:	68e2      	ldr	r2, [r4, #12]
 800d938:	4931      	ldr	r1, [pc, #196]	; (800da00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800d93a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d93e:	a803      	add	r0, sp, #12
 800d940:	f001 f8fa 	bl	800eb38 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d944:	6863      	ldr	r3, [r4, #4]
 800d946:	6922      	ldr	r2, [r4, #16]
 800d948:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d94c:	492d      	ldr	r1, [pc, #180]	; (800da04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800d94e:	a803      	add	r0, sp, #12
 800d950:	f001 f8f2 	bl	800eb38 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d954:	6862      	ldr	r2, [r4, #4]
 800d956:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d95a:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d95e:	42a3      	cmp	r3, r4
 800d960:	d21e      	bcs.n	800d9a0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800d962:	9803      	ldr	r0, [sp, #12]
 800d964:	0692      	lsls	r2, r2, #26
 800d966:	4418      	add	r0, r3
 800d968:	eba4 0403 	sub.w	r4, r4, r3
 800d96c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d970:	d408      	bmi.n	800d984 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800d972:	b943      	cbnz	r3, 800d986 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800d974:	4b24      	ldr	r3, [pc, #144]	; (800da08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d976:	4a25      	ldr	r2, [pc, #148]	; (800da0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d978:	9500      	str	r5, [sp, #0]
 800d97a:	e007      	b.n	800d98c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d97c:	9300      	str	r3, [sp, #0]
 800d97e:	4a1d      	ldr	r2, [pc, #116]	; (800d9f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d980:	4b1b      	ldr	r3, [pc, #108]	; (800d9f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d982:	e7c1      	b.n	800d908 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800d984:	b32b      	cbz	r3, 800d9d2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800d986:	4b20      	ldr	r3, [pc, #128]	; (800da08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d988:	4a21      	ldr	r2, [pc, #132]	; (800da10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800d98a:	9500      	str	r5, [sp, #0]
 800d98c:	4621      	mov	r1, r4
 800d98e:	f002 f973 	bl	800fc78 <snprintf>
 800d992:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d996:	4284      	cmp	r4, r0
 800d998:	bfa4      	itt	ge
 800d99a:	181b      	addge	r3, r3, r0
 800d99c:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d9a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d9a4:	b17b      	cbz	r3, 800d9c6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800d9a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9aa:	9b03      	ldr	r3, [sp, #12]
 800d9ac:	4413      	add	r3, r2
 800d9ae:	227d      	movs	r2, #125	; 0x7d
 800d9b0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d9b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9b8:	9903      	ldr	r1, [sp, #12]
 800d9ba:	54ca      	strb	r2, [r1, r3]
 800d9bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9c0:	3301      	adds	r3, #1
 800d9c2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d9c6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9cc:	601a      	str	r2, [r3, #0]
 800d9ce:	b006      	add	sp, #24
 800d9d0:	bd70      	pop	{r4, r5, r6, pc}
 800d9d2:	4b0d      	ldr	r3, [pc, #52]	; (800da08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d9d4:	4a0f      	ldr	r2, [pc, #60]	; (800da14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d9d6:	9500      	str	r5, [sp, #0]
 800d9d8:	e7d8      	b.n	800d98c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d9da:	bf00      	nop
 800d9dc:	08013645 	stmdaeq	r1, {r0, r2, r6, r9, sl, ip, sp}
 800d9e0:	20009a30 	andcs	r9, r0, r0, lsr sl
 800d9e4:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800d9e8:	0801363c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, ip, sp}
 800d9ec:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800d9f0:	0801361a 	stmdaeq	r1, {r1, r3, r4, r9, sl, ip, sp}
 800d9f4:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}
 800d9f8:	080135f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, ip, sp}
 800d9fc:	080135ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 800da00:	08013633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, sp}
 800da04:	0801360a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp}
 800da08:	0801362a 	stmdaeq	r1, {r1, r3, r5, r9, sl, ip, sp}
 800da0c:	080122d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sp}
 800da10:	080122c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sp}
 800da14:	080122d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sp}

0800da18 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800da18:	b513      	push	{r0, r1, r4, lr}
 800da1a:	6804      	ldr	r4, [r0, #0]
 800da1c:	b914      	cbnz	r4, 800da24 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800da1e:	601c      	str	r4, [r3, #0]
 800da20:	b002      	add	sp, #8
 800da22:	bd10      	pop	{r4, pc}
 800da24:	9300      	str	r3, [sp, #0]
 800da26:	4613      	mov	r3, r2
 800da28:	460a      	mov	r2, r1
 800da2a:	2100      	movs	r1, #0
 800da2c:	f7ff fee8 	bl	800d800 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800da30:	e7f6      	b.n	800da20 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800da32 <NetworkParams::Dump()>:
 800da32:	4770      	bx	lr

0800da34 <memcpy.isra.0>:
 800da34:	3801      	subs	r0, #1
 800da36:	440a      	add	r2, r1
 800da38:	4291      	cmp	r1, r2
 800da3a:	d100      	bne.n	800da3e <memcpy.isra.0+0xa>
 800da3c:	4770      	bx	lr
 800da3e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800da42:	f800 3f01 	strb.w	r3, [r0, #1]!
 800da46:	e7f7      	b.n	800da38 <memcpy.isra.0+0x4>

0800da48 <arp_announce>:
 800da48:	4803      	ldr	r0, [pc, #12]	; (800da58 <arp_announce+0x10>)
 800da4a:	69c3      	ldr	r3, [r0, #28]
 800da4c:	b113      	cbz	r3, 800da54 <arp_announce+0xc>
 800da4e:	212a      	movs	r1, #42	; 0x2a
 800da50:	f003 b800 	b.w	8010a54 <emac_eth_send>
 800da54:	4770      	bx	lr
 800da56:	bf00      	nop
 800da58:	20009a34 	andcs	r9, r0, r4, lsr sl

0800da5c <arp_handle_request>:
 800da5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da5e:	2204      	movs	r2, #4
 800da60:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800da64:	4604      	mov	r4, r0
 800da66:	eb0d 0002 	add.w	r0, sp, r2
 800da6a:	f7ff ffe3 	bl	800da34 <memcpy.isra.0>
 800da6e:	4b0d      	ldr	r3, [pc, #52]	; (800daa4 <arp_handle_request+0x48>)
 800da70:	9a01      	ldr	r2, [sp, #4]
 800da72:	69db      	ldr	r3, [r3, #28]
 800da74:	429a      	cmp	r2, r3
 800da76:	d113      	bne.n	800daa0 <arp_handle_request+0x44>
 800da78:	2206      	movs	r2, #6
 800da7a:	4d0b      	ldr	r5, [pc, #44]	; (800daa8 <arp_handle_request+0x4c>)
 800da7c:	18a1      	adds	r1, r4, r2
 800da7e:	4628      	mov	r0, r5
 800da80:	f7ff ffd8 	bl	800da34 <memcpy.isra.0>
 800da84:	f104 0116 	add.w	r1, r4, #22
 800da88:	f105 0020 	add.w	r0, r5, #32
 800da8c:	2206      	movs	r2, #6
 800da8e:	f7ff ffd1 	bl	800da34 <memcpy.isra.0>
 800da92:	69e3      	ldr	r3, [r4, #28]
 800da94:	212a      	movs	r1, #42	; 0x2a
 800da96:	4628      	mov	r0, r5
 800da98:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800da9c:	f002 ffda 	bl	8010a54 <emac_eth_send>
 800daa0:	b003      	add	sp, #12
 800daa2:	bd30      	pop	{r4, r5, pc}
 800daa4:	20009a34 	andcs	r9, r0, r4, lsr sl
 800daa8:	20009a60 	andcs	r9, r0, r0, ror #20

0800daac <arp_handle_reply>:
 800daac:	69c1      	ldr	r1, [r0, #28]
 800daae:	3016      	adds	r0, #22
 800dab0:	f000 b80a 	b.w	800dac8 <arp_cache_update>

0800dab4 <arp_send_request>:
 800dab4:	4b03      	ldr	r3, [pc, #12]	; (800dac4 <arp_send_request+0x10>)
 800dab6:	212a      	movs	r1, #42	; 0x2a
 800dab8:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800dabc:	4618      	mov	r0, r3
 800dabe:	f002 bfc9 	b.w	8010a54 <emac_eth_send>
 800dac2:	bf00      	nop
 800dac4:	20009a8c 	andcs	r9, r0, ip, lsl #21

0800dac8 <arp_cache_update>:
 800dac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800daca:	4e11      	ldr	r6, [pc, #68]	; (800db10 <arp_cache_update+0x48>)
 800dacc:	8833      	ldrh	r3, [r6, #0]
 800dace:	2b20      	cmp	r3, #32
 800dad0:	d018      	beq.n	800db04 <arp_cache_update+0x3c>
 800dad2:	2400      	movs	r4, #0
 800dad4:	220c      	movs	r2, #12
 800dad6:	4d0f      	ldr	r5, [pc, #60]	; (800db14 <arp_cache_update+0x4c>)
 800dad8:	b2a7      	uxth	r7, r4
 800dada:	42bb      	cmp	r3, r7
 800dadc:	d80b      	bhi.n	800daf6 <arp_cache_update+0x2e>
 800dade:	fb02 5203 	mla	r2, r2, r3, r5
 800dae2:	1d84      	adds	r4, r0, #6
 800dae4:	3203      	adds	r2, #3
 800dae6:	42a0      	cmp	r0, r4
 800dae8:	d10d      	bne.n	800db06 <arp_cache_update+0x3e>
 800daea:	220c      	movs	r2, #12
 800daec:	435a      	muls	r2, r3
 800daee:	3301      	adds	r3, #1
 800daf0:	50a9      	str	r1, [r5, r2]
 800daf2:	8033      	strh	r3, [r6, #0]
 800daf4:	e006      	b.n	800db04 <arp_cache_update+0x3c>
 800daf6:	3401      	adds	r4, #1
 800daf8:	fb02 5704 	mla	r7, r2, r4, r5
 800dafc:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800db00:	428f      	cmp	r7, r1
 800db02:	d1e9      	bne.n	800dad8 <arp_cache_update+0x10>
 800db04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db06:	f810 7b01 	ldrb.w	r7, [r0], #1
 800db0a:	f802 7f01 	strb.w	r7, [r2, #1]!
 800db0e:	e7ea      	b.n	800dae6 <arp_cache_update+0x1e>
 800db10:	20009c38 	andcs	r9, r0, r8, lsr ip
 800db14:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8

0800db18 <arp_cache_lookup>:
 800db18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db1c:	2200      	movs	r2, #0
 800db1e:	4606      	mov	r6, r0
 800db20:	460c      	mov	r4, r1
 800db22:	200c      	movs	r0, #12
 800db24:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800dbac <arp_cache_lookup+0x94>
 800db28:	fb00 f302 	mul.w	r3, r0, r2
 800db2c:	f853 1008 	ldr.w	r1, [r3, r8]
 800db30:	42b1      	cmp	r1, r6
 800db32:	d10d      	bne.n	800db50 <arp_cache_lookup+0x38>
 800db34:	3304      	adds	r3, #4
 800db36:	4443      	add	r3, r8
 800db38:	3c01      	subs	r4, #1
 800db3a:	1d9a      	adds	r2, r3, #6
 800db3c:	4293      	cmp	r3, r2
 800db3e:	d102      	bne.n	800db46 <arp_cache_lookup+0x2e>
 800db40:	4630      	mov	r0, r6
 800db42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db46:	f813 1b01 	ldrb.w	r1, [r3], #1
 800db4a:	f804 1f01 	strb.w	r1, [r4, #1]!
 800db4e:	e7f5      	b.n	800db3c <arp_cache_lookup+0x24>
 800db50:	b111      	cbz	r1, 800db58 <arp_cache_lookup+0x40>
 800db52:	3201      	adds	r2, #1
 800db54:	2a20      	cmp	r2, #32
 800db56:	d1e7      	bne.n	800db28 <arp_cache_lookup+0x10>
 800db58:	2704      	movs	r7, #4
 800db5a:	f8df a054 	ldr.w	sl, [pc, #84]	; 800dbb0 <arp_cache_lookup+0x98>
 800db5e:	f8ba 5000 	ldrh.w	r5, [sl]
 800db62:	3f01      	subs	r7, #1
 800db64:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800db68:	d101      	bne.n	800db6e <arp_cache_lookup+0x56>
 800db6a:	463e      	mov	r6, r7
 800db6c:	e7e8      	b.n	800db40 <arp_cache_lookup+0x28>
 800db6e:	4630      	mov	r0, r6
 800db70:	f7ff ffa0 	bl	800dab4 <arp_send_request>
 800db74:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800db78:	f1b9 0901 	subs.w	r9, r9, #1
 800db7c:	f8ba 3000 	ldrh.w	r3, [sl]
 800db80:	d011      	beq.n	800dba6 <arp_cache_lookup+0x8e>
 800db82:	429d      	cmp	r5, r3
 800db84:	d00c      	beq.n	800dba0 <arp_cache_lookup+0x88>
 800db86:	230c      	movs	r3, #12
 800db88:	fb03 8505 	mla	r5, r3, r5, r8
 800db8c:	3c01      	subs	r4, #1
 800db8e:	1d2b      	adds	r3, r5, #4
 800db90:	350a      	adds	r5, #10
 800db92:	42ab      	cmp	r3, r5
 800db94:	d0d4      	beq.n	800db40 <arp_cache_lookup+0x28>
 800db96:	f813 2b01 	ldrb.w	r2, [r3], #1
 800db9a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800db9e:	e7f8      	b.n	800db92 <arp_cache_lookup+0x7a>
 800dba0:	f7f9 fcbe 	bl	8007520 <net_handle>
 800dba4:	e7e8      	b.n	800db78 <arp_cache_lookup+0x60>
 800dba6:	429d      	cmp	r5, r3
 800dba8:	d0db      	beq.n	800db62 <arp_cache_lookup+0x4a>
 800dbaa:	e7ec      	b.n	800db86 <arp_cache_lookup+0x6e>
 800dbac:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800dbb0:	20009c38 	andcs	r9, r0, r8, lsr ip

0800dbb4 <_parse_response>:
 800dbb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbb8:	2400      	movs	r4, #0
 800dbba:	460d      	mov	r5, r1
 800dbbc:	46a3      	mov	fp, r4
 800dbbe:	4627      	mov	r7, r4
 800dbc0:	46a2      	mov	sl, r4
 800dbc2:	46a1      	mov	r9, r4
 800dbc4:	46a0      	mov	r8, r4
 800dbc6:	4e50      	ldr	r6, [pc, #320]	; (800dd08 <_parse_response+0x154>)
 800dbc8:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800dbcc:	6833      	ldr	r3, [r6, #0]
 800dbce:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800dbd2:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800dbd6:	9009      	str	r0, [sp, #36]	; 0x24
 800dbd8:	9402      	str	r4, [sp, #8]
 800dbda:	9407      	str	r4, [sp, #28]
 800dbdc:	9308      	str	r3, [sp, #32]
 800dbde:	f7f9 fc9f 	bl	8007520 <net_handle>
 800dbe2:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800dbe6:	9300      	str	r3, [sp, #0]
 800dbe8:	f44f 7209 	mov.w	r2, #548	; 0x224
 800dbec:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800dbf0:	ab0c      	add	r3, sp, #48	; 0x30
 800dbf2:	a90d      	add	r1, sp, #52	; 0x34
 800dbf4:	f7fe fe20 	bl	800c838 <udp_recv>
 800dbf8:	2800      	cmp	r0, #0
 800dbfa:	d03f      	beq.n	800dc7c <_parse_response+0xc8>
 800dbfc:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800dc00:	2b43      	cmp	r3, #67	; 0x43
 800dc02:	d13b      	bne.n	800dc7c <_parse_response+0xc8>
 800dc04:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800dc08:	1e6b      	subs	r3, r5, #1
 800dc0a:	1d69      	adds	r1, r5, #5
 800dc0c:	4299      	cmp	r1, r3
 800dc0e:	d12f      	bne.n	800dc70 <_parse_response+0xbc>
 800dc10:	2100      	movs	r1, #0
 800dc12:	ab0d      	add	r3, sp, #52	; 0x34
 800dc14:	181d      	adds	r5, r3, r0
 800dc16:	468c      	mov	ip, r1
 800dc18:	460e      	mov	r6, r1
 800dc1a:	4608      	mov	r0, r1
 800dc1c:	ab49      	add	r3, sp, #292	; 0x124
 800dc1e:	42ab      	cmp	r3, r5
 800dc20:	d337      	bcc.n	800dc92 <_parse_response+0xde>
 800dc22:	b141      	cbz	r1, 800dc36 <_parse_response+0x82>
 800dc24:	4b39      	ldr	r3, [pc, #228]	; (800dd0c <_parse_response+0x158>)
 800dc26:	9a07      	ldr	r2, [sp, #28]
 800dc28:	f883 8003 	strb.w	r8, [r3, #3]
 800dc2c:	709a      	strb	r2, [r3, #2]
 800dc2e:	9a06      	ldr	r2, [sp, #24]
 800dc30:	705a      	strb	r2, [r3, #1]
 800dc32:	9a05      	ldr	r2, [sp, #20]
 800dc34:	701a      	strb	r2, [r3, #0]
 800dc36:	f1bc 0f00 	cmp.w	ip, #0
 800dc3a:	d007      	beq.n	800dc4c <_parse_response+0x98>
 800dc3c:	4b34      	ldr	r3, [pc, #208]	; (800dd10 <_parse_response+0x15c>)
 800dc3e:	9a04      	ldr	r2, [sp, #16]
 800dc40:	705c      	strb	r4, [r3, #1]
 800dc42:	70da      	strb	r2, [r3, #3]
 800dc44:	9a03      	ldr	r2, [sp, #12]
 800dc46:	709a      	strb	r2, [r3, #2]
 800dc48:	9a02      	ldr	r2, [sp, #8]
 800dc4a:	701a      	strb	r2, [r3, #0]
 800dc4c:	b13e      	cbz	r6, 800dc5e <_parse_response+0xaa>
 800dc4e:	4b31      	ldr	r3, [pc, #196]	; (800dd14 <_parse_response+0x160>)
 800dc50:	70df      	strb	r7, [r3, #3]
 800dc52:	f883 a002 	strb.w	sl, [r3, #2]
 800dc56:	f883 9001 	strb.w	r9, [r3, #1]
 800dc5a:	f883 b000 	strb.w	fp, [r3]
 800dc5e:	2802      	cmp	r0, #2
 800dc60:	d102      	bne.n	800dc68 <_parse_response+0xb4>
 800dc62:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dc64:	4b2c      	ldr	r3, [pc, #176]	; (800dd18 <_parse_response+0x164>)
 800dc66:	601a      	str	r2, [r3, #0]
 800dc68:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800dc6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc70:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800dc74:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800dc78:	45e6      	cmp	lr, ip
 800dc7a:	d0c7      	beq.n	800dc0c <_parse_response+0x58>
 800dc7c:	6833      	ldr	r3, [r6, #0]
 800dc7e:	9a08      	ldr	r2, [sp, #32]
 800dc80:	1a9b      	subs	r3, r3, r2
 800dc82:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800dc86:	d3aa      	bcc.n	800dbde <_parse_response+0x2a>
 800dc88:	2800      	cmp	r0, #0
 800dc8a:	d1c1      	bne.n	800dc10 <_parse_response+0x5c>
 800dc8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dc90:	e7ea      	b.n	800dc68 <_parse_response+0xb4>
 800dc92:	781a      	ldrb	r2, [r3, #0]
 800dc94:	2a35      	cmp	r2, #53	; 0x35
 800dc96:	d011      	beq.n	800dcbc <_parse_response+0x108>
 800dc98:	d808      	bhi.n	800dcac <_parse_response+0xf8>
 800dc9a:	2a01      	cmp	r2, #1
 800dc9c:	d011      	beq.n	800dcc2 <_parse_response+0x10e>
 800dc9e:	2a03      	cmp	r2, #3
 800dca0:	d019      	beq.n	800dcd6 <_parse_response+0x122>
 800dca2:	b14a      	cbz	r2, 800dcb8 <_parse_response+0x104>
 800dca4:	1c9a      	adds	r2, r3, #2
 800dca6:	785b      	ldrb	r3, [r3, #1]
 800dca8:	4413      	add	r3, r2
 800dcaa:	e7b8      	b.n	800dc1e <_parse_response+0x6a>
 800dcac:	2a36      	cmp	r2, #54	; 0x36
 800dcae:	d01f      	beq.n	800dcf0 <_parse_response+0x13c>
 800dcb0:	2aff      	cmp	r2, #255	; 0xff
 800dcb2:	d1f7      	bne.n	800dca4 <_parse_response+0xf0>
 800dcb4:	462b      	mov	r3, r5
 800dcb6:	e7b2      	b.n	800dc1e <_parse_response+0x6a>
 800dcb8:	3301      	adds	r3, #1
 800dcba:	e7b0      	b.n	800dc1e <_parse_response+0x6a>
 800dcbc:	7898      	ldrb	r0, [r3, #2]
 800dcbe:	3303      	adds	r3, #3
 800dcc0:	e7ad      	b.n	800dc1e <_parse_response+0x6a>
 800dcc2:	f893 b002 	ldrb.w	fp, [r3, #2]
 800dcc6:	f893 9003 	ldrb.w	r9, [r3, #3]
 800dcca:	f893 a004 	ldrb.w	sl, [r3, #4]
 800dcce:	795f      	ldrb	r7, [r3, #5]
 800dcd0:	4616      	mov	r6, r2
 800dcd2:	3306      	adds	r3, #6
 800dcd4:	e7a3      	b.n	800dc1e <_parse_response+0x6a>
 800dcd6:	789a      	ldrb	r2, [r3, #2]
 800dcd8:	78dc      	ldrb	r4, [r3, #3]
 800dcda:	9202      	str	r2, [sp, #8]
 800dcdc:	791a      	ldrb	r2, [r3, #4]
 800dcde:	f04f 0c01 	mov.w	ip, #1
 800dce2:	9203      	str	r2, [sp, #12]
 800dce4:	795a      	ldrb	r2, [r3, #5]
 800dce6:	9204      	str	r2, [sp, #16]
 800dce8:	785a      	ldrb	r2, [r3, #1]
 800dcea:	4413      	add	r3, r2
 800dcec:	3302      	adds	r3, #2
 800dcee:	e796      	b.n	800dc1e <_parse_response+0x6a>
 800dcf0:	789a      	ldrb	r2, [r3, #2]
 800dcf2:	f893 8005 	ldrb.w	r8, [r3, #5]
 800dcf6:	9205      	str	r2, [sp, #20]
 800dcf8:	78da      	ldrb	r2, [r3, #3]
 800dcfa:	2101      	movs	r1, #1
 800dcfc:	9206      	str	r2, [sp, #24]
 800dcfe:	791a      	ldrb	r2, [r3, #4]
 800dd00:	3306      	adds	r3, #6
 800dd02:	9207      	str	r2, [sp, #28]
 800dd04:	e78b      	b.n	800dc1e <_parse_response+0x6a>
 800dd06:	bf00      	nop
 800dd08:	2000a114 	andcs	sl, r0, r4, lsl r1
 800dd0c:	20009e6c 	andcs	r9, r0, ip, ror #28
 800dd10:	20009c3c 	andcs	r9, r0, ip, lsr ip
 800dd14:	20009c44 	andcs	r9, r0, r4, asr #24
 800dd18:	20009c40 	andcs	r9, r0, r0, asr #24

0800dd1c <memcpy.isra.0>:
 800dd1c:	3801      	subs	r0, #1
 800dd1e:	440a      	add	r2, r1
 800dd20:	4291      	cmp	r1, r2
 800dd22:	d100      	bne.n	800dd26 <memcpy.isra.0+0xa>
 800dd24:	4770      	bx	lr
 800dd26:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dd2a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dd2e:	e7f7      	b.n	800dd20 <memcpy.isra.0+0x4>

0800dd30 <dhcp_client>:
 800dd30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd34:	b087      	sub	sp, #28
 800dd36:	9203      	str	r2, [sp, #12]
 800dd38:	4a77      	ldr	r2, [pc, #476]	; (800df18 <dhcp_client+0x1e8>)
 800dd3a:	460f      	mov	r7, r1
 800dd3c:	4605      	mov	r5, r0
 800dd3e:	f44f 7309 	mov.w	r3, #548	; 0x224
 800dd42:	4614      	mov	r4, r2
 800dd44:	2100      	movs	r1, #0
 800dd46:	3b01      	subs	r3, #1
 800dd48:	f802 1b01 	strb.w	r1, [r2], #1
 800dd4c:	d1fb      	bne.n	800dd46 <dhcp_client+0x16>
 800dd4e:	f240 1301 	movw	r3, #257	; 0x101
 800dd52:	2206      	movs	r2, #6
 800dd54:	4629      	mov	r1, r5
 800dd56:	4871      	ldr	r0, [pc, #452]	; (800df1c <dhcp_client+0x1ec>)
 800dd58:	8023      	strh	r3, [r4, #0]
 800dd5a:	70a2      	strb	r2, [r4, #2]
 800dd5c:	f7ff ffde 	bl	800dd1c <memcpy.isra.0>
 800dd60:	4b6f      	ldr	r3, [pc, #444]	; (800df20 <dhcp_client+0x1f0>)
 800dd62:	2044      	movs	r0, #68	; 0x44
 800dd64:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dd68:	f240 1335 	movw	r3, #309	; 0x135
 800dd6c:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800dd70:	f7fe fd28 	bl	800c7c4 <udp_bind>
 800dd74:	1e06      	subs	r6, r0, #0
 800dd76:	f2c0 80c9 	blt.w	800df0c <dhcp_client+0x1dc>
 800dd7a:	f04f 0915 	mov.w	r9, #21
 800dd7e:	f8df a198 	ldr.w	sl, [pc, #408]	; 800df18 <dhcp_client+0x1e8>
 800dd82:	f1b9 0901 	subs.w	r9, r9, #1
 800dd86:	d11f      	bne.n	800ddc8 <dhcp_client+0x98>
 800dd88:	464c      	mov	r4, r9
 800dd8a:	2044      	movs	r0, #68	; 0x44
 800dd8c:	f7fe fd34 	bl	800c7f8 <udp_unbind>
 800dd90:	2c00      	cmp	r4, #0
 800dd92:	f000 80be 	beq.w	800df12 <dhcp_client+0x1e2>
 800dd96:	2204      	movs	r2, #4
 800dd98:	4962      	ldr	r1, [pc, #392]	; (800df24 <dhcp_client+0x1f4>)
 800dd9a:	a805      	add	r0, sp, #20
 800dd9c:	f7ff ffbe 	bl	800dd1c <memcpy.isra.0>
 800dda0:	9b05      	ldr	r3, [sp, #20]
 800dda2:	2204      	movs	r2, #4
 800dda4:	4960      	ldr	r1, [pc, #384]	; (800df28 <dhcp_client+0x1f8>)
 800dda6:	603b      	str	r3, [r7, #0]
 800dda8:	a805      	add	r0, sp, #20
 800ddaa:	f7ff ffb7 	bl	800dd1c <memcpy.isra.0>
 800ddae:	9b05      	ldr	r3, [sp, #20]
 800ddb0:	a805      	add	r0, sp, #20
 800ddb2:	60bb      	str	r3, [r7, #8]
 800ddb4:	2204      	movs	r2, #4
 800ddb6:	495d      	ldr	r1, [pc, #372]	; (800df2c <dhcp_client+0x1fc>)
 800ddb8:	f7ff ffb0 	bl	800dd1c <memcpy.isra.0>
 800ddbc:	2000      	movs	r0, #0
 800ddbe:	9b05      	ldr	r3, [sp, #20]
 800ddc0:	607b      	str	r3, [r7, #4]
 800ddc2:	b007      	add	sp, #28
 800ddc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ddc8:	f643 5301 	movw	r3, #15617	; 0x3d01
 800ddcc:	f240 1807 	movw	r8, #263	; 0x107
 800ddd0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800ddd4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800ddd8:	782b      	ldrb	r3, [r5, #0]
 800ddda:	4a55      	ldr	r2, [pc, #340]	; (800df30 <dhcp_client+0x200>)
 800dddc:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dde0:	786b      	ldrb	r3, [r5, #1]
 800dde2:	fa5f fb86 	uxtb.w	fp, r6
 800dde6:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800ddea:	78ab      	ldrb	r3, [r5, #2]
 800ddec:	4651      	mov	r1, sl
 800ddee:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800ddf2:	78eb      	ldrb	r3, [r5, #3]
 800ddf4:	4658      	mov	r0, fp
 800ddf6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800ddfa:	792b      	ldrb	r3, [r5, #4]
 800ddfc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800de00:	796b      	ldrb	r3, [r5, #5]
 800de02:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800de06:	4b4b      	ldr	r3, [pc, #300]	; (800df34 <dhcp_client+0x204>)
 800de08:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800de0c:	23ff      	movs	r3, #255	; 0xff
 800de0e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800de12:	2343      	movs	r3, #67	; 0x43
 800de14:	f240 1205 	movw	r2, #261	; 0x105
 800de18:	9300      	str	r3, [sp, #0]
 800de1a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800de1e:	f7fe fd67 	bl	800c8f0 <udp_send>
 800de22:	4629      	mov	r1, r5
 800de24:	4630      	mov	r0, r6
 800de26:	f7ff fec5 	bl	800dbb4 <_parse_response>
 800de2a:	2802      	cmp	r0, #2
 800de2c:	d1a9      	bne.n	800dd82 <dhcp_client+0x52>
 800de2e:	f643 5303 	movw	r3, #15619	; 0x3d03
 800de32:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800de36:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800de3a:	782b      	ldrb	r3, [r5, #0]
 800de3c:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800df38 <dhcp_client+0x208>
 800de40:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800de44:	786b      	ldrb	r3, [r5, #1]
 800de46:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800de4a:	78ab      	ldrb	r3, [r5, #2]
 800de4c:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800de50:	78eb      	ldrb	r3, [r5, #3]
 800de52:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800de56:	792b      	ldrb	r3, [r5, #4]
 800de58:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800de5c:	796b      	ldrb	r3, [r5, #5]
 800de5e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800de62:	f240 4332 	movw	r3, #1074	; 0x432
 800de66:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800de6a:	4b2e      	ldr	r3, [pc, #184]	; (800df24 <dhcp_client+0x1f4>)
 800de6c:	881a      	ldrh	r2, [r3, #0]
 800de6e:	885b      	ldrh	r3, [r3, #2]
 800de70:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800de74:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800de78:	f240 4336 	movw	r3, #1078	; 0x436
 800de7c:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800de80:	4b2e      	ldr	r3, [pc, #184]	; (800df3c <dhcp_client+0x20c>)
 800de82:	221e      	movs	r2, #30
 800de84:	681b      	ldr	r3, [r3, #0]
 800de86:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800de8a:	230c      	movs	r3, #12
 800de8c:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800de90:	9b03      	ldr	r3, [sp, #12]
 800de92:	1e58      	subs	r0, r3, #1
 800de94:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800de98:	f1a2 0e1e 	sub.w	lr, r2, #30
 800de9c:	1c51      	adds	r1, r2, #1
 800de9e:	bb8b      	cbnz	r3, 800df04 <dhcp_client+0x1d4>
 800dea0:	2037      	movs	r0, #55	; 0x37
 800dea2:	18a3      	adds	r3, r4, r2
 800dea4:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800dea8:	2006      	movs	r0, #6
 800deaa:	4421      	add	r1, r4
 800deac:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800deb0:	2103      	movs	r1, #3
 800deb2:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800deb6:	210f      	movs	r1, #15
 800deb8:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800debc:	213a      	movs	r1, #58	; 0x3a
 800debe:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800dec2:	213b      	movs	r1, #59	; 0x3b
 800dec4:	f04f 0801 	mov.w	r8, #1
 800dec8:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800decc:	21ff      	movs	r1, #255	; 0xff
 800dece:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800ded2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800ded6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800deda:	2343      	movs	r3, #67	; 0x43
 800dedc:	32f5      	adds	r2, #245	; 0xf5
 800dede:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800dee2:	4651      	mov	r1, sl
 800dee4:	9300      	str	r3, [sp, #0]
 800dee6:	b292      	uxth	r2, r2
 800dee8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800deec:	4658      	mov	r0, fp
 800deee:	f7fe fcff 	bl	800c8f0 <udp_send>
 800def2:	4629      	mov	r1, r5
 800def4:	4630      	mov	r0, r6
 800def6:	f7ff fe5d 	bl	800dbb4 <_parse_response>
 800defa:	2805      	cmp	r0, #5
 800defc:	f47f af41 	bne.w	800dd82 <dhcp_client+0x52>
 800df00:	4644      	mov	r4, r8
 800df02:	e742      	b.n	800dd8a <dhcp_client+0x5a>
 800df04:	460a      	mov	r2, r1
 800df06:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800df0a:	e7c3      	b.n	800de94 <dhcp_client+0x164>
 800df0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800df10:	e757      	b.n	800ddc2 <dhcp_client+0x92>
 800df12:	f06f 0001 	mvn.w	r0, #1
 800df16:	e754      	b.n	800ddc2 <dhcp_client+0x92>
 800df18:	20009c48 	andcs	r9, r0, r8, asr #24
 800df1c:	20009c64 	andcs	r9, r0, r4, ror #24
 800df20:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800df24:	20009c40 	andcs	r9, r0, r0, asr #24
 800df28:	20009c3c 	andcs	r9, r0, ip, lsr ip
 800df2c:	20009c44 	andcs	r9, r0, r4, asr #24
 800df30:	03010637 	movweq	r0, #5687	; 0x1637
 800df34:	3b3a0f06 	blcc	8e91b54 <__exidx_end+0xe7de34>
 800df38:	20009d51 	andcs	r9, r0, r1, asr sp
 800df3c:	20009e6c 	andcs	r9, r0, ip, ror #28

0800df40 <dhcp_client_release>:
 800df40:	b507      	push	{r0, r1, r2, lr}
 800df42:	2044      	movs	r0, #68	; 0x44
 800df44:	f7fe fc3e 	bl	800c7c4 <udp_bind>
 800df48:	f243 6307 	movw	r3, #13831	; 0x3607
 800df4c:	4911      	ldr	r1, [pc, #68]	; (800df94 <dhcp_client_release+0x54>)
 800df4e:	b2c0      	uxtb	r0, r0
 800df50:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800df54:	2304      	movs	r3, #4
 800df56:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800df5a:	4b0f      	ldr	r3, [pc, #60]	; (800df98 <dhcp_client_release+0x58>)
 800df5c:	781a      	ldrb	r2, [r3, #0]
 800df5e:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800df62:	785a      	ldrb	r2, [r3, #1]
 800df64:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800df68:	789a      	ldrb	r2, [r3, #2]
 800df6a:	78db      	ldrb	r3, [r3, #3]
 800df6c:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800df70:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800df74:	23ff      	movs	r3, #255	; 0xff
 800df76:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800df7a:	2343      	movs	r3, #67	; 0x43
 800df7c:	22fa      	movs	r2, #250	; 0xfa
 800df7e:	9300      	str	r3, [sp, #0]
 800df80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800df84:	f7fe fcb4 	bl	800c8f0 <udp_send>
 800df88:	2044      	movs	r0, #68	; 0x44
 800df8a:	b003      	add	sp, #12
 800df8c:	f85d eb04 	ldr.w	lr, [sp], #4
 800df90:	f7fe bc32 	b.w	800c7f8 <udp_unbind>
 800df94:	20009c48 	andcs	r9, r0, r8, asr #24
 800df98:	20009e6c 	andcs	r9, r0, ip, ror #28

0800df9c <memcpy.isra.0>:
 800df9c:	3801      	subs	r0, #1
 800df9e:	440a      	add	r2, r1
 800dfa0:	4291      	cmp	r1, r2
 800dfa2:	d100      	bne.n	800dfa6 <memcpy.isra.0+0xa>
 800dfa4:	4770      	bx	lr
 800dfa6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dfaa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dfae:	e7f7      	b.n	800dfa0 <memcpy.isra.0+0x4>

0800dfb0 <_send_report>:
 800dfb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dfb2:	491c      	ldr	r1, [pc, #112]	; (800e024 <_send_report+0x74>)
 800dfb4:	4c1c      	ldr	r4, [pc, #112]	; (800e028 <_send_report+0x78>)
 800dfb6:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800dfba:	9001      	str	r0, [sp, #4]
 800dfbc:	70cb      	strb	r3, [r1, #3]
 800dfbe:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800dfc2:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800dfc6:	710b      	strb	r3, [r1, #4]
 800dfc8:	7148      	strb	r0, [r1, #5]
 800dfca:	2206      	movs	r2, #6
 800dfcc:	4620      	mov	r0, r4
 800dfce:	f7ff ffe5 	bl	800df9c <memcpy.isra.0>
 800dfd2:	2204      	movs	r2, #4
 800dfd4:	2700      	movs	r7, #0
 800dfd6:	4d15      	ldr	r5, [pc, #84]	; (800e02c <_send_report+0x7c>)
 800dfd8:	eb0d 0102 	add.w	r1, sp, r2
 800dfdc:	882b      	ldrh	r3, [r5, #0]
 800dfde:	f104 001e 	add.w	r0, r4, #30
 800dfe2:	f104 060e 	add.w	r6, r4, #14
 800dfe6:	8263      	strh	r3, [r4, #18]
 800dfe8:	f7ff ffd8 	bl	800df9c <memcpy.isra.0>
 800dfec:	2118      	movs	r1, #24
 800dfee:	4630      	mov	r0, r6
 800dff0:	8327      	strh	r7, [r4, #24]
 800dff2:	f000 f8c6 	bl	800e182 <net_chksum>
 800dff6:	2204      	movs	r2, #4
 800dff8:	8320      	strh	r0, [r4, #24]
 800dffa:	eb0d 0102 	add.w	r1, sp, r2
 800dffe:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e002:	f7ff ffcb 	bl	800df9c <memcpy.isra.0>
 800e006:	2120      	movs	r1, #32
 800e008:	4630      	mov	r0, r6
 800e00a:	8527      	strh	r7, [r4, #40]	; 0x28
 800e00c:	f000 f8b9 	bl	800e182 <net_chksum>
 800e010:	212e      	movs	r1, #46	; 0x2e
 800e012:	8520      	strh	r0, [r4, #40]	; 0x28
 800e014:	4620      	mov	r0, r4
 800e016:	f002 fd1d 	bl	8010a54 <emac_eth_send>
 800e01a:	882b      	ldrh	r3, [r5, #0]
 800e01c:	3301      	adds	r3, #1
 800e01e:	802b      	strh	r3, [r5, #0]
 800e020:	b003      	add	sp, #12
 800e022:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e024:	20009fc8 	andcs	r9, r0, r8, asr #31
 800e028:	20009fd0 	ldrdcs	r9, [r0], -r0
 800e02c:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>

0800e030 <igmp_set_ip>:
 800e030:	b507      	push	{r0, r1, r2, lr}
 800e032:	2204      	movs	r2, #4
 800e034:	6803      	ldr	r3, [r0, #0]
 800e036:	eb0d 0102 	add.w	r1, sp, r2
 800e03a:	4806      	ldr	r0, [pc, #24]	; (800e054 <igmp_set_ip+0x24>)
 800e03c:	9301      	str	r3, [sp, #4]
 800e03e:	f7ff ffad 	bl	800df9c <memcpy.isra.0>
 800e042:	2204      	movs	r2, #4
 800e044:	4804      	ldr	r0, [pc, #16]	; (800e058 <igmp_set_ip+0x28>)
 800e046:	eb0d 0102 	add.w	r1, sp, r2
 800e04a:	f7ff ffa7 	bl	800df9c <memcpy.isra.0>
 800e04e:	b003      	add	sp, #12
 800e050:	f85d fb04 	ldr.w	pc, [sp], #4
 800e054:	20009fea 	andcs	r9, r0, sl, ror #31
 800e058:	20009fb2 			; <UNDEFINED> instruction: 0x20009fb2

0800e05c <igmp_timer>:
 800e05c:	b570      	push	{r4, r5, r6, lr}
 800e05e:	2500      	movs	r5, #0
 800e060:	2602      	movs	r6, #2
 800e062:	4c0a      	ldr	r4, [pc, #40]	; (800e08c <igmp_timer+0x30>)
 800e064:	7963      	ldrb	r3, [r4, #5]
 800e066:	2b01      	cmp	r3, #1
 800e068:	d109      	bne.n	800e07e <igmp_timer+0x22>
 800e06a:	7923      	ldrb	r3, [r4, #4]
 800e06c:	b13b      	cbz	r3, 800e07e <igmp_timer+0x22>
 800e06e:	3b01      	subs	r3, #1
 800e070:	b2db      	uxtb	r3, r3
 800e072:	7123      	strb	r3, [r4, #4]
 800e074:	b91b      	cbnz	r3, 800e07e <igmp_timer+0x22>
 800e076:	6820      	ldr	r0, [r4, #0]
 800e078:	f7ff ff9a 	bl	800dfb0 <_send_report>
 800e07c:	7166      	strb	r6, [r4, #5]
 800e07e:	3501      	adds	r5, #1
 800e080:	2d24      	cmp	r5, #36	; 0x24
 800e082:	f104 0408 	add.w	r4, r4, #8
 800e086:	d1ed      	bne.n	800e064 <igmp_timer+0x8>
 800e088:	bd70      	pop	{r4, r5, r6, pc}
 800e08a:	bf00      	nop
 800e08c:	20009e70 	andcs	r9, r0, r0, ror lr

0800e090 <igmp_join>:
 800e090:	b538      	push	{r3, r4, r5, lr}
 800e092:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800e096:	2be0      	cmp	r3, #224	; 0xe0
 800e098:	d11b      	bne.n	800e0d2 <igmp_join+0x42>
 800e09a:	4911      	ldr	r1, [pc, #68]	; (800e0e0 <igmp_join+0x50>)
 800e09c:	680c      	ldr	r4, [r1, #0]
 800e09e:	2c24      	cmp	r4, #36	; 0x24
 800e0a0:	d01a      	beq.n	800e0d8 <igmp_join+0x48>
 800e0a2:	2300      	movs	r3, #0
 800e0a4:	4a0f      	ldr	r2, [pc, #60]	; (800e0e4 <igmp_join+0x54>)
 800e0a6:	429c      	cmp	r4, r3
 800e0a8:	dc0d      	bgt.n	800e0c6 <igmp_join+0x36>
 800e0aa:	f44f 7381 	mov.w	r3, #258	; 0x102
 800e0ae:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800e0b2:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800e0b6:	8093      	strh	r3, [r2, #4]
 800e0b8:	1c63      	adds	r3, r4, #1
 800e0ba:	600b      	str	r3, [r1, #0]
 800e0bc:	f7ff ff78 	bl	800dfb0 <_send_report>
 800e0c0:	4623      	mov	r3, r4
 800e0c2:	4618      	mov	r0, r3
 800e0c4:	bd38      	pop	{r3, r4, r5, pc}
 800e0c6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e0ca:	4285      	cmp	r5, r0
 800e0cc:	d0f9      	beq.n	800e0c2 <igmp_join+0x32>
 800e0ce:	3301      	adds	r3, #1
 800e0d0:	e7e9      	b.n	800e0a6 <igmp_join+0x16>
 800e0d2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e0d6:	e7f4      	b.n	800e0c2 <igmp_join+0x32>
 800e0d8:	f06f 0301 	mvn.w	r3, #1
 800e0dc:	e7f1      	b.n	800e0c2 <igmp_join+0x32>
 800e0de:	bf00      	nop
 800e0e0:	20009f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800e0e4:	20009e70 	andcs	r9, r0, r0, ror lr

0800e0e8 <igmp_leave>:
 800e0e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e0ec:	2600      	movs	r6, #0
 800e0ee:	4f1c      	ldr	r7, [pc, #112]	; (800e160 <igmp_leave+0x78>)
 800e0f0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800e0f4:	4283      	cmp	r3, r0
 800e0f6:	d007      	beq.n	800e108 <igmp_leave+0x20>
 800e0f8:	3601      	adds	r6, #1
 800e0fa:	2e24      	cmp	r6, #36	; 0x24
 800e0fc:	d1f8      	bne.n	800e0f0 <igmp_leave+0x8>
 800e0fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e102:	b002      	add	sp, #8
 800e104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e108:	2400      	movs	r4, #0
 800e10a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800e164 <igmp_leave+0x7c>
 800e10e:	4d16      	ldr	r5, [pc, #88]	; (800e168 <igmp_leave+0x80>)
 800e110:	f8b8 3000 	ldrh.w	r3, [r8]
 800e114:	2118      	movs	r1, #24
 800e116:	9001      	str	r0, [sp, #4]
 800e118:	4814      	ldr	r0, [pc, #80]	; (800e16c <igmp_leave+0x84>)
 800e11a:	826b      	strh	r3, [r5, #18]
 800e11c:	832c      	strh	r4, [r5, #24]
 800e11e:	f000 f830 	bl	800e182 <net_chksum>
 800e122:	2204      	movs	r2, #4
 800e124:	8328      	strh	r0, [r5, #24]
 800e126:	eb0d 0102 	add.w	r1, sp, r2
 800e12a:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800e12e:	f7ff ff35 	bl	800df9c <memcpy.isra.0>
 800e132:	2120      	movs	r1, #32
 800e134:	f105 000e 	add.w	r0, r5, #14
 800e138:	852c      	strh	r4, [r5, #40]	; 0x28
 800e13a:	f000 f822 	bl	800e182 <net_chksum>
 800e13e:	212e      	movs	r1, #46	; 0x2e
 800e140:	8528      	strh	r0, [r5, #40]	; 0x28
 800e142:	4628      	mov	r0, r5
 800e144:	f002 fc86 	bl	8010a54 <emac_eth_send>
 800e148:	f8b8 3000 	ldrh.w	r3, [r8]
 800e14c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800e150:	3301      	adds	r3, #1
 800e152:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800e156:	4620      	mov	r0, r4
 800e158:	f8a8 3000 	strh.w	r3, [r8]
 800e15c:	80bc      	strh	r4, [r7, #4]
 800e15e:	e7d0      	b.n	800e102 <igmp_leave+0x1a>
 800e160:	20009e70 	andcs	r9, r0, r0, ror lr
 800e164:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
 800e168:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
 800e16c:	20009fde 	ldrdcs	r9, [r0], -lr

0800e170 <ip_set_ip>:
 800e170:	b510      	push	{r4, lr}
 800e172:	4604      	mov	r4, r0
 800e174:	f7fe fb06 	bl	800c784 <udp_set_ip>
 800e178:	4620      	mov	r0, r4
 800e17a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e17e:	f7ff bf57 	b.w	800e030 <igmp_set_ip>

0800e182 <net_chksum>:
 800e182:	2300      	movs	r3, #0
 800e184:	f021 0201 	bic.w	r2, r1, #1
 800e188:	b530      	push	{r4, r5, lr}
 800e18a:	1884      	adds	r4, r0, r2
 800e18c:	42a0      	cmp	r0, r4
 800e18e:	d10b      	bne.n	800e1a8 <net_chksum+0x26>
 800e190:	4291      	cmp	r1, r2
 800e192:	d004      	beq.n	800e19e <net_chksum+0x1c>
 800e194:	7802      	ldrb	r2, [r0, #0]
 800e196:	0212      	lsls	r2, r2, #8
 800e198:	ba52      	rev16	r2, r2
 800e19a:	b292      	uxth	r2, r2
 800e19c:	4413      	add	r3, r2
 800e19e:	0c1a      	lsrs	r2, r3, #16
 800e1a0:	d106      	bne.n	800e1b0 <net_chksum+0x2e>
 800e1a2:	43d8      	mvns	r0, r3
 800e1a4:	b280      	uxth	r0, r0
 800e1a6:	bd30      	pop	{r4, r5, pc}
 800e1a8:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e1ac:	442b      	add	r3, r5
 800e1ae:	e7ed      	b.n	800e18c <net_chksum+0xa>
 800e1b0:	b29b      	uxth	r3, r3
 800e1b2:	e7f3      	b.n	800e19c <net_chksum+0x1a>

0800e1b4 <memcpy.isra.0>:
 800e1b4:	3801      	subs	r0, #1
 800e1b6:	440a      	add	r2, r1
 800e1b8:	4291      	cmp	r1, r2
 800e1ba:	d100      	bne.n	800e1be <memcpy.isra.0+0xa>
 800e1bc:	4770      	bx	lr
 800e1be:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e1c2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e1c6:	e7f7      	b.n	800e1b8 <memcpy.isra.0+0x4>

0800e1c8 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800e1c8:	b430      	push	{r4, r5}
 800e1ca:	b168      	cbz	r0, 800e1e8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800e1cc:	2300      	movs	r3, #0
 800e1ce:	7905      	ldrb	r5, [r0, #4]
 800e1d0:	5cd4      	ldrb	r4, [r2, r3]
 800e1d2:	b11c      	cbz	r4, 800e1dc <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800e1d4:	1c5c      	adds	r4, r3, #1
 800e1d6:	429d      	cmp	r5, r3
 800e1d8:	4623      	mov	r3, r4
 800e1da:	dcf9      	bgt.n	800e1d0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800e1dc:	6804      	ldr	r4, [r0, #0]
 800e1de:	b2db      	uxtb	r3, r3
 800e1e0:	69e4      	ldr	r4, [r4, #28]
 800e1e2:	46a4      	mov	ip, r4
 800e1e4:	bc30      	pop	{r4, r5}
 800e1e6:	4760      	bx	ip
 800e1e8:	bc30      	pop	{r4, r5}
 800e1ea:	4770      	bx	lr

0800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800e1ec:	b110      	cbz	r0, 800e1f4 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800e1ee:	6803      	ldr	r3, [r0, #0]
 800e1f0:	691b      	ldr	r3, [r3, #16]
 800e1f2:	4718      	bx	r3
 800e1f4:	4770      	bx	lr

0800e1f6 <Display::Printf(unsigned char, char const*, ...)>:
 800e1f6:	b40c      	push	{r2, r3}
 800e1f8:	b570      	push	{r4, r5, r6, lr}
 800e1fa:	6984      	ldr	r4, [r0, #24]
 800e1fc:	4605      	mov	r5, r0
 800e1fe:	460e      	mov	r6, r1
 800e200:	b08a      	sub	sp, #40	; 0x28
 800e202:	b174      	cbz	r4, 800e222 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800e204:	ab0f      	add	r3, sp, #60	; 0x3c
 800e206:	2120      	movs	r1, #32
 800e208:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e20a:	a802      	add	r0, sp, #8
 800e20c:	9301      	str	r3, [sp, #4]
 800e20e:	f001 fd4b 	bl	800fca8 <vsnprintf>
 800e212:	4604      	mov	r4, r0
 800e214:	69a8      	ldr	r0, [r5, #24]
 800e216:	4631      	mov	r1, r6
 800e218:	6803      	ldr	r3, [r0, #0]
 800e21a:	aa02      	add	r2, sp, #8
 800e21c:	69dd      	ldr	r5, [r3, #28]
 800e21e:	b2a3      	uxth	r3, r4
 800e220:	47a8      	blx	r5
 800e222:	4620      	mov	r0, r4
 800e224:	b00a      	add	sp, #40	; 0x28
 800e226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e22a:	b002      	add	sp, #8
 800e22c:	4770      	bx	lr
	...

0800e230 <DisplayUdf::DisplayUdf()>:
 800e230:	b510      	push	{r4, lr}
 800e232:	4604      	mov	r4, r0
 800e234:	f000 fe4e 	bl	800eed4 <Display::Display()>
 800e238:	2202      	movs	r2, #2
 800e23a:	2300      	movs	r3, #0
 800e23c:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800e240:	4b05      	ldr	r3, [pc, #20]	; (800e258 <DisplayUdf::DisplayUdf()+0x28>)
 800e242:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 800e246:	601c      	str	r4, [r3, #0]
 800e248:	2301      	movs	r3, #1
 800e24a:	f802 3f01 	strb.w	r3, [r2, #1]!
 800e24e:	3301      	adds	r3, #1
 800e250:	2b15      	cmp	r3, #21
 800e252:	d1fa      	bne.n	800e24a <DisplayUdf::DisplayUdf()+0x1a>
 800e254:	4620      	mov	r0, r4
 800e256:	bd10      	pop	{r4, pc}
 800e258:	2000a000 	andcs	sl, r0, r0

0800e25c <DisplayUdf::SetTitle(char const*, ...)>:
 800e25c:	b40e      	push	{r1, r2, r3}
 800e25e:	b517      	push	{r0, r1, r2, r4, lr}
 800e260:	ab05      	add	r3, sp, #20
 800e262:	f853 2b04 	ldr.w	r2, [r3], #4
 800e266:	4604      	mov	r4, r0
 800e268:	211f      	movs	r1, #31
 800e26a:	301c      	adds	r0, #28
 800e26c:	9301      	str	r3, [sp, #4]
 800e26e:	f001 fd1b 	bl	800fca8 <vsnprintf>
 800e272:	2300      	movs	r3, #0
 800e274:	4404      	add	r4, r0
 800e276:	7723      	strb	r3, [r4, #28]
 800e278:	b003      	add	sp, #12
 800e27a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e27e:	b003      	add	sp, #12
 800e280:	4770      	bx	lr

0800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800e282:	1e4b      	subs	r3, r1, #1
 800e284:	2b05      	cmp	r3, #5
 800e286:	b530      	push	{r4, r5, lr}
 800e288:	d80f      	bhi.n	800e2aa <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800e28a:	2300      	movs	r3, #0
 800e28c:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 800e290:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800e294:	428d      	cmp	r5, r1
 800e296:	d109      	bne.n	800e2ac <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800e298:	1884      	adds	r4, r0, r2
 800e29a:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800e29e:	4403      	add	r3, r0
 800e2a0:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800e2a4:	4410      	add	r0, r2
 800e2a6:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800e2aa:	bd30      	pop	{r4, r5, pc}
 800e2ac:	3301      	adds	r3, #1
 800e2ae:	2b14      	cmp	r3, #20
 800e2b0:	d1ee      	bne.n	800e290 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800e2b2:	e7f7      	b.n	800e2a4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

0800e2b4 <DisplayUdf::ShowEmacStart()>:
 800e2b4:	b510      	push	{r4, lr}
 800e2b6:	4604      	mov	r4, r0
 800e2b8:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e2bc:	6980      	ldr	r0, [r0, #24]
 800e2be:	f7ff ff95 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e2c2:	4620      	mov	r0, r4
 800e2c4:	4a02      	ldr	r2, [pc, #8]	; (800e2d0 <DisplayUdf::ShowEmacStart()+0x1c>)
 800e2c6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e2ca:	f7ff ff94 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e2ce:	bd10      	pop	{r4, pc}
 800e2d0:	08013651 	stmdaeq	r1, {r0, r4, r6, r9, sl, ip, sp}

0800e2d4 <DisplayUdf::ShowIpAddress()>:
 800e2d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e2d8:	4604      	mov	r4, r0
 800e2da:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e2de:	b086      	sub	sp, #24
 800e2e0:	6980      	ldr	r0, [r0, #24]
 800e2e2:	f7ff ff83 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e2e6:	4b13      	ldr	r3, [pc, #76]	; (800e334 <DisplayUdf::ShowIpAddress()+0x60>)
 800e2e8:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800e2ec:	681d      	ldr	r5, [r3, #0]
 800e2ee:	69e8      	ldr	r0, [r5, #28]
 800e2f0:	696e      	ldr	r6, [r5, #20]
 800e2f2:	f003 fc79 	bl	8011be8 <__popcountsi2>
 800e2f6:	79eb      	ldrb	r3, [r5, #7]
 800e2f8:	fa5f f886 	uxtb.w	r8, r6
 800e2fc:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800e300:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800e304:	0e36      	lsrs	r6, r6, #24
 800e306:	b99b      	cbnz	r3, 800e330 <DisplayUdf::ShowIpAddress()+0x5c>
 800e308:	796b      	ldrb	r3, [r5, #5]
 800e30a:	2b00      	cmp	r3, #0
 800e30c:	bf14      	ite	ne
 800e30e:	2244      	movne	r2, #68	; 0x44
 800e310:	2253      	moveq	r2, #83	; 0x53
 800e312:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800e316:	4643      	mov	r3, r8
 800e318:	4639      	mov	r1, r7
 800e31a:	4620      	mov	r0, r4
 800e31c:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e320:	4a05      	ldr	r2, [pc, #20]	; (800e338 <DisplayUdf::ShowIpAddress()+0x64>)
 800e322:	f8cd 9000 	str.w	r9, [sp]
 800e326:	f7ff ff66 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e32a:	b006      	add	sp, #24
 800e32c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e330:	225a      	movs	r2, #90	; 0x5a
 800e332:	e7ee      	b.n	800e312 <DisplayUdf::ShowIpAddress()+0x3e>
 800e334:	20009a30 	andcs	r9, r0, r0, lsr sl
 800e338:	08013660 	stmdaeq	r1, {r5, r6, r9, sl, ip, sp}

0800e33c <DisplayUdf::ShowNetmask()>:
 800e33c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e33e:	4604      	mov	r4, r0
 800e340:	4b0b      	ldr	r3, [pc, #44]	; (800e370 <DisplayUdf::ShowNetmask()+0x34>)
 800e342:	681b      	ldr	r3, [r3, #0]
 800e344:	69db      	ldr	r3, [r3, #28]
 800e346:	0e1a      	lsrs	r2, r3, #24
 800e348:	9202      	str	r2, [sp, #8]
 800e34a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e34e:	9201      	str	r2, [sp, #4]
 800e350:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e354:	9200      	str	r2, [sp, #0]
 800e356:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800e35a:	4a06      	ldr	r2, [pc, #24]	; (800e374 <DisplayUdf::ShowNetmask()+0x38>)
 800e35c:	b2db      	uxtb	r3, r3
 800e35e:	f7ff ff4a 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e362:	4620      	mov	r0, r4
 800e364:	b004      	add	sp, #16
 800e366:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e36a:	f7ff bfb3 	b.w	800e2d4 <DisplayUdf::ShowIpAddress()>
 800e36e:	bf00      	nop
 800e370:	20009a30 	andcs	r9, r0, r0, lsr sl
 800e374:	08013672 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, ip, sp}

0800e378 <DisplayUdf::ShowGatewayIp()>:
 800e378:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e37a:	4604      	mov	r4, r0
 800e37c:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800e380:	6980      	ldr	r0, [r0, #24]
 800e382:	f7ff ff33 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e386:	4b0a      	ldr	r3, [pc, #40]	; (800e3b0 <DisplayUdf::ShowGatewayIp()+0x38>)
 800e388:	4620      	mov	r0, r4
 800e38a:	681b      	ldr	r3, [r3, #0]
 800e38c:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800e390:	699b      	ldr	r3, [r3, #24]
 800e392:	0e1a      	lsrs	r2, r3, #24
 800e394:	9202      	str	r2, [sp, #8]
 800e396:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e39a:	9201      	str	r2, [sp, #4]
 800e39c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e3a0:	9200      	str	r2, [sp, #0]
 800e3a2:	b2db      	uxtb	r3, r3
 800e3a4:	4a03      	ldr	r2, [pc, #12]	; (800e3b4 <DisplayUdf::ShowGatewayIp()+0x3c>)
 800e3a6:	f7ff ff26 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e3aa:	b004      	add	sp, #16
 800e3ac:	bd10      	pop	{r4, pc}
 800e3ae:	bf00      	nop
 800e3b0:	20009a30 	andcs	r9, r0, r0, lsr sl
 800e3b4:	08013681 	stmdaeq	r1, {r0, r7, r9, sl, ip, sp}

0800e3b8 <DisplayUdf::ShowHostName()>:
 800e3b8:	b510      	push	{r4, lr}
 800e3ba:	4604      	mov	r4, r0
 800e3bc:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800e3c0:	6980      	ldr	r0, [r0, #24]
 800e3c2:	f7ff ff13 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e3c6:	4b05      	ldr	r3, [pc, #20]	; (800e3dc <DisplayUdf::ShowHostName()+0x24>)
 800e3c8:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800e3cc:	681a      	ldr	r2, [r3, #0]
 800e3ce:	69a0      	ldr	r0, [r4, #24]
 800e3d0:	3220      	adds	r2, #32
 800e3d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3d6:	f7ff bef7 	b.w	800e1c8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e3da:	bf00      	nop
 800e3dc:	20009a30 	andcs	r9, r0, r0, lsr sl

0800e3e0 <DisplayUdf::Show()>:
 800e3e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e3e2:	4604      	mov	r4, r0
 800e3e4:	21ff      	movs	r1, #255	; 0xff
 800e3e6:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 800e3ea:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 800e3ee:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e3f2:	2806      	cmp	r0, #6
 800e3f4:	bf88      	it	hi
 800e3f6:	7019      	strbhi	r1, [r3, #0]
 800e3f8:	429a      	cmp	r2, r3
 800e3fa:	d1f8      	bne.n	800e3ee <DisplayUdf::Show()+0xe>
 800e3fc:	2501      	movs	r5, #1
 800e3fe:	4629      	mov	r1, r5
 800e400:	3501      	adds	r5, #1
 800e402:	69a0      	ldr	r0, [r4, #24]
 800e404:	b2ed      	uxtb	r5, r5
 800e406:	f7ff fef1 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e40a:	2d06      	cmp	r5, #6
 800e40c:	d1f7      	bne.n	800e3fe <DisplayUdf::Show()+0x1e>
 800e40e:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800e412:	69a0      	ldr	r0, [r4, #24]
 800e414:	f104 021c 	add.w	r2, r4, #28
 800e418:	f7ff fed6 	bl	800e1c8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e41c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800e420:	69a0      	ldr	r0, [r4, #24]
 800e422:	4a0d      	ldr	r2, [pc, #52]	; (800e458 <DisplayUdf::Show()+0x78>)
 800e424:	f7ff fed0 	bl	800e1c8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e428:	4b0c      	ldr	r3, [pc, #48]	; (800e45c <DisplayUdf::Show()+0x7c>)
 800e42a:	4a0d      	ldr	r2, [pc, #52]	; (800e460 <DisplayUdf::Show()+0x80>)
 800e42c:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800e430:	9300      	str	r3, [sp, #0]
 800e432:	4620      	mov	r0, r4
 800e434:	2303      	movs	r3, #3
 800e436:	f7ff fede 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e43a:	4620      	mov	r0, r4
 800e43c:	f7ff ff4a 	bl	800e2d4 <DisplayUdf::ShowIpAddress()>
 800e440:	4620      	mov	r0, r4
 800e442:	f7ff ff99 	bl	800e378 <DisplayUdf::ShowGatewayIp()>
 800e446:	4620      	mov	r0, r4
 800e448:	f7ff ff78 	bl	800e33c <DisplayUdf::ShowNetmask()>
 800e44c:	4620      	mov	r0, r4
 800e44e:	b003      	add	sp, #12
 800e450:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e454:	f7ff bfb0 	b.w	800e3b8 <DisplayUdf::ShowHostName()>
 800e458:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 800e45c:	2000a098 	mulcs	r0, r8, r0
 800e460:	08013690 	stmdaeq	r1, {r4, r7, r9, sl, ip, sp}

0800e464 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e464:	3901      	subs	r1, #1
 800e466:	b510      	push	{r4, lr}
 800e468:	4604      	mov	r4, r0
 800e46a:	2903      	cmp	r1, #3
 800e46c:	d814      	bhi.n	800e498 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e46e:	e8df f001 	tbb	[pc, r1]
 800e472:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800e476:	4b14      	ldr	r3, [pc, #80]	; (800e4c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e478:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e47c:	6818      	ldr	r0, [r3, #0]
 800e47e:	f7fa f811 	bl	80084a4 <Display::Status(Display7SegmentMessage)>
 800e482:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e486:	69a0      	ldr	r0, [r4, #24]
 800e488:	f7ff feb0 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e48c:	4a0f      	ldr	r2, [pc, #60]	; (800e4cc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800e48e:	4620      	mov	r0, r4
 800e490:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e494:	f7ff feaf 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e498:	bd10      	pop	{r4, pc}
 800e49a:	f248 0180 	movw	r1, #32896	; 0x8080
 800e49e:	4b0a      	ldr	r3, [pc, #40]	; (800e4c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e4a0:	6818      	ldr	r0, [r3, #0]
 800e4a2:	f7f9 ffff 	bl	80084a4 <Display::Status(Display7SegmentMessage)>
 800e4a6:	e7f7      	b.n	800e498 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e4a8:	4b07      	ldr	r3, [pc, #28]	; (800e4c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e4aa:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e4ae:	6818      	ldr	r0, [r3, #0]
 800e4b0:	f7f9 fff8 	bl	80084a4 <Display::Status(Display7SegmentMessage)>
 800e4b4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e4b8:	69a0      	ldr	r0, [r4, #24]
 800e4ba:	f7ff fe97 	bl	800e1ec <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e4be:	4a04      	ldr	r2, [pc, #16]	; (800e4d0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800e4c0:	e7e5      	b.n	800e48e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800e4c2:	f645 3179 	movw	r1, #23417	; 0x5b79
 800e4c6:	e7ea      	b.n	800e49e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800e4c8:	2000a008 	andcs	sl, r0, r8
 800e4cc:	0801369f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip, sp}
 800e4d0:	080136ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, ip, sp}

0800e4d4 <DisplayUdf::ShowShutdown()>:
 800e4d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4d8:	4604      	mov	r4, r0
 800e4da:	6980      	ldr	r0, [r0, #24]
 800e4dc:	b1d0      	cbz	r0, 800e514 <DisplayUdf::ShowShutdown()+0x40>
 800e4de:	f890 8005 	ldrb.w	r8, [r0, #5]
 800e4e2:	6803      	ldr	r3, [r0, #0]
 800e4e4:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800e4e8:	b2ed      	uxtb	r5, r5
 800e4ea:	462a      	mov	r2, r5
 800e4ec:	2100      	movs	r1, #0
 800e4ee:	6a1b      	ldr	r3, [r3, #32]
 800e4f0:	7906      	ldrb	r6, [r0, #4]
 800e4f2:	2700      	movs	r7, #0
 800e4f4:	4798      	blx	r3
 800e4f6:	3e01      	subs	r6, #1
 800e4f8:	42b7      	cmp	r7, r6
 800e4fa:	69a0      	ldr	r0, [r4, #24]
 800e4fc:	d311      	bcc.n	800e522 <DisplayUdf::ShowShutdown()+0x4e>
 800e4fe:	b120      	cbz	r0, 800e50a <DisplayUdf::ShowShutdown()+0x36>
 800e500:	6803      	ldr	r3, [r0, #0]
 800e502:	462a      	mov	r2, r5
 800e504:	2100      	movs	r1, #0
 800e506:	6a1b      	ldr	r3, [r3, #32]
 800e508:	4798      	blx	r3
 800e50a:	4641      	mov	r1, r8
 800e50c:	4a08      	ldr	r2, [pc, #32]	; (800e530 <DisplayUdf::ShowShutdown()+0x5c>)
 800e50e:	69a0      	ldr	r0, [r4, #24]
 800e510:	f7ff fe5a 	bl	800e1c8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e514:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800e518:	4620      	mov	r0, r4
 800e51a:	f7f9 ffc3 	bl	80084a4 <Display::Status(Display7SegmentMessage)>
 800e51e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e522:	b118      	cbz	r0, 800e52c <DisplayUdf::ShowShutdown()+0x58>
 800e524:	6803      	ldr	r3, [r0, #0]
 800e526:	2120      	movs	r1, #32
 800e528:	695b      	ldr	r3, [r3, #20]
 800e52a:	4798      	blx	r3
 800e52c:	3701      	adds	r7, #1
 800e52e:	e7e3      	b.n	800e4f8 <DisplayUdf::ShowShutdown()+0x24>
 800e530:	080136bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, ip, sp}

0800e534 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e534:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e536:	88c6      	ldrh	r6, [r0, #6]
 800e538:	8885      	ldrh	r5, [r0, #4]
 800e53a:	42ae      	cmp	r6, r5
 800e53c:	d216      	bcs.n	800e56c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e53e:	4604      	mov	r4, r0
 800e540:	6800      	ldr	r0, [r0, #0]
 800e542:	1bad      	subs	r5, r5, r6
 800e544:	4430      	add	r0, r6
 800e546:	7a26      	ldrb	r6, [r4, #8]
 800e548:	b923      	cbnz	r3, 800e554 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e54a:	b926      	cbnz	r6, 800e556 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e54c:	9200      	str	r2, [sp, #0]
 800e54e:	460b      	mov	r3, r1
 800e550:	4a09      	ldr	r2, [pc, #36]	; (800e578 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e552:	e003      	b.n	800e55c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e554:	b166      	cbz	r6, 800e570 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e556:	460b      	mov	r3, r1
 800e558:	9200      	str	r2, [sp, #0]
 800e55a:	4a08      	ldr	r2, [pc, #32]	; (800e57c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e55c:	4629      	mov	r1, r5
 800e55e:	f001 fb8b 	bl	800fc78 <snprintf>
 800e562:	4285      	cmp	r5, r0
 800e564:	bfa2      	ittt	ge
 800e566:	88e3      	ldrhge	r3, [r4, #6]
 800e568:	181b      	addge	r3, r3, r0
 800e56a:	80e3      	strhge	r3, [r4, #6]
 800e56c:	b002      	add	sp, #8
 800e56e:	bd70      	pop	{r4, r5, r6, pc}
 800e570:	9200      	str	r2, [sp, #0]
 800e572:	460b      	mov	r3, r1
 800e574:	4a02      	ldr	r2, [pc, #8]	; (800e580 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e576:	e7f1      	b.n	800e55c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e578:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800e57c:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800e580:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}

0800e584 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800e584:	b510      	push	{r4, lr}
 800e586:	2220      	movs	r2, #32
 800e588:	4604      	mov	r4, r0
 800e58a:	f840 1b04 	str.w	r1, [r0], #4
 800e58e:	2100      	movs	r1, #0
 800e590:	f001 f930 	bl	800f7f4 <memset>
 800e594:	f647 7305 	movw	r3, #32517	; 0x7f05
 800e598:	4620      	mov	r0, r4
 800e59a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e59c:	bd10      	pop	{r4, pc}

0800e59e <DisplayUdfParams::Load()>:
 800e59e:	b508      	push	{r3, lr}
 800e5a0:	2300      	movs	r3, #0
 800e5a2:	4601      	mov	r1, r0
 800e5a4:	6043      	str	r3, [r0, #4]
 800e5a6:	6800      	ldr	r0, [r0, #0]
 800e5a8:	b120      	cbz	r0, 800e5b4 <DisplayUdfParams::Load()+0x16>
 800e5aa:	6803      	ldr	r3, [r0, #0]
 800e5ac:	3104      	adds	r1, #4
 800e5ae:	68db      	ldr	r3, [r3, #12]
 800e5b0:	4798      	blx	r3
 800e5b2:	2001      	movs	r0, #1
 800e5b4:	bd08      	pop	{r3, pc}
	...

0800e5b8 <DisplayUdfParams::Load(char const*, unsigned int)>:
 800e5b8:	6803      	ldr	r3, [r0, #0]
 800e5ba:	b1d3      	cbz	r3, 800e5f2 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800e5bc:	2300      	movs	r3, #0
 800e5be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e5c0:	460d      	mov	r5, r1
 800e5c2:	4616      	mov	r6, r2
 800e5c4:	4604      	mov	r4, r0
 800e5c6:	6043      	str	r3, [r0, #4]
 800e5c8:	4602      	mov	r2, r0
 800e5ca:	490a      	ldr	r1, [pc, #40]	; (800e5f4 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800e5cc:	4668      	mov	r0, sp
 800e5ce:	f000 fb11 	bl	800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e5d2:	4632      	mov	r2, r6
 800e5d4:	4629      	mov	r1, r5
 800e5d6:	4668      	mov	r0, sp
 800e5d8:	f000 fb10 	bl	800ebfc <ReadConfigFile::Read(char const*, unsigned int)>
 800e5dc:	4621      	mov	r1, r4
 800e5de:	f851 0b04 	ldr.w	r0, [r1], #4
 800e5e2:	6803      	ldr	r3, [r0, #0]
 800e5e4:	689b      	ldr	r3, [r3, #8]
 800e5e6:	4798      	blx	r3
 800e5e8:	4668      	mov	r0, sp
 800e5ea:	f000 fb06 	bl	800ebfa <ReadConfigFile::~ReadConfigFile()>
 800e5ee:	b002      	add	sp, #8
 800e5f0:	bd70      	pop	{r4, r5, r6, pc}
 800e5f2:	4770      	bx	lr
 800e5f4:	0800e6c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, sp, lr, pc}

0800e5f8 <DisplayUdfParams::callbackFunction(char const*)>:
 800e5f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e5fa:	460e      	mov	r6, r1
 800e5fc:	4604      	mov	r4, r0
 800e5fe:	492c      	ldr	r1, [pc, #176]	; (800e6b0 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800e600:	4630      	mov	r0, r6
 800e602:	f10d 0207 	add.w	r2, sp, #7
 800e606:	f000 fba5 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e60a:	b968      	cbnz	r0, 800e628 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800e60c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e610:	6863      	ldr	r3, [r4, #4]
 800e612:	2a7f      	cmp	r2, #127	; 0x7f
 800e614:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800e618:	bf14      	ite	ne
 800e61a:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800e61e:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800e622:	6063      	str	r3, [r4, #4]
 800e624:	b003      	add	sp, #12
 800e626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e628:	4630      	mov	r0, r6
 800e62a:	4922      	ldr	r1, [pc, #136]	; (800e6b4 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800e62c:	f10d 0207 	add.w	r2, sp, #7
 800e630:	f000 fb90 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e634:	b958      	cbnz	r0, 800e64e <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800e636:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e63a:	6863      	ldr	r3, [r4, #4]
 800e63c:	2a05      	cmp	r2, #5
 800e63e:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800e642:	bf14      	ite	ne
 800e644:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800e648:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800e64c:	e7e9      	b.n	800e622 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e64e:	4630      	mov	r0, r6
 800e650:	4919      	ldr	r1, [pc, #100]	; (800e6b8 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800e652:	f10d 0207 	add.w	r2, sp, #7
 800e656:	f000 fb7d 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e65a:	b948      	cbnz	r0, 800e670 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800e65c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e660:	6863      	ldr	r3, [r4, #4]
 800e662:	b112      	cbz	r2, 800e66a <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800e664:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e668:	e7db      	b.n	800e622 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e66a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800e66e:	e7d8      	b.n	800e622 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e670:	2500      	movs	r5, #0
 800e672:	4f12      	ldr	r7, [pc, #72]	; (800e6bc <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 800e674:	4630      	mov	r0, r6
 800e676:	f857 1b04 	ldr.w	r1, [r7], #4
 800e67a:	f10d 0207 	add.w	r2, sp, #7
 800e67e:	f000 fb69 	bl	800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e682:	b980      	cbnz	r0, 800e6a6 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 800e684:	2301      	movs	r3, #1
 800e686:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e68a:	40ab      	lsls	r3, r5
 800e68c:	1e4e      	subs	r6, r1, #1
 800e68e:	2e05      	cmp	r6, #5
 800e690:	6862      	ldr	r2, [r4, #4]
 800e692:	4425      	add	r5, r4
 800e694:	d802      	bhi.n	800e69c <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 800e696:	7229      	strb	r1, [r5, #8]
 800e698:	4313      	orrs	r3, r2
 800e69a:	e7c2      	b.n	800e622 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e69c:	ea22 0203 	bic.w	r2, r2, r3
 800e6a0:	7228      	strb	r0, [r5, #8]
 800e6a2:	6062      	str	r2, [r4, #4]
 800e6a4:	e7be      	b.n	800e624 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e6a6:	3501      	adds	r5, #1
 800e6a8:	2d14      	cmp	r5, #20
 800e6aa:	d1e3      	bne.n	800e674 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800e6ac:	e7ba      	b.n	800e624 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e6ae:	bf00      	nop
 800e6b0:	0801377a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800e6b4:	08013742 	stmdaeq	r1, {r1, r6, r8, r9, sl, ip, sp}
 800e6b8:	08013750 	stmdaeq	r1, {r4, r6, r8, r9, sl, ip, sp}
 800e6bc:	080136cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp}

0800e6c0 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800e6c0:	f7ff bf9a 	b.w	800e5f8 <DisplayUdfParams::callbackFunction(char const*)>

0800e6c4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e6c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6c8:	4604      	mov	r4, r0
 800e6ca:	4615      	mov	r5, r2
 800e6cc:	461e      	mov	r6, r3
 800e6ce:	b086      	sub	sp, #24
 800e6d0:	3004      	adds	r0, #4
 800e6d2:	b379      	cbz	r1, 800e734 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800e6d4:	2222      	movs	r2, #34	; 0x22
 800e6d6:	f001 f876 	bl	800f7c6 <memmove>
 800e6da:	462a      	mov	r2, r5
 800e6dc:	4633      	mov	r3, r6
 800e6de:	493d      	ldr	r1, [pc, #244]	; (800e7d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800e6e0:	a803      	add	r0, sp, #12
 800e6e2:	f000 f9e7 	bl	800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e6e6:	6863      	ldr	r3, [r4, #4]
 800e6e8:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800e6ec:	493a      	ldr	r1, [pc, #232]	; (800e7d8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800e6ee:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800e6f2:	a803      	add	r0, sp, #12
 800e6f4:	f7ff ff1e 	bl	800e534 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e6f8:	6863      	ldr	r3, [r4, #4]
 800e6fa:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800e6fe:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800e702:	4936      	ldr	r1, [pc, #216]	; (800e7dc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800e704:	a803      	add	r0, sp, #12
 800e706:	f7ff ff15 	bl	800e534 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e70a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e70e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e712:	6863      	ldr	r3, [r4, #4]
 800e714:	42aa      	cmp	r2, r5
 800e716:	d226      	bcs.n	800e766 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800e718:	9803      	ldr	r0, [sp, #12]
 800e71a:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800e71e:	4410      	add	r0, r2
 800e720:	eba5 0502 	sub.w	r5, r5, r2
 800e724:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e728:	d10b      	bne.n	800e742 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800e72a:	b962      	cbnz	r2, 800e746 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e72c:	9200      	str	r2, [sp, #0]
 800e72e:	4b2c      	ldr	r3, [pc, #176]	; (800e7e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e730:	4a2c      	ldr	r2, [pc, #176]	; (800e7e4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800e732:	e00e      	b.n	800e752 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e734:	6823      	ldr	r3, [r4, #0]
 800e736:	4601      	mov	r1, r0
 800e738:	681a      	ldr	r2, [r3, #0]
 800e73a:	4618      	mov	r0, r3
 800e73c:	68d2      	ldr	r2, [r2, #12]
 800e73e:	4790      	blx	r2
 800e740:	e7cb      	b.n	800e6da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e742:	2a00      	cmp	r2, #0
 800e744:	d041      	beq.n	800e7ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800e746:	3b00      	subs	r3, #0
 800e748:	bf18      	it	ne
 800e74a:	2301      	movne	r3, #1
 800e74c:	4a26      	ldr	r2, [pc, #152]	; (800e7e8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800e74e:	9300      	str	r3, [sp, #0]
 800e750:	4b23      	ldr	r3, [pc, #140]	; (800e7e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e752:	4629      	mov	r1, r5
 800e754:	f001 fa90 	bl	800fc78 <snprintf>
 800e758:	4285      	cmp	r5, r0
 800e75a:	bfa2      	ittt	ge
 800e75c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e760:	181b      	addge	r3, r3, r0
 800e762:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e766:	2500      	movs	r5, #0
 800e768:	2701      	movs	r7, #1
 800e76a:	4e20      	ldr	r6, [pc, #128]	; (800e7ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800e76c:	f104 0808 	add.w	r8, r4, #8
 800e770:	f856 1b04 	ldr.w	r1, [r6], #4
 800e774:	780b      	ldrb	r3, [r1, #0]
 800e776:	b15b      	cbz	r3, 800e790 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800e778:	6862      	ldr	r2, [r4, #4]
 800e77a:	fa07 f305 	lsl.w	r3, r7, r5
 800e77e:	4393      	bics	r3, r2
 800e780:	bf0c      	ite	eq
 800e782:	2301      	moveq	r3, #1
 800e784:	2300      	movne	r3, #0
 800e786:	f818 2005 	ldrb.w	r2, [r8, r5]
 800e78a:	a803      	add	r0, sp, #12
 800e78c:	f7ff fed2 	bl	800e534 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e790:	3501      	adds	r5, #1
 800e792:	2d14      	cmp	r5, #20
 800e794:	d1ec      	bne.n	800e770 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800e796:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e79a:	b17b      	cbz	r3, 800e7bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800e79c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e7a0:	9b03      	ldr	r3, [sp, #12]
 800e7a2:	4413      	add	r3, r2
 800e7a4:	227d      	movs	r2, #125	; 0x7d
 800e7a6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e7aa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e7ae:	9903      	ldr	r1, [sp, #12]
 800e7b0:	54ca      	strb	r2, [r1, r3]
 800e7b2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e7b6:	3301      	adds	r3, #1
 800e7b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e7bc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e7c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e7c2:	601a      	str	r2, [r3, #0]
 800e7c4:	b006      	add	sp, #24
 800e7c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7ca:	2301      	movs	r3, #1
 800e7cc:	4a08      	ldr	r2, [pc, #32]	; (800e7f0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800e7ce:	9300      	str	r3, [sp, #0]
 800e7d0:	4b03      	ldr	r3, [pc, #12]	; (800e7e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e7d2:	e7be      	b.n	800e752 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e7d4:	0801376e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, ip, sp}
 800e7d8:	0801377a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800e7dc:	08013742 	stmdaeq	r1, {r1, r6, r8, r9, sl, ip, sp}
 800e7e0:	08013750 	stmdaeq	r1, {r4, r6, r8, r9, sl, ip, sp}
 800e7e4:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}
 800e7e8:	080122b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp}
 800e7ec:	080136cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp}
 800e7f0:	080122c2 	stmdaeq	r1, {r1, r6, r7, r9, sp}

0800e7f4 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800e7f4:	b513      	push	{r0, r1, r4, lr}
 800e7f6:	6804      	ldr	r4, [r0, #0]
 800e7f8:	b914      	cbnz	r4, 800e800 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e7fa:	601c      	str	r4, [r3, #0]
 800e7fc:	b002      	add	sp, #8
 800e7fe:	bd10      	pop	{r4, pc}
 800e800:	9300      	str	r3, [sp, #0]
 800e802:	4613      	mov	r3, r2
 800e804:	460a      	mov	r2, r1
 800e806:	2100      	movs	r1, #0
 800e808:	f7ff ff5c 	bl	800e6c4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800e80c:	e7f6      	b.n	800e7fc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e80e <DisplayUdfParams::Set(DisplayUdf*)>:
 800e80e:	6843      	ldr	r3, [r0, #4]
 800e810:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e814:	009a      	lsls	r2, r3, #2
 800e816:	4604      	mov	r4, r0
 800e818:	460e      	mov	r6, r1
 800e81a:	d506      	bpl.n	800e82a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e81c:	6988      	ldr	r0, [r1, #24]
 800e81e:	b120      	cbz	r0, 800e82a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e820:	6803      	ldr	r3, [r0, #0]
 800e822:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800e826:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e828:	4798      	blx	r3
 800e82a:	6863      	ldr	r3, [r4, #4]
 800e82c:	69b0      	ldr	r0, [r6, #24]
 800e82e:	00db      	lsls	r3, r3, #3
 800e830:	bf41      	itttt	mi
 800e832:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800e836:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800e83a:	4353      	mulmi	r3, r2
 800e83c:	6173      	strmi	r3, [r6, #20]
 800e83e:	6861      	ldr	r1, [r4, #4]
 800e840:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800e844:	b110      	cbz	r0, 800e84c <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800e846:	6803      	ldr	r3, [r0, #0]
 800e848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e84a:	4798      	blx	r3
 800e84c:	2500      	movs	r5, #0
 800e84e:	2701      	movs	r7, #1
 800e850:	f104 0808 	add.w	r8, r4, #8
 800e854:	6862      	ldr	r2, [r4, #4]
 800e856:	fa07 f305 	lsl.w	r3, r7, r5
 800e85a:	4393      	bics	r3, r2
 800e85c:	d105      	bne.n	800e86a <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800e85e:	462a      	mov	r2, r5
 800e860:	4630      	mov	r0, r6
 800e862:	f818 1005 	ldrb.w	r1, [r8, r5]
 800e866:	f7ff fd0c 	bl	800e282 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800e86a:	3501      	adds	r5, #1
 800e86c:	2d14      	cmp	r5, #20
 800e86e:	d1f1      	bne.n	800e854 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800e870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e874 <DisplayUdfParams::Dump()>:
 800e874:	4770      	bx	lr
	...

0800e878 <DisplayUdf::Show(E131Bridge*)>:
 800e878:	b530      	push	{r4, r5, lr}
 800e87a:	460d      	mov	r5, r1
 800e87c:	4604      	mov	r4, r0
 800e87e:	b085      	sub	sp, #20
 800e880:	f7ff fdae 	bl	800e3e0 <DisplayUdf::Show()>
 800e884:	f895 250b 	ldrb.w	r2, [r5, #1291]	; 0x50b
 800e888:	f895 350a 	ldrb.w	r3, [r5, #1290]	; 0x50a
 800e88c:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800e890:	4413      	add	r3, r2
 800e892:	4620      	mov	r0, r4
 800e894:	4a1a      	ldr	r2, [pc, #104]	; (800e900 <DisplayUdf::Show(E131Bridge*)+0x88>)
 800e896:	f7ff fcae 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e89a:	2301      	movs	r3, #1
 800e89c:	2100      	movs	r1, #0
 800e89e:	4628      	mov	r0, r5
 800e8a0:	f10d 020e 	add.w	r2, sp, #14
 800e8a4:	f7fb f926 	bl	8009af4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800e8a8:	b188      	cbz	r0, 800e8ce <DisplayUdf::Show(E131Bridge*)+0x56>
 800e8aa:	f8d5 0550 	ldr.w	r0, [r5, #1360]	; 0x550
 800e8ae:	4915      	ldr	r1, [pc, #84]	; (800e904 <DisplayUdf::Show(E131Bridge*)+0x8c>)
 800e8b0:	4b15      	ldr	r3, [pc, #84]	; (800e908 <DisplayUdf::Show(E131Bridge*)+0x90>)
 800e8b2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e8b6:	2800      	cmp	r0, #0
 800e8b8:	bf18      	it	ne
 800e8ba:	460b      	movne	r3, r1
 800e8bc:	4620      	mov	r0, r4
 800e8be:	e9cd 2300 	strd	r2, r3, [sp]
 800e8c2:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 800e8c6:	2341      	movs	r3, #65	; 0x41
 800e8c8:	4a10      	ldr	r2, [pc, #64]	; (800e90c <DisplayUdf::Show(E131Bridge*)+0x94>)
 800e8ca:	f7ff fc94 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e8ce:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800e8d0:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800e8d4:	2a02      	cmp	r2, #2
 800e8d6:	d001      	beq.n	800e8dc <DisplayUdf::Show(E131Bridge*)+0x64>
 800e8d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e8da:	b92b      	cbnz	r3, 800e8e8 <DisplayUdf::Show(E131Bridge*)+0x70>
 800e8dc:	4620      	mov	r0, r4
 800e8de:	4a0c      	ldr	r2, [pc, #48]	; (800e910 <DisplayUdf::Show(E131Bridge*)+0x98>)
 800e8e0:	f7ff fc89 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e8e4:	b005      	add	sp, #20
 800e8e6:	bd30      	pop	{r4, r5, pc}
 800e8e8:	480a      	ldr	r0, [pc, #40]	; (800e914 <DisplayUdf::Show(E131Bridge*)+0x9c>)
 800e8ea:	9300      	str	r3, [sp, #0]
 800e8ec:	4b0a      	ldr	r3, [pc, #40]	; (800e918 <DisplayUdf::Show(E131Bridge*)+0xa0>)
 800e8ee:	2a00      	cmp	r2, #0
 800e8f0:	bf08      	it	eq
 800e8f2:	4603      	moveq	r3, r0
 800e8f4:	4620      	mov	r0, r4
 800e8f6:	4a09      	ldr	r2, [pc, #36]	; (800e91c <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800e8f8:	f7ff fc7d 	bl	800e1f6 <Display::Printf(unsigned char, char const*, ...)>
 800e8fc:	e7f2      	b.n	800e8e4 <DisplayUdf::Show(E131Bridge*)+0x6c>
 800e8fe:	bf00      	nop
 800e900:	08013784 	stmdaeq	r1, {r2, r7, r8, r9, sl, ip, sp}
 800e904:	0801308c 	stmdaeq	r1, {r2, r3, r7, ip, sp}
 800e908:	08013088 	stmdaeq	r1, {r3, r7, ip, sp}
 800e90c:	0801378b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip, sp}
 800e910:	0801379a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, ip, sp}
 800e914:	080131a0 	stmdaeq	r1, {r5, r7, r8, ip, sp}
 800e918:	08013195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, sp}
 800e91c:	080137a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, ip, sp}

0800e920 <NetworkDisplay::ShowEmacStart()>:
 800e920:	4b01      	ldr	r3, [pc, #4]	; (800e928 <NetworkDisplay::ShowEmacStart()+0x8>)
 800e922:	6818      	ldr	r0, [r3, #0]
 800e924:	f7ff bcc6 	b.w	800e2b4 <DisplayUdf::ShowEmacStart()>
 800e928:	2000a000 	andcs	sl, r0, r0

0800e92c <NetworkDisplay::ShowIp()>:
 800e92c:	4b01      	ldr	r3, [pc, #4]	; (800e934 <NetworkDisplay::ShowIp()+0x8>)
 800e92e:	6818      	ldr	r0, [r3, #0]
 800e930:	f7ff bcd0 	b.w	800e2d4 <DisplayUdf::ShowIpAddress()>
 800e934:	2000a000 	andcs	sl, r0, r0

0800e938 <NetworkDisplay::ShowShutdown()>:
 800e938:	4b01      	ldr	r3, [pc, #4]	; (800e940 <NetworkDisplay::ShowShutdown()+0x8>)
 800e93a:	6818      	ldr	r0, [r3, #0]
 800e93c:	f7ff bdca 	b.w	800e4d4 <DisplayUdf::ShowShutdown()>
 800e940:	2000a000 	andcs	sl, r0, r0

0800e944 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e944:	4b01      	ldr	r3, [pc, #4]	; (800e94c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 800e946:	6818      	ldr	r0, [r3, #0]
 800e948:	f7ff bd8c 	b.w	800e464 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e94c:	2000a000 	andcs	sl, r0, r0

0800e950 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e954:	4603      	mov	r3, r0
 800e956:	7800      	ldrb	r0, [r0, #0]
 800e958:	287b      	cmp	r0, #123	; 0x7b
 800e95a:	f040 80a2 	bne.w	800eaa2 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e95e:	b17a      	cbz	r2, 800e980 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e960:	2401      	movs	r4, #1
 800e962:	461e      	mov	r6, r3
 800e964:	4620      	mov	r0, r4
 800e966:	2a00      	cmp	r2, #0
 800e968:	bf0c      	ite	eq
 800e96a:	f04f 0c0a 	moveq.w	ip, #10
 800e96e:	f04f 0c00 	movne.w	ip, #0
 800e972:	273d      	movs	r7, #61	; 0x3d
 800e974:	42a1      	cmp	r1, r4
 800e976:	d850      	bhi.n	800ea1a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e97c:	463c      	mov	r4, r7
 800e97e:	e7f2      	b.n	800e966 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e980:	2023      	movs	r0, #35	; 0x23
 800e982:	f803 0b01 	strb.w	r0, [r3], #1
 800e986:	461c      	mov	r4, r3
 800e988:	2701      	movs	r7, #1
 800e98a:	42b9      	cmp	r1, r7
 800e98c:	d811      	bhi.n	800e9b2 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e98e:	2001      	movs	r0, #1
 800e990:	461e      	mov	r6, r3
 800e992:	230a      	movs	r3, #10
 800e994:	4625      	mov	r5, r4
 800e996:	f806 3b01 	strb.w	r3, [r6], #1
 800e99a:	3001      	adds	r0, #1
 800e99c:	462b      	mov	r3, r5
 800e99e:	781c      	ldrb	r4, [r3, #0]
 800e9a0:	3501      	adds	r5, #1
 800e9a2:	2c7b      	cmp	r4, #123	; 0x7b
 800e9a4:	d0ea      	beq.n	800e97c <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e9a6:	42b9      	cmp	r1, r7
 800e9a8:	f107 0401 	add.w	r4, r7, #1
 800e9ac:	d9db      	bls.n	800e966 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e9ae:	4627      	mov	r7, r4
 800e9b0:	e7f4      	b.n	800e99c <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e9b2:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e9b6:	2822      	cmp	r0, #34	; 0x22
 800e9b8:	d119      	bne.n	800e9ee <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e9ba:	46a4      	mov	ip, r4
 800e9bc:	461d      	mov	r5, r3
 800e9be:	2601      	movs	r6, #1
 800e9c0:	f89c e000 	ldrb.w	lr, [ip]
 800e9c4:	4664      	mov	r4, ip
 800e9c6:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e9ca:	462b      	mov	r3, r5
 800e9cc:	4630      	mov	r0, r6
 800e9ce:	f10c 0c01 	add.w	ip, ip, #1
 800e9d2:	f105 0501 	add.w	r5, r5, #1
 800e9d6:	f106 0601 	add.w	r6, r6, #1
 800e9da:	d0d9      	beq.n	800e990 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e9dc:	3701      	adds	r7, #1
 800e9de:	42b9      	cmp	r1, r7
 800e9e0:	4664      	mov	r4, ip
 800e9e2:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e9e6:	d8eb      	bhi.n	800e9c0 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e9e8:	4630      	mov	r0, r6
 800e9ea:	462b      	mov	r3, r5
 800e9ec:	e7d0      	b.n	800e990 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e9ee:	3701      	adds	r7, #1
 800e9f0:	e7cb      	b.n	800e98a <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e9f2:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e9f6:	d110      	bne.n	800ea1a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e9f8:	eba0 0803 	sub.w	r8, r0, r3
 800e9fc:	461a      	mov	r2, r3
 800e9fe:	eb08 0003 	add.w	r0, r8, r3
 800ea02:	f813 eb01 	ldrb.w	lr, [r3], #1
 800ea06:	1c65      	adds	r5, r4, #1
 800ea08:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800ea0c:	d04c      	beq.n	800eaa8 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800ea0e:	42a1      	cmp	r1, r4
 800ea10:	d911      	bls.n	800ea36 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800ea12:	462c      	mov	r4, r5
 800ea14:	f806 eb01 	strb.w	lr, [r6], #1
 800ea18:	e7f0      	b.n	800e9fc <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800ea1a:	42a1      	cmp	r1, r4
 800ea1c:	461d      	mov	r5, r3
 800ea1e:	f893 e000 	ldrb.w	lr, [r3]
 800ea22:	f104 0401 	add.w	r4, r4, #1
 800ea26:	f103 0301 	add.w	r3, r3, #1
 800ea2a:	d8e2      	bhi.n	800e9f2 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800ea2c:	462b      	mov	r3, r5
 800ea2e:	e7e3      	b.n	800e9f8 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800ea30:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800ea34:	d009      	beq.n	800ea4a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800ea36:	42a9      	cmp	r1, r5
 800ea38:	4614      	mov	r4, r2
 800ea3a:	f892 e000 	ldrb.w	lr, [r2]
 800ea3e:	f105 0501 	add.w	r5, r5, #1
 800ea42:	f102 0201 	add.w	r2, r2, #1
 800ea46:	d8f3      	bhi.n	800ea30 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800ea48:	4622      	mov	r2, r4
 800ea4a:	7814      	ldrb	r4, [r2, #0]
 800ea4c:	4696      	mov	lr, r2
 800ea4e:	2c2f      	cmp	r4, #47	; 0x2f
 800ea50:	462b      	mov	r3, r5
 800ea52:	f102 0201 	add.w	r2, r2, #1
 800ea56:	f105 0501 	add.w	r5, r5, #1
 800ea5a:	d81a      	bhi.n	800ea92 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800ea5c:	4299      	cmp	r1, r3
 800ea5e:	d8f4      	bhi.n	800ea4a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800ea60:	2c22      	cmp	r4, #34	; 0x22
 800ea62:	bf08      	it	eq
 800ea64:	4696      	moveq	lr, r2
 800ea66:	4673      	mov	r3, lr
 800ea68:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ea6c:	1c6c      	adds	r4, r5, #1
 800ea6e:	2a22      	cmp	r2, #34	; 0x22
 800ea70:	d011      	beq.n	800ea96 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea72:	2a2c      	cmp	r2, #44	; 0x2c
 800ea74:	d00f      	beq.n	800ea96 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea76:	2a7d      	cmp	r2, #125	; 0x7d
 800ea78:	d00d      	beq.n	800ea96 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800ea7a:	42a9      	cmp	r1, r5
 800ea7c:	d90f      	bls.n	800ea9e <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800ea7e:	f1a2 0520 	sub.w	r5, r2, #32
 800ea82:	2d5a      	cmp	r5, #90	; 0x5a
 800ea84:	d803      	bhi.n	800ea8e <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800ea86:	469e      	mov	lr, r3
 800ea88:	f806 2b01 	strb.w	r2, [r6], #1
 800ea8c:	3001      	adds	r0, #1
 800ea8e:	4625      	mov	r5, r4
 800ea90:	e7e9      	b.n	800ea66 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800ea92:	461d      	mov	r5, r3
 800ea94:	e7e7      	b.n	800ea66 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800ea96:	462c      	mov	r4, r5
 800ea98:	f806 cb01 	strb.w	ip, [r6], #1
 800ea9c:	3001      	adds	r0, #1
 800ea9e:	3401      	adds	r4, #1
 800eaa0:	e768      	b.n	800e974 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800eaa2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800eaa6:	e767      	b.n	800e978 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800eaa8:	4625      	mov	r5, r4
 800eaaa:	f806 7b01 	strb.w	r7, [r6], #1
 800eaae:	3001      	adds	r0, #1
 800eab0:	e7c1      	b.n	800ea36 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800eab4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800eab4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eab8:	6002      	str	r2, [r0, #0]
 800eaba:	4614      	mov	r4, r2
 800eabc:	2200      	movs	r2, #0
 800eabe:	80c2      	strh	r2, [r0, #6]
 800eac0:	4a1c      	ldr	r2, [pc, #112]	; (800eb34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800eac2:	4606      	mov	r6, r0
 800eac4:	7812      	ldrb	r2, [r2, #0]
 800eac6:	8083      	strh	r3, [r0, #4]
 800eac8:	f002 0201 	and.w	r2, r2, #1
 800eacc:	7202      	strb	r2, [r0, #8]
 800eace:	4608      	mov	r0, r1
 800ead0:	4605      	mov	r5, r0
 800ead2:	782f      	ldrb	r7, [r5, #0]
 800ead4:	3001      	adds	r0, #1
 800ead6:	2f00      	cmp	r7, #0
 800ead8:	d1fa      	bne.n	800ead0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800eada:	1a6d      	subs	r5, r5, r1
 800eadc:	b29b      	uxth	r3, r3
 800eade:	b1d2      	cbz	r2, 800eb16 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800eae0:	1d2f      	adds	r7, r5, #4
 800eae2:	429f      	cmp	r7, r3
 800eae4:	d814      	bhi.n	800eb10 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eae6:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800eaea:	f04f 0922 	mov.w	r9, #34	; 0x22
 800eaee:	462a      	mov	r2, r5
 800eaf0:	f884 8000 	strb.w	r8, [r4]
 800eaf4:	f884 9001 	strb.w	r9, [r4, #1]
 800eaf8:	1ca0      	adds	r0, r4, #2
 800eafa:	f000 fe64 	bl	800f7c6 <memmove>
 800eafe:	223a      	movs	r2, #58	; 0x3a
 800eb00:	1963      	adds	r3, r4, r5
 800eb02:	3505      	adds	r5, #5
 800eb04:	f883 9002 	strb.w	r9, [r3, #2]
 800eb08:	70da      	strb	r2, [r3, #3]
 800eb0a:	80f5      	strh	r5, [r6, #6]
 800eb0c:	f804 8007 	strb.w	r8, [r4, r7]
 800eb10:	4630      	mov	r0, r6
 800eb12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eb16:	1caf      	adds	r7, r5, #2
 800eb18:	429f      	cmp	r7, r3
 800eb1a:	d8f9      	bhi.n	800eb10 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eb1c:	4620      	mov	r0, r4
 800eb1e:	2323      	movs	r3, #35	; 0x23
 800eb20:	462a      	mov	r2, r5
 800eb22:	f800 3b01 	strb.w	r3, [r0], #1
 800eb26:	f000 fe4e 	bl	800f7c6 <memmove>
 800eb2a:	230a      	movs	r3, #10
 800eb2c:	442c      	add	r4, r5
 800eb2e:	7063      	strb	r3, [r4, #1]
 800eb30:	80f7      	strh	r7, [r6, #6]
 800eb32:	e7ed      	b.n	800eb10 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800eb34:	2000a004 	andcs	sl, r0, r4

0800eb38 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800eb38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb3a:	469c      	mov	ip, r3
 800eb3c:	8885      	ldrh	r5, [r0, #4]
 800eb3e:	88c3      	ldrh	r3, [r0, #6]
 800eb40:	b085      	sub	sp, #20
 800eb42:	42ab      	cmp	r3, r5
 800eb44:	d302      	bcc.n	800eb4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800eb46:	2000      	movs	r0, #0
 800eb48:	b005      	add	sp, #20
 800eb4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb4c:	4604      	mov	r4, r0
 800eb4e:	6800      	ldr	r0, [r0, #0]
 800eb50:	1aed      	subs	r5, r5, r3
 800eb52:	4418      	add	r0, r3
 800eb54:	b2d6      	uxtb	r6, r2
 800eb56:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800eb5a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800eb5e:	f894 e008 	ldrb.w	lr, [r4, #8]
 800eb62:	0e12      	lsrs	r2, r2, #24
 800eb64:	f1bc 0f00 	cmp.w	ip, #0
 800eb68:	d109      	bne.n	800eb7e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800eb6a:	f1be 0f00 	cmp.w	lr, #0
 800eb6e:	d109      	bne.n	800eb84 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800eb70:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eb74:	e9cd 6700 	strd	r6, r7, [sp]
 800eb78:	460b      	mov	r3, r1
 800eb7a:	4a0e      	ldr	r2, [pc, #56]	; (800ebb4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800eb7c:	e008      	b.n	800eb90 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800eb7e:	f1be 0f00 	cmp.w	lr, #0
 800eb82:	d00f      	beq.n	800eba4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800eb84:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eb88:	460b      	mov	r3, r1
 800eb8a:	e9cd 6700 	strd	r6, r7, [sp]
 800eb8e:	4a0a      	ldr	r2, [pc, #40]	; (800ebb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800eb90:	4629      	mov	r1, r5
 800eb92:	f001 f871 	bl	800fc78 <snprintf>
 800eb96:	4285      	cmp	r5, r0
 800eb98:	dbd5      	blt.n	800eb46 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800eb9a:	88e3      	ldrh	r3, [r4, #6]
 800eb9c:	4403      	add	r3, r0
 800eb9e:	80e3      	strh	r3, [r4, #6]
 800eba0:	2001      	movs	r0, #1
 800eba2:	e7d1      	b.n	800eb48 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800eba4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800eba8:	e9cd 6700 	strd	r6, r7, [sp]
 800ebac:	460b      	mov	r3, r1
 800ebae:	4a03      	ldr	r2, [pc, #12]	; (800ebbc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800ebb0:	e7ee      	b.n	800eb90 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800ebb2:	bf00      	nop
 800ebb4:	080137bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800ebb8:	080137ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, ip, sp}
 800ebbc:	080137c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, ip, sp}

0800ebc0 <PropertiesBuilder::AddComment(char const*)>:
 800ebc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ebc2:	7a06      	ldrb	r6, [r0, #8]
 800ebc4:	b996      	cbnz	r6, 800ebec <PropertiesBuilder::AddComment(char const*)+0x2c>
 800ebc6:	4604      	mov	r4, r0
 800ebc8:	88c0      	ldrh	r0, [r0, #6]
 800ebca:	88a5      	ldrh	r5, [r4, #4]
 800ebcc:	42a8      	cmp	r0, r5
 800ebce:	d20d      	bcs.n	800ebec <PropertiesBuilder::AddComment(char const*)+0x2c>
 800ebd0:	6827      	ldr	r7, [r4, #0]
 800ebd2:	1a2d      	subs	r5, r5, r0
 800ebd4:	460b      	mov	r3, r1
 800ebd6:	4a06      	ldr	r2, [pc, #24]	; (800ebf0 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800ebd8:	4629      	mov	r1, r5
 800ebda:	4438      	add	r0, r7
 800ebdc:	f001 f84c 	bl	800fc78 <snprintf>
 800ebe0:	4285      	cmp	r5, r0
 800ebe2:	bfa1      	itttt	ge
 800ebe4:	2601      	movge	r6, #1
 800ebe6:	88e3      	ldrhge	r3, [r4, #6]
 800ebe8:	18c0      	addge	r0, r0, r3
 800ebea:	80e0      	strhge	r0, [r4, #6]
 800ebec:	4630      	mov	r0, r6
 800ebee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ebf0:	080137d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp}

0800ebf4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800ebf4:	e9c0 1200 	strd	r1, r2, [r0]
 800ebf8:	4770      	bx	lr

0800ebfa <ReadConfigFile::~ReadConfigFile()>:
 800ebfa:	4770      	bx	lr

0800ebfc <ReadConfigFile::Read(char const*, unsigned int)>:
 800ebfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec00:	4606      	mov	r6, r0
 800ec02:	460d      	mov	r5, r1
 800ec04:	4614      	mov	r4, r2
 800ec06:	f04f 0800 	mov.w	r8, #0
 800ec0a:	b0a0      	sub	sp, #128	; 0x80
 800ec0c:	b33c      	cbz	r4, 800ec5e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ec0e:	466b      	mov	r3, sp
 800ec10:	462a      	mov	r2, r5
 800ec12:	4619      	mov	r1, r3
 800ec14:	e007      	b.n	800ec26 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800ec16:	f803 7b01 	strb.w	r7, [r3], #1
 800ec1a:	1a58      	subs	r0, r3, r1
 800ec1c:	287f      	cmp	r0, #127	; 0x7f
 800ec1e:	4615      	mov	r5, r2
 800ec20:	dc1d      	bgt.n	800ec5e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ec22:	3c01      	subs	r4, #1
 800ec24:	d00f      	beq.n	800ec46 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ec26:	7817      	ldrb	r7, [r2, #0]
 800ec28:	4610      	mov	r0, r2
 800ec2a:	2f0d      	cmp	r7, #13
 800ec2c:	f102 0201 	add.w	r2, r2, #1
 800ec30:	d001      	beq.n	800ec36 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ec32:	2f0a      	cmp	r7, #10
 800ec34:	d1ef      	bne.n	800ec16 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800ec36:	4605      	mov	r5, r0
 800ec38:	b12c      	cbz	r4, 800ec46 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ec3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ec3e:	2a0d      	cmp	r2, #13
 800ec40:	d00b      	beq.n	800ec5a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ec42:	2a0a      	cmp	r2, #10
 800ec44:	d009      	beq.n	800ec5a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ec46:	f89d 2000 	ldrb.w	r2, [sp]
 800ec4a:	2a60      	cmp	r2, #96	; 0x60
 800ec4c:	d9de      	bls.n	800ec0c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ec4e:	f883 8000 	strb.w	r8, [r3]
 800ec52:	e9d6 3000 	ldrd	r3, r0, [r6]
 800ec56:	4798      	blx	r3
 800ec58:	e7d8      	b.n	800ec0c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ec5a:	3c01      	subs	r4, #1
 800ec5c:	e7eb      	b.n	800ec36 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ec5e:	b020      	add	sp, #128	; 0x80
 800ec60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ec64 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800ec64:	b570      	push	{r4, r5, r6, lr}
 800ec66:	4615      	mov	r5, r2
 800ec68:	461c      	mov	r4, r3
 800ec6a:	f000 f890 	bl	800ed8e <Sscan::checkName(char const*, char const*)>
 800ec6e:	b180      	cbz	r0, 800ec92 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800ec70:	2100      	movs	r1, #0
 800ec72:	5c43      	ldrb	r3, [r0, r1]
 800ec74:	6826      	ldr	r6, [r4, #0]
 800ec76:	b28a      	uxth	r2, r1
 800ec78:	b143      	cbz	r3, 800ec8c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800ec7a:	42b2      	cmp	r2, r6
 800ec7c:	d303      	bcc.n	800ec86 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800ec7e:	2b0a      	cmp	r3, #10
 800ec80:	d004      	beq.n	800ec8c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800ec82:	2002      	movs	r0, #2
 800ec84:	e004      	b.n	800ec90 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800ec86:	546b      	strb	r3, [r5, r1]
 800ec88:	3101      	adds	r1, #1
 800ec8a:	e7f2      	b.n	800ec72 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800ec8c:	2000      	movs	r0, #0
 800ec8e:	6022      	str	r2, [r4, #0]
 800ec90:	bd70      	pop	{r4, r5, r6, pc}
 800ec92:	2001      	movs	r0, #1
 800ec94:	e7fc      	b.n	800ec90 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800ec96 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800ec96:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec98:	4615      	mov	r5, r2
 800ec9a:	f000 f878 	bl	800ed8e <Sscan::checkName(char const*, char const*)>
 800ec9e:	bb58      	cbnz	r0, 800ecf8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800eca0:	2001      	movs	r0, #1
 800eca2:	e027      	b.n	800ecf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800eca4:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800eca8:	2b09      	cmp	r3, #9
 800ecaa:	d822      	bhi.n	800ecf2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecac:	4603      	mov	r3, r0
 800ecae:	fb0c 2101 	mla	r1, ip, r1, r2
 800ecb2:	3930      	subs	r1, #48	; 0x30
 800ecb4:	4618      	mov	r0, r3
 800ecb6:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ecba:	2a2e      	cmp	r2, #46	; 0x2e
 800ecbc:	d115      	bne.n	800ecea <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800ecbe:	29ff      	cmp	r1, #255	; 0xff
 800ecc0:	d817      	bhi.n	800ecf2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ecc2:	3401      	adds	r4, #1
 800ecc4:	2c03      	cmp	r4, #3
 800ecc6:	f806 1b01 	strb.w	r1, [r6], #1
 800ecca:	d119      	bne.n	800ed00 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800eccc:	2400      	movs	r4, #0
 800ecce:	260a      	movs	r6, #10
 800ecd0:	1d1a      	adds	r2, r3, #4
 800ecd2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ecd6:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800ecda:	d115      	bne.n	800ed08 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800ecdc:	2cff      	cmp	r4, #255	; 0xff
 800ecde:	d808      	bhi.n	800ecf2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ece0:	f88d 4007 	strb.w	r4, [sp, #7]
 800ece4:	9b01      	ldr	r3, [sp, #4]
 800ece6:	602b      	str	r3, [r5, #0]
 800ece8:	e004      	b.n	800ecf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800ecea:	2a00      	cmp	r2, #0
 800ecec:	d0e7      	beq.n	800ecbe <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ecee:	42b8      	cmp	r0, r7
 800ecf0:	d1d8      	bne.n	800eca4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800ecf2:	2002      	movs	r0, #2
 800ecf4:	b003      	add	sp, #12
 800ecf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ecf8:	2400      	movs	r4, #0
 800ecfa:	f04f 0c0a 	mov.w	ip, #10
 800ecfe:	ae01      	add	r6, sp, #4
 800ed00:	4603      	mov	r3, r0
 800ed02:	2100      	movs	r1, #0
 800ed04:	1d07      	adds	r7, r0, #4
 800ed06:	e7d5      	b.n	800ecb4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800ed08:	4293      	cmp	r3, r2
 800ed0a:	d0f2      	beq.n	800ecf2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ed0c:	3930      	subs	r1, #48	; 0x30
 800ed0e:	2909      	cmp	r1, #9
 800ed10:	d8ef      	bhi.n	800ecf2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ed12:	fb06 1404 	mla	r4, r6, r4, r1
 800ed16:	e7dc      	b.n	800ecd2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800ed18 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800ed18:	b538      	push	{r3, r4, r5, lr}
 800ed1a:	4615      	mov	r5, r2
 800ed1c:	f000 f837 	bl	800ed8e <Sscan::checkName(char const*, char const*)>
 800ed20:	b1a0      	cbz	r0, 800ed4c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800ed22:	4604      	mov	r4, r0
 800ed24:	2100      	movs	r1, #0
 800ed26:	220a      	movs	r2, #10
 800ed28:	7823      	ldrb	r3, [r4, #0]
 800ed2a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ed2e:	2809      	cmp	r0, #9
 800ed30:	d80e      	bhi.n	800ed50 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ed32:	fb02 3101 	mla	r1, r2, r1, r3
 800ed36:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ed3a:	3930      	subs	r1, #48	; 0x30
 800ed3c:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ed40:	d1f2      	bne.n	800ed28 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800ed42:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ed46:	d203      	bcs.n	800ed50 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ed48:	8029      	strh	r1, [r5, #0]
 800ed4a:	bd38      	pop	{r3, r4, r5, pc}
 800ed4c:	2001      	movs	r0, #1
 800ed4e:	e7fc      	b.n	800ed4a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800ed50:	2002      	movs	r0, #2
 800ed52:	e7fa      	b.n	800ed4a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800ed54 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800ed54:	b538      	push	{r3, r4, r5, lr}
 800ed56:	4615      	mov	r5, r2
 800ed58:	f000 f819 	bl	800ed8e <Sscan::checkName(char const*, char const*)>
 800ed5c:	b198      	cbz	r0, 800ed86 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ed5e:	4604      	mov	r4, r0
 800ed60:	2100      	movs	r1, #0
 800ed62:	220a      	movs	r2, #10
 800ed64:	7823      	ldrb	r3, [r4, #0]
 800ed66:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ed6a:	2809      	cmp	r0, #9
 800ed6c:	d80d      	bhi.n	800ed8a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ed6e:	fb02 3101 	mla	r1, r2, r1, r3
 800ed72:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ed76:	3930      	subs	r1, #48	; 0x30
 800ed78:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ed7c:	d1f2      	bne.n	800ed64 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800ed7e:	29ff      	cmp	r1, #255	; 0xff
 800ed80:	d803      	bhi.n	800ed8a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ed82:	7029      	strb	r1, [r5, #0]
 800ed84:	bd38      	pop	{r3, r4, r5, pc}
 800ed86:	2001      	movs	r0, #1
 800ed88:	e7fc      	b.n	800ed84 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800ed8a:	2002      	movs	r0, #2
 800ed8c:	e7fa      	b.n	800ed84 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800ed8e <Sscan::checkName(char const*, char const*)>:
 800ed8e:	4603      	mov	r3, r0
 800ed90:	b510      	push	{r4, lr}
 800ed92:	3901      	subs	r1, #1
 800ed94:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ed98:	461c      	mov	r4, r3
 800ed9a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ed9e:	b120      	cbz	r0, 800edaa <Sscan::checkName(char const*, char const*)+0x1c>
 800eda0:	b10a      	cbz	r2, 800eda6 <Sscan::checkName(char const*, char const*)+0x18>
 800eda2:	4290      	cmp	r0, r2
 800eda4:	d0f6      	beq.n	800ed94 <Sscan::checkName(char const*, char const*)+0x6>
 800eda6:	2000      	movs	r0, #0
 800eda8:	e006      	b.n	800edb8 <Sscan::checkName(char const*, char const*)+0x2a>
 800edaa:	2a3d      	cmp	r2, #61	; 0x3d
 800edac:	d104      	bne.n	800edb8 <Sscan::checkName(char const*, char const*)+0x2a>
 800edae:	7860      	ldrb	r0, [r4, #1]
 800edb0:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800edb4:	d000      	beq.n	800edb8 <Sscan::checkName(char const*, char const*)+0x2a>
 800edb6:	1c60      	adds	r0, r4, #1
 800edb8:	bd10      	pop	{r4, pc}

0800edba <LightSet::GetDmxStartAddress()>:
 800edba:	2001      	movs	r0, #1
 800edbc:	4770      	bx	lr

0800edbe <LightSet::GetDmxFootprint()>:
 800edbe:	f44f 7000 	mov.w	r0, #512	; 0x200
 800edc2:	4770      	bx	lr

0800edc4 <LightSet::SetDmxStartAddress(unsigned short)>:
 800edc4:	2000      	movs	r0, #0
 800edc6:	4770      	bx	lr

0800edc8 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800edc8:	2300      	movs	r3, #0
 800edca:	2001      	movs	r0, #1
 800edcc:	7093      	strb	r3, [r2, #2]
 800edce:	8010      	strh	r0, [r2, #0]
 800edd0:	4770      	bx	lr
	...

0800edd4 <Display::PrintInfo() [clone .isra.0]>:
 800edd4:	b910      	cbnz	r0, 800eddc <Display::PrintInfo() [clone .isra.0]+0x8>
 800edd6:	4803      	ldr	r0, [pc, #12]	; (800ede4 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800edd8:	f000 bf76 	b.w	800fcc8 <puts>
 800eddc:	6803      	ldr	r3, [r0, #0]
 800edde:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ede0:	4718      	bx	r3
 800ede2:	bf00      	nop
 800ede4:	080138e2 	stmdaeq	r1, {r1, r5, r6, r7, fp, ip, sp}

0800ede8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800ede8:	b513      	push	{r0, r1, r4, lr}
 800edea:	4604      	mov	r4, r0
 800edec:	0a13      	lsrs	r3, r2, #8
 800edee:	7800      	ldrb	r0, [r0, #0]
 800edf0:	f88d 1004 	strb.w	r1, [sp, #4]
 800edf4:	f88d 3005 	strb.w	r3, [sp, #5]
 800edf8:	f88d 2006 	strb.w	r2, [sp, #6]
 800edfc:	f001 fec2 	bl	8010b84 <gd32_i2c_set_address>
 800ee00:	6860      	ldr	r0, [r4, #4]
 800ee02:	f001 feb7 	bl	8010b74 <gd32_i2c_set_baudrate>
 800ee06:	2103      	movs	r1, #3
 800ee08:	a801      	add	r0, sp, #4
 800ee0a:	f001 fec1 	bl	8010b90 <gd32_i2c_write>
 800ee0e:	b002      	add	sp, #8
 800ee10:	bd10      	pop	{r4, pc}

0800ee12 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800ee12:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ee14:	460d      	mov	r5, r1
 800ee16:	4604      	mov	r4, r0
 800ee18:	f001 feb4 	bl	8010b84 <gd32_i2c_set_address>
 800ee1c:	4628      	mov	r0, r5
 800ee1e:	f001 fea9 	bl	8010b74 <gd32_i2c_set_baudrate>
 800ee22:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee26:	2b07      	cmp	r3, #7
 800ee28:	d902      	bls.n	800ee30 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800ee2a:	3c50      	subs	r4, #80	; 0x50
 800ee2c:	2c0f      	cmp	r4, #15
 800ee2e:	d809      	bhi.n	800ee44 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800ee30:	2101      	movs	r1, #1
 800ee32:	f10d 0007 	add.w	r0, sp, #7
 800ee36:	f001 ff11 	bl	8010c5c <gd32_i2c_read>
 800ee3a:	fab0 f080 	clz	r0, r0
 800ee3e:	0940      	lsrs	r0, r0, #5
 800ee40:	b003      	add	sp, #12
 800ee42:	bd30      	pop	{r4, r5, pc}
 800ee44:	2100      	movs	r1, #0
 800ee46:	4608      	mov	r0, r1
 800ee48:	f001 fea2 	bl	8010b90 <gd32_i2c_write>
 800ee4c:	e7f5      	b.n	800ee3a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800ee4e <Display::Detect7Segment()>:
 800ee4e:	b538      	push	{r3, r4, r5, lr}
 800ee50:	68c1      	ldr	r1, [r0, #12]
 800ee52:	4604      	mov	r4, r0
 800ee54:	7a00      	ldrb	r0, [r0, #8]
 800ee56:	f7ff ffdc 	bl	800ee12 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800ee5a:	7460      	strb	r0, [r4, #17]
 800ee5c:	b170      	cbz	r0, 800ee7c <Display::Detect7Segment()+0x2e>
 800ee5e:	2200      	movs	r2, #0
 800ee60:	f104 0508 	add.w	r5, r4, #8
 800ee64:	4611      	mov	r1, r2
 800ee66:	4628      	mov	r0, r5
 800ee68:	f7ff ffbe 	bl	800ede8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ee6c:	7c63      	ldrb	r3, [r4, #17]
 800ee6e:	b12b      	cbz	r3, 800ee7c <Display::Detect7Segment()+0x2e>
 800ee70:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800ee74:	2112      	movs	r1, #18
 800ee76:	4628      	mov	r0, r5
 800ee78:	f7ff ffb6 	bl	800ede8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ee7c:	bd38      	pop	{r3, r4, r5, pc}

0800ee7e <Display::Detect(display::Type)>:
 800ee7e:	2902      	cmp	r1, #2
 800ee80:	b538      	push	{r3, r4, r5, lr}
 800ee82:	4604      	mov	r4, r0
 800ee84:	d014      	beq.n	800eeb0 <Display::Detect(display::Type)+0x32>
 800ee86:	2904      	cmp	r1, #4
 800ee88:	d01b      	beq.n	800eec2 <Display::Detect(display::Type)+0x44>
 800ee8a:	69a0      	ldr	r0, [r4, #24]
 800ee8c:	b168      	cbz	r0, 800eeaa <Display::Detect(display::Type)+0x2c>
 800ee8e:	6803      	ldr	r3, [r0, #0]
 800ee90:	689b      	ldr	r3, [r3, #8]
 800ee92:	4798      	blx	r3
 800ee94:	4603      	mov	r3, r0
 800ee96:	69a0      	ldr	r0, [r4, #24]
 800ee98:	b9ab      	cbnz	r3, 800eec6 <Display::Detect(display::Type)+0x48>
 800ee9a:	b110      	cbz	r0, 800eea2 <Display::Detect(display::Type)+0x24>
 800ee9c:	6803      	ldr	r3, [r0, #0]
 800ee9e:	685b      	ldr	r3, [r3, #4]
 800eea0:	4798      	blx	r3
 800eea2:	2300      	movs	r3, #0
 800eea4:	61a3      	str	r3, [r4, #24]
 800eea6:	2304      	movs	r3, #4
 800eea8:	6023      	str	r3, [r4, #0]
 800eeaa:	2300      	movs	r3, #0
 800eeac:	6163      	str	r3, [r4, #20]
 800eeae:	e010      	b.n	800eed2 <Display::Detect(display::Type)+0x54>
 800eeb0:	2018      	movs	r0, #24
 800eeb2:	f000 fbc9 	bl	800f648 <operator new(unsigned int)>
 800eeb6:	4605      	mov	r5, r0
 800eeb8:	2100      	movs	r1, #0
 800eeba:	f000 f89d 	bl	800eff8 <Ssd1306::Ssd1306(TOledPanel)>
 800eebe:	61a5      	str	r5, [r4, #24]
 800eec0:	e7e3      	b.n	800ee8a <Display::Detect(display::Type)+0xc>
 800eec2:	6001      	str	r1, [r0, #0]
 800eec4:	e7e1      	b.n	800ee8a <Display::Detect(display::Type)+0xc>
 800eec6:	6803      	ldr	r3, [r0, #0]
 800eec8:	68db      	ldr	r3, [r3, #12]
 800eeca:	4798      	blx	r3
 800eecc:	69a3      	ldr	r3, [r4, #24]
 800eece:	2b00      	cmp	r3, #0
 800eed0:	d0eb      	beq.n	800eeaa <Display::Detect(display::Type)+0x2c>
 800eed2:	bd38      	pop	{r3, r4, r5, pc}

0800eed4 <Display::Display()>:
 800eed4:	2304      	movs	r3, #4
 800eed6:	b510      	push	{r4, lr}
 800eed8:	6003      	str	r3, [r0, #0]
 800eeda:	4b0f      	ldr	r3, [pc, #60]	; (800ef18 <Display::Display()+0x44>)
 800eedc:	4604      	mov	r4, r0
 800eede:	681b      	ldr	r3, [r3, #0]
 800eee0:	4a0e      	ldr	r2, [pc, #56]	; (800ef1c <Display::Display()+0x48>)
 800eee2:	6043      	str	r3, [r0, #4]
 800eee4:	2321      	movs	r3, #33	; 0x21
 800eee6:	7203      	strb	r3, [r0, #8]
 800eee8:	4b0d      	ldr	r3, [pc, #52]	; (800ef20 <Display::Display()+0x4c>)
 800eeea:	2102      	movs	r1, #2
 800eeec:	60c3      	str	r3, [r0, #12]
 800eeee:	2300      	movs	r3, #0
 800eef0:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800eef4:	8203      	strh	r3, [r0, #16]
 800eef6:	4b0b      	ldr	r3, [pc, #44]	; (800ef24 <Display::Display()+0x50>)
 800eef8:	6018      	str	r0, [r3, #0]
 800eefa:	f7ff ffc0 	bl	800ee7e <Display::Detect(display::Type)>
 800eefe:	4620      	mov	r0, r4
 800ef00:	f7ff ffa5 	bl	800ee4e <Display::Detect7Segment()>
 800ef04:	69a3      	ldr	r3, [r4, #24]
 800ef06:	b10b      	cbz	r3, 800ef0c <Display::Display()+0x38>
 800ef08:	f7f8 fef6 	bl	8007cf8 <display::timeout::gpio_init()>
 800ef0c:	69a0      	ldr	r0, [r4, #24]
 800ef0e:	f7ff ff61 	bl	800edd4 <Display::PrintInfo() [clone .isra.0]>
 800ef12:	4620      	mov	r0, r4
 800ef14:	bd10      	pop	{r4, pc}
 800ef16:	bf00      	nop
 800ef18:	2000a114 	andcs	sl, r0, r4, lsl r1
 800ef1c:	000493e0 	andeq	r9, r4, r0, ror #7
 800ef20:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ef24:	2000a008 	andcs	sl, r0, r8

0800ef28 <Ssd1306::~Ssd1306()>:
 800ef28:	4770      	bx	lr

0800ef2a <Ssd1306::SetCursor(unsigned int)>:
 800ef2a:	4770      	bx	lr

0800ef2c <Ssd1306::PrintInfo()>:
 800ef2c:	b410      	push	{r4}
 800ef2e:	4906      	ldr	r1, [pc, #24]	; (800ef48 <Ssd1306::PrintInfo()+0x1c>)
 800ef30:	7c44      	ldrb	r4, [r0, #17]
 800ef32:	7903      	ldrb	r3, [r0, #4]
 800ef34:	7942      	ldrb	r2, [r0, #5]
 800ef36:	4805      	ldr	r0, [pc, #20]	; (800ef4c <Ssd1306::PrintInfo()+0x20>)
 800ef38:	2c00      	cmp	r4, #0
 800ef3a:	bf08      	it	eq
 800ef3c:	4601      	moveq	r1, r0
 800ef3e:	4804      	ldr	r0, [pc, #16]	; (800ef50 <Ssd1306::PrintInfo()+0x24>)
 800ef40:	bc10      	pop	{r4}
 800ef42:	f000 be71 	b.w	800fc28 <printf>
 800ef46:	bf00      	nop
 800ef48:	080138f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, fp, ip, sp}
 800ef4c:	080138fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, fp, ip, sp}
 800ef50:	08013902 	stmdaeq	r1, {r1, r8, fp, ip, sp}

0800ef54 <Ssd1306::~Ssd1306()>:
 800ef54:	b510      	push	{r4, lr}
 800ef56:	4604      	mov	r4, r0
 800ef58:	f000 fb72 	bl	800f640 <operator delete(void*)>
 800ef5c:	4620      	mov	r0, r4
 800ef5e:	bd10      	pop	{r4, pc}

0800ef60 <HAL_I2C::Setup()>:
 800ef60:	b510      	push	{r4, lr}
 800ef62:	4604      	mov	r4, r0
 800ef64:	7800      	ldrb	r0, [r0, #0]
 800ef66:	f001 fe0d 	bl	8010b84 <gd32_i2c_set_address>
 800ef6a:	6860      	ldr	r0, [r4, #4]
 800ef6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef70:	f001 be00 	b.w	8010b74 <gd32_i2c_set_baudrate>

0800ef74 <Ssd1306::PutChar(int)>:
 800ef74:	b510      	push	{r4, lr}
 800ef76:	f1a1 0420 	sub.w	r4, r1, #32
 800ef7a:	2c5f      	cmp	r4, #95	; 0x5f
 800ef7c:	bf88      	it	hi
 800ef7e:	2400      	movhi	r4, #0
 800ef80:	3008      	adds	r0, #8
 800ef82:	f7ff ffed 	bl	800ef60 <HAL_I2C::Setup()>
 800ef86:	4804      	ldr	r0, [pc, #16]	; (800ef98 <Ssd1306::PutChar(int)+0x24>)
 800ef88:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800ef8c:	4420      	add	r0, r4
 800ef8e:	2107      	movs	r1, #7
 800ef90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef94:	f001 bdfc 	b.w	8010b90 <gd32_i2c_write>
 800ef98:	08013914 	stmdaeq	r1, {r2, r4, r8, fp, ip, sp}

0800ef9c <Ssd1306::PutString(char const*)>:
 800ef9c:	b538      	push	{r3, r4, r5, lr}
 800ef9e:	4605      	mov	r5, r0
 800efa0:	1e4c      	subs	r4, r1, #1
 800efa2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800efa6:	b901      	cbnz	r1, 800efaa <Ssd1306::PutString(char const*)+0xe>
 800efa8:	bd38      	pop	{r3, r4, r5, pc}
 800efaa:	4628      	mov	r0, r5
 800efac:	f7ff ffe2 	bl	800ef74 <Ssd1306::PutChar(int)>
 800efb0:	e7f7      	b.n	800efa2 <Ssd1306::PutString(char const*)+0x6>

0800efb2 <Ssd1306::Text(char const*, unsigned int)>:
 800efb2:	b570      	push	{r4, r5, r6, lr}
 800efb4:	7903      	ldrb	r3, [r0, #4]
 800efb6:	4605      	mov	r5, r0
 800efb8:	460c      	mov	r4, r1
 800efba:	4293      	cmp	r3, r2
 800efbc:	bf94      	ite	ls
 800efbe:	18ce      	addls	r6, r1, r3
 800efc0:	188e      	addhi	r6, r1, r2
 800efc2:	42b4      	cmp	r4, r6
 800efc4:	d100      	bne.n	800efc8 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800efc6:	bd70      	pop	{r4, r5, r6, pc}
 800efc8:	4628      	mov	r0, r5
 800efca:	f814 1b01 	ldrb.w	r1, [r4], #1
 800efce:	f7ff ffd1 	bl	800ef74 <Ssd1306::PutChar(int)>
 800efd2:	e7f6      	b.n	800efc2 <Ssd1306::Text(char const*, unsigned int)+0x10>

0800efd4 <Ssd1306::InitMembers()>:
 800efd4:	7c03      	ldrb	r3, [r0, #16]
 800efd6:	b14b      	cbz	r3, 800efec <Ssd1306::InitMembers()+0x18>
 800efd8:	3b01      	subs	r3, #1
 800efda:	2b01      	cmp	r3, #1
 800efdc:	d909      	bls.n	800eff2 <Ssd1306::InitMembers()+0x1e>
 800efde:	2308      	movs	r3, #8
 800efe0:	2204      	movs	r2, #4
 800efe2:	2115      	movs	r1, #21
 800efe4:	7143      	strb	r3, [r0, #5]
 800efe6:	7101      	strb	r1, [r0, #4]
 800efe8:	6142      	str	r2, [r0, #20]
 800efea:	4770      	bx	lr
 800efec:	2308      	movs	r3, #8
 800efee:	461a      	mov	r2, r3
 800eff0:	e7f7      	b.n	800efe2 <Ssd1306::InitMembers()+0xe>
 800eff2:	2304      	movs	r3, #4
 800eff4:	e7fb      	b.n	800efee <Ssd1306::InitMembers()+0x1a>
	...

0800eff8 <Ssd1306::Ssd1306(TOledPanel)>:
 800eff8:	4a08      	ldr	r2, [pc, #32]	; (800f01c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800effa:	b508      	push	{r3, lr}
 800effc:	6002      	str	r2, [r0, #0]
 800effe:	227f      	movs	r2, #127	; 0x7f
 800f000:	80c2      	strh	r2, [r0, #6]
 800f002:	223c      	movs	r2, #60	; 0x3c
 800f004:	7202      	strb	r2, [r0, #8]
 800f006:	4a06      	ldr	r2, [pc, #24]	; (800f020 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800f008:	7401      	strb	r1, [r0, #16]
 800f00a:	60c2      	str	r2, [r0, #12]
 800f00c:	2200      	movs	r2, #0
 800f00e:	7442      	strb	r2, [r0, #17]
 800f010:	4a04      	ldr	r2, [pc, #16]	; (800f024 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800f012:	6010      	str	r0, [r2, #0]
 800f014:	f7ff ffde 	bl	800efd4 <Ssd1306::InitMembers()>
 800f018:	bd08      	pop	{r3, pc}
 800f01a:	bf00      	nop
 800f01c:	08013bec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, fp, ip, sp}
 800f020:	00061a80 	andeq	r1, r6, r0, lsl #21
 800f024:	2000a094 	mulcs	r0, r4, r0

0800f028 <Ssd1306::SendCommand(unsigned char)>:
 800f028:	2300      	movs	r3, #0
 800f02a:	b507      	push	{r0, r1, r2, lr}
 800f02c:	3008      	adds	r0, #8
 800f02e:	f88d 3004 	strb.w	r3, [sp, #4]
 800f032:	f88d 1005 	strb.w	r1, [sp, #5]
 800f036:	f7ff ff93 	bl	800ef60 <HAL_I2C::Setup()>
 800f03a:	2102      	movs	r1, #2
 800f03c:	a801      	add	r0, sp, #4
 800f03e:	f001 fda7 	bl	8010b90 <gd32_i2c_write>
 800f042:	b003      	add	sp, #12
 800f044:	f85d fb04 	ldr.w	pc, [sp], #4

0800f048 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800f048:	2914      	cmp	r1, #20
 800f04a:	b570      	push	{r4, r5, r6, lr}
 800f04c:	4605      	mov	r5, r0
 800f04e:	4616      	mov	r6, r2
 800f050:	d81c      	bhi.n	800f08c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f052:	7943      	ldrb	r3, [r0, #5]
 800f054:	4293      	cmp	r3, r2
 800f056:	d919      	bls.n	800f08c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f058:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f05c:	7c43      	ldrb	r3, [r0, #17]
 800f05e:	004c      	lsls	r4, r1, #1
 800f060:	b2e4      	uxtb	r4, r4
 800f062:	b10b      	cbz	r3, 800f068 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800f064:	3404      	adds	r4, #4
 800f066:	b2e4      	uxtb	r4, r4
 800f068:	4628      	mov	r0, r5
 800f06a:	f004 010e 	and.w	r1, r4, #14
 800f06e:	f7ff ffdb 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f072:	0921      	lsrs	r1, r4, #4
 800f074:	4628      	mov	r0, r5
 800f076:	f041 0110 	orr.w	r1, r1, #16
 800f07a:	f7ff ffd5 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f07e:	4628      	mov	r0, r5
 800f080:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800f084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f088:	f7ff bfce 	b.w	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f08c:	bd70      	pop	{r4, r5, r6, pc}

0800f08e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800f08e:	b570      	push	{r4, r5, r6, lr}
 800f090:	461e      	mov	r6, r3
 800f092:	7943      	ldrb	r3, [r0, #5]
 800f094:	4604      	mov	r4, r0
 800f096:	428b      	cmp	r3, r1
 800f098:	4615      	mov	r5, r2
 800f09a:	d30b      	bcc.n	800f0b4 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 800f09c:	3901      	subs	r1, #1
 800f09e:	b2ca      	uxtb	r2, r1
 800f0a0:	2100      	movs	r1, #0
 800f0a2:	f7ff ffd1 	bl	800f048 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f0a6:	4632      	mov	r2, r6
 800f0a8:	4629      	mov	r1, r5
 800f0aa:	4620      	mov	r0, r4
 800f0ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0b0:	f7ff bf7f 	b.w	800efb2 <Ssd1306::Text(char const*, unsigned int)>
 800f0b4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f0b8 <Ssd1306::ClearLine(unsigned char)>:
 800f0b8:	b538      	push	{r3, r4, r5, lr}
 800f0ba:	7943      	ldrb	r3, [r0, #5]
 800f0bc:	4605      	mov	r5, r0
 800f0be:	428b      	cmp	r3, r1
 800f0c0:	d314      	bcc.n	800f0ec <Ssd1306::ClearLine(unsigned char)+0x34>
 800f0c2:	3901      	subs	r1, #1
 800f0c4:	b2cc      	uxtb	r4, r1
 800f0c6:	4622      	mov	r2, r4
 800f0c8:	2100      	movs	r1, #0
 800f0ca:	f7ff ffbd 	bl	800f048 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f0ce:	f105 0008 	add.w	r0, r5, #8
 800f0d2:	f7ff ff45 	bl	800ef60 <HAL_I2C::Setup()>
 800f0d6:	2181      	movs	r1, #129	; 0x81
 800f0d8:	4805      	ldr	r0, [pc, #20]	; (800f0f0 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800f0da:	f001 fd59 	bl	8010b90 <gd32_i2c_write>
 800f0de:	4622      	mov	r2, r4
 800f0e0:	4628      	mov	r0, r5
 800f0e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f0e6:	2100      	movs	r1, #0
 800f0e8:	f7ff bfae 	b.w	800f048 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f0ec:	bd38      	pop	{r3, r4, r5, pc}
 800f0ee:	bf00      	nop
 800f0f0:	2000a00c 	andcs	sl, r0, ip

0800f0f4 <Ssd1306::SetSleep(bool)>:
 800f0f4:	b111      	cbz	r1, 800f0fc <Ssd1306::SetSleep(bool)+0x8>
 800f0f6:	21ae      	movs	r1, #174	; 0xae
 800f0f8:	f7ff bf96 	b.w	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f0fc:	21af      	movs	r1, #175	; 0xaf
 800f0fe:	e7fb      	b.n	800f0f8 <Ssd1306::SetSleep(bool)+0x4>

0800f100 <Ssd1306::SetContrast(unsigned char)>:
 800f100:	b538      	push	{r3, r4, r5, lr}
 800f102:	4604      	mov	r4, r0
 800f104:	460d      	mov	r5, r1
 800f106:	7181      	strb	r1, [r0, #6]
 800f108:	2181      	movs	r1, #129	; 0x81
 800f10a:	f7ff ff8d 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f10e:	4629      	mov	r1, r5
 800f110:	4620      	mov	r0, r4
 800f112:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f116:	f7ff bf87 	b.w	800f028 <Ssd1306::SendCommand(unsigned char)>

0800f11a <Ssd1306::SetFlipVertically(bool)>:
 800f11a:	b510      	push	{r4, lr}
 800f11c:	4604      	mov	r4, r0
 800f11e:	71c1      	strb	r1, [r0, #7]
 800f120:	b141      	cbz	r1, 800f134 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800f122:	21c0      	movs	r1, #192	; 0xc0
 800f124:	f7ff ff80 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f128:	21a0      	movs	r1, #160	; 0xa0
 800f12a:	4620      	mov	r0, r4
 800f12c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f130:	f7ff bf7a 	b.w	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f134:	21c8      	movs	r1, #200	; 0xc8
 800f136:	f7ff ff77 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f13a:	21a1      	movs	r1, #161	; 0xa1
 800f13c:	e7f5      	b.n	800f12a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800f140 <Ssd1306::CheckSH1106()>:
 800f140:	b530      	push	{r4, r5, lr}
 800f142:	4604      	mov	r4, r0
 800f144:	b087      	sub	sp, #28
 800f146:	2100      	movs	r1, #0
 800f148:	f7ff ff6e 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f14c:	2190      	movs	r1, #144	; 0x90
 800f14e:	4620      	mov	r0, r4
 800f150:	f7ff ff6a 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f154:	21b0      	movs	r1, #176	; 0xb0
 800f156:	4620      	mov	r0, r4
 800f158:	f7ff ff66 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f15c:	4b22      	ldr	r3, [pc, #136]	; (800f1e8 <Ssd1306::CheckSH1106()+0xa8>)
 800f15e:	f104 0508 	add.w	r5, r4, #8
 800f162:	6818      	ldr	r0, [r3, #0]
 800f164:	791b      	ldrb	r3, [r3, #4]
 800f166:	9002      	str	r0, [sp, #8]
 800f168:	4628      	mov	r0, r5
 800f16a:	f88d 300c 	strb.w	r3, [sp, #12]
 800f16e:	f7ff fef7 	bl	800ef60 <HAL_I2C::Setup()>
 800f172:	2105      	movs	r1, #5
 800f174:	a802      	add	r0, sp, #8
 800f176:	f001 fd0b 	bl	8010b90 <gd32_i2c_write>
 800f17a:	2100      	movs	r1, #0
 800f17c:	4620      	mov	r0, r4
 800f17e:	f7ff ff53 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f182:	2190      	movs	r1, #144	; 0x90
 800f184:	4620      	mov	r0, r4
 800f186:	f7ff ff4f 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f18a:	21b0      	movs	r1, #176	; 0xb0
 800f18c:	4620      	mov	r0, r4
 800f18e:	f7ff ff4b 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f192:	2300      	movs	r3, #0
 800f194:	9304      	str	r3, [sp, #16]
 800f196:	f88d 3014 	strb.w	r3, [sp, #20]
 800f19a:	2340      	movs	r3, #64	; 0x40
 800f19c:	4628      	mov	r0, r5
 800f19e:	f88d 3007 	strb.w	r3, [sp, #7]
 800f1a2:	f7ff fedd 	bl	800ef60 <HAL_I2C::Setup()>
 800f1a6:	2101      	movs	r1, #1
 800f1a8:	f10d 0007 	add.w	r0, sp, #7
 800f1ac:	f001 fcf0 	bl	8010b90 <gd32_i2c_write>
 800f1b0:	4628      	mov	r0, r5
 800f1b2:	f7ff fed5 	bl	800ef60 <HAL_I2C::Setup()>
 800f1b6:	2105      	movs	r1, #5
 800f1b8:	a804      	add	r0, sp, #16
 800f1ba:	f001 fd4f 	bl	8010c5c <gd32_i2c_read>
 800f1be:	2004      	movs	r0, #4
 800f1c0:	aa02      	add	r2, sp, #8
 800f1c2:	a904      	add	r1, sp, #16
 800f1c4:	3801      	subs	r0, #1
 800f1c6:	d201      	bcs.n	800f1cc <Ssd1306::CheckSH1106()+0x8c>
 800f1c8:	2300      	movs	r3, #0
 800f1ca:	e006      	b.n	800f1da <Ssd1306::CheckSH1106()+0x9a>
 800f1cc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800f1d0:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800f1d4:	42ab      	cmp	r3, r5
 800f1d6:	d0f5      	beq.n	800f1c4 <Ssd1306::CheckSH1106()+0x84>
 800f1d8:	1b5b      	subs	r3, r3, r5
 800f1da:	fab3 f383 	clz	r3, r3
 800f1de:	095b      	lsrs	r3, r3, #5
 800f1e0:	7463      	strb	r3, [r4, #17]
 800f1e2:	b007      	add	sp, #28
 800f1e4:	bd30      	pop	{r4, r5, pc}
 800f1e6:	bf00      	nop
 800f1e8:	0801390e 	stmdaeq	r1, {r1, r2, r3, r8, fp, ip, sp}

0800f1ec <Ssd1306::Cls()>:
 800f1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1f0:	4604      	mov	r4, r0
 800f1f2:	2600      	movs	r6, #0
 800f1f4:	7c45      	ldrb	r5, [r0, #17]
 800f1f6:	00ad      	lsls	r5, r5, #2
 800f1f8:	b2ed      	uxtb	r5, r5
 800f1fa:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800f1fe:	f045 0810 	orr.w	r8, r5, #16
 800f202:	b2ff      	uxtb	r7, r7
 800f204:	6963      	ldr	r3, [r4, #20]
 800f206:	4629      	mov	r1, r5
 800f208:	42b3      	cmp	r3, r6
 800f20a:	4620      	mov	r0, r4
 800f20c:	d80b      	bhi.n	800f226 <Ssd1306::Cls()+0x3a>
 800f20e:	f7ff ff0b 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f212:	4641      	mov	r1, r8
 800f214:	4620      	mov	r0, r4
 800f216:	f7ff ff07 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f21a:	4620      	mov	r0, r4
 800f21c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f220:	21b0      	movs	r1, #176	; 0xb0
 800f222:	f7ff bf01 	b.w	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f226:	f7ff feff 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f22a:	4641      	mov	r1, r8
 800f22c:	4620      	mov	r0, r4
 800f22e:	f7ff fefb 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f232:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800f236:	4620      	mov	r0, r4
 800f238:	b2c9      	uxtb	r1, r1
 800f23a:	f7ff fef5 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f23e:	7c23      	ldrb	r3, [r4, #16]
 800f240:	b123      	cbz	r3, 800f24c <Ssd1306::Cls()+0x60>
 800f242:	3b01      	subs	r3, #1
 800f244:	2b01      	cmp	r3, #1
 800f246:	d901      	bls.n	800f24c <Ssd1306::Cls()+0x60>
 800f248:	3601      	adds	r6, #1
 800f24a:	e7db      	b.n	800f204 <Ssd1306::Cls()+0x18>
 800f24c:	f104 0008 	add.w	r0, r4, #8
 800f250:	f7ff fe86 	bl	800ef60 <HAL_I2C::Setup()>
 800f254:	4639      	mov	r1, r7
 800f256:	4802      	ldr	r0, [pc, #8]	; (800f260 <Ssd1306::Cls()+0x74>)
 800f258:	f001 fc9a 	bl	8010b90 <gd32_i2c_write>
 800f25c:	e7f4      	b.n	800f248 <Ssd1306::Cls()+0x5c>
 800f25e:	bf00      	nop
 800f260:	2000a00c 	andcs	sl, r0, ip

0800f264 <Ssd1306::Start()>:
 800f264:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f266:	7a04      	ldrb	r4, [r0, #8]
 800f268:	68c6      	ldr	r6, [r0, #12]
 800f26a:	4605      	mov	r5, r0
 800f26c:	4620      	mov	r0, r4
 800f26e:	f001 fc89 	bl	8010b84 <gd32_i2c_set_address>
 800f272:	4630      	mov	r0, r6
 800f274:	f001 fc7e 	bl	8010b74 <gd32_i2c_set_baudrate>
 800f278:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f27c:	2b07      	cmp	r3, #7
 800f27e:	d902      	bls.n	800f286 <Ssd1306::Start()+0x22>
 800f280:	3c50      	subs	r4, #80	; 0x50
 800f282:	2c0f      	cmp	r4, #15
 800f284:	d80f      	bhi.n	800f2a6 <Ssd1306::Start()+0x42>
 800f286:	2101      	movs	r1, #1
 800f288:	f10d 0007 	add.w	r0, sp, #7
 800f28c:	f001 fce6 	bl	8010c5c <gd32_i2c_read>
 800f290:	fab0 f480 	clz	r4, r0
 800f294:	0964      	lsrs	r4, r4, #5
 800f296:	b35c      	cbz	r4, 800f2f0 <Ssd1306::Start()+0x8c>
 800f298:	7c2e      	ldrb	r6, [r5, #16]
 800f29a:	b14e      	cbz	r6, 800f2b0 <Ssd1306::Start()+0x4c>
 800f29c:	3e01      	subs	r6, #1
 800f29e:	2e01      	cmp	r6, #1
 800f2a0:	d929      	bls.n	800f2f6 <Ssd1306::Start()+0x92>
 800f2a2:	2400      	movs	r4, #0
 800f2a4:	e024      	b.n	800f2f0 <Ssd1306::Start()+0x8c>
 800f2a6:	2100      	movs	r1, #0
 800f2a8:	4608      	mov	r0, r1
 800f2aa:	f001 fc71 	bl	8010b90 <gd32_i2c_write>
 800f2ae:	e7ef      	b.n	800f290 <Ssd1306::Start()+0x2c>
 800f2b0:	4f16      	ldr	r7, [pc, #88]	; (800f30c <Ssd1306::Start()+0xa8>)
 800f2b2:	4628      	mov	r0, r5
 800f2b4:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f2b8:	3601      	adds	r6, #1
 800f2ba:	f7ff feb5 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f2be:	2e18      	cmp	r6, #24
 800f2c0:	d1f7      	bne.n	800f2b2 <Ssd1306::Start()+0x4e>
 800f2c2:	2300      	movs	r3, #0
 800f2c4:	4a12      	ldr	r2, [pc, #72]	; (800f310 <Ssd1306::Start()+0xac>)
 800f2c6:	4618      	mov	r0, r3
 800f2c8:	4611      	mov	r1, r2
 800f2ca:	3301      	adds	r3, #1
 800f2cc:	2b86      	cmp	r3, #134	; 0x86
 800f2ce:	f802 0b01 	strb.w	r0, [r2], #1
 800f2d2:	d1fa      	bne.n	800f2ca <Ssd1306::Start()+0x66>
 800f2d4:	2340      	movs	r3, #64	; 0x40
 800f2d6:	4628      	mov	r0, r5
 800f2d8:	700b      	strb	r3, [r1, #0]
 800f2da:	f7ff ff31 	bl	800f140 <Ssd1306::CheckSH1106()>
 800f2de:	4628      	mov	r0, r5
 800f2e0:	f7ff ff84 	bl	800f1ec <Ssd1306::Cls()>
 800f2e4:	21af      	movs	r1, #175	; 0xaf
 800f2e6:	4628      	mov	r0, r5
 800f2e8:	f7ff fe9e 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f2ec:	2301      	movs	r3, #1
 800f2ee:	71eb      	strb	r3, [r5, #7]
 800f2f0:	4620      	mov	r0, r4
 800f2f2:	b003      	add	sp, #12
 800f2f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f2f6:	2600      	movs	r6, #0
 800f2f8:	4f06      	ldr	r7, [pc, #24]	; (800f314 <Ssd1306::Start()+0xb0>)
 800f2fa:	4628      	mov	r0, r5
 800f2fc:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f300:	3601      	adds	r6, #1
 800f302:	f7ff fe91 	bl	800f028 <Ssd1306::SendCommand(unsigned char)>
 800f306:	2e18      	cmp	r6, #24
 800f308:	d1f7      	bne.n	800f2fa <Ssd1306::Start()+0x96>
 800f30a:	e7da      	b.n	800f2c2 <Ssd1306::Start()+0x5e>
 800f30c:	08013bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, sp}
 800f310:	2000a00c 	andcs	sl, r0, ip
 800f314:	08013bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, sp}

0800f318 <console_putc>:
 800f318:	f000 bdd8 	b.w	800fecc <uart0_putc>

0800f31c <console_puts>:
 800f31c:	f000 bdf6 	b.w	800ff0c <uart0_puts>

0800f320 <console_set_fg_color>:
 800f320:	2807      	cmp	r0, #7
 800f322:	d810      	bhi.n	800f346 <console_set_fg_color+0x26>
 800f324:	e8df f000 	tbb	[pc, r0]
 800f328:	0b090704 	bleq	8250f40 <__exidx_end+0x23d220>
 800f32c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800f2f8 <Ssd1306::Start()+0x94>
 800f330:	4806      	ldr	r0, [pc, #24]	; (800f34c <console_set_fg_color+0x2c>)
 800f332:	f000 bdeb 	b.w	800ff0c <uart0_puts>
 800f336:	4806      	ldr	r0, [pc, #24]	; (800f350 <console_set_fg_color+0x30>)
 800f338:	e7fb      	b.n	800f332 <console_set_fg_color+0x12>
 800f33a:	4806      	ldr	r0, [pc, #24]	; (800f354 <console_set_fg_color+0x34>)
 800f33c:	e7f9      	b.n	800f332 <console_set_fg_color+0x12>
 800f33e:	4806      	ldr	r0, [pc, #24]	; (800f358 <console_set_fg_color+0x38>)
 800f340:	e7f7      	b.n	800f332 <console_set_fg_color+0x12>
 800f342:	4806      	ldr	r0, [pc, #24]	; (800f35c <console_set_fg_color+0x3c>)
 800f344:	e7f5      	b.n	800f332 <console_set_fg_color+0x12>
 800f346:	4806      	ldr	r0, [pc, #24]	; (800f360 <console_set_fg_color+0x40>)
 800f348:	e7f3      	b.n	800f332 <console_set_fg_color+0x12>
 800f34a:	bf00      	nop
 800f34c:	08013c2a 	stmdaeq	r1, {r1, r3, r5, sl, fp, ip, sp}
 800f350:	08013c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, sp}
 800f354:	08013c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp}
 800f358:	08013c3c 	stmdaeq	r1, {r2, r3, r4, r5, sl, fp, ip, sp}
 800f35c:	08011f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp, ip}
 800f360:	08013c42 	stmdaeq	r1, {r1, r6, sl, fp, ip, sp}

0800f364 <console_error>:
 800f364:	b510      	push	{r4, lr}
 800f366:	4604      	mov	r4, r0
 800f368:	4805      	ldr	r0, [pc, #20]	; (800f380 <console_error+0x1c>)
 800f36a:	f000 fdcf 	bl	800ff0c <uart0_puts>
 800f36e:	4620      	mov	r0, r4
 800f370:	f000 fdcc 	bl	800ff0c <uart0_puts>
 800f374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f378:	4802      	ldr	r0, [pc, #8]	; (800f384 <console_error+0x20>)
 800f37a:	f000 bdc7 	b.w	800ff0c <uart0_puts>
 800f37e:	bf00      	nop
 800f380:	08013c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, sp}
 800f384:	08011f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp, ip}

0800f388 <console_status>:
 800f388:	b510      	push	{r4, lr}
 800f38a:	460c      	mov	r4, r1
 800f38c:	b280      	uxth	r0, r0
 800f38e:	f7ff ffc7 	bl	800f320 <console_set_fg_color>
 800f392:	4807      	ldr	r0, [pc, #28]	; (800f3b0 <console_status+0x28>)
 800f394:	f000 fdba 	bl	800ff0c <uart0_puts>
 800f398:	4620      	mov	r0, r4
 800f39a:	f000 fdb7 	bl	800ff0c <uart0_puts>
 800f39e:	200a      	movs	r0, #10
 800f3a0:	f000 fd94 	bl	800fecc <uart0_putc>
 800f3a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f3a8:	4802      	ldr	r0, [pc, #8]	; (800f3b4 <console_status+0x2c>)
 800f3aa:	f000 bdaf 	b.w	800ff0c <uart0_puts>
 800f3ae:	bf00      	nop
 800f3b0:	08013c24 	stmdaeq	r1, {r2, r5, sl, fp, ip, sp}
 800f3b4:	08011f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp, ip}

0800f3b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800f3b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3bc:	4617      	mov	r7, r2
 800f3be:	461e      	mov	r6, r3
 800f3c0:	4d14      	ldr	r5, [pc, #80]	; (800f414 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800f3c2:	4b15      	ldr	r3, [pc, #84]	; (800f418 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800f3c4:	b086      	sub	sp, #24
 800f3c6:	6018      	str	r0, [r3, #0]
 800f3c8:	4604      	mov	r4, r0
 800f3ca:	f105 0803 	add.w	r8, r5, #3
 800f3ce:	2203      	movs	r2, #3
 800f3d0:	4628      	mov	r0, r5
 800f3d2:	f000 f9f8 	bl	800f7c6 <memmove>
 800f3d6:	4639      	mov	r1, r7
 800f3d8:	220b      	movs	r2, #11
 800f3da:	4640      	mov	r0, r8
 800f3dc:	f000 f9f3 	bl	800f7c6 <memmove>
 800f3e0:	f105 030e 	add.w	r3, r5, #14
 800f3e4:	4631      	mov	r1, r6
 800f3e6:	2208      	movs	r2, #8
 800f3e8:	4618      	mov	r0, r3
 800f3ea:	f000 f9ec 	bl	800f7c6 <memmove>
 800f3ee:	2308      	movs	r3, #8
 800f3f0:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800f3f4:	230b      	movs	r3, #11
 800f3f6:	9302      	str	r3, [sp, #8]
 800f3f8:	4b08      	ldr	r3, [pc, #32]	; (800f41c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800f3fa:	9005      	str	r0, [sp, #20]
 800f3fc:	e9cd 5300 	strd	r5, r3, [sp]
 800f400:	213f      	movs	r1, #63	; 0x3f
 800f402:	2303      	movs	r3, #3
 800f404:	4a06      	ldr	r2, [pc, #24]	; (800f420 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800f406:	4807      	ldr	r0, [pc, #28]	; (800f424 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800f408:	f000 fc36 	bl	800fc78 <snprintf>
 800f40c:	4620      	mov	r0, r4
 800f40e:	b006      	add	sp, #24
 800f410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f414:	2000a098 	mulcs	r0, r8, r0
 800f418:	2000a0f0 	strdcs	sl, [r0], -r0
 800f41c:	0801261a 	stmdaeq	r1, {r1, r3, r4, r9, sl, sp}
 800f420:	08013c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, sp}
 800f424:	2000a0ae 	andcs	sl, r0, lr, lsr #1

0800f428 <FirmwareVersion::Print(char const*)>:
 800f428:	b510      	push	{r4, lr}
 800f42a:	460c      	mov	r4, r1
 800f42c:	4804      	ldr	r0, [pc, #16]	; (800f440 <FirmwareVersion::Print(char const*)+0x18>)
 800f42e:	f000 fc4b 	bl	800fcc8 <puts>
 800f432:	b124      	cbz	r4, 800f43e <FirmwareVersion::Print(char const*)+0x16>
 800f434:	4620      	mov	r0, r4
 800f436:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f43a:	f000 bc45 	b.w	800fcc8 <puts>
 800f43e:	bd10      	pop	{r4, pc}
 800f440:	2000a0ae 	andcs	sl, r0, lr, lsr #1

0800f444 <LedBlink::LedBlink()>:
 800f444:	b538      	push	{r3, r4, r5, lr}
 800f446:	2205      	movs	r2, #5
 800f448:	2300      	movs	r3, #0
 800f44a:	e9c0 3200 	strd	r3, r2, [r0]
 800f44e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800f452:	6083      	str	r3, [r0, #8]
 800f454:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800f458:	6143      	str	r3, [r0, #20]
 800f45a:	4b09      	ldr	r3, [pc, #36]	; (800f480 <LedBlink::LedBlink()+0x3c>)
 800f45c:	4d09      	ldr	r5, [pc, #36]	; (800f484 <LedBlink::LedBlink()+0x40>)
 800f45e:	4604      	mov	r4, r0
 800f460:	6018      	str	r0, [r3, #0]
 800f462:	f240 6004 	movw	r0, #1540	; 0x604
 800f466:	f000 ffc5 	bl	80103f4 <rcu_periph_clock_enable>
 800f46a:	4628      	mov	r0, r5
 800f46c:	2301      	movs	r3, #1
 800f46e:	2203      	movs	r2, #3
 800f470:	2110      	movs	r1, #16
 800f472:	f000 ff27 	bl	80102c4 <gpio_init>
 800f476:	2301      	movs	r3, #1
 800f478:	4620      	mov	r0, r4
 800f47a:	616b      	str	r3, [r5, #20]
 800f47c:	bd38      	pop	{r3, r4, r5, pc}
 800f47e:	bf00      	nop
 800f480:	2000a0f4 	strdcs	sl, [r0], -r4
 800f484:	40011000 	andmi	r1, r1, r0

0800f488 <LedBlink::SetMode(ledblink::Mode)>:
 800f488:	6843      	ldr	r3, [r0, #4]
 800f48a:	428b      	cmp	r3, r1
 800f48c:	d02f      	beq.n	800f4ee <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f48e:	6041      	str	r1, [r0, #4]
 800f490:	2904      	cmp	r1, #4
 800f492:	d822      	bhi.n	800f4da <LedBlink::SetMode(ledblink::Mode)+0x52>
 800f494:	e8df f001 	tbb	[pc, r1]
 800f498:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800f49c:	23ff001d 	mvnscs	r0, #29
 800f4a0:	6003      	str	r3, [r0, #0]
 800f4a2:	2300      	movs	r3, #0
 800f4a4:	2201      	movs	r2, #1
 800f4a6:	60c3      	str	r3, [r0, #12]
 800f4a8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f4ac:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f4b0:	611a      	str	r2, [r3, #16]
 800f4b2:	6880      	ldr	r0, [r0, #8]
 800f4b4:	b1d8      	cbz	r0, 800f4ee <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f4b6:	6803      	ldr	r3, [r0, #0]
 800f4b8:	689b      	ldr	r3, [r3, #8]
 800f4ba:	4718      	bx	r3
 800f4bc:	2301      	movs	r3, #1
 800f4be:	6003      	str	r3, [r0, #0]
 800f4c0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f4c4:	60c3      	str	r3, [r0, #12]
 800f4c6:	e7f4      	b.n	800f4b2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f4c8:	2303      	movs	r3, #3
 800f4ca:	6003      	str	r3, [r0, #0]
 800f4cc:	f240 134d 	movw	r3, #333	; 0x14d
 800f4d0:	e7f8      	b.n	800f4c4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f4d2:	2305      	movs	r3, #5
 800f4d4:	6003      	str	r3, [r0, #0]
 800f4d6:	23c8      	movs	r3, #200	; 0xc8
 800f4d8:	e7f4      	b.n	800f4c4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f4da:	2300      	movs	r3, #0
 800f4dc:	2201      	movs	r2, #1
 800f4de:	6003      	str	r3, [r0, #0]
 800f4e0:	60c3      	str	r3, [r0, #12]
 800f4e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f4e6:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f4ea:	615a      	str	r2, [r3, #20]
 800f4ec:	e7e1      	b.n	800f4b2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f4ee:	4770      	bx	lr

0800f4f0 <Hardware::Hardware()>:
 800f4f0:	b570      	push	{r4, r5, r6, lr}
 800f4f2:	2400      	movs	r4, #0
 800f4f4:	4b24      	ldr	r3, [pc, #144]	; (800f588 <Hardware::Hardware()+0x98>)
 800f4f6:	b090      	sub	sp, #64	; 0x40
 800f4f8:	7004      	strb	r4, [r0, #0]
 800f4fa:	6018      	str	r0, [r3, #0]
 800f4fc:	4605      	mov	r5, r0
 800f4fe:	f7f7 ffff 	bl	8007500 <console_init>
 800f502:	f000 fd13 	bl	800ff2c <systick_config>
 800f506:	f001 fd27 	bl	8010f58 <udelay_init()>
 800f50a:	f001 fd23 	bl	8010f54 <micros_init()>
 800f50e:	f240 701b 	movw	r0, #1819	; 0x71b
 800f512:	f000 ff6f 	bl	80103f4 <rcu_periph_clock_enable>
 800f516:	f240 701c 	movw	r0, #1820	; 0x71c
 800f51a:	f000 ff6b 	bl	80103f4 <rcu_periph_clock_enable>
 800f51e:	4e1b      	ldr	r6, [pc, #108]	; (800f58c <Hardware::Hardware()+0x9c>)
 800f520:	f000 ff60 	bl	80103e4 <pmu_backup_write_enable>
 800f524:	4621      	mov	r1, r4
 800f526:	2002      	movs	r0, #2
 800f528:	f000 fd9e 	bl	8010068 <bkp_data_write>
 800f52c:	f240 7004 	movw	r0, #1796	; 0x704
 800f530:	f000 ff60 	bl	80103f4 <rcu_periph_clock_enable>
 800f534:	4630      	mov	r0, r6
 800f536:	f001 f8ab 	bl	8010690 <timer_deinit>
 800f53a:	236b      	movs	r3, #107	; 0x6b
 800f53c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f540:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f544:	a903      	add	r1, sp, #12
 800f546:	4630      	mov	r0, r6
 800f548:	9305      	str	r3, [sp, #20]
 800f54a:	f001 f903 	bl	8010754 <timer_init>
 800f54e:	4630      	mov	r0, r6
 800f550:	f001 f958 	bl	8010804 <timer_enable>
 800f554:	f001 fa80 	bl	8010a58 <gd32_adc_init()>
 800f558:	220b      	movs	r2, #11
 800f55a:	2309      	movs	r3, #9
 800f55c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800f560:	237a      	movs	r3, #122	; 0x7a
 800f562:	a807      	add	r0, sp, #28
 800f564:	930c      	str	r3, [sp, #48]	; 0x30
 800f566:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800f56a:	9407      	str	r4, [sp, #28]
 800f56c:	940f      	str	r4, [sp, #60]	; 0x3c
 800f56e:	f000 fc03 	bl	800fd78 <mktime>
 800f572:	4621      	mov	r1, r4
 800f574:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800f578:	a801      	add	r0, sp, #4
 800f57a:	f000 fc73 	bl	800fe64 <settimeofday>
 800f57e:	f001 fac5 	bl	8010b0c <gd32_i2c_begin>
 800f582:	4628      	mov	r0, r5
 800f584:	b010      	add	sp, #64	; 0x40
 800f586:	bd70      	pop	{r4, r5, r6, pc}
 800f588:	2000a0f8 	strdcs	sl, [r0], -r8
 800f58c:	40001000 	andmi	r1, r0, r0

0800f590 <Hardware::GetUuid(unsigned char*)>:
 800f590:	4a0c      	ldr	r2, [pc, #48]	; (800f5c4 <Hardware::GetUuid(unsigned char*)+0x34>)
 800f592:	b084      	sub	sp, #16
 800f594:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800f598:	9300      	str	r3, [sp, #0]
 800f59a:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 800f59e:	9001      	str	r0, [sp, #4]
 800f5a0:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800f5a4:	4403      	add	r3, r0
 800f5a6:	4413      	add	r3, r2
 800f5a8:	9202      	str	r2, [sp, #8]
 800f5aa:	466a      	mov	r2, sp
 800f5ac:	9303      	str	r3, [sp, #12]
 800f5ae:	1e4b      	subs	r3, r1, #1
 800f5b0:	310f      	adds	r1, #15
 800f5b2:	428b      	cmp	r3, r1
 800f5b4:	d101      	bne.n	800f5ba <Hardware::GetUuid(unsigned char*)+0x2a>
 800f5b6:	b004      	add	sp, #16
 800f5b8:	4770      	bx	lr
 800f5ba:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f5be:	f803 0f01 	strb.w	r0, [r3, #1]!
 800f5c2:	e7f6      	b.n	800f5b2 <Hardware::GetUuid(unsigned char*)+0x22>
 800f5c4:	1ffff000 	svcne	0x00fff000

0800f5c8 <Hardware::Reboot()>:
 800f5c8:	b508      	push	{r3, lr}
 800f5ca:	2300      	movs	r3, #0
 800f5cc:	4604      	mov	r4, r0
 800f5ce:	7003      	strb	r3, [r0, #0]
 800f5d0:	2104      	movs	r1, #4
 800f5d2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f5d6:	f000 fe4b 	bl	8010270 <fwdgt_config>
 800f5da:	4620      	mov	r0, r4
 800f5dc:	f7f8 fba6 	bl	8007d2c <Hardware::RebootHandler()>
 800f5e0:	2102      	movs	r1, #2
 800f5e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f5e6:	f000 fe43 	bl	8010270 <fwdgt_config>
 800f5ea:	2801      	cmp	r0, #1
 800f5ec:	bf0c      	ite	eq
 800f5ee:	2301      	moveq	r3, #1
 800f5f0:	2300      	movne	r3, #0
 800f5f2:	7023      	strb	r3, [r4, #0]
 800f5f4:	d101      	bne.n	800f5fa <Hardware::Reboot()+0x32>
 800f5f6:	f000 fe2b 	bl	8010250 <fwdgt_enable>
 800f5fa:	2208      	movs	r2, #8
 800f5fc:	4b0d      	ldr	r3, [pc, #52]	; (800f634 <Hardware::Reboot()+0x6c>)
 800f5fe:	2501      	movs	r5, #1
 800f600:	681b      	ldr	r3, [r3, #0]
 800f602:	480d      	ldr	r0, [pc, #52]	; (800f638 <Hardware::Reboot()+0x70>)
 800f604:	601a      	str	r2, [r3, #0]
 800f606:	227d      	movs	r2, #125	; 0x7d
 800f608:	490c      	ldr	r1, [pc, #48]	; (800f63c <Hardware::Reboot()+0x74>)
 800f60a:	60da      	str	r2, [r3, #12]
 800f60c:	68dc      	ldr	r4, [r3, #12]
 800f60e:	b904      	cbnz	r4, 800f612 <Hardware::Reboot()+0x4a>
 800f610:	e7fe      	b.n	800f610 <Hardware::Reboot()+0x48>
 800f612:	6802      	ldr	r2, [r0, #0]
 800f614:	695e      	ldr	r6, [r3, #20]
 800f616:	1b92      	subs	r2, r2, r6
 800f618:	4294      	cmp	r4, r2
 800f61a:	d8f8      	bhi.n	800f60e <Hardware::Reboot()+0x46>
 800f61c:	6802      	ldr	r2, [r0, #0]
 800f61e:	615a      	str	r2, [r3, #20]
 800f620:	691a      	ldr	r2, [r3, #16]
 800f622:	2a01      	cmp	r2, #1
 800f624:	f082 0401 	eor.w	r4, r2, #1
 800f628:	611c      	str	r4, [r3, #16]
 800f62a:	bf14      	ite	ne
 800f62c:	610d      	strne	r5, [r1, #16]
 800f62e:	614a      	streq	r2, [r1, #20]
 800f630:	e7ec      	b.n	800f60c <Hardware::Reboot()+0x44>
 800f632:	bf00      	nop
 800f634:	2000a0f4 	strdcs	sl, [r0], -r4
 800f638:	2000a114 	andcs	sl, r0, r4, lsl r1
 800f63c:	40011000 	andmi	r1, r1, r0

0800f640 <operator delete(void*)>:
 800f640:	f000 b890 	b.w	800f764 <free>

0800f644 <operator delete[](void*)>:
 800f644:	f000 b88e 	b.w	800f764 <free>

0800f648 <operator new(unsigned int)>:
 800f648:	f000 b842 	b.w	800f6d0 <malloc>

0800f64c <operator new[](unsigned int)>:
 800f64c:	f000 b840 	b.w	800f6d0 <malloc>

0800f650 <inet_aton>:
 800f650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f652:	f04f 0c0a 	mov.w	ip, #10
 800f656:	2500      	movs	r5, #0
 800f658:	ae01      	add	r6, sp, #4
 800f65a:	4603      	mov	r3, r0
 800f65c:	2200      	movs	r2, #0
 800f65e:	1d07      	adds	r7, r0, #4
 800f660:	e007      	b.n	800f672 <inet_aton+0x22>
 800f662:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f666:	2b09      	cmp	r3, #9
 800f668:	d820      	bhi.n	800f6ac <inet_aton+0x5c>
 800f66a:	4603      	mov	r3, r0
 800f66c:	fb0c 4202 	mla	r2, ip, r2, r4
 800f670:	3a30      	subs	r2, #48	; 0x30
 800f672:	4618      	mov	r0, r3
 800f674:	f810 4b01 	ldrb.w	r4, [r0], #1
 800f678:	2c2e      	cmp	r4, #46	; 0x2e
 800f67a:	d111      	bne.n	800f6a0 <inet_aton+0x50>
 800f67c:	3501      	adds	r5, #1
 800f67e:	2d03      	cmp	r5, #3
 800f680:	f806 2b01 	strb.w	r2, [r6], #1
 800f684:	d1e9      	bne.n	800f65a <inet_aton+0xa>
 800f686:	2200      	movs	r2, #0
 800f688:	250a      	movs	r5, #10
 800f68a:	1d1c      	adds	r4, r3, #4
 800f68c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f690:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800f694:	d10d      	bne.n	800f6b2 <inet_aton+0x62>
 800f696:	f88d 2007 	strb.w	r2, [sp, #7]
 800f69a:	b9b1      	cbnz	r1, 800f6ca <inet_aton+0x7a>
 800f69c:	2001      	movs	r0, #1
 800f69e:	e006      	b.n	800f6ae <inet_aton+0x5e>
 800f6a0:	2c00      	cmp	r4, #0
 800f6a2:	d0eb      	beq.n	800f67c <inet_aton+0x2c>
 800f6a4:	2c0a      	cmp	r4, #10
 800f6a6:	d0e9      	beq.n	800f67c <inet_aton+0x2c>
 800f6a8:	42b8      	cmp	r0, r7
 800f6aa:	d1da      	bne.n	800f662 <inet_aton+0x12>
 800f6ac:	2000      	movs	r0, #0
 800f6ae:	b003      	add	sp, #12
 800f6b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6b2:	280a      	cmp	r0, #10
 800f6b4:	d0ef      	beq.n	800f696 <inet_aton+0x46>
 800f6b6:	42a3      	cmp	r3, r4
 800f6b8:	d0f8      	beq.n	800f6ac <inet_aton+0x5c>
 800f6ba:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800f6be:	2e09      	cmp	r6, #9
 800f6c0:	d8f4      	bhi.n	800f6ac <inet_aton+0x5c>
 800f6c2:	fb05 0202 	mla	r2, r5, r2, r0
 800f6c6:	3a30      	subs	r2, #48	; 0x30
 800f6c8:	e7e0      	b.n	800f68c <inet_aton+0x3c>
 800f6ca:	9b01      	ldr	r3, [sp, #4]
 800f6cc:	600b      	str	r3, [r1, #0]
 800f6ce:	e7e5      	b.n	800f69c <inet_aton+0x4c>

0800f6d0 <malloc>:
 800f6d0:	b538      	push	{r3, r4, r5, lr}
 800f6d2:	4604      	mov	r4, r0
 800f6d4:	4601      	mov	r1, r0
 800f6d6:	481c      	ldr	r0, [pc, #112]	; (800f748 <malloc+0x78>)
 800f6d8:	f000 faa6 	bl	800fc28 <printf>
 800f6dc:	b17c      	cbz	r4, 800f6fe <malloc+0x2e>
 800f6de:	4b1b      	ldr	r3, [pc, #108]	; (800f74c <malloc+0x7c>)
 800f6e0:	6818      	ldr	r0, [r3, #0]
 800f6e2:	b978      	cbnz	r0, 800f704 <malloc+0x34>
 800f6e4:	4a1a      	ldr	r2, [pc, #104]	; (800f750 <malloc+0x80>)
 800f6e6:	f104 031b 	add.w	r3, r4, #27
 800f6ea:	6811      	ldr	r1, [r2, #0]
 800f6ec:	4819      	ldr	r0, [pc, #100]	; (800f754 <malloc+0x84>)
 800f6ee:	f023 030f 	bic.w	r3, r3, #15
 800f6f2:	440b      	add	r3, r1
 800f6f4:	4283      	cmp	r3, r0
 800f6f6:	d921      	bls.n	800f73c <malloc+0x6c>
 800f6f8:	4817      	ldr	r0, [pc, #92]	; (800f758 <malloc+0x88>)
 800f6fa:	f000 fa95 	bl	800fc28 <printf>
 800f6fe:	2500      	movs	r5, #0
 800f700:	4628      	mov	r0, r5
 800f702:	bd38      	pop	{r3, r4, r5, pc}
 800f704:	4284      	cmp	r4, r0
 800f706:	d80a      	bhi.n	800f71e <malloc+0x4e>
 800f708:	685a      	ldr	r2, [r3, #4]
 800f70a:	6899      	ldr	r1, [r3, #8]
 800f70c:	3201      	adds	r2, #1
 800f70e:	428a      	cmp	r2, r1
 800f710:	605a      	str	r2, [r3, #4]
 800f712:	d900      	bls.n	800f716 <malloc+0x46>
 800f714:	609a      	str	r2, [r3, #8]
 800f716:	68d9      	ldr	r1, [r3, #12]
 800f718:	b919      	cbnz	r1, 800f722 <malloc+0x52>
 800f71a:	4604      	mov	r4, r0
 800f71c:	e7e2      	b.n	800f6e4 <malloc+0x14>
 800f71e:	3310      	adds	r3, #16
 800f720:	e7de      	b.n	800f6e0 <malloc+0x10>
 800f722:	4604      	mov	r4, r0
 800f724:	688a      	ldr	r2, [r1, #8]
 800f726:	60da      	str	r2, [r3, #12]
 800f728:	2300      	movs	r3, #0
 800f72a:	f101 050c 	add.w	r5, r1, #12
 800f72e:	608b      	str	r3, [r1, #8]
 800f730:	4622      	mov	r2, r4
 800f732:	462b      	mov	r3, r5
 800f734:	4809      	ldr	r0, [pc, #36]	; (800f75c <malloc+0x8c>)
 800f736:	f000 fa77 	bl	800fc28 <printf>
 800f73a:	e7e1      	b.n	800f700 <malloc+0x30>
 800f73c:	6013      	str	r3, [r2, #0]
 800f73e:	4b08      	ldr	r3, [pc, #32]	; (800f760 <malloc+0x90>)
 800f740:	e9c1 3400 	strd	r3, r4, [r1]
 800f744:	e7f0      	b.n	800f728 <malloc+0x58>
 800f746:	bf00      	nop
 800f748:	08013c6c 	stmdaeq	r1, {r2, r3, r5, r6, sl, fp, ip, sp}
 800f74c:	20000020 	andcs	r0, r0, r0, lsr #32
 800f750:	2000001c 	andcs	r0, r0, ip, lsl r0
 800f754:	20016000 	andcs	r6, r1, r0
 800f758:	08013c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, ip, sp}
 800f75c:	08013c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp}
 800f760:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800f764 <free>:
 800f764:	b538      	push	{r3, r4, r5, lr}
 800f766:	4604      	mov	r4, r0
 800f768:	b1c8      	cbz	r0, 800f79e <free+0x3a>
 800f76a:	f1a0 050c 	sub.w	r5, r0, #12
 800f76e:	4602      	mov	r2, r0
 800f770:	4629      	mov	r1, r5
 800f772:	480c      	ldr	r0, [pc, #48]	; (800f7a4 <free+0x40>)
 800f774:	f000 fa58 	bl	800fc28 <printf>
 800f778:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800f77c:	4b0a      	ldr	r3, [pc, #40]	; (800f7a8 <free+0x44>)
 800f77e:	429a      	cmp	r2, r3
 800f780:	d10d      	bne.n	800f79e <free+0x3a>
 800f782:	4b0a      	ldr	r3, [pc, #40]	; (800f7ac <free+0x48>)
 800f784:	681a      	ldr	r2, [r3, #0]
 800f786:	b152      	cbz	r2, 800f79e <free+0x3a>
 800f788:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800f78c:	4291      	cmp	r1, r2
 800f78e:	d107      	bne.n	800f7a0 <free+0x3c>
 800f790:	68da      	ldr	r2, [r3, #12]
 800f792:	f844 2c04 	str.w	r2, [r4, #-4]
 800f796:	685a      	ldr	r2, [r3, #4]
 800f798:	60dd      	str	r5, [r3, #12]
 800f79a:	3a01      	subs	r2, #1
 800f79c:	605a      	str	r2, [r3, #4]
 800f79e:	bd38      	pop	{r3, r4, r5, pc}
 800f7a0:	3310      	adds	r3, #16
 800f7a2:	e7ef      	b.n	800f784 <free+0x20>
 800f7a4:	08013cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, ip, sp}
 800f7a8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800f7ac:	20000020 	andcs	r0, r0, r0, lsr #32

0800f7b0 <memcpy>:
 800f7b0:	b510      	push	{r4, lr}
 800f7b2:	1e43      	subs	r3, r0, #1
 800f7b4:	440a      	add	r2, r1
 800f7b6:	4291      	cmp	r1, r2
 800f7b8:	d100      	bne.n	800f7bc <memcpy+0xc>
 800f7ba:	bd10      	pop	{r4, pc}
 800f7bc:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f7c0:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f7c4:	e7f7      	b.n	800f7b6 <memcpy+0x6>

0800f7c6 <memmove>:
 800f7c6:	4288      	cmp	r0, r1
 800f7c8:	b510      	push	{r4, lr}
 800f7ca:	eb01 0302 	add.w	r3, r1, r2
 800f7ce:	d208      	bcs.n	800f7e2 <memmove+0x1c>
 800f7d0:	1e42      	subs	r2, r0, #1
 800f7d2:	4299      	cmp	r1, r3
 800f7d4:	d100      	bne.n	800f7d8 <memmove+0x12>
 800f7d6:	bd10      	pop	{r4, pc}
 800f7d8:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f7dc:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f7e0:	e7f7      	b.n	800f7d2 <memmove+0xc>
 800f7e2:	4601      	mov	r1, r0
 800f7e4:	4402      	add	r2, r0
 800f7e6:	428a      	cmp	r2, r1
 800f7e8:	d0f5      	beq.n	800f7d6 <memmove+0x10>
 800f7ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f7ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f7f2:	e7f8      	b.n	800f7e6 <memmove+0x20>

0800f7f4 <memset>:
 800f7f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7f6:	b1c2      	cbz	r2, 800f82a <memset+0x36>
 800f7f8:	4603      	mov	r3, r0
 800f7fa:	b2c9      	uxtb	r1, r1
 800f7fc:	075c      	lsls	r4, r3, #29
 800f7fe:	d110      	bne.n	800f822 <memset+0x2e>
 800f800:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f804:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f808:	463d      	mov	r5, r7
 800f80a:	461e      	mov	r6, r3
 800f80c:	f022 0407 	bic.w	r4, r2, #7
 800f810:	441c      	add	r4, r3
 800f812:	42a6      	cmp	r6, r4
 800f814:	d10a      	bne.n	800f82c <memset+0x38>
 800f816:	4413      	add	r3, r2
 800f818:	429c      	cmp	r4, r3
 800f81a:	d006      	beq.n	800f82a <memset+0x36>
 800f81c:	f804 1b01 	strb.w	r1, [r4], #1
 800f820:	e7fa      	b.n	800f818 <memset+0x24>
 800f822:	3a01      	subs	r2, #1
 800f824:	f803 1b01 	strb.w	r1, [r3], #1
 800f828:	d1e8      	bne.n	800f7fc <memset+0x8>
 800f82a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f82c:	f846 7b08 	str.w	r7, [r6], #8
 800f830:	f846 5c04 	str.w	r5, [r6, #-4]
 800f834:	e7ed      	b.n	800f812 <memset+0x1e>
	...

0800f838 <_xputch>:
 800f838:	4603      	mov	r3, r0
 800f83a:	b410      	push	{r4}
 800f83c:	4c08      	ldr	r4, [pc, #32]	; (800f860 <_xputch+0x28>)
 800f83e:	68da      	ldr	r2, [r3, #12]
 800f840:	4608      	mov	r0, r1
 800f842:	6821      	ldr	r1, [r4, #0]
 800f844:	3201      	adds	r2, #1
 800f846:	60da      	str	r2, [r3, #12]
 800f848:	b139      	cbz	r1, 800f85a <_xputch+0x22>
 800f84a:	691b      	ldr	r3, [r3, #16]
 800f84c:	429a      	cmp	r2, r3
 800f84e:	da02      	bge.n	800f856 <_xputch+0x1e>
 800f850:	1c4b      	adds	r3, r1, #1
 800f852:	6023      	str	r3, [r4, #0]
 800f854:	7008      	strb	r0, [r1, #0]
 800f856:	bc10      	pop	{r4}
 800f858:	4770      	bx	lr
 800f85a:	bc10      	pop	{r4}
 800f85c:	f7ff bd5c 	b.w	800f318 <console_putc>
 800f860:	2000a0fc 	strdcs	sl, [r0], -ip

0800f864 <_format_int>:
 800f864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f868:	4698      	mov	r8, r3
 800f86a:	b091      	sub	sp, #68	; 0x44
 800f86c:	ea52 0308 	orrs.w	r3, r2, r8
 800f870:	4606      	mov	r6, r0
 800f872:	4617      	mov	r7, r2
 800f874:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800f878:	d133      	bne.n	800f8e2 <_format_int+0x7e>
 800f87a:	2330      	movs	r3, #48	; 0x30
 800f87c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800f880:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f884:	6833      	ldr	r3, [r6, #0]
 800f886:	07d8      	lsls	r0, r3, #31
 800f888:	d507      	bpl.n	800f89a <_format_int+0x36>
 800f88a:	466a      	mov	r2, sp
 800f88c:	2030      	movs	r0, #48	; 0x30
 800f88e:	6871      	ldr	r1, [r6, #4]
 800f890:	1b2f      	subs	r7, r5, r4
 800f892:	428f      	cmp	r7, r1
 800f894:	da01      	bge.n	800f89a <_format_int+0x36>
 800f896:	4294      	cmp	r4, r2
 800f898:	d839      	bhi.n	800f90e <_format_int+0xaa>
 800f89a:	0699      	lsls	r1, r3, #26
 800f89c:	d507      	bpl.n	800f8ae <_format_int+0x4a>
 800f89e:	466a      	mov	r2, sp
 800f8a0:	2030      	movs	r0, #48	; 0x30
 800f8a2:	68b1      	ldr	r1, [r6, #8]
 800f8a4:	1b2f      	subs	r7, r5, r4
 800f8a6:	428f      	cmp	r7, r1
 800f8a8:	da01      	bge.n	800f8ae <_format_int+0x4a>
 800f8aa:	4294      	cmp	r4, r2
 800f8ac:	d832      	bhi.n	800f914 <_format_int+0xb0>
 800f8ae:	071a      	lsls	r2, r3, #28
 800f8b0:	bf44      	itt	mi
 800f8b2:	222d      	movmi	r2, #45	; 0x2d
 800f8b4:	f804 2901 	strbmi.w	r2, [r4], #-1
 800f8b8:	065b      	lsls	r3, r3, #25
 800f8ba:	d407      	bmi.n	800f8cc <_format_int+0x68>
 800f8bc:	466b      	mov	r3, sp
 800f8be:	2120      	movs	r1, #32
 800f8c0:	68b2      	ldr	r2, [r6, #8]
 800f8c2:	1b28      	subs	r0, r5, r4
 800f8c4:	4290      	cmp	r0, r2
 800f8c6:	da01      	bge.n	800f8cc <_format_int+0x68>
 800f8c8:	429c      	cmp	r4, r3
 800f8ca:	d826      	bhi.n	800f91a <_format_int+0xb6>
 800f8cc:	1b2d      	subs	r5, r5, r4
 800f8ce:	3401      	adds	r4, #1
 800f8d0:	ab10      	add	r3, sp, #64	; 0x40
 800f8d2:	429c      	cmp	r4, r3
 800f8d4:	d324      	bcc.n	800f920 <_format_int+0xbc>
 800f8d6:	68b3      	ldr	r3, [r6, #8]
 800f8d8:	42ab      	cmp	r3, r5
 800f8da:	dc27      	bgt.n	800f92c <_format_int+0xc8>
 800f8dc:	b011      	add	sp, #68	; 0x44
 800f8de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8e2:	462c      	mov	r4, r5
 800f8e4:	46e9      	mov	r9, sp
 800f8e6:	4638      	mov	r0, r7
 800f8e8:	4641      	mov	r1, r8
 800f8ea:	220a      	movs	r2, #10
 800f8ec:	2300      	movs	r3, #0
 800f8ee:	f7f8 f8f9 	bl	8007ae4 <__aeabi_uldivmod>
 800f8f2:	3230      	adds	r2, #48	; 0x30
 800f8f4:	f804 2901 	strb.w	r2, [r4], #-1
 800f8f8:	463a      	mov	r2, r7
 800f8fa:	4643      	mov	r3, r8
 800f8fc:	2a0a      	cmp	r2, #10
 800f8fe:	f173 0300 	sbcs.w	r3, r3, #0
 800f902:	4607      	mov	r7, r0
 800f904:	4688      	mov	r8, r1
 800f906:	d3bd      	bcc.n	800f884 <_format_int+0x20>
 800f908:	454c      	cmp	r4, r9
 800f90a:	d1ec      	bne.n	800f8e6 <_format_int+0x82>
 800f90c:	e7ba      	b.n	800f884 <_format_int+0x20>
 800f90e:	f804 0901 	strb.w	r0, [r4], #-1
 800f912:	e7bd      	b.n	800f890 <_format_int+0x2c>
 800f914:	f804 0901 	strb.w	r0, [r4], #-1
 800f918:	e7c4      	b.n	800f8a4 <_format_int+0x40>
 800f91a:	f804 1901 	strb.w	r1, [r4], #-1
 800f91e:	e7d0      	b.n	800f8c2 <_format_int+0x5e>
 800f920:	4630      	mov	r0, r6
 800f922:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f926:	f7ff ff87 	bl	800f838 <_xputch>
 800f92a:	e7d1      	b.n	800f8d0 <_format_int+0x6c>
 800f92c:	2120      	movs	r1, #32
 800f92e:	4630      	mov	r0, r6
 800f930:	f7ff ff82 	bl	800f838 <_xputch>
 800f934:	3501      	adds	r5, #1
 800f936:	e7ce      	b.n	800f8d6 <_format_int+0x72>

0800f938 <_format_hex>:
 800f938:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f93a:	b091      	sub	sp, #68	; 0x44
 800f93c:	4606      	mov	r6, r0
 800f93e:	6804      	ldr	r4, [r0, #0]
 800f940:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800f944:	bb61      	cbnz	r1, 800f9a0 <_format_hex+0x68>
 800f946:	2330      	movs	r3, #48	; 0x30
 800f948:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f94c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800f950:	07e5      	lsls	r5, r4, #31
 800f952:	d507      	bpl.n	800f964 <_format_hex+0x2c>
 800f954:	4669      	mov	r1, sp
 800f956:	2530      	movs	r5, #48	; 0x30
 800f958:	6870      	ldr	r0, [r6, #4]
 800f95a:	1ad7      	subs	r7, r2, r3
 800f95c:	4287      	cmp	r7, r0
 800f95e:	da01      	bge.n	800f964 <_format_hex+0x2c>
 800f960:	428b      	cmp	r3, r1
 800f962:	d831      	bhi.n	800f9c8 <_format_hex+0x90>
 800f964:	06a0      	lsls	r0, r4, #26
 800f966:	d507      	bpl.n	800f978 <_format_hex+0x40>
 800f968:	4669      	mov	r1, sp
 800f96a:	2530      	movs	r5, #48	; 0x30
 800f96c:	68b0      	ldr	r0, [r6, #8]
 800f96e:	1ad7      	subs	r7, r2, r3
 800f970:	4287      	cmp	r7, r0
 800f972:	da01      	bge.n	800f978 <_format_hex+0x40>
 800f974:	428b      	cmp	r3, r1
 800f976:	d82a      	bhi.n	800f9ce <_format_hex+0x96>
 800f978:	0661      	lsls	r1, r4, #25
 800f97a:	d407      	bmi.n	800f98c <_format_hex+0x54>
 800f97c:	4669      	mov	r1, sp
 800f97e:	2420      	movs	r4, #32
 800f980:	68b0      	ldr	r0, [r6, #8]
 800f982:	1ad5      	subs	r5, r2, r3
 800f984:	4285      	cmp	r5, r0
 800f986:	da01      	bge.n	800f98c <_format_hex+0x54>
 800f988:	428b      	cmp	r3, r1
 800f98a:	d823      	bhi.n	800f9d4 <_format_hex+0x9c>
 800f98c:	1ad5      	subs	r5, r2, r3
 800f98e:	1c5c      	adds	r4, r3, #1
 800f990:	ab10      	add	r3, sp, #64	; 0x40
 800f992:	429c      	cmp	r4, r3
 800f994:	d321      	bcc.n	800f9da <_format_hex+0xa2>
 800f996:	68b3      	ldr	r3, [r6, #8]
 800f998:	429d      	cmp	r5, r3
 800f99a:	db24      	blt.n	800f9e6 <_format_hex+0xae>
 800f99c:	b011      	add	sp, #68	; 0x44
 800f99e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9a0:	f014 0f02 	tst.w	r4, #2
 800f9a4:	bf0c      	ite	eq
 800f9a6:	2757      	moveq	r7, #87	; 0x57
 800f9a8:	2737      	movne	r7, #55	; 0x37
 800f9aa:	4613      	mov	r3, r2
 800f9ac:	466d      	mov	r5, sp
 800f9ae:	f001 000f 	and.w	r0, r1, #15
 800f9b2:	2809      	cmp	r0, #9
 800f9b4:	bf94      	ite	ls
 800f9b6:	3030      	addls	r0, #48	; 0x30
 800f9b8:	19c0      	addhi	r0, r0, r7
 800f9ba:	0909      	lsrs	r1, r1, #4
 800f9bc:	f803 0901 	strb.w	r0, [r3], #-1
 800f9c0:	d0c6      	beq.n	800f950 <_format_hex+0x18>
 800f9c2:	42ab      	cmp	r3, r5
 800f9c4:	d1f3      	bne.n	800f9ae <_format_hex+0x76>
 800f9c6:	e7c3      	b.n	800f950 <_format_hex+0x18>
 800f9c8:	f803 5901 	strb.w	r5, [r3], #-1
 800f9cc:	e7c5      	b.n	800f95a <_format_hex+0x22>
 800f9ce:	f803 5901 	strb.w	r5, [r3], #-1
 800f9d2:	e7cc      	b.n	800f96e <_format_hex+0x36>
 800f9d4:	f803 4901 	strb.w	r4, [r3], #-1
 800f9d8:	e7d3      	b.n	800f982 <_format_hex+0x4a>
 800f9da:	4630      	mov	r0, r6
 800f9dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f9e0:	f7ff ff2a 	bl	800f838 <_xputch>
 800f9e4:	e7d4      	b.n	800f990 <_format_hex+0x58>
 800f9e6:	2120      	movs	r1, #32
 800f9e8:	4630      	mov	r0, r6
 800f9ea:	f7ff ff25 	bl	800f838 <_xputch>
 800f9ee:	3501      	adds	r5, #1
 800f9f0:	e7d1      	b.n	800f996 <_format_hex+0x5e>
	...

0800f9f4 <_vprintf>:
 800f9f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f9f8:	2700      	movs	r7, #0
 800f9fa:	460b      	mov	r3, r1
 800f9fc:	4614      	mov	r4, r2
 800f9fe:	f04f 080a 	mov.w	r8, #10
 800fa02:	b086      	sub	sp, #24
 800fa04:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800fa08:	7819      	ldrb	r1, [r3, #0]
 800fa0a:	b919      	cbnz	r1, 800fa14 <_vprintf+0x20>
 800fa0c:	9804      	ldr	r0, [sp, #16]
 800fa0e:	b006      	add	sp, #24
 800fa10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fa14:	2925      	cmp	r1, #37	; 0x25
 800fa16:	f103 0601 	add.w	r6, r3, #1
 800fa1a:	d004      	beq.n	800fa26 <_vprintf+0x32>
 800fa1c:	a801      	add	r0, sp, #4
 800fa1e:	f7ff ff0b 	bl	800f838 <_xputch>
 800fa22:	4633      	mov	r3, r6
 800fa24:	e7f0      	b.n	800fa08 <_vprintf+0x14>
 800fa26:	785a      	ldrb	r2, [r3, #1]
 800fa28:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800fa2c:	2a30      	cmp	r2, #48	; 0x30
 800fa2e:	9703      	str	r7, [sp, #12]
 800fa30:	d126      	bne.n	800fa80 <_vprintf+0x8c>
 800fa32:	2220      	movs	r2, #32
 800fa34:	9201      	str	r2, [sp, #4]
 800fa36:	1c9e      	adds	r6, r3, #2
 800fa38:	2200      	movs	r2, #0
 800fa3a:	4635      	mov	r5, r6
 800fa3c:	4613      	mov	r3, r2
 800fa3e:	7829      	ldrb	r1, [r5, #0]
 800fa40:	462e      	mov	r6, r5
 800fa42:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800fa46:	2809      	cmp	r0, #9
 800fa48:	f105 0501 	add.w	r5, r5, #1
 800fa4c:	d91c      	bls.n	800fa88 <_vprintf+0x94>
 800fa4e:	b12a      	cbz	r2, 800fa5c <_vprintf+0x68>
 800fa50:	9303      	str	r3, [sp, #12]
 800fa52:	b11b      	cbz	r3, 800fa5c <_vprintf+0x68>
 800fa54:	9b01      	ldr	r3, [sp, #4]
 800fa56:	f043 0310 	orr.w	r3, r3, #16
 800fa5a:	9301      	str	r3, [sp, #4]
 800fa5c:	292e      	cmp	r1, #46	; 0x2e
 800fa5e:	d122      	bne.n	800faa6 <_vprintf+0xb2>
 800fa60:	7873      	ldrb	r3, [r6, #1]
 800fa62:	2b2a      	cmp	r3, #42	; 0x2a
 800fa64:	d014      	beq.n	800fa90 <_vprintf+0x9c>
 800fa66:	2100      	movs	r1, #0
 800fa68:	460a      	mov	r2, r1
 800fa6a:	1c70      	adds	r0, r6, #1
 800fa6c:	7803      	ldrb	r3, [r0, #0]
 800fa6e:	4606      	mov	r6, r0
 800fa70:	3b30      	subs	r3, #48	; 0x30
 800fa72:	2b09      	cmp	r3, #9
 800fa74:	f100 0001 	add.w	r0, r0, #1
 800fa78:	d930      	bls.n	800fadc <_vprintf+0xe8>
 800fa7a:	b181      	cbz	r1, 800fa9e <_vprintf+0xaa>
 800fa7c:	9202      	str	r2, [sp, #8]
 800fa7e:	e00e      	b.n	800fa9e <_vprintf+0xaa>
 800fa80:	2a2d      	cmp	r2, #45	; 0x2d
 800fa82:	d1d9      	bne.n	800fa38 <_vprintf+0x44>
 800fa84:	2240      	movs	r2, #64	; 0x40
 800fa86:	e7d5      	b.n	800fa34 <_vprintf+0x40>
 800fa88:	2201      	movs	r2, #1
 800fa8a:	fb08 0303 	mla	r3, r8, r3, r0
 800fa8e:	e7d6      	b.n	800fa3e <_vprintf+0x4a>
 800fa90:	f854 3b04 	ldr.w	r3, [r4], #4
 800fa94:	3602      	adds	r6, #2
 800fa96:	2b00      	cmp	r3, #0
 800fa98:	bfb8      	it	lt
 800fa9a:	425b      	neglt	r3, r3
 800fa9c:	9302      	str	r3, [sp, #8]
 800fa9e:	9b01      	ldr	r3, [sp, #4]
 800faa0:	f043 0301 	orr.w	r3, r3, #1
 800faa4:	9301      	str	r3, [sp, #4]
 800faa6:	7833      	ldrb	r3, [r6, #0]
 800faa8:	2b6c      	cmp	r3, #108	; 0x6c
 800faaa:	bf04      	itt	eq
 800faac:	9b01      	ldreq	r3, [sp, #4]
 800faae:	3601      	addeq	r6, #1
 800fab0:	7831      	ldrb	r1, [r6, #0]
 800fab2:	bf04      	itt	eq
 800fab4:	f043 0304 	orreq.w	r3, r3, #4
 800fab8:	9301      	streq	r3, [sp, #4]
 800faba:	2978      	cmp	r1, #120	; 0x78
 800fabc:	d8ae      	bhi.n	800fa1c <_vprintf+0x28>
 800fabe:	296f      	cmp	r1, #111	; 0x6f
 800fac0:	d810      	bhi.n	800fae4 <_vprintf+0xf0>
 800fac2:	2963      	cmp	r1, #99	; 0x63
 800fac4:	d048      	beq.n	800fb58 <_vprintf+0x164>
 800fac6:	d827      	bhi.n	800fb18 <_vprintf+0x124>
 800fac8:	2958      	cmp	r1, #88	; 0x58
 800faca:	d1a7      	bne.n	800fa1c <_vprintf+0x28>
 800facc:	9b01      	ldr	r3, [sp, #4]
 800face:	f043 0302 	orr.w	r3, r3, #2
 800fad2:	9301      	str	r3, [sp, #4]
 800fad4:	4625      	mov	r5, r4
 800fad6:	f855 1b04 	ldr.w	r1, [r5], #4
 800fada:	e056      	b.n	800fb8a <_vprintf+0x196>
 800fadc:	2101      	movs	r1, #1
 800fade:	fb08 3202 	mla	r2, r8, r2, r3
 800fae2:	e7c3      	b.n	800fa6c <_vprintf+0x78>
 800fae4:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800fae8:	2b08      	cmp	r3, #8
 800faea:	d897      	bhi.n	800fa1c <_vprintf+0x28>
 800faec:	a201      	add	r2, pc, #4	; (adr r2, 800faf4 <_vprintf+0x100>)
 800faee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800faf2:	bf00      	nop
 800faf4:	0800fb6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, lr, pc}
 800faf8:	0800fa1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, ip, sp, lr, pc}
 800fafc:	0800fa1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, ip, sp, lr, pc}
 800fb00:	0800fb93 	stmdaeq	r0, {r0, r1, r4, r7, r8, r9, fp, ip, sp, lr, pc}
 800fb04:	0800fa1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, ip, sp, lr, pc}
 800fb08:	0800fc07 	stmdaeq	r0, {r0, r1, r2, sl, fp, ip, sp, lr, pc}
 800fb0c:	0800fa1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, ip, sp, lr, pc}
 800fb10:	0800fa1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, ip, sp, lr, pc}
 800fb14:	0800fad5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, ip, sp, lr, pc}
 800fb18:	2964      	cmp	r1, #100	; 0x64
 800fb1a:	d002      	beq.n	800fb22 <_vprintf+0x12e>
 800fb1c:	2969      	cmp	r1, #105	; 0x69
 800fb1e:	f47f af7d 	bne.w	800fa1c <_vprintf+0x28>
 800fb22:	9901      	ldr	r1, [sp, #4]
 800fb24:	074d      	lsls	r5, r1, #29
 800fb26:	bf51      	iteee	pl
 800fb28:	4625      	movpl	r5, r4
 800fb2a:	3407      	addmi	r4, #7
 800fb2c:	f024 0407 	bicmi.w	r4, r4, #7
 800fb30:	4625      	movmi	r5, r4
 800fb32:	bf55      	itete	pl
 800fb34:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800fb38:	6863      	ldrmi	r3, [r4, #4]
 800fb3a:	17d3      	asrpl	r3, r2, #31
 800fb3c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800fb40:	2b00      	cmp	r3, #0
 800fb42:	da05      	bge.n	800fb50 <_vprintf+0x15c>
 800fb44:	f041 0108 	orr.w	r1, r1, #8
 800fb48:	4252      	negs	r2, r2
 800fb4a:	9101      	str	r1, [sp, #4]
 800fb4c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800fb50:	a801      	add	r0, sp, #4
 800fb52:	f7ff fe87 	bl	800f864 <_format_int>
 800fb56:	e005      	b.n	800fb64 <_vprintf+0x170>
 800fb58:	4625      	mov	r5, r4
 800fb5a:	a801      	add	r0, sp, #4
 800fb5c:	f855 1b04 	ldr.w	r1, [r5], #4
 800fb60:	f7ff fe6a 	bl	800f838 <_xputch>
 800fb64:	462c      	mov	r4, r5
 800fb66:	3601      	adds	r6, #1
 800fb68:	e75b      	b.n	800fa22 <_vprintf+0x2e>
 800fb6a:	2308      	movs	r3, #8
 800fb6c:	4625      	mov	r5, r4
 800fb6e:	9303      	str	r3, [sp, #12]
 800fb70:	2320      	movs	r3, #32
 800fb72:	2130      	movs	r1, #48	; 0x30
 800fb74:	f855 4b04 	ldr.w	r4, [r5], #4
 800fb78:	a801      	add	r0, sp, #4
 800fb7a:	9301      	str	r3, [sp, #4]
 800fb7c:	f7ff fe5c 	bl	800f838 <_xputch>
 800fb80:	2178      	movs	r1, #120	; 0x78
 800fb82:	a801      	add	r0, sp, #4
 800fb84:	f7ff fe58 	bl	800f838 <_xputch>
 800fb88:	4621      	mov	r1, r4
 800fb8a:	a801      	add	r0, sp, #4
 800fb8c:	f7ff fed4 	bl	800f938 <_format_hex>
 800fb90:	e7e8      	b.n	800fb64 <_vprintf+0x170>
 800fb92:	4625      	mov	r5, r4
 800fb94:	2400      	movs	r4, #0
 800fb96:	f855 9b04 	ldr.w	r9, [r5], #4
 800fb9a:	f819 3004 	ldrb.w	r3, [r9, r4]
 800fb9e:	b993      	cbnz	r3, 800fbc6 <_vprintf+0x1d2>
 800fba0:	9b01      	ldr	r3, [sp, #4]
 800fba2:	07d9      	lsls	r1, r3, #31
 800fba4:	d503      	bpl.n	800fbae <_vprintf+0x1ba>
 800fba6:	9b02      	ldr	r3, [sp, #8]
 800fba8:	429c      	cmp	r4, r3
 800fbaa:	bfa8      	it	ge
 800fbac:	461c      	movge	r4, r3
 800fbae:	9b01      	ldr	r3, [sp, #4]
 800fbb0:	f104 0a01 	add.w	sl, r4, #1
 800fbb4:	065a      	lsls	r2, r3, #25
 800fbb6:	d403      	bmi.n	800fbc0 <_vprintf+0x1cc>
 800fbb8:	9b03      	ldr	r3, [sp, #12]
 800fbba:	429c      	cmp	r4, r3
 800fbbc:	db05      	blt.n	800fbca <_vprintf+0x1d6>
 800fbbe:	4654      	mov	r4, sl
 800fbc0:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800fbc4:	e00d      	b.n	800fbe2 <_vprintf+0x1ee>
 800fbc6:	3401      	adds	r4, #1
 800fbc8:	e7e7      	b.n	800fb9a <_vprintf+0x1a6>
 800fbca:	2120      	movs	r1, #32
 800fbcc:	a801      	add	r0, sp, #4
 800fbce:	f7ff fe33 	bl	800f838 <_xputch>
 800fbd2:	4654      	mov	r4, sl
 800fbd4:	e7eb      	b.n	800fbae <_vprintf+0x1ba>
 800fbd6:	a801      	add	r0, sp, #4
 800fbd8:	f7ff fe2e 	bl	800f838 <_xputch>
 800fbdc:	9b02      	ldr	r3, [sp, #8]
 800fbde:	3b01      	subs	r3, #1
 800fbe0:	9302      	str	r3, [sp, #8]
 800fbe2:	9b01      	ldr	r3, [sp, #4]
 800fbe4:	07db      	lsls	r3, r3, #31
 800fbe6:	d501      	bpl.n	800fbec <_vprintf+0x1f8>
 800fbe8:	9b02      	ldr	r3, [sp, #8]
 800fbea:	b11b      	cbz	r3, 800fbf4 <_vprintf+0x200>
 800fbec:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800fbf0:	2900      	cmp	r1, #0
 800fbf2:	d1f0      	bne.n	800fbd6 <_vprintf+0x1e2>
 800fbf4:	9b03      	ldr	r3, [sp, #12]
 800fbf6:	42a3      	cmp	r3, r4
 800fbf8:	ddb4      	ble.n	800fb64 <_vprintf+0x170>
 800fbfa:	2120      	movs	r1, #32
 800fbfc:	a801      	add	r0, sp, #4
 800fbfe:	f7ff fe1b 	bl	800f838 <_xputch>
 800fc02:	3401      	adds	r4, #1
 800fc04:	e7f6      	b.n	800fbf4 <_vprintf+0x200>
 800fc06:	9b01      	ldr	r3, [sp, #4]
 800fc08:	f013 0304 	ands.w	r3, r3, #4
 800fc0c:	bf1d      	ittte	ne
 800fc0e:	3407      	addne	r4, #7
 800fc10:	f024 0407 	bicne.w	r4, r4, #7
 800fc14:	4625      	movne	r5, r4
 800fc16:	4625      	moveq	r5, r4
 800fc18:	bf1a      	itte	ne
 800fc1a:	f855 2b08 	ldrne.w	r2, [r5], #8
 800fc1e:	6863      	ldrne	r3, [r4, #4]
 800fc20:	f855 2b04 	ldreq.w	r2, [r5], #4
 800fc24:	e794      	b.n	800fb50 <_vprintf+0x15c>
 800fc26:	bf00      	nop

0800fc28 <printf>:
 800fc28:	b40f      	push	{r0, r1, r2, r3}
 800fc2a:	b507      	push	{r0, r1, r2, lr}
 800fc2c:	aa04      	add	r2, sp, #16
 800fc2e:	f852 1b04 	ldr.w	r1, [r2], #4
 800fc32:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fc36:	9201      	str	r2, [sp, #4]
 800fc38:	f7ff fedc 	bl	800f9f4 <_vprintf>
 800fc3c:	b003      	add	sp, #12
 800fc3e:	f85d eb04 	ldr.w	lr, [sp], #4
 800fc42:	b004      	add	sp, #16
 800fc44:	4770      	bx	lr
	...

0800fc48 <sprintf>:
 800fc48:	b40e      	push	{r1, r2, r3}
 800fc4a:	b517      	push	{r0, r1, r2, r4, lr}
 800fc4c:	4c09      	ldr	r4, [pc, #36]	; (800fc74 <sprintf+0x2c>)
 800fc4e:	aa05      	add	r2, sp, #20
 800fc50:	f852 1b04 	ldr.w	r1, [r2], #4
 800fc54:	6020      	str	r0, [r4, #0]
 800fc56:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fc5a:	9201      	str	r2, [sp, #4]
 800fc5c:	f7ff feca 	bl	800f9f4 <_vprintf>
 800fc60:	2300      	movs	r3, #0
 800fc62:	6822      	ldr	r2, [r4, #0]
 800fc64:	6023      	str	r3, [r4, #0]
 800fc66:	7013      	strb	r3, [r2, #0]
 800fc68:	b003      	add	sp, #12
 800fc6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc6e:	b003      	add	sp, #12
 800fc70:	4770      	bx	lr
 800fc72:	bf00      	nop
 800fc74:	2000a0fc 	strdcs	sl, [r0], -ip

0800fc78 <snprintf>:
 800fc78:	b40c      	push	{r2, r3}
 800fc7a:	460b      	mov	r3, r1
 800fc7c:	b513      	push	{r0, r1, r4, lr}
 800fc7e:	4c09      	ldr	r4, [pc, #36]	; (800fca4 <snprintf+0x2c>)
 800fc80:	aa04      	add	r2, sp, #16
 800fc82:	f852 1b04 	ldr.w	r1, [r2], #4
 800fc86:	6020      	str	r0, [r4, #0]
 800fc88:	4618      	mov	r0, r3
 800fc8a:	9201      	str	r2, [sp, #4]
 800fc8c:	f7ff feb2 	bl	800f9f4 <_vprintf>
 800fc90:	2300      	movs	r3, #0
 800fc92:	6822      	ldr	r2, [r4, #0]
 800fc94:	6023      	str	r3, [r4, #0]
 800fc96:	7013      	strb	r3, [r2, #0]
 800fc98:	b002      	add	sp, #8
 800fc9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc9e:	b002      	add	sp, #8
 800fca0:	4770      	bx	lr
 800fca2:	bf00      	nop
 800fca4:	2000a0fc 	strdcs	sl, [r0], -ip

0800fca8 <vsnprintf>:
 800fca8:	b538      	push	{r3, r4, r5, lr}
 800fcaa:	4605      	mov	r5, r0
 800fcac:	4c05      	ldr	r4, [pc, #20]	; (800fcc4 <vsnprintf+0x1c>)
 800fcae:	4608      	mov	r0, r1
 800fcb0:	4611      	mov	r1, r2
 800fcb2:	461a      	mov	r2, r3
 800fcb4:	6025      	str	r5, [r4, #0]
 800fcb6:	f7ff fe9d 	bl	800f9f4 <_vprintf>
 800fcba:	2300      	movs	r3, #0
 800fcbc:	6822      	ldr	r2, [r4, #0]
 800fcbe:	6023      	str	r3, [r4, #0]
 800fcc0:	7013      	strb	r3, [r2, #0]
 800fcc2:	bd38      	pop	{r3, r4, r5, pc}
 800fcc4:	2000a0fc 	strdcs	sl, [r0], -ip

0800fcc8 <puts>:
 800fcc8:	b508      	push	{r3, lr}
 800fcca:	f7ff fb27 	bl	800f31c <console_puts>
 800fcce:	200a      	movs	r0, #10
 800fcd0:	f7ff fb22 	bl	800f318 <console_putc>
 800fcd4:	2001      	movs	r0, #1
 800fcd6:	bd08      	pop	{r3, pc}

0800fcd8 <strtok>:
 800fcd8:	b530      	push	{r4, r5, lr}
 800fcda:	b910      	cbnz	r0, 800fce2 <strtok+0xa>
 800fcdc:	4b12      	ldr	r3, [pc, #72]	; (800fd28 <strtok+0x50>)
 800fcde:	6818      	ldr	r0, [r3, #0]
 800fce0:	b158      	cbz	r0, 800fcfa <strtok+0x22>
 800fce2:	4603      	mov	r3, r0
 800fce4:	460d      	mov	r5, r1
 800fce6:	4618      	mov	r0, r3
 800fce8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fcec:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fcf0:	b924      	cbnz	r4, 800fcfc <strtok+0x24>
 800fcf2:	b94a      	cbnz	r2, 800fd08 <strtok+0x30>
 800fcf4:	4610      	mov	r0, r2
 800fcf6:	4b0c      	ldr	r3, [pc, #48]	; (800fd28 <strtok+0x50>)
 800fcf8:	601a      	str	r2, [r3, #0]
 800fcfa:	bd30      	pop	{r4, r5, pc}
 800fcfc:	42a2      	cmp	r2, r4
 800fcfe:	d1f5      	bne.n	800fcec <strtok+0x14>
 800fd00:	e7f0      	b.n	800fce4 <strtok+0xc>
 800fd02:	4613      	mov	r3, r2
 800fd04:	e00c      	b.n	800fd20 <strtok+0x48>
 800fd06:	b914      	cbnz	r4, 800fd0e <strtok+0x36>
 800fd08:	460d      	mov	r5, r1
 800fd0a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fd0e:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fd12:	42a2      	cmp	r2, r4
 800fd14:	d1f7      	bne.n	800fd06 <strtok+0x2e>
 800fd16:	2a00      	cmp	r2, #0
 800fd18:	d0f3      	beq.n	800fd02 <strtok+0x2a>
 800fd1a:	2200      	movs	r2, #0
 800fd1c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fd20:	4a01      	ldr	r2, [pc, #4]	; (800fd28 <strtok+0x50>)
 800fd22:	6013      	str	r3, [r2, #0]
 800fd24:	e7e9      	b.n	800fcfa <strtok+0x22>
 800fd26:	bf00      	nop
 800fd28:	2000a100 	andcs	sl, r0, r0, lsl #2

0800fd2c <isleapyear>:
 800fd2c:	2264      	movs	r2, #100	; 0x64
 800fd2e:	fb90 f3f2 	sdiv	r3, r0, r2
 800fd32:	fb02 0313 	mls	r3, r2, r3, r0
 800fd36:	b94b      	cbnz	r3, 800fd4c <isleapyear+0x20>
 800fd38:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800fd3c:	fb90 f2f3 	sdiv	r2, r0, r3
 800fd40:	fb03 0012 	mls	r0, r3, r2, r0
 800fd44:	fab0 f080 	clz	r0, r0
 800fd48:	0940      	lsrs	r0, r0, #5
 800fd4a:	4770      	bx	lr
 800fd4c:	f010 0f03 	tst.w	r0, #3
 800fd50:	bf0c      	ite	eq
 800fd52:	2001      	moveq	r0, #1
 800fd54:	2000      	movne	r0, #0
 800fd56:	4770      	bx	lr

0800fd58 <getdaysofmonth>:
 800fd58:	b510      	push	{r4, lr}
 800fd5a:	4604      	mov	r4, r0
 800fd5c:	2c01      	cmp	r4, #1
 800fd5e:	4608      	mov	r0, r1
 800fd60:	d102      	bne.n	800fd68 <getdaysofmonth+0x10>
 800fd62:	f7ff ffe3 	bl	800fd2c <isleapyear>
 800fd66:	b918      	cbnz	r0, 800fd70 <getdaysofmonth+0x18>
 800fd68:	4b02      	ldr	r3, [pc, #8]	; (800fd74 <getdaysofmonth+0x1c>)
 800fd6a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800fd6e:	bd10      	pop	{r4, pc}
 800fd70:	201d      	movs	r0, #29
 800fd72:	e7fc      	b.n	800fd6e <getdaysofmonth+0x16>
 800fd74:	08013ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, ip, sp}

0800fd78 <mktime>:
 800fd78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd7c:	4604      	mov	r4, r0
 800fd7e:	2800      	cmp	r0, #0
 800fd80:	d043      	beq.n	800fe0a <mktime+0x92>
 800fd82:	6941      	ldr	r1, [r0, #20]
 800fd84:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800fd88:	2b45      	cmp	r3, #69	; 0x45
 800fd8a:	d83e      	bhi.n	800fe0a <mktime+0x92>
 800fd8c:	2600      	movs	r6, #0
 800fd8e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800fd92:	f240 186d 	movw	r8, #365	; 0x16d
 800fd96:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800fd9a:	42af      	cmp	r7, r5
 800fd9c:	da24      	bge.n	800fde8 <mktime+0x70>
 800fd9e:	6927      	ldr	r7, [r4, #16]
 800fda0:	2f0b      	cmp	r7, #11
 800fda2:	d832      	bhi.n	800fe0a <mktime+0x92>
 800fda4:	2500      	movs	r5, #0
 800fda6:	42af      	cmp	r7, r5
 800fda8:	d129      	bne.n	800fdfe <mktime+0x86>
 800fdaa:	68e5      	ldr	r5, [r4, #12]
 800fdac:	2d00      	cmp	r5, #0
 800fdae:	dd2c      	ble.n	800fe0a <mktime+0x92>
 800fdb0:	4638      	mov	r0, r7
 800fdb2:	f7ff ffd1 	bl	800fd58 <getdaysofmonth>
 800fdb6:	4285      	cmp	r5, r0
 800fdb8:	dc27      	bgt.n	800fe0a <mktime+0x92>
 800fdba:	2318      	movs	r3, #24
 800fdbc:	3d01      	subs	r5, #1
 800fdbe:	4435      	add	r5, r6
 800fdc0:	435d      	muls	r5, r3
 800fdc2:	68a3      	ldr	r3, [r4, #8]
 800fdc4:	2b17      	cmp	r3, #23
 800fdc6:	d820      	bhi.n	800fe0a <mktime+0x92>
 800fdc8:	213c      	movs	r1, #60	; 0x3c
 800fdca:	442b      	add	r3, r5
 800fdcc:	fb01 f203 	mul.w	r2, r1, r3
 800fdd0:	6863      	ldr	r3, [r4, #4]
 800fdd2:	2b3b      	cmp	r3, #59	; 0x3b
 800fdd4:	d819      	bhi.n	800fe0a <mktime+0x92>
 800fdd6:	6820      	ldr	r0, [r4, #0]
 800fdd8:	4413      	add	r3, r2
 800fdda:	283b      	cmp	r0, #59	; 0x3b
 800fddc:	fb01 f303 	mul.w	r3, r1, r3
 800fde0:	d813      	bhi.n	800fe0a <mktime+0x92>
 800fde2:	4418      	add	r0, r3
 800fde4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fde8:	4628      	mov	r0, r5
 800fdea:	f7ff ff9f 	bl	800fd2c <isleapyear>
 800fdee:	2800      	cmp	r0, #0
 800fdf0:	bf14      	ite	ne
 800fdf2:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800fdf6:	4643      	moveq	r3, r8
 800fdf8:	3501      	adds	r5, #1
 800fdfa:	441e      	add	r6, r3
 800fdfc:	e7cd      	b.n	800fd9a <mktime+0x22>
 800fdfe:	4628      	mov	r0, r5
 800fe00:	f7ff ffaa 	bl	800fd58 <getdaysofmonth>
 800fe04:	3501      	adds	r5, #1
 800fe06:	4406      	add	r6, r0
 800fe08:	e7cd      	b.n	800fda6 <mktime+0x2e>
 800fe0a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fe0e:	e7e9      	b.n	800fde4 <mktime+0x6c>

0800fe10 <gettimeofday>:
 800fe10:	b538      	push	{r3, r4, r5, lr}
 800fe12:	4b10      	ldr	r3, [pc, #64]	; (800fe54 <gettimeofday+0x44>)
 800fe14:	4a10      	ldr	r2, [pc, #64]	; (800fe58 <gettimeofday+0x48>)
 800fe16:	681b      	ldr	r3, [r3, #0]
 800fe18:	6814      	ldr	r4, [r2, #0]
 800fe1a:	6013      	str	r3, [r2, #0]
 800fe1c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fe20:	429c      	cmp	r4, r3
 800fe22:	bf2c      	ite	cs
 800fe24:	1ae4      	subcs	r4, r4, r3
 800fe26:	1b1c      	subcc	r4, r3, r4
 800fe28:	4354      	muls	r4, r2
 800fe2a:	4b0c      	ldr	r3, [pc, #48]	; (800fe5c <gettimeofday+0x4c>)
 800fe2c:	4605      	mov	r5, r0
 800fe2e:	e9d3 2100 	ldrd	r2, r1, [r3]
 800fe32:	18a4      	adds	r4, r4, r2
 800fe34:	f141 0100 	adc.w	r1, r1, #0
 800fe38:	e9c3 4100 	strd	r4, r1, [r3]
 800fe3c:	4620      	mov	r0, r4
 800fe3e:	2300      	movs	r3, #0
 800fe40:	4a07      	ldr	r2, [pc, #28]	; (800fe60 <gettimeofday+0x50>)
 800fe42:	f7f7 fe4f 	bl	8007ae4 <__aeabi_uldivmod>
 800fe46:	4b06      	ldr	r3, [pc, #24]	; (800fe60 <gettimeofday+0x50>)
 800fe48:	6028      	str	r0, [r5, #0]
 800fe4a:	fb03 4410 	mls	r4, r3, r0, r4
 800fe4e:	2000      	movs	r0, #0
 800fe50:	606c      	str	r4, [r5, #4]
 800fe52:	bd38      	pop	{r3, r4, r5, pc}
 800fe54:	2000a114 	andcs	sl, r0, r4, lsl r1
 800fe58:	2000a110 	andcs	sl, r0, r0, lsl r1
 800fe5c:	2000a108 	andcs	sl, r0, r8, lsl #2
 800fe60:	000f4240 	andeq	r4, pc, r0, asr #4

0800fe64 <settimeofday>:
 800fe64:	4b07      	ldr	r3, [pc, #28]	; (800fe84 <settimeofday+0x20>)
 800fe66:	b510      	push	{r4, lr}
 800fe68:	681a      	ldr	r2, [r3, #0]
 800fe6a:	4b07      	ldr	r3, [pc, #28]	; (800fe88 <settimeofday+0x24>)
 800fe6c:	6804      	ldr	r4, [r0, #0]
 800fe6e:	601a      	str	r2, [r3, #0]
 800fe70:	6843      	ldr	r3, [r0, #4]
 800fe72:	4806      	ldr	r0, [pc, #24]	; (800fe8c <settimeofday+0x28>)
 800fe74:	17da      	asrs	r2, r3, #31
 800fe76:	fbc4 3200 	smlal	r3, r2, r4, r0
 800fe7a:	4905      	ldr	r1, [pc, #20]	; (800fe90 <settimeofday+0x2c>)
 800fe7c:	2000      	movs	r0, #0
 800fe7e:	e9c1 3200 	strd	r3, r2, [r1]
 800fe82:	bd10      	pop	{r4, pc}
 800fe84:	2000a114 	andcs	sl, r0, r4, lsl r1
 800fe88:	2000a110 	andcs	sl, r0, r0, lsl r1
 800fe8c:	000f4240 	andeq	r4, pc, r0, asr #4
 800fe90:	2000a108 	andcs	sl, r0, r8, lsl #2

0800fe94 <time>:
 800fe94:	b513      	push	{r0, r1, r4, lr}
 800fe96:	4604      	mov	r4, r0
 800fe98:	2100      	movs	r1, #0
 800fe9a:	4668      	mov	r0, sp
 800fe9c:	f7ff ffb8 	bl	800fe10 <gettimeofday>
 800fea0:	9800      	ldr	r0, [sp, #0]
 800fea2:	b104      	cbz	r4, 800fea6 <time+0x12>
 800fea4:	6020      	str	r0, [r4, #0]
 800fea6:	b002      	add	sp, #8
 800fea8:	bd10      	pop	{r4, pc}
	...

0800feac <uart0_init>:
 800feac:	2301      	movs	r3, #1
 800feae:	b507      	push	{r0, r1, r2, lr}
 800feb0:	2208      	movs	r2, #8
 800feb2:	9300      	str	r3, [sp, #0]
 800feb4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800feb8:	2300      	movs	r3, #0
 800feba:	4803      	ldr	r0, [pc, #12]	; (800fec8 <uart0_init+0x1c>)
 800febc:	f000 ff72 	bl	8010da4 <gd32_uart_begin>
 800fec0:	b003      	add	sp, #12
 800fec2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fec6:	bf00      	nop
 800fec8:	40013800 	andmi	r3, r1, r0, lsl #16

0800fecc <uart0_putc>:
 800fecc:	280a      	cmp	r0, #10
 800fece:	b538      	push	{r3, r4, r5, lr}
 800fed0:	4604      	mov	r4, r0
 800fed2:	d10a      	bne.n	800feea <uart0_putc+0x1e>
 800fed4:	4d0b      	ldr	r5, [pc, #44]	; (800ff04 <uart0_putc+0x38>)
 800fed6:	2107      	movs	r1, #7
 800fed8:	4628      	mov	r0, r5
 800feda:	f000 fd75 	bl	80109c8 <usart_flag_get>
 800fede:	2800      	cmp	r0, #0
 800fee0:	d0f9      	beq.n	800fed6 <uart0_putc+0xa>
 800fee2:	220d      	movs	r2, #13
 800fee4:	4b08      	ldr	r3, [pc, #32]	; (800ff08 <uart0_putc+0x3c>)
 800fee6:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800feea:	4d06      	ldr	r5, [pc, #24]	; (800ff04 <uart0_putc+0x38>)
 800feec:	2107      	movs	r1, #7
 800feee:	4628      	mov	r0, r5
 800fef0:	f000 fd6a 	bl	80109c8 <usart_flag_get>
 800fef4:	2800      	cmp	r0, #0
 800fef6:	d0f9      	beq.n	800feec <uart0_putc+0x20>
 800fef8:	4b03      	ldr	r3, [pc, #12]	; (800ff08 <uart0_putc+0x3c>)
 800fefa:	b2e4      	uxtb	r4, r4
 800fefc:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800ff00:	bd38      	pop	{r3, r4, r5, pc}
 800ff02:	bf00      	nop
 800ff04:	40013800 	andmi	r3, r1, r0, lsl #16
 800ff08:	40013000 	andmi	r3, r1, r0

0800ff0c <uart0_puts>:
 800ff0c:	b510      	push	{r4, lr}
 800ff0e:	1e44      	subs	r4, r0, #1
 800ff10:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ff14:	b903      	cbnz	r3, 800ff18 <uart0_puts+0xc>
 800ff16:	bd10      	pop	{r4, pc}
 800ff18:	2b0a      	cmp	r3, #10
 800ff1a:	d102      	bne.n	800ff22 <uart0_puts+0x16>
 800ff1c:	200d      	movs	r0, #13
 800ff1e:	f7ff ffd5 	bl	800fecc <uart0_putc>
 800ff22:	7820      	ldrb	r0, [r4, #0]
 800ff24:	f7ff ffd2 	bl	800fecc <uart0_putc>
 800ff28:	e7f2      	b.n	800ff10 <uart0_puts+0x4>
	...

0800ff2c <systick_config>:
 800ff2c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ff30:	4b0b      	ldr	r3, [pc, #44]	; (800ff60 <systick_config+0x34>)
 800ff32:	681b      	ldr	r3, [r3, #0]
 800ff34:	fbb3 f3f2 	udiv	r3, r3, r2
 800ff38:	3b01      	subs	r3, #1
 800ff3a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800ff3e:	d20d      	bcs.n	800ff5c <systick_config+0x30>
 800ff40:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ff44:	21f0      	movs	r1, #240	; 0xf0
 800ff46:	6153      	str	r3, [r2, #20]
 800ff48:	4b06      	ldr	r3, [pc, #24]	; (800ff64 <systick_config+0x38>)
 800ff4a:	2007      	movs	r0, #7
 800ff4c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800ff50:	2100      	movs	r1, #0
 800ff52:	6191      	str	r1, [r2, #24]
 800ff54:	6110      	str	r0, [r2, #16]
 800ff56:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800ff5a:	4770      	bx	lr
 800ff5c:	e7fe      	b.n	800ff5c <systick_config+0x30>
 800ff5e:	bf00      	nop
 800ff60:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800ff64:	e000ed00 	and	lr, r0, r0, lsl #26

0800ff68 <SysTick_Handler>:
 800ff68:	4a02      	ldr	r2, [pc, #8]	; (800ff74 <SysTick_Handler+0xc>)
 800ff6a:	6813      	ldr	r3, [r2, #0]
 800ff6c:	3301      	adds	r3, #1
 800ff6e:	6013      	str	r3, [r2, #0]
 800ff70:	4770      	bx	lr
 800ff72:	bf00      	nop
 800ff74:	2000a114 	andcs	sl, r0, r4, lsl r1

0800ff78 <SystemInit>:
 800ff78:	4b37      	ldr	r3, [pc, #220]	; (8010058 <SystemInit+0xe0>)
 800ff7a:	4938      	ldr	r1, [pc, #224]	; (801005c <SystemInit+0xe4>)
 800ff7c:	681a      	ldr	r2, [r3, #0]
 800ff7e:	f042 0201 	orr.w	r2, r2, #1
 800ff82:	601a      	str	r2, [r3, #0]
 800ff84:	685a      	ldr	r2, [r3, #4]
 800ff86:	f022 0203 	bic.w	r2, r2, #3
 800ff8a:	605a      	str	r2, [r3, #4]
 800ff8c:	681a      	ldr	r2, [r3, #0]
 800ff8e:	400a      	ands	r2, r1
 800ff90:	601a      	str	r2, [r3, #0]
 800ff92:	6858      	ldr	r0, [r3, #4]
 800ff94:	4a32      	ldr	r2, [pc, #200]	; (8010060 <SystemInit+0xe8>)
 800ff96:	4002      	ands	r2, r0
 800ff98:	605a      	str	r2, [r3, #4]
 800ff9a:	681a      	ldr	r2, [r3, #0]
 800ff9c:	400a      	ands	r2, r1
 800ff9e:	601a      	str	r2, [r3, #0]
 800ffa0:	681a      	ldr	r2, [r3, #0]
 800ffa2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ffa6:	601a      	str	r2, [r3, #0]
 800ffa8:	685a      	ldr	r2, [r3, #4]
 800ffaa:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800ffae:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800ffb2:	605a      	str	r2, [r3, #4]
 800ffb4:	2200      	movs	r2, #0
 800ffb6:	62da      	str	r2, [r3, #44]	; 0x2c
 800ffb8:	681a      	ldr	r2, [r3, #0]
 800ffba:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800ffbe:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800ffc2:	601a      	str	r2, [r3, #0]
 800ffc4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800ffc8:	609a      	str	r2, [r3, #8]
 800ffca:	681a      	ldr	r2, [r3, #0]
 800ffcc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800ffd0:	601a      	str	r2, [r3, #0]
 800ffd2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ffd6:	6819      	ldr	r1, [r3, #0]
 800ffd8:	0389      	lsls	r1, r1, #14
 800ffda:	d401      	bmi.n	800ffe0 <SystemInit+0x68>
 800ffdc:	3a01      	subs	r2, #1
 800ffde:	d1fa      	bne.n	800ffd6 <SystemInit+0x5e>
 800ffe0:	681a      	ldr	r2, [r3, #0]
 800ffe2:	0392      	lsls	r2, r2, #14
 800ffe4:	d400      	bmi.n	800ffe8 <SystemInit+0x70>
 800ffe6:	e7fe      	b.n	800ffe6 <SystemInit+0x6e>
 800ffe8:	685a      	ldr	r2, [r3, #4]
 800ffea:	605a      	str	r2, [r3, #4]
 800ffec:	685a      	ldr	r2, [r3, #4]
 800ffee:	605a      	str	r2, [r3, #4]
 800fff0:	685a      	ldr	r2, [r3, #4]
 800fff2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800fff6:	605a      	str	r2, [r3, #4]
 800fff8:	685a      	ldr	r2, [r3, #4]
 800fffa:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800fffe:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8010002:	605a      	str	r2, [r3, #4]
 8010004:	685a      	ldr	r2, [r3, #4]
 8010006:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 801000a:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 801000e:	605a      	str	r2, [r3, #4]
 8010010:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8010012:	4a14      	ldr	r2, [pc, #80]	; (8010064 <SystemInit+0xec>)
 8010014:	400a      	ands	r2, r1
 8010016:	62da      	str	r2, [r3, #44]	; 0x2c
 8010018:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801001a:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 801001e:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 8010022:	62da      	str	r2, [r3, #44]	; 0x2c
 8010024:	681a      	ldr	r2, [r3, #0]
 8010026:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801002a:	601a      	str	r2, [r3, #0]
 801002c:	681a      	ldr	r2, [r3, #0]
 801002e:	0110      	lsls	r0, r2, #4
 8010030:	d5fc      	bpl.n	801002c <SystemInit+0xb4>
 8010032:	681a      	ldr	r2, [r3, #0]
 8010034:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8010038:	601a      	str	r2, [r3, #0]
 801003a:	681a      	ldr	r2, [r3, #0]
 801003c:	0191      	lsls	r1, r2, #6
 801003e:	d5fc      	bpl.n	801003a <SystemInit+0xc2>
 8010040:	685a      	ldr	r2, [r3, #4]
 8010042:	f022 0203 	bic.w	r2, r2, #3
 8010046:	605a      	str	r2, [r3, #4]
 8010048:	685a      	ldr	r2, [r3, #4]
 801004a:	f042 0202 	orr.w	r2, r2, #2
 801004e:	605a      	str	r2, [r3, #4]
 8010050:	685a      	ldr	r2, [r3, #4]
 8010052:	0712      	lsls	r2, r2, #28
 8010054:	d5fc      	bpl.n	8010050 <SystemInit+0xd8>
 8010056:	4770      	bx	lr
 8010058:	40021000 	andmi	r1, r2, r0
 801005c:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8010060:	e0ff000c 	rscs	r0, pc, ip
 8010064:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08010068 <bkp_data_write>:
 8010068:	f1a0 030b 	sub.w	r3, r0, #11
 801006c:	2b1f      	cmp	r3, #31
 801006e:	d804      	bhi.n	801007a <bkp_data_write+0x12>
 8010070:	4b07      	ldr	r3, [pc, #28]	; (8010090 <bkp_data_write+0x28>)
 8010072:	4403      	add	r3, r0
 8010074:	009b      	lsls	r3, r3, #2
 8010076:	8019      	strh	r1, [r3, #0]
 8010078:	4770      	bx	lr
 801007a:	1e43      	subs	r3, r0, #1
 801007c:	2b09      	cmp	r3, #9
 801007e:	bf9f      	itttt	ls
 8010080:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8010084:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8010088:	0080      	lslls	r0, r0, #2
 801008a:	8001      	strhls	r1, [r0, #0]
 801008c:	4770      	bx	lr
 801008e:	bf00      	nop
 8010090:	10001b05 	andne	r1, r0, r5, lsl #22

08010094 <bkp_data_read>:
 8010094:	f1a0 030b 	sub.w	r3, r0, #11
 8010098:	2b1f      	cmp	r3, #31
 801009a:	d805      	bhi.n	80100a8 <bkp_data_read+0x14>
 801009c:	4b08      	ldr	r3, [pc, #32]	; (80100c0 <bkp_data_read+0x2c>)
 801009e:	4403      	add	r3, r0
 80100a0:	009b      	lsls	r3, r3, #2
 80100a2:	8818      	ldrh	r0, [r3, #0]
 80100a4:	b280      	uxth	r0, r0
 80100a6:	4770      	bx	lr
 80100a8:	1e43      	subs	r3, r0, #1
 80100aa:	2b09      	cmp	r3, #9
 80100ac:	d806      	bhi.n	80100bc <bkp_data_read+0x28>
 80100ae:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 80100b2:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80100b6:	0080      	lsls	r0, r0, #2
 80100b8:	8800      	ldrh	r0, [r0, #0]
 80100ba:	e7f3      	b.n	80100a4 <bkp_data_read+0x10>
 80100bc:	2000      	movs	r0, #0
 80100be:	4770      	bx	lr
 80100c0:	10001b05 	andne	r1, r0, r5, lsl #22

080100c4 <dma_deinit>:
 80100c4:	4b0c      	ldr	r3, [pc, #48]	; (80100f8 <dma_deinit+0x34>)
 80100c6:	4298      	cmp	r0, r3
 80100c8:	d102      	bne.n	80100d0 <dma_deinit+0xc>
 80100ca:	2904      	cmp	r1, #4
 80100cc:	d900      	bls.n	80100d0 <dma_deinit+0xc>
 80100ce:	e7fe      	b.n	80100ce <dma_deinit+0xa>
 80100d0:	2314      	movs	r3, #20
 80100d2:	fb03 0301 	mla	r3, r3, r1, r0
 80100d6:	689a      	ldr	r2, [r3, #8]
 80100d8:	0089      	lsls	r1, r1, #2
 80100da:	f022 0201 	bic.w	r2, r2, #1
 80100de:	609a      	str	r2, [r3, #8]
 80100e0:	2200      	movs	r2, #0
 80100e2:	609a      	str	r2, [r3, #8]
 80100e4:	60da      	str	r2, [r3, #12]
 80100e6:	611a      	str	r2, [r3, #16]
 80100e8:	615a      	str	r2, [r3, #20]
 80100ea:	230f      	movs	r3, #15
 80100ec:	6842      	ldr	r2, [r0, #4]
 80100ee:	408b      	lsls	r3, r1
 80100f0:	4313      	orrs	r3, r2
 80100f2:	6043      	str	r3, [r0, #4]
 80100f4:	4770      	bx	lr
 80100f6:	bf00      	nop
 80100f8:	40020400 	andmi	r0, r2, r0, lsl #8

080100fc <dma_init>:
 80100fc:	4b1b      	ldr	r3, [pc, #108]	; (801016c <dma_init+0x70>)
 80100fe:	b510      	push	{r4, lr}
 8010100:	4298      	cmp	r0, r3
 8010102:	d102      	bne.n	801010a <dma_init+0xe>
 8010104:	2904      	cmp	r1, #4
 8010106:	d900      	bls.n	801010a <dma_init+0xe>
 8010108:	e7fe      	b.n	8010108 <dma_init+0xc>
 801010a:	2314      	movs	r3, #20
 801010c:	fb03 0101 	mla	r1, r3, r1, r0
 8010110:	6813      	ldr	r3, [r2, #0]
 8010112:	610b      	str	r3, [r1, #16]
 8010114:	6893      	ldr	r3, [r2, #8]
 8010116:	614b      	str	r3, [r1, #20]
 8010118:	8a13      	ldrh	r3, [r2, #16]
 801011a:	60cb      	str	r3, [r1, #12]
 801011c:	68d4      	ldr	r4, [r2, #12]
 801011e:	6853      	ldr	r3, [r2, #4]
 8010120:	6888      	ldr	r0, [r1, #8]
 8010122:	4323      	orrs	r3, r4
 8010124:	6954      	ldr	r4, [r2, #20]
 8010126:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 801012a:	4323      	orrs	r3, r4
 801012c:	4303      	orrs	r3, r0
 801012e:	608b      	str	r3, [r1, #8]
 8010130:	7e13      	ldrb	r3, [r2, #24]
 8010132:	2b01      	cmp	r3, #1
 8010134:	688b      	ldr	r3, [r1, #8]
 8010136:	bf0c      	ite	eq
 8010138:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 801013c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8010140:	608b      	str	r3, [r1, #8]
 8010142:	7e53      	ldrb	r3, [r2, #25]
 8010144:	2b01      	cmp	r3, #1
 8010146:	688b      	ldr	r3, [r1, #8]
 8010148:	bf0c      	ite	eq
 801014a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 801014e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8010152:	608b      	str	r3, [r1, #8]
 8010154:	7e93      	ldrb	r3, [r2, #26]
 8010156:	b923      	cbnz	r3, 8010162 <dma_init+0x66>
 8010158:	688b      	ldr	r3, [r1, #8]
 801015a:	f023 0310 	bic.w	r3, r3, #16
 801015e:	608b      	str	r3, [r1, #8]
 8010160:	bd10      	pop	{r4, pc}
 8010162:	688b      	ldr	r3, [r1, #8]
 8010164:	f043 0310 	orr.w	r3, r3, #16
 8010168:	e7f9      	b.n	801015e <dma_init+0x62>
 801016a:	bf00      	nop
 801016c:	40020400 	andmi	r0, r2, r0, lsl #8

08010170 <dma_circulation_disable>:
 8010170:	4b06      	ldr	r3, [pc, #24]	; (801018c <dma_circulation_disable+0x1c>)
 8010172:	4298      	cmp	r0, r3
 8010174:	d102      	bne.n	801017c <dma_circulation_disable+0xc>
 8010176:	2904      	cmp	r1, #4
 8010178:	d900      	bls.n	801017c <dma_circulation_disable+0xc>
 801017a:	e7fe      	b.n	801017a <dma_circulation_disable+0xa>
 801017c:	2314      	movs	r3, #20
 801017e:	4359      	muls	r1, r3
 8010180:	3008      	adds	r0, #8
 8010182:	580b      	ldr	r3, [r1, r0]
 8010184:	f023 0320 	bic.w	r3, r3, #32
 8010188:	500b      	str	r3, [r1, r0]
 801018a:	4770      	bx	lr
 801018c:	40020400 	andmi	r0, r2, r0, lsl #8

08010190 <dma_memory_to_memory_disable>:
 8010190:	4b06      	ldr	r3, [pc, #24]	; (80101ac <dma_memory_to_memory_disable+0x1c>)
 8010192:	4298      	cmp	r0, r3
 8010194:	d102      	bne.n	801019c <dma_memory_to_memory_disable+0xc>
 8010196:	2904      	cmp	r1, #4
 8010198:	d900      	bls.n	801019c <dma_memory_to_memory_disable+0xc>
 801019a:	e7fe      	b.n	801019a <dma_memory_to_memory_disable+0xa>
 801019c:	2314      	movs	r3, #20
 801019e:	4359      	muls	r1, r3
 80101a0:	3008      	adds	r0, #8
 80101a2:	580b      	ldr	r3, [r1, r0]
 80101a4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80101a8:	500b      	str	r3, [r1, r0]
 80101aa:	4770      	bx	lr
 80101ac:	40020400 	andmi	r0, r2, r0, lsl #8

080101b0 <fmc_bank0_unlock>:
 80101b0:	4b04      	ldr	r3, [pc, #16]	; (80101c4 <fmc_bank0_unlock+0x14>)
 80101b2:	691a      	ldr	r2, [r3, #16]
 80101b4:	0612      	lsls	r2, r2, #24
 80101b6:	bf41      	itttt	mi
 80101b8:	4a03      	ldrmi	r2, [pc, #12]	; (80101c8 <fmc_bank0_unlock+0x18>)
 80101ba:	605a      	strmi	r2, [r3, #4]
 80101bc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80101c0:	605a      	strmi	r2, [r3, #4]
 80101c2:	4770      	bx	lr
 80101c4:	40022000 	andmi	r2, r2, r0
 80101c8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080101cc <fmc_bank1_unlock>:
 80101cc:	4b04      	ldr	r3, [pc, #16]	; (80101e0 <fmc_bank1_unlock+0x14>)
 80101ce:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80101d0:	0612      	lsls	r2, r2, #24
 80101d2:	bf41      	itttt	mi
 80101d4:	4a03      	ldrmi	r2, [pc, #12]	; (80101e4 <fmc_bank1_unlock+0x18>)
 80101d6:	645a      	strmi	r2, [r3, #68]	; 0x44
 80101d8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80101dc:	645a      	strmi	r2, [r3, #68]	; 0x44
 80101de:	4770      	bx	lr
 80101e0:	40022000 	andmi	r2, r2, r0
 80101e4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080101e8 <fmc_bank0_lock>:
 80101e8:	4a02      	ldr	r2, [pc, #8]	; (80101f4 <fmc_bank0_lock+0xc>)
 80101ea:	6913      	ldr	r3, [r2, #16]
 80101ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80101f0:	6113      	str	r3, [r2, #16]
 80101f2:	4770      	bx	lr
 80101f4:	40022000 	andmi	r2, r2, r0

080101f8 <fmc_bank1_lock>:
 80101f8:	4a02      	ldr	r2, [pc, #8]	; (8010204 <fmc_bank1_lock+0xc>)
 80101fa:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80101fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010200:	6513      	str	r3, [r2, #80]	; 0x50
 8010202:	4770      	bx	lr
 8010204:	40022000 	andmi	r2, r2, r0

08010208 <fmc_bank0_state_get>:
 8010208:	4b07      	ldr	r3, [pc, #28]	; (8010228 <fmc_bank0_state_get+0x20>)
 801020a:	68da      	ldr	r2, [r3, #12]
 801020c:	07d1      	lsls	r1, r2, #31
 801020e:	d407      	bmi.n	8010220 <fmc_bank0_state_get+0x18>
 8010210:	68da      	ldr	r2, [r3, #12]
 8010212:	06d2      	lsls	r2, r2, #27
 8010214:	d406      	bmi.n	8010224 <fmc_bank0_state_get+0x1c>
 8010216:	68d8      	ldr	r0, [r3, #12]
 8010218:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801021c:	0040      	lsls	r0, r0, #1
 801021e:	4770      	bx	lr
 8010220:	2001      	movs	r0, #1
 8010222:	4770      	bx	lr
 8010224:	2003      	movs	r0, #3
 8010226:	4770      	bx	lr
 8010228:	40022000 	andmi	r2, r2, r0

0801022c <fmc_bank1_state_get>:
 801022c:	4b07      	ldr	r3, [pc, #28]	; (801024c <fmc_bank1_state_get+0x20>)
 801022e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010230:	07d1      	lsls	r1, r2, #31
 8010232:	d407      	bmi.n	8010244 <fmc_bank1_state_get+0x18>
 8010234:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010236:	06d2      	lsls	r2, r2, #27
 8010238:	d406      	bmi.n	8010248 <fmc_bank1_state_get+0x1c>
 801023a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801023c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8010240:	0040      	lsls	r0, r0, #1
 8010242:	4770      	bx	lr
 8010244:	2001      	movs	r0, #1
 8010246:	4770      	bx	lr
 8010248:	2003      	movs	r0, #3
 801024a:	4770      	bx	lr
 801024c:	40022000 	andmi	r2, r2, r0

08010250 <fwdgt_enable>:
 8010250:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8010254:	4b01      	ldr	r3, [pc, #4]	; (801025c <fwdgt_enable+0xc>)
 8010256:	601a      	str	r2, [r3, #0]
 8010258:	4770      	bx	lr
 801025a:	bf00      	nop
 801025c:	40003000 	andmi	r3, r0, r0

08010260 <fwdgt_counter_reload>:
 8010260:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8010264:	4b01      	ldr	r3, [pc, #4]	; (801026c <fwdgt_counter_reload+0xc>)
 8010266:	601a      	str	r2, [r3, #0]
 8010268:	4770      	bx	lr
 801026a:	bf00      	nop
 801026c:	40003000 	andmi	r3, r0, r0

08010270 <fwdgt_config>:
 8010270:	f245 5355 	movw	r3, #21845	; 0x5555
 8010274:	4a11      	ldr	r2, [pc, #68]	; (80102bc <fwdgt_config+0x4c>)
 8010276:	b510      	push	{r4, lr}
 8010278:	4c11      	ldr	r4, [pc, #68]	; (80102c0 <fwdgt_config+0x50>)
 801027a:	6013      	str	r3, [r2, #0]
 801027c:	68d3      	ldr	r3, [r2, #12]
 801027e:	3c01      	subs	r4, #1
 8010280:	f003 0301 	and.w	r3, r3, #1
 8010284:	d013      	beq.n	80102ae <fwdgt_config+0x3e>
 8010286:	2b00      	cmp	r3, #0
 8010288:	d1f8      	bne.n	801027c <fwdgt_config+0xc>
 801028a:	6051      	str	r1, [r2, #4]
 801028c:	490c      	ldr	r1, [pc, #48]	; (80102c0 <fwdgt_config+0x50>)
 801028e:	4a0b      	ldr	r2, [pc, #44]	; (80102bc <fwdgt_config+0x4c>)
 8010290:	68d3      	ldr	r3, [r2, #12]
 8010292:	3901      	subs	r1, #1
 8010294:	f003 0302 	and.w	r3, r3, #2
 8010298:	d00d      	beq.n	80102b6 <fwdgt_config+0x46>
 801029a:	2b00      	cmp	r3, #0
 801029c:	d1f8      	bne.n	8010290 <fwdgt_config+0x20>
 801029e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80102a2:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80102a6:	6090      	str	r0, [r2, #8]
 80102a8:	2001      	movs	r0, #1
 80102aa:	6013      	str	r3, [r2, #0]
 80102ac:	e002      	b.n	80102b4 <fwdgt_config+0x44>
 80102ae:	2b00      	cmp	r3, #0
 80102b0:	d0eb      	beq.n	801028a <fwdgt_config+0x1a>
 80102b2:	2000      	movs	r0, #0
 80102b4:	bd10      	pop	{r4, pc}
 80102b6:	2b00      	cmp	r3, #0
 80102b8:	d1fb      	bne.n	80102b2 <fwdgt_config+0x42>
 80102ba:	e7f0      	b.n	801029e <fwdgt_config+0x2e>
 80102bc:	40003000 	andmi	r3, r0, r0
 80102c0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080102c4 <gpio_init>:
 80102c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102c8:	f04f 0c0f 	mov.w	ip, #15
 80102cc:	06cf      	lsls	r7, r1, #27
 80102ce:	f04f 0400 	mov.w	r4, #0
 80102d2:	f04f 0701 	mov.w	r7, #1
 80102d6:	f001 050f 	and.w	r5, r1, #15
 80102da:	bf48      	it	mi
 80102dc:	4315      	orrmi	r5, r2
 80102de:	fa23 f204 	lsr.w	r2, r3, r4
 80102e2:	07d6      	lsls	r6, r2, #31
 80102e4:	d510      	bpl.n	8010308 <gpio_init+0x44>
 80102e6:	00a2      	lsls	r2, r4, #2
 80102e8:	6806      	ldr	r6, [r0, #0]
 80102ea:	fa0c fe02 	lsl.w	lr, ip, r2
 80102ee:	ea26 060e 	bic.w	r6, r6, lr
 80102f2:	fa05 f202 	lsl.w	r2, r5, r2
 80102f6:	2928      	cmp	r1, #40	; 0x28
 80102f8:	ea42 0206 	orr.w	r2, r2, r6
 80102fc:	d128      	bne.n	8010350 <gpio_init+0x8c>
 80102fe:	fa07 f604 	lsl.w	r6, r7, r4
 8010302:	401e      	ands	r6, r3
 8010304:	6146      	str	r6, [r0, #20]
 8010306:	6002      	str	r2, [r0, #0]
 8010308:	3401      	adds	r4, #1
 801030a:	2c08      	cmp	r4, #8
 801030c:	d1e7      	bne.n	80102de <gpio_init+0x1a>
 801030e:	2600      	movs	r6, #0
 8010310:	f04f 0c0f 	mov.w	ip, #15
 8010314:	2701      	movs	r7, #1
 8010316:	f106 0208 	add.w	r2, r6, #8
 801031a:	fa23 f402 	lsr.w	r4, r3, r2
 801031e:	07e4      	lsls	r4, r4, #31
 8010320:	d511      	bpl.n	8010346 <gpio_init+0x82>
 8010322:	00b4      	lsls	r4, r6, #2
 8010324:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8010328:	fa0c f804 	lsl.w	r8, ip, r4
 801032c:	ea2e 0e08 	bic.w	lr, lr, r8
 8010330:	fa05 f404 	lsl.w	r4, r5, r4
 8010334:	2928      	cmp	r1, #40	; 0x28
 8010336:	ea44 040e 	orr.w	r4, r4, lr
 801033a:	d110      	bne.n	801035e <gpio_init+0x9a>
 801033c:	fa07 f202 	lsl.w	r2, r7, r2
 8010340:	401a      	ands	r2, r3
 8010342:	6142      	str	r2, [r0, #20]
 8010344:	6044      	str	r4, [r0, #4]
 8010346:	3601      	adds	r6, #1
 8010348:	2e08      	cmp	r6, #8
 801034a:	d1e4      	bne.n	8010316 <gpio_init+0x52>
 801034c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010350:	2948      	cmp	r1, #72	; 0x48
 8010352:	bf02      	ittt	eq
 8010354:	fa07 f604 	lsleq.w	r6, r7, r4
 8010358:	401e      	andeq	r6, r3
 801035a:	6106      	streq	r6, [r0, #16]
 801035c:	e7d3      	b.n	8010306 <gpio_init+0x42>
 801035e:	2948      	cmp	r1, #72	; 0x48
 8010360:	bf02      	ittt	eq
 8010362:	fa07 f202 	lsleq.w	r2, r7, r2
 8010366:	401a      	andeq	r2, r3
 8010368:	6102      	streq	r2, [r0, #16]
 801036a:	e7eb      	b.n	8010344 <gpio_init+0x80>

0801036c <gpio_pin_remap_config>:
 801036c:	2800      	cmp	r0, #0
 801036e:	4a16      	ldr	r2, [pc, #88]	; (80103c8 <gpio_pin_remap_config+0x5c>)
 8010370:	b530      	push	{r4, r5, lr}
 8010372:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8010376:	bfb4      	ite	lt
 8010378:	69d3      	ldrlt	r3, [r2, #28]
 801037a:	6853      	ldrge	r3, [r2, #4]
 801037c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8010380:	b284      	uxth	r4, r0
 8010382:	d110      	bne.n	80103a6 <gpio_pin_remap_config+0x3a>
 8010384:	6855      	ldr	r5, [r2, #4]
 8010386:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 801038a:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801038e:	6055      	str	r5, [r2, #4]
 8010390:	b119      	cbz	r1, 801039a <gpio_pin_remap_config+0x2e>
 8010392:	0d42      	lsrs	r2, r0, #21
 8010394:	0112      	lsls	r2, r2, #4
 8010396:	4094      	lsls	r4, r2
 8010398:	4323      	orrs	r3, r4
 801039a:	4a0b      	ldr	r2, [pc, #44]	; (80103c8 <gpio_pin_remap_config+0x5c>)
 801039c:	2800      	cmp	r0, #0
 801039e:	bfb4      	ite	lt
 80103a0:	61d3      	strlt	r3, [r2, #28]
 80103a2:	6053      	strge	r3, [r2, #4]
 80103a4:	bd30      	pop	{r4, r5, pc}
 80103a6:	02c2      	lsls	r2, r0, #11
 80103a8:	bf4d      	iteet	mi
 80103aa:	2203      	movmi	r2, #3
 80103ac:	0d42      	lsrpl	r2, r0, #21
 80103ae:	0112      	lslpl	r2, r2, #4
 80103b0:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80103b4:	bf4c      	ite	mi
 80103b6:	40aa      	lslmi	r2, r5
 80103b8:	fa04 f202 	lslpl.w	r2, r4, r2
 80103bc:	ea23 0302 	bic.w	r3, r3, r2
 80103c0:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80103c4:	e7e4      	b.n	8010390 <gpio_pin_remap_config+0x24>
 80103c6:	bf00      	nop
 80103c8:	40010000 	andmi	r0, r1, r0

080103cc <gpio_ethernet_phy_select>:
 80103cc:	4b04      	ldr	r3, [pc, #16]	; (80103e0 <gpio_ethernet_phy_select+0x14>)
 80103ce:	685a      	ldr	r2, [r3, #4]
 80103d0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80103d4:	605a      	str	r2, [r3, #4]
 80103d6:	685a      	ldr	r2, [r3, #4]
 80103d8:	4302      	orrs	r2, r0
 80103da:	605a      	str	r2, [r3, #4]
 80103dc:	4770      	bx	lr
 80103de:	bf00      	nop
 80103e0:	40010000 	andmi	r0, r1, r0

080103e4 <pmu_backup_write_enable>:
 80103e4:	4a02      	ldr	r2, [pc, #8]	; (80103f0 <pmu_backup_write_enable+0xc>)
 80103e6:	6813      	ldr	r3, [r2, #0]
 80103e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80103ec:	6013      	str	r3, [r2, #0]
 80103ee:	4770      	bx	lr
 80103f0:	40007000 	andmi	r7, r0, r0

080103f4 <rcu_periph_clock_enable>:
 80103f4:	2201      	movs	r2, #1
 80103f6:	0983      	lsrs	r3, r0, #6
 80103f8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80103fc:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010400:	6819      	ldr	r1, [r3, #0]
 8010402:	f000 001f 	and.w	r0, r0, #31
 8010406:	4082      	lsls	r2, r0
 8010408:	430a      	orrs	r2, r1
 801040a:	601a      	str	r2, [r3, #0]
 801040c:	4770      	bx	lr

0801040e <rcu_periph_clock_disable>:
 801040e:	2101      	movs	r1, #1
 8010410:	0983      	lsrs	r3, r0, #6
 8010412:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010416:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801041a:	681a      	ldr	r2, [r3, #0]
 801041c:	f000 001f 	and.w	r0, r0, #31
 8010420:	4081      	lsls	r1, r0
 8010422:	ea22 0201 	bic.w	r2, r2, r1
 8010426:	601a      	str	r2, [r3, #0]
 8010428:	4770      	bx	lr

0801042a <rcu_periph_reset_enable>:
 801042a:	f7ff bfe3 	b.w	80103f4 <rcu_periph_clock_enable>

0801042e <rcu_periph_reset_disable>:
 801042e:	f7ff bfee 	b.w	801040e <rcu_periph_clock_disable>
	...

08010434 <rcu_ckout0_config>:
 8010434:	4a03      	ldr	r2, [pc, #12]	; (8010444 <rcu_ckout0_config+0x10>)
 8010436:	6853      	ldr	r3, [r2, #4]
 8010438:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 801043c:	4303      	orrs	r3, r0
 801043e:	6053      	str	r3, [r2, #4]
 8010440:	4770      	bx	lr
 8010442:	bf00      	nop
 8010444:	40021000 	andmi	r1, r2, r0

08010448 <rcu_pll2_config>:
 8010448:	4b04      	ldr	r3, [pc, #16]	; (801045c <rcu_pll2_config+0x14>)
 801044a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801044c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8010450:	62da      	str	r2, [r3, #44]	; 0x2c
 8010452:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010454:	4302      	orrs	r2, r0
 8010456:	62da      	str	r2, [r3, #44]	; 0x2c
 8010458:	4770      	bx	lr
 801045a:	bf00      	nop
 801045c:	40021000 	andmi	r1, r2, r0

08010460 <rcu_adc_clock_config>:
 8010460:	490c      	ldr	r1, [pc, #48]	; (8010494 <rcu_adc_clock_config+0x34>)
 8010462:	2805      	cmp	r0, #5
 8010464:	684b      	ldr	r3, [r1, #4]
 8010466:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801046a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801046e:	d006      	beq.n	801047e <rcu_adc_clock_config+0x1e>
 8010470:	d803      	bhi.n	801047a <rcu_adc_clock_config+0x1a>
 8010472:	2804      	cmp	r0, #4
 8010474:	d10a      	bne.n	801048c <rcu_adc_clock_config+0x2c>
 8010476:	604b      	str	r3, [r1, #4]
 8010478:	4770      	bx	lr
 801047a:	2807      	cmp	r0, #7
 801047c:	d1fb      	bne.n	8010476 <rcu_adc_clock_config+0x16>
 801047e:	4a06      	ldr	r2, [pc, #24]	; (8010498 <rcu_adc_clock_config+0x38>)
 8010480:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8010484:	4313      	orrs	r3, r2
 8010486:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801048a:	e7f4      	b.n	8010476 <rcu_adc_clock_config+0x16>
 801048c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8010490:	e7f1      	b.n	8010476 <rcu_adc_clock_config+0x16>
 8010492:	bf00      	nop
 8010494:	40021000 	andmi	r1, r2, r0
 8010498:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0801049c <rcu_flag_get>:
 801049c:	0983      	lsrs	r3, r0, #6
 801049e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80104a2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80104a6:	681a      	ldr	r2, [r3, #0]
 80104a8:	2301      	movs	r3, #1
 80104aa:	f000 001f 	and.w	r0, r0, #31
 80104ae:	4083      	lsls	r3, r0
 80104b0:	4213      	tst	r3, r2
 80104b2:	bf14      	ite	ne
 80104b4:	2001      	movne	r0, #1
 80104b6:	2000      	moveq	r0, #0
 80104b8:	4770      	bx	lr
	...

080104bc <rcu_osci_stab_wait>:
 80104bc:	281a      	cmp	r0, #26
 80104be:	b508      	push	{r3, lr}
 80104c0:	d051      	beq.n	8010566 <rcu_osci_stab_wait+0xaa>
 80104c2:	d806      	bhi.n	80104d2 <rcu_osci_stab_wait+0x16>
 80104c4:	2810      	cmp	r0, #16
 80104c6:	d015      	beq.n	80104f4 <rcu_osci_stab_wait+0x38>
 80104c8:	2818      	cmp	r0, #24
 80104ca:	d043      	beq.n	8010554 <rcu_osci_stab_wait+0x98>
 80104cc:	b368      	cbz	r0, 801052a <rcu_osci_stab_wait+0x6e>
 80104ce:	2000      	movs	r0, #0
 80104d0:	bd08      	pop	{r3, pc}
 80104d2:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80104d6:	d01c      	beq.n	8010512 <rcu_osci_stab_wait+0x56>
 80104d8:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80104dc:	d02f      	beq.n	801053e <rcu_osci_stab_wait+0x82>
 80104de:	281c      	cmp	r0, #28
 80104e0:	d1f5      	bne.n	80104ce <rcu_osci_stab_wait+0x12>
 80104e2:	4925      	ldr	r1, [pc, #148]	; (8010578 <rcu_osci_stab_wait+0xbc>)
 80104e4:	201d      	movs	r0, #29
 80104e6:	f7ff ffd9 	bl	801049c <rcu_flag_get>
 80104ea:	b908      	cbnz	r0, 80104f0 <rcu_osci_stab_wait+0x34>
 80104ec:	3901      	subs	r1, #1
 80104ee:	d1f9      	bne.n	80104e4 <rcu_osci_stab_wait+0x28>
 80104f0:	201d      	movs	r0, #29
 80104f2:	e008      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 80104f4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80104f8:	2011      	movs	r0, #17
 80104fa:	f7ff ffcf 	bl	801049c <rcu_flag_get>
 80104fe:	b908      	cbnz	r0, 8010504 <rcu_osci_stab_wait+0x48>
 8010500:	3901      	subs	r1, #1
 8010502:	d1f9      	bne.n	80104f8 <rcu_osci_stab_wait+0x3c>
 8010504:	2011      	movs	r0, #17
 8010506:	f7ff ffc9 	bl	801049c <rcu_flag_get>
 801050a:	3800      	subs	r0, #0
 801050c:	bf18      	it	ne
 801050e:	2001      	movne	r0, #1
 8010510:	e7de      	b.n	80104d0 <rcu_osci_stab_wait+0x14>
 8010512:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8010516:	f640 0001 	movw	r0, #2049	; 0x801
 801051a:	f7ff ffbf 	bl	801049c <rcu_flag_get>
 801051e:	b908      	cbnz	r0, 8010524 <rcu_osci_stab_wait+0x68>
 8010520:	3901      	subs	r1, #1
 8010522:	d1f8      	bne.n	8010516 <rcu_osci_stab_wait+0x5a>
 8010524:	f640 0001 	movw	r0, #2049	; 0x801
 8010528:	e7ed      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 801052a:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801052e:	2001      	movs	r0, #1
 8010530:	f7ff ffb4 	bl	801049c <rcu_flag_get>
 8010534:	b908      	cbnz	r0, 801053a <rcu_osci_stab_wait+0x7e>
 8010536:	3901      	subs	r1, #1
 8010538:	d1f9      	bne.n	801052e <rcu_osci_stab_wait+0x72>
 801053a:	2001      	movs	r0, #1
 801053c:	e7e3      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 801053e:	490e      	ldr	r1, [pc, #56]	; (8010578 <rcu_osci_stab_wait+0xbc>)
 8010540:	f640 1001 	movw	r0, #2305	; 0x901
 8010544:	f7ff ffaa 	bl	801049c <rcu_flag_get>
 8010548:	b908      	cbnz	r0, 801054e <rcu_osci_stab_wait+0x92>
 801054a:	3901      	subs	r1, #1
 801054c:	d1f8      	bne.n	8010540 <rcu_osci_stab_wait+0x84>
 801054e:	f640 1001 	movw	r0, #2305	; 0x901
 8010552:	e7d8      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 8010554:	4908      	ldr	r1, [pc, #32]	; (8010578 <rcu_osci_stab_wait+0xbc>)
 8010556:	2019      	movs	r0, #25
 8010558:	f7ff ffa0 	bl	801049c <rcu_flag_get>
 801055c:	b908      	cbnz	r0, 8010562 <rcu_osci_stab_wait+0xa6>
 801055e:	3901      	subs	r1, #1
 8010560:	d1f9      	bne.n	8010556 <rcu_osci_stab_wait+0x9a>
 8010562:	2019      	movs	r0, #25
 8010564:	e7cf      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 8010566:	4904      	ldr	r1, [pc, #16]	; (8010578 <rcu_osci_stab_wait+0xbc>)
 8010568:	201b      	movs	r0, #27
 801056a:	f7ff ff97 	bl	801049c <rcu_flag_get>
 801056e:	b908      	cbnz	r0, 8010574 <rcu_osci_stab_wait+0xb8>
 8010570:	3901      	subs	r1, #1
 8010572:	d1f9      	bne.n	8010568 <rcu_osci_stab_wait+0xac>
 8010574:	201b      	movs	r0, #27
 8010576:	e7c6      	b.n	8010506 <rcu_osci_stab_wait+0x4a>
 8010578:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801057c <rcu_osci_on>:
 801057c:	f7ff bf3a 	b.w	80103f4 <rcu_periph_clock_enable>

08010580 <rcu_clock_freq_get>:
 8010580:	4b3e      	ldr	r3, [pc, #248]	; (801067c <rcu_clock_freq_get+0xfc>)
 8010582:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010584:	4604      	mov	r4, r0
 8010586:	461f      	mov	r7, r3
 8010588:	b089      	sub	sp, #36	; 0x24
 801058a:	ad04      	add	r5, sp, #16
 801058c:	f103 0610 	add.w	r6, r3, #16
 8010590:	462a      	mov	r2, r5
 8010592:	6818      	ldr	r0, [r3, #0]
 8010594:	6859      	ldr	r1, [r3, #4]
 8010596:	3308      	adds	r3, #8
 8010598:	c203      	stmia	r2!, {r0, r1}
 801059a:	42b3      	cmp	r3, r6
 801059c:	4615      	mov	r5, r2
 801059e:	d1f7      	bne.n	8010590 <rcu_clock_freq_get+0x10>
 80105a0:	466b      	mov	r3, sp
 80105a2:	6938      	ldr	r0, [r7, #16]
 80105a4:	6871      	ldr	r1, [r6, #4]
 80105a6:	4a36      	ldr	r2, [pc, #216]	; (8010680 <rcu_clock_freq_get+0x100>)
 80105a8:	c303      	stmia	r3!, {r0, r1}
 80105aa:	c303      	stmia	r3!, {r0, r1}
 80105ac:	6853      	ldr	r3, [r2, #4]
 80105ae:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80105b2:	2b01      	cmp	r3, #1
 80105b4:	d053      	beq.n	801065e <rcu_clock_freq_get+0xde>
 80105b6:	2b02      	cmp	r3, #2
 80105b8:	d153      	bne.n	8010662 <rcu_clock_freq_get+0xe2>
 80105ba:	6853      	ldr	r3, [r2, #4]
 80105bc:	03dd      	lsls	r5, r3, #15
 80105be:	d523      	bpl.n	8010608 <rcu_clock_freq_get+0x88>
 80105c0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80105c2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80105c6:	4b2f      	ldr	r3, [pc, #188]	; (8010684 <rcu_clock_freq_get+0x104>)
 80105c8:	d00e      	beq.n	80105e8 <rcu_clock_freq_get+0x68>
 80105ca:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80105cc:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80105ce:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80105d2:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80105d6:	3101      	adds	r1, #1
 80105d8:	280f      	cmp	r0, #15
 80105da:	f100 0502 	add.w	r5, r0, #2
 80105de:	fbb3 f3f1 	udiv	r3, r3, r1
 80105e2:	bf08      	it	eq
 80105e4:	2514      	moveq	r5, #20
 80105e6:	436b      	muls	r3, r5
 80105e8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80105ea:	f001 010f 	and.w	r1, r1, #15
 80105ee:	3101      	adds	r1, #1
 80105f0:	fbb3 f3f1 	udiv	r3, r3, r1
 80105f4:	6851      	ldr	r1, [r2, #4]
 80105f6:	6850      	ldr	r0, [r2, #4]
 80105f8:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80105fc:	0080      	lsls	r0, r0, #2
 80105fe:	d505      	bpl.n	801060c <rcu_clock_freq_get+0x8c>
 8010600:	f041 0110 	orr.w	r1, r1, #16
 8010604:	1c48      	adds	r0, r1, #1
 8010606:	e007      	b.n	8010618 <rcu_clock_freq_get+0x98>
 8010608:	4b1f      	ldr	r3, [pc, #124]	; (8010688 <rcu_clock_freq_get+0x108>)
 801060a:	e7f3      	b.n	80105f4 <rcu_clock_freq_get+0x74>
 801060c:	290f      	cmp	r1, #15
 801060e:	d0f9      	beq.n	8010604 <rcu_clock_freq_get+0x84>
 8010610:	290d      	cmp	r1, #13
 8010612:	f101 0002 	add.w	r0, r1, #2
 8010616:	d01d      	beq.n	8010654 <rcu_clock_freq_get+0xd4>
 8010618:	4358      	muls	r0, r3
 801061a:	6853      	ldr	r3, [r2, #4]
 801061c:	6851      	ldr	r1, [r2, #4]
 801061e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8010622:	6852      	ldr	r2, [r2, #4]
 8010624:	3320      	adds	r3, #32
 8010626:	446b      	add	r3, sp
 8010628:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801062c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8010630:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8010634:	3120      	adds	r1, #32
 8010636:	3220      	adds	r2, #32
 8010638:	4469      	add	r1, sp
 801063a:	446a      	add	r2, sp
 801063c:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8010640:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8010644:	fa20 f303 	lsr.w	r3, r0, r3
 8010648:	2c03      	cmp	r4, #3
 801064a:	d815      	bhi.n	8010678 <rcu_clock_freq_get+0xf8>
 801064c:	e8df f004 	tbb	[pc, r4]
 8010650:	110e0b0c 	tstne	lr, ip, lsl #22
 8010654:	2006      	movs	r0, #6
 8010656:	0859      	lsrs	r1, r3, #1
 8010658:	fb00 1003 	mla	r0, r0, r3, r1
 801065c:	e7dd      	b.n	801061a <rcu_clock_freq_get+0x9a>
 801065e:	4809      	ldr	r0, [pc, #36]	; (8010684 <rcu_clock_freq_get+0x104>)
 8010660:	e7db      	b.n	801061a <rcu_clock_freq_get+0x9a>
 8010662:	480a      	ldr	r0, [pc, #40]	; (801068c <rcu_clock_freq_get+0x10c>)
 8010664:	e7d9      	b.n	801061a <rcu_clock_freq_get+0x9a>
 8010666:	4618      	mov	r0, r3
 8010668:	b009      	add	sp, #36	; 0x24
 801066a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801066c:	fa23 f001 	lsr.w	r0, r3, r1
 8010670:	e7fa      	b.n	8010668 <rcu_clock_freq_get+0xe8>
 8010672:	fa23 f002 	lsr.w	r0, r3, r2
 8010676:	e7f7      	b.n	8010668 <rcu_clock_freq_get+0xe8>
 8010678:	2000      	movs	r0, #0
 801067a:	e7f5      	b.n	8010668 <rcu_clock_freq_get+0xe8>
 801067c:	08011edc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, fp, ip}
 8010680:	40021000 	andmi	r1, r2, r0
 8010684:	017d7840 	cmneq	sp, r0, asr #16
 8010688:	003d0900 	eorseq	r0, sp, r0, lsl #18
 801068c:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08010690 <timer_deinit>:
 8010690:	b508      	push	{r3, lr}
 8010692:	4b2d      	ldr	r3, [pc, #180]	; (8010748 <timer_deinit+0xb8>)
 8010694:	4298      	cmp	r0, r3
 8010696:	d048      	beq.n	801072a <timer_deinit+0x9a>
 8010698:	d816      	bhi.n	80106c8 <timer_deinit+0x38>
 801069a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801069e:	4298      	cmp	r0, r3
 80106a0:	d03c      	beq.n	801071c <timer_deinit+0x8c>
 80106a2:	d807      	bhi.n	80106b4 <timer_deinit+0x24>
 80106a4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80106a8:	d02a      	beq.n	8010700 <timer_deinit+0x70>
 80106aa:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80106ae:	4298      	cmp	r0, r3
 80106b0:	d02d      	beq.n	801070e <timer_deinit+0x7e>
 80106b2:	bd08      	pop	{r3, pc}
 80106b4:	4b25      	ldr	r3, [pc, #148]	; (801074c <timer_deinit+0xbc>)
 80106b6:	4298      	cmp	r0, r3
 80106b8:	d1fb      	bne.n	80106b2 <timer_deinit+0x22>
 80106ba:	f240 4003 	movw	r0, #1027	; 0x403
 80106be:	f7ff feb4 	bl	801042a <rcu_periph_reset_enable>
 80106c2:	f240 4003 	movw	r0, #1027	; 0x403
 80106c6:	e017      	b.n	80106f8 <timer_deinit+0x68>
 80106c8:	4b21      	ldr	r3, [pc, #132]	; (8010750 <timer_deinit+0xc0>)
 80106ca:	4298      	cmp	r0, r3
 80106cc:	d00e      	beq.n	80106ec <timer_deinit+0x5c>
 80106ce:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80106d2:	4298      	cmp	r0, r3
 80106d4:	d030      	beq.n	8010738 <timer_deinit+0xa8>
 80106d6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80106da:	4298      	cmp	r0, r3
 80106dc:	d1e9      	bne.n	80106b2 <timer_deinit+0x22>
 80106de:	f240 4005 	movw	r0, #1029	; 0x405
 80106e2:	f7ff fea2 	bl	801042a <rcu_periph_reset_enable>
 80106e6:	f240 4005 	movw	r0, #1029	; 0x405
 80106ea:	e005      	b.n	80106f8 <timer_deinit+0x68>
 80106ec:	f240 300b 	movw	r0, #779	; 0x30b
 80106f0:	f7ff fe9b 	bl	801042a <rcu_periph_reset_enable>
 80106f4:	f240 300b 	movw	r0, #779	; 0x30b
 80106f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80106fc:	f7ff be97 	b.w	801042e <rcu_periph_reset_disable>
 8010700:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010704:	f7ff fe91 	bl	801042a <rcu_periph_reset_enable>
 8010708:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801070c:	e7f4      	b.n	80106f8 <timer_deinit+0x68>
 801070e:	f240 4001 	movw	r0, #1025	; 0x401
 8010712:	f7ff fe8a 	bl	801042a <rcu_periph_reset_enable>
 8010716:	f240 4001 	movw	r0, #1025	; 0x401
 801071a:	e7ed      	b.n	80106f8 <timer_deinit+0x68>
 801071c:	f240 4002 	movw	r0, #1026	; 0x402
 8010720:	f7ff fe83 	bl	801042a <rcu_periph_reset_enable>
 8010724:	f240 4002 	movw	r0, #1026	; 0x402
 8010728:	e7e6      	b.n	80106f8 <timer_deinit+0x68>
 801072a:	f240 4004 	movw	r0, #1028	; 0x404
 801072e:	f7ff fe7c 	bl	801042a <rcu_periph_reset_enable>
 8010732:	f240 4004 	movw	r0, #1028	; 0x404
 8010736:	e7df      	b.n	80106f8 <timer_deinit+0x68>
 8010738:	f240 300d 	movw	r0, #781	; 0x30d
 801073c:	f7ff fe75 	bl	801042a <rcu_periph_reset_enable>
 8010740:	f240 300d 	movw	r0, #781	; 0x30d
 8010744:	e7d8      	b.n	80106f8 <timer_deinit+0x68>
 8010746:	bf00      	nop
 8010748:	40001000 	andmi	r1, r0, r0
 801074c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8010750:	40012c00 	andmi	r2, r1, r0, lsl #24

08010754 <timer_init>:
 8010754:	880b      	ldrh	r3, [r1, #0]
 8010756:	6283      	str	r3, [r0, #40]	; 0x28
 8010758:	4b26      	ldr	r3, [pc, #152]	; (80107f4 <timer_init+0xa0>)
 801075a:	4298      	cmp	r0, r3
 801075c:	d018      	beq.n	8010790 <timer_init+0x3c>
 801075e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8010762:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8010766:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801076a:	d011      	beq.n	8010790 <timer_init+0x3c>
 801076c:	4a22      	ldr	r2, [pc, #136]	; (80107f8 <timer_init+0xa4>)
 801076e:	4290      	cmp	r0, r2
 8010770:	d00e      	beq.n	8010790 <timer_init+0x3c>
 8010772:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8010776:	4290      	cmp	r0, r2
 8010778:	d00a      	beq.n	8010790 <timer_init+0x3c>
 801077a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801077e:	4293      	cmp	r3, r2
 8010780:	d006      	beq.n	8010790 <timer_init+0x3c>
 8010782:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8010786:	4293      	cmp	r3, r2
 8010788:	d002      	beq.n	8010790 <timer_init+0x3c>
 801078a:	4b1c      	ldr	r3, [pc, #112]	; (80107fc <timer_init+0xa8>)
 801078c:	4298      	cmp	r0, r3
 801078e:	d10f      	bne.n	80107b0 <timer_init+0x5c>
 8010790:	6803      	ldr	r3, [r0, #0]
 8010792:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010796:	6003      	str	r3, [r0, #0]
 8010798:	884b      	ldrh	r3, [r1, #2]
 801079a:	6802      	ldr	r2, [r0, #0]
 801079c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80107a0:	4313      	orrs	r3, r2
 80107a2:	6003      	str	r3, [r0, #0]
 80107a4:	888b      	ldrh	r3, [r1, #4]
 80107a6:	6802      	ldr	r2, [r0, #0]
 80107a8:	f003 0310 	and.w	r3, r3, #16
 80107ac:	4313      	orrs	r3, r2
 80107ae:	6003      	str	r3, [r0, #0]
 80107b0:	688b      	ldr	r3, [r1, #8]
 80107b2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80107b4:	4b12      	ldr	r3, [pc, #72]	; (8010800 <timer_init+0xac>)
 80107b6:	4298      	cmp	r0, r3
 80107b8:	d003      	beq.n	80107c2 <timer_init+0x6e>
 80107ba:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80107be:	4298      	cmp	r0, r3
 80107c0:	d104      	bne.n	80107cc <timer_init+0x78>
 80107c2:	6943      	ldr	r3, [r0, #20]
 80107c4:	f043 0301 	orr.w	r3, r3, #1
 80107c8:	6143      	str	r3, [r0, #20]
 80107ca:	4770      	bx	lr
 80107cc:	6803      	ldr	r3, [r0, #0]
 80107ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80107d2:	6003      	str	r3, [r0, #0]
 80107d4:	898b      	ldrh	r3, [r1, #12]
 80107d6:	6802      	ldr	r2, [r0, #0]
 80107d8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80107dc:	4313      	orrs	r3, r2
 80107de:	6003      	str	r3, [r0, #0]
 80107e0:	4b04      	ldr	r3, [pc, #16]	; (80107f4 <timer_init+0xa0>)
 80107e2:	4298      	cmp	r0, r3
 80107e4:	d002      	beq.n	80107ec <timer_init+0x98>
 80107e6:	4b04      	ldr	r3, [pc, #16]	; (80107f8 <timer_init+0xa4>)
 80107e8:	4298      	cmp	r0, r3
 80107ea:	d1ea      	bne.n	80107c2 <timer_init+0x6e>
 80107ec:	7b8b      	ldrb	r3, [r1, #14]
 80107ee:	6303      	str	r3, [r0, #48]	; 0x30
 80107f0:	e7e7      	b.n	80107c2 <timer_init+0x6e>
 80107f2:	bf00      	nop
 80107f4:	40012c00 	andmi	r2, r1, r0, lsl #24
 80107f8:	40013400 	andmi	r3, r1, r0, lsl #8
 80107fc:	40002000 	andmi	r2, r0, r0
 8010800:	40001000 	andmi	r1, r0, r0

08010804 <timer_enable>:
 8010804:	6803      	ldr	r3, [r0, #0]
 8010806:	f043 0301 	orr.w	r3, r3, #1
 801080a:	6003      	str	r3, [r0, #0]
 801080c:	4770      	bx	lr

0801080e <timer_channel_output_mode_config>:
 801080e:	2903      	cmp	r1, #3
 8010810:	d81a      	bhi.n	8010848 <timer_channel_output_mode_config+0x3a>
 8010812:	e8df f001 	tbb	[pc, r1]
 8010816:	1a120a02 	bne	8493026 <__exidx_end+0x47f306>
 801081a:	6983      	ldr	r3, [r0, #24]
 801081c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010820:	6183      	str	r3, [r0, #24]
 8010822:	6983      	ldr	r3, [r0, #24]
 8010824:	4313      	orrs	r3, r2
 8010826:	6183      	str	r3, [r0, #24]
 8010828:	4770      	bx	lr
 801082a:	6983      	ldr	r3, [r0, #24]
 801082c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010830:	6183      	str	r3, [r0, #24]
 8010832:	6983      	ldr	r3, [r0, #24]
 8010834:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8010838:	e7f5      	b.n	8010826 <timer_channel_output_mode_config+0x18>
 801083a:	69c3      	ldr	r3, [r0, #28]
 801083c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010840:	61c3      	str	r3, [r0, #28]
 8010842:	69c3      	ldr	r3, [r0, #28]
 8010844:	4313      	orrs	r3, r2
 8010846:	61c3      	str	r3, [r0, #28]
 8010848:	4770      	bx	lr
 801084a:	69c3      	ldr	r3, [r0, #28]
 801084c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010850:	61c3      	str	r3, [r0, #28]
 8010852:	69c3      	ldr	r3, [r0, #28]
 8010854:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8010858:	e7f5      	b.n	8010846 <timer_channel_output_mode_config+0x38>

0801085a <timer_channel_output_pulse_value_config>:
 801085a:	2903      	cmp	r1, #3
 801085c:	d80a      	bhi.n	8010874 <timer_channel_output_pulse_value_config+0x1a>
 801085e:	e8df f001 	tbb	[pc, r1]
 8010862:	08060402 	stmdaeq	r6, {r1, sl}
 8010866:	6342      	str	r2, [r0, #52]	; 0x34
 8010868:	4770      	bx	lr
 801086a:	6382      	str	r2, [r0, #56]	; 0x38
 801086c:	4770      	bx	lr
 801086e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8010870:	4770      	bx	lr
 8010872:	6402      	str	r2, [r0, #64]	; 0x40
 8010874:	4770      	bx	lr

08010876 <timer_interrupt_enable>:
 8010876:	68c3      	ldr	r3, [r0, #12]
 8010878:	430b      	orrs	r3, r1
 801087a:	60c3      	str	r3, [r0, #12]
 801087c:	4770      	bx	lr

0801087e <timer_interrupt_flag_clear>:
 801087e:	43c9      	mvns	r1, r1
 8010880:	6101      	str	r1, [r0, #16]
 8010882:	4770      	bx	lr

08010884 <timer_flag_clear>:
 8010884:	43c9      	mvns	r1, r1
 8010886:	6101      	str	r1, [r0, #16]
 8010888:	4770      	bx	lr
	...

0801088c <usart_deinit>:
 801088c:	b508      	push	{r3, lr}
 801088e:	4b1d      	ldr	r3, [pc, #116]	; (8010904 <usart_deinit+0x78>)
 8010890:	4298      	cmp	r0, r3
 8010892:	d028      	beq.n	80108e6 <usart_deinit+0x5a>
 8010894:	d808      	bhi.n	80108a8 <usart_deinit+0x1c>
 8010896:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801089a:	4298      	cmp	r0, r3
 801089c:	d015      	beq.n	80108ca <usart_deinit+0x3e>
 801089e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80108a2:	4298      	cmp	r0, r3
 80108a4:	d018      	beq.n	80108d8 <usart_deinit+0x4c>
 80108a6:	bd08      	pop	{r3, pc}
 80108a8:	4b17      	ldr	r3, [pc, #92]	; (8010908 <usart_deinit+0x7c>)
 80108aa:	4298      	cmp	r0, r3
 80108ac:	d022      	beq.n	80108f4 <usart_deinit+0x68>
 80108ae:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80108b2:	4298      	cmp	r0, r3
 80108b4:	d1f7      	bne.n	80108a6 <usart_deinit+0x1a>
 80108b6:	f240 300e 	movw	r0, #782	; 0x30e
 80108ba:	f7ff fdb6 	bl	801042a <rcu_periph_reset_enable>
 80108be:	f240 300e 	movw	r0, #782	; 0x30e
 80108c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80108c6:	f7ff bdb2 	b.w	801042e <rcu_periph_reset_disable>
 80108ca:	f240 4011 	movw	r0, #1041	; 0x411
 80108ce:	f7ff fdac 	bl	801042a <rcu_periph_reset_enable>
 80108d2:	f240 4011 	movw	r0, #1041	; 0x411
 80108d6:	e7f4      	b.n	80108c2 <usart_deinit+0x36>
 80108d8:	f240 4012 	movw	r0, #1042	; 0x412
 80108dc:	f7ff fda5 	bl	801042a <rcu_periph_reset_enable>
 80108e0:	f240 4012 	movw	r0, #1042	; 0x412
 80108e4:	e7ed      	b.n	80108c2 <usart_deinit+0x36>
 80108e6:	f240 4013 	movw	r0, #1043	; 0x413
 80108ea:	f7ff fd9e 	bl	801042a <rcu_periph_reset_enable>
 80108ee:	f240 4013 	movw	r0, #1043	; 0x413
 80108f2:	e7e6      	b.n	80108c2 <usart_deinit+0x36>
 80108f4:	f240 4014 	movw	r0, #1044	; 0x414
 80108f8:	f7ff fd97 	bl	801042a <rcu_periph_reset_enable>
 80108fc:	f240 4014 	movw	r0, #1044	; 0x414
 8010900:	e7df      	b.n	80108c2 <usart_deinit+0x36>
 8010902:	bf00      	nop
 8010904:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010908:	40005000 	andmi	r5, r0, r0

0801090c <usart_baudrate_set>:
 801090c:	b538      	push	{r3, r4, r5, lr}
 801090e:	4b11      	ldr	r3, [pc, #68]	; (8010954 <usart_baudrate_set+0x48>)
 8010910:	4604      	mov	r4, r0
 8010912:	4298      	cmp	r0, r3
 8010914:	460d      	mov	r5, r1
 8010916:	d01b      	beq.n	8010950 <usart_baudrate_set+0x44>
 8010918:	d809      	bhi.n	801092e <usart_baudrate_set+0x22>
 801091a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801091e:	4298      	cmp	r0, r3
 8010920:	d016      	beq.n	8010950 <usart_baudrate_set+0x44>
 8010922:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010926:	4298      	cmp	r0, r3
 8010928:	d012      	beq.n	8010950 <usart_baudrate_set+0x44>
 801092a:	2000      	movs	r0, #0
 801092c:	e009      	b.n	8010942 <usart_baudrate_set+0x36>
 801092e:	4b0a      	ldr	r3, [pc, #40]	; (8010958 <usart_baudrate_set+0x4c>)
 8010930:	4298      	cmp	r0, r3
 8010932:	d00d      	beq.n	8010950 <usart_baudrate_set+0x44>
 8010934:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8010938:	4298      	cmp	r0, r3
 801093a:	d1f6      	bne.n	801092a <usart_baudrate_set+0x1e>
 801093c:	2003      	movs	r0, #3
 801093e:	f7ff fe1f 	bl	8010580 <rcu_clock_freq_get>
 8010942:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8010946:	fbb1 f1f5 	udiv	r1, r1, r5
 801094a:	b289      	uxth	r1, r1
 801094c:	60a1      	str	r1, [r4, #8]
 801094e:	bd38      	pop	{r3, r4, r5, pc}
 8010950:	2002      	movs	r0, #2
 8010952:	e7f4      	b.n	801093e <usart_baudrate_set+0x32>
 8010954:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010958:	40005000 	andmi	r5, r0, r0

0801095c <usart_parity_config>:
 801095c:	68c3      	ldr	r3, [r0, #12]
 801095e:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8010962:	60c3      	str	r3, [r0, #12]
 8010964:	68c3      	ldr	r3, [r0, #12]
 8010966:	430b      	orrs	r3, r1
 8010968:	60c3      	str	r3, [r0, #12]
 801096a:	4770      	bx	lr

0801096c <usart_word_length_set>:
 801096c:	68c3      	ldr	r3, [r0, #12]
 801096e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8010972:	60c3      	str	r3, [r0, #12]
 8010974:	68c3      	ldr	r3, [r0, #12]
 8010976:	430b      	orrs	r3, r1
 8010978:	60c3      	str	r3, [r0, #12]
 801097a:	4770      	bx	lr

0801097c <usart_stop_bit_set>:
 801097c:	6903      	ldr	r3, [r0, #16]
 801097e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8010982:	6103      	str	r3, [r0, #16]
 8010984:	6903      	ldr	r3, [r0, #16]
 8010986:	430b      	orrs	r3, r1
 8010988:	6103      	str	r3, [r0, #16]
 801098a:	4770      	bx	lr

0801098c <usart_transmit_config>:
 801098c:	68c3      	ldr	r3, [r0, #12]
 801098e:	f023 0308 	bic.w	r3, r3, #8
 8010992:	430b      	orrs	r3, r1
 8010994:	60c3      	str	r3, [r0, #12]
 8010996:	4770      	bx	lr

08010998 <usart_receive_config>:
 8010998:	68c3      	ldr	r3, [r0, #12]
 801099a:	f023 0304 	bic.w	r3, r3, #4
 801099e:	430b      	orrs	r3, r1
 80109a0:	60c3      	str	r3, [r0, #12]
 80109a2:	4770      	bx	lr

080109a4 <usart_hardware_flow_rts_config>:
 80109a4:	6943      	ldr	r3, [r0, #20]
 80109a6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80109aa:	430b      	orrs	r3, r1
 80109ac:	6143      	str	r3, [r0, #20]
 80109ae:	4770      	bx	lr

080109b0 <usart_hardware_flow_cts_config>:
 80109b0:	6943      	ldr	r3, [r0, #20]
 80109b2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80109b6:	430b      	orrs	r3, r1
 80109b8:	6143      	str	r3, [r0, #20]
 80109ba:	4770      	bx	lr

080109bc <usart_dma_transmit_config>:
 80109bc:	6943      	ldr	r3, [r0, #20]
 80109be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80109c2:	430b      	orrs	r3, r1
 80109c4:	6143      	str	r3, [r0, #20]
 80109c6:	4770      	bx	lr

080109c8 <usart_flag_get>:
 80109c8:	098b      	lsrs	r3, r1, #6
 80109ca:	581a      	ldr	r2, [r3, r0]
 80109cc:	2301      	movs	r3, #1
 80109ce:	f001 011f 	and.w	r1, r1, #31
 80109d2:	408b      	lsls	r3, r1
 80109d4:	4213      	tst	r3, r2
 80109d6:	bf14      	ite	ne
 80109d8:	2001      	movne	r0, #1
 80109da:	2000      	moveq	r0, #0
 80109dc:	4770      	bx	lr

080109de <usart_interrupt_enable>:
 80109de:	2301      	movs	r3, #1
 80109e0:	b510      	push	{r4, lr}
 80109e2:	f3c1 1289 	ubfx	r2, r1, #6, #10
 80109e6:	5814      	ldr	r4, [r2, r0]
 80109e8:	f001 011f 	and.w	r1, r1, #31
 80109ec:	408b      	lsls	r3, r1
 80109ee:	4323      	orrs	r3, r4
 80109f0:	5013      	str	r3, [r2, r0]
 80109f2:	bd10      	pop	{r4, pc}

080109f4 <usart_interrupt_disable>:
 80109f4:	2201      	movs	r2, #1
 80109f6:	b510      	push	{r4, lr}
 80109f8:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80109fc:	5823      	ldr	r3, [r4, r0]
 80109fe:	f001 011f 	and.w	r1, r1, #31
 8010a02:	408a      	lsls	r2, r1
 8010a04:	ea23 0302 	bic.w	r3, r3, r2
 8010a08:	5023      	str	r3, [r4, r0]
 8010a0a:	bd10      	pop	{r4, pc}

08010a0c <usart_interrupt_flag_clear>:
 8010a0c:	2201      	movs	r2, #1
 8010a0e:	b510      	push	{r4, lr}
 8010a10:	0d8c      	lsrs	r4, r1, #22
 8010a12:	5823      	ldr	r3, [r4, r0]
 8010a14:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8010a18:	408a      	lsls	r2, r1
 8010a1a:	ea23 0302 	bic.w	r3, r3, r2
 8010a1e:	5023      	str	r3, [r4, r0]
 8010a20:	bd10      	pop	{r4, pc}
	...

08010a24 <emac_eth_recv>:
 8010a24:	b538      	push	{r3, r4, r5, lr}
 8010a26:	4605      	mov	r5, r0
 8010a28:	f000 ffe0 	bl	80119ec <enet_rxframe_size_get>
 8010a2c:	4604      	mov	r4, r0
 8010a2e:	b138      	cbz	r0, 8010a40 <emac_eth_recv+0x1c>
 8010a30:	4b05      	ldr	r3, [pc, #20]	; (8010a48 <emac_eth_recv+0x24>)
 8010a32:	2105      	movs	r1, #5
 8010a34:	6818      	ldr	r0, [r3, #0]
 8010a36:	f000 ff88 	bl	801194a <enet_desc_information_get>
 8010a3a:	6028      	str	r0, [r5, #0]
 8010a3c:	4620      	mov	r0, r4
 8010a3e:	bd38      	pop	{r3, r4, r5, pc}
 8010a40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010a44:	e7fb      	b.n	8010a3e <emac_eth_recv+0x1a>
 8010a46:	bf00      	nop
 8010a48:	2000a124 	andcs	sl, r0, r4, lsr #2

08010a4c <emac_free_pkt>:
 8010a4c:	2100      	movs	r1, #0
 8010a4e:	4608      	mov	r0, r1
 8010a50:	f000 bcb8 	b.w	80113c4 <enet_frame_receive>

08010a54 <emac_eth_send>:
 8010a54:	f000 bcf6 	b.w	8011444 <enet_frame_transmit>

08010a58 <gd32_adc_init()>:
 8010a58:	b510      	push	{r4, lr}
 8010a5a:	f240 6009 	movw	r0, #1545	; 0x609
 8010a5e:	4c21      	ldr	r4, [pc, #132]	; (8010ae4 <gd32_adc_init()+0x8c>)
 8010a60:	f7ff fcc8 	bl	80103f4 <rcu_periph_clock_enable>
 8010a64:	2005      	movs	r0, #5
 8010a66:	f7ff fcfb 	bl	8010460 <rcu_adc_clock_config>
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	2201      	movs	r2, #1
 8010a6e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010a72:	f000 fb67 	bl	8011144 <adc_special_function_config>
 8010a76:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8010a7a:	4620      	mov	r0, r4
 8010a7c:	2102      	movs	r1, #2
 8010a7e:	f000 fc00 	bl	8011282 <adc_external_trigger_source_config>
 8010a82:	2100      	movs	r1, #0
 8010a84:	4620      	mov	r0, r4
 8010a86:	f000 fb85 	bl	8011194 <adc_data_alignment_config>
 8010a8a:	2000      	movs	r0, #0
 8010a8c:	f000 fb4a 	bl	8011124 <adc_mode_config>
 8010a90:	2202      	movs	r2, #2
 8010a92:	4620      	mov	r0, r4
 8010a94:	4611      	mov	r1, r2
 8010a96:	f000 fba9 	bl	80111ec <adc_channel_length_config>
 8010a9a:	4620      	mov	r0, r4
 8010a9c:	2307      	movs	r3, #7
 8010a9e:	2210      	movs	r2, #16
 8010aa0:	2100      	movs	r1, #0
 8010aa2:	f000 fbc0 	bl	8011226 <adc_inserted_channel_config>
 8010aa6:	2307      	movs	r3, #7
 8010aa8:	4620      	mov	r0, r4
 8010aaa:	2211      	movs	r2, #17
 8010aac:	2101      	movs	r1, #1
 8010aae:	f000 fbba 	bl	8011226 <adc_inserted_channel_config>
 8010ab2:	2201      	movs	r2, #1
 8010ab4:	2102      	movs	r1, #2
 8010ab6:	4620      	mov	r0, r4
 8010ab8:	f000 fbf4 	bl	80112a4 <adc_external_trigger_config>
 8010abc:	f000 fb8c 	bl	80111d8 <adc_tempsensor_vrefint_enable>
 8010ac0:	4620      	mov	r0, r4
 8010ac2:	f000 fb70 	bl	80111a6 <adc_enable>
 8010ac6:	2100      	movs	r1, #0
 8010ac8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8010acc:	f000 fa58 	bl	8010f80 <udelay(unsigned int, unsigned int)>
 8010ad0:	4620      	mov	r0, r4
 8010ad2:	f000 fb70 	bl	80111b6 <adc_calibration_enable>
 8010ad6:	4620      	mov	r0, r4
 8010ad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010adc:	2102      	movs	r1, #2
 8010ade:	f000 bbfc 	b.w	80112da <adc_software_trigger_enable>
 8010ae2:	bf00      	nop
 8010ae4:	40012400 	andmi	r2, r1, r0, lsl #8

08010ae8 <_stop() [clone .isra.0]>:
 8010ae8:	b508      	push	{r3, lr}
 8010aea:	4806      	ldr	r0, [pc, #24]	; (8010b04 <_stop() [clone .isra.0]+0x1c>)
 8010aec:	f001 f842 	bl	8011b74 <i2c_stop_on_bus>
 8010af0:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010af4:	4904      	ldr	r1, [pc, #16]	; (8010b08 <_stop() [clone .isra.0]+0x20>)
 8010af6:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8010afa:	0592      	lsls	r2, r2, #22
 8010afc:	d501      	bpl.n	8010b02 <_stop() [clone .isra.0]+0x1a>
 8010afe:	3b01      	subs	r3, #1
 8010b00:	d1f9      	bne.n	8010af6 <_stop() [clone .isra.0]+0xe>
 8010b02:	bd08      	pop	{r3, pc}
 8010b04:	40005400 	andmi	r5, r0, r0, lsl #8
 8010b08:	40005000 	andmi	r5, r0, r0

08010b0c <gd32_i2c_begin>:
 8010b0c:	b510      	push	{r4, lr}
 8010b0e:	f240 7015 	movw	r0, #1813	; 0x715
 8010b12:	f7ff fc6f 	bl	80103f4 <rcu_periph_clock_enable>
 8010b16:	4c15      	ldr	r4, [pc, #84]	; (8010b6c <gd32_i2c_begin+0x60>)
 8010b18:	f240 6003 	movw	r0, #1539	; 0x603
 8010b1c:	f7ff fc6a 	bl	80103f4 <rcu_periph_clock_enable>
 8010b20:	f240 6003 	movw	r0, #1539	; 0x603
 8010b24:	f7ff fc66 	bl	80103f4 <rcu_periph_clock_enable>
 8010b28:	4620      	mov	r0, r4
 8010b2a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010b2e:	2203      	movs	r2, #3
 8010b30:	211c      	movs	r1, #28
 8010b32:	f7ff fbc7 	bl	80102c4 <gpio_init>
 8010b36:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010b3a:	2203      	movs	r2, #3
 8010b3c:	4620      	mov	r0, r4
 8010b3e:	211c      	movs	r1, #28
 8010b40:	f7ff fbc0 	bl	80102c4 <gpio_init>
 8010b44:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8010b48:	2101      	movs	r1, #1
 8010b4a:	2002      	movs	r0, #2
 8010b4c:	f7ff fc0e 	bl	801036c <gpio_pin_remap_config>
 8010b50:	4620      	mov	r0, r4
 8010b52:	4907      	ldr	r1, [pc, #28]	; (8010b70 <gd32_i2c_begin+0x64>)
 8010b54:	2200      	movs	r2, #0
 8010b56:	f000 ff87 	bl	8011a68 <i2c_clock_config>
 8010b5a:	4620      	mov	r0, r4
 8010b5c:	f001 f800 	bl	8011b60 <i2c_enable>
 8010b60:	4620      	mov	r0, r4
 8010b62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b66:	2101      	movs	r1, #1
 8010b68:	f000 bfe0 	b.w	8011b2c <i2c_ack_config>
 8010b6c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010b70:	00061a80 	andeq	r1, r6, r0, lsl #21

08010b74 <gd32_i2c_set_baudrate>:
 8010b74:	4601      	mov	r1, r0
 8010b76:	2200      	movs	r2, #0
 8010b78:	4801      	ldr	r0, [pc, #4]	; (8010b80 <gd32_i2c_set_baudrate+0xc>)
 8010b7a:	f000 bf75 	b.w	8011a68 <i2c_clock_config>
 8010b7e:	bf00      	nop
 8010b80:	40005400 	andmi	r5, r0, r0, lsl #8

08010b84 <gd32_i2c_set_address>:
 8010b84:	4b01      	ldr	r3, [pc, #4]	; (8010b8c <gd32_i2c_set_address+0x8>)
 8010b86:	0040      	lsls	r0, r0, #1
 8010b88:	7018      	strb	r0, [r3, #0]
 8010b8a:	4770      	bx	lr
 8010b8c:	2000a118 	andcs	sl, r0, r8, lsl r1

08010b90 <gd32_i2c_write>:
 8010b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010b92:	4604      	mov	r4, r0
 8010b94:	460f      	mov	r7, r1
 8010b96:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010b9a:	4e2e      	ldr	r6, [pc, #184]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010b9c:	f240 6101 	movw	r1, #1537	; 0x601
 8010ba0:	4630      	mov	r0, r6
 8010ba2:	f000 fff1 	bl	8011b88 <i2c_flag_get>
 8010ba6:	b9b0      	cbnz	r0, 8010bd6 <gd32_i2c_write+0x46>
 8010ba8:	482a      	ldr	r0, [pc, #168]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010baa:	f000 ffde 	bl	8011b6a <i2c_start_on_bus>
 8010bae:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010bb2:	4e28      	ldr	r6, [pc, #160]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010bb4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010bb8:	4630      	mov	r0, r6
 8010bba:	f000 ffe5 	bl	8011b88 <i2c_flag_get>
 8010bbe:	b190      	cbz	r0, 8010be6 <gd32_i2c_write+0x56>
 8010bc0:	4b25      	ldr	r3, [pc, #148]	; (8010c58 <gd32_i2c_write+0xc8>)
 8010bc2:	f06f 0201 	mvn.w	r2, #1
 8010bc6:	7819      	ldrb	r1, [r3, #0]
 8010bc8:	4822      	ldr	r0, [pc, #136]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010bca:	f000 ffc1 	bl	8011b50 <i2c_master_addressing>
 8010bce:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010bd2:	4e20      	ldr	r6, [pc, #128]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010bd4:	e00c      	b.n	8010bf0 <gd32_i2c_write+0x60>
 8010bd6:	3d01      	subs	r5, #1
 8010bd8:	d1e0      	bne.n	8010b9c <gd32_i2c_write+0xc>
 8010bda:	f7ff ff85 	bl	8010ae8 <_stop() [clone .isra.0]>
 8010bde:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010be2:	4240      	negs	r0, r0
 8010be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010be6:	3d01      	subs	r5, #1
 8010be8:	d1e4      	bne.n	8010bb4 <gd32_i2c_write+0x24>
 8010bea:	e7f6      	b.n	8010bda <gd32_i2c_write+0x4a>
 8010bec:	3d01      	subs	r5, #1
 8010bee:	d0f4      	beq.n	8010bda <gd32_i2c_write+0x4a>
 8010bf0:	f240 5101 	movw	r1, #1281	; 0x501
 8010bf4:	4630      	mov	r0, r6
 8010bf6:	f000 ffc7 	bl	8011b88 <i2c_flag_get>
 8010bfa:	2800      	cmp	r0, #0
 8010bfc:	d0f6      	beq.n	8010bec <gd32_i2c_write+0x5c>
 8010bfe:	f240 5101 	movw	r1, #1281	; 0x501
 8010c02:	4814      	ldr	r0, [pc, #80]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010c04:	f000 ffcb 	bl	8011b9e <i2c_flag_clear>
 8010c08:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c0c:	4e11      	ldr	r6, [pc, #68]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010c0e:	f240 5107 	movw	r1, #1287	; 0x507
 8010c12:	4630      	mov	r0, r6
 8010c14:	f000 ffb8 	bl	8011b88 <i2c_flag_get>
 8010c18:	2801      	cmp	r0, #1
 8010c1a:	d107      	bne.n	8010c2c <gd32_i2c_write+0x9c>
 8010c1c:	4e0d      	ldr	r6, [pc, #52]	; (8010c54 <gd32_i2c_write+0xc4>)
 8010c1e:	4427      	add	r7, r4
 8010c20:	42a7      	cmp	r7, r4
 8010c22:	d106      	bne.n	8010c32 <gd32_i2c_write+0xa2>
 8010c24:	f7ff ff60 	bl	8010ae8 <_stop() [clone .isra.0]>
 8010c28:	2000      	movs	r0, #0
 8010c2a:	e7da      	b.n	8010be2 <gd32_i2c_write+0x52>
 8010c2c:	3d01      	subs	r5, #1
 8010c2e:	d1ee      	bne.n	8010c0e <gd32_i2c_write+0x7e>
 8010c30:	e7d3      	b.n	8010bda <gd32_i2c_write+0x4a>
 8010c32:	4630      	mov	r0, r6
 8010c34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010c38:	f000 ffa1 	bl	8011b7e <i2c_data_transmit>
 8010c3c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010c40:	f240 5102 	movw	r1, #1282	; 0x502
 8010c44:	4630      	mov	r0, r6
 8010c46:	f000 ff9f 	bl	8011b88 <i2c_flag_get>
 8010c4a:	2800      	cmp	r0, #0
 8010c4c:	d1e8      	bne.n	8010c20 <gd32_i2c_write+0x90>
 8010c4e:	3d01      	subs	r5, #1
 8010c50:	d1f6      	bne.n	8010c40 <gd32_i2c_write+0xb0>
 8010c52:	e7c2      	b.n	8010bda <gd32_i2c_write+0x4a>
 8010c54:	40005400 	andmi	r5, r0, r0, lsl #8
 8010c58:	2000a118 	andcs	sl, r0, r8, lsl r1

08010c5c <gd32_i2c_read>:
 8010c5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c60:	4680      	mov	r8, r0
 8010c62:	460c      	mov	r4, r1
 8010c64:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010c68:	4f4b      	ldr	r7, [pc, #300]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010c6a:	f240 6101 	movw	r1, #1537	; 0x601
 8010c6e:	4638      	mov	r0, r7
 8010c70:	f000 ff8a 	bl	8011b88 <i2c_flag_get>
 8010c74:	4605      	mov	r5, r0
 8010c76:	bb08      	cbnz	r0, 8010cbc <gd32_i2c_read+0x60>
 8010c78:	2c02      	cmp	r4, #2
 8010c7a:	d103      	bne.n	8010c84 <gd32_i2c_read+0x28>
 8010c7c:	4601      	mov	r1, r0
 8010c7e:	4846      	ldr	r0, [pc, #280]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010c80:	f000 ff5d 	bl	8011b3e <i2c_ackpos_config>
 8010c84:	4844      	ldr	r0, [pc, #272]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010c86:	f000 ff70 	bl	8011b6a <i2c_start_on_bus>
 8010c8a:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010c8e:	4f42      	ldr	r7, [pc, #264]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010c90:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010c94:	4638      	mov	r0, r7
 8010c96:	f000 ff77 	bl	8011b88 <i2c_flag_get>
 8010c9a:	b1a8      	cbz	r0, 8010cc8 <gd32_i2c_read+0x6c>
 8010c9c:	4b3f      	ldr	r3, [pc, #252]	; (8010d9c <gd32_i2c_read+0x140>)
 8010c9e:	2201      	movs	r2, #1
 8010ca0:	7819      	ldrb	r1, [r3, #0]
 8010ca2:	483d      	ldr	r0, [pc, #244]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010ca4:	f000 ff54 	bl	8011b50 <i2c_master_addressing>
 8010ca8:	2c02      	cmp	r4, #2
 8010caa:	d803      	bhi.n	8010cb4 <gd32_i2c_read+0x58>
 8010cac:	2100      	movs	r1, #0
 8010cae:	483a      	ldr	r0, [pc, #232]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010cb0:	f000 ff3c 	bl	8011b2c <i2c_ack_config>
 8010cb4:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010cb8:	4f37      	ldr	r7, [pc, #220]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010cba:	e00a      	b.n	8010cd2 <gd32_i2c_read+0x76>
 8010cbc:	3e01      	subs	r6, #1
 8010cbe:	d1d4      	bne.n	8010c6a <gd32_i2c_read+0xe>
 8010cc0:	f7ff ff12 	bl	8010ae8 <_stop() [clone .isra.0]>
 8010cc4:	2504      	movs	r5, #4
 8010cc6:	e04d      	b.n	8010d64 <gd32_i2c_read+0x108>
 8010cc8:	3e01      	subs	r6, #1
 8010cca:	d1e1      	bne.n	8010c90 <gd32_i2c_read+0x34>
 8010ccc:	e7f8      	b.n	8010cc0 <gd32_i2c_read+0x64>
 8010cce:	3e01      	subs	r6, #1
 8010cd0:	d0f6      	beq.n	8010cc0 <gd32_i2c_read+0x64>
 8010cd2:	f240 5101 	movw	r1, #1281	; 0x501
 8010cd6:	4638      	mov	r0, r7
 8010cd8:	f000 ff56 	bl	8011b88 <i2c_flag_get>
 8010cdc:	2800      	cmp	r0, #0
 8010cde:	d0f6      	beq.n	8010cce <gd32_i2c_read+0x72>
 8010ce0:	f240 5101 	movw	r1, #1281	; 0x501
 8010ce4:	482c      	ldr	r0, [pc, #176]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010ce6:	f000 ff5a 	bl	8011b9e <i2c_flag_clear>
 8010cea:	2c01      	cmp	r4, #1
 8010cec:	d102      	bne.n	8010cf4 <gd32_i2c_read+0x98>
 8010cee:	482a      	ldr	r0, [pc, #168]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010cf0:	f000 ff40 	bl	8011b74 <i2c_stop_on_bus>
 8010cf4:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010cf8:	4e27      	ldr	r6, [pc, #156]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010cfa:	e022      	b.n	8010d42 <gd32_i2c_read+0xe6>
 8010cfc:	2c03      	cmp	r4, #3
 8010cfe:	d134      	bne.n	8010d6a <gd32_i2c_read+0x10e>
 8010d00:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010d04:	e002      	b.n	8010d0c <gd32_i2c_read+0xb0>
 8010d06:	f1b9 0901 	subs.w	r9, r9, #1
 8010d0a:	d0d9      	beq.n	8010cc0 <gd32_i2c_read+0x64>
 8010d0c:	f240 5102 	movw	r1, #1282	; 0x502
 8010d10:	4630      	mov	r0, r6
 8010d12:	f000 ff39 	bl	8011b88 <i2c_flag_get>
 8010d16:	2800      	cmp	r0, #0
 8010d18:	d0f5      	beq.n	8010d06 <gd32_i2c_read+0xaa>
 8010d1a:	2100      	movs	r1, #0
 8010d1c:	4630      	mov	r0, r6
 8010d1e:	f000 ff05 	bl	8011b2c <i2c_ack_config>
 8010d22:	f240 5106 	movw	r1, #1286	; 0x506
 8010d26:	4630      	mov	r0, r6
 8010d28:	f000 ff2e 	bl	8011b88 <i2c_flag_get>
 8010d2c:	b138      	cbz	r0, 8010d3e <gd32_i2c_read+0xe2>
 8010d2e:	4630      	mov	r0, r6
 8010d30:	f000 ff27 	bl	8011b82 <i2c_data_receive>
 8010d34:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010d38:	f808 0b01 	strb.w	r0, [r8], #1
 8010d3c:	3c01      	subs	r4, #1
 8010d3e:	3f01      	subs	r7, #1
 8010d40:	d0be      	beq.n	8010cc0 <gd32_i2c_read+0x64>
 8010d42:	2c00      	cmp	r4, #0
 8010d44:	d1da      	bne.n	8010cfc <gd32_i2c_read+0xa0>
 8010d46:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010d4a:	4915      	ldr	r1, [pc, #84]	; (8010da0 <gd32_i2c_read+0x144>)
 8010d4c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8010d50:	0592      	lsls	r2, r2, #22
 8010d52:	d41d      	bmi.n	8010d90 <gd32_i2c_read+0x134>
 8010d54:	2101      	movs	r1, #1
 8010d56:	4810      	ldr	r0, [pc, #64]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010d58:	f000 fee8 	bl	8011b2c <i2c_ack_config>
 8010d5c:	2101      	movs	r1, #1
 8010d5e:	480e      	ldr	r0, [pc, #56]	; (8010d98 <gd32_i2c_read+0x13c>)
 8010d60:	f000 feed 	bl	8011b3e <i2c_ackpos_config>
 8010d64:	4628      	mov	r0, r5
 8010d66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010d6a:	2c02      	cmp	r4, #2
 8010d6c:	d1d9      	bne.n	8010d22 <gd32_i2c_read+0xc6>
 8010d6e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010d72:	e002      	b.n	8010d7a <gd32_i2c_read+0x11e>
 8010d74:	f1b9 0901 	subs.w	r9, r9, #1
 8010d78:	d0a2      	beq.n	8010cc0 <gd32_i2c_read+0x64>
 8010d7a:	f240 5102 	movw	r1, #1282	; 0x502
 8010d7e:	4630      	mov	r0, r6
 8010d80:	f000 ff02 	bl	8011b88 <i2c_flag_get>
 8010d84:	2800      	cmp	r0, #0
 8010d86:	d0f5      	beq.n	8010d74 <gd32_i2c_read+0x118>
 8010d88:	4630      	mov	r0, r6
 8010d8a:	f000 fef3 	bl	8011b74 <i2c_stop_on_bus>
 8010d8e:	e7c8      	b.n	8010d22 <gd32_i2c_read+0xc6>
 8010d90:	3b01      	subs	r3, #1
 8010d92:	d1db      	bne.n	8010d4c <gd32_i2c_read+0xf0>
 8010d94:	e796      	b.n	8010cc4 <gd32_i2c_read+0x68>
 8010d96:	bf00      	nop
 8010d98:	40005400 	andmi	r5, r0, r0, lsl #8
 8010d9c:	2000a118 	andcs	sl, r0, r8, lsl r1
 8010da0:	40005000 	andmi	r5, r0, r0

08010da4 <gd32_uart_begin>:
 8010da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010da6:	461e      	mov	r6, r3
 8010da8:	4b63      	ldr	r3, [pc, #396]	; (8010f38 <gd32_uart_begin+0x194>)
 8010daa:	4604      	mov	r4, r0
 8010dac:	4298      	cmp	r0, r3
 8010dae:	460f      	mov	r7, r1
 8010db0:	4615      	mov	r5, r2
 8010db2:	d03b      	beq.n	8010e2c <gd32_uart_begin+0x88>
 8010db4:	d80a      	bhi.n	8010dcc <gd32_uart_begin+0x28>
 8010db6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010dba:	4298      	cmp	r0, r3
 8010dbc:	d02f      	beq.n	8010e1e <gd32_uart_begin+0x7a>
 8010dbe:	f240 7012 	movw	r0, #1810	; 0x712
 8010dc2:	f7ff fb17 	bl	80103f4 <rcu_periph_clock_enable>
 8010dc6:	f240 6004 	movw	r0, #1540	; 0x604
 8010dca:	e008      	b.n	8010dde <gd32_uart_begin+0x3a>
 8010dcc:	4b5b      	ldr	r3, [pc, #364]	; (8010f3c <gd32_uart_begin+0x198>)
 8010dce:	4298      	cmp	r0, r3
 8010dd0:	d02f      	beq.n	8010e32 <gd32_uart_begin+0x8e>
 8010dd2:	f240 600e 	movw	r0, #1550	; 0x60e
 8010dd6:	f7ff fb0d 	bl	80103f4 <rcu_periph_clock_enable>
 8010dda:	f240 6003 	movw	r0, #1539	; 0x603
 8010dde:	f7ff fb09 	bl	80103f4 <rcu_periph_clock_enable>
 8010de2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010de6:	f7ff fb05 	bl	80103f4 <rcu_periph_clock_enable>
 8010dea:	4b53      	ldr	r3, [pc, #332]	; (8010f38 <gd32_uart_begin+0x194>)
 8010dec:	429c      	cmp	r4, r3
 8010dee:	f000 8084 	beq.w	8010efa <gd32_uart_begin+0x156>
 8010df2:	d829      	bhi.n	8010e48 <gd32_uart_begin+0xa4>
 8010df4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010df8:	429c      	cmp	r4, r3
 8010dfa:	d071      	beq.n	8010ee0 <gd32_uart_begin+0x13c>
 8010dfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010e00:	2203      	movs	r2, #3
 8010e02:	2118      	movs	r1, #24
 8010e04:	484e      	ldr	r0, [pc, #312]	; (8010f40 <gd32_uart_begin+0x19c>)
 8010e06:	f7ff fa5d 	bl	80102c4 <gpio_init>
 8010e0a:	2104      	movs	r1, #4
 8010e0c:	484c      	ldr	r0, [pc, #304]	; (8010f40 <gd32_uart_begin+0x19c>)
 8010e0e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010e12:	2203      	movs	r2, #3
 8010e14:	f7ff fa56 	bl	80102c4 <gpio_init>
 8010e18:	2101      	movs	r1, #1
 8010e1a:	484a      	ldr	r0, [pc, #296]	; (8010f44 <gd32_uart_begin+0x1a0>)
 8010e1c:	e025      	b.n	8010e6a <gd32_uart_begin+0xc6>
 8010e1e:	f240 7011 	movw	r0, #1809	; 0x711
 8010e22:	f7ff fae7 	bl	80103f4 <rcu_periph_clock_enable>
 8010e26:	f240 6002 	movw	r0, #1538	; 0x602
 8010e2a:	e7d8      	b.n	8010dde <gd32_uart_begin+0x3a>
 8010e2c:	f240 7013 	movw	r0, #1811	; 0x713
 8010e30:	e7c7      	b.n	8010dc2 <gd32_uart_begin+0x1e>
 8010e32:	f240 7014 	movw	r0, #1812	; 0x714
 8010e36:	f7ff fadd 	bl	80103f4 <rcu_periph_clock_enable>
 8010e3a:	f240 6004 	movw	r0, #1540	; 0x604
 8010e3e:	f7ff fad9 	bl	80103f4 <rcu_periph_clock_enable>
 8010e42:	f240 6005 	movw	r0, #1541	; 0x605
 8010e46:	e7ca      	b.n	8010dde <gd32_uart_begin+0x3a>
 8010e48:	4b3c      	ldr	r3, [pc, #240]	; (8010f3c <gd32_uart_begin+0x198>)
 8010e4a:	429c      	cmp	r4, r3
 8010e4c:	d062      	beq.n	8010f14 <gd32_uart_begin+0x170>
 8010e4e:	2340      	movs	r3, #64	; 0x40
 8010e50:	2203      	movs	r2, #3
 8010e52:	2118      	movs	r1, #24
 8010e54:	483c      	ldr	r0, [pc, #240]	; (8010f48 <gd32_uart_begin+0x1a4>)
 8010e56:	f7ff fa35 	bl	80102c4 <gpio_init>
 8010e5a:	2104      	movs	r1, #4
 8010e5c:	483a      	ldr	r0, [pc, #232]	; (8010f48 <gd32_uart_begin+0x1a4>)
 8010e5e:	2380      	movs	r3, #128	; 0x80
 8010e60:	2203      	movs	r2, #3
 8010e62:	f7ff fa2f 	bl	80102c4 <gpio_init>
 8010e66:	2101      	movs	r1, #1
 8010e68:	2004      	movs	r0, #4
 8010e6a:	f7ff fa7f 	bl	801036c <gpio_pin_remap_config>
 8010e6e:	4620      	mov	r0, r4
 8010e70:	f7ff fd0c 	bl	801088c <usart_deinit>
 8010e74:	68e3      	ldr	r3, [r4, #12]
 8010e76:	4639      	mov	r1, r7
 8010e78:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	60e3      	str	r3, [r4, #12]
 8010e80:	f7ff fd44 	bl	801090c <usart_baudrate_set>
 8010e84:	f1a5 0309 	sub.w	r3, r5, #9
 8010e88:	4259      	negs	r1, r3
 8010e8a:	4159      	adcs	r1, r3
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	0309      	lsls	r1, r1, #12
 8010e90:	f7ff fd6c 	bl	801096c <usart_word_length_set>
 8010e94:	9906      	ldr	r1, [sp, #24]
 8010e96:	4620      	mov	r0, r4
 8010e98:	1e8a      	subs	r2, r1, #2
 8010e9a:	4251      	negs	r1, r2
 8010e9c:	4151      	adcs	r1, r2
 8010e9e:	0349      	lsls	r1, r1, #13
 8010ea0:	f7ff fd6c 	bl	801097c <usart_stop_bit_set>
 8010ea4:	2e01      	cmp	r6, #1
 8010ea6:	d041      	beq.n	8010f2c <gd32_uart_begin+0x188>
 8010ea8:	2e02      	cmp	r6, #2
 8010eaa:	d142      	bne.n	8010f32 <gd32_uart_begin+0x18e>
 8010eac:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010eb0:	4620      	mov	r0, r4
 8010eb2:	f7ff fd53 	bl	801095c <usart_parity_config>
 8010eb6:	2100      	movs	r1, #0
 8010eb8:	4620      	mov	r0, r4
 8010eba:	f7ff fd73 	bl	80109a4 <usart_hardware_flow_rts_config>
 8010ebe:	2100      	movs	r1, #0
 8010ec0:	4620      	mov	r0, r4
 8010ec2:	f7ff fd75 	bl	80109b0 <usart_hardware_flow_cts_config>
 8010ec6:	2104      	movs	r1, #4
 8010ec8:	4620      	mov	r0, r4
 8010eca:	f7ff fd65 	bl	8010998 <usart_receive_config>
 8010ece:	2108      	movs	r1, #8
 8010ed0:	4620      	mov	r0, r4
 8010ed2:	f7ff fd5b 	bl	801098c <usart_transmit_config>
 8010ed6:	68e3      	ldr	r3, [r4, #12]
 8010ed8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010edc:	60e3      	str	r3, [r4, #12]
 8010ede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010ee0:	2304      	movs	r3, #4
 8010ee2:	2203      	movs	r2, #3
 8010ee4:	2118      	movs	r1, #24
 8010ee6:	4819      	ldr	r0, [pc, #100]	; (8010f4c <gd32_uart_begin+0x1a8>)
 8010ee8:	f7ff f9ec 	bl	80102c4 <gpio_init>
 8010eec:	2308      	movs	r3, #8
 8010eee:	2203      	movs	r2, #3
 8010ef0:	2104      	movs	r1, #4
 8010ef2:	4816      	ldr	r0, [pc, #88]	; (8010f4c <gd32_uart_begin+0x1a8>)
 8010ef4:	f7ff f9e6 	bl	80102c4 <gpio_init>
 8010ef8:	e7b9      	b.n	8010e6e <gd32_uart_begin+0xca>
 8010efa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010efe:	2203      	movs	r2, #3
 8010f00:	2118      	movs	r1, #24
 8010f02:	480f      	ldr	r0, [pc, #60]	; (8010f40 <gd32_uart_begin+0x19c>)
 8010f04:	f7ff f9de 	bl	80102c4 <gpio_init>
 8010f08:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010f0c:	2203      	movs	r2, #3
 8010f0e:	2104      	movs	r1, #4
 8010f10:	480b      	ldr	r0, [pc, #44]	; (8010f40 <gd32_uart_begin+0x19c>)
 8010f12:	e7ef      	b.n	8010ef4 <gd32_uart_begin+0x150>
 8010f14:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010f18:	2203      	movs	r2, #3
 8010f1a:	2118      	movs	r1, #24
 8010f1c:	4808      	ldr	r0, [pc, #32]	; (8010f40 <gd32_uart_begin+0x19c>)
 8010f1e:	f7ff f9d1 	bl	80102c4 <gpio_init>
 8010f22:	2304      	movs	r3, #4
 8010f24:	2203      	movs	r2, #3
 8010f26:	4619      	mov	r1, r3
 8010f28:	4809      	ldr	r0, [pc, #36]	; (8010f50 <gd32_uart_begin+0x1ac>)
 8010f2a:	e7e3      	b.n	8010ef4 <gd32_uart_begin+0x150>
 8010f2c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8010f30:	e7be      	b.n	8010eb0 <gd32_uart_begin+0x10c>
 8010f32:	2100      	movs	r1, #0
 8010f34:	e7bc      	b.n	8010eb0 <gd32_uart_begin+0x10c>
 8010f36:	bf00      	nop
 8010f38:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010f3c:	40005000 	andmi	r5, r0, r0
 8010f40:	40011000 	andmi	r1, r1, r0
 8010f44:	00140010 	andseq	r0, r4, r0, lsl r0
 8010f48:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010f4c:	40010800 	andmi	r0, r1, r0, lsl #16
 8010f50:	40011400 	andmi	r1, r1, r0, lsl #8

08010f54 <micros_init()>:
 8010f54:	4770      	bx	lr
	...

08010f58 <udelay_init()>:
 8010f58:	4a07      	ldr	r2, [pc, #28]	; (8010f78 <udelay_init()+0x20>)
 8010f5a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010f5e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010f62:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8010f66:	2200      	movs	r2, #0
 8010f68:	4b04      	ldr	r3, [pc, #16]	; (8010f7c <udelay_init()+0x24>)
 8010f6a:	605a      	str	r2, [r3, #4]
 8010f6c:	681a      	ldr	r2, [r3, #0]
 8010f6e:	f042 0201 	orr.w	r2, r2, #1
 8010f72:	601a      	str	r2, [r3, #0]
 8010f74:	4770      	bx	lr
 8010f76:	bf00      	nop
 8010f78:	e000ed00 	and	lr, r0, r0, lsl #26
 8010f7c:	e0001000 	and	r1, r0, r0

08010f80 <udelay(unsigned int, unsigned int)>:
 8010f80:	236c      	movs	r3, #108	; 0x6c
 8010f82:	b530      	push	{r4, r5, lr}
 8010f84:	4358      	muls	r0, r3
 8010f86:	b909      	cbnz	r1, 8010f8c <udelay(unsigned int, unsigned int)+0xc>
 8010f88:	4b08      	ldr	r3, [pc, #32]	; (8010fac <udelay(unsigned int, unsigned int)+0x2c>)
 8010f8a:	6859      	ldr	r1, [r3, #4]
 8010f8c:	2300      	movs	r3, #0
 8010f8e:	4c07      	ldr	r4, [pc, #28]	; (8010fac <udelay(unsigned int, unsigned int)+0x2c>)
 8010f90:	6862      	ldr	r2, [r4, #4]
 8010f92:	4291      	cmp	r1, r2
 8010f94:	d0fc      	beq.n	8010f90 <udelay(unsigned int, unsigned int)+0x10>
 8010f96:	bf2a      	itet	cs
 8010f98:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8010f9c:	189b      	addcc	r3, r3, r2
 8010f9e:	195b      	addcs	r3, r3, r5
 8010fa0:	1a5b      	subs	r3, r3, r1
 8010fa2:	4283      	cmp	r3, r0
 8010fa4:	d300      	bcc.n	8010fa8 <udelay(unsigned int, unsigned int)+0x28>
 8010fa6:	bd30      	pop	{r4, r5, pc}
 8010fa8:	4611      	mov	r1, r2
 8010faa:	e7f1      	b.n	8010f90 <udelay(unsigned int, unsigned int)+0x10>
 8010fac:	e0001000 	and	r1, r0, r0

08010fb0 <emac_start(unsigned char*)>:
 8010fb0:	b538      	push	{r3, r4, r5, lr}
 8010fb2:	4605      	mov	r5, r0
 8010fb4:	f240 6002 	movw	r0, #1538	; 0x602
 8010fb8:	f7ff fa1c 	bl	80103f4 <rcu_periph_clock_enable>
 8010fbc:	f240 6003 	movw	r0, #1539	; 0x603
 8010fc0:	f7ff fa18 	bl	80103f4 <rcu_periph_clock_enable>
 8010fc4:	f240 6004 	movw	r0, #1540	; 0x604
 8010fc8:	f7ff fa14 	bl	80103f4 <rcu_periph_clock_enable>
 8010fcc:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010fd0:	f7ff fa10 	bl	80103f4 <rcu_periph_clock_enable>
 8010fd4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010fd8:	2203      	movs	r2, #3
 8010fda:	2118      	movs	r1, #24
 8010fdc:	4843      	ldr	r0, [pc, #268]	; (80110ec <emac_start(unsigned char*)+0x13c>)
 8010fde:	f7ff f971 	bl	80102c4 <gpio_init>
 8010fe2:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8010fe6:	f7ff fa2f 	bl	8010448 <rcu_pll2_config>
 8010fea:	201c      	movs	r0, #28
 8010fec:	f7ff fac6 	bl	801057c <rcu_osci_on>
 8010ff0:	201c      	movs	r0, #28
 8010ff2:	f7ff fa63 	bl	80104bc <rcu_osci_stab_wait>
 8010ff6:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8010ffa:	f7ff fa1b 	bl	8010434 <rcu_ckout0_config>
 8010ffe:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8011002:	f7ff f9e3 	bl	80103cc <gpio_ethernet_phy_select>
 8011006:	2302      	movs	r3, #2
 8011008:	2203      	movs	r2, #3
 801100a:	2104      	movs	r1, #4
 801100c:	4837      	ldr	r0, [pc, #220]	; (80110ec <emac_start(unsigned char*)+0x13c>)
 801100e:	f7ff f959 	bl	80102c4 <gpio_init>
 8011012:	2304      	movs	r3, #4
 8011014:	2203      	movs	r2, #3
 8011016:	2118      	movs	r1, #24
 8011018:	4834      	ldr	r0, [pc, #208]	; (80110ec <emac_start(unsigned char*)+0x13c>)
 801101a:	f7ff f953 	bl	80102c4 <gpio_init>
 801101e:	2380      	movs	r3, #128	; 0x80
 8011020:	2203      	movs	r2, #3
 8011022:	2104      	movs	r1, #4
 8011024:	4831      	ldr	r0, [pc, #196]	; (80110ec <emac_start(unsigned char*)+0x13c>)
 8011026:	f7ff f94d 	bl	80102c4 <gpio_init>
 801102a:	2302      	movs	r3, #2
 801102c:	2203      	movs	r2, #3
 801102e:	2118      	movs	r1, #24
 8011030:	482f      	ldr	r0, [pc, #188]	; (80110f0 <emac_start(unsigned char*)+0x140>)
 8011032:	f7ff f947 	bl	80102c4 <gpio_init>
 8011036:	2310      	movs	r3, #16
 8011038:	2203      	movs	r2, #3
 801103a:	2104      	movs	r1, #4
 801103c:	482c      	ldr	r0, [pc, #176]	; (80110f0 <emac_start(unsigned char*)+0x140>)
 801103e:	f7ff f941 	bl	80102c4 <gpio_init>
 8011042:	2320      	movs	r3, #32
 8011044:	2203      	movs	r2, #3
 8011046:	2104      	movs	r1, #4
 8011048:	4829      	ldr	r0, [pc, #164]	; (80110f0 <emac_start(unsigned char*)+0x140>)
 801104a:	f7ff f93b 	bl	80102c4 <gpio_init>
 801104e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011052:	2203      	movs	r2, #3
 8011054:	2118      	movs	r1, #24
 8011056:	4827      	ldr	r0, [pc, #156]	; (80110f4 <emac_start(unsigned char*)+0x144>)
 8011058:	f7ff f934 	bl	80102c4 <gpio_init>
 801105c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8011060:	2203      	movs	r2, #3
 8011062:	2118      	movs	r1, #24
 8011064:	4823      	ldr	r0, [pc, #140]	; (80110f4 <emac_start(unsigned char*)+0x144>)
 8011066:	f7ff f92d 	bl	80102c4 <gpio_init>
 801106a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 801106e:	2203      	movs	r2, #3
 8011070:	2118      	movs	r1, #24
 8011072:	4820      	ldr	r0, [pc, #128]	; (80110f4 <emac_start(unsigned char*)+0x144>)
 8011074:	f7ff f926 	bl	80102c4 <gpio_init>
 8011078:	f240 500e 	movw	r0, #1294	; 0x50e
 801107c:	f7ff f9ba 	bl	80103f4 <rcu_periph_clock_enable>
 8011080:	f240 500f 	movw	r0, #1295	; 0x50f
 8011084:	f7ff f9b6 	bl	80103f4 <rcu_periph_clock_enable>
 8011088:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 801108c:	f7ff f9b2 	bl	80103f4 <rcu_periph_clock_enable>
 8011090:	f000 fcdc 	bl	8011a4c <enet_deinit>
 8011094:	f000 f93a 	bl	801130c <enet_software_reset>
 8011098:	4604      	mov	r4, r0
 801109a:	b138      	cbz	r0, 80110ac <emac_start(unsigned char*)+0xfc>
 801109c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80110a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80110a4:	2001      	movs	r0, #1
 80110a6:	f000 fab5 	bl	8011614 <enet_init>
 80110aa:	4604      	mov	r4, r0
 80110ac:	4628      	mov	r0, r5
 80110ae:	f000 fd89 	bl	8011bc4 <mac_address_get(unsigned char*)>
 80110b2:	4629      	mov	r1, r5
 80110b4:	2000      	movs	r0, #0
 80110b6:	f000 fa0d 	bl	80114d4 <enet_mac_address_set>
 80110ba:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80110be:	f000 f939 	bl	8011334 <enet_descriptors_chain_init>
 80110c2:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80110c6:	f000 f935 	bl	8011334 <enet_descriptors_chain_init>
 80110ca:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80110ce:	480a      	ldr	r0, [pc, #40]	; (80110f8 <emac_start(unsigned char*)+0x148>)
 80110d0:	f000 f9fa 	bl	80114c8 <enet_transmit_checksum_config>
 80110d4:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80110d8:	4808      	ldr	r0, [pc, #32]	; (80110fc <emac_start(unsigned char*)+0x14c>)
 80110da:	f000 f9f5 	bl	80114c8 <enet_transmit_checksum_config>
 80110de:	f000 fc2d 	bl	801193c <enet_enable>
 80110e2:	fab4 f084 	clz	r0, r4
 80110e6:	0940      	lsrs	r0, r0, #5
 80110e8:	4240      	negs	r0, r0
 80110ea:	bd38      	pop	{r3, r4, r5, pc}
 80110ec:	40010800 	andmi	r0, r1, r0, lsl #16
 80110f0:	40011000 	andmi	r1, r1, r0
 80110f4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80110f8:	2000dd70 	andcs	sp, r0, r0, ror sp
 80110fc:	2000dd80 	andcs	sp, r0, r0, lsl #27

08011100 <net::link_register_read()>:
 8011100:	b507      	push	{r0, r1, r2, lr}
 8011102:	2201      	movs	r2, #1
 8011104:	f10d 0306 	add.w	r3, sp, #6
 8011108:	4611      	mov	r1, r2
 801110a:	2000      	movs	r0, #0
 801110c:	f000 f9fa 	bl	8011504 <enet_phy_write_read>
 8011110:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011114:	f080 0004 	eor.w	r0, r0, #4
 8011118:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801111c:	b003      	add	sp, #12
 801111e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08011124 <adc_mode_config>:
 8011124:	4b06      	ldr	r3, [pc, #24]	; (8011140 <adc_mode_config+0x1c>)
 8011126:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801112a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 801112e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8011132:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8011136:	4302      	orrs	r2, r0
 8011138:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801113c:	4770      	bx	lr
 801113e:	bf00      	nop
 8011140:	40012000 	andmi	r2, r1, r0

08011144 <adc_special_function_config>:
 8011144:	b510      	push	{r4, lr}
 8011146:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801114a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801114e:	f001 0102 	and.w	r1, r1, #2
 8011152:	b17a      	cbz	r2, 8011174 <adc_special_function_config+0x30>
 8011154:	b11b      	cbz	r3, 801115e <adc_special_function_config+0x1a>
 8011156:	6843      	ldr	r3, [r0, #4]
 8011158:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801115c:	6043      	str	r3, [r0, #4]
 801115e:	b11c      	cbz	r4, 8011168 <adc_special_function_config+0x24>
 8011160:	6843      	ldr	r3, [r0, #4]
 8011162:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8011166:	6043      	str	r3, [r0, #4]
 8011168:	b119      	cbz	r1, 8011172 <adc_special_function_config+0x2e>
 801116a:	6883      	ldr	r3, [r0, #8]
 801116c:	f043 0302 	orr.w	r3, r3, #2
 8011170:	6083      	str	r3, [r0, #8]
 8011172:	bd10      	pop	{r4, pc}
 8011174:	b11b      	cbz	r3, 801117e <adc_special_function_config+0x3a>
 8011176:	6843      	ldr	r3, [r0, #4]
 8011178:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801117c:	6043      	str	r3, [r0, #4]
 801117e:	b11c      	cbz	r4, 8011188 <adc_special_function_config+0x44>
 8011180:	6843      	ldr	r3, [r0, #4]
 8011182:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8011186:	6043      	str	r3, [r0, #4]
 8011188:	2900      	cmp	r1, #0
 801118a:	d0f2      	beq.n	8011172 <adc_special_function_config+0x2e>
 801118c:	6883      	ldr	r3, [r0, #8]
 801118e:	f023 0302 	bic.w	r3, r3, #2
 8011192:	e7ed      	b.n	8011170 <adc_special_function_config+0x2c>

08011194 <adc_data_alignment_config>:
 8011194:	6883      	ldr	r3, [r0, #8]
 8011196:	b119      	cbz	r1, 80111a0 <adc_data_alignment_config+0xc>
 8011198:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801119c:	6083      	str	r3, [r0, #8]
 801119e:	4770      	bx	lr
 80111a0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80111a4:	e7fa      	b.n	801119c <adc_data_alignment_config+0x8>

080111a6 <adc_enable>:
 80111a6:	6883      	ldr	r3, [r0, #8]
 80111a8:	07db      	lsls	r3, r3, #31
 80111aa:	bf5e      	ittt	pl
 80111ac:	6883      	ldrpl	r3, [r0, #8]
 80111ae:	f043 0301 	orrpl.w	r3, r3, #1
 80111b2:	6083      	strpl	r3, [r0, #8]
 80111b4:	4770      	bx	lr

080111b6 <adc_calibration_enable>:
 80111b6:	6883      	ldr	r3, [r0, #8]
 80111b8:	f100 0208 	add.w	r2, r0, #8
 80111bc:	f043 0308 	orr.w	r3, r3, #8
 80111c0:	6083      	str	r3, [r0, #8]
 80111c2:	6813      	ldr	r3, [r2, #0]
 80111c4:	0719      	lsls	r1, r3, #28
 80111c6:	d4fc      	bmi.n	80111c2 <adc_calibration_enable+0xc>
 80111c8:	6883      	ldr	r3, [r0, #8]
 80111ca:	f043 0304 	orr.w	r3, r3, #4
 80111ce:	6083      	str	r3, [r0, #8]
 80111d0:	6813      	ldr	r3, [r2, #0]
 80111d2:	075b      	lsls	r3, r3, #29
 80111d4:	d4fc      	bmi.n	80111d0 <adc_calibration_enable+0x1a>
 80111d6:	4770      	bx	lr

080111d8 <adc_tempsensor_vrefint_enable>:
 80111d8:	4a03      	ldr	r2, [pc, #12]	; (80111e8 <adc_tempsensor_vrefint_enable+0x10>)
 80111da:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80111de:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80111e2:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80111e6:	4770      	bx	lr
 80111e8:	40012000 	andmi	r2, r1, r0

080111ec <adc_channel_length_config>:
 80111ec:	2901      	cmp	r1, #1
 80111ee:	d002      	beq.n	80111f6 <adc_channel_length_config+0xa>
 80111f0:	2902      	cmp	r1, #2
 80111f2:	d00c      	beq.n	801120e <adc_channel_length_config+0x22>
 80111f4:	4770      	bx	lr
 80111f6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80111f8:	3a01      	subs	r2, #1
 80111fa:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80111fe:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011200:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011202:	0512      	lsls	r2, r2, #20
 8011204:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8011208:	431a      	orrs	r2, r3
 801120a:	62c2      	str	r2, [r0, #44]	; 0x2c
 801120c:	4770      	bx	lr
 801120e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011210:	3a01      	subs	r2, #1
 8011212:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8011216:	6383      	str	r3, [r0, #56]	; 0x38
 8011218:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801121a:	0512      	lsls	r2, r2, #20
 801121c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8011220:	431a      	orrs	r2, r3
 8011222:	6382      	str	r2, [r0, #56]	; 0x38
 8011224:	4770      	bx	lr

08011226 <adc_inserted_channel_config>:
 8011226:	b530      	push	{r4, r5, lr}
 8011228:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801122a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801122c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8011230:	1a61      	subs	r1, r4, r1
 8011232:	f06f 0404 	mvn.w	r4, #4
 8011236:	4361      	muls	r1, r4
 8011238:	241f      	movs	r4, #31
 801123a:	310f      	adds	r1, #15
 801123c:	408c      	lsls	r4, r1
 801123e:	ea25 0504 	bic.w	r5, r5, r4
 8011242:	fa02 f101 	lsl.w	r1, r2, r1
 8011246:	4329      	orrs	r1, r5
 8011248:	2a09      	cmp	r2, #9
 801124a:	6381      	str	r1, [r0, #56]	; 0x38
 801124c:	d80b      	bhi.n	8011266 <adc_inserted_channel_config+0x40>
 801124e:	2407      	movs	r4, #7
 8011250:	6901      	ldr	r1, [r0, #16]
 8011252:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011256:	4094      	lsls	r4, r2
 8011258:	ea21 0104 	bic.w	r1, r1, r4
 801125c:	fa03 f202 	lsl.w	r2, r3, r2
 8011260:	430a      	orrs	r2, r1
 8011262:	6102      	str	r2, [r0, #16]
 8011264:	bd30      	pop	{r4, r5, pc}
 8011266:	2a11      	cmp	r2, #17
 8011268:	d8fc      	bhi.n	8011264 <adc_inserted_channel_config+0x3e>
 801126a:	2407      	movs	r4, #7
 801126c:	3a0a      	subs	r2, #10
 801126e:	68c1      	ldr	r1, [r0, #12]
 8011270:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011274:	4094      	lsls	r4, r2
 8011276:	ea21 0104 	bic.w	r1, r1, r4
 801127a:	4093      	lsls	r3, r2
 801127c:	430b      	orrs	r3, r1
 801127e:	60c3      	str	r3, [r0, #12]
 8011280:	e7f0      	b.n	8011264 <adc_inserted_channel_config+0x3e>

08011282 <adc_external_trigger_source_config>:
 8011282:	2901      	cmp	r1, #1
 8011284:	d002      	beq.n	801128c <adc_external_trigger_source_config+0xa>
 8011286:	2902      	cmp	r1, #2
 8011288:	d008      	beq.n	801129c <adc_external_trigger_source_config+0x1a>
 801128a:	4770      	bx	lr
 801128c:	6883      	ldr	r3, [r0, #8]
 801128e:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8011292:	6083      	str	r3, [r0, #8]
 8011294:	6883      	ldr	r3, [r0, #8]
 8011296:	4313      	orrs	r3, r2
 8011298:	6083      	str	r3, [r0, #8]
 801129a:	4770      	bx	lr
 801129c:	6883      	ldr	r3, [r0, #8]
 801129e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80112a2:	e7f6      	b.n	8011292 <adc_external_trigger_source_config+0x10>

080112a4 <adc_external_trigger_config>:
 80112a4:	f001 0301 	and.w	r3, r1, #1
 80112a8:	f001 0102 	and.w	r1, r1, #2
 80112ac:	b152      	cbz	r2, 80112c4 <adc_external_trigger_config+0x20>
 80112ae:	b11b      	cbz	r3, 80112b8 <adc_external_trigger_config+0x14>
 80112b0:	6883      	ldr	r3, [r0, #8]
 80112b2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80112b6:	6083      	str	r3, [r0, #8]
 80112b8:	b119      	cbz	r1, 80112c2 <adc_external_trigger_config+0x1e>
 80112ba:	6883      	ldr	r3, [r0, #8]
 80112bc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80112c0:	6083      	str	r3, [r0, #8]
 80112c2:	4770      	bx	lr
 80112c4:	b11b      	cbz	r3, 80112ce <adc_external_trigger_config+0x2a>
 80112c6:	6883      	ldr	r3, [r0, #8]
 80112c8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80112cc:	6083      	str	r3, [r0, #8]
 80112ce:	2900      	cmp	r1, #0
 80112d0:	d0f7      	beq.n	80112c2 <adc_external_trigger_config+0x1e>
 80112d2:	6883      	ldr	r3, [r0, #8]
 80112d4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80112d8:	e7f2      	b.n	80112c0 <adc_external_trigger_config+0x1c>

080112da <adc_software_trigger_enable>:
 80112da:	07ca      	lsls	r2, r1, #31
 80112dc:	bf42      	ittt	mi
 80112de:	6883      	ldrmi	r3, [r0, #8]
 80112e0:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80112e4:	6083      	strmi	r3, [r0, #8]
 80112e6:	078b      	lsls	r3, r1, #30
 80112e8:	bf42      	ittt	mi
 80112ea:	6883      	ldrmi	r3, [r0, #8]
 80112ec:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80112f0:	6083      	strmi	r3, [r0, #8]
 80112f2:	4770      	bx	lr

080112f4 <enet_delay>:
 80112f4:	2300      	movs	r3, #0
 80112f6:	b082      	sub	sp, #8
 80112f8:	9301      	str	r3, [sp, #4]
 80112fa:	9001      	str	r0, [sp, #4]
 80112fc:	9b01      	ldr	r3, [sp, #4]
 80112fe:	b90b      	cbnz	r3, 8011304 <enet_delay+0x10>
 8011300:	b002      	add	sp, #8
 8011302:	4770      	bx	lr
 8011304:	9b01      	ldr	r3, [sp, #4]
 8011306:	3b01      	subs	r3, #1
 8011308:	9301      	str	r3, [sp, #4]
 801130a:	e7f7      	b.n	80112fc <enet_delay+0x8>

0801130c <enet_software_reset>:
 801130c:	4b07      	ldr	r3, [pc, #28]	; (801132c <enet_software_reset+0x20>)
 801130e:	681a      	ldr	r2, [r3, #0]
 8011310:	f042 0201 	orr.w	r2, r2, #1
 8011314:	601a      	str	r2, [r3, #0]
 8011316:	4a06      	ldr	r2, [pc, #24]	; (8011330 <enet_software_reset+0x24>)
 8011318:	6819      	ldr	r1, [r3, #0]
 801131a:	07c9      	lsls	r1, r1, #31
 801131c:	d501      	bpl.n	8011322 <enet_software_reset+0x16>
 801131e:	3a01      	subs	r2, #1
 8011320:	d1fa      	bne.n	8011318 <enet_software_reset+0xc>
 8011322:	6818      	ldr	r0, [r3, #0]
 8011324:	43c0      	mvns	r0, r0
 8011326:	f000 0001 	and.w	r0, r0, #1
 801132a:	4770      	bx	lr
 801132c:	40029000 	andmi	r9, r2, r0
 8011330:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011334 <enet_descriptors_chain_init>:
 8011334:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8011338:	b5f0      	push	{r4, r5, r6, r7, lr}
 801133a:	4a19      	ldr	r2, [pc, #100]	; (80113a0 <enet_descriptors_chain_init+0x6c>)
 801133c:	d125      	bne.n	801138a <enet_descriptors_chain_init+0x56>
 801133e:	2500      	movs	r5, #0
 8011340:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8011344:	2002      	movs	r0, #2
 8011346:	4b17      	ldr	r3, [pc, #92]	; (80113a4 <enet_descriptors_chain_init+0x70>)
 8011348:	4c17      	ldr	r4, [pc, #92]	; (80113a8 <enet_descriptors_chain_init+0x74>)
 801134a:	6113      	str	r3, [r2, #16]
 801134c:	4a17      	ldr	r2, [pc, #92]	; (80113ac <enet_descriptors_chain_init+0x78>)
 801134e:	6013      	str	r3, [r2, #0]
 8011350:	2200      	movs	r2, #0
 8011352:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8011356:	4916      	ldr	r1, [pc, #88]	; (80113b0 <enet_descriptors_chain_init+0x7c>)
 8011358:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 801135c:	600a      	str	r2, [r1, #0]
 801135e:	4915      	ldr	r1, [pc, #84]	; (80113b4 <enet_descriptors_chain_init+0x80>)
 8011360:	600a      	str	r2, [r1, #0]
 8011362:	f103 0110 	add.w	r1, r3, #16
 8011366:	fb0e 4702 	mla	r7, lr, r2, r4
 801136a:	f841 7c08 	str.w	r7, [r1, #-8]
 801136e:	4594      	cmp	ip, r2
 8011370:	bf94      	ite	ls
 8011372:	461f      	movls	r7, r3
 8011374:	460f      	movhi	r7, r1
 8011376:	3201      	adds	r2, #1
 8011378:	4290      	cmp	r0, r2
 801137a:	e941 6504 	strd	r6, r5, [r1, #-16]
 801137e:	f841 7c04 	str.w	r7, [r1, #-4]
 8011382:	f101 0110 	add.w	r1, r1, #16
 8011386:	d1ee      	bne.n	8011366 <enet_descriptors_chain_init+0x32>
 8011388:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801138a:	4b0b      	ldr	r3, [pc, #44]	; (80113b8 <enet_descriptors_chain_init+0x84>)
 801138c:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8011390:	60d3      	str	r3, [r2, #12]
 8011392:	4a0a      	ldr	r2, [pc, #40]	; (80113bc <enet_descriptors_chain_init+0x88>)
 8011394:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8011398:	2008      	movs	r0, #8
 801139a:	4c09      	ldr	r4, [pc, #36]	; (80113c0 <enet_descriptors_chain_init+0x8c>)
 801139c:	6013      	str	r3, [r2, #0]
 801139e:	e7d7      	b.n	8011350 <enet_descriptors_chain_init+0x1c>
 80113a0:	40029000 	andmi	r9, r2, r0
 80113a4:	2000dd70 	andcs	sp, r0, r0, ror sp
 80113a8:	2000d188 	andcs	sp, r0, r8, lsl #3
 80113ac:	2000a128 	andcs	sl, r0, r8, lsr #2
 80113b0:	2000a11c 	andcs	sl, r0, ip, lsl r1
 80113b4:	2000a120 	andcs	sl, r0, r0, lsr #2
 80113b8:	2000d108 	andcs	sp, r0, r8, lsl #2
 80113bc:	2000a124 	andcs	sl, r0, r4, lsr #2
 80113c0:	2000a168 	andcs	sl, r0, r8, ror #2

080113c4 <enet_frame_receive>:
 80113c4:	4a1d      	ldr	r2, [pc, #116]	; (801143c <enet_frame_receive+0x78>)
 80113c6:	b510      	push	{r4, lr}
 80113c8:	6813      	ldr	r3, [r2, #0]
 80113ca:	681b      	ldr	r3, [r3, #0]
 80113cc:	2b00      	cmp	r3, #0
 80113ce:	db33      	blt.n	8011438 <enet_frame_receive+0x74>
 80113d0:	b970      	cbnz	r0, 80113f0 <enet_frame_receive+0x2c>
 80113d2:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80113d6:	6813      	ldr	r3, [r2, #0]
 80113d8:	6019      	str	r1, [r3, #0]
 80113da:	4919      	ldr	r1, [pc, #100]	; (8011440 <enet_frame_receive+0x7c>)
 80113dc:	6948      	ldr	r0, [r1, #20]
 80113de:	0604      	lsls	r4, r0, #24
 80113e0:	d419      	bmi.n	8011416 <enet_frame_receive+0x52>
 80113e2:	6859      	ldr	r1, [r3, #4]
 80113e4:	0448      	lsls	r0, r1, #17
 80113e6:	d51b      	bpl.n	8011420 <enet_frame_receive+0x5c>
 80113e8:	68db      	ldr	r3, [r3, #12]
 80113ea:	2001      	movs	r0, #1
 80113ec:	6013      	str	r3, [r2, #0]
 80113ee:	bd10      	pop	{r4, pc}
 80113f0:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80113f4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 80113f8:	d11e      	bne.n	8011438 <enet_frame_receive+0x74>
 80113fa:	f3c3 430d 	ubfx	r3, r3, #16, #14
 80113fe:	3b04      	subs	r3, #4
 8011400:	428b      	cmp	r3, r1
 8011402:	d819      	bhi.n	8011438 <enet_frame_receive+0x74>
 8011404:	2100      	movs	r1, #0
 8011406:	4299      	cmp	r1, r3
 8011408:	6814      	ldr	r4, [r2, #0]
 801140a:	d2e2      	bcs.n	80113d2 <enet_frame_receive+0xe>
 801140c:	68a4      	ldr	r4, [r4, #8]
 801140e:	5d0c      	ldrb	r4, [r1, r4]
 8011410:	5444      	strb	r4, [r0, r1]
 8011412:	3101      	adds	r1, #1
 8011414:	e7f7      	b.n	8011406 <enet_frame_receive+0x42>
 8011416:	2080      	movs	r0, #128	; 0x80
 8011418:	6148      	str	r0, [r1, #20]
 801141a:	2000      	movs	r0, #0
 801141c:	6088      	str	r0, [r1, #8]
 801141e:	e7e0      	b.n	80113e2 <enet_frame_receive+0x1e>
 8011420:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8011424:	4906      	ldr	r1, [pc, #24]	; (8011440 <enet_frame_receive+0x7c>)
 8011426:	bf05      	ittet	eq
 8011428:	3310      	addeq	r3, #16
 801142a:	6809      	ldreq	r1, [r1, #0]
 801142c:	68cb      	ldrne	r3, [r1, #12]
 801142e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011432:	bf08      	it	eq
 8011434:	185b      	addeq	r3, r3, r1
 8011436:	e7d8      	b.n	80113ea <enet_frame_receive+0x26>
 8011438:	2000      	movs	r0, #0
 801143a:	e7d8      	b.n	80113ee <enet_frame_receive+0x2a>
 801143c:	2000a124 	andcs	sl, r0, r4, lsr #2
 8011440:	40029000 	andmi	r9, r2, r0

08011444 <enet_frame_transmit>:
 8011444:	4a1e      	ldr	r2, [pc, #120]	; (80114c0 <enet_frame_transmit+0x7c>)
 8011446:	b530      	push	{r4, r5, lr}
 8011448:	6813      	ldr	r3, [r2, #0]
 801144a:	681b      	ldr	r3, [r3, #0]
 801144c:	2b00      	cmp	r3, #0
 801144e:	db34      	blt.n	80114ba <enet_frame_transmit+0x76>
 8011450:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8011454:	4299      	cmp	r1, r3
 8011456:	d830      	bhi.n	80114ba <enet_frame_transmit+0x76>
 8011458:	b9e8      	cbnz	r0, 8011496 <enet_frame_transmit+0x52>
 801145a:	6813      	ldr	r3, [r2, #0]
 801145c:	4819      	ldr	r0, [pc, #100]	; (80114c4 <enet_frame_transmit+0x80>)
 801145e:	6059      	str	r1, [r3, #4]
 8011460:	6819      	ldr	r1, [r3, #0]
 8011462:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8011466:	6019      	str	r1, [r3, #0]
 8011468:	6941      	ldr	r1, [r0, #20]
 801146a:	6944      	ldr	r4, [r0, #20]
 801146c:	f001 0104 	and.w	r1, r1, #4
 8011470:	f004 0420 	and.w	r4, r4, #32
 8011474:	4321      	orrs	r1, r4
 8011476:	d110      	bne.n	801149a <enet_frame_transmit+0x56>
 8011478:	6819      	ldr	r1, [r3, #0]
 801147a:	02c8      	lsls	r0, r1, #11
 801147c:	d511      	bpl.n	80114a2 <enet_frame_transmit+0x5e>
 801147e:	68db      	ldr	r3, [r3, #12]
 8011480:	2001      	movs	r0, #1
 8011482:	6013      	str	r3, [r2, #0]
 8011484:	bd30      	pop	{r4, r5, pc}
 8011486:	5cc5      	ldrb	r5, [r0, r3]
 8011488:	68a4      	ldr	r4, [r4, #8]
 801148a:	551d      	strb	r5, [r3, r4]
 801148c:	3301      	adds	r3, #1
 801148e:	428b      	cmp	r3, r1
 8011490:	6814      	ldr	r4, [r2, #0]
 8011492:	d1f8      	bne.n	8011486 <enet_frame_transmit+0x42>
 8011494:	e7e1      	b.n	801145a <enet_frame_transmit+0x16>
 8011496:	2300      	movs	r3, #0
 8011498:	e7f9      	b.n	801148e <enet_frame_transmit+0x4a>
 801149a:	6141      	str	r1, [r0, #20]
 801149c:	2100      	movs	r1, #0
 801149e:	6041      	str	r1, [r0, #4]
 80114a0:	e7ea      	b.n	8011478 <enet_frame_transmit+0x34>
 80114a2:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80114a6:	4907      	ldr	r1, [pc, #28]	; (80114c4 <enet_frame_transmit+0x80>)
 80114a8:	bf05      	ittet	eq
 80114aa:	3310      	addeq	r3, #16
 80114ac:	6809      	ldreq	r1, [r1, #0]
 80114ae:	690b      	ldrne	r3, [r1, #16]
 80114b0:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80114b4:	bf08      	it	eq
 80114b6:	185b      	addeq	r3, r3, r1
 80114b8:	e7e2      	b.n	8011480 <enet_frame_transmit+0x3c>
 80114ba:	2000      	movs	r0, #0
 80114bc:	e7e2      	b.n	8011484 <enet_frame_transmit+0x40>
 80114be:	bf00      	nop
 80114c0:	2000a128 	andcs	sl, r0, r8, lsr #2
 80114c4:	40029000 	andmi	r9, r2, r0

080114c8 <enet_transmit_checksum_config>:
 80114c8:	6803      	ldr	r3, [r0, #0]
 80114ca:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80114ce:	430b      	orrs	r3, r1
 80114d0:	6003      	str	r3, [r0, #0]
 80114d2:	4770      	bx	lr

080114d4 <enet_mac_address_set>:
 80114d4:	888a      	ldrh	r2, [r1, #4]
 80114d6:	4b03      	ldr	r3, [pc, #12]	; (80114e4 <enet_mac_address_set+0x10>)
 80114d8:	50c2      	str	r2, [r0, r3]
 80114da:	680a      	ldr	r2, [r1, #0]
 80114dc:	3304      	adds	r3, #4
 80114de:	50c2      	str	r2, [r0, r3]
 80114e0:	4770      	bx	lr
 80114e2:	bf00      	nop
 80114e4:	40028040 	andmi	r8, r2, r0, asr #32

080114e8 <enet_rx_enable>:
 80114e8:	4a05      	ldr	r2, [pc, #20]	; (8011500 <enet_rx_enable+0x18>)
 80114ea:	6813      	ldr	r3, [r2, #0]
 80114ec:	f043 0304 	orr.w	r3, r3, #4
 80114f0:	6013      	str	r3, [r2, #0]
 80114f2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80114f6:	6993      	ldr	r3, [r2, #24]
 80114f8:	f043 0302 	orr.w	r3, r3, #2
 80114fc:	6193      	str	r3, [r2, #24]
 80114fe:	4770      	bx	lr
 8011500:	40028000 	andmi	r8, r2, r0

08011504 <enet_phy_write_read>:
 8011504:	b530      	push	{r4, r5, lr}
 8011506:	4604      	mov	r4, r0
 8011508:	4d13      	ldr	r5, [pc, #76]	; (8011558 <enet_phy_write_read+0x54>)
 801150a:	0192      	lsls	r2, r2, #6
 801150c:	6928      	ldr	r0, [r5, #16]
 801150e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8011512:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8011516:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801151a:	4302      	orrs	r2, r0
 801151c:	02c9      	lsls	r1, r1, #11
 801151e:	b289      	uxth	r1, r1
 8011520:	2c02      	cmp	r4, #2
 8011522:	ea42 0204 	orr.w	r2, r2, r4
 8011526:	ea42 0201 	orr.w	r2, r2, r1
 801152a:	bf08      	it	eq
 801152c:	8819      	ldrheq	r1, [r3, #0]
 801152e:	f042 0201 	orr.w	r2, r2, #1
 8011532:	bf08      	it	eq
 8011534:	6169      	streq	r1, [r5, #20]
 8011536:	612a      	str	r2, [r5, #16]
 8011538:	4907      	ldr	r1, [pc, #28]	; (8011558 <enet_phy_write_read+0x54>)
 801153a:	4a08      	ldr	r2, [pc, #32]	; (801155c <enet_phy_write_read+0x58>)
 801153c:	6908      	ldr	r0, [r1, #16]
 801153e:	07c0      	lsls	r0, r0, #31
 8011540:	d501      	bpl.n	8011546 <enet_phy_write_read+0x42>
 8011542:	3a01      	subs	r2, #1
 8011544:	d1fa      	bne.n	801153c <enet_phy_write_read+0x38>
 8011546:	690a      	ldr	r2, [r1, #16]
 8011548:	43d2      	mvns	r2, r2
 801154a:	f002 0001 	and.w	r0, r2, #1
 801154e:	b90c      	cbnz	r4, 8011554 <enet_phy_write_read+0x50>
 8011550:	694a      	ldr	r2, [r1, #20]
 8011552:	801a      	strh	r2, [r3, #0]
 8011554:	bd30      	pop	{r4, r5, pc}
 8011556:	bf00      	nop
 8011558:	40028000 	andmi	r8, r2, r0
 801155c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011560 <enet_phy_config>:
 8011560:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011562:	4d22      	ldr	r5, [pc, #136]	; (80115ec <enet_phy_config+0x8c>)
 8011564:	2001      	movs	r0, #1
 8011566:	692c      	ldr	r4, [r5, #16]
 8011568:	f7ff f80a 	bl	8010580 <rcu_clock_freq_get>
 801156c:	4b20      	ldr	r3, [pc, #128]	; (80115f0 <enet_phy_config+0x90>)
 801156e:	4a21      	ldr	r2, [pc, #132]	; (80115f4 <enet_phy_config+0x94>)
 8011570:	4403      	add	r3, r0
 8011572:	4293      	cmp	r3, r2
 8011574:	f024 041c 	bic.w	r4, r4, #28
 8011578:	d21f      	bcs.n	80115ba <enet_phy_config+0x5a>
 801157a:	f044 0408 	orr.w	r4, r4, #8
 801157e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011582:	612c      	str	r4, [r5, #16]
 8011584:	2200      	movs	r2, #0
 8011586:	f8ad 3006 	strh.w	r3, [sp, #6]
 801158a:	2101      	movs	r1, #1
 801158c:	2002      	movs	r0, #2
 801158e:	f10d 0306 	add.w	r3, sp, #6
 8011592:	f7ff ffb7 	bl	8011504 <enet_phy_write_read>
 8011596:	b310      	cbz	r0, 80115de <enet_phy_config+0x7e>
 8011598:	2200      	movs	r2, #0
 801159a:	4817      	ldr	r0, [pc, #92]	; (80115f8 <enet_phy_config+0x98>)
 801159c:	f7ff feaa 	bl	80112f4 <enet_delay>
 80115a0:	2101      	movs	r1, #1
 80115a2:	4610      	mov	r0, r2
 80115a4:	f10d 0306 	add.w	r3, sp, #6
 80115a8:	f7ff ffac 	bl	8011504 <enet_phy_write_read>
 80115ac:	b1b8      	cbz	r0, 80115de <enet_phy_config+0x7e>
 80115ae:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80115b2:	43c0      	mvns	r0, r0
 80115b4:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80115b8:	e012      	b.n	80115e0 <enet_phy_config+0x80>
 80115ba:	4b10      	ldr	r3, [pc, #64]	; (80115fc <enet_phy_config+0x9c>)
 80115bc:	4a10      	ldr	r2, [pc, #64]	; (8011600 <enet_phy_config+0xa0>)
 80115be:	4403      	add	r3, r0
 80115c0:	4293      	cmp	r3, r2
 80115c2:	d802      	bhi.n	80115ca <enet_phy_config+0x6a>
 80115c4:	f044 040c 	orr.w	r4, r4, #12
 80115c8:	e7d9      	b.n	801157e <enet_phy_config+0x1e>
 80115ca:	4b0e      	ldr	r3, [pc, #56]	; (8011604 <enet_phy_config+0xa4>)
 80115cc:	4a0e      	ldr	r2, [pc, #56]	; (8011608 <enet_phy_config+0xa8>)
 80115ce:	4403      	add	r3, r0
 80115d0:	4293      	cmp	r3, r2
 80115d2:	d9d4      	bls.n	801157e <enet_phy_config+0x1e>
 80115d4:	4b0d      	ldr	r3, [pc, #52]	; (801160c <enet_phy_config+0xac>)
 80115d6:	4a0e      	ldr	r2, [pc, #56]	; (8011610 <enet_phy_config+0xb0>)
 80115d8:	4403      	add	r3, r0
 80115da:	4293      	cmp	r3, r2
 80115dc:	d902      	bls.n	80115e4 <enet_phy_config+0x84>
 80115de:	2000      	movs	r0, #0
 80115e0:	b003      	add	sp, #12
 80115e2:	bd30      	pop	{r4, r5, pc}
 80115e4:	f044 0404 	orr.w	r4, r4, #4
 80115e8:	e7c9      	b.n	801157e <enet_phy_config+0x1e>
 80115ea:	bf00      	nop
 80115ec:	40028000 	andmi	r8, r2, r0
 80115f0:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80115f4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80115f8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80115fc:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8011600:	017d783f 	cmneq	sp, pc, lsr r8
 8011604:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8011608:	01c9c37f 	biceq	ip, r9, pc, ror r3
 801160c:	faa2b580 	blx	68bec14 <__stack_size+0x68bcc14>
 8011610:	0112a880 	tsteq	r2, r0, lsl #17

08011614 <enet_init>:
 8011614:	2300      	movs	r3, #0
 8011616:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011618:	4604      	mov	r4, r0
 801161a:	460d      	mov	r5, r1
 801161c:	4616      	mov	r6, r2
 801161e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011622:	f7ff ff9d 	bl	8011560 <enet_phy_config>
 8011626:	2800      	cmp	r0, #0
 8011628:	d037      	beq.n	801169a <enet_init+0x86>
 801162a:	4b3b      	ldr	r3, [pc, #236]	; (8011718 <enet_init+0x104>)
 801162c:	4a3b      	ldr	r2, [pc, #236]	; (801171c <enet_init+0x108>)
 801162e:	6819      	ldr	r1, [r3, #0]
 8011630:	2c01      	cmp	r4, #1
 8011632:	ea02 0201 	and.w	r2, r2, r1
 8011636:	601a      	str	r2, [r3, #0]
 8011638:	f04f 0200 	mov.w	r2, #0
 801163c:	605a      	str	r2, [r3, #4]
 801163e:	609a      	str	r2, [r3, #8]
 8011640:	60da      	str	r2, [r3, #12]
 8011642:	6999      	ldr	r1, [r3, #24]
 8011644:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8011648:	ea4f 4101 	mov.w	r1, r1, lsl #16
 801164c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8011650:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8011654:	6199      	str	r1, [r3, #24]
 8011656:	4932      	ldr	r1, [pc, #200]	; (8011720 <enet_init+0x10c>)
 8011658:	61da      	str	r2, [r3, #28]
 801165a:	6988      	ldr	r0, [r1, #24]
 801165c:	4b31      	ldr	r3, [pc, #196]	; (8011724 <enet_init+0x110>)
 801165e:	ea03 0300 	and.w	r3, r3, r0
 8011662:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8011666:	618b      	str	r3, [r1, #24]
 8011668:	680b      	ldr	r3, [r1, #0]
 801166a:	4b2f      	ldr	r3, [pc, #188]	; (8011728 <enet_init+0x114>)
 801166c:	600b      	str	r3, [r1, #0]
 801166e:	d01e      	beq.n	80116ae <enet_init+0x9a>
 8011670:	08e3      	lsrs	r3, r4, #3
 8011672:	0861      	lsrs	r1, r4, #1
 8011674:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8011678:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801167c:	430b      	orrs	r3, r1
 801167e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011682:	2101      	movs	r1, #1
 8011684:	2002      	movs	r0, #2
 8011686:	f10d 0306 	add.w	r3, sp, #6
 801168a:	f7ff ff3b 	bl	8011504 <enet_phy_write_read>
 801168e:	b158      	cbz	r0, 80116a8 <enet_init+0x94>
 8011690:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011694:	f7ff fe2e 	bl	80112f4 <enet_delay>
 8011698:	e05d      	b.n	8011756 <enet_init+0x142>
 801169a:	4824      	ldr	r0, [pc, #144]	; (801172c <enet_init+0x118>)
 801169c:	f7ff fe2a 	bl	80112f4 <enet_delay>
 80116a0:	f7ff ff5e 	bl	8011560 <enet_phy_config>
 80116a4:	2800      	cmp	r0, #0
 80116a6:	d1c0      	bne.n	801162a <enet_init+0x16>
 80116a8:	2000      	movs	r0, #0
 80116aa:	b003      	add	sp, #12
 80116ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116ae:	4614      	mov	r4, r2
 80116b0:	4f1f      	ldr	r7, [pc, #124]	; (8011730 <enet_init+0x11c>)
 80116b2:	2201      	movs	r2, #1
 80116b4:	2000      	movs	r0, #0
 80116b6:	4611      	mov	r1, r2
 80116b8:	f10d 0306 	add.w	r3, sp, #6
 80116bc:	f7ff ff22 	bl	8011504 <enet_phy_write_read>
 80116c0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80116c4:	3401      	adds	r4, #1
 80116c6:	f002 0204 	and.w	r2, r2, #4
 80116ca:	f8ad 2006 	strh.w	r2, [sp, #6]
 80116ce:	b912      	cbnz	r2, 80116d6 <enet_init+0xc2>
 80116d0:	42bc      	cmp	r4, r7
 80116d2:	d1ee      	bne.n	80116b2 <enet_init+0x9e>
 80116d4:	e7e8      	b.n	80116a8 <enet_init+0x94>
 80116d6:	42bc      	cmp	r4, r7
 80116d8:	d0e6      	beq.n	80116a8 <enet_init+0x94>
 80116da:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80116de:	2101      	movs	r1, #1
 80116e0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80116e4:	2002      	movs	r0, #2
 80116e6:	2200      	movs	r2, #0
 80116e8:	f7ff ff0c 	bl	8011504 <enet_phy_write_read>
 80116ec:	2800      	cmp	r0, #0
 80116ee:	d0db      	beq.n	80116a8 <enet_init+0x94>
 80116f0:	2400      	movs	r4, #0
 80116f2:	4f0f      	ldr	r7, [pc, #60]	; (8011730 <enet_init+0x11c>)
 80116f4:	2201      	movs	r2, #1
 80116f6:	2000      	movs	r0, #0
 80116f8:	4611      	mov	r1, r2
 80116fa:	f10d 0306 	add.w	r3, sp, #6
 80116fe:	f7ff ff01 	bl	8011504 <enet_phy_write_read>
 8011702:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011706:	3401      	adds	r4, #1
 8011708:	f002 0220 	and.w	r2, r2, #32
 801170c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011710:	b982      	cbnz	r2, 8011734 <enet_init+0x120>
 8011712:	42bc      	cmp	r4, r7
 8011714:	d1ee      	bne.n	80116f4 <enet_init+0xe0>
 8011716:	e7c7      	b.n	80116a8 <enet_init+0x94>
 8011718:	40028000 	andmi	r8, r2, r0
 801171c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8011720:	40029000 	andmi	r9, r2, r0
 8011724:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8011728:	02c16000 	sbceq	r6, r1, #0
 801172c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8011730:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011734:	42bc      	cmp	r4, r7
 8011736:	d0b7      	beq.n	80116a8 <enet_init+0x94>
 8011738:	2101      	movs	r1, #1
 801173a:	2210      	movs	r2, #16
 801173c:	2000      	movs	r0, #0
 801173e:	f7ff fee1 	bl	8011504 <enet_phy_write_read>
 8011742:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011746:	f3c3 0480 	ubfx	r4, r3, #2, #1
 801174a:	0799      	lsls	r1, r3, #30
 801174c:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8011750:	d401      	bmi.n	8011756 <enet_init+0x142>
 8011752:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8011756:	4b63      	ldr	r3, [pc, #396]	; (80118e4 <enet_init+0x2d0>)
 8011758:	681a      	ldr	r2, [r3, #0]
 801175a:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 801175e:	4314      	orrs	r4, r2
 8011760:	056a      	lsls	r2, r5, #21
 8011762:	601c      	str	r4, [r3, #0]
 8011764:	d50b      	bpl.n	801177e <enet_init+0x16a>
 8011766:	681a      	ldr	r2, [r3, #0]
 8011768:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801176c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8011770:	601a      	str	r2, [r3, #0]
 8011772:	4a5d      	ldr	r2, [pc, #372]	; (80118e8 <enet_init+0x2d4>)
 8011774:	6993      	ldr	r3, [r2, #24]
 8011776:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801177a:	431d      	orrs	r5, r3
 801177c:	6195      	str	r5, [r2, #24]
 801177e:	4959      	ldr	r1, [pc, #356]	; (80118e4 <enet_init+0x2d0>)
 8011780:	684b      	ldr	r3, [r1, #4]
 8011782:	431e      	orrs	r6, r3
 8011784:	4b59      	ldr	r3, [pc, #356]	; (80118ec <enet_init+0x2d8>)
 8011786:	604e      	str	r6, [r1, #4]
 8011788:	681a      	ldr	r2, [r3, #0]
 801178a:	07d7      	lsls	r7, r2, #31
 801178c:	d510      	bpl.n	80117b0 <enet_init+0x19c>
 801178e:	685a      	ldr	r2, [r3, #4]
 8011790:	680c      	ldr	r4, [r1, #0]
 8011792:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8011796:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 801179a:	4320      	orrs	r0, r4
 801179c:	6008      	str	r0, [r1, #0]
 801179e:	4852      	ldr	r0, [pc, #328]	; (80118e8 <enet_init+0x2d4>)
 80117a0:	0892      	lsrs	r2, r2, #2
 80117a2:	6981      	ldr	r1, [r0, #24]
 80117a4:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80117a8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80117ac:	430a      	orrs	r2, r1
 80117ae:	6182      	str	r2, [r0, #24]
 80117b0:	681a      	ldr	r2, [r3, #0]
 80117b2:	0796      	lsls	r6, r2, #30
 80117b4:	d508      	bpl.n	80117c8 <enet_init+0x1b4>
 80117b6:	494c      	ldr	r1, [pc, #304]	; (80118e8 <enet_init+0x2d4>)
 80117b8:	6898      	ldr	r0, [r3, #8]
 80117ba:	680a      	ldr	r2, [r1, #0]
 80117bc:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80117c0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80117c4:	4302      	orrs	r2, r0
 80117c6:	600a      	str	r2, [r1, #0]
 80117c8:	681a      	ldr	r2, [r3, #0]
 80117ca:	0755      	lsls	r5, r2, #29
 80117cc:	d508      	bpl.n	80117e0 <enet_init+0x1cc>
 80117ce:	4946      	ldr	r1, [pc, #280]	; (80118e8 <enet_init+0x2d4>)
 80117d0:	68d8      	ldr	r0, [r3, #12]
 80117d2:	680a      	ldr	r2, [r1, #0]
 80117d4:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80117d8:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80117dc:	4302      	orrs	r2, r0
 80117de:	600a      	str	r2, [r1, #0]
 80117e0:	681a      	ldr	r2, [r3, #0]
 80117e2:	0714      	lsls	r4, r2, #28
 80117e4:	d508      	bpl.n	80117f8 <enet_init+0x1e4>
 80117e6:	4940      	ldr	r1, [pc, #256]	; (80118e8 <enet_init+0x2d4>)
 80117e8:	6918      	ldr	r0, [r3, #16]
 80117ea:	680a      	ldr	r2, [r1, #0]
 80117ec:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80117f0:	f022 0202 	bic.w	r2, r2, #2
 80117f4:	4302      	orrs	r2, r0
 80117f6:	600a      	str	r2, [r1, #0]
 80117f8:	681a      	ldr	r2, [r3, #0]
 80117fa:	06d0      	lsls	r0, r2, #27
 80117fc:	d506      	bpl.n	801180c <enet_init+0x1f8>
 80117fe:	493a      	ldr	r1, [pc, #232]	; (80118e8 <enet_init+0x2d4>)
 8011800:	4a3b      	ldr	r2, [pc, #236]	; (80118f0 <enet_init+0x2dc>)
 8011802:	6988      	ldr	r0, [r1, #24]
 8011804:	4002      	ands	r2, r0
 8011806:	6958      	ldr	r0, [r3, #20]
 8011808:	4302      	orrs	r2, r0
 801180a:	618a      	str	r2, [r1, #24]
 801180c:	681a      	ldr	r2, [r3, #0]
 801180e:	0691      	lsls	r1, r2, #26
 8011810:	d508      	bpl.n	8011824 <enet_init+0x210>
 8011812:	4935      	ldr	r1, [pc, #212]	; (80118e8 <enet_init+0x2d4>)
 8011814:	6998      	ldr	r0, [r3, #24]
 8011816:	698a      	ldr	r2, [r1, #24]
 8011818:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 801181c:	f022 0204 	bic.w	r2, r2, #4
 8011820:	4302      	orrs	r2, r0
 8011822:	618a      	str	r2, [r1, #24]
 8011824:	681a      	ldr	r2, [r3, #0]
 8011826:	0652      	lsls	r2, r2, #25
 8011828:	d506      	bpl.n	8011838 <enet_init+0x224>
 801182a:	492e      	ldr	r1, [pc, #184]	; (80118e4 <enet_init+0x2d0>)
 801182c:	69d8      	ldr	r0, [r3, #28]
 801182e:	69ca      	ldr	r2, [r1, #28]
 8011830:	0c52      	lsrs	r2, r2, #17
 8011832:	0452      	lsls	r2, r2, #17
 8011834:	4302      	orrs	r2, r0
 8011836:	61ca      	str	r2, [r1, #28]
 8011838:	681a      	ldr	r2, [r3, #0]
 801183a:	0617      	lsls	r7, r2, #24
 801183c:	d517      	bpl.n	801186e <enet_init+0x25a>
 801183e:	4c29      	ldr	r4, [pc, #164]	; (80118e4 <enet_init+0x2d0>)
 8011840:	6a1a      	ldr	r2, [r3, #32]
 8011842:	69a0      	ldr	r0, [r4, #24]
 8011844:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8011848:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 801184c:	0400      	lsls	r0, r0, #16
 801184e:	0c00      	lsrs	r0, r0, #16
 8011850:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8011854:	4301      	orrs	r1, r0
 8011856:	4824      	ldr	r0, [pc, #144]	; (80118e8 <enet_init+0x2d4>)
 8011858:	61a1      	str	r1, [r4, #24]
 801185a:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801185e:	0a12      	lsrs	r2, r2, #8
 8011860:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8011864:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8011868:	430a      	orrs	r2, r1
 801186a:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801186e:	681a      	ldr	r2, [r3, #0]
 8011870:	05d6      	lsls	r6, r2, #23
 8011872:	bf42      	ittt	mi
 8011874:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8011876:	4a1b      	ldrmi	r2, [pc, #108]	; (80118e4 <enet_init+0x2d0>)
 8011878:	6091      	strmi	r1, [r2, #8]
 801187a:	681a      	ldr	r2, [r3, #0]
 801187c:	0595      	lsls	r5, r2, #22
 801187e:	bf42      	ittt	mi
 8011880:	4a18      	ldrmi	r2, [pc, #96]	; (80118e4 <enet_init+0x2d0>)
 8011882:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8011884:	60d1      	strmi	r1, [r2, #12]
 8011886:	681a      	ldr	r2, [r3, #0]
 8011888:	0554      	lsls	r4, r2, #21
 801188a:	d508      	bpl.n	801189e <enet_init+0x28a>
 801188c:	4915      	ldr	r1, [pc, #84]	; (80118e4 <enet_init+0x2d0>)
 801188e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8011890:	684a      	ldr	r2, [r1, #4]
 8011892:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8011896:	f022 0206 	bic.w	r2, r2, #6
 801189a:	4302      	orrs	r2, r0
 801189c:	604a      	str	r2, [r1, #4]
 801189e:	681a      	ldr	r2, [r3, #0]
 80118a0:	0510      	lsls	r0, r2, #20
 80118a2:	d508      	bpl.n	80118b6 <enet_init+0x2a2>
 80118a4:	490f      	ldr	r1, [pc, #60]	; (80118e4 <enet_init+0x2d0>)
 80118a6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80118a8:	680a      	ldr	r2, [r1, #0]
 80118aa:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80118ae:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80118b2:	4302      	orrs	r2, r0
 80118b4:	600a      	str	r2, [r1, #0]
 80118b6:	681a      	ldr	r2, [r3, #0]
 80118b8:	04d1      	lsls	r1, r2, #19
 80118ba:	d506      	bpl.n	80118ca <enet_init+0x2b6>
 80118bc:	4909      	ldr	r1, [pc, #36]	; (80118e4 <enet_init+0x2d0>)
 80118be:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80118c0:	680a      	ldr	r2, [r1, #0]
 80118c2:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80118c6:	4302      	orrs	r2, r0
 80118c8:	600a      	str	r2, [r1, #0]
 80118ca:	681a      	ldr	r2, [r3, #0]
 80118cc:	0492      	lsls	r2, r2, #18
 80118ce:	d506      	bpl.n	80118de <enet_init+0x2ca>
 80118d0:	4904      	ldr	r1, [pc, #16]	; (80118e4 <enet_init+0x2d0>)
 80118d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80118d4:	680a      	ldr	r2, [r1, #0]
 80118d6:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80118da:	4313      	orrs	r3, r2
 80118dc:	600b      	str	r3, [r1, #0]
 80118de:	2001      	movs	r0, #1
 80118e0:	e6e3      	b.n	80116aa <enet_init+0x96>
 80118e2:	bf00      	nop
 80118e4:	40028000 	andmi	r8, r2, r0
 80118e8:	40029000 	andmi	r9, r2, r0
 80118ec:	2000a12c 	andcs	sl, r0, ip, lsr #2
 80118f0:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080118f4 <enet_txfifo_flush>:
 80118f4:	4b06      	ldr	r3, [pc, #24]	; (8011910 <enet_txfifo_flush+0x1c>)
 80118f6:	4807      	ldr	r0, [pc, #28]	; (8011914 <enet_txfifo_flush+0x20>)
 80118f8:	699a      	ldr	r2, [r3, #24]
 80118fa:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80118fe:	619a      	str	r2, [r3, #24]
 8011900:	699a      	ldr	r2, [r3, #24]
 8011902:	02d2      	lsls	r2, r2, #11
 8011904:	d502      	bpl.n	801190c <enet_txfifo_flush+0x18>
 8011906:	3801      	subs	r0, #1
 8011908:	d1fa      	bne.n	8011900 <enet_txfifo_flush+0xc>
 801190a:	4770      	bx	lr
 801190c:	2001      	movs	r0, #1
 801190e:	4770      	bx	lr
 8011910:	40029000 	andmi	r9, r2, r0
 8011914:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011918 <enet_tx_enable>:
 8011918:	4a06      	ldr	r2, [pc, #24]	; (8011934 <enet_tx_enable+0x1c>)
 801191a:	b508      	push	{r3, lr}
 801191c:	6813      	ldr	r3, [r2, #0]
 801191e:	f043 0308 	orr.w	r3, r3, #8
 8011922:	6013      	str	r3, [r2, #0]
 8011924:	f7ff ffe6 	bl	80118f4 <enet_txfifo_flush>
 8011928:	4a03      	ldr	r2, [pc, #12]	; (8011938 <enet_tx_enable+0x20>)
 801192a:	6993      	ldr	r3, [r2, #24]
 801192c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8011930:	6193      	str	r3, [r2, #24]
 8011932:	bd08      	pop	{r3, pc}
 8011934:	40028000 	andmi	r8, r2, r0
 8011938:	40029000 	andmi	r9, r2, r0

0801193c <enet_enable>:
 801193c:	b508      	push	{r3, lr}
 801193e:	f7ff ffeb 	bl	8011918 <enet_tx_enable>
 8011942:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011946:	f7ff bdcf 	b.w	80114e8 <enet_rx_enable>

0801194a <enet_desc_information_get>:
 801194a:	2905      	cmp	r1, #5
 801194c:	d817      	bhi.n	801197e <enet_desc_information_get+0x34>
 801194e:	e8df f001 	tbb	[pc, r1]
 8011952:	03091012 	movweq	r1, #36882	; 0x9012
 8011956:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 801195a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801195e:	4770      	bx	lr
 8011960:	88c0      	ldrh	r0, [r0, #6]
 8011962:	e7fa      	b.n	801195a <enet_desc_information_get+0x10>
 8011964:	8840      	ldrh	r0, [r0, #2]
 8011966:	f3c0 000d 	ubfx	r0, r0, #0, #14
 801196a:	2804      	cmp	r0, #4
 801196c:	d90a      	bls.n	8011984 <enet_desc_information_get+0x3a>
 801196e:	3804      	subs	r0, #4
 8011970:	4770      	bx	lr
 8011972:	6880      	ldr	r0, [r0, #8]
 8011974:	4770      	bx	lr
 8011976:	6800      	ldr	r0, [r0, #0]
 8011978:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 801197c:	4770      	bx	lr
 801197e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011982:	4770      	bx	lr
 8011984:	2000      	movs	r0, #0
 8011986:	4770      	bx	lr

08011988 <enet_rxframe_drop>:
 8011988:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801198c:	4814      	ldr	r0, [pc, #80]	; (80119e0 <enet_rxframe_drop+0x58>)
 801198e:	b510      	push	{r4, lr}
 8011990:	6802      	ldr	r2, [r0, #0]
 8011992:	4914      	ldr	r1, [pc, #80]	; (80119e4 <enet_rxframe_drop+0x5c>)
 8011994:	6854      	ldr	r4, [r2, #4]
 8011996:	6013      	str	r3, [r2, #0]
 8011998:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801199c:	680b      	ldr	r3, [r1, #0]
 801199e:	d009      	beq.n	80119b4 <enet_rxframe_drop+0x2c>
 80119a0:	b12b      	cbz	r3, 80119ae <enet_rxframe_drop+0x26>
 80119a2:	68da      	ldr	r2, [r3, #12]
 80119a4:	6002      	str	r2, [r0, #0]
 80119a6:	681a      	ldr	r2, [r3, #0]
 80119a8:	b1ba      	cbz	r2, 80119da <enet_rxframe_drop+0x52>
 80119aa:	600a      	str	r2, [r1, #0]
 80119ac:	bd10      	pop	{r4, pc}
 80119ae:	68d3      	ldr	r3, [r2, #12]
 80119b0:	6003      	str	r3, [r0, #0]
 80119b2:	e7fb      	b.n	80119ac <enet_rxframe_drop+0x24>
 80119b4:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80119b8:	4c0b      	ldr	r4, [pc, #44]	; (80119e8 <enet_rxframe_drop+0x60>)
 80119ba:	d006      	beq.n	80119ca <enet_rxframe_drop+0x42>
 80119bc:	68e2      	ldr	r2, [r4, #12]
 80119be:	6002      	str	r2, [r0, #0]
 80119c0:	2b00      	cmp	r3, #0
 80119c2:	d0f3      	beq.n	80119ac <enet_rxframe_drop+0x24>
 80119c4:	681b      	ldr	r3, [r3, #0]
 80119c6:	600b      	str	r3, [r1, #0]
 80119c8:	e7f0      	b.n	80119ac <enet_rxframe_drop+0x24>
 80119ca:	6824      	ldr	r4, [r4, #0]
 80119cc:	3210      	adds	r2, #16
 80119ce:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80119d2:	4422      	add	r2, r4
 80119d4:	6002      	str	r2, [r0, #0]
 80119d6:	2b00      	cmp	r3, #0
 80119d8:	d0e8      	beq.n	80119ac <enet_rxframe_drop+0x24>
 80119da:	3310      	adds	r3, #16
 80119dc:	e7f3      	b.n	80119c6 <enet_rxframe_drop+0x3e>
 80119de:	bf00      	nop
 80119e0:	2000a124 	andcs	sl, r0, r4, lsr #2
 80119e4:	2000a11c 	andcs	sl, r0, ip, lsl r1
 80119e8:	40029000 	andmi	r9, r2, r0

080119ec <enet_rxframe_size_get>:
 80119ec:	b508      	push	{r3, lr}
 80119ee:	4b0c      	ldr	r3, [pc, #48]	; (8011a20 <enet_rxframe_size_get+0x34>)
 80119f0:	681b      	ldr	r3, [r3, #0]
 80119f2:	6818      	ldr	r0, [r3, #0]
 80119f4:	2800      	cmp	r0, #0
 80119f6:	db10      	blt.n	8011a1a <enet_rxframe_size_get+0x2e>
 80119f8:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80119fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011a00:	d003      	beq.n	8011a0a <enet_rxframe_size_get+0x1e>
 8011a02:	f7ff ffc1 	bl	8011988 <enet_rxframe_drop>
 8011a06:	2001      	movs	r0, #1
 8011a08:	bd08      	pop	{r3, pc}
 8011a0a:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8011a0e:	2b21      	cmp	r3, #33	; 0x21
 8011a10:	d0f7      	beq.n	8011a02 <enet_rxframe_size_get+0x16>
 8011a12:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8011a16:	3804      	subs	r0, #4
 8011a18:	e7f6      	b.n	8011a08 <enet_rxframe_size_get+0x1c>
 8011a1a:	2000      	movs	r0, #0
 8011a1c:	e7f4      	b.n	8011a08 <enet_rxframe_size_get+0x1c>
 8011a1e:	bf00      	nop
 8011a20:	2000a124 	andcs	sl, r0, r4, lsr #2

08011a24 <enet_initpara_reset>:
 8011a24:	2200      	movs	r2, #0
 8011a26:	4b08      	ldr	r3, [pc, #32]	; (8011a48 <enet_initpara_reset+0x24>)
 8011a28:	e9c3 2200 	strd	r2, r2, [r3]
 8011a2c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8011a30:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8011a34:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8011a38:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8011a3c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8011a40:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8011a44:	639a      	str	r2, [r3, #56]	; 0x38
 8011a46:	4770      	bx	lr
 8011a48:	2000a12c 	andcs	sl, r0, ip, lsr #2

08011a4c <enet_deinit>:
 8011a4c:	b508      	push	{r3, lr}
 8011a4e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011a52:	f7fe fcea 	bl	801042a <rcu_periph_reset_enable>
 8011a56:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011a5a:	f7fe fce8 	bl	801042e <rcu_periph_reset_disable>
 8011a5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a62:	f7ff bfdf 	b.w	8011a24 <enet_initpara_reset>
	...

08011a68 <i2c_clock_config>:
 8011a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a6a:	4605      	mov	r5, r0
 8011a6c:	2002      	movs	r0, #2
 8011a6e:	460c      	mov	r4, r1
 8011a70:	4617      	mov	r7, r2
 8011a72:	f7fe fd85 	bl	8010580 <rcu_clock_freq_get>
 8011a76:	4603      	mov	r3, r0
 8011a78:	4828      	ldr	r0, [pc, #160]	; (8011b1c <i2c_clock_config+0xb4>)
 8011a7a:	4a29      	ldr	r2, [pc, #164]	; (8011b20 <i2c_clock_config+0xb8>)
 8011a7c:	fbb3 f0f0 	udiv	r0, r3, r0
 8011a80:	4293      	cmp	r3, r2
 8011a82:	bf34      	ite	cc
 8011a84:	4601      	movcc	r1, r0
 8011a86:	2136      	movcs	r1, #54	; 0x36
 8011a88:	686e      	ldr	r6, [r5, #4]
 8011a8a:	4a26      	ldr	r2, [pc, #152]	; (8011b24 <i2c_clock_config+0xbc>)
 8011a8c:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8011a90:	430e      	orrs	r6, r1
 8011a92:	4294      	cmp	r4, r2
 8011a94:	606e      	str	r6, [r5, #4]
 8011a96:	d816      	bhi.n	8011ac6 <i2c_clock_config+0x5e>
 8011a98:	3001      	adds	r0, #1
 8011a9a:	2835      	cmp	r0, #53	; 0x35
 8011a9c:	d90d      	bls.n	8011aba <i2c_clock_config+0x52>
 8011a9e:	2236      	movs	r2, #54	; 0x36
 8011aa0:	622a      	str	r2, [r5, #32]
 8011aa2:	0064      	lsls	r4, r4, #1
 8011aa4:	fbb3 f4f4 	udiv	r4, r3, r4
 8011aa8:	2c04      	cmp	r4, #4
 8011aaa:	bf38      	it	cc
 8011aac:	2404      	movcc	r4, #4
 8011aae:	69ea      	ldr	r2, [r5, #28]
 8011ab0:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8011ab4:	4314      	orrs	r4, r2
 8011ab6:	61ec      	str	r4, [r5, #28]
 8011ab8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011aba:	2802      	cmp	r0, #2
 8011abc:	d801      	bhi.n	8011ac2 <i2c_clock_config+0x5a>
 8011abe:	2202      	movs	r2, #2
 8011ac0:	e7ee      	b.n	8011aa0 <i2c_clock_config+0x38>
 8011ac2:	6228      	str	r0, [r5, #32]
 8011ac4:	e7ed      	b.n	8011aa2 <i2c_clock_config+0x3a>
 8011ac6:	4a18      	ldr	r2, [pc, #96]	; (8011b28 <i2c_clock_config+0xc0>)
 8011ac8:	4294      	cmp	r4, r2
 8011aca:	d8f5      	bhi.n	8011ab8 <i2c_clock_config+0x50>
 8011acc:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8011ad0:	4351      	muls	r1, r2
 8011ad2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011ad6:	fbb1 f1f2 	udiv	r1, r1, r2
 8011ada:	3101      	adds	r1, #1
 8011adc:	6229      	str	r1, [r5, #32]
 8011ade:	b9a7      	cbnz	r7, 8011b0a <i2c_clock_config+0xa2>
 8011ae0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011ae4:	fbb3 f4f4 	udiv	r4, r3, r4
 8011ae8:	69eb      	ldr	r3, [r5, #28]
 8011aea:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8011aee:	61eb      	str	r3, [r5, #28]
 8011af0:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8011af4:	b90b      	cbnz	r3, 8011afa <i2c_clock_config+0x92>
 8011af6:	f044 0401 	orr.w	r4, r4, #1
 8011afa:	69eb      	ldr	r3, [r5, #28]
 8011afc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8011b00:	61eb      	str	r3, [r5, #28]
 8011b02:	69eb      	ldr	r3, [r5, #28]
 8011b04:	4323      	orrs	r3, r4
 8011b06:	61eb      	str	r3, [r5, #28]
 8011b08:	e7d6      	b.n	8011ab8 <i2c_clock_config+0x50>
 8011b0a:	2219      	movs	r2, #25
 8011b0c:	4354      	muls	r4, r2
 8011b0e:	fbb3 f4f4 	udiv	r4, r3, r4
 8011b12:	69eb      	ldr	r3, [r5, #28]
 8011b14:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8011b18:	e7e9      	b.n	8011aee <i2c_clock_config+0x86>
 8011b1a:	bf00      	nop
 8011b1c:	000f4240 	andeq	r4, pc, r0, asr #4
 8011b20:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8011b24:	000186a0 	andeq	r8, r1, r0, lsr #13
 8011b28:	00061a80 	andeq	r1, r6, r0, lsl #21

08011b2c <i2c_ack_config>:
 8011b2c:	6803      	ldr	r3, [r0, #0]
 8011b2e:	2901      	cmp	r1, #1
 8011b30:	bf0c      	ite	eq
 8011b32:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8011b36:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8011b3a:	6003      	str	r3, [r0, #0]
 8011b3c:	4770      	bx	lr

08011b3e <i2c_ackpos_config>:
 8011b3e:	6803      	ldr	r3, [r0, #0]
 8011b40:	b919      	cbnz	r1, 8011b4a <i2c_ackpos_config+0xc>
 8011b42:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011b46:	6003      	str	r3, [r0, #0]
 8011b48:	4770      	bx	lr
 8011b4a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011b4e:	e7fa      	b.n	8011b46 <i2c_ackpos_config+0x8>

08011b50 <i2c_master_addressing>:
 8011b50:	3202      	adds	r2, #2
 8011b52:	bf0c      	ite	eq
 8011b54:	f021 0101 	biceq.w	r1, r1, #1
 8011b58:	f041 0101 	orrne.w	r1, r1, #1
 8011b5c:	6101      	str	r1, [r0, #16]
 8011b5e:	4770      	bx	lr

08011b60 <i2c_enable>:
 8011b60:	6803      	ldr	r3, [r0, #0]
 8011b62:	f043 0301 	orr.w	r3, r3, #1
 8011b66:	6003      	str	r3, [r0, #0]
 8011b68:	4770      	bx	lr

08011b6a <i2c_start_on_bus>:
 8011b6a:	6803      	ldr	r3, [r0, #0]
 8011b6c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011b70:	6003      	str	r3, [r0, #0]
 8011b72:	4770      	bx	lr

08011b74 <i2c_stop_on_bus>:
 8011b74:	6803      	ldr	r3, [r0, #0]
 8011b76:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8011b7a:	6003      	str	r3, [r0, #0]
 8011b7c:	4770      	bx	lr

08011b7e <i2c_data_transmit>:
 8011b7e:	6101      	str	r1, [r0, #16]
 8011b80:	4770      	bx	lr

08011b82 <i2c_data_receive>:
 8011b82:	6900      	ldr	r0, [r0, #16]
 8011b84:	b2c0      	uxtb	r0, r0
 8011b86:	4770      	bx	lr

08011b88 <i2c_flag_get>:
 8011b88:	098b      	lsrs	r3, r1, #6
 8011b8a:	581a      	ldr	r2, [r3, r0]
 8011b8c:	2301      	movs	r3, #1
 8011b8e:	f001 011f 	and.w	r1, r1, #31
 8011b92:	408b      	lsls	r3, r1
 8011b94:	4213      	tst	r3, r2
 8011b96:	bf14      	ite	ne
 8011b98:	2001      	movne	r0, #1
 8011b9a:	2000      	moveq	r0, #0
 8011b9c:	4770      	bx	lr

08011b9e <i2c_flag_clear>:
 8011b9e:	f240 5301 	movw	r3, #1281	; 0x501
 8011ba2:	4299      	cmp	r1, r3
 8011ba4:	b510      	push	{r4, lr}
 8011ba6:	d102      	bne.n	8011bae <i2c_flag_clear+0x10>
 8011ba8:	6943      	ldr	r3, [r0, #20]
 8011baa:	6983      	ldr	r3, [r0, #24]
 8011bac:	bd10      	pop	{r4, pc}
 8011bae:	2201      	movs	r2, #1
 8011bb0:	098c      	lsrs	r4, r1, #6
 8011bb2:	5823      	ldr	r3, [r4, r0]
 8011bb4:	f001 011f 	and.w	r1, r1, #31
 8011bb8:	408a      	lsls	r2, r1
 8011bba:	ea23 0302 	bic.w	r3, r3, r2
 8011bbe:	5023      	str	r3, [r4, r0]
 8011bc0:	e7f4      	b.n	8011bac <i2c_flag_clear+0xe>
	...

08011bc4 <mac_address_get(unsigned char*)>:
 8011bc4:	2102      	movs	r1, #2
 8011bc6:	4a07      	ldr	r2, [pc, #28]	; (8011be4 <mac_address_get(unsigned char*)+0x20>)
 8011bc8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8011bcc:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8011bd0:	7001      	strb	r1, [r0, #0]
 8011bd2:	7042      	strb	r2, [r0, #1]
 8011bd4:	0e1a      	lsrs	r2, r3, #24
 8011bd6:	7082      	strb	r2, [r0, #2]
 8011bd8:	0c1a      	lsrs	r2, r3, #16
 8011bda:	70c2      	strb	r2, [r0, #3]
 8011bdc:	0a1a      	lsrs	r2, r3, #8
 8011bde:	7102      	strb	r2, [r0, #4]
 8011be0:	7143      	strb	r3, [r0, #5]
 8011be2:	4770      	bx	lr
 8011be4:	1ffff000 	svcne	0x00fff000

08011be8 <__popcountsi2>:
 8011be8:	0843      	lsrs	r3, r0, #1
 8011bea:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8011bee:	1ac0      	subs	r0, r0, r3
 8011bf0:	0883      	lsrs	r3, r0, #2
 8011bf2:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8011bf6:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8011bfa:	4418      	add	r0, r3
 8011bfc:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8011c00:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8011c04:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8011c08:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8011c0c:	0e00      	lsrs	r0, r0, #24
 8011c0e:	4770      	bx	lr

08011c10 <__udivmoddi4>:
 8011c10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c14:	9e08      	ldr	r6, [sp, #32]
 8011c16:	460d      	mov	r5, r1
 8011c18:	4604      	mov	r4, r0
 8011c1a:	468e      	mov	lr, r1
 8011c1c:	2b00      	cmp	r3, #0
 8011c1e:	d14c      	bne.n	8011cba <__udivmoddi4+0xaa>
 8011c20:	428a      	cmp	r2, r1
 8011c22:	4694      	mov	ip, r2
 8011c24:	d967      	bls.n	8011cf6 <__udivmoddi4+0xe6>
 8011c26:	fab2 f382 	clz	r3, r2
 8011c2a:	b153      	cbz	r3, 8011c42 <__udivmoddi4+0x32>
 8011c2c:	fa02 fc03 	lsl.w	ip, r2, r3
 8011c30:	f1c3 0220 	rsb	r2, r3, #32
 8011c34:	fa01 fe03 	lsl.w	lr, r1, r3
 8011c38:	fa20 f202 	lsr.w	r2, r0, r2
 8011c3c:	ea42 0e0e 	orr.w	lr, r2, lr
 8011c40:	409c      	lsls	r4, r3
 8011c42:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011c46:	fbbe f1f7 	udiv	r1, lr, r7
 8011c4a:	fa1f f58c 	uxth.w	r5, ip
 8011c4e:	fb07 ee11 	mls	lr, r7, r1, lr
 8011c52:	fb01 f005 	mul.w	r0, r1, r5
 8011c56:	0c22      	lsrs	r2, r4, #16
 8011c58:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8011c5c:	4290      	cmp	r0, r2
 8011c5e:	d90a      	bls.n	8011c76 <__udivmoddi4+0x66>
 8011c60:	eb1c 0202 	adds.w	r2, ip, r2
 8011c64:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8011c68:	f080 8119 	bcs.w	8011e9e <__udivmoddi4+0x28e>
 8011c6c:	4290      	cmp	r0, r2
 8011c6e:	f240 8116 	bls.w	8011e9e <__udivmoddi4+0x28e>
 8011c72:	3902      	subs	r1, #2
 8011c74:	4462      	add	r2, ip
 8011c76:	1a12      	subs	r2, r2, r0
 8011c78:	fbb2 f0f7 	udiv	r0, r2, r7
 8011c7c:	fb07 2210 	mls	r2, r7, r0, r2
 8011c80:	fb00 f505 	mul.w	r5, r0, r5
 8011c84:	b2a4      	uxth	r4, r4
 8011c86:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011c8a:	42a5      	cmp	r5, r4
 8011c8c:	d90a      	bls.n	8011ca4 <__udivmoddi4+0x94>
 8011c8e:	eb1c 0404 	adds.w	r4, ip, r4
 8011c92:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011c96:	f080 8104 	bcs.w	8011ea2 <__udivmoddi4+0x292>
 8011c9a:	42a5      	cmp	r5, r4
 8011c9c:	f240 8101 	bls.w	8011ea2 <__udivmoddi4+0x292>
 8011ca0:	4464      	add	r4, ip
 8011ca2:	3802      	subs	r0, #2
 8011ca4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8011ca8:	2100      	movs	r1, #0
 8011caa:	1b64      	subs	r4, r4, r5
 8011cac:	b11e      	cbz	r6, 8011cb6 <__udivmoddi4+0xa6>
 8011cae:	40dc      	lsrs	r4, r3
 8011cb0:	2300      	movs	r3, #0
 8011cb2:	e9c6 4300 	strd	r4, r3, [r6]
 8011cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011cba:	428b      	cmp	r3, r1
 8011cbc:	d908      	bls.n	8011cd0 <__udivmoddi4+0xc0>
 8011cbe:	2e00      	cmp	r6, #0
 8011cc0:	f000 80ea 	beq.w	8011e98 <__udivmoddi4+0x288>
 8011cc4:	2100      	movs	r1, #0
 8011cc6:	e9c6 0500 	strd	r0, r5, [r6]
 8011cca:	4608      	mov	r0, r1
 8011ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011cd0:	fab3 f183 	clz	r1, r3
 8011cd4:	2900      	cmp	r1, #0
 8011cd6:	d148      	bne.n	8011d6a <__udivmoddi4+0x15a>
 8011cd8:	42ab      	cmp	r3, r5
 8011cda:	d302      	bcc.n	8011ce2 <__udivmoddi4+0xd2>
 8011cdc:	4282      	cmp	r2, r0
 8011cde:	f200 80f8 	bhi.w	8011ed2 <__udivmoddi4+0x2c2>
 8011ce2:	1a84      	subs	r4, r0, r2
 8011ce4:	eb65 0203 	sbc.w	r2, r5, r3
 8011ce8:	2001      	movs	r0, #1
 8011cea:	4696      	mov	lr, r2
 8011cec:	2e00      	cmp	r6, #0
 8011cee:	d0e2      	beq.n	8011cb6 <__udivmoddi4+0xa6>
 8011cf0:	e9c6 4e00 	strd	r4, lr, [r6]
 8011cf4:	e7df      	b.n	8011cb6 <__udivmoddi4+0xa6>
 8011cf6:	b902      	cbnz	r2, 8011cfa <__udivmoddi4+0xea>
 8011cf8:	deff      	udf	#255	; 0xff
 8011cfa:	fab2 f382 	clz	r3, r2
 8011cfe:	2b00      	cmp	r3, #0
 8011d00:	f040 808e 	bne.w	8011e20 <__udivmoddi4+0x210>
 8011d04:	1a88      	subs	r0, r1, r2
 8011d06:	2101      	movs	r1, #1
 8011d08:	0c17      	lsrs	r7, r2, #16
 8011d0a:	fa1f fe82 	uxth.w	lr, r2
 8011d0e:	fbb0 f5f7 	udiv	r5, r0, r7
 8011d12:	fb07 0015 	mls	r0, r7, r5, r0
 8011d16:	0c22      	lsrs	r2, r4, #16
 8011d18:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8011d1c:	fb0e f005 	mul.w	r0, lr, r5
 8011d20:	4290      	cmp	r0, r2
 8011d22:	d908      	bls.n	8011d36 <__udivmoddi4+0x126>
 8011d24:	eb1c 0202 	adds.w	r2, ip, r2
 8011d28:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011d2c:	d202      	bcs.n	8011d34 <__udivmoddi4+0x124>
 8011d2e:	4290      	cmp	r0, r2
 8011d30:	f200 80cc 	bhi.w	8011ecc <__udivmoddi4+0x2bc>
 8011d34:	4645      	mov	r5, r8
 8011d36:	1a12      	subs	r2, r2, r0
 8011d38:	fbb2 f0f7 	udiv	r0, r2, r7
 8011d3c:	fb07 2210 	mls	r2, r7, r0, r2
 8011d40:	fb0e fe00 	mul.w	lr, lr, r0
 8011d44:	b2a4      	uxth	r4, r4
 8011d46:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011d4a:	45a6      	cmp	lr, r4
 8011d4c:	d908      	bls.n	8011d60 <__udivmoddi4+0x150>
 8011d4e:	eb1c 0404 	adds.w	r4, ip, r4
 8011d52:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011d56:	d202      	bcs.n	8011d5e <__udivmoddi4+0x14e>
 8011d58:	45a6      	cmp	lr, r4
 8011d5a:	f200 80b4 	bhi.w	8011ec6 <__udivmoddi4+0x2b6>
 8011d5e:	4610      	mov	r0, r2
 8011d60:	eba4 040e 	sub.w	r4, r4, lr
 8011d64:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8011d68:	e7a0      	b.n	8011cac <__udivmoddi4+0x9c>
 8011d6a:	f1c1 0720 	rsb	r7, r1, #32
 8011d6e:	408b      	lsls	r3, r1
 8011d70:	fa22 fc07 	lsr.w	ip, r2, r7
 8011d74:	ea4c 0c03 	orr.w	ip, ip, r3
 8011d78:	fa25 fa07 	lsr.w	sl, r5, r7
 8011d7c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8011d80:	fbba f8f9 	udiv	r8, sl, r9
 8011d84:	408d      	lsls	r5, r1
 8011d86:	fa20 f307 	lsr.w	r3, r0, r7
 8011d8a:	fb09 aa18 	mls	sl, r9, r8, sl
 8011d8e:	fa1f fe8c 	uxth.w	lr, ip
 8011d92:	432b      	orrs	r3, r5
 8011d94:	fa00 f501 	lsl.w	r5, r0, r1
 8011d98:	fb08 f00e 	mul.w	r0, r8, lr
 8011d9c:	0c1c      	lsrs	r4, r3, #16
 8011d9e:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8011da2:	42a0      	cmp	r0, r4
 8011da4:	fa02 f201 	lsl.w	r2, r2, r1
 8011da8:	d90b      	bls.n	8011dc2 <__udivmoddi4+0x1b2>
 8011daa:	eb1c 0404 	adds.w	r4, ip, r4
 8011dae:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8011db2:	f080 8086 	bcs.w	8011ec2 <__udivmoddi4+0x2b2>
 8011db6:	42a0      	cmp	r0, r4
 8011db8:	f240 8083 	bls.w	8011ec2 <__udivmoddi4+0x2b2>
 8011dbc:	f1a8 0802 	sub.w	r8, r8, #2
 8011dc0:	4464      	add	r4, ip
 8011dc2:	1a24      	subs	r4, r4, r0
 8011dc4:	b298      	uxth	r0, r3
 8011dc6:	fbb4 f3f9 	udiv	r3, r4, r9
 8011dca:	fb09 4413 	mls	r4, r9, r3, r4
 8011dce:	fb03 fe0e 	mul.w	lr, r3, lr
 8011dd2:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8011dd6:	45a6      	cmp	lr, r4
 8011dd8:	d908      	bls.n	8011dec <__udivmoddi4+0x1dc>
 8011dda:	eb1c 0404 	adds.w	r4, ip, r4
 8011dde:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8011de2:	d26a      	bcs.n	8011eba <__udivmoddi4+0x2aa>
 8011de4:	45a6      	cmp	lr, r4
 8011de6:	d968      	bls.n	8011eba <__udivmoddi4+0x2aa>
 8011de8:	3b02      	subs	r3, #2
 8011dea:	4464      	add	r4, ip
 8011dec:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8011df0:	fba0 9302 	umull	r9, r3, r0, r2
 8011df4:	eba4 040e 	sub.w	r4, r4, lr
 8011df8:	429c      	cmp	r4, r3
 8011dfa:	46c8      	mov	r8, r9
 8011dfc:	469e      	mov	lr, r3
 8011dfe:	d354      	bcc.n	8011eaa <__udivmoddi4+0x29a>
 8011e00:	d051      	beq.n	8011ea6 <__udivmoddi4+0x296>
 8011e02:	2e00      	cmp	r6, #0
 8011e04:	d067      	beq.n	8011ed6 <__udivmoddi4+0x2c6>
 8011e06:	ebb5 0308 	subs.w	r3, r5, r8
 8011e0a:	eb64 040e 	sbc.w	r4, r4, lr
 8011e0e:	40cb      	lsrs	r3, r1
 8011e10:	fa04 f707 	lsl.w	r7, r4, r7
 8011e14:	431f      	orrs	r7, r3
 8011e16:	40cc      	lsrs	r4, r1
 8011e18:	e9c6 7400 	strd	r7, r4, [r6]
 8011e1c:	2100      	movs	r1, #0
 8011e1e:	e74a      	b.n	8011cb6 <__udivmoddi4+0xa6>
 8011e20:	fa02 fc03 	lsl.w	ip, r2, r3
 8011e24:	f1c3 0020 	rsb	r0, r3, #32
 8011e28:	40c1      	lsrs	r1, r0
 8011e2a:	409d      	lsls	r5, r3
 8011e2c:	fa24 f000 	lsr.w	r0, r4, r0
 8011e30:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011e34:	4328      	orrs	r0, r5
 8011e36:	fbb1 f5f7 	udiv	r5, r1, r7
 8011e3a:	fb07 1115 	mls	r1, r7, r5, r1
 8011e3e:	fa1f fe8c 	uxth.w	lr, ip
 8011e42:	0c02      	lsrs	r2, r0, #16
 8011e44:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8011e48:	fb05 f10e 	mul.w	r1, r5, lr
 8011e4c:	4291      	cmp	r1, r2
 8011e4e:	fa04 f403 	lsl.w	r4, r4, r3
 8011e52:	d908      	bls.n	8011e66 <__udivmoddi4+0x256>
 8011e54:	eb1c 0202 	adds.w	r2, ip, r2
 8011e58:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011e5c:	d22f      	bcs.n	8011ebe <__udivmoddi4+0x2ae>
 8011e5e:	4291      	cmp	r1, r2
 8011e60:	d92d      	bls.n	8011ebe <__udivmoddi4+0x2ae>
 8011e62:	3d02      	subs	r5, #2
 8011e64:	4462      	add	r2, ip
 8011e66:	1a52      	subs	r2, r2, r1
 8011e68:	fbb2 f1f7 	udiv	r1, r2, r7
 8011e6c:	fb07 2211 	mls	r2, r7, r1, r2
 8011e70:	b280      	uxth	r0, r0
 8011e72:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8011e76:	fb01 f20e 	mul.w	r2, r1, lr
 8011e7a:	4282      	cmp	r2, r0
 8011e7c:	d908      	bls.n	8011e90 <__udivmoddi4+0x280>
 8011e7e:	eb1c 0000 	adds.w	r0, ip, r0
 8011e82:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8011e86:	d216      	bcs.n	8011eb6 <__udivmoddi4+0x2a6>
 8011e88:	4282      	cmp	r2, r0
 8011e8a:	d914      	bls.n	8011eb6 <__udivmoddi4+0x2a6>
 8011e8c:	3902      	subs	r1, #2
 8011e8e:	4460      	add	r0, ip
 8011e90:	1a80      	subs	r0, r0, r2
 8011e92:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8011e96:	e73a      	b.n	8011d0e <__udivmoddi4+0xfe>
 8011e98:	4631      	mov	r1, r6
 8011e9a:	4630      	mov	r0, r6
 8011e9c:	e70b      	b.n	8011cb6 <__udivmoddi4+0xa6>
 8011e9e:	4671      	mov	r1, lr
 8011ea0:	e6e9      	b.n	8011c76 <__udivmoddi4+0x66>
 8011ea2:	4610      	mov	r0, r2
 8011ea4:	e6fe      	b.n	8011ca4 <__udivmoddi4+0x94>
 8011ea6:	454d      	cmp	r5, r9
 8011ea8:	d2ab      	bcs.n	8011e02 <__udivmoddi4+0x1f2>
 8011eaa:	ebb9 0802 	subs.w	r8, r9, r2
 8011eae:	eb63 0e0c 	sbc.w	lr, r3, ip
 8011eb2:	3801      	subs	r0, #1
 8011eb4:	e7a5      	b.n	8011e02 <__udivmoddi4+0x1f2>
 8011eb6:	4641      	mov	r1, r8
 8011eb8:	e7ea      	b.n	8011e90 <__udivmoddi4+0x280>
 8011eba:	4603      	mov	r3, r0
 8011ebc:	e796      	b.n	8011dec <__udivmoddi4+0x1dc>
 8011ebe:	4645      	mov	r5, r8
 8011ec0:	e7d1      	b.n	8011e66 <__udivmoddi4+0x256>
 8011ec2:	46d0      	mov	r8, sl
 8011ec4:	e77d      	b.n	8011dc2 <__udivmoddi4+0x1b2>
 8011ec6:	4464      	add	r4, ip
 8011ec8:	3802      	subs	r0, #2
 8011eca:	e749      	b.n	8011d60 <__udivmoddi4+0x150>
 8011ecc:	3d02      	subs	r5, #2
 8011ece:	4462      	add	r2, ip
 8011ed0:	e731      	b.n	8011d36 <__udivmoddi4+0x126>
 8011ed2:	4608      	mov	r0, r1
 8011ed4:	e70a      	b.n	8011cec <__udivmoddi4+0xdc>
 8011ed6:	4631      	mov	r1, r6
 8011ed8:	e6ed      	b.n	8011cb6 <__udivmoddi4+0xa6>
 8011eda:	bf00      	nop

Disassembly of section .rodata:

08011edc <vtable for DisplayHandler-0xac>:
	...
 8011ee4:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011ee8:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8011eec:	00000000 	andeq	r0, r0, r0
 8011ef0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011ef4:	323a3131 	eorscc	r3, sl, #1073741836	; 0x4000000c
 8011ef8:	38303a37 	ldmdacc	r0!, {r0, r1, r2, r4, r5, r9, fp, ip, sp}
 8011efc:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8011f00:	20313120 	eorscs	r3, r1, r0, lsr #2
 8011f04:	32323032 	eorscc	r3, r2, #50	; 0x32
 8011f08:	335b1b00 	cmpcc	fp, #0, 22
 8011f0c:	41736d32 	cmnmi	r3, r2, lsr sp
 8011f10:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011f14:	31332e31 	teqcc	r3, r1, lsr lr
 8011f18:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8011f1c:	20317b20 	eorscs	r7, r1, r0, lsr #22
 8011f20:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8011f24:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8011f28:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8011f2c:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8011f30:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8011f34:	00676966 	rsbeq	r6, r7, r6, ror #18
 8011f38:	74685f2e 	strbtvc	r5, [r8], #-3886	; 0xfffff0d2
 8011f3c:	6e007074 	mcrvs	0, 0, r7, cr0, cr4, {3}
 8011f40:	3d65646f 	cfstrdcc	mvd6, [r5, #-444]!	; 0xfffffe44
 8011f44:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011f48:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011f4c:	44203133 	strtmi	r3, [r0], #-307	; 0xfffffecd
 8011f50:	7300584d 	movwvc	r5, #2125	; 0x84d
 8011f54:	204e4341 	subcs	r4, lr, r1, asr #6
 8011f58:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8011f5c:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8011f60:	73252058 			; <UNDEFINED> instruction: 0x73252058
 8011f64:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 8011f68:	72620021 	rsbvc	r0, r2, #33	; 0x21
 8011f6c:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8011f70:	62616d00 	rsbvs	r6, r1, #0, 26
 8011f74:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 8011f78:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8011f7c:	73002368 	movwvc	r2, #872	; 0x368
 8011f80:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8011f84:	00000023 	andeq	r0, r0, r3, lsr #32

08011f88 <vtable for DisplayHandler>:
	...
 8011f90:	08007b87 	stmdaeq	r0, {r0, r1, r2, r7, r8, r9, fp, ip, sp, lr}
 8011f94:	08007bad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, fp, ip, sp, lr}
 8011f98:	08007bcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, lr}

08011f9c <CSWTCH.83>:
 8011f9c:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011fa0:	 			; <UNDEFINED> instruction: 0x332e3146

08011fa1 <SOFTWARE_VERSION>:
 8011fa1:	00332e31 	eorseq	r2, r3, r1, lsr lr
 8011fa5:	 	andeq	r0, r0, r0

08011fa8 <vtable for DmxInput>:
	...
 8011fb0:	080081e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, pc}
 8011fb4:	08008281 	stmdaeq	r0, {r0, r7, r9, pc}
 8011fb8:	080081e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, pc}
 8011fbc:	08008219 	stmdaeq	r0, {r0, r3, r4, r9, pc}
 8011fc0:	0800824d 	stmdaeq	r0, {r0, r2, r3, r6, r9, pc}
 8011fc4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011fc8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011fcc:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8011fd0:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011fd4:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8011fd8:	0a73252c 	beq	9cdb490 <__exidx_end+0x1cc7770>
 8011fdc:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8011fe0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011fe4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011fe8:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8011fec:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011ff0:	4f000a64 	svcmi	0x00000a64
 8011ff4:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8011ff8:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8011ffc:	616c7073 	smcvs	50947	; 0xc703
 8012000:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8012004:	6674000a 	ldrbtvs	r0, [r4], -sl
 8012008:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 801200c:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8012010:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012014:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8012018:	70750073 	rsbsvc	r0, r5, r3, ror r0
 801201c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8012020:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8012024:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8012028:	20505446 	subscs	r5, r0, r6, asr #8
 801202c:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8012030:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8012034:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8012038:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 801203c:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8012040:	525b2066 	subspl	r2, fp, #102	; 0x66
 8012044:	6f6f6265 	svcvs	0x006f6265
 8012048:	00205d74 	eoreq	r5, r0, r4, ror sp
 801204c:	4f525245 	svcmi	0x00525245
 8012050:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8012054:	000a7465 	andeq	r7, sl, r5, ror #8
 8012058:	70746674 	rsbsvc	r6, r4, r4, ror r6
 801205c:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8012060:	616c7073 	smcvs	50947	; 0xc703
 8012064:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8012068:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801206c:	000a2123 	andeq	r2, sl, r3, lsr #2
 8012070:	4f525245 	svcmi	0x00525245
 8012074:	0a3f2352 	beq	8fdadc4 <__exidx_end+0xfc70a4>
 8012078:	62657200 	rsbvs	r7, r5, #0, 4
 801207c:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8012080:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8012084:	00237473 	eoreq	r7, r3, r3, ror r4
 8012088:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801208c:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8012090:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8012094:	76002365 	strvc	r2, [r0], -r5, ror #6
 8012098:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801209c:	00236e6f 	eoreq	r6, r3, pc, ror #28
 80120a0:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 80120a4:	63616600 	cmnvs	r1, #0, 12
 80120a8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80120ac:	 	tstmi	r0, r3, lsr #6

080120af <s_Node>:
 80120af:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80120b3:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80120bf:	41730000 	cmnmi	r3, r0
 80120c3:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80120c7:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80120d3:	2043534f 	subcs	r5, r3, pc, asr #6
 80120d7:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80120db:	00007265 	andeq	r7, r0, r5, ror #4
 80120df:	00000000 	andeq	r0, r0, r0
 80120e3:	544c0000 	strbpl	r0, [ip], #-0
 80120e7:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80120f7:	2043534f 	subcs	r5, r3, pc, asr #6
 80120fb:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80120ff:	0000746e 	andeq	r7, r0, lr, ror #8
 8012103:	00000000 	andeq	r0, r0, r0
 8012107:	44520000 	ldrbmi	r0, [r2], #-0
 801210b:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 801210f:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8012113:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8012117:	0000796c 	andeq	r7, r0, ip, ror #18
 801211b:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 801211f:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 801212b:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 801212f:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801213f:	00504444 	subseq	r4, r0, r4, asr #8
	...
 801214f:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8012153:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8012157:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 801215b:	00000072 	andeq	r0, r0, r2, ror r0
 801215f:	00000000 	andeq	r0, r0, r0
 8012163:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08012175 <s_Output>:
 8012175:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8012181:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801218d:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8012191:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8012195:	00000000 	andeq	r0, r0, r0
 8012199:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801219d:	0000006c 	andeq	r0, r0, ip, rrx
 80121a1:	00000000 	andeq	r0, r0, r0
 80121a5:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80121a9:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80121ad:	00000000 	andeq	r0, r0, r0
 80121b1:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80121bd:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80121c1:	00006769 	andeq	r6, r0, r9, ror #14
 80121c5:	00000000 	andeq	r0, r0, r0
 80121c9:	70657453 	rsbvc	r7, r5, r3, asr r4
 80121cd:	00726570 	rsbseq	r6, r2, r0, ror r5
 80121d1:	00000000 	andeq	r0, r0, r0
 80121d5:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80121d9:	00007265 	andeq	r7, r0, r5, ror #4
 80121dd:	00000000 	andeq	r0, r0, r0
 80121e1:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80121e5:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80121e9:	00000000 	andeq	r0, r0, r0
 80121ed:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80121f1:	00006c61 	andeq	r6, r0, r1, ror #24
 80121f5:	00000000 	andeq	r0, r0, r0
 80121f9:	20424752 	subcs	r4, r2, r2, asr r7
 80121fd:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8012201:	0000006c 	andeq	r0, r0, ip, rrx
 8012205:	 	mrslt	r0, (UNDEF: 0)

08012208 <RemoteConfig::s_GET>:
 8012208:	08008db1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, fp, pc}
 801220c:	00000000 	andeq	r0, r0, r0
 8012210:	08012079 	stmdaeq	r1, {r0, r3, r4, r5, r6, sp}
 8012214:	00000008 	andeq	r0, r0, r8
 8012218:	080082a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, pc}
 801221c:	00000000 	andeq	r0, r0, r0
 8012220:	08012082 	stmdaeq	r1, {r1, r7, sp}
 8012224:	00000005 	andeq	r0, r0, r5
 8012228:	080082a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, pc}
 801222c:	00000000 	andeq	r0, r0, r0
 8012230:	08012088 	stmdaeq	r1, {r3, r7, sp}
 8012234:	00000006 	andeq	r0, r0, r6
 8012238:	08008459 	stmdaeq	r0, {r0, r3, r4, r6, sl, pc}
 801223c:	00000000 	andeq	r0, r0, r0
 8012240:	0801208f 	stmdaeq	r1, {r0, r1, r2, r3, r7, sp}
 8012244:	00000007 	andeq	r0, r0, r7
 8012248:	08008419 	stmdaeq	r0, {r0, r3, r4, sl, pc}
 801224c:	00000000 	andeq	r0, r0, r0
 8012250:	08012097 	stmdaeq	r1, {r0, r1, r2, r4, r7, sp}
 8012254:	00000008 	andeq	r0, r0, r8
 8012258:	08008375 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, pc}
 801225c:	00000000 	andeq	r0, r0, r0
 8012260:	0801205e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sp}
 8012264:	00000008 	andeq	r0, r0, r8
 8012268:	0800872d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, pc}
 801226c:	00000000 	andeq	r0, r0, r0
 8012270:	080120a0 	stmdaeq	r1, {r5, r7, sp}
 8012274:	00010004 	andeq	r0, r1, r4
 8012278:	080083c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, pc}
 801227c:	00000000 	andeq	r0, r0, r0
 8012280:	08012058 	stmdaeq	r1, {r3, r4, r6, sp}
 8012284:	00000005 	andeq	r0, r0, r5
 8012288:	08008aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, pc}
 801228c:	00000000 	andeq	r0, r0, r0
 8012290:	080120a5 	stmdaeq	r1, {r0, r2, r5, r7, sp}
 8012294:	00000009 	andeq	r0, r0, r9

08012298 <RemoteConfig::s_SET>:
 8012298:	08008505 	stmdaeq	r0, {r0, r2, r8, sl, pc}
 801229c:	00000000 	andeq	r0, r0, r0
 80122a0:	08012058 	stmdaeq	r1, {r3, r4, r6, sp}
 80122a4:	00010005 	andeq	r0, r1, r5
 80122a8:	080084dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, pc}
 80122ac:	00000000 	andeq	r0, r0, r0
 80122b0:	0801205e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sp}
 80122b4:	00010008 	andeq	r0, r1, r8
 80122b8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80122bc:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80122c0:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80122c4:	0a64253d 	beq	991b7c0 <__exidx_end+0x1907aa0>
 80122c8:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80122cc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80122d0:	002c2273 	eoreq	r2, ip, r3, ror r2
 80122d4:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80122d8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80122dc:	6f626552 	svcvs	0x00626552
 80122e0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80122e4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80122e8:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80122ec:	6f6f6265 	svcvs	0x006f6265
 80122f0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80122f4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80122f8:	6f637200 	svcvs	0x00637200
 80122fc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012300:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012304:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8012308:	6b726f77 	blvs	9cae0ec <__exidx_end+0x1c9a3cc>
 801230c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012310:	73696400 	cmnvc	r9, #0, 8
 8012314:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012318:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801231c:	33316500 	teqcc	r1, #0, 10
 8012320:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8012324:	61700074 	cmnvs	r0, r4, ror r0
 8012328:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 801232c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012330:	00000000 	andeq	r0, r0, r0

08012334 <RemoteConfig::s_TXT>:
 8012334:	08008735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, pc}
 8012338:	00000000 	andeq	r0, r0, r0
 801233c:	080089d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, fp, pc}
 8012340:	00000000 	andeq	r0, r0, r0
 8012344:	080122f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sp}
 8012348:	0000000b 	andeq	r0, r0, fp
 801234c:	0000000c 	andeq	r0, r0, ip
 8012350:	08008761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, pc}
 8012354:	00000000 	andeq	r0, r0, r0
 8012358:	08008a01 	stmdaeq	r0, {r0, r9, fp, pc}
 801235c:	00000000 	andeq	r0, r0, r0
 8012360:	08012305 	stmdaeq	r1, {r0, r2, r8, r9, sp}
 8012364:	0000000b 	andeq	r0, r0, fp
 8012368:	00000000 	andeq	r0, r0, r0
 801236c:	080087e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, pc}
 8012370:	00000000 	andeq	r0, r0, r0
 8012374:	08008a79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, pc}
 8012378:	00000000 	andeq	r0, r0, r0
 801237c:	08012311 	stmdaeq	r1, {r0, r4, r8, r9, sp}
 8012380:	0000000b 	andeq	r0, r0, fp
 8012384:	0000000f 	andeq	r0, r0, pc
 8012388:	0800878d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, pc}
 801238c:	00000000 	andeq	r0, r0, r0
 8012390:	08008a29 	stmdaeq	r0, {r0, r3, r5, r9, fp, pc}
 8012394:	00000000 	andeq	r0, r0, r0
 8012398:	0801231d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sp}
 801239c:	00000008 	andeq	r0, r0, r8
 80123a0:	00000004 	andeq	r0, r0, r4
 80123a4:	080087b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, pc}
 80123a8:	00000000 	andeq	r0, r0, r0
 80123ac:	08008a51 	stmdaeq	r0, {r0, r4, r6, r9, fp, pc}
 80123b0:	00000000 	andeq	r0, r0, r0
 80123b4:	08012326 	stmdaeq	r1, {r1, r2, r5, r8, r9, sp}
 80123b8:	0000000a 	andeq	r0, r0, sl
 80123bc:	00000002 	andeq	r0, r0, r2
 80123c0:	00544547 	subseq	r4, r4, r7, asr #10
 80123c4:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 80123c8:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 80123cc:	0a200050 	beq	8812514 <__exidx_end+0x7fe7f4>
 80123d0:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 80123d4:	43003a00 	movwmi	r3, #2560	; 0xa00
 80123d8:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80123dc:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 80123e0:	00657079 	rsbeq	r7, r5, r9, ror r0
 80123e4:	61003b20 	tstvs	r0, r0, lsr #22
 80123e8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80123ec:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80123f0:	6a2f6e6f 	bvs	8beddb4 <__exidx_end+0xbda094>
 80123f4:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80123f8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80123fc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8012400:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8012404:	2f006874 	svccs	0x00006874
 8012408:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 801240c:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8012410:	2f006c6d 	svccs	0x00006c6d
 8012414:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8012418:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 801241c:	2f007373 	svccs	0x00007373
 8012420:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8012424:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8012428:	736a2f00 	cmnvc	sl, #0, 30
 801242c:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8012430:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012434:	72657600 	rsbvc	r7, r5, #0, 12
 8012438:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801243c:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8012440:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8012444:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012448:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801244c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012450:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012454:	6a2f0079 	bvs	8bd2640 <__exidx_end+0xbbe920>
 8012458:	2f6e6f73 	svccs	0x006e6f73
 801245c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8012460:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8012464:	6f6f6265 	svcvs	0x006f6265
 8012468:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 801246c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8012470:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8012474:	434f4421 	movtmi	r4, #62497	; 0xf421
 8012478:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801247c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8012480:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8012484:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012488:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 801248c:	3e646165 	powccsz	f6, f4, f5
 8012490:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8012494:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8012498:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 801249c:	742f3c74 	strtvc	r3, [pc], #-3188	; 80124a4 <RemoteConfig::s_TXT+0x170>
 80124a0:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80124a4:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80124a8:	3e646165 	powccsz	f6, f4, f5
 80124ac:	6f623c0a 	svcvs	0x00623c0a
 80124b0:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 80124b4:	4f3e3168 	svcmi	0x003e3168
 80124b8:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80124bc:	2f3c3e31 	svccs	0x003c3e31
 80124c0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80124c4:	2f3c0a3e 	svccs	0x003c0a3e
 80124c8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80124cc:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 80124d0:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 80124d4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 80124d8:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 80124dc:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 80124e0:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80124e4:	71655200 	cmnvc	r5, r0, lsl #4
 80124e8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80124ec:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80124f0:	20797469 	rsbscs	r7, r9, r9, ror #8
 80124f4:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80124f8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80124fc:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8012500:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8012504:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8012508:	6f542049 	svcvs	0x00542049
 801250c:	6f4c206f 	svcvs	0x004c206f
 8012510:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8012514:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8012518:	206c616e 	rsbcs	r6, ip, lr, ror #2
 801251c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8012520:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8012524:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8012528:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 801252c:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8012530:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8012534:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8012538:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801253c:	00646574 	rsbeq	r6, r4, r4, ror r5
 8012540:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012544:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012548:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801254c:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8012550:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8012554:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8012558:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 801255c:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8012560:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8012564:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8012568:	434f4421 	movtmi	r4, #62497	; 0xf421
 801256c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8012570:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8012574:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8012578:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801257c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8012580:	3e646165 	powccsz	f6, f4, f5
 8012584:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8012588:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 801258c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8012590:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012594:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8012598:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801259c:	0a3e6461 	beq	8fab728 <__exidx_end+0xf97a08>
 80125a0:	646f623c 	strbtvs	r6, [pc], #-572	; 80125a8 <RemoteConfig::s_TXT+0x274>
 80125a4:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80125a8:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 80125ac:	31682f3c 	cmncc	r8, ip, lsr pc
 80125b0:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 80125b4:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80125b8:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80125bc:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80125c0:	5448000a 	strbpl	r0, [r8], #-10
 80125c4:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 80125c8:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 80125cc:	73252075 			; <UNDEFINED> instruction: 0x73252075
 80125d0:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 80125d4:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 80125d8:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80125dc:	6f430a0d 	svcvs	0x00430a0d
 80125e0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80125e4:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 80125e8:	203a6570 	eorscs	r6, sl, r0, ror r5
 80125ec:	0a0d7325 	beq	836f288 <__exidx_end+0x35b568>
 80125f0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80125f4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80125f8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80125fc:	203a6874 	eorscs	r6, sl, r4, ror r8
 8012600:	0a0d7525 	beq	836fa9c <__exidx_end+0x35bd7c>
 8012604:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8012608:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801260c:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8012610:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8012614:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8012618:	4447000a 	strbmi	r0, [r7], #-10
 801261c:	31463233 	cmpcc	r6, r3, lsr r2
 8012620:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
	...

08012625 <contentType>:
 8012625:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012629:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801262d:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8012645:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012649:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8012665:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012669:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801266d:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8012671:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8012685:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8012689:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801268d:	2f6e6f69 	svccs	0x006e6f69
 8012691:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080126a5 <RemoteConfigConst::PARAMS_DISABLE>:
 80126a5:	61736964 	cmnvs	r3, r4, ror #18
 80126a9:	00656c62 	rsbeq	r6, r5, r2, ror #24

080126ad <RemoteConfigConst::PARAMS_FILE_NAME>:
 80126ad:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80126b1:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80126b5:	00747874 	rsbseq	r7, r4, r4, ror r8

080126b9 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80126b9:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80126bd:	5f79616c 	svcpl	0x0079616c
 80126c1:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080126c6 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80126c6:	61736964 	cmnvs	r3, r4, ror #18
 80126ca:	5f656c62 	svcpl	0x00656c62
 80126ce:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80126d2:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080126d4 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80126d4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80126d8:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80126dc:	6f6f6265 	svcvs	0x006f6265
 80126e0:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080126e2 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80126e2:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80126e6:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8012182 <s_Output+0xd>
 80126ea:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80126ee:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080126f0 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80126f0:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80126f4:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80126f8:	6f746361 	svcvs	0x00746361
 80126fc:	7b007972 	blvc	8030ccc <__exidx_end+0x1cfac>
 8012700:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8012704:	7b3a2274 	blvc	8e9b0dc <__exidx_end+0xe873bc>
 8012708:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801270c:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8012710:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012714:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012718:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801271c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012720:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012724:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012728:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801272c:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8012730:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012734:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012738:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801273c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8012740:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8012744:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012748:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801274c:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012750:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8012754:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8012758:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801275c:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8012760:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012764:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012768:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801276c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8012770:	616f6222 	cmnvs	pc, r2, lsr #4
 8012774:	3a226472 	bcc	88ab944 <__exidx_end+0x897c24>
 8012778:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801277c:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8012780:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8012784:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8012788:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801278c:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8012790:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8012794:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8012798:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801279c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80127a0:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80127a4:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80127a8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80127ac:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80127b0:	7b000a7d 	blvc	80151ac <__exidx_end+0x148c>
 80127b4:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80127b8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80127bc:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80127c0:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80127c4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80127c8:	7b3a2273 	blvc	8e9b19c <__exidx_end+0xe8747c>
 80127cc:	33316522 	teqcc	r1, #142606336	; 0x8800000
 80127d0:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80127d4:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80127d8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80127dc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80127e0:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80127e4:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80127e8:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80127ec:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80127f0:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 80127f4:	72542058 	subsvc	r2, r4, #88	; 0x58
 80127f8:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80127fc:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8012800:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8012804:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012808:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801280c:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8012810:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8012814:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8012818:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 801281c:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 8012820:	6b726f77 	blvs	9cae604 <__exidx_end+0x1c9a8e4>
 8012824:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012828:	4e223a22 	vmulmi.f32	s6, s4, s5
 801282c:	6f777465 	svcvs	0x00777465
 8012830:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8012834:	6f637222 	svcvs	0x00637222
 8012838:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801283c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012840:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8012844:	746f6d65 	strbtvc	r6, [pc], #-3429	; 801284c <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8012848:	6f632065 	svcvs	0x00632065
 801284c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012850:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8012854:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012858:	 	stccc	13, cr7, [r0], {125}	; 0x7d

0801285b <index_html>:
 801285b:	4f44213c 	svcmi	0x0044213c
 801285f:	50595443 	subspl	r5, r9, r3, asr #8
 8012863:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8012867:	0a3e6c6d 	beq	8fada23 <__exidx_end+0xf99d03>
 801286b:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 801286f:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8012873:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8012877:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801287b:	6b6e696c 	blvs	9bace33 <__exidx_end+0x1b99113>
 801287f:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8012883:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8012887:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801288b:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801288f:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8012893:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8012897:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801289b:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 801289f:	20227373 	eorcs	r7, r2, r3, ror r3
 80128a3:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80128a7:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80128ab:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80128af:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80128b3:	0a3e656c 	beq	8fabe6b <__exidx_end+0xf9814b>
 80128b7:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80128bb:	0a3e6461 	beq	8faba47 <__exidx_end+0xf97d27>
 80128bf:	646f623c 	strbtvs	r6, [pc], #-572	; 80128c7 <index_html+0x6c>
 80128c3:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80128c7:	6165683c 	cmnvs	r5, ip, lsr r8
 80128cb:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80128cf:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80128d3:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80128d7:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80128db:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80128df:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80128e3:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80128e7:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80128eb:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80128ef:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80128f3:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80128f7:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80128fb:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80128ff:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012903:	6f746365 	svcvs	0x00746365
 8012907:	20227972 	eorcs	r7, r2, r2, ror r9
 801290b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801290f:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8012913:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8012917:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801291b:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801291f:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8012923:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8012927:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801292b:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801292f:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8012933:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8012937:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801293b:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801293f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012943:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8012947:	20227478 	eorcs	r7, r2, r8, ror r4
 801294b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801294f:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8012953:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8012957:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801295b:	0a3e656c 	beq	8fabf13 <__exidx_end+0xf981f3>
 801295f:	6f663c09 	svcvs	0x00663c09
 8012963:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8012967:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801296b:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801296f:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8012973:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012977:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801297b:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801297f:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8012983:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012987:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801298b:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 801298f:	20747069 	rsbscs	r7, r4, r9, rrx
 8012993:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8012997:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801299b:	6a2e7865 	bvs	8bb0b37 <__exidx_end+0xb9ce17>
 801299f:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80129a3:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80129a7:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80129ab:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80129af:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80129b3:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80129b7:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80129bb:	 	svcvs	0x0062000a

080129bd <styles_css>:
 80129bd:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80129c1:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80129c5:	63616220 	cmnvs	r1, #32, 4
 80129c9:	6f72676b 	svcvs	0x0072676b
 80129cd:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80129d1:	6f6c6f63 	svcvs	0x006c6f63
 80129d5:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80129d9:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80129dd:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80129e1:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80129e5:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80129e9:	6f6c6f63 	svcvs	0x006c6f63
 80129ed:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80129f1:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80129f5:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80129f9:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80129fd:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8012a01:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012a05:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8012a09:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012a0d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012a11:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012a15:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012a19:	0a3b7865 	beq	8ef0bb5 <__exidx_end+0xedce95>
 8012a1d:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8012a21:	0a7b2069 	beq	9edabcd <__exidx_end+0x1ec6ead>
 8012a25:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8012a29:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8012a2d:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8012a31:	6f6e203a 	svcvs	0x006e203a
 8012a35:	0a3b656e 	beq	8eebff5 <__exidx_end+0xed82d5>
 8012a39:	616d2020 	cmnvs	sp, r0, lsr #32
 8012a3d:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8012a41:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8012a45:	70352078 	eorsvc	r2, r5, r8, ror r0
 8012a49:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8012a4d:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8012a51:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012a55:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012a59:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012a5d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012a61:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012a65:	0a3b7865 	beq	8ef0c01 <__exidx_end+0xedcee1>
 8012a69:	6f622020 	svcvs	0x00622020
 8012a6d:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012a71:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012a75:	3a737569 	bcc	9cf0021 <__exidx_end+0x1cdc301>
 8012a79:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012a7d:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012a81:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012a85:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012a89:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012a8d:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012a91:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012a95:	0a3b7870 	beq	8ef0c5d <__exidx_end+0xedcf3d>
 8012a99:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8012a9d:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012aa1:	0a7b2072 	beq	9edac71 <__exidx_end+0x1ec6f51>
 8012aa5:	69642020 	stmdbvs	r4!, {r5, sp}^
 8012aa9:	616c7073 	smcvs	50947	; 0xc703
 8012aad:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8012ab1:	3b78656c 	blcc	9e2c069 <__exidx_end+0x1e18349>
 8012ab5:	6a20200a 	bvs	881aae5 <__exidx_end+0x806dc5>
 8012ab9:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8012abd:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8012ac1:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012ac5:	203a746e 	eorscs	r7, sl, lr, ror #8
 8012ac9:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8012acd:	0a3b7265 	beq	8eef469 <__exidx_end+0xedb749>
 8012ad1:	6f622020 	svcvs	0x00622020
 8012ad5:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012ad9:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012add:	3a737569 	bcc	9cf0089 <__exidx_end+0x1cdc369>
 8012ae1:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012ae5:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012ae9:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012aed:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012af1:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012af5:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012af9:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012afd:	0a3b7870 	beq	8ef0cc5 <__exidx_end+0xedcfa5>
 8012b01:	 	strne	r0, [r0], #-2685	; 0xfffff583

08012b04 <HttpContent>:
 8012b04:	08012414 	stmdaeq	r1, {r2, r4, sl, sp}
 8012b08:	080129bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, fp, sp}
 8012b0c:	08012420 	stmdaeq	r1, {r5, sl, sp}
 8012b10:	08012b1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, fp, sp}
 8012b14:	08012408 	stmdaeq	r1, {r3, sl, sp}
 8012b18:	0801285b 	stmdaeq	r1, {r0, r1, r3, r4, r6, fp, sp}

08012b1c <index_js>:
 8012b1c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012b20:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012b24:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012b28:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012b2c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012b30:	6a284e4f 	bvs	8a26474 <__exidx_end+0xa12754>
 8012b34:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012b38:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012b3c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012b40:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8012b44:	6a2f273d 	bvs	8bdc840 <__exidx_end+0xbc8b20>
 8012b48:	2f6e6f73 	svccs	0x006e6f73
 8012b4c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8012b50:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012b54:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012b58:	20797274 	rsbscs	r7, r9, r4, ror r2
 8012b5c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012b60:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8012b64:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8012b68:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8012b6c:	20746961 	rsbscs	r6, r4, r1, ror #18
 8012b70:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8012b74:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8012b78:	0a3b296c 	beq	8edd130 <__exidx_end+0xec9410>
 8012b7c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012b80:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8012b84:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8012b88:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012b8c:	73657220 	cmnvc	r5, #32, 4
 8012b90:	6f736a2e 	svcvs	0x00736a2e
 8012b94:	3b29286e 	blcc	8a5cd54 <__exidx_end+0xa49034>
 8012b98:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012b9c:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8012ba0:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8012ba4:	6f727265 	svcvs	0x00727265
 8012ba8:	7b202972 	blvc	881d178 <__exidx_end+0x809458>
 8012bac:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012bb0:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8012bb4:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8012bb8:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8012bbc:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8012bc0:	3b29726f 	blcc	8a6f584 <__exidx_end+0xa5b864>
 8012bc4:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012bc8:	0a0a7d0a 	beq	82b1ff8 <__exidx_end+0x29e2d8>
 8012bcc:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012bd0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012bd4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012bd8:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8012bdc:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012be0:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012be4:	20292874 	eorcs	r2, r9, r4, ror r8
 8012be8:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012bec:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012bf0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012bf4:	6177613d 	cmnvs	r7, sp, lsr r1
 8012bf8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012bfc:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012c00:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012c04:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012c08:	0a3b2927 	beq	8edd0ac <__exidx_end+0xec938c>
 8012c0c:	6f640909 	svcvs	0x00640909
 8012c10:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012c14:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012c18:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012c1c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012c20:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012c24:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012c28:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8012c2c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012c30:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012c34:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012c38:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8012c3c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012c40:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8012c44:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8012c48:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8012c4c:	2b656d61 	blcs	996e1d8 <__exidx_end+0x195a4b8>
 8012c50:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012bd0 <index_js+0xb4>
 8012c54:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012c58:	2b223e69 	blcs	88a2604 <__exidx_end+0x88e8e4>
 8012c5c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012c60:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012c64:	6f6e2e74 	svcvs	0x006e2e74
 8012c68:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8012c6c:	2b657079 	blcs	996ee58 <__exidx_end+0x195b138>
 8012c70:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012bf0 <index_js+0xd4>
 8012c74:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012c78:	2b223e69 	blcs	88a2624 <__exidx_end+0x88e904>
 8012c7c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012c80:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012c84:	6f6e2e74 	svcvs	0x006e2e74
 8012c88:	702e6564 	eorvc	r6, lr, r4, ror #10
 8012c8c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8012c90:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012c94:	2f3c222b 	svccs	0x003c222b
 8012c98:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012c9c:	0a7d0a3b 	beq	9f55590 <__exidx_end+0x1f41870>
 8012ca0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8012ca4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8012ca8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012cac:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012cb0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012cb4:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012cb8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012cbc:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8012cc0:	0a7b2029 	beq	9edad6c <__exidx_end+0x1ec704c>
 8012cc4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012cc8:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8012ccc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012cd0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012cd4:	6177613d 	cmnvs	r7, sp, lsr r1
 8012cd8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012cdc:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012ce0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012ce4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012ce8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012cec:	3b292779 	blcc	8a5cad8 <__exidx_end+0xa48db8>
 8012cf0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012cf4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012cf8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012cfc:	0a22223d 	beq	889b5f8 <__exidx_end+0x8878d8>
 8012d00:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012d04:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8012d08:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8012d0c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8012d10:	6a624f3d 	bvs	98a6a0c <__exidx_end+0x1892cec>
 8012d14:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8012d18:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8012d1c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8012d20:	6f746365 	svcvs	0x00746365
 8012d24:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8012d28:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012d2c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8012d30:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012d34:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8012d38:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8012d3c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8012d40:	6145726f 	cmpvs	r5, pc, ror #4
 8012d44:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8012d48:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012d4c:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012d50:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8012d54:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012d58:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012d5c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012d60:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012d64:	203d2065 	eorscs	r2, sp, r5, rrx
 8012d68:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012d6c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012d70:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012d74:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8012d78:	6b5b5d22 	blvs	96ea208 <__exidx_end+0x16d64e8>
 8012d7c:	3b5d7965 	blcc	9771318 <__exidx_end+0x175d5f8>
 8012d80:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012d84:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8012d88:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012d8c:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012d90:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012d94:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8012d98:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012d9c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012da0:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012da4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012da8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012dac:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012db0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012db4:	0a3b223e 	beq	8edb6b4 <__exidx_end+0xec7994>
 8012db8:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012dbc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012dc0:	6f640909 	svcvs	0x00640909
 8012dc4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012dc8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012dcc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012dd0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012dd4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012dd8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012ddc:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012de0:	6f746365 	svcvs	0x00746365
 8012de4:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8012de8:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012dec:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012df0:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012df4:	3b6c6d74 	blcc	9b2e3cc <__exidx_end+0x1b1a6ac>
 8012df8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012dfc:	5f746567 	svcpl	0x00746567
 8012e00:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012e04:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012e08:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012e0c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8012e10:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012e14:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8012e18:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8012e1c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012e20:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012e24:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8012e28:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8012e2c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012e30:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8012e34:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012e38:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012e3c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8012e40:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012e44:	6177613d 	cmnvs	r7, sp, lsr r1
 8012e48:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012e4c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012e50:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012e54:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012e58:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012e5c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012e60:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012e64:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8012e68:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012e6c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012e70:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012e74:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8012e78:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012e7c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012e80:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012e84:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8012e88:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012e8c:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012e90:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012e94:	2b22563e 	blcs	88a8794 <__exidx_end+0x894a74>
 8012e98:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012e9c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012ea0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012ea4:	2b6e6f69 	blcs	9baec50 <__exidx_end+0x1b9af30>
 8012ea8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012e28 <index_js+0x30c>
 8012eac:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012eb0:	2b223e69 	blcs	88a285c <__exidx_end+0x88eb3c>
 8012eb4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012eb8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012ebc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012ec0:	61642e64 	cmnvs	r4, r4, ror #28
 8012ec4:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8012ec8:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012ecc:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012ed0:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012ed4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012ed8:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8012edc:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8012ee0:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8012ee4:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8012ee8:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8012eec:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8012ef0:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8012ef4:	6f697372 	svcvs	0x00697372
 8012ef8:	6f622e6e 	svcvs	0x00622e6e
 8012efc:	2b647261 	blcs	992f888 <__exidx_end+0x191bb68>
 8012f00:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012e80 <index_js+0x364>
 8012f04:	3b223e69 	blcc	88a28b0 <__exidx_end+0x88eb90>
 8012f08:	0a0a7d0a 	beq	82b2338 <__exidx_end+0x29e618>
 8012f0c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012f10:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012f14:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012f18:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012f1c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8012f24 <index_js+0x408>
 8012f20:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8012f24:	20296c65 	eorcs	r6, r9, r5, ror #24
 8012f28:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8012f2c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8012f30:	613d7478 	teqvs	sp, r8, ror r4
 8012f34:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012f38:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8012f3c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8012f40:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8012f44:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012f48:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012f4c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012f50:	3b22223d 	blcc	889b84c <__exidx_end+0x887b2c>
 8012f54:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8012f58:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8012f5c:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8012f60:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8012f64:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012f68:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012f6c:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012f70:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8012f74:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012f78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012f7c:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012f80:	0a7b2029 	beq	9edb02c <__exidx_end+0x1ec730c>
 8012f84:	61760909 	cmnvs	r6, r9, lsl #18
 8012f88:	61762072 	cmnvs	r6, r2, ror r0
 8012f8c:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012f90:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8012f94:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012f98:	6b5b5d6c 	blvs	96ea550 <__exidx_end+0x16d6830>
 8012f9c:	3b5d7965 	blcc	9771538 <__exidx_end+0x175d818>
 8012fa0:	2009090a 	andcs	r0, r9, sl, lsl #18
 8012fa4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012fa8:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012fac:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012fb0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012fb4:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012fb8:	2f3c222b 	svccs	0x003c222b
 8012fbc:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012fc0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012fc4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012fc8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012fcc:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012fd0:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8012fd8 <index_js+0x4bc>
 8012fd4:	3b223e72 	blcc	88a29a4 <__exidx_end+0x88ec84>
 8012fd8:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012fdc:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012fe0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8012fe4:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8012fe8:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012fec:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012ff0:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8012ff4:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8012ff8:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012ffc:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8013000:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8013004:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8013008:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 801300c:	0a3b6c6d 	beq	8eee1c8 <__exidx_end+0xeda4a8>
 8013010:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8013014:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8013018:	73694c72 	cmnvc	r9, #29184	; 0x7200
 801301c:	3b292874 	blcc	8a5d1f4 <__exidx_end+0xa494d4>
 8013020:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8013024:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8013028:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 801302c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013030:	0a3b2928 	beq	8edd4d8 <__exidx_end+0xec97b8>
 8013034:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8013038:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 801303c:	6f697372 	svcvs	0x00697372
 8013040:	3b29286e 	blcc	8a5d200 <__exidx_end+0xa494e0>
 8013044:	3332000a 	teqcc	r2, #10
 8013048:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 801304c:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8013050:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8013054:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8013058:	30007325 	andcc	r7, r0, r5, lsr #6
 801305c:	6f4e202e 	svcvs	0x004e202e
 8013060:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8013064:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8013068:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 801306c:	202c6465 	eorcs	r6, ip, r5, ror #8
 8013070:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8013074:	6f687320 	svcvs	0x00687320
 8013078:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 801307c:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8013080:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8013084:	000a216e 	andeq	r2, sl, lr, ror #2
 8013088:	00505448 	subseq	r5, r0, r8, asr #8
 801308c:	0050544c 	subseq	r5, r0, ip, asr #8
 8013090:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8013094:	000a6567 	andeq	r6, sl, r7, ror #10
 8013098:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 801309c:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 80130a0:	203a2065 	eorscs	r2, sl, r5, rrx
 80130a4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80130a8:	20000a64 	andcs	r0, r0, r4, ror #20
 80130ac:	20444943 	subcs	r4, r4, r3, asr #18
 80130b0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80130b4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80130b8:	20000a73 	andcs	r0, r0, r3, ror sl
 80130bc:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80130c0:	000a7475 	andeq	r7, sl, r5, ror r4
 80130c4:	6f502020 	svcvs	0x00502020
 80130c8:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 80130cc:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 80130d0:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 80130d4:	20657372 	rsbcs	r7, r5, r2, ror r3
 80130d8:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 80130dc:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80130e0:	20000a5d 	andcs	r0, r0, sp, asr sl
 80130e4:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 80130e8:	20000a74 	andcs	r0, r0, r4, ror sl
 80130ec:	726f5020 	rsbvc	r5, pc, #32
 80130f0:	32252074 	eorcc	r2, r5, #116	; 0x74
 80130f4:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80130f8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80130fc:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8013100:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8013104:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8013108:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 801310c:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8013110:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013114:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8013118:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 801311c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8013120:	000a6465 	andeq	r6, sl, r5, ror #8

08013124 <E131MsgConst::START>:
 8013124:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8013128:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801312c:	43417320 	movtmi	r7, #4896	; 0x1320
 8013130:	3145204e 	cmpcc	r5, lr, asr #32
 8013134:	0031332e 	eorseq	r3, r1, lr, lsr #6

08013138 <E131MsgConst::PARAMS>:
 8013138:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801313c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8013140:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8013144:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8013148:	2e314520 	cfabs64cs	mvdx4, mvdx1
 801314c:	 	movwvc	r3, #307	; 0x133

0801314f <E131MsgConst::STARTED>:
 801314f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8013153:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8013157:	73203133 			; <UNDEFINED> instruction: 0x73203133
 801315b:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801315f:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8013163:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8013167:	0066666f 	rsbeq	r6, r6, pc, ror #12
 801316b:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801316f:	6b636162 	blvs	98eb6ff <__exidx_end+0x18d79df>
 8013173:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8013177:	6f007475 	svcvs	0x00007475
 801317b:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 801317f:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 8013183:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8013187:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 801318b:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 801318f:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8013193:	754f2058 	strbvc	r2, [pc, #-88]	; 8013143 <E131MsgConst::PARAMS+0xb>
 8013197:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 801319b:	584d4400 	stmdapl	sp, {sl, lr}^
 801319f:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 80131a3:	00007475 	andeq	r7, r0, r5, ror r4
	...

080131a8 <CSWTCH.56>:
 80131a8:	08013162 	stmdaeq	r1, {r1, r5, r6, r8, ip, sp}
 80131ac:	08013167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, ip, sp}
 80131b0:	0801243a 	stmdaeq	r1, {r1, r3, r4, r5, sl, sp}
 80131b4:	0801316b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, ip, sp}

080131b8 <E131ParamsConst::PRIORITY>:
 80131b8:	6f697270 	svcvs	0x00697270
 80131bc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80131c0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80131c4:	00615f74 	rsbeq	r5, r1, r4, ror pc
	...

080131ca <E131ParamsConst::FILE_NAME>:
 80131ca:	31333165 	teqcc	r3, r5, ror #2
 80131ce:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

080131d3 <E117Const::ACN_PACKET_IDENTIFIER>:
 80131d3:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80131d7:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80131db:	00000037 	andeq	r0, r0, r7, lsr r0

080131df <E131BridgeConst::VERSION>:
 80131df:	30251901 	eorcc	r1, r5, r1, lsl #18
 80131e3:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 80131e7:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 80131eb:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 80131ef:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 80131f3:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 80131f7:	30252d78 	eorcc	r2, r5, r8, ror sp
 80131fb:	30257832 	eorcc	r7, r5, r2, lsr r8
 80131ff:	30257832 	eorcc	r7, r5, r2, lsr r8
 8013203:	30257832 	eorcc	r7, r5, r2, lsr r8
 8013207:	30257832 	eorcc	r7, r5, r2, lsr r8
 801320b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801320f:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 8013213:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 8013217:	0a646e65 	beq	992ebb3 <__exidx_end+0x191ae93>
 801321b:	72422000 	subvc	r2, r2, #0
 801321f:	206b6165 	rsbcs	r6, fp, r5, ror #2
 8013223:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013227:	3a202020 	bcc	881b2af <__exidx_end+0x80758f>
 801322b:	0a752520 	beq	9d5c6b3 <__exidx_end+0x1d48993>
 801322f:	414d2000 	mrsmi	r2, (UNDEF: 77)
 8013233:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 8013237:	2020656d 	eorcs	r6, r0, sp, ror #10
 801323b:	3a202020 	bcc	881b2c3 <__exidx_end+0x8075a3>
 801323f:	0a752520 	beq	9d5c6c7 <__exidx_end+0x1d489a7>
 8013243:	65522000 	ldrbvs	r2, [r2, #-0]
 8013247:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 801324b:	61722068 	cmnvs	r2, r8, rrx
 801324f:	3a206574 	bcc	882c827 <__exidx_end+0x818b07>
 8013253:	0a752520 	beq	9d5c6db <__exidx_end+0x1d489bb>
 8013257:	6c532000 	mravs	r2, r3, acc0
 801325b:	2073746f 	rsbscs	r7, r3, pc, ror #8
 801325f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013263:	3a202020 	bcc	881b2eb <__exidx_end+0x8075cb>
 8013267:	0a752520 	beq	9d5c6ef <__exidx_end+0x1d489cf>
	...

0801326c <vtable for DmxSend>:
	...
 8013274:	0800ac59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, sp, pc}
 8013278:	0800ad41 	stmdaeq	r0, {r0, r6, r8, sl, fp, sp, pc}
 801327c:	0800ac5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp, sp, pc}
 8013280:	0800ac8d 	stmdaeq	r0, {r0, r2, r3, r7, sl, fp, sp, pc}
 8013284:	0800acc1 	stmdaeq	r0, {r0, r6, r7, sl, fp, sp, pc}
 8013288:	0800acd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, sp, pc}
 801328c:	0800acdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, sp, pc}
 8013290:	0800ace9 	stmdaeq	r0, {r0, r3, r5, r6, r7, sl, fp, sp, pc}
 8013294:	0800edc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, sp, lr, pc}
 8013298:	0800edbb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, sl, fp, sp, lr, pc}
 801329c:	0800edbf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, sp, lr, pc}
 80132a0:	0800edc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, sp, lr, pc}

080132a4 <DmxParamsConst::BREAK_TIME>:
 80132a4:	61657262 	cmnvs	r5, r2, ror #4
 80132a8:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80132ac:	 	movwvc	r6, #1389	; 0x56d

080132af <DmxParamsConst::SLOTS_COUNT>:
 80132af:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80132b7 <DmxParamsConst::SLOTS_COUNT+0x8>
 80132b3:	6f635f73 	svcvs	0x00635f73
 80132b7:	00746e75 	rsbseq	r6, r4, r5, ror lr

080132bb <DmxParamsConst::REFRESH_RATE>:
 80132bb:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80132bf:	5f687365 	svcpl	0x00687365
 80132c3:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080132c8 <DmxParamsConst::MAB_TIME>:
 80132c8:	5f62616d 	svcpl	0x0062616d
 80132cc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080132d1 <DmxParamsConst::FILE_NAME>:
 80132d1:	61726170 	cmnvs	r2, r0, ror r1
 80132d5:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80132d9:	 	andvs	r7, r0, r8, ror r4

080132dc <s_aStorSize>:
 80132dc:	00000060 	andeq	r0, r0, r0, rrx
 80132e0:	00000090 	muleq	r0, r0, r0
 80132e4:	00000020 	andeq	r0, r0, r0, lsr #32
 80132e8:	00000040 	andeq	r0, r0, r0, asr #32
 80132ec:	00000060 	andeq	r0, r0, r0, rrx
 80132f0:	00000040 	andeq	r0, r0, r0, asr #32
 80132f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80132f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80132fc:	000001e0 	andeq	r0, r0, r0, ror #3
 8013300:	00000040 	andeq	r0, r0, r0, asr #32
 8013304:	00000020 	andeq	r0, r0, r0, lsr #32
 8013308:	00000060 	andeq	r0, r0, r0, rrx
 801330c:	00000030 	andeq	r0, r0, r0, lsr r0
 8013310:	00000020 	andeq	r0, r0, r0, lsr #32
 8013314:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8013318:	00000030 	andeq	r0, r0, r0, lsr r0
 801331c:	00000040 	andeq	r0, r0, r0, asr #32
 8013320:	00000020 	andeq	r0, r0, r0, lsr #32
 8013324:	00000060 	andeq	r0, r0, r0, rrx
 8013328:	00000020 	andeq	r0, r0, r0, lsr #32
 801332c:	00000400 	andeq	r0, r0, r0, lsl #8
 8013330:	00000020 	andeq	r0, r0, r0, lsr #32
 8013334:	00000020 	andeq	r0, r0, r0, lsr #32
 8013338:	00000040 	andeq	r0, r0, r0, asr #32
 801333c:	00000060 	andeq	r0, r0, r0, rrx
 8013340:	00000020 	andeq	r0, r0, r0, lsr #32
 8013344:	00000020 	andeq	r0, r0, r0, lsr #32
 8013348:	000000c0 	andeq	r0, r0, r0, asr #1

0801334c <vtable for StoreDisplayUdf>:
	...
 8013354:	0800bd59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, sp, pc}
 8013358:	0800bda5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, ip, sp, pc}
 801335c:	0800bd81 	stmdaeq	r0, {r0, r7, r8, sl, fp, ip, sp, pc}
 8013360:	0800bd5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, fp, ip, sp, pc}

08013364 <vtable for StoreDmxSend>:
	...
 801336c:	0800bdc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, ip, sp, pc}
 8013370:	0800be11 	stmdaeq	r0, {r0, r4, r9, sl, fp, ip, sp, pc}
 8013374:	0800bded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 8013378:	0800bdc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp, pc}

0801337c <vtable for StoreNetwork>:
	...
 8013384:	0800be31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, ip, sp, pc}
 8013388:	0800bf45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, pc}
 801338c:	0800be39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, ip, sp, pc}
 8013390:	0800bf59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8013394:	0800bee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 8013398:	0800bebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 801339c:	0800be8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, ip, sp, pc}
 80133a0:	0800bf15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, ip, sp, pc}
 80133a4:	0800be5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp, ip, sp, pc}
 80133a8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80133ac:	00000000 	andeq	r0, r0, r0
 80133b0:	0800be33 	stmdaeq	r0, {r0, r1, r4, r5, r9, sl, fp, ip, sp, pc}
 80133b4:	0800bf51 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 80133b8:	0800bf0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, fp, ip, sp, pc}
 80133bc:	0800bee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 80133c0:	0800beb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 80133c4:	0800bf3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 80133c8:	0800be85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, pc}

080133cc <vtable for StoreRemoteConfig>:
	...
 80133d4:	0800bf91 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 80133d8:	0800bfdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 80133dc:	0800bfb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 80133e0:	0800bf95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, pc}

080133e4 <vtable for StoreE131>:
	...
 80133ec:	0800bffd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 80133f0:	0800c049 	stmdaeq	r0, {r0, r3, r6, lr, pc}
 80133f4:	0800c025 	stmdaeq	r0, {r0, r2, r5, lr, pc}
 80133f8:	0800c001 	stmdaeq	r0, {r0, lr, pc}
 80133fc:	3a434d46 	bcc	90e691c <__exidx_end+0x10d2bfc>
 8013400:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8013404:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8013408:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801340c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8013410:	6f742068 	svcvs	0x00742068
 8013414:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8013418:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801341c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8013420:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8013424:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8013428:	6374000a 	cmnvs	r4, #10
 801342c:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8013430:	3a6e6967 	bcc	9bad9d4 <__exidx_end+0x1b99cb4>
 8013434:	6f6f7420 	svcvs	0x006f7420
 8013438:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801343c:	6f632079 	svcvs	0x00632079
 8013440:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8013444:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013448:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801344c:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8013450:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8013454:	41000a64 	tstmi	r0, r4, ror #20
 8013458:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801345c:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8013460:	61662070 	smcvs	25088	; 0x6200
 8013464:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8013468:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801346c:	61666564 	cmnvs	r6, r4, ror #10
 8013470:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8013474:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8013478:	0a796177 	beq	9e6ba5c <__exidx_end+0x1e57d3c>
 801347c:	50524100 	subspl	r4, r2, r0, lsl #2
 8013480:	6f6f6c20 	svcvs	0x006f6c20
 8013484:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8013488:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801348c:	000a6465 	andeq	r6, sl, r5, ror #8

08013490 <NetworkConst::MSG_MDNS_CONFIG>:
 8013490:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8013494:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8013498:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801349c:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080134a1 <NetworkConst::MSG_NETWORK_INIT>:
 80134a1:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80134a5:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80134a9:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80134ad:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80134b1:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80134b5:	3135322e 	teqcc	r5, lr, lsr #4
 80134b9:	63745f00 	cmnvs	r4, #0, 30
 80134bd:	6f6c2e70 	svcvs	0x006c2e70
 80134c1:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80134c5:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80134c9:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80134cd:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80134d5 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80134d1:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80134d5:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8012679 <contentType+0x54>
 80134d9:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80134dd:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80134e1:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80134e5:	20000a53 	andcs	r0, r0, r3, asr sl
 80134e9:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80134ed:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80134f1:	0a676e69 	beq	99eee9d <__exidx_end+0x19db17d>
 80134f5:	614e2000 	mrsvs	r2, (UNDEF: 78)
 80134f9:	3a20656d 	bcc	882cab5 <__exidx_end+0x818d95>
 80134fd:	0a732520 	beq	9cdc985 <__exidx_end+0x1cc8c65>
 8013501:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8013505:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8013509:	000a7325 	andeq	r7, sl, r5, lsr #6
 801350d:	30687465 	rsbcc	r7, r8, r5, ror #8
 8013511:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8013515:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8013519:	5f656369 	svcpl	0x00656369
 801351d:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8013521:	6b726f77 	blvs	9caf305 <__exidx_end+0x1c9b5e5>
 8013525:	4820000a 	stmdami	r0!, {r1, r3}
 8013529:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801352d:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8013531:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8013535:	20000a73 	andcs	r0, r0, r3, ror sl
 8013539:	614e6649 	cmpvs	lr, r9, asr #12
 801353d:	2020656d 	eorcs	r6, r0, sp, ror #10
 8013541:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013545:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8013549:	000a7325 	andeq	r7, sl, r5, lsr #6
 801354d:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8013551:	20202074 	eorcs	r2, r0, r4, ror r0
 8013555:	3a202020 	bcc	881b5dd <__exidx_end+0x8078bd>
 8013559:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801355d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013561:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013565:	0a64252f 	beq	991ca29 <__exidx_end+0x1908d09>
 8013569:	654e2000 	strbvs	r2, [lr, #-0]
 801356d:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8013571:	2020206b 	eorcs	r2, r0, fp, rrx
 8013575:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013579:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801357d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013581:	20000a64 	andcs	r0, r0, r4, ror #20
 8013585:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8013589:	20796177 	rsbscs	r6, r9, r7, ror r1
 801358d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013591:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013595:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013599:	0a64252e 	beq	991ca59 <__exidx_end+0x1908d39>
 801359d:	72422000 	subvc	r2, r2, #0
 80135a1:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80135a5:	20747361 	rsbscs	r7, r4, r1, ror #6
 80135a9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80135ad:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80135b1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80135b5:	20000a64 	andcs	r0, r0, r4, ror #20
 80135b9:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80135bd:	20202020 	eorcs	r2, r0, r0, lsr #32
 80135c1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80135c5:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80135c9:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80135cd:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80135d1:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80135d5:	3a78322e 	bcc	9e1fe95 <__exidx_end+0x1e0c175>
 80135d9:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80135dd:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80135e1:	20000a78 	andcs	r0, r0, r8, ror sl
 80135e5:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80135e9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80135ed:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80135f1:	000a6325 	andeq	r6, sl, r5, lsr #6
 80135f5:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 80135f9:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 80135fd:	 	rsbvc	r0, r9, r0, asr r0

080135ff <NetworkParamsConst::IP_ADDRESS>:
 80135ff:	615f7069 	cmpvs	pc, r9, rrx
 8013603:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8013607:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801360a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801360a:	61666564 	cmnvs	r6, r4, ror #10
 801360e:	5f746c75 	svcpl	0x00746c75
 8013612:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8013616:	00796177 	rsbseq	r6, r9, r7, ror r1

0801361a <NetworkParamsConst::DHCP_RETRY_TIME>:
 801361a:	70636864 	rsbvc	r6, r3, r4, ror #16
 801361e:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8013622:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801362a <NetworkParamsConst::HOSTNAME>
 8013626:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801362a <NetworkParamsConst::HOSTNAME>:
 801362a:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801362e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013633 <NetworkParamsConst::NET_MASK>:
 8013633:	5f74656e 	svcpl	0x0074656e
 8013637:	6b73616d 	blvs	9cebbf3 <__exidx_end+0x1cd7ed3>
	...

0801363c <NetworkParamsConst::USE_DHCP>:
 801363c:	5f657375 	svcpl	0x00657375
 8013640:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08013645 <NetworkParamsConst::FILE_NAME>:
 8013645:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8013649:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801364d:	00747874 	rsbseq	r7, r4, r4, ror r8
 8013651:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8013655:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8013659:	61747320 	cmnvs	r4, r0, lsr #6
 801365d:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8013661:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013665:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013669:	252f6425 	strcs	r6, [pc, #-1061]!	; 801324c <E131BridgeConst::VERSION+0x6d>
 801366d:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013671:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8013675:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013679:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801367d:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8013681:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8013685:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013689:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801368d:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8013691:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8013695:	20657261 	rsbcs	r7, r5, r1, ror #4
 8013699:	2a2e2556 	bcs	8b9cbf9 <__exidx_end+0xb88ed9>
 801369d:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 80136a1:	72205043 	eorvc	r5, r0, #67	; 0x43
 80136a5:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80136a9:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80136ad:	50434844 	subpl	r4, r3, r4, asr #16
 80136b1:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80136b5:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80136b9:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80136bd:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80136c1:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80136c5:	6f647475 	svcvs	0x00647475
 80136c9:	 	andvs	r6, r0, r7, ror lr

080136cc <pArray>:
 80136cc:	08013760 	stmdaeq	r1, {r5, r6, r8, r9, sl, ip, sp}
 80136d0:	0801371c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, ip, sp}
 80136d4:	080135ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 80136d8:	08013766 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sl, ip, sp}
 80136dc:	08013891 	stmdaeq	r1, {r0, r4, r7, fp, ip, sp}
 80136e0:	08013727 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, ip, sp}
 80136e4:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 80136e8:	0801362a 	stmdaeq	r1, {r1, r3, r5, r9, sl, ip, sp}
 80136ec:	080137d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, ip, sp}
 80136f0:	080137e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, ip, sp}
 80136f4:	080137f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 80136f8:	08013808 	stmdaeq	r1, {r3, fp, ip, sp}
 80136fc:	08013633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, sp}
 8013700:	08013860 	stmdaeq	r1, {r5, r6, fp, ip, sp}
 8013704:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 8013708:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 801370c:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 8013710:	08012619 	stmdaeq	r1, {r0, r3, r4, r9, sl, sp}
 8013714:	0801360a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp}
 8013718:	08013734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, ip, sp}

0801371c <DisplayUdfParamsConst::BOARD_NAME>:
 801371c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8013720:	616e5f64 	cmnvs	lr, r4, ror #30
 8013724:	 	tstvs	r0, sp, ror #10

08013727 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8013727:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801372b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801372f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08013734 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8013734:	5f786d64 	svcpl	0x00786d64
 8013738:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801373c:	6f697463 	svcvs	0x00697463
 8013740:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08013742 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8013742:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8013746:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801374a:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80131e5 <E131BridgeConst::VERSION+0x6>
 801374e:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08013750 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8013750:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8013754:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8013758:	61636974 	smcvs	13972	; 0x3694
 801375c:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08013760 <DisplayUdfParamsConst::TITLE>:
 8013760:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013764:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08013766 <DisplayUdfParamsConst::VERSION>:
 8013766:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801376a:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801376e <DisplayUdfParamsConst::FILE_NAME>:
 801376e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013772:	2e79616c 	rpwcsez	f6, f1, #4.0
 8013776:	00747874 	rsbseq	r7, r4, r4, ror r8

0801377a <DisplayUdfParamsConst::INTENSITY>:
 801377a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801377e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8013782:	50410079 	subpl	r0, r1, r9, ror r0
 8013786:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801378a:	726f5000 	rsbvc	r5, pc, #0
 801378e:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8013792:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013796:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801379a:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801379e:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 80137a2:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 80137a6:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 80137aa:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80137ae:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80137b2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80137b6:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80137ba:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 80137be:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80137c2:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 80137c6:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80137ca:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80137ce:	2023000a 	eorcs	r0, r3, sl
 80137d2:	23207325 			; <UNDEFINED> instruction: 0x23207325
 80137d6:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

080137d8 <LightSetParamsConst::UNIVERSE_PORT>:
 80137d8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80137dc:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80137e0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80137e4:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80137e8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80137ec:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80137f0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80137f4:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80137f8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80137fc:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013800:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013804:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8013808:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801380c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013810:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013814:	00645f74 	rsbeq	r5, r4, r4, ror pc

08013818 <LightSetParamsConst::MERGE_MODE_PORT>:
 8013818:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801381c:	6f6d5f65 	svcvs	0x006d5f65
 8013820:	705f6564 	subsvc	r6, pc, r4, ror #10
 8013824:	5f74726f 	svcpl	0x0074726f
 8013828:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801382c:	5f656772 	svcpl	0x00656772
 8013830:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8013834:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013838:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801383c:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8013840:	6f6d5f65 	svcvs	0x006d5f65
 8013844:	705f6564 	subsvc	r6, pc, r4, ror #10
 8013848:	5f74726f 	svcpl	0x0074726f
 801384c:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8013850:	5f656772 	svcpl	0x00656772
 8013854:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8013858:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801385c:	00645f74 	rsbeq	r5, r4, r4, ror pc

08013860 <LightSetParamsConst::DMX_START_ADDRESS>:
 8013860:	5f786d64 	svcpl	0x00786d64
 8013864:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8013868:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801386c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8013870:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

08013872 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 8013872:	61736964 	cmnvs	r3, r4, ror #18
 8013876:	5f656c62 	svcpl	0x00656c62
 801387a:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801387e:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013882:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801331d <s_aStorSize+0x41>
 8013886:	 	smcvs	24580	; 0x6004

08013888 <LightSetParamsConst::FAILSAFE>:
 8013888:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 801388c:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

08013891 <LightSetParamsConst::UNIVERSE>:
 8013891:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013895:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801389a <LightSetParamsConst::DIRECTION>:
 801389a:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801389e:	6f697463 	svcvs	0x00697463
 80138a2:	6f705f6e 	svcvs	0x00705f6e
 80138a6:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 80138aa:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 80138ae:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80138b2:	5f6e6f69 	svcpl	0x006e6f69
 80138b6:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80138ba:	0000625f 	andeq	r6, r0, pc, asr r2
 80138be:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80138c2:	6f697463 	svcvs	0x00697463
 80138c6:	6f705f6e 	svcvs	0x00705f6e
 80138ca:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 80138ce:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 80138d2:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80138d6:	5f6e6f69 	svcpl	0x006e6f69
 80138da:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80138de:	0000645f 	andeq	r6, r0, pc, asr r4
 80138e2:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 80138e6:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80138ea:	66207961 	strtvs	r7, [r0], -r1, ror #18
 80138ee:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80138f2:	31485300 	mrscc	r5, (UNDEF: 120)
 80138f6:	00363031 	eorseq	r3, r6, r1, lsr r0
 80138fa:	31445353 	cmpcc	r4, r3, asr r3
 80138fe:	00363033 	eorseq	r3, r6, r3, lsr r0
 8013902:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8013906:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801390a:	000a2964 	andeq	r2, sl, r4, ror #18
 801390e:	aaeeaa40 	bge	7bbe216 <__stack_size+0x7bbc216>
 8013912:	 	subeq	r0, r0, lr, ror #1

08013914 <_OledFont8x6>:
 8013914:	00000040 	andeq	r0, r0, r0, asr #32
 8013918:	40000000 	andmi	r0, r0, r0
 801391c:	005f0000 	subseq	r0, pc, r0
 8013920:	00400000 	subeq	r0, r0, r0
 8013924:	00070007 	andeq	r0, r7, r7
 8013928:	7f144000 	svcvc	0x00144000
 801392c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8013930:	7f2a2440 	svcvc	0x002a2440
 8013934:	4000122a 	andmi	r1, r0, sl, lsr #4
 8013938:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801393c:	36400062 	strbcc	r0, [r0], -r2, rrx
 8013940:	50205649 	eorpl	r5, r0, r9, asr #12
 8013944:	08004000 	stmdaeq	r0, {lr}
 8013948:	00000307 	andeq	r0, r0, r7, lsl #6
 801394c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8013950:	40000041 	andmi	r0, r0, r1, asr #32
 8013954:	1c224100 	stfnes	f4, [r2], #-0
 8013958:	2a400000 	bcs	9013960 <__exidx_end+0xfffc40>
 801395c:	2a1c7f1c 	bcs	87335d4 <__exidx_end+0x71f8b4>
 8013960:	08084000 	stmdaeq	r8, {lr}
 8013964:	0008083e 	andeq	r0, r8, lr, lsr r8
 8013968:	70800040 	addvc	r0, r0, r0, asr #32
 801396c:	40000030 	andmi	r0, r0, r0, lsr r0
 8013970:	08080808 	stmdaeq	r8, {r3, fp}
 8013974:	00400008 	subeq	r0, r0, r8
 8013978:	00606000 	rsbeq	r6, r0, r0
 801397c:	10204000 	eorne	r4, r0, r0
 8013980:	00020408 	andeq	r0, r2, r8, lsl #8
 8013984:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8013988:	40003e45 	andmi	r3, r0, r5, asr #28
 801398c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8013990:	72400000 	subvc	r0, r0, #0
 8013994:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8013998:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801399c:	00334d49 	eorseq	r4, r3, r9, asr #26
 80139a0:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 80139a4:	4000107f 	andmi	r1, r0, pc, ror r0
 80139a8:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 80139ac:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80139b0:	3149494a 	cmpcc	r9, sl, asr #18
 80139b4:	21414000 	mrscs	r4, (UNDEF: 65)
 80139b8:	00070911 	andeq	r0, r7, r1, lsl r9
 80139bc:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80139c0:	40003649 	andmi	r3, r0, r9, asr #12
 80139c4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80139c8:	0040001e 	subeq	r0, r0, lr, lsl r0
 80139cc:	00001400 	andeq	r1, r0, r0, lsl #8
 80139d0:	40004000 	andmi	r4, r0, r0
 80139d4:	00000034 	andeq	r0, r0, r4, lsr r0
 80139d8:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80139dc:	40004122 	andmi	r4, r0, r2, lsr #2
 80139e0:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80139e4:	00400014 	subeq	r0, r0, r4, lsl r0
 80139e8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 80139ec:	01024000 	mrseq	r4, (UNDEF: 2)
 80139f0:	00060959 	andeq	r0, r6, r9, asr r9
 80139f4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 80139f8:	40004e59 	andmi	r4, r0, r9, asr lr
 80139fc:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8013a00:	7f40007c 	svcvc	0x0040007c
 8013a04:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8013a08:	413e4000 	teqmi	lr, r0
 8013a0c:	00224141 	eoreq	r4, r2, r1, asr #2
 8013a10:	41417f40 	cmpmi	r1, r0, asr #30
 8013a14:	40003e41 	andmi	r3, r0, r1, asr #28
 8013a18:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8013a1c:	7f400041 	svcvc	0x00400041
 8013a20:	01090909 	tsteq	r9, r9, lsl #18
 8013a24:	413e4000 	teqmi	lr, r0
 8013a28:	00735141 	rsbseq	r5, r3, r1, asr #2
 8013a2c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8013a30:	40007f08 	andmi	r7, r0, r8, lsl #30
 8013a34:	417f4100 	cmnmi	pc, r0, lsl #2
 8013a38:	20400000 	subcs	r0, r0, r0
 8013a3c:	013f4140 	teqeq	pc, r0, asr #2
 8013a40:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8013a44:	00412214 	subeq	r2, r1, r4, lsl r2
 8013a48:	40407f40 	submi	r7, r0, r0, asr #30
 8013a4c:	40004040 	andmi	r4, r0, r0, asr #32
 8013a50:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8013a54:	7f40007f 	svcvc	0x0040007f
 8013a58:	7f100804 	svcvc	0x00100804
 8013a5c:	413e4000 	teqmi	lr, r0
 8013a60:	003e4141 	eorseq	r4, lr, r1, asr #2
 8013a64:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8013a68:	40000609 	andmi	r0, r0, r9, lsl #12
 8013a6c:	2151413e 	cmpcs	r1, lr, lsr r1
 8013a70:	7f40005e 	svcvc	0x0040005e
 8013a74:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8013a78:	49264000 	stmdbmi	r6!, {lr}
 8013a7c:	00324949 	eorseq	r4, r2, r9, asr #18
 8013a80:	7f010340 	svcvc	0x00010340
 8013a84:	40000301 	andmi	r0, r0, r1, lsl #6
 8013a88:	4040403f 	submi	r4, r0, pc, lsr r0
 8013a8c:	1f40003f 	svcne	0x0040003f
 8013a90:	1f204020 	svcne	0x00204020
 8013a94:	403f4000 	eorsmi	r4, pc, r0
 8013a98:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8013a9c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8013aa0:	40006314 	andmi	r6, r0, r4, lsl r3
 8013aa4:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8013aa8:	61400003 	cmpvs	r0, r3
 8013aac:	434d4959 	movtmi	r4, #55641	; 0xd959
 8013ab0:	7f004000 	svcvc	0x00004000
 8013ab4:	00414141 	subeq	r4, r1, r1, asr #2
 8013ab8:	08040240 	stmdaeq	r4, {r6, r9}
 8013abc:	40002010 	andmi	r2, r0, r0, lsl r0
 8013ac0:	41414100 	mrsmi	r4, (UNDEF: 81)
 8013ac4:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8013ac8:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8013acc:	40404000 	submi	r4, r0, r0
 8013ad0:	00404040 	subeq	r4, r0, r0, asr #32
 8013ad4:	07030040 	streq	r0, [r3, -r0, asr #32]
 8013ad8:	40000008 	andmi	r0, r0, r8
 8013adc:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8013ae0:	7f400040 	svcvc	0x00400040
 8013ae4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8013ae8:	44384000 	ldrtmi	r4, [r8], #-0
 8013aec:	00284444 	eoreq	r4, r8, r4, asr #8
 8013af0:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8013af4:	40007f28 	andmi	r7, r0, r8, lsr #30
 8013af8:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8013afc:	00400018 	subeq	r0, r0, r8, lsl r0
 8013b00:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8013b04:	a4184000 	ldrge	r4, [r8], #-0
 8013b08:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8013b0c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8013b10:	40007804 	andmi	r7, r0, r4, lsl #16
 8013b14:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8013b18:	20400000 	subcs	r0, r0, r0
 8013b1c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8013b20:	107f4000 	rsbsne	r4, pc, r0
 8013b24:	00004428 	andeq	r4, r0, r8, lsr #8
 8013b28:	7f410040 	svcvc	0x00410040
 8013b2c:	40000040 	andmi	r0, r0, r0, asr #32
 8013b30:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8013b34:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8013b38:	78040408 	stmdavc	r4, {r3, sl}
 8013b3c:	44384000 	ldrtmi	r4, [r8], #-0
 8013b40:	00384444 	eorseq	r4, r8, r4, asr #8
 8013b44:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8013b48:	40001824 	andmi	r1, r0, r4, lsr #16
 8013b4c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8013b50:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8013b54:	08040408 	stmdaeq	r4, {r3, sl}
 8013b58:	54484000 	strbpl	r4, [r8], #-0
 8013b5c:	00245454 	eoreq	r5, r4, r4, asr r4
 8013b60:	3f040440 	svccc	0x00040440
 8013b64:	40002444 	andmi	r2, r0, r4, asr #8
 8013b68:	2040403c 	subcs	r4, r0, ip, lsr r0
 8013b6c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8013b70:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8013b74:	403c4000 	eorsmi	r4, ip, r0
 8013b78:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8013b7c:	10284440 	eorne	r4, r8, r0, asr #8
 8013b80:	40004428 	andmi	r4, r0, r8, lsr #8
 8013b84:	9090904c 	addsls	r9, r0, ip, asr #32
 8013b88:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8013b8c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8013b90:	08004000 	stmdaeq	r0, {lr}
 8013b94:	00004136 	andeq	r4, r0, r6, lsr r1
 8013b98:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8013b9c:	40000000 	andmi	r0, r0, r0
 8013ba0:	08364100 	ldmdaeq	r6!, {r8, lr}
 8013ba4:	02400000 	subeq	r0, r0, #0
 8013ba8:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8013bac:	263c4000 	ldrtcs	r4, [ip], -r0
 8013bb0:	003c2623 	eorseq	r2, ip, r3, lsr #12

08013bb4 <oled_128x32_init>:
 8013bb4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013bb8:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8013bbc:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013bc0:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8013bc4:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013bc8:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013bcc <oled_128x64_init>:
 8013bcc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013bd0:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8013bd4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013bd8:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8013bdc:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013be0:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013be4 <vtable for Ssd1306>:
	...
 8013bec:	0800ef29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, sp, lr, pc}
 8013bf0:	0800ef55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, sp, lr, pc}
 8013bf4:	0800f265 	stmdaeq	r0, {r0, r2, r5, r6, r9, ip, sp, lr, pc}
 8013bf8:	0800f1ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, ip, sp, lr, pc}
 8013bfc:	0800f0b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, ip, sp, lr, pc}
 8013c00:	0800ef75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp, lr, pc}
 8013c04:	0800ef9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, sp, lr, pc}
 8013c08:	0800f08f 	stmdaeq	r0, {r0, r1, r2, r3, r7, ip, sp, lr, pc}
 8013c0c:	0800f049 	stmdaeq	r0, {r0, r3, r6, ip, sp, lr, pc}
 8013c10:	0800ef2b 	stmdaeq	r0, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr, pc}
 8013c14:	0800f0f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, ip, sp, lr, pc}
 8013c18:	0800f101 	stmdaeq	r0, {r0, r8, ip, sp, lr, pc}
 8013c1c:	0800f11b 	stmdaeq	r0, {r0, r1, r3, r4, r8, ip, sp, lr, pc}
 8013c20:	0800ef2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, fp, sp, lr, pc}
 8013c24:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8013c28:	5b1b006d 	blpl	86d3de4 <__exidx_end+0x6c00c4>
 8013c2c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8013c30:	31335b1b 	teqcc	r3, fp, lsl fp
 8013c34:	5b1b006d 	blpl	86d3df0 <__exidx_end+0x6c00d0>
 8013c38:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8013c3c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8013c40:	5b1b006d 	blpl	86d3dfc <__exidx_end+0x6c00dc>
 8013c44:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8013c48:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8013c4c:	205d732a 	subscs	r7, sp, sl, lsr #6
 8013c50:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8013c54:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8013c58:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8013c5c:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8013c60:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8013c64:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8013c68:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8013c6c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013c70:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013c74:	000a7525 	andeq	r7, sl, r5, lsr #10
 8013c78:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013c7c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013c80:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8013c84:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8013c88:	6b636f6c 	blvs	98efa40 <__exidx_end+0x18dbd20>
 8013c8c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8013c90:	000a7469 	andeq	r7, sl, r9, ror #8
 8013c94:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013c98:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013c9c:	6f6c4270 	svcvs	0x006c4270
 8013ca0:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8013ca4:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013ca8:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8013cac:	7a697320 	bvc	9a70934 <__exidx_end+0x1a5cc14>
 8013cb0:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8013cb4:	6164202c 	cmnvs	r4, ip, lsr #32
 8013cb8:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8013cbc:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8013cc0:	3a656572 	bcc	996d290 <__exidx_end+0x1959570>
 8013cc4:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8013cc8:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013ccc:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013cd0:	203d2072 	eorscs	r2, sp, r2, ror r0
 8013cd4:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8013cd8:	6f6c4270 	svcvs	0x006c4270
 8013cdc:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8013ce0:	0a702520 	beq	9c1d168 <__exidx_end+0x1c09448>
 8013ce4:	00000000 	andeq	r0, r0, r0

08013ce8 <days_of_month>:
 8013ce8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013cec:	0000001c 	andeq	r0, r0, ip, lsl r0
 8013cf0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013cf4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013cf8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013cfc:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013d00:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013d04:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013d08:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013d0c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013d10:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013d14:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08013d18 <__exidx_start>:
 8013d18:	7fffdef8 	svcvc	0x00ffdef8
 8013d1c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08013d20 <.ARM.attributes>:
 8013d20:	00002e41 	andeq	r2, r0, r1, asr #28
 8013d24:	61656100 	cmnvs	r5, r0, lsl #2
 8013d28:	01006962 	tsteq	r0, r2, ror #18
 8013d2c:	00000024 	andeq	r0, r0, r4, lsr #32
 8013d30:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8013d34:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8013d38:	0600334d 	streq	r3, [r0], -sp, asr #6
 8013d3c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8013d40:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8013d44:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8013d48:	1a011803 	bne	8059d5c <__exidx_end+0x4603c>
 8013d4c:	Address 0x0000000008013d4c is out of bounds.


Disassembly of section .data:

20000000 <s_nDmxTransmitPeriod>:
20000000:	000061a8 	andeq	r6, r0, r8, lsr #3

20000004 <s_nDmxTransmitMabTime>:
20000004:	0000000c 	andeq	r0, r0, ip

20000008 <s_nDmxTransmitBreakTime>:
20000008:	0000005c 	andeq	r0, r0, ip, asr r0

2000000c <DmxConfigUdp::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <s_multicast_mac>:
20000010:	005e0001 	subseq	r0, lr, r1
20000014:	00000000 	andeq	r0, r0, r0

20000018 <MDNS::s_nHandle>:
20000018:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000001c <next_block>:
2000001c:	20015800 	andcs	r5, r1, r0, lsl #16

20000020 <s_block_bucket>:
20000020:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000030:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000040:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000050:	00000060 	andeq	r0, r0, r0, rrx
	...
20000060:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000070:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000080:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000090:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f0 <SystemCoreClock>:
200000f0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <guard variable for lightset::Data::Get()::instance>:
200006c8:	00000000 	andeq	r0, r0, r0

200006cc <lightset::Data::Get()::instance>:
	...

20000cd0 <E131Bridge::s_pThis>:
20000cd0:	00000000 	andeq	r0, r0, r0

20000cd4 <s_ReceivingMask>:
20000cd4:	00000000 	andeq	r0, r0, r0

20000cd8 <s_nPortsMax>:
20000cd8:	00000000 	andeq	r0, r0, r0

20000cdc <DmxSend::s_nStarted>:
20000cdc:	00000000 	andeq	r0, r0, r0

20000ce0 <s_RxBuffer>:
	...

20000ef0 <s_TxBuffer>:
	...

200010f4 <sv_PortState>:
200010f4:	00000000 	andeq	r0, r0, r0

200010f8 <sv_nRxDmxPackets>:
	...

20001108 <sv_nUartsSending>:
20001108:	00000000 	andeq	r0, r0, r0

2000110c <Dmx::s_pThis>:
2000110c:	00000000 	andeq	r0, r0, r0

20001110 <gv_RdmDataReceiveEnd>:
20001110:	00000000 	andeq	r0, r0, r0

20001114 <DmxConfigUdp::s_pUdpBuffer>:
20001114:	00000000 	andeq	r0, r0, r0

20001118 <SpiFlashStore::s_nWaitMillis>:
20001118:	00000000 	andeq	r0, r0, r0

2000111c <SpiFlashStore::s_SpiFlashData>:
	...

2000211c <SpiFlashStore::s_nStartAddress>:
2000211c:	00000000 	andeq	r0, r0, r0

20002120 <SpiFlashStore::s_bHaveFlashChip>:
20002120:	00000000 	andeq	r0, r0, r0

20002124 <SpiFlashStore::s_nSpiFlashStoreSize>:
20002124:	00000000 	andeq	r0, r0, r0

20002128 <SpiFlashStore::s_State>:
20002128:	00000000 	andeq	r0, r0, r0

2000212c <SpiFlashStore::s_pThis>:
2000212c:	00000000 	andeq	r0, r0, r0

20002130 <SpiFlashStore::s_bIsNew>:
20002130:	00000000 	andeq	r0, r0, r0

20002134 <StoreDisplayUdf::s_pThis>:
20002134:	00000000 	andeq	r0, r0, r0

20002138 <StoreDmxSend::s_pThis>:
20002138:	00000000 	andeq	r0, r0, r0

2000213c <StoreNetwork::s_pThis>:
2000213c:	00000000 	andeq	r0, r0, r0

20002140 <StoreRemoteConfig::s_pThis>:
20002140:	00000000 	andeq	r0, r0, r0

20002144 <StoreE131::s_pThis>:
20002144:	00000000 	andeq	r0, r0, r0

20002148 <FlashRom::s_pThis>:
20002148:	00000000 	andeq	r0, r0, r0

2000214c <flashrom::s_nAddress>:
2000214c:	00000000 	andeq	r0, r0, r0

20002150 <flashrom::s_State>:
20002150:	00000000 	andeq	r0, r0, r0

20002154 <flashrom::s_nPage>:
20002154:	00000000 	andeq	r0, r0, r0

20002158 <flashrom::s_pData>:
20002158:	00000000 	andeq	r0, r0, r0

2000215c <flashrom::s_isBank0>:
2000215c:	00000000 	andeq	r0, r0, r0

20002160 <flashrom::s_nLength>:
20002160:	00000000 	andeq	r0, r0, r0

20002164 <g_ip_info>:
	...

20002170 <g_mac_address>:
20002170:	00000000 	andeq	r0, r0, r0
	...

20002176 <s_is_dhcp>:
	...

20002178 <s_p>:
20002178:	00000000 	andeq	r0, r0, r0

2000217c <s_ticker>:
2000217c:	00000000 	andeq	r0, r0, r0

20002180 <s_mac_address>:
	...

20002188 <s_mac_address_arp_reply>:
	...

20002190 <s_id>:
20002190:	00000000 	andeq	r0, r0, r0

20002194 <s_recv_queue>:
	...

20002d04 <s_tcb>:
	...

20002d48 <s_tcp>:
	...

20003334 <broadcast_mask>:
20003334:	00000000 	andeq	r0, r0, r0

20003338 <gw_ip>:
20003338:	00000000 	andeq	r0, r0, r0

2000333c <on_network_mask>:
2000333c:	00000000 	andeq	r0, r0, r0

20003340 <s_id>:
20003340:	00000000 	andeq	r0, r0, r0

20003344 <s_ports_allowed>:
	...

20003364 <s_recv_queue>:
	...

20009004 <s_send_packet>:
	...

200095f0 <MDNS::s_nRemoteIp>:
200095f0:	00000000 	andeq	r0, r0, r0

200095f4 <MDNS::s_nRemotePort>:
200095f4:	00000000 	andeq	r0, r0, r0

200095f8 <MDNS::s_nMulticastIp>:
200095f8:	00000000 	andeq	r0, r0, r0

200095fc <MDNS::s_AnswerLocalIp>:
	...

20009800 <MDNS::s_ServiceRecords>:
	...

20009820 <MDNS::s_nBytesReceived>:
20009820:	00000000 	andeq	r0, r0, r0

20009824 <MDNS::s_ServiceRecordsData>:
	...

20009a28 <MDNS::s_pName>:
20009a28:	00000000 	andeq	r0, r0, r0

20009a2c <MDNS::s_pBuffer>:
20009a2c:	00000000 	andeq	r0, r0, r0

20009a30 <Network::s_pThis>:
20009a30:	00000000 	andeq	r0, r0, r0

20009a34 <s_arp_announce>:
	...

20009a60 <s_arp_reply>:
	...

20009a8c <s_arp_request>:
	...

20009ab8 <s_arp_records>:
	...

20009c38 <s_entry_current>:
20009c38:	00000000 	andeq	r0, r0, r0

20009c3c <s_dhcp_allocated_gw>:
20009c3c:	00000000 	andeq	r0, r0, r0

20009c40 <s_dhcp_allocated_ip>:
20009c40:	00000000 	andeq	r0, r0, r0

20009c44 <s_dhcp_allocated_netmask>:
20009c44:	00000000 	andeq	r0, r0, r0

20009c48 <s_dhcp_message>:
	...

20009e6c <s_dhcp_server_ip>:
20009e6c:	00000000 	andeq	r0, r0, r0

20009e70 <s_groups>:
	...

20009f90 <s_id>:
20009f90:	00000000 	andeq	r0, r0, r0

20009f94 <s_joins_allowed_index>:
20009f94:	00000000 	andeq	r0, r0, r0

20009f98 <s_leave>:
	...

20009fc8 <s_multicast_mac>:
	...

20009fd0 <s_report>:
	...

2000a000 <DisplayUdf::s_pThis>:
2000a000:	00000000 	andeq	r0, r0, r0

2000a004 <PropertiesConfig::s_Config>:
2000a004:	00000000 	andeq	r0, r0, r0

2000a008 <Display::s_pThis>:
2000a008:	00000000 	andeq	r0, r0, r0

2000a00c <_ClearBuffer>:
	...

2000a094 <Ssd1306::s_pThis>:
2000a094:	00000000 	andeq	r0, r0, r0

2000a098 <FirmwareVersion::s_FirmwareVersion>:
	...

2000a0ae <FirmwareVersion::s_Print>:
	...

2000a0f0 <FirmwareVersion::s_pThis>:
2000a0f0:	00000000 	andeq	r0, r0, r0

2000a0f4 <LedBlink::s_pThis>:
2000a0f4:	00000000 	andeq	r0, r0, r0

2000a0f8 <Hardware::s_pThis>:
2000a0f8:	00000000 	andeq	r0, r0, r0

2000a0fc <outptr>:
2000a0fc:	00000000 	andeq	r0, r0, r0

2000a100 <last.0>:
	...

2000a108 <s_micros>:
	...

2000a110 <set_timer>:
2000a110:	00000000 	andeq	r0, r0, r0

2000a114 <s_nSysTickMillis>:
2000a114:	00000000 	andeq	r0, r0, r0

2000a118 <s_nAddress>:
2000a118:	00000000 	andeq	r0, r0, r0

2000a11c <dma_current_ptp_rxdesc>:
2000a11c:	00000000 	andeq	r0, r0, r0

2000a120 <dma_current_ptp_txdesc>:
2000a120:	00000000 	andeq	r0, r0, r0

2000a124 <dma_current_rxdesc>:
2000a124:	00000000 	andeq	r0, r0, r0

2000a128 <dma_current_txdesc>:
2000a128:	00000000 	andeq	r0, r0, r0

2000a12c <enet_initpara>:
	...

2000a168 <rx_buff>:
	...

2000d108 <rxdesc_tab>:
	...

2000d188 <tx_buff>:
	...

2000dd70 <txdesc_tab>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
