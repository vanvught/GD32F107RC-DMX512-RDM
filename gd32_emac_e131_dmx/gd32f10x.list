
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp, ip, sp, lr}
 8007008:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800700c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007010:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007014:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007018:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 800702c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007030:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800703c:	0800fd9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, ip, sp, lr, pc}
 8007040:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007044:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007048:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800704c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007050:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007054:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007058:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800705c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007060:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007064:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007068:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800706c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007070:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007074:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007078:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800707c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007080:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007084:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007088:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800708c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007090:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007094:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007098:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800709c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070a8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ac:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070b0:	08009cbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, fp, ip, pc}
 80070b4:	08009d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, ip, pc}
 80070b8:	08009dc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, pc}
 80070bc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070c8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070cc:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070d8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070dc:	08009a65 	stmdaeq	r0, {r0, r2, r5, r6, r9, fp, ip, pc}
 80070e0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070e8:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070ec:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f0:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 80070f4:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
	...
 8007100:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800710c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007110:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007114:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007118:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800711c:	08009de1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, fp, ip, pc}
 8007120:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007124:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007128:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800712c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007130:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007134:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007138:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800713c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007140:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007144:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 8007148:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}
 800714c:	08007b65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fcad 	bl	800db00 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f004 ffc8 	bl	800c144 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 febe 	bl	800df40 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001bd8 	ldrdcs	r1, [r0], -r8
 80071e8:	20001bcc 	andcs	r1, r0, ip, asr #23
 80071ec:	20001bde 	ldrdcs	r1, [r0], -lr

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 bd86 	b.w	800dd10 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001bde 	ldrdcs	r1, [r0], -lr

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001be8 	andcs	r1, r0, r8, ror #23

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f004 ffe3 	bl	800c1f8 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f004 ffd7 	bl	800c1f8 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	200027b0 			; <UNDEFINED> instruction: 0x200027b0
 800725c:	20001bd8 	ldrdcs	r1, [r0], -r8
 8007260:	20001bcc 	andcs	r1, r0, ip, asr #23
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f005 f936 	bl	800c500 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f005 f957 	bl	800c550 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20002dcc 	andcs	r2, r0, ip, asr #27
 80072ac:	20002dac 	andcs	r2, r0, ip, lsr #27
 80072b0:	20008a6c 	andcs	r8, r0, ip, ror #20
 80072b4:	20002da8 	andcs	r2, r0, r8, lsr #27
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f006 fa96 	bl	800d808 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f006 fa83 	bl	800d808 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f006 fa77 	bl	800d808 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f006 fa66 	bl	800d808 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f006 fa5a 	bl	800d808 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f006 fa4e 	bl	800d808 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f006 ba53 	b.w	800d81c <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	20009502 	andcs	r9, r0, r2, lsl #10
 8007394:	200094fc 	strdcs	r9, [r0], -ip
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20009512 	andcs	r9, r0, r2, lsl r5
 80073a4:	2000951c 	andcs	r9, r0, ip, lsl r5
 80073a8:	2000955a 	andcs	r9, r0, sl, asr r5
 80073ac:	20009554 	andcs	r9, r0, r4, asr r5
 80073b0:	2000956a 	andcs	r9, r0, sl, ror #10
 80073b4:	20009574 	andcs	r9, r0, r4, ror r5
 80073b8:	20009528 	andcs	r9, r0, r8, lsr #10

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20009700 	andcs	r9, r0, r0, lsl #14
 80073ec:	20009584 	andcs	r9, r0, r4, lsl #11

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 fcf0 	bl	800de00 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 fc9c 	bl	800dd6c <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 fc82 	bl	800dd6c <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20009938 	andcs	r9, r0, r8, lsr r9
 8007490:	20009a5c 	andcs	r9, r0, ip, asr sl
 8007494:	20009a98 	mulcs	r0, r8, sl
 8007498:	20009a58 	andcs	r9, r0, r8, asr sl
 800749c:	20009a90 	mulcs	r0, r0, sl
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009a60 	andcs	r9, r0, r0, ror #20
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 fcfa 	bl	800deb8 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20009938 	andcs	r9, r0, r8, lsr r9

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f008 fbed 	bl	800fce0 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f008 fc1a 	bl	800fd40 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f008 fc17 	bl	800fd40 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	08011d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, ip}
 800751c:	08013abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f009 fa5b 	bl	80109e0 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f009 fa65 	bl	8010a08 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 bdef 	b.w	800c124 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20001be0 	andcs	r1, r0, r0, ror #23

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 fe4b 	bl	800c20c <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 fe2c 	bl	800c1f8 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 fe1d 	bl	800c1f8 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 fe15 	bl	800c1f8 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 febe 	bl	800c3a4 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 fdd6 	bl	800c1f8 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fdcf 	bl	800c1f8 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 fdee 	bl	800c258 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 fd89 	bl	800c1c4 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 fd6a 	bl	800c1c4 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 fda7 	bl	800c258 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 fe44 	bl	800c3a4 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 fe22 	bl	800c3a4 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 fd31 	bl	800c1f8 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 fd4d 	bl	800c258 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 fd2f 	bl	800c258 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	2000276c 	andcs	r2, r0, ip, ror #14
 8007814:	20002774 	andcs	r2, r0, r4, ror r7
 8007818:	20001bfc 	strdcs	r1, [r0], -ip
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 fca5 	bl	800c1c4 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 fce0 	bl	800c258 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	2000276c 	andcs	r2, r0, ip, ror #14

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 fdee 	bl	800c500 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 fde7 	bl	800c500 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20002dac 	andcs	r2, r0, ip, lsr #27
 800795c:	20002dcc 	andcs	r2, r0, ip, asr #27

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f005 bf5e 	b.w	800d830 <arp_handle_request>
 8007974:	f005 bf84 	b.w	800d880 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051e 	add.w	r5, r0, #30
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0622 	add.w	r6, r0, #34	; 0x22
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079ba:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f813 9b01 	ldrb.w	r9, [r3], #1
 80079f8:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009a5c 	andcs	r9, r0, ip, asr sl
 8007a14:	20009938 	andcs	r9, r0, r8, lsr r9

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f006 fa8d 	bl	800df84 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f006 fa88 	bl	800df84 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f006 fa7d 	bl	800df84 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f006 fa72 	bl	800df84 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f006 fa53 	bl	800df52 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f006 fa46 	bl	800df52 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f008 ff9d 	bl	8010a10 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20001bd8 	ldrdcs	r1, [r0], -r8
 8007ae0:	20001bcc 	andcs	r1, r0, ip, asr #23

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f009 ffa8 	bl	8011a58 <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <Reset_Handler>:
 8007b18:	480c      	ldr	r0, [pc, #48]	; (8007b4c <Zerobss+0x10>)
 8007b1a:	4685      	mov	sp, r0
 8007b1c:	2100      	movs	r1, #0
 8007b1e:	e003      	b.n	8007b28 <DataInit>

08007b20 <CopyData>:
 8007b20:	4b0b      	ldr	r3, [pc, #44]	; (8007b50 <Zerobss+0x14>)
 8007b22:	585b      	ldr	r3, [r3, r1]
 8007b24:	5043      	str	r3, [r0, r1]
 8007b26:	3104      	adds	r1, #4

08007b28 <DataInit>:
 8007b28:	480a      	ldr	r0, [pc, #40]	; (8007b54 <Zerobss+0x18>)
 8007b2a:	4b0b      	ldr	r3, [pc, #44]	; (8007b58 <Zerobss+0x1c>)
 8007b2c:	1842      	adds	r2, r0, r1
 8007b2e:	429a      	cmp	r2, r3
 8007b30:	d3f6      	bcc.n	8007b20 <CopyData>
 8007b32:	4a0a      	ldr	r2, [pc, #40]	; (8007b5c <Zerobss+0x20>)
 8007b34:	e002      	b.n	8007b3c <Zerobss>

08007b36 <FillZerobss>:
 8007b36:	2300      	movs	r3, #0
 8007b38:	f842 3b04 	str.w	r3, [r2], #4

08007b3c <Zerobss>:
 8007b3c:	4b08      	ldr	r3, [pc, #32]	; (8007b60 <Zerobss+0x24>)
 8007b3e:	429a      	cmp	r2, r3
 8007b40:	d3f9      	bcc.n	8007b36 <FillZerobss>
 8007b42:	f008 f933 	bl	800fdac <SystemInit>
 8007b46:	f000 f909 	bl	8007d5c <main>
 8007b4a:	4770      	bx	lr
 8007b4c:	20018000 	andcs	r8, r1, r0
 8007b50:	08013bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, ip, sp}
 8007b54:	20000000 	andcs	r0, r0, r0
 8007b58:	200000f8 	strdcs	r0, [r0], -r8
 8007b5c:	200000f8 	strdcs	r0, [r0], -r8
 8007b60:	2000d85c 	andcs	sp, r0, ip, asr r8

08007b64 <ADC0_1_IRQHandler>:
 8007b64:	e7fe      	b.n	8007b64 <ADC0_1_IRQHandler>

08007b66 <memcmp>:
 8007b66:	b510      	push	{r4, lr}
 8007b68:	3901      	subs	r1, #1
 8007b6a:	4402      	add	r2, r0
 8007b6c:	4290      	cmp	r0, r2
 8007b6e:	d101      	bne.n	8007b74 <memcmp+0xe>
 8007b70:	2000      	movs	r0, #0
 8007b72:	e005      	b.n	8007b80 <memcmp+0x1a>
 8007b74:	7803      	ldrb	r3, [r0, #0]
 8007b76:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007b7a:	42a3      	cmp	r3, r4
 8007b7c:	d001      	beq.n	8007b82 <memcmp+0x1c>
 8007b7e:	1b18      	subs	r0, r3, r4
 8007b80:	bd10      	pop	{r4, pc}
 8007b82:	3001      	adds	r0, #1
 8007b84:	e7f2      	b.n	8007b6c <memcmp+0x6>

08007b86 <DisplayHandler::~DisplayHandler()>:
 8007b86:	4770      	bx	lr

08007b88 <E131Reboot::~E131Reboot()>:
 8007b88:	4770      	bx	lr

08007b8a <dmxconfigudp::atoi(char const*, unsigned char)>:
 8007b8a:	b530      	push	{r4, r5, lr}
 8007b8c:	1e42      	subs	r2, r0, #1
 8007b8e:	250a      	movs	r5, #10
 8007b90:	2000      	movs	r0, #0
 8007b92:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8007b96:	3b30      	subs	r3, #48	; 0x30
 8007b98:	b2dc      	uxtb	r4, r3
 8007b9a:	2c09      	cmp	r4, #9
 8007b9c:	d805      	bhi.n	8007baa <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8007b9e:	3901      	subs	r1, #1
 8007ba0:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007ba4:	fb05 3000 	mla	r0, r5, r0, r3
 8007ba8:	d1f3      	bne.n	8007b92 <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8007baa:	bd30      	pop	{r4, r5, pc}

08007bac <E131Reboot::Run()>:
 8007bac:	b510      	push	{r4, lr}
 8007bae:	4c07      	ldr	r4, [pc, #28]	; (8007bcc <E131Reboot::Run()+0x20>)
 8007bb0:	6820      	ldr	r0, [r4, #0]
 8007bb2:	f000 fc6d 	bl	8008490 <E131Bridge::Stop()>
 8007bb6:	6823      	ldr	r3, [r4, #0]
 8007bb8:	6858      	ldr	r0, [r3, #4]
 8007bba:	b128      	cbz	r0, 8007bc8 <E131Reboot::Run()+0x1c>
 8007bbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007bc0:	6803      	ldr	r3, [r0, #0]
 8007bc2:	2101      	movs	r1, #1
 8007bc4:	695b      	ldr	r3, [r3, #20]
 8007bc6:	4718      	bx	r3
 8007bc8:	bd10      	pop	{r4, pc}
 8007bca:	bf00      	nop
 8007bcc:	20000704 	andcs	r0, r0, r4, lsl #14

08007bd0 <E131Reboot::~E131Reboot()>:
 8007bd0:	b510      	push	{r4, lr}
 8007bd2:	4604      	mov	r4, r0
 8007bd4:	f007 fc4e 	bl	800f474 <operator delete(void*)>
 8007bd8:	4620      	mov	r0, r4
 8007bda:	bd10      	pop	{r4, pc}

08007bdc <DisplayHandler::~DisplayHandler()>:
 8007bdc:	b510      	push	{r4, lr}
 8007bde:	4604      	mov	r4, r0
 8007be0:	f007 fc48 	bl	800f474 <operator delete(void*)>
 8007be4:	4620      	mov	r0, r4
 8007be6:	bd10      	pop	{r4, pc}

08007be8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007be8:	b110      	cbz	r0, 8007bf0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007bea:	6803      	ldr	r3, [r0, #0]
 8007bec:	6a1b      	ldr	r3, [r3, #32]
 8007bee:	4718      	bx	r3
 8007bf0:	4770      	bx	lr

08007bf2 <Display::PutChar(int) [clone .isra.0]>:
 8007bf2:	b110      	cbz	r0, 8007bfa <Display::PutChar(int) [clone .isra.0]+0x8>
 8007bf4:	6803      	ldr	r3, [r0, #0]
 8007bf6:	695b      	ldr	r3, [r3, #20]
 8007bf8:	4718      	bx	r3
 8007bfa:	4770      	bx	lr

08007bfc <DisplayHandler::Print(unsigned int)>:
 8007bfc:	b538      	push	{r3, r4, r5, lr}
 8007bfe:	7903      	ldrb	r3, [r0, #4]
 8007c00:	b1f3      	cbz	r3, 8007c40 <DisplayHandler::Print(unsigned int)+0x44>
 8007c02:	2904      	cmp	r1, #4
 8007c04:	bf98      	it	ls
 8007c06:	4b0f      	ldrls	r3, [pc, #60]	; (8007c44 <DisplayHandler::Print(unsigned int)+0x48>)
 8007c08:	4d0f      	ldr	r5, [pc, #60]	; (8007c48 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007c0a:	bf98      	it	ls
 8007c0c:	5c5c      	ldrbls	r4, [r3, r1]
 8007c0e:	682b      	ldr	r3, [r5, #0]
 8007c10:	bf88      	it	hi
 8007c12:	2455      	movhi	r4, #85	; 0x55
 8007c14:	6998      	ldr	r0, [r3, #24]
 8007c16:	b178      	cbz	r0, 8007c38 <DisplayHandler::Print(unsigned int)+0x3c>
 8007c18:	7901      	ldrb	r1, [r0, #4]
 8007c1a:	3901      	subs	r1, #1
 8007c1c:	b2c9      	uxtb	r1, r1
 8007c1e:	b168      	cbz	r0, 8007c3c <DisplayHandler::Print(unsigned int)+0x40>
 8007c20:	7942      	ldrb	r2, [r0, #5]
 8007c22:	3a01      	subs	r2, #1
 8007c24:	b2d2      	uxtb	r2, r2
 8007c26:	f7ff ffdf 	bl	8007be8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c2a:	682b      	ldr	r3, [r5, #0]
 8007c2c:	4621      	mov	r1, r4
 8007c2e:	6998      	ldr	r0, [r3, #24]
 8007c30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007c34:	f7ff bfdd 	b.w	8007bf2 <Display::PutChar(int) [clone .isra.0]>
 8007c38:	4601      	mov	r1, r0
 8007c3a:	e7ee      	b.n	8007c1a <DisplayHandler::Print(unsigned int)+0x1e>
 8007c3c:	4602      	mov	r2, r0
 8007c3e:	e7f0      	b.n	8007c22 <DisplayHandler::Print(unsigned int)+0x26>
 8007c40:	bd38      	pop	{r3, r4, r5, pc}
 8007c42:	bf00      	nop
 8007c44:	08011dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, ip}
 8007c48:	20009ad0 	ldrdcs	r9, [r0], -r0

08007c4c <Display::SetSleep(bool)>:
 8007c4c:	b538      	push	{r3, r4, r5, lr}
 8007c4e:	4604      	mov	r4, r0
 8007c50:	6980      	ldr	r0, [r0, #24]
 8007c52:	460d      	mov	r5, r1
 8007c54:	b138      	cbz	r0, 8007c66 <Display::SetSleep(bool)+0x1a>
 8007c56:	6803      	ldr	r3, [r0, #0]
 8007c58:	7421      	strb	r1, [r4, #16]
 8007c5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c5c:	4798      	blx	r3
 8007c5e:	b915      	cbnz	r5, 8007c66 <Display::SetSleep(bool)+0x1a>
 8007c60:	4b01      	ldr	r3, [pc, #4]	; (8007c68 <Display::SetSleep(bool)+0x1c>)
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	6063      	str	r3, [r4, #4]
 8007c66:	bd38      	pop	{r3, r4, r5, pc}
 8007c68:	20009bdc 	ldrdcs	r9, [r0], -ip

08007c6c <Display::TextStatus(char const*)>:
 8007c6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c70:	4604      	mov	r4, r0
 8007c72:	6980      	ldr	r0, [r0, #24]
 8007c74:	460d      	mov	r5, r1
 8007c76:	b360      	cbz	r0, 8007cd2 <Display::TextStatus(char const*)+0x66>
 8007c78:	7947      	ldrb	r7, [r0, #5]
 8007c7a:	2100      	movs	r1, #0
 8007c7c:	1e7e      	subs	r6, r7, #1
 8007c7e:	b2f6      	uxtb	r6, r6
 8007c80:	4632      	mov	r2, r6
 8007c82:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007c86:	f04f 0800 	mov.w	r8, #0
 8007c8a:	f7ff ffad 	bl	8007be8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007c8e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007c92:	45c1      	cmp	r9, r8
 8007c94:	69a0      	ldr	r0, [r4, #24]
 8007c96:	d816      	bhi.n	8007cc6 <Display::TextStatus(char const*)+0x5a>
 8007c98:	4632      	mov	r2, r6
 8007c9a:	2100      	movs	r1, #0
 8007c9c:	f7ff ffa4 	bl	8007be8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007ca0:	69a0      	ldr	r0, [r4, #24]
 8007ca2:	b1b0      	cbz	r0, 8007cd2 <Display::TextStatus(char const*)+0x66>
 8007ca4:	2300      	movs	r3, #0
 8007ca6:	7901      	ldrb	r1, [r0, #4]
 8007ca8:	5cea      	ldrb	r2, [r5, r3]
 8007caa:	b11a      	cbz	r2, 8007cb4 <Display::TextStatus(char const*)+0x48>
 8007cac:	1c5a      	adds	r2, r3, #1
 8007cae:	4299      	cmp	r1, r3
 8007cb0:	4613      	mov	r3, r2
 8007cb2:	dcf9      	bgt.n	8007ca8 <Display::TextStatus(char const*)+0x3c>
 8007cb4:	6802      	ldr	r2, [r0, #0]
 8007cb6:	4639      	mov	r1, r7
 8007cb8:	69d4      	ldr	r4, [r2, #28]
 8007cba:	b2db      	uxtb	r3, r3
 8007cbc:	462a      	mov	r2, r5
 8007cbe:	46a4      	mov	ip, r4
 8007cc0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007cc4:	4760      	bx	ip
 8007cc6:	2120      	movs	r1, #32
 8007cc8:	f7ff ff93 	bl	8007bf2 <Display::PutChar(int) [clone .isra.0]>
 8007ccc:	f108 0801 	add.w	r8, r8, #1
 8007cd0:	e7df      	b.n	8007c92 <Display::TextStatus(char const*)+0x26>
 8007cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007cd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007cd8:	4605      	mov	r5, r0
 8007cda:	461e      	mov	r6, r3
 8007cdc:	460f      	mov	r7, r1
 8007cde:	4614      	mov	r4, r2
 8007ce0:	f7ff ffc4 	bl	8007c6c <Display::TextStatus(char const*)>
 8007ce4:	7c6b      	ldrb	r3, [r5, #17]
 8007ce6:	b19b      	cbz	r3, 8007d10 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8007ce8:	43e2      	mvns	r2, r4
 8007cea:	2312      	movs	r3, #18
 8007cec:	7a28      	ldrb	r0, [r5, #8]
 8007cee:	f88d 3004 	strb.w	r3, [sp, #4]
 8007cf2:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007cf6:	f88d 3005 	strb.w	r3, [sp, #5]
 8007cfa:	f88d 2006 	strb.w	r2, [sp, #6]
 8007cfe:	f008 ff1f 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 8007d02:	68e8      	ldr	r0, [r5, #12]
 8007d04:	f008 ff14 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 8007d08:	2103      	movs	r1, #3
 8007d0a:	a801      	add	r0, sp, #4
 8007d0c:	f008 ff1e 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 8007d10:	1c73      	adds	r3, r6, #1
 8007d12:	d006      	beq.n	8007d22 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8007d14:	4639      	mov	r1, r7
 8007d16:	4630      	mov	r0, r6
 8007d18:	b003      	add	sp, #12
 8007d1a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8007d1e:	f007 ba47 	b.w	800f1b0 <console_status>
 8007d22:	b003      	add	sp, #12
 8007d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007d28 <display::timeout::gpio_init()>:
 8007d28:	b510      	push	{r4, lr}
 8007d2a:	f240 6003 	movw	r0, #1539	; 0x603
 8007d2e:	f008 fa83 	bl	8010238 <rcu_periph_clock_enable>
 8007d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d36:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8007d3a:	2203      	movs	r2, #3
 8007d3c:	2148      	movs	r1, #72	; 0x48
 8007d3e:	4801      	ldr	r0, [pc, #4]	; (8007d44 <display::timeout::gpio_init()+0x1c>)
 8007d40:	f008 b9e2 	b.w	8010108 <gpio_init>
 8007d44:	40010c00 	andmi	r0, r1, r0, lsl #24

08007d48 <display::timeout::gpio_renew()>:
 8007d48:	4b03      	ldr	r3, [pc, #12]	; (8007d58 <display::timeout::gpio_renew()+0x10>)
 8007d4a:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8007d4e:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 8007d52:	f3c0 3080 	ubfx	r0, r0, #14, #1
 8007d56:	4770      	bx	lr
 8007d58:	40010000 	andmi	r0, r1, r0

08007d5c <main>:
 8007d5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007d60:	2501      	movs	r5, #1
 8007d62:	f6ad 5d6c 	subw	sp, sp, #3436	; 0xd6c
 8007d66:	a80d      	add	r0, sp, #52	; 0x34
 8007d68:	f007 fad6 	bl	800f318 <Hardware::Hardware()>
 8007d6c:	a854      	add	r0, sp, #336	; 0x150
 8007d6e:	f005 f93b 	bl	800cfe8 <Network::Network()>
 8007d72:	a815      	add	r0, sp, #84	; 0x54
 8007d74:	f007 fa7a 	bl	800f26c <LedBlink::LedBlink()>
 8007d78:	a83e      	add	r0, sp, #248	; 0xf8
 8007d7a:	f006 f95b 	bl	800e034 <DisplayUdf::DisplayUdf()>
 8007d7e:	4ab0      	ldr	r2, [pc, #704]	; (8008040 <main+0x2e4>)
 8007d80:	4bb0      	ldr	r3, [pc, #704]	; (8008044 <main+0x2e8>)
 8007d82:	49b1      	ldr	r1, [pc, #708]	; (8008048 <main+0x2ec>)
 8007d84:	a802      	add	r0, sp, #8
 8007d86:	f007 fa2b 	bl	800f1e0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007d8a:	a803      	add	r0, sp, #12
 8007d8c:	f004 f852 	bl	800be34 <FlashRom::FlashRom()>
 8007d90:	f8df 82b8 	ldr.w	r8, [pc, #696]	; 800804c <main+0x2f0>
 8007d94:	a804      	add	r0, sp, #16
 8007d96:	f003 fdd3 	bl	800b940 <SpiFlashStore::SpiFlashStore()>
 8007d9a:	49ad      	ldr	r1, [pc, #692]	; (8008050 <main+0x2f4>)
 8007d9c:	a802      	add	r0, sp, #8
 8007d9e:	f007 fa57 	bl	800f250 <FirmwareVersion::Print(char const*)>
 8007da2:	2004      	movs	r0, #4
 8007da4:	f8c8 5010 	str.w	r5, [r8, #16]
 8007da8:	f007 fb68 	bl	800f47c <operator new(unsigned int)>
 8007dac:	4ba9      	ldr	r3, [pc, #676]	; (8008054 <main+0x2f8>)
 8007dae:	900d      	str	r0, [sp, #52]	; 0x34
 8007db0:	6003      	str	r3, [r0, #0]
 8007db2:	2008      	movs	r0, #8
 8007db4:	f007 fb62 	bl	800f47c <operator new(unsigned int)>
 8007db8:	4ba7      	ldr	r3, [pc, #668]	; (8008058 <main+0x2fc>)
 8007dba:	2400      	movs	r4, #0
 8007dbc:	6003      	str	r3, [r0, #0]
 8007dbe:	4ba7      	ldr	r3, [pc, #668]	; (800805c <main+0x300>)
 8007dc0:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	49a6      	ldr	r1, [pc, #664]	; (8008060 <main+0x304>)
 8007dc8:	3b00      	subs	r3, #0
 8007dca:	bf18      	it	ne
 8007dcc:	2301      	movne	r3, #1
 8007dce:	9017      	str	r0, [sp, #92]	; 0x5c
 8007dd0:	7103      	strb	r3, [r0, #4]
 8007dd2:	2303      	movs	r3, #3
 8007dd4:	a83e      	add	r0, sp, #248	; 0xf8
 8007dd6:	f7ff ff7e 	bl	8007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007dda:	a80f      	add	r0, sp, #60	; 0x3c
 8007ddc:	f003 ffea 	bl	800bdb4 <StoreNetwork::StoreNetwork()>
 8007de0:	ab10      	add	r3, sp, #64	; 0x40
 8007de2:	a90f      	add	r1, sp, #60	; 0x3c
 8007de4:	a854      	add	r0, sp, #336	; 0x150
 8007de6:	9381      	str	r3, [sp, #516]	; 0x204
 8007de8:	f005 f956 	bl	800d098 <Network::Init(NetworkParamsStore*)>
 8007dec:	a854      	add	r0, sp, #336	; 0x150
 8007dee:	f005 fa87 	bl	800d300 <Network::Print()>
 8007df2:	2303      	movs	r3, #3
 8007df4:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8007df8:	499a      	ldr	r1, [pc, #616]	; (8008064 <main+0x308>)
 8007dfa:	a83e      	add	r0, sp, #248	; 0xf8
 8007dfc:	f7ff ff6b 	bl	8007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007e00:	a805      	add	r0, sp, #20
 8007e02:	f004 fd33 	bl	800c86c <MDNS::MDNS()>
 8007e06:	a805      	add	r0, sp, #20
 8007e08:	f004 fdf0 	bl	800c9ec <MDNS::Start()>
 8007e0c:	f642 1305 	movw	r3, #10501	; 0x2905
 8007e10:	4621      	mov	r1, r4
 8007e12:	4a95      	ldr	r2, [pc, #596]	; (8008068 <main+0x30c>)
 8007e14:	e9cd 4400 	strd	r4, r4, [sp]
 8007e18:	a805      	add	r0, sp, #20
 8007e1a:	f004 ff51 	bl	800ccc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007e1e:	4b93      	ldr	r3, [pc, #588]	; (800806c <main+0x310>)
 8007e20:	4621      	mov	r1, r4
 8007e22:	4a93      	ldr	r2, [pc, #588]	; (8008070 <main+0x314>)
 8007e24:	e9cd 5300 	strd	r5, r3, [sp]
 8007e28:	a805      	add	r0, sp, #20
 8007e2a:	2350      	movs	r3, #80	; 0x50
 8007e2c:	f004 ff48 	bl	800ccc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8007e30:	a805      	add	r0, sp, #20
 8007e32:	f005 f88b 	bl	800cf4c <MDNS::Print()>
 8007e36:	2303      	movs	r3, #3
 8007e38:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8007e3c:	498d      	ldr	r1, [pc, #564]	; (8008074 <main+0x318>)
 8007e3e:	a83e      	add	r0, sp, #248	; 0xf8
 8007e40:	f7ff ff49 	bl	8007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007e44:	a806      	add	r0, sp, #24
 8007e46:	f003 ff09 	bl	800bc5c <StoreE131::StoreE131()>
 8007e4a:	a906      	add	r1, sp, #24
 8007e4c:	a822      	add	r0, sp, #136	; 0x88
 8007e4e:	f001 f9bd 	bl	80091cc <E131Params::E131Params(E131ParamsStore*)>
 8007e52:	a886      	add	r0, sp, #536	; 0x218
 8007e54:	f000 fb58 	bl	8008508 <E131Bridge::E131Bridge()>
 8007e58:	a822      	add	r0, sp, #136	; 0x88
 8007e5a:	f001 f9d7 	bl	800920c <E131Params::Load()>
 8007e5e:	b130      	cbz	r0, 8007e6e <main+0x112>
 8007e60:	a822      	add	r0, sp, #136	; 0x88
 8007e62:	a986      	add	r1, sp, #536	; 0x218
 8007e64:	f001 fba5 	bl	80095b2 <E131Params::Set(E131Bridge*)>
 8007e68:	a822      	add	r0, sp, #136	; 0x88
 8007e6a:	f001 fbbf 	bl	80095ec <E131Params::Dump()>
 8007e6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007e70:	06db      	lsls	r3, r3, #27
 8007e72:	d509      	bpl.n	8007e88 <main+0x12c>
 8007e74:	f89d 20a6 	ldrb.w	r2, [sp, #166]	; 0xa6
 8007e78:	2100      	movs	r1, #0
 8007e7a:	f8bd 3093 	ldrh.w	r3, [sp, #147]	; 0x93
 8007e7e:	f002 0201 	and.w	r2, r2, #1
 8007e82:	a886      	add	r0, sp, #536	; 0x218
 8007e84:	f000 fbcc 	bl	8008620 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8007e88:	a807      	add	r0, sp, #28
 8007e8a:	f003 feb3 	bl	800bbf4 <StoreDmxSend::StoreDmxSend()>
 8007e8e:	a907      	add	r1, sp, #28
 8007e90:	a811      	add	r0, sp, #68	; 0x44
 8007e92:	f001 fc8b 	bl	80097ac <DmxParams::DmxParams(DmxParamsStore*)>
 8007e96:	a81b      	add	r0, sp, #108	; 0x6c
 8007e98:	f002 f8dc 	bl	800a054 <Dmx::Dmx()>
 8007e9c:	a811      	add	r0, sp, #68	; 0x44
 8007e9e:	f001 fc91 	bl	80097c4 <DmxParams::Load()>
 8007ea2:	b130      	cbz	r0, 8007eb2 <main+0x156>
 8007ea4:	a811      	add	r0, sp, #68	; 0x44
 8007ea6:	f001 fddb 	bl	8009a60 <DmxParams::Dump()>
 8007eaa:	a91b      	add	r1, sp, #108	; 0x6c
 8007eac:	a811      	add	r0, sp, #68	; 0x44
 8007eae:	f001 fdad 	bl	8009a0c <DmxParams::Set(Dmx*)>
 8007eb2:	4b71      	ldr	r3, [pc, #452]	; (8008078 <main+0x31c>)
 8007eb4:	ac08      	add	r4, sp, #32
 8007eb6:	4620      	mov	r0, r4
 8007eb8:	9308      	str	r3, [sp, #32]
 8007eba:	f001 fc1d 	bl	80096f8 <DmxSend::Print()>
 8007ebe:	f89d 5723 	ldrb.w	r5, [sp, #1827]	; 0x723
 8007ec2:	b165      	cbz	r5, 8007ede <main+0x182>
 8007ec4:	2001      	movs	r0, #1
 8007ec6:	9487      	str	r4, [sp, #540]	; 0x21c
 8007ec8:	f007 fad8 	bl	800f47c <operator new(unsigned int)>
 8007ecc:	4b6b      	ldr	r3, [pc, #428]	; (800807c <main+0x320>)
 8007ece:	4605      	mov	r5, r0
 8007ed0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8007ed4:	6818      	ldr	r0, [r3, #0]
 8007ed6:	f005 f8b7 	bl	800d048 <Network::Begin(unsigned short)>
 8007eda:	4b69      	ldr	r3, [pc, #420]	; (8008080 <main+0x324>)
 8007edc:	6018      	str	r0, [r3, #0]
 8007ede:	ac09      	add	r4, sp, #36	; 0x24
 8007ee0:	4620      	mov	r0, r4
 8007ee2:	f000 f9e1 	bl	80082a8 <DmxInput::DmxInput()>
 8007ee6:	f89d 3722 	ldrb.w	r3, [sp, #1826]	; 0x722
 8007eea:	b103      	cbz	r3, 8007eee <main+0x192>
 8007eec:	948b      	str	r4, [sp, #556]	; 0x22c
 8007eee:	f89d 4723 	ldrb.w	r4, [sp, #1827]	; 0x723
 8007ef2:	a886      	add	r0, sp, #536	; 0x218
 8007ef4:	441c      	add	r4, r3
 8007ef6:	f001 f8b3 	bl	8009060 <E131Bridge::Print()>
 8007efa:	f89d 30a6 	ldrb.w	r3, [sp, #166]	; 0xa6
 8007efe:	4a61      	ldr	r2, [pc, #388]	; (8008084 <main+0x328>)
 8007f00:	f013 0f01 	tst.w	r3, #1
 8007f04:	4b60      	ldr	r3, [pc, #384]	; (8008088 <main+0x32c>)
 8007f06:	4961      	ldr	r1, [pc, #388]	; (800808c <main+0x330>)
 8007f08:	bf18      	it	ne
 8007f0a:	461a      	movne	r2, r3
 8007f0c:	a83e      	add	r0, sp, #248	; 0xf8
 8007f0e:	f006 f8a7 	bl	800e060 <DisplayUdf::SetTitle(char const*, ...)>
 8007f12:	2202      	movs	r2, #2
 8007f14:	a83e      	add	r0, sp, #248	; 0xf8
 8007f16:	4611      	mov	r1, r2
 8007f18:	f006 f9f8 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f1c:	2207      	movs	r2, #7
 8007f1e:	2103      	movs	r1, #3
 8007f20:	a83e      	add	r0, sp, #248	; 0xf8
 8007f22:	f006 f9f3 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f26:	2203      	movs	r2, #3
 8007f28:	2104      	movs	r1, #4
 8007f2a:	a83e      	add	r0, sp, #248	; 0xf8
 8007f2c:	f006 f9ee 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f30:	2208      	movs	r2, #8
 8007f32:	2105      	movs	r1, #5
 8007f34:	a83e      	add	r0, sp, #248	; 0xf8
 8007f36:	f006 f9e9 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f3a:	2201      	movs	r2, #1
 8007f3c:	2106      	movs	r1, #6
 8007f3e:	a83e      	add	r0, sp, #248	; 0xf8
 8007f40:	f006 f9e4 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8007f44:	a80a      	add	r0, sp, #40	; 0x28
 8007f46:	f003 fe21 	bl	800bb8c <StoreDisplayUdf::StoreDisplayUdf()>
 8007f4a:	a90a      	add	r1, sp, #40	; 0x28
 8007f4c:	a834      	add	r0, sp, #208	; 0xd0
 8007f4e:	f006 fa1f 	bl	800e390 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8007f52:	a834      	add	r0, sp, #208	; 0xd0
 8007f54:	f006 fa29 	bl	800e3aa <DisplayUdfParams::Load()>
 8007f58:	b130      	cbz	r0, 8007f68 <main+0x20c>
 8007f5a:	a834      	add	r0, sp, #208	; 0xd0
 8007f5c:	a93e      	add	r1, sp, #248	; 0xf8
 8007f5e:	f006 fb5c 	bl	800e61a <DisplayUdfParams::Set(DisplayUdf*)>
 8007f62:	a834      	add	r0, sp, #208	; 0xd0
 8007f64:	f006 fb8c 	bl	800e680 <DisplayUdfParams::Dump()>
 8007f68:	a986      	add	r1, sp, #536	; 0x218
 8007f6a:	a83e      	add	r0, sp, #248	; 0xf8
 8007f6c:	f006 fb8a 	bl	800e684 <DisplayUdf::Show(E131Bridge*)>
 8007f70:	4623      	mov	r3, r4
 8007f72:	2200      	movs	r2, #0
 8007f74:	2101      	movs	r1, #1
 8007f76:	f50d 60ef 	add.w	r0, sp, #1912	; 0x778
 8007f7a:	f002 fb25 	bl	800a5c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8007f7e:	a80b      	add	r0, sp, #44	; 0x2c
 8007f80:	f003 ff4e 	bl	800be20 <StoreRemoteConfig::StoreRemoteConfig()>
 8007f84:	a90b      	add	r1, sp, #44	; 0x2c
 8007f86:	a82b      	add	r0, sp, #172	; 0xac
 8007f88:	f002 fe1c 	bl	800abc4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8007f8c:	a82b      	add	r0, sp, #172	; 0xac
 8007f8e:	f002 fe23 	bl	800abd8 <RemoteConfigParams::Load()>
 8007f92:	b138      	cbz	r0, 8007fa4 <main+0x248>
 8007f94:	a82b      	add	r0, sp, #172	; 0xac
 8007f96:	f50d 61ef 	add.w	r1, sp, #1912	; 0x778
 8007f9a:	f002 ff44 	bl	800ae26 <RemoteConfigParams::Set(RemoteConfig*)>
 8007f9e:	a82b      	add	r0, sp, #172	; 0xac
 8007fa0:	f002 ff65 	bl	800ae6e <RemoteConfigParams::Dump()>
 8007fa4:	a804      	add	r0, sp, #16
 8007fa6:	f003 fd6d 	bl	800ba84 <SpiFlashStore::Flash()>
 8007faa:	2800      	cmp	r0, #0
 8007fac:	d1fa      	bne.n	8007fa4 <main+0x248>
 8007fae:	2303      	movs	r3, #3
 8007fb0:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8007fb4:	4936      	ldr	r1, [pc, #216]	; (8008090 <main+0x334>)
 8007fb6:	a83e      	add	r0, sp, #248	; 0xf8
 8007fb8:	f7ff fe8d 	bl	8007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007fbc:	a886      	add	r0, sp, #536	; 0x218
 8007fbe:	f000 fa33 	bl	8008428 <E131Bridge::Start()>
 8007fc2:	2302      	movs	r3, #2
 8007fc4:	f248 0280 	movw	r2, #32896	; 0x8080
 8007fc8:	4932      	ldr	r1, [pc, #200]	; (8008094 <main+0x338>)
 8007fca:	a83e      	add	r0, sp, #248	; 0xf8
 8007fcc:	f7ff fe83 	bl	8007cd6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007fd0:	2102      	movs	r1, #2
 8007fd2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007fd6:	f008 f86d 	bl	80100b4 <fwdgt_config>
 8007fda:	2801      	cmp	r0, #1
 8007fdc:	bf0c      	ite	eq
 8007fde:	2301      	moveq	r3, #1
 8007fe0:	2300      	movne	r3, #0
 8007fe2:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 8007fe6:	d101      	bne.n	8007fec <main+0x290>
 8007fe8:	f008 f854 	bl	8010094 <fwdgt_enable>
 8007fec:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8008098 <main+0x33c>
 8007ff0:	4f2a      	ldr	r7, [pc, #168]	; (800809c <main+0x340>)
 8007ff2:	f008 f857 	bl	80100a4 <fwdgt_counter_reload>
 8007ff6:	f7ff fa93 	bl	8007520 <net_handle>
 8007ffa:	a886      	add	r0, sp, #536	; 0x218
 8007ffc:	f000 fe02 	bl	8008c04 <E131Bridge::Run()>
 8008000:	f50d 60ef 	add.w	r0, sp, #1912	; 0x778
 8008004:	f002 fc90 	bl	800a928 <RemoteConfig::Run()>
 8008008:	a804      	add	r0, sp, #16
 800800a:	f003 fd3b 	bl	800ba84 <SpiFlashStore::Flash()>
 800800e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008010:	2a00      	cmp	r2, #0
 8008012:	d045      	beq.n	80080a0 <main+0x344>
 8008014:	f8d9 3000 	ldr.w	r3, [r9]
 8008018:	991a      	ldr	r1, [sp, #104]	; 0x68
 800801a:	1a5b      	subs	r3, r3, r1
 800801c:	429a      	cmp	r2, r3
 800801e:	d83f      	bhi.n	80080a0 <main+0x344>
 8008020:	f8d9 3000 	ldr.w	r3, [r9]
 8008024:	931a      	str	r3, [sp, #104]	; 0x68
 8008026:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008028:	2b01      	cmp	r3, #1
 800802a:	f083 0201 	eor.w	r2, r3, #1
 800802e:	bf18      	it	ne
 8008030:	2301      	movne	r3, #1
 8008032:	9219      	str	r2, [sp, #100]	; 0x64
 8008034:	bf14      	ite	ne
 8008036:	f8c8 3010 	strne.w	r3, [r8, #16]
 800803a:	f8c8 3014 	streq.w	r3, [r8, #20]
 800803e:	e02f      	b.n	80080a0 <main+0x344>
 8008040:	08011d45 	stmdaeq	r1, {r0, r2, r6, r8, sl, fp, ip}
 8008044:	08011d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, ip}
 8008048:	08011df1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl, fp, ip}
 800804c:	40011000 	andmi	r1, r1, r0
 8008050:	08011d51 	stmdaeq	r1, {r0, r4, r6, r8, sl, fp, ip}
 8008054:	08011de0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, ip}
 8008058:	08011dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip}
 800805c:	20009ad0 	ldrdcs	r9, [r0], -r0
 8008060:	08013349 	stmdaeq	r1, {r0, r3, r6, r8, r9, ip, sp}
 8008064:	08013338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip, sp}
 8008068:	08011d6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, fp, ip}
 800806c:	08011d7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sl, fp, ip}
 8008070:	08011d73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, ip}
 8008074:	08011f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip}
 8008078:	080120b8 	stmdaeq	r1, {r3, r4, r5, r7, sp}
 800807c:	20009498 	mulcs	r0, r8, r4
 8008080:	20000004 	andcs	r0, r0, r4
 8008084:	08011f82 	stmdaeq	r1, {r1, r7, r8, r9, sl, fp, ip}
 8008088:	08011f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}
 800808c:	08011d8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, fp, ip}
 8008090:	08011efc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, fp, ip}
 8008094:	08011f27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, fp, ip}
 8008098:	20009bdc 	ldrdcs	r9, [r0], -ip
 800809c:	20000000 	andcs	r0, r0, r0
 80080a0:	9a43      	ldr	r2, [sp, #268]	; 0x10c
 80080a2:	b16a      	cbz	r2, 80080c0 <main+0x364>
 80080a4:	f89d 3108 	ldrb.w	r3, [sp, #264]	; 0x108
 80080a8:	2b00      	cmp	r3, #0
 80080aa:	d13f      	bne.n	800812c <main+0x3d0>
 80080ac:	f8d9 3000 	ldr.w	r3, [r9]
 80080b0:	993f      	ldr	r1, [sp, #252]	; 0xfc
 80080b2:	1a5b      	subs	r3, r3, r1
 80080b4:	429a      	cmp	r2, r3
 80080b6:	d203      	bcs.n	80080c0 <main+0x364>
 80080b8:	2101      	movs	r1, #1
 80080ba:	a83e      	add	r0, sp, #248	; 0xf8
 80080bc:	f7ff fdc6 	bl	8007c4c <Display::SetSleep(bool)>
 80080c0:	b385      	cbz	r5, 8008124 <main+0x3c8>
 80080c2:	f10d 0316 	add.w	r3, sp, #22
 80080c6:	4e41      	ldr	r6, [pc, #260]	; (80081cc <main+0x470>)
 80080c8:	4841      	ldr	r0, [pc, #260]	; (80081d0 <main+0x474>)
 80080ca:	9300      	str	r3, [sp, #0]
 80080cc:	2210      	movs	r2, #16
 80080ce:	4631      	mov	r1, r6
 80080d0:	7800      	ldrb	r0, [r0, #0]
 80080d2:	ab0c      	add	r3, sp, #48	; 0x30
 80080d4:	f004 fa96 	bl	800c604 <udp_recv>
 80080d8:	280a      	cmp	r0, #10
 80080da:	4604      	mov	r4, r0
 80080dc:	d922      	bls.n	8008124 <main+0x3c8>
 80080de:	2204      	movs	r2, #4
 80080e0:	4631      	mov	r1, r6
 80080e2:	483c      	ldr	r0, [pc, #240]	; (80081d4 <main+0x478>)
 80080e4:	f7ff fd3f 	bl	8007b66 <memcmp>
 80080e8:	b9e0      	cbnz	r0, 8008124 <main+0x3c8>
 80080ea:	4426      	add	r6, r4
 80080ec:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80080f0:	2b0a      	cmp	r3, #10
 80080f2:	d103      	bne.n	80080fc <main+0x3a0>
 80080f4:	3c01      	subs	r4, #1
 80080f6:	b2a4      	uxth	r4, r4
 80080f8:	2c0a      	cmp	r4, #10
 80080fa:	d051      	beq.n	80081a0 <main+0x444>
 80080fc:	2c0e      	cmp	r4, #14
 80080fe:	d84d      	bhi.n	800819c <main+0x440>
 8008100:	2206      	movs	r2, #6
 8008102:	6839      	ldr	r1, [r7, #0]
 8008104:	4834      	ldr	r0, [pc, #208]	; (80081d8 <main+0x47c>)
 8008106:	f7ff fd2e 	bl	8007b66 <memcmp>
 800810a:	2800      	cmp	r0, #0
 800810c:	d148      	bne.n	80081a0 <main+0x444>
 800810e:	2104      	movs	r1, #4
 8008110:	4832      	ldr	r0, [pc, #200]	; (80081dc <main+0x480>)
 8008112:	f7ff fd3a 	bl	8007b8a <dmxconfigudp::atoi(char const*, unsigned char)>
 8008116:	285b      	cmp	r0, #91	; 0x5b
 8008118:	4601      	mov	r1, r0
 800811a:	d903      	bls.n	8008124 <main+0x3c8>
 800811c:	4b30      	ldr	r3, [pc, #192]	; (80081e0 <main+0x484>)
 800811e:	6818      	ldr	r0, [r3, #0]
 8008120:	f002 f8a6 	bl	800a270 <Dmx::SetDmxBreakTime(unsigned int)>
 8008124:	a805      	add	r0, sp, #20
 8008126:	f004 feed 	bl	800cf04 <MDNS::Run()>
 800812a:	e762      	b.n	8007ff2 <main+0x296>
 800812c:	f7ff fe0c 	bl	8007d48 <display::timeout::gpio_renew()>
 8008130:	2800      	cmp	r0, #0
 8008132:	d0c5      	beq.n	80080c0 <main+0x364>
 8008134:	2100      	movs	r1, #0
 8008136:	e7c0      	b.n	80080ba <main+0x35e>
 8008138:	2c0c      	cmp	r4, #12
 800813a:	d915      	bls.n	8008168 <main+0x40c>
 800813c:	2c0e      	cmp	r4, #14
 800813e:	d82a      	bhi.n	8008196 <main+0x43a>
 8008140:	2208      	movs	r2, #8
 8008142:	6839      	ldr	r1, [r7, #0]
 8008144:	4827      	ldr	r0, [pc, #156]	; (80081e4 <main+0x488>)
 8008146:	f7ff fd0e 	bl	8007b66 <memcmp>
 800814a:	bb20      	cbnz	r0, 8008196 <main+0x43a>
 800814c:	2102      	movs	r1, #2
 800814e:	4826      	ldr	r0, [pc, #152]	; (80081e8 <main+0x48c>)
 8008150:	f7ff fd1b 	bl	8007b8a <dmxconfigudp::atoi(char const*, unsigned char)>
 8008154:	4601      	mov	r1, r0
 8008156:	b110      	cbz	r0, 800815e <main+0x402>
 8008158:	4b24      	ldr	r3, [pc, #144]	; (80081ec <main+0x490>)
 800815a:	fbb3 f1f0 	udiv	r1, r3, r0
 800815e:	4b20      	ldr	r3, [pc, #128]	; (80081e0 <main+0x484>)
 8008160:	6818      	ldr	r0, [r3, #0]
 8008162:	f002 f855 	bl	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008166:	e7dd      	b.n	8008124 <main+0x3c8>
 8008168:	2c0a      	cmp	r4, #10
 800816a:	d0db      	beq.n	8008124 <main+0x3c8>
 800816c:	2206      	movs	r2, #6
 800816e:	6839      	ldr	r1, [r7, #0]
 8008170:	481f      	ldr	r0, [pc, #124]	; (80081f0 <main+0x494>)
 8008172:	f7ff fcf8 	bl	8007b66 <memcmp>
 8008176:	2800      	cmp	r0, #0
 8008178:	d1d4      	bne.n	8008124 <main+0x3c8>
 800817a:	2103      	movs	r1, #3
 800817c:	4817      	ldr	r0, [pc, #92]	; (80081dc <main+0x480>)
 800817e:	f7ff fd04 	bl	8007b8a <dmxconfigudp::atoi(char const*, unsigned char)>
 8008182:	1e83      	subs	r3, r0, #2
 8008184:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8008188:	d8cc      	bhi.n	8008124 <main+0x3c8>
 800818a:	4b15      	ldr	r3, [pc, #84]	; (80081e0 <main+0x484>)
 800818c:	b281      	uxth	r1, r0
 800818e:	6818      	ldr	r0, [r3, #0]
 8008190:	f002 f882 	bl	800a298 <Dmx::SetDmxSlots(unsigned short)>
 8008194:	e7c6      	b.n	8008124 <main+0x3c8>
 8008196:	2c0d      	cmp	r4, #13
 8008198:	d0e8      	beq.n	800816c <main+0x410>
 800819a:	e7c3      	b.n	8008124 <main+0x3c8>
 800819c:	2c10      	cmp	r4, #16
 800819e:	d8c1      	bhi.n	8008124 <main+0x3c8>
 80081a0:	2204      	movs	r2, #4
 80081a2:	6839      	ldr	r1, [r7, #0]
 80081a4:	4813      	ldr	r0, [pc, #76]	; (80081f4 <main+0x498>)
 80081a6:	f7ff fcde 	bl	8007b66 <memcmp>
 80081aa:	2800      	cmp	r0, #0
 80081ac:	d1c4      	bne.n	8008138 <main+0x3dc>
 80081ae:	2107      	movs	r1, #7
 80081b0:	4811      	ldr	r0, [pc, #68]	; (80081f8 <main+0x49c>)
 80081b2:	f7ff fcea 	bl	8007b8a <dmxconfigudp::atoi(char const*, unsigned char)>
 80081b6:	4b11      	ldr	r3, [pc, #68]	; (80081fc <main+0x4a0>)
 80081b8:	f1a0 020c 	sub.w	r2, r0, #12
 80081bc:	429a      	cmp	r2, r3
 80081be:	4601      	mov	r1, r0
 80081c0:	d8b0      	bhi.n	8008124 <main+0x3c8>
 80081c2:	4b07      	ldr	r3, [pc, #28]	; (80081e0 <main+0x484>)
 80081c4:	6818      	ldr	r0, [r3, #0]
 80081c6:	f002 f85d 	bl	800a284 <Dmx::SetDmxMabTime(unsigned int)>
 80081ca:	e7ab      	b.n	8008124 <main+0x3c8>
 80081cc:	2000070d 	andcs	r0, r0, sp, lsl #14
 80081d0:	20000004 	andcs	r0, r0, r4
 80081d4:	08011da0 	stmdaeq	r1, {r5, r7, r8, sl, fp, ip}
 80081d8:	08011da5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, fp, ip}
 80081dc:	20000717 	andcs	r0, r0, r7, lsl r7
 80081e0:	20000b4c 	andcs	r0, r0, ip, asr #22
 80081e4:	08011db1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, fp, ip}
 80081e8:	20000719 	andcs	r0, r0, r9, lsl r7
 80081ec:	000f4240 	andeq	r4, pc, r0, asr #4
 80081f0:	08011dba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, sl, fp, ip}
 80081f4:	08011dac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, fp, ip}
 80081f8:	20000715 	andcs	r0, r0, r5, lsl r7
 80081fc:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08008200 <DmxInput::~DmxInput()>:
 8008200:	4770      	bx	lr
	...

08008204 <DmxInput::Start(unsigned int)>:
 8008204:	2301      	movs	r3, #1
 8008206:	b410      	push	{r4}
 8008208:	4808      	ldr	r0, [pc, #32]	; (800822c <DmxInput::Start(unsigned int)+0x28>)
 800820a:	fa03 f101 	lsl.w	r1, r3, r1
 800820e:	7802      	ldrb	r2, [r0, #0]
 8008210:	ea31 0402 	bics.w	r4, r1, r2
 8008214:	d008      	beq.n	8008228 <DmxInput::Start(unsigned int)+0x24>
 8008216:	430a      	orrs	r2, r1
 8008218:	7002      	strb	r2, [r0, #0]
 800821a:	4805      	ldr	r0, [pc, #20]	; (8008230 <DmxInput::Start(unsigned int)+0x2c>)
 800821c:	461a      	mov	r2, r3
 800821e:	2100      	movs	r1, #0
 8008220:	6800      	ldr	r0, [r0, #0]
 8008222:	bc10      	pop	{r4}
 8008224:	f001 bee8 	b.w	8009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008228:	bc10      	pop	{r4}
 800822a:	4770      	bx	lr
 800822c:	200000f8 	strdcs	r0, [r0], -r8
 8008230:	20000b4c 	andcs	r0, r0, ip, asr #22

08008234 <DmxInput::Stop(unsigned int)>:
 8008234:	2201      	movs	r2, #1
 8008236:	b410      	push	{r4}
 8008238:	4809      	ldr	r0, [pc, #36]	; (8008260 <DmxInput::Stop(unsigned int)+0x2c>)
 800823a:	fa02 f101 	lsl.w	r1, r2, r1
 800823e:	7803      	ldrb	r3, [r0, #0]
 8008240:	ea31 0403 	bics.w	r4, r1, r3
 8008244:	d109      	bne.n	800825a <DmxInput::Stop(unsigned int)+0x26>
 8008246:	ea23 0301 	bic.w	r3, r3, r1
 800824a:	7003      	strb	r3, [r0, #0]
 800824c:	2300      	movs	r3, #0
 800824e:	4805      	ldr	r0, [pc, #20]	; (8008264 <DmxInput::Stop(unsigned int)+0x30>)
 8008250:	4619      	mov	r1, r3
 8008252:	6800      	ldr	r0, [r0, #0]
 8008254:	bc10      	pop	{r4}
 8008256:	f001 becf 	b.w	8009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800825a:	bc10      	pop	{r4}
 800825c:	4770      	bx	lr
 800825e:	bf00      	nop
 8008260:	200000f8 	strdcs	r0, [r0], -r8
 8008264:	20000b4c 	andcs	r0, r0, ip, asr #22

08008268 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800826a:	4f0b      	ldr	r7, [pc, #44]	; (8008298 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x30>)
 800826c:	2100      	movs	r1, #0
 800826e:	6838      	ldr	r0, [r7, #0]
 8008270:	461e      	mov	r6, r3
 8008272:	4615      	mov	r5, r2
 8008274:	f002 f848 	bl	800a308 <Dmx::GetDmxAvailable(unsigned int)>
 8008278:	2100      	movs	r1, #0
 800827a:	4604      	mov	r4, r0
 800827c:	6838      	ldr	r0, [r7, #0]
 800827e:	f002 f857 	bl	800a330 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008282:	6030      	str	r0, [r6, #0]
 8008284:	b12c      	cbz	r4, 8008292 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2a>
 8008286:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 800828a:	3301      	adds	r3, #1
 800828c:	4620      	mov	r0, r4
 800828e:	602b      	str	r3, [r5, #0]
 8008290:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008292:	4623      	mov	r3, r4
 8008294:	e7fa      	b.n	800828c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x24>
 8008296:	bf00      	nop
 8008298:	20000b4c 	andcs	r0, r0, ip, asr #22

0800829c <DmxInput::~DmxInput()>:
 800829c:	b510      	push	{r4, lr}
 800829e:	4604      	mov	r4, r0
 80082a0:	f007 f8e8 	bl	800f474 <operator delete(void*)>
 80082a4:	4620      	mov	r0, r4
 80082a6:	bd10      	pop	{r4, pc}

080082a8 <DmxInput::DmxInput()>:
 80082a8:	b510      	push	{r4, lr}
 80082aa:	4604      	mov	r4, r0
 80082ac:	4b03      	ldr	r3, [pc, #12]	; (80082bc <DmxInput::DmxInput()+0x14>)
 80082ae:	2100      	movs	r1, #0
 80082b0:	6003      	str	r3, [r0, #0]
 80082b2:	f7ff ffbf 	bl	8008234 <DmxInput::Stop(unsigned int)>
 80082b6:	4620      	mov	r0, r4
 80082b8:	bd10      	pop	{r4, pc}
 80082ba:	bf00      	nop
 80082bc:	08011e00 	stmdaeq	r1, {r9, sl, fp, ip}

080082c0 <e131::universe_to_multicast_ip(unsigned short)>:
 80082c0:	b513      	push	{r0, r1, r4, lr}
 80082c2:	4604      	mov	r4, r0
 80082c4:	a901      	add	r1, sp, #4
 80082c6:	4806      	ldr	r0, [pc, #24]	; (80082e0 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 80082c8:	f007 f8dc 	bl	800f484 <inet_aton>
 80082cc:	9801      	ldr	r0, [sp, #4]
 80082ce:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 80082d2:	0224      	lsls	r4, r4, #8
 80082d4:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80082d8:	4320      	orrs	r0, r4
 80082da:	b002      	add	sp, #8
 80082dc:	bd10      	pop	{r4, pc}
 80082de:	bf00      	nop
 80082e0:	08011e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip}

080082e4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 80082e4:	f240 6304 	movw	r3, #1540	; 0x604
 80082e8:	fb03 0001 	mla	r0, r3, r1, r0
 80082ec:	2300      	movs	r3, #0
 80082ee:	b510      	push	{r4, lr}
 80082f0:	4293      	cmp	r3, r2
 80082f2:	d100      	bne.n	80082f6 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 80082f4:	bd10      	pop	{r4, pc}
 80082f6:	f810 4b01 	ldrb.w	r4, [r0], #1
 80082fa:	3301      	adds	r3, #1
 80082fc:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 8008300:	42a1      	cmp	r1, r4
 8008302:	bf38      	it	cc
 8008304:	4621      	movcc	r1, r4
 8008306:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800830a:	e7f1      	b.n	80082f0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800830c <memset.constprop.0.isra.0>:
 800830c:	2300      	movs	r3, #0
 800830e:	4401      	add	r1, r0
 8008310:	4288      	cmp	r0, r1
 8008312:	d100      	bne.n	8008316 <memset.constprop.0.isra.0+0xa>
 8008314:	4770      	bx	lr
 8008316:	f800 3b01 	strb.w	r3, [r0], #1
 800831a:	e7f9      	b.n	8008310 <memset.constprop.0.isra.0+0x4>

0800831c <memcpy.isra.0>:
 800831c:	3801      	subs	r0, #1
 800831e:	440a      	add	r2, r1
 8008320:	4291      	cmp	r1, r2
 8008322:	d100      	bne.n	8008326 <memcpy.isra.0+0xa>
 8008324:	4770      	bx	lr
 8008326:	f811 3b01 	ldrb.w	r3, [r1], #1
 800832a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800832e:	e7f7      	b.n	8008320 <memcpy.isra.0+0x4>

08008330 <lightset::Data::Get()>:
 8008330:	4b03      	ldr	r3, [pc, #12]	; (8008340 <lightset::Data::Get()+0x10>)
 8008332:	4804      	ldr	r0, [pc, #16]	; (8008344 <lightset::Data::Get()+0x14>)
 8008334:	681a      	ldr	r2, [r3, #0]
 8008336:	07d2      	lsls	r2, r2, #31
 8008338:	bf5c      	itt	pl
 800833a:	2201      	movpl	r2, #1
 800833c:	601a      	strpl	r2, [r3, #0]
 800833e:	4770      	bx	lr
 8008340:	200000fc 	strdcs	r0, [r0], -ip
 8008344:	20000100 	andcs	r0, r0, r0, lsl #2

08008348 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8008348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800834c:	4615      	mov	r5, r2
 800834e:	460f      	mov	r7, r1
 8008350:	4604      	mov	r4, r0
 8008352:	f7ff ffed 	bl	8008330 <lightset::Data::Get()>
 8008356:	f240 6304 	movw	r3, #1540	; 0x604
 800835a:	4606      	mov	r6, r0
 800835c:	435c      	muls	r4, r3
 800835e:	eb00 0804 	add.w	r8, r0, r4
 8008362:	462a      	mov	r2, r5
 8008364:	4639      	mov	r1, r7
 8008366:	4640      	mov	r0, r8
 8008368:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800836c:	f7ff ffd6 	bl	800831c <memcpy.isra.0>
 8008370:	462a      	mov	r2, r5
 8008372:	4639      	mov	r1, r7
 8008374:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8008378:	1930      	adds	r0, r6, r4
 800837a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800837e:	f7ff bfcd 	b.w	800831c <memcpy.isra.0>

08008382 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8008382:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008386:	4680      	mov	r8, r0
 8008388:	f240 6404 	movw	r4, #1540	; 0x604
 800838c:	4615      	mov	r5, r2
 800838e:	460f      	mov	r7, r1
 8008390:	4699      	mov	r9, r3
 8008392:	f7ff ffcd 	bl	8008330 <lightset::Data::Get()>
 8008396:	fb04 f408 	mul.w	r4, r4, r8
 800839a:	eb00 0a04 	add.w	sl, r0, r4
 800839e:	4606      	mov	r6, r0
 80083a0:	462a      	mov	r2, r5
 80083a2:	4639      	mov	r1, r7
 80083a4:	4650      	mov	r0, sl
 80083a6:	f7ff ffb9 	bl	800831c <memcpy.isra.0>
 80083aa:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 80083ae:	f1b9 0f00 	cmp.w	r9, #0
 80083b2:	d106      	bne.n	80083c2 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 80083b4:	462a      	mov	r2, r5
 80083b6:	4641      	mov	r1, r8
 80083b8:	4630      	mov	r0, r6
 80083ba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80083be:	f7ff bf91 	b.w	80082e4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 80083c2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80083c6:	462a      	mov	r2, r5
 80083c8:	4639      	mov	r1, r7
 80083ca:	1930      	adds	r0, r6, r4
 80083cc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80083d0:	f7ff bfa4 	b.w	800831c <memcpy.isra.0>

080083d4 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80083d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80083d8:	4616      	mov	r6, r2
 80083da:	4699      	mov	r9, r3
 80083dc:	4680      	mov	r8, r0
 80083de:	460f      	mov	r7, r1
 80083e0:	f7ff ffa6 	bl	8008330 <lightset::Data::Get()>
 80083e4:	f240 6404 	movw	r4, #1540	; 0x604
 80083e8:	4605      	mov	r5, r0
 80083ea:	fb04 f408 	mul.w	r4, r4, r8
 80083ee:	f504 7000 	add.w	r0, r4, #512	; 0x200
 80083f2:	4632      	mov	r2, r6
 80083f4:	4639      	mov	r1, r7
 80083f6:	4428      	add	r0, r5
 80083f8:	f7ff ff90 	bl	800831c <memcpy.isra.0>
 80083fc:	192b      	adds	r3, r5, r4
 80083fe:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 8008402:	f1b9 0f00 	cmp.w	r9, #0
 8008406:	d106      	bne.n	8008416 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8008408:	4632      	mov	r2, r6
 800840a:	4641      	mov	r1, r8
 800840c:	4628      	mov	r0, r5
 800840e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008412:	f7ff bf67 	b.w	80082e4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8008416:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800841a:	4632      	mov	r2, r6
 800841c:	4639      	mov	r1, r7
 800841e:	1928      	adds	r0, r5, r4
 8008420:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008424:	f7ff bf7a 	b.w	800831c <memcpy.isra.0>

08008428 <E131Bridge::Start()>:
 8008428:	6943      	ldr	r3, [r0, #20]
 800842a:	b513      	push	{r0, r1, r4, lr}
 800842c:	4604      	mov	r4, r0
 800842e:	b31b      	cbz	r3, 8008478 <E131Bridge::Start()+0x50>
 8008430:	6983      	ldr	r3, [r0, #24]
 8008432:	b9cb      	cbnz	r3, 8008468 <E131Bridge::Start()+0x40>
 8008434:	a901      	add	r1, sp, #4
 8008436:	4814      	ldr	r0, [pc, #80]	; (8008488 <E131Bridge::Start()+0x60>)
 8008438:	f007 f824 	bl	800f484 <inet_aton>
 800843c:	9b01      	ldr	r3, [sp, #4]
 800843e:	f240 207e 	movw	r0, #638	; 0x27e
 8008442:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8008446:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800844a:	6223      	str	r3, [r4, #32]
 800844c:	f007 f816 	bl	800f47c <operator new(unsigned int)>
 8008450:	61a0      	str	r0, [r4, #24]
 8008452:	4620      	mov	r0, r4
 8008454:	f000 fd04 	bl	8008e60 <E131Bridge::FillDataPacket()>
 8008458:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800845c:	f007 f80e 	bl	800f47c <operator new(unsigned int)>
 8008460:	61e0      	str	r0, [r4, #28]
 8008462:	4620      	mov	r0, r4
 8008464:	f000 fc5a 	bl	8008d1c <E131Bridge::FillDiscoveryPacket()>
 8008468:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 800846c:	b123      	cbz	r3, 8008478 <E131Bridge::Start()+0x50>
 800846e:	6960      	ldr	r0, [r4, #20]
 8008470:	2100      	movs	r1, #0
 8008472:	6803      	ldr	r3, [r0, #0]
 8008474:	689b      	ldr	r3, [r3, #8]
 8008476:	4798      	blx	r3
 8008478:	2102      	movs	r1, #2
 800847a:	4b04      	ldr	r3, [pc, #16]	; (800848c <E131Bridge::Start()+0x64>)
 800847c:	6818      	ldr	r0, [r3, #0]
 800847e:	b002      	add	sp, #8
 8008480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008484:	f006 bf14 	b.w	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 8008488:	08011e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip}
 800848c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08008490 <E131Bridge::Stop()>:
 8008490:	2301      	movs	r3, #1
 8008492:	b510      	push	{r4, lr}
 8008494:	4604      	mov	r4, r0
 8008496:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800849a:	6840      	ldr	r0, [r0, #4]
 800849c:	b118      	cbz	r0, 80084a6 <E131Bridge::Stop()+0x16>
 800849e:	6803      	ldr	r3, [r0, #0]
 80084a0:	2100      	movs	r1, #0
 80084a2:	68db      	ldr	r3, [r3, #12]
 80084a4:	4798      	blx	r3
 80084a6:	f7ff ff43 	bl	8008330 <lightset::Data::Get()>
 80084aa:	2100      	movs	r1, #0
 80084ac:	f8c0 1600 	str.w	r1, [r0, #1536]	; 0x600
 80084b0:	6960      	ldr	r0, [r4, #20]
 80084b2:	f884 1550 	strb.w	r1, [r4, #1360]	; 0x550
 80084b6:	b930      	cbnz	r0, 80084c6 <E131Bridge::Stop()+0x36>
 80084b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80084bc:	4b06      	ldr	r3, [pc, #24]	; (80084d8 <E131Bridge::Stop()+0x48>)
 80084be:	2100      	movs	r1, #0
 80084c0:	6818      	ldr	r0, [r3, #0]
 80084c2:	f006 bef5 	b.w	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 80084c6:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 80084ca:	2b00      	cmp	r3, #0
 80084cc:	d0f4      	beq.n	80084b8 <E131Bridge::Stop()+0x28>
 80084ce:	6803      	ldr	r3, [r0, #0]
 80084d0:	68db      	ldr	r3, [r3, #12]
 80084d2:	4798      	blx	r3
 80084d4:	e7f0      	b.n	80084b8 <E131Bridge::Stop()+0x28>
 80084d6:	bf00      	nop
 80084d8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

080084dc <E131Bridge::SetSourceName(char const*)>:
 80084dc:	233f      	movs	r3, #63	; 0x3f
 80084de:	b510      	push	{r4, lr}
 80084e0:	f100 0234 	add.w	r2, r0, #52	; 0x34
 80084e4:	3901      	subs	r1, #1
 80084e6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80084ea:	b92c      	cbnz	r4, 80084f8 <E131Bridge::SetSourceName(char const*)+0x1c>
 80084ec:	4413      	add	r3, r2
 80084ee:	429a      	cmp	r2, r3
 80084f0:	d006      	beq.n	8008500 <E131Bridge::SetSourceName(char const*)+0x24>
 80084f2:	f802 4b01 	strb.w	r4, [r2], #1
 80084f6:	e7fa      	b.n	80084ee <E131Bridge::SetSourceName(char const*)+0x12>
 80084f8:	3b01      	subs	r3, #1
 80084fa:	f802 4b01 	strb.w	r4, [r2], #1
 80084fe:	d1f2      	bne.n	80084e6 <E131Bridge::SetSourceName(char const*)+0xa>
 8008500:	2300      	movs	r3, #0
 8008502:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 8008506:	bd10      	pop	{r4, pc}

08008508 <E131Bridge::E131Bridge()>:
 8008508:	2300      	movs	r3, #0
 800850a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800850e:	b530      	push	{r4, r5, lr}
 8008510:	e9c0 2300 	strd	r2, r3, [r0]
 8008514:	2201      	movs	r2, #1
 8008516:	4604      	mov	r4, r0
 8008518:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800851c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8008520:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8008524:	6743      	str	r3, [r0, #116]	; 0x74
 8008526:	4b1a      	ldr	r3, [pc, #104]	; (8008590 <E131Bridge::E131Bridge()+0x88>)
 8008528:	b093      	sub	sp, #76	; 0x4c
 800852a:	6018      	str	r0, [r3, #0]
 800852c:	7202      	strb	r2, [r0, #8]
 800852e:	2144      	movs	r1, #68	; 0x44
 8008530:	f500 60a2 	add.w	r0, r0, #1296	; 0x510
 8008534:	f7ff feea 	bl	800830c <memset.constprop.0.isra.0>
 8008538:	f204 5054 	addw	r0, r4, #1364	; 0x554
 800853c:	210c      	movs	r1, #12
 800853e:	f7ff fee5 	bl	800830c <memset.constprop.0.isra.0>
 8008542:	2364      	movs	r3, #100	; 0x64
 8008544:	4d13      	ldr	r5, [pc, #76]	; (8008594 <E131Bridge::E131Bridge()+0x8c>)
 8008546:	f884 355d 	strb.w	r3, [r4, #1373]	; 0x55d
 800854a:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800854e:	211c      	movs	r1, #28
 8008550:	f7ff fedc 	bl	800830c <memset.constprop.0.isra.0>
 8008554:	682b      	ldr	r3, [r5, #0]
 8008556:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 800855a:	4a0f      	ldr	r2, [pc, #60]	; (8008598 <E131Bridge::E131Bridge()+0x90>)
 800855c:	331c      	adds	r3, #28
 800855e:	9200      	str	r2, [sp, #0]
 8008560:	2140      	movs	r1, #64	; 0x40
 8008562:	4a0e      	ldr	r2, [pc, #56]	; (800859c <E131Bridge::E131Bridge()+0x94>)
 8008564:	a802      	add	r0, sp, #8
 8008566:	f007 faa1 	bl	800faac <snprintf>
 800856a:	4620      	mov	r0, r4
 800856c:	a902      	add	r1, sp, #8
 800856e:	f7ff ffb5 	bl	80084dc <E131Bridge::SetSourceName(char const*)>
 8008572:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8008576:	6828      	ldr	r0, [r5, #0]
 8008578:	f004 fd66 	bl	800d048 <Network::Begin(unsigned short)>
 800857c:	4621      	mov	r1, r4
 800857e:	4b08      	ldr	r3, [pc, #32]	; (80085a0 <E131Bridge::E131Bridge()+0x98>)
 8008580:	f841 0b24 	str.w	r0, [r1], #36
 8008584:	6818      	ldr	r0, [r3, #0]
 8008586:	f006 ff1b 	bl	800f3c0 <Hardware::GetUuid(unsigned char*)>
 800858a:	4620      	mov	r0, r4
 800858c:	b013      	add	sp, #76	; 0x4c
 800858e:	bd30      	pop	{r4, r5, pc}
 8008590:	20000704 	andcs	r0, r0, r4, lsl #14
 8008594:	20009498 	mulcs	r0, r8, r4
 8008598:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800859c:	08011e20 	stmdaeq	r1, {r5, r9, sl, fp, ip}
 80085a0:	20009bc0 	andcs	r9, r0, r0, asr #23

080085a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 80085a4:	b538      	push	{r3, r4, r5, lr}
 80085a6:	4603      	mov	r3, r0
 80085a8:	4610      	mov	r0, r2
 80085aa:	b119      	cbz	r1, 80085b4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x10>
 80085ac:	f8b3 2510 	ldrh.w	r2, [r3, #1296]	; 0x510
 80085b0:	4282      	cmp	r2, r0
 80085b2:	d00b      	beq.n	80085cc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x28>
 80085b4:	681d      	ldr	r5, [r3, #0]
 80085b6:	4b06      	ldr	r3, [pc, #24]	; (80085d0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x2c>)
 80085b8:	681c      	ldr	r4, [r3, #0]
 80085ba:	f7ff fe81 	bl	80082c0 <e131::universe_to_multicast_ip(unsigned short)>
 80085be:	4629      	mov	r1, r5
 80085c0:	4602      	mov	r2, r0
 80085c2:	4620      	mov	r0, r4
 80085c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80085c8:	f004 bd52 	b.w	800d070 <Network::LeaveGroup(int, unsigned int)>
 80085cc:	bd38      	pop	{r3, r4, r5, pc}
 80085ce:	bf00      	nop
 80085d0:	20009498 	mulcs	r0, r8, r4

080085d4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 80085d4:	b570      	push	{r4, r5, r6, lr}
 80085d6:	4604      	mov	r4, r0
 80085d8:	461d      	mov	r5, r3
 80085da:	b1c1      	cbz	r1, 800860e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 80085dc:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 80085e0:	f200 5606 	addw	r6, r0, #1286	; 0x506
 80085e4:	b12a      	cbz	r2, 80085f2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 80085e6:	42aa      	cmp	r2, r5
 80085e8:	d017      	beq.n	800861a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 80085ea:	2101      	movs	r1, #1
 80085ec:	4620      	mov	r0, r4
 80085ee:	f7ff ffd9 	bl	80085a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 80085f2:	4b0a      	ldr	r3, [pc, #40]	; (800861c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 80085f4:	8035      	strh	r5, [r6, #0]
 80085f6:	4628      	mov	r0, r5
 80085f8:	6826      	ldr	r6, [r4, #0]
 80085fa:	681c      	ldr	r4, [r3, #0]
 80085fc:	f7ff fe60 	bl	80082c0 <e131::universe_to_multicast_ip(unsigned short)>
 8008600:	4631      	mov	r1, r6
 8008602:	4602      	mov	r2, r0
 8008604:	4620      	mov	r0, r4
 8008606:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800860a:	f004 bd2e 	b.w	800d06a <Network::JoinGroup(int, unsigned int)>
 800860e:	b122      	cbz	r2, 800861a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8008610:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8008614:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8008618:	e7e4      	b.n	80085e4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800861a:	bd70      	pop	{r4, r5, r6, pc}
 800861c:	20009498 	mulcs	r0, r8, r4

08008620 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8008620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008624:	4604      	mov	r4, r0
 8008626:	460d      	mov	r5, r1
 8008628:	461e      	mov	r6, r3
 800862a:	b9ca      	cbnz	r2, 8008660 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x40>
 800862c:	bbb1      	cbnz	r1, 800869c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 800862e:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 8008632:	b12b      	cbz	r3, 8008640 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20>
 8008634:	f8b0 3554 	ldrh.w	r3, [r0, #1364]	; 0x554
 8008638:	42b3      	cmp	r3, r6
 800863a:	d109      	bne.n	8008650 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x30>
 800863c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008640:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008644:	3301      	adds	r3, #1
 8008646:	f880 350a 	strb.w	r3, [r0, #1290]	; 0x50a
 800864a:	2301      	movs	r3, #1
 800864c:	f880 3556 	strb.w	r3, [r0, #1366]	; 0x556
 8008650:	4630      	mov	r0, r6
 8008652:	f8a4 6554 	strh.w	r6, [r4, #1364]	; 0x554
 8008656:	f7ff fe33 	bl	80082c0 <e131::universe_to_multicast_ip(unsigned short)>
 800865a:	f8c4 0558 	str.w	r0, [r4, #1368]	; 0x558
 800865e:	e7ed      	b.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8008660:	2a02      	cmp	r2, #2
 8008662:	d11b      	bne.n	800869c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8008664:	2900      	cmp	r1, #0
 8008666:	d1e9      	bne.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8008668:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 800866c:	b14b      	cbz	r3, 8008682 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x62>
 800866e:	f884 1512 	strb.w	r1, [r4, #1298]	; 0x512
 8008672:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8008676:	4632      	mov	r2, r6
 8008678:	3b01      	subs	r3, #1
 800867a:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800867e:	f7ff ff91 	bl	80085a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8008682:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 8008686:	2b00      	cmp	r3, #0
 8008688:	d0d8      	beq.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 800868a:	2300      	movs	r3, #0
 800868c:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 8008690:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8008694:	3b01      	subs	r3, #1
 8008696:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800869a:	e7cf      	b.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 800869c:	2344      	movs	r3, #68	; 0x44
 800869e:	fb03 4305 	mla	r3, r3, r5, r4
 80086a2:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 80086a6:	b1d2      	cbz	r2, 80086de <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xbe>
 80086a8:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 80086ac:	42b3      	cmp	r3, r6
 80086ae:	d0c5      	beq.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 80086b0:	4632      	mov	r2, r6
 80086b2:	4629      	mov	r1, r5
 80086b4:	4620      	mov	r0, r4
 80086b6:	f7ff ff75 	bl	80085a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 80086ba:	4b0d      	ldr	r3, [pc, #52]	; (80086f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd0>)
 80086bc:	4630      	mov	r0, r6
 80086be:	681f      	ldr	r7, [r3, #0]
 80086c0:	f8d4 8000 	ldr.w	r8, [r4]
 80086c4:	f7ff fdfc 	bl	80082c0 <e131::universe_to_multicast_ip(unsigned short)>
 80086c8:	4641      	mov	r1, r8
 80086ca:	4602      	mov	r2, r0
 80086cc:	4638      	mov	r0, r7
 80086ce:	f004 fccc 	bl	800d06a <Network::JoinGroup(int, unsigned int)>
 80086d2:	2344      	movs	r3, #68	; 0x44
 80086d4:	fb03 4505 	mla	r5, r3, r5, r4
 80086d8:	f8a5 6510 	strh.w	r6, [r5, #1296]	; 0x510
 80086dc:	e7ae      	b.n	800863c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 80086de:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 80086e2:	3201      	adds	r2, #1
 80086e4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 80086e8:	2201      	movs	r2, #1
 80086ea:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 80086ee:	e7e4      	b.n	80086ba <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9a>
 80086f0:	20009498 	mulcs	r0, r8, r4

080086f4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 80086f4:	b510      	push	{r4, lr}
 80086f6:	4604      	mov	r4, r0
 80086f8:	4618      	mov	r0, r3
 80086fa:	b933      	cbnz	r3, 800870a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x16>
 80086fc:	b921      	cbnz	r1, 8008708 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>
 80086fe:	f8b4 3554 	ldrh.w	r3, [r4, #1364]	; 0x554
 8008702:	f894 0556 	ldrb.w	r0, [r4, #1366]	; 0x556
 8008706:	8013      	strh	r3, [r2, #0]
 8008708:	bd10      	pop	{r4, pc}
 800870a:	2344      	movs	r3, #68	; 0x44
 800870c:	fb03 4401 	mla	r4, r3, r1, r4
 8008710:	f8b4 3510 	ldrh.w	r3, [r4, #1296]	; 0x510
 8008714:	f894 0512 	ldrb.w	r0, [r4, #1298]	; 0x512
 8008718:	8013      	strh	r3, [r2, #0]
 800871a:	e7f5      	b.n	8008708 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>

0800871c <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800871c:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8008720:	b923      	cbnz	r3, 800872c <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8008722:	2301      	movs	r3, #1
 8008724:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8008728:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800872c:	2344      	movs	r3, #68	; 0x44
 800872e:	fb03 0001 	mla	r0, r3, r1, r0
 8008732:	2301      	movs	r3, #1
 8008734:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8008738:	4770      	bx	lr

0800873a <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800873a:	4602      	mov	r2, r0
 800873c:	2044      	movs	r0, #68	; 0x44
 800873e:	4348      	muls	r0, r1
 8008740:	b570      	push	{r4, r5, r6, lr}
 8008742:	1815      	adds	r5, r2, r0
 8008744:	460c      	mov	r4, r1
 8008746:	68d3      	ldr	r3, [r2, #12]
 8008748:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800874c:	1a5b      	subs	r3, r3, r1
 800874e:	f242 7110 	movw	r1, #10000	; 0x2710
 8008752:	428b      	cmp	r3, r1
 8008754:	d90a      	bls.n	800876c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8008756:	2600      	movs	r6, #0
 8008758:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800875c:	2110      	movs	r1, #16
 800875e:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8008762:	4410      	add	r0, r2
 8008764:	f7ff fdd2 	bl	800830c <memset.constprop.0.isra.0>
 8008768:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800876c:	2344      	movs	r3, #68	; 0x44
 800876e:	435c      	muls	r4, r3
 8008770:	1915      	adds	r5, r2, r4
 8008772:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8008776:	68d3      	ldr	r3, [r2, #12]
 8008778:	1a5b      	subs	r3, r3, r1
 800877a:	f242 7110 	movw	r1, #10000	; 0x2710
 800877e:	428b      	cmp	r3, r1
 8008780:	d90a      	bls.n	8008798 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8008782:	2600      	movs	r6, #0
 8008784:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8008788:	2110      	movs	r1, #16
 800878a:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800878e:	1910      	adds	r0, r2, r4
 8008790:	f7ff fdbc 	bl	800830c <memset.constprop.0.isra.0>
 8008794:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8008798:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 800879c:	b923      	cbnz	r3, 80087a8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x6e>
 800879e:	2101      	movs	r1, #1
 80087a0:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 80087a4:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 80087a8:	bd70      	pop	{r4, r5, r6, pc}

080087aa <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 80087aa:	2244      	movs	r2, #68	; 0x44
 80087ac:	fb02 0101 	mla	r1, r2, r1, r0
 80087b0:	68c3      	ldr	r3, [r0, #12]
 80087b2:	b510      	push	{r4, lr}
 80087b4:	f8d1 2530 	ldr.w	r2, [r1, #1328]	; 0x530
 80087b8:	f8d1 4518 	ldr.w	r4, [r1, #1304]	; 0x518
 80087bc:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 80087c0:	1a9a      	subs	r2, r3, r2
 80087c2:	b184      	cbz	r4, 80087e6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 80087c4:	f8d1 1514 	ldr.w	r1, [r1, #1300]	; 0x514
 80087c8:	1a5b      	subs	r3, r3, r1
 80087ca:	b128      	cbz	r0, 80087d8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 80087cc:	f242 700f 	movw	r0, #9999	; 0x270f
 80087d0:	4283      	cmp	r3, r0
 80087d2:	d90d      	bls.n	80087f0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 80087d4:	4282      	cmp	r2, r0
 80087d6:	e002      	b.n	80087de <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 80087d8:	f242 7010 	movw	r0, #10000	; 0x2710
 80087dc:	4283      	cmp	r3, r0
 80087de:	bf94      	ite	ls
 80087e0:	2000      	movls	r0, #0
 80087e2:	2001      	movhi	r0, #1
 80087e4:	bd10      	pop	{r4, pc}
 80087e6:	2800      	cmp	r0, #0
 80087e8:	d0fc      	beq.n	80087e4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 80087ea:	f242 7010 	movw	r0, #10000	; 0x2710
 80087ee:	e7f1      	b.n	80087d4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 80087f0:	2000      	movs	r0, #0
 80087f2:	e7f7      	b.n	80087e4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

080087f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 80087f4:	684a      	ldr	r2, [r1, #4]
 80087f6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80087f8:	b510      	push	{r4, lr}
 80087fa:	429a      	cmp	r2, r3
 80087fc:	d10d      	bne.n	800881a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 80087fe:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8008802:	3108      	adds	r1, #8
 8008804:	30a2      	adds	r0, #162	; 0xa2
 8008806:	4283      	cmp	r3, r0
 8008808:	d101      	bne.n	800880e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800880a:	2001      	movs	r0, #1
 800880c:	bd10      	pop	{r4, pc}
 800880e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008812:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008816:	4294      	cmp	r4, r2
 8008818:	d0f5      	beq.n	8008806 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800881a:	2000      	movs	r0, #0
 800881c:	e7f6      	b.n	800880c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

08008820 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8008820:	b538      	push	{r3, r4, r5, lr}
 8008822:	4604      	mov	r4, r0
 8008824:	2001      	movs	r0, #1
 8008826:	460d      	mov	r5, r1
 8008828:	f894 3552 	ldrb.w	r3, [r4, #1362]	; 0x552
 800882c:	f884 04f8 	strb.w	r0, [r4, #1272]	; 0x4f8
 8008830:	2900      	cmp	r1, #0
 8008832:	d04b      	beq.n	80088cc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 8008834:	b362      	cbz	r2, 8008890 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x70>
 8008836:	f8c4 04f4 	str.w	r0, [r4, #1268]	; 0x4f4
 800883a:	f884 050c 	strb.w	r0, [r4, #1292]	; 0x50c
 800883e:	b1db      	cbz	r3, 8008878 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008840:	2500      	movs	r5, #0
 8008842:	6860      	ldr	r0, [r4, #4]
 8008844:	2100      	movs	r1, #0
 8008846:	6803      	ldr	r3, [r0, #0]
 8008848:	68db      	ldr	r3, [r3, #12]
 800884a:	4798      	blx	r3
 800884c:	2110      	movs	r1, #16
 800884e:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008852:	f8c4 5518 	str.w	r5, [r4, #1304]	; 0x518
 8008856:	f7ff fd59 	bl	800830c <memset.constprop.0.isra.0>
 800885a:	2110      	movs	r1, #16
 800885c:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008860:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 8008864:	f7ff fd52 	bl	800830c <memset.constprop.0.isra.0>
 8008868:	f7ff fd62 	bl	8008330 <lightset::Data::Get()>
 800886c:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8008870:	f8a4 5550 	strh.w	r5, [r4, #1360]	; 0x550
 8008874:	f884 5552 	strb.w	r5, [r4, #1362]	; 0x552
 8008878:	4b1d      	ldr	r3, [pc, #116]	; (80088f0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>)
 800887a:	2102      	movs	r1, #2
 800887c:	6818      	ldr	r0, [r3, #0]
 800887e:	f006 fd17 	bl	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 8008882:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008886:	f023 0302 	bic.w	r3, r3, #2
 800888a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800888e:	bd38      	pop	{r3, r4, r5, pc}
 8008890:	2b00      	cmp	r3, #0
 8008892:	d0f1      	beq.n	8008878 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008894:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
 8008898:	b143      	cbz	r3, 80088ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 800889a:	2110      	movs	r1, #16
 800889c:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 80088a0:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 80088a4:	f7ff fd32 	bl	800830c <memset.constprop.0.isra.0>
 80088a8:	f884 2551 	strb.w	r2, [r4, #1361]	; 0x551
 80088ac:	f894 54f5 	ldrb.w	r5, [r4, #1269]	; 0x4f5
 80088b0:	2d00      	cmp	r5, #0
 80088b2:	d1e1      	bne.n	8008878 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 80088b4:	6860      	ldr	r0, [r4, #4]
 80088b6:	4629      	mov	r1, r5
 80088b8:	6803      	ldr	r3, [r0, #0]
 80088ba:	68db      	ldr	r3, [r3, #12]
 80088bc:	4798      	blx	r3
 80088be:	f7ff fd37 	bl	8008330 <lightset::Data::Get()>
 80088c2:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 80088c6:	f884 5550 	strb.w	r5, [r4, #1360]	; 0x550
 80088ca:	e7d3      	b.n	8008874 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x54>
 80088cc:	2b00      	cmp	r3, #0
 80088ce:	d0d3      	beq.n	8008878 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 80088d0:	2a00      	cmp	r2, #0
 80088d2:	d0eb      	beq.n	80088ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80088d4:	f8d4 3534 	ldr.w	r3, [r4, #1332]	; 0x534
 80088d8:	2b00      	cmp	r3, #0
 80088da:	d0e7      	beq.n	80088ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80088dc:	2110      	movs	r1, #16
 80088de:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 80088e2:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 80088e6:	f7ff fd11 	bl	800830c <memset.constprop.0.isra.0>
 80088ea:	f884 5551 	strb.w	r5, [r4, #1361]	; 0x551
 80088ee:	e7dd      	b.n	80088ac <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 80088f0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

080088f4 <E131Bridge::HandleDmx()>:
 80088f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088f8:	f8b0 50f7 	ldrh.w	r5, [r0, #247]	; 0xf7
 80088fc:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 8008900:	ba6d      	rev16	r5, r5
 8008902:	b2ad      	uxth	r5, r5
 8008904:	4604      	mov	r4, r0
 8008906:	f100 08fa 	add.w	r8, r0, #250	; 0xfa
 800890a:	3d01      	subs	r5, #1
 800890c:	b343      	cbz	r3, 8008960 <E131Bridge::HandleDmx()+0x6c>
 800890e:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8008912:	f8b0 20ed 	ldrh.w	r2, [r0, #237]	; 0xed
 8008916:	ba5b      	rev16	r3, r3
 8008918:	b29b      	uxth	r3, r3
 800891a:	429a      	cmp	r2, r3
 800891c:	d120      	bne.n	8008960 <E131Bridge::HandleDmx()+0x6c>
 800891e:	f200 5114 	addw	r1, r0, #1300	; 0x514
 8008922:	f8d0 a518 	ldr.w	sl, [r0, #1304]	; 0x518
 8008926:	f8d0 9534 	ldr.w	r9, [r0, #1332]	; 0x534
 800892a:	f7ff ff63 	bl	80087f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800892e:	f504 61a6 	add.w	r1, r4, #1328	; 0x530
 8008932:	4607      	mov	r7, r0
 8008934:	4620      	mov	r0, r4
 8008936:	f7ff ff5d 	bl	80087f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800893a:	4606      	mov	r6, r0
 800893c:	b197      	cbz	r7, 8008964 <E131Bridge::HandleDmx()+0x70>
 800893e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008942:	f894 252c 	ldrb.w	r2, [r4, #1324]	; 0x52c
 8008946:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 800894a:	3313      	adds	r3, #19
 800894c:	1a9b      	subs	r3, r3, r2
 800894e:	b2db      	uxtb	r3, r3
 8008950:	2b13      	cmp	r3, #19
 8008952:	d905      	bls.n	8008960 <E131Bridge::HandleDmx()+0x6c>
 8008954:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8008958:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800895c:	2a00      	cmp	r2, #0
 800895e:	da0a      	bge.n	8008976 <E131Bridge::HandleDmx()+0x82>
 8008960:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008964:	2800      	cmp	r0, #0
 8008966:	d0f5      	beq.n	8008954 <E131Bridge::HandleDmx()+0x60>
 8008968:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800896c:	f894 2548 	ldrb.w	r2, [r4, #1352]	; 0x548
 8008970:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008974:	e7e9      	b.n	800894a <E131Bridge::HandleDmx()+0x56>
 8008976:	065a      	lsls	r2, r3, #25
 8008978:	d509      	bpl.n	800898e <E131Bridge::HandleDmx()+0x9a>
 800897a:	b90f      	cbnz	r7, 8008980 <E131Bridge::HandleDmx()+0x8c>
 800897c:	2e00      	cmp	r6, #0
 800897e:	d0ef      	beq.n	8008960 <E131Bridge::HandleDmx()+0x6c>
 8008980:	4632      	mov	r2, r6
 8008982:	4639      	mov	r1, r7
 8008984:	4620      	mov	r0, r4
 8008986:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800898a:	f7ff bf49 	b.w	8008820 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800898e:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8008992:	b12b      	cbz	r3, 80089a0 <E131Bridge::HandleDmx()+0xac>
 8008994:	f894 14fa 	ldrb.w	r1, [r4, #1274]	; 0x4fa
 8008998:	b911      	cbnz	r1, 80089a0 <E131Bridge::HandleDmx()+0xac>
 800899a:	4620      	mov	r0, r4
 800899c:	f7ff fecd 	bl	800873a <E131Bridge::CheckMergeTimeouts(unsigned int)>
 80089a0:	f894 b0e8 	ldrb.w	fp, [r4, #232]	; 0xe8
 80089a4:	f894 350c 	ldrb.w	r3, [r4, #1292]	; 0x50c
 80089a8:	459b      	cmp	fp, r3
 80089aa:	d258      	bcs.n	8008a5e <E131Bridge::HandleDmx()+0x16a>
 80089ac:	2100      	movs	r1, #0
 80089ae:	4620      	mov	r0, r4
 80089b0:	f7ff fefb 	bl	80087aa <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 80089b4:	2800      	cmp	r0, #0
 80089b6:	d0d3      	beq.n	8008960 <E131Bridge::HandleDmx()+0x6c>
 80089b8:	f884 b50c 	strb.w	fp, [r4, #1292]	; 0x50c
 80089bc:	f1ba 0f00 	cmp.w	sl, #0
 80089c0:	d156      	bne.n	8008a70 <E131Bridge::HandleDmx()+0x17c>
 80089c2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 80089c6:	f1b9 0f00 	cmp.w	r9, #0
 80089ca:	d15c      	bne.n	8008a86 <E131Bridge::HandleDmx()+0x192>
 80089cc:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 80089ce:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 80089d2:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 80089d6:	f104 0192 	add.w	r1, r4, #146	; 0x92
 80089da:	2210      	movs	r2, #16
 80089dc:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 80089e0:	f7ff fc9c 	bl	800831c <memcpy.isra.0>
 80089e4:	68e3      	ldr	r3, [r4, #12]
 80089e6:	462a      	mov	r2, r5
 80089e8:	4641      	mov	r1, r8
 80089ea:	4648      	mov	r0, r9
 80089ec:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 80089f0:	f7ff fcaa 	bl	8008348 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 80089f4:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 80089f8:	069b      	lsls	r3, r3, #26
 80089fa:	f100 80a2 	bmi.w	8008b42 <E131Bridge::HandleDmx()+0x24e>
 80089fe:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8008a02:	b29a      	uxth	r2, r3
 8008a04:	2a00      	cmp	r2, #0
 8008a06:	f000 809f 	beq.w	8008b48 <E131Bridge::HandleDmx()+0x254>
 8008a0a:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 8008a0e:	2a00      	cmp	r2, #0
 8008a10:	f040 809a 	bne.w	8008b48 <E131Bridge::HandleDmx()+0x254>
 8008a14:	ba5b      	rev16	r3, r3
 8008a16:	b29b      	uxth	r3, r3
 8008a18:	2f00      	cmp	r7, #0
 8008a1a:	f040 808f 	bne.w	8008b3c <E131Bridge::HandleDmx()+0x248>
 8008a1e:	2e00      	cmp	r6, #0
 8008a20:	f040 808c 	bne.w	8008b3c <E131Bridge::HandleDmx()+0x248>
 8008a24:	f8d4 2534 	ldr.w	r2, [r4, #1332]	; 0x534
 8008a28:	f8d4 1518 	ldr.w	r1, [r4, #1304]	; 0x518
 8008a2c:	3a00      	subs	r2, #0
 8008a2e:	bf18      	it	ne
 8008a30:	2201      	movne	r2, #1
 8008a32:	3900      	subs	r1, #0
 8008a34:	bf18      	it	ne
 8008a36:	2101      	movne	r1, #1
 8008a38:	4620      	mov	r0, r4
 8008a3a:	f7ff fdcb 	bl	80085d4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 8008a3e:	f240 1301 	movw	r3, #257	; 0x101
 8008a42:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8008a46:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 8008a4a:	2b00      	cmp	r3, #0
 8008a4c:	f040 8081 	bne.w	8008b52 <E131Bridge::HandleDmx()+0x25e>
 8008a50:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008a54:	f043 0302 	orr.w	r3, r3, #2
 8008a58:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008a5c:	e780      	b.n	8008960 <E131Bridge::HandleDmx()+0x6c>
 8008a5e:	d9ad      	bls.n	80089bc <E131Bridge::HandleDmx()+0xc8>
 8008a60:	2300      	movs	r3, #0
 8008a62:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8008a66:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8008a6a:	f884 34f5 	strb.w	r3, [r4, #1269]	; 0x4f5
 8008a6e:	e7a3      	b.n	80089b8 <E131Bridge::HandleDmx()+0xc4>
 8008a70:	2f00      	cmp	r7, #0
 8008a72:	f000 8089 	beq.w	8008b88 <E131Bridge::HandleDmx()+0x294>
 8008a76:	f1b9 0f00 	cmp.w	r9, #0
 8008a7a:	d154      	bne.n	8008b26 <E131Bridge::HandleDmx()+0x232>
 8008a7c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008a80:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008a84:	e7ae      	b.n	80089e4 <E131Bridge::HandleDmx()+0xf0>
 8008a86:	b39e      	cbz	r6, 8008af0 <E131Bridge::HandleDmx()+0x1fc>
 8008a88:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008a8c:	68e3      	ldr	r3, [r4, #12]
 8008a8e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 8008a92:	f7ff fc4d 	bl	8008330 <lightset::Data::Get()>
 8008a96:	4681      	mov	r9, r0
 8008a98:	462a      	mov	r2, r5
 8008a9a:	4641      	mov	r1, r8
 8008a9c:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8008aa0:	f7ff fc3c 	bl	800831c <memcpy.isra.0>
 8008aa4:	462a      	mov	r2, r5
 8008aa6:	4641      	mov	r1, r8
 8008aa8:	f8c9 5600 	str.w	r5, [r9, #1536]	; 0x600
 8008aac:	f509 6080 	add.w	r0, r9, #1024	; 0x400
 8008ab0:	f7ff fc34 	bl	800831c <memcpy.isra.0>
 8008ab4:	e79e      	b.n	80089f4 <E131Bridge::HandleDmx()+0x100>
 8008ab6:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8008ab8:	2210      	movs	r2, #16
 8008aba:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8008abe:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008ac2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8008ac6:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008aca:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008ace:	f7ff fc25 	bl	800831c <memcpy.isra.0>
 8008ad2:	68e3      	ldr	r3, [r4, #12]
 8008ad4:	4639      	mov	r1, r7
 8008ad6:	4620      	mov	r0, r4
 8008ad8:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 8008adc:	f7ff fe1e 	bl	800871c <E131Bridge::UpdateMergeStatus(unsigned int)>
 8008ae0:	462a      	mov	r2, r5
 8008ae2:	4641      	mov	r1, r8
 8008ae4:	4638      	mov	r0, r7
 8008ae6:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 8008aea:	f7ff fc73 	bl	80083d4 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8008aee:	e781      	b.n	80089f4 <E131Bridge::HandleDmx()+0x100>
 8008af0:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8008af2:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008af6:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 8008afa:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8008afe:	2210      	movs	r2, #16
 8008b00:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008b04:	f7ff fc0a 	bl	800831c <memcpy.isra.0>
 8008b08:	68e3      	ldr	r3, [r4, #12]
 8008b0a:	4631      	mov	r1, r6
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 8008b12:	f7ff fe03 	bl	800871c <E131Bridge::UpdateMergeStatus(unsigned int)>
 8008b16:	462a      	mov	r2, r5
 8008b18:	4641      	mov	r1, r8
 8008b1a:	4630      	mov	r0, r6
 8008b1c:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 8008b20:	f7ff fc2f 	bl	8008382 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8008b24:	e766      	b.n	80089f4 <E131Bridge::HandleDmx()+0x100>
 8008b26:	b926      	cbnz	r6, 8008b32 <E131Bridge::HandleDmx()+0x23e>
 8008b28:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008b2c:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008b30:	e7ea      	b.n	8008b08 <E131Bridge::HandleDmx()+0x214>
 8008b32:	481a      	ldr	r0, [pc, #104]	; (8008b9c <E131Bridge::HandleDmx()+0x2a8>)
 8008b34:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b38:	f006 bf90 	b.w	800fa5c <printf>
 8008b3c:	4632      	mov	r2, r6
 8008b3e:	4639      	mov	r1, r7
 8008b40:	e77a      	b.n	8008a38 <E131Bridge::HandleDmx()+0x144>
 8008b42:	2300      	movs	r3, #0
 8008b44:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8008b48:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8008b4c:	2b00      	cmp	r3, #0
 8008b4e:	f47f af7a 	bne.w	8008a46 <E131Bridge::HandleDmx()+0x152>
 8008b52:	6865      	ldr	r5, [r4, #4]
 8008b54:	f7ff fbec 	bl	8008330 <lightset::Data::Get()>
 8008b58:	682b      	ldr	r3, [r5, #0]
 8008b5a:	2100      	movs	r1, #0
 8008b5c:	691e      	ldr	r6, [r3, #16]
 8008b5e:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8008b62:	f8d0 3600 	ldr.w	r3, [r0, #1536]	; 0x600
 8008b66:	4628      	mov	r0, r5
 8008b68:	47b0      	blx	r6
 8008b6a:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 8008b6e:	2900      	cmp	r1, #0
 8008b70:	f47f af6e 	bne.w	8008a50 <E131Bridge::HandleDmx()+0x15c>
 8008b74:	6860      	ldr	r0, [r4, #4]
 8008b76:	6803      	ldr	r3, [r0, #0]
 8008b78:	689b      	ldr	r3, [r3, #8]
 8008b7a:	4798      	blx	r3
 8008b7c:	2301      	movs	r3, #1
 8008b7e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8008b82:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 8008b86:	e763      	b.n	8008a50 <E131Bridge::HandleDmx()+0x15c>
 8008b88:	f1b9 0f00 	cmp.w	r9, #0
 8008b8c:	d093      	beq.n	8008ab6 <E131Bridge::HandleDmx()+0x1c2>
 8008b8e:	2e00      	cmp	r6, #0
 8008b90:	d0cf      	beq.n	8008b32 <E131Bridge::HandleDmx()+0x23e>
 8008b92:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008b96:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008b9a:	e79a      	b.n	8008ad2 <E131Bridge::HandleDmx()+0x1de>
 8008b9c:	08011e33 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, fp, ip}

08008ba0 <E131Bridge::IsValidRoot()>:
 8008ba0:	b530      	push	{r4, r5, lr}
 8008ba2:	4a0d      	ldr	r2, [pc, #52]	; (8008bd8 <E131Bridge::IsValidRoot()+0x38>)
 8008ba4:	f100 0380 	add.w	r3, r0, #128	; 0x80
 8008ba8:	f100 018c 	add.w	r1, r0, #140	; 0x8c
 8008bac:	4299      	cmp	r1, r3
 8008bae:	d109      	bne.n	8008bc4 <E131Bridge::IsValidRoot()+0x24>
 8008bb0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 8008bb4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 8008bb8:	d00c      	beq.n	8008bd4 <E131Bridge::IsValidRoot()+0x34>
 8008bba:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8008bbe:	4258      	negs	r0, r3
 8008bc0:	4158      	adcs	r0, r3
 8008bc2:	bd30      	pop	{r4, r5, pc}
 8008bc4:	f813 5b01 	ldrb.w	r5, [r3], #1
 8008bc8:	f812 4b01 	ldrb.w	r4, [r2], #1
 8008bcc:	42a5      	cmp	r5, r4
 8008bce:	d0ed      	beq.n	8008bac <E131Bridge::IsValidRoot()+0xc>
 8008bd0:	2000      	movs	r0, #0
 8008bd2:	e7f6      	b.n	8008bc2 <E131Bridge::IsValidRoot()+0x22>
 8008bd4:	2001      	movs	r0, #1
 8008bd6:	e7f4      	b.n	8008bc2 <E131Bridge::IsValidRoot()+0x22>
 8008bd8:	08012017 	stmdaeq	r1, {r0, r1, r2, r4, sp}

08008bdc <E131Bridge::IsValidDataPacket()>:
 8008bdc:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8008be0:	2b02      	cmp	r3, #2
 8008be2:	d10d      	bne.n	8008c00 <E131Bridge::IsValidDataPacket()+0x24>
 8008be4:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 8008be8:	2ba1      	cmp	r3, #161	; 0xa1
 8008bea:	d109      	bne.n	8008c00 <E131Bridge::IsValidDataPacket()+0x24>
 8008bec:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 8008bf0:	b933      	cbnz	r3, 8008c00 <E131Bridge::IsValidDataPacket()+0x24>
 8008bf2:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 8008bf6:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 8008bfa:	4258      	negs	r0, r3
 8008bfc:	4158      	adcs	r0, r3
 8008bfe:	4770      	bx	lr
 8008c00:	2000      	movs	r0, #0
 8008c02:	4770      	bx	lr

08008c04 <E131Bridge::Run()>:
 8008c04:	b530      	push	{r4, r5, lr}
 8008c06:	4601      	mov	r1, r0
 8008c08:	4604      	mov	r4, r0
 8008c0a:	b085      	sub	sp, #20
 8008c0c:	f10d 030e 	add.w	r3, sp, #14
 8008c10:	f811 0b7c 	ldrb.w	r0, [r1], #124
 8008c14:	f44f 628f 	mov.w	r2, #1144	; 0x478
 8008c18:	9300      	str	r3, [sp, #0]
 8008c1a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 8008c1e:	f003 fcf1 	bl	800c604 <udp_recv>
 8008c22:	4b3c      	ldr	r3, [pc, #240]	; (8008d14 <E131Bridge::Run()+0x110>)
 8008c24:	681d      	ldr	r5, [r3, #0]
 8008c26:	60e5      	str	r5, [r4, #12]
 8008c28:	2800      	cmp	r0, #0
 8008c2a:	d13b      	bne.n	8008ca4 <E131Bridge::Run()+0xa0>
 8008c2c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 8008c30:	b183      	cbz	r3, 8008c54 <E131Bridge::Run()+0x50>
 8008c32:	f894 24f9 	ldrb.w	r2, [r4, #1273]	; 0x4f9
 8008c36:	6923      	ldr	r3, [r4, #16]
 8008c38:	bb6a      	cbnz	r2, 8008c96 <E131Bridge::Run()+0x92>
 8008c3a:	1aed      	subs	r5, r5, r3
 8008c3c:	f640 13c3 	movw	r3, #2499	; 0x9c3
 8008c40:	429d      	cmp	r5, r3
 8008c42:	d928      	bls.n	8008c96 <E131Bridge::Run()+0x92>
 8008c44:	6863      	ldr	r3, [r4, #4]
 8008c46:	b9eb      	cbnz	r3, 8008c84 <E131Bridge::Run()+0x80>
 8008c48:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008c4c:	f023 0302 	bic.w	r3, r3, #2
 8008c50:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008c54:	6963      	ldr	r3, [r4, #20]
 8008c56:	b12b      	cbz	r3, 8008c64 <E131Bridge::Run()+0x60>
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f000 f947 	bl	8008eec <E131Bridge::HandleDmxIn()>
 8008c5e:	4620      	mov	r0, r4
 8008c60:	f000 f8ca 	bl	8008df8 <E131Bridge::SendDiscoveryPacket()>
 8008c64:	7a23      	ldrb	r3, [r4, #8]
 8008c66:	b15b      	cbz	r3, 8008c80 <E131Bridge::Run()+0x7c>
 8008c68:	4b2b      	ldr	r3, [pc, #172]	; (8008d18 <E131Bridge::Run()+0x114>)
 8008c6a:	6818      	ldr	r0, [r3, #0]
 8008c6c:	6843      	ldr	r3, [r0, #4]
 8008c6e:	2b04      	cmp	r3, #4
 8008c70:	d006      	beq.n	8008c80 <E131Bridge::Run()+0x7c>
 8008c72:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008c76:	2b00      	cmp	r3, #0
 8008c78:	d049      	beq.n	8008d0e <E131Bridge::Run()+0x10a>
 8008c7a:	2103      	movs	r1, #3
 8008c7c:	f006 fb18 	bl	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 8008c80:	b005      	add	sp, #20
 8008c82:	bd30      	pop	{r4, r5, pc}
 8008c84:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 8008c88:	2b00      	cmp	r3, #0
 8008c8a:	d1dd      	bne.n	8008c48 <E131Bridge::Run()+0x44>
 8008c8c:	2201      	movs	r2, #1
 8008c8e:	4620      	mov	r0, r4
 8008c90:	4611      	mov	r1, r2
 8008c92:	f7ff fdc5 	bl	8008820 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8008c96:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 8008c9a:	1a9b      	subs	r3, r3, r2
 8008c9c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008ca0:	d3d8      	bcc.n	8008c54 <E131Bridge::Run()+0x50>
 8008ca2:	e7d1      	b.n	8008c48 <E131Bridge::Run()+0x44>
 8008ca4:	4620      	mov	r0, r4
 8008ca6:	f7ff ff7b 	bl	8008ba0 <E131Bridge::IsValidRoot()>
 8008caa:	2800      	cmp	r0, #0
 8008cac:	d0e8      	beq.n	8008c80 <E131Bridge::Run()+0x7c>
 8008cae:	2300      	movs	r3, #0
 8008cb0:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 8008cb4:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8008cb8:	6125      	str	r5, [r4, #16]
 8008cba:	b15b      	cbz	r3, 8008cd4 <E131Bridge::Run()+0xd0>
 8008cbc:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 8008cc0:	b943      	cbnz	r3, 8008cd4 <E131Bridge::Run()+0xd0>
 8008cc2:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 8008cc6:	1aad      	subs	r5, r5, r2
 8008cc8:	f640 12c3 	movw	r2, #2499	; 0x9c3
 8008ccc:	4295      	cmp	r5, r2
 8008cce:	bf88      	it	hi
 8008cd0:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 8008cd4:	6863      	ldr	r3, [r4, #4]
 8008cd6:	2b00      	cmp	r3, #0
 8008cd8:	d0bc      	beq.n	8008c54 <E131Bridge::Run()+0x50>
 8008cda:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 8008cde:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008ce2:	ba1a      	rev	r2, r3
 8008ce4:	d108      	bne.n	8008cf8 <E131Bridge::Run()+0xf4>
 8008ce6:	4620      	mov	r0, r4
 8008ce8:	f7ff ff78 	bl	8008bdc <E131Bridge::IsValidDataPacket()>
 8008cec:	2800      	cmp	r0, #0
 8008cee:	d0b1      	beq.n	8008c54 <E131Bridge::Run()+0x50>
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	f7ff fdff 	bl	80088f4 <E131Bridge::HandleDmx()>
 8008cf6:	e7ad      	b.n	8008c54 <E131Bridge::Run()+0x50>
 8008cf8:	2a08      	cmp	r2, #8
 8008cfa:	d1ab      	bne.n	8008c54 <E131Bridge::Run()+0x50>
 8008cfc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008d00:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008d04:	d1a6      	bne.n	8008c54 <E131Bridge::Run()+0x50>
 8008d06:	4620      	mov	r0, r4
 8008d08:	f000 f95c 	bl	8008fc4 <E131Bridge::HandleSynchronization()>
 8008d0c:	e7a2      	b.n	8008c54 <E131Bridge::Run()+0x50>
 8008d0e:	2102      	movs	r1, #2
 8008d10:	e7b4      	b.n	8008c7c <E131Bridge::Run()+0x78>
 8008d12:	bf00      	nop
 8008d14:	20009bdc 	ldrdcs	r9, [r0], -ip
 8008d18:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08008d1c <E131Bridge::FillDiscoveryPacket()>:
 8008d1c:	2200      	movs	r2, #0
 8008d1e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008d22:	b510      	push	{r4, lr}
 8008d24:	333c      	adds	r3, #60	; 0x3c
 8008d26:	005b      	lsls	r3, r3, #1
 8008d28:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 8008d2c:	69c3      	ldr	r3, [r0, #28]
 8008d2e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 8008d32:	428b      	cmp	r3, r1
 8008d34:	d14b      	bne.n	8008dce <E131Bridge::FillDiscoveryPacket()+0xb2>
 8008d36:	69c3      	ldr	r3, [r0, #28]
 8008d38:	492e      	ldr	r1, [pc, #184]	; (8008df4 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 8008d3a:	701a      	strb	r2, [r3, #0]
 8008d3c:	2210      	movs	r2, #16
 8008d3e:	705a      	strb	r2, [r3, #1]
 8008d40:	1d1a      	adds	r2, r3, #4
 8008d42:	3310      	adds	r3, #16
 8008d44:	4293      	cmp	r3, r2
 8008d46:	d145      	bne.n	8008dd4 <E131Bridge::FillDiscoveryPacket()+0xb8>
 8008d48:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8008d4c:	69c3      	ldr	r3, [r0, #28]
 8008d4e:	3234      	adds	r2, #52	; 0x34
 8008d50:	0052      	lsls	r2, r2, #1
 8008d52:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8008d56:	ba52      	rev16	r2, r2
 8008d58:	821a      	strh	r2, [r3, #16]
 8008d5a:	2200      	movs	r2, #0
 8008d5c:	749a      	strb	r2, [r3, #18]
 8008d5e:	74da      	strb	r2, [r3, #19]
 8008d60:	751a      	strb	r2, [r3, #20]
 8008d62:	2208      	movs	r2, #8
 8008d64:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8008d68:	755a      	strb	r2, [r3, #21]
 8008d6a:	3316      	adds	r3, #22
 8008d6c:	f100 0234 	add.w	r2, r0, #52	; 0x34
 8008d70:	4291      	cmp	r1, r2
 8008d72:	d134      	bne.n	8008dde <E131Bridge::FillDiscoveryPacket()+0xc2>
 8008d74:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8008d78:	69c3      	ldr	r3, [r0, #28]
 8008d7a:	3229      	adds	r2, #41	; 0x29
 8008d7c:	0052      	lsls	r2, r2, #1
 8008d7e:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8008d82:	ba52      	rev16	r2, r2
 8008d84:	84da      	strh	r2, [r3, #38]	; 0x26
 8008d86:	2200      	movs	r2, #0
 8008d88:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8008d8c:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8008d90:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8008d94:	2202      	movs	r2, #2
 8008d96:	332c      	adds	r3, #44	; 0x2c
 8008d98:	f803 2c01 	strb.w	r2, [r3, #-1]
 8008d9c:	f100 0274 	add.w	r2, r0, #116	; 0x74
 8008da0:	4291      	cmp	r1, r2
 8008da2:	d121      	bne.n	8008de8 <E131Bridge::FillDiscoveryPacket()+0xcc>
 8008da4:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008da8:	69c2      	ldr	r2, [r0, #28]
 8008daa:	3304      	adds	r3, #4
 8008dac:	005b      	lsls	r3, r3, #1
 8008dae:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 8008db2:	ba5b      	rev16	r3, r3
 8008db4:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 8008db8:	2300      	movs	r3, #0
 8008dba:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 8008dbe:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 8008dc2:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 8008dc6:	2301      	movs	r3, #1
 8008dc8:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 8008dcc:	bd10      	pop	{r4, pc}
 8008dce:	f803 2b01 	strb.w	r2, [r3], #1
 8008dd2:	e7ae      	b.n	8008d32 <E131Bridge::FillDiscoveryPacket()+0x16>
 8008dd4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008dd8:	f802 4b01 	strb.w	r4, [r2], #1
 8008ddc:	e7b2      	b.n	8008d44 <E131Bridge::FillDiscoveryPacket()+0x28>
 8008dde:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008de2:	f803 4b01 	strb.w	r4, [r3], #1
 8008de6:	e7c3      	b.n	8008d70 <E131Bridge::FillDiscoveryPacket()+0x54>
 8008de8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008dec:	f803 4b01 	strb.w	r4, [r3], #1
 8008df0:	e7d6      	b.n	8008da0 <E131Bridge::FillDiscoveryPacket()+0x84>
 8008df2:	bf00      	nop
 8008df4:	08012017 	stmdaeq	r1, {r0, r1, r2, r4, sp}

08008df8 <E131Bridge::SendDiscoveryPacket()>:
 8008df8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008dfa:	f242 710f 	movw	r1, #9999	; 0x270f
 8008dfe:	68c2      	ldr	r2, [r0, #12]
 8008e00:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 8008e04:	4604      	mov	r4, r0
 8008e06:	1ad3      	subs	r3, r2, r3
 8008e08:	428b      	cmp	r3, r1
 8008e0a:	d90e      	bls.n	8008e2a <E131Bridge::SendDiscoveryPacket()+0x32>
 8008e0c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008e10:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 8008e14:	b95b      	cbnz	r3, 8008e2e <E131Bridge::SendDiscoveryPacket()+0x36>
 8008e16:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 8008e1a:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 8008e1e:	9300      	str	r3, [sp, #0]
 8008e20:	69e1      	ldr	r1, [r4, #28]
 8008e22:	6a23      	ldr	r3, [r4, #32]
 8008e24:	7820      	ldrb	r0, [r4, #0]
 8008e26:	f003 fc49 	bl	800c6bc <udp_send>
 8008e2a:	b004      	add	sp, #16
 8008e2c:	bd10      	pop	{r4, pc}
 8008e2e:	2300      	movs	r3, #0
 8008e30:	f10d 020e 	add.w	r2, sp, #14
 8008e34:	4619      	mov	r1, r3
 8008e36:	f7ff fc5d 	bl	80086f4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8008e3a:	2800      	cmp	r0, #0
 8008e3c:	d0eb      	beq.n	8008e16 <E131Bridge::SendDiscoveryPacket()+0x1e>
 8008e3e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008e42:	69e2      	ldr	r2, [r4, #28]
 8008e44:	ba5b      	rev16	r3, r3
 8008e46:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 8008e4a:	e7e4      	b.n	8008e16 <E131Bridge::SendDiscoveryPacket()+0x1e>

08008e4c <memcpy.isra.0>:
 8008e4c:	3801      	subs	r0, #1
 8008e4e:	440a      	add	r2, r1
 8008e50:	4291      	cmp	r1, r2
 8008e52:	d100      	bne.n	8008e56 <memcpy.isra.0+0xa>
 8008e54:	4770      	bx	lr
 8008e56:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008e5a:	f800 3f01 	strb.w	r3, [r0, #1]!
 8008e5e:	e7f7      	b.n	8008e50 <memcpy.isra.0+0x4>

08008e60 <E131Bridge::FillDataPacket()>:
 8008e60:	b570      	push	{r4, r5, r6, lr}
 8008e62:	2400      	movs	r4, #0
 8008e64:	2610      	movs	r6, #16
 8008e66:	4605      	mov	r5, r0
 8008e68:	6980      	ldr	r0, [r0, #24]
 8008e6a:	220c      	movs	r2, #12
 8008e6c:	7046      	strb	r6, [r0, #1]
 8008e6e:	7004      	strb	r4, [r0, #0]
 8008e70:	7084      	strb	r4, [r0, #2]
 8008e72:	70c4      	strb	r4, [r0, #3]
 8008e74:	491c      	ldr	r1, [pc, #112]	; (8008ee8 <E131Bridge::FillDataPacket()+0x88>)
 8008e76:	3004      	adds	r0, #4
 8008e78:	f7ff ffe8 	bl	8008e4c <memcpy.isra.0>
 8008e7c:	2304      	movs	r3, #4
 8008e7e:	4632      	mov	r2, r6
 8008e80:	2602      	movs	r6, #2
 8008e82:	69a8      	ldr	r0, [r5, #24]
 8008e84:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8008e88:	7543      	strb	r3, [r0, #21]
 8008e8a:	7484      	strb	r4, [r0, #18]
 8008e8c:	74c4      	strb	r4, [r0, #19]
 8008e8e:	7504      	strb	r4, [r0, #20]
 8008e90:	3016      	adds	r0, #22
 8008e92:	f7ff ffdb 	bl	8008e4c <memcpy.isra.0>
 8008e96:	69a8      	ldr	r0, [r5, #24]
 8008e98:	2240      	movs	r2, #64	; 0x40
 8008e9a:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8008e9e:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 8008ea2:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 8008ea6:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 8008eaa:	f105 0134 	add.w	r1, r5, #52	; 0x34
 8008eae:	302c      	adds	r0, #44	; 0x2c
 8008eb0:	f7ff ffcc 	bl	8008e4c <memcpy.isra.0>
 8008eb4:	22a1      	movs	r2, #161	; 0xa1
 8008eb6:	69ab      	ldr	r3, [r5, #24]
 8008eb8:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 8008ebc:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 8008ec0:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 8008ec4:	69ab      	ldr	r3, [r5, #24]
 8008ec6:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 8008eca:	69ab      	ldr	r3, [r5, #24]
 8008ecc:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8008ed0:	2201      	movs	r2, #1
 8008ed2:	69ab      	ldr	r3, [r5, #24]
 8008ed4:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 8008ed8:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 8008edc:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 8008ee0:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 8008ee4:	bd70      	pop	{r4, r5, r6, pc}
 8008ee6:	bf00      	nop
 8008ee8:	08012017 	stmdaeq	r1, {r0, r1, r2, r4, sp}

08008eec <E131Bridge::HandleDmxIn()>:
 8008eec:	b530      	push	{r4, r5, lr}
 8008eee:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 8008ef2:	4604      	mov	r4, r0
 8008ef4:	b085      	sub	sp, #20
 8008ef6:	2b00      	cmp	r3, #0
 8008ef8:	d050      	beq.n	8008f9c <E131Bridge::HandleDmxIn()+0xb0>
 8008efa:	6940      	ldr	r0, [r0, #20]
 8008efc:	2100      	movs	r1, #0
 8008efe:	6803      	ldr	r3, [r0, #0]
 8008f00:	aa02      	add	r2, sp, #8
 8008f02:	691d      	ldr	r5, [r3, #16]
 8008f04:	ab03      	add	r3, sp, #12
 8008f06:	47a8      	blx	r5
 8008f08:	4601      	mov	r1, r0
 8008f0a:	2800      	cmp	r0, #0
 8008f0c:	d048      	beq.n	8008fa0 <E131Bridge::HandleDmxIn()+0xb4>
 8008f0e:	9a02      	ldr	r2, [sp, #8]
 8008f10:	69a0      	ldr	r0, [r4, #24]
 8008f12:	b293      	uxth	r3, r2
 8008f14:	f103 056d 	add.w	r5, r3, #109	; 0x6d
 8008f18:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 8008f1c:	ba6d      	rev16	r5, r5
 8008f1e:	8205      	strh	r5, [r0, #16]
 8008f20:	f103 0557 	add.w	r5, r3, #87	; 0x57
 8008f24:	f445 45e0 	orr.w	r5, r5, #28672	; 0x7000
 8008f28:	ba6d      	rev16	r5, r5
 8008f2a:	84c5      	strh	r5, [r0, #38]	; 0x26
 8008f2c:	f894 555d 	ldrb.w	r5, [r4, #1373]	; 0x55d
 8008f30:	330a      	adds	r3, #10
 8008f32:	f880 506c 	strb.w	r5, [r0, #108]	; 0x6c
 8008f36:	f894 055c 	ldrb.w	r0, [r4, #1372]	; 0x55c
 8008f3a:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 8008f3e:	1c45      	adds	r5, r0, #1
 8008f40:	f884 555c 	strb.w	r5, [r4, #1372]	; 0x55c
 8008f44:	69a5      	ldr	r5, [r4, #24]
 8008f46:	ba5b      	rev16	r3, r3
 8008f48:	f885 006f 	strb.w	r0, [r5, #111]	; 0x6f
 8008f4c:	f8b4 5554 	ldrh.w	r5, [r4, #1364]	; 0x554
 8008f50:	69a0      	ldr	r0, [r4, #24]
 8008f52:	ba6d      	rev16	r5, r5
 8008f54:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 8008f58:	f8a0 5071 	strh.w	r5, [r0, #113]	; 0x71
 8008f5c:	307d      	adds	r0, #125	; 0x7d
 8008f5e:	f7ff ff75 	bl	8008e4c <memcpy.isra.0>
 8008f62:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8008f66:	69a1      	ldr	r1, [r4, #24]
 8008f68:	ba53      	rev16	r3, r2
 8008f6a:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 8008f6e:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 8008f72:	327d      	adds	r2, #125	; 0x7d
 8008f74:	9300      	str	r3, [sp, #0]
 8008f76:	b292      	uxth	r2, r2
 8008f78:	f8d4 3558 	ldr.w	r3, [r4, #1368]	; 0x558
 8008f7c:	7820      	ldrb	r0, [r4, #0]
 8008f7e:	f003 fb9d 	bl	800c6bc <udp_send>
 8008f82:	4a0f      	ldr	r2, [pc, #60]	; (8008fc0 <E131Bridge::HandleDmxIn()+0xd4>)
 8008f84:	6813      	ldr	r3, [r2, #0]
 8008f86:	07d9      	lsls	r1, r3, #31
 8008f88:	d408      	bmi.n	8008f9c <E131Bridge::HandleDmxIn()+0xb0>
 8008f8a:	f043 0301 	orr.w	r3, r3, #1
 8008f8e:	6013      	str	r3, [r2, #0]
 8008f90:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008f94:	f043 0301 	orr.w	r3, r3, #1
 8008f98:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008f9c:	b005      	add	sp, #20
 8008f9e:	bd30      	pop	{r4, r5, pc}
 8008fa0:	9b03      	ldr	r3, [sp, #12]
 8008fa2:	2b00      	cmp	r3, #0
 8008fa4:	d1fa      	bne.n	8008f9c <E131Bridge::HandleDmxIn()+0xb0>
 8008fa6:	4a06      	ldr	r2, [pc, #24]	; (8008fc0 <E131Bridge::HandleDmxIn()+0xd4>)
 8008fa8:	6813      	ldr	r3, [r2, #0]
 8008faa:	f023 0301 	bic.w	r3, r3, #1
 8008fae:	6013      	str	r3, [r2, #0]
 8008fb0:	2b00      	cmp	r3, #0
 8008fb2:	d1f3      	bne.n	8008f9c <E131Bridge::HandleDmxIn()+0xb0>
 8008fb4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008fb8:	f023 0301 	bic.w	r3, r3, #1
 8008fbc:	e7ec      	b.n	8008f98 <E131Bridge::HandleDmxIn()+0xac>
 8008fbe:	bf00      	nop
 8008fc0:	20000708 	andcs	r0, r0, r8, lsl #14

08008fc4 <E131Bridge::HandleSynchronization()>:
 8008fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fc8:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 8008fcc:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8008fd0:	ba5b      	rev16	r3, r3
 8008fd2:	b29b      	uxth	r3, r3
 8008fd4:	429a      	cmp	r2, r3
 8008fd6:	4604      	mov	r4, r0
 8008fd8:	d00a      	beq.n	8008ff0 <E131Bridge::HandleSynchronization()+0x2c>
 8008fda:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8008fde:	429a      	cmp	r2, r3
 8008fe0:	d006      	beq.n	8008ff0 <E131Bridge::HandleSynchronization()+0x2c>
 8008fe2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008fe6:	4b1b      	ldr	r3, [pc, #108]	; (8009054 <E131Bridge::HandleSynchronization()+0x90>)
 8008fe8:	2102      	movs	r1, #2
 8008fea:	6818      	ldr	r0, [r3, #0]
 8008fec:	f006 b960 	b.w	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 8008ff0:	68e3      	ldr	r3, [r4, #12]
 8008ff2:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 8008ff6:	f894 3512 	ldrb.w	r3, [r4, #1298]	; 0x512
 8008ffa:	b30b      	cbz	r3, 8009040 <E131Bridge::HandleSynchronization()+0x7c>
 8008ffc:	4d16      	ldr	r5, [pc, #88]	; (8009058 <E131Bridge::HandleSynchronization()+0x94>)
 8008ffe:	6860      	ldr	r0, [r4, #4]
 8009000:	682b      	ldr	r3, [r5, #0]
 8009002:	4e16      	ldr	r6, [pc, #88]	; (800905c <E131Bridge::HandleSynchronization()+0x98>)
 8009004:	07da      	lsls	r2, r3, #31
 8009006:	bf5c      	itt	pl
 8009008:	2301      	movpl	r3, #1
 800900a:	602b      	strpl	r3, [r5, #0]
 800900c:	6803      	ldr	r3, [r0, #0]
 800900e:	2100      	movs	r1, #0
 8009010:	691f      	ldr	r7, [r3, #16]
 8009012:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 8009016:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800901a:	47b8      	blx	r7
 800901c:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 8009020:	b931      	cbnz	r1, 8009030 <E131Bridge::HandleSynchronization()+0x6c>
 8009022:	6860      	ldr	r0, [r4, #4]
 8009024:	6803      	ldr	r3, [r0, #0]
 8009026:	689b      	ldr	r3, [r3, #8]
 8009028:	4798      	blx	r3
 800902a:	2301      	movs	r3, #1
 800902c:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 8009030:	682b      	ldr	r3, [r5, #0]
 8009032:	07db      	lsls	r3, r3, #31
 8009034:	bf5c      	itt	pl
 8009036:	2301      	movpl	r3, #1
 8009038:	602b      	strpl	r3, [r5, #0]
 800903a:	2300      	movs	r3, #0
 800903c:	f8c6 3600 	str.w	r3, [r6, #1536]	; 0x600
 8009040:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8009042:	b120      	cbz	r0, 800904e <E131Bridge::HandleSynchronization()+0x8a>
 8009044:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009048:	6803      	ldr	r3, [r0, #0]
 800904a:	689b      	ldr	r3, [r3, #8]
 800904c:	4718      	bx	r3
 800904e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009052:	bf00      	nop
 8009054:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 8009058:	200000fc 	strdcs	r0, [r0], -ip
 800905c:	20000100 	andcs	r0, r0, r0, lsl #2

08009060 <E131Bridge::Print()>:
 8009060:	b530      	push	{r4, r5, lr}
 8009062:	2500      	movs	r5, #0
 8009064:	4604      	mov	r4, r0
 8009066:	b08d      	sub	sp, #52	; 0x34
 8009068:	a902      	add	r1, sp, #8
 800906a:	3024      	adds	r0, #36	; 0x24
 800906c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009070:	f000 fb00 	bl	8009674 <uuid_unparse>
 8009074:	4822      	ldr	r0, [pc, #136]	; (8009100 <E131Bridge::Print()+0xa0>)
 8009076:	f006 fcf1 	bl	800fa5c <printf>
 800907a:	4b22      	ldr	r3, [pc, #136]	; (8009104 <E131Bridge::Print()+0xa4>)
 800907c:	4822      	ldr	r0, [pc, #136]	; (8009108 <E131Bridge::Print()+0xa8>)
 800907e:	7819      	ldrb	r1, [r3, #0]
 8009080:	785a      	ldrb	r2, [r3, #1]
 8009082:	f006 fceb 	bl	800fa5c <printf>
 8009086:	4821      	ldr	r0, [pc, #132]	; (800910c <E131Bridge::Print()+0xac>)
 8009088:	a902      	add	r1, sp, #8
 800908a:	f006 fce7 	bl	800fa5c <printf>
 800908e:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 8009092:	b1bb      	cbz	r3, 80090c4 <E131Bridge::Print()+0x64>
 8009094:	481e      	ldr	r0, [pc, #120]	; (8009110 <E131Bridge::Print()+0xb0>)
 8009096:	f006 fce1 	bl	800fa5c <printf>
 800909a:	2301      	movs	r3, #1
 800909c:	4629      	mov	r1, r5
 800909e:	4620      	mov	r0, r4
 80090a0:	f10d 0206 	add.w	r2, sp, #6
 80090a4:	f7ff fb26 	bl	80086f4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80090a8:	b160      	cbz	r0, 80090c4 <E131Bridge::Print()+0x64>
 80090aa:	f8d4 154c 	ldr.w	r1, [r4, #1356]	; 0x54c
 80090ae:	4a19      	ldr	r2, [pc, #100]	; (8009114 <E131Bridge::Print()+0xb4>)
 80090b0:	4b19      	ldr	r3, [pc, #100]	; (8009118 <E131Bridge::Print()+0xb8>)
 80090b2:	481a      	ldr	r0, [pc, #104]	; (800911c <E131Bridge::Print()+0xbc>)
 80090b4:	42a9      	cmp	r1, r5
 80090b6:	bf18      	it	ne
 80090b8:	4613      	movne	r3, r2
 80090ba:	4629      	mov	r1, r5
 80090bc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80090c0:	f006 fccc 	bl	800fa5c <printf>
 80090c4:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 80090c8:	b193      	cbz	r3, 80090f0 <E131Bridge::Print()+0x90>
 80090ca:	4815      	ldr	r0, [pc, #84]	; (8009120 <E131Bridge::Print()+0xc0>)
 80090cc:	f006 fcc6 	bl	800fa5c <printf>
 80090d0:	2300      	movs	r3, #0
 80090d2:	4620      	mov	r0, r4
 80090d4:	4619      	mov	r1, r3
 80090d6:	f10d 0206 	add.w	r2, sp, #6
 80090da:	f7ff fb0b 	bl	80086f4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80090de:	b138      	cbz	r0, 80090f0 <E131Bridge::Print()+0x90>
 80090e0:	2100      	movs	r1, #0
 80090e2:	f894 355d 	ldrb.w	r3, [r4, #1373]	; 0x55d
 80090e6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80090ea:	480e      	ldr	r0, [pc, #56]	; (8009124 <E131Bridge::Print()+0xc4>)
 80090ec:	f006 fcb6 	bl	800fa5c <printf>
 80090f0:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 80090f4:	b113      	cbz	r3, 80090fc <E131Bridge::Print()+0x9c>
 80090f6:	480c      	ldr	r0, [pc, #48]	; (8009128 <E131Bridge::Print()+0xc8>)
 80090f8:	f006 fcb0 	bl	800fa5c <printf>
 80090fc:	b00d      	add	sp, #52	; 0x34
 80090fe:	bd30      	pop	{r4, r5, pc}
 8009100:	08011e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip}
 8009104:	08012023 	stmdaeq	r1, {r0, r1, r5, sp}
 8009108:	08011e70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, ip}
 800910c:	08011e83 	stmdaeq	r1, {r0, r1, r7, r9, sl, fp, ip}
 8009110:	08011e93 	stmdaeq	r1, {r0, r1, r4, r7, r9, sl, fp, ip}
 8009114:	08011e64 	stmdaeq	r1, {r2, r5, r6, r9, sl, fp, ip}
 8009118:	08011e60 	stmdaeq	r1, {r5, r6, r9, sl, fp, ip}
 800911c:	08011e9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, fp, ip}
 8009120:	08011ebb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, fp, ip}
 8009124:	08011ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, ip}
 8009128:	08011ee2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, fp, ip}

0800912c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800912c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800912e:	88c6      	ldrh	r6, [r0, #6]
 8009130:	8885      	ldrh	r5, [r0, #4]
 8009132:	42ae      	cmp	r6, r5
 8009134:	d216      	bcs.n	8009164 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 8009136:	4604      	mov	r4, r0
 8009138:	6800      	ldr	r0, [r0, #0]
 800913a:	1bad      	subs	r5, r5, r6
 800913c:	4430      	add	r0, r6
 800913e:	7a26      	ldrb	r6, [r4, #8]
 8009140:	b923      	cbnz	r3, 800914c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 8009142:	b926      	cbnz	r6, 800914e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 8009144:	9200      	str	r2, [sp, #0]
 8009146:	460b      	mov	r3, r1
 8009148:	4a09      	ldr	r2, [pc, #36]	; (8009170 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800914a:	e003      	b.n	8009154 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800914c:	b166      	cbz	r6, 8009168 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800914e:	460b      	mov	r3, r1
 8009150:	9200      	str	r2, [sp, #0]
 8009152:	4a08      	ldr	r2, [pc, #32]	; (8009174 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009154:	4629      	mov	r1, r5
 8009156:	f006 fca9 	bl	800faac <snprintf>
 800915a:	4285      	cmp	r5, r0
 800915c:	bfa2      	ittt	ge
 800915e:	88e3      	ldrhge	r3, [r4, #6]
 8009160:	181b      	addge	r3, r3, r0
 8009162:	80e3      	strhge	r3, [r4, #6]
 8009164:	b002      	add	sp, #8
 8009166:	bd70      	pop	{r4, r5, r6, pc}
 8009168:	9200      	str	r2, [sp, #0]
 800916a:	460b      	mov	r3, r1
 800916c:	4a02      	ldr	r2, [pc, #8]	; (8009178 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800916e:	e7f1      	b.n	8009154 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8009170:	08011f45 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, fp, ip}
 8009174:	08011f3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, fp, ip}
 8009178:	08011f46 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, fp, ip}

0800917c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800917c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800917e:	460b      	mov	r3, r1
 8009180:	8885      	ldrh	r5, [r0, #4]
 8009182:	88c1      	ldrh	r1, [r0, #6]
 8009184:	42a9      	cmp	r1, r5
 8009186:	d214      	bcs.n	80091b2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009188:	4604      	mov	r4, r0
 800918a:	6800      	ldr	r0, [r0, #0]
 800918c:	1a6d      	subs	r5, r5, r1
 800918e:	4408      	add	r0, r1
 8009190:	7a21      	ldrb	r1, [r4, #8]
 8009192:	b91a      	cbnz	r2, 800919c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009194:	b919      	cbnz	r1, 800919e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009196:	4a0a      	ldr	r2, [pc, #40]	; (80091c0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009198:	9100      	str	r1, [sp, #0]
 800919a:	e002      	b.n	80091a2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800919c:	b159      	cbz	r1, 80091b6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800919e:	9200      	str	r2, [sp, #0]
 80091a0:	4a08      	ldr	r2, [pc, #32]	; (80091c4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 80091a2:	4629      	mov	r1, r5
 80091a4:	f006 fc82 	bl	800faac <snprintf>
 80091a8:	4285      	cmp	r5, r0
 80091aa:	bfa2      	ittt	ge
 80091ac:	88e3      	ldrhge	r3, [r4, #6]
 80091ae:	181b      	addge	r3, r3, r0
 80091b0:	80e3      	strhge	r3, [r4, #6]
 80091b2:	b003      	add	sp, #12
 80091b4:	bd30      	pop	{r4, r5, pc}
 80091b6:	2201      	movs	r2, #1
 80091b8:	9200      	str	r2, [sp, #0]
 80091ba:	4a03      	ldr	r2, [pc, #12]	; (80091c8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 80091bc:	e7f1      	b.n	80091a2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 80091be:	bf00      	nop
 80091c0:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 80091c4:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 80091c8:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

080091cc <E131Params::E131Params(E131ParamsStore*)>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	221a      	movs	r2, #26
 80091d0:	4604      	mov	r4, r0
 80091d2:	f840 1b04 	str.w	r1, [r0], #4
 80091d6:	2100      	movs	r1, #0
 80091d8:	f006 fa26 	bl	800f628 <memset>
 80091dc:	2300      	movs	r3, #0
 80091de:	2201      	movs	r2, #1
 80091e0:	7323      	strb	r3, [r4, #12]
 80091e2:	72e2      	strb	r2, [r4, #11]
 80091e4:	73a3      	strb	r3, [r4, #14]
 80091e6:	2202      	movs	r2, #2
 80091e8:	7423      	strb	r3, [r4, #16]
 80091ea:	74a3      	strb	r3, [r4, #18]
 80091ec:	f246 43ff 	movw	r3, #25855	; 0x64ff
 80091f0:	7362      	strb	r2, [r4, #13]
 80091f2:	83e3      	strh	r3, [r4, #30]
 80091f4:	2203      	movs	r2, #3
 80091f6:	f246 4364 	movw	r3, #25700	; 0x6464
 80091fa:	73e2      	strb	r2, [r4, #15]
 80091fc:	8423      	strh	r3, [r4, #32]
 80091fe:	2204      	movs	r2, #4
 8009200:	2364      	movs	r3, #100	; 0x64
 8009202:	4620      	mov	r0, r4
 8009204:	7462      	strb	r2, [r4, #17]
 8009206:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800920a:	bd10      	pop	{r4, pc}

0800920c <E131Params::Load()>:
 800920c:	b508      	push	{r3, lr}
 800920e:	2300      	movs	r3, #0
 8009210:	4601      	mov	r1, r0
 8009212:	6043      	str	r3, [r0, #4]
 8009214:	6800      	ldr	r0, [r0, #0]
 8009216:	b120      	cbz	r0, 8009222 <E131Params::Load()+0x16>
 8009218:	6803      	ldr	r3, [r0, #0]
 800921a:	3104      	adds	r1, #4
 800921c:	68db      	ldr	r3, [r3, #12]
 800921e:	4798      	blx	r3
 8009220:	2001      	movs	r0, #1
 8009222:	bd08      	pop	{r3, pc}

08009224 <E131Params::Load(char const*, unsigned int)>:
 8009224:	6803      	ldr	r3, [r0, #0]
 8009226:	b1d3      	cbz	r3, 800925e <E131Params::Load(char const*, unsigned int)+0x3a>
 8009228:	2300      	movs	r3, #0
 800922a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800922c:	460d      	mov	r5, r1
 800922e:	4616      	mov	r6, r2
 8009230:	4604      	mov	r4, r0
 8009232:	6043      	str	r3, [r0, #4]
 8009234:	4602      	mov	r2, r0
 8009236:	490a      	ldr	r1, [pc, #40]	; (8009260 <E131Params::Load(char const*, unsigned int)+0x3c>)
 8009238:	4668      	mov	r0, sp
 800923a:	f005 fbef 	bl	800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800923e:	4632      	mov	r2, r6
 8009240:	4629      	mov	r1, r5
 8009242:	4668      	mov	r0, sp
 8009244:	f005 fbee 	bl	800ea24 <ReadConfigFile::Read(char const*, unsigned int)>
 8009248:	4621      	mov	r1, r4
 800924a:	f851 0b04 	ldr.w	r0, [r1], #4
 800924e:	6803      	ldr	r3, [r0, #0]
 8009250:	689b      	ldr	r3, [r3, #8]
 8009252:	4798      	blx	r3
 8009254:	4668      	mov	r0, sp
 8009256:	f005 fbe4 	bl	800ea22 <ReadConfigFile::~ReadConfigFile()>
 800925a:	b002      	add	sp, #8
 800925c:	bd70      	pop	{r4, r5, r6, pc}
 800925e:	4770      	bx	lr
 8009260:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}

08009264 <E131Params::callbackFunction(char const*)>:
 8009264:	b530      	push	{r4, r5, lr}
 8009266:	460d      	mov	r5, r1
 8009268:	b087      	sub	sp, #28
 800926a:	4604      	mov	r4, r0
 800926c:	4956      	ldr	r1, [pc, #344]	; (80093c8 <E131Params::callbackFunction(char const*)+0x164>)
 800926e:	4628      	mov	r0, r5
 8009270:	f10d 0202 	add.w	r2, sp, #2
 8009274:	f005 fc64 	bl	800eb40 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009278:	b9a0      	cbnz	r0, 80092a4 <E131Params::callbackFunction(char const*)+0x40>
 800927a:	f64f 15fe 	movw	r5, #63998	; 0xf9fe
 800927e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8009282:	6863      	ldr	r3, [r4, #4]
 8009284:	1e4a      	subs	r2, r1, #1
 8009286:	b292      	uxth	r2, r2
 8009288:	42aa      	cmp	r2, r5
 800928a:	bf81      	itttt	hi
 800928c:	2201      	movhi	r2, #1
 800928e:	7320      	strbhi	r0, [r4, #12]
 8009290:	72e2      	strbhi	r2, [r4, #11]
 8009292:	f023 0310 	bichi.w	r3, r3, #16
 8009296:	bf9c      	itt	ls
 8009298:	f8a4 100b 	strhls.w	r1, [r4, #11]
 800929c:	f043 0310 	orrls.w	r3, r3, #16
 80092a0:	6063      	str	r3, [r4, #4]
 80092a2:	e053      	b.n	800934c <E131Params::callbackFunction(char const*)+0xe8>
 80092a4:	2303      	movs	r3, #3
 80092a6:	4628      	mov	r0, r5
 80092a8:	9301      	str	r3, [sp, #4]
 80092aa:	4948      	ldr	r1, [pc, #288]	; (80093cc <E131Params::callbackFunction(char const*)+0x168>)
 80092ac:	ab01      	add	r3, sp, #4
 80092ae:	aa02      	add	r2, sp, #8
 80092b0:	f005 fbec 	bl	800ea8c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092b4:	b9e0      	cbnz	r0, 80092f0 <E131Params::callbackFunction(char const*)+0x8c>
 80092b6:	f89d 2008 	ldrb.w	r2, [sp, #8]
 80092ba:	6863      	ldr	r3, [r4, #4]
 80092bc:	f042 0220 	orr.w	r2, r2, #32
 80092c0:	2a6c      	cmp	r2, #108	; 0x6c
 80092c2:	d110      	bne.n	80092e6 <E131Params::callbackFunction(char const*)+0x82>
 80092c4:	f89d 2009 	ldrb.w	r2, [sp, #9]
 80092c8:	f042 0220 	orr.w	r2, r2, #32
 80092cc:	2a74      	cmp	r2, #116	; 0x74
 80092ce:	d10a      	bne.n	80092e6 <E131Params::callbackFunction(char const*)+0x82>
 80092d0:	f89d 200a 	ldrb.w	r2, [sp, #10]
 80092d4:	f042 0220 	orr.w	r2, r2, #32
 80092d8:	2a70      	cmp	r2, #112	; 0x70
 80092da:	d104      	bne.n	80092e6 <E131Params::callbackFunction(char const*)+0x82>
 80092dc:	2201      	movs	r2, #1
 80092de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80092e2:	7522      	strb	r2, [r4, #20]
 80092e4:	e7dc      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 80092e6:	2200      	movs	r2, #0
 80092e8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80092ec:	7522      	strb	r2, [r4, #20]
 80092ee:	e7d7      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 80092f0:	2305      	movs	r3, #5
 80092f2:	4628      	mov	r0, r5
 80092f4:	9301      	str	r3, [sp, #4]
 80092f6:	4936      	ldr	r1, [pc, #216]	; (80093d0 <E131Params::callbackFunction(char const*)+0x16c>)
 80092f8:	ab01      	add	r3, sp, #4
 80092fa:	aa02      	add	r2, sp, #8
 80092fc:	f005 fbc6 	bl	800ea8c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009300:	bb30      	cbnz	r0, 8009350 <E131Params::callbackFunction(char const*)+0xec>
 8009302:	f89d 2008 	ldrb.w	r2, [sp, #8]
 8009306:	7fa3      	ldrb	r3, [r4, #30]
 8009308:	f042 0220 	orr.w	r2, r2, #32
 800930c:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009310:	2a69      	cmp	r2, #105	; 0x69
 8009312:	77a3      	strb	r3, [r4, #30]
 8009314:	d117      	bne.n	8009346 <E131Params::callbackFunction(char const*)+0xe2>
 8009316:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800931a:	f042 0220 	orr.w	r2, r2, #32
 800931e:	2a6e      	cmp	r2, #110	; 0x6e
 8009320:	d111      	bne.n	8009346 <E131Params::callbackFunction(char const*)+0xe2>
 8009322:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8009326:	f042 0220 	orr.w	r2, r2, #32
 800932a:	2a70      	cmp	r2, #112	; 0x70
 800932c:	d10b      	bne.n	8009346 <E131Params::callbackFunction(char const*)+0xe2>
 800932e:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8009332:	f042 0220 	orr.w	r2, r2, #32
 8009336:	2a75      	cmp	r2, #117	; 0x75
 8009338:	d105      	bne.n	8009346 <E131Params::callbackFunction(char const*)+0xe2>
 800933a:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800933e:	f042 0220 	orr.w	r2, r2, #32
 8009342:	2a74      	cmp	r2, #116	; 0x74
 8009344:	d002      	beq.n	800934c <E131Params::callbackFunction(char const*)+0xe8>
 8009346:	f043 0301 	orr.w	r3, r3, #1
 800934a:	77a3      	strb	r3, [r4, #30]
 800934c:	b007      	add	sp, #28
 800934e:	bd30      	pop	{r4, r5, pc}
 8009350:	4628      	mov	r0, r5
 8009352:	4920      	ldr	r1, [pc, #128]	; (80093d4 <E131Params::callbackFunction(char const*)+0x170>)
 8009354:	f10d 0201 	add.w	r2, sp, #1
 8009358:	f005 fc10 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800935c:	b988      	cbnz	r0, 8009382 <E131Params::callbackFunction(char const*)+0x11e>
 800935e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8009362:	6863      	ldr	r3, [r4, #4]
 8009364:	1e51      	subs	r1, r2, #1
 8009366:	b2c9      	uxtb	r1, r1
 8009368:	29c7      	cmp	r1, #199	; 0xc7
 800936a:	d805      	bhi.n	8009378 <E131Params::callbackFunction(char const*)+0x114>
 800936c:	2a64      	cmp	r2, #100	; 0x64
 800936e:	d003      	beq.n	8009378 <E131Params::callbackFunction(char const*)+0x114>
 8009370:	77e2      	strb	r2, [r4, #31]
 8009372:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009376:	e793      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 8009378:	2264      	movs	r2, #100	; 0x64
 800937a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800937e:	77e2      	strb	r2, [r4, #31]
 8009380:	e78e      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 8009382:	4628      	mov	r0, r5
 8009384:	4914      	ldr	r1, [pc, #80]	; (80093d8 <E131Params::callbackFunction(char const*)+0x174>)
 8009386:	f10d 0201 	add.w	r2, sp, #1
 800938a:	f005 fbf7 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800938e:	b948      	cbnz	r0, 80093a4 <E131Params::callbackFunction(char const*)+0x140>
 8009390:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8009394:	6863      	ldr	r3, [r4, #4]
 8009396:	b112      	cbz	r2, 800939e <E131Params::callbackFunction(char const*)+0x13a>
 8009398:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800939c:	e780      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 800939e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80093a2:	e77d      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 80093a4:	4628      	mov	r0, r5
 80093a6:	490d      	ldr	r1, [pc, #52]	; (80093dc <E131Params::callbackFunction(char const*)+0x178>)
 80093a8:	f10d 0201 	add.w	r2, sp, #1
 80093ac:	f005 fbe6 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80093b0:	2800      	cmp	r0, #0
 80093b2:	d1cb      	bne.n	800934c <E131Params::callbackFunction(char const*)+0xe8>
 80093b4:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80093b8:	6863      	ldr	r3, [r4, #4]
 80093ba:	b112      	cbz	r2, 80093c2 <E131Params::callbackFunction(char const*)+0x15e>
 80093bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80093c0:	e76e      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 80093c2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80093c6:	e76b      	b.n	80092a0 <E131Params::callbackFunction(char const*)+0x3c>
 80093c8:	0801368c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp}
 80093cc:	080136cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp}
 80093d0:	0801372f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, ip, sp}
 80093d4:	08011fc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, fp, ip}
 80093d8:	08011fa4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, fp, ip}
 80093dc:	08011f8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, fp, ip}

080093e0 <E131Params::staticCallbackFunction(void*, char const*)>:
 80093e0:	f7ff bf40 	b.w	8009264 <E131Params::callbackFunction(char const*)>

080093e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 80093e4:	b570      	push	{r4, r5, r6, lr}
 80093e6:	4604      	mov	r4, r0
 80093e8:	4615      	mov	r5, r2
 80093ea:	461e      	mov	r6, r3
 80093ec:	b086      	sub	sp, #24
 80093ee:	3004      	adds	r0, #4
 80093f0:	b369      	cbz	r1, 800944e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6a>
 80093f2:	221f      	movs	r2, #31
 80093f4:	f006 f901 	bl	800f5fa <memmove>
 80093f8:	462a      	mov	r2, r5
 80093fa:	4633      	mov	r3, r6
 80093fc:	4955      	ldr	r1, [pc, #340]	; (8009554 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>)
 80093fe:	a803      	add	r0, sp, #12
 8009400:	f005 fa6c 	bl	800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009404:	7fa3      	ldrb	r3, [r4, #30]
 8009406:	4954      	ldr	r1, [pc, #336]	; (8009558 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x174>)
 8009408:	f013 0f01 	tst.w	r3, #1
 800940c:	ea6f 0303 	mvn.w	r3, r3
 8009410:	4a52      	ldr	r2, [pc, #328]	; (800955c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x178>)
 8009412:	f003 0301 	and.w	r3, r3, #1
 8009416:	bf08      	it	eq
 8009418:	460a      	moveq	r2, r1
 800941a:	a803      	add	r0, sp, #12
 800941c:	4950      	ldr	r1, [pc, #320]	; (8009560 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>)
 800941e:	f7ff fe85 	bl	800912c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 8009422:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009426:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800942a:	f8b4 300b 	ldrh.w	r3, [r4, #11]
 800942e:	42aa      	cmp	r2, r5
 8009430:	6861      	ldr	r1, [r4, #4]
 8009432:	d222      	bcs.n	800947a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x96>
 8009434:	9803      	ldr	r0, [sp, #12]
 8009436:	06ce      	lsls	r6, r1, #27
 8009438:	4410      	add	r0, r2
 800943a:	eba5 0502 	sub.w	r5, r5, r2
 800943e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009442:	d40b      	bmi.n	800945c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x78>
 8009444:	b962      	cbnz	r2, 8009460 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 8009446:	9300      	str	r3, [sp, #0]
 8009448:	4a46      	ldr	r2, [pc, #280]	; (8009564 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 800944a:	4b47      	ldr	r3, [pc, #284]	; (8009568 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 800944c:	e00b      	b.n	8009466 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800944e:	6823      	ldr	r3, [r4, #0]
 8009450:	4601      	mov	r1, r0
 8009452:	681a      	ldr	r2, [r3, #0]
 8009454:	4618      	mov	r0, r3
 8009456:	68d2      	ldr	r2, [r2, #12]
 8009458:	4790      	blx	r2
 800945a:	e7cd      	b.n	80093f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800945c:	2a00      	cmp	r2, #0
 800945e:	d036      	beq.n	80094ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xea>
 8009460:	9300      	str	r3, [sp, #0]
 8009462:	4a42      	ldr	r2, [pc, #264]	; (800956c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x188>)
 8009464:	4b40      	ldr	r3, [pc, #256]	; (8009568 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 8009466:	4629      	mov	r1, r5
 8009468:	f006 fb20 	bl	800faac <snprintf>
 800946c:	4285      	cmp	r5, r0
 800946e:	bfa2      	ittt	ge
 8009470:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009474:	18c0      	addge	r0, r0, r3
 8009476:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800947a:	493d      	ldr	r1, [pc, #244]	; (8009570 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18c>)
 800947c:	a803      	add	r0, sp, #12
 800947e:	f005 fab3 	bl	800e9e8 <PropertiesBuilder::AddComment(char const*)>
 8009482:	7d20      	ldrb	r0, [r4, #20]
 8009484:	6863      	ldr	r3, [r4, #4]
 8009486:	493b      	ldr	r1, [pc, #236]	; (8009574 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x190>)
 8009488:	4a3b      	ldr	r2, [pc, #236]	; (8009578 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x194>)
 800948a:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800948e:	2800      	cmp	r0, #0
 8009490:	bf18      	it	ne
 8009492:	460a      	movne	r2, r1
 8009494:	4939      	ldr	r1, [pc, #228]	; (800957c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x198>)
 8009496:	a803      	add	r0, sp, #12
 8009498:	f7ff fe48 	bl	800912c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800949c:	4938      	ldr	r1, [pc, #224]	; (8009580 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 800949e:	a803      	add	r0, sp, #12
 80094a0:	f005 faa2 	bl	800e9e8 <PropertiesBuilder::AddComment(char const*)>
 80094a4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80094a8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80094ac:	7fe3      	ldrb	r3, [r4, #31]
 80094ae:	42aa      	cmp	r2, r5
 80094b0:	6861      	ldr	r1, [r4, #4]
 80094b2:	d21f      	bcs.n	80094f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x110>
 80094b4:	9803      	ldr	r0, [sp, #12]
 80094b6:	03c9      	lsls	r1, r1, #15
 80094b8:	4410      	add	r0, r2
 80094ba:	eba5 0502 	sub.w	r5, r5, r2
 80094be:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80094c2:	d408      	bmi.n	80094d6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 80094c4:	b94a      	cbnz	r2, 80094da <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 80094c6:	9300      	str	r3, [sp, #0]
 80094c8:	4a26      	ldr	r2, [pc, #152]	; (8009564 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 80094ca:	4b2e      	ldr	r3, [pc, #184]	; (8009584 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 80094cc:	e008      	b.n	80094e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 80094ce:	9300      	str	r3, [sp, #0]
 80094d0:	4a2d      	ldr	r2, [pc, #180]	; (8009588 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a4>)
 80094d2:	4b25      	ldr	r3, [pc, #148]	; (8009568 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 80094d4:	e7c7      	b.n	8009466 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80094d6:	2a00      	cmp	r2, #0
 80094d8:	d037      	beq.n	800954a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x166>
 80094da:	9300      	str	r3, [sp, #0]
 80094dc:	4a23      	ldr	r2, [pc, #140]	; (800956c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x188>)
 80094de:	4b29      	ldr	r3, [pc, #164]	; (8009584 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 80094e0:	4629      	mov	r1, r5
 80094e2:	f006 fae3 	bl	800faac <snprintf>
 80094e6:	4285      	cmp	r5, r0
 80094e8:	bfa2      	ittt	ge
 80094ea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80094ee:	18c0      	addge	r0, r0, r3
 80094f0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80094f4:	4925      	ldr	r1, [pc, #148]	; (800958c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a8>)
 80094f6:	a803      	add	r0, sp, #12
 80094f8:	f005 fa76 	bl	800e9e8 <PropertiesBuilder::AddComment(char const*)>
 80094fc:	6862      	ldr	r2, [r4, #4]
 80094fe:	4924      	ldr	r1, [pc, #144]	; (8009590 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ac>)
 8009500:	f3c2 3200 	ubfx	r2, r2, #12, #1
 8009504:	a803      	add	r0, sp, #12
 8009506:	f7ff fe39 	bl	800917c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800950a:	6862      	ldr	r2, [r4, #4]
 800950c:	4921      	ldr	r1, [pc, #132]	; (8009594 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1b0>)
 800950e:	f3c2 3240 	ubfx	r2, r2, #13, #1
 8009512:	a803      	add	r0, sp, #12
 8009514:	f7ff fe32 	bl	800917c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009518:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800951c:	b17b      	cbz	r3, 800953e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x15a>
 800951e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009522:	9b03      	ldr	r3, [sp, #12]
 8009524:	4413      	add	r3, r2
 8009526:	227d      	movs	r2, #125	; 0x7d
 8009528:	f803 2c01 	strb.w	r2, [r3, #-1]
 800952c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009530:	9903      	ldr	r1, [sp, #12]
 8009532:	54ca      	strb	r2, [r1, r3]
 8009534:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009538:	3301      	adds	r3, #1
 800953a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800953e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009542:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009544:	601a      	str	r2, [r3, #0]
 8009546:	b006      	add	sp, #24
 8009548:	bd70      	pop	{r4, r5, r6, pc}
 800954a:	9300      	str	r3, [sp, #0]
 800954c:	4a0e      	ldr	r2, [pc, #56]	; (8009588 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a4>)
 800954e:	4b0d      	ldr	r3, [pc, #52]	; (8009584 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 8009550:	e7c6      	b.n	80094e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8009552:	bf00      	nop
 8009554:	0801200e 	stmdaeq	r1, {r1, r2, r3, sp}
 8009558:	08011f5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, sl, fp, ip}
 800955c:	08011f64 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, fp, ip}
 8009560:	0801372f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, ip, sp}
 8009564:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 8009568:	0801368c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp}
 800956c:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 8009570:	08011f73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip}
 8009574:	08011f6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip}
 8009578:	08011f6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip}
 800957c:	080136cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp}
 8009580:	08011f7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip}
 8009584:	08011fc6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, fp, ip}
 8009588:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800958c:	08011f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip}
 8009590:	08011fa4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, fp, ip}
 8009594:	08011f8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, fp, ip}

08009598 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 8009598:	b513      	push	{r0, r1, r4, lr}
 800959a:	6804      	ldr	r4, [r0, #0]
 800959c:	b914      	cbnz	r4, 80095a4 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800959e:	601c      	str	r4, [r3, #0]
 80095a0:	b002      	add	sp, #8
 80095a2:	bd10      	pop	{r4, pc}
 80095a4:	9300      	str	r3, [sp, #0]
 80095a6:	4613      	mov	r3, r2
 80095a8:	460a      	mov	r2, r1
 80095aa:	2100      	movs	r1, #0
 80095ac:	f7ff ff1a 	bl	80093e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 80095b0:	e7f6      	b.n	80095a0 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

080095b2 <E131Params::Set(E131Bridge*)>:
 80095b2:	6843      	ldr	r3, [r0, #4]
 80095b4:	b903      	cbnz	r3, 80095b8 <E131Params::Set(E131Bridge*)+0x6>
 80095b6:	4770      	bx	lr
 80095b8:	05da      	lsls	r2, r3, #23
 80095ba:	d502      	bpl.n	80095c2 <E131Params::Set(E131Bridge*)+0x10>
 80095bc:	7d02      	ldrb	r2, [r0, #20]
 80095be:	f8c1 254c 	str.w	r2, [r1, #1356]	; 0x54c
 80095c2:	03db      	lsls	r3, r3, #15
 80095c4:	d506      	bpl.n	80095d4 <E131Params::Set(E131Bridge*)+0x22>
 80095c6:	7fc2      	ldrb	r2, [r0, #31]
 80095c8:	1e53      	subs	r3, r2, #1
 80095ca:	b2db      	uxtb	r3, r3
 80095cc:	2bc7      	cmp	r3, #199	; 0xc7
 80095ce:	d801      	bhi.n	80095d4 <E131Params::Set(E131Bridge*)+0x22>
 80095d0:	f881 255d 	strb.w	r2, [r1, #1373]	; 0x55d
 80095d4:	6843      	ldr	r3, [r0, #4]
 80095d6:	04da      	lsls	r2, r3, #19
 80095d8:	bf44      	itt	mi
 80095da:	2201      	movmi	r2, #1
 80095dc:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 80095e0:	049b      	lsls	r3, r3, #18
 80095e2:	bf44      	itt	mi
 80095e4:	2301      	movmi	r3, #1
 80095e6:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 80095ea:	4770      	bx	lr

080095ec <E131Params::Dump()>:
 80095ec:	4770      	bx	lr

080095ee <uuid_unparse_x>:
 80095ee:	4603      	mov	r3, r0
 80095f0:	b530      	push	{r4, r5, lr}
 80095f2:	4608      	mov	r0, r1
 80095f4:	4611      	mov	r1, r2
 80095f6:	681a      	ldr	r2, [r3, #0]
 80095f8:	b08f      	sub	sp, #60	; 0x3c
 80095fa:	ba12      	rev	r2, r2
 80095fc:	920a      	str	r2, [sp, #40]	; 0x28
 80095fe:	889a      	ldrh	r2, [r3, #4]
 8009600:	891c      	ldrh	r4, [r3, #8]
 8009602:	ba52      	rev16	r2, r2
 8009604:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8009608:	88da      	ldrh	r2, [r3, #6]
 800960a:	ba64      	rev16	r4, r4
 800960c:	ba52      	rev16	r2, r2
 800960e:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8009612:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 8009616:	f103 020a 	add.w	r2, r3, #10
 800961a:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800961e:	3310      	adds	r3, #16
 8009620:	4293      	cmp	r3, r2
 8009622:	d122      	bne.n	800966a <uuid_unparse_x+0x7c>
 8009624:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 8009628:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800962c:	9208      	str	r2, [sp, #32]
 800962e:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 8009632:	0a1b      	lsrs	r3, r3, #8
 8009634:	9207      	str	r2, [sp, #28]
 8009636:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800963a:	9301      	str	r3, [sp, #4]
 800963c:	9206      	str	r2, [sp, #24]
 800963e:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8009642:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8009646:	9205      	str	r2, [sp, #20]
 8009648:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800964c:	9300      	str	r3, [sp, #0]
 800964e:	9204      	str	r2, [sp, #16]
 8009650:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 8009654:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8009658:	9203      	str	r2, [sp, #12]
 800965a:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800965e:	9202      	str	r2, [sp, #8]
 8009660:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009662:	f006 fa0b 	bl	800fa7c <sprintf>
 8009666:	b00f      	add	sp, #60	; 0x3c
 8009668:	bd30      	pop	{r4, r5, pc}
 800966a:	f812 5b01 	ldrb.w	r5, [r2], #1
 800966e:	f804 5b01 	strb.w	r5, [r4], #1
 8009672:	e7d5      	b.n	8009620 <uuid_unparse_x+0x32>

08009674 <uuid_unparse>:
 8009674:	4a01      	ldr	r2, [pc, #4]	; (800967c <uuid_unparse+0x8>)
 8009676:	f7ff bfba 	b.w	80095ee <uuid_unparse_x>
 800967a:	bf00      	nop
 800967c:	08012025 	stmdaeq	r1, {r0, r2, r5, sp}

08009680 <LightSet::Blackout(bool)>:
 8009680:	4770      	bx	lr

08009682 <DmxSend::~DmxSend()>:
 8009682:	4770      	bx	lr

08009684 <DmxSend::Start(unsigned int)>:
 8009684:	2301      	movs	r3, #1
 8009686:	b430      	push	{r4, r5}
 8009688:	4c08      	ldr	r4, [pc, #32]	; (80096ac <DmxSend::Start(unsigned int)+0x28>)
 800968a:	fa03 f001 	lsl.w	r0, r3, r1
 800968e:	7822      	ldrb	r2, [r4, #0]
 8009690:	ea30 0502 	bics.w	r5, r0, r2
 8009694:	d007      	beq.n	80096a6 <DmxSend::Start(unsigned int)+0x22>
 8009696:	4302      	orrs	r2, r0
 8009698:	4805      	ldr	r0, [pc, #20]	; (80096b0 <DmxSend::Start(unsigned int)+0x2c>)
 800969a:	7022      	strb	r2, [r4, #0]
 800969c:	6800      	ldr	r0, [r0, #0]
 800969e:	2200      	movs	r2, #0
 80096a0:	bc30      	pop	{r4, r5}
 80096a2:	f000 bca9 	b.w	8009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80096a6:	bc30      	pop	{r4, r5}
 80096a8:	4770      	bx	lr
 80096aa:	bf00      	nop
 80096ac:	2000070c 	andcs	r0, r0, ip, lsl #14
 80096b0:	20000b4c 	andcs	r0, r0, ip, asr #22

080096b4 <DmxSend::Stop(unsigned int)>:
 80096b4:	2201      	movs	r2, #1
 80096b6:	b410      	push	{r4}
 80096b8:	4809      	ldr	r0, [pc, #36]	; (80096e0 <DmxSend::Stop(unsigned int)+0x2c>)
 80096ba:	408a      	lsls	r2, r1
 80096bc:	7803      	ldrb	r3, [r0, #0]
 80096be:	ea03 0402 	and.w	r4, r3, r2
 80096c2:	439a      	bics	r2, r3
 80096c4:	d109      	bne.n	80096da <DmxSend::Stop(unsigned int)+0x26>
 80096c6:	ea23 0304 	bic.w	r3, r3, r4
 80096ca:	7003      	strb	r3, [r0, #0]
 80096cc:	2300      	movs	r3, #0
 80096ce:	4805      	ldr	r0, [pc, #20]	; (80096e4 <DmxSend::Stop(unsigned int)+0x30>)
 80096d0:	461a      	mov	r2, r3
 80096d2:	6800      	ldr	r0, [r0, #0]
 80096d4:	bc10      	pop	{r4}
 80096d6:	f000 bc8f 	b.w	8009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80096da:	bc10      	pop	{r4}
 80096dc:	4770      	bx	lr
 80096de:	bf00      	nop
 80096e0:	2000070c 	andcs	r0, r0, ip, lsl #14
 80096e4:	20000b4c 	andcs	r0, r0, ip, asr #22

080096e8 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 80096e8:	b11b      	cbz	r3, 80096f2 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 80096ea:	4802      	ldr	r0, [pc, #8]	; (80096f4 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 80096ec:	6800      	ldr	r0, [r0, #0]
 80096ee:	f000 bde3 	b.w	800a2b8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 80096f2:	4770      	bx	lr
 80096f4:	20000b4c 	andcs	r0, r0, ip, asr #22

080096f8 <DmxSend::Print()>:
 80096f8:	b510      	push	{r4, lr}
 80096fa:	4c0e      	ldr	r4, [pc, #56]	; (8009734 <DmxSend::Print()+0x3c>)
 80096fc:	480e      	ldr	r0, [pc, #56]	; (8009738 <DmxSend::Print()+0x40>)
 80096fe:	f006 f9ad 	bl	800fa5c <printf>
 8009702:	6823      	ldr	r3, [r4, #0]
 8009704:	480d      	ldr	r0, [pc, #52]	; (800973c <DmxSend::Print()+0x44>)
 8009706:	6819      	ldr	r1, [r3, #0]
 8009708:	f006 f9a8 	bl	800fa5c <printf>
 800970c:	6823      	ldr	r3, [r4, #0]
 800970e:	480c      	ldr	r0, [pc, #48]	; (8009740 <DmxSend::Print()+0x48>)
 8009710:	6859      	ldr	r1, [r3, #4]
 8009712:	f006 f9a3 	bl	800fa5c <printf>
 8009716:	6823      	ldr	r3, [r4, #0]
 8009718:	490a      	ldr	r1, [pc, #40]	; (8009744 <DmxSend::Print()+0x4c>)
 800971a:	689b      	ldr	r3, [r3, #8]
 800971c:	480a      	ldr	r0, [pc, #40]	; (8009748 <DmxSend::Print()+0x50>)
 800971e:	fbb1 f1f3 	udiv	r1, r1, r3
 8009722:	f006 f99b 	bl	800fa5c <printf>
 8009726:	6823      	ldr	r3, [r4, #0]
 8009728:	4808      	ldr	r0, [pc, #32]	; (800974c <DmxSend::Print()+0x54>)
 800972a:	8a19      	ldrh	r1, [r3, #16]
 800972c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009730:	f006 b994 	b.w	800fa5c <printf>
 8009734:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009738:	08012056 	stmdaeq	r1, {r1, r2, r4, r6, sp}
 800973c:	08012060 	stmdaeq	r1, {r5, r6, sp}
 8009740:	08012074 	stmdaeq	r1, {r2, r4, r5, r6, sp}
 8009744:	000f4240 	andeq	r4, pc, r0, asr #4
 8009748:	08012088 	stmdaeq	r1, {r3, r7, sp}
 800974c:	0801209c 	stmdaeq	r1, {r2, r3, r4, r7, sp}

08009750 <DmxSend::~DmxSend()>:
 8009750:	b510      	push	{r4, lr}
 8009752:	4604      	mov	r4, r0
 8009754:	f005 fe8e 	bl	800f474 <operator delete(void*)>
 8009758:	4620      	mov	r0, r4
 800975a:	bd10      	pop	{r4, pc}

0800975c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800975c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800975e:	88c6      	ldrh	r6, [r0, #6]
 8009760:	8885      	ldrh	r5, [r0, #4]
 8009762:	42ae      	cmp	r6, r5
 8009764:	d216      	bcs.n	8009794 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8009766:	4604      	mov	r4, r0
 8009768:	6800      	ldr	r0, [r0, #0]
 800976a:	1bad      	subs	r5, r5, r6
 800976c:	4430      	add	r0, r6
 800976e:	7a26      	ldrb	r6, [r4, #8]
 8009770:	b923      	cbnz	r3, 800977c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009772:	b926      	cbnz	r6, 800977e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009774:	9200      	str	r2, [sp, #0]
 8009776:	460b      	mov	r3, r1
 8009778:	4a09      	ldr	r2, [pc, #36]	; (80097a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800977a:	e003      	b.n	8009784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800977c:	b166      	cbz	r6, 8009798 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800977e:	460b      	mov	r3, r1
 8009780:	9200      	str	r2, [sp, #0]
 8009782:	4a08      	ldr	r2, [pc, #32]	; (80097a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009784:	4629      	mov	r1, r5
 8009786:	f006 f991 	bl	800faac <snprintf>
 800978a:	4285      	cmp	r5, r0
 800978c:	bfa2      	ittt	ge
 800978e:	88e3      	ldrhge	r3, [r4, #6]
 8009790:	181b      	addge	r3, r3, r0
 8009792:	80e3      	strhge	r3, [r4, #6]
 8009794:	b002      	add	sp, #8
 8009796:	bd70      	pop	{r4, r5, r6, pc}
 8009798:	9200      	str	r2, [sp, #0]
 800979a:	460b      	mov	r3, r1
 800979c:	4a02      	ldr	r2, [pc, #8]	; (80097a8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800979e:	e7f1      	b.n	8009784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 80097a0:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 80097a4:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 80097a8:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

080097ac <DmxParams::DmxParams(DmxParamsStore*)>:
 80097ac:	6001      	str	r1, [r0, #0]
 80097ae:	2100      	movs	r1, #0
 80097b0:	4a03      	ldr	r2, [pc, #12]	; (80097c0 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 80097b2:	e9c0 1201 	strd	r1, r2, [r0, #4]
 80097b6:	f64f 7228 	movw	r2, #65320	; 0xff28
 80097ba:	8182      	strh	r2, [r0, #12]
 80097bc:	4770      	bx	lr
 80097be:	bf00      	nop
 80097c0:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

080097c4 <DmxParams::Load()>:
 80097c4:	b508      	push	{r3, lr}
 80097c6:	2300      	movs	r3, #0
 80097c8:	4601      	mov	r1, r0
 80097ca:	6043      	str	r3, [r0, #4]
 80097cc:	6800      	ldr	r0, [r0, #0]
 80097ce:	b120      	cbz	r0, 80097da <DmxParams::Load()+0x16>
 80097d0:	6803      	ldr	r3, [r0, #0]
 80097d2:	3104      	adds	r1, #4
 80097d4:	68db      	ldr	r3, [r3, #12]
 80097d6:	4798      	blx	r3
 80097d8:	2001      	movs	r0, #1
 80097da:	bd08      	pop	{r3, pc}

080097dc <DmxParams::Load(char const*, unsigned int)>:
 80097dc:	6803      	ldr	r3, [r0, #0]
 80097de:	b1d3      	cbz	r3, 8009816 <DmxParams::Load(char const*, unsigned int)+0x3a>
 80097e0:	2300      	movs	r3, #0
 80097e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80097e4:	460d      	mov	r5, r1
 80097e6:	4616      	mov	r6, r2
 80097e8:	4604      	mov	r4, r0
 80097ea:	6043      	str	r3, [r0, #4]
 80097ec:	4602      	mov	r2, r0
 80097ee:	490a      	ldr	r1, [pc, #40]	; (8009818 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 80097f0:	4668      	mov	r0, sp
 80097f2:	f005 f913 	bl	800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80097f6:	4632      	mov	r2, r6
 80097f8:	4629      	mov	r1, r5
 80097fa:	4668      	mov	r0, sp
 80097fc:	f005 f912 	bl	800ea24 <ReadConfigFile::Read(char const*, unsigned int)>
 8009800:	4621      	mov	r1, r4
 8009802:	f851 0b04 	ldr.w	r0, [r1], #4
 8009806:	6803      	ldr	r3, [r0, #0]
 8009808:	689b      	ldr	r3, [r3, #8]
 800980a:	4798      	blx	r3
 800980c:	4668      	mov	r0, sp
 800980e:	f005 f908 	bl	800ea22 <ReadConfigFile::~ReadConfigFile()>
 8009812:	b002      	add	sp, #8
 8009814:	bd70      	pop	{r4, r5, r6, pc}
 8009816:	4770      	bx	lr
 8009818:	080098e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, fp, ip, pc}

0800981c <DmxParams::callbackFunction(char const*)>:
 800981c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800981e:	460d      	mov	r5, r1
 8009820:	4604      	mov	r4, r0
 8009822:	492d      	ldr	r1, [pc, #180]	; (80098d8 <DmxParams::callbackFunction(char const*)+0xbc>)
 8009824:	4628      	mov	r0, r5
 8009826:	f10d 0206 	add.w	r2, sp, #6
 800982a:	f005 f989 	bl	800eb40 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800982e:	b988      	cbnz	r0, 8009854 <DmxParams::callbackFunction(char const*)+0x38>
 8009830:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009834:	6863      	ldr	r3, [r4, #4]
 8009836:	2a5b      	cmp	r2, #91	; 0x5b
 8009838:	d907      	bls.n	800984a <DmxParams::callbackFunction(char const*)+0x2e>
 800983a:	2ab0      	cmp	r2, #176	; 0xb0
 800983c:	d005      	beq.n	800984a <DmxParams::callbackFunction(char const*)+0x2e>
 800983e:	8122      	strh	r2, [r4, #8]
 8009840:	f043 0301 	orr.w	r3, r3, #1
 8009844:	6063      	str	r3, [r4, #4]
 8009846:	b003      	add	sp, #12
 8009848:	bd30      	pop	{r4, r5, pc}
 800984a:	22b0      	movs	r2, #176	; 0xb0
 800984c:	f023 0301 	bic.w	r3, r3, #1
 8009850:	8122      	strh	r2, [r4, #8]
 8009852:	e7f7      	b.n	8009844 <DmxParams::callbackFunction(char const*)+0x28>
 8009854:	4628      	mov	r0, r5
 8009856:	4921      	ldr	r1, [pc, #132]	; (80098dc <DmxParams::callbackFunction(char const*)+0xc0>)
 8009858:	f10d 0206 	add.w	r2, sp, #6
 800985c:	f005 f970 	bl	800eb40 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009860:	b968      	cbnz	r0, 800987e <DmxParams::callbackFunction(char const*)+0x62>
 8009862:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009866:	6863      	ldr	r3, [r4, #4]
 8009868:	2a0c      	cmp	r2, #12
 800986a:	bf93      	iteet	ls
 800986c:	220c      	movls	r2, #12
 800986e:	8162      	strhhi	r2, [r4, #10]
 8009870:	f043 0302 	orrhi.w	r3, r3, #2
 8009874:	8162      	strhls	r2, [r4, #10]
 8009876:	bf98      	it	ls
 8009878:	f023 0302 	bicls.w	r3, r3, #2
 800987c:	e7e2      	b.n	8009844 <DmxParams::callbackFunction(char const*)+0x28>
 800987e:	4628      	mov	r0, r5
 8009880:	4917      	ldr	r1, [pc, #92]	; (80098e0 <DmxParams::callbackFunction(char const*)+0xc4>)
 8009882:	f10d 0205 	add.w	r2, sp, #5
 8009886:	f005 f979 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800988a:	b950      	cbnz	r0, 80098a2 <DmxParams::callbackFunction(char const*)+0x86>
 800988c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009890:	6863      	ldr	r3, [r4, #4]
 8009892:	2a28      	cmp	r2, #40	; 0x28
 8009894:	7322      	strb	r2, [r4, #12]
 8009896:	bf14      	ite	ne
 8009898:	f043 0304 	orrne.w	r3, r3, #4
 800989c:	f023 0304 	biceq.w	r3, r3, #4
 80098a0:	e7d0      	b.n	8009844 <DmxParams::callbackFunction(char const*)+0x28>
 80098a2:	4628      	mov	r0, r5
 80098a4:	490f      	ldr	r1, [pc, #60]	; (80098e4 <DmxParams::callbackFunction(char const*)+0xc8>)
 80098a6:	f10d 0206 	add.w	r2, sp, #6
 80098aa:	f005 f949 	bl	800eb40 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80098ae:	2800      	cmp	r0, #0
 80098b0:	d1c9      	bne.n	8009846 <DmxParams::callbackFunction(char const*)+0x2a>
 80098b2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80098b6:	6863      	ldr	r3, [r4, #4]
 80098b8:	1e91      	subs	r1, r2, #2
 80098ba:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 80098be:	bf2f      	iteee	cs
 80098c0:	22ff      	movcs	r2, #255	; 0xff
 80098c2:	0852      	lsrcc	r2, r2, #1
 80098c4:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 80098c8:	7362      	strbcc	r2, [r4, #13]
 80098ca:	bf32      	itee	cc
 80098cc:	f043 0308 	orrcc.w	r3, r3, #8
 80098d0:	7362      	strbcs	r2, [r4, #13]
 80098d2:	f023 0308 	biccs.w	r3, r3, #8
 80098d6:	e7b5      	b.n	8009844 <DmxParams::callbackFunction(char const*)+0x28>
 80098d8:	080120e4 	stmdaeq	r1, {r2, r5, r6, r7, sp}
 80098dc:	08012108 	stmdaeq	r1, {r3, r8, sp}
 80098e0:	080120fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sp}
 80098e4:	080120ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sp}

080098e8 <DmxParams::staticCallbackFunction(void*, char const*)>:
 80098e8:	f7ff bf98 	b.w	800981c <DmxParams::callbackFunction(char const*)>

080098ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 80098ec:	b570      	push	{r4, r5, r6, lr}
 80098ee:	4604      	mov	r4, r0
 80098f0:	4615      	mov	r5, r2
 80098f2:	461e      	mov	r6, r3
 80098f4:	b086      	sub	sp, #24
 80098f6:	3004      	adds	r0, #4
 80098f8:	b369      	cbz	r1, 8009956 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 80098fa:	220a      	movs	r2, #10
 80098fc:	f005 fe7d 	bl	800f5fa <memmove>
 8009900:	462a      	mov	r2, r5
 8009902:	4633      	mov	r3, r6
 8009904:	4932      	ldr	r1, [pc, #200]	; (80099d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 8009906:	a803      	add	r0, sp, #12
 8009908:	f004 ffe8 	bl	800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800990c:	6863      	ldr	r3, [r4, #4]
 800990e:	8922      	ldrh	r2, [r4, #8]
 8009910:	4930      	ldr	r1, [pc, #192]	; (80099d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 8009912:	f003 0301 	and.w	r3, r3, #1
 8009916:	a803      	add	r0, sp, #12
 8009918:	f7ff ff20 	bl	800975c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800991c:	6863      	ldr	r3, [r4, #4]
 800991e:	8962      	ldrh	r2, [r4, #10]
 8009920:	492d      	ldr	r1, [pc, #180]	; (80099d8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 8009922:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8009926:	a803      	add	r0, sp, #12
 8009928:	f7ff ff18 	bl	800975c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800992c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009930:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009934:	7b23      	ldrb	r3, [r4, #12]
 8009936:	42aa      	cmp	r2, r5
 8009938:	6861      	ldr	r1, [r4, #4]
 800993a:	d221      	bcs.n	8009980 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800993c:	9803      	ldr	r0, [sp, #12]
 800993e:	0749      	lsls	r1, r1, #29
 8009940:	4410      	add	r0, r2
 8009942:	eba5 0502 	sub.w	r5, r5, r2
 8009946:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800994a:	d40b      	bmi.n	8009964 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800994c:	b95a      	cbnz	r2, 8009966 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800994e:	9300      	str	r3, [sp, #0]
 8009950:	4a22      	ldr	r2, [pc, #136]	; (80099dc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009952:	4b23      	ldr	r3, [pc, #140]	; (80099e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009954:	e00a      	b.n	800996c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 8009956:	6823      	ldr	r3, [r4, #0]
 8009958:	4601      	mov	r1, r0
 800995a:	681a      	ldr	r2, [r3, #0]
 800995c:	4618      	mov	r0, r3
 800995e:	68d2      	ldr	r2, [r2, #12]
 8009960:	4790      	blx	r2
 8009962:	e7cd      	b.n	8009900 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 8009964:	b37a      	cbz	r2, 80099c6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 8009966:	9300      	str	r3, [sp, #0]
 8009968:	4a1e      	ldr	r2, [pc, #120]	; (80099e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800996a:	4b1d      	ldr	r3, [pc, #116]	; (80099e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800996c:	4629      	mov	r1, r5
 800996e:	f006 f89d 	bl	800faac <snprintf>
 8009972:	4285      	cmp	r5, r0
 8009974:	bfa2      	ittt	ge
 8009976:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800997a:	18c0      	addge	r0, r0, r3
 800997c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009980:	7b62      	ldrb	r2, [r4, #13]
 8009982:	6863      	ldr	r3, [r4, #4]
 8009984:	3201      	adds	r2, #1
 8009986:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800998a:	4917      	ldr	r1, [pc, #92]	; (80099e8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800998c:	0052      	lsls	r2, r2, #1
 800998e:	a803      	add	r0, sp, #12
 8009990:	f7ff fee4 	bl	800975c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009994:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009998:	b17b      	cbz	r3, 80099ba <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800999a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800999e:	9b03      	ldr	r3, [sp, #12]
 80099a0:	4413      	add	r3, r2
 80099a2:	227d      	movs	r2, #125	; 0x7d
 80099a4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80099a8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80099ac:	9903      	ldr	r1, [sp, #12]
 80099ae:	54ca      	strb	r2, [r1, r3]
 80099b0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80099b4:	3301      	adds	r3, #1
 80099b6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80099ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80099be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80099c0:	601a      	str	r2, [r3, #0]
 80099c2:	b006      	add	sp, #24
 80099c4:	bd70      	pop	{r4, r5, r6, pc}
 80099c6:	9300      	str	r3, [sp, #0]
 80099c8:	4a08      	ldr	r2, [pc, #32]	; (80099ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 80099ca:	4b05      	ldr	r3, [pc, #20]	; (80099e0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 80099cc:	e7ce      	b.n	800996c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 80099ce:	bf00      	nop
 80099d0:	08012111 	stmdaeq	r1, {r0, r4, r8, sp}
 80099d4:	080120e4 	stmdaeq	r1, {r2, r5, r6, r7, sp}
 80099d8:	08012108 	stmdaeq	r1, {r3, r8, sp}
 80099dc:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 80099e0:	080120fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sp}
 80099e4:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 80099e8:	080120ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sp}
 80099ec:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

080099f0 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 80099f0:	b513      	push	{r0, r1, r4, lr}
 80099f2:	6804      	ldr	r4, [r0, #0]
 80099f4:	b914      	cbnz	r4, 80099fc <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80099f6:	601c      	str	r4, [r3, #0]
 80099f8:	b002      	add	sp, #8
 80099fa:	bd10      	pop	{r4, pc}
 80099fc:	9300      	str	r3, [sp, #0]
 80099fe:	4613      	mov	r3, r2
 8009a00:	460a      	mov	r2, r1
 8009a02:	2100      	movs	r1, #0
 8009a04:	f7ff ff72 	bl	80098ec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 8009a08:	e7f6      	b.n	80099f8 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009a0c <DmxParams::Set(Dmx*)>:
 8009a0c:	b538      	push	{r3, r4, r5, lr}
 8009a0e:	6843      	ldr	r3, [r0, #4]
 8009a10:	4604      	mov	r4, r0
 8009a12:	07d8      	lsls	r0, r3, #31
 8009a14:	460d      	mov	r5, r1
 8009a16:	d503      	bpl.n	8009a20 <DmxParams::Set(Dmx*)+0x14>
 8009a18:	4628      	mov	r0, r5
 8009a1a:	8921      	ldrh	r1, [r4, #8]
 8009a1c:	f000 fc28 	bl	800a270 <Dmx::SetDmxBreakTime(unsigned int)>
 8009a20:	6863      	ldr	r3, [r4, #4]
 8009a22:	0799      	lsls	r1, r3, #30
 8009a24:	d503      	bpl.n	8009a2e <DmxParams::Set(Dmx*)+0x22>
 8009a26:	4628      	mov	r0, r5
 8009a28:	8961      	ldrh	r1, [r4, #10]
 8009a2a:	f000 fc2b 	bl	800a284 <Dmx::SetDmxMabTime(unsigned int)>
 8009a2e:	6863      	ldr	r3, [r4, #4]
 8009a30:	075a      	lsls	r2, r3, #29
 8009a32:	d507      	bpl.n	8009a44 <DmxParams::Set(Dmx*)+0x38>
 8009a34:	7b21      	ldrb	r1, [r4, #12]
 8009a36:	b111      	cbz	r1, 8009a3e <DmxParams::Set(Dmx*)+0x32>
 8009a38:	4b08      	ldr	r3, [pc, #32]	; (8009a5c <DmxParams::Set(Dmx*)+0x50>)
 8009a3a:	fbb3 f1f1 	udiv	r1, r3, r1
 8009a3e:	4628      	mov	r0, r5
 8009a40:	f000 fbe6 	bl	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009a44:	6863      	ldr	r3, [r4, #4]
 8009a46:	071b      	lsls	r3, r3, #28
 8009a48:	d507      	bpl.n	8009a5a <DmxParams::Set(Dmx*)+0x4e>
 8009a4a:	7b61      	ldrb	r1, [r4, #13]
 8009a4c:	4628      	mov	r0, r5
 8009a4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009a52:	3101      	adds	r1, #1
 8009a54:	0049      	lsls	r1, r1, #1
 8009a56:	f000 bc1f 	b.w	800a298 <Dmx::SetDmxSlots(unsigned short)>
 8009a5a:	bd38      	pop	{r3, r4, r5, pc}
 8009a5c:	000f4240 	andeq	r4, pc, r0, asr #4

08009a60 <DmxParams::Dump()>:
 8009a60:	4770      	bx	lr
	...

08009a64 <USART2_IRQHandler>:
 8009a64:	b510      	push	{r4, lr}
 8009a66:	f3bf 8f5f 	dmb	sy
 8009a6a:	2408      	movs	r4, #8
 8009a6c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8009a70:	498c      	ldr	r1, [pc, #560]	; (8009ca4 <USART2_IRQHandler+0x240>)
 8009a72:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8009a76:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8009a7a:	f013 0f02 	tst.w	r3, #2
 8009a7e:	4b8a      	ldr	r3, [pc, #552]	; (8009ca8 <USART2_IRQHandler+0x244>)
 8009a80:	d016      	beq.n	8009ab0 <USART2_IRQHandler+0x4c>
 8009a82:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 8009a86:	f020 0002 	bic.w	r0, r0, #2
 8009a8a:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 8009a8e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009a92:	2200      	movs	r2, #0
 8009a94:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009a98:	2202      	movs	r2, #2
 8009a9a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009a9e:	2310      	movs	r3, #16
 8009aa0:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 8009aa4:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8009aa8:	2320      	movs	r3, #32
 8009aaa:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8009aae:	bd10      	pop	{r4, pc}
 8009ab0:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009ab4:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8009ab8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009abc:	280a      	cmp	r0, #10
 8009abe:	f200 80ec 	bhi.w	8009c9a <USART2_IRQHandler+0x236>
 8009ac2:	e8df f010 	tbh	[pc, r0, lsl #1]
 8009ac6:	00ea000b 	rsceq	r0, sl, fp
 8009aca:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 8009ace:	005c0039 	subseq	r0, ip, r9, lsr r0
 8009ad2:	00870077 	addeq	r0, r7, r7, ror r0
 8009ad6:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 8009ada:	210800ce 	smlabtcs	r8, lr, r0, r0
 8009ade:	701a      	strb	r2, [r3, #0]
 8009ae0:	2201      	movs	r2, #1
 8009ae2:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009ae6:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009aea:	2208      	movs	r2, #8
 8009aec:	4b6d      	ldr	r3, [pc, #436]	; (8009ca4 <USART2_IRQHandler+0x240>)
 8009aee:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009af2:	f3bf 8f5f 	dmb	sy
 8009af6:	e7da      	b.n	8009aae <USART2_IRQHandler+0x4a>
 8009af8:	b11a      	cbz	r2, 8009b02 <USART2_IRQHandler+0x9e>
 8009afa:	2acc      	cmp	r2, #204	; 0xcc
 8009afc:	d016      	beq.n	8009b2c <USART2_IRQHandler+0xc8>
 8009afe:	2200      	movs	r2, #0
 8009b00:	e065      	b.n	8009bce <USART2_IRQHandler+0x16a>
 8009b02:	701a      	strb	r2, [r3, #0]
 8009b04:	2201      	movs	r2, #1
 8009b06:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009b0a:	4a68      	ldr	r2, [pc, #416]	; (8009cac <USART2_IRQHandler+0x248>)
 8009b0c:	6851      	ldr	r1, [r2, #4]
 8009b0e:	3101      	adds	r1, #1
 8009b10:	6051      	str	r1, [r2, #4]
 8009b12:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8009b16:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 8009b1a:	60d1      	str	r1, [r2, #12]
 8009b1c:	2204      	movs	r2, #4
 8009b1e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009b22:	2210      	movs	r2, #16
 8009b24:	4b5f      	ldr	r3, [pc, #380]	; (8009ca4 <USART2_IRQHandler+0x240>)
 8009b26:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8009b2a:	e7de      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009b2c:	701a      	strb	r2, [r3, #0]
 8009b2e:	4a60      	ldr	r2, [pc, #384]	; (8009cb0 <USART2_IRQHandler+0x24c>)
 8009b30:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009b34:	2205      	movs	r2, #5
 8009b36:	e7f2      	b.n	8009b1e <USART2_IRQHandler+0xba>
 8009b38:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8009b3c:	b288      	uxth	r0, r1
 8009b3e:	541a      	strb	r2, [r3, r0]
 8009b40:	1c4a      	adds	r2, r1, #1
 8009b42:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009b46:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009b4a:	d90b      	bls.n	8009b64 <USART2_IRQHandler+0x100>
 8009b4c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009b50:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009b54:	2200      	movs	r2, #0
 8009b56:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009b5a:	2210      	movs	r2, #16
 8009b5c:	4b51      	ldr	r3, [pc, #324]	; (8009ca4 <USART2_IRQHandler+0x240>)
 8009b5e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009b62:	e7c2      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009b64:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009b68:	4850      	ldr	r0, [pc, #320]	; (8009cac <USART2_IRQHandler+0x248>)
 8009b6a:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8009b6e:	68c3      	ldr	r3, [r0, #12]
 8009b70:	60c1      	str	r1, [r0, #12]
 8009b72:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8009b76:	3304      	adds	r3, #4
 8009b78:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8009b7c:	e7b5      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009b7e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009b82:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009b86:	541a      	strb	r2, [r3, r0]
 8009b88:	1c41      	adds	r1, r0, #1
 8009b8a:	3817      	subs	r0, #23
 8009b8c:	b289      	uxth	r1, r1
 8009b8e:	4422      	add	r2, r4
 8009b90:	28e7      	cmp	r0, #231	; 0xe7
 8009b92:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009b96:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009b9a:	d808      	bhi.n	8009bae <USART2_IRQHandler+0x14a>
 8009b9c:	789a      	ldrb	r2, [r3, #2]
 8009b9e:	428a      	cmp	r2, r1
 8009ba0:	d105      	bne.n	8009bae <USART2_IRQHandler+0x14a>
 8009ba2:	2206      	movs	r2, #6
 8009ba4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009ba8:	2220      	movs	r2, #32
 8009baa:	4b3e      	ldr	r3, [pc, #248]	; (8009ca4 <USART2_IRQHandler+0x240>)
 8009bac:	e7bb      	b.n	8009b26 <USART2_IRQHandler+0xc2>
 8009bae:	29ff      	cmp	r1, #255	; 0xff
 8009bb0:	d99b      	bls.n	8009aea <USART2_IRQHandler+0x86>
 8009bb2:	e7a4      	b.n	8009afe <USART2_IRQHandler+0x9a>
 8009bb4:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009bb8:	545a      	strb	r2, [r3, r1]
 8009bba:	3101      	adds	r1, #1
 8009bbc:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009bc0:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8009bc4:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8009bc8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009bcc:	2207      	movs	r2, #7
 8009bce:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009bd2:	e78a      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009bd4:	2020      	movs	r0, #32
 8009bd6:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8009bda:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009bde:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009be2:	541a      	strb	r2, [r3, r0]
 8009be4:	1aa2      	subs	r2, r4, r2
 8009be6:	b292      	uxth	r2, r2
 8009be8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009bec:	b912      	cbnz	r2, 8009bf4 <USART2_IRQHandler+0x190>
 8009bee:	785a      	ldrb	r2, [r3, #1]
 8009bf0:	2a01      	cmp	r2, #1
 8009bf2:	d003      	beq.n	8009bfc <USART2_IRQHandler+0x198>
 8009bf4:	2200      	movs	r2, #0
 8009bf6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009bfa:	e780      	b.n	8009afe <USART2_IRQHandler+0x9a>
 8009bfc:	3001      	adds	r0, #1
 8009bfe:	4a2d      	ldr	r2, [pc, #180]	; (8009cb4 <USART2_IRQHandler+0x250>)
 8009c00:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 8009c04:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 8009c08:	6850      	ldr	r0, [r2, #4]
 8009c0a:	4a2b      	ldr	r2, [pc, #172]	; (8009cb8 <USART2_IRQHandler+0x254>)
 8009c0c:	6010      	str	r0, [r2, #0]
 8009c0e:	2210      	movs	r2, #16
 8009c10:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 8009c14:	e773      	b.n	8009afe <USART2_IRQHandler+0x9a>
 8009c16:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009c1a:	2aaa      	cmp	r2, #170	; 0xaa
 8009c1c:	545a      	strb	r2, [r3, r1]
 8009c1e:	f101 0101 	add.w	r1, r1, #1
 8009c22:	b289      	uxth	r1, r1
 8009c24:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009c28:	d002      	beq.n	8009c30 <USART2_IRQHandler+0x1cc>
 8009c2a:	2909      	cmp	r1, #9
 8009c2c:	f47f af5d 	bne.w	8009aea <USART2_IRQHandler+0x86>
 8009c30:	2200      	movs	r2, #0
 8009c32:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009c36:	2209      	movs	r2, #9
 8009c38:	e7c9      	b.n	8009bce <USART2_IRQHandler+0x16a>
 8009c3a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009c3e:	545a      	strb	r2, [r3, r1]
 8009c40:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8009c44:	3101      	adds	r1, #1
 8009c46:	3201      	adds	r2, #1
 8009c48:	b292      	uxth	r2, r2
 8009c4a:	2a0c      	cmp	r2, #12
 8009c4c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009c50:	d002      	beq.n	8009c58 <USART2_IRQHandler+0x1f4>
 8009c52:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009c56:	e748      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009c58:	2200      	movs	r2, #0
 8009c5a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009c5e:	220a      	movs	r2, #10
 8009c60:	e7b5      	b.n	8009bce <USART2_IRQHandler+0x16a>
 8009c62:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009c66:	545a      	strb	r2, [r3, r1]
 8009c68:	1c4a      	adds	r2, r1, #1
 8009c6a:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8009c6e:	b292      	uxth	r2, r2
 8009c70:	3101      	adds	r1, #1
 8009c72:	b289      	uxth	r1, r1
 8009c74:	2904      	cmp	r1, #4
 8009c76:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009c7a:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8009c7e:	f47f af34 	bne.w	8009aea <USART2_IRQHandler+0x86>
 8009c82:	2100      	movs	r1, #0
 8009c84:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009c88:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009c8c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009c90:	4b08      	ldr	r3, [pc, #32]	; (8009cb4 <USART2_IRQHandler+0x250>)
 8009c92:	685a      	ldr	r2, [r3, #4]
 8009c94:	4b08      	ldr	r3, [pc, #32]	; (8009cb8 <USART2_IRQHandler+0x254>)
 8009c96:	601a      	str	r2, [r3, #0]
 8009c98:	e727      	b.n	8009aea <USART2_IRQHandler+0x86>
 8009c9a:	2200      	movs	r2, #0
 8009c9c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009ca0:	e795      	b.n	8009bce <USART2_IRQHandler+0x16a>
 8009ca2:	bf00      	nop
 8009ca4:	40010000 	andmi	r0, r1, r0
 8009ca8:	20000720 	andcs	r0, r0, r0, lsr #14
 8009cac:	20000b3c 	andcs	r0, r0, ip, lsr fp
 8009cb0:	00cc0001 	sbceq	r0, ip, r1
 8009cb4:	e0001000 	and	r1, r0, r0
 8009cb8:	20000b50 	andcs	r0, r0, r0, asr fp

08009cbc <TIMER1_IRQHandler>:
 8009cbc:	b538      	push	{r3, r4, r5, lr}
 8009cbe:	f3bf 8f5f 	dmb	sy
 8009cc2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009cc6:	2008      	movs	r0, #8
 8009cc8:	691c      	ldr	r4, [r3, #16]
 8009cca:	4923      	ldr	r1, [pc, #140]	; (8009d58 <TIMER1_IRQHandler+0x9c>)
 8009ccc:	4a23      	ldr	r2, [pc, #140]	; (8009d5c <TIMER1_IRQHandler+0xa0>)
 8009cce:	8813      	ldrh	r3, [r2, #0]
 8009cd0:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8009cd4:	07a1      	lsls	r1, r4, #30
 8009cd6:	d51b      	bpl.n	8009d10 <TIMER1_IRQHandler+0x54>
 8009cd8:	07dd      	lsls	r5, r3, #31
 8009cda:	d50d      	bpl.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009cdc:	4d20      	ldr	r5, [pc, #128]	; (8009d60 <TIMER1_IRQHandler+0xa4>)
 8009cde:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009ce2:	8013      	strh	r3, [r2, #0]
 8009ce4:	2110      	movs	r1, #16
 8009ce6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009cea:	2203      	movs	r2, #3
 8009cec:	4628      	mov	r0, r5
 8009cee:	f006 fa0b 	bl	8010108 <gpio_init>
 8009cf2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009cf6:	616b      	str	r3, [r5, #20]
 8009cf8:	4621      	mov	r1, r4
 8009cfa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009cfe:	f006 fcf0 	bl	80106e2 <timer_interrupt_flag_clear>
 8009d02:	2208      	movs	r2, #8
 8009d04:	4b14      	ldr	r3, [pc, #80]	; (8009d58 <TIMER1_IRQHandler+0x9c>)
 8009d06:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009d0a:	f3bf 8f5f 	dmb	sy
 8009d0e:	bd38      	pop	{r3, r4, r5, pc}
 8009d10:	0760      	lsls	r0, r4, #29
 8009d12:	d509      	bpl.n	8009d28 <TIMER1_IRQHandler+0x6c>
 8009d14:	05d9      	lsls	r1, r3, #23
 8009d16:	d5ef      	bpl.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009d18:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009d1c:	2203      	movs	r2, #3
 8009d1e:	2118      	movs	r1, #24
 8009d20:	480f      	ldr	r0, [pc, #60]	; (8009d60 <TIMER1_IRQHandler+0xa4>)
 8009d22:	f006 f9f1 	bl	8010108 <gpio_init>
 8009d26:	e7e7      	b.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009d28:	0722      	lsls	r2, r4, #28
 8009d2a:	d5e5      	bpl.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009d2c:	05db      	lsls	r3, r3, #23
 8009d2e:	d5e3      	bpl.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009d30:	4b0c      	ldr	r3, [pc, #48]	; (8009d64 <TIMER1_IRQHandler+0xa8>)
 8009d32:	2180      	movs	r1, #128	; 0x80
 8009d34:	69da      	ldr	r2, [r3, #28]
 8009d36:	480c      	ldr	r0, [pc, #48]	; (8009d68 <TIMER1_IRQHandler+0xac>)
 8009d38:	f022 0201 	bic.w	r2, r2, #1
 8009d3c:	61da      	str	r2, [r3, #28]
 8009d3e:	4a0b      	ldr	r2, [pc, #44]	; (8009d6c <TIMER1_IRQHandler+0xb0>)
 8009d40:	629a      	str	r2, [r3, #40]	; 0x28
 8009d42:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8009d46:	621a      	str	r2, [r3, #32]
 8009d48:	69da      	ldr	r2, [r3, #28]
 8009d4a:	f042 0201 	orr.w	r2, r2, #1
 8009d4e:	61da      	str	r2, [r3, #28]
 8009d50:	f006 fd66 	bl	8010820 <usart_dma_transmit_config>
 8009d54:	e7d0      	b.n	8009cf8 <TIMER1_IRQHandler+0x3c>
 8009d56:	bf00      	nop
 8009d58:	40010000 	andmi	r0, r1, r0
 8009d5c:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009d60:	40011000 	andmi	r1, r1, r0
 8009d64:	40020000 	andmi	r0, r2, r0
 8009d68:	40004800 	andmi	r4, r0, r0, lsl #16
 8009d6c:	20000930 	andcs	r0, r0, r0, lsr r9

08009d70 <TIMER2_IRQHandler>:
 8009d70:	b508      	push	{r3, lr}
 8009d72:	f3bf 8f5f 	dmb	sy
 8009d76:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009d7a:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8009d7e:	078b      	lsls	r3, r1, #30
 8009d80:	d511      	bpl.n	8009da6 <TIMER2_IRQHandler+0x36>
 8009d82:	4b0c      	ldr	r3, [pc, #48]	; (8009db4 <TIMER2_IRQHandler+0x44>)
 8009d84:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009d88:	2a04      	cmp	r2, #4
 8009d8a:	d10c      	bne.n	8009da6 <TIMER2_IRQHandler+0x36>
 8009d8c:	2200      	movs	r2, #0
 8009d8e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009d92:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009d96:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009d9a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d9e:	2210      	movs	r2, #16
 8009da0:	4b05      	ldr	r3, [pc, #20]	; (8009db8 <TIMER2_IRQHandler+0x48>)
 8009da2:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009da6:	4805      	ldr	r0, [pc, #20]	; (8009dbc <TIMER2_IRQHandler+0x4c>)
 8009da8:	f006 fc9b 	bl	80106e2 <timer_interrupt_flag_clear>
 8009dac:	f3bf 8f5f 	dmb	sy
 8009db0:	bd08      	pop	{r3, pc}
 8009db2:	bf00      	nop
 8009db4:	20000720 	andcs	r0, r0, r0, lsr #14
 8009db8:	40010000 	andmi	r0, r1, r0
 8009dbc:	40000400 	andmi	r0, r0, r0, lsl #8

08009dc0 <TIMER3_IRQHandler>:
 8009dc0:	b508      	push	{r3, lr}
 8009dc2:	f3bf 8f5f 	dmb	sy
 8009dc6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009dca:	4804      	ldr	r0, [pc, #16]	; (8009ddc <TIMER3_IRQHandler+0x1c>)
 8009dcc:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8009dd0:	f006 fc87 	bl	80106e2 <timer_interrupt_flag_clear>
 8009dd4:	f3bf 8f5f 	dmb	sy
 8009dd8:	bd08      	pop	{r3, pc}
 8009dda:	bf00      	nop
 8009ddc:	40000800 	andmi	r0, r0, r0, lsl #16

08009de0 <TIMER6_IRQHandler>:
 8009de0:	b508      	push	{r3, lr}
 8009de2:	f3bf 8f5f 	dmb	sy
 8009de6:	4b07      	ldr	r3, [pc, #28]	; (8009e04 <TIMER6_IRQHandler+0x24>)
 8009de8:	4807      	ldr	r0, [pc, #28]	; (8009e08 <TIMER6_IRQHandler+0x28>)
 8009dea:	685a      	ldr	r2, [r3, #4]
 8009dec:	6899      	ldr	r1, [r3, #8]
 8009dee:	1a52      	subs	r2, r2, r1
 8009df0:	601a      	str	r2, [r3, #0]
 8009df2:	685a      	ldr	r2, [r3, #4]
 8009df4:	2101      	movs	r1, #1
 8009df6:	609a      	str	r2, [r3, #8]
 8009df8:	f006 fc73 	bl	80106e2 <timer_interrupt_flag_clear>
 8009dfc:	f3bf 8f5f 	dmb	sy
 8009e00:	bd08      	pop	{r3, pc}
 8009e02:	bf00      	nop
 8009e04:	20000b3c 	andcs	r0, r0, ip, lsr fp
 8009e08:	40001400 	andmi	r1, r0, r0, lsl #8

08009e0c <Dmx::ClearData(unsigned int)>:
 8009e0c:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009e10:	b510      	push	{r4, lr}
 8009e12:	2400      	movs	r4, #0
 8009e14:	4a08      	ldr	r2, [pc, #32]	; (8009e38 <Dmx::ClearData(unsigned int)+0x2c>)
 8009e16:	fb03 2301 	mla	r3, r3, r1, r2
 8009e1a:	f203 2002 	addw	r0, r3, #514	; 0x202
 8009e1e:	f823 4b02 	strh.w	r4, [r3], #2
 8009e22:	4283      	cmp	r3, r0
 8009e24:	d1fb      	bne.n	8009e1e <Dmx::ClearData(unsigned int)+0x12>
 8009e26:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009e2a:	fb03 2201 	mla	r2, r3, r1, r2
 8009e2e:	f240 2301 	movw	r3, #513	; 0x201
 8009e32:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8009e36:	bd10      	pop	{r4, pc}
 8009e38:	20000930 	andcs	r0, r0, r0, lsr r9

08009e3c <Dmx::StartData(unsigned int, unsigned int)>:
 8009e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e3e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8009e42:	6943      	ldr	r3, [r0, #20]
 8009e44:	460c      	mov	r4, r1
 8009e46:	4615      	mov	r5, r2
 8009e48:	b085      	sub	sp, #20
 8009e4a:	2b00      	cmp	r3, #0
 8009e4c:	d16a      	bne.n	8009f24 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 8009e4e:	4e47      	ldr	r6, [pc, #284]	; (8009f6c <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 8009e50:	8834      	ldrh	r4, [r6, #0]
 8009e52:	2c00      	cmp	r4, #0
 8009e54:	d15b      	bne.n	8009f0e <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 8009e56:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8009e5a:	f006 f9ed 	bl	8010238 <rcu_periph_clock_enable>
 8009e5e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009e62:	f006 fb47 	bl	80104f4 <timer_deinit>
 8009e66:	236b      	movs	r3, #107	; 0x6b
 8009e68:	9300      	str	r3, [sp, #0]
 8009e6a:	4b41      	ldr	r3, [pc, #260]	; (8009f70 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 8009e6c:	4669      	mov	r1, sp
 8009e6e:	681b      	ldr	r3, [r3, #0]
 8009e70:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009e74:	9302      	str	r3, [sp, #8]
 8009e76:	f8ad 4004 	strh.w	r4, [sp, #4]
 8009e7a:	f8ad 400c 	strh.w	r4, [sp, #12]
 8009e7e:	f88d 400e 	strb.w	r4, [sp, #14]
 8009e82:	f006 fb99 	bl	80105b8 <timer_init>
 8009e86:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009e8a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009e8e:	f006 fc2b 	bl	80106e8 <timer_flag_clear>
 8009e92:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009e96:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009e9a:	f006 fc22 	bl	80106e2 <timer_interrupt_flag_clear>
 8009e9e:	2210      	movs	r2, #16
 8009ea0:	4621      	mov	r1, r4
 8009ea2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009ea6:	f006 fbe4 	bl	8010672 <timer_channel_output_mode_config>
 8009eaa:	2210      	movs	r2, #16
 8009eac:	2101      	movs	r1, #1
 8009eae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009eb2:	f006 fbde 	bl	8010672 <timer_channel_output_mode_config>
 8009eb6:	4f2f      	ldr	r7, [pc, #188]	; (8009f74 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8009eb8:	2210      	movs	r2, #16
 8009eba:	2102      	movs	r1, #2
 8009ebc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009ec0:	f006 fbd7 	bl	8010672 <timer_channel_output_mode_config>
 8009ec4:	4622      	mov	r2, r4
 8009ec6:	4621      	mov	r1, r4
 8009ec8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009ecc:	f006 fbf7 	bl	80106be <timer_channel_output_pulse_value_config>
 8009ed0:	2101      	movs	r1, #1
 8009ed2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009ed6:	883a      	ldrh	r2, [r7, #0]
 8009ed8:	f006 fbf1 	bl	80106be <timer_channel_output_pulse_value_config>
 8009edc:	4b26      	ldr	r3, [pc, #152]	; (8009f78 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 8009ede:	683a      	ldr	r2, [r7, #0]
 8009ee0:	681b      	ldr	r3, [r3, #0]
 8009ee2:	2102      	movs	r1, #2
 8009ee4:	441a      	add	r2, r3
 8009ee6:	b292      	uxth	r2, r2
 8009ee8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009eec:	f006 fbe7 	bl	80106be <timer_channel_output_pulse_value_config>
 8009ef0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009ef4:	210e      	movs	r1, #14
 8009ef6:	f006 fbf0 	bl	80106da <timer_interrupt_enable>
 8009efa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009efe:	4b1f      	ldr	r3, [pc, #124]	; (8009f7c <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8009f00:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009f04:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8009f08:	601a      	str	r2, [r3, #0]
 8009f0a:	f006 fbad 	bl	8010668 <timer_enable>
 8009f0e:	2201      	movs	r2, #1
 8009f10:	8831      	ldrh	r1, [r6, #0]
 8009f12:	fa02 f305 	lsl.w	r3, r2, r5
 8009f16:	430b      	orrs	r3, r1
 8009f18:	8033      	strh	r3, [r6, #0]
 8009f1a:	4b19      	ldr	r3, [pc, #100]	; (8009f80 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8009f1c:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009f20:	b005      	add	sp, #20
 8009f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f24:	f44f 7204 	mov.w	r2, #528	; 0x210
 8009f28:	4b16      	ldr	r3, [pc, #88]	; (8009f84 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8009f2a:	fb02 3305 	mla	r3, r2, r5, r3
 8009f2e:	2200      	movs	r2, #0
 8009f30:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009f34:	2107      	movs	r1, #7
 8009f36:	4620      	mov	r0, r4
 8009f38:	f006 fc78 	bl	801082c <usart_flag_get>
 8009f3c:	2800      	cmp	r0, #0
 8009f3e:	d0f9      	beq.n	8009f34 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 8009f40:	4620      	mov	r0, r4
 8009f42:	4911      	ldr	r1, [pc, #68]	; (8009f88 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8009f44:	f006 fc94 	bl	8010870 <usart_interrupt_flag_clear>
 8009f48:	f240 3105 	movw	r1, #773	; 0x305
 8009f4c:	4620      	mov	r0, r4
 8009f4e:	f006 fc78 	bl	8010842 <usart_interrupt_enable>
 8009f52:	2202      	movs	r2, #2
 8009f54:	4b0a      	ldr	r3, [pc, #40]	; (8009f80 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8009f56:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009f5a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009f5e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8009f62:	f043 0302 	orr.w	r3, r3, #2
 8009f66:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8009f6a:	e7d9      	b.n	8009f20 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 8009f6c:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009f70:	20000008 	andcs	r0, r0, r8
 8009f74:	20000010 	andcs	r0, r0, r0, lsl r0
 8009f78:	2000000c 	andcs	r0, r0, ip
 8009f7c:	e000e100 	and	lr, r0, r0, lsl #2
 8009f80:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009f84:	20000720 	andcs	r0, r0, r0, lsr #14
 8009f88:	00050305 	andeq	r0, r5, r5, lsl #6

08009f8c <Dmx::StopData(unsigned int, unsigned int)>:
 8009f8c:	b538      	push	{r3, r4, r5, lr}
 8009f8e:	4d17      	ldr	r5, [pc, #92]	; (8009fec <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 8009f90:	4614      	mov	r4, r2
 8009f92:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8009f96:	4603      	mov	r3, r0
 8009f98:	4608      	mov	r0, r1
 8009f9a:	b182      	cbz	r2, 8009fbe <Dmx::StopData(unsigned int, unsigned int)+0x32>
 8009f9c:	695b      	ldr	r3, [r3, #20]
 8009f9e:	b97b      	cbnz	r3, 8009fc0 <Dmx::StopData(unsigned int, unsigned int)+0x34>
 8009fa0:	2201      	movs	r2, #1
 8009fa2:	4913      	ldr	r1, [pc, #76]	; (8009ff0 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 8009fa4:	f104 0308 	add.w	r3, r4, #8
 8009fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8009fac:	40a2      	lsls	r2, r4
 8009fae:	4313      	orrs	r3, r2
 8009fb0:	880a      	ldrh	r2, [r1, #0]
 8009fb2:	ea22 0303 	bic.w	r3, r2, r3
 8009fb6:	800b      	strh	r3, [r1, #0]
 8009fb8:	2300      	movs	r3, #0
 8009fba:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8009fbe:	bd38      	pop	{r3, r4, r5, pc}
 8009fc0:	f240 3105 	movw	r1, #773	; 0x305
 8009fc4:	f006 fc48 	bl	8010858 <usart_interrupt_disable>
 8009fc8:	f44f 7204 	mov.w	r2, #528	; 0x210
 8009fcc:	4b09      	ldr	r3, [pc, #36]	; (8009ff4 <Dmx::StopData(unsigned int, unsigned int)+0x68>)
 8009fce:	fb02 3304 	mla	r3, r2, r4, r3
 8009fd2:	2200      	movs	r2, #0
 8009fd4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009fd8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009fdc:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8009fe0:	f023 0302 	bic.w	r3, r3, #2
 8009fe4:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8009fe8:	e7e6      	b.n	8009fb8 <Dmx::StopData(unsigned int, unsigned int)+0x2c>
 8009fea:	bf00      	nop
 8009fec:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009ff0:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009ff4:	20000720 	andcs	r0, r0, r0, lsr #14

08009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8009ff8:	b570      	push	{r4, r5, r6, lr}
 8009ffa:	461d      	mov	r5, r3
 8009ffc:	6943      	ldr	r3, [r0, #20]
 8009ffe:	4606      	mov	r6, r0
 800a000:	4293      	cmp	r3, r2
 800a002:	4614      	mov	r4, r2
 800a004:	d014      	beq.n	800a030 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800a006:	6142      	str	r2, [r0, #20]
 800a008:	4910      	ldr	r1, [pc, #64]	; (800a04c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a00a:	2200      	movs	r2, #0
 800a00c:	f7ff ffbe 	bl	8009f8c <Dmx::StopData(unsigned int, unsigned int)>
 800a010:	b934      	cbnz	r4, 800a020 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800a012:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a016:	4b0e      	ldr	r3, [pc, #56]	; (800a050 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a018:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800a01c:	b94d      	cbnz	r5, 800a032 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800a01e:	bd70      	pop	{r4, r5, r6, pc}
 800a020:	2c01      	cmp	r4, #1
 800a022:	d1fb      	bne.n	800a01c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a024:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a028:	4b09      	ldr	r3, [pc, #36]	; (800a050 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a02a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800a02e:	e7f5      	b.n	800a01c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a030:	b135      	cbz	r5, 800a040 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800a032:	4630      	mov	r0, r6
 800a034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a038:	2200      	movs	r2, #0
 800a03a:	4904      	ldr	r1, [pc, #16]	; (800a04c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a03c:	f7ff befe 	b.w	8009e3c <Dmx::StartData(unsigned int, unsigned int)>
 800a040:	462a      	mov	r2, r5
 800a042:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a046:	4901      	ldr	r1, [pc, #4]	; (800a04c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a048:	f7ff bfa0 	b.w	8009f8c <Dmx::StopData(unsigned int, unsigned int)>
 800a04c:	40004800 	andmi	r4, r0, r0, lsl #16
 800a050:	40010000 	andmi	r0, r1, r0

0800a054 <Dmx::Dmx()>:
 800a054:	225c      	movs	r2, #92	; 0x5c
 800a056:	230c      	movs	r3, #12
 800a058:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a05c:	e9c0 2300 	strd	r2, r3, [r0]
 800a060:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800a064:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800a068:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a06c:	2400      	movs	r4, #0
 800a06e:	4605      	mov	r5, r0
 800a070:	8203      	strh	r3, [r0, #16]
 800a072:	4b5d      	ldr	r3, [pc, #372]	; (800a1e8 <Dmx::Dmx()+0x194>)
 800a074:	b08b      	sub	sp, #44	; 0x2c
 800a076:	6018      	str	r0, [r3, #0]
 800a078:	4b5c      	ldr	r3, [pc, #368]	; (800a1ec <Dmx::Dmx()+0x198>)
 800a07a:	2203      	movs	r2, #3
 800a07c:	801c      	strh	r4, [r3, #0]
 800a07e:	2110      	movs	r1, #16
 800a080:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a084:	485a      	ldr	r0, [pc, #360]	; (800a1f0 <Dmx::Dmx()+0x19c>)
 800a086:	f006 f83f 	bl	8010108 <gpio_init>
 800a08a:	4621      	mov	r1, r4
 800a08c:	4628      	mov	r0, r5
 800a08e:	f7ff febd 	bl	8009e0c <Dmx::ClearData(unsigned int)>
 800a092:	4b58      	ldr	r3, [pc, #352]	; (800a1f4 <Dmx::Dmx()+0x1a0>)
 800a094:	2201      	movs	r2, #1
 800a096:	4628      	mov	r0, r5
 800a098:	601c      	str	r4, [r3, #0]
 800a09a:	4623      	mov	r3, r4
 800a09c:	f7ff ffac 	bl	8009ff8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800a0a0:	4b55      	ldr	r3, [pc, #340]	; (800a1f8 <Dmx::Dmx()+0x1a4>)
 800a0a2:	4e56      	ldr	r6, [pc, #344]	; (800a1fc <Dmx::Dmx()+0x1a8>)
 800a0a4:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800a0a8:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800a0ac:	f006 f8c4 	bl	8010238 <rcu_periph_clock_enable>
 800a0b0:	f240 5001 	movw	r0, #1281	; 0x501
 800a0b4:	f006 f8c0 	bl	8010238 <rcu_periph_clock_enable>
 800a0b8:	4630      	mov	r0, r6
 800a0ba:	2101      	movs	r1, #1
 800a0bc:	f005 ff24 	bl	800ff08 <dma_deinit>
 800a0c0:	4b4f      	ldr	r3, [pc, #316]	; (800a200 <Dmx::Dmx()+0x1ac>)
 800a0c2:	2701      	movs	r7, #1
 800a0c4:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800a0c8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800a0cc:	9308      	str	r3, [sp, #32]
 800a0ce:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a0d2:	aa03      	add	r2, sp, #12
 800a0d4:	4639      	mov	r1, r7
 800a0d6:	4630      	mov	r0, r6
 800a0d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a0dc:	9406      	str	r4, [sp, #24]
 800a0de:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a0e2:	f005 ff2d 	bl	800ff40 <dma_init>
 800a0e6:	4639      	mov	r1, r7
 800a0e8:	4630      	mov	r0, r6
 800a0ea:	f005 ff63 	bl	800ffb4 <dma_circulation_disable>
 800a0ee:	4639      	mov	r1, r7
 800a0f0:	4630      	mov	r0, r6
 800a0f2:	f005 ff6f 	bl	800ffd4 <dma_memory_to_memory_disable>
 800a0f6:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800a0fa:	f240 7001 	movw	r0, #1793	; 0x701
 800a0fe:	f006 f89b 	bl	8010238 <rcu_periph_clock_enable>
 800a102:	4630      	mov	r0, r6
 800a104:	f006 f9f6 	bl	80104f4 <timer_deinit>
 800a108:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800a10c:	236b      	movs	r3, #107	; 0x6b
 800a10e:	4630      	mov	r0, r6
 800a110:	a903      	add	r1, sp, #12
 800a112:	9303      	str	r3, [sp, #12]
 800a114:	f8ad 4010 	strh.w	r4, [sp, #16]
 800a118:	f8cd 9014 	str.w	r9, [sp, #20]
 800a11c:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a120:	f88d 401a 	strb.w	r4, [sp, #26]
 800a124:	f006 fa48 	bl	80105b8 <timer_init>
 800a128:	4649      	mov	r1, r9
 800a12a:	4630      	mov	r0, r6
 800a12c:	f006 fadc 	bl	80106e8 <timer_flag_clear>
 800a130:	4649      	mov	r1, r9
 800a132:	4630      	mov	r0, r6
 800a134:	f006 fad5 	bl	80106e2 <timer_interrupt_flag_clear>
 800a138:	4621      	mov	r1, r4
 800a13a:	4630      	mov	r0, r6
 800a13c:	2210      	movs	r2, #16
 800a13e:	f006 fa98 	bl	8010672 <timer_channel_output_mode_config>
 800a142:	4639      	mov	r1, r7
 800a144:	4630      	mov	r0, r6
 800a146:	2210      	movs	r2, #16
 800a148:	f006 fa93 	bl	8010672 <timer_channel_output_mode_config>
 800a14c:	4630      	mov	r0, r6
 800a14e:	2210      	movs	r2, #16
 800a150:	2102      	movs	r1, #2
 800a152:	f006 fa8e 	bl	8010672 <timer_channel_output_mode_config>
 800a156:	2210      	movs	r2, #16
 800a158:	2103      	movs	r1, #3
 800a15a:	4630      	mov	r0, r6
 800a15c:	f006 fa89 	bl	8010672 <timer_channel_output_mode_config>
 800a160:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800a164:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800a204 <Dmx::Dmx()+0x1b0>
 800a168:	4630      	mov	r0, r6
 800a16a:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800a16e:	f8c8 3000 	str.w	r3, [r8]
 800a172:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800a176:	f006 fa77 	bl	8010668 <timer_enable>
 800a17a:	f240 7005 	movw	r0, #1797	; 0x705
 800a17e:	f006 f85b 	bl	8010238 <rcu_periph_clock_enable>
 800a182:	4630      	mov	r0, r6
 800a184:	f006 f9b6 	bl	80104f4 <timer_deinit>
 800a188:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800a18c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a190:	f242 7310 	movw	r3, #10000	; 0x2710
 800a194:	4630      	mov	r0, r6
 800a196:	a903      	add	r1, sp, #12
 800a198:	9305      	str	r3, [sp, #20]
 800a19a:	f006 fa0d 	bl	80105b8 <timer_init>
 800a19e:	4649      	mov	r1, r9
 800a1a0:	4630      	mov	r0, r6
 800a1a2:	f006 faa1 	bl	80106e8 <timer_flag_clear>
 800a1a6:	4649      	mov	r1, r9
 800a1a8:	4630      	mov	r0, r6
 800a1aa:	f006 fa9a 	bl	80106e2 <timer_interrupt_flag_clear>
 800a1ae:	4639      	mov	r1, r7
 800a1b0:	4630      	mov	r0, r6
 800a1b2:	f006 fa92 	bl	80106da <timer_interrupt_enable>
 800a1b6:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800a1ba:	4630      	mov	r0, r6
 800a1bc:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800a1c0:	f8c8 3004 	str.w	r3, [r8, #4]
 800a1c4:	f006 fa50 	bl	8010668 <timer_enable>
 800a1c8:	2302      	movs	r3, #2
 800a1ca:	2208      	movs	r2, #8
 800a1cc:	9300      	str	r3, [sp, #0]
 800a1ce:	490e      	ldr	r1, [pc, #56]	; (800a208 <Dmx::Dmx()+0x1b4>)
 800a1d0:	4623      	mov	r3, r4
 800a1d2:	480e      	ldr	r0, [pc, #56]	; (800a20c <Dmx::Dmx()+0x1b8>)
 800a1d4:	f006 fdc4 	bl	8010d60 <gd32_uart_begin>
 800a1d8:	2380      	movs	r3, #128	; 0x80
 800a1da:	4628      	mov	r0, r5
 800a1dc:	f8c8 3004 	str.w	r3, [r8, #4]
 800a1e0:	b00b      	add	sp, #44	; 0x2c
 800a1e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1e6:	bf00      	nop
 800a1e8:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a1ec:	20000b38 	andcs	r0, r0, r8, lsr fp
 800a1f0:	40010c00 	andmi	r0, r1, r0, lsl #24
 800a1f4:	20000b34 	andcs	r0, r0, r4, lsr fp
 800a1f8:	20000720 	andcs	r0, r0, r0, lsr #14
 800a1fc:	40020000 	andmi	r0, r2, r0
 800a200:	40004804 	andmi	r4, r0, r4, lsl #16
 800a204:	e000e100 	and	lr, r0, r0, lsl #2
 800a208:	0003d090 	muleq	r3, r0, r0
 800a20c:	40004800 	andmi	r4, r0, r0, lsl #16

0800a210 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800a210:	4b13      	ldr	r3, [pc, #76]	; (800a260 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800a212:	b570      	push	{r4, r5, r6, lr}
 800a214:	60c1      	str	r1, [r0, #12]
 800a216:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800a21a:	232c      	movs	r3, #44	; 0x2c
 800a21c:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800a220:	4d10      	ldr	r5, [pc, #64]	; (800a264 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800a222:	4c11      	ldr	r4, [pc, #68]	; (800a268 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800a224:	4358      	muls	r0, r3
 800a226:	682a      	ldr	r2, [r5, #0]
 800a228:	6823      	ldr	r3, [r4, #0]
 800a22a:	4413      	add	r3, r2
 800a22c:	4403      	add	r3, r0
 800a22e:	42b3      	cmp	r3, r6
 800a230:	d908      	bls.n	800a244 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800a232:	2ab0      	cmp	r2, #176	; 0xb0
 800a234:	4613      	mov	r3, r2
 800a236:	bf28      	it	cs
 800a238:	23b0      	movcs	r3, #176	; 0xb0
 800a23a:	220c      	movs	r2, #12
 800a23c:	602b      	str	r3, [r5, #0]
 800a23e:	4413      	add	r3, r2
 800a240:	6022      	str	r2, [r4, #0]
 800a242:	4403      	add	r3, r0
 800a244:	b109      	cbz	r1, 800a24a <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800a246:	428b      	cmp	r3, r1
 800a248:	d906      	bls.n	800a258 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800a24a:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800a24e:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800a252:	4299      	cmp	r1, r3
 800a254:	bf38      	it	cc
 800a256:	4619      	movcc	r1, r3
 800a258:	4b04      	ldr	r3, [pc, #16]	; (800a26c <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800a25a:	6019      	str	r1, [r3, #0]
 800a25c:	bd70      	pop	{r4, r5, r6, pc}
 800a25e:	bf00      	nop
 800a260:	20000930 	andcs	r0, r0, r0, lsr r9
 800a264:	20000010 	andcs	r0, r0, r0, lsl r0
 800a268:	2000000c 	andcs	r0, r0, ip
 800a26c:	20000008 	andcs	r0, r0, r8

0800a270 <Dmx::SetDmxBreakTime(unsigned int)>:
 800a270:	295c      	cmp	r1, #92	; 0x5c
 800a272:	bf38      	it	cc
 800a274:	215c      	movcc	r1, #92	; 0x5c
 800a276:	4b02      	ldr	r3, [pc, #8]	; (800a280 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800a278:	6019      	str	r1, [r3, #0]
 800a27a:	68c1      	ldr	r1, [r0, #12]
 800a27c:	f7ff bfc8 	b.w	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a280:	20000010 	andcs	r0, r0, r0, lsl r0

0800a284 <Dmx::SetDmxMabTime(unsigned int)>:
 800a284:	290c      	cmp	r1, #12
 800a286:	bf38      	it	cc
 800a288:	210c      	movcc	r1, #12
 800a28a:	4b02      	ldr	r3, [pc, #8]	; (800a294 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800a28c:	6019      	str	r1, [r3, #0]
 800a28e:	68c1      	ldr	r1, [r0, #12]
 800a290:	f7ff bfbe 	b.w	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a294:	2000000c 	andcs	r0, r0, ip

0800a298 <Dmx::SetDmxSlots(unsigned short)>:
 800a298:	1e8b      	subs	r3, r1, #2
 800a29a:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800a29e:	d809      	bhi.n	800a2b4 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800a2a0:	6983      	ldr	r3, [r0, #24]
 800a2a2:	8201      	strh	r1, [r0, #16]
 800a2a4:	b11b      	cbz	r3, 800a2ae <Dmx::SetDmxSlots(unsigned short)+0x16>
 800a2a6:	4299      	cmp	r1, r3
 800a2a8:	bf94      	ite	ls
 800a2aa:	6181      	strls	r1, [r0, #24]
 800a2ac:	6183      	strhi	r3, [r0, #24]
 800a2ae:	68c1      	ldr	r1, [r0, #12]
 800a2b0:	f7ff bfae 	b.w	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a2b4:	4770      	bx	lr
	...

0800a2b8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800a2b8:	b4f0      	push	{r4, r5, r6, r7}
 800a2ba:	8a04      	ldrh	r4, [r0, #16]
 800a2bc:	4d11      	ldr	r5, [pc, #68]	; (800a304 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800a2be:	42a3      	cmp	r3, r4
 800a2c0:	bf28      	it	cs
 800a2c2:	4623      	movcs	r3, r4
 800a2c4:	f44f 7401 	mov.w	r4, #516	; 0x204
 800a2c8:	434c      	muls	r4, r1
 800a2ca:	1c5f      	adds	r7, r3, #1
 800a2cc:	192e      	adds	r6, r5, r4
 800a2ce:	f892 f000 	pld	[r2]
 800a2d2:	3401      	adds	r4, #1
 800a2d4:	442c      	add	r4, r5
 800a2d6:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800a2da:	18d5      	adds	r5, r2, r3
 800a2dc:	4295      	cmp	r5, r2
 800a2de:	d109      	bne.n	800a2f4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x3c>
 800a2e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a2e4:	698a      	ldr	r2, [r1, #24]
 800a2e6:	429a      	cmp	r2, r3
 800a2e8:	d009      	beq.n	800a2fe <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800a2ea:	bcf0      	pop	{r4, r5, r6, r7}
 800a2ec:	618b      	str	r3, [r1, #24]
 800a2ee:	68c1      	ldr	r1, [r0, #12]
 800a2f0:	f7ff bf8e 	b.w	800a210 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a2f4:	f812 6b01 	ldrb.w	r6, [r2], #1
 800a2f8:	f804 6b01 	strb.w	r6, [r4], #1
 800a2fc:	e7ee      	b.n	800a2dc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800a2fe:	bcf0      	pop	{r4, r5, r6, r7}
 800a300:	4770      	bx	lr
 800a302:	bf00      	nop
 800a304:	20000930 	andcs	r0, r0, r0, lsr r9

0800a308 <Dmx::GetDmxAvailable(unsigned int)>:
 800a308:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a30c:	4b07      	ldr	r3, [pc, #28]	; (800a32c <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800a30e:	fb02 3101 	mla	r1, r2, r1, r3
 800a312:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800a316:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800a31a:	bf1f      	itttt	ne
 800a31c:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800a320:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800a324:	4608      	movne	r0, r1
 800a326:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800a32a:	4770      	bx	lr
 800a32c:	20000720 	andcs	r0, r0, r0, lsr #14

0800a330 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800a330:	f3bf 8f5f 	dmb	sy
 800a334:	4b01      	ldr	r3, [pc, #4]	; (800a33c <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800a336:	0109      	lsls	r1, r1, #4
 800a338:	5858      	ldr	r0, [r3, r1]
 800a33a:	4770      	bx	lr
 800a33c:	20000b3c 	andcs	r0, r0, ip, lsr fp

0800a340 <RemoteConfig::HandleList()>:
 800a340:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a344:	6801      	ldr	r1, [r0, #0]
 800a346:	4604      	mov	r4, r0
 800a348:	2012      	movs	r0, #18
 800a34a:	f04f 080c 	mov.w	r8, #12
 800a34e:	4a2b      	ldr	r2, [pc, #172]	; (800a3fc <RemoteConfig::HandleList()+0xbc>)
 800a350:	4b2b      	ldr	r3, [pc, #172]	; (800a400 <RemoteConfig::HandleList()+0xc0>)
 800a352:	fb00 2201 	mla	r2, r0, r1, r2
 800a356:	6860      	ldr	r0, [r4, #4]
 800a358:	492a      	ldr	r1, [pc, #168]	; (800a404 <RemoteConfig::HandleList()+0xc4>)
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	fb08 1100 	mla	r1, r8, r0, r1
 800a360:	4e29      	ldr	r6, [pc, #164]	; (800a408 <RemoteConfig::HandleList()+0xc8>)
 800a362:	482a      	ldr	r0, [pc, #168]	; (800a40c <RemoteConfig::HandleList()+0xcc>)
 800a364:	691f      	ldr	r7, [r3, #16]
 800a366:	6835      	ldr	r5, [r6, #0]
 800a368:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a36c:	b2fb      	uxtb	r3, r7
 800a36e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a372:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a376:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a37a:	b089      	sub	sp, #36	; 0x24
 800a37c:	3507      	adds	r5, #7
 800a37e:	0e3f      	lsrs	r7, r7, #24
 800a380:	f1b9 0f00 	cmp.w	r9, #0
 800a384:	d020      	beq.n	800a3c8 <RemoteConfig::HandleList()+0x88>
 800a386:	3009      	adds	r0, #9
 800a388:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a38c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a390:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a394:	4628      	mov	r0, r5
 800a396:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a39a:	4a1d      	ldr	r2, [pc, #116]	; (800a410 <RemoteConfig::HandleList()+0xd0>)
 800a39c:	f8cd c000 	str.w	ip, [sp]
 800a3a0:	f005 fb84 	bl	800faac <snprintf>
 800a3a4:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a3a8:	2b05      	cmp	r3, #5
 800a3aa:	d11a      	bne.n	800a3e2 <RemoteConfig::HandleList()+0xa2>
 800a3ac:	f642 1305 	movw	r3, #10501	; 0x2905
 800a3b0:	9300      	str	r3, [sp, #0]
 800a3b2:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a3b6:	b282      	uxth	r2, r0
 800a3b8:	4629      	mov	r1, r5
 800a3ba:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a3be:	f002 f97d 	bl	800c6bc <udp_send>
 800a3c2:	b009      	add	sp, #36	; 0x24
 800a3c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3c8:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a3cc:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a3d0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a3d4:	4628      	mov	r0, r5
 800a3d6:	e9cd ce00 	strd	ip, lr, [sp]
 800a3da:	4a0e      	ldr	r2, [pc, #56]	; (800a414 <RemoteConfig::HandleList()+0xd4>)
 800a3dc:	f005 fb66 	bl	800faac <snprintf>
 800a3e0:	e7e0      	b.n	800a3a4 <RemoteConfig::HandleList()+0x64>
 800a3e2:	2b06      	cmp	r3, #6
 800a3e4:	d1ed      	bne.n	800a3c2 <RemoteConfig::HandleList()+0x82>
 800a3e6:	6833      	ldr	r3, [r6, #0]
 800a3e8:	799b      	ldrb	r3, [r3, #6]
 800a3ea:	2b2a      	cmp	r3, #42	; 0x2a
 800a3ec:	d1e9      	bne.n	800a3c2 <RemoteConfig::HandleList()+0x82>
 800a3ee:	f642 1305 	movw	r3, #10501	; 0x2905
 800a3f2:	9300      	str	r3, [sp, #0]
 800a3f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a3f8:	e7dd      	b.n	800a3b6 <RemoteConfig::HandleList()+0x76>
 800a3fa:	bf00      	nop
 800a3fc:	080121e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sp}
 800a400:	20009498 	mulcs	r0, r8, r4
 800a404:	08012284 	stmdaeq	r1, {r2, r7, r9, sp}
 800a408:	20000b54 	andcs	r0, r0, r4, asr fp
 800a40c:	20000b58 	andcs	r0, r0, r8, asr fp
 800a410:	0801211c 	stmdaeq	r1, {r2, r3, r4, r8, sp}
 800a414:	08012135 	stmdaeq	r1, {r0, r2, r4, r5, r8, sp}

0800a418 <RemoteConfig::HandleDisplayGet()>:
 800a418:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a41c:	2b08      	cmp	r3, #8
 800a41e:	d11d      	bne.n	800a45c <RemoteConfig::HandleDisplayGet()+0x44>
 800a420:	4b0f      	ldr	r3, [pc, #60]	; (800a460 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a422:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a424:	681b      	ldr	r3, [r3, #0]
 800a426:	4d0f      	ldr	r5, [pc, #60]	; (800a464 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a428:	7c19      	ldrb	r1, [r3, #16]
 800a42a:	4a0f      	ldr	r2, [pc, #60]	; (800a468 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a42c:	4b0f      	ldr	r3, [pc, #60]	; (800a46c <RemoteConfig::HandleDisplayGet()+0x54>)
 800a42e:	4604      	mov	r4, r0
 800a430:	2900      	cmp	r1, #0
 800a432:	bf18      	it	ne
 800a434:	4613      	movne	r3, r2
 800a436:	6828      	ldr	r0, [r5, #0]
 800a438:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a43c:	4a0c      	ldr	r2, [pc, #48]	; (800a470 <RemoteConfig::HandleDisplayGet()+0x58>)
 800a43e:	f005 fb35 	bl	800faac <snprintf>
 800a442:	f642 1305 	movw	r3, #10501	; 0x2905
 800a446:	9300      	str	r3, [sp, #0]
 800a448:	b282      	uxth	r2, r0
 800a44a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a44e:	6829      	ldr	r1, [r5, #0]
 800a450:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a454:	f002 f932 	bl	800c6bc <udp_send>
 800a458:	b003      	add	sp, #12
 800a45a:	bd30      	pop	{r4, r5, pc}
 800a45c:	4770      	bx	lr
 800a45e:	bf00      	nop
 800a460:	20009ad0 	ldrdcs	r9, [r0], -r0
 800a464:	20000b54 	andcs	r0, r0, r4, asr fp
 800a468:	0801214e 	stmdaeq	r1, {r1, r2, r3, r6, r8, sp}
 800a46c:	0801214b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sp}
 800a470:	08012152 	stmdaeq	r1, {r1, r4, r6, r8, sp}

0800a474 <RemoteConfig::HandleTftpSet()>:
 800a474:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800a478:	2a06      	cmp	r2, #6
 800a47a:	d109      	bne.n	800a490 <RemoteConfig::HandleTftpSet()+0x1c>
 800a47c:	4a05      	ldr	r2, [pc, #20]	; (800a494 <RemoteConfig::HandleTftpSet()+0x20>)
 800a47e:	6812      	ldr	r2, [r2, #0]
 800a480:	7992      	ldrb	r2, [r2, #6]
 800a482:	3a30      	subs	r2, #48	; 0x30
 800a484:	bf18      	it	ne
 800a486:	2201      	movne	r2, #1
 800a488:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800a48c:	f000 bd6e 	b.w	800af6c <RemoteConfig::PlatformHandleTftpSet()>
 800a490:	4770      	bx	lr
 800a492:	bf00      	nop
 800a494:	20000b54 	andcs	r0, r0, r4, asr fp

0800a498 <RemoteConfig::HandleTftpGet()>:
 800a498:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a49a:	4604      	mov	r4, r0
 800a49c:	f000 fd6e 	bl	800af7c <RemoteConfig::PlatformHandleTftpGet()>
 800a4a0:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a4a4:	2b05      	cmp	r3, #5
 800a4a6:	d118      	bne.n	800a4da <RemoteConfig::HandleTftpGet()+0x42>
 800a4a8:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800a4ac:	4d0c      	ldr	r5, [pc, #48]	; (800a4e0 <RemoteConfig::HandleTftpGet()+0x48>)
 800a4ae:	4a0d      	ldr	r2, [pc, #52]	; (800a4e4 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a4b0:	4b0d      	ldr	r3, [pc, #52]	; (800a4e8 <RemoteConfig::HandleTftpGet()+0x50>)
 800a4b2:	6828      	ldr	r0, [r5, #0]
 800a4b4:	2900      	cmp	r1, #0
 800a4b6:	bf08      	it	eq
 800a4b8:	4613      	moveq	r3, r2
 800a4ba:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a4be:	4a0b      	ldr	r2, [pc, #44]	; (800a4ec <RemoteConfig::HandleTftpGet()+0x54>)
 800a4c0:	f005 faf4 	bl	800faac <snprintf>
 800a4c4:	f642 1305 	movw	r3, #10501	; 0x2905
 800a4c8:	b282      	uxth	r2, r0
 800a4ca:	9300      	str	r3, [sp, #0]
 800a4cc:	6829      	ldr	r1, [r5, #0]
 800a4ce:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a4d2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a4d6:	f002 f8f1 	bl	800c6bc <udp_send>
 800a4da:	b003      	add	sp, #12
 800a4dc:	bd30      	pop	{r4, r5, pc}
 800a4de:	bf00      	nop
 800a4e0:	20000b54 	andcs	r0, r0, r4, asr fp
 800a4e4:	0801214e 	stmdaeq	r1, {r1, r2, r3, r6, r8, sp}
 800a4e8:	0801214b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sp}
 800a4ec:	0801215e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sp}

0800a4f0 <RemoteConfig::HandleVersion()>:
 800a4f0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a4f4:	2b08      	cmp	r3, #8
 800a4f6:	d116      	bne.n	800a526 <RemoteConfig::HandleVersion()+0x36>
 800a4f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a4fa:	4d0b      	ldr	r5, [pc, #44]	; (800a528 <RemoteConfig::HandleVersion()+0x38>)
 800a4fc:	4604      	mov	r4, r0
 800a4fe:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a502:	4b0a      	ldr	r3, [pc, #40]	; (800a52c <RemoteConfig::HandleVersion()+0x3c>)
 800a504:	4a0a      	ldr	r2, [pc, #40]	; (800a530 <RemoteConfig::HandleVersion()+0x40>)
 800a506:	6828      	ldr	r0, [r5, #0]
 800a508:	f005 fad0 	bl	800faac <snprintf>
 800a50c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a510:	9300      	str	r3, [sp, #0]
 800a512:	b282      	uxth	r2, r0
 800a514:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a518:	6829      	ldr	r1, [r5, #0]
 800a51a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a51e:	f002 f8cd 	bl	800c6bc <udp_send>
 800a522:	b003      	add	sp, #12
 800a524:	bd30      	pop	{r4, r5, pc}
 800a526:	4770      	bx	lr
 800a528:	20000b54 	andcs	r0, r0, r4, asr fp
 800a52c:	20009b76 	andcs	r9, r0, r6, ror fp
 800a530:	08012167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sp}

0800a534 <RemoteConfig::HandleUptime()>:
 800a534:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800a538:	b1fb      	cbz	r3, 800a57a <RemoteConfig::HandleUptime()+0x46>
 800a53a:	4b10      	ldr	r3, [pc, #64]	; (800a57c <RemoteConfig::HandleUptime()+0x48>)
 800a53c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a53e:	681a      	ldr	r2, [r3, #0]
 800a540:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a544:	4604      	mov	r4, r0
 800a546:	2b07      	cmp	r3, #7
 800a548:	d115      	bne.n	800a576 <RemoteConfig::HandleUptime()+0x42>
 800a54a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a54e:	4d0c      	ldr	r5, [pc, #48]	; (800a580 <RemoteConfig::HandleUptime()+0x4c>)
 800a550:	fbb2 f3f3 	udiv	r3, r2, r3
 800a554:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a558:	4a0a      	ldr	r2, [pc, #40]	; (800a584 <RemoteConfig::HandleUptime()+0x50>)
 800a55a:	6828      	ldr	r0, [r5, #0]
 800a55c:	f005 faa6 	bl	800faac <snprintf>
 800a560:	f642 1305 	movw	r3, #10501	; 0x2905
 800a564:	9300      	str	r3, [sp, #0]
 800a566:	b282      	uxth	r2, r0
 800a568:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a56c:	6829      	ldr	r1, [r5, #0]
 800a56e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a572:	f002 f8a3 	bl	800c6bc <udp_send>
 800a576:	b003      	add	sp, #12
 800a578:	bd30      	pop	{r4, r5, pc}
 800a57a:	4770      	bx	lr
 800a57c:	20009bdc 	ldrdcs	r9, [r0], -ip
 800a580:	20000b54 	andcs	r0, r0, r4, asr fp
 800a584:	08012172 	stmdaeq	r1, {r1, r4, r5, r6, r8, sp}

0800a588 <RemoteConfig::HandleDisplaySet()>:
 800a588:	b538      	push	{r3, r4, r5, lr}
 800a58a:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a58e:	2b09      	cmp	r3, #9
 800a590:	d113      	bne.n	800a5ba <RemoteConfig::HandleDisplaySet()+0x32>
 800a592:	4b0a      	ldr	r3, [pc, #40]	; (800a5bc <RemoteConfig::HandleDisplaySet()+0x34>)
 800a594:	681c      	ldr	r4, [r3, #0]
 800a596:	4b0a      	ldr	r3, [pc, #40]	; (800a5c0 <RemoteConfig::HandleDisplaySet()+0x38>)
 800a598:	69a0      	ldr	r0, [r4, #24]
 800a59a:	681b      	ldr	r3, [r3, #0]
 800a59c:	7a5d      	ldrb	r5, [r3, #9]
 800a59e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800a5a2:	4259      	negs	r1, r3
 800a5a4:	4159      	adcs	r1, r3
 800a5a6:	b140      	cbz	r0, 800a5ba <RemoteConfig::HandleDisplaySet()+0x32>
 800a5a8:	6803      	ldr	r3, [r0, #0]
 800a5aa:	7421      	strb	r1, [r4, #16]
 800a5ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5ae:	4798      	blx	r3
 800a5b0:	2d30      	cmp	r5, #48	; 0x30
 800a5b2:	bf1e      	ittt	ne
 800a5b4:	4b03      	ldrne	r3, [pc, #12]	; (800a5c4 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800a5b6:	681b      	ldrne	r3, [r3, #0]
 800a5b8:	6063      	strne	r3, [r4, #4]
 800a5ba:	bd38      	pop	{r3, r4, r5, pc}
 800a5bc:	20009ad0 	ldrdcs	r9, [r0], -r0
 800a5c0:	20000b54 	andcs	r0, r0, r4, asr fp
 800a5c4:	20009bdc 	ldrdcs	r9, [r0], -ip

0800a5c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a5c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5cc:	f100 0a0c 	add.w	sl, r0, #12
 800a5d0:	4604      	mov	r4, r0
 800a5d2:	e9c0 1200 	strd	r1, r2, [r0]
 800a5d6:	6083      	str	r3, [r0, #8]
 800a5d8:	4650      	mov	r0, sl
 800a5da:	4690      	mov	r8, r2
 800a5dc:	4689      	mov	r9, r1
 800a5de:	461f      	mov	r7, r3
 800a5e0:	f000 fd0c 	bl	800affc <HttpDaemon::HttpDaemon()>
 800a5e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a5e8:	2500      	movs	r5, #0
 800a5ea:	4e16      	ldr	r6, [pc, #88]	; (800a644 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800a5ec:	f8df b058 	ldr.w	fp, [pc, #88]	; 800a648 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800a5f0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a5f4:	4b15      	ldr	r3, [pc, #84]	; (800a64c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800a5f6:	4631      	mov	r1, r6
 800a5f8:	f8db 0000 	ldr.w	r0, [fp]
 800a5fc:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800a600:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800a604:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800a608:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800a60c:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800a610:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800a614:	601c      	str	r4, [r3, #0]
 800a616:	f002 fd1d 	bl	800d054 <Network::MacAddressCopyTo(unsigned char*)>
 800a61a:	f642 1105 	movw	r1, #10501	; 0x2905
 800a61e:	f8db 0000 	ldr.w	r0, [fp]
 800a622:	f886 9006 	strb.w	r9, [r6, #6]
 800a626:	f886 8007 	strb.w	r8, [r6, #7]
 800a62a:	7237      	strb	r7, [r6, #8]
 800a62c:	7275      	strb	r5, [r6, #9]
 800a62e:	f002 fd0b 	bl	800d048 <Network::Begin(unsigned short)>
 800a632:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a636:	4650      	mov	r0, sl
 800a638:	f000 fcf8 	bl	800b02c <HttpDaemon::Start()>
 800a63c:	4620      	mov	r0, r4
 800a63e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a642:	bf00      	nop
 800a644:	20000b58 	andcs	r0, r0, r8, asr fp
 800a648:	20009498 	mulcs	r0, r8, r4
 800a64c:	20000b7c 	andcs	r0, r0, ip, ror fp

0800a650 <RemoteConfig::GetStringNode() const>:
 800a650:	2012      	movs	r0, #18
 800a652:	4b03      	ldr	r3, [pc, #12]	; (800a660 <RemoteConfig::GetStringNode() const+0x10>)
 800a654:	799a      	ldrb	r2, [r3, #6]
 800a656:	4b03      	ldr	r3, [pc, #12]	; (800a664 <RemoteConfig::GetStringNode() const+0x14>)
 800a658:	fb00 3002 	mla	r0, r0, r2, r3
 800a65c:	4770      	bx	lr
 800a65e:	bf00      	nop
 800a660:	20000b58 	andcs	r0, r0, r8, asr fp
 800a664:	080121e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sp}

0800a668 <RemoteConfig::GetStringOutput() const>:
 800a668:	200c      	movs	r0, #12
 800a66a:	4b03      	ldr	r3, [pc, #12]	; (800a678 <RemoteConfig::GetStringOutput() const+0x10>)
 800a66c:	79da      	ldrb	r2, [r3, #7]
 800a66e:	4b03      	ldr	r3, [pc, #12]	; (800a67c <RemoteConfig::GetStringOutput() const+0x14>)
 800a670:	fb00 3002 	mla	r0, r0, r2, r3
 800a674:	4770      	bx	lr
 800a676:	bf00      	nop
 800a678:	20000b58 	andcs	r0, r0, r8, asr fp
 800a67c:	08012284 	stmdaeq	r1, {r2, r7, r9, sp}

0800a680 <RemoteConfig::SetDisable(bool)>:
 800a680:	b538      	push	{r3, r4, r5, lr}
 800a682:	4604      	mov	r4, r0
 800a684:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800a688:	b171      	cbz	r1, 800a6a8 <RemoteConfig::SetDisable(bool)+0x28>
 800a68a:	b963      	cbnz	r3, 800a6a6 <RemoteConfig::SetDisable(bool)+0x26>
 800a68c:	4b0d      	ldr	r3, [pc, #52]	; (800a6c4 <RemoteConfig::SetDisable(bool)+0x44>)
 800a68e:	f642 1105 	movw	r1, #10501	; 0x2905
 800a692:	6818      	ldr	r0, [r3, #0]
 800a694:	f002 fcdb 	bl	800d04e <Network::End(unsigned short)>
 800a698:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a69c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a6a0:	2301      	movs	r3, #1
 800a6a2:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800a6a6:	bd38      	pop	{r3, r4, r5, pc}
 800a6a8:	2b00      	cmp	r3, #0
 800a6aa:	d0fc      	beq.n	800a6a6 <RemoteConfig::SetDisable(bool)+0x26>
 800a6ac:	4b05      	ldr	r3, [pc, #20]	; (800a6c4 <RemoteConfig::SetDisable(bool)+0x44>)
 800a6ae:	460d      	mov	r5, r1
 800a6b0:	6818      	ldr	r0, [r3, #0]
 800a6b2:	f642 1105 	movw	r1, #10501	; 0x2905
 800a6b6:	f002 fcc7 	bl	800d048 <Network::Begin(unsigned short)>
 800a6ba:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800a6be:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a6c2:	e7f0      	b.n	800a6a6 <RemoteConfig::SetDisable(bool)+0x26>
 800a6c4:	20009498 	mulcs	r0, r8, r4

0800a6c8 <RemoteConfig::SetDisplayName(char const*)>:
 800a6c8:	2217      	movs	r2, #23
 800a6ca:	4809      	ldr	r0, [pc, #36]	; (800a6f0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a6cc:	b508      	push	{r3, lr}
 800a6ce:	1e4b      	subs	r3, r1, #1
 800a6d0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a6d4:	b911      	cbnz	r1, 800a6dc <RemoteConfig::SetDisplayName(char const*)+0x14>
 800a6d6:	f004 ffa7 	bl	800f628 <memset>
 800a6da:	e003      	b.n	800a6e4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a6dc:	3a01      	subs	r2, #1
 800a6de:	f800 1b01 	strb.w	r1, [r0], #1
 800a6e2:	d1f5      	bne.n	800a6d0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a6e4:	2200      	movs	r2, #0
 800a6e6:	4b03      	ldr	r3, [pc, #12]	; (800a6f4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a6e8:	f883 2020 	strb.w	r2, [r3, #32]
 800a6ec:	bd08      	pop	{r3, pc}
 800a6ee:	bf00      	nop
 800a6f0:	20000b61 	andcs	r0, r0, r1, ror #22
 800a6f4:	20000b58 	andcs	r0, r0, r8, asr fp

0800a6f8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800a6f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	4616      	mov	r6, r2
 800a6fe:	460d      	mov	r5, r1
 800a700:	4f2a      	ldr	r7, [pc, #168]	; (800a7ac <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a702:	b085      	sub	sp, #20
 800a704:	b9b9      	cbnz	r1, 800a736 <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800a706:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800a70a:	6839      	ldr	r1, [r7, #0]
 800a70c:	aa03      	add	r2, sp, #12
 800a70e:	3105      	adds	r1, #5
 800a710:	9303      	str	r3, [sp, #12]
 800a712:	f000 fc01 	bl	800af18 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a716:	1e03      	subs	r3, r0, #0
 800a718:	da1d      	bge.n	800a756 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a71a:	f642 1305 	movw	r3, #10501	; 0x2905
 800a71e:	220b      	movs	r2, #11
 800a720:	9300      	str	r3, [sp, #0]
 800a722:	4923      	ldr	r1, [pc, #140]	; (800a7b0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a724:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a728:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a72c:	f001 ffc6 	bl	800c6bc <udp_send>
 800a730:	200c      	movs	r0, #12
 800a732:	b005      	add	sp, #20
 800a734:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a736:	9203      	str	r2, [sp, #12]
 800a738:	aa03      	add	r2, sp, #12
 800a73a:	6039      	str	r1, [r7, #0]
 800a73c:	f000 fbec 	bl	800af18 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a740:	1e03      	subs	r3, r0, #0
 800a742:	da08      	bge.n	800a756 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a744:	2e0b      	cmp	r6, #11
 800a746:	4632      	mov	r2, r6
 800a748:	4628      	mov	r0, r5
 800a74a:	bf28      	it	cs
 800a74c:	220b      	movcs	r2, #11
 800a74e:	4918      	ldr	r1, [pc, #96]	; (800a7b0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a750:	f004 ff48 	bl	800f5e4 <memcpy>
 800a754:	e7ec      	b.n	800a730 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800a756:	221c      	movs	r2, #28
 800a758:	4353      	muls	r3, r2
 800a75a:	4916      	ldr	r1, [pc, #88]	; (800a7b4 <RemoteConfig::HandleGet(void*, unsigned int)+0xbc>)
 800a75c:	18ca      	adds	r2, r1, r3
 800a75e:	6852      	ldr	r2, [r2, #4]
 800a760:	58cb      	ldr	r3, [r1, r3]
 800a762:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a766:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a76a:	07d2      	lsls	r2, r2, #31
 800a76c:	bf48      	it	mi
 800a76e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a772:	a903      	add	r1, sp, #12
 800a774:	bf48      	it	mi
 800a776:	58d3      	ldrmi	r3, [r2, r3]
 800a778:	4798      	blx	r3
 800a77a:	b96d      	cbnz	r5, 800a798 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800a77c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a780:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a784:	9300      	str	r3, [sp, #0]
 800a786:	6839      	ldr	r1, [r7, #0]
 800a788:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a78c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a790:	f001 ff94 	bl	800c6bc <udp_send>
 800a794:	9803      	ldr	r0, [sp, #12]
 800a796:	e7cc      	b.n	800a732 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800a798:	9a03      	ldr	r2, [sp, #12]
 800a79a:	4628      	mov	r0, r5
 800a79c:	42b2      	cmp	r2, r6
 800a79e:	bf28      	it	cs
 800a7a0:	4632      	movcs	r2, r6
 800a7a2:	6839      	ldr	r1, [r7, #0]
 800a7a4:	f004 ff29 	bl	800f5fa <memmove>
 800a7a8:	e7f4      	b.n	800a794 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800a7aa:	bf00      	nop
 800a7ac:	20000b54 	andcs	r0, r0, r4, asr fp
 800a7b0:	0801217f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sp}
 800a7b4:	0801241c 	stmdaeq	r1, {r2, r3, r4, sl, sp}

0800a7b8 <RemoteConfig::HandleGetNoParams()>:
 800a7b8:	2200      	movs	r2, #0
 800a7ba:	4611      	mov	r1, r2
 800a7bc:	f7ff bf9c 	b.w	800a6f8 <RemoteConfig::HandleGet(void*, unsigned int)>

0800a7c0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800a7c0:	b510      	push	{r4, lr}
 800a7c2:	460c      	mov	r4, r1
 800a7c4:	4b07      	ldr	r3, [pc, #28]	; (800a7e4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800a7c6:	b08a      	sub	sp, #40	; 0x28
 800a7c8:	6819      	ldr	r1, [r3, #0]
 800a7ca:	a801      	add	r0, sp, #4
 800a7cc:	f000 f9fa 	bl	800abc4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a7d0:	4905      	ldr	r1, [pc, #20]	; (800a7e8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800a7d2:	4623      	mov	r3, r4
 800a7d4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a7d8:	6809      	ldr	r1, [r1, #0]
 800a7da:	a801      	add	r0, sp, #4
 800a7dc:	f000 fb16 	bl	800ae0c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800a7e0:	b00a      	add	sp, #40	; 0x28
 800a7e2:	bd10      	pop	{r4, pc}
 800a7e4:	20001bac 	andcs	r1, r0, ip, lsr #23
 800a7e8:	20000b54 	andcs	r0, r0, r4, asr fp

0800a7ec <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800a7ec:	b513      	push	{r0, r1, r4, lr}
 800a7ee:	460c      	mov	r4, r1
 800a7f0:	4b07      	ldr	r3, [pc, #28]	; (800a810 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800a7f2:	a801      	add	r0, sp, #4
 800a7f4:	6819      	ldr	r1, [r3, #0]
 800a7f6:	f002 fe0b 	bl	800d410 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a7fa:	4906      	ldr	r1, [pc, #24]	; (800a814 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800a7fc:	4623      	mov	r3, r4
 800a7fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a802:	6809      	ldr	r1, [r1, #0]
 800a804:	a801      	add	r0, sp, #4
 800a806:	f002 fff1 	bl	800d7ec <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800a80a:	b002      	add	sp, #8
 800a80c:	bd10      	pop	{r4, pc}
 800a80e:	bf00      	nop
 800a810:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800a814:	20000b54 	andcs	r0, r0, r4, asr fp

0800a818 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800a818:	b510      	push	{r4, lr}
 800a81a:	460c      	mov	r4, r1
 800a81c:	4b07      	ldr	r3, [pc, #28]	; (800a83c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800a81e:	b08a      	sub	sp, #40	; 0x28
 800a820:	6819      	ldr	r1, [r3, #0]
 800a822:	a801      	add	r0, sp, #4
 800a824:	f7fe fcd2 	bl	80091cc <E131Params::E131Params(E131ParamsStore*)>
 800a828:	4905      	ldr	r1, [pc, #20]	; (800a840 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800a82a:	4623      	mov	r3, r4
 800a82c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a830:	6809      	ldr	r1, [r1, #0]
 800a832:	a801      	add	r0, sp, #4
 800a834:	f7fe feb0 	bl	8009598 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800a838:	b00a      	add	sp, #40	; 0x28
 800a83a:	bd10      	pop	{r4, pc}
 800a83c:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800a840:	20000b54 	andcs	r0, r0, r4, asr fp

0800a844 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800a844:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a846:	460c      	mov	r4, r1
 800a848:	4b07      	ldr	r3, [pc, #28]	; (800a868 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800a84a:	4668      	mov	r0, sp
 800a84c:	6819      	ldr	r1, [r3, #0]
 800a84e:	f7fe ffad 	bl	80097ac <DmxParams::DmxParams(DmxParamsStore*)>
 800a852:	4906      	ldr	r1, [pc, #24]	; (800a86c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800a854:	4623      	mov	r3, r4
 800a856:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a85a:	4668      	mov	r0, sp
 800a85c:	6809      	ldr	r1, [r1, #0]
 800a85e:	f7ff f8c7 	bl	80099f0 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800a862:	b004      	add	sp, #16
 800a864:	bd10      	pop	{r4, pc}
 800a866:	bf00      	nop
 800a868:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a86c:	20000b54 	andcs	r0, r0, r4, asr fp

0800a870 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800a870:	b510      	push	{r4, lr}
 800a872:	460c      	mov	r4, r1
 800a874:	4b07      	ldr	r3, [pc, #28]	; (800a894 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800a876:	b08a      	sub	sp, #40	; 0x28
 800a878:	6819      	ldr	r1, [r3, #0]
 800a87a:	4668      	mov	r0, sp
 800a87c:	f003 fd88 	bl	800e390 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a880:	4905      	ldr	r1, [pc, #20]	; (800a898 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800a882:	4623      	mov	r3, r4
 800a884:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a888:	4668      	mov	r0, sp
 800a88a:	6809      	ldr	r1, [r1, #0]
 800a88c:	f003 feb8 	bl	800e600 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800a890:	b00a      	add	sp, #40	; 0x28
 800a892:	bd10      	pop	{r4, pc}
 800a894:	20001b9c 	mulcs	r0, ip, fp
 800a898:	20000b54 	andcs	r0, r0, r4, asr fp

0800a89c <RemoteConfig::HandleSet(void*, unsigned int)>:
 800a89c:	b530      	push	{r4, r5, lr}
 800a89e:	b085      	sub	sp, #20
 800a8a0:	4604      	mov	r4, r0
 800a8a2:	9201      	str	r2, [sp, #4]
 800a8a4:	b9d1      	cbnz	r1, 800a8dc <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800a8a6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800a8aa:	9303      	str	r3, [sp, #12]
 800a8ac:	4b1b      	ldr	r3, [pc, #108]	; (800a91c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800a8ae:	aa03      	add	r2, sp, #12
 800a8b0:	6819      	ldr	r1, [r3, #0]
 800a8b2:	3101      	adds	r1, #1
 800a8b4:	f000 fb30 	bl	800af18 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a8b8:	2800      	cmp	r0, #0
 800a8ba:	db0d      	blt.n	800a8d8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800a8bc:	221c      	movs	r2, #28
 800a8be:	4b18      	ldr	r3, [pc, #96]	; (800a920 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800a8c0:	fb02 3300 	mla	r3, r2, r0, r3
 800a8c4:	68da      	ldr	r2, [r3, #12]
 800a8c6:	689b      	ldr	r3, [r3, #8]
 800a8c8:	1051      	asrs	r1, r2, #1
 800a8ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a8ce:	07d2      	lsls	r2, r2, #31
 800a8d0:	bf44      	itt	mi
 800a8d2:	5862      	ldrmi	r2, [r4, r1]
 800a8d4:	58d3      	ldrmi	r3, [r2, r3]
 800a8d6:	4798      	blx	r3
 800a8d8:	b005      	add	sp, #20
 800a8da:	bd30      	pop	{r4, r5, pc}
 800a8dc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a8e0:	4613      	mov	r3, r2
 800a8e2:	d8f9      	bhi.n	800a8d8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800a8e4:	2200      	movs	r2, #0
 800a8e6:	460d      	mov	r5, r1
 800a8e8:	490e      	ldr	r1, [pc, #56]	; (800a924 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800a8ea:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800a8ee:	7809      	ldrb	r1, [r1, #0]
 800a8f0:	07c9      	lsls	r1, r1, #31
 800a8f2:	d50a      	bpl.n	800a90a <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800a8f4:	7829      	ldrb	r1, [r5, #0]
 800a8f6:	297b      	cmp	r1, #123	; 0x7b
 800a8f8:	d107      	bne.n	800a90a <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800a8fa:	3b01      	subs	r3, #1
 800a8fc:	b299      	uxth	r1, r3
 800a8fe:	4628      	mov	r0, r5
 800a900:	f003 ff3a 	bl	800e778 <properties::convert_json_file(char*, unsigned short, bool)>
 800a904:	1e03      	subs	r3, r0, #0
 800a906:	dde7      	ble.n	800a8d8 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800a908:	b29b      	uxth	r3, r3
 800a90a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800a90e:	4b03      	ldr	r3, [pc, #12]	; (800a91c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800a910:	4620      	mov	r0, r4
 800a912:	601d      	str	r5, [r3, #0]
 800a914:	aa01      	add	r2, sp, #4
 800a916:	1c69      	adds	r1, r5, #1
 800a918:	e7cc      	b.n	800a8b4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800a91a:	bf00      	nop
 800a91c:	20000b54 	andcs	r0, r0, r4, asr fp
 800a920:	0801241c 	stmdaeq	r1, {r2, r3, r4, sl, sp}
 800a924:	20009acc 	andcs	r9, r0, ip, asr #21

0800a928 <RemoteConfig::Run()>:
 800a928:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a92c:	f890 55d4 	ldrb.w	r5, [r0, #1492]	; 0x5d4
 800a930:	2d00      	cmp	r5, #0
 800a932:	d15d      	bne.n	800a9f0 <RemoteConfig::Run()+0xc8>
 800a934:	4604      	mov	r4, r0
 800a936:	4e4a      	ldr	r6, [pc, #296]	; (800aa60 <RemoteConfig::Run()+0x138>)
 800a938:	300c      	adds	r0, #12
 800a93a:	f000 fdf1 	bl	800b520 <HttpDaemon::Run()>
 800a93e:	4631      	mov	r1, r6
 800a940:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a944:	f10d 030e 	add.w	r3, sp, #14
 800a948:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800a94c:	f001 fe90 	bl	800c670 <udp_recv2>
 800a950:	2803      	cmp	r0, #3
 800a952:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800a956:	d94b      	bls.n	800a9f0 <RemoteConfig::Run()+0xc8>
 800a958:	6831      	ldr	r1, [r6, #0]
 800a95a:	1e43      	subs	r3, r0, #1
 800a95c:	5cca      	ldrb	r2, [r1, r3]
 800a95e:	2a0a      	cmp	r2, #10
 800a960:	bf18      	it	ne
 800a962:	4603      	movne	r3, r0
 800a964:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800a968:	7808      	ldrb	r0, [r1, #0]
 800a96a:	283f      	cmp	r0, #63	; 0x3f
 800a96c:	d135      	bne.n	800a9da <RemoteConfig::Run()+0xb2>
 800a96e:	483d      	ldr	r0, [pc, #244]	; (800aa64 <RemoteConfig::Run()+0x13c>)
 800a970:	462a      	mov	r2, r5
 800a972:	4607      	mov	r7, r0
 800a974:	3b01      	subs	r3, #1
 800a976:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800a97a:	7b86      	ldrb	r6, [r0, #14]
 800a97c:	8985      	ldrh	r5, [r0, #12]
 800a97e:	b176      	cbz	r6, 800a99e <RemoteConfig::Run()+0x76>
 800a980:	42ab      	cmp	r3, r5
 800a982:	d80e      	bhi.n	800a9a2 <RemoteConfig::Run()+0x7a>
 800a984:	3201      	adds	r2, #1
 800a986:	2a09      	cmp	r2, #9
 800a988:	f100 0010 	add.w	r0, r0, #16
 800a98c:	d1f5      	bne.n	800a97a <RemoteConfig::Run()+0x52>
 800a98e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a992:	9300      	str	r3, [sp, #0]
 800a994:	2208      	movs	r2, #8
 800a996:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a99a:	4933      	ldr	r1, [pc, #204]	; (800aa68 <RemoteConfig::Run()+0x140>)
 800a99c:	e052      	b.n	800aa44 <RemoteConfig::Run()+0x11c>
 800a99e:	42ab      	cmp	r3, r5
 800a9a0:	d1f0      	bne.n	800a984 <RemoteConfig::Run()+0x5c>
 800a9a2:	6886      	ldr	r6, [r0, #8]
 800a9a4:	f101 0c01 	add.w	ip, r1, #1
 800a9a8:	4435      	add	r5, r6
 800a9aa:	42b5      	cmp	r5, r6
 800a9ac:	d10b      	bne.n	800a9c6 <RemoteConfig::Run()+0x9e>
 800a9ae:	0113      	lsls	r3, r2, #4
 800a9b0:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800a9b4:	6852      	ldr	r2, [r2, #4]
 800a9b6:	58fb      	ldr	r3, [r7, r3]
 800a9b8:	1051      	asrs	r1, r2, #1
 800a9ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a9be:	07d2      	lsls	r2, r2, #31
 800a9c0:	d408      	bmi.n	800a9d4 <RemoteConfig::Run()+0xac>
 800a9c2:	4798      	blx	r3
 800a9c4:	e014      	b.n	800a9f0 <RemoteConfig::Run()+0xc8>
 800a9c6:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800a9ca:	f816 eb01 	ldrb.w	lr, [r6], #1
 800a9ce:	45f0      	cmp	r8, lr
 800a9d0:	d0eb      	beq.n	800a9aa <RemoteConfig::Run()+0x82>
 800a9d2:	e7d7      	b.n	800a984 <RemoteConfig::Run()+0x5c>
 800a9d4:	5862      	ldr	r2, [r4, r1]
 800a9d6:	58d3      	ldr	r3, [r2, r3]
 800a9d8:	e7f3      	b.n	800a9c2 <RemoteConfig::Run()+0x9a>
 800a9da:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800a9de:	b93a      	cbnz	r2, 800a9f0 <RemoteConfig::Run()+0xc8>
 800a9e0:	2823      	cmp	r0, #35	; 0x23
 800a9e2:	d108      	bne.n	800a9f6 <RemoteConfig::Run()+0xce>
 800a9e4:	4611      	mov	r1, r2
 800a9e6:	4620      	mov	r0, r4
 800a9e8:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800a9ec:	f7ff ff56 	bl	800a89c <RemoteConfig::HandleSet(void*, unsigned int)>
 800a9f0:	b004      	add	sp, #16
 800a9f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a9f6:	2821      	cmp	r0, #33	; 0x21
 800a9f8:	d1fa      	bne.n	800a9f0 <RemoteConfig::Run()+0xc8>
 800a9fa:	3b01      	subs	r3, #1
 800a9fc:	2b05      	cmp	r3, #5
 800a9fe:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800aa02:	d918      	bls.n	800aa36 <RemoteConfig::Run()+0x10e>
 800aa04:	1c4a      	adds	r2, r1, #1
 800aa06:	4610      	mov	r0, r2
 800aa08:	4d18      	ldr	r5, [pc, #96]	; (800aa6c <RemoteConfig::Run()+0x144>)
 800aa0a:	f101 0c06 	add.w	ip, r1, #6
 800aa0e:	4560      	cmp	r0, ip
 800aa10:	d01d      	beq.n	800aa4e <RemoteConfig::Run()+0x126>
 800aa12:	f810 7b01 	ldrb.w	r7, [r0], #1
 800aa16:	f815 6b01 	ldrb.w	r6, [r5], #1
 800aa1a:	42b7      	cmp	r7, r6
 800aa1c:	d0f7      	beq.n	800aa0e <RemoteConfig::Run()+0xe6>
 800aa1e:	2b08      	cmp	r3, #8
 800aa20:	d909      	bls.n	800aa36 <RemoteConfig::Run()+0x10e>
 800aa22:	4b13      	ldr	r3, [pc, #76]	; (800aa70 <RemoteConfig::Run()+0x148>)
 800aa24:	3109      	adds	r1, #9
 800aa26:	428a      	cmp	r2, r1
 800aa28:	d017      	beq.n	800aa5a <RemoteConfig::Run()+0x132>
 800aa2a:	f812 5b01 	ldrb.w	r5, [r2], #1
 800aa2e:	f813 0b01 	ldrb.w	r0, [r3], #1
 800aa32:	4285      	cmp	r5, r0
 800aa34:	d0f7      	beq.n	800aa26 <RemoteConfig::Run()+0xfe>
 800aa36:	f642 1305 	movw	r3, #10501	; 0x2905
 800aa3a:	2208      	movs	r2, #8
 800aa3c:	9300      	str	r3, [sp, #0]
 800aa3e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800aa42:	490c      	ldr	r1, [pc, #48]	; (800aa74 <RemoteConfig::Run()+0x14c>)
 800aa44:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800aa48:	f001 fe38 	bl	800c6bc <udp_send>
 800aa4c:	e7d0      	b.n	800a9f0 <RemoteConfig::Run()+0xc8>
 800aa4e:	2300      	movs	r3, #0
 800aa50:	4a09      	ldr	r2, [pc, #36]	; (800aa78 <RemoteConfig::Run()+0x150>)
 800aa52:	011b      	lsls	r3, r3, #4
 800aa54:	4620      	mov	r0, r4
 800aa56:	58d3      	ldr	r3, [r2, r3]
 800aa58:	e7b3      	b.n	800a9c2 <RemoteConfig::Run()+0x9a>
 800aa5a:	2301      	movs	r3, #1
 800aa5c:	e7f8      	b.n	800aa50 <RemoteConfig::Run()+0x128>
 800aa5e:	bf00      	nop
 800aa60:	20000b54 	andcs	r0, r0, r4, asr fp
 800aa64:	08012314 	stmdaeq	r1, {r2, r4, r8, r9, sp}
 800aa68:	080121a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sp}
 800aa6c:	0801218b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sp}
 800aa70:	08012191 	stmdaeq	r1, {r0, r4, r7, r8, sp}
 800aa74:	0801219a 	stmdaeq	r1, {r1, r3, r4, r7, r8, sp}
 800aa78:	080123a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sp}

0800aa7c <RemoteConfig::HandleSetRconfig()>:
 800aa7c:	b510      	push	{r4, lr}
 800aa7e:	4604      	mov	r4, r0
 800aa80:	4b09      	ldr	r3, [pc, #36]	; (800aaa8 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800aa82:	b08a      	sub	sp, #40	; 0x28
 800aa84:	6819      	ldr	r1, [r3, #0]
 800aa86:	a801      	add	r0, sp, #4
 800aa88:	f000 f89c 	bl	800abc4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800aa8c:	4b07      	ldr	r3, [pc, #28]	; (800aaac <RemoteConfig::HandleSetRconfig()+0x30>)
 800aa8e:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800aa92:	6819      	ldr	r1, [r3, #0]
 800aa94:	a801      	add	r0, sp, #4
 800aa96:	f000 f8ab 	bl	800abf0 <RemoteConfigParams::Load(char const*, unsigned int)>
 800aa9a:	4621      	mov	r1, r4
 800aa9c:	a801      	add	r0, sp, #4
 800aa9e:	f000 f9c2 	bl	800ae26 <RemoteConfigParams::Set(RemoteConfig*)>
 800aaa2:	b00a      	add	sp, #40	; 0x28
 800aaa4:	bd10      	pop	{r4, pc}
 800aaa6:	bf00      	nop
 800aaa8:	20001bac 	andcs	r1, r0, ip, lsr #23
 800aaac:	20000b54 	andcs	r0, r0, r4, asr fp

0800aab0 <RemoteConfig::HandleSetNetworkTxt()>:
 800aab0:	b513      	push	{r0, r1, r4, lr}
 800aab2:	4604      	mov	r4, r0
 800aab4:	4b06      	ldr	r3, [pc, #24]	; (800aad0 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800aab6:	a801      	add	r0, sp, #4
 800aab8:	6819      	ldr	r1, [r3, #0]
 800aaba:	f002 fca9 	bl	800d410 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800aabe:	4b05      	ldr	r3, [pc, #20]	; (800aad4 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800aac0:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800aac4:	6819      	ldr	r1, [r3, #0]
 800aac6:	a801      	add	r0, sp, #4
 800aac8:	f002 fcc2 	bl	800d450 <NetworkParams::Load(char const*, unsigned int)>
 800aacc:	b002      	add	sp, #8
 800aace:	bd10      	pop	{r4, pc}
 800aad0:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800aad4:	20000b54 	andcs	r0, r0, r4, asr fp

0800aad8 <RemoteConfig::HandleSetE131Txt()>:
 800aad8:	b510      	push	{r4, lr}
 800aada:	4604      	mov	r4, r0
 800aadc:	4b07      	ldr	r3, [pc, #28]	; (800aafc <RemoteConfig::HandleSetE131Txt()+0x24>)
 800aade:	b08a      	sub	sp, #40	; 0x28
 800aae0:	6819      	ldr	r1, [r3, #0]
 800aae2:	a801      	add	r0, sp, #4
 800aae4:	f7fe fb72 	bl	80091cc <E131Params::E131Params(E131ParamsStore*)>
 800aae8:	4b05      	ldr	r3, [pc, #20]	; (800ab00 <RemoteConfig::HandleSetE131Txt()+0x28>)
 800aaea:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800aaee:	6819      	ldr	r1, [r3, #0]
 800aaf0:	a801      	add	r0, sp, #4
 800aaf2:	f7fe fb97 	bl	8009224 <E131Params::Load(char const*, unsigned int)>
 800aaf6:	b00a      	add	sp, #40	; 0x28
 800aaf8:	bd10      	pop	{r4, pc}
 800aafa:	bf00      	nop
 800aafc:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800ab00:	20000b54 	andcs	r0, r0, r4, asr fp

0800ab04 <RemoteConfig::HandleSetParamsTxt()>:
 800ab04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ab06:	4604      	mov	r4, r0
 800ab08:	4b06      	ldr	r3, [pc, #24]	; (800ab24 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800ab0a:	4668      	mov	r0, sp
 800ab0c:	6819      	ldr	r1, [r3, #0]
 800ab0e:	f7fe fe4d 	bl	80097ac <DmxParams::DmxParams(DmxParamsStore*)>
 800ab12:	4b05      	ldr	r3, [pc, #20]	; (800ab28 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800ab14:	4668      	mov	r0, sp
 800ab16:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ab1a:	6819      	ldr	r1, [r3, #0]
 800ab1c:	f7fe fe5e 	bl	80097dc <DmxParams::Load(char const*, unsigned int)>
 800ab20:	b004      	add	sp, #16
 800ab22:	bd10      	pop	{r4, pc}
 800ab24:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800ab28:	20000b54 	andcs	r0, r0, r4, asr fp

0800ab2c <RemoteConfig::HandleSetDisplayTxt()>:
 800ab2c:	b510      	push	{r4, lr}
 800ab2e:	4604      	mov	r4, r0
 800ab30:	4b07      	ldr	r3, [pc, #28]	; (800ab50 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800ab32:	b08a      	sub	sp, #40	; 0x28
 800ab34:	6819      	ldr	r1, [r3, #0]
 800ab36:	4668      	mov	r0, sp
 800ab38:	f003 fc2a 	bl	800e390 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ab3c:	4b05      	ldr	r3, [pc, #20]	; (800ab54 <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 800ab3e:	4668      	mov	r0, sp
 800ab40:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ab44:	6819      	ldr	r1, [r3, #0]
 800ab46:	f003 fc3d 	bl	800e3c4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800ab4a:	b00a      	add	sp, #40	; 0x28
 800ab4c:	bd10      	pop	{r4, pc}
 800ab4e:	bf00      	nop
 800ab50:	20001b9c 	mulcs	r0, ip, fp
 800ab54:	20000b54 	andcs	r0, r0, r4, asr fp

0800ab58 <RemoteConfig::HandleFactory()>:
 800ab58:	b538      	push	{r3, r4, r5, lr}
 800ab5a:	2400      	movs	r4, #0
 800ab5c:	4d04      	ldr	r5, [pc, #16]	; (800ab70 <RemoteConfig::HandleFactory()+0x18>)
 800ab5e:	4621      	mov	r1, r4
 800ab60:	6828      	ldr	r0, [r5, #0]
 800ab62:	3401      	adds	r4, #1
 800ab64:	f000 ff12 	bl	800b98c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800ab68:	2c1c      	cmp	r4, #28
 800ab6a:	d1f8      	bne.n	800ab5e <RemoteConfig::HandleFactory()+0x6>
 800ab6c:	bd38      	pop	{r3, r4, r5, pc}
 800ab6e:	bf00      	nop
 800ab70:	20001b94 	mulcs	r0, r4, fp

0800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800ab74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ab76:	460b      	mov	r3, r1
 800ab78:	8885      	ldrh	r5, [r0, #4]
 800ab7a:	88c1      	ldrh	r1, [r0, #6]
 800ab7c:	42a9      	cmp	r1, r5
 800ab7e:	d214      	bcs.n	800abaa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800ab80:	4604      	mov	r4, r0
 800ab82:	6800      	ldr	r0, [r0, #0]
 800ab84:	1a6d      	subs	r5, r5, r1
 800ab86:	4408      	add	r0, r1
 800ab88:	7a21      	ldrb	r1, [r4, #8]
 800ab8a:	b91a      	cbnz	r2, 800ab94 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800ab8c:	b919      	cbnz	r1, 800ab96 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800ab8e:	4a0a      	ldr	r2, [pc, #40]	; (800abb8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800ab90:	9100      	str	r1, [sp, #0]
 800ab92:	e002      	b.n	800ab9a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ab94:	b159      	cbz	r1, 800abae <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ab96:	9200      	str	r2, [sp, #0]
 800ab98:	4a08      	ldr	r2, [pc, #32]	; (800abbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ab9a:	4629      	mov	r1, r5
 800ab9c:	f004 ff86 	bl	800faac <snprintf>
 800aba0:	4285      	cmp	r5, r0
 800aba2:	bfa2      	ittt	ge
 800aba4:	88e3      	ldrhge	r3, [r4, #6]
 800aba6:	181b      	addge	r3, r3, r0
 800aba8:	80e3      	strhge	r3, [r4, #6]
 800abaa:	b003      	add	sp, #12
 800abac:	bd30      	pop	{r4, r5, pc}
 800abae:	2201      	movs	r2, #1
 800abb0:	9200      	str	r2, [sp, #0]
 800abb2:	4a03      	ldr	r2, [pc, #12]	; (800abc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800abb4:	e7f1      	b.n	800ab9a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800abb6:	bf00      	nop
 800abb8:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800abbc:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 800abc0:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

0800abc4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800abc4:	b510      	push	{r4, lr}
 800abc6:	4604      	mov	r4, r0
 800abc8:	2220      	movs	r2, #32
 800abca:	f840 1b04 	str.w	r1, [r0], #4
 800abce:	2100      	movs	r1, #0
 800abd0:	f004 fd2a 	bl	800f628 <memset>
 800abd4:	4620      	mov	r0, r4
 800abd6:	bd10      	pop	{r4, pc}

0800abd8 <RemoteConfigParams::Load()>:
 800abd8:	b508      	push	{r3, lr}
 800abda:	2300      	movs	r3, #0
 800abdc:	4601      	mov	r1, r0
 800abde:	6043      	str	r3, [r0, #4]
 800abe0:	6800      	ldr	r0, [r0, #0]
 800abe2:	b120      	cbz	r0, 800abee <RemoteConfigParams::Load()+0x16>
 800abe4:	6803      	ldr	r3, [r0, #0]
 800abe6:	3104      	adds	r1, #4
 800abe8:	68db      	ldr	r3, [r3, #12]
 800abea:	4798      	blx	r3
 800abec:	2001      	movs	r0, #1
 800abee:	bd08      	pop	{r3, pc}

0800abf0 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800abf0:	2300      	movs	r3, #0
 800abf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800abf4:	460d      	mov	r5, r1
 800abf6:	4616      	mov	r6, r2
 800abf8:	4604      	mov	r4, r0
 800abfa:	6043      	str	r3, [r0, #4]
 800abfc:	4602      	mov	r2, r0
 800abfe:	490a      	ldr	r1, [pc, #40]	; (800ac28 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800ac00:	4668      	mov	r0, sp
 800ac02:	f003 ff0b 	bl	800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ac06:	4632      	mov	r2, r6
 800ac08:	4629      	mov	r1, r5
 800ac0a:	4668      	mov	r0, sp
 800ac0c:	f003 ff0a 	bl	800ea24 <ReadConfigFile::Read(char const*, unsigned int)>
 800ac10:	4621      	mov	r1, r4
 800ac12:	f851 0b04 	ldr.w	r0, [r1], #4
 800ac16:	6803      	ldr	r3, [r0, #0]
 800ac18:	689b      	ldr	r3, [r3, #8]
 800ac1a:	4798      	blx	r3
 800ac1c:	4668      	mov	r0, sp
 800ac1e:	f003 ff00 	bl	800ea22 <ReadConfigFile::~ReadConfigFile()>
 800ac22:	b002      	add	sp, #8
 800ac24:	bd70      	pop	{r4, r5, r6, pc}
 800ac26:	bf00      	nop
 800ac28:	0800ace9 	stmdaeq	r0, {r0, r3, r5, r6, r7, sl, fp, sp, pc}

0800ac2c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800ac2c:	6843      	ldr	r3, [r0, #4]
 800ac2e:	b111      	cbz	r1, 800ac36 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800ac30:	4313      	orrs	r3, r2
 800ac32:	6043      	str	r3, [r0, #4]
 800ac34:	4770      	bx	lr
 800ac36:	ea23 0302 	bic.w	r3, r3, r2
 800ac3a:	e7fa      	b.n	800ac32 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800ac3c <RemoteConfigParams::callbackFunction(char const*)>:
 800ac3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ac3e:	460d      	mov	r5, r1
 800ac40:	4604      	mov	r4, r0
 800ac42:	4923      	ldr	r1, [pc, #140]	; (800acd0 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800ac44:	4628      	mov	r0, r5
 800ac46:	f10d 0203 	add.w	r2, sp, #3
 800ac4a:	f003 ff97 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ac4e:	b940      	cbnz	r0, 800ac62 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800ac50:	2201      	movs	r2, #1
 800ac52:	4620      	mov	r0, r4
 800ac54:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800ac58:	b003      	add	sp, #12
 800ac5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ac5e:	f7ff bfe5 	b.w	800ac2c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800ac62:	4628      	mov	r0, r5
 800ac64:	491b      	ldr	r1, [pc, #108]	; (800acd4 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800ac66:	f10d 0203 	add.w	r2, sp, #3
 800ac6a:	f003 ff87 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ac6e:	b908      	cbnz	r0, 800ac74 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800ac70:	2202      	movs	r2, #2
 800ac72:	e7ee      	b.n	800ac52 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ac74:	4628      	mov	r0, r5
 800ac76:	4918      	ldr	r1, [pc, #96]	; (800acd8 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800ac78:	f10d 0203 	add.w	r2, sp, #3
 800ac7c:	f003 ff7e 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ac80:	b908      	cbnz	r0, 800ac86 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800ac82:	2204      	movs	r2, #4
 800ac84:	e7e5      	b.n	800ac52 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ac86:	4628      	mov	r0, r5
 800ac88:	4914      	ldr	r1, [pc, #80]	; (800acdc <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800ac8a:	f10d 0203 	add.w	r2, sp, #3
 800ac8e:	f003 ff75 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ac92:	b908      	cbnz	r0, 800ac98 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800ac94:	2208      	movs	r2, #8
 800ac96:	e7dc      	b.n	800ac52 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ac98:	4628      	mov	r0, r5
 800ac9a:	4911      	ldr	r1, [pc, #68]	; (800ace0 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800ac9c:	f10d 0203 	add.w	r2, sp, #3
 800aca0:	f003 ff6c 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aca4:	b908      	cbnz	r0, 800acaa <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800aca6:	2220      	movs	r2, #32
 800aca8:	e7d3      	b.n	800ac52 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800acaa:	2317      	movs	r3, #23
 800acac:	4628      	mov	r0, r5
 800acae:	9301      	str	r3, [sp, #4]
 800acb0:	490c      	ldr	r1, [pc, #48]	; (800ace4 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800acb2:	ab01      	add	r3, sp, #4
 800acb4:	f104 020c 	add.w	r2, r4, #12
 800acb8:	f003 fee8 	bl	800ea8c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800acbc:	b930      	cbnz	r0, 800accc <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800acbe:	9b01      	ldr	r3, [sp, #4]
 800acc0:	4423      	add	r3, r4
 800acc2:	7318      	strb	r0, [r3, #12]
 800acc4:	6863      	ldr	r3, [r4, #4]
 800acc6:	f043 0310 	orr.w	r3, r3, #16
 800acca:	6063      	str	r3, [r4, #4]
 800accc:	b003      	add	sp, #12
 800acce:	bd30      	pop	{r4, r5, pc}
 800acd0:	08012784 	stmdaeq	r1, {r2, r7, r8, r9, sl, sp}
 800acd4:	080127a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, sp}
 800acd8:	080127b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, sp}
 800acdc:	080127c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, sp}
 800ace0:	080127cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, sp}
 800ace4:	08012798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, sp}

0800ace8 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800ace8:	f7ff bfa8 	b.w	800ac3c <RemoteConfigParams::callbackFunction(char const*)>

0800acec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800acec:	b570      	push	{r4, r5, r6, lr}
 800acee:	4604      	mov	r4, r0
 800acf0:	4615      	mov	r5, r2
 800acf2:	461e      	mov	r6, r3
 800acf4:	b086      	sub	sp, #24
 800acf6:	3004      	adds	r0, #4
 800acf8:	2900      	cmp	r1, #0
 800acfa:	d041      	beq.n	800ad80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800acfc:	2220      	movs	r2, #32
 800acfe:	f004 fc7c 	bl	800f5fa <memmove>
 800ad02:	4633      	mov	r3, r6
 800ad04:	462a      	mov	r2, r5
 800ad06:	4937      	ldr	r1, [pc, #220]	; (800ade4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800ad08:	a803      	add	r0, sp, #12
 800ad0a:	f003 fde7 	bl	800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ad0e:	6862      	ldr	r2, [r4, #4]
 800ad10:	4935      	ldr	r1, [pc, #212]	; (800ade8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800ad12:	f002 0201 	and.w	r2, r2, #1
 800ad16:	a803      	add	r0, sp, #12
 800ad18:	f7ff ff2c 	bl	800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ad1c:	6862      	ldr	r2, [r4, #4]
 800ad1e:	4933      	ldr	r1, [pc, #204]	; (800adec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800ad20:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800ad24:	a803      	add	r0, sp, #12
 800ad26:	f7ff ff25 	bl	800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ad2a:	6862      	ldr	r2, [r4, #4]
 800ad2c:	4930      	ldr	r1, [pc, #192]	; (800adf0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800ad2e:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800ad32:	a803      	add	r0, sp, #12
 800ad34:	f7ff ff1e 	bl	800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ad38:	6862      	ldr	r2, [r4, #4]
 800ad3a:	492e      	ldr	r1, [pc, #184]	; (800adf4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800ad3c:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800ad40:	a803      	add	r0, sp, #12
 800ad42:	f7ff ff17 	bl	800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ad46:	6862      	ldr	r2, [r4, #4]
 800ad48:	492b      	ldr	r1, [pc, #172]	; (800adf8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800ad4a:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800ad4e:	a803      	add	r0, sp, #12
 800ad50:	f7ff ff10 	bl	800ab74 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ad54:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ad58:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ad5c:	6862      	ldr	r2, [r4, #4]
 800ad5e:	42ab      	cmp	r3, r5
 800ad60:	d223      	bcs.n	800adaa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800ad62:	9803      	ldr	r0, [sp, #12]
 800ad64:	06d2      	lsls	r2, r2, #27
 800ad66:	4418      	add	r0, r3
 800ad68:	eba5 0503 	sub.w	r5, r5, r3
 800ad6c:	f104 040c 	add.w	r4, r4, #12
 800ad70:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ad74:	d40b      	bmi.n	800ad8e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800ad76:	b95b      	cbnz	r3, 800ad90 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800ad78:	4b20      	ldr	r3, [pc, #128]	; (800adfc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800ad7a:	4a21      	ldr	r2, [pc, #132]	; (800ae00 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800ad7c:	9400      	str	r4, [sp, #0]
 800ad7e:	e00a      	b.n	800ad96 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800ad80:	6823      	ldr	r3, [r4, #0]
 800ad82:	4601      	mov	r1, r0
 800ad84:	681a      	ldr	r2, [r3, #0]
 800ad86:	4618      	mov	r0, r3
 800ad88:	68d2      	ldr	r2, [r2, #12]
 800ad8a:	4790      	blx	r2
 800ad8c:	e7b9      	b.n	800ad02 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800ad8e:	b32b      	cbz	r3, 800addc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800ad90:	4b1a      	ldr	r3, [pc, #104]	; (800adfc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800ad92:	4a1c      	ldr	r2, [pc, #112]	; (800ae04 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800ad94:	9400      	str	r4, [sp, #0]
 800ad96:	4629      	mov	r1, r5
 800ad98:	f004 fe88 	bl	800faac <snprintf>
 800ad9c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ada0:	4285      	cmp	r5, r0
 800ada2:	bfa4      	itt	ge
 800ada4:	181b      	addge	r3, r3, r0
 800ada6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800adaa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800adae:	b17b      	cbz	r3, 800add0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800adb0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800adb4:	9b03      	ldr	r3, [sp, #12]
 800adb6:	4413      	add	r3, r2
 800adb8:	227d      	movs	r2, #125	; 0x7d
 800adba:	f803 2c01 	strb.w	r2, [r3, #-1]
 800adbe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800adc2:	9903      	ldr	r1, [sp, #12]
 800adc4:	54ca      	strb	r2, [r1, r3]
 800adc6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800adca:	3301      	adds	r3, #1
 800adcc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800add0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800add4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800add6:	601a      	str	r2, [r3, #0]
 800add8:	b006      	add	sp, #24
 800adda:	bd70      	pop	{r4, r5, r6, pc}
 800addc:	4b07      	ldr	r3, [pc, #28]	; (800adfc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800adde:	4a0a      	ldr	r2, [pc, #40]	; (800ae08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800ade0:	9400      	str	r4, [sp, #0]
 800ade2:	e7d8      	b.n	800ad96 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800ade4:	0801278c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, sp}
 800ade8:	08012784 	stmdaeq	r1, {r2, r7, r8, r9, sl, sp}
 800adec:	080127a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, sp}
 800adf0:	080127b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, sp}
 800adf4:	080127c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, sp}
 800adf8:	080127cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, sp}
 800adfc:	08012798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, sp}
 800ae00:	08011f45 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, fp, ip}
 800ae04:	08011f3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, fp, ip}
 800ae08:	08011f46 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, fp, ip}

0800ae0c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800ae0c:	b513      	push	{r0, r1, r4, lr}
 800ae0e:	6804      	ldr	r4, [r0, #0]
 800ae10:	b914      	cbnz	r4, 800ae18 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ae12:	601c      	str	r4, [r3, #0]
 800ae14:	b002      	add	sp, #8
 800ae16:	bd10      	pop	{r4, pc}
 800ae18:	9300      	str	r3, [sp, #0]
 800ae1a:	4613      	mov	r3, r2
 800ae1c:	460a      	mov	r2, r1
 800ae1e:	2100      	movs	r1, #0
 800ae20:	f7ff ff64 	bl	800acec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800ae24:	e7f6      	b.n	800ae14 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ae26 <RemoteConfigParams::Set(RemoteConfig*)>:
 800ae26:	b538      	push	{r3, r4, r5, lr}
 800ae28:	460c      	mov	r4, r1
 800ae2a:	4605      	mov	r5, r0
 800ae2c:	6841      	ldr	r1, [r0, #4]
 800ae2e:	4620      	mov	r0, r4
 800ae30:	f001 0101 	and.w	r1, r1, #1
 800ae34:	f7ff fc24 	bl	800a680 <RemoteConfig::SetDisable(bool)>
 800ae38:	686b      	ldr	r3, [r5, #4]
 800ae3a:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800ae3e:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800ae42:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800ae46:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800ae4a:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800ae4e:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800ae52:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800ae56:	06db      	lsls	r3, r3, #27
 800ae58:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800ae5c:	d506      	bpl.n	800ae6c <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800ae5e:	4620      	mov	r0, r4
 800ae60:	f105 010c 	add.w	r1, r5, #12
 800ae64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ae68:	f7ff bc2e 	b.w	800a6c8 <RemoteConfig::SetDisplayName(char const*)>
 800ae6c:	bd38      	pop	{r3, r4, r5, pc}

0800ae6e <RemoteConfigParams::Dump()>:
 800ae6e:	4770      	bx	lr

0800ae70 <RemoteConfig::HandleReboot()>:
 800ae70:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800ae74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae76:	2b00      	cmp	r3, #0
 800ae78:	d03d      	beq.n	800aef6 <RemoteConfig::HandleReboot()+0x86>
 800ae7a:	2301      	movs	r3, #1
 800ae7c:	4c1f      	ldr	r4, [pc, #124]	; (800aefc <RemoteConfig::HandleReboot()+0x8c>)
 800ae7e:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800ae82:	6825      	ldr	r5, [r4, #0]
 800ae84:	69a8      	ldr	r0, [r5, #24]
 800ae86:	b138      	cbz	r0, 800ae98 <RemoteConfig::HandleReboot()+0x28>
 800ae88:	2100      	movs	r1, #0
 800ae8a:	6803      	ldr	r3, [r0, #0]
 800ae8c:	7429      	strb	r1, [r5, #16]
 800ae8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae90:	4798      	blx	r3
 800ae92:	4b1b      	ldr	r3, [pc, #108]	; (800af00 <RemoteConfig::HandleReboot()+0x90>)
 800ae94:	681b      	ldr	r3, [r3, #0]
 800ae96:	606b      	str	r3, [r5, #4]
 800ae98:	4d1a      	ldr	r5, [pc, #104]	; (800af04 <RemoteConfig::HandleReboot()+0x94>)
 800ae9a:	6828      	ldr	r0, [r5, #0]
 800ae9c:	f000 fdf2 	bl	800ba84 <SpiFlashStore::Flash()>
 800aea0:	2800      	cmp	r0, #0
 800aea2:	d1fa      	bne.n	800ae9a <RemoteConfig::HandleReboot()+0x2a>
 800aea4:	4b18      	ldr	r3, [pc, #96]	; (800af08 <RemoteConfig::HandleReboot()+0x98>)
 800aea6:	6818      	ldr	r0, [r3, #0]
 800aea8:	f002 f8c6 	bl	800d038 <Network::Shutdown()>
 800aeac:	4817      	ldr	r0, [pc, #92]	; (800af0c <RemoteConfig::HandleReboot()+0x9c>)
 800aeae:	f004 fdd5 	bl	800fa5c <printf>
 800aeb2:	6823      	ldr	r3, [r4, #0]
 800aeb4:	6998      	ldr	r0, [r3, #24]
 800aeb6:	b110      	cbz	r0, 800aebe <RemoteConfig::HandleReboot()+0x4e>
 800aeb8:	6803      	ldr	r3, [r0, #0]
 800aeba:	68db      	ldr	r3, [r3, #12]
 800aebc:	4798      	blx	r3
 800aebe:	6824      	ldr	r4, [r4, #0]
 800aec0:	4913      	ldr	r1, [pc, #76]	; (800af10 <RemoteConfig::HandleReboot()+0xa0>)
 800aec2:	4620      	mov	r0, r4
 800aec4:	f7fc fed2 	bl	8007c6c <Display::TextStatus(char const*)>
 800aec8:	7c63      	ldrb	r3, [r4, #17]
 800aeca:	b183      	cbz	r3, 800aeee <RemoteConfig::HandleReboot()+0x7e>
 800aecc:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800aed0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aed4:	23bf      	movs	r3, #191	; 0xbf
 800aed6:	7a20      	ldrb	r0, [r4, #8]
 800aed8:	f88d 3006 	strb.w	r3, [sp, #6]
 800aedc:	f005 fe30 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800aee0:	68e0      	ldr	r0, [r4, #12]
 800aee2:	f005 fe25 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 800aee6:	2103      	movs	r1, #3
 800aee8:	a801      	add	r0, sp, #4
 800aeea:	f005 fe2f 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800aeee:	4b09      	ldr	r3, [pc, #36]	; (800af14 <RemoteConfig::HandleReboot()+0xa4>)
 800aef0:	6818      	ldr	r0, [r3, #0]
 800aef2:	f004 fa81 	bl	800f3f8 <Hardware::Reboot()>
 800aef6:	b003      	add	sp, #12
 800aef8:	bd30      	pop	{r4, r5, pc}
 800aefa:	bf00      	nop
 800aefc:	20009ad0 	ldrdcs	r9, [r0], -r0
 800af00:	20009bdc 	ldrdcs	r9, [r0], -ip
 800af04:	20001b94 	mulcs	r0, r4, fp
 800af08:	20009498 	mulcs	r0, r8, r4
 800af0c:	080123c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sp}
 800af10:	080123d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sp}
 800af14:	20009bc0 	andcs	r9, r0, r0, asr #23

0800af18 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800af18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800af1c:	2000      	movs	r0, #0
 800af1e:	4d12      	ldr	r5, [pc, #72]	; (800af68 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800af20:	f10d 0c04 	add.w	ip, sp, #4
 800af24:	6814      	ldr	r4, [r2, #0]
 800af26:	7d2b      	ldrb	r3, [r5, #20]
 800af28:	692e      	ldr	r6, [r5, #16]
 800af2a:	42a3      	cmp	r3, r4
 800af2c:	bf34      	ite	cc
 800af2e:	4664      	movcc	r4, ip
 800af30:	4614      	movcs	r4, r2
 800af32:	9301      	str	r3, [sp, #4]
 800af34:	6827      	ldr	r7, [r4, #0]
 800af36:	460c      	mov	r4, r1
 800af38:	3e01      	subs	r6, #1
 800af3a:	440f      	add	r7, r1
 800af3c:	42bc      	cmp	r4, r7
 800af3e:	d101      	bne.n	800af44 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800af40:	6013      	str	r3, [r2, #0]
 800af42:	e00c      	b.n	800af5e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800af44:	f894 8000 	ldrb.w	r8, [r4]
 800af48:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800af4c:	45f0      	cmp	r8, lr
 800af4e:	d009      	beq.n	800af64 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800af50:	3001      	adds	r0, #1
 800af52:	2805      	cmp	r0, #5
 800af54:	f105 051c 	add.w	r5, r5, #28
 800af58:	d1e4      	bne.n	800af24 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800af5a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800af5e:	b002      	add	sp, #8
 800af60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af64:	3401      	adds	r4, #1
 800af66:	e7e9      	b.n	800af3c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800af68:	0801241c 	stmdaeq	r1, {r2, r3, r4, sl, sp}

0800af6c <RemoteConfig::PlatformHandleTftpSet()>:
 800af6c:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800af70:	b109      	cbz	r1, 800af76 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800af72:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800af76:	2002      	movs	r0, #2
 800af78:	f004 bf98 	b.w	800feac <bkp_data_write>

0800af7c <RemoteConfig::PlatformHandleTftpGet()>:
 800af7c:	b510      	push	{r4, lr}
 800af7e:	4604      	mov	r4, r0
 800af80:	2002      	movs	r0, #2
 800af82:	f004 ffa9 	bl	800fed8 <bkp_data_read>
 800af86:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800af8a:	1ac3      	subs	r3, r0, r3
 800af8c:	4258      	negs	r0, r3
 800af8e:	4158      	adcs	r0, r3
 800af90:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800af94:	bd10      	pop	{r4, pc}

0800af96 <strcmp>:
 800af96:	1e43      	subs	r3, r0, #1
 800af98:	3901      	subs	r1, #1
 800af9a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800af9e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800afa2:	4290      	cmp	r0, r2
 800afa4:	d001      	beq.n	800afaa <strcmp+0x14>
 800afa6:	1a80      	subs	r0, r0, r2
 800afa8:	e001      	b.n	800afae <strcmp+0x18>
 800afaa:	2800      	cmp	r0, #0
 800afac:	d1f5      	bne.n	800af9a <strcmp+0x4>
 800afae:	4770      	bx	lr

0800afb0 <strcasecmp>:
 800afb0:	b530      	push	{r4, r5, lr}
 800afb2:	1e42      	subs	r2, r0, #1
 800afb4:	3901      	subs	r1, #1
 800afb6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800afba:	4604      	mov	r4, r0
 800afbc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800afc0:	2b19      	cmp	r3, #25
 800afc2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800afc6:	bf98      	it	ls
 800afc8:	f100 0420 	addls.w	r4, r0, #32
 800afcc:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800afd0:	2d19      	cmp	r5, #25
 800afd2:	bf98      	it	ls
 800afd4:	3320      	addls	r3, #32
 800afd6:	42a3      	cmp	r3, r4
 800afd8:	d001      	beq.n	800afde <strcasecmp+0x2e>
 800afda:	1ae0      	subs	r0, r4, r3
 800afdc:	e001      	b.n	800afe2 <strcasecmp+0x32>
 800afde:	2800      	cmp	r0, #0
 800afe0:	d1e9      	bne.n	800afb6 <strcasecmp+0x6>
 800afe2:	bd30      	pop	{r4, r5, pc}

0800afe4 <PropertiesConfig::EnableJSON(bool)>:
 800afe4:	4a04      	ldr	r2, [pc, #16]	; (800aff8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800afe6:	7813      	ldrb	r3, [r2, #0]
 800afe8:	b118      	cbz	r0, 800aff2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800afea:	f043 0301 	orr.w	r3, r3, #1
 800afee:	7013      	strb	r3, [r2, #0]
 800aff0:	4770      	bx	lr
 800aff2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800aff6:	e7fa      	b.n	800afee <PropertiesConfig::EnableJSON(bool)+0xa>
 800aff8:	20009acc 	andcs	r9, r0, ip, asr #21

0800affc <HttpDaemon::HttpDaemon()>:
 800affc:	4a0a      	ldr	r2, [pc, #40]	; (800b028 <HttpDaemon::HttpDaemon()+0x2c>)
 800affe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b002:	6002      	str	r2, [r0, #0]
 800b004:	2200      	movs	r2, #0
 800b006:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b00a:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b00e:	2102      	movs	r1, #2
 800b010:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b014:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b018:	60c2      	str	r2, [r0, #12]
 800b01a:	8402      	strh	r2, [r0, #32]
 800b01c:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800b020:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800b024:	4770      	bx	lr
 800b026:	bf00      	nop
 800b028:	08012704 	stmdaeq	r1, {r2, r8, r9, sl, sp}

0800b02c <HttpDaemon::Start()>:
 800b02c:	4b04      	ldr	r3, [pc, #16]	; (800b040 <HttpDaemon::Start()+0x14>)
 800b02e:	b510      	push	{r4, lr}
 800b030:	2150      	movs	r1, #80	; 0x50
 800b032:	4604      	mov	r4, r0
 800b034:	6818      	ldr	r0, [r3, #0]
 800b036:	f002 f9df 	bl	800d3f8 <Network::TcpBegin(unsigned short)>
 800b03a:	6120      	str	r0, [r4, #16]
 800b03c:	bd10      	pop	{r4, pc}
 800b03e:	bf00      	nop
 800b040:	20009498 	mulcs	r0, r8, r4

0800b044 <HttpDaemon::ParseMethod(char*)>:
 800b044:	b538      	push	{r3, r4, r5, lr}
 800b046:	4604      	mov	r4, r0
 800b048:	4608      	mov	r0, r1
 800b04a:	491a      	ldr	r1, [pc, #104]	; (800b0b4 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b04c:	f004 fd5e 	bl	800fb0c <strtok>
 800b050:	4605      	mov	r5, r0
 800b052:	b360      	cbz	r0, 800b0ae <HttpDaemon::ParseMethod(char*)+0x6a>
 800b054:	4918      	ldr	r1, [pc, #96]	; (800b0b8 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b056:	f7ff ff9e 	bl	800af96 <strcmp>
 800b05a:	b128      	cbz	r0, 800b068 <HttpDaemon::ParseMethod(char*)+0x24>
 800b05c:	4628      	mov	r0, r5
 800b05e:	4917      	ldr	r1, [pc, #92]	; (800b0bc <HttpDaemon::ParseMethod(char*)+0x78>)
 800b060:	f7ff ff99 	bl	800af96 <strcmp>
 800b064:	bb18      	cbnz	r0, 800b0ae <HttpDaemon::ParseMethod(char*)+0x6a>
 800b066:	2001      	movs	r0, #1
 800b068:	61e0      	str	r0, [r4, #28]
 800b06a:	4912      	ldr	r1, [pc, #72]	; (800b0b4 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b06c:	2000      	movs	r0, #0
 800b06e:	f004 fd4d 	bl	800fb0c <strtok>
 800b072:	b910      	cbnz	r0, 800b07a <HttpDaemon::ParseMethod(char*)+0x36>
 800b074:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b078:	bd38      	pop	{r3, r4, r5, pc}
 800b07a:	6060      	str	r0, [r4, #4]
 800b07c:	4910      	ldr	r1, [pc, #64]	; (800b0c0 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b07e:	2000      	movs	r0, #0
 800b080:	f004 fd44 	bl	800fb0c <strtok>
 800b084:	2800      	cmp	r0, #0
 800b086:	d0f5      	beq.n	800b074 <HttpDaemon::ParseMethod(char*)+0x30>
 800b088:	490e      	ldr	r1, [pc, #56]	; (800b0c4 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b08a:	f7ff ff84 	bl	800af96 <strcmp>
 800b08e:	2800      	cmp	r0, #0
 800b090:	d1f0      	bne.n	800b074 <HttpDaemon::ParseMethod(char*)+0x30>
 800b092:	490d      	ldr	r1, [pc, #52]	; (800b0c8 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b094:	f004 fd3a 	bl	800fb0c <strtok>
 800b098:	2800      	cmp	r0, #0
 800b09a:	d0eb      	beq.n	800b074 <HttpDaemon::ParseMethod(char*)+0x30>
 800b09c:	490b      	ldr	r1, [pc, #44]	; (800b0cc <HttpDaemon::ParseMethod(char*)+0x88>)
 800b09e:	f7ff ff7a 	bl	800af96 <strcmp>
 800b0a2:	2800      	cmp	r0, #0
 800b0a4:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b0a8:	bf08      	it	eq
 800b0aa:	20c8      	moveq	r0, #200	; 0xc8
 800b0ac:	e7e4      	b.n	800b078 <HttpDaemon::ParseMethod(char*)+0x34>
 800b0ae:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b0b2:	e7e1      	b.n	800b078 <HttpDaemon::ParseMethod(char*)+0x34>
 800b0b4:	080124a8 	stmdaeq	r1, {r3, r5, r7, sl, sp}
 800b0b8:	080124aa 	stmdaeq	r1, {r1, r3, r5, r7, sl, sp}
 800b0bc:	080124ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, sp}
 800b0c0:	08012518 	stmdaeq	r1, {r3, r4, r8, sl, sp}
 800b0c4:	080124b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, sp}
 800b0c8:	080124b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, sp}
 800b0cc:	080124bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, sl, sp}

0800b0d0 <HttpDaemon::ParseHeaderField(char*)>:
 800b0d0:	b538      	push	{r3, r4, r5, lr}
 800b0d2:	4605      	mov	r5, r0
 800b0d4:	4608      	mov	r0, r1
 800b0d6:	491d      	ldr	r1, [pc, #116]	; (800b14c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b0d8:	f004 fd18 	bl	800fb0c <strtok>
 800b0dc:	4604      	mov	r4, r0
 800b0de:	b910      	cbnz	r0, 800b0e6 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b0e0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b0e4:	bd38      	pop	{r3, r4, r5, pc}
 800b0e6:	491a      	ldr	r1, [pc, #104]	; (800b150 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b0e8:	f7ff ff62 	bl	800afb0 <strcasecmp>
 800b0ec:	b970      	cbnz	r0, 800b10c <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b0ee:	4919      	ldr	r1, [pc, #100]	; (800b154 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b0f0:	f004 fd0c 	bl	800fb0c <strtok>
 800b0f4:	2800      	cmp	r0, #0
 800b0f6:	d0f3      	beq.n	800b0e0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b0f8:	4917      	ldr	r1, [pc, #92]	; (800b158 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b0fa:	f7ff ff4c 	bl	800af96 <strcmp>
 800b0fe:	b108      	cbz	r0, 800b104 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b100:	20c8      	movs	r0, #200	; 0xc8
 800b102:	e7ef      	b.n	800b0e4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b104:	2301      	movs	r3, #1
 800b106:	f885 3020 	strb.w	r3, [r5, #32]
 800b10a:	e7f9      	b.n	800b100 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b10c:	4620      	mov	r0, r4
 800b10e:	4913      	ldr	r1, [pc, #76]	; (800b15c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b110:	f7ff ff4e 	bl	800afb0 <strcasecmp>
 800b114:	4604      	mov	r4, r0
 800b116:	2800      	cmp	r0, #0
 800b118:	d1f2      	bne.n	800b100 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b11a:	4911      	ldr	r1, [pc, #68]	; (800b160 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b11c:	f004 fcf6 	bl	800fb0c <strtok>
 800b120:	2800      	cmp	r0, #0
 800b122:	d0dd      	beq.n	800b0e0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b124:	1e42      	subs	r2, r0, #1
 800b126:	4623      	mov	r3, r4
 800b128:	200a      	movs	r0, #10
 800b12a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b12e:	b911      	cbnz	r1, 800b136 <HttpDaemon::ParseHeaderField(char*)+0x66>
 800b130:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800b134:	e7e4      	b.n	800b100 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b136:	3930      	subs	r1, #48	; 0x30
 800b138:	2909      	cmp	r1, #9
 800b13a:	d8d1      	bhi.n	800b0e0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b13c:	fb00 1303 	mla	r3, r0, r3, r1
 800b140:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b144:	d9f1      	bls.n	800b12a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b146:	f240 109d 	movw	r0, #413	; 0x19d
 800b14a:	e7cb      	b.n	800b0e4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b14c:	080124bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, sp}
 800b150:	080124c1 	stmdaeq	r1, {r0, r6, r7, sl, sp}
 800b154:	080124ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, sp}
 800b158:	080124d1 	stmdaeq	r1, {r0, r4, r6, r7, sl, sp}
 800b15c:	080124e2 	stmdaeq	r1, {r1, r5, r6, r7, sl, sp}
 800b160:	080124a8 	stmdaeq	r1, {r3, r5, r7, sl, sp}

0800b164 <HttpDaemon::ParseRequest()>:
 800b164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b166:	2400      	movs	r4, #0
 800b168:	4605      	mov	r5, r0
 800b16a:	4622      	mov	r2, r4
 800b16c:	4626      	mov	r6, r4
 800b16e:	68c1      	ldr	r1, [r0, #12]
 800b170:	f880 4020 	strb.w	r4, [r0, #32]
 800b174:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800b178:	8aab      	ldrh	r3, [r5, #20]
 800b17a:	42a3      	cmp	r3, r4
 800b17c:	d91e      	bls.n	800b1bc <HttpDaemon::ParseRequest()+0x58>
 800b17e:	68eb      	ldr	r3, [r5, #12]
 800b180:	5d18      	ldrb	r0, [r3, r4]
 800b182:	280a      	cmp	r0, #10
 800b184:	d10e      	bne.n	800b1a4 <HttpDaemon::ParseRequest()+0x40>
 800b186:	4423      	add	r3, r4
 800b188:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b18c:	1c57      	adds	r7, r2, #1
 800b18e:	b962      	cbnz	r2, 800b1aa <HttpDaemon::ParseRequest()+0x46>
 800b190:	4628      	mov	r0, r5
 800b192:	f7ff ff57 	bl	800b044 <HttpDaemon::ParseMethod(char*)>
 800b196:	28c8      	cmp	r0, #200	; 0xc8
 800b198:	d111      	bne.n	800b1be <HttpDaemon::ParseRequest()+0x5a>
 800b19a:	463a      	mov	r2, r7
 800b19c:	68e9      	ldr	r1, [r5, #12]
 800b19e:	3401      	adds	r4, #1
 800b1a0:	b2a4      	uxth	r4, r4
 800b1a2:	4421      	add	r1, r4
 800b1a4:	3401      	adds	r4, #1
 800b1a6:	b2a4      	uxth	r4, r4
 800b1a8:	e7e6      	b.n	800b178 <HttpDaemon::ParseRequest()+0x14>
 800b1aa:	7808      	ldrb	r0, [r1, #0]
 800b1ac:	b970      	cbnz	r0, 800b1cc <HttpDaemon::ParseRequest()+0x68>
 800b1ae:	696b      	ldr	r3, [r5, #20]
 800b1b0:	3b01      	subs	r3, #1
 800b1b2:	1b1b      	subs	r3, r3, r4
 800b1b4:	b29b      	uxth	r3, r3
 800b1b6:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800b1ba:	b90b      	cbnz	r3, 800b1c0 <HttpDaemon::ParseRequest()+0x5c>
 800b1bc:	20c8      	movs	r0, #200	; 0xc8
 800b1be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b1c0:	68ea      	ldr	r2, [r5, #12]
 800b1c2:	3401      	adds	r4, #1
 800b1c4:	4414      	add	r4, r2
 800b1c6:	60ac      	str	r4, [r5, #8]
 800b1c8:	54e0      	strb	r0, [r4, r3]
 800b1ca:	e7f7      	b.n	800b1bc <HttpDaemon::ParseRequest()+0x58>
 800b1cc:	4628      	mov	r0, r5
 800b1ce:	f7ff ff7f 	bl	800b0d0 <HttpDaemon::ParseHeaderField(char*)>
 800b1d2:	e7e0      	b.n	800b196 <HttpDaemon::ParseRequest()+0x32>

0800b1d4 <HttpDaemon::HandleGetTxt()>:
 800b1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1d8:	6847      	ldr	r7, [r0, #4]
 800b1da:	4604      	mov	r4, r0
 800b1dc:	1dbd      	adds	r5, r7, #6
 800b1de:	462b      	mov	r3, r5
 800b1e0:	4618      	mov	r0, r3
 800b1e2:	7802      	ldrb	r2, [r0, #0]
 800b1e4:	3301      	adds	r3, #1
 800b1e6:	2a00      	cmp	r2, #0
 800b1e8:	d1fa      	bne.n	800b1e0 <HttpDaemon::HandleGetTxt()+0xc>
 800b1ea:	1b40      	subs	r0, r0, r5
 800b1ec:	2804      	cmp	r0, #4
 800b1ee:	d803      	bhi.n	800b1f8 <HttpDaemon::HandleGetTxt()+0x24>
 800b1f0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b1f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1f8:	3804      	subs	r0, #4
 800b1fa:	4914      	ldr	r1, [pc, #80]	; (800b24c <HttpDaemon::HandleGetTxt()+0x78>)
 800b1fc:	4428      	add	r0, r5
 800b1fe:	f7ff feca 	bl	800af96 <strcmp>
 800b202:	2800      	cmp	r0, #0
 800b204:	d1f4      	bne.n	800b1f0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b206:	4b12      	ldr	r3, [pc, #72]	; (800b250 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b208:	2001      	movs	r0, #1
 800b20a:	f893 8000 	ldrb.w	r8, [r3]
 800b20e:	f7ff fee9 	bl	800afe4 <PropertiesConfig::EnableJSON(bool)>
 800b212:	4b10      	ldr	r3, [pc, #64]	; (800b254 <HttpDaemon::HandleGetTxt()+0x80>)
 800b214:	f240 529b 	movw	r2, #1435	; 0x59b
 800b218:	4629      	mov	r1, r5
 800b21a:	6818      	ldr	r0, [r3, #0]
 800b21c:	f7ff fa6c 	bl	800a6f8 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b220:	4606      	mov	r6, r0
 800b222:	f008 0801 	and.w	r8, r8, #1
 800b226:	4640      	mov	r0, r8
 800b228:	f7ff fedc 	bl	800afe4 <PropertiesConfig::EnableJSON(bool)>
 800b22c:	2e00      	cmp	r6, #0
 800b22e:	d0df      	beq.n	800b1f0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b230:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800b234:	3606      	adds	r6, #6
 800b236:	3422      	adds	r4, #34	; 0x22
 800b238:	4437      	add	r7, r6
 800b23a:	42bd      	cmp	r5, r7
 800b23c:	d101      	bne.n	800b242 <HttpDaemon::HandleGetTxt()+0x6e>
 800b23e:	20c8      	movs	r0, #200	; 0xc8
 800b240:	e7d8      	b.n	800b1f4 <HttpDaemon::HandleGetTxt()+0x20>
 800b242:	f815 3b01 	ldrb.w	r3, [r5], #1
 800b246:	f804 3b01 	strb.w	r3, [r4], #1
 800b24a:	e7f6      	b.n	800b23a <HttpDaemon::HandleGetTxt()+0x66>
 800b24c:	08012409 	stmdaeq	r1, {r0, r3, sl, sp}
 800b250:	20009acc 	andcs	r9, r0, ip, asr #21
 800b254:	20000b7c 	andcs	r0, r0, ip, ror fp

0800b258 <HttpDaemon::HandleGet()>:
 800b258:	b570      	push	{r4, r5, r6, lr}
 800b25a:	6845      	ldr	r5, [r0, #4]
 800b25c:	4604      	mov	r4, r0
 800b25e:	4943      	ldr	r1, [pc, #268]	; (800b36c <HttpDaemon::HandleGet()+0x114>)
 800b260:	4628      	mov	r0, r5
 800b262:	f7ff fe98 	bl	800af96 <strcmp>
 800b266:	b120      	cbz	r0, 800b272 <HttpDaemon::HandleGet()+0x1a>
 800b268:	4628      	mov	r0, r5
 800b26a:	4941      	ldr	r1, [pc, #260]	; (800b370 <HttpDaemon::HandleGet()+0x118>)
 800b26c:	f7ff fe93 	bl	800af96 <strcmp>
 800b270:	b960      	cbnz	r0, 800b28c <HttpDaemon::HandleGet()+0x34>
 800b272:	4621      	mov	r1, r4
 800b274:	4b3f      	ldr	r3, [pc, #252]	; (800b374 <HttpDaemon::HandleGet()+0x11c>)
 800b276:	4840      	ldr	r0, [pc, #256]	; (800b378 <HttpDaemon::HandleGet()+0x120>)
 800b278:	f841 3b22 	str.w	r3, [r1], #34
 800b27c:	f000 fa7a 	bl	800b774 <get_file_content(char const*, char*)>
 800b280:	2800      	cmp	r0, #0
 800b282:	dd33      	ble.n	800b2ec <HttpDaemon::HandleGet()+0x94>
 800b284:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b288:	20c8      	movs	r0, #200	; 0xc8
 800b28a:	bd70      	pop	{r4, r5, r6, pc}
 800b28c:	4628      	mov	r0, r5
 800b28e:	493b      	ldr	r1, [pc, #236]	; (800b37c <HttpDaemon::HandleGet()+0x124>)
 800b290:	f7ff fe81 	bl	800af96 <strcmp>
 800b294:	b928      	cbnz	r0, 800b2a2 <HttpDaemon::HandleGet()+0x4a>
 800b296:	4621      	mov	r1, r4
 800b298:	4b39      	ldr	r3, [pc, #228]	; (800b380 <HttpDaemon::HandleGet()+0x128>)
 800b29a:	483a      	ldr	r0, [pc, #232]	; (800b384 <HttpDaemon::HandleGet()+0x12c>)
 800b29c:	f841 3b22 	str.w	r3, [r1], #34
 800b2a0:	e7ec      	b.n	800b27c <HttpDaemon::HandleGet()+0x24>
 800b2a2:	4628      	mov	r0, r5
 800b2a4:	4938      	ldr	r1, [pc, #224]	; (800b388 <HttpDaemon::HandleGet()+0x130>)
 800b2a6:	f7ff fe76 	bl	800af96 <strcmp>
 800b2aa:	b198      	cbz	r0, 800b2d4 <HttpDaemon::HandleGet()+0x7c>
 800b2ac:	4a37      	ldr	r2, [pc, #220]	; (800b38c <HttpDaemon::HandleGet()+0x134>)
 800b2ae:	1e6b      	subs	r3, r5, #1
 800b2b0:	1d69      	adds	r1, r5, #5
 800b2b2:	428b      	cmp	r3, r1
 800b2b4:	d114      	bne.n	800b2e0 <HttpDaemon::HandleGet()+0x88>
 800b2b6:	4b36      	ldr	r3, [pc, #216]	; (800b390 <HttpDaemon::HandleGet()+0x138>)
 800b2b8:	3506      	adds	r5, #6
 800b2ba:	4628      	mov	r0, r5
 800b2bc:	4935      	ldr	r1, [pc, #212]	; (800b394 <HttpDaemon::HandleGet()+0x13c>)
 800b2be:	6023      	str	r3, [r4, #0]
 800b2c0:	f7ff fe69 	bl	800af96 <strcmp>
 800b2c4:	b9a8      	cbnz	r0, 800b2f2 <HttpDaemon::HandleGet()+0x9a>
 800b2c6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b2ca:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b2ce:	f000 f9d9 	bl	800b684 <remoteconfig::json_get_list(char*, unsigned short)>
 800b2d2:	e7d5      	b.n	800b280 <HttpDaemon::HandleGet()+0x28>
 800b2d4:	4621      	mov	r1, r4
 800b2d6:	4b30      	ldr	r3, [pc, #192]	; (800b398 <HttpDaemon::HandleGet()+0x140>)
 800b2d8:	4830      	ldr	r0, [pc, #192]	; (800b39c <HttpDaemon::HandleGet()+0x144>)
 800b2da:	f841 3b22 	str.w	r3, [r1], #34
 800b2de:	e7cd      	b.n	800b27c <HttpDaemon::HandleGet()+0x24>
 800b2e0:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b2e4:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b2e8:	4286      	cmp	r6, r0
 800b2ea:	d0e2      	beq.n	800b2b2 <HttpDaemon::HandleGet()+0x5a>
 800b2ec:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b2f0:	e7cb      	b.n	800b28a <HttpDaemon::HandleGet()+0x32>
 800b2f2:	4628      	mov	r0, r5
 800b2f4:	492a      	ldr	r1, [pc, #168]	; (800b3a0 <HttpDaemon::HandleGet()+0x148>)
 800b2f6:	f7ff fe4e 	bl	800af96 <strcmp>
 800b2fa:	b930      	cbnz	r0, 800b30a <HttpDaemon::HandleGet()+0xb2>
 800b2fc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b300:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b304:	f000 f9f2 	bl	800b6ec <remoteconfig::json_get_version(char*, unsigned short)>
 800b308:	e7ba      	b.n	800b280 <HttpDaemon::HandleGet()+0x28>
 800b30a:	4628      	mov	r0, r5
 800b30c:	4925      	ldr	r1, [pc, #148]	; (800b3a4 <HttpDaemon::HandleGet()+0x14c>)
 800b30e:	f7ff fe42 	bl	800af96 <strcmp>
 800b312:	b958      	cbnz	r0, 800b32c <HttpDaemon::HandleGet()+0xd4>
 800b314:	4b24      	ldr	r3, [pc, #144]	; (800b3a8 <HttpDaemon::HandleGet()+0x150>)
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800b31c:	b31b      	cbz	r3, 800b366 <HttpDaemon::HandleGet()+0x10e>
 800b31e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b322:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b326:	f000 f9fd 	bl	800b724 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b32a:	e7a9      	b.n	800b280 <HttpDaemon::HandleGet()+0x28>
 800b32c:	4628      	mov	r0, r5
 800b32e:	491f      	ldr	r1, [pc, #124]	; (800b3ac <HttpDaemon::HandleGet()+0x154>)
 800b330:	f7ff fe31 	bl	800af96 <strcmp>
 800b334:	b930      	cbnz	r0, 800b344 <HttpDaemon::HandleGet()+0xec>
 800b336:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b33a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b33e:	f000 fa01 	bl	800b744 <remoteconfig::json_get_display(char*, unsigned short)>
 800b342:	e79d      	b.n	800b280 <HttpDaemon::HandleGet()+0x28>
 800b344:	4628      	mov	r0, r5
 800b346:	491a      	ldr	r1, [pc, #104]	; (800b3b0 <HttpDaemon::HandleGet()+0x158>)
 800b348:	f7ff fe25 	bl	800af96 <strcmp>
 800b34c:	b930      	cbnz	r0, 800b35c <HttpDaemon::HandleGet()+0x104>
 800b34e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b352:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b356:	f000 fa05 	bl	800b764 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b35a:	e791      	b.n	800b280 <HttpDaemon::HandleGet()+0x28>
 800b35c:	4620      	mov	r0, r4
 800b35e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b362:	f7ff bf37 	b.w	800b1d4 <HttpDaemon::HandleGetTxt()>
 800b366:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b36a:	e78e      	b.n	800b28a <HttpDaemon::HandleGet()+0x32>
 800b36c:	08012518 	stmdaeq	r1, {r3, r4, r8, sl, sp}
 800b370:	080124f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, sp}
 800b374:	08012704 	stmdaeq	r1, {r2, r8, r9, sl, sp}
 800b378:	080124f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp}
 800b37c:	080124fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, sp}
 800b380:	08012724 	stmdaeq	r1, {r2, r5, r8, r9, sl, sp}
 800b384:	080124fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, sp}
 800b388:	08012509 	stmdaeq	r1, {r0, r3, r8, sl, sp}
 800b38c:	08012513 	stmdaeq	r1, {r0, r1, r4, r8, sl, sp}
 800b390:	08012764 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, sp}
 800b394:	0801251a 	stmdaeq	r1, {r1, r3, r4, r8, sl, sp}
 800b398:	08012744 	stmdaeq	r1, {r2, r6, r8, r9, sl, sp}
 800b39c:	0801250a 	stmdaeq	r1, {r1, r3, r8, sl, sp}
 800b3a0:	0801251f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, sp}
 800b3a4:	08012527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, sp}
 800b3a8:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b3ac:	0801252e 	stmdaeq	r1, {r1, r2, r3, r5, r8, sl, sp}
 800b3b0:	08012536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, sp}

0800b3b4 <HttpDaemon::HandlePost(bool)>:
 800b3b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b3b6:	4604      	mov	r4, r0
 800b3b8:	2900      	cmp	r1, #0
 800b3ba:	f040 8091 	bne.w	800b4e0 <HttpDaemon::HandlePost(bool)+0x12c>
 800b3be:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b3c2:	2b00      	cmp	r3, #0
 800b3c4:	d05d      	beq.n	800b482 <HttpDaemon::HandlePost(bool)+0xce>
 800b3c6:	6845      	ldr	r5, [r0, #4]
 800b3c8:	4948      	ldr	r1, [pc, #288]	; (800b4ec <HttpDaemon::HandlePost(bool)+0x138>)
 800b3ca:	4628      	mov	r0, r5
 800b3cc:	f7ff fde3 	bl	800af96 <strcmp>
 800b3d0:	2800      	cmp	r0, #0
 800b3d2:	bf0c      	ite	eq
 800b3d4:	2301      	moveq	r3, #1
 800b3d6:	2300      	movne	r3, #0
 800b3d8:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b3dc:	d055      	beq.n	800b48a <HttpDaemon::HandlePost(bool)+0xd6>
 800b3de:	4628      	mov	r0, r5
 800b3e0:	4943      	ldr	r1, [pc, #268]	; (800b4f0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800b3e2:	f7ff fdd8 	bl	800af96 <strcmp>
 800b3e6:	2800      	cmp	r0, #0
 800b3e8:	d04f      	beq.n	800b48a <HttpDaemon::HandlePost(bool)+0xd6>
 800b3ea:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b3ee:	e04a      	b.n	800b486 <HttpDaemon::HandlePost(bool)+0xd2>
 800b3f0:	4940      	ldr	r1, [pc, #256]	; (800b4f4 <HttpDaemon::HandlePost(bool)+0x140>)
 800b3f2:	68a0      	ldr	r0, [r4, #8]
 800b3f4:	f10d 0207 	add.w	r2, sp, #7
 800b3f8:	f003 fbc0 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b3fc:	b9e8      	cbnz	r0, 800b43a <HttpDaemon::HandlePost(bool)+0x86>
 800b3fe:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b402:	4b3d      	ldr	r3, [pc, #244]	; (800b4f8 <HttpDaemon::HandlePost(bool)+0x144>)
 800b404:	fab6 f186 	clz	r1, r6
 800b408:	681d      	ldr	r5, [r3, #0]
 800b40a:	0949      	lsrs	r1, r1, #5
 800b40c:	69a8      	ldr	r0, [r5, #24]
 800b40e:	b138      	cbz	r0, 800b420 <HttpDaemon::HandlePost(bool)+0x6c>
 800b410:	6803      	ldr	r3, [r0, #0]
 800b412:	7429      	strb	r1, [r5, #16]
 800b414:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b416:	4798      	blx	r3
 800b418:	b116      	cbz	r6, 800b420 <HttpDaemon::HandlePost(bool)+0x6c>
 800b41a:	4b38      	ldr	r3, [pc, #224]	; (800b4fc <HttpDaemon::HandlePost(bool)+0x148>)
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	606b      	str	r3, [r5, #4]
 800b420:	4620      	mov	r0, r4
 800b422:	4b37      	ldr	r3, [pc, #220]	; (800b500 <HttpDaemon::HandlePost(bool)+0x14c>)
 800b424:	f240 519f 	movw	r1, #1439	; 0x59f
 800b428:	4a36      	ldr	r2, [pc, #216]	; (800b504 <HttpDaemon::HandlePost(bool)+0x150>)
 800b42a:	f840 3b22 	str.w	r3, [r0], #34
 800b42e:	f004 fb3d 	bl	800faac <snprintf>
 800b432:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b436:	20c8      	movs	r0, #200	; 0xc8
 800b438:	e025      	b.n	800b486 <HttpDaemon::HandlePost(bool)+0xd2>
 800b43a:	4933      	ldr	r1, [pc, #204]	; (800b508 <HttpDaemon::HandlePost(bool)+0x154>)
 800b43c:	68a0      	ldr	r0, [r4, #8]
 800b43e:	f10d 0207 	add.w	r2, sp, #7
 800b442:	f003 fb9b 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b446:	b9e0      	cbnz	r0, 800b482 <HttpDaemon::HandlePost(bool)+0xce>
 800b448:	4b30      	ldr	r3, [pc, #192]	; (800b50c <HttpDaemon::HandlePost(bool)+0x158>)
 800b44a:	6818      	ldr	r0, [r3, #0]
 800b44c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b450:	b11b      	cbz	r3, 800b45a <HttpDaemon::HandlePost(bool)+0xa6>
 800b452:	2104      	movs	r1, #4
 800b454:	f003 ff2c 	bl	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 800b458:	e7e2      	b.n	800b420 <HttpDaemon::HandlePost(bool)+0x6c>
 800b45a:	2102      	movs	r1, #2
 800b45c:	e7fa      	b.n	800b454 <HttpDaemon::HandlePost(bool)+0xa0>
 800b45e:	4b2c      	ldr	r3, [pc, #176]	; (800b510 <HttpDaemon::HandlePost(bool)+0x15c>)
 800b460:	2001      	movs	r0, #1
 800b462:	781d      	ldrb	r5, [r3, #0]
 800b464:	f7ff fdbe 	bl	800afe4 <PropertiesConfig::EnableJSON(bool)>
 800b468:	4b2a      	ldr	r3, [pc, #168]	; (800b514 <HttpDaemon::HandlePost(bool)+0x160>)
 800b46a:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800b46e:	6818      	ldr	r0, [r3, #0]
 800b470:	68a1      	ldr	r1, [r4, #8]
 800b472:	f005 0501 	and.w	r5, r5, #1
 800b476:	f7ff fa11 	bl	800a89c <RemoteConfig::HandleSet(void*, unsigned int)>
 800b47a:	4628      	mov	r0, r5
 800b47c:	f7ff fdb2 	bl	800afe4 <PropertiesConfig::EnableJSON(bool)>
 800b480:	e7ce      	b.n	800b420 <HttpDaemon::HandlePost(bool)+0x6c>
 800b482:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b486:	b002      	add	sp, #8
 800b488:	bd70      	pop	{r4, r5, r6, pc}
 800b48a:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800b48e:	6962      	ldr	r2, [r4, #20]
 800b490:	429a      	cmp	r2, r3
 800b492:	dbd0      	blt.n	800b436 <HttpDaemon::HandlePost(bool)+0x82>
 800b494:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b498:	2b00      	cmp	r3, #0
 800b49a:	d0cc      	beq.n	800b436 <HttpDaemon::HandlePost(bool)+0x82>
 800b49c:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b4a0:	2b00      	cmp	r3, #0
 800b4a2:	d0dc      	beq.n	800b45e <HttpDaemon::HandlePost(bool)+0xaa>
 800b4a4:	2201      	movs	r2, #1
 800b4a6:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800b4aa:	68a0      	ldr	r0, [r4, #8]
 800b4ac:	f003 f964 	bl	800e778 <properties::convert_json_file(char*, unsigned short, bool)>
 800b4b0:	2800      	cmp	r0, #0
 800b4b2:	dde6      	ble.n	800b482 <HttpDaemon::HandlePost(bool)+0xce>
 800b4b4:	4918      	ldr	r1, [pc, #96]	; (800b518 <HttpDaemon::HandlePost(bool)+0x164>)
 800b4b6:	68a0      	ldr	r0, [r4, #8]
 800b4b8:	f10d 0207 	add.w	r2, sp, #7
 800b4bc:	f003 fb5e 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b4c0:	2800      	cmp	r0, #0
 800b4c2:	d195      	bne.n	800b3f0 <HttpDaemon::HandlePost(bool)+0x3c>
 800b4c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b4c8:	2b00      	cmp	r3, #0
 800b4ca:	d0a9      	beq.n	800b420 <HttpDaemon::HandlePost(bool)+0x6c>
 800b4cc:	4b11      	ldr	r3, [pc, #68]	; (800b514 <HttpDaemon::HandlePost(bool)+0x160>)
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800b4d4:	2b00      	cmp	r3, #0
 800b4d6:	d0d4      	beq.n	800b482 <HttpDaemon::HandlePost(bool)+0xce>
 800b4d8:	4b10      	ldr	r3, [pc, #64]	; (800b51c <HttpDaemon::HandlePost(bool)+0x168>)
 800b4da:	6818      	ldr	r0, [r3, #0]
 800b4dc:	f003 ff8c 	bl	800f3f8 <Hardware::Reboot()>
 800b4e0:	68c3      	ldr	r3, [r0, #12]
 800b4e2:	6083      	str	r3, [r0, #8]
 800b4e4:	6943      	ldr	r3, [r0, #20]
 800b4e6:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800b4ea:	e7d7      	b.n	800b49c <HttpDaemon::HandlePost(bool)+0xe8>
 800b4ec:	08012540 	stmdaeq	r1, {r6, r8, sl, sp}
 800b4f0:	080124dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, sp}
 800b4f4:	0801252e 	stmdaeq	r1, {r1, r2, r3, r5, r8, sl, sp}
 800b4f8:	20009ad0 	ldrdcs	r9, [r0], -r0
 800b4fc:	20009bdc 	ldrdcs	r9, [r0], -ip
 800b500:	08012704 	stmdaeq	r1, {r2, r8, r9, sl, sp}
 800b504:	0801255d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, sp}
 800b508:	08012554 	stmdaeq	r1, {r2, r4, r6, r8, sl, sp}
 800b50c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b510:	20009acc 	andcs	r9, r0, ip, asr #21
 800b514:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b518:	0801254d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, sp}
 800b51c:	20009bc0 	andcs	r9, r0, r0, asr #23

0800b520 <HttpDaemon::Run()>:
 800b520:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b522:	4e4a      	ldr	r6, [pc, #296]	; (800b64c <HttpDaemon::Run()+0x12c>)
 800b524:	4604      	mov	r4, r0
 800b526:	6901      	ldr	r1, [r0, #16]
 800b528:	f100 020c 	add.w	r2, r0, #12
 800b52c:	b085      	sub	sp, #20
 800b52e:	6830      	ldr	r0, [r6, #0]
 800b530:	f001 ff65 	bl	800d3fe <Network::TcpRead(int, unsigned char const**)>
 800b534:	6160      	str	r0, [r4, #20]
 800b536:	2800      	cmp	r0, #0
 800b538:	d061      	beq.n	800b5fe <HttpDaemon::Run()+0xde>
 800b53a:	69a3      	ldr	r3, [r4, #24]
 800b53c:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b540:	d15f      	bne.n	800b602 <HttpDaemon::Run()+0xe2>
 800b542:	4620      	mov	r0, r4
 800b544:	f7ff fe0e 	bl	800b164 <HttpDaemon::ParseRequest()>
 800b548:	28c8      	cmp	r0, #200	; 0xc8
 800b54a:	61a0      	str	r0, [r4, #24]
 800b54c:	d106      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b54e:	69e3      	ldr	r3, [r4, #28]
 800b550:	2b00      	cmp	r3, #0
 800b552:	d147      	bne.n	800b5e4 <HttpDaemon::Run()+0xc4>
 800b554:	4620      	mov	r0, r4
 800b556:	f7ff fe7f 	bl	800b258 <HttpDaemon::HandleGet()>
 800b55a:	61a0      	str	r0, [r4, #24]
 800b55c:	69a3      	ldr	r3, [r4, #24]
 800b55e:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800b562:	2bc8      	cmp	r3, #200	; 0xc8
 800b564:	d06f      	beq.n	800b646 <HttpDaemon::Run()+0x126>
 800b566:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b56a:	d062      	beq.n	800b632 <HttpDaemon::Run()+0x112>
 800b56c:	dc52      	bgt.n	800b614 <HttpDaemon::Run()+0xf4>
 800b56e:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b572:	d060      	beq.n	800b636 <HttpDaemon::Run()+0x116>
 800b574:	f240 129d 	movw	r2, #413	; 0x19d
 800b578:	4293      	cmp	r3, r2
 800b57a:	d05e      	beq.n	800b63a <HttpDaemon::Run()+0x11a>
 800b57c:	4d34      	ldr	r5, [pc, #208]	; (800b650 <HttpDaemon::Run()+0x130>)
 800b57e:	4a35      	ldr	r2, [pc, #212]	; (800b654 <HttpDaemon::Run()+0x134>)
 800b580:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b584:	bf18      	it	ne
 800b586:	4615      	movne	r5, r2
 800b588:	4a33      	ldr	r2, [pc, #204]	; (800b658 <HttpDaemon::Run()+0x138>)
 800b58a:	f240 519f 	movw	r1, #1439	; 0x59f
 800b58e:	6022      	str	r2, [r4, #0]
 800b590:	4638      	mov	r0, r7
 800b592:	e9cd 5500 	strd	r5, r5, [sp]
 800b596:	4a31      	ldr	r2, [pc, #196]	; (800b65c <HttpDaemon::Run()+0x13c>)
 800b598:	f004 fa88 	bl	800faac <snprintf>
 800b59c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b5a0:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b5a4:	f240 519f 	movw	r1, #1439	; 0x59f
 800b5a8:	9303      	str	r3, [sp, #12]
 800b5aa:	6823      	ldr	r3, [r4, #0]
 800b5ac:	4a2c      	ldr	r2, [pc, #176]	; (800b660 <HttpDaemon::Run()+0x140>)
 800b5ae:	9302      	str	r3, [sp, #8]
 800b5b0:	4b2c      	ldr	r3, [pc, #176]	; (800b664 <HttpDaemon::Run()+0x144>)
 800b5b2:	68e0      	ldr	r0, [r4, #12]
 800b5b4:	e9cd 5300 	strd	r5, r3, [sp]
 800b5b8:	69a3      	ldr	r3, [r4, #24]
 800b5ba:	f004 fa77 	bl	800faac <snprintf>
 800b5be:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b5c2:	b283      	uxth	r3, r0
 800b5c4:	6830      	ldr	r0, [r6, #0]
 800b5c6:	f001 ff1e 	bl	800d406 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b5ca:	463a      	mov	r2, r7
 800b5cc:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b5d0:	6921      	ldr	r1, [r4, #16]
 800b5d2:	6830      	ldr	r0, [r6, #0]
 800b5d4:	f001 ff17 	bl	800d406 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b5d8:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b5dc:	2302      	movs	r3, #2
 800b5de:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b5e2:	e00c      	b.n	800b5fe <HttpDaemon::Run()+0xde>
 800b5e4:	2b01      	cmp	r3, #1
 800b5e6:	d1b9      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b5e8:	2100      	movs	r1, #0
 800b5ea:	4620      	mov	r0, r4
 800b5ec:	f7ff fee2 	bl	800b3b4 <HttpDaemon::HandlePost(bool)>
 800b5f0:	28c8      	cmp	r0, #200	; 0xc8
 800b5f2:	61a0      	str	r0, [r4, #24]
 800b5f4:	d1b2      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b5f6:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b5fa:	2b00      	cmp	r3, #0
 800b5fc:	d1ae      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b5fe:	b005      	add	sp, #20
 800b600:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b602:	2bc8      	cmp	r3, #200	; 0xc8
 800b604:	d1aa      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b606:	69e1      	ldr	r1, [r4, #28]
 800b608:	2901      	cmp	r1, #1
 800b60a:	d1a7      	bne.n	800b55c <HttpDaemon::Run()+0x3c>
 800b60c:	4620      	mov	r0, r4
 800b60e:	f7ff fed1 	bl	800b3b4 <HttpDaemon::HandlePost(bool)>
 800b612:	e7a2      	b.n	800b55a <HttpDaemon::Run()+0x3a>
 800b614:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b618:	4293      	cmp	r3, r2
 800b61a:	d010      	beq.n	800b63e <HttpDaemon::Run()+0x11e>
 800b61c:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b620:	4293      	cmp	r3, r2
 800b622:	d00e      	beq.n	800b642 <HttpDaemon::Run()+0x122>
 800b624:	4d10      	ldr	r5, [pc, #64]	; (800b668 <HttpDaemon::Run()+0x148>)
 800b626:	4a0b      	ldr	r2, [pc, #44]	; (800b654 <HttpDaemon::Run()+0x134>)
 800b628:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b62c:	bf18      	it	ne
 800b62e:	4615      	movne	r5, r2
 800b630:	e7aa      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b632:	4d0e      	ldr	r5, [pc, #56]	; (800b66c <HttpDaemon::Run()+0x14c>)
 800b634:	e7a8      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b636:	4d0e      	ldr	r5, [pc, #56]	; (800b670 <HttpDaemon::Run()+0x150>)
 800b638:	e7a6      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b63a:	4d0e      	ldr	r5, [pc, #56]	; (800b674 <HttpDaemon::Run()+0x154>)
 800b63c:	e7a4      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b63e:	4d0e      	ldr	r5, [pc, #56]	; (800b678 <HttpDaemon::Run()+0x158>)
 800b640:	e7a2      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b642:	4d0e      	ldr	r5, [pc, #56]	; (800b67c <HttpDaemon::Run()+0x15c>)
 800b644:	e7a0      	b.n	800b588 <HttpDaemon::Run()+0x68>
 800b646:	4d0e      	ldr	r5, [pc, #56]	; (800b680 <HttpDaemon::Run()+0x160>)
 800b648:	e7aa      	b.n	800b5a0 <HttpDaemon::Run()+0x80>
 800b64a:	bf00      	nop
 800b64c:	20009498 	mulcs	r0, r8, r4
 800b650:	080125b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, sp}
 800b654:	08012640 	stmdaeq	r1, {r6, r9, sl, sp}
 800b658:	08012704 	stmdaeq	r1, {r2, r8, r9, sl, sp}
 800b65c:	08012651 	stmdaeq	r1, {r0, r4, r6, r9, sl, sp}
 800b660:	080126ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, sp}
 800b664:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800b668:	080125fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, sp}
 800b66c:	080125e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, sp}
 800b670:	080125c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, sp}
 800b674:	080125cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sl, sp}
 800b678:	08012613 	stmdaeq	r1, {r0, r1, r4, r9, sl, sp}
 800b67c:	0801262a 	stmdaeq	r1, {r1, r3, r5, r9, sl, sp}
 800b680:	0801264e 	stmdaeq	r1, {r1, r2, r3, r6, r9, sl, sp}

0800b684 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b688:	4b14      	ldr	r3, [pc, #80]	; (800b6dc <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b68a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800b6e0 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800b68e:	681b      	ldr	r3, [r3, #0]
 800b690:	b088      	sub	sp, #32
 800b692:	4605      	mov	r5, r0
 800b694:	f8d8 0000 	ldr.w	r0, [r8]
 800b698:	691c      	ldr	r4, [r3, #16]
 800b69a:	460e      	mov	r6, r1
 800b69c:	f7fe ffd8 	bl	800a650 <RemoteConfig::GetStringNode() const>
 800b6a0:	4607      	mov	r7, r0
 800b6a2:	f8d8 0000 	ldr.w	r0, [r8]
 800b6a6:	f7fe ffdf 	bl	800a668 <RemoteConfig::GetStringOutput() const>
 800b6aa:	4b0e      	ldr	r3, [pc, #56]	; (800b6e4 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800b6ac:	4631      	mov	r1, r6
 800b6ae:	7a1a      	ldrb	r2, [r3, #8]
 800b6b0:	3309      	adds	r3, #9
 800b6b2:	9303      	str	r3, [sp, #12]
 800b6b4:	0e23      	lsrs	r3, r4, #24
 800b6b6:	9302      	str	r3, [sp, #8]
 800b6b8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b6bc:	9301      	str	r3, [sp, #4]
 800b6be:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b6c2:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b6c6:	9300      	str	r3, [sp, #0]
 800b6c8:	4628      	mov	r0, r5
 800b6ca:	4a07      	ldr	r2, [pc, #28]	; (800b6e8 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800b6cc:	9704      	str	r7, [sp, #16]
 800b6ce:	b2e3      	uxtb	r3, r4
 800b6d0:	f004 f9ec 	bl	800faac <snprintf>
 800b6d4:	b280      	uxth	r0, r0
 800b6d6:	b008      	add	sp, #32
 800b6d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6dc:	20009498 	mulcs	r0, r8, r4
 800b6e0:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b6e4:	20000b58 	andcs	r0, r0, r8, asr fp
 800b6e8:	080127de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, sp}

0800b6ec <remoteconfig::json_get_version(char*, unsigned short)>:
 800b6ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b6ee:	2208      	movs	r2, #8
 800b6f0:	4b09      	ldr	r3, [pc, #36]	; (800b718 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b6f2:	9204      	str	r2, [sp, #16]
 800b6f4:	f1a3 020b 	sub.w	r2, r3, #11
 800b6f8:	9203      	str	r2, [sp, #12]
 800b6fa:	220b      	movs	r2, #11
 800b6fc:	9202      	str	r2, [sp, #8]
 800b6fe:	4a07      	ldr	r2, [pc, #28]	; (800b71c <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b700:	9305      	str	r3, [sp, #20]
 800b702:	3b0e      	subs	r3, #14
 800b704:	9201      	str	r2, [sp, #4]
 800b706:	9300      	str	r3, [sp, #0]
 800b708:	4a05      	ldr	r2, [pc, #20]	; (800b720 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b70a:	2303      	movs	r3, #3
 800b70c:	f004 f9ce 	bl	800faac <snprintf>
 800b710:	b280      	uxth	r0, r0
 800b712:	b007      	add	sp, #28
 800b714:	f85d fb04 	ldr.w	pc, [sp], #4
 800b718:	20009b6e 	andcs	r9, r0, lr, ror #22
 800b71c:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800b720:	0801283d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, sp}

0800b724 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b724:	b508      	push	{r3, lr}
 800b726:	4b05      	ldr	r3, [pc, #20]	; (800b73c <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b728:	681a      	ldr	r2, [r3, #0]
 800b72a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b72e:	fbb2 f3f3 	udiv	r3, r2, r3
 800b732:	4a03      	ldr	r2, [pc, #12]	; (800b740 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b734:	f004 f9ba 	bl	800faac <snprintf>
 800b738:	b280      	uxth	r0, r0
 800b73a:	bd08      	pop	{r3, pc}
 800b73c:	20009bdc 	ldrdcs	r9, [r0], -ip
 800b740:	08012883 	stmdaeq	r1, {r0, r1, r7, fp, sp}

0800b744 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b744:	b508      	push	{r3, lr}
 800b746:	4b05      	ldr	r3, [pc, #20]	; (800b75c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b748:	4a05      	ldr	r2, [pc, #20]	; (800b760 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b74a:	681b      	ldr	r3, [r3, #0]
 800b74c:	7c1b      	ldrb	r3, [r3, #16]
 800b74e:	f083 0301 	eor.w	r3, r3, #1
 800b752:	f004 f9ab 	bl	800faac <snprintf>
 800b756:	b280      	uxth	r0, r0
 800b758:	bd08      	pop	{r3, pc}
 800b75a:	bf00      	nop
 800b75c:	20009ad0 	ldrdcs	r9, [r0], -r0
 800b760:	08012892 	stmdaeq	r1, {r1, r4, r7, fp, sp}

0800b764 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800b764:	b508      	push	{r3, lr}
 800b766:	4a02      	ldr	r2, [pc, #8]	; (800b770 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800b768:	f004 f9a0 	bl	800faac <snprintf>
 800b76c:	b280      	uxth	r0, r0
 800b76e:	bd08      	pop	{r3, pc}
 800b770:	080128a1 	stmdaeq	r1, {r0, r5, r7, fp, sp}

0800b774 <get_file_content(char const*, char*)>:
 800b774:	2300      	movs	r3, #0
 800b776:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b778:	4a18      	ldr	r2, [pc, #96]	; (800b7dc <get_file_content(char const*, char*)+0x68>)
 800b77a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800b77e:	1e47      	subs	r7, r0, #1
 800b780:	1e6e      	subs	r6, r5, #1
 800b782:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b786:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800b78a:	4564      	cmp	r4, ip
 800b78c:	d00b      	beq.n	800b7a6 <get_file_content(char const*, char*)+0x32>
 800b78e:	3301      	adds	r3, #1
 800b790:	2b03      	cmp	r3, #3
 800b792:	d1f2      	bne.n	800b77a <get_file_content(char const*, char*)+0x6>
 800b794:	2333      	movs	r3, #51	; 0x33
 800b796:	4a12      	ldr	r2, [pc, #72]	; (800b7e0 <get_file_content(char const*, char*)+0x6c>)
 800b798:	4912      	ldr	r1, [pc, #72]	; (800b7e4 <get_file_content(char const*, char*)+0x70>)
 800b79a:	4813      	ldr	r0, [pc, #76]	; (800b7e8 <get_file_content(char const*, char*)+0x74>)
 800b79c:	f004 f95e 	bl	800fa5c <printf>
 800b7a0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800b7a4:	e016      	b.n	800b7d4 <get_file_content(char const*, char*)+0x60>
 800b7a6:	2c00      	cmp	r4, #0
 800b7a8:	d1eb      	bne.n	800b782 <get_file_content(char const*, char*)+0xe>
 800b7aa:	460c      	mov	r4, r1
 800b7ac:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800b7b0:	6853      	ldr	r3, [r2, #4]
 800b7b2:	3b01      	subs	r3, #1
 800b7b4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800b7b8:	f804 2b01 	strb.w	r2, [r4], #1
 800b7bc:	2a00      	cmp	r2, #0
 800b7be:	d1f9      	bne.n	800b7b4 <get_file_content(char const*, char*)+0x40>
 800b7c0:	1a64      	subs	r4, r4, r1
 800b7c2:	3c01      	subs	r4, #1
 800b7c4:	232e      	movs	r3, #46	; 0x2e
 800b7c6:	e9cd 5400 	strd	r5, r4, [sp]
 800b7ca:	4a06      	ldr	r2, [pc, #24]	; (800b7e4 <get_file_content(char const*, char*)+0x70>)
 800b7cc:	4904      	ldr	r1, [pc, #16]	; (800b7e0 <get_file_content(char const*, char*)+0x6c>)
 800b7ce:	4807      	ldr	r0, [pc, #28]	; (800b7ec <get_file_content(char const*, char*)+0x78>)
 800b7d0:	f004 f944 	bl	800fa5c <printf>
 800b7d4:	4620      	mov	r0, r4
 800b7d6:	b003      	add	sp, #12
 800b7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7da:	bf00      	nop
 800b7dc:	08012c40 	stmdaeq	r1, {r6, sl, fp, sp}
 800b7e0:	08012959 	stmdaeq	r1, {r0, r3, r4, r6, r8, fp, sp}
 800b7e4:	0801293a 	stmdaeq	r1, {r1, r3, r4, r5, r8, fp, sp}
 800b7e8:	08012986 	stmdaeq	r1, {r1, r2, r7, r8, fp, sp}
 800b7ec:	0801296a 	stmdaeq	r1, {r1, r3, r5, r6, r8, fp, sp}

0800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800b7f0:	2300      	movs	r3, #0
 800b7f2:	2020      	movs	r0, #32
 800b7f4:	b510      	push	{r4, lr}
 800b7f6:	4a04      	ldr	r2, [pc, #16]	; (800b808 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800b7f8:	428b      	cmp	r3, r1
 800b7fa:	d100      	bne.n	800b7fe <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800b7fc:	bd10      	pop	{r4, pc}
 800b7fe:	f852 4b04 	ldr.w	r4, [r2], #4
 800b802:	3301      	adds	r3, #1
 800b804:	4420      	add	r0, r4
 800b806:	e7f7      	b.n	800b7f8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800b808:	08013184 	stmdaeq	r1, {r2, r7, r8, ip, sp}

0800b80c <SpiFlashStore::Init()>:
 800b80c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b810:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800b928 <SpiFlashStore::Init()+0x11c>
 800b814:	4607      	mov	r7, r0
 800b816:	b085      	sub	sp, #20
 800b818:	f8d8 0000 	ldr.w	r0, [r8]
 800b81c:	f000 fb2a 	bl	800be74 <FlashRom::GetSectorSize() const>
 800b820:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800b824:	4605      	mov	r5, r0
 800b826:	d17d      	bne.n	800b924 <SpiFlashStore::Init()+0x118>
 800b828:	f8d8 0000 	ldr.w	r0, [r8]
 800b82c:	f000 fb1a 	bl	800be64 <FlashRom::GetSize() const>
 800b830:	4b3e      	ldr	r3, [pc, #248]	; (800b92c <SpiFlashStore::Init()+0x120>)
 800b832:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800b836:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800b83a:	6019      	str	r1, [r3, #0]
 800b83c:	2e00      	cmp	r6, #0
 800b83e:	d171      	bne.n	800b924 <SpiFlashStore::Init()+0x118>
 800b840:	4c3b      	ldr	r4, [pc, #236]	; (800b930 <SpiFlashStore::Init()+0x124>)
 800b842:	ab03      	add	r3, sp, #12
 800b844:	9300      	str	r3, [sp, #0]
 800b846:	462a      	mov	r2, r5
 800b848:	4623      	mov	r3, r4
 800b84a:	f8d8 0000 	ldr.w	r0, [r8]
 800b84e:	f000 fb14 	bl	800be7a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800b852:	7823      	ldrb	r3, [r4, #0]
 800b854:	2b41      	cmp	r3, #65	; 0x41
 800b856:	bf1c      	itt	ne
 800b858:	2341      	movne	r3, #65	; 0x41
 800b85a:	7023      	strbne	r3, [r4, #0]
 800b85c:	7863      	ldrb	r3, [r4, #1]
 800b85e:	bf14      	ite	ne
 800b860:	4635      	movne	r5, r6
 800b862:	2501      	moveq	r5, #1
 800b864:	2b76      	cmp	r3, #118	; 0x76
 800b866:	bf1c      	itt	ne
 800b868:	2376      	movne	r3, #118	; 0x76
 800b86a:	7063      	strbne	r3, [r4, #1]
 800b86c:	78a3      	ldrb	r3, [r4, #2]
 800b86e:	bf18      	it	ne
 800b870:	2500      	movne	r5, #0
 800b872:	2b56      	cmp	r3, #86	; 0x56
 800b874:	bf1c      	itt	ne
 800b876:	2356      	movne	r3, #86	; 0x56
 800b878:	70a3      	strbne	r3, [r4, #2]
 800b87a:	78e3      	ldrb	r3, [r4, #3]
 800b87c:	bf18      	it	ne
 800b87e:	2500      	movne	r5, #0
 800b880:	2b10      	cmp	r3, #16
 800b882:	d022      	beq.n	800b8ca <SpiFlashStore::Init()+0xbe>
 800b884:	2310      	movs	r3, #16
 800b886:	70e3      	strb	r3, [r4, #3]
 800b888:	2201      	movs	r2, #1
 800b88a:	2500      	movs	r5, #0
 800b88c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800b890:	4b28      	ldr	r3, [pc, #160]	; (800b934 <SpiFlashStore::Init()+0x128>)
 800b892:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800b938 <SpiFlashStore::Init()+0x12c>
 800b896:	701a      	strb	r2, [r3, #0]
 800b898:	4631      	mov	r1, r6
 800b89a:	4638      	mov	r0, r7
 800b89c:	f7ff ffa8 	bl	800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b8a0:	1823      	adds	r3, r4, r0
 800b8a2:	5425      	strb	r5, [r4, r0]
 800b8a4:	705d      	strb	r5, [r3, #1]
 800b8a6:	709d      	strb	r5, [r3, #2]
 800b8a8:	70dd      	strb	r5, [r3, #3]
 800b8aa:	f858 3b04 	ldr.w	r3, [r8], #4
 800b8ae:	1d02      	adds	r2, r0, #4
 800b8b0:	4403      	add	r3, r0
 800b8b2:	429a      	cmp	r2, r3
 800b8b4:	d332      	bcc.n	800b91c <SpiFlashStore::Init()+0x110>
 800b8b6:	3601      	adds	r6, #1
 800b8b8:	2e1c      	cmp	r6, #28
 800b8ba:	d1ed      	bne.n	800b898 <SpiFlashStore::Init()+0x8c>
 800b8bc:	2501      	movs	r5, #1
 800b8be:	4b1f      	ldr	r3, [pc, #124]	; (800b93c <SpiFlashStore::Init()+0x130>)
 800b8c0:	601d      	str	r5, [r3, #0]
 800b8c2:	4628      	mov	r0, r5
 800b8c4:	b005      	add	sp, #20
 800b8c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8ca:	2d00      	cmp	r5, #0
 800b8cc:	d0dc      	beq.n	800b888 <SpiFlashStore::Init()+0x7c>
 800b8ce:	f04f 0900 	mov.w	r9, #0
 800b8d2:	46c8      	mov	r8, r9
 800b8d4:	4631      	mov	r1, r6
 800b8d6:	4638      	mov	r0, r7
 800b8d8:	f7ff ff8a 	bl	800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b8dc:	5c23      	ldrb	r3, [r4, r0]
 800b8de:	2bff      	cmp	r3, #255	; 0xff
 800b8e0:	d112      	bne.n	800b908 <SpiFlashStore::Init()+0xfc>
 800b8e2:	1823      	adds	r3, r4, r0
 800b8e4:	785a      	ldrb	r2, [r3, #1]
 800b8e6:	2aff      	cmp	r2, #255	; 0xff
 800b8e8:	d10e      	bne.n	800b908 <SpiFlashStore::Init()+0xfc>
 800b8ea:	789a      	ldrb	r2, [r3, #2]
 800b8ec:	2aff      	cmp	r2, #255	; 0xff
 800b8ee:	d10b      	bne.n	800b908 <SpiFlashStore::Init()+0xfc>
 800b8f0:	78da      	ldrb	r2, [r3, #3]
 800b8f2:	2aff      	cmp	r2, #255	; 0xff
 800b8f4:	d108      	bne.n	800b908 <SpiFlashStore::Init()+0xfc>
 800b8f6:	46a9      	mov	r9, r5
 800b8f8:	f804 8000 	strb.w	r8, [r4, r0]
 800b8fc:	f883 8001 	strb.w	r8, [r3, #1]
 800b900:	f883 8002 	strb.w	r8, [r3, #2]
 800b904:	f883 8003 	strb.w	r8, [r3, #3]
 800b908:	3601      	adds	r6, #1
 800b90a:	2e1c      	cmp	r6, #28
 800b90c:	d1e2      	bne.n	800b8d4 <SpiFlashStore::Init()+0xc8>
 800b90e:	f1b9 0f00 	cmp.w	r9, #0
 800b912:	d0d6      	beq.n	800b8c2 <SpiFlashStore::Init()+0xb6>
 800b914:	2201      	movs	r2, #1
 800b916:	4b09      	ldr	r3, [pc, #36]	; (800b93c <SpiFlashStore::Init()+0x130>)
 800b918:	601a      	str	r2, [r3, #0]
 800b91a:	e7d2      	b.n	800b8c2 <SpiFlashStore::Init()+0xb6>
 800b91c:	f804 9002 	strb.w	r9, [r4, r2]
 800b920:	3201      	adds	r2, #1
 800b922:	e7c6      	b.n	800b8b2 <SpiFlashStore::Init()+0xa6>
 800b924:	2500      	movs	r5, #0
 800b926:	e7cc      	b.n	800b8c2 <SpiFlashStore::Init()+0xb6>
 800b928:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b92c:	20001b84 	andcs	r1, r0, r4, lsl #23
 800b930:	20000b84 	andcs	r0, r0, r4, lsl #23
 800b934:	20001b98 	mulcs	r0, r8, fp
 800b938:	08013184 	stmdaeq	r1, {r2, r7, r8, ip, sp}
 800b93c:	20001b90 	mulcs	r0, r0, fp

0800b940 <SpiFlashStore::SpiFlashStore()>:
 800b940:	b538      	push	{r3, r4, r5, lr}
 800b942:	4b0d      	ldr	r3, [pc, #52]	; (800b978 <SpiFlashStore::SpiFlashStore()+0x38>)
 800b944:	4604      	mov	r4, r0
 800b946:	6018      	str	r0, [r3, #0]
 800b948:	4b0c      	ldr	r3, [pc, #48]	; (800b97c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800b94a:	4d0d      	ldr	r5, [pc, #52]	; (800b980 <SpiFlashStore::SpiFlashStore()+0x40>)
 800b94c:	681b      	ldr	r3, [r3, #0]
 800b94e:	781b      	ldrb	r3, [r3, #0]
 800b950:	b113      	cbz	r3, 800b958 <SpiFlashStore::SpiFlashStore()+0x18>
 800b952:	f7ff ff5b 	bl	800b80c <SpiFlashStore::Init()>
 800b956:	7028      	strb	r0, [r5, #0]
 800b958:	782b      	ldrb	r3, [r5, #0]
 800b95a:	b153      	cbz	r3, 800b972 <SpiFlashStore::SpiFlashStore()+0x32>
 800b95c:	2320      	movs	r3, #32
 800b95e:	2200      	movs	r2, #0
 800b960:	4908      	ldr	r1, [pc, #32]	; (800b984 <SpiFlashStore::SpiFlashStore()+0x44>)
 800b962:	f851 0b04 	ldr.w	r0, [r1], #4
 800b966:	3201      	adds	r2, #1
 800b968:	2a1c      	cmp	r2, #28
 800b96a:	4403      	add	r3, r0
 800b96c:	d1f9      	bne.n	800b962 <SpiFlashStore::SpiFlashStore()+0x22>
 800b96e:	4a06      	ldr	r2, [pc, #24]	; (800b988 <SpiFlashStore::SpiFlashStore()+0x48>)
 800b970:	6013      	str	r3, [r2, #0]
 800b972:	4620      	mov	r0, r4
 800b974:	bd38      	pop	{r3, r4, r5, pc}
 800b976:	bf00      	nop
 800b978:	20001b94 	mulcs	r0, r4, fp
 800b97c:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b980:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b984:	08013184 	stmdaeq	r1, {r2, r7, r8, ip, sp}
 800b988:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b98c <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800b98c:	b508      	push	{r3, lr}
 800b98e:	f7ff ff2f 	bl	800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b992:	2300      	movs	r3, #0
 800b994:	4904      	ldr	r1, [pc, #16]	; (800b9a8 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800b996:	1842      	adds	r2, r0, r1
 800b998:	540b      	strb	r3, [r1, r0]
 800b99a:	7053      	strb	r3, [r2, #1]
 800b99c:	7093      	strb	r3, [r2, #2]
 800b99e:	70d3      	strb	r3, [r2, #3]
 800b9a0:	2201      	movs	r2, #1
 800b9a2:	4b02      	ldr	r3, [pc, #8]	; (800b9ac <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800b9a4:	601a      	str	r2, [r3, #0]
 800b9a6:	bd08      	pop	{r3, pc}
 800b9a8:	20000b84 	andcs	r0, r0, r4, lsl #23
 800b9ac:	20001b90 	mulcs	r0, r0, fp

0800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800b9b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9b4:	461c      	mov	r4, r3
 800b9b6:	4b19      	ldr	r3, [pc, #100]	; (800ba1c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800b9b8:	4615      	mov	r5, r2
 800b9ba:	781f      	ldrb	r7, [r3, #0]
 800b9bc:	9e07      	ldr	r6, [sp, #28]
 800b9be:	b307      	cbz	r7, 800ba02 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b9c0:	f7ff ff16 	bl	800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b9c4:	f04f 0c00 	mov.w	ip, #0
 800b9c8:	4a15      	ldr	r2, [pc, #84]	; (800ba20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800b9ca:	1941      	adds	r1, r0, r5
 800b9cc:	1e63      	subs	r3, r4, #1
 800b9ce:	9c06      	ldr	r4, [sp, #24]
 800b9d0:	4411      	add	r1, r2
 800b9d2:	440c      	add	r4, r1
 800b9d4:	42a1      	cmp	r1, r4
 800b9d6:	d116      	bne.n	800ba06 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800b9d8:	f1bc 0f00 	cmp.w	ip, #0
 800b9dc:	d011      	beq.n	800ba02 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b9de:	4b11      	ldr	r3, [pc, #68]	; (800ba24 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800b9e0:	6819      	ldr	r1, [r3, #0]
 800b9e2:	b109      	cbz	r1, 800b9e8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800b9e4:	2906      	cmp	r1, #6
 800b9e6:	d101      	bne.n	800b9ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800b9e8:	2101      	movs	r1, #1
 800b9ea:	6019      	str	r1, [r3, #0]
 800b9ec:	4b0e      	ldr	r3, [pc, #56]	; (800ba28 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800b9ee:	6819      	ldr	r1, [r3, #0]
 800b9f0:	4b0e      	ldr	r3, [pc, #56]	; (800ba2c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800b9f2:	6019      	str	r1, [r3, #0]
 800b9f4:	b12d      	cbz	r5, 800ba02 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b9f6:	b126      	cbz	r6, 800ba02 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b9f8:	9b08      	ldr	r3, [sp, #32]
 800b9fa:	4418      	add	r0, r3
 800b9fc:	5813      	ldr	r3, [r2, r0]
 800b9fe:	4333      	orrs	r3, r6
 800ba00:	5013      	str	r3, [r2, r0]
 800ba02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba06:	f891 8000 	ldrb.w	r8, [r1]
 800ba0a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800ba0e:	3101      	adds	r1, #1
 800ba10:	45f0      	cmp	r8, lr
 800ba12:	bf1c      	itt	ne
 800ba14:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800ba18:	46bc      	movne	ip, r7
 800ba1a:	e7db      	b.n	800b9d4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800ba1c:	20001b88 	andcs	r1, r0, r8, lsl #23
 800ba20:	20000b84 	andcs	r0, r0, r4, lsl #23
 800ba24:	20001b90 	mulcs	r0, r0, fp
 800ba28:	20009bdc 	ldrdcs	r9, [r0], -ip
 800ba2c:	20000b80 	andcs	r0, r0, r0, lsl #23

0800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800ba30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ba34:	461d      	mov	r5, r3
 800ba36:	4b11      	ldr	r3, [pc, #68]	; (800ba7c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 800ba38:	4607      	mov	r7, r0
 800ba3a:	781b      	ldrb	r3, [r3, #0]
 800ba3c:	4614      	mov	r4, r2
 800ba3e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800ba42:	b1c3      	cbz	r3, 800ba76 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800ba44:	f7ff fed4 	bl	800b7f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ba48:	4a0d      	ldr	r2, [pc, #52]	; (800ba80 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 800ba4a:	eb00 0608 	add.w	r6, r0, r8
 800ba4e:	5990      	ldr	r0, [r2, r6]
 800ba50:	18b3      	adds	r3, r6, r2
 800ba52:	b140      	cbz	r0, 800ba66 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 800ba54:	3c01      	subs	r4, #1
 800ba56:	441d      	add	r5, r3
 800ba58:	429d      	cmp	r5, r3
 800ba5a:	d00c      	beq.n	800ba76 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800ba5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ba60:	f804 2f01 	strb.w	r2, [r4, #1]!
 800ba64:	e7f8      	b.n	800ba58 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 800ba66:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800ba6a:	4623      	mov	r3, r4
 800ba6c:	4642      	mov	r2, r8
 800ba6e:	4638      	mov	r0, r7
 800ba70:	9500      	str	r5, [sp, #0]
 800ba72:	f7ff ff9d 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ba76:	b004      	add	sp, #16
 800ba78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba7c:	20001b88 	andcs	r1, r0, r8, lsl #23
 800ba80:	20000b84 	andcs	r0, r0, r4, lsl #23

0800ba84 <SpiFlashStore::Flash()>:
 800ba84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ba86:	4c25      	ldr	r4, [pc, #148]	; (800bb1c <SpiFlashStore::Flash()+0x98>)
 800ba88:	6820      	ldr	r0, [r4, #0]
 800ba8a:	2800      	cmp	r0, #0
 800ba8c:	d043      	beq.n	800bb16 <SpiFlashStore::Flash()+0x92>
 800ba8e:	3801      	subs	r0, #1
 800ba90:	2805      	cmp	r0, #5
 800ba92:	d831      	bhi.n	800baf8 <SpiFlashStore::Flash()+0x74>
 800ba94:	e8df f000 	tbb	[pc, r0]
 800ba98:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800ba9c:	4b203025 	blmi	8817b38 <__exidx_end+0x803f80>
 800baa0:	681a      	ldr	r2, [r3, #0]
 800baa2:	4b20      	ldr	r3, [pc, #128]	; (800bb24 <SpiFlashStore::Flash()+0xa0>)
 800baa4:	601a      	str	r2, [r3, #0]
 800baa6:	2302      	movs	r3, #2
 800baa8:	6023      	str	r3, [r4, #0]
 800baaa:	2001      	movs	r0, #1
 800baac:	e033      	b.n	800bb16 <SpiFlashStore::Flash()+0x92>
 800baae:	4b1c      	ldr	r3, [pc, #112]	; (800bb20 <SpiFlashStore::Flash()+0x9c>)
 800bab0:	4a1c      	ldr	r2, [pc, #112]	; (800bb24 <SpiFlashStore::Flash()+0xa0>)
 800bab2:	681b      	ldr	r3, [r3, #0]
 800bab4:	6812      	ldr	r2, [r2, #0]
 800bab6:	1a9b      	subs	r3, r3, r2
 800bab8:	2b63      	cmp	r3, #99	; 0x63
 800baba:	d9f6      	bls.n	800baaa <SpiFlashStore::Flash()+0x26>
 800babc:	2303      	movs	r3, #3
 800babe:	e7f3      	b.n	800baa8 <SpiFlashStore::Flash()+0x24>
 800bac0:	4919      	ldr	r1, [pc, #100]	; (800bb28 <SpiFlashStore::Flash()+0xa4>)
 800bac2:	481a      	ldr	r0, [pc, #104]	; (800bb2c <SpiFlashStore::Flash()+0xa8>)
 800bac4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bac8:	6809      	ldr	r1, [r1, #0]
 800baca:	6800      	ldr	r0, [r0, #0]
 800bacc:	ab03      	add	r3, sp, #12
 800bace:	f000 f9e3 	bl	800be98 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bad2:	2800      	cmp	r0, #0
 800bad4:	d0e9      	beq.n	800baaa <SpiFlashStore::Flash()+0x26>
 800bad6:	4b12      	ldr	r3, [pc, #72]	; (800bb20 <SpiFlashStore::Flash()+0x9c>)
 800bad8:	681a      	ldr	r2, [r3, #0]
 800bada:	4b12      	ldr	r3, [pc, #72]	; (800bb24 <SpiFlashStore::Flash()+0xa0>)
 800badc:	601a      	str	r2, [r3, #0]
 800bade:	2305      	movs	r3, #5
 800bae0:	e7e2      	b.n	800baa8 <SpiFlashStore::Flash()+0x24>
 800bae2:	4b0f      	ldr	r3, [pc, #60]	; (800bb20 <SpiFlashStore::Flash()+0x9c>)
 800bae4:	4a0f      	ldr	r2, [pc, #60]	; (800bb24 <SpiFlashStore::Flash()+0xa0>)
 800bae6:	681b      	ldr	r3, [r3, #0]
 800bae8:	6812      	ldr	r2, [r2, #0]
 800baea:	1a9b      	subs	r3, r3, r2
 800baec:	2b63      	cmp	r3, #99	; 0x63
 800baee:	d9dc      	bls.n	800baaa <SpiFlashStore::Flash()+0x26>
 800baf0:	2304      	movs	r3, #4
 800baf2:	e7d9      	b.n	800baa8 <SpiFlashStore::Flash()+0x24>
 800baf4:	2306      	movs	r3, #6
 800baf6:	e7d7      	b.n	800baa8 <SpiFlashStore::Flash()+0x24>
 800baf8:	ab03      	add	r3, sp, #12
 800bafa:	4a0d      	ldr	r2, [pc, #52]	; (800bb30 <SpiFlashStore::Flash()+0xac>)
 800bafc:	490a      	ldr	r1, [pc, #40]	; (800bb28 <SpiFlashStore::Flash()+0xa4>)
 800bafe:	480b      	ldr	r0, [pc, #44]	; (800bb2c <SpiFlashStore::Flash()+0xa8>)
 800bb00:	9300      	str	r3, [sp, #0]
 800bb02:	6812      	ldr	r2, [r2, #0]
 800bb04:	4b0b      	ldr	r3, [pc, #44]	; (800bb34 <SpiFlashStore::Flash()+0xb0>)
 800bb06:	6809      	ldr	r1, [r1, #0]
 800bb08:	6800      	ldr	r0, [r0, #0]
 800bb0a:	f000 fa65 	bl	800bfd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bb0e:	2800      	cmp	r0, #0
 800bb10:	d0cb      	beq.n	800baaa <SpiFlashStore::Flash()+0x26>
 800bb12:	2000      	movs	r0, #0
 800bb14:	6020      	str	r0, [r4, #0]
 800bb16:	b004      	add	sp, #16
 800bb18:	bd10      	pop	{r4, pc}
 800bb1a:	bf00      	nop
 800bb1c:	20001b90 	mulcs	r0, r0, fp
 800bb20:	20009bdc 	ldrdcs	r9, [r0], -ip
 800bb24:	20000b80 	andcs	r0, r0, r0, lsl #23
 800bb28:	20001b84 	andcs	r1, r0, r4, lsl #23
 800bb2c:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800bb30:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800bb34:	20000b84 	andcs	r0, r0, r4, lsl #23

0800bb38 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bb38:	4770      	bx	lr
	...

0800bb3c <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800bb3c:	2300      	movs	r3, #0
 800bb3e:	b507      	push	{r0, r1, r2, lr}
 800bb40:	4805      	ldr	r0, [pc, #20]	; (800bb58 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800bb42:	9300      	str	r3, [sp, #0]
 800bb44:	460a      	mov	r2, r1
 800bb46:	2322      	movs	r3, #34	; 0x22
 800bb48:	210f      	movs	r1, #15
 800bb4a:	6800      	ldr	r0, [r0, #0]
 800bb4c:	f7ff ff70 	bl	800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bb50:	b003      	add	sp, #12
 800bb52:	f85d fb04 	ldr.w	pc, [sp], #4
 800bb56:	bf00      	nop
 800bb58:	20001b94 	mulcs	r0, r4, fp

0800bb5c <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800bb5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bb5e:	2200      	movs	r2, #0
 800bb60:	460b      	mov	r3, r1
 800bb62:	2122      	movs	r1, #34	; 0x22
 800bb64:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bb68:	4804      	ldr	r0, [pc, #16]	; (800bb7c <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800bb6a:	9100      	str	r1, [sp, #0]
 800bb6c:	6800      	ldr	r0, [r0, #0]
 800bb6e:	210f      	movs	r1, #15
 800bb70:	f7ff ff1e 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bb74:	b005      	add	sp, #20
 800bb76:	f85d fb04 	ldr.w	pc, [sp], #4
 800bb7a:	bf00      	nop
 800bb7c:	20001b94 	mulcs	r0, r4, fp

0800bb80 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bb80:	b510      	push	{r4, lr}
 800bb82:	4604      	mov	r4, r0
 800bb84:	f003 fc76 	bl	800f474 <operator delete(void*)>
 800bb88:	4620      	mov	r0, r4
 800bb8a:	bd10      	pop	{r4, pc}

0800bb8c <StoreDisplayUdf::StoreDisplayUdf()>:
 800bb8c:	4a02      	ldr	r2, [pc, #8]	; (800bb98 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800bb8e:	6002      	str	r2, [r0, #0]
 800bb90:	4a02      	ldr	r2, [pc, #8]	; (800bb9c <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800bb92:	6010      	str	r0, [r2, #0]
 800bb94:	4770      	bx	lr
 800bb96:	bf00      	nop
 800bb98:	080131fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip, sp}
 800bb9c:	20001b9c 	mulcs	r0, ip, fp

0800bba0 <StoreDmxSend::~StoreDmxSend()>:
 800bba0:	4770      	bx	lr
	...

0800bba4 <StoreDmxSend::Copy(TDmxParams*)>:
 800bba4:	2300      	movs	r3, #0
 800bba6:	b507      	push	{r0, r1, r2, lr}
 800bba8:	4805      	ldr	r0, [pc, #20]	; (800bbc0 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800bbaa:	9300      	str	r3, [sp, #0]
 800bbac:	460a      	mov	r2, r1
 800bbae:	230a      	movs	r3, #10
 800bbb0:	2102      	movs	r1, #2
 800bbb2:	6800      	ldr	r0, [r0, #0]
 800bbb4:	f7ff ff3c 	bl	800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bbb8:	b003      	add	sp, #12
 800bbba:	f85d fb04 	ldr.w	pc, [sp], #4
 800bbbe:	bf00      	nop
 800bbc0:	20001b94 	mulcs	r0, r4, fp

0800bbc4 <StoreDmxSend::Update(TDmxParams const*)>:
 800bbc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bbc6:	2200      	movs	r2, #0
 800bbc8:	460b      	mov	r3, r1
 800bbca:	210a      	movs	r1, #10
 800bbcc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bbd0:	4804      	ldr	r0, [pc, #16]	; (800bbe4 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800bbd2:	9100      	str	r1, [sp, #0]
 800bbd4:	6800      	ldr	r0, [r0, #0]
 800bbd6:	2102      	movs	r1, #2
 800bbd8:	f7ff feea 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bbdc:	b005      	add	sp, #20
 800bbde:	f85d fb04 	ldr.w	pc, [sp], #4
 800bbe2:	bf00      	nop
 800bbe4:	20001b94 	mulcs	r0, r4, fp

0800bbe8 <StoreDmxSend::~StoreDmxSend()>:
 800bbe8:	b510      	push	{r4, lr}
 800bbea:	4604      	mov	r4, r0
 800bbec:	f003 fc42 	bl	800f474 <operator delete(void*)>
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	bd10      	pop	{r4, pc}

0800bbf4 <StoreDmxSend::StoreDmxSend()>:
 800bbf4:	4a02      	ldr	r2, [pc, #8]	; (800bc00 <StoreDmxSend::StoreDmxSend()+0xc>)
 800bbf6:	6002      	str	r2, [r0, #0]
 800bbf8:	4a02      	ldr	r2, [pc, #8]	; (800bc04 <StoreDmxSend::StoreDmxSend()+0x10>)
 800bbfa:	6010      	str	r0, [r2, #0]
 800bbfc:	4770      	bx	lr
 800bbfe:	bf00      	nop
 800bc00:	08013214 	stmdaeq	r1, {r2, r4, r9, ip, sp}
 800bc04:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800bc08 <StoreE131::~StoreE131()>:
 800bc08:	4770      	bx	lr
	...

0800bc0c <StoreE131::Copy(e131params::Params*)>:
 800bc0c:	2300      	movs	r3, #0
 800bc0e:	b507      	push	{r0, r1, r2, lr}
 800bc10:	4805      	ldr	r0, [pc, #20]	; (800bc28 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800bc12:	9300      	str	r3, [sp, #0]
 800bc14:	460a      	mov	r2, r1
 800bc16:	231f      	movs	r3, #31
 800bc18:	2104      	movs	r1, #4
 800bc1a:	6800      	ldr	r0, [r0, #0]
 800bc1c:	f7ff ff08 	bl	800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bc20:	b003      	add	sp, #12
 800bc22:	f85d fb04 	ldr.w	pc, [sp], #4
 800bc26:	bf00      	nop
 800bc28:	20001b94 	mulcs	r0, r4, fp

0800bc2c <StoreE131::Update(e131params::Params const*)>:
 800bc2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc2e:	2200      	movs	r2, #0
 800bc30:	460b      	mov	r3, r1
 800bc32:	211f      	movs	r1, #31
 800bc34:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bc38:	4804      	ldr	r0, [pc, #16]	; (800bc4c <StoreE131::Update(e131params::Params const*)+0x20>)
 800bc3a:	9100      	str	r1, [sp, #0]
 800bc3c:	6800      	ldr	r0, [r0, #0]
 800bc3e:	2104      	movs	r1, #4
 800bc40:	f7ff feb6 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bc44:	b005      	add	sp, #20
 800bc46:	f85d fb04 	ldr.w	pc, [sp], #4
 800bc4a:	bf00      	nop
 800bc4c:	20001b94 	mulcs	r0, r4, fp

0800bc50 <StoreE131::~StoreE131()>:
 800bc50:	b510      	push	{r4, lr}
 800bc52:	4604      	mov	r4, r0
 800bc54:	f003 fc0e 	bl	800f474 <operator delete(void*)>
 800bc58:	4620      	mov	r0, r4
 800bc5a:	bd10      	pop	{r4, pc}

0800bc5c <StoreE131::StoreE131()>:
 800bc5c:	4a02      	ldr	r2, [pc, #8]	; (800bc68 <StoreE131::StoreE131()+0xc>)
 800bc5e:	6002      	str	r2, [r0, #0]
 800bc60:	4a02      	ldr	r2, [pc, #8]	; (800bc6c <StoreE131::StoreE131()+0x10>)
 800bc62:	6010      	str	r0, [r2, #0]
 800bc64:	4770      	bx	lr
 800bc66:	bf00      	nop
 800bc68:	0801322c 	stmdaeq	r1, {r2, r3, r5, r9, ip, sp}
 800bc6c:	20001ba4 	andcs	r1, r0, r4, lsr #23

0800bc70 <StoreNetwork::~StoreNetwork()>:
 800bc70:	4770      	bx	lr

0800bc72 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bc72:	3804      	subs	r0, #4
 800bc74:	4770      	bx	lr
	...

0800bc78 <StoreNetwork::Update(TNetworkParams const*)>:
 800bc78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc7a:	2200      	movs	r2, #0
 800bc7c:	460b      	mov	r3, r1
 800bc7e:	215e      	movs	r1, #94	; 0x5e
 800bc80:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bc84:	4804      	ldr	r0, [pc, #16]	; (800bc98 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800bc86:	9100      	str	r1, [sp, #0]
 800bc88:	6800      	ldr	r0, [r0, #0]
 800bc8a:	4611      	mov	r1, r2
 800bc8c:	f7ff fe90 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bc90:	b005      	add	sp, #20
 800bc92:	f85d fb04 	ldr.w	pc, [sp], #4
 800bc96:	bf00      	nop
 800bc98:	20001b94 	mulcs	r0, r4, fp

0800bc9c <StoreNetwork::SaveDhcp(bool)>:
 800bc9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc9e:	2301      	movs	r3, #1
 800bca0:	f88d 1017 	strb.w	r1, [sp, #23]
 800bca4:	2100      	movs	r1, #0
 800bca6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bcaa:	4805      	ldr	r0, [pc, #20]	; (800bcc0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800bcac:	9300      	str	r3, [sp, #0]
 800bcae:	2214      	movs	r2, #20
 800bcb0:	6800      	ldr	r0, [r0, #0]
 800bcb2:	f10d 0317 	add.w	r3, sp, #23
 800bcb6:	f7ff fe7b 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bcba:	b007      	add	sp, #28
 800bcbc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bcc0:	20001b94 	mulcs	r0, r4, fp

0800bcc4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800bcc4:	f1a0 0004 	sub.w	r0, r0, #4
 800bcc8:	e7e8      	b.n	800bc9c <StoreNetwork::SaveDhcp(bool)>
 800bcca:	bf00      	nop

0800bccc <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bccc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bcce:	2308      	movs	r3, #8
 800bcd0:	9105      	str	r1, [sp, #20]
 800bcd2:	2100      	movs	r1, #0
 800bcd4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bcd8:	2304      	movs	r3, #4
 800bcda:	4805      	ldr	r0, [pc, #20]	; (800bcf0 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800bcdc:	9300      	str	r3, [sp, #0]
 800bcde:	220c      	movs	r2, #12
 800bce0:	6800      	ldr	r0, [r0, #0]
 800bce2:	ab05      	add	r3, sp, #20
 800bce4:	f7ff fe64 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bce8:	b007      	add	sp, #28
 800bcea:	f85d fb04 	ldr.w	pc, [sp], #4
 800bcee:	bf00      	nop
 800bcf0:	20001b94 	mulcs	r0, r4, fp

0800bcf4 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bcf4:	f1a0 0004 	sub.w	r0, r0, #4
 800bcf8:	e7e8      	b.n	800bccc <StoreNetwork::SaveGatewayIp(unsigned int)>
 800bcfa:	bf00      	nop

0800bcfc <StoreNetwork::SaveNetMask(unsigned int)>:
 800bcfc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bcfe:	2304      	movs	r3, #4
 800bd00:	9105      	str	r1, [sp, #20]
 800bd02:	2100      	movs	r1, #0
 800bd04:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bd08:	4804      	ldr	r0, [pc, #16]	; (800bd1c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800bd0a:	9300      	str	r3, [sp, #0]
 800bd0c:	2208      	movs	r2, #8
 800bd0e:	6800      	ldr	r0, [r0, #0]
 800bd10:	ab05      	add	r3, sp, #20
 800bd12:	f7ff fe4d 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd16:	b007      	add	sp, #28
 800bd18:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd1c:	20001b94 	mulcs	r0, r4, fp

0800bd20 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800bd20:	f1a0 0004 	sub.w	r0, r0, #4
 800bd24:	e7ea      	b.n	800bcfc <StoreNetwork::SaveNetMask(unsigned int)>
 800bd26:	bf00      	nop

0800bd28 <StoreNetwork::SaveIp(unsigned int)>:
 800bd28:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bd2a:	2302      	movs	r3, #2
 800bd2c:	9105      	str	r1, [sp, #20]
 800bd2e:	2100      	movs	r1, #0
 800bd30:	2204      	movs	r2, #4
 800bd32:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bd36:	4804      	ldr	r0, [pc, #16]	; (800bd48 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800bd38:	9200      	str	r2, [sp, #0]
 800bd3a:	6800      	ldr	r0, [r0, #0]
 800bd3c:	ab05      	add	r3, sp, #20
 800bd3e:	f7ff fe37 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd42:	b007      	add	sp, #28
 800bd44:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd48:	20001b94 	mulcs	r0, r4, fp

0800bd4c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800bd4c:	f1a0 0004 	sub.w	r0, r0, #4
 800bd50:	e7ea      	b.n	800bd28 <StoreNetwork::SaveIp(unsigned int)>
 800bd52:	bf00      	nop

0800bd54 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bd54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd56:	460b      	mov	r3, r1
 800bd58:	2020      	movs	r0, #32
 800bd5a:	2100      	movs	r1, #0
 800bd5c:	2a40      	cmp	r2, #64	; 0x40
 800bd5e:	bf28      	it	cs
 800bd60:	2240      	movcs	r2, #64	; 0x40
 800bd62:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800bd66:	4804      	ldr	r0, [pc, #16]	; (800bd78 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800bd68:	9200      	str	r2, [sp, #0]
 800bd6a:	6800      	ldr	r0, [r0, #0]
 800bd6c:	2215      	movs	r2, #21
 800bd6e:	f7ff fe1f 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd72:	b005      	add	sp, #20
 800bd74:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd78:	20001b94 	mulcs	r0, r4, fp

0800bd7c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bd7c:	f1a0 0004 	sub.w	r0, r0, #4
 800bd80:	e7e8      	b.n	800bd54 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800bd82:	bf00      	nop

0800bd84 <StoreNetwork::~StoreNetwork()>:
 800bd84:	b510      	push	{r4, lr}
 800bd86:	4604      	mov	r4, r0
 800bd88:	f003 fb74 	bl	800f474 <operator delete(void*)>
 800bd8c:	4620      	mov	r0, r4
 800bd8e:	bd10      	pop	{r4, pc}

0800bd90 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bd90:	f1a0 0004 	sub.w	r0, r0, #4
 800bd94:	e7f6      	b.n	800bd84 <StoreNetwork::~StoreNetwork()>
	...

0800bd98 <StoreNetwork::Copy(TNetworkParams*)>:
 800bd98:	b507      	push	{r0, r1, r2, lr}
 800bd9a:	460a      	mov	r2, r1
 800bd9c:	2100      	movs	r1, #0
 800bd9e:	4804      	ldr	r0, [pc, #16]	; (800bdb0 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800bda0:	9100      	str	r1, [sp, #0]
 800bda2:	235e      	movs	r3, #94	; 0x5e
 800bda4:	6800      	ldr	r0, [r0, #0]
 800bda6:	f7ff fe43 	bl	800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bdaa:	b003      	add	sp, #12
 800bdac:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdb0:	20001b94 	mulcs	r0, r4, fp

0800bdb4 <StoreNetwork::StoreNetwork()>:
 800bdb4:	4a03      	ldr	r2, [pc, #12]	; (800bdc4 <StoreNetwork::StoreNetwork()+0x10>)
 800bdb6:	6002      	str	r2, [r0, #0]
 800bdb8:	322c      	adds	r2, #44	; 0x2c
 800bdba:	6042      	str	r2, [r0, #4]
 800bdbc:	4a02      	ldr	r2, [pc, #8]	; (800bdc8 <StoreNetwork::StoreNetwork()+0x14>)
 800bdbe:	6010      	str	r0, [r2, #0]
 800bdc0:	4770      	bx	lr
 800bdc2:	bf00      	nop
 800bdc4:	08013244 	stmdaeq	r1, {r2, r6, r9, ip, sp}
 800bdc8:	20001ba8 	andcs	r1, r0, r8, lsr #23

0800bdcc <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bdcc:	4770      	bx	lr
	...

0800bdd0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800bdd0:	2300      	movs	r3, #0
 800bdd2:	b507      	push	{r0, r1, r2, lr}
 800bdd4:	4805      	ldr	r0, [pc, #20]	; (800bdec <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800bdd6:	9300      	str	r3, [sp, #0]
 800bdd8:	460a      	mov	r2, r1
 800bdda:	2320      	movs	r3, #32
 800bddc:	210c      	movs	r1, #12
 800bdde:	6800      	ldr	r0, [r0, #0]
 800bde0:	f7ff fe26 	bl	800ba30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bde4:	b003      	add	sp, #12
 800bde6:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdea:	bf00      	nop
 800bdec:	20001b94 	mulcs	r0, r4, fp

0800bdf0 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800bdf0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bdf2:	2200      	movs	r2, #0
 800bdf4:	460b      	mov	r3, r1
 800bdf6:	2120      	movs	r1, #32
 800bdf8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bdfc:	4804      	ldr	r0, [pc, #16]	; (800be10 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800bdfe:	9100      	str	r1, [sp, #0]
 800be00:	6800      	ldr	r0, [r0, #0]
 800be02:	210c      	movs	r1, #12
 800be04:	f7ff fdd4 	bl	800b9b0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be08:	b005      	add	sp, #20
 800be0a:	f85d fb04 	ldr.w	pc, [sp], #4
 800be0e:	bf00      	nop
 800be10:	20001b94 	mulcs	r0, r4, fp

0800be14 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800be14:	b510      	push	{r4, lr}
 800be16:	4604      	mov	r4, r0
 800be18:	f003 fb2c 	bl	800f474 <operator delete(void*)>
 800be1c:	4620      	mov	r0, r4
 800be1e:	bd10      	pop	{r4, pc}

0800be20 <StoreRemoteConfig::StoreRemoteConfig()>:
 800be20:	4a02      	ldr	r2, [pc, #8]	; (800be2c <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800be22:	6002      	str	r2, [r0, #0]
 800be24:	4a02      	ldr	r2, [pc, #8]	; (800be30 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800be26:	6010      	str	r0, [r2, #0]
 800be28:	4770      	bx	lr
 800be2a:	bf00      	nop
 800be2c:	08013294 	stmdaeq	r1, {r2, r4, r7, r9, ip, sp}
 800be30:	20001bac 	andcs	r1, r0, ip, lsr #23

0800be34 <FlashRom::FlashRom()>:
 800be34:	4b07      	ldr	r3, [pc, #28]	; (800be54 <FlashRom::FlashRom()+0x20>)
 800be36:	b510      	push	{r4, lr}
 800be38:	6018      	str	r0, [r3, #0]
 800be3a:	2301      	movs	r3, #1
 800be3c:	4604      	mov	r4, r0
 800be3e:	7003      	strb	r3, [r0, #0]
 800be40:	4b05      	ldr	r3, [pc, #20]	; (800be58 <FlashRom::FlashRom()+0x24>)
 800be42:	4906      	ldr	r1, [pc, #24]	; (800be5c <FlashRom::FlashRom()+0x28>)
 800be44:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800be48:	4805      	ldr	r0, [pc, #20]	; (800be60 <FlashRom::FlashRom()+0x2c>)
 800be4a:	029a      	lsls	r2, r3, #10
 800be4c:	f003 fe06 	bl	800fa5c <printf>
 800be50:	4620      	mov	r0, r4
 800be52:	bd10      	pop	{r4, pc}
 800be54:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800be58:	1ffff700 	svcne	0x00fff700
 800be5c:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800be60:	080132a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp}

0800be64 <FlashRom::GetSize() const>:
 800be64:	4b02      	ldr	r3, [pc, #8]	; (800be70 <FlashRom::GetSize() const+0xc>)
 800be66:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800be6a:	0280      	lsls	r0, r0, #10
 800be6c:	4770      	bx	lr
 800be6e:	bf00      	nop
 800be70:	1ffff700 	svcne	0x00fff700

0800be74 <FlashRom::GetSectorSize() const>:
 800be74:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800be78:	4770      	bx	lr

0800be7a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800be7a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800be7e:	441a      	add	r2, r3
 800be80:	4293      	cmp	r3, r2
 800be82:	d104      	bne.n	800be8e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800be84:	2200      	movs	r2, #0
 800be86:	9b00      	ldr	r3, [sp, #0]
 800be88:	2001      	movs	r0, #1
 800be8a:	601a      	str	r2, [r3, #0]
 800be8c:	4770      	bx	lr
 800be8e:	f851 0b04 	ldr.w	r0, [r1], #4
 800be92:	f843 0b04 	str.w	r0, [r3], #4
 800be96:	e7f3      	b.n	800be80 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800be98 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800be98:	2000      	movs	r0, #0
 800be9a:	b538      	push	{r3, r4, r5, lr}
 800be9c:	4c47      	ldr	r4, [pc, #284]	; (800bfbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800be9e:	6018      	str	r0, [r3, #0]
 800bea0:	6823      	ldr	r3, [r4, #0]
 800bea2:	2b04      	cmp	r3, #4
 800bea4:	f200 8082 	bhi.w	800bfac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800bea8:	e8df f003 	tbb	[pc, r3]
 800beac:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800beb0:	4b430080 	blmi	90cc0b8 <__exidx_end+0x10b8500>
 800beb4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800beb8:	6019      	str	r1, [r3, #0]
 800beba:	4b42      	ldr	r3, [pc, #264]	; (800bfc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800bebc:	601a      	str	r2, [r3, #0]
 800bebe:	4b42      	ldr	r3, [pc, #264]	; (800bfc8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800bec0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800bec4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bec8:	4b40      	ldr	r3, [pc, #256]	; (800bfcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800beca:	d807      	bhi.n	800bedc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800becc:	2201      	movs	r2, #1
 800bece:	701a      	strb	r2, [r3, #0]
 800bed0:	f004 f890 	bl	800fff4 <fmc_bank0_unlock>
 800bed4:	2301      	movs	r3, #1
 800bed6:	6023      	str	r3, [r4, #0]
 800bed8:	2000      	movs	r0, #0
 800beda:	e026      	b.n	800bf2a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800bedc:	4a3c      	ldr	r2, [pc, #240]	; (800bfd0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800bede:	4291      	cmp	r1, r2
 800bee0:	d3f4      	bcc.n	800becc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800bee2:	2200      	movs	r2, #0
 800bee4:	701a      	strb	r2, [r3, #0]
 800bee6:	f004 f893 	bl	8010010 <fmc_bank1_unlock>
 800beea:	e7f3      	b.n	800bed4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800beec:	4d37      	ldr	r5, [pc, #220]	; (800bfcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800beee:	782b      	ldrb	r3, [r5, #0]
 800bef0:	b15b      	cbz	r3, 800bf0a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800bef2:	f004 f8ab 	bl	801004c <fmc_bank0_state_get>
 800bef6:	2801      	cmp	r0, #1
 800bef8:	d0ee      	beq.n	800bed8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800befa:	7829      	ldrb	r1, [r5, #0]
 800befc:	4b35      	ldr	r3, [pc, #212]	; (800bfd4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800befe:	b939      	cbnz	r1, 800bf10 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800bf00:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800bf02:	f022 0202 	bic.w	r2, r2, #2
 800bf06:	651a      	str	r2, [r3, #80]	; 0x50
 800bf08:	e006      	b.n	800bf18 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800bf0a:	f004 f8b1 	bl	8010070 <fmc_bank1_state_get>
 800bf0e:	e7f2      	b.n	800bef6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800bf10:	691a      	ldr	r2, [r3, #16]
 800bf12:	f022 0202 	bic.w	r2, r2, #2
 800bf16:	611a      	str	r2, [r3, #16]
 800bf18:	4b2a      	ldr	r3, [pc, #168]	; (800bfc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800bf1a:	681b      	ldr	r3, [r3, #0]
 800bf1c:	b94b      	cbnz	r3, 800bf32 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800bf1e:	b129      	cbz	r1, 800bf2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800bf20:	f004 f884 	bl	801002c <fmc_bank0_lock>
 800bf24:	2300      	movs	r3, #0
 800bf26:	2001      	movs	r0, #1
 800bf28:	6023      	str	r3, [r4, #0]
 800bf2a:	bd38      	pop	{r3, r4, r5, pc}
 800bf2c:	f004 f886 	bl	801003c <fmc_bank1_lock>
 800bf30:	e7f8      	b.n	800bf24 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800bf32:	2302      	movs	r3, #2
 800bf34:	e7cf      	b.n	800bed6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800bf36:	4923      	ldr	r1, [pc, #140]	; (800bfc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800bf38:	680b      	ldr	r3, [r1, #0]
 800bf3a:	2b00      	cmp	r3, #0
 800bf3c:	d0ca      	beq.n	800bed4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800bf3e:	4b23      	ldr	r3, [pc, #140]	; (800bfcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800bf40:	4a1f      	ldr	r2, [pc, #124]	; (800bfc0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800bf42:	7818      	ldrb	r0, [r3, #0]
 800bf44:	4b23      	ldr	r3, [pc, #140]	; (800bfd4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800bf46:	b190      	cbz	r0, 800bf6e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800bf48:	6918      	ldr	r0, [r3, #16]
 800bf4a:	f040 0002 	orr.w	r0, r0, #2
 800bf4e:	6118      	str	r0, [r3, #16]
 800bf50:	6810      	ldr	r0, [r2, #0]
 800bf52:	6158      	str	r0, [r3, #20]
 800bf54:	6918      	ldr	r0, [r3, #16]
 800bf56:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800bf5a:	6118      	str	r0, [r3, #16]
 800bf5c:	680b      	ldr	r3, [r1, #0]
 800bf5e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800bf62:	600b      	str	r3, [r1, #0]
 800bf64:	6813      	ldr	r3, [r2, #0]
 800bf66:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bf6a:	6013      	str	r3, [r2, #0]
 800bf6c:	e7b2      	b.n	800bed4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800bf6e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800bf70:	f040 0002 	orr.w	r0, r0, #2
 800bf74:	6518      	str	r0, [r3, #80]	; 0x50
 800bf76:	6810      	ldr	r0, [r2, #0]
 800bf78:	6558      	str	r0, [r3, #84]	; 0x54
 800bf7a:	69dd      	ldr	r5, [r3, #28]
 800bf7c:	07ad      	lsls	r5, r5, #30
 800bf7e:	bf48      	it	mi
 800bf80:	6158      	strmi	r0, [r3, #20]
 800bf82:	4814      	ldr	r0, [pc, #80]	; (800bfd4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800bf84:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800bf86:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bf8a:	6503      	str	r3, [r0, #80]	; 0x50
 800bf8c:	680b      	ldr	r3, [r1, #0]
 800bf8e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800bf92:	600b      	str	r3, [r1, #0]
 800bf94:	6813      	ldr	r3, [r2, #0]
 800bf96:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800bf9a:	e7e6      	b.n	800bf6a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800bf9c:	4b0b      	ldr	r3, [pc, #44]	; (800bfcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800bf9e:	781a      	ldrb	r2, [r3, #0]
 800bfa0:	4b0c      	ldr	r3, [pc, #48]	; (800bfd4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800bfa2:	b132      	cbz	r2, 800bfb2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800bfa4:	691a      	ldr	r2, [r3, #16]
 800bfa6:	f022 0201 	bic.w	r2, r2, #1
 800bfaa:	611a      	str	r2, [r3, #16]
 800bfac:	2000      	movs	r0, #0
 800bfae:	6020      	str	r0, [r4, #0]
 800bfb0:	e7bb      	b.n	800bf2a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800bfb2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800bfb4:	f022 0201 	bic.w	r2, r2, #1
 800bfb8:	651a      	str	r2, [r3, #80]	; 0x50
 800bfba:	e7f7      	b.n	800bfac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800bfbc:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800bfc0:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800bfc4:	20001bc8 	andcs	r1, r0, r8, asr #23
 800bfc8:	1ffff700 	svcne	0x00fff700
 800bfcc:	20001bc4 	andcs	r1, r0, r4, asr #23
 800bfd0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800bfd4:	40022000 	andmi	r2, r2, r0

0800bfd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800bfd8:	b570      	push	{r4, r5, r6, lr}
 800bfda:	2400      	movs	r4, #0
 800bfdc:	9804      	ldr	r0, [sp, #16]
 800bfde:	6004      	str	r4, [r0, #0]
 800bfe0:	4c48      	ldr	r4, [pc, #288]	; (800c104 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800bfe2:	6820      	ldr	r0, [r4, #0]
 800bfe4:	2804      	cmp	r0, #4
 800bfe6:	d848      	bhi.n	800c07a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800bfe8:	e8df f000 	tbb	[pc, r0]
 800bfec:	22847c03 	addcs	r7, r4, #768	; 0x300
 800bff0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800bff4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800bff8:	6001      	str	r1, [r0, #0]
 800bffa:	4844      	ldr	r0, [pc, #272]	; (800c10c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800bffc:	6003      	str	r3, [r0, #0]
 800bffe:	4b44      	ldr	r3, [pc, #272]	; (800c110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c000:	601a      	str	r2, [r3, #0]
 800c002:	4b44      	ldr	r3, [pc, #272]	; (800c114 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c004:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c008:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c00c:	4b42      	ldr	r3, [pc, #264]	; (800c118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c00e:	d807      	bhi.n	800c020 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c010:	2201      	movs	r2, #1
 800c012:	701a      	strb	r2, [r3, #0]
 800c014:	f003 ffee 	bl	800fff4 <fmc_bank0_unlock>
 800c018:	2303      	movs	r3, #3
 800c01a:	6023      	str	r3, [r4, #0]
 800c01c:	2000      	movs	r0, #0
 800c01e:	e026      	b.n	800c06e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c020:	4a3e      	ldr	r2, [pc, #248]	; (800c11c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c022:	4291      	cmp	r1, r2
 800c024:	d3f4      	bcc.n	800c010 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c026:	2200      	movs	r2, #0
 800c028:	701a      	strb	r2, [r3, #0]
 800c02a:	f003 fff1 	bl	8010010 <fmc_bank1_unlock>
 800c02e:	e7f3      	b.n	800c018 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c030:	4d39      	ldr	r5, [pc, #228]	; (800c118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c032:	782b      	ldrb	r3, [r5, #0]
 800c034:	b15b      	cbz	r3, 800c04e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c036:	f004 f809 	bl	801004c <fmc_bank0_state_get>
 800c03a:	2801      	cmp	r0, #1
 800c03c:	d0ee      	beq.n	800c01c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c03e:	7829      	ldrb	r1, [r5, #0]
 800c040:	4b37      	ldr	r3, [pc, #220]	; (800c120 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c042:	b939      	cbnz	r1, 800c054 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c044:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c046:	f022 0201 	bic.w	r2, r2, #1
 800c04a:	651a      	str	r2, [r3, #80]	; 0x50
 800c04c:	e006      	b.n	800c05c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c04e:	f004 f80f 	bl	8010070 <fmc_bank1_state_get>
 800c052:	e7f2      	b.n	800c03a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c054:	691a      	ldr	r2, [r3, #16]
 800c056:	f022 0201 	bic.w	r2, r2, #1
 800c05a:	611a      	str	r2, [r3, #16]
 800c05c:	4b2c      	ldr	r3, [pc, #176]	; (800c110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c05e:	681b      	ldr	r3, [r3, #0]
 800c060:	b94b      	cbnz	r3, 800c076 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c062:	b129      	cbz	r1, 800c070 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c064:	f003 ffe2 	bl	801002c <fmc_bank0_lock>
 800c068:	2300      	movs	r3, #0
 800c06a:	2001      	movs	r0, #1
 800c06c:	6023      	str	r3, [r4, #0]
 800c06e:	bd70      	pop	{r4, r5, r6, pc}
 800c070:	f003 ffe4 	bl	801003c <fmc_bank1_lock>
 800c074:	e7f8      	b.n	800c068 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c076:	2304      	movs	r3, #4
 800c078:	e7cf      	b.n	800c01a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c07a:	4a25      	ldr	r2, [pc, #148]	; (800c110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c07c:	6813      	ldr	r3, [r2, #0]
 800c07e:	2b03      	cmp	r3, #3
 800c080:	d91a      	bls.n	800c0b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c082:	4b25      	ldr	r3, [pc, #148]	; (800c118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c084:	7819      	ldrb	r1, [r3, #0]
 800c086:	4b26      	ldr	r3, [pc, #152]	; (800c120 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c088:	b189      	cbz	r1, 800c0ae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c08a:	6919      	ldr	r1, [r3, #16]
 800c08c:	f041 0101 	orr.w	r1, r1, #1
 800c090:	6119      	str	r1, [r3, #16]
 800c092:	4d1e      	ldr	r5, [pc, #120]	; (800c10c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c094:	481c      	ldr	r0, [pc, #112]	; (800c108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c096:	6829      	ldr	r1, [r5, #0]
 800c098:	6803      	ldr	r3, [r0, #0]
 800c09a:	f851 6b04 	ldr.w	r6, [r1], #4
 800c09e:	f843 6b04 	str.w	r6, [r3], #4
 800c0a2:	6003      	str	r3, [r0, #0]
 800c0a4:	6813      	ldr	r3, [r2, #0]
 800c0a6:	6029      	str	r1, [r5, #0]
 800c0a8:	3b04      	subs	r3, #4
 800c0aa:	6013      	str	r3, [r2, #0]
 800c0ac:	e7b4      	b.n	800c018 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c0ae:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c0b0:	f041 0101 	orr.w	r1, r1, #1
 800c0b4:	6519      	str	r1, [r3, #80]	; 0x50
 800c0b6:	e7ec      	b.n	800c092 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c0b8:	2b00      	cmp	r3, #0
 800c0ba:	d0ad      	beq.n	800c018 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c0bc:	4b16      	ldr	r3, [pc, #88]	; (800c118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c0be:	781a      	ldrb	r2, [r3, #0]
 800c0c0:	4b17      	ldr	r3, [pc, #92]	; (800c120 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c0c2:	b152      	cbz	r2, 800c0da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c0c4:	691a      	ldr	r2, [r3, #16]
 800c0c6:	f042 0201 	orr.w	r2, r2, #1
 800c0ca:	611a      	str	r2, [r3, #16]
 800c0cc:	4a0f      	ldr	r2, [pc, #60]	; (800c10c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c0ce:	4b0e      	ldr	r3, [pc, #56]	; (800c108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c0d0:	6812      	ldr	r2, [r2, #0]
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	6812      	ldr	r2, [r2, #0]
 800c0d6:	601a      	str	r2, [r3, #0]
 800c0d8:	e79e      	b.n	800c018 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c0da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c0dc:	f042 0201 	orr.w	r2, r2, #1
 800c0e0:	651a      	str	r2, [r3, #80]	; 0x50
 800c0e2:	e7f3      	b.n	800c0cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c0e4:	4b0c      	ldr	r3, [pc, #48]	; (800c118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c0e6:	781a      	ldrb	r2, [r3, #0]
 800c0e8:	4b0d      	ldr	r3, [pc, #52]	; (800c120 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c0ea:	b132      	cbz	r2, 800c0fa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c0ec:	691a      	ldr	r2, [r3, #16]
 800c0ee:	f022 0202 	bic.w	r2, r2, #2
 800c0f2:	611a      	str	r2, [r3, #16]
 800c0f4:	2000      	movs	r0, #0
 800c0f6:	6020      	str	r0, [r4, #0]
 800c0f8:	e7b9      	b.n	800c06e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c0fa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c0fc:	f022 0202 	bic.w	r2, r2, #2
 800c100:	651a      	str	r2, [r3, #80]	; 0x50
 800c102:	e7f7      	b.n	800c0f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c104:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c108:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800c10c:	20001bc0 	andcs	r1, r0, r0, asr #23
 800c110:	20001bc8 	andcs	r1, r0, r8, asr #23
 800c114:	1ffff700 	svcne	0x00fff700
 800c118:	20001bc4 	andcs	r1, r0, r4, asr #23
 800c11c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c120:	40022000 	andmi	r2, r2, r0

0800c124 <net_timers_run>:
 800c124:	4b05      	ldr	r3, [pc, #20]	; (800c13c <net_timers_run+0x18>)
 800c126:	4a06      	ldr	r2, [pc, #24]	; (800c140 <net_timers_run+0x1c>)
 800c128:	681b      	ldr	r3, [r3, #0]
 800c12a:	6811      	ldr	r1, [r2, #0]
 800c12c:	4299      	cmp	r1, r3
 800c12e:	d803      	bhi.n	800c138 <net_timers_run+0x14>
 800c130:	3364      	adds	r3, #100	; 0x64
 800c132:	6013      	str	r3, [r2, #0]
 800c134:	f001 be7a 	b.w	800de2c <igmp_timer>
 800c138:	4770      	bx	lr
 800c13a:	bf00      	nop
 800c13c:	20009bdc 	ldrdcs	r9, [r0], -ip
 800c140:	20001be4 	andcs	r1, r0, r4, ror #23

0800c144 <rfc3927>:
 800c144:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c148:	4606      	mov	r6, r0
 800c14a:	25ff      	movs	r5, #255	; 0xff
 800c14c:	4b18      	ldr	r3, [pc, #96]	; (800c1b0 <rfc3927+0x6c>)
 800c14e:	4f19      	ldr	r7, [pc, #100]	; (800c1b4 <rfc3927+0x70>)
 800c150:	791a      	ldrb	r2, [r3, #4]
 800c152:	78dc      	ldrb	r4, [r3, #3]
 800c154:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c1b8 <rfc3927+0x74>
 800c158:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c15c:	f8d7 9000 	ldr.w	r9, [r7]
 800c160:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c1bc <rfc3927+0x78>
 800c164:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c1c0 <rfc3927+0x7c>
 800c168:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c16c:	4659      	mov	r1, fp
 800c16e:	4620      	mov	r0, r4
 800c170:	f001 fbbc 	bl	800d8ec <arp_cache_lookup>
 800c174:	b190      	cbz	r0, 800c19c <rfc3927+0x58>
 800c176:	ba24      	rev	r4, r4
 800c178:	3401      	adds	r4, #1
 800c17a:	3d01      	subs	r5, #1
 800c17c:	ba24      	rev	r4, r4
 800c17e:	b2ad      	uxth	r5, r5
 800c180:	4554      	cmp	r4, sl
 800c182:	bf08      	it	eq
 800c184:	4644      	moveq	r4, r8
 800c186:	b18d      	cbz	r5, 800c1ac <rfc3927+0x68>
 800c188:	683b      	ldr	r3, [r7, #0]
 800c18a:	eba3 0309 	sub.w	r3, r3, r9
 800c18e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c192:	d3eb      	bcc.n	800c16c <rfc3927+0x28>
 800c194:	2400      	movs	r4, #0
 800c196:	4623      	mov	r3, r4
 800c198:	4620      	mov	r0, r4
 800c19a:	e002      	b.n	800c1a2 <rfc3927+0x5e>
 800c19c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c1a0:	2001      	movs	r0, #1
 800c1a2:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800c1a6:	6034      	str	r4, [r6, #0]
 800c1a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1ac:	462c      	mov	r4, r5
 800c1ae:	e7f2      	b.n	800c196 <rfc3927+0x52>
 800c1b0:	20001be8 	andcs	r1, r0, r8, ror #23
 800c1b4:	20009bdc 	ldrdcs	r9, [r0], -ip
 800c1b8:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c1bc:	20001bf0 	strdcs	r1, [r0], -r0
 800c1c0:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c1c4 <_init_tcb>:
 800c1c4:	b510      	push	{r4, lr}
 800c1c6:	4603      	mov	r3, r0
 800c1c8:	2400      	movs	r4, #0
 800c1ca:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c1ce:	4293      	cmp	r3, r2
 800c1d0:	d10d      	bne.n	800c1ee <_init_tcb+0x2a>
 800c1d2:	4b08      	ldr	r3, [pc, #32]	; (800c1f4 <_init_tcb+0x30>)
 800c1d4:	f640 3268 	movw	r2, #2920	; 0xb68
 800c1d8:	681b      	ldr	r3, [r3, #0]
 800c1da:	8702      	strh	r2, [r0, #56]	; 0x38
 800c1dc:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c1e0:	6283      	str	r3, [r0, #40]	; 0x28
 800c1e2:	6243      	str	r3, [r0, #36]	; 0x24
 800c1e4:	2301      	movs	r3, #1
 800c1e6:	8001      	strh	r1, [r0, #0]
 800c1e8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c1ec:	bd10      	pop	{r4, pc}
 800c1ee:	f803 4b01 	strb.w	r4, [r3], #1
 800c1f2:	e7ec      	b.n	800c1ce <_init_tcb+0xa>
 800c1f4:	20009bdc 	ldrdcs	r9, [r0], -ip

0800c1f8 <memcpy.isra.0>:
 800c1f8:	3801      	subs	r0, #1
 800c1fa:	440a      	add	r2, r1
 800c1fc:	4291      	cmp	r1, r2
 800c1fe:	d100      	bne.n	800c202 <memcpy.isra.0+0xa>
 800c200:	4770      	bx	lr
 800c202:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c206:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c20a:	e7f7      	b.n	800c1fc <memcpy.isra.0+0x4>

0800c20c <_bswap32>:
 800c20c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c20e:	2204      	movs	r2, #4
 800c210:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c214:	4629      	mov	r1, r5
 800c216:	4604      	mov	r4, r0
 800c218:	eb0d 0002 	add.w	r0, sp, r2
 800c21c:	f7ff ffec 	bl	800c1f8 <memcpy.isra.0>
 800c220:	2204      	movs	r2, #4
 800c222:	9b01      	ldr	r3, [sp, #4]
 800c224:	eb0d 0102 	add.w	r1, sp, r2
 800c228:	ba1b      	rev	r3, r3
 800c22a:	4628      	mov	r0, r5
 800c22c:	9301      	str	r3, [sp, #4]
 800c22e:	f7ff ffe3 	bl	800c1f8 <memcpy.isra.0>
 800c232:	2204      	movs	r2, #4
 800c234:	3426      	adds	r4, #38	; 0x26
 800c236:	eb0d 0002 	add.w	r0, sp, r2
 800c23a:	4621      	mov	r1, r4
 800c23c:	f7ff ffdc 	bl	800c1f8 <memcpy.isra.0>
 800c240:	2204      	movs	r2, #4
 800c242:	9b01      	ldr	r3, [sp, #4]
 800c244:	4620      	mov	r0, r4
 800c246:	ba1b      	rev	r3, r3
 800c248:	eb0d 0102 	add.w	r1, sp, r2
 800c24c:	9301      	str	r3, [sp, #4]
 800c24e:	f7ff ffd3 	bl	800c1f8 <memcpy.isra.0>
 800c252:	b003      	add	sp, #12
 800c254:	bd30      	pop	{r4, r5, pc}
	...

0800c258 <_tcp_send_package>:
 800c258:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c25c:	7a0b      	ldrb	r3, [r1, #8]
 800c25e:	4605      	mov	r5, r0
 800c260:	f013 0f02 	tst.w	r3, #2
 800c264:	bf0c      	ite	eq
 800c266:	f04f 0805 	moveq.w	r8, #5
 800c26a:	f04f 0806 	movne.w	r8, #6
 800c26e:	f04f 0a00 	mov.w	sl, #0
 800c272:	4c47      	ldr	r4, [pc, #284]	; (800c390 <_tcp_send_package+0x138>)
 800c274:	460f      	mov	r7, r1
 800c276:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c278:	f100 0108 	add.w	r1, r0, #8
 800c27c:	2206      	movs	r2, #6
 800c27e:	4620      	mov	r0, r4
 800c280:	f7ff ffba 	bl	800c1f8 <memcpy.isra.0>
 800c284:	4a43      	ldr	r2, [pc, #268]	; (800c394 <_tcp_send_package+0x13c>)
 800c286:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800c28a:	8813      	ldrh	r3, [r2, #0]
 800c28c:	b2b6      	uxth	r6, r6
 800c28e:	1c59      	adds	r1, r3, #1
 800c290:	8263      	strh	r3, [r4, #18]
 800c292:	f105 0904 	add.w	r9, r5, #4
 800c296:	f106 0314 	add.w	r3, r6, #20
 800c29a:	ba5b      	rev16	r3, r3
 800c29c:	8011      	strh	r1, [r2, #0]
 800c29e:	f104 001e 	add.w	r0, r4, #30
 800c2a2:	2204      	movs	r2, #4
 800c2a4:	4649      	mov	r1, r9
 800c2a6:	8223      	strh	r3, [r4, #16]
 800c2a8:	f7ff ffa6 	bl	800c1f8 <memcpy.isra.0>
 800c2ac:	2114      	movs	r1, #20
 800c2ae:	f104 000e 	add.w	r0, r4, #14
 800c2b2:	f8a4 a018 	strh.w	sl, [r4, #24]
 800c2b6:	f001 fe4c 	bl	800df52 <net_chksum>
 800c2ba:	882b      	ldrh	r3, [r5, #0]
 800c2bc:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800c2c0:	8463      	strh	r3, [r4, #34]	; 0x22
 800c2c2:	886b      	ldrh	r3, [r5, #2]
 800c2c4:	8320      	strh	r0, [r4, #24]
 800c2c6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c2c8:	683b      	ldr	r3, [r7, #0]
 800c2ca:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c2cc:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c2d0:	687b      	ldr	r3, [r7, #4]
 800c2d2:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800c2d6:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c2da:	7a3b      	ldrb	r3, [r7, #8]
 800c2dc:	8622      	strh	r2, [r4, #48]	; 0x30
 800c2de:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c2e2:	079b      	lsls	r3, r3, #30
 800c2e4:	bf48      	it	mi
 800c2e6:	f240 4302 	movwmi	r3, #1026	; 0x402
 800c2ea:	8baa      	ldrh	r2, [r5, #28]
 800c2ec:	bf48      	it	mi
 800c2ee:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800c2f0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c2f2:	bf42      	ittt	mi
 800c2f4:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c2f8:	4622      	movmi	r2, r4
 800c2fa:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c2fe:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c300:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800c304:	bf58      	it	pl
 800c306:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c30a:	2b00      	cmp	r3, #0
 800c30c:	d13e      	bne.n	800c38c <_tcp_send_package+0x134>
 800c30e:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c310:	481f      	ldr	r0, [pc, #124]	; (800c390 <_tcp_send_package+0x138>)
 800c312:	ba5b      	rev16	r3, r3
 800c314:	8463      	strh	r3, [r4, #34]	; 0x22
 800c316:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c318:	ba5b      	rev16	r3, r3
 800c31a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c31c:	f7ff ff76 	bl	800c20c <_bswap32>
 800c320:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c322:	a801      	add	r0, sp, #4
 800c324:	ba5b      	rev16	r3, r3
 800c326:	8623      	strh	r3, [r4, #48]	; 0x30
 800c328:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c32a:	220c      	movs	r2, #12
 800c32c:	ba5b      	rev16	r3, r3
 800c32e:	491a      	ldr	r1, [pc, #104]	; (800c398 <_tcp_send_package+0x140>)
 800c330:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c332:	f7ff ff61 	bl	800c1f8 <memcpy.isra.0>
 800c336:	2204      	movs	r2, #4
 800c338:	4918      	ldr	r1, [pc, #96]	; (800c39c <_tcp_send_package+0x144>)
 800c33a:	4817      	ldr	r0, [pc, #92]	; (800c398 <_tcp_send_package+0x140>)
 800c33c:	f7ff ff5c 	bl	800c1f8 <memcpy.isra.0>
 800c340:	2204      	movs	r2, #4
 800c342:	4649      	mov	r1, r9
 800c344:	4816      	ldr	r0, [pc, #88]	; (800c3a0 <_tcp_send_package+0x148>)
 800c346:	f7ff ff57 	bl	800c1f8 <memcpy.isra.0>
 800c34a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800c34e:	f106 010c 	add.w	r1, r6, #12
 800c352:	83e3      	strh	r3, [r4, #30]
 800c354:	4810      	ldr	r0, [pc, #64]	; (800c398 <_tcp_send_package+0x140>)
 800c356:	ba73      	rev16	r3, r6
 800c358:	8423      	strh	r3, [r4, #32]
 800c35a:	f001 fdfa 	bl	800df52 <net_chksum>
 800c35e:	a901      	add	r1, sp, #4
 800c360:	4605      	mov	r5, r0
 800c362:	220c      	movs	r2, #12
 800c364:	480c      	ldr	r0, [pc, #48]	; (800c398 <_tcp_send_package+0x140>)
 800c366:	f7ff ff47 	bl	800c1f8 <memcpy.isra.0>
 800c36a:	4809      	ldr	r0, [pc, #36]	; (800c390 <_tcp_send_package+0x138>)
 800c36c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c370:	8665      	strh	r5, [r4, #50]	; 0x32
 800c372:	b004      	add	sp, #16
 800c374:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c378:	f004 bb4a 	b.w	8010a10 <emac_eth_send>
 800c37c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c37e:	5cc9      	ldrb	r1, [r1, r3]
 800c380:	54d1      	strb	r1, [r2, r3]
 800c382:	3301      	adds	r3, #1
 800c384:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c386:	4299      	cmp	r1, r3
 800c388:	d8f8      	bhi.n	800c37c <_tcp_send_package+0x124>
 800c38a:	e7c0      	b.n	800c30e <_tcp_send_package+0xb6>
 800c38c:	2300      	movs	r3, #0
 800c38e:	e7f9      	b.n	800c384 <_tcp_send_package+0x12c>
 800c390:	200027b0 			; <UNDEFINED> instruction: 0x200027b0
 800c394:	20001bf8 	strdcs	r1, [r0], -r8
 800c398:	200027c6 	andcs	r2, r0, r6, asr #15
 800c39c:	20001bcc 	andcs	r1, r0, ip, asr #23
 800c3a0:	200027ca 	andcs	r2, r0, sl, asr #15

0800c3a4 <_send_reset>:
 800c3a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c3a6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c3aa:	4604      	mov	r4, r0
 800c3ac:	075a      	lsls	r2, r3, #29
 800c3ae:	460e      	mov	r6, r1
 800c3b0:	d421      	bmi.n	800c3f6 <_send_reset+0x52>
 800c3b2:	2204      	movs	r2, #4
 800c3b4:	f013 0310 	ands.w	r3, r3, #16
 800c3b8:	f88d 200c 	strb.w	r2, [sp, #12]
 800c3bc:	d01d      	beq.n	800c3fa <_send_reset+0x56>
 800c3be:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c3c2:	4668      	mov	r0, sp
 800c3c4:	f7ff ff18 	bl	800c1f8 <memcpy.isra.0>
 800c3c8:	9b00      	ldr	r3, [sp, #0]
 800c3ca:	9301      	str	r3, [sp, #4]
 800c3cc:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c3d0:	4668      	mov	r0, sp
 800c3d2:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c3d6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c3da:	07db      	lsls	r3, r3, #31
 800c3dc:	f04f 0204 	mov.w	r2, #4
 800c3e0:	bf48      	it	mi
 800c3e2:	3501      	addmi	r5, #1
 800c3e4:	f7ff ff08 	bl	800c1f8 <memcpy.isra.0>
 800c3e8:	9b00      	ldr	r3, [sp, #0]
 800c3ea:	4630      	mov	r0, r6
 800c3ec:	441d      	add	r5, r3
 800c3ee:	a901      	add	r1, sp, #4
 800c3f0:	9502      	str	r5, [sp, #8]
 800c3f2:	f7ff ff31 	bl	800c258 <_tcp_send_package>
 800c3f6:	b004      	add	sp, #16
 800c3f8:	bd70      	pop	{r4, r5, r6, pc}
 800c3fa:	9301      	str	r3, [sp, #4]
 800c3fc:	2314      	movs	r3, #20
 800c3fe:	f88d 300c 	strb.w	r3, [sp, #12]
 800c402:	e7e3      	b.n	800c3cc <_send_reset+0x28>

0800c404 <tcp_begin>:
 800c404:	b508      	push	{r3, lr}
 800c406:	4b0a      	ldr	r3, [pc, #40]	; (800c430 <tcp_begin+0x2c>)
 800c408:	4601      	mov	r1, r0
 800c40a:	881a      	ldrh	r2, [r3, #0]
 800c40c:	4282      	cmp	r2, r0
 800c40e:	d102      	bne.n	800c416 <tcp_begin+0x12>
 800c410:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c414:	b130      	cbz	r0, 800c424 <tcp_begin+0x20>
 800c416:	b12a      	cbz	r2, 800c424 <tcp_begin+0x20>
 800c418:	4806      	ldr	r0, [pc, #24]	; (800c434 <tcp_begin+0x30>)
 800c41a:	f002 feb7 	bl	800f18c <console_error>
 800c41e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c422:	bd08      	pop	{r3, pc}
 800c424:	4802      	ldr	r0, [pc, #8]	; (800c430 <tcp_begin+0x2c>)
 800c426:	8019      	strh	r1, [r3, #0]
 800c428:	f7ff fecc 	bl	800c1c4 <_init_tcb>
 800c42c:	2000      	movs	r0, #0
 800c42e:	e7f8      	b.n	800c422 <tcp_begin+0x1e>
 800c430:	2000276c 	andcs	r2, r0, ip, ror #14
 800c434:	080132d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, ip, sp}

0800c438 <tcp_write>:
 800c438:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c43c:	429a      	cmp	r2, r3
 800c43e:	bf28      	it	cs
 800c440:	461a      	movcs	r2, r3
 800c442:	2344      	movs	r3, #68	; 0x44
 800c444:	b530      	push	{r4, r5, lr}
 800c446:	4c0d      	ldr	r4, [pc, #52]	; (800c47c <tcp_write+0x44>)
 800c448:	b085      	sub	sp, #20
 800c44a:	fb03 4400 	mla	r4, r3, r0, r4
 800c44e:	6963      	ldr	r3, [r4, #20]
 800c450:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c452:	9301      	str	r3, [sp, #4]
 800c454:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c456:	4620      	mov	r0, r4
 800c458:	9302      	str	r3, [sp, #8]
 800c45a:	2318      	movs	r3, #24
 800c45c:	8622      	strh	r2, [r4, #48]	; 0x30
 800c45e:	a901      	add	r1, sp, #4
 800c460:	4615      	mov	r5, r2
 800c462:	f88d 300c 	strb.w	r3, [sp, #12]
 800c466:	f7ff fef7 	bl	800c258 <_tcp_send_package>
 800c46a:	2300      	movs	r3, #0
 800c46c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c46e:	8623      	strh	r3, [r4, #48]	; 0x30
 800c470:	6963      	ldr	r3, [r4, #20]
 800c472:	442b      	add	r3, r5
 800c474:	6163      	str	r3, [r4, #20]
 800c476:	b005      	add	sp, #20
 800c478:	bd30      	pop	{r4, r5, pc}
 800c47a:	bf00      	nop
 800c47c:	2000276c 	andcs	r2, r0, ip, ror #14

0800c480 <tcp_read>:
 800c480:	2344      	movs	r3, #68	; 0x44
 800c482:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c484:	4c1c      	ldr	r4, [pc, #112]	; (800c4f8 <tcp_read+0x78>)
 800c486:	b085      	sub	sp, #20
 800c488:	fb03 4400 	mla	r4, r3, r0, r4
 800c48c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c490:	2b07      	cmp	r3, #7
 800c492:	d112      	bne.n	800c4ba <tcp_read+0x3a>
 800c494:	6963      	ldr	r3, [r4, #20]
 800c496:	4620      	mov	r0, r4
 800c498:	9301      	str	r3, [sp, #4]
 800c49a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c49c:	a901      	add	r1, sp, #4
 800c49e:	9302      	str	r3, [sp, #8]
 800c4a0:	2311      	movs	r3, #17
 800c4a2:	f88d 300c 	strb.w	r3, [sp, #12]
 800c4a6:	f7ff fed7 	bl	800c258 <_tcp_send_package>
 800c4aa:	2309      	movs	r3, #9
 800c4ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c4b0:	6963      	ldr	r3, [r4, #20]
 800c4b2:	3301      	adds	r3, #1
 800c4b4:	6163      	str	r3, [r4, #20]
 800c4b6:	2000      	movs	r0, #0
 800c4b8:	e01b      	b.n	800c4f2 <tcp_read+0x72>
 800c4ba:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c4be:	4358      	muls	r0, r3
 800c4c0:	4a0e      	ldr	r2, [pc, #56]	; (800c4fc <tcp_read+0x7c>)
 800c4c2:	1817      	adds	r7, r2, r0
 800c4c4:	887b      	ldrh	r3, [r7, #2]
 800c4c6:	5a15      	ldrh	r5, [r2, r0]
 800c4c8:	429d      	cmp	r5, r3
 800c4ca:	d0f4      	beq.n	800c4b6 <tcp_read+0x36>
 800c4cc:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c4d0:	435d      	muls	r5, r3
 800c4d2:	1d06      	adds	r6, r0, #4
 800c4d4:	442e      	add	r6, r5
 800c4d6:	4416      	add	r6, r2
 800c4d8:	4405      	add	r5, r0
 800c4da:	600e      	str	r6, [r1, #0]
 800c4dc:	442a      	add	r2, r5
 800c4de:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c4e2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c4e4:	3301      	adds	r3, #1
 800c4e6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c4ea:	f003 0301 	and.w	r3, r3, #1
 800c4ee:	8722      	strh	r2, [r4, #56]	; 0x38
 800c4f0:	807b      	strh	r3, [r7, #2]
 800c4f2:	b005      	add	sp, #20
 800c4f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c4f6:	bf00      	nop
 800c4f8:	2000276c 	andcs	r2, r0, ip, ror #14
 800c4fc:	20001bfc 	strdcs	r1, [r0], -ip

0800c500 <memcpy.isra.0>:
 800c500:	3801      	subs	r0, #1
 800c502:	440a      	add	r2, r1
 800c504:	4291      	cmp	r1, r2
 800c506:	d100      	bne.n	800c50a <memcpy.isra.0+0xa>
 800c508:	4770      	bx	lr
 800c50a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c50e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c512:	e7f7      	b.n	800c504 <memcpy.isra.0+0x4>

0800c514 <net_memcpy>:
 800c514:	ea40 0301 	orr.w	r3, r0, r1
 800c518:	079b      	lsls	r3, r3, #30
 800c51a:	b570      	push	{r4, r5, r6, lr}
 800c51c:	d108      	bne.n	800c530 <net_memcpy+0x1c>
 800c51e:	f022 0303 	bic.w	r3, r2, #3
 800c522:	1f04      	subs	r4, r0, #4
 800c524:	18cd      	adds	r5, r1, r3
 800c526:	42a9      	cmp	r1, r5
 800c528:	d108      	bne.n	800c53c <net_memcpy+0x28>
 800c52a:	1ad2      	subs	r2, r2, r3
 800c52c:	4403      	add	r3, r0
 800c52e:	e000      	b.n	800c532 <net_memcpy+0x1e>
 800c530:	4603      	mov	r3, r0
 800c532:	3b01      	subs	r3, #1
 800c534:	440a      	add	r2, r1
 800c536:	4291      	cmp	r1, r2
 800c538:	d105      	bne.n	800c546 <net_memcpy+0x32>
 800c53a:	bd70      	pop	{r4, r5, r6, pc}
 800c53c:	f851 6b04 	ldr.w	r6, [r1], #4
 800c540:	f844 6f04 	str.w	r6, [r4, #4]!
 800c544:	e7ef      	b.n	800c526 <net_memcpy+0x12>
 800c546:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c54a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c54e:	e7f2      	b.n	800c536 <net_memcpy+0x22>

0800c550 <udp_set_ip>:
 800c550:	2204      	movs	r2, #4
 800c552:	b513      	push	{r0, r1, r4, lr}
 800c554:	4604      	mov	r4, r0
 800c556:	6803      	ldr	r3, [r0, #0]
 800c558:	eb0d 0102 	add.w	r1, sp, r2
 800c55c:	4808      	ldr	r0, [pc, #32]	; (800c580 <udp_set_ip+0x30>)
 800c55e:	9301      	str	r3, [sp, #4]
 800c560:	f7ff ffce 	bl	800c500 <memcpy.isra.0>
 800c564:	6862      	ldr	r2, [r4, #4]
 800c566:	4b07      	ldr	r3, [pc, #28]	; (800c584 <udp_set_ip+0x34>)
 800c568:	43d1      	mvns	r1, r2
 800c56a:	6019      	str	r1, [r3, #0]
 800c56c:	6823      	ldr	r3, [r4, #0]
 800c56e:	4013      	ands	r3, r2
 800c570:	4a05      	ldr	r2, [pc, #20]	; (800c588 <udp_set_ip+0x38>)
 800c572:	6013      	str	r3, [r2, #0]
 800c574:	68a2      	ldr	r2, [r4, #8]
 800c576:	4b05      	ldr	r3, [pc, #20]	; (800c58c <udp_set_ip+0x3c>)
 800c578:	601a      	str	r2, [r3, #0]
 800c57a:	b002      	add	sp, #8
 800c57c:	bd10      	pop	{r4, pc}
 800c57e:	bf00      	nop
 800c580:	20008a86 	andcs	r8, r0, r6, lsl #21
 800c584:	20002d9c 	mulcs	r0, ip, sp
 800c588:	20002da4 	andcs	r2, r0, r4, lsr #27
 800c58c:	20002da0 	andcs	r2, r0, r0, lsr #27

0800c590 <udp_bind>:
 800c590:	4a0a      	ldr	r2, [pc, #40]	; (800c5bc <udp_bind+0x2c>)
 800c592:	4603      	mov	r3, r0
 800c594:	b510      	push	{r4, lr}
 800c596:	2000      	movs	r0, #0
 800c598:	4614      	mov	r4, r2
 800c59a:	f852 1b04 	ldr.w	r1, [r2], #4
 800c59e:	4299      	cmp	r1, r3
 800c5a0:	d008      	beq.n	800c5b4 <udp_bind+0x24>
 800c5a2:	b141      	cbz	r1, 800c5b6 <udp_bind+0x26>
 800c5a4:	3001      	adds	r0, #1
 800c5a6:	2808      	cmp	r0, #8
 800c5a8:	d1f7      	bne.n	800c59a <udp_bind+0xa>
 800c5aa:	4805      	ldr	r0, [pc, #20]	; (800c5c0 <udp_bind+0x30>)
 800c5ac:	f002 fdee 	bl	800f18c <console_error>
 800c5b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c5b4:	bd10      	pop	{r4, pc}
 800c5b6:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c5ba:	e7fb      	b.n	800c5b4 <udp_bind+0x24>
 800c5bc:	20002dac 	andcs	r2, r0, ip, lsr #27
 800c5c0:	080132f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, ip, sp}

0800c5c4 <udp_unbind>:
 800c5c4:	4a0c      	ldr	r2, [pc, #48]	; (800c5f8 <udp_unbind+0x34>)
 800c5c6:	2300      	movs	r3, #0
 800c5c8:	4611      	mov	r1, r2
 800c5ca:	b510      	push	{r4, lr}
 800c5cc:	f852 4b04 	ldr.w	r4, [r2], #4
 800c5d0:	4284      	cmp	r4, r0
 800c5d2:	d108      	bne.n	800c5e6 <udp_unbind+0x22>
 800c5d4:	2000      	movs	r0, #0
 800c5d6:	f640 3294 	movw	r2, #2964	; 0xb94
 800c5da:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c5de:	4353      	muls	r3, r2
 800c5e0:	4a06      	ldr	r2, [pc, #24]	; (800c5fc <udp_unbind+0x38>)
 800c5e2:	50d0      	str	r0, [r2, r3]
 800c5e4:	bd10      	pop	{r4, pc}
 800c5e6:	3301      	adds	r3, #1
 800c5e8:	2b08      	cmp	r3, #8
 800c5ea:	d1ef      	bne.n	800c5cc <udp_unbind+0x8>
 800c5ec:	4804      	ldr	r0, [pc, #16]	; (800c600 <udp_unbind+0x3c>)
 800c5ee:	f002 fdcd 	bl	800f18c <console_error>
 800c5f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c5f6:	e7f5      	b.n	800c5e4 <udp_unbind+0x20>
 800c5f8:	20002dac 	andcs	r2, r0, ip, lsr #27
 800c5fc:	20002dcc 	andcs	r2, r0, ip, asr #27
 800c600:	080132f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, ip, sp}

0800c604 <udp_recv>:
 800c604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c608:	4604      	mov	r4, r0
 800c60a:	4698      	mov	r8, r3
 800c60c:	f640 3394 	movw	r3, #2964	; 0xb94
 800c610:	435c      	muls	r4, r3
 800c612:	4608      	mov	r0, r1
 800c614:	4915      	ldr	r1, [pc, #84]	; (800c66c <udp_recv+0x68>)
 800c616:	190f      	adds	r7, r1, r4
 800c618:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c61c:	5b0b      	ldrh	r3, [r1, r4]
 800c61e:	4563      	cmp	r3, ip
 800c620:	d021      	beq.n	800c666 <udp_recv+0x62>
 800c622:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c626:	fb03 fc0c 	mul.w	ip, r3, ip
 800c62a:	eb0c 0604 	add.w	r6, ip, r4
 800c62e:	440e      	add	r6, r1
 800c630:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c634:	3404      	adds	r4, #4
 800c636:	4295      	cmp	r5, r2
 800c638:	bf28      	it	cs
 800c63a:	4615      	movcs	r5, r2
 800c63c:	4464      	add	r4, ip
 800c63e:	462a      	mov	r2, r5
 800c640:	4421      	add	r1, r4
 800c642:	f7ff ff67 	bl	800c514 <net_memcpy>
 800c646:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c64a:	f8c8 3000 	str.w	r3, [r8]
 800c64e:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c652:	9b06      	ldr	r3, [sp, #24]
 800c654:	801a      	strh	r2, [r3, #0]
 800c656:	887b      	ldrh	r3, [r7, #2]
 800c658:	3301      	adds	r3, #1
 800c65a:	f003 0301 	and.w	r3, r3, #1
 800c65e:	807b      	strh	r3, [r7, #2]
 800c660:	4628      	mov	r0, r5
 800c662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c666:	2500      	movs	r5, #0
 800c668:	e7fa      	b.n	800c660 <udp_recv+0x5c>
 800c66a:	bf00      	nop
 800c66c:	20002dcc 	andcs	r2, r0, ip, asr #27

0800c670 <udp_recv2>:
 800c670:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c672:	f640 3594 	movw	r5, #2964	; 0xb94
 800c676:	4368      	muls	r0, r5
 800c678:	4c0f      	ldr	r4, [pc, #60]	; (800c6b8 <udp_recv2+0x48>)
 800c67a:	1827      	adds	r7, r4, r0
 800c67c:	887d      	ldrh	r5, [r7, #2]
 800c67e:	5a26      	ldrh	r6, [r4, r0]
 800c680:	42ae      	cmp	r6, r5
 800c682:	d017      	beq.n	800c6b4 <udp_recv2+0x44>
 800c684:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c688:	fb0c f505 	mul.w	r5, ip, r5
 800c68c:	1d06      	adds	r6, r0, #4
 800c68e:	442e      	add	r6, r5
 800c690:	4405      	add	r5, r0
 800c692:	4426      	add	r6, r4
 800c694:	442c      	add	r4, r5
 800c696:	600e      	str	r6, [r1, #0]
 800c698:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c69c:	6011      	str	r1, [r2, #0]
 800c69e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c6a2:	801a      	strh	r2, [r3, #0]
 800c6a4:	887b      	ldrh	r3, [r7, #2]
 800c6a6:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c6aa:	3301      	adds	r3, #1
 800c6ac:	f003 0301 	and.w	r3, r3, #1
 800c6b0:	807b      	strh	r3, [r7, #2]
 800c6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6b4:	2000      	movs	r0, #0
 800c6b6:	e7fc      	b.n	800c6b2 <udp_recv2+0x42>
 800c6b8:	20002dcc 	andcs	r2, r0, ip, asr #27

0800c6bc <udp_send>:
 800c6bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c6c0:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c7f4 <udp_send+0x138>
 800c6c4:	461c      	mov	r4, r3
 800c6c6:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c6ca:	4607      	mov	r7, r0
 800c6cc:	4688      	mov	r8, r1
 800c6ce:	4616      	mov	r6, r2
 800c6d0:	2b00      	cmp	r3, #0
 800c6d2:	f000 808b 	beq.w	800c7ec <udp_send+0x130>
 800c6d6:	1c63      	adds	r3, r4, #1
 800c6d8:	d141      	bne.n	800c75e <udp_send+0xa2>
 800c6da:	4a47      	ldr	r2, [pc, #284]	; (800c7f8 <udp_send+0x13c>)
 800c6dc:	2307      	movs	r3, #7
 800c6de:	4611      	mov	r1, r2
 800c6e0:	20ff      	movs	r0, #255	; 0xff
 800c6e2:	e001      	b.n	800c6e8 <udp_send+0x2c>
 800c6e4:	f802 0b01 	strb.w	r0, [r2], #1
 800c6e8:	3b01      	subs	r3, #1
 800c6ea:	d1fb      	bne.n	800c6e4 <udp_send+0x28>
 800c6ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c6f0:	83cb      	strh	r3, [r1, #30]
 800c6f2:	840b      	strh	r3, [r1, #32]
 800c6f4:	2500      	movs	r5, #0
 800c6f6:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c7fc <udp_send+0x140>
 800c6fa:	4c3f      	ldr	r4, [pc, #252]	; (800c7f8 <udp_send+0x13c>)
 800c6fc:	f8ba 3000 	ldrh.w	r3, [sl]
 800c700:	2114      	movs	r1, #20
 800c702:	8263      	strh	r3, [r4, #18]
 800c704:	f106 031c 	add.w	r3, r6, #28
 800c708:	ba5b      	rev16	r3, r3
 800c70a:	f104 000e 	add.w	r0, r4, #14
 800c70e:	8223      	strh	r3, [r4, #16]
 800c710:	8325      	strh	r5, [r4, #24]
 800c712:	f001 fc1e 	bl	800df52 <net_chksum>
 800c716:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c71a:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c71e:	ba5b      	rev16	r3, r3
 800c720:	8463      	strh	r3, [r4, #34]	; 0x22
 800c722:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c726:	4632      	mov	r2, r6
 800c728:	ba5b      	rev16	r3, r3
 800c72a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c72c:	f106 0308 	add.w	r3, r6, #8
 800c730:	ba5b      	rev16	r3, r3
 800c732:	bf28      	it	cs
 800c734:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c738:	4641      	mov	r1, r8
 800c73a:	8320      	strh	r0, [r4, #24]
 800c73c:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c740:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c742:	f7ff fee7 	bl	800c514 <net_memcpy>
 800c746:	4620      	mov	r0, r4
 800c748:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c74c:	f004 f960 	bl	8010a10 <emac_eth_send>
 800c750:	f8ba 3000 	ldrh.w	r3, [sl]
 800c754:	4628      	mov	r0, r5
 800c756:	3301      	adds	r3, #1
 800c758:	f8aa 3000 	strh.w	r3, [sl]
 800c75c:	e037      	b.n	800c7ce <udp_send+0x112>
 800c75e:	4b28      	ldr	r3, [pc, #160]	; (800c800 <udp_send+0x144>)
 800c760:	681b      	ldr	r3, [r3, #0]
 800c762:	43a3      	bics	r3, r4
 800c764:	d10f      	bne.n	800c786 <udp_send+0xca>
 800c766:	2307      	movs	r3, #7
 800c768:	21ff      	movs	r1, #255	; 0xff
 800c76a:	4a23      	ldr	r2, [pc, #140]	; (800c7f8 <udp_send+0x13c>)
 800c76c:	e001      	b.n	800c772 <udp_send+0xb6>
 800c76e:	f802 1b01 	strb.w	r1, [r2], #1
 800c772:	3b01      	subs	r3, #1
 800c774:	d1fb      	bne.n	800c76e <udp_send+0xb2>
 800c776:	2204      	movs	r2, #4
 800c778:	4822      	ldr	r0, [pc, #136]	; (800c804 <udp_send+0x148>)
 800c77a:	eb0d 0102 	add.w	r1, sp, r2
 800c77e:	9401      	str	r4, [sp, #4]
 800c780:	f7ff febe 	bl	800c500 <memcpy.isra.0>
 800c784:	e7b6      	b.n	800c6f4 <udp_send+0x38>
 800c786:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c78a:	2be0      	cmp	r3, #224	; 0xe0
 800c78c:	d10e      	bne.n	800c7ac <udp_send+0xf0>
 800c78e:	491e      	ldr	r1, [pc, #120]	; (800c808 <udp_send+0x14c>)
 800c790:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c794:	70cb      	strb	r3, [r1, #3]
 800c796:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c79a:	710b      	strb	r3, [r1, #4]
 800c79c:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c7a0:	2206      	movs	r2, #6
 800c7a2:	4815      	ldr	r0, [pc, #84]	; (800c7f8 <udp_send+0x13c>)
 800c7a4:	714b      	strb	r3, [r1, #5]
 800c7a6:	f7ff feab 	bl	800c500 <memcpy.isra.0>
 800c7aa:	e7e4      	b.n	800c776 <udp_send+0xba>
 800c7ac:	4b17      	ldr	r3, [pc, #92]	; (800c80c <udp_send+0x150>)
 800c7ae:	681b      	ldr	r3, [r3, #0]
 800c7b0:	43a3      	bics	r3, r4
 800c7b2:	d00f      	beq.n	800c7d4 <udp_send+0x118>
 800c7b4:	4d16      	ldr	r5, [pc, #88]	; (800c810 <udp_send+0x154>)
 800c7b6:	4910      	ldr	r1, [pc, #64]	; (800c7f8 <udp_send+0x13c>)
 800c7b8:	6828      	ldr	r0, [r5, #0]
 800c7ba:	f001 f897 	bl	800d8ec <arp_cache_lookup>
 800c7be:	682b      	ldr	r3, [r5, #0]
 800c7c0:	4298      	cmp	r0, r3
 800c7c2:	d0d8      	beq.n	800c776 <udp_send+0xba>
 800c7c4:	4813      	ldr	r0, [pc, #76]	; (800c814 <udp_send+0x158>)
 800c7c6:	f002 fce1 	bl	800f18c <console_error>
 800c7ca:	f06f 0002 	mvn.w	r0, #2
 800c7ce:	b002      	add	sp, #8
 800c7d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c7d4:	4620      	mov	r0, r4
 800c7d6:	4908      	ldr	r1, [pc, #32]	; (800c7f8 <udp_send+0x13c>)
 800c7d8:	f001 f888 	bl	800d8ec <arp_cache_lookup>
 800c7dc:	42a0      	cmp	r0, r4
 800c7de:	d0ca      	beq.n	800c776 <udp_send+0xba>
 800c7e0:	480d      	ldr	r0, [pc, #52]	; (800c818 <udp_send+0x15c>)
 800c7e2:	f002 fcd3 	bl	800f18c <console_error>
 800c7e6:	f06f 0001 	mvn.w	r0, #1
 800c7ea:	e7f0      	b.n	800c7ce <udp_send+0x112>
 800c7ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c7f0:	e7ed      	b.n	800c7ce <udp_send+0x112>
 800c7f2:	bf00      	nop
 800c7f4:	20002dac 	andcs	r2, r0, ip, lsr #27
 800c7f8:	20008a6c 	andcs	r8, r0, ip, ror #20
 800c7fc:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c800:	20002d9c 	mulcs	r0, ip, sp
 800c804:	20008a8a 	andcs	r8, r0, sl, lsl #21
 800c808:	20000014 	andcs	r0, r0, r4, lsl r0
 800c80c:	20002da4 	andcs	r2, r0, r4, lsr #27
 800c810:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c814:	080132ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 800c818:	08013325 	stmdaeq	r1, {r0, r2, r5, r8, r9, ip, sp}

0800c81c <strlen>:
 800c81c:	4603      	mov	r3, r0
 800c81e:	461a      	mov	r2, r3
 800c820:	7811      	ldrb	r1, [r2, #0]
 800c822:	3301      	adds	r3, #1
 800c824:	2900      	cmp	r1, #0
 800c826:	d1fa      	bne.n	800c81e <strlen+0x2>
 800c828:	1a10      	subs	r0, r2, r0
 800c82a:	4770      	bx	lr

0800c82c <strcmp>:
 800c82c:	1e43      	subs	r3, r0, #1
 800c82e:	3901      	subs	r1, #1
 800c830:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c834:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c838:	4290      	cmp	r0, r2
 800c83a:	d001      	beq.n	800c840 <strcmp+0x14>
 800c83c:	1a80      	subs	r0, r0, r2
 800c83e:	e001      	b.n	800c844 <strcmp+0x18>
 800c840:	2800      	cmp	r0, #0
 800c842:	d1f5      	bne.n	800c830 <strcmp+0x4>
 800c844:	4770      	bx	lr

0800c846 <strcpy.isra.0>:
 800c846:	3801      	subs	r0, #1
 800c848:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c84c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c850:	2b00      	cmp	r3, #0
 800c852:	d1f9      	bne.n	800c848 <strcpy.isra.0+0x2>
 800c854:	4770      	bx	lr

0800c856 <strcat.isra.0>:
 800c856:	b538      	push	{r3, r4, r5, lr}
 800c858:	4604      	mov	r4, r0
 800c85a:	460d      	mov	r5, r1
 800c85c:	f7ff ffde 	bl	800c81c <strlen>
 800c860:	4629      	mov	r1, r5
 800c862:	4420      	add	r0, r4
 800c864:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c868:	f7ff bfed 	b.w	800c846 <strcpy.isra.0>

0800c86c <MDNS::MDNS()>:
 800c86c:	b513      	push	{r0, r1, r4, lr}
 800c86e:	4604      	mov	r4, r0
 800c870:	a901      	add	r1, sp, #4
 800c872:	4804      	ldr	r0, [pc, #16]	; (800c884 <MDNS::MDNS()+0x18>)
 800c874:	f002 fe06 	bl	800f484 <inet_aton>
 800c878:	4620      	mov	r0, r4
 800c87a:	4b03      	ldr	r3, [pc, #12]	; (800c888 <MDNS::MDNS()+0x1c>)
 800c87c:	9a01      	ldr	r2, [sp, #4]
 800c87e:	601a      	str	r2, [r3, #0]
 800c880:	b002      	add	sp, #8
 800c882:	bd10      	pop	{r4, pc}
 800c884:	08013360 	stmdaeq	r1, {r5, r6, r8, r9, ip, sp}
 800c888:	20009060 	andcs	r9, r0, r0, rrx

0800c88c <MDNS::SetName(char const*)>:
 800c88c:	b538      	push	{r3, r4, r5, lr}
 800c88e:	4d0b      	ldr	r5, [pc, #44]	; (800c8bc <MDNS::SetName(char const*)+0x30>)
 800c890:	460c      	mov	r4, r1
 800c892:	6828      	ldr	r0, [r5, #0]
 800c894:	b108      	cbz	r0, 800c89a <MDNS::SetName(char const*)+0xe>
 800c896:	f002 fdef 	bl	800f478 <operator delete[](void*)>
 800c89a:	4620      	mov	r0, r4
 800c89c:	f7ff ffbe 	bl	800c81c <strlen>
 800c8a0:	3007      	adds	r0, #7
 800c8a2:	f002 fded 	bl	800f480 <operator new[](unsigned int)>
 800c8a6:	4621      	mov	r1, r4
 800c8a8:	6028      	str	r0, [r5, #0]
 800c8aa:	f7ff ffcc 	bl	800c846 <strcpy.isra.0>
 800c8ae:	6828      	ldr	r0, [r5, #0]
 800c8b0:	4903      	ldr	r1, [pc, #12]	; (800c8c0 <MDNS::SetName(char const*)+0x34>)
 800c8b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c8b6:	f7ff bfce 	b.w	800c856 <strcat.isra.0>
 800c8ba:	bf00      	nop
 800c8bc:	20009490 	mulcs	r0, r0, r4
 800c8c0:	08013370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, sp}

0800c8c4 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800c8c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c8c8:	f04f 0e00 	mov.w	lr, #0
 800c8cc:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800c8d0:	4675      	mov	r5, lr
 800c8d2:	4e1b      	ldr	r6, [pc, #108]	; (800c940 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800c8d4:	4f1b      	ldr	r7, [pc, #108]	; (800c944 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800c8d6:	780b      	ldrb	r3, [r1, #0]
 800c8d8:	1c68      	adds	r0, r5, #1
 800c8da:	b913      	cbnz	r3, 800c8e2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800c8dc:	7013      	strb	r3, [r2, #0]
 800c8de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c8e2:	2b3f      	cmp	r3, #63	; 0x3f
 800c8e4:	d91c      	bls.n	800c920 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800c8e6:	7849      	ldrb	r1, [r1, #1]
 800c8e8:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800c8ec:	430b      	orrs	r3, r1
 800c8ee:	6839      	ldr	r1, [r7, #0]
 800c8f0:	f1be 0f00 	cmp.w	lr, #0
 800c8f4:	bf08      	it	eq
 800c8f6:	4605      	moveq	r5, r0
 800c8f8:	5ccc      	ldrb	r4, [r1, r3]
 800c8fa:	3301      	adds	r3, #1
 800c8fc:	4419      	add	r1, r3
 800c8fe:	2300      	movs	r3, #0
 800c900:	42a3      	cmp	r3, r4
 800c902:	5cc8      	ldrb	r0, [r1, r3]
 800c904:	d309      	bcc.n	800c91a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800c906:	f04f 0e01 	mov.w	lr, #1
 800c90a:	4421      	add	r1, r4
 800c90c:	4414      	add	r4, r2
 800c90e:	780b      	ldrb	r3, [r1, #0]
 800c910:	b10b      	cbz	r3, 800c916 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800c912:	f804 cb01 	strb.w	ip, [r4], #1
 800c916:	4622      	mov	r2, r4
 800c918:	e7dd      	b.n	800c8d6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800c91a:	54d0      	strb	r0, [r2, r3]
 800c91c:	3301      	adds	r3, #1
 800c91e:	e7ef      	b.n	800c900 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800c920:	4688      	mov	r8, r1
 800c922:	18d4      	adds	r4, r2, r3
 800c924:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800c928:	f802 9b01 	strb.w	r9, [r2], #1
 800c92c:	4294      	cmp	r4, r2
 800c92e:	d1f9      	bne.n	800c924 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800c930:	1c5a      	adds	r2, r3, #1
 800c932:	4411      	add	r1, r2
 800c934:	f1be 0f00 	cmp.w	lr, #0
 800c938:	d1e9      	bne.n	800c90e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c93a:	181d      	adds	r5, r3, r0
 800c93c:	e7e7      	b.n	800c90e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c93e:	bf00      	nop
 800c940:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800c944:	20009494 	mulcs	r0, r4, r4

0800c948 <MDNS::FindFirstDotFromRight(char const*) const>:
 800c948:	b510      	push	{r4, lr}
 800c94a:	4608      	mov	r0, r1
 800c94c:	460c      	mov	r4, r1
 800c94e:	f7ff ff65 	bl	800c81c <strlen>
 800c952:	4420      	add	r0, r4
 800c954:	42a0      	cmp	r0, r4
 800c956:	d903      	bls.n	800c960 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800c958:	f810 3901 	ldrb.w	r3, [r0], #-1
 800c95c:	2b2e      	cmp	r3, #46	; 0x2e
 800c95e:	d1f9      	bne.n	800c954 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800c960:	3001      	adds	r0, #1
 800c962:	bd10      	pop	{r4, pc}

0800c964 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800c964:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c966:	4614      	mov	r4, r2
 800c968:	460f      	mov	r7, r1
 800c96a:	1c60      	adds	r0, r4, #1
 800c96c:	463d      	mov	r5, r7
 800c96e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800c972:	b946      	cbnz	r6, 800c986 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800c974:	1a69      	subs	r1, r5, r1
 800c976:	7021      	strb	r1, [r4, #0]
 800c978:	7829      	ldrb	r1, [r5, #0]
 800c97a:	b949      	cbnz	r1, 800c990 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800c97c:	b10b      	cbz	r3, 800c982 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800c97e:	f800 1b01 	strb.w	r1, [r0], #1
 800c982:	1a80      	subs	r0, r0, r2
 800c984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c986:	2e2e      	cmp	r6, #46	; 0x2e
 800c988:	d0f4      	beq.n	800c974 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800c98a:	f800 6b01 	strb.w	r6, [r0], #1
 800c98e:	e7ed      	b.n	800c96c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800c990:	4604      	mov	r4, r0
 800c992:	1c69      	adds	r1, r5, #1
 800c994:	e7e8      	b.n	800c968 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800c998 <MDNS::CreateAnswerLocalIpAddress()>:
 800c998:	2384      	movs	r3, #132	; 0x84
 800c99a:	b510      	push	{r4, lr}
 800c99c:	4c0f      	ldr	r4, [pc, #60]	; (800c9dc <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800c99e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800c9a2:	80e3      	strh	r3, [r4, #6]
 800c9a4:	2300      	movs	r3, #0
 800c9a6:	490e      	ldr	r1, [pc, #56]	; (800c9e0 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800c9a8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800c9ac:	6809      	ldr	r1, [r1, #0]
 800c9ae:	f104 0210 	add.w	r2, r4, #16
 800c9b2:	2301      	movs	r3, #1
 800c9b4:	f7ff ffd6 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c9b8:	490a      	ldr	r1, [pc, #40]	; (800c9e4 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800c9ba:	1813      	adds	r3, r2, r0
 800c9bc:	5011      	str	r1, [r2, r0]
 800c9be:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800c9c2:	605a      	str	r2, [r3, #4]
 800c9c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c9c8:	811a      	strh	r2, [r3, #8]
 800c9ca:	4a07      	ldr	r2, [pc, #28]	; (800c9e8 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800c9cc:	6812      	ldr	r2, [r2, #0]
 800c9ce:	6912      	ldr	r2, [r2, #16]
 800c9d0:	f8c3 200a 	str.w	r2, [r3, #10]
 800c9d4:	1b1b      	subs	r3, r3, r4
 800c9d6:	330a      	adds	r3, #10
 800c9d8:	6023      	str	r3, [r4, #0]
 800c9da:	bd10      	pop	{r4, pc}
 800c9dc:	20009064 	andcs	r9, r0, r4, rrx
 800c9e0:	20009490 	mulcs	r0, r0, r4
 800c9e4:	01800100 	orreq	r0, r0, r0, lsl #2
 800c9e8:	20009498 	mulcs	r0, r8, r4

0800c9ec <MDNS::Start()>:
 800c9ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c9ee:	4c1d      	ldr	r4, [pc, #116]	; (800ca64 <MDNS::Start()+0x78>)
 800c9f0:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800c9f4:	4605      	mov	r5, r0
 800c9f6:	6820      	ldr	r0, [r4, #0]
 800c9f8:	f000 fb26 	bl	800d048 <Network::Begin(unsigned short)>
 800c9fc:	4e1a      	ldr	r6, [pc, #104]	; (800ca68 <MDNS::Start()+0x7c>)
 800c9fe:	4f1b      	ldr	r7, [pc, #108]	; (800ca6c <MDNS::Start()+0x80>)
 800ca00:	4601      	mov	r1, r0
 800ca02:	6030      	str	r0, [r6, #0]
 800ca04:	683a      	ldr	r2, [r7, #0]
 800ca06:	6820      	ldr	r0, [r4, #0]
 800ca08:	f000 fb2f 	bl	800d06a <Network::JoinGroup(int, unsigned int)>
 800ca0c:	4b18      	ldr	r3, [pc, #96]	; (800ca70 <MDNS::Start()+0x84>)
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	b923      	cbnz	r3, 800ca1c <MDNS::Start()+0x30>
 800ca12:	6821      	ldr	r1, [r4, #0]
 800ca14:	4628      	mov	r0, r5
 800ca16:	311c      	adds	r1, #28
 800ca18:	f7ff ff38 	bl	800c88c <MDNS::SetName(char const*)>
 800ca1c:	4628      	mov	r0, r5
 800ca1e:	f7ff ffbb 	bl	800c998 <MDNS::CreateAnswerLocalIpAddress()>
 800ca22:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ca26:	4913      	ldr	r1, [pc, #76]	; (800ca74 <MDNS::Start()+0x88>)
 800ca28:	7830      	ldrb	r0, [r6, #0]
 800ca2a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ca2e:	9300      	str	r3, [sp, #0]
 800ca30:	683b      	ldr	r3, [r7, #0]
 800ca32:	f7ff fe43 	bl	800c6bc <udp_send>
 800ca36:	233f      	movs	r3, #63	; 0x3f
 800ca38:	6820      	ldr	r0, [r4, #0]
 800ca3a:	4c0f      	ldr	r4, [pc, #60]	; (800ca78 <MDNS::Start()+0x8c>)
 800ca3c:	f100 025c 	add.w	r2, r0, #92	; 0x5c
 800ca40:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ca44:	b929      	cbnz	r1, 800ca52 <MDNS::Start()+0x66>
 800ca46:	4413      	add	r3, r2
 800ca48:	429a      	cmp	r2, r3
 800ca4a:	d006      	beq.n	800ca5a <MDNS::Start()+0x6e>
 800ca4c:	f802 1b01 	strb.w	r1, [r2], #1
 800ca50:	e7fa      	b.n	800ca48 <MDNS::Start()+0x5c>
 800ca52:	3b01      	subs	r3, #1
 800ca54:	f802 1b01 	strb.w	r1, [r2], #1
 800ca58:	d1f2      	bne.n	800ca40 <MDNS::Start()+0x54>
 800ca5a:	2300      	movs	r3, #0
 800ca5c:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800ca60:	b003      	add	sp, #12
 800ca62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca64:	20009498 	mulcs	r0, r8, r4
 800ca68:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ca6c:	20009060 	andcs	r9, r0, r0, rrx
 800ca70:	20009490 	mulcs	r0, r0, r4
 800ca74:	20009064 	andcs	r9, r0, r4, rrx
 800ca78:	08013370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, sp}

0800ca7c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800ca7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca80:	4c1b      	ldr	r4, [pc, #108]	; (800caf0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800ca82:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ca86:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ca8a:	2300      	movs	r3, #0
 800ca8c:	f854 100c 	ldr.w	r1, [r4, ip]
 800ca90:	4607      	mov	r7, r0
 800ca92:	f7ff ff67 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ca96:	2301      	movs	r3, #1
 800ca98:	7bac      	ldrb	r4, [r5, #14]
 800ca9a:	4616      	mov	r6, r2
 800ca9c:	4915      	ldr	r1, [pc, #84]	; (800caf4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ca9e:	4402      	add	r2, r0
 800caa0:	4815      	ldr	r0, [pc, #84]	; (800caf8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800caa2:	429c      	cmp	r4, r3
 800caa4:	bf18      	it	ne
 800caa6:	4601      	movne	r1, r0
 800caa8:	4638      	mov	r0, r7
 800caaa:	f7ff ff5b 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800caae:	4b13      	ldr	r3, [pc, #76]	; (800cafc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800cab0:	1814      	adds	r4, r2, r0
 800cab2:	5013      	str	r3, [r2, r0]
 800cab4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cab8:	6063      	str	r3, [r4, #4]
 800caba:	4b11      	ldr	r3, [pc, #68]	; (800cb00 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800cabc:	f8d3 8000 	ldr.w	r8, [r3]
 800cac0:	4640      	mov	r0, r8
 800cac2:	f7ff feab 	bl	800c81c <strlen>
 800cac6:	f100 0308 	add.w	r3, r0, #8
 800caca:	ba5b      	rev16	r3, r3
 800cacc:	8123      	strh	r3, [r4, #8]
 800cace:	2300      	movs	r3, #0
 800cad0:	f8c4 300a 	str.w	r3, [r4, #10]
 800cad4:	89ab      	ldrh	r3, [r5, #12]
 800cad6:	f104 0210 	add.w	r2, r4, #16
 800cada:	ba5b      	rev16	r3, r3
 800cadc:	81e3      	strh	r3, [r4, #14]
 800cade:	4641      	mov	r1, r8
 800cae0:	2301      	movs	r3, #1
 800cae2:	4638      	mov	r0, r7
 800cae4:	f7ff ff3e 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cae8:	4410      	add	r0, r2
 800caea:	1b80      	subs	r0, r0, r6
 800caec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800caf0:	20009268 	andcs	r9, r0, r8, ror #4
 800caf4:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}
 800caf8:	08013389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp}
 800cafc:	01802100 	orreq	r2, r0, r0, lsl #2
 800cb00:	20009490 	mulcs	r0, r0, r4

0800cb04 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cb04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb08:	4e19      	ldr	r6, [pc, #100]	; (800cb70 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cb0a:	010f      	lsls	r7, r1, #4
 800cb0c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800cb10:	2300      	movs	r3, #0
 800cb12:	59f1      	ldr	r1, [r6, r7]
 800cb14:	4604      	mov	r4, r0
 800cb16:	f7ff ff25 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cb1a:	2301      	movs	r3, #1
 800cb1c:	7bae      	ldrb	r6, [r5, #14]
 800cb1e:	4690      	mov	r8, r2
 800cb20:	4914      	ldr	r1, [pc, #80]	; (800cb74 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800cb22:	4402      	add	r2, r0
 800cb24:	4814      	ldr	r0, [pc, #80]	; (800cb78 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800cb26:	429e      	cmp	r6, r3
 800cb28:	bf18      	it	ne
 800cb2a:	4601      	movne	r1, r0
 800cb2c:	4620      	mov	r0, r4
 800cb2e:	f7ff ff19 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cb32:	4b12      	ldr	r3, [pc, #72]	; (800cb7c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800cb34:	1816      	adds	r6, r2, r0
 800cb36:	5013      	str	r3, [r2, r0]
 800cb38:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cb3c:	68a8      	ldr	r0, [r5, #8]
 800cb3e:	6073      	str	r3, [r6, #4]
 800cb40:	f106 040b 	add.w	r4, r6, #11
 800cb44:	b938      	cbnz	r0, 800cb56 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800cb46:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cb4a:	72b0      	strb	r0, [r6, #10]
 800cb4c:	8133      	strh	r3, [r6, #8]
 800cb4e:	eba4 0008 	sub.w	r0, r4, r8
 800cb52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb56:	f7ff fe61 	bl	800c81c <strlen>
 800cb5a:	4607      	mov	r7, r0
 800cb5c:	1c43      	adds	r3, r0, #1
 800cb5e:	72b0      	strb	r0, [r6, #10]
 800cb60:	ba5b      	rev16	r3, r3
 800cb62:	4620      	mov	r0, r4
 800cb64:	68a9      	ldr	r1, [r5, #8]
 800cb66:	8133      	strh	r3, [r6, #8]
 800cb68:	f7ff fe6d 	bl	800c846 <strcpy.isra.0>
 800cb6c:	443c      	add	r4, r7
 800cb6e:	e7ee      	b.n	800cb4e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800cb70:	20009268 	andcs	r9, r0, r8, ror #4
 800cb74:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}
 800cb78:	08013389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp}
 800cb7c:	01801000 	orreq	r1, r0, r0

0800cb80 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800cb80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cb84:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800cbe8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800cb88:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800cb8c:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800cb90:	6869      	ldr	r1, [r5, #4]
 800cb92:	2301      	movs	r3, #1
 800cb94:	4607      	mov	r7, r0
 800cb96:	f7ff fee5 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cb9a:	4b14      	ldr	r3, [pc, #80]	; (800cbec <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800cb9c:	f858 8009 	ldr.w	r8, [r8, r9]
 800cba0:	5013      	str	r3, [r2, r0]
 800cba2:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cba6:	1816      	adds	r6, r2, r0
 800cba8:	6073      	str	r3, [r6, #4]
 800cbaa:	4640      	mov	r0, r8
 800cbac:	4614      	mov	r4, r2
 800cbae:	f7ff fe35 	bl	800c81c <strlen>
 800cbb2:	f100 030d 	add.w	r3, r0, #13
 800cbb6:	ba5b      	rev16	r3, r3
 800cbb8:	4641      	mov	r1, r8
 800cbba:	8133      	strh	r3, [r6, #8]
 800cbbc:	f106 020a 	add.w	r2, r6, #10
 800cbc0:	2300      	movs	r3, #0
 800cbc2:	4638      	mov	r0, r7
 800cbc4:	f7ff fece 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cbc8:	2301      	movs	r3, #1
 800cbca:	4402      	add	r2, r0
 800cbcc:	7bad      	ldrb	r5, [r5, #14]
 800cbce:	4808      	ldr	r0, [pc, #32]	; (800cbf0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800cbd0:	4908      	ldr	r1, [pc, #32]	; (800cbf4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800cbd2:	429d      	cmp	r5, r3
 800cbd4:	bf18      	it	ne
 800cbd6:	4601      	movne	r1, r0
 800cbd8:	4638      	mov	r0, r7
 800cbda:	f7ff fec3 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cbde:	4410      	add	r0, r2
 800cbe0:	1b00      	subs	r0, r0, r4
 800cbe2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cbe6:	bf00      	nop
 800cbe8:	20009268 	andcs	r9, r0, r8, ror #4
 800cbec:	01000c00 	tsteq	r0, r0, lsl #24
 800cbf0:	08013389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp}
 800cbf4:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}

0800cbf8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800cbf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbfa:	460f      	mov	r7, r1
 800cbfc:	2301      	movs	r3, #1
 800cbfe:	490f      	ldr	r1, [pc, #60]	; (800cc3c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800cc00:	4606      	mov	r6, r0
 800cc02:	f7ff feaf 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc06:	4b0e      	ldr	r3, [pc, #56]	; (800cc40 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800cc08:	490e      	ldr	r1, [pc, #56]	; (800cc44 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800cc0a:	5013      	str	r3, [r2, r0]
 800cc0c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cc10:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800cc14:	684f      	ldr	r7, [r1, #4]
 800cc16:	1815      	adds	r5, r2, r0
 800cc18:	606b      	str	r3, [r5, #4]
 800cc1a:	4638      	mov	r0, r7
 800cc1c:	4614      	mov	r4, r2
 800cc1e:	f7ff fdfd 	bl	800c81c <strlen>
 800cc22:	1c83      	adds	r3, r0, #2
 800cc24:	ba5b      	rev16	r3, r3
 800cc26:	812b      	strh	r3, [r5, #8]
 800cc28:	f105 020a 	add.w	r2, r5, #10
 800cc2c:	2301      	movs	r3, #1
 800cc2e:	4639      	mov	r1, r7
 800cc30:	4630      	mov	r0, r6
 800cc32:	f7ff fe97 	bl	800c964 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc36:	4410      	add	r0, r2
 800cc38:	1b00      	subs	r0, r0, r4
 800cc3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc3c:	08013377 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp}
 800cc40:	01000c00 	tsteq	r0, r0, lsl #24
 800cc44:	20009268 	andcs	r9, r0, r8, ror #4

0800cc48 <MDNS::CreateMDNSMessage(unsigned int)>:
 800cc48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc4a:	2384      	movs	r3, #132	; 0x84
 800cc4c:	4d19      	ldr	r5, [pc, #100]	; (800ccb4 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800cc4e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800cc52:	80eb      	strh	r3, [r5, #6]
 800cc54:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cc58:	f105 0410 	add.w	r4, r5, #16
 800cc5c:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800cc60:	4622      	mov	r2, r4
 800cc62:	4606      	mov	r6, r0
 800cc64:	460f      	mov	r7, r1
 800cc66:	f7ff ff09 	bl	800ca7c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800cc6a:	4404      	add	r4, r0
 800cc6c:	4622      	mov	r2, r4
 800cc6e:	4639      	mov	r1, r7
 800cc70:	4630      	mov	r0, r6
 800cc72:	f7ff ff47 	bl	800cb04 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800cc76:	4404      	add	r4, r0
 800cc78:	4622      	mov	r2, r4
 800cc7a:	4639      	mov	r1, r7
 800cc7c:	4630      	mov	r0, r6
 800cc7e:	f7ff ffbb 	bl	800cbf8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800cc82:	4404      	add	r4, r0
 800cc84:	4622      	mov	r2, r4
 800cc86:	4639      	mov	r1, r7
 800cc88:	4630      	mov	r0, r6
 800cc8a:	f7ff ff79 	bl	800cb80 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800cc8e:	4a0a      	ldr	r2, [pc, #40]	; (800ccb8 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800cc90:	4404      	add	r4, r0
 800cc92:	f852 3b10 	ldr.w	r3, [r2], #16
 800cc96:	1e60      	subs	r0, r4, #1
 800cc98:	3b0c      	subs	r3, #12
 800cc9a:	4619      	mov	r1, r3
 800cc9c:	3901      	subs	r1, #1
 800cc9e:	d204      	bcs.n	800ccaa <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800cca0:	441c      	add	r4, r3
 800cca2:	4b06      	ldr	r3, [pc, #24]	; (800ccbc <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800cca4:	1ae4      	subs	r4, r4, r3
 800cca6:	602c      	str	r4, [r5, #0]
 800cca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ccaa:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ccae:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ccb2:	e7f3      	b.n	800cc9c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800ccb4:	2000928c 	andcs	r9, r0, ip, lsl #5
 800ccb8:	20009064 	andcs	r9, r0, r4, rrx
 800ccbc:	20009290 	mulcs	r0, r0, r2

0800ccc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800ccc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccc4:	4d40      	ldr	r5, [pc, #256]	; (800cdc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ccc6:	b085      	sub	sp, #20
 800ccc8:	682c      	ldr	r4, [r5, #0]
 800ccca:	4680      	mov	r8, r0
 800cccc:	460f      	mov	r7, r1
 800ccce:	4616      	mov	r6, r2
 800ccd0:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800ccd4:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800ccd8:	b11c      	cbz	r4, 800cce2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800ccda:	692a      	ldr	r2, [r5, #16]
 800ccdc:	2a00      	cmp	r2, #0
 800ccde:	d16e      	bne.n	800cdbe <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800cce0:	2401      	movs	r4, #1
 800cce2:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800cce6:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800ccea:	8193      	strh	r3, [r2, #12]
 800ccec:	f882 b00e 	strb.w	fp, [r2, #14]
 800ccf0:	2f00      	cmp	r7, #0
 800ccf2:	d154      	bne.n	800cd9e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800ccf4:	4b35      	ldr	r3, [pc, #212]	; (800cdcc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ccf6:	6818      	ldr	r0, [r3, #0]
 800ccf8:	301c      	adds	r0, #28
 800ccfa:	f7ff fd8f 	bl	800c81c <strlen>
 800ccfe:	4607      	mov	r7, r0
 800cd00:	4630      	mov	r0, r6
 800cd02:	f7ff fd8b 	bl	800c81c <strlen>
 800cd06:	4438      	add	r0, r7
 800cd08:	3001      	adds	r0, #1
 800cd0a:	f002 fbb9 	bl	800f480 <operator new[](unsigned int)>
 800cd0e:	4b2f      	ldr	r3, [pc, #188]	; (800cdcc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cd10:	f845 0009 	str.w	r0, [r5, r9]
 800cd14:	6819      	ldr	r1, [r3, #0]
 800cd16:	311c      	adds	r1, #28
 800cd18:	f7ff fd95 	bl	800c846 <strcpy.isra.0>
 800cd1c:	f855 0009 	ldr.w	r0, [r5, r9]
 800cd20:	4631      	mov	r1, r6
 800cd22:	f7ff fd98 	bl	800c856 <strcat.isra.0>
 800cd26:	4631      	mov	r1, r6
 800cd28:	4640      	mov	r0, r8
 800cd2a:	f7ff fe0d 	bl	800c948 <MDNS::FindFirstDotFromRight(char const*) const>
 800cd2e:	eb05 0709 	add.w	r7, r5, r9
 800cd32:	4605      	mov	r5, r0
 800cd34:	f7ff fd72 	bl	800c81c <strlen>
 800cd38:	300d      	adds	r0, #13
 800cd3a:	f002 fba1 	bl	800f480 <operator new[](unsigned int)>
 800cd3e:	4629      	mov	r1, r5
 800cd40:	6078      	str	r0, [r7, #4]
 800cd42:	f7ff fd80 	bl	800c846 <strcpy.isra.0>
 800cd46:	4922      	ldr	r1, [pc, #136]	; (800cdd0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800cd48:	6878      	ldr	r0, [r7, #4]
 800cd4a:	f7ff fd84 	bl	800c856 <strcat.isra.0>
 800cd4e:	4921      	ldr	r1, [pc, #132]	; (800cdd4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800cd50:	4b21      	ldr	r3, [pc, #132]	; (800cdd8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800cd52:	6878      	ldr	r0, [r7, #4]
 800cd54:	f1bb 0f01 	cmp.w	fp, #1
 800cd58:	bf18      	it	ne
 800cd5a:	4619      	movne	r1, r3
 800cd5c:	f7ff fd7b 	bl	800c856 <strcat.isra.0>
 800cd60:	f1ba 0f00 	cmp.w	sl, #0
 800cd64:	d009      	beq.n	800cd7a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800cd66:	4650      	mov	r0, sl
 800cd68:	f7ff fd58 	bl	800c81c <strlen>
 800cd6c:	3001      	adds	r0, #1
 800cd6e:	f002 fb87 	bl	800f480 <operator new[](unsigned int)>
 800cd72:	4651      	mov	r1, sl
 800cd74:	60b8      	str	r0, [r7, #8]
 800cd76:	f7ff fd66 	bl	800c846 <strcpy.isra.0>
 800cd7a:	4621      	mov	r1, r4
 800cd7c:	4640      	mov	r0, r8
 800cd7e:	f7ff ff63 	bl	800cc48 <MDNS::CreateMDNSMessage(unsigned int)>
 800cd82:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cd86:	4915      	ldr	r1, [pc, #84]	; (800cddc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cd88:	4815      	ldr	r0, [pc, #84]	; (800cde0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800cd8a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cd8e:	9300      	str	r3, [sp, #0]
 800cd90:	4b14      	ldr	r3, [pc, #80]	; (800cde4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800cd92:	7800      	ldrb	r0, [r0, #0]
 800cd94:	681b      	ldr	r3, [r3, #0]
 800cd96:	f7ff fc91 	bl	800c6bc <udp_send>
 800cd9a:	2001      	movs	r0, #1
 800cd9c:	e010      	b.n	800cdc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800cd9e:	4638      	mov	r0, r7
 800cda0:	f7ff fd3c 	bl	800c81c <strlen>
 800cda4:	9003      	str	r0, [sp, #12]
 800cda6:	4630      	mov	r0, r6
 800cda8:	f7ff fd38 	bl	800c81c <strlen>
 800cdac:	9b03      	ldr	r3, [sp, #12]
 800cdae:	4418      	add	r0, r3
 800cdb0:	3001      	adds	r0, #1
 800cdb2:	f002 fb65 	bl	800f480 <operator new[](unsigned int)>
 800cdb6:	4639      	mov	r1, r7
 800cdb8:	f845 0009 	str.w	r0, [r5, r9]
 800cdbc:	e7ac      	b.n	800cd18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800cdbe:	2000      	movs	r0, #0
 800cdc0:	b005      	add	sp, #20
 800cdc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdc6:	bf00      	nop
 800cdc8:	20009268 	andcs	r9, r0, r8, ror #4
 800cdcc:	20009498 	mulcs	r0, r8, r4
 800cdd0:	080123df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sp}
 800cdd4:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}
 800cdd8:	08013389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp}
 800cddc:	2000928c 	andcs	r9, r0, ip, lsl #5
 800cde0:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cde4:	20009060 	andcs	r9, r0, r0, rrx

0800cde8 <MDNS::HandleRequest(unsigned short)>:
 800cde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdec:	4605      	mov	r5, r0
 800cdee:	2700      	movs	r7, #0
 800cdf0:	f04f 080c 	mov.w	r8, #12
 800cdf4:	b0c5      	sub	sp, #276	; 0x114
 800cdf6:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800ceb8 <MDNS::HandleRequest(unsigned short)+0xd0>
 800cdfa:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800cebc <MDNS::HandleRequest(unsigned short)+0xd4>
 800cdfe:	9103      	str	r1, [sp, #12]
 800ce00:	9b03      	ldr	r3, [sp, #12]
 800ce02:	42bb      	cmp	r3, r7
 800ce04:	d802      	bhi.n	800ce0c <MDNS::HandleRequest(unsigned short)+0x24>
 800ce06:	b045      	add	sp, #276	; 0x114
 800ce08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce0c:	f8da 1000 	ldr.w	r1, [sl]
 800ce10:	aa04      	add	r2, sp, #16
 800ce12:	4441      	add	r1, r8
 800ce14:	4628      	mov	r0, r5
 800ce16:	f7ff fd55 	bl	800c8c4 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800ce1a:	f8da 2000 	ldr.w	r2, [sl]
 800ce1e:	4440      	add	r0, r8
 800ce20:	1813      	adds	r3, r2, r0
 800ce22:	885b      	ldrh	r3, [r3, #2]
 800ce24:	f100 0804 	add.w	r8, r0, #4
 800ce28:	ba5b      	rev16	r3, r3
 800ce2a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ce2e:	2b01      	cmp	r3, #1
 800ce30:	d13d      	bne.n	800ceae <MDNS::HandleRequest(unsigned short)+0xc6>
 800ce32:	5a14      	ldrh	r4, [r2, r0]
 800ce34:	4b22      	ldr	r3, [pc, #136]	; (800cec0 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800ce36:	ba64      	rev16	r4, r4
 800ce38:	6818      	ldr	r0, [r3, #0]
 800ce3a:	a904      	add	r1, sp, #16
 800ce3c:	b2a4      	uxth	r4, r4
 800ce3e:	f7ff fcf5 	bl	800c82c <strcmp>
 800ce42:	b968      	cbnz	r0, 800ce60 <MDNS::HandleRequest(unsigned short)+0x78>
 800ce44:	2c01      	cmp	r4, #1
 800ce46:	d10b      	bne.n	800ce60 <MDNS::HandleRequest(unsigned short)+0x78>
 800ce48:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ce4c:	491d      	ldr	r1, [pc, #116]	; (800cec4 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800ce4e:	481e      	ldr	r0, [pc, #120]	; (800cec8 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ce50:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ce54:	9300      	str	r3, [sp, #0]
 800ce56:	4b1d      	ldr	r3, [pc, #116]	; (800cecc <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ce58:	7800      	ldrb	r0, [r0, #0]
 800ce5a:	681b      	ldr	r3, [r3, #0]
 800ce5c:	f7ff fc2e 	bl	800c6bc <udp_send>
 800ce60:	481b      	ldr	r0, [pc, #108]	; (800ced0 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800ce62:	a904      	add	r1, sp, #16
 800ce64:	f7ff fce2 	bl	800c82c <strcmp>
 800ce68:	f04f 0900 	mov.w	r9, #0
 800ce6c:	4e19      	ldr	r6, [pc, #100]	; (800ced4 <MDNS::HandleRequest(unsigned short)+0xec>)
 800ce6e:	9002      	str	r0, [sp, #8]
 800ce70:	6833      	ldr	r3, [r6, #0]
 800ce72:	b1c3      	cbz	r3, 800cea6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ce74:	9b02      	ldr	r3, [sp, #8]
 800ce76:	b123      	cbz	r3, 800ce82 <MDNS::HandleRequest(unsigned short)+0x9a>
 800ce78:	6870      	ldr	r0, [r6, #4]
 800ce7a:	a904      	add	r1, sp, #16
 800ce7c:	f7ff fcd6 	bl	800c82c <strcmp>
 800ce80:	b988      	cbnz	r0, 800cea6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ce82:	2c0c      	cmp	r4, #12
 800ce84:	d10f      	bne.n	800cea6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ce86:	4649      	mov	r1, r9
 800ce88:	4628      	mov	r0, r5
 800ce8a:	f7ff fedd 	bl	800cc48 <MDNS::CreateMDNSMessage(unsigned int)>
 800ce8e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ce92:	480d      	ldr	r0, [pc, #52]	; (800cec8 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ce94:	9300      	str	r3, [sp, #0]
 800ce96:	4b0d      	ldr	r3, [pc, #52]	; (800cecc <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ce98:	f8bb 2000 	ldrh.w	r2, [fp]
 800ce9c:	681b      	ldr	r3, [r3, #0]
 800ce9e:	490e      	ldr	r1, [pc, #56]	; (800ced8 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800cea0:	7800      	ldrb	r0, [r0, #0]
 800cea2:	f7ff fc0b 	bl	800c6bc <udp_send>
 800cea6:	3610      	adds	r6, #16
 800cea8:	f1b9 0f00 	cmp.w	r9, #0
 800ceac:	d001      	beq.n	800ceb2 <MDNS::HandleRequest(unsigned short)+0xca>
 800ceae:	3701      	adds	r7, #1
 800ceb0:	e7a6      	b.n	800ce00 <MDNS::HandleRequest(unsigned short)+0x18>
 800ceb2:	f04f 0901 	mov.w	r9, #1
 800ceb6:	e7db      	b.n	800ce70 <MDNS::HandleRequest(unsigned short)+0x88>
 800ceb8:	20009494 	mulcs	r0, r4, r4
 800cebc:	2000928c 	andcs	r9, r0, ip, lsl #5
 800cec0:	20009490 	mulcs	r0, r0, r4
 800cec4:	20009064 	andcs	r9, r0, r4, rrx
 800cec8:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cecc:	20009060 	andcs	r9, r0, r0, rrx
 800ced0:	08013377 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp}
 800ced4:	20009268 	andcs	r9, r0, r8, ror #4
 800ced8:	20009290 	mulcs	r0, r0, r2

0800cedc <MDNS::Parse()>:
 800cedc:	4b08      	ldr	r3, [pc, #32]	; (800cf00 <MDNS::Parse()+0x24>)
 800cede:	681a      	ldr	r2, [r3, #0]
 800cee0:	8853      	ldrh	r3, [r2, #2]
 800cee2:	ba5b      	rev16	r3, r3
 800cee4:	b299      	uxth	r1, r3
 800cee6:	041b      	lsls	r3, r3, #16
 800cee8:	d408      	bmi.n	800cefc <MDNS::Parse()+0x20>
 800ceea:	0b89      	lsrs	r1, r1, #14
 800ceec:	d106      	bne.n	800cefc <MDNS::Parse()+0x20>
 800ceee:	8891      	ldrh	r1, [r2, #4]
 800cef0:	b28b      	uxth	r3, r1
 800cef2:	b11b      	cbz	r3, 800cefc <MDNS::Parse()+0x20>
 800cef4:	ba49      	rev16	r1, r1
 800cef6:	b289      	uxth	r1, r1
 800cef8:	f7ff bf76 	b.w	800cde8 <MDNS::HandleRequest(unsigned short)>
 800cefc:	4770      	bx	lr
 800cefe:	bf00      	nop
 800cf00:	20009494 	mulcs	r0, r4, r4

0800cf04 <MDNS::Run()>:
 800cf04:	b538      	push	{r3, r4, r5, lr}
 800cf06:	4d0c      	ldr	r5, [pc, #48]	; (800cf38 <MDNS::Run()+0x34>)
 800cf08:	4604      	mov	r4, r0
 800cf0a:	480c      	ldr	r0, [pc, #48]	; (800cf3c <MDNS::Run()+0x38>)
 800cf0c:	462b      	mov	r3, r5
 800cf0e:	4a0c      	ldr	r2, [pc, #48]	; (800cf40 <MDNS::Run()+0x3c>)
 800cf10:	490c      	ldr	r1, [pc, #48]	; (800cf44 <MDNS::Run()+0x40>)
 800cf12:	7800      	ldrb	r0, [r0, #0]
 800cf14:	f7ff fbac 	bl	800c670 <udp_recv2>
 800cf18:	4b0b      	ldr	r3, [pc, #44]	; (800cf48 <MDNS::Run()+0x44>)
 800cf1a:	882a      	ldrh	r2, [r5, #0]
 800cf1c:	8018      	strh	r0, [r3, #0]
 800cf1e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cf22:	429a      	cmp	r2, r3
 800cf24:	d106      	bne.n	800cf34 <MDNS::Run()+0x30>
 800cf26:	280c      	cmp	r0, #12
 800cf28:	d904      	bls.n	800cf34 <MDNS::Run()+0x30>
 800cf2a:	4620      	mov	r0, r4
 800cf2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf30:	f7ff bfd4 	b.w	800cedc <MDNS::Parse()>
 800cf34:	bd38      	pop	{r3, r4, r5, pc}
 800cf36:	bf00      	nop
 800cf38:	2000905c 	andcs	r9, r0, ip, asr r0
 800cf3c:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cf40:	20009058 	andcs	r9, r0, r8, asr r0
 800cf44:	20009494 	mulcs	r0, r4, r4
 800cf48:	20009288 	andcs	r9, r0, r8, lsl #5

0800cf4c <MDNS::Print()>:
 800cf4c:	b510      	push	{r4, lr}
 800cf4e:	4816      	ldr	r0, [pc, #88]	; (800cfa8 <MDNS::Print()+0x5c>)
 800cf50:	f002 fd84 	bl	800fa5c <printf>
 800cf54:	4b15      	ldr	r3, [pc, #84]	; (800cfac <MDNS::Print()+0x60>)
 800cf56:	681b      	ldr	r3, [r3, #0]
 800cf58:	3301      	adds	r3, #1
 800cf5a:	d104      	bne.n	800cf66 <MDNS::Print()+0x1a>
 800cf5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf60:	4813      	ldr	r0, [pc, #76]	; (800cfb0 <MDNS::Print()+0x64>)
 800cf62:	f002 bd7b 	b.w	800fa5c <printf>
 800cf66:	4b13      	ldr	r3, [pc, #76]	; (800cfb4 <MDNS::Print()+0x68>)
 800cf68:	4c13      	ldr	r4, [pc, #76]	; (800cfb8 <MDNS::Print()+0x6c>)
 800cf6a:	6819      	ldr	r1, [r3, #0]
 800cf6c:	4813      	ldr	r0, [pc, #76]	; (800cfbc <MDNS::Print()+0x70>)
 800cf6e:	f002 fd75 	bl	800fa5c <printf>
 800cf72:	6823      	ldr	r3, [r4, #0]
 800cf74:	b14b      	cbz	r3, 800cf8a <MDNS::Print()+0x3e>
 800cf76:	4a12      	ldr	r2, [pc, #72]	; (800cfc0 <MDNS::Print()+0x74>)
 800cf78:	68a3      	ldr	r3, [r4, #8]
 800cf7a:	6861      	ldr	r1, [r4, #4]
 800cf7c:	2b00      	cmp	r3, #0
 800cf7e:	bf08      	it	eq
 800cf80:	4613      	moveq	r3, r2
 800cf82:	4810      	ldr	r0, [pc, #64]	; (800cfc4 <MDNS::Print()+0x78>)
 800cf84:	89a2      	ldrh	r2, [r4, #12]
 800cf86:	f002 fd69 	bl	800fa5c <printf>
 800cf8a:	6923      	ldr	r3, [r4, #16]
 800cf8c:	b15b      	cbz	r3, 800cfa6 <MDNS::Print()+0x5a>
 800cf8e:	69a3      	ldr	r3, [r4, #24]
 800cf90:	4a0b      	ldr	r2, [pc, #44]	; (800cfc0 <MDNS::Print()+0x74>)
 800cf92:	6961      	ldr	r1, [r4, #20]
 800cf94:	2b00      	cmp	r3, #0
 800cf96:	bf08      	it	eq
 800cf98:	4613      	moveq	r3, r2
 800cf9a:	480a      	ldr	r0, [pc, #40]	; (800cfc4 <MDNS::Print()+0x78>)
 800cf9c:	8ba2      	ldrh	r2, [r4, #28]
 800cf9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cfa2:	f002 bd5b 	b.w	800fa5c <printf>
 800cfa6:	bd10      	pop	{r4, pc}
 800cfa8:	08013394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, sp}
 800cfac:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cfb0:	0801339a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp}
 800cfb4:	20009490 	mulcs	r0, r0, r4
 800cfb8:	20009268 	andcs	r9, r0, r8, ror #4
 800cfbc:	080133a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, ip, sp}
 800cfc0:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 800cfc4:	080133b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, ip, sp}

0800cfc8 <strncpy.constprop.0.isra.0>:
 800cfc8:	233f      	movs	r3, #63	; 0x3f
 800cfca:	3901      	subs	r1, #1
 800cfcc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800cfd0:	b92a      	cbnz	r2, 800cfde <strncpy.constprop.0.isra.0+0x16>
 800cfd2:	4403      	add	r3, r0
 800cfd4:	4298      	cmp	r0, r3
 800cfd6:	d006      	beq.n	800cfe6 <strncpy.constprop.0.isra.0+0x1e>
 800cfd8:	f800 2b01 	strb.w	r2, [r0], #1
 800cfdc:	e7fa      	b.n	800cfd4 <strncpy.constprop.0.isra.0+0xc>
 800cfde:	3b01      	subs	r3, #1
 800cfe0:	f800 2b01 	strb.w	r2, [r0], #1
 800cfe4:	d1f2      	bne.n	800cfcc <strncpy.constprop.0.isra.0+0x4>
 800cfe6:	4770      	bx	lr

0800cfe8 <Network::Network()>:
 800cfe8:	4a11      	ldr	r2, [pc, #68]	; (800d030 <Network::Network()+0x48>)
 800cfea:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800cfee:	6010      	str	r0, [r2, #0]
 800cff0:	2201      	movs	r2, #1
 800cff2:	2300      	movs	r3, #0
 800cff4:	e9c0 1200 	strd	r1, r2, [r0]
 800cff8:	2200      	movs	r2, #0
 800cffa:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800cffe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d002:	490c      	ldr	r1, [pc, #48]	; (800d034 <Network::Network()+0x4c>)
 800d004:	60c2      	str	r2, [r0, #12]
 800d006:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800d00a:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800d00e:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800d012:	6083      	str	r3, [r0, #8]
 800d014:	6183      	str	r3, [r0, #24]
 800d016:	7703      	strb	r3, [r0, #28]
 800d018:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800d01c:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800d020:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d024:	f802 3b01 	strb.w	r3, [r2], #1
 800d028:	2b00      	cmp	r3, #0
 800d02a:	d1f9      	bne.n	800d020 <Network::Network()+0x38>
 800d02c:	4770      	bx	lr
 800d02e:	bf00      	nop
 800d030:	20009498 	mulcs	r0, r8, r4
 800d034:	080133bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, ip, sp}

0800d038 <Network::Shutdown()>:
 800d038:	b508      	push	{r3, lr}
 800d03a:	30b8      	adds	r0, #184	; 0xb8
 800d03c:	f001 fb90 	bl	800e760 <NetworkDisplay::ShowShutdown()>
 800d040:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d044:	f7fa b8d4 	b.w	80071f0 <net_shutdown>

0800d048 <Network::Begin(unsigned short)>:
 800d048:	4608      	mov	r0, r1
 800d04a:	f7ff baa1 	b.w	800c590 <udp_bind>

0800d04e <Network::End(unsigned short)>:
 800d04e:	4608      	mov	r0, r1
 800d050:	f7ff bab8 	b.w	800c5c4 <udp_unbind>

0800d054 <Network::MacAddressCopyTo(unsigned char*)>:
 800d054:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800d058:	3901      	subs	r1, #1
 800d05a:	30a2      	adds	r0, #162	; 0xa2
 800d05c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d060:	4283      	cmp	r3, r0
 800d062:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d066:	d1f9      	bne.n	800d05c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d068:	4770      	bx	lr

0800d06a <Network::JoinGroup(int, unsigned int)>:
 800d06a:	4610      	mov	r0, r2
 800d06c:	f000 bef8 	b.w	800de60 <igmp_join>

0800d070 <Network::LeaveGroup(int, unsigned int)>:
 800d070:	4610      	mov	r0, r2
 800d072:	f000 bf21 	b.w	800deb8 <igmp_leave>

0800d076 <Network::SetDefaultIp()>:
 800d076:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d07a:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800d07e:	041b      	lsls	r3, r3, #16
 800d080:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d084:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800d088:	3302      	adds	r3, #2
 800d08a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d08e:	22ff      	movs	r2, #255	; 0xff
 800d090:	6103      	str	r3, [r0, #16]
 800d092:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800d096:	4770      	bx	lr

0800d098 <Network::Init(NetworkParamsStore*)>:
 800d098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d09c:	b08b      	sub	sp, #44	; 0x2c
 800d09e:	4604      	mov	r4, r0
 800d0a0:	a806      	add	r0, sp, #24
 800d0a2:	f000 f9b5 	bl	800d410 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d0a6:	a806      	add	r0, sp, #24
 800d0a8:	f000 f9c2 	bl	800d430 <NetworkParams::Load()>
 800d0ac:	b110      	cbz	r0, 800d0b4 <Network::Init(NetworkParamsStore*)+0x1c>
 800d0ae:	a806      	add	r0, sp, #24
 800d0b0:	f000 fba9 	bl	800d806 <NetworkParams::Dump()>
 800d0b4:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800d0b8:	f8df 822c 	ldr.w	r8, [pc, #556]	; 800d2e8 <Network::Init(NetworkParamsStore*)+0x250>
 800d0bc:	4628      	mov	r0, r5
 800d0be:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800d0c2:	f001 fb41 	bl	800e748 <NetworkDisplay::ShowEmacStart()>
 800d0c6:	4638      	mov	r0, r7
 800d0c8:	f003 fbde 	bl	8010888 <emac_start>
 800d0cc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d0d0:	f104 061c 	add.w	r6, r4, #28
 800d0d4:	9307      	str	r3, [sp, #28]
 800d0d6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d0da:	9308      	str	r3, [sp, #32]
 800d0dc:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d0e0:	9309      	str	r3, [sp, #36]	; 0x24
 800d0e2:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d0e6:	7063      	strb	r3, [r4, #1]
 800d0e8:	f8d8 3000 	ldr.w	r3, [r8]
 800d0ec:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d0f0:	bf18      	it	ne
 800d0f2:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800d0f6:	061b      	lsls	r3, r3, #24
 800d0f8:	bf58      	it	pl
 800d0fa:	2300      	movpl	r3, #0
 800d0fc:	60a2      	str	r2, [r4, #8]
 800d0fe:	bf48      	it	mi
 800d100:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800d104:	60e3      	str	r3, [r4, #12]
 800d106:	f898 3015 	ldrb.w	r3, [r8, #21]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	f040 80bc 	bne.w	800d288 <Network::Init(NetworkParamsStore*)+0x1f0>
 800d110:	4630      	mov	r0, r6
 800d112:	4976      	ldr	r1, [pc, #472]	; (800d2ec <Network::Init(NetworkParamsStore*)+0x254>)
 800d114:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d118:	f103 0c01 	add.w	ip, r3, #1
 800d11c:	2a00      	cmp	r2, #0
 800d11e:	f040 80af 	bne.w	800d280 <Network::Init(NetworkParamsStore*)+0x1e8>
 800d122:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800d126:	18e1      	adds	r1, r4, r3
 800d128:	0910      	lsrs	r0, r2, #4
 800d12a:	2a9f      	cmp	r2, #159	; 0x9f
 800d12c:	f002 020f 	and.w	r2, r2, #15
 800d130:	bf94      	ite	ls
 800d132:	3030      	addls	r0, #48	; 0x30
 800d134:	3037      	addhi	r0, #55	; 0x37
 800d136:	2a09      	cmp	r2, #9
 800d138:	bf94      	ite	ls
 800d13a:	3230      	addls	r2, #48	; 0x30
 800d13c:	3237      	addhi	r2, #55	; 0x37
 800d13e:	44a4      	add	ip, r4
 800d140:	7708      	strb	r0, [r1, #28]
 800d142:	f88c 201c 	strb.w	r2, [ip, #28]
 800d146:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800d14a:	f103 0e02 	add.w	lr, r3, #2
 800d14e:	0910      	lsrs	r0, r2, #4
 800d150:	2a9f      	cmp	r2, #159	; 0x9f
 800d152:	f002 020f 	and.w	r2, r2, #15
 800d156:	bf94      	ite	ls
 800d158:	3030      	addls	r0, #48	; 0x30
 800d15a:	3037      	addhi	r0, #55	; 0x37
 800d15c:	f103 0903 	add.w	r9, r3, #3
 800d160:	2a09      	cmp	r2, #9
 800d162:	44a6      	add	lr, r4
 800d164:	f88e 001c 	strb.w	r0, [lr, #28]
 800d168:	bf94      	ite	ls
 800d16a:	3230      	addls	r2, #48	; 0x30
 800d16c:	3237      	addhi	r2, #55	; 0x37
 800d16e:	eb04 0009 	add.w	r0, r4, r9
 800d172:	7702      	strb	r2, [r0, #28]
 800d174:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d178:	f103 0c04 	add.w	ip, r3, #4
 800d17c:	0910      	lsrs	r0, r2, #4
 800d17e:	2a9f      	cmp	r2, #159	; 0x9f
 800d180:	f002 020f 	and.w	r2, r2, #15
 800d184:	bf94      	ite	ls
 800d186:	3030      	addls	r0, #48	; 0x30
 800d188:	3037      	addhi	r0, #55	; 0x37
 800d18a:	3305      	adds	r3, #5
 800d18c:	2a09      	cmp	r2, #9
 800d18e:	4423      	add	r3, r4
 800d190:	44a4      	add	ip, r4
 800d192:	bf94      	ite	ls
 800d194:	3230      	addls	r2, #48	; 0x30
 800d196:	3237      	addhi	r2, #55	; 0x37
 800d198:	f88c 001c 	strb.w	r0, [ip, #28]
 800d19c:	771a      	strb	r2, [r3, #28]
 800d19e:	2300      	movs	r3, #0
 800d1a0:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800d1a4:	7863      	ldrb	r3, [r4, #1]
 800d1a6:	2b00      	cmp	r3, #0
 800d1a8:	f040 8098 	bne.w	800d2dc <Network::Init(NetworkParamsStore*)+0x244>
 800d1ac:	9b07      	ldr	r3, [sp, #28]
 800d1ae:	2b00      	cmp	r3, #0
 800d1b0:	d172      	bne.n	800d298 <Network::Init(NetworkParamsStore*)+0x200>
 800d1b2:	4620      	mov	r0, r4
 800d1b4:	f7ff ff5f 	bl	800d076 <Network::SetDefaultIp()>
 800d1b8:	6923      	ldr	r3, [r4, #16]
 800d1ba:	69a2      	ldr	r2, [r4, #24]
 800d1bc:	9307      	str	r3, [sp, #28]
 800d1be:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800d1c2:	1ce3      	adds	r3, r4, #3
 800d1c4:	f104 0901 	add.w	r9, r4, #1
 800d1c8:	9302      	str	r3, [sp, #8]
 800d1ca:	9300      	str	r3, [sp, #0]
 800d1cc:	4632      	mov	r2, r6
 800d1ce:	464b      	mov	r3, r9
 800d1d0:	4638      	mov	r0, r7
 800d1d2:	a907      	add	r1, sp, #28
 800d1d4:	f7f9 ffbc 	bl	8007150 <net_init>
 800d1d8:	78e3      	ldrb	r3, [r4, #3]
 800d1da:	b11b      	cbz	r3, 800d1e4 <Network::Init(NetworkParamsStore*)+0x14c>
 800d1dc:	2104      	movs	r1, #4
 800d1de:	4628      	mov	r0, r5
 800d1e0:	f001 fac4 	bl	800e76c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d1e4:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d1e8:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800d1ec:	9304      	str	r3, [sp, #16]
 800d1ee:	233c      	movs	r3, #60	; 0x3c
 800d1f0:	fb03 f30a 	mul.w	r3, r3, sl
 800d1f4:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 800d2f0 <Network::Init(NetworkParamsStore*)+0x258>
 800d1f8:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 800d2f4 <Network::Init(NetworkParamsStore*)+0x25c>
 800d1fc:	9303      	str	r3, [sp, #12]
 800d1fe:	78e3      	ldrb	r3, [r4, #3]
 800d200:	b393      	cbz	r3, 800d268 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d202:	f1ba 0f00 	cmp.w	sl, #0
 800d206:	d02f      	beq.n	800d268 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d208:	9b04      	ldr	r3, [sp, #16]
 800d20a:	b36b      	cbz	r3, 800d268 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d20c:	2104      	movs	r1, #4
 800d20e:	f8d8 0000 	ldr.w	r0, [r8]
 800d212:	f002 f84d 	bl	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 800d216:	2103      	movs	r1, #3
 800d218:	4628      	mov	r0, r5
 800d21a:	f001 faa7 	bl	800e76c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d21e:	2000      	movs	r0, #0
 800d220:	f002 fd52 	bl	800fcc8 <time>
 800d224:	9005      	str	r0, [sp, #20]
 800d226:	2000      	movs	r0, #0
 800d228:	f002 fd4e 	bl	800fcc8 <time>
 800d22c:	9b05      	ldr	r3, [sp, #20]
 800d22e:	4932      	ldr	r1, [pc, #200]	; (800d2f8 <Network::Init(NetworkParamsStore*)+0x260>)
 800d230:	1ac0      	subs	r0, r0, r3
 800d232:	9b03      	ldr	r3, [sp, #12]
 800d234:	4298      	cmp	r0, r3
 800d236:	db37      	blt.n	800d2a8 <Network::Init(NetworkParamsStore*)+0x210>
 800d238:	2101      	movs	r1, #1
 800d23a:	4628      	mov	r0, r5
 800d23c:	f001 fa96 	bl	800e76c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d240:	2101      	movs	r1, #1
 800d242:	f8d8 0000 	ldr.w	r0, [r8]
 800d246:	f002 f833 	bl	800f2b0 <LedBlink::SetMode(ledblink::Mode)>
 800d24a:	2301      	movs	r3, #1
 800d24c:	7063      	strb	r3, [r4, #1]
 800d24e:	2300      	movs	r3, #0
 800d250:	70e3      	strb	r3, [r4, #3]
 800d252:	9b02      	ldr	r3, [sp, #8]
 800d254:	4632      	mov	r2, r6
 800d256:	9300      	str	r3, [sp, #0]
 800d258:	4638      	mov	r0, r7
 800d25a:	464b      	mov	r3, r9
 800d25c:	a907      	add	r1, sp, #28
 800d25e:	f7f9 ff77 	bl	8007150 <net_init>
 800d262:	7863      	ldrb	r3, [r4, #1]
 800d264:	2b00      	cmp	r3, #0
 800d266:	d0ca      	beq.n	800d1fe <Network::Init(NetworkParamsStore*)+0x166>
 800d268:	9b07      	ldr	r3, [sp, #28]
 800d26a:	4628      	mov	r0, r5
 800d26c:	6123      	str	r3, [r4, #16]
 800d26e:	9b08      	ldr	r3, [sp, #32]
 800d270:	61a3      	str	r3, [r4, #24]
 800d272:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d274:	6163      	str	r3, [r4, #20]
 800d276:	f001 fa6d 	bl	800e754 <NetworkDisplay::ShowIp()>
 800d27a:	b00b      	add	sp, #44	; 0x2c
 800d27c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d280:	4663      	mov	r3, ip
 800d282:	f800 2b01 	strb.w	r2, [r0], #1
 800d286:	e745      	b.n	800d114 <Network::Init(NetworkParamsStore*)+0x7c>
 800d288:	4630      	mov	r0, r6
 800d28a:	491c      	ldr	r1, [pc, #112]	; (800d2fc <Network::Init(NetworkParamsStore*)+0x264>)
 800d28c:	f7ff fe9c 	bl	800cfc8 <strncpy.constprop.0.isra.0>
 800d290:	2300      	movs	r3, #0
 800d292:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800d296:	e785      	b.n	800d1a4 <Network::Init(NetworkParamsStore*)+0x10c>
 800d298:	69a1      	ldr	r1, [r4, #24]
 800d29a:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800d29e:	4053      	eors	r3, r2
 800d2a0:	420b      	tst	r3, r1
 800d2a2:	bf18      	it	ne
 800d2a4:	9209      	strne	r2, [sp, #36]	; 0x24
 800d2a6:	e78c      	b.n	800d1c2 <Network::Init(NetworkParamsStore*)+0x12a>
 800d2a8:	f8d8 3000 	ldr.w	r3, [r8]
 800d2ac:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d2b0:	f1bc 0f00 	cmp.w	ip, #0
 800d2b4:	d0b7      	beq.n	800d226 <Network::Init(NetworkParamsStore*)+0x18e>
 800d2b6:	6808      	ldr	r0, [r1, #0]
 800d2b8:	695a      	ldr	r2, [r3, #20]
 800d2ba:	1a80      	subs	r0, r0, r2
 800d2bc:	4584      	cmp	ip, r0
 800d2be:	d8b2      	bhi.n	800d226 <Network::Init(NetworkParamsStore*)+0x18e>
 800d2c0:	6808      	ldr	r0, [r1, #0]
 800d2c2:	6158      	str	r0, [r3, #20]
 800d2c4:	6918      	ldr	r0, [r3, #16]
 800d2c6:	2801      	cmp	r0, #1
 800d2c8:	f080 0201 	eor.w	r2, r0, #1
 800d2cc:	611a      	str	r2, [r3, #16]
 800d2ce:	bf16      	itet	ne
 800d2d0:	2301      	movne	r3, #1
 800d2d2:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d2d6:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d2da:	e7a4      	b.n	800d226 <Network::Init(NetworkParamsStore*)+0x18e>
 800d2dc:	2101      	movs	r1, #1
 800d2de:	4628      	mov	r0, r5
 800d2e0:	f001 fa44 	bl	800e76c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d2e4:	e76d      	b.n	800d1c2 <Network::Init(NetworkParamsStore*)+0x12a>
 800d2e6:	bf00      	nop
 800d2e8:	2000949c 	mulcs	r0, ip, r4
 800d2ec:	080133c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, ip, sp}
 800d2f0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800d2f4:	40011000 	andmi	r1, r1, r0
 800d2f8:	20009bdc 	ldrdcs	r9, [r0], -ip
 800d2fc:	200094b1 			; <UNDEFINED> instruction: 0x200094b1

0800d300 <Network::Print()>:
 800d300:	b530      	push	{r4, r5, lr}
 800d302:	4604      	mov	r4, r0
 800d304:	b085      	sub	sp, #20
 800d306:	4832      	ldr	r0, [pc, #200]	; (800d3d0 <Network::Print()+0xd0>)
 800d308:	f002 fba8 	bl	800fa5c <printf>
 800d30c:	f104 011c 	add.w	r1, r4, #28
 800d310:	4830      	ldr	r0, [pc, #192]	; (800d3d4 <Network::Print()+0xd4>)
 800d312:	f002 fba3 	bl	800fa5c <printf>
 800d316:	6861      	ldr	r1, [r4, #4]
 800d318:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800d31c:	482e      	ldr	r0, [pc, #184]	; (800d3d8 <Network::Print()+0xd8>)
 800d31e:	f002 fb9d 	bl	800fa5c <printf>
 800d322:	69a0      	ldr	r0, [r4, #24]
 800d324:	f004 fb84 	bl	8011a30 <__popcountsi2>
 800d328:	6925      	ldr	r5, [r4, #16]
 800d32a:	9001      	str	r0, [sp, #4]
 800d32c:	0e2b      	lsrs	r3, r5, #24
 800d32e:	9300      	str	r3, [sp, #0]
 800d330:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d334:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d338:	b2e9      	uxtb	r1, r5
 800d33a:	4828      	ldr	r0, [pc, #160]	; (800d3dc <Network::Print()+0xdc>)
 800d33c:	f002 fb8e 	bl	800fa5c <printf>
 800d340:	69a1      	ldr	r1, [r4, #24]
 800d342:	4827      	ldr	r0, [pc, #156]	; (800d3e0 <Network::Print()+0xe0>)
 800d344:	0e0b      	lsrs	r3, r1, #24
 800d346:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d34a:	9300      	str	r3, [sp, #0]
 800d34c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d350:	b2c9      	uxtb	r1, r1
 800d352:	f002 fb83 	bl	800fa5c <printf>
 800d356:	6961      	ldr	r1, [r4, #20]
 800d358:	4822      	ldr	r0, [pc, #136]	; (800d3e4 <Network::Print()+0xe4>)
 800d35a:	0e0b      	lsrs	r3, r1, #24
 800d35c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d360:	9300      	str	r3, [sp, #0]
 800d362:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d366:	b2c9      	uxtb	r1, r1
 800d368:	f002 fb78 	bl	800fa5c <printf>
 800d36c:	69a3      	ldr	r3, [r4, #24]
 800d36e:	6921      	ldr	r1, [r4, #16]
 800d370:	481d      	ldr	r0, [pc, #116]	; (800d3e8 <Network::Print()+0xe8>)
 800d372:	ea61 0103 	orn	r1, r1, r3
 800d376:	0e0b      	lsrs	r3, r1, #24
 800d378:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d37c:	9300      	str	r3, [sp, #0]
 800d37e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d382:	b2c9      	uxtb	r1, r1
 800d384:	f002 fb6a 	bl	800fa5c <printf>
 800d388:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800d38c:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800d390:	9302      	str	r3, [sp, #8]
 800d392:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800d396:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800d39a:	9301      	str	r3, [sp, #4]
 800d39c:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800d3a0:	4812      	ldr	r0, [pc, #72]	; (800d3ec <Network::Print()+0xec>)
 800d3a2:	9300      	str	r3, [sp, #0]
 800d3a4:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800d3a8:	f002 fb58 	bl	800fa5c <printf>
 800d3ac:	4b10      	ldr	r3, [pc, #64]	; (800d3f0 <Network::Print()+0xf0>)
 800d3ae:	681b      	ldr	r3, [r3, #0]
 800d3b0:	78da      	ldrb	r2, [r3, #3]
 800d3b2:	b952      	cbnz	r2, 800d3ca <Network::Print()+0xca>
 800d3b4:	785b      	ldrb	r3, [r3, #1]
 800d3b6:	2b00      	cmp	r3, #0
 800d3b8:	bf14      	ite	ne
 800d3ba:	2144      	movne	r1, #68	; 0x44
 800d3bc:	2153      	moveq	r1, #83	; 0x53
 800d3be:	480d      	ldr	r0, [pc, #52]	; (800d3f4 <Network::Print()+0xf4>)
 800d3c0:	b005      	add	sp, #20
 800d3c2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d3c6:	f002 bb49 	b.w	800fa5c <printf>
 800d3ca:	215a      	movs	r1, #90	; 0x5a
 800d3cc:	e7f7      	b.n	800d3be <Network::Print()+0xbe>
 800d3ce:	bf00      	nop
 800d3d0:	080133d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, ip, sp}
 800d3d4:	080133d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, sp}
 800d3d8:	080133ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, ip, sp}
 800d3dc:	080133ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}
 800d3e0:	0801341c 	stmdaeq	r1, {r2, r3, r4, sl, ip, sp}
 800d3e4:	08013436 	stmdaeq	r1, {r1, r2, r4, r5, sl, ip, sp}
 800d3e8:	08013450 	stmdaeq	r1, {r4, r6, sl, ip, sp}
 800d3ec:	0801346a 	stmdaeq	r1, {r1, r3, r5, r6, sl, ip, sp}
 800d3f0:	20009498 	mulcs	r0, r8, r4
 800d3f4:	08013496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip, sp}

0800d3f8 <Network::TcpBegin(unsigned short)>:
 800d3f8:	4608      	mov	r0, r1
 800d3fa:	f7ff b803 	b.w	800c404 <tcp_begin>

0800d3fe <Network::TcpRead(int, unsigned char const**)>:
 800d3fe:	4608      	mov	r0, r1
 800d400:	4611      	mov	r1, r2
 800d402:	f7ff b83d 	b.w	800c480 <tcp_read>

0800d406 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d406:	4608      	mov	r0, r1
 800d408:	4611      	mov	r1, r2
 800d40a:	461a      	mov	r2, r3
 800d40c:	f7ff b814 	b.w	800c438 <tcp_write>

0800d410 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d410:	4b06      	ldr	r3, [pc, #24]	; (800d42c <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d412:	b510      	push	{r4, lr}
 800d414:	225e      	movs	r2, #94	; 0x5e
 800d416:	4604      	mov	r4, r0
 800d418:	6001      	str	r1, [r0, #0]
 800d41a:	2100      	movs	r1, #0
 800d41c:	4618      	mov	r0, r3
 800d41e:	f002 f903 	bl	800f628 <memset>
 800d422:	2201      	movs	r2, #1
 800d424:	7502      	strb	r2, [r0, #20]
 800d426:	4620      	mov	r0, r4
 800d428:	bd10      	pop	{r4, pc}
 800d42a:	bf00      	nop
 800d42c:	2000949c 	mulcs	r0, ip, r4

0800d430 <NetworkParams::Load()>:
 800d430:	b508      	push	{r3, lr}
 800d432:	2300      	movs	r3, #0
 800d434:	4905      	ldr	r1, [pc, #20]	; (800d44c <NetworkParams::Load()+0x1c>)
 800d436:	6800      	ldr	r0, [r0, #0]
 800d438:	700b      	strb	r3, [r1, #0]
 800d43a:	704b      	strb	r3, [r1, #1]
 800d43c:	708b      	strb	r3, [r1, #2]
 800d43e:	70cb      	strb	r3, [r1, #3]
 800d440:	b118      	cbz	r0, 800d44a <NetworkParams::Load()+0x1a>
 800d442:	6803      	ldr	r3, [r0, #0]
 800d444:	68db      	ldr	r3, [r3, #12]
 800d446:	4798      	blx	r3
 800d448:	2001      	movs	r0, #1
 800d44a:	bd08      	pop	{r3, pc}
 800d44c:	2000949c 	mulcs	r0, ip, r4

0800d450 <NetworkParams::Load(char const*, unsigned int)>:
 800d450:	6803      	ldr	r3, [r0, #0]
 800d452:	b1eb      	cbz	r3, 800d490 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d454:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d456:	2300      	movs	r3, #0
 800d458:	460e      	mov	r6, r1
 800d45a:	4617      	mov	r7, r2
 800d45c:	4605      	mov	r5, r0
 800d45e:	4c0d      	ldr	r4, [pc, #52]	; (800d494 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d460:	4602      	mov	r2, r0
 800d462:	490d      	ldr	r1, [pc, #52]	; (800d498 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d464:	4668      	mov	r0, sp
 800d466:	7023      	strb	r3, [r4, #0]
 800d468:	7063      	strb	r3, [r4, #1]
 800d46a:	70a3      	strb	r3, [r4, #2]
 800d46c:	70e3      	strb	r3, [r4, #3]
 800d46e:	f001 fad5 	bl	800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d472:	463a      	mov	r2, r7
 800d474:	4631      	mov	r1, r6
 800d476:	4668      	mov	r0, sp
 800d478:	f001 fad4 	bl	800ea24 <ReadConfigFile::Read(char const*, unsigned int)>
 800d47c:	6828      	ldr	r0, [r5, #0]
 800d47e:	4621      	mov	r1, r4
 800d480:	6803      	ldr	r3, [r0, #0]
 800d482:	689b      	ldr	r3, [r3, #8]
 800d484:	4798      	blx	r3
 800d486:	4668      	mov	r0, sp
 800d488:	f001 facb 	bl	800ea22 <ReadConfigFile::~ReadConfigFile()>
 800d48c:	b003      	add	sp, #12
 800d48e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d490:	4770      	bx	lr
 800d492:	bf00      	nop
 800d494:	2000949c 	mulcs	r0, ip, r4
 800d498:	0800d5cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, ip, lr, pc}

0800d49c <NetworkParams::callbackFunction(char const*)>:
 800d49c:	b530      	push	{r4, r5, lr}
 800d49e:	460c      	mov	r4, r1
 800d4a0:	b085      	sub	sp, #20
 800d4a2:	4620      	mov	r0, r4
 800d4a4:	4942      	ldr	r1, [pc, #264]	; (800d5b0 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d4a6:	f10d 0207 	add.w	r2, sp, #7
 800d4aa:	f001 fb67 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d4ae:	b980      	cbnz	r0, 800d4d2 <NetworkParams::callbackFunction(char const*)+0x36>
 800d4b0:	4940      	ldr	r1, [pc, #256]	; (800d5b4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d4b2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d4b6:	680b      	ldr	r3, [r1, #0]
 800d4b8:	b142      	cbz	r2, 800d4cc <NetworkParams::callbackFunction(char const*)+0x30>
 800d4ba:	f023 0301 	bic.w	r3, r3, #1
 800d4be:	3a00      	subs	r2, #0
 800d4c0:	bf18      	it	ne
 800d4c2:	2201      	movne	r2, #1
 800d4c4:	600b      	str	r3, [r1, #0]
 800d4c6:	750a      	strb	r2, [r1, #20]
 800d4c8:	b005      	add	sp, #20
 800d4ca:	bd30      	pop	{r4, r5, pc}
 800d4cc:	f043 0301 	orr.w	r3, r3, #1
 800d4d0:	e7f5      	b.n	800d4be <NetworkParams::callbackFunction(char const*)+0x22>
 800d4d2:	4620      	mov	r0, r4
 800d4d4:	4938      	ldr	r1, [pc, #224]	; (800d5b8 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d4d6:	f10d 0207 	add.w	r2, sp, #7
 800d4da:	f001 fb4f 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d4de:	b988      	cbnz	r0, 800d504 <NetworkParams::callbackFunction(char const*)+0x68>
 800d4e0:	4a34      	ldr	r2, [pc, #208]	; (800d5b4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d4e2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d4e6:	6813      	ldr	r3, [r2, #0]
 800d4e8:	1e4d      	subs	r5, r1, #1
 800d4ea:	2d04      	cmp	r5, #4
 800d4ec:	bf97      	itett	ls
 800d4ee:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d4f2:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d4f6:	6013      	strls	r3, [r2, #0]
 800d4f8:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d4fc:	bf84      	itt	hi
 800d4fe:	6013      	strhi	r3, [r2, #0]
 800d500:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d504:	4620      	mov	r0, r4
 800d506:	492d      	ldr	r1, [pc, #180]	; (800d5bc <NetworkParams::callbackFunction(char const*)+0x120>)
 800d508:	aa02      	add	r2, sp, #8
 800d50a:	f001 fad8 	bl	800eabe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d50e:	b9d0      	cbnz	r0, 800d546 <NetworkParams::callbackFunction(char const*)+0xaa>
 800d510:	9b02      	ldr	r3, [sp, #8]
 800d512:	b2d9      	uxtb	r1, r3
 800d514:	29ac      	cmp	r1, #172	; 0xac
 800d516:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d51a:	d00a      	beq.n	800d532 <NetworkParams::callbackFunction(char const*)+0x96>
 800d51c:	29c0      	cmp	r1, #192	; 0xc0
 800d51e:	d00c      	beq.n	800d53a <NetworkParams::callbackFunction(char const*)+0x9e>
 800d520:	290a      	cmp	r1, #10
 800d522:	d10d      	bne.n	800d540 <NetworkParams::callbackFunction(char const*)+0xa4>
 800d524:	4a23      	ldr	r2, [pc, #140]	; (800d5b4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d526:	6053      	str	r3, [r2, #4]
 800d528:	6813      	ldr	r3, [r2, #0]
 800d52a:	f043 0302 	orr.w	r3, r3, #2
 800d52e:	6013      	str	r3, [r2, #0]
 800d530:	e7ca      	b.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d532:	3a10      	subs	r2, #16
 800d534:	2a0f      	cmp	r2, #15
 800d536:	d8c7      	bhi.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d538:	e7f4      	b.n	800d524 <NetworkParams::callbackFunction(char const*)+0x88>
 800d53a:	2aa8      	cmp	r2, #168	; 0xa8
 800d53c:	d1c4      	bne.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d53e:	e7f1      	b.n	800d524 <NetworkParams::callbackFunction(char const*)+0x88>
 800d540:	2b00      	cmp	r3, #0
 800d542:	d0ef      	beq.n	800d524 <NetworkParams::callbackFunction(char const*)+0x88>
 800d544:	e7c0      	b.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d546:	4620      	mov	r0, r4
 800d548:	491d      	ldr	r1, [pc, #116]	; (800d5c0 <NetworkParams::callbackFunction(char const*)+0x124>)
 800d54a:	aa02      	add	r2, sp, #8
 800d54c:	f001 fab7 	bl	800eabe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d550:	b970      	cbnz	r0, 800d570 <NetworkParams::callbackFunction(char const*)+0xd4>
 800d552:	9a02      	ldr	r2, [sp, #8]
 800d554:	2a00      	cmp	r2, #0
 800d556:	d0b7      	beq.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d558:	ba13      	rev	r3, r2
 800d55a:	43d9      	mvns	r1, r3
 800d55c:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d560:	d1b2      	bne.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d562:	4b14      	ldr	r3, [pc, #80]	; (800d5b4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d564:	609a      	str	r2, [r3, #8]
 800d566:	681a      	ldr	r2, [r3, #0]
 800d568:	f042 0204 	orr.w	r2, r2, #4
 800d56c:	601a      	str	r2, [r3, #0]
 800d56e:	e7ab      	b.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d570:	4620      	mov	r0, r4
 800d572:	4914      	ldr	r1, [pc, #80]	; (800d5c4 <NetworkParams::callbackFunction(char const*)+0x128>)
 800d574:	aa02      	add	r2, sp, #8
 800d576:	f001 faa2 	bl	800eabe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d57a:	4d0e      	ldr	r5, [pc, #56]	; (800d5b4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d57c:	b930      	cbnz	r0, 800d58c <NetworkParams::callbackFunction(char const*)+0xf0>
 800d57e:	9b02      	ldr	r3, [sp, #8]
 800d580:	60eb      	str	r3, [r5, #12]
 800d582:	682b      	ldr	r3, [r5, #0]
 800d584:	f043 0308 	orr.w	r3, r3, #8
 800d588:	602b      	str	r3, [r5, #0]
 800d58a:	e79d      	b.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d58c:	233f      	movs	r3, #63	; 0x3f
 800d58e:	4620      	mov	r0, r4
 800d590:	9303      	str	r3, [sp, #12]
 800d592:	490d      	ldr	r1, [pc, #52]	; (800d5c8 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d594:	ab03      	add	r3, sp, #12
 800d596:	f105 0215 	add.w	r2, r5, #21
 800d59a:	f001 fa77 	bl	800ea8c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d59e:	2800      	cmp	r0, #0
 800d5a0:	d192      	bne.n	800d4c8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d5a2:	9b03      	ldr	r3, [sp, #12]
 800d5a4:	442b      	add	r3, r5
 800d5a6:	7558      	strb	r0, [r3, #21]
 800d5a8:	682b      	ldr	r3, [r5, #0]
 800d5aa:	f043 0320 	orr.w	r3, r3, #32
 800d5ae:	e7eb      	b.n	800d588 <NetworkParams::callbackFunction(char const*)+0xec>
 800d5b0:	080134ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, sp}
 800d5b4:	2000949c 	mulcs	r0, ip, r4
 800d5b8:	080134cc 	stmdaeq	r1, {r2, r3, r6, r7, sl, ip, sp}
 800d5bc:	080134b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, ip, sp}
 800d5c0:	080134e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, ip, sp}
 800d5c4:	080134bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, ip, sp}
 800d5c8:	080134dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp}

0800d5cc <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d5cc:	f7ff bf66 	b.w	800d49c <NetworkParams::callbackFunction(char const*)>

0800d5d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d5d0:	b530      	push	{r4, r5, lr}
 800d5d2:	4614      	mov	r4, r2
 800d5d4:	461d      	mov	r5, r3
 800d5d6:	b087      	sub	sp, #28
 800d5d8:	2900      	cmp	r1, #0
 800d5da:	d02a      	beq.n	800d632 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x62>
 800d5dc:	225e      	movs	r2, #94	; 0x5e
 800d5de:	4872      	ldr	r0, [pc, #456]	; (800d7a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d5e0:	f002 f80b 	bl	800f5fa <memmove>
 800d5e4:	4622      	mov	r2, r4
 800d5e6:	462b      	mov	r3, r5
 800d5e8:	4970      	ldr	r1, [pc, #448]	; (800d7ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d5ea:	a803      	add	r0, sp, #12
 800d5ec:	f001 f976 	bl	800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d5f0:	4c6d      	ldr	r4, [pc, #436]	; (800d7a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d5f2:	6823      	ldr	r3, [r4, #0]
 800d5f4:	0799      	lsls	r1, r3, #30
 800d5f6:	bf5f      	itttt	pl
 800d5f8:	4a6d      	ldrpl	r2, [pc, #436]	; (800d7b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d5fa:	6812      	ldrpl	r2, [r2, #0]
 800d5fc:	6912      	ldrpl	r2, [r2, #16]
 800d5fe:	6062      	strpl	r2, [r4, #4]
 800d600:	075a      	lsls	r2, r3, #29
 800d602:	bf5f      	itttt	pl
 800d604:	4a6a      	ldrpl	r2, [pc, #424]	; (800d7b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d606:	6812      	ldrpl	r2, [r2, #0]
 800d608:	6992      	ldrpl	r2, [r2, #24]
 800d60a:	60a2      	strpl	r2, [r4, #8]
 800d60c:	071d      	lsls	r5, r3, #28
 800d60e:	bf5f      	itttt	pl
 800d610:	4a67      	ldrpl	r2, [pc, #412]	; (800d7b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d612:	6812      	ldrpl	r2, [r2, #0]
 800d614:	6952      	ldrpl	r2, [r2, #20]
 800d616:	60e2      	strpl	r2, [r4, #12]
 800d618:	0698      	lsls	r0, r3, #26
 800d61a:	d417      	bmi.n	800d64c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x7c>
 800d61c:	223f      	movs	r2, #63	; 0x3f
 800d61e:	4b64      	ldr	r3, [pc, #400]	; (800d7b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d620:	4864      	ldr	r0, [pc, #400]	; (800d7b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d622:	681b      	ldr	r3, [r3, #0]
 800d624:	331b      	adds	r3, #27
 800d626:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d62a:	b941      	cbnz	r1, 800d63e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x6e>
 800d62c:	f001 fffc 	bl	800f628 <memset>
 800d630:	e009      	b.n	800d646 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x76>
 800d632:	6800      	ldr	r0, [r0, #0]
 800d634:	495c      	ldr	r1, [pc, #368]	; (800d7a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d636:	6803      	ldr	r3, [r0, #0]
 800d638:	68db      	ldr	r3, [r3, #12]
 800d63a:	4798      	blx	r3
 800d63c:	e7d2      	b.n	800d5e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d63e:	3a01      	subs	r2, #1
 800d640:	f800 1b01 	strb.w	r1, [r0], #1
 800d644:	d1ef      	bne.n	800d626 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d646:	2300      	movs	r3, #0
 800d648:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d64c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d650:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d654:	7d23      	ldrb	r3, [r4, #20]
 800d656:	42aa      	cmp	r2, r5
 800d658:	6821      	ldr	r1, [r4, #0]
 800d65a:	d21a      	bcs.n	800d692 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc2>
 800d65c:	9803      	ldr	r0, [sp, #12]
 800d65e:	07c9      	lsls	r1, r1, #31
 800d660:	4410      	add	r0, r2
 800d662:	eba5 0502 	sub.w	r5, r5, r2
 800d666:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d66a:	d404      	bmi.n	800d676 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d66c:	b922      	cbnz	r2, 800d678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800d66e:	9300      	str	r3, [sp, #0]
 800d670:	4a51      	ldr	r2, [pc, #324]	; (800d7b8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d672:	4b52      	ldr	r3, [pc, #328]	; (800d7bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d674:	e003      	b.n	800d67e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 800d676:	b312      	cbz	r2, 800d6be <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xee>
 800d678:	9300      	str	r3, [sp, #0]
 800d67a:	4a51      	ldr	r2, [pc, #324]	; (800d7c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d67c:	4b4f      	ldr	r3, [pc, #316]	; (800d7bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d67e:	4629      	mov	r1, r5
 800d680:	f002 fa14 	bl	800faac <snprintf>
 800d684:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d688:	4285      	cmp	r5, r0
 800d68a:	bfa4      	itt	ge
 800d68c:	181b      	addge	r3, r3, r0
 800d68e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d692:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d696:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d69a:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d69e:	42aa      	cmp	r2, r5
 800d6a0:	6821      	ldr	r1, [r4, #0]
 800d6a2:	d21f      	bcs.n	800d6e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x114>
 800d6a4:	9803      	ldr	r0, [sp, #12]
 800d6a6:	05c9      	lsls	r1, r1, #23
 800d6a8:	4410      	add	r0, r2
 800d6aa:	eba5 0502 	sub.w	r5, r5, r2
 800d6ae:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d6b2:	d408      	bmi.n	800d6c6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d6b4:	b94a      	cbnz	r2, 800d6ca <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfa>
 800d6b6:	9300      	str	r3, [sp, #0]
 800d6b8:	4a3f      	ldr	r2, [pc, #252]	; (800d7b8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d6ba:	4b42      	ldr	r3, [pc, #264]	; (800d7c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d6bc:	e008      	b.n	800d6d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 800d6be:	9300      	str	r3, [sp, #0]
 800d6c0:	4a41      	ldr	r2, [pc, #260]	; (800d7c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d6c2:	4b3e      	ldr	r3, [pc, #248]	; (800d7bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d6c4:	e7db      	b.n	800d67e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 800d6c6:	2a00      	cmp	r2, #0
 800d6c8:	d03e      	beq.n	800d748 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x178>
 800d6ca:	9300      	str	r3, [sp, #0]
 800d6cc:	4a3c      	ldr	r2, [pc, #240]	; (800d7c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d6ce:	4b3d      	ldr	r3, [pc, #244]	; (800d7c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d6d0:	4629      	mov	r1, r5
 800d6d2:	f002 f9eb 	bl	800faac <snprintf>
 800d6d6:	4285      	cmp	r5, r0
 800d6d8:	bfa2      	ittt	ge
 800d6da:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d6de:	18c0      	addge	r0, r0, r3
 800d6e0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d6e4:	4939      	ldr	r1, [pc, #228]	; (800d7cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d6e6:	a803      	add	r0, sp, #12
 800d6e8:	f001 f97e 	bl	800e9e8 <PropertiesBuilder::AddComment(char const*)>
 800d6ec:	6823      	ldr	r3, [r4, #0]
 800d6ee:	6862      	ldr	r2, [r4, #4]
 800d6f0:	4937      	ldr	r1, [pc, #220]	; (800d7d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d6f2:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d6f6:	a803      	add	r0, sp, #12
 800d6f8:	f001 f932 	bl	800e960 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d6fc:	6823      	ldr	r3, [r4, #0]
 800d6fe:	68a2      	ldr	r2, [r4, #8]
 800d700:	4934      	ldr	r1, [pc, #208]	; (800d7d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d702:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d706:	a803      	add	r0, sp, #12
 800d708:	f001 f92a 	bl	800e960 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d70c:	6823      	ldr	r3, [r4, #0]
 800d70e:	68e2      	ldr	r2, [r4, #12]
 800d710:	4931      	ldr	r1, [pc, #196]	; (800d7d8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d712:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d716:	a803      	add	r0, sp, #12
 800d718:	f001 f922 	bl	800e960 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d71c:	6821      	ldr	r1, [r4, #0]
 800d71e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d722:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d726:	42a3      	cmp	r3, r4
 800d728:	d220      	bcs.n	800d76c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19c>
 800d72a:	9803      	ldr	r0, [sp, #12]
 800d72c:	f011 0f20 	tst.w	r1, #32
 800d730:	4418      	add	r0, r3
 800d732:	eba4 0403 	sub.w	r4, r4, r3
 800d736:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d73a:	4b1e      	ldr	r3, [pc, #120]	; (800d7b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d73c:	d108      	bne.n	800d750 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 800d73e:	b942      	cbnz	r2, 800d752 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x182>
 800d740:	9300      	str	r3, [sp, #0]
 800d742:	4a26      	ldr	r2, [pc, #152]	; (800d7dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d744:	4b26      	ldr	r3, [pc, #152]	; (800d7e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d746:	e007      	b.n	800d758 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 800d748:	9300      	str	r3, [sp, #0]
 800d74a:	4a1f      	ldr	r2, [pc, #124]	; (800d7c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d74c:	4b1d      	ldr	r3, [pc, #116]	; (800d7c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d74e:	e7bf      	b.n	800d6d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 800d750:	b32a      	cbz	r2, 800d79e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ce>
 800d752:	9300      	str	r3, [sp, #0]
 800d754:	4a23      	ldr	r2, [pc, #140]	; (800d7e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d756:	4b22      	ldr	r3, [pc, #136]	; (800d7e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d758:	4621      	mov	r1, r4
 800d75a:	f002 f9a7 	bl	800faac <snprintf>
 800d75e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d762:	4284      	cmp	r4, r0
 800d764:	bfa4      	itt	ge
 800d766:	181b      	addge	r3, r3, r0
 800d768:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d76c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d770:	b17b      	cbz	r3, 800d792 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1c2>
 800d772:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d776:	9b03      	ldr	r3, [sp, #12]
 800d778:	4413      	add	r3, r2
 800d77a:	227d      	movs	r2, #125	; 0x7d
 800d77c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d780:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d784:	9903      	ldr	r1, [sp, #12]
 800d786:	54ca      	strb	r2, [r1, r3]
 800d788:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d78c:	3301      	adds	r3, #1
 800d78e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d792:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d796:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d798:	601a      	str	r2, [r3, #0]
 800d79a:	b007      	add	sp, #28
 800d79c:	bd30      	pop	{r4, r5, pc}
 800d79e:	9300      	str	r3, [sp, #0]
 800d7a0:	4a11      	ldr	r2, [pc, #68]	; (800d7e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800d7a2:	4b0f      	ldr	r3, [pc, #60]	; (800d7e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d7a4:	e7d8      	b.n	800d758 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 800d7a6:	bf00      	nop
 800d7a8:	2000949c 	mulcs	r0, ip, r4
 800d7ac:	080134f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, sl, ip, sp}
 800d7b0:	20009498 	mulcs	r0, r8, r4
 800d7b4:	200094b1 			; <UNDEFINED> instruction: 0x200094b1
 800d7b8:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800d7bc:	080134ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, sp}
 800d7c0:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 800d7c4:	080134cc 	stmdaeq	r1, {r2, r3, r6, r7, sl, ip, sp}
 800d7c8:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800d7cc:	080134a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, ip, sp}
 800d7d0:	080134b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, ip, sp}
 800d7d4:	080134e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, ip, sp}
 800d7d8:	080134bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, ip, sp}
 800d7dc:	08011f45 	stmdaeq	r1, {r0, r2, r6, r8, r9, sl, fp, ip}
 800d7e0:	080134dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp}
 800d7e4:	08011f3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, fp, ip}
 800d7e8:	08011f46 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, fp, ip}

0800d7ec <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d7ec:	b513      	push	{r0, r1, r4, lr}
 800d7ee:	6804      	ldr	r4, [r0, #0]
 800d7f0:	b914      	cbnz	r4, 800d7f8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d7f2:	601c      	str	r4, [r3, #0]
 800d7f4:	b002      	add	sp, #8
 800d7f6:	bd10      	pop	{r4, pc}
 800d7f8:	9300      	str	r3, [sp, #0]
 800d7fa:	4613      	mov	r3, r2
 800d7fc:	460a      	mov	r2, r1
 800d7fe:	2100      	movs	r1, #0
 800d800:	f7ff fee6 	bl	800d5d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800d804:	e7f6      	b.n	800d7f4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d806 <NetworkParams::Dump()>:
 800d806:	4770      	bx	lr

0800d808 <memcpy.isra.0>:
 800d808:	3801      	subs	r0, #1
 800d80a:	440a      	add	r2, r1
 800d80c:	4291      	cmp	r1, r2
 800d80e:	d100      	bne.n	800d812 <memcpy.isra.0+0xa>
 800d810:	4770      	bx	lr
 800d812:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d816:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d81a:	e7f7      	b.n	800d80c <memcpy.isra.0+0x4>

0800d81c <arp_announce>:
 800d81c:	4803      	ldr	r0, [pc, #12]	; (800d82c <arp_announce+0x10>)
 800d81e:	69c3      	ldr	r3, [r0, #28]
 800d820:	b113      	cbz	r3, 800d828 <arp_announce+0xc>
 800d822:	212a      	movs	r1, #42	; 0x2a
 800d824:	f003 b8f4 	b.w	8010a10 <emac_eth_send>
 800d828:	4770      	bx	lr
 800d82a:	bf00      	nop
 800d82c:	200094fc 	strdcs	r9, [r0], -ip

0800d830 <arp_handle_request>:
 800d830:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d832:	2204      	movs	r2, #4
 800d834:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d838:	4604      	mov	r4, r0
 800d83a:	eb0d 0002 	add.w	r0, sp, r2
 800d83e:	f7ff ffe3 	bl	800d808 <memcpy.isra.0>
 800d842:	4b0d      	ldr	r3, [pc, #52]	; (800d878 <arp_handle_request+0x48>)
 800d844:	9a01      	ldr	r2, [sp, #4]
 800d846:	69db      	ldr	r3, [r3, #28]
 800d848:	429a      	cmp	r2, r3
 800d84a:	d113      	bne.n	800d874 <arp_handle_request+0x44>
 800d84c:	2206      	movs	r2, #6
 800d84e:	4d0b      	ldr	r5, [pc, #44]	; (800d87c <arp_handle_request+0x4c>)
 800d850:	18a1      	adds	r1, r4, r2
 800d852:	4628      	mov	r0, r5
 800d854:	f7ff ffd8 	bl	800d808 <memcpy.isra.0>
 800d858:	f104 0116 	add.w	r1, r4, #22
 800d85c:	f105 0020 	add.w	r0, r5, #32
 800d860:	2206      	movs	r2, #6
 800d862:	f7ff ffd1 	bl	800d808 <memcpy.isra.0>
 800d866:	69e3      	ldr	r3, [r4, #28]
 800d868:	212a      	movs	r1, #42	; 0x2a
 800d86a:	4628      	mov	r0, r5
 800d86c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d870:	f003 f8ce 	bl	8010a10 <emac_eth_send>
 800d874:	b003      	add	sp, #12
 800d876:	bd30      	pop	{r4, r5, pc}
 800d878:	200094fc 	strdcs	r9, [r0], -ip
 800d87c:	20009528 	andcs	r9, r0, r8, lsr #10

0800d880 <arp_handle_reply>:
 800d880:	69c1      	ldr	r1, [r0, #28]
 800d882:	3016      	adds	r0, #22
 800d884:	f000 b80a 	b.w	800d89c <arp_cache_update>

0800d888 <arp_send_request>:
 800d888:	4b03      	ldr	r3, [pc, #12]	; (800d898 <arp_send_request+0x10>)
 800d88a:	212a      	movs	r1, #42	; 0x2a
 800d88c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800d890:	4618      	mov	r0, r3
 800d892:	f003 b8bd 	b.w	8010a10 <emac_eth_send>
 800d896:	bf00      	nop
 800d898:	20009554 	andcs	r9, r0, r4, asr r5

0800d89c <arp_cache_update>:
 800d89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d89e:	4e11      	ldr	r6, [pc, #68]	; (800d8e4 <arp_cache_update+0x48>)
 800d8a0:	8833      	ldrh	r3, [r6, #0]
 800d8a2:	2b20      	cmp	r3, #32
 800d8a4:	d018      	beq.n	800d8d8 <arp_cache_update+0x3c>
 800d8a6:	2400      	movs	r4, #0
 800d8a8:	220c      	movs	r2, #12
 800d8aa:	4d0f      	ldr	r5, [pc, #60]	; (800d8e8 <arp_cache_update+0x4c>)
 800d8ac:	b2a7      	uxth	r7, r4
 800d8ae:	42bb      	cmp	r3, r7
 800d8b0:	d80b      	bhi.n	800d8ca <arp_cache_update+0x2e>
 800d8b2:	fb02 5203 	mla	r2, r2, r3, r5
 800d8b6:	1d84      	adds	r4, r0, #6
 800d8b8:	3203      	adds	r2, #3
 800d8ba:	42a0      	cmp	r0, r4
 800d8bc:	d10d      	bne.n	800d8da <arp_cache_update+0x3e>
 800d8be:	220c      	movs	r2, #12
 800d8c0:	435a      	muls	r2, r3
 800d8c2:	3301      	adds	r3, #1
 800d8c4:	50a9      	str	r1, [r5, r2]
 800d8c6:	8033      	strh	r3, [r6, #0]
 800d8c8:	e006      	b.n	800d8d8 <arp_cache_update+0x3c>
 800d8ca:	3401      	adds	r4, #1
 800d8cc:	fb02 5704 	mla	r7, r2, r4, r5
 800d8d0:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800d8d4:	428f      	cmp	r7, r1
 800d8d6:	d1e9      	bne.n	800d8ac <arp_cache_update+0x10>
 800d8d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8da:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d8de:	f802 7f01 	strb.w	r7, [r2, #1]!
 800d8e2:	e7ea      	b.n	800d8ba <arp_cache_update+0x1e>
 800d8e4:	20009700 	andcs	r9, r0, r0, lsl #14
 800d8e8:	20009580 	andcs	r9, r0, r0, lsl #11

0800d8ec <arp_cache_lookup>:
 800d8ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8f0:	2200      	movs	r2, #0
 800d8f2:	4606      	mov	r6, r0
 800d8f4:	460c      	mov	r4, r1
 800d8f6:	200c      	movs	r0, #12
 800d8f8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800d980 <arp_cache_lookup+0x94>
 800d8fc:	fb00 f302 	mul.w	r3, r0, r2
 800d900:	f853 1008 	ldr.w	r1, [r3, r8]
 800d904:	42b1      	cmp	r1, r6
 800d906:	d10d      	bne.n	800d924 <arp_cache_lookup+0x38>
 800d908:	3304      	adds	r3, #4
 800d90a:	4443      	add	r3, r8
 800d90c:	3c01      	subs	r4, #1
 800d90e:	1d9a      	adds	r2, r3, #6
 800d910:	4293      	cmp	r3, r2
 800d912:	d102      	bne.n	800d91a <arp_cache_lookup+0x2e>
 800d914:	4630      	mov	r0, r6
 800d916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d91a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d91e:	f804 1f01 	strb.w	r1, [r4, #1]!
 800d922:	e7f5      	b.n	800d910 <arp_cache_lookup+0x24>
 800d924:	b111      	cbz	r1, 800d92c <arp_cache_lookup+0x40>
 800d926:	3201      	adds	r2, #1
 800d928:	2a20      	cmp	r2, #32
 800d92a:	d1e7      	bne.n	800d8fc <arp_cache_lookup+0x10>
 800d92c:	2704      	movs	r7, #4
 800d92e:	f8df a054 	ldr.w	sl, [pc, #84]	; 800d984 <arp_cache_lookup+0x98>
 800d932:	f8ba 5000 	ldrh.w	r5, [sl]
 800d936:	3f01      	subs	r7, #1
 800d938:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800d93c:	d101      	bne.n	800d942 <arp_cache_lookup+0x56>
 800d93e:	463e      	mov	r6, r7
 800d940:	e7e8      	b.n	800d914 <arp_cache_lookup+0x28>
 800d942:	4630      	mov	r0, r6
 800d944:	f7ff ffa0 	bl	800d888 <arp_send_request>
 800d948:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800d94c:	f1b9 0901 	subs.w	r9, r9, #1
 800d950:	f8ba 3000 	ldrh.w	r3, [sl]
 800d954:	d011      	beq.n	800d97a <arp_cache_lookup+0x8e>
 800d956:	429d      	cmp	r5, r3
 800d958:	d00c      	beq.n	800d974 <arp_cache_lookup+0x88>
 800d95a:	230c      	movs	r3, #12
 800d95c:	fb03 8505 	mla	r5, r3, r5, r8
 800d960:	3c01      	subs	r4, #1
 800d962:	1d2b      	adds	r3, r5, #4
 800d964:	350a      	adds	r5, #10
 800d966:	42ab      	cmp	r3, r5
 800d968:	d0d4      	beq.n	800d914 <arp_cache_lookup+0x28>
 800d96a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d96e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d972:	e7f8      	b.n	800d966 <arp_cache_lookup+0x7a>
 800d974:	f7f9 fdd4 	bl	8007520 <net_handle>
 800d978:	e7e8      	b.n	800d94c <arp_cache_lookup+0x60>
 800d97a:	429d      	cmp	r5, r3
 800d97c:	d0db      	beq.n	800d936 <arp_cache_lookup+0x4a>
 800d97e:	e7ec      	b.n	800d95a <arp_cache_lookup+0x6e>
 800d980:	20009580 	andcs	r9, r0, r0, lsl #11
 800d984:	20009700 	andcs	r9, r0, r0, lsl #14

0800d988 <_parse_response>:
 800d988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d98c:	2400      	movs	r4, #0
 800d98e:	460d      	mov	r5, r1
 800d990:	46a3      	mov	fp, r4
 800d992:	4627      	mov	r7, r4
 800d994:	46a2      	mov	sl, r4
 800d996:	46a1      	mov	r9, r4
 800d998:	46a0      	mov	r8, r4
 800d99a:	4e4f      	ldr	r6, [pc, #316]	; (800dad8 <_parse_response+0x150>)
 800d99c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800d9a0:	6833      	ldr	r3, [r6, #0]
 800d9a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800d9a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800d9aa:	9009      	str	r0, [sp, #36]	; 0x24
 800d9ac:	9402      	str	r4, [sp, #8]
 800d9ae:	9407      	str	r4, [sp, #28]
 800d9b0:	9308      	str	r3, [sp, #32]
 800d9b2:	f7f9 fdb5 	bl	8007520 <net_handle>
 800d9b6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800d9ba:	9300      	str	r3, [sp, #0]
 800d9bc:	f44f 7209 	mov.w	r2, #548	; 0x224
 800d9c0:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800d9c4:	ab0c      	add	r3, sp, #48	; 0x30
 800d9c6:	a90d      	add	r1, sp, #52	; 0x34
 800d9c8:	f7fe fe1c 	bl	800c604 <udp_recv>
 800d9cc:	2800      	cmp	r0, #0
 800d9ce:	d03e      	beq.n	800da4e <_parse_response+0xc6>
 800d9d0:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d9d4:	2b43      	cmp	r3, #67	; 0x43
 800d9d6:	d13a      	bne.n	800da4e <_parse_response+0xc6>
 800d9d8:	aa14      	add	r2, sp, #80	; 0x50
 800d9da:	1e6b      	subs	r3, r5, #1
 800d9dc:	1d69      	adds	r1, r5, #5
 800d9de:	4299      	cmp	r1, r3
 800d9e0:	d12f      	bne.n	800da42 <_parse_response+0xba>
 800d9e2:	2100      	movs	r1, #0
 800d9e4:	ab0d      	add	r3, sp, #52	; 0x34
 800d9e6:	181d      	adds	r5, r3, r0
 800d9e8:	468c      	mov	ip, r1
 800d9ea:	460e      	mov	r6, r1
 800d9ec:	4608      	mov	r0, r1
 800d9ee:	ab49      	add	r3, sp, #292	; 0x124
 800d9f0:	42ab      	cmp	r3, r5
 800d9f2:	d337      	bcc.n	800da64 <_parse_response+0xdc>
 800d9f4:	b141      	cbz	r1, 800da08 <_parse_response+0x80>
 800d9f6:	4b39      	ldr	r3, [pc, #228]	; (800dadc <_parse_response+0x154>)
 800d9f8:	9a07      	ldr	r2, [sp, #28]
 800d9fa:	f883 8003 	strb.w	r8, [r3, #3]
 800d9fe:	709a      	strb	r2, [r3, #2]
 800da00:	9a06      	ldr	r2, [sp, #24]
 800da02:	705a      	strb	r2, [r3, #1]
 800da04:	9a05      	ldr	r2, [sp, #20]
 800da06:	701a      	strb	r2, [r3, #0]
 800da08:	f1bc 0f00 	cmp.w	ip, #0
 800da0c:	d007      	beq.n	800da1e <_parse_response+0x96>
 800da0e:	4b34      	ldr	r3, [pc, #208]	; (800dae0 <_parse_response+0x158>)
 800da10:	9a04      	ldr	r2, [sp, #16]
 800da12:	705c      	strb	r4, [r3, #1]
 800da14:	70da      	strb	r2, [r3, #3]
 800da16:	9a03      	ldr	r2, [sp, #12]
 800da18:	709a      	strb	r2, [r3, #2]
 800da1a:	9a02      	ldr	r2, [sp, #8]
 800da1c:	701a      	strb	r2, [r3, #0]
 800da1e:	b13e      	cbz	r6, 800da30 <_parse_response+0xa8>
 800da20:	4b30      	ldr	r3, [pc, #192]	; (800dae4 <_parse_response+0x15c>)
 800da22:	70df      	strb	r7, [r3, #3]
 800da24:	f883 a002 	strb.w	sl, [r3, #2]
 800da28:	f883 9001 	strb.w	r9, [r3, #1]
 800da2c:	f883 b000 	strb.w	fp, [r3]
 800da30:	2802      	cmp	r0, #2
 800da32:	d102      	bne.n	800da3a <_parse_response+0xb2>
 800da34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800da36:	4b2c      	ldr	r3, [pc, #176]	; (800dae8 <_parse_response+0x160>)
 800da38:	601a      	str	r2, [r3, #0]
 800da3a:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800da3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da42:	f812 cb01 	ldrb.w	ip, [r2], #1
 800da46:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800da4a:	45e6      	cmp	lr, ip
 800da4c:	d0c7      	beq.n	800d9de <_parse_response+0x56>
 800da4e:	6833      	ldr	r3, [r6, #0]
 800da50:	9a08      	ldr	r2, [sp, #32]
 800da52:	1a9b      	subs	r3, r3, r2
 800da54:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800da58:	d3ab      	bcc.n	800d9b2 <_parse_response+0x2a>
 800da5a:	2800      	cmp	r0, #0
 800da5c:	d1c1      	bne.n	800d9e2 <_parse_response+0x5a>
 800da5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800da62:	e7ea      	b.n	800da3a <_parse_response+0xb2>
 800da64:	781a      	ldrb	r2, [r3, #0]
 800da66:	2a35      	cmp	r2, #53	; 0x35
 800da68:	d011      	beq.n	800da8e <_parse_response+0x106>
 800da6a:	d808      	bhi.n	800da7e <_parse_response+0xf6>
 800da6c:	2a01      	cmp	r2, #1
 800da6e:	d011      	beq.n	800da94 <_parse_response+0x10c>
 800da70:	2a03      	cmp	r2, #3
 800da72:	d019      	beq.n	800daa8 <_parse_response+0x120>
 800da74:	b14a      	cbz	r2, 800da8a <_parse_response+0x102>
 800da76:	1c9a      	adds	r2, r3, #2
 800da78:	785b      	ldrb	r3, [r3, #1]
 800da7a:	4413      	add	r3, r2
 800da7c:	e7b8      	b.n	800d9f0 <_parse_response+0x68>
 800da7e:	2a36      	cmp	r2, #54	; 0x36
 800da80:	d01f      	beq.n	800dac2 <_parse_response+0x13a>
 800da82:	2aff      	cmp	r2, #255	; 0xff
 800da84:	d1f7      	bne.n	800da76 <_parse_response+0xee>
 800da86:	462b      	mov	r3, r5
 800da88:	e7b2      	b.n	800d9f0 <_parse_response+0x68>
 800da8a:	3301      	adds	r3, #1
 800da8c:	e7b0      	b.n	800d9f0 <_parse_response+0x68>
 800da8e:	7898      	ldrb	r0, [r3, #2]
 800da90:	3303      	adds	r3, #3
 800da92:	e7ad      	b.n	800d9f0 <_parse_response+0x68>
 800da94:	f893 b002 	ldrb.w	fp, [r3, #2]
 800da98:	f893 9003 	ldrb.w	r9, [r3, #3]
 800da9c:	f893 a004 	ldrb.w	sl, [r3, #4]
 800daa0:	795f      	ldrb	r7, [r3, #5]
 800daa2:	4616      	mov	r6, r2
 800daa4:	3306      	adds	r3, #6
 800daa6:	e7a3      	b.n	800d9f0 <_parse_response+0x68>
 800daa8:	789a      	ldrb	r2, [r3, #2]
 800daaa:	78dc      	ldrb	r4, [r3, #3]
 800daac:	9202      	str	r2, [sp, #8]
 800daae:	791a      	ldrb	r2, [r3, #4]
 800dab0:	f04f 0c01 	mov.w	ip, #1
 800dab4:	9203      	str	r2, [sp, #12]
 800dab6:	795a      	ldrb	r2, [r3, #5]
 800dab8:	9204      	str	r2, [sp, #16]
 800daba:	785a      	ldrb	r2, [r3, #1]
 800dabc:	4413      	add	r3, r2
 800dabe:	3302      	adds	r3, #2
 800dac0:	e796      	b.n	800d9f0 <_parse_response+0x68>
 800dac2:	789a      	ldrb	r2, [r3, #2]
 800dac4:	f893 8005 	ldrb.w	r8, [r3, #5]
 800dac8:	9205      	str	r2, [sp, #20]
 800daca:	78da      	ldrb	r2, [r3, #3]
 800dacc:	2101      	movs	r1, #1
 800dace:	9206      	str	r2, [sp, #24]
 800dad0:	791a      	ldrb	r2, [r3, #4]
 800dad2:	3306      	adds	r3, #6
 800dad4:	9207      	str	r2, [sp, #28]
 800dad6:	e78b      	b.n	800d9f0 <_parse_response+0x68>
 800dad8:	20009bdc 	ldrdcs	r9, [r0], -ip
 800dadc:	20009934 	andcs	r9, r0, r4, lsr r9
 800dae0:	20009704 	andcs	r9, r0, r4, lsl #14
 800dae4:	2000970c 	andcs	r9, r0, ip, lsl #14
 800dae8:	20009708 	andcs	r9, r0, r8, lsl #14

0800daec <memcpy.isra.0>:
 800daec:	3801      	subs	r0, #1
 800daee:	440a      	add	r2, r1
 800daf0:	4291      	cmp	r1, r2
 800daf2:	d100      	bne.n	800daf6 <memcpy.isra.0+0xa>
 800daf4:	4770      	bx	lr
 800daf6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dafa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dafe:	e7f7      	b.n	800daf0 <memcpy.isra.0+0x4>

0800db00 <dhcp_client>:
 800db00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db04:	b087      	sub	sp, #28
 800db06:	9203      	str	r2, [sp, #12]
 800db08:	4a77      	ldr	r2, [pc, #476]	; (800dce8 <dhcp_client+0x1e8>)
 800db0a:	460f      	mov	r7, r1
 800db0c:	4605      	mov	r5, r0
 800db0e:	f44f 7309 	mov.w	r3, #548	; 0x224
 800db12:	4614      	mov	r4, r2
 800db14:	2100      	movs	r1, #0
 800db16:	3b01      	subs	r3, #1
 800db18:	f802 1b01 	strb.w	r1, [r2], #1
 800db1c:	d1fb      	bne.n	800db16 <dhcp_client+0x16>
 800db1e:	f240 1301 	movw	r3, #257	; 0x101
 800db22:	2206      	movs	r2, #6
 800db24:	4629      	mov	r1, r5
 800db26:	4871      	ldr	r0, [pc, #452]	; (800dcec <dhcp_client+0x1ec>)
 800db28:	8023      	strh	r3, [r4, #0]
 800db2a:	70a2      	strb	r2, [r4, #2]
 800db2c:	f7ff ffde 	bl	800daec <memcpy.isra.0>
 800db30:	4b6f      	ldr	r3, [pc, #444]	; (800dcf0 <dhcp_client+0x1f0>)
 800db32:	2044      	movs	r0, #68	; 0x44
 800db34:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800db38:	f240 1335 	movw	r3, #309	; 0x135
 800db3c:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800db40:	f7fe fd26 	bl	800c590 <udp_bind>
 800db44:	1e06      	subs	r6, r0, #0
 800db46:	f2c0 80c9 	blt.w	800dcdc <dhcp_client+0x1dc>
 800db4a:	f04f 0915 	mov.w	r9, #21
 800db4e:	f8df a198 	ldr.w	sl, [pc, #408]	; 800dce8 <dhcp_client+0x1e8>
 800db52:	f1b9 0901 	subs.w	r9, r9, #1
 800db56:	d11f      	bne.n	800db98 <dhcp_client+0x98>
 800db58:	464c      	mov	r4, r9
 800db5a:	2044      	movs	r0, #68	; 0x44
 800db5c:	f7fe fd32 	bl	800c5c4 <udp_unbind>
 800db60:	2c00      	cmp	r4, #0
 800db62:	f000 80be 	beq.w	800dce2 <dhcp_client+0x1e2>
 800db66:	2204      	movs	r2, #4
 800db68:	4962      	ldr	r1, [pc, #392]	; (800dcf4 <dhcp_client+0x1f4>)
 800db6a:	a805      	add	r0, sp, #20
 800db6c:	f7ff ffbe 	bl	800daec <memcpy.isra.0>
 800db70:	9b05      	ldr	r3, [sp, #20]
 800db72:	2204      	movs	r2, #4
 800db74:	4960      	ldr	r1, [pc, #384]	; (800dcf8 <dhcp_client+0x1f8>)
 800db76:	603b      	str	r3, [r7, #0]
 800db78:	a805      	add	r0, sp, #20
 800db7a:	f7ff ffb7 	bl	800daec <memcpy.isra.0>
 800db7e:	9b05      	ldr	r3, [sp, #20]
 800db80:	a805      	add	r0, sp, #20
 800db82:	60bb      	str	r3, [r7, #8]
 800db84:	2204      	movs	r2, #4
 800db86:	495d      	ldr	r1, [pc, #372]	; (800dcfc <dhcp_client+0x1fc>)
 800db88:	f7ff ffb0 	bl	800daec <memcpy.isra.0>
 800db8c:	2000      	movs	r0, #0
 800db8e:	9b05      	ldr	r3, [sp, #20]
 800db90:	607b      	str	r3, [r7, #4]
 800db92:	b007      	add	sp, #28
 800db94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db98:	f643 5301 	movw	r3, #15617	; 0x3d01
 800db9c:	f240 1807 	movw	r8, #263	; 0x107
 800dba0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800dba4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800dba8:	782b      	ldrb	r3, [r5, #0]
 800dbaa:	4a55      	ldr	r2, [pc, #340]	; (800dd00 <dhcp_client+0x200>)
 800dbac:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dbb0:	786b      	ldrb	r3, [r5, #1]
 800dbb2:	fa5f fb86 	uxtb.w	fp, r6
 800dbb6:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dbba:	78ab      	ldrb	r3, [r5, #2]
 800dbbc:	4651      	mov	r1, sl
 800dbbe:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dbc2:	78eb      	ldrb	r3, [r5, #3]
 800dbc4:	4658      	mov	r0, fp
 800dbc6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800dbca:	792b      	ldrb	r3, [r5, #4]
 800dbcc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dbd0:	796b      	ldrb	r3, [r5, #5]
 800dbd2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dbd6:	4b4b      	ldr	r3, [pc, #300]	; (800dd04 <dhcp_client+0x204>)
 800dbd8:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800dbdc:	23ff      	movs	r3, #255	; 0xff
 800dbde:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800dbe2:	2343      	movs	r3, #67	; 0x43
 800dbe4:	f240 1205 	movw	r2, #261	; 0x105
 800dbe8:	9300      	str	r3, [sp, #0]
 800dbea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dbee:	f7fe fd65 	bl	800c6bc <udp_send>
 800dbf2:	4629      	mov	r1, r5
 800dbf4:	4630      	mov	r0, r6
 800dbf6:	f7ff fec7 	bl	800d988 <_parse_response>
 800dbfa:	2802      	cmp	r0, #2
 800dbfc:	d1a9      	bne.n	800db52 <dhcp_client+0x52>
 800dbfe:	f643 5303 	movw	r3, #15619	; 0x3d03
 800dc02:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800dc06:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800dc0a:	782b      	ldrb	r3, [r5, #0]
 800dc0c:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800dd08 <dhcp_client+0x208>
 800dc10:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dc14:	786b      	ldrb	r3, [r5, #1]
 800dc16:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dc1a:	78ab      	ldrb	r3, [r5, #2]
 800dc1c:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dc20:	78eb      	ldrb	r3, [r5, #3]
 800dc22:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800dc26:	792b      	ldrb	r3, [r5, #4]
 800dc28:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dc2c:	796b      	ldrb	r3, [r5, #5]
 800dc2e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dc32:	f240 4332 	movw	r3, #1074	; 0x432
 800dc36:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800dc3a:	4b2e      	ldr	r3, [pc, #184]	; (800dcf4 <dhcp_client+0x1f4>)
 800dc3c:	881a      	ldrh	r2, [r3, #0]
 800dc3e:	885b      	ldrh	r3, [r3, #2]
 800dc40:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800dc44:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800dc48:	f240 4336 	movw	r3, #1078	; 0x436
 800dc4c:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800dc50:	4b2e      	ldr	r3, [pc, #184]	; (800dd0c <dhcp_client+0x20c>)
 800dc52:	221e      	movs	r2, #30
 800dc54:	681b      	ldr	r3, [r3, #0]
 800dc56:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800dc5a:	230c      	movs	r3, #12
 800dc5c:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800dc60:	9b03      	ldr	r3, [sp, #12]
 800dc62:	1e58      	subs	r0, r3, #1
 800dc64:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800dc68:	f1a2 0e1e 	sub.w	lr, r2, #30
 800dc6c:	1c51      	adds	r1, r2, #1
 800dc6e:	bb8b      	cbnz	r3, 800dcd4 <dhcp_client+0x1d4>
 800dc70:	2037      	movs	r0, #55	; 0x37
 800dc72:	18a3      	adds	r3, r4, r2
 800dc74:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800dc78:	2006      	movs	r0, #6
 800dc7a:	4421      	add	r1, r4
 800dc7c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800dc80:	2103      	movs	r1, #3
 800dc82:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800dc86:	210f      	movs	r1, #15
 800dc88:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800dc8c:	213a      	movs	r1, #58	; 0x3a
 800dc8e:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800dc92:	213b      	movs	r1, #59	; 0x3b
 800dc94:	f04f 0801 	mov.w	r8, #1
 800dc98:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800dc9c:	21ff      	movs	r1, #255	; 0xff
 800dc9e:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800dca2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800dca6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800dcaa:	2343      	movs	r3, #67	; 0x43
 800dcac:	32f5      	adds	r2, #245	; 0xf5
 800dcae:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800dcb2:	4651      	mov	r1, sl
 800dcb4:	9300      	str	r3, [sp, #0]
 800dcb6:	b292      	uxth	r2, r2
 800dcb8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dcbc:	4658      	mov	r0, fp
 800dcbe:	f7fe fcfd 	bl	800c6bc <udp_send>
 800dcc2:	4629      	mov	r1, r5
 800dcc4:	4630      	mov	r0, r6
 800dcc6:	f7ff fe5f 	bl	800d988 <_parse_response>
 800dcca:	2805      	cmp	r0, #5
 800dccc:	f47f af41 	bne.w	800db52 <dhcp_client+0x52>
 800dcd0:	4644      	mov	r4, r8
 800dcd2:	e742      	b.n	800db5a <dhcp_client+0x5a>
 800dcd4:	460a      	mov	r2, r1
 800dcd6:	f80c 3b01 	strb.w	r3, [ip], #1
 800dcda:	e7c3      	b.n	800dc64 <dhcp_client+0x164>
 800dcdc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dce0:	e757      	b.n	800db92 <dhcp_client+0x92>
 800dce2:	f06f 0001 	mvn.w	r0, #1
 800dce6:	e754      	b.n	800db92 <dhcp_client+0x92>
 800dce8:	20009710 	andcs	r9, r0, r0, lsl r7
 800dcec:	2000972c 	andcs	r9, r0, ip, lsr #14
 800dcf0:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800dcf4:	20009708 	andcs	r9, r0, r8, lsl #14
 800dcf8:	20009704 	andcs	r9, r0, r4, lsl #14
 800dcfc:	2000970c 	andcs	r9, r0, ip, lsl #14
 800dd00:	03010637 	movweq	r0, #5687	; 0x1637
 800dd04:	3b3a0f06 	blcc	8e91924 <__exidx_end+0xe7dd6c>
 800dd08:	2000981a 	andcs	r9, r0, sl, lsl r8
 800dd0c:	20009934 	andcs	r9, r0, r4, lsr r9

0800dd10 <dhcp_client_release>:
 800dd10:	b507      	push	{r0, r1, r2, lr}
 800dd12:	2044      	movs	r0, #68	; 0x44
 800dd14:	f7fe fc3c 	bl	800c590 <udp_bind>
 800dd18:	f243 6307 	movw	r3, #13831	; 0x3607
 800dd1c:	4911      	ldr	r1, [pc, #68]	; (800dd64 <dhcp_client_release+0x54>)
 800dd1e:	b2c0      	uxtb	r0, r0
 800dd20:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800dd24:	2304      	movs	r3, #4
 800dd26:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800dd2a:	4b0f      	ldr	r3, [pc, #60]	; (800dd68 <dhcp_client_release+0x58>)
 800dd2c:	781a      	ldrb	r2, [r3, #0]
 800dd2e:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800dd32:	785a      	ldrb	r2, [r3, #1]
 800dd34:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800dd38:	789a      	ldrb	r2, [r3, #2]
 800dd3a:	78db      	ldrb	r3, [r3, #3]
 800dd3c:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800dd40:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800dd44:	23ff      	movs	r3, #255	; 0xff
 800dd46:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800dd4a:	2343      	movs	r3, #67	; 0x43
 800dd4c:	22fa      	movs	r2, #250	; 0xfa
 800dd4e:	9300      	str	r3, [sp, #0]
 800dd50:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dd54:	f7fe fcb2 	bl	800c6bc <udp_send>
 800dd58:	2044      	movs	r0, #68	; 0x44
 800dd5a:	b003      	add	sp, #12
 800dd5c:	f85d eb04 	ldr.w	lr, [sp], #4
 800dd60:	f7fe bc30 	b.w	800c5c4 <udp_unbind>
 800dd64:	20009710 	andcs	r9, r0, r0, lsl r7
 800dd68:	20009934 	andcs	r9, r0, r4, lsr r9

0800dd6c <memcpy.isra.0>:
 800dd6c:	3801      	subs	r0, #1
 800dd6e:	440a      	add	r2, r1
 800dd70:	4291      	cmp	r1, r2
 800dd72:	d100      	bne.n	800dd76 <memcpy.isra.0+0xa>
 800dd74:	4770      	bx	lr
 800dd76:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dd7a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dd7e:	e7f7      	b.n	800dd70 <memcpy.isra.0+0x4>

0800dd80 <_send_report>:
 800dd80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dd82:	491c      	ldr	r1, [pc, #112]	; (800ddf4 <_send_report+0x74>)
 800dd84:	4c1c      	ldr	r4, [pc, #112]	; (800ddf8 <_send_report+0x78>)
 800dd86:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800dd8a:	9001      	str	r0, [sp, #4]
 800dd8c:	70cb      	strb	r3, [r1, #3]
 800dd8e:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800dd92:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800dd96:	710b      	strb	r3, [r1, #4]
 800dd98:	7148      	strb	r0, [r1, #5]
 800dd9a:	2206      	movs	r2, #6
 800dd9c:	4620      	mov	r0, r4
 800dd9e:	f7ff ffe5 	bl	800dd6c <memcpy.isra.0>
 800dda2:	2204      	movs	r2, #4
 800dda4:	2700      	movs	r7, #0
 800dda6:	4d15      	ldr	r5, [pc, #84]	; (800ddfc <_send_report+0x7c>)
 800dda8:	eb0d 0102 	add.w	r1, sp, r2
 800ddac:	882b      	ldrh	r3, [r5, #0]
 800ddae:	f104 001e 	add.w	r0, r4, #30
 800ddb2:	f104 060e 	add.w	r6, r4, #14
 800ddb6:	8263      	strh	r3, [r4, #18]
 800ddb8:	f7ff ffd8 	bl	800dd6c <memcpy.isra.0>
 800ddbc:	2118      	movs	r1, #24
 800ddbe:	4630      	mov	r0, r6
 800ddc0:	8327      	strh	r7, [r4, #24]
 800ddc2:	f000 f8c6 	bl	800df52 <net_chksum>
 800ddc6:	2204      	movs	r2, #4
 800ddc8:	8320      	strh	r0, [r4, #24]
 800ddca:	eb0d 0102 	add.w	r1, sp, r2
 800ddce:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800ddd2:	f7ff ffcb 	bl	800dd6c <memcpy.isra.0>
 800ddd6:	2120      	movs	r1, #32
 800ddd8:	4630      	mov	r0, r6
 800ddda:	8527      	strh	r7, [r4, #40]	; 0x28
 800dddc:	f000 f8b9 	bl	800df52 <net_chksum>
 800dde0:	212e      	movs	r1, #46	; 0x2e
 800dde2:	8520      	strh	r0, [r4, #40]	; 0x28
 800dde4:	4620      	mov	r0, r4
 800dde6:	f002 fe13 	bl	8010a10 <emac_eth_send>
 800ddea:	882b      	ldrh	r3, [r5, #0]
 800ddec:	3301      	adds	r3, #1
 800ddee:	802b      	strh	r3, [r5, #0]
 800ddf0:	b003      	add	sp, #12
 800ddf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ddf4:	20009a90 	mulcs	r0, r0, sl
 800ddf8:	20009a98 	mulcs	r0, r8, sl
 800ddfc:	20009a58 	andcs	r9, r0, r8, asr sl

0800de00 <igmp_set_ip>:
 800de00:	b507      	push	{r0, r1, r2, lr}
 800de02:	2204      	movs	r2, #4
 800de04:	6803      	ldr	r3, [r0, #0]
 800de06:	eb0d 0102 	add.w	r1, sp, r2
 800de0a:	4806      	ldr	r0, [pc, #24]	; (800de24 <igmp_set_ip+0x24>)
 800de0c:	9301      	str	r3, [sp, #4]
 800de0e:	f7ff ffad 	bl	800dd6c <memcpy.isra.0>
 800de12:	2204      	movs	r2, #4
 800de14:	4804      	ldr	r0, [pc, #16]	; (800de28 <igmp_set_ip+0x28>)
 800de16:	eb0d 0102 	add.w	r1, sp, r2
 800de1a:	f7ff ffa7 	bl	800dd6c <memcpy.isra.0>
 800de1e:	b003      	add	sp, #12
 800de20:	f85d fb04 	ldr.w	pc, [sp], #4
 800de24:	20009ab2 			; <UNDEFINED> instruction: 0x20009ab2
 800de28:	20009a7a 	andcs	r9, r0, sl, ror sl

0800de2c <igmp_timer>:
 800de2c:	b570      	push	{r4, r5, r6, lr}
 800de2e:	2500      	movs	r5, #0
 800de30:	2602      	movs	r6, #2
 800de32:	4c0a      	ldr	r4, [pc, #40]	; (800de5c <igmp_timer+0x30>)
 800de34:	7963      	ldrb	r3, [r4, #5]
 800de36:	2b01      	cmp	r3, #1
 800de38:	d109      	bne.n	800de4e <igmp_timer+0x22>
 800de3a:	7923      	ldrb	r3, [r4, #4]
 800de3c:	b13b      	cbz	r3, 800de4e <igmp_timer+0x22>
 800de3e:	3b01      	subs	r3, #1
 800de40:	b2db      	uxtb	r3, r3
 800de42:	7123      	strb	r3, [r4, #4]
 800de44:	b91b      	cbnz	r3, 800de4e <igmp_timer+0x22>
 800de46:	6820      	ldr	r0, [r4, #0]
 800de48:	f7ff ff9a 	bl	800dd80 <_send_report>
 800de4c:	7166      	strb	r6, [r4, #5]
 800de4e:	3501      	adds	r5, #1
 800de50:	2d24      	cmp	r5, #36	; 0x24
 800de52:	f104 0408 	add.w	r4, r4, #8
 800de56:	d1ed      	bne.n	800de34 <igmp_timer+0x8>
 800de58:	bd70      	pop	{r4, r5, r6, pc}
 800de5a:	bf00      	nop
 800de5c:	20009938 	andcs	r9, r0, r8, lsr r9

0800de60 <igmp_join>:
 800de60:	b538      	push	{r3, r4, r5, lr}
 800de62:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800de66:	2be0      	cmp	r3, #224	; 0xe0
 800de68:	d11b      	bne.n	800dea2 <igmp_join+0x42>
 800de6a:	4911      	ldr	r1, [pc, #68]	; (800deb0 <igmp_join+0x50>)
 800de6c:	680c      	ldr	r4, [r1, #0]
 800de6e:	2c24      	cmp	r4, #36	; 0x24
 800de70:	d01a      	beq.n	800dea8 <igmp_join+0x48>
 800de72:	2300      	movs	r3, #0
 800de74:	4a0f      	ldr	r2, [pc, #60]	; (800deb4 <igmp_join+0x54>)
 800de76:	429c      	cmp	r4, r3
 800de78:	dc0d      	bgt.n	800de96 <igmp_join+0x36>
 800de7a:	f44f 7381 	mov.w	r3, #258	; 0x102
 800de7e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800de82:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800de86:	8093      	strh	r3, [r2, #4]
 800de88:	1c63      	adds	r3, r4, #1
 800de8a:	600b      	str	r3, [r1, #0]
 800de8c:	f7ff ff78 	bl	800dd80 <_send_report>
 800de90:	4623      	mov	r3, r4
 800de92:	4618      	mov	r0, r3
 800de94:	bd38      	pop	{r3, r4, r5, pc}
 800de96:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800de9a:	4285      	cmp	r5, r0
 800de9c:	d0f9      	beq.n	800de92 <igmp_join+0x32>
 800de9e:	3301      	adds	r3, #1
 800dea0:	e7e9      	b.n	800de76 <igmp_join+0x16>
 800dea2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dea6:	e7f4      	b.n	800de92 <igmp_join+0x32>
 800dea8:	f06f 0301 	mvn.w	r3, #1
 800deac:	e7f1      	b.n	800de92 <igmp_join+0x32>
 800deae:	bf00      	nop
 800deb0:	20009a5c 	andcs	r9, r0, ip, asr sl
 800deb4:	20009938 	andcs	r9, r0, r8, lsr r9

0800deb8 <igmp_leave>:
 800deb8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800debc:	2600      	movs	r6, #0
 800debe:	4f1c      	ldr	r7, [pc, #112]	; (800df30 <igmp_leave+0x78>)
 800dec0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800dec4:	4283      	cmp	r3, r0
 800dec6:	d007      	beq.n	800ded8 <igmp_leave+0x20>
 800dec8:	3601      	adds	r6, #1
 800deca:	2e24      	cmp	r6, #36	; 0x24
 800decc:	d1f8      	bne.n	800dec0 <igmp_leave+0x8>
 800dece:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ded2:	b002      	add	sp, #8
 800ded4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ded8:	2400      	movs	r4, #0
 800deda:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800df34 <igmp_leave+0x7c>
 800dede:	4d16      	ldr	r5, [pc, #88]	; (800df38 <igmp_leave+0x80>)
 800dee0:	f8b8 3000 	ldrh.w	r3, [r8]
 800dee4:	2118      	movs	r1, #24
 800dee6:	9001      	str	r0, [sp, #4]
 800dee8:	4814      	ldr	r0, [pc, #80]	; (800df3c <igmp_leave+0x84>)
 800deea:	826b      	strh	r3, [r5, #18]
 800deec:	832c      	strh	r4, [r5, #24]
 800deee:	f000 f830 	bl	800df52 <net_chksum>
 800def2:	2204      	movs	r2, #4
 800def4:	8328      	strh	r0, [r5, #24]
 800def6:	eb0d 0102 	add.w	r1, sp, r2
 800defa:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800defe:	f7ff ff35 	bl	800dd6c <memcpy.isra.0>
 800df02:	2120      	movs	r1, #32
 800df04:	f105 000e 	add.w	r0, r5, #14
 800df08:	852c      	strh	r4, [r5, #40]	; 0x28
 800df0a:	f000 f822 	bl	800df52 <net_chksum>
 800df0e:	212e      	movs	r1, #46	; 0x2e
 800df10:	8528      	strh	r0, [r5, #40]	; 0x28
 800df12:	4628      	mov	r0, r5
 800df14:	f002 fd7c 	bl	8010a10 <emac_eth_send>
 800df18:	f8b8 3000 	ldrh.w	r3, [r8]
 800df1c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800df20:	3301      	adds	r3, #1
 800df22:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800df26:	4620      	mov	r0, r4
 800df28:	f8a8 3000 	strh.w	r3, [r8]
 800df2c:	80bc      	strh	r4, [r7, #4]
 800df2e:	e7d0      	b.n	800ded2 <igmp_leave+0x1a>
 800df30:	20009938 	andcs	r9, r0, r8, lsr r9
 800df34:	20009a58 	andcs	r9, r0, r8, asr sl
 800df38:	20009a60 	andcs	r9, r0, r0, ror #20
 800df3c:	20009aa6 	andcs	r9, r0, r6, lsr #21

0800df40 <ip_set_ip>:
 800df40:	b510      	push	{r4, lr}
 800df42:	4604      	mov	r4, r0
 800df44:	f7fe fb04 	bl	800c550 <udp_set_ip>
 800df48:	4620      	mov	r0, r4
 800df4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df4e:	f7ff bf57 	b.w	800de00 <igmp_set_ip>

0800df52 <net_chksum>:
 800df52:	2300      	movs	r3, #0
 800df54:	f021 0201 	bic.w	r2, r1, #1
 800df58:	b530      	push	{r4, r5, lr}
 800df5a:	1884      	adds	r4, r0, r2
 800df5c:	42a0      	cmp	r0, r4
 800df5e:	d10b      	bne.n	800df78 <net_chksum+0x26>
 800df60:	4291      	cmp	r1, r2
 800df62:	d004      	beq.n	800df6e <net_chksum+0x1c>
 800df64:	7802      	ldrb	r2, [r0, #0]
 800df66:	0212      	lsls	r2, r2, #8
 800df68:	ba52      	rev16	r2, r2
 800df6a:	b292      	uxth	r2, r2
 800df6c:	4413      	add	r3, r2
 800df6e:	0c1a      	lsrs	r2, r3, #16
 800df70:	d106      	bne.n	800df80 <net_chksum+0x2e>
 800df72:	43d8      	mvns	r0, r3
 800df74:	b280      	uxth	r0, r0
 800df76:	bd30      	pop	{r4, r5, pc}
 800df78:	f830 5b02 	ldrh.w	r5, [r0], #2
 800df7c:	442b      	add	r3, r5
 800df7e:	e7ed      	b.n	800df5c <net_chksum+0xa>
 800df80:	b29b      	uxth	r3, r3
 800df82:	e7f3      	b.n	800df6c <net_chksum+0x1a>

0800df84 <memcpy.isra.0>:
 800df84:	3801      	subs	r0, #1
 800df86:	440a      	add	r2, r1
 800df88:	4291      	cmp	r1, r2
 800df8a:	d100      	bne.n	800df8e <memcpy.isra.0+0xa>
 800df8c:	4770      	bx	lr
 800df8e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800df92:	f800 3f01 	strb.w	r3, [r0, #1]!
 800df96:	e7f7      	b.n	800df88 <memcpy.isra.0+0x4>

0800df98 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800df98:	b430      	push	{r4, r5}
 800df9a:	b168      	cbz	r0, 800dfb8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800df9c:	2300      	movs	r3, #0
 800df9e:	7905      	ldrb	r5, [r0, #4]
 800dfa0:	5cd4      	ldrb	r4, [r2, r3]
 800dfa2:	b11c      	cbz	r4, 800dfac <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800dfa4:	1c5c      	adds	r4, r3, #1
 800dfa6:	429d      	cmp	r5, r3
 800dfa8:	4623      	mov	r3, r4
 800dfaa:	dcf9      	bgt.n	800dfa0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800dfac:	6804      	ldr	r4, [r0, #0]
 800dfae:	b2db      	uxtb	r3, r3
 800dfb0:	69e4      	ldr	r4, [r4, #28]
 800dfb2:	46a4      	mov	ip, r4
 800dfb4:	bc30      	pop	{r4, r5}
 800dfb6:	4760      	bx	ip
 800dfb8:	bc30      	pop	{r4, r5}
 800dfba:	4770      	bx	lr

0800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800dfbc:	b110      	cbz	r0, 800dfc4 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800dfbe:	6803      	ldr	r3, [r0, #0]
 800dfc0:	691b      	ldr	r3, [r3, #16]
 800dfc2:	4718      	bx	r3
 800dfc4:	4770      	bx	lr

0800dfc6 <Display::Printf(unsigned char, char const*, ...)>:
 800dfc6:	b40c      	push	{r2, r3}
 800dfc8:	b570      	push	{r4, r5, r6, lr}
 800dfca:	6984      	ldr	r4, [r0, #24]
 800dfcc:	4605      	mov	r5, r0
 800dfce:	460e      	mov	r6, r1
 800dfd0:	b08a      	sub	sp, #40	; 0x28
 800dfd2:	b174      	cbz	r4, 800dff2 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800dfd4:	ab0f      	add	r3, sp, #60	; 0x3c
 800dfd6:	2120      	movs	r1, #32
 800dfd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800dfda:	a802      	add	r0, sp, #8
 800dfdc:	9301      	str	r3, [sp, #4]
 800dfde:	f001 fd7d 	bl	800fadc <vsnprintf>
 800dfe2:	4604      	mov	r4, r0
 800dfe4:	69a8      	ldr	r0, [r5, #24]
 800dfe6:	4631      	mov	r1, r6
 800dfe8:	6803      	ldr	r3, [r0, #0]
 800dfea:	aa02      	add	r2, sp, #8
 800dfec:	69dd      	ldr	r5, [r3, #28]
 800dfee:	b2a3      	uxth	r3, r4
 800dff0:	47a8      	blx	r5
 800dff2:	4620      	mov	r0, r4
 800dff4:	b00a      	add	sp, #40	; 0x28
 800dff6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dffa:	b002      	add	sp, #8
 800dffc:	4770      	bx	lr

0800dffe <Display::Status(Display7SegmentMessage)>:
 800dffe:	7c43      	ldrb	r3, [r0, #17]
 800e000:	b513      	push	{r0, r1, r4, lr}
 800e002:	4604      	mov	r4, r0
 800e004:	b19b      	cbz	r3, 800e02e <Display::Status(Display7SegmentMessage)+0x30>
 800e006:	43c9      	mvns	r1, r1
 800e008:	2312      	movs	r3, #18
 800e00a:	7a00      	ldrb	r0, [r0, #8]
 800e00c:	f88d 3004 	strb.w	r3, [sp, #4]
 800e010:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800e014:	f88d 1006 	strb.w	r1, [sp, #6]
 800e018:	f88d 3005 	strb.w	r3, [sp, #5]
 800e01c:	f002 fd90 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800e020:	68e0      	ldr	r0, [r4, #12]
 800e022:	f002 fd85 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 800e026:	2103      	movs	r1, #3
 800e028:	a801      	add	r0, sp, #4
 800e02a:	f002 fd8f 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800e02e:	b002      	add	sp, #8
 800e030:	bd10      	pop	{r4, pc}
	...

0800e034 <DisplayUdf::DisplayUdf()>:
 800e034:	b510      	push	{r4, lr}
 800e036:	4604      	mov	r4, r0
 800e038:	f000 fe60 	bl	800ecfc <Display::Display()>
 800e03c:	2202      	movs	r2, #2
 800e03e:	2300      	movs	r3, #0
 800e040:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800e044:	4b05      	ldr	r3, [pc, #20]	; (800e05c <DisplayUdf::DisplayUdf()+0x28>)
 800e046:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e04a:	601c      	str	r4, [r3, #0]
 800e04c:	2301      	movs	r3, #1
 800e04e:	f802 3b01 	strb.w	r3, [r2], #1
 800e052:	3301      	adds	r3, #1
 800e054:	2b15      	cmp	r3, #21
 800e056:	d1fa      	bne.n	800e04e <DisplayUdf::DisplayUdf()+0x1a>
 800e058:	4620      	mov	r0, r4
 800e05a:	bd10      	pop	{r4, pc}
 800e05c:	20009ac8 	andcs	r9, r0, r8, asr #21

0800e060 <DisplayUdf::SetTitle(char const*, ...)>:
 800e060:	b40e      	push	{r1, r2, r3}
 800e062:	b517      	push	{r0, r1, r2, r4, lr}
 800e064:	ab05      	add	r3, sp, #20
 800e066:	f853 2b04 	ldr.w	r2, [r3], #4
 800e06a:	4604      	mov	r4, r0
 800e06c:	211f      	movs	r1, #31
 800e06e:	301c      	adds	r0, #28
 800e070:	9301      	str	r3, [sp, #4]
 800e072:	f001 fd33 	bl	800fadc <vsnprintf>
 800e076:	2300      	movs	r3, #0
 800e078:	4404      	add	r4, r0
 800e07a:	7723      	strb	r3, [r4, #28]
 800e07c:	b003      	add	sp, #12
 800e07e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e082:	b003      	add	sp, #12
 800e084:	4770      	bx	lr
	...

0800e088 <DisplayUdf::ShowEmacStart()>:
 800e088:	b510      	push	{r4, lr}
 800e08a:	4604      	mov	r4, r0
 800e08c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e090:	6980      	ldr	r0, [r0, #24]
 800e092:	f7ff ff93 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e096:	4620      	mov	r0, r4
 800e098:	4a02      	ldr	r2, [pc, #8]	; (800e0a4 <DisplayUdf::ShowEmacStart()+0x1c>)
 800e09a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e09e:	f7ff ff92 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e0a2:	bd10      	pop	{r4, pc}
 800e0a4:	08013503 	stmdaeq	r1, {r0, r1, r8, sl, ip, sp}

0800e0a8 <DisplayUdf::ShowIpAddress()>:
 800e0a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e0ac:	4604      	mov	r4, r0
 800e0ae:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e0b2:	b086      	sub	sp, #24
 800e0b4:	6980      	ldr	r0, [r0, #24]
 800e0b6:	f7ff ff81 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e0ba:	4b13      	ldr	r3, [pc, #76]	; (800e108 <DisplayUdf::ShowIpAddress()+0x60>)
 800e0bc:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800e0c0:	681d      	ldr	r5, [r3, #0]
 800e0c2:	69a8      	ldr	r0, [r5, #24]
 800e0c4:	692e      	ldr	r6, [r5, #16]
 800e0c6:	f003 fcb3 	bl	8011a30 <__popcountsi2>
 800e0ca:	78eb      	ldrb	r3, [r5, #3]
 800e0cc:	fa5f f886 	uxtb.w	r8, r6
 800e0d0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800e0d4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800e0d8:	0e36      	lsrs	r6, r6, #24
 800e0da:	b99b      	cbnz	r3, 800e104 <DisplayUdf::ShowIpAddress()+0x5c>
 800e0dc:	786b      	ldrb	r3, [r5, #1]
 800e0de:	2b00      	cmp	r3, #0
 800e0e0:	bf14      	ite	ne
 800e0e2:	2244      	movne	r2, #68	; 0x44
 800e0e4:	2253      	moveq	r2, #83	; 0x53
 800e0e6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800e0ea:	4643      	mov	r3, r8
 800e0ec:	4639      	mov	r1, r7
 800e0ee:	4620      	mov	r0, r4
 800e0f0:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e0f4:	4a05      	ldr	r2, [pc, #20]	; (800e10c <DisplayUdf::ShowIpAddress()+0x64>)
 800e0f6:	f8cd 9000 	str.w	r9, [sp]
 800e0fa:	f7ff ff64 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e0fe:	b006      	add	sp, #24
 800e100:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e104:	225a      	movs	r2, #90	; 0x5a
 800e106:	e7ee      	b.n	800e0e6 <DisplayUdf::ShowIpAddress()+0x3e>
 800e108:	20009498 	mulcs	r0, r8, r4
 800e10c:	08013512 	stmdaeq	r1, {r1, r4, r8, sl, ip, sp}

0800e110 <DisplayUdf::ShowNetmask()>:
 800e110:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e112:	4604      	mov	r4, r0
 800e114:	4b0b      	ldr	r3, [pc, #44]	; (800e144 <DisplayUdf::ShowNetmask()+0x34>)
 800e116:	681b      	ldr	r3, [r3, #0]
 800e118:	699b      	ldr	r3, [r3, #24]
 800e11a:	0e1a      	lsrs	r2, r3, #24
 800e11c:	9202      	str	r2, [sp, #8]
 800e11e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e122:	9201      	str	r2, [sp, #4]
 800e124:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e128:	9200      	str	r2, [sp, #0]
 800e12a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800e12e:	4a06      	ldr	r2, [pc, #24]	; (800e148 <DisplayUdf::ShowNetmask()+0x38>)
 800e130:	b2db      	uxtb	r3, r3
 800e132:	f7ff ff48 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e136:	4620      	mov	r0, r4
 800e138:	b004      	add	sp, #16
 800e13a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e13e:	f7ff bfb3 	b.w	800e0a8 <DisplayUdf::ShowIpAddress()>
 800e142:	bf00      	nop
 800e144:	20009498 	mulcs	r0, r8, r4
 800e148:	08013524 	stmdaeq	r1, {r2, r5, r8, sl, ip, sp}

0800e14c <DisplayUdf::ShowGatewayIp()>:
 800e14c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e14e:	4604      	mov	r4, r0
 800e150:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800e154:	6980      	ldr	r0, [r0, #24]
 800e156:	f7ff ff31 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e15a:	4b0a      	ldr	r3, [pc, #40]	; (800e184 <DisplayUdf::ShowGatewayIp()+0x38>)
 800e15c:	4620      	mov	r0, r4
 800e15e:	681b      	ldr	r3, [r3, #0]
 800e160:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800e164:	695b      	ldr	r3, [r3, #20]
 800e166:	0e1a      	lsrs	r2, r3, #24
 800e168:	9202      	str	r2, [sp, #8]
 800e16a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e16e:	9201      	str	r2, [sp, #4]
 800e170:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e174:	9200      	str	r2, [sp, #0]
 800e176:	b2db      	uxtb	r3, r3
 800e178:	4a03      	ldr	r2, [pc, #12]	; (800e188 <DisplayUdf::ShowGatewayIp()+0x3c>)
 800e17a:	f7ff ff24 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e17e:	b004      	add	sp, #16
 800e180:	bd10      	pop	{r4, pc}
 800e182:	bf00      	nop
 800e184:	20009498 	mulcs	r0, r8, r4
 800e188:	08013533 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, ip, sp}

0800e18c <DisplayUdf::ShowHostName()>:
 800e18c:	b510      	push	{r4, lr}
 800e18e:	4604      	mov	r4, r0
 800e190:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800e194:	6980      	ldr	r0, [r0, #24]
 800e196:	f7ff ff11 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e19a:	4b05      	ldr	r3, [pc, #20]	; (800e1b0 <DisplayUdf::ShowHostName()+0x24>)
 800e19c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800e1a0:	681a      	ldr	r2, [r3, #0]
 800e1a2:	69a0      	ldr	r0, [r4, #24]
 800e1a4:	321c      	adds	r2, #28
 800e1a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1aa:	f7ff bef5 	b.w	800df98 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e1ae:	bf00      	nop
 800e1b0:	20009498 	mulcs	r0, r8, r4

0800e1b4 <DisplayUdf::Show()>:
 800e1b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e1b6:	4604      	mov	r4, r0
 800e1b8:	21ff      	movs	r1, #255	; 0xff
 800e1ba:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800e1be:	f100 0250 	add.w	r2, r0, #80	; 0x50
 800e1c2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800e1c6:	2806      	cmp	r0, #6
 800e1c8:	bf88      	it	hi
 800e1ca:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 800e1ce:	429a      	cmp	r2, r3
 800e1d0:	d1f7      	bne.n	800e1c2 <DisplayUdf::Show()+0xe>
 800e1d2:	2501      	movs	r5, #1
 800e1d4:	4629      	mov	r1, r5
 800e1d6:	3501      	adds	r5, #1
 800e1d8:	69a0      	ldr	r0, [r4, #24]
 800e1da:	b2ed      	uxtb	r5, r5
 800e1dc:	f7ff feee 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e1e0:	2d06      	cmp	r5, #6
 800e1e2:	d1f7      	bne.n	800e1d4 <DisplayUdf::Show()+0x20>
 800e1e4:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800e1e8:	69a0      	ldr	r0, [r4, #24]
 800e1ea:	f104 021c 	add.w	r2, r4, #28
 800e1ee:	f7ff fed3 	bl	800df98 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e1f2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800e1f6:	69a0      	ldr	r0, [r4, #24]
 800e1f8:	4a0d      	ldr	r2, [pc, #52]	; (800e230 <DisplayUdf::Show()+0x7c>)
 800e1fa:	f7ff fecd 	bl	800df98 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e1fe:	4b0d      	ldr	r3, [pc, #52]	; (800e234 <DisplayUdf::Show()+0x80>)
 800e200:	4a0d      	ldr	r2, [pc, #52]	; (800e238 <DisplayUdf::Show()+0x84>)
 800e202:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800e206:	9300      	str	r3, [sp, #0]
 800e208:	4620      	mov	r0, r4
 800e20a:	2303      	movs	r3, #3
 800e20c:	f7ff fedb 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e210:	4620      	mov	r0, r4
 800e212:	f7ff ff49 	bl	800e0a8 <DisplayUdf::ShowIpAddress()>
 800e216:	4620      	mov	r0, r4
 800e218:	f7ff ff98 	bl	800e14c <DisplayUdf::ShowGatewayIp()>
 800e21c:	4620      	mov	r0, r4
 800e21e:	f7ff ff77 	bl	800e110 <DisplayUdf::ShowNetmask()>
 800e222:	4620      	mov	r0, r4
 800e224:	b003      	add	sp, #12
 800e226:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e22a:	f7ff bfaf 	b.w	800e18c <DisplayUdf::ShowHostName()>
 800e22e:	bf00      	nop
 800e230:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800e234:	20009b60 	andcs	r9, r0, r0, ror #22
 800e238:	08013542 	stmdaeq	r1, {r1, r6, r8, sl, ip, sp}

0800e23c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e23c:	3901      	subs	r1, #1
 800e23e:	b510      	push	{r4, lr}
 800e240:	4604      	mov	r4, r0
 800e242:	2903      	cmp	r1, #3
 800e244:	d814      	bhi.n	800e270 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e246:	e8df f001 	tbb	[pc, r1]
 800e24a:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800e24e:	4b14      	ldr	r3, [pc, #80]	; (800e2a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e250:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e254:	6818      	ldr	r0, [r3, #0]
 800e256:	f7ff fed2 	bl	800dffe <Display::Status(Display7SegmentMessage)>
 800e25a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e25e:	69a0      	ldr	r0, [r4, #24]
 800e260:	f7ff feac 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e264:	4a0f      	ldr	r2, [pc, #60]	; (800e2a4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800e266:	4620      	mov	r0, r4
 800e268:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e26c:	f7ff feab 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e270:	bd10      	pop	{r4, pc}
 800e272:	f248 0180 	movw	r1, #32896	; 0x8080
 800e276:	4b0a      	ldr	r3, [pc, #40]	; (800e2a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e278:	6818      	ldr	r0, [r3, #0]
 800e27a:	f7ff fec0 	bl	800dffe <Display::Status(Display7SegmentMessage)>
 800e27e:	e7f7      	b.n	800e270 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e280:	4b07      	ldr	r3, [pc, #28]	; (800e2a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e282:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e286:	6818      	ldr	r0, [r3, #0]
 800e288:	f7ff feb9 	bl	800dffe <Display::Status(Display7SegmentMessage)>
 800e28c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e290:	69a0      	ldr	r0, [r4, #24]
 800e292:	f7ff fe93 	bl	800dfbc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e296:	4a04      	ldr	r2, [pc, #16]	; (800e2a8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800e298:	e7e5      	b.n	800e266 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800e29a:	f645 3179 	movw	r1, #23417	; 0x5b79
 800e29e:	e7ea      	b.n	800e276 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800e2a0:	20009ad0 	ldrdcs	r9, [r0], -r0
 800e2a4:	08013551 	stmdaeq	r1, {r0, r4, r6, r8, sl, ip, sp}
 800e2a8:	0801355f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}

0800e2ac <DisplayUdf::ShowShutdown()>:
 800e2ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2b0:	4604      	mov	r4, r0
 800e2b2:	6980      	ldr	r0, [r0, #24]
 800e2b4:	b1d0      	cbz	r0, 800e2ec <DisplayUdf::ShowShutdown()+0x40>
 800e2b6:	f890 8005 	ldrb.w	r8, [r0, #5]
 800e2ba:	6803      	ldr	r3, [r0, #0]
 800e2bc:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800e2c0:	b2ed      	uxtb	r5, r5
 800e2c2:	462a      	mov	r2, r5
 800e2c4:	2100      	movs	r1, #0
 800e2c6:	6a1b      	ldr	r3, [r3, #32]
 800e2c8:	7906      	ldrb	r6, [r0, #4]
 800e2ca:	2700      	movs	r7, #0
 800e2cc:	4798      	blx	r3
 800e2ce:	3e01      	subs	r6, #1
 800e2d0:	42b7      	cmp	r7, r6
 800e2d2:	69a0      	ldr	r0, [r4, #24]
 800e2d4:	d311      	bcc.n	800e2fa <DisplayUdf::ShowShutdown()+0x4e>
 800e2d6:	b120      	cbz	r0, 800e2e2 <DisplayUdf::ShowShutdown()+0x36>
 800e2d8:	6803      	ldr	r3, [r0, #0]
 800e2da:	462a      	mov	r2, r5
 800e2dc:	2100      	movs	r1, #0
 800e2de:	6a1b      	ldr	r3, [r3, #32]
 800e2e0:	4798      	blx	r3
 800e2e2:	4641      	mov	r1, r8
 800e2e4:	4a08      	ldr	r2, [pc, #32]	; (800e308 <DisplayUdf::ShowShutdown()+0x5c>)
 800e2e6:	69a0      	ldr	r0, [r4, #24]
 800e2e8:	f7ff fe56 	bl	800df98 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e2ec:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800e2f0:	4620      	mov	r0, r4
 800e2f2:	f7ff fe84 	bl	800dffe <Display::Status(Display7SegmentMessage)>
 800e2f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2fa:	b118      	cbz	r0, 800e304 <DisplayUdf::ShowShutdown()+0x58>
 800e2fc:	6803      	ldr	r3, [r0, #0]
 800e2fe:	2120      	movs	r1, #32
 800e300:	695b      	ldr	r3, [r3, #20]
 800e302:	4798      	blx	r3
 800e304:	3701      	adds	r7, #1
 800e306:	e7e3      	b.n	800e2d0 <DisplayUdf::ShowShutdown()+0x24>
 800e308:	0801356d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sl, ip, sp}

0800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800e30c:	1e4b      	subs	r3, r1, #1
 800e30e:	2b05      	cmp	r3, #5
 800e310:	b530      	push	{r4, r5, lr}
 800e312:	d80f      	bhi.n	800e334 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800e314:	2300      	movs	r3, #0
 800e316:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 800e31a:	f814 5b01 	ldrb.w	r5, [r4], #1
 800e31e:	428d      	cmp	r5, r1
 800e320:	d109      	bne.n	800e336 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800e322:	1884      	adds	r4, r0, r2
 800e324:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800e328:	4403      	add	r3, r0
 800e32a:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800e32e:	4410      	add	r0, r2
 800e330:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800e334:	bd30      	pop	{r4, r5, pc}
 800e336:	3301      	adds	r3, #1
 800e338:	2b14      	cmp	r3, #20
 800e33a:	d1ee      	bne.n	800e31a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800e33c:	e7f7      	b.n	800e32e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

0800e340 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e340:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e342:	88c6      	ldrh	r6, [r0, #6]
 800e344:	8885      	ldrh	r5, [r0, #4]
 800e346:	42ae      	cmp	r6, r5
 800e348:	d216      	bcs.n	800e378 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e34a:	4604      	mov	r4, r0
 800e34c:	6800      	ldr	r0, [r0, #0]
 800e34e:	1bad      	subs	r5, r5, r6
 800e350:	4430      	add	r0, r6
 800e352:	7a26      	ldrb	r6, [r4, #8]
 800e354:	b923      	cbnz	r3, 800e360 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e356:	b926      	cbnz	r6, 800e362 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e358:	9200      	str	r2, [sp, #0]
 800e35a:	460b      	mov	r3, r1
 800e35c:	4a09      	ldr	r2, [pc, #36]	; (800e384 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e35e:	e003      	b.n	800e368 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e360:	b166      	cbz	r6, 800e37c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e362:	460b      	mov	r3, r1
 800e364:	9200      	str	r2, [sp, #0]
 800e366:	4a08      	ldr	r2, [pc, #32]	; (800e388 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e368:	4629      	mov	r1, r5
 800e36a:	f001 fb9f 	bl	800faac <snprintf>
 800e36e:	4285      	cmp	r5, r0
 800e370:	bfa2      	ittt	ge
 800e372:	88e3      	ldrhge	r3, [r4, #6]
 800e374:	181b      	addge	r3, r3, r0
 800e376:	80e3      	strhge	r3, [r4, #6]
 800e378:	b002      	add	sp, #8
 800e37a:	bd70      	pop	{r4, r5, r6, pc}
 800e37c:	9200      	str	r2, [sp, #0]
 800e37e:	460b      	mov	r3, r1
 800e380:	4a02      	ldr	r2, [pc, #8]	; (800e38c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e382:	e7f1      	b.n	800e368 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e384:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800e388:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 800e38c:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

0800e390 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800e390:	b510      	push	{r4, lr}
 800e392:	2220      	movs	r2, #32
 800e394:	4604      	mov	r4, r0
 800e396:	f840 1b04 	str.w	r1, [r0], #4
 800e39a:	2100      	movs	r1, #0
 800e39c:	f001 f944 	bl	800f628 <memset>
 800e3a0:	f647 7305 	movw	r3, #32517	; 0x7f05
 800e3a4:	4620      	mov	r0, r4
 800e3a6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e3a8:	bd10      	pop	{r4, pc}

0800e3aa <DisplayUdfParams::Load()>:
 800e3aa:	b508      	push	{r3, lr}
 800e3ac:	2300      	movs	r3, #0
 800e3ae:	4601      	mov	r1, r0
 800e3b0:	6043      	str	r3, [r0, #4]
 800e3b2:	6800      	ldr	r0, [r0, #0]
 800e3b4:	b120      	cbz	r0, 800e3c0 <DisplayUdfParams::Load()+0x16>
 800e3b6:	6803      	ldr	r3, [r0, #0]
 800e3b8:	3104      	adds	r1, #4
 800e3ba:	68db      	ldr	r3, [r3, #12]
 800e3bc:	4798      	blx	r3
 800e3be:	2001      	movs	r0, #1
 800e3c0:	bd08      	pop	{r3, pc}
	...

0800e3c4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 800e3c4:	6803      	ldr	r3, [r0, #0]
 800e3c6:	b1d3      	cbz	r3, 800e3fe <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800e3c8:	2300      	movs	r3, #0
 800e3ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e3cc:	460d      	mov	r5, r1
 800e3ce:	4616      	mov	r6, r2
 800e3d0:	4604      	mov	r4, r0
 800e3d2:	6043      	str	r3, [r0, #4]
 800e3d4:	4602      	mov	r2, r0
 800e3d6:	490a      	ldr	r1, [pc, #40]	; (800e400 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800e3d8:	4668      	mov	r0, sp
 800e3da:	f000 fb1f 	bl	800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e3de:	4632      	mov	r2, r6
 800e3e0:	4629      	mov	r1, r5
 800e3e2:	4668      	mov	r0, sp
 800e3e4:	f000 fb1e 	bl	800ea24 <ReadConfigFile::Read(char const*, unsigned int)>
 800e3e8:	4621      	mov	r1, r4
 800e3ea:	f851 0b04 	ldr.w	r0, [r1], #4
 800e3ee:	6803      	ldr	r3, [r0, #0]
 800e3f0:	689b      	ldr	r3, [r3, #8]
 800e3f2:	4798      	blx	r3
 800e3f4:	4668      	mov	r0, sp
 800e3f6:	f000 fb14 	bl	800ea22 <ReadConfigFile::~ReadConfigFile()>
 800e3fa:	b002      	add	sp, #8
 800e3fc:	bd70      	pop	{r4, r5, r6, pc}
 800e3fe:	4770      	bx	lr
 800e400:	0800e4cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, sp, lr, pc}

0800e404 <DisplayUdfParams::callbackFunction(char const*)>:
 800e404:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e406:	460e      	mov	r6, r1
 800e408:	4604      	mov	r4, r0
 800e40a:	492c      	ldr	r1, [pc, #176]	; (800e4bc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800e40c:	4630      	mov	r0, r6
 800e40e:	f10d 0207 	add.w	r2, sp, #7
 800e412:	f000 fbb3 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e416:	b968      	cbnz	r0, 800e434 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800e418:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e41c:	6863      	ldr	r3, [r4, #4]
 800e41e:	2a7f      	cmp	r2, #127	; 0x7f
 800e420:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800e424:	bf14      	ite	ne
 800e426:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800e42a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800e42e:	6063      	str	r3, [r4, #4]
 800e430:	b003      	add	sp, #12
 800e432:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e434:	4630      	mov	r0, r6
 800e436:	4922      	ldr	r1, [pc, #136]	; (800e4c0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800e438:	f10d 0207 	add.w	r2, sp, #7
 800e43c:	f000 fb9e 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e440:	b958      	cbnz	r0, 800e45a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800e442:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e446:	6863      	ldr	r3, [r4, #4]
 800e448:	2a05      	cmp	r2, #5
 800e44a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800e44e:	bf14      	ite	ne
 800e450:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800e454:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800e458:	e7e9      	b.n	800e42e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e45a:	4630      	mov	r0, r6
 800e45c:	4919      	ldr	r1, [pc, #100]	; (800e4c4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800e45e:	f10d 0207 	add.w	r2, sp, #7
 800e462:	f000 fb8b 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e466:	b948      	cbnz	r0, 800e47c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800e468:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e46c:	6863      	ldr	r3, [r4, #4]
 800e46e:	b112      	cbz	r2, 800e476 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800e470:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e474:	e7db      	b.n	800e42e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e476:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800e47a:	e7d8      	b.n	800e42e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e47c:	2500      	movs	r5, #0
 800e47e:	4f12      	ldr	r7, [pc, #72]	; (800e4c8 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 800e480:	4630      	mov	r0, r6
 800e482:	f857 1b04 	ldr.w	r1, [r7], #4
 800e486:	f10d 0207 	add.w	r2, sp, #7
 800e48a:	f000 fb77 	bl	800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e48e:	b980      	cbnz	r0, 800e4b2 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 800e490:	2301      	movs	r3, #1
 800e492:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e496:	40ab      	lsls	r3, r5
 800e498:	1e4e      	subs	r6, r1, #1
 800e49a:	2e05      	cmp	r6, #5
 800e49c:	6862      	ldr	r2, [r4, #4]
 800e49e:	4425      	add	r5, r4
 800e4a0:	d802      	bhi.n	800e4a8 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 800e4a2:	7229      	strb	r1, [r5, #8]
 800e4a4:	4313      	orrs	r3, r2
 800e4a6:	e7c2      	b.n	800e42e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e4a8:	ea22 0203 	bic.w	r2, r2, r3
 800e4ac:	7228      	strb	r0, [r5, #8]
 800e4ae:	6062      	str	r2, [r4, #4]
 800e4b0:	e7be      	b.n	800e430 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e4b2:	3501      	adds	r5, #1
 800e4b4:	2d14      	cmp	r5, #20
 800e4b6:	d1e3      	bne.n	800e480 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800e4b8:	e7ba      	b.n	800e430 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e4ba:	bf00      	nop
 800e4bc:	0801362e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, ip, sp}
 800e4c0:	080135f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp}
 800e4c4:	08013604 	stmdaeq	r1, {r2, r9, sl, ip, sp}
 800e4c8:	08013580 	stmdaeq	r1, {r7, r8, sl, ip, sp}

0800e4cc <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800e4cc:	f7ff bf9a 	b.w	800e404 <DisplayUdfParams::callbackFunction(char const*)>

0800e4d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e4d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4d4:	4604      	mov	r4, r0
 800e4d6:	4615      	mov	r5, r2
 800e4d8:	461e      	mov	r6, r3
 800e4da:	b086      	sub	sp, #24
 800e4dc:	3004      	adds	r0, #4
 800e4de:	b379      	cbz	r1, 800e540 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800e4e0:	2222      	movs	r2, #34	; 0x22
 800e4e2:	f001 f88a 	bl	800f5fa <memmove>
 800e4e6:	462a      	mov	r2, r5
 800e4e8:	4633      	mov	r3, r6
 800e4ea:	493d      	ldr	r1, [pc, #244]	; (800e5e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800e4ec:	a803      	add	r0, sp, #12
 800e4ee:	f000 f9f5 	bl	800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e4f2:	6863      	ldr	r3, [r4, #4]
 800e4f4:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800e4f8:	493a      	ldr	r1, [pc, #232]	; (800e5e4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800e4fa:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800e4fe:	a803      	add	r0, sp, #12
 800e500:	f7ff ff1e 	bl	800e340 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e504:	6863      	ldr	r3, [r4, #4]
 800e506:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800e50a:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800e50e:	4936      	ldr	r1, [pc, #216]	; (800e5e8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800e510:	a803      	add	r0, sp, #12
 800e512:	f7ff ff15 	bl	800e340 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e516:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e51a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e51e:	6863      	ldr	r3, [r4, #4]
 800e520:	42aa      	cmp	r2, r5
 800e522:	d226      	bcs.n	800e572 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800e524:	9803      	ldr	r0, [sp, #12]
 800e526:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800e52a:	4410      	add	r0, r2
 800e52c:	eba5 0502 	sub.w	r5, r5, r2
 800e530:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e534:	d10b      	bne.n	800e54e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800e536:	b962      	cbnz	r2, 800e552 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e538:	9200      	str	r2, [sp, #0]
 800e53a:	4b2c      	ldr	r3, [pc, #176]	; (800e5ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e53c:	4a2c      	ldr	r2, [pc, #176]	; (800e5f0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800e53e:	e00e      	b.n	800e55e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e540:	6823      	ldr	r3, [r4, #0]
 800e542:	4601      	mov	r1, r0
 800e544:	681a      	ldr	r2, [r3, #0]
 800e546:	4618      	mov	r0, r3
 800e548:	68d2      	ldr	r2, [r2, #12]
 800e54a:	4790      	blx	r2
 800e54c:	e7cb      	b.n	800e4e6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e54e:	2a00      	cmp	r2, #0
 800e550:	d041      	beq.n	800e5d6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800e552:	3b00      	subs	r3, #0
 800e554:	bf18      	it	ne
 800e556:	2301      	movne	r3, #1
 800e558:	4a26      	ldr	r2, [pc, #152]	; (800e5f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800e55a:	9300      	str	r3, [sp, #0]
 800e55c:	4b23      	ldr	r3, [pc, #140]	; (800e5ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e55e:	4629      	mov	r1, r5
 800e560:	f001 faa4 	bl	800faac <snprintf>
 800e564:	4285      	cmp	r5, r0
 800e566:	bfa2      	ittt	ge
 800e568:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e56c:	181b      	addge	r3, r3, r0
 800e56e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e572:	2500      	movs	r5, #0
 800e574:	2701      	movs	r7, #1
 800e576:	4e20      	ldr	r6, [pc, #128]	; (800e5f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800e578:	f104 0808 	add.w	r8, r4, #8
 800e57c:	f856 1b04 	ldr.w	r1, [r6], #4
 800e580:	780b      	ldrb	r3, [r1, #0]
 800e582:	b15b      	cbz	r3, 800e59c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800e584:	6862      	ldr	r2, [r4, #4]
 800e586:	fa07 f305 	lsl.w	r3, r7, r5
 800e58a:	4393      	bics	r3, r2
 800e58c:	bf0c      	ite	eq
 800e58e:	2301      	moveq	r3, #1
 800e590:	2300      	movne	r3, #0
 800e592:	f818 2005 	ldrb.w	r2, [r8, r5]
 800e596:	a803      	add	r0, sp, #12
 800e598:	f7ff fed2 	bl	800e340 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e59c:	3501      	adds	r5, #1
 800e59e:	2d14      	cmp	r5, #20
 800e5a0:	d1ec      	bne.n	800e57c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800e5a2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e5a6:	b17b      	cbz	r3, 800e5c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800e5a8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e5ac:	9b03      	ldr	r3, [sp, #12]
 800e5ae:	4413      	add	r3, r2
 800e5b0:	227d      	movs	r2, #125	; 0x7d
 800e5b2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e5b6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e5ba:	9903      	ldr	r1, [sp, #12]
 800e5bc:	54ca      	strb	r2, [r1, r3]
 800e5be:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e5c2:	3301      	adds	r3, #1
 800e5c4:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e5c8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e5cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e5ce:	601a      	str	r2, [r3, #0]
 800e5d0:	b006      	add	sp, #24
 800e5d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5d6:	2301      	movs	r3, #1
 800e5d8:	4a08      	ldr	r2, [pc, #32]	; (800e5fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800e5da:	9300      	str	r3, [sp, #0]
 800e5dc:	4b03      	ldr	r3, [pc, #12]	; (800e5ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e5de:	e7be      	b.n	800e55e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e5e0:	08013622 	stmdaeq	r1, {r1, r5, r9, sl, ip, sp}
 800e5e4:	0801362e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, ip, sp}
 800e5e8:	080135f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp}
 800e5ec:	08013604 	stmdaeq	r1, {r2, r9, sl, ip, sp}
 800e5f0:	08011f56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip}
 800e5f4:	08011f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip}
 800e5f8:	08013580 	stmdaeq	r1, {r7, r8, sl, ip, sp}
 800e5fc:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}

0800e600 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800e600:	b513      	push	{r0, r1, r4, lr}
 800e602:	6804      	ldr	r4, [r0, #0]
 800e604:	b914      	cbnz	r4, 800e60c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e606:	601c      	str	r4, [r3, #0]
 800e608:	b002      	add	sp, #8
 800e60a:	bd10      	pop	{r4, pc}
 800e60c:	9300      	str	r3, [sp, #0]
 800e60e:	4613      	mov	r3, r2
 800e610:	460a      	mov	r2, r1
 800e612:	2100      	movs	r1, #0
 800e614:	f7ff ff5c 	bl	800e4d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800e618:	e7f6      	b.n	800e608 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e61a <DisplayUdfParams::Set(DisplayUdf*)>:
 800e61a:	6843      	ldr	r3, [r0, #4]
 800e61c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e620:	009a      	lsls	r2, r3, #2
 800e622:	4604      	mov	r4, r0
 800e624:	460e      	mov	r6, r1
 800e626:	d506      	bpl.n	800e636 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e628:	6988      	ldr	r0, [r1, #24]
 800e62a:	b120      	cbz	r0, 800e636 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e62c:	6803      	ldr	r3, [r0, #0]
 800e62e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800e632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e634:	4798      	blx	r3
 800e636:	6863      	ldr	r3, [r4, #4]
 800e638:	69b0      	ldr	r0, [r6, #24]
 800e63a:	00db      	lsls	r3, r3, #3
 800e63c:	bf41      	itttt	mi
 800e63e:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800e642:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800e646:	4353      	mulmi	r3, r2
 800e648:	6173      	strmi	r3, [r6, #20]
 800e64a:	6861      	ldr	r1, [r4, #4]
 800e64c:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800e650:	b110      	cbz	r0, 800e658 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800e652:	6803      	ldr	r3, [r0, #0]
 800e654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e656:	4798      	blx	r3
 800e658:	2500      	movs	r5, #0
 800e65a:	2701      	movs	r7, #1
 800e65c:	f104 0808 	add.w	r8, r4, #8
 800e660:	6862      	ldr	r2, [r4, #4]
 800e662:	fa07 f305 	lsl.w	r3, r7, r5
 800e666:	4393      	bics	r3, r2
 800e668:	d105      	bne.n	800e676 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800e66a:	462a      	mov	r2, r5
 800e66c:	4630      	mov	r0, r6
 800e66e:	f818 1005 	ldrb.w	r1, [r8, r5]
 800e672:	f7ff fe4b 	bl	800e30c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800e676:	3501      	adds	r5, #1
 800e678:	2d14      	cmp	r5, #20
 800e67a:	d1f1      	bne.n	800e660 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800e67c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e680 <DisplayUdfParams::Dump()>:
 800e680:	4770      	bx	lr
	...

0800e684 <DisplayUdf::Show(E131Bridge*)>:
 800e684:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e688:	460e      	mov	r6, r1
 800e68a:	4604      	mov	r4, r0
 800e68c:	b085      	sub	sp, #20
 800e68e:	f7ff fd91 	bl	800e1b4 <DisplayUdf::Show()>
 800e692:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 800e696:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 800e69a:	4620      	mov	r0, r4
 800e69c:	4413      	add	r3, r2
 800e69e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800e6a2:	4a21      	ldr	r2, [pc, #132]	; (800e728 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800e6a4:	f7ff fc8f 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e6a8:	2500      	movs	r5, #0
 800e6aa:	4f20      	ldr	r7, [pc, #128]	; (800e72c <DisplayUdf::Show(E131Bridge*)+0xa8>)
 800e6ac:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800e730 <DisplayUdf::Show(E131Bridge*)+0xac>
 800e6b0:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800e734 <DisplayUdf::Show(E131Bridge*)+0xb0>
 800e6b4:	2301      	movs	r3, #1
 800e6b6:	4629      	mov	r1, r5
 800e6b8:	4630      	mov	r0, r6
 800e6ba:	f10d 020e 	add.w	r2, sp, #14
 800e6be:	f7fa f819 	bl	80086f4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800e6c2:	b1a8      	cbz	r0, 800e6f0 <DisplayUdf::Show(E131Bridge*)+0x6c>
 800e6c4:	2344      	movs	r3, #68	; 0x44
 800e6c6:	436b      	muls	r3, r5
 800e6c8:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 800e6cc:	58d2      	ldr	r2, [r2, r3]
 800e6ce:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800e6d2:	2a00      	cmp	r2, #0
 800e6d4:	bf0c      	ite	eq
 800e6d6:	463b      	moveq	r3, r7
 800e6d8:	4643      	movne	r3, r8
 800e6da:	e9cd 0300 	strd	r0, r3, [sp]
 800e6de:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800e6e2:	464a      	mov	r2, r9
 800e6e4:	4620      	mov	r0, r4
 800e6e6:	5d49      	ldrb	r1, [r1, r5]
 800e6e8:	f105 0341 	add.w	r3, r5, #65	; 0x41
 800e6ec:	f7ff fc6b 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e6f0:	3501      	adds	r5, #1
 800e6f2:	2d04      	cmp	r5, #4
 800e6f4:	d1de      	bne.n	800e6b4 <DisplayUdf::Show(E131Bridge*)+0x30>
 800e6f6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800e6f8:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800e6fc:	2a02      	cmp	r2, #2
 800e6fe:	d001      	beq.n	800e704 <DisplayUdf::Show(E131Bridge*)+0x80>
 800e700:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e702:	b933      	cbnz	r3, 800e712 <DisplayUdf::Show(E131Bridge*)+0x8e>
 800e704:	4620      	mov	r0, r4
 800e706:	4a0c      	ldr	r2, [pc, #48]	; (800e738 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 800e708:	f7ff fc5d 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e70c:	b005      	add	sp, #20
 800e70e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e712:	480a      	ldr	r0, [pc, #40]	; (800e73c <DisplayUdf::Show(E131Bridge*)+0xb8>)
 800e714:	9300      	str	r3, [sp, #0]
 800e716:	4b0a      	ldr	r3, [pc, #40]	; (800e740 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 800e718:	2a00      	cmp	r2, #0
 800e71a:	bf08      	it	eq
 800e71c:	4603      	moveq	r3, r0
 800e71e:	4620      	mov	r0, r4
 800e720:	4a08      	ldr	r2, [pc, #32]	; (800e744 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 800e722:	f7ff fc50 	bl	800dfc6 <Display::Printf(unsigned char, char const*, ...)>
 800e726:	e7f1      	b.n	800e70c <DisplayUdf::Show(E131Bridge*)+0x88>
 800e728:	08013638 	stmdaeq	r1, {r3, r4, r5, r9, sl, ip, sp}
 800e72c:	08011e60 	stmdaeq	r1, {r5, r6, r9, sl, fp, ip}
 800e730:	08011e64 	stmdaeq	r1, {r2, r5, r6, r9, sl, fp, ip}
 800e734:	0801363f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, ip, sp}
 800e738:	0801364e 	stmdaeq	r1, {r1, r2, r3, r6, r9, sl, ip, sp}
 800e73c:	08011f82 	stmdaeq	r1, {r1, r7, r8, r9, sl, fp, ip}
 800e740:	08011f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}
 800e744:	08013655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, ip, sp}

0800e748 <NetworkDisplay::ShowEmacStart()>:
 800e748:	4b01      	ldr	r3, [pc, #4]	; (800e750 <NetworkDisplay::ShowEmacStart()+0x8>)
 800e74a:	6818      	ldr	r0, [r3, #0]
 800e74c:	f7ff bc9c 	b.w	800e088 <DisplayUdf::ShowEmacStart()>
 800e750:	20009ac8 	andcs	r9, r0, r8, asr #21

0800e754 <NetworkDisplay::ShowIp()>:
 800e754:	4b01      	ldr	r3, [pc, #4]	; (800e75c <NetworkDisplay::ShowIp()+0x8>)
 800e756:	6818      	ldr	r0, [r3, #0]
 800e758:	f7ff bca6 	b.w	800e0a8 <DisplayUdf::ShowIpAddress()>
 800e75c:	20009ac8 	andcs	r9, r0, r8, asr #21

0800e760 <NetworkDisplay::ShowShutdown()>:
 800e760:	4b01      	ldr	r3, [pc, #4]	; (800e768 <NetworkDisplay::ShowShutdown()+0x8>)
 800e762:	6818      	ldr	r0, [r3, #0]
 800e764:	f7ff bda2 	b.w	800e2ac <DisplayUdf::ShowShutdown()>
 800e768:	20009ac8 	andcs	r9, r0, r8, asr #21

0800e76c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e76c:	4b01      	ldr	r3, [pc, #4]	; (800e774 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 800e76e:	6818      	ldr	r0, [r3, #0]
 800e770:	f7ff bd64 	b.w	800e23c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e774:	20009ac8 	andcs	r9, r0, r8, asr #21

0800e778 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e77c:	4603      	mov	r3, r0
 800e77e:	7800      	ldrb	r0, [r0, #0]
 800e780:	287b      	cmp	r0, #123	; 0x7b
 800e782:	f040 80a2 	bne.w	800e8ca <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e786:	b17a      	cbz	r2, 800e7a8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e788:	2401      	movs	r4, #1
 800e78a:	461e      	mov	r6, r3
 800e78c:	4620      	mov	r0, r4
 800e78e:	2a00      	cmp	r2, #0
 800e790:	bf0c      	ite	eq
 800e792:	f04f 0c0a 	moveq.w	ip, #10
 800e796:	f04f 0c00 	movne.w	ip, #0
 800e79a:	273d      	movs	r7, #61	; 0x3d
 800e79c:	42a1      	cmp	r1, r4
 800e79e:	d850      	bhi.n	800e842 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e7a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7a4:	463c      	mov	r4, r7
 800e7a6:	e7f2      	b.n	800e78e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e7a8:	2023      	movs	r0, #35	; 0x23
 800e7aa:	f803 0b01 	strb.w	r0, [r3], #1
 800e7ae:	461c      	mov	r4, r3
 800e7b0:	2701      	movs	r7, #1
 800e7b2:	42b9      	cmp	r1, r7
 800e7b4:	d811      	bhi.n	800e7da <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e7b6:	2001      	movs	r0, #1
 800e7b8:	461e      	mov	r6, r3
 800e7ba:	230a      	movs	r3, #10
 800e7bc:	4625      	mov	r5, r4
 800e7be:	f806 3b01 	strb.w	r3, [r6], #1
 800e7c2:	3001      	adds	r0, #1
 800e7c4:	462b      	mov	r3, r5
 800e7c6:	781c      	ldrb	r4, [r3, #0]
 800e7c8:	3501      	adds	r5, #1
 800e7ca:	2c7b      	cmp	r4, #123	; 0x7b
 800e7cc:	d0ea      	beq.n	800e7a4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e7ce:	42b9      	cmp	r1, r7
 800e7d0:	f107 0401 	add.w	r4, r7, #1
 800e7d4:	d9db      	bls.n	800e78e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e7d6:	4627      	mov	r7, r4
 800e7d8:	e7f4      	b.n	800e7c4 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e7da:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e7de:	2822      	cmp	r0, #34	; 0x22
 800e7e0:	d119      	bne.n	800e816 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e7e2:	46a4      	mov	ip, r4
 800e7e4:	461d      	mov	r5, r3
 800e7e6:	2601      	movs	r6, #1
 800e7e8:	f89c e000 	ldrb.w	lr, [ip]
 800e7ec:	4664      	mov	r4, ip
 800e7ee:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e7f2:	462b      	mov	r3, r5
 800e7f4:	4630      	mov	r0, r6
 800e7f6:	f10c 0c01 	add.w	ip, ip, #1
 800e7fa:	f105 0501 	add.w	r5, r5, #1
 800e7fe:	f106 0601 	add.w	r6, r6, #1
 800e802:	d0d9      	beq.n	800e7b8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e804:	3701      	adds	r7, #1
 800e806:	42b9      	cmp	r1, r7
 800e808:	4664      	mov	r4, ip
 800e80a:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e80e:	d8eb      	bhi.n	800e7e8 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e810:	4630      	mov	r0, r6
 800e812:	462b      	mov	r3, r5
 800e814:	e7d0      	b.n	800e7b8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e816:	3701      	adds	r7, #1
 800e818:	e7cb      	b.n	800e7b2 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e81a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e81e:	d110      	bne.n	800e842 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e820:	eba0 0803 	sub.w	r8, r0, r3
 800e824:	461a      	mov	r2, r3
 800e826:	eb08 0003 	add.w	r0, r8, r3
 800e82a:	f813 eb01 	ldrb.w	lr, [r3], #1
 800e82e:	1c65      	adds	r5, r4, #1
 800e830:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e834:	d04c      	beq.n	800e8d0 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800e836:	42a1      	cmp	r1, r4
 800e838:	d911      	bls.n	800e85e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e83a:	462c      	mov	r4, r5
 800e83c:	f806 eb01 	strb.w	lr, [r6], #1
 800e840:	e7f0      	b.n	800e824 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e842:	42a1      	cmp	r1, r4
 800e844:	461d      	mov	r5, r3
 800e846:	f893 e000 	ldrb.w	lr, [r3]
 800e84a:	f104 0401 	add.w	r4, r4, #1
 800e84e:	f103 0301 	add.w	r3, r3, #1
 800e852:	d8e2      	bhi.n	800e81a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e854:	462b      	mov	r3, r5
 800e856:	e7e3      	b.n	800e820 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800e858:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800e85c:	d009      	beq.n	800e872 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e85e:	42a9      	cmp	r1, r5
 800e860:	4614      	mov	r4, r2
 800e862:	f892 e000 	ldrb.w	lr, [r2]
 800e866:	f105 0501 	add.w	r5, r5, #1
 800e86a:	f102 0201 	add.w	r2, r2, #1
 800e86e:	d8f3      	bhi.n	800e858 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800e870:	4622      	mov	r2, r4
 800e872:	7814      	ldrb	r4, [r2, #0]
 800e874:	4696      	mov	lr, r2
 800e876:	2c2f      	cmp	r4, #47	; 0x2f
 800e878:	462b      	mov	r3, r5
 800e87a:	f102 0201 	add.w	r2, r2, #1
 800e87e:	f105 0501 	add.w	r5, r5, #1
 800e882:	d81a      	bhi.n	800e8ba <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800e884:	4299      	cmp	r1, r3
 800e886:	d8f4      	bhi.n	800e872 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e888:	2c22      	cmp	r4, #34	; 0x22
 800e88a:	bf08      	it	eq
 800e88c:	4696      	moveq	lr, r2
 800e88e:	4673      	mov	r3, lr
 800e890:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e894:	1c6c      	adds	r4, r5, #1
 800e896:	2a22      	cmp	r2, #34	; 0x22
 800e898:	d011      	beq.n	800e8be <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e89a:	2a2c      	cmp	r2, #44	; 0x2c
 800e89c:	d00f      	beq.n	800e8be <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e89e:	2a7d      	cmp	r2, #125	; 0x7d
 800e8a0:	d00d      	beq.n	800e8be <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e8a2:	42a9      	cmp	r1, r5
 800e8a4:	d90f      	bls.n	800e8c6 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800e8a6:	f1a2 0520 	sub.w	r5, r2, #32
 800e8aa:	2d5a      	cmp	r5, #90	; 0x5a
 800e8ac:	d803      	bhi.n	800e8b6 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800e8ae:	469e      	mov	lr, r3
 800e8b0:	f806 2b01 	strb.w	r2, [r6], #1
 800e8b4:	3001      	adds	r0, #1
 800e8b6:	4625      	mov	r5, r4
 800e8b8:	e7e9      	b.n	800e88e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e8ba:	461d      	mov	r5, r3
 800e8bc:	e7e7      	b.n	800e88e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e8be:	462c      	mov	r4, r5
 800e8c0:	f806 cb01 	strb.w	ip, [r6], #1
 800e8c4:	3001      	adds	r0, #1
 800e8c6:	3401      	adds	r4, #1
 800e8c8:	e768      	b.n	800e79c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e8ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e8ce:	e767      	b.n	800e7a0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800e8d0:	4625      	mov	r5, r4
 800e8d2:	f806 7b01 	strb.w	r7, [r6], #1
 800e8d6:	3001      	adds	r0, #1
 800e8d8:	e7c1      	b.n	800e85e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800e8dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e8dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e8e0:	6002      	str	r2, [r0, #0]
 800e8e2:	4614      	mov	r4, r2
 800e8e4:	2200      	movs	r2, #0
 800e8e6:	80c2      	strh	r2, [r0, #6]
 800e8e8:	4a1c      	ldr	r2, [pc, #112]	; (800e95c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e8ea:	4606      	mov	r6, r0
 800e8ec:	7812      	ldrb	r2, [r2, #0]
 800e8ee:	8083      	strh	r3, [r0, #4]
 800e8f0:	f002 0201 	and.w	r2, r2, #1
 800e8f4:	7202      	strb	r2, [r0, #8]
 800e8f6:	4608      	mov	r0, r1
 800e8f8:	4605      	mov	r5, r0
 800e8fa:	782f      	ldrb	r7, [r5, #0]
 800e8fc:	3001      	adds	r0, #1
 800e8fe:	2f00      	cmp	r7, #0
 800e900:	d1fa      	bne.n	800e8f8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e902:	1a6d      	subs	r5, r5, r1
 800e904:	b29b      	uxth	r3, r3
 800e906:	b1d2      	cbz	r2, 800e93e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e908:	1d2f      	adds	r7, r5, #4
 800e90a:	429f      	cmp	r7, r3
 800e90c:	d814      	bhi.n	800e938 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e90e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e912:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e916:	462a      	mov	r2, r5
 800e918:	f884 8000 	strb.w	r8, [r4]
 800e91c:	f884 9001 	strb.w	r9, [r4, #1]
 800e920:	1ca0      	adds	r0, r4, #2
 800e922:	f000 fe6a 	bl	800f5fa <memmove>
 800e926:	223a      	movs	r2, #58	; 0x3a
 800e928:	1963      	adds	r3, r4, r5
 800e92a:	3505      	adds	r5, #5
 800e92c:	f883 9002 	strb.w	r9, [r3, #2]
 800e930:	70da      	strb	r2, [r3, #3]
 800e932:	80f5      	strh	r5, [r6, #6]
 800e934:	f804 8007 	strb.w	r8, [r4, r7]
 800e938:	4630      	mov	r0, r6
 800e93a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e93e:	1caf      	adds	r7, r5, #2
 800e940:	429f      	cmp	r7, r3
 800e942:	d8f9      	bhi.n	800e938 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e944:	4620      	mov	r0, r4
 800e946:	2323      	movs	r3, #35	; 0x23
 800e948:	462a      	mov	r2, r5
 800e94a:	f800 3b01 	strb.w	r3, [r0], #1
 800e94e:	f000 fe54 	bl	800f5fa <memmove>
 800e952:	230a      	movs	r3, #10
 800e954:	442c      	add	r4, r5
 800e956:	7063      	strb	r3, [r4, #1]
 800e958:	80f7      	strh	r7, [r6, #6]
 800e95a:	e7ed      	b.n	800e938 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e95c:	20009acc 	andcs	r9, r0, ip, asr #21

0800e960 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e960:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e962:	469c      	mov	ip, r3
 800e964:	8885      	ldrh	r5, [r0, #4]
 800e966:	88c3      	ldrh	r3, [r0, #6]
 800e968:	b085      	sub	sp, #20
 800e96a:	42ab      	cmp	r3, r5
 800e96c:	d302      	bcc.n	800e974 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e96e:	2000      	movs	r0, #0
 800e970:	b005      	add	sp, #20
 800e972:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e974:	4604      	mov	r4, r0
 800e976:	6800      	ldr	r0, [r0, #0]
 800e978:	1aed      	subs	r5, r5, r3
 800e97a:	4418      	add	r0, r3
 800e97c:	b2d6      	uxtb	r6, r2
 800e97e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e982:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e986:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e98a:	0e12      	lsrs	r2, r2, #24
 800e98c:	f1bc 0f00 	cmp.w	ip, #0
 800e990:	d109      	bne.n	800e9a6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e992:	f1be 0f00 	cmp.w	lr, #0
 800e996:	d109      	bne.n	800e9ac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e998:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e99c:	e9cd 6700 	strd	r6, r7, [sp]
 800e9a0:	460b      	mov	r3, r1
 800e9a2:	4a0e      	ldr	r2, [pc, #56]	; (800e9dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e9a4:	e008      	b.n	800e9b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e9a6:	f1be 0f00 	cmp.w	lr, #0
 800e9aa:	d00f      	beq.n	800e9cc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e9ac:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e9b0:	460b      	mov	r3, r1
 800e9b2:	e9cd 6700 	strd	r6, r7, [sp]
 800e9b6:	4a0a      	ldr	r2, [pc, #40]	; (800e9e0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e9b8:	4629      	mov	r1, r5
 800e9ba:	f001 f877 	bl	800faac <snprintf>
 800e9be:	4285      	cmp	r5, r0
 800e9c0:	dbd5      	blt.n	800e96e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e9c2:	88e3      	ldrh	r3, [r4, #6]
 800e9c4:	4403      	add	r3, r0
 800e9c6:	80e3      	strh	r3, [r4, #6]
 800e9c8:	2001      	movs	r0, #1
 800e9ca:	e7d1      	b.n	800e970 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e9cc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e9d0:	e9cd 6700 	strd	r6, r7, [sp]
 800e9d4:	460b      	mov	r3, r1
 800e9d6:	4a03      	ldr	r2, [pc, #12]	; (800e9e4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e9d8:	e7ee      	b.n	800e9b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e9da:	bf00      	nop
 800e9dc:	08013673 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, ip, sp}
 800e9e0:	0801365f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, ip, sp}
 800e9e4:	08013674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, ip, sp}

0800e9e8 <PropertiesBuilder::AddComment(char const*)>:
 800e9e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9ea:	7a06      	ldrb	r6, [r0, #8]
 800e9ec:	b996      	cbnz	r6, 800ea14 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e9ee:	4604      	mov	r4, r0
 800e9f0:	88c0      	ldrh	r0, [r0, #6]
 800e9f2:	88a5      	ldrh	r5, [r4, #4]
 800e9f4:	42a8      	cmp	r0, r5
 800e9f6:	d20d      	bcs.n	800ea14 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e9f8:	6827      	ldr	r7, [r4, #0]
 800e9fa:	1a2d      	subs	r5, r5, r0
 800e9fc:	460b      	mov	r3, r1
 800e9fe:	4a06      	ldr	r2, [pc, #24]	; (800ea18 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800ea00:	4629      	mov	r1, r5
 800ea02:	4438      	add	r0, r7
 800ea04:	f001 f852 	bl	800faac <snprintf>
 800ea08:	4285      	cmp	r5, r0
 800ea0a:	bfa1      	itttt	ge
 800ea0c:	2601      	movge	r6, #1
 800ea0e:	88e3      	ldrhge	r3, [r4, #6]
 800ea10:	18c0      	addge	r0, r0, r3
 800ea12:	80e0      	strhge	r0, [r4, #6]
 800ea14:	4630      	mov	r0, r6
 800ea16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ea18:	08013684 	stmdaeq	r1, {r2, r7, r9, sl, ip, sp}

0800ea1c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800ea1c:	e9c0 1200 	strd	r1, r2, [r0]
 800ea20:	4770      	bx	lr

0800ea22 <ReadConfigFile::~ReadConfigFile()>:
 800ea22:	4770      	bx	lr

0800ea24 <ReadConfigFile::Read(char const*, unsigned int)>:
 800ea24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea28:	4606      	mov	r6, r0
 800ea2a:	460d      	mov	r5, r1
 800ea2c:	4614      	mov	r4, r2
 800ea2e:	f04f 0800 	mov.w	r8, #0
 800ea32:	b090      	sub	sp, #64	; 0x40
 800ea34:	b33c      	cbz	r4, 800ea86 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ea36:	466b      	mov	r3, sp
 800ea38:	462a      	mov	r2, r5
 800ea3a:	4619      	mov	r1, r3
 800ea3c:	e007      	b.n	800ea4e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800ea3e:	f803 7b01 	strb.w	r7, [r3], #1
 800ea42:	1a58      	subs	r0, r3, r1
 800ea44:	283f      	cmp	r0, #63	; 0x3f
 800ea46:	4615      	mov	r5, r2
 800ea48:	dc1d      	bgt.n	800ea86 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ea4a:	3c01      	subs	r4, #1
 800ea4c:	d00f      	beq.n	800ea6e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ea4e:	7817      	ldrb	r7, [r2, #0]
 800ea50:	4610      	mov	r0, r2
 800ea52:	2f0d      	cmp	r7, #13
 800ea54:	f102 0201 	add.w	r2, r2, #1
 800ea58:	d001      	beq.n	800ea5e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ea5a:	2f0a      	cmp	r7, #10
 800ea5c:	d1ef      	bne.n	800ea3e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800ea5e:	4605      	mov	r5, r0
 800ea60:	b12c      	cbz	r4, 800ea6e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800ea62:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ea66:	2a0d      	cmp	r2, #13
 800ea68:	d00b      	beq.n	800ea82 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ea6a:	2a0a      	cmp	r2, #10
 800ea6c:	d009      	beq.n	800ea82 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ea6e:	f89d 2000 	ldrb.w	r2, [sp]
 800ea72:	2a60      	cmp	r2, #96	; 0x60
 800ea74:	d9de      	bls.n	800ea34 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ea76:	f883 8000 	strb.w	r8, [r3]
 800ea7a:	e9d6 3000 	ldrd	r3, r0, [r6]
 800ea7e:	4798      	blx	r3
 800ea80:	e7d8      	b.n	800ea34 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ea82:	3c01      	subs	r4, #1
 800ea84:	e7eb      	b.n	800ea5e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800ea86:	b010      	add	sp, #64	; 0x40
 800ea88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ea8c <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800ea8c:	b570      	push	{r4, r5, r6, lr}
 800ea8e:	4615      	mov	r5, r2
 800ea90:	461c      	mov	r4, r3
 800ea92:	f000 f890 	bl	800ebb6 <Sscan::checkName(char const*, char const*)>
 800ea96:	b180      	cbz	r0, 800eaba <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800ea98:	2100      	movs	r1, #0
 800ea9a:	5c43      	ldrb	r3, [r0, r1]
 800ea9c:	6826      	ldr	r6, [r4, #0]
 800ea9e:	b28a      	uxth	r2, r1
 800eaa0:	b143      	cbz	r3, 800eab4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800eaa2:	42b2      	cmp	r2, r6
 800eaa4:	d303      	bcc.n	800eaae <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800eaa6:	2b0a      	cmp	r3, #10
 800eaa8:	d004      	beq.n	800eab4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800eaaa:	2002      	movs	r0, #2
 800eaac:	e004      	b.n	800eab8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800eaae:	546b      	strb	r3, [r5, r1]
 800eab0:	3101      	adds	r1, #1
 800eab2:	e7f2      	b.n	800ea9a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800eab4:	2000      	movs	r0, #0
 800eab6:	6022      	str	r2, [r4, #0]
 800eab8:	bd70      	pop	{r4, r5, r6, pc}
 800eaba:	2001      	movs	r0, #1
 800eabc:	e7fc      	b.n	800eab8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800eabe <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800eabe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eac0:	4615      	mov	r5, r2
 800eac2:	f000 f878 	bl	800ebb6 <Sscan::checkName(char const*, char const*)>
 800eac6:	bb58      	cbnz	r0, 800eb20 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800eac8:	2001      	movs	r0, #1
 800eaca:	e027      	b.n	800eb1c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800eacc:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ead0:	2b09      	cmp	r3, #9
 800ead2:	d822      	bhi.n	800eb1a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800ead4:	4603      	mov	r3, r0
 800ead6:	fb0c 2101 	mla	r1, ip, r1, r2
 800eada:	3930      	subs	r1, #48	; 0x30
 800eadc:	4618      	mov	r0, r3
 800eade:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eae2:	2a2e      	cmp	r2, #46	; 0x2e
 800eae4:	d115      	bne.n	800eb12 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800eae6:	29ff      	cmp	r1, #255	; 0xff
 800eae8:	d817      	bhi.n	800eb1a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800eaea:	3401      	adds	r4, #1
 800eaec:	2c03      	cmp	r4, #3
 800eaee:	f806 1b01 	strb.w	r1, [r6], #1
 800eaf2:	d119      	bne.n	800eb28 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800eaf4:	2400      	movs	r4, #0
 800eaf6:	260a      	movs	r6, #10
 800eaf8:	1d1a      	adds	r2, r3, #4
 800eafa:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800eafe:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800eb02:	d115      	bne.n	800eb30 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800eb04:	2cff      	cmp	r4, #255	; 0xff
 800eb06:	d808      	bhi.n	800eb1a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800eb08:	f88d 4007 	strb.w	r4, [sp, #7]
 800eb0c:	9b01      	ldr	r3, [sp, #4]
 800eb0e:	602b      	str	r3, [r5, #0]
 800eb10:	e004      	b.n	800eb1c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800eb12:	2a00      	cmp	r2, #0
 800eb14:	d0e7      	beq.n	800eae6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800eb16:	42b8      	cmp	r0, r7
 800eb18:	d1d8      	bne.n	800eacc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800eb1a:	2002      	movs	r0, #2
 800eb1c:	b003      	add	sp, #12
 800eb1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb20:	2400      	movs	r4, #0
 800eb22:	f04f 0c0a 	mov.w	ip, #10
 800eb26:	ae01      	add	r6, sp, #4
 800eb28:	4603      	mov	r3, r0
 800eb2a:	2100      	movs	r1, #0
 800eb2c:	1d07      	adds	r7, r0, #4
 800eb2e:	e7d5      	b.n	800eadc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800eb30:	4293      	cmp	r3, r2
 800eb32:	d0f2      	beq.n	800eb1a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800eb34:	3930      	subs	r1, #48	; 0x30
 800eb36:	2909      	cmp	r1, #9
 800eb38:	d8ef      	bhi.n	800eb1a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800eb3a:	fb06 1404 	mla	r4, r6, r4, r1
 800eb3e:	e7dc      	b.n	800eafa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800eb40 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800eb40:	b538      	push	{r3, r4, r5, lr}
 800eb42:	4615      	mov	r5, r2
 800eb44:	f000 f837 	bl	800ebb6 <Sscan::checkName(char const*, char const*)>
 800eb48:	b1a0      	cbz	r0, 800eb74 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800eb4a:	4604      	mov	r4, r0
 800eb4c:	2100      	movs	r1, #0
 800eb4e:	220a      	movs	r2, #10
 800eb50:	7823      	ldrb	r3, [r4, #0]
 800eb52:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800eb56:	2809      	cmp	r0, #9
 800eb58:	d80e      	bhi.n	800eb78 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800eb5a:	fb02 3101 	mla	r1, r2, r1, r3
 800eb5e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800eb62:	3930      	subs	r1, #48	; 0x30
 800eb64:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800eb68:	d1f2      	bne.n	800eb50 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800eb6a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800eb6e:	d203      	bcs.n	800eb78 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800eb70:	8029      	strh	r1, [r5, #0]
 800eb72:	bd38      	pop	{r3, r4, r5, pc}
 800eb74:	2001      	movs	r0, #1
 800eb76:	e7fc      	b.n	800eb72 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800eb78:	2002      	movs	r0, #2
 800eb7a:	e7fa      	b.n	800eb72 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800eb7c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800eb7c:	b538      	push	{r3, r4, r5, lr}
 800eb7e:	4615      	mov	r5, r2
 800eb80:	f000 f819 	bl	800ebb6 <Sscan::checkName(char const*, char const*)>
 800eb84:	b198      	cbz	r0, 800ebae <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800eb86:	4604      	mov	r4, r0
 800eb88:	2100      	movs	r1, #0
 800eb8a:	220a      	movs	r2, #10
 800eb8c:	7823      	ldrb	r3, [r4, #0]
 800eb8e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800eb92:	2809      	cmp	r0, #9
 800eb94:	d80d      	bhi.n	800ebb2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800eb96:	fb02 3101 	mla	r1, r2, r1, r3
 800eb9a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800eb9e:	3930      	subs	r1, #48	; 0x30
 800eba0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800eba4:	d1f2      	bne.n	800eb8c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800eba6:	29ff      	cmp	r1, #255	; 0xff
 800eba8:	d803      	bhi.n	800ebb2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ebaa:	7029      	strb	r1, [r5, #0]
 800ebac:	bd38      	pop	{r3, r4, r5, pc}
 800ebae:	2001      	movs	r0, #1
 800ebb0:	e7fc      	b.n	800ebac <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800ebb2:	2002      	movs	r0, #2
 800ebb4:	e7fa      	b.n	800ebac <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800ebb6 <Sscan::checkName(char const*, char const*)>:
 800ebb6:	4603      	mov	r3, r0
 800ebb8:	b510      	push	{r4, lr}
 800ebba:	3901      	subs	r1, #1
 800ebbc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ebc0:	461c      	mov	r4, r3
 800ebc2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ebc6:	b120      	cbz	r0, 800ebd2 <Sscan::checkName(char const*, char const*)+0x1c>
 800ebc8:	b10a      	cbz	r2, 800ebce <Sscan::checkName(char const*, char const*)+0x18>
 800ebca:	4290      	cmp	r0, r2
 800ebcc:	d0f6      	beq.n	800ebbc <Sscan::checkName(char const*, char const*)+0x6>
 800ebce:	2000      	movs	r0, #0
 800ebd0:	e006      	b.n	800ebe0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ebd2:	2a3d      	cmp	r2, #61	; 0x3d
 800ebd4:	d104      	bne.n	800ebe0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ebd6:	7860      	ldrb	r0, [r4, #1]
 800ebd8:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800ebdc:	d000      	beq.n	800ebe0 <Sscan::checkName(char const*, char const*)+0x2a>
 800ebde:	1c60      	adds	r0, r4, #1
 800ebe0:	bd10      	pop	{r4, pc}

0800ebe2 <LightSet::GetDmxStartAddress()>:
 800ebe2:	2001      	movs	r0, #1
 800ebe4:	4770      	bx	lr

0800ebe6 <LightSet::GetDmxFootprint()>:
 800ebe6:	f44f 7000 	mov.w	r0, #512	; 0x200
 800ebea:	4770      	bx	lr

0800ebec <LightSet::SetDmxStartAddress(unsigned short)>:
 800ebec:	2000      	movs	r0, #0
 800ebee:	4770      	bx	lr

0800ebf0 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800ebf0:	2300      	movs	r3, #0
 800ebf2:	2001      	movs	r0, #1
 800ebf4:	7093      	strb	r3, [r2, #2]
 800ebf6:	8010      	strh	r0, [r2, #0]
 800ebf8:	4770      	bx	lr
	...

0800ebfc <Display::PrintInfo() [clone .isra.0]>:
 800ebfc:	b910      	cbnz	r0, 800ec04 <Display::PrintInfo() [clone .isra.0]+0x8>
 800ebfe:	4803      	ldr	r0, [pc, #12]	; (800ec0c <Display::PrintInfo() [clone .isra.0]+0x10>)
 800ec00:	f000 bf7c 	b.w	800fafc <puts>
 800ec04:	6803      	ldr	r3, [r0, #0]
 800ec06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec08:	4718      	bx	r3
 800ec0a:	bf00      	nop
 800ec0c:	08013777 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip, sp}

0800ec10 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800ec10:	b513      	push	{r0, r1, r4, lr}
 800ec12:	4604      	mov	r4, r0
 800ec14:	0a13      	lsrs	r3, r2, #8
 800ec16:	7800      	ldrb	r0, [r0, #0]
 800ec18:	f88d 1004 	strb.w	r1, [sp, #4]
 800ec1c:	f88d 3005 	strb.w	r3, [sp, #5]
 800ec20:	f88d 2006 	strb.w	r2, [sp, #6]
 800ec24:	f001 ff8c 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800ec28:	6860      	ldr	r0, [r4, #4]
 800ec2a:	f001 ff81 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 800ec2e:	2103      	movs	r1, #3
 800ec30:	a801      	add	r0, sp, #4
 800ec32:	f001 ff8b 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800ec36:	b002      	add	sp, #8
 800ec38:	bd10      	pop	{r4, pc}

0800ec3a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800ec3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec3c:	460d      	mov	r5, r1
 800ec3e:	4604      	mov	r4, r0
 800ec40:	f001 ff7e 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800ec44:	4628      	mov	r0, r5
 800ec46:	f001 ff73 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 800ec4a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ec4e:	2b07      	cmp	r3, #7
 800ec50:	d902      	bls.n	800ec58 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800ec52:	3c50      	subs	r4, #80	; 0x50
 800ec54:	2c0f      	cmp	r4, #15
 800ec56:	d809      	bhi.n	800ec6c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800ec58:	2101      	movs	r1, #1
 800ec5a:	f10d 0007 	add.w	r0, sp, #7
 800ec5e:	f001 ffdb 	bl	8010c18 <gd32_i2c_read(char*, unsigned int)>
 800ec62:	fab0 f080 	clz	r0, r0
 800ec66:	0940      	lsrs	r0, r0, #5
 800ec68:	b003      	add	sp, #12
 800ec6a:	bd30      	pop	{r4, r5, pc}
 800ec6c:	2100      	movs	r1, #0
 800ec6e:	4608      	mov	r0, r1
 800ec70:	f001 ff6c 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800ec74:	e7f5      	b.n	800ec62 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800ec76 <Display::Detect7Segment()>:
 800ec76:	b538      	push	{r3, r4, r5, lr}
 800ec78:	68c1      	ldr	r1, [r0, #12]
 800ec7a:	4604      	mov	r4, r0
 800ec7c:	7a00      	ldrb	r0, [r0, #8]
 800ec7e:	f7ff ffdc 	bl	800ec3a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800ec82:	7460      	strb	r0, [r4, #17]
 800ec84:	b170      	cbz	r0, 800eca4 <Display::Detect7Segment()+0x2e>
 800ec86:	2200      	movs	r2, #0
 800ec88:	f104 0508 	add.w	r5, r4, #8
 800ec8c:	4611      	mov	r1, r2
 800ec8e:	4628      	mov	r0, r5
 800ec90:	f7ff ffbe 	bl	800ec10 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ec94:	7c63      	ldrb	r3, [r4, #17]
 800ec96:	b12b      	cbz	r3, 800eca4 <Display::Detect7Segment()+0x2e>
 800ec98:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800ec9c:	2112      	movs	r1, #18
 800ec9e:	4628      	mov	r0, r5
 800eca0:	f7ff ffb6 	bl	800ec10 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800eca4:	bd38      	pop	{r3, r4, r5, pc}

0800eca6 <Display::Detect(display::Type)>:
 800eca6:	2902      	cmp	r1, #2
 800eca8:	b538      	push	{r3, r4, r5, lr}
 800ecaa:	4604      	mov	r4, r0
 800ecac:	d014      	beq.n	800ecd8 <Display::Detect(display::Type)+0x32>
 800ecae:	2904      	cmp	r1, #4
 800ecb0:	d01b      	beq.n	800ecea <Display::Detect(display::Type)+0x44>
 800ecb2:	69a0      	ldr	r0, [r4, #24]
 800ecb4:	b168      	cbz	r0, 800ecd2 <Display::Detect(display::Type)+0x2c>
 800ecb6:	6803      	ldr	r3, [r0, #0]
 800ecb8:	689b      	ldr	r3, [r3, #8]
 800ecba:	4798      	blx	r3
 800ecbc:	4603      	mov	r3, r0
 800ecbe:	69a0      	ldr	r0, [r4, #24]
 800ecc0:	b9ab      	cbnz	r3, 800ecee <Display::Detect(display::Type)+0x48>
 800ecc2:	b110      	cbz	r0, 800ecca <Display::Detect(display::Type)+0x24>
 800ecc4:	6803      	ldr	r3, [r0, #0]
 800ecc6:	685b      	ldr	r3, [r3, #4]
 800ecc8:	4798      	blx	r3
 800ecca:	2300      	movs	r3, #0
 800eccc:	61a3      	str	r3, [r4, #24]
 800ecce:	2304      	movs	r3, #4
 800ecd0:	6023      	str	r3, [r4, #0]
 800ecd2:	2300      	movs	r3, #0
 800ecd4:	6163      	str	r3, [r4, #20]
 800ecd6:	e010      	b.n	800ecfa <Display::Detect(display::Type)+0x54>
 800ecd8:	2018      	movs	r0, #24
 800ecda:	f000 fbcf 	bl	800f47c <operator new(unsigned int)>
 800ecde:	4605      	mov	r5, r0
 800ece0:	2100      	movs	r1, #0
 800ece2:	f000 f89d 	bl	800ee20 <Ssd1306::Ssd1306(TOledPanel)>
 800ece6:	61a5      	str	r5, [r4, #24]
 800ece8:	e7e3      	b.n	800ecb2 <Display::Detect(display::Type)+0xc>
 800ecea:	6001      	str	r1, [r0, #0]
 800ecec:	e7e1      	b.n	800ecb2 <Display::Detect(display::Type)+0xc>
 800ecee:	6803      	ldr	r3, [r0, #0]
 800ecf0:	68db      	ldr	r3, [r3, #12]
 800ecf2:	4798      	blx	r3
 800ecf4:	69a3      	ldr	r3, [r4, #24]
 800ecf6:	2b00      	cmp	r3, #0
 800ecf8:	d0eb      	beq.n	800ecd2 <Display::Detect(display::Type)+0x2c>
 800ecfa:	bd38      	pop	{r3, r4, r5, pc}

0800ecfc <Display::Display()>:
 800ecfc:	2304      	movs	r3, #4
 800ecfe:	b510      	push	{r4, lr}
 800ed00:	6003      	str	r3, [r0, #0]
 800ed02:	4b0f      	ldr	r3, [pc, #60]	; (800ed40 <Display::Display()+0x44>)
 800ed04:	4604      	mov	r4, r0
 800ed06:	681b      	ldr	r3, [r3, #0]
 800ed08:	4a0e      	ldr	r2, [pc, #56]	; (800ed44 <Display::Display()+0x48>)
 800ed0a:	6043      	str	r3, [r0, #4]
 800ed0c:	2321      	movs	r3, #33	; 0x21
 800ed0e:	7203      	strb	r3, [r0, #8]
 800ed10:	4b0d      	ldr	r3, [pc, #52]	; (800ed48 <Display::Display()+0x4c>)
 800ed12:	2102      	movs	r1, #2
 800ed14:	60c3      	str	r3, [r0, #12]
 800ed16:	2300      	movs	r3, #0
 800ed18:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800ed1c:	8203      	strh	r3, [r0, #16]
 800ed1e:	4b0b      	ldr	r3, [pc, #44]	; (800ed4c <Display::Display()+0x50>)
 800ed20:	6018      	str	r0, [r3, #0]
 800ed22:	f7ff ffc0 	bl	800eca6 <Display::Detect(display::Type)>
 800ed26:	4620      	mov	r0, r4
 800ed28:	f7ff ffa5 	bl	800ec76 <Display::Detect7Segment()>
 800ed2c:	69a3      	ldr	r3, [r4, #24]
 800ed2e:	b10b      	cbz	r3, 800ed34 <Display::Display()+0x38>
 800ed30:	f7f8 fffa 	bl	8007d28 <display::timeout::gpio_init()>
 800ed34:	69a0      	ldr	r0, [r4, #24]
 800ed36:	f7ff ff61 	bl	800ebfc <Display::PrintInfo() [clone .isra.0]>
 800ed3a:	4620      	mov	r0, r4
 800ed3c:	bd10      	pop	{r4, pc}
 800ed3e:	bf00      	nop
 800ed40:	20009bdc 	ldrdcs	r9, [r0], -ip
 800ed44:	000493e0 	andeq	r9, r4, r0, ror #7
 800ed48:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ed4c:	20009ad0 	ldrdcs	r9, [r0], -r0

0800ed50 <Ssd1306::~Ssd1306()>:
 800ed50:	4770      	bx	lr

0800ed52 <Ssd1306::SetCursor(unsigned int)>:
 800ed52:	4770      	bx	lr

0800ed54 <Ssd1306::PrintInfo()>:
 800ed54:	b410      	push	{r4}
 800ed56:	4906      	ldr	r1, [pc, #24]	; (800ed70 <Ssd1306::PrintInfo()+0x1c>)
 800ed58:	7c44      	ldrb	r4, [r0, #17]
 800ed5a:	7903      	ldrb	r3, [r0, #4]
 800ed5c:	7942      	ldrb	r2, [r0, #5]
 800ed5e:	4805      	ldr	r0, [pc, #20]	; (800ed74 <Ssd1306::PrintInfo()+0x20>)
 800ed60:	2c00      	cmp	r4, #0
 800ed62:	bf08      	it	eq
 800ed64:	4601      	moveq	r1, r0
 800ed66:	4804      	ldr	r0, [pc, #16]	; (800ed78 <Ssd1306::PrintInfo()+0x24>)
 800ed68:	bc10      	pop	{r4}
 800ed6a:	f000 be77 	b.w	800fa5c <printf>
 800ed6e:	bf00      	nop
 800ed70:	08013788 	stmdaeq	r1, {r3, r7, r8, r9, sl, ip, sp}
 800ed74:	0801378f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, sl, ip, sp}
 800ed78:	08013797 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, ip, sp}

0800ed7c <Ssd1306::~Ssd1306()>:
 800ed7c:	b510      	push	{r4, lr}
 800ed7e:	4604      	mov	r4, r0
 800ed80:	f000 fb78 	bl	800f474 <operator delete(void*)>
 800ed84:	4620      	mov	r0, r4
 800ed86:	bd10      	pop	{r4, pc}

0800ed88 <HAL_I2C::Setup()>:
 800ed88:	b510      	push	{r4, lr}
 800ed8a:	4604      	mov	r4, r0
 800ed8c:	7800      	ldrb	r0, [r0, #0]
 800ed8e:	f001 fed7 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800ed92:	6860      	ldr	r0, [r4, #4]
 800ed94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed98:	f001 beca 	b.w	8010b30 <gd32_i2c_set_baudrate(unsigned int)>

0800ed9c <Ssd1306::PutChar(int)>:
 800ed9c:	b510      	push	{r4, lr}
 800ed9e:	f1a1 0420 	sub.w	r4, r1, #32
 800eda2:	2c5f      	cmp	r4, #95	; 0x5f
 800eda4:	bf88      	it	hi
 800eda6:	2400      	movhi	r4, #0
 800eda8:	3008      	adds	r0, #8
 800edaa:	f7ff ffed 	bl	800ed88 <HAL_I2C::Setup()>
 800edae:	4804      	ldr	r0, [pc, #16]	; (800edc0 <Ssd1306::PutChar(int)+0x24>)
 800edb0:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800edb4:	4420      	add	r0, r4
 800edb6:	2107      	movs	r1, #7
 800edb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edbc:	f001 bec6 	b.w	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800edc0:	080137ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, ip, sp}

0800edc4 <Ssd1306::PutString(char const*)>:
 800edc4:	b538      	push	{r3, r4, r5, lr}
 800edc6:	4605      	mov	r5, r0
 800edc8:	1e4c      	subs	r4, r1, #1
 800edca:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800edce:	b901      	cbnz	r1, 800edd2 <Ssd1306::PutString(char const*)+0xe>
 800edd0:	bd38      	pop	{r3, r4, r5, pc}
 800edd2:	4628      	mov	r0, r5
 800edd4:	f7ff ffe2 	bl	800ed9c <Ssd1306::PutChar(int)>
 800edd8:	e7f7      	b.n	800edca <Ssd1306::PutString(char const*)+0x6>

0800edda <Ssd1306::Text(char const*, unsigned int)>:
 800edda:	b570      	push	{r4, r5, r6, lr}
 800eddc:	7903      	ldrb	r3, [r0, #4]
 800edde:	4605      	mov	r5, r0
 800ede0:	460c      	mov	r4, r1
 800ede2:	4293      	cmp	r3, r2
 800ede4:	bf94      	ite	ls
 800ede6:	18ce      	addls	r6, r1, r3
 800ede8:	188e      	addhi	r6, r1, r2
 800edea:	42b4      	cmp	r4, r6
 800edec:	d100      	bne.n	800edf0 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800edee:	bd70      	pop	{r4, r5, r6, pc}
 800edf0:	4628      	mov	r0, r5
 800edf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800edf6:	f7ff ffd1 	bl	800ed9c <Ssd1306::PutChar(int)>
 800edfa:	e7f6      	b.n	800edea <Ssd1306::Text(char const*, unsigned int)+0x10>

0800edfc <Ssd1306::InitMembers()>:
 800edfc:	7c03      	ldrb	r3, [r0, #16]
 800edfe:	b14b      	cbz	r3, 800ee14 <Ssd1306::InitMembers()+0x18>
 800ee00:	3b01      	subs	r3, #1
 800ee02:	2b01      	cmp	r3, #1
 800ee04:	d909      	bls.n	800ee1a <Ssd1306::InitMembers()+0x1e>
 800ee06:	2308      	movs	r3, #8
 800ee08:	2204      	movs	r2, #4
 800ee0a:	2115      	movs	r1, #21
 800ee0c:	7143      	strb	r3, [r0, #5]
 800ee0e:	7101      	strb	r1, [r0, #4]
 800ee10:	6142      	str	r2, [r0, #20]
 800ee12:	4770      	bx	lr
 800ee14:	2308      	movs	r3, #8
 800ee16:	461a      	mov	r2, r3
 800ee18:	e7f7      	b.n	800ee0a <Ssd1306::InitMembers()+0xe>
 800ee1a:	2304      	movs	r3, #4
 800ee1c:	e7fb      	b.n	800ee16 <Ssd1306::InitMembers()+0x1a>
	...

0800ee20 <Ssd1306::Ssd1306(TOledPanel)>:
 800ee20:	4a08      	ldr	r2, [pc, #32]	; (800ee44 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800ee22:	b508      	push	{r3, lr}
 800ee24:	6002      	str	r2, [r0, #0]
 800ee26:	227f      	movs	r2, #127	; 0x7f
 800ee28:	80c2      	strh	r2, [r0, #6]
 800ee2a:	223c      	movs	r2, #60	; 0x3c
 800ee2c:	7202      	strb	r2, [r0, #8]
 800ee2e:	4a06      	ldr	r2, [pc, #24]	; (800ee48 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800ee30:	7401      	strb	r1, [r0, #16]
 800ee32:	60c2      	str	r2, [r0, #12]
 800ee34:	2200      	movs	r2, #0
 800ee36:	7442      	strb	r2, [r0, #17]
 800ee38:	4a04      	ldr	r2, [pc, #16]	; (800ee4c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800ee3a:	6010      	str	r0, [r2, #0]
 800ee3c:	f7ff ffde 	bl	800edfc <Ssd1306::InitMembers()>
 800ee40:	bd08      	pop	{r3, pc}
 800ee42:	bf00      	nop
 800ee44:	08013a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, sp}
 800ee48:	00061a80 	andeq	r1, r6, r0, lsl #21
 800ee4c:	20009b5c 	andcs	r9, r0, ip, asr fp

0800ee50 <Ssd1306::SendCommand(unsigned char)>:
 800ee50:	2300      	movs	r3, #0
 800ee52:	b507      	push	{r0, r1, r2, lr}
 800ee54:	3008      	adds	r0, #8
 800ee56:	f88d 3004 	strb.w	r3, [sp, #4]
 800ee5a:	f88d 1005 	strb.w	r1, [sp, #5]
 800ee5e:	f7ff ff93 	bl	800ed88 <HAL_I2C::Setup()>
 800ee62:	2102      	movs	r1, #2
 800ee64:	a801      	add	r0, sp, #4
 800ee66:	f001 fe71 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800ee6a:	b003      	add	sp, #12
 800ee6c:	f85d fb04 	ldr.w	pc, [sp], #4

0800ee70 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800ee70:	2914      	cmp	r1, #20
 800ee72:	b570      	push	{r4, r5, r6, lr}
 800ee74:	4605      	mov	r5, r0
 800ee76:	4616      	mov	r6, r2
 800ee78:	d81c      	bhi.n	800eeb4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800ee7a:	7943      	ldrb	r3, [r0, #5]
 800ee7c:	4293      	cmp	r3, r2
 800ee7e:	d919      	bls.n	800eeb4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800ee80:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800ee84:	7c43      	ldrb	r3, [r0, #17]
 800ee86:	004c      	lsls	r4, r1, #1
 800ee88:	b2e4      	uxtb	r4, r4
 800ee8a:	b10b      	cbz	r3, 800ee90 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800ee8c:	3404      	adds	r4, #4
 800ee8e:	b2e4      	uxtb	r4, r4
 800ee90:	4628      	mov	r0, r5
 800ee92:	f004 010e 	and.w	r1, r4, #14
 800ee96:	f7ff ffdb 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ee9a:	0921      	lsrs	r1, r4, #4
 800ee9c:	4628      	mov	r0, r5
 800ee9e:	f041 0110 	orr.w	r1, r1, #16
 800eea2:	f7ff ffd5 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800eea6:	4628      	mov	r0, r5
 800eea8:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800eeac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eeb0:	f7ff bfce 	b.w	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800eeb4:	bd70      	pop	{r4, r5, r6, pc}

0800eeb6 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800eeb6:	b570      	push	{r4, r5, r6, lr}
 800eeb8:	4604      	mov	r4, r0
 800eeba:	4615      	mov	r5, r2
 800eebc:	461e      	mov	r6, r3
 800eebe:	b171      	cbz	r1, 800eede <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800eec0:	7943      	ldrb	r3, [r0, #5]
 800eec2:	428b      	cmp	r3, r1
 800eec4:	d30b      	bcc.n	800eede <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800eec6:	3901      	subs	r1, #1
 800eec8:	b2ca      	uxtb	r2, r1
 800eeca:	2100      	movs	r1, #0
 800eecc:	f7ff ffd0 	bl	800ee70 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800eed0:	4632      	mov	r2, r6
 800eed2:	4629      	mov	r1, r5
 800eed4:	4620      	mov	r0, r4
 800eed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eeda:	f7ff bf7e 	b.w	800edda <Ssd1306::Text(char const*, unsigned int)>
 800eede:	bd70      	pop	{r4, r5, r6, pc}

0800eee0 <Ssd1306::ClearLine(unsigned char)>:
 800eee0:	b538      	push	{r3, r4, r5, lr}
 800eee2:	4605      	mov	r5, r0
 800eee4:	b1b9      	cbz	r1, 800ef16 <Ssd1306::ClearLine(unsigned char)+0x36>
 800eee6:	7943      	ldrb	r3, [r0, #5]
 800eee8:	428b      	cmp	r3, r1
 800eeea:	d314      	bcc.n	800ef16 <Ssd1306::ClearLine(unsigned char)+0x36>
 800eeec:	3901      	subs	r1, #1
 800eeee:	b2cc      	uxtb	r4, r1
 800eef0:	4622      	mov	r2, r4
 800eef2:	2100      	movs	r1, #0
 800eef4:	f7ff ffbc 	bl	800ee70 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800eef8:	f105 0008 	add.w	r0, r5, #8
 800eefc:	f7ff ff44 	bl	800ed88 <HAL_I2C::Setup()>
 800ef00:	2181      	movs	r1, #129	; 0x81
 800ef02:	4805      	ldr	r0, [pc, #20]	; (800ef18 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800ef04:	f001 fe22 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800ef08:	4622      	mov	r2, r4
 800ef0a:	4628      	mov	r0, r5
 800ef0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ef10:	2100      	movs	r1, #0
 800ef12:	f7ff bfad 	b.w	800ee70 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800ef16:	bd38      	pop	{r3, r4, r5, pc}
 800ef18:	20009ad4 	ldrdcs	r9, [r0], -r4

0800ef1c <Ssd1306::SetSleep(bool)>:
 800ef1c:	b111      	cbz	r1, 800ef24 <Ssd1306::SetSleep(bool)+0x8>
 800ef1e:	21ae      	movs	r1, #174	; 0xae
 800ef20:	f7ff bf96 	b.w	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef24:	21af      	movs	r1, #175	; 0xaf
 800ef26:	e7fb      	b.n	800ef20 <Ssd1306::SetSleep(bool)+0x4>

0800ef28 <Ssd1306::SetContrast(unsigned char)>:
 800ef28:	b538      	push	{r3, r4, r5, lr}
 800ef2a:	4604      	mov	r4, r0
 800ef2c:	460d      	mov	r5, r1
 800ef2e:	7181      	strb	r1, [r0, #6]
 800ef30:	2181      	movs	r1, #129	; 0x81
 800ef32:	f7ff ff8d 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef36:	4629      	mov	r1, r5
 800ef38:	4620      	mov	r0, r4
 800ef3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ef3e:	f7ff bf87 	b.w	800ee50 <Ssd1306::SendCommand(unsigned char)>

0800ef42 <Ssd1306::SetFlipVertically(bool)>:
 800ef42:	b510      	push	{r4, lr}
 800ef44:	4604      	mov	r4, r0
 800ef46:	71c1      	strb	r1, [r0, #7]
 800ef48:	b141      	cbz	r1, 800ef5c <Ssd1306::SetFlipVertically(bool)+0x1a>
 800ef4a:	21c0      	movs	r1, #192	; 0xc0
 800ef4c:	f7ff ff80 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef50:	21a0      	movs	r1, #160	; 0xa0
 800ef52:	4620      	mov	r0, r4
 800ef54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef58:	f7ff bf7a 	b.w	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef5c:	21c8      	movs	r1, #200	; 0xc8
 800ef5e:	f7ff ff77 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef62:	21a1      	movs	r1, #161	; 0xa1
 800ef64:	e7f5      	b.n	800ef52 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800ef68 <Ssd1306::CheckSH1106()>:
 800ef68:	b570      	push	{r4, r5, r6, lr}
 800ef6a:	4604      	mov	r4, r0
 800ef6c:	b086      	sub	sp, #24
 800ef6e:	2100      	movs	r1, #0
 800ef70:	f7ff ff6e 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef74:	2190      	movs	r1, #144	; 0x90
 800ef76:	4620      	mov	r0, r4
 800ef78:	f7ff ff6a 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef7c:	21b0      	movs	r1, #176	; 0xb0
 800ef7e:	4620      	mov	r0, r4
 800ef80:	f7ff ff66 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800ef84:	4b22      	ldr	r3, [pc, #136]	; (800f010 <Ssd1306::CheckSH1106()+0xa8>)
 800ef86:	f104 0608 	add.w	r6, r4, #8
 800ef8a:	6818      	ldr	r0, [r3, #0]
 800ef8c:	791b      	ldrb	r3, [r3, #4]
 800ef8e:	ad02      	add	r5, sp, #8
 800ef90:	9002      	str	r0, [sp, #8]
 800ef92:	4630      	mov	r0, r6
 800ef94:	712b      	strb	r3, [r5, #4]
 800ef96:	f7ff fef7 	bl	800ed88 <HAL_I2C::Setup()>
 800ef9a:	2105      	movs	r1, #5
 800ef9c:	4628      	mov	r0, r5
 800ef9e:	f001 fdd5 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800efa2:	2100      	movs	r1, #0
 800efa4:	4620      	mov	r0, r4
 800efa6:	f7ff ff53 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800efaa:	2190      	movs	r1, #144	; 0x90
 800efac:	4620      	mov	r0, r4
 800efae:	f7ff ff4f 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800efb2:	21b0      	movs	r1, #176	; 0xb0
 800efb4:	4620      	mov	r0, r4
 800efb6:	f7ff ff4b 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800efba:	2300      	movs	r3, #0
 800efbc:	9304      	str	r3, [sp, #16]
 800efbe:	f88d 3014 	strb.w	r3, [sp, #20]
 800efc2:	2340      	movs	r3, #64	; 0x40
 800efc4:	4630      	mov	r0, r6
 800efc6:	f88d 3007 	strb.w	r3, [sp, #7]
 800efca:	f7ff fedd 	bl	800ed88 <HAL_I2C::Setup()>
 800efce:	2101      	movs	r1, #1
 800efd0:	f10d 0007 	add.w	r0, sp, #7
 800efd4:	f001 fdba 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800efd8:	4630      	mov	r0, r6
 800efda:	f7ff fed5 	bl	800ed88 <HAL_I2C::Setup()>
 800efde:	2105      	movs	r1, #5
 800efe0:	a804      	add	r0, sp, #16
 800efe2:	f001 fe19 	bl	8010c18 <gd32_i2c_read(char*, unsigned int)>
 800efe6:	2201      	movs	r2, #1
 800efe8:	5cab      	ldrb	r3, [r5, r2]
 800efea:	a904      	add	r1, sp, #16
 800efec:	3201      	adds	r2, #1
 800efee:	4411      	add	r1, r2
 800eff0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800eff4:	428b      	cmp	r3, r1
 800eff6:	d006      	beq.n	800f006 <Ssd1306::CheckSH1106()+0x9e>
 800eff8:	1a5b      	subs	r3, r3, r1
 800effa:	fab3 f383 	clz	r3, r3
 800effe:	095b      	lsrs	r3, r3, #5
 800f000:	7463      	strb	r3, [r4, #17]
 800f002:	b006      	add	sp, #24
 800f004:	bd70      	pop	{r4, r5, r6, pc}
 800f006:	2a05      	cmp	r2, #5
 800f008:	d1ee      	bne.n	800efe8 <Ssd1306::CheckSH1106()+0x80>
 800f00a:	2300      	movs	r3, #0
 800f00c:	e7f5      	b.n	800effa <Ssd1306::CheckSH1106()+0x92>
 800f00e:	bf00      	nop
 800f010:	080137a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, ip, sp}

0800f014 <Ssd1306::Cls()>:
 800f014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f018:	4604      	mov	r4, r0
 800f01a:	2600      	movs	r6, #0
 800f01c:	7c45      	ldrb	r5, [r0, #17]
 800f01e:	00ad      	lsls	r5, r5, #2
 800f020:	b2ed      	uxtb	r5, r5
 800f022:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800f026:	f045 0810 	orr.w	r8, r5, #16
 800f02a:	b2ff      	uxtb	r7, r7
 800f02c:	6963      	ldr	r3, [r4, #20]
 800f02e:	4629      	mov	r1, r5
 800f030:	42b3      	cmp	r3, r6
 800f032:	4620      	mov	r0, r4
 800f034:	d80b      	bhi.n	800f04e <Ssd1306::Cls()+0x3a>
 800f036:	f7ff ff0b 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f03a:	4641      	mov	r1, r8
 800f03c:	4620      	mov	r0, r4
 800f03e:	f7ff ff07 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f042:	4620      	mov	r0, r4
 800f044:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f048:	21b0      	movs	r1, #176	; 0xb0
 800f04a:	f7ff bf01 	b.w	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f04e:	f7ff feff 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f052:	4641      	mov	r1, r8
 800f054:	4620      	mov	r0, r4
 800f056:	f7ff fefb 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f05a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800f05e:	4620      	mov	r0, r4
 800f060:	b2c9      	uxtb	r1, r1
 800f062:	f7ff fef5 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f066:	7c23      	ldrb	r3, [r4, #16]
 800f068:	b123      	cbz	r3, 800f074 <Ssd1306::Cls()+0x60>
 800f06a:	3b01      	subs	r3, #1
 800f06c:	2b01      	cmp	r3, #1
 800f06e:	d901      	bls.n	800f074 <Ssd1306::Cls()+0x60>
 800f070:	3601      	adds	r6, #1
 800f072:	e7db      	b.n	800f02c <Ssd1306::Cls()+0x18>
 800f074:	f104 0008 	add.w	r0, r4, #8
 800f078:	f7ff fe86 	bl	800ed88 <HAL_I2C::Setup()>
 800f07c:	4639      	mov	r1, r7
 800f07e:	4802      	ldr	r0, [pc, #8]	; (800f088 <Ssd1306::Cls()+0x74>)
 800f080:	f001 fd64 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800f084:	e7f4      	b.n	800f070 <Ssd1306::Cls()+0x5c>
 800f086:	bf00      	nop
 800f088:	20009ad4 	ldrdcs	r9, [r0], -r4

0800f08c <Ssd1306::Start()>:
 800f08c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f08e:	7a04      	ldrb	r4, [r0, #8]
 800f090:	68c6      	ldr	r6, [r0, #12]
 800f092:	4605      	mov	r5, r0
 800f094:	4620      	mov	r0, r4
 800f096:	f001 fd53 	bl	8010b40 <gd32_i2c_set_address(unsigned char)>
 800f09a:	4630      	mov	r0, r6
 800f09c:	f001 fd48 	bl	8010b30 <gd32_i2c_set_baudrate(unsigned int)>
 800f0a0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f0a4:	2b07      	cmp	r3, #7
 800f0a6:	d902      	bls.n	800f0ae <Ssd1306::Start()+0x22>
 800f0a8:	3c50      	subs	r4, #80	; 0x50
 800f0aa:	2c0f      	cmp	r4, #15
 800f0ac:	d80f      	bhi.n	800f0ce <Ssd1306::Start()+0x42>
 800f0ae:	2101      	movs	r1, #1
 800f0b0:	f10d 0007 	add.w	r0, sp, #7
 800f0b4:	f001 fdb0 	bl	8010c18 <gd32_i2c_read(char*, unsigned int)>
 800f0b8:	fab0 f480 	clz	r4, r0
 800f0bc:	0964      	lsrs	r4, r4, #5
 800f0be:	b35c      	cbz	r4, 800f118 <Ssd1306::Start()+0x8c>
 800f0c0:	7c2e      	ldrb	r6, [r5, #16]
 800f0c2:	b14e      	cbz	r6, 800f0d8 <Ssd1306::Start()+0x4c>
 800f0c4:	3e01      	subs	r6, #1
 800f0c6:	2e01      	cmp	r6, #1
 800f0c8:	d929      	bls.n	800f11e <Ssd1306::Start()+0x92>
 800f0ca:	2400      	movs	r4, #0
 800f0cc:	e024      	b.n	800f118 <Ssd1306::Start()+0x8c>
 800f0ce:	2100      	movs	r1, #0
 800f0d0:	4608      	mov	r0, r1
 800f0d2:	f001 fd3b 	bl	8010b4c <gd32_i2c_write(char const*, unsigned int)>
 800f0d6:	e7ef      	b.n	800f0b8 <Ssd1306::Start()+0x2c>
 800f0d8:	4f16      	ldr	r7, [pc, #88]	; (800f134 <Ssd1306::Start()+0xa8>)
 800f0da:	4628      	mov	r0, r5
 800f0dc:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f0e0:	3601      	adds	r6, #1
 800f0e2:	f7ff feb5 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f0e6:	2e18      	cmp	r6, #24
 800f0e8:	d1f7      	bne.n	800f0da <Ssd1306::Start()+0x4e>
 800f0ea:	2300      	movs	r3, #0
 800f0ec:	4a12      	ldr	r2, [pc, #72]	; (800f138 <Ssd1306::Start()+0xac>)
 800f0ee:	4618      	mov	r0, r3
 800f0f0:	4611      	mov	r1, r2
 800f0f2:	3301      	adds	r3, #1
 800f0f4:	2b86      	cmp	r3, #134	; 0x86
 800f0f6:	f802 0b01 	strb.w	r0, [r2], #1
 800f0fa:	d1fa      	bne.n	800f0f2 <Ssd1306::Start()+0x66>
 800f0fc:	2340      	movs	r3, #64	; 0x40
 800f0fe:	4628      	mov	r0, r5
 800f100:	700b      	strb	r3, [r1, #0]
 800f102:	f7ff ff31 	bl	800ef68 <Ssd1306::CheckSH1106()>
 800f106:	4628      	mov	r0, r5
 800f108:	f7ff ff84 	bl	800f014 <Ssd1306::Cls()>
 800f10c:	21af      	movs	r1, #175	; 0xaf
 800f10e:	4628      	mov	r0, r5
 800f110:	f7ff fe9e 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f114:	2301      	movs	r3, #1
 800f116:	71eb      	strb	r3, [r5, #7]
 800f118:	4620      	mov	r0, r4
 800f11a:	b003      	add	sp, #12
 800f11c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f11e:	2600      	movs	r6, #0
 800f120:	4f06      	ldr	r7, [pc, #24]	; (800f13c <Ssd1306::Start()+0xb0>)
 800f122:	4628      	mov	r0, r5
 800f124:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f128:	3601      	adds	r6, #1
 800f12a:	f7ff fe91 	bl	800ee50 <Ssd1306::SendCommand(unsigned char)>
 800f12e:	2e18      	cmp	r6, #24
 800f130:	d1f7      	bne.n	800f122 <Ssd1306::Start()+0x96>
 800f132:	e7da      	b.n	800f0ea <Ssd1306::Start()+0x5e>
 800f134:	08013a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, ip, sp}
 800f138:	20009ad4 	ldrdcs	r9, [r0], -r4
 800f13c:	08013a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, ip, sp}

0800f140 <console_putc>:
 800f140:	f000 bdde 	b.w	800fd00 <uart0_putc>

0800f144 <console_puts>:
 800f144:	f000 bdfc 	b.w	800fd40 <uart0_puts>

0800f148 <console_set_fg_color>:
 800f148:	2807      	cmp	r0, #7
 800f14a:	d810      	bhi.n	800f16e <console_set_fg_color+0x26>
 800f14c:	e8df f000 	tbb	[pc, r0]
 800f150:	0b090704 	bleq	8250d68 <__exidx_end+0x23d1b0>
 800f154:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800f120 <Ssd1306::Start()+0x94>
 800f158:	4806      	ldr	r0, [pc, #24]	; (800f174 <console_set_fg_color+0x2c>)
 800f15a:	f000 bdf1 	b.w	800fd40 <uart0_puts>
 800f15e:	4806      	ldr	r0, [pc, #24]	; (800f178 <console_set_fg_color+0x30>)
 800f160:	e7fb      	b.n	800f15a <console_set_fg_color+0x12>
 800f162:	4806      	ldr	r0, [pc, #24]	; (800f17c <console_set_fg_color+0x34>)
 800f164:	e7f9      	b.n	800f15a <console_set_fg_color+0x12>
 800f166:	4806      	ldr	r0, [pc, #24]	; (800f180 <console_set_fg_color+0x38>)
 800f168:	e7f7      	b.n	800f15a <console_set_fg_color+0x12>
 800f16a:	4806      	ldr	r0, [pc, #24]	; (800f184 <console_set_fg_color+0x3c>)
 800f16c:	e7f5      	b.n	800f15a <console_set_fg_color+0x12>
 800f16e:	4806      	ldr	r0, [pc, #24]	; (800f188 <console_set_fg_color+0x40>)
 800f170:	e7f3      	b.n	800f15a <console_set_fg_color+0x12>
 800f172:	bf00      	nop
 800f174:	08013ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, ip, sp}
 800f178:	08013ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip, sp}
 800f17c:	08013ace 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, fp, ip, sp}
 800f180:	08013ad4 	stmdaeq	r1, {r2, r4, r6, r7, r9, fp, ip, sp}
 800f184:	08011d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, ip}
 800f188:	08013ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, sp}

0800f18c <console_error>:
 800f18c:	b510      	push	{r4, lr}
 800f18e:	4604      	mov	r4, r0
 800f190:	4805      	ldr	r0, [pc, #20]	; (800f1a8 <console_error+0x1c>)
 800f192:	f000 fdd5 	bl	800fd40 <uart0_puts>
 800f196:	4620      	mov	r0, r4
 800f198:	f000 fdd2 	bl	800fd40 <uart0_puts>
 800f19c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1a0:	4802      	ldr	r0, [pc, #8]	; (800f1ac <console_error+0x20>)
 800f1a2:	f000 bdcd 	b.w	800fd40 <uart0_puts>
 800f1a6:	bf00      	nop
 800f1a8:	08013ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip, sp}
 800f1ac:	08011d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, ip}

0800f1b0 <console_status>:
 800f1b0:	b510      	push	{r4, lr}
 800f1b2:	460c      	mov	r4, r1
 800f1b4:	b280      	uxth	r0, r0
 800f1b6:	f7ff ffc7 	bl	800f148 <console_set_fg_color>
 800f1ba:	4807      	ldr	r0, [pc, #28]	; (800f1d8 <console_status+0x28>)
 800f1bc:	f000 fdc0 	bl	800fd40 <uart0_puts>
 800f1c0:	4620      	mov	r0, r4
 800f1c2:	f000 fdbd 	bl	800fd40 <uart0_puts>
 800f1c6:	200a      	movs	r0, #10
 800f1c8:	f000 fd9a 	bl	800fd00 <uart0_putc>
 800f1cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1d0:	4802      	ldr	r0, [pc, #8]	; (800f1dc <console_status+0x2c>)
 800f1d2:	f000 bdb5 	b.w	800fd40 <uart0_puts>
 800f1d6:	bf00      	nop
 800f1d8:	08013abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, sp}
 800f1dc:	08011d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, ip}

0800f1e0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800f1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1e4:	4617      	mov	r7, r2
 800f1e6:	461e      	mov	r6, r3
 800f1e8:	4d14      	ldr	r5, [pc, #80]	; (800f23c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800f1ea:	4b15      	ldr	r3, [pc, #84]	; (800f240 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800f1ec:	b086      	sub	sp, #24
 800f1ee:	6018      	str	r0, [r3, #0]
 800f1f0:	4604      	mov	r4, r0
 800f1f2:	f105 0803 	add.w	r8, r5, #3
 800f1f6:	2203      	movs	r2, #3
 800f1f8:	4628      	mov	r0, r5
 800f1fa:	f000 f9fe 	bl	800f5fa <memmove>
 800f1fe:	4639      	mov	r1, r7
 800f200:	220b      	movs	r2, #11
 800f202:	4640      	mov	r0, r8
 800f204:	f000 f9f9 	bl	800f5fa <memmove>
 800f208:	f105 030e 	add.w	r3, r5, #14
 800f20c:	4631      	mov	r1, r6
 800f20e:	2208      	movs	r2, #8
 800f210:	4618      	mov	r0, r3
 800f212:	f000 f9f2 	bl	800f5fa <memmove>
 800f216:	2308      	movs	r3, #8
 800f218:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800f21c:	230b      	movs	r3, #11
 800f21e:	9302      	str	r3, [sp, #8]
 800f220:	4b08      	ldr	r3, [pc, #32]	; (800f244 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800f222:	9005      	str	r0, [sp, #20]
 800f224:	e9cd 5300 	strd	r5, r3, [sp]
 800f228:	213f      	movs	r1, #63	; 0x3f
 800f22a:	2303      	movs	r3, #3
 800f22c:	4a06      	ldr	r2, [pc, #24]	; (800f248 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800f22e:	4807      	ldr	r0, [pc, #28]	; (800f24c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800f230:	f000 fc3c 	bl	800faac <snprintf>
 800f234:	4620      	mov	r0, r4
 800f236:	b006      	add	sp, #24
 800f238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f23c:	20009b60 	andcs	r9, r0, r0, ror #22
 800f240:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f244:	08011e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip}
 800f248:	08013ae0 	stmdaeq	r1, {r5, r6, r7, r9, fp, ip, sp}
 800f24c:	20009b76 	andcs	r9, r0, r6, ror fp

0800f250 <FirmwareVersion::Print(char const*)>:
 800f250:	b510      	push	{r4, lr}
 800f252:	460c      	mov	r4, r1
 800f254:	4804      	ldr	r0, [pc, #16]	; (800f268 <FirmwareVersion::Print(char const*)+0x18>)
 800f256:	f000 fc51 	bl	800fafc <puts>
 800f25a:	b124      	cbz	r4, 800f266 <FirmwareVersion::Print(char const*)+0x16>
 800f25c:	4620      	mov	r0, r4
 800f25e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f262:	f000 bc4b 	b.w	800fafc <puts>
 800f266:	bd10      	pop	{r4, pc}
 800f268:	20009b76 	andcs	r9, r0, r6, ror fp

0800f26c <LedBlink::LedBlink()>:
 800f26c:	b538      	push	{r3, r4, r5, lr}
 800f26e:	2205      	movs	r2, #5
 800f270:	2300      	movs	r3, #0
 800f272:	e9c0 3200 	strd	r3, r2, [r0]
 800f276:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800f27a:	6083      	str	r3, [r0, #8]
 800f27c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800f280:	6143      	str	r3, [r0, #20]
 800f282:	4b09      	ldr	r3, [pc, #36]	; (800f2a8 <LedBlink::LedBlink()+0x3c>)
 800f284:	4d09      	ldr	r5, [pc, #36]	; (800f2ac <LedBlink::LedBlink()+0x40>)
 800f286:	4604      	mov	r4, r0
 800f288:	6018      	str	r0, [r3, #0]
 800f28a:	f240 6004 	movw	r0, #1540	; 0x604
 800f28e:	f000 ffd3 	bl	8010238 <rcu_periph_clock_enable>
 800f292:	4628      	mov	r0, r5
 800f294:	2301      	movs	r3, #1
 800f296:	2203      	movs	r2, #3
 800f298:	2110      	movs	r1, #16
 800f29a:	f000 ff35 	bl	8010108 <gpio_init>
 800f29e:	2301      	movs	r3, #1
 800f2a0:	4620      	mov	r0, r4
 800f2a2:	616b      	str	r3, [r5, #20]
 800f2a4:	bd38      	pop	{r3, r4, r5, pc}
 800f2a6:	bf00      	nop
 800f2a8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f2ac:	40011000 	andmi	r1, r1, r0

0800f2b0 <LedBlink::SetMode(ledblink::Mode)>:
 800f2b0:	6843      	ldr	r3, [r0, #4]
 800f2b2:	428b      	cmp	r3, r1
 800f2b4:	d02f      	beq.n	800f316 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f2b6:	6041      	str	r1, [r0, #4]
 800f2b8:	2904      	cmp	r1, #4
 800f2ba:	d822      	bhi.n	800f302 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800f2bc:	e8df f001 	tbb	[pc, r1]
 800f2c0:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800f2c4:	23ff001d 	mvnscs	r0, #29
 800f2c8:	6003      	str	r3, [r0, #0]
 800f2ca:	2300      	movs	r3, #0
 800f2cc:	2201      	movs	r2, #1
 800f2ce:	60c3      	str	r3, [r0, #12]
 800f2d0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f2d4:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f2d8:	611a      	str	r2, [r3, #16]
 800f2da:	6880      	ldr	r0, [r0, #8]
 800f2dc:	b1d8      	cbz	r0, 800f316 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f2de:	6803      	ldr	r3, [r0, #0]
 800f2e0:	689b      	ldr	r3, [r3, #8]
 800f2e2:	4718      	bx	r3
 800f2e4:	2301      	movs	r3, #1
 800f2e6:	6003      	str	r3, [r0, #0]
 800f2e8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f2ec:	60c3      	str	r3, [r0, #12]
 800f2ee:	e7f4      	b.n	800f2da <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f2f0:	2303      	movs	r3, #3
 800f2f2:	6003      	str	r3, [r0, #0]
 800f2f4:	f240 134d 	movw	r3, #333	; 0x14d
 800f2f8:	e7f8      	b.n	800f2ec <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f2fa:	2305      	movs	r3, #5
 800f2fc:	6003      	str	r3, [r0, #0]
 800f2fe:	23c8      	movs	r3, #200	; 0xc8
 800f300:	e7f4      	b.n	800f2ec <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f302:	2300      	movs	r3, #0
 800f304:	2201      	movs	r2, #1
 800f306:	6003      	str	r3, [r0, #0]
 800f308:	60c3      	str	r3, [r0, #12]
 800f30a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f30e:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f312:	615a      	str	r2, [r3, #20]
 800f314:	e7e1      	b.n	800f2da <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f316:	4770      	bx	lr

0800f318 <Hardware::Hardware()>:
 800f318:	b570      	push	{r4, r5, r6, lr}
 800f31a:	2400      	movs	r4, #0
 800f31c:	4b26      	ldr	r3, [pc, #152]	; (800f3b8 <Hardware::Hardware()+0xa0>)
 800f31e:	b090      	sub	sp, #64	; 0x40
 800f320:	6004      	str	r4, [r0, #0]
 800f322:	7104      	strb	r4, [r0, #4]
 800f324:	6018      	str	r0, [r3, #0]
 800f326:	4605      	mov	r5, r0
 800f328:	f7f8 f8ea 	bl	8007500 <console_init>
 800f32c:	f000 fd18 	bl	800fd60 <systick_config>
 800f330:	f001 fdf0 	bl	8010f14 <udelay_init()>
 800f334:	f001 fdec 	bl	8010f10 <micros_init()>
 800f338:	f240 701b 	movw	r0, #1819	; 0x71b
 800f33c:	f000 ff7c 	bl	8010238 <rcu_periph_clock_enable>
 800f340:	f240 701c 	movw	r0, #1820	; 0x71c
 800f344:	f000 ff78 	bl	8010238 <rcu_periph_clock_enable>
 800f348:	4e1c      	ldr	r6, [pc, #112]	; (800f3bc <Hardware::Hardware()+0xa4>)
 800f34a:	f000 ff6d 	bl	8010228 <pmu_backup_write_enable>
 800f34e:	f000 fda5 	bl	800fe9c <bkp_deinit>
 800f352:	4621      	mov	r1, r4
 800f354:	2002      	movs	r0, #2
 800f356:	f000 fda9 	bl	800feac <bkp_data_write>
 800f35a:	f240 7004 	movw	r0, #1796	; 0x704
 800f35e:	f000 ff6b 	bl	8010238 <rcu_periph_clock_enable>
 800f362:	4630      	mov	r0, r6
 800f364:	f001 f8c6 	bl	80104f4 <timer_deinit>
 800f368:	236b      	movs	r3, #107	; 0x6b
 800f36a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f36e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f372:	a903      	add	r1, sp, #12
 800f374:	4630      	mov	r0, r6
 800f376:	9305      	str	r3, [sp, #20]
 800f378:	f001 f91e 	bl	80105b8 <timer_init>
 800f37c:	4630      	mov	r0, r6
 800f37e:	f001 f973 	bl	8010668 <timer_enable>
 800f382:	f001 fb47 	bl	8010a14 <gd32_adc_init()>
 800f386:	2213      	movs	r2, #19
 800f388:	2302      	movs	r3, #2
 800f38a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800f38e:	237a      	movs	r3, #122	; 0x7a
 800f390:	a807      	add	r0, sp, #28
 800f392:	930c      	str	r3, [sp, #48]	; 0x30
 800f394:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800f398:	9407      	str	r4, [sp, #28]
 800f39a:	940f      	str	r4, [sp, #60]	; 0x3c
 800f39c:	f000 fc06 	bl	800fbac <mktime>
 800f3a0:	4621      	mov	r1, r4
 800f3a2:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800f3a6:	a801      	add	r0, sp, #4
 800f3a8:	f000 fc76 	bl	800fc98 <settimeofday>
 800f3ac:	f001 fb8c 	bl	8010ac8 <gd32_i2c_begin()>
 800f3b0:	4628      	mov	r0, r5
 800f3b2:	b010      	add	sp, #64	; 0x40
 800f3b4:	bd70      	pop	{r4, r5, r6, pc}
 800f3b6:	bf00      	nop
 800f3b8:	20009bc0 	andcs	r9, r0, r0, asr #23
 800f3bc:	40001000 	andmi	r1, r0, r0

0800f3c0 <Hardware::GetUuid(unsigned char*)>:
 800f3c0:	4a0c      	ldr	r2, [pc, #48]	; (800f3f4 <Hardware::GetUuid(unsigned char*)+0x34>)
 800f3c2:	b084      	sub	sp, #16
 800f3c4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800f3c8:	9300      	str	r3, [sp, #0]
 800f3ca:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 800f3ce:	9001      	str	r0, [sp, #4]
 800f3d0:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800f3d4:	4403      	add	r3, r0
 800f3d6:	4413      	add	r3, r2
 800f3d8:	9202      	str	r2, [sp, #8]
 800f3da:	466a      	mov	r2, sp
 800f3dc:	9303      	str	r3, [sp, #12]
 800f3de:	1e4b      	subs	r3, r1, #1
 800f3e0:	310f      	adds	r1, #15
 800f3e2:	428b      	cmp	r3, r1
 800f3e4:	d101      	bne.n	800f3ea <Hardware::GetUuid(unsigned char*)+0x2a>
 800f3e6:	b004      	add	sp, #16
 800f3e8:	4770      	bx	lr
 800f3ea:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f3ee:	f803 0f01 	strb.w	r0, [r3, #1]!
 800f3f2:	e7f6      	b.n	800f3e2 <Hardware::GetUuid(unsigned char*)+0x22>
 800f3f4:	1ffff000 	svcne	0x00fff000

0800f3f8 <Hardware::Reboot()>:
 800f3f8:	b508      	push	{r3, lr}
 800f3fa:	6803      	ldr	r3, [r0, #0]
 800f3fc:	4604      	mov	r4, r0
 800f3fe:	b153      	cbz	r3, 800f416 <Hardware::Reboot()+0x1e>
 800f400:	2300      	movs	r3, #0
 800f402:	2104      	movs	r1, #4
 800f404:	7103      	strb	r3, [r0, #4]
 800f406:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f40a:	f000 fe53 	bl	80100b4 <fwdgt_config>
 800f40e:	6820      	ldr	r0, [r4, #0]
 800f410:	6803      	ldr	r3, [r0, #0]
 800f412:	689b      	ldr	r3, [r3, #8]
 800f414:	4798      	blx	r3
 800f416:	2102      	movs	r1, #2
 800f418:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f41c:	f000 fe4a 	bl	80100b4 <fwdgt_config>
 800f420:	2801      	cmp	r0, #1
 800f422:	bf0c      	ite	eq
 800f424:	2301      	moveq	r3, #1
 800f426:	2300      	movne	r3, #0
 800f428:	7123      	strb	r3, [r4, #4]
 800f42a:	d101      	bne.n	800f430 <Hardware::Reboot()+0x38>
 800f42c:	f000 fe32 	bl	8010094 <fwdgt_enable>
 800f430:	2208      	movs	r2, #8
 800f432:	4b0d      	ldr	r3, [pc, #52]	; (800f468 <Hardware::Reboot()+0x70>)
 800f434:	2501      	movs	r5, #1
 800f436:	681b      	ldr	r3, [r3, #0]
 800f438:	480c      	ldr	r0, [pc, #48]	; (800f46c <Hardware::Reboot()+0x74>)
 800f43a:	601a      	str	r2, [r3, #0]
 800f43c:	227d      	movs	r2, #125	; 0x7d
 800f43e:	490c      	ldr	r1, [pc, #48]	; (800f470 <Hardware::Reboot()+0x78>)
 800f440:	60da      	str	r2, [r3, #12]
 800f442:	68dc      	ldr	r4, [r3, #12]
 800f444:	b904      	cbnz	r4, 800f448 <Hardware::Reboot()+0x50>
 800f446:	e7fe      	b.n	800f446 <Hardware::Reboot()+0x4e>
 800f448:	6802      	ldr	r2, [r0, #0]
 800f44a:	695e      	ldr	r6, [r3, #20]
 800f44c:	1b92      	subs	r2, r2, r6
 800f44e:	4294      	cmp	r4, r2
 800f450:	d8f8      	bhi.n	800f444 <Hardware::Reboot()+0x4c>
 800f452:	6802      	ldr	r2, [r0, #0]
 800f454:	615a      	str	r2, [r3, #20]
 800f456:	691a      	ldr	r2, [r3, #16]
 800f458:	2a01      	cmp	r2, #1
 800f45a:	f082 0401 	eor.w	r4, r2, #1
 800f45e:	611c      	str	r4, [r3, #16]
 800f460:	bf14      	ite	ne
 800f462:	610d      	strne	r5, [r1, #16]
 800f464:	614a      	streq	r2, [r1, #20]
 800f466:	e7ec      	b.n	800f442 <Hardware::Reboot()+0x4a>
 800f468:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f46c:	20009bdc 	ldrdcs	r9, [r0], -ip
 800f470:	40011000 	andmi	r1, r1, r0

0800f474 <operator delete(void*)>:
 800f474:	f000 b890 	b.w	800f598 <free>

0800f478 <operator delete[](void*)>:
 800f478:	f000 b88e 	b.w	800f598 <free>

0800f47c <operator new(unsigned int)>:
 800f47c:	f000 b842 	b.w	800f504 <malloc>

0800f480 <operator new[](unsigned int)>:
 800f480:	f000 b840 	b.w	800f504 <malloc>

0800f484 <inet_aton>:
 800f484:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f486:	f04f 0c0a 	mov.w	ip, #10
 800f48a:	2500      	movs	r5, #0
 800f48c:	ae01      	add	r6, sp, #4
 800f48e:	4603      	mov	r3, r0
 800f490:	2200      	movs	r2, #0
 800f492:	1d07      	adds	r7, r0, #4
 800f494:	e007      	b.n	800f4a6 <inet_aton+0x22>
 800f496:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f49a:	2b09      	cmp	r3, #9
 800f49c:	d820      	bhi.n	800f4e0 <inet_aton+0x5c>
 800f49e:	4603      	mov	r3, r0
 800f4a0:	fb0c 4202 	mla	r2, ip, r2, r4
 800f4a4:	3a30      	subs	r2, #48	; 0x30
 800f4a6:	4618      	mov	r0, r3
 800f4a8:	f810 4b01 	ldrb.w	r4, [r0], #1
 800f4ac:	2c2e      	cmp	r4, #46	; 0x2e
 800f4ae:	d111      	bne.n	800f4d4 <inet_aton+0x50>
 800f4b0:	3501      	adds	r5, #1
 800f4b2:	2d03      	cmp	r5, #3
 800f4b4:	f806 2b01 	strb.w	r2, [r6], #1
 800f4b8:	d1e9      	bne.n	800f48e <inet_aton+0xa>
 800f4ba:	2200      	movs	r2, #0
 800f4bc:	250a      	movs	r5, #10
 800f4be:	1d1c      	adds	r4, r3, #4
 800f4c0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f4c4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800f4c8:	d10d      	bne.n	800f4e6 <inet_aton+0x62>
 800f4ca:	f88d 2007 	strb.w	r2, [sp, #7]
 800f4ce:	b9b1      	cbnz	r1, 800f4fe <inet_aton+0x7a>
 800f4d0:	2001      	movs	r0, #1
 800f4d2:	e006      	b.n	800f4e2 <inet_aton+0x5e>
 800f4d4:	2c00      	cmp	r4, #0
 800f4d6:	d0eb      	beq.n	800f4b0 <inet_aton+0x2c>
 800f4d8:	2c0a      	cmp	r4, #10
 800f4da:	d0e9      	beq.n	800f4b0 <inet_aton+0x2c>
 800f4dc:	42b8      	cmp	r0, r7
 800f4de:	d1da      	bne.n	800f496 <inet_aton+0x12>
 800f4e0:	2000      	movs	r0, #0
 800f4e2:	b003      	add	sp, #12
 800f4e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4e6:	280a      	cmp	r0, #10
 800f4e8:	d0ef      	beq.n	800f4ca <inet_aton+0x46>
 800f4ea:	42a3      	cmp	r3, r4
 800f4ec:	d0f8      	beq.n	800f4e0 <inet_aton+0x5c>
 800f4ee:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800f4f2:	2e09      	cmp	r6, #9
 800f4f4:	d8f4      	bhi.n	800f4e0 <inet_aton+0x5c>
 800f4f6:	fb05 0202 	mla	r2, r5, r2, r0
 800f4fa:	3a30      	subs	r2, #48	; 0x30
 800f4fc:	e7e0      	b.n	800f4c0 <inet_aton+0x3c>
 800f4fe:	9b01      	ldr	r3, [sp, #4]
 800f500:	600b      	str	r3, [r1, #0]
 800f502:	e7e5      	b.n	800f4d0 <inet_aton+0x4c>

0800f504 <malloc>:
 800f504:	b538      	push	{r3, r4, r5, lr}
 800f506:	4604      	mov	r4, r0
 800f508:	4601      	mov	r1, r0
 800f50a:	481c      	ldr	r0, [pc, #112]	; (800f57c <malloc+0x78>)
 800f50c:	f000 faa6 	bl	800fa5c <printf>
 800f510:	b17c      	cbz	r4, 800f532 <malloc+0x2e>
 800f512:	4b1b      	ldr	r3, [pc, #108]	; (800f580 <malloc+0x7c>)
 800f514:	6818      	ldr	r0, [r3, #0]
 800f516:	b978      	cbnz	r0, 800f538 <malloc+0x34>
 800f518:	4a1a      	ldr	r2, [pc, #104]	; (800f584 <malloc+0x80>)
 800f51a:	f104 031b 	add.w	r3, r4, #27
 800f51e:	6811      	ldr	r1, [r2, #0]
 800f520:	4819      	ldr	r0, [pc, #100]	; (800f588 <malloc+0x84>)
 800f522:	f023 030f 	bic.w	r3, r3, #15
 800f526:	440b      	add	r3, r1
 800f528:	4283      	cmp	r3, r0
 800f52a:	d921      	bls.n	800f570 <malloc+0x6c>
 800f52c:	4817      	ldr	r0, [pc, #92]	; (800f58c <malloc+0x88>)
 800f52e:	f000 fa95 	bl	800fa5c <printf>
 800f532:	2500      	movs	r5, #0
 800f534:	4628      	mov	r0, r5
 800f536:	bd38      	pop	{r3, r4, r5, pc}
 800f538:	4284      	cmp	r4, r0
 800f53a:	d80a      	bhi.n	800f552 <malloc+0x4e>
 800f53c:	685a      	ldr	r2, [r3, #4]
 800f53e:	6899      	ldr	r1, [r3, #8]
 800f540:	3201      	adds	r2, #1
 800f542:	428a      	cmp	r2, r1
 800f544:	605a      	str	r2, [r3, #4]
 800f546:	d900      	bls.n	800f54a <malloc+0x46>
 800f548:	609a      	str	r2, [r3, #8]
 800f54a:	68d9      	ldr	r1, [r3, #12]
 800f54c:	b919      	cbnz	r1, 800f556 <malloc+0x52>
 800f54e:	4604      	mov	r4, r0
 800f550:	e7e2      	b.n	800f518 <malloc+0x14>
 800f552:	3310      	adds	r3, #16
 800f554:	e7de      	b.n	800f514 <malloc+0x10>
 800f556:	4604      	mov	r4, r0
 800f558:	688a      	ldr	r2, [r1, #8]
 800f55a:	60da      	str	r2, [r3, #12]
 800f55c:	2300      	movs	r3, #0
 800f55e:	f101 050c 	add.w	r5, r1, #12
 800f562:	608b      	str	r3, [r1, #8]
 800f564:	4622      	mov	r2, r4
 800f566:	462b      	mov	r3, r5
 800f568:	4809      	ldr	r0, [pc, #36]	; (800f590 <malloc+0x8c>)
 800f56a:	f000 fa77 	bl	800fa5c <printf>
 800f56e:	e7e1      	b.n	800f534 <malloc+0x30>
 800f570:	6013      	str	r3, [r2, #0]
 800f572:	4b08      	ldr	r3, [pc, #32]	; (800f594 <malloc+0x90>)
 800f574:	e9c1 3400 	strd	r3, r4, [r1]
 800f578:	e7f0      	b.n	800f55c <malloc+0x58>
 800f57a:	bf00      	nop
 800f57c:	08013b04 	stmdaeq	r1, {r2, r8, r9, fp, ip, sp}
 800f580:	20000024 	andcs	r0, r0, r4, lsr #32
 800f584:	20000020 	andcs	r0, r0, r0, lsr #32
 800f588:	20016800 	andcs	r6, r1, r0, lsl #16
 800f58c:	08013b10 	stmdaeq	r1, {r4, r8, r9, fp, ip, sp}
 800f590:	08013b2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, ip, sp}
 800f594:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800f598 <free>:
 800f598:	b538      	push	{r3, r4, r5, lr}
 800f59a:	4604      	mov	r4, r0
 800f59c:	b1c8      	cbz	r0, 800f5d2 <free+0x3a>
 800f59e:	f1a0 050c 	sub.w	r5, r0, #12
 800f5a2:	4602      	mov	r2, r0
 800f5a4:	4629      	mov	r1, r5
 800f5a6:	480c      	ldr	r0, [pc, #48]	; (800f5d8 <free+0x40>)
 800f5a8:	f000 fa58 	bl	800fa5c <printf>
 800f5ac:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800f5b0:	4b0a      	ldr	r3, [pc, #40]	; (800f5dc <free+0x44>)
 800f5b2:	429a      	cmp	r2, r3
 800f5b4:	d10d      	bne.n	800f5d2 <free+0x3a>
 800f5b6:	4b0a      	ldr	r3, [pc, #40]	; (800f5e0 <free+0x48>)
 800f5b8:	681a      	ldr	r2, [r3, #0]
 800f5ba:	b152      	cbz	r2, 800f5d2 <free+0x3a>
 800f5bc:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800f5c0:	4291      	cmp	r1, r2
 800f5c2:	d107      	bne.n	800f5d4 <free+0x3c>
 800f5c4:	68da      	ldr	r2, [r3, #12]
 800f5c6:	f844 2c04 	str.w	r2, [r4, #-4]
 800f5ca:	685a      	ldr	r2, [r3, #4]
 800f5cc:	60dd      	str	r5, [r3, #12]
 800f5ce:	3a01      	subs	r2, #1
 800f5d0:	605a      	str	r2, [r3, #4]
 800f5d2:	bd38      	pop	{r3, r4, r5, pc}
 800f5d4:	3310      	adds	r3, #16
 800f5d6:	e7ef      	b.n	800f5b8 <free+0x20>
 800f5d8:	08013b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800f5dc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800f5e0:	20000024 	andcs	r0, r0, r4, lsr #32

0800f5e4 <memcpy>:
 800f5e4:	b510      	push	{r4, lr}
 800f5e6:	1e43      	subs	r3, r0, #1
 800f5e8:	440a      	add	r2, r1
 800f5ea:	4291      	cmp	r1, r2
 800f5ec:	d100      	bne.n	800f5f0 <memcpy+0xc>
 800f5ee:	bd10      	pop	{r4, pc}
 800f5f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f5f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f5f8:	e7f7      	b.n	800f5ea <memcpy+0x6>

0800f5fa <memmove>:
 800f5fa:	4288      	cmp	r0, r1
 800f5fc:	b510      	push	{r4, lr}
 800f5fe:	eb01 0302 	add.w	r3, r1, r2
 800f602:	d208      	bcs.n	800f616 <memmove+0x1c>
 800f604:	1e42      	subs	r2, r0, #1
 800f606:	4299      	cmp	r1, r3
 800f608:	d100      	bne.n	800f60c <memmove+0x12>
 800f60a:	bd10      	pop	{r4, pc}
 800f60c:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f610:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f614:	e7f7      	b.n	800f606 <memmove+0xc>
 800f616:	4601      	mov	r1, r0
 800f618:	4402      	add	r2, r0
 800f61a:	428a      	cmp	r2, r1
 800f61c:	d0f5      	beq.n	800f60a <memmove+0x10>
 800f61e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f622:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f626:	e7f8      	b.n	800f61a <memmove+0x20>

0800f628 <memset>:
 800f628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f62a:	b1c2      	cbz	r2, 800f65e <memset+0x36>
 800f62c:	4603      	mov	r3, r0
 800f62e:	b2c9      	uxtb	r1, r1
 800f630:	075c      	lsls	r4, r3, #29
 800f632:	d110      	bne.n	800f656 <memset+0x2e>
 800f634:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f638:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f63c:	463d      	mov	r5, r7
 800f63e:	461e      	mov	r6, r3
 800f640:	f022 0407 	bic.w	r4, r2, #7
 800f644:	441c      	add	r4, r3
 800f646:	42a6      	cmp	r6, r4
 800f648:	d10a      	bne.n	800f660 <memset+0x38>
 800f64a:	4413      	add	r3, r2
 800f64c:	429c      	cmp	r4, r3
 800f64e:	d006      	beq.n	800f65e <memset+0x36>
 800f650:	f804 1b01 	strb.w	r1, [r4], #1
 800f654:	e7fa      	b.n	800f64c <memset+0x24>
 800f656:	3a01      	subs	r2, #1
 800f658:	f803 1b01 	strb.w	r1, [r3], #1
 800f65c:	d1e8      	bne.n	800f630 <memset+0x8>
 800f65e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f660:	f846 7b08 	str.w	r7, [r6], #8
 800f664:	f846 5c04 	str.w	r5, [r6, #-4]
 800f668:	e7ed      	b.n	800f646 <memset+0x1e>
	...

0800f66c <_xputch>:
 800f66c:	4603      	mov	r3, r0
 800f66e:	b410      	push	{r4}
 800f670:	4c08      	ldr	r4, [pc, #32]	; (800f694 <_xputch+0x28>)
 800f672:	68da      	ldr	r2, [r3, #12]
 800f674:	4608      	mov	r0, r1
 800f676:	6821      	ldr	r1, [r4, #0]
 800f678:	3201      	adds	r2, #1
 800f67a:	60da      	str	r2, [r3, #12]
 800f67c:	b139      	cbz	r1, 800f68e <_xputch+0x22>
 800f67e:	691b      	ldr	r3, [r3, #16]
 800f680:	429a      	cmp	r2, r3
 800f682:	da02      	bge.n	800f68a <_xputch+0x1e>
 800f684:	1c4b      	adds	r3, r1, #1
 800f686:	6023      	str	r3, [r4, #0]
 800f688:	7008      	strb	r0, [r1, #0]
 800f68a:	bc10      	pop	{r4}
 800f68c:	4770      	bx	lr
 800f68e:	bc10      	pop	{r4}
 800f690:	f7ff bd56 	b.w	800f140 <console_putc>
 800f694:	20009bc4 	andcs	r9, r0, r4, asr #23

0800f698 <_format_int>:
 800f698:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f69c:	4698      	mov	r8, r3
 800f69e:	b091      	sub	sp, #68	; 0x44
 800f6a0:	ea52 0308 	orrs.w	r3, r2, r8
 800f6a4:	4606      	mov	r6, r0
 800f6a6:	4617      	mov	r7, r2
 800f6a8:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800f6ac:	d133      	bne.n	800f716 <_format_int+0x7e>
 800f6ae:	2330      	movs	r3, #48	; 0x30
 800f6b0:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800f6b4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f6b8:	6833      	ldr	r3, [r6, #0]
 800f6ba:	07d8      	lsls	r0, r3, #31
 800f6bc:	d507      	bpl.n	800f6ce <_format_int+0x36>
 800f6be:	466a      	mov	r2, sp
 800f6c0:	2030      	movs	r0, #48	; 0x30
 800f6c2:	6871      	ldr	r1, [r6, #4]
 800f6c4:	1b2f      	subs	r7, r5, r4
 800f6c6:	428f      	cmp	r7, r1
 800f6c8:	da01      	bge.n	800f6ce <_format_int+0x36>
 800f6ca:	4294      	cmp	r4, r2
 800f6cc:	d839      	bhi.n	800f742 <_format_int+0xaa>
 800f6ce:	0699      	lsls	r1, r3, #26
 800f6d0:	d507      	bpl.n	800f6e2 <_format_int+0x4a>
 800f6d2:	466a      	mov	r2, sp
 800f6d4:	2030      	movs	r0, #48	; 0x30
 800f6d6:	68b1      	ldr	r1, [r6, #8]
 800f6d8:	1b2f      	subs	r7, r5, r4
 800f6da:	428f      	cmp	r7, r1
 800f6dc:	da01      	bge.n	800f6e2 <_format_int+0x4a>
 800f6de:	4294      	cmp	r4, r2
 800f6e0:	d832      	bhi.n	800f748 <_format_int+0xb0>
 800f6e2:	071a      	lsls	r2, r3, #28
 800f6e4:	bf44      	itt	mi
 800f6e6:	222d      	movmi	r2, #45	; 0x2d
 800f6e8:	f804 2901 	strbmi.w	r2, [r4], #-1
 800f6ec:	065b      	lsls	r3, r3, #25
 800f6ee:	d407      	bmi.n	800f700 <_format_int+0x68>
 800f6f0:	466b      	mov	r3, sp
 800f6f2:	2120      	movs	r1, #32
 800f6f4:	68b2      	ldr	r2, [r6, #8]
 800f6f6:	1b28      	subs	r0, r5, r4
 800f6f8:	4290      	cmp	r0, r2
 800f6fa:	da01      	bge.n	800f700 <_format_int+0x68>
 800f6fc:	429c      	cmp	r4, r3
 800f6fe:	d826      	bhi.n	800f74e <_format_int+0xb6>
 800f700:	1b2d      	subs	r5, r5, r4
 800f702:	3401      	adds	r4, #1
 800f704:	ab10      	add	r3, sp, #64	; 0x40
 800f706:	429c      	cmp	r4, r3
 800f708:	d324      	bcc.n	800f754 <_format_int+0xbc>
 800f70a:	68b3      	ldr	r3, [r6, #8]
 800f70c:	42ab      	cmp	r3, r5
 800f70e:	dc27      	bgt.n	800f760 <_format_int+0xc8>
 800f710:	b011      	add	sp, #68	; 0x44
 800f712:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f716:	462c      	mov	r4, r5
 800f718:	46e9      	mov	r9, sp
 800f71a:	4638      	mov	r0, r7
 800f71c:	4641      	mov	r1, r8
 800f71e:	220a      	movs	r2, #10
 800f720:	2300      	movs	r3, #0
 800f722:	f7f8 f9df 	bl	8007ae4 <__aeabi_uldivmod>
 800f726:	3230      	adds	r2, #48	; 0x30
 800f728:	f804 2901 	strb.w	r2, [r4], #-1
 800f72c:	463a      	mov	r2, r7
 800f72e:	4643      	mov	r3, r8
 800f730:	2a0a      	cmp	r2, #10
 800f732:	f173 0300 	sbcs.w	r3, r3, #0
 800f736:	4607      	mov	r7, r0
 800f738:	4688      	mov	r8, r1
 800f73a:	d3bd      	bcc.n	800f6b8 <_format_int+0x20>
 800f73c:	454c      	cmp	r4, r9
 800f73e:	d1ec      	bne.n	800f71a <_format_int+0x82>
 800f740:	e7ba      	b.n	800f6b8 <_format_int+0x20>
 800f742:	f804 0901 	strb.w	r0, [r4], #-1
 800f746:	e7bd      	b.n	800f6c4 <_format_int+0x2c>
 800f748:	f804 0901 	strb.w	r0, [r4], #-1
 800f74c:	e7c4      	b.n	800f6d8 <_format_int+0x40>
 800f74e:	f804 1901 	strb.w	r1, [r4], #-1
 800f752:	e7d0      	b.n	800f6f6 <_format_int+0x5e>
 800f754:	4630      	mov	r0, r6
 800f756:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f75a:	f7ff ff87 	bl	800f66c <_xputch>
 800f75e:	e7d1      	b.n	800f704 <_format_int+0x6c>
 800f760:	2120      	movs	r1, #32
 800f762:	4630      	mov	r0, r6
 800f764:	f7ff ff82 	bl	800f66c <_xputch>
 800f768:	3501      	adds	r5, #1
 800f76a:	e7ce      	b.n	800f70a <_format_int+0x72>

0800f76c <_format_hex>:
 800f76c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f76e:	b091      	sub	sp, #68	; 0x44
 800f770:	4606      	mov	r6, r0
 800f772:	6804      	ldr	r4, [r0, #0]
 800f774:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800f778:	bb61      	cbnz	r1, 800f7d4 <_format_hex+0x68>
 800f77a:	2330      	movs	r3, #48	; 0x30
 800f77c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f780:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800f784:	07e5      	lsls	r5, r4, #31
 800f786:	d507      	bpl.n	800f798 <_format_hex+0x2c>
 800f788:	4669      	mov	r1, sp
 800f78a:	2530      	movs	r5, #48	; 0x30
 800f78c:	6870      	ldr	r0, [r6, #4]
 800f78e:	1ad7      	subs	r7, r2, r3
 800f790:	4287      	cmp	r7, r0
 800f792:	da01      	bge.n	800f798 <_format_hex+0x2c>
 800f794:	428b      	cmp	r3, r1
 800f796:	d831      	bhi.n	800f7fc <_format_hex+0x90>
 800f798:	06a0      	lsls	r0, r4, #26
 800f79a:	d507      	bpl.n	800f7ac <_format_hex+0x40>
 800f79c:	4669      	mov	r1, sp
 800f79e:	2530      	movs	r5, #48	; 0x30
 800f7a0:	68b0      	ldr	r0, [r6, #8]
 800f7a2:	1ad7      	subs	r7, r2, r3
 800f7a4:	4287      	cmp	r7, r0
 800f7a6:	da01      	bge.n	800f7ac <_format_hex+0x40>
 800f7a8:	428b      	cmp	r3, r1
 800f7aa:	d82a      	bhi.n	800f802 <_format_hex+0x96>
 800f7ac:	0661      	lsls	r1, r4, #25
 800f7ae:	d407      	bmi.n	800f7c0 <_format_hex+0x54>
 800f7b0:	4669      	mov	r1, sp
 800f7b2:	2420      	movs	r4, #32
 800f7b4:	68b0      	ldr	r0, [r6, #8]
 800f7b6:	1ad5      	subs	r5, r2, r3
 800f7b8:	4285      	cmp	r5, r0
 800f7ba:	da01      	bge.n	800f7c0 <_format_hex+0x54>
 800f7bc:	428b      	cmp	r3, r1
 800f7be:	d823      	bhi.n	800f808 <_format_hex+0x9c>
 800f7c0:	1ad5      	subs	r5, r2, r3
 800f7c2:	1c5c      	adds	r4, r3, #1
 800f7c4:	ab10      	add	r3, sp, #64	; 0x40
 800f7c6:	429c      	cmp	r4, r3
 800f7c8:	d321      	bcc.n	800f80e <_format_hex+0xa2>
 800f7ca:	68b3      	ldr	r3, [r6, #8]
 800f7cc:	429d      	cmp	r5, r3
 800f7ce:	db24      	blt.n	800f81a <_format_hex+0xae>
 800f7d0:	b011      	add	sp, #68	; 0x44
 800f7d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7d4:	f014 0f02 	tst.w	r4, #2
 800f7d8:	bf0c      	ite	eq
 800f7da:	2757      	moveq	r7, #87	; 0x57
 800f7dc:	2737      	movne	r7, #55	; 0x37
 800f7de:	4613      	mov	r3, r2
 800f7e0:	466d      	mov	r5, sp
 800f7e2:	f001 000f 	and.w	r0, r1, #15
 800f7e6:	2809      	cmp	r0, #9
 800f7e8:	bf94      	ite	ls
 800f7ea:	3030      	addls	r0, #48	; 0x30
 800f7ec:	19c0      	addhi	r0, r0, r7
 800f7ee:	0909      	lsrs	r1, r1, #4
 800f7f0:	f803 0901 	strb.w	r0, [r3], #-1
 800f7f4:	d0c6      	beq.n	800f784 <_format_hex+0x18>
 800f7f6:	42ab      	cmp	r3, r5
 800f7f8:	d1f3      	bne.n	800f7e2 <_format_hex+0x76>
 800f7fa:	e7c3      	b.n	800f784 <_format_hex+0x18>
 800f7fc:	f803 5901 	strb.w	r5, [r3], #-1
 800f800:	e7c5      	b.n	800f78e <_format_hex+0x22>
 800f802:	f803 5901 	strb.w	r5, [r3], #-1
 800f806:	e7cc      	b.n	800f7a2 <_format_hex+0x36>
 800f808:	f803 4901 	strb.w	r4, [r3], #-1
 800f80c:	e7d3      	b.n	800f7b6 <_format_hex+0x4a>
 800f80e:	4630      	mov	r0, r6
 800f810:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f814:	f7ff ff2a 	bl	800f66c <_xputch>
 800f818:	e7d4      	b.n	800f7c4 <_format_hex+0x58>
 800f81a:	2120      	movs	r1, #32
 800f81c:	4630      	mov	r0, r6
 800f81e:	f7ff ff25 	bl	800f66c <_xputch>
 800f822:	3501      	adds	r5, #1
 800f824:	e7d1      	b.n	800f7ca <_format_hex+0x5e>
	...

0800f828 <_vprintf>:
 800f828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f82c:	2700      	movs	r7, #0
 800f82e:	460b      	mov	r3, r1
 800f830:	4614      	mov	r4, r2
 800f832:	f04f 080a 	mov.w	r8, #10
 800f836:	b086      	sub	sp, #24
 800f838:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800f83c:	7819      	ldrb	r1, [r3, #0]
 800f83e:	b919      	cbnz	r1, 800f848 <_vprintf+0x20>
 800f840:	9804      	ldr	r0, [sp, #16]
 800f842:	b006      	add	sp, #24
 800f844:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f848:	2925      	cmp	r1, #37	; 0x25
 800f84a:	f103 0601 	add.w	r6, r3, #1
 800f84e:	d004      	beq.n	800f85a <_vprintf+0x32>
 800f850:	a801      	add	r0, sp, #4
 800f852:	f7ff ff0b 	bl	800f66c <_xputch>
 800f856:	4633      	mov	r3, r6
 800f858:	e7f0      	b.n	800f83c <_vprintf+0x14>
 800f85a:	785a      	ldrb	r2, [r3, #1]
 800f85c:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800f860:	2a30      	cmp	r2, #48	; 0x30
 800f862:	9703      	str	r7, [sp, #12]
 800f864:	d126      	bne.n	800f8b4 <_vprintf+0x8c>
 800f866:	2220      	movs	r2, #32
 800f868:	9201      	str	r2, [sp, #4]
 800f86a:	1c9e      	adds	r6, r3, #2
 800f86c:	2200      	movs	r2, #0
 800f86e:	4635      	mov	r5, r6
 800f870:	4613      	mov	r3, r2
 800f872:	7829      	ldrb	r1, [r5, #0]
 800f874:	462e      	mov	r6, r5
 800f876:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800f87a:	2809      	cmp	r0, #9
 800f87c:	f105 0501 	add.w	r5, r5, #1
 800f880:	d91c      	bls.n	800f8bc <_vprintf+0x94>
 800f882:	b12a      	cbz	r2, 800f890 <_vprintf+0x68>
 800f884:	9303      	str	r3, [sp, #12]
 800f886:	b11b      	cbz	r3, 800f890 <_vprintf+0x68>
 800f888:	9b01      	ldr	r3, [sp, #4]
 800f88a:	f043 0310 	orr.w	r3, r3, #16
 800f88e:	9301      	str	r3, [sp, #4]
 800f890:	292e      	cmp	r1, #46	; 0x2e
 800f892:	d122      	bne.n	800f8da <_vprintf+0xb2>
 800f894:	7873      	ldrb	r3, [r6, #1]
 800f896:	2b2a      	cmp	r3, #42	; 0x2a
 800f898:	d014      	beq.n	800f8c4 <_vprintf+0x9c>
 800f89a:	2100      	movs	r1, #0
 800f89c:	460a      	mov	r2, r1
 800f89e:	1c70      	adds	r0, r6, #1
 800f8a0:	7803      	ldrb	r3, [r0, #0]
 800f8a2:	4606      	mov	r6, r0
 800f8a4:	3b30      	subs	r3, #48	; 0x30
 800f8a6:	2b09      	cmp	r3, #9
 800f8a8:	f100 0001 	add.w	r0, r0, #1
 800f8ac:	d930      	bls.n	800f910 <_vprintf+0xe8>
 800f8ae:	b181      	cbz	r1, 800f8d2 <_vprintf+0xaa>
 800f8b0:	9202      	str	r2, [sp, #8]
 800f8b2:	e00e      	b.n	800f8d2 <_vprintf+0xaa>
 800f8b4:	2a2d      	cmp	r2, #45	; 0x2d
 800f8b6:	d1d9      	bne.n	800f86c <_vprintf+0x44>
 800f8b8:	2240      	movs	r2, #64	; 0x40
 800f8ba:	e7d5      	b.n	800f868 <_vprintf+0x40>
 800f8bc:	2201      	movs	r2, #1
 800f8be:	fb08 0303 	mla	r3, r8, r3, r0
 800f8c2:	e7d6      	b.n	800f872 <_vprintf+0x4a>
 800f8c4:	f854 3b04 	ldr.w	r3, [r4], #4
 800f8c8:	3602      	adds	r6, #2
 800f8ca:	2b00      	cmp	r3, #0
 800f8cc:	bfb8      	it	lt
 800f8ce:	425b      	neglt	r3, r3
 800f8d0:	9302      	str	r3, [sp, #8]
 800f8d2:	9b01      	ldr	r3, [sp, #4]
 800f8d4:	f043 0301 	orr.w	r3, r3, #1
 800f8d8:	9301      	str	r3, [sp, #4]
 800f8da:	7833      	ldrb	r3, [r6, #0]
 800f8dc:	2b6c      	cmp	r3, #108	; 0x6c
 800f8de:	bf04      	itt	eq
 800f8e0:	9b01      	ldreq	r3, [sp, #4]
 800f8e2:	3601      	addeq	r6, #1
 800f8e4:	7831      	ldrb	r1, [r6, #0]
 800f8e6:	bf04      	itt	eq
 800f8e8:	f043 0304 	orreq.w	r3, r3, #4
 800f8ec:	9301      	streq	r3, [sp, #4]
 800f8ee:	2978      	cmp	r1, #120	; 0x78
 800f8f0:	d8ae      	bhi.n	800f850 <_vprintf+0x28>
 800f8f2:	296f      	cmp	r1, #111	; 0x6f
 800f8f4:	d810      	bhi.n	800f918 <_vprintf+0xf0>
 800f8f6:	2963      	cmp	r1, #99	; 0x63
 800f8f8:	d048      	beq.n	800f98c <_vprintf+0x164>
 800f8fa:	d827      	bhi.n	800f94c <_vprintf+0x124>
 800f8fc:	2958      	cmp	r1, #88	; 0x58
 800f8fe:	d1a7      	bne.n	800f850 <_vprintf+0x28>
 800f900:	9b01      	ldr	r3, [sp, #4]
 800f902:	f043 0302 	orr.w	r3, r3, #2
 800f906:	9301      	str	r3, [sp, #4]
 800f908:	4625      	mov	r5, r4
 800f90a:	f855 1b04 	ldr.w	r1, [r5], #4
 800f90e:	e056      	b.n	800f9be <_vprintf+0x196>
 800f910:	2101      	movs	r1, #1
 800f912:	fb08 3202 	mla	r2, r8, r2, r3
 800f916:	e7c3      	b.n	800f8a0 <_vprintf+0x78>
 800f918:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800f91c:	2b08      	cmp	r3, #8
 800f91e:	d897      	bhi.n	800f850 <_vprintf+0x28>
 800f920:	a201      	add	r2, pc, #4	; (adr r2, 800f928 <_vprintf+0x100>)
 800f922:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f926:	bf00      	nop
 800f928:	0800f99f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, fp, ip, sp, lr, pc}
 800f92c:	0800f851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp, lr, pc}
 800f930:	0800f851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp, lr, pc}
 800f934:	0800f9c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r8, fp, ip, sp, lr, pc}
 800f938:	0800f851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp, lr, pc}
 800f93c:	0800fa3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r9, fp, ip, sp, lr, pc}
 800f940:	0800f851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp, lr, pc}
 800f944:	0800f851 	stmdaeq	r0, {r0, r4, r6, fp, ip, sp, lr, pc}
 800f948:	0800f909 	stmdaeq	r0, {r0, r3, r8, fp, ip, sp, lr, pc}
 800f94c:	2964      	cmp	r1, #100	; 0x64
 800f94e:	d002      	beq.n	800f956 <_vprintf+0x12e>
 800f950:	2969      	cmp	r1, #105	; 0x69
 800f952:	f47f af7d 	bne.w	800f850 <_vprintf+0x28>
 800f956:	9901      	ldr	r1, [sp, #4]
 800f958:	074d      	lsls	r5, r1, #29
 800f95a:	bf51      	iteee	pl
 800f95c:	4625      	movpl	r5, r4
 800f95e:	3407      	addmi	r4, #7
 800f960:	f024 0407 	bicmi.w	r4, r4, #7
 800f964:	4625      	movmi	r5, r4
 800f966:	bf55      	itete	pl
 800f968:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800f96c:	6863      	ldrmi	r3, [r4, #4]
 800f96e:	17d3      	asrpl	r3, r2, #31
 800f970:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800f974:	2b00      	cmp	r3, #0
 800f976:	da05      	bge.n	800f984 <_vprintf+0x15c>
 800f978:	f041 0108 	orr.w	r1, r1, #8
 800f97c:	4252      	negs	r2, r2
 800f97e:	9101      	str	r1, [sp, #4]
 800f980:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800f984:	a801      	add	r0, sp, #4
 800f986:	f7ff fe87 	bl	800f698 <_format_int>
 800f98a:	e005      	b.n	800f998 <_vprintf+0x170>
 800f98c:	4625      	mov	r5, r4
 800f98e:	a801      	add	r0, sp, #4
 800f990:	f855 1b04 	ldr.w	r1, [r5], #4
 800f994:	f7ff fe6a 	bl	800f66c <_xputch>
 800f998:	462c      	mov	r4, r5
 800f99a:	3601      	adds	r6, #1
 800f99c:	e75b      	b.n	800f856 <_vprintf+0x2e>
 800f99e:	2308      	movs	r3, #8
 800f9a0:	4625      	mov	r5, r4
 800f9a2:	9303      	str	r3, [sp, #12]
 800f9a4:	2320      	movs	r3, #32
 800f9a6:	2130      	movs	r1, #48	; 0x30
 800f9a8:	f855 4b04 	ldr.w	r4, [r5], #4
 800f9ac:	a801      	add	r0, sp, #4
 800f9ae:	9301      	str	r3, [sp, #4]
 800f9b0:	f7ff fe5c 	bl	800f66c <_xputch>
 800f9b4:	2178      	movs	r1, #120	; 0x78
 800f9b6:	a801      	add	r0, sp, #4
 800f9b8:	f7ff fe58 	bl	800f66c <_xputch>
 800f9bc:	4621      	mov	r1, r4
 800f9be:	a801      	add	r0, sp, #4
 800f9c0:	f7ff fed4 	bl	800f76c <_format_hex>
 800f9c4:	e7e8      	b.n	800f998 <_vprintf+0x170>
 800f9c6:	4625      	mov	r5, r4
 800f9c8:	2400      	movs	r4, #0
 800f9ca:	f855 9b04 	ldr.w	r9, [r5], #4
 800f9ce:	f819 3004 	ldrb.w	r3, [r9, r4]
 800f9d2:	b993      	cbnz	r3, 800f9fa <_vprintf+0x1d2>
 800f9d4:	9b01      	ldr	r3, [sp, #4]
 800f9d6:	07d9      	lsls	r1, r3, #31
 800f9d8:	d503      	bpl.n	800f9e2 <_vprintf+0x1ba>
 800f9da:	9b02      	ldr	r3, [sp, #8]
 800f9dc:	429c      	cmp	r4, r3
 800f9de:	bfa8      	it	ge
 800f9e0:	461c      	movge	r4, r3
 800f9e2:	9b01      	ldr	r3, [sp, #4]
 800f9e4:	f104 0a01 	add.w	sl, r4, #1
 800f9e8:	065a      	lsls	r2, r3, #25
 800f9ea:	d403      	bmi.n	800f9f4 <_vprintf+0x1cc>
 800f9ec:	9b03      	ldr	r3, [sp, #12]
 800f9ee:	429c      	cmp	r4, r3
 800f9f0:	db05      	blt.n	800f9fe <_vprintf+0x1d6>
 800f9f2:	4654      	mov	r4, sl
 800f9f4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800f9f8:	e00d      	b.n	800fa16 <_vprintf+0x1ee>
 800f9fa:	3401      	adds	r4, #1
 800f9fc:	e7e7      	b.n	800f9ce <_vprintf+0x1a6>
 800f9fe:	2120      	movs	r1, #32
 800fa00:	a801      	add	r0, sp, #4
 800fa02:	f7ff fe33 	bl	800f66c <_xputch>
 800fa06:	4654      	mov	r4, sl
 800fa08:	e7eb      	b.n	800f9e2 <_vprintf+0x1ba>
 800fa0a:	a801      	add	r0, sp, #4
 800fa0c:	f7ff fe2e 	bl	800f66c <_xputch>
 800fa10:	9b02      	ldr	r3, [sp, #8]
 800fa12:	3b01      	subs	r3, #1
 800fa14:	9302      	str	r3, [sp, #8]
 800fa16:	9b01      	ldr	r3, [sp, #4]
 800fa18:	07db      	lsls	r3, r3, #31
 800fa1a:	d501      	bpl.n	800fa20 <_vprintf+0x1f8>
 800fa1c:	9b02      	ldr	r3, [sp, #8]
 800fa1e:	b11b      	cbz	r3, 800fa28 <_vprintf+0x200>
 800fa20:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800fa24:	2900      	cmp	r1, #0
 800fa26:	d1f0      	bne.n	800fa0a <_vprintf+0x1e2>
 800fa28:	9b03      	ldr	r3, [sp, #12]
 800fa2a:	42a3      	cmp	r3, r4
 800fa2c:	ddb4      	ble.n	800f998 <_vprintf+0x170>
 800fa2e:	2120      	movs	r1, #32
 800fa30:	a801      	add	r0, sp, #4
 800fa32:	f7ff fe1b 	bl	800f66c <_xputch>
 800fa36:	3401      	adds	r4, #1
 800fa38:	e7f6      	b.n	800fa28 <_vprintf+0x200>
 800fa3a:	9b01      	ldr	r3, [sp, #4]
 800fa3c:	f013 0304 	ands.w	r3, r3, #4
 800fa40:	bf1d      	ittte	ne
 800fa42:	3407      	addne	r4, #7
 800fa44:	f024 0407 	bicne.w	r4, r4, #7
 800fa48:	4625      	movne	r5, r4
 800fa4a:	4625      	moveq	r5, r4
 800fa4c:	bf1a      	itte	ne
 800fa4e:	f855 2b08 	ldrne.w	r2, [r5], #8
 800fa52:	6863      	ldrne	r3, [r4, #4]
 800fa54:	f855 2b04 	ldreq.w	r2, [r5], #4
 800fa58:	e794      	b.n	800f984 <_vprintf+0x15c>
 800fa5a:	bf00      	nop

0800fa5c <printf>:
 800fa5c:	b40f      	push	{r0, r1, r2, r3}
 800fa5e:	b507      	push	{r0, r1, r2, lr}
 800fa60:	aa04      	add	r2, sp, #16
 800fa62:	f852 1b04 	ldr.w	r1, [r2], #4
 800fa66:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fa6a:	9201      	str	r2, [sp, #4]
 800fa6c:	f7ff fedc 	bl	800f828 <_vprintf>
 800fa70:	b003      	add	sp, #12
 800fa72:	f85d eb04 	ldr.w	lr, [sp], #4
 800fa76:	b004      	add	sp, #16
 800fa78:	4770      	bx	lr
	...

0800fa7c <sprintf>:
 800fa7c:	b40e      	push	{r1, r2, r3}
 800fa7e:	b517      	push	{r0, r1, r2, r4, lr}
 800fa80:	4c09      	ldr	r4, [pc, #36]	; (800faa8 <sprintf+0x2c>)
 800fa82:	aa05      	add	r2, sp, #20
 800fa84:	f852 1b04 	ldr.w	r1, [r2], #4
 800fa88:	6020      	str	r0, [r4, #0]
 800fa8a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fa8e:	9201      	str	r2, [sp, #4]
 800fa90:	f7ff feca 	bl	800f828 <_vprintf>
 800fa94:	2300      	movs	r3, #0
 800fa96:	6822      	ldr	r2, [r4, #0]
 800fa98:	6023      	str	r3, [r4, #0]
 800fa9a:	7013      	strb	r3, [r2, #0]
 800fa9c:	b003      	add	sp, #12
 800fa9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800faa2:	b003      	add	sp, #12
 800faa4:	4770      	bx	lr
 800faa6:	bf00      	nop
 800faa8:	20009bc4 	andcs	r9, r0, r4, asr #23

0800faac <snprintf>:
 800faac:	b40c      	push	{r2, r3}
 800faae:	460b      	mov	r3, r1
 800fab0:	b513      	push	{r0, r1, r4, lr}
 800fab2:	4c09      	ldr	r4, [pc, #36]	; (800fad8 <snprintf+0x2c>)
 800fab4:	aa04      	add	r2, sp, #16
 800fab6:	f852 1b04 	ldr.w	r1, [r2], #4
 800faba:	6020      	str	r0, [r4, #0]
 800fabc:	4618      	mov	r0, r3
 800fabe:	9201      	str	r2, [sp, #4]
 800fac0:	f7ff feb2 	bl	800f828 <_vprintf>
 800fac4:	2300      	movs	r3, #0
 800fac6:	6822      	ldr	r2, [r4, #0]
 800fac8:	6023      	str	r3, [r4, #0]
 800faca:	7013      	strb	r3, [r2, #0]
 800facc:	b002      	add	sp, #8
 800face:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fad2:	b002      	add	sp, #8
 800fad4:	4770      	bx	lr
 800fad6:	bf00      	nop
 800fad8:	20009bc4 	andcs	r9, r0, r4, asr #23

0800fadc <vsnprintf>:
 800fadc:	b538      	push	{r3, r4, r5, lr}
 800fade:	4605      	mov	r5, r0
 800fae0:	4c05      	ldr	r4, [pc, #20]	; (800faf8 <vsnprintf+0x1c>)
 800fae2:	4608      	mov	r0, r1
 800fae4:	4611      	mov	r1, r2
 800fae6:	461a      	mov	r2, r3
 800fae8:	6025      	str	r5, [r4, #0]
 800faea:	f7ff fe9d 	bl	800f828 <_vprintf>
 800faee:	2300      	movs	r3, #0
 800faf0:	6822      	ldr	r2, [r4, #0]
 800faf2:	6023      	str	r3, [r4, #0]
 800faf4:	7013      	strb	r3, [r2, #0]
 800faf6:	bd38      	pop	{r3, r4, r5, pc}
 800faf8:	20009bc4 	andcs	r9, r0, r4, asr #23

0800fafc <puts>:
 800fafc:	b508      	push	{r3, lr}
 800fafe:	f7ff fb21 	bl	800f144 <console_puts>
 800fb02:	200a      	movs	r0, #10
 800fb04:	f7ff fb1c 	bl	800f140 <console_putc>
 800fb08:	2001      	movs	r0, #1
 800fb0a:	bd08      	pop	{r3, pc}

0800fb0c <strtok>:
 800fb0c:	b530      	push	{r4, r5, lr}
 800fb0e:	b910      	cbnz	r0, 800fb16 <strtok+0xa>
 800fb10:	4b12      	ldr	r3, [pc, #72]	; (800fb5c <strtok+0x50>)
 800fb12:	6818      	ldr	r0, [r3, #0]
 800fb14:	b158      	cbz	r0, 800fb2e <strtok+0x22>
 800fb16:	4603      	mov	r3, r0
 800fb18:	460d      	mov	r5, r1
 800fb1a:	4618      	mov	r0, r3
 800fb1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb20:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fb24:	b924      	cbnz	r4, 800fb30 <strtok+0x24>
 800fb26:	b94a      	cbnz	r2, 800fb3c <strtok+0x30>
 800fb28:	4610      	mov	r0, r2
 800fb2a:	4b0c      	ldr	r3, [pc, #48]	; (800fb5c <strtok+0x50>)
 800fb2c:	601a      	str	r2, [r3, #0]
 800fb2e:	bd30      	pop	{r4, r5, pc}
 800fb30:	42a2      	cmp	r2, r4
 800fb32:	d1f5      	bne.n	800fb20 <strtok+0x14>
 800fb34:	e7f0      	b.n	800fb18 <strtok+0xc>
 800fb36:	4613      	mov	r3, r2
 800fb38:	e00c      	b.n	800fb54 <strtok+0x48>
 800fb3a:	b914      	cbnz	r4, 800fb42 <strtok+0x36>
 800fb3c:	460d      	mov	r5, r1
 800fb3e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb42:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fb46:	42a2      	cmp	r2, r4
 800fb48:	d1f7      	bne.n	800fb3a <strtok+0x2e>
 800fb4a:	2a00      	cmp	r2, #0
 800fb4c:	d0f3      	beq.n	800fb36 <strtok+0x2a>
 800fb4e:	2200      	movs	r2, #0
 800fb50:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fb54:	4a01      	ldr	r2, [pc, #4]	; (800fb5c <strtok+0x50>)
 800fb56:	6013      	str	r3, [r2, #0]
 800fb58:	e7e9      	b.n	800fb2e <strtok+0x22>
 800fb5a:	bf00      	nop
 800fb5c:	20009bc8 	andcs	r9, r0, r8, asr #23

0800fb60 <isleapyear>:
 800fb60:	2264      	movs	r2, #100	; 0x64
 800fb62:	fb90 f3f2 	sdiv	r3, r0, r2
 800fb66:	fb02 0313 	mls	r3, r2, r3, r0
 800fb6a:	b94b      	cbnz	r3, 800fb80 <isleapyear+0x20>
 800fb6c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800fb70:	fb90 f2f3 	sdiv	r2, r0, r3
 800fb74:	fb03 0012 	mls	r0, r3, r2, r0
 800fb78:	fab0 f080 	clz	r0, r0
 800fb7c:	0940      	lsrs	r0, r0, #5
 800fb7e:	4770      	bx	lr
 800fb80:	f010 0f03 	tst.w	r0, #3
 800fb84:	bf0c      	ite	eq
 800fb86:	2001      	moveq	r0, #1
 800fb88:	2000      	movne	r0, #0
 800fb8a:	4770      	bx	lr

0800fb8c <getdaysofmonth>:
 800fb8c:	b510      	push	{r4, lr}
 800fb8e:	4604      	mov	r4, r0
 800fb90:	2c01      	cmp	r4, #1
 800fb92:	4608      	mov	r0, r1
 800fb94:	d102      	bne.n	800fb9c <getdaysofmonth+0x10>
 800fb96:	f7ff ffe3 	bl	800fb60 <isleapyear>
 800fb9a:	b918      	cbnz	r0, 800fba4 <getdaysofmonth+0x18>
 800fb9c:	4b02      	ldr	r3, [pc, #8]	; (800fba8 <getdaysofmonth+0x1c>)
 800fb9e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800fba2:	bd10      	pop	{r4, pc}
 800fba4:	201d      	movs	r0, #29
 800fba6:	e7fc      	b.n	800fba2 <getdaysofmonth+0x16>
 800fba8:	08013b80 	stmdaeq	r1, {r7, r8, r9, fp, ip, sp}

0800fbac <mktime>:
 800fbac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbb0:	4604      	mov	r4, r0
 800fbb2:	2800      	cmp	r0, #0
 800fbb4:	d043      	beq.n	800fc3e <mktime+0x92>
 800fbb6:	6941      	ldr	r1, [r0, #20]
 800fbb8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800fbbc:	2b45      	cmp	r3, #69	; 0x45
 800fbbe:	d83e      	bhi.n	800fc3e <mktime+0x92>
 800fbc0:	2600      	movs	r6, #0
 800fbc2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800fbc6:	f240 186d 	movw	r8, #365	; 0x16d
 800fbca:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800fbce:	42af      	cmp	r7, r5
 800fbd0:	da24      	bge.n	800fc1c <mktime+0x70>
 800fbd2:	6927      	ldr	r7, [r4, #16]
 800fbd4:	2f0b      	cmp	r7, #11
 800fbd6:	d832      	bhi.n	800fc3e <mktime+0x92>
 800fbd8:	2500      	movs	r5, #0
 800fbda:	42af      	cmp	r7, r5
 800fbdc:	d129      	bne.n	800fc32 <mktime+0x86>
 800fbde:	68e5      	ldr	r5, [r4, #12]
 800fbe0:	2d00      	cmp	r5, #0
 800fbe2:	dd2c      	ble.n	800fc3e <mktime+0x92>
 800fbe4:	4638      	mov	r0, r7
 800fbe6:	f7ff ffd1 	bl	800fb8c <getdaysofmonth>
 800fbea:	4285      	cmp	r5, r0
 800fbec:	dc27      	bgt.n	800fc3e <mktime+0x92>
 800fbee:	2318      	movs	r3, #24
 800fbf0:	3d01      	subs	r5, #1
 800fbf2:	4435      	add	r5, r6
 800fbf4:	435d      	muls	r5, r3
 800fbf6:	68a3      	ldr	r3, [r4, #8]
 800fbf8:	2b17      	cmp	r3, #23
 800fbfa:	d820      	bhi.n	800fc3e <mktime+0x92>
 800fbfc:	213c      	movs	r1, #60	; 0x3c
 800fbfe:	442b      	add	r3, r5
 800fc00:	fb01 f203 	mul.w	r2, r1, r3
 800fc04:	6863      	ldr	r3, [r4, #4]
 800fc06:	2b3b      	cmp	r3, #59	; 0x3b
 800fc08:	d819      	bhi.n	800fc3e <mktime+0x92>
 800fc0a:	6820      	ldr	r0, [r4, #0]
 800fc0c:	4413      	add	r3, r2
 800fc0e:	283b      	cmp	r0, #59	; 0x3b
 800fc10:	fb01 f303 	mul.w	r3, r1, r3
 800fc14:	d813      	bhi.n	800fc3e <mktime+0x92>
 800fc16:	4418      	add	r0, r3
 800fc18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc1c:	4628      	mov	r0, r5
 800fc1e:	f7ff ff9f 	bl	800fb60 <isleapyear>
 800fc22:	2800      	cmp	r0, #0
 800fc24:	bf14      	ite	ne
 800fc26:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800fc2a:	4643      	moveq	r3, r8
 800fc2c:	3501      	adds	r5, #1
 800fc2e:	441e      	add	r6, r3
 800fc30:	e7cd      	b.n	800fbce <mktime+0x22>
 800fc32:	4628      	mov	r0, r5
 800fc34:	f7ff ffaa 	bl	800fb8c <getdaysofmonth>
 800fc38:	3501      	adds	r5, #1
 800fc3a:	4406      	add	r6, r0
 800fc3c:	e7cd      	b.n	800fbda <mktime+0x2e>
 800fc3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fc42:	e7e9      	b.n	800fc18 <mktime+0x6c>

0800fc44 <gettimeofday>:
 800fc44:	b538      	push	{r3, r4, r5, lr}
 800fc46:	4b10      	ldr	r3, [pc, #64]	; (800fc88 <gettimeofday+0x44>)
 800fc48:	4a10      	ldr	r2, [pc, #64]	; (800fc8c <gettimeofday+0x48>)
 800fc4a:	681b      	ldr	r3, [r3, #0]
 800fc4c:	6814      	ldr	r4, [r2, #0]
 800fc4e:	6013      	str	r3, [r2, #0]
 800fc50:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fc54:	429c      	cmp	r4, r3
 800fc56:	bf2c      	ite	cs
 800fc58:	1ae4      	subcs	r4, r4, r3
 800fc5a:	1b1c      	subcc	r4, r3, r4
 800fc5c:	4354      	muls	r4, r2
 800fc5e:	4b0c      	ldr	r3, [pc, #48]	; (800fc90 <gettimeofday+0x4c>)
 800fc60:	4605      	mov	r5, r0
 800fc62:	e9d3 2100 	ldrd	r2, r1, [r3]
 800fc66:	18a4      	adds	r4, r4, r2
 800fc68:	f141 0100 	adc.w	r1, r1, #0
 800fc6c:	e9c3 4100 	strd	r4, r1, [r3]
 800fc70:	4620      	mov	r0, r4
 800fc72:	2300      	movs	r3, #0
 800fc74:	4a07      	ldr	r2, [pc, #28]	; (800fc94 <gettimeofday+0x50>)
 800fc76:	f7f7 ff35 	bl	8007ae4 <__aeabi_uldivmod>
 800fc7a:	4b06      	ldr	r3, [pc, #24]	; (800fc94 <gettimeofday+0x50>)
 800fc7c:	6028      	str	r0, [r5, #0]
 800fc7e:	fb03 4410 	mls	r4, r3, r0, r4
 800fc82:	2000      	movs	r0, #0
 800fc84:	606c      	str	r4, [r5, #4]
 800fc86:	bd38      	pop	{r3, r4, r5, pc}
 800fc88:	20009bdc 	ldrdcs	r9, [r0], -ip
 800fc8c:	20009bd8 	ldrdcs	r9, [r0], -r8
 800fc90:	20009bd0 	ldrdcs	r9, [r0], -r0
 800fc94:	000f4240 	andeq	r4, pc, r0, asr #4

0800fc98 <settimeofday>:
 800fc98:	4b07      	ldr	r3, [pc, #28]	; (800fcb8 <settimeofday+0x20>)
 800fc9a:	b510      	push	{r4, lr}
 800fc9c:	681a      	ldr	r2, [r3, #0]
 800fc9e:	4b07      	ldr	r3, [pc, #28]	; (800fcbc <settimeofday+0x24>)
 800fca0:	6804      	ldr	r4, [r0, #0]
 800fca2:	601a      	str	r2, [r3, #0]
 800fca4:	6843      	ldr	r3, [r0, #4]
 800fca6:	4806      	ldr	r0, [pc, #24]	; (800fcc0 <settimeofday+0x28>)
 800fca8:	17da      	asrs	r2, r3, #31
 800fcaa:	fbc4 3200 	smlal	r3, r2, r4, r0
 800fcae:	4905      	ldr	r1, [pc, #20]	; (800fcc4 <settimeofday+0x2c>)
 800fcb0:	2000      	movs	r0, #0
 800fcb2:	e9c1 3200 	strd	r3, r2, [r1]
 800fcb6:	bd10      	pop	{r4, pc}
 800fcb8:	20009bdc 	ldrdcs	r9, [r0], -ip
 800fcbc:	20009bd8 	ldrdcs	r9, [r0], -r8
 800fcc0:	000f4240 	andeq	r4, pc, r0, asr #4
 800fcc4:	20009bd0 	ldrdcs	r9, [r0], -r0

0800fcc8 <time>:
 800fcc8:	b513      	push	{r0, r1, r4, lr}
 800fcca:	4604      	mov	r4, r0
 800fccc:	2100      	movs	r1, #0
 800fcce:	4668      	mov	r0, sp
 800fcd0:	f7ff ffb8 	bl	800fc44 <gettimeofday>
 800fcd4:	9800      	ldr	r0, [sp, #0]
 800fcd6:	b104      	cbz	r4, 800fcda <time+0x12>
 800fcd8:	6020      	str	r0, [r4, #0]
 800fcda:	b002      	add	sp, #8
 800fcdc:	bd10      	pop	{r4, pc}
	...

0800fce0 <uart0_init>:
 800fce0:	2301      	movs	r3, #1
 800fce2:	b507      	push	{r0, r1, r2, lr}
 800fce4:	2208      	movs	r2, #8
 800fce6:	9300      	str	r3, [sp, #0]
 800fce8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800fcec:	2300      	movs	r3, #0
 800fcee:	4803      	ldr	r0, [pc, #12]	; (800fcfc <uart0_init+0x1c>)
 800fcf0:	f001 f836 	bl	8010d60 <gd32_uart_begin>
 800fcf4:	b003      	add	sp, #12
 800fcf6:	f85d fb04 	ldr.w	pc, [sp], #4
 800fcfa:	bf00      	nop
 800fcfc:	40013800 	andmi	r3, r1, r0, lsl #16

0800fd00 <uart0_putc>:
 800fd00:	280a      	cmp	r0, #10
 800fd02:	b538      	push	{r3, r4, r5, lr}
 800fd04:	4604      	mov	r4, r0
 800fd06:	d10a      	bne.n	800fd1e <uart0_putc+0x1e>
 800fd08:	4d0b      	ldr	r5, [pc, #44]	; (800fd38 <uart0_putc+0x38>)
 800fd0a:	2107      	movs	r1, #7
 800fd0c:	4628      	mov	r0, r5
 800fd0e:	f000 fd8d 	bl	801082c <usart_flag_get>
 800fd12:	2800      	cmp	r0, #0
 800fd14:	d0f9      	beq.n	800fd0a <uart0_putc+0xa>
 800fd16:	220d      	movs	r2, #13
 800fd18:	4b08      	ldr	r3, [pc, #32]	; (800fd3c <uart0_putc+0x3c>)
 800fd1a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800fd1e:	4d06      	ldr	r5, [pc, #24]	; (800fd38 <uart0_putc+0x38>)
 800fd20:	2107      	movs	r1, #7
 800fd22:	4628      	mov	r0, r5
 800fd24:	f000 fd82 	bl	801082c <usart_flag_get>
 800fd28:	2800      	cmp	r0, #0
 800fd2a:	d0f9      	beq.n	800fd20 <uart0_putc+0x20>
 800fd2c:	4b03      	ldr	r3, [pc, #12]	; (800fd3c <uart0_putc+0x3c>)
 800fd2e:	b2e4      	uxtb	r4, r4
 800fd30:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800fd34:	bd38      	pop	{r3, r4, r5, pc}
 800fd36:	bf00      	nop
 800fd38:	40013800 	andmi	r3, r1, r0, lsl #16
 800fd3c:	40013000 	andmi	r3, r1, r0

0800fd40 <uart0_puts>:
 800fd40:	b510      	push	{r4, lr}
 800fd42:	1e44      	subs	r4, r0, #1
 800fd44:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800fd48:	b903      	cbnz	r3, 800fd4c <uart0_puts+0xc>
 800fd4a:	bd10      	pop	{r4, pc}
 800fd4c:	2b0a      	cmp	r3, #10
 800fd4e:	d102      	bne.n	800fd56 <uart0_puts+0x16>
 800fd50:	200d      	movs	r0, #13
 800fd52:	f7ff ffd5 	bl	800fd00 <uart0_putc>
 800fd56:	7820      	ldrb	r0, [r4, #0]
 800fd58:	f7ff ffd2 	bl	800fd00 <uart0_putc>
 800fd5c:	e7f2      	b.n	800fd44 <uart0_puts+0x4>
	...

0800fd60 <systick_config>:
 800fd60:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800fd64:	4b0b      	ldr	r3, [pc, #44]	; (800fd94 <systick_config+0x34>)
 800fd66:	681b      	ldr	r3, [r3, #0]
 800fd68:	fbb3 f3f2 	udiv	r3, r3, r2
 800fd6c:	3b01      	subs	r3, #1
 800fd6e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800fd72:	d20d      	bcs.n	800fd90 <systick_config+0x30>
 800fd74:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800fd78:	21f0      	movs	r1, #240	; 0xf0
 800fd7a:	6153      	str	r3, [r2, #20]
 800fd7c:	4b06      	ldr	r3, [pc, #24]	; (800fd98 <systick_config+0x38>)
 800fd7e:	2007      	movs	r0, #7
 800fd80:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800fd84:	2100      	movs	r1, #0
 800fd86:	6191      	str	r1, [r2, #24]
 800fd88:	6110      	str	r0, [r2, #16]
 800fd8a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800fd8e:	4770      	bx	lr
 800fd90:	e7fe      	b.n	800fd90 <systick_config+0x30>
 800fd92:	bf00      	nop
 800fd94:	200000f4 	strdcs	r0, [r0], -r4
 800fd98:	e000ed00 	and	lr, r0, r0, lsl #26

0800fd9c <SysTick_Handler>:
 800fd9c:	4a02      	ldr	r2, [pc, #8]	; (800fda8 <SysTick_Handler+0xc>)
 800fd9e:	6813      	ldr	r3, [r2, #0]
 800fda0:	3301      	adds	r3, #1
 800fda2:	6013      	str	r3, [r2, #0]
 800fda4:	4770      	bx	lr
 800fda6:	bf00      	nop
 800fda8:	20009bdc 	ldrdcs	r9, [r0], -ip

0800fdac <SystemInit>:
 800fdac:	4b37      	ldr	r3, [pc, #220]	; (800fe8c <SystemInit+0xe0>)
 800fdae:	4938      	ldr	r1, [pc, #224]	; (800fe90 <SystemInit+0xe4>)
 800fdb0:	681a      	ldr	r2, [r3, #0]
 800fdb2:	f042 0201 	orr.w	r2, r2, #1
 800fdb6:	601a      	str	r2, [r3, #0]
 800fdb8:	685a      	ldr	r2, [r3, #4]
 800fdba:	f022 0203 	bic.w	r2, r2, #3
 800fdbe:	605a      	str	r2, [r3, #4]
 800fdc0:	681a      	ldr	r2, [r3, #0]
 800fdc2:	400a      	ands	r2, r1
 800fdc4:	601a      	str	r2, [r3, #0]
 800fdc6:	6858      	ldr	r0, [r3, #4]
 800fdc8:	4a32      	ldr	r2, [pc, #200]	; (800fe94 <SystemInit+0xe8>)
 800fdca:	4002      	ands	r2, r0
 800fdcc:	605a      	str	r2, [r3, #4]
 800fdce:	681a      	ldr	r2, [r3, #0]
 800fdd0:	400a      	ands	r2, r1
 800fdd2:	601a      	str	r2, [r3, #0]
 800fdd4:	681a      	ldr	r2, [r3, #0]
 800fdd6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800fdda:	601a      	str	r2, [r3, #0]
 800fddc:	685a      	ldr	r2, [r3, #4]
 800fdde:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800fde2:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800fde6:	605a      	str	r2, [r3, #4]
 800fde8:	2200      	movs	r2, #0
 800fdea:	62da      	str	r2, [r3, #44]	; 0x2c
 800fdec:	681a      	ldr	r2, [r3, #0]
 800fdee:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800fdf2:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800fdf6:	601a      	str	r2, [r3, #0]
 800fdf8:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800fdfc:	609a      	str	r2, [r3, #8]
 800fdfe:	681a      	ldr	r2, [r3, #0]
 800fe00:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800fe04:	601a      	str	r2, [r3, #0]
 800fe06:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fe0a:	6819      	ldr	r1, [r3, #0]
 800fe0c:	0389      	lsls	r1, r1, #14
 800fe0e:	d401      	bmi.n	800fe14 <SystemInit+0x68>
 800fe10:	3a01      	subs	r2, #1
 800fe12:	d1fa      	bne.n	800fe0a <SystemInit+0x5e>
 800fe14:	681a      	ldr	r2, [r3, #0]
 800fe16:	0392      	lsls	r2, r2, #14
 800fe18:	d400      	bmi.n	800fe1c <SystemInit+0x70>
 800fe1a:	e7fe      	b.n	800fe1a <SystemInit+0x6e>
 800fe1c:	685a      	ldr	r2, [r3, #4]
 800fe1e:	605a      	str	r2, [r3, #4]
 800fe20:	685a      	ldr	r2, [r3, #4]
 800fe22:	605a      	str	r2, [r3, #4]
 800fe24:	685a      	ldr	r2, [r3, #4]
 800fe26:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800fe2a:	605a      	str	r2, [r3, #4]
 800fe2c:	685a      	ldr	r2, [r3, #4]
 800fe2e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800fe32:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800fe36:	605a      	str	r2, [r3, #4]
 800fe38:	685a      	ldr	r2, [r3, #4]
 800fe3a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800fe3e:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800fe42:	605a      	str	r2, [r3, #4]
 800fe44:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800fe46:	4a14      	ldr	r2, [pc, #80]	; (800fe98 <SystemInit+0xec>)
 800fe48:	400a      	ands	r2, r1
 800fe4a:	62da      	str	r2, [r3, #44]	; 0x2c
 800fe4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fe4e:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800fe52:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800fe56:	62da      	str	r2, [r3, #44]	; 0x2c
 800fe58:	681a      	ldr	r2, [r3, #0]
 800fe5a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800fe5e:	601a      	str	r2, [r3, #0]
 800fe60:	681a      	ldr	r2, [r3, #0]
 800fe62:	0110      	lsls	r0, r2, #4
 800fe64:	d5fc      	bpl.n	800fe60 <SystemInit+0xb4>
 800fe66:	681a      	ldr	r2, [r3, #0]
 800fe68:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800fe6c:	601a      	str	r2, [r3, #0]
 800fe6e:	681a      	ldr	r2, [r3, #0]
 800fe70:	0191      	lsls	r1, r2, #6
 800fe72:	d5fc      	bpl.n	800fe6e <SystemInit+0xc2>
 800fe74:	685a      	ldr	r2, [r3, #4]
 800fe76:	f022 0203 	bic.w	r2, r2, #3
 800fe7a:	605a      	str	r2, [r3, #4]
 800fe7c:	685a      	ldr	r2, [r3, #4]
 800fe7e:	f042 0202 	orr.w	r2, r2, #2
 800fe82:	605a      	str	r2, [r3, #4]
 800fe84:	685a      	ldr	r2, [r3, #4]
 800fe86:	0712      	lsls	r2, r2, #28
 800fe88:	d5fc      	bpl.n	800fe84 <SystemInit+0xd8>
 800fe8a:	4770      	bx	lr
 800fe8c:	40021000 	andmi	r1, r2, r0
 800fe90:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800fe94:	e0ff000c 	rscs	r0, pc, ip
 800fe98:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800fe9c <bkp_deinit>:
 800fe9c:	b508      	push	{r3, lr}
 800fe9e:	f000 f9eb 	bl	8010278 <rcu_bkp_reset_enable>
 800fea2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fea6:	f000 b9ef 	b.w	8010288 <rcu_bkp_reset_disable>
	...

0800feac <bkp_data_write>:
 800feac:	f1a0 030b 	sub.w	r3, r0, #11
 800feb0:	2b1f      	cmp	r3, #31
 800feb2:	d804      	bhi.n	800febe <bkp_data_write+0x12>
 800feb4:	4b07      	ldr	r3, [pc, #28]	; (800fed4 <bkp_data_write+0x28>)
 800feb6:	4403      	add	r3, r0
 800feb8:	009b      	lsls	r3, r3, #2
 800feba:	8019      	strh	r1, [r3, #0]
 800febc:	4770      	bx	lr
 800febe:	1e43      	subs	r3, r0, #1
 800fec0:	2b09      	cmp	r3, #9
 800fec2:	bf9f      	itttt	ls
 800fec4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800fec8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800fecc:	0080      	lslls	r0, r0, #2
 800fece:	8001      	strhls	r1, [r0, #0]
 800fed0:	4770      	bx	lr
 800fed2:	bf00      	nop
 800fed4:	10001b05 	andne	r1, r0, r5, lsl #22

0800fed8 <bkp_data_read>:
 800fed8:	f1a0 030b 	sub.w	r3, r0, #11
 800fedc:	2b1f      	cmp	r3, #31
 800fede:	d805      	bhi.n	800feec <bkp_data_read+0x14>
 800fee0:	4b08      	ldr	r3, [pc, #32]	; (800ff04 <bkp_data_read+0x2c>)
 800fee2:	4403      	add	r3, r0
 800fee4:	009b      	lsls	r3, r3, #2
 800fee6:	8818      	ldrh	r0, [r3, #0]
 800fee8:	b280      	uxth	r0, r0
 800feea:	4770      	bx	lr
 800feec:	1e43      	subs	r3, r0, #1
 800feee:	2b09      	cmp	r3, #9
 800fef0:	d806      	bhi.n	800ff00 <bkp_data_read+0x28>
 800fef2:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800fef6:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 800fefa:	0080      	lsls	r0, r0, #2
 800fefc:	8800      	ldrh	r0, [r0, #0]
 800fefe:	e7f3      	b.n	800fee8 <bkp_data_read+0x10>
 800ff00:	2000      	movs	r0, #0
 800ff02:	4770      	bx	lr
 800ff04:	10001b05 	andne	r1, r0, r5, lsl #22

0800ff08 <dma_deinit>:
 800ff08:	4b0c      	ldr	r3, [pc, #48]	; (800ff3c <dma_deinit+0x34>)
 800ff0a:	4298      	cmp	r0, r3
 800ff0c:	d102      	bne.n	800ff14 <dma_deinit+0xc>
 800ff0e:	2904      	cmp	r1, #4
 800ff10:	d900      	bls.n	800ff14 <dma_deinit+0xc>
 800ff12:	e7fe      	b.n	800ff12 <dma_deinit+0xa>
 800ff14:	2314      	movs	r3, #20
 800ff16:	fb03 0301 	mla	r3, r3, r1, r0
 800ff1a:	689a      	ldr	r2, [r3, #8]
 800ff1c:	0089      	lsls	r1, r1, #2
 800ff1e:	f022 0201 	bic.w	r2, r2, #1
 800ff22:	609a      	str	r2, [r3, #8]
 800ff24:	2200      	movs	r2, #0
 800ff26:	609a      	str	r2, [r3, #8]
 800ff28:	60da      	str	r2, [r3, #12]
 800ff2a:	611a      	str	r2, [r3, #16]
 800ff2c:	615a      	str	r2, [r3, #20]
 800ff2e:	230f      	movs	r3, #15
 800ff30:	6842      	ldr	r2, [r0, #4]
 800ff32:	408b      	lsls	r3, r1
 800ff34:	4313      	orrs	r3, r2
 800ff36:	6043      	str	r3, [r0, #4]
 800ff38:	4770      	bx	lr
 800ff3a:	bf00      	nop
 800ff3c:	40020400 	andmi	r0, r2, r0, lsl #8

0800ff40 <dma_init>:
 800ff40:	4b1b      	ldr	r3, [pc, #108]	; (800ffb0 <dma_init+0x70>)
 800ff42:	b510      	push	{r4, lr}
 800ff44:	4298      	cmp	r0, r3
 800ff46:	d102      	bne.n	800ff4e <dma_init+0xe>
 800ff48:	2904      	cmp	r1, #4
 800ff4a:	d900      	bls.n	800ff4e <dma_init+0xe>
 800ff4c:	e7fe      	b.n	800ff4c <dma_init+0xc>
 800ff4e:	2314      	movs	r3, #20
 800ff50:	fb03 0101 	mla	r1, r3, r1, r0
 800ff54:	6813      	ldr	r3, [r2, #0]
 800ff56:	610b      	str	r3, [r1, #16]
 800ff58:	6893      	ldr	r3, [r2, #8]
 800ff5a:	614b      	str	r3, [r1, #20]
 800ff5c:	8a13      	ldrh	r3, [r2, #16]
 800ff5e:	60cb      	str	r3, [r1, #12]
 800ff60:	68d4      	ldr	r4, [r2, #12]
 800ff62:	6853      	ldr	r3, [r2, #4]
 800ff64:	6888      	ldr	r0, [r1, #8]
 800ff66:	4323      	orrs	r3, r4
 800ff68:	6954      	ldr	r4, [r2, #20]
 800ff6a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800ff6e:	4323      	orrs	r3, r4
 800ff70:	4303      	orrs	r3, r0
 800ff72:	608b      	str	r3, [r1, #8]
 800ff74:	7e13      	ldrb	r3, [r2, #24]
 800ff76:	2b01      	cmp	r3, #1
 800ff78:	688b      	ldr	r3, [r1, #8]
 800ff7a:	bf0c      	ite	eq
 800ff7c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800ff80:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800ff84:	608b      	str	r3, [r1, #8]
 800ff86:	7e53      	ldrb	r3, [r2, #25]
 800ff88:	2b01      	cmp	r3, #1
 800ff8a:	688b      	ldr	r3, [r1, #8]
 800ff8c:	bf0c      	ite	eq
 800ff8e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800ff92:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800ff96:	608b      	str	r3, [r1, #8]
 800ff98:	7e93      	ldrb	r3, [r2, #26]
 800ff9a:	b923      	cbnz	r3, 800ffa6 <dma_init+0x66>
 800ff9c:	688b      	ldr	r3, [r1, #8]
 800ff9e:	f023 0310 	bic.w	r3, r3, #16
 800ffa2:	608b      	str	r3, [r1, #8]
 800ffa4:	bd10      	pop	{r4, pc}
 800ffa6:	688b      	ldr	r3, [r1, #8]
 800ffa8:	f043 0310 	orr.w	r3, r3, #16
 800ffac:	e7f9      	b.n	800ffa2 <dma_init+0x62>
 800ffae:	bf00      	nop
 800ffb0:	40020400 	andmi	r0, r2, r0, lsl #8

0800ffb4 <dma_circulation_disable>:
 800ffb4:	4b06      	ldr	r3, [pc, #24]	; (800ffd0 <dma_circulation_disable+0x1c>)
 800ffb6:	4298      	cmp	r0, r3
 800ffb8:	d102      	bne.n	800ffc0 <dma_circulation_disable+0xc>
 800ffba:	2904      	cmp	r1, #4
 800ffbc:	d900      	bls.n	800ffc0 <dma_circulation_disable+0xc>
 800ffbe:	e7fe      	b.n	800ffbe <dma_circulation_disable+0xa>
 800ffc0:	2314      	movs	r3, #20
 800ffc2:	4359      	muls	r1, r3
 800ffc4:	3008      	adds	r0, #8
 800ffc6:	580b      	ldr	r3, [r1, r0]
 800ffc8:	f023 0320 	bic.w	r3, r3, #32
 800ffcc:	500b      	str	r3, [r1, r0]
 800ffce:	4770      	bx	lr
 800ffd0:	40020400 	andmi	r0, r2, r0, lsl #8

0800ffd4 <dma_memory_to_memory_disable>:
 800ffd4:	4b06      	ldr	r3, [pc, #24]	; (800fff0 <dma_memory_to_memory_disable+0x1c>)
 800ffd6:	4298      	cmp	r0, r3
 800ffd8:	d102      	bne.n	800ffe0 <dma_memory_to_memory_disable+0xc>
 800ffda:	2904      	cmp	r1, #4
 800ffdc:	d900      	bls.n	800ffe0 <dma_memory_to_memory_disable+0xc>
 800ffde:	e7fe      	b.n	800ffde <dma_memory_to_memory_disable+0xa>
 800ffe0:	2314      	movs	r3, #20
 800ffe2:	4359      	muls	r1, r3
 800ffe4:	3008      	adds	r0, #8
 800ffe6:	580b      	ldr	r3, [r1, r0]
 800ffe8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800ffec:	500b      	str	r3, [r1, r0]
 800ffee:	4770      	bx	lr
 800fff0:	40020400 	andmi	r0, r2, r0, lsl #8

0800fff4 <fmc_bank0_unlock>:
 800fff4:	4b04      	ldr	r3, [pc, #16]	; (8010008 <fmc_bank0_unlock+0x14>)
 800fff6:	691a      	ldr	r2, [r3, #16]
 800fff8:	0612      	lsls	r2, r2, #24
 800fffa:	bf41      	itttt	mi
 800fffc:	4a03      	ldrmi	r2, [pc, #12]	; (801000c <fmc_bank0_unlock+0x18>)
 800fffe:	605a      	strmi	r2, [r3, #4]
 8010000:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8010004:	605a      	strmi	r2, [r3, #4]
 8010006:	4770      	bx	lr
 8010008:	40022000 	andmi	r2, r2, r0
 801000c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08010010 <fmc_bank1_unlock>:
 8010010:	4b04      	ldr	r3, [pc, #16]	; (8010024 <fmc_bank1_unlock+0x14>)
 8010012:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010014:	0612      	lsls	r2, r2, #24
 8010016:	bf41      	itttt	mi
 8010018:	4a03      	ldrmi	r2, [pc, #12]	; (8010028 <fmc_bank1_unlock+0x18>)
 801001a:	645a      	strmi	r2, [r3, #68]	; 0x44
 801001c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8010020:	645a      	strmi	r2, [r3, #68]	; 0x44
 8010022:	4770      	bx	lr
 8010024:	40022000 	andmi	r2, r2, r0
 8010028:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801002c <fmc_bank0_lock>:
 801002c:	4a02      	ldr	r2, [pc, #8]	; (8010038 <fmc_bank0_lock+0xc>)
 801002e:	6913      	ldr	r3, [r2, #16]
 8010030:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010034:	6113      	str	r3, [r2, #16]
 8010036:	4770      	bx	lr
 8010038:	40022000 	andmi	r2, r2, r0

0801003c <fmc_bank1_lock>:
 801003c:	4a02      	ldr	r2, [pc, #8]	; (8010048 <fmc_bank1_lock+0xc>)
 801003e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8010040:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010044:	6513      	str	r3, [r2, #80]	; 0x50
 8010046:	4770      	bx	lr
 8010048:	40022000 	andmi	r2, r2, r0

0801004c <fmc_bank0_state_get>:
 801004c:	4b07      	ldr	r3, [pc, #28]	; (801006c <fmc_bank0_state_get+0x20>)
 801004e:	68da      	ldr	r2, [r3, #12]
 8010050:	07d1      	lsls	r1, r2, #31
 8010052:	d407      	bmi.n	8010064 <fmc_bank0_state_get+0x18>
 8010054:	68da      	ldr	r2, [r3, #12]
 8010056:	06d2      	lsls	r2, r2, #27
 8010058:	d406      	bmi.n	8010068 <fmc_bank0_state_get+0x1c>
 801005a:	68d8      	ldr	r0, [r3, #12]
 801005c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8010060:	0040      	lsls	r0, r0, #1
 8010062:	4770      	bx	lr
 8010064:	2001      	movs	r0, #1
 8010066:	4770      	bx	lr
 8010068:	2003      	movs	r0, #3
 801006a:	4770      	bx	lr
 801006c:	40022000 	andmi	r2, r2, r0

08010070 <fmc_bank1_state_get>:
 8010070:	4b07      	ldr	r3, [pc, #28]	; (8010090 <fmc_bank1_state_get+0x20>)
 8010072:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010074:	07d1      	lsls	r1, r2, #31
 8010076:	d407      	bmi.n	8010088 <fmc_bank1_state_get+0x18>
 8010078:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801007a:	06d2      	lsls	r2, r2, #27
 801007c:	d406      	bmi.n	801008c <fmc_bank1_state_get+0x1c>
 801007e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010080:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8010084:	0040      	lsls	r0, r0, #1
 8010086:	4770      	bx	lr
 8010088:	2001      	movs	r0, #1
 801008a:	4770      	bx	lr
 801008c:	2003      	movs	r0, #3
 801008e:	4770      	bx	lr
 8010090:	40022000 	andmi	r2, r2, r0

08010094 <fwdgt_enable>:
 8010094:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8010098:	4b01      	ldr	r3, [pc, #4]	; (80100a0 <fwdgt_enable+0xc>)
 801009a:	601a      	str	r2, [r3, #0]
 801009c:	4770      	bx	lr
 801009e:	bf00      	nop
 80100a0:	40003000 	andmi	r3, r0, r0

080100a4 <fwdgt_counter_reload>:
 80100a4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80100a8:	4b01      	ldr	r3, [pc, #4]	; (80100b0 <fwdgt_counter_reload+0xc>)
 80100aa:	601a      	str	r2, [r3, #0]
 80100ac:	4770      	bx	lr
 80100ae:	bf00      	nop
 80100b0:	40003000 	andmi	r3, r0, r0

080100b4 <fwdgt_config>:
 80100b4:	f245 5355 	movw	r3, #21845	; 0x5555
 80100b8:	4a11      	ldr	r2, [pc, #68]	; (8010100 <fwdgt_config+0x4c>)
 80100ba:	b510      	push	{r4, lr}
 80100bc:	4c11      	ldr	r4, [pc, #68]	; (8010104 <fwdgt_config+0x50>)
 80100be:	6013      	str	r3, [r2, #0]
 80100c0:	68d3      	ldr	r3, [r2, #12]
 80100c2:	3c01      	subs	r4, #1
 80100c4:	f003 0301 	and.w	r3, r3, #1
 80100c8:	d013      	beq.n	80100f2 <fwdgt_config+0x3e>
 80100ca:	2b00      	cmp	r3, #0
 80100cc:	d1f8      	bne.n	80100c0 <fwdgt_config+0xc>
 80100ce:	6051      	str	r1, [r2, #4]
 80100d0:	490c      	ldr	r1, [pc, #48]	; (8010104 <fwdgt_config+0x50>)
 80100d2:	4a0b      	ldr	r2, [pc, #44]	; (8010100 <fwdgt_config+0x4c>)
 80100d4:	68d3      	ldr	r3, [r2, #12]
 80100d6:	3901      	subs	r1, #1
 80100d8:	f003 0302 	and.w	r3, r3, #2
 80100dc:	d00d      	beq.n	80100fa <fwdgt_config+0x46>
 80100de:	2b00      	cmp	r3, #0
 80100e0:	d1f8      	bne.n	80100d4 <fwdgt_config+0x20>
 80100e2:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80100e6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80100ea:	6090      	str	r0, [r2, #8]
 80100ec:	2001      	movs	r0, #1
 80100ee:	6013      	str	r3, [r2, #0]
 80100f0:	e002      	b.n	80100f8 <fwdgt_config+0x44>
 80100f2:	2b00      	cmp	r3, #0
 80100f4:	d0eb      	beq.n	80100ce <fwdgt_config+0x1a>
 80100f6:	2000      	movs	r0, #0
 80100f8:	bd10      	pop	{r4, pc}
 80100fa:	2b00      	cmp	r3, #0
 80100fc:	d1fb      	bne.n	80100f6 <fwdgt_config+0x42>
 80100fe:	e7f0      	b.n	80100e2 <fwdgt_config+0x2e>
 8010100:	40003000 	andmi	r3, r0, r0
 8010104:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08010108 <gpio_init>:
 8010108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801010c:	f04f 0c0f 	mov.w	ip, #15
 8010110:	06cf      	lsls	r7, r1, #27
 8010112:	f04f 0400 	mov.w	r4, #0
 8010116:	f04f 0701 	mov.w	r7, #1
 801011a:	f001 050f 	and.w	r5, r1, #15
 801011e:	bf48      	it	mi
 8010120:	4315      	orrmi	r5, r2
 8010122:	fa23 f204 	lsr.w	r2, r3, r4
 8010126:	07d6      	lsls	r6, r2, #31
 8010128:	d510      	bpl.n	801014c <gpio_init+0x44>
 801012a:	00a2      	lsls	r2, r4, #2
 801012c:	6806      	ldr	r6, [r0, #0]
 801012e:	fa0c fe02 	lsl.w	lr, ip, r2
 8010132:	ea26 060e 	bic.w	r6, r6, lr
 8010136:	fa05 f202 	lsl.w	r2, r5, r2
 801013a:	2928      	cmp	r1, #40	; 0x28
 801013c:	ea42 0206 	orr.w	r2, r2, r6
 8010140:	d128      	bne.n	8010194 <gpio_init+0x8c>
 8010142:	fa07 f604 	lsl.w	r6, r7, r4
 8010146:	401e      	ands	r6, r3
 8010148:	6146      	str	r6, [r0, #20]
 801014a:	6002      	str	r2, [r0, #0]
 801014c:	3401      	adds	r4, #1
 801014e:	2c08      	cmp	r4, #8
 8010150:	d1e7      	bne.n	8010122 <gpio_init+0x1a>
 8010152:	2600      	movs	r6, #0
 8010154:	f04f 0c0f 	mov.w	ip, #15
 8010158:	2701      	movs	r7, #1
 801015a:	f106 0208 	add.w	r2, r6, #8
 801015e:	fa23 f402 	lsr.w	r4, r3, r2
 8010162:	07e4      	lsls	r4, r4, #31
 8010164:	d511      	bpl.n	801018a <gpio_init+0x82>
 8010166:	00b4      	lsls	r4, r6, #2
 8010168:	f8d0 e004 	ldr.w	lr, [r0, #4]
 801016c:	fa0c f804 	lsl.w	r8, ip, r4
 8010170:	ea2e 0e08 	bic.w	lr, lr, r8
 8010174:	fa05 f404 	lsl.w	r4, r5, r4
 8010178:	2928      	cmp	r1, #40	; 0x28
 801017a:	ea44 040e 	orr.w	r4, r4, lr
 801017e:	d110      	bne.n	80101a2 <gpio_init+0x9a>
 8010180:	fa07 f202 	lsl.w	r2, r7, r2
 8010184:	401a      	ands	r2, r3
 8010186:	6142      	str	r2, [r0, #20]
 8010188:	6044      	str	r4, [r0, #4]
 801018a:	3601      	adds	r6, #1
 801018c:	2e08      	cmp	r6, #8
 801018e:	d1e4      	bne.n	801015a <gpio_init+0x52>
 8010190:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010194:	2948      	cmp	r1, #72	; 0x48
 8010196:	bf02      	ittt	eq
 8010198:	fa07 f604 	lsleq.w	r6, r7, r4
 801019c:	401e      	andeq	r6, r3
 801019e:	6106      	streq	r6, [r0, #16]
 80101a0:	e7d3      	b.n	801014a <gpio_init+0x42>
 80101a2:	2948      	cmp	r1, #72	; 0x48
 80101a4:	bf02      	ittt	eq
 80101a6:	fa07 f202 	lsleq.w	r2, r7, r2
 80101aa:	401a      	andeq	r2, r3
 80101ac:	6102      	streq	r2, [r0, #16]
 80101ae:	e7eb      	b.n	8010188 <gpio_init+0x80>

080101b0 <gpio_pin_remap_config>:
 80101b0:	2800      	cmp	r0, #0
 80101b2:	4a16      	ldr	r2, [pc, #88]	; (801020c <gpio_pin_remap_config+0x5c>)
 80101b4:	b530      	push	{r4, r5, lr}
 80101b6:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80101ba:	bfb4      	ite	lt
 80101bc:	69d3      	ldrlt	r3, [r2, #28]
 80101be:	6853      	ldrge	r3, [r2, #4]
 80101c0:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80101c4:	b284      	uxth	r4, r0
 80101c6:	d110      	bne.n	80101ea <gpio_pin_remap_config+0x3a>
 80101c8:	6855      	ldr	r5, [r2, #4]
 80101ca:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80101ce:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80101d2:	6055      	str	r5, [r2, #4]
 80101d4:	b119      	cbz	r1, 80101de <gpio_pin_remap_config+0x2e>
 80101d6:	0d42      	lsrs	r2, r0, #21
 80101d8:	0112      	lsls	r2, r2, #4
 80101da:	4094      	lsls	r4, r2
 80101dc:	4323      	orrs	r3, r4
 80101de:	4a0b      	ldr	r2, [pc, #44]	; (801020c <gpio_pin_remap_config+0x5c>)
 80101e0:	2800      	cmp	r0, #0
 80101e2:	bfb4      	ite	lt
 80101e4:	61d3      	strlt	r3, [r2, #28]
 80101e6:	6053      	strge	r3, [r2, #4]
 80101e8:	bd30      	pop	{r4, r5, pc}
 80101ea:	02c2      	lsls	r2, r0, #11
 80101ec:	bf4d      	iteet	mi
 80101ee:	2203      	movmi	r2, #3
 80101f0:	0d42      	lsrpl	r2, r0, #21
 80101f2:	0112      	lslpl	r2, r2, #4
 80101f4:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80101f8:	bf4c      	ite	mi
 80101fa:	40aa      	lslmi	r2, r5
 80101fc:	fa04 f202 	lslpl.w	r2, r4, r2
 8010200:	ea23 0302 	bic.w	r3, r3, r2
 8010204:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8010208:	e7e4      	b.n	80101d4 <gpio_pin_remap_config+0x24>
 801020a:	bf00      	nop
 801020c:	40010000 	andmi	r0, r1, r0

08010210 <gpio_ethernet_phy_select>:
 8010210:	4b04      	ldr	r3, [pc, #16]	; (8010224 <gpio_ethernet_phy_select+0x14>)
 8010212:	685a      	ldr	r2, [r3, #4]
 8010214:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8010218:	605a      	str	r2, [r3, #4]
 801021a:	685a      	ldr	r2, [r3, #4]
 801021c:	4302      	orrs	r2, r0
 801021e:	605a      	str	r2, [r3, #4]
 8010220:	4770      	bx	lr
 8010222:	bf00      	nop
 8010224:	40010000 	andmi	r0, r1, r0

08010228 <pmu_backup_write_enable>:
 8010228:	4a02      	ldr	r2, [pc, #8]	; (8010234 <pmu_backup_write_enable+0xc>)
 801022a:	6813      	ldr	r3, [r2, #0]
 801022c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010230:	6013      	str	r3, [r2, #0]
 8010232:	4770      	bx	lr
 8010234:	40007000 	andmi	r7, r0, r0

08010238 <rcu_periph_clock_enable>:
 8010238:	2201      	movs	r2, #1
 801023a:	0983      	lsrs	r3, r0, #6
 801023c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010240:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010244:	6819      	ldr	r1, [r3, #0]
 8010246:	f000 001f 	and.w	r0, r0, #31
 801024a:	4082      	lsls	r2, r0
 801024c:	430a      	orrs	r2, r1
 801024e:	601a      	str	r2, [r3, #0]
 8010250:	4770      	bx	lr

08010252 <rcu_periph_clock_disable>:
 8010252:	2101      	movs	r1, #1
 8010254:	0983      	lsrs	r3, r0, #6
 8010256:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801025a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801025e:	681a      	ldr	r2, [r3, #0]
 8010260:	f000 001f 	and.w	r0, r0, #31
 8010264:	4081      	lsls	r1, r0
 8010266:	ea22 0201 	bic.w	r2, r2, r1
 801026a:	601a      	str	r2, [r3, #0]
 801026c:	4770      	bx	lr

0801026e <rcu_periph_reset_enable>:
 801026e:	f7ff bfe3 	b.w	8010238 <rcu_periph_clock_enable>

08010272 <rcu_periph_reset_disable>:
 8010272:	f7ff bfee 	b.w	8010252 <rcu_periph_clock_disable>
	...

08010278 <rcu_bkp_reset_enable>:
 8010278:	4a02      	ldr	r2, [pc, #8]	; (8010284 <rcu_bkp_reset_enable+0xc>)
 801027a:	6a13      	ldr	r3, [r2, #32]
 801027c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8010280:	6213      	str	r3, [r2, #32]
 8010282:	4770      	bx	lr
 8010284:	40021000 	andmi	r1, r2, r0

08010288 <rcu_bkp_reset_disable>:
 8010288:	4a02      	ldr	r2, [pc, #8]	; (8010294 <rcu_bkp_reset_disable+0xc>)
 801028a:	6a13      	ldr	r3, [r2, #32]
 801028c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8010290:	6213      	str	r3, [r2, #32]
 8010292:	4770      	bx	lr
 8010294:	40021000 	andmi	r1, r2, r0

08010298 <rcu_ckout0_config>:
 8010298:	4a03      	ldr	r2, [pc, #12]	; (80102a8 <rcu_ckout0_config+0x10>)
 801029a:	6853      	ldr	r3, [r2, #4]
 801029c:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80102a0:	4303      	orrs	r3, r0
 80102a2:	6053      	str	r3, [r2, #4]
 80102a4:	4770      	bx	lr
 80102a6:	bf00      	nop
 80102a8:	40021000 	andmi	r1, r2, r0

080102ac <rcu_pll2_config>:
 80102ac:	4b04      	ldr	r3, [pc, #16]	; (80102c0 <rcu_pll2_config+0x14>)
 80102ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80102b0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80102b4:	62da      	str	r2, [r3, #44]	; 0x2c
 80102b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80102b8:	4302      	orrs	r2, r0
 80102ba:	62da      	str	r2, [r3, #44]	; 0x2c
 80102bc:	4770      	bx	lr
 80102be:	bf00      	nop
 80102c0:	40021000 	andmi	r1, r2, r0

080102c4 <rcu_adc_clock_config>:
 80102c4:	490c      	ldr	r1, [pc, #48]	; (80102f8 <rcu_adc_clock_config+0x34>)
 80102c6:	2805      	cmp	r0, #5
 80102c8:	684b      	ldr	r3, [r1, #4]
 80102ca:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80102ce:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80102d2:	d006      	beq.n	80102e2 <rcu_adc_clock_config+0x1e>
 80102d4:	d803      	bhi.n	80102de <rcu_adc_clock_config+0x1a>
 80102d6:	2804      	cmp	r0, #4
 80102d8:	d10a      	bne.n	80102f0 <rcu_adc_clock_config+0x2c>
 80102da:	604b      	str	r3, [r1, #4]
 80102dc:	4770      	bx	lr
 80102de:	2807      	cmp	r0, #7
 80102e0:	d1fb      	bne.n	80102da <rcu_adc_clock_config+0x16>
 80102e2:	4a06      	ldr	r2, [pc, #24]	; (80102fc <rcu_adc_clock_config+0x38>)
 80102e4:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 80102e8:	4313      	orrs	r3, r2
 80102ea:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80102ee:	e7f4      	b.n	80102da <rcu_adc_clock_config+0x16>
 80102f0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 80102f4:	e7f1      	b.n	80102da <rcu_adc_clock_config+0x16>
 80102f6:	bf00      	nop
 80102f8:	40021000 	andmi	r1, r2, r0
 80102fc:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08010300 <rcu_flag_get>:
 8010300:	0983      	lsrs	r3, r0, #6
 8010302:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010306:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801030a:	681a      	ldr	r2, [r3, #0]
 801030c:	2301      	movs	r3, #1
 801030e:	f000 001f 	and.w	r0, r0, #31
 8010312:	4083      	lsls	r3, r0
 8010314:	4213      	tst	r3, r2
 8010316:	bf14      	ite	ne
 8010318:	2001      	movne	r0, #1
 801031a:	2000      	moveq	r0, #0
 801031c:	4770      	bx	lr
	...

08010320 <rcu_osci_stab_wait>:
 8010320:	281a      	cmp	r0, #26
 8010322:	b508      	push	{r3, lr}
 8010324:	d051      	beq.n	80103ca <rcu_osci_stab_wait+0xaa>
 8010326:	d806      	bhi.n	8010336 <rcu_osci_stab_wait+0x16>
 8010328:	2810      	cmp	r0, #16
 801032a:	d015      	beq.n	8010358 <rcu_osci_stab_wait+0x38>
 801032c:	2818      	cmp	r0, #24
 801032e:	d043      	beq.n	80103b8 <rcu_osci_stab_wait+0x98>
 8010330:	b368      	cbz	r0, 801038e <rcu_osci_stab_wait+0x6e>
 8010332:	2000      	movs	r0, #0
 8010334:	bd08      	pop	{r3, pc}
 8010336:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 801033a:	d01c      	beq.n	8010376 <rcu_osci_stab_wait+0x56>
 801033c:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8010340:	d02f      	beq.n	80103a2 <rcu_osci_stab_wait+0x82>
 8010342:	281c      	cmp	r0, #28
 8010344:	d1f5      	bne.n	8010332 <rcu_osci_stab_wait+0x12>
 8010346:	4925      	ldr	r1, [pc, #148]	; (80103dc <rcu_osci_stab_wait+0xbc>)
 8010348:	201d      	movs	r0, #29
 801034a:	f7ff ffd9 	bl	8010300 <rcu_flag_get>
 801034e:	b908      	cbnz	r0, 8010354 <rcu_osci_stab_wait+0x34>
 8010350:	3901      	subs	r1, #1
 8010352:	d1f9      	bne.n	8010348 <rcu_osci_stab_wait+0x28>
 8010354:	201d      	movs	r0, #29
 8010356:	e008      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 8010358:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801035c:	2011      	movs	r0, #17
 801035e:	f7ff ffcf 	bl	8010300 <rcu_flag_get>
 8010362:	b908      	cbnz	r0, 8010368 <rcu_osci_stab_wait+0x48>
 8010364:	3901      	subs	r1, #1
 8010366:	d1f9      	bne.n	801035c <rcu_osci_stab_wait+0x3c>
 8010368:	2011      	movs	r0, #17
 801036a:	f7ff ffc9 	bl	8010300 <rcu_flag_get>
 801036e:	3800      	subs	r0, #0
 8010370:	bf18      	it	ne
 8010372:	2001      	movne	r0, #1
 8010374:	e7de      	b.n	8010334 <rcu_osci_stab_wait+0x14>
 8010376:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 801037a:	f640 0001 	movw	r0, #2049	; 0x801
 801037e:	f7ff ffbf 	bl	8010300 <rcu_flag_get>
 8010382:	b908      	cbnz	r0, 8010388 <rcu_osci_stab_wait+0x68>
 8010384:	3901      	subs	r1, #1
 8010386:	d1f8      	bne.n	801037a <rcu_osci_stab_wait+0x5a>
 8010388:	f640 0001 	movw	r0, #2049	; 0x801
 801038c:	e7ed      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 801038e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010392:	2001      	movs	r0, #1
 8010394:	f7ff ffb4 	bl	8010300 <rcu_flag_get>
 8010398:	b908      	cbnz	r0, 801039e <rcu_osci_stab_wait+0x7e>
 801039a:	3901      	subs	r1, #1
 801039c:	d1f9      	bne.n	8010392 <rcu_osci_stab_wait+0x72>
 801039e:	2001      	movs	r0, #1
 80103a0:	e7e3      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 80103a2:	490e      	ldr	r1, [pc, #56]	; (80103dc <rcu_osci_stab_wait+0xbc>)
 80103a4:	f640 1001 	movw	r0, #2305	; 0x901
 80103a8:	f7ff ffaa 	bl	8010300 <rcu_flag_get>
 80103ac:	b908      	cbnz	r0, 80103b2 <rcu_osci_stab_wait+0x92>
 80103ae:	3901      	subs	r1, #1
 80103b0:	d1f8      	bne.n	80103a4 <rcu_osci_stab_wait+0x84>
 80103b2:	f640 1001 	movw	r0, #2305	; 0x901
 80103b6:	e7d8      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 80103b8:	4908      	ldr	r1, [pc, #32]	; (80103dc <rcu_osci_stab_wait+0xbc>)
 80103ba:	2019      	movs	r0, #25
 80103bc:	f7ff ffa0 	bl	8010300 <rcu_flag_get>
 80103c0:	b908      	cbnz	r0, 80103c6 <rcu_osci_stab_wait+0xa6>
 80103c2:	3901      	subs	r1, #1
 80103c4:	d1f9      	bne.n	80103ba <rcu_osci_stab_wait+0x9a>
 80103c6:	2019      	movs	r0, #25
 80103c8:	e7cf      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 80103ca:	4904      	ldr	r1, [pc, #16]	; (80103dc <rcu_osci_stab_wait+0xbc>)
 80103cc:	201b      	movs	r0, #27
 80103ce:	f7ff ff97 	bl	8010300 <rcu_flag_get>
 80103d2:	b908      	cbnz	r0, 80103d8 <rcu_osci_stab_wait+0xb8>
 80103d4:	3901      	subs	r1, #1
 80103d6:	d1f9      	bne.n	80103cc <rcu_osci_stab_wait+0xac>
 80103d8:	201b      	movs	r0, #27
 80103da:	e7c6      	b.n	801036a <rcu_osci_stab_wait+0x4a>
 80103dc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080103e0 <rcu_osci_on>:
 80103e0:	f7ff bf2a 	b.w	8010238 <rcu_periph_clock_enable>

080103e4 <rcu_clock_freq_get>:
 80103e4:	4b3e      	ldr	r3, [pc, #248]	; (80104e0 <rcu_clock_freq_get+0xfc>)
 80103e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103e8:	4604      	mov	r4, r0
 80103ea:	461f      	mov	r7, r3
 80103ec:	b089      	sub	sp, #36	; 0x24
 80103ee:	ad04      	add	r5, sp, #16
 80103f0:	f103 0610 	add.w	r6, r3, #16
 80103f4:	462a      	mov	r2, r5
 80103f6:	6818      	ldr	r0, [r3, #0]
 80103f8:	6859      	ldr	r1, [r3, #4]
 80103fa:	3308      	adds	r3, #8
 80103fc:	c203      	stmia	r2!, {r0, r1}
 80103fe:	42b3      	cmp	r3, r6
 8010400:	4615      	mov	r5, r2
 8010402:	d1f7      	bne.n	80103f4 <rcu_clock_freq_get+0x10>
 8010404:	466b      	mov	r3, sp
 8010406:	6938      	ldr	r0, [r7, #16]
 8010408:	6871      	ldr	r1, [r6, #4]
 801040a:	4a36      	ldr	r2, [pc, #216]	; (80104e4 <rcu_clock_freq_get+0x100>)
 801040c:	c303      	stmia	r3!, {r0, r1}
 801040e:	c303      	stmia	r3!, {r0, r1}
 8010410:	6853      	ldr	r3, [r2, #4]
 8010412:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010416:	2b01      	cmp	r3, #1
 8010418:	d053      	beq.n	80104c2 <rcu_clock_freq_get+0xde>
 801041a:	2b02      	cmp	r3, #2
 801041c:	d153      	bne.n	80104c6 <rcu_clock_freq_get+0xe2>
 801041e:	6853      	ldr	r3, [r2, #4]
 8010420:	03dd      	lsls	r5, r3, #15
 8010422:	d523      	bpl.n	801046c <rcu_clock_freq_get+0x88>
 8010424:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8010426:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 801042a:	4b2f      	ldr	r3, [pc, #188]	; (80104e8 <rcu_clock_freq_get+0x104>)
 801042c:	d00e      	beq.n	801044c <rcu_clock_freq_get+0x68>
 801042e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8010430:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8010432:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8010436:	f3c0 2003 	ubfx	r0, r0, #8, #4
 801043a:	3101      	adds	r1, #1
 801043c:	280f      	cmp	r0, #15
 801043e:	f100 0502 	add.w	r5, r0, #2
 8010442:	fbb3 f3f1 	udiv	r3, r3, r1
 8010446:	bf08      	it	eq
 8010448:	2514      	moveq	r5, #20
 801044a:	436b      	muls	r3, r5
 801044c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801044e:	f001 010f 	and.w	r1, r1, #15
 8010452:	3101      	adds	r1, #1
 8010454:	fbb3 f3f1 	udiv	r3, r3, r1
 8010458:	6851      	ldr	r1, [r2, #4]
 801045a:	6850      	ldr	r0, [r2, #4]
 801045c:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8010460:	0080      	lsls	r0, r0, #2
 8010462:	d505      	bpl.n	8010470 <rcu_clock_freq_get+0x8c>
 8010464:	f041 0110 	orr.w	r1, r1, #16
 8010468:	1c48      	adds	r0, r1, #1
 801046a:	e007      	b.n	801047c <rcu_clock_freq_get+0x98>
 801046c:	4b1f      	ldr	r3, [pc, #124]	; (80104ec <rcu_clock_freq_get+0x108>)
 801046e:	e7f3      	b.n	8010458 <rcu_clock_freq_get+0x74>
 8010470:	290f      	cmp	r1, #15
 8010472:	d0f9      	beq.n	8010468 <rcu_clock_freq_get+0x84>
 8010474:	290d      	cmp	r1, #13
 8010476:	f101 0002 	add.w	r0, r1, #2
 801047a:	d01d      	beq.n	80104b8 <rcu_clock_freq_get+0xd4>
 801047c:	4358      	muls	r0, r3
 801047e:	6853      	ldr	r3, [r2, #4]
 8010480:	6851      	ldr	r1, [r2, #4]
 8010482:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8010486:	6852      	ldr	r2, [r2, #4]
 8010488:	3320      	adds	r3, #32
 801048a:	446b      	add	r3, sp
 801048c:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8010490:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8010494:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8010498:	3120      	adds	r1, #32
 801049a:	3220      	adds	r2, #32
 801049c:	4469      	add	r1, sp
 801049e:	446a      	add	r2, sp
 80104a0:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80104a4:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80104a8:	fa20 f303 	lsr.w	r3, r0, r3
 80104ac:	2c03      	cmp	r4, #3
 80104ae:	d815      	bhi.n	80104dc <rcu_clock_freq_get+0xf8>
 80104b0:	e8df f004 	tbb	[pc, r4]
 80104b4:	110e0b0c 	tstne	lr, ip, lsl #22
 80104b8:	2006      	movs	r0, #6
 80104ba:	0859      	lsrs	r1, r3, #1
 80104bc:	fb00 1003 	mla	r0, r0, r3, r1
 80104c0:	e7dd      	b.n	801047e <rcu_clock_freq_get+0x9a>
 80104c2:	4809      	ldr	r0, [pc, #36]	; (80104e8 <rcu_clock_freq_get+0x104>)
 80104c4:	e7db      	b.n	801047e <rcu_clock_freq_get+0x9a>
 80104c6:	480a      	ldr	r0, [pc, #40]	; (80104f0 <rcu_clock_freq_get+0x10c>)
 80104c8:	e7d9      	b.n	801047e <rcu_clock_freq_get+0x9a>
 80104ca:	4618      	mov	r0, r3
 80104cc:	b009      	add	sp, #36	; 0x24
 80104ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104d0:	fa23 f001 	lsr.w	r0, r3, r1
 80104d4:	e7fa      	b.n	80104cc <rcu_clock_freq_get+0xe8>
 80104d6:	fa23 f002 	lsr.w	r0, r3, r2
 80104da:	e7f7      	b.n	80104cc <rcu_clock_freq_get+0xe8>
 80104dc:	2000      	movs	r0, #0
 80104de:	e7f5      	b.n	80104cc <rcu_clock_freq_get+0xe8>
 80104e0:	08011d24 	stmdaeq	r1, {r2, r5, r8, sl, fp, ip}
 80104e4:	40021000 	andmi	r1, r2, r0
 80104e8:	017d7840 	cmneq	sp, r0, asr #16
 80104ec:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80104f0:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080104f4 <timer_deinit>:
 80104f4:	b508      	push	{r3, lr}
 80104f6:	4b2d      	ldr	r3, [pc, #180]	; (80105ac <timer_deinit+0xb8>)
 80104f8:	4298      	cmp	r0, r3
 80104fa:	d048      	beq.n	801058e <timer_deinit+0x9a>
 80104fc:	d816      	bhi.n	801052c <timer_deinit+0x38>
 80104fe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010502:	4298      	cmp	r0, r3
 8010504:	d03c      	beq.n	8010580 <timer_deinit+0x8c>
 8010506:	d807      	bhi.n	8010518 <timer_deinit+0x24>
 8010508:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801050c:	d02a      	beq.n	8010564 <timer_deinit+0x70>
 801050e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8010512:	4298      	cmp	r0, r3
 8010514:	d02d      	beq.n	8010572 <timer_deinit+0x7e>
 8010516:	bd08      	pop	{r3, pc}
 8010518:	4b25      	ldr	r3, [pc, #148]	; (80105b0 <timer_deinit+0xbc>)
 801051a:	4298      	cmp	r0, r3
 801051c:	d1fb      	bne.n	8010516 <timer_deinit+0x22>
 801051e:	f240 4003 	movw	r0, #1027	; 0x403
 8010522:	f7ff fea4 	bl	801026e <rcu_periph_reset_enable>
 8010526:	f240 4003 	movw	r0, #1027	; 0x403
 801052a:	e017      	b.n	801055c <timer_deinit+0x68>
 801052c:	4b21      	ldr	r3, [pc, #132]	; (80105b4 <timer_deinit+0xc0>)
 801052e:	4298      	cmp	r0, r3
 8010530:	d00e      	beq.n	8010550 <timer_deinit+0x5c>
 8010532:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8010536:	4298      	cmp	r0, r3
 8010538:	d030      	beq.n	801059c <timer_deinit+0xa8>
 801053a:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 801053e:	4298      	cmp	r0, r3
 8010540:	d1e9      	bne.n	8010516 <timer_deinit+0x22>
 8010542:	f240 4005 	movw	r0, #1029	; 0x405
 8010546:	f7ff fe92 	bl	801026e <rcu_periph_reset_enable>
 801054a:	f240 4005 	movw	r0, #1029	; 0x405
 801054e:	e005      	b.n	801055c <timer_deinit+0x68>
 8010550:	f240 300b 	movw	r0, #779	; 0x30b
 8010554:	f7ff fe8b 	bl	801026e <rcu_periph_reset_enable>
 8010558:	f240 300b 	movw	r0, #779	; 0x30b
 801055c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010560:	f7ff be87 	b.w	8010272 <rcu_periph_reset_disable>
 8010564:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010568:	f7ff fe81 	bl	801026e <rcu_periph_reset_enable>
 801056c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010570:	e7f4      	b.n	801055c <timer_deinit+0x68>
 8010572:	f240 4001 	movw	r0, #1025	; 0x401
 8010576:	f7ff fe7a 	bl	801026e <rcu_periph_reset_enable>
 801057a:	f240 4001 	movw	r0, #1025	; 0x401
 801057e:	e7ed      	b.n	801055c <timer_deinit+0x68>
 8010580:	f240 4002 	movw	r0, #1026	; 0x402
 8010584:	f7ff fe73 	bl	801026e <rcu_periph_reset_enable>
 8010588:	f240 4002 	movw	r0, #1026	; 0x402
 801058c:	e7e6      	b.n	801055c <timer_deinit+0x68>
 801058e:	f240 4004 	movw	r0, #1028	; 0x404
 8010592:	f7ff fe6c 	bl	801026e <rcu_periph_reset_enable>
 8010596:	f240 4004 	movw	r0, #1028	; 0x404
 801059a:	e7df      	b.n	801055c <timer_deinit+0x68>
 801059c:	f240 300d 	movw	r0, #781	; 0x30d
 80105a0:	f7ff fe65 	bl	801026e <rcu_periph_reset_enable>
 80105a4:	f240 300d 	movw	r0, #781	; 0x30d
 80105a8:	e7d8      	b.n	801055c <timer_deinit+0x68>
 80105aa:	bf00      	nop
 80105ac:	40001000 	andmi	r1, r0, r0
 80105b0:	40000c00 	andmi	r0, r0, r0, lsl #24
 80105b4:	40012c00 	andmi	r2, r1, r0, lsl #24

080105b8 <timer_init>:
 80105b8:	880b      	ldrh	r3, [r1, #0]
 80105ba:	6283      	str	r3, [r0, #40]	; 0x28
 80105bc:	4b26      	ldr	r3, [pc, #152]	; (8010658 <timer_init+0xa0>)
 80105be:	4298      	cmp	r0, r3
 80105c0:	d018      	beq.n	80105f4 <timer_init+0x3c>
 80105c2:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 80105c6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80105ca:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 80105ce:	d011      	beq.n	80105f4 <timer_init+0x3c>
 80105d0:	4a22      	ldr	r2, [pc, #136]	; (801065c <timer_init+0xa4>)
 80105d2:	4290      	cmp	r0, r2
 80105d4:	d00e      	beq.n	80105f4 <timer_init+0x3c>
 80105d6:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80105da:	4290      	cmp	r0, r2
 80105dc:	d00a      	beq.n	80105f4 <timer_init+0x3c>
 80105de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80105e2:	4293      	cmp	r3, r2
 80105e4:	d006      	beq.n	80105f4 <timer_init+0x3c>
 80105e6:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80105ea:	4293      	cmp	r3, r2
 80105ec:	d002      	beq.n	80105f4 <timer_init+0x3c>
 80105ee:	4b1c      	ldr	r3, [pc, #112]	; (8010660 <timer_init+0xa8>)
 80105f0:	4298      	cmp	r0, r3
 80105f2:	d10f      	bne.n	8010614 <timer_init+0x5c>
 80105f4:	6803      	ldr	r3, [r0, #0]
 80105f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80105fa:	6003      	str	r3, [r0, #0]
 80105fc:	884b      	ldrh	r3, [r1, #2]
 80105fe:	6802      	ldr	r2, [r0, #0]
 8010600:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010604:	4313      	orrs	r3, r2
 8010606:	6003      	str	r3, [r0, #0]
 8010608:	888b      	ldrh	r3, [r1, #4]
 801060a:	6802      	ldr	r2, [r0, #0]
 801060c:	f003 0310 	and.w	r3, r3, #16
 8010610:	4313      	orrs	r3, r2
 8010612:	6003      	str	r3, [r0, #0]
 8010614:	688b      	ldr	r3, [r1, #8]
 8010616:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010618:	4b12      	ldr	r3, [pc, #72]	; (8010664 <timer_init+0xac>)
 801061a:	4298      	cmp	r0, r3
 801061c:	d003      	beq.n	8010626 <timer_init+0x6e>
 801061e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010622:	4298      	cmp	r0, r3
 8010624:	d104      	bne.n	8010630 <timer_init+0x78>
 8010626:	6943      	ldr	r3, [r0, #20]
 8010628:	f043 0301 	orr.w	r3, r3, #1
 801062c:	6143      	str	r3, [r0, #20]
 801062e:	4770      	bx	lr
 8010630:	6803      	ldr	r3, [r0, #0]
 8010632:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8010636:	6003      	str	r3, [r0, #0]
 8010638:	898b      	ldrh	r3, [r1, #12]
 801063a:	6802      	ldr	r2, [r0, #0]
 801063c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8010640:	4313      	orrs	r3, r2
 8010642:	6003      	str	r3, [r0, #0]
 8010644:	4b04      	ldr	r3, [pc, #16]	; (8010658 <timer_init+0xa0>)
 8010646:	4298      	cmp	r0, r3
 8010648:	d002      	beq.n	8010650 <timer_init+0x98>
 801064a:	4b04      	ldr	r3, [pc, #16]	; (801065c <timer_init+0xa4>)
 801064c:	4298      	cmp	r0, r3
 801064e:	d1ea      	bne.n	8010626 <timer_init+0x6e>
 8010650:	7b8b      	ldrb	r3, [r1, #14]
 8010652:	6303      	str	r3, [r0, #48]	; 0x30
 8010654:	e7e7      	b.n	8010626 <timer_init+0x6e>
 8010656:	bf00      	nop
 8010658:	40012c00 	andmi	r2, r1, r0, lsl #24
 801065c:	40013400 	andmi	r3, r1, r0, lsl #8
 8010660:	40002000 	andmi	r2, r0, r0
 8010664:	40001000 	andmi	r1, r0, r0

08010668 <timer_enable>:
 8010668:	6803      	ldr	r3, [r0, #0]
 801066a:	f043 0301 	orr.w	r3, r3, #1
 801066e:	6003      	str	r3, [r0, #0]
 8010670:	4770      	bx	lr

08010672 <timer_channel_output_mode_config>:
 8010672:	2903      	cmp	r1, #3
 8010674:	d81a      	bhi.n	80106ac <timer_channel_output_mode_config+0x3a>
 8010676:	e8df f001 	tbb	[pc, r1]
 801067a:	1a120a02 	bne	8492e8a <__exidx_end+0x47f2d2>
 801067e:	6983      	ldr	r3, [r0, #24]
 8010680:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8010684:	6183      	str	r3, [r0, #24]
 8010686:	6983      	ldr	r3, [r0, #24]
 8010688:	4313      	orrs	r3, r2
 801068a:	6183      	str	r3, [r0, #24]
 801068c:	4770      	bx	lr
 801068e:	6983      	ldr	r3, [r0, #24]
 8010690:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010694:	6183      	str	r3, [r0, #24]
 8010696:	6983      	ldr	r3, [r0, #24]
 8010698:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801069c:	e7f5      	b.n	801068a <timer_channel_output_mode_config+0x18>
 801069e:	69c3      	ldr	r3, [r0, #28]
 80106a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80106a4:	61c3      	str	r3, [r0, #28]
 80106a6:	69c3      	ldr	r3, [r0, #28]
 80106a8:	4313      	orrs	r3, r2
 80106aa:	61c3      	str	r3, [r0, #28]
 80106ac:	4770      	bx	lr
 80106ae:	69c3      	ldr	r3, [r0, #28]
 80106b0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80106b4:	61c3      	str	r3, [r0, #28]
 80106b6:	69c3      	ldr	r3, [r0, #28]
 80106b8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80106bc:	e7f5      	b.n	80106aa <timer_channel_output_mode_config+0x38>

080106be <timer_channel_output_pulse_value_config>:
 80106be:	2903      	cmp	r1, #3
 80106c0:	d80a      	bhi.n	80106d8 <timer_channel_output_pulse_value_config+0x1a>
 80106c2:	e8df f001 	tbb	[pc, r1]
 80106c6:	08060402 	stmdaeq	r6, {r1, sl}
 80106ca:	6342      	str	r2, [r0, #52]	; 0x34
 80106cc:	4770      	bx	lr
 80106ce:	6382      	str	r2, [r0, #56]	; 0x38
 80106d0:	4770      	bx	lr
 80106d2:	63c2      	str	r2, [r0, #60]	; 0x3c
 80106d4:	4770      	bx	lr
 80106d6:	6402      	str	r2, [r0, #64]	; 0x40
 80106d8:	4770      	bx	lr

080106da <timer_interrupt_enable>:
 80106da:	68c3      	ldr	r3, [r0, #12]
 80106dc:	430b      	orrs	r3, r1
 80106de:	60c3      	str	r3, [r0, #12]
 80106e0:	4770      	bx	lr

080106e2 <timer_interrupt_flag_clear>:
 80106e2:	43c9      	mvns	r1, r1
 80106e4:	6101      	str	r1, [r0, #16]
 80106e6:	4770      	bx	lr

080106e8 <timer_flag_clear>:
 80106e8:	43c9      	mvns	r1, r1
 80106ea:	6101      	str	r1, [r0, #16]
 80106ec:	4770      	bx	lr
	...

080106f0 <usart_deinit>:
 80106f0:	b508      	push	{r3, lr}
 80106f2:	4b1d      	ldr	r3, [pc, #116]	; (8010768 <usart_deinit+0x78>)
 80106f4:	4298      	cmp	r0, r3
 80106f6:	d028      	beq.n	801074a <usart_deinit+0x5a>
 80106f8:	d808      	bhi.n	801070c <usart_deinit+0x1c>
 80106fa:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80106fe:	4298      	cmp	r0, r3
 8010700:	d015      	beq.n	801072e <usart_deinit+0x3e>
 8010702:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010706:	4298      	cmp	r0, r3
 8010708:	d018      	beq.n	801073c <usart_deinit+0x4c>
 801070a:	bd08      	pop	{r3, pc}
 801070c:	4b17      	ldr	r3, [pc, #92]	; (801076c <usart_deinit+0x7c>)
 801070e:	4298      	cmp	r0, r3
 8010710:	d022      	beq.n	8010758 <usart_deinit+0x68>
 8010712:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8010716:	4298      	cmp	r0, r3
 8010718:	d1f7      	bne.n	801070a <usart_deinit+0x1a>
 801071a:	f240 300e 	movw	r0, #782	; 0x30e
 801071e:	f7ff fda6 	bl	801026e <rcu_periph_reset_enable>
 8010722:	f240 300e 	movw	r0, #782	; 0x30e
 8010726:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801072a:	f7ff bda2 	b.w	8010272 <rcu_periph_reset_disable>
 801072e:	f240 4011 	movw	r0, #1041	; 0x411
 8010732:	f7ff fd9c 	bl	801026e <rcu_periph_reset_enable>
 8010736:	f240 4011 	movw	r0, #1041	; 0x411
 801073a:	e7f4      	b.n	8010726 <usart_deinit+0x36>
 801073c:	f240 4012 	movw	r0, #1042	; 0x412
 8010740:	f7ff fd95 	bl	801026e <rcu_periph_reset_enable>
 8010744:	f240 4012 	movw	r0, #1042	; 0x412
 8010748:	e7ed      	b.n	8010726 <usart_deinit+0x36>
 801074a:	f240 4013 	movw	r0, #1043	; 0x413
 801074e:	f7ff fd8e 	bl	801026e <rcu_periph_reset_enable>
 8010752:	f240 4013 	movw	r0, #1043	; 0x413
 8010756:	e7e6      	b.n	8010726 <usart_deinit+0x36>
 8010758:	f240 4014 	movw	r0, #1044	; 0x414
 801075c:	f7ff fd87 	bl	801026e <rcu_periph_reset_enable>
 8010760:	f240 4014 	movw	r0, #1044	; 0x414
 8010764:	e7df      	b.n	8010726 <usart_deinit+0x36>
 8010766:	bf00      	nop
 8010768:	40004c00 	andmi	r4, r0, r0, lsl #24
 801076c:	40005000 	andmi	r5, r0, r0

08010770 <usart_baudrate_set>:
 8010770:	b538      	push	{r3, r4, r5, lr}
 8010772:	4b11      	ldr	r3, [pc, #68]	; (80107b8 <usart_baudrate_set+0x48>)
 8010774:	4604      	mov	r4, r0
 8010776:	4298      	cmp	r0, r3
 8010778:	460d      	mov	r5, r1
 801077a:	d01b      	beq.n	80107b4 <usart_baudrate_set+0x44>
 801077c:	d809      	bhi.n	8010792 <usart_baudrate_set+0x22>
 801077e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010782:	4298      	cmp	r0, r3
 8010784:	d016      	beq.n	80107b4 <usart_baudrate_set+0x44>
 8010786:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801078a:	4298      	cmp	r0, r3
 801078c:	d012      	beq.n	80107b4 <usart_baudrate_set+0x44>
 801078e:	2000      	movs	r0, #0
 8010790:	e009      	b.n	80107a6 <usart_baudrate_set+0x36>
 8010792:	4b0a      	ldr	r3, [pc, #40]	; (80107bc <usart_baudrate_set+0x4c>)
 8010794:	4298      	cmp	r0, r3
 8010796:	d00d      	beq.n	80107b4 <usart_baudrate_set+0x44>
 8010798:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 801079c:	4298      	cmp	r0, r3
 801079e:	d1f6      	bne.n	801078e <usart_baudrate_set+0x1e>
 80107a0:	2003      	movs	r0, #3
 80107a2:	f7ff fe1f 	bl	80103e4 <rcu_clock_freq_get>
 80107a6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80107aa:	fbb1 f1f5 	udiv	r1, r1, r5
 80107ae:	b289      	uxth	r1, r1
 80107b0:	60a1      	str	r1, [r4, #8]
 80107b2:	bd38      	pop	{r3, r4, r5, pc}
 80107b4:	2002      	movs	r0, #2
 80107b6:	e7f4      	b.n	80107a2 <usart_baudrate_set+0x32>
 80107b8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80107bc:	40005000 	andmi	r5, r0, r0

080107c0 <usart_parity_config>:
 80107c0:	68c3      	ldr	r3, [r0, #12]
 80107c2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80107c6:	60c3      	str	r3, [r0, #12]
 80107c8:	68c3      	ldr	r3, [r0, #12]
 80107ca:	430b      	orrs	r3, r1
 80107cc:	60c3      	str	r3, [r0, #12]
 80107ce:	4770      	bx	lr

080107d0 <usart_word_length_set>:
 80107d0:	68c3      	ldr	r3, [r0, #12]
 80107d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80107d6:	60c3      	str	r3, [r0, #12]
 80107d8:	68c3      	ldr	r3, [r0, #12]
 80107da:	430b      	orrs	r3, r1
 80107dc:	60c3      	str	r3, [r0, #12]
 80107de:	4770      	bx	lr

080107e0 <usart_stop_bit_set>:
 80107e0:	6903      	ldr	r3, [r0, #16]
 80107e2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80107e6:	6103      	str	r3, [r0, #16]
 80107e8:	6903      	ldr	r3, [r0, #16]
 80107ea:	430b      	orrs	r3, r1
 80107ec:	6103      	str	r3, [r0, #16]
 80107ee:	4770      	bx	lr

080107f0 <usart_transmit_config>:
 80107f0:	68c3      	ldr	r3, [r0, #12]
 80107f2:	f023 0308 	bic.w	r3, r3, #8
 80107f6:	430b      	orrs	r3, r1
 80107f8:	60c3      	str	r3, [r0, #12]
 80107fa:	4770      	bx	lr

080107fc <usart_receive_config>:
 80107fc:	68c3      	ldr	r3, [r0, #12]
 80107fe:	f023 0304 	bic.w	r3, r3, #4
 8010802:	430b      	orrs	r3, r1
 8010804:	60c3      	str	r3, [r0, #12]
 8010806:	4770      	bx	lr

08010808 <usart_hardware_flow_rts_config>:
 8010808:	6943      	ldr	r3, [r0, #20]
 801080a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801080e:	430b      	orrs	r3, r1
 8010810:	6143      	str	r3, [r0, #20]
 8010812:	4770      	bx	lr

08010814 <usart_hardware_flow_cts_config>:
 8010814:	6943      	ldr	r3, [r0, #20]
 8010816:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801081a:	430b      	orrs	r3, r1
 801081c:	6143      	str	r3, [r0, #20]
 801081e:	4770      	bx	lr

08010820 <usart_dma_transmit_config>:
 8010820:	6943      	ldr	r3, [r0, #20]
 8010822:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8010826:	430b      	orrs	r3, r1
 8010828:	6143      	str	r3, [r0, #20]
 801082a:	4770      	bx	lr

0801082c <usart_flag_get>:
 801082c:	098b      	lsrs	r3, r1, #6
 801082e:	581a      	ldr	r2, [r3, r0]
 8010830:	2301      	movs	r3, #1
 8010832:	f001 011f 	and.w	r1, r1, #31
 8010836:	408b      	lsls	r3, r1
 8010838:	4213      	tst	r3, r2
 801083a:	bf14      	ite	ne
 801083c:	2001      	movne	r0, #1
 801083e:	2000      	moveq	r0, #0
 8010840:	4770      	bx	lr

08010842 <usart_interrupt_enable>:
 8010842:	2301      	movs	r3, #1
 8010844:	b510      	push	{r4, lr}
 8010846:	f3c1 1289 	ubfx	r2, r1, #6, #10
 801084a:	5814      	ldr	r4, [r2, r0]
 801084c:	f001 011f 	and.w	r1, r1, #31
 8010850:	408b      	lsls	r3, r1
 8010852:	4323      	orrs	r3, r4
 8010854:	5013      	str	r3, [r2, r0]
 8010856:	bd10      	pop	{r4, pc}

08010858 <usart_interrupt_disable>:
 8010858:	2201      	movs	r2, #1
 801085a:	b510      	push	{r4, lr}
 801085c:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8010860:	5823      	ldr	r3, [r4, r0]
 8010862:	f001 011f 	and.w	r1, r1, #31
 8010866:	408a      	lsls	r2, r1
 8010868:	ea23 0302 	bic.w	r3, r3, r2
 801086c:	5023      	str	r3, [r4, r0]
 801086e:	bd10      	pop	{r4, pc}

08010870 <usart_interrupt_flag_clear>:
 8010870:	2201      	movs	r2, #1
 8010872:	b510      	push	{r4, lr}
 8010874:	0d8c      	lsrs	r4, r1, #22
 8010876:	5823      	ldr	r3, [r4, r0]
 8010878:	f3c1 4104 	ubfx	r1, r1, #16, #5
 801087c:	408a      	lsls	r2, r1
 801087e:	ea23 0302 	bic.w	r3, r3, r2
 8010882:	5023      	str	r3, [r4, r0]
 8010884:	bd10      	pop	{r4, pc}
	...

08010888 <emac_start>:
 8010888:	b510      	push	{r4, lr}
 801088a:	4604      	mov	r4, r0
 801088c:	f240 6002 	movw	r0, #1538	; 0x602
 8010890:	f7ff fcd2 	bl	8010238 <rcu_periph_clock_enable>
 8010894:	f240 6003 	movw	r0, #1539	; 0x603
 8010898:	f7ff fcce 	bl	8010238 <rcu_periph_clock_enable>
 801089c:	f240 6004 	movw	r0, #1540	; 0x604
 80108a0:	f7ff fcca 	bl	8010238 <rcu_periph_clock_enable>
 80108a4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80108a8:	2203      	movs	r2, #3
 80108aa:	2118      	movs	r1, #24
 80108ac:	4846      	ldr	r0, [pc, #280]	; (80109c8 <emac_start+0x140>)
 80108ae:	f7ff fc2b 	bl	8010108 <gpio_init>
 80108b2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80108b6:	f7ff fcbf 	bl	8010238 <rcu_periph_clock_enable>
 80108ba:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80108be:	f7ff fcf5 	bl	80102ac <rcu_pll2_config>
 80108c2:	201c      	movs	r0, #28
 80108c4:	f7ff fd8c 	bl	80103e0 <rcu_osci_on>
 80108c8:	201c      	movs	r0, #28
 80108ca:	f7ff fd29 	bl	8010320 <rcu_osci_stab_wait>
 80108ce:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 80108d2:	f7ff fce1 	bl	8010298 <rcu_ckout0_config>
 80108d6:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80108da:	f7ff fc99 	bl	8010210 <gpio_ethernet_phy_select>
 80108de:	2302      	movs	r3, #2
 80108e0:	2203      	movs	r2, #3
 80108e2:	2104      	movs	r1, #4
 80108e4:	4838      	ldr	r0, [pc, #224]	; (80109c8 <emac_start+0x140>)
 80108e6:	f7ff fc0f 	bl	8010108 <gpio_init>
 80108ea:	2304      	movs	r3, #4
 80108ec:	2203      	movs	r2, #3
 80108ee:	2118      	movs	r1, #24
 80108f0:	4835      	ldr	r0, [pc, #212]	; (80109c8 <emac_start+0x140>)
 80108f2:	f7ff fc09 	bl	8010108 <gpio_init>
 80108f6:	2380      	movs	r3, #128	; 0x80
 80108f8:	2203      	movs	r2, #3
 80108fa:	2104      	movs	r1, #4
 80108fc:	4832      	ldr	r0, [pc, #200]	; (80109c8 <emac_start+0x140>)
 80108fe:	f7ff fc03 	bl	8010108 <gpio_init>
 8010902:	2302      	movs	r3, #2
 8010904:	2203      	movs	r2, #3
 8010906:	2118      	movs	r1, #24
 8010908:	4830      	ldr	r0, [pc, #192]	; (80109cc <emac_start+0x144>)
 801090a:	f7ff fbfd 	bl	8010108 <gpio_init>
 801090e:	2310      	movs	r3, #16
 8010910:	2203      	movs	r2, #3
 8010912:	2104      	movs	r1, #4
 8010914:	482d      	ldr	r0, [pc, #180]	; (80109cc <emac_start+0x144>)
 8010916:	f7ff fbf7 	bl	8010108 <gpio_init>
 801091a:	2320      	movs	r3, #32
 801091c:	2203      	movs	r2, #3
 801091e:	2104      	movs	r1, #4
 8010920:	482a      	ldr	r0, [pc, #168]	; (80109cc <emac_start+0x144>)
 8010922:	f7ff fbf1 	bl	8010108 <gpio_init>
 8010926:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801092a:	2203      	movs	r2, #3
 801092c:	2118      	movs	r1, #24
 801092e:	4828      	ldr	r0, [pc, #160]	; (80109d0 <emac_start+0x148>)
 8010930:	f7ff fbea 	bl	8010108 <gpio_init>
 8010934:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010938:	2203      	movs	r2, #3
 801093a:	2118      	movs	r1, #24
 801093c:	4824      	ldr	r0, [pc, #144]	; (80109d0 <emac_start+0x148>)
 801093e:	f7ff fbe3 	bl	8010108 <gpio_init>
 8010942:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010946:	2203      	movs	r2, #3
 8010948:	2118      	movs	r1, #24
 801094a:	4821      	ldr	r0, [pc, #132]	; (80109d0 <emac_start+0x148>)
 801094c:	f7ff fbdc 	bl	8010108 <gpio_init>
 8010950:	f240 500e 	movw	r0, #1294	; 0x50e
 8010954:	f7ff fc70 	bl	8010238 <rcu_periph_clock_enable>
 8010958:	f240 500f 	movw	r0, #1295	; 0x50f
 801095c:	f7ff fc6c 	bl	8010238 <rcu_periph_clock_enable>
 8010960:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8010964:	f7ff fc68 	bl	8010238 <rcu_periph_clock_enable>
 8010968:	f000 ffa6 	bl	80118b8 <enet_deinit>
 801096c:	f000 fc04 	bl	8011178 <enet_software_reset>
 8010970:	b900      	cbnz	r0, 8010974 <emac_start+0xec>
 8010972:	e7fe      	b.n	8010972 <emac_start+0xea>
 8010974:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8010978:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801097c:	2001      	movs	r0, #1
 801097e:	f000 fd7f 	bl	8011480 <enet_init>
 8010982:	4b14      	ldr	r3, [pc, #80]	; (80109d4 <emac_start+0x14c>)
 8010984:	6018      	str	r0, [r3, #0]
 8010986:	681b      	ldr	r3, [r3, #0]
 8010988:	b903      	cbnz	r3, 801098c <emac_start+0x104>
 801098a:	e7fe      	b.n	801098a <emac_start+0x102>
 801098c:	4620      	mov	r0, r4
 801098e:	f000 faed 	bl	8010f6c <mac_address_get>
 8010992:	4621      	mov	r1, r4
 8010994:	2000      	movs	r0, #0
 8010996:	f000 fcd3 	bl	8011340 <enet_mac_address_set>
 801099a:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 801099e:	f000 fbff 	bl	80111a0 <enet_descriptors_chain_init>
 80109a2:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80109a6:	f000 fbfb 	bl	80111a0 <enet_descriptors_chain_init>
 80109aa:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80109ae:	480a      	ldr	r0, [pc, #40]	; (80109d8 <emac_start+0x150>)
 80109b0:	f000 fcc0 	bl	8011334 <enet_transmit_checksum_config>
 80109b4:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80109b8:	4808      	ldr	r0, [pc, #32]	; (80109dc <emac_start+0x154>)
 80109ba:	f000 fcbb 	bl	8011334 <enet_transmit_checksum_config>
 80109be:	f000 fef3 	bl	80117a8 <enet_enable>
 80109c2:	2001      	movs	r0, #1
 80109c4:	bd10      	pop	{r4, pc}
 80109c6:	bf00      	nop
 80109c8:	40010800 	andmi	r0, r1, r0, lsl #16
 80109cc:	40011000 	andmi	r1, r1, r0
 80109d0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80109d4:	20009be0 	andcs	r9, r0, r0, ror #23
 80109d8:	2000d83c 	andcs	sp, r0, ip, lsr r8
 80109dc:	2000d84c 	andcs	sp, r0, ip, asr #16

080109e0 <emac_eth_recv>:
 80109e0:	b538      	push	{r3, r4, r5, lr}
 80109e2:	4605      	mov	r5, r0
 80109e4:	f000 ff38 	bl	8011858 <enet_rxframe_size_get>
 80109e8:	4604      	mov	r4, r0
 80109ea:	b138      	cbz	r0, 80109fc <emac_eth_recv+0x1c>
 80109ec:	4b05      	ldr	r3, [pc, #20]	; (8010a04 <emac_eth_recv+0x24>)
 80109ee:	2105      	movs	r1, #5
 80109f0:	6818      	ldr	r0, [r3, #0]
 80109f2:	f000 fee0 	bl	80117b6 <enet_desc_information_get>
 80109f6:	6028      	str	r0, [r5, #0]
 80109f8:	4620      	mov	r0, r4
 80109fa:	bd38      	pop	{r3, r4, r5, pc}
 80109fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010a00:	e7fb      	b.n	80109fa <emac_eth_recv+0x1a>
 8010a02:	bf00      	nop
 8010a04:	20009bf0 	strdcs	r9, [r0], -r0

08010a08 <emac_free_pkt>:
 8010a08:	2100      	movs	r1, #0
 8010a0a:	4608      	mov	r0, r1
 8010a0c:	f000 bc10 	b.w	8011230 <enet_frame_receive>

08010a10 <emac_eth_send>:
 8010a10:	f000 bc4e 	b.w	80112b0 <enet_frame_transmit>

08010a14 <gd32_adc_init()>:
 8010a14:	b510      	push	{r4, lr}
 8010a16:	f240 6009 	movw	r0, #1545	; 0x609
 8010a1a:	4c21      	ldr	r4, [pc, #132]	; (8010aa0 <gd32_adc_init()+0x8c>)
 8010a1c:	f7ff fc0c 	bl	8010238 <rcu_periph_clock_enable>
 8010a20:	2005      	movs	r0, #5
 8010a22:	f7ff fc4f 	bl	80102c4 <rcu_adc_clock_config>
 8010a26:	4620      	mov	r0, r4
 8010a28:	2201      	movs	r2, #1
 8010a2a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010a2e:	f000 fabf 	bl	8010fb0 <adc_special_function_config>
 8010a32:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8010a36:	4620      	mov	r0, r4
 8010a38:	2102      	movs	r1, #2
 8010a3a:	f000 fb58 	bl	80110ee <adc_external_trigger_source_config>
 8010a3e:	2100      	movs	r1, #0
 8010a40:	4620      	mov	r0, r4
 8010a42:	f000 fadd 	bl	8011000 <adc_data_alignment_config>
 8010a46:	2000      	movs	r0, #0
 8010a48:	f000 faa2 	bl	8010f90 <adc_mode_config>
 8010a4c:	2202      	movs	r2, #2
 8010a4e:	4620      	mov	r0, r4
 8010a50:	4611      	mov	r1, r2
 8010a52:	f000 fb01 	bl	8011058 <adc_channel_length_config>
 8010a56:	4620      	mov	r0, r4
 8010a58:	2307      	movs	r3, #7
 8010a5a:	2210      	movs	r2, #16
 8010a5c:	2100      	movs	r1, #0
 8010a5e:	f000 fb18 	bl	8011092 <adc_inserted_channel_config>
 8010a62:	2307      	movs	r3, #7
 8010a64:	4620      	mov	r0, r4
 8010a66:	2211      	movs	r2, #17
 8010a68:	2101      	movs	r1, #1
 8010a6a:	f000 fb12 	bl	8011092 <adc_inserted_channel_config>
 8010a6e:	2201      	movs	r2, #1
 8010a70:	2102      	movs	r1, #2
 8010a72:	4620      	mov	r0, r4
 8010a74:	f000 fb4c 	bl	8011110 <adc_external_trigger_config>
 8010a78:	f000 fae4 	bl	8011044 <adc_tempsensor_vrefint_enable>
 8010a7c:	4620      	mov	r0, r4
 8010a7e:	f000 fac8 	bl	8011012 <adc_enable>
 8010a82:	2100      	movs	r1, #0
 8010a84:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8010a88:	f000 fa58 	bl	8010f3c <udelay(unsigned int, unsigned int)>
 8010a8c:	4620      	mov	r0, r4
 8010a8e:	f000 fac8 	bl	8011022 <adc_calibration_enable>
 8010a92:	4620      	mov	r0, r4
 8010a94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a98:	2102      	movs	r1, #2
 8010a9a:	f000 bb54 	b.w	8011146 <adc_software_trigger_enable>
 8010a9e:	bf00      	nop
 8010aa0:	40012400 	andmi	r2, r1, r0, lsl #8

08010aa4 <_stop() [clone .isra.0]>:
 8010aa4:	b508      	push	{r3, lr}
 8010aa6:	4806      	ldr	r0, [pc, #24]	; (8010ac0 <_stop() [clone .isra.0]+0x1c>)
 8010aa8:	f000 ff9a 	bl	80119e0 <i2c_stop_on_bus>
 8010aac:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010ab0:	4904      	ldr	r1, [pc, #16]	; (8010ac4 <_stop() [clone .isra.0]+0x20>)
 8010ab2:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8010ab6:	0592      	lsls	r2, r2, #22
 8010ab8:	d501      	bpl.n	8010abe <_stop() [clone .isra.0]+0x1a>
 8010aba:	3b01      	subs	r3, #1
 8010abc:	d1f9      	bne.n	8010ab2 <_stop() [clone .isra.0]+0xe>
 8010abe:	bd08      	pop	{r3, pc}
 8010ac0:	40005400 	andmi	r5, r0, r0, lsl #8
 8010ac4:	40005000 	andmi	r5, r0, r0

08010ac8 <gd32_i2c_begin()>:
 8010ac8:	b510      	push	{r4, lr}
 8010aca:	f240 7015 	movw	r0, #1813	; 0x715
 8010ace:	f7ff fbb3 	bl	8010238 <rcu_periph_clock_enable>
 8010ad2:	4c15      	ldr	r4, [pc, #84]	; (8010b28 <gd32_i2c_begin()+0x60>)
 8010ad4:	f240 6003 	movw	r0, #1539	; 0x603
 8010ad8:	f7ff fbae 	bl	8010238 <rcu_periph_clock_enable>
 8010adc:	f240 6003 	movw	r0, #1539	; 0x603
 8010ae0:	f7ff fbaa 	bl	8010238 <rcu_periph_clock_enable>
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010aea:	2203      	movs	r2, #3
 8010aec:	211c      	movs	r1, #28
 8010aee:	f7ff fb0b 	bl	8010108 <gpio_init>
 8010af2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010af6:	2203      	movs	r2, #3
 8010af8:	4620      	mov	r0, r4
 8010afa:	211c      	movs	r1, #28
 8010afc:	f7ff fb04 	bl	8010108 <gpio_init>
 8010b00:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8010b04:	2101      	movs	r1, #1
 8010b06:	2002      	movs	r0, #2
 8010b08:	f7ff fb52 	bl	80101b0 <gpio_pin_remap_config>
 8010b0c:	4620      	mov	r0, r4
 8010b0e:	4907      	ldr	r1, [pc, #28]	; (8010b2c <gd32_i2c_begin()+0x64>)
 8010b10:	2200      	movs	r2, #0
 8010b12:	f000 fedf 	bl	80118d4 <i2c_clock_config>
 8010b16:	4620      	mov	r0, r4
 8010b18:	f000 ff58 	bl	80119cc <i2c_enable>
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b22:	2101      	movs	r1, #1
 8010b24:	f000 bf38 	b.w	8011998 <i2c_ack_config>
 8010b28:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010b2c:	00061a80 	andeq	r1, r6, r0, lsl #21

08010b30 <gd32_i2c_set_baudrate(unsigned int)>:
 8010b30:	4601      	mov	r1, r0
 8010b32:	2200      	movs	r2, #0
 8010b34:	4801      	ldr	r0, [pc, #4]	; (8010b3c <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8010b36:	f000 becd 	b.w	80118d4 <i2c_clock_config>
 8010b3a:	bf00      	nop
 8010b3c:	40005400 	andmi	r5, r0, r0, lsl #8

08010b40 <gd32_i2c_set_address(unsigned char)>:
 8010b40:	4b01      	ldr	r3, [pc, #4]	; (8010b48 <gd32_i2c_set_address(unsigned char)+0x8>)
 8010b42:	0040      	lsls	r0, r0, #1
 8010b44:	7018      	strb	r0, [r3, #0]
 8010b46:	4770      	bx	lr
 8010b48:	20009be4 	andcs	r9, r0, r4, ror #23

08010b4c <gd32_i2c_write(char const*, unsigned int)>:
 8010b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010b4e:	4604      	mov	r4, r0
 8010b50:	460f      	mov	r7, r1
 8010b52:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010b56:	4e2e      	ldr	r6, [pc, #184]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010b58:	f240 6101 	movw	r1, #1537	; 0x601
 8010b5c:	4630      	mov	r0, r6
 8010b5e:	f000 ff49 	bl	80119f4 <i2c_flag_get>
 8010b62:	b9b0      	cbnz	r0, 8010b92 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8010b64:	482a      	ldr	r0, [pc, #168]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010b66:	f000 ff36 	bl	80119d6 <i2c_start_on_bus>
 8010b6a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010b6e:	4e28      	ldr	r6, [pc, #160]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010b70:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010b74:	4630      	mov	r0, r6
 8010b76:	f000 ff3d 	bl	80119f4 <i2c_flag_get>
 8010b7a:	b190      	cbz	r0, 8010ba2 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8010b7c:	4b25      	ldr	r3, [pc, #148]	; (8010c14 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8010b7e:	f06f 0201 	mvn.w	r2, #1
 8010b82:	7819      	ldrb	r1, [r3, #0]
 8010b84:	4822      	ldr	r0, [pc, #136]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010b86:	f000 ff19 	bl	80119bc <i2c_master_addressing>
 8010b8a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010b8e:	4e20      	ldr	r6, [pc, #128]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010b90:	e00c      	b.n	8010bac <gd32_i2c_write(char const*, unsigned int)+0x60>
 8010b92:	3d01      	subs	r5, #1
 8010b94:	d1e0      	bne.n	8010b58 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8010b96:	f7ff ff85 	bl	8010aa4 <_stop() [clone .isra.0]>
 8010b9a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010b9e:	4240      	negs	r0, r0
 8010ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010ba2:	3d01      	subs	r5, #1
 8010ba4:	d1e4      	bne.n	8010b70 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8010ba6:	e7f6      	b.n	8010b96 <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8010ba8:	3d01      	subs	r5, #1
 8010baa:	d0f4      	beq.n	8010b96 <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8010bac:	f240 5101 	movw	r1, #1281	; 0x501
 8010bb0:	4630      	mov	r0, r6
 8010bb2:	f000 ff1f 	bl	80119f4 <i2c_flag_get>
 8010bb6:	2800      	cmp	r0, #0
 8010bb8:	d0f6      	beq.n	8010ba8 <gd32_i2c_write(char const*, unsigned int)+0x5c>
 8010bba:	f240 5101 	movw	r1, #1281	; 0x501
 8010bbe:	4814      	ldr	r0, [pc, #80]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010bc0:	f000 ff23 	bl	8011a0a <i2c_flag_clear>
 8010bc4:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010bc8:	4e11      	ldr	r6, [pc, #68]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010bca:	f240 5107 	movw	r1, #1287	; 0x507
 8010bce:	4630      	mov	r0, r6
 8010bd0:	f000 ff10 	bl	80119f4 <i2c_flag_get>
 8010bd4:	2801      	cmp	r0, #1
 8010bd6:	d107      	bne.n	8010be8 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8010bd8:	4e0d      	ldr	r6, [pc, #52]	; (8010c10 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010bda:	4427      	add	r7, r4
 8010bdc:	42a7      	cmp	r7, r4
 8010bde:	d106      	bne.n	8010bee <gd32_i2c_write(char const*, unsigned int)+0xa2>
 8010be0:	f7ff ff60 	bl	8010aa4 <_stop() [clone .isra.0]>
 8010be4:	2000      	movs	r0, #0
 8010be6:	e7da      	b.n	8010b9e <gd32_i2c_write(char const*, unsigned int)+0x52>
 8010be8:	3d01      	subs	r5, #1
 8010bea:	d1ee      	bne.n	8010bca <gd32_i2c_write(char const*, unsigned int)+0x7e>
 8010bec:	e7d3      	b.n	8010b96 <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8010bee:	4630      	mov	r0, r6
 8010bf0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010bf4:	f000 fef9 	bl	80119ea <i2c_data_transmit>
 8010bf8:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010bfc:	f240 5102 	movw	r1, #1282	; 0x502
 8010c00:	4630      	mov	r0, r6
 8010c02:	f000 fef7 	bl	80119f4 <i2c_flag_get>
 8010c06:	2800      	cmp	r0, #0
 8010c08:	d1e8      	bne.n	8010bdc <gd32_i2c_write(char const*, unsigned int)+0x90>
 8010c0a:	3d01      	subs	r5, #1
 8010c0c:	d1f6      	bne.n	8010bfc <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8010c0e:	e7c2      	b.n	8010b96 <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8010c10:	40005400 	andmi	r5, r0, r0, lsl #8
 8010c14:	20009be4 	andcs	r9, r0, r4, ror #23

08010c18 <gd32_i2c_read(char*, unsigned int)>:
 8010c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c1c:	4680      	mov	r8, r0
 8010c1e:	460c      	mov	r4, r1
 8010c20:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010c24:	4f4b      	ldr	r7, [pc, #300]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c26:	f240 6101 	movw	r1, #1537	; 0x601
 8010c2a:	4638      	mov	r0, r7
 8010c2c:	f000 fee2 	bl	80119f4 <i2c_flag_get>
 8010c30:	4605      	mov	r5, r0
 8010c32:	bb08      	cbnz	r0, 8010c78 <gd32_i2c_read(char*, unsigned int)+0x60>
 8010c34:	2c02      	cmp	r4, #2
 8010c36:	d103      	bne.n	8010c40 <gd32_i2c_read(char*, unsigned int)+0x28>
 8010c38:	4601      	mov	r1, r0
 8010c3a:	4846      	ldr	r0, [pc, #280]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c3c:	f000 feb5 	bl	80119aa <i2c_ackpos_config>
 8010c40:	4844      	ldr	r0, [pc, #272]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c42:	f000 fec8 	bl	80119d6 <i2c_start_on_bus>
 8010c46:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010c4a:	4f42      	ldr	r7, [pc, #264]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c4c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010c50:	4638      	mov	r0, r7
 8010c52:	f000 fecf 	bl	80119f4 <i2c_flag_get>
 8010c56:	b1a8      	cbz	r0, 8010c84 <gd32_i2c_read(char*, unsigned int)+0x6c>
 8010c58:	4b3f      	ldr	r3, [pc, #252]	; (8010d58 <gd32_i2c_read(char*, unsigned int)+0x140>)
 8010c5a:	2201      	movs	r2, #1
 8010c5c:	7819      	ldrb	r1, [r3, #0]
 8010c5e:	483d      	ldr	r0, [pc, #244]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c60:	f000 feac 	bl	80119bc <i2c_master_addressing>
 8010c64:	2c02      	cmp	r4, #2
 8010c66:	d803      	bhi.n	8010c70 <gd32_i2c_read(char*, unsigned int)+0x58>
 8010c68:	2100      	movs	r1, #0
 8010c6a:	483a      	ldr	r0, [pc, #232]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c6c:	f000 fe94 	bl	8011998 <i2c_ack_config>
 8010c70:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010c74:	4f37      	ldr	r7, [pc, #220]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010c76:	e00a      	b.n	8010c8e <gd32_i2c_read(char*, unsigned int)+0x76>
 8010c78:	3e01      	subs	r6, #1
 8010c7a:	d1d4      	bne.n	8010c26 <gd32_i2c_read(char*, unsigned int)+0xe>
 8010c7c:	f7ff ff12 	bl	8010aa4 <_stop() [clone .isra.0]>
 8010c80:	2504      	movs	r5, #4
 8010c82:	e04d      	b.n	8010d20 <gd32_i2c_read(char*, unsigned int)+0x108>
 8010c84:	3e01      	subs	r6, #1
 8010c86:	d1e1      	bne.n	8010c4c <gd32_i2c_read(char*, unsigned int)+0x34>
 8010c88:	e7f8      	b.n	8010c7c <gd32_i2c_read(char*, unsigned int)+0x64>
 8010c8a:	3e01      	subs	r6, #1
 8010c8c:	d0f6      	beq.n	8010c7c <gd32_i2c_read(char*, unsigned int)+0x64>
 8010c8e:	f240 5101 	movw	r1, #1281	; 0x501
 8010c92:	4638      	mov	r0, r7
 8010c94:	f000 feae 	bl	80119f4 <i2c_flag_get>
 8010c98:	2800      	cmp	r0, #0
 8010c9a:	d0f6      	beq.n	8010c8a <gd32_i2c_read(char*, unsigned int)+0x72>
 8010c9c:	f240 5101 	movw	r1, #1281	; 0x501
 8010ca0:	482c      	ldr	r0, [pc, #176]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010ca2:	f000 feb2 	bl	8011a0a <i2c_flag_clear>
 8010ca6:	2c01      	cmp	r4, #1
 8010ca8:	d102      	bne.n	8010cb0 <gd32_i2c_read(char*, unsigned int)+0x98>
 8010caa:	482a      	ldr	r0, [pc, #168]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010cac:	f000 fe98 	bl	80119e0 <i2c_stop_on_bus>
 8010cb0:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010cb4:	4e27      	ldr	r6, [pc, #156]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010cb6:	e022      	b.n	8010cfe <gd32_i2c_read(char*, unsigned int)+0xe6>
 8010cb8:	2c03      	cmp	r4, #3
 8010cba:	d134      	bne.n	8010d26 <gd32_i2c_read(char*, unsigned int)+0x10e>
 8010cbc:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010cc0:	e002      	b.n	8010cc8 <gd32_i2c_read(char*, unsigned int)+0xb0>
 8010cc2:	f1b9 0901 	subs.w	r9, r9, #1
 8010cc6:	d0d9      	beq.n	8010c7c <gd32_i2c_read(char*, unsigned int)+0x64>
 8010cc8:	f240 5102 	movw	r1, #1282	; 0x502
 8010ccc:	4630      	mov	r0, r6
 8010cce:	f000 fe91 	bl	80119f4 <i2c_flag_get>
 8010cd2:	2800      	cmp	r0, #0
 8010cd4:	d0f5      	beq.n	8010cc2 <gd32_i2c_read(char*, unsigned int)+0xaa>
 8010cd6:	2100      	movs	r1, #0
 8010cd8:	4630      	mov	r0, r6
 8010cda:	f000 fe5d 	bl	8011998 <i2c_ack_config>
 8010cde:	f240 5106 	movw	r1, #1286	; 0x506
 8010ce2:	4630      	mov	r0, r6
 8010ce4:	f000 fe86 	bl	80119f4 <i2c_flag_get>
 8010ce8:	b138      	cbz	r0, 8010cfa <gd32_i2c_read(char*, unsigned int)+0xe2>
 8010cea:	4630      	mov	r0, r6
 8010cec:	f000 fe7f 	bl	80119ee <i2c_data_receive>
 8010cf0:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010cf4:	f808 0b01 	strb.w	r0, [r8], #1
 8010cf8:	3c01      	subs	r4, #1
 8010cfa:	3f01      	subs	r7, #1
 8010cfc:	d0be      	beq.n	8010c7c <gd32_i2c_read(char*, unsigned int)+0x64>
 8010cfe:	2c00      	cmp	r4, #0
 8010d00:	d1da      	bne.n	8010cb8 <gd32_i2c_read(char*, unsigned int)+0xa0>
 8010d02:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010d06:	4915      	ldr	r1, [pc, #84]	; (8010d5c <gd32_i2c_read(char*, unsigned int)+0x144>)
 8010d08:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8010d0c:	0592      	lsls	r2, r2, #22
 8010d0e:	d41d      	bmi.n	8010d4c <gd32_i2c_read(char*, unsigned int)+0x134>
 8010d10:	2101      	movs	r1, #1
 8010d12:	4810      	ldr	r0, [pc, #64]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010d14:	f000 fe40 	bl	8011998 <i2c_ack_config>
 8010d18:	2101      	movs	r1, #1
 8010d1a:	480e      	ldr	r0, [pc, #56]	; (8010d54 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010d1c:	f000 fe45 	bl	80119aa <i2c_ackpos_config>
 8010d20:	4628      	mov	r0, r5
 8010d22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010d26:	2c02      	cmp	r4, #2
 8010d28:	d1d9      	bne.n	8010cde <gd32_i2c_read(char*, unsigned int)+0xc6>
 8010d2a:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010d2e:	e002      	b.n	8010d36 <gd32_i2c_read(char*, unsigned int)+0x11e>
 8010d30:	f1b9 0901 	subs.w	r9, r9, #1
 8010d34:	d0a2      	beq.n	8010c7c <gd32_i2c_read(char*, unsigned int)+0x64>
 8010d36:	f240 5102 	movw	r1, #1282	; 0x502
 8010d3a:	4630      	mov	r0, r6
 8010d3c:	f000 fe5a 	bl	80119f4 <i2c_flag_get>
 8010d40:	2800      	cmp	r0, #0
 8010d42:	d0f5      	beq.n	8010d30 <gd32_i2c_read(char*, unsigned int)+0x118>
 8010d44:	4630      	mov	r0, r6
 8010d46:	f000 fe4b 	bl	80119e0 <i2c_stop_on_bus>
 8010d4a:	e7c8      	b.n	8010cde <gd32_i2c_read(char*, unsigned int)+0xc6>
 8010d4c:	3b01      	subs	r3, #1
 8010d4e:	d1db      	bne.n	8010d08 <gd32_i2c_read(char*, unsigned int)+0xf0>
 8010d50:	e796      	b.n	8010c80 <gd32_i2c_read(char*, unsigned int)+0x68>
 8010d52:	bf00      	nop
 8010d54:	40005400 	andmi	r5, r0, r0, lsl #8
 8010d58:	20009be4 	andcs	r9, r0, r4, ror #23
 8010d5c:	40005000 	andmi	r5, r0, r0

08010d60 <gd32_uart_begin>:
 8010d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d62:	461e      	mov	r6, r3
 8010d64:	4b63      	ldr	r3, [pc, #396]	; (8010ef4 <gd32_uart_begin+0x194>)
 8010d66:	4604      	mov	r4, r0
 8010d68:	4298      	cmp	r0, r3
 8010d6a:	460f      	mov	r7, r1
 8010d6c:	4615      	mov	r5, r2
 8010d6e:	d03b      	beq.n	8010de8 <gd32_uart_begin+0x88>
 8010d70:	d80a      	bhi.n	8010d88 <gd32_uart_begin+0x28>
 8010d72:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010d76:	4298      	cmp	r0, r3
 8010d78:	d02f      	beq.n	8010dda <gd32_uart_begin+0x7a>
 8010d7a:	f240 7012 	movw	r0, #1810	; 0x712
 8010d7e:	f7ff fa5b 	bl	8010238 <rcu_periph_clock_enable>
 8010d82:	f240 6004 	movw	r0, #1540	; 0x604
 8010d86:	e008      	b.n	8010d9a <gd32_uart_begin+0x3a>
 8010d88:	4b5b      	ldr	r3, [pc, #364]	; (8010ef8 <gd32_uart_begin+0x198>)
 8010d8a:	4298      	cmp	r0, r3
 8010d8c:	d02f      	beq.n	8010dee <gd32_uart_begin+0x8e>
 8010d8e:	f240 600e 	movw	r0, #1550	; 0x60e
 8010d92:	f7ff fa51 	bl	8010238 <rcu_periph_clock_enable>
 8010d96:	f240 6003 	movw	r0, #1539	; 0x603
 8010d9a:	f7ff fa4d 	bl	8010238 <rcu_periph_clock_enable>
 8010d9e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010da2:	f7ff fa49 	bl	8010238 <rcu_periph_clock_enable>
 8010da6:	4b53      	ldr	r3, [pc, #332]	; (8010ef4 <gd32_uart_begin+0x194>)
 8010da8:	429c      	cmp	r4, r3
 8010daa:	f000 8084 	beq.w	8010eb6 <gd32_uart_begin+0x156>
 8010dae:	d829      	bhi.n	8010e04 <gd32_uart_begin+0xa4>
 8010db0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010db4:	429c      	cmp	r4, r3
 8010db6:	d071      	beq.n	8010e9c <gd32_uart_begin+0x13c>
 8010db8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010dbc:	2203      	movs	r2, #3
 8010dbe:	2118      	movs	r1, #24
 8010dc0:	484e      	ldr	r0, [pc, #312]	; (8010efc <gd32_uart_begin+0x19c>)
 8010dc2:	f7ff f9a1 	bl	8010108 <gpio_init>
 8010dc6:	2104      	movs	r1, #4
 8010dc8:	484c      	ldr	r0, [pc, #304]	; (8010efc <gd32_uart_begin+0x19c>)
 8010dca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010dce:	2203      	movs	r2, #3
 8010dd0:	f7ff f99a 	bl	8010108 <gpio_init>
 8010dd4:	2101      	movs	r1, #1
 8010dd6:	484a      	ldr	r0, [pc, #296]	; (8010f00 <gd32_uart_begin+0x1a0>)
 8010dd8:	e025      	b.n	8010e26 <gd32_uart_begin+0xc6>
 8010dda:	f240 7011 	movw	r0, #1809	; 0x711
 8010dde:	f7ff fa2b 	bl	8010238 <rcu_periph_clock_enable>
 8010de2:	f240 6002 	movw	r0, #1538	; 0x602
 8010de6:	e7d8      	b.n	8010d9a <gd32_uart_begin+0x3a>
 8010de8:	f240 7013 	movw	r0, #1811	; 0x713
 8010dec:	e7c7      	b.n	8010d7e <gd32_uart_begin+0x1e>
 8010dee:	f240 7014 	movw	r0, #1812	; 0x714
 8010df2:	f7ff fa21 	bl	8010238 <rcu_periph_clock_enable>
 8010df6:	f240 6004 	movw	r0, #1540	; 0x604
 8010dfa:	f7ff fa1d 	bl	8010238 <rcu_periph_clock_enable>
 8010dfe:	f240 6005 	movw	r0, #1541	; 0x605
 8010e02:	e7ca      	b.n	8010d9a <gd32_uart_begin+0x3a>
 8010e04:	4b3c      	ldr	r3, [pc, #240]	; (8010ef8 <gd32_uart_begin+0x198>)
 8010e06:	429c      	cmp	r4, r3
 8010e08:	d062      	beq.n	8010ed0 <gd32_uart_begin+0x170>
 8010e0a:	2340      	movs	r3, #64	; 0x40
 8010e0c:	2203      	movs	r2, #3
 8010e0e:	2118      	movs	r1, #24
 8010e10:	483c      	ldr	r0, [pc, #240]	; (8010f04 <gd32_uart_begin+0x1a4>)
 8010e12:	f7ff f979 	bl	8010108 <gpio_init>
 8010e16:	2104      	movs	r1, #4
 8010e18:	483a      	ldr	r0, [pc, #232]	; (8010f04 <gd32_uart_begin+0x1a4>)
 8010e1a:	2380      	movs	r3, #128	; 0x80
 8010e1c:	2203      	movs	r2, #3
 8010e1e:	f7ff f973 	bl	8010108 <gpio_init>
 8010e22:	2101      	movs	r1, #1
 8010e24:	2004      	movs	r0, #4
 8010e26:	f7ff f9c3 	bl	80101b0 <gpio_pin_remap_config>
 8010e2a:	4620      	mov	r0, r4
 8010e2c:	f7ff fc60 	bl	80106f0 <usart_deinit>
 8010e30:	68e3      	ldr	r3, [r4, #12]
 8010e32:	4639      	mov	r1, r7
 8010e34:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010e38:	4620      	mov	r0, r4
 8010e3a:	60e3      	str	r3, [r4, #12]
 8010e3c:	f7ff fc98 	bl	8010770 <usart_baudrate_set>
 8010e40:	f1a5 0309 	sub.w	r3, r5, #9
 8010e44:	4259      	negs	r1, r3
 8010e46:	4159      	adcs	r1, r3
 8010e48:	4620      	mov	r0, r4
 8010e4a:	0309      	lsls	r1, r1, #12
 8010e4c:	f7ff fcc0 	bl	80107d0 <usart_word_length_set>
 8010e50:	9906      	ldr	r1, [sp, #24]
 8010e52:	4620      	mov	r0, r4
 8010e54:	1e8a      	subs	r2, r1, #2
 8010e56:	4251      	negs	r1, r2
 8010e58:	4151      	adcs	r1, r2
 8010e5a:	0349      	lsls	r1, r1, #13
 8010e5c:	f7ff fcc0 	bl	80107e0 <usart_stop_bit_set>
 8010e60:	2e01      	cmp	r6, #1
 8010e62:	d041      	beq.n	8010ee8 <gd32_uart_begin+0x188>
 8010e64:	2e02      	cmp	r6, #2
 8010e66:	d142      	bne.n	8010eee <gd32_uart_begin+0x18e>
 8010e68:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010e6c:	4620      	mov	r0, r4
 8010e6e:	f7ff fca7 	bl	80107c0 <usart_parity_config>
 8010e72:	2100      	movs	r1, #0
 8010e74:	4620      	mov	r0, r4
 8010e76:	f7ff fcc7 	bl	8010808 <usart_hardware_flow_rts_config>
 8010e7a:	2100      	movs	r1, #0
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	f7ff fcc9 	bl	8010814 <usart_hardware_flow_cts_config>
 8010e82:	2104      	movs	r1, #4
 8010e84:	4620      	mov	r0, r4
 8010e86:	f7ff fcb9 	bl	80107fc <usart_receive_config>
 8010e8a:	2108      	movs	r1, #8
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	f7ff fcaf 	bl	80107f0 <usart_transmit_config>
 8010e92:	68e3      	ldr	r3, [r4, #12]
 8010e94:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010e98:	60e3      	str	r3, [r4, #12]
 8010e9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e9c:	2304      	movs	r3, #4
 8010e9e:	2203      	movs	r2, #3
 8010ea0:	2118      	movs	r1, #24
 8010ea2:	4819      	ldr	r0, [pc, #100]	; (8010f08 <gd32_uart_begin+0x1a8>)
 8010ea4:	f7ff f930 	bl	8010108 <gpio_init>
 8010ea8:	2308      	movs	r3, #8
 8010eaa:	2203      	movs	r2, #3
 8010eac:	2104      	movs	r1, #4
 8010eae:	4816      	ldr	r0, [pc, #88]	; (8010f08 <gd32_uart_begin+0x1a8>)
 8010eb0:	f7ff f92a 	bl	8010108 <gpio_init>
 8010eb4:	e7b9      	b.n	8010e2a <gd32_uart_begin+0xca>
 8010eb6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010eba:	2203      	movs	r2, #3
 8010ebc:	2118      	movs	r1, #24
 8010ebe:	480f      	ldr	r0, [pc, #60]	; (8010efc <gd32_uart_begin+0x19c>)
 8010ec0:	f7ff f922 	bl	8010108 <gpio_init>
 8010ec4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010ec8:	2203      	movs	r2, #3
 8010eca:	2104      	movs	r1, #4
 8010ecc:	480b      	ldr	r0, [pc, #44]	; (8010efc <gd32_uart_begin+0x19c>)
 8010ece:	e7ef      	b.n	8010eb0 <gd32_uart_begin+0x150>
 8010ed0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010ed4:	2203      	movs	r2, #3
 8010ed6:	2118      	movs	r1, #24
 8010ed8:	4808      	ldr	r0, [pc, #32]	; (8010efc <gd32_uart_begin+0x19c>)
 8010eda:	f7ff f915 	bl	8010108 <gpio_init>
 8010ede:	2304      	movs	r3, #4
 8010ee0:	2203      	movs	r2, #3
 8010ee2:	4619      	mov	r1, r3
 8010ee4:	4809      	ldr	r0, [pc, #36]	; (8010f0c <gd32_uart_begin+0x1ac>)
 8010ee6:	e7e3      	b.n	8010eb0 <gd32_uart_begin+0x150>
 8010ee8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8010eec:	e7be      	b.n	8010e6c <gd32_uart_begin+0x10c>
 8010eee:	2100      	movs	r1, #0
 8010ef0:	e7bc      	b.n	8010e6c <gd32_uart_begin+0x10c>
 8010ef2:	bf00      	nop
 8010ef4:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010ef8:	40005000 	andmi	r5, r0, r0
 8010efc:	40011000 	andmi	r1, r1, r0
 8010f00:	00140010 	andseq	r0, r4, r0, lsl r0
 8010f04:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010f08:	40010800 	andmi	r0, r1, r0, lsl #16
 8010f0c:	40011400 	andmi	r1, r1, r0, lsl #8

08010f10 <micros_init()>:
 8010f10:	4770      	bx	lr
	...

08010f14 <udelay_init()>:
 8010f14:	4a07      	ldr	r2, [pc, #28]	; (8010f34 <udelay_init()+0x20>)
 8010f16:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010f1a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010f1e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8010f22:	2200      	movs	r2, #0
 8010f24:	4b04      	ldr	r3, [pc, #16]	; (8010f38 <udelay_init()+0x24>)
 8010f26:	605a      	str	r2, [r3, #4]
 8010f28:	681a      	ldr	r2, [r3, #0]
 8010f2a:	f042 0201 	orr.w	r2, r2, #1
 8010f2e:	601a      	str	r2, [r3, #0]
 8010f30:	4770      	bx	lr
 8010f32:	bf00      	nop
 8010f34:	e000ed00 	and	lr, r0, r0, lsl #26
 8010f38:	e0001000 	and	r1, r0, r0

08010f3c <udelay(unsigned int, unsigned int)>:
 8010f3c:	236c      	movs	r3, #108	; 0x6c
 8010f3e:	b530      	push	{r4, r5, lr}
 8010f40:	4358      	muls	r0, r3
 8010f42:	b909      	cbnz	r1, 8010f48 <udelay(unsigned int, unsigned int)+0xc>
 8010f44:	4b08      	ldr	r3, [pc, #32]	; (8010f68 <udelay(unsigned int, unsigned int)+0x2c>)
 8010f46:	6859      	ldr	r1, [r3, #4]
 8010f48:	2300      	movs	r3, #0
 8010f4a:	4c07      	ldr	r4, [pc, #28]	; (8010f68 <udelay(unsigned int, unsigned int)+0x2c>)
 8010f4c:	6862      	ldr	r2, [r4, #4]
 8010f4e:	4291      	cmp	r1, r2
 8010f50:	d0fc      	beq.n	8010f4c <udelay(unsigned int, unsigned int)+0x10>
 8010f52:	bf2a      	itet	cs
 8010f54:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8010f58:	189b      	addcc	r3, r3, r2
 8010f5a:	195b      	addcs	r3, r3, r5
 8010f5c:	1a5b      	subs	r3, r3, r1
 8010f5e:	4283      	cmp	r3, r0
 8010f60:	d300      	bcc.n	8010f64 <udelay(unsigned int, unsigned int)+0x28>
 8010f62:	bd30      	pop	{r4, r5, pc}
 8010f64:	4611      	mov	r1, r2
 8010f66:	e7f1      	b.n	8010f4c <udelay(unsigned int, unsigned int)+0x10>
 8010f68:	e0001000 	and	r1, r0, r0

08010f6c <mac_address_get>:
 8010f6c:	2102      	movs	r1, #2
 8010f6e:	4a07      	ldr	r2, [pc, #28]	; (8010f8c <mac_address_get+0x20>)
 8010f70:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010f74:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010f78:	7001      	strb	r1, [r0, #0]
 8010f7a:	7042      	strb	r2, [r0, #1]
 8010f7c:	0e1a      	lsrs	r2, r3, #24
 8010f7e:	7082      	strb	r2, [r0, #2]
 8010f80:	0c1a      	lsrs	r2, r3, #16
 8010f82:	70c2      	strb	r2, [r0, #3]
 8010f84:	0a1a      	lsrs	r2, r3, #8
 8010f86:	7102      	strb	r2, [r0, #4]
 8010f88:	7143      	strb	r3, [r0, #5]
 8010f8a:	4770      	bx	lr
 8010f8c:	1ffff000 	svcne	0x00fff000

08010f90 <adc_mode_config>:
 8010f90:	4b06      	ldr	r3, [pc, #24]	; (8010fac <adc_mode_config+0x1c>)
 8010f92:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010f96:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8010f9a:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010f9e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010fa2:	4302      	orrs	r2, r0
 8010fa4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010fa8:	4770      	bx	lr
 8010faa:	bf00      	nop
 8010fac:	40012000 	andmi	r2, r1, r0

08010fb0 <adc_special_function_config>:
 8010fb0:	b510      	push	{r4, lr}
 8010fb2:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8010fb6:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8010fba:	f001 0102 	and.w	r1, r1, #2
 8010fbe:	b17a      	cbz	r2, 8010fe0 <adc_special_function_config+0x30>
 8010fc0:	b11b      	cbz	r3, 8010fca <adc_special_function_config+0x1a>
 8010fc2:	6843      	ldr	r3, [r0, #4]
 8010fc4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010fc8:	6043      	str	r3, [r0, #4]
 8010fca:	b11c      	cbz	r4, 8010fd4 <adc_special_function_config+0x24>
 8010fcc:	6843      	ldr	r3, [r0, #4]
 8010fce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8010fd2:	6043      	str	r3, [r0, #4]
 8010fd4:	b119      	cbz	r1, 8010fde <adc_special_function_config+0x2e>
 8010fd6:	6883      	ldr	r3, [r0, #8]
 8010fd8:	f043 0302 	orr.w	r3, r3, #2
 8010fdc:	6083      	str	r3, [r0, #8]
 8010fde:	bd10      	pop	{r4, pc}
 8010fe0:	b11b      	cbz	r3, 8010fea <adc_special_function_config+0x3a>
 8010fe2:	6843      	ldr	r3, [r0, #4]
 8010fe4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010fe8:	6043      	str	r3, [r0, #4]
 8010fea:	b11c      	cbz	r4, 8010ff4 <adc_special_function_config+0x44>
 8010fec:	6843      	ldr	r3, [r0, #4]
 8010fee:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8010ff2:	6043      	str	r3, [r0, #4]
 8010ff4:	2900      	cmp	r1, #0
 8010ff6:	d0f2      	beq.n	8010fde <adc_special_function_config+0x2e>
 8010ff8:	6883      	ldr	r3, [r0, #8]
 8010ffa:	f023 0302 	bic.w	r3, r3, #2
 8010ffe:	e7ed      	b.n	8010fdc <adc_special_function_config+0x2c>

08011000 <adc_data_alignment_config>:
 8011000:	6883      	ldr	r3, [r0, #8]
 8011002:	b119      	cbz	r1, 801100c <adc_data_alignment_config+0xc>
 8011004:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011008:	6083      	str	r3, [r0, #8]
 801100a:	4770      	bx	lr
 801100c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011010:	e7fa      	b.n	8011008 <adc_data_alignment_config+0x8>

08011012 <adc_enable>:
 8011012:	6883      	ldr	r3, [r0, #8]
 8011014:	07db      	lsls	r3, r3, #31
 8011016:	bf5e      	ittt	pl
 8011018:	6883      	ldrpl	r3, [r0, #8]
 801101a:	f043 0301 	orrpl.w	r3, r3, #1
 801101e:	6083      	strpl	r3, [r0, #8]
 8011020:	4770      	bx	lr

08011022 <adc_calibration_enable>:
 8011022:	6883      	ldr	r3, [r0, #8]
 8011024:	f100 0208 	add.w	r2, r0, #8
 8011028:	f043 0308 	orr.w	r3, r3, #8
 801102c:	6083      	str	r3, [r0, #8]
 801102e:	6813      	ldr	r3, [r2, #0]
 8011030:	0719      	lsls	r1, r3, #28
 8011032:	d4fc      	bmi.n	801102e <adc_calibration_enable+0xc>
 8011034:	6883      	ldr	r3, [r0, #8]
 8011036:	f043 0304 	orr.w	r3, r3, #4
 801103a:	6083      	str	r3, [r0, #8]
 801103c:	6813      	ldr	r3, [r2, #0]
 801103e:	075b      	lsls	r3, r3, #29
 8011040:	d4fc      	bmi.n	801103c <adc_calibration_enable+0x1a>
 8011042:	4770      	bx	lr

08011044 <adc_tempsensor_vrefint_enable>:
 8011044:	4a03      	ldr	r2, [pc, #12]	; (8011054 <adc_tempsensor_vrefint_enable+0x10>)
 8011046:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801104a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801104e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8011052:	4770      	bx	lr
 8011054:	40012000 	andmi	r2, r1, r0

08011058 <adc_channel_length_config>:
 8011058:	2901      	cmp	r1, #1
 801105a:	d002      	beq.n	8011062 <adc_channel_length_config+0xa>
 801105c:	2902      	cmp	r1, #2
 801105e:	d00c      	beq.n	801107a <adc_channel_length_config+0x22>
 8011060:	4770      	bx	lr
 8011062:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011064:	3a01      	subs	r2, #1
 8011066:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801106a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801106c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801106e:	0512      	lsls	r2, r2, #20
 8011070:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8011074:	431a      	orrs	r2, r3
 8011076:	62c2      	str	r2, [r0, #44]	; 0x2c
 8011078:	4770      	bx	lr
 801107a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801107c:	3a01      	subs	r2, #1
 801107e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8011082:	6383      	str	r3, [r0, #56]	; 0x38
 8011084:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011086:	0512      	lsls	r2, r2, #20
 8011088:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801108c:	431a      	orrs	r2, r3
 801108e:	6382      	str	r2, [r0, #56]	; 0x38
 8011090:	4770      	bx	lr

08011092 <adc_inserted_channel_config>:
 8011092:	b530      	push	{r4, r5, lr}
 8011094:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8011096:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011098:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801109c:	1a61      	subs	r1, r4, r1
 801109e:	f06f 0404 	mvn.w	r4, #4
 80110a2:	4361      	muls	r1, r4
 80110a4:	241f      	movs	r4, #31
 80110a6:	310f      	adds	r1, #15
 80110a8:	408c      	lsls	r4, r1
 80110aa:	ea25 0504 	bic.w	r5, r5, r4
 80110ae:	fa02 f101 	lsl.w	r1, r2, r1
 80110b2:	4329      	orrs	r1, r5
 80110b4:	2a09      	cmp	r2, #9
 80110b6:	6381      	str	r1, [r0, #56]	; 0x38
 80110b8:	d80b      	bhi.n	80110d2 <adc_inserted_channel_config+0x40>
 80110ba:	2407      	movs	r4, #7
 80110bc:	6901      	ldr	r1, [r0, #16]
 80110be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80110c2:	4094      	lsls	r4, r2
 80110c4:	ea21 0104 	bic.w	r1, r1, r4
 80110c8:	fa03 f202 	lsl.w	r2, r3, r2
 80110cc:	430a      	orrs	r2, r1
 80110ce:	6102      	str	r2, [r0, #16]
 80110d0:	bd30      	pop	{r4, r5, pc}
 80110d2:	2a11      	cmp	r2, #17
 80110d4:	d8fc      	bhi.n	80110d0 <adc_inserted_channel_config+0x3e>
 80110d6:	2407      	movs	r4, #7
 80110d8:	3a0a      	subs	r2, #10
 80110da:	68c1      	ldr	r1, [r0, #12]
 80110dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80110e0:	4094      	lsls	r4, r2
 80110e2:	ea21 0104 	bic.w	r1, r1, r4
 80110e6:	4093      	lsls	r3, r2
 80110e8:	430b      	orrs	r3, r1
 80110ea:	60c3      	str	r3, [r0, #12]
 80110ec:	e7f0      	b.n	80110d0 <adc_inserted_channel_config+0x3e>

080110ee <adc_external_trigger_source_config>:
 80110ee:	2901      	cmp	r1, #1
 80110f0:	d002      	beq.n	80110f8 <adc_external_trigger_source_config+0xa>
 80110f2:	2902      	cmp	r1, #2
 80110f4:	d008      	beq.n	8011108 <adc_external_trigger_source_config+0x1a>
 80110f6:	4770      	bx	lr
 80110f8:	6883      	ldr	r3, [r0, #8]
 80110fa:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80110fe:	6083      	str	r3, [r0, #8]
 8011100:	6883      	ldr	r3, [r0, #8]
 8011102:	4313      	orrs	r3, r2
 8011104:	6083      	str	r3, [r0, #8]
 8011106:	4770      	bx	lr
 8011108:	6883      	ldr	r3, [r0, #8]
 801110a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801110e:	e7f6      	b.n	80110fe <adc_external_trigger_source_config+0x10>

08011110 <adc_external_trigger_config>:
 8011110:	f001 0301 	and.w	r3, r1, #1
 8011114:	f001 0102 	and.w	r1, r1, #2
 8011118:	b152      	cbz	r2, 8011130 <adc_external_trigger_config+0x20>
 801111a:	b11b      	cbz	r3, 8011124 <adc_external_trigger_config+0x14>
 801111c:	6883      	ldr	r3, [r0, #8]
 801111e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011122:	6083      	str	r3, [r0, #8]
 8011124:	b119      	cbz	r1, 801112e <adc_external_trigger_config+0x1e>
 8011126:	6883      	ldr	r3, [r0, #8]
 8011128:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801112c:	6083      	str	r3, [r0, #8]
 801112e:	4770      	bx	lr
 8011130:	b11b      	cbz	r3, 801113a <adc_external_trigger_config+0x2a>
 8011132:	6883      	ldr	r3, [r0, #8]
 8011134:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8011138:	6083      	str	r3, [r0, #8]
 801113a:	2900      	cmp	r1, #0
 801113c:	d0f7      	beq.n	801112e <adc_external_trigger_config+0x1e>
 801113e:	6883      	ldr	r3, [r0, #8]
 8011140:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8011144:	e7f2      	b.n	801112c <adc_external_trigger_config+0x1c>

08011146 <adc_software_trigger_enable>:
 8011146:	07ca      	lsls	r2, r1, #31
 8011148:	bf42      	ittt	mi
 801114a:	6883      	ldrmi	r3, [r0, #8]
 801114c:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8011150:	6083      	strmi	r3, [r0, #8]
 8011152:	078b      	lsls	r3, r1, #30
 8011154:	bf42      	ittt	mi
 8011156:	6883      	ldrmi	r3, [r0, #8]
 8011158:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801115c:	6083      	strmi	r3, [r0, #8]
 801115e:	4770      	bx	lr

08011160 <enet_delay>:
 8011160:	2300      	movs	r3, #0
 8011162:	b082      	sub	sp, #8
 8011164:	9301      	str	r3, [sp, #4]
 8011166:	9001      	str	r0, [sp, #4]
 8011168:	9b01      	ldr	r3, [sp, #4]
 801116a:	b90b      	cbnz	r3, 8011170 <enet_delay+0x10>
 801116c:	b002      	add	sp, #8
 801116e:	4770      	bx	lr
 8011170:	9b01      	ldr	r3, [sp, #4]
 8011172:	3b01      	subs	r3, #1
 8011174:	9301      	str	r3, [sp, #4]
 8011176:	e7f7      	b.n	8011168 <enet_delay+0x8>

08011178 <enet_software_reset>:
 8011178:	4b07      	ldr	r3, [pc, #28]	; (8011198 <enet_software_reset+0x20>)
 801117a:	681a      	ldr	r2, [r3, #0]
 801117c:	f042 0201 	orr.w	r2, r2, #1
 8011180:	601a      	str	r2, [r3, #0]
 8011182:	4a06      	ldr	r2, [pc, #24]	; (801119c <enet_software_reset+0x24>)
 8011184:	6819      	ldr	r1, [r3, #0]
 8011186:	07c9      	lsls	r1, r1, #31
 8011188:	d501      	bpl.n	801118e <enet_software_reset+0x16>
 801118a:	3a01      	subs	r2, #1
 801118c:	d1fa      	bne.n	8011184 <enet_software_reset+0xc>
 801118e:	6818      	ldr	r0, [r3, #0]
 8011190:	43c0      	mvns	r0, r0
 8011192:	f000 0001 	and.w	r0, r0, #1
 8011196:	4770      	bx	lr
 8011198:	40029000 	andmi	r9, r2, r0
 801119c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080111a0 <enet_descriptors_chain_init>:
 80111a0:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80111a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111a6:	4a19      	ldr	r2, [pc, #100]	; (801120c <enet_descriptors_chain_init+0x6c>)
 80111a8:	d125      	bne.n	80111f6 <enet_descriptors_chain_init+0x56>
 80111aa:	2500      	movs	r5, #0
 80111ac:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80111b0:	2002      	movs	r0, #2
 80111b2:	4b17      	ldr	r3, [pc, #92]	; (8011210 <enet_descriptors_chain_init+0x70>)
 80111b4:	4c17      	ldr	r4, [pc, #92]	; (8011214 <enet_descriptors_chain_init+0x74>)
 80111b6:	6113      	str	r3, [r2, #16]
 80111b8:	4a17      	ldr	r2, [pc, #92]	; (8011218 <enet_descriptors_chain_init+0x78>)
 80111ba:	6013      	str	r3, [r2, #0]
 80111bc:	2200      	movs	r2, #0
 80111be:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80111c2:	4916      	ldr	r1, [pc, #88]	; (801121c <enet_descriptors_chain_init+0x7c>)
 80111c4:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80111c8:	600a      	str	r2, [r1, #0]
 80111ca:	4915      	ldr	r1, [pc, #84]	; (8011220 <enet_descriptors_chain_init+0x80>)
 80111cc:	600a      	str	r2, [r1, #0]
 80111ce:	f103 0110 	add.w	r1, r3, #16
 80111d2:	fb0e 4702 	mla	r7, lr, r2, r4
 80111d6:	f841 7c08 	str.w	r7, [r1, #-8]
 80111da:	4594      	cmp	ip, r2
 80111dc:	bf94      	ite	ls
 80111de:	461f      	movls	r7, r3
 80111e0:	460f      	movhi	r7, r1
 80111e2:	3201      	adds	r2, #1
 80111e4:	4290      	cmp	r0, r2
 80111e6:	e941 6504 	strd	r6, r5, [r1, #-16]
 80111ea:	f841 7c04 	str.w	r7, [r1, #-4]
 80111ee:	f101 0110 	add.w	r1, r1, #16
 80111f2:	d1ee      	bne.n	80111d2 <enet_descriptors_chain_init+0x32>
 80111f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111f6:	4b0b      	ldr	r3, [pc, #44]	; (8011224 <enet_descriptors_chain_init+0x84>)
 80111f8:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80111fc:	60d3      	str	r3, [r2, #12]
 80111fe:	4a0a      	ldr	r2, [pc, #40]	; (8011228 <enet_descriptors_chain_init+0x88>)
 8011200:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8011204:	2008      	movs	r0, #8
 8011206:	4c09      	ldr	r4, [pc, #36]	; (801122c <enet_descriptors_chain_init+0x8c>)
 8011208:	6013      	str	r3, [r2, #0]
 801120a:	e7d7      	b.n	80111bc <enet_descriptors_chain_init+0x1c>
 801120c:	40029000 	andmi	r9, r2, r0
 8011210:	2000d83c 	andcs	sp, r0, ip, lsr r8
 8011214:	2000cc54 	andcs	ip, r0, r4, asr ip
 8011218:	20009bf4 	strdcs	r9, [r0], -r4
 801121c:	20009be8 	andcs	r9, r0, r8, ror #23
 8011220:	20009bec 	andcs	r9, r0, ip, ror #23
 8011224:	2000cbd4 	ldrdcs	ip, [r0], -r4
 8011228:	20009bf0 	strdcs	r9, [r0], -r0
 801122c:	20009c34 	andcs	r9, r0, r4, lsr ip

08011230 <enet_frame_receive>:
 8011230:	4a1d      	ldr	r2, [pc, #116]	; (80112a8 <enet_frame_receive+0x78>)
 8011232:	b510      	push	{r4, lr}
 8011234:	6813      	ldr	r3, [r2, #0]
 8011236:	681b      	ldr	r3, [r3, #0]
 8011238:	2b00      	cmp	r3, #0
 801123a:	db33      	blt.n	80112a4 <enet_frame_receive+0x74>
 801123c:	b970      	cbnz	r0, 801125c <enet_frame_receive+0x2c>
 801123e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8011242:	6813      	ldr	r3, [r2, #0]
 8011244:	6019      	str	r1, [r3, #0]
 8011246:	4919      	ldr	r1, [pc, #100]	; (80112ac <enet_frame_receive+0x7c>)
 8011248:	6948      	ldr	r0, [r1, #20]
 801124a:	0604      	lsls	r4, r0, #24
 801124c:	d419      	bmi.n	8011282 <enet_frame_receive+0x52>
 801124e:	6859      	ldr	r1, [r3, #4]
 8011250:	0448      	lsls	r0, r1, #17
 8011252:	d51b      	bpl.n	801128c <enet_frame_receive+0x5c>
 8011254:	68db      	ldr	r3, [r3, #12]
 8011256:	2001      	movs	r0, #1
 8011258:	6013      	str	r3, [r2, #0]
 801125a:	bd10      	pop	{r4, pc}
 801125c:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8011260:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8011264:	d11e      	bne.n	80112a4 <enet_frame_receive+0x74>
 8011266:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801126a:	3b04      	subs	r3, #4
 801126c:	428b      	cmp	r3, r1
 801126e:	d819      	bhi.n	80112a4 <enet_frame_receive+0x74>
 8011270:	2100      	movs	r1, #0
 8011272:	4299      	cmp	r1, r3
 8011274:	6814      	ldr	r4, [r2, #0]
 8011276:	d2e2      	bcs.n	801123e <enet_frame_receive+0xe>
 8011278:	68a4      	ldr	r4, [r4, #8]
 801127a:	5d0c      	ldrb	r4, [r1, r4]
 801127c:	5444      	strb	r4, [r0, r1]
 801127e:	3101      	adds	r1, #1
 8011280:	e7f7      	b.n	8011272 <enet_frame_receive+0x42>
 8011282:	2080      	movs	r0, #128	; 0x80
 8011284:	6148      	str	r0, [r1, #20]
 8011286:	2000      	movs	r0, #0
 8011288:	6088      	str	r0, [r1, #8]
 801128a:	e7e0      	b.n	801124e <enet_frame_receive+0x1e>
 801128c:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8011290:	4906      	ldr	r1, [pc, #24]	; (80112ac <enet_frame_receive+0x7c>)
 8011292:	bf05      	ittet	eq
 8011294:	3310      	addeq	r3, #16
 8011296:	6809      	ldreq	r1, [r1, #0]
 8011298:	68cb      	ldrne	r3, [r1, #12]
 801129a:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801129e:	bf08      	it	eq
 80112a0:	185b      	addeq	r3, r3, r1
 80112a2:	e7d8      	b.n	8011256 <enet_frame_receive+0x26>
 80112a4:	2000      	movs	r0, #0
 80112a6:	e7d8      	b.n	801125a <enet_frame_receive+0x2a>
 80112a8:	20009bf0 	strdcs	r9, [r0], -r0
 80112ac:	40029000 	andmi	r9, r2, r0

080112b0 <enet_frame_transmit>:
 80112b0:	4a1e      	ldr	r2, [pc, #120]	; (801132c <enet_frame_transmit+0x7c>)
 80112b2:	b530      	push	{r4, r5, lr}
 80112b4:	6813      	ldr	r3, [r2, #0]
 80112b6:	681b      	ldr	r3, [r3, #0]
 80112b8:	2b00      	cmp	r3, #0
 80112ba:	db34      	blt.n	8011326 <enet_frame_transmit+0x76>
 80112bc:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80112c0:	4299      	cmp	r1, r3
 80112c2:	d830      	bhi.n	8011326 <enet_frame_transmit+0x76>
 80112c4:	b9e8      	cbnz	r0, 8011302 <enet_frame_transmit+0x52>
 80112c6:	6813      	ldr	r3, [r2, #0]
 80112c8:	4819      	ldr	r0, [pc, #100]	; (8011330 <enet_frame_transmit+0x80>)
 80112ca:	6059      	str	r1, [r3, #4]
 80112cc:	6819      	ldr	r1, [r3, #0]
 80112ce:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80112d2:	6019      	str	r1, [r3, #0]
 80112d4:	6941      	ldr	r1, [r0, #20]
 80112d6:	6944      	ldr	r4, [r0, #20]
 80112d8:	f001 0104 	and.w	r1, r1, #4
 80112dc:	f004 0420 	and.w	r4, r4, #32
 80112e0:	4321      	orrs	r1, r4
 80112e2:	d110      	bne.n	8011306 <enet_frame_transmit+0x56>
 80112e4:	6819      	ldr	r1, [r3, #0]
 80112e6:	02c8      	lsls	r0, r1, #11
 80112e8:	d511      	bpl.n	801130e <enet_frame_transmit+0x5e>
 80112ea:	68db      	ldr	r3, [r3, #12]
 80112ec:	2001      	movs	r0, #1
 80112ee:	6013      	str	r3, [r2, #0]
 80112f0:	bd30      	pop	{r4, r5, pc}
 80112f2:	5cc5      	ldrb	r5, [r0, r3]
 80112f4:	68a4      	ldr	r4, [r4, #8]
 80112f6:	551d      	strb	r5, [r3, r4]
 80112f8:	3301      	adds	r3, #1
 80112fa:	428b      	cmp	r3, r1
 80112fc:	6814      	ldr	r4, [r2, #0]
 80112fe:	d1f8      	bne.n	80112f2 <enet_frame_transmit+0x42>
 8011300:	e7e1      	b.n	80112c6 <enet_frame_transmit+0x16>
 8011302:	2300      	movs	r3, #0
 8011304:	e7f9      	b.n	80112fa <enet_frame_transmit+0x4a>
 8011306:	6141      	str	r1, [r0, #20]
 8011308:	2100      	movs	r1, #0
 801130a:	6041      	str	r1, [r0, #4]
 801130c:	e7ea      	b.n	80112e4 <enet_frame_transmit+0x34>
 801130e:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8011312:	4907      	ldr	r1, [pc, #28]	; (8011330 <enet_frame_transmit+0x80>)
 8011314:	bf05      	ittet	eq
 8011316:	3310      	addeq	r3, #16
 8011318:	6809      	ldreq	r1, [r1, #0]
 801131a:	690b      	ldrne	r3, [r1, #16]
 801131c:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011320:	bf08      	it	eq
 8011322:	185b      	addeq	r3, r3, r1
 8011324:	e7e2      	b.n	80112ec <enet_frame_transmit+0x3c>
 8011326:	2000      	movs	r0, #0
 8011328:	e7e2      	b.n	80112f0 <enet_frame_transmit+0x40>
 801132a:	bf00      	nop
 801132c:	20009bf4 	strdcs	r9, [r0], -r4
 8011330:	40029000 	andmi	r9, r2, r0

08011334 <enet_transmit_checksum_config>:
 8011334:	6803      	ldr	r3, [r0, #0]
 8011336:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801133a:	430b      	orrs	r3, r1
 801133c:	6003      	str	r3, [r0, #0]
 801133e:	4770      	bx	lr

08011340 <enet_mac_address_set>:
 8011340:	888a      	ldrh	r2, [r1, #4]
 8011342:	4b03      	ldr	r3, [pc, #12]	; (8011350 <enet_mac_address_set+0x10>)
 8011344:	50c2      	str	r2, [r0, r3]
 8011346:	680a      	ldr	r2, [r1, #0]
 8011348:	3304      	adds	r3, #4
 801134a:	50c2      	str	r2, [r0, r3]
 801134c:	4770      	bx	lr
 801134e:	bf00      	nop
 8011350:	40028040 	andmi	r8, r2, r0, asr #32

08011354 <enet_rx_enable>:
 8011354:	4a05      	ldr	r2, [pc, #20]	; (801136c <enet_rx_enable+0x18>)
 8011356:	6813      	ldr	r3, [r2, #0]
 8011358:	f043 0304 	orr.w	r3, r3, #4
 801135c:	6013      	str	r3, [r2, #0]
 801135e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8011362:	6993      	ldr	r3, [r2, #24]
 8011364:	f043 0302 	orr.w	r3, r3, #2
 8011368:	6193      	str	r3, [r2, #24]
 801136a:	4770      	bx	lr
 801136c:	40028000 	andmi	r8, r2, r0

08011370 <enet_phy_write_read>:
 8011370:	b530      	push	{r4, r5, lr}
 8011372:	4604      	mov	r4, r0
 8011374:	4d13      	ldr	r5, [pc, #76]	; (80113c4 <enet_phy_write_read+0x54>)
 8011376:	0192      	lsls	r2, r2, #6
 8011378:	6928      	ldr	r0, [r5, #16]
 801137a:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801137e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8011382:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8011386:	4302      	orrs	r2, r0
 8011388:	02c9      	lsls	r1, r1, #11
 801138a:	b289      	uxth	r1, r1
 801138c:	2c02      	cmp	r4, #2
 801138e:	ea42 0204 	orr.w	r2, r2, r4
 8011392:	ea42 0201 	orr.w	r2, r2, r1
 8011396:	bf08      	it	eq
 8011398:	8819      	ldrheq	r1, [r3, #0]
 801139a:	f042 0201 	orr.w	r2, r2, #1
 801139e:	bf08      	it	eq
 80113a0:	6169      	streq	r1, [r5, #20]
 80113a2:	612a      	str	r2, [r5, #16]
 80113a4:	4907      	ldr	r1, [pc, #28]	; (80113c4 <enet_phy_write_read+0x54>)
 80113a6:	4a08      	ldr	r2, [pc, #32]	; (80113c8 <enet_phy_write_read+0x58>)
 80113a8:	6908      	ldr	r0, [r1, #16]
 80113aa:	07c0      	lsls	r0, r0, #31
 80113ac:	d501      	bpl.n	80113b2 <enet_phy_write_read+0x42>
 80113ae:	3a01      	subs	r2, #1
 80113b0:	d1fa      	bne.n	80113a8 <enet_phy_write_read+0x38>
 80113b2:	690a      	ldr	r2, [r1, #16]
 80113b4:	43d2      	mvns	r2, r2
 80113b6:	f002 0001 	and.w	r0, r2, #1
 80113ba:	b90c      	cbnz	r4, 80113c0 <enet_phy_write_read+0x50>
 80113bc:	694a      	ldr	r2, [r1, #20]
 80113be:	801a      	strh	r2, [r3, #0]
 80113c0:	bd30      	pop	{r4, r5, pc}
 80113c2:	bf00      	nop
 80113c4:	40028000 	andmi	r8, r2, r0
 80113c8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080113cc <enet_phy_config>:
 80113cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113ce:	4d22      	ldr	r5, [pc, #136]	; (8011458 <enet_phy_config+0x8c>)
 80113d0:	2001      	movs	r0, #1
 80113d2:	692c      	ldr	r4, [r5, #16]
 80113d4:	f7ff f806 	bl	80103e4 <rcu_clock_freq_get>
 80113d8:	4b20      	ldr	r3, [pc, #128]	; (801145c <enet_phy_config+0x90>)
 80113da:	4a21      	ldr	r2, [pc, #132]	; (8011460 <enet_phy_config+0x94>)
 80113dc:	4403      	add	r3, r0
 80113de:	4293      	cmp	r3, r2
 80113e0:	f024 041c 	bic.w	r4, r4, #28
 80113e4:	d21f      	bcs.n	8011426 <enet_phy_config+0x5a>
 80113e6:	f044 0408 	orr.w	r4, r4, #8
 80113ea:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80113ee:	612c      	str	r4, [r5, #16]
 80113f0:	2200      	movs	r2, #0
 80113f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80113f6:	2101      	movs	r1, #1
 80113f8:	2002      	movs	r0, #2
 80113fa:	f10d 0306 	add.w	r3, sp, #6
 80113fe:	f7ff ffb7 	bl	8011370 <enet_phy_write_read>
 8011402:	b310      	cbz	r0, 801144a <enet_phy_config+0x7e>
 8011404:	2200      	movs	r2, #0
 8011406:	4817      	ldr	r0, [pc, #92]	; (8011464 <enet_phy_config+0x98>)
 8011408:	f7ff feaa 	bl	8011160 <enet_delay>
 801140c:	2101      	movs	r1, #1
 801140e:	4610      	mov	r0, r2
 8011410:	f10d 0306 	add.w	r3, sp, #6
 8011414:	f7ff ffac 	bl	8011370 <enet_phy_write_read>
 8011418:	b1b8      	cbz	r0, 801144a <enet_phy_config+0x7e>
 801141a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801141e:	43c0      	mvns	r0, r0
 8011420:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8011424:	e012      	b.n	801144c <enet_phy_config+0x80>
 8011426:	4b10      	ldr	r3, [pc, #64]	; (8011468 <enet_phy_config+0x9c>)
 8011428:	4a10      	ldr	r2, [pc, #64]	; (801146c <enet_phy_config+0xa0>)
 801142a:	4403      	add	r3, r0
 801142c:	4293      	cmp	r3, r2
 801142e:	d802      	bhi.n	8011436 <enet_phy_config+0x6a>
 8011430:	f044 040c 	orr.w	r4, r4, #12
 8011434:	e7d9      	b.n	80113ea <enet_phy_config+0x1e>
 8011436:	4b0e      	ldr	r3, [pc, #56]	; (8011470 <enet_phy_config+0xa4>)
 8011438:	4a0e      	ldr	r2, [pc, #56]	; (8011474 <enet_phy_config+0xa8>)
 801143a:	4403      	add	r3, r0
 801143c:	4293      	cmp	r3, r2
 801143e:	d9d4      	bls.n	80113ea <enet_phy_config+0x1e>
 8011440:	4b0d      	ldr	r3, [pc, #52]	; (8011478 <enet_phy_config+0xac>)
 8011442:	4a0e      	ldr	r2, [pc, #56]	; (801147c <enet_phy_config+0xb0>)
 8011444:	4403      	add	r3, r0
 8011446:	4293      	cmp	r3, r2
 8011448:	d902      	bls.n	8011450 <enet_phy_config+0x84>
 801144a:	2000      	movs	r0, #0
 801144c:	b003      	add	sp, #12
 801144e:	bd30      	pop	{r4, r5, pc}
 8011450:	f044 0404 	orr.w	r4, r4, #4
 8011454:	e7c9      	b.n	80113ea <enet_phy_config+0x1e>
 8011456:	bf00      	nop
 8011458:	40028000 	andmi	r8, r2, r0
 801145c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8011460:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8011464:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011468:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 801146c:	017d783f 	cmneq	sp, pc, lsr r8
 8011470:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8011474:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8011478:	faa2b580 	blx	68bea80 <__stack_size+0x68bd280>
 801147c:	0112a880 	tsteq	r2, r0, lsl #17

08011480 <enet_init>:
 8011480:	2300      	movs	r3, #0
 8011482:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011484:	4604      	mov	r4, r0
 8011486:	460d      	mov	r5, r1
 8011488:	4616      	mov	r6, r2
 801148a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801148e:	f7ff ff9d 	bl	80113cc <enet_phy_config>
 8011492:	2800      	cmp	r0, #0
 8011494:	d037      	beq.n	8011506 <enet_init+0x86>
 8011496:	4b3b      	ldr	r3, [pc, #236]	; (8011584 <enet_init+0x104>)
 8011498:	4a3b      	ldr	r2, [pc, #236]	; (8011588 <enet_init+0x108>)
 801149a:	6819      	ldr	r1, [r3, #0]
 801149c:	2c01      	cmp	r4, #1
 801149e:	ea02 0201 	and.w	r2, r2, r1
 80114a2:	601a      	str	r2, [r3, #0]
 80114a4:	f04f 0200 	mov.w	r2, #0
 80114a8:	605a      	str	r2, [r3, #4]
 80114aa:	609a      	str	r2, [r3, #8]
 80114ac:	60da      	str	r2, [r3, #12]
 80114ae:	6999      	ldr	r1, [r3, #24]
 80114b0:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80114b4:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80114b8:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80114bc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80114c0:	6199      	str	r1, [r3, #24]
 80114c2:	4932      	ldr	r1, [pc, #200]	; (801158c <enet_init+0x10c>)
 80114c4:	61da      	str	r2, [r3, #28]
 80114c6:	6988      	ldr	r0, [r1, #24]
 80114c8:	4b31      	ldr	r3, [pc, #196]	; (8011590 <enet_init+0x110>)
 80114ca:	ea03 0300 	and.w	r3, r3, r0
 80114ce:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80114d2:	618b      	str	r3, [r1, #24]
 80114d4:	680b      	ldr	r3, [r1, #0]
 80114d6:	4b2f      	ldr	r3, [pc, #188]	; (8011594 <enet_init+0x114>)
 80114d8:	600b      	str	r3, [r1, #0]
 80114da:	d01e      	beq.n	801151a <enet_init+0x9a>
 80114dc:	08e3      	lsrs	r3, r4, #3
 80114de:	0861      	lsrs	r1, r4, #1
 80114e0:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80114e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80114e8:	430b      	orrs	r3, r1
 80114ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 80114ee:	2101      	movs	r1, #1
 80114f0:	2002      	movs	r0, #2
 80114f2:	f10d 0306 	add.w	r3, sp, #6
 80114f6:	f7ff ff3b 	bl	8011370 <enet_phy_write_read>
 80114fa:	b158      	cbz	r0, 8011514 <enet_init+0x94>
 80114fc:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011500:	f7ff fe2e 	bl	8011160 <enet_delay>
 8011504:	e05d      	b.n	80115c2 <enet_init+0x142>
 8011506:	4824      	ldr	r0, [pc, #144]	; (8011598 <enet_init+0x118>)
 8011508:	f7ff fe2a 	bl	8011160 <enet_delay>
 801150c:	f7ff ff5e 	bl	80113cc <enet_phy_config>
 8011510:	2800      	cmp	r0, #0
 8011512:	d1c0      	bne.n	8011496 <enet_init+0x16>
 8011514:	2000      	movs	r0, #0
 8011516:	b003      	add	sp, #12
 8011518:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801151a:	4614      	mov	r4, r2
 801151c:	4f1f      	ldr	r7, [pc, #124]	; (801159c <enet_init+0x11c>)
 801151e:	2201      	movs	r2, #1
 8011520:	2000      	movs	r0, #0
 8011522:	4611      	mov	r1, r2
 8011524:	f10d 0306 	add.w	r3, sp, #6
 8011528:	f7ff ff22 	bl	8011370 <enet_phy_write_read>
 801152c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011530:	3401      	adds	r4, #1
 8011532:	f002 0204 	and.w	r2, r2, #4
 8011536:	f8ad 2006 	strh.w	r2, [sp, #6]
 801153a:	b912      	cbnz	r2, 8011542 <enet_init+0xc2>
 801153c:	42bc      	cmp	r4, r7
 801153e:	d1ee      	bne.n	801151e <enet_init+0x9e>
 8011540:	e7e8      	b.n	8011514 <enet_init+0x94>
 8011542:	42bc      	cmp	r4, r7
 8011544:	d0e6      	beq.n	8011514 <enet_init+0x94>
 8011546:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801154a:	2101      	movs	r1, #1
 801154c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011550:	2002      	movs	r0, #2
 8011552:	2200      	movs	r2, #0
 8011554:	f7ff ff0c 	bl	8011370 <enet_phy_write_read>
 8011558:	2800      	cmp	r0, #0
 801155a:	d0db      	beq.n	8011514 <enet_init+0x94>
 801155c:	2400      	movs	r4, #0
 801155e:	4f0f      	ldr	r7, [pc, #60]	; (801159c <enet_init+0x11c>)
 8011560:	2201      	movs	r2, #1
 8011562:	2000      	movs	r0, #0
 8011564:	4611      	mov	r1, r2
 8011566:	f10d 0306 	add.w	r3, sp, #6
 801156a:	f7ff ff01 	bl	8011370 <enet_phy_write_read>
 801156e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011572:	3401      	adds	r4, #1
 8011574:	f002 0220 	and.w	r2, r2, #32
 8011578:	f8ad 2006 	strh.w	r2, [sp, #6]
 801157c:	b982      	cbnz	r2, 80115a0 <enet_init+0x120>
 801157e:	42bc      	cmp	r4, r7
 8011580:	d1ee      	bne.n	8011560 <enet_init+0xe0>
 8011582:	e7c7      	b.n	8011514 <enet_init+0x94>
 8011584:	40028000 	andmi	r8, r2, r0
 8011588:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 801158c:	40029000 	andmi	r9, r2, r0
 8011590:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8011594:	02c16000 	sbceq	r6, r1, #0
 8011598:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 801159c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80115a0:	42bc      	cmp	r4, r7
 80115a2:	d0b7      	beq.n	8011514 <enet_init+0x94>
 80115a4:	2101      	movs	r1, #1
 80115a6:	2210      	movs	r2, #16
 80115a8:	2000      	movs	r0, #0
 80115aa:	f7ff fee1 	bl	8011370 <enet_phy_write_read>
 80115ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80115b2:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80115b6:	0799      	lsls	r1, r3, #30
 80115b8:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80115bc:	d401      	bmi.n	80115c2 <enet_init+0x142>
 80115be:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80115c2:	4b63      	ldr	r3, [pc, #396]	; (8011750 <enet_init+0x2d0>)
 80115c4:	681a      	ldr	r2, [r3, #0]
 80115c6:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80115ca:	4314      	orrs	r4, r2
 80115cc:	056a      	lsls	r2, r5, #21
 80115ce:	601c      	str	r4, [r3, #0]
 80115d0:	d50b      	bpl.n	80115ea <enet_init+0x16a>
 80115d2:	681a      	ldr	r2, [r3, #0]
 80115d4:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80115d8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80115dc:	601a      	str	r2, [r3, #0]
 80115de:	4a5d      	ldr	r2, [pc, #372]	; (8011754 <enet_init+0x2d4>)
 80115e0:	6993      	ldr	r3, [r2, #24]
 80115e2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80115e6:	431d      	orrs	r5, r3
 80115e8:	6195      	str	r5, [r2, #24]
 80115ea:	4959      	ldr	r1, [pc, #356]	; (8011750 <enet_init+0x2d0>)
 80115ec:	684b      	ldr	r3, [r1, #4]
 80115ee:	431e      	orrs	r6, r3
 80115f0:	4b59      	ldr	r3, [pc, #356]	; (8011758 <enet_init+0x2d8>)
 80115f2:	604e      	str	r6, [r1, #4]
 80115f4:	681a      	ldr	r2, [r3, #0]
 80115f6:	07d7      	lsls	r7, r2, #31
 80115f8:	d510      	bpl.n	801161c <enet_init+0x19c>
 80115fa:	685a      	ldr	r2, [r3, #4]
 80115fc:	680c      	ldr	r4, [r1, #0]
 80115fe:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8011602:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8011606:	4320      	orrs	r0, r4
 8011608:	6008      	str	r0, [r1, #0]
 801160a:	4852      	ldr	r0, [pc, #328]	; (8011754 <enet_init+0x2d4>)
 801160c:	0892      	lsrs	r2, r2, #2
 801160e:	6981      	ldr	r1, [r0, #24]
 8011610:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8011614:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8011618:	430a      	orrs	r2, r1
 801161a:	6182      	str	r2, [r0, #24]
 801161c:	681a      	ldr	r2, [r3, #0]
 801161e:	0796      	lsls	r6, r2, #30
 8011620:	d508      	bpl.n	8011634 <enet_init+0x1b4>
 8011622:	494c      	ldr	r1, [pc, #304]	; (8011754 <enet_init+0x2d4>)
 8011624:	6898      	ldr	r0, [r3, #8]
 8011626:	680a      	ldr	r2, [r1, #0]
 8011628:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 801162c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8011630:	4302      	orrs	r2, r0
 8011632:	600a      	str	r2, [r1, #0]
 8011634:	681a      	ldr	r2, [r3, #0]
 8011636:	0755      	lsls	r5, r2, #29
 8011638:	d508      	bpl.n	801164c <enet_init+0x1cc>
 801163a:	4946      	ldr	r1, [pc, #280]	; (8011754 <enet_init+0x2d4>)
 801163c:	68d8      	ldr	r0, [r3, #12]
 801163e:	680a      	ldr	r2, [r1, #0]
 8011640:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8011644:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8011648:	4302      	orrs	r2, r0
 801164a:	600a      	str	r2, [r1, #0]
 801164c:	681a      	ldr	r2, [r3, #0]
 801164e:	0714      	lsls	r4, r2, #28
 8011650:	d508      	bpl.n	8011664 <enet_init+0x1e4>
 8011652:	4940      	ldr	r1, [pc, #256]	; (8011754 <enet_init+0x2d4>)
 8011654:	6918      	ldr	r0, [r3, #16]
 8011656:	680a      	ldr	r2, [r1, #0]
 8011658:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 801165c:	f022 0202 	bic.w	r2, r2, #2
 8011660:	4302      	orrs	r2, r0
 8011662:	600a      	str	r2, [r1, #0]
 8011664:	681a      	ldr	r2, [r3, #0]
 8011666:	06d0      	lsls	r0, r2, #27
 8011668:	d506      	bpl.n	8011678 <enet_init+0x1f8>
 801166a:	493a      	ldr	r1, [pc, #232]	; (8011754 <enet_init+0x2d4>)
 801166c:	4a3b      	ldr	r2, [pc, #236]	; (801175c <enet_init+0x2dc>)
 801166e:	6988      	ldr	r0, [r1, #24]
 8011670:	4002      	ands	r2, r0
 8011672:	6958      	ldr	r0, [r3, #20]
 8011674:	4302      	orrs	r2, r0
 8011676:	618a      	str	r2, [r1, #24]
 8011678:	681a      	ldr	r2, [r3, #0]
 801167a:	0691      	lsls	r1, r2, #26
 801167c:	d508      	bpl.n	8011690 <enet_init+0x210>
 801167e:	4935      	ldr	r1, [pc, #212]	; (8011754 <enet_init+0x2d4>)
 8011680:	6998      	ldr	r0, [r3, #24]
 8011682:	698a      	ldr	r2, [r1, #24]
 8011684:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8011688:	f022 0204 	bic.w	r2, r2, #4
 801168c:	4302      	orrs	r2, r0
 801168e:	618a      	str	r2, [r1, #24]
 8011690:	681a      	ldr	r2, [r3, #0]
 8011692:	0652      	lsls	r2, r2, #25
 8011694:	d506      	bpl.n	80116a4 <enet_init+0x224>
 8011696:	492e      	ldr	r1, [pc, #184]	; (8011750 <enet_init+0x2d0>)
 8011698:	69d8      	ldr	r0, [r3, #28]
 801169a:	69ca      	ldr	r2, [r1, #28]
 801169c:	0c52      	lsrs	r2, r2, #17
 801169e:	0452      	lsls	r2, r2, #17
 80116a0:	4302      	orrs	r2, r0
 80116a2:	61ca      	str	r2, [r1, #28]
 80116a4:	681a      	ldr	r2, [r3, #0]
 80116a6:	0617      	lsls	r7, r2, #24
 80116a8:	d517      	bpl.n	80116da <enet_init+0x25a>
 80116aa:	4c29      	ldr	r4, [pc, #164]	; (8011750 <enet_init+0x2d0>)
 80116ac:	6a1a      	ldr	r2, [r3, #32]
 80116ae:	69a0      	ldr	r0, [r4, #24]
 80116b0:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80116b4:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80116b8:	0400      	lsls	r0, r0, #16
 80116ba:	0c00      	lsrs	r0, r0, #16
 80116bc:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80116c0:	4301      	orrs	r1, r0
 80116c2:	4824      	ldr	r0, [pc, #144]	; (8011754 <enet_init+0x2d4>)
 80116c4:	61a1      	str	r1, [r4, #24]
 80116c6:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80116ca:	0a12      	lsrs	r2, r2, #8
 80116cc:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80116d0:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80116d4:	430a      	orrs	r2, r1
 80116d6:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80116da:	681a      	ldr	r2, [r3, #0]
 80116dc:	05d6      	lsls	r6, r2, #23
 80116de:	bf42      	ittt	mi
 80116e0:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80116e2:	4a1b      	ldrmi	r2, [pc, #108]	; (8011750 <enet_init+0x2d0>)
 80116e4:	6091      	strmi	r1, [r2, #8]
 80116e6:	681a      	ldr	r2, [r3, #0]
 80116e8:	0595      	lsls	r5, r2, #22
 80116ea:	bf42      	ittt	mi
 80116ec:	4a18      	ldrmi	r2, [pc, #96]	; (8011750 <enet_init+0x2d0>)
 80116ee:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80116f0:	60d1      	strmi	r1, [r2, #12]
 80116f2:	681a      	ldr	r2, [r3, #0]
 80116f4:	0554      	lsls	r4, r2, #21
 80116f6:	d508      	bpl.n	801170a <enet_init+0x28a>
 80116f8:	4915      	ldr	r1, [pc, #84]	; (8011750 <enet_init+0x2d0>)
 80116fa:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80116fc:	684a      	ldr	r2, [r1, #4]
 80116fe:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8011702:	f022 0206 	bic.w	r2, r2, #6
 8011706:	4302      	orrs	r2, r0
 8011708:	604a      	str	r2, [r1, #4]
 801170a:	681a      	ldr	r2, [r3, #0]
 801170c:	0510      	lsls	r0, r2, #20
 801170e:	d508      	bpl.n	8011722 <enet_init+0x2a2>
 8011710:	490f      	ldr	r1, [pc, #60]	; (8011750 <enet_init+0x2d0>)
 8011712:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8011714:	680a      	ldr	r2, [r1, #0]
 8011716:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801171a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801171e:	4302      	orrs	r2, r0
 8011720:	600a      	str	r2, [r1, #0]
 8011722:	681a      	ldr	r2, [r3, #0]
 8011724:	04d1      	lsls	r1, r2, #19
 8011726:	d506      	bpl.n	8011736 <enet_init+0x2b6>
 8011728:	4909      	ldr	r1, [pc, #36]	; (8011750 <enet_init+0x2d0>)
 801172a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 801172c:	680a      	ldr	r2, [r1, #0]
 801172e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8011732:	4302      	orrs	r2, r0
 8011734:	600a      	str	r2, [r1, #0]
 8011736:	681a      	ldr	r2, [r3, #0]
 8011738:	0492      	lsls	r2, r2, #18
 801173a:	d506      	bpl.n	801174a <enet_init+0x2ca>
 801173c:	4904      	ldr	r1, [pc, #16]	; (8011750 <enet_init+0x2d0>)
 801173e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011740:	680a      	ldr	r2, [r1, #0]
 8011742:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8011746:	4313      	orrs	r3, r2
 8011748:	600b      	str	r3, [r1, #0]
 801174a:	2001      	movs	r0, #1
 801174c:	e6e3      	b.n	8011516 <enet_init+0x96>
 801174e:	bf00      	nop
 8011750:	40028000 	andmi	r8, r2, r0
 8011754:	40029000 	andmi	r9, r2, r0
 8011758:	20009bf8 	strdcs	r9, [r0], -r8
 801175c:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08011760 <enet_txfifo_flush>:
 8011760:	4b06      	ldr	r3, [pc, #24]	; (801177c <enet_txfifo_flush+0x1c>)
 8011762:	4807      	ldr	r0, [pc, #28]	; (8011780 <enet_txfifo_flush+0x20>)
 8011764:	699a      	ldr	r2, [r3, #24]
 8011766:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 801176a:	619a      	str	r2, [r3, #24]
 801176c:	699a      	ldr	r2, [r3, #24]
 801176e:	02d2      	lsls	r2, r2, #11
 8011770:	d502      	bpl.n	8011778 <enet_txfifo_flush+0x18>
 8011772:	3801      	subs	r0, #1
 8011774:	d1fa      	bne.n	801176c <enet_txfifo_flush+0xc>
 8011776:	4770      	bx	lr
 8011778:	2001      	movs	r0, #1
 801177a:	4770      	bx	lr
 801177c:	40029000 	andmi	r9, r2, r0
 8011780:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011784 <enet_tx_enable>:
 8011784:	4a06      	ldr	r2, [pc, #24]	; (80117a0 <enet_tx_enable+0x1c>)
 8011786:	b508      	push	{r3, lr}
 8011788:	6813      	ldr	r3, [r2, #0]
 801178a:	f043 0308 	orr.w	r3, r3, #8
 801178e:	6013      	str	r3, [r2, #0]
 8011790:	f7ff ffe6 	bl	8011760 <enet_txfifo_flush>
 8011794:	4a03      	ldr	r2, [pc, #12]	; (80117a4 <enet_tx_enable+0x20>)
 8011796:	6993      	ldr	r3, [r2, #24]
 8011798:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801179c:	6193      	str	r3, [r2, #24]
 801179e:	bd08      	pop	{r3, pc}
 80117a0:	40028000 	andmi	r8, r2, r0
 80117a4:	40029000 	andmi	r9, r2, r0

080117a8 <enet_enable>:
 80117a8:	b508      	push	{r3, lr}
 80117aa:	f7ff ffeb 	bl	8011784 <enet_tx_enable>
 80117ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80117b2:	f7ff bdcf 	b.w	8011354 <enet_rx_enable>

080117b6 <enet_desc_information_get>:
 80117b6:	2905      	cmp	r1, #5
 80117b8:	d817      	bhi.n	80117ea <enet_desc_information_get+0x34>
 80117ba:	e8df f001 	tbb	[pc, r1]
 80117be:	03091012 	movweq	r1, #36882	; 0x9012
 80117c2:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80117c6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80117ca:	4770      	bx	lr
 80117cc:	88c0      	ldrh	r0, [r0, #6]
 80117ce:	e7fa      	b.n	80117c6 <enet_desc_information_get+0x10>
 80117d0:	8840      	ldrh	r0, [r0, #2]
 80117d2:	f3c0 000d 	ubfx	r0, r0, #0, #14
 80117d6:	2804      	cmp	r0, #4
 80117d8:	d90a      	bls.n	80117f0 <enet_desc_information_get+0x3a>
 80117da:	3804      	subs	r0, #4
 80117dc:	4770      	bx	lr
 80117de:	6880      	ldr	r0, [r0, #8]
 80117e0:	4770      	bx	lr
 80117e2:	6800      	ldr	r0, [r0, #0]
 80117e4:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80117e8:	4770      	bx	lr
 80117ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80117ee:	4770      	bx	lr
 80117f0:	2000      	movs	r0, #0
 80117f2:	4770      	bx	lr

080117f4 <enet_rxframe_drop>:
 80117f4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80117f8:	4814      	ldr	r0, [pc, #80]	; (801184c <enet_rxframe_drop+0x58>)
 80117fa:	b510      	push	{r4, lr}
 80117fc:	6802      	ldr	r2, [r0, #0]
 80117fe:	4914      	ldr	r1, [pc, #80]	; (8011850 <enet_rxframe_drop+0x5c>)
 8011800:	6854      	ldr	r4, [r2, #4]
 8011802:	6013      	str	r3, [r2, #0]
 8011804:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8011808:	680b      	ldr	r3, [r1, #0]
 801180a:	d009      	beq.n	8011820 <enet_rxframe_drop+0x2c>
 801180c:	b12b      	cbz	r3, 801181a <enet_rxframe_drop+0x26>
 801180e:	68da      	ldr	r2, [r3, #12]
 8011810:	6002      	str	r2, [r0, #0]
 8011812:	681a      	ldr	r2, [r3, #0]
 8011814:	b1ba      	cbz	r2, 8011846 <enet_rxframe_drop+0x52>
 8011816:	600a      	str	r2, [r1, #0]
 8011818:	bd10      	pop	{r4, pc}
 801181a:	68d3      	ldr	r3, [r2, #12]
 801181c:	6003      	str	r3, [r0, #0]
 801181e:	e7fb      	b.n	8011818 <enet_rxframe_drop+0x24>
 8011820:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8011824:	4c0b      	ldr	r4, [pc, #44]	; (8011854 <enet_rxframe_drop+0x60>)
 8011826:	d006      	beq.n	8011836 <enet_rxframe_drop+0x42>
 8011828:	68e2      	ldr	r2, [r4, #12]
 801182a:	6002      	str	r2, [r0, #0]
 801182c:	2b00      	cmp	r3, #0
 801182e:	d0f3      	beq.n	8011818 <enet_rxframe_drop+0x24>
 8011830:	681b      	ldr	r3, [r3, #0]
 8011832:	600b      	str	r3, [r1, #0]
 8011834:	e7f0      	b.n	8011818 <enet_rxframe_drop+0x24>
 8011836:	6824      	ldr	r4, [r4, #0]
 8011838:	3210      	adds	r2, #16
 801183a:	f3c4 0484 	ubfx	r4, r4, #2, #5
 801183e:	4422      	add	r2, r4
 8011840:	6002      	str	r2, [r0, #0]
 8011842:	2b00      	cmp	r3, #0
 8011844:	d0e8      	beq.n	8011818 <enet_rxframe_drop+0x24>
 8011846:	3310      	adds	r3, #16
 8011848:	e7f3      	b.n	8011832 <enet_rxframe_drop+0x3e>
 801184a:	bf00      	nop
 801184c:	20009bf0 	strdcs	r9, [r0], -r0
 8011850:	20009be8 	andcs	r9, r0, r8, ror #23
 8011854:	40029000 	andmi	r9, r2, r0

08011858 <enet_rxframe_size_get>:
 8011858:	b508      	push	{r3, lr}
 801185a:	4b0c      	ldr	r3, [pc, #48]	; (801188c <enet_rxframe_size_get+0x34>)
 801185c:	681b      	ldr	r3, [r3, #0]
 801185e:	6818      	ldr	r0, [r3, #0]
 8011860:	2800      	cmp	r0, #0
 8011862:	db10      	blt.n	8011886 <enet_rxframe_size_get+0x2e>
 8011864:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8011868:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801186c:	d003      	beq.n	8011876 <enet_rxframe_size_get+0x1e>
 801186e:	f7ff ffc1 	bl	80117f4 <enet_rxframe_drop>
 8011872:	2001      	movs	r0, #1
 8011874:	bd08      	pop	{r3, pc}
 8011876:	f000 0321 	and.w	r3, r0, #33	; 0x21
 801187a:	2b21      	cmp	r3, #33	; 0x21
 801187c:	d0f7      	beq.n	801186e <enet_rxframe_size_get+0x16>
 801187e:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8011882:	3804      	subs	r0, #4
 8011884:	e7f6      	b.n	8011874 <enet_rxframe_size_get+0x1c>
 8011886:	2000      	movs	r0, #0
 8011888:	e7f4      	b.n	8011874 <enet_rxframe_size_get+0x1c>
 801188a:	bf00      	nop
 801188c:	20009bf0 	strdcs	r9, [r0], -r0

08011890 <enet_initpara_reset>:
 8011890:	2200      	movs	r2, #0
 8011892:	4b08      	ldr	r3, [pc, #32]	; (80118b4 <enet_initpara_reset+0x24>)
 8011894:	e9c3 2200 	strd	r2, r2, [r3]
 8011898:	e9c3 2202 	strd	r2, r2, [r3, #8]
 801189c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80118a0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80118a4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80118a8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80118ac:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80118b0:	639a      	str	r2, [r3, #56]	; 0x38
 80118b2:	4770      	bx	lr
 80118b4:	20009bf8 	strdcs	r9, [r0], -r8

080118b8 <enet_deinit>:
 80118b8:	b508      	push	{r3, lr}
 80118ba:	f640 200e 	movw	r0, #2574	; 0xa0e
 80118be:	f7fe fcd6 	bl	801026e <rcu_periph_reset_enable>
 80118c2:	f640 200e 	movw	r0, #2574	; 0xa0e
 80118c6:	f7fe fcd4 	bl	8010272 <rcu_periph_reset_disable>
 80118ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80118ce:	f7ff bfdf 	b.w	8011890 <enet_initpara_reset>
	...

080118d4 <i2c_clock_config>:
 80118d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80118d6:	4605      	mov	r5, r0
 80118d8:	2002      	movs	r0, #2
 80118da:	460c      	mov	r4, r1
 80118dc:	4617      	mov	r7, r2
 80118de:	f7fe fd81 	bl	80103e4 <rcu_clock_freq_get>
 80118e2:	4603      	mov	r3, r0
 80118e4:	4828      	ldr	r0, [pc, #160]	; (8011988 <i2c_clock_config+0xb4>)
 80118e6:	4a29      	ldr	r2, [pc, #164]	; (801198c <i2c_clock_config+0xb8>)
 80118e8:	fbb3 f0f0 	udiv	r0, r3, r0
 80118ec:	4293      	cmp	r3, r2
 80118ee:	bf34      	ite	cc
 80118f0:	4601      	movcc	r1, r0
 80118f2:	2136      	movcs	r1, #54	; 0x36
 80118f4:	686e      	ldr	r6, [r5, #4]
 80118f6:	4a26      	ldr	r2, [pc, #152]	; (8011990 <i2c_clock_config+0xbc>)
 80118f8:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 80118fc:	430e      	orrs	r6, r1
 80118fe:	4294      	cmp	r4, r2
 8011900:	606e      	str	r6, [r5, #4]
 8011902:	d816      	bhi.n	8011932 <i2c_clock_config+0x5e>
 8011904:	3001      	adds	r0, #1
 8011906:	2835      	cmp	r0, #53	; 0x35
 8011908:	d90d      	bls.n	8011926 <i2c_clock_config+0x52>
 801190a:	2236      	movs	r2, #54	; 0x36
 801190c:	622a      	str	r2, [r5, #32]
 801190e:	0064      	lsls	r4, r4, #1
 8011910:	fbb3 f4f4 	udiv	r4, r3, r4
 8011914:	2c04      	cmp	r4, #4
 8011916:	bf38      	it	cc
 8011918:	2404      	movcc	r4, #4
 801191a:	69ea      	ldr	r2, [r5, #28]
 801191c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8011920:	4314      	orrs	r4, r2
 8011922:	61ec      	str	r4, [r5, #28]
 8011924:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011926:	2802      	cmp	r0, #2
 8011928:	d801      	bhi.n	801192e <i2c_clock_config+0x5a>
 801192a:	2202      	movs	r2, #2
 801192c:	e7ee      	b.n	801190c <i2c_clock_config+0x38>
 801192e:	6228      	str	r0, [r5, #32]
 8011930:	e7ed      	b.n	801190e <i2c_clock_config+0x3a>
 8011932:	4a18      	ldr	r2, [pc, #96]	; (8011994 <i2c_clock_config+0xc0>)
 8011934:	4294      	cmp	r4, r2
 8011936:	d8f5      	bhi.n	8011924 <i2c_clock_config+0x50>
 8011938:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801193c:	4351      	muls	r1, r2
 801193e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011942:	fbb1 f1f2 	udiv	r1, r1, r2
 8011946:	3101      	adds	r1, #1
 8011948:	6229      	str	r1, [r5, #32]
 801194a:	b9a7      	cbnz	r7, 8011976 <i2c_clock_config+0xa2>
 801194c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011950:	fbb3 f4f4 	udiv	r4, r3, r4
 8011954:	69eb      	ldr	r3, [r5, #28]
 8011956:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801195a:	61eb      	str	r3, [r5, #28]
 801195c:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8011960:	b90b      	cbnz	r3, 8011966 <i2c_clock_config+0x92>
 8011962:	f044 0401 	orr.w	r4, r4, #1
 8011966:	69eb      	ldr	r3, [r5, #28]
 8011968:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801196c:	61eb      	str	r3, [r5, #28]
 801196e:	69eb      	ldr	r3, [r5, #28]
 8011970:	4323      	orrs	r3, r4
 8011972:	61eb      	str	r3, [r5, #28]
 8011974:	e7d6      	b.n	8011924 <i2c_clock_config+0x50>
 8011976:	2219      	movs	r2, #25
 8011978:	4354      	muls	r4, r2
 801197a:	fbb3 f4f4 	udiv	r4, r3, r4
 801197e:	69eb      	ldr	r3, [r5, #28]
 8011980:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8011984:	e7e9      	b.n	801195a <i2c_clock_config+0x86>
 8011986:	bf00      	nop
 8011988:	000f4240 	andeq	r4, pc, r0, asr #4
 801198c:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8011990:	000186a0 	andeq	r8, r1, r0, lsr #13
 8011994:	00061a80 	andeq	r1, r6, r0, lsl #21

08011998 <i2c_ack_config>:
 8011998:	6803      	ldr	r3, [r0, #0]
 801199a:	2901      	cmp	r1, #1
 801199c:	bf0c      	ite	eq
 801199e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80119a2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80119a6:	6003      	str	r3, [r0, #0]
 80119a8:	4770      	bx	lr

080119aa <i2c_ackpos_config>:
 80119aa:	6803      	ldr	r3, [r0, #0]
 80119ac:	b919      	cbnz	r1, 80119b6 <i2c_ackpos_config+0xc>
 80119ae:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80119b2:	6003      	str	r3, [r0, #0]
 80119b4:	4770      	bx	lr
 80119b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80119ba:	e7fa      	b.n	80119b2 <i2c_ackpos_config+0x8>

080119bc <i2c_master_addressing>:
 80119bc:	3202      	adds	r2, #2
 80119be:	bf0c      	ite	eq
 80119c0:	f021 0101 	biceq.w	r1, r1, #1
 80119c4:	f041 0101 	orrne.w	r1, r1, #1
 80119c8:	6101      	str	r1, [r0, #16]
 80119ca:	4770      	bx	lr

080119cc <i2c_enable>:
 80119cc:	6803      	ldr	r3, [r0, #0]
 80119ce:	f043 0301 	orr.w	r3, r3, #1
 80119d2:	6003      	str	r3, [r0, #0]
 80119d4:	4770      	bx	lr

080119d6 <i2c_start_on_bus>:
 80119d6:	6803      	ldr	r3, [r0, #0]
 80119d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80119dc:	6003      	str	r3, [r0, #0]
 80119de:	4770      	bx	lr

080119e0 <i2c_stop_on_bus>:
 80119e0:	6803      	ldr	r3, [r0, #0]
 80119e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80119e6:	6003      	str	r3, [r0, #0]
 80119e8:	4770      	bx	lr

080119ea <i2c_data_transmit>:
 80119ea:	6101      	str	r1, [r0, #16]
 80119ec:	4770      	bx	lr

080119ee <i2c_data_receive>:
 80119ee:	6900      	ldr	r0, [r0, #16]
 80119f0:	b2c0      	uxtb	r0, r0
 80119f2:	4770      	bx	lr

080119f4 <i2c_flag_get>:
 80119f4:	098b      	lsrs	r3, r1, #6
 80119f6:	581a      	ldr	r2, [r3, r0]
 80119f8:	2301      	movs	r3, #1
 80119fa:	f001 011f 	and.w	r1, r1, #31
 80119fe:	408b      	lsls	r3, r1
 8011a00:	4213      	tst	r3, r2
 8011a02:	bf14      	ite	ne
 8011a04:	2001      	movne	r0, #1
 8011a06:	2000      	moveq	r0, #0
 8011a08:	4770      	bx	lr

08011a0a <i2c_flag_clear>:
 8011a0a:	f240 5301 	movw	r3, #1281	; 0x501
 8011a0e:	4299      	cmp	r1, r3
 8011a10:	b510      	push	{r4, lr}
 8011a12:	d102      	bne.n	8011a1a <i2c_flag_clear+0x10>
 8011a14:	6943      	ldr	r3, [r0, #20]
 8011a16:	6983      	ldr	r3, [r0, #24]
 8011a18:	bd10      	pop	{r4, pc}
 8011a1a:	2201      	movs	r2, #1
 8011a1c:	098c      	lsrs	r4, r1, #6
 8011a1e:	5823      	ldr	r3, [r4, r0]
 8011a20:	f001 011f 	and.w	r1, r1, #31
 8011a24:	408a      	lsls	r2, r1
 8011a26:	ea23 0302 	bic.w	r3, r3, r2
 8011a2a:	5023      	str	r3, [r4, r0]
 8011a2c:	e7f4      	b.n	8011a18 <i2c_flag_clear+0xe>
	...

08011a30 <__popcountsi2>:
 8011a30:	0843      	lsrs	r3, r0, #1
 8011a32:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8011a36:	1ac0      	subs	r0, r0, r3
 8011a38:	0883      	lsrs	r3, r0, #2
 8011a3a:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8011a3e:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8011a42:	4418      	add	r0, r3
 8011a44:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8011a48:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8011a4c:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8011a50:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8011a54:	0e00      	lsrs	r0, r0, #24
 8011a56:	4770      	bx	lr

08011a58 <__udivmoddi4>:
 8011a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a5c:	9e08      	ldr	r6, [sp, #32]
 8011a5e:	460d      	mov	r5, r1
 8011a60:	4604      	mov	r4, r0
 8011a62:	468e      	mov	lr, r1
 8011a64:	2b00      	cmp	r3, #0
 8011a66:	d14c      	bne.n	8011b02 <__udivmoddi4+0xaa>
 8011a68:	428a      	cmp	r2, r1
 8011a6a:	4694      	mov	ip, r2
 8011a6c:	d967      	bls.n	8011b3e <__udivmoddi4+0xe6>
 8011a6e:	fab2 f382 	clz	r3, r2
 8011a72:	b153      	cbz	r3, 8011a8a <__udivmoddi4+0x32>
 8011a74:	fa02 fc03 	lsl.w	ip, r2, r3
 8011a78:	f1c3 0220 	rsb	r2, r3, #32
 8011a7c:	fa01 fe03 	lsl.w	lr, r1, r3
 8011a80:	fa20 f202 	lsr.w	r2, r0, r2
 8011a84:	ea42 0e0e 	orr.w	lr, r2, lr
 8011a88:	409c      	lsls	r4, r3
 8011a8a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011a8e:	fbbe f1f7 	udiv	r1, lr, r7
 8011a92:	fa1f f58c 	uxth.w	r5, ip
 8011a96:	fb07 ee11 	mls	lr, r7, r1, lr
 8011a9a:	fb01 f005 	mul.w	r0, r1, r5
 8011a9e:	0c22      	lsrs	r2, r4, #16
 8011aa0:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8011aa4:	4290      	cmp	r0, r2
 8011aa6:	d90a      	bls.n	8011abe <__udivmoddi4+0x66>
 8011aa8:	eb1c 0202 	adds.w	r2, ip, r2
 8011aac:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8011ab0:	f080 8119 	bcs.w	8011ce6 <__udivmoddi4+0x28e>
 8011ab4:	4290      	cmp	r0, r2
 8011ab6:	f240 8116 	bls.w	8011ce6 <__udivmoddi4+0x28e>
 8011aba:	3902      	subs	r1, #2
 8011abc:	4462      	add	r2, ip
 8011abe:	1a12      	subs	r2, r2, r0
 8011ac0:	fbb2 f0f7 	udiv	r0, r2, r7
 8011ac4:	fb07 2210 	mls	r2, r7, r0, r2
 8011ac8:	fb00 f505 	mul.w	r5, r0, r5
 8011acc:	b2a4      	uxth	r4, r4
 8011ace:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011ad2:	42a5      	cmp	r5, r4
 8011ad4:	d90a      	bls.n	8011aec <__udivmoddi4+0x94>
 8011ad6:	eb1c 0404 	adds.w	r4, ip, r4
 8011ada:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011ade:	f080 8104 	bcs.w	8011cea <__udivmoddi4+0x292>
 8011ae2:	42a5      	cmp	r5, r4
 8011ae4:	f240 8101 	bls.w	8011cea <__udivmoddi4+0x292>
 8011ae8:	4464      	add	r4, ip
 8011aea:	3802      	subs	r0, #2
 8011aec:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8011af0:	2100      	movs	r1, #0
 8011af2:	1b64      	subs	r4, r4, r5
 8011af4:	b11e      	cbz	r6, 8011afe <__udivmoddi4+0xa6>
 8011af6:	40dc      	lsrs	r4, r3
 8011af8:	2300      	movs	r3, #0
 8011afa:	e9c6 4300 	strd	r4, r3, [r6]
 8011afe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011b02:	428b      	cmp	r3, r1
 8011b04:	d908      	bls.n	8011b18 <__udivmoddi4+0xc0>
 8011b06:	2e00      	cmp	r6, #0
 8011b08:	f000 80ea 	beq.w	8011ce0 <__udivmoddi4+0x288>
 8011b0c:	2100      	movs	r1, #0
 8011b0e:	e9c6 0500 	strd	r0, r5, [r6]
 8011b12:	4608      	mov	r0, r1
 8011b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011b18:	fab3 f183 	clz	r1, r3
 8011b1c:	2900      	cmp	r1, #0
 8011b1e:	d148      	bne.n	8011bb2 <__udivmoddi4+0x15a>
 8011b20:	42ab      	cmp	r3, r5
 8011b22:	d302      	bcc.n	8011b2a <__udivmoddi4+0xd2>
 8011b24:	4282      	cmp	r2, r0
 8011b26:	f200 80f8 	bhi.w	8011d1a <__udivmoddi4+0x2c2>
 8011b2a:	1a84      	subs	r4, r0, r2
 8011b2c:	eb65 0203 	sbc.w	r2, r5, r3
 8011b30:	2001      	movs	r0, #1
 8011b32:	4696      	mov	lr, r2
 8011b34:	2e00      	cmp	r6, #0
 8011b36:	d0e2      	beq.n	8011afe <__udivmoddi4+0xa6>
 8011b38:	e9c6 4e00 	strd	r4, lr, [r6]
 8011b3c:	e7df      	b.n	8011afe <__udivmoddi4+0xa6>
 8011b3e:	b902      	cbnz	r2, 8011b42 <__udivmoddi4+0xea>
 8011b40:	deff      	udf	#255	; 0xff
 8011b42:	fab2 f382 	clz	r3, r2
 8011b46:	2b00      	cmp	r3, #0
 8011b48:	f040 808e 	bne.w	8011c68 <__udivmoddi4+0x210>
 8011b4c:	1a88      	subs	r0, r1, r2
 8011b4e:	2101      	movs	r1, #1
 8011b50:	0c17      	lsrs	r7, r2, #16
 8011b52:	fa1f fe82 	uxth.w	lr, r2
 8011b56:	fbb0 f5f7 	udiv	r5, r0, r7
 8011b5a:	fb07 0015 	mls	r0, r7, r5, r0
 8011b5e:	0c22      	lsrs	r2, r4, #16
 8011b60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8011b64:	fb0e f005 	mul.w	r0, lr, r5
 8011b68:	4290      	cmp	r0, r2
 8011b6a:	d908      	bls.n	8011b7e <__udivmoddi4+0x126>
 8011b6c:	eb1c 0202 	adds.w	r2, ip, r2
 8011b70:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011b74:	d202      	bcs.n	8011b7c <__udivmoddi4+0x124>
 8011b76:	4290      	cmp	r0, r2
 8011b78:	f200 80cc 	bhi.w	8011d14 <__udivmoddi4+0x2bc>
 8011b7c:	4645      	mov	r5, r8
 8011b7e:	1a12      	subs	r2, r2, r0
 8011b80:	fbb2 f0f7 	udiv	r0, r2, r7
 8011b84:	fb07 2210 	mls	r2, r7, r0, r2
 8011b88:	fb0e fe00 	mul.w	lr, lr, r0
 8011b8c:	b2a4      	uxth	r4, r4
 8011b8e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011b92:	45a6      	cmp	lr, r4
 8011b94:	d908      	bls.n	8011ba8 <__udivmoddi4+0x150>
 8011b96:	eb1c 0404 	adds.w	r4, ip, r4
 8011b9a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8011b9e:	d202      	bcs.n	8011ba6 <__udivmoddi4+0x14e>
 8011ba0:	45a6      	cmp	lr, r4
 8011ba2:	f200 80b4 	bhi.w	8011d0e <__udivmoddi4+0x2b6>
 8011ba6:	4610      	mov	r0, r2
 8011ba8:	eba4 040e 	sub.w	r4, r4, lr
 8011bac:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8011bb0:	e7a0      	b.n	8011af4 <__udivmoddi4+0x9c>
 8011bb2:	f1c1 0720 	rsb	r7, r1, #32
 8011bb6:	408b      	lsls	r3, r1
 8011bb8:	fa22 fc07 	lsr.w	ip, r2, r7
 8011bbc:	ea4c 0c03 	orr.w	ip, ip, r3
 8011bc0:	fa25 fa07 	lsr.w	sl, r5, r7
 8011bc4:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8011bc8:	fbba f8f9 	udiv	r8, sl, r9
 8011bcc:	408d      	lsls	r5, r1
 8011bce:	fa20 f307 	lsr.w	r3, r0, r7
 8011bd2:	fb09 aa18 	mls	sl, r9, r8, sl
 8011bd6:	fa1f fe8c 	uxth.w	lr, ip
 8011bda:	432b      	orrs	r3, r5
 8011bdc:	fa00 f501 	lsl.w	r5, r0, r1
 8011be0:	fb08 f00e 	mul.w	r0, r8, lr
 8011be4:	0c1c      	lsrs	r4, r3, #16
 8011be6:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8011bea:	42a0      	cmp	r0, r4
 8011bec:	fa02 f201 	lsl.w	r2, r2, r1
 8011bf0:	d90b      	bls.n	8011c0a <__udivmoddi4+0x1b2>
 8011bf2:	eb1c 0404 	adds.w	r4, ip, r4
 8011bf6:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8011bfa:	f080 8086 	bcs.w	8011d0a <__udivmoddi4+0x2b2>
 8011bfe:	42a0      	cmp	r0, r4
 8011c00:	f240 8083 	bls.w	8011d0a <__udivmoddi4+0x2b2>
 8011c04:	f1a8 0802 	sub.w	r8, r8, #2
 8011c08:	4464      	add	r4, ip
 8011c0a:	1a24      	subs	r4, r4, r0
 8011c0c:	b298      	uxth	r0, r3
 8011c0e:	fbb4 f3f9 	udiv	r3, r4, r9
 8011c12:	fb09 4413 	mls	r4, r9, r3, r4
 8011c16:	fb03 fe0e 	mul.w	lr, r3, lr
 8011c1a:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8011c1e:	45a6      	cmp	lr, r4
 8011c20:	d908      	bls.n	8011c34 <__udivmoddi4+0x1dc>
 8011c22:	eb1c 0404 	adds.w	r4, ip, r4
 8011c26:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8011c2a:	d26a      	bcs.n	8011d02 <__udivmoddi4+0x2aa>
 8011c2c:	45a6      	cmp	lr, r4
 8011c2e:	d968      	bls.n	8011d02 <__udivmoddi4+0x2aa>
 8011c30:	3b02      	subs	r3, #2
 8011c32:	4464      	add	r4, ip
 8011c34:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8011c38:	fba0 9302 	umull	r9, r3, r0, r2
 8011c3c:	eba4 040e 	sub.w	r4, r4, lr
 8011c40:	429c      	cmp	r4, r3
 8011c42:	46c8      	mov	r8, r9
 8011c44:	469e      	mov	lr, r3
 8011c46:	d354      	bcc.n	8011cf2 <__udivmoddi4+0x29a>
 8011c48:	d051      	beq.n	8011cee <__udivmoddi4+0x296>
 8011c4a:	2e00      	cmp	r6, #0
 8011c4c:	d067      	beq.n	8011d1e <__udivmoddi4+0x2c6>
 8011c4e:	ebb5 0308 	subs.w	r3, r5, r8
 8011c52:	eb64 040e 	sbc.w	r4, r4, lr
 8011c56:	40cb      	lsrs	r3, r1
 8011c58:	fa04 f707 	lsl.w	r7, r4, r7
 8011c5c:	431f      	orrs	r7, r3
 8011c5e:	40cc      	lsrs	r4, r1
 8011c60:	e9c6 7400 	strd	r7, r4, [r6]
 8011c64:	2100      	movs	r1, #0
 8011c66:	e74a      	b.n	8011afe <__udivmoddi4+0xa6>
 8011c68:	fa02 fc03 	lsl.w	ip, r2, r3
 8011c6c:	f1c3 0020 	rsb	r0, r3, #32
 8011c70:	40c1      	lsrs	r1, r0
 8011c72:	409d      	lsls	r5, r3
 8011c74:	fa24 f000 	lsr.w	r0, r4, r0
 8011c78:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8011c7c:	4328      	orrs	r0, r5
 8011c7e:	fbb1 f5f7 	udiv	r5, r1, r7
 8011c82:	fb07 1115 	mls	r1, r7, r5, r1
 8011c86:	fa1f fe8c 	uxth.w	lr, ip
 8011c8a:	0c02      	lsrs	r2, r0, #16
 8011c8c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8011c90:	fb05 f10e 	mul.w	r1, r5, lr
 8011c94:	4291      	cmp	r1, r2
 8011c96:	fa04 f403 	lsl.w	r4, r4, r3
 8011c9a:	d908      	bls.n	8011cae <__udivmoddi4+0x256>
 8011c9c:	eb1c 0202 	adds.w	r2, ip, r2
 8011ca0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8011ca4:	d22f      	bcs.n	8011d06 <__udivmoddi4+0x2ae>
 8011ca6:	4291      	cmp	r1, r2
 8011ca8:	d92d      	bls.n	8011d06 <__udivmoddi4+0x2ae>
 8011caa:	3d02      	subs	r5, #2
 8011cac:	4462      	add	r2, ip
 8011cae:	1a52      	subs	r2, r2, r1
 8011cb0:	fbb2 f1f7 	udiv	r1, r2, r7
 8011cb4:	fb07 2211 	mls	r2, r7, r1, r2
 8011cb8:	b280      	uxth	r0, r0
 8011cba:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8011cbe:	fb01 f20e 	mul.w	r2, r1, lr
 8011cc2:	4282      	cmp	r2, r0
 8011cc4:	d908      	bls.n	8011cd8 <__udivmoddi4+0x280>
 8011cc6:	eb1c 0000 	adds.w	r0, ip, r0
 8011cca:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8011cce:	d216      	bcs.n	8011cfe <__udivmoddi4+0x2a6>
 8011cd0:	4282      	cmp	r2, r0
 8011cd2:	d914      	bls.n	8011cfe <__udivmoddi4+0x2a6>
 8011cd4:	3902      	subs	r1, #2
 8011cd6:	4460      	add	r0, ip
 8011cd8:	1a80      	subs	r0, r0, r2
 8011cda:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8011cde:	e73a      	b.n	8011b56 <__udivmoddi4+0xfe>
 8011ce0:	4631      	mov	r1, r6
 8011ce2:	4630      	mov	r0, r6
 8011ce4:	e70b      	b.n	8011afe <__udivmoddi4+0xa6>
 8011ce6:	4671      	mov	r1, lr
 8011ce8:	e6e9      	b.n	8011abe <__udivmoddi4+0x66>
 8011cea:	4610      	mov	r0, r2
 8011cec:	e6fe      	b.n	8011aec <__udivmoddi4+0x94>
 8011cee:	454d      	cmp	r5, r9
 8011cf0:	d2ab      	bcs.n	8011c4a <__udivmoddi4+0x1f2>
 8011cf2:	ebb9 0802 	subs.w	r8, r9, r2
 8011cf6:	eb63 0e0c 	sbc.w	lr, r3, ip
 8011cfa:	3801      	subs	r0, #1
 8011cfc:	e7a5      	b.n	8011c4a <__udivmoddi4+0x1f2>
 8011cfe:	4641      	mov	r1, r8
 8011d00:	e7ea      	b.n	8011cd8 <__udivmoddi4+0x280>
 8011d02:	4603      	mov	r3, r0
 8011d04:	e796      	b.n	8011c34 <__udivmoddi4+0x1dc>
 8011d06:	4645      	mov	r5, r8
 8011d08:	e7d1      	b.n	8011cae <__udivmoddi4+0x256>
 8011d0a:	46d0      	mov	r8, sl
 8011d0c:	e77d      	b.n	8011c0a <__udivmoddi4+0x1b2>
 8011d0e:	4464      	add	r4, ip
 8011d10:	3802      	subs	r0, #2
 8011d12:	e749      	b.n	8011ba8 <__udivmoddi4+0x150>
 8011d14:	3d02      	subs	r5, #2
 8011d16:	4462      	add	r2, ip
 8011d18:	e731      	b.n	8011b7e <__udivmoddi4+0x126>
 8011d1a:	4608      	mov	r0, r1
 8011d1c:	e70a      	b.n	8011b34 <__udivmoddi4+0xdc>
 8011d1e:	4631      	mov	r1, r6
 8011d20:	e6ed      	b.n	8011afe <__udivmoddi4+0xa6>
 8011d22:	bf00      	nop

Disassembly of section .rodata:

08011d24 <vtable for DisplayHandler-0xa0>:
	...
 8011d2c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011d30:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8011d34:	00000000 	andeq	r0, r0, r0
 8011d38:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011d3c:	353a3731 	ldrcc	r3, [sl, #-1841]!	; 0xfffff8cf
 8011d40:	35343a31 	ldrcc	r3, [r4, #-2609]!	; 0xfffff5cf
 8011d44:	72614d00 	rsbvc	r4, r1, #0, 26
 8011d48:	20393120 	eorscs	r3, r9, r0, lsr #2
 8011d4c:	32323032 	eorscc	r3, r2, #50	; 0x32
 8011d50:	43417300 	movtmi	r7, #4864	; 0x1300
 8011d54:	3145204e 	cmpcc	r5, lr, asr #32
 8011d58:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8011d5c:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8011d60:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8011d64:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8011d68:	5f2e006d 	svcpl	0x002e006d
 8011d6c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8011d70:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 8011d74:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8011d78:	6f6e0070 	svcvs	0x006e0070
 8011d7c:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 8011d80:	204e4341 	subcs	r4, lr, r1, asr #6
 8011d84:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8011d88:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8011d8c:	41730058 	cmnmi	r3, r8, asr r0
 8011d90:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011d94:	31332e31 	teqcc	r3, r1, lsr lr
 8011d98:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8011d9c:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8011da0:	21786d64 	cmncs	r8, r4, ror #26
 8011da4:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
 8011da8:	00236b61 	eoreq	r6, r3, r1, ror #22
 8011dac:	2362616d 	cmncs	r2, #1073741851	; 0x4000001b
 8011db0:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
 8011db4:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8011db8:	6c730023 	ldclvs	0, cr0, [r3], #-140	; 0xffffff74
 8011dbc:	2373746f 	cmncs	r3, #1862270976	; 0x6f000000
 8011dc0:	00000000 	andeq	r0, r0, r0

08011dc4 <vtable for DisplayHandler>:
	...
 8011dcc:	08007b87 	stmdaeq	r0, {r0, r1, r2, r7, r8, r9, fp, ip, sp, lr}
 8011dd0:	08007bdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 8011dd4:	08007bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}

08011dd8 <vtable for E131Reboot>:
	...
 8011de0:	08007b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip, sp, lr}
 8011de4:	08007bd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 8011de8:	08007bad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, fp, ip, sp, lr}

08011dec <CSWTCH.85>:
 8011dec:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011df0:	 	eorcc	r3, lr, #-2147483631	; 0x80000011

08011df1 <SOFTWARE_VERSION>:
 8011df1:	00322e31 	eorseq	r2, r2, r1, lsr lr
 8011df5:	 	andeq	r0, r0, r0

08011df8 <vtable for DmxInput>:
	...
 8011e00:	08008201 	stmdaeq	r0, {r0, r9, pc}
 8011e04:	0800829d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, pc}
 8011e08:	08008205 	stmdaeq	r0, {r0, r2, r9, pc}
 8011e0c:	08008235 	stmdaeq	r0, {r0, r2, r4, r5, r9, pc}
 8011e10:	08008269 	stmdaeq	r0, {r0, r3, r5, r6, r9, pc}
 8011e14:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8011e18:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8011e1c:	00302e30 	eorseq	r2, r0, r0, lsr lr
 8011e20:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8011e24:	73252073 			; <UNDEFINED> instruction: 0x73252073
 8011e28:	33444700 	movtcc	r4, #18176	; 0x4700
 8011e2c:	30314632 	eorscc	r4, r1, r2, lsr r6
 8011e30:	30005237 	andcc	r5, r0, r7, lsr r2
 8011e34:	6f4e202e 	svcvs	0x004e202e
 8011e38:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8011e3c:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8011e40:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8011e44:	202c6465 	eorcs	r6, ip, r5, ror #8
 8011e48:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8011e4c:	6f687320 	svcvs	0x00687320
 8011e50:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8011e54:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8011e58:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8011e5c:	000a216e 	andeq	r2, sl, lr, ror #2
 8011e60:	00505448 	subseq	r5, r0, r8, asr #8
 8011e64:	0050544c 	subseq	r5, r0, ip, asr #8
 8011e68:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8011e6c:	000a6567 	andeq	r6, sl, r7, ror #10
 8011e70:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8011e74:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8011e78:	203a2065 	eorscs	r2, sl, r5, rrx
 8011e7c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011e80:	20000a64 	andcs	r0, r0, r4, ror #20
 8011e84:	20444943 	subcs	r4, r4, r3, asr #18
 8011e88:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011e8c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8011e90:	20000a73 	andcs	r0, r0, r3, ror sl
 8011e94:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011e98:	000a7475 	andeq	r7, sl, r5, ror r4
 8011e9c:	6f502020 	svcvs	0x00502020
 8011ea0:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8011ea4:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8011ea8:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8011eac:	20657372 	rsbcs	r7, r5, r2, ror r3
 8011eb0:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8011eb4:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8011eb8:	20000a5d 	andcs	r0, r0, sp, asr sl
 8011ebc:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8011ec0:	20000a74 	andcs	r0, r0, r4, ror sl
 8011ec4:	726f5020 	rsbvc	r5, pc, #32
 8011ec8:	32252074 	eorcc	r2, r5, #116	; 0x74
 8011ecc:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8011ed0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8011ed4:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8011ed8:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8011edc:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8011ee0:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8011ee4:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8011ee8:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011eec:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8011ef0:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8011ef4:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8011ef8:	000a6465 	andeq	r6, sl, r5, ror #8

08011efc <E131MsgConst::START>:
 8011efc:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8011f00:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011f04:	43417320 	movtmi	r7, #4896	; 0x1320
 8011f08:	3145204e 	cmpcc	r5, lr, asr #32
 8011f0c:	0031332e 	eorseq	r3, r1, lr, lsr #6

08011f10 <E131MsgConst::PARAMS>:
 8011f10:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011f14:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8011f18:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8011f1c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011f20:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011f24:	 	movwvc	r3, #307	; 0x133

08011f27 <E131MsgConst::STARTED>:
 8011f27:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011f2b:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011f2f:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8011f33:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8011f37:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8011f3b:	3a227325 	bcc	88aebd7 <__exidx_end+0x89b01f>
 8011f3f:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011f43:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8011f47:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8011f4b:	2522000a 	strcs	r0, [r2, #-10]!
 8011f4f:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8011f53:	23002c64 	movwcs	r2, #3172	; 0xc64
 8011f57:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8011f5b:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8011f5f:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011f63:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8011f67:	00747570 	rsbseq	r7, r4, r0, ror r5
 8011f6b:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8011f6f:	00707468 	rsbseq	r7, r0, r8, ror #8
 8011f73:	20584d44 	subscs	r4, r8, r4, asr #26
 8011f77:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011f7b:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8011f7f:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8011f83:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011f87:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8011f8b:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08011f8e <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8011f8e:	61736964 	cmnvs	r3, r4, ror #18
 8011f92:	5f656c62 	svcpl	0x00656c62
 8011f96:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8011f9a:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011f9e:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8011a39 <__popcountsi2+0x9>
 8011fa2:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08011fa4 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8011fa4:	61736964 	cmnvs	r3, r4, ror #18
 8011fa8:	5f656c62 	svcpl	0x00656c62
 8011fac:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011fb0:	5f6b726f 	svcpl	0x006b726f
 8011fb4:	61746164 	cmnvs	r4, r4, ror #2
 8011fb8:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8011fbc:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011fc0:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8011a5b <__udivmoddi4+0x3>
 8011fc4:	 	rsbsvc	r0, r0, #116	; 0x74

08011fc6 <E131ParamsConst::PRIORITY>:
 8011fc6:	6f697270 	svcvs	0x00697270
 8011fca:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011fce:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011fd2:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8011fd6:	72700000 	rsbsvc	r0, r0, #0
 8011fda:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011fde:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8011fe2:	5f74726f 	svcpl	0x0074726f
 8011fe6:	00000062 	andeq	r0, r0, r2, rrx
 8011fea:	6f697270 	svcvs	0x00697270
 8011fee:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011ff2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011ff6:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8011ffa:	72700000 	rsbsvc	r0, r0, #0
 8011ffe:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012002:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8012006:	5f74726f 	svcpl	0x0074726f
 801200a:	00000064 	andeq	r0, r0, r4, rrx

0801200e <E131ParamsConst::FILE_NAME>:
 801200e:	31333165 	teqcc	r3, r5, ror #2
 8012012:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08012017 <E117Const::ACN_PACKET_IDENTIFIER>:
 8012017:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 801201b:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 801201f:	00000037 	andeq	r0, r0, r7, lsr r0

08012023 <E131BridgeConst::VERSION>:
 8012023:	30251801 	eorcc	r1, r5, r1, lsl #16
 8012027:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 801202b:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 801202f:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8012033:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8012037:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 801203b:	30252d78 	eorcc	r2, r5, r8, ror sp
 801203f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8012043:	30257832 	eorcc	r7, r5, r2, lsr r8
 8012047:	30257832 	eorcc	r7, r5, r2, lsr r8
 801204b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801204f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8012053:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 8012057:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 801205b:	0a646e65 	beq	992d9f7 <__exidx_end+0x1919e3f>
 801205f:	72422000 	subvc	r2, r2, #0
 8012063:	206b6165 	rsbcs	r6, fp, r5, ror #2
 8012067:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801206b:	3a202020 	bcc	881a0f3 <__exidx_end+0x80653b>
 801206f:	0a642520 	beq	991b4f7 <__exidx_end+0x190793f>
 8012073:	414d2000 	mrsmi	r2, (UNDEF: 77)
 8012077:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 801207b:	2020656d 	eorcs	r6, r0, sp, ror #10
 801207f:	3a202020 	bcc	881a107 <__exidx_end+0x80654f>
 8012083:	0a642520 	beq	991b50b <__exidx_end+0x1907953>
 8012087:	65522000 	ldrbvs	r2, [r2, #-0]
 801208b:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 801208f:	61722068 	cmnvs	r2, r8, rrx
 8012093:	3a206574 	bcc	882b66b <__exidx_end+0x817ab3>
 8012097:	0a642520 	beq	991b51f <__exidx_end+0x1907967>
 801209b:	6c532000 	mravs	r2, r3, acc0
 801209f:	2073746f 	rsbscs	r7, r3, pc, ror #8
 80120a3:	20202020 	eorcs	r2, r0, r0, lsr #32
 80120a7:	3a202020 	bcc	881a12f <__exidx_end+0x806577>
 80120ab:	0a642520 	beq	991b533 <__exidx_end+0x190797b>
	...

080120b0 <vtable for DmxSend>:
	...
 80120b8:	08009683 	stmdaeq	r0, {r0, r1, r7, r9, sl, ip, pc}
 80120bc:	08009751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, ip, pc}
 80120c0:	08009685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip, pc}
 80120c4:	080096b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, ip, pc}
 80120c8:	080096e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, ip, pc}
 80120cc:	08009681 	stmdaeq	r0, {r0, r7, r9, sl, ip, pc}
 80120d0:	080096f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, ip, pc}
 80120d4:	0800ebed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 80120d8:	0800ebe3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 80120dc:	0800ebe7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 80120e0:	0800ebf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}

080120e4 <DmxParamsConst::BREAK_TIME>:
 80120e4:	61657262 	cmnvs	r5, r2, ror #4
 80120e8:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80120ec:	 	movwvc	r6, #1389	; 0x56d

080120ef <DmxParamsConst::SLOTS_COUNT>:
 80120ef:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80120f7 <DmxParamsConst::SLOTS_COUNT+0x8>
 80120f3:	6f635f73 	svcvs	0x00635f73
 80120f7:	00746e75 	rsbseq	r6, r4, r5, ror lr

080120fb <DmxParamsConst::REFRESH_RATE>:
 80120fb:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80120ff:	5f687365 	svcpl	0x00687365
 8012103:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08012108 <DmxParamsConst::MAB_TIME>:
 8012108:	5f62616d 	svcpl	0x0062616d
 801210c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08012111 <DmxParamsConst::FILE_NAME>:
 8012111:	61726170 	cmnvs	r2, r0, ror r1
 8012115:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8012119:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 801211d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012121:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012125:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8012129:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 801212d:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 8012131:	000a7325 	andeq	r7, sl, r5, lsr #6
 8012135:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012139:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801213d:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8012141:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8012145:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8012149:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 801214d:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 8012151:	73696400 	cmnvc	r9, #0, 8
 8012155:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012159:	0a73253a 	beq	9cdb649 <__exidx_end+0x1cc7a91>
 801215d:	74667400 	strbtvc	r7, [r6], #-1024	; 0xfffffc00
 8012161:	73253a70 			; <UNDEFINED> instruction: 0x73253a70
 8012165:	6576000a 	ldrbvs	r0, [r6, #-10]!
 8012169:	6f697372 	svcvs	0x00697372
 801216d:	73253a6e 			; <UNDEFINED> instruction: 0x73253a6e
 8012171:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8012175:	3a656d69 	bcc	996d721 <__exidx_end+0x1959b69>
 8012179:	73752520 	cmnvc	r5, #32, 10	; 0x8000000
 801217d:	5245000a 	subpl	r0, r5, #10
 8012181:	23524f52 	cmpcs	r2, #328	; 0x148
 8012185:	7465673f 	strbtvc	r6, [r5], #-1855	; 0xfffff8c1
 8012189:	6674000a 	ldrbtvs	r0, [r4], -sl
 801218d:	00237074 	eoreq	r7, r3, r4, ror r0
 8012191:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012195:	2379616c 	cmncs	r9, #108, 2
 8012199:	52524500 	subspl	r4, r2, #0, 10
 801219d:	2123524f 			; <UNDEFINED> instruction: 0x2123524f
 80121a1:	5245000a 	subpl	r0, r5, #10
 80121a5:	23524f52 	cmpcs	r2, #328	; 0x148
 80121a9:	72000a3f 	andvc	r0, r0, #258048	; 0x3f000
 80121ad:	6f6f6265 	svcvs	0x006f6265
 80121b1:	00232374 	eoreq	r2, r3, r4, ror r3
 80121b5:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80121b9:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 80121bd:	2a237473 	bcs	88ef391 <__exidx_end+0x8db7d9>
 80121c1:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80121c5:	23656d69 	cmncs	r5, #6720	; 0x1a40
 80121c9:	72657600 	rsbvc	r7, r5, #0, 12
 80121cd:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80121d1:	65670023 	strbvs	r0, [r7, #-35]!	; 0xffffffdd
 80121d5:	66002374 			; <UNDEFINED> instruction: 0x66002374
 80121d9:	6f746361 	svcvs	0x00746361
 80121dd:	23237972 			; <UNDEFINED> instruction: 0x23237972
	...

080121e2 <s_Node>:
 80121e2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80121e6:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80121f2:	41730000 	cmnmi	r3, r0
 80121f6:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80121fa:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8012206:	2043534f 	subcs	r5, r3, pc, asr #6
 801220a:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801220e:	00007265 	andeq	r7, r0, r5, ror #4
 8012212:	00000000 	andeq	r0, r0, r0
 8012216:	544c0000 	strbpl	r0, [ip], #-0
 801221a:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801222a:	2043534f 	subcs	r5, r3, pc, asr #6
 801222e:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8012232:	0000746e 	andeq	r7, r0, lr, ror #8
 8012236:	00000000 	andeq	r0, r0, r0
 801223a:	44520000 	ldrbmi	r0, [r2], #-0
 801223e:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8012242:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8012246:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801224a:	0000796c 	andeq	r7, r0, ip, ror #18
 801224e:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8012252:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 801225e:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8012262:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8012272:	00504444 	subseq	r4, r0, r4, asr #8
	...

08012284 <s_Output>:
 8012284:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8012290:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801229c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80122a0:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80122a4:	00000000 	andeq	r0, r0, r0
 80122a8:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80122ac:	0000006c 	andeq	r0, r0, ip, rrx
 80122b0:	00000000 	andeq	r0, r0, r0
 80122b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80122b8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80122bc:	00000000 	andeq	r0, r0, r0
 80122c0:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80122cc:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80122d0:	00006769 	andeq	r6, r0, r9, ror #14
 80122d4:	00000000 	andeq	r0, r0, r0
 80122d8:	70657453 	rsbvc	r7, r5, r3, asr r4
 80122dc:	00726570 	rsbseq	r6, r2, r0, ror r5
 80122e0:	00000000 	andeq	r0, r0, r0
 80122e4:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80122e8:	00007265 	andeq	r7, r0, r5, ror #4
 80122ec:	00000000 	andeq	r0, r0, r0
 80122f0:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80122f4:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80122f8:	00000000 	andeq	r0, r0, r0
 80122fc:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8012300:	00006c61 	andeq	r6, r0, r1, ror #24
 8012304:	00000000 	andeq	r0, r0, r0
 8012308:	20424752 	subcs	r4, r2, r2, asr r7
 801230c:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8012310:	0000006c 	andeq	r0, r0, ip, rrx

08012314 <RemoteConfig::s_GET>:
 8012314:	0800ae71 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, fp, sp, pc}
 8012318:	00000000 	andeq	r0, r0, r0
 801231c:	080121ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sp}
 8012320:	00000008 	andeq	r0, r0, r8
 8012324:	0800a341 	stmdaeq	r0, {r0, r6, r8, r9, sp, pc}
 8012328:	00000000 	andeq	r0, r0, r0
 801232c:	080121b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sp}
 8012330:	00000005 	andeq	r0, r0, r5
 8012334:	0800a341 	stmdaeq	r0, {r0, r6, r8, r9, sp, pc}
 8012338:	00000000 	andeq	r0, r0, r0
 801233c:	080121bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp}
 8012340:	00000006 	andeq	r0, r0, r6
 8012344:	0800a535 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, sp, pc}
 8012348:	00000000 	andeq	r0, r0, r0
 801234c:	080121c2 	stmdaeq	r1, {r1, r6, r7, r8, sp}
 8012350:	00000007 	andeq	r0, r0, r7
 8012354:	0800a4f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, sp, pc}
 8012358:	00000000 	andeq	r0, r0, r0
 801235c:	080121ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sp}
 8012360:	00000008 	andeq	r0, r0, r8
 8012364:	0800a419 	stmdaeq	r0, {r0, r3, r4, sl, sp, pc}
 8012368:	00000000 	andeq	r0, r0, r0
 801236c:	08012191 	stmdaeq	r1, {r0, r4, r7, r8, sp}
 8012370:	00000008 	andeq	r0, r0, r8
 8012374:	0800a7b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, sp, pc}
 8012378:	00000000 	andeq	r0, r0, r0
 801237c:	080121d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sp}
 8012380:	00010004 	andeq	r0, r1, r4
 8012384:	0800a499 	stmdaeq	r0, {r0, r3, r4, r7, sl, sp, pc}
 8012388:	00000000 	andeq	r0, r0, r0
 801238c:	0801218b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sp}
 8012390:	00000005 	andeq	r0, r0, r5
 8012394:	0800ab59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, fp, sp, pc}
 8012398:	00000000 	andeq	r0, r0, r0
 801239c:	080121d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sp}
 80123a0:	00000009 	andeq	r0, r0, r9

080123a4 <RemoteConfig::s_SET>:
 80123a4:	0800a475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, sp, pc}
 80123a8:	00000000 	andeq	r0, r0, r0
 80123ac:	0801218b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sp}
 80123b0:	00010005 	andeq	r0, r1, r5
 80123b4:	0800a589 	stmdaeq	r0, {r0, r3, r7, r8, sl, sp, pc}
 80123b8:	00000000 	andeq	r0, r0, r0
 80123bc:	08012191 	stmdaeq	r1, {r0, r4, r7, r8, sp}
 80123c0:	00010008 	andeq	r0, r1, r8
 80123c4:	6f626552 	svcvs	0x00626552
 80123c8:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80123cc:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80123d0:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80123d4:	6f6f6265 	svcvs	0x006f6265
 80123d8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80123dc:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80123e0:	6f637200 	svcvs	0x00637200
 80123e4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80123e8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80123ec:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80123f0:	6b726f77 	blvs	9cae1d4 <__exidx_end+0x1c9a61c>
 80123f4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80123f8:	73696400 	cmnvc	r9, #0, 8
 80123fc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012400:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012404:	33316500 	teqcc	r1, #0, 10
 8012408:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 801240c:	61700074 	cmnvs	r0, r4, ror r0
 8012410:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 8012414:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012418:	00000000 	andeq	r0, r0, r0

0801241c <RemoteConfig::s_TXT>:
 801241c:	0800a7c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, sp, pc}
 8012420:	00000000 	andeq	r0, r0, r0
 8012424:	0800aa7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp, sp, pc}
 8012428:	00000000 	andeq	r0, r0, r0
 801242c:	080123e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sp}
 8012430:	0000000b 	andeq	r0, r0, fp
 8012434:	0000000c 	andeq	r0, r0, ip
 8012438:	0800a7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp, pc}
 801243c:	00000000 	andeq	r0, r0, r0
 8012440:	0800aab1 	stmdaeq	r0, {r0, r4, r5, r7, r9, fp, sp, pc}
 8012444:	00000000 	andeq	r0, r0, r0
 8012448:	080123ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sp}
 801244c:	0000000b 	andeq	r0, r0, fp
 8012450:	00000000 	andeq	r0, r0, r0
 8012454:	0800a871 	stmdaeq	r0, {r0, r4, r5, r6, fp, sp, pc}
 8012458:	00000000 	andeq	r0, r0, r0
 801245c:	0800ab2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, sp, pc}
 8012460:	00000000 	andeq	r0, r0, r0
 8012464:	080123f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sp}
 8012468:	0000000b 	andeq	r0, r0, fp
 801246c:	0000000f 	andeq	r0, r0, pc
 8012470:	0800a819 	stmdaeq	r0, {r0, r3, r4, fp, sp, pc}
 8012474:	00000000 	andeq	r0, r0, r0
 8012478:	0800aad9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, fp, sp, pc}
 801247c:	00000000 	andeq	r0, r0, r0
 8012480:	08012405 	stmdaeq	r1, {r0, r2, sl, sp}
 8012484:	00000008 	andeq	r0, r0, r8
 8012488:	00000004 	andeq	r0, r0, r4
 801248c:	0800a845 	stmdaeq	r0, {r0, r2, r6, fp, sp, pc}
 8012490:	00000000 	andeq	r0, r0, r0
 8012494:	0800ab05 	stmdaeq	r0, {r0, r2, r8, r9, fp, sp, pc}
 8012498:	00000000 	andeq	r0, r0, r0
 801249c:	0801240e 	stmdaeq	r1, {r1, r2, r3, sl, sp}
 80124a0:	0000000a 	andeq	r0, r0, sl
 80124a4:	00000002 	andeq	r0, r0, r2
 80124a8:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 80124ac:	4f500054 	svcmi	0x00500054
 80124b0:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 80124b4:	00505454 	subseq	r5, r0, r4, asr r4
 80124b8:	31000a20 	tstcc	r0, r0, lsr #20
 80124bc:	3a00312e 	bcc	801e97c <__exidx_end+0xadc4>
 80124c0:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 80124c4:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 80124c8:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 80124cc:	3b200065 	blcc	8812668 <__exidx_end+0x7feab0>
 80124d0:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 80124d4:	6163696c 	cmnvs	r3, ip, ror #18
 80124d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80124dc:	6f736a2f 	svcvs	0x00736a2f
 80124e0:	6f43006e 	svcvs	0x0043006e
 80124e4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80124e8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80124ec:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80124f0:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80124f4:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80124f8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80124fc:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8012500:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8012504:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8012508:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801250c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8012510:	2f00736a 	svccs	0x0000736a
 8012514:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012518:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 801251c:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8012520:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012524:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8012528:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801252c:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8012530:	616c7073 	smcvs	50947	; 0xc703
 8012534:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8012538:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801253c:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8012540:	6f736a2f 	svcvs	0x00736a2f
 8012544:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8012548:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801254c:	62657200 	rsbvs	r7, r5, #0, 4
 8012550:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8012554:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8012558:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 801255c:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8012560:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8012564:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8012568:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801256c:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8012570:	0a3e6c6d 	beq	8fad72c <__exidx_end+0xf99b74>
 8012574:	6165683c 	cmnvs	r5, ip, lsr r8
 8012578:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 801257c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8012580:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8012584:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8012588:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801258c:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8012590:	6165682f 	cmnvs	r5, pc, lsr #16
 8012594:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8012598:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801259c:	31683c3e 	cmncc	r8, lr, lsr ip
 80125a0:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 80125a4:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 80125a8:	6f622f3c 	svcvs	0x00622f3c
 80125ac:	0a3e7964 	beq	8fb0b44 <__exidx_end+0xf9cf8c>
 80125b0:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 80125b4:	0a3e6c6d 	beq	8fad770 <__exidx_end+0xf99bb8>
 80125b8:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 80125bc:	71655220 	cmnvc	r5, r0, lsr #4
 80125c0:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80125c4:	746f4e00 	strbtvc	r4, [pc], #-3584	; 80125cc <RemoteConfig::s_TXT+0x1b0>
 80125c8:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8011fb0 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT+0xc>
 80125cc:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 80125d0:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 80125d4:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 80125d8:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 80125dc:	6f542079 	svcvs	0x00542079
 80125e0:	614c206f 	cmpvs	ip, pc, rrx
 80125e4:	00656772 	rsbeq	r6, r5, r2, ror r7
 80125e8:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 80125ec:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 80125f0:	20495255 	subcs	r5, r9, r5, asr r2
 80125f4:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80125f8:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80125fc:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8012600:	616e7265 	cmnvs	lr, r5, ror #4
 8012604:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8012608:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 801260c:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8012610:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 8012614:	6f687465 	svcvs	0x00687465
 8012618:	6f4e2064 	svcvs	0x004e2064
 801261c:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8012620:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8012624:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012628:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 801262c:	6f697372 	svcvs	0x00697372
 8012630:	6f4e206e 	svcvs	0x004e206e
 8012634:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 8012638:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 801263c:	00646574 	rsbeq	r6, r4, r4, ror r5
 8012640:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8012644:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8012648:	6f727245 	svcvs	0x00727245
 801264c:	4b4f0072 	blmi	93d281c <__exidx_end+0x13bec64>
 8012650:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8012654:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8012658:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 801265c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012660:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8012664:	0a3e6c6d 	beq	8fad820 <__exidx_end+0xf99c68>
 8012668:	6165683c 	cmnvs	r5, ip, lsr r8
 801266c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8012670:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8012674:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8012678:	2f3c7325 	svccs	0x003c7325
 801267c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8012680:	2f3c3e65 	svccs	0x003c3e65
 8012684:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8012688:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 801268c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8012690:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8012694:	2f3c7325 	svccs	0x003c7325
 8012698:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 801269c:	646f622f 	strbtvs	r6, [pc], #-559	; 80126a4 <RemoteConfig::s_TXT+0x288>
 80126a0:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 80126a4:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80126a8:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80126ac:	50545448 	subspl	r5, r4, r8, asr #8
 80126b0:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 80126b4:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80126b8:	0a0d7325 	beq	836f354 <__exidx_end+0x35b79c>
 80126bc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80126c0:	203a7265 	eorscs	r7, sl, r5, ror #4
 80126c4:	0a0d7325 	beq	836f360 <__exidx_end+0x35b7a8>
 80126c8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80126cc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80126d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80126d4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80126d8:	6f430a0d 	svcvs	0x00430a0d
 80126dc:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80126e0:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80126e4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80126e8:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80126ec:	6f430a0d 	svcvs	0x00430a0d
 80126f0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80126f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80126f8:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 80126fc:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8012700:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08012704 <contentType>:
 8012704:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012708:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801270c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8012724:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012728:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8012744:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012748:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801274c:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8012750:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8012764:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8012768:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801276c:	2f6e6f69 	svccs	0x006e6f69
 8012770:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08012784 <RemoteConfigConst::PARAMS_DISABLE>:
 8012784:	61736964 	cmnvs	r3, r4, ror #18
 8012788:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801278c <RemoteConfigConst::PARAMS_FILE_NAME>:
 801278c:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8012790:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8012794:	00747874 	rsbseq	r7, r4, r4, ror r8

08012798 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8012798:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801279c:	5f79616c 	svcpl	0x0079616c
 80127a0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080127a5 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80127a5:	61736964 	cmnvs	r3, r4, ror #18
 80127a9:	5f656c62 	svcpl	0x00656c62
 80127ad:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80127b1:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080127b3 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80127b3:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80127b7:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80127bb:	6f6f6265 	svcvs	0x006f6265
 80127bf:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080127c1 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80127c1:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80127c5:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8012261 <s_Node+0x7f>
 80127c9:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80127cd:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080127cf <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80127cf:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80127d3:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80127d7:	6f746361 	svcvs	0x00746361
 80127db:	7b007972 	blvc	8030dab <__exidx_end+0x1d1f3>
 80127df:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80127e3:	7b3a2274 	blvc	8e9b1bb <__exidx_end+0xe87603>
 80127e7:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80127eb:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80127ef:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80127f3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80127f7:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80127fb:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80127ff:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012803:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012807:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801280b:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801280f:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012813:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012817:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801281b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801281f:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8012823:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012827:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801282b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801282f:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8012833:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8012837:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801283b:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801283f:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012843:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012847:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801284b:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801284f:	616f6222 	cmnvs	pc, r2, lsr #4
 8012853:	3a226472 	bcc	88aba23 <__exidx_end+0x897e6b>
 8012857:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801285b:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 801285f:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8012863:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8012867:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801286b:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801286f:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8012873:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8012877:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801287b:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801287f:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8012883:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8012887:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801288b:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 801288f:	7b000a7d 	blvc	801528b <__exidx_end+0x16d3>
 8012893:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8012897:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801289b:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 801289f:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80128a3:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80128a7:	7b3a2273 	blvc	8e9b27b <__exidx_end+0xe876c3>
 80128ab:	33316522 	teqcc	r1, #142606336	; 0x8800000
 80128af:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80128b3:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80128b7:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80128bb:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80128bf:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80128c3:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80128c7:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80128cb:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80128cf:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 80128d3:	72542058 	subsvc	r2, r4, #88	; 0x58
 80128d7:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80128db:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80128df:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80128e3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80128e7:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80128eb:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80128ef:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80128f3:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 80128f7:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 80128fb:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 80128ff:	6b726f77 	blvs	9cae6e3 <__exidx_end+0x1c9ab2b>
 8012903:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012907:	4e223a22 	vmulmi.f32	s6, s4, s5
 801290b:	6f777465 	svcvs	0x00777465
 801290f:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8012913:	6f637222 	svcvs	0x00637222
 8012917:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801291b:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801291f:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8012923:	746f6d65 	strbtvc	r6, [pc], #-3429	; 801292b <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8012927:	6f632065 	svcvs	0x00632065
 801292b:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801292f:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8012933:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012937:	73007d7d 	movwvc	r7, #3453	; 0xd7d
 801293b:	682f6372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
 801293f:	64707474 	ldrbtvs	r7, [r0], #-1140	; 0xfffffb8c
 8012943:	7465672f 	strbtvc	r6, [r5], #-1839	; 0xfffff8d1
 8012947:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 801294b:	6f635f65 	svcvs	0x00635f65
 801294f:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8012953:	70632e74 	rsbvc	r2, r3, r4, ror lr
 8012957:	65670070 	strbvs	r0, [r7, #-112]!	; 0xffffff90
 801295b:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801295f:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 8012963:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012967:	2500746e 	strcs	r7, [r0, #-1134]	; 0xfffffb92
 801296b:	20292873 	eorcs	r2, r9, r3, ror r8
 801296f:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8012973:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 8012977:	3a692520 	bcc	9a5bdff <__exidx_end+0x1a48247>
 801297b:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801297f:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 8012983:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 8012987:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 801298b:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 801298f:	0a64253a 	beq	991be7f <__exidx_end+0x19082c7>
	...

08012994 <index_html>:
 8012994:	4f44213c 	svcmi	0x0044213c
 8012998:	50595443 	subspl	r5, r9, r3, asr #8
 801299c:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 80129a0:	0a3e6c6d 	beq	8fadb5c <__exidx_end+0xf99fa4>
 80129a4:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 80129a8:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80129ac:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80129b0:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 80129b4:	6b6e696c 	blvs	9bacf6c <__exidx_end+0x1b993b4>
 80129b8:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80129bc:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80129c0:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80129c4:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80129c8:	72682022 	rsbvc	r2, r8, #34	; 0x22
 80129cc:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80129d0:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80129d4:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80129d8:	20227373 	eorcs	r7, r2, r3, ror r3
 80129dc:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80129e0:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80129e4:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80129e8:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80129ec:	0a3e656c 	beq	8fabfa4 <__exidx_end+0xf983ec>
 80129f0:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80129f4:	0a3e6461 	beq	8fabb80 <__exidx_end+0xf97fc8>
 80129f8:	646f623c 	strbtvs	r6, [pc], #-572	; 8012a00 <index_html+0x6c>
 80129fc:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8012a00:	6165683c 	cmnvs	r5, ip, lsr r8
 8012a04:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8012a08:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8012a0c:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8012a10:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8012a14:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8012a18:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012a1c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012a20:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8012a24:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8012a28:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8012a2c:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8012a30:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8012a34:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8012a38:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012a3c:	6f746365 	svcvs	0x00746365
 8012a40:	20227972 	eorcs	r7, r2, r2, ror r9
 8012a44:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8012a48:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8012a4c:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8012a50:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8012a54:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8012a58:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8012a5c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8012a60:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8012a64:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8012a68:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8012a6c:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8012a70:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8012a74:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8012a78:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012a7c:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8012a80:	20227478 	eorcs	r7, r2, r8, ror r4
 8012a84:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012a88:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8012a8c:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8012a90:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8012a94:	0a3e656c 	beq	8fac04c <__exidx_end+0xf98494>
 8012a98:	6f663c09 	svcvs	0x00663c09
 8012a9c:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8012aa0:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8012aa4:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012aa8:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8012aac:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012ab0:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8012ab4:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012ab8:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8012abc:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012ac0:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8012ac4:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8012ac8:	20747069 	rsbscs	r7, r4, r9, rrx
 8012acc:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8012ad0:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8012ad4:	6a2e7865 	bvs	8bb0c70 <__exidx_end+0xb9d0b8>
 8012ad8:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8012adc:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8012ae0:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8012ae4:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8012ae8:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8012aec:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012af0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012af4:	 	svcvs	0x0062000a

08012af6 <styles_css>:
 8012af6:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012afa:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012afe:	63616220 	cmnvs	r1, #32, 4
 8012b02:	6f72676b 	svcvs	0x0072676b
 8012b06:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8012b0a:	6f6c6f63 	svcvs	0x006c6f63
 8012b0e:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012b12:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012b16:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8012b1a:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8012b1e:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012b22:	6f6c6f63 	svcvs	0x006c6f63
 8012b26:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012b2a:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012b2e:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8012b32:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8012b36:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8012b3a:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012b3e:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8012b42:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012b46:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012b4a:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012b4e:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012b52:	0a3b7865 	beq	8ef0cee <__exidx_end+0xedd136>
 8012b56:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8012b5a:	0a7b2069 	beq	9edad06 <__exidx_end+0x1ec714e>
 8012b5e:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8012b62:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8012b66:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8012b6a:	6f6e203a 	svcvs	0x006e203a
 8012b6e:	0a3b656e 	beq	8eec12e <__exidx_end+0xed8576>
 8012b72:	616d2020 	cmnvs	sp, r0, lsr #32
 8012b76:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8012b7a:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8012b7e:	70352078 	eorsvc	r2, r5, r8, ror r0
 8012b82:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8012b86:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8012b8a:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012b8e:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012b92:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012b96:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012b9a:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012b9e:	0a3b7865 	beq	8ef0d3a <__exidx_end+0xedd182>
 8012ba2:	6f622020 	svcvs	0x00622020
 8012ba6:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012baa:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012bae:	3a737569 	bcc	9cf015a <__exidx_end+0x1cdc5a2>
 8012bb2:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012bb6:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012bba:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012bbe:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012bc2:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012bc6:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012bca:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012bce:	0a3b7870 	beq	8ef0d96 <__exidx_end+0xedd1de>
 8012bd2:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8012bd6:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012bda:	0a7b2072 	beq	9edadaa <__exidx_end+0x1ec71f2>
 8012bde:	69642020 	stmdbvs	r4!, {r5, sp}^
 8012be2:	616c7073 	smcvs	50947	; 0xc703
 8012be6:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8012bea:	3b78656c 	blcc	9e2c1a2 <__exidx_end+0x1e185ea>
 8012bee:	6a20200a 	bvs	881ac1e <__exidx_end+0x807066>
 8012bf2:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8012bf6:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8012bfa:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012bfe:	203a746e 	eorscs	r7, sl, lr, ror #8
 8012c02:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8012c06:	0a3b7265 	beq	8eef5a2 <__exidx_end+0xedb9ea>
 8012c0a:	6f622020 	svcvs	0x00622020
 8012c0e:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012c12:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012c16:	3a737569 	bcc	9cf01c2 <__exidx_end+0x1cdc60a>
 8012c1a:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012c1e:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012c22:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012c26:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012c2a:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012c2e:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012c32:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012c36:	0a3b7870 	beq	8ef0dfe <__exidx_end+0xedd246>
 8012c3a:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08012c40 <HttpContent>:
 8012c40:	080124fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, sp}
 8012c44:	08012af6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, fp, sp}
 8012c48:	0801250a 	stmdaeq	r1, {r1, r3, r8, sl, sp}
 8012c4c:	08012c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, sp}
 8012c50:	080124f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp}
 8012c54:	08012994 	stmdaeq	r1, {r2, r4, r7, r8, fp, sp}

08012c58 <index_js>:
 8012c58:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012c5c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012c60:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012c64:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012c68:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012c6c:	6a284e4f 	bvs	8a265b0 <__exidx_end+0xa129f8>
 8012c70:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012c74:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012c78:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012c7c:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8012c80:	6a2f273d 	bvs	8bdc97c <__exidx_end+0xbc8dc4>
 8012c84:	2f6e6f73 	svccs	0x006e6f73
 8012c88:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8012c8c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012c90:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012c94:	20797274 	rsbscs	r7, r9, r4, ror r2
 8012c98:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012c9c:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8012ca0:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8012ca4:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8012ca8:	20746961 	rsbscs	r6, r4, r1, ror #18
 8012cac:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8012cb0:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8012cb4:	0a3b296c 	beq	8edd26c <__exidx_end+0xec96b4>
 8012cb8:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012cbc:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8012cc0:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8012cc4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012cc8:	73657220 	cmnvc	r5, #32, 4
 8012ccc:	6f736a2e 	svcvs	0x00736a2e
 8012cd0:	3b29286e 	blcc	8a5ce90 <__exidx_end+0xa492d8>
 8012cd4:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012cd8:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8012cdc:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8012ce0:	6f727265 	svcvs	0x00727265
 8012ce4:	7b202972 	blvc	881d2b4 <__exidx_end+0x8096fc>
 8012ce8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012cec:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8012cf0:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8012cf4:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8012cf8:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8012cfc:	3b29726f 	blcc	8a6f6c0 <__exidx_end+0xa5bb08>
 8012d00:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012d04:	0a0a7d0a 	beq	82b2134 <__exidx_end+0x29e57c>
 8012d08:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012d0c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012d10:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012d14:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8012d18:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012d1c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012d20:	20292874 	eorcs	r2, r9, r4, ror r8
 8012d24:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012d28:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012d2c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d30:	6177613d 	cmnvs	r7, sp, lsr r1
 8012d34:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012d38:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012d3c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012d40:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d44:	0a3b2927 	beq	8edd1e8 <__exidx_end+0xec9630>
 8012d48:	6f640909 	svcvs	0x00640909
 8012d4c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012d50:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012d54:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012d58:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012d5c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012d60:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012d64:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8012d68:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012d6c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012d70:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012d74:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8012d78:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012d7c:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8012d80:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8012d84:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8012d88:	2b656d61 	blcs	996e314 <__exidx_end+0x195a75c>
 8012d8c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012d0c <index_js+0xb4>
 8012d90:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012d94:	2b223e69 	blcs	88a2740 <__exidx_end+0x88eb88>
 8012d98:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d9c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012da0:	6f6e2e74 	svcvs	0x006e2e74
 8012da4:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8012da8:	2b657079 	blcs	996ef94 <__exidx_end+0x195b3dc>
 8012dac:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012d2c <index_js+0xd4>
 8012db0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012db4:	2b223e69 	blcs	88a2760 <__exidx_end+0x88eba8>
 8012db8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012dbc:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012dc0:	6f6e2e74 	svcvs	0x006e2e74
 8012dc4:	702e6564 	eorvc	r6, lr, r4, ror #10
 8012dc8:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8012dcc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012dd0:	2f3c222b 	svccs	0x003c222b
 8012dd4:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012dd8:	0a7d0a3b 	beq	9f556cc <__exidx_end+0x1f41b14>
 8012ddc:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8012de0:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8012de4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012de8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012dec:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012df0:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012df4:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012df8:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8012dfc:	0a7b2029 	beq	9edaea8 <__exidx_end+0x1ec72f0>
 8012e00:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012e04:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8012e08:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012e0c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012e10:	6177613d 	cmnvs	r7, sp, lsr r1
 8012e14:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012e18:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012e1c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012e20:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012e24:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012e28:	3b292779 	blcc	8a5cc14 <__exidx_end+0xa4905c>
 8012e2c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012e30:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012e34:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012e38:	0a22223d 	beq	889b734 <__exidx_end+0x887b7c>
 8012e3c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012e40:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8012e44:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8012e48:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8012e4c:	6a624f3d 	bvs	98a6b48 <__exidx_end+0x1892f90>
 8012e50:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8012e54:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8012e58:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8012e5c:	6f746365 	svcvs	0x00746365
 8012e60:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8012e64:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012e68:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8012e6c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012e70:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8012e74:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8012e78:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8012e7c:	6145726f 	cmpvs	r5, pc, ror #4
 8012e80:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8012e84:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012e88:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012e8c:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8012e90:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012e94:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012e98:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012e9c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012ea0:	203d2065 	eorscs	r2, sp, r5, rrx
 8012ea4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012ea8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012eac:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012eb0:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8012eb4:	6b5b5d22 	blvs	96ea344 <__exidx_end+0x16d678c>
 8012eb8:	3b5d7965 	blcc	9771454 <__exidx_end+0x175d89c>
 8012ebc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012ec0:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8012ec4:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012ec8:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012ecc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012ed0:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8012ed4:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012ed8:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012edc:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012ee0:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012ee4:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012ee8:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012eec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012ef0:	0a3b223e 	beq	8edb7f0 <__exidx_end+0xec7c38>
 8012ef4:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012ef8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012efc:	6f640909 	svcvs	0x00640909
 8012f00:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012f04:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012f08:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012f0c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012f10:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012f14:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012f18:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012f1c:	6f746365 	svcvs	0x00746365
 8012f20:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8012f24:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012f28:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012f2c:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012f30:	3b6c6d74 	blcc	9b2e508 <__exidx_end+0x1b1a950>
 8012f34:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012f38:	5f746567 	svcpl	0x00746567
 8012f3c:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012f40:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012f44:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012f48:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8012f4c:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012f50:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8012f54:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8012f58:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012f5c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012f60:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8012f64:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8012f68:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012f6c:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8012f70:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012f74:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012f78:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8012f7c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012f80:	6177613d 	cmnvs	r7, sp, lsr r1
 8012f84:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012f88:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012f8c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012f90:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012f94:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012f98:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012f9c:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012fa0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8012fa4:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012fa8:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012fac:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012fb0:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8012fb4:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012fb8:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012fbc:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012fc0:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8012fc4:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012fc8:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012fcc:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012fd0:	2b22563e 	blcs	88a88d0 <__exidx_end+0x894d18>
 8012fd4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012fd8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012fdc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012fe0:	2b6e6f69 	blcs	9baed8c <__exidx_end+0x1b9b1d4>
 8012fe4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012f64 <index_js+0x30c>
 8012fe8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012fec:	2b223e69 	blcs	88a2998 <__exidx_end+0x88ede0>
 8012ff0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012ff4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012ff8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012ffc:	61642e64 	cmnvs	r4, r4, ror #28
 8013000:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8013004:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8013008:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801300c:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8013010:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013014:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8013018:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 801301c:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8013020:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8013024:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8013028:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 801302c:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8013030:	6f697372 	svcvs	0x00697372
 8013034:	6f622e6e 	svcvs	0x00622e6e
 8013038:	2b647261 	blcs	992f9c4 <__exidx_end+0x191be0c>
 801303c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012fbc <index_js+0x364>
 8013040:	3b223e69 	blcc	88a29ec <__exidx_end+0x88ee34>
 8013044:	0a0a7d0a 	beq	82b2474 <__exidx_end+0x29e8bc>
 8013048:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801304c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8013050:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013054:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8013058:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8013060 <index_js+0x408>
 801305c:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8013060:	20296c65 	eorcs	r6, r9, r5, ror #24
 8013064:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8013068:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 801306c:	613d7478 	teqvs	sp, r8, ror r4
 8013070:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8013074:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8013078:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801307c:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8013080:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8013084:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8013088:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801308c:	3b22223d 	blcc	889b988 <__exidx_end+0x887dd0>
 8013090:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8013094:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8013098:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 801309c:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80130a0:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80130a4:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80130a8:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80130ac:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 80130b0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80130b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80130b8:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80130bc:	0a7b2029 	beq	9edb168 <__exidx_end+0x1ec75b0>
 80130c0:	61760909 	cmnvs	r6, r9, lsl #18
 80130c4:	61762072 	cmnvs	r6, r2, ror r0
 80130c8:	2065756c 	rsbcs	r7, r5, ip, ror #10
 80130cc:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80130d0:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80130d4:	6b5b5d6c 	blvs	96ea68c <__exidx_end+0x16d6ad4>
 80130d8:	3b5d7965 	blcc	9771674 <__exidx_end+0x175dabc>
 80130dc:	2009090a 	andcs	r0, r9, sl, lsl #18
 80130e0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80130e4:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 80130e8:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 80130ec:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80130f0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80130f4:	2f3c222b 	svccs	0x003c222b
 80130f8:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80130fc:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8013100:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8013104:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8013108:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 801310c:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8013114 <index_js+0x4bc>
 8013110:	3b223e72 	blcc	88a2ae0 <__exidx_end+0x88ef28>
 8013114:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8013118:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 801311c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8013120:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8013124:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8013128:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 801312c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8013130:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8013134:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8013138:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801313c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8013140:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8013144:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8013148:	0a3b6c6d 	beq	8eee304 <__exidx_end+0xeda74c>
 801314c:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8013150:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8013154:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8013158:	3b292874 	blcc	8a5d330 <__exidx_end+0xa49778>
 801315c:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8013160:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8013164:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8013168:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801316c:	0a3b2928 	beq	8edd614 <__exidx_end+0xec9a5c>
 8013170:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8013174:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8013178:	6f697372 	svcvs	0x00697372
 801317c:	3b29286e 	blcc	8a5d33c <__exidx_end+0xa49784>
 8013180:	0000000a 	andeq	r0, r0, sl

08013184 <s_aStorSize>:
 8013184:	00000060 	andeq	r0, r0, r0, rrx
 8013188:	00000090 	muleq	r0, r0, r0
 801318c:	00000020 	andeq	r0, r0, r0, lsr #32
 8013190:	00000040 	andeq	r0, r0, r0, asr #32
 8013194:	00000060 	andeq	r0, r0, r0, rrx
 8013198:	00000040 	andeq	r0, r0, r0, asr #32
 801319c:	00000020 	andeq	r0, r0, r0, lsr #32
 80131a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131a4:	000001e0 	andeq	r0, r0, r0, ror #3
 80131a8:	00000040 	andeq	r0, r0, r0, asr #32
 80131ac:	00000020 	andeq	r0, r0, r0, lsr #32
 80131b0:	00000060 	andeq	r0, r0, r0, rrx
 80131b4:	00000030 	andeq	r0, r0, r0, lsr r0
 80131b8:	00000020 	andeq	r0, r0, r0, lsr #32
 80131bc:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80131c0:	00000030 	andeq	r0, r0, r0, lsr r0
 80131c4:	00000040 	andeq	r0, r0, r0, asr #32
 80131c8:	00000020 	andeq	r0, r0, r0, lsr #32
 80131cc:	00000060 	andeq	r0, r0, r0, rrx
 80131d0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131d4:	00000400 	andeq	r0, r0, r0, lsl #8
 80131d8:	00000020 	andeq	r0, r0, r0, lsr #32
 80131dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80131e0:	00000040 	andeq	r0, r0, r0, asr #32
 80131e4:	00000060 	andeq	r0, r0, r0, rrx
 80131e8:	00000020 	andeq	r0, r0, r0, lsr #32
 80131ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80131f0:	00000020 	andeq	r0, r0, r0, lsr #32

080131f4 <vtable for StoreDisplayUdf>:
	...
 80131fc:	0800bb39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, ip, sp, pc}
 8013200:	0800bb81 	stmdaeq	r0, {r0, r7, r8, r9, fp, ip, sp, pc}
 8013204:	0800bb5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, fp, ip, sp, pc}
 8013208:	0800bb3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, fp, ip, sp, pc}

0801320c <vtable for StoreDmxSend>:
	...
 8013214:	0800bba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, sp, pc}
 8013218:	0800bbe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 801321c:	0800bbc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, fp, ip, sp, pc}
 8013220:	0800bba5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, fp, ip, sp, pc}

08013224 <vtable for StoreE131>:
	...
 801322c:	0800bc09 	stmdaeq	r0, {r0, r3, sl, fp, ip, sp, pc}
 8013230:	0800bc51 	stmdaeq	r0, {r0, r4, r6, sl, fp, ip, sp, pc}
 8013234:	0800bc2d 	stmdaeq	r0, {r0, r2, r3, r5, sl, fp, ip, sp, pc}
 8013238:	0800bc0d 	stmdaeq	r0, {r0, r2, r3, sl, fp, ip, sp, pc}

0801323c <vtable for StoreNetwork>:
	...
 8013244:	0800bc71 	stmdaeq	r0, {r0, r4, r5, r6, sl, fp, ip, sp, pc}
 8013248:	0800bd85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, ip, sp, pc}
 801324c:	0800bc79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, ip, sp, pc}
 8013250:	0800bd99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, ip, sp, pc}
 8013254:	0800bd29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, ip, sp, pc}
 8013258:	0800bcfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, sp, pc}
 801325c:	0800bccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, ip, sp, pc}
 8013260:	0800bd55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, ip, sp, pc}
 8013264:	0800bc9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, ip, sp, pc}
 8013268:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801326c:	00000000 	andeq	r0, r0, r0
 8013270:	0800bc73 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, fp, ip, sp, pc}
 8013274:	0800bd91 	stmdaeq	r0, {r0, r4, r7, r8, sl, fp, ip, sp, pc}
 8013278:	0800bd4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, fp, ip, sp, pc}
 801327c:	0800bd21 	stmdaeq	r0, {r0, r5, r8, sl, fp, ip, sp, pc}
 8013280:	0800bcf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, ip, sp, pc}
 8013284:	0800bd7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 8013288:	0800bcc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, ip, sp, pc}

0801328c <vtable for StoreRemoteConfig>:
	...
 8013294:	0800bdcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, fp, ip, sp, pc}
 8013298:	0800be15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, sp, pc}
 801329c:	0800bdf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 80132a0:	0800bdd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, fp, ip, sp, pc}
 80132a4:	3a434d46 	bcc	90e67c4 <__exidx_end+0x10d2c0c>
 80132a8:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 80132ac:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 80132b0:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80132b4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80132b8:	6f742068 	svcvs	0x00742068
 80132bc:	206c6174 	rsbcs	r6, ip, r4, ror r1
 80132c0:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 80132c4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 80132c8:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80132cc:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 80132d0:	6374000a 	cmnvs	r4, #10
 80132d4:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 80132d8:	3a6e6967 	bcc	9bad87c <__exidx_end+0x1b99cc4>
 80132dc:	6f6f7420 	svcvs	0x006f7420
 80132e0:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 80132e4:	6f632079 	svcvs	0x00632079
 80132e8:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80132ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80132f0:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80132f4:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80132f8:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80132fc:	41000a64 	tstmi	r0, r4, ror #20
 8013300:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8013304:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8013308:	61662070 	smcvs	25088	; 0x6200
 801330c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8013310:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8013314:	61666564 	cmnvs	r6, r4, ror #10
 8013318:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801331c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8013320:	0a796177 	beq	9e6b904 <__exidx_end+0x1e57d4c>
 8013324:	50524100 	subspl	r4, r2, r0, lsl #2
 8013328:	6f6f6c20 	svcvs	0x006f6c20
 801332c:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8013330:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8013334:	000a6465 	andeq	r6, sl, r5, ror #8

08013338 <NetworkConst::MSG_MDNS_CONFIG>:
 8013338:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801333c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8013340:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8013344:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08013349 <NetworkConst::MSG_NETWORK_INIT>:
 8013349:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801334d:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8013351:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8013355:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 8013359:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
 801335d:	32006e6f 	andcc	r6, r0, #1776	; 0x6f0
 8013361:	302e3432 	eorcc	r3, lr, r2, lsr r4
 8013365:	322e302e 	eorcc	r3, lr, #46	; 0x2e
 8013369:	5f003135 	svcpl	0x00003135
 801336d:	2e706374 	mrccs	3, 3, r6, cr0, cr4, {3}
 8013371:	61636f6c 	cmnvs	r3, ip, ror #30
 8013375:	735f006c 	cmpvc	pc, #108	; 0x6c
 8013379:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801337d:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8013381:	736e645f 	cmnvc	lr, #1593835520	; 0x5f000000
 8013385:	2e64732d 	cdpcs	3, 6, cr7, cr4, cr13, {1}
 8013389:	7064755f 	rsbvc	r7, r4, pc, asr r5
 801338d:	636f6c2e 	cmnvs	pc, #11776	; 0x2e00
 8013391:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 8013395:	0a534e44 	beq	94e6cad <__exidx_end+0x14d30f5>
 8013399:	6f4e2000 	svcvs	0x004e2000
 801339d:	75722074 	ldrbvc	r2, [r2, #-116]!	; 0xffffff8c
 80133a1:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
 80133a5:	20000a67 	andcs	r0, r0, r7, ror #20
 80133a9:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80133ad:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80133b1:	20000a73 	andcs	r0, r0, r3, ror sl
 80133b5:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 80133b9:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80133bd:	7465000a 	strbtvc	r0, [r5], #-10
 80133c1:	67003068 	strvs	r3, [r0, -r8, rrx]
 80133c5:	64616769 	strbtvs	r6, [r1], #-1897	; 0xfffff897
 80133c9:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80133cd:	4e005f65 	cdpmi	15, 0, cr5, cr0, cr5, {3}
 80133d1:	6f777465 	svcvs	0x00777465
 80133d5:	000a6b72 	andeq	r6, sl, r2, ror fp
 80133d9:	736f4820 	cmnvc	pc, #32, 16	; 0x200000
 80133dd:	6d616e74 	stclvs	14, cr6, [r1, #-464]!	; 0xfffffe30
 80133e1:	3a202065 	bcc	881b57d <__exidx_end+0x8079c5>
 80133e5:	0a732520 	beq	9cdc86d <__exidx_end+0x1cc8cb5>
 80133e9:	66492000 	strbvs	r2, [r9], -r0
 80133ed:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80133f1:	20202020 	eorcs	r2, r0, r0, lsr #32
 80133f5:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80133f9:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80133fd:	4920000a 	stmdbmi	r0!, {r1, r3}
 8013401:	2074656e 	rsbscs	r6, r4, lr, ror #10
 8013405:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013409:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801340d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013411:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013415:	252f6425 	strcs	r6, [pc, #-1061]!	; 8012ff8 <index_js+0x3a0>
 8013419:	20000a64 	andcs	r0, r0, r4, ror #20
 801341d:	6d74654e 	cfldr64vs	mvdx6, [r4, #-312]!	; 0xfffffec8
 8013421:	206b7361 	rsbcs	r7, fp, r1, ror #6
 8013425:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013429:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801342d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013431:	0a64252e 	beq	991c8f1 <__exidx_end+0x1908d39>
 8013435:	61472000 	mrsvs	r2, (UNDEF: 71)
 8013439:	61776574 	cmnvs	r7, r4, ror r5
 801343d:	20202079 	eorcs	r2, r0, r9, ror r0
 8013441:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013445:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013449:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801344d:	20000a64 	andcs	r0, r0, r4, ror #20
 8013451:	616f7242 	cmnvs	pc, r2, asr #4
 8013455:	73616364 	cmnvc	r1, #100, 6	; 0x90000001
 8013459:	203a2074 	eorscs	r2, sl, r4, ror r0
 801345d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013461:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013465:	0a64252e 	beq	991c925 <__exidx_end+0x1908d6d>
 8013469:	614d2000 	mrsvs	r2, (UNDEF: 77)
 801346d:	20202063 	eorcs	r2, r0, r3, rrx
 8013471:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013475:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8013479:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801347d:	3a78322e 	bcc	9e1fd3d <__exidx_end+0x1e0c185>
 8013481:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8013485:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8013489:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801348d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8013491:	0a78322e 	beq	9e1fd51 <__exidx_end+0x1e0c199>
 8013495:	6f4d2000 	svcvs	0x004d2000
 8013499:	20206564 	eorcs	r6, r0, r4, ror #10
 801349d:	20202020 	eorcs	r2, r0, r0, lsr #32
 80134a1:	6325203a 			; <UNDEFINED> instruction: 0x6325203a
 80134a5:	7453000a 	ldrbvc	r0, [r3], #-10
 80134a9:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
 80134ad:	00504920 	subseq	r4, r0, r0, lsr #18

080134b1 <NetworkParamsConst::IP_ADDRESS>:
 80134b1:	615f7069 	cmpvs	pc, r9, rrx
 80134b5:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80134b9:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080134bc <NetworkParamsConst::DEFAULT_GATEWAY>:
 80134bc:	61666564 	cmnvs	r6, r4, ror #10
 80134c0:	5f746c75 	svcpl	0x00746c75
 80134c4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80134c8:	00796177 	rsbseq	r6, r9, r7, ror r1

080134cc <NetworkParamsConst::DHCP_RETRY_TIME>:
 80134cc:	70636864 	rsbvc	r6, r3, r4, ror #16
 80134d0:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80134d4:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80134dc <NetworkParamsConst::HOSTNAME>
 80134d8:	00656d69 	rsbeq	r6, r5, r9, ror #26

080134dc <NetworkParamsConst::HOSTNAME>:
 80134dc:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80134e0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080134e5 <NetworkParamsConst::NET_MASK>:
 80134e5:	5f74656e 	svcpl	0x0074656e
 80134e9:	6b73616d 	blvs	9cebaa5 <__exidx_end+0x1cd7eed>
	...

080134ee <NetworkParamsConst::USE_DHCP>:
 80134ee:	5f657375 	svcpl	0x00657375
 80134f2:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080134f7 <NetworkParamsConst::FILE_NAME>:
 80134f7:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80134fb:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80134ff:	00747874 	rsbseq	r7, r4, r4, ror r8
 8013503:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8013507:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 801350b:	61747320 	cmnvs	r4, r0, lsr #6
 801350f:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8013513:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013517:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801351b:	252f6425 	strcs	r6, [pc, #-1061]!	; 80130fe <index_js+0x4a6>
 801351f:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013523:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8013527:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801352b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801352f:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8013533:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8013537:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801353b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801353f:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8013543:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8013547:	20657261 	rsbcs	r7, r5, r1, ror #4
 801354b:	2a2e2556 	bcs	8b9caab <__exidx_end+0xb88ef3>
 801354f:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8013553:	72205043 	eorvc	r5, r0, #67	; 0x43
 8013557:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801355b:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801355f:	50434844 	subpl	r4, r3, r4, asr #16
 8013563:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8013567:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801356b:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801356f:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013573:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8013577:	6f647475 	svcvs	0x00647475
 801357b:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08013580 <pArray>:
 8013580:	08013614 	stmdaeq	r1, {r2, r4, r9, sl, ip, sp}
 8013584:	080135d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, ip, sp}
 8013588:	080134b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, ip, sp}
 801358c:	0801361a 	stmdaeq	r1, {r1, r3, r4, r9, sl, ip, sp}
 8013590:	08013726 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, ip, sp}
 8013594:	080135db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sl, ip, sp}
 8013598:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 801359c:	080134dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp}
 80135a0:	0801368c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp}
 80135a4:	0801369c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, ip, sp}
 80135a8:	080136ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, sp}
 80135ac:	080136bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, ip, sp}
 80135b0:	080134e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, ip, sp}
 80135b4:	08013714 	stmdaeq	r1, {r2, r4, r8, r9, sl, ip, sp}
 80135b8:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 80135bc:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 80135c0:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 80135c4:	08012703 	stmdaeq	r1, {r0, r1, r8, r9, sl, sp}
 80135c8:	080134bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, ip, sp}
 80135cc:	080135e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, ip, sp}

080135d0 <DisplayUdfParamsConst::BOARD_NAME>:
 80135d0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80135d4:	616e5f64 	cmnvs	lr, r4, ror #30
 80135d8:	 	tstvs	r0, sp, ror #10

080135db <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80135db:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80135df:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80135e3:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080135e8 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80135e8:	5f786d64 	svcpl	0x00786d64
 80135ec:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80135f0:	6f697463 	svcvs	0x00697463
 80135f4:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080135f6 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80135f6:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80135fa:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80135fe:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8013099 <index_js+0x441>
 8013602:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08013604 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8013604:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8013608:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 801360c:	61636974 	smcvs	13972	; 0x3694
 8013610:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08013614 <DisplayUdfParamsConst::TITLE>:
 8013614:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013618:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801361a <DisplayUdfParamsConst::VERSION>:
 801361a:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801361e:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08013622 <DisplayUdfParamsConst::FILE_NAME>:
 8013622:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013626:	2e79616c 	rpwcsez	f6, f1, #4.0
 801362a:	00747874 	rsbseq	r7, r4, r4, ror r8

0801362e <DisplayUdfParamsConst::INTENSITY>:
 801362e:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8013632:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8013636:	50410079 	subpl	r0, r1, r9, ror r0
 801363a:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801363e:	726f5000 	rsbvc	r5, pc, #0
 8013642:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8013646:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801364a:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801364e:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8013652:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8013656:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801365a:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 801365e:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8013662:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013666:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801366a:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801366e:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8013672:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8013676:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 801367a:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801367e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013682:	2023000a 	eorcs	r0, r3, sl
 8013686:	23207325 			; <UNDEFINED> instruction: 0x23207325
 801368a:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

0801368c <LightSetParamsConst::UNIVERSE_PORT>:
 801368c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013690:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8013694:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013698:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801369c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80136a0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80136a4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136a8:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80136ac:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80136b0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80136b4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136b8:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80136bc:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80136c0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80136c4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136c8:	00645f74 	rsbeq	r5, r4, r4, ror pc

080136cc <LightSetParamsConst::MERGE_MODE_PORT>:
 80136cc:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80136d0:	6f6d5f65 	svcvs	0x006d5f65
 80136d4:	705f6564 	subsvc	r6, pc, r4, ror #10
 80136d8:	5f74726f 	svcpl	0x0074726f
 80136dc:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 80136e0:	5f656772 	svcpl	0x00656772
 80136e4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80136e8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136ec:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80136f0:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80136f4:	6f6d5f65 	svcvs	0x006d5f65
 80136f8:	705f6564 	subsvc	r6, pc, r4, ror #10
 80136fc:	5f74726f 	svcpl	0x0074726f
 8013700:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8013704:	5f656772 	svcpl	0x00656772
 8013708:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801370c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013710:	00645f74 	rsbeq	r5, r4, r4, ror pc

08013714 <LightSetParamsConst::DMX_START_ADDRESS>:
 8013714:	5f786d64 	svcpl	0x00786d64
 8013718:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801371c:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8013720:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8013724:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08013726 <LightSetParamsConst::UNIVERSE>:
 8013726:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801372a:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801372f <LightSetParamsConst::DIRECTION>:
 801372f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013733:	6f697463 	svcvs	0x00697463
 8013737:	6f705f6e 	svcvs	0x00705f6e
 801373b:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801373f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013743:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8013747:	5f6e6f69 	svcpl	0x006e6f69
 801374b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801374f:	0000625f 	andeq	r6, r0, pc, asr r2
 8013753:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013757:	6f697463 	svcvs	0x00697463
 801375b:	6f705f6e 	svcvs	0x00705f6e
 801375f:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8013763:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8013767:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801376b:	5f6e6f69 	svcpl	0x006e6f69
 801376f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013773:	0000645f 	andeq	r6, r0, pc, asr r4
 8013777:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801377b:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801377f:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8013783:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8013787:	31485300 	mrscc	r5, (UNDEF: 120)
 801378b:	00363031 	eorseq	r3, r6, r1, lsr r0
 801378f:	31445353 	cmpcc	r4, r3, asr r3
 8013793:	00363033 	eorseq	r3, r6, r3, lsr r0
 8013797:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801379b:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801379f:	000a2964 	andeq	r2, sl, r4, ror #18
 80137a3:	aaeeaa40 	bge	7bbe0ab <__stack_size+0x7bbc8ab>
 80137a7:	000000ee 	andeq	r0, r0, lr, ror #1
	...

080137ac <_OledFont8x6>:
 80137ac:	00000040 	andeq	r0, r0, r0, asr #32
 80137b0:	40000000 	andmi	r0, r0, r0
 80137b4:	005f0000 	subseq	r0, pc, r0
 80137b8:	00400000 	subeq	r0, r0, r0
 80137bc:	00070007 	andeq	r0, r7, r7
 80137c0:	7f144000 	svcvc	0x00144000
 80137c4:	00147f14 	andseq	r7, r4, r4, lsl pc
 80137c8:	7f2a2440 	svcvc	0x002a2440
 80137cc:	4000122a 	andmi	r1, r0, sl, lsr #4
 80137d0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80137d4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80137d8:	50205649 	eorpl	r5, r0, r9, asr #12
 80137dc:	08004000 	stmdaeq	r0, {lr}
 80137e0:	00000307 	andeq	r0, r0, r7, lsl #6
 80137e4:	221c0040 	andscs	r0, ip, #64	; 0x40
 80137e8:	40000041 	andmi	r0, r0, r1, asr #32
 80137ec:	1c224100 	stfnes	f4, [r2], #-0
 80137f0:	2a400000 	bcs	90137f8 <__exidx_end+0xfffc40>
 80137f4:	2a1c7f1c 	bcs	873346c <__exidx_end+0x71f8b4>
 80137f8:	08084000 	stmdaeq	r8, {lr}
 80137fc:	0008083e 	andeq	r0, r8, lr, lsr r8
 8013800:	70800040 	addvc	r0, r0, r0, asr #32
 8013804:	40000030 	andmi	r0, r0, r0, lsr r0
 8013808:	08080808 	stmdaeq	r8, {r3, fp}
 801380c:	00400008 	subeq	r0, r0, r8
 8013810:	00606000 	rsbeq	r6, r0, r0
 8013814:	10204000 	eorne	r4, r0, r0
 8013818:	00020408 	andeq	r0, r2, r8, lsl #8
 801381c:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8013820:	40003e45 	andmi	r3, r0, r5, asr #28
 8013824:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8013828:	72400000 	subvc	r0, r0, #0
 801382c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8013830:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8013834:	00334d49 	eorseq	r4, r3, r9, asr #26
 8013838:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801383c:	4000107f 	andmi	r1, r0, pc, ror r0
 8013840:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8013844:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8013848:	3149494a 	cmpcc	r9, sl, asr #18
 801384c:	21414000 	mrscs	r4, (UNDEF: 65)
 8013850:	00070911 	andeq	r0, r7, r1, lsl r9
 8013854:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8013858:	40003649 	andmi	r3, r0, r9, asr #12
 801385c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8013860:	0040001e 	subeq	r0, r0, lr, lsl r0
 8013864:	00001400 	andeq	r1, r0, r0, lsl #8
 8013868:	40004000 	andmi	r4, r0, r0
 801386c:	00000034 	andeq	r0, r0, r4, lsr r0
 8013870:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8013874:	40004122 	andmi	r4, r0, r2, lsr #2
 8013878:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801387c:	00400014 	subeq	r0, r0, r4, lsl r0
 8013880:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8013884:	01024000 	mrseq	r4, (UNDEF: 2)
 8013888:	00060959 	andeq	r0, r6, r9, asr r9
 801388c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8013890:	40004e59 	andmi	r4, r0, r9, asr lr
 8013894:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8013898:	7f40007c 	svcvc	0x0040007c
 801389c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80138a0:	413e4000 	teqmi	lr, r0
 80138a4:	00224141 	eoreq	r4, r2, r1, asr #2
 80138a8:	41417f40 	cmpmi	r1, r0, asr #30
 80138ac:	40003e41 	andmi	r3, r0, r1, asr #28
 80138b0:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80138b4:	7f400041 	svcvc	0x00400041
 80138b8:	01090909 	tsteq	r9, r9, lsl #18
 80138bc:	413e4000 	teqmi	lr, r0
 80138c0:	00735141 	rsbseq	r5, r3, r1, asr #2
 80138c4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80138c8:	40007f08 	andmi	r7, r0, r8, lsl #30
 80138cc:	417f4100 	cmnmi	pc, r0, lsl #2
 80138d0:	20400000 	subcs	r0, r0, r0
 80138d4:	013f4140 	teqeq	pc, r0, asr #2
 80138d8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80138dc:	00412214 	subeq	r2, r1, r4, lsl r2
 80138e0:	40407f40 	submi	r7, r0, r0, asr #30
 80138e4:	40004040 	andmi	r4, r0, r0, asr #32
 80138e8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80138ec:	7f40007f 	svcvc	0x0040007f
 80138f0:	7f100804 	svcvc	0x00100804
 80138f4:	413e4000 	teqmi	lr, r0
 80138f8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80138fc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8013900:	40000609 	andmi	r0, r0, r9, lsl #12
 8013904:	2151413e 	cmpcs	r1, lr, lsr r1
 8013908:	7f40005e 	svcvc	0x0040005e
 801390c:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8013910:	49264000 	stmdbmi	r6!, {lr}
 8013914:	00324949 	eorseq	r4, r2, r9, asr #18
 8013918:	7f010340 	svcvc	0x00010340
 801391c:	40000301 	andmi	r0, r0, r1, lsl #6
 8013920:	4040403f 	submi	r4, r0, pc, lsr r0
 8013924:	1f40003f 	svcne	0x0040003f
 8013928:	1f204020 	svcne	0x00204020
 801392c:	403f4000 	eorsmi	r4, pc, r0
 8013930:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8013934:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8013938:	40006314 	andmi	r6, r0, r4, lsl r3
 801393c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8013940:	61400003 	cmpvs	r0, r3
 8013944:	434d4959 	movtmi	r4, #55641	; 0xd959
 8013948:	7f004000 	svcvc	0x00004000
 801394c:	00414141 	subeq	r4, r1, r1, asr #2
 8013950:	08040240 	stmdaeq	r4, {r6, r9}
 8013954:	40002010 	andmi	r2, r0, r0, lsl r0
 8013958:	41414100 	mrsmi	r4, (UNDEF: 81)
 801395c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8013960:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8013964:	40404000 	submi	r4, r0, r0
 8013968:	00404040 	subeq	r4, r0, r0, asr #32
 801396c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8013970:	40000008 	andmi	r0, r0, r8
 8013974:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8013978:	7f400040 	svcvc	0x00400040
 801397c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8013980:	44384000 	ldrtmi	r4, [r8], #-0
 8013984:	00284444 	eoreq	r4, r8, r4, asr #8
 8013988:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801398c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8013990:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8013994:	00400018 	subeq	r0, r0, r8, lsl r0
 8013998:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801399c:	a4184000 	ldrge	r4, [r8], #-0
 80139a0:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80139a4:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80139a8:	40007804 	andmi	r7, r0, r4, lsl #16
 80139ac:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80139b0:	20400000 	subcs	r0, r0, r0
 80139b4:	003d4040 	eorseq	r4, sp, r0, asr #32
 80139b8:	107f4000 	rsbsne	r4, pc, r0
 80139bc:	00004428 	andeq	r4, r0, r8, lsr #8
 80139c0:	7f410040 	svcvc	0x00410040
 80139c4:	40000040 	andmi	r0, r0, r0, asr #32
 80139c8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80139cc:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80139d0:	78040408 	stmdavc	r4, {r3, sl}
 80139d4:	44384000 	ldrtmi	r4, [r8], #-0
 80139d8:	00384444 	eorseq	r4, r8, r4, asr #8
 80139dc:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80139e0:	40001824 	andmi	r1, r0, r4, lsr #16
 80139e4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80139e8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80139ec:	08040408 	stmdaeq	r4, {r3, sl}
 80139f0:	54484000 	strbpl	r4, [r8], #-0
 80139f4:	00245454 	eoreq	r5, r4, r4, asr r4
 80139f8:	3f040440 	svccc	0x00040440
 80139fc:	40002444 	andmi	r2, r0, r4, asr #8
 8013a00:	2040403c 	subcs	r4, r0, ip, lsr r0
 8013a04:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8013a08:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8013a0c:	403c4000 	eorsmi	r4, ip, r0
 8013a10:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8013a14:	10284440 	eorne	r4, r8, r0, asr #8
 8013a18:	40004428 	andmi	r4, r0, r8, lsr #8
 8013a1c:	9090904c 	addsls	r9, r0, ip, asr #32
 8013a20:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8013a24:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8013a28:	08004000 	stmdaeq	r0, {lr}
 8013a2c:	00004136 	andeq	r4, r0, r6, lsr r1
 8013a30:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8013a34:	40000000 	andmi	r0, r0, r0
 8013a38:	08364100 	ldmdaeq	r6!, {r8, lr}
 8013a3c:	02400000 	subeq	r0, r0, #0
 8013a40:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8013a44:	263c4000 	ldrtcs	r4, [ip], -r0
 8013a48:	003c2623 	eorseq	r2, ip, r3, lsr #12

08013a4c <oled_128x32_init>:
 8013a4c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013a50:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8013a54:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013a58:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8013a5c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013a60:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013a64 <oled_128x64_init>:
 8013a64:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013a68:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8013a6c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013a70:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8013a74:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013a78:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013a7c <vtable for Ssd1306>:
	...
 8013a84:	0800ed51 	stmdaeq	r0, {r0, r4, r6, r8, sl, fp, sp, lr, pc}
 8013a88:	0800ed7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8013a8c:	0800f08d 	stmdaeq	r0, {r0, r2, r3, r7, ip, sp, lr, pc}
 8013a90:	0800f015 	stmdaeq	r0, {r0, r2, r4, ip, sp, lr, pc}
 8013a94:	0800eee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, sp, lr, pc}
 8013a98:	0800ed9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, sp, lr, pc}
 8013a9c:	0800edc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, sp, lr, pc}
 8013aa0:	0800eeb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r9, sl, fp, sp, lr, pc}
 8013aa4:	0800ee71 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, fp, sp, lr, pc}
 8013aa8:	0800ed53 	stmdaeq	r0, {r0, r1, r4, r6, r8, sl, fp, sp, lr, pc}
 8013aac:	0800ef1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sl, fp, sp, lr, pc}
 8013ab0:	0800ef29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, sp, lr, pc}
 8013ab4:	0800ef43 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, fp, sp, lr, pc}
 8013ab8:	0800ed55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, sp, lr, pc}
 8013abc:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8013ac0:	5b1b006d 	blpl	86d3c7c <__exidx_end+0x6c00c4>
 8013ac4:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8013ac8:	31335b1b 	teqcc	r3, fp, lsl fp
 8013acc:	5b1b006d 	blpl	86d3c88 <__exidx_end+0x6c00d0>
 8013ad0:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8013ad4:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8013ad8:	5b1b006d 	blpl	86d3c94 <__exidx_end+0x6c00dc>
 8013adc:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8013ae0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8013ae4:	205d732a 	subscs	r7, sp, sl, lsr #6
 8013ae8:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8013aec:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8013af0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8013af4:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8013af8:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8013afc:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8013b00:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8013b04:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013b08:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013b0c:	000a7525 	andeq	r7, sl, r5, lsr #10
 8013b10:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013b14:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013b18:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8013b1c:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8013b20:	6b636f6c 	blvs	98ef8d8 <__exidx_end+0x18dbd20>
 8013b24:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8013b28:	000a7469 	andeq	r7, sl, r9, ror #8
 8013b2c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013b30:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013b34:	6f6c4270 	svcvs	0x006c4270
 8013b38:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8013b3c:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013b40:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8013b44:	7a697320 	bvc	9a707cc <__exidx_end+0x1a5cc14>
 8013b48:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8013b4c:	6164202c 	cmnvs	r4, ip, lsr #32
 8013b50:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8013b54:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8013b58:	3a656572 	bcc	996d128 <__exidx_end+0x1959570>
 8013b5c:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8013b60:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013b64:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013b68:	203d2072 	eorscs	r2, sp, r2, ror r0
 8013b6c:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8013b70:	6f6c4270 	svcvs	0x006c4270
 8013b74:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8013b78:	0a702520 	beq	9c1d000 <__exidx_end+0x1c09448>
 8013b7c:	00000000 	andeq	r0, r0, r0

08013b80 <days_of_month>:
 8013b80:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b84:	0000001c 	andeq	r0, r0, ip, lsl r0
 8013b88:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b8c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b90:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b94:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b98:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013ba0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013ba4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013ba8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013bac:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08013bb0 <__exidx_start>:
 8013bb0:	7fffdea8 	svcvc	0x00ffdea8
 8013bb4:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08013bb8 <.ARM.attributes>:
 8013bb8:	00002e41 	andeq	r2, r0, r1, asr #28
 8013bbc:	61656100 	cmnvs	r5, r0, lsl #2
 8013bc0:	01006962 	tsteq	r0, r2, ror #18
 8013bc4:	00000024 	andeq	r0, r0, r4, lsr #32
 8013bc8:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8013bcc:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8013bd0:	0600334d 	streq	r3, [r0], -sp, asr #6
 8013bd4:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8013bd8:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8013bdc:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8013be0:	1a011803 	bne	8059bf4 <__exidx_end+0x4603c>
 8013be4:	Address 0x0000000008013be4 is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000711 	andcs	r0, r0, r1, lsl r7

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <guard variable for lightset::Data::Get()::instance>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <lightset::Data::Get()::instance>:
	...

20000704 <E131Bridge::s_pThis>:
20000704:	00000000 	andeq	r0, r0, r0

20000708 <s_ReceivingMask>:
20000708:	00000000 	andeq	r0, r0, r0

2000070c <DmxSend::s_nStarted>:
	...

2000070d <DmxConfigUdp::s_Buffer>:
	...

20000720 <s_RxBuffer>:
	...

20000930 <s_TxBuffer>:
	...

20000b34 <sv_PortState>:
20000b34:	00000000 	andeq	r0, r0, r0

20000b38 <s_nUartsSending>:
20000b38:	00000000 	andeq	r0, r0, r0

20000b3c <sv_nRxDmxPackets>:
	...

20000b4c <Dmx::s_pThis>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <gv_RdmDataReceiveEnd>:
20000b50:	00000000 	andeq	r0, r0, r0

20000b54 <RemoteConfig::s_pUdpBuffer>:
20000b54:	00000000 	andeq	r0, r0, r0

20000b58 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b7c <RemoteConfig::s_pThis>:
20000b7c:	00000000 	andeq	r0, r0, r0

20000b80 <SpiFlashStore::s_nWaitMillis>:
20000b80:	00000000 	andeq	r0, r0, r0

20000b84 <SpiFlashStore::s_SpiFlashData>:
	...

20001b84 <SpiFlashStore::s_nStartAddress>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_bHaveFlashChip>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_State>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <SpiFlashStore::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <SpiFlashStore::s_bIsNew>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreDisplayUdf::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreDmxSend::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <StoreE131::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <StoreNetwork::s_pThis>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <StoreRemoteConfig::s_pThis>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <FlashRom::s_pThis>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_nAddress>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_State>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nPage>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <flashrom::s_pData>:
20001bc0:	00000000 	andeq	r0, r0, r0

20001bc4 <flashrom::s_isBank0>:
20001bc4:	00000000 	andeq	r0, r0, r0

20001bc8 <flashrom::s_nLength>:
20001bc8:	00000000 	andeq	r0, r0, r0

20001bcc <g_ip_info>:
	...

20001bd8 <g_mac_address>:
20001bd8:	00000000 	andeq	r0, r0, r0
	...

20001bde <s_is_dhcp>:
	...

20001be0 <s_p>:
20001be0:	00000000 	andeq	r0, r0, r0

20001be4 <s_ticker>:
20001be4:	00000000 	andeq	r0, r0, r0

20001be8 <s_mac_address>:
	...

20001bf0 <s_mac_address_arp_reply>:
	...

20001bf8 <s_id>:
20001bf8:	00000000 	andeq	r0, r0, r0

20001bfc <s_recv_queue>:
	...

2000276c <s_tcb>:
	...

200027b0 <s_tcp>:
	...

20002d9c <broadcast_mask>:
20002d9c:	00000000 	andeq	r0, r0, r0

20002da0 <gw_ip>:
20002da0:	00000000 	andeq	r0, r0, r0

20002da4 <on_network_mask>:
20002da4:	00000000 	andeq	r0, r0, r0

20002da8 <s_id>:
20002da8:	00000000 	andeq	r0, r0, r0

20002dac <s_ports_allowed>:
	...

20002dcc <s_recv_queue>:
	...

20008a6c <s_send_packet>:
	...

20009058 <MDNS::s_nRemoteIp>:
20009058:	00000000 	andeq	r0, r0, r0

2000905c <MDNS::s_nRemotePort>:
2000905c:	00000000 	andeq	r0, r0, r0

20009060 <MDNS::s_nMulticastIp>:
20009060:	00000000 	andeq	r0, r0, r0

20009064 <MDNS::s_AnswerLocalIp>:
	...

20009268 <MDNS::s_ServiceRecords>:
	...

20009288 <MDNS::s_nBytesReceived>:
20009288:	00000000 	andeq	r0, r0, r0

2000928c <MDNS::s_ServiceRecordsData>:
	...

20009490 <MDNS::s_pName>:
20009490:	00000000 	andeq	r0, r0, r0

20009494 <MDNS::s_pBuffer>:
20009494:	00000000 	andeq	r0, r0, r0

20009498 <Network::s_pThis>:
20009498:	00000000 	andeq	r0, r0, r0

2000949c <NetworkParams::m_tNetworkParams>:
	...

200094fc <s_arp_announce>:
	...

20009528 <s_arp_reply>:
	...

20009554 <s_arp_request>:
	...

20009580 <s_arp_records>:
	...

20009700 <s_entry_current>:
20009700:	00000000 	andeq	r0, r0, r0

20009704 <s_dhcp_allocated_gw>:
20009704:	00000000 	andeq	r0, r0, r0

20009708 <s_dhcp_allocated_ip>:
20009708:	00000000 	andeq	r0, r0, r0

2000970c <s_dhcp_allocated_netmask>:
2000970c:	00000000 	andeq	r0, r0, r0

20009710 <s_dhcp_message>:
	...

20009934 <s_dhcp_server_ip>:
20009934:	00000000 	andeq	r0, r0, r0

20009938 <s_groups>:
	...

20009a58 <s_id>:
20009a58:	00000000 	andeq	r0, r0, r0

20009a5c <s_joins_allowed_index>:
20009a5c:	00000000 	andeq	r0, r0, r0

20009a60 <s_leave>:
	...

20009a90 <s_multicast_mac>:
	...

20009a98 <s_report>:
	...

20009ac8 <DisplayUdf::s_pThis>:
20009ac8:	00000000 	andeq	r0, r0, r0

20009acc <PropertiesConfig::s_Config>:
20009acc:	00000000 	andeq	r0, r0, r0

20009ad0 <Display::s_pThis>:
20009ad0:	00000000 	andeq	r0, r0, r0

20009ad4 <_ClearBuffer>:
	...

20009b5c <Ssd1306::s_pThis>:
20009b5c:	00000000 	andeq	r0, r0, r0

20009b60 <FirmwareVersion::s_FirmwareVersion>:
	...

20009b76 <FirmwareVersion::s_Print>:
	...

20009bb8 <FirmwareVersion::s_pThis>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <LedBlink::s_pThis>:
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <Hardware::s_pThis>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <outptr>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <last.0>:
	...

20009bd0 <s_micros>:
	...

20009bd8 <set_timer>:
20009bd8:	00000000 	andeq	r0, r0, r0

20009bdc <s_nSysTickMillis>:
20009bdc:	00000000 	andeq	r0, r0, r0

20009be0 <enet_init_status>:
20009be0:	00000000 	andeq	r0, r0, r0

20009be4 <s_nAddress>:
20009be4:	00000000 	andeq	r0, r0, r0

20009be8 <dma_current_ptp_rxdesc>:
20009be8:	00000000 	andeq	r0, r0, r0

20009bec <dma_current_ptp_txdesc>:
20009bec:	00000000 	andeq	r0, r0, r0

20009bf0 <dma_current_rxdesc>:
20009bf0:	00000000 	andeq	r0, r0, r0

20009bf4 <dma_current_txdesc>:
20009bf4:	00000000 	andeq	r0, r0, r0

20009bf8 <enet_initpara>:
	...

20009c34 <rx_buff>:
	...

2000cbd4 <rxdesc_tab>:
	...

2000cc54 <tx_buff>:
	...

2000d83c <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
