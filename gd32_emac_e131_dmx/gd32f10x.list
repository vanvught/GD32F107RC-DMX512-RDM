
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007e21 	stmdaeq	r0, {r0, r5, r9, sl, fp, ip, sp, lr}
 8007008:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800700c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007010:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007014:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007018:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
	...
 800702c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007030:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800703c:	08010061 	stmdaeq	r1, {r0, r5, r6}
 8007040:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007044:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007048:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800704c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007050:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007054:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007058:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800705c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007060:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007064:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007068:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800706c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007070:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007074:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007078:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800707c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007080:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007084:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007088:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800708c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007090:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007094:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007098:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800709c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070a0:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070a4:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070a8:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070ac:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070b0:	08009f15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, ip, pc}
 80070b4:	08009fb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip, pc}
 80070b8:	08009ff9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 80070bc:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070c0:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070c4:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070c8:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070cc:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070d0:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070d4:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070d8:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070dc:	08009d1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, fp, ip, pc}
 80070e0:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070e4:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070e8:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070ec:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070f0:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 80070f4:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
	...
 8007100:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800710c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007110:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007114:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007118:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800711c:	0800a019 	stmdaeq	r0, {r0, r3, r4, sp, pc}
 8007120:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007124:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007128:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800712c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007130:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007134:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007138:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800713c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007140:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007144:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 8007148:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}
 800714c:	08007e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9ab 	bl	80074e4 <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fe03 	bl	800ddac <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f005 f8fe 	bl	800c3b0 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f887 	bl	80072cc <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f007 f814 	bl	800e1ec <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001bd8 	ldrdcs	r1, [r0], -r8
 80071e8:	20001bcc 	andcs	r1, r0, ip, asr #23
 80071ec:	20001bde 	ldrdcs	r1, [r0], -lr

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f982 	bl	80074fa <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 bedc 	b.w	800dfbc <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001bde 	ldrdcs	r1, [r0], -lr

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001be8 	andcs	r1, r0, r8, ror #23

08007224 <tcp_init>:
 8007224:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007226:	2206      	movs	r2, #6
 8007228:	4c0e      	ldr	r4, [pc, #56]	; (8007264 <tcp_init+0x40>)
 800722a:	490f      	ldr	r1, [pc, #60]	; (8007268 <tcp_init+0x44>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f005 f919 	bl	800c464 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	2500      	movs	r5, #0
 8007238:	7323      	strb	r3, [r4, #12]
 800723a:	4b0c      	ldr	r3, [pc, #48]	; (800726c <tcp_init+0x48>)
 800723c:	eb0d 0102 	add.w	r1, sp, r2
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	f104 001a 	add.w	r0, r4, #26
 8007246:	9301      	str	r3, [sp, #4]
 8007248:	7365      	strb	r5, [r4, #13]
 800724a:	f005 f90b 	bl	800c464 <memcpy.isra.0>
 800724e:	2345      	movs	r3, #69	; 0x45
 8007250:	73a3      	strb	r3, [r4, #14]
 8007252:	2340      	movs	r3, #64	; 0x40
 8007254:	7523      	strb	r3, [r4, #20]
 8007256:	75a3      	strb	r3, [r4, #22]
 8007258:	2306      	movs	r3, #6
 800725a:	73e5      	strb	r5, [r4, #15]
 800725c:	7565      	strb	r5, [r4, #21]
 800725e:	75e3      	strb	r3, [r4, #23]
 8007260:	b003      	add	sp, #12
 8007262:	bd30      	pop	{r4, r5, pc}
 8007264:	200027ac 	andcs	r2, r0, ip, lsr #15
 8007268:	20001bd8 	ldrdcs	r1, [r0], -r8
 800726c:	20001bcc 	andcs	r1, r0, ip, asr #23

08007270 <udp_init>:
 8007270:	b570      	push	{r4, r5, r6, lr}
 8007272:	2200      	movs	r2, #0
 8007274:	2408      	movs	r4, #8
 8007276:	460e      	mov	r6, r1
 8007278:	4b0d      	ldr	r3, [pc, #52]	; (80072b0 <udp_init+0x40>)
 800727a:	490e      	ldr	r1, [pc, #56]	; (80072b4 <udp_init+0x44>)
 800727c:	3c01      	subs	r4, #1
 800727e:	801a      	strh	r2, [r3, #0]
 8007280:	805a      	strh	r2, [r3, #2]
 8007282:	f841 2b04 	str.w	r2, [r1], #4
 8007286:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800728a:	d1f7      	bne.n	800727c <udp_init+0xc>
 800728c:	2206      	movs	r2, #6
 800728e:	4d0a      	ldr	r5, [pc, #40]	; (80072b8 <udp_init+0x48>)
 8007290:	4b0a      	ldr	r3, [pc, #40]	; (80072bc <udp_init+0x4c>)
 8007292:	4601      	mov	r1, r0
 8007294:	18a8      	adds	r0, r5, r2
 8007296:	801c      	strh	r4, [r3, #0]
 8007298:	f005 fa70 	bl	800c77c <memcpy.isra.0>
 800729c:	4b08      	ldr	r3, [pc, #32]	; (80072c0 <udp_init+0x50>)
 800729e:	4630      	mov	r0, r6
 80072a0:	60eb      	str	r3, [r5, #12]
 80072a2:	4b08      	ldr	r3, [pc, #32]	; (80072c4 <udp_init+0x54>)
 80072a4:	616b      	str	r3, [r5, #20]
 80072a6:	f005 fa95 	bl	800c7d4 <udp_set_ip>
 80072aa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072ac:	bd70      	pop	{r4, r5, r6, pc}
 80072ae:	bf00      	nop
 80072b0:	20002dc8 	andcs	r2, r0, r8, asr #27
 80072b4:	20002da8 	andcs	r2, r0, r8, lsr #27
 80072b8:	20008a68 	andcs	r8, r0, r8, ror #20
 80072bc:	20002da4 	andcs	r2, r0, r4, lsr #27
 80072c0:	00450008 	subeq	r0, r5, r8
 80072c4:	11400040 	cmpne	r0, r0, asr #32

080072c8 <udp_shutdown>:
 80072c8:	4770      	bx	lr
	...

080072cc <arp_init>:
 80072cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d0:	4604      	mov	r4, r0
 80072d2:	460d      	mov	r5, r1
 80072d4:	f000 f876 	bl	80073c4 <arp_cache_init>
 80072d8:	2206      	movs	r2, #6
 80072da:	4621      	mov	r1, r4
 80072dc:	482e      	ldr	r0, [pc, #184]	; (8007398 <arp_init+0xcc>)
 80072de:	682f      	ldr	r7, [r5, #0]
 80072e0:	f006 fbd6 	bl	800da90 <memcpy.isra.0>
 80072e4:	4b2d      	ldr	r3, [pc, #180]	; (800739c <arp_init+0xd0>)
 80072e6:	2507      	movs	r5, #7
 80072e8:	461e      	mov	r6, r3
 80072ea:	22ff      	movs	r2, #255	; 0xff
 80072ec:	3d01      	subs	r5, #1
 80072ee:	d146      	bne.n	800737e <arp_init+0xb2>
 80072f0:	4b2b      	ldr	r3, [pc, #172]	; (80073a0 <arp_init+0xd4>)
 80072f2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073a4 <arp_init+0xd8>
 80072f6:	2206      	movs	r2, #6
 80072f8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072fc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007300:	4621      	mov	r1, r4
 8007302:	4829      	ldr	r0, [pc, #164]	; (80073a8 <arp_init+0xdc>)
 8007304:	82b3      	strh	r3, [r6, #20]
 8007306:	f006 fbc3 	bl	800da90 <memcpy.isra.0>
 800730a:	2307      	movs	r3, #7
 800730c:	4a27      	ldr	r2, [pc, #156]	; (80073ac <arp_init+0xe0>)
 800730e:	61f7      	str	r7, [r6, #28]
 8007310:	3b01      	subs	r3, #1
 8007312:	d137      	bne.n	8007384 <arp_init+0xb8>
 8007314:	2206      	movs	r2, #6
 8007316:	4621      	mov	r1, r4
 8007318:	4825      	ldr	r0, [pc, #148]	; (80073b0 <arp_init+0xe4>)
 800731a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800731e:	f006 fbb7 	bl	800da90 <memcpy.isra.0>
 8007322:	4a24      	ldr	r2, [pc, #144]	; (80073b4 <arp_init+0xe8>)
 8007324:	2306      	movs	r3, #6
 8007326:	4615      	mov	r5, r2
 8007328:	21ff      	movs	r1, #255	; 0xff
 800732a:	3b01      	subs	r3, #1
 800732c:	d22d      	bcs.n	800738a <arp_init+0xbe>
 800732e:	4b1c      	ldr	r3, [pc, #112]	; (80073a0 <arp_init+0xd4>)
 8007330:	2206      	movs	r2, #6
 8007332:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007336:	f44f 7380 	mov.w	r3, #256	; 0x100
 800733a:	4621      	mov	r1, r4
 800733c:	481e      	ldr	r0, [pc, #120]	; (80073b8 <arp_init+0xec>)
 800733e:	82ab      	strh	r3, [r5, #20]
 8007340:	f006 fba6 	bl	800da90 <memcpy.isra.0>
 8007344:	2307      	movs	r3, #7
 8007346:	2100      	movs	r1, #0
 8007348:	4a1c      	ldr	r2, [pc, #112]	; (80073bc <arp_init+0xf0>)
 800734a:	61ef      	str	r7, [r5, #28]
 800734c:	3b01      	subs	r3, #1
 800734e:	d11f      	bne.n	8007390 <arp_init+0xc4>
 8007350:	2206      	movs	r2, #6
 8007352:	4d1b      	ldr	r5, [pc, #108]	; (80073c0 <arp_init+0xf4>)
 8007354:	4621      	mov	r1, r4
 8007356:	18a8      	adds	r0, r5, r2
 8007358:	f006 fb9a 	bl	800da90 <memcpy.isra.0>
 800735c:	4b10      	ldr	r3, [pc, #64]	; (80073a0 <arp_init+0xd4>)
 800735e:	4621      	mov	r1, r4
 8007360:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007364:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007368:	f105 0016 	add.w	r0, r5, #22
 800736c:	2206      	movs	r2, #6
 800736e:	82ab      	strh	r3, [r5, #20]
 8007370:	f006 fb8e 	bl	800da90 <memcpy.isra.0>
 8007374:	61ef      	str	r7, [r5, #28]
 8007376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800737a:	f006 bb93 	b.w	800daa4 <arp_announce>
 800737e:	f803 2b01 	strb.w	r2, [r3], #1
 8007382:	e7b3      	b.n	80072ec <arp_init+0x20>
 8007384:	f802 5b01 	strb.w	r5, [r2], #1
 8007388:	e7c2      	b.n	8007310 <arp_init+0x44>
 800738a:	f802 1b01 	strb.w	r1, [r2], #1
 800738e:	e7cc      	b.n	800732a <arp_init+0x5e>
 8007390:	f802 1b01 	strb.w	r1, [r2], #1
 8007394:	e7da      	b.n	800734c <arp_init+0x80>
 8007396:	bf00      	nop
 8007398:	200094fe 	strdcs	r9, [r0], -lr
 800739c:	200094f8 	strdcs	r9, [r0], -r8
 80073a0:	01000608 	tsteq	r0, r8, lsl #12
 80073a4:	04060008 	streq	r0, [r6], #-8
 80073a8:	2000950e 	andcs	r9, r0, lr, lsl #10
 80073ac:	20009518 	andcs	r9, r0, r8, lsl r5
 80073b0:	20009556 	andcs	r9, r0, r6, asr r5
 80073b4:	20009550 	andcs	r9, r0, r0, asr r5
 80073b8:	20009566 	andcs	r9, r0, r6, ror #10
 80073bc:	20009570 	andcs	r9, r0, r0, ror r5
 80073c0:	20009524 	andcs	r9, r0, r4, lsr #10

080073c4 <arp_cache_init>:
 80073c4:	2300      	movs	r3, #0
 80073c6:	4618      	mov	r0, r3
 80073c8:	4a09      	ldr	r2, [pc, #36]	; (80073f0 <arp_cache_init+0x2c>)
 80073ca:	b510      	push	{r4, lr}
 80073cc:	8013      	strh	r3, [r2, #0]
 80073ce:	4a09      	ldr	r2, [pc, #36]	; (80073f4 <arp_cache_init+0x30>)
 80073d0:	4611      	mov	r1, r2
 80073d2:	f842 0c04 	str.w	r0, [r2, #-4]
 80073d6:	1d94      	adds	r4, r2, #6
 80073d8:	42a1      	cmp	r1, r4
 80073da:	d105      	bne.n	80073e8 <arp_cache_init+0x24>
 80073dc:	3303      	adds	r3, #3
 80073de:	2b60      	cmp	r3, #96	; 0x60
 80073e0:	f102 020c 	add.w	r2, r2, #12
 80073e4:	d1f4      	bne.n	80073d0 <arp_cache_init+0xc>
 80073e6:	bd10      	pop	{r4, pc}
 80073e8:	f801 0b01 	strb.w	r0, [r1], #1
 80073ec:	e7f4      	b.n	80073d8 <arp_cache_init+0x14>
 80073ee:	bf00      	nop
 80073f0:	200096fc 	strdcs	r9, [r0], -ip
 80073f4:	20009580 	andcs	r9, r0, r0, lsl #11

080073f8 <igmp_init>:
 80073f8:	2200      	movs	r2, #0
 80073fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073fe:	4605      	mov	r5, r0
 8007400:	4608      	mov	r0, r1
 8007402:	4611      	mov	r1, r2
 8007404:	4b23      	ldr	r3, [pc, #140]	; (8007494 <igmp_init+0x9c>)
 8007406:	f103 0408 	add.w	r4, r3, #8
 800740a:	42a3      	cmp	r3, r4
 800740c:	d13e      	bne.n	800748c <igmp_init+0x94>
 800740e:	3201      	adds	r2, #1
 8007410:	2a24      	cmp	r2, #36	; 0x24
 8007412:	d1f8      	bne.n	8007406 <igmp_init+0xe>
 8007414:	2600      	movs	r6, #0
 8007416:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa0>)
 8007418:	4c20      	ldr	r4, [pc, #128]	; (800749c <igmp_init+0xa4>)
 800741a:	601e      	str	r6, [r3, #0]
 800741c:	4b20      	ldr	r3, [pc, #128]	; (80074a0 <igmp_init+0xa8>)
 800741e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007422:	801e      	strh	r6, [r3, #0]
 8007424:	f006 fe42 	bl	800e0ac <igmp_set_ip>
 8007428:	2201      	movs	r2, #1
 800742a:	4b1e      	ldr	r3, [pc, #120]	; (80074a4 <igmp_init+0xac>)
 800742c:	4629      	mov	r1, r5
 800742e:	801a      	strh	r2, [r3, #0]
 8007430:	225e      	movs	r2, #94	; 0x5e
 8007432:	709a      	strb	r2, [r3, #2]
 8007434:	2206      	movs	r2, #6
 8007436:	18a0      	adds	r0, r4, r2
 8007438:	f006 fdee 	bl	800e018 <memcpy.isra.0>
 800743c:	f240 4394 	movw	r3, #1172	; 0x494
 8007440:	8463      	strh	r3, [r4, #34]	; 0x22
 8007442:	2316      	movs	r3, #22
 8007444:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a8 <igmp_init+0xb0>
 8007448:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074ac <igmp_init+0xb4>
 800744c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800744e:	f8c4 9014 	str.w	r9, [r4, #20]
 8007452:	4b17      	ldr	r3, [pc, #92]	; (80074b0 <igmp_init+0xb8>)
 8007454:	f8c4 800c 	str.w	r8, [r4, #12]
 8007458:	8227      	strh	r7, [r4, #16]
 800745a:	84a6      	strh	r6, [r4, #36]	; 0x24
 800745c:	4c15      	ldr	r4, [pc, #84]	; (80074b4 <igmp_init+0xbc>)
 800745e:	2206      	movs	r2, #6
 8007460:	6023      	str	r3, [r4, #0]
 8007462:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007466:	18a0      	adds	r0, r4, r2
 8007468:	80a3      	strh	r3, [r4, #4]
 800746a:	4629      	mov	r1, r5
 800746c:	f006 fdd4 	bl	800e018 <memcpy.isra.0>
 8007470:	23e0      	movs	r3, #224	; 0xe0
 8007472:	83e3      	strh	r3, [r4, #30]
 8007474:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007478:	4a0f      	ldr	r2, [pc, #60]	; (80074b8 <igmp_init+0xc0>)
 800747a:	f8c4 9014 	str.w	r9, [r4, #20]
 800747e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8007482:	f8c4 800c 	str.w	r8, [r4, #12]
 8007486:	8227      	strh	r7, [r4, #16]
 8007488:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800748c:	f803 1b01 	strb.w	r1, [r3], #1
 8007490:	e7bb      	b.n	800740a <igmp_init+0x12>
 8007492:	bf00      	nop
 8007494:	20009934 	andcs	r9, r0, r4, lsr r9
 8007498:	20009a58 	andcs	r9, r0, r8, asr sl
 800749c:	20009a94 	mulcs	r0, r4, sl
 80074a0:	20009a54 	andcs	r9, r0, r4, asr sl
 80074a4:	20009a8c 	andcs	r9, r0, ip, lsl #21
 80074a8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074ac:	00460008 	subeq	r0, r6, r8
 80074b0:	005e0001 	subseq	r0, lr, r1
 80074b4:	20009a5c 	andcs	r9, r0, ip, asr sl
 80074b8:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074bc <igmp_shutdown>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	2500      	movs	r5, #0
 80074c0:	462e      	mov	r6, r5
 80074c2:	4c07      	ldr	r4, [pc, #28]	; (80074e0 <igmp_shutdown+0x24>)
 80074c4:	6820      	ldr	r0, [r4, #0]
 80074c6:	b120      	cbz	r0, 80074d2 <igmp_shutdown+0x16>
 80074c8:	f006 fe4c 	bl	800e164 <igmp_leave>
 80074cc:	6026      	str	r6, [r4, #0]
 80074ce:	7166      	strb	r6, [r4, #5]
 80074d0:	7126      	strb	r6, [r4, #4]
 80074d2:	3501      	adds	r5, #1
 80074d4:	2d24      	cmp	r5, #36	; 0x24
 80074d6:	f104 0408 	add.w	r4, r4, #8
 80074da:	d1f3      	bne.n	80074c4 <igmp_shutdown+0x8>
 80074dc:	bd70      	pop	{r4, r5, r6, pc}
 80074de:	bf00      	nop
 80074e0:	20009934 	andcs	r9, r0, r4, lsr r9

080074e4 <ip_init>:
 80074e4:	b538      	push	{r3, r4, r5, lr}
 80074e6:	4604      	mov	r4, r0
 80074e8:	460d      	mov	r5, r1
 80074ea:	f7ff fec1 	bl	8007270 <udp_init>
 80074ee:	4629      	mov	r1, r5
 80074f0:	4620      	mov	r0, r4
 80074f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074f6:	f7ff bf7f 	b.w	80073f8 <igmp_init>

080074fa <ip_shutdown>:
 80074fa:	b508      	push	{r3, lr}
 80074fc:	f7ff ffde 	bl	80074bc <igmp_shutdown>
 8007500:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007504:	f7ff bee0 	b.w	80072c8 <udp_shutdown>

08007508 <console_init>:
 8007508:	b508      	push	{r3, lr}
 800750a:	f008 fd4b 	bl	800ffa4 <uart0_init>
 800750e:	4804      	ldr	r0, [pc, #16]	; (8007520 <console_init+0x18>)
 8007510:	f008 fd78 	bl	8010004 <uart0_puts>
 8007514:	4803      	ldr	r0, [pc, #12]	; (8007524 <console_init+0x1c>)
 8007516:	f008 fd75 	bl	8010004 <uart0_puts>
 800751a:	2000      	movs	r0, #0
 800751c:	bd08      	pop	{r3, pc}
 800751e:	bf00      	nop
 8007520:	08011d4c 	stmdaeq	r1, {r2, r3, r6, r8, sl, fp, ip}
 8007524:	08013a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, sp}

08007528 <net_handle>:
 8007528:	b510      	push	{r4, lr}
 800752a:	4c0c      	ldr	r4, [pc, #48]	; (800755c <net_handle+0x34>)
 800752c:	4620      	mov	r0, r4
 800752e:	f009 fbbb 	bl	8010ca8 <emac_eth_recv>
 8007532:	2800      	cmp	r0, #0
 8007534:	dd07      	ble.n	8007546 <net_handle+0x1e>
 8007536:	6820      	ldr	r0, [r4, #0]
 8007538:	8983      	ldrh	r3, [r0, #12]
 800753a:	2b08      	cmp	r3, #8
 800753c:	d107      	bne.n	800754e <net_handle+0x26>
 800753e:	f000 fa71 	bl	8007a24 <ip_handle>
 8007542:	f009 fbc5 	bl	8010cd0 <emac_free_pkt>
 8007546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800754a:	f004 bf21 	b.w	800c390 <net_timers_run>
 800754e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 8007552:	d1f6      	bne.n	8007542 <net_handle+0x1a>
 8007554:	f000 fa0a 	bl	800796c <arp_handle>
 8007558:	e7f3      	b.n	8007542 <net_handle+0x1a>
 800755a:	bf00      	nop
 800755c:	20001be0 	andcs	r1, r0, r0, ror #23

08007560 <tcp_handle>:
 8007560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007564:	4605      	mov	r5, r0
 8007566:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007568:	b085      	sub	sp, #20
 800756a:	ba5b      	rev16	r3, r3
 800756c:	8443      	strh	r3, [r0, #34]	; 0x22
 800756e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007570:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 8007574:	ba5b      	rev16	r3, r3
 8007576:	8483      	strh	r3, [r0, #36]	; 0x24
 8007578:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800757c:	f004 ff7c 	bl	800c478 <_bswap32>
 8007580:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007582:	4ca6      	ldr	r4, [pc, #664]	; (800781c <tcp_handle+0x2bc>)
 8007584:	ba5b      	rev16	r3, r3
 8007586:	862b      	strh	r3, [r5, #48]	; 0x30
 8007588:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800758a:	8822      	ldrh	r2, [r4, #0]
 800758c:	ba5b      	rev16	r3, r3
 800758e:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007590:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007592:	429a      	cmp	r2, r3
 8007594:	d14d      	bne.n	8007632 <tcp_handle+0xd2>
 8007596:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800759a:	2b01      	cmp	r3, #1
 800759c:	d00d      	beq.n	80075ba <tcp_handle+0x5a>
 800759e:	2204      	movs	r2, #4
 80075a0:	4668      	mov	r0, sp
 80075a2:	f105 011a 	add.w	r1, r5, #26
 80075a6:	f004 ff5d 	bl	800c464 <memcpy.isra.0>
 80075aa:	8862      	ldrh	r2, [r4, #2]
 80075ac:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075ae:	429a      	cmp	r2, r3
 80075b0:	d13f      	bne.n	8007632 <tcp_handle+0xd2>
 80075b2:	6862      	ldr	r2, [r4, #4]
 80075b4:	9b00      	ldr	r3, [sp, #0]
 80075b6:	429a      	cmp	r2, r3
 80075b8:	d13b      	bne.n	8007632 <tcp_handle+0xd2>
 80075ba:	2204      	movs	r2, #4
 80075bc:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075c0:	eb0d 0002 	add.w	r0, sp, r2
 80075c4:	f004 ff4e 	bl	800c464 <memcpy.isra.0>
 80075c8:	2204      	movs	r2, #4
 80075ca:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075ce:	eb0d 0002 	add.w	r0, sp, r2
 80075d2:	9e01      	ldr	r6, [sp, #4]
 80075d4:	f004 ff46 	bl	800c464 <memcpy.isra.0>
 80075d8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075dc:	9f01      	ldr	r7, [sp, #4]
 80075de:	2a01      	cmp	r2, #1
 80075e0:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075e4:	d01b      	beq.n	800761e <tcp_handle+0xbe>
 80075e6:	1ed3      	subs	r3, r2, #3
 80075e8:	2b07      	cmp	r3, #7
 80075ea:	d822      	bhi.n	8007632 <tcp_handle+0xd2>
 80075ec:	ea4f 1318 	mov.w	r3, r8, lsr #4
 80075f0:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075f4:	fa9b fb9b 	rev16.w	fp, fp
 80075f8:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075fc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075fe:	44d8      	add	r8, fp
 8007600:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007604:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007608:	fa1f f888 	uxth.w	r8, r8
 800760c:	2900      	cmp	r1, #0
 800760e:	d142      	bne.n	8007696 <tcp_handle+0x136>
 8007610:	f1b8 0f00 	cmp.w	r8, #0
 8007614:	d16b      	bne.n	80076ee <tcp_handle+0x18e>
 8007616:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007618:	42bb      	cmp	r3, r7
 800761a:	d168      	bne.n	80076ee <tcp_handle+0x18e>
 800761c:	e048      	b.n	80076b0 <tcp_handle+0x150>
 800761e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007622:	075a      	lsls	r2, r3, #29
 8007624:	d405      	bmi.n	8007632 <tcp_handle+0xd2>
 8007626:	06d8      	lsls	r0, r3, #27
 8007628:	d506      	bpl.n	8007638 <tcp_handle+0xd8>
 800762a:	4628      	mov	r0, r5
 800762c:	497b      	ldr	r1, [pc, #492]	; (800781c <tcp_handle+0x2bc>)
 800762e:	f004 fff7 	bl	800c620 <_send_reset>
 8007632:	b005      	add	sp, #20
 8007634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007638:	0799      	lsls	r1, r3, #30
 800763a:	d5fa      	bpl.n	8007632 <tcp_handle+0xd2>
 800763c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007640:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007644:	4668      	mov	r0, sp
 8007646:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800764a:	f105 011a 	add.w	r1, r5, #26
 800764e:	2204      	movs	r2, #4
 8007650:	8063      	strh	r3, [r4, #2]
 8007652:	f004 ff07 	bl	800c464 <memcpy.isra.0>
 8007656:	2206      	movs	r2, #6
 8007658:	9b00      	ldr	r3, [sp, #0]
 800765a:	18a9      	adds	r1, r5, r2
 800765c:	4870      	ldr	r0, [pc, #448]	; (8007820 <tcp_handle+0x2c0>)
 800765e:	6063      	str	r3, [r4, #4]
 8007660:	f004 ff00 	bl	800c464 <memcpy.isra.0>
 8007664:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007666:	1c7b      	adds	r3, r7, #1
 8007668:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800766c:	6363      	str	r3, [r4, #52]	; 0x34
 800766e:	2312      	movs	r3, #18
 8007670:	486a      	ldr	r0, [pc, #424]	; (800781c <tcp_handle+0x2bc>)
 8007672:	a901      	add	r1, sp, #4
 8007674:	f88d 300c 	strb.w	r3, [sp, #12]
 8007678:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800767c:	63e7      	str	r7, [r4, #60]	; 0x3c
 800767e:	f8c4 a018 	str.w	sl, [r4, #24]
 8007682:	f004 ff1f 	bl	800c4c4 <_tcp_send_package>
 8007686:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007688:	1c5a      	adds	r2, r3, #1
 800768a:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800768e:	2303      	movs	r3, #3
 8007690:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007694:	e7cd      	b.n	8007632 <tcp_handle+0xd2>
 8007696:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007698:	eba3 0c07 	sub.w	ip, r3, r7
 800769c:	f1b8 0f00 	cmp.w	r8, #0
 80076a0:	d10d      	bne.n	80076be <tcp_handle+0x15e>
 80076a2:	f1bc 0f00 	cmp.w	ip, #0
 80076a6:	dc22      	bgt.n	80076ee <tcp_handle+0x18e>
 80076a8:	1afb      	subs	r3, r7, r3
 80076aa:	1a5b      	subs	r3, r3, r1
 80076ac:	2b00      	cmp	r3, #0
 80076ae:	da1e      	bge.n	80076ee <tcp_handle+0x18e>
 80076b0:	0743      	lsls	r3, r0, #29
 80076b2:	d530      	bpl.n	8007716 <tcp_handle+0x1b6>
 80076b4:	8821      	ldrh	r1, [r4, #0]
 80076b6:	4859      	ldr	r0, [pc, #356]	; (800781c <tcp_handle+0x2bc>)
 80076b8:	f004 feba 	bl	800c430 <_init_tcb>
 80076bc:	e7b9      	b.n	8007632 <tcp_handle+0xd2>
 80076be:	f1bc 0f00 	cmp.w	ip, #0
 80076c2:	dc06      	bgt.n	80076d2 <tcp_handle+0x172>
 80076c4:	eba7 0c03 	sub.w	ip, r7, r3
 80076c8:	ebac 0c01 	sub.w	ip, ip, r1
 80076cc:	f1bc 0f00 	cmp.w	ip, #0
 80076d0:	dbee      	blt.n	80076b0 <tcp_handle+0x150>
 80076d2:	eb08 0c07 	add.w	ip, r8, r7
 80076d6:	f103 0e01 	add.w	lr, r3, #1
 80076da:	ebae 0e0c 	sub.w	lr, lr, ip
 80076de:	f1be 0f00 	cmp.w	lr, #0
 80076e2:	dc04      	bgt.n	80076ee <tcp_handle+0x18e>
 80076e4:	43db      	mvns	r3, r3
 80076e6:	1a5b      	subs	r3, r3, r1
 80076e8:	eb13 0f0c 	cmn.w	r3, ip
 80076ec:	d4e0      	bmi.n	80076b0 <tcp_handle+0x150>
 80076ee:	0742      	lsls	r2, r0, #29
 80076f0:	d505      	bpl.n	80076fe <tcp_handle+0x19e>
 80076f2:	8821      	ldrh	r1, [r4, #0]
 80076f4:	4849      	ldr	r0, [pc, #292]	; (800781c <tcp_handle+0x2bc>)
 80076f6:	f004 fe9b 	bl	800c430 <_init_tcb>
 80076fa:	2301      	movs	r3, #1
 80076fc:	e7c8      	b.n	8007690 <tcp_handle+0x130>
 80076fe:	6963      	ldr	r3, [r4, #20]
 8007700:	9301      	str	r3, [sp, #4]
 8007702:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007704:	9302      	str	r3, [sp, #8]
 8007706:	2310      	movs	r3, #16
 8007708:	4844      	ldr	r0, [pc, #272]	; (800781c <tcp_handle+0x2bc>)
 800770a:	a901      	add	r1, sp, #4
 800770c:	f88d 300c 	strb.w	r3, [sp, #12]
 8007710:	f004 fed8 	bl	800c4c4 <_tcp_send_package>
 8007714:	e78d      	b.n	8007632 <tcp_handle+0xd2>
 8007716:	0781      	lsls	r1, r0, #30
 8007718:	d505      	bpl.n	8007726 <tcp_handle+0x1c6>
 800771a:	2a03      	cmp	r2, #3
 800771c:	d0ed      	beq.n	80076fa <tcp_handle+0x19a>
 800771e:	4628      	mov	r0, r5
 8007720:	493e      	ldr	r1, [pc, #248]	; (800781c <tcp_handle+0x2bc>)
 8007722:	f004 ff7d 	bl	800c620 <_send_reset>
 8007726:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800772a:	06da      	lsls	r2, r3, #27
 800772c:	d581      	bpl.n	8007632 <tcp_handle+0xd2>
 800772e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007732:	3b03      	subs	r3, #3
 8007734:	2b07      	cmp	r3, #7
 8007736:	d818      	bhi.n	800776a <tcp_handle+0x20a>
 8007738:	e8df f003 	tbb	[pc, r3]
 800773c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007740:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 8007744:	6923      	ldr	r3, [r4, #16]
 8007746:	1b9b      	subs	r3, r3, r6
 8007748:	2b00      	cmp	r3, #0
 800774a:	dc0a      	bgt.n	8007762 <tcp_handle+0x202>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	1af3      	subs	r3, r6, r3
 8007750:	2b00      	cmp	r3, #0
 8007752:	dc06      	bgt.n	8007762 <tcp_handle+0x202>
 8007754:	2304      	movs	r3, #4
 8007756:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800775a:	f8c4 a018 	str.w	sl, [r4, #24]
 800775e:	6126      	str	r6, [r4, #16]
 8007760:	e796      	b.n	8007690 <tcp_handle+0x130>
 8007762:	4628      	mov	r0, r5
 8007764:	492d      	ldr	r1, [pc, #180]	; (800781c <tcp_handle+0x2bc>)
 8007766:	f004 ff5b 	bl	800c620 <_send_reset>
 800776a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800776e:	3b04      	subs	r3, #4
 8007770:	2b02      	cmp	r3, #2
 8007772:	d830      	bhi.n	80077d6 <tcp_handle+0x276>
 8007774:	f1b8 0f00 	cmp.w	r8, #0
 8007778:	d02d      	beq.n	80077d6 <tcp_handle+0x276>
 800777a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800777c:	42bb      	cmp	r3, r7
 800777e:	f040 8092 	bne.w	80078a6 <tcp_handle+0x346>
 8007782:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8007786:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007824 <tcp_handle+0x2c4>
 800778a:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800778e:	f8ba 7000 	ldrh.w	r7, [sl]
 8007792:	4642      	mov	r2, r8
 8007794:	435f      	muls	r7, r3
 8007796:	1d38      	adds	r0, r7, #4
 8007798:	4449      	add	r1, r9
 800779a:	4450      	add	r0, sl
 800779c:	f004 fe62 	bl	800c464 <memcpy.isra.0>
 80077a0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077a4:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077a8:	8722      	strh	r2, [r4, #56]	; 0x38
 80077aa:	6962      	ldr	r2, [r4, #20]
 80077ac:	4443      	add	r3, r8
 80077ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077b2:	6363      	str	r3, [r4, #52]	; 0x34
 80077b4:	2310      	movs	r3, #16
 80077b6:	4457      	add	r7, sl
 80077b8:	4818      	ldr	r0, [pc, #96]	; (800781c <tcp_handle+0x2bc>)
 80077ba:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077be:	a901      	add	r1, sp, #4
 80077c0:	f88d 300c 	strb.w	r3, [sp, #12]
 80077c4:	f004 fe7e 	bl	800c4c4 <_tcp_send_package>
 80077c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80077cc:	3301      	adds	r3, #1
 80077ce:	f003 0301 	and.w	r3, r3, #1
 80077d2:	f8aa 3000 	strh.w	r3, [sl]
 80077d6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077da:	2b02      	cmp	r3, #2
 80077dc:	f67f af29 	bls.w	8007632 <tcp_handle+0xd2>
 80077e0:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077e4:	07db      	lsls	r3, r3, #31
 80077e6:	f57f af24 	bpl.w	8007632 <tcp_handle+0xd2>
 80077ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ec:	6962      	ldr	r2, [r4, #20]
 80077ee:	3301      	adds	r3, #1
 80077f0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077f4:	6363      	str	r3, [r4, #52]	; 0x34
 80077f6:	2310      	movs	r3, #16
 80077f8:	4808      	ldr	r0, [pc, #32]	; (800781c <tcp_handle+0x2bc>)
 80077fa:	a901      	add	r1, sp, #4
 80077fc:	f88d 300c 	strb.w	r3, [sp, #12]
 8007800:	f004 fe60 	bl	800c4c4 <_tcp_send_package>
 8007804:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007808:	2b05      	cmp	r3, #5
 800780a:	d054      	beq.n	80078b6 <tcp_handle+0x356>
 800780c:	d84e      	bhi.n	80078ac <tcp_handle+0x34c>
 800780e:	3b03      	subs	r3, #3
 8007810:	2b01      	cmp	r3, #1
 8007812:	f63f af0e 	bhi.w	8007632 <tcp_handle+0xd2>
 8007816:	2307      	movs	r3, #7
 8007818:	e73a      	b.n	8007690 <tcp_handle+0x130>
 800781a:	bf00      	nop
 800781c:	20002768 	andcs	r2, r0, r8, ror #14
 8007820:	20002770 	andcs	r2, r0, r0, ror r7
 8007824:	20001bf8 	strdcs	r1, [r0], -r8
 8007828:	6923      	ldr	r3, [r4, #16]
 800782a:	1b99      	subs	r1, r3, r6
 800782c:	d513      	bpl.n	8007856 <tcp_handle+0x2f6>
 800782e:	6962      	ldr	r2, [r4, #20]
 8007830:	1ab2      	subs	r2, r6, r2
 8007832:	2a00      	cmp	r2, #0
 8007834:	dc0f      	bgt.n	8007856 <tcp_handle+0x2f6>
 8007836:	6126      	str	r6, [r4, #16]
 8007838:	6a23      	ldr	r3, [r4, #32]
 800783a:	1bda      	subs	r2, r3, r7
 800783c:	2a00      	cmp	r2, #0
 800783e:	db05      	blt.n	800784c <tcp_handle+0x2ec>
 8007840:	42bb      	cmp	r3, r7
 8007842:	d192      	bne.n	800776a <tcp_handle+0x20a>
 8007844:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007846:	1b9b      	subs	r3, r3, r6
 8007848:	2b00      	cmp	r3, #0
 800784a:	dc8e      	bgt.n	800776a <tcp_handle+0x20a>
 800784c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007850:	f8c4 a018 	str.w	sl, [r4, #24]
 8007854:	e789      	b.n	800776a <tcp_handle+0x20a>
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc06      	bgt.n	800786a <tcp_handle+0x30a>
 800785c:	2900      	cmp	r1, #0
 800785e:	dc84      	bgt.n	800776a <tcp_handle+0x20a>
 8007860:	6963      	ldr	r3, [r4, #20]
 8007862:	1af3      	subs	r3, r6, r3
 8007864:	2b00      	cmp	r3, #0
 8007866:	dc80      	bgt.n	800776a <tcp_handle+0x20a>
 8007868:	e7e6      	b.n	8007838 <tcp_handle+0x2d8>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	1b9a      	subs	r2, r3, r6
 800786e:	2a00      	cmp	r2, #0
 8007870:	f6bf af7b 	bge.w	800776a <tcp_handle+0x20a>
 8007874:	e744      	b.n	8007700 <tcp_handle+0x1a0>
 8007876:	6963      	ldr	r3, [r4, #20]
 8007878:	42b3      	cmp	r3, r6
 800787a:	f47f af76 	bne.w	800776a <tcp_handle+0x20a>
 800787e:	8821      	ldrh	r1, [r4, #0]
 8007880:	480f      	ldr	r0, [pc, #60]	; (80078c0 <tcp_handle+0x360>)
 8007882:	f004 fdd5 	bl	800c430 <_init_tcb>
 8007886:	e770      	b.n	800776a <tcp_handle+0x20a>
 8007888:	6963      	ldr	r3, [r4, #20]
 800788a:	42b3      	cmp	r3, r6
 800788c:	f47f af6d 	bne.w	800776a <tcp_handle+0x20a>
 8007890:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007892:	480b      	ldr	r0, [pc, #44]	; (80078c0 <tcp_handle+0x360>)
 8007894:	9302      	str	r3, [sp, #8]
 8007896:	2310      	movs	r3, #16
 8007898:	a901      	add	r1, sp, #4
 800789a:	9601      	str	r6, [sp, #4]
 800789c:	f88d 300c 	strb.w	r3, [sp, #12]
 80078a0:	f004 fe10 	bl	800c4c4 <_tcp_send_package>
 80078a4:	e761      	b.n	800776a <tcp_handle+0x20a>
 80078a6:	6962      	ldr	r2, [r4, #20]
 80078a8:	9201      	str	r2, [sp, #4]
 80078aa:	e72b      	b.n	8007704 <tcp_handle+0x1a4>
 80078ac:	2b06      	cmp	r3, #6
 80078ae:	f47f aec0 	bne.w	8007632 <tcp_handle+0xd2>
 80078b2:	230a      	movs	r3, #10
 80078b4:	e6ec      	b.n	8007690 <tcp_handle+0x130>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	42b3      	cmp	r3, r6
 80078ba:	d0fa      	beq.n	80078b2 <tcp_handle+0x352>
 80078bc:	2308      	movs	r3, #8
 80078be:	e6e7      	b.n	8007690 <tcp_handle+0x130>
 80078c0:	20002768 	andcs	r2, r0, r8, ror #14

080078c4 <udp_handle>:
 80078c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078c8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078ca:	4607      	mov	r7, r0
 80078cc:	ba5b      	rev16	r3, r3
 80078ce:	b29b      	uxth	r3, r3
 80078d0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078d4:	2a01      	cmp	r2, #1
 80078d6:	d904      	bls.n	80078e2 <udp_handle+0x1e>
 80078d8:	2b7b      	cmp	r3, #123	; 0x7b
 80078da:	d002      	beq.n	80078e2 <udp_handle+0x1e>
 80078dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078e0:	d308      	bcc.n	80078f4 <udp_handle+0x30>
 80078e2:	2400      	movs	r4, #0
 80078e4:	4a1f      	ldr	r2, [pc, #124]	; (8007964 <udp_handle+0xa0>)
 80078e6:	f852 1b04 	ldr.w	r1, [r2], #4
 80078ea:	4299      	cmp	r1, r3
 80078ec:	d005      	beq.n	80078fa <udp_handle+0x36>
 80078ee:	3401      	adds	r4, #1
 80078f0:	2c08      	cmp	r4, #8
 80078f2:	d1f8      	bne.n	80078e6 <udp_handle+0x22>
 80078f4:	b002      	add	sp, #8
 80078f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078fa:	f640 3394 	movw	r3, #2964	; 0xb94
 80078fe:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007900:	435c      	muls	r4, r3
 8007902:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007906:	ba76      	rev16	r6, r6
 8007908:	3e08      	subs	r6, #8
 800790a:	b2b6      	uxth	r6, r6
 800790c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007910:	bf28      	it	cs
 8007912:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007916:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8007968 <udp_handle+0xa4>
 800791a:	1d20      	adds	r0, r4, #4
 800791c:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007920:	4632      	mov	r2, r6
 8007922:	435d      	muls	r5, r3
 8007924:	4428      	add	r0, r5
 8007926:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800792a:	4440      	add	r0, r8
 800792c:	f004 ff26 	bl	800c77c <memcpy.isra.0>
 8007930:	2204      	movs	r2, #4
 8007932:	f107 011a 	add.w	r1, r7, #26
 8007936:	eb0d 0002 	add.w	r0, sp, r2
 800793a:	f004 ff1f 	bl	800c77c <memcpy.isra.0>
 800793e:	9a01      	ldr	r2, [sp, #4]
 8007940:	192b      	adds	r3, r5, r4
 8007942:	4443      	add	r3, r8
 8007944:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007948:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800794a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800794e:	ba52      	rev16	r2, r2
 8007950:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007954:	f838 3004 	ldrh.w	r3, [r8, r4]
 8007958:	3301      	adds	r3, #1
 800795a:	f003 0301 	and.w	r3, r3, #1
 800795e:	f828 3004 	strh.w	r3, [r8, r4]
 8007962:	e7c7      	b.n	80078f4 <udp_handle+0x30>
 8007964:	20002da8 	andcs	r2, r0, r8, lsr #27
 8007968:	20002dc8 	andcs	r2, r0, r8, asr #27

0800796c <arp_handle>:
 800796c:	8a83      	ldrh	r3, [r0, #20]
 800796e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007972:	d003      	beq.n	800797c <arp_handle+0x10>
 8007974:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007978:	d002      	beq.n	8007980 <arp_handle+0x14>
 800797a:	4770      	bx	lr
 800797c:	f006 b89c 	b.w	800dab8 <arp_handle_request>
 8007980:	f006 b8c2 	b.w	800db08 <arp_handle_reply>

08007984 <igmp_handle>:
 8007984:	7b83      	ldrb	r3, [r0, #14]
 8007986:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800798a:	2b45      	cmp	r3, #69	; 0x45
 800798c:	d116      	bne.n	80079bc <igmp_handle+0x38>
 800798e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007992:	2b11      	cmp	r3, #17
 8007994:	d112      	bne.n	80079bc <igmp_handle+0x38>
 8007996:	4b20      	ldr	r3, [pc, #128]	; (8007a18 <igmp_handle+0x94>)
 8007998:	f100 051e 	add.w	r5, r0, #30
 800799c:	9300      	str	r3, [sp, #0]
 800799e:	466a      	mov	r2, sp
 80079a0:	462b      	mov	r3, r5
 80079a2:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079a6:	42b3      	cmp	r3, r6
 80079a8:	d10b      	bne.n	80079c2 <igmp_handle+0x3e>
 80079aa:	2401      	movs	r4, #1
 80079ac:	2100      	movs	r1, #0
 80079ae:	f04f 0c01 	mov.w	ip, #1
 80079b2:	4b1a      	ldr	r3, [pc, #104]	; (8007a1c <igmp_handle+0x98>)
 80079b4:	4a1a      	ldr	r2, [pc, #104]	; (8007a20 <igmp_handle+0x9c>)
 80079b6:	681f      	ldr	r7, [r3, #0]
 80079b8:	428f      	cmp	r7, r1
 80079ba:	d10a      	bne.n	80079d2 <igmp_handle+0x4e>
 80079bc:	b003      	add	sp, #12
 80079be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079c2:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079c6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ca:	428c      	cmp	r4, r1
 80079cc:	d0eb      	beq.n	80079a6 <igmp_handle+0x22>
 80079ce:	2400      	movs	r4, #0
 80079d0:	e7ec      	b.n	80079ac <igmp_handle+0x28>
 80079d2:	6813      	ldr	r3, [r2, #0]
 80079d4:	9301      	str	r3, [sp, #4]
 80079d6:	b924      	cbnz	r4, 80079e2 <igmp_handle+0x5e>
 80079d8:	462b      	mov	r3, r5
 80079da:	f10d 0e04 	add.w	lr, sp, #4
 80079de:	42b3      	cmp	r3, r6
 80079e0:	d10e      	bne.n	8007a00 <igmp_handle+0x7c>
 80079e2:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079e6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079ea:	f1be 0f01 	cmp.w	lr, #1
 80079ee:	d110      	bne.n	8007a12 <igmp_handle+0x8e>
 80079f0:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079f4:	459e      	cmp	lr, r3
 80079f6:	d909      	bls.n	8007a0c <igmp_handle+0x88>
 80079f8:	085b      	lsrs	r3, r3, #1
 80079fa:	3301      	adds	r3, #1
 80079fc:	7113      	strb	r3, [r2, #4]
 80079fe:	e005      	b.n	8007a0c <igmp_handle+0x88>
 8007a00:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a04:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a08:	45c1      	cmp	r9, r8
 8007a0a:	d0e8      	beq.n	80079de <igmp_handle+0x5a>
 8007a0c:	3101      	adds	r1, #1
 8007a0e:	3208      	adds	r2, #8
 8007a10:	e7d2      	b.n	80079b8 <igmp_handle+0x34>
 8007a12:	f882 c005 	strb.w	ip, [r2, #5]
 8007a16:	e7ef      	b.n	80079f8 <igmp_handle+0x74>
 8007a18:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a1c:	20009a58 	andcs	r9, r0, r8, asr sl
 8007a20:	20009934 	andcs	r9, r0, r4, lsr r9

08007a24 <ip_handle>:
 8007a24:	7b82      	ldrb	r2, [r0, #14]
 8007a26:	7dc3      	ldrb	r3, [r0, #23]
 8007a28:	2a45      	cmp	r2, #69	; 0x45
 8007a2a:	d003      	beq.n	8007a34 <ip_handle+0x10>
 8007a2c:	2b02      	cmp	r3, #2
 8007a2e:	d111      	bne.n	8007a54 <ip_handle+0x30>
 8007a30:	f7ff bfa8 	b.w	8007984 <igmp_handle>
 8007a34:	2b06      	cmp	r3, #6
 8007a36:	d00b      	beq.n	8007a50 <ip_handle+0x2c>
 8007a38:	d804      	bhi.n	8007a44 <ip_handle+0x20>
 8007a3a:	2b01      	cmp	r3, #1
 8007a3c:	d006      	beq.n	8007a4c <ip_handle+0x28>
 8007a3e:	2b02      	cmp	r3, #2
 8007a40:	d0f6      	beq.n	8007a30 <ip_handle+0xc>
 8007a42:	4770      	bx	lr
 8007a44:	2b11      	cmp	r3, #17
 8007a46:	d105      	bne.n	8007a54 <ip_handle+0x30>
 8007a48:	f7ff bf3c 	b.w	80078c4 <udp_handle>
 8007a4c:	f000 b804 	b.w	8007a58 <icmp_handle>
 8007a50:	f7ff bd86 	b.w	8007560 <tcp_handle>
 8007a54:	4770      	bx	lr
	...

08007a58 <icmp_handle>:
 8007a58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a5a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a5e:	4604      	mov	r4, r0
 8007a60:	2b08      	cmp	r3, #8
 8007a62:	d13e      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a64:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a68:	2d00      	cmp	r5, #0
 8007a6a:	d13a      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a6c:	1d86      	adds	r6, r0, #6
 8007a6e:	4631      	mov	r1, r6
 8007a70:	2206      	movs	r2, #6
 8007a72:	f006 fbe1 	bl	800e238 <memcpy.isra.0>
 8007a76:	4630      	mov	r0, r6
 8007a78:	2206      	movs	r2, #6
 8007a7a:	491b      	ldr	r1, [pc, #108]	; (8007ae8 <icmp_handle+0x90>)
 8007a7c:	f006 fbdc 	bl	800e238 <memcpy.isra.0>
 8007a80:	8a63      	ldrh	r3, [r4, #18]
 8007a82:	f104 061a 	add.w	r6, r4, #26
 8007a86:	43db      	mvns	r3, r3
 8007a88:	4631      	mov	r1, r6
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	8263      	strh	r3, [r4, #18]
 8007a8e:	f104 001e 	add.w	r0, r4, #30
 8007a92:	f006 fbd1 	bl	800e238 <memcpy.isra.0>
 8007a96:	2204      	movs	r2, #4
 8007a98:	4b14      	ldr	r3, [pc, #80]	; (8007aec <icmp_handle+0x94>)
 8007a9a:	eb0d 0102 	add.w	r1, sp, r2
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	4630      	mov	r0, r6
 8007aa2:	f104 060e 	add.w	r6, r4, #14
 8007aa6:	9301      	str	r3, [sp, #4]
 8007aa8:	f006 fbc6 	bl	800e238 <memcpy.isra.0>
 8007aac:	2114      	movs	r1, #20
 8007aae:	4630      	mov	r0, r6
 8007ab0:	7625      	strb	r5, [r4, #24]
 8007ab2:	7665      	strb	r5, [r4, #25]
 8007ab4:	f006 fba3 	bl	800e1fe <net_chksum>
 8007ab8:	8a21      	ldrh	r1, [r4, #16]
 8007aba:	8320      	strh	r0, [r4, #24]
 8007abc:	ba49      	rev16	r1, r1
 8007abe:	b289      	uxth	r1, r1
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007ac6:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007aca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ace:	f006 fb96 	bl	800e1fe <net_chksum>
 8007ad2:	8a21      	ldrh	r1, [r4, #16]
 8007ad4:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007ad6:	ba49      	rev16	r1, r1
 8007ad8:	b289      	uxth	r1, r1
 8007ada:	4620      	mov	r0, r4
 8007adc:	310e      	adds	r1, #14
 8007ade:	f009 f8fb 	bl	8010cd8 <emac_eth_send>
 8007ae2:	b002      	add	sp, #8
 8007ae4:	bd70      	pop	{r4, r5, r6, pc}
 8007ae6:	bf00      	nop
 8007ae8:	20001bd8 	ldrdcs	r1, [r0], -r8
 8007aec:	20001bcc 	andcs	r1, r0, ip, asr #23

08007af0 <__aeabi_uldivmod>:
 8007af0:	b953      	cbnz	r3, 8007b08 <__aeabi_uldivmod+0x18>
 8007af2:	b94a      	cbnz	r2, 8007b08 <__aeabi_uldivmod+0x18>
 8007af4:	2900      	cmp	r1, #0
 8007af6:	bf08      	it	eq
 8007af8:	2800      	cmpeq	r0, #0
 8007afa:	bf1c      	itt	ne
 8007afc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007b00:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007b04:	f000 b98a 	b.w	8007e1c <__aeabi_idiv0>
 8007b08:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b0c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b10:	f000 f81a 	bl	8007b48 <__udivmoddi4>
 8007b14:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b18:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b1c:	b004      	add	sp, #16
 8007b1e:	4770      	bx	lr

08007b20 <__popcountsi2>:
 8007b20:	0843      	lsrs	r3, r0, #1
 8007b22:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007b26:	1ac0      	subs	r0, r0, r3
 8007b28:	0883      	lsrs	r3, r0, #2
 8007b2a:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8007b2e:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007b32:	4418      	add	r0, r3
 8007b34:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007b38:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007b3c:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8007b40:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007b44:	0e00      	lsrs	r0, r0, #24
 8007b46:	4770      	bx	lr

08007b48 <__udivmoddi4>:
 8007b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007b4c:	9e08      	ldr	r6, [sp, #32]
 8007b4e:	460d      	mov	r5, r1
 8007b50:	4604      	mov	r4, r0
 8007b52:	4688      	mov	r8, r1
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d14d      	bne.n	8007bf4 <__udivmoddi4+0xac>
 8007b58:	428a      	cmp	r2, r1
 8007b5a:	4694      	mov	ip, r2
 8007b5c:	d968      	bls.n	8007c30 <__udivmoddi4+0xe8>
 8007b5e:	fab2 f282 	clz	r2, r2
 8007b62:	b152      	cbz	r2, 8007b7a <__udivmoddi4+0x32>
 8007b64:	fa01 f302 	lsl.w	r3, r1, r2
 8007b68:	f1c2 0120 	rsb	r1, r2, #32
 8007b6c:	fa20 f101 	lsr.w	r1, r0, r1
 8007b70:	fa0c fc02 	lsl.w	ip, ip, r2
 8007b74:	ea41 0803 	orr.w	r8, r1, r3
 8007b78:	4094      	lsls	r4, r2
 8007b7a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007b7e:	fbb8 f7f1 	udiv	r7, r8, r1
 8007b82:	fa1f fe8c 	uxth.w	lr, ip
 8007b86:	fb01 8817 	mls	r8, r1, r7, r8
 8007b8a:	fb07 f00e 	mul.w	r0, r7, lr
 8007b8e:	0c23      	lsrs	r3, r4, #16
 8007b90:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007b94:	4298      	cmp	r0, r3
 8007b96:	d90a      	bls.n	8007bae <__udivmoddi4+0x66>
 8007b98:	eb1c 0303 	adds.w	r3, ip, r3
 8007b9c:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007ba0:	f080 811e 	bcs.w	8007de0 <__udivmoddi4+0x298>
 8007ba4:	4298      	cmp	r0, r3
 8007ba6:	f240 811b 	bls.w	8007de0 <__udivmoddi4+0x298>
 8007baa:	3f02      	subs	r7, #2
 8007bac:	4463      	add	r3, ip
 8007bae:	1a1b      	subs	r3, r3, r0
 8007bb0:	fbb3 f0f1 	udiv	r0, r3, r1
 8007bb4:	fb01 3310 	mls	r3, r1, r0, r3
 8007bb8:	fb00 fe0e 	mul.w	lr, r0, lr
 8007bbc:	b2a4      	uxth	r4, r4
 8007bbe:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007bc2:	45a6      	cmp	lr, r4
 8007bc4:	d90a      	bls.n	8007bdc <__udivmoddi4+0x94>
 8007bc6:	eb1c 0404 	adds.w	r4, ip, r4
 8007bca:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007bce:	f080 8109 	bcs.w	8007de4 <__udivmoddi4+0x29c>
 8007bd2:	45a6      	cmp	lr, r4
 8007bd4:	f240 8106 	bls.w	8007de4 <__udivmoddi4+0x29c>
 8007bd8:	4464      	add	r4, ip
 8007bda:	3802      	subs	r0, #2
 8007bdc:	2100      	movs	r1, #0
 8007bde:	eba4 040e 	sub.w	r4, r4, lr
 8007be2:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007be6:	b11e      	cbz	r6, 8007bf0 <__udivmoddi4+0xa8>
 8007be8:	2300      	movs	r3, #0
 8007bea:	40d4      	lsrs	r4, r2
 8007bec:	e9c6 4300 	strd	r4, r3, [r6]
 8007bf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007bf4:	428b      	cmp	r3, r1
 8007bf6:	d908      	bls.n	8007c0a <__udivmoddi4+0xc2>
 8007bf8:	2e00      	cmp	r6, #0
 8007bfa:	f000 80ee 	beq.w	8007dda <__udivmoddi4+0x292>
 8007bfe:	2100      	movs	r1, #0
 8007c00:	e9c6 0500 	strd	r0, r5, [r6]
 8007c04:	4608      	mov	r0, r1
 8007c06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c0a:	fab3 f183 	clz	r1, r3
 8007c0e:	2900      	cmp	r1, #0
 8007c10:	d14a      	bne.n	8007ca8 <__udivmoddi4+0x160>
 8007c12:	42ab      	cmp	r3, r5
 8007c14:	d302      	bcc.n	8007c1c <__udivmoddi4+0xd4>
 8007c16:	4282      	cmp	r2, r0
 8007c18:	f200 80fc 	bhi.w	8007e14 <__udivmoddi4+0x2cc>
 8007c1c:	1a84      	subs	r4, r0, r2
 8007c1e:	eb65 0303 	sbc.w	r3, r5, r3
 8007c22:	2001      	movs	r0, #1
 8007c24:	4698      	mov	r8, r3
 8007c26:	2e00      	cmp	r6, #0
 8007c28:	d0e2      	beq.n	8007bf0 <__udivmoddi4+0xa8>
 8007c2a:	e9c6 4800 	strd	r4, r8, [r6]
 8007c2e:	e7df      	b.n	8007bf0 <__udivmoddi4+0xa8>
 8007c30:	b902      	cbnz	r2, 8007c34 <__udivmoddi4+0xec>
 8007c32:	deff      	udf	#255	; 0xff
 8007c34:	fab2 f282 	clz	r2, r2
 8007c38:	2a00      	cmp	r2, #0
 8007c3a:	f040 8091 	bne.w	8007d60 <__udivmoddi4+0x218>
 8007c3e:	eba1 000c 	sub.w	r0, r1, ip
 8007c42:	2101      	movs	r1, #1
 8007c44:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007c48:	fa1f fe8c 	uxth.w	lr, ip
 8007c4c:	fbb0 f3f7 	udiv	r3, r0, r7
 8007c50:	fb07 0013 	mls	r0, r7, r3, r0
 8007c54:	0c25      	lsrs	r5, r4, #16
 8007c56:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007c5a:	fb0e f003 	mul.w	r0, lr, r3
 8007c5e:	42a8      	cmp	r0, r5
 8007c60:	d908      	bls.n	8007c74 <__udivmoddi4+0x12c>
 8007c62:	eb1c 0505 	adds.w	r5, ip, r5
 8007c66:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007c6a:	d202      	bcs.n	8007c72 <__udivmoddi4+0x12a>
 8007c6c:	42a8      	cmp	r0, r5
 8007c6e:	f200 80ce 	bhi.w	8007e0e <__udivmoddi4+0x2c6>
 8007c72:	4643      	mov	r3, r8
 8007c74:	1a2d      	subs	r5, r5, r0
 8007c76:	fbb5 f0f7 	udiv	r0, r5, r7
 8007c7a:	fb07 5510 	mls	r5, r7, r0, r5
 8007c7e:	fb0e fe00 	mul.w	lr, lr, r0
 8007c82:	b2a4      	uxth	r4, r4
 8007c84:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8007c88:	45a6      	cmp	lr, r4
 8007c8a:	d908      	bls.n	8007c9e <__udivmoddi4+0x156>
 8007c8c:	eb1c 0404 	adds.w	r4, ip, r4
 8007c90:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007c94:	d202      	bcs.n	8007c9c <__udivmoddi4+0x154>
 8007c96:	45a6      	cmp	lr, r4
 8007c98:	f200 80b6 	bhi.w	8007e08 <__udivmoddi4+0x2c0>
 8007c9c:	4628      	mov	r0, r5
 8007c9e:	eba4 040e 	sub.w	r4, r4, lr
 8007ca2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007ca6:	e79e      	b.n	8007be6 <__udivmoddi4+0x9e>
 8007ca8:	f1c1 0720 	rsb	r7, r1, #32
 8007cac:	408b      	lsls	r3, r1
 8007cae:	fa22 fc07 	lsr.w	ip, r2, r7
 8007cb2:	ea4c 0c03 	orr.w	ip, ip, r3
 8007cb6:	fa25 fa07 	lsr.w	sl, r5, r7
 8007cba:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8007cbe:	fbba f8f9 	udiv	r8, sl, r9
 8007cc2:	fa20 f307 	lsr.w	r3, r0, r7
 8007cc6:	fb09 aa18 	mls	sl, r9, r8, sl
 8007cca:	408d      	lsls	r5, r1
 8007ccc:	fa1f fe8c 	uxth.w	lr, ip
 8007cd0:	431d      	orrs	r5, r3
 8007cd2:	fa00 f301 	lsl.w	r3, r0, r1
 8007cd6:	fb08 f00e 	mul.w	r0, r8, lr
 8007cda:	0c2c      	lsrs	r4, r5, #16
 8007cdc:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007ce0:	42a0      	cmp	r0, r4
 8007ce2:	fa02 f201 	lsl.w	r2, r2, r1
 8007ce6:	d90b      	bls.n	8007d00 <__udivmoddi4+0x1b8>
 8007ce8:	eb1c 0404 	adds.w	r4, ip, r4
 8007cec:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007cf0:	f080 8088 	bcs.w	8007e04 <__udivmoddi4+0x2bc>
 8007cf4:	42a0      	cmp	r0, r4
 8007cf6:	f240 8085 	bls.w	8007e04 <__udivmoddi4+0x2bc>
 8007cfa:	f1a8 0802 	sub.w	r8, r8, #2
 8007cfe:	4464      	add	r4, ip
 8007d00:	1a24      	subs	r4, r4, r0
 8007d02:	fbb4 f0f9 	udiv	r0, r4, r9
 8007d06:	fb09 4410 	mls	r4, r9, r0, r4
 8007d0a:	fb00 fe0e 	mul.w	lr, r0, lr
 8007d0e:	b2ad      	uxth	r5, r5
 8007d10:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007d14:	45a6      	cmp	lr, r4
 8007d16:	d908      	bls.n	8007d2a <__udivmoddi4+0x1e2>
 8007d18:	eb1c 0404 	adds.w	r4, ip, r4
 8007d1c:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007d20:	d26c      	bcs.n	8007dfc <__udivmoddi4+0x2b4>
 8007d22:	45a6      	cmp	lr, r4
 8007d24:	d96a      	bls.n	8007dfc <__udivmoddi4+0x2b4>
 8007d26:	3802      	subs	r0, #2
 8007d28:	4464      	add	r4, ip
 8007d2a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8007d2e:	fba0 9502 	umull	r9, r5, r0, r2
 8007d32:	eba4 040e 	sub.w	r4, r4, lr
 8007d36:	42ac      	cmp	r4, r5
 8007d38:	46c8      	mov	r8, r9
 8007d3a:	46ae      	mov	lr, r5
 8007d3c:	d356      	bcc.n	8007dec <__udivmoddi4+0x2a4>
 8007d3e:	d053      	beq.n	8007de8 <__udivmoddi4+0x2a0>
 8007d40:	2e00      	cmp	r6, #0
 8007d42:	d069      	beq.n	8007e18 <__udivmoddi4+0x2d0>
 8007d44:	ebb3 0208 	subs.w	r2, r3, r8
 8007d48:	eb64 040e 	sbc.w	r4, r4, lr
 8007d4c:	fa22 f301 	lsr.w	r3, r2, r1
 8007d50:	fa04 f707 	lsl.w	r7, r4, r7
 8007d54:	431f      	orrs	r7, r3
 8007d56:	40cc      	lsrs	r4, r1
 8007d58:	e9c6 7400 	strd	r7, r4, [r6]
 8007d5c:	2100      	movs	r1, #0
 8007d5e:	e747      	b.n	8007bf0 <__udivmoddi4+0xa8>
 8007d60:	fa0c fc02 	lsl.w	ip, ip, r2
 8007d64:	f1c2 0120 	rsb	r1, r2, #32
 8007d68:	fa25 f301 	lsr.w	r3, r5, r1
 8007d6c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007d70:	fa20 f101 	lsr.w	r1, r0, r1
 8007d74:	4095      	lsls	r5, r2
 8007d76:	430d      	orrs	r5, r1
 8007d78:	fbb3 f1f7 	udiv	r1, r3, r7
 8007d7c:	fb07 3311 	mls	r3, r7, r1, r3
 8007d80:	fa1f fe8c 	uxth.w	lr, ip
 8007d84:	0c28      	lsrs	r0, r5, #16
 8007d86:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007d8a:	fb01 f30e 	mul.w	r3, r1, lr
 8007d8e:	4283      	cmp	r3, r0
 8007d90:	fa04 f402 	lsl.w	r4, r4, r2
 8007d94:	d908      	bls.n	8007da8 <__udivmoddi4+0x260>
 8007d96:	eb1c 0000 	adds.w	r0, ip, r0
 8007d9a:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8007d9e:	d22f      	bcs.n	8007e00 <__udivmoddi4+0x2b8>
 8007da0:	4283      	cmp	r3, r0
 8007da2:	d92d      	bls.n	8007e00 <__udivmoddi4+0x2b8>
 8007da4:	3902      	subs	r1, #2
 8007da6:	4460      	add	r0, ip
 8007da8:	1ac0      	subs	r0, r0, r3
 8007daa:	fbb0 f3f7 	udiv	r3, r0, r7
 8007dae:	fb07 0013 	mls	r0, r7, r3, r0
 8007db2:	b2ad      	uxth	r5, r5
 8007db4:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007db8:	fb03 f00e 	mul.w	r0, r3, lr
 8007dbc:	42a8      	cmp	r0, r5
 8007dbe:	d908      	bls.n	8007dd2 <__udivmoddi4+0x28a>
 8007dc0:	eb1c 0505 	adds.w	r5, ip, r5
 8007dc4:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007dc8:	d216      	bcs.n	8007df8 <__udivmoddi4+0x2b0>
 8007dca:	42a8      	cmp	r0, r5
 8007dcc:	d914      	bls.n	8007df8 <__udivmoddi4+0x2b0>
 8007dce:	3b02      	subs	r3, #2
 8007dd0:	4465      	add	r5, ip
 8007dd2:	1a28      	subs	r0, r5, r0
 8007dd4:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007dd8:	e738      	b.n	8007c4c <__udivmoddi4+0x104>
 8007dda:	4631      	mov	r1, r6
 8007ddc:	4630      	mov	r0, r6
 8007dde:	e707      	b.n	8007bf0 <__udivmoddi4+0xa8>
 8007de0:	462f      	mov	r7, r5
 8007de2:	e6e4      	b.n	8007bae <__udivmoddi4+0x66>
 8007de4:	4618      	mov	r0, r3
 8007de6:	e6f9      	b.n	8007bdc <__udivmoddi4+0x94>
 8007de8:	454b      	cmp	r3, r9
 8007dea:	d2a9      	bcs.n	8007d40 <__udivmoddi4+0x1f8>
 8007dec:	ebb9 0802 	subs.w	r8, r9, r2
 8007df0:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007df4:	3801      	subs	r0, #1
 8007df6:	e7a3      	b.n	8007d40 <__udivmoddi4+0x1f8>
 8007df8:	4643      	mov	r3, r8
 8007dfa:	e7ea      	b.n	8007dd2 <__udivmoddi4+0x28a>
 8007dfc:	4628      	mov	r0, r5
 8007dfe:	e794      	b.n	8007d2a <__udivmoddi4+0x1e2>
 8007e00:	4641      	mov	r1, r8
 8007e02:	e7d1      	b.n	8007da8 <__udivmoddi4+0x260>
 8007e04:	46d0      	mov	r8, sl
 8007e06:	e77b      	b.n	8007d00 <__udivmoddi4+0x1b8>
 8007e08:	4464      	add	r4, ip
 8007e0a:	3802      	subs	r0, #2
 8007e0c:	e747      	b.n	8007c9e <__udivmoddi4+0x156>
 8007e0e:	3b02      	subs	r3, #2
 8007e10:	4465      	add	r5, ip
 8007e12:	e72f      	b.n	8007c74 <__udivmoddi4+0x12c>
 8007e14:	4608      	mov	r0, r1
 8007e16:	e706      	b.n	8007c26 <__udivmoddi4+0xde>
 8007e18:	4631      	mov	r1, r6
 8007e1a:	e6e9      	b.n	8007bf0 <__udivmoddi4+0xa8>

08007e1c <__aeabi_idiv0>:
 8007e1c:	4770      	bx	lr
 8007e1e:	bf00      	nop

08007e20 <Reset_Handler>:
 8007e20:	480c      	ldr	r0, [pc, #48]	; (8007e54 <Zerobss+0x10>)
 8007e22:	4685      	mov	sp, r0
 8007e24:	2100      	movs	r1, #0
 8007e26:	e003      	b.n	8007e30 <DataInit>

08007e28 <CopyData>:
 8007e28:	4b0b      	ldr	r3, [pc, #44]	; (8007e58 <Zerobss+0x14>)
 8007e2a:	585b      	ldr	r3, [r3, r1]
 8007e2c:	5043      	str	r3, [r0, r1]
 8007e2e:	3104      	adds	r1, #4

08007e30 <DataInit>:
 8007e30:	480a      	ldr	r0, [pc, #40]	; (8007e5c <Zerobss+0x18>)
 8007e32:	4b0b      	ldr	r3, [pc, #44]	; (8007e60 <Zerobss+0x1c>)
 8007e34:	1842      	adds	r2, r0, r1
 8007e36:	429a      	cmp	r2, r3
 8007e38:	d3f6      	bcc.n	8007e28 <CopyData>
 8007e3a:	4a0a      	ldr	r2, [pc, #40]	; (8007e64 <Zerobss+0x20>)
 8007e3c:	e002      	b.n	8007e44 <Zerobss>

08007e3e <FillZerobss>:
 8007e3e:	2300      	movs	r3, #0
 8007e40:	f842 3b04 	str.w	r3, [r2], #4

08007e44 <Zerobss>:
 8007e44:	4b08      	ldr	r3, [pc, #32]	; (8007e68 <Zerobss+0x24>)
 8007e46:	429a      	cmp	r2, r3
 8007e48:	d3f9      	bcc.n	8007e3e <FillZerobss>
 8007e4a:	f008 f911 	bl	8010070 <SystemInit>
 8007e4e:	f000 f8ef 	bl	8008030 <main>
 8007e52:	4770      	bx	lr
 8007e54:	20018000 	andcs	r8, r1, r0
 8007e58:	08013b80 	stmdaeq	r1, {r7, r8, r9, fp, ip, sp}
 8007e5c:	20000000 	andcs	r0, r0, r0
 8007e60:	200000f8 	strdcs	r0, [r0], -r8
 8007e64:	200000f8 	strdcs	r0, [r0], -r8
 8007e68:	2000d854 	andcs	sp, r0, r4, asr r8

08007e6c <ADC0_1_IRQHandler>:
 8007e6c:	e7fe      	b.n	8007e6c <ADC0_1_IRQHandler>

08007e6e <memcmp>:
 8007e6e:	b510      	push	{r4, lr}
 8007e70:	3901      	subs	r1, #1
 8007e72:	4402      	add	r2, r0
 8007e74:	4290      	cmp	r0, r2
 8007e76:	d008      	beq.n	8007e8a <memcmp+0x1c>
 8007e78:	7803      	ldrb	r3, [r0, #0]
 8007e7a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007e7e:	42a3      	cmp	r3, r4
 8007e80:	d001      	beq.n	8007e86 <memcmp+0x18>
 8007e82:	1b18      	subs	r0, r3, r4
 8007e84:	bd10      	pop	{r4, pc}
 8007e86:	3001      	adds	r0, #1
 8007e88:	e7f4      	b.n	8007e74 <memcmp+0x6>
 8007e8a:	2000      	movs	r0, #0
 8007e8c:	e7fa      	b.n	8007e84 <memcmp+0x16>

08007e8e <DisplayHandler::~DisplayHandler()>:
 8007e8e:	4770      	bx	lr

08007e90 <E131Reboot::~E131Reboot()>:
 8007e90:	4770      	bx	lr

08007e92 <dmxconfigudp::atoi(char const*, unsigned char)>:
 8007e92:	b530      	push	{r4, r5, lr}
 8007e94:	1e42      	subs	r2, r0, #1
 8007e96:	240a      	movs	r4, #10
 8007e98:	2000      	movs	r0, #0
 8007e9a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8007e9e:	3b30      	subs	r3, #48	; 0x30
 8007ea0:	b2dd      	uxtb	r5, r3
 8007ea2:	2d09      	cmp	r5, #9
 8007ea4:	d805      	bhi.n	8007eb2 <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8007ea6:	3901      	subs	r1, #1
 8007ea8:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007eac:	fb04 3000 	mla	r0, r4, r0, r3
 8007eb0:	d1f3      	bne.n	8007e9a <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8007eb2:	bd30      	pop	{r4, r5, pc}

08007eb4 <E131Reboot::Run()>:
 8007eb4:	b510      	push	{r4, lr}
 8007eb6:	4c07      	ldr	r4, [pc, #28]	; (8007ed4 <E131Reboot::Run()+0x20>)
 8007eb8:	6820      	ldr	r0, [r4, #0]
 8007eba:	f000 fc49 	bl	8008750 <E131Bridge::Stop()>
 8007ebe:	6823      	ldr	r3, [r4, #0]
 8007ec0:	6858      	ldr	r0, [r3, #4]
 8007ec2:	b128      	cbz	r0, 8007ed0 <E131Reboot::Run()+0x1c>
 8007ec4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ec8:	6803      	ldr	r3, [r0, #0]
 8007eca:	2101      	movs	r1, #1
 8007ecc:	695b      	ldr	r3, [r3, #20]
 8007ece:	4718      	bx	r3
 8007ed0:	bd10      	pop	{r4, pc}
 8007ed2:	bf00      	nop
 8007ed4:	20000704 	andcs	r0, r0, r4, lsl #14

08007ed8 <E131Reboot::~E131Reboot()>:
 8007ed8:	b510      	push	{r4, lr}
 8007eda:	4604      	mov	r4, r0
 8007edc:	f007 fc24 	bl	800f728 <operator delete(void*)>
 8007ee0:	4620      	mov	r0, r4
 8007ee2:	bd10      	pop	{r4, pc}

08007ee4 <DisplayHandler::~DisplayHandler()>:
 8007ee4:	b510      	push	{r4, lr}
 8007ee6:	4604      	mov	r4, r0
 8007ee8:	f007 fc1e 	bl	800f728 <operator delete(void*)>
 8007eec:	4620      	mov	r0, r4
 8007eee:	bd10      	pop	{r4, pc}

08007ef0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007ef0:	b110      	cbz	r0, 8007ef8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007ef2:	6803      	ldr	r3, [r0, #0]
 8007ef4:	6a1b      	ldr	r3, [r3, #32]
 8007ef6:	4718      	bx	r3
 8007ef8:	4770      	bx	lr

08007efa <Display::PutChar(int) [clone .isra.0]>:
 8007efa:	b110      	cbz	r0, 8007f02 <Display::PutChar(int) [clone .isra.0]+0x8>
 8007efc:	6803      	ldr	r3, [r0, #0]
 8007efe:	695b      	ldr	r3, [r3, #20]
 8007f00:	4718      	bx	r3
 8007f02:	4770      	bx	lr

08007f04 <DisplayHandler::Print(unsigned int)>:
 8007f04:	b538      	push	{r3, r4, r5, lr}
 8007f06:	7903      	ldrb	r3, [r0, #4]
 8007f08:	b1f3      	cbz	r3, 8007f48 <DisplayHandler::Print(unsigned int)+0x44>
 8007f0a:	2904      	cmp	r1, #4
 8007f0c:	bf98      	it	ls
 8007f0e:	4b0f      	ldrls	r3, [pc, #60]	; (8007f4c <DisplayHandler::Print(unsigned int)+0x48>)
 8007f10:	4d0f      	ldr	r5, [pc, #60]	; (8007f50 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007f12:	bf98      	it	ls
 8007f14:	5c5c      	ldrbls	r4, [r3, r1]
 8007f16:	682b      	ldr	r3, [r5, #0]
 8007f18:	bf88      	it	hi
 8007f1a:	2455      	movhi	r4, #85	; 0x55
 8007f1c:	6998      	ldr	r0, [r3, #24]
 8007f1e:	b178      	cbz	r0, 8007f40 <DisplayHandler::Print(unsigned int)+0x3c>
 8007f20:	7901      	ldrb	r1, [r0, #4]
 8007f22:	3901      	subs	r1, #1
 8007f24:	b2c9      	uxtb	r1, r1
 8007f26:	b168      	cbz	r0, 8007f44 <DisplayHandler::Print(unsigned int)+0x40>
 8007f28:	7942      	ldrb	r2, [r0, #5]
 8007f2a:	3a01      	subs	r2, #1
 8007f2c:	b2d2      	uxtb	r2, r2
 8007f2e:	f7ff ffdf 	bl	8007ef0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f32:	682b      	ldr	r3, [r5, #0]
 8007f34:	4621      	mov	r1, r4
 8007f36:	6998      	ldr	r0, [r3, #24]
 8007f38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007f3c:	f7ff bfdd 	b.w	8007efa <Display::PutChar(int) [clone .isra.0]>
 8007f40:	4601      	mov	r1, r0
 8007f42:	e7ee      	b.n	8007f22 <DisplayHandler::Print(unsigned int)+0x1e>
 8007f44:	4602      	mov	r2, r0
 8007f46:	e7f0      	b.n	8007f2a <DisplayHandler::Print(unsigned int)+0x26>
 8007f48:	bd38      	pop	{r3, r4, r5, pc}
 8007f4a:	bf00      	nop
 8007f4c:	08011dd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, ip}
 8007f50:	20009acc 	andcs	r9, r0, ip, asr #21

08007f54 <Display::SetSleep(bool)>:
 8007f54:	b538      	push	{r3, r4, r5, lr}
 8007f56:	4604      	mov	r4, r0
 8007f58:	6980      	ldr	r0, [r0, #24]
 8007f5a:	460d      	mov	r5, r1
 8007f5c:	b138      	cbz	r0, 8007f6e <Display::SetSleep(bool)+0x1a>
 8007f5e:	6803      	ldr	r3, [r0, #0]
 8007f60:	7421      	strb	r1, [r4, #16]
 8007f62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007f64:	4798      	blx	r3
 8007f66:	b915      	cbnz	r5, 8007f6e <Display::SetSleep(bool)+0x1a>
 8007f68:	4b01      	ldr	r3, [pc, #4]	; (8007f70 <Display::SetSleep(bool)+0x1c>)
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	6063      	str	r3, [r4, #4]
 8007f6e:	bd38      	pop	{r3, r4, r5, pc}
 8007f70:	20009bd4 	ldrdcs	r9, [r0], -r4

08007f74 <Display::TextStatus(char const*)>:
 8007f74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f78:	4604      	mov	r4, r0
 8007f7a:	6980      	ldr	r0, [r0, #24]
 8007f7c:	460d      	mov	r5, r1
 8007f7e:	b360      	cbz	r0, 8007fda <Display::TextStatus(char const*)+0x66>
 8007f80:	7947      	ldrb	r7, [r0, #5]
 8007f82:	2100      	movs	r1, #0
 8007f84:	1e7e      	subs	r6, r7, #1
 8007f86:	b2f6      	uxtb	r6, r6
 8007f88:	4632      	mov	r2, r6
 8007f8a:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007f8e:	f04f 0800 	mov.w	r8, #0
 8007f92:	f7ff ffad 	bl	8007ef0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f96:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007f9a:	45c1      	cmp	r9, r8
 8007f9c:	69a0      	ldr	r0, [r4, #24]
 8007f9e:	d905      	bls.n	8007fac <Display::TextStatus(char const*)+0x38>
 8007fa0:	2120      	movs	r1, #32
 8007fa2:	f7ff ffaa 	bl	8007efa <Display::PutChar(int) [clone .isra.0]>
 8007fa6:	f108 0801 	add.w	r8, r8, #1
 8007faa:	e7f6      	b.n	8007f9a <Display::TextStatus(char const*)+0x26>
 8007fac:	4632      	mov	r2, r6
 8007fae:	2100      	movs	r1, #0
 8007fb0:	f7ff ff9e 	bl	8007ef0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007fb4:	69a0      	ldr	r0, [r4, #24]
 8007fb6:	b180      	cbz	r0, 8007fda <Display::TextStatus(char const*)+0x66>
 8007fb8:	2300      	movs	r3, #0
 8007fba:	7901      	ldrb	r1, [r0, #4]
 8007fbc:	5cea      	ldrb	r2, [r5, r3]
 8007fbe:	b11a      	cbz	r2, 8007fc8 <Display::TextStatus(char const*)+0x54>
 8007fc0:	1c5a      	adds	r2, r3, #1
 8007fc2:	4299      	cmp	r1, r3
 8007fc4:	4613      	mov	r3, r2
 8007fc6:	dcf9      	bgt.n	8007fbc <Display::TextStatus(char const*)+0x48>
 8007fc8:	6802      	ldr	r2, [r0, #0]
 8007fca:	4639      	mov	r1, r7
 8007fcc:	69d4      	ldr	r4, [r2, #28]
 8007fce:	b2db      	uxtb	r3, r3
 8007fd0:	462a      	mov	r2, r5
 8007fd2:	46a4      	mov	ip, r4
 8007fd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd8:	4760      	bx	ip
 8007fda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007fde <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007fde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007fe0:	4605      	mov	r5, r0
 8007fe2:	461e      	mov	r6, r3
 8007fe4:	460f      	mov	r7, r1
 8007fe6:	4614      	mov	r4, r2
 8007fe8:	f7ff ffc4 	bl	8007f74 <Display::TextStatus(char const*)>
 8007fec:	7c6b      	ldrb	r3, [r5, #17]
 8007fee:	b19b      	cbz	r3, 8008018 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8007ff0:	43e2      	mvns	r2, r4
 8007ff2:	2312      	movs	r3, #18
 8007ff4:	7a28      	ldrb	r0, [r5, #8]
 8007ff6:	f88d 3004 	strb.w	r3, [sp, #4]
 8007ffa:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007ffe:	f88d 3005 	strb.w	r3, [sp, #5]
 8008002:	f88d 2006 	strb.w	r2, [sp, #6]
 8008006:	f008 feff 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800800a:	68e8      	ldr	r0, [r5, #12]
 800800c:	f008 fef4 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 8008010:	2103      	movs	r1, #3
 8008012:	a801      	add	r0, sp, #4
 8008014:	f008 fefe 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 8008018:	1c73      	adds	r3, r6, #1
 800801a:	d006      	beq.n	800802a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800801c:	4639      	mov	r1, r7
 800801e:	4630      	mov	r0, r6
 8008020:	b003      	add	sp, #12
 8008022:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008026:	f007 ba1d 	b.w	800f464 <console_status>
 800802a:	b003      	add	sp, #12
 800802c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008030 <main>:
 8008030:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008034:	2501      	movs	r5, #1
 8008036:	f6ad 5d6c 	subw	sp, sp, #3436	; 0xd6c
 800803a:	a80d      	add	r0, sp, #52	; 0x34
 800803c:	f007 fac6 	bl	800f5cc <Hardware::Hardware()>
 8008040:	a854      	add	r0, sp, #336	; 0x150
 8008042:	f005 f91b 	bl	800d27c <Network::Network()>
 8008046:	a815      	add	r0, sp, #84	; 0x54
 8008048:	f007 fa6a 	bl	800f520 <LedBlink::LedBlink()>
 800804c:	a83e      	add	r0, sp, #248	; 0xf8
 800804e:	f006 f94b 	bl	800e2e8 <DisplayUdf::DisplayUdf()>
 8008052:	4aaf      	ldr	r2, [pc, #700]	; (8008310 <main+0x2e0>)
 8008054:	4baf      	ldr	r3, [pc, #700]	; (8008314 <main+0x2e4>)
 8008056:	49b0      	ldr	r1, [pc, #704]	; (8008318 <main+0x2e8>)
 8008058:	a802      	add	r0, sp, #8
 800805a:	f007 fa1b 	bl	800f494 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800805e:	a803      	add	r0, sp, #12
 8008060:	f004 f81e 	bl	800c0a0 <FlashRom::FlashRom()>
 8008064:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 800831c <main+0x2ec>
 8008068:	a804      	add	r0, sp, #16
 800806a:	f003 fd95 	bl	800bb98 <SpiFlashStore::SpiFlashStore()>
 800806e:	49ac      	ldr	r1, [pc, #688]	; (8008320 <main+0x2f0>)
 8008070:	a802      	add	r0, sp, #8
 8008072:	f007 fa47 	bl	800f504 <FirmwareVersion::Print(char const*)>
 8008076:	2004      	movs	r0, #4
 8008078:	f8c8 5010 	str.w	r5, [r8, #16]
 800807c:	f007 fb58 	bl	800f730 <operator new(unsigned int)>
 8008080:	4ba8      	ldr	r3, [pc, #672]	; (8008324 <main+0x2f4>)
 8008082:	900d      	str	r0, [sp, #52]	; 0x34
 8008084:	6003      	str	r3, [r0, #0]
 8008086:	2008      	movs	r0, #8
 8008088:	f007 fb52 	bl	800f730 <operator new(unsigned int)>
 800808c:	4ba6      	ldr	r3, [pc, #664]	; (8008328 <main+0x2f8>)
 800808e:	2400      	movs	r4, #0
 8008090:	6003      	str	r3, [r0, #0]
 8008092:	4ba6      	ldr	r3, [pc, #664]	; (800832c <main+0x2fc>)
 8008094:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	49a5      	ldr	r1, [pc, #660]	; (8008330 <main+0x300>)
 800809c:	3b00      	subs	r3, #0
 800809e:	bf18      	it	ne
 80080a0:	2301      	movne	r3, #1
 80080a2:	9017      	str	r0, [sp, #92]	; 0x5c
 80080a4:	7103      	strb	r3, [r0, #4]
 80080a6:	2303      	movs	r3, #3
 80080a8:	a83e      	add	r0, sp, #248	; 0xf8
 80080aa:	f7ff ff98 	bl	8007fde <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80080ae:	a80f      	add	r0, sp, #60	; 0x3c
 80080b0:	f003 ffb6 	bl	800c020 <StoreNetwork::StoreNetwork()>
 80080b4:	ab10      	add	r3, sp, #64	; 0x40
 80080b6:	a90f      	add	r1, sp, #60	; 0x3c
 80080b8:	a854      	add	r0, sp, #336	; 0x150
 80080ba:	9381      	str	r3, [sp, #516]	; 0x204
 80080bc:	f005 f936 	bl	800d32c <Network::Init(NetworkParamsStore*)>
 80080c0:	a854      	add	r0, sp, #336	; 0x150
 80080c2:	f005 fa63 	bl	800d58c <Network::Print()>
 80080c6:	a805      	add	r0, sp, #20
 80080c8:	f004 fd12 	bl	800caf0 <MDNS::MDNS()>
 80080cc:	a805      	add	r0, sp, #20
 80080ce:	f004 fdd3 	bl	800cc78 <MDNS::Start()>
 80080d2:	f642 1305 	movw	r3, #10501	; 0x2905
 80080d6:	4621      	mov	r1, r4
 80080d8:	4a96      	ldr	r2, [pc, #600]	; (8008334 <main+0x304>)
 80080da:	e9cd 4400 	strd	r4, r4, [sp]
 80080de:	a805      	add	r0, sp, #20
 80080e0:	f004 ff36 	bl	800cf50 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080e4:	4b94      	ldr	r3, [pc, #592]	; (8008338 <main+0x308>)
 80080e6:	4621      	mov	r1, r4
 80080e8:	4a94      	ldr	r2, [pc, #592]	; (800833c <main+0x30c>)
 80080ea:	e9cd 5300 	strd	r5, r3, [sp]
 80080ee:	a805      	add	r0, sp, #20
 80080f0:	2350      	movs	r3, #80	; 0x50
 80080f2:	f004 ff2d 	bl	800cf50 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080f6:	a805      	add	r0, sp, #20
 80080f8:	f005 f870 	bl	800d1dc <MDNS::Print()>
 80080fc:	2303      	movs	r3, #3
 80080fe:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008102:	498f      	ldr	r1, [pc, #572]	; (8008340 <main+0x310>)
 8008104:	a83e      	add	r0, sp, #248	; 0xf8
 8008106:	f7ff ff6a 	bl	8007fde <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800810a:	a806      	add	r0, sp, #24
 800810c:	f003 fedc 	bl	800bec8 <StoreE131::StoreE131()>
 8008110:	a906      	add	r1, sp, #24
 8008112:	a822      	add	r0, sp, #136	; 0x88
 8008114:	f001 f9ba 	bl	800948c <E131Params::E131Params(E131ParamsStore*)>
 8008118:	a886      	add	r0, sp, #536	; 0x218
 800811a:	f000 fb55 	bl	80087c8 <E131Bridge::E131Bridge()>
 800811e:	a822      	add	r0, sp, #136	; 0x88
 8008120:	f001 f9d4 	bl	80094cc <E131Params::Load()>
 8008124:	b130      	cbz	r0, 8008134 <main+0x104>
 8008126:	a822      	add	r0, sp, #136	; 0x88
 8008128:	a986      	add	r1, sp, #536	; 0x218
 800812a:	f001 fba0 	bl	800986e <E131Params::Set(E131Bridge*)>
 800812e:	a822      	add	r0, sp, #136	; 0x88
 8008130:	f001 fbb9 	bl	80098a6 <E131Params::Dump()>
 8008134:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008136:	06da      	lsls	r2, r3, #27
 8008138:	d509      	bpl.n	800814e <main+0x11e>
 800813a:	f89d 20a6 	ldrb.w	r2, [sp, #166]	; 0xa6
 800813e:	2100      	movs	r1, #0
 8008140:	f8bd 3093 	ldrh.w	r3, [sp, #147]	; 0x93
 8008144:	f002 0201 	and.w	r2, r2, #1
 8008148:	a886      	add	r0, sp, #536	; 0x218
 800814a:	f000 fbcb 	bl	80088e4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800814e:	a807      	add	r0, sp, #28
 8008150:	f003 fe86 	bl	800be60 <StoreDmxSend::StoreDmxSend()>
 8008154:	a907      	add	r1, sp, #28
 8008156:	a811      	add	r0, sp, #68	; 0x44
 8008158:	f001 fc86 	bl	8009a68 <DmxParams::DmxParams(DmxParamsStore*)>
 800815c:	a81b      	add	r0, sp, #108	; 0x6c
 800815e:	f002 f893 	bl	800a288 <Dmx::Dmx()>
 8008162:	a811      	add	r0, sp, #68	; 0x44
 8008164:	f001 fc8c 	bl	8009a80 <DmxParams::Load()>
 8008168:	b130      	cbz	r0, 8008178 <main+0x148>
 800816a:	a811      	add	r0, sp, #68	; 0x44
 800816c:	f001 fdd4 	bl	8009d18 <DmxParams::Dump()>
 8008170:	a91b      	add	r1, sp, #108	; 0x6c
 8008172:	a811      	add	r0, sp, #68	; 0x44
 8008174:	f001 fda6 	bl	8009cc4 <DmxParams::Set(Dmx*)>
 8008178:	4b72      	ldr	r3, [pc, #456]	; (8008344 <main+0x314>)
 800817a:	ac08      	add	r4, sp, #32
 800817c:	4620      	mov	r0, r4
 800817e:	9308      	str	r3, [sp, #32]
 8008180:	f001 fc18 	bl	80099b4 <DmxSend::Print()>
 8008184:	f89d 5723 	ldrb.w	r5, [sp, #1827]	; 0x723
 8008188:	b165      	cbz	r5, 80081a4 <main+0x174>
 800818a:	2001      	movs	r0, #1
 800818c:	9487      	str	r4, [sp, #540]	; 0x21c
 800818e:	f007 facf 	bl	800f730 <operator new(unsigned int)>
 8008192:	4b6d      	ldr	r3, [pc, #436]	; (8008348 <main+0x318>)
 8008194:	4605      	mov	r5, r0
 8008196:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800819a:	6818      	ldr	r0, [r3, #0]
 800819c:	f005 f89e 	bl	800d2dc <Network::Begin(unsigned short)>
 80081a0:	4b6a      	ldr	r3, [pc, #424]	; (800834c <main+0x31c>)
 80081a2:	6018      	str	r0, [r3, #0]
 80081a4:	ac09      	add	r4, sp, #36	; 0x24
 80081a6:	4620      	mov	r0, r4
 80081a8:	f000 f9de 	bl	8008568 <DmxInput::DmxInput()>
 80081ac:	f89d 3722 	ldrb.w	r3, [sp, #1826]	; 0x722
 80081b0:	b103      	cbz	r3, 80081b4 <main+0x184>
 80081b2:	948b      	str	r4, [sp, #556]	; 0x22c
 80081b4:	a886      	add	r0, sp, #536	; 0x218
 80081b6:	f001 f8b3 	bl	8009320 <E131Bridge::Print()>
 80081ba:	f89d 30a6 	ldrb.w	r3, [sp, #166]	; 0xa6
 80081be:	4a64      	ldr	r2, [pc, #400]	; (8008350 <main+0x320>)
 80081c0:	f013 0f01 	tst.w	r3, #1
 80081c4:	4b63      	ldr	r3, [pc, #396]	; (8008354 <main+0x324>)
 80081c6:	4964      	ldr	r1, [pc, #400]	; (8008358 <main+0x328>)
 80081c8:	bf18      	it	ne
 80081ca:	461a      	movne	r2, r3
 80081cc:	a83e      	add	r0, sp, #248	; 0xf8
 80081ce:	f006 f8a1 	bl	800e314 <DisplayUdf::SetTitle(char const*, ...)>
 80081d2:	2202      	movs	r2, #2
 80081d4:	a83e      	add	r0, sp, #248	; 0xf8
 80081d6:	4611      	mov	r1, r2
 80081d8:	f006 f9f2 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80081dc:	2207      	movs	r2, #7
 80081de:	2103      	movs	r1, #3
 80081e0:	a83e      	add	r0, sp, #248	; 0xf8
 80081e2:	f006 f9ed 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80081e6:	2203      	movs	r2, #3
 80081e8:	2104      	movs	r1, #4
 80081ea:	a83e      	add	r0, sp, #248	; 0xf8
 80081ec:	f006 f9e8 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80081f0:	2208      	movs	r2, #8
 80081f2:	2105      	movs	r1, #5
 80081f4:	a83e      	add	r0, sp, #248	; 0xf8
 80081f6:	f006 f9e3 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80081fa:	2205      	movs	r2, #5
 80081fc:	2106      	movs	r1, #6
 80081fe:	a83e      	add	r0, sp, #248	; 0xf8
 8008200:	f006 f9de 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008204:	a80a      	add	r0, sp, #40	; 0x28
 8008206:	f003 fdf7 	bl	800bdf8 <StoreDisplayUdf::StoreDisplayUdf()>
 800820a:	a90a      	add	r1, sp, #40	; 0x28
 800820c:	a834      	add	r0, sp, #208	; 0xd0
 800820e:	f006 fa19 	bl	800e644 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008212:	a834      	add	r0, sp, #208	; 0xd0
 8008214:	f006 fa23 	bl	800e65e <DisplayUdfParams::Load()>
 8008218:	b130      	cbz	r0, 8008228 <main+0x1f8>
 800821a:	a834      	add	r0, sp, #208	; 0xd0
 800821c:	a93e      	add	r1, sp, #248	; 0xf8
 800821e:	f006 fb54 	bl	800e8ca <DisplayUdfParams::Set(DisplayUdf*)>
 8008222:	a834      	add	r0, sp, #208	; 0xd0
 8008224:	f006 fb84 	bl	800e930 <DisplayUdfParams::Dump()>
 8008228:	a986      	add	r1, sp, #536	; 0x218
 800822a:	a83e      	add	r0, sp, #248	; 0xf8
 800822c:	f006 fb82 	bl	800e934 <DisplayUdf::Show(E131Bridge*)>
 8008230:	f89d 30a6 	ldrb.w	r3, [sp, #166]	; 0xa6
 8008234:	2200      	movs	r2, #0
 8008236:	07db      	lsls	r3, r3, #31
 8008238:	bf54      	ite	pl
 800823a:	f89d 3722 	ldrbpl.w	r3, [sp, #1826]	; 0x722
 800823e:	f89d 3723 	ldrbmi.w	r3, [sp, #1827]	; 0x723
 8008242:	2101      	movs	r1, #1
 8008244:	f50d 60ef 	add.w	r0, sp, #1912	; 0x778
 8008248:	f002 fae0 	bl	800a80c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 800824c:	a80b      	add	r0, sp, #44	; 0x2c
 800824e:	f003 ff1d 	bl	800c08c <StoreRemoteConfig::StoreRemoteConfig()>
 8008252:	a90b      	add	r1, sp, #44	; 0x2c
 8008254:	a82b      	add	r0, sp, #172	; 0xac
 8008256:	f002 fddb 	bl	800ae10 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800825a:	a82b      	add	r0, sp, #172	; 0xac
 800825c:	f002 fde2 	bl	800ae24 <RemoteConfigParams::Load()>
 8008260:	b138      	cbz	r0, 8008272 <main+0x242>
 8008262:	a82b      	add	r0, sp, #172	; 0xac
 8008264:	f50d 61ef 	add.w	r1, sp, #1912	; 0x778
 8008268:	f002 ff03 	bl	800b072 <RemoteConfigParams::Set(RemoteConfig*)>
 800826c:	a82b      	add	r0, sp, #172	; 0xac
 800826e:	f002 ff24 	bl	800b0ba <RemoteConfigParams::Dump()>
 8008272:	a804      	add	r0, sp, #16
 8008274:	f003 fd3c 	bl	800bcf0 <SpiFlashStore::Flash()>
 8008278:	2800      	cmp	r0, #0
 800827a:	d1fa      	bne.n	8008272 <main+0x242>
 800827c:	2303      	movs	r3, #3
 800827e:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008282:	4936      	ldr	r1, [pc, #216]	; (800835c <main+0x32c>)
 8008284:	a83e      	add	r0, sp, #248	; 0xf8
 8008286:	f7ff feaa 	bl	8007fde <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800828a:	a886      	add	r0, sp, #536	; 0x218
 800828c:	f000 fa2c 	bl	80086e8 <E131Bridge::Start()>
 8008290:	2302      	movs	r3, #2
 8008292:	f248 0280 	movw	r2, #32896	; 0x8080
 8008296:	4932      	ldr	r1, [pc, #200]	; (8008360 <main+0x330>)
 8008298:	a83e      	add	r0, sp, #248	; 0xf8
 800829a:	f7ff fea0 	bl	8007fde <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800829e:	2102      	movs	r1, #2
 80082a0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80082a4:	f008 f86c 	bl	8010380 <fwdgt_config>
 80082a8:	2801      	cmp	r0, #1
 80082aa:	bf0c      	ite	eq
 80082ac:	2301      	moveq	r3, #1
 80082ae:	2300      	movne	r3, #0
 80082b0:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 80082b4:	d101      	bne.n	80082ba <main+0x28a>
 80082b6:	f008 f853 	bl	8010360 <fwdgt_enable>
 80082ba:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8008364 <main+0x334>
 80082be:	4f2a      	ldr	r7, [pc, #168]	; (8008368 <main+0x338>)
 80082c0:	f008 f856 	bl	8010370 <fwdgt_counter_reload>
 80082c4:	f7ff f930 	bl	8007528 <net_handle>
 80082c8:	a886      	add	r0, sp, #536	; 0x218
 80082ca:	f000 fdfd 	bl	8008ec8 <E131Bridge::Run()>
 80082ce:	f50d 60ef 	add.w	r0, sp, #1912	; 0x778
 80082d2:	f002 fc4d 	bl	800ab70 <RemoteConfig::Run()>
 80082d6:	a804      	add	r0, sp, #16
 80082d8:	f003 fd0a 	bl	800bcf0 <SpiFlashStore::Flash()>
 80082dc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80082de:	2a00      	cmp	r2, #0
 80082e0:	d044      	beq.n	800836c <main+0x33c>
 80082e2:	f8d9 3000 	ldr.w	r3, [r9]
 80082e6:	991a      	ldr	r1, [sp, #104]	; 0x68
 80082e8:	1a5b      	subs	r3, r3, r1
 80082ea:	429a      	cmp	r2, r3
 80082ec:	d83e      	bhi.n	800836c <main+0x33c>
 80082ee:	f8d9 3000 	ldr.w	r3, [r9]
 80082f2:	931a      	str	r3, [sp, #104]	; 0x68
 80082f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80082f6:	2b01      	cmp	r3, #1
 80082f8:	f083 0201 	eor.w	r2, r3, #1
 80082fc:	bf18      	it	ne
 80082fe:	2301      	movne	r3, #1
 8008300:	9219      	str	r2, [sp, #100]	; 0x64
 8008302:	bf14      	ite	ne
 8008304:	f8c8 3010 	strne.w	r3, [r8, #16]
 8008308:	f8c8 3014 	streq.w	r3, [r8, #20]
 800830c:	e02e      	b.n	800836c <main+0x33c>
 800830e:	bf00      	nop
 8008310:	08011d11 	stmdaeq	r1, {r0, r4, r8, sl, fp, ip}
 8008314:	08011d08 	stmdaeq	r1, {r3, r8, sl, fp, ip}
 8008318:	08011dd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, fp, ip}
 800831c:	40011000 	andmi	r1, r1, r0
 8008320:	08011d1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, fp, ip}
 8008324:	08011dc8 	stmdaeq	r1, {r3, r6, r7, r8, sl, fp, ip}
 8008328:	08011db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip}
 800832c:	20009acc 	andcs	r9, r0, ip, asr #21
 8008330:	0801331b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip, sp}
 8008334:	08011d52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, ip}
 8008338:	08011d62 	stmdaeq	r1, {r1, r5, r6, r8, sl, fp, ip}
 800833c:	08011d5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, fp, ip}
 8008340:	08011ef8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, fp, ip}
 8008344:	080120a0 	stmdaeq	r1, {r5, r7, sp}
 8008348:	20009494 	mulcs	r0, r4, r4
 800834c:	20000004 	andcs	r0, r0, r4
 8008350:	08011f6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
 8008354:	08011f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip}
 8008358:	08011d76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, fp, ip}
 800835c:	08011ee4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, fp, ip}
 8008360:	08011f0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, fp, ip}
 8008364:	20009bd4 	ldrdcs	r9, [r0], -r4
 8008368:	20000000 	andcs	r0, r0, r0
 800836c:	9a43      	ldr	r2, [sp, #268]	; 0x10c
 800836e:	b16a      	cbz	r2, 800838c <main+0x35c>
 8008370:	f89d 3108 	ldrb.w	r3, [sp, #264]	; 0x108
 8008374:	2b00      	cmp	r3, #0
 8008376:	d13f      	bne.n	80083f8 <main+0x3c8>
 8008378:	f8d9 3000 	ldr.w	r3, [r9]
 800837c:	993f      	ldr	r1, [sp, #252]	; 0xfc
 800837e:	1a5b      	subs	r3, r3, r1
 8008380:	429a      	cmp	r2, r3
 8008382:	d203      	bcs.n	800838c <main+0x35c>
 8008384:	2101      	movs	r1, #1
 8008386:	a83e      	add	r0, sp, #248	; 0xf8
 8008388:	f7ff fde4 	bl	8007f54 <Display::SetSleep(bool)>
 800838c:	b385      	cbz	r5, 80083f0 <main+0x3c0>
 800838e:	f10d 0316 	add.w	r3, sp, #22
 8008392:	4e41      	ldr	r6, [pc, #260]	; (8008498 <main+0x468>)
 8008394:	4841      	ldr	r0, [pc, #260]	; (800849c <main+0x46c>)
 8008396:	9300      	str	r3, [sp, #0]
 8008398:	2210      	movs	r2, #16
 800839a:	4631      	mov	r1, r6
 800839c:	7800      	ldrb	r0, [r0, #0]
 800839e:	ab0c      	add	r3, sp, #48	; 0x30
 80083a0:	f004 fa72 	bl	800c888 <udp_recv>
 80083a4:	280a      	cmp	r0, #10
 80083a6:	4604      	mov	r4, r0
 80083a8:	d922      	bls.n	80083f0 <main+0x3c0>
 80083aa:	2204      	movs	r2, #4
 80083ac:	4631      	mov	r1, r6
 80083ae:	483c      	ldr	r0, [pc, #240]	; (80084a0 <main+0x470>)
 80083b0:	f7ff fd5d 	bl	8007e6e <memcmp>
 80083b4:	b9e0      	cbnz	r0, 80083f0 <main+0x3c0>
 80083b6:	4426      	add	r6, r4
 80083b8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80083bc:	2b0a      	cmp	r3, #10
 80083be:	d103      	bne.n	80083c8 <main+0x398>
 80083c0:	3c01      	subs	r4, #1
 80083c2:	b2a4      	uxth	r4, r4
 80083c4:	2c0a      	cmp	r4, #10
 80083c6:	d051      	beq.n	800846c <main+0x43c>
 80083c8:	2c0e      	cmp	r4, #14
 80083ca:	d84d      	bhi.n	8008468 <main+0x438>
 80083cc:	2206      	movs	r2, #6
 80083ce:	6839      	ldr	r1, [r7, #0]
 80083d0:	4834      	ldr	r0, [pc, #208]	; (80084a4 <main+0x474>)
 80083d2:	f7ff fd4c 	bl	8007e6e <memcmp>
 80083d6:	2800      	cmp	r0, #0
 80083d8:	d148      	bne.n	800846c <main+0x43c>
 80083da:	2104      	movs	r1, #4
 80083dc:	4832      	ldr	r0, [pc, #200]	; (80084a8 <main+0x478>)
 80083de:	f7ff fd58 	bl	8007e92 <dmxconfigudp::atoi(char const*, unsigned char)>
 80083e2:	285b      	cmp	r0, #91	; 0x5b
 80083e4:	4601      	mov	r1, r0
 80083e6:	d903      	bls.n	80083f0 <main+0x3c0>
 80083e8:	4b30      	ldr	r3, [pc, #192]	; (80084ac <main+0x47c>)
 80083ea:	6818      	ldr	r0, [r3, #0]
 80083ec:	f002 f85a 	bl	800a4a4 <Dmx::SetDmxBreakTime(unsigned int)>
 80083f0:	a805      	add	r0, sp, #20
 80083f2:	f004 fecf 	bl	800d194 <MDNS::Run()>
 80083f6:	e763      	b.n	80082c0 <main+0x290>
 80083f8:	f006 fdfd 	bl	800eff6 <display::timeout::gpio_renew()>
 80083fc:	2800      	cmp	r0, #0
 80083fe:	d0c5      	beq.n	800838c <main+0x35c>
 8008400:	2100      	movs	r1, #0
 8008402:	e7c0      	b.n	8008386 <main+0x356>
 8008404:	2c0c      	cmp	r4, #12
 8008406:	d915      	bls.n	8008434 <main+0x404>
 8008408:	2c0e      	cmp	r4, #14
 800840a:	d82a      	bhi.n	8008462 <main+0x432>
 800840c:	2208      	movs	r2, #8
 800840e:	6839      	ldr	r1, [r7, #0]
 8008410:	4827      	ldr	r0, [pc, #156]	; (80084b0 <main+0x480>)
 8008412:	f7ff fd2c 	bl	8007e6e <memcmp>
 8008416:	bb20      	cbnz	r0, 8008462 <main+0x432>
 8008418:	2102      	movs	r1, #2
 800841a:	4826      	ldr	r0, [pc, #152]	; (80084b4 <main+0x484>)
 800841c:	f7ff fd39 	bl	8007e92 <dmxconfigudp::atoi(char const*, unsigned char)>
 8008420:	4601      	mov	r1, r0
 8008422:	b110      	cbz	r0, 800842a <main+0x3fa>
 8008424:	4b24      	ldr	r3, [pc, #144]	; (80084b8 <main+0x488>)
 8008426:	fbb3 f1f0 	udiv	r1, r3, r0
 800842a:	4b20      	ldr	r3, [pc, #128]	; (80084ac <main+0x47c>)
 800842c:	6818      	ldr	r0, [r3, #0]
 800842e:	f002 f809 	bl	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008432:	e7dd      	b.n	80083f0 <main+0x3c0>
 8008434:	2c0a      	cmp	r4, #10
 8008436:	d0db      	beq.n	80083f0 <main+0x3c0>
 8008438:	2206      	movs	r2, #6
 800843a:	6839      	ldr	r1, [r7, #0]
 800843c:	481f      	ldr	r0, [pc, #124]	; (80084bc <main+0x48c>)
 800843e:	f7ff fd16 	bl	8007e6e <memcmp>
 8008442:	2800      	cmp	r0, #0
 8008444:	d1d4      	bne.n	80083f0 <main+0x3c0>
 8008446:	2103      	movs	r1, #3
 8008448:	4817      	ldr	r0, [pc, #92]	; (80084a8 <main+0x478>)
 800844a:	f7ff fd22 	bl	8007e92 <dmxconfigudp::atoi(char const*, unsigned char)>
 800844e:	1e83      	subs	r3, r0, #2
 8008450:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8008454:	d8cc      	bhi.n	80083f0 <main+0x3c0>
 8008456:	4b15      	ldr	r3, [pc, #84]	; (80084ac <main+0x47c>)
 8008458:	b281      	uxth	r1, r0
 800845a:	6818      	ldr	r0, [r3, #0]
 800845c:	f002 f836 	bl	800a4cc <Dmx::SetDmxSlots(unsigned short)>
 8008460:	e7c6      	b.n	80083f0 <main+0x3c0>
 8008462:	2c0d      	cmp	r4, #13
 8008464:	d0e8      	beq.n	8008438 <main+0x408>
 8008466:	e7c3      	b.n	80083f0 <main+0x3c0>
 8008468:	2c10      	cmp	r4, #16
 800846a:	d8c1      	bhi.n	80083f0 <main+0x3c0>
 800846c:	2204      	movs	r2, #4
 800846e:	6839      	ldr	r1, [r7, #0]
 8008470:	4813      	ldr	r0, [pc, #76]	; (80084c0 <main+0x490>)
 8008472:	f7ff fcfc 	bl	8007e6e <memcmp>
 8008476:	2800      	cmp	r0, #0
 8008478:	d1c4      	bne.n	8008404 <main+0x3d4>
 800847a:	2107      	movs	r1, #7
 800847c:	4811      	ldr	r0, [pc, #68]	; (80084c4 <main+0x494>)
 800847e:	f7ff fd08 	bl	8007e92 <dmxconfigudp::atoi(char const*, unsigned char)>
 8008482:	4b11      	ldr	r3, [pc, #68]	; (80084c8 <main+0x498>)
 8008484:	f1a0 020c 	sub.w	r2, r0, #12
 8008488:	429a      	cmp	r2, r3
 800848a:	4601      	mov	r1, r0
 800848c:	d8b0      	bhi.n	80083f0 <main+0x3c0>
 800848e:	4b07      	ldr	r3, [pc, #28]	; (80084ac <main+0x47c>)
 8008490:	6818      	ldr	r0, [r3, #0]
 8008492:	f002 f811 	bl	800a4b8 <Dmx::SetDmxMabTime(unsigned int)>
 8008496:	e7ab      	b.n	80083f0 <main+0x3c0>
 8008498:	2000070d 	andcs	r0, r0, sp, lsl #14
 800849c:	20000004 	andcs	r0, r0, r4
 80084a0:	08011d88 	stmdaeq	r1, {r3, r7, r8, sl, fp, ip}
 80084a4:	08011d8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, fp, ip}
 80084a8:	20000717 	andcs	r0, r0, r7, lsl r7
 80084ac:	20000b4c 	andcs	r0, r0, ip, asr #22
 80084b0:	08011d99 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, fp, ip}
 80084b4:	20000719 	andcs	r0, r0, r9, lsl r7
 80084b8:	000f4240 	andeq	r4, pc, r0, asr #4
 80084bc:	08011da2 	stmdaeq	r1, {r1, r5, r7, r8, sl, fp, ip}
 80084c0:	08011d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip}
 80084c4:	20000715 	andcs	r0, r0, r5, lsl r7
 80084c8:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

080084cc <DmxInput::~DmxInput()>:
 80084cc:	4770      	bx	lr
	...

080084d0 <DmxInput::Start(unsigned int)>:
 80084d0:	2301      	movs	r3, #1
 80084d2:	4808      	ldr	r0, [pc, #32]	; (80084f4 <DmxInput::Start(unsigned int)+0x24>)
 80084d4:	fa03 f101 	lsl.w	r1, r3, r1
 80084d8:	7802      	ldrb	r2, [r0, #0]
 80084da:	ea31 0c02 	bics.w	ip, r1, r2
 80084de:	d007      	beq.n	80084f0 <DmxInput::Start(unsigned int)+0x20>
 80084e0:	430a      	orrs	r2, r1
 80084e2:	7002      	strb	r2, [r0, #0]
 80084e4:	4804      	ldr	r0, [pc, #16]	; (80084f8 <DmxInput::Start(unsigned int)+0x28>)
 80084e6:	461a      	mov	r2, r3
 80084e8:	2100      	movs	r1, #0
 80084ea:	6800      	ldr	r0, [r0, #0]
 80084ec:	f001 be9e 	b.w	800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80084f0:	4770      	bx	lr
 80084f2:	bf00      	nop
 80084f4:	200000f8 	strdcs	r0, [r0], -r8
 80084f8:	20000b4c 	andcs	r0, r0, ip, asr #22

080084fc <DmxInput::Stop(unsigned int)>:
 80084fc:	2201      	movs	r2, #1
 80084fe:	4808      	ldr	r0, [pc, #32]	; (8008520 <DmxInput::Stop(unsigned int)+0x24>)
 8008500:	fa02 f101 	lsl.w	r1, r2, r1
 8008504:	7803      	ldrb	r3, [r0, #0]
 8008506:	ea31 0c03 	bics.w	ip, r1, r3
 800850a:	d108      	bne.n	800851e <DmxInput::Stop(unsigned int)+0x22>
 800850c:	ea23 0301 	bic.w	r3, r3, r1
 8008510:	7003      	strb	r3, [r0, #0]
 8008512:	2300      	movs	r3, #0
 8008514:	4803      	ldr	r0, [pc, #12]	; (8008524 <DmxInput::Stop(unsigned int)+0x28>)
 8008516:	4619      	mov	r1, r3
 8008518:	6800      	ldr	r0, [r0, #0]
 800851a:	f001 be87 	b.w	800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800851e:	4770      	bx	lr
 8008520:	200000f8 	strdcs	r0, [r0], -r8
 8008524:	20000b4c 	andcs	r0, r0, ip, asr #22

08008528 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800852a:	4f0b      	ldr	r7, [pc, #44]	; (8008558 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x30>)
 800852c:	2100      	movs	r1, #0
 800852e:	6838      	ldr	r0, [r7, #0]
 8008530:	461e      	mov	r6, r3
 8008532:	4615      	mov	r5, r2
 8008534:	f002 f802 	bl	800a53c <Dmx::GetDmxAvailable(unsigned int)>
 8008538:	2100      	movs	r1, #0
 800853a:	4604      	mov	r4, r0
 800853c:	6838      	ldr	r0, [r7, #0]
 800853e:	f002 f811 	bl	800a564 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008542:	6030      	str	r0, [r6, #0]
 8008544:	b12c      	cbz	r4, 8008552 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2a>
 8008546:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 800854a:	3301      	adds	r3, #1
 800854c:	4620      	mov	r0, r4
 800854e:	602b      	str	r3, [r5, #0]
 8008550:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008552:	4623      	mov	r3, r4
 8008554:	e7fa      	b.n	800854c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x24>
 8008556:	bf00      	nop
 8008558:	20000b4c 	andcs	r0, r0, ip, asr #22

0800855c <DmxInput::~DmxInput()>:
 800855c:	b510      	push	{r4, lr}
 800855e:	4604      	mov	r4, r0
 8008560:	f007 f8e2 	bl	800f728 <operator delete(void*)>
 8008564:	4620      	mov	r0, r4
 8008566:	bd10      	pop	{r4, pc}

08008568 <DmxInput::DmxInput()>:
 8008568:	b510      	push	{r4, lr}
 800856a:	4604      	mov	r4, r0
 800856c:	4b03      	ldr	r3, [pc, #12]	; (800857c <DmxInput::DmxInput()+0x14>)
 800856e:	2100      	movs	r1, #0
 8008570:	6003      	str	r3, [r0, #0]
 8008572:	f7ff ffc3 	bl	80084fc <DmxInput::Stop(unsigned int)>
 8008576:	4620      	mov	r0, r4
 8008578:	bd10      	pop	{r4, pc}
 800857a:	bf00      	nop
 800857c:	08011de8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, fp, ip}

08008580 <e131::universe_to_multicast_ip(unsigned short)>:
 8008580:	b513      	push	{r0, r1, r4, lr}
 8008582:	4604      	mov	r4, r0
 8008584:	a901      	add	r1, sp, #4
 8008586:	4806      	ldr	r0, [pc, #24]	; (80085a0 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 8008588:	f007 f8d6 	bl	800f738 <inet_aton>
 800858c:	9801      	ldr	r0, [sp, #4]
 800858e:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 8008592:	0224      	lsls	r4, r4, #8
 8008594:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8008598:	4320      	orrs	r0, r4
 800859a:	b002      	add	sp, #8
 800859c:	bd10      	pop	{r4, pc}
 800859e:	bf00      	nop
 80085a0:	08011dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}

080085a4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 80085a4:	f240 6304 	movw	r3, #1540	; 0x604
 80085a8:	fb03 0101 	mla	r1, r3, r1, r0
 80085ac:	2300      	movs	r3, #0
 80085ae:	b510      	push	{r4, lr}
 80085b0:	4293      	cmp	r3, r2
 80085b2:	d00a      	beq.n	80085ca <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 80085b4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80085b8:	3301      	adds	r3, #1
 80085ba:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 80085be:	42a0      	cmp	r0, r4
 80085c0:	bf38      	it	cc
 80085c2:	4620      	movcc	r0, r4
 80085c4:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 80085c8:	e7f2      	b.n	80085b0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 80085ca:	bd10      	pop	{r4, pc}

080085cc <memset.constprop.0.isra.0>:
 80085cc:	2300      	movs	r3, #0
 80085ce:	4401      	add	r1, r0
 80085d0:	4288      	cmp	r0, r1
 80085d2:	d002      	beq.n	80085da <memset.constprop.0.isra.0+0xe>
 80085d4:	f800 3b01 	strb.w	r3, [r0], #1
 80085d8:	e7fa      	b.n	80085d0 <memset.constprop.0.isra.0+0x4>
 80085da:	4770      	bx	lr

080085dc <memcpy.isra.0>:
 80085dc:	3801      	subs	r0, #1
 80085de:	440a      	add	r2, r1
 80085e0:	4291      	cmp	r1, r2
 80085e2:	d004      	beq.n	80085ee <memcpy.isra.0+0x12>
 80085e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80085e8:	f800 3f01 	strb.w	r3, [r0, #1]!
 80085ec:	e7f8      	b.n	80085e0 <memcpy.isra.0+0x4>
 80085ee:	4770      	bx	lr

080085f0 <lightset::Data::Get()>:
 80085f0:	4b03      	ldr	r3, [pc, #12]	; (8008600 <lightset::Data::Get()+0x10>)
 80085f2:	4804      	ldr	r0, [pc, #16]	; (8008604 <lightset::Data::Get()+0x14>)
 80085f4:	681a      	ldr	r2, [r3, #0]
 80085f6:	07d2      	lsls	r2, r2, #31
 80085f8:	bf5c      	itt	pl
 80085fa:	2201      	movpl	r2, #1
 80085fc:	601a      	strpl	r2, [r3, #0]
 80085fe:	4770      	bx	lr
 8008600:	200000fc 	strdcs	r0, [r0], -ip
 8008604:	20000100 	andcs	r0, r0, r0, lsl #2

08008608 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8008608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800860c:	4615      	mov	r5, r2
 800860e:	460f      	mov	r7, r1
 8008610:	4604      	mov	r4, r0
 8008612:	f7ff ffed 	bl	80085f0 <lightset::Data::Get()>
 8008616:	4606      	mov	r6, r0
 8008618:	f240 6004 	movw	r0, #1540	; 0x604
 800861c:	4344      	muls	r4, r0
 800861e:	eb06 0804 	add.w	r8, r6, r4
 8008622:	462a      	mov	r2, r5
 8008624:	4639      	mov	r1, r7
 8008626:	4640      	mov	r0, r8
 8008628:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800862c:	f7ff ffd6 	bl	80085dc <memcpy.isra.0>
 8008630:	462a      	mov	r2, r5
 8008632:	4639      	mov	r1, r7
 8008634:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8008638:	1930      	adds	r0, r6, r4
 800863a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800863e:	f7ff bfcd 	b.w	80085dc <memcpy.isra.0>

08008642 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8008642:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008646:	4680      	mov	r8, r0
 8008648:	f240 6404 	movw	r4, #1540	; 0x604
 800864c:	4615      	mov	r5, r2
 800864e:	460f      	mov	r7, r1
 8008650:	4699      	mov	r9, r3
 8008652:	f7ff ffcd 	bl	80085f0 <lightset::Data::Get()>
 8008656:	fb04 f408 	mul.w	r4, r4, r8
 800865a:	eb00 0a04 	add.w	sl, r0, r4
 800865e:	4606      	mov	r6, r0
 8008660:	462a      	mov	r2, r5
 8008662:	4639      	mov	r1, r7
 8008664:	4650      	mov	r0, sl
 8008666:	f7ff ffb9 	bl	80085dc <memcpy.isra.0>
 800866a:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800866e:	f1b9 0f00 	cmp.w	r9, #0
 8008672:	d106      	bne.n	8008682 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 8008674:	462a      	mov	r2, r5
 8008676:	4641      	mov	r1, r8
 8008678:	4630      	mov	r0, r6
 800867a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800867e:	f7ff bf91 	b.w	80085a4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8008682:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008686:	462a      	mov	r2, r5
 8008688:	4639      	mov	r1, r7
 800868a:	1930      	adds	r0, r6, r4
 800868c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008690:	f7ff bfa4 	b.w	80085dc <memcpy.isra.0>

08008694 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8008694:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008698:	4616      	mov	r6, r2
 800869a:	4699      	mov	r9, r3
 800869c:	4680      	mov	r8, r0
 800869e:	460f      	mov	r7, r1
 80086a0:	f7ff ffa6 	bl	80085f0 <lightset::Data::Get()>
 80086a4:	f240 6404 	movw	r4, #1540	; 0x604
 80086a8:	4605      	mov	r5, r0
 80086aa:	fb04 f408 	mul.w	r4, r4, r8
 80086ae:	f504 7000 	add.w	r0, r4, #512	; 0x200
 80086b2:	4632      	mov	r2, r6
 80086b4:	4639      	mov	r1, r7
 80086b6:	4428      	add	r0, r5
 80086b8:	f7ff ff90 	bl	80085dc <memcpy.isra.0>
 80086bc:	192b      	adds	r3, r5, r4
 80086be:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 80086c2:	f1b9 0f00 	cmp.w	r9, #0
 80086c6:	d106      	bne.n	80086d6 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 80086c8:	4632      	mov	r2, r6
 80086ca:	4641      	mov	r1, r8
 80086cc:	4628      	mov	r0, r5
 80086ce:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80086d2:	f7ff bf67 	b.w	80085a4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 80086d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80086da:	4632      	mov	r2, r6
 80086dc:	4639      	mov	r1, r7
 80086de:	1928      	adds	r0, r5, r4
 80086e0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80086e4:	f7ff bf7a 	b.w	80085dc <memcpy.isra.0>

080086e8 <E131Bridge::Start()>:
 80086e8:	6943      	ldr	r3, [r0, #20]
 80086ea:	b513      	push	{r0, r1, r4, lr}
 80086ec:	4604      	mov	r4, r0
 80086ee:	b31b      	cbz	r3, 8008738 <E131Bridge::Start()+0x50>
 80086f0:	6983      	ldr	r3, [r0, #24]
 80086f2:	b9cb      	cbnz	r3, 8008728 <E131Bridge::Start()+0x40>
 80086f4:	a901      	add	r1, sp, #4
 80086f6:	4814      	ldr	r0, [pc, #80]	; (8008748 <E131Bridge::Start()+0x60>)
 80086f8:	f007 f81e 	bl	800f738 <inet_aton>
 80086fc:	9b01      	ldr	r3, [sp, #4]
 80086fe:	f240 207e 	movw	r0, #638	; 0x27e
 8008702:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8008706:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800870a:	6223      	str	r3, [r4, #32]
 800870c:	f007 f810 	bl	800f730 <operator new(unsigned int)>
 8008710:	61a0      	str	r0, [r4, #24]
 8008712:	4620      	mov	r0, r4
 8008714:	f000 fd04 	bl	8009120 <E131Bridge::FillDataPacket()>
 8008718:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800871c:	f007 f808 	bl	800f730 <operator new(unsigned int)>
 8008720:	61e0      	str	r0, [r4, #28]
 8008722:	4620      	mov	r0, r4
 8008724:	f000 fc5c 	bl	8008fe0 <E131Bridge::FillDiscoveryPacket()>
 8008728:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 800872c:	b123      	cbz	r3, 8008738 <E131Bridge::Start()+0x50>
 800872e:	6960      	ldr	r0, [r4, #20]
 8008730:	2100      	movs	r1, #0
 8008732:	6803      	ldr	r3, [r0, #0]
 8008734:	689b      	ldr	r3, [r3, #8]
 8008736:	4798      	blx	r3
 8008738:	2102      	movs	r1, #2
 800873a:	4b04      	ldr	r3, [pc, #16]	; (800874c <E131Bridge::Start()+0x64>)
 800873c:	6818      	ldr	r0, [r3, #0]
 800873e:	b002      	add	sp, #8
 8008740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008744:	f006 bf0e 	b.w	800f564 <LedBlink::SetMode(ledblink::Mode)>
 8008748:	08011dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
 800874c:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

08008750 <E131Bridge::Stop()>:
 8008750:	2301      	movs	r3, #1
 8008752:	b510      	push	{r4, lr}
 8008754:	4604      	mov	r4, r0
 8008756:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800875a:	6840      	ldr	r0, [r0, #4]
 800875c:	b118      	cbz	r0, 8008766 <E131Bridge::Stop()+0x16>
 800875e:	6803      	ldr	r3, [r0, #0]
 8008760:	2100      	movs	r1, #0
 8008762:	68db      	ldr	r3, [r3, #12]
 8008764:	4798      	blx	r3
 8008766:	f7ff ff43 	bl	80085f0 <lightset::Data::Get()>
 800876a:	2100      	movs	r1, #0
 800876c:	f8c0 1600 	str.w	r1, [r0, #1536]	; 0x600
 8008770:	6960      	ldr	r0, [r4, #20]
 8008772:	f884 1550 	strb.w	r1, [r4, #1360]	; 0x550
 8008776:	b930      	cbnz	r0, 8008786 <E131Bridge::Stop()+0x36>
 8008778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800877c:	4b06      	ldr	r3, [pc, #24]	; (8008798 <E131Bridge::Stop()+0x48>)
 800877e:	2100      	movs	r1, #0
 8008780:	6818      	ldr	r0, [r3, #0]
 8008782:	f006 beef 	b.w	800f564 <LedBlink::SetMode(ledblink::Mode)>
 8008786:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 800878a:	2b00      	cmp	r3, #0
 800878c:	d0f4      	beq.n	8008778 <E131Bridge::Stop()+0x28>
 800878e:	6803      	ldr	r3, [r0, #0]
 8008790:	68db      	ldr	r3, [r3, #12]
 8008792:	4798      	blx	r3
 8008794:	e7f0      	b.n	8008778 <E131Bridge::Stop()+0x28>
 8008796:	bf00      	nop
 8008798:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800879c <E131Bridge::SetSourceName(char const*)>:
 800879c:	223f      	movs	r2, #63	; 0x3f
 800879e:	b510      	push	{r4, lr}
 80087a0:	f100 0334 	add.w	r3, r0, #52	; 0x34
 80087a4:	3901      	subs	r1, #1
 80087a6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80087aa:	b92c      	cbnz	r4, 80087b8 <E131Bridge::SetSourceName(char const*)+0x1c>
 80087ac:	441a      	add	r2, r3
 80087ae:	4293      	cmp	r3, r2
 80087b0:	d006      	beq.n	80087c0 <E131Bridge::SetSourceName(char const*)+0x24>
 80087b2:	f803 4b01 	strb.w	r4, [r3], #1
 80087b6:	e7fa      	b.n	80087ae <E131Bridge::SetSourceName(char const*)+0x12>
 80087b8:	3a01      	subs	r2, #1
 80087ba:	f803 4b01 	strb.w	r4, [r3], #1
 80087be:	d1f2      	bne.n	80087a6 <E131Bridge::SetSourceName(char const*)+0xa>
 80087c0:	2300      	movs	r3, #0
 80087c2:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 80087c6:	bd10      	pop	{r4, pc}

080087c8 <E131Bridge::E131Bridge()>:
 80087c8:	2300      	movs	r3, #0
 80087ca:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80087ce:	b530      	push	{r4, r5, lr}
 80087d0:	e9c0 2300 	strd	r2, r3, [r0]
 80087d4:	2201      	movs	r2, #1
 80087d6:	4604      	mov	r4, r0
 80087d8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80087dc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80087e0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80087e4:	6743      	str	r3, [r0, #116]	; 0x74
 80087e6:	4b1a      	ldr	r3, [pc, #104]	; (8008850 <E131Bridge::E131Bridge()+0x88>)
 80087e8:	b093      	sub	sp, #76	; 0x4c
 80087ea:	6018      	str	r0, [r3, #0]
 80087ec:	7202      	strb	r2, [r0, #8]
 80087ee:	2144      	movs	r1, #68	; 0x44
 80087f0:	f500 60a2 	add.w	r0, r0, #1296	; 0x510
 80087f4:	f7ff feea 	bl	80085cc <memset.constprop.0.isra.0>
 80087f8:	f204 5054 	addw	r0, r4, #1364	; 0x554
 80087fc:	210c      	movs	r1, #12
 80087fe:	f7ff fee5 	bl	80085cc <memset.constprop.0.isra.0>
 8008802:	2364      	movs	r3, #100	; 0x64
 8008804:	4d13      	ldr	r5, [pc, #76]	; (8008854 <E131Bridge::E131Bridge()+0x8c>)
 8008806:	f884 355d 	strb.w	r3, [r4, #1373]	; 0x55d
 800880a:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800880e:	211c      	movs	r1, #28
 8008810:	f7ff fedc 	bl	80085cc <memset.constprop.0.isra.0>
 8008814:	682b      	ldr	r3, [r5, #0]
 8008816:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 800881a:	4a0f      	ldr	r2, [pc, #60]	; (8008858 <E131Bridge::E131Bridge()+0x90>)
 800881c:	331c      	adds	r3, #28
 800881e:	9200      	str	r2, [sp, #0]
 8008820:	2140      	movs	r1, #64	; 0x40
 8008822:	4a0e      	ldr	r2, [pc, #56]	; (800885c <E131Bridge::E131Bridge()+0x94>)
 8008824:	a802      	add	r0, sp, #8
 8008826:	f007 faa3 	bl	800fd70 <snprintf>
 800882a:	4620      	mov	r0, r4
 800882c:	a902      	add	r1, sp, #8
 800882e:	f7ff ffb5 	bl	800879c <E131Bridge::SetSourceName(char const*)>
 8008832:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8008836:	6828      	ldr	r0, [r5, #0]
 8008838:	f004 fd50 	bl	800d2dc <Network::Begin(unsigned short)>
 800883c:	4621      	mov	r1, r4
 800883e:	4b08      	ldr	r3, [pc, #32]	; (8008860 <E131Bridge::E131Bridge()+0x98>)
 8008840:	f841 0b24 	str.w	r0, [r1], #36
 8008844:	6818      	ldr	r0, [r3, #0]
 8008846:	f006 ff15 	bl	800f674 <Hardware::GetUuid(unsigned char*)>
 800884a:	4620      	mov	r0, r4
 800884c:	b013      	add	sp, #76	; 0x4c
 800884e:	bd30      	pop	{r4, r5, pc}
 8008850:	20000704 	andcs	r0, r0, r4, lsl #14
 8008854:	20009494 	mulcs	r0, r4, r4
 8008858:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800885c:	08011e08 	stmdaeq	r1, {r3, r9, sl, fp, ip}
 8008860:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08008864 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 8008864:	b538      	push	{r3, r4, r5, lr}
 8008866:	4603      	mov	r3, r0
 8008868:	4610      	mov	r0, r2
 800886a:	b119      	cbz	r1, 8008874 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x10>
 800886c:	f8b3 2510 	ldrh.w	r2, [r3, #1296]	; 0x510
 8008870:	4282      	cmp	r2, r0
 8008872:	d00b      	beq.n	800888c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x28>
 8008874:	681d      	ldr	r5, [r3, #0]
 8008876:	4b06      	ldr	r3, [pc, #24]	; (8008890 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x2c>)
 8008878:	681c      	ldr	r4, [r3, #0]
 800887a:	f7ff fe81 	bl	8008580 <e131::universe_to_multicast_ip(unsigned short)>
 800887e:	4629      	mov	r1, r5
 8008880:	4602      	mov	r2, r0
 8008882:	4620      	mov	r0, r4
 8008884:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008888:	f004 bd3c 	b.w	800d304 <Network::LeaveGroup(int, unsigned int)>
 800888c:	bd38      	pop	{r3, r4, r5, pc}
 800888e:	bf00      	nop
 8008890:	20009494 	mulcs	r0, r4, r4

08008894 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8008894:	b570      	push	{r4, r5, r6, lr}
 8008896:	4604      	mov	r4, r0
 8008898:	461d      	mov	r5, r3
 800889a:	b191      	cbz	r1, 80088c2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 800889c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 80088a0:	f200 5606 	addw	r6, r0, #1286	; 0x506
 80088a4:	b99a      	cbnz	r2, 80088ce <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 80088a6:	4b0e      	ldr	r3, [pc, #56]	; (80088e0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 80088a8:	8035      	strh	r5, [r6, #0]
 80088aa:	4628      	mov	r0, r5
 80088ac:	6826      	ldr	r6, [r4, #0]
 80088ae:	681c      	ldr	r4, [r3, #0]
 80088b0:	f7ff fe66 	bl	8008580 <e131::universe_to_multicast_ip(unsigned short)>
 80088b4:	4631      	mov	r1, r6
 80088b6:	4602      	mov	r2, r0
 80088b8:	4620      	mov	r0, r4
 80088ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80088be:	f004 bd1e 	b.w	800d2fe <Network::JoinGroup(int, unsigned int)>
 80088c2:	b15a      	cbz	r2, 80088dc <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 80088c4:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 80088c8:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 80088cc:	e7ea      	b.n	80088a4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 80088ce:	42aa      	cmp	r2, r5
 80088d0:	d004      	beq.n	80088dc <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 80088d2:	2101      	movs	r1, #1
 80088d4:	4620      	mov	r0, r4
 80088d6:	f7ff ffc5 	bl	8008864 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 80088da:	e7e4      	b.n	80088a6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 80088dc:	bd70      	pop	{r4, r5, r6, pc}
 80088de:	bf00      	nop
 80088e0:	20009494 	mulcs	r0, r4, r4

080088e4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 80088e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80088e8:	4604      	mov	r4, r0
 80088ea:	460d      	mov	r5, r1
 80088ec:	461e      	mov	r6, r3
 80088ee:	b9ca      	cbnz	r2, 8008924 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x40>
 80088f0:	bbb1      	cbnz	r1, 8008960 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 80088f2:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 80088f6:	b12b      	cbz	r3, 8008904 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20>
 80088f8:	f8b0 3554 	ldrh.w	r3, [r0, #1364]	; 0x554
 80088fc:	42b3      	cmp	r3, r6
 80088fe:	d109      	bne.n	8008914 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x30>
 8008900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008904:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008908:	3301      	adds	r3, #1
 800890a:	f880 350a 	strb.w	r3, [r0, #1290]	; 0x50a
 800890e:	2301      	movs	r3, #1
 8008910:	f880 3556 	strb.w	r3, [r0, #1366]	; 0x556
 8008914:	4630      	mov	r0, r6
 8008916:	f8a4 6554 	strh.w	r6, [r4, #1364]	; 0x554
 800891a:	f7ff fe31 	bl	8008580 <e131::universe_to_multicast_ip(unsigned short)>
 800891e:	f8c4 0558 	str.w	r0, [r4, #1368]	; 0x558
 8008922:	e7ed      	b.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8008924:	2a02      	cmp	r2, #2
 8008926:	d11b      	bne.n	8008960 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x7c>
 8008928:	2900      	cmp	r1, #0
 800892a:	d1e9      	bne.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 800892c:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 8008930:	b14b      	cbz	r3, 8008946 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x62>
 8008932:	f884 1512 	strb.w	r1, [r4, #1298]	; 0x512
 8008936:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800893a:	4632      	mov	r2, r6
 800893c:	3b01      	subs	r3, #1
 800893e:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8008942:	f7ff ff8f 	bl	8008864 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8008946:	f894 3556 	ldrb.w	r3, [r4, #1366]	; 0x556
 800894a:	2b00      	cmp	r3, #0
 800894c:	d0d8      	beq.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 800894e:	2300      	movs	r3, #0
 8008950:	f884 3556 	strb.w	r3, [r4, #1366]	; 0x556
 8008954:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8008958:	3b01      	subs	r3, #1
 800895a:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800895e:	e7cf      	b.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8008960:	2344      	movs	r3, #68	; 0x44
 8008962:	fb03 4305 	mla	r3, r3, r5, r4
 8008966:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800896a:	b1d2      	cbz	r2, 80089a2 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xbe>
 800896c:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8008970:	42b3      	cmp	r3, r6
 8008972:	d0c5      	beq.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 8008974:	4632      	mov	r2, r6
 8008976:	4629      	mov	r1, r5
 8008978:	4620      	mov	r0, r4
 800897a:	f7ff ff73 	bl	8008864 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800897e:	4b0d      	ldr	r3, [pc, #52]	; (80089b4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd0>)
 8008980:	4630      	mov	r0, r6
 8008982:	681f      	ldr	r7, [r3, #0]
 8008984:	f8d4 8000 	ldr.w	r8, [r4]
 8008988:	f7ff fdfa 	bl	8008580 <e131::universe_to_multicast_ip(unsigned short)>
 800898c:	4641      	mov	r1, r8
 800898e:	4602      	mov	r2, r0
 8008990:	4638      	mov	r0, r7
 8008992:	f004 fcb4 	bl	800d2fe <Network::JoinGroup(int, unsigned int)>
 8008996:	2144      	movs	r1, #68	; 0x44
 8008998:	fb01 4405 	mla	r4, r1, r5, r4
 800899c:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 80089a0:	e7ae      	b.n	8008900 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c>
 80089a2:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 80089a6:	3201      	adds	r2, #1
 80089a8:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 80089ac:	2201      	movs	r2, #1
 80089ae:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 80089b2:	e7e4      	b.n	800897e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x9a>
 80089b4:	20009494 	mulcs	r0, r4, r4

080089b8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 80089b8:	b510      	push	{r4, lr}
 80089ba:	4604      	mov	r4, r0
 80089bc:	4618      	mov	r0, r3
 80089be:	b933      	cbnz	r3, 80089ce <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x16>
 80089c0:	b921      	cbnz	r1, 80089cc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>
 80089c2:	f8b4 3554 	ldrh.w	r3, [r4, #1364]	; 0x554
 80089c6:	f894 0556 	ldrb.w	r0, [r4, #1366]	; 0x556
 80089ca:	8013      	strh	r3, [r2, #0]
 80089cc:	bd10      	pop	{r4, pc}
 80089ce:	2044      	movs	r0, #68	; 0x44
 80089d0:	fb00 4401 	mla	r4, r0, r1, r4
 80089d4:	f8b4 3510 	ldrh.w	r3, [r4, #1296]	; 0x510
 80089d8:	f894 0512 	ldrb.w	r0, [r4, #1298]	; 0x512
 80089dc:	8013      	strh	r3, [r2, #0]
 80089de:	e7f5      	b.n	80089cc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x14>

080089e0 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 80089e0:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 80089e4:	b923      	cbnz	r3, 80089f0 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 80089e6:	2301      	movs	r3, #1
 80089e8:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 80089ec:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 80089f0:	2344      	movs	r3, #68	; 0x44
 80089f2:	fb03 0001 	mla	r0, r3, r1, r0
 80089f6:	2301      	movs	r3, #1
 80089f8:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 80089fc:	4770      	bx	lr

080089fe <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 80089fe:	4602      	mov	r2, r0
 8008a00:	2044      	movs	r0, #68	; 0x44
 8008a02:	4348      	muls	r0, r1
 8008a04:	b570      	push	{r4, r5, r6, lr}
 8008a06:	1815      	adds	r5, r2, r0
 8008a08:	460c      	mov	r4, r1
 8008a0a:	68d3      	ldr	r3, [r2, #12]
 8008a0c:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 8008a10:	1a5b      	subs	r3, r3, r1
 8008a12:	f242 7110 	movw	r1, #10000	; 0x2710
 8008a16:	428b      	cmp	r3, r1
 8008a18:	d90a      	bls.n	8008a30 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8008a1a:	2600      	movs	r6, #0
 8008a1c:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 8008a20:	2110      	movs	r1, #16
 8008a22:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8008a26:	4410      	add	r0, r2
 8008a28:	f7ff fdd0 	bl	80085cc <memset.constprop.0.isra.0>
 8008a2c:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8008a30:	2044      	movs	r0, #68	; 0x44
 8008a32:	4344      	muls	r4, r0
 8008a34:	1915      	adds	r5, r2, r4
 8008a36:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8008a3a:	68d3      	ldr	r3, [r2, #12]
 8008a3c:	1a5b      	subs	r3, r3, r1
 8008a3e:	f242 7110 	movw	r1, #10000	; 0x2710
 8008a42:	428b      	cmp	r3, r1
 8008a44:	d90a      	bls.n	8008a5c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8008a46:	2600      	movs	r6, #0
 8008a48:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8008a4c:	2110      	movs	r1, #16
 8008a4e:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 8008a52:	1910      	adds	r0, r2, r4
 8008a54:	f7ff fdba 	bl	80085cc <memset.constprop.0.isra.0>
 8008a58:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8008a5c:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 8008a60:	b923      	cbnz	r3, 8008a6c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x6e>
 8008a62:	2101      	movs	r1, #1
 8008a64:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8008a68:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8008a6c:	bd70      	pop	{r4, r5, r6, pc}

08008a6e <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8008a6e:	2244      	movs	r2, #68	; 0x44
 8008a70:	fb02 0101 	mla	r1, r2, r1, r0
 8008a74:	68c3      	ldr	r3, [r0, #12]
 8008a76:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 8008a7a:	b510      	push	{r4, lr}
 8008a7c:	1a1a      	subs	r2, r3, r0
 8008a7e:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 8008a82:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 8008a86:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 8008a8a:	b171      	cbz	r1, 8008aaa <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8008a8c:	1b1b      	subs	r3, r3, r4
 8008a8e:	b128      	cbz	r0, 8008a9c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8008a90:	f242 700f 	movw	r0, #9999	; 0x270f
 8008a94:	4283      	cmp	r3, r0
 8008a96:	d90d      	bls.n	8008ab4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8008a98:	4282      	cmp	r2, r0
 8008a9a:	e002      	b.n	8008aa2 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8008a9c:	f242 7010 	movw	r0, #10000	; 0x2710
 8008aa0:	4283      	cmp	r3, r0
 8008aa2:	bf94      	ite	ls
 8008aa4:	2000      	movls	r0, #0
 8008aa6:	2001      	movhi	r0, #1
 8008aa8:	bd10      	pop	{r4, pc}
 8008aaa:	2800      	cmp	r0, #0
 8008aac:	d0fc      	beq.n	8008aa8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8008aae:	f242 7010 	movw	r0, #10000	; 0x2710
 8008ab2:	e7f1      	b.n	8008a98 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8008ab4:	2000      	movs	r0, #0
 8008ab6:	e7f7      	b.n	8008aa8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08008ab8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8008ab8:	684a      	ldr	r2, [r1, #4]
 8008aba:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8008abc:	b510      	push	{r4, lr}
 8008abe:	429a      	cmp	r2, r3
 8008ac0:	d10b      	bne.n	8008ada <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 8008ac2:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8008ac6:	3108      	adds	r1, #8
 8008ac8:	30a2      	adds	r0, #162	; 0xa2
 8008aca:	4298      	cmp	r0, r3
 8008acc:	d007      	beq.n	8008ade <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8008ace:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008ad2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008ad6:	4294      	cmp	r4, r2
 8008ad8:	d0f7      	beq.n	8008aca <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8008ada:	2000      	movs	r0, #0
 8008adc:	bd10      	pop	{r4, pc}
 8008ade:	2001      	movs	r0, #1
 8008ae0:	e7fc      	b.n	8008adc <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

08008ae4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8008ae4:	b538      	push	{r3, r4, r5, lr}
 8008ae6:	4604      	mov	r4, r0
 8008ae8:	2001      	movs	r0, #1
 8008aea:	460d      	mov	r5, r1
 8008aec:	f894 3552 	ldrb.w	r3, [r4, #1362]	; 0x552
 8008af0:	f884 04f8 	strb.w	r0, [r4, #1272]	; 0x4f8
 8008af4:	2900      	cmp	r1, #0
 8008af6:	d04b      	beq.n	8008b90 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 8008af8:	b362      	cbz	r2, 8008b54 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x70>
 8008afa:	f8c4 04f4 	str.w	r0, [r4, #1268]	; 0x4f4
 8008afe:	f884 050c 	strb.w	r0, [r4, #1292]	; 0x50c
 8008b02:	b1db      	cbz	r3, 8008b3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008b04:	2500      	movs	r5, #0
 8008b06:	6860      	ldr	r0, [r4, #4]
 8008b08:	2100      	movs	r1, #0
 8008b0a:	6803      	ldr	r3, [r0, #0]
 8008b0c:	68db      	ldr	r3, [r3, #12]
 8008b0e:	4798      	blx	r3
 8008b10:	2110      	movs	r1, #16
 8008b12:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008b16:	f8c4 5518 	str.w	r5, [r4, #1304]	; 0x518
 8008b1a:	f7ff fd57 	bl	80085cc <memset.constprop.0.isra.0>
 8008b1e:	2110      	movs	r1, #16
 8008b20:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008b24:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 8008b28:	f7ff fd50 	bl	80085cc <memset.constprop.0.isra.0>
 8008b2c:	f7ff fd60 	bl	80085f0 <lightset::Data::Get()>
 8008b30:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8008b34:	f8a4 5550 	strh.w	r5, [r4, #1360]	; 0x550
 8008b38:	f884 5552 	strb.w	r5, [r4, #1362]	; 0x552
 8008b3c:	4b1d      	ldr	r3, [pc, #116]	; (8008bb4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>)
 8008b3e:	2102      	movs	r1, #2
 8008b40:	6818      	ldr	r0, [r3, #0]
 8008b42:	f006 fd0f 	bl	800f564 <LedBlink::SetMode(ledblink::Mode)>
 8008b46:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008b4a:	f023 0302 	bic.w	r3, r3, #2
 8008b4e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008b52:	bd38      	pop	{r3, r4, r5, pc}
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	d0f1      	beq.n	8008b3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008b58:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
 8008b5c:	b143      	cbz	r3, 8008b70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 8008b5e:	2110      	movs	r1, #16
 8008b60:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 8008b64:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008b68:	f7ff fd30 	bl	80085cc <memset.constprop.0.isra.0>
 8008b6c:	f884 2551 	strb.w	r2, [r4, #1361]	; 0x551
 8008b70:	f894 54f5 	ldrb.w	r5, [r4, #1269]	; 0x4f5
 8008b74:	2d00      	cmp	r5, #0
 8008b76:	d1e1      	bne.n	8008b3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008b78:	6860      	ldr	r0, [r4, #4]
 8008b7a:	4629      	mov	r1, r5
 8008b7c:	6803      	ldr	r3, [r0, #0]
 8008b7e:	68db      	ldr	r3, [r3, #12]
 8008b80:	4798      	blx	r3
 8008b82:	f7ff fd35 	bl	80085f0 <lightset::Data::Get()>
 8008b86:	f8c0 5600 	str.w	r5, [r0, #1536]	; 0x600
 8008b8a:	f884 5550 	strb.w	r5, [r4, #1360]	; 0x550
 8008b8e:	e7d3      	b.n	8008b38 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x54>
 8008b90:	2b00      	cmp	r3, #0
 8008b92:	d0d3      	beq.n	8008b3c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x58>
 8008b94:	2a00      	cmp	r2, #0
 8008b96:	d0eb      	beq.n	8008b70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 8008b98:	f8d4 3534 	ldr.w	r3, [r4, #1332]	; 0x534
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	d0e7      	beq.n	8008b70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 8008ba0:	2110      	movs	r1, #16
 8008ba2:	f8c4 5534 	str.w	r5, [r4, #1332]	; 0x534
 8008ba6:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008baa:	f7ff fd0f 	bl	80085cc <memset.constprop.0.isra.0>
 8008bae:	f884 5551 	strb.w	r5, [r4, #1361]	; 0x551
 8008bb2:	e7dd      	b.n	8008b70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8c>
 8008bb4:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

08008bb8 <E131Bridge::HandleDmx()>:
 8008bb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bbc:	f8b0 50f7 	ldrh.w	r5, [r0, #247]	; 0xf7
 8008bc0:	f890 3512 	ldrb.w	r3, [r0, #1298]	; 0x512
 8008bc4:	ba6d      	rev16	r5, r5
 8008bc6:	b2ad      	uxth	r5, r5
 8008bc8:	4604      	mov	r4, r0
 8008bca:	f100 08fa 	add.w	r8, r0, #250	; 0xfa
 8008bce:	3d01      	subs	r5, #1
 8008bd0:	b343      	cbz	r3, 8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008bd2:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8008bd6:	f8b0 20ed 	ldrh.w	r2, [r0, #237]	; 0xed
 8008bda:	ba5b      	rev16	r3, r3
 8008bdc:	b29b      	uxth	r3, r3
 8008bde:	429a      	cmp	r2, r3
 8008be0:	d120      	bne.n	8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008be2:	f200 5114 	addw	r1, r0, #1300	; 0x514
 8008be6:	f8d0 a518 	ldr.w	sl, [r0, #1304]	; 0x518
 8008bea:	f8d0 9534 	ldr.w	r9, [r0, #1332]	; 0x534
 8008bee:	f7ff ff63 	bl	8008ab8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8008bf2:	f504 61a6 	add.w	r1, r4, #1328	; 0x530
 8008bf6:	4607      	mov	r7, r0
 8008bf8:	4620      	mov	r0, r4
 8008bfa:	f7ff ff5d 	bl	8008ab8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 8008bfe:	4606      	mov	r6, r0
 8008c00:	b197      	cbz	r7, 8008c28 <E131Bridge::HandleDmx()+0x70>
 8008c02:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008c06:	f894 252c 	ldrb.w	r2, [r4, #1324]	; 0x52c
 8008c0a:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008c0e:	3313      	adds	r3, #19
 8008c10:	1a9b      	subs	r3, r3, r2
 8008c12:	b2db      	uxtb	r3, r3
 8008c14:	2b13      	cmp	r3, #19
 8008c16:	d905      	bls.n	8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008c18:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 8008c1c:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8008c20:	2a00      	cmp	r2, #0
 8008c22:	da0a      	bge.n	8008c3a <E131Bridge::HandleDmx()+0x82>
 8008c24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c28:	2800      	cmp	r0, #0
 8008c2a:	d0f5      	beq.n	8008c18 <E131Bridge::HandleDmx()+0x60>
 8008c2c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008c30:	f894 2548 	ldrb.w	r2, [r4, #1352]	; 0x548
 8008c34:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008c38:	e7e9      	b.n	8008c0e <E131Bridge::HandleDmx()+0x56>
 8008c3a:	065a      	lsls	r2, r3, #25
 8008c3c:	d509      	bpl.n	8008c52 <E131Bridge::HandleDmx()+0x9a>
 8008c3e:	b90f      	cbnz	r7, 8008c44 <E131Bridge::HandleDmx()+0x8c>
 8008c40:	2e00      	cmp	r6, #0
 8008c42:	d0ef      	beq.n	8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008c44:	4632      	mov	r2, r6
 8008c46:	4639      	mov	r1, r7
 8008c48:	4620      	mov	r0, r4
 8008c4a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c4e:	f7ff bf49 	b.w	8008ae4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8008c52:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 8008c56:	b12b      	cbz	r3, 8008c64 <E131Bridge::HandleDmx()+0xac>
 8008c58:	f894 14fa 	ldrb.w	r1, [r4, #1274]	; 0x4fa
 8008c5c:	b911      	cbnz	r1, 8008c64 <E131Bridge::HandleDmx()+0xac>
 8008c5e:	4620      	mov	r0, r4
 8008c60:	f7ff fecd 	bl	80089fe <E131Bridge::CheckMergeTimeouts(unsigned int)>
 8008c64:	f894 b0e8 	ldrb.w	fp, [r4, #232]	; 0xe8
 8008c68:	f894 350c 	ldrb.w	r3, [r4, #1292]	; 0x50c
 8008c6c:	459b      	cmp	fp, r3
 8008c6e:	d258      	bcs.n	8008d22 <E131Bridge::HandleDmx()+0x16a>
 8008c70:	2100      	movs	r1, #0
 8008c72:	4620      	mov	r0, r4
 8008c74:	f7ff fefb 	bl	8008a6e <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 8008c78:	2800      	cmp	r0, #0
 8008c7a:	d0d3      	beq.n	8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008c7c:	f884 b50c 	strb.w	fp, [r4, #1292]	; 0x50c
 8008c80:	f1ba 0f00 	cmp.w	sl, #0
 8008c84:	d156      	bne.n	8008d34 <E131Bridge::HandleDmx()+0x17c>
 8008c86:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008c8a:	f1b9 0f00 	cmp.w	r9, #0
 8008c8e:	d15c      	bne.n	8008d4a <E131Bridge::HandleDmx()+0x192>
 8008c90:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8008c92:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008c96:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 8008c9a:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8008c9e:	2210      	movs	r2, #16
 8008ca0:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008ca4:	f7ff fc9a 	bl	80085dc <memcpy.isra.0>
 8008ca8:	68e3      	ldr	r3, [r4, #12]
 8008caa:	462a      	mov	r2, r5
 8008cac:	4641      	mov	r1, r8
 8008cae:	4648      	mov	r0, r9
 8008cb0:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 8008cb4:	f7ff fca8 	bl	8008608 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 8008cb8:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 8008cbc:	069b      	lsls	r3, r3, #26
 8008cbe:	f100 80a2 	bmi.w	8008e06 <E131Bridge::HandleDmx()+0x24e>
 8008cc2:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 8008cc6:	b29a      	uxth	r2, r3
 8008cc8:	2a00      	cmp	r2, #0
 8008cca:	f000 809f 	beq.w	8008e0c <E131Bridge::HandleDmx()+0x254>
 8008cce:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 8008cd2:	2a00      	cmp	r2, #0
 8008cd4:	f040 809a 	bne.w	8008e0c <E131Bridge::HandleDmx()+0x254>
 8008cd8:	ba5b      	rev16	r3, r3
 8008cda:	b29b      	uxth	r3, r3
 8008cdc:	2f00      	cmp	r7, #0
 8008cde:	f040 808f 	bne.w	8008e00 <E131Bridge::HandleDmx()+0x248>
 8008ce2:	2e00      	cmp	r6, #0
 8008ce4:	f040 808c 	bne.w	8008e00 <E131Bridge::HandleDmx()+0x248>
 8008ce8:	f8d4 2534 	ldr.w	r2, [r4, #1332]	; 0x534
 8008cec:	f8d4 1518 	ldr.w	r1, [r4, #1304]	; 0x518
 8008cf0:	3a00      	subs	r2, #0
 8008cf2:	bf18      	it	ne
 8008cf4:	2201      	movne	r2, #1
 8008cf6:	3900      	subs	r1, #0
 8008cf8:	bf18      	it	ne
 8008cfa:	2101      	movne	r1, #1
 8008cfc:	4620      	mov	r0, r4
 8008cfe:	f7ff fdc9 	bl	8008894 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 8008d02:	f240 1301 	movw	r3, #257	; 0x101
 8008d06:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 8008d0a:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 8008d0e:	2b00      	cmp	r3, #0
 8008d10:	f040 8081 	bne.w	8008e16 <E131Bridge::HandleDmx()+0x25e>
 8008d14:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008d18:	f043 0302 	orr.w	r3, r3, #2
 8008d1c:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008d20:	e780      	b.n	8008c24 <E131Bridge::HandleDmx()+0x6c>
 8008d22:	d9ad      	bls.n	8008c80 <E131Bridge::HandleDmx()+0xc8>
 8008d24:	2300      	movs	r3, #0
 8008d26:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
 8008d2a:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8008d2e:	f884 34f5 	strb.w	r3, [r4, #1269]	; 0x4f5
 8008d32:	e7a3      	b.n	8008c7c <E131Bridge::HandleDmx()+0xc4>
 8008d34:	2f00      	cmp	r7, #0
 8008d36:	f000 8089 	beq.w	8008e4c <E131Bridge::HandleDmx()+0x294>
 8008d3a:	f1b9 0f00 	cmp.w	r9, #0
 8008d3e:	d154      	bne.n	8008dea <E131Bridge::HandleDmx()+0x232>
 8008d40:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008d44:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008d48:	e7ae      	b.n	8008ca8 <E131Bridge::HandleDmx()+0xf0>
 8008d4a:	b39e      	cbz	r6, 8008db4 <E131Bridge::HandleDmx()+0x1fc>
 8008d4c:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008d50:	68e3      	ldr	r3, [r4, #12]
 8008d52:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 8008d56:	f7ff fc4b 	bl	80085f0 <lightset::Data::Get()>
 8008d5a:	4681      	mov	r9, r0
 8008d5c:	462a      	mov	r2, r5
 8008d5e:	4641      	mov	r1, r8
 8008d60:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8008d64:	f7ff fc3a 	bl	80085dc <memcpy.isra.0>
 8008d68:	462a      	mov	r2, r5
 8008d6a:	4641      	mov	r1, r8
 8008d6c:	f8c9 5600 	str.w	r5, [r9, #1536]	; 0x600
 8008d70:	f509 6080 	add.w	r0, r9, #1024	; 0x400
 8008d74:	f7ff fc32 	bl	80085dc <memcpy.isra.0>
 8008d78:	e79e      	b.n	8008cb8 <E131Bridge::HandleDmx()+0x100>
 8008d7a:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8008d7c:	2210      	movs	r2, #16
 8008d7e:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 8008d82:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008d86:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8008d8a:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008d8e:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
 8008d92:	f7ff fc23 	bl	80085dc <memcpy.isra.0>
 8008d96:	68e3      	ldr	r3, [r4, #12]
 8008d98:	4639      	mov	r1, r7
 8008d9a:	4620      	mov	r0, r4
 8008d9c:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
 8008da0:	f7ff fe1e 	bl	80089e0 <E131Bridge::UpdateMergeStatus(unsigned int)>
 8008da4:	462a      	mov	r2, r5
 8008da6:	4641      	mov	r1, r8
 8008da8:	4638      	mov	r0, r7
 8008daa:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 8008dae:	f7ff fc71 	bl	8008694 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8008db2:	e781      	b.n	8008cb8 <E131Bridge::HandleDmx()+0x100>
 8008db4:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 8008db6:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008dba:	f8c4 2518 	str.w	r2, [r4, #1304]	; 0x518
 8008dbe:	f104 0192 	add.w	r1, r4, #146	; 0x92
 8008dc2:	2210      	movs	r2, #16
 8008dc4:	f204 501c 	addw	r0, r4, #1308	; 0x51c
 8008dc8:	f7ff fc08 	bl	80085dc <memcpy.isra.0>
 8008dcc:	68e3      	ldr	r3, [r4, #12]
 8008dce:	4631      	mov	r1, r6
 8008dd0:	4620      	mov	r0, r4
 8008dd2:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
 8008dd6:	f7ff fe03 	bl	80089e0 <E131Bridge::UpdateMergeStatus(unsigned int)>
 8008dda:	462a      	mov	r2, r5
 8008ddc:	4641      	mov	r1, r8
 8008dde:	4630      	mov	r0, r6
 8008de0:	f8d4 354c 	ldr.w	r3, [r4, #1356]	; 0x54c
 8008de4:	f7ff fc2d 	bl	8008642 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 8008de8:	e766      	b.n	8008cb8 <E131Bridge::HandleDmx()+0x100>
 8008dea:	b926      	cbnz	r6, 8008df6 <E131Bridge::HandleDmx()+0x23e>
 8008dec:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008df0:	f884 352c 	strb.w	r3, [r4, #1324]	; 0x52c
 8008df4:	e7ea      	b.n	8008dcc <E131Bridge::HandleDmx()+0x214>
 8008df6:	481a      	ldr	r0, [pc, #104]	; (8008e60 <E131Bridge::HandleDmx()+0x2a8>)
 8008df8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008dfc:	f006 bf90 	b.w	800fd20 <printf>
 8008e00:	4632      	mov	r2, r6
 8008e02:	4639      	mov	r1, r7
 8008e04:	e77a      	b.n	8008cfc <E131Bridge::HandleDmx()+0x144>
 8008e06:	2300      	movs	r3, #0
 8008e08:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 8008e0c:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8008e10:	2b00      	cmp	r3, #0
 8008e12:	f47f af7a 	bne.w	8008d0a <E131Bridge::HandleDmx()+0x152>
 8008e16:	6865      	ldr	r5, [r4, #4]
 8008e18:	f7ff fbea 	bl	80085f0 <lightset::Data::Get()>
 8008e1c:	682b      	ldr	r3, [r5, #0]
 8008e1e:	2100      	movs	r1, #0
 8008e20:	691e      	ldr	r6, [r3, #16]
 8008e22:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8008e26:	f8d0 3600 	ldr.w	r3, [r0, #1536]	; 0x600
 8008e2a:	4628      	mov	r0, r5
 8008e2c:	47b0      	blx	r6
 8008e2e:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 8008e32:	2900      	cmp	r1, #0
 8008e34:	f47f af6e 	bne.w	8008d14 <E131Bridge::HandleDmx()+0x15c>
 8008e38:	6860      	ldr	r0, [r4, #4]
 8008e3a:	6803      	ldr	r3, [r0, #0]
 8008e3c:	689b      	ldr	r3, [r3, #8]
 8008e3e:	4798      	blx	r3
 8008e40:	2301      	movs	r3, #1
 8008e42:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 8008e46:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 8008e4a:	e763      	b.n	8008d14 <E131Bridge::HandleDmx()+0x15c>
 8008e4c:	f1b9 0f00 	cmp.w	r9, #0
 8008e50:	d093      	beq.n	8008d7a <E131Bridge::HandleDmx()+0x1c2>
 8008e52:	2e00      	cmp	r6, #0
 8008e54:	d0cf      	beq.n	8008df6 <E131Bridge::HandleDmx()+0x23e>
 8008e56:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 8008e5a:	f884 3548 	strb.w	r3, [r4, #1352]	; 0x548
 8008e5e:	e79a      	b.n	8008d96 <E131Bridge::HandleDmx()+0x1de>
 8008e60:	08011e1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, fp, ip}

08008e64 <E131Bridge::IsValidRoot()>:
 8008e64:	4a0d      	ldr	r2, [pc, #52]	; (8008e9c <E131Bridge::IsValidRoot()+0x38>)
 8008e66:	b530      	push	{r4, r5, lr}
 8008e68:	f100 0380 	add.w	r3, r0, #128	; 0x80
 8008e6c:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 8008e70:	42ab      	cmp	r3, r5
 8008e72:	d007      	beq.n	8008e84 <E131Bridge::IsValidRoot()+0x20>
 8008e74:	f813 4b01 	ldrb.w	r4, [r3], #1
 8008e78:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e7c:	428c      	cmp	r4, r1
 8008e7e:	d0f7      	beq.n	8008e70 <E131Bridge::IsValidRoot()+0xc>
 8008e80:	2000      	movs	r0, #0
 8008e82:	e008      	b.n	8008e96 <E131Bridge::IsValidRoot()+0x32>
 8008e84:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 8008e88:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 8008e8c:	d004      	beq.n	8008e98 <E131Bridge::IsValidRoot()+0x34>
 8008e8e:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8008e92:	4258      	negs	r0, r3
 8008e94:	4158      	adcs	r0, r3
 8008e96:	bd30      	pop	{r4, r5, pc}
 8008e98:	2001      	movs	r0, #1
 8008e9a:	e7fc      	b.n	8008e96 <E131Bridge::IsValidRoot()+0x32>
 8008e9c:	08011fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}

08008ea0 <E131Bridge::IsValidDataPacket()>:
 8008ea0:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8008ea4:	2b02      	cmp	r3, #2
 8008ea6:	d10d      	bne.n	8008ec4 <E131Bridge::IsValidDataPacket()+0x24>
 8008ea8:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 8008eac:	2ba1      	cmp	r3, #161	; 0xa1
 8008eae:	d109      	bne.n	8008ec4 <E131Bridge::IsValidDataPacket()+0x24>
 8008eb0:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 8008eb4:	b933      	cbnz	r3, 8008ec4 <E131Bridge::IsValidDataPacket()+0x24>
 8008eb6:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 8008eba:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 8008ebe:	4258      	negs	r0, r3
 8008ec0:	4158      	adcs	r0, r3
 8008ec2:	4770      	bx	lr
 8008ec4:	2000      	movs	r0, #0
 8008ec6:	4770      	bx	lr

08008ec8 <E131Bridge::Run()>:
 8008ec8:	b530      	push	{r4, r5, lr}
 8008eca:	4601      	mov	r1, r0
 8008ecc:	4604      	mov	r4, r0
 8008ece:	b085      	sub	sp, #20
 8008ed0:	f10d 030e 	add.w	r3, sp, #14
 8008ed4:	f811 0b7c 	ldrb.w	r0, [r1], #124
 8008ed8:	f44f 628f 	mov.w	r2, #1144	; 0x478
 8008edc:	9300      	str	r3, [sp, #0]
 8008ede:	f104 0378 	add.w	r3, r4, #120	; 0x78
 8008ee2:	f003 fcd1 	bl	800c888 <udp_recv>
 8008ee6:	4b3c      	ldr	r3, [pc, #240]	; (8008fd8 <E131Bridge::Run()+0x110>)
 8008ee8:	681d      	ldr	r5, [r3, #0]
 8008eea:	60e5      	str	r5, [r4, #12]
 8008eec:	2800      	cmp	r0, #0
 8008eee:	d13b      	bne.n	8008f68 <E131Bridge::Run()+0xa0>
 8008ef0:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 8008ef4:	b183      	cbz	r3, 8008f18 <E131Bridge::Run()+0x50>
 8008ef6:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 8008efa:	bb73      	cbnz	r3, 8008f5a <E131Bridge::Run()+0x92>
 8008efc:	6923      	ldr	r3, [r4, #16]
 8008efe:	1aed      	subs	r5, r5, r3
 8008f00:	f640 13c3 	movw	r3, #2499	; 0x9c3
 8008f04:	429d      	cmp	r5, r3
 8008f06:	d928      	bls.n	8008f5a <E131Bridge::Run()+0x92>
 8008f08:	6863      	ldr	r3, [r4, #4]
 8008f0a:	b9eb      	cbnz	r3, 8008f48 <E131Bridge::Run()+0x80>
 8008f0c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008f10:	f023 0302 	bic.w	r3, r3, #2
 8008f14:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 8008f18:	6963      	ldr	r3, [r4, #20]
 8008f1a:	b12b      	cbz	r3, 8008f28 <E131Bridge::Run()+0x60>
 8008f1c:	4620      	mov	r0, r4
 8008f1e:	f000 f945 	bl	80091ac <E131Bridge::HandleDmxIn()>
 8008f22:	4620      	mov	r0, r4
 8008f24:	f000 f8ca 	bl	80090bc <E131Bridge::SendDiscoveryPacket()>
 8008f28:	7a23      	ldrb	r3, [r4, #8]
 8008f2a:	b15b      	cbz	r3, 8008f44 <E131Bridge::Run()+0x7c>
 8008f2c:	4b2b      	ldr	r3, [pc, #172]	; (8008fdc <E131Bridge::Run()+0x114>)
 8008f2e:	6818      	ldr	r0, [r3, #0]
 8008f30:	6843      	ldr	r3, [r0, #4]
 8008f32:	2b04      	cmp	r3, #4
 8008f34:	d006      	beq.n	8008f44 <E131Bridge::Run()+0x7c>
 8008f36:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d049      	beq.n	8008fd2 <E131Bridge::Run()+0x10a>
 8008f3e:	2103      	movs	r1, #3
 8008f40:	f006 fb10 	bl	800f564 <LedBlink::SetMode(ledblink::Mode)>
 8008f44:	b005      	add	sp, #20
 8008f46:	bd30      	pop	{r4, r5, pc}
 8008f48:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 8008f4c:	2b00      	cmp	r3, #0
 8008f4e:	d1dd      	bne.n	8008f0c <E131Bridge::Run()+0x44>
 8008f50:	2201      	movs	r2, #1
 8008f52:	4620      	mov	r0, r4
 8008f54:	4611      	mov	r1, r2
 8008f56:	f7ff fdc5 	bl	8008ae4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8008f5a:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 8008f5e:	1a9b      	subs	r3, r3, r2
 8008f60:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008f64:	d3d8      	bcc.n	8008f18 <E131Bridge::Run()+0x50>
 8008f66:	e7d1      	b.n	8008f0c <E131Bridge::Run()+0x44>
 8008f68:	4620      	mov	r0, r4
 8008f6a:	f7ff ff7b 	bl	8008e64 <E131Bridge::IsValidRoot()>
 8008f6e:	2800      	cmp	r0, #0
 8008f70:	d0e8      	beq.n	8008f44 <E131Bridge::Run()+0x7c>
 8008f72:	2300      	movs	r3, #0
 8008f74:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 8008f78:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 8008f7c:	6125      	str	r5, [r4, #16]
 8008f7e:	b15b      	cbz	r3, 8008f98 <E131Bridge::Run()+0xd0>
 8008f80:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 8008f84:	b943      	cbnz	r3, 8008f98 <E131Bridge::Run()+0xd0>
 8008f86:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 8008f8a:	1aad      	subs	r5, r5, r2
 8008f8c:	f640 12c3 	movw	r2, #2499	; 0x9c3
 8008f90:	4295      	cmp	r5, r2
 8008f92:	bf88      	it	hi
 8008f94:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 8008f98:	6863      	ldr	r3, [r4, #4]
 8008f9a:	2b00      	cmp	r3, #0
 8008f9c:	d0bc      	beq.n	8008f18 <E131Bridge::Run()+0x50>
 8008f9e:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 8008fa2:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008fa6:	ba1a      	rev	r2, r3
 8008fa8:	d108      	bne.n	8008fbc <E131Bridge::Run()+0xf4>
 8008faa:	4620      	mov	r0, r4
 8008fac:	f7ff ff78 	bl	8008ea0 <E131Bridge::IsValidDataPacket()>
 8008fb0:	2800      	cmp	r0, #0
 8008fb2:	d0b1      	beq.n	8008f18 <E131Bridge::Run()+0x50>
 8008fb4:	4620      	mov	r0, r4
 8008fb6:	f7ff fdff 	bl	8008bb8 <E131Bridge::HandleDmx()>
 8008fba:	e7ad      	b.n	8008f18 <E131Bridge::Run()+0x50>
 8008fbc:	2a08      	cmp	r2, #8
 8008fbe:	d1ab      	bne.n	8008f18 <E131Bridge::Run()+0x50>
 8008fc0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008fc4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008fc8:	d1a6      	bne.n	8008f18 <E131Bridge::Run()+0x50>
 8008fca:	4620      	mov	r0, r4
 8008fcc:	f000 f95a 	bl	8009284 <E131Bridge::HandleSynchronization()>
 8008fd0:	e7a2      	b.n	8008f18 <E131Bridge::Run()+0x50>
 8008fd2:	2102      	movs	r1, #2
 8008fd4:	e7b4      	b.n	8008f40 <E131Bridge::Run()+0x78>
 8008fd6:	bf00      	nop
 8008fd8:	20009bd4 	ldrdcs	r9, [r0], -r4
 8008fdc:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

08008fe0 <E131Bridge::FillDiscoveryPacket()>:
 8008fe0:	2200      	movs	r2, #0
 8008fe2:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8008fe6:	b510      	push	{r4, lr}
 8008fe8:	333c      	adds	r3, #60	; 0x3c
 8008fea:	005b      	lsls	r3, r3, #1
 8008fec:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 8008ff0:	69c3      	ldr	r3, [r0, #28]
 8008ff2:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 8008ff6:	428b      	cmp	r3, r1
 8008ff8:	d002      	beq.n	8009000 <E131Bridge::FillDiscoveryPacket()+0x20>
 8008ffa:	f803 2b01 	strb.w	r2, [r3], #1
 8008ffe:	e7fa      	b.n	8008ff6 <E131Bridge::FillDiscoveryPacket()+0x16>
 8009000:	69c3      	ldr	r3, [r0, #28]
 8009002:	492d      	ldr	r1, [pc, #180]	; (80090b8 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 8009004:	701a      	strb	r2, [r3, #0]
 8009006:	2210      	movs	r2, #16
 8009008:	705a      	strb	r2, [r3, #1]
 800900a:	1d1a      	adds	r2, r3, #4
 800900c:	3310      	adds	r3, #16
 800900e:	4293      	cmp	r3, r2
 8009010:	d004      	beq.n	800901c <E131Bridge::FillDiscoveryPacket()+0x3c>
 8009012:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009016:	f802 4b01 	strb.w	r4, [r2], #1
 800901a:	e7f8      	b.n	800900e <E131Bridge::FillDiscoveryPacket()+0x2e>
 800901c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8009020:	69c3      	ldr	r3, [r0, #28]
 8009022:	3234      	adds	r2, #52	; 0x34
 8009024:	0052      	lsls	r2, r2, #1
 8009026:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800902a:	ba52      	rev16	r2, r2
 800902c:	821a      	strh	r2, [r3, #16]
 800902e:	2200      	movs	r2, #0
 8009030:	749a      	strb	r2, [r3, #18]
 8009032:	74da      	strb	r2, [r3, #19]
 8009034:	751a      	strb	r2, [r3, #20]
 8009036:	2208      	movs	r2, #8
 8009038:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800903c:	755a      	strb	r2, [r3, #21]
 800903e:	f100 0434 	add.w	r4, r0, #52	; 0x34
 8009042:	3316      	adds	r3, #22
 8009044:	42a1      	cmp	r1, r4
 8009046:	d004      	beq.n	8009052 <E131Bridge::FillDiscoveryPacket()+0x72>
 8009048:	f811 2b01 	ldrb.w	r2, [r1], #1
 800904c:	f803 2b01 	strb.w	r2, [r3], #1
 8009050:	e7f8      	b.n	8009044 <E131Bridge::FillDiscoveryPacket()+0x64>
 8009052:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8009056:	69c3      	ldr	r3, [r0, #28]
 8009058:	3229      	adds	r2, #41	; 0x29
 800905a:	0052      	lsls	r2, r2, #1
 800905c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 8009060:	ba52      	rev16	r2, r2
 8009062:	84da      	strh	r2, [r3, #38]	; 0x26
 8009064:	2200      	movs	r2, #0
 8009066:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800906a:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800906e:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8009072:	2202      	movs	r2, #2
 8009074:	332c      	adds	r3, #44	; 0x2c
 8009076:	f803 2c01 	strb.w	r2, [r3, #-1]
 800907a:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800907e:	42a1      	cmp	r1, r4
 8009080:	d004      	beq.n	800908c <E131Bridge::FillDiscoveryPacket()+0xac>
 8009082:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009086:	f803 2b01 	strb.w	r2, [r3], #1
 800908a:	e7f8      	b.n	800907e <E131Bridge::FillDiscoveryPacket()+0x9e>
 800908c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 8009090:	69c2      	ldr	r2, [r0, #28]
 8009092:	3304      	adds	r3, #4
 8009094:	005b      	lsls	r3, r3, #1
 8009096:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800909a:	ba5b      	rev16	r3, r3
 800909c:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 80090a0:	2300      	movs	r3, #0
 80090a2:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 80090a6:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 80090aa:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 80090ae:	2301      	movs	r3, #1
 80090b0:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 80090b4:	bd10      	pop	{r4, pc}
 80090b6:	bf00      	nop
 80090b8:	08011fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}

080090bc <E131Bridge::SendDiscoveryPacket()>:
 80090bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80090be:	f242 710f 	movw	r1, #9999	; 0x270f
 80090c2:	68c2      	ldr	r2, [r0, #12]
 80090c4:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 80090c8:	4604      	mov	r4, r0
 80090ca:	1ad3      	subs	r3, r2, r3
 80090cc:	428b      	cmp	r3, r1
 80090ce:	d91b      	bls.n	8009108 <E131Bridge::SendDiscoveryPacket()+0x4c>
 80090d0:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 80090d4:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 80090d8:	b163      	cbz	r3, 80090f4 <E131Bridge::SendDiscoveryPacket()+0x38>
 80090da:	2300      	movs	r3, #0
 80090dc:	f10d 020e 	add.w	r2, sp, #14
 80090e0:	4619      	mov	r1, r3
 80090e2:	f7ff fc69 	bl	80089b8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80090e6:	b128      	cbz	r0, 80090f4 <E131Bridge::SendDiscoveryPacket()+0x38>
 80090e8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80090ec:	69e2      	ldr	r2, [r4, #28]
 80090ee:	ba5b      	rev16	r3, r3
 80090f0:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 80090f4:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 80090f8:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 80090fc:	9300      	str	r3, [sp, #0]
 80090fe:	69e1      	ldr	r1, [r4, #28]
 8009100:	6a23      	ldr	r3, [r4, #32]
 8009102:	7820      	ldrb	r0, [r4, #0]
 8009104:	f003 fc1c 	bl	800c940 <udp_send>
 8009108:	b004      	add	sp, #16
 800910a:	bd10      	pop	{r4, pc}

0800910c <memcpy.isra.0>:
 800910c:	3801      	subs	r0, #1
 800910e:	440a      	add	r2, r1
 8009110:	4291      	cmp	r1, r2
 8009112:	d004      	beq.n	800911e <memcpy.isra.0+0x12>
 8009114:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009118:	f800 3f01 	strb.w	r3, [r0, #1]!
 800911c:	e7f8      	b.n	8009110 <memcpy.isra.0+0x4>
 800911e:	4770      	bx	lr

08009120 <E131Bridge::FillDataPacket()>:
 8009120:	b570      	push	{r4, r5, r6, lr}
 8009122:	2400      	movs	r4, #0
 8009124:	2610      	movs	r6, #16
 8009126:	4605      	mov	r5, r0
 8009128:	6980      	ldr	r0, [r0, #24]
 800912a:	220c      	movs	r2, #12
 800912c:	7046      	strb	r6, [r0, #1]
 800912e:	7004      	strb	r4, [r0, #0]
 8009130:	7084      	strb	r4, [r0, #2]
 8009132:	70c4      	strb	r4, [r0, #3]
 8009134:	491c      	ldr	r1, [pc, #112]	; (80091a8 <E131Bridge::FillDataPacket()+0x88>)
 8009136:	3004      	adds	r0, #4
 8009138:	f7ff ffe8 	bl	800910c <memcpy.isra.0>
 800913c:	2304      	movs	r3, #4
 800913e:	4632      	mov	r2, r6
 8009140:	2602      	movs	r6, #2
 8009142:	69a8      	ldr	r0, [r5, #24]
 8009144:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8009148:	7543      	strb	r3, [r0, #21]
 800914a:	7484      	strb	r4, [r0, #18]
 800914c:	74c4      	strb	r4, [r0, #19]
 800914e:	7504      	strb	r4, [r0, #20]
 8009150:	3016      	adds	r0, #22
 8009152:	f7ff ffdb 	bl	800910c <memcpy.isra.0>
 8009156:	69a8      	ldr	r0, [r5, #24]
 8009158:	2240      	movs	r2, #64	; 0x40
 800915a:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800915e:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 8009162:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 8009166:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800916a:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800916e:	302c      	adds	r0, #44	; 0x2c
 8009170:	f7ff ffcc 	bl	800910c <memcpy.isra.0>
 8009174:	22a1      	movs	r2, #161	; 0xa1
 8009176:	69ab      	ldr	r3, [r5, #24]
 8009178:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800917c:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 8009180:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 8009184:	69ab      	ldr	r3, [r5, #24]
 8009186:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800918a:	69ab      	ldr	r3, [r5, #24]
 800918c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8009190:	2201      	movs	r2, #1
 8009192:	69ab      	ldr	r3, [r5, #24]
 8009194:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 8009198:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800919c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 80091a0:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 80091a4:	bd70      	pop	{r4, r5, r6, pc}
 80091a6:	bf00      	nop
 80091a8:	08011fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}

080091ac <E131Bridge::HandleDmxIn()>:
 80091ac:	b530      	push	{r4, r5, lr}
 80091ae:	f890 3556 	ldrb.w	r3, [r0, #1366]	; 0x556
 80091b2:	4604      	mov	r4, r0
 80091b4:	b085      	sub	sp, #20
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	d051      	beq.n	800925e <E131Bridge::HandleDmxIn()+0xb2>
 80091ba:	6940      	ldr	r0, [r0, #20]
 80091bc:	2100      	movs	r1, #0
 80091be:	6803      	ldr	r3, [r0, #0]
 80091c0:	aa02      	add	r2, sp, #8
 80091c2:	691d      	ldr	r5, [r3, #16]
 80091c4:	ab03      	add	r3, sp, #12
 80091c6:	47a8      	blx	r5
 80091c8:	4601      	mov	r1, r0
 80091ca:	2800      	cmp	r0, #0
 80091cc:	d049      	beq.n	8009262 <E131Bridge::HandleDmxIn()+0xb6>
 80091ce:	9b02      	ldr	r3, [sp, #8]
 80091d0:	69a0      	ldr	r0, [r4, #24]
 80091d2:	b29b      	uxth	r3, r3
 80091d4:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 80091d8:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 80091dc:	ba52      	rev16	r2, r2
 80091de:	8202      	strh	r2, [r0, #16]
 80091e0:	f103 0257 	add.w	r2, r3, #87	; 0x57
 80091e4:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 80091e8:	ba52      	rev16	r2, r2
 80091ea:	84c2      	strh	r2, [r0, #38]	; 0x26
 80091ec:	f894 255d 	ldrb.w	r2, [r4, #1373]	; 0x55d
 80091f0:	330a      	adds	r3, #10
 80091f2:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 80091f6:	f894 255c 	ldrb.w	r2, [r4, #1372]	; 0x55c
 80091fa:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 80091fe:	1c50      	adds	r0, r2, #1
 8009200:	f884 055c 	strb.w	r0, [r4, #1372]	; 0x55c
 8009204:	69a0      	ldr	r0, [r4, #24]
 8009206:	ba5b      	rev16	r3, r3
 8009208:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800920c:	f8b4 2554 	ldrh.w	r2, [r4, #1364]	; 0x554
 8009210:	69a0      	ldr	r0, [r4, #24]
 8009212:	ba52      	rev16	r2, r2
 8009214:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 8009218:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800921c:	9a02      	ldr	r2, [sp, #8]
 800921e:	307d      	adds	r0, #125	; 0x7d
 8009220:	f7ff ff74 	bl	800910c <memcpy.isra.0>
 8009224:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8009228:	69a1      	ldr	r1, [r4, #24]
 800922a:	ba53      	rev16	r3, r2
 800922c:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 8009230:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 8009234:	327d      	adds	r2, #125	; 0x7d
 8009236:	9300      	str	r3, [sp, #0]
 8009238:	b292      	uxth	r2, r2
 800923a:	f8d4 3558 	ldr.w	r3, [r4, #1368]	; 0x558
 800923e:	7820      	ldrb	r0, [r4, #0]
 8009240:	f003 fb7e 	bl	800c940 <udp_send>
 8009244:	4a0e      	ldr	r2, [pc, #56]	; (8009280 <E131Bridge::HandleDmxIn()+0xd4>)
 8009246:	6813      	ldr	r3, [r2, #0]
 8009248:	07d9      	lsls	r1, r3, #31
 800924a:	d408      	bmi.n	800925e <E131Bridge::HandleDmxIn()+0xb2>
 800924c:	f043 0301 	orr.w	r3, r3, #1
 8009250:	6013      	str	r3, [r2, #0]
 8009252:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 8009256:	f043 0301 	orr.w	r3, r3, #1
 800925a:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800925e:	b005      	add	sp, #20
 8009260:	bd30      	pop	{r4, r5, pc}
 8009262:	9b03      	ldr	r3, [sp, #12]
 8009264:	2b00      	cmp	r3, #0
 8009266:	d1fa      	bne.n	800925e <E131Bridge::HandleDmxIn()+0xb2>
 8009268:	4a05      	ldr	r2, [pc, #20]	; (8009280 <E131Bridge::HandleDmxIn()+0xd4>)
 800926a:	6813      	ldr	r3, [r2, #0]
 800926c:	f023 0301 	bic.w	r3, r3, #1
 8009270:	6013      	str	r3, [r2, #0]
 8009272:	2b00      	cmp	r3, #0
 8009274:	d1f3      	bne.n	800925e <E131Bridge::HandleDmxIn()+0xb2>
 8009276:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800927a:	f023 0301 	bic.w	r3, r3, #1
 800927e:	e7ec      	b.n	800925a <E131Bridge::HandleDmxIn()+0xae>
 8009280:	20000708 	andcs	r0, r0, r8, lsl #14

08009284 <E131Bridge::HandleSynchronization()>:
 8009284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009288:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800928c:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009290:	ba5b      	rev16	r3, r3
 8009292:	b29b      	uxth	r3, r3
 8009294:	429a      	cmp	r2, r3
 8009296:	4604      	mov	r4, r0
 8009298:	d00a      	beq.n	80092b0 <E131Bridge::HandleSynchronization()+0x2c>
 800929a:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800929e:	429a      	cmp	r2, r3
 80092a0:	d006      	beq.n	80092b0 <E131Bridge::HandleSynchronization()+0x2c>
 80092a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80092a6:	4b1b      	ldr	r3, [pc, #108]	; (8009314 <E131Bridge::HandleSynchronization()+0x90>)
 80092a8:	2102      	movs	r1, #2
 80092aa:	6818      	ldr	r0, [r3, #0]
 80092ac:	f006 b95a 	b.w	800f564 <LedBlink::SetMode(ledblink::Mode)>
 80092b0:	68e3      	ldr	r3, [r4, #12]
 80092b2:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 80092b6:	f894 3512 	ldrb.w	r3, [r4, #1298]	; 0x512
 80092ba:	b30b      	cbz	r3, 8009300 <E131Bridge::HandleSynchronization()+0x7c>
 80092bc:	4d16      	ldr	r5, [pc, #88]	; (8009318 <E131Bridge::HandleSynchronization()+0x94>)
 80092be:	6860      	ldr	r0, [r4, #4]
 80092c0:	682b      	ldr	r3, [r5, #0]
 80092c2:	4e16      	ldr	r6, [pc, #88]	; (800931c <E131Bridge::HandleSynchronization()+0x98>)
 80092c4:	07da      	lsls	r2, r3, #31
 80092c6:	bf5c      	itt	pl
 80092c8:	2301      	movpl	r3, #1
 80092ca:	602b      	strpl	r3, [r5, #0]
 80092cc:	6803      	ldr	r3, [r0, #0]
 80092ce:	2100      	movs	r1, #0
 80092d0:	691f      	ldr	r7, [r3, #16]
 80092d2:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 80092d6:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 80092da:	47b8      	blx	r7
 80092dc:	f894 1552 	ldrb.w	r1, [r4, #1362]	; 0x552
 80092e0:	b931      	cbnz	r1, 80092f0 <E131Bridge::HandleSynchronization()+0x6c>
 80092e2:	6860      	ldr	r0, [r4, #4]
 80092e4:	6803      	ldr	r3, [r0, #0]
 80092e6:	689b      	ldr	r3, [r3, #8]
 80092e8:	4798      	blx	r3
 80092ea:	2301      	movs	r3, #1
 80092ec:	f884 3552 	strb.w	r3, [r4, #1362]	; 0x552
 80092f0:	682b      	ldr	r3, [r5, #0]
 80092f2:	07db      	lsls	r3, r3, #31
 80092f4:	bf5c      	itt	pl
 80092f6:	2301      	movpl	r3, #1
 80092f8:	602b      	strpl	r3, [r5, #0]
 80092fa:	2300      	movs	r3, #0
 80092fc:	f8c6 3600 	str.w	r3, [r6, #1536]	; 0x600
 8009300:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8009302:	b120      	cbz	r0, 800930e <E131Bridge::HandleSynchronization()+0x8a>
 8009304:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009308:	6803      	ldr	r3, [r0, #0]
 800930a:	689b      	ldr	r3, [r3, #8]
 800930c:	4718      	bx	r3
 800930e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009312:	bf00      	nop
 8009314:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 8009318:	200000fc 	strdcs	r0, [r0], -ip
 800931c:	20000100 	andcs	r0, r0, r0, lsl #2

08009320 <E131Bridge::Print()>:
 8009320:	b530      	push	{r4, r5, lr}
 8009322:	2500      	movs	r5, #0
 8009324:	4604      	mov	r4, r0
 8009326:	b08d      	sub	sp, #52	; 0x34
 8009328:	a902      	add	r1, sp, #8
 800932a:	3024      	adds	r0, #36	; 0x24
 800932c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009330:	f000 fafe 	bl	8009930 <uuid_unparse>
 8009334:	4822      	ldr	r0, [pc, #136]	; (80093c0 <E131Bridge::Print()+0xa0>)
 8009336:	f006 fcf3 	bl	800fd20 <printf>
 800933a:	4b22      	ldr	r3, [pc, #136]	; (80093c4 <E131Bridge::Print()+0xa4>)
 800933c:	4822      	ldr	r0, [pc, #136]	; (80093c8 <E131Bridge::Print()+0xa8>)
 800933e:	7819      	ldrb	r1, [r3, #0]
 8009340:	785a      	ldrb	r2, [r3, #1]
 8009342:	f006 fced 	bl	800fd20 <printf>
 8009346:	4821      	ldr	r0, [pc, #132]	; (80093cc <E131Bridge::Print()+0xac>)
 8009348:	a902      	add	r1, sp, #8
 800934a:	f006 fce9 	bl	800fd20 <printf>
 800934e:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 8009352:	b1bb      	cbz	r3, 8009384 <E131Bridge::Print()+0x64>
 8009354:	481e      	ldr	r0, [pc, #120]	; (80093d0 <E131Bridge::Print()+0xb0>)
 8009356:	f006 fce3 	bl	800fd20 <printf>
 800935a:	2301      	movs	r3, #1
 800935c:	4629      	mov	r1, r5
 800935e:	4620      	mov	r0, r4
 8009360:	f10d 0206 	add.w	r2, sp, #6
 8009364:	f7ff fb28 	bl	80089b8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8009368:	b160      	cbz	r0, 8009384 <E131Bridge::Print()+0x64>
 800936a:	f8d4 154c 	ldr.w	r1, [r4, #1356]	; 0x54c
 800936e:	4a19      	ldr	r2, [pc, #100]	; (80093d4 <E131Bridge::Print()+0xb4>)
 8009370:	4b19      	ldr	r3, [pc, #100]	; (80093d8 <E131Bridge::Print()+0xb8>)
 8009372:	481a      	ldr	r0, [pc, #104]	; (80093dc <E131Bridge::Print()+0xbc>)
 8009374:	42a9      	cmp	r1, r5
 8009376:	bf18      	it	ne
 8009378:	4613      	movne	r3, r2
 800937a:	4629      	mov	r1, r5
 800937c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009380:	f006 fcce 	bl	800fd20 <printf>
 8009384:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009388:	b193      	cbz	r3, 80093b0 <E131Bridge::Print()+0x90>
 800938a:	4815      	ldr	r0, [pc, #84]	; (80093e0 <E131Bridge::Print()+0xc0>)
 800938c:	f006 fcc8 	bl	800fd20 <printf>
 8009390:	2300      	movs	r3, #0
 8009392:	4620      	mov	r0, r4
 8009394:	4619      	mov	r1, r3
 8009396:	f10d 0206 	add.w	r2, sp, #6
 800939a:	f7ff fb0d 	bl	80089b8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800939e:	b138      	cbz	r0, 80093b0 <E131Bridge::Print()+0x90>
 80093a0:	2100      	movs	r1, #0
 80093a2:	f894 355d 	ldrb.w	r3, [r4, #1373]	; 0x55d
 80093a6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80093aa:	480e      	ldr	r0, [pc, #56]	; (80093e4 <E131Bridge::Print()+0xc4>)
 80093ac:	f006 fcb8 	bl	800fd20 <printf>
 80093b0:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 80093b4:	b113      	cbz	r3, 80093bc <E131Bridge::Print()+0x9c>
 80093b6:	480c      	ldr	r0, [pc, #48]	; (80093e8 <E131Bridge::Print()+0xc8>)
 80093b8:	f006 fcb2 	bl	800fd20 <printf>
 80093bc:	b00d      	add	sp, #52	; 0x34
 80093be:	bd30      	pop	{r4, r5, pc}
 80093c0:	08011e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, ip}
 80093c4:	0801200b 	stmdaeq	r1, {r0, r1, r3, sp}
 80093c8:	08011e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip}
 80093cc:	08011e6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, fp, ip}
 80093d0:	08011e7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip}
 80093d4:	08011e4c 	stmdaeq	r1, {r2, r3, r6, r9, sl, fp, ip}
 80093d8:	08011e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, ip}
 80093dc:	08011e84 	stmdaeq	r1, {r2, r7, r9, sl, fp, ip}
 80093e0:	08011ea3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, fp, ip}
 80093e4:	08011eab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl, fp, ip}
 80093e8:	08011eca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, fp, ip}

080093ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 80093ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80093ee:	88c5      	ldrh	r5, [r0, #6]
 80093f0:	8886      	ldrh	r6, [r0, #4]
 80093f2:	42b5      	cmp	r5, r6
 80093f4:	d216      	bcs.n	8009424 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 80093f6:	4604      	mov	r4, r0
 80093f8:	6800      	ldr	r0, [r0, #0]
 80093fa:	4428      	add	r0, r5
 80093fc:	1b75      	subs	r5, r6, r5
 80093fe:	7a26      	ldrb	r6, [r4, #8]
 8009400:	b923      	cbnz	r3, 800940c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 8009402:	b926      	cbnz	r6, 800940e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 8009404:	9200      	str	r2, [sp, #0]
 8009406:	460b      	mov	r3, r1
 8009408:	4a09      	ldr	r2, [pc, #36]	; (8009430 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800940a:	e003      	b.n	8009414 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800940c:	b166      	cbz	r6, 8009428 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800940e:	460b      	mov	r3, r1
 8009410:	9200      	str	r2, [sp, #0]
 8009412:	4a08      	ldr	r2, [pc, #32]	; (8009434 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009414:	4629      	mov	r1, r5
 8009416:	f006 fcab 	bl	800fd70 <snprintf>
 800941a:	4285      	cmp	r5, r0
 800941c:	bfa2      	ittt	ge
 800941e:	88e3      	ldrhge	r3, [r4, #6]
 8009420:	181b      	addge	r3, r3, r0
 8009422:	80e3      	strhge	r3, [r4, #6]
 8009424:	b002      	add	sp, #8
 8009426:	bd70      	pop	{r4, r5, r6, pc}
 8009428:	9200      	str	r2, [sp, #0]
 800942a:	460b      	mov	r3, r1
 800942c:	4a02      	ldr	r2, [pc, #8]	; (8009438 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800942e:	e7f1      	b.n	8009414 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8009430:	08011f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip}
 8009434:	08011f22 	stmdaeq	r1, {r1, r5, r8, r9, sl, fp, ip}
 8009438:	08011f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, ip}

0800943c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800943c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800943e:	460b      	mov	r3, r1
 8009440:	8885      	ldrh	r5, [r0, #4]
 8009442:	88c1      	ldrh	r1, [r0, #6]
 8009444:	42a9      	cmp	r1, r5
 8009446:	d214      	bcs.n	8009472 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009448:	4604      	mov	r4, r0
 800944a:	6800      	ldr	r0, [r0, #0]
 800944c:	1a6d      	subs	r5, r5, r1
 800944e:	4408      	add	r0, r1
 8009450:	7a21      	ldrb	r1, [r4, #8]
 8009452:	b91a      	cbnz	r2, 800945c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009454:	b919      	cbnz	r1, 800945e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009456:	4a0a      	ldr	r2, [pc, #40]	; (8009480 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009458:	9100      	str	r1, [sp, #0]
 800945a:	e002      	b.n	8009462 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800945c:	b159      	cbz	r1, 8009476 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800945e:	9200      	str	r2, [sp, #0]
 8009460:	4a08      	ldr	r2, [pc, #32]	; (8009484 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009462:	4629      	mov	r1, r5
 8009464:	f006 fc84 	bl	800fd70 <snprintf>
 8009468:	4285      	cmp	r5, r0
 800946a:	bfa2      	ittt	ge
 800946c:	88e3      	ldrhge	r3, [r4, #6]
 800946e:	181b      	addge	r3, r3, r0
 8009470:	80e3      	strhge	r3, [r4, #6]
 8009472:	b003      	add	sp, #12
 8009474:	bd30      	pop	{r4, r5, pc}
 8009476:	2201      	movs	r2, #1
 8009478:	9200      	str	r2, [sp, #0]
 800947a:	4a03      	ldr	r2, [pc, #12]	; (8009488 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800947c:	e7f1      	b.n	8009462 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800947e:	bf00      	nop
 8009480:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8009484:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 8009488:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

0800948c <E131Params::E131Params(E131ParamsStore*)>:
 800948c:	b510      	push	{r4, lr}
 800948e:	221a      	movs	r2, #26
 8009490:	4604      	mov	r4, r0
 8009492:	f840 1b04 	str.w	r1, [r0], #4
 8009496:	2100      	movs	r1, #0
 8009498:	f006 fa20 	bl	800f8dc <memset>
 800949c:	2300      	movs	r3, #0
 800949e:	2201      	movs	r2, #1
 80094a0:	7323      	strb	r3, [r4, #12]
 80094a2:	72e2      	strb	r2, [r4, #11]
 80094a4:	73a3      	strb	r3, [r4, #14]
 80094a6:	2202      	movs	r2, #2
 80094a8:	7423      	strb	r3, [r4, #16]
 80094aa:	74a3      	strb	r3, [r4, #18]
 80094ac:	f246 43ff 	movw	r3, #25855	; 0x64ff
 80094b0:	7362      	strb	r2, [r4, #13]
 80094b2:	83e3      	strh	r3, [r4, #30]
 80094b4:	2203      	movs	r2, #3
 80094b6:	f246 4364 	movw	r3, #25700	; 0x6464
 80094ba:	73e2      	strb	r2, [r4, #15]
 80094bc:	8423      	strh	r3, [r4, #32]
 80094be:	2204      	movs	r2, #4
 80094c0:	2364      	movs	r3, #100	; 0x64
 80094c2:	4620      	mov	r0, r4
 80094c4:	7462      	strb	r2, [r4, #17]
 80094c6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80094ca:	bd10      	pop	{r4, pc}

080094cc <E131Params::Load()>:
 80094cc:	b508      	push	{r3, lr}
 80094ce:	2300      	movs	r3, #0
 80094d0:	4601      	mov	r1, r0
 80094d2:	6043      	str	r3, [r0, #4]
 80094d4:	6800      	ldr	r0, [r0, #0]
 80094d6:	b120      	cbz	r0, 80094e2 <E131Params::Load()+0x16>
 80094d8:	6803      	ldr	r3, [r0, #0]
 80094da:	3104      	adds	r1, #4
 80094dc:	68db      	ldr	r3, [r3, #12]
 80094de:	4798      	blx	r3
 80094e0:	2001      	movs	r0, #1
 80094e2:	bd08      	pop	{r3, pc}

080094e4 <E131Params::Load(char const*, unsigned int)>:
 80094e4:	6803      	ldr	r3, [r0, #0]
 80094e6:	b1d3      	cbz	r3, 800951e <E131Params::Load(char const*, unsigned int)+0x3a>
 80094e8:	2300      	movs	r3, #0
 80094ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80094ec:	460d      	mov	r5, r1
 80094ee:	4616      	mov	r6, r2
 80094f0:	4604      	mov	r4, r0
 80094f2:	6043      	str	r3, [r0, #4]
 80094f4:	4602      	mov	r2, r0
 80094f6:	490a      	ldr	r1, [pc, #40]	; (8009520 <E131Params::Load(char const*, unsigned int)+0x3c>)
 80094f8:	4668      	mov	r0, sp
 80094fa:	f005 fbe3 	bl	800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80094fe:	4632      	mov	r2, r6
 8009500:	4629      	mov	r1, r5
 8009502:	4668      	mov	r0, sp
 8009504:	f005 fbe2 	bl	800eccc <ReadConfigFile::Read(char const*, unsigned int)>
 8009508:	4621      	mov	r1, r4
 800950a:	f851 0b04 	ldr.w	r0, [r1], #4
 800950e:	6803      	ldr	r3, [r0, #0]
 8009510:	689b      	ldr	r3, [r3, #8]
 8009512:	4798      	blx	r3
 8009514:	4668      	mov	r0, sp
 8009516:	f005 fbd8 	bl	800ecca <ReadConfigFile::~ReadConfigFile()>
 800951a:	b002      	add	sp, #8
 800951c:	bd70      	pop	{r4, r5, r6, pc}
 800951e:	4770      	bx	lr
 8009520:	080096a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, ip, pc}

08009524 <E131Params::callbackFunction(char const*)>:
 8009524:	b530      	push	{r4, r5, lr}
 8009526:	460d      	mov	r5, r1
 8009528:	b087      	sub	sp, #28
 800952a:	4604      	mov	r4, r0
 800952c:	4956      	ldr	r1, [pc, #344]	; (8009688 <E131Params::callbackFunction(char const*)+0x164>)
 800952e:	4628      	mov	r0, r5
 8009530:	f10d 0202 	add.w	r2, sp, #2
 8009534:	f005 fc57 	bl	800ede6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009538:	b9a0      	cbnz	r0, 8009564 <E131Params::callbackFunction(char const*)+0x40>
 800953a:	f64f 15fe 	movw	r5, #63998	; 0xf9fe
 800953e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8009542:	6863      	ldr	r3, [r4, #4]
 8009544:	1e4a      	subs	r2, r1, #1
 8009546:	b292      	uxth	r2, r2
 8009548:	42aa      	cmp	r2, r5
 800954a:	bf81      	itttt	hi
 800954c:	2201      	movhi	r2, #1
 800954e:	7320      	strbhi	r0, [r4, #12]
 8009550:	72e2      	strbhi	r2, [r4, #11]
 8009552:	f023 0310 	bichi.w	r3, r3, #16
 8009556:	bf9c      	itt	ls
 8009558:	f8a4 100b 	strhls.w	r1, [r4, #11]
 800955c:	f043 0310 	orrls.w	r3, r3, #16
 8009560:	6063      	str	r3, [r4, #4]
 8009562:	e053      	b.n	800960c <E131Params::callbackFunction(char const*)+0xe8>
 8009564:	2303      	movs	r3, #3
 8009566:	4628      	mov	r0, r5
 8009568:	9301      	str	r3, [sp, #4]
 800956a:	4948      	ldr	r1, [pc, #288]	; (800968c <E131Params::callbackFunction(char const*)+0x168>)
 800956c:	ab01      	add	r3, sp, #4
 800956e:	aa02      	add	r2, sp, #8
 8009570:	f005 fbe0 	bl	800ed34 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009574:	b9e0      	cbnz	r0, 80095b0 <E131Params::callbackFunction(char const*)+0x8c>
 8009576:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800957a:	6863      	ldr	r3, [r4, #4]
 800957c:	f042 0220 	orr.w	r2, r2, #32
 8009580:	2a6c      	cmp	r2, #108	; 0x6c
 8009582:	d110      	bne.n	80095a6 <E131Params::callbackFunction(char const*)+0x82>
 8009584:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8009588:	f042 0220 	orr.w	r2, r2, #32
 800958c:	2a74      	cmp	r2, #116	; 0x74
 800958e:	d10a      	bne.n	80095a6 <E131Params::callbackFunction(char const*)+0x82>
 8009590:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8009594:	f042 0220 	orr.w	r2, r2, #32
 8009598:	2a70      	cmp	r2, #112	; 0x70
 800959a:	d104      	bne.n	80095a6 <E131Params::callbackFunction(char const*)+0x82>
 800959c:	2201      	movs	r2, #1
 800959e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80095a2:	7522      	strb	r2, [r4, #20]
 80095a4:	e7dc      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 80095a6:	2200      	movs	r2, #0
 80095a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80095ac:	7522      	strb	r2, [r4, #20]
 80095ae:	e7d7      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 80095b0:	2305      	movs	r3, #5
 80095b2:	4628      	mov	r0, r5
 80095b4:	9301      	str	r3, [sp, #4]
 80095b6:	4936      	ldr	r1, [pc, #216]	; (8009690 <E131Params::callbackFunction(char const*)+0x16c>)
 80095b8:	ab01      	add	r3, sp, #4
 80095ba:	aa02      	add	r2, sp, #8
 80095bc:	f005 fbba 	bl	800ed34 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80095c0:	bb30      	cbnz	r0, 8009610 <E131Params::callbackFunction(char const*)+0xec>
 80095c2:	f89d 2008 	ldrb.w	r2, [sp, #8]
 80095c6:	7fa3      	ldrb	r3, [r4, #30]
 80095c8:	f042 0220 	orr.w	r2, r2, #32
 80095cc:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 80095d0:	2a69      	cmp	r2, #105	; 0x69
 80095d2:	77a3      	strb	r3, [r4, #30]
 80095d4:	d117      	bne.n	8009606 <E131Params::callbackFunction(char const*)+0xe2>
 80095d6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 80095da:	f042 0220 	orr.w	r2, r2, #32
 80095de:	2a6e      	cmp	r2, #110	; 0x6e
 80095e0:	d111      	bne.n	8009606 <E131Params::callbackFunction(char const*)+0xe2>
 80095e2:	f89d 200a 	ldrb.w	r2, [sp, #10]
 80095e6:	f042 0220 	orr.w	r2, r2, #32
 80095ea:	2a70      	cmp	r2, #112	; 0x70
 80095ec:	d10b      	bne.n	8009606 <E131Params::callbackFunction(char const*)+0xe2>
 80095ee:	f89d 200b 	ldrb.w	r2, [sp, #11]
 80095f2:	f042 0220 	orr.w	r2, r2, #32
 80095f6:	2a75      	cmp	r2, #117	; 0x75
 80095f8:	d105      	bne.n	8009606 <E131Params::callbackFunction(char const*)+0xe2>
 80095fa:	f89d 200c 	ldrb.w	r2, [sp, #12]
 80095fe:	f042 0220 	orr.w	r2, r2, #32
 8009602:	2a74      	cmp	r2, #116	; 0x74
 8009604:	d002      	beq.n	800960c <E131Params::callbackFunction(char const*)+0xe8>
 8009606:	f043 0301 	orr.w	r3, r3, #1
 800960a:	77a3      	strb	r3, [r4, #30]
 800960c:	b007      	add	sp, #28
 800960e:	bd30      	pop	{r4, r5, pc}
 8009610:	4628      	mov	r0, r5
 8009612:	4920      	ldr	r1, [pc, #128]	; (8009694 <E131Params::callbackFunction(char const*)+0x170>)
 8009614:	f10d 0201 	add.w	r2, sp, #1
 8009618:	f005 fc03 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800961c:	b1a8      	cbz	r0, 800964a <E131Params::callbackFunction(char const*)+0x126>
 800961e:	4628      	mov	r0, r5
 8009620:	491d      	ldr	r1, [pc, #116]	; (8009698 <E131Params::callbackFunction(char const*)+0x174>)
 8009622:	f10d 0201 	add.w	r2, sp, #1
 8009626:	f005 fbfc 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800962a:	b300      	cbz	r0, 800966e <E131Params::callbackFunction(char const*)+0x14a>
 800962c:	4628      	mov	r0, r5
 800962e:	491b      	ldr	r1, [pc, #108]	; (800969c <E131Params::callbackFunction(char const*)+0x178>)
 8009630:	f10d 0201 	add.w	r2, sp, #1
 8009634:	f005 fbf5 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009638:	2800      	cmp	r0, #0
 800963a:	d1e7      	bne.n	800960c <E131Params::callbackFunction(char const*)+0xe8>
 800963c:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8009640:	6863      	ldr	r3, [r4, #4]
 8009642:	b1f2      	cbz	r2, 8009682 <E131Params::callbackFunction(char const*)+0x15e>
 8009644:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8009648:	e78a      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 800964a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800964e:	6863      	ldr	r3, [r4, #4]
 8009650:	1e51      	subs	r1, r2, #1
 8009652:	b2c9      	uxtb	r1, r1
 8009654:	29c7      	cmp	r1, #199	; 0xc7
 8009656:	d805      	bhi.n	8009664 <E131Params::callbackFunction(char const*)+0x140>
 8009658:	2a64      	cmp	r2, #100	; 0x64
 800965a:	d003      	beq.n	8009664 <E131Params::callbackFunction(char const*)+0x140>
 800965c:	77e2      	strb	r2, [r4, #31]
 800965e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009662:	e77d      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 8009664:	2264      	movs	r2, #100	; 0x64
 8009666:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800966a:	77e2      	strb	r2, [r4, #31]
 800966c:	e778      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 800966e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8009672:	6863      	ldr	r3, [r4, #4]
 8009674:	b112      	cbz	r2, 800967c <E131Params::callbackFunction(char const*)+0x158>
 8009676:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800967a:	e771      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 800967c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8009680:	e76e      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 8009682:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8009686:	e76b      	b.n	8009560 <E131Params::callbackFunction(char const*)+0x3c>
 8009688:	08013654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip, sp}
 800968c:	08013694 	stmdaeq	r1, {r2, r4, r7, r9, sl, ip, sp}
 8009690:	080136f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, sp}
 8009694:	08011fae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, fp, ip}
 8009698:	08011f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
 800969c:	08011f76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}

080096a0 <E131Params::staticCallbackFunction(void*, char const*)>:
 80096a0:	f7ff bf40 	b.w	8009524 <E131Params::callbackFunction(char const*)>

080096a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 80096a4:	b570      	push	{r4, r5, r6, lr}
 80096a6:	4604      	mov	r4, r0
 80096a8:	4615      	mov	r5, r2
 80096aa:	461e      	mov	r6, r3
 80096ac:	b086      	sub	sp, #24
 80096ae:	3004      	adds	r0, #4
 80096b0:	b361      	cbz	r1, 800970c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x68>
 80096b2:	221f      	movs	r2, #31
 80096b4:	f006 f8fb 	bl	800f8ae <memmove>
 80096b8:	462a      	mov	r2, r5
 80096ba:	4633      	mov	r3, r6
 80096bc:	4954      	ldr	r1, [pc, #336]	; (8009810 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16c>)
 80096be:	a803      	add	r0, sp, #12
 80096c0:	f005 fa60 	bl	800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80096c4:	7fa3      	ldrb	r3, [r4, #30]
 80096c6:	4953      	ldr	r1, [pc, #332]	; (8009814 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>)
 80096c8:	f013 0f01 	tst.w	r3, #1
 80096cc:	ea6f 0303 	mvn.w	r3, r3
 80096d0:	4a51      	ldr	r2, [pc, #324]	; (8009818 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x174>)
 80096d2:	f003 0301 	and.w	r3, r3, #1
 80096d6:	bf08      	it	eq
 80096d8:	460a      	moveq	r2, r1
 80096da:	a803      	add	r0, sp, #12
 80096dc:	494f      	ldr	r1, [pc, #316]	; (800981c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x178>)
 80096de:	f7ff fe85 	bl	80093ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 80096e2:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 80096e6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80096ea:	42a9      	cmp	r1, r5
 80096ec:	d224      	bcs.n	8009738 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x94>
 80096ee:	9803      	ldr	r0, [sp, #12]
 80096f0:	1a6d      	subs	r5, r5, r1
 80096f2:	4408      	add	r0, r1
 80096f4:	6861      	ldr	r1, [r4, #4]
 80096f6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80096fa:	06ce      	lsls	r6, r1, #27
 80096fc:	f8b4 300b 	ldrh.w	r3, [r4, #11]
 8009700:	d40b      	bmi.n	800971a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x76>
 8009702:	b962      	cbnz	r2, 800971e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x7a>
 8009704:	9300      	str	r3, [sp, #0]
 8009706:	4a46      	ldr	r2, [pc, #280]	; (8009820 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>)
 8009708:	4b46      	ldr	r3, [pc, #280]	; (8009824 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 800970a:	e00b      	b.n	8009724 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x80>
 800970c:	6823      	ldr	r3, [r4, #0]
 800970e:	4601      	mov	r1, r0
 8009710:	681a      	ldr	r2, [r3, #0]
 8009712:	4618      	mov	r0, r3
 8009714:	68d2      	ldr	r2, [r2, #12]
 8009716:	4790      	blx	r2
 8009718:	e7ce      	b.n	80096b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800971a:	2a00      	cmp	r2, #0
 800971c:	d035      	beq.n	800978a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe6>
 800971e:	9300      	str	r3, [sp, #0]
 8009720:	4a41      	ldr	r2, [pc, #260]	; (8009828 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 8009722:	4b40      	ldr	r3, [pc, #256]	; (8009824 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 8009724:	4629      	mov	r1, r5
 8009726:	f006 fb23 	bl	800fd70 <snprintf>
 800972a:	4285      	cmp	r5, r0
 800972c:	bfa2      	ittt	ge
 800972e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009732:	18c0      	addge	r0, r0, r3
 8009734:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009738:	493c      	ldr	r1, [pc, #240]	; (800982c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x188>)
 800973a:	a803      	add	r0, sp, #12
 800973c:	f005 faa8 	bl	800ec90 <PropertiesBuilder::AddComment(char const*)>
 8009740:	7d20      	ldrb	r0, [r4, #20]
 8009742:	6863      	ldr	r3, [r4, #4]
 8009744:	493a      	ldr	r1, [pc, #232]	; (8009830 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18c>)
 8009746:	4a3b      	ldr	r2, [pc, #236]	; (8009834 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x190>)
 8009748:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800974c:	2800      	cmp	r0, #0
 800974e:	bf18      	it	ne
 8009750:	460a      	movne	r2, r1
 8009752:	4939      	ldr	r1, [pc, #228]	; (8009838 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x194>)
 8009754:	a803      	add	r0, sp, #12
 8009756:	f7ff fe49 	bl	80093ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800975a:	4938      	ldr	r1, [pc, #224]	; (800983c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x198>)
 800975c:	a803      	add	r0, sp, #12
 800975e:	f005 fa97 	bl	800ec90 <PropertiesBuilder::AddComment(char const*)>
 8009762:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009766:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800976a:	42a9      	cmp	r1, r5
 800976c:	d220      	bcs.n	80097b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x10c>
 800976e:	9803      	ldr	r0, [sp, #12]
 8009770:	1a6d      	subs	r5, r5, r1
 8009772:	4408      	add	r0, r1
 8009774:	6861      	ldr	r1, [r4, #4]
 8009776:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800977a:	03c9      	lsls	r1, r1, #15
 800977c:	7fe3      	ldrb	r3, [r4, #31]
 800977e:	d408      	bmi.n	8009792 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xee>
 8009780:	b94a      	cbnz	r2, 8009796 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 8009782:	9300      	str	r3, [sp, #0]
 8009784:	4a26      	ldr	r2, [pc, #152]	; (8009820 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>)
 8009786:	4b2e      	ldr	r3, [pc, #184]	; (8009840 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 8009788:	e008      	b.n	800979c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800978a:	9300      	str	r3, [sp, #0]
 800978c:	4a2d      	ldr	r2, [pc, #180]	; (8009844 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 800978e:	4b25      	ldr	r3, [pc, #148]	; (8009824 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>)
 8009790:	e7c8      	b.n	8009724 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x80>
 8009792:	2a00      	cmp	r2, #0
 8009794:	d037      	beq.n	8009806 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x162>
 8009796:	9300      	str	r3, [sp, #0]
 8009798:	4a23      	ldr	r2, [pc, #140]	; (8009828 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x184>)
 800979a:	4b29      	ldr	r3, [pc, #164]	; (8009840 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 800979c:	4629      	mov	r1, r5
 800979e:	f006 fae7 	bl	800fd70 <snprintf>
 80097a2:	4285      	cmp	r5, r0
 80097a4:	bfa2      	ittt	ge
 80097a6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80097aa:	18c0      	addge	r0, r0, r3
 80097ac:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80097b0:	4925      	ldr	r1, [pc, #148]	; (8009848 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a4>)
 80097b2:	a803      	add	r0, sp, #12
 80097b4:	f005 fa6c 	bl	800ec90 <PropertiesBuilder::AddComment(char const*)>
 80097b8:	6862      	ldr	r2, [r4, #4]
 80097ba:	4924      	ldr	r1, [pc, #144]	; (800984c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a8>)
 80097bc:	f3c2 3200 	ubfx	r2, r2, #12, #1
 80097c0:	a803      	add	r0, sp, #12
 80097c2:	f7ff fe3b 	bl	800943c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80097c6:	6862      	ldr	r2, [r4, #4]
 80097c8:	4921      	ldr	r1, [pc, #132]	; (8009850 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ac>)
 80097ca:	f3c2 3240 	ubfx	r2, r2, #13, #1
 80097ce:	a803      	add	r0, sp, #12
 80097d0:	f7ff fe34 	bl	800943c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80097d4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80097d8:	b17b      	cbz	r3, 80097fa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x156>
 80097da:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80097de:	9b03      	ldr	r3, [sp, #12]
 80097e0:	4413      	add	r3, r2
 80097e2:	227d      	movs	r2, #125	; 0x7d
 80097e4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80097e8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80097ec:	9903      	ldr	r1, [sp, #12]
 80097ee:	54ca      	strb	r2, [r1, r3]
 80097f0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80097f4:	3301      	adds	r3, #1
 80097f6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80097fa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80097fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009800:	601a      	str	r2, [r3, #0]
 8009802:	b006      	add	sp, #24
 8009804:	bd70      	pop	{r4, r5, r6, pc}
 8009806:	9300      	str	r3, [sp, #0]
 8009808:	4a0e      	ldr	r2, [pc, #56]	; (8009844 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1a0>)
 800980a:	4b0d      	ldr	r3, [pc, #52]	; (8009840 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19c>)
 800980c:	e7c6      	b.n	800979c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800980e:	bf00      	nop
 8009810:	08011ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009814:	08011f46 	stmdaeq	r1, {r1, r2, r6, r8, r9, sl, fp, ip}
 8009818:	08011f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp, ip}
 800981c:	080136f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, sp}
 8009820:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8009824:	08013654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip, sp}
 8009828:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 800982c:	08011f5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, fp, ip}
 8009830:	08011f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip}
 8009834:	08011f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, ip}
 8009838:	08013694 	stmdaeq	r1, {r2, r4, r7, r9, sl, ip, sp}
 800983c:	08011f66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sl, fp, ip}
 8009840:	08011fae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, fp, ip}
 8009844:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8009848:	08011f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, ip}
 800984c:	08011f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
 8009850:	08011f76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}

08009854 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 8009854:	b513      	push	{r0, r1, r4, lr}
 8009856:	6804      	ldr	r4, [r0, #0]
 8009858:	b914      	cbnz	r4, 8009860 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800985a:	601c      	str	r4, [r3, #0]
 800985c:	b002      	add	sp, #8
 800985e:	bd10      	pop	{r4, pc}
 8009860:	9300      	str	r3, [sp, #0]
 8009862:	4613      	mov	r3, r2
 8009864:	460a      	mov	r2, r1
 8009866:	2100      	movs	r1, #0
 8009868:	f7ff ff1c 	bl	80096a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800986c:	e7f6      	b.n	800985c <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800986e <E131Params::Set(E131Bridge*)>:
 800986e:	6843      	ldr	r3, [r0, #4]
 8009870:	b1c3      	cbz	r3, 80098a4 <E131Params::Set(E131Bridge*)+0x36>
 8009872:	05da      	lsls	r2, r3, #23
 8009874:	bf44      	itt	mi
 8009876:	7d02      	ldrbmi	r2, [r0, #20]
 8009878:	f8c1 254c 	strmi.w	r2, [r1, #1356]	; 0x54c
 800987c:	03db      	lsls	r3, r3, #15
 800987e:	d506      	bpl.n	800988e <E131Params::Set(E131Bridge*)+0x20>
 8009880:	7fc2      	ldrb	r2, [r0, #31]
 8009882:	1e53      	subs	r3, r2, #1
 8009884:	b2db      	uxtb	r3, r3
 8009886:	2bc7      	cmp	r3, #199	; 0xc7
 8009888:	bf98      	it	ls
 800988a:	f881 255d 	strbls.w	r2, [r1, #1373]	; 0x55d
 800988e:	6843      	ldr	r3, [r0, #4]
 8009890:	04da      	lsls	r2, r3, #19
 8009892:	bf44      	itt	mi
 8009894:	2201      	movmi	r2, #1
 8009896:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800989a:	049b      	lsls	r3, r3, #18
 800989c:	bf44      	itt	mi
 800989e:	2301      	movmi	r3, #1
 80098a0:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 80098a4:	4770      	bx	lr

080098a6 <E131Params::Dump()>:
 80098a6:	4770      	bx	lr

080098a8 <uuid_unparse_x>:
 80098a8:	4603      	mov	r3, r0
 80098aa:	b530      	push	{r4, r5, lr}
 80098ac:	4608      	mov	r0, r1
 80098ae:	4611      	mov	r1, r2
 80098b0:	681a      	ldr	r2, [r3, #0]
 80098b2:	b08f      	sub	sp, #60	; 0x3c
 80098b4:	ba12      	rev	r2, r2
 80098b6:	920a      	str	r2, [sp, #40]	; 0x28
 80098b8:	889a      	ldrh	r2, [r3, #4]
 80098ba:	891c      	ldrh	r4, [r3, #8]
 80098bc:	ba52      	rev16	r2, r2
 80098be:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80098c2:	88da      	ldrh	r2, [r3, #6]
 80098c4:	ba64      	rev16	r4, r4
 80098c6:	ba52      	rev16	r2, r2
 80098c8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80098cc:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 80098d0:	f103 020a 	add.w	r2, r3, #10
 80098d4:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 80098d8:	3310      	adds	r3, #16
 80098da:	4293      	cmp	r3, r2
 80098dc:	d122      	bne.n	8009924 <uuid_unparse_x+0x7c>
 80098de:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 80098e2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80098e6:	9208      	str	r2, [sp, #32]
 80098e8:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 80098ec:	0a1b      	lsrs	r3, r3, #8
 80098ee:	9207      	str	r2, [sp, #28]
 80098f0:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 80098f4:	9301      	str	r3, [sp, #4]
 80098f6:	9206      	str	r2, [sp, #24]
 80098f8:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 80098fc:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8009900:	9205      	str	r2, [sp, #20]
 8009902:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 8009906:	9300      	str	r3, [sp, #0]
 8009908:	9204      	str	r2, [sp, #16]
 800990a:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800990e:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8009912:	9203      	str	r2, [sp, #12]
 8009914:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 8009918:	9202      	str	r2, [sp, #8]
 800991a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800991c:	f006 fa10 	bl	800fd40 <sprintf>
 8009920:	b00f      	add	sp, #60	; 0x3c
 8009922:	bd30      	pop	{r4, r5, pc}
 8009924:	f812 5b01 	ldrb.w	r5, [r2], #1
 8009928:	f804 5b01 	strb.w	r5, [r4], #1
 800992c:	e7d5      	b.n	80098da <uuid_unparse_x+0x32>
	...

08009930 <uuid_unparse>:
 8009930:	4a01      	ldr	r2, [pc, #4]	; (8009938 <uuid_unparse+0x8>)
 8009932:	f7ff bfb9 	b.w	80098a8 <uuid_unparse_x>
 8009936:	bf00      	nop
 8009938:	0801200d 	stmdaeq	r1, {r0, r2, r3, sp}

0800993c <LightSet::Blackout(bool)>:
 800993c:	4770      	bx	lr

0800993e <DmxSend::~DmxSend()>:
 800993e:	4770      	bx	lr

08009940 <DmxSend::Start(unsigned int)>:
 8009940:	2301      	movs	r3, #1
 8009942:	b410      	push	{r4}
 8009944:	4c08      	ldr	r4, [pc, #32]	; (8009968 <DmxSend::Start(unsigned int)+0x28>)
 8009946:	fa03 f001 	lsl.w	r0, r3, r1
 800994a:	7822      	ldrb	r2, [r4, #0]
 800994c:	ea30 0c02 	bics.w	ip, r0, r2
 8009950:	d007      	beq.n	8009962 <DmxSend::Start(unsigned int)+0x22>
 8009952:	4302      	orrs	r2, r0
 8009954:	4805      	ldr	r0, [pc, #20]	; (800996c <DmxSend::Start(unsigned int)+0x2c>)
 8009956:	7022      	strb	r2, [r4, #0]
 8009958:	6800      	ldr	r0, [r0, #0]
 800995a:	2200      	movs	r2, #0
 800995c:	bc10      	pop	{r4}
 800995e:	f000 bc65 	b.w	800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8009962:	bc10      	pop	{r4}
 8009964:	4770      	bx	lr
 8009966:	bf00      	nop
 8009968:	2000070c 	andcs	r0, r0, ip, lsl #14
 800996c:	20000b4c 	andcs	r0, r0, ip, asr #22

08009970 <DmxSend::Stop(unsigned int)>:
 8009970:	2201      	movs	r2, #1
 8009972:	b410      	push	{r4}
 8009974:	4809      	ldr	r0, [pc, #36]	; (800999c <DmxSend::Stop(unsigned int)+0x2c>)
 8009976:	408a      	lsls	r2, r1
 8009978:	7803      	ldrb	r3, [r0, #0]
 800997a:	ea03 0402 	and.w	r4, r3, r2
 800997e:	439a      	bics	r2, r3
 8009980:	d109      	bne.n	8009996 <DmxSend::Stop(unsigned int)+0x26>
 8009982:	ea23 0304 	bic.w	r3, r3, r4
 8009986:	7003      	strb	r3, [r0, #0]
 8009988:	2300      	movs	r3, #0
 800998a:	4805      	ldr	r0, [pc, #20]	; (80099a0 <DmxSend::Stop(unsigned int)+0x30>)
 800998c:	461a      	mov	r2, r3
 800998e:	6800      	ldr	r0, [r0, #0]
 8009990:	bc10      	pop	{r4}
 8009992:	f000 bc4b 	b.w	800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8009996:	bc10      	pop	{r4}
 8009998:	4770      	bx	lr
 800999a:	bf00      	nop
 800999c:	2000070c 	andcs	r0, r0, ip, lsl #14
 80099a0:	20000b4c 	andcs	r0, r0, ip, asr #22

080099a4 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 80099a4:	b11b      	cbz	r3, 80099ae <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 80099a6:	4802      	ldr	r0, [pc, #8]	; (80099b0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 80099a8:	6800      	ldr	r0, [r0, #0]
 80099aa:	f000 bd9f 	b.w	800a4ec <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 80099ae:	4770      	bx	lr
 80099b0:	20000b4c 	andcs	r0, r0, ip, asr #22

080099b4 <DmxSend::Print()>:
 80099b4:	b510      	push	{r4, lr}
 80099b6:	4c0e      	ldr	r4, [pc, #56]	; (80099f0 <DmxSend::Print()+0x3c>)
 80099b8:	480e      	ldr	r0, [pc, #56]	; (80099f4 <DmxSend::Print()+0x40>)
 80099ba:	f006 f9b1 	bl	800fd20 <printf>
 80099be:	6823      	ldr	r3, [r4, #0]
 80099c0:	480d      	ldr	r0, [pc, #52]	; (80099f8 <DmxSend::Print()+0x44>)
 80099c2:	6819      	ldr	r1, [r3, #0]
 80099c4:	f006 f9ac 	bl	800fd20 <printf>
 80099c8:	6823      	ldr	r3, [r4, #0]
 80099ca:	480c      	ldr	r0, [pc, #48]	; (80099fc <DmxSend::Print()+0x48>)
 80099cc:	6859      	ldr	r1, [r3, #4]
 80099ce:	f006 f9a7 	bl	800fd20 <printf>
 80099d2:	6823      	ldr	r3, [r4, #0]
 80099d4:	490a      	ldr	r1, [pc, #40]	; (8009a00 <DmxSend::Print()+0x4c>)
 80099d6:	689b      	ldr	r3, [r3, #8]
 80099d8:	480a      	ldr	r0, [pc, #40]	; (8009a04 <DmxSend::Print()+0x50>)
 80099da:	fbb1 f1f3 	udiv	r1, r1, r3
 80099de:	f006 f99f 	bl	800fd20 <printf>
 80099e2:	6823      	ldr	r3, [r4, #0]
 80099e4:	4808      	ldr	r0, [pc, #32]	; (8009a08 <DmxSend::Print()+0x54>)
 80099e6:	8a19      	ldrh	r1, [r3, #16]
 80099e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80099ec:	f006 b998 	b.w	800fd20 <printf>
 80099f0:	20000b4c 	andcs	r0, r0, ip, asr #22
 80099f4:	0801203e 	stmdaeq	r1, {r1, r2, r3, r4, r5, sp}
 80099f8:	08012048 	stmdaeq	r1, {r3, r6, sp}
 80099fc:	0801205c 	stmdaeq	r1, {r2, r3, r4, r6, sp}
 8009a00:	000f4240 	andeq	r4, pc, r0, asr #4
 8009a04:	08012070 	stmdaeq	r1, {r4, r5, r6, sp}
 8009a08:	08012084 	stmdaeq	r1, {r2, r7, sp}

08009a0c <DmxSend::~DmxSend()>:
 8009a0c:	b510      	push	{r4, lr}
 8009a0e:	4604      	mov	r4, r0
 8009a10:	f005 fe8a 	bl	800f728 <operator delete(void*)>
 8009a14:	4620      	mov	r0, r4
 8009a16:	bd10      	pop	{r4, pc}

08009a18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8009a18:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a1a:	88c5      	ldrh	r5, [r0, #6]
 8009a1c:	8886      	ldrh	r6, [r0, #4]
 8009a1e:	42b5      	cmp	r5, r6
 8009a20:	d216      	bcs.n	8009a50 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8009a22:	4604      	mov	r4, r0
 8009a24:	6800      	ldr	r0, [r0, #0]
 8009a26:	4428      	add	r0, r5
 8009a28:	1b75      	subs	r5, r6, r5
 8009a2a:	7a26      	ldrb	r6, [r4, #8]
 8009a2c:	b923      	cbnz	r3, 8009a38 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009a2e:	b926      	cbnz	r6, 8009a3a <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009a30:	9200      	str	r2, [sp, #0]
 8009a32:	460b      	mov	r3, r1
 8009a34:	4a09      	ldr	r2, [pc, #36]	; (8009a5c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8009a36:	e003      	b.n	8009a40 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009a38:	b166      	cbz	r6, 8009a54 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8009a3a:	460b      	mov	r3, r1
 8009a3c:	9200      	str	r2, [sp, #0]
 8009a3e:	4a08      	ldr	r2, [pc, #32]	; (8009a60 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009a40:	4629      	mov	r1, r5
 8009a42:	f006 f995 	bl	800fd70 <snprintf>
 8009a46:	4285      	cmp	r5, r0
 8009a48:	bfa2      	ittt	ge
 8009a4a:	88e3      	ldrhge	r3, [r4, #6]
 8009a4c:	181b      	addge	r3, r3, r0
 8009a4e:	80e3      	strhge	r3, [r4, #6]
 8009a50:	b002      	add	sp, #8
 8009a52:	bd70      	pop	{r4, r5, r6, pc}
 8009a54:	9200      	str	r2, [sp, #0]
 8009a56:	460b      	mov	r3, r1
 8009a58:	4a02      	ldr	r2, [pc, #8]	; (8009a64 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009a5a:	e7f1      	b.n	8009a40 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009a5c:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8009a60:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 8009a64:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

08009a68 <DmxParams::DmxParams(DmxParamsStore*)>:
 8009a68:	6001      	str	r1, [r0, #0]
 8009a6a:	2100      	movs	r1, #0
 8009a6c:	4a03      	ldr	r2, [pc, #12]	; (8009a7c <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 8009a6e:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8009a72:	f64f 7228 	movw	r2, #65320	; 0xff28
 8009a76:	8182      	strh	r2, [r0, #12]
 8009a78:	4770      	bx	lr
 8009a7a:	bf00      	nop
 8009a7c:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

08009a80 <DmxParams::Load()>:
 8009a80:	b508      	push	{r3, lr}
 8009a82:	2300      	movs	r3, #0
 8009a84:	4601      	mov	r1, r0
 8009a86:	6043      	str	r3, [r0, #4]
 8009a88:	6800      	ldr	r0, [r0, #0]
 8009a8a:	b120      	cbz	r0, 8009a96 <DmxParams::Load()+0x16>
 8009a8c:	6803      	ldr	r3, [r0, #0]
 8009a8e:	3104      	adds	r1, #4
 8009a90:	68db      	ldr	r3, [r3, #12]
 8009a92:	4798      	blx	r3
 8009a94:	2001      	movs	r0, #1
 8009a96:	bd08      	pop	{r3, pc}

08009a98 <DmxParams::Load(char const*, unsigned int)>:
 8009a98:	6803      	ldr	r3, [r0, #0]
 8009a9a:	b1d3      	cbz	r3, 8009ad2 <DmxParams::Load(char const*, unsigned int)+0x3a>
 8009a9c:	2300      	movs	r3, #0
 8009a9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009aa0:	460d      	mov	r5, r1
 8009aa2:	4616      	mov	r6, r2
 8009aa4:	4604      	mov	r4, r0
 8009aa6:	6043      	str	r3, [r0, #4]
 8009aa8:	4602      	mov	r2, r0
 8009aaa:	490a      	ldr	r1, [pc, #40]	; (8009ad4 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 8009aac:	4668      	mov	r0, sp
 8009aae:	f005 f909 	bl	800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009ab2:	4632      	mov	r2, r6
 8009ab4:	4629      	mov	r1, r5
 8009ab6:	4668      	mov	r0, sp
 8009ab8:	f005 f908 	bl	800eccc <ReadConfigFile::Read(char const*, unsigned int)>
 8009abc:	4621      	mov	r1, r4
 8009abe:	f851 0b04 	ldr.w	r0, [r1], #4
 8009ac2:	6803      	ldr	r3, [r0, #0]
 8009ac4:	689b      	ldr	r3, [r3, #8]
 8009ac6:	4798      	blx	r3
 8009ac8:	4668      	mov	r0, sp
 8009aca:	f005 f8fe 	bl	800ecca <ReadConfigFile::~ReadConfigFile()>
 8009ace:	b002      	add	sp, #8
 8009ad0:	bd70      	pop	{r4, r5, r6, pc}
 8009ad2:	4770      	bx	lr
 8009ad4:	08009ba5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, fp, ip, pc}

08009ad8 <DmxParams::callbackFunction(char const*)>:
 8009ad8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ada:	460d      	mov	r5, r1
 8009adc:	4604      	mov	r4, r0
 8009ade:	492d      	ldr	r1, [pc, #180]	; (8009b94 <DmxParams::callbackFunction(char const*)+0xbc>)
 8009ae0:	4628      	mov	r0, r5
 8009ae2:	f10d 0206 	add.w	r2, sp, #6
 8009ae6:	f005 f97e 	bl	800ede6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009aea:	b988      	cbnz	r0, 8009b10 <DmxParams::callbackFunction(char const*)+0x38>
 8009aec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009af0:	6863      	ldr	r3, [r4, #4]
 8009af2:	2a5b      	cmp	r2, #91	; 0x5b
 8009af4:	d907      	bls.n	8009b06 <DmxParams::callbackFunction(char const*)+0x2e>
 8009af6:	2ab0      	cmp	r2, #176	; 0xb0
 8009af8:	d005      	beq.n	8009b06 <DmxParams::callbackFunction(char const*)+0x2e>
 8009afa:	8122      	strh	r2, [r4, #8]
 8009afc:	f043 0301 	orr.w	r3, r3, #1
 8009b00:	6063      	str	r3, [r4, #4]
 8009b02:	b003      	add	sp, #12
 8009b04:	bd30      	pop	{r4, r5, pc}
 8009b06:	22b0      	movs	r2, #176	; 0xb0
 8009b08:	f023 0301 	bic.w	r3, r3, #1
 8009b0c:	8122      	strh	r2, [r4, #8]
 8009b0e:	e7f7      	b.n	8009b00 <DmxParams::callbackFunction(char const*)+0x28>
 8009b10:	4628      	mov	r0, r5
 8009b12:	4921      	ldr	r1, [pc, #132]	; (8009b98 <DmxParams::callbackFunction(char const*)+0xc0>)
 8009b14:	f10d 0206 	add.w	r2, sp, #6
 8009b18:	f005 f965 	bl	800ede6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009b1c:	b968      	cbnz	r0, 8009b3a <DmxParams::callbackFunction(char const*)+0x62>
 8009b1e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009b22:	6863      	ldr	r3, [r4, #4]
 8009b24:	2a0c      	cmp	r2, #12
 8009b26:	bf93      	iteet	ls
 8009b28:	220c      	movls	r2, #12
 8009b2a:	8162      	strhhi	r2, [r4, #10]
 8009b2c:	f043 0302 	orrhi.w	r3, r3, #2
 8009b30:	8162      	strhls	r2, [r4, #10]
 8009b32:	bf98      	it	ls
 8009b34:	f023 0302 	bicls.w	r3, r3, #2
 8009b38:	e7e2      	b.n	8009b00 <DmxParams::callbackFunction(char const*)+0x28>
 8009b3a:	4628      	mov	r0, r5
 8009b3c:	4917      	ldr	r1, [pc, #92]	; (8009b9c <DmxParams::callbackFunction(char const*)+0xc4>)
 8009b3e:	f10d 0205 	add.w	r2, sp, #5
 8009b42:	f005 f96e 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009b46:	b950      	cbnz	r0, 8009b5e <DmxParams::callbackFunction(char const*)+0x86>
 8009b48:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009b4c:	6863      	ldr	r3, [r4, #4]
 8009b4e:	2a28      	cmp	r2, #40	; 0x28
 8009b50:	7322      	strb	r2, [r4, #12]
 8009b52:	bf14      	ite	ne
 8009b54:	f043 0304 	orrne.w	r3, r3, #4
 8009b58:	f023 0304 	biceq.w	r3, r3, #4
 8009b5c:	e7d0      	b.n	8009b00 <DmxParams::callbackFunction(char const*)+0x28>
 8009b5e:	4628      	mov	r0, r5
 8009b60:	490f      	ldr	r1, [pc, #60]	; (8009ba0 <DmxParams::callbackFunction(char const*)+0xc8>)
 8009b62:	f10d 0206 	add.w	r2, sp, #6
 8009b66:	f005 f93e 	bl	800ede6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009b6a:	2800      	cmp	r0, #0
 8009b6c:	d1c9      	bne.n	8009b02 <DmxParams::callbackFunction(char const*)+0x2a>
 8009b6e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009b72:	6863      	ldr	r3, [r4, #4]
 8009b74:	1e91      	subs	r1, r2, #2
 8009b76:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 8009b7a:	bf2f      	iteee	cs
 8009b7c:	22ff      	movcs	r2, #255	; 0xff
 8009b7e:	0852      	lsrcc	r2, r2, #1
 8009b80:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 8009b84:	7362      	strbcc	r2, [r4, #13]
 8009b86:	bf32      	itee	cc
 8009b88:	f043 0308 	orrcc.w	r3, r3, #8
 8009b8c:	7362      	strbcs	r2, [r4, #13]
 8009b8e:	f023 0308 	biccs.w	r3, r3, #8
 8009b92:	e7b5      	b.n	8009b00 <DmxParams::callbackFunction(char const*)+0x28>
 8009b94:	080120cc 	stmdaeq	r1, {r2, r3, r6, r7, sp}
 8009b98:	080120f0 	stmdaeq	r1, {r4, r5, r6, r7, sp}
 8009b9c:	080120e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sp}
 8009ba0:	080120d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sp}

08009ba4 <DmxParams::staticCallbackFunction(void*, char const*)>:
 8009ba4:	f7ff bf98 	b.w	8009ad8 <DmxParams::callbackFunction(char const*)>

08009ba8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 8009ba8:	b570      	push	{r4, r5, r6, lr}
 8009baa:	4604      	mov	r4, r0
 8009bac:	4615      	mov	r5, r2
 8009bae:	461e      	mov	r6, r3
 8009bb0:	b086      	sub	sp, #24
 8009bb2:	3004      	adds	r0, #4
 8009bb4:	b361      	cbz	r1, 8009c10 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 8009bb6:	220a      	movs	r2, #10
 8009bb8:	f005 fe79 	bl	800f8ae <memmove>
 8009bbc:	462a      	mov	r2, r5
 8009bbe:	4633      	mov	r3, r6
 8009bc0:	4931      	ldr	r1, [pc, #196]	; (8009c88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 8009bc2:	a803      	add	r0, sp, #12
 8009bc4:	f004 ffde 	bl	800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009bc8:	6863      	ldr	r3, [r4, #4]
 8009bca:	8922      	ldrh	r2, [r4, #8]
 8009bcc:	492f      	ldr	r1, [pc, #188]	; (8009c8c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 8009bce:	f003 0301 	and.w	r3, r3, #1
 8009bd2:	a803      	add	r0, sp, #12
 8009bd4:	f7ff ff20 	bl	8009a18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009bd8:	6863      	ldr	r3, [r4, #4]
 8009bda:	492d      	ldr	r1, [pc, #180]	; (8009c90 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 8009bdc:	8962      	ldrh	r2, [r4, #10]
 8009bde:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8009be2:	a803      	add	r0, sp, #12
 8009be4:	f7ff ff18 	bl	8009a18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009be8:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009bec:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009bf0:	42a9      	cmp	r1, r5
 8009bf2:	d222      	bcs.n	8009c3a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 8009bf4:	9803      	ldr	r0, [sp, #12]
 8009bf6:	1a6d      	subs	r5, r5, r1
 8009bf8:	4408      	add	r0, r1
 8009bfa:	6861      	ldr	r1, [r4, #4]
 8009bfc:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009c00:	0749      	lsls	r1, r1, #29
 8009c02:	7b23      	ldrb	r3, [r4, #12]
 8009c04:	d40b      	bmi.n	8009c1e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 8009c06:	b95a      	cbnz	r2, 8009c20 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 8009c08:	9300      	str	r3, [sp, #0]
 8009c0a:	4a22      	ldr	r2, [pc, #136]	; (8009c94 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 8009c0c:	4b22      	ldr	r3, [pc, #136]	; (8009c98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009c0e:	e00a      	b.n	8009c26 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 8009c10:	6823      	ldr	r3, [r4, #0]
 8009c12:	4601      	mov	r1, r0
 8009c14:	681a      	ldr	r2, [r3, #0]
 8009c16:	4618      	mov	r0, r3
 8009c18:	68d2      	ldr	r2, [r2, #12]
 8009c1a:	4790      	blx	r2
 8009c1c:	e7ce      	b.n	8009bbc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 8009c1e:	b37a      	cbz	r2, 8009c80 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 8009c20:	9300      	str	r3, [sp, #0]
 8009c22:	4a1e      	ldr	r2, [pc, #120]	; (8009c9c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009c24:	4b1c      	ldr	r3, [pc, #112]	; (8009c98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009c26:	4629      	mov	r1, r5
 8009c28:	f006 f8a2 	bl	800fd70 <snprintf>
 8009c2c:	4285      	cmp	r5, r0
 8009c2e:	bfa2      	ittt	ge
 8009c30:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009c34:	18c0      	addge	r0, r0, r3
 8009c36:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009c3a:	7b62      	ldrb	r2, [r4, #13]
 8009c3c:	6863      	ldr	r3, [r4, #4]
 8009c3e:	3201      	adds	r2, #1
 8009c40:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8009c44:	4916      	ldr	r1, [pc, #88]	; (8009ca0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009c46:	0052      	lsls	r2, r2, #1
 8009c48:	a803      	add	r0, sp, #12
 8009c4a:	f7ff fee5 	bl	8009a18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009c4e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009c52:	b17b      	cbz	r3, 8009c74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 8009c54:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009c58:	9b03      	ldr	r3, [sp, #12]
 8009c5a:	4413      	add	r3, r2
 8009c5c:	227d      	movs	r2, #125	; 0x7d
 8009c5e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009c62:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009c66:	9903      	ldr	r1, [sp, #12]
 8009c68:	54ca      	strb	r2, [r1, r3]
 8009c6a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009c6e:	3301      	adds	r3, #1
 8009c70:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009c74:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009c78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009c7a:	601a      	str	r2, [r3, #0]
 8009c7c:	b006      	add	sp, #24
 8009c7e:	bd70      	pop	{r4, r5, r6, pc}
 8009c80:	9300      	str	r3, [sp, #0]
 8009c82:	4a08      	ldr	r2, [pc, #32]	; (8009ca4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009c84:	4b04      	ldr	r3, [pc, #16]	; (8009c98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009c86:	e7ce      	b.n	8009c26 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 8009c88:	080120f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sp}
 8009c8c:	080120cc 	stmdaeq	r1, {r2, r3, r6, r7, sp}
 8009c90:	080120f0 	stmdaeq	r1, {r4, r5, r6, r7, sp}
 8009c94:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 8009c98:	080120e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sp}
 8009c9c:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 8009ca0:	080120d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sp}
 8009ca4:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

08009ca8 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 8009ca8:	b513      	push	{r0, r1, r4, lr}
 8009caa:	6804      	ldr	r4, [r0, #0]
 8009cac:	b914      	cbnz	r4, 8009cb4 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009cae:	601c      	str	r4, [r3, #0]
 8009cb0:	b002      	add	sp, #8
 8009cb2:	bd10      	pop	{r4, pc}
 8009cb4:	9300      	str	r3, [sp, #0]
 8009cb6:	4613      	mov	r3, r2
 8009cb8:	460a      	mov	r2, r1
 8009cba:	2100      	movs	r1, #0
 8009cbc:	f7ff ff74 	bl	8009ba8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 8009cc0:	e7f6      	b.n	8009cb0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009cc4 <DmxParams::Set(Dmx*)>:
 8009cc4:	b538      	push	{r3, r4, r5, lr}
 8009cc6:	6843      	ldr	r3, [r0, #4]
 8009cc8:	4604      	mov	r4, r0
 8009cca:	07d8      	lsls	r0, r3, #31
 8009ccc:	460d      	mov	r5, r1
 8009cce:	d503      	bpl.n	8009cd8 <DmxParams::Set(Dmx*)+0x14>
 8009cd0:	4628      	mov	r0, r5
 8009cd2:	8921      	ldrh	r1, [r4, #8]
 8009cd4:	f000 fbe6 	bl	800a4a4 <Dmx::SetDmxBreakTime(unsigned int)>
 8009cd8:	6863      	ldr	r3, [r4, #4]
 8009cda:	0799      	lsls	r1, r3, #30
 8009cdc:	d503      	bpl.n	8009ce6 <DmxParams::Set(Dmx*)+0x22>
 8009cde:	4628      	mov	r0, r5
 8009ce0:	8961      	ldrh	r1, [r4, #10]
 8009ce2:	f000 fbe9 	bl	800a4b8 <Dmx::SetDmxMabTime(unsigned int)>
 8009ce6:	6863      	ldr	r3, [r4, #4]
 8009ce8:	075a      	lsls	r2, r3, #29
 8009cea:	d507      	bpl.n	8009cfc <DmxParams::Set(Dmx*)+0x38>
 8009cec:	7b21      	ldrb	r1, [r4, #12]
 8009cee:	b111      	cbz	r1, 8009cf6 <DmxParams::Set(Dmx*)+0x32>
 8009cf0:	4b08      	ldr	r3, [pc, #32]	; (8009d14 <DmxParams::Set(Dmx*)+0x50>)
 8009cf2:	fbb3 f1f1 	udiv	r1, r3, r1
 8009cf6:	4628      	mov	r0, r5
 8009cf8:	f000 fba4 	bl	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009cfc:	6863      	ldr	r3, [r4, #4]
 8009cfe:	071b      	lsls	r3, r3, #28
 8009d00:	d507      	bpl.n	8009d12 <DmxParams::Set(Dmx*)+0x4e>
 8009d02:	7b61      	ldrb	r1, [r4, #13]
 8009d04:	4628      	mov	r0, r5
 8009d06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009d0a:	3101      	adds	r1, #1
 8009d0c:	0049      	lsls	r1, r1, #1
 8009d0e:	f000 bbdd 	b.w	800a4cc <Dmx::SetDmxSlots(unsigned short)>
 8009d12:	bd38      	pop	{r3, r4, r5, pc}
 8009d14:	000f4240 	andeq	r4, pc, r0, asr #4

08009d18 <DmxParams::Dump()>:
 8009d18:	4770      	bx	lr
	...

08009d1c <USART2_IRQHandler>:
 8009d1c:	b510      	push	{r4, lr}
 8009d1e:	f3bf 8f5f 	dmb	sy
 8009d22:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8009d26:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8009d2a:	f013 0f02 	tst.w	r3, #2
 8009d2e:	4b74      	ldr	r3, [pc, #464]	; (8009f00 <USART2_IRQHandler+0x1e4>)
 8009d30:	d00e      	beq.n	8009d50 <USART2_IRQHandler+0x34>
 8009d32:	f8d2 1800 	ldr.w	r1, [r2, #2048]	; 0x800
 8009d36:	f021 0102 	bic.w	r1, r1, #2
 8009d3a:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8009d3e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009d42:	2200      	movs	r2, #0
 8009d44:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d48:	2202      	movs	r2, #2
 8009d4a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009d4e:	bd10      	pop	{r4, pc}
 8009d50:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009d54:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 8009d58:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009d5c:	290a      	cmp	r1, #10
 8009d5e:	f200 80ca 	bhi.w	8009ef6 <USART2_IRQHandler+0x1da>
 8009d62:	e8df f001 	tbb	[pc, r1]
 8009d66:	c810c806 	ldmdagt	r0, {r1, r2, fp, lr, pc}
 8009d6a:	6d5f482c 	ldclvs	8, cr4, [pc, #-176]	; 8009cc0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x18>
 8009d6e:	00ac9886 	adceq	r9, ip, r6, lsl #17
 8009d72:	2108      	movs	r1, #8
 8009d74:	701a      	strb	r2, [r3, #0]
 8009d76:	2201      	movs	r2, #1
 8009d78:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009d7c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009d80:	f3bf 8f5f 	dmb	sy
 8009d84:	e7e3      	b.n	8009d4e <USART2_IRQHandler+0x32>
 8009d86:	b11a      	cbz	r2, 8009d90 <USART2_IRQHandler+0x74>
 8009d88:	2acc      	cmp	r2, #204	; 0xcc
 8009d8a:	d012      	beq.n	8009db2 <USART2_IRQHandler+0x96>
 8009d8c:	2200      	movs	r2, #0
 8009d8e:	e00d      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009d90:	701a      	strb	r2, [r3, #0]
 8009d92:	2201      	movs	r2, #1
 8009d94:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d98:	4a5a      	ldr	r2, [pc, #360]	; (8009f04 <USART2_IRQHandler+0x1e8>)
 8009d9a:	6851      	ldr	r1, [r2, #4]
 8009d9c:	3101      	adds	r1, #1
 8009d9e:	6051      	str	r1, [r2, #4]
 8009da0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8009da4:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 8009da8:	60d1      	str	r1, [r2, #12]
 8009daa:	2204      	movs	r2, #4
 8009dac:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009db0:	e7e6      	b.n	8009d80 <USART2_IRQHandler+0x64>
 8009db2:	701a      	strb	r2, [r3, #0]
 8009db4:	4a54      	ldr	r2, [pc, #336]	; (8009f08 <USART2_IRQHandler+0x1ec>)
 8009db6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009dba:	2205      	movs	r2, #5
 8009dbc:	e7f6      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009dbe:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8009dc2:	b288      	uxth	r0, r1
 8009dc4:	541a      	strb	r2, [r3, r0]
 8009dc6:	1c4a      	adds	r2, r1, #1
 8009dc8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009dcc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009dd0:	d904      	bls.n	8009ddc <USART2_IRQHandler+0xc0>
 8009dd2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009dd6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009dda:	e7d7      	b.n	8009d8c <USART2_IRQHandler+0x70>
 8009ddc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009de0:	4848      	ldr	r0, [pc, #288]	; (8009f04 <USART2_IRQHandler+0x1e8>)
 8009de2:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8009de6:	68c3      	ldr	r3, [r0, #12]
 8009de8:	60c1      	str	r1, [r0, #12]
 8009dea:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8009dee:	3304      	adds	r3, #4
 8009df0:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8009df4:	e7c4      	b.n	8009d80 <USART2_IRQHandler+0x64>
 8009df6:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009dfa:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009dfe:	541a      	strb	r2, [r3, r0]
 8009e00:	1c41      	adds	r1, r0, #1
 8009e02:	3817      	subs	r0, #23
 8009e04:	b289      	uxth	r1, r1
 8009e06:	4422      	add	r2, r4
 8009e08:	28e7      	cmp	r0, #231	; 0xe7
 8009e0a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e0e:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009e12:	d804      	bhi.n	8009e1e <USART2_IRQHandler+0x102>
 8009e14:	789a      	ldrb	r2, [r3, #2]
 8009e16:	428a      	cmp	r2, r1
 8009e18:	d101      	bne.n	8009e1e <USART2_IRQHandler+0x102>
 8009e1a:	2206      	movs	r2, #6
 8009e1c:	e7c6      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009e1e:	29ff      	cmp	r1, #255	; 0xff
 8009e20:	d9ae      	bls.n	8009d80 <USART2_IRQHandler+0x64>
 8009e22:	e7b3      	b.n	8009d8c <USART2_IRQHandler+0x70>
 8009e24:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e28:	545a      	strb	r2, [r3, r1]
 8009e2a:	3101      	adds	r1, #1
 8009e2c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e30:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8009e34:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8009e38:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009e3c:	2207      	movs	r2, #7
 8009e3e:	e7b5      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009e40:	f8b3 0206 	ldrh.w	r0, [r3, #518]	; 0x206
 8009e44:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e48:	545a      	strb	r2, [r3, r1]
 8009e4a:	1a82      	subs	r2, r0, r2
 8009e4c:	b292      	uxth	r2, r2
 8009e4e:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009e52:	b912      	cbnz	r2, 8009e5a <USART2_IRQHandler+0x13e>
 8009e54:	785a      	ldrb	r2, [r3, #1]
 8009e56:	2a01      	cmp	r2, #1
 8009e58:	d001      	beq.n	8009e5e <USART2_IRQHandler+0x142>
 8009e5a:	2200      	movs	r2, #0
 8009e5c:	e7bb      	b.n	8009dd6 <USART2_IRQHandler+0xba>
 8009e5e:	3101      	adds	r1, #1
 8009e60:	4a2a      	ldr	r2, [pc, #168]	; (8009f0c <USART2_IRQHandler+0x1f0>)
 8009e62:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009e66:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e6a:	6851      	ldr	r1, [r2, #4]
 8009e6c:	4a28      	ldr	r2, [pc, #160]	; (8009f10 <USART2_IRQHandler+0x1f4>)
 8009e6e:	6011      	str	r1, [r2, #0]
 8009e70:	e78c      	b.n	8009d8c <USART2_IRQHandler+0x70>
 8009e72:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e76:	2aaa      	cmp	r2, #170	; 0xaa
 8009e78:	545a      	strb	r2, [r3, r1]
 8009e7a:	f101 0101 	add.w	r1, r1, #1
 8009e7e:	b289      	uxth	r1, r1
 8009e80:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e84:	d002      	beq.n	8009e8c <USART2_IRQHandler+0x170>
 8009e86:	2909      	cmp	r1, #9
 8009e88:	f47f af7a 	bne.w	8009d80 <USART2_IRQHandler+0x64>
 8009e8c:	2200      	movs	r2, #0
 8009e8e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e92:	2209      	movs	r2, #9
 8009e94:	e78a      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009e96:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e9a:	545a      	strb	r2, [r3, r1]
 8009e9c:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8009ea0:	3101      	adds	r1, #1
 8009ea2:	3201      	adds	r2, #1
 8009ea4:	b292      	uxth	r2, r2
 8009ea6:	2a0c      	cmp	r2, #12
 8009ea8:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009eac:	d002      	beq.n	8009eb4 <USART2_IRQHandler+0x198>
 8009eae:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009eb2:	e765      	b.n	8009d80 <USART2_IRQHandler+0x64>
 8009eb4:	2200      	movs	r2, #0
 8009eb6:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009eba:	220a      	movs	r2, #10
 8009ebc:	e776      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009ebe:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009ec2:	545a      	strb	r2, [r3, r1]
 8009ec4:	1c4a      	adds	r2, r1, #1
 8009ec6:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8009eca:	b292      	uxth	r2, r2
 8009ecc:	3101      	adds	r1, #1
 8009ece:	b289      	uxth	r1, r1
 8009ed0:	2904      	cmp	r1, #4
 8009ed2:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009ed6:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8009eda:	f47f af51 	bne.w	8009d80 <USART2_IRQHandler+0x64>
 8009ede:	2100      	movs	r1, #0
 8009ee0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009ee4:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009ee8:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009eec:	4b07      	ldr	r3, [pc, #28]	; (8009f0c <USART2_IRQHandler+0x1f0>)
 8009eee:	685a      	ldr	r2, [r3, #4]
 8009ef0:	4b07      	ldr	r3, [pc, #28]	; (8009f10 <USART2_IRQHandler+0x1f4>)
 8009ef2:	601a      	str	r2, [r3, #0]
 8009ef4:	e744      	b.n	8009d80 <USART2_IRQHandler+0x64>
 8009ef6:	2200      	movs	r2, #0
 8009ef8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009efc:	e756      	b.n	8009dac <USART2_IRQHandler+0x90>
 8009efe:	bf00      	nop
 8009f00:	20000720 	andcs	r0, r0, r0, lsr #14
 8009f04:	20000b3c 	andcs	r0, r0, ip, lsr fp
 8009f08:	00cc0001 	sbceq	r0, ip, r1
 8009f0c:	e0001000 	and	r1, r0, r0
 8009f10:	20000b50 	andcs	r0, r0, r0, asr fp

08009f14 <TIMER1_IRQHandler>:
 8009f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f16:	f3bf 8f5f 	dmb	sy
 8009f1a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f1e:	691c      	ldr	r4, [r3, #16]
 8009f20:	4e1f      	ldr	r6, [pc, #124]	; (8009fa0 <TIMER1_IRQHandler+0x8c>)
 8009f22:	07a7      	lsls	r7, r4, #30
 8009f24:	8835      	ldrh	r5, [r6, #0]
 8009f26:	d518      	bpl.n	8009f5a <TIMER1_IRQHandler+0x46>
 8009f28:	4f1e      	ldr	r7, [pc, #120]	; (8009fa4 <TIMER1_IRQHandler+0x90>)
 8009f2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009f2e:	2203      	movs	r2, #3
 8009f30:	2110      	movs	r1, #16
 8009f32:	4638      	mov	r0, r7
 8009f34:	f006 fa4e 	bl	80103d4 <gpio_init>
 8009f38:	07ed      	lsls	r5, r5, #31
 8009f3a:	d506      	bpl.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009f3c:	8833      	ldrh	r3, [r6, #0]
 8009f3e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009f42:	8033      	strh	r3, [r6, #0]
 8009f44:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009f48:	617b      	str	r3, [r7, #20]
 8009f4a:	4621      	mov	r1, r4
 8009f4c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009f50:	f006 fd2b 	bl	80109aa <timer_interrupt_flag_clear>
 8009f54:	f3bf 8f5f 	dmb	sy
 8009f58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009f5a:	0760      	lsls	r0, r4, #29
 8009f5c:	d509      	bpl.n	8009f72 <TIMER1_IRQHandler+0x5e>
 8009f5e:	05e9      	lsls	r1, r5, #23
 8009f60:	d5f3      	bpl.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009f62:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009f66:	2203      	movs	r2, #3
 8009f68:	2118      	movs	r1, #24
 8009f6a:	480e      	ldr	r0, [pc, #56]	; (8009fa4 <TIMER1_IRQHandler+0x90>)
 8009f6c:	f006 fa32 	bl	80103d4 <gpio_init>
 8009f70:	e7eb      	b.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009f72:	0722      	lsls	r2, r4, #28
 8009f74:	d5e9      	bpl.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009f76:	05eb      	lsls	r3, r5, #23
 8009f78:	d5e7      	bpl.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009f7a:	4b0b      	ldr	r3, [pc, #44]	; (8009fa8 <TIMER1_IRQHandler+0x94>)
 8009f7c:	2180      	movs	r1, #128	; 0x80
 8009f7e:	69da      	ldr	r2, [r3, #28]
 8009f80:	480a      	ldr	r0, [pc, #40]	; (8009fac <TIMER1_IRQHandler+0x98>)
 8009f82:	f022 0201 	bic.w	r2, r2, #1
 8009f86:	61da      	str	r2, [r3, #28]
 8009f88:	4a09      	ldr	r2, [pc, #36]	; (8009fb0 <TIMER1_IRQHandler+0x9c>)
 8009f8a:	629a      	str	r2, [r3, #40]	; 0x28
 8009f8c:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8009f90:	621a      	str	r2, [r3, #32]
 8009f92:	69da      	ldr	r2, [r3, #28]
 8009f94:	f042 0201 	orr.w	r2, r2, #1
 8009f98:	61da      	str	r2, [r3, #28]
 8009f9a:	f006 fda5 	bl	8010ae8 <usart_dma_transmit_config>
 8009f9e:	e7d4      	b.n	8009f4a <TIMER1_IRQHandler+0x36>
 8009fa0:	20000b38 	andcs	r0, r0, r8, lsr fp
 8009fa4:	40011000 	andmi	r1, r1, r0
 8009fa8:	40020000 	andmi	r0, r2, r0
 8009fac:	40004800 	andmi	r4, r0, r0, lsl #16
 8009fb0:	20000930 	andcs	r0, r0, r0, lsr r9

08009fb4 <TIMER2_IRQHandler>:
 8009fb4:	b508      	push	{r3, lr}
 8009fb6:	f3bf 8f5f 	dmb	sy
 8009fba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009fbe:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8009fc2:	078b      	lsls	r3, r1, #30
 8009fc4:	d50d      	bpl.n	8009fe2 <TIMER2_IRQHandler+0x2e>
 8009fc6:	4b0a      	ldr	r3, [pc, #40]	; (8009ff0 <TIMER2_IRQHandler+0x3c>)
 8009fc8:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009fcc:	2a04      	cmp	r2, #4
 8009fce:	d108      	bne.n	8009fe2 <TIMER2_IRQHandler+0x2e>
 8009fd0:	2200      	movs	r2, #0
 8009fd2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009fd6:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009fda:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009fde:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009fe2:	4804      	ldr	r0, [pc, #16]	; (8009ff4 <TIMER2_IRQHandler+0x40>)
 8009fe4:	f006 fce1 	bl	80109aa <timer_interrupt_flag_clear>
 8009fe8:	f3bf 8f5f 	dmb	sy
 8009fec:	bd08      	pop	{r3, pc}
 8009fee:	bf00      	nop
 8009ff0:	20000720 	andcs	r0, r0, r0, lsr #14
 8009ff4:	40000400 	andmi	r0, r0, r0, lsl #8

08009ff8 <TIMER3_IRQHandler>:
 8009ff8:	b508      	push	{r3, lr}
 8009ffa:	f3bf 8f5f 	dmb	sy
 8009ffe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a002:	4804      	ldr	r0, [pc, #16]	; (800a014 <TIMER3_IRQHandler+0x1c>)
 800a004:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800a008:	f006 fccf 	bl	80109aa <timer_interrupt_flag_clear>
 800a00c:	f3bf 8f5f 	dmb	sy
 800a010:	bd08      	pop	{r3, pc}
 800a012:	bf00      	nop
 800a014:	40000800 	andmi	r0, r0, r0, lsl #16

0800a018 <TIMER6_IRQHandler>:
 800a018:	b508      	push	{r3, lr}
 800a01a:	f3bf 8f5f 	dmb	sy
 800a01e:	4b07      	ldr	r3, [pc, #28]	; (800a03c <TIMER6_IRQHandler+0x24>)
 800a020:	4807      	ldr	r0, [pc, #28]	; (800a040 <TIMER6_IRQHandler+0x28>)
 800a022:	685a      	ldr	r2, [r3, #4]
 800a024:	6899      	ldr	r1, [r3, #8]
 800a026:	1a52      	subs	r2, r2, r1
 800a028:	601a      	str	r2, [r3, #0]
 800a02a:	685a      	ldr	r2, [r3, #4]
 800a02c:	2101      	movs	r1, #1
 800a02e:	609a      	str	r2, [r3, #8]
 800a030:	f006 fcbb 	bl	80109aa <timer_interrupt_flag_clear>
 800a034:	f3bf 8f5f 	dmb	sy
 800a038:	bd08      	pop	{r3, pc}
 800a03a:	bf00      	nop
 800a03c:	20000b3c 	andcs	r0, r0, ip, lsr fp
 800a040:	40001400 	andmi	r1, r0, r0, lsl #8

0800a044 <Dmx::ClearData(unsigned int)>:
 800a044:	f44f 7301 	mov.w	r3, #516	; 0x204
 800a048:	b510      	push	{r4, lr}
 800a04a:	2400      	movs	r4, #0
 800a04c:	4a08      	ldr	r2, [pc, #32]	; (800a070 <Dmx::ClearData(unsigned int)+0x2c>)
 800a04e:	fb03 2301 	mla	r3, r3, r1, r2
 800a052:	f203 2002 	addw	r0, r3, #514	; 0x202
 800a056:	f823 4b02 	strh.w	r4, [r3], #2
 800a05a:	4283      	cmp	r3, r0
 800a05c:	d1fb      	bne.n	800a056 <Dmx::ClearData(unsigned int)+0x12>
 800a05e:	f44f 7301 	mov.w	r3, #516	; 0x204
 800a062:	fb03 2201 	mla	r2, r3, r1, r2
 800a066:	f240 2301 	movw	r3, #513	; 0x201
 800a06a:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800a06e:	bd10      	pop	{r4, pc}
 800a070:	20000930 	andcs	r0, r0, r0, lsr r9

0800a074 <Dmx::StartData(unsigned int, unsigned int)>:
 800a074:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a076:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800a07a:	6943      	ldr	r3, [r0, #20]
 800a07c:	460c      	mov	r4, r1
 800a07e:	4615      	mov	r5, r2
 800a080:	b085      	sub	sp, #20
 800a082:	2b00      	cmp	r3, #0
 800a084:	d16a      	bne.n	800a15c <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800a086:	4e47      	ldr	r6, [pc, #284]	; (800a1a4 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800a088:	8834      	ldrh	r4, [r6, #0]
 800a08a:	2c00      	cmp	r4, #0
 800a08c:	d15b      	bne.n	800a146 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800a08e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800a092:	f006 fa37 	bl	8010504 <rcu_periph_clock_enable>
 800a096:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a09a:	f006 fb8f 	bl	80107bc <timer_deinit>
 800a09e:	236b      	movs	r3, #107	; 0x6b
 800a0a0:	9300      	str	r3, [sp, #0]
 800a0a2:	4b41      	ldr	r3, [pc, #260]	; (800a1a8 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800a0a4:	4669      	mov	r1, sp
 800a0a6:	681b      	ldr	r3, [r3, #0]
 800a0a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0ac:	9302      	str	r3, [sp, #8]
 800a0ae:	f8ad 4004 	strh.w	r4, [sp, #4]
 800a0b2:	f8ad 400c 	strh.w	r4, [sp, #12]
 800a0b6:	f88d 400e 	strb.w	r4, [sp, #14]
 800a0ba:	f006 fbe1 	bl	8010880 <timer_init>
 800a0be:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a0c2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0c6:	f006 fc73 	bl	80109b0 <timer_flag_clear>
 800a0ca:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a0ce:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0d2:	f006 fc6a 	bl	80109aa <timer_interrupt_flag_clear>
 800a0d6:	2210      	movs	r2, #16
 800a0d8:	4621      	mov	r1, r4
 800a0da:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0de:	f006 fc2c 	bl	801093a <timer_channel_output_mode_config>
 800a0e2:	2210      	movs	r2, #16
 800a0e4:	2101      	movs	r1, #1
 800a0e6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0ea:	f006 fc26 	bl	801093a <timer_channel_output_mode_config>
 800a0ee:	4f2f      	ldr	r7, [pc, #188]	; (800a1ac <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800a0f0:	2210      	movs	r2, #16
 800a0f2:	2102      	movs	r1, #2
 800a0f4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0f8:	f006 fc1f 	bl	801093a <timer_channel_output_mode_config>
 800a0fc:	4622      	mov	r2, r4
 800a0fe:	4621      	mov	r1, r4
 800a100:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a104:	f006 fc3f 	bl	8010986 <timer_channel_output_pulse_value_config>
 800a108:	2101      	movs	r1, #1
 800a10a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a10e:	883a      	ldrh	r2, [r7, #0]
 800a110:	f006 fc39 	bl	8010986 <timer_channel_output_pulse_value_config>
 800a114:	4b26      	ldr	r3, [pc, #152]	; (800a1b0 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800a116:	683a      	ldr	r2, [r7, #0]
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	2102      	movs	r1, #2
 800a11c:	441a      	add	r2, r3
 800a11e:	b292      	uxth	r2, r2
 800a120:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a124:	f006 fc2f 	bl	8010986 <timer_channel_output_pulse_value_config>
 800a128:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a12c:	210e      	movs	r1, #14
 800a12e:	f006 fc38 	bl	80109a2 <timer_interrupt_enable>
 800a132:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a136:	4b1f      	ldr	r3, [pc, #124]	; (800a1b4 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800a138:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a13c:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800a140:	601a      	str	r2, [r3, #0]
 800a142:	f006 fbf5 	bl	8010930 <timer_enable>
 800a146:	2201      	movs	r2, #1
 800a148:	8831      	ldrh	r1, [r6, #0]
 800a14a:	fa02 f305 	lsl.w	r3, r2, r5
 800a14e:	430b      	orrs	r3, r1
 800a150:	8033      	strh	r3, [r6, #0]
 800a152:	4b19      	ldr	r3, [pc, #100]	; (800a1b8 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a154:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a158:	b005      	add	sp, #20
 800a15a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a15c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a160:	4b16      	ldr	r3, [pc, #88]	; (800a1bc <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800a162:	fb02 3305 	mla	r3, r2, r5, r3
 800a166:	2200      	movs	r2, #0
 800a168:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a16c:	2107      	movs	r1, #7
 800a16e:	4620      	mov	r0, r4
 800a170:	f006 fcc0 	bl	8010af4 <usart_flag_get>
 800a174:	2800      	cmp	r0, #0
 800a176:	d0f9      	beq.n	800a16c <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800a178:	4620      	mov	r0, r4
 800a17a:	4911      	ldr	r1, [pc, #68]	; (800a1c0 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800a17c:	f006 fcdb 	bl	8010b36 <usart_interrupt_flag_clear>
 800a180:	f240 3105 	movw	r1, #773	; 0x305
 800a184:	4620      	mov	r0, r4
 800a186:	f006 fcbd 	bl	8010b04 <usart_interrupt_enable>
 800a18a:	2202      	movs	r2, #2
 800a18c:	4b0a      	ldr	r3, [pc, #40]	; (800a1b8 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a18e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a192:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a196:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a19a:	f043 0302 	orr.w	r3, r3, #2
 800a19e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a1a2:	e7d9      	b.n	800a158 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800a1a4:	20000b38 	andcs	r0, r0, r8, lsr fp
 800a1a8:	20000008 	andcs	r0, r0, r8
 800a1ac:	20000010 	andcs	r0, r0, r0, lsl r0
 800a1b0:	2000000c 	andcs	r0, r0, ip
 800a1b4:	e000e100 	and	lr, r0, r0, lsl #2
 800a1b8:	20000b34 	andcs	r0, r0, r4, lsr fp
 800a1bc:	20000720 	andcs	r0, r0, r0, lsr #14
 800a1c0:	00050305 	andeq	r0, r5, r5, lsl #6

0800a1c4 <Dmx::StopData(unsigned int, unsigned int)>:
 800a1c4:	b538      	push	{r3, r4, r5, lr}
 800a1c6:	4d16      	ldr	r5, [pc, #88]	; (800a220 <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 800a1c8:	4614      	mov	r4, r2
 800a1ca:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800a1ce:	4603      	mov	r3, r0
 800a1d0:	4608      	mov	r0, r1
 800a1d2:	b17a      	cbz	r2, 800a1f4 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 800a1d4:	695b      	ldr	r3, [r3, #20]
 800a1d6:	b973      	cbnz	r3, 800a1f6 <Dmx::StopData(unsigned int, unsigned int)+0x32>
 800a1d8:	2201      	movs	r2, #1
 800a1da:	4912      	ldr	r1, [pc, #72]	; (800a224 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 800a1dc:	f104 0308 	add.w	r3, r4, #8
 800a1e0:	fa02 f303 	lsl.w	r3, r2, r3
 800a1e4:	40a2      	lsls	r2, r4
 800a1e6:	4313      	orrs	r3, r2
 800a1e8:	880a      	ldrh	r2, [r1, #0]
 800a1ea:	4013      	ands	r3, r2
 800a1ec:	800b      	strh	r3, [r1, #0]
 800a1ee:	2300      	movs	r3, #0
 800a1f0:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800a1f4:	bd38      	pop	{r3, r4, r5, pc}
 800a1f6:	f240 3105 	movw	r1, #773	; 0x305
 800a1fa:	f006 fc8f 	bl	8010b1c <usart_interrupt_disable>
 800a1fe:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a202:	4b09      	ldr	r3, [pc, #36]	; (800a228 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 800a204:	fb02 3304 	mla	r3, r2, r4, r3
 800a208:	2200      	movs	r2, #0
 800a20a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a20e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a212:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a216:	f023 0302 	bic.w	r3, r3, #2
 800a21a:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a21e:	e7e6      	b.n	800a1ee <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 800a220:	20000b34 	andcs	r0, r0, r4, lsr fp
 800a224:	20000b38 	andcs	r0, r0, r8, lsr fp
 800a228:	20000720 	andcs	r0, r0, r0, lsr #14

0800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800a22c:	b570      	push	{r4, r5, r6, lr}
 800a22e:	461d      	mov	r5, r3
 800a230:	6943      	ldr	r3, [r0, #20]
 800a232:	4606      	mov	r6, r0
 800a234:	4293      	cmp	r3, r2
 800a236:	4614      	mov	r4, r2
 800a238:	d014      	beq.n	800a264 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800a23a:	6142      	str	r2, [r0, #20]
 800a23c:	4910      	ldr	r1, [pc, #64]	; (800a280 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a23e:	2200      	movs	r2, #0
 800a240:	f7ff ffc0 	bl	800a1c4 <Dmx::StopData(unsigned int, unsigned int)>
 800a244:	b934      	cbnz	r4, 800a254 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800a246:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a24a:	4b0e      	ldr	r3, [pc, #56]	; (800a284 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a24c:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800a250:	b94d      	cbnz	r5, 800a266 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800a252:	bd70      	pop	{r4, r5, r6, pc}
 800a254:	2c01      	cmp	r4, #1
 800a256:	d1fb      	bne.n	800a250 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a258:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a25c:	4b09      	ldr	r3, [pc, #36]	; (800a284 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a25e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800a262:	e7f5      	b.n	800a250 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a264:	b135      	cbz	r5, 800a274 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800a266:	4630      	mov	r0, r6
 800a268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a26c:	2200      	movs	r2, #0
 800a26e:	4904      	ldr	r1, [pc, #16]	; (800a280 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a270:	f7ff bf00 	b.w	800a074 <Dmx::StartData(unsigned int, unsigned int)>
 800a274:	462a      	mov	r2, r5
 800a276:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a27a:	4901      	ldr	r1, [pc, #4]	; (800a280 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a27c:	f7ff bfa2 	b.w	800a1c4 <Dmx::StopData(unsigned int, unsigned int)>
 800a280:	40004800 	andmi	r4, r0, r0, lsl #16
 800a284:	40010000 	andmi	r0, r1, r0

0800a288 <Dmx::Dmx()>:
 800a288:	225c      	movs	r2, #92	; 0x5c
 800a28a:	230c      	movs	r3, #12
 800a28c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a290:	e9c0 2300 	strd	r2, r3, [r0]
 800a294:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800a298:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800a29c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2a0:	2400      	movs	r4, #0
 800a2a2:	4605      	mov	r5, r0
 800a2a4:	8203      	strh	r3, [r0, #16]
 800a2a6:	4b5d      	ldr	r3, [pc, #372]	; (800a41c <Dmx::Dmx()+0x194>)
 800a2a8:	b08b      	sub	sp, #44	; 0x2c
 800a2aa:	6018      	str	r0, [r3, #0]
 800a2ac:	4b5c      	ldr	r3, [pc, #368]	; (800a420 <Dmx::Dmx()+0x198>)
 800a2ae:	2203      	movs	r2, #3
 800a2b0:	801c      	strh	r4, [r3, #0]
 800a2b2:	2110      	movs	r1, #16
 800a2b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a2b8:	485a      	ldr	r0, [pc, #360]	; (800a424 <Dmx::Dmx()+0x19c>)
 800a2ba:	f006 f88b 	bl	80103d4 <gpio_init>
 800a2be:	4621      	mov	r1, r4
 800a2c0:	4628      	mov	r0, r5
 800a2c2:	f7ff febf 	bl	800a044 <Dmx::ClearData(unsigned int)>
 800a2c6:	4b58      	ldr	r3, [pc, #352]	; (800a428 <Dmx::Dmx()+0x1a0>)
 800a2c8:	2201      	movs	r2, #1
 800a2ca:	4628      	mov	r0, r5
 800a2cc:	601c      	str	r4, [r3, #0]
 800a2ce:	4623      	mov	r3, r4
 800a2d0:	f7ff ffac 	bl	800a22c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800a2d4:	4b55      	ldr	r3, [pc, #340]	; (800a42c <Dmx::Dmx()+0x1a4>)
 800a2d6:	4e56      	ldr	r6, [pc, #344]	; (800a430 <Dmx::Dmx()+0x1a8>)
 800a2d8:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800a2dc:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800a2e0:	f006 f910 	bl	8010504 <rcu_periph_clock_enable>
 800a2e4:	f240 5001 	movw	r0, #1281	; 0x501
 800a2e8:	f006 f90c 	bl	8010504 <rcu_periph_clock_enable>
 800a2ec:	4630      	mov	r0, r6
 800a2ee:	2101      	movs	r1, #1
 800a2f0:	f005 ff6c 	bl	80101cc <dma_deinit>
 800a2f4:	4b4f      	ldr	r3, [pc, #316]	; (800a434 <Dmx::Dmx()+0x1ac>)
 800a2f6:	2701      	movs	r7, #1
 800a2f8:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800a2fc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800a300:	9308      	str	r3, [sp, #32]
 800a302:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a306:	aa03      	add	r2, sp, #12
 800a308:	4639      	mov	r1, r7
 800a30a:	4630      	mov	r0, r6
 800a30c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a310:	9406      	str	r4, [sp, #24]
 800a312:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a316:	f005 ff75 	bl	8010204 <dma_init>
 800a31a:	4639      	mov	r1, r7
 800a31c:	4630      	mov	r0, r6
 800a31e:	f005 ffab 	bl	8010278 <dma_circulation_disable>
 800a322:	4639      	mov	r1, r7
 800a324:	4630      	mov	r0, r6
 800a326:	f005 ffb7 	bl	8010298 <dma_memory_to_memory_disable>
 800a32a:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800a32e:	f240 7001 	movw	r0, #1793	; 0x701
 800a332:	f006 f8e7 	bl	8010504 <rcu_periph_clock_enable>
 800a336:	4630      	mov	r0, r6
 800a338:	f006 fa40 	bl	80107bc <timer_deinit>
 800a33c:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800a340:	236b      	movs	r3, #107	; 0x6b
 800a342:	4630      	mov	r0, r6
 800a344:	a903      	add	r1, sp, #12
 800a346:	9303      	str	r3, [sp, #12]
 800a348:	f8ad 4010 	strh.w	r4, [sp, #16]
 800a34c:	f8cd 9014 	str.w	r9, [sp, #20]
 800a350:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a354:	f88d 401a 	strb.w	r4, [sp, #26]
 800a358:	f006 fa92 	bl	8010880 <timer_init>
 800a35c:	4649      	mov	r1, r9
 800a35e:	4630      	mov	r0, r6
 800a360:	f006 fb26 	bl	80109b0 <timer_flag_clear>
 800a364:	4649      	mov	r1, r9
 800a366:	4630      	mov	r0, r6
 800a368:	f006 fb1f 	bl	80109aa <timer_interrupt_flag_clear>
 800a36c:	4621      	mov	r1, r4
 800a36e:	4630      	mov	r0, r6
 800a370:	2210      	movs	r2, #16
 800a372:	f006 fae2 	bl	801093a <timer_channel_output_mode_config>
 800a376:	4639      	mov	r1, r7
 800a378:	4630      	mov	r0, r6
 800a37a:	2210      	movs	r2, #16
 800a37c:	f006 fadd 	bl	801093a <timer_channel_output_mode_config>
 800a380:	4630      	mov	r0, r6
 800a382:	2210      	movs	r2, #16
 800a384:	2102      	movs	r1, #2
 800a386:	f006 fad8 	bl	801093a <timer_channel_output_mode_config>
 800a38a:	2210      	movs	r2, #16
 800a38c:	2103      	movs	r1, #3
 800a38e:	4630      	mov	r0, r6
 800a390:	f006 fad3 	bl	801093a <timer_channel_output_mode_config>
 800a394:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800a398:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800a438 <Dmx::Dmx()+0x1b0>
 800a39c:	4630      	mov	r0, r6
 800a39e:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800a3a2:	f8c8 3000 	str.w	r3, [r8]
 800a3a6:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800a3aa:	f006 fac1 	bl	8010930 <timer_enable>
 800a3ae:	f240 7005 	movw	r0, #1797	; 0x705
 800a3b2:	f006 f8a7 	bl	8010504 <rcu_periph_clock_enable>
 800a3b6:	4630      	mov	r0, r6
 800a3b8:	f006 fa00 	bl	80107bc <timer_deinit>
 800a3bc:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800a3c0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a3c4:	f242 7310 	movw	r3, #10000	; 0x2710
 800a3c8:	4630      	mov	r0, r6
 800a3ca:	a903      	add	r1, sp, #12
 800a3cc:	9305      	str	r3, [sp, #20]
 800a3ce:	f006 fa57 	bl	8010880 <timer_init>
 800a3d2:	4649      	mov	r1, r9
 800a3d4:	4630      	mov	r0, r6
 800a3d6:	f006 faeb 	bl	80109b0 <timer_flag_clear>
 800a3da:	4649      	mov	r1, r9
 800a3dc:	4630      	mov	r0, r6
 800a3de:	f006 fae4 	bl	80109aa <timer_interrupt_flag_clear>
 800a3e2:	4639      	mov	r1, r7
 800a3e4:	4630      	mov	r0, r6
 800a3e6:	f006 fadc 	bl	80109a2 <timer_interrupt_enable>
 800a3ea:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800a3ee:	4630      	mov	r0, r6
 800a3f0:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800a3f4:	f8c8 3004 	str.w	r3, [r8, #4]
 800a3f8:	f006 fa9a 	bl	8010930 <timer_enable>
 800a3fc:	2302      	movs	r3, #2
 800a3fe:	2208      	movs	r2, #8
 800a400:	9300      	str	r3, [sp, #0]
 800a402:	490e      	ldr	r1, [pc, #56]	; (800a43c <Dmx::Dmx()+0x1b4>)
 800a404:	4623      	mov	r3, r4
 800a406:	480e      	ldr	r0, [pc, #56]	; (800a440 <Dmx::Dmx()+0x1b8>)
 800a408:	f006 fe0a 	bl	8011020 <gd32_uart_begin>
 800a40c:	2380      	movs	r3, #128	; 0x80
 800a40e:	4628      	mov	r0, r5
 800a410:	f8c8 3004 	str.w	r3, [r8, #4]
 800a414:	b00b      	add	sp, #44	; 0x2c
 800a416:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a41a:	bf00      	nop
 800a41c:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a420:	20000b38 	andcs	r0, r0, r8, lsr fp
 800a424:	40010c00 	andmi	r0, r1, r0, lsl #24
 800a428:	20000b34 	andcs	r0, r0, r4, lsr fp
 800a42c:	20000720 	andcs	r0, r0, r0, lsr #14
 800a430:	40020000 	andmi	r0, r2, r0
 800a434:	40004804 	andmi	r4, r0, r4, lsl #16
 800a438:	e000e100 	and	lr, r0, r0, lsl #2
 800a43c:	0003d090 	muleq	r3, r0, r0
 800a440:	40004800 	andmi	r4, r0, r0, lsl #16

0800a444 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800a444:	4b13      	ldr	r3, [pc, #76]	; (800a494 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800a446:	b570      	push	{r4, r5, r6, lr}
 800a448:	60c1      	str	r1, [r0, #12]
 800a44a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800a44e:	232c      	movs	r3, #44	; 0x2c
 800a450:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800a454:	4d10      	ldr	r5, [pc, #64]	; (800a498 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800a456:	4c11      	ldr	r4, [pc, #68]	; (800a49c <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800a458:	4358      	muls	r0, r3
 800a45a:	682a      	ldr	r2, [r5, #0]
 800a45c:	6823      	ldr	r3, [r4, #0]
 800a45e:	4413      	add	r3, r2
 800a460:	4403      	add	r3, r0
 800a462:	42b3      	cmp	r3, r6
 800a464:	d908      	bls.n	800a478 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800a466:	2ab0      	cmp	r2, #176	; 0xb0
 800a468:	4613      	mov	r3, r2
 800a46a:	bf28      	it	cs
 800a46c:	23b0      	movcs	r3, #176	; 0xb0
 800a46e:	220c      	movs	r2, #12
 800a470:	602b      	str	r3, [r5, #0]
 800a472:	4413      	add	r3, r2
 800a474:	6022      	str	r2, [r4, #0]
 800a476:	4403      	add	r3, r0
 800a478:	4a09      	ldr	r2, [pc, #36]	; (800a4a0 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800a47a:	b109      	cbz	r1, 800a480 <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>
 800a47c:	428b      	cmp	r3, r1
 800a47e:	d907      	bls.n	800a490 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>
 800a480:	f240 41b4 	movw	r1, #1204	; 0x4b4
 800a484:	332c      	adds	r3, #44	; 0x2c
 800a486:	428b      	cmp	r3, r1
 800a488:	bf2c      	ite	cs
 800a48a:	6013      	strcs	r3, [r2, #0]
 800a48c:	6011      	strcc	r1, [r2, #0]
 800a48e:	e000      	b.n	800a492 <Dmx::SetDmxPeriodTime(unsigned int)+0x4e>
 800a490:	6011      	str	r1, [r2, #0]
 800a492:	bd70      	pop	{r4, r5, r6, pc}
 800a494:	20000930 	andcs	r0, r0, r0, lsr r9
 800a498:	20000010 	andcs	r0, r0, r0, lsl r0
 800a49c:	2000000c 	andcs	r0, r0, ip
 800a4a0:	20000008 	andcs	r0, r0, r8

0800a4a4 <Dmx::SetDmxBreakTime(unsigned int)>:
 800a4a4:	295c      	cmp	r1, #92	; 0x5c
 800a4a6:	bf38      	it	cc
 800a4a8:	215c      	movcc	r1, #92	; 0x5c
 800a4aa:	4b02      	ldr	r3, [pc, #8]	; (800a4b4 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800a4ac:	6019      	str	r1, [r3, #0]
 800a4ae:	68c1      	ldr	r1, [r0, #12]
 800a4b0:	f7ff bfc8 	b.w	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4b4:	20000010 	andcs	r0, r0, r0, lsl r0

0800a4b8 <Dmx::SetDmxMabTime(unsigned int)>:
 800a4b8:	290c      	cmp	r1, #12
 800a4ba:	bf38      	it	cc
 800a4bc:	210c      	movcc	r1, #12
 800a4be:	4b02      	ldr	r3, [pc, #8]	; (800a4c8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800a4c0:	6019      	str	r1, [r3, #0]
 800a4c2:	68c1      	ldr	r1, [r0, #12]
 800a4c4:	f7ff bfbe 	b.w	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4c8:	2000000c 	andcs	r0, r0, ip

0800a4cc <Dmx::SetDmxSlots(unsigned short)>:
 800a4cc:	1e8b      	subs	r3, r1, #2
 800a4ce:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800a4d2:	d809      	bhi.n	800a4e8 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800a4d4:	6983      	ldr	r3, [r0, #24]
 800a4d6:	8201      	strh	r1, [r0, #16]
 800a4d8:	b11b      	cbz	r3, 800a4e2 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800a4da:	4299      	cmp	r1, r3
 800a4dc:	bf94      	ite	ls
 800a4de:	6181      	strls	r1, [r0, #24]
 800a4e0:	6183      	strhi	r3, [r0, #24]
 800a4e2:	68c1      	ldr	r1, [r0, #12]
 800a4e4:	f7ff bfae 	b.w	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4e8:	4770      	bx	lr
	...

0800a4ec <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800a4ec:	b4f0      	push	{r4, r5, r6, r7}
 800a4ee:	8a04      	ldrh	r4, [r0, #16]
 800a4f0:	4d11      	ldr	r5, [pc, #68]	; (800a538 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800a4f2:	42a3      	cmp	r3, r4
 800a4f4:	bf28      	it	cs
 800a4f6:	4623      	movcs	r3, r4
 800a4f8:	f44f 7401 	mov.w	r4, #516	; 0x204
 800a4fc:	434c      	muls	r4, r1
 800a4fe:	1c5f      	adds	r7, r3, #1
 800a500:	192e      	adds	r6, r5, r4
 800a502:	f892 f000 	pld	[r2]
 800a506:	3401      	adds	r4, #1
 800a508:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800a50c:	442c      	add	r4, r5
 800a50e:	18d6      	adds	r6, r2, r3
 800a510:	4296      	cmp	r6, r2
 800a512:	d004      	beq.n	800a51e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 800a514:	f812 5b01 	ldrb.w	r5, [r2], #1
 800a518:	f804 5b01 	strb.w	r5, [r4], #1
 800a51c:	e7f8      	b.n	800a510 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800a51e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a522:	698a      	ldr	r2, [r1, #24]
 800a524:	429a      	cmp	r2, r3
 800a526:	d004      	beq.n	800a532 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800a528:	bcf0      	pop	{r4, r5, r6, r7}
 800a52a:	618b      	str	r3, [r1, #24]
 800a52c:	68c1      	ldr	r1, [r0, #12]
 800a52e:	f7ff bf89 	b.w	800a444 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a532:	bcf0      	pop	{r4, r5, r6, r7}
 800a534:	4770      	bx	lr
 800a536:	bf00      	nop
 800a538:	20000930 	andcs	r0, r0, r0, lsr r9

0800a53c <Dmx::GetDmxAvailable(unsigned int)>:
 800a53c:	f44f 7304 	mov.w	r3, #528	; 0x210
 800a540:	4807      	ldr	r0, [pc, #28]	; (800a560 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800a542:	fb03 0001 	mla	r0, r3, r1, r0
 800a546:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 800a54a:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 800a54e:	bf1b      	ittet	ne
 800a550:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800a554:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800a558:	4608      	moveq	r0, r1
 800a55a:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 800a55e:	4770      	bx	lr
 800a560:	20000720 	andcs	r0, r0, r0, lsr #14

0800a564 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800a564:	f3bf 8f5f 	dmb	sy
 800a568:	4b01      	ldr	r3, [pc, #4]	; (800a570 <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800a56a:	0109      	lsls	r1, r1, #4
 800a56c:	5858      	ldr	r0, [r3, r1]
 800a56e:	4770      	bx	lr
 800a570:	20000b3c 	andcs	r0, r0, ip, lsr fp

0800a574 <RemoteConfig::HandleList()>:
 800a574:	2212      	movs	r2, #18
 800a576:	6803      	ldr	r3, [r0, #0]
 800a578:	4931      	ldr	r1, [pc, #196]	; (800a640 <RemoteConfig::HandleList()+0xcc>)
 800a57a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a57e:	fb02 1103 	mla	r1, r2, r3, r1
 800a582:	220c      	movs	r2, #12
 800a584:	4604      	mov	r4, r0
 800a586:	6843      	ldr	r3, [r0, #4]
 800a588:	482e      	ldr	r0, [pc, #184]	; (800a644 <RemoteConfig::HandleList()+0xd0>)
 800a58a:	4e2f      	ldr	r6, [pc, #188]	; (800a648 <RemoteConfig::HandleList()+0xd4>)
 800a58c:	fb02 0003 	mla	r0, r2, r3, r0
 800a590:	4b2e      	ldr	r3, [pc, #184]	; (800a64c <RemoteConfig::HandleList()+0xd8>)
 800a592:	4f2f      	ldr	r7, [pc, #188]	; (800a650 <RemoteConfig::HandleList()+0xdc>)
 800a594:	681b      	ldr	r3, [r3, #0]
 800a596:	6835      	ldr	r5, [r6, #0]
 800a598:	f8d3 c010 	ldr.w	ip, [r3, #16]
 800a59c:	f897 9009 	ldrb.w	r9, [r7, #9]
 800a5a0:	fa5f f38c 	uxtb.w	r3, ip
 800a5a4:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 800a5a8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 800a5ac:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a5b0:	b089      	sub	sp, #36	; 0x24
 800a5b2:	3507      	adds	r5, #7
 800a5b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 800a5b8:	f1b9 0f00 	cmp.w	r9, #0
 800a5bc:	d023      	beq.n	800a606 <RemoteConfig::HandleList()+0x92>
 800a5be:	b2d2      	uxtb	r2, r2
 800a5c0:	3709      	adds	r7, #9
 800a5c2:	9201      	str	r2, [sp, #4]
 800a5c4:	fa5f f28c 	uxtb.w	r2, ip
 800a5c8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800a5cc:	9200      	str	r2, [sp, #0]
 800a5ce:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a5d2:	4628      	mov	r0, r5
 800a5d4:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800a5d8:	4a1e      	ldr	r2, [pc, #120]	; (800a654 <RemoteConfig::HandleList()+0xe0>)
 800a5da:	f8cd e008 	str.w	lr, [sp, #8]
 800a5de:	f005 fbc7 	bl	800fd70 <snprintf>
 800a5e2:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a5e6:	2b05      	cmp	r3, #5
 800a5e8:	d11d      	bne.n	800a626 <RemoteConfig::HandleList()+0xb2>
 800a5ea:	f642 1305 	movw	r3, #10501	; 0x2905
 800a5ee:	9300      	str	r3, [sp, #0]
 800a5f0:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a5f4:	b282      	uxth	r2, r0
 800a5f6:	4629      	mov	r1, r5
 800a5f8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a5fc:	f002 f9a0 	bl	800c940 <udp_send>
 800a600:	b009      	add	sp, #36	; 0x24
 800a602:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a606:	b2d2      	uxtb	r2, r2
 800a608:	9201      	str	r2, [sp, #4]
 800a60a:	fa5f f28c 	uxtb.w	r2, ip
 800a60e:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800a612:	e9cd e102 	strd	lr, r1, [sp, #8]
 800a616:	9200      	str	r2, [sp, #0]
 800a618:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a61c:	4628      	mov	r0, r5
 800a61e:	4a0e      	ldr	r2, [pc, #56]	; (800a658 <RemoteConfig::HandleList()+0xe4>)
 800a620:	f005 fba6 	bl	800fd70 <snprintf>
 800a624:	e7dd      	b.n	800a5e2 <RemoteConfig::HandleList()+0x6e>
 800a626:	2b06      	cmp	r3, #6
 800a628:	d1ea      	bne.n	800a600 <RemoteConfig::HandleList()+0x8c>
 800a62a:	6833      	ldr	r3, [r6, #0]
 800a62c:	799b      	ldrb	r3, [r3, #6]
 800a62e:	2b2a      	cmp	r3, #42	; 0x2a
 800a630:	d1e6      	bne.n	800a600 <RemoteConfig::HandleList()+0x8c>
 800a632:	f642 1305 	movw	r3, #10501	; 0x2905
 800a636:	9300      	str	r3, [sp, #0]
 800a638:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a63c:	e7da      	b.n	800a5f4 <RemoteConfig::HandleList()+0x80>
 800a63e:	bf00      	nop
 800a640:	080121ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sp}
 800a644:	0801226c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sp}
 800a648:	20000b54 	andcs	r0, r0, r4, asr fp
 800a64c:	20009494 	mulcs	r0, r4, r4
 800a650:	20000b58 	andcs	r0, r0, r8, asr fp
 800a654:	08012104 	stmdaeq	r1, {r2, r8, sp}
 800a658:	0801211d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sp}

0800a65c <RemoteConfig::HandleDisplayGet()>:
 800a65c:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a660:	2b08      	cmp	r3, #8
 800a662:	d11d      	bne.n	800a6a0 <RemoteConfig::HandleDisplayGet()+0x44>
 800a664:	4b0f      	ldr	r3, [pc, #60]	; (800a6a4 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a666:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a668:	681b      	ldr	r3, [r3, #0]
 800a66a:	4d0f      	ldr	r5, [pc, #60]	; (800a6a8 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a66c:	7c19      	ldrb	r1, [r3, #16]
 800a66e:	4a0f      	ldr	r2, [pc, #60]	; (800a6ac <RemoteConfig::HandleDisplayGet()+0x50>)
 800a670:	4b0f      	ldr	r3, [pc, #60]	; (800a6b0 <RemoteConfig::HandleDisplayGet()+0x54>)
 800a672:	4604      	mov	r4, r0
 800a674:	2900      	cmp	r1, #0
 800a676:	bf18      	it	ne
 800a678:	4613      	movne	r3, r2
 800a67a:	6828      	ldr	r0, [r5, #0]
 800a67c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a680:	4a0c      	ldr	r2, [pc, #48]	; (800a6b4 <RemoteConfig::HandleDisplayGet()+0x58>)
 800a682:	f005 fb75 	bl	800fd70 <snprintf>
 800a686:	f642 1305 	movw	r3, #10501	; 0x2905
 800a68a:	9300      	str	r3, [sp, #0]
 800a68c:	b282      	uxth	r2, r0
 800a68e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a692:	6829      	ldr	r1, [r5, #0]
 800a694:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a698:	f002 f952 	bl	800c940 <udp_send>
 800a69c:	b003      	add	sp, #12
 800a69e:	bd30      	pop	{r4, r5, pc}
 800a6a0:	4770      	bx	lr
 800a6a2:	bf00      	nop
 800a6a4:	20009acc 	andcs	r9, r0, ip, asr #21
 800a6a8:	20000b54 	andcs	r0, r0, r4, asr fp
 800a6ac:	08012136 	stmdaeq	r1, {r1, r2, r4, r5, r8, sp}
 800a6b0:	08012133 	stmdaeq	r1, {r0, r1, r4, r5, r8, sp}
 800a6b4:	0801213a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sp}

0800a6b8 <RemoteConfig::HandleTftpSet()>:
 800a6b8:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800a6bc:	2a06      	cmp	r2, #6
 800a6be:	d109      	bne.n	800a6d4 <RemoteConfig::HandleTftpSet()+0x1c>
 800a6c0:	4a05      	ldr	r2, [pc, #20]	; (800a6d8 <RemoteConfig::HandleTftpSet()+0x20>)
 800a6c2:	6812      	ldr	r2, [r2, #0]
 800a6c4:	7992      	ldrb	r2, [r2, #6]
 800a6c6:	3a30      	subs	r2, #48	; 0x30
 800a6c8:	bf18      	it	ne
 800a6ca:	2201      	movne	r2, #1
 800a6cc:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800a6d0:	f000 bd72 	b.w	800b1b8 <RemoteConfig::PlatformHandleTftpSet()>
 800a6d4:	4770      	bx	lr
 800a6d6:	bf00      	nop
 800a6d8:	20000b54 	andcs	r0, r0, r4, asr fp

0800a6dc <RemoteConfig::HandleTftpGet()>:
 800a6dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a6de:	4604      	mov	r4, r0
 800a6e0:	f000 fd72 	bl	800b1c8 <RemoteConfig::PlatformHandleTftpGet()>
 800a6e4:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a6e8:	2b05      	cmp	r3, #5
 800a6ea:	d118      	bne.n	800a71e <RemoteConfig::HandleTftpGet()+0x42>
 800a6ec:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800a6f0:	4d0c      	ldr	r5, [pc, #48]	; (800a724 <RemoteConfig::HandleTftpGet()+0x48>)
 800a6f2:	4a0d      	ldr	r2, [pc, #52]	; (800a728 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a6f4:	4b0d      	ldr	r3, [pc, #52]	; (800a72c <RemoteConfig::HandleTftpGet()+0x50>)
 800a6f6:	6828      	ldr	r0, [r5, #0]
 800a6f8:	2900      	cmp	r1, #0
 800a6fa:	bf08      	it	eq
 800a6fc:	4613      	moveq	r3, r2
 800a6fe:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a702:	4a0b      	ldr	r2, [pc, #44]	; (800a730 <RemoteConfig::HandleTftpGet()+0x54>)
 800a704:	f005 fb34 	bl	800fd70 <snprintf>
 800a708:	f642 1305 	movw	r3, #10501	; 0x2905
 800a70c:	b282      	uxth	r2, r0
 800a70e:	9300      	str	r3, [sp, #0]
 800a710:	6829      	ldr	r1, [r5, #0]
 800a712:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a716:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a71a:	f002 f911 	bl	800c940 <udp_send>
 800a71e:	b003      	add	sp, #12
 800a720:	bd30      	pop	{r4, r5, pc}
 800a722:	bf00      	nop
 800a724:	20000b54 	andcs	r0, r0, r4, asr fp
 800a728:	08012136 	stmdaeq	r1, {r1, r2, r4, r5, r8, sp}
 800a72c:	08012133 	stmdaeq	r1, {r0, r1, r4, r5, r8, sp}
 800a730:	08012146 	stmdaeq	r1, {r1, r2, r6, r8, sp}

0800a734 <RemoteConfig::HandleVersion()>:
 800a734:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a738:	2b08      	cmp	r3, #8
 800a73a:	d116      	bne.n	800a76a <RemoteConfig::HandleVersion()+0x36>
 800a73c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a73e:	4d0b      	ldr	r5, [pc, #44]	; (800a76c <RemoteConfig::HandleVersion()+0x38>)
 800a740:	4604      	mov	r4, r0
 800a742:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a746:	4b0a      	ldr	r3, [pc, #40]	; (800a770 <RemoteConfig::HandleVersion()+0x3c>)
 800a748:	4a0a      	ldr	r2, [pc, #40]	; (800a774 <RemoteConfig::HandleVersion()+0x40>)
 800a74a:	6828      	ldr	r0, [r5, #0]
 800a74c:	f005 fb10 	bl	800fd70 <snprintf>
 800a750:	f642 1305 	movw	r3, #10501	; 0x2905
 800a754:	9300      	str	r3, [sp, #0]
 800a756:	b282      	uxth	r2, r0
 800a758:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a75c:	6829      	ldr	r1, [r5, #0]
 800a75e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a762:	f002 f8ed 	bl	800c940 <udp_send>
 800a766:	b003      	add	sp, #12
 800a768:	bd30      	pop	{r4, r5, pc}
 800a76a:	4770      	bx	lr
 800a76c:	20000b54 	andcs	r0, r0, r4, asr fp
 800a770:	20009b72 	andcs	r9, r0, r2, ror fp
 800a774:	0801214f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sp}

0800a778 <RemoteConfig::HandleUptime()>:
 800a778:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800a77c:	b1fb      	cbz	r3, 800a7be <RemoteConfig::HandleUptime()+0x46>
 800a77e:	4b10      	ldr	r3, [pc, #64]	; (800a7c0 <RemoteConfig::HandleUptime()+0x48>)
 800a780:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a782:	681a      	ldr	r2, [r3, #0]
 800a784:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a788:	4604      	mov	r4, r0
 800a78a:	2b07      	cmp	r3, #7
 800a78c:	d115      	bne.n	800a7ba <RemoteConfig::HandleUptime()+0x42>
 800a78e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a792:	4d0c      	ldr	r5, [pc, #48]	; (800a7c4 <RemoteConfig::HandleUptime()+0x4c>)
 800a794:	fbb2 f3f3 	udiv	r3, r2, r3
 800a798:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a79c:	4a0a      	ldr	r2, [pc, #40]	; (800a7c8 <RemoteConfig::HandleUptime()+0x50>)
 800a79e:	6828      	ldr	r0, [r5, #0]
 800a7a0:	f005 fae6 	bl	800fd70 <snprintf>
 800a7a4:	f642 1305 	movw	r3, #10501	; 0x2905
 800a7a8:	9300      	str	r3, [sp, #0]
 800a7aa:	b282      	uxth	r2, r0
 800a7ac:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a7b0:	6829      	ldr	r1, [r5, #0]
 800a7b2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a7b6:	f002 f8c3 	bl	800c940 <udp_send>
 800a7ba:	b003      	add	sp, #12
 800a7bc:	bd30      	pop	{r4, r5, pc}
 800a7be:	4770      	bx	lr
 800a7c0:	20009bd4 	ldrdcs	r9, [r0], -r4
 800a7c4:	20000b54 	andcs	r0, r0, r4, asr fp
 800a7c8:	0801215a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sp}

0800a7cc <RemoteConfig::HandleDisplaySet()>:
 800a7cc:	b538      	push	{r3, r4, r5, lr}
 800a7ce:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a7d2:	2b09      	cmp	r3, #9
 800a7d4:	d113      	bne.n	800a7fe <RemoteConfig::HandleDisplaySet()+0x32>
 800a7d6:	4b0a      	ldr	r3, [pc, #40]	; (800a800 <RemoteConfig::HandleDisplaySet()+0x34>)
 800a7d8:	681c      	ldr	r4, [r3, #0]
 800a7da:	4b0a      	ldr	r3, [pc, #40]	; (800a804 <RemoteConfig::HandleDisplaySet()+0x38>)
 800a7dc:	69a0      	ldr	r0, [r4, #24]
 800a7de:	681b      	ldr	r3, [r3, #0]
 800a7e0:	7a5d      	ldrb	r5, [r3, #9]
 800a7e2:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800a7e6:	4259      	negs	r1, r3
 800a7e8:	4159      	adcs	r1, r3
 800a7ea:	b140      	cbz	r0, 800a7fe <RemoteConfig::HandleDisplaySet()+0x32>
 800a7ec:	6803      	ldr	r3, [r0, #0]
 800a7ee:	7421      	strb	r1, [r4, #16]
 800a7f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a7f2:	4798      	blx	r3
 800a7f4:	2d30      	cmp	r5, #48	; 0x30
 800a7f6:	bf1e      	ittt	ne
 800a7f8:	4b03      	ldrne	r3, [pc, #12]	; (800a808 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800a7fa:	681b      	ldrne	r3, [r3, #0]
 800a7fc:	6063      	strne	r3, [r4, #4]
 800a7fe:	bd38      	pop	{r3, r4, r5, pc}
 800a800:	20009acc 	andcs	r9, r0, ip, asr #21
 800a804:	20000b54 	andcs	r0, r0, r4, asr fp
 800a808:	20009bd4 	ldrdcs	r9, [r0], -r4

0800a80c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a80c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a810:	f100 0a0c 	add.w	sl, r0, #12
 800a814:	4604      	mov	r4, r0
 800a816:	e9c0 1200 	strd	r1, r2, [r0]
 800a81a:	6083      	str	r3, [r0, #8]
 800a81c:	4650      	mov	r0, sl
 800a81e:	4690      	mov	r8, r2
 800a820:	4689      	mov	r9, r1
 800a822:	461f      	mov	r7, r3
 800a824:	f000 fd10 	bl	800b248 <HttpDaemon::HttpDaemon()>
 800a828:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a82c:	2500      	movs	r5, #0
 800a82e:	4e16      	ldr	r6, [pc, #88]	; (800a888 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800a830:	f8df b058 	ldr.w	fp, [pc, #88]	; 800a88c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800a834:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a838:	4b15      	ldr	r3, [pc, #84]	; (800a890 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800a83a:	4631      	mov	r1, r6
 800a83c:	f8db 0000 	ldr.w	r0, [fp]
 800a840:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800a844:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800a848:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800a84c:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800a850:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800a854:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800a858:	601c      	str	r4, [r3, #0]
 800a85a:	f002 fd45 	bl	800d2e8 <Network::MacAddressCopyTo(unsigned char*)>
 800a85e:	f642 1105 	movw	r1, #10501	; 0x2905
 800a862:	f8db 0000 	ldr.w	r0, [fp]
 800a866:	f886 9006 	strb.w	r9, [r6, #6]
 800a86a:	f886 8007 	strb.w	r8, [r6, #7]
 800a86e:	7237      	strb	r7, [r6, #8]
 800a870:	7275      	strb	r5, [r6, #9]
 800a872:	f002 fd33 	bl	800d2dc <Network::Begin(unsigned short)>
 800a876:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a87a:	4650      	mov	r0, sl
 800a87c:	f000 fcfc 	bl	800b278 <HttpDaemon::Start()>
 800a880:	4620      	mov	r0, r4
 800a882:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a886:	bf00      	nop
 800a888:	20000b58 	andcs	r0, r0, r8, asr fp
 800a88c:	20009494 	mulcs	r0, r4, r4
 800a890:	20000b7c 	andcs	r0, r0, ip, ror fp

0800a894 <RemoteConfig::GetStringNode() const>:
 800a894:	2012      	movs	r0, #18
 800a896:	4b03      	ldr	r3, [pc, #12]	; (800a8a4 <RemoteConfig::GetStringNode() const+0x10>)
 800a898:	799a      	ldrb	r2, [r3, #6]
 800a89a:	4b03      	ldr	r3, [pc, #12]	; (800a8a8 <RemoteConfig::GetStringNode() const+0x14>)
 800a89c:	fb00 3002 	mla	r0, r0, r2, r3
 800a8a0:	4770      	bx	lr
 800a8a2:	bf00      	nop
 800a8a4:	20000b58 	andcs	r0, r0, r8, asr fp
 800a8a8:	080121ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sp}

0800a8ac <RemoteConfig::GetStringOutput() const>:
 800a8ac:	200c      	movs	r0, #12
 800a8ae:	4b03      	ldr	r3, [pc, #12]	; (800a8bc <RemoteConfig::GetStringOutput() const+0x10>)
 800a8b0:	79da      	ldrb	r2, [r3, #7]
 800a8b2:	4b03      	ldr	r3, [pc, #12]	; (800a8c0 <RemoteConfig::GetStringOutput() const+0x14>)
 800a8b4:	fb00 3002 	mla	r0, r0, r2, r3
 800a8b8:	4770      	bx	lr
 800a8ba:	bf00      	nop
 800a8bc:	20000b58 	andcs	r0, r0, r8, asr fp
 800a8c0:	0801226c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sp}

0800a8c4 <RemoteConfig::SetDisable(bool)>:
 800a8c4:	b538      	push	{r3, r4, r5, lr}
 800a8c6:	4604      	mov	r4, r0
 800a8c8:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800a8cc:	b171      	cbz	r1, 800a8ec <RemoteConfig::SetDisable(bool)+0x28>
 800a8ce:	b963      	cbnz	r3, 800a8ea <RemoteConfig::SetDisable(bool)+0x26>
 800a8d0:	4b0d      	ldr	r3, [pc, #52]	; (800a908 <RemoteConfig::SetDisable(bool)+0x44>)
 800a8d2:	f642 1105 	movw	r1, #10501	; 0x2905
 800a8d6:	6818      	ldr	r0, [r3, #0]
 800a8d8:	f002 fd03 	bl	800d2e2 <Network::End(unsigned short)>
 800a8dc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a8e0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a8e4:	2301      	movs	r3, #1
 800a8e6:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800a8ea:	bd38      	pop	{r3, r4, r5, pc}
 800a8ec:	2b00      	cmp	r3, #0
 800a8ee:	d0fc      	beq.n	800a8ea <RemoteConfig::SetDisable(bool)+0x26>
 800a8f0:	4b05      	ldr	r3, [pc, #20]	; (800a908 <RemoteConfig::SetDisable(bool)+0x44>)
 800a8f2:	460d      	mov	r5, r1
 800a8f4:	6818      	ldr	r0, [r3, #0]
 800a8f6:	f642 1105 	movw	r1, #10501	; 0x2905
 800a8fa:	f002 fcef 	bl	800d2dc <Network::Begin(unsigned short)>
 800a8fe:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800a902:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a906:	e7f0      	b.n	800a8ea <RemoteConfig::SetDisable(bool)+0x26>
 800a908:	20009494 	mulcs	r0, r4, r4

0800a90c <RemoteConfig::SetDisplayName(char const*)>:
 800a90c:	2217      	movs	r2, #23
 800a90e:	4809      	ldr	r0, [pc, #36]	; (800a934 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a910:	b508      	push	{r3, lr}
 800a912:	1e4b      	subs	r3, r1, #1
 800a914:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a918:	b931      	cbnz	r1, 800a928 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a91a:	f004 ffdf 	bl	800f8dc <memset>
 800a91e:	2200      	movs	r2, #0
 800a920:	4b05      	ldr	r3, [pc, #20]	; (800a938 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a922:	f883 2020 	strb.w	r2, [r3, #32]
 800a926:	bd08      	pop	{r3, pc}
 800a928:	3a01      	subs	r2, #1
 800a92a:	f800 1b01 	strb.w	r1, [r0], #1
 800a92e:	d1f1      	bne.n	800a914 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a930:	e7f5      	b.n	800a91e <RemoteConfig::SetDisplayName(char const*)+0x12>
 800a932:	bf00      	nop
 800a934:	20000b61 	andcs	r0, r0, r1, ror #22
 800a938:	20000b58 	andcs	r0, r0, r8, asr fp

0800a93c <RemoteConfig::HandleGet(void*, unsigned int)>:
 800a93c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a93e:	4604      	mov	r4, r0
 800a940:	4616      	mov	r6, r2
 800a942:	460d      	mov	r5, r1
 800a944:	4f29      	ldr	r7, [pc, #164]	; (800a9ec <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800a946:	b085      	sub	sp, #20
 800a948:	b9b9      	cbnz	r1, 800a97a <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800a94a:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800a94e:	6839      	ldr	r1, [r7, #0]
 800a950:	aa03      	add	r2, sp, #12
 800a952:	3105      	adds	r1, #5
 800a954:	9303      	str	r3, [sp, #12]
 800a956:	f000 fc05 	bl	800b164 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a95a:	1e03      	subs	r3, r0, #0
 800a95c:	da1d      	bge.n	800a99a <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a95e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a962:	220b      	movs	r2, #11
 800a964:	9300      	str	r3, [sp, #0]
 800a966:	4922      	ldr	r1, [pc, #136]	; (800a9f0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a968:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a96c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a970:	f001 ffe6 	bl	800c940 <udp_send>
 800a974:	200c      	movs	r0, #12
 800a976:	b005      	add	sp, #20
 800a978:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a97a:	9203      	str	r2, [sp, #12]
 800a97c:	aa03      	add	r2, sp, #12
 800a97e:	6039      	str	r1, [r7, #0]
 800a980:	f000 fbf0 	bl	800b164 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a984:	1e03      	subs	r3, r0, #0
 800a986:	da08      	bge.n	800a99a <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a988:	2e0b      	cmp	r6, #11
 800a98a:	4632      	mov	r2, r6
 800a98c:	4628      	mov	r0, r5
 800a98e:	bf28      	it	cs
 800a990:	220b      	movcs	r2, #11
 800a992:	4917      	ldr	r1, [pc, #92]	; (800a9f0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a994:	f004 ff80 	bl	800f898 <memcpy>
 800a998:	e7ec      	b.n	800a974 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800a99a:	201c      	movs	r0, #28
 800a99c:	4343      	muls	r3, r0
 800a99e:	4915      	ldr	r1, [pc, #84]	; (800a9f4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a9a0:	18ca      	adds	r2, r1, r3
 800a9a2:	6852      	ldr	r2, [r2, #4]
 800a9a4:	58cb      	ldr	r3, [r1, r3]
 800a9a6:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a9aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a9ae:	07d2      	lsls	r2, r2, #31
 800a9b0:	bf48      	it	mi
 800a9b2:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a9b6:	a903      	add	r1, sp, #12
 800a9b8:	bf48      	it	mi
 800a9ba:	58d3      	ldrmi	r3, [r2, r3]
 800a9bc:	4798      	blx	r3
 800a9be:	9a03      	ldr	r2, [sp, #12]
 800a9c0:	b965      	cbnz	r5, 800a9dc <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800a9c2:	f642 1305 	movw	r3, #10501	; 0x2905
 800a9c6:	6839      	ldr	r1, [r7, #0]
 800a9c8:	9300      	str	r3, [sp, #0]
 800a9ca:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a9ce:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a9d2:	b292      	uxth	r2, r2
 800a9d4:	f001 ffb4 	bl	800c940 <udp_send>
 800a9d8:	9803      	ldr	r0, [sp, #12]
 800a9da:	e7cc      	b.n	800a976 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800a9dc:	42b2      	cmp	r2, r6
 800a9de:	bf28      	it	cs
 800a9e0:	4632      	movcs	r2, r6
 800a9e2:	4628      	mov	r0, r5
 800a9e4:	6839      	ldr	r1, [r7, #0]
 800a9e6:	f004 ff62 	bl	800f8ae <memmove>
 800a9ea:	e7f5      	b.n	800a9d8 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800a9ec:	20000b54 	andcs	r0, r0, r4, asr fp
 800a9f0:	08012167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sp}
 800a9f4:	08012404 	stmdaeq	r1, {r2, sl, sp}

0800a9f8 <RemoteConfig::HandleGetNoParams()>:
 800a9f8:	2200      	movs	r2, #0
 800a9fa:	4611      	mov	r1, r2
 800a9fc:	f7ff bf9e 	b.w	800a93c <RemoteConfig::HandleGet(void*, unsigned int)>

0800aa00 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800aa00:	b510      	push	{r4, lr}
 800aa02:	460c      	mov	r4, r1
 800aa04:	4b07      	ldr	r3, [pc, #28]	; (800aa24 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800aa06:	b08a      	sub	sp, #40	; 0x28
 800aa08:	6819      	ldr	r1, [r3, #0]
 800aa0a:	a801      	add	r0, sp, #4
 800aa0c:	f000 fa00 	bl	800ae10 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800aa10:	4905      	ldr	r1, [pc, #20]	; (800aa28 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800aa12:	4623      	mov	r3, r4
 800aa14:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa18:	6809      	ldr	r1, [r1, #0]
 800aa1a:	a801      	add	r0, sp, #4
 800aa1c:	f000 fb1c 	bl	800b058 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800aa20:	b00a      	add	sp, #40	; 0x28
 800aa22:	bd10      	pop	{r4, pc}
 800aa24:	20001bac 	andcs	r1, r0, ip, lsr #23
 800aa28:	20000b54 	andcs	r0, r0, r4, asr fp

0800aa2c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800aa2c:	b513      	push	{r0, r1, r4, lr}
 800aa2e:	460c      	mov	r4, r1
 800aa30:	4b07      	ldr	r3, [pc, #28]	; (800aa50 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800aa32:	a801      	add	r0, sp, #4
 800aa34:	6819      	ldr	r1, [r3, #0]
 800aa36:	f002 fe31 	bl	800d69c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800aa3a:	4906      	ldr	r1, [pc, #24]	; (800aa54 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800aa3c:	4623      	mov	r3, r4
 800aa3e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa42:	6809      	ldr	r1, [r1, #0]
 800aa44:	a801      	add	r0, sp, #4
 800aa46:	f003 f815 	bl	800da74 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800aa4a:	b002      	add	sp, #8
 800aa4c:	bd10      	pop	{r4, pc}
 800aa4e:	bf00      	nop
 800aa50:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800aa54:	20000b54 	andcs	r0, r0, r4, asr fp

0800aa58 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800aa58:	b510      	push	{r4, lr}
 800aa5a:	460c      	mov	r4, r1
 800aa5c:	4b07      	ldr	r3, [pc, #28]	; (800aa7c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800aa5e:	b08a      	sub	sp, #40	; 0x28
 800aa60:	6819      	ldr	r1, [r3, #0]
 800aa62:	a801      	add	r0, sp, #4
 800aa64:	f7fe fd12 	bl	800948c <E131Params::E131Params(E131ParamsStore*)>
 800aa68:	4905      	ldr	r1, [pc, #20]	; (800aa80 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800aa6a:	4623      	mov	r3, r4
 800aa6c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa70:	6809      	ldr	r1, [r1, #0]
 800aa72:	a801      	add	r0, sp, #4
 800aa74:	f7fe feee 	bl	8009854 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800aa78:	b00a      	add	sp, #40	; 0x28
 800aa7a:	bd10      	pop	{r4, pc}
 800aa7c:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800aa80:	20000b54 	andcs	r0, r0, r4, asr fp

0800aa84 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800aa84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800aa86:	460c      	mov	r4, r1
 800aa88:	4b07      	ldr	r3, [pc, #28]	; (800aaa8 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800aa8a:	4668      	mov	r0, sp
 800aa8c:	6819      	ldr	r1, [r3, #0]
 800aa8e:	f7fe ffeb 	bl	8009a68 <DmxParams::DmxParams(DmxParamsStore*)>
 800aa92:	4906      	ldr	r1, [pc, #24]	; (800aaac <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800aa94:	4623      	mov	r3, r4
 800aa96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa9a:	4668      	mov	r0, sp
 800aa9c:	6809      	ldr	r1, [r1, #0]
 800aa9e:	f7ff f903 	bl	8009ca8 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800aaa2:	b004      	add	sp, #16
 800aaa4:	bd10      	pop	{r4, pc}
 800aaa6:	bf00      	nop
 800aaa8:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800aaac:	20000b54 	andcs	r0, r0, r4, asr fp

0800aab0 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800aab0:	b510      	push	{r4, lr}
 800aab2:	460c      	mov	r4, r1
 800aab4:	4b07      	ldr	r3, [pc, #28]	; (800aad4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800aab6:	b08a      	sub	sp, #40	; 0x28
 800aab8:	6819      	ldr	r1, [r3, #0]
 800aaba:	4668      	mov	r0, sp
 800aabc:	f003 fdc2 	bl	800e644 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800aac0:	4905      	ldr	r1, [pc, #20]	; (800aad8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800aac2:	4623      	mov	r3, r4
 800aac4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aac8:	4668      	mov	r0, sp
 800aaca:	6809      	ldr	r1, [r1, #0]
 800aacc:	f003 fef0 	bl	800e8b0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800aad0:	b00a      	add	sp, #40	; 0x28
 800aad2:	bd10      	pop	{r4, pc}
 800aad4:	20001b9c 	mulcs	r0, ip, fp
 800aad8:	20000b54 	andcs	r0, r0, r4, asr fp

0800aadc <RemoteConfig::HandleSet(void*, unsigned int)>:
 800aadc:	b530      	push	{r4, r5, lr}
 800aade:	b085      	sub	sp, #20
 800aae0:	4604      	mov	r4, r0
 800aae2:	9201      	str	r2, [sp, #4]
 800aae4:	b9c9      	cbnz	r1, 800ab1a <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800aae6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800aaea:	9303      	str	r3, [sp, #12]
 800aaec:	4b1d      	ldr	r3, [pc, #116]	; (800ab64 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800aaee:	aa03      	add	r2, sp, #12
 800aaf0:	6819      	ldr	r1, [r3, #0]
 800aaf2:	3101      	adds	r1, #1
 800aaf4:	f000 fb36 	bl	800b164 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aaf8:	2800      	cmp	r0, #0
 800aafa:	db24      	blt.n	800ab46 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800aafc:	221c      	movs	r2, #28
 800aafe:	4b1a      	ldr	r3, [pc, #104]	; (800ab68 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 800ab00:	fb02 3300 	mla	r3, r2, r0, r3
 800ab04:	68da      	ldr	r2, [r3, #12]
 800ab06:	689b      	ldr	r3, [r3, #8]
 800ab08:	1051      	asrs	r1, r2, #1
 800ab0a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ab0e:	07d2      	lsls	r2, r2, #31
 800ab10:	bf44      	itt	mi
 800ab12:	5862      	ldrmi	r2, [r4, r1]
 800ab14:	58d3      	ldrmi	r3, [r2, r3]
 800ab16:	4798      	blx	r3
 800ab18:	e015      	b.n	800ab46 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800ab1a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ab1e:	460d      	mov	r5, r1
 800ab20:	4611      	mov	r1, r2
 800ab22:	d810      	bhi.n	800ab46 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800ab24:	2200      	movs	r2, #0
 800ab26:	4b11      	ldr	r3, [pc, #68]	; (800ab6c <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 800ab28:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800ab2c:	781b      	ldrb	r3, [r3, #0]
 800ab2e:	07d8      	lsls	r0, r3, #31
 800ab30:	d50b      	bpl.n	800ab4a <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800ab32:	782b      	ldrb	r3, [r5, #0]
 800ab34:	2b7b      	cmp	r3, #123	; 0x7b
 800ab36:	d108      	bne.n	800ab4a <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800ab38:	3901      	subs	r1, #1
 800ab3a:	4628      	mov	r0, r5
 800ab3c:	b289      	uxth	r1, r1
 800ab3e:	f003 ff73 	bl	800ea28 <properties::convert_json_file(char*, unsigned short, bool)>
 800ab42:	2800      	cmp	r0, #0
 800ab44:	dc09      	bgt.n	800ab5a <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 800ab46:	b005      	add	sp, #20
 800ab48:	bd30      	pop	{r4, r5, pc}
 800ab4a:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 800ab4e:	4b05      	ldr	r3, [pc, #20]	; (800ab64 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800ab50:	4620      	mov	r0, r4
 800ab52:	601d      	str	r5, [r3, #0]
 800ab54:	aa01      	add	r2, sp, #4
 800ab56:	1c69      	adds	r1, r5, #1
 800ab58:	e7cc      	b.n	800aaf4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800ab5a:	b280      	uxth	r0, r0
 800ab5c:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800ab60:	e7f5      	b.n	800ab4e <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 800ab62:	bf00      	nop
 800ab64:	20000b54 	andcs	r0, r0, r4, asr fp
 800ab68:	08012404 	stmdaeq	r1, {r2, sl, sp}
 800ab6c:	20009ac8 	andcs	r9, r0, r8, asr #21

0800ab70 <RemoteConfig::Run()>:
 800ab70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ab74:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800ab78:	2b00      	cmp	r3, #0
 800ab7a:	d15e      	bne.n	800ac3a <RemoteConfig::Run()+0xca>
 800ab7c:	4604      	mov	r4, r0
 800ab7e:	4d4b      	ldr	r5, [pc, #300]	; (800acac <RemoteConfig::Run()+0x13c>)
 800ab80:	300c      	adds	r0, #12
 800ab82:	f000 fdf3 	bl	800b76c <HttpDaemon::Run()>
 800ab86:	4629      	mov	r1, r5
 800ab88:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800ab8c:	f10d 030e 	add.w	r3, sp, #14
 800ab90:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800ab94:	f001 feae 	bl	800c8f4 <udp_recv2>
 800ab98:	2803      	cmp	r0, #3
 800ab9a:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800ab9e:	d94c      	bls.n	800ac3a <RemoteConfig::Run()+0xca>
 800aba0:	682b      	ldr	r3, [r5, #0]
 800aba2:	3801      	subs	r0, #1
 800aba4:	5c1a      	ldrb	r2, [r3, r0]
 800aba6:	2a0a      	cmp	r2, #10
 800aba8:	bf08      	it	eq
 800abaa:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800abae:	7819      	ldrb	r1, [r3, #0]
 800abb0:	293f      	cmp	r1, #63	; 0x3f
 800abb2:	d137      	bne.n	800ac24 <RemoteConfig::Run()+0xb4>
 800abb4:	493e      	ldr	r1, [pc, #248]	; (800acb0 <RemoteConfig::Run()+0x140>)
 800abb6:	2200      	movs	r2, #0
 800abb8:	460f      	mov	r7, r1
 800abba:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800abbe:	3801      	subs	r0, #1
 800abc0:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800abc4:	7b8e      	ldrb	r6, [r1, #14]
 800abc6:	898d      	ldrh	r5, [r1, #12]
 800abc8:	b176      	cbz	r6, 800abe8 <RemoteConfig::Run()+0x78>
 800abca:	4285      	cmp	r5, r0
 800abcc:	d30e      	bcc.n	800abec <RemoteConfig::Run()+0x7c>
 800abce:	3201      	adds	r2, #1
 800abd0:	2a09      	cmp	r2, #9
 800abd2:	f101 0110 	add.w	r1, r1, #16
 800abd6:	d1f5      	bne.n	800abc4 <RemoteConfig::Run()+0x54>
 800abd8:	f642 1305 	movw	r3, #10501	; 0x2905
 800abdc:	9300      	str	r3, [sp, #0]
 800abde:	2208      	movs	r2, #8
 800abe0:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800abe4:	4933      	ldr	r1, [pc, #204]	; (800acb4 <RemoteConfig::Run()+0x144>)
 800abe6:	e054      	b.n	800ac92 <RemoteConfig::Run()+0x122>
 800abe8:	4285      	cmp	r5, r0
 800abea:	d1f0      	bne.n	800abce <RemoteConfig::Run()+0x5e>
 800abec:	688e      	ldr	r6, [r1, #8]
 800abee:	f103 0c01 	add.w	ip, r3, #1
 800abf2:	4435      	add	r5, r6
 800abf4:	42b5      	cmp	r5, r6
 800abf6:	d006      	beq.n	800ac06 <RemoteConfig::Run()+0x96>
 800abf8:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800abfc:	f816 eb01 	ldrb.w	lr, [r6], #1
 800ac00:	45f0      	cmp	r8, lr
 800ac02:	d0f7      	beq.n	800abf4 <RemoteConfig::Run()+0x84>
 800ac04:	e7e3      	b.n	800abce <RemoteConfig::Run()+0x5e>
 800ac06:	0113      	lsls	r3, r2, #4
 800ac08:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800ac0c:	6852      	ldr	r2, [r2, #4]
 800ac0e:	58fb      	ldr	r3, [r7, r3]
 800ac10:	1051      	asrs	r1, r2, #1
 800ac12:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ac16:	07d2      	lsls	r2, r2, #31
 800ac18:	d401      	bmi.n	800ac1e <RemoteConfig::Run()+0xae>
 800ac1a:	4798      	blx	r3
 800ac1c:	e00d      	b.n	800ac3a <RemoteConfig::Run()+0xca>
 800ac1e:	5862      	ldr	r2, [r4, r1]
 800ac20:	58d3      	ldr	r3, [r2, r3]
 800ac22:	e7fa      	b.n	800ac1a <RemoteConfig::Run()+0xaa>
 800ac24:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800ac28:	b93a      	cbnz	r2, 800ac3a <RemoteConfig::Run()+0xca>
 800ac2a:	2923      	cmp	r1, #35	; 0x23
 800ac2c:	d108      	bne.n	800ac40 <RemoteConfig::Run()+0xd0>
 800ac2e:	4611      	mov	r1, r2
 800ac30:	4620      	mov	r0, r4
 800ac32:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800ac36:	f7ff ff51 	bl	800aadc <RemoteConfig::HandleSet(void*, unsigned int)>
 800ac3a:	b004      	add	sp, #16
 800ac3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac40:	2921      	cmp	r1, #33	; 0x21
 800ac42:	d1fa      	bne.n	800ac3a <RemoteConfig::Run()+0xca>
 800ac44:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac48:	3a01      	subs	r2, #1
 800ac4a:	2a05      	cmp	r2, #5
 800ac4c:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 800ac50:	d918      	bls.n	800ac84 <RemoteConfig::Run()+0x114>
 800ac52:	1c59      	adds	r1, r3, #1
 800ac54:	4608      	mov	r0, r1
 800ac56:	4d18      	ldr	r5, [pc, #96]	; (800acb8 <RemoteConfig::Run()+0x148>)
 800ac58:	f103 0c06 	add.w	ip, r3, #6
 800ac5c:	4560      	cmp	r0, ip
 800ac5e:	d01d      	beq.n	800ac9c <RemoteConfig::Run()+0x12c>
 800ac60:	f810 7b01 	ldrb.w	r7, [r0], #1
 800ac64:	f815 6b01 	ldrb.w	r6, [r5], #1
 800ac68:	42b7      	cmp	r7, r6
 800ac6a:	d0f7      	beq.n	800ac5c <RemoteConfig::Run()+0xec>
 800ac6c:	2a08      	cmp	r2, #8
 800ac6e:	d909      	bls.n	800ac84 <RemoteConfig::Run()+0x114>
 800ac70:	4a12      	ldr	r2, [pc, #72]	; (800acbc <RemoteConfig::Run()+0x14c>)
 800ac72:	3309      	adds	r3, #9
 800ac74:	428b      	cmp	r3, r1
 800ac76:	d017      	beq.n	800aca8 <RemoteConfig::Run()+0x138>
 800ac78:	f811 5b01 	ldrb.w	r5, [r1], #1
 800ac7c:	f812 0b01 	ldrb.w	r0, [r2], #1
 800ac80:	4285      	cmp	r5, r0
 800ac82:	d0f7      	beq.n	800ac74 <RemoteConfig::Run()+0x104>
 800ac84:	f642 1305 	movw	r3, #10501	; 0x2905
 800ac88:	2208      	movs	r2, #8
 800ac8a:	9300      	str	r3, [sp, #0]
 800ac8c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ac90:	490b      	ldr	r1, [pc, #44]	; (800acc0 <RemoteConfig::Run()+0x150>)
 800ac92:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800ac96:	f001 fe53 	bl	800c940 <udp_send>
 800ac9a:	e7ce      	b.n	800ac3a <RemoteConfig::Run()+0xca>
 800ac9c:	2300      	movs	r3, #0
 800ac9e:	4a09      	ldr	r2, [pc, #36]	; (800acc4 <RemoteConfig::Run()+0x154>)
 800aca0:	011b      	lsls	r3, r3, #4
 800aca2:	4620      	mov	r0, r4
 800aca4:	58d3      	ldr	r3, [r2, r3]
 800aca6:	e7b8      	b.n	800ac1a <RemoteConfig::Run()+0xaa>
 800aca8:	2301      	movs	r3, #1
 800acaa:	e7f8      	b.n	800ac9e <RemoteConfig::Run()+0x12e>
 800acac:	20000b54 	andcs	r0, r0, r4, asr fp
 800acb0:	080122fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sp}
 800acb4:	0801218b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sp}
 800acb8:	08012173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sp}
 800acbc:	08012179 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sp}
 800acc0:	08012182 	stmdaeq	r1, {r1, r7, r8, sp}
 800acc4:	0801238c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sp}

0800acc8 <RemoteConfig::HandleSetRconfig()>:
 800acc8:	b510      	push	{r4, lr}
 800acca:	4604      	mov	r4, r0
 800accc:	4b09      	ldr	r3, [pc, #36]	; (800acf4 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800acce:	b08a      	sub	sp, #40	; 0x28
 800acd0:	6819      	ldr	r1, [r3, #0]
 800acd2:	a801      	add	r0, sp, #4
 800acd4:	f000 f89c 	bl	800ae10 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800acd8:	4b07      	ldr	r3, [pc, #28]	; (800acf8 <RemoteConfig::HandleSetRconfig()+0x30>)
 800acda:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800acde:	6819      	ldr	r1, [r3, #0]
 800ace0:	a801      	add	r0, sp, #4
 800ace2:	f000 f8ab 	bl	800ae3c <RemoteConfigParams::Load(char const*, unsigned int)>
 800ace6:	4621      	mov	r1, r4
 800ace8:	a801      	add	r0, sp, #4
 800acea:	f000 f9c2 	bl	800b072 <RemoteConfigParams::Set(RemoteConfig*)>
 800acee:	b00a      	add	sp, #40	; 0x28
 800acf0:	bd10      	pop	{r4, pc}
 800acf2:	bf00      	nop
 800acf4:	20001bac 	andcs	r1, r0, ip, lsr #23
 800acf8:	20000b54 	andcs	r0, r0, r4, asr fp

0800acfc <RemoteConfig::HandleSetNetworkTxt()>:
 800acfc:	b513      	push	{r0, r1, r4, lr}
 800acfe:	4604      	mov	r4, r0
 800ad00:	4b06      	ldr	r3, [pc, #24]	; (800ad1c <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800ad02:	a801      	add	r0, sp, #4
 800ad04:	6819      	ldr	r1, [r3, #0]
 800ad06:	f002 fcc9 	bl	800d69c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ad0a:	4b05      	ldr	r3, [pc, #20]	; (800ad20 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800ad0c:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ad10:	6819      	ldr	r1, [r3, #0]
 800ad12:	a801      	add	r0, sp, #4
 800ad14:	f002 fce2 	bl	800d6dc <NetworkParams::Load(char const*, unsigned int)>
 800ad18:	b002      	add	sp, #8
 800ad1a:	bd10      	pop	{r4, pc}
 800ad1c:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800ad20:	20000b54 	andcs	r0, r0, r4, asr fp

0800ad24 <RemoteConfig::HandleSetE131Txt()>:
 800ad24:	b510      	push	{r4, lr}
 800ad26:	4604      	mov	r4, r0
 800ad28:	4b07      	ldr	r3, [pc, #28]	; (800ad48 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800ad2a:	b08a      	sub	sp, #40	; 0x28
 800ad2c:	6819      	ldr	r1, [r3, #0]
 800ad2e:	a801      	add	r0, sp, #4
 800ad30:	f7fe fbac 	bl	800948c <E131Params::E131Params(E131ParamsStore*)>
 800ad34:	4b05      	ldr	r3, [pc, #20]	; (800ad4c <RemoteConfig::HandleSetE131Txt()+0x28>)
 800ad36:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ad3a:	6819      	ldr	r1, [r3, #0]
 800ad3c:	a801      	add	r0, sp, #4
 800ad3e:	f7fe fbd1 	bl	80094e4 <E131Params::Load(char const*, unsigned int)>
 800ad42:	b00a      	add	sp, #40	; 0x28
 800ad44:	bd10      	pop	{r4, pc}
 800ad46:	bf00      	nop
 800ad48:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800ad4c:	20000b54 	andcs	r0, r0, r4, asr fp

0800ad50 <RemoteConfig::HandleSetParamsTxt()>:
 800ad50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ad52:	4604      	mov	r4, r0
 800ad54:	4b06      	ldr	r3, [pc, #24]	; (800ad70 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800ad56:	4668      	mov	r0, sp
 800ad58:	6819      	ldr	r1, [r3, #0]
 800ad5a:	f7fe fe85 	bl	8009a68 <DmxParams::DmxParams(DmxParamsStore*)>
 800ad5e:	4b05      	ldr	r3, [pc, #20]	; (800ad74 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800ad60:	4668      	mov	r0, sp
 800ad62:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ad66:	6819      	ldr	r1, [r3, #0]
 800ad68:	f7fe fe96 	bl	8009a98 <DmxParams::Load(char const*, unsigned int)>
 800ad6c:	b004      	add	sp, #16
 800ad6e:	bd10      	pop	{r4, pc}
 800ad70:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800ad74:	20000b54 	andcs	r0, r0, r4, asr fp

0800ad78 <RemoteConfig::HandleSetDisplayTxt()>:
 800ad78:	b510      	push	{r4, lr}
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	4b07      	ldr	r3, [pc, #28]	; (800ad9c <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800ad7e:	b08a      	sub	sp, #40	; 0x28
 800ad80:	6819      	ldr	r1, [r3, #0]
 800ad82:	4668      	mov	r0, sp
 800ad84:	f003 fc5e 	bl	800e644 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800ad88:	4b05      	ldr	r3, [pc, #20]	; (800ada0 <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 800ad8a:	4668      	mov	r0, sp
 800ad8c:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ad90:	6819      	ldr	r1, [r3, #0]
 800ad92:	f003 fc71 	bl	800e678 <DisplayUdfParams::Load(char const*, unsigned int)>
 800ad96:	b00a      	add	sp, #40	; 0x28
 800ad98:	bd10      	pop	{r4, pc}
 800ad9a:	bf00      	nop
 800ad9c:	20001b9c 	mulcs	r0, ip, fp
 800ada0:	20000b54 	andcs	r0, r0, r4, asr fp

0800ada4 <RemoteConfig::HandleFactory()>:
 800ada4:	b538      	push	{r3, r4, r5, lr}
 800ada6:	2400      	movs	r4, #0
 800ada8:	4d04      	ldr	r5, [pc, #16]	; (800adbc <RemoteConfig::HandleFactory()+0x18>)
 800adaa:	4621      	mov	r1, r4
 800adac:	6828      	ldr	r0, [r5, #0]
 800adae:	3401      	adds	r4, #1
 800adb0:	f000 ff18 	bl	800bbe4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800adb4:	2c1c      	cmp	r4, #28
 800adb6:	d1f8      	bne.n	800adaa <RemoteConfig::HandleFactory()+0x6>
 800adb8:	bd38      	pop	{r3, r4, r5, pc}
 800adba:	bf00      	nop
 800adbc:	20001b94 	mulcs	r0, r4, fp

0800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800adc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800adc2:	460b      	mov	r3, r1
 800adc4:	8885      	ldrh	r5, [r0, #4]
 800adc6:	88c1      	ldrh	r1, [r0, #6]
 800adc8:	42a9      	cmp	r1, r5
 800adca:	d214      	bcs.n	800adf6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800adcc:	4604      	mov	r4, r0
 800adce:	6800      	ldr	r0, [r0, #0]
 800add0:	1a6d      	subs	r5, r5, r1
 800add2:	4408      	add	r0, r1
 800add4:	7a21      	ldrb	r1, [r4, #8]
 800add6:	b91a      	cbnz	r2, 800ade0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800add8:	b919      	cbnz	r1, 800ade2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800adda:	4a0a      	ldr	r2, [pc, #40]	; (800ae04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800addc:	9100      	str	r1, [sp, #0]
 800adde:	e002      	b.n	800ade6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ade0:	b159      	cbz	r1, 800adfa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ade2:	9200      	str	r2, [sp, #0]
 800ade4:	4a08      	ldr	r2, [pc, #32]	; (800ae08 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ade6:	4629      	mov	r1, r5
 800ade8:	f004 ffc2 	bl	800fd70 <snprintf>
 800adec:	4285      	cmp	r5, r0
 800adee:	bfa2      	ittt	ge
 800adf0:	88e3      	ldrhge	r3, [r4, #6]
 800adf2:	181b      	addge	r3, r3, r0
 800adf4:	80e3      	strhge	r3, [r4, #6]
 800adf6:	b003      	add	sp, #12
 800adf8:	bd30      	pop	{r4, r5, pc}
 800adfa:	2201      	movs	r2, #1
 800adfc:	9200      	str	r2, [sp, #0]
 800adfe:	4a03      	ldr	r2, [pc, #12]	; (800ae0c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800ae00:	e7f1      	b.n	800ade6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ae02:	bf00      	nop
 800ae04:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 800ae08:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 800ae0c:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

0800ae10 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800ae10:	b510      	push	{r4, lr}
 800ae12:	4604      	mov	r4, r0
 800ae14:	2220      	movs	r2, #32
 800ae16:	f840 1b04 	str.w	r1, [r0], #4
 800ae1a:	2100      	movs	r1, #0
 800ae1c:	f004 fd5e 	bl	800f8dc <memset>
 800ae20:	4620      	mov	r0, r4
 800ae22:	bd10      	pop	{r4, pc}

0800ae24 <RemoteConfigParams::Load()>:
 800ae24:	b508      	push	{r3, lr}
 800ae26:	2300      	movs	r3, #0
 800ae28:	4601      	mov	r1, r0
 800ae2a:	6043      	str	r3, [r0, #4]
 800ae2c:	6800      	ldr	r0, [r0, #0]
 800ae2e:	b120      	cbz	r0, 800ae3a <RemoteConfigParams::Load()+0x16>
 800ae30:	6803      	ldr	r3, [r0, #0]
 800ae32:	3104      	adds	r1, #4
 800ae34:	68db      	ldr	r3, [r3, #12]
 800ae36:	4798      	blx	r3
 800ae38:	2001      	movs	r0, #1
 800ae3a:	bd08      	pop	{r3, pc}

0800ae3c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800ae3c:	2300      	movs	r3, #0
 800ae3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae40:	460d      	mov	r5, r1
 800ae42:	4616      	mov	r6, r2
 800ae44:	4604      	mov	r4, r0
 800ae46:	6043      	str	r3, [r0, #4]
 800ae48:	4602      	mov	r2, r0
 800ae4a:	490a      	ldr	r1, [pc, #40]	; (800ae74 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800ae4c:	4668      	mov	r0, sp
 800ae4e:	f003 ff39 	bl	800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ae52:	4632      	mov	r2, r6
 800ae54:	4629      	mov	r1, r5
 800ae56:	4668      	mov	r0, sp
 800ae58:	f003 ff38 	bl	800eccc <ReadConfigFile::Read(char const*, unsigned int)>
 800ae5c:	4621      	mov	r1, r4
 800ae5e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ae62:	6803      	ldr	r3, [r0, #0]
 800ae64:	689b      	ldr	r3, [r3, #8]
 800ae66:	4798      	blx	r3
 800ae68:	4668      	mov	r0, sp
 800ae6a:	f003 ff2e 	bl	800ecca <ReadConfigFile::~ReadConfigFile()>
 800ae6e:	b002      	add	sp, #8
 800ae70:	bd70      	pop	{r4, r5, r6, pc}
 800ae72:	bf00      	nop
 800ae74:	0800af35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, fp, sp, pc}

0800ae78 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800ae78:	6843      	ldr	r3, [r0, #4]
 800ae7a:	b111      	cbz	r1, 800ae82 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800ae7c:	4313      	orrs	r3, r2
 800ae7e:	6043      	str	r3, [r0, #4]
 800ae80:	4770      	bx	lr
 800ae82:	ea23 0302 	bic.w	r3, r3, r2
 800ae86:	e7fa      	b.n	800ae7e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800ae88 <RemoteConfigParams::callbackFunction(char const*)>:
 800ae88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae8a:	460d      	mov	r5, r1
 800ae8c:	4604      	mov	r4, r0
 800ae8e:	4923      	ldr	r1, [pc, #140]	; (800af1c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800ae90:	4628      	mov	r0, r5
 800ae92:	f10d 0203 	add.w	r2, sp, #3
 800ae96:	f003 ffc4 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ae9a:	b938      	cbnz	r0, 800aeac <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800ae9c:	2201      	movs	r2, #1
 800ae9e:	4620      	mov	r0, r4
 800aea0:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800aea4:	f7ff ffe8 	bl	800ae78 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800aea8:	b003      	add	sp, #12
 800aeaa:	bd30      	pop	{r4, r5, pc}
 800aeac:	4628      	mov	r0, r5
 800aeae:	491c      	ldr	r1, [pc, #112]	; (800af20 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800aeb0:	f10d 0203 	add.w	r2, sp, #3
 800aeb4:	f003 ffb5 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aeb8:	b908      	cbnz	r0, 800aebe <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800aeba:	2202      	movs	r2, #2
 800aebc:	e7ef      	b.n	800ae9e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800aebe:	4628      	mov	r0, r5
 800aec0:	4918      	ldr	r1, [pc, #96]	; (800af24 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800aec2:	f10d 0203 	add.w	r2, sp, #3
 800aec6:	f003 ffac 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aeca:	b908      	cbnz	r0, 800aed0 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800aecc:	2204      	movs	r2, #4
 800aece:	e7e6      	b.n	800ae9e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800aed0:	4628      	mov	r0, r5
 800aed2:	4915      	ldr	r1, [pc, #84]	; (800af28 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800aed4:	f10d 0203 	add.w	r2, sp, #3
 800aed8:	f003 ffa3 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aedc:	b908      	cbnz	r0, 800aee2 <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800aede:	2208      	movs	r2, #8
 800aee0:	e7dd      	b.n	800ae9e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800aee2:	4628      	mov	r0, r5
 800aee4:	4911      	ldr	r1, [pc, #68]	; (800af2c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800aee6:	f10d 0203 	add.w	r2, sp, #3
 800aeea:	f003 ff9a 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aeee:	b908      	cbnz	r0, 800aef4 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800aef0:	2220      	movs	r2, #32
 800aef2:	e7d4      	b.n	800ae9e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800aef4:	2317      	movs	r3, #23
 800aef6:	4628      	mov	r0, r5
 800aef8:	9301      	str	r3, [sp, #4]
 800aefa:	490d      	ldr	r1, [pc, #52]	; (800af30 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800aefc:	ab01      	add	r3, sp, #4
 800aefe:	f104 020c 	add.w	r2, r4, #12
 800af02:	f003 ff17 	bl	800ed34 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800af06:	2800      	cmp	r0, #0
 800af08:	d1ce      	bne.n	800aea8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800af0a:	9b01      	ldr	r3, [sp, #4]
 800af0c:	4423      	add	r3, r4
 800af0e:	7318      	strb	r0, [r3, #12]
 800af10:	6863      	ldr	r3, [r4, #4]
 800af12:	f043 0310 	orr.w	r3, r3, #16
 800af16:	6063      	str	r3, [r4, #4]
 800af18:	e7c6      	b.n	800aea8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800af1a:	bf00      	nop
 800af1c:	0801276c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, sp}
 800af20:	0801278d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, sl, sp}
 800af24:	0801279b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, sp}
 800af28:	080127a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, sp}
 800af2c:	080127b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, sp}
 800af30:	08012780 	stmdaeq	r1, {r7, r8, r9, sl, sp}

0800af34 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800af34:	f7ff bfa8 	b.w	800ae88 <RemoteConfigParams::callbackFunction(char const*)>

0800af38 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800af38:	b570      	push	{r4, r5, r6, lr}
 800af3a:	4604      	mov	r4, r0
 800af3c:	4615      	mov	r5, r2
 800af3e:	461e      	mov	r6, r3
 800af40:	b086      	sub	sp, #24
 800af42:	3004      	adds	r0, #4
 800af44:	2900      	cmp	r1, #0
 800af46:	d040      	beq.n	800afca <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800af48:	2220      	movs	r2, #32
 800af4a:	f004 fcb0 	bl	800f8ae <memmove>
 800af4e:	4633      	mov	r3, r6
 800af50:	462a      	mov	r2, r5
 800af52:	4937      	ldr	r1, [pc, #220]	; (800b030 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800af54:	a803      	add	r0, sp, #12
 800af56:	f003 fe15 	bl	800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800af5a:	6862      	ldr	r2, [r4, #4]
 800af5c:	4935      	ldr	r1, [pc, #212]	; (800b034 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800af5e:	f002 0201 	and.w	r2, r2, #1
 800af62:	a803      	add	r0, sp, #12
 800af64:	f7ff ff2c 	bl	800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af68:	6862      	ldr	r2, [r4, #4]
 800af6a:	4933      	ldr	r1, [pc, #204]	; (800b038 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800af6c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800af70:	a803      	add	r0, sp, #12
 800af72:	f7ff ff25 	bl	800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af76:	6862      	ldr	r2, [r4, #4]
 800af78:	4930      	ldr	r1, [pc, #192]	; (800b03c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800af7a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800af7e:	a803      	add	r0, sp, #12
 800af80:	f7ff ff1e 	bl	800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af84:	6862      	ldr	r2, [r4, #4]
 800af86:	492e      	ldr	r1, [pc, #184]	; (800b040 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800af88:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800af8c:	a803      	add	r0, sp, #12
 800af8e:	f7ff ff17 	bl	800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af92:	6862      	ldr	r2, [r4, #4]
 800af94:	492b      	ldr	r1, [pc, #172]	; (800b044 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800af96:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800af9a:	a803      	add	r0, sp, #12
 800af9c:	f7ff ff10 	bl	800adc0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800afa0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800afa4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800afa8:	42a9      	cmp	r1, r5
 800afaa:	d223      	bcs.n	800aff4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800afac:	9803      	ldr	r0, [sp, #12]
 800afae:	1a6d      	subs	r5, r5, r1
 800afb0:	4408      	add	r0, r1
 800afb2:	6861      	ldr	r1, [r4, #4]
 800afb4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800afb8:	06c9      	lsls	r1, r1, #27
 800afba:	f104 030c 	add.w	r3, r4, #12
 800afbe:	d40b      	bmi.n	800afd8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800afc0:	b95a      	cbnz	r2, 800afda <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800afc2:	9300      	str	r3, [sp, #0]
 800afc4:	4a20      	ldr	r2, [pc, #128]	; (800b048 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800afc6:	4b21      	ldr	r3, [pc, #132]	; (800b04c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800afc8:	e00a      	b.n	800afe0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800afca:	6823      	ldr	r3, [r4, #0]
 800afcc:	4601      	mov	r1, r0
 800afce:	681a      	ldr	r2, [r3, #0]
 800afd0:	4618      	mov	r0, r3
 800afd2:	68d2      	ldr	r2, [r2, #12]
 800afd4:	4790      	blx	r2
 800afd6:	e7ba      	b.n	800af4e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800afd8:	b32a      	cbz	r2, 800b026 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800afda:	9300      	str	r3, [sp, #0]
 800afdc:	4a1c      	ldr	r2, [pc, #112]	; (800b050 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800afde:	4b1b      	ldr	r3, [pc, #108]	; (800b04c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800afe0:	4629      	mov	r1, r5
 800afe2:	f004 fec5 	bl	800fd70 <snprintf>
 800afe6:	4285      	cmp	r5, r0
 800afe8:	bfa2      	ittt	ge
 800afea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800afee:	18c0      	addge	r0, r0, r3
 800aff0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800aff4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aff8:	b17b      	cbz	r3, 800b01a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800affa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800affe:	9b03      	ldr	r3, [sp, #12]
 800b000:	4413      	add	r3, r2
 800b002:	227d      	movs	r2, #125	; 0x7d
 800b004:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b008:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b00c:	9903      	ldr	r1, [sp, #12]
 800b00e:	54ca      	strb	r2, [r1, r3]
 800b010:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b014:	3301      	adds	r3, #1
 800b016:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b01a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b01e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b020:	601a      	str	r2, [r3, #0]
 800b022:	b006      	add	sp, #24
 800b024:	bd70      	pop	{r4, r5, r6, pc}
 800b026:	9300      	str	r3, [sp, #0]
 800b028:	4a0a      	ldr	r2, [pc, #40]	; (800b054 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800b02a:	4b08      	ldr	r3, [pc, #32]	; (800b04c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800b02c:	e7d8      	b.n	800afe0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800b02e:	bf00      	nop
 800b030:	08012774 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, sp}
 800b034:	0801276c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, sp}
 800b038:	0801278d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, sl, sp}
 800b03c:	0801279b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, sp}
 800b040:	080127a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, sp}
 800b044:	080127b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, sp}
 800b048:	08011f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip}
 800b04c:	08012780 	stmdaeq	r1, {r7, r8, r9, sl, sp}
 800b050:	08011f22 	stmdaeq	r1, {r1, r5, r8, r9, sl, fp, ip}
 800b054:	08011f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, ip}

0800b058 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800b058:	b513      	push	{r0, r1, r4, lr}
 800b05a:	6804      	ldr	r4, [r0, #0]
 800b05c:	b914      	cbnz	r4, 800b064 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b05e:	601c      	str	r4, [r3, #0]
 800b060:	b002      	add	sp, #8
 800b062:	bd10      	pop	{r4, pc}
 800b064:	9300      	str	r3, [sp, #0]
 800b066:	4613      	mov	r3, r2
 800b068:	460a      	mov	r2, r1
 800b06a:	2100      	movs	r1, #0
 800b06c:	f7ff ff64 	bl	800af38 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800b070:	e7f6      	b.n	800b060 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b072 <RemoteConfigParams::Set(RemoteConfig*)>:
 800b072:	b538      	push	{r3, r4, r5, lr}
 800b074:	460c      	mov	r4, r1
 800b076:	4605      	mov	r5, r0
 800b078:	6841      	ldr	r1, [r0, #4]
 800b07a:	4620      	mov	r0, r4
 800b07c:	f001 0101 	and.w	r1, r1, #1
 800b080:	f7ff fc20 	bl	800a8c4 <RemoteConfig::SetDisable(bool)>
 800b084:	686b      	ldr	r3, [r5, #4]
 800b086:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b08a:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800b08e:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b092:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800b096:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800b09a:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800b09e:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800b0a2:	06db      	lsls	r3, r3, #27
 800b0a4:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800b0a8:	d506      	bpl.n	800b0b8 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800b0aa:	4620      	mov	r0, r4
 800b0ac:	f105 010c 	add.w	r1, r5, #12
 800b0b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b0b4:	f7ff bc2a 	b.w	800a90c <RemoteConfig::SetDisplayName(char const*)>
 800b0b8:	bd38      	pop	{r3, r4, r5, pc}

0800b0ba <RemoteConfigParams::Dump()>:
 800b0ba:	4770      	bx	lr

0800b0bc <RemoteConfig::HandleReboot()>:
 800b0bc:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800b0c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b0c2:	2b00      	cmp	r3, #0
 800b0c4:	d03e      	beq.n	800b144 <RemoteConfig::HandleReboot()+0x88>
 800b0c6:	2301      	movs	r3, #1
 800b0c8:	4c1f      	ldr	r4, [pc, #124]	; (800b148 <RemoteConfig::HandleReboot()+0x8c>)
 800b0ca:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800b0ce:	6825      	ldr	r5, [r4, #0]
 800b0d0:	69a8      	ldr	r0, [r5, #24]
 800b0d2:	b138      	cbz	r0, 800b0e4 <RemoteConfig::HandleReboot()+0x28>
 800b0d4:	2100      	movs	r1, #0
 800b0d6:	6803      	ldr	r3, [r0, #0]
 800b0d8:	7429      	strb	r1, [r5, #16]
 800b0da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b0dc:	4798      	blx	r3
 800b0de:	4b1b      	ldr	r3, [pc, #108]	; (800b14c <RemoteConfig::HandleReboot()+0x90>)
 800b0e0:	681b      	ldr	r3, [r3, #0]
 800b0e2:	606b      	str	r3, [r5, #4]
 800b0e4:	4d1a      	ldr	r5, [pc, #104]	; (800b150 <RemoteConfig::HandleReboot()+0x94>)
 800b0e6:	6828      	ldr	r0, [r5, #0]
 800b0e8:	f000 fe02 	bl	800bcf0 <SpiFlashStore::Flash()>
 800b0ec:	2800      	cmp	r0, #0
 800b0ee:	d1fa      	bne.n	800b0e6 <RemoteConfig::HandleReboot()+0x2a>
 800b0f0:	4b18      	ldr	r3, [pc, #96]	; (800b154 <RemoteConfig::HandleReboot()+0x98>)
 800b0f2:	6818      	ldr	r0, [r3, #0]
 800b0f4:	f002 f8ea 	bl	800d2cc <Network::Shutdown()>
 800b0f8:	4817      	ldr	r0, [pc, #92]	; (800b158 <RemoteConfig::HandleReboot()+0x9c>)
 800b0fa:	f004 fe11 	bl	800fd20 <printf>
 800b0fe:	6823      	ldr	r3, [r4, #0]
 800b100:	6998      	ldr	r0, [r3, #24]
 800b102:	b110      	cbz	r0, 800b10a <RemoteConfig::HandleReboot()+0x4e>
 800b104:	6803      	ldr	r3, [r0, #0]
 800b106:	68db      	ldr	r3, [r3, #12]
 800b108:	4798      	blx	r3
 800b10a:	6824      	ldr	r4, [r4, #0]
 800b10c:	4913      	ldr	r1, [pc, #76]	; (800b15c <RemoteConfig::HandleReboot()+0xa0>)
 800b10e:	4620      	mov	r0, r4
 800b110:	f7fc ff30 	bl	8007f74 <Display::TextStatus(char const*)>
 800b114:	7c63      	ldrb	r3, [r4, #17]
 800b116:	b18b      	cbz	r3, 800b13c <RemoteConfig::HandleReboot()+0x80>
 800b118:	2312      	movs	r3, #18
 800b11a:	f88d 3004 	strb.w	r3, [sp, #4]
 800b11e:	23bf      	movs	r3, #191	; 0xbf
 800b120:	7a20      	ldrb	r0, [r4, #8]
 800b122:	f88d 3005 	strb.w	r3, [sp, #5]
 800b126:	f88d 3006 	strb.w	r3, [sp, #6]
 800b12a:	f005 fe6d 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800b12e:	68e0      	ldr	r0, [r4, #12]
 800b130:	f005 fe62 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 800b134:	2103      	movs	r1, #3
 800b136:	a801      	add	r0, sp, #4
 800b138:	f005 fe6c 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800b13c:	4b08      	ldr	r3, [pc, #32]	; (800b160 <RemoteConfig::HandleReboot()+0xa4>)
 800b13e:	6818      	ldr	r0, [r3, #0]
 800b140:	f004 fab4 	bl	800f6ac <Hardware::Reboot()>
 800b144:	b003      	add	sp, #12
 800b146:	bd30      	pop	{r4, r5, pc}
 800b148:	20009acc 	andcs	r9, r0, ip, asr #21
 800b14c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b150:	20001b94 	mulcs	r0, r4, fp
 800b154:	20009494 	mulcs	r0, r4, r4
 800b158:	080123ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sp}
 800b15c:	080123bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sp}
 800b160:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800b164 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b164:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b168:	2000      	movs	r0, #0
 800b16a:	4d12      	ldr	r5, [pc, #72]	; (800b1b4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b16c:	f10d 0c04 	add.w	ip, sp, #4
 800b170:	6814      	ldr	r4, [r2, #0]
 800b172:	7d2b      	ldrb	r3, [r5, #20]
 800b174:	692e      	ldr	r6, [r5, #16]
 800b176:	42a3      	cmp	r3, r4
 800b178:	bf34      	ite	cc
 800b17a:	4664      	movcc	r4, ip
 800b17c:	4614      	movcs	r4, r2
 800b17e:	9301      	str	r3, [sp, #4]
 800b180:	6827      	ldr	r7, [r4, #0]
 800b182:	460c      	mov	r4, r1
 800b184:	3e01      	subs	r6, #1
 800b186:	440f      	add	r7, r1
 800b188:	42bc      	cmp	r4, r7
 800b18a:	d011      	beq.n	800b1b0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b18c:	f894 8000 	ldrb.w	r8, [r4]
 800b190:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b194:	45f0      	cmp	r8, lr
 800b196:	d009      	beq.n	800b1ac <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800b198:	3001      	adds	r0, #1
 800b19a:	2805      	cmp	r0, #5
 800b19c:	f105 051c 	add.w	r5, r5, #28
 800b1a0:	d1e6      	bne.n	800b170 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b1a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b1a6:	b002      	add	sp, #8
 800b1a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1ac:	3401      	adds	r4, #1
 800b1ae:	e7eb      	b.n	800b188 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b1b0:	6013      	str	r3, [r2, #0]
 800b1b2:	e7f8      	b.n	800b1a6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800b1b4:	08012404 	stmdaeq	r1, {r2, sl, sp}

0800b1b8 <RemoteConfig::PlatformHandleTftpSet()>:
 800b1b8:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800b1bc:	b109      	cbz	r1, 800b1c2 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b1be:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b1c2:	2002      	movs	r0, #2
 800b1c4:	f004 bfd4 	b.w	8010170 <bkp_data_write>

0800b1c8 <RemoteConfig::PlatformHandleTftpGet()>:
 800b1c8:	b510      	push	{r4, lr}
 800b1ca:	4604      	mov	r4, r0
 800b1cc:	2002      	movs	r0, #2
 800b1ce:	f004 ffe5 	bl	801019c <bkp_data_read>
 800b1d2:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b1d6:	1ac3      	subs	r3, r0, r3
 800b1d8:	4258      	negs	r0, r3
 800b1da:	4158      	adcs	r0, r3
 800b1dc:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800b1e0:	bd10      	pop	{r4, pc}

0800b1e2 <strcmp>:
 800b1e2:	1e43      	subs	r3, r0, #1
 800b1e4:	3901      	subs	r1, #1
 800b1e6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b1ea:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b1ee:	4290      	cmp	r0, r2
 800b1f0:	d102      	bne.n	800b1f8 <strcmp+0x16>
 800b1f2:	2800      	cmp	r0, #0
 800b1f4:	d1f7      	bne.n	800b1e6 <strcmp+0x4>
 800b1f6:	4770      	bx	lr
 800b1f8:	1a80      	subs	r0, r0, r2
 800b1fa:	4770      	bx	lr

0800b1fc <strcasecmp>:
 800b1fc:	b530      	push	{r4, r5, lr}
 800b1fe:	1e42      	subs	r2, r0, #1
 800b200:	3901      	subs	r1, #1
 800b202:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b206:	4604      	mov	r4, r0
 800b208:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b20c:	2b19      	cmp	r3, #25
 800b20e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b212:	bf98      	it	ls
 800b214:	f100 0420 	addls.w	r4, r0, #32
 800b218:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b21c:	2d19      	cmp	r5, #25
 800b21e:	bf98      	it	ls
 800b220:	3320      	addls	r3, #32
 800b222:	42a3      	cmp	r3, r4
 800b224:	d102      	bne.n	800b22c <strcasecmp+0x30>
 800b226:	2800      	cmp	r0, #0
 800b228:	d1eb      	bne.n	800b202 <strcasecmp+0x6>
 800b22a:	bd30      	pop	{r4, r5, pc}
 800b22c:	1ae0      	subs	r0, r4, r3
 800b22e:	e7fc      	b.n	800b22a <strcasecmp+0x2e>

0800b230 <PropertiesConfig::EnableJSON(bool)>:
 800b230:	4a04      	ldr	r2, [pc, #16]	; (800b244 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b232:	7813      	ldrb	r3, [r2, #0]
 800b234:	b118      	cbz	r0, 800b23e <PropertiesConfig::EnableJSON(bool)+0xe>
 800b236:	f043 0301 	orr.w	r3, r3, #1
 800b23a:	7013      	strb	r3, [r2, #0]
 800b23c:	4770      	bx	lr
 800b23e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b242:	e7fa      	b.n	800b23a <PropertiesConfig::EnableJSON(bool)+0xa>
 800b244:	20009ac8 	andcs	r9, r0, r8, asr #21

0800b248 <HttpDaemon::HttpDaemon()>:
 800b248:	4a0a      	ldr	r2, [pc, #40]	; (800b274 <HttpDaemon::HttpDaemon()+0x2c>)
 800b24a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b24e:	6002      	str	r2, [r0, #0]
 800b250:	2200      	movs	r2, #0
 800b252:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b256:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b25a:	2102      	movs	r1, #2
 800b25c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b260:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b264:	60c2      	str	r2, [r0, #12]
 800b266:	8402      	strh	r2, [r0, #32]
 800b268:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800b26c:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800b270:	4770      	bx	lr
 800b272:	bf00      	nop
 800b274:	080126ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, sp}

0800b278 <HttpDaemon::Start()>:
 800b278:	4b04      	ldr	r3, [pc, #16]	; (800b28c <HttpDaemon::Start()+0x14>)
 800b27a:	b510      	push	{r4, lr}
 800b27c:	2150      	movs	r1, #80	; 0x50
 800b27e:	4604      	mov	r4, r0
 800b280:	6818      	ldr	r0, [r3, #0]
 800b282:	f002 f9ff 	bl	800d684 <Network::TcpBegin(unsigned short)>
 800b286:	6120      	str	r0, [r4, #16]
 800b288:	bd10      	pop	{r4, pc}
 800b28a:	bf00      	nop
 800b28c:	20009494 	mulcs	r0, r4, r4

0800b290 <HttpDaemon::ParseMethod(char*)>:
 800b290:	b538      	push	{r3, r4, r5, lr}
 800b292:	4604      	mov	r4, r0
 800b294:	4608      	mov	r0, r1
 800b296:	491b      	ldr	r1, [pc, #108]	; (800b304 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b298:	f004 fd9a 	bl	800fdd0 <strtok>
 800b29c:	4605      	mov	r5, r0
 800b29e:	b370      	cbz	r0, 800b2fe <HttpDaemon::ParseMethod(char*)+0x6e>
 800b2a0:	4919      	ldr	r1, [pc, #100]	; (800b308 <HttpDaemon::ParseMethod(char*)+0x78>)
 800b2a2:	f7ff ff9e 	bl	800b1e2 <strcmp>
 800b2a6:	b940      	cbnz	r0, 800b2ba <HttpDaemon::ParseMethod(char*)+0x2a>
 800b2a8:	61e0      	str	r0, [r4, #28]
 800b2aa:	2000      	movs	r0, #0
 800b2ac:	4915      	ldr	r1, [pc, #84]	; (800b304 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b2ae:	f004 fd8f 	bl	800fdd0 <strtok>
 800b2b2:	b950      	cbnz	r0, 800b2ca <HttpDaemon::ParseMethod(char*)+0x3a>
 800b2b4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b2b8:	bd38      	pop	{r3, r4, r5, pc}
 800b2ba:	4628      	mov	r0, r5
 800b2bc:	4913      	ldr	r1, [pc, #76]	; (800b30c <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b2be:	f7ff ff90 	bl	800b1e2 <strcmp>
 800b2c2:	b9e0      	cbnz	r0, 800b2fe <HttpDaemon::ParseMethod(char*)+0x6e>
 800b2c4:	2301      	movs	r3, #1
 800b2c6:	61e3      	str	r3, [r4, #28]
 800b2c8:	e7ef      	b.n	800b2aa <HttpDaemon::ParseMethod(char*)+0x1a>
 800b2ca:	6060      	str	r0, [r4, #4]
 800b2cc:	4910      	ldr	r1, [pc, #64]	; (800b310 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b2ce:	2000      	movs	r0, #0
 800b2d0:	f004 fd7e 	bl	800fdd0 <strtok>
 800b2d4:	2800      	cmp	r0, #0
 800b2d6:	d0ed      	beq.n	800b2b4 <HttpDaemon::ParseMethod(char*)+0x24>
 800b2d8:	490e      	ldr	r1, [pc, #56]	; (800b314 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b2da:	f7ff ff82 	bl	800b1e2 <strcmp>
 800b2de:	2800      	cmp	r0, #0
 800b2e0:	d1e8      	bne.n	800b2b4 <HttpDaemon::ParseMethod(char*)+0x24>
 800b2e2:	490d      	ldr	r1, [pc, #52]	; (800b318 <HttpDaemon::ParseMethod(char*)+0x88>)
 800b2e4:	f004 fd74 	bl	800fdd0 <strtok>
 800b2e8:	2800      	cmp	r0, #0
 800b2ea:	d0e3      	beq.n	800b2b4 <HttpDaemon::ParseMethod(char*)+0x24>
 800b2ec:	490b      	ldr	r1, [pc, #44]	; (800b31c <HttpDaemon::ParseMethod(char*)+0x8c>)
 800b2ee:	f7ff ff78 	bl	800b1e2 <strcmp>
 800b2f2:	2800      	cmp	r0, #0
 800b2f4:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b2f8:	bf08      	it	eq
 800b2fa:	20c8      	moveq	r0, #200	; 0xc8
 800b2fc:	e7dc      	b.n	800b2b8 <HttpDaemon::ParseMethod(char*)+0x28>
 800b2fe:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b302:	e7d9      	b.n	800b2b8 <HttpDaemon::ParseMethod(char*)+0x28>
 800b304:	08012490 	stmdaeq	r1, {r4, r7, sl, sp}
 800b308:	08012492 	stmdaeq	r1, {r1, r4, r7, sl, sp}
 800b30c:	08012496 	stmdaeq	r1, {r1, r2, r4, r7, sl, sp}
 800b310:	08012500 	stmdaeq	r1, {r8, sl, sp}
 800b314:	0801249b 	stmdaeq	r1, {r0, r1, r3, r4, r7, sl, sp}
 800b318:	080124a0 	stmdaeq	r1, {r5, r7, sl, sp}
 800b31c:	080124a3 	stmdaeq	r1, {r0, r1, r5, r7, sl, sp}

0800b320 <HttpDaemon::ParseHeaderField(char*)>:
 800b320:	b538      	push	{r3, r4, r5, lr}
 800b322:	4605      	mov	r5, r0
 800b324:	4608      	mov	r0, r1
 800b326:	491d      	ldr	r1, [pc, #116]	; (800b39c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b328:	f004 fd52 	bl	800fdd0 <strtok>
 800b32c:	4604      	mov	r4, r0
 800b32e:	b910      	cbnz	r0, 800b336 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b330:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b334:	bd38      	pop	{r3, r4, r5, pc}
 800b336:	491a      	ldr	r1, [pc, #104]	; (800b3a0 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b338:	f7ff ff60 	bl	800b1fc <strcasecmp>
 800b33c:	b970      	cbnz	r0, 800b35c <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b33e:	4919      	ldr	r1, [pc, #100]	; (800b3a4 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b340:	f004 fd46 	bl	800fdd0 <strtok>
 800b344:	2800      	cmp	r0, #0
 800b346:	d0f3      	beq.n	800b330 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b348:	4917      	ldr	r1, [pc, #92]	; (800b3a8 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b34a:	f7ff ff4a 	bl	800b1e2 <strcmp>
 800b34e:	b108      	cbz	r0, 800b354 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b350:	20c8      	movs	r0, #200	; 0xc8
 800b352:	e7ef      	b.n	800b334 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b354:	2301      	movs	r3, #1
 800b356:	f885 3020 	strb.w	r3, [r5, #32]
 800b35a:	e7f9      	b.n	800b350 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b35c:	4620      	mov	r0, r4
 800b35e:	4913      	ldr	r1, [pc, #76]	; (800b3ac <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b360:	f7ff ff4c 	bl	800b1fc <strcasecmp>
 800b364:	4604      	mov	r4, r0
 800b366:	2800      	cmp	r0, #0
 800b368:	d1f2      	bne.n	800b350 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b36a:	4911      	ldr	r1, [pc, #68]	; (800b3b0 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b36c:	f004 fd30 	bl	800fdd0 <strtok>
 800b370:	2800      	cmp	r0, #0
 800b372:	d0dd      	beq.n	800b330 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b374:	1e42      	subs	r2, r0, #1
 800b376:	4623      	mov	r3, r4
 800b378:	200a      	movs	r0, #10
 800b37a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b37e:	b151      	cbz	r1, 800b396 <HttpDaemon::ParseHeaderField(char*)+0x76>
 800b380:	3930      	subs	r1, #48	; 0x30
 800b382:	2909      	cmp	r1, #9
 800b384:	d8d4      	bhi.n	800b330 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b386:	fb00 1303 	mla	r3, r0, r3, r1
 800b38a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b38e:	d9f4      	bls.n	800b37a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b390:	f240 109d 	movw	r0, #413	; 0x19d
 800b394:	e7ce      	b.n	800b334 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b396:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800b39a:	e7d9      	b.n	800b350 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b39c:	080124a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp}
 800b3a0:	080124a9 	stmdaeq	r1, {r0, r3, r5, r7, sl, sp}
 800b3a4:	080124b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, sp}
 800b3a8:	080124b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp}
 800b3ac:	080124ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, sp}
 800b3b0:	08012490 	stmdaeq	r1, {r4, r7, sl, sp}

0800b3b4 <HttpDaemon::ParseRequest()>:
 800b3b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3b6:	2400      	movs	r4, #0
 800b3b8:	4605      	mov	r5, r0
 800b3ba:	4622      	mov	r2, r4
 800b3bc:	4626      	mov	r6, r4
 800b3be:	68c1      	ldr	r1, [r0, #12]
 800b3c0:	f880 4020 	strb.w	r4, [r0, #32]
 800b3c4:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800b3c8:	8aab      	ldrh	r3, [r5, #20]
 800b3ca:	42a3      	cmp	r3, r4
 800b3cc:	d923      	bls.n	800b416 <HttpDaemon::ParseRequest()+0x62>
 800b3ce:	68eb      	ldr	r3, [r5, #12]
 800b3d0:	5d18      	ldrb	r0, [r3, r4]
 800b3d2:	280a      	cmp	r0, #10
 800b3d4:	d10e      	bne.n	800b3f4 <HttpDaemon::ParseRequest()+0x40>
 800b3d6:	4423      	add	r3, r4
 800b3d8:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b3dc:	1c57      	adds	r7, r2, #1
 800b3de:	b962      	cbnz	r2, 800b3fa <HttpDaemon::ParseRequest()+0x46>
 800b3e0:	4628      	mov	r0, r5
 800b3e2:	f7ff ff55 	bl	800b290 <HttpDaemon::ParseMethod(char*)>
 800b3e6:	28c8      	cmp	r0, #200	; 0xc8
 800b3e8:	d116      	bne.n	800b418 <HttpDaemon::ParseRequest()+0x64>
 800b3ea:	463a      	mov	r2, r7
 800b3ec:	68e9      	ldr	r1, [r5, #12]
 800b3ee:	3401      	adds	r4, #1
 800b3f0:	b2a4      	uxth	r4, r4
 800b3f2:	4421      	add	r1, r4
 800b3f4:	3401      	adds	r4, #1
 800b3f6:	b2a4      	uxth	r4, r4
 800b3f8:	e7e6      	b.n	800b3c8 <HttpDaemon::ParseRequest()+0x14>
 800b3fa:	7808      	ldrb	r0, [r1, #0]
 800b3fc:	b968      	cbnz	r0, 800b41a <HttpDaemon::ParseRequest()+0x66>
 800b3fe:	696b      	ldr	r3, [r5, #20]
 800b400:	3b01      	subs	r3, #1
 800b402:	1b1b      	subs	r3, r3, r4
 800b404:	b29b      	uxth	r3, r3
 800b406:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800b40a:	b123      	cbz	r3, 800b416 <HttpDaemon::ParseRequest()+0x62>
 800b40c:	68ea      	ldr	r2, [r5, #12]
 800b40e:	3401      	adds	r4, #1
 800b410:	4414      	add	r4, r2
 800b412:	60ac      	str	r4, [r5, #8]
 800b414:	54e0      	strb	r0, [r4, r3]
 800b416:	20c8      	movs	r0, #200	; 0xc8
 800b418:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b41a:	4628      	mov	r0, r5
 800b41c:	f7ff ff80 	bl	800b320 <HttpDaemon::ParseHeaderField(char*)>
 800b420:	e7e1      	b.n	800b3e6 <HttpDaemon::ParseRequest()+0x32>
	...

0800b424 <HttpDaemon::HandleGetTxt()>:
 800b424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b428:	6847      	ldr	r7, [r0, #4]
 800b42a:	4604      	mov	r4, r0
 800b42c:	1dbd      	adds	r5, r7, #6
 800b42e:	462b      	mov	r3, r5
 800b430:	4618      	mov	r0, r3
 800b432:	7802      	ldrb	r2, [r0, #0]
 800b434:	3301      	adds	r3, #1
 800b436:	2a00      	cmp	r2, #0
 800b438:	d1fa      	bne.n	800b430 <HttpDaemon::HandleGetTxt()+0xc>
 800b43a:	1b40      	subs	r0, r0, r5
 800b43c:	2804      	cmp	r0, #4
 800b43e:	d925      	bls.n	800b48c <HttpDaemon::HandleGetTxt()+0x68>
 800b440:	3804      	subs	r0, #4
 800b442:	4915      	ldr	r1, [pc, #84]	; (800b498 <HttpDaemon::HandleGetTxt()+0x74>)
 800b444:	4428      	add	r0, r5
 800b446:	f7ff fecc 	bl	800b1e2 <strcmp>
 800b44a:	b9f8      	cbnz	r0, 800b48c <HttpDaemon::HandleGetTxt()+0x68>
 800b44c:	4b13      	ldr	r3, [pc, #76]	; (800b49c <HttpDaemon::HandleGetTxt()+0x78>)
 800b44e:	2001      	movs	r0, #1
 800b450:	f893 8000 	ldrb.w	r8, [r3]
 800b454:	f7ff feec 	bl	800b230 <PropertiesConfig::EnableJSON(bool)>
 800b458:	4b11      	ldr	r3, [pc, #68]	; (800b4a0 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b45a:	f240 529b 	movw	r2, #1435	; 0x59b
 800b45e:	4629      	mov	r1, r5
 800b460:	6818      	ldr	r0, [r3, #0]
 800b462:	f7ff fa6b 	bl	800a93c <RemoteConfig::HandleGet(void*, unsigned int)>
 800b466:	4606      	mov	r6, r0
 800b468:	f008 0801 	and.w	r8, r8, #1
 800b46c:	4640      	mov	r0, r8
 800b46e:	f7ff fedf 	bl	800b230 <PropertiesConfig::EnableJSON(bool)>
 800b472:	b15e      	cbz	r6, 800b48c <HttpDaemon::HandleGetTxt()+0x68>
 800b474:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800b478:	3606      	adds	r6, #6
 800b47a:	3422      	adds	r4, #34	; 0x22
 800b47c:	443e      	add	r6, r7
 800b47e:	42b5      	cmp	r5, r6
 800b480:	d008      	beq.n	800b494 <HttpDaemon::HandleGetTxt()+0x70>
 800b482:	f815 3b01 	ldrb.w	r3, [r5], #1
 800b486:	f804 3b01 	strb.w	r3, [r4], #1
 800b48a:	e7f8      	b.n	800b47e <HttpDaemon::HandleGetTxt()+0x5a>
 800b48c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b494:	20c8      	movs	r0, #200	; 0xc8
 800b496:	e7fb      	b.n	800b490 <HttpDaemon::HandleGetTxt()+0x6c>
 800b498:	080123f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sp}
 800b49c:	20009ac8 	andcs	r9, r0, r8, asr #21
 800b4a0:	20000b7c 	andcs	r0, r0, ip, ror fp

0800b4a4 <HttpDaemon::HandleGet()>:
 800b4a4:	b570      	push	{r4, r5, r6, lr}
 800b4a6:	6845      	ldr	r5, [r0, #4]
 800b4a8:	4604      	mov	r4, r0
 800b4aa:	4943      	ldr	r1, [pc, #268]	; (800b5b8 <HttpDaemon::HandleGet()+0x114>)
 800b4ac:	4628      	mov	r0, r5
 800b4ae:	f7ff fe98 	bl	800b1e2 <strcmp>
 800b4b2:	b120      	cbz	r0, 800b4be <HttpDaemon::HandleGet()+0x1a>
 800b4b4:	4628      	mov	r0, r5
 800b4b6:	4941      	ldr	r1, [pc, #260]	; (800b5bc <HttpDaemon::HandleGet()+0x118>)
 800b4b8:	f7ff fe93 	bl	800b1e2 <strcmp>
 800b4bc:	b960      	cbnz	r0, 800b4d8 <HttpDaemon::HandleGet()+0x34>
 800b4be:	4621      	mov	r1, r4
 800b4c0:	4b3f      	ldr	r3, [pc, #252]	; (800b5c0 <HttpDaemon::HandleGet()+0x11c>)
 800b4c2:	4840      	ldr	r0, [pc, #256]	; (800b5c4 <HttpDaemon::HandleGet()+0x120>)
 800b4c4:	f841 3b22 	str.w	r3, [r1], #34
 800b4c8:	f000 fa7a 	bl	800b9c0 <get_file_content(char const*, char*)>
 800b4cc:	2800      	cmp	r0, #0
 800b4ce:	dd1e      	ble.n	800b50e <HttpDaemon::HandleGet()+0x6a>
 800b4d0:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b4d4:	20c8      	movs	r0, #200	; 0xc8
 800b4d6:	bd70      	pop	{r4, r5, r6, pc}
 800b4d8:	4628      	mov	r0, r5
 800b4da:	493b      	ldr	r1, [pc, #236]	; (800b5c8 <HttpDaemon::HandleGet()+0x124>)
 800b4dc:	f7ff fe81 	bl	800b1e2 <strcmp>
 800b4e0:	b928      	cbnz	r0, 800b4ee <HttpDaemon::HandleGet()+0x4a>
 800b4e2:	4621      	mov	r1, r4
 800b4e4:	4b39      	ldr	r3, [pc, #228]	; (800b5cc <HttpDaemon::HandleGet()+0x128>)
 800b4e6:	483a      	ldr	r0, [pc, #232]	; (800b5d0 <HttpDaemon::HandleGet()+0x12c>)
 800b4e8:	f841 3b22 	str.w	r3, [r1], #34
 800b4ec:	e7ec      	b.n	800b4c8 <HttpDaemon::HandleGet()+0x24>
 800b4ee:	4628      	mov	r0, r5
 800b4f0:	4938      	ldr	r1, [pc, #224]	; (800b5d4 <HttpDaemon::HandleGet()+0x130>)
 800b4f2:	f7ff fe76 	bl	800b1e2 <strcmp>
 800b4f6:	b168      	cbz	r0, 800b514 <HttpDaemon::HandleGet()+0x70>
 800b4f8:	4a37      	ldr	r2, [pc, #220]	; (800b5d8 <HttpDaemon::HandleGet()+0x134>)
 800b4fa:	1e6b      	subs	r3, r5, #1
 800b4fc:	1d6e      	adds	r6, r5, #5
 800b4fe:	42b3      	cmp	r3, r6
 800b500:	d00e      	beq.n	800b520 <HttpDaemon::HandleGet()+0x7c>
 800b502:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b506:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b50a:	4288      	cmp	r0, r1
 800b50c:	d0f7      	beq.n	800b4fe <HttpDaemon::HandleGet()+0x5a>
 800b50e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b512:	e7e0      	b.n	800b4d6 <HttpDaemon::HandleGet()+0x32>
 800b514:	4621      	mov	r1, r4
 800b516:	4b31      	ldr	r3, [pc, #196]	; (800b5dc <HttpDaemon::HandleGet()+0x138>)
 800b518:	4831      	ldr	r0, [pc, #196]	; (800b5e0 <HttpDaemon::HandleGet()+0x13c>)
 800b51a:	f841 3b22 	str.w	r3, [r1], #34
 800b51e:	e7d3      	b.n	800b4c8 <HttpDaemon::HandleGet()+0x24>
 800b520:	4b30      	ldr	r3, [pc, #192]	; (800b5e4 <HttpDaemon::HandleGet()+0x140>)
 800b522:	3506      	adds	r5, #6
 800b524:	4628      	mov	r0, r5
 800b526:	4930      	ldr	r1, [pc, #192]	; (800b5e8 <HttpDaemon::HandleGet()+0x144>)
 800b528:	6023      	str	r3, [r4, #0]
 800b52a:	f7ff fe5a 	bl	800b1e2 <strcmp>
 800b52e:	b930      	cbnz	r0, 800b53e <HttpDaemon::HandleGet()+0x9a>
 800b530:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b534:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b538:	f000 f9ca 	bl	800b8d0 <remoteconfig::json_get_list(char*, unsigned short)>
 800b53c:	e7c6      	b.n	800b4cc <HttpDaemon::HandleGet()+0x28>
 800b53e:	4628      	mov	r0, r5
 800b540:	492a      	ldr	r1, [pc, #168]	; (800b5ec <HttpDaemon::HandleGet()+0x148>)
 800b542:	f7ff fe4e 	bl	800b1e2 <strcmp>
 800b546:	b930      	cbnz	r0, 800b556 <HttpDaemon::HandleGet()+0xb2>
 800b548:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b54c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b550:	f000 f9f2 	bl	800b938 <remoteconfig::json_get_version(char*, unsigned short)>
 800b554:	e7ba      	b.n	800b4cc <HttpDaemon::HandleGet()+0x28>
 800b556:	4628      	mov	r0, r5
 800b558:	4925      	ldr	r1, [pc, #148]	; (800b5f0 <HttpDaemon::HandleGet()+0x14c>)
 800b55a:	f7ff fe42 	bl	800b1e2 <strcmp>
 800b55e:	b958      	cbnz	r0, 800b578 <HttpDaemon::HandleGet()+0xd4>
 800b560:	4b24      	ldr	r3, [pc, #144]	; (800b5f4 <HttpDaemon::HandleGet()+0x150>)
 800b562:	681b      	ldr	r3, [r3, #0]
 800b564:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800b568:	b31b      	cbz	r3, 800b5b2 <HttpDaemon::HandleGet()+0x10e>
 800b56a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b56e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b572:	f000 f9fd 	bl	800b970 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b576:	e7a9      	b.n	800b4cc <HttpDaemon::HandleGet()+0x28>
 800b578:	4628      	mov	r0, r5
 800b57a:	491f      	ldr	r1, [pc, #124]	; (800b5f8 <HttpDaemon::HandleGet()+0x154>)
 800b57c:	f7ff fe31 	bl	800b1e2 <strcmp>
 800b580:	b930      	cbnz	r0, 800b590 <HttpDaemon::HandleGet()+0xec>
 800b582:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b586:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b58a:	f000 fa01 	bl	800b990 <remoteconfig::json_get_display(char*, unsigned short)>
 800b58e:	e79d      	b.n	800b4cc <HttpDaemon::HandleGet()+0x28>
 800b590:	4628      	mov	r0, r5
 800b592:	491a      	ldr	r1, [pc, #104]	; (800b5fc <HttpDaemon::HandleGet()+0x158>)
 800b594:	f7ff fe25 	bl	800b1e2 <strcmp>
 800b598:	b930      	cbnz	r0, 800b5a8 <HttpDaemon::HandleGet()+0x104>
 800b59a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b59e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b5a2:	f000 fa05 	bl	800b9b0 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b5a6:	e791      	b.n	800b4cc <HttpDaemon::HandleGet()+0x28>
 800b5a8:	4620      	mov	r0, r4
 800b5aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5ae:	f7ff bf39 	b.w	800b424 <HttpDaemon::HandleGetTxt()>
 800b5b2:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b5b6:	e78e      	b.n	800b4d6 <HttpDaemon::HandleGet()+0x32>
 800b5b8:	08012500 	stmdaeq	r1, {r8, sl, sp}
 800b5bc:	080124d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, sp}
 800b5c0:	080126ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, sp}
 800b5c4:	080124da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, sp}
 800b5c8:	080124e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, sp}
 800b5cc:	0801270c 	stmdaeq	r1, {r2, r3, r8, r9, sl, sp}
 800b5d0:	080124e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, sl, sp}
 800b5d4:	080124f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, sp}
 800b5d8:	080124fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, sp}
 800b5dc:	0801272c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, sp}
 800b5e0:	080124f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp}
 800b5e4:	0801274c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, sp}
 800b5e8:	08012502 	stmdaeq	r1, {r1, r8, sl, sp}
 800b5ec:	08012507 	stmdaeq	r1, {r0, r1, r2, r8, sl, sp}
 800b5f0:	0801250f 	stmdaeq	r1, {r0, r1, r2, r3, r8, sl, sp}
 800b5f4:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b5f8:	08012516 	stmdaeq	r1, {r1, r2, r4, r8, sl, sp}
 800b5fc:	0801251e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, sp}

0800b600 <HttpDaemon::HandlePost(bool)>:
 800b600:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b602:	4604      	mov	r4, r0
 800b604:	2900      	cmp	r1, #0
 800b606:	f040 8091 	bne.w	800b72c <HttpDaemon::HandlePost(bool)+0x12c>
 800b60a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b60e:	2b00      	cmp	r3, #0
 800b610:	d05d      	beq.n	800b6ce <HttpDaemon::HandlePost(bool)+0xce>
 800b612:	6845      	ldr	r5, [r0, #4]
 800b614:	4948      	ldr	r1, [pc, #288]	; (800b738 <HttpDaemon::HandlePost(bool)+0x138>)
 800b616:	4628      	mov	r0, r5
 800b618:	f7ff fde3 	bl	800b1e2 <strcmp>
 800b61c:	2800      	cmp	r0, #0
 800b61e:	bf0c      	ite	eq
 800b620:	2301      	moveq	r3, #1
 800b622:	2300      	movne	r3, #0
 800b624:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b628:	d055      	beq.n	800b6d6 <HttpDaemon::HandlePost(bool)+0xd6>
 800b62a:	4628      	mov	r0, r5
 800b62c:	4943      	ldr	r1, [pc, #268]	; (800b73c <HttpDaemon::HandlePost(bool)+0x13c>)
 800b62e:	f7ff fdd8 	bl	800b1e2 <strcmp>
 800b632:	2800      	cmp	r0, #0
 800b634:	d04f      	beq.n	800b6d6 <HttpDaemon::HandlePost(bool)+0xd6>
 800b636:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b63a:	e04a      	b.n	800b6d2 <HttpDaemon::HandlePost(bool)+0xd2>
 800b63c:	4940      	ldr	r1, [pc, #256]	; (800b740 <HttpDaemon::HandlePost(bool)+0x140>)
 800b63e:	68a0      	ldr	r0, [r4, #8]
 800b640:	f10d 0207 	add.w	r2, sp, #7
 800b644:	f003 fbed 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b648:	b9e8      	cbnz	r0, 800b686 <HttpDaemon::HandlePost(bool)+0x86>
 800b64a:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b64e:	4b3d      	ldr	r3, [pc, #244]	; (800b744 <HttpDaemon::HandlePost(bool)+0x144>)
 800b650:	fab6 f186 	clz	r1, r6
 800b654:	681d      	ldr	r5, [r3, #0]
 800b656:	0949      	lsrs	r1, r1, #5
 800b658:	69a8      	ldr	r0, [r5, #24]
 800b65a:	b138      	cbz	r0, 800b66c <HttpDaemon::HandlePost(bool)+0x6c>
 800b65c:	6803      	ldr	r3, [r0, #0]
 800b65e:	7429      	strb	r1, [r5, #16]
 800b660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b662:	4798      	blx	r3
 800b664:	b116      	cbz	r6, 800b66c <HttpDaemon::HandlePost(bool)+0x6c>
 800b666:	4b38      	ldr	r3, [pc, #224]	; (800b748 <HttpDaemon::HandlePost(bool)+0x148>)
 800b668:	681b      	ldr	r3, [r3, #0]
 800b66a:	606b      	str	r3, [r5, #4]
 800b66c:	4620      	mov	r0, r4
 800b66e:	4b37      	ldr	r3, [pc, #220]	; (800b74c <HttpDaemon::HandlePost(bool)+0x14c>)
 800b670:	f240 519f 	movw	r1, #1439	; 0x59f
 800b674:	4a36      	ldr	r2, [pc, #216]	; (800b750 <HttpDaemon::HandlePost(bool)+0x150>)
 800b676:	f840 3b22 	str.w	r3, [r0], #34
 800b67a:	f004 fb79 	bl	800fd70 <snprintf>
 800b67e:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b682:	20c8      	movs	r0, #200	; 0xc8
 800b684:	e025      	b.n	800b6d2 <HttpDaemon::HandlePost(bool)+0xd2>
 800b686:	4933      	ldr	r1, [pc, #204]	; (800b754 <HttpDaemon::HandlePost(bool)+0x154>)
 800b688:	68a0      	ldr	r0, [r4, #8]
 800b68a:	f10d 0207 	add.w	r2, sp, #7
 800b68e:	f003 fbc8 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b692:	b9e0      	cbnz	r0, 800b6ce <HttpDaemon::HandlePost(bool)+0xce>
 800b694:	4b30      	ldr	r3, [pc, #192]	; (800b758 <HttpDaemon::HandlePost(bool)+0x158>)
 800b696:	6818      	ldr	r0, [r3, #0]
 800b698:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b69c:	b11b      	cbz	r3, 800b6a6 <HttpDaemon::HandlePost(bool)+0xa6>
 800b69e:	2104      	movs	r1, #4
 800b6a0:	f003 ff60 	bl	800f564 <LedBlink::SetMode(ledblink::Mode)>
 800b6a4:	e7e2      	b.n	800b66c <HttpDaemon::HandlePost(bool)+0x6c>
 800b6a6:	2102      	movs	r1, #2
 800b6a8:	e7fa      	b.n	800b6a0 <HttpDaemon::HandlePost(bool)+0xa0>
 800b6aa:	4b2c      	ldr	r3, [pc, #176]	; (800b75c <HttpDaemon::HandlePost(bool)+0x15c>)
 800b6ac:	2001      	movs	r0, #1
 800b6ae:	781d      	ldrb	r5, [r3, #0]
 800b6b0:	f7ff fdbe 	bl	800b230 <PropertiesConfig::EnableJSON(bool)>
 800b6b4:	4b2a      	ldr	r3, [pc, #168]	; (800b760 <HttpDaemon::HandlePost(bool)+0x160>)
 800b6b6:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800b6ba:	6818      	ldr	r0, [r3, #0]
 800b6bc:	68a1      	ldr	r1, [r4, #8]
 800b6be:	f005 0501 	and.w	r5, r5, #1
 800b6c2:	f7ff fa0b 	bl	800aadc <RemoteConfig::HandleSet(void*, unsigned int)>
 800b6c6:	4628      	mov	r0, r5
 800b6c8:	f7ff fdb2 	bl	800b230 <PropertiesConfig::EnableJSON(bool)>
 800b6cc:	e7ce      	b.n	800b66c <HttpDaemon::HandlePost(bool)+0x6c>
 800b6ce:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b6d2:	b002      	add	sp, #8
 800b6d4:	bd70      	pop	{r4, r5, r6, pc}
 800b6d6:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800b6da:	6962      	ldr	r2, [r4, #20]
 800b6dc:	429a      	cmp	r2, r3
 800b6de:	dbd0      	blt.n	800b682 <HttpDaemon::HandlePost(bool)+0x82>
 800b6e0:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b6e4:	2b00      	cmp	r3, #0
 800b6e6:	d0cc      	beq.n	800b682 <HttpDaemon::HandlePost(bool)+0x82>
 800b6e8:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b6ec:	2b00      	cmp	r3, #0
 800b6ee:	d0dc      	beq.n	800b6aa <HttpDaemon::HandlePost(bool)+0xaa>
 800b6f0:	2201      	movs	r2, #1
 800b6f2:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800b6f6:	68a0      	ldr	r0, [r4, #8]
 800b6f8:	f003 f996 	bl	800ea28 <properties::convert_json_file(char*, unsigned short, bool)>
 800b6fc:	2800      	cmp	r0, #0
 800b6fe:	dde6      	ble.n	800b6ce <HttpDaemon::HandlePost(bool)+0xce>
 800b700:	4918      	ldr	r1, [pc, #96]	; (800b764 <HttpDaemon::HandlePost(bool)+0x164>)
 800b702:	68a0      	ldr	r0, [r4, #8]
 800b704:	f10d 0207 	add.w	r2, sp, #7
 800b708:	f003 fb8b 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b70c:	2800      	cmp	r0, #0
 800b70e:	d195      	bne.n	800b63c <HttpDaemon::HandlePost(bool)+0x3c>
 800b710:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b714:	2b00      	cmp	r3, #0
 800b716:	d0a9      	beq.n	800b66c <HttpDaemon::HandlePost(bool)+0x6c>
 800b718:	4b11      	ldr	r3, [pc, #68]	; (800b760 <HttpDaemon::HandlePost(bool)+0x160>)
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800b720:	2b00      	cmp	r3, #0
 800b722:	d0d4      	beq.n	800b6ce <HttpDaemon::HandlePost(bool)+0xce>
 800b724:	4b10      	ldr	r3, [pc, #64]	; (800b768 <HttpDaemon::HandlePost(bool)+0x168>)
 800b726:	6818      	ldr	r0, [r3, #0]
 800b728:	f003 ffc0 	bl	800f6ac <Hardware::Reboot()>
 800b72c:	68c3      	ldr	r3, [r0, #12]
 800b72e:	6083      	str	r3, [r0, #8]
 800b730:	6943      	ldr	r3, [r0, #20]
 800b732:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800b736:	e7d7      	b.n	800b6e8 <HttpDaemon::HandlePost(bool)+0xe8>
 800b738:	08012528 	stmdaeq	r1, {r3, r5, r8, sl, sp}
 800b73c:	080124c4 	stmdaeq	r1, {r2, r6, r7, sl, sp}
 800b740:	08012516 	stmdaeq	r1, {r1, r2, r4, r8, sl, sp}
 800b744:	20009acc 	andcs	r9, r0, ip, asr #21
 800b748:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b74c:	080126ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, sp}
 800b750:	08012545 	stmdaeq	r1, {r0, r2, r6, r8, sl, sp}
 800b754:	0801253c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, sp}
 800b758:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800b75c:	20009ac8 	andcs	r9, r0, r8, asr #21
 800b760:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b764:	08012535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, sp}
 800b768:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800b76c <HttpDaemon::Run()>:
 800b76c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b76e:	4e4a      	ldr	r6, [pc, #296]	; (800b898 <HttpDaemon::Run()+0x12c>)
 800b770:	4604      	mov	r4, r0
 800b772:	6901      	ldr	r1, [r0, #16]
 800b774:	f100 020c 	add.w	r2, r0, #12
 800b778:	b085      	sub	sp, #20
 800b77a:	6830      	ldr	r0, [r6, #0]
 800b77c:	f001 ff85 	bl	800d68a <Network::TcpRead(int, unsigned char const**)>
 800b780:	6160      	str	r0, [r4, #20]
 800b782:	2800      	cmp	r0, #0
 800b784:	d061      	beq.n	800b84a <HttpDaemon::Run()+0xde>
 800b786:	69a3      	ldr	r3, [r4, #24]
 800b788:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b78c:	d15f      	bne.n	800b84e <HttpDaemon::Run()+0xe2>
 800b78e:	4620      	mov	r0, r4
 800b790:	f7ff fe10 	bl	800b3b4 <HttpDaemon::ParseRequest()>
 800b794:	28c8      	cmp	r0, #200	; 0xc8
 800b796:	61a0      	str	r0, [r4, #24]
 800b798:	d106      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b79a:	69e3      	ldr	r3, [r4, #28]
 800b79c:	2b00      	cmp	r3, #0
 800b79e:	d147      	bne.n	800b830 <HttpDaemon::Run()+0xc4>
 800b7a0:	4620      	mov	r0, r4
 800b7a2:	f7ff fe7f 	bl	800b4a4 <HttpDaemon::HandleGet()>
 800b7a6:	61a0      	str	r0, [r4, #24]
 800b7a8:	69a3      	ldr	r3, [r4, #24]
 800b7aa:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800b7ae:	2bc8      	cmp	r3, #200	; 0xc8
 800b7b0:	d06f      	beq.n	800b892 <HttpDaemon::Run()+0x126>
 800b7b2:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b7b6:	d062      	beq.n	800b87e <HttpDaemon::Run()+0x112>
 800b7b8:	dc52      	bgt.n	800b860 <HttpDaemon::Run()+0xf4>
 800b7ba:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b7be:	d060      	beq.n	800b882 <HttpDaemon::Run()+0x116>
 800b7c0:	f240 129d 	movw	r2, #413	; 0x19d
 800b7c4:	4293      	cmp	r3, r2
 800b7c6:	d05e      	beq.n	800b886 <HttpDaemon::Run()+0x11a>
 800b7c8:	4d34      	ldr	r5, [pc, #208]	; (800b89c <HttpDaemon::Run()+0x130>)
 800b7ca:	4a35      	ldr	r2, [pc, #212]	; (800b8a0 <HttpDaemon::Run()+0x134>)
 800b7cc:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b7d0:	bf18      	it	ne
 800b7d2:	4615      	movne	r5, r2
 800b7d4:	4a33      	ldr	r2, [pc, #204]	; (800b8a4 <HttpDaemon::Run()+0x138>)
 800b7d6:	f240 519f 	movw	r1, #1439	; 0x59f
 800b7da:	6022      	str	r2, [r4, #0]
 800b7dc:	4638      	mov	r0, r7
 800b7de:	e9cd 5500 	strd	r5, r5, [sp]
 800b7e2:	4a31      	ldr	r2, [pc, #196]	; (800b8a8 <HttpDaemon::Run()+0x13c>)
 800b7e4:	f004 fac4 	bl	800fd70 <snprintf>
 800b7e8:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b7ec:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b7f0:	f240 519f 	movw	r1, #1439	; 0x59f
 800b7f4:	9303      	str	r3, [sp, #12]
 800b7f6:	6823      	ldr	r3, [r4, #0]
 800b7f8:	4a2c      	ldr	r2, [pc, #176]	; (800b8ac <HttpDaemon::Run()+0x140>)
 800b7fa:	9302      	str	r3, [sp, #8]
 800b7fc:	4b2c      	ldr	r3, [pc, #176]	; (800b8b0 <HttpDaemon::Run()+0x144>)
 800b7fe:	68e0      	ldr	r0, [r4, #12]
 800b800:	e9cd 5300 	strd	r5, r3, [sp]
 800b804:	69a3      	ldr	r3, [r4, #24]
 800b806:	f004 fab3 	bl	800fd70 <snprintf>
 800b80a:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b80e:	b283      	uxth	r3, r0
 800b810:	6830      	ldr	r0, [r6, #0]
 800b812:	f001 ff3e 	bl	800d692 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b816:	463a      	mov	r2, r7
 800b818:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b81c:	6921      	ldr	r1, [r4, #16]
 800b81e:	6830      	ldr	r0, [r6, #0]
 800b820:	f001 ff37 	bl	800d692 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b824:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b828:	2302      	movs	r3, #2
 800b82a:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b82e:	e00c      	b.n	800b84a <HttpDaemon::Run()+0xde>
 800b830:	2b01      	cmp	r3, #1
 800b832:	d1b9      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b834:	2100      	movs	r1, #0
 800b836:	4620      	mov	r0, r4
 800b838:	f7ff fee2 	bl	800b600 <HttpDaemon::HandlePost(bool)>
 800b83c:	28c8      	cmp	r0, #200	; 0xc8
 800b83e:	61a0      	str	r0, [r4, #24]
 800b840:	d1b2      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b842:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b846:	2b00      	cmp	r3, #0
 800b848:	d1ae      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b84a:	b005      	add	sp, #20
 800b84c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b84e:	2bc8      	cmp	r3, #200	; 0xc8
 800b850:	d1aa      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b852:	69e1      	ldr	r1, [r4, #28]
 800b854:	2901      	cmp	r1, #1
 800b856:	d1a7      	bne.n	800b7a8 <HttpDaemon::Run()+0x3c>
 800b858:	4620      	mov	r0, r4
 800b85a:	f7ff fed1 	bl	800b600 <HttpDaemon::HandlePost(bool)>
 800b85e:	e7a2      	b.n	800b7a6 <HttpDaemon::Run()+0x3a>
 800b860:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b864:	4293      	cmp	r3, r2
 800b866:	d010      	beq.n	800b88a <HttpDaemon::Run()+0x11e>
 800b868:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b86c:	4293      	cmp	r3, r2
 800b86e:	d00e      	beq.n	800b88e <HttpDaemon::Run()+0x122>
 800b870:	4d10      	ldr	r5, [pc, #64]	; (800b8b4 <HttpDaemon::Run()+0x148>)
 800b872:	4a0b      	ldr	r2, [pc, #44]	; (800b8a0 <HttpDaemon::Run()+0x134>)
 800b874:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b878:	bf18      	it	ne
 800b87a:	4615      	movne	r5, r2
 800b87c:	e7aa      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b87e:	4d0e      	ldr	r5, [pc, #56]	; (800b8b8 <HttpDaemon::Run()+0x14c>)
 800b880:	e7a8      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b882:	4d0e      	ldr	r5, [pc, #56]	; (800b8bc <HttpDaemon::Run()+0x150>)
 800b884:	e7a6      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b886:	4d0e      	ldr	r5, [pc, #56]	; (800b8c0 <HttpDaemon::Run()+0x154>)
 800b888:	e7a4      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b88a:	4d0e      	ldr	r5, [pc, #56]	; (800b8c4 <HttpDaemon::Run()+0x158>)
 800b88c:	e7a2      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b88e:	4d0e      	ldr	r5, [pc, #56]	; (800b8c8 <HttpDaemon::Run()+0x15c>)
 800b890:	e7a0      	b.n	800b7d4 <HttpDaemon::Run()+0x68>
 800b892:	4d0e      	ldr	r5, [pc, #56]	; (800b8cc <HttpDaemon::Run()+0x160>)
 800b894:	e7aa      	b.n	800b7ec <HttpDaemon::Run()+0x80>
 800b896:	bf00      	nop
 800b898:	20009494 	mulcs	r0, r4, r4
 800b89c:	08012606 	stmdaeq	r1, {r1, r2, r9, sl, sp}
 800b8a0:	08012612 	stmdaeq	r1, {r1, r4, r9, sl, sp}
 800b8a4:	080126ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, sp}
 800b8a8:	08012639 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, sp}
 800b8ac:	08012694 	stmdaeq	r1, {r2, r4, r7, r9, sl, sp}
 800b8b0:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800b8b4:	08012620 	stmdaeq	r1, {r5, r9, sl, sp}
 800b8b8:	080125c4 	stmdaeq	r1, {r2, r6, r7, r8, sl, sp}
 800b8bc:	080125ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, sl, sp}
 800b8c0:	080125a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, sp}
 800b8c4:	080125ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl, sp}
 800b8c8:	080125d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, sp}
 800b8cc:	08012636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, sp}

0800b8d0 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b8d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8d4:	4b14      	ldr	r3, [pc, #80]	; (800b928 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b8d6:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800b92c <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800b8da:	681b      	ldr	r3, [r3, #0]
 800b8dc:	b088      	sub	sp, #32
 800b8de:	4605      	mov	r5, r0
 800b8e0:	f8d8 0000 	ldr.w	r0, [r8]
 800b8e4:	691c      	ldr	r4, [r3, #16]
 800b8e6:	460e      	mov	r6, r1
 800b8e8:	f7fe ffd4 	bl	800a894 <RemoteConfig::GetStringNode() const>
 800b8ec:	4607      	mov	r7, r0
 800b8ee:	f8d8 0000 	ldr.w	r0, [r8]
 800b8f2:	f7fe ffdb 	bl	800a8ac <RemoteConfig::GetStringOutput() const>
 800b8f6:	4b0e      	ldr	r3, [pc, #56]	; (800b930 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800b8f8:	4631      	mov	r1, r6
 800b8fa:	7a1a      	ldrb	r2, [r3, #8]
 800b8fc:	3309      	adds	r3, #9
 800b8fe:	9303      	str	r3, [sp, #12]
 800b900:	0e23      	lsrs	r3, r4, #24
 800b902:	9302      	str	r3, [sp, #8]
 800b904:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b908:	9301      	str	r3, [sp, #4]
 800b90a:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b90e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b912:	9300      	str	r3, [sp, #0]
 800b914:	4628      	mov	r0, r5
 800b916:	4a07      	ldr	r2, [pc, #28]	; (800b934 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800b918:	9704      	str	r7, [sp, #16]
 800b91a:	b2e3      	uxtb	r3, r4
 800b91c:	f004 fa28 	bl	800fd70 <snprintf>
 800b920:	b280      	uxth	r0, r0
 800b922:	b008      	add	sp, #32
 800b924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b928:	20009494 	mulcs	r0, r4, r4
 800b92c:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b930:	20000b58 	andcs	r0, r0, r8, asr fp
 800b934:	080127c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, sp}

0800b938 <remoteconfig::json_get_version(char*, unsigned short)>:
 800b938:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b93a:	2208      	movs	r2, #8
 800b93c:	4b09      	ldr	r3, [pc, #36]	; (800b964 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b93e:	9204      	str	r2, [sp, #16]
 800b940:	f1a3 020b 	sub.w	r2, r3, #11
 800b944:	9203      	str	r2, [sp, #12]
 800b946:	220b      	movs	r2, #11
 800b948:	9202      	str	r2, [sp, #8]
 800b94a:	4a07      	ldr	r2, [pc, #28]	; (800b968 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b94c:	9305      	str	r3, [sp, #20]
 800b94e:	3b0e      	subs	r3, #14
 800b950:	9201      	str	r2, [sp, #4]
 800b952:	9300      	str	r3, [sp, #0]
 800b954:	4a05      	ldr	r2, [pc, #20]	; (800b96c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b956:	2303      	movs	r3, #3
 800b958:	f004 fa0a 	bl	800fd70 <snprintf>
 800b95c:	b280      	uxth	r0, r0
 800b95e:	b007      	add	sp, #28
 800b960:	f85d fb04 	ldr.w	pc, [sp], #4
 800b964:	20009b6a 	andcs	r9, r0, sl, ror #22
 800b968:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800b96c:	08012825 	stmdaeq	r1, {r0, r2, r5, fp, sp}

0800b970 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b970:	b508      	push	{r3, lr}
 800b972:	4b05      	ldr	r3, [pc, #20]	; (800b988 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b974:	681a      	ldr	r2, [r3, #0]
 800b976:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b97a:	fbb2 f3f3 	udiv	r3, r2, r3
 800b97e:	4a03      	ldr	r2, [pc, #12]	; (800b98c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b980:	f004 f9f6 	bl	800fd70 <snprintf>
 800b984:	b280      	uxth	r0, r0
 800b986:	bd08      	pop	{r3, pc}
 800b988:	20009bd4 	ldrdcs	r9, [r0], -r4
 800b98c:	0801286b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp}

0800b990 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b990:	b508      	push	{r3, lr}
 800b992:	4b05      	ldr	r3, [pc, #20]	; (800b9a8 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b994:	4a05      	ldr	r2, [pc, #20]	; (800b9ac <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b996:	681b      	ldr	r3, [r3, #0]
 800b998:	7c1b      	ldrb	r3, [r3, #16]
 800b99a:	f083 0301 	eor.w	r3, r3, #1
 800b99e:	f004 f9e7 	bl	800fd70 <snprintf>
 800b9a2:	b280      	uxth	r0, r0
 800b9a4:	bd08      	pop	{r3, pc}
 800b9a6:	bf00      	nop
 800b9a8:	20009acc 	andcs	r9, r0, ip, asr #21
 800b9ac:	0801287a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp}

0800b9b0 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800b9b0:	b508      	push	{r3, lr}
 800b9b2:	4a02      	ldr	r2, [pc, #8]	; (800b9bc <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800b9b4:	f004 f9dc 	bl	800fd70 <snprintf>
 800b9b8:	b280      	uxth	r0, r0
 800b9ba:	bd08      	pop	{r3, pc}
 800b9bc:	08012889 	stmdaeq	r1, {r0, r3, r7, fp, sp}

0800b9c0 <get_file_content(char const*, char*)>:
 800b9c0:	2300      	movs	r3, #0
 800b9c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b9c4:	4a18      	ldr	r2, [pc, #96]	; (800ba28 <get_file_content(char const*, char*)+0x68>)
 800b9c6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800b9ca:	1e46      	subs	r6, r0, #1
 800b9cc:	1e6f      	subs	r7, r5, #1
 800b9ce:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800b9d2:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800b9d6:	4564      	cmp	r4, ip
 800b9d8:	d119      	bne.n	800ba0e <get_file_content(char const*, char*)+0x4e>
 800b9da:	2c00      	cmp	r4, #0
 800b9dc:	d1f7      	bne.n	800b9ce <get_file_content(char const*, char*)+0xe>
 800b9de:	460c      	mov	r4, r1
 800b9e0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b9e4:	685b      	ldr	r3, [r3, #4]
 800b9e6:	3b01      	subs	r3, #1
 800b9e8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800b9ec:	f804 2b01 	strb.w	r2, [r4], #1
 800b9f0:	2a00      	cmp	r2, #0
 800b9f2:	d1f9      	bne.n	800b9e8 <get_file_content(char const*, char*)+0x28>
 800b9f4:	1a64      	subs	r4, r4, r1
 800b9f6:	3c01      	subs	r4, #1
 800b9f8:	232e      	movs	r3, #46	; 0x2e
 800b9fa:	e9cd 5400 	strd	r5, r4, [sp]
 800b9fe:	4a0b      	ldr	r2, [pc, #44]	; (800ba2c <get_file_content(char const*, char*)+0x6c>)
 800ba00:	490b      	ldr	r1, [pc, #44]	; (800ba30 <get_file_content(char const*, char*)+0x70>)
 800ba02:	480c      	ldr	r0, [pc, #48]	; (800ba34 <get_file_content(char const*, char*)+0x74>)
 800ba04:	f004 f98c 	bl	800fd20 <printf>
 800ba08:	4620      	mov	r0, r4
 800ba0a:	b003      	add	sp, #12
 800ba0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba0e:	3301      	adds	r3, #1
 800ba10:	2b03      	cmp	r3, #3
 800ba12:	d1d8      	bne.n	800b9c6 <get_file_content(char const*, char*)+0x6>
 800ba14:	2333      	movs	r3, #51	; 0x33
 800ba16:	4a06      	ldr	r2, [pc, #24]	; (800ba30 <get_file_content(char const*, char*)+0x70>)
 800ba18:	4904      	ldr	r1, [pc, #16]	; (800ba2c <get_file_content(char const*, char*)+0x6c>)
 800ba1a:	4807      	ldr	r0, [pc, #28]	; (800ba38 <get_file_content(char const*, char*)+0x78>)
 800ba1c:	f004 f980 	bl	800fd20 <printf>
 800ba20:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800ba24:	e7f0      	b.n	800ba08 <get_file_content(char const*, char*)+0x48>
 800ba26:	bf00      	nop
 800ba28:	08012c28 	stmdaeq	r1, {r3, r5, sl, fp, sp}
 800ba2c:	08012922 	stmdaeq	r1, {r1, r5, r8, fp, sp}
 800ba30:	08012941 	stmdaeq	r1, {r0, r6, r8, fp, sp}
 800ba34:	08012952 	stmdaeq	r1, {r1, r4, r6, r8, fp, sp}
 800ba38:	0801296e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, fp, sp}

0800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800ba3c:	2300      	movs	r3, #0
 800ba3e:	2020      	movs	r0, #32
 800ba40:	b510      	push	{r4, lr}
 800ba42:	4a04      	ldr	r2, [pc, #16]	; (800ba54 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800ba44:	428b      	cmp	r3, r1
 800ba46:	d004      	beq.n	800ba52 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800ba48:	f852 4b04 	ldr.w	r4, [r2], #4
 800ba4c:	3301      	adds	r3, #1
 800ba4e:	4420      	add	r0, r4
 800ba50:	e7f8      	b.n	800ba44 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800ba52:	bd10      	pop	{r4, pc}
 800ba54:	0801316c 	stmdaeq	r1, {r2, r3, r5, r6, r8, ip, sp}

0800ba58 <SpiFlashStore::Init()>:
 800ba58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba5c:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800bb80 <SpiFlashStore::Init()+0x128>
 800ba60:	4607      	mov	r7, r0
 800ba62:	b085      	sub	sp, #20
 800ba64:	f8d8 0000 	ldr.w	r0, [r8]
 800ba68:	f000 fb3a 	bl	800c0e0 <FlashRom::GetSectorSize() const>
 800ba6c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800ba70:	4605      	mov	r5, r0
 800ba72:	f040 8083 	bne.w	800bb7c <SpiFlashStore::Init()+0x124>
 800ba76:	f8d8 0000 	ldr.w	r0, [r8]
 800ba7a:	f000 fb29 	bl	800c0d0 <FlashRom::GetSize() const>
 800ba7e:	4b41      	ldr	r3, [pc, #260]	; (800bb84 <SpiFlashStore::Init()+0x12c>)
 800ba80:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800ba84:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800ba88:	6019      	str	r1, [r3, #0]
 800ba8a:	2e00      	cmp	r6, #0
 800ba8c:	d176      	bne.n	800bb7c <SpiFlashStore::Init()+0x124>
 800ba8e:	4c3e      	ldr	r4, [pc, #248]	; (800bb88 <SpiFlashStore::Init()+0x130>)
 800ba90:	ab03      	add	r3, sp, #12
 800ba92:	9300      	str	r3, [sp, #0]
 800ba94:	462a      	mov	r2, r5
 800ba96:	4623      	mov	r3, r4
 800ba98:	f8d8 0000 	ldr.w	r0, [r8]
 800ba9c:	f000 fb23 	bl	800c0e6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800baa0:	7823      	ldrb	r3, [r4, #0]
 800baa2:	2b41      	cmp	r3, #65	; 0x41
 800baa4:	bf1c      	itt	ne
 800baa6:	2341      	movne	r3, #65	; 0x41
 800baa8:	7023      	strbne	r3, [r4, #0]
 800baaa:	7863      	ldrb	r3, [r4, #1]
 800baac:	bf14      	ite	ne
 800baae:	4635      	movne	r5, r6
 800bab0:	2501      	moveq	r5, #1
 800bab2:	2b76      	cmp	r3, #118	; 0x76
 800bab4:	bf1c      	itt	ne
 800bab6:	2376      	movne	r3, #118	; 0x76
 800bab8:	7063      	strbne	r3, [r4, #1]
 800baba:	78a3      	ldrb	r3, [r4, #2]
 800babc:	bf18      	it	ne
 800babe:	2500      	movne	r5, #0
 800bac0:	2b56      	cmp	r3, #86	; 0x56
 800bac2:	bf1c      	itt	ne
 800bac4:	2356      	movne	r3, #86	; 0x56
 800bac6:	70a3      	strbne	r3, [r4, #2]
 800bac8:	78e3      	ldrb	r3, [r4, #3]
 800baca:	bf18      	it	ne
 800bacc:	2500      	movne	r5, #0
 800bace:	2b10      	cmp	r3, #16
 800bad0:	d01c      	beq.n	800bb0c <SpiFlashStore::Init()+0xb4>
 800bad2:	2310      	movs	r3, #16
 800bad4:	70e3      	strb	r3, [r4, #3]
 800bad6:	2201      	movs	r2, #1
 800bad8:	2500      	movs	r5, #0
 800bada:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800bade:	4b2b      	ldr	r3, [pc, #172]	; (800bb8c <SpiFlashStore::Init()+0x134>)
 800bae0:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800bb90 <SpiFlashStore::Init()+0x138>
 800bae4:	701a      	strb	r2, [r3, #0]
 800bae6:	4631      	mov	r1, r6
 800bae8:	4638      	mov	r0, r7
 800baea:	f7ff ffa7 	bl	800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800baee:	1823      	adds	r3, r4, r0
 800baf0:	5425      	strb	r5, [r4, r0]
 800baf2:	705d      	strb	r5, [r3, #1]
 800baf4:	709d      	strb	r5, [r3, #2]
 800baf6:	70dd      	strb	r5, [r3, #3]
 800baf8:	f858 3b04 	ldr.w	r3, [r8], #4
 800bafc:	1d02      	adds	r2, r0, #4
 800bafe:	4403      	add	r3, r0
 800bb00:	4293      	cmp	r3, r2
 800bb02:	d931      	bls.n	800bb68 <SpiFlashStore::Init()+0x110>
 800bb04:	f804 9002 	strb.w	r9, [r4, r2]
 800bb08:	3201      	adds	r2, #1
 800bb0a:	e7f9      	b.n	800bb00 <SpiFlashStore::Init()+0xa8>
 800bb0c:	2d00      	cmp	r5, #0
 800bb0e:	d0e2      	beq.n	800bad6 <SpiFlashStore::Init()+0x7e>
 800bb10:	f04f 0900 	mov.w	r9, #0
 800bb14:	46c8      	mov	r8, r9
 800bb16:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800bb94 <SpiFlashStore::Init()+0x13c>
 800bb1a:	f8da b000 	ldr.w	fp, [sl]
 800bb1e:	4631      	mov	r1, r6
 800bb20:	4638      	mov	r0, r7
 800bb22:	f7ff ff8b 	bl	800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb26:	5c23      	ldrb	r3, [r4, r0]
 800bb28:	2bff      	cmp	r3, #255	; 0xff
 800bb2a:	d114      	bne.n	800bb56 <SpiFlashStore::Init()+0xfe>
 800bb2c:	1823      	adds	r3, r4, r0
 800bb2e:	785a      	ldrb	r2, [r3, #1]
 800bb30:	2aff      	cmp	r2, #255	; 0xff
 800bb32:	d110      	bne.n	800bb56 <SpiFlashStore::Init()+0xfe>
 800bb34:	789a      	ldrb	r2, [r3, #2]
 800bb36:	2aff      	cmp	r2, #255	; 0xff
 800bb38:	d10d      	bne.n	800bb56 <SpiFlashStore::Init()+0xfe>
 800bb3a:	78da      	ldrb	r2, [r3, #3]
 800bb3c:	2aff      	cmp	r2, #255	; 0xff
 800bb3e:	d10a      	bne.n	800bb56 <SpiFlashStore::Init()+0xfe>
 800bb40:	46a9      	mov	r9, r5
 800bb42:	f04f 0b01 	mov.w	fp, #1
 800bb46:	f804 8000 	strb.w	r8, [r4, r0]
 800bb4a:	f883 8001 	strb.w	r8, [r3, #1]
 800bb4e:	f883 8002 	strb.w	r8, [r3, #2]
 800bb52:	f883 8003 	strb.w	r8, [r3, #3]
 800bb56:	3601      	adds	r6, #1
 800bb58:	2e1c      	cmp	r6, #28
 800bb5a:	d1e0      	bne.n	800bb1e <SpiFlashStore::Init()+0xc6>
 800bb5c:	f1b9 0f00 	cmp.w	r9, #0
 800bb60:	d008      	beq.n	800bb74 <SpiFlashStore::Init()+0x11c>
 800bb62:	f8ca b000 	str.w	fp, [sl]
 800bb66:	e005      	b.n	800bb74 <SpiFlashStore::Init()+0x11c>
 800bb68:	3601      	adds	r6, #1
 800bb6a:	2e1c      	cmp	r6, #28
 800bb6c:	d1bb      	bne.n	800bae6 <SpiFlashStore::Init()+0x8e>
 800bb6e:	2501      	movs	r5, #1
 800bb70:	4b08      	ldr	r3, [pc, #32]	; (800bb94 <SpiFlashStore::Init()+0x13c>)
 800bb72:	601d      	str	r5, [r3, #0]
 800bb74:	4628      	mov	r0, r5
 800bb76:	b005      	add	sp, #20
 800bb78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb7c:	2500      	movs	r5, #0
 800bb7e:	e7f9      	b.n	800bb74 <SpiFlashStore::Init()+0x11c>
 800bb80:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800bb84:	20001b84 	andcs	r1, r0, r4, lsl #23
 800bb88:	20000b84 	andcs	r0, r0, r4, lsl #23
 800bb8c:	20001b98 	mulcs	r0, r8, fp
 800bb90:	0801316c 	stmdaeq	r1, {r2, r3, r5, r6, r8, ip, sp}
 800bb94:	20001b90 	mulcs	r0, r0, fp

0800bb98 <SpiFlashStore::SpiFlashStore()>:
 800bb98:	b538      	push	{r3, r4, r5, lr}
 800bb9a:	4b0d      	ldr	r3, [pc, #52]	; (800bbd0 <SpiFlashStore::SpiFlashStore()+0x38>)
 800bb9c:	4604      	mov	r4, r0
 800bb9e:	6018      	str	r0, [r3, #0]
 800bba0:	4b0c      	ldr	r3, [pc, #48]	; (800bbd4 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800bba2:	4d0d      	ldr	r5, [pc, #52]	; (800bbd8 <SpiFlashStore::SpiFlashStore()+0x40>)
 800bba4:	681b      	ldr	r3, [r3, #0]
 800bba6:	781b      	ldrb	r3, [r3, #0]
 800bba8:	b113      	cbz	r3, 800bbb0 <SpiFlashStore::SpiFlashStore()+0x18>
 800bbaa:	f7ff ff55 	bl	800ba58 <SpiFlashStore::Init()>
 800bbae:	7028      	strb	r0, [r5, #0]
 800bbb0:	782b      	ldrb	r3, [r5, #0]
 800bbb2:	b153      	cbz	r3, 800bbca <SpiFlashStore::SpiFlashStore()+0x32>
 800bbb4:	2320      	movs	r3, #32
 800bbb6:	2200      	movs	r2, #0
 800bbb8:	4908      	ldr	r1, [pc, #32]	; (800bbdc <SpiFlashStore::SpiFlashStore()+0x44>)
 800bbba:	f851 0b04 	ldr.w	r0, [r1], #4
 800bbbe:	3201      	adds	r2, #1
 800bbc0:	2a1c      	cmp	r2, #28
 800bbc2:	4403      	add	r3, r0
 800bbc4:	d1f9      	bne.n	800bbba <SpiFlashStore::SpiFlashStore()+0x22>
 800bbc6:	4a06      	ldr	r2, [pc, #24]	; (800bbe0 <SpiFlashStore::SpiFlashStore()+0x48>)
 800bbc8:	6013      	str	r3, [r2, #0]
 800bbca:	4620      	mov	r0, r4
 800bbcc:	bd38      	pop	{r3, r4, r5, pc}
 800bbce:	bf00      	nop
 800bbd0:	20001b94 	mulcs	r0, r4, fp
 800bbd4:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800bbd8:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bbdc:	0801316c 	stmdaeq	r1, {r2, r3, r5, r6, r8, ip, sp}
 800bbe0:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bbe4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800bbe4:	b508      	push	{r3, lr}
 800bbe6:	f7ff ff29 	bl	800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bbea:	2300      	movs	r3, #0
 800bbec:	4904      	ldr	r1, [pc, #16]	; (800bc00 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800bbee:	1842      	adds	r2, r0, r1
 800bbf0:	540b      	strb	r3, [r1, r0]
 800bbf2:	7053      	strb	r3, [r2, #1]
 800bbf4:	7093      	strb	r3, [r2, #2]
 800bbf6:	70d3      	strb	r3, [r2, #3]
 800bbf8:	2201      	movs	r2, #1
 800bbfa:	4b02      	ldr	r3, [pc, #8]	; (800bc04 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800bbfc:	601a      	str	r2, [r3, #0]
 800bbfe:	bd08      	pop	{r3, pc}
 800bc00:	20000b84 	andcs	r0, r0, r4, lsl #23
 800bc04:	20001b90 	mulcs	r0, r0, fp

0800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800bc08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc0c:	461c      	mov	r4, r3
 800bc0e:	4b19      	ldr	r3, [pc, #100]	; (800bc74 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800bc10:	4615      	mov	r5, r2
 800bc12:	781f      	ldrb	r7, [r3, #0]
 800bc14:	9e07      	ldr	r6, [sp, #28]
 800bc16:	b35f      	cbz	r7, 800bc70 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bc18:	f7ff ff10 	bl	800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc1c:	f04f 0c00 	mov.w	ip, #0
 800bc20:	4a15      	ldr	r2, [pc, #84]	; (800bc78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800bc22:	1941      	adds	r1, r0, r5
 800bc24:	1e63      	subs	r3, r4, #1
 800bc26:	9c06      	ldr	r4, [sp, #24]
 800bc28:	4411      	add	r1, r2
 800bc2a:	440c      	add	r4, r1
 800bc2c:	42a1      	cmp	r1, r4
 800bc2e:	d00a      	beq.n	800bc46 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800bc30:	f891 8000 	ldrb.w	r8, [r1]
 800bc34:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800bc38:	3101      	adds	r1, #1
 800bc3a:	45f0      	cmp	r8, lr
 800bc3c:	bf1c      	itt	ne
 800bc3e:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800bc42:	46bc      	movne	ip, r7
 800bc44:	e7f2      	b.n	800bc2c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800bc46:	f1bc 0f00 	cmp.w	ip, #0
 800bc4a:	d011      	beq.n	800bc70 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bc4c:	4b0b      	ldr	r3, [pc, #44]	; (800bc7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800bc4e:	6819      	ldr	r1, [r3, #0]
 800bc50:	b109      	cbz	r1, 800bc56 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800bc52:	2906      	cmp	r1, #6
 800bc54:	d101      	bne.n	800bc5a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc56:	2101      	movs	r1, #1
 800bc58:	6019      	str	r1, [r3, #0]
 800bc5a:	4b09      	ldr	r3, [pc, #36]	; (800bc80 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800bc5c:	6819      	ldr	r1, [r3, #0]
 800bc5e:	4b09      	ldr	r3, [pc, #36]	; (800bc84 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800bc60:	6019      	str	r1, [r3, #0]
 800bc62:	b12d      	cbz	r5, 800bc70 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bc64:	b126      	cbz	r6, 800bc70 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bc66:	9b08      	ldr	r3, [sp, #32]
 800bc68:	4418      	add	r0, r3
 800bc6a:	5813      	ldr	r3, [r2, r0]
 800bc6c:	4333      	orrs	r3, r6
 800bc6e:	5013      	str	r3, [r2, r0]
 800bc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc74:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bc78:	20000b84 	andcs	r0, r0, r4, lsl #23
 800bc7c:	20001b90 	mulcs	r0, r0, fp
 800bc80:	20009bd4 	ldrdcs	r9, [r0], -r4
 800bc84:	20000b80 	andcs	r0, r0, r0, lsl #23

0800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800bc88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc8c:	461d      	mov	r5, r3
 800bc8e:	4b15      	ldr	r3, [pc, #84]	; (800bce4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800bc90:	b085      	sub	sp, #20
 800bc92:	781b      	ldrb	r3, [r3, #0]
 800bc94:	4607      	mov	r7, r0
 800bc96:	4688      	mov	r8, r1
 800bc98:	4614      	mov	r4, r2
 800bc9a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bc9e:	b1eb      	cbz	r3, 800bcdc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800bca0:	f7ff fecc 	bl	800ba3c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bca4:	4910      	ldr	r1, [pc, #64]	; (800bce8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800bca6:	4a11      	ldr	r2, [pc, #68]	; (800bcec <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800bca8:	7809      	ldrb	r1, [r1, #0]
 800bcaa:	eb00 0309 	add.w	r3, r0, r9
 800bcae:	189e      	adds	r6, r3, r2
 800bcb0:	b951      	cbnz	r1, 800bcc8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800bcb2:	589b      	ldr	r3, [r3, r2]
 800bcb4:	b143      	cbz	r3, 800bcc8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800bcb6:	3c01      	subs	r4, #1
 800bcb8:	4435      	add	r5, r6
 800bcba:	42b5      	cmp	r5, r6
 800bcbc:	d00e      	beq.n	800bcdc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800bcbe:	f816 3b01 	ldrb.w	r3, [r6], #1
 800bcc2:	f804 3f01 	strb.w	r3, [r4, #1]!
 800bcc6:	e7f8      	b.n	800bcba <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800bcc8:	2300      	movs	r3, #0
 800bcca:	464a      	mov	r2, r9
 800bccc:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bcd0:	4641      	mov	r1, r8
 800bcd2:	4623      	mov	r3, r4
 800bcd4:	4638      	mov	r0, r7
 800bcd6:	9500      	str	r5, [sp, #0]
 800bcd8:	f7ff ff96 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bcdc:	b005      	add	sp, #20
 800bcde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bce2:	bf00      	nop
 800bce4:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bce8:	20001b98 	mulcs	r0, r8, fp
 800bcec:	20000b84 	andcs	r0, r0, r4, lsl #23

0800bcf0 <SpiFlashStore::Flash()>:
 800bcf0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bcf2:	4c25      	ldr	r4, [pc, #148]	; (800bd88 <SpiFlashStore::Flash()+0x98>)
 800bcf4:	6820      	ldr	r0, [r4, #0]
 800bcf6:	2800      	cmp	r0, #0
 800bcf8:	d043      	beq.n	800bd82 <SpiFlashStore::Flash()+0x92>
 800bcfa:	3801      	subs	r0, #1
 800bcfc:	2805      	cmp	r0, #5
 800bcfe:	d831      	bhi.n	800bd64 <SpiFlashStore::Flash()+0x74>
 800bd00:	e8df f000 	tbb	[pc, r0]
 800bd04:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800bd08:	4b203025 	blmi	8817da4 <__exidx_end+0x804224>
 800bd0c:	681a      	ldr	r2, [r3, #0]
 800bd0e:	4b20      	ldr	r3, [pc, #128]	; (800bd90 <SpiFlashStore::Flash()+0xa0>)
 800bd10:	601a      	str	r2, [r3, #0]
 800bd12:	2302      	movs	r3, #2
 800bd14:	6023      	str	r3, [r4, #0]
 800bd16:	2001      	movs	r0, #1
 800bd18:	e033      	b.n	800bd82 <SpiFlashStore::Flash()+0x92>
 800bd1a:	4b1c      	ldr	r3, [pc, #112]	; (800bd8c <SpiFlashStore::Flash()+0x9c>)
 800bd1c:	4a1c      	ldr	r2, [pc, #112]	; (800bd90 <SpiFlashStore::Flash()+0xa0>)
 800bd1e:	681b      	ldr	r3, [r3, #0]
 800bd20:	6812      	ldr	r2, [r2, #0]
 800bd22:	1a9b      	subs	r3, r3, r2
 800bd24:	2b63      	cmp	r3, #99	; 0x63
 800bd26:	d9f6      	bls.n	800bd16 <SpiFlashStore::Flash()+0x26>
 800bd28:	2303      	movs	r3, #3
 800bd2a:	e7f3      	b.n	800bd14 <SpiFlashStore::Flash()+0x24>
 800bd2c:	4919      	ldr	r1, [pc, #100]	; (800bd94 <SpiFlashStore::Flash()+0xa4>)
 800bd2e:	481a      	ldr	r0, [pc, #104]	; (800bd98 <SpiFlashStore::Flash()+0xa8>)
 800bd30:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bd34:	6809      	ldr	r1, [r1, #0]
 800bd36:	6800      	ldr	r0, [r0, #0]
 800bd38:	ab03      	add	r3, sp, #12
 800bd3a:	f000 f9e3 	bl	800c104 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bd3e:	2800      	cmp	r0, #0
 800bd40:	d0e9      	beq.n	800bd16 <SpiFlashStore::Flash()+0x26>
 800bd42:	4b12      	ldr	r3, [pc, #72]	; (800bd8c <SpiFlashStore::Flash()+0x9c>)
 800bd44:	681a      	ldr	r2, [r3, #0]
 800bd46:	4b12      	ldr	r3, [pc, #72]	; (800bd90 <SpiFlashStore::Flash()+0xa0>)
 800bd48:	601a      	str	r2, [r3, #0]
 800bd4a:	2305      	movs	r3, #5
 800bd4c:	e7e2      	b.n	800bd14 <SpiFlashStore::Flash()+0x24>
 800bd4e:	4b0f      	ldr	r3, [pc, #60]	; (800bd8c <SpiFlashStore::Flash()+0x9c>)
 800bd50:	4a0f      	ldr	r2, [pc, #60]	; (800bd90 <SpiFlashStore::Flash()+0xa0>)
 800bd52:	681b      	ldr	r3, [r3, #0]
 800bd54:	6812      	ldr	r2, [r2, #0]
 800bd56:	1a9b      	subs	r3, r3, r2
 800bd58:	2b63      	cmp	r3, #99	; 0x63
 800bd5a:	d9dc      	bls.n	800bd16 <SpiFlashStore::Flash()+0x26>
 800bd5c:	2304      	movs	r3, #4
 800bd5e:	e7d9      	b.n	800bd14 <SpiFlashStore::Flash()+0x24>
 800bd60:	2306      	movs	r3, #6
 800bd62:	e7d7      	b.n	800bd14 <SpiFlashStore::Flash()+0x24>
 800bd64:	ab03      	add	r3, sp, #12
 800bd66:	4a0d      	ldr	r2, [pc, #52]	; (800bd9c <SpiFlashStore::Flash()+0xac>)
 800bd68:	490a      	ldr	r1, [pc, #40]	; (800bd94 <SpiFlashStore::Flash()+0xa4>)
 800bd6a:	480b      	ldr	r0, [pc, #44]	; (800bd98 <SpiFlashStore::Flash()+0xa8>)
 800bd6c:	9300      	str	r3, [sp, #0]
 800bd6e:	6812      	ldr	r2, [r2, #0]
 800bd70:	4b0b      	ldr	r3, [pc, #44]	; (800bda0 <SpiFlashStore::Flash()+0xb0>)
 800bd72:	6809      	ldr	r1, [r1, #0]
 800bd74:	6800      	ldr	r0, [r0, #0]
 800bd76:	f000 fa65 	bl	800c244 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bd7a:	2800      	cmp	r0, #0
 800bd7c:	d0cb      	beq.n	800bd16 <SpiFlashStore::Flash()+0x26>
 800bd7e:	2000      	movs	r0, #0
 800bd80:	6020      	str	r0, [r4, #0]
 800bd82:	b004      	add	sp, #16
 800bd84:	bd10      	pop	{r4, pc}
 800bd86:	bf00      	nop
 800bd88:	20001b90 	mulcs	r0, r0, fp
 800bd8c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800bd90:	20000b80 	andcs	r0, r0, r0, lsl #23
 800bd94:	20001b84 	andcs	r1, r0, r4, lsl #23
 800bd98:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800bd9c:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800bda0:	20000b84 	andcs	r0, r0, r4, lsl #23

0800bda4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bda4:	4770      	bx	lr
	...

0800bda8 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800bda8:	2300      	movs	r3, #0
 800bdaa:	b507      	push	{r0, r1, r2, lr}
 800bdac:	4805      	ldr	r0, [pc, #20]	; (800bdc4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800bdae:	9300      	str	r3, [sp, #0]
 800bdb0:	460a      	mov	r2, r1
 800bdb2:	2322      	movs	r3, #34	; 0x22
 800bdb4:	210f      	movs	r1, #15
 800bdb6:	6800      	ldr	r0, [r0, #0]
 800bdb8:	f7ff ff66 	bl	800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bdbc:	b003      	add	sp, #12
 800bdbe:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdc2:	bf00      	nop
 800bdc4:	20001b94 	mulcs	r0, r4, fp

0800bdc8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800bdc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bdca:	2200      	movs	r2, #0
 800bdcc:	460b      	mov	r3, r1
 800bdce:	2122      	movs	r1, #34	; 0x22
 800bdd0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bdd4:	4804      	ldr	r0, [pc, #16]	; (800bde8 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800bdd6:	9100      	str	r1, [sp, #0]
 800bdd8:	6800      	ldr	r0, [r0, #0]
 800bdda:	210f      	movs	r1, #15
 800bddc:	f7ff ff14 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bde0:	b005      	add	sp, #20
 800bde2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bde6:	bf00      	nop
 800bde8:	20001b94 	mulcs	r0, r4, fp

0800bdec <StoreDisplayUdf::~StoreDisplayUdf()>:
 800bdec:	b510      	push	{r4, lr}
 800bdee:	4604      	mov	r4, r0
 800bdf0:	f003 fc9a 	bl	800f728 <operator delete(void*)>
 800bdf4:	4620      	mov	r0, r4
 800bdf6:	bd10      	pop	{r4, pc}

0800bdf8 <StoreDisplayUdf::StoreDisplayUdf()>:
 800bdf8:	4a02      	ldr	r2, [pc, #8]	; (800be04 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800bdfa:	6002      	str	r2, [r0, #0]
 800bdfc:	4a02      	ldr	r2, [pc, #8]	; (800be08 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800bdfe:	6010      	str	r0, [r2, #0]
 800be00:	4770      	bx	lr
 800be02:	bf00      	nop
 800be04:	080131e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, sp}
 800be08:	20001b9c 	mulcs	r0, ip, fp

0800be0c <StoreDmxSend::~StoreDmxSend()>:
 800be0c:	4770      	bx	lr
	...

0800be10 <StoreDmxSend::Copy(TDmxParams*)>:
 800be10:	2300      	movs	r3, #0
 800be12:	b507      	push	{r0, r1, r2, lr}
 800be14:	4805      	ldr	r0, [pc, #20]	; (800be2c <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800be16:	9300      	str	r3, [sp, #0]
 800be18:	460a      	mov	r2, r1
 800be1a:	230a      	movs	r3, #10
 800be1c:	2102      	movs	r1, #2
 800be1e:	6800      	ldr	r0, [r0, #0]
 800be20:	f7ff ff32 	bl	800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800be24:	b003      	add	sp, #12
 800be26:	f85d fb04 	ldr.w	pc, [sp], #4
 800be2a:	bf00      	nop
 800be2c:	20001b94 	mulcs	r0, r4, fp

0800be30 <StoreDmxSend::Update(TDmxParams const*)>:
 800be30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be32:	2200      	movs	r2, #0
 800be34:	460b      	mov	r3, r1
 800be36:	210a      	movs	r1, #10
 800be38:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800be3c:	4804      	ldr	r0, [pc, #16]	; (800be50 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800be3e:	9100      	str	r1, [sp, #0]
 800be40:	6800      	ldr	r0, [r0, #0]
 800be42:	2102      	movs	r1, #2
 800be44:	f7ff fee0 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be48:	b005      	add	sp, #20
 800be4a:	f85d fb04 	ldr.w	pc, [sp], #4
 800be4e:	bf00      	nop
 800be50:	20001b94 	mulcs	r0, r4, fp

0800be54 <StoreDmxSend::~StoreDmxSend()>:
 800be54:	b510      	push	{r4, lr}
 800be56:	4604      	mov	r4, r0
 800be58:	f003 fc66 	bl	800f728 <operator delete(void*)>
 800be5c:	4620      	mov	r0, r4
 800be5e:	bd10      	pop	{r4, pc}

0800be60 <StoreDmxSend::StoreDmxSend()>:
 800be60:	4a02      	ldr	r2, [pc, #8]	; (800be6c <StoreDmxSend::StoreDmxSend()+0xc>)
 800be62:	6002      	str	r2, [r0, #0]
 800be64:	4a02      	ldr	r2, [pc, #8]	; (800be70 <StoreDmxSend::StoreDmxSend()+0x10>)
 800be66:	6010      	str	r0, [r2, #0]
 800be68:	4770      	bx	lr
 800be6a:	bf00      	nop
 800be6c:	080131fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip, sp}
 800be70:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800be74 <StoreE131::~StoreE131()>:
 800be74:	4770      	bx	lr
	...

0800be78 <StoreE131::Copy(e131params::Params*)>:
 800be78:	2300      	movs	r3, #0
 800be7a:	b507      	push	{r0, r1, r2, lr}
 800be7c:	4805      	ldr	r0, [pc, #20]	; (800be94 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800be7e:	9300      	str	r3, [sp, #0]
 800be80:	460a      	mov	r2, r1
 800be82:	231f      	movs	r3, #31
 800be84:	2104      	movs	r1, #4
 800be86:	6800      	ldr	r0, [r0, #0]
 800be88:	f7ff fefe 	bl	800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800be8c:	b003      	add	sp, #12
 800be8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800be92:	bf00      	nop
 800be94:	20001b94 	mulcs	r0, r4, fp

0800be98 <StoreE131::Update(e131params::Params const*)>:
 800be98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be9a:	2200      	movs	r2, #0
 800be9c:	460b      	mov	r3, r1
 800be9e:	211f      	movs	r1, #31
 800bea0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bea4:	4804      	ldr	r0, [pc, #16]	; (800beb8 <StoreE131::Update(e131params::Params const*)+0x20>)
 800bea6:	9100      	str	r1, [sp, #0]
 800bea8:	6800      	ldr	r0, [r0, #0]
 800beaa:	2104      	movs	r1, #4
 800beac:	f7ff feac 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800beb0:	b005      	add	sp, #20
 800beb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800beb6:	bf00      	nop
 800beb8:	20001b94 	mulcs	r0, r4, fp

0800bebc <StoreE131::~StoreE131()>:
 800bebc:	b510      	push	{r4, lr}
 800bebe:	4604      	mov	r4, r0
 800bec0:	f003 fc32 	bl	800f728 <operator delete(void*)>
 800bec4:	4620      	mov	r0, r4
 800bec6:	bd10      	pop	{r4, pc}

0800bec8 <StoreE131::StoreE131()>:
 800bec8:	4a02      	ldr	r2, [pc, #8]	; (800bed4 <StoreE131::StoreE131()+0xc>)
 800beca:	6002      	str	r2, [r0, #0]
 800becc:	4a02      	ldr	r2, [pc, #8]	; (800bed8 <StoreE131::StoreE131()+0x10>)
 800bece:	6010      	str	r0, [r2, #0]
 800bed0:	4770      	bx	lr
 800bed2:	bf00      	nop
 800bed4:	08013214 	stmdaeq	r1, {r2, r4, r9, ip, sp}
 800bed8:	20001ba4 	andcs	r1, r0, r4, lsr #23

0800bedc <StoreNetwork::~StoreNetwork()>:
 800bedc:	4770      	bx	lr

0800bede <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bede:	3804      	subs	r0, #4
 800bee0:	4770      	bx	lr
	...

0800bee4 <StoreNetwork::Update(TNetworkParams const*)>:
 800bee4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bee6:	2200      	movs	r2, #0
 800bee8:	460b      	mov	r3, r1
 800beea:	215e      	movs	r1, #94	; 0x5e
 800beec:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bef0:	4804      	ldr	r0, [pc, #16]	; (800bf04 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800bef2:	9100      	str	r1, [sp, #0]
 800bef4:	6800      	ldr	r0, [r0, #0]
 800bef6:	4611      	mov	r1, r2
 800bef8:	f7ff fe86 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800befc:	b005      	add	sp, #20
 800befe:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf02:	bf00      	nop
 800bf04:	20001b94 	mulcs	r0, r4, fp

0800bf08 <StoreNetwork::SaveDhcp(bool)>:
 800bf08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf0a:	2301      	movs	r3, #1
 800bf0c:	f88d 1017 	strb.w	r1, [sp, #23]
 800bf10:	2100      	movs	r1, #0
 800bf12:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bf16:	4805      	ldr	r0, [pc, #20]	; (800bf2c <StoreNetwork::SaveDhcp(bool)+0x24>)
 800bf18:	9300      	str	r3, [sp, #0]
 800bf1a:	2214      	movs	r2, #20
 800bf1c:	6800      	ldr	r0, [r0, #0]
 800bf1e:	f10d 0317 	add.w	r3, sp, #23
 800bf22:	f7ff fe71 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf26:	b007      	add	sp, #28
 800bf28:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf2c:	20001b94 	mulcs	r0, r4, fp

0800bf30 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800bf30:	f1a0 0004 	sub.w	r0, r0, #4
 800bf34:	e7e8      	b.n	800bf08 <StoreNetwork::SaveDhcp(bool)>
 800bf36:	bf00      	nop

0800bf38 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bf38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf3a:	2308      	movs	r3, #8
 800bf3c:	9105      	str	r1, [sp, #20]
 800bf3e:	2100      	movs	r1, #0
 800bf40:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bf44:	2304      	movs	r3, #4
 800bf46:	4805      	ldr	r0, [pc, #20]	; (800bf5c <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800bf48:	9300      	str	r3, [sp, #0]
 800bf4a:	220c      	movs	r2, #12
 800bf4c:	6800      	ldr	r0, [r0, #0]
 800bf4e:	ab05      	add	r3, sp, #20
 800bf50:	f7ff fe5a 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf54:	b007      	add	sp, #28
 800bf56:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf5a:	bf00      	nop
 800bf5c:	20001b94 	mulcs	r0, r4, fp

0800bf60 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bf60:	f1a0 0004 	sub.w	r0, r0, #4
 800bf64:	e7e8      	b.n	800bf38 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800bf66:	bf00      	nop

0800bf68 <StoreNetwork::SaveNetMask(unsigned int)>:
 800bf68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf6a:	2304      	movs	r3, #4
 800bf6c:	9105      	str	r1, [sp, #20]
 800bf6e:	2100      	movs	r1, #0
 800bf70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bf74:	4804      	ldr	r0, [pc, #16]	; (800bf88 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800bf76:	9300      	str	r3, [sp, #0]
 800bf78:	2208      	movs	r2, #8
 800bf7a:	6800      	ldr	r0, [r0, #0]
 800bf7c:	ab05      	add	r3, sp, #20
 800bf7e:	f7ff fe43 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf82:	b007      	add	sp, #28
 800bf84:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf88:	20001b94 	mulcs	r0, r4, fp

0800bf8c <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800bf8c:	f1a0 0004 	sub.w	r0, r0, #4
 800bf90:	e7ea      	b.n	800bf68 <StoreNetwork::SaveNetMask(unsigned int)>
 800bf92:	bf00      	nop

0800bf94 <StoreNetwork::SaveIp(unsigned int)>:
 800bf94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf96:	2302      	movs	r3, #2
 800bf98:	9105      	str	r1, [sp, #20]
 800bf9a:	2100      	movs	r1, #0
 800bf9c:	2204      	movs	r2, #4
 800bf9e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bfa2:	4804      	ldr	r0, [pc, #16]	; (800bfb4 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800bfa4:	9200      	str	r2, [sp, #0]
 800bfa6:	6800      	ldr	r0, [r0, #0]
 800bfa8:	ab05      	add	r3, sp, #20
 800bfaa:	f7ff fe2d 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bfae:	b007      	add	sp, #28
 800bfb0:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfb4:	20001b94 	mulcs	r0, r4, fp

0800bfb8 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800bfb8:	f1a0 0004 	sub.w	r0, r0, #4
 800bfbc:	e7ea      	b.n	800bf94 <StoreNetwork::SaveIp(unsigned int)>
 800bfbe:	bf00      	nop

0800bfc0 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bfc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfc2:	460b      	mov	r3, r1
 800bfc4:	2020      	movs	r0, #32
 800bfc6:	2100      	movs	r1, #0
 800bfc8:	2a40      	cmp	r2, #64	; 0x40
 800bfca:	bf28      	it	cs
 800bfcc:	2240      	movcs	r2, #64	; 0x40
 800bfce:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800bfd2:	4804      	ldr	r0, [pc, #16]	; (800bfe4 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800bfd4:	9200      	str	r2, [sp, #0]
 800bfd6:	6800      	ldr	r0, [r0, #0]
 800bfd8:	2215      	movs	r2, #21
 800bfda:	f7ff fe15 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bfde:	b005      	add	sp, #20
 800bfe0:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfe4:	20001b94 	mulcs	r0, r4, fp

0800bfe8 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bfe8:	f1a0 0004 	sub.w	r0, r0, #4
 800bfec:	e7e8      	b.n	800bfc0 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800bfee:	bf00      	nop

0800bff0 <StoreNetwork::~StoreNetwork()>:
 800bff0:	b510      	push	{r4, lr}
 800bff2:	4604      	mov	r4, r0
 800bff4:	f003 fb98 	bl	800f728 <operator delete(void*)>
 800bff8:	4620      	mov	r0, r4
 800bffa:	bd10      	pop	{r4, pc}

0800bffc <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bffc:	f1a0 0004 	sub.w	r0, r0, #4
 800c000:	e7f6      	b.n	800bff0 <StoreNetwork::~StoreNetwork()>
	...

0800c004 <StoreNetwork::Copy(TNetworkParams*)>:
 800c004:	b507      	push	{r0, r1, r2, lr}
 800c006:	460a      	mov	r2, r1
 800c008:	2100      	movs	r1, #0
 800c00a:	4804      	ldr	r0, [pc, #16]	; (800c01c <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800c00c:	9100      	str	r1, [sp, #0]
 800c00e:	235e      	movs	r3, #94	; 0x5e
 800c010:	6800      	ldr	r0, [r0, #0]
 800c012:	f7ff fe39 	bl	800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800c016:	b003      	add	sp, #12
 800c018:	f85d fb04 	ldr.w	pc, [sp], #4
 800c01c:	20001b94 	mulcs	r0, r4, fp

0800c020 <StoreNetwork::StoreNetwork()>:
 800c020:	4a03      	ldr	r2, [pc, #12]	; (800c030 <StoreNetwork::StoreNetwork()+0x10>)
 800c022:	6002      	str	r2, [r0, #0]
 800c024:	322c      	adds	r2, #44	; 0x2c
 800c026:	6042      	str	r2, [r0, #4]
 800c028:	4a02      	ldr	r2, [pc, #8]	; (800c034 <StoreNetwork::StoreNetwork()+0x14>)
 800c02a:	6010      	str	r0, [r2, #0]
 800c02c:	4770      	bx	lr
 800c02e:	bf00      	nop
 800c030:	0801322c 	stmdaeq	r1, {r2, r3, r5, r9, ip, sp}
 800c034:	20001ba8 	andcs	r1, r0, r8, lsr #23

0800c038 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800c038:	4770      	bx	lr
	...

0800c03c <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800c03c:	2300      	movs	r3, #0
 800c03e:	b507      	push	{r0, r1, r2, lr}
 800c040:	4805      	ldr	r0, [pc, #20]	; (800c058 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800c042:	9300      	str	r3, [sp, #0]
 800c044:	460a      	mov	r2, r1
 800c046:	2320      	movs	r3, #32
 800c048:	210c      	movs	r1, #12
 800c04a:	6800      	ldr	r0, [r0, #0]
 800c04c:	f7ff fe1c 	bl	800bc88 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800c050:	b003      	add	sp, #12
 800c052:	f85d fb04 	ldr.w	pc, [sp], #4
 800c056:	bf00      	nop
 800c058:	20001b94 	mulcs	r0, r4, fp

0800c05c <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800c05c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c05e:	2200      	movs	r2, #0
 800c060:	460b      	mov	r3, r1
 800c062:	2120      	movs	r1, #32
 800c064:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800c068:	4804      	ldr	r0, [pc, #16]	; (800c07c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800c06a:	9100      	str	r1, [sp, #0]
 800c06c:	6800      	ldr	r0, [r0, #0]
 800c06e:	210c      	movs	r1, #12
 800c070:	f7ff fdca 	bl	800bc08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800c074:	b005      	add	sp, #20
 800c076:	f85d fb04 	ldr.w	pc, [sp], #4
 800c07a:	bf00      	nop
 800c07c:	20001b94 	mulcs	r0, r4, fp

0800c080 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800c080:	b510      	push	{r4, lr}
 800c082:	4604      	mov	r4, r0
 800c084:	f003 fb50 	bl	800f728 <operator delete(void*)>
 800c088:	4620      	mov	r0, r4
 800c08a:	bd10      	pop	{r4, pc}

0800c08c <StoreRemoteConfig::StoreRemoteConfig()>:
 800c08c:	4a02      	ldr	r2, [pc, #8]	; (800c098 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800c08e:	6002      	str	r2, [r0, #0]
 800c090:	4a02      	ldr	r2, [pc, #8]	; (800c09c <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800c092:	6010      	str	r0, [r2, #0]
 800c094:	4770      	bx	lr
 800c096:	bf00      	nop
 800c098:	0801327c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, ip, sp}
 800c09c:	20001bac 	andcs	r1, r0, ip, lsr #23

0800c0a0 <FlashRom::FlashRom()>:
 800c0a0:	4b07      	ldr	r3, [pc, #28]	; (800c0c0 <FlashRom::FlashRom()+0x20>)
 800c0a2:	b510      	push	{r4, lr}
 800c0a4:	6018      	str	r0, [r3, #0]
 800c0a6:	2301      	movs	r3, #1
 800c0a8:	4604      	mov	r4, r0
 800c0aa:	7003      	strb	r3, [r0, #0]
 800c0ac:	4b05      	ldr	r3, [pc, #20]	; (800c0c4 <FlashRom::FlashRom()+0x24>)
 800c0ae:	4906      	ldr	r1, [pc, #24]	; (800c0c8 <FlashRom::FlashRom()+0x28>)
 800c0b0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c0b4:	4805      	ldr	r0, [pc, #20]	; (800c0cc <FlashRom::FlashRom()+0x2c>)
 800c0b6:	029a      	lsls	r2, r3, #10
 800c0b8:	f003 fe32 	bl	800fd20 <printf>
 800c0bc:	4620      	mov	r0, r4
 800c0be:	bd10      	pop	{r4, pc}
 800c0c0:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800c0c4:	1ffff700 	svcne	0x00fff700
 800c0c8:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800c0cc:	0801328c 	stmdaeq	r1, {r2, r3, r7, r9, ip, sp}

0800c0d0 <FlashRom::GetSize() const>:
 800c0d0:	4b02      	ldr	r3, [pc, #8]	; (800c0dc <FlashRom::GetSize() const+0xc>)
 800c0d2:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800c0d6:	0280      	lsls	r0, r0, #10
 800c0d8:	4770      	bx	lr
 800c0da:	bf00      	nop
 800c0dc:	1ffff700 	svcne	0x00fff700

0800c0e0 <FlashRom::GetSectorSize() const>:
 800c0e0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800c0e4:	4770      	bx	lr

0800c0e6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800c0e6:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c0ea:	441a      	add	r2, r3
 800c0ec:	4293      	cmp	r3, r2
 800c0ee:	d004      	beq.n	800c0fa <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800c0f0:	f851 0b04 	ldr.w	r0, [r1], #4
 800c0f4:	f843 0b04 	str.w	r0, [r3], #4
 800c0f8:	e7f8      	b.n	800c0ec <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800c0fa:	2200      	movs	r2, #0
 800c0fc:	9b00      	ldr	r3, [sp, #0]
 800c0fe:	2001      	movs	r0, #1
 800c100:	601a      	str	r2, [r3, #0]
 800c102:	4770      	bx	lr

0800c104 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800c104:	2000      	movs	r0, #0
 800c106:	b538      	push	{r3, r4, r5, lr}
 800c108:	4c47      	ldr	r4, [pc, #284]	; (800c228 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800c10a:	6018      	str	r0, [r3, #0]
 800c10c:	6823      	ldr	r3, [r4, #0]
 800c10e:	2b04      	cmp	r3, #4
 800c110:	f200 8082 	bhi.w	800c218 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c114:	e8df f003 	tbb	[pc, r3]
 800c118:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800c11c:	4b430080 	blmi	90cc324 <__exidx_end+0x10b87a4>
 800c120:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c124:	6019      	str	r1, [r3, #0]
 800c126:	4b42      	ldr	r3, [pc, #264]	; (800c230 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c128:	601a      	str	r2, [r3, #0]
 800c12a:	4b42      	ldr	r3, [pc, #264]	; (800c234 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800c12c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c130:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c134:	4b40      	ldr	r3, [pc, #256]	; (800c238 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c136:	d807      	bhi.n	800c148 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800c138:	2201      	movs	r2, #1
 800c13a:	701a      	strb	r2, [r3, #0]
 800c13c:	f004 f8bc 	bl	80102b8 <fmc_bank0_unlock>
 800c140:	2301      	movs	r3, #1
 800c142:	6023      	str	r3, [r4, #0]
 800c144:	2000      	movs	r0, #0
 800c146:	e026      	b.n	800c196 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c148:	4a3c      	ldr	r2, [pc, #240]	; (800c23c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800c14a:	4291      	cmp	r1, r2
 800c14c:	d3f4      	bcc.n	800c138 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800c14e:	2200      	movs	r2, #0
 800c150:	701a      	strb	r2, [r3, #0]
 800c152:	f004 f8bf 	bl	80102d4 <fmc_bank1_unlock>
 800c156:	e7f3      	b.n	800c140 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c158:	4d37      	ldr	r5, [pc, #220]	; (800c238 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c15a:	782b      	ldrb	r3, [r5, #0]
 800c15c:	b15b      	cbz	r3, 800c176 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800c15e:	f004 f8d7 	bl	8010310 <fmc_bank0_state_get>
 800c162:	2801      	cmp	r0, #1
 800c164:	d0ee      	beq.n	800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800c166:	7829      	ldrb	r1, [r5, #0]
 800c168:	4b35      	ldr	r3, [pc, #212]	; (800c240 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c16a:	b939      	cbnz	r1, 800c17c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800c16c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c16e:	f022 0202 	bic.w	r2, r2, #2
 800c172:	651a      	str	r2, [r3, #80]	; 0x50
 800c174:	e006      	b.n	800c184 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800c176:	f004 f8df 	bl	8010338 <fmc_bank1_state_get>
 800c17a:	e7f2      	b.n	800c162 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800c17c:	691a      	ldr	r2, [r3, #16]
 800c17e:	f022 0202 	bic.w	r2, r2, #2
 800c182:	611a      	str	r2, [r3, #16]
 800c184:	4b2a      	ldr	r3, [pc, #168]	; (800c230 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c186:	681b      	ldr	r3, [r3, #0]
 800c188:	b94b      	cbnz	r3, 800c19e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800c18a:	b129      	cbz	r1, 800c198 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800c18c:	f004 f8b0 	bl	80102f0 <fmc_bank0_lock>
 800c190:	2300      	movs	r3, #0
 800c192:	2001      	movs	r0, #1
 800c194:	6023      	str	r3, [r4, #0]
 800c196:	bd38      	pop	{r3, r4, r5, pc}
 800c198:	f004 f8b2 	bl	8010300 <fmc_bank1_lock>
 800c19c:	e7f8      	b.n	800c190 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800c19e:	2302      	movs	r3, #2
 800c1a0:	e7cf      	b.n	800c142 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800c1a2:	4923      	ldr	r1, [pc, #140]	; (800c230 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c1a4:	680b      	ldr	r3, [r1, #0]
 800c1a6:	2b00      	cmp	r3, #0
 800c1a8:	d0ca      	beq.n	800c140 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c1aa:	4b23      	ldr	r3, [pc, #140]	; (800c238 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c1ac:	4a1f      	ldr	r2, [pc, #124]	; (800c22c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800c1ae:	7818      	ldrb	r0, [r3, #0]
 800c1b0:	4b23      	ldr	r3, [pc, #140]	; (800c240 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1b2:	b190      	cbz	r0, 800c1da <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800c1b4:	6918      	ldr	r0, [r3, #16]
 800c1b6:	f040 0002 	orr.w	r0, r0, #2
 800c1ba:	6118      	str	r0, [r3, #16]
 800c1bc:	6810      	ldr	r0, [r2, #0]
 800c1be:	6158      	str	r0, [r3, #20]
 800c1c0:	6918      	ldr	r0, [r3, #16]
 800c1c2:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800c1c6:	6118      	str	r0, [r3, #16]
 800c1c8:	680b      	ldr	r3, [r1, #0]
 800c1ca:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800c1ce:	600b      	str	r3, [r1, #0]
 800c1d0:	6813      	ldr	r3, [r2, #0]
 800c1d2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c1d6:	6013      	str	r3, [r2, #0]
 800c1d8:	e7b2      	b.n	800c140 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c1da:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c1dc:	f040 0002 	orr.w	r0, r0, #2
 800c1e0:	6518      	str	r0, [r3, #80]	; 0x50
 800c1e2:	6810      	ldr	r0, [r2, #0]
 800c1e4:	6558      	str	r0, [r3, #84]	; 0x54
 800c1e6:	69dd      	ldr	r5, [r3, #28]
 800c1e8:	07ad      	lsls	r5, r5, #30
 800c1ea:	bf48      	it	mi
 800c1ec:	6158      	strmi	r0, [r3, #20]
 800c1ee:	4814      	ldr	r0, [pc, #80]	; (800c240 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1f0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c1f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c1f6:	6503      	str	r3, [r0, #80]	; 0x50
 800c1f8:	680b      	ldr	r3, [r1, #0]
 800c1fa:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800c1fe:	600b      	str	r3, [r1, #0]
 800c200:	6813      	ldr	r3, [r2, #0]
 800c202:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c206:	e7e6      	b.n	800c1d6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800c208:	4b0b      	ldr	r3, [pc, #44]	; (800c238 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c20a:	781a      	ldrb	r2, [r3, #0]
 800c20c:	4b0c      	ldr	r3, [pc, #48]	; (800c240 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c20e:	b132      	cbz	r2, 800c21e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800c210:	691a      	ldr	r2, [r3, #16]
 800c212:	f022 0201 	bic.w	r2, r2, #1
 800c216:	611a      	str	r2, [r3, #16]
 800c218:	2000      	movs	r0, #0
 800c21a:	6020      	str	r0, [r4, #0]
 800c21c:	e7bb      	b.n	800c196 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c21e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c220:	f022 0201 	bic.w	r2, r2, #1
 800c224:	651a      	str	r2, [r3, #80]	; 0x50
 800c226:	e7f7      	b.n	800c218 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c228:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c22c:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800c230:	20001bc8 	andcs	r1, r0, r8, asr #23
 800c234:	1ffff700 	svcne	0x00fff700
 800c238:	20001bc4 	andcs	r1, r0, r4, asr #23
 800c23c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c240:	40022000 	andmi	r2, r2, r0

0800c244 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800c244:	b570      	push	{r4, r5, r6, lr}
 800c246:	2400      	movs	r4, #0
 800c248:	9804      	ldr	r0, [sp, #16]
 800c24a:	6004      	str	r4, [r0, #0]
 800c24c:	4c48      	ldr	r4, [pc, #288]	; (800c370 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800c24e:	6820      	ldr	r0, [r4, #0]
 800c250:	2804      	cmp	r0, #4
 800c252:	d848      	bhi.n	800c2e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800c254:	e8df f000 	tbb	[pc, r0]
 800c258:	22847c03 	addcs	r7, r4, #768	; 0x300
 800c25c:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800c260:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c264:	6001      	str	r1, [r0, #0]
 800c266:	4844      	ldr	r0, [pc, #272]	; (800c378 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c268:	6003      	str	r3, [r0, #0]
 800c26a:	4b44      	ldr	r3, [pc, #272]	; (800c37c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c26c:	601a      	str	r2, [r3, #0]
 800c26e:	4b44      	ldr	r3, [pc, #272]	; (800c380 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c270:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c274:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c278:	4b42      	ldr	r3, [pc, #264]	; (800c384 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c27a:	d807      	bhi.n	800c28c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c27c:	2201      	movs	r2, #1
 800c27e:	701a      	strb	r2, [r3, #0]
 800c280:	f004 f81a 	bl	80102b8 <fmc_bank0_unlock>
 800c284:	2303      	movs	r3, #3
 800c286:	6023      	str	r3, [r4, #0]
 800c288:	2000      	movs	r0, #0
 800c28a:	e026      	b.n	800c2da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c28c:	4a3e      	ldr	r2, [pc, #248]	; (800c388 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c28e:	4291      	cmp	r1, r2
 800c290:	d3f4      	bcc.n	800c27c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c292:	2200      	movs	r2, #0
 800c294:	701a      	strb	r2, [r3, #0]
 800c296:	f004 f81d 	bl	80102d4 <fmc_bank1_unlock>
 800c29a:	e7f3      	b.n	800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c29c:	4d39      	ldr	r5, [pc, #228]	; (800c384 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c29e:	782b      	ldrb	r3, [r5, #0]
 800c2a0:	b15b      	cbz	r3, 800c2ba <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c2a2:	f004 f835 	bl	8010310 <fmc_bank0_state_get>
 800c2a6:	2801      	cmp	r0, #1
 800c2a8:	d0ee      	beq.n	800c288 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c2aa:	7829      	ldrb	r1, [r5, #0]
 800c2ac:	4b37      	ldr	r3, [pc, #220]	; (800c38c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2ae:	b939      	cbnz	r1, 800c2c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c2b0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c2b2:	f022 0201 	bic.w	r2, r2, #1
 800c2b6:	651a      	str	r2, [r3, #80]	; 0x50
 800c2b8:	e006      	b.n	800c2c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c2ba:	f004 f83d 	bl	8010338 <fmc_bank1_state_get>
 800c2be:	e7f2      	b.n	800c2a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c2c0:	691a      	ldr	r2, [r3, #16]
 800c2c2:	f022 0201 	bic.w	r2, r2, #1
 800c2c6:	611a      	str	r2, [r3, #16]
 800c2c8:	4b2c      	ldr	r3, [pc, #176]	; (800c37c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c2ca:	681b      	ldr	r3, [r3, #0]
 800c2cc:	b94b      	cbnz	r3, 800c2e2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c2ce:	b129      	cbz	r1, 800c2dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c2d0:	f004 f80e 	bl	80102f0 <fmc_bank0_lock>
 800c2d4:	2300      	movs	r3, #0
 800c2d6:	2001      	movs	r0, #1
 800c2d8:	6023      	str	r3, [r4, #0]
 800c2da:	bd70      	pop	{r4, r5, r6, pc}
 800c2dc:	f004 f810 	bl	8010300 <fmc_bank1_lock>
 800c2e0:	e7f8      	b.n	800c2d4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c2e2:	2304      	movs	r3, #4
 800c2e4:	e7cf      	b.n	800c286 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c2e6:	4a25      	ldr	r2, [pc, #148]	; (800c37c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c2e8:	6813      	ldr	r3, [r2, #0]
 800c2ea:	2b03      	cmp	r3, #3
 800c2ec:	d91a      	bls.n	800c324 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c2ee:	4b25      	ldr	r3, [pc, #148]	; (800c384 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c2f0:	7819      	ldrb	r1, [r3, #0]
 800c2f2:	4b26      	ldr	r3, [pc, #152]	; (800c38c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2f4:	b189      	cbz	r1, 800c31a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c2f6:	6919      	ldr	r1, [r3, #16]
 800c2f8:	f041 0101 	orr.w	r1, r1, #1
 800c2fc:	6119      	str	r1, [r3, #16]
 800c2fe:	4d1e      	ldr	r5, [pc, #120]	; (800c378 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c300:	481c      	ldr	r0, [pc, #112]	; (800c374 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c302:	6829      	ldr	r1, [r5, #0]
 800c304:	6803      	ldr	r3, [r0, #0]
 800c306:	f851 6b04 	ldr.w	r6, [r1], #4
 800c30a:	f843 6b04 	str.w	r6, [r3], #4
 800c30e:	6003      	str	r3, [r0, #0]
 800c310:	6813      	ldr	r3, [r2, #0]
 800c312:	6029      	str	r1, [r5, #0]
 800c314:	3b04      	subs	r3, #4
 800c316:	6013      	str	r3, [r2, #0]
 800c318:	e7b4      	b.n	800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c31a:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c31c:	f041 0101 	orr.w	r1, r1, #1
 800c320:	6519      	str	r1, [r3, #80]	; 0x50
 800c322:	e7ec      	b.n	800c2fe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c324:	2b00      	cmp	r3, #0
 800c326:	d0ad      	beq.n	800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c328:	4b16      	ldr	r3, [pc, #88]	; (800c384 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c32a:	781a      	ldrb	r2, [r3, #0]
 800c32c:	4b17      	ldr	r3, [pc, #92]	; (800c38c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c32e:	b152      	cbz	r2, 800c346 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c330:	691a      	ldr	r2, [r3, #16]
 800c332:	f042 0201 	orr.w	r2, r2, #1
 800c336:	611a      	str	r2, [r3, #16]
 800c338:	4a0f      	ldr	r2, [pc, #60]	; (800c378 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c33a:	4b0e      	ldr	r3, [pc, #56]	; (800c374 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c33c:	6812      	ldr	r2, [r2, #0]
 800c33e:	681b      	ldr	r3, [r3, #0]
 800c340:	6812      	ldr	r2, [r2, #0]
 800c342:	601a      	str	r2, [r3, #0]
 800c344:	e79e      	b.n	800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c346:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c348:	f042 0201 	orr.w	r2, r2, #1
 800c34c:	651a      	str	r2, [r3, #80]	; 0x50
 800c34e:	e7f3      	b.n	800c338 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c350:	4b0c      	ldr	r3, [pc, #48]	; (800c384 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c352:	781a      	ldrb	r2, [r3, #0]
 800c354:	4b0d      	ldr	r3, [pc, #52]	; (800c38c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c356:	b132      	cbz	r2, 800c366 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c358:	691a      	ldr	r2, [r3, #16]
 800c35a:	f022 0202 	bic.w	r2, r2, #2
 800c35e:	611a      	str	r2, [r3, #16]
 800c360:	2000      	movs	r0, #0
 800c362:	6020      	str	r0, [r4, #0]
 800c364:	e7b9      	b.n	800c2da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c366:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c368:	f022 0202 	bic.w	r2, r2, #2
 800c36c:	651a      	str	r2, [r3, #80]	; 0x50
 800c36e:	e7f7      	b.n	800c360 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c370:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c374:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800c378:	20001bc0 	andcs	r1, r0, r0, asr #23
 800c37c:	20001bc8 	andcs	r1, r0, r8, asr #23
 800c380:	1ffff700 	svcne	0x00fff700
 800c384:	20001bc4 	andcs	r1, r0, r4, asr #23
 800c388:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c38c:	40022000 	andmi	r2, r2, r0

0800c390 <net_timers_run>:
 800c390:	4b05      	ldr	r3, [pc, #20]	; (800c3a8 <net_timers_run+0x18>)
 800c392:	4a06      	ldr	r2, [pc, #24]	; (800c3ac <net_timers_run+0x1c>)
 800c394:	681b      	ldr	r3, [r3, #0]
 800c396:	6811      	ldr	r1, [r2, #0]
 800c398:	4299      	cmp	r1, r3
 800c39a:	d803      	bhi.n	800c3a4 <net_timers_run+0x14>
 800c39c:	3364      	adds	r3, #100	; 0x64
 800c39e:	6013      	str	r3, [r2, #0]
 800c3a0:	f001 be9a 	b.w	800e0d8 <igmp_timer>
 800c3a4:	4770      	bx	lr
 800c3a6:	bf00      	nop
 800c3a8:	20009bd4 	ldrdcs	r9, [r0], -r4
 800c3ac:	20001be4 	andcs	r1, r0, r4, ror #23

0800c3b0 <rfc3927>:
 800c3b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3b4:	4605      	mov	r5, r0
 800c3b6:	26ff      	movs	r6, #255	; 0xff
 800c3b8:	4b18      	ldr	r3, [pc, #96]	; (800c41c <rfc3927+0x6c>)
 800c3ba:	4f19      	ldr	r7, [pc, #100]	; (800c420 <rfc3927+0x70>)
 800c3bc:	791a      	ldrb	r2, [r3, #4]
 800c3be:	78dc      	ldrb	r4, [r3, #3]
 800c3c0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c424 <rfc3927+0x74>
 800c3c4:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c3c8:	f8d7 9000 	ldr.w	r9, [r7]
 800c3cc:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c428 <rfc3927+0x78>
 800c3d0:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c42c <rfc3927+0x7c>
 800c3d4:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c3d8:	4659      	mov	r1, fp
 800c3da:	4620      	mov	r0, r4
 800c3dc:	f001 fbca 	bl	800db74 <arp_cache_lookup>
 800c3e0:	b938      	cbnz	r0, 800c3f2 <rfc3927+0x42>
 800c3e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3e6:	2001      	movs	r0, #1
 800c3e8:	602c      	str	r4, [r5, #0]
 800c3ea:	60ac      	str	r4, [r5, #8]
 800c3ec:	606b      	str	r3, [r5, #4]
 800c3ee:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3f2:	ba24      	rev	r4, r4
 800c3f4:	3401      	adds	r4, #1
 800c3f6:	3e01      	subs	r6, #1
 800c3f8:	ba24      	rev	r4, r4
 800c3fa:	b2b6      	uxth	r6, r6
 800c3fc:	4554      	cmp	r4, sl
 800c3fe:	bf08      	it	eq
 800c400:	4644      	moveq	r4, r8
 800c402:	b12e      	cbz	r6, 800c410 <rfc3927+0x60>
 800c404:	683b      	ldr	r3, [r7, #0]
 800c406:	eba3 0309 	sub.w	r3, r3, r9
 800c40a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c40e:	d3e3      	bcc.n	800c3d8 <rfc3927+0x28>
 800c410:	2000      	movs	r0, #0
 800c412:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800c416:	6028      	str	r0, [r5, #0]
 800c418:	e7e9      	b.n	800c3ee <rfc3927+0x3e>
 800c41a:	bf00      	nop
 800c41c:	20001be8 	andcs	r1, r0, r8, ror #23
 800c420:	20009bd4 	ldrdcs	r9, [r0], -r4
 800c424:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c428:	20001bf0 	strdcs	r1, [r0], -r0
 800c42c:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c430 <_init_tcb>:
 800c430:	b510      	push	{r4, lr}
 800c432:	4603      	mov	r3, r0
 800c434:	2400      	movs	r4, #0
 800c436:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c43a:	4293      	cmp	r3, r2
 800c43c:	d10d      	bne.n	800c45a <_init_tcb+0x2a>
 800c43e:	4b08      	ldr	r3, [pc, #32]	; (800c460 <_init_tcb+0x30>)
 800c440:	f640 3268 	movw	r2, #2920	; 0xb68
 800c444:	681b      	ldr	r3, [r3, #0]
 800c446:	8702      	strh	r2, [r0, #56]	; 0x38
 800c448:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c44c:	6283      	str	r3, [r0, #40]	; 0x28
 800c44e:	6243      	str	r3, [r0, #36]	; 0x24
 800c450:	2301      	movs	r3, #1
 800c452:	8001      	strh	r1, [r0, #0]
 800c454:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c458:	bd10      	pop	{r4, pc}
 800c45a:	f803 4b01 	strb.w	r4, [r3], #1
 800c45e:	e7ec      	b.n	800c43a <_init_tcb+0xa>
 800c460:	20009bd4 	ldrdcs	r9, [r0], -r4

0800c464 <memcpy.isra.0>:
 800c464:	3801      	subs	r0, #1
 800c466:	440a      	add	r2, r1
 800c468:	4291      	cmp	r1, r2
 800c46a:	d100      	bne.n	800c46e <memcpy.isra.0+0xa>
 800c46c:	4770      	bx	lr
 800c46e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c472:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c476:	e7f7      	b.n	800c468 <memcpy.isra.0+0x4>

0800c478 <_bswap32>:
 800c478:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c47a:	2204      	movs	r2, #4
 800c47c:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c480:	4629      	mov	r1, r5
 800c482:	4604      	mov	r4, r0
 800c484:	eb0d 0002 	add.w	r0, sp, r2
 800c488:	f7ff ffec 	bl	800c464 <memcpy.isra.0>
 800c48c:	2204      	movs	r2, #4
 800c48e:	9b01      	ldr	r3, [sp, #4]
 800c490:	eb0d 0102 	add.w	r1, sp, r2
 800c494:	ba1b      	rev	r3, r3
 800c496:	4628      	mov	r0, r5
 800c498:	9301      	str	r3, [sp, #4]
 800c49a:	f7ff ffe3 	bl	800c464 <memcpy.isra.0>
 800c49e:	2204      	movs	r2, #4
 800c4a0:	3426      	adds	r4, #38	; 0x26
 800c4a2:	eb0d 0002 	add.w	r0, sp, r2
 800c4a6:	4621      	mov	r1, r4
 800c4a8:	f7ff ffdc 	bl	800c464 <memcpy.isra.0>
 800c4ac:	2204      	movs	r2, #4
 800c4ae:	9b01      	ldr	r3, [sp, #4]
 800c4b0:	4620      	mov	r0, r4
 800c4b2:	ba1b      	rev	r3, r3
 800c4b4:	eb0d 0102 	add.w	r1, sp, r2
 800c4b8:	9301      	str	r3, [sp, #4]
 800c4ba:	f7ff ffd3 	bl	800c464 <memcpy.isra.0>
 800c4be:	b003      	add	sp, #12
 800c4c0:	bd30      	pop	{r4, r5, pc}
	...

0800c4c4 <_tcp_send_package>:
 800c4c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c4c8:	7a0b      	ldrb	r3, [r1, #8]
 800c4ca:	4605      	mov	r5, r0
 800c4cc:	f013 0f02 	tst.w	r3, #2
 800c4d0:	bf0c      	ite	eq
 800c4d2:	f04f 0905 	moveq.w	r9, #5
 800c4d6:	f04f 0906 	movne.w	r9, #6
 800c4da:	f04f 0800 	mov.w	r8, #0
 800c4de:	4c4b      	ldr	r4, [pc, #300]	; (800c60c <_tcp_send_package+0x148>)
 800c4e0:	460f      	mov	r7, r1
 800c4e2:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c4e4:	f100 0108 	add.w	r1, r0, #8
 800c4e8:	2206      	movs	r2, #6
 800c4ea:	4620      	mov	r0, r4
 800c4ec:	f7ff ffba 	bl	800c464 <memcpy.isra.0>
 800c4f0:	4a47      	ldr	r2, [pc, #284]	; (800c610 <_tcp_send_package+0x14c>)
 800c4f2:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800c4f6:	8813      	ldrh	r3, [r2, #0]
 800c4f8:	b2b6      	uxth	r6, r6
 800c4fa:	1c59      	adds	r1, r3, #1
 800c4fc:	8263      	strh	r3, [r4, #18]
 800c4fe:	f105 0a04 	add.w	sl, r5, #4
 800c502:	f106 0314 	add.w	r3, r6, #20
 800c506:	ba5b      	rev16	r3, r3
 800c508:	8011      	strh	r1, [r2, #0]
 800c50a:	f104 001e 	add.w	r0, r4, #30
 800c50e:	2204      	movs	r2, #4
 800c510:	4651      	mov	r1, sl
 800c512:	8223      	strh	r3, [r4, #16]
 800c514:	f7ff ffa6 	bl	800c464 <memcpy.isra.0>
 800c518:	2114      	movs	r1, #20
 800c51a:	f104 000e 	add.w	r0, r4, #14
 800c51e:	f884 8018 	strb.w	r8, [r4, #24]
 800c522:	f884 8019 	strb.w	r8, [r4, #25]
 800c526:	f001 fe6a 	bl	800e1fe <net_chksum>
 800c52a:	882b      	ldrh	r3, [r5, #0]
 800c52c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800c530:	8463      	strh	r3, [r4, #34]	; 0x22
 800c532:	886b      	ldrh	r3, [r5, #2]
 800c534:	8320      	strh	r0, [r4, #24]
 800c536:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c538:	683b      	ldr	r3, [r7, #0]
 800c53a:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c53c:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c540:	687b      	ldr	r3, [r7, #4]
 800c542:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800c546:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c54a:	7a3b      	ldrb	r3, [r7, #8]
 800c54c:	8622      	strh	r2, [r4, #48]	; 0x30
 800c54e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c552:	079b      	lsls	r3, r3, #30
 800c554:	bf48      	it	mi
 800c556:	2302      	movmi	r3, #2
 800c558:	8baa      	ldrh	r2, [r5, #28]
 800c55a:	bf44      	itt	mi
 800c55c:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800c560:	2304      	movmi	r3, #4
 800c562:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c564:	bf41      	itttt	mi
 800c566:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800c56a:	4622      	movmi	r2, r4
 800c56c:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c570:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c574:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c576:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800c57a:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800c57e:	bf58      	it	pl
 800c580:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c584:	2b00      	cmp	r3, #0
 800c586:	d13f      	bne.n	800c608 <_tcp_send_package+0x144>
 800c588:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c58a:	4820      	ldr	r0, [pc, #128]	; (800c60c <_tcp_send_package+0x148>)
 800c58c:	ba5b      	rev16	r3, r3
 800c58e:	8463      	strh	r3, [r4, #34]	; 0x22
 800c590:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c592:	ba5b      	rev16	r3, r3
 800c594:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c596:	f7ff ff6f 	bl	800c478 <_bswap32>
 800c59a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c59c:	a801      	add	r0, sp, #4
 800c59e:	ba5b      	rev16	r3, r3
 800c5a0:	8623      	strh	r3, [r4, #48]	; 0x30
 800c5a2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c5a4:	220c      	movs	r2, #12
 800c5a6:	ba5b      	rev16	r3, r3
 800c5a8:	491a      	ldr	r1, [pc, #104]	; (800c614 <_tcp_send_package+0x150>)
 800c5aa:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c5ac:	f7ff ff5a 	bl	800c464 <memcpy.isra.0>
 800c5b0:	2204      	movs	r2, #4
 800c5b2:	4919      	ldr	r1, [pc, #100]	; (800c618 <_tcp_send_package+0x154>)
 800c5b4:	4817      	ldr	r0, [pc, #92]	; (800c614 <_tcp_send_package+0x150>)
 800c5b6:	f7ff ff55 	bl	800c464 <memcpy.isra.0>
 800c5ba:	2204      	movs	r2, #4
 800c5bc:	4651      	mov	r1, sl
 800c5be:	4817      	ldr	r0, [pc, #92]	; (800c61c <_tcp_send_package+0x158>)
 800c5c0:	f7ff ff50 	bl	800c464 <memcpy.isra.0>
 800c5c4:	2300      	movs	r3, #0
 800c5c6:	77a3      	strb	r3, [r4, #30]
 800c5c8:	2306      	movs	r3, #6
 800c5ca:	f106 010c 	add.w	r1, r6, #12
 800c5ce:	77e3      	strb	r3, [r4, #31]
 800c5d0:	4810      	ldr	r0, [pc, #64]	; (800c614 <_tcp_send_package+0x150>)
 800c5d2:	ba73      	rev16	r3, r6
 800c5d4:	8423      	strh	r3, [r4, #32]
 800c5d6:	f001 fe12 	bl	800e1fe <net_chksum>
 800c5da:	a901      	add	r1, sp, #4
 800c5dc:	4605      	mov	r5, r0
 800c5de:	220c      	movs	r2, #12
 800c5e0:	480c      	ldr	r0, [pc, #48]	; (800c614 <_tcp_send_package+0x150>)
 800c5e2:	f7ff ff3f 	bl	800c464 <memcpy.isra.0>
 800c5e6:	4809      	ldr	r0, [pc, #36]	; (800c60c <_tcp_send_package+0x148>)
 800c5e8:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c5ec:	8665      	strh	r5, [r4, #50]	; 0x32
 800c5ee:	b004      	add	sp, #16
 800c5f0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5f4:	f004 bb70 	b.w	8010cd8 <emac_eth_send>
 800c5f8:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c5fa:	5cc9      	ldrb	r1, [r1, r3]
 800c5fc:	54d1      	strb	r1, [r2, r3]
 800c5fe:	3301      	adds	r3, #1
 800c600:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c602:	4299      	cmp	r1, r3
 800c604:	d8f8      	bhi.n	800c5f8 <_tcp_send_package+0x134>
 800c606:	e7bf      	b.n	800c588 <_tcp_send_package+0xc4>
 800c608:	2300      	movs	r3, #0
 800c60a:	e7f9      	b.n	800c600 <_tcp_send_package+0x13c>
 800c60c:	200027ac 	andcs	r2, r0, ip, lsr #15
 800c610:	20001bf6 	strdcs	r1, [r0], -r6
 800c614:	200027c2 	andcs	r2, r0, r2, asr #15
 800c618:	20001bcc 	andcs	r1, r0, ip, asr #23
 800c61c:	200027c6 	andcs	r2, r0, r6, asr #15

0800c620 <_send_reset>:
 800c620:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c622:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c626:	4604      	mov	r4, r0
 800c628:	075a      	lsls	r2, r3, #29
 800c62a:	460e      	mov	r6, r1
 800c62c:	d421      	bmi.n	800c672 <_send_reset+0x52>
 800c62e:	2204      	movs	r2, #4
 800c630:	f013 0310 	ands.w	r3, r3, #16
 800c634:	f88d 200c 	strb.w	r2, [sp, #12]
 800c638:	d01d      	beq.n	800c676 <_send_reset+0x56>
 800c63a:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c63e:	4668      	mov	r0, sp
 800c640:	f7ff ff10 	bl	800c464 <memcpy.isra.0>
 800c644:	9b00      	ldr	r3, [sp, #0]
 800c646:	9301      	str	r3, [sp, #4]
 800c648:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c64c:	4668      	mov	r0, sp
 800c64e:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c652:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c656:	07db      	lsls	r3, r3, #31
 800c658:	f04f 0204 	mov.w	r2, #4
 800c65c:	bf48      	it	mi
 800c65e:	3501      	addmi	r5, #1
 800c660:	f7ff ff00 	bl	800c464 <memcpy.isra.0>
 800c664:	9b00      	ldr	r3, [sp, #0]
 800c666:	4630      	mov	r0, r6
 800c668:	441d      	add	r5, r3
 800c66a:	a901      	add	r1, sp, #4
 800c66c:	9502      	str	r5, [sp, #8]
 800c66e:	f7ff ff29 	bl	800c4c4 <_tcp_send_package>
 800c672:	b004      	add	sp, #16
 800c674:	bd70      	pop	{r4, r5, r6, pc}
 800c676:	9301      	str	r3, [sp, #4]
 800c678:	2314      	movs	r3, #20
 800c67a:	f88d 300c 	strb.w	r3, [sp, #12]
 800c67e:	e7e3      	b.n	800c648 <_send_reset+0x28>

0800c680 <tcp_begin>:
 800c680:	b508      	push	{r3, lr}
 800c682:	4b0a      	ldr	r3, [pc, #40]	; (800c6ac <tcp_begin+0x2c>)
 800c684:	4601      	mov	r1, r0
 800c686:	881a      	ldrh	r2, [r3, #0]
 800c688:	4282      	cmp	r2, r0
 800c68a:	d102      	bne.n	800c692 <tcp_begin+0x12>
 800c68c:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c690:	b130      	cbz	r0, 800c6a0 <tcp_begin+0x20>
 800c692:	b12a      	cbz	r2, 800c6a0 <tcp_begin+0x20>
 800c694:	4806      	ldr	r0, [pc, #24]	; (800c6b0 <tcp_begin+0x30>)
 800c696:	f002 fed3 	bl	800f440 <console_error>
 800c69a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c69e:	bd08      	pop	{r3, pc}
 800c6a0:	4802      	ldr	r0, [pc, #8]	; (800c6ac <tcp_begin+0x2c>)
 800c6a2:	8019      	strh	r1, [r3, #0]
 800c6a4:	f7ff fec4 	bl	800c430 <_init_tcb>
 800c6a8:	2000      	movs	r0, #0
 800c6aa:	e7f8      	b.n	800c69e <tcp_begin+0x1e>
 800c6ac:	20002768 	andcs	r2, r0, r8, ror #14
 800c6b0:	080132b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, ip, sp}

0800c6b4 <tcp_write>:
 800c6b4:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c6b8:	429a      	cmp	r2, r3
 800c6ba:	bf28      	it	cs
 800c6bc:	461a      	movcs	r2, r3
 800c6be:	2344      	movs	r3, #68	; 0x44
 800c6c0:	b530      	push	{r4, r5, lr}
 800c6c2:	4c0d      	ldr	r4, [pc, #52]	; (800c6f8 <tcp_write+0x44>)
 800c6c4:	b085      	sub	sp, #20
 800c6c6:	fb03 4400 	mla	r4, r3, r0, r4
 800c6ca:	6963      	ldr	r3, [r4, #20]
 800c6cc:	4615      	mov	r5, r2
 800c6ce:	9301      	str	r3, [sp, #4]
 800c6d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c6d2:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c6d4:	9302      	str	r3, [sp, #8]
 800c6d6:	2318      	movs	r3, #24
 800c6d8:	8622      	strh	r2, [r4, #48]	; 0x30
 800c6da:	4620      	mov	r0, r4
 800c6dc:	a901      	add	r1, sp, #4
 800c6de:	f88d 300c 	strb.w	r3, [sp, #12]
 800c6e2:	f7ff feef 	bl	800c4c4 <_tcp_send_package>
 800c6e6:	2300      	movs	r3, #0
 800c6e8:	6962      	ldr	r2, [r4, #20]
 800c6ea:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c6ec:	442a      	add	r2, r5
 800c6ee:	8623      	strh	r3, [r4, #48]	; 0x30
 800c6f0:	6162      	str	r2, [r4, #20]
 800c6f2:	b005      	add	sp, #20
 800c6f4:	bd30      	pop	{r4, r5, pc}
 800c6f6:	bf00      	nop
 800c6f8:	20002768 	andcs	r2, r0, r8, ror #14

0800c6fc <tcp_read>:
 800c6fc:	2344      	movs	r3, #68	; 0x44
 800c6fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c700:	4c1c      	ldr	r4, [pc, #112]	; (800c774 <tcp_read+0x78>)
 800c702:	b085      	sub	sp, #20
 800c704:	fb03 4400 	mla	r4, r3, r0, r4
 800c708:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c70c:	2b07      	cmp	r3, #7
 800c70e:	d112      	bne.n	800c736 <tcp_read+0x3a>
 800c710:	6963      	ldr	r3, [r4, #20]
 800c712:	4620      	mov	r0, r4
 800c714:	9301      	str	r3, [sp, #4]
 800c716:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c718:	a901      	add	r1, sp, #4
 800c71a:	9302      	str	r3, [sp, #8]
 800c71c:	2311      	movs	r3, #17
 800c71e:	f88d 300c 	strb.w	r3, [sp, #12]
 800c722:	f7ff fecf 	bl	800c4c4 <_tcp_send_package>
 800c726:	2309      	movs	r3, #9
 800c728:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c72c:	6963      	ldr	r3, [r4, #20]
 800c72e:	3301      	adds	r3, #1
 800c730:	6163      	str	r3, [r4, #20]
 800c732:	2000      	movs	r0, #0
 800c734:	e01b      	b.n	800c76e <tcp_read+0x72>
 800c736:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c73a:	4358      	muls	r0, r3
 800c73c:	4a0e      	ldr	r2, [pc, #56]	; (800c778 <tcp_read+0x7c>)
 800c73e:	1817      	adds	r7, r2, r0
 800c740:	887b      	ldrh	r3, [r7, #2]
 800c742:	5a15      	ldrh	r5, [r2, r0]
 800c744:	429d      	cmp	r5, r3
 800c746:	d0f4      	beq.n	800c732 <tcp_read+0x36>
 800c748:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c74c:	435d      	muls	r5, r3
 800c74e:	1d06      	adds	r6, r0, #4
 800c750:	442e      	add	r6, r5
 800c752:	4416      	add	r6, r2
 800c754:	4428      	add	r0, r5
 800c756:	600e      	str	r6, [r1, #0]
 800c758:	4402      	add	r2, r0
 800c75a:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c75e:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c760:	3301      	adds	r3, #1
 800c762:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c766:	f003 0301 	and.w	r3, r3, #1
 800c76a:	8722      	strh	r2, [r4, #56]	; 0x38
 800c76c:	807b      	strh	r3, [r7, #2]
 800c76e:	b005      	add	sp, #20
 800c770:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c772:	bf00      	nop
 800c774:	20002768 	andcs	r2, r0, r8, ror #14
 800c778:	20001bf8 	strdcs	r1, [r0], -r8

0800c77c <memcpy.isra.0>:
 800c77c:	3801      	subs	r0, #1
 800c77e:	440a      	add	r2, r1
 800c780:	4291      	cmp	r1, r2
 800c782:	d100      	bne.n	800c786 <memcpy.isra.0+0xa>
 800c784:	4770      	bx	lr
 800c786:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c78a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c78e:	e7f7      	b.n	800c780 <memcpy.isra.0+0x4>

0800c790 <net_memcpy>:
 800c790:	ea41 0300 	orr.w	r3, r1, r0
 800c794:	079b      	lsls	r3, r3, #30
 800c796:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c798:	d115      	bne.n	800c7c6 <net_memcpy+0x36>
 800c79a:	f022 0303 	bic.w	r3, r2, #3
 800c79e:	1f04      	subs	r4, r0, #4
 800c7a0:	0895      	lsrs	r5, r2, #2
 800c7a2:	18ce      	adds	r6, r1, r3
 800c7a4:	42b1      	cmp	r1, r6
 800c7a6:	d109      	bne.n	800c7bc <net_memcpy+0x2c>
 800c7a8:	f06f 0403 	mvn.w	r4, #3
 800c7ac:	fb04 2205 	mla	r2, r4, r5, r2
 800c7b0:	4403      	add	r3, r0
 800c7b2:	3b01      	subs	r3, #1
 800c7b4:	440a      	add	r2, r1
 800c7b6:	4291      	cmp	r1, r2
 800c7b8:	d107      	bne.n	800c7ca <net_memcpy+0x3a>
 800c7ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7bc:	f851 7b04 	ldr.w	r7, [r1], #4
 800c7c0:	f844 7f04 	str.w	r7, [r4, #4]!
 800c7c4:	e7ee      	b.n	800c7a4 <net_memcpy+0x14>
 800c7c6:	4603      	mov	r3, r0
 800c7c8:	e7f3      	b.n	800c7b2 <net_memcpy+0x22>
 800c7ca:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c7ce:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c7d2:	e7f0      	b.n	800c7b6 <net_memcpy+0x26>

0800c7d4 <udp_set_ip>:
 800c7d4:	2204      	movs	r2, #4
 800c7d6:	b513      	push	{r0, r1, r4, lr}
 800c7d8:	4604      	mov	r4, r0
 800c7da:	6803      	ldr	r3, [r0, #0]
 800c7dc:	eb0d 0102 	add.w	r1, sp, r2
 800c7e0:	4808      	ldr	r0, [pc, #32]	; (800c804 <udp_set_ip+0x30>)
 800c7e2:	9301      	str	r3, [sp, #4]
 800c7e4:	f7ff ffca 	bl	800c77c <memcpy.isra.0>
 800c7e8:	6862      	ldr	r2, [r4, #4]
 800c7ea:	4b07      	ldr	r3, [pc, #28]	; (800c808 <udp_set_ip+0x34>)
 800c7ec:	43d1      	mvns	r1, r2
 800c7ee:	6019      	str	r1, [r3, #0]
 800c7f0:	6823      	ldr	r3, [r4, #0]
 800c7f2:	4013      	ands	r3, r2
 800c7f4:	4a05      	ldr	r2, [pc, #20]	; (800c80c <udp_set_ip+0x38>)
 800c7f6:	6013      	str	r3, [r2, #0]
 800c7f8:	68a2      	ldr	r2, [r4, #8]
 800c7fa:	4b05      	ldr	r3, [pc, #20]	; (800c810 <udp_set_ip+0x3c>)
 800c7fc:	601a      	str	r2, [r3, #0]
 800c7fe:	b002      	add	sp, #8
 800c800:	bd10      	pop	{r4, pc}
 800c802:	bf00      	nop
 800c804:	20008a82 	andcs	r8, r0, r2, lsl #21
 800c808:	20002d98 	mulcs	r0, r8, sp
 800c80c:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c810:	20002d9c 	mulcs	r0, ip, sp

0800c814 <udp_bind>:
 800c814:	4a0a      	ldr	r2, [pc, #40]	; (800c840 <udp_bind+0x2c>)
 800c816:	4603      	mov	r3, r0
 800c818:	b510      	push	{r4, lr}
 800c81a:	2000      	movs	r0, #0
 800c81c:	4614      	mov	r4, r2
 800c81e:	f852 1b04 	ldr.w	r1, [r2], #4
 800c822:	4299      	cmp	r1, r3
 800c824:	d008      	beq.n	800c838 <udp_bind+0x24>
 800c826:	b141      	cbz	r1, 800c83a <udp_bind+0x26>
 800c828:	3001      	adds	r0, #1
 800c82a:	2808      	cmp	r0, #8
 800c82c:	d1f7      	bne.n	800c81e <udp_bind+0xa>
 800c82e:	4805      	ldr	r0, [pc, #20]	; (800c844 <udp_bind+0x30>)
 800c830:	f002 fe06 	bl	800f440 <console_error>
 800c834:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c838:	bd10      	pop	{r4, pc}
 800c83a:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c83e:	e7fb      	b.n	800c838 <udp_bind+0x24>
 800c840:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c844:	080132d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, ip, sp}

0800c848 <udp_unbind>:
 800c848:	4a0c      	ldr	r2, [pc, #48]	; (800c87c <udp_unbind+0x34>)
 800c84a:	2300      	movs	r3, #0
 800c84c:	4611      	mov	r1, r2
 800c84e:	b510      	push	{r4, lr}
 800c850:	f852 4b04 	ldr.w	r4, [r2], #4
 800c854:	4284      	cmp	r4, r0
 800c856:	d108      	bne.n	800c86a <udp_unbind+0x22>
 800c858:	2000      	movs	r0, #0
 800c85a:	f640 3294 	movw	r2, #2964	; 0xb94
 800c85e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c862:	4353      	muls	r3, r2
 800c864:	4a06      	ldr	r2, [pc, #24]	; (800c880 <udp_unbind+0x38>)
 800c866:	5098      	str	r0, [r3, r2]
 800c868:	bd10      	pop	{r4, pc}
 800c86a:	3301      	adds	r3, #1
 800c86c:	2b08      	cmp	r3, #8
 800c86e:	d1ef      	bne.n	800c850 <udp_unbind+0x8>
 800c870:	4804      	ldr	r0, [pc, #16]	; (800c884 <udp_unbind+0x3c>)
 800c872:	f002 fde5 	bl	800f440 <console_error>
 800c876:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c87a:	e7f5      	b.n	800c868 <udp_unbind+0x20>
 800c87c:	20002da8 	andcs	r2, r0, r8, lsr #27
 800c880:	20002dc8 	andcs	r2, r0, r8, asr #27
 800c884:	080132da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, ip, sp}

0800c888 <udp_recv>:
 800c888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c88c:	4604      	mov	r4, r0
 800c88e:	4698      	mov	r8, r3
 800c890:	f640 3394 	movw	r3, #2964	; 0xb94
 800c894:	435c      	muls	r4, r3
 800c896:	4608      	mov	r0, r1
 800c898:	4915      	ldr	r1, [pc, #84]	; (800c8f0 <udp_recv+0x68>)
 800c89a:	190f      	adds	r7, r1, r4
 800c89c:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c8a0:	5b0b      	ldrh	r3, [r1, r4]
 800c8a2:	4563      	cmp	r3, ip
 800c8a4:	d021      	beq.n	800c8ea <udp_recv+0x62>
 800c8a6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c8aa:	fb03 fc0c 	mul.w	ip, r3, ip
 800c8ae:	eb0c 0604 	add.w	r6, ip, r4
 800c8b2:	440e      	add	r6, r1
 800c8b4:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c8b8:	3404      	adds	r4, #4
 800c8ba:	4295      	cmp	r5, r2
 800c8bc:	bf28      	it	cs
 800c8be:	4615      	movcs	r5, r2
 800c8c0:	4464      	add	r4, ip
 800c8c2:	462a      	mov	r2, r5
 800c8c4:	4421      	add	r1, r4
 800c8c6:	f7ff ff63 	bl	800c790 <net_memcpy>
 800c8ca:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c8ce:	f8c8 3000 	str.w	r3, [r8]
 800c8d2:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c8d6:	9b06      	ldr	r3, [sp, #24]
 800c8d8:	801a      	strh	r2, [r3, #0]
 800c8da:	887b      	ldrh	r3, [r7, #2]
 800c8dc:	3301      	adds	r3, #1
 800c8de:	f003 0301 	and.w	r3, r3, #1
 800c8e2:	807b      	strh	r3, [r7, #2]
 800c8e4:	4628      	mov	r0, r5
 800c8e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c8ea:	2500      	movs	r5, #0
 800c8ec:	e7fa      	b.n	800c8e4 <udp_recv+0x5c>
 800c8ee:	bf00      	nop
 800c8f0:	20002dc8 	andcs	r2, r0, r8, asr #27

0800c8f4 <udp_recv2>:
 800c8f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8f6:	f640 3594 	movw	r5, #2964	; 0xb94
 800c8fa:	4368      	muls	r0, r5
 800c8fc:	4c0f      	ldr	r4, [pc, #60]	; (800c93c <udp_recv2+0x48>)
 800c8fe:	1827      	adds	r7, r4, r0
 800c900:	887d      	ldrh	r5, [r7, #2]
 800c902:	5a26      	ldrh	r6, [r4, r0]
 800c904:	42ae      	cmp	r6, r5
 800c906:	d017      	beq.n	800c938 <udp_recv2+0x44>
 800c908:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c90c:	fb0c f505 	mul.w	r5, ip, r5
 800c910:	1d06      	adds	r6, r0, #4
 800c912:	442e      	add	r6, r5
 800c914:	4405      	add	r5, r0
 800c916:	4426      	add	r6, r4
 800c918:	442c      	add	r4, r5
 800c91a:	600e      	str	r6, [r1, #0]
 800c91c:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c920:	6011      	str	r1, [r2, #0]
 800c922:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c926:	801a      	strh	r2, [r3, #0]
 800c928:	887b      	ldrh	r3, [r7, #2]
 800c92a:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c92e:	3301      	adds	r3, #1
 800c930:	f003 0301 	and.w	r3, r3, #1
 800c934:	807b      	strh	r3, [r7, #2]
 800c936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c938:	2000      	movs	r0, #0
 800c93a:	e7fc      	b.n	800c936 <udp_recv2+0x42>
 800c93c:	20002dc8 	andcs	r2, r0, r8, asr #27

0800c940 <udp_send>:
 800c940:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c944:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ca78 <udp_send+0x138>
 800c948:	461c      	mov	r4, r3
 800c94a:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c94e:	4607      	mov	r7, r0
 800c950:	4688      	mov	r8, r1
 800c952:	4616      	mov	r6, r2
 800c954:	2b00      	cmp	r3, #0
 800c956:	f000 808b 	beq.w	800ca70 <udp_send+0x130>
 800c95a:	1c63      	adds	r3, r4, #1
 800c95c:	d141      	bne.n	800c9e2 <udp_send+0xa2>
 800c95e:	4a47      	ldr	r2, [pc, #284]	; (800ca7c <udp_send+0x13c>)
 800c960:	2307      	movs	r3, #7
 800c962:	4611      	mov	r1, r2
 800c964:	20ff      	movs	r0, #255	; 0xff
 800c966:	e001      	b.n	800c96c <udp_send+0x2c>
 800c968:	f802 0b01 	strb.w	r0, [r2], #1
 800c96c:	3b01      	subs	r3, #1
 800c96e:	d1fb      	bne.n	800c968 <udp_send+0x28>
 800c970:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c974:	83cb      	strh	r3, [r1, #30]
 800c976:	840b      	strh	r3, [r1, #32]
 800c978:	2500      	movs	r5, #0
 800c97a:	f8df a104 	ldr.w	sl, [pc, #260]	; 800ca80 <udp_send+0x140>
 800c97e:	4c3f      	ldr	r4, [pc, #252]	; (800ca7c <udp_send+0x13c>)
 800c980:	f8ba 3000 	ldrh.w	r3, [sl]
 800c984:	2114      	movs	r1, #20
 800c986:	8263      	strh	r3, [r4, #18]
 800c988:	f106 031c 	add.w	r3, r6, #28
 800c98c:	ba5b      	rev16	r3, r3
 800c98e:	f104 000e 	add.w	r0, r4, #14
 800c992:	8223      	strh	r3, [r4, #16]
 800c994:	8325      	strh	r5, [r4, #24]
 800c996:	f001 fc32 	bl	800e1fe <net_chksum>
 800c99a:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c99e:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c9a2:	ba5b      	rev16	r3, r3
 800c9a4:	8463      	strh	r3, [r4, #34]	; 0x22
 800c9a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c9aa:	4632      	mov	r2, r6
 800c9ac:	ba5b      	rev16	r3, r3
 800c9ae:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c9b0:	f106 0308 	add.w	r3, r6, #8
 800c9b4:	ba5b      	rev16	r3, r3
 800c9b6:	bf28      	it	cs
 800c9b8:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c9bc:	4641      	mov	r1, r8
 800c9be:	8320      	strh	r0, [r4, #24]
 800c9c0:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c9c4:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c9c6:	f7ff fee3 	bl	800c790 <net_memcpy>
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c9d0:	f004 f982 	bl	8010cd8 <emac_eth_send>
 800c9d4:	f8ba 3000 	ldrh.w	r3, [sl]
 800c9d8:	4628      	mov	r0, r5
 800c9da:	3301      	adds	r3, #1
 800c9dc:	f8aa 3000 	strh.w	r3, [sl]
 800c9e0:	e037      	b.n	800ca52 <udp_send+0x112>
 800c9e2:	4b28      	ldr	r3, [pc, #160]	; (800ca84 <udp_send+0x144>)
 800c9e4:	681b      	ldr	r3, [r3, #0]
 800c9e6:	43a3      	bics	r3, r4
 800c9e8:	d10f      	bne.n	800ca0a <udp_send+0xca>
 800c9ea:	2307      	movs	r3, #7
 800c9ec:	21ff      	movs	r1, #255	; 0xff
 800c9ee:	4a23      	ldr	r2, [pc, #140]	; (800ca7c <udp_send+0x13c>)
 800c9f0:	e001      	b.n	800c9f6 <udp_send+0xb6>
 800c9f2:	f802 1b01 	strb.w	r1, [r2], #1
 800c9f6:	3b01      	subs	r3, #1
 800c9f8:	d1fb      	bne.n	800c9f2 <udp_send+0xb2>
 800c9fa:	2204      	movs	r2, #4
 800c9fc:	4822      	ldr	r0, [pc, #136]	; (800ca88 <udp_send+0x148>)
 800c9fe:	eb0d 0102 	add.w	r1, sp, r2
 800ca02:	9401      	str	r4, [sp, #4]
 800ca04:	f7ff feba 	bl	800c77c <memcpy.isra.0>
 800ca08:	e7b6      	b.n	800c978 <udp_send+0x38>
 800ca0a:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800ca0e:	2be0      	cmp	r3, #224	; 0xe0
 800ca10:	d10e      	bne.n	800ca30 <udp_send+0xf0>
 800ca12:	491e      	ldr	r1, [pc, #120]	; (800ca8c <udp_send+0x14c>)
 800ca14:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800ca18:	70cb      	strb	r3, [r1, #3]
 800ca1a:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ca1e:	710b      	strb	r3, [r1, #4]
 800ca20:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800ca24:	2206      	movs	r2, #6
 800ca26:	4815      	ldr	r0, [pc, #84]	; (800ca7c <udp_send+0x13c>)
 800ca28:	714b      	strb	r3, [r1, #5]
 800ca2a:	f7ff fea7 	bl	800c77c <memcpy.isra.0>
 800ca2e:	e7e4      	b.n	800c9fa <udp_send+0xba>
 800ca30:	4b17      	ldr	r3, [pc, #92]	; (800ca90 <udp_send+0x150>)
 800ca32:	681b      	ldr	r3, [r3, #0]
 800ca34:	43a3      	bics	r3, r4
 800ca36:	d00f      	beq.n	800ca58 <udp_send+0x118>
 800ca38:	4d16      	ldr	r5, [pc, #88]	; (800ca94 <udp_send+0x154>)
 800ca3a:	4910      	ldr	r1, [pc, #64]	; (800ca7c <udp_send+0x13c>)
 800ca3c:	6828      	ldr	r0, [r5, #0]
 800ca3e:	f001 f899 	bl	800db74 <arp_cache_lookup>
 800ca42:	682b      	ldr	r3, [r5, #0]
 800ca44:	4298      	cmp	r0, r3
 800ca46:	d0d8      	beq.n	800c9fa <udp_send+0xba>
 800ca48:	4813      	ldr	r0, [pc, #76]	; (800ca98 <udp_send+0x158>)
 800ca4a:	f002 fcf9 	bl	800f440 <console_error>
 800ca4e:	f06f 0002 	mvn.w	r0, #2
 800ca52:	b002      	add	sp, #8
 800ca54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca58:	4620      	mov	r0, r4
 800ca5a:	4908      	ldr	r1, [pc, #32]	; (800ca7c <udp_send+0x13c>)
 800ca5c:	f001 f88a 	bl	800db74 <arp_cache_lookup>
 800ca60:	42a0      	cmp	r0, r4
 800ca62:	d0ca      	beq.n	800c9fa <udp_send+0xba>
 800ca64:	480d      	ldr	r0, [pc, #52]	; (800ca9c <udp_send+0x15c>)
 800ca66:	f002 fceb 	bl	800f440 <console_error>
 800ca6a:	f06f 0001 	mvn.w	r0, #1
 800ca6e:	e7f0      	b.n	800ca52 <udp_send+0x112>
 800ca70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ca74:	e7ed      	b.n	800ca52 <udp_send+0x112>
 800ca76:	bf00      	nop
 800ca78:	20002da8 	andcs	r2, r0, r8, lsr #27
 800ca7c:	20008a68 	andcs	r8, r0, r8, ror #20
 800ca80:	20002da4 	andcs	r2, r0, r4, lsr #27
 800ca84:	20002d98 	mulcs	r0, r8, sp
 800ca88:	20008a86 	andcs	r8, r0, r6, lsl #21
 800ca8c:	20000014 	andcs	r0, r0, r4, lsl r0
 800ca90:	20002da0 	andcs	r2, r0, r0, lsr #27
 800ca94:	20002d9c 	mulcs	r0, ip, sp
 800ca98:	080132e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, ip, sp}
 800ca9c:	08013308 	stmdaeq	r1, {r3, r8, r9, ip, sp}

0800caa0 <strlen>:
 800caa0:	4603      	mov	r3, r0
 800caa2:	461a      	mov	r2, r3
 800caa4:	7811      	ldrb	r1, [r2, #0]
 800caa6:	3301      	adds	r3, #1
 800caa8:	2900      	cmp	r1, #0
 800caaa:	d1fa      	bne.n	800caa2 <strlen+0x2>
 800caac:	1a10      	subs	r0, r2, r0
 800caae:	4770      	bx	lr

0800cab0 <strcmp>:
 800cab0:	1e43      	subs	r3, r0, #1
 800cab2:	3901      	subs	r1, #1
 800cab4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800cab8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800cabc:	4290      	cmp	r0, r2
 800cabe:	d102      	bne.n	800cac6 <strcmp+0x16>
 800cac0:	2800      	cmp	r0, #0
 800cac2:	d1f7      	bne.n	800cab4 <strcmp+0x4>
 800cac4:	4770      	bx	lr
 800cac6:	1a80      	subs	r0, r0, r2
 800cac8:	4770      	bx	lr

0800caca <strcpy.isra.0>:
 800caca:	3801      	subs	r0, #1
 800cacc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cad0:	f800 3f01 	strb.w	r3, [r0, #1]!
 800cad4:	2b00      	cmp	r3, #0
 800cad6:	d1f9      	bne.n	800cacc <strcpy.isra.0+0x2>
 800cad8:	4770      	bx	lr

0800cada <strcat.isra.0>:
 800cada:	b538      	push	{r3, r4, r5, lr}
 800cadc:	4604      	mov	r4, r0
 800cade:	460d      	mov	r5, r1
 800cae0:	f7ff ffde 	bl	800caa0 <strlen>
 800cae4:	4629      	mov	r1, r5
 800cae6:	4420      	add	r0, r4
 800cae8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800caec:	f7ff bfed 	b.w	800caca <strcpy.isra.0>

0800caf0 <MDNS::MDNS()>:
 800caf0:	b513      	push	{r0, r1, r4, lr}
 800caf2:	4604      	mov	r4, r0
 800caf4:	a901      	add	r1, sp, #4
 800caf6:	4804      	ldr	r0, [pc, #16]	; (800cb08 <MDNS::MDNS()+0x18>)
 800caf8:	f002 fe1e 	bl	800f738 <inet_aton>
 800cafc:	4620      	mov	r0, r4
 800cafe:	4b03      	ldr	r3, [pc, #12]	; (800cb0c <MDNS::MDNS()+0x1c>)
 800cb00:	9a01      	ldr	r2, [sp, #4]
 800cb02:	601a      	str	r2, [r3, #0]
 800cb04:	b002      	add	sp, #8
 800cb06:	bd10      	pop	{r4, pc}
 800cb08:	08013328 	stmdaeq	r1, {r3, r5, r8, r9, ip, sp}
 800cb0c:	2000905c 	andcs	r9, r0, ip, asr r0

0800cb10 <MDNS::SetName(char const*)>:
 800cb10:	b538      	push	{r3, r4, r5, lr}
 800cb12:	4d0b      	ldr	r5, [pc, #44]	; (800cb40 <MDNS::SetName(char const*)+0x30>)
 800cb14:	460c      	mov	r4, r1
 800cb16:	6828      	ldr	r0, [r5, #0]
 800cb18:	b108      	cbz	r0, 800cb1e <MDNS::SetName(char const*)+0xe>
 800cb1a:	f002 fe07 	bl	800f72c <operator delete[](void*)>
 800cb1e:	4620      	mov	r0, r4
 800cb20:	f7ff ffbe 	bl	800caa0 <strlen>
 800cb24:	3007      	adds	r0, #7
 800cb26:	f002 fe05 	bl	800f734 <operator new[](unsigned int)>
 800cb2a:	4621      	mov	r1, r4
 800cb2c:	6028      	str	r0, [r5, #0]
 800cb2e:	f7ff ffcc 	bl	800caca <strcpy.isra.0>
 800cb32:	6828      	ldr	r0, [r5, #0]
 800cb34:	4903      	ldr	r1, [pc, #12]	; (800cb44 <MDNS::SetName(char const*)+0x34>)
 800cb36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cb3a:	f7ff bfce 	b.w	800cada <strcat.isra.0>
 800cb3e:	bf00      	nop
 800cb40:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cb44:	08013338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip, sp}

0800cb48 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800cb48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb4c:	f04f 0e00 	mov.w	lr, #0
 800cb50:	262e      	movs	r6, #46	; 0x2e
 800cb52:	4675      	mov	r5, lr
 800cb54:	4694      	mov	ip, r2
 800cb56:	4f1d      	ldr	r7, [pc, #116]	; (800cbcc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800cb58:	4a1d      	ldr	r2, [pc, #116]	; (800cbd0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800cb5a:	780b      	ldrb	r3, [r1, #0]
 800cb5c:	1c68      	adds	r0, r5, #1
 800cb5e:	b383      	cbz	r3, 800cbc2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800cb60:	2b3f      	cmp	r3, #63	; 0x3f
 800cb62:	d91d      	bls.n	800cba0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800cb64:	f1be 0f00 	cmp.w	lr, #0
 800cb68:	bf08      	it	eq
 800cb6a:	4605      	moveq	r5, r0
 800cb6c:	2000      	movs	r0, #0
 800cb6e:	7849      	ldrb	r1, [r1, #1]
 800cb70:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800cb74:	430b      	orrs	r3, r1
 800cb76:	6811      	ldr	r1, [r2, #0]
 800cb78:	5ccc      	ldrb	r4, [r1, r3]
 800cb7a:	3301      	adds	r3, #1
 800cb7c:	440b      	add	r3, r1
 800cb7e:	42a0      	cmp	r0, r4
 800cb80:	5c19      	ldrb	r1, [r3, r0]
 800cb82:	d309      	bcc.n	800cb98 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800cb84:	f04f 0e01 	mov.w	lr, #1
 800cb88:	1919      	adds	r1, r3, r4
 800cb8a:	4464      	add	r4, ip
 800cb8c:	780b      	ldrb	r3, [r1, #0]
 800cb8e:	b10b      	cbz	r3, 800cb94 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800cb90:	f804 6b01 	strb.w	r6, [r4], #1
 800cb94:	46a4      	mov	ip, r4
 800cb96:	e7e0      	b.n	800cb5a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800cb98:	f80c 1000 	strb.w	r1, [ip, r0]
 800cb9c:	3001      	adds	r0, #1
 800cb9e:	e7ee      	b.n	800cb7e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800cba0:	4688      	mov	r8, r1
 800cba2:	eb0c 0403 	add.w	r4, ip, r3
 800cba6:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800cbaa:	f80c 9b01 	strb.w	r9, [ip], #1
 800cbae:	4564      	cmp	r4, ip
 800cbb0:	d1f9      	bne.n	800cba6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800cbb2:	f103 0c01 	add.w	ip, r3, #1
 800cbb6:	4461      	add	r1, ip
 800cbb8:	f1be 0f00 	cmp.w	lr, #0
 800cbbc:	d1e6      	bne.n	800cb8c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800cbbe:	18c5      	adds	r5, r0, r3
 800cbc0:	e7e4      	b.n	800cb8c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800cbc2:	f88c 3000 	strb.w	r3, [ip]
 800cbc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbca:	bf00      	nop
 800cbcc:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800cbd0:	20009490 	mulcs	r0, r0, r4

0800cbd4 <MDNS::FindFirstDotFromRight(char const*) const>:
 800cbd4:	b510      	push	{r4, lr}
 800cbd6:	4608      	mov	r0, r1
 800cbd8:	460c      	mov	r4, r1
 800cbda:	f7ff ff61 	bl	800caa0 <strlen>
 800cbde:	4420      	add	r0, r4
 800cbe0:	42a0      	cmp	r0, r4
 800cbe2:	d903      	bls.n	800cbec <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800cbe4:	f810 3901 	ldrb.w	r3, [r0], #-1
 800cbe8:	2b2e      	cmp	r3, #46	; 0x2e
 800cbea:	d1f9      	bne.n	800cbe0 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800cbec:	3001      	adds	r0, #1
 800cbee:	bd10      	pop	{r4, pc}

0800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800cbf0:	4610      	mov	r0, r2
 800cbf2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cbf4:	460f      	mov	r7, r1
 800cbf6:	1c44      	adds	r4, r0, #1
 800cbf8:	463d      	mov	r5, r7
 800cbfa:	f817 6b01 	ldrb.w	r6, [r7], #1
 800cbfe:	b126      	cbz	r6, 800cc0a <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800cc00:	2e2e      	cmp	r6, #46	; 0x2e
 800cc02:	d002      	beq.n	800cc0a <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800cc04:	f804 6b01 	strb.w	r6, [r4], #1
 800cc08:	e7f6      	b.n	800cbf8 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800cc0a:	1a69      	subs	r1, r5, r1
 800cc0c:	7001      	strb	r1, [r0, #0]
 800cc0e:	7829      	ldrb	r1, [r5, #0]
 800cc10:	b921      	cbnz	r1, 800cc1c <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800cc12:	b10b      	cbz	r3, 800cc18 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800cc14:	f804 1b01 	strb.w	r1, [r4], #1
 800cc18:	1aa0      	subs	r0, r4, r2
 800cc1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc1c:	4620      	mov	r0, r4
 800cc1e:	1c69      	adds	r1, r5, #1
 800cc20:	e7e8      	b.n	800cbf4 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800cc24 <MDNS::CreateAnswerLocalIpAddress()>:
 800cc24:	2384      	movs	r3, #132	; 0x84
 800cc26:	b510      	push	{r4, lr}
 800cc28:	4c0f      	ldr	r4, [pc, #60]	; (800cc68 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800cc2a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800cc2e:	80e3      	strh	r3, [r4, #6]
 800cc30:	2300      	movs	r3, #0
 800cc32:	490e      	ldr	r1, [pc, #56]	; (800cc6c <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800cc34:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800cc38:	6809      	ldr	r1, [r1, #0]
 800cc3a:	f104 0210 	add.w	r2, r4, #16
 800cc3e:	2301      	movs	r3, #1
 800cc40:	f7ff ffd6 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc44:	490a      	ldr	r1, [pc, #40]	; (800cc70 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800cc46:	1813      	adds	r3, r2, r0
 800cc48:	5011      	str	r1, [r2, r0]
 800cc4a:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800cc4e:	605a      	str	r2, [r3, #4]
 800cc50:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cc54:	811a      	strh	r2, [r3, #8]
 800cc56:	4a07      	ldr	r2, [pc, #28]	; (800cc74 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800cc58:	6812      	ldr	r2, [r2, #0]
 800cc5a:	6912      	ldr	r2, [r2, #16]
 800cc5c:	f8c3 200a 	str.w	r2, [r3, #10]
 800cc60:	1b1b      	subs	r3, r3, r4
 800cc62:	330a      	adds	r3, #10
 800cc64:	6023      	str	r3, [r4, #0]
 800cc66:	bd10      	pop	{r4, pc}
 800cc68:	20009060 	andcs	r9, r0, r0, rrx
 800cc6c:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cc70:	01800100 	orreq	r0, r0, r0, lsl #2
 800cc74:	20009494 	mulcs	r0, r4, r4

0800cc78 <MDNS::Start()>:
 800cc78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cc7a:	4c1e      	ldr	r4, [pc, #120]	; (800ccf4 <MDNS::Start()+0x7c>)
 800cc7c:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800cc80:	4605      	mov	r5, r0
 800cc82:	6820      	ldr	r0, [r4, #0]
 800cc84:	f000 fb2a 	bl	800d2dc <Network::Begin(unsigned short)>
 800cc88:	4e1b      	ldr	r6, [pc, #108]	; (800ccf8 <MDNS::Start()+0x80>)
 800cc8a:	4f1c      	ldr	r7, [pc, #112]	; (800ccfc <MDNS::Start()+0x84>)
 800cc8c:	4601      	mov	r1, r0
 800cc8e:	6030      	str	r0, [r6, #0]
 800cc90:	683a      	ldr	r2, [r7, #0]
 800cc92:	6820      	ldr	r0, [r4, #0]
 800cc94:	f000 fb33 	bl	800d2fe <Network::JoinGroup(int, unsigned int)>
 800cc98:	4b19      	ldr	r3, [pc, #100]	; (800cd00 <MDNS::Start()+0x88>)
 800cc9a:	681b      	ldr	r3, [r3, #0]
 800cc9c:	b923      	cbnz	r3, 800cca8 <MDNS::Start()+0x30>
 800cc9e:	6821      	ldr	r1, [r4, #0]
 800cca0:	4628      	mov	r0, r5
 800cca2:	311c      	adds	r1, #28
 800cca4:	f7ff ff34 	bl	800cb10 <MDNS::SetName(char const*)>
 800cca8:	4628      	mov	r0, r5
 800ccaa:	f7ff ffbb 	bl	800cc24 <MDNS::CreateAnswerLocalIpAddress()>
 800ccae:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ccb2:	4914      	ldr	r1, [pc, #80]	; (800cd04 <MDNS::Start()+0x8c>)
 800ccb4:	7830      	ldrb	r0, [r6, #0]
 800ccb6:	f851 2b04 	ldr.w	r2, [r1], #4
 800ccba:	9300      	str	r3, [sp, #0]
 800ccbc:	b292      	uxth	r2, r2
 800ccbe:	683b      	ldr	r3, [r7, #0]
 800ccc0:	f7ff fe3e 	bl	800c940 <udp_send>
 800ccc4:	223f      	movs	r2, #63	; 0x3f
 800ccc6:	6820      	ldr	r0, [r4, #0]
 800ccc8:	4c0f      	ldr	r4, [pc, #60]	; (800cd08 <MDNS::Start()+0x90>)
 800ccca:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800ccce:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ccd2:	b929      	cbnz	r1, 800cce0 <MDNS::Start()+0x68>
 800ccd4:	441a      	add	r2, r3
 800ccd6:	4293      	cmp	r3, r2
 800ccd8:	d006      	beq.n	800cce8 <MDNS::Start()+0x70>
 800ccda:	f803 1b01 	strb.w	r1, [r3], #1
 800ccde:	e7fa      	b.n	800ccd6 <MDNS::Start()+0x5e>
 800cce0:	3a01      	subs	r2, #1
 800cce2:	f803 1b01 	strb.w	r1, [r3], #1
 800cce6:	d1f2      	bne.n	800ccce <MDNS::Start()+0x56>
 800cce8:	2300      	movs	r3, #0
 800ccea:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800ccee:	b003      	add	sp, #12
 800ccf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ccf2:	bf00      	nop
 800ccf4:	20009494 	mulcs	r0, r4, r4
 800ccf8:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ccfc:	2000905c 	andcs	r9, r0, ip, asr r0
 800cd00:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cd04:	20009060 	andcs	r9, r0, r0, rrx
 800cd08:	08013338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip, sp}

0800cd0c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800cd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd10:	4c1b      	ldr	r4, [pc, #108]	; (800cd80 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800cd12:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800cd16:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800cd1a:	2300      	movs	r3, #0
 800cd1c:	f854 100c 	ldr.w	r1, [r4, ip]
 800cd20:	4607      	mov	r7, r0
 800cd22:	f7ff ff65 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd26:	2301      	movs	r3, #1
 800cd28:	7bac      	ldrb	r4, [r5, #14]
 800cd2a:	4616      	mov	r6, r2
 800cd2c:	4915      	ldr	r1, [pc, #84]	; (800cd84 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800cd2e:	4402      	add	r2, r0
 800cd30:	4815      	ldr	r0, [pc, #84]	; (800cd88 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800cd32:	429c      	cmp	r4, r3
 800cd34:	bf18      	it	ne
 800cd36:	4601      	movne	r1, r0
 800cd38:	4638      	mov	r0, r7
 800cd3a:	f7ff ff59 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd3e:	4b13      	ldr	r3, [pc, #76]	; (800cd8c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800cd40:	1814      	adds	r4, r2, r0
 800cd42:	5013      	str	r3, [r2, r0]
 800cd44:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd48:	6063      	str	r3, [r4, #4]
 800cd4a:	4b11      	ldr	r3, [pc, #68]	; (800cd90 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800cd4c:	f8d3 8000 	ldr.w	r8, [r3]
 800cd50:	4640      	mov	r0, r8
 800cd52:	f7ff fea5 	bl	800caa0 <strlen>
 800cd56:	f100 0308 	add.w	r3, r0, #8
 800cd5a:	ba5b      	rev16	r3, r3
 800cd5c:	8123      	strh	r3, [r4, #8]
 800cd5e:	2300      	movs	r3, #0
 800cd60:	f8c4 300a 	str.w	r3, [r4, #10]
 800cd64:	89ab      	ldrh	r3, [r5, #12]
 800cd66:	f104 0210 	add.w	r2, r4, #16
 800cd6a:	ba5b      	rev16	r3, r3
 800cd6c:	81e3      	strh	r3, [r4, #14]
 800cd6e:	4641      	mov	r1, r8
 800cd70:	2301      	movs	r3, #1
 800cd72:	4638      	mov	r0, r7
 800cd74:	f7ff ff3c 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd78:	4410      	add	r0, r2
 800cd7a:	1b80      	subs	r0, r0, r6
 800cd7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd80:	20009264 	andcs	r9, r0, r4, ror #4
 800cd84:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}
 800cd88:	08013351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip, sp}
 800cd8c:	01802100 	orreq	r2, r0, r0, lsl #2
 800cd90:	2000948c 	andcs	r9, r0, ip, lsl #9

0800cd94 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cd94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd98:	4e19      	ldr	r6, [pc, #100]	; (800ce00 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cd9a:	010f      	lsls	r7, r1, #4
 800cd9c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800cda0:	2300      	movs	r3, #0
 800cda2:	59f1      	ldr	r1, [r6, r7]
 800cda4:	4604      	mov	r4, r0
 800cda6:	f7ff ff23 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdaa:	2301      	movs	r3, #1
 800cdac:	7bae      	ldrb	r6, [r5, #14]
 800cdae:	4690      	mov	r8, r2
 800cdb0:	4914      	ldr	r1, [pc, #80]	; (800ce04 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800cdb2:	4402      	add	r2, r0
 800cdb4:	4814      	ldr	r0, [pc, #80]	; (800ce08 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800cdb6:	429e      	cmp	r6, r3
 800cdb8:	bf18      	it	ne
 800cdba:	4601      	movne	r1, r0
 800cdbc:	4620      	mov	r0, r4
 800cdbe:	f7ff ff17 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdc2:	4b12      	ldr	r3, [pc, #72]	; (800ce0c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800cdc4:	1816      	adds	r6, r2, r0
 800cdc6:	5013      	str	r3, [r2, r0]
 800cdc8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cdcc:	68a8      	ldr	r0, [r5, #8]
 800cdce:	6073      	str	r3, [r6, #4]
 800cdd0:	f106 040b 	add.w	r4, r6, #11
 800cdd4:	b938      	cbnz	r0, 800cde6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800cdd6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cdda:	72b0      	strb	r0, [r6, #10]
 800cddc:	8133      	strh	r3, [r6, #8]
 800cdde:	eba4 0008 	sub.w	r0, r4, r8
 800cde2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cde6:	f7ff fe5b 	bl	800caa0 <strlen>
 800cdea:	4607      	mov	r7, r0
 800cdec:	1c43      	adds	r3, r0, #1
 800cdee:	72b0      	strb	r0, [r6, #10]
 800cdf0:	ba5b      	rev16	r3, r3
 800cdf2:	4620      	mov	r0, r4
 800cdf4:	68a9      	ldr	r1, [r5, #8]
 800cdf6:	8133      	strh	r3, [r6, #8]
 800cdf8:	f7ff fe67 	bl	800caca <strcpy.isra.0>
 800cdfc:	443c      	add	r4, r7
 800cdfe:	e7ee      	b.n	800cdde <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800ce00:	20009264 	andcs	r9, r0, r4, ror #4
 800ce04:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}
 800ce08:	08013351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip, sp}
 800ce0c:	01801000 	orreq	r1, r0, r0

0800ce10 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800ce10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ce14:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ce78 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800ce18:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800ce1c:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800ce20:	6869      	ldr	r1, [r5, #4]
 800ce22:	2301      	movs	r3, #1
 800ce24:	4607      	mov	r7, r0
 800ce26:	f7ff fee3 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce2a:	4b14      	ldr	r3, [pc, #80]	; (800ce7c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800ce2c:	f858 8009 	ldr.w	r8, [r8, r9]
 800ce30:	5013      	str	r3, [r2, r0]
 800ce32:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ce36:	1816      	adds	r6, r2, r0
 800ce38:	6073      	str	r3, [r6, #4]
 800ce3a:	4640      	mov	r0, r8
 800ce3c:	4614      	mov	r4, r2
 800ce3e:	f7ff fe2f 	bl	800caa0 <strlen>
 800ce42:	f100 030d 	add.w	r3, r0, #13
 800ce46:	ba5b      	rev16	r3, r3
 800ce48:	4641      	mov	r1, r8
 800ce4a:	8133      	strh	r3, [r6, #8]
 800ce4c:	f106 020a 	add.w	r2, r6, #10
 800ce50:	2300      	movs	r3, #0
 800ce52:	4638      	mov	r0, r7
 800ce54:	f7ff fecc 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce58:	2301      	movs	r3, #1
 800ce5a:	4402      	add	r2, r0
 800ce5c:	7bad      	ldrb	r5, [r5, #14]
 800ce5e:	4808      	ldr	r0, [pc, #32]	; (800ce80 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800ce60:	4908      	ldr	r1, [pc, #32]	; (800ce84 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800ce62:	429d      	cmp	r5, r3
 800ce64:	bf18      	it	ne
 800ce66:	4601      	movne	r1, r0
 800ce68:	4638      	mov	r0, r7
 800ce6a:	f7ff fec1 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce6e:	4410      	add	r0, r2
 800ce70:	1b00      	subs	r0, r0, r4
 800ce72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ce76:	bf00      	nop
 800ce78:	20009264 	andcs	r9, r0, r4, ror #4
 800ce7c:	01000c00 	tsteq	r0, r0, lsl #24
 800ce80:	08013351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip, sp}
 800ce84:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}

0800ce88 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800ce88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce8a:	460f      	mov	r7, r1
 800ce8c:	2301      	movs	r3, #1
 800ce8e:	490f      	ldr	r1, [pc, #60]	; (800cecc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800ce90:	4606      	mov	r6, r0
 800ce92:	f7ff fead 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce96:	4b0e      	ldr	r3, [pc, #56]	; (800ced0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800ce98:	490e      	ldr	r1, [pc, #56]	; (800ced4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800ce9a:	5013      	str	r3, [r2, r0]
 800ce9c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cea0:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800cea4:	684f      	ldr	r7, [r1, #4]
 800cea6:	1815      	adds	r5, r2, r0
 800cea8:	606b      	str	r3, [r5, #4]
 800ceaa:	4638      	mov	r0, r7
 800ceac:	4614      	mov	r4, r2
 800ceae:	f7ff fdf7 	bl	800caa0 <strlen>
 800ceb2:	1c83      	adds	r3, r0, #2
 800ceb4:	ba5b      	rev16	r3, r3
 800ceb6:	812b      	strh	r3, [r5, #8]
 800ceb8:	f105 020a 	add.w	r2, r5, #10
 800cebc:	2301      	movs	r3, #1
 800cebe:	4639      	mov	r1, r7
 800cec0:	4630      	mov	r0, r6
 800cec2:	f7ff fe95 	bl	800cbf0 <MDNS::WriteDnsName(char const*, char*, bool)>
 800cec6:	4410      	add	r0, r2
 800cec8:	1b00      	subs	r0, r0, r4
 800ceca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cecc:	0801333f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, sp}
 800ced0:	01000c00 	tsteq	r0, r0, lsl #24
 800ced4:	20009264 	andcs	r9, r0, r4, ror #4

0800ced8 <MDNS::CreateMDNSMessage(unsigned int)>:
 800ced8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ceda:	2384      	movs	r3, #132	; 0x84
 800cedc:	4d19      	ldr	r5, [pc, #100]	; (800cf44 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800cede:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800cee2:	80eb      	strh	r3, [r5, #6]
 800cee4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cee8:	f105 0410 	add.w	r4, r5, #16
 800ceec:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800cef0:	4622      	mov	r2, r4
 800cef2:	4606      	mov	r6, r0
 800cef4:	460f      	mov	r7, r1
 800cef6:	f7ff ff09 	bl	800cd0c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800cefa:	4404      	add	r4, r0
 800cefc:	4622      	mov	r2, r4
 800cefe:	4639      	mov	r1, r7
 800cf00:	4630      	mov	r0, r6
 800cf02:	f7ff ff47 	bl	800cd94 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800cf06:	4404      	add	r4, r0
 800cf08:	4622      	mov	r2, r4
 800cf0a:	4639      	mov	r1, r7
 800cf0c:	4630      	mov	r0, r6
 800cf0e:	f7ff ffbb 	bl	800ce88 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800cf12:	4404      	add	r4, r0
 800cf14:	4622      	mov	r2, r4
 800cf16:	4639      	mov	r1, r7
 800cf18:	4630      	mov	r0, r6
 800cf1a:	f7ff ff79 	bl	800ce10 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800cf1e:	4b0a      	ldr	r3, [pc, #40]	; (800cf48 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800cf20:	4404      	add	r4, r0
 800cf22:	f853 2b10 	ldr.w	r2, [r3], #16
 800cf26:	1e60      	subs	r0, r4, #1
 800cf28:	3a0c      	subs	r2, #12
 800cf2a:	4611      	mov	r1, r2
 800cf2c:	3901      	subs	r1, #1
 800cf2e:	d304      	bcc.n	800cf3a <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800cf30:	f813 6b01 	ldrb.w	r6, [r3], #1
 800cf34:	f800 6f01 	strb.w	r6, [r0, #1]!
 800cf38:	e7f8      	b.n	800cf2c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800cf3a:	4414      	add	r4, r2
 800cf3c:	4a03      	ldr	r2, [pc, #12]	; (800cf4c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800cf3e:	1aa4      	subs	r4, r4, r2
 800cf40:	602c      	str	r4, [r5, #0]
 800cf42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cf44:	20009288 	andcs	r9, r0, r8, lsl #5
 800cf48:	20009060 	andcs	r9, r0, r0, rrx
 800cf4c:	2000928c 	andcs	r9, r0, ip, lsl #5

0800cf50 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800cf50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf54:	4d3f      	ldr	r5, [pc, #252]	; (800d054 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800cf56:	b085      	sub	sp, #20
 800cf58:	682c      	ldr	r4, [r5, #0]
 800cf5a:	4680      	mov	r8, r0
 800cf5c:	460f      	mov	r7, r1
 800cf5e:	4616      	mov	r6, r2
 800cf60:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800cf64:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800cf68:	b11c      	cbz	r4, 800cf72 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800cf6a:	692a      	ldr	r2, [r5, #16]
 800cf6c:	2a00      	cmp	r2, #0
 800cf6e:	d16d      	bne.n	800d04c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800cf70:	2401      	movs	r4, #1
 800cf72:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800cf76:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800cf7a:	8193      	strh	r3, [r2, #12]
 800cf7c:	f882 b00e 	strb.w	fp, [r2, #14]
 800cf80:	2f00      	cmp	r7, #0
 800cf82:	d153      	bne.n	800d02c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800cf84:	4630      	mov	r0, r6
 800cf86:	f7ff fd8b 	bl	800caa0 <strlen>
 800cf8a:	4f33      	ldr	r7, [pc, #204]	; (800d058 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800cf8c:	683b      	ldr	r3, [r7, #0]
 800cf8e:	331c      	adds	r3, #28
 800cf90:	4418      	add	r0, r3
 800cf92:	f7ff fd85 	bl	800caa0 <strlen>
 800cf96:	3001      	adds	r0, #1
 800cf98:	f002 fbcc 	bl	800f734 <operator new[](unsigned int)>
 800cf9c:	6839      	ldr	r1, [r7, #0]
 800cf9e:	f845 0009 	str.w	r0, [r5, r9]
 800cfa2:	311c      	adds	r1, #28
 800cfa4:	f7ff fd91 	bl	800caca <strcpy.isra.0>
 800cfa8:	f855 0009 	ldr.w	r0, [r5, r9]
 800cfac:	4631      	mov	r1, r6
 800cfae:	f7ff fd94 	bl	800cada <strcat.isra.0>
 800cfb2:	4631      	mov	r1, r6
 800cfb4:	4640      	mov	r0, r8
 800cfb6:	f7ff fe0d 	bl	800cbd4 <MDNS::FindFirstDotFromRight(char const*) const>
 800cfba:	eb05 0709 	add.w	r7, r5, r9
 800cfbe:	4605      	mov	r5, r0
 800cfc0:	f7ff fd6e 	bl	800caa0 <strlen>
 800cfc4:	300d      	adds	r0, #13
 800cfc6:	f002 fbb5 	bl	800f734 <operator new[](unsigned int)>
 800cfca:	4629      	mov	r1, r5
 800cfcc:	6078      	str	r0, [r7, #4]
 800cfce:	f7ff fd7c 	bl	800caca <strcpy.isra.0>
 800cfd2:	4922      	ldr	r1, [pc, #136]	; (800d05c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cfd4:	6878      	ldr	r0, [r7, #4]
 800cfd6:	f7ff fd80 	bl	800cada <strcat.isra.0>
 800cfda:	4921      	ldr	r1, [pc, #132]	; (800d060 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800cfdc:	4b21      	ldr	r3, [pc, #132]	; (800d064 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800cfde:	6878      	ldr	r0, [r7, #4]
 800cfe0:	f1bb 0f01 	cmp.w	fp, #1
 800cfe4:	bf18      	it	ne
 800cfe6:	4619      	movne	r1, r3
 800cfe8:	f7ff fd77 	bl	800cada <strcat.isra.0>
 800cfec:	f1ba 0f00 	cmp.w	sl, #0
 800cff0:	d009      	beq.n	800d006 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800cff2:	4650      	mov	r0, sl
 800cff4:	f7ff fd54 	bl	800caa0 <strlen>
 800cff8:	3001      	adds	r0, #1
 800cffa:	f002 fb9b 	bl	800f734 <operator new[](unsigned int)>
 800cffe:	4651      	mov	r1, sl
 800d000:	60b8      	str	r0, [r7, #8]
 800d002:	f7ff fd62 	bl	800caca <strcpy.isra.0>
 800d006:	4621      	mov	r1, r4
 800d008:	4640      	mov	r0, r8
 800d00a:	f7ff ff65 	bl	800ced8 <MDNS::CreateMDNSMessage(unsigned int)>
 800d00e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d012:	4915      	ldr	r1, [pc, #84]	; (800d068 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800d014:	4815      	ldr	r0, [pc, #84]	; (800d06c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800d016:	f851 2b04 	ldr.w	r2, [r1], #4
 800d01a:	9300      	str	r3, [sp, #0]
 800d01c:	4b14      	ldr	r3, [pc, #80]	; (800d070 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800d01e:	7800      	ldrb	r0, [r0, #0]
 800d020:	681b      	ldr	r3, [r3, #0]
 800d022:	b292      	uxth	r2, r2
 800d024:	f7ff fc8c 	bl	800c940 <udp_send>
 800d028:	2001      	movs	r0, #1
 800d02a:	e010      	b.n	800d04e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800d02c:	4638      	mov	r0, r7
 800d02e:	f7ff fd37 	bl	800caa0 <strlen>
 800d032:	9003      	str	r0, [sp, #12]
 800d034:	4630      	mov	r0, r6
 800d036:	f7ff fd33 	bl	800caa0 <strlen>
 800d03a:	9b03      	ldr	r3, [sp, #12]
 800d03c:	4418      	add	r0, r3
 800d03e:	3001      	adds	r0, #1
 800d040:	f002 fb78 	bl	800f734 <operator new[](unsigned int)>
 800d044:	4639      	mov	r1, r7
 800d046:	f845 0009 	str.w	r0, [r5, r9]
 800d04a:	e7ab      	b.n	800cfa4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800d04c:	2000      	movs	r0, #0
 800d04e:	b005      	add	sp, #20
 800d050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d054:	20009264 	andcs	r9, r0, r4, ror #4
 800d058:	20009494 	mulcs	r0, r4, r4
 800d05c:	080123c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, sp}
 800d060:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}
 800d064:	08013351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip, sp}
 800d068:	20009288 	andcs	r9, r0, r8, lsl #5
 800d06c:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d070:	2000905c 	andcs	r9, r0, ip, asr r0

0800d074 <MDNS::HandleRequest(unsigned short)>:
 800d074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d078:	4605      	mov	r5, r0
 800d07a:	2700      	movs	r7, #0
 800d07c:	f04f 080c 	mov.w	r8, #12
 800d080:	b0c5      	sub	sp, #276	; 0x114
 800d082:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800d148 <MDNS::HandleRequest(unsigned short)+0xd4>
 800d086:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800d14c <MDNS::HandleRequest(unsigned short)+0xd8>
 800d08a:	9103      	str	r1, [sp, #12]
 800d08c:	9b03      	ldr	r3, [sp, #12]
 800d08e:	42bb      	cmp	r3, r7
 800d090:	d956      	bls.n	800d140 <MDNS::HandleRequest(unsigned short)+0xcc>
 800d092:	f8da 1000 	ldr.w	r1, [sl]
 800d096:	aa04      	add	r2, sp, #16
 800d098:	4441      	add	r1, r8
 800d09a:	4628      	mov	r0, r5
 800d09c:	f7ff fd54 	bl	800cb48 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800d0a0:	f8da 2000 	ldr.w	r2, [sl]
 800d0a4:	4440      	add	r0, r8
 800d0a6:	1813      	adds	r3, r2, r0
 800d0a8:	885b      	ldrh	r3, [r3, #2]
 800d0aa:	f100 0804 	add.w	r8, r0, #4
 800d0ae:	ba5b      	rev16	r3, r3
 800d0b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d0b4:	2b01      	cmp	r3, #1
 800d0b6:	d13e      	bne.n	800d136 <MDNS::HandleRequest(unsigned short)+0xc2>
 800d0b8:	5a14      	ldrh	r4, [r2, r0]
 800d0ba:	4b25      	ldr	r3, [pc, #148]	; (800d150 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800d0bc:	ba64      	rev16	r4, r4
 800d0be:	6818      	ldr	r0, [r3, #0]
 800d0c0:	a904      	add	r1, sp, #16
 800d0c2:	b2a4      	uxth	r4, r4
 800d0c4:	f7ff fcf4 	bl	800cab0 <strcmp>
 800d0c8:	b970      	cbnz	r0, 800d0e8 <MDNS::HandleRequest(unsigned short)+0x74>
 800d0ca:	2c01      	cmp	r4, #1
 800d0cc:	d10c      	bne.n	800d0e8 <MDNS::HandleRequest(unsigned short)+0x74>
 800d0ce:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d0d2:	4920      	ldr	r1, [pc, #128]	; (800d154 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d0d4:	4820      	ldr	r0, [pc, #128]	; (800d158 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d0d6:	f851 2b04 	ldr.w	r2, [r1], #4
 800d0da:	9300      	str	r3, [sp, #0]
 800d0dc:	4b1f      	ldr	r3, [pc, #124]	; (800d15c <MDNS::HandleRequest(unsigned short)+0xe8>)
 800d0de:	7800      	ldrb	r0, [r0, #0]
 800d0e0:	681b      	ldr	r3, [r3, #0]
 800d0e2:	b292      	uxth	r2, r2
 800d0e4:	f7ff fc2c 	bl	800c940 <udp_send>
 800d0e8:	481d      	ldr	r0, [pc, #116]	; (800d160 <MDNS::HandleRequest(unsigned short)+0xec>)
 800d0ea:	a904      	add	r1, sp, #16
 800d0ec:	f7ff fce0 	bl	800cab0 <strcmp>
 800d0f0:	f04f 0900 	mov.w	r9, #0
 800d0f4:	4e1b      	ldr	r6, [pc, #108]	; (800d164 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800d0f6:	9002      	str	r0, [sp, #8]
 800d0f8:	6833      	ldr	r3, [r6, #0]
 800d0fa:	b1c3      	cbz	r3, 800d12e <MDNS::HandleRequest(unsigned short)+0xba>
 800d0fc:	9b02      	ldr	r3, [sp, #8]
 800d0fe:	b123      	cbz	r3, 800d10a <MDNS::HandleRequest(unsigned short)+0x96>
 800d100:	6870      	ldr	r0, [r6, #4]
 800d102:	a904      	add	r1, sp, #16
 800d104:	f7ff fcd4 	bl	800cab0 <strcmp>
 800d108:	b988      	cbnz	r0, 800d12e <MDNS::HandleRequest(unsigned short)+0xba>
 800d10a:	2c0c      	cmp	r4, #12
 800d10c:	d10f      	bne.n	800d12e <MDNS::HandleRequest(unsigned short)+0xba>
 800d10e:	4649      	mov	r1, r9
 800d110:	4628      	mov	r0, r5
 800d112:	f7ff fee1 	bl	800ced8 <MDNS::CreateMDNSMessage(unsigned int)>
 800d116:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d11a:	480f      	ldr	r0, [pc, #60]	; (800d158 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d11c:	9300      	str	r3, [sp, #0]
 800d11e:	4b0f      	ldr	r3, [pc, #60]	; (800d15c <MDNS::HandleRequest(unsigned short)+0xe8>)
 800d120:	f8bb 2000 	ldrh.w	r2, [fp]
 800d124:	681b      	ldr	r3, [r3, #0]
 800d126:	4910      	ldr	r1, [pc, #64]	; (800d168 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800d128:	7800      	ldrb	r0, [r0, #0]
 800d12a:	f7ff fc09 	bl	800c940 <udp_send>
 800d12e:	3610      	adds	r6, #16
 800d130:	f1b9 0f00 	cmp.w	r9, #0
 800d134:	d001      	beq.n	800d13a <MDNS::HandleRequest(unsigned short)+0xc6>
 800d136:	3701      	adds	r7, #1
 800d138:	e7a8      	b.n	800d08c <MDNS::HandleRequest(unsigned short)+0x18>
 800d13a:	f04f 0901 	mov.w	r9, #1
 800d13e:	e7db      	b.n	800d0f8 <MDNS::HandleRequest(unsigned short)+0x84>
 800d140:	b045      	add	sp, #276	; 0x114
 800d142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d146:	bf00      	nop
 800d148:	20009490 	mulcs	r0, r0, r4
 800d14c:	20009288 	andcs	r9, r0, r8, lsl #5
 800d150:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d154:	20009060 	andcs	r9, r0, r0, rrx
 800d158:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d15c:	2000905c 	andcs	r9, r0, ip, asr r0
 800d160:	0801333f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, sp}
 800d164:	20009264 	andcs	r9, r0, r4, ror #4
 800d168:	2000928c 	andcs	r9, r0, ip, lsl #5

0800d16c <MDNS::Parse()>:
 800d16c:	4b08      	ldr	r3, [pc, #32]	; (800d190 <MDNS::Parse()+0x24>)
 800d16e:	681a      	ldr	r2, [r3, #0]
 800d170:	8853      	ldrh	r3, [r2, #2]
 800d172:	ba5b      	rev16	r3, r3
 800d174:	b299      	uxth	r1, r3
 800d176:	041b      	lsls	r3, r3, #16
 800d178:	d408      	bmi.n	800d18c <MDNS::Parse()+0x20>
 800d17a:	0b8b      	lsrs	r3, r1, #14
 800d17c:	d106      	bne.n	800d18c <MDNS::Parse()+0x20>
 800d17e:	8891      	ldrh	r1, [r2, #4]
 800d180:	b28b      	uxth	r3, r1
 800d182:	b11b      	cbz	r3, 800d18c <MDNS::Parse()+0x20>
 800d184:	ba49      	rev16	r1, r1
 800d186:	b289      	uxth	r1, r1
 800d188:	f7ff bf74 	b.w	800d074 <MDNS::HandleRequest(unsigned short)>
 800d18c:	4770      	bx	lr
 800d18e:	bf00      	nop
 800d190:	20009490 	mulcs	r0, r0, r4

0800d194 <MDNS::Run()>:
 800d194:	b538      	push	{r3, r4, r5, lr}
 800d196:	4d0c      	ldr	r5, [pc, #48]	; (800d1c8 <MDNS::Run()+0x34>)
 800d198:	4604      	mov	r4, r0
 800d19a:	480c      	ldr	r0, [pc, #48]	; (800d1cc <MDNS::Run()+0x38>)
 800d19c:	462b      	mov	r3, r5
 800d19e:	4a0c      	ldr	r2, [pc, #48]	; (800d1d0 <MDNS::Run()+0x3c>)
 800d1a0:	490c      	ldr	r1, [pc, #48]	; (800d1d4 <MDNS::Run()+0x40>)
 800d1a2:	7800      	ldrb	r0, [r0, #0]
 800d1a4:	f7ff fba6 	bl	800c8f4 <udp_recv2>
 800d1a8:	4b0b      	ldr	r3, [pc, #44]	; (800d1d8 <MDNS::Run()+0x44>)
 800d1aa:	882a      	ldrh	r2, [r5, #0]
 800d1ac:	8018      	strh	r0, [r3, #0]
 800d1ae:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d1b2:	429a      	cmp	r2, r3
 800d1b4:	d106      	bne.n	800d1c4 <MDNS::Run()+0x30>
 800d1b6:	280c      	cmp	r0, #12
 800d1b8:	d904      	bls.n	800d1c4 <MDNS::Run()+0x30>
 800d1ba:	4620      	mov	r0, r4
 800d1bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1c0:	f7ff bfd4 	b.w	800d16c <MDNS::Parse()>
 800d1c4:	bd38      	pop	{r3, r4, r5, pc}
 800d1c6:	bf00      	nop
 800d1c8:	20009058 	andcs	r9, r0, r8, asr r0
 800d1cc:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d1d0:	20009054 	andcs	r9, r0, r4, asr r0
 800d1d4:	20009490 	mulcs	r0, r0, r4
 800d1d8:	20009284 	andcs	r9, r0, r4, lsl #5

0800d1dc <MDNS::Print()>:
 800d1dc:	b510      	push	{r4, lr}
 800d1de:	4816      	ldr	r0, [pc, #88]	; (800d238 <MDNS::Print()+0x5c>)
 800d1e0:	f002 fd9e 	bl	800fd20 <printf>
 800d1e4:	4b15      	ldr	r3, [pc, #84]	; (800d23c <MDNS::Print()+0x60>)
 800d1e6:	681b      	ldr	r3, [r3, #0]
 800d1e8:	3301      	adds	r3, #1
 800d1ea:	d104      	bne.n	800d1f6 <MDNS::Print()+0x1a>
 800d1ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1f0:	4813      	ldr	r0, [pc, #76]	; (800d240 <MDNS::Print()+0x64>)
 800d1f2:	f002 bd95 	b.w	800fd20 <printf>
 800d1f6:	4b13      	ldr	r3, [pc, #76]	; (800d244 <MDNS::Print()+0x68>)
 800d1f8:	4c13      	ldr	r4, [pc, #76]	; (800d248 <MDNS::Print()+0x6c>)
 800d1fa:	6819      	ldr	r1, [r3, #0]
 800d1fc:	4813      	ldr	r0, [pc, #76]	; (800d24c <MDNS::Print()+0x70>)
 800d1fe:	f002 fd8f 	bl	800fd20 <printf>
 800d202:	6823      	ldr	r3, [r4, #0]
 800d204:	b14b      	cbz	r3, 800d21a <MDNS::Print()+0x3e>
 800d206:	4a12      	ldr	r2, [pc, #72]	; (800d250 <MDNS::Print()+0x74>)
 800d208:	68a3      	ldr	r3, [r4, #8]
 800d20a:	6861      	ldr	r1, [r4, #4]
 800d20c:	2b00      	cmp	r3, #0
 800d20e:	bf08      	it	eq
 800d210:	4613      	moveq	r3, r2
 800d212:	4810      	ldr	r0, [pc, #64]	; (800d254 <MDNS::Print()+0x78>)
 800d214:	89a2      	ldrh	r2, [r4, #12]
 800d216:	f002 fd83 	bl	800fd20 <printf>
 800d21a:	6923      	ldr	r3, [r4, #16]
 800d21c:	b15b      	cbz	r3, 800d236 <MDNS::Print()+0x5a>
 800d21e:	69a3      	ldr	r3, [r4, #24]
 800d220:	4a0b      	ldr	r2, [pc, #44]	; (800d250 <MDNS::Print()+0x74>)
 800d222:	6961      	ldr	r1, [r4, #20]
 800d224:	2b00      	cmp	r3, #0
 800d226:	bf08      	it	eq
 800d228:	4613      	moveq	r3, r2
 800d22a:	480a      	ldr	r0, [pc, #40]	; (800d254 <MDNS::Print()+0x78>)
 800d22c:	8ba2      	ldrh	r2, [r4, #28]
 800d22e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d232:	f002 bd75 	b.w	800fd20 <printf>
 800d236:	bd10      	pop	{r4, pc}
 800d238:	0801335c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, ip, sp}
 800d23c:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d240:	08013362 	stmdaeq	r1, {r1, r5, r6, r8, r9, ip, sp}
 800d244:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d248:	20009264 	andcs	r9, r0, r4, ror #4
 800d24c:	08013370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, sp}
 800d250:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 800d254:	0801337c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip, sp}

0800d258 <strncpy.constprop.0.isra.0>:
 800d258:	233f      	movs	r3, #63	; 0x3f
 800d25a:	3901      	subs	r1, #1
 800d25c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d260:	b92a      	cbnz	r2, 800d26e <strncpy.constprop.0.isra.0+0x16>
 800d262:	4403      	add	r3, r0
 800d264:	4298      	cmp	r0, r3
 800d266:	d007      	beq.n	800d278 <strncpy.constprop.0.isra.0+0x20>
 800d268:	f800 2b01 	strb.w	r2, [r0], #1
 800d26c:	e7fa      	b.n	800d264 <strncpy.constprop.0.isra.0+0xc>
 800d26e:	3b01      	subs	r3, #1
 800d270:	f800 2b01 	strb.w	r2, [r0], #1
 800d274:	d1f2      	bne.n	800d25c <strncpy.constprop.0.isra.0+0x4>
 800d276:	4770      	bx	lr
 800d278:	4770      	bx	lr
	...

0800d27c <Network::Network()>:
 800d27c:	4a11      	ldr	r2, [pc, #68]	; (800d2c4 <Network::Network()+0x48>)
 800d27e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800d282:	6010      	str	r0, [r2, #0]
 800d284:	2201      	movs	r2, #1
 800d286:	2300      	movs	r3, #0
 800d288:	e9c0 1200 	strd	r1, r2, [r0]
 800d28c:	2200      	movs	r2, #0
 800d28e:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800d292:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d296:	490c      	ldr	r1, [pc, #48]	; (800d2c8 <Network::Network()+0x4c>)
 800d298:	60c2      	str	r2, [r0, #12]
 800d29a:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800d29e:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800d2a2:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800d2a6:	6083      	str	r3, [r0, #8]
 800d2a8:	6183      	str	r3, [r0, #24]
 800d2aa:	7703      	strb	r3, [r0, #28]
 800d2ac:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800d2b0:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800d2b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d2b8:	f802 3b01 	strb.w	r3, [r2], #1
 800d2bc:	2b00      	cmp	r3, #0
 800d2be:	d1f9      	bne.n	800d2b4 <Network::Network()+0x38>
 800d2c0:	4770      	bx	lr
 800d2c2:	bf00      	nop
 800d2c4:	20009494 	mulcs	r0, r4, r4
 800d2c8:	08013387 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, ip, sp}

0800d2cc <Network::Shutdown()>:
 800d2cc:	b508      	push	{r3, lr}
 800d2ce:	30b8      	adds	r0, #184	; 0xb8
 800d2d0:	f001 fb9e 	bl	800ea10 <NetworkDisplay::ShowShutdown()>
 800d2d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d2d8:	f7f9 bf8a 	b.w	80071f0 <net_shutdown>

0800d2dc <Network::Begin(unsigned short)>:
 800d2dc:	4608      	mov	r0, r1
 800d2de:	f7ff ba99 	b.w	800c814 <udp_bind>

0800d2e2 <Network::End(unsigned short)>:
 800d2e2:	4608      	mov	r0, r1
 800d2e4:	f7ff bab0 	b.w	800c848 <udp_unbind>

0800d2e8 <Network::MacAddressCopyTo(unsigned char*)>:
 800d2e8:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800d2ec:	3901      	subs	r1, #1
 800d2ee:	30a2      	adds	r0, #162	; 0xa2
 800d2f0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d2f4:	4283      	cmp	r3, r0
 800d2f6:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d2fa:	d1f9      	bne.n	800d2f0 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d2fc:	4770      	bx	lr

0800d2fe <Network::JoinGroup(int, unsigned int)>:
 800d2fe:	4610      	mov	r0, r2
 800d300:	f000 bf04 	b.w	800e10c <igmp_join>

0800d304 <Network::LeaveGroup(int, unsigned int)>:
 800d304:	4610      	mov	r0, r2
 800d306:	f000 bf2d 	b.w	800e164 <igmp_leave>

0800d30a <Network::SetDefaultIp()>:
 800d30a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d30e:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800d312:	041b      	lsls	r3, r3, #16
 800d314:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d318:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800d31c:	3302      	adds	r3, #2
 800d31e:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d322:	22ff      	movs	r2, #255	; 0xff
 800d324:	6103      	str	r3, [r0, #16]
 800d326:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800d32a:	4770      	bx	lr

0800d32c <Network::Init(NetworkParamsStore*)>:
 800d32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d330:	b08b      	sub	sp, #44	; 0x2c
 800d332:	4604      	mov	r4, r0
 800d334:	a806      	add	r0, sp, #24
 800d336:	f000 f9b1 	bl	800d69c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d33a:	a806      	add	r0, sp, #24
 800d33c:	f000 f9be 	bl	800d6bc <NetworkParams::Load()>
 800d340:	b110      	cbz	r0, 800d348 <Network::Init(NetworkParamsStore*)+0x1c>
 800d342:	a806      	add	r0, sp, #24
 800d344:	f000 fba3 	bl	800da8e <NetworkParams::Dump()>
 800d348:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800d34c:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800d574 <Network::Init(NetworkParamsStore*)+0x248>
 800d350:	4628      	mov	r0, r5
 800d352:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800d356:	f001 fb4f 	bl	800e9f8 <NetworkDisplay::ShowEmacStart()>
 800d35a:	4638      	mov	r0, r7
 800d35c:	f003 fbf8 	bl	8010b50 <emac_start>
 800d360:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d364:	f104 061c 	add.w	r6, r4, #28
 800d368:	9307      	str	r3, [sp, #28]
 800d36a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d36e:	9308      	str	r3, [sp, #32]
 800d370:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d374:	9309      	str	r3, [sp, #36]	; 0x24
 800d376:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d37a:	7063      	strb	r3, [r4, #1]
 800d37c:	f8d8 3000 	ldr.w	r3, [r8]
 800d380:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d384:	bf18      	it	ne
 800d386:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800d38a:	061b      	lsls	r3, r3, #24
 800d38c:	bf58      	it	pl
 800d38e:	2300      	movpl	r3, #0
 800d390:	60a2      	str	r2, [r4, #8]
 800d392:	bf48      	it	mi
 800d394:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800d398:	60e3      	str	r3, [r4, #12]
 800d39a:	f898 3015 	ldrb.w	r3, [r8, #21]
 800d39e:	2b00      	cmp	r3, #0
 800d3a0:	d15e      	bne.n	800d460 <Network::Init(NetworkParamsStore*)+0x134>
 800d3a2:	4632      	mov	r2, r6
 800d3a4:	4874      	ldr	r0, [pc, #464]	; (800d578 <Network::Init(NetworkParamsStore*)+0x24c>)
 800d3a6:	f810 1b01 	ldrb.w	r1, [r0], #1
 800d3aa:	f103 0c01 	add.w	ip, r3, #1
 800d3ae:	b119      	cbz	r1, 800d3b8 <Network::Init(NetworkParamsStore*)+0x8c>
 800d3b0:	4663      	mov	r3, ip
 800d3b2:	f802 1b01 	strb.w	r1, [r2], #1
 800d3b6:	e7f6      	b.n	800d3a6 <Network::Init(NetworkParamsStore*)+0x7a>
 800d3b8:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800d3bc:	18e1      	adds	r1, r4, r3
 800d3be:	0910      	lsrs	r0, r2, #4
 800d3c0:	2a9f      	cmp	r2, #159	; 0x9f
 800d3c2:	f002 020f 	and.w	r2, r2, #15
 800d3c6:	bf94      	ite	ls
 800d3c8:	3030      	addls	r0, #48	; 0x30
 800d3ca:	3037      	addhi	r0, #55	; 0x37
 800d3cc:	2a09      	cmp	r2, #9
 800d3ce:	bf94      	ite	ls
 800d3d0:	3230      	addls	r2, #48	; 0x30
 800d3d2:	3237      	addhi	r2, #55	; 0x37
 800d3d4:	44a4      	add	ip, r4
 800d3d6:	7708      	strb	r0, [r1, #28]
 800d3d8:	f88c 201c 	strb.w	r2, [ip, #28]
 800d3dc:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800d3e0:	f103 0e02 	add.w	lr, r3, #2
 800d3e4:	0910      	lsrs	r0, r2, #4
 800d3e6:	2a9f      	cmp	r2, #159	; 0x9f
 800d3e8:	f002 020f 	and.w	r2, r2, #15
 800d3ec:	bf94      	ite	ls
 800d3ee:	3030      	addls	r0, #48	; 0x30
 800d3f0:	3037      	addhi	r0, #55	; 0x37
 800d3f2:	f103 0903 	add.w	r9, r3, #3
 800d3f6:	2a09      	cmp	r2, #9
 800d3f8:	44a6      	add	lr, r4
 800d3fa:	f88e 001c 	strb.w	r0, [lr, #28]
 800d3fe:	bf94      	ite	ls
 800d400:	3230      	addls	r2, #48	; 0x30
 800d402:	3237      	addhi	r2, #55	; 0x37
 800d404:	eb04 0009 	add.w	r0, r4, r9
 800d408:	7702      	strb	r2, [r0, #28]
 800d40a:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d40e:	f103 0c04 	add.w	ip, r3, #4
 800d412:	0910      	lsrs	r0, r2, #4
 800d414:	2a9f      	cmp	r2, #159	; 0x9f
 800d416:	f002 020f 	and.w	r2, r2, #15
 800d41a:	bf94      	ite	ls
 800d41c:	3030      	addls	r0, #48	; 0x30
 800d41e:	3037      	addhi	r0, #55	; 0x37
 800d420:	3305      	adds	r3, #5
 800d422:	2a09      	cmp	r2, #9
 800d424:	4423      	add	r3, r4
 800d426:	44a4      	add	ip, r4
 800d428:	bf94      	ite	ls
 800d42a:	3230      	addls	r2, #48	; 0x30
 800d42c:	3237      	addhi	r2, #55	; 0x37
 800d42e:	f88c 001c 	strb.w	r0, [ip, #28]
 800d432:	771a      	strb	r2, [r3, #28]
 800d434:	2300      	movs	r3, #0
 800d436:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800d43a:	7863      	ldrb	r3, [r4, #1]
 800d43c:	b95b      	cbnz	r3, 800d456 <Network::Init(NetworkParamsStore*)+0x12a>
 800d43e:	9b07      	ldr	r3, [sp, #28]
 800d440:	b9b3      	cbnz	r3, 800d470 <Network::Init(NetworkParamsStore*)+0x144>
 800d442:	4620      	mov	r0, r4
 800d444:	f7ff ff61 	bl	800d30a <Network::SetDefaultIp()>
 800d448:	6923      	ldr	r3, [r4, #16]
 800d44a:	69a2      	ldr	r2, [r4, #24]
 800d44c:	9307      	str	r3, [sp, #28]
 800d44e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800d452:	7863      	ldrb	r3, [r4, #1]
 800d454:	b19b      	cbz	r3, 800d47e <Network::Init(NetworkParamsStore*)+0x152>
 800d456:	2101      	movs	r1, #1
 800d458:	4628      	mov	r0, r5
 800d45a:	f001 fadf 	bl	800ea1c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d45e:	e00e      	b.n	800d47e <Network::Init(NetworkParamsStore*)+0x152>
 800d460:	4630      	mov	r0, r6
 800d462:	4946      	ldr	r1, [pc, #280]	; (800d57c <Network::Init(NetworkParamsStore*)+0x250>)
 800d464:	f7ff fef8 	bl	800d258 <strncpy.constprop.0.isra.0>
 800d468:	2300      	movs	r3, #0
 800d46a:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800d46e:	e7e4      	b.n	800d43a <Network::Init(NetworkParamsStore*)+0x10e>
 800d470:	69a1      	ldr	r1, [r4, #24]
 800d472:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800d476:	4053      	eors	r3, r2
 800d478:	420b      	tst	r3, r1
 800d47a:	d000      	beq.n	800d47e <Network::Init(NetworkParamsStore*)+0x152>
 800d47c:	9209      	str	r2, [sp, #36]	; 0x24
 800d47e:	1ce3      	adds	r3, r4, #3
 800d480:	f104 0901 	add.w	r9, r4, #1
 800d484:	9302      	str	r3, [sp, #8]
 800d486:	9300      	str	r3, [sp, #0]
 800d488:	4632      	mov	r2, r6
 800d48a:	464b      	mov	r3, r9
 800d48c:	4638      	mov	r0, r7
 800d48e:	a907      	add	r1, sp, #28
 800d490:	f7f9 fe5e 	bl	8007150 <net_init>
 800d494:	78e3      	ldrb	r3, [r4, #3]
 800d496:	b11b      	cbz	r3, 800d4a0 <Network::Init(NetworkParamsStore*)+0x174>
 800d498:	2104      	movs	r1, #4
 800d49a:	4628      	mov	r0, r5
 800d49c:	f001 fabe 	bl	800ea1c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d4a0:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d4a4:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800d4a8:	9304      	str	r3, [sp, #16]
 800d4aa:	233c      	movs	r3, #60	; 0x3c
 800d4ac:	fb03 f30a 	mul.w	r3, r3, sl
 800d4b0:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800d580 <Network::Init(NetworkParamsStore*)+0x254>
 800d4b4:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800d584 <Network::Init(NetworkParamsStore*)+0x258>
 800d4b8:	9303      	str	r3, [sp, #12]
 800d4ba:	78e3      	ldrb	r3, [r4, #3]
 800d4bc:	b95b      	cbnz	r3, 800d4d6 <Network::Init(NetworkParamsStore*)+0x1aa>
 800d4be:	9b07      	ldr	r3, [sp, #28]
 800d4c0:	4628      	mov	r0, r5
 800d4c2:	6123      	str	r3, [r4, #16]
 800d4c4:	9b08      	ldr	r3, [sp, #32]
 800d4c6:	61a3      	str	r3, [r4, #24]
 800d4c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d4ca:	6163      	str	r3, [r4, #20]
 800d4cc:	f001 fa9a 	bl	800ea04 <NetworkDisplay::ShowIp()>
 800d4d0:	b00b      	add	sp, #44	; 0x2c
 800d4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4d6:	f1ba 0f00 	cmp.w	sl, #0
 800d4da:	d0f0      	beq.n	800d4be <Network::Init(NetworkParamsStore*)+0x192>
 800d4dc:	9b04      	ldr	r3, [sp, #16]
 800d4de:	2b00      	cmp	r3, #0
 800d4e0:	d0ed      	beq.n	800d4be <Network::Init(NetworkParamsStore*)+0x192>
 800d4e2:	2104      	movs	r1, #4
 800d4e4:	f8d8 0000 	ldr.w	r0, [r8]
 800d4e8:	f002 f83c 	bl	800f564 <LedBlink::SetMode(ledblink::Mode)>
 800d4ec:	2103      	movs	r1, #3
 800d4ee:	4628      	mov	r0, r5
 800d4f0:	f001 fa94 	bl	800ea1c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d4f4:	2000      	movs	r0, #0
 800d4f6:	f002 fd49 	bl	800ff8c <time>
 800d4fa:	9005      	str	r0, [sp, #20]
 800d4fc:	2000      	movs	r0, #0
 800d4fe:	f002 fd45 	bl	800ff8c <time>
 800d502:	9b05      	ldr	r3, [sp, #20]
 800d504:	1ac0      	subs	r0, r0, r3
 800d506:	9b03      	ldr	r3, [sp, #12]
 800d508:	4298      	cmp	r0, r3
 800d50a:	da1a      	bge.n	800d542 <Network::Init(NetworkParamsStore*)+0x216>
 800d50c:	f8d8 3000 	ldr.w	r3, [r8]
 800d510:	491d      	ldr	r1, [pc, #116]	; (800d588 <Network::Init(NetworkParamsStore*)+0x25c>)
 800d512:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d516:	f1bc 0f00 	cmp.w	ip, #0
 800d51a:	d0ef      	beq.n	800d4fc <Network::Init(NetworkParamsStore*)+0x1d0>
 800d51c:	6808      	ldr	r0, [r1, #0]
 800d51e:	695a      	ldr	r2, [r3, #20]
 800d520:	1a80      	subs	r0, r0, r2
 800d522:	4584      	cmp	ip, r0
 800d524:	d8ea      	bhi.n	800d4fc <Network::Init(NetworkParamsStore*)+0x1d0>
 800d526:	6808      	ldr	r0, [r1, #0]
 800d528:	6158      	str	r0, [r3, #20]
 800d52a:	6918      	ldr	r0, [r3, #16]
 800d52c:	2801      	cmp	r0, #1
 800d52e:	f080 0201 	eor.w	r2, r0, #1
 800d532:	611a      	str	r2, [r3, #16]
 800d534:	bf16      	itet	ne
 800d536:	2301      	movne	r3, #1
 800d538:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d53c:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d540:	e7dc      	b.n	800d4fc <Network::Init(NetworkParamsStore*)+0x1d0>
 800d542:	2101      	movs	r1, #1
 800d544:	4628      	mov	r0, r5
 800d546:	f001 fa69 	bl	800ea1c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d54a:	2101      	movs	r1, #1
 800d54c:	f8d8 0000 	ldr.w	r0, [r8]
 800d550:	f002 f808 	bl	800f564 <LedBlink::SetMode(ledblink::Mode)>
 800d554:	2301      	movs	r3, #1
 800d556:	7063      	strb	r3, [r4, #1]
 800d558:	2300      	movs	r3, #0
 800d55a:	70e3      	strb	r3, [r4, #3]
 800d55c:	9b02      	ldr	r3, [sp, #8]
 800d55e:	4632      	mov	r2, r6
 800d560:	9300      	str	r3, [sp, #0]
 800d562:	4638      	mov	r0, r7
 800d564:	464b      	mov	r3, r9
 800d566:	a907      	add	r1, sp, #28
 800d568:	f7f9 fdf2 	bl	8007150 <net_init>
 800d56c:	7863      	ldrb	r3, [r4, #1]
 800d56e:	2b00      	cmp	r3, #0
 800d570:	d0a3      	beq.n	800d4ba <Network::Init(NetworkParamsStore*)+0x18e>
 800d572:	e7a4      	b.n	800d4be <Network::Init(NetworkParamsStore*)+0x192>
 800d574:	20009498 	mulcs	r0, r8, r4
 800d578:	0801338c 	stmdaeq	r1, {r2, r3, r7, r8, r9, ip, sp}
 800d57c:	200094ad 	andcs	r9, r0, sp, lsr #9
 800d580:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800d584:	40011000 	andmi	r1, r1, r0
 800d588:	20009bd4 	ldrdcs	r9, [r0], -r4

0800d58c <Network::Print()>:
 800d58c:	b530      	push	{r4, r5, lr}
 800d58e:	4604      	mov	r4, r0
 800d590:	b085      	sub	sp, #20
 800d592:	4832      	ldr	r0, [pc, #200]	; (800d65c <Network::Print()+0xd0>)
 800d594:	f002 fbc4 	bl	800fd20 <printf>
 800d598:	f104 011c 	add.w	r1, r4, #28
 800d59c:	4830      	ldr	r0, [pc, #192]	; (800d660 <Network::Print()+0xd4>)
 800d59e:	f002 fbbf 	bl	800fd20 <printf>
 800d5a2:	6861      	ldr	r1, [r4, #4]
 800d5a4:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800d5a8:	482e      	ldr	r0, [pc, #184]	; (800d664 <Network::Print()+0xd8>)
 800d5aa:	f002 fbb9 	bl	800fd20 <printf>
 800d5ae:	69a0      	ldr	r0, [r4, #24]
 800d5b0:	f7fa fab6 	bl	8007b20 <__popcountsi2>
 800d5b4:	6925      	ldr	r5, [r4, #16]
 800d5b6:	9001      	str	r0, [sp, #4]
 800d5b8:	0e2b      	lsrs	r3, r5, #24
 800d5ba:	9300      	str	r3, [sp, #0]
 800d5bc:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d5c0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d5c4:	b2e9      	uxtb	r1, r5
 800d5c6:	4828      	ldr	r0, [pc, #160]	; (800d668 <Network::Print()+0xdc>)
 800d5c8:	f002 fbaa 	bl	800fd20 <printf>
 800d5cc:	69a1      	ldr	r1, [r4, #24]
 800d5ce:	4827      	ldr	r0, [pc, #156]	; (800d66c <Network::Print()+0xe0>)
 800d5d0:	0e0b      	lsrs	r3, r1, #24
 800d5d2:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5d6:	9300      	str	r3, [sp, #0]
 800d5d8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5dc:	b2c9      	uxtb	r1, r1
 800d5de:	f002 fb9f 	bl	800fd20 <printf>
 800d5e2:	6961      	ldr	r1, [r4, #20]
 800d5e4:	4822      	ldr	r0, [pc, #136]	; (800d670 <Network::Print()+0xe4>)
 800d5e6:	0e0b      	lsrs	r3, r1, #24
 800d5e8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5ec:	9300      	str	r3, [sp, #0]
 800d5ee:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5f2:	b2c9      	uxtb	r1, r1
 800d5f4:	f002 fb94 	bl	800fd20 <printf>
 800d5f8:	69a3      	ldr	r3, [r4, #24]
 800d5fa:	6921      	ldr	r1, [r4, #16]
 800d5fc:	481d      	ldr	r0, [pc, #116]	; (800d674 <Network::Print()+0xe8>)
 800d5fe:	ea61 0103 	orn	r1, r1, r3
 800d602:	0e0b      	lsrs	r3, r1, #24
 800d604:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d608:	9300      	str	r3, [sp, #0]
 800d60a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d60e:	b2c9      	uxtb	r1, r1
 800d610:	f002 fb86 	bl	800fd20 <printf>
 800d614:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800d618:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800d61c:	9302      	str	r3, [sp, #8]
 800d61e:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800d622:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800d626:	9301      	str	r3, [sp, #4]
 800d628:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800d62c:	4812      	ldr	r0, [pc, #72]	; (800d678 <Network::Print()+0xec>)
 800d62e:	9300      	str	r3, [sp, #0]
 800d630:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800d634:	f002 fb74 	bl	800fd20 <printf>
 800d638:	4b10      	ldr	r3, [pc, #64]	; (800d67c <Network::Print()+0xf0>)
 800d63a:	681b      	ldr	r3, [r3, #0]
 800d63c:	78da      	ldrb	r2, [r3, #3]
 800d63e:	b952      	cbnz	r2, 800d656 <Network::Print()+0xca>
 800d640:	785b      	ldrb	r3, [r3, #1]
 800d642:	2b00      	cmp	r3, #0
 800d644:	bf14      	ite	ne
 800d646:	2144      	movne	r1, #68	; 0x44
 800d648:	2153      	moveq	r1, #83	; 0x53
 800d64a:	480d      	ldr	r0, [pc, #52]	; (800d680 <Network::Print()+0xf4>)
 800d64c:	b005      	add	sp, #20
 800d64e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d652:	f002 bb65 	b.w	800fd20 <printf>
 800d656:	215a      	movs	r1, #90	; 0x5a
 800d658:	e7f7      	b.n	800d64a <Network::Print()+0xbe>
 800d65a:	bf00      	nop
 800d65c:	08013398 	stmdaeq	r1, {r3, r4, r7, r8, r9, ip, sp}
 800d660:	080133a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, sp}
 800d664:	080133b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, ip, sp}
 800d668:	080133c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, ip, sp}
 800d66c:	080133e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, ip, sp}
 800d670:	080133fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}
 800d674:	08013418 	stmdaeq	r1, {r3, r4, sl, ip, sp}
 800d678:	08013432 	stmdaeq	r1, {r1, r4, r5, sl, ip, sp}
 800d67c:	20009494 	mulcs	r0, r4, r4
 800d680:	0801345e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sl, ip, sp}

0800d684 <Network::TcpBegin(unsigned short)>:
 800d684:	4608      	mov	r0, r1
 800d686:	f7fe bffb 	b.w	800c680 <tcp_begin>

0800d68a <Network::TcpRead(int, unsigned char const**)>:
 800d68a:	4608      	mov	r0, r1
 800d68c:	4611      	mov	r1, r2
 800d68e:	f7ff b835 	b.w	800c6fc <tcp_read>

0800d692 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d692:	4608      	mov	r0, r1
 800d694:	4611      	mov	r1, r2
 800d696:	461a      	mov	r2, r3
 800d698:	f7ff b80c 	b.w	800c6b4 <tcp_write>

0800d69c <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d69c:	4b06      	ldr	r3, [pc, #24]	; (800d6b8 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d69e:	b510      	push	{r4, lr}
 800d6a0:	225e      	movs	r2, #94	; 0x5e
 800d6a2:	4604      	mov	r4, r0
 800d6a4:	6001      	str	r1, [r0, #0]
 800d6a6:	2100      	movs	r1, #0
 800d6a8:	4618      	mov	r0, r3
 800d6aa:	f002 f917 	bl	800f8dc <memset>
 800d6ae:	2201      	movs	r2, #1
 800d6b0:	7502      	strb	r2, [r0, #20]
 800d6b2:	4620      	mov	r0, r4
 800d6b4:	bd10      	pop	{r4, pc}
 800d6b6:	bf00      	nop
 800d6b8:	20009498 	mulcs	r0, r8, r4

0800d6bc <NetworkParams::Load()>:
 800d6bc:	b508      	push	{r3, lr}
 800d6be:	2300      	movs	r3, #0
 800d6c0:	4905      	ldr	r1, [pc, #20]	; (800d6d8 <NetworkParams::Load()+0x1c>)
 800d6c2:	6800      	ldr	r0, [r0, #0]
 800d6c4:	700b      	strb	r3, [r1, #0]
 800d6c6:	704b      	strb	r3, [r1, #1]
 800d6c8:	708b      	strb	r3, [r1, #2]
 800d6ca:	70cb      	strb	r3, [r1, #3]
 800d6cc:	b118      	cbz	r0, 800d6d6 <NetworkParams::Load()+0x1a>
 800d6ce:	6803      	ldr	r3, [r0, #0]
 800d6d0:	68db      	ldr	r3, [r3, #12]
 800d6d2:	4798      	blx	r3
 800d6d4:	2001      	movs	r0, #1
 800d6d6:	bd08      	pop	{r3, pc}
 800d6d8:	20009498 	mulcs	r0, r8, r4

0800d6dc <NetworkParams::Load(char const*, unsigned int)>:
 800d6dc:	6803      	ldr	r3, [r0, #0]
 800d6de:	b1eb      	cbz	r3, 800d71c <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d6e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d6e2:	2300      	movs	r3, #0
 800d6e4:	460e      	mov	r6, r1
 800d6e6:	4617      	mov	r7, r2
 800d6e8:	4605      	mov	r5, r0
 800d6ea:	4c0d      	ldr	r4, [pc, #52]	; (800d720 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d6ec:	4602      	mov	r2, r0
 800d6ee:	490d      	ldr	r1, [pc, #52]	; (800d724 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d6f0:	4668      	mov	r0, sp
 800d6f2:	7023      	strb	r3, [r4, #0]
 800d6f4:	7063      	strb	r3, [r4, #1]
 800d6f6:	70a3      	strb	r3, [r4, #2]
 800d6f8:	70e3      	strb	r3, [r4, #3]
 800d6fa:	f001 fae3 	bl	800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d6fe:	463a      	mov	r2, r7
 800d700:	4631      	mov	r1, r6
 800d702:	4668      	mov	r0, sp
 800d704:	f001 fae2 	bl	800eccc <ReadConfigFile::Read(char const*, unsigned int)>
 800d708:	6828      	ldr	r0, [r5, #0]
 800d70a:	4621      	mov	r1, r4
 800d70c:	6803      	ldr	r3, [r0, #0]
 800d70e:	689b      	ldr	r3, [r3, #8]
 800d710:	4798      	blx	r3
 800d712:	4668      	mov	r0, sp
 800d714:	f001 fad9 	bl	800ecca <ReadConfigFile::~ReadConfigFile()>
 800d718:	b003      	add	sp, #12
 800d71a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d71c:	4770      	bx	lr
 800d71e:	bf00      	nop
 800d720:	20009498 	mulcs	r0, r8, r4
 800d724:	0800d859 	stmdaeq	r0, {r0, r3, r4, r6, fp, ip, lr, pc}

0800d728 <NetworkParams::callbackFunction(char const*)>:
 800d728:	b530      	push	{r4, r5, lr}
 800d72a:	460c      	mov	r4, r1
 800d72c:	b085      	sub	sp, #20
 800d72e:	4620      	mov	r0, r4
 800d730:	4942      	ldr	r1, [pc, #264]	; (800d83c <NetworkParams::callbackFunction(char const*)+0x114>)
 800d732:	f10d 0207 	add.w	r2, sp, #7
 800d736:	f001 fb74 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d73a:	b980      	cbnz	r0, 800d75e <NetworkParams::callbackFunction(char const*)+0x36>
 800d73c:	4940      	ldr	r1, [pc, #256]	; (800d840 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d73e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d742:	680b      	ldr	r3, [r1, #0]
 800d744:	b142      	cbz	r2, 800d758 <NetworkParams::callbackFunction(char const*)+0x30>
 800d746:	f023 0301 	bic.w	r3, r3, #1
 800d74a:	3a00      	subs	r2, #0
 800d74c:	bf18      	it	ne
 800d74e:	2201      	movne	r2, #1
 800d750:	600b      	str	r3, [r1, #0]
 800d752:	750a      	strb	r2, [r1, #20]
 800d754:	b005      	add	sp, #20
 800d756:	bd30      	pop	{r4, r5, pc}
 800d758:	f043 0301 	orr.w	r3, r3, #1
 800d75c:	e7f5      	b.n	800d74a <NetworkParams::callbackFunction(char const*)+0x22>
 800d75e:	4620      	mov	r0, r4
 800d760:	4938      	ldr	r1, [pc, #224]	; (800d844 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d762:	f10d 0207 	add.w	r2, sp, #7
 800d766:	f001 fb5c 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d76a:	b988      	cbnz	r0, 800d790 <NetworkParams::callbackFunction(char const*)+0x68>
 800d76c:	4a34      	ldr	r2, [pc, #208]	; (800d840 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d76e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d772:	6813      	ldr	r3, [r2, #0]
 800d774:	1e4d      	subs	r5, r1, #1
 800d776:	2d04      	cmp	r5, #4
 800d778:	bf97      	itett	ls
 800d77a:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d77e:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d782:	6013      	strls	r3, [r2, #0]
 800d784:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d788:	bf84      	itt	hi
 800d78a:	6013      	strhi	r3, [r2, #0]
 800d78c:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d790:	4620      	mov	r0, r4
 800d792:	492d      	ldr	r1, [pc, #180]	; (800d848 <NetworkParams::callbackFunction(char const*)+0x120>)
 800d794:	aa02      	add	r2, sp, #8
 800d796:	f001 fae6 	bl	800ed66 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d79a:	b9d0      	cbnz	r0, 800d7d2 <NetworkParams::callbackFunction(char const*)+0xaa>
 800d79c:	9b02      	ldr	r3, [sp, #8]
 800d79e:	b2d9      	uxtb	r1, r3
 800d7a0:	29ac      	cmp	r1, #172	; 0xac
 800d7a2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d7a6:	d00a      	beq.n	800d7be <NetworkParams::callbackFunction(char const*)+0x96>
 800d7a8:	29c0      	cmp	r1, #192	; 0xc0
 800d7aa:	d00c      	beq.n	800d7c6 <NetworkParams::callbackFunction(char const*)+0x9e>
 800d7ac:	290a      	cmp	r1, #10
 800d7ae:	d10d      	bne.n	800d7cc <NetworkParams::callbackFunction(char const*)+0xa4>
 800d7b0:	4a23      	ldr	r2, [pc, #140]	; (800d840 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d7b2:	6053      	str	r3, [r2, #4]
 800d7b4:	6813      	ldr	r3, [r2, #0]
 800d7b6:	f043 0302 	orr.w	r3, r3, #2
 800d7ba:	6013      	str	r3, [r2, #0]
 800d7bc:	e7ca      	b.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7be:	3a10      	subs	r2, #16
 800d7c0:	2a0f      	cmp	r2, #15
 800d7c2:	d8c7      	bhi.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7c4:	e7f4      	b.n	800d7b0 <NetworkParams::callbackFunction(char const*)+0x88>
 800d7c6:	2aa8      	cmp	r2, #168	; 0xa8
 800d7c8:	d1c4      	bne.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7ca:	e7f1      	b.n	800d7b0 <NetworkParams::callbackFunction(char const*)+0x88>
 800d7cc:	2b00      	cmp	r3, #0
 800d7ce:	d0ef      	beq.n	800d7b0 <NetworkParams::callbackFunction(char const*)+0x88>
 800d7d0:	e7c0      	b.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7d2:	4620      	mov	r0, r4
 800d7d4:	491d      	ldr	r1, [pc, #116]	; (800d84c <NetworkParams::callbackFunction(char const*)+0x124>)
 800d7d6:	aa02      	add	r2, sp, #8
 800d7d8:	f001 fac5 	bl	800ed66 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d7dc:	b970      	cbnz	r0, 800d7fc <NetworkParams::callbackFunction(char const*)+0xd4>
 800d7de:	9a02      	ldr	r2, [sp, #8]
 800d7e0:	2a00      	cmp	r2, #0
 800d7e2:	d0b7      	beq.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7e4:	ba13      	rev	r3, r2
 800d7e6:	43d9      	mvns	r1, r3
 800d7e8:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d7ec:	d1b2      	bne.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7ee:	4b14      	ldr	r3, [pc, #80]	; (800d840 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d7f0:	609a      	str	r2, [r3, #8]
 800d7f2:	681a      	ldr	r2, [r3, #0]
 800d7f4:	f042 0204 	orr.w	r2, r2, #4
 800d7f8:	601a      	str	r2, [r3, #0]
 800d7fa:	e7ab      	b.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7fc:	4620      	mov	r0, r4
 800d7fe:	4914      	ldr	r1, [pc, #80]	; (800d850 <NetworkParams::callbackFunction(char const*)+0x128>)
 800d800:	aa02      	add	r2, sp, #8
 800d802:	f001 fab0 	bl	800ed66 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d806:	4d0e      	ldr	r5, [pc, #56]	; (800d840 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d808:	b930      	cbnz	r0, 800d818 <NetworkParams::callbackFunction(char const*)+0xf0>
 800d80a:	9b02      	ldr	r3, [sp, #8]
 800d80c:	60eb      	str	r3, [r5, #12]
 800d80e:	682b      	ldr	r3, [r5, #0]
 800d810:	f043 0308 	orr.w	r3, r3, #8
 800d814:	602b      	str	r3, [r5, #0]
 800d816:	e79d      	b.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d818:	233f      	movs	r3, #63	; 0x3f
 800d81a:	4620      	mov	r0, r4
 800d81c:	9303      	str	r3, [sp, #12]
 800d81e:	490d      	ldr	r1, [pc, #52]	; (800d854 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d820:	ab03      	add	r3, sp, #12
 800d822:	f105 0215 	add.w	r2, r5, #21
 800d826:	f001 fa85 	bl	800ed34 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d82a:	2800      	cmp	r0, #0
 800d82c:	d192      	bne.n	800d754 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d82e:	9b03      	ldr	r3, [sp, #12]
 800d830:	442b      	add	r3, r5
 800d832:	7558      	strb	r0, [r3, #21]
 800d834:	682b      	ldr	r3, [r5, #0]
 800d836:	f043 0320 	orr.w	r3, r3, #32
 800d83a:	e7eb      	b.n	800d814 <NetworkParams::callbackFunction(char const*)+0xec>
 800d83c:	080134b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, ip, sp}
 800d840:	20009498 	mulcs	r0, r8, r4
 800d844:	08013494 	stmdaeq	r1, {r2, r4, r7, sl, ip, sp}
 800d848:	08013479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, ip, sp}
 800d84c:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 800d850:	08013484 	stmdaeq	r1, {r2, r7, sl, ip, sp}
 800d854:	080134a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, sp}

0800d858 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d858:	f7ff bf66 	b.w	800d728 <NetworkParams::callbackFunction(char const*)>

0800d85c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d85c:	b530      	push	{r4, r5, lr}
 800d85e:	4614      	mov	r4, r2
 800d860:	461d      	mov	r5, r3
 800d862:	b087      	sub	sp, #28
 800d864:	2900      	cmp	r1, #0
 800d866:	d040      	beq.n	800d8ea <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800d868:	225e      	movs	r2, #94	; 0x5e
 800d86a:	4871      	ldr	r0, [pc, #452]	; (800da30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d86c:	f002 f81f 	bl	800f8ae <memmove>
 800d870:	4622      	mov	r2, r4
 800d872:	462b      	mov	r3, r5
 800d874:	496f      	ldr	r1, [pc, #444]	; (800da34 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d876:	a803      	add	r0, sp, #12
 800d878:	f001 f984 	bl	800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d87c:	4c6c      	ldr	r4, [pc, #432]	; (800da30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d87e:	6823      	ldr	r3, [r4, #0]
 800d880:	0799      	lsls	r1, r3, #30
 800d882:	bf5f      	itttt	pl
 800d884:	4a6c      	ldrpl	r2, [pc, #432]	; (800da38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d886:	6812      	ldrpl	r2, [r2, #0]
 800d888:	6912      	ldrpl	r2, [r2, #16]
 800d88a:	6062      	strpl	r2, [r4, #4]
 800d88c:	075a      	lsls	r2, r3, #29
 800d88e:	bf5f      	itttt	pl
 800d890:	4a69      	ldrpl	r2, [pc, #420]	; (800da38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d892:	6812      	ldrpl	r2, [r2, #0]
 800d894:	6992      	ldrpl	r2, [r2, #24]
 800d896:	60a2      	strpl	r2, [r4, #8]
 800d898:	071d      	lsls	r5, r3, #28
 800d89a:	bf5f      	itttt	pl
 800d89c:	4a66      	ldrpl	r2, [pc, #408]	; (800da38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d89e:	6812      	ldrpl	r2, [r2, #0]
 800d8a0:	6952      	ldrpl	r2, [r2, #20]
 800d8a2:	60e2      	strpl	r2, [r4, #12]
 800d8a4:	0698      	lsls	r0, r3, #26
 800d8a6:	d40c      	bmi.n	800d8c2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800d8a8:	223f      	movs	r2, #63	; 0x3f
 800d8aa:	4b63      	ldr	r3, [pc, #396]	; (800da38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d8ac:	4863      	ldr	r0, [pc, #396]	; (800da3c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d8ae:	681b      	ldr	r3, [r3, #0]
 800d8b0:	331b      	adds	r3, #27
 800d8b2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d8b6:	b9f1      	cbnz	r1, 800d8f6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800d8b8:	f002 f810 	bl	800f8dc <memset>
 800d8bc:	2300      	movs	r3, #0
 800d8be:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d8c2:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d8c6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d8ca:	42a9      	cmp	r1, r5
 800d8cc:	d226      	bcs.n	800d91c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800d8ce:	9803      	ldr	r0, [sp, #12]
 800d8d0:	1a6d      	subs	r5, r5, r1
 800d8d2:	4408      	add	r0, r1
 800d8d4:	6821      	ldr	r1, [r4, #0]
 800d8d6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8da:	07c9      	lsls	r1, r1, #31
 800d8dc:	7d23      	ldrb	r3, [r4, #20]
 800d8de:	d40f      	bmi.n	800d900 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800d8e0:	b97a      	cbnz	r2, 800d902 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d8e2:	9300      	str	r3, [sp, #0]
 800d8e4:	4a56      	ldr	r2, [pc, #344]	; (800da40 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d8e6:	4b57      	ldr	r3, [pc, #348]	; (800da44 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8e8:	e00e      	b.n	800d908 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d8ea:	6800      	ldr	r0, [r0, #0]
 800d8ec:	4950      	ldr	r1, [pc, #320]	; (800da30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d8ee:	6803      	ldr	r3, [r0, #0]
 800d8f0:	68db      	ldr	r3, [r3, #12]
 800d8f2:	4798      	blx	r3
 800d8f4:	e7bc      	b.n	800d870 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d8f6:	3a01      	subs	r2, #1
 800d8f8:	f800 1b01 	strb.w	r1, [r0], #1
 800d8fc:	d1d9      	bne.n	800d8b2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d8fe:	e7dd      	b.n	800d8bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800d900:	b30a      	cbz	r2, 800d946 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800d902:	9300      	str	r3, [sp, #0]
 800d904:	4a50      	ldr	r2, [pc, #320]	; (800da48 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d906:	4b4f      	ldr	r3, [pc, #316]	; (800da44 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d908:	4629      	mov	r1, r5
 800d90a:	f002 fa31 	bl	800fd70 <snprintf>
 800d90e:	4285      	cmp	r5, r0
 800d910:	bfa2      	ittt	ge
 800d912:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d916:	18c0      	addge	r0, r0, r3
 800d918:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d91c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d920:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d924:	42a9      	cmp	r1, r5
 800d926:	d221      	bcs.n	800d96c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800d928:	9803      	ldr	r0, [sp, #12]
 800d92a:	1a6d      	subs	r5, r5, r1
 800d92c:	4408      	add	r0, r1
 800d92e:	6821      	ldr	r1, [r4, #0]
 800d930:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d934:	05c9      	lsls	r1, r1, #23
 800d936:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d93a:	d408      	bmi.n	800d94e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800d93c:	b94a      	cbnz	r2, 800d952 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d93e:	9300      	str	r3, [sp, #0]
 800d940:	4a3f      	ldr	r2, [pc, #252]	; (800da40 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d942:	4b42      	ldr	r3, [pc, #264]	; (800da4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d944:	e008      	b.n	800d958 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d946:	9300      	str	r3, [sp, #0]
 800d948:	4a41      	ldr	r2, [pc, #260]	; (800da50 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d94a:	4b3e      	ldr	r3, [pc, #248]	; (800da44 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d94c:	e7dc      	b.n	800d908 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d94e:	2a00      	cmp	r2, #0
 800d950:	d03e      	beq.n	800d9d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800d952:	9300      	str	r3, [sp, #0]
 800d954:	4a3c      	ldr	r2, [pc, #240]	; (800da48 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d956:	4b3d      	ldr	r3, [pc, #244]	; (800da4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d958:	4629      	mov	r1, r5
 800d95a:	f002 fa09 	bl	800fd70 <snprintf>
 800d95e:	4285      	cmp	r5, r0
 800d960:	bfa2      	ittt	ge
 800d962:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d966:	18c0      	addge	r0, r0, r3
 800d968:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d96c:	4939      	ldr	r1, [pc, #228]	; (800da54 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d96e:	a803      	add	r0, sp, #12
 800d970:	f001 f98e 	bl	800ec90 <PropertiesBuilder::AddComment(char const*)>
 800d974:	6823      	ldr	r3, [r4, #0]
 800d976:	6862      	ldr	r2, [r4, #4]
 800d978:	4937      	ldr	r1, [pc, #220]	; (800da58 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d97a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d97e:	a803      	add	r0, sp, #12
 800d980:	f001 f942 	bl	800ec08 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d984:	6823      	ldr	r3, [r4, #0]
 800d986:	68a2      	ldr	r2, [r4, #8]
 800d988:	4934      	ldr	r1, [pc, #208]	; (800da5c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d98a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d98e:	a803      	add	r0, sp, #12
 800d990:	f001 f93a 	bl	800ec08 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d994:	6823      	ldr	r3, [r4, #0]
 800d996:	4932      	ldr	r1, [pc, #200]	; (800da60 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d998:	68e2      	ldr	r2, [r4, #12]
 800d99a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d99e:	a803      	add	r0, sp, #12
 800d9a0:	f001 f932 	bl	800ec08 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d9a4:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d9a8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d9ac:	42a9      	cmp	r1, r5
 800d9ae:	d221      	bcs.n	800d9f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800d9b0:	6823      	ldr	r3, [r4, #0]
 800d9b2:	9803      	ldr	r0, [sp, #12]
 800d9b4:	f013 0f20 	tst.w	r3, #32
 800d9b8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d9bc:	4b1f      	ldr	r3, [pc, #124]	; (800da3c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d9be:	4408      	add	r0, r1
 800d9c0:	eba5 0501 	sub.w	r5, r5, r1
 800d9c4:	d108      	bne.n	800d9d8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800d9c6:	b942      	cbnz	r2, 800d9da <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800d9c8:	9300      	str	r3, [sp, #0]
 800d9ca:	4a26      	ldr	r2, [pc, #152]	; (800da64 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d9cc:	4b26      	ldr	r3, [pc, #152]	; (800da68 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d9ce:	e007      	b.n	800d9e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d9d0:	9300      	str	r3, [sp, #0]
 800d9d2:	4a1f      	ldr	r2, [pc, #124]	; (800da50 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d9d4:	4b1d      	ldr	r3, [pc, #116]	; (800da4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d9d6:	e7bf      	b.n	800d958 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d9d8:	b32a      	cbz	r2, 800da26 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800d9da:	9300      	str	r3, [sp, #0]
 800d9dc:	4a23      	ldr	r2, [pc, #140]	; (800da6c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d9de:	4b22      	ldr	r3, [pc, #136]	; (800da68 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d9e0:	4629      	mov	r1, r5
 800d9e2:	f002 f9c5 	bl	800fd70 <snprintf>
 800d9e6:	4285      	cmp	r5, r0
 800d9e8:	bfa2      	ittt	ge
 800d9ea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d9ee:	18c0      	addge	r0, r0, r3
 800d9f0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d9f4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d9f8:	b17b      	cbz	r3, 800da1a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800d9fa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9fe:	9b03      	ldr	r3, [sp, #12]
 800da00:	4413      	add	r3, r2
 800da02:	227d      	movs	r2, #125	; 0x7d
 800da04:	f803 2c01 	strb.w	r2, [r3, #-1]
 800da08:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800da0c:	9903      	ldr	r1, [sp, #12]
 800da0e:	54ca      	strb	r2, [r1, r3]
 800da10:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800da14:	3301      	adds	r3, #1
 800da16:	f8ad 3012 	strh.w	r3, [sp, #18]
 800da1a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800da1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800da20:	601a      	str	r2, [r3, #0]
 800da22:	b007      	add	sp, #28
 800da24:	bd30      	pop	{r4, r5, pc}
 800da26:	9300      	str	r3, [sp, #0]
 800da28:	4a11      	ldr	r2, [pc, #68]	; (800da70 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800da2a:	4b0f      	ldr	r3, [pc, #60]	; (800da68 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800da2c:	e7d8      	b.n	800d9e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800da2e:	bf00      	nop
 800da30:	20009498 	mulcs	r0, r8, r4
 800da34:	080134bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, ip, sp}
 800da38:	20009494 	mulcs	r0, r4, r4
 800da3c:	200094ad 	andcs	r9, r0, sp, lsr #9
 800da40:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 800da44:	080134b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, ip, sp}
 800da48:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 800da4c:	08013494 	stmdaeq	r1, {r2, r4, r7, sl, ip, sp}
 800da50:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 800da54:	0801346f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, ip, sp}
 800da58:	08013479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, ip, sp}
 800da5c:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 800da60:	08013484 	stmdaeq	r1, {r2, r7, sl, ip, sp}
 800da64:	08011f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip}
 800da68:	080134a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, sp}
 800da6c:	08011f22 	stmdaeq	r1, {r1, r5, r8, r9, sl, fp, ip}
 800da70:	08011f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, ip}

0800da74 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800da74:	b513      	push	{r0, r1, r4, lr}
 800da76:	6804      	ldr	r4, [r0, #0]
 800da78:	b914      	cbnz	r4, 800da80 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800da7a:	601c      	str	r4, [r3, #0]
 800da7c:	b002      	add	sp, #8
 800da7e:	bd10      	pop	{r4, pc}
 800da80:	9300      	str	r3, [sp, #0]
 800da82:	4613      	mov	r3, r2
 800da84:	460a      	mov	r2, r1
 800da86:	2100      	movs	r1, #0
 800da88:	f7ff fee8 	bl	800d85c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800da8c:	e7f6      	b.n	800da7c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800da8e <NetworkParams::Dump()>:
 800da8e:	4770      	bx	lr

0800da90 <memcpy.isra.0>:
 800da90:	3801      	subs	r0, #1
 800da92:	440a      	add	r2, r1
 800da94:	4291      	cmp	r1, r2
 800da96:	d100      	bne.n	800da9a <memcpy.isra.0+0xa>
 800da98:	4770      	bx	lr
 800da9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800da9e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800daa2:	e7f7      	b.n	800da94 <memcpy.isra.0+0x4>

0800daa4 <arp_announce>:
 800daa4:	4803      	ldr	r0, [pc, #12]	; (800dab4 <arp_announce+0x10>)
 800daa6:	69c3      	ldr	r3, [r0, #28]
 800daa8:	b113      	cbz	r3, 800dab0 <arp_announce+0xc>
 800daaa:	212a      	movs	r1, #42	; 0x2a
 800daac:	f003 b914 	b.w	8010cd8 <emac_eth_send>
 800dab0:	4770      	bx	lr
 800dab2:	bf00      	nop
 800dab4:	200094f8 	strdcs	r9, [r0], -r8

0800dab8 <arp_handle_request>:
 800dab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800daba:	2204      	movs	r2, #4
 800dabc:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800dac0:	4604      	mov	r4, r0
 800dac2:	eb0d 0002 	add.w	r0, sp, r2
 800dac6:	f7ff ffe3 	bl	800da90 <memcpy.isra.0>
 800daca:	4b0d      	ldr	r3, [pc, #52]	; (800db00 <arp_handle_request+0x48>)
 800dacc:	9a01      	ldr	r2, [sp, #4]
 800dace:	69db      	ldr	r3, [r3, #28]
 800dad0:	429a      	cmp	r2, r3
 800dad2:	d113      	bne.n	800dafc <arp_handle_request+0x44>
 800dad4:	2206      	movs	r2, #6
 800dad6:	4d0b      	ldr	r5, [pc, #44]	; (800db04 <arp_handle_request+0x4c>)
 800dad8:	18a1      	adds	r1, r4, r2
 800dada:	4628      	mov	r0, r5
 800dadc:	f7ff ffd8 	bl	800da90 <memcpy.isra.0>
 800dae0:	f104 0116 	add.w	r1, r4, #22
 800dae4:	f105 0020 	add.w	r0, r5, #32
 800dae8:	2206      	movs	r2, #6
 800daea:	f7ff ffd1 	bl	800da90 <memcpy.isra.0>
 800daee:	69e3      	ldr	r3, [r4, #28]
 800daf0:	212a      	movs	r1, #42	; 0x2a
 800daf2:	4628      	mov	r0, r5
 800daf4:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800daf8:	f003 f8ee 	bl	8010cd8 <emac_eth_send>
 800dafc:	b003      	add	sp, #12
 800dafe:	bd30      	pop	{r4, r5, pc}
 800db00:	200094f8 	strdcs	r9, [r0], -r8
 800db04:	20009524 	andcs	r9, r0, r4, lsr #10

0800db08 <arp_handle_reply>:
 800db08:	69c1      	ldr	r1, [r0, #28]
 800db0a:	3016      	adds	r0, #22
 800db0c:	f000 b80a 	b.w	800db24 <arp_cache_update>

0800db10 <arp_send_request>:
 800db10:	4b03      	ldr	r3, [pc, #12]	; (800db20 <arp_send_request+0x10>)
 800db12:	212a      	movs	r1, #42	; 0x2a
 800db14:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800db18:	4618      	mov	r0, r3
 800db1a:	f003 b8dd 	b.w	8010cd8 <emac_eth_send>
 800db1e:	bf00      	nop
 800db20:	20009550 	andcs	r9, r0, r0, asr r5

0800db24 <arp_cache_update>:
 800db24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db26:	4e11      	ldr	r6, [pc, #68]	; (800db6c <arp_cache_update+0x48>)
 800db28:	8833      	ldrh	r3, [r6, #0]
 800db2a:	2b20      	cmp	r3, #32
 800db2c:	d018      	beq.n	800db60 <arp_cache_update+0x3c>
 800db2e:	2400      	movs	r4, #0
 800db30:	220c      	movs	r2, #12
 800db32:	4d0f      	ldr	r5, [pc, #60]	; (800db70 <arp_cache_update+0x4c>)
 800db34:	b2a7      	uxth	r7, r4
 800db36:	42bb      	cmp	r3, r7
 800db38:	d80b      	bhi.n	800db52 <arp_cache_update+0x2e>
 800db3a:	fb02 5203 	mla	r2, r2, r3, r5
 800db3e:	1d84      	adds	r4, r0, #6
 800db40:	3203      	adds	r2, #3
 800db42:	42a0      	cmp	r0, r4
 800db44:	d10d      	bne.n	800db62 <arp_cache_update+0x3e>
 800db46:	220c      	movs	r2, #12
 800db48:	435a      	muls	r2, r3
 800db4a:	3301      	adds	r3, #1
 800db4c:	50a9      	str	r1, [r5, r2]
 800db4e:	8033      	strh	r3, [r6, #0]
 800db50:	e006      	b.n	800db60 <arp_cache_update+0x3c>
 800db52:	3401      	adds	r4, #1
 800db54:	fb02 5704 	mla	r7, r2, r4, r5
 800db58:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800db5c:	428f      	cmp	r7, r1
 800db5e:	d1e9      	bne.n	800db34 <arp_cache_update+0x10>
 800db60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db62:	f810 7b01 	ldrb.w	r7, [r0], #1
 800db66:	f802 7f01 	strb.w	r7, [r2, #1]!
 800db6a:	e7ea      	b.n	800db42 <arp_cache_update+0x1e>
 800db6c:	200096fc 	strdcs	r9, [r0], -ip
 800db70:	2000957c 	andcs	r9, r0, ip, ror r5

0800db74 <arp_cache_lookup>:
 800db74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db78:	2200      	movs	r2, #0
 800db7a:	4606      	mov	r6, r0
 800db7c:	460c      	mov	r4, r1
 800db7e:	200c      	movs	r0, #12
 800db80:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800dc08 <arp_cache_lookup+0x94>
 800db84:	fb00 f302 	mul.w	r3, r0, r2
 800db88:	f853 1008 	ldr.w	r1, [r3, r8]
 800db8c:	42b1      	cmp	r1, r6
 800db8e:	d10d      	bne.n	800dbac <arp_cache_lookup+0x38>
 800db90:	3304      	adds	r3, #4
 800db92:	4443      	add	r3, r8
 800db94:	3c01      	subs	r4, #1
 800db96:	1d9a      	adds	r2, r3, #6
 800db98:	4293      	cmp	r3, r2
 800db9a:	d102      	bne.n	800dba2 <arp_cache_lookup+0x2e>
 800db9c:	4630      	mov	r0, r6
 800db9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dba2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800dba6:	f804 1f01 	strb.w	r1, [r4, #1]!
 800dbaa:	e7f5      	b.n	800db98 <arp_cache_lookup+0x24>
 800dbac:	b111      	cbz	r1, 800dbb4 <arp_cache_lookup+0x40>
 800dbae:	3201      	adds	r2, #1
 800dbb0:	2a20      	cmp	r2, #32
 800dbb2:	d1e7      	bne.n	800db84 <arp_cache_lookup+0x10>
 800dbb4:	2704      	movs	r7, #4
 800dbb6:	f8df a054 	ldr.w	sl, [pc, #84]	; 800dc0c <arp_cache_lookup+0x98>
 800dbba:	f8ba 5000 	ldrh.w	r5, [sl]
 800dbbe:	3f01      	subs	r7, #1
 800dbc0:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800dbc4:	d101      	bne.n	800dbca <arp_cache_lookup+0x56>
 800dbc6:	463e      	mov	r6, r7
 800dbc8:	e7e8      	b.n	800db9c <arp_cache_lookup+0x28>
 800dbca:	4630      	mov	r0, r6
 800dbcc:	f7ff ffa0 	bl	800db10 <arp_send_request>
 800dbd0:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800dbd4:	f1b9 0901 	subs.w	r9, r9, #1
 800dbd8:	f8ba 3000 	ldrh.w	r3, [sl]
 800dbdc:	d011      	beq.n	800dc02 <arp_cache_lookup+0x8e>
 800dbde:	429d      	cmp	r5, r3
 800dbe0:	d00c      	beq.n	800dbfc <arp_cache_lookup+0x88>
 800dbe2:	230c      	movs	r3, #12
 800dbe4:	fb03 8505 	mla	r5, r3, r5, r8
 800dbe8:	3c01      	subs	r4, #1
 800dbea:	1d2b      	adds	r3, r5, #4
 800dbec:	350a      	adds	r5, #10
 800dbee:	42ab      	cmp	r3, r5
 800dbf0:	d0d4      	beq.n	800db9c <arp_cache_lookup+0x28>
 800dbf2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dbf6:	f804 2f01 	strb.w	r2, [r4, #1]!
 800dbfa:	e7f8      	b.n	800dbee <arp_cache_lookup+0x7a>
 800dbfc:	f7f9 fc94 	bl	8007528 <net_handle>
 800dc00:	e7e8      	b.n	800dbd4 <arp_cache_lookup+0x60>
 800dc02:	429d      	cmp	r5, r3
 800dc04:	d0db      	beq.n	800dbbe <arp_cache_lookup+0x4a>
 800dc06:	e7ec      	b.n	800dbe2 <arp_cache_lookup+0x6e>
 800dc08:	2000957c 	andcs	r9, r0, ip, ror r5
 800dc0c:	200096fc 	strdcs	r9, [r0], -ip

0800dc10 <_parse_response>:
 800dc10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc14:	460c      	mov	r4, r1
 800dc16:	4e5b      	ldr	r6, [pc, #364]	; (800dd84 <_parse_response+0x174>)
 800dc18:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800dc1c:	6837      	ldr	r7, [r6, #0]
 800dc1e:	b2c5      	uxtb	r5, r0
 800dc20:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800dc24:	f7f9 fc80 	bl	8007528 <net_handle>
 800dc28:	f44f 7209 	mov.w	r2, #548	; 0x224
 800dc2c:	4628      	mov	r0, r5
 800dc2e:	f8cd 8000 	str.w	r8, [sp]
 800dc32:	ab0a      	add	r3, sp, #40	; 0x28
 800dc34:	a90b      	add	r1, sp, #44	; 0x2c
 800dc36:	f7fe fe27 	bl	800c888 <udp_recv>
 800dc3a:	2800      	cmp	r0, #0
 800dc3c:	d05f      	beq.n	800dcfe <_parse_response+0xee>
 800dc3e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800dc42:	2b43      	cmp	r3, #67	; 0x43
 800dc44:	d15b      	bne.n	800dcfe <_parse_response+0xee>
 800dc46:	aa12      	add	r2, sp, #72	; 0x48
 800dc48:	1e63      	subs	r3, r4, #1
 800dc4a:	1d61      	adds	r1, r4, #5
 800dc4c:	428b      	cmp	r3, r1
 800dc4e:	d150      	bne.n	800dcf2 <_parse_response+0xe2>
 800dc50:	2100      	movs	r1, #0
 800dc52:	ab0b      	add	r3, sp, #44	; 0x2c
 800dc54:	181c      	adds	r4, r3, r0
 800dc56:	4608      	mov	r0, r1
 800dc58:	4b4b      	ldr	r3, [pc, #300]	; (800dd88 <_parse_response+0x178>)
 800dc5a:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800dc5e:	781a      	ldrb	r2, [r3, #0]
 800dc60:	f893 b001 	ldrb.w	fp, [r3, #1]
 800dc64:	f893 c002 	ldrb.w	ip, [r3, #2]
 800dc68:	78dd      	ldrb	r5, [r3, #3]
 800dc6a:	4b48      	ldr	r3, [pc, #288]	; (800dd8c <_parse_response+0x17c>)
 800dc6c:	9207      	str	r2, [sp, #28]
 800dc6e:	781a      	ldrb	r2, [r3, #0]
 800dc70:	789f      	ldrb	r7, [r3, #2]
 800dc72:	78de      	ldrb	r6, [r3, #3]
 800dc74:	9206      	str	r2, [sp, #24]
 800dc76:	785a      	ldrb	r2, [r3, #1]
 800dc78:	4b45      	ldr	r3, [pc, #276]	; (800dd90 <_parse_response+0x180>)
 800dc7a:	9203      	str	r2, [sp, #12]
 800dc7c:	f893 a000 	ldrb.w	sl, [r3]
 800dc80:	f893 9001 	ldrb.w	r9, [r3, #1]
 800dc84:	f893 8002 	ldrb.w	r8, [r3, #2]
 800dc88:	f893 e003 	ldrb.w	lr, [r3, #3]
 800dc8c:	ab47      	add	r3, sp, #284	; 0x11c
 800dc8e:	42a3      	cmp	r3, r4
 800dc90:	d33f      	bcc.n	800dd12 <_parse_response+0x102>
 800dc92:	9b04      	ldr	r3, [sp, #16]
 800dc94:	b143      	cbz	r3, 800dca8 <_parse_response+0x98>
 800dc96:	4b3e      	ldr	r3, [pc, #248]	; (800dd90 <_parse_response+0x180>)
 800dc98:	f883 a000 	strb.w	sl, [r3]
 800dc9c:	f883 9001 	strb.w	r9, [r3, #1]
 800dca0:	f883 8002 	strb.w	r8, [r3, #2]
 800dca4:	f883 e003 	strb.w	lr, [r3, #3]
 800dca8:	9b05      	ldr	r3, [sp, #20]
 800dcaa:	b133      	cbz	r3, 800dcba <_parse_response+0xaa>
 800dcac:	4b37      	ldr	r3, [pc, #220]	; (800dd8c <_parse_response+0x17c>)
 800dcae:	9a06      	ldr	r2, [sp, #24]
 800dcb0:	709f      	strb	r7, [r3, #2]
 800dcb2:	701a      	strb	r2, [r3, #0]
 800dcb4:	9a03      	ldr	r2, [sp, #12]
 800dcb6:	70de      	strb	r6, [r3, #3]
 800dcb8:	705a      	strb	r2, [r3, #1]
 800dcba:	b139      	cbz	r1, 800dccc <_parse_response+0xbc>
 800dcbc:	4b32      	ldr	r3, [pc, #200]	; (800dd88 <_parse_response+0x178>)
 800dcbe:	9a07      	ldr	r2, [sp, #28]
 800dcc0:	f883 b001 	strb.w	fp, [r3, #1]
 800dcc4:	701a      	strb	r2, [r3, #0]
 800dcc6:	f883 c002 	strb.w	ip, [r3, #2]
 800dcca:	70dd      	strb	r5, [r3, #3]
 800dccc:	2802      	cmp	r0, #2
 800dcce:	d10c      	bne.n	800dcea <_parse_response+0xda>
 800dcd0:	4b30      	ldr	r3, [pc, #192]	; (800dd94 <_parse_response+0x184>)
 800dcd2:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800dcd6:	701a      	strb	r2, [r3, #0]
 800dcd8:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800dcdc:	705a      	strb	r2, [r3, #1]
 800dcde:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800dce2:	709a      	strb	r2, [r3, #2]
 800dce4:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800dce8:	70da      	strb	r2, [r3, #3]
 800dcea:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800dcee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcf2:	f812 cb01 	ldrb.w	ip, [r2], #1
 800dcf6:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800dcfa:	45e6      	cmp	lr, ip
 800dcfc:	d0a6      	beq.n	800dc4c <_parse_response+0x3c>
 800dcfe:	6833      	ldr	r3, [r6, #0]
 800dd00:	1bdb      	subs	r3, r3, r7
 800dd02:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800dd06:	d38b      	bcc.n	800dc20 <_parse_response+0x10>
 800dd08:	2800      	cmp	r0, #0
 800dd0a:	d1a1      	bne.n	800dc50 <_parse_response+0x40>
 800dd0c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dd10:	e7eb      	b.n	800dcea <_parse_response+0xda>
 800dd12:	781a      	ldrb	r2, [r3, #0]
 800dd14:	2a35      	cmp	r2, #53	; 0x35
 800dd16:	d011      	beq.n	800dd3c <_parse_response+0x12c>
 800dd18:	d808      	bhi.n	800dd2c <_parse_response+0x11c>
 800dd1a:	2a01      	cmp	r2, #1
 800dd1c:	d011      	beq.n	800dd42 <_parse_response+0x132>
 800dd1e:	2a03      	cmp	r2, #3
 800dd20:	d01a      	beq.n	800dd58 <_parse_response+0x148>
 800dd22:	b14a      	cbz	r2, 800dd38 <_parse_response+0x128>
 800dd24:	1c9a      	adds	r2, r3, #2
 800dd26:	785b      	ldrb	r3, [r3, #1]
 800dd28:	4413      	add	r3, r2
 800dd2a:	e7b0      	b.n	800dc8e <_parse_response+0x7e>
 800dd2c:	2a36      	cmp	r2, #54	; 0x36
 800dd2e:	d01f      	beq.n	800dd70 <_parse_response+0x160>
 800dd30:	2aff      	cmp	r2, #255	; 0xff
 800dd32:	d1f7      	bne.n	800dd24 <_parse_response+0x114>
 800dd34:	4623      	mov	r3, r4
 800dd36:	e7aa      	b.n	800dc8e <_parse_response+0x7e>
 800dd38:	3301      	adds	r3, #1
 800dd3a:	e7a8      	b.n	800dc8e <_parse_response+0x7e>
 800dd3c:	7898      	ldrb	r0, [r3, #2]
 800dd3e:	3303      	adds	r3, #3
 800dd40:	e7a5      	b.n	800dc8e <_parse_response+0x7e>
 800dd42:	f893 a002 	ldrb.w	sl, [r3, #2]
 800dd46:	f893 9003 	ldrb.w	r9, [r3, #3]
 800dd4a:	f893 8004 	ldrb.w	r8, [r3, #4]
 800dd4e:	f893 e005 	ldrb.w	lr, [r3, #5]
 800dd52:	9204      	str	r2, [sp, #16]
 800dd54:	3306      	adds	r3, #6
 800dd56:	e79a      	b.n	800dc8e <_parse_response+0x7e>
 800dd58:	789a      	ldrb	r2, [r3, #2]
 800dd5a:	791f      	ldrb	r7, [r3, #4]
 800dd5c:	9206      	str	r2, [sp, #24]
 800dd5e:	78da      	ldrb	r2, [r3, #3]
 800dd60:	795e      	ldrb	r6, [r3, #5]
 800dd62:	9203      	str	r2, [sp, #12]
 800dd64:	785a      	ldrb	r2, [r3, #1]
 800dd66:	4413      	add	r3, r2
 800dd68:	2201      	movs	r2, #1
 800dd6a:	3302      	adds	r3, #2
 800dd6c:	9205      	str	r2, [sp, #20]
 800dd6e:	e78e      	b.n	800dc8e <_parse_response+0x7e>
 800dd70:	789a      	ldrb	r2, [r3, #2]
 800dd72:	f893 b003 	ldrb.w	fp, [r3, #3]
 800dd76:	f893 c004 	ldrb.w	ip, [r3, #4]
 800dd7a:	795d      	ldrb	r5, [r3, #5]
 800dd7c:	2101      	movs	r1, #1
 800dd7e:	9207      	str	r2, [sp, #28]
 800dd80:	3306      	adds	r3, #6
 800dd82:	e784      	b.n	800dc8e <_parse_response+0x7e>
 800dd84:	20009bd4 	ldrdcs	r9, [r0], -r4
 800dd88:	20009930 	andcs	r9, r0, r0, lsr r9
 800dd8c:	20009700 	andcs	r9, r0, r0, lsl #14
 800dd90:	20009708 	andcs	r9, r0, r8, lsl #14
 800dd94:	20009704 	andcs	r9, r0, r4, lsl #14

0800dd98 <memcpy.isra.0>:
 800dd98:	3801      	subs	r0, #1
 800dd9a:	440a      	add	r2, r1
 800dd9c:	4291      	cmp	r1, r2
 800dd9e:	d100      	bne.n	800dda2 <memcpy.isra.0+0xa>
 800dda0:	4770      	bx	lr
 800dda2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dda6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ddaa:	e7f7      	b.n	800dd9c <memcpy.isra.0+0x4>

0800ddac <dhcp_client>:
 800ddac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddb0:	b087      	sub	sp, #28
 800ddb2:	9203      	str	r2, [sp, #12]
 800ddb4:	4a77      	ldr	r2, [pc, #476]	; (800df94 <dhcp_client+0x1e8>)
 800ddb6:	460f      	mov	r7, r1
 800ddb8:	4605      	mov	r5, r0
 800ddba:	f44f 7309 	mov.w	r3, #548	; 0x224
 800ddbe:	4614      	mov	r4, r2
 800ddc0:	2100      	movs	r1, #0
 800ddc2:	3b01      	subs	r3, #1
 800ddc4:	f802 1b01 	strb.w	r1, [r2], #1
 800ddc8:	d1fb      	bne.n	800ddc2 <dhcp_client+0x16>
 800ddca:	f240 1301 	movw	r3, #257	; 0x101
 800ddce:	2206      	movs	r2, #6
 800ddd0:	4629      	mov	r1, r5
 800ddd2:	4871      	ldr	r0, [pc, #452]	; (800df98 <dhcp_client+0x1ec>)
 800ddd4:	8023      	strh	r3, [r4, #0]
 800ddd6:	70a2      	strb	r2, [r4, #2]
 800ddd8:	f7ff ffde 	bl	800dd98 <memcpy.isra.0>
 800dddc:	4b6f      	ldr	r3, [pc, #444]	; (800df9c <dhcp_client+0x1f0>)
 800ddde:	2044      	movs	r0, #68	; 0x44
 800dde0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dde4:	f240 1335 	movw	r3, #309	; 0x135
 800dde8:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800ddec:	f7fe fd12 	bl	800c814 <udp_bind>
 800ddf0:	1e06      	subs	r6, r0, #0
 800ddf2:	f2c0 80c9 	blt.w	800df88 <dhcp_client+0x1dc>
 800ddf6:	f04f 0915 	mov.w	r9, #21
 800ddfa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800df94 <dhcp_client+0x1e8>
 800ddfe:	f1b9 0901 	subs.w	r9, r9, #1
 800de02:	d11f      	bne.n	800de44 <dhcp_client+0x98>
 800de04:	464c      	mov	r4, r9
 800de06:	2044      	movs	r0, #68	; 0x44
 800de08:	f7fe fd1e 	bl	800c848 <udp_unbind>
 800de0c:	2c00      	cmp	r4, #0
 800de0e:	f000 80be 	beq.w	800df8e <dhcp_client+0x1e2>
 800de12:	2204      	movs	r2, #4
 800de14:	4962      	ldr	r1, [pc, #392]	; (800dfa0 <dhcp_client+0x1f4>)
 800de16:	a805      	add	r0, sp, #20
 800de18:	f7ff ffbe 	bl	800dd98 <memcpy.isra.0>
 800de1c:	9b05      	ldr	r3, [sp, #20]
 800de1e:	2204      	movs	r2, #4
 800de20:	4960      	ldr	r1, [pc, #384]	; (800dfa4 <dhcp_client+0x1f8>)
 800de22:	603b      	str	r3, [r7, #0]
 800de24:	a805      	add	r0, sp, #20
 800de26:	f7ff ffb7 	bl	800dd98 <memcpy.isra.0>
 800de2a:	9b05      	ldr	r3, [sp, #20]
 800de2c:	a805      	add	r0, sp, #20
 800de2e:	60bb      	str	r3, [r7, #8]
 800de30:	2204      	movs	r2, #4
 800de32:	495d      	ldr	r1, [pc, #372]	; (800dfa8 <dhcp_client+0x1fc>)
 800de34:	f7ff ffb0 	bl	800dd98 <memcpy.isra.0>
 800de38:	2000      	movs	r0, #0
 800de3a:	9b05      	ldr	r3, [sp, #20]
 800de3c:	607b      	str	r3, [r7, #4]
 800de3e:	b007      	add	sp, #28
 800de40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de44:	f643 5301 	movw	r3, #15617	; 0x3d01
 800de48:	f240 1807 	movw	r8, #263	; 0x107
 800de4c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800de50:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800de54:	782b      	ldrb	r3, [r5, #0]
 800de56:	4a55      	ldr	r2, [pc, #340]	; (800dfac <dhcp_client+0x200>)
 800de58:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800de5c:	786b      	ldrb	r3, [r5, #1]
 800de5e:	fa5f fb86 	uxtb.w	fp, r6
 800de62:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800de66:	78ab      	ldrb	r3, [r5, #2]
 800de68:	4651      	mov	r1, sl
 800de6a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800de6e:	78eb      	ldrb	r3, [r5, #3]
 800de70:	4658      	mov	r0, fp
 800de72:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800de76:	792b      	ldrb	r3, [r5, #4]
 800de78:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800de7c:	796b      	ldrb	r3, [r5, #5]
 800de7e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800de82:	4b4b      	ldr	r3, [pc, #300]	; (800dfb0 <dhcp_client+0x204>)
 800de84:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800de88:	23ff      	movs	r3, #255	; 0xff
 800de8a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800de8e:	2343      	movs	r3, #67	; 0x43
 800de90:	f240 1205 	movw	r2, #261	; 0x105
 800de94:	9300      	str	r3, [sp, #0]
 800de96:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800de9a:	f7fe fd51 	bl	800c940 <udp_send>
 800de9e:	4629      	mov	r1, r5
 800dea0:	4630      	mov	r0, r6
 800dea2:	f7ff feb5 	bl	800dc10 <_parse_response>
 800dea6:	2802      	cmp	r0, #2
 800dea8:	d1a9      	bne.n	800ddfe <dhcp_client+0x52>
 800deaa:	f643 5303 	movw	r3, #15619	; 0x3d03
 800deae:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800deb2:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800deb6:	782b      	ldrb	r3, [r5, #0]
 800deb8:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800dfb4 <dhcp_client+0x208>
 800debc:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dec0:	786b      	ldrb	r3, [r5, #1]
 800dec2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dec6:	78ab      	ldrb	r3, [r5, #2]
 800dec8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800decc:	78eb      	ldrb	r3, [r5, #3]
 800dece:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800ded2:	792b      	ldrb	r3, [r5, #4]
 800ded4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800ded8:	796b      	ldrb	r3, [r5, #5]
 800deda:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dede:	f240 4332 	movw	r3, #1074	; 0x432
 800dee2:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800dee6:	4b2e      	ldr	r3, [pc, #184]	; (800dfa0 <dhcp_client+0x1f4>)
 800dee8:	881a      	ldrh	r2, [r3, #0]
 800deea:	885b      	ldrh	r3, [r3, #2]
 800deec:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800def0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800def4:	f240 4336 	movw	r3, #1078	; 0x436
 800def8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800defc:	4b2e      	ldr	r3, [pc, #184]	; (800dfb8 <dhcp_client+0x20c>)
 800defe:	221e      	movs	r2, #30
 800df00:	681b      	ldr	r3, [r3, #0]
 800df02:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800df06:	230c      	movs	r3, #12
 800df08:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800df0c:	9b03      	ldr	r3, [sp, #12]
 800df0e:	1e58      	subs	r0, r3, #1
 800df10:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800df14:	f1a2 0e1e 	sub.w	lr, r2, #30
 800df18:	1c51      	adds	r1, r2, #1
 800df1a:	bb8b      	cbnz	r3, 800df80 <dhcp_client+0x1d4>
 800df1c:	2037      	movs	r0, #55	; 0x37
 800df1e:	18a3      	adds	r3, r4, r2
 800df20:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800df24:	2006      	movs	r0, #6
 800df26:	4421      	add	r1, r4
 800df28:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800df2c:	2103      	movs	r1, #3
 800df2e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800df32:	210f      	movs	r1, #15
 800df34:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800df38:	213a      	movs	r1, #58	; 0x3a
 800df3a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800df3e:	213b      	movs	r1, #59	; 0x3b
 800df40:	f04f 0801 	mov.w	r8, #1
 800df44:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800df48:	21ff      	movs	r1, #255	; 0xff
 800df4a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800df4e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800df52:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800df56:	2343      	movs	r3, #67	; 0x43
 800df58:	32f5      	adds	r2, #245	; 0xf5
 800df5a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800df5e:	4651      	mov	r1, sl
 800df60:	9300      	str	r3, [sp, #0]
 800df62:	b292      	uxth	r2, r2
 800df64:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800df68:	4658      	mov	r0, fp
 800df6a:	f7fe fce9 	bl	800c940 <udp_send>
 800df6e:	4629      	mov	r1, r5
 800df70:	4630      	mov	r0, r6
 800df72:	f7ff fe4d 	bl	800dc10 <_parse_response>
 800df76:	2805      	cmp	r0, #5
 800df78:	f47f af41 	bne.w	800ddfe <dhcp_client+0x52>
 800df7c:	4644      	mov	r4, r8
 800df7e:	e742      	b.n	800de06 <dhcp_client+0x5a>
 800df80:	460a      	mov	r2, r1
 800df82:	f80c 3b01 	strb.w	r3, [ip], #1
 800df86:	e7c3      	b.n	800df10 <dhcp_client+0x164>
 800df88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800df8c:	e757      	b.n	800de3e <dhcp_client+0x92>
 800df8e:	f06f 0001 	mvn.w	r0, #1
 800df92:	e754      	b.n	800de3e <dhcp_client+0x92>
 800df94:	2000970c 	andcs	r9, r0, ip, lsl #14
 800df98:	20009728 	andcs	r9, r0, r8, lsr #14
 800df9c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800dfa0:	20009704 	andcs	r9, r0, r4, lsl #14
 800dfa4:	20009700 	andcs	r9, r0, r0, lsl #14
 800dfa8:	20009708 	andcs	r9, r0, r8, lsl #14
 800dfac:	03010637 	movweq	r0, #5687	; 0x1637
 800dfb0:	3b3a0f06 	blcc	8e91bd0 <__exidx_end+0xe7e050>
 800dfb4:	20009816 	andcs	r9, r0, r6, lsl r8
 800dfb8:	20009930 	andcs	r9, r0, r0, lsr r9

0800dfbc <dhcp_client_release>:
 800dfbc:	b507      	push	{r0, r1, r2, lr}
 800dfbe:	2044      	movs	r0, #68	; 0x44
 800dfc0:	f7fe fc28 	bl	800c814 <udp_bind>
 800dfc4:	f243 6307 	movw	r3, #13831	; 0x3607
 800dfc8:	4911      	ldr	r1, [pc, #68]	; (800e010 <dhcp_client_release+0x54>)
 800dfca:	b2c0      	uxtb	r0, r0
 800dfcc:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800dfd0:	2304      	movs	r3, #4
 800dfd2:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800dfd6:	4b0f      	ldr	r3, [pc, #60]	; (800e014 <dhcp_client_release+0x58>)
 800dfd8:	781a      	ldrb	r2, [r3, #0]
 800dfda:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800dfde:	785a      	ldrb	r2, [r3, #1]
 800dfe0:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800dfe4:	789a      	ldrb	r2, [r3, #2]
 800dfe6:	78db      	ldrb	r3, [r3, #3]
 800dfe8:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800dfec:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800dff0:	23ff      	movs	r3, #255	; 0xff
 800dff2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800dff6:	2343      	movs	r3, #67	; 0x43
 800dff8:	22fa      	movs	r2, #250	; 0xfa
 800dffa:	9300      	str	r3, [sp, #0]
 800dffc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e000:	f7fe fc9e 	bl	800c940 <udp_send>
 800e004:	2044      	movs	r0, #68	; 0x44
 800e006:	b003      	add	sp, #12
 800e008:	f85d eb04 	ldr.w	lr, [sp], #4
 800e00c:	f7fe bc1c 	b.w	800c848 <udp_unbind>
 800e010:	2000970c 	andcs	r9, r0, ip, lsl #14
 800e014:	20009930 	andcs	r9, r0, r0, lsr r9

0800e018 <memcpy.isra.0>:
 800e018:	3801      	subs	r0, #1
 800e01a:	440a      	add	r2, r1
 800e01c:	4291      	cmp	r1, r2
 800e01e:	d100      	bne.n	800e022 <memcpy.isra.0+0xa>
 800e020:	4770      	bx	lr
 800e022:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e026:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e02a:	e7f7      	b.n	800e01c <memcpy.isra.0+0x4>

0800e02c <_send_report>:
 800e02c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e02e:	491c      	ldr	r1, [pc, #112]	; (800e0a0 <_send_report+0x74>)
 800e030:	4c1c      	ldr	r4, [pc, #112]	; (800e0a4 <_send_report+0x78>)
 800e032:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800e036:	9001      	str	r0, [sp, #4]
 800e038:	70cb      	strb	r3, [r1, #3]
 800e03a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800e03e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800e042:	710b      	strb	r3, [r1, #4]
 800e044:	7148      	strb	r0, [r1, #5]
 800e046:	2206      	movs	r2, #6
 800e048:	4620      	mov	r0, r4
 800e04a:	f7ff ffe5 	bl	800e018 <memcpy.isra.0>
 800e04e:	2204      	movs	r2, #4
 800e050:	2700      	movs	r7, #0
 800e052:	4d15      	ldr	r5, [pc, #84]	; (800e0a8 <_send_report+0x7c>)
 800e054:	eb0d 0102 	add.w	r1, sp, r2
 800e058:	882b      	ldrh	r3, [r5, #0]
 800e05a:	f104 001e 	add.w	r0, r4, #30
 800e05e:	f104 060e 	add.w	r6, r4, #14
 800e062:	8263      	strh	r3, [r4, #18]
 800e064:	f7ff ffd8 	bl	800e018 <memcpy.isra.0>
 800e068:	2118      	movs	r1, #24
 800e06a:	4630      	mov	r0, r6
 800e06c:	8327      	strh	r7, [r4, #24]
 800e06e:	f000 f8c6 	bl	800e1fe <net_chksum>
 800e072:	2204      	movs	r2, #4
 800e074:	8320      	strh	r0, [r4, #24]
 800e076:	eb0d 0102 	add.w	r1, sp, r2
 800e07a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e07e:	f7ff ffcb 	bl	800e018 <memcpy.isra.0>
 800e082:	2120      	movs	r1, #32
 800e084:	4630      	mov	r0, r6
 800e086:	8527      	strh	r7, [r4, #40]	; 0x28
 800e088:	f000 f8b9 	bl	800e1fe <net_chksum>
 800e08c:	212e      	movs	r1, #46	; 0x2e
 800e08e:	8520      	strh	r0, [r4, #40]	; 0x28
 800e090:	4620      	mov	r0, r4
 800e092:	f002 fe21 	bl	8010cd8 <emac_eth_send>
 800e096:	882b      	ldrh	r3, [r5, #0]
 800e098:	3301      	adds	r3, #1
 800e09a:	802b      	strh	r3, [r5, #0]
 800e09c:	b003      	add	sp, #12
 800e09e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0a0:	20009a8c 	andcs	r9, r0, ip, lsl #21
 800e0a4:	20009a94 	mulcs	r0, r4, sl
 800e0a8:	20009a54 	andcs	r9, r0, r4, asr sl

0800e0ac <igmp_set_ip>:
 800e0ac:	b507      	push	{r0, r1, r2, lr}
 800e0ae:	2204      	movs	r2, #4
 800e0b0:	6803      	ldr	r3, [r0, #0]
 800e0b2:	eb0d 0102 	add.w	r1, sp, r2
 800e0b6:	4806      	ldr	r0, [pc, #24]	; (800e0d0 <igmp_set_ip+0x24>)
 800e0b8:	9301      	str	r3, [sp, #4]
 800e0ba:	f7ff ffad 	bl	800e018 <memcpy.isra.0>
 800e0be:	2204      	movs	r2, #4
 800e0c0:	4804      	ldr	r0, [pc, #16]	; (800e0d4 <igmp_set_ip+0x28>)
 800e0c2:	eb0d 0102 	add.w	r1, sp, r2
 800e0c6:	f7ff ffa7 	bl	800e018 <memcpy.isra.0>
 800e0ca:	b003      	add	sp, #12
 800e0cc:	f85d fb04 	ldr.w	pc, [sp], #4
 800e0d0:	20009aae 	andcs	r9, r0, lr, lsr #21
 800e0d4:	20009a76 	andcs	r9, r0, r6, ror sl

0800e0d8 <igmp_timer>:
 800e0d8:	b570      	push	{r4, r5, r6, lr}
 800e0da:	2500      	movs	r5, #0
 800e0dc:	2602      	movs	r6, #2
 800e0de:	4c0a      	ldr	r4, [pc, #40]	; (800e108 <igmp_timer+0x30>)
 800e0e0:	7963      	ldrb	r3, [r4, #5]
 800e0e2:	2b01      	cmp	r3, #1
 800e0e4:	d109      	bne.n	800e0fa <igmp_timer+0x22>
 800e0e6:	7923      	ldrb	r3, [r4, #4]
 800e0e8:	b13b      	cbz	r3, 800e0fa <igmp_timer+0x22>
 800e0ea:	3b01      	subs	r3, #1
 800e0ec:	b2db      	uxtb	r3, r3
 800e0ee:	7123      	strb	r3, [r4, #4]
 800e0f0:	b91b      	cbnz	r3, 800e0fa <igmp_timer+0x22>
 800e0f2:	6820      	ldr	r0, [r4, #0]
 800e0f4:	f7ff ff9a 	bl	800e02c <_send_report>
 800e0f8:	7166      	strb	r6, [r4, #5]
 800e0fa:	3501      	adds	r5, #1
 800e0fc:	2d24      	cmp	r5, #36	; 0x24
 800e0fe:	f104 0408 	add.w	r4, r4, #8
 800e102:	d1ed      	bne.n	800e0e0 <igmp_timer+0x8>
 800e104:	bd70      	pop	{r4, r5, r6, pc}
 800e106:	bf00      	nop
 800e108:	20009934 	andcs	r9, r0, r4, lsr r9

0800e10c <igmp_join>:
 800e10c:	b538      	push	{r3, r4, r5, lr}
 800e10e:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800e112:	2be0      	cmp	r3, #224	; 0xe0
 800e114:	d11b      	bne.n	800e14e <igmp_join+0x42>
 800e116:	4911      	ldr	r1, [pc, #68]	; (800e15c <igmp_join+0x50>)
 800e118:	680c      	ldr	r4, [r1, #0]
 800e11a:	2c24      	cmp	r4, #36	; 0x24
 800e11c:	d01a      	beq.n	800e154 <igmp_join+0x48>
 800e11e:	2300      	movs	r3, #0
 800e120:	4a0f      	ldr	r2, [pc, #60]	; (800e160 <igmp_join+0x54>)
 800e122:	429c      	cmp	r4, r3
 800e124:	dc0d      	bgt.n	800e142 <igmp_join+0x36>
 800e126:	f44f 7381 	mov.w	r3, #258	; 0x102
 800e12a:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800e12e:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800e132:	8093      	strh	r3, [r2, #4]
 800e134:	1c63      	adds	r3, r4, #1
 800e136:	600b      	str	r3, [r1, #0]
 800e138:	f7ff ff78 	bl	800e02c <_send_report>
 800e13c:	4623      	mov	r3, r4
 800e13e:	4618      	mov	r0, r3
 800e140:	bd38      	pop	{r3, r4, r5, pc}
 800e142:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e146:	4285      	cmp	r5, r0
 800e148:	d0f9      	beq.n	800e13e <igmp_join+0x32>
 800e14a:	3301      	adds	r3, #1
 800e14c:	e7e9      	b.n	800e122 <igmp_join+0x16>
 800e14e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e152:	e7f4      	b.n	800e13e <igmp_join+0x32>
 800e154:	f06f 0301 	mvn.w	r3, #1
 800e158:	e7f1      	b.n	800e13e <igmp_join+0x32>
 800e15a:	bf00      	nop
 800e15c:	20009a58 	andcs	r9, r0, r8, asr sl
 800e160:	20009934 	andcs	r9, r0, r4, lsr r9

0800e164 <igmp_leave>:
 800e164:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e168:	2600      	movs	r6, #0
 800e16a:	4f1c      	ldr	r7, [pc, #112]	; (800e1dc <igmp_leave+0x78>)
 800e16c:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800e170:	4283      	cmp	r3, r0
 800e172:	d007      	beq.n	800e184 <igmp_leave+0x20>
 800e174:	3601      	adds	r6, #1
 800e176:	2e24      	cmp	r6, #36	; 0x24
 800e178:	d1f8      	bne.n	800e16c <igmp_leave+0x8>
 800e17a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e17e:	b002      	add	sp, #8
 800e180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e184:	2400      	movs	r4, #0
 800e186:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800e1e0 <igmp_leave+0x7c>
 800e18a:	4d16      	ldr	r5, [pc, #88]	; (800e1e4 <igmp_leave+0x80>)
 800e18c:	f8b8 3000 	ldrh.w	r3, [r8]
 800e190:	2118      	movs	r1, #24
 800e192:	9001      	str	r0, [sp, #4]
 800e194:	4814      	ldr	r0, [pc, #80]	; (800e1e8 <igmp_leave+0x84>)
 800e196:	826b      	strh	r3, [r5, #18]
 800e198:	832c      	strh	r4, [r5, #24]
 800e19a:	f000 f830 	bl	800e1fe <net_chksum>
 800e19e:	2204      	movs	r2, #4
 800e1a0:	8328      	strh	r0, [r5, #24]
 800e1a2:	eb0d 0102 	add.w	r1, sp, r2
 800e1a6:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800e1aa:	f7ff ff35 	bl	800e018 <memcpy.isra.0>
 800e1ae:	2120      	movs	r1, #32
 800e1b0:	f105 000e 	add.w	r0, r5, #14
 800e1b4:	852c      	strh	r4, [r5, #40]	; 0x28
 800e1b6:	f000 f822 	bl	800e1fe <net_chksum>
 800e1ba:	212e      	movs	r1, #46	; 0x2e
 800e1bc:	8528      	strh	r0, [r5, #40]	; 0x28
 800e1be:	4628      	mov	r0, r5
 800e1c0:	f002 fd8a 	bl	8010cd8 <emac_eth_send>
 800e1c4:	f8b8 3000 	ldrh.w	r3, [r8]
 800e1c8:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800e1cc:	3301      	adds	r3, #1
 800e1ce:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800e1d2:	4620      	mov	r0, r4
 800e1d4:	f8a8 3000 	strh.w	r3, [r8]
 800e1d8:	80b4      	strh	r4, [r6, #4]
 800e1da:	e7d0      	b.n	800e17e <igmp_leave+0x1a>
 800e1dc:	20009934 	andcs	r9, r0, r4, lsr r9
 800e1e0:	20009a54 	andcs	r9, r0, r4, asr sl
 800e1e4:	20009a5c 	andcs	r9, r0, ip, asr sl
 800e1e8:	20009aa2 	andcs	r9, r0, r2, lsr #21

0800e1ec <ip_set_ip>:
 800e1ec:	b510      	push	{r4, lr}
 800e1ee:	4604      	mov	r4, r0
 800e1f0:	f7fe faf0 	bl	800c7d4 <udp_set_ip>
 800e1f4:	4620      	mov	r0, r4
 800e1f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1fa:	f7ff bf57 	b.w	800e0ac <igmp_set_ip>

0800e1fe <net_chksum>:
 800e1fe:	2300      	movs	r3, #0
 800e200:	f021 0201 	bic.w	r2, r1, #1
 800e204:	b530      	push	{r4, r5, lr}
 800e206:	4402      	add	r2, r0
 800e208:	084c      	lsrs	r4, r1, #1
 800e20a:	4290      	cmp	r0, r2
 800e20c:	d10e      	bne.n	800e22c <net_chksum+0x2e>
 800e20e:	f06f 0201 	mvn.w	r2, #1
 800e212:	fb02 1104 	mla	r1, r2, r4, r1
 800e216:	b121      	cbz	r1, 800e222 <net_chksum+0x24>
 800e218:	7802      	ldrb	r2, [r0, #0]
 800e21a:	0212      	lsls	r2, r2, #8
 800e21c:	ba52      	rev16	r2, r2
 800e21e:	b292      	uxth	r2, r2
 800e220:	4413      	add	r3, r2
 800e222:	0c1a      	lsrs	r2, r3, #16
 800e224:	d106      	bne.n	800e234 <net_chksum+0x36>
 800e226:	43d8      	mvns	r0, r3
 800e228:	b280      	uxth	r0, r0
 800e22a:	bd30      	pop	{r4, r5, pc}
 800e22c:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e230:	442b      	add	r3, r5
 800e232:	e7ea      	b.n	800e20a <net_chksum+0xc>
 800e234:	b29b      	uxth	r3, r3
 800e236:	e7f3      	b.n	800e220 <net_chksum+0x22>

0800e238 <memcpy.isra.0>:
 800e238:	3801      	subs	r0, #1
 800e23a:	440a      	add	r2, r1
 800e23c:	4291      	cmp	r1, r2
 800e23e:	d100      	bne.n	800e242 <memcpy.isra.0+0xa>
 800e240:	4770      	bx	lr
 800e242:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e246:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e24a:	e7f7      	b.n	800e23c <memcpy.isra.0+0x4>

0800e24c <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800e24c:	b430      	push	{r4, r5}
 800e24e:	b168      	cbz	r0, 800e26c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800e250:	2300      	movs	r3, #0
 800e252:	7905      	ldrb	r5, [r0, #4]
 800e254:	5cd4      	ldrb	r4, [r2, r3]
 800e256:	b11c      	cbz	r4, 800e260 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800e258:	1c5c      	adds	r4, r3, #1
 800e25a:	429d      	cmp	r5, r3
 800e25c:	4623      	mov	r3, r4
 800e25e:	dcf9      	bgt.n	800e254 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800e260:	6804      	ldr	r4, [r0, #0]
 800e262:	b2db      	uxtb	r3, r3
 800e264:	69e4      	ldr	r4, [r4, #28]
 800e266:	46a4      	mov	ip, r4
 800e268:	bc30      	pop	{r4, r5}
 800e26a:	4760      	bx	ip
 800e26c:	bc30      	pop	{r4, r5}
 800e26e:	4770      	bx	lr

0800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800e270:	b110      	cbz	r0, 800e278 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800e272:	6803      	ldr	r3, [r0, #0]
 800e274:	691b      	ldr	r3, [r3, #16]
 800e276:	4718      	bx	r3
 800e278:	4770      	bx	lr

0800e27a <Display::Printf(unsigned char, char const*, ...)>:
 800e27a:	b40c      	push	{r2, r3}
 800e27c:	b570      	push	{r4, r5, r6, lr}
 800e27e:	6984      	ldr	r4, [r0, #24]
 800e280:	4605      	mov	r5, r0
 800e282:	460e      	mov	r6, r1
 800e284:	b08a      	sub	sp, #40	; 0x28
 800e286:	b174      	cbz	r4, 800e2a6 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800e288:	ab0f      	add	r3, sp, #60	; 0x3c
 800e28a:	2120      	movs	r1, #32
 800e28c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e28e:	a802      	add	r0, sp, #8
 800e290:	9301      	str	r3, [sp, #4]
 800e292:	f001 fd85 	bl	800fda0 <vsnprintf>
 800e296:	4604      	mov	r4, r0
 800e298:	69a8      	ldr	r0, [r5, #24]
 800e29a:	4631      	mov	r1, r6
 800e29c:	6803      	ldr	r3, [r0, #0]
 800e29e:	aa02      	add	r2, sp, #8
 800e2a0:	69dd      	ldr	r5, [r3, #28]
 800e2a2:	b2a3      	uxth	r3, r4
 800e2a4:	47a8      	blx	r5
 800e2a6:	4620      	mov	r0, r4
 800e2a8:	b00a      	add	sp, #40	; 0x28
 800e2aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2ae:	b002      	add	sp, #8
 800e2b0:	4770      	bx	lr

0800e2b2 <Display::Status(Display7SegmentMessage)>:
 800e2b2:	7c43      	ldrb	r3, [r0, #17]
 800e2b4:	b513      	push	{r0, r1, r4, lr}
 800e2b6:	4604      	mov	r4, r0
 800e2b8:	b19b      	cbz	r3, 800e2e2 <Display::Status(Display7SegmentMessage)+0x30>
 800e2ba:	43c9      	mvns	r1, r1
 800e2bc:	2312      	movs	r3, #18
 800e2be:	7a00      	ldrb	r0, [r0, #8]
 800e2c0:	f88d 3004 	strb.w	r3, [sp, #4]
 800e2c4:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800e2c8:	f88d 1006 	strb.w	r1, [sp, #6]
 800e2cc:	f88d 3005 	strb.w	r3, [sp, #5]
 800e2d0:	f002 fd9a 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800e2d4:	68e0      	ldr	r0, [r4, #12]
 800e2d6:	f002 fd8f 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 800e2da:	2103      	movs	r1, #3
 800e2dc:	a801      	add	r0, sp, #4
 800e2de:	f002 fd99 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800e2e2:	b002      	add	sp, #8
 800e2e4:	bd10      	pop	{r4, pc}
	...

0800e2e8 <DisplayUdf::DisplayUdf()>:
 800e2e8:	b510      	push	{r4, lr}
 800e2ea:	4604      	mov	r4, r0
 800e2ec:	f000 fe58 	bl	800efa0 <Display::Display()>
 800e2f0:	2202      	movs	r2, #2
 800e2f2:	2300      	movs	r3, #0
 800e2f4:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800e2f8:	4b05      	ldr	r3, [pc, #20]	; (800e310 <DisplayUdf::DisplayUdf()+0x28>)
 800e2fa:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e2fe:	601c      	str	r4, [r3, #0]
 800e300:	2301      	movs	r3, #1
 800e302:	f802 3b01 	strb.w	r3, [r2], #1
 800e306:	3301      	adds	r3, #1
 800e308:	2b15      	cmp	r3, #21
 800e30a:	d1fa      	bne.n	800e302 <DisplayUdf::DisplayUdf()+0x1a>
 800e30c:	4620      	mov	r0, r4
 800e30e:	bd10      	pop	{r4, pc}
 800e310:	20009ac4 	andcs	r9, r0, r4, asr #21

0800e314 <DisplayUdf::SetTitle(char const*, ...)>:
 800e314:	b40e      	push	{r1, r2, r3}
 800e316:	b517      	push	{r0, r1, r2, r4, lr}
 800e318:	ab05      	add	r3, sp, #20
 800e31a:	f853 2b04 	ldr.w	r2, [r3], #4
 800e31e:	4604      	mov	r4, r0
 800e320:	211f      	movs	r1, #31
 800e322:	301c      	adds	r0, #28
 800e324:	9301      	str	r3, [sp, #4]
 800e326:	f001 fd3b 	bl	800fda0 <vsnprintf>
 800e32a:	2300      	movs	r3, #0
 800e32c:	4404      	add	r4, r0
 800e32e:	7723      	strb	r3, [r4, #28]
 800e330:	b003      	add	sp, #12
 800e332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e336:	b003      	add	sp, #12
 800e338:	4770      	bx	lr
	...

0800e33c <DisplayUdf::ShowEmacStart()>:
 800e33c:	b510      	push	{r4, lr}
 800e33e:	4604      	mov	r4, r0
 800e340:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e344:	6980      	ldr	r0, [r0, #24]
 800e346:	f7ff ff93 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e34a:	4620      	mov	r0, r4
 800e34c:	4a02      	ldr	r2, [pc, #8]	; (800e358 <DisplayUdf::ShowEmacStart()+0x1c>)
 800e34e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e352:	f7ff ff92 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e356:	bd10      	pop	{r4, pc}
 800e358:	080134cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, ip, sp}

0800e35c <DisplayUdf::ShowIpAddress()>:
 800e35c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e360:	4604      	mov	r4, r0
 800e362:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800e366:	b086      	sub	sp, #24
 800e368:	6980      	ldr	r0, [r0, #24]
 800e36a:	f7ff ff81 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e36e:	4b13      	ldr	r3, [pc, #76]	; (800e3bc <DisplayUdf::ShowIpAddress()+0x60>)
 800e370:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800e374:	681d      	ldr	r5, [r3, #0]
 800e376:	69a8      	ldr	r0, [r5, #24]
 800e378:	692e      	ldr	r6, [r5, #16]
 800e37a:	f7f9 fbd1 	bl	8007b20 <__popcountsi2>
 800e37e:	78eb      	ldrb	r3, [r5, #3]
 800e380:	fa5f f886 	uxtb.w	r8, r6
 800e384:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800e388:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800e38c:	0e36      	lsrs	r6, r6, #24
 800e38e:	b99b      	cbnz	r3, 800e3b8 <DisplayUdf::ShowIpAddress()+0x5c>
 800e390:	786b      	ldrb	r3, [r5, #1]
 800e392:	2b00      	cmp	r3, #0
 800e394:	bf14      	ite	ne
 800e396:	2244      	movne	r2, #68	; 0x44
 800e398:	2253      	moveq	r2, #83	; 0x53
 800e39a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800e39e:	4643      	mov	r3, r8
 800e3a0:	4639      	mov	r1, r7
 800e3a2:	4620      	mov	r0, r4
 800e3a4:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e3a8:	4a05      	ldr	r2, [pc, #20]	; (800e3c0 <DisplayUdf::ShowIpAddress()+0x64>)
 800e3aa:	f8cd 9000 	str.w	r9, [sp]
 800e3ae:	f7ff ff64 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e3b2:	b006      	add	sp, #24
 800e3b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e3b8:	225a      	movs	r2, #90	; 0x5a
 800e3ba:	e7ee      	b.n	800e39a <DisplayUdf::ShowIpAddress()+0x3e>
 800e3bc:	20009494 	mulcs	r0, r4, r4
 800e3c0:	080134da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, ip, sp}

0800e3c4 <DisplayUdf::ShowNetmask()>:
 800e3c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e3c6:	4604      	mov	r4, r0
 800e3c8:	4b0b      	ldr	r3, [pc, #44]	; (800e3f8 <DisplayUdf::ShowNetmask()+0x34>)
 800e3ca:	681b      	ldr	r3, [r3, #0]
 800e3cc:	699b      	ldr	r3, [r3, #24]
 800e3ce:	0e1a      	lsrs	r2, r3, #24
 800e3d0:	9202      	str	r2, [sp, #8]
 800e3d2:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e3d6:	9201      	str	r2, [sp, #4]
 800e3d8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e3dc:	9200      	str	r2, [sp, #0]
 800e3de:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800e3e2:	4a06      	ldr	r2, [pc, #24]	; (800e3fc <DisplayUdf::ShowNetmask()+0x38>)
 800e3e4:	b2db      	uxtb	r3, r3
 800e3e6:	f7ff ff48 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e3ea:	4620      	mov	r0, r4
 800e3ec:	b004      	add	sp, #16
 800e3ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3f2:	f7ff bfb3 	b.w	800e35c <DisplayUdf::ShowIpAddress()>
 800e3f6:	bf00      	nop
 800e3f8:	20009494 	mulcs	r0, r4, r4
 800e3fc:	080134ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, ip, sp}

0800e400 <DisplayUdf::ShowGatewayIp()>:
 800e400:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e402:	4604      	mov	r4, r0
 800e404:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800e408:	6980      	ldr	r0, [r0, #24]
 800e40a:	f7ff ff31 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e40e:	4b0a      	ldr	r3, [pc, #40]	; (800e438 <DisplayUdf::ShowGatewayIp()+0x38>)
 800e410:	4620      	mov	r0, r4
 800e412:	681b      	ldr	r3, [r3, #0]
 800e414:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800e418:	695b      	ldr	r3, [r3, #20]
 800e41a:	0e1a      	lsrs	r2, r3, #24
 800e41c:	9202      	str	r2, [sp, #8]
 800e41e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e422:	9201      	str	r2, [sp, #4]
 800e424:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e428:	9200      	str	r2, [sp, #0]
 800e42a:	b2db      	uxtb	r3, r3
 800e42c:	4a03      	ldr	r2, [pc, #12]	; (800e43c <DisplayUdf::ShowGatewayIp()+0x3c>)
 800e42e:	f7ff ff24 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e432:	b004      	add	sp, #16
 800e434:	bd10      	pop	{r4, pc}
 800e436:	bf00      	nop
 800e438:	20009494 	mulcs	r0, r4, r4
 800e43c:	080134fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, ip, sp}

0800e440 <DisplayUdf::ShowHostName()>:
 800e440:	b510      	push	{r4, lr}
 800e442:	4604      	mov	r4, r0
 800e444:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800e448:	6980      	ldr	r0, [r0, #24]
 800e44a:	f7ff ff11 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e44e:	4b05      	ldr	r3, [pc, #20]	; (800e464 <DisplayUdf::ShowHostName()+0x24>)
 800e450:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800e454:	681a      	ldr	r2, [r3, #0]
 800e456:	69a0      	ldr	r0, [r4, #24]
 800e458:	321c      	adds	r2, #28
 800e45a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e45e:	f7ff bef5 	b.w	800e24c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e462:	bf00      	nop
 800e464:	20009494 	mulcs	r0, r4, r4

0800e468 <DisplayUdf::Show()>:
 800e468:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e46a:	4604      	mov	r4, r0
 800e46c:	21ff      	movs	r1, #255	; 0xff
 800e46e:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800e472:	f100 0250 	add.w	r2, r0, #80	; 0x50
 800e476:	f813 0b01 	ldrb.w	r0, [r3], #1
 800e47a:	2806      	cmp	r0, #6
 800e47c:	bf88      	it	hi
 800e47e:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 800e482:	429a      	cmp	r2, r3
 800e484:	d1f7      	bne.n	800e476 <DisplayUdf::Show()+0xe>
 800e486:	2501      	movs	r5, #1
 800e488:	4629      	mov	r1, r5
 800e48a:	3501      	adds	r5, #1
 800e48c:	69a0      	ldr	r0, [r4, #24]
 800e48e:	b2ed      	uxtb	r5, r5
 800e490:	f7ff feee 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e494:	2d06      	cmp	r5, #6
 800e496:	d1f7      	bne.n	800e488 <DisplayUdf::Show()+0x20>
 800e498:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800e49c:	69a0      	ldr	r0, [r4, #24]
 800e49e:	f104 021c 	add.w	r2, r4, #28
 800e4a2:	f7ff fed3 	bl	800e24c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e4a6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800e4aa:	69a0      	ldr	r0, [r4, #24]
 800e4ac:	4a0d      	ldr	r2, [pc, #52]	; (800e4e4 <DisplayUdf::Show()+0x7c>)
 800e4ae:	f7ff fecd 	bl	800e24c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e4b2:	4b0d      	ldr	r3, [pc, #52]	; (800e4e8 <DisplayUdf::Show()+0x80>)
 800e4b4:	4a0d      	ldr	r2, [pc, #52]	; (800e4ec <DisplayUdf::Show()+0x84>)
 800e4b6:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800e4ba:	9300      	str	r3, [sp, #0]
 800e4bc:	4620      	mov	r0, r4
 800e4be:	2303      	movs	r3, #3
 800e4c0:	f7ff fedb 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e4c4:	4620      	mov	r0, r4
 800e4c6:	f7ff ff49 	bl	800e35c <DisplayUdf::ShowIpAddress()>
 800e4ca:	4620      	mov	r0, r4
 800e4cc:	f7ff ff98 	bl	800e400 <DisplayUdf::ShowGatewayIp()>
 800e4d0:	4620      	mov	r0, r4
 800e4d2:	f7ff ff77 	bl	800e3c4 <DisplayUdf::ShowNetmask()>
 800e4d6:	4620      	mov	r0, r4
 800e4d8:	b003      	add	sp, #12
 800e4da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e4de:	f7ff bfaf 	b.w	800e440 <DisplayUdf::ShowHostName()>
 800e4e2:	bf00      	nop
 800e4e4:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800e4e8:	20009b5c 	andcs	r9, r0, ip, asr fp
 800e4ec:	0801350a 	stmdaeq	r1, {r1, r3, r8, sl, ip, sp}

0800e4f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800e4f0:	3901      	subs	r1, #1
 800e4f2:	b510      	push	{r4, lr}
 800e4f4:	4604      	mov	r4, r0
 800e4f6:	2903      	cmp	r1, #3
 800e4f8:	d814      	bhi.n	800e524 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e4fa:	e8df f001 	tbb	[pc, r1]
 800e4fe:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800e502:	4b14      	ldr	r3, [pc, #80]	; (800e554 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e504:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e508:	6818      	ldr	r0, [r3, #0]
 800e50a:	f7ff fed2 	bl	800e2b2 <Display::Status(Display7SegmentMessage)>
 800e50e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e512:	69a0      	ldr	r0, [r4, #24]
 800e514:	f7ff feac 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e518:	4a0f      	ldr	r2, [pc, #60]	; (800e558 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800e51a:	4620      	mov	r0, r4
 800e51c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e520:	f7ff feab 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e524:	bd10      	pop	{r4, pc}
 800e526:	f248 0180 	movw	r1, #32896	; 0x8080
 800e52a:	4b0a      	ldr	r3, [pc, #40]	; (800e554 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e52c:	6818      	ldr	r0, [r3, #0]
 800e52e:	f7ff fec0 	bl	800e2b2 <Display::Status(Display7SegmentMessage)>
 800e532:	e7f7      	b.n	800e524 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800e534:	4b07      	ldr	r3, [pc, #28]	; (800e554 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800e536:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800e53a:	6818      	ldr	r0, [r3, #0]
 800e53c:	f7ff feb9 	bl	800e2b2 <Display::Status(Display7SegmentMessage)>
 800e540:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800e544:	69a0      	ldr	r0, [r4, #24]
 800e546:	f7ff fe93 	bl	800e270 <Display::ClearLine(unsigned char) [clone .isra.0]>
 800e54a:	4a04      	ldr	r2, [pc, #16]	; (800e55c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800e54c:	e7e5      	b.n	800e51a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800e54e:	f645 3179 	movw	r1, #23417	; 0x5b79
 800e552:	e7ea      	b.n	800e52a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800e554:	20009acc 	andcs	r9, r0, ip, asr #21
 800e558:	08013519 	stmdaeq	r1, {r0, r3, r4, r8, sl, ip, sp}
 800e55c:	08013527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp}

0800e560 <DisplayUdf::ShowShutdown()>:
 800e560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e564:	4604      	mov	r4, r0
 800e566:	6980      	ldr	r0, [r0, #24]
 800e568:	b308      	cbz	r0, 800e5ae <DisplayUdf::ShowShutdown()+0x4e>
 800e56a:	f890 8005 	ldrb.w	r8, [r0, #5]
 800e56e:	6803      	ldr	r3, [r0, #0]
 800e570:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800e574:	b2ed      	uxtb	r5, r5
 800e576:	462a      	mov	r2, r5
 800e578:	2100      	movs	r1, #0
 800e57a:	6a1b      	ldr	r3, [r3, #32]
 800e57c:	7907      	ldrb	r7, [r0, #4]
 800e57e:	2600      	movs	r6, #0
 800e580:	4798      	blx	r3
 800e582:	3f01      	subs	r7, #1
 800e584:	42b7      	cmp	r7, r6
 800e586:	69a0      	ldr	r0, [r4, #24]
 800e588:	d906      	bls.n	800e598 <DisplayUdf::ShowShutdown()+0x38>
 800e58a:	b118      	cbz	r0, 800e594 <DisplayUdf::ShowShutdown()+0x34>
 800e58c:	6803      	ldr	r3, [r0, #0]
 800e58e:	2120      	movs	r1, #32
 800e590:	695b      	ldr	r3, [r3, #20]
 800e592:	4798      	blx	r3
 800e594:	3601      	adds	r6, #1
 800e596:	e7f5      	b.n	800e584 <DisplayUdf::ShowShutdown()+0x24>
 800e598:	b120      	cbz	r0, 800e5a4 <DisplayUdf::ShowShutdown()+0x44>
 800e59a:	6803      	ldr	r3, [r0, #0]
 800e59c:	462a      	mov	r2, r5
 800e59e:	2100      	movs	r1, #0
 800e5a0:	6a1b      	ldr	r3, [r3, #32]
 800e5a2:	4798      	blx	r3
 800e5a4:	4641      	mov	r1, r8
 800e5a6:	4a05      	ldr	r2, [pc, #20]	; (800e5bc <DisplayUdf::ShowShutdown()+0x5c>)
 800e5a8:	69a0      	ldr	r0, [r4, #24]
 800e5aa:	f7ff fe4f 	bl	800e24c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800e5ae:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800e5b2:	4620      	mov	r0, r4
 800e5b4:	f7ff fe7d 	bl	800e2b2 <Display::Status(Display7SegmentMessage)>
 800e5b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5bc:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}

0800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800e5c0:	1e4b      	subs	r3, r1, #1
 800e5c2:	2b05      	cmp	r3, #5
 800e5c4:	b530      	push	{r4, r5, lr}
 800e5c6:	d80f      	bhi.n	800e5e8 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800e5c8:	2300      	movs	r3, #0
 800e5ca:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 800e5ce:	f814 5b01 	ldrb.w	r5, [r4], #1
 800e5d2:	428d      	cmp	r5, r1
 800e5d4:	d109      	bne.n	800e5ea <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800e5d6:	1884      	adds	r4, r0, r2
 800e5d8:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800e5dc:	4403      	add	r3, r0
 800e5de:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800e5e2:	4410      	add	r0, r2
 800e5e4:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800e5e8:	bd30      	pop	{r4, r5, pc}
 800e5ea:	3301      	adds	r3, #1
 800e5ec:	2b14      	cmp	r3, #20
 800e5ee:	d1ee      	bne.n	800e5ce <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800e5f0:	e7f7      	b.n	800e5e2 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

0800e5f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800e5f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e5f6:	88c5      	ldrh	r5, [r0, #6]
 800e5f8:	8886      	ldrh	r6, [r0, #4]
 800e5fa:	42b5      	cmp	r5, r6
 800e5fc:	d216      	bcs.n	800e62c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800e5fe:	4604      	mov	r4, r0
 800e600:	6800      	ldr	r0, [r0, #0]
 800e602:	4428      	add	r0, r5
 800e604:	1b75      	subs	r5, r6, r5
 800e606:	7a26      	ldrb	r6, [r4, #8]
 800e608:	b923      	cbnz	r3, 800e614 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800e60a:	b926      	cbnz	r6, 800e616 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800e60c:	9200      	str	r2, [sp, #0]
 800e60e:	460b      	mov	r3, r1
 800e610:	4a09      	ldr	r2, [pc, #36]	; (800e638 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800e612:	e003      	b.n	800e61c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e614:	b166      	cbz	r6, 800e630 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800e616:	460b      	mov	r3, r1
 800e618:	9200      	str	r2, [sp, #0]
 800e61a:	4a08      	ldr	r2, [pc, #32]	; (800e63c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800e61c:	4629      	mov	r1, r5
 800e61e:	f001 fba7 	bl	800fd70 <snprintf>
 800e622:	4285      	cmp	r5, r0
 800e624:	bfa2      	ittt	ge
 800e626:	88e3      	ldrhge	r3, [r4, #6]
 800e628:	181b      	addge	r3, r3, r0
 800e62a:	80e3      	strhge	r3, [r4, #6]
 800e62c:	b002      	add	sp, #8
 800e62e:	bd70      	pop	{r4, r5, r6, pc}
 800e630:	9200      	str	r2, [sp, #0]
 800e632:	460b      	mov	r3, r1
 800e634:	4a02      	ldr	r2, [pc, #8]	; (800e640 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e636:	e7f1      	b.n	800e61c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800e638:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 800e63c:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 800e640:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

0800e644 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800e644:	b510      	push	{r4, lr}
 800e646:	2220      	movs	r2, #32
 800e648:	4604      	mov	r4, r0
 800e64a:	f840 1b04 	str.w	r1, [r0], #4
 800e64e:	2100      	movs	r1, #0
 800e650:	f001 f944 	bl	800f8dc <memset>
 800e654:	f647 7305 	movw	r3, #32517	; 0x7f05
 800e658:	4620      	mov	r0, r4
 800e65a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e65c:	bd10      	pop	{r4, pc}

0800e65e <DisplayUdfParams::Load()>:
 800e65e:	b508      	push	{r3, lr}
 800e660:	2300      	movs	r3, #0
 800e662:	4601      	mov	r1, r0
 800e664:	6043      	str	r3, [r0, #4]
 800e666:	6800      	ldr	r0, [r0, #0]
 800e668:	b120      	cbz	r0, 800e674 <DisplayUdfParams::Load()+0x16>
 800e66a:	6803      	ldr	r3, [r0, #0]
 800e66c:	3104      	adds	r1, #4
 800e66e:	68db      	ldr	r3, [r3, #12]
 800e670:	4798      	blx	r3
 800e672:	2001      	movs	r0, #1
 800e674:	bd08      	pop	{r3, pc}
	...

0800e678 <DisplayUdfParams::Load(char const*, unsigned int)>:
 800e678:	6803      	ldr	r3, [r0, #0]
 800e67a:	b1d3      	cbz	r3, 800e6b2 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800e67c:	2300      	movs	r3, #0
 800e67e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e680:	460d      	mov	r5, r1
 800e682:	4616      	mov	r6, r2
 800e684:	4604      	mov	r4, r0
 800e686:	6043      	str	r3, [r0, #4]
 800e688:	4602      	mov	r2, r0
 800e68a:	490a      	ldr	r1, [pc, #40]	; (800e6b4 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800e68c:	4668      	mov	r0, sp
 800e68e:	f000 fb19 	bl	800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e692:	4632      	mov	r2, r6
 800e694:	4629      	mov	r1, r5
 800e696:	4668      	mov	r0, sp
 800e698:	f000 fb18 	bl	800eccc <ReadConfigFile::Read(char const*, unsigned int)>
 800e69c:	4621      	mov	r1, r4
 800e69e:	f851 0b04 	ldr.w	r0, [r1], #4
 800e6a2:	6803      	ldr	r3, [r0, #0]
 800e6a4:	689b      	ldr	r3, [r3, #8]
 800e6a6:	4798      	blx	r3
 800e6a8:	4668      	mov	r0, sp
 800e6aa:	f000 fb0e 	bl	800ecca <ReadConfigFile::~ReadConfigFile()>
 800e6ae:	b002      	add	sp, #8
 800e6b0:	bd70      	pop	{r4, r5, r6, pc}
 800e6b2:	4770      	bx	lr
 800e6b4:	0800e77d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}

0800e6b8 <DisplayUdfParams::callbackFunction(char const*)>:
 800e6b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e6ba:	460e      	mov	r6, r1
 800e6bc:	4604      	mov	r4, r0
 800e6be:	492b      	ldr	r1, [pc, #172]	; (800e76c <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 800e6c0:	4630      	mov	r0, r6
 800e6c2:	f10d 0207 	add.w	r2, sp, #7
 800e6c6:	f000 fbac 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e6ca:	b968      	cbnz	r0, 800e6e8 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800e6cc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e6d0:	6863      	ldr	r3, [r4, #4]
 800e6d2:	2a7f      	cmp	r2, #127	; 0x7f
 800e6d4:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800e6d8:	bf14      	ite	ne
 800e6da:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800e6de:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800e6e2:	6063      	str	r3, [r4, #4]
 800e6e4:	b003      	add	sp, #12
 800e6e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6e8:	4630      	mov	r0, r6
 800e6ea:	4921      	ldr	r1, [pc, #132]	; (800e770 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800e6ec:	f10d 0207 	add.w	r2, sp, #7
 800e6f0:	f000 fb97 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e6f4:	b958      	cbnz	r0, 800e70e <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800e6f6:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e6fa:	6863      	ldr	r3, [r4, #4]
 800e6fc:	2a05      	cmp	r2, #5
 800e6fe:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800e702:	bf14      	ite	ne
 800e704:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800e708:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800e70c:	e7e9      	b.n	800e6e2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e70e:	4630      	mov	r0, r6
 800e710:	4918      	ldr	r1, [pc, #96]	; (800e774 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800e712:	f10d 0207 	add.w	r2, sp, #7
 800e716:	f000 fb84 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e71a:	b948      	cbnz	r0, 800e730 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800e71c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e720:	6863      	ldr	r3, [r4, #4]
 800e722:	b112      	cbz	r2, 800e72a <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800e724:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800e728:	e7db      	b.n	800e6e2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e72a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800e72e:	e7d8      	b.n	800e6e2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e730:	2500      	movs	r5, #0
 800e732:	4f11      	ldr	r7, [pc, #68]	; (800e778 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800e734:	4630      	mov	r0, r6
 800e736:	f857 1b04 	ldr.w	r1, [r7], #4
 800e73a:	f10d 0207 	add.w	r2, sp, #7
 800e73e:	f000 fb70 	bl	800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e742:	b978      	cbnz	r0, 800e764 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 800e744:	2301      	movs	r3, #1
 800e746:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e74a:	6862      	ldr	r2, [r4, #4]
 800e74c:	1e4e      	subs	r6, r1, #1
 800e74e:	2e05      	cmp	r6, #5
 800e750:	fa03 f305 	lsl.w	r3, r3, r5
 800e754:	4425      	add	r5, r4
 800e756:	bf99      	ittee	ls
 800e758:	7229      	strbls	r1, [r5, #8]
 800e75a:	4313      	orrls	r3, r2
 800e75c:	7228      	strbhi	r0, [r5, #8]
 800e75e:	ea22 0303 	bichi.w	r3, r2, r3
 800e762:	e7be      	b.n	800e6e2 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800e764:	3501      	adds	r5, #1
 800e766:	2d14      	cmp	r5, #20
 800e768:	d1e4      	bne.n	800e734 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800e76a:	e7bb      	b.n	800e6e4 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800e76c:	080135f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp}
 800e770:	080135be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip, sp}
 800e774:	080135cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, ip, sp}
 800e778:	08013548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp}

0800e77c <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800e77c:	f7ff bf9c 	b.w	800e6b8 <DisplayUdfParams::callbackFunction(char const*)>

0800e780 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e784:	4604      	mov	r4, r0
 800e786:	4615      	mov	r5, r2
 800e788:	461e      	mov	r6, r3
 800e78a:	b086      	sub	sp, #24
 800e78c:	3004      	adds	r0, #4
 800e78e:	b379      	cbz	r1, 800e7f0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800e790:	2222      	movs	r2, #34	; 0x22
 800e792:	f001 f88c 	bl	800f8ae <memmove>
 800e796:	462a      	mov	r2, r5
 800e798:	4633      	mov	r3, r6
 800e79a:	493d      	ldr	r1, [pc, #244]	; (800e890 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800e79c:	a803      	add	r0, sp, #12
 800e79e:	f000 f9f1 	bl	800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e7a2:	6863      	ldr	r3, [r4, #4]
 800e7a4:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800e7a8:	493a      	ldr	r1, [pc, #232]	; (800e894 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800e7aa:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800e7ae:	a803      	add	r0, sp, #12
 800e7b0:	f7ff ff20 	bl	800e5f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e7b4:	6863      	ldr	r3, [r4, #4]
 800e7b6:	4938      	ldr	r1, [pc, #224]	; (800e898 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800e7b8:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800e7bc:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800e7c0:	a803      	add	r0, sp, #12
 800e7c2:	f7ff ff17 	bl	800e5f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e7c6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e7ca:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e7ce:	42a9      	cmp	r1, r5
 800e7d0:	d227      	bcs.n	800e822 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800e7d2:	6863      	ldr	r3, [r4, #4]
 800e7d4:	9803      	ldr	r0, [sp, #12]
 800e7d6:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800e7da:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e7de:	4408      	add	r0, r1
 800e7e0:	eba5 0501 	sub.w	r5, r5, r1
 800e7e4:	d10b      	bne.n	800e7fe <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800e7e6:	b962      	cbnz	r2, 800e802 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e7e8:	9200      	str	r2, [sp, #0]
 800e7ea:	4b2c      	ldr	r3, [pc, #176]	; (800e89c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e7ec:	4a2c      	ldr	r2, [pc, #176]	; (800e8a0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800e7ee:	e00e      	b.n	800e80e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e7f0:	6823      	ldr	r3, [r4, #0]
 800e7f2:	4601      	mov	r1, r0
 800e7f4:	681a      	ldr	r2, [r3, #0]
 800e7f6:	4618      	mov	r0, r3
 800e7f8:	68d2      	ldr	r2, [r2, #12]
 800e7fa:	4790      	blx	r2
 800e7fc:	e7cb      	b.n	800e796 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e7fe:	2a00      	cmp	r2, #0
 800e800:	d041      	beq.n	800e886 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800e802:	3b00      	subs	r3, #0
 800e804:	bf18      	it	ne
 800e806:	2301      	movne	r3, #1
 800e808:	4a26      	ldr	r2, [pc, #152]	; (800e8a4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800e80a:	9300      	str	r3, [sp, #0]
 800e80c:	4b23      	ldr	r3, [pc, #140]	; (800e89c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e80e:	4629      	mov	r1, r5
 800e810:	f001 faae 	bl	800fd70 <snprintf>
 800e814:	4285      	cmp	r5, r0
 800e816:	bfa2      	ittt	ge
 800e818:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e81c:	181b      	addge	r3, r3, r0
 800e81e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e822:	2500      	movs	r5, #0
 800e824:	2701      	movs	r7, #1
 800e826:	4e20      	ldr	r6, [pc, #128]	; (800e8a8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800e828:	f104 0808 	add.w	r8, r4, #8
 800e82c:	f856 1b04 	ldr.w	r1, [r6], #4
 800e830:	780b      	ldrb	r3, [r1, #0]
 800e832:	b15b      	cbz	r3, 800e84c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800e834:	6862      	ldr	r2, [r4, #4]
 800e836:	fa07 f305 	lsl.w	r3, r7, r5
 800e83a:	4393      	bics	r3, r2
 800e83c:	bf0c      	ite	eq
 800e83e:	2301      	moveq	r3, #1
 800e840:	2300      	movne	r3, #0
 800e842:	f818 2005 	ldrb.w	r2, [r8, r5]
 800e846:	a803      	add	r0, sp, #12
 800e848:	f7ff fed4 	bl	800e5f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e84c:	3501      	adds	r5, #1
 800e84e:	2d14      	cmp	r5, #20
 800e850:	d1ec      	bne.n	800e82c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800e852:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e856:	b17b      	cbz	r3, 800e878 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800e858:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e85c:	9b03      	ldr	r3, [sp, #12]
 800e85e:	4413      	add	r3, r2
 800e860:	227d      	movs	r2, #125	; 0x7d
 800e862:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e866:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e86a:	9903      	ldr	r1, [sp, #12]
 800e86c:	54ca      	strb	r2, [r1, r3]
 800e86e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e872:	3301      	adds	r3, #1
 800e874:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e878:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e87c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e87e:	601a      	str	r2, [r3, #0]
 800e880:	b006      	add	sp, #24
 800e882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e886:	2301      	movs	r3, #1
 800e888:	4a08      	ldr	r2, [pc, #32]	; (800e8ac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800e88a:	9300      	str	r3, [sp, #0]
 800e88c:	4b03      	ldr	r3, [pc, #12]	; (800e89c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e88e:	e7be      	b.n	800e80e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800e890:	080135ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, ip, sp}
 800e894:	080135f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp}
 800e898:	080135be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip, sp}
 800e89c:	080135cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, ip, sp}
 800e8a0:	08011f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}
 800e8a4:	08011f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, ip}
 800e8a8:	08013548 	stmdaeq	r1, {r3, r6, r8, sl, ip, sp}
 800e8ac:	08011f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip}

0800e8b0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800e8b0:	b513      	push	{r0, r1, r4, lr}
 800e8b2:	6804      	ldr	r4, [r0, #0]
 800e8b4:	b914      	cbnz	r4, 800e8bc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e8b6:	601c      	str	r4, [r3, #0]
 800e8b8:	b002      	add	sp, #8
 800e8ba:	bd10      	pop	{r4, pc}
 800e8bc:	9300      	str	r3, [sp, #0]
 800e8be:	4613      	mov	r3, r2
 800e8c0:	460a      	mov	r2, r1
 800e8c2:	2100      	movs	r1, #0
 800e8c4:	f7ff ff5c 	bl	800e780 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800e8c8:	e7f6      	b.n	800e8b8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e8ca <DisplayUdfParams::Set(DisplayUdf*)>:
 800e8ca:	6843      	ldr	r3, [r0, #4]
 800e8cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8d0:	009a      	lsls	r2, r3, #2
 800e8d2:	4604      	mov	r4, r0
 800e8d4:	460e      	mov	r6, r1
 800e8d6:	d506      	bpl.n	800e8e6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e8d8:	6988      	ldr	r0, [r1, #24]
 800e8da:	b120      	cbz	r0, 800e8e6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800e8dc:	6803      	ldr	r3, [r0, #0]
 800e8de:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800e8e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8e4:	4798      	blx	r3
 800e8e6:	6863      	ldr	r3, [r4, #4]
 800e8e8:	69b0      	ldr	r0, [r6, #24]
 800e8ea:	00db      	lsls	r3, r3, #3
 800e8ec:	bf41      	itttt	mi
 800e8ee:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800e8f2:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800e8f6:	4353      	mulmi	r3, r2
 800e8f8:	6173      	strmi	r3, [r6, #20]
 800e8fa:	6861      	ldr	r1, [r4, #4]
 800e8fc:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800e900:	b110      	cbz	r0, 800e908 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800e902:	6803      	ldr	r3, [r0, #0]
 800e904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e906:	4798      	blx	r3
 800e908:	2500      	movs	r5, #0
 800e90a:	2701      	movs	r7, #1
 800e90c:	f104 0808 	add.w	r8, r4, #8
 800e910:	6862      	ldr	r2, [r4, #4]
 800e912:	fa07 f305 	lsl.w	r3, r7, r5
 800e916:	4393      	bics	r3, r2
 800e918:	d105      	bne.n	800e926 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800e91a:	462a      	mov	r2, r5
 800e91c:	4630      	mov	r0, r6
 800e91e:	f818 1005 	ldrb.w	r1, [r8, r5]
 800e922:	f7ff fe4d 	bl	800e5c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800e926:	3501      	adds	r5, #1
 800e928:	2d14      	cmp	r5, #20
 800e92a:	d1f1      	bne.n	800e910 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800e92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e930 <DisplayUdfParams::Dump()>:
 800e930:	4770      	bx	lr
	...

0800e934 <DisplayUdf::Show(E131Bridge*)>:
 800e934:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e938:	460e      	mov	r6, r1
 800e93a:	4604      	mov	r4, r0
 800e93c:	b085      	sub	sp, #20
 800e93e:	f7ff fd93 	bl	800e468 <DisplayUdf::Show()>
 800e942:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 800e946:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 800e94a:	4620      	mov	r0, r4
 800e94c:	4413      	add	r3, r2
 800e94e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800e952:	4a21      	ldr	r2, [pc, #132]	; (800e9d8 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800e954:	f7ff fc91 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e958:	2500      	movs	r5, #0
 800e95a:	4f20      	ldr	r7, [pc, #128]	; (800e9dc <DisplayUdf::Show(E131Bridge*)+0xa8>)
 800e95c:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800e9e0 <DisplayUdf::Show(E131Bridge*)+0xac>
 800e960:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800e9e4 <DisplayUdf::Show(E131Bridge*)+0xb0>
 800e964:	2301      	movs	r3, #1
 800e966:	4629      	mov	r1, r5
 800e968:	4630      	mov	r0, r6
 800e96a:	f10d 020e 	add.w	r2, sp, #14
 800e96e:	f7fa f823 	bl	80089b8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800e972:	b1a8      	cbz	r0, 800e9a0 <DisplayUdf::Show(E131Bridge*)+0x6c>
 800e974:	2344      	movs	r3, #68	; 0x44
 800e976:	436b      	muls	r3, r5
 800e978:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 800e97c:	58d2      	ldr	r2, [r2, r3]
 800e97e:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800e982:	2a00      	cmp	r2, #0
 800e984:	bf0c      	ite	eq
 800e986:	463b      	moveq	r3, r7
 800e988:	4643      	movne	r3, r8
 800e98a:	e9cd 0300 	strd	r0, r3, [sp]
 800e98e:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800e992:	464a      	mov	r2, r9
 800e994:	4620      	mov	r0, r4
 800e996:	5d49      	ldrb	r1, [r1, r5]
 800e998:	f105 0341 	add.w	r3, r5, #65	; 0x41
 800e99c:	f7ff fc6d 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e9a0:	3501      	adds	r5, #1
 800e9a2:	2d04      	cmp	r5, #4
 800e9a4:	d1de      	bne.n	800e964 <DisplayUdf::Show(E131Bridge*)+0x30>
 800e9a6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800e9a8:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800e9ac:	2a02      	cmp	r2, #2
 800e9ae:	d001      	beq.n	800e9b4 <DisplayUdf::Show(E131Bridge*)+0x80>
 800e9b0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e9b2:	b933      	cbnz	r3, 800e9c2 <DisplayUdf::Show(E131Bridge*)+0x8e>
 800e9b4:	4620      	mov	r0, r4
 800e9b6:	4a0c      	ldr	r2, [pc, #48]	; (800e9e8 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 800e9b8:	f7ff fc5f 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e9bc:	b005      	add	sp, #20
 800e9be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e9c2:	480a      	ldr	r0, [pc, #40]	; (800e9ec <DisplayUdf::Show(E131Bridge*)+0xb8>)
 800e9c4:	9300      	str	r3, [sp, #0]
 800e9c6:	4b0a      	ldr	r3, [pc, #40]	; (800e9f0 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 800e9c8:	2a00      	cmp	r2, #0
 800e9ca:	bf08      	it	eq
 800e9cc:	4603      	moveq	r3, r0
 800e9ce:	4620      	mov	r0, r4
 800e9d0:	4a08      	ldr	r2, [pc, #32]	; (800e9f4 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 800e9d2:	f7ff fc52 	bl	800e27a <Display::Printf(unsigned char, char const*, ...)>
 800e9d6:	e7f1      	b.n	800e9bc <DisplayUdf::Show(E131Bridge*)+0x88>
 800e9d8:	08013600 	stmdaeq	r1, {r9, sl, ip, sp}
 800e9dc:	08011e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, ip}
 800e9e0:	08011e4c 	stmdaeq	r1, {r2, r3, r6, r9, sl, fp, ip}
 800e9e4:	08013607 	stmdaeq	r1, {r0, r1, r2, r9, sl, ip, sp}
 800e9e8:	08013616 	stmdaeq	r1, {r1, r2, r4, r9, sl, ip, sp}
 800e9ec:	08011f6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, fp, ip}
 800e9f0:	08011f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip}
 800e9f4:	0801361d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, ip, sp}

0800e9f8 <NetworkDisplay::ShowEmacStart()>:
 800e9f8:	4b01      	ldr	r3, [pc, #4]	; (800ea00 <NetworkDisplay::ShowEmacStart()+0x8>)
 800e9fa:	6818      	ldr	r0, [r3, #0]
 800e9fc:	f7ff bc9e 	b.w	800e33c <DisplayUdf::ShowEmacStart()>
 800ea00:	20009ac4 	andcs	r9, r0, r4, asr #21

0800ea04 <NetworkDisplay::ShowIp()>:
 800ea04:	4b01      	ldr	r3, [pc, #4]	; (800ea0c <NetworkDisplay::ShowIp()+0x8>)
 800ea06:	6818      	ldr	r0, [r3, #0]
 800ea08:	f7ff bca8 	b.w	800e35c <DisplayUdf::ShowIpAddress()>
 800ea0c:	20009ac4 	andcs	r9, r0, r4, asr #21

0800ea10 <NetworkDisplay::ShowShutdown()>:
 800ea10:	4b01      	ldr	r3, [pc, #4]	; (800ea18 <NetworkDisplay::ShowShutdown()+0x8>)
 800ea12:	6818      	ldr	r0, [r3, #0]
 800ea14:	f7ff bda4 	b.w	800e560 <DisplayUdf::ShowShutdown()>
 800ea18:	20009ac4 	andcs	r9, r0, r4, asr #21

0800ea1c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800ea1c:	4b01      	ldr	r3, [pc, #4]	; (800ea24 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 800ea1e:	6818      	ldr	r0, [r3, #0]
 800ea20:	f7ff bd66 	b.w	800e4f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ea24:	20009ac4 	andcs	r9, r0, r4, asr #21

0800ea28 <properties::convert_json_file(char*, unsigned short, bool)>:
 800ea28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea2c:	7803      	ldrb	r3, [r0, #0]
 800ea2e:	2b7b      	cmp	r3, #123	; 0x7b
 800ea30:	d170      	bne.n	800eb14 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 800ea32:	b322      	cbz	r2, 800ea7e <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 800ea34:	2301      	movs	r3, #1
 800ea36:	4606      	mov	r6, r0
 800ea38:	461c      	mov	r4, r3
 800ea3a:	2a00      	cmp	r2, #0
 800ea3c:	bf0c      	ite	eq
 800ea3e:	f04f 0c0a 	moveq.w	ip, #10
 800ea42:	f04f 0c00 	movne.w	ip, #0
 800ea46:	273d      	movs	r7, #61	; 0x3d
 800ea48:	4299      	cmp	r1, r3
 800ea4a:	d960      	bls.n	800eb0e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800ea4c:	4299      	cmp	r1, r3
 800ea4e:	4602      	mov	r2, r0
 800ea50:	f890 e000 	ldrb.w	lr, [r0]
 800ea54:	f103 0301 	add.w	r3, r3, #1
 800ea58:	f100 0001 	add.w	r0, r0, #1
 800ea5c:	d846      	bhi.n	800eaec <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 800ea5e:	1aa0      	subs	r0, r4, r2
 800ea60:	4615      	mov	r5, r2
 800ea62:	1884      	adds	r4, r0, r2
 800ea64:	f812 8b01 	ldrb.w	r8, [r2], #1
 800ea68:	f103 0e01 	add.w	lr, r3, #1
 800ea6c:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 800ea70:	d053      	beq.n	800eb1a <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 800ea72:	4299      	cmp	r1, r3
 800ea74:	d957      	bls.n	800eb26 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800ea76:	4673      	mov	r3, lr
 800ea78:	f806 8b01 	strb.w	r8, [r6], #1
 800ea7c:	e7f0      	b.n	800ea60 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 800ea7e:	2323      	movs	r3, #35	; 0x23
 800ea80:	f800 3b01 	strb.w	r3, [r0], #1
 800ea84:	4605      	mov	r5, r0
 800ea86:	2301      	movs	r3, #1
 800ea88:	4299      	cmp	r1, r3
 800ea8a:	d92d      	bls.n	800eae8 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 800ea8c:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ea90:	2c22      	cmp	r4, #34	; 0x22
 800ea92:	d001      	beq.n	800ea98 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800ea94:	3301      	adds	r3, #1
 800ea96:	e7f7      	b.n	800ea88 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 800ea98:	46ac      	mov	ip, r5
 800ea9a:	4606      	mov	r6, r0
 800ea9c:	2701      	movs	r7, #1
 800ea9e:	f89c e000 	ldrb.w	lr, [ip]
 800eaa2:	4665      	mov	r5, ip
 800eaa4:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800eaa8:	4630      	mov	r0, r6
 800eaaa:	463c      	mov	r4, r7
 800eaac:	f10c 0c01 	add.w	ip, ip, #1
 800eab0:	f106 0601 	add.w	r6, r6, #1
 800eab4:	f107 0701 	add.w	r7, r7, #1
 800eab8:	d007      	beq.n	800eaca <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800eaba:	3301      	adds	r3, #1
 800eabc:	4299      	cmp	r1, r3
 800eabe:	4665      	mov	r5, ip
 800eac0:	f806 ec01 	strb.w	lr, [r6, #-1]
 800eac4:	d8eb      	bhi.n	800ea9e <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 800eac6:	463c      	mov	r4, r7
 800eac8:	4630      	mov	r0, r6
 800eaca:	4606      	mov	r6, r0
 800eacc:	200a      	movs	r0, #10
 800eace:	3401      	adds	r4, #1
 800ead0:	f806 0b01 	strb.w	r0, [r6], #1
 800ead4:	4628      	mov	r0, r5
 800ead6:	f815 7b01 	ldrb.w	r7, [r5], #1
 800eada:	2f7b      	cmp	r7, #123	; 0x7b
 800eadc:	d0ad      	beq.n	800ea3a <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800eade:	1c5f      	adds	r7, r3, #1
 800eae0:	4299      	cmp	r1, r3
 800eae2:	463b      	mov	r3, r7
 800eae4:	d8f6      	bhi.n	800ead4 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800eae6:	e7a8      	b.n	800ea3a <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800eae8:	2401      	movs	r4, #1
 800eaea:	e7ee      	b.n	800eaca <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800eaec:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800eaf0:	d1ac      	bne.n	800ea4c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800eaf2:	4602      	mov	r2, r0
 800eaf4:	e7b3      	b.n	800ea5e <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 800eaf6:	283a      	cmp	r0, #58	; 0x3a
 800eaf8:	d115      	bne.n	800eb26 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800eafa:	462b      	mov	r3, r5
 800eafc:	e01b      	b.n	800eb36 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800eafe:	4686      	mov	lr, r0
 800eb00:	e027      	b.n	800eb52 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 800eb02:	4673      	mov	r3, lr
 800eb04:	f806 cb01 	strb.w	ip, [r6], #1
 800eb08:	3401      	adds	r4, #1
 800eb0a:	3301      	adds	r3, #1
 800eb0c:	e79c      	b.n	800ea48 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 800eb0e:	4620      	mov	r0, r4
 800eb10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800eb18:	e7fa      	b.n	800eb10 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 800eb1a:	4630      	mov	r0, r6
 800eb1c:	f800 7b01 	strb.w	r7, [r0], #1
 800eb20:	469e      	mov	lr, r3
 800eb22:	4606      	mov	r6, r0
 800eb24:	3401      	adds	r4, #1
 800eb26:	4571      	cmp	r1, lr
 800eb28:	462b      	mov	r3, r5
 800eb2a:	7828      	ldrb	r0, [r5, #0]
 800eb2c:	f10e 0e01 	add.w	lr, lr, #1
 800eb30:	f105 0501 	add.w	r5, r5, #1
 800eb34:	d8df      	bhi.n	800eaf6 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 800eb36:	781d      	ldrb	r5, [r3, #0]
 800eb38:	461a      	mov	r2, r3
 800eb3a:	2d2f      	cmp	r5, #47	; 0x2f
 800eb3c:	4670      	mov	r0, lr
 800eb3e:	f103 0301 	add.w	r3, r3, #1
 800eb42:	f10e 0e01 	add.w	lr, lr, #1
 800eb46:	d8da      	bhi.n	800eafe <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 800eb48:	4281      	cmp	r1, r0
 800eb4a:	d8f4      	bhi.n	800eb36 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800eb4c:	2d22      	cmp	r5, #34	; 0x22
 800eb4e:	bf08      	it	eq
 800eb50:	461a      	moveq	r2, r3
 800eb52:	4610      	mov	r0, r2
 800eb54:	f810 5b01 	ldrb.w	r5, [r0], #1
 800eb58:	f10e 0301 	add.w	r3, lr, #1
 800eb5c:	2d22      	cmp	r5, #34	; 0x22
 800eb5e:	d0d0      	beq.n	800eb02 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800eb60:	2d2c      	cmp	r5, #44	; 0x2c
 800eb62:	d0ce      	beq.n	800eb02 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800eb64:	2d7d      	cmp	r5, #125	; 0x7d
 800eb66:	d0cc      	beq.n	800eb02 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800eb68:	4571      	cmp	r1, lr
 800eb6a:	d9ce      	bls.n	800eb0a <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 800eb6c:	f1a5 0e20 	sub.w	lr, r5, #32
 800eb70:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 800eb74:	d803      	bhi.n	800eb7e <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 800eb76:	4602      	mov	r2, r0
 800eb78:	f806 5b01 	strb.w	r5, [r6], #1
 800eb7c:	3401      	adds	r4, #1
 800eb7e:	469e      	mov	lr, r3
 800eb80:	e7e7      	b.n	800eb52 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

0800eb84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800eb84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb88:	6002      	str	r2, [r0, #0]
 800eb8a:	4614      	mov	r4, r2
 800eb8c:	2200      	movs	r2, #0
 800eb8e:	4606      	mov	r6, r0
 800eb90:	460f      	mov	r7, r1
 800eb92:	80c2      	strh	r2, [r0, #6]
 800eb94:	4a1b      	ldr	r2, [pc, #108]	; (800ec04 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800eb96:	8083      	strh	r3, [r0, #4]
 800eb98:	7810      	ldrb	r0, [r2, #0]
 800eb9a:	f000 0001 	and.w	r0, r0, #1
 800eb9e:	7230      	strb	r0, [r6, #8]
 800eba0:	463d      	mov	r5, r7
 800eba2:	782a      	ldrb	r2, [r5, #0]
 800eba4:	3701      	adds	r7, #1
 800eba6:	2a00      	cmp	r2, #0
 800eba8:	d1fa      	bne.n	800eba0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800ebaa:	1a6d      	subs	r5, r5, r1
 800ebac:	b29b      	uxth	r3, r3
 800ebae:	b1d0      	cbz	r0, 800ebe6 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800ebb0:	1d2f      	adds	r7, r5, #4
 800ebb2:	429f      	cmp	r7, r3
 800ebb4:	d814      	bhi.n	800ebe0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ebb6:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800ebba:	f04f 0922 	mov.w	r9, #34	; 0x22
 800ebbe:	462a      	mov	r2, r5
 800ebc0:	f884 8000 	strb.w	r8, [r4]
 800ebc4:	f884 9001 	strb.w	r9, [r4, #1]
 800ebc8:	1ca0      	adds	r0, r4, #2
 800ebca:	f000 fe70 	bl	800f8ae <memmove>
 800ebce:	223a      	movs	r2, #58	; 0x3a
 800ebd0:	1963      	adds	r3, r4, r5
 800ebd2:	3505      	adds	r5, #5
 800ebd4:	f883 9002 	strb.w	r9, [r3, #2]
 800ebd8:	70da      	strb	r2, [r3, #3]
 800ebda:	80f5      	strh	r5, [r6, #6]
 800ebdc:	f804 8007 	strb.w	r8, [r4, r7]
 800ebe0:	4630      	mov	r0, r6
 800ebe2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ebe6:	1caf      	adds	r7, r5, #2
 800ebe8:	429f      	cmp	r7, r3
 800ebea:	d8f9      	bhi.n	800ebe0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ebec:	4620      	mov	r0, r4
 800ebee:	2323      	movs	r3, #35	; 0x23
 800ebf0:	462a      	mov	r2, r5
 800ebf2:	f800 3b01 	strb.w	r3, [r0], #1
 800ebf6:	f000 fe5a 	bl	800f8ae <memmove>
 800ebfa:	230a      	movs	r3, #10
 800ebfc:	442c      	add	r4, r5
 800ebfe:	7063      	strb	r3, [r4, #1]
 800ec00:	80f7      	strh	r7, [r6, #6]
 800ec02:	e7ed      	b.n	800ebe0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800ec04:	20009ac8 	andcs	r9, r0, r8, asr #21

0800ec08 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800ec08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec0a:	469c      	mov	ip, r3
 800ec0c:	8885      	ldrh	r5, [r0, #4]
 800ec0e:	88c3      	ldrh	r3, [r0, #6]
 800ec10:	b085      	sub	sp, #20
 800ec12:	42ab      	cmp	r3, r5
 800ec14:	d302      	bcc.n	800ec1c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800ec16:	2000      	movs	r0, #0
 800ec18:	b005      	add	sp, #20
 800ec1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec1c:	4604      	mov	r4, r0
 800ec1e:	6800      	ldr	r0, [r0, #0]
 800ec20:	1aed      	subs	r5, r5, r3
 800ec22:	4418      	add	r0, r3
 800ec24:	b2d6      	uxtb	r6, r2
 800ec26:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800ec2a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800ec2e:	f894 e008 	ldrb.w	lr, [r4, #8]
 800ec32:	0e12      	lsrs	r2, r2, #24
 800ec34:	f1bc 0f00 	cmp.w	ip, #0
 800ec38:	d109      	bne.n	800ec4e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800ec3a:	f1be 0f00 	cmp.w	lr, #0
 800ec3e:	d109      	bne.n	800ec54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800ec40:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800ec44:	e9cd 6700 	strd	r6, r7, [sp]
 800ec48:	460b      	mov	r3, r1
 800ec4a:	4a0e      	ldr	r2, [pc, #56]	; (800ec84 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800ec4c:	e008      	b.n	800ec60 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800ec4e:	f1be 0f00 	cmp.w	lr, #0
 800ec52:	d00f      	beq.n	800ec74 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800ec54:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800ec58:	460b      	mov	r3, r1
 800ec5a:	e9cd 6700 	strd	r6, r7, [sp]
 800ec5e:	4a0a      	ldr	r2, [pc, #40]	; (800ec88 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800ec60:	4629      	mov	r1, r5
 800ec62:	f001 f885 	bl	800fd70 <snprintf>
 800ec66:	4285      	cmp	r5, r0
 800ec68:	dbd5      	blt.n	800ec16 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800ec6a:	88e3      	ldrh	r3, [r4, #6]
 800ec6c:	4403      	add	r3, r0
 800ec6e:	80e3      	strh	r3, [r4, #6]
 800ec70:	2001      	movs	r0, #1
 800ec72:	e7d1      	b.n	800ec18 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800ec74:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800ec78:	e9cd 6700 	strd	r6, r7, [sp]
 800ec7c:	460b      	mov	r3, r1
 800ec7e:	4a03      	ldr	r2, [pc, #12]	; (800ec8c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800ec80:	e7ee      	b.n	800ec60 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800ec82:	bf00      	nop
 800ec84:	0801363b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, ip, sp}
 800ec88:	08013627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, ip, sp}
 800ec8c:	0801363c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, ip, sp}

0800ec90 <PropertiesBuilder::AddComment(char const*)>:
 800ec90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ec92:	7a06      	ldrb	r6, [r0, #8]
 800ec94:	b996      	cbnz	r6, 800ecbc <PropertiesBuilder::AddComment(char const*)+0x2c>
 800ec96:	4604      	mov	r4, r0
 800ec98:	88c0      	ldrh	r0, [r0, #6]
 800ec9a:	88a5      	ldrh	r5, [r4, #4]
 800ec9c:	42a8      	cmp	r0, r5
 800ec9e:	d20d      	bcs.n	800ecbc <PropertiesBuilder::AddComment(char const*)+0x2c>
 800eca0:	6827      	ldr	r7, [r4, #0]
 800eca2:	1a2d      	subs	r5, r5, r0
 800eca4:	460b      	mov	r3, r1
 800eca6:	4a06      	ldr	r2, [pc, #24]	; (800ecc0 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800eca8:	4629      	mov	r1, r5
 800ecaa:	4438      	add	r0, r7
 800ecac:	f001 f860 	bl	800fd70 <snprintf>
 800ecb0:	4285      	cmp	r5, r0
 800ecb2:	bfa1      	itttt	ge
 800ecb4:	2601      	movge	r6, #1
 800ecb6:	88e3      	ldrhge	r3, [r4, #6]
 800ecb8:	18c0      	addge	r0, r0, r3
 800ecba:	80e0      	strhge	r0, [r4, #6]
 800ecbc:	4630      	mov	r0, r6
 800ecbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ecc0:	0801364c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, sp}

0800ecc4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800ecc4:	e9c0 1200 	strd	r1, r2, [r0]
 800ecc8:	4770      	bx	lr

0800ecca <ReadConfigFile::~ReadConfigFile()>:
 800ecca:	4770      	bx	lr

0800eccc <ReadConfigFile::Read(char const*, unsigned int)>:
 800eccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ecd0:	4606      	mov	r6, r0
 800ecd2:	460d      	mov	r5, r1
 800ecd4:	4614      	mov	r4, r2
 800ecd6:	f04f 0800 	mov.w	r8, #0
 800ecda:	b090      	sub	sp, #64	; 0x40
 800ecdc:	b33c      	cbz	r4, 800ed2e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ecde:	466b      	mov	r3, sp
 800ece0:	462a      	mov	r2, r5
 800ece2:	4619      	mov	r1, r3
 800ece4:	7817      	ldrb	r7, [r2, #0]
 800ece6:	4610      	mov	r0, r2
 800ece8:	2f0d      	cmp	r7, #13
 800ecea:	f102 0201 	add.w	r2, r2, #1
 800ecee:	d013      	beq.n	800ed18 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ecf0:	2f0a      	cmp	r7, #10
 800ecf2:	d011      	beq.n	800ed18 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ecf4:	f803 7b01 	strb.w	r7, [r3], #1
 800ecf8:	1a58      	subs	r0, r3, r1
 800ecfa:	283f      	cmp	r0, #63	; 0x3f
 800ecfc:	4615      	mov	r5, r2
 800ecfe:	dc16      	bgt.n	800ed2e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ed00:	3c01      	subs	r4, #1
 800ed02:	d1ef      	bne.n	800ece4 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 800ed04:	f89d 2000 	ldrb.w	r2, [sp]
 800ed08:	2a60      	cmp	r2, #96	; 0x60
 800ed0a:	d9e7      	bls.n	800ecdc <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ed0c:	f883 8000 	strb.w	r8, [r3]
 800ed10:	e9d6 3000 	ldrd	r3, r0, [r6]
 800ed14:	4798      	blx	r3
 800ed16:	e7e1      	b.n	800ecdc <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ed18:	4605      	mov	r5, r0
 800ed1a:	2c00      	cmp	r4, #0
 800ed1c:	d0f2      	beq.n	800ed04 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800ed1e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ed22:	2a0d      	cmp	r2, #13
 800ed24:	d001      	beq.n	800ed2a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ed26:	2a0a      	cmp	r2, #10
 800ed28:	d1ec      	bne.n	800ed04 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800ed2a:	3c01      	subs	r4, #1
 800ed2c:	e7f4      	b.n	800ed18 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ed2e:	b010      	add	sp, #64	; 0x40
 800ed30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed34 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800ed34:	b570      	push	{r4, r5, r6, lr}
 800ed36:	4615      	mov	r5, r2
 800ed38:	461c      	mov	r4, r3
 800ed3a:	f000 f88f 	bl	800ee5c <Sscan::checkName(char const*, char const*)>
 800ed3e:	b160      	cbz	r0, 800ed5a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 800ed40:	2100      	movs	r1, #0
 800ed42:	5c43      	ldrb	r3, [r0, r1]
 800ed44:	6826      	ldr	r6, [r4, #0]
 800ed46:	b28a      	uxth	r2, r1
 800ed48:	b123      	cbz	r3, 800ed54 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ed4a:	42b2      	cmp	r2, r6
 800ed4c:	d207      	bcs.n	800ed5e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 800ed4e:	546b      	strb	r3, [r5, r1]
 800ed50:	3101      	adds	r1, #1
 800ed52:	e7f6      	b.n	800ed42 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800ed54:	2000      	movs	r0, #0
 800ed56:	6022      	str	r2, [r4, #0]
 800ed58:	bd70      	pop	{r4, r5, r6, pc}
 800ed5a:	2001      	movs	r0, #1
 800ed5c:	e7fc      	b.n	800ed58 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 800ed5e:	2b0a      	cmp	r3, #10
 800ed60:	d0f8      	beq.n	800ed54 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ed62:	2002      	movs	r0, #2
 800ed64:	e7f8      	b.n	800ed58 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0800ed66 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800ed66:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ed68:	4615      	mov	r5, r2
 800ed6a:	f000 f877 	bl	800ee5c <Sscan::checkName(char const*, char const*)>
 800ed6e:	b3c0      	cbz	r0, 800ede2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 800ed70:	2400      	movs	r4, #0
 800ed72:	270a      	movs	r7, #10
 800ed74:	ae01      	add	r6, sp, #4
 800ed76:	4603      	mov	r3, r0
 800ed78:	2100      	movs	r1, #0
 800ed7a:	f100 0c04 	add.w	ip, r0, #4
 800ed7e:	4618      	mov	r0, r3
 800ed80:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ed84:	2a2e      	cmp	r2, #46	; 0x2e
 800ed86:	d00e      	beq.n	800eda6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800ed88:	b16a      	cbz	r2, 800eda6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800ed8a:	4560      	cmp	r0, ip
 800ed8c:	d102      	bne.n	800ed94 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 800ed8e:	2002      	movs	r0, #2
 800ed90:	b003      	add	sp, #12
 800ed92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed94:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ed98:	2b09      	cmp	r3, #9
 800ed9a:	d8f8      	bhi.n	800ed8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800ed9c:	fb07 2101 	mla	r1, r7, r1, r2
 800eda0:	4603      	mov	r3, r0
 800eda2:	3930      	subs	r1, #48	; 0x30
 800eda4:	e7eb      	b.n	800ed7e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 800eda6:	29ff      	cmp	r1, #255	; 0xff
 800eda8:	d8f1      	bhi.n	800ed8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800edaa:	3401      	adds	r4, #1
 800edac:	2c03      	cmp	r4, #3
 800edae:	f806 1b01 	strb.w	r1, [r6], #1
 800edb2:	d1e0      	bne.n	800ed76 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 800edb4:	2400      	movs	r4, #0
 800edb6:	220a      	movs	r2, #10
 800edb8:	1d1e      	adds	r6, r3, #4
 800edba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800edbe:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800edc2:	d007      	beq.n	800edd4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 800edc4:	429e      	cmp	r6, r3
 800edc6:	d0e2      	beq.n	800ed8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800edc8:	3930      	subs	r1, #48	; 0x30
 800edca:	2909      	cmp	r1, #9
 800edcc:	d8df      	bhi.n	800ed8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800edce:	fb02 1404 	mla	r4, r2, r4, r1
 800edd2:	e7f2      	b.n	800edba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800edd4:	2cff      	cmp	r4, #255	; 0xff
 800edd6:	d8da      	bhi.n	800ed8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800edd8:	f88d 4007 	strb.w	r4, [sp, #7]
 800eddc:	9b01      	ldr	r3, [sp, #4]
 800edde:	602b      	str	r3, [r5, #0]
 800ede0:	e7d6      	b.n	800ed90 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 800ede2:	2001      	movs	r0, #1
 800ede4:	e7d4      	b.n	800ed90 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

0800ede6 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800ede6:	b538      	push	{r3, r4, r5, lr}
 800ede8:	4615      	mov	r5, r2
 800edea:	f000 f837 	bl	800ee5c <Sscan::checkName(char const*, char const*)>
 800edee:	b1a0      	cbz	r0, 800ee1a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800edf0:	4604      	mov	r4, r0
 800edf2:	2100      	movs	r1, #0
 800edf4:	220a      	movs	r2, #10
 800edf6:	7823      	ldrb	r3, [r4, #0]
 800edf8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800edfc:	2809      	cmp	r0, #9
 800edfe:	d80e      	bhi.n	800ee1e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ee00:	fb02 3101 	mla	r1, r2, r1, r3
 800ee04:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ee08:	3930      	subs	r1, #48	; 0x30
 800ee0a:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ee0e:	d1f2      	bne.n	800edf6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800ee10:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ee14:	d203      	bcs.n	800ee1e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800ee16:	8029      	strh	r1, [r5, #0]
 800ee18:	bd38      	pop	{r3, r4, r5, pc}
 800ee1a:	2001      	movs	r0, #1
 800ee1c:	e7fc      	b.n	800ee18 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800ee1e:	2002      	movs	r0, #2
 800ee20:	e7fa      	b.n	800ee18 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800ee22 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800ee22:	b538      	push	{r3, r4, r5, lr}
 800ee24:	4615      	mov	r5, r2
 800ee26:	f000 f819 	bl	800ee5c <Sscan::checkName(char const*, char const*)>
 800ee2a:	b198      	cbz	r0, 800ee54 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ee2c:	4604      	mov	r4, r0
 800ee2e:	2100      	movs	r1, #0
 800ee30:	220a      	movs	r2, #10
 800ee32:	7823      	ldrb	r3, [r4, #0]
 800ee34:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800ee38:	2809      	cmp	r0, #9
 800ee3a:	d80d      	bhi.n	800ee58 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ee3c:	fb02 3101 	mla	r1, r2, r1, r3
 800ee40:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ee44:	3930      	subs	r1, #48	; 0x30
 800ee46:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800ee4a:	d1f2      	bne.n	800ee32 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800ee4c:	29ff      	cmp	r1, #255	; 0xff
 800ee4e:	d803      	bhi.n	800ee58 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800ee50:	7029      	strb	r1, [r5, #0]
 800ee52:	bd38      	pop	{r3, r4, r5, pc}
 800ee54:	2001      	movs	r0, #1
 800ee56:	e7fc      	b.n	800ee52 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800ee58:	2002      	movs	r0, #2
 800ee5a:	e7fa      	b.n	800ee52 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800ee5c <Sscan::checkName(char const*, char const*)>:
 800ee5c:	4603      	mov	r3, r0
 800ee5e:	b510      	push	{r4, lr}
 800ee60:	3901      	subs	r1, #1
 800ee62:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ee66:	461c      	mov	r4, r3
 800ee68:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ee6c:	b120      	cbz	r0, 800ee78 <Sscan::checkName(char const*, char const*)+0x1c>
 800ee6e:	b10a      	cbz	r2, 800ee74 <Sscan::checkName(char const*, char const*)+0x18>
 800ee70:	4290      	cmp	r0, r2
 800ee72:	d0f6      	beq.n	800ee62 <Sscan::checkName(char const*, char const*)+0x6>
 800ee74:	2000      	movs	r0, #0
 800ee76:	e006      	b.n	800ee86 <Sscan::checkName(char const*, char const*)+0x2a>
 800ee78:	2a3d      	cmp	r2, #61	; 0x3d
 800ee7a:	d104      	bne.n	800ee86 <Sscan::checkName(char const*, char const*)+0x2a>
 800ee7c:	7860      	ldrb	r0, [r4, #1]
 800ee7e:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800ee82:	d000      	beq.n	800ee86 <Sscan::checkName(char const*, char const*)+0x2a>
 800ee84:	1c60      	adds	r0, r4, #1
 800ee86:	bd10      	pop	{r4, pc}

0800ee88 <LightSet::GetDmxStartAddress()>:
 800ee88:	2001      	movs	r0, #1
 800ee8a:	4770      	bx	lr

0800ee8c <LightSet::GetDmxFootprint()>:
 800ee8c:	f44f 7000 	mov.w	r0, #512	; 0x200
 800ee90:	4770      	bx	lr

0800ee92 <LightSet::SetDmxStartAddress(unsigned short)>:
 800ee92:	2000      	movs	r0, #0
 800ee94:	4770      	bx	lr

0800ee96 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800ee96:	2300      	movs	r3, #0
 800ee98:	2001      	movs	r0, #1
 800ee9a:	7093      	strb	r3, [r2, #2]
 800ee9c:	8010      	strh	r0, [r2, #0]
 800ee9e:	4770      	bx	lr

0800eea0 <Display::PrintInfo() [clone .isra.0]>:
 800eea0:	b910      	cbnz	r0, 800eea8 <Display::PrintInfo() [clone .isra.0]+0x8>
 800eea2:	4803      	ldr	r0, [pc, #12]	; (800eeb0 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800eea4:	f000 bf8c 	b.w	800fdc0 <puts>
 800eea8:	6803      	ldr	r3, [r0, #0]
 800eeaa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eeac:	4718      	bx	r3
 800eeae:	bf00      	nop
 800eeb0:	0801373f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, ip, sp}

0800eeb4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800eeb4:	b513      	push	{r0, r1, r4, lr}
 800eeb6:	4604      	mov	r4, r0
 800eeb8:	0a13      	lsrs	r3, r2, #8
 800eeba:	7800      	ldrb	r0, [r0, #0]
 800eebc:	f88d 1004 	strb.w	r1, [sp, #4]
 800eec0:	f88d 3005 	strb.w	r3, [sp, #5]
 800eec4:	f88d 2006 	strb.w	r2, [sp, #6]
 800eec8:	f001 ff9e 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800eecc:	6860      	ldr	r0, [r4, #4]
 800eece:	f001 ff93 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 800eed2:	2103      	movs	r1, #3
 800eed4:	a801      	add	r0, sp, #4
 800eed6:	f001 ff9d 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800eeda:	b002      	add	sp, #8
 800eedc:	bd10      	pop	{r4, pc}

0800eede <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800eede:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eee0:	460d      	mov	r5, r1
 800eee2:	4604      	mov	r4, r0
 800eee4:	f001 ff90 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800eee8:	4628      	mov	r0, r5
 800eeea:	f001 ff85 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 800eeee:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800eef2:	2b07      	cmp	r3, #7
 800eef4:	d902      	bls.n	800eefc <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800eef6:	3c50      	subs	r4, #80	; 0x50
 800eef8:	2c0f      	cmp	r4, #15
 800eefa:	d809      	bhi.n	800ef10 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800eefc:	2101      	movs	r1, #1
 800eefe:	f10d 0007 	add.w	r0, sp, #7
 800ef02:	f001 ffed 	bl	8010ee0 <gd32_i2c_read(char*, unsigned int)>
 800ef06:	fab0 f080 	clz	r0, r0
 800ef0a:	0940      	lsrs	r0, r0, #5
 800ef0c:	b003      	add	sp, #12
 800ef0e:	bd30      	pop	{r4, r5, pc}
 800ef10:	2100      	movs	r1, #0
 800ef12:	4608      	mov	r0, r1
 800ef14:	f001 ff7e 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800ef18:	e7f5      	b.n	800ef06 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800ef1a <Display::Detect7Segment()>:
 800ef1a:	b538      	push	{r3, r4, r5, lr}
 800ef1c:	68c1      	ldr	r1, [r0, #12]
 800ef1e:	4604      	mov	r4, r0
 800ef20:	7a00      	ldrb	r0, [r0, #8]
 800ef22:	f7ff ffdc 	bl	800eede <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800ef26:	7460      	strb	r0, [r4, #17]
 800ef28:	b170      	cbz	r0, 800ef48 <Display::Detect7Segment()+0x2e>
 800ef2a:	2200      	movs	r2, #0
 800ef2c:	f104 0508 	add.w	r5, r4, #8
 800ef30:	4611      	mov	r1, r2
 800ef32:	4628      	mov	r0, r5
 800ef34:	f7ff ffbe 	bl	800eeb4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ef38:	7c63      	ldrb	r3, [r4, #17]
 800ef3a:	b12b      	cbz	r3, 800ef48 <Display::Detect7Segment()+0x2e>
 800ef3c:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800ef40:	2112      	movs	r1, #18
 800ef42:	4628      	mov	r0, r5
 800ef44:	f7ff ffb6 	bl	800eeb4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800ef48:	bd38      	pop	{r3, r4, r5, pc}

0800ef4a <Display::Detect(display::Type)>:
 800ef4a:	2902      	cmp	r1, #2
 800ef4c:	b538      	push	{r3, r4, r5, lr}
 800ef4e:	4604      	mov	r4, r0
 800ef50:	d014      	beq.n	800ef7c <Display::Detect(display::Type)+0x32>
 800ef52:	2904      	cmp	r1, #4
 800ef54:	d01b      	beq.n	800ef8e <Display::Detect(display::Type)+0x44>
 800ef56:	69a0      	ldr	r0, [r4, #24]
 800ef58:	b168      	cbz	r0, 800ef76 <Display::Detect(display::Type)+0x2c>
 800ef5a:	6803      	ldr	r3, [r0, #0]
 800ef5c:	689b      	ldr	r3, [r3, #8]
 800ef5e:	4798      	blx	r3
 800ef60:	4603      	mov	r3, r0
 800ef62:	69a0      	ldr	r0, [r4, #24]
 800ef64:	b9ab      	cbnz	r3, 800ef92 <Display::Detect(display::Type)+0x48>
 800ef66:	b110      	cbz	r0, 800ef6e <Display::Detect(display::Type)+0x24>
 800ef68:	6803      	ldr	r3, [r0, #0]
 800ef6a:	685b      	ldr	r3, [r3, #4]
 800ef6c:	4798      	blx	r3
 800ef6e:	2300      	movs	r3, #0
 800ef70:	61a3      	str	r3, [r4, #24]
 800ef72:	2304      	movs	r3, #4
 800ef74:	6023      	str	r3, [r4, #0]
 800ef76:	2300      	movs	r3, #0
 800ef78:	6163      	str	r3, [r4, #20]
 800ef7a:	e010      	b.n	800ef9e <Display::Detect(display::Type)+0x54>
 800ef7c:	2018      	movs	r0, #24
 800ef7e:	f000 fbd7 	bl	800f730 <operator new(unsigned int)>
 800ef82:	4605      	mov	r5, r0
 800ef84:	2100      	movs	r1, #0
 800ef86:	f000 f8a3 	bl	800f0d0 <Ssd1306::Ssd1306(TOledPanel)>
 800ef8a:	61a5      	str	r5, [r4, #24]
 800ef8c:	e7e3      	b.n	800ef56 <Display::Detect(display::Type)+0xc>
 800ef8e:	6001      	str	r1, [r0, #0]
 800ef90:	e7e1      	b.n	800ef56 <Display::Detect(display::Type)+0xc>
 800ef92:	6803      	ldr	r3, [r0, #0]
 800ef94:	68db      	ldr	r3, [r3, #12]
 800ef96:	4798      	blx	r3
 800ef98:	69a3      	ldr	r3, [r4, #24]
 800ef9a:	2b00      	cmp	r3, #0
 800ef9c:	d0eb      	beq.n	800ef76 <Display::Detect(display::Type)+0x2c>
 800ef9e:	bd38      	pop	{r3, r4, r5, pc}

0800efa0 <Display::Display()>:
 800efa0:	2304      	movs	r3, #4
 800efa2:	b510      	push	{r4, lr}
 800efa4:	6003      	str	r3, [r0, #0]
 800efa6:	4b0f      	ldr	r3, [pc, #60]	; (800efe4 <Display::Display()+0x44>)
 800efa8:	4604      	mov	r4, r0
 800efaa:	681b      	ldr	r3, [r3, #0]
 800efac:	4a0e      	ldr	r2, [pc, #56]	; (800efe8 <Display::Display()+0x48>)
 800efae:	6043      	str	r3, [r0, #4]
 800efb0:	2321      	movs	r3, #33	; 0x21
 800efb2:	7203      	strb	r3, [r0, #8]
 800efb4:	4b0d      	ldr	r3, [pc, #52]	; (800efec <Display::Display()+0x4c>)
 800efb6:	2102      	movs	r1, #2
 800efb8:	60c3      	str	r3, [r0, #12]
 800efba:	2300      	movs	r3, #0
 800efbc:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800efc0:	8203      	strh	r3, [r0, #16]
 800efc2:	4b0b      	ldr	r3, [pc, #44]	; (800eff0 <Display::Display()+0x50>)
 800efc4:	6018      	str	r0, [r3, #0]
 800efc6:	f7ff ffc0 	bl	800ef4a <Display::Detect(display::Type)>
 800efca:	4620      	mov	r0, r4
 800efcc:	f7ff ffa5 	bl	800ef1a <Display::Detect7Segment()>
 800efd0:	69a3      	ldr	r3, [r4, #24]
 800efd2:	b10b      	cbz	r3, 800efd8 <Display::Display()+0x38>
 800efd4:	f000 f80e 	bl	800eff4 <display::timeout::gpio_init()>
 800efd8:	69a0      	ldr	r0, [r4, #24]
 800efda:	f7ff ff61 	bl	800eea0 <Display::PrintInfo() [clone .isra.0]>
 800efde:	4620      	mov	r0, r4
 800efe0:	bd10      	pop	{r4, pc}
 800efe2:	bf00      	nop
 800efe4:	20009bd4 	ldrdcs	r9, [r0], -r4
 800efe8:	000493e0 	andeq	r9, r4, r0, ror #7
 800efec:	00061a80 	andeq	r1, r6, r0, lsl #21
 800eff0:	20009acc 	andcs	r9, r0, ip, asr #21

0800eff4 <display::timeout::gpio_init()>:
 800eff4:	4770      	bx	lr

0800eff6 <display::timeout::gpio_renew()>:
 800eff6:	2000      	movs	r0, #0
 800eff8:	4770      	bx	lr

0800effa <Ssd1306::~Ssd1306()>:
 800effa:	4770      	bx	lr

0800effc <Ssd1306::SetCursor(unsigned int)>:
 800effc:	4770      	bx	lr
	...

0800f000 <Ssd1306::PrintInfo()>:
 800f000:	b410      	push	{r4}
 800f002:	4906      	ldr	r1, [pc, #24]	; (800f01c <Ssd1306::PrintInfo()+0x1c>)
 800f004:	7c44      	ldrb	r4, [r0, #17]
 800f006:	7903      	ldrb	r3, [r0, #4]
 800f008:	7942      	ldrb	r2, [r0, #5]
 800f00a:	4805      	ldr	r0, [pc, #20]	; (800f020 <Ssd1306::PrintInfo()+0x20>)
 800f00c:	2c00      	cmp	r4, #0
 800f00e:	bf08      	it	eq
 800f010:	4601      	moveq	r1, r0
 800f012:	4804      	ldr	r0, [pc, #16]	; (800f024 <Ssd1306::PrintInfo()+0x24>)
 800f014:	bc10      	pop	{r4}
 800f016:	f000 be83 	b.w	800fd20 <printf>
 800f01a:	bf00      	nop
 800f01c:	08013750 	stmdaeq	r1, {r4, r6, r8, r9, sl, ip, sp}
 800f020:	08013757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, ip, sp}
 800f024:	0801375f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp}

0800f028 <Ssd1306::~Ssd1306()>:
 800f028:	b510      	push	{r4, lr}
 800f02a:	4604      	mov	r4, r0
 800f02c:	f000 fb7c 	bl	800f728 <operator delete(void*)>
 800f030:	4620      	mov	r0, r4
 800f032:	bd10      	pop	{r4, pc}

0800f034 <HAL_I2C::Setup()>:
 800f034:	b510      	push	{r4, lr}
 800f036:	4604      	mov	r4, r0
 800f038:	7800      	ldrb	r0, [r0, #0]
 800f03a:	f001 fee5 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800f03e:	6860      	ldr	r0, [r4, #4]
 800f040:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f044:	f001 bed8 	b.w	8010df8 <gd32_i2c_set_baudrate(unsigned int)>

0800f048 <Ssd1306::PutChar(int)>:
 800f048:	b510      	push	{r4, lr}
 800f04a:	f1a1 0420 	sub.w	r4, r1, #32
 800f04e:	2c5f      	cmp	r4, #95	; 0x5f
 800f050:	bf88      	it	hi
 800f052:	2400      	movhi	r4, #0
 800f054:	3008      	adds	r0, #8
 800f056:	f7ff ffed 	bl	800f034 <HAL_I2C::Setup()>
 800f05a:	4804      	ldr	r0, [pc, #16]	; (800f06c <Ssd1306::PutChar(int)+0x24>)
 800f05c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800f060:	4420      	add	r0, r4
 800f062:	2107      	movs	r1, #7
 800f064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f068:	f001 bed4 	b.w	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f06c:	08013774 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, ip, sp}

0800f070 <Ssd1306::PutString(char const*)>:
 800f070:	b538      	push	{r3, r4, r5, lr}
 800f072:	4605      	mov	r5, r0
 800f074:	1e4c      	subs	r4, r1, #1
 800f076:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800f07a:	b119      	cbz	r1, 800f084 <Ssd1306::PutString(char const*)+0x14>
 800f07c:	4628      	mov	r0, r5
 800f07e:	f7ff ffe3 	bl	800f048 <Ssd1306::PutChar(int)>
 800f082:	e7f8      	b.n	800f076 <Ssd1306::PutString(char const*)+0x6>
 800f084:	bd38      	pop	{r3, r4, r5, pc}

0800f086 <Ssd1306::Text(char const*, unsigned int)>:
 800f086:	b570      	push	{r4, r5, r6, lr}
 800f088:	7903      	ldrb	r3, [r0, #4]
 800f08a:	4605      	mov	r5, r0
 800f08c:	460c      	mov	r4, r1
 800f08e:	4293      	cmp	r3, r2
 800f090:	bf94      	ite	ls
 800f092:	18ce      	addls	r6, r1, r3
 800f094:	188e      	addhi	r6, r1, r2
 800f096:	42b4      	cmp	r4, r6
 800f098:	d005      	beq.n	800f0a6 <Ssd1306::Text(char const*, unsigned int)+0x20>
 800f09a:	4628      	mov	r0, r5
 800f09c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f0a0:	f7ff ffd2 	bl	800f048 <Ssd1306::PutChar(int)>
 800f0a4:	e7f7      	b.n	800f096 <Ssd1306::Text(char const*, unsigned int)+0x10>
 800f0a6:	bd70      	pop	{r4, r5, r6, pc}

0800f0a8 <Ssd1306::InitMembers()>:
 800f0a8:	7c03      	ldrb	r3, [r0, #16]
 800f0aa:	b12b      	cbz	r3, 800f0b8 <Ssd1306::InitMembers()+0x10>
 800f0ac:	3b01      	subs	r3, #1
 800f0ae:	2b01      	cmp	r3, #1
 800f0b0:	d908      	bls.n	800f0c4 <Ssd1306::InitMembers()+0x1c>
 800f0b2:	f640 0315 	movw	r3, #2069	; 0x815
 800f0b6:	e007      	b.n	800f0c8 <Ssd1306::InitMembers()+0x20>
 800f0b8:	f640 0315 	movw	r3, #2069	; 0x815
 800f0bc:	8083      	strh	r3, [r0, #4]
 800f0be:	2308      	movs	r3, #8
 800f0c0:	6143      	str	r3, [r0, #20]
 800f0c2:	4770      	bx	lr
 800f0c4:	f240 4315 	movw	r3, #1045	; 0x415
 800f0c8:	8083      	strh	r3, [r0, #4]
 800f0ca:	2304      	movs	r3, #4
 800f0cc:	e7f8      	b.n	800f0c0 <Ssd1306::InitMembers()+0x18>
	...

0800f0d0 <Ssd1306::Ssd1306(TOledPanel)>:
 800f0d0:	4a08      	ldr	r2, [pc, #32]	; (800f0f4 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800f0d2:	b508      	push	{r3, lr}
 800f0d4:	6002      	str	r2, [r0, #0]
 800f0d6:	227f      	movs	r2, #127	; 0x7f
 800f0d8:	80c2      	strh	r2, [r0, #6]
 800f0da:	223c      	movs	r2, #60	; 0x3c
 800f0dc:	7202      	strb	r2, [r0, #8]
 800f0de:	4a06      	ldr	r2, [pc, #24]	; (800f0f8 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800f0e0:	7401      	strb	r1, [r0, #16]
 800f0e2:	60c2      	str	r2, [r0, #12]
 800f0e4:	2200      	movs	r2, #0
 800f0e6:	7442      	strb	r2, [r0, #17]
 800f0e8:	4a04      	ldr	r2, [pc, #16]	; (800f0fc <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800f0ea:	6010      	str	r0, [r2, #0]
 800f0ec:	f7ff ffdc 	bl	800f0a8 <Ssd1306::InitMembers()>
 800f0f0:	bd08      	pop	{r3, pc}
 800f0f2:	bf00      	nop
 800f0f4:	08013a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, ip, sp}
 800f0f8:	00061a80 	andeq	r1, r6, r0, lsl #21
 800f0fc:	20009b58 	andcs	r9, r0, r8, asr fp

0800f100 <Ssd1306::SendCommand(unsigned char)>:
 800f100:	2300      	movs	r3, #0
 800f102:	b507      	push	{r0, r1, r2, lr}
 800f104:	3008      	adds	r0, #8
 800f106:	f88d 3004 	strb.w	r3, [sp, #4]
 800f10a:	f88d 1005 	strb.w	r1, [sp, #5]
 800f10e:	f7ff ff91 	bl	800f034 <HAL_I2C::Setup()>
 800f112:	2102      	movs	r1, #2
 800f114:	a801      	add	r0, sp, #4
 800f116:	f001 fe7d 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f11a:	b003      	add	sp, #12
 800f11c:	f85d fb04 	ldr.w	pc, [sp], #4

0800f120 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800f120:	2914      	cmp	r1, #20
 800f122:	b570      	push	{r4, r5, r6, lr}
 800f124:	4605      	mov	r5, r0
 800f126:	4616      	mov	r6, r2
 800f128:	d81c      	bhi.n	800f164 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f12a:	7943      	ldrb	r3, [r0, #5]
 800f12c:	4293      	cmp	r3, r2
 800f12e:	d919      	bls.n	800f164 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800f130:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f134:	7c43      	ldrb	r3, [r0, #17]
 800f136:	004c      	lsls	r4, r1, #1
 800f138:	b2e4      	uxtb	r4, r4
 800f13a:	b10b      	cbz	r3, 800f140 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800f13c:	3404      	adds	r4, #4
 800f13e:	b2e4      	uxtb	r4, r4
 800f140:	4628      	mov	r0, r5
 800f142:	f004 010e 	and.w	r1, r4, #14
 800f146:	f7ff ffdb 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f14a:	0921      	lsrs	r1, r4, #4
 800f14c:	4628      	mov	r0, r5
 800f14e:	f041 0110 	orr.w	r1, r1, #16
 800f152:	f7ff ffd5 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f156:	4628      	mov	r0, r5
 800f158:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800f15c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f160:	f7ff bfce 	b.w	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f164:	bd70      	pop	{r4, r5, r6, pc}

0800f166 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800f166:	b570      	push	{r4, r5, r6, lr}
 800f168:	4604      	mov	r4, r0
 800f16a:	4615      	mov	r5, r2
 800f16c:	461e      	mov	r6, r3
 800f16e:	b171      	cbz	r1, 800f18e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800f170:	7943      	ldrb	r3, [r0, #5]
 800f172:	428b      	cmp	r3, r1
 800f174:	d30b      	bcc.n	800f18e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800f176:	3901      	subs	r1, #1
 800f178:	b2ca      	uxtb	r2, r1
 800f17a:	2100      	movs	r1, #0
 800f17c:	f7ff ffd0 	bl	800f120 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f180:	4632      	mov	r2, r6
 800f182:	4629      	mov	r1, r5
 800f184:	4620      	mov	r0, r4
 800f186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f18a:	f7ff bf7c 	b.w	800f086 <Ssd1306::Text(char const*, unsigned int)>
 800f18e:	bd70      	pop	{r4, r5, r6, pc}

0800f190 <Ssd1306::ClearLine(unsigned char)>:
 800f190:	b538      	push	{r3, r4, r5, lr}
 800f192:	4605      	mov	r5, r0
 800f194:	b1b9      	cbz	r1, 800f1c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 800f196:	7943      	ldrb	r3, [r0, #5]
 800f198:	428b      	cmp	r3, r1
 800f19a:	d314      	bcc.n	800f1c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 800f19c:	3901      	subs	r1, #1
 800f19e:	b2cc      	uxtb	r4, r1
 800f1a0:	4622      	mov	r2, r4
 800f1a2:	2100      	movs	r1, #0
 800f1a4:	f7ff ffbc 	bl	800f120 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f1a8:	f105 0008 	add.w	r0, r5, #8
 800f1ac:	f7ff ff42 	bl	800f034 <HAL_I2C::Setup()>
 800f1b0:	2181      	movs	r1, #129	; 0x81
 800f1b2:	4805      	ldr	r0, [pc, #20]	; (800f1c8 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800f1b4:	f001 fe2e 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f1b8:	4622      	mov	r2, r4
 800f1ba:	4628      	mov	r0, r5
 800f1bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f1c0:	2100      	movs	r1, #0
 800f1c2:	f7ff bfad 	b.w	800f120 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800f1c6:	bd38      	pop	{r3, r4, r5, pc}
 800f1c8:	20009ad0 	ldrdcs	r9, [r0], -r0

0800f1cc <Ssd1306::SetSleep(bool)>:
 800f1cc:	b111      	cbz	r1, 800f1d4 <Ssd1306::SetSleep(bool)+0x8>
 800f1ce:	21ae      	movs	r1, #174	; 0xae
 800f1d0:	f7ff bf96 	b.w	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f1d4:	21af      	movs	r1, #175	; 0xaf
 800f1d6:	e7fb      	b.n	800f1d0 <Ssd1306::SetSleep(bool)+0x4>

0800f1d8 <Ssd1306::SetContrast(unsigned char)>:
 800f1d8:	b538      	push	{r3, r4, r5, lr}
 800f1da:	4604      	mov	r4, r0
 800f1dc:	460d      	mov	r5, r1
 800f1de:	7181      	strb	r1, [r0, #6]
 800f1e0:	2181      	movs	r1, #129	; 0x81
 800f1e2:	f7ff ff8d 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f1e6:	4629      	mov	r1, r5
 800f1e8:	4620      	mov	r0, r4
 800f1ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f1ee:	f7ff bf87 	b.w	800f100 <Ssd1306::SendCommand(unsigned char)>

0800f1f2 <Ssd1306::SetFlipVertically(bool)>:
 800f1f2:	b510      	push	{r4, lr}
 800f1f4:	4604      	mov	r4, r0
 800f1f6:	71c1      	strb	r1, [r0, #7]
 800f1f8:	b141      	cbz	r1, 800f20c <Ssd1306::SetFlipVertically(bool)+0x1a>
 800f1fa:	21c0      	movs	r1, #192	; 0xc0
 800f1fc:	f7ff ff80 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f200:	21a0      	movs	r1, #160	; 0xa0
 800f202:	4620      	mov	r0, r4
 800f204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f208:	f7ff bf7a 	b.w	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f20c:	21c8      	movs	r1, #200	; 0xc8
 800f20e:	f7ff ff77 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f212:	21a1      	movs	r1, #161	; 0xa1
 800f214:	e7f5      	b.n	800f202 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800f218 <Ssd1306::CheckSH1106()>:
 800f218:	b570      	push	{r4, r5, r6, lr}
 800f21a:	4604      	mov	r4, r0
 800f21c:	b086      	sub	sp, #24
 800f21e:	2100      	movs	r1, #0
 800f220:	f7ff ff6e 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f224:	2190      	movs	r1, #144	; 0x90
 800f226:	4620      	mov	r0, r4
 800f228:	f7ff ff6a 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f22c:	21b0      	movs	r1, #176	; 0xb0
 800f22e:	4620      	mov	r0, r4
 800f230:	f7ff ff66 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f234:	4b22      	ldr	r3, [pc, #136]	; (800f2c0 <Ssd1306::CheckSH1106()+0xa8>)
 800f236:	f104 0608 	add.w	r6, r4, #8
 800f23a:	6818      	ldr	r0, [r3, #0]
 800f23c:	791b      	ldrb	r3, [r3, #4]
 800f23e:	ad02      	add	r5, sp, #8
 800f240:	9002      	str	r0, [sp, #8]
 800f242:	4630      	mov	r0, r6
 800f244:	712b      	strb	r3, [r5, #4]
 800f246:	f7ff fef5 	bl	800f034 <HAL_I2C::Setup()>
 800f24a:	2105      	movs	r1, #5
 800f24c:	4628      	mov	r0, r5
 800f24e:	f001 fde1 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f252:	2100      	movs	r1, #0
 800f254:	4620      	mov	r0, r4
 800f256:	f7ff ff53 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f25a:	2190      	movs	r1, #144	; 0x90
 800f25c:	4620      	mov	r0, r4
 800f25e:	f7ff ff4f 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f262:	21b0      	movs	r1, #176	; 0xb0
 800f264:	4620      	mov	r0, r4
 800f266:	f7ff ff4b 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f26a:	2300      	movs	r3, #0
 800f26c:	9304      	str	r3, [sp, #16]
 800f26e:	f88d 3014 	strb.w	r3, [sp, #20]
 800f272:	2340      	movs	r3, #64	; 0x40
 800f274:	4630      	mov	r0, r6
 800f276:	f88d 3007 	strb.w	r3, [sp, #7]
 800f27a:	f7ff fedb 	bl	800f034 <HAL_I2C::Setup()>
 800f27e:	2101      	movs	r1, #1
 800f280:	f10d 0007 	add.w	r0, sp, #7
 800f284:	f001 fdc6 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f288:	4630      	mov	r0, r6
 800f28a:	f7ff fed3 	bl	800f034 <HAL_I2C::Setup()>
 800f28e:	2105      	movs	r1, #5
 800f290:	a804      	add	r0, sp, #16
 800f292:	f001 fe25 	bl	8010ee0 <gd32_i2c_read(char*, unsigned int)>
 800f296:	2201      	movs	r2, #1
 800f298:	5cab      	ldrb	r3, [r5, r2]
 800f29a:	a904      	add	r1, sp, #16
 800f29c:	3201      	adds	r2, #1
 800f29e:	4411      	add	r1, r2
 800f2a0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800f2a4:	428b      	cmp	r3, r1
 800f2a6:	d006      	beq.n	800f2b6 <Ssd1306::CheckSH1106()+0x9e>
 800f2a8:	1a5b      	subs	r3, r3, r1
 800f2aa:	fab3 f383 	clz	r3, r3
 800f2ae:	095b      	lsrs	r3, r3, #5
 800f2b0:	7463      	strb	r3, [r4, #17]
 800f2b2:	b006      	add	sp, #24
 800f2b4:	bd70      	pop	{r4, r5, r6, pc}
 800f2b6:	2a05      	cmp	r2, #5
 800f2b8:	d1ee      	bne.n	800f298 <Ssd1306::CheckSH1106()+0x80>
 800f2ba:	2300      	movs	r3, #0
 800f2bc:	e7f5      	b.n	800f2aa <Ssd1306::CheckSH1106()+0x92>
 800f2be:	bf00      	nop
 800f2c0:	0801376b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, ip, sp}

0800f2c4 <Ssd1306::Cls()>:
 800f2c4:	7c43      	ldrb	r3, [r0, #17]
 800f2c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	bf0c      	ite	eq
 800f2ce:	2500      	moveq	r5, #0
 800f2d0:	2504      	movne	r5, #4
 800f2d2:	4604      	mov	r4, r0
 800f2d4:	2600      	movs	r6, #0
 800f2d6:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800f2da:	f045 0810 	orr.w	r8, r5, #16
 800f2de:	b2ff      	uxtb	r7, r7
 800f2e0:	6963      	ldr	r3, [r4, #20]
 800f2e2:	4629      	mov	r1, r5
 800f2e4:	42b3      	cmp	r3, r6
 800f2e6:	4620      	mov	r0, r4
 800f2e8:	d91b      	bls.n	800f322 <Ssd1306::Cls()+0x5e>
 800f2ea:	f7ff ff09 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f2ee:	4641      	mov	r1, r8
 800f2f0:	4620      	mov	r0, r4
 800f2f2:	f7ff ff05 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f2f6:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800f2fa:	4620      	mov	r0, r4
 800f2fc:	b2c9      	uxtb	r1, r1
 800f2fe:	f7ff feff 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f302:	7c23      	ldrb	r3, [r4, #16]
 800f304:	b123      	cbz	r3, 800f310 <Ssd1306::Cls()+0x4c>
 800f306:	3b01      	subs	r3, #1
 800f308:	2b01      	cmp	r3, #1
 800f30a:	d901      	bls.n	800f310 <Ssd1306::Cls()+0x4c>
 800f30c:	3601      	adds	r6, #1
 800f30e:	e7e7      	b.n	800f2e0 <Ssd1306::Cls()+0x1c>
 800f310:	f104 0008 	add.w	r0, r4, #8
 800f314:	f7ff fe8e 	bl	800f034 <HAL_I2C::Setup()>
 800f318:	4639      	mov	r1, r7
 800f31a:	4808      	ldr	r0, [pc, #32]	; (800f33c <Ssd1306::Cls()+0x78>)
 800f31c:	f001 fd7a 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f320:	e7f4      	b.n	800f30c <Ssd1306::Cls()+0x48>
 800f322:	f7ff feed 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f326:	4641      	mov	r1, r8
 800f328:	4620      	mov	r0, r4
 800f32a:	f7ff fee9 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f32e:	4620      	mov	r0, r4
 800f330:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f334:	21b0      	movs	r1, #176	; 0xb0
 800f336:	f7ff bee3 	b.w	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f33a:	bf00      	nop
 800f33c:	20009ad0 	ldrdcs	r9, [r0], -r0

0800f340 <Ssd1306::Start()>:
 800f340:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f342:	7a04      	ldrb	r4, [r0, #8]
 800f344:	68c6      	ldr	r6, [r0, #12]
 800f346:	4605      	mov	r5, r0
 800f348:	4620      	mov	r0, r4
 800f34a:	f001 fd5d 	bl	8010e08 <gd32_i2c_set_address(unsigned char)>
 800f34e:	4630      	mov	r0, r6
 800f350:	f001 fd52 	bl	8010df8 <gd32_i2c_set_baudrate(unsigned int)>
 800f354:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f358:	2b07      	cmp	r3, #7
 800f35a:	d902      	bls.n	800f362 <Ssd1306::Start()+0x22>
 800f35c:	3c50      	subs	r4, #80	; 0x50
 800f35e:	2c0f      	cmp	r4, #15
 800f360:	d80f      	bhi.n	800f382 <Ssd1306::Start()+0x42>
 800f362:	2101      	movs	r1, #1
 800f364:	f10d 0007 	add.w	r0, sp, #7
 800f368:	f001 fdba 	bl	8010ee0 <gd32_i2c_read(char*, unsigned int)>
 800f36c:	fab0 f480 	clz	r4, r0
 800f370:	0964      	lsrs	r4, r4, #5
 800f372:	b35c      	cbz	r4, 800f3cc <Ssd1306::Start()+0x8c>
 800f374:	7c2e      	ldrb	r6, [r5, #16]
 800f376:	b14e      	cbz	r6, 800f38c <Ssd1306::Start()+0x4c>
 800f378:	3e01      	subs	r6, #1
 800f37a:	2e01      	cmp	r6, #1
 800f37c:	d929      	bls.n	800f3d2 <Ssd1306::Start()+0x92>
 800f37e:	2400      	movs	r4, #0
 800f380:	e024      	b.n	800f3cc <Ssd1306::Start()+0x8c>
 800f382:	2100      	movs	r1, #0
 800f384:	4608      	mov	r0, r1
 800f386:	f001 fd45 	bl	8010e14 <gd32_i2c_write(char const*, unsigned int)>
 800f38a:	e7ef      	b.n	800f36c <Ssd1306::Start()+0x2c>
 800f38c:	4f16      	ldr	r7, [pc, #88]	; (800f3e8 <Ssd1306::Start()+0xa8>)
 800f38e:	4628      	mov	r0, r5
 800f390:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f394:	3601      	adds	r6, #1
 800f396:	f7ff feb3 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f39a:	2e18      	cmp	r6, #24
 800f39c:	d1f7      	bne.n	800f38e <Ssd1306::Start()+0x4e>
 800f39e:	2300      	movs	r3, #0
 800f3a0:	4a12      	ldr	r2, [pc, #72]	; (800f3ec <Ssd1306::Start()+0xac>)
 800f3a2:	4618      	mov	r0, r3
 800f3a4:	4611      	mov	r1, r2
 800f3a6:	3301      	adds	r3, #1
 800f3a8:	2b86      	cmp	r3, #134	; 0x86
 800f3aa:	f802 0b01 	strb.w	r0, [r2], #1
 800f3ae:	d1fa      	bne.n	800f3a6 <Ssd1306::Start()+0x66>
 800f3b0:	2340      	movs	r3, #64	; 0x40
 800f3b2:	4628      	mov	r0, r5
 800f3b4:	700b      	strb	r3, [r1, #0]
 800f3b6:	f7ff ff2f 	bl	800f218 <Ssd1306::CheckSH1106()>
 800f3ba:	4628      	mov	r0, r5
 800f3bc:	f7ff ff82 	bl	800f2c4 <Ssd1306::Cls()>
 800f3c0:	21af      	movs	r1, #175	; 0xaf
 800f3c2:	4628      	mov	r0, r5
 800f3c4:	f7ff fe9c 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f3c8:	2301      	movs	r3, #1
 800f3ca:	71eb      	strb	r3, [r5, #7]
 800f3cc:	4620      	mov	r0, r4
 800f3ce:	b003      	add	sp, #12
 800f3d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3d2:	2600      	movs	r6, #0
 800f3d4:	4f06      	ldr	r7, [pc, #24]	; (800f3f0 <Ssd1306::Start()+0xb0>)
 800f3d6:	4628      	mov	r0, r5
 800f3d8:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f3dc:	3601      	adds	r6, #1
 800f3de:	f7ff fe8f 	bl	800f100 <Ssd1306::SendCommand(unsigned char)>
 800f3e2:	2e18      	cmp	r6, #24
 800f3e4:	d1f7      	bne.n	800f3d6 <Ssd1306::Start()+0x96>
 800f3e6:	e7da      	b.n	800f39e <Ssd1306::Start()+0x5e>
 800f3e8:	08013a2c 	stmdaeq	r1, {r2, r3, r5, r9, fp, ip, sp}
 800f3ec:	20009ad0 	ldrdcs	r9, [r0], -r0
 800f3f0:	08013a14 	stmdaeq	r1, {r2, r4, r9, fp, ip, sp}

0800f3f4 <console_putc>:
 800f3f4:	f000 bde6 	b.w	800ffc4 <uart0_putc>

0800f3f8 <console_puts>:
 800f3f8:	f000 be04 	b.w	8010004 <uart0_puts>

0800f3fc <console_set_fg_color>:
 800f3fc:	2807      	cmp	r0, #7
 800f3fe:	d810      	bhi.n	800f422 <console_set_fg_color+0x26>
 800f400:	e8df f000 	tbb	[pc, r0]
 800f404:	0b090704 	bleq	825101c <__exidx_end+0x23d49c>
 800f408:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800f3d4 <Ssd1306::Start()+0x94>
 800f40c:	4806      	ldr	r0, [pc, #24]	; (800f428 <console_set_fg_color+0x2c>)
 800f40e:	f000 bdf9 	b.w	8010004 <uart0_puts>
 800f412:	4806      	ldr	r0, [pc, #24]	; (800f42c <console_set_fg_color+0x30>)
 800f414:	e7fb      	b.n	800f40e <console_set_fg_color+0x12>
 800f416:	4806      	ldr	r0, [pc, #24]	; (800f430 <console_set_fg_color+0x34>)
 800f418:	e7f9      	b.n	800f40e <console_set_fg_color+0x12>
 800f41a:	4806      	ldr	r0, [pc, #24]	; (800f434 <console_set_fg_color+0x38>)
 800f41c:	e7f7      	b.n	800f40e <console_set_fg_color+0x12>
 800f41e:	4806      	ldr	r0, [pc, #24]	; (800f438 <console_set_fg_color+0x3c>)
 800f420:	e7f5      	b.n	800f40e <console_set_fg_color+0x12>
 800f422:	4806      	ldr	r0, [pc, #24]	; (800f43c <console_set_fg_color+0x40>)
 800f424:	e7f3      	b.n	800f40e <console_set_fg_color+0x12>
 800f426:	bf00      	nop
 800f428:	08013a8a 	stmdaeq	r1, {r1, r3, r7, r9, fp, ip, sp}
 800f42c:	08013a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, sp}
 800f430:	08013a96 	stmdaeq	r1, {r1, r2, r4, r7, r9, fp, ip, sp}
 800f434:	08013a9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, fp, ip, sp}
 800f438:	08011d4c 	stmdaeq	r1, {r2, r3, r6, r8, sl, fp, ip}
 800f43c:	08013aa2 	stmdaeq	r1, {r1, r5, r7, r9, fp, ip, sp}

0800f440 <console_error>:
 800f440:	b510      	push	{r4, lr}
 800f442:	4604      	mov	r4, r0
 800f444:	4805      	ldr	r0, [pc, #20]	; (800f45c <console_error+0x1c>)
 800f446:	f000 fddd 	bl	8010004 <uart0_puts>
 800f44a:	4620      	mov	r0, r4
 800f44c:	f000 fdda 	bl	8010004 <uart0_puts>
 800f450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f454:	4802      	ldr	r0, [pc, #8]	; (800f460 <console_error+0x20>)
 800f456:	f000 bdd5 	b.w	8010004 <uart0_puts>
 800f45a:	bf00      	nop
 800f45c:	08013a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, sp}
 800f460:	08011d4c 	stmdaeq	r1, {r2, r3, r6, r8, sl, fp, ip}

0800f464 <console_status>:
 800f464:	b510      	push	{r4, lr}
 800f466:	460c      	mov	r4, r1
 800f468:	b280      	uxth	r0, r0
 800f46a:	f7ff ffc7 	bl	800f3fc <console_set_fg_color>
 800f46e:	4807      	ldr	r0, [pc, #28]	; (800f48c <console_status+0x28>)
 800f470:	f000 fdc8 	bl	8010004 <uart0_puts>
 800f474:	4620      	mov	r0, r4
 800f476:	f000 fdc5 	bl	8010004 <uart0_puts>
 800f47a:	200a      	movs	r0, #10
 800f47c:	f000 fda2 	bl	800ffc4 <uart0_putc>
 800f480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f484:	4802      	ldr	r0, [pc, #8]	; (800f490 <console_status+0x2c>)
 800f486:	f000 bdbd 	b.w	8010004 <uart0_puts>
 800f48a:	bf00      	nop
 800f48c:	08013a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, sp}
 800f490:	08011d4c 	stmdaeq	r1, {r2, r3, r6, r8, sl, fp, ip}

0800f494 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800f494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f498:	4617      	mov	r7, r2
 800f49a:	461e      	mov	r6, r3
 800f49c:	4d14      	ldr	r5, [pc, #80]	; (800f4f0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800f49e:	4b15      	ldr	r3, [pc, #84]	; (800f4f4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800f4a0:	b086      	sub	sp, #24
 800f4a2:	6018      	str	r0, [r3, #0]
 800f4a4:	4604      	mov	r4, r0
 800f4a6:	f105 0803 	add.w	r8, r5, #3
 800f4aa:	2203      	movs	r2, #3
 800f4ac:	4628      	mov	r0, r5
 800f4ae:	f000 f9fe 	bl	800f8ae <memmove>
 800f4b2:	4639      	mov	r1, r7
 800f4b4:	220b      	movs	r2, #11
 800f4b6:	4640      	mov	r0, r8
 800f4b8:	f000 f9f9 	bl	800f8ae <memmove>
 800f4bc:	f105 030e 	add.w	r3, r5, #14
 800f4c0:	4631      	mov	r1, r6
 800f4c2:	2208      	movs	r2, #8
 800f4c4:	4618      	mov	r0, r3
 800f4c6:	f000 f9f2 	bl	800f8ae <memmove>
 800f4ca:	2308      	movs	r3, #8
 800f4cc:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800f4d0:	230b      	movs	r3, #11
 800f4d2:	9302      	str	r3, [sp, #8]
 800f4d4:	4b08      	ldr	r3, [pc, #32]	; (800f4f8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800f4d6:	9005      	str	r0, [sp, #20]
 800f4d8:	e9cd 5300 	strd	r5, r3, [sp]
 800f4dc:	213f      	movs	r1, #63	; 0x3f
 800f4de:	2303      	movs	r3, #3
 800f4e0:	4a06      	ldr	r2, [pc, #24]	; (800f4fc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800f4e2:	4807      	ldr	r0, [pc, #28]	; (800f500 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800f4e4:	f000 fc44 	bl	800fd70 <snprintf>
 800f4e8:	4620      	mov	r0, r4
 800f4ea:	b006      	add	sp, #24
 800f4ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4f0:	20009b5c 	andcs	r9, r0, ip, asr fp
 800f4f4:	20009bb4 			; <UNDEFINED> instruction: 0x20009bb4
 800f4f8:	08011e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip}
 800f4fc:	08013aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp}
 800f500:	20009b72 	andcs	r9, r0, r2, ror fp

0800f504 <FirmwareVersion::Print(char const*)>:
 800f504:	b510      	push	{r4, lr}
 800f506:	460c      	mov	r4, r1
 800f508:	4804      	ldr	r0, [pc, #16]	; (800f51c <FirmwareVersion::Print(char const*)+0x18>)
 800f50a:	f000 fc59 	bl	800fdc0 <puts>
 800f50e:	b124      	cbz	r4, 800f51a <FirmwareVersion::Print(char const*)+0x16>
 800f510:	4620      	mov	r0, r4
 800f512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f516:	f000 bc53 	b.w	800fdc0 <puts>
 800f51a:	bd10      	pop	{r4, pc}
 800f51c:	20009b72 	andcs	r9, r0, r2, ror fp

0800f520 <LedBlink::LedBlink()>:
 800f520:	b538      	push	{r3, r4, r5, lr}
 800f522:	2205      	movs	r2, #5
 800f524:	2300      	movs	r3, #0
 800f526:	e9c0 3200 	strd	r3, r2, [r0]
 800f52a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800f52e:	6083      	str	r3, [r0, #8]
 800f530:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800f534:	6143      	str	r3, [r0, #20]
 800f536:	4b09      	ldr	r3, [pc, #36]	; (800f55c <LedBlink::LedBlink()+0x3c>)
 800f538:	4d09      	ldr	r5, [pc, #36]	; (800f560 <LedBlink::LedBlink()+0x40>)
 800f53a:	4604      	mov	r4, r0
 800f53c:	6018      	str	r0, [r3, #0]
 800f53e:	f240 6004 	movw	r0, #1540	; 0x604
 800f542:	f000 ffdf 	bl	8010504 <rcu_periph_clock_enable>
 800f546:	4628      	mov	r0, r5
 800f548:	2301      	movs	r3, #1
 800f54a:	2203      	movs	r2, #3
 800f54c:	2110      	movs	r1, #16
 800f54e:	f000 ff41 	bl	80103d4 <gpio_init>
 800f552:	2301      	movs	r3, #1
 800f554:	4620      	mov	r0, r4
 800f556:	616b      	str	r3, [r5, #20]
 800f558:	bd38      	pop	{r3, r4, r5, pc}
 800f55a:	bf00      	nop
 800f55c:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f560:	40011000 	andmi	r1, r1, r0

0800f564 <LedBlink::SetMode(ledblink::Mode)>:
 800f564:	6843      	ldr	r3, [r0, #4]
 800f566:	428b      	cmp	r3, r1
 800f568:	d02f      	beq.n	800f5ca <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f56a:	6041      	str	r1, [r0, #4]
 800f56c:	2904      	cmp	r1, #4
 800f56e:	d822      	bhi.n	800f5b6 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800f570:	e8df f001 	tbb	[pc, r1]
 800f574:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800f578:	23ff001d 	mvnscs	r0, #29
 800f57c:	6003      	str	r3, [r0, #0]
 800f57e:	2300      	movs	r3, #0
 800f580:	2201      	movs	r2, #1
 800f582:	60c3      	str	r3, [r0, #12]
 800f584:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f588:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f58c:	611a      	str	r2, [r3, #16]
 800f58e:	6880      	ldr	r0, [r0, #8]
 800f590:	b1d8      	cbz	r0, 800f5ca <LedBlink::SetMode(ledblink::Mode)+0x66>
 800f592:	6803      	ldr	r3, [r0, #0]
 800f594:	689b      	ldr	r3, [r3, #8]
 800f596:	4718      	bx	r3
 800f598:	2301      	movs	r3, #1
 800f59a:	6003      	str	r3, [r0, #0]
 800f59c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f5a0:	60c3      	str	r3, [r0, #12]
 800f5a2:	e7f4      	b.n	800f58e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f5a4:	2303      	movs	r3, #3
 800f5a6:	6003      	str	r3, [r0, #0]
 800f5a8:	f240 134d 	movw	r3, #333	; 0x14d
 800f5ac:	e7f8      	b.n	800f5a0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f5ae:	2305      	movs	r3, #5
 800f5b0:	6003      	str	r3, [r0, #0]
 800f5b2:	23c8      	movs	r3, #200	; 0xc8
 800f5b4:	e7f4      	b.n	800f5a0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800f5b6:	2300      	movs	r3, #0
 800f5b8:	2201      	movs	r2, #1
 800f5ba:	6003      	str	r3, [r0, #0]
 800f5bc:	60c3      	str	r3, [r0, #12]
 800f5be:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f5c2:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800f5c6:	615a      	str	r2, [r3, #20]
 800f5c8:	e7e1      	b.n	800f58e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800f5ca:	4770      	bx	lr

0800f5cc <Hardware::Hardware()>:
 800f5cc:	b570      	push	{r4, r5, r6, lr}
 800f5ce:	2400      	movs	r4, #0
 800f5d0:	4b26      	ldr	r3, [pc, #152]	; (800f66c <Hardware::Hardware()+0xa0>)
 800f5d2:	b090      	sub	sp, #64	; 0x40
 800f5d4:	6004      	str	r4, [r0, #0]
 800f5d6:	7104      	strb	r4, [r0, #4]
 800f5d8:	4e25      	ldr	r6, [pc, #148]	; (800f670 <Hardware::Hardware()+0xa4>)
 800f5da:	6018      	str	r0, [r3, #0]
 800f5dc:	4605      	mov	r5, r0
 800f5de:	f7f7 ff93 	bl	8007508 <console_init>
 800f5e2:	f000 fd1f 	bl	8010024 <systick_config>
 800f5e6:	f001 fdf5 	bl	80111d4 <udelay_init()>
 800f5ea:	f001 fdf1 	bl	80111d0 <micros_init()>
 800f5ee:	f240 7004 	movw	r0, #1796	; 0x704
 800f5f2:	f000 ff87 	bl	8010504 <rcu_periph_clock_enable>
 800f5f6:	4630      	mov	r0, r6
 800f5f8:	f001 f8e0 	bl	80107bc <timer_deinit>
 800f5fc:	236b      	movs	r3, #107	; 0x6b
 800f5fe:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f602:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f606:	a903      	add	r1, sp, #12
 800f608:	4630      	mov	r0, r6
 800f60a:	9305      	str	r3, [sp, #20]
 800f60c:	f001 f938 	bl	8010880 <timer_init>
 800f610:	4630      	mov	r0, r6
 800f612:	f001 f98d 	bl	8010930 <timer_enable>
 800f616:	f001 fb61 	bl	8010cdc <gd32_adc_init()>
 800f61a:	2217      	movs	r2, #23
 800f61c:	2301      	movs	r3, #1
 800f61e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800f622:	237a      	movs	r3, #122	; 0x7a
 800f624:	a807      	add	r0, sp, #28
 800f626:	930c      	str	r3, [sp, #48]	; 0x30
 800f628:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800f62c:	9407      	str	r4, [sp, #28]
 800f62e:	940f      	str	r4, [sp, #60]	; 0x3c
 800f630:	f000 fc1e 	bl	800fe70 <mktime>
 800f634:	4621      	mov	r1, r4
 800f636:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800f63a:	a801      	add	r0, sp, #4
 800f63c:	f000 fc8e 	bl	800ff5c <settimeofday>
 800f640:	f240 701b 	movw	r0, #1819	; 0x71b
 800f644:	f000 ff5e 	bl	8010504 <rcu_periph_clock_enable>
 800f648:	f240 701c 	movw	r0, #1820	; 0x71c
 800f64c:	f000 ff5a 	bl	8010504 <rcu_periph_clock_enable>
 800f650:	f000 ff50 	bl	80104f4 <pmu_backup_write_enable>
 800f654:	f000 fd84 	bl	8010160 <bkp_deinit>
 800f658:	4621      	mov	r1, r4
 800f65a:	2002      	movs	r0, #2
 800f65c:	f000 fd88 	bl	8010170 <bkp_data_write>
 800f660:	f001 fb96 	bl	8010d90 <gd32_i2c_begin()>
 800f664:	4628      	mov	r0, r5
 800f666:	b010      	add	sp, #64	; 0x40
 800f668:	bd70      	pop	{r4, r5, r6, pc}
 800f66a:	bf00      	nop
 800f66c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f670:	40001000 	andmi	r1, r0, r0

0800f674 <Hardware::GetUuid(unsigned char*)>:
 800f674:	4a0c      	ldr	r2, [pc, #48]	; (800f6a8 <Hardware::GetUuid(unsigned char*)+0x34>)
 800f676:	b084      	sub	sp, #16
 800f678:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 800f67c:	9300      	str	r3, [sp, #0]
 800f67e:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 800f682:	9001      	str	r0, [sp, #4]
 800f684:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 800f688:	4403      	add	r3, r0
 800f68a:	4413      	add	r3, r2
 800f68c:	9202      	str	r2, [sp, #8]
 800f68e:	466a      	mov	r2, sp
 800f690:	9303      	str	r3, [sp, #12]
 800f692:	1e4b      	subs	r3, r1, #1
 800f694:	310f      	adds	r1, #15
 800f696:	428b      	cmp	r3, r1
 800f698:	d004      	beq.n	800f6a4 <Hardware::GetUuid(unsigned char*)+0x30>
 800f69a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f69e:	f803 0f01 	strb.w	r0, [r3, #1]!
 800f6a2:	e7f8      	b.n	800f696 <Hardware::GetUuid(unsigned char*)+0x22>
 800f6a4:	b004      	add	sp, #16
 800f6a6:	4770      	bx	lr
 800f6a8:	1ffff000 	svcne	0x00fff000

0800f6ac <Hardware::Reboot()>:
 800f6ac:	b508      	push	{r3, lr}
 800f6ae:	6803      	ldr	r3, [r0, #0]
 800f6b0:	4604      	mov	r4, r0
 800f6b2:	b153      	cbz	r3, 800f6ca <Hardware::Reboot()+0x1e>
 800f6b4:	2300      	movs	r3, #0
 800f6b6:	2104      	movs	r1, #4
 800f6b8:	7103      	strb	r3, [r0, #4]
 800f6ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f6be:	f000 fe5f 	bl	8010380 <fwdgt_config>
 800f6c2:	6820      	ldr	r0, [r4, #0]
 800f6c4:	6803      	ldr	r3, [r0, #0]
 800f6c6:	689b      	ldr	r3, [r3, #8]
 800f6c8:	4798      	blx	r3
 800f6ca:	2102      	movs	r1, #2
 800f6cc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f6d0:	f000 fe56 	bl	8010380 <fwdgt_config>
 800f6d4:	2801      	cmp	r0, #1
 800f6d6:	bf0c      	ite	eq
 800f6d8:	2301      	moveq	r3, #1
 800f6da:	2300      	movne	r3, #0
 800f6dc:	7123      	strb	r3, [r4, #4]
 800f6de:	d101      	bne.n	800f6e4 <Hardware::Reboot()+0x38>
 800f6e0:	f000 fe3e 	bl	8010360 <fwdgt_enable>
 800f6e4:	2208      	movs	r2, #8
 800f6e6:	4b0d      	ldr	r3, [pc, #52]	; (800f71c <Hardware::Reboot()+0x70>)
 800f6e8:	2501      	movs	r5, #1
 800f6ea:	681b      	ldr	r3, [r3, #0]
 800f6ec:	480c      	ldr	r0, [pc, #48]	; (800f720 <Hardware::Reboot()+0x74>)
 800f6ee:	601a      	str	r2, [r3, #0]
 800f6f0:	227d      	movs	r2, #125	; 0x7d
 800f6f2:	490c      	ldr	r1, [pc, #48]	; (800f724 <Hardware::Reboot()+0x78>)
 800f6f4:	60da      	str	r2, [r3, #12]
 800f6f6:	68dc      	ldr	r4, [r3, #12]
 800f6f8:	b904      	cbnz	r4, 800f6fc <Hardware::Reboot()+0x50>
 800f6fa:	e7fe      	b.n	800f6fa <Hardware::Reboot()+0x4e>
 800f6fc:	6802      	ldr	r2, [r0, #0]
 800f6fe:	695e      	ldr	r6, [r3, #20]
 800f700:	1b92      	subs	r2, r2, r6
 800f702:	4294      	cmp	r4, r2
 800f704:	d8f8      	bhi.n	800f6f8 <Hardware::Reboot()+0x4c>
 800f706:	6802      	ldr	r2, [r0, #0]
 800f708:	615a      	str	r2, [r3, #20]
 800f70a:	691a      	ldr	r2, [r3, #16]
 800f70c:	2a01      	cmp	r2, #1
 800f70e:	f082 0401 	eor.w	r4, r2, #1
 800f712:	611c      	str	r4, [r3, #16]
 800f714:	bf14      	ite	ne
 800f716:	610d      	strne	r5, [r1, #16]
 800f718:	614a      	streq	r2, [r1, #20]
 800f71a:	e7ec      	b.n	800f6f6 <Hardware::Reboot()+0x4a>
 800f71c:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f720:	20009bd4 	ldrdcs	r9, [r0], -r4
 800f724:	40011000 	andmi	r1, r1, r0

0800f728 <operator delete(void*)>:
 800f728:	f000 b890 	b.w	800f84c <free>

0800f72c <operator delete[](void*)>:
 800f72c:	f000 b88e 	b.w	800f84c <free>

0800f730 <operator new(unsigned int)>:
 800f730:	f000 b842 	b.w	800f7b8 <malloc>

0800f734 <operator new[](unsigned int)>:
 800f734:	f000 b840 	b.w	800f7b8 <malloc>

0800f738 <inet_aton>:
 800f738:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f73a:	f04f 0c0a 	mov.w	ip, #10
 800f73e:	2500      	movs	r5, #0
 800f740:	ae01      	add	r6, sp, #4
 800f742:	4603      	mov	r3, r0
 800f744:	2200      	movs	r2, #0
 800f746:	1d07      	adds	r7, r0, #4
 800f748:	e007      	b.n	800f75a <inet_aton+0x22>
 800f74a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f74e:	2b09      	cmp	r3, #9
 800f750:	d820      	bhi.n	800f794 <inet_aton+0x5c>
 800f752:	4603      	mov	r3, r0
 800f754:	fb0c 4202 	mla	r2, ip, r2, r4
 800f758:	3a30      	subs	r2, #48	; 0x30
 800f75a:	4618      	mov	r0, r3
 800f75c:	f810 4b01 	ldrb.w	r4, [r0], #1
 800f760:	2c2e      	cmp	r4, #46	; 0x2e
 800f762:	d111      	bne.n	800f788 <inet_aton+0x50>
 800f764:	3501      	adds	r5, #1
 800f766:	2d03      	cmp	r5, #3
 800f768:	f806 2b01 	strb.w	r2, [r6], #1
 800f76c:	d1e9      	bne.n	800f742 <inet_aton+0xa>
 800f76e:	2200      	movs	r2, #0
 800f770:	250a      	movs	r5, #10
 800f772:	1d1c      	adds	r4, r3, #4
 800f774:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f778:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800f77c:	d10d      	bne.n	800f79a <inet_aton+0x62>
 800f77e:	f88d 2007 	strb.w	r2, [sp, #7]
 800f782:	b9b1      	cbnz	r1, 800f7b2 <inet_aton+0x7a>
 800f784:	2001      	movs	r0, #1
 800f786:	e006      	b.n	800f796 <inet_aton+0x5e>
 800f788:	2c00      	cmp	r4, #0
 800f78a:	d0eb      	beq.n	800f764 <inet_aton+0x2c>
 800f78c:	2c0a      	cmp	r4, #10
 800f78e:	d0e9      	beq.n	800f764 <inet_aton+0x2c>
 800f790:	42b8      	cmp	r0, r7
 800f792:	d1da      	bne.n	800f74a <inet_aton+0x12>
 800f794:	2000      	movs	r0, #0
 800f796:	b003      	add	sp, #12
 800f798:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f79a:	280a      	cmp	r0, #10
 800f79c:	d0ef      	beq.n	800f77e <inet_aton+0x46>
 800f79e:	42a3      	cmp	r3, r4
 800f7a0:	d0f8      	beq.n	800f794 <inet_aton+0x5c>
 800f7a2:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800f7a6:	2e09      	cmp	r6, #9
 800f7a8:	d8f4      	bhi.n	800f794 <inet_aton+0x5c>
 800f7aa:	fb05 0202 	mla	r2, r5, r2, r0
 800f7ae:	3a30      	subs	r2, #48	; 0x30
 800f7b0:	e7e0      	b.n	800f774 <inet_aton+0x3c>
 800f7b2:	9b01      	ldr	r3, [sp, #4]
 800f7b4:	600b      	str	r3, [r1, #0]
 800f7b6:	e7e5      	b.n	800f784 <inet_aton+0x4c>

0800f7b8 <malloc>:
 800f7b8:	b538      	push	{r3, r4, r5, lr}
 800f7ba:	4604      	mov	r4, r0
 800f7bc:	4601      	mov	r1, r0
 800f7be:	481c      	ldr	r0, [pc, #112]	; (800f830 <malloc+0x78>)
 800f7c0:	f000 faae 	bl	800fd20 <printf>
 800f7c4:	b17c      	cbz	r4, 800f7e6 <malloc+0x2e>
 800f7c6:	4b1b      	ldr	r3, [pc, #108]	; (800f834 <malloc+0x7c>)
 800f7c8:	6818      	ldr	r0, [r3, #0]
 800f7ca:	b978      	cbnz	r0, 800f7ec <malloc+0x34>
 800f7cc:	4a1a      	ldr	r2, [pc, #104]	; (800f838 <malloc+0x80>)
 800f7ce:	f104 031b 	add.w	r3, r4, #27
 800f7d2:	6811      	ldr	r1, [r2, #0]
 800f7d4:	4819      	ldr	r0, [pc, #100]	; (800f83c <malloc+0x84>)
 800f7d6:	f023 030f 	bic.w	r3, r3, #15
 800f7da:	440b      	add	r3, r1
 800f7dc:	4283      	cmp	r3, r0
 800f7de:	d921      	bls.n	800f824 <malloc+0x6c>
 800f7e0:	4817      	ldr	r0, [pc, #92]	; (800f840 <malloc+0x88>)
 800f7e2:	f000 fa9d 	bl	800fd20 <printf>
 800f7e6:	2500      	movs	r5, #0
 800f7e8:	4628      	mov	r0, r5
 800f7ea:	bd38      	pop	{r3, r4, r5, pc}
 800f7ec:	4284      	cmp	r4, r0
 800f7ee:	d80a      	bhi.n	800f806 <malloc+0x4e>
 800f7f0:	685a      	ldr	r2, [r3, #4]
 800f7f2:	6899      	ldr	r1, [r3, #8]
 800f7f4:	3201      	adds	r2, #1
 800f7f6:	428a      	cmp	r2, r1
 800f7f8:	605a      	str	r2, [r3, #4]
 800f7fa:	d900      	bls.n	800f7fe <malloc+0x46>
 800f7fc:	609a      	str	r2, [r3, #8]
 800f7fe:	68d9      	ldr	r1, [r3, #12]
 800f800:	b919      	cbnz	r1, 800f80a <malloc+0x52>
 800f802:	4604      	mov	r4, r0
 800f804:	e7e2      	b.n	800f7cc <malloc+0x14>
 800f806:	3310      	adds	r3, #16
 800f808:	e7de      	b.n	800f7c8 <malloc+0x10>
 800f80a:	4604      	mov	r4, r0
 800f80c:	688a      	ldr	r2, [r1, #8]
 800f80e:	60da      	str	r2, [r3, #12]
 800f810:	2300      	movs	r3, #0
 800f812:	f101 050c 	add.w	r5, r1, #12
 800f816:	608b      	str	r3, [r1, #8]
 800f818:	4622      	mov	r2, r4
 800f81a:	462b      	mov	r3, r5
 800f81c:	4809      	ldr	r0, [pc, #36]	; (800f844 <malloc+0x8c>)
 800f81e:	f000 fa7f 	bl	800fd20 <printf>
 800f822:	e7e1      	b.n	800f7e8 <malloc+0x30>
 800f824:	6013      	str	r3, [r2, #0]
 800f826:	4b08      	ldr	r3, [pc, #32]	; (800f848 <malloc+0x90>)
 800f828:	e9c1 3400 	strd	r3, r4, [r1]
 800f82c:	e7f0      	b.n	800f810 <malloc+0x58>
 800f82e:	bf00      	nop
 800f830:	08013acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, ip, sp}
 800f834:	20000024 	andcs	r0, r0, r4, lsr #32
 800f838:	20000020 	andcs	r0, r0, r0, lsr #32
 800f83c:	20016800 	andcs	r6, r1, r0, lsl #16
 800f840:	08013ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, ip, sp}
 800f844:	08013af4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, fp, ip, sp}
 800f848:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800f84c <free>:
 800f84c:	b538      	push	{r3, r4, r5, lr}
 800f84e:	4604      	mov	r4, r0
 800f850:	b1c8      	cbz	r0, 800f886 <free+0x3a>
 800f852:	f1a0 050c 	sub.w	r5, r0, #12
 800f856:	4602      	mov	r2, r0
 800f858:	4629      	mov	r1, r5
 800f85a:	480c      	ldr	r0, [pc, #48]	; (800f88c <free+0x40>)
 800f85c:	f000 fa60 	bl	800fd20 <printf>
 800f860:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800f864:	4b0a      	ldr	r3, [pc, #40]	; (800f890 <free+0x44>)
 800f866:	429a      	cmp	r2, r3
 800f868:	d10d      	bne.n	800f886 <free+0x3a>
 800f86a:	4b0a      	ldr	r3, [pc, #40]	; (800f894 <free+0x48>)
 800f86c:	681a      	ldr	r2, [r3, #0]
 800f86e:	b152      	cbz	r2, 800f886 <free+0x3a>
 800f870:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800f874:	4291      	cmp	r1, r2
 800f876:	d107      	bne.n	800f888 <free+0x3c>
 800f878:	68da      	ldr	r2, [r3, #12]
 800f87a:	f844 2c04 	str.w	r2, [r4, #-4]
 800f87e:	685a      	ldr	r2, [r3, #4]
 800f880:	60dd      	str	r5, [r3, #12]
 800f882:	3a01      	subs	r2, #1
 800f884:	605a      	str	r2, [r3, #4]
 800f886:	bd38      	pop	{r3, r4, r5, pc}
 800f888:	3310      	adds	r3, #16
 800f88a:	e7ef      	b.n	800f86c <free+0x20>
 800f88c:	08013b1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, fp, ip, sp}
 800f890:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800f894:	20000024 	andcs	r0, r0, r4, lsr #32

0800f898 <memcpy>:
 800f898:	b510      	push	{r4, lr}
 800f89a:	1e43      	subs	r3, r0, #1
 800f89c:	440a      	add	r2, r1
 800f89e:	4291      	cmp	r1, r2
 800f8a0:	d100      	bne.n	800f8a4 <memcpy+0xc>
 800f8a2:	bd10      	pop	{r4, pc}
 800f8a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f8a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f8ac:	e7f7      	b.n	800f89e <memcpy+0x6>

0800f8ae <memmove>:
 800f8ae:	4288      	cmp	r0, r1
 800f8b0:	b510      	push	{r4, lr}
 800f8b2:	eb01 0302 	add.w	r3, r1, r2
 800f8b6:	d208      	bcs.n	800f8ca <memmove+0x1c>
 800f8b8:	1e42      	subs	r2, r0, #1
 800f8ba:	4299      	cmp	r1, r3
 800f8bc:	d100      	bne.n	800f8c0 <memmove+0x12>
 800f8be:	bd10      	pop	{r4, pc}
 800f8c0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f8c4:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f8c8:	e7f7      	b.n	800f8ba <memmove+0xc>
 800f8ca:	4601      	mov	r1, r0
 800f8cc:	4402      	add	r2, r0
 800f8ce:	428a      	cmp	r2, r1
 800f8d0:	d0f5      	beq.n	800f8be <memmove+0x10>
 800f8d2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f8d6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f8da:	e7f8      	b.n	800f8ce <memmove+0x20>

0800f8dc <memset>:
 800f8dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8de:	b1e2      	cbz	r2, 800f91a <memset+0x3e>
 800f8e0:	4603      	mov	r3, r0
 800f8e2:	b2c9      	uxtb	r1, r1
 800f8e4:	075c      	lsls	r4, r3, #29
 800f8e6:	d114      	bne.n	800f912 <memset+0x36>
 800f8e8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f8ec:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f8f0:	463d      	mov	r5, r7
 800f8f2:	f022 0407 	bic.w	r4, r2, #7
 800f8f6:	08d6      	lsrs	r6, r2, #3
 800f8f8:	441c      	add	r4, r3
 800f8fa:	42a3      	cmp	r3, r4
 800f8fc:	d10e      	bne.n	800f91c <memset+0x40>
 800f8fe:	f06f 0307 	mvn.w	r3, #7
 800f902:	fb03 2206 	mla	r2, r3, r6, r2
 800f906:	4422      	add	r2, r4
 800f908:	4294      	cmp	r4, r2
 800f90a:	d006      	beq.n	800f91a <memset+0x3e>
 800f90c:	f804 1b01 	strb.w	r1, [r4], #1
 800f910:	e7fa      	b.n	800f908 <memset+0x2c>
 800f912:	3a01      	subs	r2, #1
 800f914:	f803 1b01 	strb.w	r1, [r3], #1
 800f918:	d1e4      	bne.n	800f8e4 <memset+0x8>
 800f91a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f91c:	f843 7b08 	str.w	r7, [r3], #8
 800f920:	f843 5c04 	str.w	r5, [r3, #-4]
 800f924:	e7e9      	b.n	800f8fa <memset+0x1e>
	...

0800f928 <_xputch>:
 800f928:	4603      	mov	r3, r0
 800f92a:	b410      	push	{r4}
 800f92c:	4c08      	ldr	r4, [pc, #32]	; (800f950 <_xputch+0x28>)
 800f92e:	68da      	ldr	r2, [r3, #12]
 800f930:	4608      	mov	r0, r1
 800f932:	6821      	ldr	r1, [r4, #0]
 800f934:	3201      	adds	r2, #1
 800f936:	60da      	str	r2, [r3, #12]
 800f938:	b139      	cbz	r1, 800f94a <_xputch+0x22>
 800f93a:	691b      	ldr	r3, [r3, #16]
 800f93c:	429a      	cmp	r2, r3
 800f93e:	da02      	bge.n	800f946 <_xputch+0x1e>
 800f940:	1c4b      	adds	r3, r1, #1
 800f942:	6023      	str	r3, [r4, #0]
 800f944:	7008      	strb	r0, [r1, #0]
 800f946:	bc10      	pop	{r4}
 800f948:	4770      	bx	lr
 800f94a:	bc10      	pop	{r4}
 800f94c:	f7ff bd52 	b.w	800f3f4 <console_putc>
 800f950:	20009bc0 	andcs	r9, r0, r0, asr #23

0800f954 <_format_int>:
 800f954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f958:	461f      	mov	r7, r3
 800f95a:	b091      	sub	sp, #68	; 0x44
 800f95c:	ea52 0307 	orrs.w	r3, r2, r7
 800f960:	4680      	mov	r8, r0
 800f962:	4616      	mov	r6, r2
 800f964:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800f968:	d138      	bne.n	800f9dc <_format_int+0x88>
 800f96a:	2330      	movs	r3, #48	; 0x30
 800f96c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 800f970:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800f974:	f8d8 3000 	ldr.w	r3, [r8]
 800f978:	07d8      	lsls	r0, r3, #31
 800f97a:	d508      	bpl.n	800f98e <_format_int+0x3a>
 800f97c:	466a      	mov	r2, sp
 800f97e:	2030      	movs	r0, #48	; 0x30
 800f980:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800f984:	1b2e      	subs	r6, r5, r4
 800f986:	428e      	cmp	r6, r1
 800f988:	da01      	bge.n	800f98e <_format_int+0x3a>
 800f98a:	4294      	cmp	r4, r2
 800f98c:	d843      	bhi.n	800fa16 <_format_int+0xc2>
 800f98e:	0699      	lsls	r1, r3, #26
 800f990:	d508      	bpl.n	800f9a4 <_format_int+0x50>
 800f992:	466a      	mov	r2, sp
 800f994:	2030      	movs	r0, #48	; 0x30
 800f996:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f99a:	1b2e      	subs	r6, r5, r4
 800f99c:	428e      	cmp	r6, r1
 800f99e:	da01      	bge.n	800f9a4 <_format_int+0x50>
 800f9a0:	4294      	cmp	r4, r2
 800f9a2:	d83b      	bhi.n	800fa1c <_format_int+0xc8>
 800f9a4:	071a      	lsls	r2, r3, #28
 800f9a6:	bf44      	itt	mi
 800f9a8:	222d      	movmi	r2, #45	; 0x2d
 800f9aa:	f804 2901 	strbmi.w	r2, [r4], #-1
 800f9ae:	065b      	lsls	r3, r3, #25
 800f9b0:	d408      	bmi.n	800f9c4 <_format_int+0x70>
 800f9b2:	466b      	mov	r3, sp
 800f9b4:	2120      	movs	r1, #32
 800f9b6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800f9ba:	1b28      	subs	r0, r5, r4
 800f9bc:	4290      	cmp	r0, r2
 800f9be:	da01      	bge.n	800f9c4 <_format_int+0x70>
 800f9c0:	429c      	cmp	r4, r3
 800f9c2:	d82e      	bhi.n	800fa22 <_format_int+0xce>
 800f9c4:	1b2d      	subs	r5, r5, r4
 800f9c6:	3401      	adds	r4, #1
 800f9c8:	ab10      	add	r3, sp, #64	; 0x40
 800f9ca:	429c      	cmp	r4, r3
 800f9cc:	d32c      	bcc.n	800fa28 <_format_int+0xd4>
 800f9ce:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800f9d2:	42ab      	cmp	r3, r5
 800f9d4:	dc2e      	bgt.n	800fa34 <_format_int+0xe0>
 800f9d6:	b011      	add	sp, #68	; 0x44
 800f9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9dc:	462c      	mov	r4, r5
 800f9de:	46eb      	mov	fp, sp
 800f9e0:	4630      	mov	r0, r6
 800f9e2:	4639      	mov	r1, r7
 800f9e4:	220a      	movs	r2, #10
 800f9e6:	2300      	movs	r3, #0
 800f9e8:	f7f8 f882 	bl	8007af0 <__aeabi_uldivmod>
 800f9ec:	46b2      	mov	sl, r6
 800f9ee:	3230      	adds	r2, #48	; 0x30
 800f9f0:	46b9      	mov	r9, r7
 800f9f2:	2300      	movs	r3, #0
 800f9f4:	4630      	mov	r0, r6
 800f9f6:	4639      	mov	r1, r7
 800f9f8:	f804 2901 	strb.w	r2, [r4], #-1
 800f9fc:	220a      	movs	r2, #10
 800f9fe:	f7f8 f877 	bl	8007af0 <__aeabi_uldivmod>
 800fa02:	f1ba 0f0a 	cmp.w	sl, #10
 800fa06:	f179 0300 	sbcs.w	r3, r9, #0
 800fa0a:	4606      	mov	r6, r0
 800fa0c:	460f      	mov	r7, r1
 800fa0e:	d3b1      	bcc.n	800f974 <_format_int+0x20>
 800fa10:	455c      	cmp	r4, fp
 800fa12:	d1e5      	bne.n	800f9e0 <_format_int+0x8c>
 800fa14:	e7ae      	b.n	800f974 <_format_int+0x20>
 800fa16:	f804 0901 	strb.w	r0, [r4], #-1
 800fa1a:	e7b3      	b.n	800f984 <_format_int+0x30>
 800fa1c:	f804 0901 	strb.w	r0, [r4], #-1
 800fa20:	e7bb      	b.n	800f99a <_format_int+0x46>
 800fa22:	f804 1901 	strb.w	r1, [r4], #-1
 800fa26:	e7c8      	b.n	800f9ba <_format_int+0x66>
 800fa28:	4640      	mov	r0, r8
 800fa2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fa2e:	f7ff ff7b 	bl	800f928 <_xputch>
 800fa32:	e7c9      	b.n	800f9c8 <_format_int+0x74>
 800fa34:	2120      	movs	r1, #32
 800fa36:	4640      	mov	r0, r8
 800fa38:	f7ff ff76 	bl	800f928 <_xputch>
 800fa3c:	3501      	adds	r5, #1
 800fa3e:	e7c6      	b.n	800f9ce <_format_int+0x7a>

0800fa40 <_format_hex>:
 800fa40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa42:	b091      	sub	sp, #68	; 0x44
 800fa44:	4606      	mov	r6, r0
 800fa46:	6804      	ldr	r4, [r0, #0]
 800fa48:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800fa4c:	bb61      	cbnz	r1, 800faa8 <_format_hex+0x68>
 800fa4e:	2330      	movs	r3, #48	; 0x30
 800fa50:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800fa54:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800fa58:	07e5      	lsls	r5, r4, #31
 800fa5a:	d507      	bpl.n	800fa6c <_format_hex+0x2c>
 800fa5c:	4669      	mov	r1, sp
 800fa5e:	2530      	movs	r5, #48	; 0x30
 800fa60:	6870      	ldr	r0, [r6, #4]
 800fa62:	1ad7      	subs	r7, r2, r3
 800fa64:	4287      	cmp	r7, r0
 800fa66:	da01      	bge.n	800fa6c <_format_hex+0x2c>
 800fa68:	428b      	cmp	r3, r1
 800fa6a:	d831      	bhi.n	800fad0 <_format_hex+0x90>
 800fa6c:	06a0      	lsls	r0, r4, #26
 800fa6e:	d507      	bpl.n	800fa80 <_format_hex+0x40>
 800fa70:	4669      	mov	r1, sp
 800fa72:	2530      	movs	r5, #48	; 0x30
 800fa74:	68b0      	ldr	r0, [r6, #8]
 800fa76:	1ad7      	subs	r7, r2, r3
 800fa78:	4287      	cmp	r7, r0
 800fa7a:	da01      	bge.n	800fa80 <_format_hex+0x40>
 800fa7c:	428b      	cmp	r3, r1
 800fa7e:	d82a      	bhi.n	800fad6 <_format_hex+0x96>
 800fa80:	0661      	lsls	r1, r4, #25
 800fa82:	d407      	bmi.n	800fa94 <_format_hex+0x54>
 800fa84:	4669      	mov	r1, sp
 800fa86:	2420      	movs	r4, #32
 800fa88:	68b0      	ldr	r0, [r6, #8]
 800fa8a:	1ad5      	subs	r5, r2, r3
 800fa8c:	4285      	cmp	r5, r0
 800fa8e:	da01      	bge.n	800fa94 <_format_hex+0x54>
 800fa90:	428b      	cmp	r3, r1
 800fa92:	d823      	bhi.n	800fadc <_format_hex+0x9c>
 800fa94:	1ad5      	subs	r5, r2, r3
 800fa96:	1c5c      	adds	r4, r3, #1
 800fa98:	ab10      	add	r3, sp, #64	; 0x40
 800fa9a:	429c      	cmp	r4, r3
 800fa9c:	d321      	bcc.n	800fae2 <_format_hex+0xa2>
 800fa9e:	68b3      	ldr	r3, [r6, #8]
 800faa0:	429d      	cmp	r5, r3
 800faa2:	db24      	blt.n	800faee <_format_hex+0xae>
 800faa4:	b011      	add	sp, #68	; 0x44
 800faa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800faa8:	f014 0f02 	tst.w	r4, #2
 800faac:	bf0c      	ite	eq
 800faae:	2757      	moveq	r7, #87	; 0x57
 800fab0:	2737      	movne	r7, #55	; 0x37
 800fab2:	4613      	mov	r3, r2
 800fab4:	466d      	mov	r5, sp
 800fab6:	f001 000f 	and.w	r0, r1, #15
 800faba:	2809      	cmp	r0, #9
 800fabc:	bf94      	ite	ls
 800fabe:	3030      	addls	r0, #48	; 0x30
 800fac0:	19c0      	addhi	r0, r0, r7
 800fac2:	0909      	lsrs	r1, r1, #4
 800fac4:	f803 0901 	strb.w	r0, [r3], #-1
 800fac8:	d0c6      	beq.n	800fa58 <_format_hex+0x18>
 800faca:	42ab      	cmp	r3, r5
 800facc:	d1f3      	bne.n	800fab6 <_format_hex+0x76>
 800face:	e7c3      	b.n	800fa58 <_format_hex+0x18>
 800fad0:	f803 5901 	strb.w	r5, [r3], #-1
 800fad4:	e7c5      	b.n	800fa62 <_format_hex+0x22>
 800fad6:	f803 5901 	strb.w	r5, [r3], #-1
 800fada:	e7cc      	b.n	800fa76 <_format_hex+0x36>
 800fadc:	f803 4901 	strb.w	r4, [r3], #-1
 800fae0:	e7d3      	b.n	800fa8a <_format_hex+0x4a>
 800fae2:	4630      	mov	r0, r6
 800fae4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fae8:	f7ff ff1e 	bl	800f928 <_xputch>
 800faec:	e7d4      	b.n	800fa98 <_format_hex+0x58>
 800faee:	2120      	movs	r1, #32
 800faf0:	4630      	mov	r0, r6
 800faf2:	f7ff ff19 	bl	800f928 <_xputch>
 800faf6:	3501      	adds	r5, #1
 800faf8:	e7d1      	b.n	800fa9e <_format_hex+0x5e>
	...

0800fafc <_vprintf>:
 800fafc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb00:	2700      	movs	r7, #0
 800fb02:	460b      	mov	r3, r1
 800fb04:	4614      	mov	r4, r2
 800fb06:	f04f 080a 	mov.w	r8, #10
 800fb0a:	b086      	sub	sp, #24
 800fb0c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800fb10:	7819      	ldrb	r1, [r3, #0]
 800fb12:	b919      	cbnz	r1, 800fb1c <_vprintf+0x20>
 800fb14:	9804      	ldr	r0, [sp, #16]
 800fb16:	b006      	add	sp, #24
 800fb18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb1c:	2925      	cmp	r1, #37	; 0x25
 800fb1e:	f103 0501 	add.w	r5, r3, #1
 800fb22:	d004      	beq.n	800fb2e <_vprintf+0x32>
 800fb24:	a801      	add	r0, sp, #4
 800fb26:	f7ff feff 	bl	800f928 <_xputch>
 800fb2a:	462b      	mov	r3, r5
 800fb2c:	e7f0      	b.n	800fb10 <_vprintf+0x14>
 800fb2e:	785a      	ldrb	r2, [r3, #1]
 800fb30:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800fb34:	2a30      	cmp	r2, #48	; 0x30
 800fb36:	9703      	str	r7, [sp, #12]
 800fb38:	d126      	bne.n	800fb88 <_vprintf+0x8c>
 800fb3a:	2220      	movs	r2, #32
 800fb3c:	9201      	str	r2, [sp, #4]
 800fb3e:	1c9d      	adds	r5, r3, #2
 800fb40:	2200      	movs	r2, #0
 800fb42:	462e      	mov	r6, r5
 800fb44:	4613      	mov	r3, r2
 800fb46:	7831      	ldrb	r1, [r6, #0]
 800fb48:	4635      	mov	r5, r6
 800fb4a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800fb4e:	2809      	cmp	r0, #9
 800fb50:	f106 0601 	add.w	r6, r6, #1
 800fb54:	d91c      	bls.n	800fb90 <_vprintf+0x94>
 800fb56:	b12a      	cbz	r2, 800fb64 <_vprintf+0x68>
 800fb58:	9303      	str	r3, [sp, #12]
 800fb5a:	b11b      	cbz	r3, 800fb64 <_vprintf+0x68>
 800fb5c:	9b01      	ldr	r3, [sp, #4]
 800fb5e:	f043 0310 	orr.w	r3, r3, #16
 800fb62:	9301      	str	r3, [sp, #4]
 800fb64:	292e      	cmp	r1, #46	; 0x2e
 800fb66:	d122      	bne.n	800fbae <_vprintf+0xb2>
 800fb68:	786b      	ldrb	r3, [r5, #1]
 800fb6a:	2b2a      	cmp	r3, #42	; 0x2a
 800fb6c:	d014      	beq.n	800fb98 <_vprintf+0x9c>
 800fb6e:	2100      	movs	r1, #0
 800fb70:	460a      	mov	r2, r1
 800fb72:	1c68      	adds	r0, r5, #1
 800fb74:	7803      	ldrb	r3, [r0, #0]
 800fb76:	4605      	mov	r5, r0
 800fb78:	3b30      	subs	r3, #48	; 0x30
 800fb7a:	2b09      	cmp	r3, #9
 800fb7c:	f100 0001 	add.w	r0, r0, #1
 800fb80:	d92f      	bls.n	800fbe2 <_vprintf+0xe6>
 800fb82:	b181      	cbz	r1, 800fba6 <_vprintf+0xaa>
 800fb84:	9202      	str	r2, [sp, #8]
 800fb86:	e00e      	b.n	800fba6 <_vprintf+0xaa>
 800fb88:	2a2d      	cmp	r2, #45	; 0x2d
 800fb8a:	d1d9      	bne.n	800fb40 <_vprintf+0x44>
 800fb8c:	2240      	movs	r2, #64	; 0x40
 800fb8e:	e7d5      	b.n	800fb3c <_vprintf+0x40>
 800fb90:	2201      	movs	r2, #1
 800fb92:	fb08 0303 	mla	r3, r8, r3, r0
 800fb96:	e7d6      	b.n	800fb46 <_vprintf+0x4a>
 800fb98:	f854 3b04 	ldr.w	r3, [r4], #4
 800fb9c:	3502      	adds	r5, #2
 800fb9e:	2b00      	cmp	r3, #0
 800fba0:	bfb8      	it	lt
 800fba2:	425b      	neglt	r3, r3
 800fba4:	9302      	str	r3, [sp, #8]
 800fba6:	9b01      	ldr	r3, [sp, #4]
 800fba8:	f043 0301 	orr.w	r3, r3, #1
 800fbac:	9301      	str	r3, [sp, #4]
 800fbae:	782b      	ldrb	r3, [r5, #0]
 800fbb0:	2b6c      	cmp	r3, #108	; 0x6c
 800fbb2:	bf04      	itt	eq
 800fbb4:	9b01      	ldreq	r3, [sp, #4]
 800fbb6:	3501      	addeq	r5, #1
 800fbb8:	7829      	ldrb	r1, [r5, #0]
 800fbba:	bf04      	itt	eq
 800fbbc:	f043 0304 	orreq.w	r3, r3, #4
 800fbc0:	9301      	streq	r3, [sp, #4]
 800fbc2:	2978      	cmp	r1, #120	; 0x78
 800fbc4:	d8ae      	bhi.n	800fb24 <_vprintf+0x28>
 800fbc6:	296f      	cmp	r1, #111	; 0x6f
 800fbc8:	d80f      	bhi.n	800fbea <_vprintf+0xee>
 800fbca:	2963      	cmp	r1, #99	; 0x63
 800fbcc:	d045      	beq.n	800fc5a <_vprintf+0x15e>
 800fbce:	d825      	bhi.n	800fc1c <_vprintf+0x120>
 800fbd0:	2958      	cmp	r1, #88	; 0x58
 800fbd2:	d1a7      	bne.n	800fb24 <_vprintf+0x28>
 800fbd4:	9b01      	ldr	r3, [sp, #4]
 800fbd6:	f043 0302 	orr.w	r3, r3, #2
 800fbda:	9301      	str	r3, [sp, #4]
 800fbdc:	f854 1b04 	ldr.w	r1, [r4], #4
 800fbe0:	e051      	b.n	800fc86 <_vprintf+0x18a>
 800fbe2:	2101      	movs	r1, #1
 800fbe4:	fb08 3202 	mla	r2, r8, r2, r3
 800fbe8:	e7c4      	b.n	800fb74 <_vprintf+0x78>
 800fbea:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800fbee:	2b08      	cmp	r3, #8
 800fbf0:	d898      	bhi.n	800fb24 <_vprintf+0x28>
 800fbf2:	a201      	add	r2, pc, #4	; (adr r2, 800fbf8 <_vprintf+0xfc>)
 800fbf4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fbf8:	0800fc69 	stmdaeq	r0, {r0, r3, r5, r6, sl, fp, ip, sp, lr, pc}
 800fbfc:	0800fb25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
 800fc00:	0800fb25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
 800fc04:	0800fc8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, sl, fp, ip, sp, lr, pc}
 800fc08:	0800fb25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
 800fc0c:	0800fd01 	stmdaeq	r0, {r0, r8, sl, fp, ip, sp, lr, pc}
 800fc10:	0800fb25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
 800fc14:	0800fb25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
 800fc18:	0800fbdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 800fc1c:	2964      	cmp	r1, #100	; 0x64
 800fc1e:	d002      	beq.n	800fc26 <_vprintf+0x12a>
 800fc20:	2969      	cmp	r1, #105	; 0x69
 800fc22:	f47f af7f 	bne.w	800fb24 <_vprintf+0x28>
 800fc26:	9901      	ldr	r1, [sp, #4]
 800fc28:	074e      	lsls	r6, r1, #29
 800fc2a:	bf43      	ittte	mi
 800fc2c:	3407      	addmi	r4, #7
 800fc2e:	f024 0307 	bicmi.w	r3, r4, #7
 800fc32:	461c      	movmi	r4, r3
 800fc34:	f854 2b04 	ldrpl.w	r2, [r4], #4
 800fc38:	bf4a      	itet	mi
 800fc3a:	685b      	ldrmi	r3, [r3, #4]
 800fc3c:	17d3      	asrpl	r3, r2, #31
 800fc3e:	f854 2b08 	ldrmi.w	r2, [r4], #8
 800fc42:	2b00      	cmp	r3, #0
 800fc44:	da05      	bge.n	800fc52 <_vprintf+0x156>
 800fc46:	f041 0108 	orr.w	r1, r1, #8
 800fc4a:	4252      	negs	r2, r2
 800fc4c:	9101      	str	r1, [sp, #4]
 800fc4e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800fc52:	a801      	add	r0, sp, #4
 800fc54:	f7ff fe7e 	bl	800f954 <_format_int>
 800fc58:	e004      	b.n	800fc64 <_vprintf+0x168>
 800fc5a:	f854 1b04 	ldr.w	r1, [r4], #4
 800fc5e:	a801      	add	r0, sp, #4
 800fc60:	f7ff fe62 	bl	800f928 <_xputch>
 800fc64:	3501      	adds	r5, #1
 800fc66:	e760      	b.n	800fb2a <_vprintf+0x2e>
 800fc68:	2308      	movs	r3, #8
 800fc6a:	9303      	str	r3, [sp, #12]
 800fc6c:	2320      	movs	r3, #32
 800fc6e:	2130      	movs	r1, #48	; 0x30
 800fc70:	f854 6b04 	ldr.w	r6, [r4], #4
 800fc74:	a801      	add	r0, sp, #4
 800fc76:	9301      	str	r3, [sp, #4]
 800fc78:	f7ff fe56 	bl	800f928 <_xputch>
 800fc7c:	2178      	movs	r1, #120	; 0x78
 800fc7e:	a801      	add	r0, sp, #4
 800fc80:	f7ff fe52 	bl	800f928 <_xputch>
 800fc84:	4631      	mov	r1, r6
 800fc86:	a801      	add	r0, sp, #4
 800fc88:	f7ff feda 	bl	800fa40 <_format_hex>
 800fc8c:	e7ea      	b.n	800fc64 <_vprintf+0x168>
 800fc8e:	2600      	movs	r6, #0
 800fc90:	f854 9b04 	ldr.w	r9, [r4], #4
 800fc94:	f819 3006 	ldrb.w	r3, [r9, r6]
 800fc98:	b993      	cbnz	r3, 800fcc0 <_vprintf+0x1c4>
 800fc9a:	9b01      	ldr	r3, [sp, #4]
 800fc9c:	07d9      	lsls	r1, r3, #31
 800fc9e:	d503      	bpl.n	800fca8 <_vprintf+0x1ac>
 800fca0:	9b02      	ldr	r3, [sp, #8]
 800fca2:	429e      	cmp	r6, r3
 800fca4:	bfa8      	it	ge
 800fca6:	461e      	movge	r6, r3
 800fca8:	9b01      	ldr	r3, [sp, #4]
 800fcaa:	f106 0a01 	add.w	sl, r6, #1
 800fcae:	065a      	lsls	r2, r3, #25
 800fcb0:	d403      	bmi.n	800fcba <_vprintf+0x1be>
 800fcb2:	9b03      	ldr	r3, [sp, #12]
 800fcb4:	429e      	cmp	r6, r3
 800fcb6:	db05      	blt.n	800fcc4 <_vprintf+0x1c8>
 800fcb8:	4656      	mov	r6, sl
 800fcba:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800fcbe:	e00d      	b.n	800fcdc <_vprintf+0x1e0>
 800fcc0:	3601      	adds	r6, #1
 800fcc2:	e7e7      	b.n	800fc94 <_vprintf+0x198>
 800fcc4:	2120      	movs	r1, #32
 800fcc6:	a801      	add	r0, sp, #4
 800fcc8:	f7ff fe2e 	bl	800f928 <_xputch>
 800fccc:	4656      	mov	r6, sl
 800fcce:	e7eb      	b.n	800fca8 <_vprintf+0x1ac>
 800fcd0:	a801      	add	r0, sp, #4
 800fcd2:	f7ff fe29 	bl	800f928 <_xputch>
 800fcd6:	9b02      	ldr	r3, [sp, #8]
 800fcd8:	3b01      	subs	r3, #1
 800fcda:	9302      	str	r3, [sp, #8]
 800fcdc:	9b01      	ldr	r3, [sp, #4]
 800fcde:	07db      	lsls	r3, r3, #31
 800fce0:	d501      	bpl.n	800fce6 <_vprintf+0x1ea>
 800fce2:	9b02      	ldr	r3, [sp, #8]
 800fce4:	b11b      	cbz	r3, 800fcee <_vprintf+0x1f2>
 800fce6:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800fcea:	2900      	cmp	r1, #0
 800fcec:	d1f0      	bne.n	800fcd0 <_vprintf+0x1d4>
 800fcee:	9b03      	ldr	r3, [sp, #12]
 800fcf0:	42b3      	cmp	r3, r6
 800fcf2:	ddb7      	ble.n	800fc64 <_vprintf+0x168>
 800fcf4:	2120      	movs	r1, #32
 800fcf6:	a801      	add	r0, sp, #4
 800fcf8:	f7ff fe16 	bl	800f928 <_xputch>
 800fcfc:	3601      	adds	r6, #1
 800fcfe:	e7f6      	b.n	800fcee <_vprintf+0x1f2>
 800fd00:	9b01      	ldr	r3, [sp, #4]
 800fd02:	f013 0304 	ands.w	r3, r3, #4
 800fd06:	bf1d      	ittte	ne
 800fd08:	3407      	addne	r4, #7
 800fd0a:	f024 0307 	bicne.w	r3, r4, #7
 800fd0e:	461c      	movne	r4, r3
 800fd10:	f854 2b04 	ldreq.w	r2, [r4], #4
 800fd14:	bf1c      	itt	ne
 800fd16:	f854 2b08 	ldrne.w	r2, [r4], #8
 800fd1a:	685b      	ldrne	r3, [r3, #4]
 800fd1c:	e799      	b.n	800fc52 <_vprintf+0x156>
 800fd1e:	bf00      	nop

0800fd20 <printf>:
 800fd20:	b40f      	push	{r0, r1, r2, r3}
 800fd22:	b507      	push	{r0, r1, r2, lr}
 800fd24:	aa04      	add	r2, sp, #16
 800fd26:	f852 1b04 	ldr.w	r1, [r2], #4
 800fd2a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fd2e:	9201      	str	r2, [sp, #4]
 800fd30:	f7ff fee4 	bl	800fafc <_vprintf>
 800fd34:	b003      	add	sp, #12
 800fd36:	f85d eb04 	ldr.w	lr, [sp], #4
 800fd3a:	b004      	add	sp, #16
 800fd3c:	4770      	bx	lr
	...

0800fd40 <sprintf>:
 800fd40:	b40e      	push	{r1, r2, r3}
 800fd42:	b517      	push	{r0, r1, r2, r4, lr}
 800fd44:	4c09      	ldr	r4, [pc, #36]	; (800fd6c <sprintf+0x2c>)
 800fd46:	aa05      	add	r2, sp, #20
 800fd48:	f852 1b04 	ldr.w	r1, [r2], #4
 800fd4c:	6020      	str	r0, [r4, #0]
 800fd4e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fd52:	9201      	str	r2, [sp, #4]
 800fd54:	f7ff fed2 	bl	800fafc <_vprintf>
 800fd58:	2300      	movs	r3, #0
 800fd5a:	6822      	ldr	r2, [r4, #0]
 800fd5c:	6023      	str	r3, [r4, #0]
 800fd5e:	7013      	strb	r3, [r2, #0]
 800fd60:	b003      	add	sp, #12
 800fd62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd66:	b003      	add	sp, #12
 800fd68:	4770      	bx	lr
 800fd6a:	bf00      	nop
 800fd6c:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fd70 <snprintf>:
 800fd70:	b40c      	push	{r2, r3}
 800fd72:	460b      	mov	r3, r1
 800fd74:	b513      	push	{r0, r1, r4, lr}
 800fd76:	4c09      	ldr	r4, [pc, #36]	; (800fd9c <snprintf+0x2c>)
 800fd78:	aa04      	add	r2, sp, #16
 800fd7a:	f852 1b04 	ldr.w	r1, [r2], #4
 800fd7e:	6020      	str	r0, [r4, #0]
 800fd80:	4618      	mov	r0, r3
 800fd82:	9201      	str	r2, [sp, #4]
 800fd84:	f7ff feba 	bl	800fafc <_vprintf>
 800fd88:	2300      	movs	r3, #0
 800fd8a:	6822      	ldr	r2, [r4, #0]
 800fd8c:	6023      	str	r3, [r4, #0]
 800fd8e:	7013      	strb	r3, [r2, #0]
 800fd90:	b002      	add	sp, #8
 800fd92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd96:	b002      	add	sp, #8
 800fd98:	4770      	bx	lr
 800fd9a:	bf00      	nop
 800fd9c:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fda0 <vsnprintf>:
 800fda0:	b538      	push	{r3, r4, r5, lr}
 800fda2:	4605      	mov	r5, r0
 800fda4:	4c05      	ldr	r4, [pc, #20]	; (800fdbc <vsnprintf+0x1c>)
 800fda6:	4608      	mov	r0, r1
 800fda8:	4611      	mov	r1, r2
 800fdaa:	461a      	mov	r2, r3
 800fdac:	6025      	str	r5, [r4, #0]
 800fdae:	f7ff fea5 	bl	800fafc <_vprintf>
 800fdb2:	2300      	movs	r3, #0
 800fdb4:	6822      	ldr	r2, [r4, #0]
 800fdb6:	6023      	str	r3, [r4, #0]
 800fdb8:	7013      	strb	r3, [r2, #0]
 800fdba:	bd38      	pop	{r3, r4, r5, pc}
 800fdbc:	20009bc0 	andcs	r9, r0, r0, asr #23

0800fdc0 <puts>:
 800fdc0:	b508      	push	{r3, lr}
 800fdc2:	f7ff fb19 	bl	800f3f8 <console_puts>
 800fdc6:	200a      	movs	r0, #10
 800fdc8:	f7ff fb14 	bl	800f3f4 <console_putc>
 800fdcc:	2001      	movs	r0, #1
 800fdce:	bd08      	pop	{r3, pc}

0800fdd0 <strtok>:
 800fdd0:	b530      	push	{r4, r5, lr}
 800fdd2:	b910      	cbnz	r0, 800fdda <strtok+0xa>
 800fdd4:	4b12      	ldr	r3, [pc, #72]	; (800fe20 <strtok+0x50>)
 800fdd6:	6818      	ldr	r0, [r3, #0]
 800fdd8:	b158      	cbz	r0, 800fdf2 <strtok+0x22>
 800fdda:	4603      	mov	r3, r0
 800fddc:	460d      	mov	r5, r1
 800fdde:	4618      	mov	r0, r3
 800fde0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fde4:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fde8:	b924      	cbnz	r4, 800fdf4 <strtok+0x24>
 800fdea:	b94a      	cbnz	r2, 800fe00 <strtok+0x30>
 800fdec:	4610      	mov	r0, r2
 800fdee:	4b0c      	ldr	r3, [pc, #48]	; (800fe20 <strtok+0x50>)
 800fdf0:	601a      	str	r2, [r3, #0]
 800fdf2:	bd30      	pop	{r4, r5, pc}
 800fdf4:	42a2      	cmp	r2, r4
 800fdf6:	d1f5      	bne.n	800fde4 <strtok+0x14>
 800fdf8:	e7f0      	b.n	800fddc <strtok+0xc>
 800fdfa:	4613      	mov	r3, r2
 800fdfc:	e00c      	b.n	800fe18 <strtok+0x48>
 800fdfe:	b914      	cbnz	r4, 800fe06 <strtok+0x36>
 800fe00:	460d      	mov	r5, r1
 800fe02:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fe06:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fe0a:	42a2      	cmp	r2, r4
 800fe0c:	d1f7      	bne.n	800fdfe <strtok+0x2e>
 800fe0e:	2a00      	cmp	r2, #0
 800fe10:	d0f3      	beq.n	800fdfa <strtok+0x2a>
 800fe12:	2200      	movs	r2, #0
 800fe14:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fe18:	4a01      	ldr	r2, [pc, #4]	; (800fe20 <strtok+0x50>)
 800fe1a:	6013      	str	r3, [r2, #0]
 800fe1c:	e7e9      	b.n	800fdf2 <strtok+0x22>
 800fe1e:	bf00      	nop
 800fe20:	20009bc4 	andcs	r9, r0, r4, asr #23

0800fe24 <isleapyear>:
 800fe24:	2264      	movs	r2, #100	; 0x64
 800fe26:	fb90 f3f2 	sdiv	r3, r0, r2
 800fe2a:	fb02 0313 	mls	r3, r2, r3, r0
 800fe2e:	b94b      	cbnz	r3, 800fe44 <isleapyear+0x20>
 800fe30:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800fe34:	fb90 f2f3 	sdiv	r2, r0, r3
 800fe38:	fb03 0012 	mls	r0, r3, r2, r0
 800fe3c:	fab0 f080 	clz	r0, r0
 800fe40:	0940      	lsrs	r0, r0, #5
 800fe42:	4770      	bx	lr
 800fe44:	f010 0f03 	tst.w	r0, #3
 800fe48:	bf0c      	ite	eq
 800fe4a:	2001      	moveq	r0, #1
 800fe4c:	2000      	movne	r0, #0
 800fe4e:	4770      	bx	lr

0800fe50 <getdaysofmonth>:
 800fe50:	b510      	push	{r4, lr}
 800fe52:	4604      	mov	r4, r0
 800fe54:	2c01      	cmp	r4, #1
 800fe56:	4608      	mov	r0, r1
 800fe58:	d102      	bne.n	800fe60 <getdaysofmonth+0x10>
 800fe5a:	f7ff ffe3 	bl	800fe24 <isleapyear>
 800fe5e:	b918      	cbnz	r0, 800fe68 <getdaysofmonth+0x18>
 800fe60:	4b02      	ldr	r3, [pc, #8]	; (800fe6c <getdaysofmonth+0x1c>)
 800fe62:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800fe66:	bd10      	pop	{r4, pc}
 800fe68:	201d      	movs	r0, #29
 800fe6a:	e7fc      	b.n	800fe66 <getdaysofmonth+0x16>
 800fe6c:	08013b48 	stmdaeq	r1, {r3, r6, r8, r9, fp, ip, sp}

0800fe70 <mktime>:
 800fe70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe74:	4604      	mov	r4, r0
 800fe76:	2800      	cmp	r0, #0
 800fe78:	d042      	beq.n	800ff00 <mktime+0x90>
 800fe7a:	6941      	ldr	r1, [r0, #20]
 800fe7c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800fe80:	2b45      	cmp	r3, #69	; 0x45
 800fe82:	d83d      	bhi.n	800ff00 <mktime+0x90>
 800fe84:	2600      	movs	r6, #0
 800fe86:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800fe8a:	f240 186d 	movw	r8, #365	; 0x16d
 800fe8e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800fe92:	42af      	cmp	r7, r5
 800fe94:	da23      	bge.n	800fede <mktime+0x6e>
 800fe96:	6927      	ldr	r7, [r4, #16]
 800fe98:	2f0b      	cmp	r7, #11
 800fe9a:	d831      	bhi.n	800ff00 <mktime+0x90>
 800fe9c:	2500      	movs	r5, #0
 800fe9e:	42af      	cmp	r7, r5
 800fea0:	d128      	bne.n	800fef4 <mktime+0x84>
 800fea2:	68e5      	ldr	r5, [r4, #12]
 800fea4:	2d00      	cmp	r5, #0
 800fea6:	dd2b      	ble.n	800ff00 <mktime+0x90>
 800fea8:	4638      	mov	r0, r7
 800feaa:	f7ff ffd1 	bl	800fe50 <getdaysofmonth>
 800feae:	4285      	cmp	r5, r0
 800feb0:	dc26      	bgt.n	800ff00 <mktime+0x90>
 800feb2:	2318      	movs	r3, #24
 800feb4:	3d01      	subs	r5, #1
 800feb6:	4435      	add	r5, r6
 800feb8:	435d      	muls	r5, r3
 800feba:	68a3      	ldr	r3, [r4, #8]
 800febc:	2b17      	cmp	r3, #23
 800febe:	d81f      	bhi.n	800ff00 <mktime+0x90>
 800fec0:	203c      	movs	r0, #60	; 0x3c
 800fec2:	442b      	add	r3, r5
 800fec4:	fb00 f503 	mul.w	r5, r0, r3
 800fec8:	6863      	ldr	r3, [r4, #4]
 800feca:	2b3b      	cmp	r3, #59	; 0x3b
 800fecc:	d818      	bhi.n	800ff00 <mktime+0x90>
 800fece:	442b      	add	r3, r5
 800fed0:	4343      	muls	r3, r0
 800fed2:	6820      	ldr	r0, [r4, #0]
 800fed4:	283b      	cmp	r0, #59	; 0x3b
 800fed6:	d813      	bhi.n	800ff00 <mktime+0x90>
 800fed8:	4418      	add	r0, r3
 800feda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fede:	4628      	mov	r0, r5
 800fee0:	f7ff ffa0 	bl	800fe24 <isleapyear>
 800fee4:	2800      	cmp	r0, #0
 800fee6:	bf14      	ite	ne
 800fee8:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800feec:	4643      	moveq	r3, r8
 800feee:	3501      	adds	r5, #1
 800fef0:	441e      	add	r6, r3
 800fef2:	e7ce      	b.n	800fe92 <mktime+0x22>
 800fef4:	4628      	mov	r0, r5
 800fef6:	f7ff ffab 	bl	800fe50 <getdaysofmonth>
 800fefa:	3501      	adds	r5, #1
 800fefc:	4406      	add	r6, r0
 800fefe:	e7ce      	b.n	800fe9e <mktime+0x2e>
 800ff00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ff04:	e7e9      	b.n	800feda <mktime+0x6a>
	...

0800ff08 <gettimeofday>:
 800ff08:	b538      	push	{r3, r4, r5, lr}
 800ff0a:	4b10      	ldr	r3, [pc, #64]	; (800ff4c <gettimeofday+0x44>)
 800ff0c:	4a10      	ldr	r2, [pc, #64]	; (800ff50 <gettimeofday+0x48>)
 800ff0e:	681b      	ldr	r3, [r3, #0]
 800ff10:	6814      	ldr	r4, [r2, #0]
 800ff12:	6013      	str	r3, [r2, #0]
 800ff14:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ff18:	429c      	cmp	r4, r3
 800ff1a:	bf2c      	ite	cs
 800ff1c:	1ae4      	subcs	r4, r4, r3
 800ff1e:	1b1c      	subcc	r4, r3, r4
 800ff20:	4354      	muls	r4, r2
 800ff22:	4b0c      	ldr	r3, [pc, #48]	; (800ff54 <gettimeofday+0x4c>)
 800ff24:	4605      	mov	r5, r0
 800ff26:	e9d3 2100 	ldrd	r2, r1, [r3]
 800ff2a:	18a4      	adds	r4, r4, r2
 800ff2c:	f141 0100 	adc.w	r1, r1, #0
 800ff30:	e9c3 4100 	strd	r4, r1, [r3]
 800ff34:	4620      	mov	r0, r4
 800ff36:	2300      	movs	r3, #0
 800ff38:	4a07      	ldr	r2, [pc, #28]	; (800ff58 <gettimeofday+0x50>)
 800ff3a:	f7f7 fdd9 	bl	8007af0 <__aeabi_uldivmod>
 800ff3e:	4b06      	ldr	r3, [pc, #24]	; (800ff58 <gettimeofday+0x50>)
 800ff40:	6028      	str	r0, [r5, #0]
 800ff42:	fb03 4410 	mls	r4, r3, r0, r4
 800ff46:	2000      	movs	r0, #0
 800ff48:	606c      	str	r4, [r5, #4]
 800ff4a:	bd38      	pop	{r3, r4, r5, pc}
 800ff4c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ff50:	20009bd0 	ldrdcs	r9, [r0], -r0
 800ff54:	20009bc8 	andcs	r9, r0, r8, asr #23
 800ff58:	000f4240 	andeq	r4, pc, r0, asr #4

0800ff5c <settimeofday>:
 800ff5c:	4b07      	ldr	r3, [pc, #28]	; (800ff7c <settimeofday+0x20>)
 800ff5e:	b510      	push	{r4, lr}
 800ff60:	681a      	ldr	r2, [r3, #0]
 800ff62:	4b07      	ldr	r3, [pc, #28]	; (800ff80 <settimeofday+0x24>)
 800ff64:	6804      	ldr	r4, [r0, #0]
 800ff66:	601a      	str	r2, [r3, #0]
 800ff68:	6843      	ldr	r3, [r0, #4]
 800ff6a:	4806      	ldr	r0, [pc, #24]	; (800ff84 <settimeofday+0x28>)
 800ff6c:	17da      	asrs	r2, r3, #31
 800ff6e:	fbc4 3200 	smlal	r3, r2, r4, r0
 800ff72:	4905      	ldr	r1, [pc, #20]	; (800ff88 <settimeofday+0x2c>)
 800ff74:	2000      	movs	r0, #0
 800ff76:	e9c1 3200 	strd	r3, r2, [r1]
 800ff7a:	bd10      	pop	{r4, pc}
 800ff7c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ff80:	20009bd0 	ldrdcs	r9, [r0], -r0
 800ff84:	000f4240 	andeq	r4, pc, r0, asr #4
 800ff88:	20009bc8 	andcs	r9, r0, r8, asr #23

0800ff8c <time>:
 800ff8c:	b513      	push	{r0, r1, r4, lr}
 800ff8e:	4604      	mov	r4, r0
 800ff90:	2100      	movs	r1, #0
 800ff92:	4668      	mov	r0, sp
 800ff94:	f7ff ffb8 	bl	800ff08 <gettimeofday>
 800ff98:	9800      	ldr	r0, [sp, #0]
 800ff9a:	b104      	cbz	r4, 800ff9e <time+0x12>
 800ff9c:	6020      	str	r0, [r4, #0]
 800ff9e:	b002      	add	sp, #8
 800ffa0:	bd10      	pop	{r4, pc}
	...

0800ffa4 <uart0_init>:
 800ffa4:	2301      	movs	r3, #1
 800ffa6:	b507      	push	{r0, r1, r2, lr}
 800ffa8:	2208      	movs	r2, #8
 800ffaa:	9300      	str	r3, [sp, #0]
 800ffac:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800ffb0:	2300      	movs	r3, #0
 800ffb2:	4803      	ldr	r0, [pc, #12]	; (800ffc0 <uart0_init+0x1c>)
 800ffb4:	f001 f834 	bl	8011020 <gd32_uart_begin>
 800ffb8:	b003      	add	sp, #12
 800ffba:	f85d fb04 	ldr.w	pc, [sp], #4
 800ffbe:	bf00      	nop
 800ffc0:	40013800 	andmi	r3, r1, r0, lsl #16

0800ffc4 <uart0_putc>:
 800ffc4:	280a      	cmp	r0, #10
 800ffc6:	b538      	push	{r3, r4, r5, lr}
 800ffc8:	4604      	mov	r4, r0
 800ffca:	d10a      	bne.n	800ffe2 <uart0_putc+0x1e>
 800ffcc:	4d0b      	ldr	r5, [pc, #44]	; (800fffc <uart0_putc+0x38>)
 800ffce:	2107      	movs	r1, #7
 800ffd0:	4628      	mov	r0, r5
 800ffd2:	f000 fd8f 	bl	8010af4 <usart_flag_get>
 800ffd6:	2800      	cmp	r0, #0
 800ffd8:	d0f9      	beq.n	800ffce <uart0_putc+0xa>
 800ffda:	220d      	movs	r2, #13
 800ffdc:	4b08      	ldr	r3, [pc, #32]	; (8010000 <uart0_putc+0x3c>)
 800ffde:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800ffe2:	4d06      	ldr	r5, [pc, #24]	; (800fffc <uart0_putc+0x38>)
 800ffe4:	2107      	movs	r1, #7
 800ffe6:	4628      	mov	r0, r5
 800ffe8:	f000 fd84 	bl	8010af4 <usart_flag_get>
 800ffec:	2800      	cmp	r0, #0
 800ffee:	d0f9      	beq.n	800ffe4 <uart0_putc+0x20>
 800fff0:	4b03      	ldr	r3, [pc, #12]	; (8010000 <uart0_putc+0x3c>)
 800fff2:	b2e4      	uxtb	r4, r4
 800fff4:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800fff8:	bd38      	pop	{r3, r4, r5, pc}
 800fffa:	bf00      	nop
 800fffc:	40013800 	andmi	r3, r1, r0, lsl #16
 8010000:	40013000 	andmi	r3, r1, r0

08010004 <uart0_puts>:
 8010004:	b510      	push	{r4, lr}
 8010006:	1e44      	subs	r4, r0, #1
 8010008:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801000c:	b903      	cbnz	r3, 8010010 <uart0_puts+0xc>
 801000e:	bd10      	pop	{r4, pc}
 8010010:	2b0a      	cmp	r3, #10
 8010012:	d102      	bne.n	801001a <uart0_puts+0x16>
 8010014:	200d      	movs	r0, #13
 8010016:	f7ff ffd5 	bl	800ffc4 <uart0_putc>
 801001a:	7820      	ldrb	r0, [r4, #0]
 801001c:	f7ff ffd2 	bl	800ffc4 <uart0_putc>
 8010020:	e7f2      	b.n	8010008 <uart0_puts+0x4>
	...

08010024 <systick_config>:
 8010024:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010028:	4b0b      	ldr	r3, [pc, #44]	; (8010058 <systick_config+0x34>)
 801002a:	681b      	ldr	r3, [r3, #0]
 801002c:	fbb3 f3f2 	udiv	r3, r3, r2
 8010030:	3b01      	subs	r3, #1
 8010032:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8010036:	d20d      	bcs.n	8010054 <systick_config+0x30>
 8010038:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 801003c:	21f0      	movs	r1, #240	; 0xf0
 801003e:	6153      	str	r3, [r2, #20]
 8010040:	4b06      	ldr	r3, [pc, #24]	; (801005c <systick_config+0x38>)
 8010042:	2007      	movs	r0, #7
 8010044:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8010048:	2100      	movs	r1, #0
 801004a:	6191      	str	r1, [r2, #24]
 801004c:	6110      	str	r0, [r2, #16]
 801004e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8010052:	4770      	bx	lr
 8010054:	e7fe      	b.n	8010054 <systick_config+0x30>
 8010056:	bf00      	nop
 8010058:	200000f4 	strdcs	r0, [r0], -r4
 801005c:	e000ed00 	and	lr, r0, r0, lsl #26

08010060 <SysTick_Handler>:
 8010060:	4a02      	ldr	r2, [pc, #8]	; (801006c <SysTick_Handler+0xc>)
 8010062:	6813      	ldr	r3, [r2, #0]
 8010064:	3301      	adds	r3, #1
 8010066:	6013      	str	r3, [r2, #0]
 8010068:	4770      	bx	lr
 801006a:	bf00      	nop
 801006c:	20009bd4 	ldrdcs	r9, [r0], -r4

08010070 <SystemInit>:
 8010070:	4b37      	ldr	r3, [pc, #220]	; (8010150 <SystemInit+0xe0>)
 8010072:	4838      	ldr	r0, [pc, #224]	; (8010154 <SystemInit+0xe4>)
 8010074:	681a      	ldr	r2, [r3, #0]
 8010076:	f042 0201 	orr.w	r2, r2, #1
 801007a:	601a      	str	r2, [r3, #0]
 801007c:	685a      	ldr	r2, [r3, #4]
 801007e:	f022 0203 	bic.w	r2, r2, #3
 8010082:	605a      	str	r2, [r3, #4]
 8010084:	6819      	ldr	r1, [r3, #0]
 8010086:	4001      	ands	r1, r0
 8010088:	6019      	str	r1, [r3, #0]
 801008a:	685a      	ldr	r2, [r3, #4]
 801008c:	4932      	ldr	r1, [pc, #200]	; (8010158 <SystemInit+0xe8>)
 801008e:	4011      	ands	r1, r2
 8010090:	6059      	str	r1, [r3, #4]
 8010092:	681a      	ldr	r2, [r3, #0]
 8010094:	4002      	ands	r2, r0
 8010096:	601a      	str	r2, [r3, #0]
 8010098:	681a      	ldr	r2, [r3, #0]
 801009a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801009e:	601a      	str	r2, [r3, #0]
 80100a0:	685a      	ldr	r2, [r3, #4]
 80100a2:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80100a6:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80100aa:	605a      	str	r2, [r3, #4]
 80100ac:	2200      	movs	r2, #0
 80100ae:	62da      	str	r2, [r3, #44]	; 0x2c
 80100b0:	681a      	ldr	r2, [r3, #0]
 80100b2:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 80100b6:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 80100ba:	601a      	str	r2, [r3, #0]
 80100bc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80100c0:	609a      	str	r2, [r3, #8]
 80100c2:	681a      	ldr	r2, [r3, #0]
 80100c4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80100c8:	601a      	str	r2, [r3, #0]
 80100ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80100ce:	6819      	ldr	r1, [r3, #0]
 80100d0:	0389      	lsls	r1, r1, #14
 80100d2:	d401      	bmi.n	80100d8 <SystemInit+0x68>
 80100d4:	3a01      	subs	r2, #1
 80100d6:	d1fa      	bne.n	80100ce <SystemInit+0x5e>
 80100d8:	681a      	ldr	r2, [r3, #0]
 80100da:	0392      	lsls	r2, r2, #14
 80100dc:	d400      	bmi.n	80100e0 <SystemInit+0x70>
 80100de:	e7fe      	b.n	80100de <SystemInit+0x6e>
 80100e0:	685a      	ldr	r2, [r3, #4]
 80100e2:	605a      	str	r2, [r3, #4]
 80100e4:	685a      	ldr	r2, [r3, #4]
 80100e6:	605a      	str	r2, [r3, #4]
 80100e8:	685a      	ldr	r2, [r3, #4]
 80100ea:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80100ee:	605a      	str	r2, [r3, #4]
 80100f0:	685a      	ldr	r2, [r3, #4]
 80100f2:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 80100f6:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 80100fa:	605a      	str	r2, [r3, #4]
 80100fc:	685a      	ldr	r2, [r3, #4]
 80100fe:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8010102:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 8010106:	605a      	str	r2, [r3, #4]
 8010108:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801010a:	4a14      	ldr	r2, [pc, #80]	; (801015c <SystemInit+0xec>)
 801010c:	400a      	ands	r2, r1
 801010e:	62da      	str	r2, [r3, #44]	; 0x2c
 8010110:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010112:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 8010116:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 801011a:	62da      	str	r2, [r3, #44]	; 0x2c
 801011c:	681a      	ldr	r2, [r3, #0]
 801011e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8010122:	601a      	str	r2, [r3, #0]
 8010124:	681a      	ldr	r2, [r3, #0]
 8010126:	0110      	lsls	r0, r2, #4
 8010128:	d5fc      	bpl.n	8010124 <SystemInit+0xb4>
 801012a:	681a      	ldr	r2, [r3, #0]
 801012c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8010130:	601a      	str	r2, [r3, #0]
 8010132:	681a      	ldr	r2, [r3, #0]
 8010134:	0191      	lsls	r1, r2, #6
 8010136:	d5fc      	bpl.n	8010132 <SystemInit+0xc2>
 8010138:	685a      	ldr	r2, [r3, #4]
 801013a:	f022 0203 	bic.w	r2, r2, #3
 801013e:	605a      	str	r2, [r3, #4]
 8010140:	685a      	ldr	r2, [r3, #4]
 8010142:	f042 0202 	orr.w	r2, r2, #2
 8010146:	605a      	str	r2, [r3, #4]
 8010148:	685a      	ldr	r2, [r3, #4]
 801014a:	0712      	lsls	r2, r2, #28
 801014c:	d5fc      	bpl.n	8010148 <SystemInit+0xd8>
 801014e:	4770      	bx	lr
 8010150:	40021000 	andmi	r1, r2, r0
 8010154:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8010158:	e0ff000c 	rscs	r0, pc, ip
 801015c:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08010160 <bkp_deinit>:
 8010160:	b508      	push	{r3, lr}
 8010162:	f000 f9f1 	bl	8010548 <rcu_bkp_reset_enable>
 8010166:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801016a:	f000 b9f5 	b.w	8010558 <rcu_bkp_reset_disable>
	...

08010170 <bkp_data_write>:
 8010170:	f1a0 030b 	sub.w	r3, r0, #11
 8010174:	2b1f      	cmp	r3, #31
 8010176:	d804      	bhi.n	8010182 <bkp_data_write+0x12>
 8010178:	4b07      	ldr	r3, [pc, #28]	; (8010198 <bkp_data_write+0x28>)
 801017a:	4403      	add	r3, r0
 801017c:	009b      	lsls	r3, r3, #2
 801017e:	8019      	strh	r1, [r3, #0]
 8010180:	4770      	bx	lr
 8010182:	1e43      	subs	r3, r0, #1
 8010184:	2b09      	cmp	r3, #9
 8010186:	bf9f      	itttt	ls
 8010188:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 801018c:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8010190:	0080      	lslls	r0, r0, #2
 8010192:	8001      	strhls	r1, [r0, #0]
 8010194:	4770      	bx	lr
 8010196:	bf00      	nop
 8010198:	10001b05 	andne	r1, r0, r5, lsl #22

0801019c <bkp_data_read>:
 801019c:	f1a0 030b 	sub.w	r3, r0, #11
 80101a0:	2b1f      	cmp	r3, #31
 80101a2:	d805      	bhi.n	80101b0 <bkp_data_read+0x14>
 80101a4:	4b08      	ldr	r3, [pc, #32]	; (80101c8 <bkp_data_read+0x2c>)
 80101a6:	4403      	add	r3, r0
 80101a8:	009b      	lsls	r3, r3, #2
 80101aa:	8818      	ldrh	r0, [r3, #0]
 80101ac:	b280      	uxth	r0, r0
 80101ae:	4770      	bx	lr
 80101b0:	1e43      	subs	r3, r0, #1
 80101b2:	2b09      	cmp	r3, #9
 80101b4:	d806      	bhi.n	80101c4 <bkp_data_read+0x28>
 80101b6:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 80101ba:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80101be:	0080      	lsls	r0, r0, #2
 80101c0:	8800      	ldrh	r0, [r0, #0]
 80101c2:	e7f3      	b.n	80101ac <bkp_data_read+0x10>
 80101c4:	2000      	movs	r0, #0
 80101c6:	4770      	bx	lr
 80101c8:	10001b05 	andne	r1, r0, r5, lsl #22

080101cc <dma_deinit>:
 80101cc:	4b0c      	ldr	r3, [pc, #48]	; (8010200 <dma_deinit+0x34>)
 80101ce:	4298      	cmp	r0, r3
 80101d0:	d102      	bne.n	80101d8 <dma_deinit+0xc>
 80101d2:	2904      	cmp	r1, #4
 80101d4:	d900      	bls.n	80101d8 <dma_deinit+0xc>
 80101d6:	e7fe      	b.n	80101d6 <dma_deinit+0xa>
 80101d8:	2314      	movs	r3, #20
 80101da:	fb03 0301 	mla	r3, r3, r1, r0
 80101de:	689a      	ldr	r2, [r3, #8]
 80101e0:	0089      	lsls	r1, r1, #2
 80101e2:	f022 0201 	bic.w	r2, r2, #1
 80101e6:	609a      	str	r2, [r3, #8]
 80101e8:	2200      	movs	r2, #0
 80101ea:	609a      	str	r2, [r3, #8]
 80101ec:	60da      	str	r2, [r3, #12]
 80101ee:	611a      	str	r2, [r3, #16]
 80101f0:	615a      	str	r2, [r3, #20]
 80101f2:	230f      	movs	r3, #15
 80101f4:	6842      	ldr	r2, [r0, #4]
 80101f6:	fa03 f101 	lsl.w	r1, r3, r1
 80101fa:	4311      	orrs	r1, r2
 80101fc:	6041      	str	r1, [r0, #4]
 80101fe:	4770      	bx	lr
 8010200:	40020400 	andmi	r0, r2, r0, lsl #8

08010204 <dma_init>:
 8010204:	4b1b      	ldr	r3, [pc, #108]	; (8010274 <dma_init+0x70>)
 8010206:	b510      	push	{r4, lr}
 8010208:	4298      	cmp	r0, r3
 801020a:	d102      	bne.n	8010212 <dma_init+0xe>
 801020c:	2904      	cmp	r1, #4
 801020e:	d900      	bls.n	8010212 <dma_init+0xe>
 8010210:	e7fe      	b.n	8010210 <dma_init+0xc>
 8010212:	2314      	movs	r3, #20
 8010214:	fb03 0101 	mla	r1, r3, r1, r0
 8010218:	6813      	ldr	r3, [r2, #0]
 801021a:	610b      	str	r3, [r1, #16]
 801021c:	6893      	ldr	r3, [r2, #8]
 801021e:	614b      	str	r3, [r1, #20]
 8010220:	8a13      	ldrh	r3, [r2, #16]
 8010222:	60cb      	str	r3, [r1, #12]
 8010224:	68d4      	ldr	r4, [r2, #12]
 8010226:	6853      	ldr	r3, [r2, #4]
 8010228:	6888      	ldr	r0, [r1, #8]
 801022a:	4323      	orrs	r3, r4
 801022c:	6954      	ldr	r4, [r2, #20]
 801022e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8010232:	4323      	orrs	r3, r4
 8010234:	4303      	orrs	r3, r0
 8010236:	608b      	str	r3, [r1, #8]
 8010238:	7e13      	ldrb	r3, [r2, #24]
 801023a:	2b01      	cmp	r3, #1
 801023c:	688b      	ldr	r3, [r1, #8]
 801023e:	bf0c      	ite	eq
 8010240:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8010244:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8010248:	608b      	str	r3, [r1, #8]
 801024a:	7e53      	ldrb	r3, [r2, #25]
 801024c:	2b01      	cmp	r3, #1
 801024e:	688b      	ldr	r3, [r1, #8]
 8010250:	bf0c      	ite	eq
 8010252:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8010256:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 801025a:	608b      	str	r3, [r1, #8]
 801025c:	7e93      	ldrb	r3, [r2, #26]
 801025e:	b923      	cbnz	r3, 801026a <dma_init+0x66>
 8010260:	688b      	ldr	r3, [r1, #8]
 8010262:	f023 0310 	bic.w	r3, r3, #16
 8010266:	608b      	str	r3, [r1, #8]
 8010268:	bd10      	pop	{r4, pc}
 801026a:	688b      	ldr	r3, [r1, #8]
 801026c:	f043 0310 	orr.w	r3, r3, #16
 8010270:	e7f9      	b.n	8010266 <dma_init+0x62>
 8010272:	bf00      	nop
 8010274:	40020400 	andmi	r0, r2, r0, lsl #8

08010278 <dma_circulation_disable>:
 8010278:	4b06      	ldr	r3, [pc, #24]	; (8010294 <dma_circulation_disable+0x1c>)
 801027a:	4298      	cmp	r0, r3
 801027c:	d102      	bne.n	8010284 <dma_circulation_disable+0xc>
 801027e:	2904      	cmp	r1, #4
 8010280:	d900      	bls.n	8010284 <dma_circulation_disable+0xc>
 8010282:	e7fe      	b.n	8010282 <dma_circulation_disable+0xa>
 8010284:	2314      	movs	r3, #20
 8010286:	4359      	muls	r1, r3
 8010288:	3008      	adds	r0, #8
 801028a:	580b      	ldr	r3, [r1, r0]
 801028c:	f023 0320 	bic.w	r3, r3, #32
 8010290:	500b      	str	r3, [r1, r0]
 8010292:	4770      	bx	lr
 8010294:	40020400 	andmi	r0, r2, r0, lsl #8

08010298 <dma_memory_to_memory_disable>:
 8010298:	4b06      	ldr	r3, [pc, #24]	; (80102b4 <dma_memory_to_memory_disable+0x1c>)
 801029a:	4298      	cmp	r0, r3
 801029c:	d102      	bne.n	80102a4 <dma_memory_to_memory_disable+0xc>
 801029e:	2904      	cmp	r1, #4
 80102a0:	d900      	bls.n	80102a4 <dma_memory_to_memory_disable+0xc>
 80102a2:	e7fe      	b.n	80102a2 <dma_memory_to_memory_disable+0xa>
 80102a4:	2314      	movs	r3, #20
 80102a6:	4359      	muls	r1, r3
 80102a8:	3008      	adds	r0, #8
 80102aa:	580b      	ldr	r3, [r1, r0]
 80102ac:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80102b0:	500b      	str	r3, [r1, r0]
 80102b2:	4770      	bx	lr
 80102b4:	40020400 	andmi	r0, r2, r0, lsl #8

080102b8 <fmc_bank0_unlock>:
 80102b8:	4b04      	ldr	r3, [pc, #16]	; (80102cc <fmc_bank0_unlock+0x14>)
 80102ba:	691a      	ldr	r2, [r3, #16]
 80102bc:	0612      	lsls	r2, r2, #24
 80102be:	bf41      	itttt	mi
 80102c0:	4a03      	ldrmi	r2, [pc, #12]	; (80102d0 <fmc_bank0_unlock+0x18>)
 80102c2:	605a      	strmi	r2, [r3, #4]
 80102c4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80102c8:	605a      	strmi	r2, [r3, #4]
 80102ca:	4770      	bx	lr
 80102cc:	40022000 	andmi	r2, r2, r0
 80102d0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080102d4 <fmc_bank1_unlock>:
 80102d4:	4b04      	ldr	r3, [pc, #16]	; (80102e8 <fmc_bank1_unlock+0x14>)
 80102d6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80102d8:	0612      	lsls	r2, r2, #24
 80102da:	bf41      	itttt	mi
 80102dc:	4a03      	ldrmi	r2, [pc, #12]	; (80102ec <fmc_bank1_unlock+0x18>)
 80102de:	645a      	strmi	r2, [r3, #68]	; 0x44
 80102e0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80102e4:	645a      	strmi	r2, [r3, #68]	; 0x44
 80102e6:	4770      	bx	lr
 80102e8:	40022000 	andmi	r2, r2, r0
 80102ec:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080102f0 <fmc_bank0_lock>:
 80102f0:	4a02      	ldr	r2, [pc, #8]	; (80102fc <fmc_bank0_lock+0xc>)
 80102f2:	6913      	ldr	r3, [r2, #16]
 80102f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80102f8:	6113      	str	r3, [r2, #16]
 80102fa:	4770      	bx	lr
 80102fc:	40022000 	andmi	r2, r2, r0

08010300 <fmc_bank1_lock>:
 8010300:	4a02      	ldr	r2, [pc, #8]	; (801030c <fmc_bank1_lock+0xc>)
 8010302:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8010304:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010308:	6513      	str	r3, [r2, #80]	; 0x50
 801030a:	4770      	bx	lr
 801030c:	40022000 	andmi	r2, r2, r0

08010310 <fmc_bank0_state_get>:
 8010310:	4b08      	ldr	r3, [pc, #32]	; (8010334 <fmc_bank0_state_get+0x24>)
 8010312:	68da      	ldr	r2, [r3, #12]
 8010314:	07d1      	lsls	r1, r2, #31
 8010316:	d409      	bmi.n	801032c <fmc_bank0_state_get+0x1c>
 8010318:	68da      	ldr	r2, [r3, #12]
 801031a:	06d2      	lsls	r2, r2, #27
 801031c:	d408      	bmi.n	8010330 <fmc_bank0_state_get+0x20>
 801031e:	68db      	ldr	r3, [r3, #12]
 8010320:	f013 0f04 	tst.w	r3, #4
 8010324:	bf0c      	ite	eq
 8010326:	2000      	moveq	r0, #0
 8010328:	2002      	movne	r0, #2
 801032a:	4770      	bx	lr
 801032c:	2001      	movs	r0, #1
 801032e:	4770      	bx	lr
 8010330:	2003      	movs	r0, #3
 8010332:	4770      	bx	lr
 8010334:	40022000 	andmi	r2, r2, r0

08010338 <fmc_bank1_state_get>:
 8010338:	4b08      	ldr	r3, [pc, #32]	; (801035c <fmc_bank1_state_get+0x24>)
 801033a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801033c:	07d1      	lsls	r1, r2, #31
 801033e:	d409      	bmi.n	8010354 <fmc_bank1_state_get+0x1c>
 8010340:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010342:	06d2      	lsls	r2, r2, #27
 8010344:	d408      	bmi.n	8010358 <fmc_bank1_state_get+0x20>
 8010346:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010348:	f013 0f04 	tst.w	r3, #4
 801034c:	bf0c      	ite	eq
 801034e:	2000      	moveq	r0, #0
 8010350:	2002      	movne	r0, #2
 8010352:	4770      	bx	lr
 8010354:	2001      	movs	r0, #1
 8010356:	4770      	bx	lr
 8010358:	2003      	movs	r0, #3
 801035a:	4770      	bx	lr
 801035c:	40022000 	andmi	r2, r2, r0

08010360 <fwdgt_enable>:
 8010360:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8010364:	4b01      	ldr	r3, [pc, #4]	; (801036c <fwdgt_enable+0xc>)
 8010366:	601a      	str	r2, [r3, #0]
 8010368:	4770      	bx	lr
 801036a:	bf00      	nop
 801036c:	40003000 	andmi	r3, r0, r0

08010370 <fwdgt_counter_reload>:
 8010370:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8010374:	4b01      	ldr	r3, [pc, #4]	; (801037c <fwdgt_counter_reload+0xc>)
 8010376:	601a      	str	r2, [r3, #0]
 8010378:	4770      	bx	lr
 801037a:	bf00      	nop
 801037c:	40003000 	andmi	r3, r0, r0

08010380 <fwdgt_config>:
 8010380:	f245 5355 	movw	r3, #21845	; 0x5555
 8010384:	4a11      	ldr	r2, [pc, #68]	; (80103cc <fwdgt_config+0x4c>)
 8010386:	b510      	push	{r4, lr}
 8010388:	4c11      	ldr	r4, [pc, #68]	; (80103d0 <fwdgt_config+0x50>)
 801038a:	6013      	str	r3, [r2, #0]
 801038c:	68d3      	ldr	r3, [r2, #12]
 801038e:	3c01      	subs	r4, #1
 8010390:	f003 0301 	and.w	r3, r3, #1
 8010394:	d013      	beq.n	80103be <fwdgt_config+0x3e>
 8010396:	2b00      	cmp	r3, #0
 8010398:	d1f8      	bne.n	801038c <fwdgt_config+0xc>
 801039a:	6051      	str	r1, [r2, #4]
 801039c:	490c      	ldr	r1, [pc, #48]	; (80103d0 <fwdgt_config+0x50>)
 801039e:	4a0b      	ldr	r2, [pc, #44]	; (80103cc <fwdgt_config+0x4c>)
 80103a0:	68d3      	ldr	r3, [r2, #12]
 80103a2:	3901      	subs	r1, #1
 80103a4:	f003 0302 	and.w	r3, r3, #2
 80103a8:	d00d      	beq.n	80103c6 <fwdgt_config+0x46>
 80103aa:	2b00      	cmp	r3, #0
 80103ac:	d1f8      	bne.n	80103a0 <fwdgt_config+0x20>
 80103ae:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80103b2:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80103b6:	6090      	str	r0, [r2, #8]
 80103b8:	2001      	movs	r0, #1
 80103ba:	6013      	str	r3, [r2, #0]
 80103bc:	e002      	b.n	80103c4 <fwdgt_config+0x44>
 80103be:	2b00      	cmp	r3, #0
 80103c0:	d0eb      	beq.n	801039a <fwdgt_config+0x1a>
 80103c2:	2000      	movs	r0, #0
 80103c4:	bd10      	pop	{r4, pc}
 80103c6:	2b00      	cmp	r3, #0
 80103c8:	d1fb      	bne.n	80103c2 <fwdgt_config+0x42>
 80103ca:	e7f0      	b.n	80103ae <fwdgt_config+0x2e>
 80103cc:	40003000 	andmi	r3, r0, r0
 80103d0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080103d4 <gpio_init>:
 80103d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103d8:	f04f 0c0f 	mov.w	ip, #15
 80103dc:	06cf      	lsls	r7, r1, #27
 80103de:	f04f 0400 	mov.w	r4, #0
 80103e2:	f04f 0701 	mov.w	r7, #1
 80103e6:	f001 050f 	and.w	r5, r1, #15
 80103ea:	bf48      	it	mi
 80103ec:	4315      	orrmi	r5, r2
 80103ee:	fa23 f204 	lsr.w	r2, r3, r4
 80103f2:	07d6      	lsls	r6, r2, #31
 80103f4:	d510      	bpl.n	8010418 <gpio_init+0x44>
 80103f6:	00a2      	lsls	r2, r4, #2
 80103f8:	6806      	ldr	r6, [r0, #0]
 80103fa:	fa0c fe02 	lsl.w	lr, ip, r2
 80103fe:	ea26 060e 	bic.w	r6, r6, lr
 8010402:	fa05 f202 	lsl.w	r2, r5, r2
 8010406:	2928      	cmp	r1, #40	; 0x28
 8010408:	ea42 0206 	orr.w	r2, r2, r6
 801040c:	d128      	bne.n	8010460 <gpio_init+0x8c>
 801040e:	fa07 f604 	lsl.w	r6, r7, r4
 8010412:	401e      	ands	r6, r3
 8010414:	6146      	str	r6, [r0, #20]
 8010416:	6002      	str	r2, [r0, #0]
 8010418:	3401      	adds	r4, #1
 801041a:	2c08      	cmp	r4, #8
 801041c:	d1e7      	bne.n	80103ee <gpio_init+0x1a>
 801041e:	2600      	movs	r6, #0
 8010420:	f04f 0c0f 	mov.w	ip, #15
 8010424:	2701      	movs	r7, #1
 8010426:	f106 0208 	add.w	r2, r6, #8
 801042a:	fa23 f402 	lsr.w	r4, r3, r2
 801042e:	07e4      	lsls	r4, r4, #31
 8010430:	d511      	bpl.n	8010456 <gpio_init+0x82>
 8010432:	00b4      	lsls	r4, r6, #2
 8010434:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8010438:	fa0c f804 	lsl.w	r8, ip, r4
 801043c:	ea2e 0e08 	bic.w	lr, lr, r8
 8010440:	fa05 f404 	lsl.w	r4, r5, r4
 8010444:	2928      	cmp	r1, #40	; 0x28
 8010446:	ea44 040e 	orr.w	r4, r4, lr
 801044a:	d110      	bne.n	801046e <gpio_init+0x9a>
 801044c:	fa07 f202 	lsl.w	r2, r7, r2
 8010450:	401a      	ands	r2, r3
 8010452:	6142      	str	r2, [r0, #20]
 8010454:	6044      	str	r4, [r0, #4]
 8010456:	3601      	adds	r6, #1
 8010458:	2e08      	cmp	r6, #8
 801045a:	d1e4      	bne.n	8010426 <gpio_init+0x52>
 801045c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010460:	2948      	cmp	r1, #72	; 0x48
 8010462:	bf02      	ittt	eq
 8010464:	fa07 f604 	lsleq.w	r6, r7, r4
 8010468:	401e      	andeq	r6, r3
 801046a:	6106      	streq	r6, [r0, #16]
 801046c:	e7d3      	b.n	8010416 <gpio_init+0x42>
 801046e:	2948      	cmp	r1, #72	; 0x48
 8010470:	bf02      	ittt	eq
 8010472:	fa07 f202 	lsleq.w	r2, r7, r2
 8010476:	401a      	andeq	r2, r3
 8010478:	6102      	streq	r2, [r0, #16]
 801047a:	e7eb      	b.n	8010454 <gpio_init+0x80>

0801047c <gpio_pin_remap_config>:
 801047c:	2800      	cmp	r0, #0
 801047e:	4a16      	ldr	r2, [pc, #88]	; (80104d8 <gpio_pin_remap_config+0x5c>)
 8010480:	b530      	push	{r4, r5, lr}
 8010482:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8010486:	bfb4      	ite	lt
 8010488:	69d3      	ldrlt	r3, [r2, #28]
 801048a:	6853      	ldrge	r3, [r2, #4]
 801048c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8010490:	b284      	uxth	r4, r0
 8010492:	d110      	bne.n	80104b6 <gpio_pin_remap_config+0x3a>
 8010494:	6855      	ldr	r5, [r2, #4]
 8010496:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 801049a:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801049e:	6055      	str	r5, [r2, #4]
 80104a0:	b119      	cbz	r1, 80104aa <gpio_pin_remap_config+0x2e>
 80104a2:	0d42      	lsrs	r2, r0, #21
 80104a4:	0112      	lsls	r2, r2, #4
 80104a6:	4094      	lsls	r4, r2
 80104a8:	4323      	orrs	r3, r4
 80104aa:	4a0b      	ldr	r2, [pc, #44]	; (80104d8 <gpio_pin_remap_config+0x5c>)
 80104ac:	2800      	cmp	r0, #0
 80104ae:	bfb4      	ite	lt
 80104b0:	61d3      	strlt	r3, [r2, #28]
 80104b2:	6053      	strge	r3, [r2, #4]
 80104b4:	bd30      	pop	{r4, r5, pc}
 80104b6:	02c2      	lsls	r2, r0, #11
 80104b8:	bf4d      	iteet	mi
 80104ba:	2203      	movmi	r2, #3
 80104bc:	0d42      	lsrpl	r2, r0, #21
 80104be:	0112      	lslpl	r2, r2, #4
 80104c0:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80104c4:	bf4c      	ite	mi
 80104c6:	40aa      	lslmi	r2, r5
 80104c8:	fa04 f202 	lslpl.w	r2, r4, r2
 80104cc:	ea23 0302 	bic.w	r3, r3, r2
 80104d0:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80104d4:	e7e4      	b.n	80104a0 <gpio_pin_remap_config+0x24>
 80104d6:	bf00      	nop
 80104d8:	40010000 	andmi	r0, r1, r0

080104dc <gpio_ethernet_phy_select>:
 80104dc:	4b04      	ldr	r3, [pc, #16]	; (80104f0 <gpio_ethernet_phy_select+0x14>)
 80104de:	6859      	ldr	r1, [r3, #4]
 80104e0:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 80104e4:	6059      	str	r1, [r3, #4]
 80104e6:	685a      	ldr	r2, [r3, #4]
 80104e8:	4302      	orrs	r2, r0
 80104ea:	605a      	str	r2, [r3, #4]
 80104ec:	4770      	bx	lr
 80104ee:	bf00      	nop
 80104f0:	40010000 	andmi	r0, r1, r0

080104f4 <pmu_backup_write_enable>:
 80104f4:	4a02      	ldr	r2, [pc, #8]	; (8010500 <pmu_backup_write_enable+0xc>)
 80104f6:	6813      	ldr	r3, [r2, #0]
 80104f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80104fc:	6013      	str	r3, [r2, #0]
 80104fe:	4770      	bx	lr
 8010500:	40007000 	andmi	r7, r0, r0

08010504 <rcu_periph_clock_enable>:
 8010504:	2201      	movs	r2, #1
 8010506:	0983      	lsrs	r3, r0, #6
 8010508:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801050c:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8010510:	6819      	ldr	r1, [r3, #0]
 8010512:	f000 001f 	and.w	r0, r0, #31
 8010516:	fa02 f000 	lsl.w	r0, r2, r0
 801051a:	4308      	orrs	r0, r1
 801051c:	6018      	str	r0, [r3, #0]
 801051e:	4770      	bx	lr

08010520 <rcu_periph_clock_disable>:
 8010520:	2101      	movs	r1, #1
 8010522:	0983      	lsrs	r3, r0, #6
 8010524:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010528:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801052c:	681a      	ldr	r2, [r3, #0]
 801052e:	f000 001f 	and.w	r0, r0, #31
 8010532:	fa01 f000 	lsl.w	r0, r1, r0
 8010536:	ea22 0000 	bic.w	r0, r2, r0
 801053a:	6018      	str	r0, [r3, #0]
 801053c:	4770      	bx	lr

0801053e <rcu_periph_reset_enable>:
 801053e:	f7ff bfe1 	b.w	8010504 <rcu_periph_clock_enable>

08010542 <rcu_periph_reset_disable>:
 8010542:	f7ff bfed 	b.w	8010520 <rcu_periph_clock_disable>
	...

08010548 <rcu_bkp_reset_enable>:
 8010548:	4a02      	ldr	r2, [pc, #8]	; (8010554 <rcu_bkp_reset_enable+0xc>)
 801054a:	6a13      	ldr	r3, [r2, #32]
 801054c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8010550:	6213      	str	r3, [r2, #32]
 8010552:	4770      	bx	lr
 8010554:	40021000 	andmi	r1, r2, r0

08010558 <rcu_bkp_reset_disable>:
 8010558:	4a02      	ldr	r2, [pc, #8]	; (8010564 <rcu_bkp_reset_disable+0xc>)
 801055a:	6a13      	ldr	r3, [r2, #32]
 801055c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8010560:	6213      	str	r3, [r2, #32]
 8010562:	4770      	bx	lr
 8010564:	40021000 	andmi	r1, r2, r0

08010568 <rcu_ckout0_config>:
 8010568:	4a03      	ldr	r2, [pc, #12]	; (8010578 <rcu_ckout0_config+0x10>)
 801056a:	6853      	ldr	r3, [r2, #4]
 801056c:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8010570:	4303      	orrs	r3, r0
 8010572:	6053      	str	r3, [r2, #4]
 8010574:	4770      	bx	lr
 8010576:	bf00      	nop
 8010578:	40021000 	andmi	r1, r2, r0

0801057c <rcu_pll2_config>:
 801057c:	4b04      	ldr	r3, [pc, #16]	; (8010590 <rcu_pll2_config+0x14>)
 801057e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8010580:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8010584:	62d9      	str	r1, [r3, #44]	; 0x2c
 8010586:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010588:	4302      	orrs	r2, r0
 801058a:	62da      	str	r2, [r3, #44]	; 0x2c
 801058c:	4770      	bx	lr
 801058e:	bf00      	nop
 8010590:	40021000 	andmi	r1, r2, r0

08010594 <rcu_adc_clock_config>:
 8010594:	490c      	ldr	r1, [pc, #48]	; (80105c8 <rcu_adc_clock_config+0x34>)
 8010596:	2805      	cmp	r0, #5
 8010598:	684b      	ldr	r3, [r1, #4]
 801059a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801059e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80105a2:	d006      	beq.n	80105b2 <rcu_adc_clock_config+0x1e>
 80105a4:	d803      	bhi.n	80105ae <rcu_adc_clock_config+0x1a>
 80105a6:	2804      	cmp	r0, #4
 80105a8:	d10a      	bne.n	80105c0 <rcu_adc_clock_config+0x2c>
 80105aa:	604b      	str	r3, [r1, #4]
 80105ac:	4770      	bx	lr
 80105ae:	2807      	cmp	r0, #7
 80105b0:	d1fb      	bne.n	80105aa <rcu_adc_clock_config+0x16>
 80105b2:	4a06      	ldr	r2, [pc, #24]	; (80105cc <rcu_adc_clock_config+0x38>)
 80105b4:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 80105b8:	4303      	orrs	r3, r0
 80105ba:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80105be:	e7f4      	b.n	80105aa <rcu_adc_clock_config+0x16>
 80105c0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 80105c4:	e7f1      	b.n	80105aa <rcu_adc_clock_config+0x16>
 80105c6:	bf00      	nop
 80105c8:	40021000 	andmi	r1, r2, r0
 80105cc:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

080105d0 <rcu_flag_get>:
 80105d0:	0983      	lsrs	r3, r0, #6
 80105d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80105d6:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80105da:	681b      	ldr	r3, [r3, #0]
 80105dc:	f000 001f 	and.w	r0, r0, #31
 80105e0:	fa23 f000 	lsr.w	r0, r3, r0
 80105e4:	f000 0001 	and.w	r0, r0, #1
 80105e8:	4770      	bx	lr
	...

080105ec <rcu_osci_stab_wait>:
 80105ec:	281a      	cmp	r0, #26
 80105ee:	b508      	push	{r3, lr}
 80105f0:	d051      	beq.n	8010696 <rcu_osci_stab_wait+0xaa>
 80105f2:	d806      	bhi.n	8010602 <rcu_osci_stab_wait+0x16>
 80105f4:	2810      	cmp	r0, #16
 80105f6:	d015      	beq.n	8010624 <rcu_osci_stab_wait+0x38>
 80105f8:	2818      	cmp	r0, #24
 80105fa:	d043      	beq.n	8010684 <rcu_osci_stab_wait+0x98>
 80105fc:	b368      	cbz	r0, 801065a <rcu_osci_stab_wait+0x6e>
 80105fe:	2000      	movs	r0, #0
 8010600:	bd08      	pop	{r3, pc}
 8010602:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8010606:	d01c      	beq.n	8010642 <rcu_osci_stab_wait+0x56>
 8010608:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 801060c:	d02f      	beq.n	801066e <rcu_osci_stab_wait+0x82>
 801060e:	281c      	cmp	r0, #28
 8010610:	d1f5      	bne.n	80105fe <rcu_osci_stab_wait+0x12>
 8010612:	4a25      	ldr	r2, [pc, #148]	; (80106a8 <rcu_osci_stab_wait+0xbc>)
 8010614:	201d      	movs	r0, #29
 8010616:	f7ff ffdb 	bl	80105d0 <rcu_flag_get>
 801061a:	b908      	cbnz	r0, 8010620 <rcu_osci_stab_wait+0x34>
 801061c:	3a01      	subs	r2, #1
 801061e:	d1f9      	bne.n	8010614 <rcu_osci_stab_wait+0x28>
 8010620:	201d      	movs	r0, #29
 8010622:	e008      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 8010624:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010628:	2011      	movs	r0, #17
 801062a:	f7ff ffd1 	bl	80105d0 <rcu_flag_get>
 801062e:	b908      	cbnz	r0, 8010634 <rcu_osci_stab_wait+0x48>
 8010630:	3a01      	subs	r2, #1
 8010632:	d1f9      	bne.n	8010628 <rcu_osci_stab_wait+0x3c>
 8010634:	2011      	movs	r0, #17
 8010636:	f7ff ffcb 	bl	80105d0 <rcu_flag_get>
 801063a:	3800      	subs	r0, #0
 801063c:	bf18      	it	ne
 801063e:	2001      	movne	r0, #1
 8010640:	e7de      	b.n	8010600 <rcu_osci_stab_wait+0x14>
 8010642:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 8010646:	f640 0001 	movw	r0, #2049	; 0x801
 801064a:	f7ff ffc1 	bl	80105d0 <rcu_flag_get>
 801064e:	b908      	cbnz	r0, 8010654 <rcu_osci_stab_wait+0x68>
 8010650:	3a01      	subs	r2, #1
 8010652:	d1f8      	bne.n	8010646 <rcu_osci_stab_wait+0x5a>
 8010654:	f640 0001 	movw	r0, #2049	; 0x801
 8010658:	e7ed      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 801065a:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 801065e:	2001      	movs	r0, #1
 8010660:	f7ff ffb6 	bl	80105d0 <rcu_flag_get>
 8010664:	b908      	cbnz	r0, 801066a <rcu_osci_stab_wait+0x7e>
 8010666:	3a01      	subs	r2, #1
 8010668:	d1f9      	bne.n	801065e <rcu_osci_stab_wait+0x72>
 801066a:	2001      	movs	r0, #1
 801066c:	e7e3      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 801066e:	4a0e      	ldr	r2, [pc, #56]	; (80106a8 <rcu_osci_stab_wait+0xbc>)
 8010670:	f640 1001 	movw	r0, #2305	; 0x901
 8010674:	f7ff ffac 	bl	80105d0 <rcu_flag_get>
 8010678:	b908      	cbnz	r0, 801067e <rcu_osci_stab_wait+0x92>
 801067a:	3a01      	subs	r2, #1
 801067c:	d1f8      	bne.n	8010670 <rcu_osci_stab_wait+0x84>
 801067e:	f640 1001 	movw	r0, #2305	; 0x901
 8010682:	e7d8      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 8010684:	4a08      	ldr	r2, [pc, #32]	; (80106a8 <rcu_osci_stab_wait+0xbc>)
 8010686:	2019      	movs	r0, #25
 8010688:	f7ff ffa2 	bl	80105d0 <rcu_flag_get>
 801068c:	b908      	cbnz	r0, 8010692 <rcu_osci_stab_wait+0xa6>
 801068e:	3a01      	subs	r2, #1
 8010690:	d1f9      	bne.n	8010686 <rcu_osci_stab_wait+0x9a>
 8010692:	2019      	movs	r0, #25
 8010694:	e7cf      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 8010696:	4a04      	ldr	r2, [pc, #16]	; (80106a8 <rcu_osci_stab_wait+0xbc>)
 8010698:	201b      	movs	r0, #27
 801069a:	f7ff ff99 	bl	80105d0 <rcu_flag_get>
 801069e:	b908      	cbnz	r0, 80106a4 <rcu_osci_stab_wait+0xb8>
 80106a0:	3a01      	subs	r2, #1
 80106a2:	d1f9      	bne.n	8010698 <rcu_osci_stab_wait+0xac>
 80106a4:	201b      	movs	r0, #27
 80106a6:	e7c6      	b.n	8010636 <rcu_osci_stab_wait+0x4a>
 80106a8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080106ac <rcu_osci_on>:
 80106ac:	f7ff bf2a 	b.w	8010504 <rcu_periph_clock_enable>

080106b0 <rcu_clock_freq_get>:
 80106b0:	4b3d      	ldr	r3, [pc, #244]	; (80107a8 <rcu_clock_freq_get+0xf8>)
 80106b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106b4:	4604      	mov	r4, r0
 80106b6:	461f      	mov	r7, r3
 80106b8:	b089      	sub	sp, #36	; 0x24
 80106ba:	ad04      	add	r5, sp, #16
 80106bc:	f103 0610 	add.w	r6, r3, #16
 80106c0:	462a      	mov	r2, r5
 80106c2:	6818      	ldr	r0, [r3, #0]
 80106c4:	6859      	ldr	r1, [r3, #4]
 80106c6:	3308      	adds	r3, #8
 80106c8:	c203      	stmia	r2!, {r0, r1}
 80106ca:	42b3      	cmp	r3, r6
 80106cc:	4615      	mov	r5, r2
 80106ce:	d1f7      	bne.n	80106c0 <rcu_clock_freq_get+0x10>
 80106d0:	466b      	mov	r3, sp
 80106d2:	6938      	ldr	r0, [r7, #16]
 80106d4:	6871      	ldr	r1, [r6, #4]
 80106d6:	4a35      	ldr	r2, [pc, #212]	; (80107ac <rcu_clock_freq_get+0xfc>)
 80106d8:	c303      	stmia	r3!, {r0, r1}
 80106da:	c303      	stmia	r3!, {r0, r1}
 80106dc:	6853      	ldr	r3, [r2, #4]
 80106de:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80106e2:	2b01      	cmp	r3, #1
 80106e4:	d053      	beq.n	801078e <rcu_clock_freq_get+0xde>
 80106e6:	2b02      	cmp	r3, #2
 80106e8:	d153      	bne.n	8010792 <rcu_clock_freq_get+0xe2>
 80106ea:	6853      	ldr	r3, [r2, #4]
 80106ec:	03dd      	lsls	r5, r3, #15
 80106ee:	d523      	bpl.n	8010738 <rcu_clock_freq_get+0x88>
 80106f0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80106f2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80106f6:	4b2e      	ldr	r3, [pc, #184]	; (80107b0 <rcu_clock_freq_get+0x100>)
 80106f8:	d00e      	beq.n	8010718 <rcu_clock_freq_get+0x68>
 80106fa:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80106fc:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80106fe:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8010702:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8010706:	3101      	adds	r1, #1
 8010708:	280f      	cmp	r0, #15
 801070a:	f100 0502 	add.w	r5, r0, #2
 801070e:	fbb3 f3f1 	udiv	r3, r3, r1
 8010712:	bf08      	it	eq
 8010714:	2514      	moveq	r5, #20
 8010716:	436b      	muls	r3, r5
 8010718:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801071a:	f001 010f 	and.w	r1, r1, #15
 801071e:	3101      	adds	r1, #1
 8010720:	fbb3 f3f1 	udiv	r3, r3, r1
 8010724:	6851      	ldr	r1, [r2, #4]
 8010726:	6850      	ldr	r0, [r2, #4]
 8010728:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801072c:	0080      	lsls	r0, r0, #2
 801072e:	d505      	bpl.n	801073c <rcu_clock_freq_get+0x8c>
 8010730:	f041 0110 	orr.w	r1, r1, #16
 8010734:	1c48      	adds	r0, r1, #1
 8010736:	e007      	b.n	8010748 <rcu_clock_freq_get+0x98>
 8010738:	4b1e      	ldr	r3, [pc, #120]	; (80107b4 <rcu_clock_freq_get+0x104>)
 801073a:	e7f3      	b.n	8010724 <rcu_clock_freq_get+0x74>
 801073c:	290f      	cmp	r1, #15
 801073e:	d0f9      	beq.n	8010734 <rcu_clock_freq_get+0x84>
 8010740:	290d      	cmp	r1, #13
 8010742:	f101 0002 	add.w	r0, r1, #2
 8010746:	d01d      	beq.n	8010784 <rcu_clock_freq_get+0xd4>
 8010748:	4343      	muls	r3, r0
 801074a:	6851      	ldr	r1, [r2, #4]
 801074c:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8010750:	3120      	adds	r1, #32
 8010752:	4469      	add	r1, sp
 8010754:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8010758:	fa23 f001 	lsr.w	r0, r3, r1
 801075c:	6851      	ldr	r1, [r2, #4]
 801075e:	6852      	ldr	r2, [r2, #4]
 8010760:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8010764:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8010768:	3120      	adds	r1, #32
 801076a:	3220      	adds	r2, #32
 801076c:	4469      	add	r1, sp
 801076e:	446a      	add	r2, sp
 8010770:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8010774:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8010778:	2c03      	cmp	r4, #3
 801077a:	d813      	bhi.n	80107a4 <rcu_clock_freq_get+0xf4>
 801077c:	e8df f004 	tbb	[pc, r4]
 8010780:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8010784:	2006      	movs	r0, #6
 8010786:	0859      	lsrs	r1, r3, #1
 8010788:	fb00 1303 	mla	r3, r0, r3, r1
 801078c:	e7dd      	b.n	801074a <rcu_clock_freq_get+0x9a>
 801078e:	4b08      	ldr	r3, [pc, #32]	; (80107b0 <rcu_clock_freq_get+0x100>)
 8010790:	e7db      	b.n	801074a <rcu_clock_freq_get+0x9a>
 8010792:	4b09      	ldr	r3, [pc, #36]	; (80107b8 <rcu_clock_freq_get+0x108>)
 8010794:	e7d9      	b.n	801074a <rcu_clock_freq_get+0x9a>
 8010796:	4618      	mov	r0, r3
 8010798:	b009      	add	sp, #36	; 0x24
 801079a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801079c:	40c8      	lsrs	r0, r1
 801079e:	e7fb      	b.n	8010798 <rcu_clock_freq_get+0xe8>
 80107a0:	40d0      	lsrs	r0, r2
 80107a2:	e7f9      	b.n	8010798 <rcu_clock_freq_get+0xe8>
 80107a4:	2000      	movs	r0, #0
 80107a6:	e7f7      	b.n	8010798 <rcu_clock_freq_get+0xe8>
 80107a8:	08011cf0 	stmdaeq	r1, {r4, r5, r6, r7, sl, fp, ip}
 80107ac:	40021000 	andmi	r1, r2, r0
 80107b0:	017d7840 	cmneq	sp, r0, asr #16
 80107b4:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80107b8:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080107bc <timer_deinit>:
 80107bc:	b508      	push	{r3, lr}
 80107be:	4b2d      	ldr	r3, [pc, #180]	; (8010874 <timer_deinit+0xb8>)
 80107c0:	4298      	cmp	r0, r3
 80107c2:	d048      	beq.n	8010856 <timer_deinit+0x9a>
 80107c4:	d816      	bhi.n	80107f4 <timer_deinit+0x38>
 80107c6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80107ca:	4298      	cmp	r0, r3
 80107cc:	d03c      	beq.n	8010848 <timer_deinit+0x8c>
 80107ce:	d807      	bhi.n	80107e0 <timer_deinit+0x24>
 80107d0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80107d4:	d02a      	beq.n	801082c <timer_deinit+0x70>
 80107d6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80107da:	4298      	cmp	r0, r3
 80107dc:	d02d      	beq.n	801083a <timer_deinit+0x7e>
 80107de:	bd08      	pop	{r3, pc}
 80107e0:	4b25      	ldr	r3, [pc, #148]	; (8010878 <timer_deinit+0xbc>)
 80107e2:	4298      	cmp	r0, r3
 80107e4:	d1fb      	bne.n	80107de <timer_deinit+0x22>
 80107e6:	f240 4003 	movw	r0, #1027	; 0x403
 80107ea:	f7ff fea8 	bl	801053e <rcu_periph_reset_enable>
 80107ee:	f240 4003 	movw	r0, #1027	; 0x403
 80107f2:	e017      	b.n	8010824 <timer_deinit+0x68>
 80107f4:	4b21      	ldr	r3, [pc, #132]	; (801087c <timer_deinit+0xc0>)
 80107f6:	4298      	cmp	r0, r3
 80107f8:	d00e      	beq.n	8010818 <timer_deinit+0x5c>
 80107fa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80107fe:	4298      	cmp	r0, r3
 8010800:	d030      	beq.n	8010864 <timer_deinit+0xa8>
 8010802:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8010806:	4298      	cmp	r0, r3
 8010808:	d1e9      	bne.n	80107de <timer_deinit+0x22>
 801080a:	f240 4005 	movw	r0, #1029	; 0x405
 801080e:	f7ff fe96 	bl	801053e <rcu_periph_reset_enable>
 8010812:	f240 4005 	movw	r0, #1029	; 0x405
 8010816:	e005      	b.n	8010824 <timer_deinit+0x68>
 8010818:	f240 300b 	movw	r0, #779	; 0x30b
 801081c:	f7ff fe8f 	bl	801053e <rcu_periph_reset_enable>
 8010820:	f240 300b 	movw	r0, #779	; 0x30b
 8010824:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010828:	f7ff be8b 	b.w	8010542 <rcu_periph_reset_disable>
 801082c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010830:	f7ff fe85 	bl	801053e <rcu_periph_reset_enable>
 8010834:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8010838:	e7f4      	b.n	8010824 <timer_deinit+0x68>
 801083a:	f240 4001 	movw	r0, #1025	; 0x401
 801083e:	f7ff fe7e 	bl	801053e <rcu_periph_reset_enable>
 8010842:	f240 4001 	movw	r0, #1025	; 0x401
 8010846:	e7ed      	b.n	8010824 <timer_deinit+0x68>
 8010848:	f240 4002 	movw	r0, #1026	; 0x402
 801084c:	f7ff fe77 	bl	801053e <rcu_periph_reset_enable>
 8010850:	f240 4002 	movw	r0, #1026	; 0x402
 8010854:	e7e6      	b.n	8010824 <timer_deinit+0x68>
 8010856:	f240 4004 	movw	r0, #1028	; 0x404
 801085a:	f7ff fe70 	bl	801053e <rcu_periph_reset_enable>
 801085e:	f240 4004 	movw	r0, #1028	; 0x404
 8010862:	e7df      	b.n	8010824 <timer_deinit+0x68>
 8010864:	f240 300d 	movw	r0, #781	; 0x30d
 8010868:	f7ff fe69 	bl	801053e <rcu_periph_reset_enable>
 801086c:	f240 300d 	movw	r0, #781	; 0x30d
 8010870:	e7d8      	b.n	8010824 <timer_deinit+0x68>
 8010872:	bf00      	nop
 8010874:	40001000 	andmi	r1, r0, r0
 8010878:	40000c00 	andmi	r0, r0, r0, lsl #24
 801087c:	40012c00 	andmi	r2, r1, r0, lsl #24

08010880 <timer_init>:
 8010880:	880b      	ldrh	r3, [r1, #0]
 8010882:	6283      	str	r3, [r0, #40]	; 0x28
 8010884:	4b26      	ldr	r3, [pc, #152]	; (8010920 <timer_init+0xa0>)
 8010886:	4298      	cmp	r0, r3
 8010888:	d018      	beq.n	80108bc <timer_init+0x3c>
 801088a:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801088e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8010892:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8010896:	d011      	beq.n	80108bc <timer_init+0x3c>
 8010898:	4a22      	ldr	r2, [pc, #136]	; (8010924 <timer_init+0xa4>)
 801089a:	4290      	cmp	r0, r2
 801089c:	d00e      	beq.n	80108bc <timer_init+0x3c>
 801089e:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80108a2:	4290      	cmp	r0, r2
 80108a4:	d00a      	beq.n	80108bc <timer_init+0x3c>
 80108a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80108aa:	4293      	cmp	r3, r2
 80108ac:	d006      	beq.n	80108bc <timer_init+0x3c>
 80108ae:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80108b2:	4293      	cmp	r3, r2
 80108b4:	d002      	beq.n	80108bc <timer_init+0x3c>
 80108b6:	4b1c      	ldr	r3, [pc, #112]	; (8010928 <timer_init+0xa8>)
 80108b8:	4298      	cmp	r0, r3
 80108ba:	d10f      	bne.n	80108dc <timer_init+0x5c>
 80108bc:	6803      	ldr	r3, [r0, #0]
 80108be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80108c2:	6003      	str	r3, [r0, #0]
 80108c4:	884b      	ldrh	r3, [r1, #2]
 80108c6:	6802      	ldr	r2, [r0, #0]
 80108c8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80108cc:	4313      	orrs	r3, r2
 80108ce:	6003      	str	r3, [r0, #0]
 80108d0:	888b      	ldrh	r3, [r1, #4]
 80108d2:	6802      	ldr	r2, [r0, #0]
 80108d4:	f003 0310 	and.w	r3, r3, #16
 80108d8:	4313      	orrs	r3, r2
 80108da:	6003      	str	r3, [r0, #0]
 80108dc:	688b      	ldr	r3, [r1, #8]
 80108de:	62c3      	str	r3, [r0, #44]	; 0x2c
 80108e0:	4b12      	ldr	r3, [pc, #72]	; (801092c <timer_init+0xac>)
 80108e2:	4298      	cmp	r0, r3
 80108e4:	d003      	beq.n	80108ee <timer_init+0x6e>
 80108e6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80108ea:	4298      	cmp	r0, r3
 80108ec:	d104      	bne.n	80108f8 <timer_init+0x78>
 80108ee:	6943      	ldr	r3, [r0, #20]
 80108f0:	f043 0301 	orr.w	r3, r3, #1
 80108f4:	6143      	str	r3, [r0, #20]
 80108f6:	4770      	bx	lr
 80108f8:	6803      	ldr	r3, [r0, #0]
 80108fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80108fe:	6003      	str	r3, [r0, #0]
 8010900:	898b      	ldrh	r3, [r1, #12]
 8010902:	6802      	ldr	r2, [r0, #0]
 8010904:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8010908:	4313      	orrs	r3, r2
 801090a:	6003      	str	r3, [r0, #0]
 801090c:	4b04      	ldr	r3, [pc, #16]	; (8010920 <timer_init+0xa0>)
 801090e:	4298      	cmp	r0, r3
 8010910:	d002      	beq.n	8010918 <timer_init+0x98>
 8010912:	4b04      	ldr	r3, [pc, #16]	; (8010924 <timer_init+0xa4>)
 8010914:	4298      	cmp	r0, r3
 8010916:	d1ea      	bne.n	80108ee <timer_init+0x6e>
 8010918:	7b8b      	ldrb	r3, [r1, #14]
 801091a:	6303      	str	r3, [r0, #48]	; 0x30
 801091c:	e7e7      	b.n	80108ee <timer_init+0x6e>
 801091e:	bf00      	nop
 8010920:	40012c00 	andmi	r2, r1, r0, lsl #24
 8010924:	40013400 	andmi	r3, r1, r0, lsl #8
 8010928:	40002000 	andmi	r2, r0, r0
 801092c:	40001000 	andmi	r1, r0, r0

08010930 <timer_enable>:
 8010930:	6803      	ldr	r3, [r0, #0]
 8010932:	f043 0301 	orr.w	r3, r3, #1
 8010936:	6003      	str	r3, [r0, #0]
 8010938:	4770      	bx	lr

0801093a <timer_channel_output_mode_config>:
 801093a:	2903      	cmp	r1, #3
 801093c:	d81a      	bhi.n	8010974 <timer_channel_output_mode_config+0x3a>
 801093e:	e8df f001 	tbb	[pc, r1]
 8010942:	1a120a02 	bne	8493152 <__exidx_end+0x47f5d2>
 8010946:	6983      	ldr	r3, [r0, #24]
 8010948:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801094c:	6183      	str	r3, [r0, #24]
 801094e:	6983      	ldr	r3, [r0, #24]
 8010950:	431a      	orrs	r2, r3
 8010952:	6182      	str	r2, [r0, #24]
 8010954:	4770      	bx	lr
 8010956:	6983      	ldr	r3, [r0, #24]
 8010958:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801095c:	6183      	str	r3, [r0, #24]
 801095e:	6983      	ldr	r3, [r0, #24]
 8010960:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8010964:	e7f5      	b.n	8010952 <timer_channel_output_mode_config+0x18>
 8010966:	69c3      	ldr	r3, [r0, #28]
 8010968:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801096c:	61c3      	str	r3, [r0, #28]
 801096e:	69c3      	ldr	r3, [r0, #28]
 8010970:	431a      	orrs	r2, r3
 8010972:	61c2      	str	r2, [r0, #28]
 8010974:	4770      	bx	lr
 8010976:	69c3      	ldr	r3, [r0, #28]
 8010978:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801097c:	61c3      	str	r3, [r0, #28]
 801097e:	69c3      	ldr	r3, [r0, #28]
 8010980:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8010984:	e7f5      	b.n	8010972 <timer_channel_output_mode_config+0x38>

08010986 <timer_channel_output_pulse_value_config>:
 8010986:	2903      	cmp	r1, #3
 8010988:	d80a      	bhi.n	80109a0 <timer_channel_output_pulse_value_config+0x1a>
 801098a:	e8df f001 	tbb	[pc, r1]
 801098e:	08060402 	stmdaeq	r6, {r1, sl}
 8010992:	6342      	str	r2, [r0, #52]	; 0x34
 8010994:	4770      	bx	lr
 8010996:	6382      	str	r2, [r0, #56]	; 0x38
 8010998:	4770      	bx	lr
 801099a:	63c2      	str	r2, [r0, #60]	; 0x3c
 801099c:	4770      	bx	lr
 801099e:	6402      	str	r2, [r0, #64]	; 0x40
 80109a0:	4770      	bx	lr

080109a2 <timer_interrupt_enable>:
 80109a2:	68c3      	ldr	r3, [r0, #12]
 80109a4:	430b      	orrs	r3, r1
 80109a6:	60c3      	str	r3, [r0, #12]
 80109a8:	4770      	bx	lr

080109aa <timer_interrupt_flag_clear>:
 80109aa:	43c9      	mvns	r1, r1
 80109ac:	6101      	str	r1, [r0, #16]
 80109ae:	4770      	bx	lr

080109b0 <timer_flag_clear>:
 80109b0:	43c9      	mvns	r1, r1
 80109b2:	6101      	str	r1, [r0, #16]
 80109b4:	4770      	bx	lr
	...

080109b8 <usart_deinit>:
 80109b8:	b508      	push	{r3, lr}
 80109ba:	4b1d      	ldr	r3, [pc, #116]	; (8010a30 <usart_deinit+0x78>)
 80109bc:	4298      	cmp	r0, r3
 80109be:	d028      	beq.n	8010a12 <usart_deinit+0x5a>
 80109c0:	d808      	bhi.n	80109d4 <usart_deinit+0x1c>
 80109c2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80109c6:	4298      	cmp	r0, r3
 80109c8:	d015      	beq.n	80109f6 <usart_deinit+0x3e>
 80109ca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80109ce:	4298      	cmp	r0, r3
 80109d0:	d018      	beq.n	8010a04 <usart_deinit+0x4c>
 80109d2:	bd08      	pop	{r3, pc}
 80109d4:	4b17      	ldr	r3, [pc, #92]	; (8010a34 <usart_deinit+0x7c>)
 80109d6:	4298      	cmp	r0, r3
 80109d8:	d022      	beq.n	8010a20 <usart_deinit+0x68>
 80109da:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80109de:	4298      	cmp	r0, r3
 80109e0:	d1f7      	bne.n	80109d2 <usart_deinit+0x1a>
 80109e2:	f240 300e 	movw	r0, #782	; 0x30e
 80109e6:	f7ff fdaa 	bl	801053e <rcu_periph_reset_enable>
 80109ea:	f240 300e 	movw	r0, #782	; 0x30e
 80109ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80109f2:	f7ff bda6 	b.w	8010542 <rcu_periph_reset_disable>
 80109f6:	f240 4011 	movw	r0, #1041	; 0x411
 80109fa:	f7ff fda0 	bl	801053e <rcu_periph_reset_enable>
 80109fe:	f240 4011 	movw	r0, #1041	; 0x411
 8010a02:	e7f4      	b.n	80109ee <usart_deinit+0x36>
 8010a04:	f240 4012 	movw	r0, #1042	; 0x412
 8010a08:	f7ff fd99 	bl	801053e <rcu_periph_reset_enable>
 8010a0c:	f240 4012 	movw	r0, #1042	; 0x412
 8010a10:	e7ed      	b.n	80109ee <usart_deinit+0x36>
 8010a12:	f240 4013 	movw	r0, #1043	; 0x413
 8010a16:	f7ff fd92 	bl	801053e <rcu_periph_reset_enable>
 8010a1a:	f240 4013 	movw	r0, #1043	; 0x413
 8010a1e:	e7e6      	b.n	80109ee <usart_deinit+0x36>
 8010a20:	f240 4014 	movw	r0, #1044	; 0x414
 8010a24:	f7ff fd8b 	bl	801053e <rcu_periph_reset_enable>
 8010a28:	f240 4014 	movw	r0, #1044	; 0x414
 8010a2c:	e7df      	b.n	80109ee <usart_deinit+0x36>
 8010a2e:	bf00      	nop
 8010a30:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010a34:	40005000 	andmi	r5, r0, r0

08010a38 <usart_baudrate_set>:
 8010a38:	b538      	push	{r3, r4, r5, lr}
 8010a3a:	4b11      	ldr	r3, [pc, #68]	; (8010a80 <usart_baudrate_set+0x48>)
 8010a3c:	4604      	mov	r4, r0
 8010a3e:	4298      	cmp	r0, r3
 8010a40:	460d      	mov	r5, r1
 8010a42:	d01b      	beq.n	8010a7c <usart_baudrate_set+0x44>
 8010a44:	d809      	bhi.n	8010a5a <usart_baudrate_set+0x22>
 8010a46:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010a4a:	4298      	cmp	r0, r3
 8010a4c:	d016      	beq.n	8010a7c <usart_baudrate_set+0x44>
 8010a4e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010a52:	4298      	cmp	r0, r3
 8010a54:	d012      	beq.n	8010a7c <usart_baudrate_set+0x44>
 8010a56:	2000      	movs	r0, #0
 8010a58:	e009      	b.n	8010a6e <usart_baudrate_set+0x36>
 8010a5a:	4b0a      	ldr	r3, [pc, #40]	; (8010a84 <usart_baudrate_set+0x4c>)
 8010a5c:	4298      	cmp	r0, r3
 8010a5e:	d00d      	beq.n	8010a7c <usart_baudrate_set+0x44>
 8010a60:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8010a64:	4298      	cmp	r0, r3
 8010a66:	d1f6      	bne.n	8010a56 <usart_baudrate_set+0x1e>
 8010a68:	2003      	movs	r0, #3
 8010a6a:	f7ff fe21 	bl	80106b0 <rcu_clock_freq_get>
 8010a6e:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8010a72:	fbb3 f1f5 	udiv	r1, r3, r5
 8010a76:	b289      	uxth	r1, r1
 8010a78:	60a1      	str	r1, [r4, #8]
 8010a7a:	bd38      	pop	{r3, r4, r5, pc}
 8010a7c:	2002      	movs	r0, #2
 8010a7e:	e7f4      	b.n	8010a6a <usart_baudrate_set+0x32>
 8010a80:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010a84:	40005000 	andmi	r5, r0, r0

08010a88 <usart_parity_config>:
 8010a88:	68c2      	ldr	r2, [r0, #12]
 8010a8a:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8010a8e:	60c2      	str	r2, [r0, #12]
 8010a90:	68c3      	ldr	r3, [r0, #12]
 8010a92:	430b      	orrs	r3, r1
 8010a94:	60c3      	str	r3, [r0, #12]
 8010a96:	4770      	bx	lr

08010a98 <usart_word_length_set>:
 8010a98:	68c2      	ldr	r2, [r0, #12]
 8010a9a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8010a9e:	60c2      	str	r2, [r0, #12]
 8010aa0:	68c3      	ldr	r3, [r0, #12]
 8010aa2:	430b      	orrs	r3, r1
 8010aa4:	60c3      	str	r3, [r0, #12]
 8010aa6:	4770      	bx	lr

08010aa8 <usart_stop_bit_set>:
 8010aa8:	6902      	ldr	r2, [r0, #16]
 8010aaa:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8010aae:	6102      	str	r2, [r0, #16]
 8010ab0:	6903      	ldr	r3, [r0, #16]
 8010ab2:	430b      	orrs	r3, r1
 8010ab4:	6103      	str	r3, [r0, #16]
 8010ab6:	4770      	bx	lr

08010ab8 <usart_transmit_config>:
 8010ab8:	68c3      	ldr	r3, [r0, #12]
 8010aba:	f023 0308 	bic.w	r3, r3, #8
 8010abe:	430b      	orrs	r3, r1
 8010ac0:	60c3      	str	r3, [r0, #12]
 8010ac2:	4770      	bx	lr

08010ac4 <usart_receive_config>:
 8010ac4:	68c3      	ldr	r3, [r0, #12]
 8010ac6:	f023 0304 	bic.w	r3, r3, #4
 8010aca:	430b      	orrs	r3, r1
 8010acc:	60c3      	str	r3, [r0, #12]
 8010ace:	4770      	bx	lr

08010ad0 <usart_hardware_flow_rts_config>:
 8010ad0:	6943      	ldr	r3, [r0, #20]
 8010ad2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010ad6:	430b      	orrs	r3, r1
 8010ad8:	6143      	str	r3, [r0, #20]
 8010ada:	4770      	bx	lr

08010adc <usart_hardware_flow_cts_config>:
 8010adc:	6943      	ldr	r3, [r0, #20]
 8010ade:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8010ae2:	430b      	orrs	r3, r1
 8010ae4:	6143      	str	r3, [r0, #20]
 8010ae6:	4770      	bx	lr

08010ae8 <usart_dma_transmit_config>:
 8010ae8:	6943      	ldr	r3, [r0, #20]
 8010aea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8010aee:	430b      	orrs	r3, r1
 8010af0:	6143      	str	r3, [r0, #20]
 8010af2:	4770      	bx	lr

08010af4 <usart_flag_get>:
 8010af4:	098b      	lsrs	r3, r1, #6
 8010af6:	5818      	ldr	r0, [r3, r0]
 8010af8:	f001 011f 	and.w	r1, r1, #31
 8010afc:	40c8      	lsrs	r0, r1
 8010afe:	f000 0001 	and.w	r0, r0, #1
 8010b02:	4770      	bx	lr

08010b04 <usart_interrupt_enable>:
 8010b04:	2301      	movs	r3, #1
 8010b06:	b510      	push	{r4, lr}
 8010b08:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8010b0c:	5814      	ldr	r4, [r2, r0]
 8010b0e:	f001 011f 	and.w	r1, r1, #31
 8010b12:	fa03 f101 	lsl.w	r1, r3, r1
 8010b16:	4321      	orrs	r1, r4
 8010b18:	5011      	str	r1, [r2, r0]
 8010b1a:	bd10      	pop	{r4, pc}

08010b1c <usart_interrupt_disable>:
 8010b1c:	2201      	movs	r2, #1
 8010b1e:	b510      	push	{r4, lr}
 8010b20:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8010b24:	5823      	ldr	r3, [r4, r0]
 8010b26:	f001 011f 	and.w	r1, r1, #31
 8010b2a:	fa02 f101 	lsl.w	r1, r2, r1
 8010b2e:	ea23 0101 	bic.w	r1, r3, r1
 8010b32:	5021      	str	r1, [r4, r0]
 8010b34:	bd10      	pop	{r4, pc}

08010b36 <usart_interrupt_flag_clear>:
 8010b36:	2201      	movs	r2, #1
 8010b38:	b510      	push	{r4, lr}
 8010b3a:	0d8c      	lsrs	r4, r1, #22
 8010b3c:	5823      	ldr	r3, [r4, r0]
 8010b3e:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8010b42:	fa02 f101 	lsl.w	r1, r2, r1
 8010b46:	ea23 0101 	bic.w	r1, r3, r1
 8010b4a:	5021      	str	r1, [r4, r0]
 8010b4c:	bd10      	pop	{r4, pc}
	...

08010b50 <emac_start>:
 8010b50:	b510      	push	{r4, lr}
 8010b52:	4604      	mov	r4, r0
 8010b54:	f240 6002 	movw	r0, #1538	; 0x602
 8010b58:	f7ff fcd4 	bl	8010504 <rcu_periph_clock_enable>
 8010b5c:	f240 6003 	movw	r0, #1539	; 0x603
 8010b60:	f7ff fcd0 	bl	8010504 <rcu_periph_clock_enable>
 8010b64:	f240 6004 	movw	r0, #1540	; 0x604
 8010b68:	f7ff fccc 	bl	8010504 <rcu_periph_clock_enable>
 8010b6c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010b70:	2203      	movs	r2, #3
 8010b72:	2118      	movs	r1, #24
 8010b74:	4846      	ldr	r0, [pc, #280]	; (8010c90 <emac_start+0x140>)
 8010b76:	f7ff fc2d 	bl	80103d4 <gpio_init>
 8010b7a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010b7e:	f7ff fcc1 	bl	8010504 <rcu_periph_clock_enable>
 8010b82:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8010b86:	f7ff fcf9 	bl	801057c <rcu_pll2_config>
 8010b8a:	201c      	movs	r0, #28
 8010b8c:	f7ff fd8e 	bl	80106ac <rcu_osci_on>
 8010b90:	201c      	movs	r0, #28
 8010b92:	f7ff fd2b 	bl	80105ec <rcu_osci_stab_wait>
 8010b96:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8010b9a:	f7ff fce5 	bl	8010568 <rcu_ckout0_config>
 8010b9e:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8010ba2:	f7ff fc9b 	bl	80104dc <gpio_ethernet_phy_select>
 8010ba6:	2302      	movs	r3, #2
 8010ba8:	2203      	movs	r2, #3
 8010baa:	2104      	movs	r1, #4
 8010bac:	4838      	ldr	r0, [pc, #224]	; (8010c90 <emac_start+0x140>)
 8010bae:	f7ff fc11 	bl	80103d4 <gpio_init>
 8010bb2:	2304      	movs	r3, #4
 8010bb4:	2203      	movs	r2, #3
 8010bb6:	2118      	movs	r1, #24
 8010bb8:	4835      	ldr	r0, [pc, #212]	; (8010c90 <emac_start+0x140>)
 8010bba:	f7ff fc0b 	bl	80103d4 <gpio_init>
 8010bbe:	2380      	movs	r3, #128	; 0x80
 8010bc0:	2203      	movs	r2, #3
 8010bc2:	2104      	movs	r1, #4
 8010bc4:	4832      	ldr	r0, [pc, #200]	; (8010c90 <emac_start+0x140>)
 8010bc6:	f7ff fc05 	bl	80103d4 <gpio_init>
 8010bca:	2302      	movs	r3, #2
 8010bcc:	2203      	movs	r2, #3
 8010bce:	2118      	movs	r1, #24
 8010bd0:	4830      	ldr	r0, [pc, #192]	; (8010c94 <emac_start+0x144>)
 8010bd2:	f7ff fbff 	bl	80103d4 <gpio_init>
 8010bd6:	2310      	movs	r3, #16
 8010bd8:	2203      	movs	r2, #3
 8010bda:	2104      	movs	r1, #4
 8010bdc:	482d      	ldr	r0, [pc, #180]	; (8010c94 <emac_start+0x144>)
 8010bde:	f7ff fbf9 	bl	80103d4 <gpio_init>
 8010be2:	2320      	movs	r3, #32
 8010be4:	2203      	movs	r2, #3
 8010be6:	2104      	movs	r1, #4
 8010be8:	482a      	ldr	r0, [pc, #168]	; (8010c94 <emac_start+0x144>)
 8010bea:	f7ff fbf3 	bl	80103d4 <gpio_init>
 8010bee:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010bf2:	2203      	movs	r2, #3
 8010bf4:	2118      	movs	r1, #24
 8010bf6:	4828      	ldr	r0, [pc, #160]	; (8010c98 <emac_start+0x148>)
 8010bf8:	f7ff fbec 	bl	80103d4 <gpio_init>
 8010bfc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010c00:	2203      	movs	r2, #3
 8010c02:	2118      	movs	r1, #24
 8010c04:	4824      	ldr	r0, [pc, #144]	; (8010c98 <emac_start+0x148>)
 8010c06:	f7ff fbe5 	bl	80103d4 <gpio_init>
 8010c0a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010c0e:	2203      	movs	r2, #3
 8010c10:	2118      	movs	r1, #24
 8010c12:	4821      	ldr	r0, [pc, #132]	; (8010c98 <emac_start+0x148>)
 8010c14:	f7ff fbde 	bl	80103d4 <gpio_init>
 8010c18:	f240 500e 	movw	r0, #1294	; 0x50e
 8010c1c:	f7ff fc72 	bl	8010504 <rcu_periph_clock_enable>
 8010c20:	f240 500f 	movw	r0, #1295	; 0x50f
 8010c24:	f7ff fc6e 	bl	8010504 <rcu_periph_clock_enable>
 8010c28:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8010c2c:	f7ff fc6a 	bl	8010504 <rcu_periph_clock_enable>
 8010c30:	f000 ffa8 	bl	8011b84 <enet_deinit>
 8010c34:	f000 fc02 	bl	801143c <enet_software_reset>
 8010c38:	b900      	cbnz	r0, 8010c3c <emac_start+0xec>
 8010c3a:	e7fe      	b.n	8010c3a <emac_start+0xea>
 8010c3c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8010c40:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010c44:	2001      	movs	r0, #1
 8010c46:	f000 fd7d 	bl	8011744 <enet_init>
 8010c4a:	4b14      	ldr	r3, [pc, #80]	; (8010c9c <emac_start+0x14c>)
 8010c4c:	6018      	str	r0, [r3, #0]
 8010c4e:	681b      	ldr	r3, [r3, #0]
 8010c50:	b903      	cbnz	r3, 8010c54 <emac_start+0x104>
 8010c52:	e7fe      	b.n	8010c52 <emac_start+0x102>
 8010c54:	4620      	mov	r0, r4
 8010c56:	f000 fae9 	bl	801122c <mac_address_get>
 8010c5a:	4621      	mov	r1, r4
 8010c5c:	2000      	movs	r0, #0
 8010c5e:	f000 fcd1 	bl	8011604 <enet_mac_address_set>
 8010c62:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8010c66:	f000 fbfd 	bl	8011464 <enet_descriptors_chain_init>
 8010c6a:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8010c6e:	f000 fbf9 	bl	8011464 <enet_descriptors_chain_init>
 8010c72:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010c76:	480a      	ldr	r0, [pc, #40]	; (8010ca0 <emac_start+0x150>)
 8010c78:	f000 fcbe 	bl	80115f8 <enet_transmit_checksum_config>
 8010c7c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010c80:	4808      	ldr	r0, [pc, #32]	; (8010ca4 <emac_start+0x154>)
 8010c82:	f000 fcb9 	bl	80115f8 <enet_transmit_checksum_config>
 8010c86:	f000 fef5 	bl	8011a74 <enet_enable>
 8010c8a:	2001      	movs	r0, #1
 8010c8c:	bd10      	pop	{r4, pc}
 8010c8e:	bf00      	nop
 8010c90:	40010800 	andmi	r0, r1, r0, lsl #16
 8010c94:	40011000 	andmi	r1, r1, r0
 8010c98:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010c9c:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010ca0:	2000d834 	andcs	sp, r0, r4, lsr r8
 8010ca4:	2000d844 	andcs	sp, r0, r4, asr #16

08010ca8 <emac_eth_recv>:
 8010ca8:	b538      	push	{r3, r4, r5, lr}
 8010caa:	4605      	mov	r5, r0
 8010cac:	f000 ff3a 	bl	8011b24 <enet_rxframe_size_get>
 8010cb0:	4604      	mov	r4, r0
 8010cb2:	b138      	cbz	r0, 8010cc4 <emac_eth_recv+0x1c>
 8010cb4:	4b05      	ldr	r3, [pc, #20]	; (8010ccc <emac_eth_recv+0x24>)
 8010cb6:	2105      	movs	r1, #5
 8010cb8:	6818      	ldr	r0, [r3, #0]
 8010cba:	f000 fee2 	bl	8011a82 <enet_desc_information_get>
 8010cbe:	6028      	str	r0, [r5, #0]
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	bd38      	pop	{r3, r4, r5, pc}
 8010cc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010cc8:	e7fb      	b.n	8010cc2 <emac_eth_recv+0x1a>
 8010cca:	bf00      	nop
 8010ccc:	20009be8 	andcs	r9, r0, r8, ror #23

08010cd0 <emac_free_pkt>:
 8010cd0:	2100      	movs	r1, #0
 8010cd2:	4608      	mov	r0, r1
 8010cd4:	f000 bc0e 	b.w	80114f4 <enet_frame_receive>

08010cd8 <emac_eth_send>:
 8010cd8:	f000 bc4c 	b.w	8011574 <enet_frame_transmit>

08010cdc <gd32_adc_init()>:
 8010cdc:	b510      	push	{r4, lr}
 8010cde:	f240 6009 	movw	r0, #1545	; 0x609
 8010ce2:	4c21      	ldr	r4, [pc, #132]	; (8010d68 <gd32_adc_init()+0x8c>)
 8010ce4:	f7ff fc0e 	bl	8010504 <rcu_periph_clock_enable>
 8010ce8:	2005      	movs	r0, #5
 8010cea:	f7ff fc53 	bl	8010594 <rcu_adc_clock_config>
 8010cee:	4620      	mov	r0, r4
 8010cf0:	2201      	movs	r2, #1
 8010cf2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010cf6:	f000 fabb 	bl	8011270 <adc_special_function_config>
 8010cfa:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8010cfe:	4620      	mov	r0, r4
 8010d00:	2102      	movs	r1, #2
 8010d02:	f000 fb55 	bl	80113b0 <adc_external_trigger_source_config>
 8010d06:	2100      	movs	r1, #0
 8010d08:	4620      	mov	r0, r4
 8010d0a:	f000 fad9 	bl	80112c0 <adc_data_alignment_config>
 8010d0e:	2000      	movs	r0, #0
 8010d10:	f000 fa9e 	bl	8011250 <adc_mode_config>
 8010d14:	2202      	movs	r2, #2
 8010d16:	4620      	mov	r0, r4
 8010d18:	4611      	mov	r1, r2
 8010d1a:	f000 fafd 	bl	8011318 <adc_channel_length_config>
 8010d1e:	4620      	mov	r0, r4
 8010d20:	2307      	movs	r3, #7
 8010d22:	2210      	movs	r2, #16
 8010d24:	2100      	movs	r1, #0
 8010d26:	f000 fb14 	bl	8011352 <adc_inserted_channel_config>
 8010d2a:	2307      	movs	r3, #7
 8010d2c:	4620      	mov	r0, r4
 8010d2e:	2211      	movs	r2, #17
 8010d30:	2101      	movs	r1, #1
 8010d32:	f000 fb0e 	bl	8011352 <adc_inserted_channel_config>
 8010d36:	2201      	movs	r2, #1
 8010d38:	2102      	movs	r1, #2
 8010d3a:	4620      	mov	r0, r4
 8010d3c:	f000 fb49 	bl	80113d2 <adc_external_trigger_config>
 8010d40:	f000 fae0 	bl	8011304 <adc_tempsensor_vrefint_enable>
 8010d44:	4620      	mov	r0, r4
 8010d46:	f000 fac4 	bl	80112d2 <adc_enable>
 8010d4a:	2100      	movs	r1, #0
 8010d4c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8010d50:	f000 fa54 	bl	80111fc <udelay(unsigned int, unsigned int)>
 8010d54:	4620      	mov	r0, r4
 8010d56:	f000 fac4 	bl	80112e2 <adc_calibration_enable>
 8010d5a:	4620      	mov	r0, r4
 8010d5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d60:	2102      	movs	r1, #2
 8010d62:	f000 bb51 	b.w	8011408 <adc_software_trigger_enable>
 8010d66:	bf00      	nop
 8010d68:	40012400 	andmi	r2, r1, r0, lsl #8

08010d6c <_stop() [clone .isra.0]>:
 8010d6c:	b508      	push	{r3, lr}
 8010d6e:	4806      	ldr	r0, [pc, #24]	; (8010d88 <_stop() [clone .isra.0]+0x1c>)
 8010d70:	f000 ff98 	bl	8011ca4 <i2c_stop_on_bus>
 8010d74:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010d78:	4a04      	ldr	r2, [pc, #16]	; (8010d8c <_stop() [clone .isra.0]+0x20>)
 8010d7a:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010d7e:	0589      	lsls	r1, r1, #22
 8010d80:	d501      	bpl.n	8010d86 <_stop() [clone .isra.0]+0x1a>
 8010d82:	3b01      	subs	r3, #1
 8010d84:	d1f9      	bne.n	8010d7a <_stop() [clone .isra.0]+0xe>
 8010d86:	bd08      	pop	{r3, pc}
 8010d88:	40005400 	andmi	r5, r0, r0, lsl #8
 8010d8c:	40005000 	andmi	r5, r0, r0

08010d90 <gd32_i2c_begin()>:
 8010d90:	b510      	push	{r4, lr}
 8010d92:	f240 7015 	movw	r0, #1813	; 0x715
 8010d96:	f7ff fbb5 	bl	8010504 <rcu_periph_clock_enable>
 8010d9a:	4c15      	ldr	r4, [pc, #84]	; (8010df0 <gd32_i2c_begin()+0x60>)
 8010d9c:	f240 6003 	movw	r0, #1539	; 0x603
 8010da0:	f7ff fbb0 	bl	8010504 <rcu_periph_clock_enable>
 8010da4:	f240 6003 	movw	r0, #1539	; 0x603
 8010da8:	f7ff fbac 	bl	8010504 <rcu_periph_clock_enable>
 8010dac:	4620      	mov	r0, r4
 8010dae:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010db2:	2203      	movs	r2, #3
 8010db4:	211c      	movs	r1, #28
 8010db6:	f7ff fb0d 	bl	80103d4 <gpio_init>
 8010dba:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010dbe:	2203      	movs	r2, #3
 8010dc0:	4620      	mov	r0, r4
 8010dc2:	211c      	movs	r1, #28
 8010dc4:	f7ff fb06 	bl	80103d4 <gpio_init>
 8010dc8:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8010dcc:	2101      	movs	r1, #1
 8010dce:	2002      	movs	r0, #2
 8010dd0:	f7ff fb54 	bl	801047c <gpio_pin_remap_config>
 8010dd4:	4620      	mov	r0, r4
 8010dd6:	4907      	ldr	r1, [pc, #28]	; (8010df4 <gd32_i2c_begin()+0x64>)
 8010dd8:	2200      	movs	r2, #0
 8010dda:	f000 fee1 	bl	8011ba0 <i2c_clock_config>
 8010dde:	4620      	mov	r0, r4
 8010de0:	f000 ff56 	bl	8011c90 <i2c_enable>
 8010de4:	4620      	mov	r0, r4
 8010de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dea:	2101      	movs	r1, #1
 8010dec:	f000 bf36 	b.w	8011c5c <i2c_ack_config>
 8010df0:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010df4:	00061a80 	andeq	r1, r6, r0, lsl #21

08010df8 <gd32_i2c_set_baudrate(unsigned int)>:
 8010df8:	4601      	mov	r1, r0
 8010dfa:	2200      	movs	r2, #0
 8010dfc:	4801      	ldr	r0, [pc, #4]	; (8010e04 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8010dfe:	f000 becf 	b.w	8011ba0 <i2c_clock_config>
 8010e02:	bf00      	nop
 8010e04:	40005400 	andmi	r5, r0, r0, lsl #8

08010e08 <gd32_i2c_set_address(unsigned char)>:
 8010e08:	4b01      	ldr	r3, [pc, #4]	; (8010e10 <gd32_i2c_set_address(unsigned char)+0x8>)
 8010e0a:	0040      	lsls	r0, r0, #1
 8010e0c:	7018      	strb	r0, [r3, #0]
 8010e0e:	4770      	bx	lr
 8010e10:	20009bdc 	ldrdcs	r9, [r0], -ip

08010e14 <gd32_i2c_write(char const*, unsigned int)>:
 8010e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010e16:	4604      	mov	r4, r0
 8010e18:	460f      	mov	r7, r1
 8010e1a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010e1e:	4e2e      	ldr	r6, [pc, #184]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e20:	f240 6101 	movw	r1, #1537	; 0x601
 8010e24:	4630      	mov	r0, r6
 8010e26:	f000 ff47 	bl	8011cb8 <i2c_flag_get>
 8010e2a:	b138      	cbz	r0, 8010e3c <gd32_i2c_write(char const*, unsigned int)+0x28>
 8010e2c:	3d01      	subs	r5, #1
 8010e2e:	d1f7      	bne.n	8010e20 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8010e30:	f7ff ff9c 	bl	8010d6c <_stop() [clone .isra.0]>
 8010e34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010e38:	4240      	negs	r0, r0
 8010e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e3c:	4826      	ldr	r0, [pc, #152]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e3e:	f000 ff2c 	bl	8011c9a <i2c_start_on_bus>
 8010e42:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010e46:	4e24      	ldr	r6, [pc, #144]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e48:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010e4c:	4630      	mov	r0, r6
 8010e4e:	f000 ff33 	bl	8011cb8 <i2c_flag_get>
 8010e52:	bb68      	cbnz	r0, 8010eb0 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8010e54:	3d01      	subs	r5, #1
 8010e56:	d1f7      	bne.n	8010e48 <gd32_i2c_write(char const*, unsigned int)+0x34>
 8010e58:	e7ea      	b.n	8010e30 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010e5a:	f240 5101 	movw	r1, #1281	; 0x501
 8010e5e:	481e      	ldr	r0, [pc, #120]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e60:	f000 ff32 	bl	8011cc8 <i2c_flag_clear>
 8010e64:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010e68:	4e1b      	ldr	r6, [pc, #108]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e6a:	f240 5107 	movw	r1, #1287	; 0x507
 8010e6e:	4630      	mov	r0, r6
 8010e70:	f000 ff22 	bl	8011cb8 <i2c_flag_get>
 8010e74:	2801      	cmp	r0, #1
 8010e76:	d114      	bne.n	8010ea2 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8010e78:	4e17      	ldr	r6, [pc, #92]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010e7a:	4427      	add	r7, r4
 8010e7c:	42a7      	cmp	r7, r4
 8010e7e:	d013      	beq.n	8010ea8 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8010e80:	4630      	mov	r0, r6
 8010e82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010e86:	f000 ff12 	bl	8011cae <i2c_data_transmit>
 8010e8a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010e8e:	f240 5102 	movw	r1, #1282	; 0x502
 8010e92:	4630      	mov	r0, r6
 8010e94:	f000 ff10 	bl	8011cb8 <i2c_flag_get>
 8010e98:	2800      	cmp	r0, #0
 8010e9a:	d1ef      	bne.n	8010e7c <gd32_i2c_write(char const*, unsigned int)+0x68>
 8010e9c:	3d01      	subs	r5, #1
 8010e9e:	d1f6      	bne.n	8010e8e <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8010ea0:	e7c6      	b.n	8010e30 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010ea2:	3d01      	subs	r5, #1
 8010ea4:	d1e1      	bne.n	8010e6a <gd32_i2c_write(char const*, unsigned int)+0x56>
 8010ea6:	e7c3      	b.n	8010e30 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010ea8:	f7ff ff60 	bl	8010d6c <_stop() [clone .isra.0]>
 8010eac:	2000      	movs	r0, #0
 8010eae:	e7c3      	b.n	8010e38 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8010eb0:	4b0a      	ldr	r3, [pc, #40]	; (8010edc <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8010eb2:	f06f 0201 	mvn.w	r2, #1
 8010eb6:	7819      	ldrb	r1, [r3, #0]
 8010eb8:	4807      	ldr	r0, [pc, #28]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010eba:	f000 fee1 	bl	8011c80 <i2c_master_addressing>
 8010ebe:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010ec2:	4e05      	ldr	r6, [pc, #20]	; (8010ed8 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010ec4:	f240 5101 	movw	r1, #1281	; 0x501
 8010ec8:	4630      	mov	r0, r6
 8010eca:	f000 fef5 	bl	8011cb8 <i2c_flag_get>
 8010ece:	2800      	cmp	r0, #0
 8010ed0:	d1c3      	bne.n	8010e5a <gd32_i2c_write(char const*, unsigned int)+0x46>
 8010ed2:	3d01      	subs	r5, #1
 8010ed4:	d1f6      	bne.n	8010ec4 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8010ed6:	e7ab      	b.n	8010e30 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010ed8:	40005400 	andmi	r5, r0, r0, lsl #8
 8010edc:	20009bdc 	ldrdcs	r9, [r0], -ip

08010ee0 <gd32_i2c_read(char*, unsigned int)>:
 8010ee0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010ee4:	4680      	mov	r8, r0
 8010ee6:	460c      	mov	r4, r1
 8010ee8:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010eec:	4f49      	ldr	r7, [pc, #292]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010eee:	f240 6101 	movw	r1, #1537	; 0x601
 8010ef2:	4638      	mov	r0, r7
 8010ef4:	f000 fee0 	bl	8011cb8 <i2c_flag_get>
 8010ef8:	4605      	mov	r5, r0
 8010efa:	b128      	cbz	r0, 8010f08 <gd32_i2c_read(char*, unsigned int)+0x28>
 8010efc:	3e01      	subs	r6, #1
 8010efe:	d1f6      	bne.n	8010eee <gd32_i2c_read(char*, unsigned int)+0xe>
 8010f00:	f7ff ff34 	bl	8010d6c <_stop() [clone .isra.0]>
 8010f04:	2504      	movs	r5, #4
 8010f06:	e082      	b.n	801100e <gd32_i2c_read(char*, unsigned int)+0x12e>
 8010f08:	2c02      	cmp	r4, #2
 8010f0a:	d103      	bne.n	8010f14 <gd32_i2c_read(char*, unsigned int)+0x34>
 8010f0c:	4601      	mov	r1, r0
 8010f0e:	4841      	ldr	r0, [pc, #260]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f10:	f000 fead 	bl	8011c6e <i2c_ackpos_config>
 8010f14:	483f      	ldr	r0, [pc, #252]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f16:	f000 fec0 	bl	8011c9a <i2c_start_on_bus>
 8010f1a:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010f1e:	4f3d      	ldr	r7, [pc, #244]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f20:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010f24:	4638      	mov	r0, r7
 8010f26:	f000 fec7 	bl	8011cb8 <i2c_flag_get>
 8010f2a:	b910      	cbnz	r0, 8010f32 <gd32_i2c_read(char*, unsigned int)+0x52>
 8010f2c:	3e01      	subs	r6, #1
 8010f2e:	d1f7      	bne.n	8010f20 <gd32_i2c_read(char*, unsigned int)+0x40>
 8010f30:	e7e6      	b.n	8010f00 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010f32:	4b39      	ldr	r3, [pc, #228]	; (8011018 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8010f34:	2201      	movs	r2, #1
 8010f36:	7819      	ldrb	r1, [r3, #0]
 8010f38:	4836      	ldr	r0, [pc, #216]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f3a:	f000 fea1 	bl	8011c80 <i2c_master_addressing>
 8010f3e:	2c02      	cmp	r4, #2
 8010f40:	d803      	bhi.n	8010f4a <gd32_i2c_read(char*, unsigned int)+0x6a>
 8010f42:	2100      	movs	r1, #0
 8010f44:	4833      	ldr	r0, [pc, #204]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f46:	f000 fe89 	bl	8011c5c <i2c_ack_config>
 8010f4a:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010f4e:	4f31      	ldr	r7, [pc, #196]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f50:	f240 5101 	movw	r1, #1281	; 0x501
 8010f54:	4638      	mov	r0, r7
 8010f56:	f000 feaf 	bl	8011cb8 <i2c_flag_get>
 8010f5a:	b910      	cbnz	r0, 8010f62 <gd32_i2c_read(char*, unsigned int)+0x82>
 8010f5c:	3e01      	subs	r6, #1
 8010f5e:	d1f7      	bne.n	8010f50 <gd32_i2c_read(char*, unsigned int)+0x70>
 8010f60:	e7ce      	b.n	8010f00 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010f62:	f240 5101 	movw	r1, #1281	; 0x501
 8010f66:	482b      	ldr	r0, [pc, #172]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f68:	f000 feae 	bl	8011cc8 <i2c_flag_clear>
 8010f6c:	2c01      	cmp	r4, #1
 8010f6e:	d102      	bne.n	8010f76 <gd32_i2c_read(char*, unsigned int)+0x96>
 8010f70:	4828      	ldr	r0, [pc, #160]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f72:	f000 fe97 	bl	8011ca4 <i2c_stop_on_bus>
 8010f76:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010f7a:	4e26      	ldr	r6, [pc, #152]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010f7c:	b3ac      	cbz	r4, 8010fea <gd32_i2c_read(char*, unsigned int)+0x10a>
 8010f7e:	2c03      	cmp	r4, #3
 8010f80:	d121      	bne.n	8010fc6 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8010f82:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010f86:	f240 5102 	movw	r1, #1282	; 0x502
 8010f8a:	4630      	mov	r0, r6
 8010f8c:	f000 fe94 	bl	8011cb8 <i2c_flag_get>
 8010f90:	b918      	cbnz	r0, 8010f9a <gd32_i2c_read(char*, unsigned int)+0xba>
 8010f92:	f1b9 0901 	subs.w	r9, r9, #1
 8010f96:	d1f6      	bne.n	8010f86 <gd32_i2c_read(char*, unsigned int)+0xa6>
 8010f98:	e7b2      	b.n	8010f00 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010f9a:	2100      	movs	r1, #0
 8010f9c:	4630      	mov	r0, r6
 8010f9e:	f000 fe5d 	bl	8011c5c <i2c_ack_config>
 8010fa2:	f240 5106 	movw	r1, #1286	; 0x506
 8010fa6:	4630      	mov	r0, r6
 8010fa8:	f000 fe86 	bl	8011cb8 <i2c_flag_get>
 8010fac:	b138      	cbz	r0, 8010fbe <gd32_i2c_read(char*, unsigned int)+0xde>
 8010fae:	4630      	mov	r0, r6
 8010fb0:	f000 fe7f 	bl	8011cb2 <i2c_data_receive>
 8010fb4:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010fb8:	f808 0b01 	strb.w	r0, [r8], #1
 8010fbc:	3c01      	subs	r4, #1
 8010fbe:	3f01      	subs	r7, #1
 8010fc0:	2f00      	cmp	r7, #0
 8010fc2:	dcdb      	bgt.n	8010f7c <gd32_i2c_read(char*, unsigned int)+0x9c>
 8010fc4:	e79c      	b.n	8010f00 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010fc6:	2c02      	cmp	r4, #2
 8010fc8:	d1eb      	bne.n	8010fa2 <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010fca:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010fce:	f240 5102 	movw	r1, #1282	; 0x502
 8010fd2:	4630      	mov	r0, r6
 8010fd4:	f000 fe70 	bl	8011cb8 <i2c_flag_get>
 8010fd8:	b918      	cbnz	r0, 8010fe2 <gd32_i2c_read(char*, unsigned int)+0x102>
 8010fda:	f1b9 0901 	subs.w	r9, r9, #1
 8010fde:	d1f6      	bne.n	8010fce <gd32_i2c_read(char*, unsigned int)+0xee>
 8010fe0:	e78e      	b.n	8010f00 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010fe2:	4630      	mov	r0, r6
 8010fe4:	f000 fe5e 	bl	8011ca4 <i2c_stop_on_bus>
 8010fe8:	e7db      	b.n	8010fa2 <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010fea:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010fee:	4a0b      	ldr	r2, [pc, #44]	; (801101c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010ff0:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010ff4:	0589      	lsls	r1, r1, #22
 8010ff6:	d502      	bpl.n	8010ffe <gd32_i2c_read(char*, unsigned int)+0x11e>
 8010ff8:	3b01      	subs	r3, #1
 8010ffa:	d1f9      	bne.n	8010ff0 <gd32_i2c_read(char*, unsigned int)+0x110>
 8010ffc:	e782      	b.n	8010f04 <gd32_i2c_read(char*, unsigned int)+0x24>
 8010ffe:	2101      	movs	r1, #1
 8011000:	4804      	ldr	r0, [pc, #16]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011002:	f000 fe2b 	bl	8011c5c <i2c_ack_config>
 8011006:	2101      	movs	r1, #1
 8011008:	4802      	ldr	r0, [pc, #8]	; (8011014 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801100a:	f000 fe30 	bl	8011c6e <i2c_ackpos_config>
 801100e:	4628      	mov	r0, r5
 8011010:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011014:	40005400 	andmi	r5, r0, r0, lsl #8
 8011018:	20009bdc 	ldrdcs	r9, [r0], -ip
 801101c:	40005000 	andmi	r5, r0, r0

08011020 <gd32_uart_begin>:
 8011020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011022:	461d      	mov	r5, r3
 8011024:	4b63      	ldr	r3, [pc, #396]	; (80111b4 <gd32_uart_begin+0x194>)
 8011026:	4604      	mov	r4, r0
 8011028:	4298      	cmp	r0, r3
 801102a:	460f      	mov	r7, r1
 801102c:	4616      	mov	r6, r2
 801102e:	d03b      	beq.n	80110a8 <gd32_uart_begin+0x88>
 8011030:	d80a      	bhi.n	8011048 <gd32_uart_begin+0x28>
 8011032:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011036:	4298      	cmp	r0, r3
 8011038:	d02f      	beq.n	801109a <gd32_uart_begin+0x7a>
 801103a:	f240 7012 	movw	r0, #1810	; 0x712
 801103e:	f7ff fa61 	bl	8010504 <rcu_periph_clock_enable>
 8011042:	f240 6004 	movw	r0, #1540	; 0x604
 8011046:	e008      	b.n	801105a <gd32_uart_begin+0x3a>
 8011048:	4b5b      	ldr	r3, [pc, #364]	; (80111b8 <gd32_uart_begin+0x198>)
 801104a:	4298      	cmp	r0, r3
 801104c:	d02f      	beq.n	80110ae <gd32_uart_begin+0x8e>
 801104e:	f240 600e 	movw	r0, #1550	; 0x60e
 8011052:	f7ff fa57 	bl	8010504 <rcu_periph_clock_enable>
 8011056:	f240 6003 	movw	r0, #1539	; 0x603
 801105a:	f7ff fa53 	bl	8010504 <rcu_periph_clock_enable>
 801105e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8011062:	f7ff fa4f 	bl	8010504 <rcu_periph_clock_enable>
 8011066:	4b53      	ldr	r3, [pc, #332]	; (80111b4 <gd32_uart_begin+0x194>)
 8011068:	429c      	cmp	r4, r3
 801106a:	f000 8085 	beq.w	8011178 <gd32_uart_begin+0x158>
 801106e:	d829      	bhi.n	80110c4 <gd32_uart_begin+0xa4>
 8011070:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011074:	429c      	cmp	r4, r3
 8011076:	d072      	beq.n	801115e <gd32_uart_begin+0x13e>
 8011078:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801107c:	2203      	movs	r2, #3
 801107e:	2118      	movs	r1, #24
 8011080:	484e      	ldr	r0, [pc, #312]	; (80111bc <gd32_uart_begin+0x19c>)
 8011082:	f7ff f9a7 	bl	80103d4 <gpio_init>
 8011086:	2104      	movs	r1, #4
 8011088:	484c      	ldr	r0, [pc, #304]	; (80111bc <gd32_uart_begin+0x19c>)
 801108a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801108e:	2203      	movs	r2, #3
 8011090:	f7ff f9a0 	bl	80103d4 <gpio_init>
 8011094:	2101      	movs	r1, #1
 8011096:	484a      	ldr	r0, [pc, #296]	; (80111c0 <gd32_uart_begin+0x1a0>)
 8011098:	e025      	b.n	80110e6 <gd32_uart_begin+0xc6>
 801109a:	f240 7011 	movw	r0, #1809	; 0x711
 801109e:	f7ff fa31 	bl	8010504 <rcu_periph_clock_enable>
 80110a2:	f240 6002 	movw	r0, #1538	; 0x602
 80110a6:	e7d8      	b.n	801105a <gd32_uart_begin+0x3a>
 80110a8:	f240 7013 	movw	r0, #1811	; 0x713
 80110ac:	e7c7      	b.n	801103e <gd32_uart_begin+0x1e>
 80110ae:	f240 7014 	movw	r0, #1812	; 0x714
 80110b2:	f7ff fa27 	bl	8010504 <rcu_periph_clock_enable>
 80110b6:	f240 6004 	movw	r0, #1540	; 0x604
 80110ba:	f7ff fa23 	bl	8010504 <rcu_periph_clock_enable>
 80110be:	f240 6005 	movw	r0, #1541	; 0x605
 80110c2:	e7ca      	b.n	801105a <gd32_uart_begin+0x3a>
 80110c4:	4b3c      	ldr	r3, [pc, #240]	; (80111b8 <gd32_uart_begin+0x198>)
 80110c6:	429c      	cmp	r4, r3
 80110c8:	d063      	beq.n	8011192 <gd32_uart_begin+0x172>
 80110ca:	2340      	movs	r3, #64	; 0x40
 80110cc:	2203      	movs	r2, #3
 80110ce:	2118      	movs	r1, #24
 80110d0:	483c      	ldr	r0, [pc, #240]	; (80111c4 <gd32_uart_begin+0x1a4>)
 80110d2:	f7ff f97f 	bl	80103d4 <gpio_init>
 80110d6:	2104      	movs	r1, #4
 80110d8:	483a      	ldr	r0, [pc, #232]	; (80111c4 <gd32_uart_begin+0x1a4>)
 80110da:	2380      	movs	r3, #128	; 0x80
 80110dc:	2203      	movs	r2, #3
 80110de:	f7ff f979 	bl	80103d4 <gpio_init>
 80110e2:	2101      	movs	r1, #1
 80110e4:	2004      	movs	r0, #4
 80110e6:	f7ff f9c9 	bl	801047c <gpio_pin_remap_config>
 80110ea:	4620      	mov	r0, r4
 80110ec:	f7ff fc64 	bl	80109b8 <usart_deinit>
 80110f0:	68e3      	ldr	r3, [r4, #12]
 80110f2:	4639      	mov	r1, r7
 80110f4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80110f8:	60e3      	str	r3, [r4, #12]
 80110fa:	4620      	mov	r0, r4
 80110fc:	f7ff fc9c 	bl	8010a38 <usart_baudrate_set>
 8011100:	2e09      	cmp	r6, #9
 8011102:	bf0c      	ite	eq
 8011104:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8011108:	2100      	movne	r1, #0
 801110a:	4620      	mov	r0, r4
 801110c:	f7ff fcc4 	bl	8010a98 <usart_word_length_set>
 8011110:	9b06      	ldr	r3, [sp, #24]
 8011112:	4620      	mov	r0, r4
 8011114:	2b02      	cmp	r3, #2
 8011116:	bf0c      	ite	eq
 8011118:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 801111c:	2100      	movne	r1, #0
 801111e:	f7ff fcc3 	bl	8010aa8 <usart_stop_bit_set>
 8011122:	2d01      	cmp	r5, #1
 8011124:	d041      	beq.n	80111aa <gd32_uart_begin+0x18a>
 8011126:	2d02      	cmp	r5, #2
 8011128:	d142      	bne.n	80111b0 <gd32_uart_begin+0x190>
 801112a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801112e:	4620      	mov	r0, r4
 8011130:	f7ff fcaa 	bl	8010a88 <usart_parity_config>
 8011134:	2100      	movs	r1, #0
 8011136:	4620      	mov	r0, r4
 8011138:	f7ff fcca 	bl	8010ad0 <usart_hardware_flow_rts_config>
 801113c:	2100      	movs	r1, #0
 801113e:	4620      	mov	r0, r4
 8011140:	f7ff fccc 	bl	8010adc <usart_hardware_flow_cts_config>
 8011144:	2104      	movs	r1, #4
 8011146:	4620      	mov	r0, r4
 8011148:	f7ff fcbc 	bl	8010ac4 <usart_receive_config>
 801114c:	2108      	movs	r1, #8
 801114e:	4620      	mov	r0, r4
 8011150:	f7ff fcb2 	bl	8010ab8 <usart_transmit_config>
 8011154:	68e3      	ldr	r3, [r4, #12]
 8011156:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801115a:	60e3      	str	r3, [r4, #12]
 801115c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801115e:	2304      	movs	r3, #4
 8011160:	2203      	movs	r2, #3
 8011162:	2118      	movs	r1, #24
 8011164:	4818      	ldr	r0, [pc, #96]	; (80111c8 <gd32_uart_begin+0x1a8>)
 8011166:	f7ff f935 	bl	80103d4 <gpio_init>
 801116a:	2308      	movs	r3, #8
 801116c:	2203      	movs	r2, #3
 801116e:	2104      	movs	r1, #4
 8011170:	4815      	ldr	r0, [pc, #84]	; (80111c8 <gd32_uart_begin+0x1a8>)
 8011172:	f7ff f92f 	bl	80103d4 <gpio_init>
 8011176:	e7b8      	b.n	80110ea <gd32_uart_begin+0xca>
 8011178:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801117c:	2203      	movs	r2, #3
 801117e:	2118      	movs	r1, #24
 8011180:	480e      	ldr	r0, [pc, #56]	; (80111bc <gd32_uart_begin+0x19c>)
 8011182:	f7ff f927 	bl	80103d4 <gpio_init>
 8011186:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801118a:	2203      	movs	r2, #3
 801118c:	2104      	movs	r1, #4
 801118e:	480b      	ldr	r0, [pc, #44]	; (80111bc <gd32_uart_begin+0x19c>)
 8011190:	e7ef      	b.n	8011172 <gd32_uart_begin+0x152>
 8011192:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8011196:	2203      	movs	r2, #3
 8011198:	2118      	movs	r1, #24
 801119a:	4808      	ldr	r0, [pc, #32]	; (80111bc <gd32_uart_begin+0x19c>)
 801119c:	f7ff f91a 	bl	80103d4 <gpio_init>
 80111a0:	2304      	movs	r3, #4
 80111a2:	2203      	movs	r2, #3
 80111a4:	4619      	mov	r1, r3
 80111a6:	4809      	ldr	r0, [pc, #36]	; (80111cc <gd32_uart_begin+0x1ac>)
 80111a8:	e7e3      	b.n	8011172 <gd32_uart_begin+0x152>
 80111aa:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80111ae:	e7be      	b.n	801112e <gd32_uart_begin+0x10e>
 80111b0:	2100      	movs	r1, #0
 80111b2:	e7bc      	b.n	801112e <gd32_uart_begin+0x10e>
 80111b4:	40004c00 	andmi	r4, r0, r0, lsl #24
 80111b8:	40005000 	andmi	r5, r0, r0
 80111bc:	40011000 	andmi	r1, r1, r0
 80111c0:	00140010 	andseq	r0, r4, r0, lsl r0
 80111c4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80111c8:	40010800 	andmi	r0, r1, r0, lsl #16
 80111cc:	40011400 	andmi	r1, r1, r0, lsl #8

080111d0 <micros_init()>:
 80111d0:	4770      	bx	lr
	...

080111d4 <udelay_init()>:
 80111d4:	4a07      	ldr	r2, [pc, #28]	; (80111f4 <udelay_init()+0x20>)
 80111d6:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80111da:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80111de:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80111e2:	2200      	movs	r2, #0
 80111e4:	4b04      	ldr	r3, [pc, #16]	; (80111f8 <udelay_init()+0x24>)
 80111e6:	605a      	str	r2, [r3, #4]
 80111e8:	681a      	ldr	r2, [r3, #0]
 80111ea:	f042 0201 	orr.w	r2, r2, #1
 80111ee:	601a      	str	r2, [r3, #0]
 80111f0:	4770      	bx	lr
 80111f2:	bf00      	nop
 80111f4:	e000ed00 	and	lr, r0, r0, lsl #26
 80111f8:	e0001000 	and	r1, r0, r0

080111fc <udelay(unsigned int, unsigned int)>:
 80111fc:	236c      	movs	r3, #108	; 0x6c
 80111fe:	b510      	push	{r4, lr}
 8011200:	4358      	muls	r0, r3
 8011202:	b909      	cbnz	r1, 8011208 <udelay(unsigned int, unsigned int)+0xc>
 8011204:	4b08      	ldr	r3, [pc, #32]	; (8011228 <udelay(unsigned int, unsigned int)+0x2c>)
 8011206:	6859      	ldr	r1, [r3, #4]
 8011208:	2300      	movs	r3, #0
 801120a:	4c07      	ldr	r4, [pc, #28]	; (8011228 <udelay(unsigned int, unsigned int)+0x2c>)
 801120c:	6862      	ldr	r2, [r4, #4]
 801120e:	4291      	cmp	r1, r2
 8011210:	d0fc      	beq.n	801120c <udelay(unsigned int, unsigned int)+0x10>
 8011212:	bf28      	it	cs
 8011214:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8011218:	1a5b      	subs	r3, r3, r1
 801121a:	4413      	add	r3, r2
 801121c:	4283      	cmp	r3, r0
 801121e:	d300      	bcc.n	8011222 <udelay(unsigned int, unsigned int)+0x26>
 8011220:	bd10      	pop	{r4, pc}
 8011222:	4611      	mov	r1, r2
 8011224:	e7f2      	b.n	801120c <udelay(unsigned int, unsigned int)+0x10>
 8011226:	bf00      	nop
 8011228:	e0001000 	and	r1, r0, r0

0801122c <mac_address_get>:
 801122c:	2102      	movs	r1, #2
 801122e:	4a07      	ldr	r2, [pc, #28]	; (801124c <mac_address_get+0x20>)
 8011230:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8011234:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8011238:	7001      	strb	r1, [r0, #0]
 801123a:	7042      	strb	r2, [r0, #1]
 801123c:	0e1a      	lsrs	r2, r3, #24
 801123e:	7082      	strb	r2, [r0, #2]
 8011240:	0c1a      	lsrs	r2, r3, #16
 8011242:	70c2      	strb	r2, [r0, #3]
 8011244:	0a1a      	lsrs	r2, r3, #8
 8011246:	7102      	strb	r2, [r0, #4]
 8011248:	7143      	strb	r3, [r0, #5]
 801124a:	4770      	bx	lr
 801124c:	1ffff000 	svcne	0x00fff000

08011250 <adc_mode_config>:
 8011250:	4b06      	ldr	r3, [pc, #24]	; (801126c <adc_mode_config+0x1c>)
 8011252:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8011256:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 801125a:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 801125e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8011262:	4302      	orrs	r2, r0
 8011264:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8011268:	4770      	bx	lr
 801126a:	bf00      	nop
 801126c:	40012000 	andmi	r2, r1, r0

08011270 <adc_special_function_config>:
 8011270:	b510      	push	{r4, lr}
 8011272:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8011276:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801127a:	f001 0102 	and.w	r1, r1, #2
 801127e:	b17a      	cbz	r2, 80112a0 <adc_special_function_config+0x30>
 8011280:	b11b      	cbz	r3, 801128a <adc_special_function_config+0x1a>
 8011282:	6843      	ldr	r3, [r0, #4]
 8011284:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011288:	6043      	str	r3, [r0, #4]
 801128a:	b11c      	cbz	r4, 8011294 <adc_special_function_config+0x24>
 801128c:	6843      	ldr	r3, [r0, #4]
 801128e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8011292:	6043      	str	r3, [r0, #4]
 8011294:	b119      	cbz	r1, 801129e <adc_special_function_config+0x2e>
 8011296:	6883      	ldr	r3, [r0, #8]
 8011298:	f043 0302 	orr.w	r3, r3, #2
 801129c:	6083      	str	r3, [r0, #8]
 801129e:	bd10      	pop	{r4, pc}
 80112a0:	b11b      	cbz	r3, 80112aa <adc_special_function_config+0x3a>
 80112a2:	6843      	ldr	r3, [r0, #4]
 80112a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80112a8:	6043      	str	r3, [r0, #4]
 80112aa:	b11c      	cbz	r4, 80112b4 <adc_special_function_config+0x44>
 80112ac:	6843      	ldr	r3, [r0, #4]
 80112ae:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80112b2:	6043      	str	r3, [r0, #4]
 80112b4:	2900      	cmp	r1, #0
 80112b6:	d0f2      	beq.n	801129e <adc_special_function_config+0x2e>
 80112b8:	6883      	ldr	r3, [r0, #8]
 80112ba:	f023 0302 	bic.w	r3, r3, #2
 80112be:	e7ed      	b.n	801129c <adc_special_function_config+0x2c>

080112c0 <adc_data_alignment_config>:
 80112c0:	6883      	ldr	r3, [r0, #8]
 80112c2:	b119      	cbz	r1, 80112cc <adc_data_alignment_config+0xc>
 80112c4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80112c8:	6083      	str	r3, [r0, #8]
 80112ca:	4770      	bx	lr
 80112cc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80112d0:	e7fa      	b.n	80112c8 <adc_data_alignment_config+0x8>

080112d2 <adc_enable>:
 80112d2:	6883      	ldr	r3, [r0, #8]
 80112d4:	07db      	lsls	r3, r3, #31
 80112d6:	bf5e      	ittt	pl
 80112d8:	6883      	ldrpl	r3, [r0, #8]
 80112da:	f043 0301 	orrpl.w	r3, r3, #1
 80112de:	6083      	strpl	r3, [r0, #8]
 80112e0:	4770      	bx	lr

080112e2 <adc_calibration_enable>:
 80112e2:	6883      	ldr	r3, [r0, #8]
 80112e4:	f100 0208 	add.w	r2, r0, #8
 80112e8:	f043 0308 	orr.w	r3, r3, #8
 80112ec:	6083      	str	r3, [r0, #8]
 80112ee:	6813      	ldr	r3, [r2, #0]
 80112f0:	0719      	lsls	r1, r3, #28
 80112f2:	d4fc      	bmi.n	80112ee <adc_calibration_enable+0xc>
 80112f4:	6883      	ldr	r3, [r0, #8]
 80112f6:	f043 0304 	orr.w	r3, r3, #4
 80112fa:	6083      	str	r3, [r0, #8]
 80112fc:	6813      	ldr	r3, [r2, #0]
 80112fe:	075b      	lsls	r3, r3, #29
 8011300:	d4fc      	bmi.n	80112fc <adc_calibration_enable+0x1a>
 8011302:	4770      	bx	lr

08011304 <adc_tempsensor_vrefint_enable>:
 8011304:	4a03      	ldr	r2, [pc, #12]	; (8011314 <adc_tempsensor_vrefint_enable+0x10>)
 8011306:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801130a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801130e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8011312:	4770      	bx	lr
 8011314:	40012000 	andmi	r2, r1, r0

08011318 <adc_channel_length_config>:
 8011318:	2901      	cmp	r1, #1
 801131a:	d002      	beq.n	8011322 <adc_channel_length_config+0xa>
 801131c:	2902      	cmp	r1, #2
 801131e:	d00c      	beq.n	801133a <adc_channel_length_config+0x22>
 8011320:	4770      	bx	lr
 8011322:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011324:	3a01      	subs	r2, #1
 8011326:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801132a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801132c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801132e:	0512      	lsls	r2, r2, #20
 8011330:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8011334:	431a      	orrs	r2, r3
 8011336:	62c2      	str	r2, [r0, #44]	; 0x2c
 8011338:	4770      	bx	lr
 801133a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801133c:	3a01      	subs	r2, #1
 801133e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8011342:	6383      	str	r3, [r0, #56]	; 0x38
 8011344:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011346:	0512      	lsls	r2, r2, #20
 8011348:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801134c:	431a      	orrs	r2, r3
 801134e:	6382      	str	r2, [r0, #56]	; 0x38
 8011350:	4770      	bx	lr

08011352 <adc_inserted_channel_config>:
 8011352:	b530      	push	{r4, r5, lr}
 8011354:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8011356:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011358:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801135c:	1a61      	subs	r1, r4, r1
 801135e:	f06f 0404 	mvn.w	r4, #4
 8011362:	4361      	muls	r1, r4
 8011364:	241f      	movs	r4, #31
 8011366:	310f      	adds	r1, #15
 8011368:	408c      	lsls	r4, r1
 801136a:	ea25 0504 	bic.w	r5, r5, r4
 801136e:	fa02 f101 	lsl.w	r1, r2, r1
 8011372:	4329      	orrs	r1, r5
 8011374:	2a09      	cmp	r2, #9
 8011376:	6381      	str	r1, [r0, #56]	; 0x38
 8011378:	d80b      	bhi.n	8011392 <adc_inserted_channel_config+0x40>
 801137a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801137e:	2207      	movs	r2, #7
 8011380:	6904      	ldr	r4, [r0, #16]
 8011382:	408a      	lsls	r2, r1
 8011384:	ea24 0402 	bic.w	r4, r4, r2
 8011388:	fa03 f201 	lsl.w	r2, r3, r1
 801138c:	4322      	orrs	r2, r4
 801138e:	6102      	str	r2, [r0, #16]
 8011390:	bd30      	pop	{r4, r5, pc}
 8011392:	2a11      	cmp	r2, #17
 8011394:	d8fc      	bhi.n	8011390 <adc_inserted_channel_config+0x3e>
 8011396:	2407      	movs	r4, #7
 8011398:	3a0a      	subs	r2, #10
 801139a:	68c1      	ldr	r1, [r0, #12]
 801139c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80113a0:	4094      	lsls	r4, r2
 80113a2:	ea21 0104 	bic.w	r1, r1, r4
 80113a6:	fa03 f202 	lsl.w	r2, r3, r2
 80113aa:	430a      	orrs	r2, r1
 80113ac:	60c2      	str	r2, [r0, #12]
 80113ae:	e7ef      	b.n	8011390 <adc_inserted_channel_config+0x3e>

080113b0 <adc_external_trigger_source_config>:
 80113b0:	2901      	cmp	r1, #1
 80113b2:	d002      	beq.n	80113ba <adc_external_trigger_source_config+0xa>
 80113b4:	2902      	cmp	r1, #2
 80113b6:	d008      	beq.n	80113ca <adc_external_trigger_source_config+0x1a>
 80113b8:	4770      	bx	lr
 80113ba:	6883      	ldr	r3, [r0, #8]
 80113bc:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80113c0:	6083      	str	r3, [r0, #8]
 80113c2:	6883      	ldr	r3, [r0, #8]
 80113c4:	431a      	orrs	r2, r3
 80113c6:	6082      	str	r2, [r0, #8]
 80113c8:	4770      	bx	lr
 80113ca:	6883      	ldr	r3, [r0, #8]
 80113cc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80113d0:	e7f6      	b.n	80113c0 <adc_external_trigger_source_config+0x10>

080113d2 <adc_external_trigger_config>:
 80113d2:	f001 0301 	and.w	r3, r1, #1
 80113d6:	f001 0102 	and.w	r1, r1, #2
 80113da:	b152      	cbz	r2, 80113f2 <adc_external_trigger_config+0x20>
 80113dc:	b11b      	cbz	r3, 80113e6 <adc_external_trigger_config+0x14>
 80113de:	6883      	ldr	r3, [r0, #8]
 80113e0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80113e4:	6083      	str	r3, [r0, #8]
 80113e6:	b119      	cbz	r1, 80113f0 <adc_external_trigger_config+0x1e>
 80113e8:	6883      	ldr	r3, [r0, #8]
 80113ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80113ee:	6083      	str	r3, [r0, #8]
 80113f0:	4770      	bx	lr
 80113f2:	b11b      	cbz	r3, 80113fc <adc_external_trigger_config+0x2a>
 80113f4:	6883      	ldr	r3, [r0, #8]
 80113f6:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80113fa:	6083      	str	r3, [r0, #8]
 80113fc:	2900      	cmp	r1, #0
 80113fe:	d0f7      	beq.n	80113f0 <adc_external_trigger_config+0x1e>
 8011400:	6883      	ldr	r3, [r0, #8]
 8011402:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8011406:	e7f2      	b.n	80113ee <adc_external_trigger_config+0x1c>

08011408 <adc_software_trigger_enable>:
 8011408:	07ca      	lsls	r2, r1, #31
 801140a:	bf42      	ittt	mi
 801140c:	6883      	ldrmi	r3, [r0, #8]
 801140e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8011412:	6083      	strmi	r3, [r0, #8]
 8011414:	078b      	lsls	r3, r1, #30
 8011416:	bf42      	ittt	mi
 8011418:	6883      	ldrmi	r3, [r0, #8]
 801141a:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801141e:	6083      	strmi	r3, [r0, #8]
 8011420:	4770      	bx	lr

08011422 <enet_delay>:
 8011422:	2300      	movs	r3, #0
 8011424:	b082      	sub	sp, #8
 8011426:	9301      	str	r3, [sp, #4]
 8011428:	9001      	str	r0, [sp, #4]
 801142a:	9b01      	ldr	r3, [sp, #4]
 801142c:	b90b      	cbnz	r3, 8011432 <enet_delay+0x10>
 801142e:	b002      	add	sp, #8
 8011430:	4770      	bx	lr
 8011432:	9b01      	ldr	r3, [sp, #4]
 8011434:	3b01      	subs	r3, #1
 8011436:	9301      	str	r3, [sp, #4]
 8011438:	e7f7      	b.n	801142a <enet_delay+0x8>
	...

0801143c <enet_software_reset>:
 801143c:	4b07      	ldr	r3, [pc, #28]	; (801145c <enet_software_reset+0x20>)
 801143e:	681a      	ldr	r2, [r3, #0]
 8011440:	f042 0201 	orr.w	r2, r2, #1
 8011444:	601a      	str	r2, [r3, #0]
 8011446:	4a06      	ldr	r2, [pc, #24]	; (8011460 <enet_software_reset+0x24>)
 8011448:	6819      	ldr	r1, [r3, #0]
 801144a:	07c9      	lsls	r1, r1, #31
 801144c:	d501      	bpl.n	8011452 <enet_software_reset+0x16>
 801144e:	3a01      	subs	r2, #1
 8011450:	d1fa      	bne.n	8011448 <enet_software_reset+0xc>
 8011452:	6818      	ldr	r0, [r3, #0]
 8011454:	43c0      	mvns	r0, r0
 8011456:	f000 0001 	and.w	r0, r0, #1
 801145a:	4770      	bx	lr
 801145c:	40029000 	andmi	r9, r2, r0
 8011460:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011464 <enet_descriptors_chain_init>:
 8011464:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8011468:	b5f0      	push	{r4, r5, r6, r7, lr}
 801146a:	4a19      	ldr	r2, [pc, #100]	; (80114d0 <enet_descriptors_chain_init+0x6c>)
 801146c:	d125      	bne.n	80114ba <enet_descriptors_chain_init+0x56>
 801146e:	2500      	movs	r5, #0
 8011470:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8011474:	2002      	movs	r0, #2
 8011476:	4b17      	ldr	r3, [pc, #92]	; (80114d4 <enet_descriptors_chain_init+0x70>)
 8011478:	4c17      	ldr	r4, [pc, #92]	; (80114d8 <enet_descriptors_chain_init+0x74>)
 801147a:	6113      	str	r3, [r2, #16]
 801147c:	4a17      	ldr	r2, [pc, #92]	; (80114dc <enet_descriptors_chain_init+0x78>)
 801147e:	6013      	str	r3, [r2, #0]
 8011480:	2200      	movs	r2, #0
 8011482:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8011486:	4916      	ldr	r1, [pc, #88]	; (80114e0 <enet_descriptors_chain_init+0x7c>)
 8011488:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 801148c:	600a      	str	r2, [r1, #0]
 801148e:	4915      	ldr	r1, [pc, #84]	; (80114e4 <enet_descriptors_chain_init+0x80>)
 8011490:	600a      	str	r2, [r1, #0]
 8011492:	f103 0110 	add.w	r1, r3, #16
 8011496:	fb0e 4702 	mla	r7, lr, r2, r4
 801149a:	f841 7c08 	str.w	r7, [r1, #-8]
 801149e:	4594      	cmp	ip, r2
 80114a0:	bf94      	ite	ls
 80114a2:	461f      	movls	r7, r3
 80114a4:	460f      	movhi	r7, r1
 80114a6:	3201      	adds	r2, #1
 80114a8:	4290      	cmp	r0, r2
 80114aa:	e941 6504 	strd	r6, r5, [r1, #-16]
 80114ae:	f841 7c04 	str.w	r7, [r1, #-4]
 80114b2:	f101 0110 	add.w	r1, r1, #16
 80114b6:	d1ee      	bne.n	8011496 <enet_descriptors_chain_init+0x32>
 80114b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114ba:	4b0b      	ldr	r3, [pc, #44]	; (80114e8 <enet_descriptors_chain_init+0x84>)
 80114bc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80114c0:	60d3      	str	r3, [r2, #12]
 80114c2:	4a0a      	ldr	r2, [pc, #40]	; (80114ec <enet_descriptors_chain_init+0x88>)
 80114c4:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80114c8:	2008      	movs	r0, #8
 80114ca:	4c09      	ldr	r4, [pc, #36]	; (80114f0 <enet_descriptors_chain_init+0x8c>)
 80114cc:	6013      	str	r3, [r2, #0]
 80114ce:	e7d7      	b.n	8011480 <enet_descriptors_chain_init+0x1c>
 80114d0:	40029000 	andmi	r9, r2, r0
 80114d4:	2000d834 	andcs	sp, r0, r4, lsr r8
 80114d8:	2000cc4c 	andcs	ip, r0, ip, asr #24
 80114dc:	20009bec 	andcs	r9, r0, ip, ror #23
 80114e0:	20009be0 	andcs	r9, r0, r0, ror #23
 80114e4:	20009be4 	andcs	r9, r0, r4, ror #23
 80114e8:	2000cbcc 	andcs	ip, r0, ip, asr #23
 80114ec:	20009be8 	andcs	r9, r0, r8, ror #23
 80114f0:	20009c2c 	andcs	r9, r0, ip, lsr #24

080114f4 <enet_frame_receive>:
 80114f4:	4a1d      	ldr	r2, [pc, #116]	; (801156c <enet_frame_receive+0x78>)
 80114f6:	b510      	push	{r4, lr}
 80114f8:	6813      	ldr	r3, [r2, #0]
 80114fa:	681b      	ldr	r3, [r3, #0]
 80114fc:	2b00      	cmp	r3, #0
 80114fe:	db33      	blt.n	8011568 <enet_frame_receive+0x74>
 8011500:	b970      	cbnz	r0, 8011520 <enet_frame_receive+0x2c>
 8011502:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8011506:	6813      	ldr	r3, [r2, #0]
 8011508:	6019      	str	r1, [r3, #0]
 801150a:	4919      	ldr	r1, [pc, #100]	; (8011570 <enet_frame_receive+0x7c>)
 801150c:	6948      	ldr	r0, [r1, #20]
 801150e:	0604      	lsls	r4, r0, #24
 8011510:	d419      	bmi.n	8011546 <enet_frame_receive+0x52>
 8011512:	6859      	ldr	r1, [r3, #4]
 8011514:	0448      	lsls	r0, r1, #17
 8011516:	d51b      	bpl.n	8011550 <enet_frame_receive+0x5c>
 8011518:	68db      	ldr	r3, [r3, #12]
 801151a:	2001      	movs	r0, #1
 801151c:	6013      	str	r3, [r2, #0]
 801151e:	bd10      	pop	{r4, pc}
 8011520:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8011524:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8011528:	d11e      	bne.n	8011568 <enet_frame_receive+0x74>
 801152a:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801152e:	3b04      	subs	r3, #4
 8011530:	428b      	cmp	r3, r1
 8011532:	d819      	bhi.n	8011568 <enet_frame_receive+0x74>
 8011534:	2100      	movs	r1, #0
 8011536:	4299      	cmp	r1, r3
 8011538:	6814      	ldr	r4, [r2, #0]
 801153a:	d2e2      	bcs.n	8011502 <enet_frame_receive+0xe>
 801153c:	68a4      	ldr	r4, [r4, #8]
 801153e:	5d0c      	ldrb	r4, [r1, r4]
 8011540:	5444      	strb	r4, [r0, r1]
 8011542:	3101      	adds	r1, #1
 8011544:	e7f7      	b.n	8011536 <enet_frame_receive+0x42>
 8011546:	2080      	movs	r0, #128	; 0x80
 8011548:	6148      	str	r0, [r1, #20]
 801154a:	2000      	movs	r0, #0
 801154c:	6088      	str	r0, [r1, #8]
 801154e:	e7e0      	b.n	8011512 <enet_frame_receive+0x1e>
 8011550:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8011554:	4906      	ldr	r1, [pc, #24]	; (8011570 <enet_frame_receive+0x7c>)
 8011556:	bf05      	ittet	eq
 8011558:	3310      	addeq	r3, #16
 801155a:	6809      	ldreq	r1, [r1, #0]
 801155c:	68cb      	ldrne	r3, [r1, #12]
 801155e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011562:	bf08      	it	eq
 8011564:	185b      	addeq	r3, r3, r1
 8011566:	e7d8      	b.n	801151a <enet_frame_receive+0x26>
 8011568:	2000      	movs	r0, #0
 801156a:	e7d8      	b.n	801151e <enet_frame_receive+0x2a>
 801156c:	20009be8 	andcs	r9, r0, r8, ror #23
 8011570:	40029000 	andmi	r9, r2, r0

08011574 <enet_frame_transmit>:
 8011574:	4a1e      	ldr	r2, [pc, #120]	; (80115f0 <enet_frame_transmit+0x7c>)
 8011576:	b530      	push	{r4, r5, lr}
 8011578:	6813      	ldr	r3, [r2, #0]
 801157a:	681b      	ldr	r3, [r3, #0]
 801157c:	2b00      	cmp	r3, #0
 801157e:	db34      	blt.n	80115ea <enet_frame_transmit+0x76>
 8011580:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8011584:	4299      	cmp	r1, r3
 8011586:	d830      	bhi.n	80115ea <enet_frame_transmit+0x76>
 8011588:	b9e8      	cbnz	r0, 80115c6 <enet_frame_transmit+0x52>
 801158a:	6813      	ldr	r3, [r2, #0]
 801158c:	4819      	ldr	r0, [pc, #100]	; (80115f4 <enet_frame_transmit+0x80>)
 801158e:	6059      	str	r1, [r3, #4]
 8011590:	6819      	ldr	r1, [r3, #0]
 8011592:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8011596:	6019      	str	r1, [r3, #0]
 8011598:	6941      	ldr	r1, [r0, #20]
 801159a:	6944      	ldr	r4, [r0, #20]
 801159c:	f001 0104 	and.w	r1, r1, #4
 80115a0:	f004 0420 	and.w	r4, r4, #32
 80115a4:	4321      	orrs	r1, r4
 80115a6:	d110      	bne.n	80115ca <enet_frame_transmit+0x56>
 80115a8:	6819      	ldr	r1, [r3, #0]
 80115aa:	02c8      	lsls	r0, r1, #11
 80115ac:	d511      	bpl.n	80115d2 <enet_frame_transmit+0x5e>
 80115ae:	68db      	ldr	r3, [r3, #12]
 80115b0:	2001      	movs	r0, #1
 80115b2:	6013      	str	r3, [r2, #0]
 80115b4:	bd30      	pop	{r4, r5, pc}
 80115b6:	5cc5      	ldrb	r5, [r0, r3]
 80115b8:	68a4      	ldr	r4, [r4, #8]
 80115ba:	551d      	strb	r5, [r3, r4]
 80115bc:	3301      	adds	r3, #1
 80115be:	428b      	cmp	r3, r1
 80115c0:	6814      	ldr	r4, [r2, #0]
 80115c2:	d1f8      	bne.n	80115b6 <enet_frame_transmit+0x42>
 80115c4:	e7e1      	b.n	801158a <enet_frame_transmit+0x16>
 80115c6:	2300      	movs	r3, #0
 80115c8:	e7f9      	b.n	80115be <enet_frame_transmit+0x4a>
 80115ca:	6141      	str	r1, [r0, #20]
 80115cc:	2100      	movs	r1, #0
 80115ce:	6041      	str	r1, [r0, #4]
 80115d0:	e7ea      	b.n	80115a8 <enet_frame_transmit+0x34>
 80115d2:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80115d6:	4907      	ldr	r1, [pc, #28]	; (80115f4 <enet_frame_transmit+0x80>)
 80115d8:	bf05      	ittet	eq
 80115da:	3310      	addeq	r3, #16
 80115dc:	6809      	ldreq	r1, [r1, #0]
 80115de:	690b      	ldrne	r3, [r1, #16]
 80115e0:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80115e4:	bf08      	it	eq
 80115e6:	185b      	addeq	r3, r3, r1
 80115e8:	e7e2      	b.n	80115b0 <enet_frame_transmit+0x3c>
 80115ea:	2000      	movs	r0, #0
 80115ec:	e7e2      	b.n	80115b4 <enet_frame_transmit+0x40>
 80115ee:	bf00      	nop
 80115f0:	20009bec 	andcs	r9, r0, ip, ror #23
 80115f4:	40029000 	andmi	r9, r2, r0

080115f8 <enet_transmit_checksum_config>:
 80115f8:	6803      	ldr	r3, [r0, #0]
 80115fa:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80115fe:	430b      	orrs	r3, r1
 8011600:	6003      	str	r3, [r0, #0]
 8011602:	4770      	bx	lr

08011604 <enet_mac_address_set>:
 8011604:	888a      	ldrh	r2, [r1, #4]
 8011606:	4b03      	ldr	r3, [pc, #12]	; (8011614 <enet_mac_address_set+0x10>)
 8011608:	50c2      	str	r2, [r0, r3]
 801160a:	680a      	ldr	r2, [r1, #0]
 801160c:	3304      	adds	r3, #4
 801160e:	50c2      	str	r2, [r0, r3]
 8011610:	4770      	bx	lr
 8011612:	bf00      	nop
 8011614:	40028040 	andmi	r8, r2, r0, asr #32

08011618 <enet_rx_enable>:
 8011618:	4a05      	ldr	r2, [pc, #20]	; (8011630 <enet_rx_enable+0x18>)
 801161a:	6813      	ldr	r3, [r2, #0]
 801161c:	f043 0304 	orr.w	r3, r3, #4
 8011620:	6013      	str	r3, [r2, #0]
 8011622:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8011626:	6993      	ldr	r3, [r2, #24]
 8011628:	f043 0302 	orr.w	r3, r3, #2
 801162c:	6193      	str	r3, [r2, #24]
 801162e:	4770      	bx	lr
 8011630:	40028000 	andmi	r8, r2, r0

08011634 <enet_phy_write_read>:
 8011634:	b530      	push	{r4, r5, lr}
 8011636:	4604      	mov	r4, r0
 8011638:	4d13      	ldr	r5, [pc, #76]	; (8011688 <enet_phy_write_read+0x54>)
 801163a:	0192      	lsls	r2, r2, #6
 801163c:	6928      	ldr	r0, [r5, #16]
 801163e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8011642:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8011646:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801164a:	4302      	orrs	r2, r0
 801164c:	02c9      	lsls	r1, r1, #11
 801164e:	b289      	uxth	r1, r1
 8011650:	2c02      	cmp	r4, #2
 8011652:	ea42 0204 	orr.w	r2, r2, r4
 8011656:	ea42 0201 	orr.w	r2, r2, r1
 801165a:	bf08      	it	eq
 801165c:	8819      	ldrheq	r1, [r3, #0]
 801165e:	f042 0201 	orr.w	r2, r2, #1
 8011662:	bf08      	it	eq
 8011664:	6169      	streq	r1, [r5, #20]
 8011666:	612a      	str	r2, [r5, #16]
 8011668:	4907      	ldr	r1, [pc, #28]	; (8011688 <enet_phy_write_read+0x54>)
 801166a:	4a08      	ldr	r2, [pc, #32]	; (801168c <enet_phy_write_read+0x58>)
 801166c:	6908      	ldr	r0, [r1, #16]
 801166e:	07c0      	lsls	r0, r0, #31
 8011670:	d501      	bpl.n	8011676 <enet_phy_write_read+0x42>
 8011672:	3a01      	subs	r2, #1
 8011674:	d1fa      	bne.n	801166c <enet_phy_write_read+0x38>
 8011676:	690a      	ldr	r2, [r1, #16]
 8011678:	43d2      	mvns	r2, r2
 801167a:	f002 0001 	and.w	r0, r2, #1
 801167e:	b90c      	cbnz	r4, 8011684 <enet_phy_write_read+0x50>
 8011680:	694a      	ldr	r2, [r1, #20]
 8011682:	801a      	strh	r2, [r3, #0]
 8011684:	bd30      	pop	{r4, r5, pc}
 8011686:	bf00      	nop
 8011688:	40028000 	andmi	r8, r2, r0
 801168c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011690 <enet_phy_config>:
 8011690:	4b22      	ldr	r3, [pc, #136]	; (801171c <enet_phy_config+0x8c>)
 8011692:	b513      	push	{r0, r1, r4, lr}
 8011694:	2001      	movs	r0, #1
 8011696:	691c      	ldr	r4, [r3, #16]
 8011698:	f7ff f80a 	bl	80106b0 <rcu_clock_freq_get>
 801169c:	4b20      	ldr	r3, [pc, #128]	; (8011720 <enet_phy_config+0x90>)
 801169e:	4a21      	ldr	r2, [pc, #132]	; (8011724 <enet_phy_config+0x94>)
 80116a0:	4403      	add	r3, r0
 80116a2:	4293      	cmp	r3, r2
 80116a4:	f024 041c 	bic.w	r4, r4, #28
 80116a8:	d220      	bcs.n	80116ec <enet_phy_config+0x5c>
 80116aa:	f044 0408 	orr.w	r4, r4, #8
 80116ae:	4b1b      	ldr	r3, [pc, #108]	; (801171c <enet_phy_config+0x8c>)
 80116b0:	2200      	movs	r2, #0
 80116b2:	611c      	str	r4, [r3, #16]
 80116b4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80116b8:	2101      	movs	r1, #1
 80116ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 80116be:	2002      	movs	r0, #2
 80116c0:	f10d 0306 	add.w	r3, sp, #6
 80116c4:	f7ff ffb6 	bl	8011634 <enet_phy_write_read>
 80116c8:	b310      	cbz	r0, 8011710 <enet_phy_config+0x80>
 80116ca:	2200      	movs	r2, #0
 80116cc:	4816      	ldr	r0, [pc, #88]	; (8011728 <enet_phy_config+0x98>)
 80116ce:	f7ff fea8 	bl	8011422 <enet_delay>
 80116d2:	2101      	movs	r1, #1
 80116d4:	4610      	mov	r0, r2
 80116d6:	f10d 0306 	add.w	r3, sp, #6
 80116da:	f7ff ffab 	bl	8011634 <enet_phy_write_read>
 80116de:	b1b8      	cbz	r0, 8011710 <enet_phy_config+0x80>
 80116e0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80116e4:	43c0      	mvns	r0, r0
 80116e6:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80116ea:	e012      	b.n	8011712 <enet_phy_config+0x82>
 80116ec:	4b0f      	ldr	r3, [pc, #60]	; (801172c <enet_phy_config+0x9c>)
 80116ee:	4a10      	ldr	r2, [pc, #64]	; (8011730 <enet_phy_config+0xa0>)
 80116f0:	4403      	add	r3, r0
 80116f2:	4293      	cmp	r3, r2
 80116f4:	d802      	bhi.n	80116fc <enet_phy_config+0x6c>
 80116f6:	f044 040c 	orr.w	r4, r4, #12
 80116fa:	e7d8      	b.n	80116ae <enet_phy_config+0x1e>
 80116fc:	4b0d      	ldr	r3, [pc, #52]	; (8011734 <enet_phy_config+0xa4>)
 80116fe:	4a0e      	ldr	r2, [pc, #56]	; (8011738 <enet_phy_config+0xa8>)
 8011700:	4403      	add	r3, r0
 8011702:	4293      	cmp	r3, r2
 8011704:	d9d3      	bls.n	80116ae <enet_phy_config+0x1e>
 8011706:	4b0d      	ldr	r3, [pc, #52]	; (801173c <enet_phy_config+0xac>)
 8011708:	4a0d      	ldr	r2, [pc, #52]	; (8011740 <enet_phy_config+0xb0>)
 801170a:	4403      	add	r3, r0
 801170c:	4293      	cmp	r3, r2
 801170e:	d902      	bls.n	8011716 <enet_phy_config+0x86>
 8011710:	2000      	movs	r0, #0
 8011712:	b002      	add	sp, #8
 8011714:	bd10      	pop	{r4, pc}
 8011716:	f044 0404 	orr.w	r4, r4, #4
 801171a:	e7c8      	b.n	80116ae <enet_phy_config+0x1e>
 801171c:	40028000 	andmi	r8, r2, r0
 8011720:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8011724:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8011728:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 801172c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8011730:	017d783f 	cmneq	sp, pc, lsr r8
 8011734:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8011738:	01c9c37f 	biceq	ip, r9, pc, ror r3
 801173c:	faa2b580 	blx	68bed44 <__stack_size+0x68bd544>
 8011740:	0112a880 	tsteq	r2, r0, lsl #17

08011744 <enet_init>:
 8011744:	2300      	movs	r3, #0
 8011746:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011748:	4604      	mov	r4, r0
 801174a:	460d      	mov	r5, r1
 801174c:	4616      	mov	r6, r2
 801174e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011752:	f7ff ff9d 	bl	8011690 <enet_phy_config>
 8011756:	2800      	cmp	r0, #0
 8011758:	d037      	beq.n	80117ca <enet_init+0x86>
 801175a:	4b3b      	ldr	r3, [pc, #236]	; (8011848 <enet_init+0x104>)
 801175c:	4a3b      	ldr	r2, [pc, #236]	; (801184c <enet_init+0x108>)
 801175e:	6819      	ldr	r1, [r3, #0]
 8011760:	2c01      	cmp	r4, #1
 8011762:	ea02 0201 	and.w	r2, r2, r1
 8011766:	601a      	str	r2, [r3, #0]
 8011768:	f04f 0200 	mov.w	r2, #0
 801176c:	605a      	str	r2, [r3, #4]
 801176e:	609a      	str	r2, [r3, #8]
 8011770:	60da      	str	r2, [r3, #12]
 8011772:	6999      	ldr	r1, [r3, #24]
 8011774:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8011778:	ea4f 4101 	mov.w	r1, r1, lsl #16
 801177c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8011780:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8011784:	6199      	str	r1, [r3, #24]
 8011786:	4932      	ldr	r1, [pc, #200]	; (8011850 <enet_init+0x10c>)
 8011788:	61da      	str	r2, [r3, #28]
 801178a:	6988      	ldr	r0, [r1, #24]
 801178c:	4b31      	ldr	r3, [pc, #196]	; (8011854 <enet_init+0x110>)
 801178e:	ea03 0300 	and.w	r3, r3, r0
 8011792:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8011796:	618b      	str	r3, [r1, #24]
 8011798:	680b      	ldr	r3, [r1, #0]
 801179a:	4b2f      	ldr	r3, [pc, #188]	; (8011858 <enet_init+0x114>)
 801179c:	600b      	str	r3, [r1, #0]
 801179e:	d01e      	beq.n	80117de <enet_init+0x9a>
 80117a0:	08e3      	lsrs	r3, r4, #3
 80117a2:	0861      	lsrs	r1, r4, #1
 80117a4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80117a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80117ac:	430b      	orrs	r3, r1
 80117ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117b2:	2101      	movs	r1, #1
 80117b4:	2002      	movs	r0, #2
 80117b6:	f10d 0306 	add.w	r3, sp, #6
 80117ba:	f7ff ff3b 	bl	8011634 <enet_phy_write_read>
 80117be:	b158      	cbz	r0, 80117d8 <enet_init+0x94>
 80117c0:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80117c4:	f7ff fe2d 	bl	8011422 <enet_delay>
 80117c8:	e05f      	b.n	801188a <enet_init+0x146>
 80117ca:	4824      	ldr	r0, [pc, #144]	; (801185c <enet_init+0x118>)
 80117cc:	f7ff fe29 	bl	8011422 <enet_delay>
 80117d0:	f7ff ff5e 	bl	8011690 <enet_phy_config>
 80117d4:	2800      	cmp	r0, #0
 80117d6:	d1c0      	bne.n	801175a <enet_init+0x16>
 80117d8:	2000      	movs	r0, #0
 80117da:	b003      	add	sp, #12
 80117dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117de:	4614      	mov	r4, r2
 80117e0:	4f1f      	ldr	r7, [pc, #124]	; (8011860 <enet_init+0x11c>)
 80117e2:	2201      	movs	r2, #1
 80117e4:	2000      	movs	r0, #0
 80117e6:	4611      	mov	r1, r2
 80117e8:	f10d 0306 	add.w	r3, sp, #6
 80117ec:	f7ff ff22 	bl	8011634 <enet_phy_write_read>
 80117f0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80117f4:	3401      	adds	r4, #1
 80117f6:	f002 0204 	and.w	r2, r2, #4
 80117fa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80117fe:	b912      	cbnz	r2, 8011806 <enet_init+0xc2>
 8011800:	42bc      	cmp	r4, r7
 8011802:	d1ee      	bne.n	80117e2 <enet_init+0x9e>
 8011804:	e7e8      	b.n	80117d8 <enet_init+0x94>
 8011806:	42bc      	cmp	r4, r7
 8011808:	d0e6      	beq.n	80117d8 <enet_init+0x94>
 801180a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801180e:	2101      	movs	r1, #1
 8011810:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011814:	2002      	movs	r0, #2
 8011816:	2200      	movs	r2, #0
 8011818:	f7ff ff0c 	bl	8011634 <enet_phy_write_read>
 801181c:	2800      	cmp	r0, #0
 801181e:	d0db      	beq.n	80117d8 <enet_init+0x94>
 8011820:	2400      	movs	r4, #0
 8011822:	4f0f      	ldr	r7, [pc, #60]	; (8011860 <enet_init+0x11c>)
 8011824:	2201      	movs	r2, #1
 8011826:	2000      	movs	r0, #0
 8011828:	4611      	mov	r1, r2
 801182a:	f10d 0306 	add.w	r3, sp, #6
 801182e:	f7ff ff01 	bl	8011634 <enet_phy_write_read>
 8011832:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011836:	3401      	adds	r4, #1
 8011838:	f002 0220 	and.w	r2, r2, #32
 801183c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011840:	b982      	cbnz	r2, 8011864 <enet_init+0x120>
 8011842:	42bc      	cmp	r4, r7
 8011844:	d1ee      	bne.n	8011824 <enet_init+0xe0>
 8011846:	e7c7      	b.n	80117d8 <enet_init+0x94>
 8011848:	40028000 	andmi	r8, r2, r0
 801184c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8011850:	40029000 	andmi	r9, r2, r0
 8011854:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8011858:	02c16000 	sbceq	r6, r1, #0
 801185c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8011860:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011864:	42bc      	cmp	r4, r7
 8011866:	d0b7      	beq.n	80117d8 <enet_init+0x94>
 8011868:	2101      	movs	r1, #1
 801186a:	2210      	movs	r2, #16
 801186c:	2000      	movs	r0, #0
 801186e:	f7ff fee1 	bl	8011634 <enet_phy_write_read>
 8011872:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011876:	f013 0f04 	tst.w	r3, #4
 801187a:	bf14      	ite	ne
 801187c:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8011880:	2400      	moveq	r4, #0
 8011882:	0799      	lsls	r1, r3, #30
 8011884:	d401      	bmi.n	801188a <enet_init+0x146>
 8011886:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801188a:	4b64      	ldr	r3, [pc, #400]	; (8011a1c <enet_init+0x2d8>)
 801188c:	056a      	lsls	r2, r5, #21
 801188e:	6818      	ldr	r0, [r3, #0]
 8011890:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8011894:	ea44 0400 	orr.w	r4, r4, r0
 8011898:	601c      	str	r4, [r3, #0]
 801189a:	d50c      	bpl.n	80118b6 <enet_init+0x172>
 801189c:	681a      	ldr	r2, [r3, #0]
 801189e:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80118a2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80118a6:	601a      	str	r2, [r3, #0]
 80118a8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80118ac:	6999      	ldr	r1, [r3, #24]
 80118ae:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 80118b2:	430d      	orrs	r5, r1
 80118b4:	619d      	str	r5, [r3, #24]
 80118b6:	4959      	ldr	r1, [pc, #356]	; (8011a1c <enet_init+0x2d8>)
 80118b8:	4b59      	ldr	r3, [pc, #356]	; (8011a20 <enet_init+0x2dc>)
 80118ba:	684a      	ldr	r2, [r1, #4]
 80118bc:	4316      	orrs	r6, r2
 80118be:	604e      	str	r6, [r1, #4]
 80118c0:	681a      	ldr	r2, [r3, #0]
 80118c2:	07d7      	lsls	r7, r2, #31
 80118c4:	d510      	bpl.n	80118e8 <enet_init+0x1a4>
 80118c6:	685a      	ldr	r2, [r3, #4]
 80118c8:	680c      	ldr	r4, [r1, #0]
 80118ca:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80118ce:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80118d2:	4320      	orrs	r0, r4
 80118d4:	6008      	str	r0, [r1, #0]
 80118d6:	4853      	ldr	r0, [pc, #332]	; (8011a24 <enet_init+0x2e0>)
 80118d8:	0892      	lsrs	r2, r2, #2
 80118da:	6981      	ldr	r1, [r0, #24]
 80118dc:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80118e0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80118e4:	430a      	orrs	r2, r1
 80118e6:	6182      	str	r2, [r0, #24]
 80118e8:	681a      	ldr	r2, [r3, #0]
 80118ea:	0796      	lsls	r6, r2, #30
 80118ec:	d508      	bpl.n	8011900 <enet_init+0x1bc>
 80118ee:	494d      	ldr	r1, [pc, #308]	; (8011a24 <enet_init+0x2e0>)
 80118f0:	6898      	ldr	r0, [r3, #8]
 80118f2:	680a      	ldr	r2, [r1, #0]
 80118f4:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80118f8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80118fc:	4302      	orrs	r2, r0
 80118fe:	600a      	str	r2, [r1, #0]
 8011900:	681a      	ldr	r2, [r3, #0]
 8011902:	0755      	lsls	r5, r2, #29
 8011904:	d508      	bpl.n	8011918 <enet_init+0x1d4>
 8011906:	4947      	ldr	r1, [pc, #284]	; (8011a24 <enet_init+0x2e0>)
 8011908:	68d8      	ldr	r0, [r3, #12]
 801190a:	680a      	ldr	r2, [r1, #0]
 801190c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8011910:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8011914:	4302      	orrs	r2, r0
 8011916:	600a      	str	r2, [r1, #0]
 8011918:	681a      	ldr	r2, [r3, #0]
 801191a:	0714      	lsls	r4, r2, #28
 801191c:	d508      	bpl.n	8011930 <enet_init+0x1ec>
 801191e:	4941      	ldr	r1, [pc, #260]	; (8011a24 <enet_init+0x2e0>)
 8011920:	6918      	ldr	r0, [r3, #16]
 8011922:	680a      	ldr	r2, [r1, #0]
 8011924:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8011928:	f022 0202 	bic.w	r2, r2, #2
 801192c:	4302      	orrs	r2, r0
 801192e:	600a      	str	r2, [r1, #0]
 8011930:	681a      	ldr	r2, [r3, #0]
 8011932:	06d0      	lsls	r0, r2, #27
 8011934:	d506      	bpl.n	8011944 <enet_init+0x200>
 8011936:	493b      	ldr	r1, [pc, #236]	; (8011a24 <enet_init+0x2e0>)
 8011938:	4a3b      	ldr	r2, [pc, #236]	; (8011a28 <enet_init+0x2e4>)
 801193a:	6988      	ldr	r0, [r1, #24]
 801193c:	4002      	ands	r2, r0
 801193e:	6958      	ldr	r0, [r3, #20]
 8011940:	4302      	orrs	r2, r0
 8011942:	618a      	str	r2, [r1, #24]
 8011944:	681a      	ldr	r2, [r3, #0]
 8011946:	0691      	lsls	r1, r2, #26
 8011948:	d508      	bpl.n	801195c <enet_init+0x218>
 801194a:	4936      	ldr	r1, [pc, #216]	; (8011a24 <enet_init+0x2e0>)
 801194c:	6998      	ldr	r0, [r3, #24]
 801194e:	698a      	ldr	r2, [r1, #24]
 8011950:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8011954:	f022 0204 	bic.w	r2, r2, #4
 8011958:	4302      	orrs	r2, r0
 801195a:	618a      	str	r2, [r1, #24]
 801195c:	681a      	ldr	r2, [r3, #0]
 801195e:	0652      	lsls	r2, r2, #25
 8011960:	d506      	bpl.n	8011970 <enet_init+0x22c>
 8011962:	492e      	ldr	r1, [pc, #184]	; (8011a1c <enet_init+0x2d8>)
 8011964:	69d8      	ldr	r0, [r3, #28]
 8011966:	69ca      	ldr	r2, [r1, #28]
 8011968:	0c52      	lsrs	r2, r2, #17
 801196a:	0452      	lsls	r2, r2, #17
 801196c:	4302      	orrs	r2, r0
 801196e:	61ca      	str	r2, [r1, #28]
 8011970:	681a      	ldr	r2, [r3, #0]
 8011972:	0617      	lsls	r7, r2, #24
 8011974:	d517      	bpl.n	80119a6 <enet_init+0x262>
 8011976:	4c29      	ldr	r4, [pc, #164]	; (8011a1c <enet_init+0x2d8>)
 8011978:	6a1a      	ldr	r2, [r3, #32]
 801197a:	69a0      	ldr	r0, [r4, #24]
 801197c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8011980:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8011984:	0400      	lsls	r0, r0, #16
 8011986:	0c00      	lsrs	r0, r0, #16
 8011988:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 801198c:	4301      	orrs	r1, r0
 801198e:	4825      	ldr	r0, [pc, #148]	; (8011a24 <enet_init+0x2e0>)
 8011990:	61a1      	str	r1, [r4, #24]
 8011992:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8011996:	0a12      	lsrs	r2, r2, #8
 8011998:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 801199c:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80119a0:	430a      	orrs	r2, r1
 80119a2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80119a6:	681a      	ldr	r2, [r3, #0]
 80119a8:	05d6      	lsls	r6, r2, #23
 80119aa:	bf42      	ittt	mi
 80119ac:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80119ae:	4a1b      	ldrmi	r2, [pc, #108]	; (8011a1c <enet_init+0x2d8>)
 80119b0:	6091      	strmi	r1, [r2, #8]
 80119b2:	681a      	ldr	r2, [r3, #0]
 80119b4:	0595      	lsls	r5, r2, #22
 80119b6:	bf42      	ittt	mi
 80119b8:	4a18      	ldrmi	r2, [pc, #96]	; (8011a1c <enet_init+0x2d8>)
 80119ba:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80119bc:	60d1      	strmi	r1, [r2, #12]
 80119be:	681a      	ldr	r2, [r3, #0]
 80119c0:	0554      	lsls	r4, r2, #21
 80119c2:	d508      	bpl.n	80119d6 <enet_init+0x292>
 80119c4:	4915      	ldr	r1, [pc, #84]	; (8011a1c <enet_init+0x2d8>)
 80119c6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80119c8:	684a      	ldr	r2, [r1, #4]
 80119ca:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80119ce:	f022 0206 	bic.w	r2, r2, #6
 80119d2:	4302      	orrs	r2, r0
 80119d4:	604a      	str	r2, [r1, #4]
 80119d6:	681a      	ldr	r2, [r3, #0]
 80119d8:	0510      	lsls	r0, r2, #20
 80119da:	d508      	bpl.n	80119ee <enet_init+0x2aa>
 80119dc:	490f      	ldr	r1, [pc, #60]	; (8011a1c <enet_init+0x2d8>)
 80119de:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80119e0:	680a      	ldr	r2, [r1, #0]
 80119e2:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80119e6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80119ea:	4302      	orrs	r2, r0
 80119ec:	600a      	str	r2, [r1, #0]
 80119ee:	681a      	ldr	r2, [r3, #0]
 80119f0:	04d1      	lsls	r1, r2, #19
 80119f2:	d506      	bpl.n	8011a02 <enet_init+0x2be>
 80119f4:	4909      	ldr	r1, [pc, #36]	; (8011a1c <enet_init+0x2d8>)
 80119f6:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80119f8:	680a      	ldr	r2, [r1, #0]
 80119fa:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80119fe:	4302      	orrs	r2, r0
 8011a00:	600a      	str	r2, [r1, #0]
 8011a02:	681a      	ldr	r2, [r3, #0]
 8011a04:	0492      	lsls	r2, r2, #18
 8011a06:	d506      	bpl.n	8011a16 <enet_init+0x2d2>
 8011a08:	4904      	ldr	r1, [pc, #16]	; (8011a1c <enet_init+0x2d8>)
 8011a0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a0c:	680a      	ldr	r2, [r1, #0]
 8011a0e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8011a12:	4313      	orrs	r3, r2
 8011a14:	600b      	str	r3, [r1, #0]
 8011a16:	2001      	movs	r0, #1
 8011a18:	e6df      	b.n	80117da <enet_init+0x96>
 8011a1a:	bf00      	nop
 8011a1c:	40028000 	andmi	r8, r2, r0
 8011a20:	20009bf0 	strdcs	r9, [r0], -r0
 8011a24:	40029000 	andmi	r9, r2, r0
 8011a28:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08011a2c <enet_txfifo_flush>:
 8011a2c:	4b06      	ldr	r3, [pc, #24]	; (8011a48 <enet_txfifo_flush+0x1c>)
 8011a2e:	4807      	ldr	r0, [pc, #28]	; (8011a4c <enet_txfifo_flush+0x20>)
 8011a30:	699a      	ldr	r2, [r3, #24]
 8011a32:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8011a36:	619a      	str	r2, [r3, #24]
 8011a38:	699a      	ldr	r2, [r3, #24]
 8011a3a:	02d2      	lsls	r2, r2, #11
 8011a3c:	d502      	bpl.n	8011a44 <enet_txfifo_flush+0x18>
 8011a3e:	3801      	subs	r0, #1
 8011a40:	d1fa      	bne.n	8011a38 <enet_txfifo_flush+0xc>
 8011a42:	4770      	bx	lr
 8011a44:	2001      	movs	r0, #1
 8011a46:	4770      	bx	lr
 8011a48:	40029000 	andmi	r9, r2, r0
 8011a4c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011a50 <enet_tx_enable>:
 8011a50:	4a06      	ldr	r2, [pc, #24]	; (8011a6c <enet_tx_enable+0x1c>)
 8011a52:	b508      	push	{r3, lr}
 8011a54:	6813      	ldr	r3, [r2, #0]
 8011a56:	f043 0308 	orr.w	r3, r3, #8
 8011a5a:	6013      	str	r3, [r2, #0]
 8011a5c:	f7ff ffe6 	bl	8011a2c <enet_txfifo_flush>
 8011a60:	4a03      	ldr	r2, [pc, #12]	; (8011a70 <enet_tx_enable+0x20>)
 8011a62:	6993      	ldr	r3, [r2, #24]
 8011a64:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8011a68:	6193      	str	r3, [r2, #24]
 8011a6a:	bd08      	pop	{r3, pc}
 8011a6c:	40028000 	andmi	r8, r2, r0
 8011a70:	40029000 	andmi	r9, r2, r0

08011a74 <enet_enable>:
 8011a74:	b508      	push	{r3, lr}
 8011a76:	f7ff ffeb 	bl	8011a50 <enet_tx_enable>
 8011a7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a7e:	f7ff bdcb 	b.w	8011618 <enet_rx_enable>

08011a82 <enet_desc_information_get>:
 8011a82:	2905      	cmp	r1, #5
 8011a84:	d817      	bhi.n	8011ab6 <enet_desc_information_get+0x34>
 8011a86:	e8df f001 	tbb	[pc, r1]
 8011a8a:	03091012 	movweq	r1, #36882	; 0x9012
 8011a8e:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8011a92:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8011a96:	4770      	bx	lr
 8011a98:	88c0      	ldrh	r0, [r0, #6]
 8011a9a:	e7fa      	b.n	8011a92 <enet_desc_information_get+0x10>
 8011a9c:	8840      	ldrh	r0, [r0, #2]
 8011a9e:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8011aa2:	2804      	cmp	r0, #4
 8011aa4:	d90a      	bls.n	8011abc <enet_desc_information_get+0x3a>
 8011aa6:	3804      	subs	r0, #4
 8011aa8:	4770      	bx	lr
 8011aaa:	6880      	ldr	r0, [r0, #8]
 8011aac:	4770      	bx	lr
 8011aae:	6800      	ldr	r0, [r0, #0]
 8011ab0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8011ab4:	4770      	bx	lr
 8011ab6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011aba:	4770      	bx	lr
 8011abc:	2000      	movs	r0, #0
 8011abe:	4770      	bx	lr

08011ac0 <enet_rxframe_drop>:
 8011ac0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8011ac4:	4814      	ldr	r0, [pc, #80]	; (8011b18 <enet_rxframe_drop+0x58>)
 8011ac6:	b510      	push	{r4, lr}
 8011ac8:	6802      	ldr	r2, [r0, #0]
 8011aca:	4914      	ldr	r1, [pc, #80]	; (8011b1c <enet_rxframe_drop+0x5c>)
 8011acc:	6854      	ldr	r4, [r2, #4]
 8011ace:	6013      	str	r3, [r2, #0]
 8011ad0:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8011ad4:	680b      	ldr	r3, [r1, #0]
 8011ad6:	d009      	beq.n	8011aec <enet_rxframe_drop+0x2c>
 8011ad8:	b12b      	cbz	r3, 8011ae6 <enet_rxframe_drop+0x26>
 8011ada:	68da      	ldr	r2, [r3, #12]
 8011adc:	6002      	str	r2, [r0, #0]
 8011ade:	681a      	ldr	r2, [r3, #0]
 8011ae0:	b1ba      	cbz	r2, 8011b12 <enet_rxframe_drop+0x52>
 8011ae2:	600a      	str	r2, [r1, #0]
 8011ae4:	bd10      	pop	{r4, pc}
 8011ae6:	68d3      	ldr	r3, [r2, #12]
 8011ae8:	6003      	str	r3, [r0, #0]
 8011aea:	e7fb      	b.n	8011ae4 <enet_rxframe_drop+0x24>
 8011aec:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8011af0:	4c0b      	ldr	r4, [pc, #44]	; (8011b20 <enet_rxframe_drop+0x60>)
 8011af2:	d006      	beq.n	8011b02 <enet_rxframe_drop+0x42>
 8011af4:	68e2      	ldr	r2, [r4, #12]
 8011af6:	6002      	str	r2, [r0, #0]
 8011af8:	2b00      	cmp	r3, #0
 8011afa:	d0f3      	beq.n	8011ae4 <enet_rxframe_drop+0x24>
 8011afc:	681b      	ldr	r3, [r3, #0]
 8011afe:	600b      	str	r3, [r1, #0]
 8011b00:	e7f0      	b.n	8011ae4 <enet_rxframe_drop+0x24>
 8011b02:	6824      	ldr	r4, [r4, #0]
 8011b04:	3210      	adds	r2, #16
 8011b06:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8011b0a:	4422      	add	r2, r4
 8011b0c:	6002      	str	r2, [r0, #0]
 8011b0e:	2b00      	cmp	r3, #0
 8011b10:	d0e8      	beq.n	8011ae4 <enet_rxframe_drop+0x24>
 8011b12:	3310      	adds	r3, #16
 8011b14:	e7f3      	b.n	8011afe <enet_rxframe_drop+0x3e>
 8011b16:	bf00      	nop
 8011b18:	20009be8 	andcs	r9, r0, r8, ror #23
 8011b1c:	20009be0 	andcs	r9, r0, r0, ror #23
 8011b20:	40029000 	andmi	r9, r2, r0

08011b24 <enet_rxframe_size_get>:
 8011b24:	b508      	push	{r3, lr}
 8011b26:	4b0c      	ldr	r3, [pc, #48]	; (8011b58 <enet_rxframe_size_get+0x34>)
 8011b28:	681b      	ldr	r3, [r3, #0]
 8011b2a:	6818      	ldr	r0, [r3, #0]
 8011b2c:	2800      	cmp	r0, #0
 8011b2e:	db10      	blt.n	8011b52 <enet_rxframe_size_get+0x2e>
 8011b30:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8011b34:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011b38:	d003      	beq.n	8011b42 <enet_rxframe_size_get+0x1e>
 8011b3a:	f7ff ffc1 	bl	8011ac0 <enet_rxframe_drop>
 8011b3e:	2001      	movs	r0, #1
 8011b40:	bd08      	pop	{r3, pc}
 8011b42:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8011b46:	2b21      	cmp	r3, #33	; 0x21
 8011b48:	d0f7      	beq.n	8011b3a <enet_rxframe_size_get+0x16>
 8011b4a:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8011b4e:	3804      	subs	r0, #4
 8011b50:	e7f6      	b.n	8011b40 <enet_rxframe_size_get+0x1c>
 8011b52:	2000      	movs	r0, #0
 8011b54:	e7f4      	b.n	8011b40 <enet_rxframe_size_get+0x1c>
 8011b56:	bf00      	nop
 8011b58:	20009be8 	andcs	r9, r0, r8, ror #23

08011b5c <enet_initpara_reset>:
 8011b5c:	2200      	movs	r2, #0
 8011b5e:	4b08      	ldr	r3, [pc, #32]	; (8011b80 <enet_initpara_reset+0x24>)
 8011b60:	e9c3 2200 	strd	r2, r2, [r3]
 8011b64:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8011b68:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8011b6c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8011b70:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8011b74:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8011b78:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8011b7c:	639a      	str	r2, [r3, #56]	; 0x38
 8011b7e:	4770      	bx	lr
 8011b80:	20009bf0 	strdcs	r9, [r0], -r0

08011b84 <enet_deinit>:
 8011b84:	b508      	push	{r3, lr}
 8011b86:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011b8a:	f7fe fcd8 	bl	801053e <rcu_periph_reset_enable>
 8011b8e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011b92:	f7fe fcd6 	bl	8010542 <rcu_periph_reset_disable>
 8011b96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b9a:	f7ff bfdf 	b.w	8011b5c <enet_initpara_reset>
	...

08011ba0 <i2c_clock_config>:
 8011ba0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011ba2:	4605      	mov	r5, r0
 8011ba4:	2002      	movs	r0, #2
 8011ba6:	460c      	mov	r4, r1
 8011ba8:	4617      	mov	r7, r2
 8011baa:	f7fe fd81 	bl	80106b0 <rcu_clock_freq_get>
 8011bae:	4927      	ldr	r1, [pc, #156]	; (8011c4c <i2c_clock_config+0xac>)
 8011bb0:	4a27      	ldr	r2, [pc, #156]	; (8011c50 <i2c_clock_config+0xb0>)
 8011bb2:	fbb0 f1f1 	udiv	r1, r0, r1
 8011bb6:	4290      	cmp	r0, r2
 8011bb8:	bf34      	ite	cc
 8011bba:	460b      	movcc	r3, r1
 8011bbc:	2336      	movcs	r3, #54	; 0x36
 8011bbe:	686e      	ldr	r6, [r5, #4]
 8011bc0:	4a24      	ldr	r2, [pc, #144]	; (8011c54 <i2c_clock_config+0xb4>)
 8011bc2:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8011bc6:	431e      	orrs	r6, r3
 8011bc8:	4294      	cmp	r4, r2
 8011bca:	606e      	str	r6, [r5, #4]
 8011bcc:	d816      	bhi.n	8011bfc <i2c_clock_config+0x5c>
 8011bce:	3101      	adds	r1, #1
 8011bd0:	2935      	cmp	r1, #53	; 0x35
 8011bd2:	d90d      	bls.n	8011bf0 <i2c_clock_config+0x50>
 8011bd4:	2336      	movs	r3, #54	; 0x36
 8011bd6:	622b      	str	r3, [r5, #32]
 8011bd8:	0064      	lsls	r4, r4, #1
 8011bda:	fbb0 f4f4 	udiv	r4, r0, r4
 8011bde:	2c04      	cmp	r4, #4
 8011be0:	bf38      	it	cc
 8011be2:	2404      	movcc	r4, #4
 8011be4:	69e8      	ldr	r0, [r5, #28]
 8011be6:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8011bea:	4304      	orrs	r4, r0
 8011bec:	61ec      	str	r4, [r5, #28]
 8011bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011bf0:	2902      	cmp	r1, #2
 8011bf2:	d801      	bhi.n	8011bf8 <i2c_clock_config+0x58>
 8011bf4:	2302      	movs	r3, #2
 8011bf6:	e7ee      	b.n	8011bd6 <i2c_clock_config+0x36>
 8011bf8:	6229      	str	r1, [r5, #32]
 8011bfa:	e7ed      	b.n	8011bd8 <i2c_clock_config+0x38>
 8011bfc:	4a16      	ldr	r2, [pc, #88]	; (8011c58 <i2c_clock_config+0xb8>)
 8011bfe:	4294      	cmp	r4, r2
 8011c00:	d8f5      	bhi.n	8011bee <i2c_clock_config+0x4e>
 8011c02:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8011c06:	4353      	muls	r3, r2
 8011c08:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011c0c:	fbb3 f3f2 	udiv	r3, r3, r2
 8011c10:	3301      	adds	r3, #1
 8011c12:	622b      	str	r3, [r5, #32]
 8011c14:	b997      	cbnz	r7, 8011c3c <i2c_clock_config+0x9c>
 8011c16:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011c1a:	fbb0 f4f4 	udiv	r4, r0, r4
 8011c1e:	69eb      	ldr	r3, [r5, #28]
 8011c20:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8011c24:	61eb      	str	r3, [r5, #28]
 8011c26:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8011c2a:	b90b      	cbnz	r3, 8011c30 <i2c_clock_config+0x90>
 8011c2c:	f044 0401 	orr.w	r4, r4, #1
 8011c30:	69eb      	ldr	r3, [r5, #28]
 8011c32:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8011c36:	61eb      	str	r3, [r5, #28]
 8011c38:	69e8      	ldr	r0, [r5, #28]
 8011c3a:	e7d6      	b.n	8011bea <i2c_clock_config+0x4a>
 8011c3c:	2119      	movs	r1, #25
 8011c3e:	434c      	muls	r4, r1
 8011c40:	69eb      	ldr	r3, [r5, #28]
 8011c42:	fbb0 f4f4 	udiv	r4, r0, r4
 8011c46:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8011c4a:	e7eb      	b.n	8011c24 <i2c_clock_config+0x84>
 8011c4c:	000f4240 	andeq	r4, pc, r0, asr #4
 8011c50:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8011c54:	000186a0 	andeq	r8, r1, r0, lsr #13
 8011c58:	00061a80 	andeq	r1, r6, r0, lsl #21

08011c5c <i2c_ack_config>:
 8011c5c:	6803      	ldr	r3, [r0, #0]
 8011c5e:	2901      	cmp	r1, #1
 8011c60:	bf0c      	ite	eq
 8011c62:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8011c66:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8011c6a:	6003      	str	r3, [r0, #0]
 8011c6c:	4770      	bx	lr

08011c6e <i2c_ackpos_config>:
 8011c6e:	6803      	ldr	r3, [r0, #0]
 8011c70:	b919      	cbnz	r1, 8011c7a <i2c_ackpos_config+0xc>
 8011c72:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8011c76:	6003      	str	r3, [r0, #0]
 8011c78:	4770      	bx	lr
 8011c7a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011c7e:	e7fa      	b.n	8011c76 <i2c_ackpos_config+0x8>

08011c80 <i2c_master_addressing>:
 8011c80:	3202      	adds	r2, #2
 8011c82:	bf0c      	ite	eq
 8011c84:	f021 0101 	biceq.w	r1, r1, #1
 8011c88:	f041 0101 	orrne.w	r1, r1, #1
 8011c8c:	6101      	str	r1, [r0, #16]
 8011c8e:	4770      	bx	lr

08011c90 <i2c_enable>:
 8011c90:	6803      	ldr	r3, [r0, #0]
 8011c92:	f043 0301 	orr.w	r3, r3, #1
 8011c96:	6003      	str	r3, [r0, #0]
 8011c98:	4770      	bx	lr

08011c9a <i2c_start_on_bus>:
 8011c9a:	6803      	ldr	r3, [r0, #0]
 8011c9c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011ca0:	6003      	str	r3, [r0, #0]
 8011ca2:	4770      	bx	lr

08011ca4 <i2c_stop_on_bus>:
 8011ca4:	6803      	ldr	r3, [r0, #0]
 8011ca6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8011caa:	6003      	str	r3, [r0, #0]
 8011cac:	4770      	bx	lr

08011cae <i2c_data_transmit>:
 8011cae:	6101      	str	r1, [r0, #16]
 8011cb0:	4770      	bx	lr

08011cb2 <i2c_data_receive>:
 8011cb2:	6900      	ldr	r0, [r0, #16]
 8011cb4:	b2c0      	uxtb	r0, r0
 8011cb6:	4770      	bx	lr

08011cb8 <i2c_flag_get>:
 8011cb8:	098b      	lsrs	r3, r1, #6
 8011cba:	5818      	ldr	r0, [r3, r0]
 8011cbc:	f001 011f 	and.w	r1, r1, #31
 8011cc0:	40c8      	lsrs	r0, r1
 8011cc2:	f000 0001 	and.w	r0, r0, #1
 8011cc6:	4770      	bx	lr

08011cc8 <i2c_flag_clear>:
 8011cc8:	f240 5301 	movw	r3, #1281	; 0x501
 8011ccc:	4299      	cmp	r1, r3
 8011cce:	b510      	push	{r4, lr}
 8011cd0:	d102      	bne.n	8011cd8 <i2c_flag_clear+0x10>
 8011cd2:	6943      	ldr	r3, [r0, #20]
 8011cd4:	6983      	ldr	r3, [r0, #24]
 8011cd6:	bd10      	pop	{r4, pc}
 8011cd8:	2201      	movs	r2, #1
 8011cda:	098c      	lsrs	r4, r1, #6
 8011cdc:	5823      	ldr	r3, [r4, r0]
 8011cde:	f001 011f 	and.w	r1, r1, #31
 8011ce2:	fa02 f101 	lsl.w	r1, r2, r1
 8011ce6:	ea23 0101 	bic.w	r1, r3, r1
 8011cea:	5021      	str	r1, [r4, r0]
 8011cec:	e7f3      	b.n	8011cd6 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08011cf0 <vtable for DisplayHandler-0xbc>:
	...
 8011cf8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011cfc:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8011d00:	00000000 	andeq	r0, r0, r0
 8011d04:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8011d08:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8011d0c:	34313a37 	ldrtcc	r3, [r1], #-2615	; 0xfffff5c9
 8011d10:	62654600 	rsbvs	r4, r5, #0, 12
 8011d14:	20333220 	eorscs	r3, r3, r0, lsr #4
 8011d18:	32323032 	eorscc	r3, r2, #50	; 0x32
 8011d1c:	43417300 	movtmi	r7, #4864	; 0x1300
 8011d20:	3145204e 	cmpcc	r5, lr, asr #32
 8011d24:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8011d28:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8011d2c:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8011d30:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8011d34:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8011b6c <enet_initpara_reset+0x10>
 8011d38:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8011d3c:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8011d40:	6e552034 	mrcvs	0, 2, r2, cr5, cr4, {1}
 8011d44:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8011d48:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	; 0xfffffe34
 8011d4c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8011d50:	5f2e006d 	svcpl	0x002e006d
 8011d54:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8011d58:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 8011d5c:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8011d60:	6f6e0070 	svcvs	0x006e0070
 8011d64:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 8011d68:	204e4341 	subcs	r4, lr, r1, asr #6
 8011d6c:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8011d70:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8011d74:	41730058 	cmnmi	r3, r8, asr r0
 8011d78:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011d7c:	31332e31 	teqcc	r3, r1, lsr lr
 8011d80:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8011d84:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8011d88:	21786d64 	cmncs	r8, r4, ror #26
 8011d8c:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
 8011d90:	00236b61 	eoreq	r6, r3, r1, ror #22
 8011d94:	2362616d 	cmncs	r2, #1073741851	; 0x4000001b
 8011d98:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
 8011d9c:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8011da0:	6c730023 	ldclvs	0, cr0, [r3], #-140	; 0xffffff74
 8011da4:	2373746f 	cmncs	r3, #1862270976	; 0x6f000000
 8011da8:	00000000 	andeq	r0, r0, r0

08011dac <vtable for DisplayHandler>:
	...
 8011db4:	08007e8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r9, sl, fp, ip, sp, lr}
 8011db8:	08007ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8011dbc:	08007f05 	stmdaeq	r0, {r0, r2, r8, r9, sl, fp, ip, sp, lr}

08011dc0 <vtable for E131Reboot>:
	...
 8011dc8:	08007e91 	stmdaeq	r0, {r0, r4, r7, r9, sl, fp, ip, sp, lr}
 8011dcc:	08007ed9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 8011dd0:	08007eb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, fp, ip, sp, lr}

08011dd4 <CSWTCH.87>:
 8011dd4:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011dd8:	 			; <UNDEFINED> instruction: 0x312e3146

08011dd9 <SOFTWARE_VERSION>:
 8011dd9:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8011ddd:	 	andeq	r0, r0, r0

08011de0 <vtable for DmxInput>:
	...
 8011de8:	080084cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, pc}
 8011dec:	0800855d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, pc}
 8011df0:	080084d1 	stmdaeq	r0, {r0, r4, r6, r7, sl, pc}
 8011df4:	080084fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, pc}
 8011df8:	08008529 	stmdaeq	r0, {r0, r3, r5, r8, sl, pc}
 8011dfc:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8011e00:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8011e04:	00302e30 	eorseq	r2, r0, r0, lsr lr
 8011e08:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8011e0c:	73252073 			; <UNDEFINED> instruction: 0x73252073
 8011e10:	33444700 	movtcc	r4, #18176	; 0x4700
 8011e14:	30314632 	eorscc	r4, r1, r2, lsr r6
 8011e18:	30005237 	andcc	r5, r0, r7, lsr r2
 8011e1c:	6f4e202e 	svcvs	0x004e202e
 8011e20:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8011e24:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8011e28:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8011e2c:	202c6465 	eorcs	r6, ip, r5, ror #8
 8011e30:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8011e34:	6f687320 	svcvs	0x00687320
 8011e38:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8011e3c:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8011e40:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8011e44:	000a216e 	andeq	r2, sl, lr, ror #2
 8011e48:	00505448 	subseq	r5, r0, r8, asr #8
 8011e4c:	0050544c 	subseq	r5, r0, ip, asr #8
 8011e50:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8011e54:	000a6567 	andeq	r6, sl, r7, ror #10
 8011e58:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8011e5c:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8011e60:	203a2065 	eorscs	r2, sl, r5, rrx
 8011e64:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011e68:	20000a64 	andcs	r0, r0, r4, ror #20
 8011e6c:	20444943 	subcs	r4, r4, r3, asr #18
 8011e70:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011e74:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8011e78:	20000a73 	andcs	r0, r0, r3, ror sl
 8011e7c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011e80:	000a7475 	andeq	r7, sl, r5, ror r4
 8011e84:	6f502020 	svcvs	0x00502020
 8011e88:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8011e8c:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8011e90:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8011e94:	20657372 	rsbcs	r7, r5, r2, ror r3
 8011e98:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8011e9c:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8011ea0:	20000a5d 	andcs	r0, r0, sp, asr sl
 8011ea4:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8011ea8:	20000a74 	andcs	r0, r0, r4, ror sl
 8011eac:	726f5020 	rsbvc	r5, pc, #32
 8011eb0:	32252074 	eorcc	r2, r5, #116	; 0x74
 8011eb4:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8011eb8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8011ebc:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8011ec0:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8011ec4:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8011ec8:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8011ecc:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8011ed0:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011ed4:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8011ed8:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8011edc:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8011ee0:	000a6465 	andeq	r6, sl, r5, ror #8

08011ee4 <E131MsgConst::START>:
 8011ee4:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8011ee8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011eec:	43417320 	movtmi	r7, #4896	; 0x1320
 8011ef0:	3145204e 	cmpcc	r5, lr, asr #32
 8011ef4:	0031332e 	eorseq	r3, r1, lr, lsr #6

08011ef8 <E131MsgConst::PARAMS>:
 8011ef8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011efc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8011f00:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8011f04:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011f08:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011f0c:	 	movwvc	r3, #307	; 0x133

08011f0f <E131MsgConst::STARTED>:
 8011f0f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8011f13:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8011f17:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8011f1b:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8011f1f:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8011f23:	3a227325 	bcc	88aebbf <__exidx_end+0x89b03f>
 8011f27:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011f2b:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8011f2f:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8011f33:	2522000a 	strcs	r0, [r2, #-10]!
 8011f37:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8011f3b:	23002c64 	movwcs	r2, #3172	; 0xc64
 8011f3f:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8011f43:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8011f47:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011f4b:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8011f4f:	00747570 	rsbseq	r7, r4, r0, ror r5
 8011f53:	00707468 	rsbseq	r7, r0, r8, ror #8
 8011f57:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8011f5b:	20584d44 	subscs	r4, r8, r4, asr #26
 8011f5f:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8011f63:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8011f67:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8011f6b:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8011f6f:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8011f73:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08011f76 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8011f76:	61736964 	cmnvs	r3, r4, ror #18
 8011f7a:	5f656c62 	svcpl	0x00656c62
 8011f7e:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8011f82:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011f86:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8011a21 <enet_init+0x2dd>
 8011f8a:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08011f8c <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8011f8c:	61736964 	cmnvs	r3, r4, ror #18
 8011f90:	5f656c62 	svcpl	0x00656c62
 8011f94:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011f98:	5f6b726f 	svcpl	0x006b726f
 8011f9c:	61746164 	cmnvs	r4, r4, ror #2
 8011fa0:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8011fa4:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011fa8:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8011a43 <enet_txfifo_flush+0x17>
 8011fac:	 	rsbsvc	r0, r0, #116	; 0x74

08011fae <E131ParamsConst::PRIORITY>:
 8011fae:	6f697270 	svcvs	0x00697270
 8011fb2:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011fb6:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011fba:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8011fbe:	72700000 	rsbsvc	r0, r0, #0
 8011fc2:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011fc6:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8011fca:	5f74726f 	svcpl	0x0074726f
 8011fce:	00000062 	andeq	r0, r0, r2, rrx
 8011fd2:	6f697270 	svcvs	0x00697270
 8011fd6:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8011fda:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011fde:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8011fe2:	72700000 	rsbsvc	r0, r0, #0
 8011fe6:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011fea:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8011fee:	5f74726f 	svcpl	0x0074726f
 8011ff2:	00000064 	andeq	r0, r0, r4, rrx

08011ff6 <E131ParamsConst::FILE_NAME>:
 8011ff6:	31333165 	teqcc	r3, r5, ror #2
 8011ffa:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08011fff <E117Const::ACN_PACKET_IDENTIFIER>:
 8011fff:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8012003:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8012007:	00000037 	andeq	r0, r0, r7, lsr r0

0801200b <E131BridgeConst::VERSION>:
 801200b:	30251801 	eorcc	r1, r5, r1, lsl #16
 801200f:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8012013:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 8012017:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 801201b:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 801201f:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 8012023:	30252d78 	eorcc	r2, r5, r8, ror sp
 8012027:	30257832 	eorcc	r7, r5, r2, lsr r8
 801202b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801202f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8012033:	30257832 	eorcc	r7, r5, r2, lsr r8
 8012037:	30257832 	eorcc	r7, r5, r2, lsr r8
 801203b:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 801203f:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 8012043:	0a646e65 	beq	992d9df <__exidx_end+0x1919e5f>
 8012047:	72422000 	subvc	r2, r2, #0
 801204b:	206b6165 	rsbcs	r6, fp, r5, ror #2
 801204f:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8012053:	3a202020 	bcc	881a0db <__exidx_end+0x80655b>
 8012057:	0a642520 	beq	991b4df <__exidx_end+0x190795f>
 801205b:	414d2000 	mrsmi	r2, (UNDEF: 77)
 801205f:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 8012063:	2020656d 	eorcs	r6, r0, sp, ror #10
 8012067:	3a202020 	bcc	881a0ef <__exidx_end+0x80656f>
 801206b:	0a642520 	beq	991b4f3 <__exidx_end+0x1907973>
 801206f:	65522000 	ldrbvs	r2, [r2, #-0]
 8012073:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8012077:	61722068 	cmnvs	r2, r8, rrx
 801207b:	3a206574 	bcc	882b653 <__exidx_end+0x817ad3>
 801207f:	0a642520 	beq	991b507 <__exidx_end+0x1907987>
 8012083:	6c532000 	mravs	r2, r3, acc0
 8012087:	2073746f 	rsbscs	r7, r3, pc, ror #8
 801208b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801208f:	3a202020 	bcc	881a117 <__exidx_end+0x806597>
 8012093:	0a642520 	beq	991b51b <__exidx_end+0x190799b>
	...

08012098 <vtable for DmxSend>:
	...
 80120a0:	0800993f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, fp, ip, pc}
 80120a4:	08009a0d 	stmdaeq	r0, {r0, r2, r3, r9, fp, ip, pc}
 80120a8:	08009941 	stmdaeq	r0, {r0, r6, r8, fp, ip, pc}
 80120ac:	08009971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, ip, pc}
 80120b0:	080099a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, ip, pc}
 80120b4:	0800993d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, fp, ip, pc}
 80120b8:	080099b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, pc}
 80120bc:	0800ee93 	stmdaeq	r0, {r0, r1, r4, r7, r9, sl, fp, sp, lr, pc}
 80120c0:	0800ee89 	stmdaeq	r0, {r0, r3, r7, r9, sl, fp, sp, lr, pc}
 80120c4:	0800ee8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, sp, lr, pc}
 80120c8:	0800ee97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r9, sl, fp, sp, lr, pc}

080120cc <DmxParamsConst::BREAK_TIME>:
 80120cc:	61657262 	cmnvs	r5, r2, ror #4
 80120d0:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80120d4:	 	movwvc	r6, #1389	; 0x56d

080120d7 <DmxParamsConst::SLOTS_COUNT>:
 80120d7:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80120df <DmxParamsConst::SLOTS_COUNT+0x8>
 80120db:	6f635f73 	svcvs	0x00635f73
 80120df:	00746e75 	rsbseq	r6, r4, r5, ror lr

080120e3 <DmxParamsConst::REFRESH_RATE>:
 80120e3:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80120e7:	5f687365 	svcpl	0x00687365
 80120eb:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080120f0 <DmxParamsConst::MAB_TIME>:
 80120f0:	5f62616d 	svcpl	0x0062616d
 80120f4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080120f9 <DmxParamsConst::FILE_NAME>:
 80120f9:	61726170 	cmnvs	r2, r0, ror r1
 80120fd:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8012101:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 8012105:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012109:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801210d:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8012111:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 8012115:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 8012119:	000a7325 	andeq	r7, sl, r5, lsr #6
 801211d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012121:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012125:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8012129:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 801212d:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8012131:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 8012135:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 8012139:	73696400 	cmnvc	r9, #0, 8
 801213d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012141:	0a73253a 	beq	9cdb631 <__exidx_end+0x1cc7ab1>
 8012145:	74667400 	strbtvc	r7, [r6], #-1024	; 0xfffffc00
 8012149:	73253a70 			; <UNDEFINED> instruction: 0x73253a70
 801214d:	6576000a 	ldrbvs	r0, [r6, #-10]!
 8012151:	6f697372 	svcvs	0x00697372
 8012155:	73253a6e 			; <UNDEFINED> instruction: 0x73253a6e
 8012159:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 801215d:	3a656d69 	bcc	996d709 <__exidx_end+0x1959b89>
 8012161:	73752520 	cmnvc	r5, #32, 10	; 0x8000000
 8012165:	5245000a 	subpl	r0, r5, #10
 8012169:	23524f52 	cmpcs	r2, #328	; 0x148
 801216d:	7465673f 	strbtvc	r6, [r5], #-1855	; 0xfffff8c1
 8012171:	6674000a 	ldrbtvs	r0, [r4], -sl
 8012175:	00237074 	eoreq	r7, r3, r4, ror r0
 8012179:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801217d:	2379616c 	cmncs	r9, #108, 2
 8012181:	52524500 	subspl	r4, r2, #0, 10
 8012185:	2123524f 			; <UNDEFINED> instruction: 0x2123524f
 8012189:	5245000a 	subpl	r0, r5, #10
 801218d:	23524f52 	cmpcs	r2, #328	; 0x148
 8012191:	72000a3f 	andvc	r0, r0, #258048	; 0x3f000
 8012195:	6f6f6265 	svcvs	0x006f6265
 8012199:	00232374 	eoreq	r2, r3, r4, ror r3
 801219d:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80121a1:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 80121a5:	2a237473 	bcs	88ef379 <__exidx_end+0x8db7f9>
 80121a9:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80121ad:	23656d69 	cmncs	r5, #6720	; 0x1a40
 80121b1:	72657600 	rsbvc	r7, r5, #0, 12
 80121b5:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80121b9:	65670023 	strbvs	r0, [r7, #-35]!	; 0xffffffdd
 80121bd:	66002374 			; <UNDEFINED> instruction: 0x66002374
 80121c1:	6f746361 	svcvs	0x00746361
 80121c5:	23237972 			; <UNDEFINED> instruction: 0x23237972
	...

080121ca <s_Node>:
 80121ca:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80121ce:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80121da:	41730000 	cmnmi	r3, r0
 80121de:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80121e2:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80121ee:	2043534f 	subcs	r5, r3, pc, asr #6
 80121f2:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80121f6:	00007265 	andeq	r7, r0, r5, ror #4
 80121fa:	00000000 	andeq	r0, r0, r0
 80121fe:	544c0000 	strbpl	r0, [ip], #-0
 8012202:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8012212:	2043534f 	subcs	r5, r3, pc, asr #6
 8012216:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 801221a:	0000746e 	andeq	r7, r0, lr, ror #8
 801221e:	00000000 	andeq	r0, r0, r0
 8012222:	44520000 	ldrbmi	r0, [r2], #-0
 8012226:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 801222a:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801222e:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8012232:	0000796c 	andeq	r7, r0, ip, ror #18
 8012236:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 801223a:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8012246:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 801224a:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801225a:	00504444 	subseq	r4, r0, r4, asr #8
	...

0801226c <s_Output>:
 801226c:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8012278:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8012284:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8012288:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801228c:	00000000 	andeq	r0, r0, r0
 8012290:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8012294:	0000006c 	andeq	r0, r0, ip, rrx
 8012298:	00000000 	andeq	r0, r0, r0
 801229c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80122a0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80122a4:	00000000 	andeq	r0, r0, r0
 80122a8:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80122b4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80122b8:	00006769 	andeq	r6, r0, r9, ror #14
 80122bc:	00000000 	andeq	r0, r0, r0
 80122c0:	70657453 	rsbvc	r7, r5, r3, asr r4
 80122c4:	00726570 	rsbseq	r6, r2, r0, ror r5
 80122c8:	00000000 	andeq	r0, r0, r0
 80122cc:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80122d0:	00007265 	andeq	r7, r0, r5, ror #4
 80122d4:	00000000 	andeq	r0, r0, r0
 80122d8:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80122dc:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80122e0:	00000000 	andeq	r0, r0, r0
 80122e4:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80122e8:	00006c61 	andeq	r6, r0, r1, ror #24
 80122ec:	00000000 	andeq	r0, r0, r0
 80122f0:	20424752 	subcs	r4, r2, r2, asr r7
 80122f4:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80122f8:	0000006c 	andeq	r0, r0, ip, rrx

080122fc <RemoteConfig::s_GET>:
 80122fc:	0800b0bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, ip, sp, pc}
 8012300:	00000000 	andeq	r0, r0, r0
 8012304:	08012194 	stmdaeq	r1, {r2, r4, r7, r8, sp}
 8012308:	00000008 	andeq	r0, r0, r8
 801230c:	0800a575 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, sp, pc}
 8012310:	00000000 	andeq	r0, r0, r0
 8012314:	0801219d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sp}
 8012318:	00000005 	andeq	r0, r0, r5
 801231c:	0800a575 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, sp, pc}
 8012320:	00000000 	andeq	r0, r0, r0
 8012324:	080121a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sp}
 8012328:	00000006 	andeq	r0, r0, r6
 801232c:	0800a779 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 8012330:	00000000 	andeq	r0, r0, r0
 8012334:	080121aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, sp}
 8012338:	00000007 	andeq	r0, r0, r7
 801233c:	0800a735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, sp, pc}
 8012340:	00000000 	andeq	r0, r0, r0
 8012344:	080121b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, sp}
 8012348:	00000008 	andeq	r0, r0, r8
 801234c:	0800a65d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, sp, pc}
 8012350:	00000000 	andeq	r0, r0, r0
 8012354:	08012179 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sp}
 8012358:	00000008 	andeq	r0, r0, r8
 801235c:	0800a9f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, sp, pc}
 8012360:	00000000 	andeq	r0, r0, r0
 8012364:	080121bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp}
 8012368:	00010004 	andeq	r0, r1, r4
 801236c:	0800a6dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, sp, pc}
 8012370:	00000000 	andeq	r0, r0, r0
 8012374:	08012173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sp}
 8012378:	00000005 	andeq	r0, r0, r5
 801237c:	0800ada5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, sp, pc}
 8012380:	00000000 	andeq	r0, r0, r0
 8012384:	080121c0 	stmdaeq	r1, {r6, r7, r8, sp}
 8012388:	00000009 	andeq	r0, r0, r9

0801238c <RemoteConfig::s_SET>:
 801238c:	0800a6b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, sl, sp, pc}
 8012390:	00000000 	andeq	r0, r0, r0
 8012394:	08012173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sp}
 8012398:	00010005 	andeq	r0, r1, r5
 801239c:	0800a7cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, sp, pc}
 80123a0:	00000000 	andeq	r0, r0, r0
 80123a4:	08012179 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sp}
 80123a8:	00010008 	andeq	r0, r1, r8
 80123ac:	6f626552 	svcvs	0x00626552
 80123b0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80123b4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80123b8:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80123bc:	6f6f6265 	svcvs	0x006f6265
 80123c0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80123c4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80123c8:	6f637200 	svcvs	0x00637200
 80123cc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80123d0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80123d4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80123d8:	6b726f77 	blvs	9cae1bc <__exidx_end+0x1c9a63c>
 80123dc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80123e0:	73696400 	cmnvc	r9, #0, 8
 80123e4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80123e8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80123ec:	33316500 	teqcc	r1, #0, 10
 80123f0:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80123f4:	61700074 	cmnvs	r0, r4, ror r0
 80123f8:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80123fc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012400:	00000000 	andeq	r0, r0, r0

08012404 <RemoteConfig::s_TXT>:
 8012404:	0800aa01 	stmdaeq	r0, {r0, r9, fp, sp, pc}
 8012408:	00000000 	andeq	r0, r0, r0
 801240c:	0800acc9 	stmdaeq	r0, {r0, r3, r6, r7, sl, fp, sp, pc}
 8012410:	00000000 	andeq	r0, r0, r0
 8012414:	080123c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sp}
 8012418:	0000000b 	andeq	r0, r0, fp
 801241c:	0000000c 	andeq	r0, r0, ip
 8012420:	0800aa2d 	stmdaeq	r0, {r0, r2, r3, r5, r9, fp, sp, pc}
 8012424:	00000000 	andeq	r0, r0, r0
 8012428:	0800acfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 801242c:	00000000 	andeq	r0, r0, r0
 8012430:	080123d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sp}
 8012434:	0000000b 	andeq	r0, r0, fp
 8012438:	00000000 	andeq	r0, r0, r0
 801243c:	0800aab1 	stmdaeq	r0, {r0, r4, r5, r7, r9, fp, sp, pc}
 8012440:	00000000 	andeq	r0, r0, r0
 8012444:	0800ad79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, sp, pc}
 8012448:	00000000 	andeq	r0, r0, r0
 801244c:	080123e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sp}
 8012450:	0000000b 	andeq	r0, r0, fp
 8012454:	0000000f 	andeq	r0, r0, pc
 8012458:	0800aa59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp, sp, pc}
 801245c:	00000000 	andeq	r0, r0, r0
 8012460:	0800ad25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, sp, pc}
 8012464:	00000000 	andeq	r0, r0, r0
 8012468:	080123ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sp}
 801246c:	00000008 	andeq	r0, r0, r8
 8012470:	00000004 	andeq	r0, r0, r4
 8012474:	0800aa85 	stmdaeq	r0, {r0, r2, r7, r9, fp, sp, pc}
 8012478:	00000000 	andeq	r0, r0, r0
 801247c:	0800ad51 	stmdaeq	r0, {r0, r4, r6, r8, sl, fp, sp, pc}
 8012480:	00000000 	andeq	r0, r0, r0
 8012484:	080123f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sp}
 8012488:	0000000a 	andeq	r0, r0, sl
 801248c:	00000002 	andeq	r0, r0, r2
 8012490:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8012494:	4f500054 	svcmi	0x00500054
 8012498:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 801249c:	00505454 	subseq	r5, r0, r4, asr r4
 80124a0:	31000a20 	tstcc	r0, r0, lsr #20
 80124a4:	3a00312e 	bcc	801e964 <__exidx_end+0xade4>
 80124a8:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 80124ac:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 80124b0:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 80124b4:	3b200065 	blcc	8812650 <__exidx_end+0x7fead0>
 80124b8:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 80124bc:	6163696c 	cmnvs	r3, ip, ror #18
 80124c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80124c4:	6f736a2f 	svcvs	0x00736a2f
 80124c8:	6f43006e 	svcvs	0x0043006e
 80124cc:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80124d0:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80124d4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80124d8:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80124dc:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80124e0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80124e4:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 80124e8:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80124ec:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 80124f0:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80124f4:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80124f8:	2f00736a 	svccs	0x0000736a
 80124fc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012500:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8012504:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8012508:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801250c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8012510:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8012514:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8012518:	616c7073 	smcvs	50947	; 0xc703
 801251c:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8012520:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012524:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8012528:	6f736a2f 	svcvs	0x00736a2f
 801252c:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8012530:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012534:	62657200 	rsbvs	r7, r5, #0, 4
 8012538:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 801253c:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8012540:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8012544:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8012548:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 801254c:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8012550:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012554:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8012558:	0a3e6c6d 	beq	8fad714 <__exidx_end+0xf99b94>
 801255c:	6165683c 	cmnvs	r5, ip, lsr r8
 8012560:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8012564:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8012568:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 801256c:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8012570:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8012574:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8012578:	6165682f 	cmnvs	r5, pc, lsr #16
 801257c:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8012580:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012584:	31683c3e 	cmncc	r8, lr, lsr ip
 8012588:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 801258c:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8012590:	6f622f3c 	svcvs	0x00622f3c
 8012594:	0a3e7964 	beq	8fb0b2c <__exidx_end+0xf9cfac>
 8012598:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 801259c:	0a3e6c6d 	beq	8fad758 <__exidx_end+0xf99bd8>
 80125a0:	71655200 	cmnvc	r5, r0, lsl #4
 80125a4:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80125a8:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80125ac:	20797469 	rsbscs	r7, r9, r9, ror #8
 80125b0:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80125b4:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80125b8:	6f4e0065 	svcvs	0x004e0065
 80125bc:	6f462074 	svcvs	0x00462074
 80125c0:	00646e75 	rsbeq	r6, r4, r5, ror lr
 80125c4:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 80125c8:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 80125cc:	20495255 	subcs	r5, r9, r5, asr r2
 80125d0:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80125d4:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80125d8:	72655600 	rsbvc	r5, r5, #0, 12
 80125dc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80125e0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 80125e8 <RemoteConfig::s_TXT+0x1e4>
 80125e4:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 80125e8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80125ec:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 80125f0:	6f687465 	svcvs	0x00687465
 80125f4:	6f4e2064 	svcvs	0x004e2064
 80125f8:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 80125fc:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8012600:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012604:	61420064 	cmpvs	r2, r4, rrx
 8012608:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 801260c:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8012610:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 8012614:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8012618:	7245206e 	subvc	r2, r5, #110	; 0x6e
 801261c:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8012620:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 8012624:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8012628:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 801262c:	20726576 	rsbscs	r6, r2, r6, ror r5
 8012630:	6f727245 	svcvs	0x00727245
 8012634:	4b4f0072 	blmi	93d2804 <__exidx_end+0x13bec84>
 8012638:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 801263c:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8012640:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8012644:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012648:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 801264c:	0a3e6c6d 	beq	8fad808 <__exidx_end+0xf99c88>
 8012650:	6165683c 	cmnvs	r5, ip, lsr r8
 8012654:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8012658:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 801265c:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8012660:	2f3c7325 	svccs	0x003c7325
 8012664:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8012668:	2f3c3e65 	svccs	0x003c3e65
 801266c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8012670:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8012674:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8012678:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801267c:	2f3c7325 	svccs	0x003c7325
 8012680:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8012684:	646f622f 	strbtvs	r6, [pc], #-559	; 801268c <RemoteConfig::s_TXT+0x288>
 8012688:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 801268c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8012690:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8012694:	50545448 	subspl	r5, r4, r8, asr #8
 8012698:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 801269c:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80126a0:	0a0d7325 	beq	836f33c <__exidx_end+0x35b7bc>
 80126a4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80126a8:	203a7265 	eorscs	r7, sl, r5, ror #4
 80126ac:	0a0d7325 	beq	836f348 <__exidx_end+0x35b7c8>
 80126b0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80126b4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80126b8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80126bc:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80126c0:	6f430a0d 	svcvs	0x00430a0d
 80126c4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80126c8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80126cc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80126d0:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80126d4:	6f430a0d 	svcvs	0x00430a0d
 80126d8:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80126dc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80126e0:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 80126e4:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 80126e8:	000a0d0a 	andeq	r0, sl, sl, lsl #26

080126ec <contentType>:
 80126ec:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80126f0:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80126f4:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801270c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012710:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 801272c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8012730:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8012734:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8012738:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 801274c:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8012750:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8012754:	2f6e6f69 	svccs	0x006e6f69
 8012758:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

0801276c <RemoteConfigConst::PARAMS_DISABLE>:
 801276c:	61736964 	cmnvs	r3, r4, ror #18
 8012770:	00656c62 	rsbeq	r6, r5, r2, ror #24

08012774 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8012774:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8012778:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801277c:	00747874 	rsbseq	r7, r4, r4, ror r8

08012780 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8012780:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012784:	5f79616c 	svcpl	0x0079616c
 8012788:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801278d <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801278d:	61736964 	cmnvs	r3, r4, ror #18
 8012791:	5f656c62 	svcpl	0x00656c62
 8012795:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8012799:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801279b <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801279b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801279f:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80127a3:	6f6f6265 	svcvs	0x006f6265
 80127a7:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080127a9 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80127a9:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80127ad:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8012249 <s_Node+0x7f>
 80127b1:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80127b5:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080127b7 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80127b7:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80127bb:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80127bf:	6f746361 	svcvs	0x00746361
 80127c3:	7b007972 	blvc	8030d93 <__exidx_end+0x1d213>
 80127c7:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80127cb:	7b3a2274 	blvc	8e9b1a3 <__exidx_end+0xe87623>
 80127cf:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80127d3:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80127d7:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80127db:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80127df:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80127e3:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80127e7:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80127eb:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80127ef:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80127f3:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80127f7:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80127fb:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80127ff:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012803:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8012807:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801280b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801280f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8012813:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8012817:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801281b:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801281f:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8012823:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8012827:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801282b:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801282f:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8012833:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8012837:	616f6222 	cmnvs	pc, r2, lsr #4
 801283b:	3a226472 	bcc	88aba0b <__exidx_end+0x897e8b>
 801283f:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8012843:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8012847:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 801284b:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801284f:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8012853:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8012857:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801285b:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801285f:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8012863:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8012867:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801286b:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801286f:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8012873:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8012877:	7b000a7d 	blvc	8015273 <__exidx_end+0x16f3>
 801287b:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801287f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012883:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8012887:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801288b:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801288f:	7b3a2273 	blvc	8e9b263 <__exidx_end+0xe876e3>
 8012893:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8012897:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 801289b:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 801289f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80128a3:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80128a7:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80128ab:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80128af:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80128b3:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80128b7:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 80128bb:	72542058 	subsvc	r2, r4, #88	; 0x58
 80128bf:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80128c3:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 80128c7:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80128cb:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80128cf:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80128d3:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80128d7:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80128db:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 80128df:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 80128e3:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 80128e7:	6b726f77 	blvs	9cae6cb <__exidx_end+0x1c9ab4b>
 80128eb:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80128ef:	4e223a22 	vmulmi.f32	s6, s4, s5
 80128f3:	6f777465 	svcvs	0x00777465
 80128f7:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 80128fb:	6f637222 	svcvs	0x00637222
 80128ff:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012903:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8012907:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 801290b:	746f6d65 	strbtvc	r6, [pc], #-3429	; 8012913 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 801290f:	6f632065 	svcvs	0x00632065
 8012913:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8012917:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 801291b:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801291f:	73007d7d 	movwvc	r7, #3453	; 0xd7d
 8012923:	682f6372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
 8012927:	64707474 	ldrbtvs	r7, [r0], #-1140	; 0xfffffb8c
 801292b:	7465672f 	strbtvc	r6, [r5], #-1839	; 0xfffff8d1
 801292f:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8012933:	6f635f65 	svcvs	0x00635f65
 8012937:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801293b:	70632e74 	rsbvc	r2, r3, r4, ror lr
 801293f:	65670070 	strbvs	r0, [r7, #-112]!	; 0xffffff90
 8012943:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8012947:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 801294b:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801294f:	2500746e 	strcs	r7, [r0, #-1134]	; 0xfffffb92
 8012953:	20292873 	eorcs	r2, r9, r3, ror r8
 8012957:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801295b:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 801295f:	3a692520 	bcc	9a5bde7 <__exidx_end+0x1a48267>
 8012963:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8012967:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 801296b:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 801296f:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 8012973:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 8012977:	0a64253a 	beq	991be67 <__exidx_end+0x19082e7>
	...

0801297c <index_html>:
 801297c:	4f44213c 	svcmi	0x0044213c
 8012980:	50595443 	subspl	r5, r9, r3, asr #8
 8012984:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8012988:	0a3e6c6d 	beq	8fadb44 <__exidx_end+0xf99fc4>
 801298c:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8012990:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8012994:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8012998:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801299c:	6b6e696c 	blvs	9bacf54 <__exidx_end+0x1b993d4>
 80129a0:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80129a4:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80129a8:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80129ac:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80129b0:	72682022 	rsbvc	r2, r8, #34	; 0x22
 80129b4:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80129b8:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80129bc:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80129c0:	20227373 	eorcs	r7, r2, r3, ror r3
 80129c4:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80129c8:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80129cc:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80129d0:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80129d4:	0a3e656c 	beq	8fabf8c <__exidx_end+0xf9840c>
 80129d8:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80129dc:	0a3e6461 	beq	8fabb68 <__exidx_end+0xf97fe8>
 80129e0:	646f623c 	strbtvs	r6, [pc], #-572	; 80129e8 <index_html+0x6c>
 80129e4:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80129e8:	6165683c 	cmnvs	r5, ip, lsr r8
 80129ec:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80129f0:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80129f4:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80129f8:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80129fc:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8012a00:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012a04:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012a08:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8012a0c:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8012a10:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8012a14:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8012a18:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8012a1c:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8012a20:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012a24:	6f746365 	svcvs	0x00746365
 8012a28:	20227972 	eorcs	r7, r2, r2, ror r9
 8012a2c:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8012a30:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8012a34:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8012a38:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8012a3c:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8012a40:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8012a44:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8012a48:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8012a4c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8012a50:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8012a54:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8012a58:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8012a5c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8012a60:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012a64:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8012a68:	20227478 	eorcs	r7, r2, r8, ror r4
 8012a6c:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012a70:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8012a74:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8012a78:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8012a7c:	0a3e656c 	beq	8fac034 <__exidx_end+0xf984b4>
 8012a80:	6f663c09 	svcvs	0x00663c09
 8012a84:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8012a88:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8012a8c:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8012a90:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8012a94:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012a98:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8012a9c:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8012aa0:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8012aa4:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012aa8:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8012aac:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8012ab0:	20747069 	rsbscs	r7, r4, r9, rrx
 8012ab4:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8012ab8:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8012abc:	6a2e7865 	bvs	8bb0c58 <__exidx_end+0xb9d0d8>
 8012ac0:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8012ac4:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8012ac8:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8012acc:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8012ad0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8012ad4:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8012ad8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8012adc:	 	svcvs	0x0062000a

08012ade <styles_css>:
 8012ade:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012ae2:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012ae6:	63616220 	cmnvs	r1, #32, 4
 8012aea:	6f72676b 	svcvs	0x0072676b
 8012aee:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8012af2:	6f6c6f63 	svcvs	0x006c6f63
 8012af6:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012afa:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012afe:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8012b02:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8012b06:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012b0a:	6f6c6f63 	svcvs	0x006c6f63
 8012b0e:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8012b12:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8012b16:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8012b1a:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8012b1e:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8012b22:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012b26:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8012b2a:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012b2e:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012b32:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012b36:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012b3a:	0a3b7865 	beq	8ef0cd6 <__exidx_end+0xedd156>
 8012b3e:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8012b42:	0a7b2069 	beq	9edacee <__exidx_end+0x1ec716e>
 8012b46:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8012b4a:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8012b4e:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8012b52:	6f6e203a 	svcvs	0x006e203a
 8012b56:	0a3b656e 	beq	8eec116 <__exidx_end+0xed8596>
 8012b5a:	616d2020 	cmnvs	sp, r0, lsr #32
 8012b5e:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8012b62:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8012b66:	70352078 	eorsvc	r2, r5, r8, ror r0
 8012b6a:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8012b6e:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8012b72:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012b76:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8012b7a:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8012b7e:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8012b82:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8012b86:	0a3b7865 	beq	8ef0d22 <__exidx_end+0xedd1a2>
 8012b8a:	6f622020 	svcvs	0x00622020
 8012b8e:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012b92:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012b96:	3a737569 	bcc	9cf0142 <__exidx_end+0x1cdc5c2>
 8012b9a:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012b9e:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012ba2:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012ba6:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012baa:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012bae:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012bb2:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012bb6:	0a3b7870 	beq	8ef0d7e <__exidx_end+0xedd1fe>
 8012bba:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8012bbe:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8012bc2:	0a7b2072 	beq	9edad92 <__exidx_end+0x1ec7212>
 8012bc6:	69642020 	stmdbvs	r4!, {r5, sp}^
 8012bca:	616c7073 	smcvs	50947	; 0xc703
 8012bce:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8012bd2:	3b78656c 	blcc	9e2c18a <__exidx_end+0x1e1860a>
 8012bd6:	6a20200a 	bvs	881ac06 <__exidx_end+0x807086>
 8012bda:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8012bde:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8012be2:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8012be6:	203a746e 	eorscs	r7, sl, lr, ror #8
 8012bea:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8012bee:	0a3b7265 	beq	8eef58a <__exidx_end+0xedba0a>
 8012bf2:	6f622020 	svcvs	0x00622020
 8012bf6:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8012bfa:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8012bfe:	3a737569 	bcc	9cf01aa <__exidx_end+0x1cdc62a>
 8012c02:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8012c06:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8012c0a:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8012c0e:	203a7265 	eorscs	r7, sl, r5, ror #4
 8012c12:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012c16:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8012c1a:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8012c1e:	0a3b7870 	beq	8ef0de6 <__exidx_end+0xedd266>
 8012c22:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08012c28 <HttpContent>:
 8012c28:	080124e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, sl, sp}
 8012c2c:	08012ade 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, fp, sp}
 8012c30:	080124f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp}
 8012c34:	08012c40 	stmdaeq	r1, {r6, sl, fp, sp}
 8012c38:	080124da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, sp}
 8012c3c:	0801297c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, sp}

08012c40 <index_js>:
 8012c40:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012c44:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012c48:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012c4c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8012c50:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012c54:	6a284e4f 	bvs	8a26598 <__exidx_end+0xa12a18>
 8012c58:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012c5c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012c60:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012c64:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8012c68:	6a2f273d 	bvs	8bdc964 <__exidx_end+0xbc8de4>
 8012c6c:	2f6e6f73 	svccs	0x006e6f73
 8012c70:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8012c74:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8012c78:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012c7c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8012c80:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012c84:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8012c88:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8012c8c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8012c90:	20746961 	rsbscs	r6, r4, r1, ror #18
 8012c94:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8012c98:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8012c9c:	0a3b296c 	beq	8edd254 <__exidx_end+0xec96d4>
 8012ca0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012ca4:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8012ca8:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8012cac:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8012cb0:	73657220 	cmnvc	r5, #32, 4
 8012cb4:	6f736a2e 	svcvs	0x00736a2e
 8012cb8:	3b29286e 	blcc	8a5ce78 <__exidx_end+0xa492f8>
 8012cbc:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012cc0:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8012cc4:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8012cc8:	6f727265 	svcvs	0x00727265
 8012ccc:	7b202972 	blvc	881d29c <__exidx_end+0x80971c>
 8012cd0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012cd4:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8012cd8:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8012cdc:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8012ce0:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8012ce4:	3b29726f 	blcc	8a6f6a8 <__exidx_end+0xa5bb28>
 8012ce8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8012cec:	0a0a7d0a 	beq	82b211c <__exidx_end+0x29e59c>
 8012cf0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8012cf4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8012cf8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012cfc:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8012d00:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8012d04:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012d08:	20292874 	eorcs	r2, r9, r4, ror r8
 8012d0c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8012d10:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012d14:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d18:	6177613d 	cmnvs	r7, sp, lsr r1
 8012d1c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012d20:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012d24:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012d28:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d2c:	0a3b2927 	beq	8edd1d0 <__exidx_end+0xec9650>
 8012d30:	6f640909 	svcvs	0x00640909
 8012d34:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012d38:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012d3c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012d40:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012d44:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012d48:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012d4c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8012d50:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012d54:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012d58:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8012d5c:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8012d60:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012d64:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8012d68:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8012d6c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8012d70:	2b656d61 	blcs	996e2fc <__exidx_end+0x195a77c>
 8012d74:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012cf4 <index_js+0xb4>
 8012d78:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012d7c:	2b223e69 	blcs	88a2728 <__exidx_end+0x88eba8>
 8012d80:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012d84:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012d88:	6f6e2e74 	svcvs	0x006e2e74
 8012d8c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8012d90:	2b657079 	blcs	996ef7c <__exidx_end+0x195b3fc>
 8012d94:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012d14 <index_js+0xd4>
 8012d98:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012d9c:	2b223e69 	blcs	88a2748 <__exidx_end+0x88ebc8>
 8012da0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8012da4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8012da8:	6f6e2e74 	svcvs	0x006e2e74
 8012dac:	702e6564 	eorvc	r6, lr, r4, ror #10
 8012db0:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8012db4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8012db8:	2f3c222b 	svccs	0x003c222b
 8012dbc:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8012dc0:	0a7d0a3b 	beq	9f556b4 <__exidx_end+0x1f41b34>
 8012dc4:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8012dc8:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8012dcc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012dd0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8012dd4:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8012dd8:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012ddc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8012de0:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8012de4:	0a7b2029 	beq	9edae90 <__exidx_end+0x1ec7310>
 8012de8:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012dec:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8012df0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012df4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012df8:	6177613d 	cmnvs	r7, sp, lsr r1
 8012dfc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012e00:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012e04:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012e08:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012e0c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012e10:	3b292779 	blcc	8a5cbfc <__exidx_end+0xa4907c>
 8012e14:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012e18:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8012e1c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012e20:	0a22223d 	beq	889b71c <__exidx_end+0x887b9c>
 8012e24:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8012e28:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8012e2c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8012e30:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8012e34:	6a624f3d 	bvs	98a6b30 <__exidx_end+0x1892fb0>
 8012e38:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8012e3c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8012e40:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8012e44:	6f746365 	svcvs	0x00746365
 8012e48:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8012e4c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012e50:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8012e54:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8012e58:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8012e5c:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8012e60:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8012e64:	6145726f 	cmpvs	r5, pc, ror #4
 8012e68:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8012e6c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8012e70:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012e74:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8012e78:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012e7c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012e80:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012e84:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012e88:	203d2065 	eorscs	r2, sp, r5, rrx
 8012e8c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012e90:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012e94:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012e98:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8012e9c:	6b5b5d22 	blvs	96ea32c <__exidx_end+0x16d67ac>
 8012ea0:	3b5d7965 	blcc	977143c <__exidx_end+0x175d8bc>
 8012ea4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012ea8:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8012eac:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012eb0:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012eb4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012eb8:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8012ebc:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012ec0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012ec4:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012ec8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012ecc:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012ed0:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012ed4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012ed8:	0a3b223e 	beq	8edb7d8 <__exidx_end+0xec7c58>
 8012edc:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012ee0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012ee4:	6f640909 	svcvs	0x00640909
 8012ee8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8012eec:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012ef0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012ef4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012ef8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8012efc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012f00:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012f04:	6f746365 	svcvs	0x00746365
 8012f08:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8012f0c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012f10:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012f14:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012f18:	3b6c6d74 	blcc	9b2e4f0 <__exidx_end+0x1b1a970>
 8012f1c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012f20:	5f746567 	svcpl	0x00746567
 8012f24:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012f28:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8012f2c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8012f30:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8012f34:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8012f38:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8012f3c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8012f40:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012f44:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012f48:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8012f4c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8012f50:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012f54:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8012f58:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8012f5c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8012f60:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8012f64:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012f68:	6177613d 	cmnvs	r7, sp, lsr r1
 8012f6c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8012f70:	534a7465 	movtpl	r7, #42085	; 0xa465
 8012f74:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8012f78:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012f7c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012f80:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012f84:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012f88:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8012f8c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012f90:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012f94:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012f98:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8012f9c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012fa0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012fa4:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012fa8:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8012fac:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012fb0:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012fb4:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012fb8:	2b22563e 	blcs	88a88b8 <__exidx_end+0x894d38>
 8012fbc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012fc0:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012fc4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012fc8:	2b6e6f69 	blcs	9baed74 <__exidx_end+0x1b9b1f4>
 8012fcc:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012f4c <index_js+0x30c>
 8012fd0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012fd4:	2b223e69 	blcs	88a2980 <__exidx_end+0x88ee00>
 8012fd8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012fdc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012fe0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012fe4:	61642e64 	cmnvs	r4, r4, ror #28
 8012fe8:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8012fec:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012ff0:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012ff4:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012ff8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8012ffc:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8013000:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8013004:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8013008:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801300c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8013010:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8013014:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8013018:	6f697372 	svcvs	0x00697372
 801301c:	6f622e6e 	svcvs	0x00622e6e
 8013020:	2b647261 	blcs	992f9ac <__exidx_end+0x191be2c>
 8013024:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012fa4 <index_js+0x364>
 8013028:	3b223e69 	blcc	88a29d4 <__exidx_end+0x88ee54>
 801302c:	0a0a7d0a 	beq	82b245c <__exidx_end+0x29e8dc>
 8013030:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8013034:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8013038:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801303c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8013040:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8013048 <index_js+0x408>
 8013044:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8013048:	20296c65 	eorcs	r6, r9, r5, ror #24
 801304c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8013050:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8013054:	613d7478 	teqvs	sp, r8, ror r4
 8013058:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801305c:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8013060:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8013064:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8013068:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801306c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8013070:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013074:	3b22223d 	blcc	889b970 <__exidx_end+0x887df0>
 8013078:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 801307c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8013080:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8013084:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8013088:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801308c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8013090:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8013094:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8013098:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801309c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80130a0:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80130a4:	0a7b2029 	beq	9edb150 <__exidx_end+0x1ec75d0>
 80130a8:	61760909 	cmnvs	r6, r9, lsl #18
 80130ac:	61762072 	cmnvs	r6, r2, ror r0
 80130b0:	2065756c 	rsbcs	r7, r5, ip, ror #10
 80130b4:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80130b8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80130bc:	6b5b5d6c 	blvs	96ea674 <__exidx_end+0x16d6af4>
 80130c0:	3b5d7965 	blcc	977165c <__exidx_end+0x175dadc>
 80130c4:	2009090a 	andcs	r0, r9, sl, lsl #18
 80130c8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80130cc:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 80130d0:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 80130d4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80130d8:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80130dc:	2f3c222b 	svccs	0x003c222b
 80130e0:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80130e4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80130e8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80130ec:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80130f0:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80130f4:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80130fc <index_js+0x4bc>
 80130f8:	3b223e72 	blcc	88a2ac8 <__exidx_end+0x88ef48>
 80130fc:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8013100:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8013104:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8013108:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801310c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8013110:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8013114:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8013118:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801311c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8013120:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8013124:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8013128:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801312c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8013130:	0a3b6c6d 	beq	8eee2ec <__exidx_end+0xeda76c>
 8013134:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8013138:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801313c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8013140:	3b292874 	blcc	8a5d318 <__exidx_end+0xa49798>
 8013144:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8013148:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 801314c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8013150:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013154:	0a3b2928 	beq	8edd5fc <__exidx_end+0xec9a7c>
 8013158:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801315c:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8013160:	6f697372 	svcvs	0x00697372
 8013164:	3b29286e 	blcc	8a5d324 <__exidx_end+0xa497a4>
 8013168:	0000000a 	andeq	r0, r0, sl

0801316c <s_aStorSize>:
 801316c:	00000060 	andeq	r0, r0, r0, rrx
 8013170:	00000090 	muleq	r0, r0, r0
 8013174:	00000020 	andeq	r0, r0, r0, lsr #32
 8013178:	00000040 	andeq	r0, r0, r0, asr #32
 801317c:	00000060 	andeq	r0, r0, r0, rrx
 8013180:	00000040 	andeq	r0, r0, r0, asr #32
 8013184:	00000020 	andeq	r0, r0, r0, lsr #32
 8013188:	00000020 	andeq	r0, r0, r0, lsr #32
 801318c:	000001e0 	andeq	r0, r0, r0, ror #3
 8013190:	00000040 	andeq	r0, r0, r0, asr #32
 8013194:	00000020 	andeq	r0, r0, r0, lsr #32
 8013198:	00000060 	andeq	r0, r0, r0, rrx
 801319c:	00000030 	andeq	r0, r0, r0, lsr r0
 80131a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131a4:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80131a8:	00000030 	andeq	r0, r0, r0, lsr r0
 80131ac:	00000040 	andeq	r0, r0, r0, asr #32
 80131b0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131b4:	00000060 	andeq	r0, r0, r0, rrx
 80131b8:	00000020 	andeq	r0, r0, r0, lsr #32
 80131bc:	00000400 	andeq	r0, r0, r0, lsl #8
 80131c0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131c4:	00000020 	andeq	r0, r0, r0, lsr #32
 80131c8:	00000040 	andeq	r0, r0, r0, asr #32
 80131cc:	00000060 	andeq	r0, r0, r0, rrx
 80131d0:	00000020 	andeq	r0, r0, r0, lsr #32
 80131d4:	00000020 	andeq	r0, r0, r0, lsr #32
 80131d8:	00000020 	andeq	r0, r0, r0, lsr #32

080131dc <vtable for StoreDisplayUdf>:
	...
 80131e4:	0800bda5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, ip, sp, pc}
 80131e8:	0800bded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 80131ec:	0800bdc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp, pc}
 80131f0:	0800bda9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp, ip, sp, pc}

080131f4 <vtable for StoreDmxSend>:
	...
 80131fc:	0800be0d 	stmdaeq	r0, {r0, r2, r3, r9, sl, fp, ip, sp, pc}
 8013200:	0800be55 	stmdaeq	r0, {r0, r2, r4, r6, r9, sl, fp, ip, sp, pc}
 8013204:	0800be31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, ip, sp, pc}
 8013208:	0800be11 	stmdaeq	r0, {r0, r4, r9, sl, fp, ip, sp, pc}

0801320c <vtable for StoreE131>:
	...
 8013214:	0800be75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 8013218:	0800bebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 801321c:	0800be99 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 8013220:	0800be79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}

08013224 <vtable for StoreNetwork>:
	...
 801322c:	0800bedd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8013230:	0800bff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8013234:	0800bee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 8013238:	0800c005 	stmdaeq	r0, {r0, r2, lr, pc}
 801323c:	0800bf95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 8013240:	0800bf69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8013244:	0800bf39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 8013248:	0800bfc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 801324c:	0800bf09 	stmdaeq	r0, {r0, r3, r8, r9, sl, fp, ip, sp, pc}
 8013250:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8013254:	00000000 	andeq	r0, r0, r0
 8013258:	0800bedf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 801325c:	0800bffd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8013260:	0800bfb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8013264:	0800bf8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, ip, sp, pc}
 8013268:	0800bf61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 801326c:	0800bfe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8013270:	0800bf31 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, fp, ip, sp, pc}

08013274 <vtable for StoreRemoteConfig>:
	...
 801327c:	0800c039 	stmdaeq	r0, {r0, r3, r4, r5, lr, pc}
 8013280:	0800c081 	stmdaeq	r0, {r0, r7, lr, pc}
 8013284:	0800c05d 	stmdaeq	r0, {r0, r2, r3, r4, r6, lr, pc}
 8013288:	0800c03d 	stmdaeq	r0, {r0, r2, r3, r4, r5, lr, pc}
 801328c:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 8013290:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 8013294:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8013298:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 801329c:	746f7420 	strbtvc	r7, [pc], #-1056	; 80132a4 <vtable for StoreRemoteConfig+0x30>
 80132a0:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 80132a4:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 80132a8:	20736574 	rsbscs	r6, r3, r4, ror r5
 80132ac:	2064255b 	rsbcs	r2, r4, fp, asr r5
 80132b0:	0a5d426b 	beq	9763c64 <__exidx_end+0x17500e4>
 80132b4:	70637400 	rsbvc	r7, r3, r0, lsl #8
 80132b8:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 80132bc:	203a6e69 	eorscs	r6, sl, r9, ror #28
 80132c0:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 80132c4:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 80132c8:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80132cc:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 80132d0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 80132d4:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 80132d8:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 80132dc:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 80132e0:	5241000a 	subpl	r0, r1, #10
 80132e4:	6f6c2050 	svcvs	0x006c2050
 80132e8:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 80132ec:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 80132f0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80132f4:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 80132f8:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 80132fc:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8013300:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 8013304:	000a7961 	andeq	r7, sl, r1, ror #18
 8013308:	20505241 	subscs	r5, r0, r1, asr #4
 801330c:	6b6f6f6c 	blvs	9bef0c4 <__exidx_end+0x1bdb544>
 8013310:	66207075 			; <UNDEFINED> instruction: 0x66207075
 8013314:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8013318:	 	vmlsmi.f32	s0, s0, s9

0801331b <NetworkConst::MSG_NETWORK_INIT>:
 801331b:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801331f:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8013323:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8013327:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801332b:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801332f:	3135322e 	teqcc	r5, lr, lsr #4
 8013333:	63745f00 	cmnvs	r4, #0, 30
 8013337:	6f6c2e70 	svcvs	0x006c2e70
 801333b:	006c6163 	rsbeq	r6, ip, r3, ror #2
 801333f:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8013343:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8013347:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 801334f <NetworkConst::MSG_NETWORK_INIT+0x34>
 801334b:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 801334f:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80124f3 <RemoteConfig::s_TXT+0xef>
 8013353:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8013357:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801335b:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801335f:	20000a53 	andcs	r0, r0, r3, asr sl
 8013363:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8013367:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801336b:	0a676e69 	beq	99eed17 <__exidx_end+0x19db197>
 801336f:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8013373:	3a20656d 	bcc	882c92f <__exidx_end+0x818daf>
 8013377:	0a732520 	beq	9cdc7ff <__exidx_end+0x1cc8c7f>
 801337b:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801337f:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8013383:	000a7325 	andeq	r7, sl, r5, lsr #6
 8013387:	30687465 	rsbcc	r7, r8, r5, ror #8
 801338b:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801338f:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8013393:	5f656369 	svcpl	0x00656369
 8013397:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801339b:	6b726f77 	blvs	9caf17f <__exidx_end+0x1c9b5ff>
 801339f:	4820000a 	stmdami	r0!, {r1, r3}
 80133a3:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80133a7:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80133ab:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80133af:	20000a73 	andcs	r0, r0, r3, ror sl
 80133b3:	614e6649 	cmpvs	lr, r9, asr #12
 80133b7:	2020656d 	eorcs	r6, r0, sp, ror #10
 80133bb:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80133bf:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80133c3:	000a7325 	andeq	r7, sl, r5, lsr #6
 80133c7:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80133cb:	20202074 	eorcs	r2, r0, r4, ror r0
 80133cf:	3a202020 	bcc	881b457 <__exidx_end+0x8078d7>
 80133d3:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80133d7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80133db:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80133df:	0a64252f 	beq	991c8a3 <__exidx_end+0x1908d23>
 80133e3:	654e2000 	strbvs	r2, [lr, #-0]
 80133e7:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80133eb:	2020206b 	eorcs	r2, r0, fp, rrx
 80133ef:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80133f3:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80133f7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80133fb:	20000a64 	andcs	r0, r0, r4, ror #20
 80133ff:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8013403:	20796177 	rsbscs	r6, r9, r7, ror r1
 8013407:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801340b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801340f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013413:	0a64252e 	beq	991c8d3 <__exidx_end+0x1908d53>
 8013417:	72422000 	subvc	r2, r2, #0
 801341b:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 801341f:	20747361 	rsbscs	r7, r4, r1, ror #6
 8013423:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013427:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801342b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801342f:	20000a64 	andcs	r0, r0, r4, ror #20
 8013433:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8013437:	20202020 	eorcs	r2, r0, r0, lsr #32
 801343b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801343f:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8013443:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8013447:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801344b:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801344f:	3a78322e 	bcc	9e1fd0f <__exidx_end+0x1e0c18f>
 8013453:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8013457:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801345b:	20000a78 	andcs	r0, r0, r8, ror sl
 801345f:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8013463:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013467:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801346b:	000a6325 	andeq	r6, sl, r5, lsr #6
 801346f:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8013473:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8013477:	 	rsbvc	r0, r9, r0, asr r0

08013479 <NetworkParamsConst::IP_ADDRESS>:
 8013479:	615f7069 	cmpvs	pc, r9, rrx
 801347d:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8013481:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08013484 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8013484:	61666564 	cmnvs	r6, r4, ror #10
 8013488:	5f746c75 	svcpl	0x00746c75
 801348c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8013490:	00796177 	rsbseq	r6, r9, r7, ror r1

08013494 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8013494:	70636864 	rsbvc	r6, r3, r4, ror #16
 8013498:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801349c:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80134a4 <NetworkParamsConst::HOSTNAME>
 80134a0:	00656d69 	rsbeq	r6, r5, r9, ror #26

080134a4 <NetworkParamsConst::HOSTNAME>:
 80134a4:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80134a8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080134ad <NetworkParamsConst::NET_MASK>:
 80134ad:	5f74656e 	svcpl	0x0074656e
 80134b1:	6b73616d 	blvs	9ceba6d <__exidx_end+0x1cd7eed>
	...

080134b6 <NetworkParamsConst::USE_DHCP>:
 80134b6:	5f657375 	svcpl	0x00657375
 80134ba:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080134bf <NetworkParamsConst::FILE_NAME>:
 80134bf:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80134c3:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80134c7:	00747874 	rsbseq	r7, r4, r4, ror r8
 80134cb:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80134cf:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80134d3:	61747320 	cmnvs	r4, r0, lsr #6
 80134d7:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80134db:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134df:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80134e3:	252f6425 	strcs	r6, [pc, #-1061]!	; 80130c6 <index_js+0x486>
 80134e7:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80134eb:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80134ef:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80134f3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134f7:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80134fb:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80134ff:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013503:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013507:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801350b:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 801350f:	20657261 	rsbcs	r7, r5, r1, ror #4
 8013513:	2a2e2556 	bcs	8b9ca73 <__exidx_end+0xb88ef3>
 8013517:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801351b:	72205043 	eorvc	r5, r0, #67	; 0x43
 801351f:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8013523:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8013527:	50434844 	subpl	r4, r3, r4, asr #16
 801352b:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 801352f:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8013533:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8013537:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801353b:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 801353f:	6f647475 	svcvs	0x00647475
 8013543:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08013548 <pArray>:
 8013548:	080135dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
 801354c:	08013598 	stmdaeq	r1, {r3, r4, r7, r8, sl, ip, sp}
 8013550:	08013479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, ip, sp}
 8013554:	080135e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, sp}
 8013558:	080136ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, ip, sp}
 801355c:	080135a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sl, ip, sp}
 8013560:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 8013564:	080134a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, sp}
 8013568:	08013654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip, sp}
 801356c:	08013664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip, sp}
 8013570:	08013674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, ip, sp}
 8013574:	08013684 	stmdaeq	r1, {r2, r7, r9, sl, ip, sp}
 8013578:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 801357c:	080136dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, ip, sp}
 8013580:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 8013584:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 8013588:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 801358c:	080126eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp}
 8013590:	08013484 	stmdaeq	r1, {r2, r7, sl, ip, sp}
 8013594:	080135b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip, sp}

08013598 <DisplayUdfParamsConst::BOARD_NAME>:
 8013598:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801359c:	616e5f64 	cmnvs	lr, r4, ror #30
 80135a0:	 	tstvs	r0, sp, ror #10

080135a3 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80135a3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80135a7:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80135ab:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080135b0 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80135b0:	5f786d64 	svcpl	0x00786d64
 80135b4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80135b8:	6f697463 	svcvs	0x00697463
 80135bc:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080135be <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80135be:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80135c2:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80135c6:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8013061 <index_js+0x421>
 80135ca:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080135cc <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80135cc:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80135d0:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80135d4:	61636974 	smcvs	13972	; 0x3694
 80135d8:	00796c6c 	rsbseq	r6, r9, ip, ror #24

080135dc <DisplayUdfParamsConst::TITLE>:
 80135dc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80135e0:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080135e2 <DisplayUdfParamsConst::VERSION>:
 80135e2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80135e6:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080135ea <DisplayUdfParamsConst::FILE_NAME>:
 80135ea:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80135ee:	2e79616c 	rpwcsez	f6, f1, #4.0
 80135f2:	00747874 	rsbseq	r7, r4, r4, ror r8

080135f6 <DisplayUdfParamsConst::INTENSITY>:
 80135f6:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80135fa:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80135fe:	50410079 	subpl	r0, r1, r9, ror r0
 8013602:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013606:	726f5000 	rsbvc	r5, pc, #0
 801360a:	63252074 			; <UNDEFINED> instruction: 0x63252074
 801360e:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013612:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8013616:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801361a:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801361e:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8013622:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 8013626:	73252200 			; <UNDEFINED> instruction: 0x73252200
 801362a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801362e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013632:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013636:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 801363a:	73252300 			; <UNDEFINED> instruction: 0x73252300
 801363e:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 8013642:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013646:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801364a:	2023000a 	eorcs	r0, r3, sl
 801364e:	23207325 			; <UNDEFINED> instruction: 0x23207325
 8013652:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

08013654 <LightSetParamsConst::UNIVERSE_PORT>:
 8013654:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013658:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801365c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013660:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8013664:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013668:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801366c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013670:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8013674:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013678:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801367c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013680:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8013684:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8013688:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801368c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013690:	00645f74 	rsbeq	r5, r4, r4, ror pc

08013694 <LightSetParamsConst::MERGE_MODE_PORT>:
 8013694:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8013698:	6f6d5f65 	svcvs	0x006d5f65
 801369c:	705f6564 	subsvc	r6, pc, r4, ror #10
 80136a0:	5f74726f 	svcpl	0x0074726f
 80136a4:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 80136a8:	5f656772 	svcpl	0x00656772
 80136ac:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80136b0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136b4:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80136b8:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80136bc:	6f6d5f65 	svcvs	0x006d5f65
 80136c0:	705f6564 	subsvc	r6, pc, r4, ror #10
 80136c4:	5f74726f 	svcpl	0x0074726f
 80136c8:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 80136cc:	5f656772 	svcpl	0x00656772
 80136d0:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80136d4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80136d8:	00645f74 	rsbeq	r5, r4, r4, ror pc

080136dc <LightSetParamsConst::DMX_START_ADDRESS>:
 80136dc:	5f786d64 	svcpl	0x00786d64
 80136e0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80136e4:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 80136e8:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80136ec:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

080136ee <LightSetParamsConst::UNIVERSE>:
 80136ee:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80136f2:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

080136f7 <LightSetParamsConst::DIRECTION>:
 80136f7:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80136fb:	6f697463 	svcvs	0x00697463
 80136ff:	6f705f6e 	svcvs	0x00705f6e
 8013703:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8013707:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801370b:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801370f:	5f6e6f69 	svcpl	0x006e6f69
 8013713:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013717:	0000625f 	andeq	r6, r0, pc, asr r2
 801371b:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801371f:	6f697463 	svcvs	0x00697463
 8013723:	6f705f6e 	svcvs	0x00705f6e
 8013727:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801372b:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801372f:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8013733:	5f6e6f69 	svcpl	0x006e6f69
 8013737:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801373b:	0000645f 	andeq	r6, r0, pc, asr r4
 801373f:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8013743:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8013747:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801374b:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801374f:	31485300 	mrscc	r5, (UNDEF: 120)
 8013753:	00363031 	eorseq	r3, r6, r1, lsr r0
 8013757:	31445353 	cmpcc	r4, r3, asr r3
 801375b:	00363033 	eorseq	r3, r6, r3, lsr r0
 801375f:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8013763:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8013767:	000a2964 	andeq	r2, sl, r4, ror #18
 801376b:	aaeeaa40 	bge	7bbe073 <__stack_size+0x7bbc873>
 801376f:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08013774 <_OledFont8x6>:
 8013774:	00000040 	andeq	r0, r0, r0, asr #32
 8013778:	40000000 	andmi	r0, r0, r0
 801377c:	005f0000 	subseq	r0, pc, r0
 8013780:	00400000 	subeq	r0, r0, r0
 8013784:	00070007 	andeq	r0, r7, r7
 8013788:	7f144000 	svcvc	0x00144000
 801378c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8013790:	7f2a2440 	svcvc	0x002a2440
 8013794:	4000122a 	andmi	r1, r0, sl, lsr #4
 8013798:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801379c:	36400062 	strbcc	r0, [r0], -r2, rrx
 80137a0:	50205649 	eorpl	r5, r0, r9, asr #12
 80137a4:	08004000 	stmdaeq	r0, {lr}
 80137a8:	00000307 	andeq	r0, r0, r7, lsl #6
 80137ac:	221c0040 	andscs	r0, ip, #64	; 0x40
 80137b0:	40000041 	andmi	r0, r0, r1, asr #32
 80137b4:	1c224100 	stfnes	f4, [r2], #-0
 80137b8:	2a400000 	bcs	90137c0 <__exidx_end+0xfffc40>
 80137bc:	2a1c7f1c 	bcs	8733434 <__exidx_end+0x71f8b4>
 80137c0:	08084000 	stmdaeq	r8, {lr}
 80137c4:	0008083e 	andeq	r0, r8, lr, lsr r8
 80137c8:	70800040 	addvc	r0, r0, r0, asr #32
 80137cc:	40000030 	andmi	r0, r0, r0, lsr r0
 80137d0:	08080808 	stmdaeq	r8, {r3, fp}
 80137d4:	00400008 	subeq	r0, r0, r8
 80137d8:	00606000 	rsbeq	r6, r0, r0
 80137dc:	10204000 	eorne	r4, r0, r0
 80137e0:	00020408 	andeq	r0, r2, r8, lsl #8
 80137e4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80137e8:	40003e45 	andmi	r3, r0, r5, asr #28
 80137ec:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80137f0:	72400000 	subvc	r0, r0, #0
 80137f4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80137f8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80137fc:	00334d49 	eorseq	r4, r3, r9, asr #26
 8013800:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8013804:	4000107f 	andmi	r1, r0, pc, ror r0
 8013808:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801380c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8013810:	3149494a 	cmpcc	r9, sl, asr #18
 8013814:	21414000 	mrscs	r4, (UNDEF: 65)
 8013818:	00070911 	andeq	r0, r7, r1, lsl r9
 801381c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8013820:	40003649 	andmi	r3, r0, r9, asr #12
 8013824:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8013828:	0040001e 	subeq	r0, r0, lr, lsl r0
 801382c:	00001400 	andeq	r1, r0, r0, lsl #8
 8013830:	40004000 	andmi	r4, r0, r0
 8013834:	00000034 	andeq	r0, r0, r4, lsr r0
 8013838:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801383c:	40004122 	andmi	r4, r0, r2, lsr #2
 8013840:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8013844:	00400014 	subeq	r0, r0, r4, lsl r0
 8013848:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801384c:	01024000 	mrseq	r4, (UNDEF: 2)
 8013850:	00060959 	andeq	r0, r6, r9, asr r9
 8013854:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8013858:	40004e59 	andmi	r4, r0, r9, asr lr
 801385c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8013860:	7f40007c 	svcvc	0x0040007c
 8013864:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8013868:	413e4000 	teqmi	lr, r0
 801386c:	00224141 	eoreq	r4, r2, r1, asr #2
 8013870:	41417f40 	cmpmi	r1, r0, asr #30
 8013874:	40003e41 	andmi	r3, r0, r1, asr #28
 8013878:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801387c:	7f400041 	svcvc	0x00400041
 8013880:	01090909 	tsteq	r9, r9, lsl #18
 8013884:	413e4000 	teqmi	lr, r0
 8013888:	00735141 	rsbseq	r5, r3, r1, asr #2
 801388c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8013890:	40007f08 	andmi	r7, r0, r8, lsl #30
 8013894:	417f4100 	cmnmi	pc, r0, lsl #2
 8013898:	20400000 	subcs	r0, r0, r0
 801389c:	013f4140 	teqeq	pc, r0, asr #2
 80138a0:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80138a4:	00412214 	subeq	r2, r1, r4, lsl r2
 80138a8:	40407f40 	submi	r7, r0, r0, asr #30
 80138ac:	40004040 	andmi	r4, r0, r0, asr #32
 80138b0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80138b4:	7f40007f 	svcvc	0x0040007f
 80138b8:	7f100804 	svcvc	0x00100804
 80138bc:	413e4000 	teqmi	lr, r0
 80138c0:	003e4141 	eorseq	r4, lr, r1, asr #2
 80138c4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80138c8:	40000609 	andmi	r0, r0, r9, lsl #12
 80138cc:	2151413e 	cmpcs	r1, lr, lsr r1
 80138d0:	7f40005e 	svcvc	0x0040005e
 80138d4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80138d8:	49264000 	stmdbmi	r6!, {lr}
 80138dc:	00324949 	eorseq	r4, r2, r9, asr #18
 80138e0:	7f010340 	svcvc	0x00010340
 80138e4:	40000301 	andmi	r0, r0, r1, lsl #6
 80138e8:	4040403f 	submi	r4, r0, pc, lsr r0
 80138ec:	1f40003f 	svcne	0x0040003f
 80138f0:	1f204020 	svcne	0x00204020
 80138f4:	403f4000 	eorsmi	r4, pc, r0
 80138f8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80138fc:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8013900:	40006314 	andmi	r6, r0, r4, lsl r3
 8013904:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8013908:	61400003 	cmpvs	r0, r3
 801390c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8013910:	7f004000 	svcvc	0x00004000
 8013914:	00414141 	subeq	r4, r1, r1, asr #2
 8013918:	08040240 	stmdaeq	r4, {r6, r9}
 801391c:	40002010 	andmi	r2, r0, r0, lsl r0
 8013920:	41414100 	mrsmi	r4, (UNDEF: 81)
 8013924:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8013928:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801392c:	40404000 	submi	r4, r0, r0
 8013930:	00404040 	subeq	r4, r0, r0, asr #32
 8013934:	07030040 	streq	r0, [r3, -r0, asr #32]
 8013938:	40000008 	andmi	r0, r0, r8
 801393c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8013940:	7f400040 	svcvc	0x00400040
 8013944:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8013948:	44384000 	ldrtmi	r4, [r8], #-0
 801394c:	00284444 	eoreq	r4, r8, r4, asr #8
 8013950:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8013954:	40007f28 	andmi	r7, r0, r8, lsr #30
 8013958:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801395c:	00400018 	subeq	r0, r0, r8, lsl r0
 8013960:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8013964:	a4184000 	ldrge	r4, [r8], #-0
 8013968:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801396c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8013970:	40007804 	andmi	r7, r0, r4, lsl #16
 8013974:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8013978:	20400000 	subcs	r0, r0, r0
 801397c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8013980:	107f4000 	rsbsne	r4, pc, r0
 8013984:	00004428 	andeq	r4, r0, r8, lsr #8
 8013988:	7f410040 	svcvc	0x00410040
 801398c:	40000040 	andmi	r0, r0, r0, asr #32
 8013990:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8013994:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8013998:	78040408 	stmdavc	r4, {r3, sl}
 801399c:	44384000 	ldrtmi	r4, [r8], #-0
 80139a0:	00384444 	eorseq	r4, r8, r4, asr #8
 80139a4:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80139a8:	40001824 	andmi	r1, r0, r4, lsr #16
 80139ac:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80139b0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80139b4:	08040408 	stmdaeq	r4, {r3, sl}
 80139b8:	54484000 	strbpl	r4, [r8], #-0
 80139bc:	00245454 	eoreq	r5, r4, r4, asr r4
 80139c0:	3f040440 	svccc	0x00040440
 80139c4:	40002444 	andmi	r2, r0, r4, asr #8
 80139c8:	2040403c 	subcs	r4, r0, ip, lsr r0
 80139cc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80139d0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80139d4:	403c4000 	eorsmi	r4, ip, r0
 80139d8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80139dc:	10284440 	eorne	r4, r8, r0, asr #8
 80139e0:	40004428 	andmi	r4, r0, r8, lsr #8
 80139e4:	9090904c 	addsls	r9, r0, ip, asr #32
 80139e8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80139ec:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80139f0:	08004000 	stmdaeq	r0, {lr}
 80139f4:	00004136 	andeq	r4, r0, r6, lsr r1
 80139f8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80139fc:	40000000 	andmi	r0, r0, r0
 8013a00:	08364100 	ldmdaeq	r6!, {r8, lr}
 8013a04:	02400000 	subeq	r0, r0, #0
 8013a08:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8013a0c:	263c4000 	ldrtcs	r4, [ip], -r0
 8013a10:	003c2623 	eorseq	r2, ip, r3, lsr #12

08013a14 <oled_128x32_init>:
 8013a14:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013a18:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8013a1c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013a20:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8013a24:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013a28:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013a2c <oled_128x64_init>:
 8013a2c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8013a30:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8013a34:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8013a38:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8013a3c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8013a40:	a6a440db 	ssatge	r4, #5, fp, asr #1

08013a44 <vtable for Ssd1306>:
	...
 8013a4c:	0800effb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
 8013a50:	0800f029 	stmdaeq	r0, {r0, r3, r5, ip, sp, lr, pc}
 8013a54:	0800f341 	stmdaeq	r0, {r0, r6, r8, r9, ip, sp, lr, pc}
 8013a58:	0800f2c5 	stmdaeq	r0, {r0, r2, r6, r7, r9, ip, sp, lr, pc}
 8013a5c:	0800f191 	stmdaeq	r0, {r0, r4, r7, r8, ip, sp, lr, pc}
 8013a60:	0800f049 	stmdaeq	r0, {r0, r3, r6, ip, sp, lr, pc}
 8013a64:	0800f071 	stmdaeq	r0, {r0, r4, r5, r6, ip, sp, lr, pc}
 8013a68:	0800f167 	stmdaeq	r0, {r0, r1, r2, r5, r6, r8, ip, sp, lr, pc}
 8013a6c:	0800f121 	stmdaeq	r0, {r0, r5, r8, ip, sp, lr, pc}
 8013a70:	0800effd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
 8013a74:	0800f1cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, ip, sp, lr, pc}
 8013a78:	0800f1d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, ip, sp, lr, pc}
 8013a7c:	0800f1f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, ip, sp, lr, pc}
 8013a80:	0800f001 	stmdaeq	r0, {r0, ip, sp, lr, pc}
 8013a84:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8013a88:	5b1b006d 	blpl	86d3c44 <__exidx_end+0x6c00c4>
 8013a8c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8013a90:	31335b1b 	teqcc	r3, fp, lsl fp
 8013a94:	5b1b006d 	blpl	86d3c50 <__exidx_end+0x6c00d0>
 8013a98:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8013a9c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8013aa0:	5b1b006d 	blpl	86d3c5c <__exidx_end+0x6c00dc>
 8013aa4:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8013aa8:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8013aac:	205d732a 	subscs	r7, sp, sl, lsr #6
 8013ab0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8013ab4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8013ab8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8013abc:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8013ac0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8013ac4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8013ac8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8013acc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013ad0:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013ad4:	000a7525 	andeq	r7, sl, r5, lsr #10
 8013ad8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013adc:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013ae0:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8013ae4:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8013ae8:	6b636f6c 	blvs	98ef8a0 <__exidx_end+0x18dbd20>
 8013aec:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8013af0:	000a7469 	andeq	r7, sl, r9, ror #8
 8013af4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8013af8:	203a636f 	eorscs	r6, sl, pc, ror #6
 8013afc:	6f6c4270 	svcvs	0x006c4270
 8013b00:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8013b04:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013b08:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8013b0c:	7a697320 	bvc	9a70794 <__exidx_end+0x1a5cc14>
 8013b10:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8013b14:	6164202c 	cmnvs	r4, ip, lsr #32
 8013b18:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8013b1c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8013b20:	3a656572 	bcc	996d0f0 <__exidx_end+0x1959570>
 8013b24:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8013b28:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013b2c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013b30:	203d2072 	eorscs	r2, sp, r2, ror r0
 8013b34:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8013b38:	6f6c4270 	svcvs	0x006c4270
 8013b3c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8013b40:	0a702520 	beq	9c1cfc8 <__exidx_end+0x1c09448>
 8013b44:	00000000 	andeq	r0, r0, r0

08013b48 <days_of_month>:
 8013b48:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b4c:	0000001c 	andeq	r0, r0, ip, lsl r0
 8013b50:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b54:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b58:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b5c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b60:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b64:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b68:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b6c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8013b70:	0000001e 	andeq	r0, r0, lr, lsl r0
 8013b74:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08013b78 <__exidx_start>:
 8013b78:	7fff3fd0 	svcvc	0x00ff3fd0
 8013b7c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08013b80 <.ARM.attributes>:
 8013b80:	00002e41 	andeq	r2, r0, r1, asr #28
 8013b84:	61656100 	cmnvs	r5, r0, lsl #2
 8013b88:	01006962 	tsteq	r0, r2, ror #18
 8013b8c:	00000024 	andeq	r0, r0, r4, lsr #32
 8013b90:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8013b94:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8013b98:	0600334d 	streq	r3, [r0], -sp, asr #6
 8013b9c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8013ba0:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8013ba4:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8013ba8:	1a011803 	bne	8059bbc <__exidx_end+0x4603c>
 8013bac:	Address 0x0000000008013bac is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000711 	andcs	r0, r0, r1, lsl r7

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <guard variable for lightset::Data::Get()::instance>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <lightset::Data::Get()::instance>:
	...

20000704 <E131Bridge::s_pThis>:
20000704:	00000000 	andeq	r0, r0, r0

20000708 <s_ReceivingMask>:
20000708:	00000000 	andeq	r0, r0, r0

2000070c <DmxSend::s_nStarted>:
	...

2000070d <DmxConfigUdp::s_Buffer>:
	...

20000720 <s_RxBuffer>:
	...

20000930 <s_TxBuffer>:
	...

20000b34 <sv_PortState>:
20000b34:	00000000 	andeq	r0, r0, r0

20000b38 <s_nUartsSending>:
20000b38:	00000000 	andeq	r0, r0, r0

20000b3c <sv_nRxDmxPackets>:
	...

20000b4c <Dmx::s_pThis>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <gv_RdmDataReceiveEnd>:
20000b50:	00000000 	andeq	r0, r0, r0

20000b54 <RemoteConfig::s_pUdpBuffer>:
20000b54:	00000000 	andeq	r0, r0, r0

20000b58 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b7c <RemoteConfig::s_pThis>:
20000b7c:	00000000 	andeq	r0, r0, r0

20000b80 <SpiFlashStore::s_nWaitMillis>:
20000b80:	00000000 	andeq	r0, r0, r0

20000b84 <SpiFlashStore::s_SpiFlashData>:
	...

20001b84 <SpiFlashStore::s_nStartAddress>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_bHaveFlashChip>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_State>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <SpiFlashStore::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <SpiFlashStore::s_bIsNew>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreDisplayUdf::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreDmxSend::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <StoreE131::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <StoreNetwork::s_pThis>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <StoreRemoteConfig::s_pThis>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <FlashRom::s_pThis>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_nAddress>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_State>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nPage>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <flashrom::s_pData>:
20001bc0:	00000000 	andeq	r0, r0, r0

20001bc4 <flashrom::s_isBank0>:
20001bc4:	00000000 	andeq	r0, r0, r0

20001bc8 <flashrom::s_nLength>:
20001bc8:	00000000 	andeq	r0, r0, r0

20001bcc <g_ip_info>:
	...

20001bd8 <g_mac_address>:
20001bd8:	00000000 	andeq	r0, r0, r0
	...

20001bde <s_is_dhcp>:
	...

20001be0 <s_p>:
20001be0:	00000000 	andeq	r0, r0, r0

20001be4 <s_ticker>:
20001be4:	00000000 	andeq	r0, r0, r0

20001be8 <s_mac_address>:
	...

20001bf0 <s_mac_address_arp_reply>:
20001bf0:	00000000 	andeq	r0, r0, r0
	...

20001bf6 <s_id>:
	...

20001bf8 <s_recv_queue>:
	...

20002768 <s_tcb>:
	...

200027ac <s_tcp>:
	...

20002d98 <broadcast_mask>:
20002d98:	00000000 	andeq	r0, r0, r0

20002d9c <gw_ip>:
20002d9c:	00000000 	andeq	r0, r0, r0

20002da0 <on_network_mask>:
20002da0:	00000000 	andeq	r0, r0, r0

20002da4 <s_id>:
20002da4:	00000000 	andeq	r0, r0, r0

20002da8 <s_ports_allowed>:
	...

20002dc8 <s_recv_queue>:
	...

20008a68 <s_send_packet>:
	...

20009054 <MDNS::s_nRemoteIp>:
20009054:	00000000 	andeq	r0, r0, r0

20009058 <MDNS::s_nRemotePort>:
20009058:	00000000 	andeq	r0, r0, r0

2000905c <MDNS::s_nMulticastIp>:
2000905c:	00000000 	andeq	r0, r0, r0

20009060 <MDNS::s_AnswerLocalIp>:
	...

20009264 <MDNS::s_ServiceRecords>:
	...

20009284 <MDNS::s_nBytesReceived>:
20009284:	00000000 	andeq	r0, r0, r0

20009288 <MDNS::s_ServiceRecordsData>:
	...

2000948c <MDNS::s_pName>:
2000948c:	00000000 	andeq	r0, r0, r0

20009490 <MDNS::s_pBuffer>:
20009490:	00000000 	andeq	r0, r0, r0

20009494 <Network::s_pThis>:
20009494:	00000000 	andeq	r0, r0, r0

20009498 <NetworkParams::m_tNetworkParams>:
	...

200094f8 <s_arp_announce>:
	...

20009524 <s_arp_reply>:
	...

20009550 <s_arp_request>:
	...

2000957c <s_arp_records>:
	...

200096fc <s_entry_current>:
200096fc:	00000000 	andeq	r0, r0, r0

20009700 <s_dhcp_allocated_gw>:
20009700:	00000000 	andeq	r0, r0, r0

20009704 <s_dhcp_allocated_ip>:
20009704:	00000000 	andeq	r0, r0, r0

20009708 <s_dhcp_allocated_netmask>:
20009708:	00000000 	andeq	r0, r0, r0

2000970c <s_dhcp_message>:
	...

20009930 <s_dhcp_server_ip>:
20009930:	00000000 	andeq	r0, r0, r0

20009934 <s_groups>:
	...

20009a54 <s_id>:
20009a54:	00000000 	andeq	r0, r0, r0

20009a58 <s_joins_allowed_index>:
20009a58:	00000000 	andeq	r0, r0, r0

20009a5c <s_leave>:
	...

20009a8c <s_multicast_mac>:
	...

20009a94 <s_report>:
	...

20009ac4 <DisplayUdf::s_pThis>:
20009ac4:	00000000 	andeq	r0, r0, r0

20009ac8 <PropertiesConfig::s_Config>:
20009ac8:	00000000 	andeq	r0, r0, r0

20009acc <Display::s_pThis>:
20009acc:	00000000 	andeq	r0, r0, r0

20009ad0 <_ClearBuffer>:
	...

20009b58 <Ssd1306::s_pThis>:
20009b58:	00000000 	andeq	r0, r0, r0

20009b5c <FirmwareVersion::s_FirmwareVersion>:
	...

20009b72 <FirmwareVersion::s_Print>:
	...

20009bb4 <FirmwareVersion::s_pThis>:
20009bb4:	00000000 	andeq	r0, r0, r0

20009bb8 <LedBlink::s_pThis>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <Hardware::s_pThis>:
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <outptr>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <last.0>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <s_micros>:
	...

20009bd0 <set_timer>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <s_nSysTickMillis>:
20009bd4:	00000000 	andeq	r0, r0, r0

20009bd8 <enet_init_status>:
20009bd8:	00000000 	andeq	r0, r0, r0

20009bdc <s_nAddress>:
20009bdc:	00000000 	andeq	r0, r0, r0

20009be0 <dma_current_ptp_rxdesc>:
20009be0:	00000000 	andeq	r0, r0, r0

20009be4 <dma_current_ptp_txdesc>:
20009be4:	00000000 	andeq	r0, r0, r0

20009be8 <dma_current_rxdesc>:
20009be8:	00000000 	andeq	r0, r0, r0

20009bec <dma_current_txdesc>:
20009bec:	00000000 	andeq	r0, r0, r0

20009bf0 <enet_initpara>:
	...

20009c2c <rx_buff>:
	...

2000cbcc <rxdesc_tab>:
	...

2000cc4c <tx_buff>:
	...

2000d834 <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
