
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08008565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, pc}
 8007008:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800700c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007010:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007014:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007018:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 800702c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007030:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800703c:	080113cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, ip}
 8007040:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007044:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007048:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800704c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007050:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007054:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007058:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800705c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007060:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007064:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007068:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800706c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007070:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007074:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007078:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800707c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007080:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007084:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007088:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800708c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007090:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007094:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007098:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800709c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ac:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070bc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070cc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070dc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ec:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 8007100:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800710c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007110:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007114:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007118:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800711c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007120:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007124:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007128:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800712c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007130:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007134:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007138:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800713c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007140:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007144:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007148:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800714c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f008 f879 	bl	800f298 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f006 fba4 	bl	800d8fc <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f008 fa8a 	bl	800f6d8 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20000ca4 	andcs	r0, r0, r4, lsr #25
 80071e8:	20000c98 	mulcs	r0, r8, ip
 80071ec:	20000caa 	andcs	r0, r0, sl, lsr #25

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f008 b952 	b.w	800f4a8 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20000caa 	andcs	r0, r0, sl, lsr #25

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20000cb4 			; <UNDEFINED> instruction: 0x20000cb4

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f006 fbbf 	bl	800d9b0 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f006 fbb3 	bl	800d9b0 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	2000187c 	andcs	r1, r0, ip, ror r8
 800725c:	20000ca4 	andcs	r0, r0, r4, lsr #25
 8007260:	20000c98 	mulcs	r0, r8, ip
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f006 fd12 	bl	800dcb8 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f006 fd33 	bl	800dd08 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20001e98 	mulcs	r0, r8, lr
 80072ac:	20001e78 	andcs	r1, r0, r8, ror lr
 80072b0:	20007b38 	andcs	r7, r0, r8, lsr fp
 80072b4:	20001e74 	andcs	r1, r0, r4, ror lr
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f007 fe60 	bl	800ef9c <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f007 fe4d 	bl	800ef9c <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f007 fe41 	bl	800ef9c <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f007 fe30 	bl	800ef9c <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f007 fe24 	bl	800ef9c <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f007 fe18 	bl	800ef9c <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f007 be1d 	b.w	800efb0 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	2000856e 	andcs	r8, r0, lr, ror #10
 8007394:	20008568 	andcs	r8, r0, r8, ror #10
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	2000857e 	andcs	r8, r0, lr, ror r5
 80073a4:	20008588 	andcs	r8, r0, r8, lsl #11
 80073a8:	200085c6 	andcs	r8, r0, r6, asr #11
 80073ac:	200085c0 	andcs	r8, r0, r0, asr #11
 80073b0:	200085d6 	ldrdcs	r8, [r0], -r6
 80073b4:	200085e0 	andcs	r8, r0, r0, ror #11
 80073b8:	20008594 	mulcs	r0, r4, r5

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	2000876c 	andcs	r8, r0, ip, ror #14
 80073ec:	200085f0 	strdcs	r8, [r0], -r0

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f008 f8bc 	bl	800f598 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f008 f868 	bl	800f504 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f008 f84e 	bl	800f504 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	200089a4 	andcs	r8, r0, r4, lsr #19
 8007490:	20008ac8 	andcs	r8, r0, r8, asr #21
 8007494:	20008b04 	andcs	r8, r0, r4, lsl #22
 8007498:	20008ac4 	andcs	r8, r0, r4, asr #21
 800749c:	20008afc 	strdcs	r8, [r0], -ip
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20008acc 	andcs	r8, r0, ip, asr #21
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f008 f8c6 	bl	800f650 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	200089a4 	andcs	r8, r0, r4, lsr #19

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f009 ff05 	bl	8011310 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f009 ff32 	bl	8011370 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f009 ff2f 	bl	8011370 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	080132bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, ip, sp}
 800751c:	0801599c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, ip, lr}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f00a ff97 	bl	8012458 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f00a ffa1 	bl	8012480 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f006 b9cb 	b.w	800d8dc <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20000cac 	andcs	r0, r0, ip, lsr #25

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f006 fa27 	bl	800d9c4 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f006 fa08 	bl	800d9b0 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f006 f9f9 	bl	800d9b0 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f006 f9f1 	bl	800d9b0 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f006 fa9a 	bl	800db5c <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f006 f9b2 	bl	800d9b0 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f006 f9ab 	bl	800d9b0 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f006 f9ca 	bl	800da10 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f006 f965 	bl	800d97c <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f006 f946 	bl	800d97c <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f006 f983 	bl	800da10 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f006 fa20 	bl	800db5c <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f006 f9fe 	bl	800db5c <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f006 f90d 	bl	800d9b0 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f006 f929 	bl	800da10 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f006 f90b 	bl	800da10 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20001838 	andcs	r1, r0, r8, lsr r8
 8007814:	20001840 	andcs	r1, r0, r0, asr #16
 8007818:	20000cc8 	andcs	r0, r0, r8, asr #25
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f006 f881 	bl	800d97c <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f006 f8bc 	bl	800da10 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20001838 	andcs	r1, r0, r8, lsr r8

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f006 f9ca 	bl	800dcb8 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f006 f9c3 	bl	800dcb8 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20001e78 	andcs	r1, r0, r8, ror lr
 800795c:	20001e98 	mulcs	r0, r8, lr

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f007 bb28 	b.w	800efc4 <arp_handle_request>
 8007974:	f007 bb4e 	b.w	800f014 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20008ac8 	andcs	r8, r0, r8, asr #21
 8007a14:	200089a4 	andcs	r8, r0, r4, lsr #19

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f007 fe6a 	bl	800f73e <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f007 fe65 	bl	800f73e <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f007 fe5a 	bl	800f73e <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f007 fe4f 	bl	800f73e <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f007 fe1f 	bl	800f6ea <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f007 fe12 	bl	800f6ea <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f00a fcd9 	bl	8012488 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20000ca4 	andcs	r0, r0, r4, lsr #25
 8007ae0:	20000c98 	mulcs	r0, r8, ip

08007ae4 <__aeabi_d2f>:
 8007ae4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ae8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007aec:	bf24      	itt	cs
 8007aee:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007af2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007af6:	d90d      	bls.n	8007b14 <__aeabi_d2f+0x30>
 8007af8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007afc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b00:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b04:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b08:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b0c:	bf08      	it	eq
 8007b0e:	f020 0001 	biceq.w	r0, r0, #1
 8007b12:	4770      	bx	lr
 8007b14:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b18:	d121      	bne.n	8007b5e <__aeabi_d2f+0x7a>
 8007b1a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b1e:	bfbc      	itt	lt
 8007b20:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b24:	4770      	bxlt	lr
 8007b26:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b2a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b2e:	f1c2 0218 	rsb	r2, r2, #24
 8007b32:	f1c2 0c20 	rsb	ip, r2, #32
 8007b36:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b3a:	fa20 f002 	lsr.w	r0, r0, r2
 8007b3e:	bf18      	it	ne
 8007b40:	f040 0001 	orrne.w	r0, r0, #1
 8007b44:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b48:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b4c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b50:	ea40 000c 	orr.w	r0, r0, ip
 8007b54:	fa23 f302 	lsr.w	r3, r3, r2
 8007b58:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b5c:	e7cc      	b.n	8007af8 <__aeabi_d2f+0x14>
 8007b5e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b62:	d107      	bne.n	8007b74 <__aeabi_d2f+0x90>
 8007b64:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b68:	bf1e      	ittt	ne
 8007b6a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b6e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b72:	4770      	bxne	lr
 8007b74:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b78:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b7c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b80:	4770      	bx	lr
 8007b82:	bf00      	nop

08007b84 <__aeabi_frsub>:
 8007b84:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b88:	e002      	b.n	8007b90 <__addsf3>
 8007b8a:	bf00      	nop

08007b8c <__aeabi_fsub>:
 8007b8c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b90 <__addsf3>:
 8007b90:	0042      	lsls	r2, r0, #1
 8007b92:	bf1f      	itttt	ne
 8007b94:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007b98:	ea92 0f03 	teqne	r2, r3
 8007b9c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007ba0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ba4:	d06a      	beq.n	8007c7c <__addsf3+0xec>
 8007ba6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007baa:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bae:	bfc1      	itttt	gt
 8007bb0:	18d2      	addgt	r2, r2, r3
 8007bb2:	4041      	eorgt	r1, r0
 8007bb4:	4048      	eorgt	r0, r1
 8007bb6:	4041      	eorgt	r1, r0
 8007bb8:	bfb8      	it	lt
 8007bba:	425b      	neglt	r3, r3
 8007bbc:	2b19      	cmp	r3, #25
 8007bbe:	bf88      	it	hi
 8007bc0:	4770      	bxhi	lr
 8007bc2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bc6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bca:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bce:	bf18      	it	ne
 8007bd0:	4240      	negne	r0, r0
 8007bd2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bd6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007bda:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bde:	bf18      	it	ne
 8007be0:	4249      	negne	r1, r1
 8007be2:	ea92 0f03 	teq	r2, r3
 8007be6:	d03f      	beq.n	8007c68 <__addsf3+0xd8>
 8007be8:	f1a2 0201 	sub.w	r2, r2, #1
 8007bec:	fa41 fc03 	asr.w	ip, r1, r3
 8007bf0:	eb10 000c 	adds.w	r0, r0, ip
 8007bf4:	f1c3 0320 	rsb	r3, r3, #32
 8007bf8:	fa01 f103 	lsl.w	r1, r1, r3
 8007bfc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c00:	d502      	bpl.n	8007c08 <__addsf3+0x78>
 8007c02:	4249      	negs	r1, r1
 8007c04:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c08:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c0c:	d313      	bcc.n	8007c36 <__addsf3+0xa6>
 8007c0e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c12:	d306      	bcc.n	8007c22 <__addsf3+0x92>
 8007c14:	0840      	lsrs	r0, r0, #1
 8007c16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c1a:	f102 0201 	add.w	r2, r2, #1
 8007c1e:	2afe      	cmp	r2, #254	; 0xfe
 8007c20:	d251      	bcs.n	8007cc6 <__addsf3+0x136>
 8007c22:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c26:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c2a:	bf08      	it	eq
 8007c2c:	f020 0001 	biceq.w	r0, r0, #1
 8007c30:	ea40 0003 	orr.w	r0, r0, r3
 8007c34:	4770      	bx	lr
 8007c36:	0049      	lsls	r1, r1, #1
 8007c38:	eb40 0000 	adc.w	r0, r0, r0
 8007c3c:	3a01      	subs	r2, #1
 8007c3e:	bf28      	it	cs
 8007c40:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c44:	d2ed      	bcs.n	8007c22 <__addsf3+0x92>
 8007c46:	fab0 fc80 	clz	ip, r0
 8007c4a:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c4e:	ebb2 020c 	subs.w	r2, r2, ip
 8007c52:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c56:	bfaa      	itet	ge
 8007c58:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c5c:	4252      	neglt	r2, r2
 8007c5e:	4318      	orrge	r0, r3
 8007c60:	bfbc      	itt	lt
 8007c62:	40d0      	lsrlt	r0, r2
 8007c64:	4318      	orrlt	r0, r3
 8007c66:	4770      	bx	lr
 8007c68:	f092 0f00 	teq	r2, #0
 8007c6c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c70:	bf06      	itte	eq
 8007c72:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c76:	3201      	addeq	r2, #1
 8007c78:	3b01      	subne	r3, #1
 8007c7a:	e7b5      	b.n	8007be8 <__addsf3+0x58>
 8007c7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c84:	bf18      	it	ne
 8007c86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c8a:	d021      	beq.n	8007cd0 <__addsf3+0x140>
 8007c8c:	ea92 0f03 	teq	r2, r3
 8007c90:	d004      	beq.n	8007c9c <__addsf3+0x10c>
 8007c92:	f092 0f00 	teq	r2, #0
 8007c96:	bf08      	it	eq
 8007c98:	4608      	moveq	r0, r1
 8007c9a:	4770      	bx	lr
 8007c9c:	ea90 0f01 	teq	r0, r1
 8007ca0:	bf1c      	itt	ne
 8007ca2:	2000      	movne	r0, #0
 8007ca4:	4770      	bxne	lr
 8007ca6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007caa:	d104      	bne.n	8007cb6 <__addsf3+0x126>
 8007cac:	0040      	lsls	r0, r0, #1
 8007cae:	bf28      	it	cs
 8007cb0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cb4:	4770      	bx	lr
 8007cb6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cba:	bf3c      	itt	cc
 8007cbc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007cc0:	4770      	bxcc	lr
 8007cc2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cc6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007cd4:	bf16      	itet	ne
 8007cd6:	4608      	movne	r0, r1
 8007cd8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007cdc:	4601      	movne	r1, r0
 8007cde:	0242      	lsls	r2, r0, #9
 8007ce0:	bf06      	itte	eq
 8007ce2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007ce6:	ea90 0f01 	teqeq	r0, r1
 8007cea:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cee:	4770      	bx	lr

08007cf0 <__aeabi_ui2f>:
 8007cf0:	f04f 0300 	mov.w	r3, #0
 8007cf4:	e004      	b.n	8007d00 <__aeabi_i2f+0x8>
 8007cf6:	bf00      	nop

08007cf8 <__aeabi_i2f>:
 8007cf8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007cfc:	bf48      	it	mi
 8007cfe:	4240      	negmi	r0, r0
 8007d00:	ea5f 0c00 	movs.w	ip, r0
 8007d04:	bf08      	it	eq
 8007d06:	4770      	bxeq	lr
 8007d08:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d0c:	4601      	mov	r1, r0
 8007d0e:	f04f 0000 	mov.w	r0, #0
 8007d12:	e01c      	b.n	8007d4e <__aeabi_l2f+0x2a>

08007d14 <__aeabi_ul2f>:
 8007d14:	ea50 0201 	orrs.w	r2, r0, r1
 8007d18:	bf08      	it	eq
 8007d1a:	4770      	bxeq	lr
 8007d1c:	f04f 0300 	mov.w	r3, #0
 8007d20:	e00a      	b.n	8007d38 <__aeabi_l2f+0x14>
 8007d22:	bf00      	nop

08007d24 <__aeabi_l2f>:
 8007d24:	ea50 0201 	orrs.w	r2, r0, r1
 8007d28:	bf08      	it	eq
 8007d2a:	4770      	bxeq	lr
 8007d2c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d30:	d502      	bpl.n	8007d38 <__aeabi_l2f+0x14>
 8007d32:	4240      	negs	r0, r0
 8007d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d38:	ea5f 0c01 	movs.w	ip, r1
 8007d3c:	bf02      	ittt	eq
 8007d3e:	4684      	moveq	ip, r0
 8007d40:	4601      	moveq	r1, r0
 8007d42:	2000      	moveq	r0, #0
 8007d44:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d48:	bf08      	it	eq
 8007d4a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d4e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d52:	fabc f28c 	clz	r2, ip
 8007d56:	3a08      	subs	r2, #8
 8007d58:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d5c:	db10      	blt.n	8007d80 <__aeabi_l2f+0x5c>
 8007d5e:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d62:	4463      	add	r3, ip
 8007d64:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d68:	f1c2 0220 	rsb	r2, r2, #32
 8007d6c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d70:	fa20 f202 	lsr.w	r2, r0, r2
 8007d74:	eb43 0002 	adc.w	r0, r3, r2
 8007d78:	bf08      	it	eq
 8007d7a:	f020 0001 	biceq.w	r0, r0, #1
 8007d7e:	4770      	bx	lr
 8007d80:	f102 0220 	add.w	r2, r2, #32
 8007d84:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d88:	f1c2 0220 	rsb	r2, r2, #32
 8007d8c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d90:	fa21 f202 	lsr.w	r2, r1, r2
 8007d94:	eb43 0002 	adc.w	r0, r3, r2
 8007d98:	bf08      	it	eq
 8007d9a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007d9e:	4770      	bx	lr

08007da0 <__gesf2>:
 8007da0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007da4:	e006      	b.n	8007db4 <__cmpsf2+0x4>
 8007da6:	bf00      	nop

08007da8 <__lesf2>:
 8007da8:	f04f 0c01 	mov.w	ip, #1
 8007dac:	e002      	b.n	8007db4 <__cmpsf2+0x4>
 8007dae:	bf00      	nop

08007db0 <__cmpsf2>:
 8007db0:	f04f 0c01 	mov.w	ip, #1
 8007db4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007db8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dbc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dc0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dc4:	bf18      	it	ne
 8007dc6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dca:	d011      	beq.n	8007df0 <__cmpsf2+0x40>
 8007dcc:	b001      	add	sp, #4
 8007dce:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dd2:	bf18      	it	ne
 8007dd4:	ea90 0f01 	teqne	r0, r1
 8007dd8:	bf58      	it	pl
 8007dda:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dde:	bf88      	it	hi
 8007de0:	17c8      	asrhi	r0, r1, #31
 8007de2:	bf38      	it	cc
 8007de4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007de8:	bf18      	it	ne
 8007dea:	f040 0001 	orrne.w	r0, r0, #1
 8007dee:	4770      	bx	lr
 8007df0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007df4:	d102      	bne.n	8007dfc <__cmpsf2+0x4c>
 8007df6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007dfa:	d105      	bne.n	8007e08 <__cmpsf2+0x58>
 8007dfc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e00:	d1e4      	bne.n	8007dcc <__cmpsf2+0x1c>
 8007e02:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e06:	d0e1      	beq.n	8007dcc <__cmpsf2+0x1c>
 8007e08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e0c:	4770      	bx	lr
 8007e0e:	bf00      	nop

08007e10 <__aeabi_cfrcmple>:
 8007e10:	4684      	mov	ip, r0
 8007e12:	4608      	mov	r0, r1
 8007e14:	4661      	mov	r1, ip
 8007e16:	e7ff      	b.n	8007e18 <__aeabi_cfcmpeq>

08007e18 <__aeabi_cfcmpeq>:
 8007e18:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e1a:	f7ff ffc9 	bl	8007db0 <__cmpsf2>
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	bf48      	it	mi
 8007e22:	f110 0f00 	cmnmi.w	r0, #0
 8007e26:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e28 <__aeabi_fcmpeq>:
 8007e28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e2c:	f7ff fff4 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e30:	bf0c      	ite	eq
 8007e32:	2001      	moveq	r0, #1
 8007e34:	2000      	movne	r0, #0
 8007e36:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e3a:	bf00      	nop

08007e3c <__aeabi_fcmplt>:
 8007e3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e40:	f7ff ffea 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e44:	bf34      	ite	cc
 8007e46:	2001      	movcc	r0, #1
 8007e48:	2000      	movcs	r0, #0
 8007e4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e4e:	bf00      	nop

08007e50 <__aeabi_fcmple>:
 8007e50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e54:	f7ff ffe0 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e58:	bf94      	ite	ls
 8007e5a:	2001      	movls	r0, #1
 8007e5c:	2000      	movhi	r0, #0
 8007e5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e62:	bf00      	nop

08007e64 <__aeabi_fcmpge>:
 8007e64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e68:	f7ff ffd2 	bl	8007e10 <__aeabi_cfrcmple>
 8007e6c:	bf94      	ite	ls
 8007e6e:	2001      	movls	r0, #1
 8007e70:	2000      	movhi	r0, #0
 8007e72:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e76:	bf00      	nop

08007e78 <__aeabi_fcmpgt>:
 8007e78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e7c:	f7ff ffc8 	bl	8007e10 <__aeabi_cfrcmple>
 8007e80:	bf34      	ite	cc
 8007e82:	2001      	movcc	r0, #1
 8007e84:	2000      	movcs	r0, #0
 8007e86:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e8a:	bf00      	nop

08007e8c <__aeabi_f2iz>:
 8007e8c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e90:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007e94:	d30f      	bcc.n	8007eb6 <__aeabi_f2iz+0x2a>
 8007e96:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007e9a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007e9e:	d90d      	bls.n	8007ebc <__aeabi_f2iz+0x30>
 8007ea0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007ea8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eac:	fa23 f002 	lsr.w	r0, r3, r2
 8007eb0:	bf18      	it	ne
 8007eb2:	4240      	negne	r0, r0
 8007eb4:	4770      	bx	lr
 8007eb6:	f04f 0000 	mov.w	r0, #0
 8007eba:	4770      	bx	lr
 8007ebc:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ec0:	d101      	bne.n	8007ec6 <__aeabi_f2iz+0x3a>
 8007ec2:	0242      	lsls	r2, r0, #9
 8007ec4:	d105      	bne.n	8007ed2 <__aeabi_f2iz+0x46>
 8007ec6:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007eca:	bf08      	it	eq
 8007ecc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007ed0:	4770      	bx	lr
 8007ed2:	f04f 0000 	mov.w	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <__aeabi_uldivmod>:
 8007ed8:	b953      	cbnz	r3, 8007ef0 <__aeabi_uldivmod+0x18>
 8007eda:	b94a      	cbnz	r2, 8007ef0 <__aeabi_uldivmod+0x18>
 8007edc:	2900      	cmp	r1, #0
 8007ede:	bf08      	it	eq
 8007ee0:	2800      	cmpeq	r0, #0
 8007ee2:	bf1c      	itt	ne
 8007ee4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ee8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007eec:	f000 b80c 	b.w	8007f08 <__aeabi_idiv0>
 8007ef0:	f1ad 0c08 	sub.w	ip, sp, #8
 8007ef4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007ef8:	f001 fa28 	bl	800934c <__udivmoddi4>
 8007efc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f04:	b004      	add	sp, #16
 8007f06:	4770      	bx	lr

08007f08 <__aeabi_idiv0>:
 8007f08:	4770      	bx	lr
 8007f0a:	bf00      	nop

08007f0c <__aeabi_drsub>:
 8007f0c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f10:	e002      	b.n	8007f18 <__adddf3>
 8007f12:	bf00      	nop

08007f14 <__aeabi_dsub>:
 8007f14:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f18 <__adddf3>:
 8007f18:	b530      	push	{r4, r5, lr}
 8007f1a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f1e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f22:	ea94 0f05 	teq	r4, r5
 8007f26:	bf08      	it	eq
 8007f28:	ea90 0f02 	teqeq	r0, r2
 8007f2c:	bf1f      	itttt	ne
 8007f2e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f32:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f36:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f3a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f3e:	f000 80e2 	beq.w	8008106 <__adddf3+0x1ee>
 8007f42:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f46:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007f4a:	bfb8      	it	lt
 8007f4c:	426d      	neglt	r5, r5
 8007f4e:	dd0c      	ble.n	8007f6a <__adddf3+0x52>
 8007f50:	442c      	add	r4, r5
 8007f52:	ea80 0202 	eor.w	r2, r0, r2
 8007f56:	ea81 0303 	eor.w	r3, r1, r3
 8007f5a:	ea82 0000 	eor.w	r0, r2, r0
 8007f5e:	ea83 0101 	eor.w	r1, r3, r1
 8007f62:	ea80 0202 	eor.w	r2, r0, r2
 8007f66:	ea81 0303 	eor.w	r3, r1, r3
 8007f6a:	2d36      	cmp	r5, #54	; 0x36
 8007f6c:	bf88      	it	hi
 8007f6e:	bd30      	pophi	{r4, r5, pc}
 8007f70:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007f74:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007f78:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007f7c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007f80:	d002      	beq.n	8007f88 <__adddf3+0x70>
 8007f82:	4240      	negs	r0, r0
 8007f84:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007f88:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007f8c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007f90:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007f94:	d002      	beq.n	8007f9c <__adddf3+0x84>
 8007f96:	4252      	negs	r2, r2
 8007f98:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007f9c:	ea94 0f05 	teq	r4, r5
 8007fa0:	f000 80a7 	beq.w	80080f2 <__adddf3+0x1da>
 8007fa4:	f1a4 0401 	sub.w	r4, r4, #1
 8007fa8:	f1d5 0e20 	rsbs	lr, r5, #32
 8007fac:	db0d      	blt.n	8007fca <__adddf3+0xb2>
 8007fae:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007fb2:	fa22 f205 	lsr.w	r2, r2, r5
 8007fb6:	1880      	adds	r0, r0, r2
 8007fb8:	f141 0100 	adc.w	r1, r1, #0
 8007fbc:	fa03 f20e 	lsl.w	r2, r3, lr
 8007fc0:	1880      	adds	r0, r0, r2
 8007fc2:	fa43 f305 	asr.w	r3, r3, r5
 8007fc6:	4159      	adcs	r1, r3
 8007fc8:	e00e      	b.n	8007fe8 <__adddf3+0xd0>
 8007fca:	f1a5 0520 	sub.w	r5, r5, #32
 8007fce:	f10e 0e20 	add.w	lr, lr, #32
 8007fd2:	2a01      	cmp	r2, #1
 8007fd4:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007fd8:	bf28      	it	cs
 8007fda:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007fde:	fa43 f305 	asr.w	r3, r3, r5
 8007fe2:	18c0      	adds	r0, r0, r3
 8007fe4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007fe8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007fec:	d507      	bpl.n	8007ffe <__adddf3+0xe6>
 8007fee:	f04f 0e00 	mov.w	lr, #0
 8007ff2:	f1dc 0c00 	rsbs	ip, ip, #0
 8007ff6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007ffa:	eb6e 0101 	sbc.w	r1, lr, r1
 8007ffe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008002:	d31b      	bcc.n	800803c <__adddf3+0x124>
 8008004:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008008:	d30c      	bcc.n	8008024 <__adddf3+0x10c>
 800800a:	0849      	lsrs	r1, r1, #1
 800800c:	ea5f 0030 	movs.w	r0, r0, rrx
 8008010:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008014:	f104 0401 	add.w	r4, r4, #1
 8008018:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800801c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008020:	f080 809a 	bcs.w	8008158 <__adddf3+0x240>
 8008024:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008028:	bf08      	it	eq
 800802a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800802e:	f150 0000 	adcs.w	r0, r0, #0
 8008032:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008036:	ea41 0105 	orr.w	r1, r1, r5
 800803a:	bd30      	pop	{r4, r5, pc}
 800803c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008040:	4140      	adcs	r0, r0
 8008042:	eb41 0101 	adc.w	r1, r1, r1
 8008046:	3c01      	subs	r4, #1
 8008048:	bf28      	it	cs
 800804a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800804e:	d2e9      	bcs.n	8008024 <__adddf3+0x10c>
 8008050:	f091 0f00 	teq	r1, #0
 8008054:	bf04      	itt	eq
 8008056:	4601      	moveq	r1, r0
 8008058:	2000      	moveq	r0, #0
 800805a:	fab1 f381 	clz	r3, r1
 800805e:	bf08      	it	eq
 8008060:	3320      	addeq	r3, #32
 8008062:	f1a3 030b 	sub.w	r3, r3, #11
 8008066:	f1b3 0220 	subs.w	r2, r3, #32
 800806a:	da0c      	bge.n	8008086 <__adddf3+0x16e>
 800806c:	320c      	adds	r2, #12
 800806e:	dd08      	ble.n	8008082 <__adddf3+0x16a>
 8008070:	f102 0c14 	add.w	ip, r2, #20
 8008074:	f1c2 020c 	rsb	r2, r2, #12
 8008078:	fa01 f00c 	lsl.w	r0, r1, ip
 800807c:	fa21 f102 	lsr.w	r1, r1, r2
 8008080:	e00c      	b.n	800809c <__adddf3+0x184>
 8008082:	f102 0214 	add.w	r2, r2, #20
 8008086:	bfd8      	it	le
 8008088:	f1c2 0c20 	rsble	ip, r2, #32
 800808c:	fa01 f102 	lsl.w	r1, r1, r2
 8008090:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008094:	bfdc      	itt	le
 8008096:	ea41 010c 	orrle.w	r1, r1, ip
 800809a:	4090      	lslle	r0, r2
 800809c:	1ae4      	subs	r4, r4, r3
 800809e:	bfa2      	ittt	ge
 80080a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080a4:	4329      	orrge	r1, r5
 80080a6:	bd30      	popge	{r4, r5, pc}
 80080a8:	ea6f 0404 	mvn.w	r4, r4
 80080ac:	3c1f      	subs	r4, #31
 80080ae:	da1c      	bge.n	80080ea <__adddf3+0x1d2>
 80080b0:	340c      	adds	r4, #12
 80080b2:	dc0e      	bgt.n	80080d2 <__adddf3+0x1ba>
 80080b4:	f104 0414 	add.w	r4, r4, #20
 80080b8:	f1c4 0220 	rsb	r2, r4, #32
 80080bc:	fa20 f004 	lsr.w	r0, r0, r4
 80080c0:	fa01 f302 	lsl.w	r3, r1, r2
 80080c4:	ea40 0003 	orr.w	r0, r0, r3
 80080c8:	fa21 f304 	lsr.w	r3, r1, r4
 80080cc:	ea45 0103 	orr.w	r1, r5, r3
 80080d0:	bd30      	pop	{r4, r5, pc}
 80080d2:	f1c4 040c 	rsb	r4, r4, #12
 80080d6:	f1c4 0220 	rsb	r2, r4, #32
 80080da:	fa20 f002 	lsr.w	r0, r0, r2
 80080de:	fa01 f304 	lsl.w	r3, r1, r4
 80080e2:	ea40 0003 	orr.w	r0, r0, r3
 80080e6:	4629      	mov	r1, r5
 80080e8:	bd30      	pop	{r4, r5, pc}
 80080ea:	fa21 f004 	lsr.w	r0, r1, r4
 80080ee:	4629      	mov	r1, r5
 80080f0:	bd30      	pop	{r4, r5, pc}
 80080f2:	f094 0f00 	teq	r4, #0
 80080f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80080fa:	bf06      	itte	eq
 80080fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008100:	3401      	addeq	r4, #1
 8008102:	3d01      	subne	r5, #1
 8008104:	e74e      	b.n	8007fa4 <__adddf3+0x8c>
 8008106:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800810a:	bf18      	it	ne
 800810c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008110:	d029      	beq.n	8008166 <__adddf3+0x24e>
 8008112:	ea94 0f05 	teq	r4, r5
 8008116:	bf08      	it	eq
 8008118:	ea90 0f02 	teqeq	r0, r2
 800811c:	d005      	beq.n	800812a <__adddf3+0x212>
 800811e:	ea54 0c00 	orrs.w	ip, r4, r0
 8008122:	bf04      	itt	eq
 8008124:	4619      	moveq	r1, r3
 8008126:	4610      	moveq	r0, r2
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	ea91 0f03 	teq	r1, r3
 800812e:	bf1e      	ittt	ne
 8008130:	2100      	movne	r1, #0
 8008132:	2000      	movne	r0, #0
 8008134:	bd30      	popne	{r4, r5, pc}
 8008136:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800813a:	d105      	bne.n	8008148 <__adddf3+0x230>
 800813c:	0040      	lsls	r0, r0, #1
 800813e:	4149      	adcs	r1, r1
 8008140:	bf28      	it	cs
 8008142:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008146:	bd30      	pop	{r4, r5, pc}
 8008148:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800814c:	bf3c      	itt	cc
 800814e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008152:	bd30      	popcc	{r4, r5, pc}
 8008154:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008158:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800815c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008160:	f04f 0000 	mov.w	r0, #0
 8008164:	bd30      	pop	{r4, r5, pc}
 8008166:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800816a:	bf1a      	itte	ne
 800816c:	4619      	movne	r1, r3
 800816e:	4610      	movne	r0, r2
 8008170:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008174:	bf1c      	itt	ne
 8008176:	460b      	movne	r3, r1
 8008178:	4602      	movne	r2, r0
 800817a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800817e:	bf06      	itte	eq
 8008180:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008184:	ea91 0f03 	teqeq	r1, r3
 8008188:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800818c:	bd30      	pop	{r4, r5, pc}
 800818e:	bf00      	nop

08008190 <__aeabi_ui2d>:
 8008190:	f090 0f00 	teq	r0, #0
 8008194:	bf04      	itt	eq
 8008196:	2100      	moveq	r1, #0
 8008198:	4770      	bxeq	lr
 800819a:	b530      	push	{r4, r5, lr}
 800819c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081a4:	f04f 0500 	mov.w	r5, #0
 80081a8:	f04f 0100 	mov.w	r1, #0
 80081ac:	e750      	b.n	8008050 <__adddf3+0x138>
 80081ae:	bf00      	nop

080081b0 <__aeabi_i2d>:
 80081b0:	f090 0f00 	teq	r0, #0
 80081b4:	bf04      	itt	eq
 80081b6:	2100      	moveq	r1, #0
 80081b8:	4770      	bxeq	lr
 80081ba:	b530      	push	{r4, r5, lr}
 80081bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081c4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80081c8:	bf48      	it	mi
 80081ca:	4240      	negmi	r0, r0
 80081cc:	f04f 0100 	mov.w	r1, #0
 80081d0:	e73e      	b.n	8008050 <__adddf3+0x138>
 80081d2:	bf00      	nop

080081d4 <__aeabi_f2d>:
 80081d4:	0042      	lsls	r2, r0, #1
 80081d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80081da:	ea4f 0131 	mov.w	r1, r1, rrx
 80081de:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80081e2:	bf1f      	itttt	ne
 80081e4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80081e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80081ec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80081f0:	4770      	bxne	lr
 80081f2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80081f6:	bf08      	it	eq
 80081f8:	4770      	bxeq	lr
 80081fa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80081fe:	bf04      	itt	eq
 8008200:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008204:	4770      	bxeq	lr
 8008206:	b530      	push	{r4, r5, lr}
 8008208:	f44f 7460 	mov.w	r4, #896	; 0x380
 800820c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008210:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008214:	e71c      	b.n	8008050 <__adddf3+0x138>
 8008216:	bf00      	nop

08008218 <__aeabi_ul2d>:
 8008218:	ea50 0201 	orrs.w	r2, r0, r1
 800821c:	bf08      	it	eq
 800821e:	4770      	bxeq	lr
 8008220:	b530      	push	{r4, r5, lr}
 8008222:	f04f 0500 	mov.w	r5, #0
 8008226:	e00a      	b.n	800823e <__aeabi_l2d+0x16>

08008228 <__aeabi_l2d>:
 8008228:	ea50 0201 	orrs.w	r2, r0, r1
 800822c:	bf08      	it	eq
 800822e:	4770      	bxeq	lr
 8008230:	b530      	push	{r4, r5, lr}
 8008232:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008236:	d502      	bpl.n	800823e <__aeabi_l2d+0x16>
 8008238:	4240      	negs	r0, r0
 800823a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800823e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008242:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008246:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800824a:	f43f aed8 	beq.w	8007ffe <__adddf3+0xe6>
 800824e:	f04f 0203 	mov.w	r2, #3
 8008252:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008256:	bf18      	it	ne
 8008258:	3203      	addne	r2, #3
 800825a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800825e:	bf18      	it	ne
 8008260:	3203      	addne	r2, #3
 8008262:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008266:	f1c2 0320 	rsb	r3, r2, #32
 800826a:	fa00 fc03 	lsl.w	ip, r0, r3
 800826e:	fa20 f002 	lsr.w	r0, r0, r2
 8008272:	fa01 fe03 	lsl.w	lr, r1, r3
 8008276:	ea40 000e 	orr.w	r0, r0, lr
 800827a:	fa21 f102 	lsr.w	r1, r1, r2
 800827e:	4414      	add	r4, r2
 8008280:	e6bd      	b.n	8007ffe <__adddf3+0xe6>
 8008282:	bf00      	nop

08008284 <__aeabi_fmul>:
 8008284:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008288:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800828c:	bf1e      	ittt	ne
 800828e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008292:	ea92 0f0c 	teqne	r2, ip
 8008296:	ea93 0f0c 	teqne	r3, ip
 800829a:	d06f      	beq.n	800837c <__aeabi_fmul+0xf8>
 800829c:	441a      	add	r2, r3
 800829e:	ea80 0c01 	eor.w	ip, r0, r1
 80082a2:	0240      	lsls	r0, r0, #9
 80082a4:	bf18      	it	ne
 80082a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80082aa:	d01e      	beq.n	80082ea <__aeabi_fmul+0x66>
 80082ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80082b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80082b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80082b8:	fba0 3101 	umull	r3, r1, r0, r1
 80082bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80082c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80082c4:	bf3e      	ittt	cc
 80082c6:	0049      	lslcc	r1, r1, #1
 80082c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80082cc:	005b      	lslcc	r3, r3, #1
 80082ce:	ea40 0001 	orr.w	r0, r0, r1
 80082d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80082d6:	2afd      	cmp	r2, #253	; 0xfd
 80082d8:	d81d      	bhi.n	8008316 <__aeabi_fmul+0x92>
 80082da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80082de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80082e2:	bf08      	it	eq
 80082e4:	f020 0001 	biceq.w	r0, r0, #1
 80082e8:	4770      	bx	lr
 80082ea:	f090 0f00 	teq	r0, #0
 80082ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80082f2:	bf08      	it	eq
 80082f4:	0249      	lsleq	r1, r1, #9
 80082f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80082fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80082fe:	3a7f      	subs	r2, #127	; 0x7f
 8008300:	bfc2      	ittt	gt
 8008302:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008306:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800830a:	4770      	bxgt	lr
 800830c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008310:	f04f 0300 	mov.w	r3, #0
 8008314:	3a01      	subs	r2, #1
 8008316:	dc5d      	bgt.n	80083d4 <__aeabi_fmul+0x150>
 8008318:	f112 0f19 	cmn.w	r2, #25
 800831c:	bfdc      	itt	le
 800831e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008322:	4770      	bxle	lr
 8008324:	f1c2 0200 	rsb	r2, r2, #0
 8008328:	0041      	lsls	r1, r0, #1
 800832a:	fa21 f102 	lsr.w	r1, r1, r2
 800832e:	f1c2 0220 	rsb	r2, r2, #32
 8008332:	fa00 fc02 	lsl.w	ip, r0, r2
 8008336:	ea5f 0031 	movs.w	r0, r1, rrx
 800833a:	f140 0000 	adc.w	r0, r0, #0
 800833e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008342:	bf08      	it	eq
 8008344:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008348:	4770      	bx	lr
 800834a:	f092 0f00 	teq	r2, #0
 800834e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008352:	bf02      	ittt	eq
 8008354:	0040      	lsleq	r0, r0, #1
 8008356:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800835a:	3a01      	subeq	r2, #1
 800835c:	d0f9      	beq.n	8008352 <__aeabi_fmul+0xce>
 800835e:	ea40 000c 	orr.w	r0, r0, ip
 8008362:	f093 0f00 	teq	r3, #0
 8008366:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800836a:	bf02      	ittt	eq
 800836c:	0049      	lsleq	r1, r1, #1
 800836e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008372:	3b01      	subeq	r3, #1
 8008374:	d0f9      	beq.n	800836a <__aeabi_fmul+0xe6>
 8008376:	ea41 010c 	orr.w	r1, r1, ip
 800837a:	e78f      	b.n	800829c <__aeabi_fmul+0x18>
 800837c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008380:	ea92 0f0c 	teq	r2, ip
 8008384:	bf18      	it	ne
 8008386:	ea93 0f0c 	teqne	r3, ip
 800838a:	d00a      	beq.n	80083a2 <__aeabi_fmul+0x11e>
 800838c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008390:	bf18      	it	ne
 8008392:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008396:	d1d8      	bne.n	800834a <__aeabi_fmul+0xc6>
 8008398:	ea80 0001 	eor.w	r0, r0, r1
 800839c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083a0:	4770      	bx	lr
 80083a2:	f090 0f00 	teq	r0, #0
 80083a6:	bf17      	itett	ne
 80083a8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80083ac:	4608      	moveq	r0, r1
 80083ae:	f091 0f00 	teqne	r1, #0
 80083b2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80083b6:	d014      	beq.n	80083e2 <__aeabi_fmul+0x15e>
 80083b8:	ea92 0f0c 	teq	r2, ip
 80083bc:	d101      	bne.n	80083c2 <__aeabi_fmul+0x13e>
 80083be:	0242      	lsls	r2, r0, #9
 80083c0:	d10f      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083c2:	ea93 0f0c 	teq	r3, ip
 80083c6:	d103      	bne.n	80083d0 <__aeabi_fmul+0x14c>
 80083c8:	024b      	lsls	r3, r1, #9
 80083ca:	bf18      	it	ne
 80083cc:	4608      	movne	r0, r1
 80083ce:	d108      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083d0:	ea80 0001 	eor.w	r0, r0, r1
 80083d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80083e0:	4770      	bx	lr
 80083e2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083e6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80083ea:	4770      	bx	lr

080083ec <__aeabi_fdiv>:
 80083ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80083f0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80083f4:	bf1e      	ittt	ne
 80083f6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80083fa:	ea92 0f0c 	teqne	r2, ip
 80083fe:	ea93 0f0c 	teqne	r3, ip
 8008402:	d069      	beq.n	80084d8 <__aeabi_fdiv+0xec>
 8008404:	eba2 0203 	sub.w	r2, r2, r3
 8008408:	ea80 0c01 	eor.w	ip, r0, r1
 800840c:	0249      	lsls	r1, r1, #9
 800840e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8008412:	d037      	beq.n	8008484 <__aeabi_fdiv+0x98>
 8008414:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008418:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800841c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008420:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008424:	428b      	cmp	r3, r1
 8008426:	bf38      	it	cc
 8008428:	005b      	lslcc	r3, r3, #1
 800842a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800842e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008432:	428b      	cmp	r3, r1
 8008434:	bf24      	itt	cs
 8008436:	1a5b      	subcs	r3, r3, r1
 8008438:	ea40 000c 	orrcs.w	r0, r0, ip
 800843c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008440:	bf24      	itt	cs
 8008442:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008446:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800844a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800844e:	bf24      	itt	cs
 8008450:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008454:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008458:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800845c:	bf24      	itt	cs
 800845e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008462:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008466:	011b      	lsls	r3, r3, #4
 8008468:	bf18      	it	ne
 800846a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800846e:	d1e0      	bne.n	8008432 <__aeabi_fdiv+0x46>
 8008470:	2afd      	cmp	r2, #253	; 0xfd
 8008472:	f63f af50 	bhi.w	8008316 <__aeabi_fmul+0x92>
 8008476:	428b      	cmp	r3, r1
 8008478:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800847c:	bf08      	it	eq
 800847e:	f020 0001 	biceq.w	r0, r0, #1
 8008482:	4770      	bx	lr
 8008484:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008488:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800848c:	327f      	adds	r2, #127	; 0x7f
 800848e:	bfc2      	ittt	gt
 8008490:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008494:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008498:	4770      	bxgt	lr
 800849a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800849e:	f04f 0300 	mov.w	r3, #0
 80084a2:	3a01      	subs	r2, #1
 80084a4:	e737      	b.n	8008316 <__aeabi_fmul+0x92>
 80084a6:	f092 0f00 	teq	r2, #0
 80084aa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80084ae:	bf02      	ittt	eq
 80084b0:	0040      	lsleq	r0, r0, #1
 80084b2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80084b6:	3a01      	subeq	r2, #1
 80084b8:	d0f9      	beq.n	80084ae <__aeabi_fdiv+0xc2>
 80084ba:	ea40 000c 	orr.w	r0, r0, ip
 80084be:	f093 0f00 	teq	r3, #0
 80084c2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80084c6:	bf02      	ittt	eq
 80084c8:	0049      	lsleq	r1, r1, #1
 80084ca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80084ce:	3b01      	subeq	r3, #1
 80084d0:	d0f9      	beq.n	80084c6 <__aeabi_fdiv+0xda>
 80084d2:	ea41 010c 	orr.w	r1, r1, ip
 80084d6:	e795      	b.n	8008404 <__aeabi_fdiv+0x18>
 80084d8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80084dc:	ea92 0f0c 	teq	r2, ip
 80084e0:	d108      	bne.n	80084f4 <__aeabi_fdiv+0x108>
 80084e2:	0242      	lsls	r2, r0, #9
 80084e4:	f47f af7d 	bne.w	80083e2 <__aeabi_fmul+0x15e>
 80084e8:	ea93 0f0c 	teq	r3, ip
 80084ec:	f47f af70 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 80084f0:	4608      	mov	r0, r1
 80084f2:	e776      	b.n	80083e2 <__aeabi_fmul+0x15e>
 80084f4:	ea93 0f0c 	teq	r3, ip
 80084f8:	d104      	bne.n	8008504 <__aeabi_fdiv+0x118>
 80084fa:	024b      	lsls	r3, r1, #9
 80084fc:	f43f af4c 	beq.w	8008398 <__aeabi_fmul+0x114>
 8008500:	4608      	mov	r0, r1
 8008502:	e76e      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008504:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008508:	bf18      	it	ne
 800850a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800850e:	d1ca      	bne.n	80084a6 <__aeabi_fdiv+0xba>
 8008510:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8008514:	f47f af5c 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 8008518:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800851c:	f47f af3c 	bne.w	8008398 <__aeabi_fmul+0x114>
 8008520:	e75f      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008522:	bf00      	nop

08008524 <__aeabi_f2uiz>:
 8008524:	0042      	lsls	r2, r0, #1
 8008526:	d20e      	bcs.n	8008546 <__aeabi_f2uiz+0x22>
 8008528:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800852c:	d30b      	bcc.n	8008546 <__aeabi_f2uiz+0x22>
 800852e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008532:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8008536:	d409      	bmi.n	800854c <__aeabi_f2uiz+0x28>
 8008538:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800853c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008540:	fa23 f002 	lsr.w	r0, r3, r2
 8008544:	4770      	bx	lr
 8008546:	f04f 0000 	mov.w	r0, #0
 800854a:	4770      	bx	lr
 800854c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008550:	d101      	bne.n	8008556 <__aeabi_f2uiz+0x32>
 8008552:	0242      	lsls	r2, r0, #9
 8008554:	d102      	bne.n	800855c <__aeabi_f2uiz+0x38>
 8008556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800855a:	4770      	bx	lr
 800855c:	f04f 0000 	mov.w	r0, #0
 8008560:	4770      	bx	lr
 8008562:	bf00      	nop

08008564 <Reset_Handler>:
 8008564:	480c      	ldr	r0, [pc, #48]	; (8008598 <Zerobss+0x10>)
 8008566:	4685      	mov	sp, r0
 8008568:	2100      	movs	r1, #0
 800856a:	e003      	b.n	8008574 <DataInit>

0800856c <CopyData>:
 800856c:	4b0b      	ldr	r3, [pc, #44]	; (800859c <Zerobss+0x14>)
 800856e:	585b      	ldr	r3, [r3, r1]
 8008570:	5043      	str	r3, [r0, r1]
 8008572:	3104      	adds	r1, #4

08008574 <DataInit>:
 8008574:	480a      	ldr	r0, [pc, #40]	; (80085a0 <Zerobss+0x18>)
 8008576:	4b0b      	ldr	r3, [pc, #44]	; (80085a4 <Zerobss+0x1c>)
 8008578:	1842      	adds	r2, r0, r1
 800857a:	429a      	cmp	r2, r3
 800857c:	d3f6      	bcc.n	800856c <CopyData>
 800857e:	4a0a      	ldr	r2, [pc, #40]	; (80085a8 <Zerobss+0x20>)
 8008580:	e002      	b.n	8008588 <Zerobss>

08008582 <FillZerobss>:
 8008582:	2300      	movs	r3, #0
 8008584:	f842 3b04 	str.w	r3, [r2], #4

08008588 <Zerobss>:
 8008588:	4b08      	ldr	r3, [pc, #32]	; (80085ac <Zerobss+0x24>)
 800858a:	429a      	cmp	r2, r3
 800858c:	d3f9      	bcc.n	8008582 <FillZerobss>
 800858e:	f008 ff25 	bl	80113dc <SystemInit>
 8008592:	f000 f935 	bl	8008800 <main>
 8008596:	4770      	bx	lr
 8008598:	20018000 	andcs	r8, r1, r0
 800859c:	08015a1c 	stmdaeq	r1, {r2, r3, r4, r9, fp, ip, lr}
 80085a0:	20000000 	andcs	r0, r0, r0
 80085a4:	2000007c 	andcs	r0, r0, ip, ror r0
 80085a8:	20000080 	andcs	r0, r0, r0, lsl #1
 80085ac:	20013900 	andcs	r3, r1, r0, lsl #18

080085b0 <ADC0_1_IRQHandler>:
 80085b0:	e7fe      	b.n	80085b0 <ADC0_1_IRQHandler>

080085b2 <DisplayHandler::~DisplayHandler()>:
 80085b2:	4770      	bx	lr

080085b4 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085b4:	4770      	bx	lr
	...

080085b8 <PixelDmxStartStop::Start()>:
 80085b8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085bc:	4b01      	ldr	r3, [pc, #4]	; (80085c4 <PixelDmxStartStop::Start()+0xc>)
 80085be:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80085c2:	4770      	bx	lr
 80085c4:	40010000 	andmi	r0, r1, r0

080085c8 <PixelDmxStartStop::Stop()>:
 80085c8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085cc:	4b01      	ldr	r3, [pc, #4]	; (80085d4 <PixelDmxStartStop::Stop()+0xc>)
 80085ce:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80085d2:	4770      	bx	lr
 80085d4:	40010000 	andmi	r0, r1, r0

080085d8 <Handler::~Handler()>:
 80085d8:	4770      	bx	lr

080085da <DisplayHandler::~DisplayHandler()>:
 80085da:	b510      	push	{r4, lr}
 80085dc:	4604      	mov	r4, r0
 80085de:	f008 fcd1 	bl	8010f84 <operator delete(void*)>
 80085e2:	4620      	mov	r0, r4
 80085e4:	bd10      	pop	{r4, pc}

080085e6 <Handler::~Handler()>:
 80085e6:	b510      	push	{r4, lr}
 80085e8:	4604      	mov	r4, r0
 80085ea:	f008 fccb 	bl	8010f84 <operator delete(void*)>
 80085ee:	4620      	mov	r0, r4
 80085f0:	bd10      	pop	{r4, pc}

080085f2 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085f2:	b510      	push	{r4, lr}
 80085f4:	4604      	mov	r4, r0
 80085f6:	f008 fcc5 	bl	8010f84 <operator delete(void*)>
 80085fa:	4620      	mov	r0, r4
 80085fc:	bd10      	pop	{r4, pc}
	...

08008600 <Handler::Info(int, unsigned int, unsigned short)>:
 8008600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008604:	461e      	mov	r6, r3
 8008606:	6843      	ldr	r3, [r0, #4]
 8008608:	b088      	sub	sp, #32
 800860a:	4607      	mov	r7, r0
 800860c:	6858      	ldr	r0, [r3, #4]
 800860e:	460c      	mov	r4, r1
 8008610:	4615      	mov	r5, r2
 8008612:	f003 ff9f 	bl	800c554 <PixelType::GetType(pixel::Type)>
 8008616:	4b14      	ldr	r3, [pc, #80]	; (8008668 <Handler::Info(int, unsigned int, unsigned short)+0x68>)
 8008618:	462a      	mov	r2, r5
 800861a:	9301      	str	r3, [sp, #4]
 800861c:	4b13      	ldr	r3, [pc, #76]	; (800866c <Handler::Info(int, unsigned int, unsigned short)+0x6c>)
 800861e:	4621      	mov	r1, r4
 8008620:	9002      	str	r0, [sp, #8]
 8008622:	9300      	str	r3, [sp, #0]
 8008624:	a805      	add	r0, sp, #20
 8008626:	4633      	mov	r3, r6
 8008628:	f003 f874 	bl	800b714 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	f8df 8040 	ldr.w	r8, [pc, #64]	; 8008670 <Handler::Info(int, unsigned int, unsigned short)+0x70>
 8008632:	689b      	ldr	r3, [r3, #8]
 8008634:	462a      	mov	r2, r5
 8008636:	9302      	str	r3, [sp, #8]
 8008638:	4b0e      	ldr	r3, [pc, #56]	; (8008674 <Handler::Info(int, unsigned int, unsigned short)+0x74>)
 800863a:	4621      	mov	r1, r4
 800863c:	9300      	str	r3, [sp, #0]
 800863e:	f8cd 8004 	str.w	r8, [sp, #4]
 8008642:	4633      	mov	r3, r6
 8008644:	a806      	add	r0, sp, #24
 8008646:	f003 f8a3 	bl	800b790 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	462a      	mov	r2, r5
 800864e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008650:	4621      	mov	r1, r4
 8008652:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8008656:	4b08      	ldr	r3, [pc, #32]	; (8008678 <Handler::Info(int, unsigned int, unsigned short)+0x78>)
 8008658:	a807      	add	r0, sp, #28
 800865a:	9300      	str	r3, [sp, #0]
 800865c:	4633      	mov	r3, r6
 800865e:	f003 f897 	bl	800b790 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8008662:	b008      	add	sp, #32
 8008664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008668:	080144e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, lr}
 800866c:	0801324c 	stmdaeq	r1, {r2, r3, r6, r9, ip, sp}
 8008670:	0801325a 	stmdaeq	r1, {r1, r3, r4, r6, r9, ip, sp}
 8008674:	0801325c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, sp}
 8008678:	0801326b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, ip, sp}

0800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 800867c:	b110      	cbz	r0, 8008684 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 800867e:	6803      	ldr	r3, [r0, #0]
 8008680:	6a1b      	ldr	r3, [r3, #32]
 8008682:	4718      	bx	r3
 8008684:	4770      	bx	lr

08008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8008686:	b430      	push	{r4, r5}
 8008688:	b168      	cbz	r0, 80086a6 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800868a:	2300      	movs	r3, #0
 800868c:	7905      	ldrb	r5, [r0, #4]
 800868e:	5cd4      	ldrb	r4, [r2, r3]
 8008690:	b11c      	cbz	r4, 800869a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8008692:	1c5c      	adds	r4, r3, #1
 8008694:	429d      	cmp	r5, r3
 8008696:	4623      	mov	r3, r4
 8008698:	dcf9      	bgt.n	800868e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800869a:	6804      	ldr	r4, [r0, #0]
 800869c:	b2db      	uxtb	r3, r3
 800869e:	69e4      	ldr	r4, [r4, #28]
 80086a0:	46a4      	mov	ip, r4
 80086a2:	bc30      	pop	{r4, r5}
 80086a4:	4760      	bx	ip
 80086a6:	bc30      	pop	{r4, r5}
 80086a8:	4770      	bx	lr

080086aa <Display::PutChar(int) [clone .isra.0]>:
 80086aa:	b110      	cbz	r0, 80086b2 <Display::PutChar(int) [clone .isra.0]+0x8>
 80086ac:	6803      	ldr	r3, [r0, #0]
 80086ae:	695b      	ldr	r3, [r3, #20]
 80086b0:	4718      	bx	r3
 80086b2:	4770      	bx	lr

080086b4 <DisplayHandler::Print(unsigned int)>:
 80086b4:	b538      	push	{r3, r4, r5, lr}
 80086b6:	7903      	ldrb	r3, [r0, #4]
 80086b8:	b1f3      	cbz	r3, 80086f8 <DisplayHandler::Print(unsigned int)+0x44>
 80086ba:	2904      	cmp	r1, #4
 80086bc:	bf98      	it	ls
 80086be:	4b0f      	ldrls	r3, [pc, #60]	; (80086fc <DisplayHandler::Print(unsigned int)+0x48>)
 80086c0:	4d0f      	ldr	r5, [pc, #60]	; (8008700 <DisplayHandler::Print(unsigned int)+0x4c>)
 80086c2:	bf98      	it	ls
 80086c4:	5c5c      	ldrbls	r4, [r3, r1]
 80086c6:	682b      	ldr	r3, [r5, #0]
 80086c8:	bf88      	it	hi
 80086ca:	2455      	movhi	r4, #85	; 0x55
 80086cc:	6998      	ldr	r0, [r3, #24]
 80086ce:	b178      	cbz	r0, 80086f0 <DisplayHandler::Print(unsigned int)+0x3c>
 80086d0:	7901      	ldrb	r1, [r0, #4]
 80086d2:	3901      	subs	r1, #1
 80086d4:	b2c9      	uxtb	r1, r1
 80086d6:	b168      	cbz	r0, 80086f4 <DisplayHandler::Print(unsigned int)+0x40>
 80086d8:	7942      	ldrb	r2, [r0, #5]
 80086da:	3a01      	subs	r2, #1
 80086dc:	b2d2      	uxtb	r2, r2
 80086de:	f7ff ffcd 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086e2:	682b      	ldr	r3, [r5, #0]
 80086e4:	4621      	mov	r1, r4
 80086e6:	6998      	ldr	r0, [r3, #24]
 80086e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086ec:	f7ff bfdd 	b.w	80086aa <Display::PutChar(int) [clone .isra.0]>
 80086f0:	4601      	mov	r1, r0
 80086f2:	e7ee      	b.n	80086d2 <DisplayHandler::Print(unsigned int)+0x1e>
 80086f4:	4602      	mov	r2, r0
 80086f6:	e7f0      	b.n	80086da <DisplayHandler::Print(unsigned int)+0x26>
 80086f8:	bd38      	pop	{r3, r4, r5, pc}
 80086fa:	bf00      	nop
 80086fc:	0801337c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 8008700:	20009b80 	andcs	r9, r0, r0, lsl #23

08008704 <Display::Printf(unsigned char, char const*, ...)>:
 8008704:	b40c      	push	{r2, r3}
 8008706:	b570      	push	{r4, r5, r6, lr}
 8008708:	6984      	ldr	r4, [r0, #24]
 800870a:	4605      	mov	r5, r0
 800870c:	460e      	mov	r6, r1
 800870e:	b08a      	sub	sp, #40	; 0x28
 8008710:	b174      	cbz	r4, 8008730 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8008712:	ab0f      	add	r3, sp, #60	; 0x3c
 8008714:	2120      	movs	r1, #32
 8008716:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008718:	a802      	add	r0, sp, #8
 800871a:	9301      	str	r3, [sp, #4]
 800871c:	f000 fe06 	bl	800932c <vsnprintf>
 8008720:	4604      	mov	r4, r0
 8008722:	69a8      	ldr	r0, [r5, #24]
 8008724:	4631      	mov	r1, r6
 8008726:	6803      	ldr	r3, [r0, #0]
 8008728:	aa02      	add	r2, sp, #8
 800872a:	69dd      	ldr	r5, [r3, #28]
 800872c:	b2a3      	uxth	r3, r4
 800872e:	47a8      	blx	r5
 8008730:	4620      	mov	r0, r4
 8008732:	b00a      	add	sp, #40	; 0x28
 8008734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008738:	b002      	add	sp, #8
 800873a:	4770      	bx	lr

0800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 800873c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008740:	4604      	mov	r4, r0
 8008742:	6980      	ldr	r0, [r0, #24]
 8008744:	460f      	mov	r7, r1
 8008746:	4615      	mov	r5, r2
 8008748:	461e      	mov	r6, r3
 800874a:	b1d8      	cbz	r0, 8008784 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x48>
 800874c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8008750:	2100      	movs	r1, #0
 8008752:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8008756:	fa5f f888 	uxtb.w	r8, r8
 800875a:	4642      	mov	r2, r8
 800875c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008760:	f04f 0b00 	mov.w	fp, #0
 8008764:	f7ff ff8a 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008768:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800876c:	45cb      	cmp	fp, r9
 800876e:	69a0      	ldr	r0, [r4, #24]
 8008770:	d327      	bcc.n	80087c2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x86>
 8008772:	4642      	mov	r2, r8
 8008774:	2100      	movs	r1, #0
 8008776:	f7ff ff81 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800877a:	463a      	mov	r2, r7
 800877c:	4651      	mov	r1, sl
 800877e:	69a0      	ldr	r0, [r4, #24]
 8008780:	f7ff ff81 	bl	8008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008784:	7c63      	ldrb	r3, [r4, #17]
 8008786:	b19b      	cbz	r3, 80087b0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x74>
 8008788:	43ea      	mvns	r2, r5
 800878a:	2312      	movs	r3, #18
 800878c:	7a20      	ldrb	r0, [r4, #8]
 800878e:	f88d 3004 	strb.w	r3, [sp, #4]
 8008792:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008796:	f88d 3005 	strb.w	r3, [sp, #5]
 800879a:	f88d 2006 	strb.w	r2, [sp, #6]
 800879e:	f009 ff0b 	bl	80125b8 <gd32_i2c_set_address>
 80087a2:	68e0      	ldr	r0, [r4, #12]
 80087a4:	f009 ff00 	bl	80125a8 <gd32_i2c_set_baudrate>
 80087a8:	2103      	movs	r1, #3
 80087aa:	a801      	add	r0, sp, #4
 80087ac:	f009 ff0a 	bl	80125c4 <gd32_i2c_write>
 80087b0:	1c73      	adds	r3, r6, #1
 80087b2:	d00c      	beq.n	80087ce <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 80087b4:	4639      	mov	r1, r7
 80087b6:	4630      	mov	r0, r6
 80087b8:	b003      	add	sp, #12
 80087ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087be:	f008 baa1 	b.w	8010d04 <console_status>
 80087c2:	2120      	movs	r1, #32
 80087c4:	f7ff ff71 	bl	80086aa <Display::PutChar(int) [clone .isra.0]>
 80087c8:	f10b 0b01 	add.w	fp, fp, #1
 80087cc:	e7ce      	b.n	800876c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 80087ce:	b003      	add	sp, #12
 80087d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080087d4 <Display::SetSleep(bool)>:
 80087d4:	b538      	push	{r3, r4, r5, lr}
 80087d6:	4604      	mov	r4, r0
 80087d8:	6980      	ldr	r0, [r0, #24]
 80087da:	460d      	mov	r5, r1
 80087dc:	b138      	cbz	r0, 80087ee <Display::SetSleep(bool)+0x1a>
 80087de:	6803      	ldr	r3, [r0, #0]
 80087e0:	7421      	strb	r1, [r4, #16]
 80087e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087e4:	4798      	blx	r3
 80087e6:	b915      	cbnz	r5, 80087ee <Display::SetSleep(bool)+0x1a>
 80087e8:	4b01      	ldr	r3, [pc, #4]	; (80087f0 <Display::SetSleep(bool)+0x1c>)
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	6063      	str	r3, [r4, #4]
 80087ee:	bd38      	pop	{r3, r4, r5, pc}
 80087f0:	20009c84 	andcs	r9, r0, r4, lsl #25

080087f4 <Hardware::RebootHandler()>:
 80087f4:	4b01      	ldr	r3, [pc, #4]	; (80087fc <Hardware::RebootHandler()+0x8>)
 80087f6:	6818      	ldr	r0, [r3, #0]
 80087f8:	f004 bfde 	b.w	800d7b8 <WS28xx::Blackout()>
 80087fc:	20000c94 	mulcs	r0, r4, ip

08008800 <main>:
 8008800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008804:	f5ad 6d87 	sub.w	sp, sp, #1080	; 0x438
 8008808:	a804      	add	r0, sp, #16
 800880a:	f008 fb2f 	bl	8010e6c <Hardware::Hardware()>
 800880e:	a878      	add	r0, sp, #480	; 0x1e0
 8008810:	f005 ffc6 	bl	800e7a0 <Network::Network()>
 8008814:	a815      	add	r0, sp, #84	; 0x54
 8008816:	f008 fad3 	bl	8010dc0 <LedBlink::LedBlink()>
 800881a:	a81b      	add	r0, sp, #108	; 0x6c
 800881c:	f008 f818 	bl	8010850 <Display::Display()>
 8008820:	4aaf      	ldr	r2, [pc, #700]	; (8008ae0 <main+0x2e0>)
 8008822:	4bb0      	ldr	r3, [pc, #704]	; (8008ae4 <main+0x2e4>)
 8008824:	49b0      	ldr	r1, [pc, #704]	; (8008ae8 <main+0x2e8>)
 8008826:	a805      	add	r0, sp, #20
 8008828:	f008 fa84 	bl	8010d34 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800882c:	a808      	add	r0, sp, #32
 800882e:	f007 f831 	bl	800f894 <ConfigStore::ConfigStore()>
 8008832:	49ae      	ldr	r1, [pc, #696]	; (8008aec <main+0x2ec>)
 8008834:	a805      	add	r0, sp, #20
 8008836:	f008 fab5 	bl	8010da4 <FirmwareVersion::Print(char const*)>
 800883a:	2301      	movs	r3, #1
 800883c:	4dac      	ldr	r5, [pc, #688]	; (8008af0 <main+0x2f0>)
 800883e:	2008      	movs	r0, #8
 8008840:	612b      	str	r3, [r5, #16]
 8008842:	f008 fba3 	bl	8010f8c <operator new(unsigned int)>
 8008846:	4bab      	ldr	r3, [pc, #684]	; (8008af4 <main+0x2f4>)
 8008848:	6003      	str	r3, [r0, #0]
 800884a:	4bab      	ldr	r3, [pc, #684]	; (8008af8 <main+0x2f8>)
 800884c:	681b      	ldr	r3, [r3, #0]
 800884e:	2b00      	cmp	r3, #0
 8008850:	bf14      	ite	ne
 8008852:	2201      	movne	r2, #1
 8008854:	2200      	moveq	r2, #0
 8008856:	7102      	strb	r2, [r0, #4]
 8008858:	d004      	beq.n	8008864 <main+0x64>
 800885a:	699b      	ldr	r3, [r3, #24]
 800885c:	3b00      	subs	r3, #0
 800885e:	bf18      	it	ne
 8008860:	2301      	movne	r3, #1
 8008862:	7103      	strb	r3, [r0, #4]
 8008864:	9017      	str	r0, [sp, #92]	; 0x5c
 8008866:	a809      	add	r0, sp, #36	; 0x24
 8008868:	f007 f9ee 	bl	800fc48 <StoreOscServer::StoreOscServer()>
 800886c:	a909      	add	r1, sp, #36	; 0x24
 800886e:	a8aa      	add	r0, sp, #680	; 0x2a8
 8008870:	f002 fc10 	bl	800b094 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8008874:	a851      	add	r0, sp, #324	; 0x144
 8008876:	f002 f913 	bl	800aaa0 <OscServer::OscServer()>
 800887a:	a8aa      	add	r0, sp, #680	; 0x2a8
 800887c:	f002 fc1a 	bl	800b0b4 <OSCServerParams::Load()>
 8008880:	b130      	cbz	r0, 8008890 <main+0x90>
 8008882:	a8aa      	add	r0, sp, #680	; 0x2a8
 8008884:	f002 fdad 	bl	800b3e2 <OSCServerParams::Dump()>
 8008888:	a951      	add	r1, sp, #324	; 0x144
 800888a:	a8aa      	add	r0, sp, #680	; 0x2a8
 800888c:	f002 fcbc 	bl	800b208 <OSCServerParams::Set(OscServer*)>
 8008890:	2600      	movs	r6, #0
 8008892:	2401      	movs	r4, #1
 8008894:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008898:	2303      	movs	r3, #3
 800889a:	4998      	ldr	r1, [pc, #608]	; (8008afc <main+0x2fc>)
 800889c:	a81b      	add	r0, sp, #108	; 0x6c
 800889e:	f7ff ff4d 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80088a2:	a80d      	add	r0, sp, #52	; 0x34
 80088a4:	f007 f998 	bl	800fbd8 <StoreNetwork::StoreNetwork()>
 80088a8:	ab0e      	add	r3, sp, #56	; 0x38
 80088aa:	a90d      	add	r1, sp, #52	; 0x34
 80088ac:	a878      	add	r0, sp, #480	; 0x1e0
 80088ae:	93a6      	str	r3, [sp, #664]	; 0x298
 80088b0:	f005 ffca 	bl	800e848 <Network::Init(NetworkParamsStore*)>
 80088b4:	a878      	add	r0, sp, #480	; 0x1e0
 80088b6:	f006 f8ff 	bl	800eab8 <Network::Print()>
 80088ba:	2303      	movs	r3, #3
 80088bc:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80088c0:	498f      	ldr	r1, [pc, #572]	; (8008b00 <main+0x300>)
 80088c2:	a81b      	add	r0, sp, #108	; 0x6c
 80088c4:	f7ff ff3a 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80088c8:	a806      	add	r0, sp, #24
 80088ca:	f005 fbab 	bl	800e024 <MDNS::MDNS()>
 80088ce:	a806      	add	r0, sp, #24
 80088d0:	f005 fc68 	bl	800e1a4 <MDNS::Start()>
 80088d4:	4b8b      	ldr	r3, [pc, #556]	; (8008b04 <main+0x304>)
 80088d6:	4631      	mov	r1, r6
 80088d8:	4a8b      	ldr	r2, [pc, #556]	; (8008b08 <main+0x308>)
 80088da:	9301      	str	r3, [sp, #4]
 80088dc:	9600      	str	r6, [sp, #0]
 80088de:	f8bd 3144 	ldrh.w	r3, [sp, #324]	; 0x144
 80088e2:	a806      	add	r0, sp, #24
 80088e4:	f005 fdc8 	bl	800e478 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80088e8:	4b88      	ldr	r3, [pc, #544]	; (8008b0c <main+0x30c>)
 80088ea:	4631      	mov	r1, r6
 80088ec:	4a88      	ldr	r2, [pc, #544]	; (8008b10 <main+0x310>)
 80088ee:	9301      	str	r3, [sp, #4]
 80088f0:	9400      	str	r4, [sp, #0]
 80088f2:	2350      	movs	r3, #80	; 0x50
 80088f4:	a806      	add	r0, sp, #24
 80088f6:	f005 fdbf 	bl	800e478 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80088fa:	a806      	add	r0, sp, #24
 80088fc:	f005 ff02 	bl	800e704 <MDNS::Print()>
 8008900:	a83b      	add	r0, sp, #236	; 0xec
 8008902:	f001 fce3 	bl	800a2cc <HttpDaemon::HttpDaemon()>
 8008906:	a83b      	add	r0, sp, #236	; 0xec
 8008908:	f001 fcf4 	bl	800a2f4 <HttpDaemon::Start()>
 800890c:	4981      	ldr	r1, [pc, #516]	; (8008b14 <main+0x314>)
 800890e:	2303      	movs	r3, #3
 8008910:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008914:	a81b      	add	r0, sp, #108	; 0x6c
 8008916:	f7ff ff11 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800891a:	23aa      	movs	r3, #170	; 0xaa
 800891c:	2203      	movs	r2, #3
 800891e:	e9cd 2345 	strd	r2, r3, [sp, #276]	; 0x114
 8008922:	2206      	movs	r2, #6
 8008924:	e9cd 2647 	strd	r2, r6, [sp, #284]	; 0x11c
 8008928:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800892c:	9249      	str	r2, [sp, #292]	; 0x124
 800892e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008932:	f8ad 2128 	strh.w	r2, [sp, #296]	; 0x128
 8008936:	4a78      	ldr	r2, [pc, #480]	; (8008b18 <main+0x318>)
 8008938:	a80f      	add	r0, sp, #60	; 0x3c
 800893a:	e9cd 244b 	strd	r2, r4, [sp, #300]	; 0x12c
 800893e:	e9cd 434d 	strd	r4, r3, [sp, #308]	; 0x134
 8008942:	f8ad 4140 	strh.w	r4, [sp, #320]	; 0x140
 8008946:	f007 fab9 	bl	800febc <StorePixelDmx::StorePixelDmx()>
 800894a:	a90f      	add	r1, sp, #60	; 0x3c
 800894c:	a822      	add	r0, sp, #136	; 0x88
 800894e:	f003 f9ad 	bl	800bcac <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8008952:	a822      	add	r0, sp, #136	; 0x88
 8008954:	f003 f9c0 	bl	800bcd8 <PixelDmxParams::Load()>
 8008958:	b130      	cbz	r0, 8008968 <main+0x168>
 800895a:	a822      	add	r0, sp, #136	; 0x88
 800895c:	a945      	add	r1, sp, #276	; 0x114
 800895e:	f003 fcb4 	bl	800c2ca <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8008962:	a822      	add	r0, sp, #136	; 0x88
 8008964:	f003 fcee 	bl	800c344 <PixelDmxParams::Dump()>
 8008968:	ab11      	add	r3, sp, #68	; 0x44
 800896a:	2101      	movs	r1, #1
 800896c:	aa0a      	add	r2, sp, #40	; 0x28
 800896e:	a845      	add	r0, sp, #276	; 0x114
 8008970:	f002 ff3a 	bl	800b7e8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 8008974:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
 8008976:	2b01      	cmp	r3, #1
 8008978:	d909      	bls.n	800898e <main+0x18e>
 800897a:	994d      	ldr	r1, [sp, #308]	; 0x134
 800897c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800897e:	024b      	lsls	r3, r1, #9
 8008980:	ebb2 2f41 	cmp.w	r2, r1, lsl #9
 8008984:	bf94      	ite	ls
 8008986:	fbb3 f3f2 	udivls	r3, r3, r2
 800898a:	23aa      	movhi	r3, #170	; 0xaa
 800898c:	9346      	str	r3, [sp, #280]	; 0x118
 800898e:	a945      	add	r1, sp, #276	; 0x114
 8008990:	a861      	add	r0, sp, #388	; 0x184
 8008992:	f003 f897 	bl	800bac4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 8008996:	f89d 409c 	ldrb.w	r4, [sp, #156]	; 0x9c
 800899a:	ab10      	add	r3, sp, #64	; 0x40
 800899c:	2101      	movs	r1, #1
 800899e:	a807      	add	r0, sp, #28
 80089a0:	9375      	str	r3, [sp, #468]	; 0x1d4
 80089a2:	f003 fef5 	bl	800c790 <PixelPatterns::PixelPatterns(unsigned int)>
 80089a6:	4b5d      	ldr	r3, [pc, #372]	; (8008b1c <main+0x31c>)
 80089a8:	2c05      	cmp	r4, #5
 80089aa:	601c      	str	r4, [r3, #0]
 80089ac:	f340 8170 	ble.w	8008c90 <main+0x490>
 80089b0:	4b5b      	ldr	r3, [pc, #364]	; (8008b20 <main+0x320>)
 80089b2:	2110      	movs	r1, #16
 80089b4:	2203      	movs	r2, #3
 80089b6:	485b      	ldr	r0, [pc, #364]	; (8008b24 <main+0x324>)
 80089b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80089ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80089be:	f009 f9f7 	bl	8011db0 <gpio_init>
 80089c2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80089c6:	4b58      	ldr	r3, [pc, #352]	; (8008b28 <main+0x328>)
 80089c8:	9845      	ldr	r0, [sp, #276]	; 0x114
 80089ca:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80089ce:	ae0b      	add	r6, sp, #44	; 0x2c
 80089d0:	9676      	str	r6, [sp, #472]	; 0x1d8
 80089d2:	f003 fdbf 	bl	800c554 <PixelType::GetType(pixel::Type)>
 80089d6:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 80089d8:	4603      	mov	r3, r0
 80089da:	9201      	str	r2, [sp, #4]
 80089dc:	9a46      	ldr	r2, [sp, #280]	; 0x118
 80089de:	2107      	movs	r1, #7
 80089e0:	9200      	str	r2, [sp, #0]
 80089e2:	a81b      	add	r0, sp, #108	; 0x6c
 80089e4:	4a51      	ldr	r2, [pc, #324]	; (8008b2c <main+0x32c>)
 80089e6:	f7ff fe8d 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 80089ea:	ac61      	add	r4, sp, #388	; 0x184
 80089ec:	2008      	movs	r0, #8
 80089ee:	945e      	str	r4, [sp, #376]	; 0x178
 80089f0:	f008 facc 	bl	8010f8c <operator new(unsigned int)>
 80089f4:	4b4e      	ldr	r3, [pc, #312]	; (8008b30 <main+0x330>)
 80089f6:	905d      	str	r0, [sp, #372]	; 0x174
 80089f8:	e9c0 3400 	strd	r3, r4, [r0]
 80089fc:	a851      	add	r0, sp, #324	; 0x144
 80089fe:	f002 fab5 	bl	800af6c <OscServer::Print()>
 8008a02:	a862      	add	r0, sp, #392	; 0x188
 8008a04:	f002 ff30 	bl	800b868 <PixelDmxConfiguration::Print()>
 8008a08:	2401      	movs	r4, #1
 8008a0a:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008a0c:	b2e1      	uxtb	r1, r4
 8008a0e:	b110      	cbz	r0, 8008a16 <main+0x216>
 8008a10:	6803      	ldr	r3, [r0, #0]
 8008a12:	691b      	ldr	r3, [r3, #16]
 8008a14:	4798      	blx	r3
 8008a16:	3401      	adds	r4, #1
 8008a18:	2c07      	cmp	r4, #7
 8008a1a:	d1f6      	bne.n	8008a0a <main+0x20a>
 8008a1c:	2101      	movs	r1, #1
 8008a1e:	4a45      	ldr	r2, [pc, #276]	; (8008b34 <main+0x334>)
 8008a20:	a81b      	add	r0, sp, #108	; 0x6c
 8008a22:	f7ff fe6f 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a26:	2102      	movs	r1, #2
 8008a28:	4a43      	ldr	r2, [pc, #268]	; (8008b38 <main+0x338>)
 8008a2a:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008a2c:	f7ff fe2b 	bl	8008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008a30:	f89d 41e5 	ldrb.w	r4, [sp, #485]	; 0x1e5
 8008a34:	4b41      	ldr	r3, [pc, #260]	; (8008b3c <main+0x33c>)
 8008a36:	2c00      	cmp	r4, #0
 8008a38:	bf14      	ite	ne
 8008a3a:	2444      	movne	r4, #68	; 0x44
 8008a3c:	2453      	moveq	r4, #83	; 0x53
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	695b      	ldr	r3, [r3, #20]
 8008a42:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8008a46:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008a4a:	0e18      	lsrs	r0, r3, #24
 8008a4c:	e9cd 2100 	strd	r2, r1, [sp]
 8008a50:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008a54:	2103      	movs	r1, #3
 8008a56:	4a3a      	ldr	r2, [pc, #232]	; (8008b40 <main+0x340>)
 8008a58:	b2db      	uxtb	r3, r3
 8008a5a:	a81b      	add	r0, sp, #108	; 0x6c
 8008a5c:	f7ff fe52 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a60:	2104      	movs	r1, #4
 8008a62:	f8bd 3144 	ldrh.w	r3, [sp, #324]	; 0x144
 8008a66:	4a37      	ldr	r2, [pc, #220]	; (8008b44 <main+0x344>)
 8008a68:	a81b      	add	r0, sp, #108	; 0x6c
 8008a6a:	f7ff fe4b 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a6e:	2105      	movs	r1, #5
 8008a70:	f8bd 3146 	ldrh.w	r3, [sp, #326]	; 0x146
 8008a74:	4a34      	ldr	r2, [pc, #208]	; (8008b48 <main+0x348>)
 8008a76:	a81b      	add	r0, sp, #108	; 0x6c
 8008a78:	f7ff fe44 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a7c:	2301      	movs	r3, #1
 8008a7e:	2203      	movs	r2, #3
 8008a80:	2102      	movs	r1, #2
 8008a82:	a829      	add	r0, sp, #164	; 0xa4
 8008a84:	f000 ff66 	bl	8009954 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008a88:	a80c      	add	r0, sp, #48	; 0x30
 8008a8a:	f007 f913 	bl	800fcb4 <StoreRemoteConfig::StoreRemoteConfig()>
 8008a8e:	a90c      	add	r1, sp, #48	; 0x30
 8008a90:	a832      	add	r0, sp, #200	; 0xc8
 8008a92:	f001 fa05 	bl	8009ea0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008a96:	a832      	add	r0, sp, #200	; 0xc8
 8008a98:	f001 fa0c 	bl	8009eb4 <RemoteConfigParams::Load()>
 8008a9c:	b130      	cbz	r0, 8008aac <main+0x2ac>
 8008a9e:	a832      	add	r0, sp, #200	; 0xc8
 8008aa0:	f001 fb4f 	bl	800a142 <RemoteConfigParams::Dump()>
 8008aa4:	a929      	add	r1, sp, #164	; 0xa4
 8008aa6:	a832      	add	r0, sp, #200	; 0xc8
 8008aa8:	f001 fb2b 	bl	800a102 <RemoteConfigParams::Set(RemoteConfig*)>
 8008aac:	a808      	add	r0, sp, #32
 8008aae:	f006 ff99 	bl	800f9e4 <ConfigStore::Flash()>
 8008ab2:	2800      	cmp	r0, #0
 8008ab4:	d1fa      	bne.n	8008aac <main+0x2ac>
 8008ab6:	2303      	movs	r3, #3
 8008ab8:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008abc:	4923      	ldr	r1, [pc, #140]	; (8008b4c <main+0x34c>)
 8008abe:	a81b      	add	r0, sp, #108	; 0x6c
 8008ac0:	f7ff fe3c 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ac4:	a851      	add	r0, sp, #324	; 0x144
 8008ac6:	f002 f855 	bl	800ab74 <OscServer::Start()>
 8008aca:	2302      	movs	r3, #2
 8008acc:	f248 0280 	movw	r2, #32896	; 0x8080
 8008ad0:	491f      	ldr	r1, [pc, #124]	; (8008b50 <main+0x350>)
 8008ad2:	a81b      	add	r0, sp, #108	; 0x6c
 8008ad4:	f7ff fe32 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ad8:	2102      	movs	r1, #2
 8008ada:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008ade:	e039      	b.n	8008b54 <main+0x354>
 8008ae0:	08013285 	stmdaeq	r1, {r0, r2, r7, r9, ip, sp}
 8008ae4:	0801327c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, ip, sp}
 8008ae8:	08013381 	stmdaeq	r1, {r0, r7, r8, r9, ip, sp}
 8008aec:	08013291 	stmdaeq	r1, {r0, r4, r7, r9, ip, sp}
 8008af0:	40011000 	andmi	r1, r1, r0
 8008af4:	0801333c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, sp}
 8008af8:	20009b80 	andcs	r9, r0, r0, lsl #23
 8008afc:	08015243 	stmdaeq	r1, {r0, r1, r6, r9, ip, lr}
 8008b00:	08015232 	stmdaeq	r1, {r1, r4, r5, r9, ip, lr}
 8008b04:	080132cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, ip, sp}
 8008b08:	080132c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, ip, sp}
 8008b0c:	080132de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, ip, sp}
 8008b10:	080132d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, ip, sp}
 8008b14:	080145d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, lr}
 8008b18:	08013385 	stmdaeq	r1, {r0, r2, r7, r8, r9, ip, sp}
 8008b1c:	20000c8c 	andcs	r0, r0, ip, lsl #25
 8008b20:	08013350 	stmdaeq	r1, {r4, r6, r8, r9, ip, sp}
 8008b24:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008b28:	40010000 	andmi	r0, r1, r0
 8008b2c:	080132ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, ip, sp}
 8008b30:	08013368 	stmdaeq	r1, {r3, r5, r6, r8, r9, ip, sp}
 8008b34:	080132f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, ip, sp}
 8008b38:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 8008b3c:	20008564 	andcs	r8, r0, r4, ror #10
 8008b40:	0801330f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, ip, sp}
 8008b44:	08013322 	stmdaeq	r1, {r1, r5, r8, r9, ip, sp}
 8008b48:	08013329 	stmdaeq	r1, {r0, r3, r5, r8, r9, ip, sp}
 8008b4c:	080145bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, lr}
 8008b50:	080145ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, lr}
 8008b54:	f009 f902 	bl	8011d5c <fwdgt_config>
 8008b58:	2801      	cmp	r0, #1
 8008b5a:	bf0c      	ite	eq
 8008b5c:	2301      	moveq	r3, #1
 8008b5e:	2300      	movne	r3, #0
 8008b60:	f88d 3010 	strb.w	r3, [sp, #16]
 8008b64:	d101      	bne.n	8008b6a <main+0x36a>
 8008b66:	f009 f8e9 	bl	8011d3c <fwdgt_enable>
 8008b6a:	4e52      	ldr	r6, [pc, #328]	; (8008cb4 <main+0x4b4>)
 8008b6c:	4c52      	ldr	r4, [pc, #328]	; (8008cb8 <main+0x4b8>)
 8008b6e:	f009 f8ed 	bl	8011d4c <fwdgt_counter_reload>
 8008b72:	f7fe fcd5 	bl	8007520 <net_handle>
 8008b76:	a851      	add	r0, sp, #324	; 0x144
 8008b78:	f002 f8ac 	bl	800acd4 <OscServer::Run()>
 8008b7c:	a829      	add	r0, sp, #164	; 0xa4
 8008b7e:	f001 f867 	bl	8009c50 <RemoteConfig::Run()>
 8008b82:	a808      	add	r0, sp, #32
 8008b84:	f006 ff2e 	bl	800f9e4 <ConfigStore::Flash()>
 8008b88:	6833      	ldr	r3, [r6, #0]
 8008b8a:	b113      	cbz	r3, 8008b92 <main+0x392>
 8008b8c:	a807      	add	r0, sp, #28
 8008b8e:	f004 f82d 	bl	800cbec <PixelPatterns::Run()>
 8008b92:	a806      	add	r0, sp, #24
 8008b94:	f005 fd92 	bl	800e6bc <MDNS::Run()>
 8008b98:	a83b      	add	r0, sp, #236	; 0xec
 8008b9a:	f001 fe17 	bl	800a7cc <HttpDaemon::Run()>
 8008b9e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8008ba0:	b162      	cbz	r2, 8008bbc <main+0x3bc>
 8008ba2:	f89d 307c 	ldrb.w	r3, [sp, #124]	; 0x7c
 8008ba6:	2b00      	cmp	r3, #0
 8008ba8:	d16c      	bne.n	8008c84 <main+0x484>
 8008baa:	6823      	ldr	r3, [r4, #0]
 8008bac:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008bae:	1a5b      	subs	r3, r3, r1
 8008bb0:	429a      	cmp	r2, r3
 8008bb2:	d203      	bcs.n	8008bbc <main+0x3bc>
 8008bb4:	2101      	movs	r1, #1
 8008bb6:	a81b      	add	r0, sp, #108	; 0x6c
 8008bb8:	f7ff fe0c 	bl	80087d4 <Display::SetSleep(bool)>
 8008bbc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008bbe:	2a00      	cmp	r2, #0
 8008bc0:	d0d5      	beq.n	8008b6e <main+0x36e>
 8008bc2:	6823      	ldr	r3, [r4, #0]
 8008bc4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008bc6:	1a5b      	subs	r3, r3, r1
 8008bc8:	429a      	cmp	r2, r3
 8008bca:	d8d0      	bhi.n	8008b6e <main+0x36e>
 8008bcc:	6823      	ldr	r3, [r4, #0]
 8008bce:	931a      	str	r3, [sp, #104]	; 0x68
 8008bd0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008bd2:	2b01      	cmp	r3, #1
 8008bd4:	f083 0201 	eor.w	r2, r3, #1
 8008bd8:	bf18      	it	ne
 8008bda:	2301      	movne	r3, #1
 8008bdc:	9219      	str	r2, [sp, #100]	; 0x64
 8008bde:	bf14      	ite	ne
 8008be0:	612b      	strne	r3, [r5, #16]
 8008be2:	616b      	streq	r3, [r5, #20]
 8008be4:	e7c3      	b.n	8008b6e <main+0x36e>
 8008be6:	2300      	movs	r3, #0
 8008be8:	2264      	movs	r2, #100	; 0x64
 8008bea:	4619      	mov	r1, r3
 8008bec:	a807      	add	r0, sp, #28
 8008bee:	f003 fdef 	bl	800c7d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bf2:	e6dd      	b.n	80089b0 <main+0x1b0>
 8008bf4:	2200      	movs	r2, #0
 8008bf6:	2364      	movs	r3, #100	; 0x64
 8008bf8:	4611      	mov	r1, r2
 8008bfa:	e9cd 3200 	strd	r3, r2, [sp]
 8008bfe:	a807      	add	r0, sp, #28
 8008c00:	4b2e      	ldr	r3, [pc, #184]	; (8008cbc <main+0x4bc>)
 8008c02:	f003 fdf9 	bl	800c7f8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c06:	e6d3      	b.n	80089b0 <main+0x1b0>
 8008c08:	2100      	movs	r1, #0
 8008c0a:	2364      	movs	r3, #100	; 0x64
 8008c0c:	4a2b      	ldr	r2, [pc, #172]	; (8008cbc <main+0x4bc>)
 8008c0e:	9100      	str	r1, [sp, #0]
 8008c10:	a807      	add	r0, sp, #28
 8008c12:	f003 fe0d 	bl	800c830 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c16:	e6cb      	b.n	80089b0 <main+0x1b0>
 8008c18:	2364      	movs	r3, #100	; 0x64
 8008c1a:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008c1e:	2100      	movs	r1, #0
 8008c20:	a807      	add	r0, sp, #28
 8008c22:	f003 fe1f 	bl	800c864 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008c26:	e6c3      	b.n	80089b0 <main+0x1b0>
 8008c28:	2200      	movs	r2, #0
 8008c2a:	2364      	movs	r3, #100	; 0x64
 8008c2c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008c30:	230a      	movs	r3, #10
 8008c32:	4611      	mov	r1, r2
 8008c34:	9300      	str	r3, [sp, #0]
 8008c36:	a807      	add	r0, sp, #28
 8008c38:	4b20      	ldr	r3, [pc, #128]	; (8008cbc <main+0x4bc>)
 8008c3a:	f003 fe45 	bl	800c8c8 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c3e:	e6b7      	b.n	80089b0 <main+0x1b0>
 8008c40:	2400      	movs	r4, #0
 8008c42:	4626      	mov	r6, r4
 8008c44:	4b1e      	ldr	r3, [pc, #120]	; (8008cc0 <main+0x4c0>)
 8008c46:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8008cc4 <main+0x4c4>
 8008c4a:	4f1f      	ldr	r7, [pc, #124]	; (8008cc8 <main+0x4c8>)
 8008c4c:	61dc      	str	r4, [r3, #28]
 8008c4e:	683b      	ldr	r3, [r7, #0]
 8008c50:	f8d8 0000 	ldr.w	r0, [r8]
 8008c54:	429c      	cmp	r4, r3
 8008c56:	d302      	bcc.n	8008c5e <main+0x45e>
 8008c58:	f004 fd92 	bl	800d780 <WS28xx::Update()>
 8008c5c:	e6a8      	b.n	80089b0 <main+0x1b0>
 8008c5e:	6803      	ldr	r3, [r0, #0]
 8008c60:	2b07      	cmp	r3, #7
 8008c62:	d007      	beq.n	8008c74 <main+0x474>
 8008c64:	2300      	movs	r3, #0
 8008c66:	4621      	mov	r1, r4
 8008c68:	461a      	mov	r2, r3
 8008c6a:	9600      	str	r6, [sp, #0]
 8008c6c:	f003 ffe6 	bl	800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008c70:	3401      	adds	r4, #1
 8008c72:	e7ec      	b.n	8008c4e <main+0x44e>
 8008c74:	2300      	movs	r3, #0
 8008c76:	4621      	mov	r1, r4
 8008c78:	461a      	mov	r2, r3
 8008c7a:	e9cd 6600 	strd	r6, r6, [sp]
 8008c7e:	f004 fc0f 	bl	800d4a0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008c82:	e7f5      	b.n	8008c70 <main+0x470>
 8008c84:	f007 fd62 	bl	801074c <display::timeout::gpio_renew()>
 8008c88:	2800      	cmp	r0, #0
 8008c8a:	d097      	beq.n	8008bbc <main+0x3bc>
 8008c8c:	2100      	movs	r1, #0
 8008c8e:	e792      	b.n	8008bb6 <main+0x3b6>
 8008c90:	2c05      	cmp	r4, #5
 8008c92:	f63f ae8d 	bhi.w	80089b0 <main+0x1b0>
 8008c96:	a301      	add	r3, pc, #4	; (adr r3, 8008c9c <main+0x49c>)
 8008c98:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 8008c9c:	08008c41 	stmdaeq	r0, {r0, r6, sl, fp, pc}
 8008ca0:	08008be7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, r9, fp, pc}
 8008ca4:	08008bf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, pc}
 8008ca8:	08008c09 	stmdaeq	r0, {r0, r3, sl, fp, pc}
 8008cac:	08008c19 	stmdaeq	r0, {r0, r3, r4, sl, fp, pc}
 8008cb0:	08008c29 	stmdaeq	r0, {r0, r3, r5, sl, fp, pc}
 8008cb4:	20000c8c 	andcs	r0, r0, ip, lsl #25
 8008cb8:	20009c84 	andcs	r9, r0, r4, lsl #25
 8008cbc:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008cc0:	20000c5c 	andcs	r0, r0, ip, asr ip
 8008cc4:	20000c88 	andcs	r0, r0, r8, lsl #25
 8008cc8:	20000c84 	andcs	r0, r0, r4, lsl #25

08008ccc <Handler::Update()>:
 8008ccc:	2100      	movs	r1, #0
 8008cce:	6840      	ldr	r0, [r0, #4]
 8008cd0:	f002 be01 	b.w	800b8d6 <WS28xxDmx::Blackout(bool)>

08008cd4 <Handler::Blackout()>:
 8008cd4:	2101      	movs	r1, #1
 8008cd6:	6840      	ldr	r0, [r0, #4]
 8008cd8:	f002 bdfd 	b.w	800b8d6 <WS28xxDmx::Blackout(bool)>

08008cdc <network::display_emac_start()>:
 8008cdc:	4770      	bx	lr

08008cde <network::display_ip()>:
 8008cde:	4770      	bx	lr

08008ce0 <network::display_emac_shutdown()>:
 8008ce0:	4770      	bx	lr

08008ce2 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 8008ce2:	4770      	bx	lr

08008ce4 <_itostr>:
 8008ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ce6:	0fc7      	lsrs	r7, r0, #31
 8008ce8:	b091      	sub	sp, #68	; 0x44
 8008cea:	bf18      	it	ne
 8008cec:	4240      	negne	r0, r0
 8008cee:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008cf2:	b9c8      	cbnz	r0, 8008d28 <_itostr+0x44>
 8008cf4:	2330      	movs	r3, #48	; 0x30
 8008cf6:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008cfa:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008cfe:	b132      	cbz	r2, 8008d0e <_itostr+0x2a>
 8008d00:	4668      	mov	r0, sp
 8008d02:	2530      	movs	r5, #48	; 0x30
 8008d04:	1ae6      	subs	r6, r4, r3
 8008d06:	4296      	cmp	r6, r2
 8008d08:	da01      	bge.n	8008d0e <_itostr+0x2a>
 8008d0a:	4283      	cmp	r3, r0
 8008d0c:	d81c      	bhi.n	8008d48 <_itostr+0x64>
 8008d0e:	b117      	cbz	r7, 8008d16 <_itostr+0x32>
 8008d10:	222d      	movs	r2, #45	; 0x2d
 8008d12:	f803 2901 	strb.w	r2, [r3], #-1
 8008d16:	3301      	adds	r3, #1
 8008d18:	1ae0      	subs	r0, r4, r3
 8008d1a:	3901      	subs	r1, #1
 8008d1c:	aa10      	add	r2, sp, #64	; 0x40
 8008d1e:	4293      	cmp	r3, r2
 8008d20:	d315      	bcc.n	8008d4e <_itostr+0x6a>
 8008d22:	3001      	adds	r0, #1
 8008d24:	b011      	add	sp, #68	; 0x44
 8008d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d28:	4623      	mov	r3, r4
 8008d2a:	250a      	movs	r5, #10
 8008d2c:	46ec      	mov	ip, sp
 8008d2e:	fb90 f6f5 	sdiv	r6, r0, r5
 8008d32:	fb05 0016 	mls	r0, r5, r6, r0
 8008d36:	3030      	adds	r0, #48	; 0x30
 8008d38:	f803 0901 	strb.w	r0, [r3], #-1
 8008d3c:	4630      	mov	r0, r6
 8008d3e:	2e00      	cmp	r6, #0
 8008d40:	d0dd      	beq.n	8008cfe <_itostr+0x1a>
 8008d42:	4563      	cmp	r3, ip
 8008d44:	d1f3      	bne.n	8008d2e <_itostr+0x4a>
 8008d46:	e7da      	b.n	8008cfe <_itostr+0x1a>
 8008d48:	f803 5901 	strb.w	r5, [r3], #-1
 8008d4c:	e7da      	b.n	8008d04 <_itostr+0x20>
 8008d4e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008d52:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008d56:	e7e1      	b.n	8008d1c <_itostr+0x38>

08008d58 <_xputch>:
 8008d58:	4603      	mov	r3, r0
 8008d5a:	b410      	push	{r4}
 8008d5c:	4c08      	ldr	r4, [pc, #32]	; (8008d80 <_xputch+0x28>)
 8008d5e:	68da      	ldr	r2, [r3, #12]
 8008d60:	4608      	mov	r0, r1
 8008d62:	6821      	ldr	r1, [r4, #0]
 8008d64:	3201      	adds	r2, #1
 8008d66:	60da      	str	r2, [r3, #12]
 8008d68:	b139      	cbz	r1, 8008d7a <_xputch+0x22>
 8008d6a:	691b      	ldr	r3, [r3, #16]
 8008d6c:	429a      	cmp	r2, r3
 8008d6e:	da02      	bge.n	8008d76 <_xputch+0x1e>
 8008d70:	1c4b      	adds	r3, r1, #1
 8008d72:	6023      	str	r3, [r4, #0]
 8008d74:	7008      	strb	r0, [r1, #0]
 8008d76:	bc10      	pop	{r4}
 8008d78:	4770      	bx	lr
 8008d7a:	bc10      	pop	{r4}
 8008d7c:	f007 bf8a 	b.w	8010c94 <console_putc>
 8008d80:	20000080 	andcs	r0, r0, r0, lsl #1

08008d84 <_format_int>:
 8008d84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008d88:	4698      	mov	r8, r3
 8008d8a:	b091      	sub	sp, #68	; 0x44
 8008d8c:	ea52 0308 	orrs.w	r3, r2, r8
 8008d90:	4606      	mov	r6, r0
 8008d92:	4617      	mov	r7, r2
 8008d94:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008d98:	d133      	bne.n	8008e02 <_format_int+0x7e>
 8008d9a:	2330      	movs	r3, #48	; 0x30
 8008d9c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008da0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008da4:	6833      	ldr	r3, [r6, #0]
 8008da6:	07d8      	lsls	r0, r3, #31
 8008da8:	d507      	bpl.n	8008dba <_format_int+0x36>
 8008daa:	466a      	mov	r2, sp
 8008dac:	2030      	movs	r0, #48	; 0x30
 8008dae:	6871      	ldr	r1, [r6, #4]
 8008db0:	1b2f      	subs	r7, r5, r4
 8008db2:	428f      	cmp	r7, r1
 8008db4:	da01      	bge.n	8008dba <_format_int+0x36>
 8008db6:	4294      	cmp	r4, r2
 8008db8:	d839      	bhi.n	8008e2e <_format_int+0xaa>
 8008dba:	0699      	lsls	r1, r3, #26
 8008dbc:	d507      	bpl.n	8008dce <_format_int+0x4a>
 8008dbe:	466a      	mov	r2, sp
 8008dc0:	2030      	movs	r0, #48	; 0x30
 8008dc2:	68b1      	ldr	r1, [r6, #8]
 8008dc4:	1b2f      	subs	r7, r5, r4
 8008dc6:	428f      	cmp	r7, r1
 8008dc8:	da01      	bge.n	8008dce <_format_int+0x4a>
 8008dca:	4294      	cmp	r4, r2
 8008dcc:	d832      	bhi.n	8008e34 <_format_int+0xb0>
 8008dce:	071a      	lsls	r2, r3, #28
 8008dd0:	bf44      	itt	mi
 8008dd2:	222d      	movmi	r2, #45	; 0x2d
 8008dd4:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008dd8:	065b      	lsls	r3, r3, #25
 8008dda:	d407      	bmi.n	8008dec <_format_int+0x68>
 8008ddc:	466b      	mov	r3, sp
 8008dde:	2120      	movs	r1, #32
 8008de0:	68b2      	ldr	r2, [r6, #8]
 8008de2:	1b28      	subs	r0, r5, r4
 8008de4:	4290      	cmp	r0, r2
 8008de6:	da01      	bge.n	8008dec <_format_int+0x68>
 8008de8:	429c      	cmp	r4, r3
 8008dea:	d826      	bhi.n	8008e3a <_format_int+0xb6>
 8008dec:	1b2d      	subs	r5, r5, r4
 8008dee:	3401      	adds	r4, #1
 8008df0:	ab10      	add	r3, sp, #64	; 0x40
 8008df2:	429c      	cmp	r4, r3
 8008df4:	d324      	bcc.n	8008e40 <_format_int+0xbc>
 8008df6:	68b3      	ldr	r3, [r6, #8]
 8008df8:	42ab      	cmp	r3, r5
 8008dfa:	dc27      	bgt.n	8008e4c <_format_int+0xc8>
 8008dfc:	b011      	add	sp, #68	; 0x44
 8008dfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008e02:	462c      	mov	r4, r5
 8008e04:	46e9      	mov	r9, sp
 8008e06:	4638      	mov	r0, r7
 8008e08:	4641      	mov	r1, r8
 8008e0a:	220a      	movs	r2, #10
 8008e0c:	2300      	movs	r3, #0
 8008e0e:	f7ff f863 	bl	8007ed8 <__aeabi_uldivmod>
 8008e12:	3230      	adds	r2, #48	; 0x30
 8008e14:	f804 2901 	strb.w	r2, [r4], #-1
 8008e18:	463a      	mov	r2, r7
 8008e1a:	4643      	mov	r3, r8
 8008e1c:	2a0a      	cmp	r2, #10
 8008e1e:	f173 0300 	sbcs.w	r3, r3, #0
 8008e22:	4607      	mov	r7, r0
 8008e24:	4688      	mov	r8, r1
 8008e26:	d3bd      	bcc.n	8008da4 <_format_int+0x20>
 8008e28:	454c      	cmp	r4, r9
 8008e2a:	d1ec      	bne.n	8008e06 <_format_int+0x82>
 8008e2c:	e7ba      	b.n	8008da4 <_format_int+0x20>
 8008e2e:	f804 0901 	strb.w	r0, [r4], #-1
 8008e32:	e7bd      	b.n	8008db0 <_format_int+0x2c>
 8008e34:	f804 0901 	strb.w	r0, [r4], #-1
 8008e38:	e7c4      	b.n	8008dc4 <_format_int+0x40>
 8008e3a:	f804 1901 	strb.w	r1, [r4], #-1
 8008e3e:	e7d0      	b.n	8008de2 <_format_int+0x5e>
 8008e40:	4630      	mov	r0, r6
 8008e42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008e46:	f7ff ff87 	bl	8008d58 <_xputch>
 8008e4a:	e7d1      	b.n	8008df0 <_format_int+0x6c>
 8008e4c:	2120      	movs	r1, #32
 8008e4e:	4630      	mov	r0, r6
 8008e50:	f7ff ff82 	bl	8008d58 <_xputch>
 8008e54:	3501      	adds	r5, #1
 8008e56:	e7ce      	b.n	8008df6 <_format_int+0x72>

08008e58 <_format_hex>:
 8008e58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e5a:	b091      	sub	sp, #68	; 0x44
 8008e5c:	4606      	mov	r6, r0
 8008e5e:	6804      	ldr	r4, [r0, #0]
 8008e60:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008e64:	bb61      	cbnz	r1, 8008ec0 <_format_hex+0x68>
 8008e66:	2330      	movs	r3, #48	; 0x30
 8008e68:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008e6c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008e70:	07e5      	lsls	r5, r4, #31
 8008e72:	d507      	bpl.n	8008e84 <_format_hex+0x2c>
 8008e74:	4669      	mov	r1, sp
 8008e76:	2530      	movs	r5, #48	; 0x30
 8008e78:	6870      	ldr	r0, [r6, #4]
 8008e7a:	1ad7      	subs	r7, r2, r3
 8008e7c:	4287      	cmp	r7, r0
 8008e7e:	da01      	bge.n	8008e84 <_format_hex+0x2c>
 8008e80:	428b      	cmp	r3, r1
 8008e82:	d831      	bhi.n	8008ee8 <_format_hex+0x90>
 8008e84:	06a0      	lsls	r0, r4, #26
 8008e86:	d507      	bpl.n	8008e98 <_format_hex+0x40>
 8008e88:	4669      	mov	r1, sp
 8008e8a:	2530      	movs	r5, #48	; 0x30
 8008e8c:	68b0      	ldr	r0, [r6, #8]
 8008e8e:	1ad7      	subs	r7, r2, r3
 8008e90:	4287      	cmp	r7, r0
 8008e92:	da01      	bge.n	8008e98 <_format_hex+0x40>
 8008e94:	428b      	cmp	r3, r1
 8008e96:	d82a      	bhi.n	8008eee <_format_hex+0x96>
 8008e98:	0661      	lsls	r1, r4, #25
 8008e9a:	d407      	bmi.n	8008eac <_format_hex+0x54>
 8008e9c:	4669      	mov	r1, sp
 8008e9e:	2420      	movs	r4, #32
 8008ea0:	68b0      	ldr	r0, [r6, #8]
 8008ea2:	1ad5      	subs	r5, r2, r3
 8008ea4:	4285      	cmp	r5, r0
 8008ea6:	da01      	bge.n	8008eac <_format_hex+0x54>
 8008ea8:	428b      	cmp	r3, r1
 8008eaa:	d823      	bhi.n	8008ef4 <_format_hex+0x9c>
 8008eac:	1ad5      	subs	r5, r2, r3
 8008eae:	1c5c      	adds	r4, r3, #1
 8008eb0:	ab10      	add	r3, sp, #64	; 0x40
 8008eb2:	429c      	cmp	r4, r3
 8008eb4:	d321      	bcc.n	8008efa <_format_hex+0xa2>
 8008eb6:	68b3      	ldr	r3, [r6, #8]
 8008eb8:	429d      	cmp	r5, r3
 8008eba:	db24      	blt.n	8008f06 <_format_hex+0xae>
 8008ebc:	b011      	add	sp, #68	; 0x44
 8008ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ec0:	f014 0f02 	tst.w	r4, #2
 8008ec4:	bf0c      	ite	eq
 8008ec6:	2757      	moveq	r7, #87	; 0x57
 8008ec8:	2737      	movne	r7, #55	; 0x37
 8008eca:	4613      	mov	r3, r2
 8008ecc:	466d      	mov	r5, sp
 8008ece:	f001 000f 	and.w	r0, r1, #15
 8008ed2:	2809      	cmp	r0, #9
 8008ed4:	bf94      	ite	ls
 8008ed6:	3030      	addls	r0, #48	; 0x30
 8008ed8:	19c0      	addhi	r0, r0, r7
 8008eda:	0909      	lsrs	r1, r1, #4
 8008edc:	f803 0901 	strb.w	r0, [r3], #-1
 8008ee0:	d0c6      	beq.n	8008e70 <_format_hex+0x18>
 8008ee2:	42ab      	cmp	r3, r5
 8008ee4:	d1f3      	bne.n	8008ece <_format_hex+0x76>
 8008ee6:	e7c3      	b.n	8008e70 <_format_hex+0x18>
 8008ee8:	f803 5901 	strb.w	r5, [r3], #-1
 8008eec:	e7c5      	b.n	8008e7a <_format_hex+0x22>
 8008eee:	f803 5901 	strb.w	r5, [r3], #-1
 8008ef2:	e7cc      	b.n	8008e8e <_format_hex+0x36>
 8008ef4:	f803 4901 	strb.w	r4, [r3], #-1
 8008ef8:	e7d3      	b.n	8008ea2 <_format_hex+0x4a>
 8008efa:	4630      	mov	r0, r6
 8008efc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008f00:	f7ff ff2a 	bl	8008d58 <_xputch>
 8008f04:	e7d4      	b.n	8008eb0 <_format_hex+0x58>
 8008f06:	2120      	movs	r1, #32
 8008f08:	4630      	mov	r0, r6
 8008f0a:	f7ff ff25 	bl	8008d58 <_xputch>
 8008f0e:	3501      	adds	r5, #1
 8008f10:	e7d1      	b.n	8008eb6 <_format_hex+0x5e>
	...

08008f14 <_vprintf>:
 8008f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f18:	4614      	mov	r4, r2
 8008f1a:	2200      	movs	r2, #0
 8008f1c:	460b      	mov	r3, r1
 8008f1e:	f04f 0800 	mov.w	r8, #0
 8008f22:	b099      	sub	sp, #100	; 0x64
 8008f24:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008f28:	af08      	add	r7, sp, #32
 8008f2a:	7819      	ldrb	r1, [r3, #0]
 8008f2c:	b919      	cbnz	r1, 8008f36 <_vprintf+0x22>
 8008f2e:	9806      	ldr	r0, [sp, #24]
 8008f30:	b019      	add	sp, #100	; 0x64
 8008f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f36:	2925      	cmp	r1, #37	; 0x25
 8008f38:	f103 0601 	add.w	r6, r3, #1
 8008f3c:	d004      	beq.n	8008f48 <_vprintf+0x34>
 8008f3e:	a803      	add	r0, sp, #12
 8008f40:	f7ff ff0a 	bl	8008d58 <_xputch>
 8008f44:	4633      	mov	r3, r6
 8008f46:	e7f0      	b.n	8008f2a <_vprintf+0x16>
 8008f48:	2200      	movs	r2, #0
 8008f4a:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008f4e:	9205      	str	r2, [sp, #20]
 8008f50:	785a      	ldrb	r2, [r3, #1]
 8008f52:	2a30      	cmp	r2, #48	; 0x30
 8008f54:	d129      	bne.n	8008faa <_vprintf+0x96>
 8008f56:	2220      	movs	r2, #32
 8008f58:	9203      	str	r2, [sp, #12]
 8008f5a:	1c9e      	adds	r6, r3, #2
 8008f5c:	2200      	movs	r2, #0
 8008f5e:	4635      	mov	r5, r6
 8008f60:	4613      	mov	r3, r2
 8008f62:	f04f 0c0a 	mov.w	ip, #10
 8008f66:	7829      	ldrb	r1, [r5, #0]
 8008f68:	462e      	mov	r6, r5
 8008f6a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008f6e:	2809      	cmp	r0, #9
 8008f70:	f105 0501 	add.w	r5, r5, #1
 8008f74:	d91d      	bls.n	8008fb2 <_vprintf+0x9e>
 8008f76:	b12a      	cbz	r2, 8008f84 <_vprintf+0x70>
 8008f78:	9305      	str	r3, [sp, #20]
 8008f7a:	b11b      	cbz	r3, 8008f84 <_vprintf+0x70>
 8008f7c:	9b03      	ldr	r3, [sp, #12]
 8008f7e:	f043 0310 	orr.w	r3, r3, #16
 8008f82:	9303      	str	r3, [sp, #12]
 8008f84:	292e      	cmp	r1, #46	; 0x2e
 8008f86:	d123      	bne.n	8008fd0 <_vprintf+0xbc>
 8008f88:	7873      	ldrb	r3, [r6, #1]
 8008f8a:	2b2a      	cmp	r3, #42	; 0x2a
 8008f8c:	d015      	beq.n	8008fba <_vprintf+0xa6>
 8008f8e:	2100      	movs	r1, #0
 8008f90:	250a      	movs	r5, #10
 8008f92:	460a      	mov	r2, r1
 8008f94:	1c70      	adds	r0, r6, #1
 8008f96:	7803      	ldrb	r3, [r0, #0]
 8008f98:	4606      	mov	r6, r0
 8008f9a:	3b30      	subs	r3, #48	; 0x30
 8008f9c:	2b09      	cmp	r3, #9
 8008f9e:	f100 0001 	add.w	r0, r0, #1
 8008fa2:	d959      	bls.n	8009058 <_vprintf+0x144>
 8008fa4:	b181      	cbz	r1, 8008fc8 <_vprintf+0xb4>
 8008fa6:	9204      	str	r2, [sp, #16]
 8008fa8:	e00e      	b.n	8008fc8 <_vprintf+0xb4>
 8008faa:	2a2d      	cmp	r2, #45	; 0x2d
 8008fac:	d1d6      	bne.n	8008f5c <_vprintf+0x48>
 8008fae:	2240      	movs	r2, #64	; 0x40
 8008fb0:	e7d2      	b.n	8008f58 <_vprintf+0x44>
 8008fb2:	2201      	movs	r2, #1
 8008fb4:	fb0c 0303 	mla	r3, ip, r3, r0
 8008fb8:	e7d5      	b.n	8008f66 <_vprintf+0x52>
 8008fba:	f854 3b04 	ldr.w	r3, [r4], #4
 8008fbe:	3602      	adds	r6, #2
 8008fc0:	2b00      	cmp	r3, #0
 8008fc2:	bfb8      	it	lt
 8008fc4:	425b      	neglt	r3, r3
 8008fc6:	9304      	str	r3, [sp, #16]
 8008fc8:	9b03      	ldr	r3, [sp, #12]
 8008fca:	f043 0301 	orr.w	r3, r3, #1
 8008fce:	9303      	str	r3, [sp, #12]
 8008fd0:	7833      	ldrb	r3, [r6, #0]
 8008fd2:	2b6c      	cmp	r3, #108	; 0x6c
 8008fd4:	bf04      	itt	eq
 8008fd6:	9b03      	ldreq	r3, [sp, #12]
 8008fd8:	3601      	addeq	r6, #1
 8008fda:	7831      	ldrb	r1, [r6, #0]
 8008fdc:	bf04      	itt	eq
 8008fde:	f043 0304 	orreq.w	r3, r3, #4
 8008fe2:	9303      	streq	r3, [sp, #12]
 8008fe4:	2958      	cmp	r1, #88	; 0x58
 8008fe6:	f000 8171 	beq.w	80092cc <_vprintf+0x3b8>
 8008fea:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008fee:	b2da      	uxtb	r2, r3
 8008ff0:	2a15      	cmp	r2, #21
 8008ff2:	d8a4      	bhi.n	8008f3e <_vprintf+0x2a>
 8008ff4:	2b15      	cmp	r3, #21
 8008ff6:	d8a2      	bhi.n	8008f3e <_vprintf+0x2a>
 8008ff8:	a201      	add	r2, pc, #4	; (adr r2, 8009000 <_vprintf+0xec>)
 8008ffa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ffe:	bf00      	nop
 8009000:	08009061 	stmdaeq	r0, {r0, r5, r6, ip, pc}
 8009004:	08009073 	stmdaeq	r0, {r0, r1, r4, r5, r6, ip, pc}
 8009008:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 800900c:	080090a9 	stmdaeq	r0, {r0, r3, r5, r7, ip, pc}
 8009010:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009014:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009018:	08009073 	stmdaeq	r0, {r0, r1, r4, r5, r6, ip, pc}
 800901c:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009020:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009024:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009028:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 800902c:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009030:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009034:	0800920f 	stmdaeq	r0, {r0, r1, r2, r3, r9, ip, pc}
 8009038:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 800903c:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009040:	08009237 	stmdaeq	r0, {r0, r1, r2, r4, r5, r9, ip, pc}
 8009044:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009048:	080092ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, ip, pc}
 800904c:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009050:	08008f3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 8009054:	080092d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, ip, pc}
 8009058:	2101      	movs	r1, #1
 800905a:	fb05 3202 	mla	r2, r5, r2, r3
 800905e:	e79a      	b.n	8008f96 <_vprintf+0x82>
 8009060:	4625      	mov	r5, r4
 8009062:	a803      	add	r0, sp, #12
 8009064:	f855 1b04 	ldr.w	r1, [r5], #4
 8009068:	f7ff fe76 	bl	8008d58 <_xputch>
 800906c:	462c      	mov	r4, r5
 800906e:	3601      	adds	r6, #1
 8009070:	e768      	b.n	8008f44 <_vprintf+0x30>
 8009072:	9903      	ldr	r1, [sp, #12]
 8009074:	074d      	lsls	r5, r1, #29
 8009076:	bf51      	iteee	pl
 8009078:	4625      	movpl	r5, r4
 800907a:	3407      	addmi	r4, #7
 800907c:	f024 0407 	bicmi.w	r4, r4, #7
 8009080:	4625      	movmi	r5, r4
 8009082:	bf55      	itete	pl
 8009084:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8009088:	6863      	ldrmi	r3, [r4, #4]
 800908a:	17d3      	asrpl	r3, r2, #31
 800908c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009090:	2b00      	cmp	r3, #0
 8009092:	da05      	bge.n	80090a0 <_vprintf+0x18c>
 8009094:	f041 0108 	orr.w	r1, r1, #8
 8009098:	4252      	negs	r2, r2
 800909a:	9103      	str	r1, [sp, #12]
 800909c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80090a0:	a803      	add	r0, sp, #12
 80090a2:	f7ff fe6f 	bl	8008d84 <_format_int>
 80090a6:	e7e1      	b.n	800906c <_vprintf+0x158>
 80090a8:	3407      	adds	r4, #7
 80090aa:	f024 0507 	bic.w	r5, r4, #7
 80090ae:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80090b2:	f7fe fd17 	bl	8007ae4 <__aeabi_d2f>
 80090b6:	9b03      	ldr	r3, [sp, #12]
 80090b8:	4641      	mov	r1, r8
 80090ba:	07dc      	lsls	r4, r3, #31
 80090bc:	bf54      	ite	pl
 80090be:	f04f 0a06 	movpl.w	sl, #6
 80090c2:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80090c6:	4681      	mov	r9, r0
 80090c8:	f7fe feb8 	bl	8007e3c <__aeabi_fcmplt>
 80090cc:	2800      	cmp	r0, #0
 80090ce:	d063      	beq.n	8009198 <_vprintf+0x284>
 80090d0:	232d      	movs	r3, #45	; 0x2d
 80090d2:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 80090d6:	f88d 3020 	strb.w	r3, [sp, #32]
 80090da:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 80090de:	4648      	mov	r0, r9
 80090e0:	f7fe fed4 	bl	8007e8c <__aeabi_f2iz>
 80090e4:	4659      	mov	r1, fp
 80090e6:	2200      	movs	r2, #0
 80090e8:	4604      	mov	r4, r0
 80090ea:	f7ff fdfb 	bl	8008ce4 <_itostr>
 80090ee:	eb0b 0200 	add.w	r2, fp, r0
 80090f2:	e9cd 2000 	strd	r2, r0, [sp]
 80090f6:	4620      	mov	r0, r4
 80090f8:	f7fe fdfe 	bl	8007cf8 <__aeabi_i2f>
 80090fc:	4601      	mov	r1, r0
 80090fe:	4648      	mov	r0, r9
 8009100:	f7fe fd44 	bl	8007b8c <__aeabi_fsub>
 8009104:	222e      	movs	r2, #46	; 0x2e
 8009106:	4601      	mov	r1, r0
 8009108:	200a      	movs	r0, #10
 800910a:	9b00      	ldr	r3, [sp, #0]
 800910c:	f10a 0901 	add.w	r9, sl, #1
 8009110:	1c5c      	adds	r4, r3, #1
 8009112:	9b01      	ldr	r3, [sp, #4]
 8009114:	f80b 2003 	strb.w	r2, [fp, r3]
 8009118:	4603      	mov	r3, r0
 800911a:	f1ba 0f00 	cmp.w	sl, #0
 800911e:	dc3d      	bgt.n	800919c <_vprintf+0x288>
 8009120:	9100      	str	r1, [sp, #0]
 8009122:	f7fe fde9 	bl	8007cf8 <__aeabi_i2f>
 8009126:	9900      	ldr	r1, [sp, #0]
 8009128:	f7ff f8ac 	bl	8008284 <__aeabi_fmul>
 800912c:	f7fe feae 	bl	8007e8c <__aeabi_f2iz>
 8009130:	464a      	mov	r2, r9
 8009132:	4621      	mov	r1, r4
 8009134:	f7ff fdd6 	bl	8008ce4 <_itostr>
 8009138:	4404      	add	r4, r0
 800913a:	1be0      	subs	r0, r4, r7
 800913c:	1e44      	subs	r4, r0, #1
 800913e:	5d3b      	ldrb	r3, [r7, r4]
 8009140:	193a      	adds	r2, r7, r4
 8009142:	2b34      	cmp	r3, #52	; 0x34
 8009144:	d910      	bls.n	8009168 <_vprintf+0x254>
 8009146:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800914a:	1e53      	subs	r3, r2, #1
 800914c:	292e      	cmp	r1, #46	; 0x2e
 800914e:	d02c      	beq.n	80091aa <_vprintf+0x296>
 8009150:	469c      	mov	ip, r3
 8009152:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8009156:	4663      	mov	r3, ip
 8009158:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800915c:	2939      	cmp	r1, #57	; 0x39
 800915e:	d021      	beq.n	80091a4 <_vprintf+0x290>
 8009160:	292e      	cmp	r1, #46	; 0x2e
 8009162:	d022      	beq.n	80091aa <_vprintf+0x296>
 8009164:	3101      	adds	r1, #1
 8009166:	7019      	strb	r1, [r3, #0]
 8009168:	f104 0360 	add.w	r3, r4, #96	; 0x60
 800916c:	446b      	add	r3, sp
 800916e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009172:	2b2e      	cmp	r3, #46	; 0x2e
 8009174:	bf08      	it	eq
 8009176:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800917a:	46a1      	mov	r9, r4
 800917c:	9b05      	ldr	r3, [sp, #20]
 800917e:	4599      	cmp	r9, r3
 8009180:	db3e      	blt.n	8009200 <_vprintf+0x2ec>
 8009182:	46b9      	mov	r9, r7
 8009184:	2c00      	cmp	r4, #0
 8009186:	f77f af71 	ble.w	800906c <_vprintf+0x158>
 800918a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800918e:	a803      	add	r0, sp, #12
 8009190:	f7ff fde2 	bl	8008d58 <_xputch>
 8009194:	3c01      	subs	r4, #1
 8009196:	e7f5      	b.n	8009184 <_vprintf+0x270>
 8009198:	46bb      	mov	fp, r7
 800919a:	e7a0      	b.n	80090de <_vprintf+0x1ca>
 800919c:	4358      	muls	r0, r3
 800919e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80091a2:	e7ba      	b.n	800911a <_vprintf+0x206>
 80091a4:	f88c e001 	strb.w	lr, [ip, #1]
 80091a8:	e7d5      	b.n	8009156 <_vprintf+0x242>
 80091aa:	f04f 0c30 	mov.w	ip, #48	; 0x30
 80091ae:	3b01      	subs	r3, #1
 80091b0:	7819      	ldrb	r1, [r3, #0]
 80091b2:	2939      	cmp	r1, #57	; 0x39
 80091b4:	d112      	bne.n	80091dc <_vprintf+0x2c8>
 80091b6:	42bb      	cmp	r3, r7
 80091b8:	d20d      	bcs.n	80091d6 <_vprintf+0x2c2>
 80091ba:	1c5c      	adds	r4, r3, #1
 80091bc:	1c99      	adds	r1, r3, #2
 80091be:	428c      	cmp	r4, r1
 80091c0:	eba2 0203 	sub.w	r2, r2, r3
 80091c4:	d913      	bls.n	80091ee <_vprintf+0x2da>
 80091c6:	4619      	mov	r1, r3
 80091c8:	441a      	add	r2, r3
 80091ca:	428a      	cmp	r2, r1
 80091cc:	d10b      	bne.n	80091e6 <_vprintf+0x2d2>
 80091ce:	2231      	movs	r2, #49	; 0x31
 80091d0:	4604      	mov	r4, r0
 80091d2:	705a      	strb	r2, [r3, #1]
 80091d4:	e7c8      	b.n	8009168 <_vprintf+0x254>
 80091d6:	f803 c901 	strb.w	ip, [r3], #-1
 80091da:	e7e9      	b.n	80091b0 <_vprintf+0x29c>
 80091dc:	42bb      	cmp	r3, r7
 80091de:	d3ec      	bcc.n	80091ba <_vprintf+0x2a6>
 80091e0:	292d      	cmp	r1, #45	; 0x2d
 80091e2:	d0ea      	beq.n	80091ba <_vprintf+0x2a6>
 80091e4:	e7be      	b.n	8009164 <_vprintf+0x250>
 80091e6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80091ea:	704c      	strb	r4, [r1, #1]
 80091ec:	e7ed      	b.n	80091ca <_vprintf+0x2b6>
 80091ee:	4414      	add	r4, r2
 80091f0:	440a      	add	r2, r1
 80091f2:	428a      	cmp	r2, r1
 80091f4:	d0eb      	beq.n	80091ce <_vprintf+0x2ba>
 80091f6:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 80091fa:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80091fe:	e7f8      	b.n	80091f2 <_vprintf+0x2de>
 8009200:	2120      	movs	r1, #32
 8009202:	a803      	add	r0, sp, #12
 8009204:	f7ff fda8 	bl	8008d58 <_xputch>
 8009208:	f109 0901 	add.w	r9, r9, #1
 800920c:	e7b6      	b.n	800917c <_vprintf+0x268>
 800920e:	2308      	movs	r3, #8
 8009210:	4625      	mov	r5, r4
 8009212:	9305      	str	r3, [sp, #20]
 8009214:	2320      	movs	r3, #32
 8009216:	2130      	movs	r1, #48	; 0x30
 8009218:	f855 4b04 	ldr.w	r4, [r5], #4
 800921c:	a803      	add	r0, sp, #12
 800921e:	9303      	str	r3, [sp, #12]
 8009220:	f7ff fd9a 	bl	8008d58 <_xputch>
 8009224:	2178      	movs	r1, #120	; 0x78
 8009226:	a803      	add	r0, sp, #12
 8009228:	f7ff fd96 	bl	8008d58 <_xputch>
 800922c:	4621      	mov	r1, r4
 800922e:	a803      	add	r0, sp, #12
 8009230:	f7ff fe12 	bl	8008e58 <_format_hex>
 8009234:	e71a      	b.n	800906c <_vprintf+0x158>
 8009236:	4625      	mov	r5, r4
 8009238:	2400      	movs	r4, #0
 800923a:	f855 9b04 	ldr.w	r9, [r5], #4
 800923e:	f819 3004 	ldrb.w	r3, [r9, r4]
 8009242:	b993      	cbnz	r3, 800926a <_vprintf+0x356>
 8009244:	9b03      	ldr	r3, [sp, #12]
 8009246:	07d9      	lsls	r1, r3, #31
 8009248:	d503      	bpl.n	8009252 <_vprintf+0x33e>
 800924a:	9b04      	ldr	r3, [sp, #16]
 800924c:	429c      	cmp	r4, r3
 800924e:	bfa8      	it	ge
 8009250:	461c      	movge	r4, r3
 8009252:	9b03      	ldr	r3, [sp, #12]
 8009254:	f104 0a01 	add.w	sl, r4, #1
 8009258:	065a      	lsls	r2, r3, #25
 800925a:	d403      	bmi.n	8009264 <_vprintf+0x350>
 800925c:	9b05      	ldr	r3, [sp, #20]
 800925e:	429c      	cmp	r4, r3
 8009260:	db05      	blt.n	800926e <_vprintf+0x35a>
 8009262:	4654      	mov	r4, sl
 8009264:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009268:	e00d      	b.n	8009286 <_vprintf+0x372>
 800926a:	3401      	adds	r4, #1
 800926c:	e7e7      	b.n	800923e <_vprintf+0x32a>
 800926e:	2120      	movs	r1, #32
 8009270:	a803      	add	r0, sp, #12
 8009272:	f7ff fd71 	bl	8008d58 <_xputch>
 8009276:	4654      	mov	r4, sl
 8009278:	e7eb      	b.n	8009252 <_vprintf+0x33e>
 800927a:	a803      	add	r0, sp, #12
 800927c:	f7ff fd6c 	bl	8008d58 <_xputch>
 8009280:	9b04      	ldr	r3, [sp, #16]
 8009282:	3b01      	subs	r3, #1
 8009284:	9304      	str	r3, [sp, #16]
 8009286:	9b03      	ldr	r3, [sp, #12]
 8009288:	07db      	lsls	r3, r3, #31
 800928a:	d501      	bpl.n	8009290 <_vprintf+0x37c>
 800928c:	9b04      	ldr	r3, [sp, #16]
 800928e:	b11b      	cbz	r3, 8009298 <_vprintf+0x384>
 8009290:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009294:	2900      	cmp	r1, #0
 8009296:	d1f0      	bne.n	800927a <_vprintf+0x366>
 8009298:	9b05      	ldr	r3, [sp, #20]
 800929a:	429c      	cmp	r4, r3
 800929c:	f6bf aee6 	bge.w	800906c <_vprintf+0x158>
 80092a0:	2120      	movs	r1, #32
 80092a2:	a803      	add	r0, sp, #12
 80092a4:	f7ff fd58 	bl	8008d58 <_xputch>
 80092a8:	3401      	adds	r4, #1
 80092aa:	e7f5      	b.n	8009298 <_vprintf+0x384>
 80092ac:	9b03      	ldr	r3, [sp, #12]
 80092ae:	f013 0304 	ands.w	r3, r3, #4
 80092b2:	bf1d      	ittte	ne
 80092b4:	3407      	addne	r4, #7
 80092b6:	f024 0407 	bicne.w	r4, r4, #7
 80092ba:	4625      	movne	r5, r4
 80092bc:	4625      	moveq	r5, r4
 80092be:	bf1a      	itte	ne
 80092c0:	f855 2b08 	ldrne.w	r2, [r5], #8
 80092c4:	6863      	ldrne	r3, [r4, #4]
 80092c6:	f855 2b04 	ldreq.w	r2, [r5], #4
 80092ca:	e6e9      	b.n	80090a0 <_vprintf+0x18c>
 80092cc:	9b03      	ldr	r3, [sp, #12]
 80092ce:	f043 0302 	orr.w	r3, r3, #2
 80092d2:	9303      	str	r3, [sp, #12]
 80092d4:	4625      	mov	r5, r4
 80092d6:	f855 1b04 	ldr.w	r1, [r5], #4
 80092da:	e7a8      	b.n	800922e <_vprintf+0x31a>

080092dc <printf>:
 80092dc:	b40f      	push	{r0, r1, r2, r3}
 80092de:	b507      	push	{r0, r1, r2, lr}
 80092e0:	aa04      	add	r2, sp, #16
 80092e2:	f852 1b04 	ldr.w	r1, [r2], #4
 80092e6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80092ea:	9201      	str	r2, [sp, #4]
 80092ec:	f7ff fe12 	bl	8008f14 <_vprintf>
 80092f0:	b003      	add	sp, #12
 80092f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80092f6:	b004      	add	sp, #16
 80092f8:	4770      	bx	lr
	...

080092fc <snprintf>:
 80092fc:	b40c      	push	{r2, r3}
 80092fe:	460b      	mov	r3, r1
 8009300:	b513      	push	{r0, r1, r4, lr}
 8009302:	4c09      	ldr	r4, [pc, #36]	; (8009328 <snprintf+0x2c>)
 8009304:	aa04      	add	r2, sp, #16
 8009306:	f852 1b04 	ldr.w	r1, [r2], #4
 800930a:	6020      	str	r0, [r4, #0]
 800930c:	4618      	mov	r0, r3
 800930e:	9201      	str	r2, [sp, #4]
 8009310:	f7ff fe00 	bl	8008f14 <_vprintf>
 8009314:	2300      	movs	r3, #0
 8009316:	6822      	ldr	r2, [r4, #0]
 8009318:	6023      	str	r3, [r4, #0]
 800931a:	7013      	strb	r3, [r2, #0]
 800931c:	b002      	add	sp, #8
 800931e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009322:	b002      	add	sp, #8
 8009324:	4770      	bx	lr
 8009326:	bf00      	nop
 8009328:	20000080 	andcs	r0, r0, r0, lsl #1

0800932c <vsnprintf>:
 800932c:	b538      	push	{r3, r4, r5, lr}
 800932e:	4605      	mov	r5, r0
 8009330:	4c05      	ldr	r4, [pc, #20]	; (8009348 <vsnprintf+0x1c>)
 8009332:	4608      	mov	r0, r1
 8009334:	4611      	mov	r1, r2
 8009336:	461a      	mov	r2, r3
 8009338:	6025      	str	r5, [r4, #0]
 800933a:	f7ff fdeb 	bl	8008f14 <_vprintf>
 800933e:	2300      	movs	r3, #0
 8009340:	6822      	ldr	r2, [r4, #0]
 8009342:	6023      	str	r3, [r4, #0]
 8009344:	7013      	strb	r3, [r2, #0]
 8009346:	bd38      	pop	{r3, r4, r5, pc}
 8009348:	20000080 	andcs	r0, r0, r0, lsl #1

0800934c <__udivmoddi4>:
 800934c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009350:	9e08      	ldr	r6, [sp, #32]
 8009352:	460d      	mov	r5, r1
 8009354:	4604      	mov	r4, r0
 8009356:	468e      	mov	lr, r1
 8009358:	2b00      	cmp	r3, #0
 800935a:	d14c      	bne.n	80093f6 <__udivmoddi4+0xaa>
 800935c:	428a      	cmp	r2, r1
 800935e:	4694      	mov	ip, r2
 8009360:	d967      	bls.n	8009432 <__udivmoddi4+0xe6>
 8009362:	fab2 f382 	clz	r3, r2
 8009366:	b153      	cbz	r3, 800937e <__udivmoddi4+0x32>
 8009368:	fa02 fc03 	lsl.w	ip, r2, r3
 800936c:	f1c3 0220 	rsb	r2, r3, #32
 8009370:	fa01 fe03 	lsl.w	lr, r1, r3
 8009374:	fa20 f202 	lsr.w	r2, r0, r2
 8009378:	ea42 0e0e 	orr.w	lr, r2, lr
 800937c:	409c      	lsls	r4, r3
 800937e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009382:	fbbe f1f7 	udiv	r1, lr, r7
 8009386:	fa1f f58c 	uxth.w	r5, ip
 800938a:	fb07 ee11 	mls	lr, r7, r1, lr
 800938e:	fb01 f005 	mul.w	r0, r1, r5
 8009392:	0c22      	lsrs	r2, r4, #16
 8009394:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8009398:	4290      	cmp	r0, r2
 800939a:	d90a      	bls.n	80093b2 <__udivmoddi4+0x66>
 800939c:	eb1c 0202 	adds.w	r2, ip, r2
 80093a0:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80093a4:	f080 8119 	bcs.w	80095da <__udivmoddi4+0x28e>
 80093a8:	4290      	cmp	r0, r2
 80093aa:	f240 8116 	bls.w	80095da <__udivmoddi4+0x28e>
 80093ae:	3902      	subs	r1, #2
 80093b0:	4462      	add	r2, ip
 80093b2:	1a12      	subs	r2, r2, r0
 80093b4:	fbb2 f0f7 	udiv	r0, r2, r7
 80093b8:	fb07 2210 	mls	r2, r7, r0, r2
 80093bc:	fb00 f505 	mul.w	r5, r0, r5
 80093c0:	b2a4      	uxth	r4, r4
 80093c2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80093c6:	42a5      	cmp	r5, r4
 80093c8:	d90a      	bls.n	80093e0 <__udivmoddi4+0x94>
 80093ca:	eb1c 0404 	adds.w	r4, ip, r4
 80093ce:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80093d2:	f080 8104 	bcs.w	80095de <__udivmoddi4+0x292>
 80093d6:	42a5      	cmp	r5, r4
 80093d8:	f240 8101 	bls.w	80095de <__udivmoddi4+0x292>
 80093dc:	4464      	add	r4, ip
 80093de:	3802      	subs	r0, #2
 80093e0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80093e4:	2100      	movs	r1, #0
 80093e6:	1b64      	subs	r4, r4, r5
 80093e8:	b11e      	cbz	r6, 80093f2 <__udivmoddi4+0xa6>
 80093ea:	40dc      	lsrs	r4, r3
 80093ec:	2300      	movs	r3, #0
 80093ee:	e9c6 4300 	strd	r4, r3, [r6]
 80093f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093f6:	428b      	cmp	r3, r1
 80093f8:	d908      	bls.n	800940c <__udivmoddi4+0xc0>
 80093fa:	2e00      	cmp	r6, #0
 80093fc:	f000 80ea 	beq.w	80095d4 <__udivmoddi4+0x288>
 8009400:	2100      	movs	r1, #0
 8009402:	e9c6 0500 	strd	r0, r5, [r6]
 8009406:	4608      	mov	r0, r1
 8009408:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800940c:	fab3 f183 	clz	r1, r3
 8009410:	2900      	cmp	r1, #0
 8009412:	d148      	bne.n	80094a6 <__udivmoddi4+0x15a>
 8009414:	42ab      	cmp	r3, r5
 8009416:	d302      	bcc.n	800941e <__udivmoddi4+0xd2>
 8009418:	4282      	cmp	r2, r0
 800941a:	f200 80f8 	bhi.w	800960e <__udivmoddi4+0x2c2>
 800941e:	1a84      	subs	r4, r0, r2
 8009420:	eb65 0203 	sbc.w	r2, r5, r3
 8009424:	2001      	movs	r0, #1
 8009426:	4696      	mov	lr, r2
 8009428:	2e00      	cmp	r6, #0
 800942a:	d0e2      	beq.n	80093f2 <__udivmoddi4+0xa6>
 800942c:	e9c6 4e00 	strd	r4, lr, [r6]
 8009430:	e7df      	b.n	80093f2 <__udivmoddi4+0xa6>
 8009432:	b902      	cbnz	r2, 8009436 <__udivmoddi4+0xea>
 8009434:	deff      	udf	#255	; 0xff
 8009436:	fab2 f382 	clz	r3, r2
 800943a:	2b00      	cmp	r3, #0
 800943c:	f040 808e 	bne.w	800955c <__udivmoddi4+0x210>
 8009440:	1a88      	subs	r0, r1, r2
 8009442:	2101      	movs	r1, #1
 8009444:	0c17      	lsrs	r7, r2, #16
 8009446:	fa1f fe82 	uxth.w	lr, r2
 800944a:	fbb0 f5f7 	udiv	r5, r0, r7
 800944e:	fb07 0015 	mls	r0, r7, r5, r0
 8009452:	0c22      	lsrs	r2, r4, #16
 8009454:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009458:	fb0e f005 	mul.w	r0, lr, r5
 800945c:	4290      	cmp	r0, r2
 800945e:	d908      	bls.n	8009472 <__udivmoddi4+0x126>
 8009460:	eb1c 0202 	adds.w	r2, ip, r2
 8009464:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009468:	d202      	bcs.n	8009470 <__udivmoddi4+0x124>
 800946a:	4290      	cmp	r0, r2
 800946c:	f200 80cc 	bhi.w	8009608 <__udivmoddi4+0x2bc>
 8009470:	4645      	mov	r5, r8
 8009472:	1a12      	subs	r2, r2, r0
 8009474:	fbb2 f0f7 	udiv	r0, r2, r7
 8009478:	fb07 2210 	mls	r2, r7, r0, r2
 800947c:	fb0e fe00 	mul.w	lr, lr, r0
 8009480:	b2a4      	uxth	r4, r4
 8009482:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009486:	45a6      	cmp	lr, r4
 8009488:	d908      	bls.n	800949c <__udivmoddi4+0x150>
 800948a:	eb1c 0404 	adds.w	r4, ip, r4
 800948e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009492:	d202      	bcs.n	800949a <__udivmoddi4+0x14e>
 8009494:	45a6      	cmp	lr, r4
 8009496:	f200 80b4 	bhi.w	8009602 <__udivmoddi4+0x2b6>
 800949a:	4610      	mov	r0, r2
 800949c:	eba4 040e 	sub.w	r4, r4, lr
 80094a0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80094a4:	e7a0      	b.n	80093e8 <__udivmoddi4+0x9c>
 80094a6:	f1c1 0720 	rsb	r7, r1, #32
 80094aa:	408b      	lsls	r3, r1
 80094ac:	fa22 fc07 	lsr.w	ip, r2, r7
 80094b0:	ea4c 0c03 	orr.w	ip, ip, r3
 80094b4:	fa25 fa07 	lsr.w	sl, r5, r7
 80094b8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80094bc:	fbba f8f9 	udiv	r8, sl, r9
 80094c0:	408d      	lsls	r5, r1
 80094c2:	fa20 f307 	lsr.w	r3, r0, r7
 80094c6:	fb09 aa18 	mls	sl, r9, r8, sl
 80094ca:	fa1f fe8c 	uxth.w	lr, ip
 80094ce:	432b      	orrs	r3, r5
 80094d0:	fa00 f501 	lsl.w	r5, r0, r1
 80094d4:	fb08 f00e 	mul.w	r0, r8, lr
 80094d8:	0c1c      	lsrs	r4, r3, #16
 80094da:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80094de:	42a0      	cmp	r0, r4
 80094e0:	fa02 f201 	lsl.w	r2, r2, r1
 80094e4:	d90b      	bls.n	80094fe <__udivmoddi4+0x1b2>
 80094e6:	eb1c 0404 	adds.w	r4, ip, r4
 80094ea:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80094ee:	f080 8086 	bcs.w	80095fe <__udivmoddi4+0x2b2>
 80094f2:	42a0      	cmp	r0, r4
 80094f4:	f240 8083 	bls.w	80095fe <__udivmoddi4+0x2b2>
 80094f8:	f1a8 0802 	sub.w	r8, r8, #2
 80094fc:	4464      	add	r4, ip
 80094fe:	1a24      	subs	r4, r4, r0
 8009500:	b298      	uxth	r0, r3
 8009502:	fbb4 f3f9 	udiv	r3, r4, r9
 8009506:	fb09 4413 	mls	r4, r9, r3, r4
 800950a:	fb03 fe0e 	mul.w	lr, r3, lr
 800950e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8009512:	45a6      	cmp	lr, r4
 8009514:	d908      	bls.n	8009528 <__udivmoddi4+0x1dc>
 8009516:	eb1c 0404 	adds.w	r4, ip, r4
 800951a:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 800951e:	d26a      	bcs.n	80095f6 <__udivmoddi4+0x2aa>
 8009520:	45a6      	cmp	lr, r4
 8009522:	d968      	bls.n	80095f6 <__udivmoddi4+0x2aa>
 8009524:	3b02      	subs	r3, #2
 8009526:	4464      	add	r4, ip
 8009528:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800952c:	fba0 9302 	umull	r9, r3, r0, r2
 8009530:	eba4 040e 	sub.w	r4, r4, lr
 8009534:	429c      	cmp	r4, r3
 8009536:	46c8      	mov	r8, r9
 8009538:	469e      	mov	lr, r3
 800953a:	d354      	bcc.n	80095e6 <__udivmoddi4+0x29a>
 800953c:	d051      	beq.n	80095e2 <__udivmoddi4+0x296>
 800953e:	2e00      	cmp	r6, #0
 8009540:	d067      	beq.n	8009612 <__udivmoddi4+0x2c6>
 8009542:	ebb5 0308 	subs.w	r3, r5, r8
 8009546:	eb64 040e 	sbc.w	r4, r4, lr
 800954a:	40cb      	lsrs	r3, r1
 800954c:	fa04 f707 	lsl.w	r7, r4, r7
 8009550:	431f      	orrs	r7, r3
 8009552:	40cc      	lsrs	r4, r1
 8009554:	e9c6 7400 	strd	r7, r4, [r6]
 8009558:	2100      	movs	r1, #0
 800955a:	e74a      	b.n	80093f2 <__udivmoddi4+0xa6>
 800955c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009560:	f1c3 0020 	rsb	r0, r3, #32
 8009564:	40c1      	lsrs	r1, r0
 8009566:	409d      	lsls	r5, r3
 8009568:	fa24 f000 	lsr.w	r0, r4, r0
 800956c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009570:	4328      	orrs	r0, r5
 8009572:	fbb1 f5f7 	udiv	r5, r1, r7
 8009576:	fb07 1115 	mls	r1, r7, r5, r1
 800957a:	fa1f fe8c 	uxth.w	lr, ip
 800957e:	0c02      	lsrs	r2, r0, #16
 8009580:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009584:	fb05 f10e 	mul.w	r1, r5, lr
 8009588:	4291      	cmp	r1, r2
 800958a:	fa04 f403 	lsl.w	r4, r4, r3
 800958e:	d908      	bls.n	80095a2 <__udivmoddi4+0x256>
 8009590:	eb1c 0202 	adds.w	r2, ip, r2
 8009594:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009598:	d22f      	bcs.n	80095fa <__udivmoddi4+0x2ae>
 800959a:	4291      	cmp	r1, r2
 800959c:	d92d      	bls.n	80095fa <__udivmoddi4+0x2ae>
 800959e:	3d02      	subs	r5, #2
 80095a0:	4462      	add	r2, ip
 80095a2:	1a52      	subs	r2, r2, r1
 80095a4:	fbb2 f1f7 	udiv	r1, r2, r7
 80095a8:	fb07 2211 	mls	r2, r7, r1, r2
 80095ac:	b280      	uxth	r0, r0
 80095ae:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80095b2:	fb01 f20e 	mul.w	r2, r1, lr
 80095b6:	4282      	cmp	r2, r0
 80095b8:	d908      	bls.n	80095cc <__udivmoddi4+0x280>
 80095ba:	eb1c 0000 	adds.w	r0, ip, r0
 80095be:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80095c2:	d216      	bcs.n	80095f2 <__udivmoddi4+0x2a6>
 80095c4:	4282      	cmp	r2, r0
 80095c6:	d914      	bls.n	80095f2 <__udivmoddi4+0x2a6>
 80095c8:	3902      	subs	r1, #2
 80095ca:	4460      	add	r0, ip
 80095cc:	1a80      	subs	r0, r0, r2
 80095ce:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80095d2:	e73a      	b.n	800944a <__udivmoddi4+0xfe>
 80095d4:	4631      	mov	r1, r6
 80095d6:	4630      	mov	r0, r6
 80095d8:	e70b      	b.n	80093f2 <__udivmoddi4+0xa6>
 80095da:	4671      	mov	r1, lr
 80095dc:	e6e9      	b.n	80093b2 <__udivmoddi4+0x66>
 80095de:	4610      	mov	r0, r2
 80095e0:	e6fe      	b.n	80093e0 <__udivmoddi4+0x94>
 80095e2:	454d      	cmp	r5, r9
 80095e4:	d2ab      	bcs.n	800953e <__udivmoddi4+0x1f2>
 80095e6:	ebb9 0802 	subs.w	r8, r9, r2
 80095ea:	eb63 0e0c 	sbc.w	lr, r3, ip
 80095ee:	3801      	subs	r0, #1
 80095f0:	e7a5      	b.n	800953e <__udivmoddi4+0x1f2>
 80095f2:	4641      	mov	r1, r8
 80095f4:	e7ea      	b.n	80095cc <__udivmoddi4+0x280>
 80095f6:	4603      	mov	r3, r0
 80095f8:	e796      	b.n	8009528 <__udivmoddi4+0x1dc>
 80095fa:	4645      	mov	r5, r8
 80095fc:	e7d1      	b.n	80095a2 <__udivmoddi4+0x256>
 80095fe:	46d0      	mov	r8, sl
 8009600:	e77d      	b.n	80094fe <__udivmoddi4+0x1b2>
 8009602:	4464      	add	r4, ip
 8009604:	3802      	subs	r0, #2
 8009606:	e749      	b.n	800949c <__udivmoddi4+0x150>
 8009608:	3d02      	subs	r5, #2
 800960a:	4462      	add	r2, ip
 800960c:	e731      	b.n	8009472 <__udivmoddi4+0x126>
 800960e:	4608      	mov	r0, r1
 8009610:	e70a      	b.n	8009428 <__udivmoddi4+0xdc>
 8009612:	4631      	mov	r1, r6
 8009614:	e6ed      	b.n	80093f2 <__udivmoddi4+0xa6>
 8009616:	bf00      	nop

08009618 <RemoteConfig::HandleList()>:
 8009618:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800961c:	6801      	ldr	r1, [r0, #0]
 800961e:	4604      	mov	r4, r0
 8009620:	2012      	movs	r0, #18
 8009622:	f04f 080c 	mov.w	r8, #12
 8009626:	4a29      	ldr	r2, [pc, #164]	; (80096cc <RemoteConfig::HandleList()+0xb4>)
 8009628:	4b29      	ldr	r3, [pc, #164]	; (80096d0 <RemoteConfig::HandleList()+0xb8>)
 800962a:	fb00 2201 	mla	r2, r0, r1, r2
 800962e:	6860      	ldr	r0, [r4, #4]
 8009630:	4928      	ldr	r1, [pc, #160]	; (80096d4 <RemoteConfig::HandleList()+0xbc>)
 8009632:	681b      	ldr	r3, [r3, #0]
 8009634:	fb08 1100 	mla	r1, r8, r0, r1
 8009638:	4e27      	ldr	r6, [pc, #156]	; (80096d8 <RemoteConfig::HandleList()+0xc0>)
 800963a:	4828      	ldr	r0, [pc, #160]	; (80096dc <RemoteConfig::HandleList()+0xc4>)
 800963c:	695f      	ldr	r7, [r3, #20]
 800963e:	6835      	ldr	r5, [r6, #0]
 8009640:	f890 9009 	ldrb.w	r9, [r0, #9]
 8009644:	b2fb      	uxtb	r3, r7
 8009646:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800964a:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800964e:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009652:	b089      	sub	sp, #36	; 0x24
 8009654:	3507      	adds	r5, #7
 8009656:	0e3f      	lsrs	r7, r7, #24
 8009658:	f1b9 0f00 	cmp.w	r9, #0
 800965c:	d01d      	beq.n	800969a <RemoteConfig::HandleList()+0x82>
 800965e:	3009      	adds	r0, #9
 8009660:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8009664:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8009668:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800966c:	4628      	mov	r0, r5
 800966e:	e9cd e701 	strd	lr, r7, [sp, #4]
 8009672:	4a1b      	ldr	r2, [pc, #108]	; (80096e0 <RemoteConfig::HandleList()+0xc8>)
 8009674:	f8cd c000 	str.w	ip, [sp]
 8009678:	f7ff fe40 	bl	80092fc <snprintf>
 800967c:	69e3      	ldr	r3, [r4, #28]
 800967e:	2b05      	cmp	r3, #5
 8009680:	d118      	bne.n	80096b4 <RemoteConfig::HandleList()+0x9c>
 8009682:	f642 1305 	movw	r3, #10501	; 0x2905
 8009686:	9300      	str	r3, [sp, #0]
 8009688:	69a3      	ldr	r3, [r4, #24]
 800968a:	b282      	uxth	r2, r0
 800968c:	4629      	mov	r1, r5
 800968e:	7d20      	ldrb	r0, [r4, #20]
 8009690:	f004 fbf0 	bl	800de74 <udp_send>
 8009694:	b009      	add	sp, #36	; 0x24
 8009696:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800969a:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800969e:	e9cd 7202 	strd	r7, r2, [sp, #8]
 80096a2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80096a6:	4628      	mov	r0, r5
 80096a8:	e9cd ce00 	strd	ip, lr, [sp]
 80096ac:	4a0d      	ldr	r2, [pc, #52]	; (80096e4 <RemoteConfig::HandleList()+0xcc>)
 80096ae:	f7ff fe25 	bl	80092fc <snprintf>
 80096b2:	e7e3      	b.n	800967c <RemoteConfig::HandleList()+0x64>
 80096b4:	2b06      	cmp	r3, #6
 80096b6:	d1ed      	bne.n	8009694 <RemoteConfig::HandleList()+0x7c>
 80096b8:	6833      	ldr	r3, [r6, #0]
 80096ba:	799b      	ldrb	r3, [r3, #6]
 80096bc:	2b2a      	cmp	r3, #42	; 0x2a
 80096be:	d1e9      	bne.n	8009694 <RemoteConfig::HandleList()+0x7c>
 80096c0:	f642 1305 	movw	r3, #10501	; 0x2905
 80096c4:	9300      	str	r3, [sp, #0]
 80096c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80096ca:	e7de      	b.n	800968a <RemoteConfig::HandleList()+0x72>
 80096cc:	08013570 	stmdaeq	r1, {r4, r5, r6, r8, sl, ip, sp}
 80096d0:	20008564 	andcs	r8, r0, r4, ror #10
 80096d4:	08013636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, ip, sp}
 80096d8:	20000084 	andcs	r0, r0, r4, lsl #1
 80096dc:	20000088 	andcs	r0, r0, r8, lsl #1
 80096e0:	08013485 	stmdaeq	r1, {r0, r2, r7, sl, ip, sp}
 80096e4:	0801349e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, ip, sp}

080096e8 <RemoteConfig::HandleDisplayGet()>:
 80096e8:	69c3      	ldr	r3, [r0, #28]
 80096ea:	2b08      	cmp	r3, #8
 80096ec:	d11b      	bne.n	8009726 <RemoteConfig::HandleDisplayGet()+0x3e>
 80096ee:	4b0e      	ldr	r3, [pc, #56]	; (8009728 <RemoteConfig::HandleDisplayGet()+0x40>)
 80096f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096f2:	681b      	ldr	r3, [r3, #0]
 80096f4:	4d0d      	ldr	r5, [pc, #52]	; (800972c <RemoteConfig::HandleDisplayGet()+0x44>)
 80096f6:	7c19      	ldrb	r1, [r3, #16]
 80096f8:	4a0d      	ldr	r2, [pc, #52]	; (8009730 <RemoteConfig::HandleDisplayGet()+0x48>)
 80096fa:	4b0e      	ldr	r3, [pc, #56]	; (8009734 <RemoteConfig::HandleDisplayGet()+0x4c>)
 80096fc:	4604      	mov	r4, r0
 80096fe:	2900      	cmp	r1, #0
 8009700:	bf18      	it	ne
 8009702:	4613      	movne	r3, r2
 8009704:	6828      	ldr	r0, [r5, #0]
 8009706:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800970a:	4a0b      	ldr	r2, [pc, #44]	; (8009738 <RemoteConfig::HandleDisplayGet()+0x50>)
 800970c:	f7ff fdf6 	bl	80092fc <snprintf>
 8009710:	f642 1305 	movw	r3, #10501	; 0x2905
 8009714:	9300      	str	r3, [sp, #0]
 8009716:	b282      	uxth	r2, r0
 8009718:	69a3      	ldr	r3, [r4, #24]
 800971a:	6829      	ldr	r1, [r5, #0]
 800971c:	7d20      	ldrb	r0, [r4, #20]
 800971e:	f004 fba9 	bl	800de74 <udp_send>
 8009722:	b003      	add	sp, #12
 8009724:	bd30      	pop	{r4, r5, pc}
 8009726:	4770      	bx	lr
 8009728:	20009b80 	andcs	r9, r0, r0, lsl #23
 800972c:	20000084 	andcs	r0, r0, r4, lsl #1
 8009730:	080134b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, ip, sp}
 8009734:	080134b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, ip, sp}
 8009738:	080134bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, sl, ip, sp}

0800973c <RemoteConfig::HandleTftpGet()>:
 800973c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800973e:	4604      	mov	r4, r0
 8009740:	f000 fd84 	bl	800a24c <RemoteConfig::PlatformHandleTftpGet()>
 8009744:	69e3      	ldr	r3, [r4, #28]
 8009746:	2b05      	cmp	r3, #5
 8009748:	d116      	bne.n	8009778 <RemoteConfig::HandleTftpGet()+0x3c>
 800974a:	f894 1020 	ldrb.w	r1, [r4, #32]
 800974e:	4d0b      	ldr	r5, [pc, #44]	; (800977c <RemoteConfig::HandleTftpGet()+0x40>)
 8009750:	4a0b      	ldr	r2, [pc, #44]	; (8009780 <RemoteConfig::HandleTftpGet()+0x44>)
 8009752:	4b0c      	ldr	r3, [pc, #48]	; (8009784 <RemoteConfig::HandleTftpGet()+0x48>)
 8009754:	6828      	ldr	r0, [r5, #0]
 8009756:	2900      	cmp	r1, #0
 8009758:	bf08      	it	eq
 800975a:	4613      	moveq	r3, r2
 800975c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009760:	4a09      	ldr	r2, [pc, #36]	; (8009788 <RemoteConfig::HandleTftpGet()+0x4c>)
 8009762:	f7ff fdcb 	bl	80092fc <snprintf>
 8009766:	f642 1305 	movw	r3, #10501	; 0x2905
 800976a:	b282      	uxth	r2, r0
 800976c:	9300      	str	r3, [sp, #0]
 800976e:	6829      	ldr	r1, [r5, #0]
 8009770:	69a3      	ldr	r3, [r4, #24]
 8009772:	7d20      	ldrb	r0, [r4, #20]
 8009774:	f004 fb7e 	bl	800de74 <udp_send>
 8009778:	b003      	add	sp, #12
 800977a:	bd30      	pop	{r4, r5, pc}
 800977c:	20000084 	andcs	r0, r0, r4, lsl #1
 8009780:	080134b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, ip, sp}
 8009784:	080134b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, ip, sp}
 8009788:	080134c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, sl, ip, sp}

0800978c <RemoteConfig::HandleVersion()>:
 800978c:	69c3      	ldr	r3, [r0, #28]
 800978e:	2b08      	cmp	r3, #8
 8009790:	d114      	bne.n	80097bc <RemoteConfig::HandleVersion()+0x30>
 8009792:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009794:	4d0a      	ldr	r5, [pc, #40]	; (80097c0 <RemoteConfig::HandleVersion()+0x34>)
 8009796:	4604      	mov	r4, r0
 8009798:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800979c:	4b09      	ldr	r3, [pc, #36]	; (80097c4 <RemoteConfig::HandleVersion()+0x38>)
 800979e:	4a0a      	ldr	r2, [pc, #40]	; (80097c8 <RemoteConfig::HandleVersion()+0x3c>)
 80097a0:	6828      	ldr	r0, [r5, #0]
 80097a2:	f7ff fdab 	bl	80092fc <snprintf>
 80097a6:	f642 1305 	movw	r3, #10501	; 0x2905
 80097aa:	9300      	str	r3, [sp, #0]
 80097ac:	b282      	uxth	r2, r0
 80097ae:	69a3      	ldr	r3, [r4, #24]
 80097b0:	6829      	ldr	r1, [r5, #0]
 80097b2:	7d20      	ldrb	r0, [r4, #20]
 80097b4:	f004 fb5e 	bl	800de74 <udp_send>
 80097b8:	b003      	add	sp, #12
 80097ba:	bd30      	pop	{r4, r5, pc}
 80097bc:	4770      	bx	lr
 80097be:	bf00      	nop
 80097c0:	20000084 	andcs	r0, r0, r4, lsl #1
 80097c4:	20009c26 	andcs	r9, r0, r6, lsr #24
 80097c8:	080134d0 	stmdaeq	r1, {r4, r6, r7, sl, ip, sp}

080097cc <RemoteConfig::HandleUptime()>:
 80097cc:	7bc3      	ldrb	r3, [r0, #15]
 80097ce:	b1e3      	cbz	r3, 800980a <RemoteConfig::HandleUptime()+0x3e>
 80097d0:	4b0e      	ldr	r3, [pc, #56]	; (800980c <RemoteConfig::HandleUptime()+0x40>)
 80097d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80097d4:	681a      	ldr	r2, [r3, #0]
 80097d6:	69c3      	ldr	r3, [r0, #28]
 80097d8:	4604      	mov	r4, r0
 80097da:	2b07      	cmp	r3, #7
 80097dc:	d113      	bne.n	8009806 <RemoteConfig::HandleUptime()+0x3a>
 80097de:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80097e2:	4d0b      	ldr	r5, [pc, #44]	; (8009810 <RemoteConfig::HandleUptime()+0x44>)
 80097e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80097e8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80097ec:	4a09      	ldr	r2, [pc, #36]	; (8009814 <RemoteConfig::HandleUptime()+0x48>)
 80097ee:	6828      	ldr	r0, [r5, #0]
 80097f0:	f7ff fd84 	bl	80092fc <snprintf>
 80097f4:	f642 1305 	movw	r3, #10501	; 0x2905
 80097f8:	9300      	str	r3, [sp, #0]
 80097fa:	b282      	uxth	r2, r0
 80097fc:	69a3      	ldr	r3, [r4, #24]
 80097fe:	6829      	ldr	r1, [r5, #0]
 8009800:	7d20      	ldrb	r0, [r4, #20]
 8009802:	f004 fb37 	bl	800de74 <udp_send>
 8009806:	b003      	add	sp, #12
 8009808:	bd30      	pop	{r4, r5, pc}
 800980a:	4770      	bx	lr
 800980c:	20009c84 	andcs	r9, r0, r4, lsl #25
 8009810:	20000084 	andcs	r0, r0, r4, lsl #1
 8009814:	080134db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, ip, sp}

08009818 <Display::TextStatus(char const*)>:
 8009818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800981c:	4604      	mov	r4, r0
 800981e:	6980      	ldr	r0, [r0, #24]
 8009820:	2800      	cmp	r0, #0
 8009822:	d032      	beq.n	800988a <Display::TextStatus(char const*)+0x72>
 8009824:	7947      	ldrb	r7, [r0, #5]
 8009826:	6803      	ldr	r3, [r0, #0]
 8009828:	1e7e      	subs	r6, r7, #1
 800982a:	b2f6      	uxtb	r6, r6
 800982c:	460d      	mov	r5, r1
 800982e:	4632      	mov	r2, r6
 8009830:	2100      	movs	r1, #0
 8009832:	6a1b      	ldr	r3, [r3, #32]
 8009834:	f890 9004 	ldrb.w	r9, [r0, #4]
 8009838:	f04f 0800 	mov.w	r8, #0
 800983c:	4798      	blx	r3
 800983e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009842:	45c1      	cmp	r9, r8
 8009844:	69a0      	ldr	r0, [r4, #24]
 8009846:	d818      	bhi.n	800987a <Display::TextStatus(char const*)+0x62>
 8009848:	b120      	cbz	r0, 8009854 <Display::TextStatus(char const*)+0x3c>
 800984a:	6803      	ldr	r3, [r0, #0]
 800984c:	4632      	mov	r2, r6
 800984e:	2100      	movs	r1, #0
 8009850:	6a1b      	ldr	r3, [r3, #32]
 8009852:	4798      	blx	r3
 8009854:	69a0      	ldr	r0, [r4, #24]
 8009856:	b1c0      	cbz	r0, 800988a <Display::TextStatus(char const*)+0x72>
 8009858:	2300      	movs	r3, #0
 800985a:	7901      	ldrb	r1, [r0, #4]
 800985c:	5cea      	ldrb	r2, [r5, r3]
 800985e:	b11a      	cbz	r2, 8009868 <Display::TextStatus(char const*)+0x50>
 8009860:	1c5a      	adds	r2, r3, #1
 8009862:	4299      	cmp	r1, r3
 8009864:	4613      	mov	r3, r2
 8009866:	dcf9      	bgt.n	800985c <Display::TextStatus(char const*)+0x44>
 8009868:	6802      	ldr	r2, [r0, #0]
 800986a:	4639      	mov	r1, r7
 800986c:	69d4      	ldr	r4, [r2, #28]
 800986e:	b2db      	uxtb	r3, r3
 8009870:	462a      	mov	r2, r5
 8009872:	46a4      	mov	ip, r4
 8009874:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009878:	4760      	bx	ip
 800987a:	b118      	cbz	r0, 8009884 <Display::TextStatus(char const*)+0x6c>
 800987c:	6803      	ldr	r3, [r0, #0]
 800987e:	2120      	movs	r1, #32
 8009880:	695b      	ldr	r3, [r3, #20]
 8009882:	4798      	blx	r3
 8009884:	f108 0801 	add.w	r8, r8, #1
 8009888:	e7db      	b.n	8009842 <Display::TextStatus(char const*)+0x2a>
 800988a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800988e <Display::Status(Display7SegmentMessage)>:
 800988e:	7c43      	ldrb	r3, [r0, #17]
 8009890:	b1bb      	cbz	r3, 80098c2 <Display::Status(Display7SegmentMessage)+0x34>
 8009892:	b513      	push	{r0, r1, r4, lr}
 8009894:	2312      	movs	r3, #18
 8009896:	43c9      	mvns	r1, r1
 8009898:	4604      	mov	r4, r0
 800989a:	f88d 3004 	strb.w	r3, [sp, #4]
 800989e:	7a00      	ldrb	r0, [r0, #8]
 80098a0:	f3c1 2307 	ubfx	r3, r1, #8, #8
 80098a4:	f88d 3005 	strb.w	r3, [sp, #5]
 80098a8:	f88d 1006 	strb.w	r1, [sp, #6]
 80098ac:	f008 fe84 	bl	80125b8 <gd32_i2c_set_address>
 80098b0:	68e0      	ldr	r0, [r4, #12]
 80098b2:	f008 fe79 	bl	80125a8 <gd32_i2c_set_baudrate>
 80098b6:	2103      	movs	r1, #3
 80098b8:	a801      	add	r0, sp, #4
 80098ba:	f008 fe83 	bl	80125c4 <gd32_i2c_write>
 80098be:	b002      	add	sp, #8
 80098c0:	bd10      	pop	{r4, pc}
 80098c2:	4770      	bx	lr

080098c4 <RemoteConfig::HandleDisplaySet()>:
 80098c4:	b508      	push	{r3, lr}
 80098c6:	69c3      	ldr	r3, [r0, #28]
 80098c8:	2b09      	cmp	r3, #9
 80098ca:	d10a      	bne.n	80098e2 <RemoteConfig::HandleDisplaySet()+0x1e>
 80098cc:	4b05      	ldr	r3, [pc, #20]	; (80098e4 <RemoteConfig::HandleDisplaySet()+0x20>)
 80098ce:	681b      	ldr	r3, [r3, #0]
 80098d0:	7a59      	ldrb	r1, [r3, #9]
 80098d2:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80098d6:	4259      	negs	r1, r3
 80098d8:	4159      	adcs	r1, r3
 80098da:	4b03      	ldr	r3, [pc, #12]	; (80098e8 <RemoteConfig::HandleDisplaySet()+0x24>)
 80098dc:	6818      	ldr	r0, [r3, #0]
 80098de:	f7fe ff79 	bl	80087d4 <Display::SetSleep(bool)>
 80098e2:	bd08      	pop	{r3, pc}
 80098e4:	20000084 	andcs	r0, r0, r4, lsl #1
 80098e8:	20009b80 	andcs	r9, r0, r0, lsl #23

080098ec <RemoteConfig::HandleTftpSet()>:
 80098ec:	69c3      	ldr	r3, [r0, #28]
 80098ee:	2b06      	cmp	r3, #6
 80098f0:	d127      	bne.n	8009942 <RemoteConfig::HandleTftpSet()+0x56>
 80098f2:	b570      	push	{r4, r5, r6, lr}
 80098f4:	4b13      	ldr	r3, [pc, #76]	; (8009944 <RemoteConfig::HandleTftpSet()+0x58>)
 80098f6:	4e14      	ldr	r6, [pc, #80]	; (8009948 <RemoteConfig::HandleTftpSet()+0x5c>)
 80098f8:	681b      	ldr	r3, [r3, #0]
 80098fa:	4604      	mov	r4, r0
 80098fc:	799b      	ldrb	r3, [r3, #6]
 80098fe:	6835      	ldr	r5, [r6, #0]
 8009900:	2b30      	cmp	r3, #48	; 0x30
 8009902:	bf14      	ite	ne
 8009904:	2301      	movne	r3, #1
 8009906:	2300      	moveq	r3, #0
 8009908:	f880 3020 	strb.w	r3, [r0, #32]
 800990c:	d012      	beq.n	8009934 <RemoteConfig::HandleTftpSet()+0x48>
 800990e:	4628      	mov	r0, r5
 8009910:	2100      	movs	r1, #0
 8009912:	f7fe ff5f 	bl	80087d4 <Display::SetSleep(bool)>
 8009916:	6835      	ldr	r5, [r6, #0]
 8009918:	490c      	ldr	r1, [pc, #48]	; (800994c <RemoteConfig::HandleTftpSet()+0x60>)
 800991a:	4628      	mov	r0, r5
 800991c:	f7ff ff7c 	bl	8009818 <Display::TextStatus(char const*)>
 8009920:	f244 0171 	movw	r1, #16497	; 0x4071
 8009924:	4628      	mov	r0, r5
 8009926:	f7ff ffb2 	bl	800988e <Display::Status(Display7SegmentMessage)>
 800992a:	4620      	mov	r0, r4
 800992c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009930:	f000 bc84 	b.w	800a23c <RemoteConfig::PlatformHandleTftpSet()>
 8009934:	4906      	ldr	r1, [pc, #24]	; (8009950 <RemoteConfig::HandleTftpSet()+0x64>)
 8009936:	4628      	mov	r0, r5
 8009938:	f7ff ff6e 	bl	8009818 <Display::TextStatus(char const*)>
 800993c:	f248 0171 	movw	r1, #32881	; 0x8071
 8009940:	e7f0      	b.n	8009924 <RemoteConfig::HandleTftpSet()+0x38>
 8009942:	4770      	bx	lr
 8009944:	20000084 	andcs	r0, r0, r4, lsl #1
 8009948:	20009b80 	andcs	r9, r0, r0, lsl #23
 800994c:	080134e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, ip, sp}
 8009950:	080134fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, sl, ip, sp}

08009954 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009954:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009958:	2500      	movs	r5, #0
 800995a:	461f      	mov	r7, r3
 800995c:	6083      	str	r3, [r0, #8]
 800995e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009962:	4690      	mov	r8, r2
 8009964:	4689      	mov	r9, r1
 8009966:	4e12      	ldr	r6, [pc, #72]	; (80099b0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009968:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800996c:	f8df a044 	ldr.w	sl, [pc, #68]	; 80099b4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009970:	4b11      	ldr	r3, [pc, #68]	; (80099b8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8009972:	e9c0 1200 	strd	r1, r2, [r0]
 8009976:	4604      	mov	r4, r0
 8009978:	6018      	str	r0, [r3, #0]
 800997a:	4631      	mov	r1, r6
 800997c:	60c5      	str	r5, [r0, #12]
 800997e:	8205      	strh	r5, [r0, #16]
 8009980:	61c5      	str	r5, [r0, #28]
 8009982:	f880 5020 	strb.w	r5, [r0, #32]
 8009986:	f8da 0000 	ldr.w	r0, [sl]
 800998a:	f004 ff3e 	bl	800e80a <Network::MacAddressCopyTo(unsigned char*)>
 800998e:	f642 1105 	movw	r1, #10501	; 0x2905
 8009992:	f8da 0000 	ldr.w	r0, [sl]
 8009996:	f886 9006 	strb.w	r9, [r6, #6]
 800999a:	f886 8007 	strb.w	r8, [r6, #7]
 800999e:	7237      	strb	r7, [r6, #8]
 80099a0:	7275      	strb	r5, [r6, #9]
 80099a2:	f004 ff2c 	bl	800e7fe <Network::Begin(unsigned short)>
 80099a6:	6160      	str	r0, [r4, #20]
 80099a8:	4620      	mov	r0, r4
 80099aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80099ae:	bf00      	nop
 80099b0:	20000088 	andcs	r0, r0, r8, lsl #1
 80099b4:	20008564 	andcs	r8, r0, r4, ror #10
 80099b8:	200000ac 	andcs	r0, r0, ip, lsr #1

080099bc <RemoteConfig::GetStringNode() const>:
 80099bc:	2012      	movs	r0, #18
 80099be:	4b03      	ldr	r3, [pc, #12]	; (80099cc <RemoteConfig::GetStringNode() const+0x10>)
 80099c0:	799a      	ldrb	r2, [r3, #6]
 80099c2:	4b03      	ldr	r3, [pc, #12]	; (80099d0 <RemoteConfig::GetStringNode() const+0x14>)
 80099c4:	fb00 3002 	mla	r0, r0, r2, r3
 80099c8:	4770      	bx	lr
 80099ca:	bf00      	nop
 80099cc:	20000088 	andcs	r0, r0, r8, lsl #1
 80099d0:	08013570 	stmdaeq	r1, {r4, r5, r6, r8, sl, ip, sp}

080099d4 <RemoteConfig::GetStringOutput() const>:
 80099d4:	200c      	movs	r0, #12
 80099d6:	4b03      	ldr	r3, [pc, #12]	; (80099e4 <RemoteConfig::GetStringOutput() const+0x10>)
 80099d8:	79da      	ldrb	r2, [r3, #7]
 80099da:	4b03      	ldr	r3, [pc, #12]	; (80099e8 <RemoteConfig::GetStringOutput() const+0x14>)
 80099dc:	fb00 3002 	mla	r0, r0, r2, r3
 80099e0:	4770      	bx	lr
 80099e2:	bf00      	nop
 80099e4:	20000088 	andcs	r0, r0, r8, lsl #1
 80099e8:	08013636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, ip, sp}

080099ec <RemoteConfig::SetDisable(bool)>:
 80099ec:	b538      	push	{r3, r4, r5, lr}
 80099ee:	4604      	mov	r4, r0
 80099f0:	7b03      	ldrb	r3, [r0, #12]
 80099f2:	b161      	cbz	r1, 8009a0e <RemoteConfig::SetDisable(bool)+0x22>
 80099f4:	b953      	cbnz	r3, 8009a0c <RemoteConfig::SetDisable(bool)+0x20>
 80099f6:	4b0c      	ldr	r3, [pc, #48]	; (8009a28 <RemoteConfig::SetDisable(bool)+0x3c>)
 80099f8:	f642 1105 	movw	r1, #10501	; 0x2905
 80099fc:	6818      	ldr	r0, [r3, #0]
 80099fe:	f004 ff01 	bl	800e804 <Network::End(unsigned short)>
 8009a02:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009a06:	6163      	str	r3, [r4, #20]
 8009a08:	2301      	movs	r3, #1
 8009a0a:	7323      	strb	r3, [r4, #12]
 8009a0c:	bd38      	pop	{r3, r4, r5, pc}
 8009a0e:	2b00      	cmp	r3, #0
 8009a10:	d0fc      	beq.n	8009a0c <RemoteConfig::SetDisable(bool)+0x20>
 8009a12:	4b05      	ldr	r3, [pc, #20]	; (8009a28 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009a14:	460d      	mov	r5, r1
 8009a16:	6818      	ldr	r0, [r3, #0]
 8009a18:	f642 1105 	movw	r1, #10501	; 0x2905
 8009a1c:	f004 feef 	bl	800e7fe <Network::Begin(unsigned short)>
 8009a20:	7325      	strb	r5, [r4, #12]
 8009a22:	6160      	str	r0, [r4, #20]
 8009a24:	e7f2      	b.n	8009a0c <RemoteConfig::SetDisable(bool)+0x20>
 8009a26:	bf00      	nop
 8009a28:	20008564 	andcs	r8, r0, r4, ror #10

08009a2c <RemoteConfig::SetDisplayName(char const*)>:
 8009a2c:	2217      	movs	r2, #23
 8009a2e:	4809      	ldr	r0, [pc, #36]	; (8009a54 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009a30:	b508      	push	{r3, lr}
 8009a32:	1e4b      	subs	r3, r1, #1
 8009a34:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009a38:	b911      	cbnz	r1, 8009a40 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009a3a:	f007 fb55 	bl	80110e8 <memset>
 8009a3e:	e003      	b.n	8009a48 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009a40:	3a01      	subs	r2, #1
 8009a42:	f800 1b01 	strb.w	r1, [r0], #1
 8009a46:	d1f5      	bne.n	8009a34 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009a48:	2200      	movs	r2, #0
 8009a4a:	4b03      	ldr	r3, [pc, #12]	; (8009a58 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009a4c:	f883 2020 	strb.w	r2, [r3, #32]
 8009a50:	bd08      	pop	{r3, pc}
 8009a52:	bf00      	nop
 8009a54:	20000091 	mulcs	r0, r1, r0
 8009a58:	20000088 	andcs	r0, r0, r8, lsl #1

08009a5c <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a5e:	4604      	mov	r4, r0
 8009a60:	4616      	mov	r6, r2
 8009a62:	460d      	mov	r5, r1
 8009a64:	4f28      	ldr	r7, [pc, #160]	; (8009b08 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009a66:	b085      	sub	sp, #20
 8009a68:	b9a9      	cbnz	r1, 8009a96 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009a6a:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009a6e:	6839      	ldr	r1, [r7, #0]
 8009a70:	aa03      	add	r2, sp, #12
 8009a72:	3105      	adds	r1, #5
 8009a74:	9303      	str	r3, [sp, #12]
 8009a76:	f000 fbb7 	bl	800a1e8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009a7a:	1e03      	subs	r3, r0, #0
 8009a7c:	da1b      	bge.n	8009ab6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009a7e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a82:	220b      	movs	r2, #11
 8009a84:	9300      	str	r3, [sp, #0]
 8009a86:	4921      	ldr	r1, [pc, #132]	; (8009b0c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009a88:	69a3      	ldr	r3, [r4, #24]
 8009a8a:	7d20      	ldrb	r0, [r4, #20]
 8009a8c:	f004 f9f2 	bl	800de74 <udp_send>
 8009a90:	200c      	movs	r0, #12
 8009a92:	b005      	add	sp, #20
 8009a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a96:	9203      	str	r2, [sp, #12]
 8009a98:	aa03      	add	r2, sp, #12
 8009a9a:	6039      	str	r1, [r7, #0]
 8009a9c:	f000 fba4 	bl	800a1e8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009aa0:	1e03      	subs	r3, r0, #0
 8009aa2:	da08      	bge.n	8009ab6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009aa4:	2e0b      	cmp	r6, #11
 8009aa6:	4632      	mov	r2, r6
 8009aa8:	4628      	mov	r0, r5
 8009aaa:	bf28      	it	cs
 8009aac:	220b      	movcs	r2, #11
 8009aae:	4917      	ldr	r1, [pc, #92]	; (8009b0c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009ab0:	f007 faf8 	bl	80110a4 <memcpy>
 8009ab4:	e7ec      	b.n	8009a90 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009ab6:	221c      	movs	r2, #28
 8009ab8:	4353      	muls	r3, r2
 8009aba:	4915      	ldr	r1, [pc, #84]	; (8009b10 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009abc:	18ca      	adds	r2, r1, r3
 8009abe:	6852      	ldr	r2, [r2, #4]
 8009ac0:	58cb      	ldr	r3, [r1, r3]
 8009ac2:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009ac6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009aca:	07d2      	lsls	r2, r2, #31
 8009acc:	bf48      	it	mi
 8009ace:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009ad2:	a903      	add	r1, sp, #12
 8009ad4:	bf48      	it	mi
 8009ad6:	58d3      	ldrmi	r3, [r2, r3]
 8009ad8:	4798      	blx	r3
 8009ada:	b95d      	cbnz	r5, 8009af4 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009adc:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ae0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009ae4:	9300      	str	r3, [sp, #0]
 8009ae6:	6839      	ldr	r1, [r7, #0]
 8009ae8:	69a3      	ldr	r3, [r4, #24]
 8009aea:	7d20      	ldrb	r0, [r4, #20]
 8009aec:	f004 f9c2 	bl	800de74 <udp_send>
 8009af0:	9803      	ldr	r0, [sp, #12]
 8009af2:	e7ce      	b.n	8009a92 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009af4:	9a03      	ldr	r2, [sp, #12]
 8009af6:	4628      	mov	r0, r5
 8009af8:	42b2      	cmp	r2, r6
 8009afa:	bf28      	it	cs
 8009afc:	4632      	movcs	r2, r6
 8009afe:	6839      	ldr	r1, [r7, #0]
 8009b00:	f007 fadb 	bl	80110ba <memmove>
 8009b04:	e7f4      	b.n	8009af0 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009b06:	bf00      	nop
 8009b08:	20000084 	andcs	r0, r0, r4, lsl #1
 8009b0c:	0801350d 	stmdaeq	r1, {r0, r2, r3, r8, sl, ip, sp}
 8009b10:	080137e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, ip, sp}

08009b14 <RemoteConfig::HandleGetNoParams()>:
 8009b14:	2200      	movs	r2, #0
 8009b16:	4611      	mov	r1, r2
 8009b18:	f7ff bfa0 	b.w	8009a5c <RemoteConfig::HandleGet(void*, unsigned int)>

08009b1c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009b1c:	b510      	push	{r4, lr}
 8009b1e:	460c      	mov	r4, r1
 8009b20:	4b07      	ldr	r3, [pc, #28]	; (8009b40 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009b22:	b08a      	sub	sp, #40	; 0x28
 8009b24:	6819      	ldr	r1, [r3, #0]
 8009b26:	a801      	add	r0, sp, #4
 8009b28:	f000 f9ba 	bl	8009ea0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009b2c:	4905      	ldr	r1, [pc, #20]	; (8009b44 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009b2e:	4623      	mov	r3, r4
 8009b30:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b34:	6809      	ldr	r1, [r1, #0]
 8009b36:	a801      	add	r0, sp, #4
 8009b38:	f000 fad6 	bl	800a0e8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009b3c:	b00a      	add	sp, #40	; 0x28
 8009b3e:	bd10      	pop	{r4, pc}
 8009b40:	20009b58 	andcs	r9, r0, r8, asr fp
 8009b44:	20000084 	andcs	r0, r0, r4, lsl #1

08009b48 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009b48:	b510      	push	{r4, lr}
 8009b4a:	460c      	mov	r4, r1
 8009b4c:	4b07      	ldr	r3, [pc, #28]	; (8009b6c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009b4e:	b09a      	sub	sp, #104	; 0x68
 8009b50:	6819      	ldr	r1, [r3, #0]
 8009b52:	a801      	add	r0, sp, #4
 8009b54:	f005 f838 	bl	800ebc8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009b58:	4905      	ldr	r1, [pc, #20]	; (8009b70 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009b5a:	4623      	mov	r3, r4
 8009b5c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b60:	6809      	ldr	r1, [r1, #0]
 8009b62:	a801      	add	r0, sp, #4
 8009b64:	f005 fa0c 	bl	800ef80 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009b68:	b01a      	add	sp, #104	; 0x68
 8009b6a:	bd10      	pop	{r4, pc}
 8009b6c:	20009b50 	andcs	r9, r0, r0, asr fp
 8009b70:	20000084 	andcs	r0, r0, r4, lsl #1

08009b74 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 8009b74:	b510      	push	{r4, lr}
 8009b76:	460c      	mov	r4, r1
 8009b78:	4b07      	ldr	r3, [pc, #28]	; (8009b98 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 8009b7a:	b0e4      	sub	sp, #400	; 0x190
 8009b7c:	6819      	ldr	r1, [r3, #0]
 8009b7e:	4668      	mov	r0, sp
 8009b80:	f001 fa88 	bl	800b094 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009b84:	4905      	ldr	r1, [pc, #20]	; (8009b9c <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 8009b86:	4623      	mov	r3, r4
 8009b88:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b8c:	4668      	mov	r0, sp
 8009b8e:	6809      	ldr	r1, [r1, #0]
 8009b90:	f001 fc1a 	bl	800b3c8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 8009b94:	b064      	add	sp, #400	; 0x190
 8009b96:	bd10      	pop	{r4, pc}
 8009b98:	20009b54 	andcs	r9, r0, r4, asr fp
 8009b9c:	20000084 	andcs	r0, r0, r4, lsl #1

08009ba0 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009ba0:	b510      	push	{r4, lr}
 8009ba2:	460c      	mov	r4, r1
 8009ba4:	4b07      	ldr	r3, [pc, #28]	; (8009bc4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009ba6:	b088      	sub	sp, #32
 8009ba8:	6819      	ldr	r1, [r3, #0]
 8009baa:	a801      	add	r0, sp, #4
 8009bac:	f002 f87e 	bl	800bcac <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009bb0:	4905      	ldr	r1, [pc, #20]	; (8009bc8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009bb2:	4623      	mov	r3, r4
 8009bb4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009bb8:	6809      	ldr	r1, [r1, #0]
 8009bba:	a801      	add	r0, sp, #4
 8009bbc:	f002 fb78 	bl	800c2b0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009bc0:	b008      	add	sp, #32
 8009bc2:	bd10      	pop	{r4, pc}
 8009bc4:	20009b5c 	andcs	r9, r0, ip, asr fp
 8009bc8:	20000084 	andcs	r0, r0, r4, lsl #1

08009bcc <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009bcc:	b530      	push	{r4, r5, lr}
 8009bce:	b085      	sub	sp, #20
 8009bd0:	4604      	mov	r4, r0
 8009bd2:	9201      	str	r2, [sp, #4]
 8009bd4:	b9d1      	cbnz	r1, 8009c0c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009bd6:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009bda:	9303      	str	r3, [sp, #12]
 8009bdc:	4b19      	ldr	r3, [pc, #100]	; (8009c44 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009bde:	aa03      	add	r2, sp, #12
 8009be0:	6819      	ldr	r1, [r3, #0]
 8009be2:	3101      	adds	r1, #1
 8009be4:	f000 fb00 	bl	800a1e8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009be8:	2800      	cmp	r0, #0
 8009bea:	db0d      	blt.n	8009c08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009bec:	221c      	movs	r2, #28
 8009bee:	4b16      	ldr	r3, [pc, #88]	; (8009c48 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009bf0:	fb02 3300 	mla	r3, r2, r0, r3
 8009bf4:	68da      	ldr	r2, [r3, #12]
 8009bf6:	689b      	ldr	r3, [r3, #8]
 8009bf8:	1051      	asrs	r1, r2, #1
 8009bfa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009bfe:	07d2      	lsls	r2, r2, #31
 8009c00:	bf44      	itt	mi
 8009c02:	5862      	ldrmi	r2, [r4, r1]
 8009c04:	58d3      	ldrmi	r3, [r2, r3]
 8009c06:	4798      	blx	r3
 8009c08:	b005      	add	sp, #20
 8009c0a:	bd30      	pop	{r4, r5, pc}
 8009c0c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009c10:	d8fa      	bhi.n	8009c08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009c12:	4b0e      	ldr	r3, [pc, #56]	; (8009c4c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009c14:	460d      	mov	r5, r1
 8009c16:	781b      	ldrb	r3, [r3, #0]
 8009c18:	07d9      	lsls	r1, r3, #31
 8009c1a:	d50b      	bpl.n	8009c34 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009c1c:	782b      	ldrb	r3, [r5, #0]
 8009c1e:	2b7b      	cmp	r3, #123	; 0x7b
 8009c20:	d108      	bne.n	8009c34 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009c22:	1e51      	subs	r1, r2, #1
 8009c24:	4628      	mov	r0, r5
 8009c26:	2200      	movs	r2, #0
 8009c28:	b289      	uxth	r1, r1
 8009c2a:	f006 facd 	bl	80101c8 <properties::convert_json_file(char*, unsigned short, bool)>
 8009c2e:	1e02      	subs	r2, r0, #0
 8009c30:	ddea      	ble.n	8009c08 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009c32:	b292      	uxth	r2, r2
 8009c34:	4b03      	ldr	r3, [pc, #12]	; (8009c44 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009c36:	61e2      	str	r2, [r4, #28]
 8009c38:	4620      	mov	r0, r4
 8009c3a:	601d      	str	r5, [r3, #0]
 8009c3c:	aa01      	add	r2, sp, #4
 8009c3e:	1c69      	adds	r1, r5, #1
 8009c40:	e7d0      	b.n	8009be4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009c42:	bf00      	nop
 8009c44:	20000084 	andcs	r0, r0, r4, lsl #1
 8009c48:	080137e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, ip, sp}
 8009c4c:	20009b7c 	andcs	r9, r0, ip, ror fp

08009c50 <RemoteConfig::Run()>:
 8009c50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009c54:	7b05      	ldrb	r5, [r0, #12]
 8009c56:	2d00      	cmp	r5, #0
 8009c58:	d156      	bne.n	8009d08 <RemoteConfig::Run()+0xb8>
 8009c5a:	4e45      	ldr	r6, [pc, #276]	; (8009d70 <RemoteConfig::Run()+0x120>)
 8009c5c:	4604      	mov	r4, r0
 8009c5e:	f100 0218 	add.w	r2, r0, #24
 8009c62:	4631      	mov	r1, r6
 8009c64:	7d00      	ldrb	r0, [r0, #20]
 8009c66:	f10d 030e 	add.w	r3, sp, #14
 8009c6a:	f004 f8dd 	bl	800de28 <udp_recv2>
 8009c6e:	2803      	cmp	r0, #3
 8009c70:	61e0      	str	r0, [r4, #28]
 8009c72:	d949      	bls.n	8009d08 <RemoteConfig::Run()+0xb8>
 8009c74:	6831      	ldr	r1, [r6, #0]
 8009c76:	1e43      	subs	r3, r0, #1
 8009c78:	5cca      	ldrb	r2, [r1, r3]
 8009c7a:	2a0a      	cmp	r2, #10
 8009c7c:	bf18      	it	ne
 8009c7e:	4603      	movne	r3, r0
 8009c80:	61e3      	str	r3, [r4, #28]
 8009c82:	7808      	ldrb	r0, [r1, #0]
 8009c84:	283f      	cmp	r0, #63	; 0x3f
 8009c86:	d137      	bne.n	8009cf8 <RemoteConfig::Run()+0xa8>
 8009c88:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009d74 <RemoteConfig::Run()+0x124>
 8009c8c:	462a      	mov	r2, r5
 8009c8e:	4667      	mov	r7, ip
 8009c90:	3b01      	subs	r3, #1
 8009c92:	61e3      	str	r3, [r4, #28]
 8009c94:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009c98:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009c9c:	b16d      	cbz	r5, 8009cba <RemoteConfig::Run()+0x6a>
 8009c9e:	4283      	cmp	r3, r0
 8009ca0:	d80d      	bhi.n	8009cbe <RemoteConfig::Run()+0x6e>
 8009ca2:	3201      	adds	r2, #1
 8009ca4:	2a09      	cmp	r2, #9
 8009ca6:	f10c 0c10 	add.w	ip, ip, #16
 8009caa:	d1f3      	bne.n	8009c94 <RemoteConfig::Run()+0x44>
 8009cac:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cb0:	9300      	str	r3, [sp, #0]
 8009cb2:	2208      	movs	r2, #8
 8009cb4:	69a3      	ldr	r3, [r4, #24]
 8009cb6:	4930      	ldr	r1, [pc, #192]	; (8009d78 <RemoteConfig::Run()+0x128>)
 8009cb8:	e04e      	b.n	8009d58 <RemoteConfig::Run()+0x108>
 8009cba:	4283      	cmp	r3, r0
 8009cbc:	d1f1      	bne.n	8009ca2 <RemoteConfig::Run()+0x52>
 8009cbe:	460e      	mov	r6, r1
 8009cc0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009cc4:	4408      	add	r0, r1
 8009cc6:	3d01      	subs	r5, #1
 8009cc8:	4286      	cmp	r6, r0
 8009cca:	d10b      	bne.n	8009ce4 <RemoteConfig::Run()+0x94>
 8009ccc:	0113      	lsls	r3, r2, #4
 8009cce:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009cd2:	6852      	ldr	r2, [r2, #4]
 8009cd4:	58fb      	ldr	r3, [r7, r3]
 8009cd6:	1051      	asrs	r1, r2, #1
 8009cd8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009cdc:	07d2      	lsls	r2, r2, #31
 8009cde:	d408      	bmi.n	8009cf2 <RemoteConfig::Run()+0xa2>
 8009ce0:	4798      	blx	r3
 8009ce2:	e011      	b.n	8009d08 <RemoteConfig::Run()+0xb8>
 8009ce4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009ce8:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009cec:	45f0      	cmp	r8, lr
 8009cee:	d0eb      	beq.n	8009cc8 <RemoteConfig::Run()+0x78>
 8009cf0:	e7d7      	b.n	8009ca2 <RemoteConfig::Run()+0x52>
 8009cf2:	5862      	ldr	r2, [r4, r1]
 8009cf4:	58d3      	ldr	r3, [r2, r3]
 8009cf6:	e7f3      	b.n	8009ce0 <RemoteConfig::Run()+0x90>
 8009cf8:	7b62      	ldrb	r2, [r4, #13]
 8009cfa:	b92a      	cbnz	r2, 8009d08 <RemoteConfig::Run()+0xb8>
 8009cfc:	2823      	cmp	r0, #35	; 0x23
 8009cfe:	d106      	bne.n	8009d0e <RemoteConfig::Run()+0xbe>
 8009d00:	4611      	mov	r1, r2
 8009d02:	4620      	mov	r0, r4
 8009d04:	f7ff ff62 	bl	8009bcc <RemoteConfig::HandleSet(void*, unsigned int)>
 8009d08:	b004      	add	sp, #16
 8009d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d0e:	2821      	cmp	r0, #33	; 0x21
 8009d10:	d1fa      	bne.n	8009d08 <RemoteConfig::Run()+0xb8>
 8009d12:	3b01      	subs	r3, #1
 8009d14:	2b05      	cmp	r3, #5
 8009d16:	61e3      	str	r3, [r4, #28]
 8009d18:	d918      	bls.n	8009d4c <RemoteConfig::Run()+0xfc>
 8009d1a:	460a      	mov	r2, r1
 8009d1c:	4608      	mov	r0, r1
 8009d1e:	4d17      	ldr	r5, [pc, #92]	; (8009d7c <RemoteConfig::Run()+0x12c>)
 8009d20:	f101 0c05 	add.w	ip, r1, #5
 8009d24:	4560      	cmp	r0, ip
 8009d26:	d01b      	beq.n	8009d60 <RemoteConfig::Run()+0x110>
 8009d28:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009d2c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009d30:	42b7      	cmp	r7, r6
 8009d32:	d0f7      	beq.n	8009d24 <RemoteConfig::Run()+0xd4>
 8009d34:	2b08      	cmp	r3, #8
 8009d36:	d909      	bls.n	8009d4c <RemoteConfig::Run()+0xfc>
 8009d38:	4b11      	ldr	r3, [pc, #68]	; (8009d80 <RemoteConfig::Run()+0x130>)
 8009d3a:	3108      	adds	r1, #8
 8009d3c:	428a      	cmp	r2, r1
 8009d3e:	d015      	beq.n	8009d6c <RemoteConfig::Run()+0x11c>
 8009d40:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009d44:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009d48:	4285      	cmp	r5, r0
 8009d4a:	d0f7      	beq.n	8009d3c <RemoteConfig::Run()+0xec>
 8009d4c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d50:	2208      	movs	r2, #8
 8009d52:	9300      	str	r3, [sp, #0]
 8009d54:	69a3      	ldr	r3, [r4, #24]
 8009d56:	490b      	ldr	r1, [pc, #44]	; (8009d84 <RemoteConfig::Run()+0x134>)
 8009d58:	7d20      	ldrb	r0, [r4, #20]
 8009d5a:	f004 f88b 	bl	800de74 <udp_send>
 8009d5e:	e7d3      	b.n	8009d08 <RemoteConfig::Run()+0xb8>
 8009d60:	2300      	movs	r3, #0
 8009d62:	4a09      	ldr	r2, [pc, #36]	; (8009d88 <RemoteConfig::Run()+0x138>)
 8009d64:	011b      	lsls	r3, r3, #4
 8009d66:	4620      	mov	r0, r4
 8009d68:	58d3      	ldr	r3, [r2, r3]
 8009d6a:	e7b9      	b.n	8009ce0 <RemoteConfig::Run()+0x90>
 8009d6c:	2301      	movs	r3, #1
 8009d6e:	e7f8      	b.n	8009d62 <RemoteConfig::Run()+0x112>
 8009d70:	20000084 	andcs	r0, r0, r4, lsl #1
 8009d74:	080136c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, ip, sp}
 8009d78:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 8009d7c:	08013519 	stmdaeq	r1, {r0, r3, r4, r8, sl, ip, sp}
 8009d80:	0801351f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, ip, sp}
 8009d84:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 8009d88:	08013758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, ip, sp}

08009d8c <RemoteConfig::HandleSetRconfig()>:
 8009d8c:	b510      	push	{r4, lr}
 8009d8e:	4604      	mov	r4, r0
 8009d90:	4b08      	ldr	r3, [pc, #32]	; (8009db4 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009d92:	b08a      	sub	sp, #40	; 0x28
 8009d94:	6819      	ldr	r1, [r3, #0]
 8009d96:	a801      	add	r0, sp, #4
 8009d98:	f000 f882 	bl	8009ea0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d9c:	4b06      	ldr	r3, [pc, #24]	; (8009db8 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009d9e:	69e2      	ldr	r2, [r4, #28]
 8009da0:	6819      	ldr	r1, [r3, #0]
 8009da2:	a801      	add	r0, sp, #4
 8009da4:	f000 f892 	bl	8009ecc <RemoteConfigParams::Load(char const*, unsigned int)>
 8009da8:	4621      	mov	r1, r4
 8009daa:	a801      	add	r0, sp, #4
 8009dac:	f000 f9a9 	bl	800a102 <RemoteConfigParams::Set(RemoteConfig*)>
 8009db0:	b00a      	add	sp, #40	; 0x28
 8009db2:	bd10      	pop	{r4, pc}
 8009db4:	20009b58 	andcs	r9, r0, r8, asr fp
 8009db8:	20000084 	andcs	r0, r0, r4, lsl #1

08009dbc <RemoteConfig::HandleSetNetworkTxt()>:
 8009dbc:	b510      	push	{r4, lr}
 8009dbe:	4604      	mov	r4, r0
 8009dc0:	4b06      	ldr	r3, [pc, #24]	; (8009ddc <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009dc2:	b09a      	sub	sp, #104	; 0x68
 8009dc4:	6819      	ldr	r1, [r3, #0]
 8009dc6:	a801      	add	r0, sp, #4
 8009dc8:	f004 fefe 	bl	800ebc8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009dcc:	4b04      	ldr	r3, [pc, #16]	; (8009de0 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009dce:	69e2      	ldr	r2, [r4, #28]
 8009dd0:	6819      	ldr	r1, [r3, #0]
 8009dd2:	a801      	add	r0, sp, #4
 8009dd4:	f004 ff10 	bl	800ebf8 <NetworkParams::Load(char const*, unsigned int)>
 8009dd8:	b01a      	add	sp, #104	; 0x68
 8009dda:	bd10      	pop	{r4, pc}
 8009ddc:	20009b50 	andcs	r9, r0, r0, asr fp
 8009de0:	20000084 	andcs	r0, r0, r4, lsl #1

08009de4 <RemoteConfig::HandleSetOscTxt()>:
 8009de4:	b510      	push	{r4, lr}
 8009de6:	4604      	mov	r4, r0
 8009de8:	4b06      	ldr	r3, [pc, #24]	; (8009e04 <RemoteConfig::HandleSetOscTxt()+0x20>)
 8009dea:	b0e4      	sub	sp, #400	; 0x190
 8009dec:	6819      	ldr	r1, [r3, #0]
 8009dee:	4668      	mov	r0, sp
 8009df0:	f001 f950 	bl	800b094 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009df4:	4b04      	ldr	r3, [pc, #16]	; (8009e08 <RemoteConfig::HandleSetOscTxt()+0x24>)
 8009df6:	4668      	mov	r0, sp
 8009df8:	69e2      	ldr	r2, [r4, #28]
 8009dfa:	6819      	ldr	r1, [r3, #0]
 8009dfc:	f001 f966 	bl	800b0cc <OSCServerParams::Load(char const*, unsigned int)>
 8009e00:	b064      	add	sp, #400	; 0x190
 8009e02:	bd10      	pop	{r4, pc}
 8009e04:	20009b54 	andcs	r9, r0, r4, asr fp
 8009e08:	20000084 	andcs	r0, r0, r4, lsl #1

08009e0c <RemoteConfig::HandleSetDevicesTxt()>:
 8009e0c:	b510      	push	{r4, lr}
 8009e0e:	4604      	mov	r4, r0
 8009e10:	4b06      	ldr	r3, [pc, #24]	; (8009e2c <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 8009e12:	b088      	sub	sp, #32
 8009e14:	6819      	ldr	r1, [r3, #0]
 8009e16:	a801      	add	r0, sp, #4
 8009e18:	f001 ff48 	bl	800bcac <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009e1c:	4b04      	ldr	r3, [pc, #16]	; (8009e30 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 8009e1e:	69e2      	ldr	r2, [r4, #28]
 8009e20:	6819      	ldr	r1, [r3, #0]
 8009e22:	a801      	add	r0, sp, #4
 8009e24:	f001 ff64 	bl	800bcf0 <PixelDmxParams::Load(char const*, unsigned int)>
 8009e28:	b008      	add	sp, #32
 8009e2a:	bd10      	pop	{r4, pc}
 8009e2c:	20009b5c 	andcs	r9, r0, ip, asr fp
 8009e30:	20000084 	andcs	r0, r0, r4, lsl #1

08009e34 <RemoteConfig::HandleFactory()>:
 8009e34:	b538      	push	{r3, r4, r5, lr}
 8009e36:	2400      	movs	r4, #0
 8009e38:	4d04      	ldr	r5, [pc, #16]	; (8009e4c <RemoteConfig::HandleFactory()+0x18>)
 8009e3a:	4621      	mov	r1, r4
 8009e3c:	6828      	ldr	r0, [r5, #0]
 8009e3e:	3401      	adds	r4, #1
 8009e40:	f005 fd4c 	bl	800f8dc <ConfigStore::ResetSetList(configstore::Store)>
 8009e44:	2c1c      	cmp	r4, #28
 8009e46:	d1f8      	bne.n	8009e3a <RemoteConfig::HandleFactory()+0x6>
 8009e48:	bd38      	pop	{r3, r4, r5, pc}
 8009e4a:	bf00      	nop
 8009e4c:	20009b48 	andcs	r9, r0, r8, asr #22

08009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009e50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e52:	460b      	mov	r3, r1
 8009e54:	8885      	ldrh	r5, [r0, #4]
 8009e56:	88c1      	ldrh	r1, [r0, #6]
 8009e58:	42a9      	cmp	r1, r5
 8009e5a:	d214      	bcs.n	8009e86 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009e5c:	4604      	mov	r4, r0
 8009e5e:	6800      	ldr	r0, [r0, #0]
 8009e60:	1a6d      	subs	r5, r5, r1
 8009e62:	4408      	add	r0, r1
 8009e64:	7a21      	ldrb	r1, [r4, #8]
 8009e66:	b91a      	cbnz	r2, 8009e70 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009e68:	b919      	cbnz	r1, 8009e72 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009e6a:	4a0a      	ldr	r2, [pc, #40]	; (8009e94 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009e6c:	9100      	str	r1, [sp, #0]
 8009e6e:	e002      	b.n	8009e76 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e70:	b159      	cbz	r1, 8009e8a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009e72:	9200      	str	r2, [sp, #0]
 8009e74:	4a08      	ldr	r2, [pc, #32]	; (8009e98 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009e76:	4629      	mov	r1, r5
 8009e78:	f7ff fa40 	bl	80092fc <snprintf>
 8009e7c:	4285      	cmp	r5, r0
 8009e7e:	bfa2      	ittt	ge
 8009e80:	88e3      	ldrhge	r3, [r4, #6]
 8009e82:	181b      	addge	r3, r3, r0
 8009e84:	80e3      	strhge	r3, [r4, #6]
 8009e86:	b003      	add	sp, #12
 8009e88:	bd30      	pop	{r4, r5, pc}
 8009e8a:	2201      	movs	r2, #1
 8009e8c:	9200      	str	r2, [sp, #0]
 8009e8e:	4a03      	ldr	r2, [pc, #12]	; (8009e9c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009e90:	e7f1      	b.n	8009e76 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e92:	bf00      	nop
 8009e94:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 8009e98:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 8009e9c:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}

08009ea0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009ea0:	b510      	push	{r4, lr}
 8009ea2:	4604      	mov	r4, r0
 8009ea4:	2220      	movs	r2, #32
 8009ea6:	f840 1b04 	str.w	r1, [r0], #4
 8009eaa:	2100      	movs	r1, #0
 8009eac:	f007 f91c 	bl	80110e8 <memset>
 8009eb0:	4620      	mov	r0, r4
 8009eb2:	bd10      	pop	{r4, pc}

08009eb4 <RemoteConfigParams::Load()>:
 8009eb4:	b508      	push	{r3, lr}
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	4601      	mov	r1, r0
 8009eba:	6043      	str	r3, [r0, #4]
 8009ebc:	6800      	ldr	r0, [r0, #0]
 8009ebe:	b120      	cbz	r0, 8009eca <RemoteConfigParams::Load()+0x16>
 8009ec0:	6803      	ldr	r3, [r0, #0]
 8009ec2:	3104      	adds	r1, #4
 8009ec4:	68db      	ldr	r3, [r3, #12]
 8009ec6:	4798      	blx	r3
 8009ec8:	2001      	movs	r0, #1
 8009eca:	bd08      	pop	{r3, pc}

08009ecc <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009ecc:	2300      	movs	r3, #0
 8009ece:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009ed0:	460d      	mov	r5, r1
 8009ed2:	4616      	mov	r6, r2
 8009ed4:	4604      	mov	r4, r0
 8009ed6:	6043      	str	r3, [r0, #4]
 8009ed8:	4602      	mov	r2, r0
 8009eda:	490a      	ldr	r1, [pc, #40]	; (8009f04 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009edc:	4668      	mov	r0, sp
 8009ede:	f006 fac5 	bl	801046c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009ee2:	4632      	mov	r2, r6
 8009ee4:	4629      	mov	r1, r5
 8009ee6:	4668      	mov	r0, sp
 8009ee8:	f006 fac4 	bl	8010474 <ReadConfigFile::Read(char const*, unsigned int)>
 8009eec:	4621      	mov	r1, r4
 8009eee:	f851 0b04 	ldr.w	r0, [r1], #4
 8009ef2:	6803      	ldr	r3, [r0, #0]
 8009ef4:	689b      	ldr	r3, [r3, #8]
 8009ef6:	4798      	blx	r3
 8009ef8:	4668      	mov	r0, sp
 8009efa:	f006 faba 	bl	8010472 <ReadConfigFile::~ReadConfigFile()>
 8009efe:	b002      	add	sp, #8
 8009f00:	bd70      	pop	{r4, r5, r6, pc}
 8009f02:	bf00      	nop
 8009f04:	08009fc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl, fp, ip, pc}

08009f08 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009f08:	6843      	ldr	r3, [r0, #4]
 8009f0a:	b111      	cbz	r1, 8009f12 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009f0c:	4313      	orrs	r3, r2
 8009f0e:	6043      	str	r3, [r0, #4]
 8009f10:	4770      	bx	lr
 8009f12:	ea23 0302 	bic.w	r3, r3, r2
 8009f16:	e7fa      	b.n	8009f0e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009f18 <RemoteConfigParams::callbackFunction(char const*)>:
 8009f18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f1a:	460d      	mov	r5, r1
 8009f1c:	4604      	mov	r4, r0
 8009f1e:	4923      	ldr	r1, [pc, #140]	; (8009fac <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009f20:	4628      	mov	r0, r5
 8009f22:	f10d 0203 	add.w	r2, sp, #3
 8009f26:	f006 fbdd 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f2a:	b940      	cbnz	r0, 8009f3e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009f2c:	2201      	movs	r2, #1
 8009f2e:	4620      	mov	r0, r4
 8009f30:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009f34:	b003      	add	sp, #12
 8009f36:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009f3a:	f7ff bfe5 	b.w	8009f08 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009f3e:	4628      	mov	r0, r5
 8009f40:	491b      	ldr	r1, [pc, #108]	; (8009fb0 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009f42:	f10d 0203 	add.w	r2, sp, #3
 8009f46:	f006 fbcd 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f4a:	b908      	cbnz	r0, 8009f50 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8009f4c:	2202      	movs	r2, #2
 8009f4e:	e7ee      	b.n	8009f2e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f50:	4628      	mov	r0, r5
 8009f52:	4918      	ldr	r1, [pc, #96]	; (8009fb4 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009f54:	f10d 0203 	add.w	r2, sp, #3
 8009f58:	f006 fbc4 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f5c:	b908      	cbnz	r0, 8009f62 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8009f5e:	2204      	movs	r2, #4
 8009f60:	e7e5      	b.n	8009f2e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f62:	4628      	mov	r0, r5
 8009f64:	4914      	ldr	r1, [pc, #80]	; (8009fb8 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009f66:	f10d 0203 	add.w	r2, sp, #3
 8009f6a:	f006 fbbb 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f6e:	b908      	cbnz	r0, 8009f74 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8009f70:	2208      	movs	r2, #8
 8009f72:	e7dc      	b.n	8009f2e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f74:	4628      	mov	r0, r5
 8009f76:	4911      	ldr	r1, [pc, #68]	; (8009fbc <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009f78:	f10d 0203 	add.w	r2, sp, #3
 8009f7c:	f006 fbb2 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f80:	b908      	cbnz	r0, 8009f86 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8009f82:	2220      	movs	r2, #32
 8009f84:	e7d3      	b.n	8009f2e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f86:	2317      	movs	r3, #23
 8009f88:	4628      	mov	r0, r5
 8009f8a:	9301      	str	r3, [sp, #4]
 8009f8c:	490c      	ldr	r1, [pc, #48]	; (8009fc0 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009f8e:	ab01      	add	r3, sp, #4
 8009f90:	f104 020c 	add.w	r2, r4, #12
 8009f94:	f006 faa2 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009f98:	b930      	cbnz	r0, 8009fa8 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8009f9a:	9b01      	ldr	r3, [sp, #4]
 8009f9c:	4423      	add	r3, r4
 8009f9e:	7318      	strb	r0, [r3, #12]
 8009fa0:	6863      	ldr	r3, [r4, #4]
 8009fa2:	f043 0310 	orr.w	r3, r3, #16
 8009fa6:	6063      	str	r3, [r4, #4]
 8009fa8:	b003      	add	sp, #12
 8009faa:	bd30      	pop	{r4, r5, pc}
 8009fac:	08013b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, ip, sp}
 8009fb0:	08013b53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, fp, ip, sp}
 8009fb4:	08013b61 	stmdaeq	r1, {r0, r5, r6, r8, r9, fp, ip, sp}
 8009fb8:	08013b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, sp}
 8009fbc:	08013b7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp}
 8009fc0:	08013b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, ip, sp}

08009fc4 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009fc4:	f7ff bfa8 	b.w	8009f18 <RemoteConfigParams::callbackFunction(char const*)>

08009fc8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009fc8:	b570      	push	{r4, r5, r6, lr}
 8009fca:	4604      	mov	r4, r0
 8009fcc:	4615      	mov	r5, r2
 8009fce:	461e      	mov	r6, r3
 8009fd0:	b086      	sub	sp, #24
 8009fd2:	3004      	adds	r0, #4
 8009fd4:	2900      	cmp	r1, #0
 8009fd6:	d041      	beq.n	800a05c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009fd8:	2220      	movs	r2, #32
 8009fda:	f007 f86e 	bl	80110ba <memmove>
 8009fde:	4633      	mov	r3, r6
 8009fe0:	462a      	mov	r2, r5
 8009fe2:	4937      	ldr	r1, [pc, #220]	; (800a0c0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009fe4:	a803      	add	r0, sp, #12
 8009fe6:	f006 f9a1 	bl	801032c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009fea:	6862      	ldr	r2, [r4, #4]
 8009fec:	4935      	ldr	r1, [pc, #212]	; (800a0c4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009fee:	f002 0201 	and.w	r2, r2, #1
 8009ff2:	a803      	add	r0, sp, #12
 8009ff4:	f7ff ff2c 	bl	8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009ff8:	6862      	ldr	r2, [r4, #4]
 8009ffa:	4933      	ldr	r1, [pc, #204]	; (800a0c8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009ffc:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a000:	a803      	add	r0, sp, #12
 800a002:	f7ff ff25 	bl	8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a006:	6862      	ldr	r2, [r4, #4]
 800a008:	4930      	ldr	r1, [pc, #192]	; (800a0cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a00a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a00e:	a803      	add	r0, sp, #12
 800a010:	f7ff ff1e 	bl	8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a014:	6862      	ldr	r2, [r4, #4]
 800a016:	492e      	ldr	r1, [pc, #184]	; (800a0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a018:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a01c:	a803      	add	r0, sp, #12
 800a01e:	f7ff ff17 	bl	8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a022:	6862      	ldr	r2, [r4, #4]
 800a024:	492b      	ldr	r1, [pc, #172]	; (800a0d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a026:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a02a:	a803      	add	r0, sp, #12
 800a02c:	f7ff ff10 	bl	8009e50 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a030:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a034:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a038:	6862      	ldr	r2, [r4, #4]
 800a03a:	42ab      	cmp	r3, r5
 800a03c:	d223      	bcs.n	800a086 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800a03e:	9803      	ldr	r0, [sp, #12]
 800a040:	06d2      	lsls	r2, r2, #27
 800a042:	4418      	add	r0, r3
 800a044:	eba5 0503 	sub.w	r5, r5, r3
 800a048:	f104 040c 	add.w	r4, r4, #12
 800a04c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a050:	d40b      	bmi.n	800a06a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a052:	b95b      	cbnz	r3, 800a06c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a054:	4b20      	ldr	r3, [pc, #128]	; (800a0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a056:	4a21      	ldr	r2, [pc, #132]	; (800a0dc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a058:	9400      	str	r4, [sp, #0]
 800a05a:	e00a      	b.n	800a072 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a05c:	6823      	ldr	r3, [r4, #0]
 800a05e:	4601      	mov	r1, r0
 800a060:	681a      	ldr	r2, [r3, #0]
 800a062:	4618      	mov	r0, r3
 800a064:	68d2      	ldr	r2, [r2, #12]
 800a066:	4790      	blx	r2
 800a068:	e7b9      	b.n	8009fde <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a06a:	b32b      	cbz	r3, 800a0b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a06c:	4b1a      	ldr	r3, [pc, #104]	; (800a0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a06e:	4a1c      	ldr	r2, [pc, #112]	; (800a0e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a070:	9400      	str	r4, [sp, #0]
 800a072:	4629      	mov	r1, r5
 800a074:	f7ff f942 	bl	80092fc <snprintf>
 800a078:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a07c:	4285      	cmp	r5, r0
 800a07e:	bfa4      	itt	ge
 800a080:	181b      	addge	r3, r3, r0
 800a082:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a086:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a08a:	b17b      	cbz	r3, 800a0ac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a08c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a090:	9b03      	ldr	r3, [sp, #12]
 800a092:	4413      	add	r3, r2
 800a094:	227d      	movs	r2, #125	; 0x7d
 800a096:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a09a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a09e:	9903      	ldr	r1, [sp, #12]
 800a0a0:	54ca      	strb	r2, [r1, r3]
 800a0a2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a0a6:	3301      	adds	r3, #1
 800a0a8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a0ac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a0b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a0b2:	601a      	str	r2, [r3, #0]
 800a0b4:	b006      	add	sp, #24
 800a0b6:	bd70      	pop	{r4, r5, r6, pc}
 800a0b8:	4b07      	ldr	r3, [pc, #28]	; (800a0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a0ba:	4a0a      	ldr	r2, [pc, #40]	; (800a0e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a0bc:	9400      	str	r4, [sp, #0]
 800a0be:	e7d8      	b.n	800a072 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a0c0:	08013b3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, fp, ip, sp}
 800a0c4:	08013b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, ip, sp}
 800a0c8:	08013b53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, fp, ip, sp}
 800a0cc:	08013b61 	stmdaeq	r1, {r0, r5, r6, r8, r9, fp, ip, sp}
 800a0d0:	08013b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, sp}
 800a0d4:	08013b7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp}
 800a0d8:	08013b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, ip, sp}
 800a0dc:	08013794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, sp}
 800a0e0:	08013789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip, sp}
 800a0e4:	08013795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp}

0800a0e8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a0e8:	b513      	push	{r0, r1, r4, lr}
 800a0ea:	6804      	ldr	r4, [r0, #0]
 800a0ec:	b914      	cbnz	r4, 800a0f4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a0ee:	601c      	str	r4, [r3, #0]
 800a0f0:	b002      	add	sp, #8
 800a0f2:	bd10      	pop	{r4, pc}
 800a0f4:	9300      	str	r3, [sp, #0]
 800a0f6:	4613      	mov	r3, r2
 800a0f8:	460a      	mov	r2, r1
 800a0fa:	2100      	movs	r1, #0
 800a0fc:	f7ff ff64 	bl	8009fc8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a100:	e7f6      	b.n	800a0f0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a102 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a102:	b538      	push	{r3, r4, r5, lr}
 800a104:	460c      	mov	r4, r1
 800a106:	4605      	mov	r5, r0
 800a108:	6841      	ldr	r1, [r0, #4]
 800a10a:	4620      	mov	r0, r4
 800a10c:	f001 0101 	and.w	r1, r1, #1
 800a110:	f7ff fc6c 	bl	80099ec <RemoteConfig::SetDisable(bool)>
 800a114:	686b      	ldr	r3, [r5, #4]
 800a116:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a11a:	7362      	strb	r2, [r4, #13]
 800a11c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a120:	73a2      	strb	r2, [r4, #14]
 800a122:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a126:	73e2      	strb	r2, [r4, #15]
 800a128:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a12c:	06db      	lsls	r3, r3, #27
 800a12e:	7422      	strb	r2, [r4, #16]
 800a130:	d506      	bpl.n	800a140 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a132:	4620      	mov	r0, r4
 800a134:	f105 010c 	add.w	r1, r5, #12
 800a138:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a13c:	f7ff bc76 	b.w	8009a2c <RemoteConfig::SetDisplayName(char const*)>
 800a140:	bd38      	pop	{r3, r4, r5, pc}

0800a142 <RemoteConfigParams::Dump()>:
 800a142:	4770      	bx	lr

0800a144 <RemoteConfig::HandleReboot()>:
 800a144:	7b83      	ldrb	r3, [r0, #14]
 800a146:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a148:	2b00      	cmp	r3, #0
 800a14a:	d03c      	beq.n	800a1c6 <RemoteConfig::HandleReboot()+0x82>
 800a14c:	2301      	movs	r3, #1
 800a14e:	4c1f      	ldr	r4, [pc, #124]	; (800a1cc <RemoteConfig::HandleReboot()+0x88>)
 800a150:	7443      	strb	r3, [r0, #17]
 800a152:	6825      	ldr	r5, [r4, #0]
 800a154:	69a8      	ldr	r0, [r5, #24]
 800a156:	b138      	cbz	r0, 800a168 <RemoteConfig::HandleReboot()+0x24>
 800a158:	2100      	movs	r1, #0
 800a15a:	6803      	ldr	r3, [r0, #0]
 800a15c:	7429      	strb	r1, [r5, #16]
 800a15e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a160:	4798      	blx	r3
 800a162:	4b1b      	ldr	r3, [pc, #108]	; (800a1d0 <RemoteConfig::HandleReboot()+0x8c>)
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	606b      	str	r3, [r5, #4]
 800a168:	4d1a      	ldr	r5, [pc, #104]	; (800a1d4 <RemoteConfig::HandleReboot()+0x90>)
 800a16a:	6828      	ldr	r0, [r5, #0]
 800a16c:	f005 fc3a 	bl	800f9e4 <ConfigStore::Flash()>
 800a170:	2800      	cmp	r0, #0
 800a172:	d1fa      	bne.n	800a16a <RemoteConfig::HandleReboot()+0x26>
 800a174:	4b18      	ldr	r3, [pc, #96]	; (800a1d8 <RemoteConfig::HandleReboot()+0x94>)
 800a176:	6818      	ldr	r0, [r3, #0]
 800a178:	f004 fb3a 	bl	800e7f0 <Network::Shutdown()>
 800a17c:	4817      	ldr	r0, [pc, #92]	; (800a1dc <RemoteConfig::HandleReboot()+0x98>)
 800a17e:	f7ff f8ad 	bl	80092dc <printf>
 800a182:	6823      	ldr	r3, [r4, #0]
 800a184:	6998      	ldr	r0, [r3, #24]
 800a186:	b110      	cbz	r0, 800a18e <RemoteConfig::HandleReboot()+0x4a>
 800a188:	6803      	ldr	r3, [r0, #0]
 800a18a:	68db      	ldr	r3, [r3, #12]
 800a18c:	4798      	blx	r3
 800a18e:	6824      	ldr	r4, [r4, #0]
 800a190:	4913      	ldr	r1, [pc, #76]	; (800a1e0 <RemoteConfig::HandleReboot()+0x9c>)
 800a192:	4620      	mov	r0, r4
 800a194:	f7ff fb40 	bl	8009818 <Display::TextStatus(char const*)>
 800a198:	7c63      	ldrb	r3, [r4, #17]
 800a19a:	b183      	cbz	r3, 800a1be <RemoteConfig::HandleReboot()+0x7a>
 800a19c:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a1a0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a1a4:	23bf      	movs	r3, #191	; 0xbf
 800a1a6:	7a20      	ldrb	r0, [r4, #8]
 800a1a8:	f88d 3006 	strb.w	r3, [sp, #6]
 800a1ac:	f008 fa04 	bl	80125b8 <gd32_i2c_set_address>
 800a1b0:	68e0      	ldr	r0, [r4, #12]
 800a1b2:	f008 f9f9 	bl	80125a8 <gd32_i2c_set_baudrate>
 800a1b6:	2103      	movs	r1, #3
 800a1b8:	a801      	add	r0, sp, #4
 800a1ba:	f008 fa03 	bl	80125c4 <gd32_i2c_write>
 800a1be:	4b09      	ldr	r3, [pc, #36]	; (800a1e4 <RemoteConfig::HandleReboot()+0xa0>)
 800a1c0:	6818      	ldr	r0, [r3, #0]
 800a1c2:	f006 fea3 	bl	8010f0c <Hardware::Reboot()>
 800a1c6:	b003      	add	sp, #12
 800a1c8:	bd30      	pop	{r4, r5, pc}
 800a1ca:	bf00      	nop
 800a1cc:	20009b80 	andcs	r9, r0, r0, lsl #23
 800a1d0:	20009c84 	andcs	r9, r0, r4, lsl #25
 800a1d4:	20009b48 	andcs	r9, r0, r8, asr #22
 800a1d8:	20008564 	andcs	r8, r0, r4, ror #10
 800a1dc:	0801379c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, ip, sp}
 800a1e0:	080137ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, ip, sp}
 800a1e4:	20009c70 	andcs	r9, r0, r0, ror ip

0800a1e8 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a1e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a1ec:	2000      	movs	r0, #0
 800a1ee:	4d12      	ldr	r5, [pc, #72]	; (800a238 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a1f0:	f10d 0c04 	add.w	ip, sp, #4
 800a1f4:	6814      	ldr	r4, [r2, #0]
 800a1f6:	7d2b      	ldrb	r3, [r5, #20]
 800a1f8:	692e      	ldr	r6, [r5, #16]
 800a1fa:	42a3      	cmp	r3, r4
 800a1fc:	bf34      	ite	cc
 800a1fe:	4664      	movcc	r4, ip
 800a200:	4614      	movcs	r4, r2
 800a202:	9301      	str	r3, [sp, #4]
 800a204:	6827      	ldr	r7, [r4, #0]
 800a206:	460c      	mov	r4, r1
 800a208:	3e01      	subs	r6, #1
 800a20a:	440f      	add	r7, r1
 800a20c:	42bc      	cmp	r4, r7
 800a20e:	d101      	bne.n	800a214 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a210:	6013      	str	r3, [r2, #0]
 800a212:	e00c      	b.n	800a22e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a214:	f894 8000 	ldrb.w	r8, [r4]
 800a218:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a21c:	45f0      	cmp	r8, lr
 800a21e:	d009      	beq.n	800a234 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a220:	3001      	adds	r0, #1
 800a222:	2804      	cmp	r0, #4
 800a224:	f105 051c 	add.w	r5, r5, #28
 800a228:	d1e4      	bne.n	800a1f4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a22a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a22e:	b002      	add	sp, #8
 800a230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a234:	3401      	adds	r4, #1
 800a236:	e7e9      	b.n	800a20c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a238:	080137e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, ip, sp}

0800a23c <RemoteConfig::PlatformHandleTftpSet()>:
 800a23c:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a240:	b109      	cbz	r1, 800a246 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a242:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a246:	2002      	movs	r0, #2
 800a248:	f007 b940 	b.w	80114cc <bkp_data_write>

0800a24c <RemoteConfig::PlatformHandleTftpGet()>:
 800a24c:	b510      	push	{r4, lr}
 800a24e:	4604      	mov	r4, r0
 800a250:	2002      	movs	r0, #2
 800a252:	f007 f951 	bl	80114f8 <bkp_data_read>
 800a256:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a25a:	1ac3      	subs	r3, r0, r3
 800a25c:	4258      	negs	r0, r3
 800a25e:	4158      	adcs	r0, r3
 800a260:	f884 0020 	strb.w	r0, [r4, #32]
 800a264:	bd10      	pop	{r4, pc}

0800a266 <strcmp>:
 800a266:	1e43      	subs	r3, r0, #1
 800a268:	3901      	subs	r1, #1
 800a26a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a26e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a272:	4290      	cmp	r0, r2
 800a274:	d001      	beq.n	800a27a <strcmp+0x14>
 800a276:	1a80      	subs	r0, r0, r2
 800a278:	e001      	b.n	800a27e <strcmp+0x18>
 800a27a:	2800      	cmp	r0, #0
 800a27c:	d1f5      	bne.n	800a26a <strcmp+0x4>
 800a27e:	4770      	bx	lr

0800a280 <strcasecmp>:
 800a280:	b530      	push	{r4, r5, lr}
 800a282:	1e42      	subs	r2, r0, #1
 800a284:	3901      	subs	r1, #1
 800a286:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a28a:	4604      	mov	r4, r0
 800a28c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a290:	2b19      	cmp	r3, #25
 800a292:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a296:	bf98      	it	ls
 800a298:	f100 0420 	addls.w	r4, r0, #32
 800a29c:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a2a0:	2d19      	cmp	r5, #25
 800a2a2:	bf98      	it	ls
 800a2a4:	3320      	addls	r3, #32
 800a2a6:	42a3      	cmp	r3, r4
 800a2a8:	d001      	beq.n	800a2ae <strcasecmp+0x2e>
 800a2aa:	1ae0      	subs	r0, r4, r3
 800a2ac:	e001      	b.n	800a2b2 <strcasecmp+0x32>
 800a2ae:	2800      	cmp	r0, #0
 800a2b0:	d1e9      	bne.n	800a286 <strcasecmp+0x6>
 800a2b2:	bd30      	pop	{r4, r5, pc}

0800a2b4 <PropertiesConfig::EnableJSON(bool)>:
 800a2b4:	4a04      	ldr	r2, [pc, #16]	; (800a2c8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a2b6:	7813      	ldrb	r3, [r2, #0]
 800a2b8:	b118      	cbz	r0, 800a2c2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800a2ba:	f043 0301 	orr.w	r3, r3, #1
 800a2be:	7013      	strb	r3, [r2, #0]
 800a2c0:	4770      	bx	lr
 800a2c2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a2c6:	e7fa      	b.n	800a2be <PropertiesConfig::EnableJSON(bool)+0xa>
 800a2c8:	20009b7c 	andcs	r9, r0, ip, ror fp

0800a2cc <HttpDaemon::HttpDaemon()>:
 800a2cc:	4a08      	ldr	r2, [pc, #32]	; (800a2f0 <HttpDaemon::HttpDaemon()+0x24>)
 800a2ce:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a2d2:	6002      	str	r2, [r0, #0]
 800a2d4:	2200      	movs	r2, #0
 800a2d6:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a2da:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a2de:	2102      	movs	r1, #2
 800a2e0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a2e4:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a2e8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a2ec:	60c2      	str	r2, [r0, #12]
 800a2ee:	4770      	bx	lr
 800a2f0:	08013ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp}

0800a2f4 <HttpDaemon::Start()>:
 800a2f4:	4b04      	ldr	r3, [pc, #16]	; (800a308 <HttpDaemon::Start()+0x14>)
 800a2f6:	b510      	push	{r4, lr}
 800a2f8:	2150      	movs	r1, #80	; 0x50
 800a2fa:	4604      	mov	r4, r0
 800a2fc:	6818      	ldr	r0, [r3, #0]
 800a2fe:	f004 fc57 	bl	800ebb0 <Network::TcpBegin(unsigned short)>
 800a302:	6120      	str	r0, [r4, #16]
 800a304:	bd10      	pop	{r4, pc}
 800a306:	bf00      	nop
 800a308:	20008564 	andcs	r8, r0, r4, ror #10

0800a30c <HttpDaemon::ParseMethod(char*)>:
 800a30c:	b538      	push	{r3, r4, r5, lr}
 800a30e:	4604      	mov	r4, r0
 800a310:	4608      	mov	r0, r1
 800a312:	491a      	ldr	r1, [pc, #104]	; (800a37c <HttpDaemon::ParseMethod(char*)+0x70>)
 800a314:	f006 ff12 	bl	801113c <strtok>
 800a318:	4605      	mov	r5, r0
 800a31a:	b360      	cbz	r0, 800a376 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a31c:	4918      	ldr	r1, [pc, #96]	; (800a380 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a31e:	f7ff ffa2 	bl	800a266 <strcmp>
 800a322:	b128      	cbz	r0, 800a330 <HttpDaemon::ParseMethod(char*)+0x24>
 800a324:	4628      	mov	r0, r5
 800a326:	4917      	ldr	r1, [pc, #92]	; (800a384 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a328:	f7ff ff9d 	bl	800a266 <strcmp>
 800a32c:	bb18      	cbnz	r0, 800a376 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a32e:	2001      	movs	r0, #1
 800a330:	61e0      	str	r0, [r4, #28]
 800a332:	4912      	ldr	r1, [pc, #72]	; (800a37c <HttpDaemon::ParseMethod(char*)+0x70>)
 800a334:	2000      	movs	r0, #0
 800a336:	f006 ff01 	bl	801113c <strtok>
 800a33a:	b910      	cbnz	r0, 800a342 <HttpDaemon::ParseMethod(char*)+0x36>
 800a33c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a340:	bd38      	pop	{r3, r4, r5, pc}
 800a342:	6060      	str	r0, [r4, #4]
 800a344:	4910      	ldr	r1, [pc, #64]	; (800a388 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a346:	2000      	movs	r0, #0
 800a348:	f006 fef8 	bl	801113c <strtok>
 800a34c:	2800      	cmp	r0, #0
 800a34e:	d0f5      	beq.n	800a33c <HttpDaemon::ParseMethod(char*)+0x30>
 800a350:	490e      	ldr	r1, [pc, #56]	; (800a38c <HttpDaemon::ParseMethod(char*)+0x80>)
 800a352:	f7ff ff88 	bl	800a266 <strcmp>
 800a356:	2800      	cmp	r0, #0
 800a358:	d1f0      	bne.n	800a33c <HttpDaemon::ParseMethod(char*)+0x30>
 800a35a:	490d      	ldr	r1, [pc, #52]	; (800a390 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a35c:	f006 feee 	bl	801113c <strtok>
 800a360:	2800      	cmp	r0, #0
 800a362:	d0eb      	beq.n	800a33c <HttpDaemon::ParseMethod(char*)+0x30>
 800a364:	490b      	ldr	r1, [pc, #44]	; (800a394 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a366:	f7ff ff7e 	bl	800a266 <strcmp>
 800a36a:	2800      	cmp	r0, #0
 800a36c:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a370:	bf08      	it	eq
 800a372:	20c8      	moveq	r0, #200	; 0xc8
 800a374:	e7e4      	b.n	800a340 <HttpDaemon::ParseMethod(char*)+0x34>
 800a376:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a37a:	e7e1      	b.n	800a340 <HttpDaemon::ParseMethod(char*)+0x34>
 800a37c:	0801350b 	stmdaeq	r1, {r0, r1, r3, r8, sl, ip, sp}
 800a380:	08013858 	stmdaeq	r1, {r3, r4, r6, fp, ip, sp}
 800a384:	0801385c 	stmdaeq	r1, {r2, r3, r4, r6, fp, ip, sp}
 800a388:	080138c6 	stmdaeq	r1, {r1, r2, r6, r7, fp, ip, sp}
 800a38c:	08013861 	stmdaeq	r1, {r0, r5, r6, fp, ip, sp}
 800a390:	08013866 	stmdaeq	r1, {r1, r2, r5, r6, fp, ip, sp}
 800a394:	08013869 	stmdaeq	r1, {r0, r3, r5, r6, fp, ip, sp}

0800a398 <HttpDaemon::ParseHeaderField(char*)>:
 800a398:	b538      	push	{r3, r4, r5, lr}
 800a39a:	4605      	mov	r5, r0
 800a39c:	4608      	mov	r0, r1
 800a39e:	491d      	ldr	r1, [pc, #116]	; (800a414 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a3a0:	f006 fecc 	bl	801113c <strtok>
 800a3a4:	4604      	mov	r4, r0
 800a3a6:	b910      	cbnz	r0, 800a3ae <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a3a8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a3ac:	bd38      	pop	{r3, r4, r5, pc}
 800a3ae:	491a      	ldr	r1, [pc, #104]	; (800a418 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a3b0:	f7ff ff66 	bl	800a280 <strcasecmp>
 800a3b4:	b970      	cbnz	r0, 800a3d4 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a3b6:	4919      	ldr	r1, [pc, #100]	; (800a41c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a3b8:	f006 fec0 	bl	801113c <strtok>
 800a3bc:	2800      	cmp	r0, #0
 800a3be:	d0f3      	beq.n	800a3a8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3c0:	4917      	ldr	r1, [pc, #92]	; (800a420 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a3c2:	f7ff ff50 	bl	800a266 <strcmp>
 800a3c6:	b108      	cbz	r0, 800a3cc <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a3c8:	20c8      	movs	r0, #200	; 0xc8
 800a3ca:	e7ef      	b.n	800a3ac <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a3cc:	2301      	movs	r3, #1
 800a3ce:	f885 3020 	strb.w	r3, [r5, #32]
 800a3d2:	e7f9      	b.n	800a3c8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3d4:	4620      	mov	r0, r4
 800a3d6:	4913      	ldr	r1, [pc, #76]	; (800a424 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a3d8:	f7ff ff52 	bl	800a280 <strcasecmp>
 800a3dc:	4604      	mov	r4, r0
 800a3de:	2800      	cmp	r0, #0
 800a3e0:	d1f2      	bne.n	800a3c8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3e2:	4911      	ldr	r1, [pc, #68]	; (800a428 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a3e4:	f006 feaa 	bl	801113c <strtok>
 800a3e8:	2800      	cmp	r0, #0
 800a3ea:	d0dd      	beq.n	800a3a8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3ec:	1e42      	subs	r2, r0, #1
 800a3ee:	4623      	mov	r3, r4
 800a3f0:	200a      	movs	r0, #10
 800a3f2:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a3f6:	b909      	cbnz	r1, 800a3fc <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a3f8:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a3fa:	e7e5      	b.n	800a3c8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3fc:	3930      	subs	r1, #48	; 0x30
 800a3fe:	2909      	cmp	r1, #9
 800a400:	d8d2      	bhi.n	800a3a8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a402:	fb00 1303 	mla	r3, r0, r3, r1
 800a406:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a40a:	d9f2      	bls.n	800a3f2 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a40c:	f240 109d 	movw	r0, #413	; 0x19d
 800a410:	e7cc      	b.n	800a3ac <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a412:	bf00      	nop
 800a414:	0801386d 	stmdaeq	r1, {r0, r2, r3, r5, r6, fp, ip, sp}
 800a418:	0801386f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, fp, ip, sp}
 800a41c:	0801387c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip, sp}
 800a420:	0801387f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, fp, ip, sp}
 800a424:	08013890 	stmdaeq	r1, {r4, r7, fp, ip, sp}
 800a428:	0801350b 	stmdaeq	r1, {r0, r1, r3, r8, sl, ip, sp}

0800a42c <HttpDaemon::ParseRequest()>:
 800a42c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a42e:	2400      	movs	r4, #0
 800a430:	4605      	mov	r5, r0
 800a432:	4622      	mov	r2, r4
 800a434:	4626      	mov	r6, r4
 800a436:	68c1      	ldr	r1, [r0, #12]
 800a438:	f880 4020 	strb.w	r4, [r0, #32]
 800a43c:	6244      	str	r4, [r0, #36]	; 0x24
 800a43e:	8aab      	ldrh	r3, [r5, #20]
 800a440:	42a3      	cmp	r3, r4
 800a442:	d91d      	bls.n	800a480 <HttpDaemon::ParseRequest()+0x54>
 800a444:	68eb      	ldr	r3, [r5, #12]
 800a446:	5d18      	ldrb	r0, [r3, r4]
 800a448:	280a      	cmp	r0, #10
 800a44a:	d10e      	bne.n	800a46a <HttpDaemon::ParseRequest()+0x3e>
 800a44c:	4423      	add	r3, r4
 800a44e:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a452:	1c57      	adds	r7, r2, #1
 800a454:	b962      	cbnz	r2, 800a470 <HttpDaemon::ParseRequest()+0x44>
 800a456:	4628      	mov	r0, r5
 800a458:	f7ff ff58 	bl	800a30c <HttpDaemon::ParseMethod(char*)>
 800a45c:	28c8      	cmp	r0, #200	; 0xc8
 800a45e:	d110      	bne.n	800a482 <HttpDaemon::ParseRequest()+0x56>
 800a460:	463a      	mov	r2, r7
 800a462:	68e9      	ldr	r1, [r5, #12]
 800a464:	3401      	adds	r4, #1
 800a466:	b2a4      	uxth	r4, r4
 800a468:	4421      	add	r1, r4
 800a46a:	3401      	adds	r4, #1
 800a46c:	b2a4      	uxth	r4, r4
 800a46e:	e7e6      	b.n	800a43e <HttpDaemon::ParseRequest()+0x12>
 800a470:	7808      	ldrb	r0, [r1, #0]
 800a472:	b968      	cbnz	r0, 800a490 <HttpDaemon::ParseRequest()+0x64>
 800a474:	696b      	ldr	r3, [r5, #20]
 800a476:	3b01      	subs	r3, #1
 800a478:	1b1b      	subs	r3, r3, r4
 800a47a:	b29b      	uxth	r3, r3
 800a47c:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a47e:	b90b      	cbnz	r3, 800a484 <HttpDaemon::ParseRequest()+0x58>
 800a480:	20c8      	movs	r0, #200	; 0xc8
 800a482:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a484:	68ea      	ldr	r2, [r5, #12]
 800a486:	3401      	adds	r4, #1
 800a488:	4414      	add	r4, r2
 800a48a:	60ac      	str	r4, [r5, #8]
 800a48c:	54e0      	strb	r0, [r4, r3]
 800a48e:	e7f7      	b.n	800a480 <HttpDaemon::ParseRequest()+0x54>
 800a490:	4628      	mov	r0, r5
 800a492:	f7ff ff81 	bl	800a398 <HttpDaemon::ParseHeaderField(char*)>
 800a496:	e7e1      	b.n	800a45c <HttpDaemon::ParseRequest()+0x30>

0800a498 <HttpDaemon::HandleGetTxt()>:
 800a498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a49c:	6846      	ldr	r6, [r0, #4]
 800a49e:	4607      	mov	r7, r0
 800a4a0:	1db4      	adds	r4, r6, #6
 800a4a2:	4622      	mov	r2, r4
 800a4a4:	4613      	mov	r3, r2
 800a4a6:	7819      	ldrb	r1, [r3, #0]
 800a4a8:	3201      	adds	r2, #1
 800a4aa:	2900      	cmp	r1, #0
 800a4ac:	d1fa      	bne.n	800a4a4 <HttpDaemon::HandleGetTxt()+0xc>
 800a4ae:	1b1b      	subs	r3, r3, r4
 800a4b0:	2b04      	cmp	r3, #4
 800a4b2:	d803      	bhi.n	800a4bc <HttpDaemon::HandleGetTxt()+0x24>
 800a4b4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a4b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a4bc:	3b04      	subs	r3, #4
 800a4be:	4914      	ldr	r1, [pc, #80]	; (800a510 <HttpDaemon::HandleGetTxt()+0x78>)
 800a4c0:	18e0      	adds	r0, r4, r3
 800a4c2:	f7ff fed0 	bl	800a266 <strcmp>
 800a4c6:	2800      	cmp	r0, #0
 800a4c8:	d1f4      	bne.n	800a4b4 <HttpDaemon::HandleGetTxt()+0x1c>
 800a4ca:	4b12      	ldr	r3, [pc, #72]	; (800a514 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a4cc:	2001      	movs	r0, #1
 800a4ce:	f893 8000 	ldrb.w	r8, [r3]
 800a4d2:	f7ff feef 	bl	800a2b4 <PropertiesConfig::EnableJSON(bool)>
 800a4d6:	4b10      	ldr	r3, [pc, #64]	; (800a518 <HttpDaemon::HandleGetTxt()+0x80>)
 800a4d8:	f240 529b 	movw	r2, #1435	; 0x59b
 800a4dc:	4621      	mov	r1, r4
 800a4de:	6818      	ldr	r0, [r3, #0]
 800a4e0:	f7ff fabc 	bl	8009a5c <RemoteConfig::HandleGet(void*, unsigned int)>
 800a4e4:	4605      	mov	r5, r0
 800a4e6:	f008 0801 	and.w	r8, r8, #1
 800a4ea:	4640      	mov	r0, r8
 800a4ec:	f7ff fee2 	bl	800a2b4 <PropertiesConfig::EnableJSON(bool)>
 800a4f0:	2d00      	cmp	r5, #0
 800a4f2:	d0df      	beq.n	800a4b4 <HttpDaemon::HandleGetTxt()+0x1c>
 800a4f4:	847d      	strh	r5, [r7, #34]	; 0x22
 800a4f6:	4b09      	ldr	r3, [pc, #36]	; (800a51c <HttpDaemon::HandleGetTxt()+0x84>)
 800a4f8:	3506      	adds	r5, #6
 800a4fa:	442e      	add	r6, r5
 800a4fc:	42b4      	cmp	r4, r6
 800a4fe:	d101      	bne.n	800a504 <HttpDaemon::HandleGetTxt()+0x6c>
 800a500:	20c8      	movs	r0, #200	; 0xc8
 800a502:	e7d9      	b.n	800a4b8 <HttpDaemon::HandleGetTxt()+0x20>
 800a504:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a508:	f803 2b01 	strb.w	r2, [r3], #1
 800a50c:	e7f6      	b.n	800a4fc <HttpDaemon::HandleGetTxt()+0x64>
 800a50e:	bf00      	nop
 800a510:	080137d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, ip, sp}
 800a514:	20009b7c 	andcs	r9, r0, ip, ror fp
 800a518:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a51c:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800a520 <HttpDaemon::HandleGet()>:
 800a520:	b570      	push	{r4, r5, r6, lr}
 800a522:	6845      	ldr	r5, [r0, #4]
 800a524:	4604      	mov	r4, r0
 800a526:	493e      	ldr	r1, [pc, #248]	; (800a620 <HttpDaemon::HandleGet()+0x100>)
 800a528:	4628      	mov	r0, r5
 800a52a:	f7ff fe9c 	bl	800a266 <strcmp>
 800a52e:	b120      	cbz	r0, 800a53a <HttpDaemon::HandleGet()+0x1a>
 800a530:	4628      	mov	r0, r5
 800a532:	493c      	ldr	r1, [pc, #240]	; (800a624 <HttpDaemon::HandleGet()+0x104>)
 800a534:	f7ff fe97 	bl	800a266 <strcmp>
 800a538:	b950      	cbnz	r0, 800a550 <HttpDaemon::HandleGet()+0x30>
 800a53a:	4b3b      	ldr	r3, [pc, #236]	; (800a628 <HttpDaemon::HandleGet()+0x108>)
 800a53c:	493b      	ldr	r1, [pc, #236]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a53e:	483c      	ldr	r0, [pc, #240]	; (800a630 <HttpDaemon::HandleGet()+0x110>)
 800a540:	6023      	str	r3, [r4, #0]
 800a542:	f000 fa67 	bl	800aa14 <get_file_content(char const*, char*)>
 800a546:	2800      	cmp	r0, #0
 800a548:	dd2f      	ble.n	800a5aa <HttpDaemon::HandleGet()+0x8a>
 800a54a:	8460      	strh	r0, [r4, #34]	; 0x22
 800a54c:	20c8      	movs	r0, #200	; 0xc8
 800a54e:	bd70      	pop	{r4, r5, r6, pc}
 800a550:	4628      	mov	r0, r5
 800a552:	4938      	ldr	r1, [pc, #224]	; (800a634 <HttpDaemon::HandleGet()+0x114>)
 800a554:	f7ff fe87 	bl	800a266 <strcmp>
 800a558:	b920      	cbnz	r0, 800a564 <HttpDaemon::HandleGet()+0x44>
 800a55a:	4b37      	ldr	r3, [pc, #220]	; (800a638 <HttpDaemon::HandleGet()+0x118>)
 800a55c:	4933      	ldr	r1, [pc, #204]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a55e:	4837      	ldr	r0, [pc, #220]	; (800a63c <HttpDaemon::HandleGet()+0x11c>)
 800a560:	6023      	str	r3, [r4, #0]
 800a562:	e7ee      	b.n	800a542 <HttpDaemon::HandleGet()+0x22>
 800a564:	4628      	mov	r0, r5
 800a566:	4936      	ldr	r1, [pc, #216]	; (800a640 <HttpDaemon::HandleGet()+0x120>)
 800a568:	f7ff fe7d 	bl	800a266 <strcmp>
 800a56c:	b190      	cbz	r0, 800a594 <HttpDaemon::HandleGet()+0x74>
 800a56e:	4a35      	ldr	r2, [pc, #212]	; (800a644 <HttpDaemon::HandleGet()+0x124>)
 800a570:	1e6b      	subs	r3, r5, #1
 800a572:	1d69      	adds	r1, r5, #5
 800a574:	428b      	cmp	r3, r1
 800a576:	d112      	bne.n	800a59e <HttpDaemon::HandleGet()+0x7e>
 800a578:	4b33      	ldr	r3, [pc, #204]	; (800a648 <HttpDaemon::HandleGet()+0x128>)
 800a57a:	3506      	adds	r5, #6
 800a57c:	4628      	mov	r0, r5
 800a57e:	4933      	ldr	r1, [pc, #204]	; (800a64c <HttpDaemon::HandleGet()+0x12c>)
 800a580:	6023      	str	r3, [r4, #0]
 800a582:	f7ff fe70 	bl	800a266 <strcmp>
 800a586:	b998      	cbnz	r0, 800a5b0 <HttpDaemon::HandleGet()+0x90>
 800a588:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a58c:	4827      	ldr	r0, [pc, #156]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a58e:	f000 f9c9 	bl	800a924 <remoteconfig::json_get_list(char*, unsigned short)>
 800a592:	e7d8      	b.n	800a546 <HttpDaemon::HandleGet()+0x26>
 800a594:	4b2e      	ldr	r3, [pc, #184]	; (800a650 <HttpDaemon::HandleGet()+0x130>)
 800a596:	4925      	ldr	r1, [pc, #148]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a598:	482e      	ldr	r0, [pc, #184]	; (800a654 <HttpDaemon::HandleGet()+0x134>)
 800a59a:	6023      	str	r3, [r4, #0]
 800a59c:	e7d1      	b.n	800a542 <HttpDaemon::HandleGet()+0x22>
 800a59e:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a5a2:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a5a6:	4286      	cmp	r6, r0
 800a5a8:	d0e4      	beq.n	800a574 <HttpDaemon::HandleGet()+0x54>
 800a5aa:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a5ae:	e7ce      	b.n	800a54e <HttpDaemon::HandleGet()+0x2e>
 800a5b0:	4628      	mov	r0, r5
 800a5b2:	4929      	ldr	r1, [pc, #164]	; (800a658 <HttpDaemon::HandleGet()+0x138>)
 800a5b4:	f7ff fe57 	bl	800a266 <strcmp>
 800a5b8:	b928      	cbnz	r0, 800a5c6 <HttpDaemon::HandleGet()+0xa6>
 800a5ba:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5be:	481b      	ldr	r0, [pc, #108]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a5c0:	f000 f9e4 	bl	800a98c <remoteconfig::json_get_version(char*, unsigned short)>
 800a5c4:	e7bf      	b.n	800a546 <HttpDaemon::HandleGet()+0x26>
 800a5c6:	4628      	mov	r0, r5
 800a5c8:	4924      	ldr	r1, [pc, #144]	; (800a65c <HttpDaemon::HandleGet()+0x13c>)
 800a5ca:	f7ff fe4c 	bl	800a266 <strcmp>
 800a5ce:	b948      	cbnz	r0, 800a5e4 <HttpDaemon::HandleGet()+0xc4>
 800a5d0:	4b23      	ldr	r3, [pc, #140]	; (800a660 <HttpDaemon::HandleGet()+0x140>)
 800a5d2:	681b      	ldr	r3, [r3, #0]
 800a5d4:	7bdb      	ldrb	r3, [r3, #15]
 800a5d6:	b303      	cbz	r3, 800a61a <HttpDaemon::HandleGet()+0xfa>
 800a5d8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5dc:	4813      	ldr	r0, [pc, #76]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a5de:	f000 f9f1 	bl	800a9c4 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a5e2:	e7b0      	b.n	800a546 <HttpDaemon::HandleGet()+0x26>
 800a5e4:	4628      	mov	r0, r5
 800a5e6:	491f      	ldr	r1, [pc, #124]	; (800a664 <HttpDaemon::HandleGet()+0x144>)
 800a5e8:	f7ff fe3d 	bl	800a266 <strcmp>
 800a5ec:	b928      	cbnz	r0, 800a5fa <HttpDaemon::HandleGet()+0xda>
 800a5ee:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5f2:	480e      	ldr	r0, [pc, #56]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a5f4:	f000 f9f6 	bl	800a9e4 <remoteconfig::json_get_display(char*, unsigned short)>
 800a5f8:	e7a5      	b.n	800a546 <HttpDaemon::HandleGet()+0x26>
 800a5fa:	4628      	mov	r0, r5
 800a5fc:	491a      	ldr	r1, [pc, #104]	; (800a668 <HttpDaemon::HandleGet()+0x148>)
 800a5fe:	f7ff fe32 	bl	800a266 <strcmp>
 800a602:	b928      	cbnz	r0, 800a610 <HttpDaemon::HandleGet()+0xf0>
 800a604:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a608:	4808      	ldr	r0, [pc, #32]	; (800a62c <HttpDaemon::HandleGet()+0x10c>)
 800a60a:	f000 f9fb 	bl	800aa04 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a60e:	e79a      	b.n	800a546 <HttpDaemon::HandleGet()+0x26>
 800a610:	4620      	mov	r0, r4
 800a612:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a616:	f7ff bf3f 	b.w	800a498 <HttpDaemon::HandleGetTxt()>
 800a61a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a61e:	e796      	b.n	800a54e <HttpDaemon::HandleGet()+0x2e>
 800a620:	080138c6 	stmdaeq	r1, {r1, r2, r6, r7, fp, ip, sp}
 800a624:	0801389f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, fp, ip, sp}
 800a628:	08013ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp}
 800a62c:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a630:	080138a0 	stmdaeq	r1, {r5, r7, fp, ip, sp}
 800a634:	080138ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, fp, ip, sp}
 800a638:	08013ad2 	stmdaeq	r1, {r1, r4, r6, r7, r9, fp, ip, sp}
 800a63c:	080138ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, sp}
 800a640:	080138b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, fp, ip, sp}
 800a644:	080138c1 	stmdaeq	r1, {r0, r6, r7, fp, ip, sp}
 800a648:	08013b12 	stmdaeq	r1, {r1, r4, r8, r9, fp, ip, sp}
 800a64c:	080138c8 	stmdaeq	r1, {r3, r6, r7, fp, ip, sp}
 800a650:	08013af2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, fp, ip, sp}
 800a654:	080138b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, ip, sp}
 800a658:	080138cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, fp, ip, sp}
 800a65c:	080138d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, fp, ip, sp}
 800a660:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a664:	080138dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, ip, sp}
 800a668:	080138e4 	stmdaeq	r1, {r2, r5, r6, r7, fp, ip, sp}

0800a66c <HttpDaemon::HandlePost(bool)>:
 800a66c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a66e:	4604      	mov	r4, r0
 800a670:	2900      	cmp	r1, #0
 800a672:	f040 808a 	bne.w	800a78a <HttpDaemon::HandlePost(bool)+0x11e>
 800a676:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a67a:	2b00      	cmp	r3, #0
 800a67c:	d05a      	beq.n	800a734 <HttpDaemon::HandlePost(bool)+0xc8>
 800a67e:	6845      	ldr	r5, [r0, #4]
 800a680:	4944      	ldr	r1, [pc, #272]	; (800a794 <HttpDaemon::HandlePost(bool)+0x128>)
 800a682:	4628      	mov	r0, r5
 800a684:	f7ff fdef 	bl	800a266 <strcmp>
 800a688:	2800      	cmp	r0, #0
 800a68a:	bf0c      	ite	eq
 800a68c:	2301      	moveq	r3, #1
 800a68e:	2300      	movne	r3, #0
 800a690:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a694:	d052      	beq.n	800a73c <HttpDaemon::HandlePost(bool)+0xd0>
 800a696:	4628      	mov	r0, r5
 800a698:	493f      	ldr	r1, [pc, #252]	; (800a798 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a69a:	f7ff fde4 	bl	800a266 <strcmp>
 800a69e:	2800      	cmp	r0, #0
 800a6a0:	d04c      	beq.n	800a73c <HttpDaemon::HandlePost(bool)+0xd0>
 800a6a2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a6a6:	e047      	b.n	800a738 <HttpDaemon::HandlePost(bool)+0xcc>
 800a6a8:	493c      	ldr	r1, [pc, #240]	; (800a79c <HttpDaemon::HandlePost(bool)+0x130>)
 800a6aa:	68a0      	ldr	r0, [r4, #8]
 800a6ac:	f10d 0207 	add.w	r2, sp, #7
 800a6b0:	f006 f818 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6b4:	b9d8      	cbnz	r0, 800a6ee <HttpDaemon::HandlePost(bool)+0x82>
 800a6b6:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a6ba:	4b39      	ldr	r3, [pc, #228]	; (800a7a0 <HttpDaemon::HandlePost(bool)+0x134>)
 800a6bc:	fab6 f186 	clz	r1, r6
 800a6c0:	681d      	ldr	r5, [r3, #0]
 800a6c2:	0949      	lsrs	r1, r1, #5
 800a6c4:	69a8      	ldr	r0, [r5, #24]
 800a6c6:	b138      	cbz	r0, 800a6d8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6c8:	6803      	ldr	r3, [r0, #0]
 800a6ca:	7429      	strb	r1, [r5, #16]
 800a6cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a6ce:	4798      	blx	r3
 800a6d0:	b116      	cbz	r6, 800a6d8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6d2:	4b34      	ldr	r3, [pc, #208]	; (800a7a4 <HttpDaemon::HandlePost(bool)+0x138>)
 800a6d4:	681b      	ldr	r3, [r3, #0]
 800a6d6:	606b      	str	r3, [r5, #4]
 800a6d8:	4b33      	ldr	r3, [pc, #204]	; (800a7a8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a6da:	f240 519f 	movw	r1, #1439	; 0x59f
 800a6de:	4a33      	ldr	r2, [pc, #204]	; (800a7ac <HttpDaemon::HandlePost(bool)+0x140>)
 800a6e0:	4833      	ldr	r0, [pc, #204]	; (800a7b0 <HttpDaemon::HandlePost(bool)+0x144>)
 800a6e2:	6023      	str	r3, [r4, #0]
 800a6e4:	f7fe fe0a 	bl	80092fc <snprintf>
 800a6e8:	8460      	strh	r0, [r4, #34]	; 0x22
 800a6ea:	20c8      	movs	r0, #200	; 0xc8
 800a6ec:	e024      	b.n	800a738 <HttpDaemon::HandlePost(bool)+0xcc>
 800a6ee:	4931      	ldr	r1, [pc, #196]	; (800a7b4 <HttpDaemon::HandlePost(bool)+0x148>)
 800a6f0:	68a0      	ldr	r0, [r4, #8]
 800a6f2:	f10d 0207 	add.w	r2, sp, #7
 800a6f6:	f005 fff5 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6fa:	b9d8      	cbnz	r0, 800a734 <HttpDaemon::HandlePost(bool)+0xc8>
 800a6fc:	4b2e      	ldr	r3, [pc, #184]	; (800a7b8 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a6fe:	6818      	ldr	r0, [r3, #0]
 800a700:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a704:	b11b      	cbz	r3, 800a70e <HttpDaemon::HandlePost(bool)+0xa2>
 800a706:	2104      	movs	r1, #4
 800a708:	f006 fb7c 	bl	8010e04 <LedBlink::SetMode(ledblink::Mode)>
 800a70c:	e7e4      	b.n	800a6d8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a70e:	2102      	movs	r1, #2
 800a710:	e7fa      	b.n	800a708 <HttpDaemon::HandlePost(bool)+0x9c>
 800a712:	4b2a      	ldr	r3, [pc, #168]	; (800a7bc <HttpDaemon::HandlePost(bool)+0x150>)
 800a714:	2001      	movs	r0, #1
 800a716:	781d      	ldrb	r5, [r3, #0]
 800a718:	f7ff fdcc 	bl	800a2b4 <PropertiesConfig::EnableJSON(bool)>
 800a71c:	4b28      	ldr	r3, [pc, #160]	; (800a7c0 <HttpDaemon::HandlePost(bool)+0x154>)
 800a71e:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a720:	6818      	ldr	r0, [r3, #0]
 800a722:	68a1      	ldr	r1, [r4, #8]
 800a724:	f005 0501 	and.w	r5, r5, #1
 800a728:	f7ff fa50 	bl	8009bcc <RemoteConfig::HandleSet(void*, unsigned int)>
 800a72c:	4628      	mov	r0, r5
 800a72e:	f7ff fdc1 	bl	800a2b4 <PropertiesConfig::EnableJSON(bool)>
 800a732:	e7d1      	b.n	800a6d8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a734:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a738:	b002      	add	sp, #8
 800a73a:	bd70      	pop	{r4, r5, r6, pc}
 800a73c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a73e:	6962      	ldr	r2, [r4, #20]
 800a740:	429a      	cmp	r2, r3
 800a742:	dbd2      	blt.n	800a6ea <HttpDaemon::HandlePost(bool)+0x7e>
 800a744:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a746:	2b00      	cmp	r3, #0
 800a748:	d0cf      	beq.n	800a6ea <HttpDaemon::HandlePost(bool)+0x7e>
 800a74a:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a74e:	2b00      	cmp	r3, #0
 800a750:	d0df      	beq.n	800a712 <HttpDaemon::HandlePost(bool)+0xa6>
 800a752:	2201      	movs	r2, #1
 800a754:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a756:	68a0      	ldr	r0, [r4, #8]
 800a758:	f005 fd36 	bl	80101c8 <properties::convert_json_file(char*, unsigned short, bool)>
 800a75c:	2800      	cmp	r0, #0
 800a75e:	dde9      	ble.n	800a734 <HttpDaemon::HandlePost(bool)+0xc8>
 800a760:	4918      	ldr	r1, [pc, #96]	; (800a7c4 <HttpDaemon::HandlePost(bool)+0x158>)
 800a762:	68a0      	ldr	r0, [r4, #8]
 800a764:	f10d 0207 	add.w	r2, sp, #7
 800a768:	f005 ffbc 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a76c:	2800      	cmp	r0, #0
 800a76e:	d19b      	bne.n	800a6a8 <HttpDaemon::HandlePost(bool)+0x3c>
 800a770:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a774:	2b00      	cmp	r3, #0
 800a776:	d0af      	beq.n	800a6d8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a778:	4b11      	ldr	r3, [pc, #68]	; (800a7c0 <HttpDaemon::HandlePost(bool)+0x154>)
 800a77a:	681b      	ldr	r3, [r3, #0]
 800a77c:	7b9b      	ldrb	r3, [r3, #14]
 800a77e:	2b00      	cmp	r3, #0
 800a780:	d0d8      	beq.n	800a734 <HttpDaemon::HandlePost(bool)+0xc8>
 800a782:	4b11      	ldr	r3, [pc, #68]	; (800a7c8 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a784:	6818      	ldr	r0, [r3, #0]
 800a786:	f006 fbc1 	bl	8010f0c <Hardware::Reboot()>
 800a78a:	68c3      	ldr	r3, [r0, #12]
 800a78c:	6083      	str	r3, [r0, #8]
 800a78e:	6943      	ldr	r3, [r0, #20]
 800a790:	8483      	strh	r3, [r0, #36]	; 0x24
 800a792:	e7da      	b.n	800a74a <HttpDaemon::HandlePost(bool)+0xde>
 800a794:	080138ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, fp, ip, sp}
 800a798:	0801388a 	stmdaeq	r1, {r1, r3, r7, fp, ip, sp}
 800a79c:	080138dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, ip, sp}
 800a7a0:	20009b80 	andcs	r9, r0, r0, lsl #23
 800a7a4:	20009c84 	andcs	r9, r0, r4, lsl #25
 800a7a8:	08013ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp}
 800a7ac:	0801390b 	stmdaeq	r1, {r0, r1, r3, r8, fp, ip, sp}
 800a7b0:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a7b4:	08013902 	stmdaeq	r1, {r1, r8, fp, ip, sp}
 800a7b8:	20009c6c 	andcs	r9, r0, ip, ror #24
 800a7bc:	20009b7c 	andcs	r9, r0, ip, ror fp
 800a7c0:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a7c4:	080138fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, fp, ip, sp}
 800a7c8:	20009c70 	andcs	r9, r0, r0, ror ip

0800a7cc <HttpDaemon::Run()>:
 800a7cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7ce:	4e46      	ldr	r6, [pc, #280]	; (800a8e8 <HttpDaemon::Run()+0x11c>)
 800a7d0:	4604      	mov	r4, r0
 800a7d2:	6901      	ldr	r1, [r0, #16]
 800a7d4:	f100 020c 	add.w	r2, r0, #12
 800a7d8:	6830      	ldr	r0, [r6, #0]
 800a7da:	f004 f9ec 	bl	800ebb6 <Network::TcpRead(int, unsigned char const**)>
 800a7de:	6160      	str	r0, [r4, #20]
 800a7e0:	2800      	cmp	r0, #0
 800a7e2:	d05b      	beq.n	800a89c <HttpDaemon::Run()+0xd0>
 800a7e4:	69a3      	ldr	r3, [r4, #24]
 800a7e6:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a7ea:	d159      	bne.n	800a8a0 <HttpDaemon::Run()+0xd4>
 800a7ec:	4620      	mov	r0, r4
 800a7ee:	f7ff fe1d 	bl	800a42c <HttpDaemon::ParseRequest()>
 800a7f2:	28c8      	cmp	r0, #200	; 0xc8
 800a7f4:	61a0      	str	r0, [r4, #24]
 800a7f6:	d106      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a7f8:	69e3      	ldr	r3, [r4, #28]
 800a7fa:	2b00      	cmp	r3, #0
 800a7fc:	d142      	bne.n	800a884 <HttpDaemon::Run()+0xb8>
 800a7fe:	4620      	mov	r0, r4
 800a800:	f7ff fe8e 	bl	800a520 <HttpDaemon::HandleGet()>
 800a804:	61a0      	str	r0, [r4, #24]
 800a806:	69a3      	ldr	r3, [r4, #24]
 800a808:	2bc8      	cmp	r3, #200	; 0xc8
 800a80a:	d06b      	beq.n	800a8e4 <HttpDaemon::Run()+0x118>
 800a80c:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a810:	d05e      	beq.n	800a8d0 <HttpDaemon::Run()+0x104>
 800a812:	dc4e      	bgt.n	800a8b2 <HttpDaemon::Run()+0xe6>
 800a814:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a818:	d05c      	beq.n	800a8d4 <HttpDaemon::Run()+0x108>
 800a81a:	f240 129d 	movw	r2, #413	; 0x19d
 800a81e:	4293      	cmp	r3, r2
 800a820:	d05a      	beq.n	800a8d8 <HttpDaemon::Run()+0x10c>
 800a822:	4d32      	ldr	r5, [pc, #200]	; (800a8ec <HttpDaemon::Run()+0x120>)
 800a824:	4a32      	ldr	r2, [pc, #200]	; (800a8f0 <HttpDaemon::Run()+0x124>)
 800a826:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a82a:	bf18      	it	ne
 800a82c:	4615      	movne	r5, r2
 800a82e:	4a31      	ldr	r2, [pc, #196]	; (800a8f4 <HttpDaemon::Run()+0x128>)
 800a830:	f240 519f 	movw	r1, #1439	; 0x59f
 800a834:	6022      	str	r2, [r4, #0]
 800a836:	e9cd 5500 	strd	r5, r5, [sp]
 800a83a:	4a2f      	ldr	r2, [pc, #188]	; (800a8f8 <HttpDaemon::Run()+0x12c>)
 800a83c:	482f      	ldr	r0, [pc, #188]	; (800a8fc <HttpDaemon::Run()+0x130>)
 800a83e:	f7fe fd5d 	bl	80092fc <snprintf>
 800a842:	8460      	strh	r0, [r4, #34]	; 0x22
 800a844:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a846:	f240 519f 	movw	r1, #1439	; 0x59f
 800a84a:	9303      	str	r3, [sp, #12]
 800a84c:	6823      	ldr	r3, [r4, #0]
 800a84e:	4a2c      	ldr	r2, [pc, #176]	; (800a900 <HttpDaemon::Run()+0x134>)
 800a850:	9302      	str	r3, [sp, #8]
 800a852:	4b2c      	ldr	r3, [pc, #176]	; (800a904 <HttpDaemon::Run()+0x138>)
 800a854:	68e0      	ldr	r0, [r4, #12]
 800a856:	e9cd 5300 	strd	r5, r3, [sp]
 800a85a:	69a3      	ldr	r3, [r4, #24]
 800a85c:	f7fe fd4e 	bl	80092fc <snprintf>
 800a860:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a864:	b283      	uxth	r3, r0
 800a866:	6830      	ldr	r0, [r6, #0]
 800a868:	f004 f9a9 	bl	800ebbe <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a86c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a86e:	4a23      	ldr	r2, [pc, #140]	; (800a8fc <HttpDaemon::Run()+0x130>)
 800a870:	6921      	ldr	r1, [r4, #16]
 800a872:	6830      	ldr	r0, [r6, #0]
 800a874:	f004 f9a3 	bl	800ebbe <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a878:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a87c:	2302      	movs	r3, #2
 800a87e:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a882:	e00b      	b.n	800a89c <HttpDaemon::Run()+0xd0>
 800a884:	2b01      	cmp	r3, #1
 800a886:	d1be      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a888:	2100      	movs	r1, #0
 800a88a:	4620      	mov	r0, r4
 800a88c:	f7ff feee 	bl	800a66c <HttpDaemon::HandlePost(bool)>
 800a890:	28c8      	cmp	r0, #200	; 0xc8
 800a892:	61a0      	str	r0, [r4, #24]
 800a894:	d1b7      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a896:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a898:	2b00      	cmp	r3, #0
 800a89a:	d1b4      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a89c:	b004      	add	sp, #16
 800a89e:	bd70      	pop	{r4, r5, r6, pc}
 800a8a0:	2bc8      	cmp	r3, #200	; 0xc8
 800a8a2:	d1b0      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a8a4:	69e1      	ldr	r1, [r4, #28]
 800a8a6:	2901      	cmp	r1, #1
 800a8a8:	d1ad      	bne.n	800a806 <HttpDaemon::Run()+0x3a>
 800a8aa:	4620      	mov	r0, r4
 800a8ac:	f7ff fede 	bl	800a66c <HttpDaemon::HandlePost(bool)>
 800a8b0:	e7a8      	b.n	800a804 <HttpDaemon::Run()+0x38>
 800a8b2:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a8b6:	4293      	cmp	r3, r2
 800a8b8:	d010      	beq.n	800a8dc <HttpDaemon::Run()+0x110>
 800a8ba:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a8be:	4293      	cmp	r3, r2
 800a8c0:	d00e      	beq.n	800a8e0 <HttpDaemon::Run()+0x114>
 800a8c2:	4d11      	ldr	r5, [pc, #68]	; (800a908 <HttpDaemon::Run()+0x13c>)
 800a8c4:	4a0a      	ldr	r2, [pc, #40]	; (800a8f0 <HttpDaemon::Run()+0x124>)
 800a8c6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a8ca:	bf18      	it	ne
 800a8cc:	4615      	movne	r5, r2
 800a8ce:	e7ae      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8d0:	4d0e      	ldr	r5, [pc, #56]	; (800a90c <HttpDaemon::Run()+0x140>)
 800a8d2:	e7ac      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8d4:	4d0e      	ldr	r5, [pc, #56]	; (800a910 <HttpDaemon::Run()+0x144>)
 800a8d6:	e7aa      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8d8:	4d0e      	ldr	r5, [pc, #56]	; (800a914 <HttpDaemon::Run()+0x148>)
 800a8da:	e7a8      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8dc:	4d0e      	ldr	r5, [pc, #56]	; (800a918 <HttpDaemon::Run()+0x14c>)
 800a8de:	e7a6      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8e0:	4d0e      	ldr	r5, [pc, #56]	; (800a91c <HttpDaemon::Run()+0x150>)
 800a8e2:	e7a4      	b.n	800a82e <HttpDaemon::Run()+0x62>
 800a8e4:	4d0e      	ldr	r5, [pc, #56]	; (800a920 <HttpDaemon::Run()+0x154>)
 800a8e6:	e7ad      	b.n	800a844 <HttpDaemon::Run()+0x78>
 800a8e8:	20008564 	andcs	r8, r0, r4, ror #10
 800a8ec:	08013967 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, fp, ip, sp}
 800a8f0:	080139ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, fp, ip, sp}
 800a8f4:	08013ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp}
 800a8f8:	080139ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, sp}
 800a8fc:	200000b0 	strhcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a900:	08013a5a 	stmdaeq	r1, {r1, r3, r4, r6, r9, fp, ip, sp}
 800a904:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 800a908:	080139ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, fp, ip, sp}
 800a90c:	08013996 	stmdaeq	r1, {r1, r2, r4, r7, r8, fp, ip, sp}
 800a910:	08013973 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, fp, ip, sp}
 800a914:	0801397d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, fp, ip, sp}
 800a918:	080139c1 	stmdaeq	r1, {r0, r6, r7, r8, fp, ip, sp}
 800a91c:	080139d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, ip, sp}
 800a920:	080139fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, ip, sp}

0800a924 <remoteconfig::json_get_list(char*, unsigned short)>:
 800a924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a928:	4b14      	ldr	r3, [pc, #80]	; (800a97c <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a92a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a980 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a92e:	681b      	ldr	r3, [r3, #0]
 800a930:	b088      	sub	sp, #32
 800a932:	4605      	mov	r5, r0
 800a934:	f8d8 0000 	ldr.w	r0, [r8]
 800a938:	695c      	ldr	r4, [r3, #20]
 800a93a:	460e      	mov	r6, r1
 800a93c:	f7ff f83e 	bl	80099bc <RemoteConfig::GetStringNode() const>
 800a940:	4607      	mov	r7, r0
 800a942:	f8d8 0000 	ldr.w	r0, [r8]
 800a946:	f7ff f845 	bl	80099d4 <RemoteConfig::GetStringOutput() const>
 800a94a:	4b0e      	ldr	r3, [pc, #56]	; (800a984 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a94c:	4631      	mov	r1, r6
 800a94e:	7a1a      	ldrb	r2, [r3, #8]
 800a950:	3309      	adds	r3, #9
 800a952:	9303      	str	r3, [sp, #12]
 800a954:	0e23      	lsrs	r3, r4, #24
 800a956:	9302      	str	r3, [sp, #8]
 800a958:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a95c:	9301      	str	r3, [sp, #4]
 800a95e:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a962:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a966:	9300      	str	r3, [sp, #0]
 800a968:	4628      	mov	r0, r5
 800a96a:	4a07      	ldr	r2, [pc, #28]	; (800a988 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a96c:	9704      	str	r7, [sp, #16]
 800a96e:	b2e3      	uxtb	r3, r4
 800a970:	f7fe fcc4 	bl	80092fc <snprintf>
 800a974:	b280      	uxth	r0, r0
 800a976:	b008      	add	sp, #32
 800a978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a97c:	20008564 	andcs	r8, r0, r4, ror #10
 800a980:	200000ac 	andcs	r0, r0, ip, lsr #1
 800a984:	20000088 	andcs	r0, r0, r8, lsl #1
 800a988:	08013b8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, fp, ip, sp}

0800a98c <remoteconfig::json_get_version(char*, unsigned short)>:
 800a98c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a98e:	2208      	movs	r2, #8
 800a990:	4b09      	ldr	r3, [pc, #36]	; (800a9b8 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a992:	9204      	str	r2, [sp, #16]
 800a994:	f1a3 020b 	sub.w	r2, r3, #11
 800a998:	9203      	str	r2, [sp, #12]
 800a99a:	220b      	movs	r2, #11
 800a99c:	9202      	str	r2, [sp, #8]
 800a99e:	4a07      	ldr	r2, [pc, #28]	; (800a9bc <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a9a0:	9305      	str	r3, [sp, #20]
 800a9a2:	3b0e      	subs	r3, #14
 800a9a4:	9201      	str	r2, [sp, #4]
 800a9a6:	9300      	str	r3, [sp, #0]
 800a9a8:	4a05      	ldr	r2, [pc, #20]	; (800a9c0 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a9aa:	2303      	movs	r3, #3
 800a9ac:	f7fe fca6 	bl	80092fc <snprintf>
 800a9b0:	b280      	uxth	r0, r0
 800a9b2:	b007      	add	sp, #28
 800a9b4:	f85d fb04 	ldr.w	pc, [sp], #4
 800a9b8:	20009c1e 	andcs	r9, r0, lr, lsl ip
 800a9bc:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 800a9c0:	08013beb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, fp, ip, sp}

0800a9c4 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a9c4:	b508      	push	{r3, lr}
 800a9c6:	4b05      	ldr	r3, [pc, #20]	; (800a9dc <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a9c8:	681a      	ldr	r2, [r3, #0]
 800a9ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a9ce:	fbb2 f3f3 	udiv	r3, r2, r3
 800a9d2:	4a03      	ldr	r2, [pc, #12]	; (800a9e0 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a9d4:	f7fe fc92 	bl	80092fc <snprintf>
 800a9d8:	b280      	uxth	r0, r0
 800a9da:	bd08      	pop	{r3, pc}
 800a9dc:	20009c84 	andcs	r9, r0, r4, lsl #25
 800a9e0:	08013c31 	stmdaeq	r1, {r0, r4, r5, sl, fp, ip, sp}

0800a9e4 <remoteconfig::json_get_display(char*, unsigned short)>:
 800a9e4:	b508      	push	{r3, lr}
 800a9e6:	4b05      	ldr	r3, [pc, #20]	; (800a9fc <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a9e8:	4a05      	ldr	r2, [pc, #20]	; (800aa00 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a9ea:	681b      	ldr	r3, [r3, #0]
 800a9ec:	7c1b      	ldrb	r3, [r3, #16]
 800a9ee:	f083 0301 	eor.w	r3, r3, #1
 800a9f2:	f7fe fc83 	bl	80092fc <snprintf>
 800a9f6:	b280      	uxth	r0, r0
 800a9f8:	bd08      	pop	{r3, pc}
 800a9fa:	bf00      	nop
 800a9fc:	20009b80 	andcs	r9, r0, r0, lsl #23
 800aa00:	08013c40 	stmdaeq	r1, {r6, sl, fp, ip, sp}

0800aa04 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800aa04:	b508      	push	{r3, lr}
 800aa06:	4a02      	ldr	r2, [pc, #8]	; (800aa10 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800aa08:	f7fe fc78 	bl	80092fc <snprintf>
 800aa0c:	b280      	uxth	r0, r0
 800aa0e:	bd08      	pop	{r3, pc}
 800aa10:	08013c4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, fp, ip, sp}

0800aa14 <get_file_content(char const*, char*)>:
 800aa14:	2300      	movs	r3, #0
 800aa16:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa18:	4a10      	ldr	r2, [pc, #64]	; (800aa5c <get_file_content(char const*, char*)+0x48>)
 800aa1a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800aa1e:	1e46      	subs	r6, r0, #1
 800aa20:	3c01      	subs	r4, #1
 800aa22:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800aa26:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800aa2a:	42bd      	cmp	r5, r7
 800aa2c:	d005      	beq.n	800aa3a <get_file_content(char const*, char*)+0x26>
 800aa2e:	3301      	adds	r3, #1
 800aa30:	2b03      	cmp	r3, #3
 800aa32:	d1f2      	bne.n	800aa1a <get_file_content(char const*, char*)+0x6>
 800aa34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800aa38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa3a:	2d00      	cmp	r5, #0
 800aa3c:	d1f1      	bne.n	800aa22 <get_file_content(char const*, char*)+0xe>
 800aa3e:	4608      	mov	r0, r1
 800aa40:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800aa44:	6853      	ldr	r3, [r2, #4]
 800aa46:	3b01      	subs	r3, #1
 800aa48:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800aa4c:	f800 2b01 	strb.w	r2, [r0], #1
 800aa50:	2a00      	cmp	r2, #0
 800aa52:	d1f9      	bne.n	800aa48 <get_file_content(char const*, char*)+0x34>
 800aa54:	1a40      	subs	r0, r0, r1
 800aa56:	3801      	subs	r0, #1
 800aa58:	e7ee      	b.n	800aa38 <get_file_content(char const*, char*)+0x24>
 800aa5a:	bf00      	nop
 800aa5c:	08013f74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, fp, ip, sp}

0800aa60 <strlen>:
 800aa60:	4603      	mov	r3, r0
 800aa62:	461a      	mov	r2, r3
 800aa64:	7811      	ldrb	r1, [r2, #0]
 800aa66:	3301      	adds	r3, #1
 800aa68:	2900      	cmp	r1, #0
 800aa6a:	d1fa      	bne.n	800aa62 <strlen+0x2>
 800aa6c:	1a10      	subs	r0, r2, r0
 800aa6e:	4770      	bx	lr

0800aa70 <strncpy.isra.0>:
 800aa70:	3901      	subs	r1, #1
 800aa72:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800aa76:	b92b      	cbnz	r3, 800aa84 <strncpy.isra.0+0x14>
 800aa78:	4402      	add	r2, r0
 800aa7a:	4290      	cmp	r0, r2
 800aa7c:	d006      	beq.n	800aa8c <strncpy.isra.0+0x1c>
 800aa7e:	f800 3b01 	strb.w	r3, [r0], #1
 800aa82:	e7fa      	b.n	800aa7a <strncpy.isra.0+0xa>
 800aa84:	3a01      	subs	r2, #1
 800aa86:	f800 3b01 	strb.w	r3, [r0], #1
 800aa8a:	d1f2      	bne.n	800aa72 <strncpy.isra.0+0x2>
 800aa8c:	4770      	bx	lr

0800aa8e <strcpy.isra.0>:
 800aa8e:	3801      	subs	r0, #1
 800aa90:	f811 3b01 	ldrb.w	r3, [r1], #1
 800aa94:	f800 3f01 	strb.w	r3, [r0, #1]!
 800aa98:	2b00      	cmp	r3, #0
 800aa9a:	d1f9      	bne.n	800aa90 <strcpy.isra.0+0x2>
 800aa9c:	4770      	bx	lr
	...

0800aaa0 <OscServer::OscServer()>:
 800aaa0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aaa4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aaa6:	4a24      	ldr	r2, [pc, #144]	; (800ab38 <OscServer::OscServer()+0x98>)
 800aaa8:	4604      	mov	r4, r0
 800aaaa:	e9c0 2300 	strd	r2, r3, [r0]
 800aaae:	2300      	movs	r3, #0
 800aab0:	2581      	movs	r5, #129	; 0x81
 800aab2:	4a22      	ldr	r2, [pc, #136]	; (800ab3c <OscServer::OscServer()+0x9c>)
 800aab4:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800aab8:	6010      	str	r0, [r2, #0]
 800aaba:	4a21      	ldr	r2, [pc, #132]	; (800ab40 <OscServer::OscServer()+0xa0>)
 800aabc:	6083      	str	r3, [r0, #8]
 800aabe:	7303      	strb	r3, [r0, #12]
 800aac0:	3d01      	subs	r5, #1
 800aac2:	d12c      	bne.n	800ab1e <OscServer::OscServer()+0x7e>
 800aac4:	2281      	movs	r2, #129	; 0x81
 800aac6:	491f      	ldr	r1, [pc, #124]	; (800ab44 <OscServer::OscServer()+0xa4>)
 800aac8:	481d      	ldr	r0, [pc, #116]	; (800ab40 <OscServer::OscServer()+0xa0>)
 800aaca:	f7ff ffe0 	bl	800aa8e <strcpy.isra.0>
 800aace:	4b1e      	ldr	r3, [pc, #120]	; (800ab48 <OscServer::OscServer()+0xa8>)
 800aad0:	3a01      	subs	r2, #1
 800aad2:	d127      	bne.n	800ab24 <OscServer::OscServer()+0x84>
 800aad4:	491d      	ldr	r1, [pc, #116]	; (800ab4c <OscServer::OscServer()+0xac>)
 800aad6:	481c      	ldr	r0, [pc, #112]	; (800ab48 <OscServer::OscServer()+0xa8>)
 800aad8:	f7ff ffd9 	bl	800aa8e <strcpy.isra.0>
 800aadc:	2380      	movs	r3, #128	; 0x80
 800aade:	491c      	ldr	r1, [pc, #112]	; (800ab50 <OscServer::OscServer()+0xb0>)
 800aae0:	3b01      	subs	r3, #1
 800aae2:	d222      	bcs.n	800ab2a <OscServer::OscServer()+0x8a>
 800aae4:	491b      	ldr	r1, [pc, #108]	; (800ab54 <OscServer::OscServer()+0xb4>)
 800aae6:	481a      	ldr	r0, [pc, #104]	; (800ab50 <OscServer::OscServer()+0xb0>)
 800aae8:	f7ff ffd1 	bl	800aa8e <strcpy.isra.0>
 800aaec:	2380      	movs	r3, #128	; 0x80
 800aaee:	2100      	movs	r1, #0
 800aaf0:	4a19      	ldr	r2, [pc, #100]	; (800ab58 <OscServer::OscServer()+0xb8>)
 800aaf2:	3b01      	subs	r3, #1
 800aaf4:	d21c      	bcs.n	800ab30 <OscServer::OscServer()+0x90>
 800aaf6:	4919      	ldr	r1, [pc, #100]	; (800ab5c <OscServer::OscServer()+0xbc>)
 800aaf8:	4817      	ldr	r0, [pc, #92]	; (800ab58 <OscServer::OscServer()+0xb8>)
 800aafa:	f7ff ffc8 	bl	800aa8e <strcpy.isra.0>
 800aafe:	4b18      	ldr	r3, [pc, #96]	; (800ab60 <OscServer::OscServer()+0xc0>)
 800ab00:	211f      	movs	r1, #31
 800ab02:	9300      	str	r3, [sp, #0]
 800ab04:	4a17      	ldr	r2, [pc, #92]	; (800ab64 <OscServer::OscServer()+0xc4>)
 800ab06:	4b18      	ldr	r3, [pc, #96]	; (800ab68 <OscServer::OscServer()+0xc8>)
 800ab08:	f104 000d 	add.w	r0, r4, #13
 800ab0c:	f7fe fbf6 	bl	80092fc <snprintf>
 800ab10:	4620      	mov	r0, r4
 800ab12:	4b16      	ldr	r3, [pc, #88]	; (800ab6c <OscServer::OscServer()+0xcc>)
 800ab14:	63a3      	str	r3, [r4, #56]	; 0x38
 800ab16:	4b16      	ldr	r3, [pc, #88]	; (800ab70 <OscServer::OscServer()+0xd0>)
 800ab18:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ab1a:	b003      	add	sp, #12
 800ab1c:	bd30      	pop	{r4, r5, pc}
 800ab1e:	f802 3b01 	strb.w	r3, [r2], #1
 800ab22:	e7cd      	b.n	800aac0 <OscServer::OscServer()+0x20>
 800ab24:	f803 5b01 	strb.w	r5, [r3], #1
 800ab28:	e7d2      	b.n	800aad0 <OscServer::OscServer()+0x30>
 800ab2a:	f801 2b01 	strb.w	r2, [r1], #1
 800ab2e:	e7d7      	b.n	800aae0 <OscServer::OscServer()+0x40>
 800ab30:	f802 1b01 	strb.w	r1, [r2], #1
 800ab34:	e7dd      	b.n	800aaf2 <OscServer::OscServer()+0x52>
 800ab36:	bf00      	nop
 800ab38:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 800ab3c:	20000a54 	andcs	r0, r0, r4, asr sl
 800ab40:	200007d4 	ldrdcs	r0, [r0], -r4
 800ab44:	080144b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, sl, lr}
 800ab48:	200006d4 	ldrdcs	r0, [r0], -r4
 800ab4c:	080144bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, lr}
 800ab50:	20000650 	andcs	r0, r0, r0, asr r6
 800ab54:	080144c4 	stmdaeq	r1, {r2, r6, r7, sl, lr}
 800ab58:	20000754 	andcs	r0, r0, r4, asr r7
 800ab5c:	080144c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, sl, lr}
 800ab60:	08013285 	stmdaeq	r1, {r0, r2, r7, r9, ip, sp}
 800ab64:	080144da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, lr}
 800ab68:	080144d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, lr}
 800ab6c:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 800ab70:	080144e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, lr}

0800ab74 <OscServer::Start()>:
 800ab74:	b530      	push	{r4, r5, lr}
 800ab76:	4d0e      	ldr	r5, [pc, #56]	; (800abb0 <OscServer::Start()+0x3c>)
 800ab78:	b085      	sub	sp, #20
 800ab7a:	4604      	mov	r4, r0
 800ab7c:	8801      	ldrh	r1, [r0, #0]
 800ab7e:	6828      	ldr	r0, [r5, #0]
 800ab80:	f003 fe3d 	bl	800e7fe <Network::Begin(unsigned short)>
 800ab84:	682b      	ldr	r3, [r5, #0]
 800ab86:	6060      	str	r0, [r4, #4]
 800ab88:	695a      	ldr	r2, [r3, #20]
 800ab8a:	4601      	mov	r1, r0
 800ab8c:	69d8      	ldr	r0, [r3, #28]
 800ab8e:	2300      	movs	r3, #0
 800ab90:	9301      	str	r3, [sp, #4]
 800ab92:	4b08      	ldr	r3, [pc, #32]	; (800abb4 <OscServer::Start()+0x40>)
 800ab94:	ea62 0200 	orn	r2, r2, r0
 800ab98:	9300      	str	r3, [sp, #0]
 800ab9a:	a803      	add	r0, sp, #12
 800ab9c:	8823      	ldrh	r3, [r4, #0]
 800ab9e:	f000 fd95 	bl	800b6cc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800aba2:	4b05      	ldr	r3, [pc, #20]	; (800abb8 <OscServer::Start()+0x44>)
 800aba4:	2102      	movs	r1, #2
 800aba6:	6818      	ldr	r0, [r3, #0]
 800aba8:	f006 f92c 	bl	8010e04 <LedBlink::SetMode(ledblink::Mode)>
 800abac:	b005      	add	sp, #20
 800abae:	bd30      	pop	{r4, r5, pc}
 800abb0:	20008564 	andcs	r8, r0, r4, ror #10
 800abb4:	080144e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, lr}
 800abb8:	20009c6c 	andcs	r9, r0, ip, ror #24

0800abbc <OscServer::SetPath(char const*)>:
 800abbc:	b510      	push	{r4, lr}
 800abbe:	780b      	ldrb	r3, [r1, #0]
 800abc0:	2b2f      	cmp	r3, #47	; 0x2f
 800abc2:	d11c      	bne.n	800abfe <OscServer::SetPath(char const*)+0x42>
 800abc4:	4c0e      	ldr	r4, [pc, #56]	; (800ac00 <OscServer::SetPath(char const*)+0x44>)
 800abc6:	227d      	movs	r2, #125	; 0x7d
 800abc8:	4620      	mov	r0, r4
 800abca:	f7ff ff51 	bl	800aa70 <strncpy.isra.0>
 800abce:	4620      	mov	r0, r4
 800abd0:	f7ff ff46 	bl	800aa60 <strlen>
 800abd4:	3801      	subs	r0, #1
 800abd6:	5c23      	ldrb	r3, [r4, r0]
 800abd8:	4909      	ldr	r1, [pc, #36]	; (800ac00 <OscServer::SetPath(char const*)+0x44>)
 800abda:	2b2f      	cmp	r3, #47	; 0x2f
 800abdc:	bf04      	itt	eq
 800abde:	2300      	moveq	r3, #0
 800abe0:	5423      	strbeq	r3, [r4, r0]
 800abe2:	4c08      	ldr	r4, [pc, #32]	; (800ac04 <OscServer::SetPath(char const*)+0x48>)
 800abe4:	4620      	mov	r0, r4
 800abe6:	f7ff ff52 	bl	800aa8e <strcpy.isra.0>
 800abea:	4620      	mov	r0, r4
 800abec:	f7ff ff38 	bl	800aa60 <strlen>
 800abf0:	232f      	movs	r3, #47	; 0x2f
 800abf2:	5423      	strb	r3, [r4, r0]
 800abf4:	232a      	movs	r3, #42	; 0x2a
 800abf6:	4404      	add	r4, r0
 800abf8:	7063      	strb	r3, [r4, #1]
 800abfa:	2300      	movs	r3, #0
 800abfc:	70a3      	strb	r3, [r4, #2]
 800abfe:	bd10      	pop	{r4, pc}
 800ac00:	200007d4 	ldrdcs	r0, [r0], -r4
 800ac04:	200006d4 	ldrdcs	r0, [r0], -r4

0800ac08 <OscServer::SetPathInfo(char const*)>:
 800ac08:	780b      	ldrb	r3, [r1, #0]
 800ac0a:	b510      	push	{r4, lr}
 800ac0c:	2b2f      	cmp	r3, #47	; 0x2f
 800ac0e:	d10d      	bne.n	800ac2c <OscServer::SetPathInfo(char const*)+0x24>
 800ac10:	4c07      	ldr	r4, [pc, #28]	; (800ac30 <OscServer::SetPathInfo(char const*)+0x28>)
 800ac12:	227f      	movs	r2, #127	; 0x7f
 800ac14:	4620      	mov	r0, r4
 800ac16:	f7ff ff2b 	bl	800aa70 <strncpy.isra.0>
 800ac1a:	4620      	mov	r0, r4
 800ac1c:	f7ff ff20 	bl	800aa60 <strlen>
 800ac20:	3801      	subs	r0, #1
 800ac22:	5c23      	ldrb	r3, [r4, r0]
 800ac24:	2b2f      	cmp	r3, #47	; 0x2f
 800ac26:	bf04      	itt	eq
 800ac28:	2300      	moveq	r3, #0
 800ac2a:	5423      	strbeq	r3, [r4, r0]
 800ac2c:	bd10      	pop	{r4, pc}
 800ac2e:	bf00      	nop
 800ac30:	20000650 	andcs	r0, r0, r0, asr r6

0800ac34 <OscServer::SetPathBlackOut(char const*)>:
 800ac34:	780b      	ldrb	r3, [r1, #0]
 800ac36:	b510      	push	{r4, lr}
 800ac38:	2b2f      	cmp	r3, #47	; 0x2f
 800ac3a:	d10d      	bne.n	800ac58 <OscServer::SetPathBlackOut(char const*)+0x24>
 800ac3c:	4c07      	ldr	r4, [pc, #28]	; (800ac5c <OscServer::SetPathBlackOut(char const*)+0x28>)
 800ac3e:	227f      	movs	r2, #127	; 0x7f
 800ac40:	4620      	mov	r0, r4
 800ac42:	f7ff ff15 	bl	800aa70 <strncpy.isra.0>
 800ac46:	4620      	mov	r0, r4
 800ac48:	f7ff ff0a 	bl	800aa60 <strlen>
 800ac4c:	3801      	subs	r0, #1
 800ac4e:	5c23      	ldrb	r3, [r4, r0]
 800ac50:	2b2f      	cmp	r3, #47	; 0x2f
 800ac52:	bf04      	itt	eq
 800ac54:	2300      	moveq	r3, #0
 800ac56:	5423      	strbeq	r3, [r4, r0]
 800ac58:	bd10      	pop	{r4, pc}
 800ac5a:	bf00      	nop
 800ac5c:	20000754 	andcs	r0, r0, r4, asr r7

0800ac60 <OscServer::GetChannel(char const*)>:
 800ac60:	b538      	push	{r3, r4, r5, lr}
 800ac62:	480f      	ldr	r0, [pc, #60]	; (800aca0 <OscServer::GetChannel(char const*)+0x40>)
 800ac64:	460c      	mov	r4, r1
 800ac66:	f7ff fefb 	bl	800aa60 <strlen>
 800ac6a:	1822      	adds	r2, r4, r0
 800ac6c:	4614      	mov	r4, r2
 800ac6e:	2000      	movs	r0, #0
 800ac70:	210a      	movs	r1, #10
 800ac72:	3403      	adds	r4, #3
 800ac74:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ac78:	b14b      	cbz	r3, 800ac8e <OscServer::GetChannel(char const*)+0x2e>
 800ac7a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 800ac7e:	2d09      	cmp	r5, #9
 800ac80:	d80b      	bhi.n	800ac9a <OscServer::GetChannel(char const*)+0x3a>
 800ac82:	fb01 3000 	mla	r0, r1, r0, r3
 800ac86:	4294      	cmp	r4, r2
 800ac88:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800ac8c:	d1f2      	bne.n	800ac74 <OscServer::GetChannel(char const*)+0x14>
 800ac8e:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800ac92:	bfc8      	it	gt
 800ac94:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 800ac98:	bd38      	pop	{r3, r4, r5, pc}
 800ac9a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ac9e:	e7fb      	b.n	800ac98 <OscServer::GetChannel(char const*)+0x38>
 800aca0:	200007d4 	ldrdcs	r0, [r0], -r4

0800aca4 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 800aca4:	2000      	movs	r0, #0
 800aca6:	b570      	push	{r4, r5, r6, lr}
 800aca8:	3a01      	subs	r2, #1
 800acaa:	4c09      	ldr	r4, [pc, #36]	; (800acd0 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800acac:	b292      	uxth	r2, r2
 800acae:	4414      	add	r4, r2
 800acb0:	4413      	add	r3, r2
 800acb2:	3901      	subs	r1, #1
 800acb4:	429a      	cmp	r2, r3
 800acb6:	d300      	bcc.n	800acba <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x16>
 800acb8:	bd70      	pop	{r4, r5, r6, pc}
 800acba:	7826      	ldrb	r6, [r4, #0]
 800acbc:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800acc0:	3201      	adds	r2, #1
 800acc2:	42ae      	cmp	r6, r5
 800acc4:	bf1c      	itt	ne
 800acc6:	7025      	strbne	r5, [r4, #0]
 800acc8:	2001      	movne	r0, #1
 800acca:	3401      	adds	r4, #1
 800accc:	b292      	uxth	r2, r2
 800acce:	e7f1      	b.n	800acb4 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800acd0:	20000854 	andcs	r0, r0, r4, asr r8

0800acd4 <OscServer::Run()>:
 800acd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acd6:	4d98      	ldr	r5, [pc, #608]	; (800af38 <OscServer::Run()+0x264>)
 800acd8:	b097      	sub	sp, #92	; 0x5c
 800acda:	4604      	mov	r4, r0
 800acdc:	4629      	mov	r1, r5
 800acde:	7900      	ldrb	r0, [r0, #4]
 800ace0:	f10d 031a 	add.w	r3, sp, #26
 800ace4:	aa07      	add	r2, sp, #28
 800ace6:	f003 f89f 	bl	800de28 <udp_recv2>
 800acea:	4606      	mov	r6, r0
 800acec:	b1a8      	cbz	r0, 800ad1a <OscServer::Run()+0x46>
 800acee:	4602      	mov	r2, r0
 800acf0:	6829      	ldr	r1, [r5, #0]
 800acf2:	a808      	add	r0, sp, #32
 800acf4:	f000 fc4d 	bl	800b592 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800acf8:	4990      	ldr	r1, [pc, #576]	; (800af3c <OscServer::Run()+0x268>)
 800acfa:	6828      	ldr	r0, [r5, #0]
 800acfc:	f000 fb72 	bl	800b3e4 <lo_pattern_match>
 800ad00:	4607      	mov	r7, r0
 800ad02:	2800      	cmp	r0, #0
 800ad04:	d075      	beq.n	800adf2 <OscServer::Run()+0x11e>
 800ad06:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ad0a:	b133      	cbz	r3, 800ad1a <OscServer::Run()+0x46>
 800ad0c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800ad0e:	2e01      	cmp	r6, #1
 800ad10:	d105      	bne.n	800ad1e <OscServer::Run()+0x4a>
 800ad12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad14:	781b      	ldrb	r3, [r3, #0]
 800ad16:	2b62      	cmp	r3, #98	; 0x62
 800ad18:	d03e      	beq.n	800ad98 <OscServer::Run()+0xc4>
 800ad1a:	b017      	add	sp, #92	; 0x5c
 800ad1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad1e:	2e02      	cmp	r6, #2
 800ad20:	d1fb      	bne.n	800ad1a <OscServer::Run()+0x46>
 800ad22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad24:	781b      	ldrb	r3, [r3, #0]
 800ad26:	2b69      	cmp	r3, #105	; 0x69
 800ad28:	d1f7      	bne.n	800ad1a <OscServer::Run()+0x46>
 800ad2a:	2100      	movs	r1, #0
 800ad2c:	a808      	add	r0, sp, #32
 800ad2e:	f000 fc80 	bl	800b632 <OscSimpleMessage::GetInt(unsigned int)>
 800ad32:	b285      	uxth	r5, r0
 800ad34:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800ad38:	d2ef      	bcs.n	800ad1a <OscServer::Run()+0x46>
 800ad3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ad3c:	2b01      	cmp	r3, #1
 800ad3e:	d9ec      	bls.n	800ad1a <OscServer::Run()+0x46>
 800ad40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad42:	785b      	ldrb	r3, [r3, #1]
 800ad44:	2b69      	cmp	r3, #105	; 0x69
 800ad46:	d148      	bne.n	800adda <OscServer::Run()+0x106>
 800ad48:	2101      	movs	r1, #1
 800ad4a:	a808      	add	r0, sp, #32
 800ad4c:	f000 fc71 	bl	800b632 <OscSimpleMessage::GetInt(unsigned int)>
 800ad50:	3501      	adds	r5, #1
 800ad52:	b2c0      	uxtb	r0, r0
 800ad54:	b2ad      	uxth	r5, r5
 800ad56:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 800ad5a:	2301      	movs	r3, #1
 800ad5c:	462a      	mov	r2, r5
 800ad5e:	4620      	mov	r0, r4
 800ad60:	a90f      	add	r1, sp, #60	; 0x3c
 800ad62:	f7ff ff9f 	bl	800aca4 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800ad66:	b910      	cbnz	r0, 800ad6e <OscServer::Run()+0x9a>
 800ad68:	7ae3      	ldrb	r3, [r4, #11]
 800ad6a:	2b00      	cmp	r3, #0
 800ad6c:	d0d5      	beq.n	800ad1a <OscServer::Run()+0x46>
 800ad6e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ad70:	7aa1      	ldrb	r1, [r4, #10]
 800ad72:	6803      	ldr	r3, [r0, #0]
 800ad74:	691e      	ldr	r6, [r3, #16]
 800ad76:	2900      	cmp	r1, #0
 800ad78:	f040 80a3 	bne.w	800aec2 <OscServer::Run()+0x1ee>
 800ad7c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ad80:	4a6f      	ldr	r2, [pc, #444]	; (800af40 <OscServer::Run()+0x26c>)
 800ad82:	47b0      	blx	r6
 800ad84:	7b21      	ldrb	r1, [r4, #12]
 800ad86:	2900      	cmp	r1, #0
 800ad88:	d1c7      	bne.n	800ad1a <OscServer::Run()+0x46>
 800ad8a:	2301      	movs	r3, #1
 800ad8c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ad8e:	7323      	strb	r3, [r4, #12]
 800ad90:	6803      	ldr	r3, [r0, #0]
 800ad92:	689b      	ldr	r3, [r3, #8]
 800ad94:	4798      	blx	r3
 800ad96:	e7c0      	b.n	800ad1a <OscServer::Run()+0x46>
 800ad98:	2200      	movs	r2, #0
 800ad9a:	a908      	add	r1, sp, #32
 800ad9c:	a80f      	add	r0, sp, #60	; 0x3c
 800ad9e:	f000 fc5c 	bl	800b65a <OscSimpleMessage::GetBlob(unsigned int)>
 800ada2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ada4:	b29d      	uxth	r5, r3
 800ada6:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800adaa:	d8b6      	bhi.n	800ad1a <OscServer::Run()+0x46>
 800adac:	462b      	mov	r3, r5
 800adae:	4632      	mov	r2, r6
 800adb0:	4620      	mov	r0, r4
 800adb2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800adb4:	f7ff ff76 	bl	800aca4 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800adb8:	b910      	cbnz	r0, 800adc0 <OscServer::Run()+0xec>
 800adba:	7ae3      	ldrb	r3, [r4, #11]
 800adbc:	2b00      	cmp	r3, #0
 800adbe:	d0ac      	beq.n	800ad1a <OscServer::Run()+0x46>
 800adc0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800adc2:	6803      	ldr	r3, [r0, #0]
 800adc4:	691e      	ldr	r6, [r3, #16]
 800adc6:	7aa3      	ldrb	r3, [r4, #10]
 800adc8:	b113      	cbz	r3, 800add0 <OscServer::Run()+0xfc>
 800adca:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800adce:	d178      	bne.n	800aec2 <OscServer::Run()+0x1ee>
 800add0:	f44f 7300 	mov.w	r3, #512	; 0x200
 800add4:	2100      	movs	r1, #0
 800add6:	4a5a      	ldr	r2, [pc, #360]	; (800af40 <OscServer::Run()+0x26c>)
 800add8:	e7d3      	b.n	800ad82 <OscServer::Run()+0xae>
 800adda:	2b66      	cmp	r3, #102	; 0x66
 800addc:	d19d      	bne.n	800ad1a <OscServer::Run()+0x46>
 800adde:	2101      	movs	r1, #1
 800ade0:	a808      	add	r0, sp, #32
 800ade2:	f000 fc12 	bl	800b60a <OscSimpleMessage::GetFloat(unsigned int)>
 800ade6:	4957      	ldr	r1, [pc, #348]	; (800af44 <OscServer::Run()+0x270>)
 800ade8:	f7fd fa4c 	bl	8008284 <__aeabi_fmul>
 800adec:	f7fd fb9a 	bl	8008524 <__aeabi_f2uiz>
 800adf0:	e7ae      	b.n	800ad50 <OscServer::Run()+0x7c>
 800adf2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800adf4:	6828      	ldr	r0, [r5, #0]
 800adf6:	b9b3      	cbnz	r3, 800ae26 <OscServer::Run()+0x152>
 800adf8:	4953      	ldr	r1, [pc, #332]	; (800af48 <OscServer::Run()+0x274>)
 800adfa:	6828      	ldr	r0, [r5, #0]
 800adfc:	f000 faf2 	bl	800b3e4 <lo_pattern_match>
 800ae00:	4606      	mov	r6, r0
 800ae02:	2800      	cmp	r0, #0
 800ae04:	d133      	bne.n	800ae6e <OscServer::Run()+0x19a>
 800ae06:	4951      	ldr	r1, [pc, #324]	; (800af4c <OscServer::Run()+0x278>)
 800ae08:	6828      	ldr	r0, [r5, #0]
 800ae0a:	f000 faeb 	bl	800b3e4 <lo_pattern_match>
 800ae0e:	2800      	cmp	r0, #0
 800ae10:	d05d      	beq.n	800aece <OscServer::Run()+0x1fa>
 800ae12:	4b4f      	ldr	r3, [pc, #316]	; (800af50 <OscServer::Run()+0x27c>)
 800ae14:	9a07      	ldr	r2, [sp, #28]
 800ae16:	9300      	str	r3, [sp, #0]
 800ae18:	6861      	ldr	r1, [r4, #4]
 800ae1a:	8863      	ldrh	r3, [r4, #2]
 800ae1c:	9601      	str	r6, [sp, #4]
 800ae1e:	a80f      	add	r0, sp, #60	; 0x3c
 800ae20:	f000 fc54 	bl	800b6cc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800ae24:	e779      	b.n	800ad1a <OscServer::Run()+0x46>
 800ae26:	494b      	ldr	r1, [pc, #300]	; (800af54 <OscServer::Run()+0x280>)
 800ae28:	f000 fadc 	bl	800b3e4 <lo_pattern_match>
 800ae2c:	2800      	cmp	r0, #0
 800ae2e:	d0e3      	beq.n	800adf8 <OscServer::Run()+0x124>
 800ae30:	4632      	mov	r2, r6
 800ae32:	6829      	ldr	r1, [r5, #0]
 800ae34:	a80f      	add	r0, sp, #60	; 0x3c
 800ae36:	f000 fbac 	bl	800b592 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800ae3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ae3c:	2b00      	cmp	r3, #0
 800ae3e:	f43f af6c 	beq.w	800ad1a <OscServer::Run()+0x46>
 800ae42:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ae44:	781b      	ldrb	r3, [r3, #0]
 800ae46:	2b66      	cmp	r3, #102	; 0x66
 800ae48:	f47f af67 	bne.w	800ad1a <OscServer::Run()+0x46>
 800ae4c:	4639      	mov	r1, r7
 800ae4e:	a80f      	add	r0, sp, #60	; 0x3c
 800ae50:	f000 fbdb 	bl	800b60a <OscSimpleMessage::GetFloat(unsigned int)>
 800ae54:	2100      	movs	r1, #0
 800ae56:	f7fc ffe7 	bl	8007e28 <__aeabi_fcmpeq>
 800ae5a:	4603      	mov	r3, r0
 800ae5c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ae5e:	b91b      	cbnz	r3, 800ae68 <OscServer::Run()+0x194>
 800ae60:	6803      	ldr	r3, [r0, #0]
 800ae62:	689b      	ldr	r3, [r3, #8]
 800ae64:	4798      	blx	r3
 800ae66:	e758      	b.n	800ad1a <OscServer::Run()+0x46>
 800ae68:	6803      	ldr	r3, [r0, #0]
 800ae6a:	68db      	ldr	r3, [r3, #12]
 800ae6c:	e7fa      	b.n	800ae64 <OscServer::Run()+0x190>
 800ae6e:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ae72:	2b00      	cmp	r3, #0
 800ae74:	f43f af51 	beq.w	800ad1a <OscServer::Run()+0x46>
 800ae78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae7a:	2b01      	cmp	r3, #1
 800ae7c:	f47f af4d 	bne.w	800ad1a <OscServer::Run()+0x46>
 800ae80:	6829      	ldr	r1, [r5, #0]
 800ae82:	4620      	mov	r0, r4
 800ae84:	f7ff feec 	bl	800ac60 <OscServer::GetChannel(char const*)>
 800ae88:	b285      	uxth	r5, r0
 800ae8a:	1e6b      	subs	r3, r5, #1
 800ae8c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ae90:	f4bf af43 	bcs.w	800ad1a <OscServer::Run()+0x46>
 800ae94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ae96:	781b      	ldrb	r3, [r3, #0]
 800ae98:	2b69      	cmp	r3, #105	; 0x69
 800ae9a:	d105      	bne.n	800aea8 <OscServer::Run()+0x1d4>
 800ae9c:	2100      	movs	r1, #0
 800ae9e:	a808      	add	r0, sp, #32
 800aea0:	f000 fbc7 	bl	800b632 <OscSimpleMessage::GetInt(unsigned int)>
 800aea4:	b2c0      	uxtb	r0, r0
 800aea6:	e756      	b.n	800ad56 <OscServer::Run()+0x82>
 800aea8:	2b66      	cmp	r3, #102	; 0x66
 800aeaa:	f47f af36 	bne.w	800ad1a <OscServer::Run()+0x46>
 800aeae:	2100      	movs	r1, #0
 800aeb0:	a808      	add	r0, sp, #32
 800aeb2:	f000 fbaa 	bl	800b60a <OscSimpleMessage::GetFloat(unsigned int)>
 800aeb6:	4923      	ldr	r1, [pc, #140]	; (800af44 <OscServer::Run()+0x270>)
 800aeb8:	f7fd f9e4 	bl	8008284 <__aeabi_fmul>
 800aebc:	f7fd fb32 	bl	8008524 <__aeabi_f2uiz>
 800aec0:	e7f0      	b.n	800aea4 <OscServer::Run()+0x1d0>
 800aec2:	8923      	ldrh	r3, [r4, #8]
 800aec4:	42ab      	cmp	r3, r5
 800aec6:	bf38      	it	cc
 800aec8:	462b      	movcc	r3, r5
 800aeca:	8123      	strh	r3, [r4, #8]
 800aecc:	e782      	b.n	800add4 <OscServer::Run()+0x100>
 800aece:	4922      	ldr	r1, [pc, #136]	; (800af58 <OscServer::Run()+0x284>)
 800aed0:	6828      	ldr	r0, [r5, #0]
 800aed2:	f000 fa87 	bl	800b3e4 <lo_pattern_match>
 800aed6:	2800      	cmp	r0, #0
 800aed8:	f43f af1f 	beq.w	800ad1a <OscServer::Run()+0x46>
 800aedc:	f104 030d 	add.w	r3, r4, #13
 800aee0:	4d1e      	ldr	r5, [pc, #120]	; (800af5c <OscServer::Run()+0x288>)
 800aee2:	9302      	str	r3, [sp, #8]
 800aee4:	4b1e      	ldr	r3, [pc, #120]	; (800af60 <OscServer::Run()+0x28c>)
 800aee6:	9a07      	ldr	r2, [sp, #28]
 800aee8:	6861      	ldr	r1, [r4, #4]
 800aeea:	9300      	str	r3, [sp, #0]
 800aeec:	9501      	str	r5, [sp, #4]
 800aeee:	8863      	ldrh	r3, [r4, #2]
 800aef0:	a805      	add	r0, sp, #20
 800aef2:	f000 fc0f 	bl	800b714 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800aef6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800aef8:	9a07      	ldr	r2, [sp, #28]
 800aefa:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800aefe:	4b19      	ldr	r3, [pc, #100]	; (800af64 <OscServer::Run()+0x290>)
 800af00:	6861      	ldr	r1, [r4, #4]
 800af02:	9300      	str	r3, [sp, #0]
 800af04:	a806      	add	r0, sp, #24
 800af06:	8863      	ldrh	r3, [r4, #2]
 800af08:	f000 fc04 	bl	800b714 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800af0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800af0e:	9a07      	ldr	r2, [sp, #28]
 800af10:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800af14:	4b14      	ldr	r3, [pc, #80]	; (800af68 <OscServer::Run()+0x294>)
 800af16:	6861      	ldr	r1, [r4, #4]
 800af18:	9300      	str	r3, [sp, #0]
 800af1a:	a80f      	add	r0, sp, #60	; 0x3c
 800af1c:	8863      	ldrh	r3, [r4, #2]
 800af1e:	f000 fbf9 	bl	800b714 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800af22:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800af24:	2800      	cmp	r0, #0
 800af26:	f43f aef8 	beq.w	800ad1a <OscServer::Run()+0x46>
 800af2a:	6803      	ldr	r3, [r0, #0]
 800af2c:	9a07      	ldr	r2, [sp, #28]
 800af2e:	691d      	ldr	r5, [r3, #16]
 800af30:	6861      	ldr	r1, [r4, #4]
 800af32:	8863      	ldrh	r3, [r4, #2]
 800af34:	47a8      	blx	r5
 800af36:	e6f0      	b.n	800ad1a <OscServer::Run()+0x46>
 800af38:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800af3c:	200007d4 	ldrdcs	r0, [r0], -r4
 800af40:	20000854 	andcs	r0, r0, r4, asr r8
 800af44:	437f0000 	cmnmi	pc, #0
 800af48:	200006d4 	ldrdcs	r0, [r0], -r4
 800af4c:	080144e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, lr}
 800af50:	080144ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sl, lr}
 800af54:	20000754 	andcs	r0, r0, r4, asr r7
 800af58:	20000650 	andcs	r0, r0, r0, asr r6
 800af5c:	080144e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, lr}
 800af60:	080144f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, lr}
 800af64:	080144fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, lr}
 800af68:	0801450a 	stmdaeq	r1, {r1, r3, r8, sl, lr}

0800af6c <OscServer::Print()>:
 800af6c:	b510      	push	{r4, lr}
 800af6e:	4604      	mov	r4, r0
 800af70:	480f      	ldr	r0, [pc, #60]	; (800afb0 <OscServer::Print()+0x44>)
 800af72:	f7fe f9b3 	bl	80092dc <printf>
 800af76:	8821      	ldrh	r1, [r4, #0]
 800af78:	480e      	ldr	r0, [pc, #56]	; (800afb4 <OscServer::Print()+0x48>)
 800af7a:	f7fe f9af 	bl	80092dc <printf>
 800af7e:	8861      	ldrh	r1, [r4, #2]
 800af80:	480d      	ldr	r0, [pc, #52]	; (800afb8 <OscServer::Print()+0x4c>)
 800af82:	f7fe f9ab 	bl	80092dc <printf>
 800af86:	4a0d      	ldr	r2, [pc, #52]	; (800afbc <OscServer::Print()+0x50>)
 800af88:	490d      	ldr	r1, [pc, #52]	; (800afc0 <OscServer::Print()+0x54>)
 800af8a:	480e      	ldr	r0, [pc, #56]	; (800afc4 <OscServer::Print()+0x58>)
 800af8c:	f7fe f9a6 	bl	80092dc <printf>
 800af90:	490d      	ldr	r1, [pc, #52]	; (800afc8 <OscServer::Print()+0x5c>)
 800af92:	480e      	ldr	r0, [pc, #56]	; (800afcc <OscServer::Print()+0x60>)
 800af94:	f7fe f9a2 	bl	80092dc <printf>
 800af98:	7aa1      	ldrb	r1, [r4, #10]
 800af9a:	4a0d      	ldr	r2, [pc, #52]	; (800afd0 <OscServer::Print()+0x64>)
 800af9c:	4b0d      	ldr	r3, [pc, #52]	; (800afd4 <OscServer::Print()+0x68>)
 800af9e:	480e      	ldr	r0, [pc, #56]	; (800afd8 <OscServer::Print()+0x6c>)
 800afa0:	2900      	cmp	r1, #0
 800afa2:	bf14      	ite	ne
 800afa4:	4611      	movne	r1, r2
 800afa6:	4619      	moveq	r1, r3
 800afa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afac:	f7fe b996 	b.w	80092dc <printf>
 800afb0:	0801451b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, lr}
 800afb4:	08014527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, lr}
 800afb8:	08014543 	stmdaeq	r1, {r0, r1, r6, r8, sl, lr}
 800afbc:	200006d4 	ldrdcs	r0, [r0], -r4
 800afc0:	200007d4 	ldrdcs	r0, [r0], -r4
 800afc4:	0801455f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, lr}
 800afc8:	20000754 	andcs	r0, r0, r4, asr r7
 800afcc:	08014581 	stmdaeq	r1, {r0, r7, r8, sl, lr}
 800afd0:	08014514 	stmdaeq	r1, {r2, r4, r8, sl, lr}
 800afd4:	08014518 	stmdaeq	r1, {r3, r4, r8, sl, lr}
 800afd8:	0801459f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, lr}

0800afdc <strncpy.constprop.0.isra.0>:
 800afdc:	227f      	movs	r2, #127	; 0x7f
 800afde:	1e4b      	subs	r3, r1, #1
 800afe0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800afe4:	b909      	cbnz	r1, 800afea <strncpy.constprop.0.isra.0+0xe>
 800afe6:	f006 b87f 	b.w	80110e8 <memset>
 800afea:	3a01      	subs	r2, #1
 800afec:	f800 1b01 	strb.w	r1, [r0], #1
 800aff0:	d1f6      	bne.n	800afe0 <strncpy.constprop.0.isra.0+0x4>
 800aff2:	4770      	bx	lr

0800aff4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800aff4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aff6:	88c6      	ldrh	r6, [r0, #6]
 800aff8:	8885      	ldrh	r5, [r0, #4]
 800affa:	42ae      	cmp	r6, r5
 800affc:	d216      	bcs.n	800b02c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800affe:	4604      	mov	r4, r0
 800b000:	6800      	ldr	r0, [r0, #0]
 800b002:	1bad      	subs	r5, r5, r6
 800b004:	4430      	add	r0, r6
 800b006:	7a26      	ldrb	r6, [r4, #8]
 800b008:	b923      	cbnz	r3, 800b014 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800b00a:	b926      	cbnz	r6, 800b016 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800b00c:	9200      	str	r2, [sp, #0]
 800b00e:	460b      	mov	r3, r1
 800b010:	4a09      	ldr	r2, [pc, #36]	; (800b038 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800b012:	e003      	b.n	800b01c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800b014:	b166      	cbz	r6, 800b030 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800b016:	460b      	mov	r3, r1
 800b018:	9200      	str	r2, [sp, #0]
 800b01a:	4a08      	ldr	r2, [pc, #32]	; (800b03c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800b01c:	4629      	mov	r1, r5
 800b01e:	f7fe f96d 	bl	80092fc <snprintf>
 800b022:	4285      	cmp	r5, r0
 800b024:	bfa2      	ittt	ge
 800b026:	88e3      	ldrhge	r3, [r4, #6]
 800b028:	181b      	addge	r3, r3, r0
 800b02a:	80e3      	strhge	r3, [r4, #6]
 800b02c:	b002      	add	sp, #8
 800b02e:	bd70      	pop	{r4, r5, r6, pc}
 800b030:	9200      	str	r2, [sp, #0]
 800b032:	460b      	mov	r3, r1
 800b034:	4a02      	ldr	r2, [pc, #8]	; (800b040 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b036:	e7f1      	b.n	800b01c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800b038:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800b03c:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800b040:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}

0800b044 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800b044:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b046:	88c6      	ldrh	r6, [r0, #6]
 800b048:	8885      	ldrh	r5, [r0, #4]
 800b04a:	42ae      	cmp	r6, r5
 800b04c:	d216      	bcs.n	800b07c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 800b04e:	4604      	mov	r4, r0
 800b050:	6800      	ldr	r0, [r0, #0]
 800b052:	1bad      	subs	r5, r5, r6
 800b054:	4430      	add	r0, r6
 800b056:	7a26      	ldrb	r6, [r4, #8]
 800b058:	b923      	cbnz	r3, 800b064 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 800b05a:	b926      	cbnz	r6, 800b066 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 800b05c:	9200      	str	r2, [sp, #0]
 800b05e:	460b      	mov	r3, r1
 800b060:	4a09      	ldr	r2, [pc, #36]	; (800b088 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800b062:	e003      	b.n	800b06c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800b064:	b166      	cbz	r6, 800b080 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800b066:	460b      	mov	r3, r1
 800b068:	9200      	str	r2, [sp, #0]
 800b06a:	4a08      	ldr	r2, [pc, #32]	; (800b08c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 800b06c:	4629      	mov	r1, r5
 800b06e:	f7fe f945 	bl	80092fc <snprintf>
 800b072:	4285      	cmp	r5, r0
 800b074:	bfa2      	ittt	ge
 800b076:	88e3      	ldrhge	r3, [r4, #6]
 800b078:	181b      	addge	r3, r3, r0
 800b07a:	80e3      	strhge	r3, [r4, #6]
 800b07c:	b002      	add	sp, #8
 800b07e:	bd70      	pop	{r4, r5, r6, pc}
 800b080:	9200      	str	r2, [sp, #0]
 800b082:	460b      	mov	r3, r1
 800b084:	4a02      	ldr	r2, [pc, #8]	; (800b090 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b086:	e7f1      	b.n	800b06c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800b088:	08013794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, sp}
 800b08c:	08013789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip, sp}
 800b090:	08013795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp}

0800b094 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800b094:	b510      	push	{r4, lr}
 800b096:	4604      	mov	r4, r0
 800b098:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800b09c:	f840 1b04 	str.w	r1, [r0], #4
 800b0a0:	2100      	movs	r1, #0
 800b0a2:	f006 f821 	bl	80110e8 <memset>
 800b0a6:	4b02      	ldr	r3, [pc, #8]	; (800b0b0 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 800b0a8:	4620      	mov	r0, r4
 800b0aa:	60a3      	str	r3, [r4, #8]
 800b0ac:	bd10      	pop	{r4, pc}
 800b0ae:	bf00      	nop
 800b0b0:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

0800b0b4 <OSCServerParams::Load()>:
 800b0b4:	b508      	push	{r3, lr}
 800b0b6:	2300      	movs	r3, #0
 800b0b8:	4601      	mov	r1, r0
 800b0ba:	6043      	str	r3, [r0, #4]
 800b0bc:	6800      	ldr	r0, [r0, #0]
 800b0be:	b120      	cbz	r0, 800b0ca <OSCServerParams::Load()+0x16>
 800b0c0:	6803      	ldr	r3, [r0, #0]
 800b0c2:	3104      	adds	r1, #4
 800b0c4:	68db      	ldr	r3, [r3, #12]
 800b0c6:	4798      	blx	r3
 800b0c8:	2001      	movs	r0, #1
 800b0ca:	bd08      	pop	{r3, pc}

0800b0cc <OSCServerParams::Load(char const*, unsigned int)>:
 800b0cc:	6803      	ldr	r3, [r0, #0]
 800b0ce:	b1d3      	cbz	r3, 800b106 <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0d4:	460d      	mov	r5, r1
 800b0d6:	4616      	mov	r6, r2
 800b0d8:	4604      	mov	r4, r0
 800b0da:	6043      	str	r3, [r0, #4]
 800b0dc:	4602      	mov	r2, r0
 800b0de:	490a      	ldr	r1, [pc, #40]	; (800b108 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 800b0e0:	4668      	mov	r0, sp
 800b0e2:	f005 f9c3 	bl	801046c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b0e6:	4632      	mov	r2, r6
 800b0e8:	4629      	mov	r1, r5
 800b0ea:	4668      	mov	r0, sp
 800b0ec:	f005 f9c2 	bl	8010474 <ReadConfigFile::Read(char const*, unsigned int)>
 800b0f0:	4621      	mov	r1, r4
 800b0f2:	f851 0b04 	ldr.w	r0, [r1], #4
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	689b      	ldr	r3, [r3, #8]
 800b0fa:	4798      	blx	r3
 800b0fc:	4668      	mov	r0, sp
 800b0fe:	f005 f9b8 	bl	8010472 <ReadConfigFile::~ReadConfigFile()>
 800b102:	b002      	add	sp, #8
 800b104:	bd70      	pop	{r4, r5, r6, pc}
 800b106:	4770      	bx	lr
 800b108:	0800b205 	stmdaeq	r0, {r0, r2, r9, ip, sp, pc}

0800b10c <OSCServerParams::callbackFunction(char const*)>:
 800b10c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b10e:	460d      	mov	r5, r1
 800b110:	4604      	mov	r4, r0
 800b112:	4937      	ldr	r1, [pc, #220]	; (800b1f0 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800b114:	4628      	mov	r0, r5
 800b116:	f10d 0202 	add.w	r2, sp, #2
 800b11a:	f005 fa9c 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b11e:	b980      	cbnz	r0, 800b142 <OSCServerParams::callbackFunction(char const*)+0x36>
 800b120:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b124:	6863      	ldr	r3, [r4, #4]
 800b126:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b12a:	bf33      	iteet	cc
 800b12c:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 800b130:	8122      	strhcs	r2, [r4, #8]
 800b132:	f043 0301 	orrcs.w	r3, r3, #1
 800b136:	8122      	strhcc	r2, [r4, #8]
 800b138:	bf38      	it	cc
 800b13a:	f023 0301 	biccc.w	r3, r3, #1
 800b13e:	6063      	str	r3, [r4, #4]
 800b140:	e028      	b.n	800b194 <OSCServerParams::callbackFunction(char const*)+0x88>
 800b142:	4628      	mov	r0, r5
 800b144:	492b      	ldr	r1, [pc, #172]	; (800b1f4 <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800b146:	f10d 0202 	add.w	r2, sp, #2
 800b14a:	f005 fa84 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b14e:	b978      	cbnz	r0, 800b170 <OSCServerParams::callbackFunction(char const*)+0x64>
 800b150:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b154:	6863      	ldr	r3, [r4, #4]
 800b156:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b15a:	bf33      	iteet	cc
 800b15c:	f242 3228 	movwcc	r2, #9000	; 0x2328
 800b160:	8162      	strhcs	r2, [r4, #10]
 800b162:	f043 0302 	orrcs.w	r3, r3, #2
 800b166:	8162      	strhcc	r2, [r4, #10]
 800b168:	bf38      	it	cc
 800b16a:	f023 0302 	biccc.w	r3, r3, #2
 800b16e:	e7e6      	b.n	800b13e <OSCServerParams::callbackFunction(char const*)+0x32>
 800b170:	4628      	mov	r0, r5
 800b172:	4921      	ldr	r1, [pc, #132]	; (800b1f8 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800b174:	f10d 0201 	add.w	r2, sp, #1
 800b178:	f005 fab4 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b17c:	b978      	cbnz	r0, 800b19e <OSCServerParams::callbackFunction(char const*)+0x92>
 800b17e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b182:	6863      	ldr	r3, [r4, #4]
 800b184:	b142      	cbz	r2, 800b198 <OSCServerParams::callbackFunction(char const*)+0x8c>
 800b186:	f043 0308 	orr.w	r3, r3, #8
 800b18a:	3a00      	subs	r2, #0
 800b18c:	bf18      	it	ne
 800b18e:	2201      	movne	r2, #1
 800b190:	6063      	str	r3, [r4, #4]
 800b192:	7362      	strb	r2, [r4, #13]
 800b194:	b002      	add	sp, #8
 800b196:	bd70      	pop	{r4, r5, r6, pc}
 800b198:	f023 0308 	bic.w	r3, r3, #8
 800b19c:	e7f5      	b.n	800b18a <OSCServerParams::callbackFunction(char const*)+0x7e>
 800b19e:	267f      	movs	r6, #127	; 0x7f
 800b1a0:	4628      	mov	r0, r5
 800b1a2:	4916      	ldr	r1, [pc, #88]	; (800b1fc <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800b1a4:	ab01      	add	r3, sp, #4
 800b1a6:	f104 020e 	add.w	r2, r4, #14
 800b1aa:	9601      	str	r6, [sp, #4]
 800b1ac:	f005 f996 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1b0:	b918      	cbnz	r0, 800b1ba <OSCServerParams::callbackFunction(char const*)+0xae>
 800b1b2:	6863      	ldr	r3, [r4, #4]
 800b1b4:	f043 0304 	orr.w	r3, r3, #4
 800b1b8:	e7c1      	b.n	800b13e <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1ba:	4628      	mov	r0, r5
 800b1bc:	4910      	ldr	r1, [pc, #64]	; (800b200 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800b1be:	ab01      	add	r3, sp, #4
 800b1c0:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 800b1c4:	9601      	str	r6, [sp, #4]
 800b1c6:	f005 f989 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1ca:	b918      	cbnz	r0, 800b1d4 <OSCServerParams::callbackFunction(char const*)+0xc8>
 800b1cc:	6863      	ldr	r3, [r4, #4]
 800b1ce:	f043 0320 	orr.w	r3, r3, #32
 800b1d2:	e7b4      	b.n	800b13e <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1d4:	4628      	mov	r0, r5
 800b1d6:	490a      	ldr	r1, [pc, #40]	; (800b200 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800b1d8:	ab01      	add	r3, sp, #4
 800b1da:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 800b1de:	9601      	str	r6, [sp, #4]
 800b1e0:	f005 f97c 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1e4:	2800      	cmp	r0, #0
 800b1e6:	d1d5      	bne.n	800b194 <OSCServerParams::callbackFunction(char const*)+0x88>
 800b1e8:	6863      	ldr	r3, [r4, #4]
 800b1ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b1ee:	e7a6      	b.n	800b13e <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1f0:	08014637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, lr}
 800b1f4:	08014645 	stmdaeq	r1, {r0, r2, r6, r9, sl, lr}
 800b1f8:	080145fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, lr}
 800b1fc:	08014620 	stmdaeq	r1, {r5, r9, sl, lr}
 800b200:	0801462d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, lr}

0800b204 <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 800b204:	f7ff bf82 	b.w	800b10c <OSCServerParams::callbackFunction(char const*)>

0800b208 <OSCServerParams::Set(OscServer*)>:
 800b208:	b538      	push	{r3, r4, r5, lr}
 800b20a:	460d      	mov	r5, r1
 800b20c:	6843      	ldr	r3, [r0, #4]
 800b20e:	4604      	mov	r4, r0
 800b210:	07d9      	lsls	r1, r3, #31
 800b212:	bf44      	itt	mi
 800b214:	8902      	ldrhmi	r2, [r0, #8]
 800b216:	802a      	strhmi	r2, [r5, #0]
 800b218:	079a      	lsls	r2, r3, #30
 800b21a:	bf44      	itt	mi
 800b21c:	8942      	ldrhmi	r2, [r0, #10]
 800b21e:	806a      	strhmi	r2, [r5, #2]
 800b220:	0758      	lsls	r0, r3, #29
 800b222:	d504      	bpl.n	800b22e <OSCServerParams::Set(OscServer*)+0x26>
 800b224:	4628      	mov	r0, r5
 800b226:	f104 010e 	add.w	r1, r4, #14
 800b22a:	f7ff fcc7 	bl	800abbc <OscServer::SetPath(char const*)>
 800b22e:	6863      	ldr	r3, [r4, #4]
 800b230:	0699      	lsls	r1, r3, #26
 800b232:	d504      	bpl.n	800b23e <OSCServerParams::Set(OscServer*)+0x36>
 800b234:	4628      	mov	r0, r5
 800b236:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 800b23a:	f7ff fce5 	bl	800ac08 <OscServer::SetPathInfo(char const*)>
 800b23e:	6863      	ldr	r3, [r4, #4]
 800b240:	065a      	lsls	r2, r3, #25
 800b242:	d504      	bpl.n	800b24e <OSCServerParams::Set(OscServer*)+0x46>
 800b244:	4628      	mov	r0, r5
 800b246:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 800b24a:	f7ff fcf3 	bl	800ac34 <OscServer::SetPathBlackOut(char const*)>
 800b24e:	6863      	ldr	r3, [r4, #4]
 800b250:	071b      	lsls	r3, r3, #28
 800b252:	bf44      	itt	mi
 800b254:	7b63      	ldrbmi	r3, [r4, #13]
 800b256:	72ab      	strbmi	r3, [r5, #10]
 800b258:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b25c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 800b25c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b25e:	4604      	mov	r4, r0
 800b260:	4615      	mov	r5, r2
 800b262:	461e      	mov	r6, r3
 800b264:	b087      	sub	sp, #28
 800b266:	3004      	adds	r0, #4
 800b268:	2900      	cmp	r1, #0
 800b26a:	d061      	beq.n	800b330 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd4>
 800b26c:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800b270:	f005 ff23 	bl	80110ba <memmove>
 800b274:	4633      	mov	r3, r6
 800b276:	462a      	mov	r2, r5
 800b278:	4946      	ldr	r1, [pc, #280]	; (800b394 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 800b27a:	a803      	add	r0, sp, #12
 800b27c:	f005 f856 	bl	801032c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b280:	6863      	ldr	r3, [r4, #4]
 800b282:	f104 070e 	add.w	r7, r4, #14
 800b286:	075e      	lsls	r6, r3, #29
 800b288:	d403      	bmi.n	800b292 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 800b28a:	4638      	mov	r0, r7
 800b28c:	4942      	ldr	r1, [pc, #264]	; (800b398 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 800b28e:	f7ff fea5 	bl	800afdc <strncpy.constprop.0.isra.0>
 800b292:	6863      	ldr	r3, [r4, #4]
 800b294:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 800b298:	069d      	lsls	r5, r3, #26
 800b29a:	d403      	bmi.n	800b2a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 800b29c:	4630      	mov	r0, r6
 800b29e:	493f      	ldr	r1, [pc, #252]	; (800b39c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 800b2a0:	f7ff fe9c 	bl	800afdc <strncpy.constprop.0.isra.0>
 800b2a4:	6863      	ldr	r3, [r4, #4]
 800b2a6:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 800b2aa:	0658      	lsls	r0, r3, #25
 800b2ac:	d403      	bmi.n	800b2b6 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 800b2ae:	4628      	mov	r0, r5
 800b2b0:	493b      	ldr	r1, [pc, #236]	; (800b3a0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 800b2b2:	f7ff fe93 	bl	800afdc <strncpy.constprop.0.isra.0>
 800b2b6:	6863      	ldr	r3, [r4, #4]
 800b2b8:	8922      	ldrh	r2, [r4, #8]
 800b2ba:	493a      	ldr	r1, [pc, #232]	; (800b3a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 800b2bc:	f003 0301 	and.w	r3, r3, #1
 800b2c0:	a803      	add	r0, sp, #12
 800b2c2:	f7ff fe97 	bl	800aff4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b2c6:	6863      	ldr	r3, [r4, #4]
 800b2c8:	8962      	ldrh	r2, [r4, #10]
 800b2ca:	4937      	ldr	r1, [pc, #220]	; (800b3a8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 800b2cc:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800b2d0:	a803      	add	r0, sp, #12
 800b2d2:	f7ff fe8f 	bl	800aff4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b2d6:	6863      	ldr	r3, [r4, #4]
 800b2d8:	463a      	mov	r2, r7
 800b2da:	4934      	ldr	r1, [pc, #208]	; (800b3ac <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 800b2dc:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800b2e0:	a803      	add	r0, sp, #12
 800b2e2:	f7ff feaf 	bl	800b044 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b2e6:	6863      	ldr	r3, [r4, #4]
 800b2e8:	4632      	mov	r2, r6
 800b2ea:	4931      	ldr	r1, [pc, #196]	; (800b3b0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 800b2ec:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800b2f0:	a803      	add	r0, sp, #12
 800b2f2:	f7ff fea7 	bl	800b044 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b2f6:	6863      	ldr	r3, [r4, #4]
 800b2f8:	462a      	mov	r2, r5
 800b2fa:	492e      	ldr	r1, [pc, #184]	; (800b3b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 800b2fc:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800b300:	a803      	add	r0, sp, #12
 800b302:	f7ff fe9f 	bl	800b044 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b306:	7b63      	ldrb	r3, [r4, #13]
 800b308:	6861      	ldr	r1, [r4, #4]
 800b30a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b30e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800b312:	42a2      	cmp	r2, r4
 800b314:	d221      	bcs.n	800b35a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800b316:	9803      	ldr	r0, [sp, #12]
 800b318:	0709      	lsls	r1, r1, #28
 800b31a:	4410      	add	r0, r2
 800b31c:	eba4 0402 	sub.w	r4, r4, r2
 800b320:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800b324:	d40b      	bmi.n	800b33e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800b326:	b95a      	cbnz	r2, 800b340 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 800b328:	9300      	str	r3, [sp, #0]
 800b32a:	4a23      	ldr	r2, [pc, #140]	; (800b3b8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 800b32c:	4b23      	ldr	r3, [pc, #140]	; (800b3bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b32e:	e00a      	b.n	800b346 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800b330:	6823      	ldr	r3, [r4, #0]
 800b332:	4601      	mov	r1, r0
 800b334:	681a      	ldr	r2, [r3, #0]
 800b336:	4618      	mov	r0, r3
 800b338:	68d2      	ldr	r2, [r2, #12]
 800b33a:	4790      	blx	r2
 800b33c:	e79a      	b.n	800b274 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800b33e:	b32a      	cbz	r2, 800b38c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x130>
 800b340:	9300      	str	r3, [sp, #0]
 800b342:	4a1f      	ldr	r2, [pc, #124]	; (800b3c0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800b344:	4b1d      	ldr	r3, [pc, #116]	; (800b3bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b346:	4621      	mov	r1, r4
 800b348:	f7fd ffd8 	bl	80092fc <snprintf>
 800b34c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b350:	4284      	cmp	r4, r0
 800b352:	bfa4      	itt	ge
 800b354:	181b      	addge	r3, r3, r0
 800b356:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b35a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b35e:	b17b      	cbz	r3, 800b380 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x124>
 800b360:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b364:	9b03      	ldr	r3, [sp, #12]
 800b366:	4413      	add	r3, r2
 800b368:	227d      	movs	r2, #125	; 0x7d
 800b36a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b36e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b372:	9903      	ldr	r1, [sp, #12]
 800b374:	54ca      	strb	r2, [r1, r3]
 800b376:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b37a:	3301      	adds	r3, #1
 800b37c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b380:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b384:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b386:	601a      	str	r2, [r3, #0]
 800b388:	b007      	add	sp, #28
 800b38a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b38c:	9300      	str	r3, [sp, #0]
 800b38e:	4a0d      	ldr	r2, [pc, #52]	; (800b3c4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 800b390:	4b0a      	ldr	r3, [pc, #40]	; (800b3bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b392:	e7d8      	b.n	800b346 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800b394:	08014625 	stmdaeq	r1, {r0, r2, r5, r9, sl, lr}
 800b398:	200007d4 	ldrdcs	r0, [r0], -r4
 800b39c:	20000650 	andcs	r0, r0, r0, asr r6
 800b3a0:	20000754 	andcs	r0, r0, r4, asr r7
 800b3a4:	08014637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, lr}
 800b3a8:	08014645 	stmdaeq	r1, {r0, r2, r6, r9, sl, lr}
 800b3ac:	08014620 	stmdaeq	r1, {r5, r9, sl, lr}
 800b3b0:	0801462d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, lr}
 800b3b4:	08014612 	stmdaeq	r1, {r1, r4, r9, sl, lr}
 800b3b8:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800b3bc:	080145fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, lr}
 800b3c0:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800b3c4:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}

0800b3c8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 800b3c8:	b513      	push	{r0, r1, r4, lr}
 800b3ca:	6804      	ldr	r4, [r0, #0]
 800b3cc:	b914      	cbnz	r4, 800b3d4 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b3ce:	601c      	str	r4, [r3, #0]
 800b3d0:	b002      	add	sp, #8
 800b3d2:	bd10      	pop	{r4, pc}
 800b3d4:	9300      	str	r3, [sp, #0]
 800b3d6:	4613      	mov	r3, r2
 800b3d8:	460a      	mov	r2, r1
 800b3da:	2100      	movs	r1, #0
 800b3dc:	f7ff ff3e 	bl	800b25c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 800b3e0:	e7f6      	b.n	800b3d0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b3e2 <OSCServerParams::Dump()>:
 800b3e2:	4770      	bx	lr

0800b3e4 <lo_pattern_match>:
 800b3e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3e6:	4605      	mov	r5, r0
 800b3e8:	460b      	mov	r3, r1
 800b3ea:	7819      	ldrb	r1, [r3, #0]
 800b3ec:	782a      	ldrb	r2, [r5, #0]
 800b3ee:	b919      	cbnz	r1, 800b3f8 <lo_pattern_match+0x14>
 800b3f0:	fab2 f082 	clz	r0, r2
 800b3f4:	0940      	lsrs	r0, r0, #5
 800b3f6:	e09f      	b.n	800b538 <lo_pattern_match+0x154>
 800b3f8:	b90a      	cbnz	r2, 800b3fe <lo_pattern_match+0x1a>
 800b3fa:	292a      	cmp	r1, #42	; 0x2a
 800b3fc:	d132      	bne.n	800b464 <lo_pattern_match+0x80>
 800b3fe:	295b      	cmp	r1, #91	; 0x5b
 800b400:	f103 0401 	add.w	r4, r3, #1
 800b404:	d03c      	beq.n	800b480 <lo_pattern_match+0x9c>
 800b406:	d806      	bhi.n	800b416 <lo_pattern_match+0x32>
 800b408:	292a      	cmp	r1, #42	; 0x2a
 800b40a:	d012      	beq.n	800b432 <lo_pattern_match+0x4e>
 800b40c:	293f      	cmp	r1, #63	; 0x3f
 800b40e:	d032      	beq.n	800b476 <lo_pattern_match+0x92>
 800b410:	4291      	cmp	r1, r2
 800b412:	d032      	beq.n	800b47a <lo_pattern_match+0x96>
 800b414:	e026      	b.n	800b464 <lo_pattern_match+0x80>
 800b416:	297b      	cmp	r1, #123	; 0x7b
 800b418:	d1fa      	bne.n	800b410 <lo_pattern_match+0x2c>
 800b41a:	7820      	ldrb	r0, [r4, #0]
 800b41c:	4626      	mov	r6, r4
 800b41e:	1c67      	adds	r7, r4, #1
 800b420:	2800      	cmp	r0, #0
 800b422:	f000 8089 	beq.w	800b538 <lo_pattern_match+0x154>
 800b426:	287d      	cmp	r0, #125	; 0x7d
 800b428:	d161      	bne.n	800b4ee <lo_pattern_match+0x10a>
 800b42a:	1c9c      	adds	r4, r3, #2
 800b42c:	4628      	mov	r0, r5
 800b42e:	785b      	ldrb	r3, [r3, #1]
 800b430:	e06d      	b.n	800b50e <lo_pattern_match+0x12a>
 800b432:	7823      	ldrb	r3, [r4, #0]
 800b434:	4626      	mov	r6, r4
 800b436:	2b2a      	cmp	r3, #42	; 0x2a
 800b438:	f104 0401 	add.w	r4, r4, #1
 800b43c:	d0f9      	beq.n	800b432 <lo_pattern_match+0x4e>
 800b43e:	b1c3      	cbz	r3, 800b472 <lo_pattern_match+0x8e>
 800b440:	2b3f      	cmp	r3, #63	; 0x3f
 800b442:	d00b      	beq.n	800b45c <lo_pattern_match+0x78>
 800b444:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 800b448:	2a5b      	cmp	r2, #91	; 0x5b
 800b44a:	d007      	beq.n	800b45c <lo_pattern_match+0x78>
 800b44c:	462a      	mov	r2, r5
 800b44e:	4615      	mov	r5, r2
 800b450:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b454:	2800      	cmp	r0, #0
 800b456:	d06f      	beq.n	800b538 <lo_pattern_match+0x154>
 800b458:	4283      	cmp	r3, r0
 800b45a:	d1f8      	bne.n	800b44e <lo_pattern_match+0x6a>
 800b45c:	4628      	mov	r0, r5
 800b45e:	7803      	ldrb	r3, [r0, #0]
 800b460:	3501      	adds	r5, #1
 800b462:	b90b      	cbnz	r3, 800b468 <lo_pattern_match+0x84>
 800b464:	2000      	movs	r0, #0
 800b466:	e067      	b.n	800b538 <lo_pattern_match+0x154>
 800b468:	4631      	mov	r1, r6
 800b46a:	f7ff ffbb 	bl	800b3e4 <lo_pattern_match>
 800b46e:	2800      	cmp	r0, #0
 800b470:	d0f4      	beq.n	800b45c <lo_pattern_match+0x78>
 800b472:	2001      	movs	r0, #1
 800b474:	e060      	b.n	800b538 <lo_pattern_match+0x154>
 800b476:	2a00      	cmp	r2, #0
 800b478:	d0f4      	beq.n	800b464 <lo_pattern_match+0x80>
 800b47a:	4623      	mov	r3, r4
 800b47c:	3501      	adds	r5, #1
 800b47e:	e7b4      	b.n	800b3ea <lo_pattern_match+0x6>
 800b480:	7859      	ldrb	r1, [r3, #1]
 800b482:	2921      	cmp	r1, #33	; 0x21
 800b484:	bf0a      	itet	eq
 800b486:	2601      	moveq	r6, #1
 800b488:	2600      	movne	r6, #0
 800b48a:	1c9c      	addeq	r4, r3, #2
 800b48c:	4621      	mov	r1, r4
 800b48e:	780b      	ldrb	r3, [r1, #0]
 800b490:	3401      	adds	r4, #1
 800b492:	b1c3      	cbz	r3, 800b4c6 <lo_pattern_match+0xe2>
 800b494:	7848      	ldrb	r0, [r1, #1]
 800b496:	2800      	cmp	r0, #0
 800b498:	d04e      	beq.n	800b538 <lo_pattern_match+0x154>
 800b49a:	282d      	cmp	r0, #45	; 0x2d
 800b49c:	d11c      	bne.n	800b4d8 <lo_pattern_match+0xf4>
 800b49e:	7888      	ldrb	r0, [r1, #2]
 800b4a0:	1c8c      	adds	r4, r1, #2
 800b4a2:	2800      	cmp	r0, #0
 800b4a4:	d048      	beq.n	800b538 <lo_pattern_match+0x154>
 800b4a6:	285d      	cmp	r0, #93	; 0x5d
 800b4a8:	d009      	beq.n	800b4be <lo_pattern_match+0xda>
 800b4aa:	429a      	cmp	r2, r3
 800b4ac:	d005      	beq.n	800b4ba <lo_pattern_match+0xd6>
 800b4ae:	4290      	cmp	r0, r2
 800b4b0:	d003      	beq.n	800b4ba <lo_pattern_match+0xd6>
 800b4b2:	429a      	cmp	r2, r3
 800b4b4:	d9ea      	bls.n	800b48c <lo_pattern_match+0xa8>
 800b4b6:	4290      	cmp	r0, r2
 800b4b8:	d9e8      	bls.n	800b48c <lo_pattern_match+0xa8>
 800b4ba:	2301      	movs	r3, #1
 800b4bc:	e003      	b.n	800b4c6 <lo_pattern_match+0xe2>
 800b4be:	429a      	cmp	r2, r3
 800b4c0:	bf34      	ite	cc
 800b4c2:	2300      	movcc	r3, #0
 800b4c4:	2301      	movcs	r3, #1
 800b4c6:	429e      	cmp	r6, r3
 800b4c8:	d0cc      	beq.n	800b464 <lo_pattern_match+0x80>
 800b4ca:	f814 0b01 	ldrb.w	r0, [r4], #1
 800b4ce:	2800      	cmp	r0, #0
 800b4d0:	d032      	beq.n	800b538 <lo_pattern_match+0x154>
 800b4d2:	285d      	cmp	r0, #93	; 0x5d
 800b4d4:	d1f9      	bne.n	800b4ca <lo_pattern_match+0xe6>
 800b4d6:	e7d0      	b.n	800b47a <lo_pattern_match+0x96>
 800b4d8:	285d      	cmp	r0, #93	; 0x5d
 800b4da:	d103      	bne.n	800b4e4 <lo_pattern_match+0x100>
 800b4dc:	1ad2      	subs	r2, r2, r3
 800b4de:	4253      	negs	r3, r2
 800b4e0:	4153      	adcs	r3, r2
 800b4e2:	e7f0      	b.n	800b4c6 <lo_pattern_match+0xe2>
 800b4e4:	4290      	cmp	r0, r2
 800b4e6:	d0e8      	beq.n	800b4ba <lo_pattern_match+0xd6>
 800b4e8:	429a      	cmp	r2, r3
 800b4ea:	d1cf      	bne.n	800b48c <lo_pattern_match+0xa8>
 800b4ec:	e7e5      	b.n	800b4ba <lo_pattern_match+0xd6>
 800b4ee:	463c      	mov	r4, r7
 800b4f0:	e793      	b.n	800b41a <lo_pattern_match+0x36>
 800b4f2:	2b2c      	cmp	r3, #44	; 0x2c
 800b4f4:	d10f      	bne.n	800b516 <lo_pattern_match+0x132>
 800b4f6:	4639      	mov	r1, r7
 800b4f8:	f7ff ff74 	bl	800b3e4 <lo_pattern_match>
 800b4fc:	2800      	cmp	r0, #0
 800b4fe:	d1b8      	bne.n	800b472 <lo_pattern_match+0x8e>
 800b500:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b504:	b1c3      	cbz	r3, 800b538 <lo_pattern_match+0x154>
 800b506:	462a      	mov	r2, r5
 800b508:	4610      	mov	r0, r2
 800b50a:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b50e:	2b00      	cmp	r3, #0
 800b510:	d1ef      	bne.n	800b4f2 <lo_pattern_match+0x10e>
 800b512:	4605      	mov	r5, r0
 800b514:	e7b1      	b.n	800b47a <lo_pattern_match+0x96>
 800b516:	2b7d      	cmp	r3, #125	; 0x7d
 800b518:	7802      	ldrb	r2, [r0, #0]
 800b51a:	d104      	bne.n	800b526 <lo_pattern_match+0x142>
 800b51c:	7823      	ldrb	r3, [r4, #0]
 800b51e:	431a      	orrs	r2, r3
 800b520:	d0a7      	beq.n	800b472 <lo_pattern_match+0x8e>
 800b522:	1e45      	subs	r5, r0, #1
 800b524:	e7a9      	b.n	800b47a <lo_pattern_match+0x96>
 800b526:	4293      	cmp	r3, r2
 800b528:	d107      	bne.n	800b53a <lo_pattern_match+0x156>
 800b52a:	1c42      	adds	r2, r0, #1
 800b52c:	7840      	ldrb	r0, [r0, #1]
 800b52e:	2800      	cmp	r0, #0
 800b530:	d1ea      	bne.n	800b508 <lo_pattern_match+0x124>
 800b532:	7873      	ldrb	r3, [r6, #1]
 800b534:	2b00      	cmp	r3, #0
 800b536:	d0e7      	beq.n	800b508 <lo_pattern_match+0x124>
 800b538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b53a:	4623      	mov	r3, r4
 800b53c:	781a      	ldrb	r2, [r3, #0]
 800b53e:	461c      	mov	r4, r3
 800b540:	2a2c      	cmp	r2, #44	; 0x2c
 800b542:	f103 0301 	add.w	r3, r3, #1
 800b546:	d004      	beq.n	800b552 <lo_pattern_match+0x16e>
 800b548:	2a7d      	cmp	r2, #125	; 0x7d
 800b54a:	d08b      	beq.n	800b464 <lo_pattern_match+0x80>
 800b54c:	2a00      	cmp	r2, #0
 800b54e:	d1f5      	bne.n	800b53c <lo_pattern_match+0x158>
 800b550:	e7d9      	b.n	800b506 <lo_pattern_match+0x122>
 800b552:	461c      	mov	r4, r3
 800b554:	e7d7      	b.n	800b506 <lo_pattern_match+0x122>

0800b556 <osc::string_validate(void*, unsigned int)>:
 800b556:	b510      	push	{r4, lr}
 800b558:	2200      	movs	r2, #0
 800b55a:	4604      	mov	r4, r0
 800b55c:	428a      	cmp	r2, r1
 800b55e:	d005      	beq.n	800b56c <osc::string_validate(void*, unsigned int)+0x16>
 800b560:	5ca3      	ldrb	r3, [r4, r2]
 800b562:	b933      	cbnz	r3, 800b572 <osc::string_validate(void*, unsigned int)+0x1c>
 800b564:	f022 0303 	bic.w	r3, r2, #3
 800b568:	1d18      	adds	r0, r3, #4
 800b56a:	d104      	bne.n	800b576 <osc::string_validate(void*, unsigned int)+0x20>
 800b56c:	f06f 0001 	mvn.w	r0, #1
 800b570:	e00b      	b.n	800b58a <osc::string_validate(void*, unsigned int)+0x34>
 800b572:	3201      	adds	r2, #1
 800b574:	e7f2      	b.n	800b55c <osc::string_validate(void*, unsigned int)+0x6>
 800b576:	4281      	cmp	r1, r0
 800b578:	d205      	bcs.n	800b586 <osc::string_validate(void*, unsigned int)+0x30>
 800b57a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b57e:	e004      	b.n	800b58a <osc::string_validate(void*, unsigned int)+0x34>
 800b580:	5ca3      	ldrb	r3, [r4, r2]
 800b582:	b91b      	cbnz	r3, 800b58c <osc::string_validate(void*, unsigned int)+0x36>
 800b584:	3201      	adds	r2, #1
 800b586:	4282      	cmp	r2, r0
 800b588:	d3fa      	bcc.n	800b580 <osc::string_validate(void*, unsigned int)+0x2a>
 800b58a:	bd10      	pop	{r4, pc}
 800b58c:	f06f 0002 	mvn.w	r0, #2
 800b590:	e7fb      	b.n	800b58a <osc::string_validate(void*, unsigned int)+0x34>

0800b592 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800b592:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b596:	2300      	movs	r3, #0
 800b598:	460d      	mov	r5, r1
 800b59a:	e9c0 1200 	strd	r1, r2, [r0]
 800b59e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b5a2:	7203      	strb	r3, [r0, #8]
 800b5a4:	6183      	str	r3, [r0, #24]
 800b5a6:	4604      	mov	r4, r0
 800b5a8:	4611      	mov	r1, r2
 800b5aa:	4628      	mov	r0, r5
 800b5ac:	4617      	mov	r7, r2
 800b5ae:	f7ff ffd2 	bl	800b556 <osc::string_validate(void*, unsigned int)>
 800b5b2:	f1b0 0800 	subs.w	r8, r0, #0
 800b5b6:	db25      	blt.n	800b604 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5b8:	eb05 0608 	add.w	r6, r5, r8
 800b5bc:	4630      	mov	r0, r6
 800b5be:	60e6      	str	r6, [r4, #12]
 800b5c0:	eba7 0108 	sub.w	r1, r7, r8
 800b5c4:	f7ff ffc7 	bl	800b556 <osc::string_validate(void*, unsigned int)>
 800b5c8:	2800      	cmp	r0, #0
 800b5ca:	db1b      	blt.n	800b604 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5cc:	f815 3008 	ldrb.w	r3, [r5, r8]
 800b5d0:	2b2c      	cmp	r3, #44	; 0x2c
 800b5d2:	d117      	bne.n	800b604 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5d4:	7873      	ldrb	r3, [r6, #1]
 800b5d6:	2b73      	cmp	r3, #115	; 0x73
 800b5d8:	d001      	beq.n	800b5de <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 800b5da:	2b62      	cmp	r3, #98	; 0x62
 800b5dc:	d101      	bne.n	800b5e2 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 800b5de:	78b3      	ldrb	r3, [r6, #2]
 800b5e0:	b983      	cbnz	r3, 800b604 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5e2:	3601      	adds	r6, #1
 800b5e4:	4632      	mov	r2, r6
 800b5e6:	60e6      	str	r6, [r4, #12]
 800b5e8:	4613      	mov	r3, r2
 800b5ea:	7819      	ldrb	r1, [r3, #0]
 800b5ec:	3201      	adds	r2, #1
 800b5ee:	2900      	cmp	r1, #0
 800b5f0:	d1fa      	bne.n	800b5e8 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800b5f2:	1b9b      	subs	r3, r3, r6
 800b5f4:	6123      	str	r3, [r4, #16]
 800b5f6:	2301      	movs	r3, #1
 800b5f8:	4440      	add	r0, r8
 800b5fa:	4405      	add	r5, r0
 800b5fc:	1a3f      	subs	r7, r7, r0
 800b5fe:	6165      	str	r5, [r4, #20]
 800b600:	61a7      	str	r7, [r4, #24]
 800b602:	7223      	strb	r3, [r4, #8]
 800b604:	4620      	mov	r0, r4
 800b606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b60a <OscSimpleMessage::GetFloat(unsigned int)>:
 800b60a:	b510      	push	{r4, lr}
 800b60c:	6984      	ldr	r4, [r0, #24]
 800b60e:	1c4b      	adds	r3, r1, #1
 800b610:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800b614:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800b618:	d309      	bcc.n	800b62e <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800b61a:	68c3      	ldr	r3, [r0, #12]
 800b61c:	5c5b      	ldrb	r3, [r3, r1]
 800b61e:	2b66      	cmp	r3, #102	; 0x66
 800b620:	d105      	bne.n	800b62e <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800b622:	6943      	ldr	r3, [r0, #20]
 800b624:	4413      	add	r3, r2
 800b626:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800b62a:	ba00      	rev	r0, r0
 800b62c:	bd10      	pop	{r4, pc}
 800b62e:	2000      	movs	r0, #0
 800b630:	e7fc      	b.n	800b62c <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800b632 <OscSimpleMessage::GetInt(unsigned int)>:
 800b632:	b510      	push	{r4, lr}
 800b634:	6984      	ldr	r4, [r0, #24]
 800b636:	1c4b      	adds	r3, r1, #1
 800b638:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800b63c:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800b640:	d309      	bcc.n	800b656 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800b642:	68c3      	ldr	r3, [r0, #12]
 800b644:	5c5b      	ldrb	r3, [r3, r1]
 800b646:	2b69      	cmp	r3, #105	; 0x69
 800b648:	d105      	bne.n	800b656 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800b64a:	6943      	ldr	r3, [r0, #20]
 800b64c:	4413      	add	r3, r2
 800b64e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800b652:	ba00      	rev	r0, r0
 800b654:	bd10      	pop	{r4, pc}
 800b656:	2000      	movs	r0, #0
 800b658:	e7fc      	b.n	800b654 <OscSimpleMessage::GetInt(unsigned int)+0x22>

0800b65a <OscSimpleMessage::GetBlob(unsigned int)>:
 800b65a:	b510      	push	{r4, lr}
 800b65c:	68cb      	ldr	r3, [r1, #12]
 800b65e:	781b      	ldrb	r3, [r3, #0]
 800b660:	2b62      	cmp	r3, #98	; 0x62
 800b662:	d10a      	bne.n	800b67a <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800b664:	694a      	ldr	r2, [r1, #20]
 800b666:	6989      	ldr	r1, [r1, #24]
 800b668:	6813      	ldr	r3, [r2, #0]
 800b66a:	ba1b      	rev	r3, r3
 800b66c:	1d1c      	adds	r4, r3, #4
 800b66e:	428c      	cmp	r4, r1
 800b670:	d803      	bhi.n	800b67a <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800b672:	3204      	adds	r2, #4
 800b674:	6002      	str	r2, [r0, #0]
 800b676:	6043      	str	r3, [r0, #4]
 800b678:	bd10      	pop	{r4, pc}
 800b67a:	2300      	movs	r3, #0
 800b67c:	6003      	str	r3, [r0, #0]
 800b67e:	e7fa      	b.n	800b676 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800b680 <osc::string_size(char const*)>:
 800b680:	4602      	mov	r2, r0
 800b682:	4613      	mov	r3, r2
 800b684:	7819      	ldrb	r1, [r3, #0]
 800b686:	3201      	adds	r2, #1
 800b688:	2900      	cmp	r1, #0
 800b68a:	d1fa      	bne.n	800b682 <osc::string_size(char const*)+0x2>
 800b68c:	1a18      	subs	r0, r3, r0
 800b68e:	f020 0003 	bic.w	r0, r0, #3
 800b692:	3004      	adds	r0, #4
 800b694:	4770      	bx	lr
	...

0800b698 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 800b698:	b570      	push	{r4, r5, r6, lr}
 800b69a:	2400      	movs	r4, #0
 800b69c:	480a      	ldr	r0, [pc, #40]	; (800b6c8 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 800b69e:	1f16      	subs	r6, r2, #4
 800b6a0:	1985      	adds	r5, r0, r6
 800b6a2:	5584      	strb	r4, [r0, r6]
 800b6a4:	706c      	strb	r4, [r5, #1]
 800b6a6:	70ac      	strb	r4, [r5, #2]
 800b6a8:	70ec      	strb	r4, [r5, #3]
 800b6aa:	4604      	mov	r4, r0
 800b6ac:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b6b0:	f800 5b01 	strb.w	r5, [r0], #1
 800b6b4:	2d00      	cmp	r5, #0
 800b6b6:	d1f9      	bne.n	800b6ac <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 800b6b8:	212c      	movs	r1, #44	; 0x2c
 800b6ba:	54a1      	strb	r1, [r4, r2]
 800b6bc:	4422      	add	r2, r4
 800b6be:	7053      	strb	r3, [r2, #1]
 800b6c0:	7095      	strb	r5, [r2, #2]
 800b6c2:	70d5      	strb	r5, [r2, #3]
 800b6c4:	bd70      	pop	{r4, r5, r6, pc}
 800b6c6:	bf00      	nop
 800b6c8:	20000a58 	andcs	r0, r0, r8, asr sl

0800b6cc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 800b6cc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b6d0:	4605      	mov	r5, r0
 800b6d2:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800b6d6:	460e      	mov	r6, r1
 800b6d8:	4617      	mov	r7, r2
 800b6da:	4698      	mov	r8, r3
 800b6dc:	f1ba 0f00 	cmp.w	sl, #0
 800b6e0:	d112      	bne.n	800b708 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800b6e2:	4648      	mov	r0, r9
 800b6e4:	f7ff ffcc 	bl	800b680 <osc::string_size(char const*)>
 800b6e8:	4604      	mov	r4, r0
 800b6ea:	4602      	mov	r2, r0
 800b6ec:	4653      	mov	r3, sl
 800b6ee:	4649      	mov	r1, r9
 800b6f0:	4628      	mov	r0, r5
 800b6f2:	3404      	adds	r4, #4
 800b6f4:	f7ff ffd0 	bl	800b698 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b6f8:	463b      	mov	r3, r7
 800b6fa:	4905      	ldr	r1, [pc, #20]	; (800b710 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 800b6fc:	f8cd 8000 	str.w	r8, [sp]
 800b700:	b2a2      	uxth	r2, r4
 800b702:	b2f0      	uxtb	r0, r6
 800b704:	f002 fbb6 	bl	800de74 <udp_send>
 800b708:	4628      	mov	r0, r5
 800b70a:	b002      	add	sp, #8
 800b70c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b710:	20000a58 	andcs	r0, r0, r8, asr sl

0800b714 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800b714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b718:	b085      	sub	sp, #20
 800b71a:	460f      	mov	r7, r1
 800b71c:	4699      	mov	r9, r3
 800b71e:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800b722:	4606      	mov	r6, r0
 800b724:	4690      	mov	r8, r2
 800b726:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800b72a:	b35b      	cbz	r3, 800b784 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800b72c:	781b      	ldrb	r3, [r3, #0]
 800b72e:	2b73      	cmp	r3, #115	; 0x73
 800b730:	d128      	bne.n	800b784 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800b732:	4608      	mov	r0, r1
 800b734:	9303      	str	r3, [sp, #12]
 800b736:	f7ff ffa3 	bl	800b680 <osc::string_size(char const*)>
 800b73a:	4604      	mov	r4, r0
 800b73c:	4650      	mov	r0, sl
 800b73e:	f7ff ff9f 	bl	800b680 <osc::string_size(char const*)>
 800b742:	4622      	mov	r2, r4
 800b744:	1825      	adds	r5, r4, r0
 800b746:	9b03      	ldr	r3, [sp, #12]
 800b748:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b74a:	4630      	mov	r0, r6
 800b74c:	f7ff ffa4 	bl	800b698 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b750:	2200      	movs	r2, #0
 800b752:	4b0e      	ldr	r3, [pc, #56]	; (800b78c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800b754:	3403      	adds	r4, #3
 800b756:	1959      	adds	r1, r3, r5
 800b758:	555a      	strb	r2, [r3, r5]
 800b75a:	f105 0b04 	add.w	fp, r5, #4
 800b75e:	704a      	strb	r2, [r1, #1]
 800b760:	708a      	strb	r2, [r1, #2]
 800b762:	70ca      	strb	r2, [r1, #3]
 800b764:	4423      	add	r3, r4
 800b766:	f81a 2b01 	ldrb.w	r2, [sl], #1
 800b76a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800b76e:	2a00      	cmp	r2, #0
 800b770:	d1f9      	bne.n	800b766 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800b772:	4643      	mov	r3, r8
 800b774:	4905      	ldr	r1, [pc, #20]	; (800b78c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800b776:	f8cd 9000 	str.w	r9, [sp]
 800b77a:	fa1f f28b 	uxth.w	r2, fp
 800b77e:	b2f8      	uxtb	r0, r7
 800b780:	f002 fb78 	bl	800de74 <udp_send>
 800b784:	4630      	mov	r0, r6
 800b786:	b005      	add	sp, #20
 800b788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b78c:	20000a58 	andcs	r0, r0, r8, asr sl

0800b790 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>:
 800b790:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b794:	4698      	mov	r8, r3
 800b796:	e9dd 930a 	ldrd	r9, r3, [sp, #40]	; 0x28
 800b79a:	4605      	mov	r5, r0
 800b79c:	460e      	mov	r6, r1
 800b79e:	4617      	mov	r7, r2
 800b7a0:	b1db      	cbz	r3, 800b7da <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800b7a2:	f893 a000 	ldrb.w	sl, [r3]
 800b7a6:	f1ba 0f69 	cmp.w	sl, #105	; 0x69
 800b7aa:	d116      	bne.n	800b7da <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800b7ac:	4648      	mov	r0, r9
 800b7ae:	f7ff ff67 	bl	800b680 <osc::string_size(char const*)>
 800b7b2:	4604      	mov	r4, r0
 800b7b4:	4602      	mov	r2, r0
 800b7b6:	4653      	mov	r3, sl
 800b7b8:	4649      	mov	r1, r9
 800b7ba:	4628      	mov	r0, r5
 800b7bc:	f7ff ff6c 	bl	800b698 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b7c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b7c2:	4908      	ldr	r1, [pc, #32]	; (800b7e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x54>)
 800b7c4:	ba1b      	rev	r3, r3
 800b7c6:	190a      	adds	r2, r1, r4
 800b7c8:	3408      	adds	r4, #8
 800b7ca:	6053      	str	r3, [r2, #4]
 800b7cc:	b2f0      	uxtb	r0, r6
 800b7ce:	463b      	mov	r3, r7
 800b7d0:	f8cd 8000 	str.w	r8, [sp]
 800b7d4:	b2a2      	uxth	r2, r4
 800b7d6:	f002 fb4d 	bl	800de74 <udp_send>
 800b7da:	4628      	mov	r0, r5
 800b7dc:	b002      	add	sp, #8
 800b7de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b7e2:	bf00      	nop
 800b7e4:	20000a58 	andcs	r0, r0, r8, asr sl

0800b7e8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800b7e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b7ea:	4604      	mov	r4, r0
 800b7ec:	460e      	mov	r6, r1
 800b7ee:	4611      	mov	r1, r2
 800b7f0:	4617      	mov	r7, r2
 800b7f2:	461d      	mov	r5, r3
 800b7f4:	f000 fdb4 	bl	800c360 <PixelConfiguration::Validate(unsigned int&)>
 800b7f8:	7d62      	ldrb	r2, [r4, #21]
 800b7fa:	b94a      	cbnz	r2, 800b810 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800b7fc:	6823      	ldr	r3, [r4, #0]
 800b7fe:	b11b      	cbz	r3, 800b808 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800b800:	3b0b      	subs	r3, #11
 800b802:	2b01      	cmp	r3, #1
 800b804:	bf88      	it	hi
 800b806:	6022      	strhi	r2, [r4, #0]
 800b808:	4639      	mov	r1, r7
 800b80a:	4620      	mov	r0, r4
 800b80c:	f000 fda8 	bl	800c360 <PixelConfiguration::Validate(unsigned int&)>
 800b810:	6823      	ldr	r3, [r4, #0]
 800b812:	2b07      	cmp	r3, #7
 800b814:	bf15      	itete	ne
 800b816:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800b81a:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800b81e:	23aa      	movne	r3, #170	; 0xaa
 800b820:	2380      	moveq	r3, #128	; 0x80
 800b822:	bf14      	ite	ne
 800b824:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800b828:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800b82c:	e9c5 3100 	strd	r3, r1, [r5]
 800b830:	6a21      	ldr	r1, [r4, #32]
 800b832:	60aa      	str	r2, [r5, #8]
 800b834:	6862      	ldr	r2, [r4, #4]
 800b836:	b109      	cbz	r1, 800b83c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800b838:	4291      	cmp	r1, r2
 800b83a:	d900      	bls.n	800b83e <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800b83c:	6222      	str	r2, [r4, #32]
 800b83e:	6a21      	ldr	r1, [r4, #32]
 800b840:	69e0      	ldr	r0, [r4, #28]
 800b842:	fbb2 f2f1 	udiv	r2, r2, r1
 800b846:	3301      	adds	r3, #1
 800b848:	6262      	str	r2, [r4, #36]	; 0x24
 800b84a:	42b0      	cmp	r0, r6
 800b84c:	fbb2 f2f3 	udiv	r2, r2, r3
 800b850:	bf28      	it	cs
 800b852:	4630      	movcs	r0, r6
 800b854:	1c53      	adds	r3, r2, #1
 800b856:	2e01      	cmp	r6, #1
 800b858:	62a3      	str	r3, [r4, #40]	; 0x28
 800b85a:	bf1c      	itt	ne
 800b85c:	4343      	mulne	r3, r0
 800b85e:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800b862:	61e0      	str	r0, [r4, #28]
 800b864:	60ea      	str	r2, [r5, #12]
 800b866:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b868 <PixelDmxConfiguration::Print()>:
 800b868:	b510      	push	{r4, lr}
 800b86a:	4604      	mov	r4, r0
 800b86c:	f000 fe0e 	bl	800c48c <PixelConfiguration::Print()>
 800b870:	4806      	ldr	r0, [pc, #24]	; (800b88c <PixelDmxConfiguration::Print()+0x24>)
 800b872:	f7fd fd33 	bl	80092dc <printf>
 800b876:	69e1      	ldr	r1, [r4, #28]
 800b878:	4805      	ldr	r0, [pc, #20]	; (800b890 <PixelDmxConfiguration::Print()+0x28>)
 800b87a:	f7fd fd2f 	bl	80092dc <printf>
 800b87e:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800b882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b886:	4803      	ldr	r0, [pc, #12]	; (800b894 <PixelDmxConfiguration::Print()+0x2c>)
 800b888:	f7fd bd28 	b.w	80092dc <printf>
 800b88c:	08014653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, lr}
 800b890:	0801466c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, lr}
 800b894:	0801467b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, lr}

0800b898 <WS28xxDmx::GetDmxStartAddress()>:
 800b898:	f8b0 0048 	ldrh.w	r0, [r0, #72]	; 0x48
 800b89c:	4770      	bx	lr

0800b89e <WS28xxDmx::GetDmxFootprint()>:
 800b89e:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800b8a2:	4770      	bx	lr

0800b8a4 <WS28xxDmx::~WS28xxDmx()>:
 800b8a4:	b538      	push	{r3, r4, r5, lr}
 800b8a6:	4b06      	ldr	r3, [pc, #24]	; (800b8c0 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800b8a8:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800b8aa:	4604      	mov	r4, r0
 800b8ac:	6003      	str	r3, [r0, #0]
 800b8ae:	b12d      	cbz	r5, 800b8bc <WS28xxDmx::~WS28xxDmx()+0x18>
 800b8b0:	4628      	mov	r0, r5
 800b8b2:	f001 ff03 	bl	800d6bc <WS28xx::~WS28xx()>
 800b8b6:	4628      	mov	r0, r5
 800b8b8:	f005 fb64 	bl	8010f84 <operator delete(void*)>
 800b8bc:	4620      	mov	r0, r4
 800b8be:	bd38      	pop	{r3, r4, r5, pc}
 800b8c0:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}

0800b8c4 <WS28xxDmx::~WS28xxDmx()>:
 800b8c4:	b510      	push	{r4, lr}
 800b8c6:	4604      	mov	r4, r0
 800b8c8:	f7ff ffec 	bl	800b8a4 <WS28xxDmx::~WS28xxDmx()>
 800b8cc:	4620      	mov	r0, r4
 800b8ce:	f005 fb59 	bl	8010f84 <operator delete(void*)>
 800b8d2:	4620      	mov	r0, r4
 800b8d4:	bd10      	pop	{r4, pc}

0800b8d6 <WS28xxDmx::Blackout(bool)>:
 800b8d6:	b538      	push	{r3, r4, r5, lr}
 800b8d8:	4605      	mov	r5, r0
 800b8da:	460c      	mov	r4, r1
 800b8dc:	f880 1059 	strb.w	r1, [r0, #89]	; 0x59
 800b8e0:	f007 f83a 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800b8e4:	2800      	cmp	r0, #0
 800b8e6:	d1fb      	bne.n	800b8e0 <WS28xxDmx::Blackout(bool)+0xa>
 800b8e8:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 800b8ea:	b11c      	cbz	r4, 800b8f4 <WS28xxDmx::Blackout(bool)+0x1e>
 800b8ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b8f0:	f001 bf62 	b.w	800d7b8 <WS28xx::Blackout()>
 800b8f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b8f8:	f001 bf42 	b.w	800d780 <WS28xx::Update()>

0800b8fc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800b8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b900:	b087      	sub	sp, #28
 800b902:	4607      	mov	r7, r0
 800b904:	4692      	mov	sl, r2
 800b906:	9104      	str	r1, [sp, #16]
 800b908:	9303      	str	r3, [sp, #12]
 800b90a:	f007 f825 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800b90e:	2800      	cmp	r0, #0
 800b910:	d171      	bne.n	800b9f6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b912:	9b04      	ldr	r3, [sp, #16]
 800b914:	9c03      	ldr	r4, [sp, #12]
 800b916:	f003 0103 	and.w	r1, r3, #3
 800b91a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b91c:	2902      	cmp	r1, #2
 800b91e:	fbb4 f6f3 	udiv	r6, r4, r3
 800b922:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b924:	d026      	beq.n	800b974 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x78>
 800b926:	2903      	cmp	r1, #3
 800b928:	d02b      	beq.n	800b982 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800b92a:	2901      	cmp	r1, #1
 800b92c:	6b7d      	ldr	r5, [r7, #52]	; 0x34
 800b92e:	d022      	beq.n	800b976 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800b930:	4296      	cmp	r6, r2
 800b932:	bf28      	it	cs
 800b934:	4616      	movcs	r6, r2
 800b936:	4295      	cmp	r5, r2
 800b938:	d925      	bls.n	800b986 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800b93a:	4605      	mov	r5, r0
 800b93c:	8e3c      	ldrh	r4, [r7, #48]	; 0x30
 800b93e:	3c01      	subs	r4, #1
 800b940:	f8d7 9024 	ldr.w	r9, [r7, #36]	; 0x24
 800b944:	2b03      	cmp	r3, #3
 800b946:	fb09 f805 	mul.w	r8, r9, r5
 800b94a:	4454      	add	r4, sl
 800b94c:	eb08 0b09 	add.w	fp, r8, r9
 800b950:	d035      	beq.n	800b9be <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800b952:	42ae      	cmp	r6, r5
 800b954:	d935      	bls.n	800b9c2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b956:	9a03      	ldr	r2, [sp, #12]
 800b958:	eba4 030a 	sub.w	r3, r4, sl
 800b95c:	429a      	cmp	r2, r3
 800b95e:	d930      	bls.n	800b9c2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b960:	4641      	mov	r1, r8
 800b962:	f894 f000 	pld	[r4]
 800b966:	458b      	cmp	fp, r1
 800b968:	d138      	bne.n	800b9dc <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xe0>
 800b96a:	3501      	adds	r5, #1
 800b96c:	44c8      	add	r8, r9
 800b96e:	44cb      	add	fp, r9
 800b970:	3404      	adds	r4, #4
 800b972:	e7ee      	b.n	800b952 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x56>
 800b974:	6bbd      	ldr	r5, [r7, #56]	; 0x38
 800b976:	442e      	add	r6, r5
 800b978:	4296      	cmp	r6, r2
 800b97a:	bf28      	it	cs
 800b97c:	4616      	movcs	r6, r2
 800b97e:	4604      	mov	r4, r0
 800b980:	e7de      	b.n	800b940 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800b982:	6bfd      	ldr	r5, [r7, #60]	; 0x3c
 800b984:	e7f7      	b.n	800b976 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800b986:	4605      	mov	r5, r0
 800b988:	4604      	mov	r4, r0
 800b98a:	e7d9      	b.n	800b940 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800b98c:	78a2      	ldrb	r2, [r4, #2]
 800b98e:	7863      	ldrb	r3, [r4, #1]
 800b990:	9200      	str	r2, [sp, #0]
 800b992:	7822      	ldrb	r2, [r4, #0]
 800b994:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b996:	9105      	str	r1, [sp, #20]
 800b998:	f001 f950 	bl	800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800b99c:	9905      	ldr	r1, [sp, #20]
 800b99e:	3101      	adds	r1, #1
 800b9a0:	e007      	b.n	800b9b2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xb6>
 800b9a2:	9a03      	ldr	r2, [sp, #12]
 800b9a4:	eba4 030a 	sub.w	r3, r4, sl
 800b9a8:	429a      	cmp	r2, r3
 800b9aa:	d90a      	bls.n	800b9c2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b9ac:	4641      	mov	r1, r8
 800b9ae:	f894 f000 	pld	[r4]
 800b9b2:	458b      	cmp	fp, r1
 800b9b4:	d1ea      	bne.n	800b98c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800b9b6:	3501      	adds	r5, #1
 800b9b8:	44c8      	add	r8, r9
 800b9ba:	44cb      	add	fp, r9
 800b9bc:	3403      	adds	r4, #3
 800b9be:	42ae      	cmp	r6, r5
 800b9c0:	d8ef      	bhi.n	800b9a2 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa6>
 800b9c2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b9c4:	9a04      	ldr	r2, [sp, #16]
 800b9c6:	4293      	cmp	r3, r2
 800b9c8:	d115      	bne.n	800b9f6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b9ca:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 800b9ce:	b993      	cbnz	r3, 800b9f6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b9d0:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b9d2:	b007      	add	sp, #28
 800b9d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9d8:	f001 bed2 	b.w	800d780 <WS28xx::Update()>
 800b9dc:	78e2      	ldrb	r2, [r4, #3]
 800b9de:	7863      	ldrb	r3, [r4, #1]
 800b9e0:	9201      	str	r2, [sp, #4]
 800b9e2:	78a2      	ldrb	r2, [r4, #2]
 800b9e4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b9e6:	9200      	str	r2, [sp, #0]
 800b9e8:	7822      	ldrb	r2, [r4, #0]
 800b9ea:	9105      	str	r1, [sp, #20]
 800b9ec:	f001 fd58 	bl	800d4a0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800b9f0:	9905      	ldr	r1, [sp, #20]
 800b9f2:	3101      	adds	r1, #1
 800b9f4:	e7b7      	b.n	800b966 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800b9f6:	b007      	add	sp, #28
 800b9f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b9fc <WS28xxDmx::FullOn()>:
 800b9fc:	b510      	push	{r4, lr}
 800b9fe:	4604      	mov	r4, r0
 800ba00:	f006 ffaa 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800ba04:	2800      	cmp	r0, #0
 800ba06:	d1fb      	bne.n	800ba00 <WS28xxDmx::FullOn()+0x4>
 800ba08:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ba0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba0e:	f001 bf1a 	b.w	800d846 <WS28xx::FullOn()>

0800ba12 <WS28xxDmx::Print()>:
 800ba12:	3004      	adds	r0, #4
 800ba14:	f7ff bf28 	b.w	800b868 <PixelDmxConfiguration::Print()>

0800ba18 <WS28xxDmx::Start(unsigned int)>:
 800ba18:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800ba1c:	b93b      	cbnz	r3, 800ba2e <WS28xxDmx::Start(unsigned int)+0x16>
 800ba1e:	2301      	movs	r3, #1
 800ba20:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800ba24:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ba26:	b110      	cbz	r0, 800ba2e <WS28xxDmx::Start(unsigned int)+0x16>
 800ba28:	6803      	ldr	r3, [r0, #0]
 800ba2a:	689b      	ldr	r3, [r3, #8]
 800ba2c:	4718      	bx	r3
 800ba2e:	4770      	bx	lr

0800ba30 <WS28xxDmx::Stop(unsigned int)>:
 800ba30:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800ba34:	b13b      	cbz	r3, 800ba46 <WS28xxDmx::Stop(unsigned int)+0x16>
 800ba36:	2300      	movs	r3, #0
 800ba38:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800ba3c:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ba3e:	b110      	cbz	r0, 800ba46 <WS28xxDmx::Stop(unsigned int)+0x16>
 800ba40:	6803      	ldr	r3, [r0, #0]
 800ba42:	68db      	ldr	r3, [r3, #12]
 800ba44:	4718      	bx	r3
 800ba46:	4770      	bx	lr

0800ba48 <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800ba48:	f8b0 2048 	ldrh.w	r2, [r0, #72]	; 0x48
 800ba4c:	b508      	push	{r3, lr}
 800ba4e:	428a      	cmp	r2, r1
 800ba50:	d101      	bne.n	800ba56 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xe>
 800ba52:	2001      	movs	r0, #1
 800ba54:	bd08      	pop	{r3, pc}
 800ba56:	f8b0 204a 	ldrh.w	r2, [r0, #74]	; 0x4a
 800ba5a:	440a      	add	r2, r1
 800ba5c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800ba60:	dc0c      	bgt.n	800ba7c <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800ba62:	1e4a      	subs	r2, r1, #1
 800ba64:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800ba68:	d208      	bcs.n	800ba7c <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800ba6a:	f8a0 1048 	strh.w	r1, [r0, #72]	; 0x48
 800ba6e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ba70:	2800      	cmp	r0, #0
 800ba72:	d0ee      	beq.n	800ba52 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800ba74:	6803      	ldr	r3, [r0, #0]
 800ba76:	69db      	ldr	r3, [r3, #28]
 800ba78:	4798      	blx	r3
 800ba7a:	e7ea      	b.n	800ba52 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800ba7c:	2000      	movs	r0, #0
 800ba7e:	e7e9      	b.n	800ba54 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>

0800ba80 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800ba80:	4603      	mov	r3, r0
 800ba82:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800ba86:	4288      	cmp	r0, r1
 800ba88:	f04f 0000 	mov.w	r0, #0
 800ba8c:	d30f      	bcc.n	800baae <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2e>
 800ba8e:	7090      	strb	r0, [r2, #2]
 800ba90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ba92:	fbb1 f0f3 	udiv	r0, r1, r3
 800ba96:	fb03 1110 	mls	r1, r3, r0, r1
 800ba9a:	2903      	cmp	r1, #3
 800ba9c:	d80e      	bhi.n	800babc <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3c>
 800ba9e:	e8df f001 	tbb	[pc, r1]
 800baa2:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800baa6:	f240 2305 	movw	r3, #517	; 0x205
 800baaa:	2001      	movs	r0, #1
 800baac:	8013      	strh	r3, [r2, #0]
 800baae:	4770      	bx	lr
 800bab0:	f240 2306 	movw	r3, #518	; 0x206
 800bab4:	e7f9      	b.n	800baaa <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800bab6:	f240 2307 	movw	r3, #519	; 0x207
 800baba:	e7f6      	b.n	800baaa <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800babc:	f240 2312 	movw	r3, #530	; 0x212
 800bac0:	e7f3      	b.n	800baaa <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
	...

0800bac4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800bac4:	b570      	push	{r4, r5, r6, lr}
 800bac6:	4605      	mov	r5, r0
 800bac8:	460e      	mov	r6, r1
 800baca:	4b19      	ldr	r3, [pc, #100]	; (800bb30 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x6c>)
 800bacc:	4604      	mov	r4, r0
 800bace:	f845 3b04 	str.w	r3, [r5], #4
 800bad2:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800bad4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800bad6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800bad8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800bada:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800bade:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800bae2:	2300      	movs	r3, #0
 800bae4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800bae8:	6563      	str	r3, [r4, #84]	; 0x54
 800baea:	f8a4 3058 	strh.w	r3, [r4, #88]	; 0x58
 800baee:	4b11      	ldr	r3, [pc, #68]	; (800bb34 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x70>)
 800baf0:	1d26      	adds	r6, r4, #4
 800baf2:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800baf6:	2101      	movs	r1, #1
 800baf8:	4630      	mov	r0, r6
 800bafa:	601c      	str	r4, [r3, #0]
 800bafc:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800bb00:	f7ff fe72 	bl	800b7e8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800bb04:	2028      	movs	r0, #40	; 0x28
 800bb06:	f005 fa41 	bl	8010f8c <operator new(unsigned int)>
 800bb0a:	4605      	mov	r5, r0
 800bb0c:	4631      	mov	r1, r6
 800bb0e:	f001 fdf3 	bl	800d6f8 <WS28xx::WS28xx(PixelConfiguration&)>
 800bb12:	4628      	mov	r0, r5
 800bb14:	64e5      	str	r5, [r4, #76]	; 0x4c
 800bb16:	f001 fe4f 	bl	800d7b8 <WS28xx::Blackout()>
 800bb1a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bb1c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bb1e:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800bb22:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bb24:	4620      	mov	r0, r4
 800bb26:	4353      	muls	r3, r2
 800bb28:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800bb2c:	bd70      	pop	{r4, r5, r6, pc}
 800bb2e:	bf00      	nop
 800bb30:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}
 800bb34:	20000c58 	andcs	r0, r0, r8, asr ip

0800bb38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800bb38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb3a:	88c6      	ldrh	r6, [r0, #6]
 800bb3c:	8885      	ldrh	r5, [r0, #4]
 800bb3e:	42ae      	cmp	r6, r5
 800bb40:	d216      	bcs.n	800bb70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800bb42:	4604      	mov	r4, r0
 800bb44:	6800      	ldr	r0, [r0, #0]
 800bb46:	1bad      	subs	r5, r5, r6
 800bb48:	4430      	add	r0, r6
 800bb4a:	7a26      	ldrb	r6, [r4, #8]
 800bb4c:	b923      	cbnz	r3, 800bb58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800bb4e:	b926      	cbnz	r6, 800bb5a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800bb50:	9200      	str	r2, [sp, #0]
 800bb52:	460b      	mov	r3, r1
 800bb54:	4a09      	ldr	r2, [pc, #36]	; (800bb7c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800bb56:	e003      	b.n	800bb60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800bb58:	b166      	cbz	r6, 800bb74 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800bb5a:	460b      	mov	r3, r1
 800bb5c:	9200      	str	r2, [sp, #0]
 800bb5e:	4a08      	ldr	r2, [pc, #32]	; (800bb80 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800bb60:	4629      	mov	r1, r5
 800bb62:	f7fd fbcb 	bl	80092fc <snprintf>
 800bb66:	4285      	cmp	r5, r0
 800bb68:	bfa2      	ittt	ge
 800bb6a:	88e3      	ldrhge	r3, [r4, #6]
 800bb6c:	181b      	addge	r3, r3, r0
 800bb6e:	80e3      	strhge	r3, [r4, #6]
 800bb70:	b002      	add	sp, #8
 800bb72:	bd70      	pop	{r4, r5, r6, pc}
 800bb74:	9200      	str	r2, [sp, #0]
 800bb76:	460b      	mov	r3, r1
 800bb78:	4a02      	ldr	r2, [pc, #8]	; (800bb84 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bb7a:	e7f1      	b.n	800bb60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800bb7c:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800bb80:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800bb84:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}

0800bb88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800bb88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb8a:	88c6      	ldrh	r6, [r0, #6]
 800bb8c:	8885      	ldrh	r5, [r0, #4]
 800bb8e:	42ae      	cmp	r6, r5
 800bb90:	d216      	bcs.n	800bbc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800bb92:	4604      	mov	r4, r0
 800bb94:	6800      	ldr	r0, [r0, #0]
 800bb96:	1bad      	subs	r5, r5, r6
 800bb98:	4430      	add	r0, r6
 800bb9a:	7a26      	ldrb	r6, [r4, #8]
 800bb9c:	b923      	cbnz	r3, 800bba8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800bb9e:	b926      	cbnz	r6, 800bbaa <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800bba0:	9200      	str	r2, [sp, #0]
 800bba2:	460b      	mov	r3, r1
 800bba4:	4a09      	ldr	r2, [pc, #36]	; (800bbcc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800bba6:	e003      	b.n	800bbb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bba8:	b166      	cbz	r6, 800bbc4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800bbaa:	460b      	mov	r3, r1
 800bbac:	9200      	str	r2, [sp, #0]
 800bbae:	4a08      	ldr	r2, [pc, #32]	; (800bbd0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800bbb0:	4629      	mov	r1, r5
 800bbb2:	f7fd fba3 	bl	80092fc <snprintf>
 800bbb6:	4285      	cmp	r5, r0
 800bbb8:	bfa2      	ittt	ge
 800bbba:	88e3      	ldrhge	r3, [r4, #6]
 800bbbc:	181b      	addge	r3, r3, r0
 800bbbe:	80e3      	strhge	r3, [r4, #6]
 800bbc0:	b002      	add	sp, #8
 800bbc2:	bd70      	pop	{r4, r5, r6, pc}
 800bbc4:	9200      	str	r2, [sp, #0]
 800bbc6:	460b      	mov	r3, r1
 800bbc8:	4a02      	ldr	r2, [pc, #8]	; (800bbd4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bbca:	e7f1      	b.n	800bbb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bbcc:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800bbd0:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800bbd4:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}

0800bbd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800bbd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbda:	88c6      	ldrh	r6, [r0, #6]
 800bbdc:	8885      	ldrh	r5, [r0, #4]
 800bbde:	42ae      	cmp	r6, r5
 800bbe0:	d216      	bcs.n	800bc10 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800bbe2:	4604      	mov	r4, r0
 800bbe4:	6800      	ldr	r0, [r0, #0]
 800bbe6:	1bad      	subs	r5, r5, r6
 800bbe8:	4430      	add	r0, r6
 800bbea:	7a26      	ldrb	r6, [r4, #8]
 800bbec:	b923      	cbnz	r3, 800bbf8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800bbee:	b926      	cbnz	r6, 800bbfa <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800bbf0:	9200      	str	r2, [sp, #0]
 800bbf2:	460b      	mov	r3, r1
 800bbf4:	4a09      	ldr	r2, [pc, #36]	; (800bc1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800bbf6:	e003      	b.n	800bc00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800bbf8:	b166      	cbz	r6, 800bc14 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800bbfa:	460b      	mov	r3, r1
 800bbfc:	9200      	str	r2, [sp, #0]
 800bbfe:	4a08      	ldr	r2, [pc, #32]	; (800bc20 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800bc00:	4629      	mov	r1, r5
 800bc02:	f7fd fb7b 	bl	80092fc <snprintf>
 800bc06:	4285      	cmp	r5, r0
 800bc08:	bfa2      	ittt	ge
 800bc0a:	88e3      	ldrhge	r3, [r4, #6]
 800bc0c:	181b      	addge	r3, r3, r0
 800bc0e:	80e3      	strhge	r3, [r4, #6]
 800bc10:	b002      	add	sp, #8
 800bc12:	bd70      	pop	{r4, r5, r6, pc}
 800bc14:	9200      	str	r2, [sp, #0]
 800bc16:	460b      	mov	r3, r1
 800bc18:	4a02      	ldr	r2, [pc, #8]	; (800bc24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bc1a:	e7f1      	b.n	800bc00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800bc1c:	08013794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, sp}
 800bc20:	08013789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip, sp}
 800bc24:	08013795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp}

0800bc28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800bc28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bc2c:	4699      	mov	r9, r3
 800bc2e:	8885      	ldrh	r5, [r0, #4]
 800bc30:	88c3      	ldrh	r3, [r0, #6]
 800bc32:	4604      	mov	r4, r0
 800bc34:	42ab      	cmp	r3, r5
 800bc36:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800bc3a:	d227      	bcs.n	800bc8c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800bc3c:	6826      	ldr	r6, [r4, #0]
 800bc3e:	4610      	mov	r0, r2
 800bc40:	460f      	mov	r7, r1
 800bc42:	f894 a008 	ldrb.w	sl, [r4, #8]
 800bc46:	441e      	add	r6, r3
 800bc48:	1aed      	subs	r5, r5, r3
 800bc4a:	f7fc fac3 	bl	80081d4 <__aeabi_f2d>
 800bc4e:	f1b9 0f00 	cmp.w	r9, #0
 800bc52:	d109      	bne.n	800bc68 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800bc54:	f1ba 0f00 	cmp.w	sl, #0
 800bc58:	d109      	bne.n	800bc6e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800bc5a:	463b      	mov	r3, r7
 800bc5c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc60:	4a0f      	ldr	r2, [pc, #60]	; (800bca0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800bc62:	f8cd 8000 	str.w	r8, [sp]
 800bc66:	e008      	b.n	800bc7a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800bc68:	f1ba 0f00 	cmp.w	sl, #0
 800bc6c:	d011      	beq.n	800bc92 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800bc6e:	463b      	mov	r3, r7
 800bc70:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc74:	4a0b      	ldr	r2, [pc, #44]	; (800bca4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800bc76:	f8cd 8000 	str.w	r8, [sp]
 800bc7a:	4629      	mov	r1, r5
 800bc7c:	4630      	mov	r0, r6
 800bc7e:	f7fd fb3d 	bl	80092fc <snprintf>
 800bc82:	4285      	cmp	r5, r0
 800bc84:	bfa2      	ittt	ge
 800bc86:	88e3      	ldrhge	r3, [r4, #6]
 800bc88:	181b      	addge	r3, r3, r0
 800bc8a:	80e3      	strhge	r3, [r4, #6]
 800bc8c:	b004      	add	sp, #16
 800bc8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bc92:	463b      	mov	r3, r7
 800bc94:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc98:	4a03      	ldr	r2, [pc, #12]	; (800bca8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800bc9a:	f8cd 8000 	str.w	r8, [sp]
 800bc9e:	e7ec      	b.n	800bc7a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800bca0:	080146e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, sl, lr}
 800bca4:	080146d8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, lr}
 800bca8:	080146e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, lr}

0800bcac <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800bcac:	6001      	str	r1, [r0, #0]
 800bcae:	2100      	movs	r1, #0
 800bcb0:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800bcb4:	4a05      	ldr	r2, [pc, #20]	; (800bccc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x20>)
 800bcb6:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bcba:	4a05      	ldr	r2, [pc, #20]	; (800bcd0 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>)
 800bcbc:	4905      	ldr	r1, [pc, #20]	; (800bcd4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x28>)
 800bcbe:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800bcc2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bcc6:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800bcca:	4770      	bx	lr
 800bccc:	0100aa03 	tsteq	r0, r3, lsl #20
 800bcd0:	01ff003d 	mvnseq	r0, sp, lsr r0
 800bcd4:	06000100 	streq	r0, [r0], -r0, lsl #2

0800bcd8 <PixelDmxParams::Load()>:
 800bcd8:	b508      	push	{r3, lr}
 800bcda:	2300      	movs	r3, #0
 800bcdc:	4601      	mov	r1, r0
 800bcde:	6043      	str	r3, [r0, #4]
 800bce0:	6800      	ldr	r0, [r0, #0]
 800bce2:	b120      	cbz	r0, 800bcee <PixelDmxParams::Load()+0x16>
 800bce4:	6803      	ldr	r3, [r0, #0]
 800bce6:	3104      	adds	r1, #4
 800bce8:	68db      	ldr	r3, [r3, #12]
 800bcea:	4798      	blx	r3
 800bcec:	2001      	movs	r0, #1
 800bcee:	bd08      	pop	{r3, pc}

0800bcf0 <PixelDmxParams::Load(char const*, unsigned int)>:
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	b1d3      	cbz	r3, 800bd2a <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800bcf4:	2300      	movs	r3, #0
 800bcf6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bcf8:	460d      	mov	r5, r1
 800bcfa:	4616      	mov	r6, r2
 800bcfc:	4604      	mov	r4, r0
 800bcfe:	6043      	str	r3, [r0, #4]
 800bd00:	4602      	mov	r2, r0
 800bd02:	490a      	ldr	r1, [pc, #40]	; (800bd2c <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800bd04:	4668      	mov	r0, sp
 800bd06:	f004 fbb1 	bl	801046c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bd0a:	4632      	mov	r2, r6
 800bd0c:	4629      	mov	r1, r5
 800bd0e:	4668      	mov	r0, sp
 800bd10:	f004 fbb0 	bl	8010474 <ReadConfigFile::Read(char const*, unsigned int)>
 800bd14:	4621      	mov	r1, r4
 800bd16:	f851 0b04 	ldr.w	r0, [r1], #4
 800bd1a:	6803      	ldr	r3, [r0, #0]
 800bd1c:	689b      	ldr	r3, [r3, #8]
 800bd1e:	4798      	blx	r3
 800bd20:	4668      	mov	r0, sp
 800bd22:	f004 fba6 	bl	8010472 <ReadConfigFile::~ReadConfigFile()>
 800bd26:	b002      	add	sp, #8
 800bd28:	bd70      	pop	{r4, r5, r6, pc}
 800bd2a:	4770      	bx	lr
 800bd2c:	0800bfd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, fp, ip, sp, pc}

0800bd30 <PixelDmxParams::callbackFunction(char const*)>:
 800bd30:	b530      	push	{r4, r5, lr}
 800bd32:	2308      	movs	r3, #8
 800bd34:	460d      	mov	r5, r1
 800bd36:	b089      	sub	sp, #36	; 0x24
 800bd38:	4604      	mov	r4, r0
 800bd3a:	9302      	str	r3, [sp, #8]
 800bd3c:	4628      	mov	r0, r5
 800bd3e:	4995      	ldr	r1, [pc, #596]	; (800bf94 <PixelDmxParams::callbackFunction(char const*)+0x264>)
 800bd40:	446b      	add	r3, sp
 800bd42:	aa04      	add	r2, sp, #16
 800bd44:	f004 fbca 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bd48:	b9a0      	cbnz	r0, 800bd74 <PixelDmxParams::callbackFunction(char const*)+0x44>
 800bd4a:	9b02      	ldr	r3, [sp, #8]
 800bd4c:	3320      	adds	r3, #32
 800bd4e:	446b      	add	r3, sp
 800bd50:	f803 0c10 	strb.w	r0, [r3, #-16]
 800bd54:	a804      	add	r0, sp, #16
 800bd56:	f000 fc09 	bl	800c56c <PixelType::GetType(char const*)>
 800bd5a:	280e      	cmp	r0, #14
 800bd5c:	bf08      	it	eq
 800bd5e:	2203      	moveq	r2, #3
 800bd60:	6863      	ldr	r3, [r4, #4]
 800bd62:	bf19      	ittee	ne
 800bd64:	7220      	strbne	r0, [r4, #8]
 800bd66:	f043 0301 	orrne.w	r3, r3, #1
 800bd6a:	7222      	strbeq	r2, [r4, #8]
 800bd6c:	f023 0301 	biceq.w	r3, r3, #1
 800bd70:	6063      	str	r3, [r4, #4]
 800bd72:	e033      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bd74:	4628      	mov	r0, r5
 800bd76:	4988      	ldr	r1, [pc, #544]	; (800bf98 <PixelDmxParams::callbackFunction(char const*)+0x268>)
 800bd78:	f10d 0202 	add.w	r2, sp, #2
 800bd7c:	f004 fc6b 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bd80:	b990      	cbnz	r0, 800bda8 <PixelDmxParams::callbackFunction(char const*)+0x78>
 800bd82:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bd86:	6863      	ldr	r3, [r4, #4]
 800bd88:	1e51      	subs	r1, r2, #1
 800bd8a:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800bd8e:	bf2d      	iteet	cs
 800bd90:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800bd94:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800bd98:	f043 0302 	orrcc.w	r3, r3, #2
 800bd9c:	7262      	strbcs	r2, [r4, #9]
 800bd9e:	bf24      	itt	cs
 800bda0:	72a0      	strbcs	r0, [r4, #10]
 800bda2:	f023 0302 	biccs.w	r3, r3, #2
 800bda6:	e7e3      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bda8:	2303      	movs	r3, #3
 800bdaa:	4628      	mov	r0, r5
 800bdac:	9302      	str	r3, [sp, #8]
 800bdae:	497b      	ldr	r1, [pc, #492]	; (800bf9c <PixelDmxParams::callbackFunction(char const*)+0x26c>)
 800bdb0:	ab02      	add	r3, sp, #8
 800bdb2:	aa04      	add	r2, sp, #16
 800bdb4:	f004 fb92 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bdb8:	b990      	cbnz	r0, 800bde0 <PixelDmxParams::callbackFunction(char const*)+0xb0>
 800bdba:	9b02      	ldr	r3, [sp, #8]
 800bdbc:	3320      	adds	r3, #32
 800bdbe:	446b      	add	r3, sp
 800bdc0:	f803 0c10 	strb.w	r0, [r3, #-16]
 800bdc4:	a804      	add	r0, sp, #16
 800bdc6:	f000 fbf5 	bl	800c5b4 <PixelType::GetMap(char const*)>
 800bdca:	6863      	ldr	r3, [r4, #4]
 800bdcc:	2806      	cmp	r0, #6
 800bdce:	bf14      	ite	ne
 800bdd0:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800bdd4:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800bdd8:	6063      	str	r3, [r4, #4]
 800bdda:	75e0      	strb	r0, [r4, #23]
 800bddc:	b009      	add	sp, #36	; 0x24
 800bdde:	bd30      	pop	{r4, r5, pc}
 800bde0:	4628      	mov	r0, r5
 800bde2:	496f      	ldr	r1, [pc, #444]	; (800bfa0 <PixelDmxParams::callbackFunction(char const*)+0x270>)
 800bde4:	aa01      	add	r2, sp, #4
 800bde6:	f004 fb92 	bl	801050e <Sscan::Float(char const*, char const*, float&)>
 800bdea:	b960      	cbnz	r0, 800be06 <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800bdec:	9801      	ldr	r0, [sp, #4]
 800bdee:	f000 fc4d 	bl	800c68c <PixelType::ConvertTxH(float)>
 800bdf2:	6863      	ldr	r3, [r4, #4]
 800bdf4:	b120      	cbz	r0, 800be00 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800bdf6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bdfa:	6063      	str	r3, [r4, #4]
 800bdfc:	7620      	strb	r0, [r4, #24]
 800bdfe:	e7ed      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800be00:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800be04:	e7f9      	b.n	800bdfa <PixelDmxParams::callbackFunction(char const*)+0xca>
 800be06:	4628      	mov	r0, r5
 800be08:	4966      	ldr	r1, [pc, #408]	; (800bfa4 <PixelDmxParams::callbackFunction(char const*)+0x274>)
 800be0a:	aa01      	add	r2, sp, #4
 800be0c:	f004 fb7f 	bl	801050e <Sscan::Float(char const*, char const*, float&)>
 800be10:	b960      	cbnz	r0, 800be2c <PixelDmxParams::callbackFunction(char const*)+0xfc>
 800be12:	9801      	ldr	r0, [sp, #4]
 800be14:	f000 fc3a 	bl	800c68c <PixelType::ConvertTxH(float)>
 800be18:	6863      	ldr	r3, [r4, #4]
 800be1a:	b120      	cbz	r0, 800be26 <PixelDmxParams::callbackFunction(char const*)+0xf6>
 800be1c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800be20:	6063      	str	r3, [r4, #4]
 800be22:	7660      	strb	r0, [r4, #25]
 800be24:	e7da      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800be26:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800be2a:	e7f9      	b.n	800be20 <PixelDmxParams::callbackFunction(char const*)+0xf0>
 800be2c:	4628      	mov	r0, r5
 800be2e:	495e      	ldr	r1, [pc, #376]	; (800bfa8 <PixelDmxParams::callbackFunction(char const*)+0x278>)
 800be30:	f10d 0202 	add.w	r2, sp, #2
 800be34:	f004 fc0f 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800be38:	b998      	cbnz	r0, 800be62 <PixelDmxParams::callbackFunction(char const*)+0x132>
 800be3a:	f240 25a6 	movw	r5, #678	; 0x2a6
 800be3e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800be42:	6863      	ldr	r3, [r4, #4]
 800be44:	1e8a      	subs	r2, r1, #2
 800be46:	b292      	uxth	r2, r2
 800be48:	42aa      	cmp	r2, r5
 800be4a:	bf81      	itttt	hi
 800be4c:	2201      	movhi	r2, #1
 800be4e:	75a0      	strbhi	r0, [r4, #22]
 800be50:	7562      	strbhi	r2, [r4, #21]
 800be52:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800be56:	bf9c      	itt	ls
 800be58:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800be5c:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800be60:	e786      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800be62:	4628      	mov	r0, r5
 800be64:	4951      	ldr	r1, [pc, #324]	; (800bfac <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800be66:	aa03      	add	r2, sp, #12
 800be68:	f004 fc13 	bl	8010692 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800be6c:	b960      	cbnz	r0, 800be88 <PixelDmxParams::callbackFunction(char const*)+0x158>
 800be6e:	9a03      	ldr	r2, [sp, #12]
 800be70:	494f      	ldr	r1, [pc, #316]	; (800bfb0 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800be72:	6863      	ldr	r3, [r4, #4]
 800be74:	428a      	cmp	r2, r1
 800be76:	bf14      	ite	ne
 800be78:	f043 0310 	orrne.w	r3, r3, #16
 800be7c:	f023 0310 	biceq.w	r3, r3, #16
 800be80:	6063      	str	r3, [r4, #4]
 800be82:	f8c4 200e 	str.w	r2, [r4, #14]
 800be86:	e7a9      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800be88:	4628      	mov	r0, r5
 800be8a:	494a      	ldr	r1, [pc, #296]	; (800bfb4 <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800be8c:	f10d 0201 	add.w	r2, sp, #1
 800be90:	f004 fc28 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800be94:	b988      	cbnz	r0, 800beba <PixelDmxParams::callbackFunction(char const*)+0x18a>
 800be96:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800be9a:	6863      	ldr	r3, [r4, #4]
 800be9c:	1e4a      	subs	r2, r1, #1
 800be9e:	b2d2      	uxtb	r2, r2
 800bea0:	2afd      	cmp	r2, #253	; 0xfd
 800bea2:	bf83      	ittte	hi
 800bea4:	f023 0320 	bichi.w	r3, r3, #32
 800bea8:	6063      	strhi	r3, [r4, #4]
 800beaa:	23ff      	movhi	r3, #255	; 0xff
 800beac:	f043 0320 	orrls.w	r3, r3, #32
 800beb0:	bf9a      	itte	ls
 800beb2:	6063      	strls	r3, [r4, #4]
 800beb4:	74a1      	strbls	r1, [r4, #18]
 800beb6:	74a3      	strbhi	r3, [r4, #18]
 800beb8:	e790      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800beba:	4628      	mov	r0, r5
 800bebc:	493e      	ldr	r1, [pc, #248]	; (800bfb8 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800bebe:	f10d 0202 	add.w	r2, sp, #2
 800bec2:	f004 fbc8 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bec6:	2800      	cmp	r0, #0
 800bec8:	d13f      	bne.n	800bf4a <PixelDmxParams::callbackFunction(char const*)+0x21a>
 800beca:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bece:	6863      	ldr	r3, [r4, #4]
 800bed0:	1e91      	subs	r1, r2, #2
 800bed2:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800bed6:	bf83      	ittte	hi
 800bed8:	2201      	movhi	r2, #1
 800beda:	72e2      	strbhi	r2, [r4, #11]
 800bedc:	2200      	movhi	r2, #0
 800bede:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800bee2:	bf92      	itee	ls
 800bee4:	f043 0304 	orrls.w	r3, r3, #4
 800bee8:	7322      	strbhi	r2, [r4, #12]
 800beea:	f023 0304 	bichi.w	r3, r3, #4
 800beee:	e73f      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bef0:	2201      	movs	r2, #1
 800bef2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800bef6:	8362      	strh	r2, [r4, #26]
 800bef8:	e036      	b.n	800bf68 <PixelDmxParams::callbackFunction(char const*)+0x238>
 800befa:	4628      	mov	r0, r5
 800befc:	492f      	ldr	r1, [pc, #188]	; (800bfbc <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800befe:	f10d 0201 	add.w	r2, sp, #1
 800bf02:	f004 fbef 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bf06:	b948      	cbnz	r0, 800bf1c <PixelDmxParams::callbackFunction(char const*)+0x1ec>
 800bf08:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bf0c:	6863      	ldr	r3, [r4, #4]
 800bf0e:	b112      	cbz	r2, 800bf16 <PixelDmxParams::callbackFunction(char const*)+0x1e6>
 800bf10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800bf14:	e72c      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf16:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bf1a:	e729      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf1c:	4628      	mov	r0, r5
 800bf1e:	4928      	ldr	r1, [pc, #160]	; (800bfc0 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800bf20:	aa01      	add	r2, sp, #4
 800bf22:	f004 faf4 	bl	801050e <Sscan::Float(char const*, char const*, float&)>
 800bf26:	4605      	mov	r5, r0
 800bf28:	2800      	cmp	r0, #0
 800bf2a:	f47f af57 	bne.w	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bf2e:	4925      	ldr	r1, [pc, #148]	; (800bfc4 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800bf30:	9801      	ldr	r0, [sp, #4]
 800bf32:	f7fc f9a7 	bl	8008284 <__aeabi_fmul>
 800bf36:	f7fc faf5 	bl	8008524 <__aeabi_f2uiz>
 800bf3a:	b2c3      	uxtb	r3, r0
 800bf3c:	f1a3 0214 	sub.w	r2, r3, #20
 800bf40:	2a05      	cmp	r2, #5
 800bf42:	bf8c      	ite	hi
 800bf44:	7365      	strbhi	r5, [r4, #13]
 800bf46:	7363      	strbls	r3, [r4, #13]
 800bf48:	e748      	b.n	800bddc <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bf4a:	4628      	mov	r0, r5
 800bf4c:	491e      	ldr	r1, [pc, #120]	; (800bfc8 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800bf4e:	f10d 0202 	add.w	r2, sp, #2
 800bf52:	f004 fb80 	bl	8010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bf56:	b940      	cbnz	r0, 800bf6a <PixelDmxParams::callbackFunction(char const*)+0x23a>
 800bf58:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bf5c:	6863      	ldr	r3, [r4, #4]
 800bf5e:	2a00      	cmp	r2, #0
 800bf60:	d0c6      	beq.n	800bef0 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800bf62:	8362      	strh	r2, [r4, #26]
 800bf64:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800bf68:	6063      	str	r3, [r4, #4]
 800bf6a:	4628      	mov	r0, r5
 800bf6c:	4917      	ldr	r1, [pc, #92]	; (800bfcc <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800bf6e:	f10d 0201 	add.w	r2, sp, #1
 800bf72:	f004 fbb7 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bf76:	2800      	cmp	r0, #0
 800bf78:	d1bf      	bne.n	800befa <PixelDmxParams::callbackFunction(char const*)+0x1ca>
 800bf7a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bf7e:	6863      	ldr	r3, [r4, #4]
 800bf80:	1e51      	subs	r1, r2, #1
 800bf82:	2904      	cmp	r1, #4
 800bf84:	bf99      	ittee	ls
 800bf86:	7522      	strbls	r2, [r4, #20]
 800bf88:	f043 0308 	orrls.w	r3, r3, #8
 800bf8c:	7520      	strbhi	r0, [r4, #20]
 800bf8e:	f023 0308 	bichi.w	r3, r3, #8
 800bf92:	e6ed      	b.n	800bd70 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf94:	080155d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, ip, lr}
 800bf98:	080155de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, sl, ip, lr}
 800bf9c:	080155c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, ip, lr}
 800bfa0:	080155e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, ip, lr}
 800bfa4:	080155f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, ip, lr}
 800bfa8:	08015592 	stmdaeq	r1, {r1, r4, r7, r8, sl, ip, lr}
 800bfac:	08015576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, lr}
 800bfb0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800bfb4:	080155b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, ip, lr}
 800bfb8:	08015645 	stmdaeq	r1, {r0, r2, r6, r9, sl, ip, lr}
 800bfbc:	080155a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, lr}
 800bfc0:	0801556a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, lr}
 800bfc4:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800bfc8:	08015631 	stmdaeq	r1, {r0, r4, r5, r9, sl, ip, lr}
 800bfcc:	08015585 	stmdaeq	r1, {r0, r2, r7, r8, sl, ip, lr}

0800bfd0 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800bfd0:	f7ff beae 	b.w	800bd30 <PixelDmxParams::callbackFunction(char const*)>

0800bfd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800bfd4:	b570      	push	{r4, r5, r6, lr}
 800bfd6:	4604      	mov	r4, r0
 800bfd8:	4615      	mov	r5, r2
 800bfda:	461e      	mov	r6, r3
 800bfdc:	b086      	sub	sp, #24
 800bfde:	3004      	adds	r0, #4
 800bfe0:	b389      	cbz	r1, 800c046 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x72>
 800bfe2:	2218      	movs	r2, #24
 800bfe4:	f005 f869 	bl	80110ba <memmove>
 800bfe8:	462a      	mov	r2, r5
 800bfea:	4633      	mov	r3, r6
 800bfec:	4996      	ldr	r1, [pc, #600]	; (800c248 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800bfee:	a803      	add	r0, sp, #12
 800bff0:	f004 f99c 	bl	801032c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bff4:	7a20      	ldrb	r0, [r4, #8]
 800bff6:	f000 faad 	bl	800c554 <PixelType::GetType(pixel::Type)>
 800bffa:	6863      	ldr	r3, [r4, #4]
 800bffc:	4602      	mov	r2, r0
 800bffe:	4993      	ldr	r1, [pc, #588]	; (800c24c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800c000:	f003 0301 	and.w	r3, r3, #1
 800c004:	a803      	add	r0, sp, #12
 800c006:	f7ff fde7 	bl	800bbd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c00a:	6863      	ldr	r3, [r4, #4]
 800c00c:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800c010:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c014:	498e      	ldr	r1, [pc, #568]	; (800c250 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800c016:	a803      	add	r0, sp, #12
 800c018:	f7ff fdb6 	bl	800bb88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c01c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c020:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c024:	6863      	ldr	r3, [r4, #4]
 800c026:	42aa      	cmp	r2, r5
 800c028:	d227      	bcs.n	800c07a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa6>
 800c02a:	9803      	ldr	r0, [sp, #12]
 800c02c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800c030:	4410      	add	r0, r2
 800c032:	eba5 0502 	sub.w	r5, r5, r2
 800c036:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c03a:	d10b      	bne.n	800c054 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x80>
 800c03c:	b96a      	cbnz	r2, 800c05a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x86>
 800c03e:	9200      	str	r2, [sp, #0]
 800c040:	4b84      	ldr	r3, [pc, #528]	; (800c254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c042:	4a85      	ldr	r2, [pc, #532]	; (800c258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800c044:	e00f      	b.n	800c066 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800c046:	6823      	ldr	r3, [r4, #0]
 800c048:	4601      	mov	r1, r0
 800c04a:	681a      	ldr	r2, [r3, #0]
 800c04c:	4618      	mov	r0, r3
 800c04e:	68d2      	ldr	r2, [r2, #12]
 800c050:	4790      	blx	r2
 800c052:	e7c9      	b.n	800bfe8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800c054:	2a00      	cmp	r2, #0
 800c056:	f000 808a 	beq.w	800c16e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19a>
 800c05a:	3b00      	subs	r3, #0
 800c05c:	bf18      	it	ne
 800c05e:	2301      	movne	r3, #1
 800c060:	4a7e      	ldr	r2, [pc, #504]	; (800c25c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800c062:	9300      	str	r3, [sp, #0]
 800c064:	4b7b      	ldr	r3, [pc, #492]	; (800c254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c066:	4629      	mov	r1, r5
 800c068:	f7fd f948 	bl	80092fc <snprintf>
 800c06c:	4285      	cmp	r5, r0
 800c06e:	bfa2      	ittt	ge
 800c070:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c074:	18c0      	addge	r0, r0, r3
 800c076:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c07a:	7b63      	ldrb	r3, [r4, #13]
 800c07c:	2b00      	cmp	r3, #0
 800c07e:	d17b      	bne.n	800c178 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a4>
 800c080:	4a77      	ldr	r2, [pc, #476]	; (800c260 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800c082:	4978      	ldr	r1, [pc, #480]	; (800c264 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800c084:	a803      	add	r0, sp, #12
 800c086:	f7ff fda7 	bl	800bbd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c08a:	4977      	ldr	r1, [pc, #476]	; (800c268 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c08c:	a803      	add	r0, sp, #12
 800c08e:	f004 f9d3 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c092:	6863      	ldr	r3, [r4, #4]
 800c094:	059e      	lsls	r6, r3, #22
 800c096:	d403      	bmi.n	800c0a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800c098:	7a20      	ldrb	r0, [r4, #8]
 800c09a:	f000 fabf 	bl	800c61c <PixelType::GetMap(pixel::Type)>
 800c09e:	75e0      	strb	r0, [r4, #23]
 800c0a0:	7de0      	ldrb	r0, [r4, #23]
 800c0a2:	f000 faaf 	bl	800c604 <PixelType::GetMap(pixel::Map)>
 800c0a6:	6863      	ldr	r3, [r4, #4]
 800c0a8:	4602      	mov	r2, r0
 800c0aa:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800c0ae:	496f      	ldr	r1, [pc, #444]	; (800c26c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800c0b0:	a803      	add	r0, sp, #12
 800c0b2:	f7ff fd91 	bl	800bbd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c0b6:	6863      	ldr	r3, [r4, #4]
 800c0b8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800c0bc:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c0c0:	d011      	beq.n	800c0e6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x112>
 800c0c2:	f10d 020b 	add.w	r2, sp, #11
 800c0c6:	7a20      	ldrb	r0, [r4, #8]
 800c0c8:	f10d 010a 	add.w	r1, sp, #10
 800c0cc:	f000 f93b 	bl	800c346 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800c0d0:	6863      	ldr	r3, [r4, #4]
 800c0d2:	055d      	lsls	r5, r3, #21
 800c0d4:	bf5c      	itt	pl
 800c0d6:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800c0da:	7622      	strbpl	r2, [r4, #24]
 800c0dc:	0518      	lsls	r0, r3, #20
 800c0de:	bf5c      	itt	pl
 800c0e0:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800c0e4:	7663      	strbpl	r3, [r4, #25]
 800c0e6:	4962      	ldr	r1, [pc, #392]	; (800c270 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800c0e8:	a803      	add	r0, sp, #12
 800c0ea:	f004 f9a5 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c0ee:	7e20      	ldrb	r0, [r4, #24]
 800c0f0:	f000 fa9e 	bl	800c630 <PixelType::ConvertTxH(unsigned char)>
 800c0f4:	2502      	movs	r5, #2
 800c0f6:	6863      	ldr	r3, [r4, #4]
 800c0f8:	4602      	mov	r2, r0
 800c0fa:	495e      	ldr	r1, [pc, #376]	; (800c274 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c0fc:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800c100:	9500      	str	r5, [sp, #0]
 800c102:	a803      	add	r0, sp, #12
 800c104:	f7ff fd90 	bl	800bc28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c108:	7e60      	ldrb	r0, [r4, #25]
 800c10a:	f000 fa91 	bl	800c630 <PixelType::ConvertTxH(unsigned char)>
 800c10e:	6863      	ldr	r3, [r4, #4]
 800c110:	4602      	mov	r2, r0
 800c112:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800c116:	4958      	ldr	r1, [pc, #352]	; (800c278 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800c118:	9500      	str	r5, [sp, #0]
 800c11a:	a803      	add	r0, sp, #12
 800c11c:	f7ff fd84 	bl	800bc28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c120:	4956      	ldr	r1, [pc, #344]	; (800c27c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800c122:	a803      	add	r0, sp, #12
 800c124:	f004 f988 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c128:	6863      	ldr	r3, [r4, #4]
 800c12a:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800c12e:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800c132:	4953      	ldr	r1, [pc, #332]	; (800c280 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800c134:	a803      	add	r0, sp, #12
 800c136:	f7ff fd27 	bl	800bb88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c13a:	4952      	ldr	r1, [pc, #328]	; (800c284 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800c13c:	a803      	add	r0, sp, #12
 800c13e:	f004 f97b 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c142:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c146:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c14a:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800c14e:	42aa      	cmp	r2, r5
 800c150:	6861      	ldr	r1, [r4, #4]
 800c152:	d22e      	bcs.n	800c1b2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800c154:	9803      	ldr	r0, [sp, #12]
 800c156:	06c9      	lsls	r1, r1, #27
 800c158:	4410      	add	r0, r2
 800c15a:	eba5 0502 	sub.w	r5, r5, r2
 800c15e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c162:	d417      	bmi.n	800c194 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c0>
 800c164:	b9c2      	cbnz	r2, 800c198 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 800c166:	9300      	str	r3, [sp, #0]
 800c168:	4a3b      	ldr	r2, [pc, #236]	; (800c258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800c16a:	4b47      	ldr	r3, [pc, #284]	; (800c288 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c16c:	e017      	b.n	800c19e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800c16e:	2301      	movs	r3, #1
 800c170:	4a46      	ldr	r2, [pc, #280]	; (800c28c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800c172:	9300      	str	r3, [sp, #0]
 800c174:	4b37      	ldr	r3, [pc, #220]	; (800c254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c176:	e776      	b.n	800c066 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800c178:	4618      	mov	r0, r3
 800c17a:	f7fb fdb9 	bl	8007cf0 <__aeabi_ui2f>
 800c17e:	4944      	ldr	r1, [pc, #272]	; (800c290 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800c180:	f7fc f934 	bl	80083ec <__aeabi_fdiv>
 800c184:	2301      	movs	r3, #1
 800c186:	4602      	mov	r2, r0
 800c188:	4936      	ldr	r1, [pc, #216]	; (800c264 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800c18a:	9300      	str	r3, [sp, #0]
 800c18c:	a803      	add	r0, sp, #12
 800c18e:	f7ff fd4b 	bl	800bc28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c192:	e77a      	b.n	800c08a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800c194:	2a00      	cmp	r2, #0
 800c196:	d052      	beq.n	800c23e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x26a>
 800c198:	9300      	str	r3, [sp, #0]
 800c19a:	4a30      	ldr	r2, [pc, #192]	; (800c25c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800c19c:	4b3a      	ldr	r3, [pc, #232]	; (800c288 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c19e:	4629      	mov	r1, r5
 800c1a0:	f7fd f8ac 	bl	80092fc <snprintf>
 800c1a4:	4285      	cmp	r5, r0
 800c1a6:	bfa2      	ittt	ge
 800c1a8:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c1ac:	18c0      	addge	r0, r0, r3
 800c1ae:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c1b2:	4938      	ldr	r1, [pc, #224]	; (800c294 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800c1b4:	a803      	add	r0, sp, #12
 800c1b6:	f004 f93f 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c1ba:	6863      	ldr	r3, [r4, #4]
 800c1bc:	7ca2      	ldrb	r2, [r4, #18]
 800c1be:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800c1c2:	4935      	ldr	r1, [pc, #212]	; (800c298 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800c1c4:	a803      	add	r0, sp, #12
 800c1c6:	f7ff fcb7 	bl	800bb38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c1ca:	4934      	ldr	r1, [pc, #208]	; (800c29c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800c1cc:	a803      	add	r0, sp, #12
 800c1ce:	f004 f933 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c1d2:	6863      	ldr	r3, [r4, #4]
 800c1d4:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800c1d8:	4931      	ldr	r1, [pc, #196]	; (800c2a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800c1da:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800c1de:	a803      	add	r0, sp, #12
 800c1e0:	f7ff fcd2 	bl	800bb88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c1e4:	6863      	ldr	r3, [r4, #4]
 800c1e6:	8b62      	ldrh	r2, [r4, #26]
 800c1e8:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800c1ec:	492d      	ldr	r1, [pc, #180]	; (800c2a4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800c1ee:	a803      	add	r0, sp, #12
 800c1f0:	f7ff fcca 	bl	800bb88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c1f4:	492c      	ldr	r1, [pc, #176]	; (800c2a8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800c1f6:	a803      	add	r0, sp, #12
 800c1f8:	f004 f91e 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800c1fc:	6863      	ldr	r3, [r4, #4]
 800c1fe:	7d22      	ldrb	r2, [r4, #20]
 800c200:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800c204:	4929      	ldr	r1, [pc, #164]	; (800c2ac <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800c206:	a803      	add	r0, sp, #12
 800c208:	f7ff fc96 	bl	800bb38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c20c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c210:	b17b      	cbz	r3, 800c232 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x25e>
 800c212:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c216:	9b03      	ldr	r3, [sp, #12]
 800c218:	4413      	add	r3, r2
 800c21a:	227d      	movs	r2, #125	; 0x7d
 800c21c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c220:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c224:	9903      	ldr	r1, [sp, #12]
 800c226:	54ca      	strb	r2, [r1, r3]
 800c228:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c22c:	3301      	adds	r3, #1
 800c22e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c232:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c238:	601a      	str	r2, [r3, #0]
 800c23a:	b006      	add	sp, #24
 800c23c:	bd70      	pop	{r4, r5, r6, pc}
 800c23e:	9300      	str	r3, [sp, #0]
 800c240:	4a12      	ldr	r2, [pc, #72]	; (800c28c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800c242:	4b11      	ldr	r3, [pc, #68]	; (800c288 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c244:	e7ab      	b.n	800c19e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800c246:	bf00      	nop
 800c248:	080155f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, ip, lr}
 800c24c:	080155d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, ip, lr}
 800c250:	080155de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, sl, ip, lr}
 800c254:	080155a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, lr}
 800c258:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800c25c:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800c260:	080146ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, lr}
 800c264:	0801556a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, lr}
 800c268:	080146f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, lr}
 800c26c:	080155c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, ip, lr}
 800c270:	0801470b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, lr}
 800c274:	080155e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, ip, lr}
 800c278:	080155f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, ip, lr}
 800c27c:	08014721 	stmdaeq	r1, {r0, r5, r8, r9, sl, lr}
 800c280:	08015592 	stmdaeq	r1, {r1, r4, r7, r8, sl, ip, lr}
 800c284:	0801472a 	stmdaeq	r1, {r1, r3, r5, r8, r9, sl, lr}
 800c288:	08015576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, ip, lr}
 800c28c:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}
 800c290:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800c294:	0801473c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, lr}
 800c298:	080155b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, ip, lr}
 800c29c:	0801474a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sl, lr}
 800c2a0:	08015645 	stmdaeq	r1, {r0, r2, r6, r9, sl, ip, lr}
 800c2a4:	08015631 	stmdaeq	r1, {r0, r4, r5, r9, sl, ip, lr}
 800c2a8:	0801474e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, lr}
 800c2ac:	08015585 	stmdaeq	r1, {r0, r2, r7, r8, sl, ip, lr}

0800c2b0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800c2b0:	b513      	push	{r0, r1, r4, lr}
 800c2b2:	6804      	ldr	r4, [r0, #0]
 800c2b4:	b914      	cbnz	r4, 800c2bc <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800c2b6:	601c      	str	r4, [r3, #0]
 800c2b8:	b002      	add	sp, #8
 800c2ba:	bd10      	pop	{r4, pc}
 800c2bc:	9300      	str	r3, [sp, #0]
 800c2be:	4613      	mov	r3, r2
 800c2c0:	460a      	mov	r2, r1
 800c2c2:	2100      	movs	r1, #0
 800c2c4:	f7ff fe86 	bl	800bfd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800c2c8:	e7f6      	b.n	800c2b8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800c2ca <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800c2ca:	6843      	ldr	r3, [r0, #4]
 800c2cc:	07da      	lsls	r2, r3, #31
 800c2ce:	bf44      	itt	mi
 800c2d0:	7a02      	ldrbmi	r2, [r0, #8]
 800c2d2:	600a      	strmi	r2, [r1, #0]
 800c2d4:	079a      	lsls	r2, r3, #30
 800c2d6:	d505      	bpl.n	800c2e4 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800c2d8:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800c2dc:	2a00      	cmp	r2, #0
 800c2de:	bf08      	it	eq
 800c2e0:	22aa      	moveq	r2, #170	; 0xaa
 800c2e2:	604a      	str	r2, [r1, #4]
 800c2e4:	059a      	lsls	r2, r3, #22
 800c2e6:	bf44      	itt	mi
 800c2e8:	7dc2      	ldrbmi	r2, [r0, #23]
 800c2ea:	608a      	strmi	r2, [r1, #8]
 800c2ec:	055a      	lsls	r2, r3, #21
 800c2ee:	bf44      	itt	mi
 800c2f0:	7e02      	ldrbmi	r2, [r0, #24]
 800c2f2:	740a      	strbmi	r2, [r1, #16]
 800c2f4:	051a      	lsls	r2, r3, #20
 800c2f6:	bf44      	itt	mi
 800c2f8:	7e42      	ldrbmi	r2, [r0, #25]
 800c2fa:	744a      	strbmi	r2, [r1, #17]
 800c2fc:	06da      	lsls	r2, r3, #27
 800c2fe:	bf44      	itt	mi
 800c300:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800c304:	60ca      	strmi	r2, [r1, #12]
 800c306:	069a      	lsls	r2, r3, #26
 800c308:	bf44      	itt	mi
 800c30a:	7c82      	ldrbmi	r2, [r0, #18]
 800c30c:	748a      	strbmi	r2, [r1, #18]
 800c30e:	061a      	lsls	r2, r3, #24
 800c310:	d504      	bpl.n	800c31c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800c312:	2201      	movs	r2, #1
 800c314:	750a      	strb	r2, [r1, #20]
 800c316:	7b42      	ldrb	r2, [r0, #13]
 800c318:	b102      	cbz	r2, 800c31c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800c31a:	74ca      	strb	r2, [r1, #19]
 800c31c:	075a      	lsls	r2, r3, #29
 800c31e:	d50b      	bpl.n	800c338 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x6e>
 800c320:	7ac2      	ldrb	r2, [r0, #11]
 800c322:	b510      	push	{r4, lr}
 800c324:	7b04      	ldrb	r4, [r0, #12]
 800c326:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800c32a:	858a      	strh	r2, [r1, #44]	; 0x2c
 800c32c:	05da      	lsls	r2, r3, #23
 800c32e:	bf44      	itt	mi
 800c330:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800c334:	620b      	strmi	r3, [r1, #32]
 800c336:	bd10      	pop	{r4, pc}
 800c338:	05db      	lsls	r3, r3, #23
 800c33a:	bf44      	itt	mi
 800c33c:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800c340:	620b      	strmi	r3, [r1, #32]
 800c342:	4770      	bx	lr

0800c344 <PixelDmxParams::Dump()>:
 800c344:	4770      	bx	lr

0800c346 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800c346:	23c0      	movs	r3, #192	; 0xc0
 800c348:	2803      	cmp	r0, #3
 800c34a:	700b      	strb	r3, [r1, #0]
 800c34c:	d006      	beq.n	800c35c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800c34e:	3808      	subs	r0, #8
 800c350:	2803      	cmp	r0, #3
 800c352:	bf34      	ite	cc
 800c354:	23fc      	movcc	r3, #252	; 0xfc
 800c356:	23f0      	movcs	r3, #240	; 0xf0
 800c358:	7013      	strb	r3, [r2, #0]
 800c35a:	4770      	bx	lr
 800c35c:	23f8      	movs	r3, #248	; 0xf8
 800c35e:	e7fb      	b.n	800c358 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800c360 <PixelConfiguration::Validate(unsigned int&)>:
 800c360:	b513      	push	{r0, r1, r4, lr}
 800c362:	4604      	mov	r4, r0
 800c364:	6800      	ldr	r0, [r0, #0]
 800c366:	6863      	ldr	r3, [r4, #4]
 800c368:	2807      	cmp	r0, #7
 800c36a:	68a2      	ldr	r2, [r4, #8]
 800c36c:	d128      	bne.n	800c3c0 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800c36e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c372:	bf28      	it	cs
 800c374:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800c378:	6063      	str	r3, [r4, #4]
 800c37a:	2304      	movs	r3, #4
 800c37c:	600b      	str	r3, [r1, #0]
 800c37e:	2301      	movs	r3, #1
 800c380:	2a06      	cmp	r2, #6
 800c382:	7563      	strb	r3, [r4, #21]
 800c384:	d102      	bne.n	800c38c <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800c386:	f000 f949 	bl	800c61c <PixelType::GetMap(pixel::Type)>
 800c38a:	60a0      	str	r0, [r4, #8]
 800c38c:	7c63      	ldrb	r3, [r4, #17]
 800c38e:	7c22      	ldrb	r2, [r4, #16]
 800c390:	6820      	ldr	r0, [r4, #0]
 800c392:	429a      	cmp	r2, r3
 800c394:	bf28      	it	cs
 800c396:	2300      	movcs	r3, #0
 800c398:	f10d 0207 	add.w	r2, sp, #7
 800c39c:	bf28      	it	cs
 800c39e:	8223      	strhcs	r3, [r4, #16]
 800c3a0:	f10d 0106 	add.w	r1, sp, #6
 800c3a4:	f7ff ffcf 	bl	800c346 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800c3a8:	7c23      	ldrb	r3, [r4, #16]
 800c3aa:	b913      	cbnz	r3, 800c3b2 <PixelConfiguration::Validate(unsigned int&)+0x52>
 800c3ac:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800c3b0:	7423      	strb	r3, [r4, #16]
 800c3b2:	7c63      	ldrb	r3, [r4, #17]
 800c3b4:	b913      	cbnz	r3, 800c3bc <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800c3b6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c3ba:	7463      	strb	r3, [r4, #17]
 800c3bc:	4b29      	ldr	r3, [pc, #164]	; (800c464 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800c3be:	e01e      	b.n	800c3fe <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800c3c0:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800c3c4:	bf28      	it	cs
 800c3c6:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800c3ca:	6063      	str	r3, [r4, #4]
 800c3cc:	2303      	movs	r3, #3
 800c3ce:	600b      	str	r3, [r1, #0]
 800c3d0:	f1a0 030b 	sub.w	r3, r0, #11
 800c3d4:	2b01      	cmp	r3, #1
 800c3d6:	d806      	bhi.n	800c3e6 <PixelConfiguration::Validate(unsigned int&)+0x86>
 800c3d8:	7ca3      	ldrb	r3, [r4, #18]
 800c3da:	2b1f      	cmp	r3, #31
 800c3dc:	d83d      	bhi.n	800c45a <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800c3de:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800c3e2:	74a3      	strb	r3, [r4, #18]
 800c3e4:	e001      	b.n	800c3ea <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800c3e6:	2800      	cmp	r0, #0
 800c3e8:	d139      	bne.n	800c45e <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800c3ea:	2300      	movs	r3, #0
 800c3ec:	2a06      	cmp	r2, #6
 800c3ee:	bf08      	it	eq
 800c3f0:	60a3      	streq	r3, [r4, #8]
 800c3f2:	280d      	cmp	r0, #13
 800c3f4:	7563      	strb	r3, [r4, #21]
 800c3f6:	68e3      	ldr	r3, [r4, #12]
 800c3f8:	d119      	bne.n	800c42e <PixelConfiguration::Validate(unsigned int&)+0xce>
 800c3fa:	b913      	cbnz	r3, 800c402 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800c3fc:	4b1a      	ldr	r3, [pc, #104]	; (800c468 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800c3fe:	60e3      	str	r3, [r4, #12]
 800c400:	e003      	b.n	800c40a <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800c402:	4a1a      	ldr	r2, [pc, #104]	; (800c46c <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800c404:	4293      	cmp	r3, r2
 800c406:	d900      	bls.n	800c40a <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800c408:	60e2      	str	r2, [r4, #12]
 800c40a:	7d23      	ldrb	r3, [r4, #20]
 800c40c:	b31b      	cbz	r3, 800c456 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800c40e:	7ce3      	ldrb	r3, [r4, #19]
 800c410:	b9ab      	cbnz	r3, 800c43e <PixelConfiguration::Validate(unsigned int&)+0xde>
 800c412:	6822      	ldr	r2, [r4, #0]
 800c414:	b17a      	cbz	r2, 800c436 <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800c416:	f1a2 030b 	sub.w	r3, r2, #11
 800c41a:	2b01      	cmp	r3, #1
 800c41c:	d90d      	bls.n	800c43a <PixelConfiguration::Validate(unsigned int&)+0xda>
 800c41e:	4b14      	ldr	r3, [pc, #80]	; (800c470 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800c420:	4914      	ldr	r1, [pc, #80]	; (800c474 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800c422:	2a0d      	cmp	r2, #13
 800c424:	bf08      	it	eq
 800c426:	460b      	moveq	r3, r1
 800c428:	61a3      	str	r3, [r4, #24]
 800c42a:	b002      	add	sp, #8
 800c42c:	bd10      	pop	{r4, pc}
 800c42e:	2b00      	cmp	r3, #0
 800c430:	d0e4      	beq.n	800c3fc <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800c432:	4a11      	ldr	r2, [pc, #68]	; (800c478 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800c434:	e7e6      	b.n	800c404 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800c436:	4b11      	ldr	r3, [pc, #68]	; (800c47c <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800c438:	e7f6      	b.n	800c428 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c43a:	4b11      	ldr	r3, [pc, #68]	; (800c480 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800c43c:	e7f4      	b.n	800c428 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c43e:	f1a3 0214 	sub.w	r2, r3, #20
 800c442:	2a05      	cmp	r2, #5
 800c444:	d807      	bhi.n	800c456 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800c446:	3b15      	subs	r3, #21
 800c448:	2b04      	cmp	r3, #4
 800c44a:	bf96      	itet	ls
 800c44c:	4a0d      	ldrls	r2, [pc, #52]	; (800c484 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800c44e:	4b0e      	ldrhi	r3, [pc, #56]	; (800c488 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800c450:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800c454:	e7e8      	b.n	800c428 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c456:	4b07      	ldr	r3, [pc, #28]	; (800c474 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800c458:	e7e6      	b.n	800c428 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c45a:	23ff      	movs	r3, #255	; 0xff
 800c45c:	e7c1      	b.n	800c3e2 <PixelConfiguration::Validate(unsigned int&)+0x82>
 800c45e:	280d      	cmp	r0, #13
 800c460:	d18d      	bne.n	800c37e <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800c462:	e7c2      	b.n	800c3ea <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800c464:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800c468:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800c46c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800c470:	08014b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, lr}
 800c474:	08014828 	stmdaeq	r1, {r3, r5, fp, lr}
 800c478:	017d7840 	cmneq	sp, r0, asr #16
 800c47c:	08014e28 	stmdaeq	r1, {r3, r5, r9, sl, fp, lr}
 800c480:	08014f28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, lr}
 800c484:	08014814 	stmdaeq	r1, {r2, r4, fp, lr}
 800c488:	08014928 	stmdaeq	r1, {r3, r5, r8, fp, lr}

0800c48c <PixelConfiguration::Print()>:
 800c48c:	b513      	push	{r0, r1, r4, lr}
 800c48e:	4604      	mov	r4, r0
 800c490:	4825      	ldr	r0, [pc, #148]	; (800c528 <PixelConfiguration::Print()+0x9c>)
 800c492:	f7fc ff23 	bl	80092dc <printf>
 800c496:	6820      	ldr	r0, [r4, #0]
 800c498:	f000 f85c 	bl	800c554 <PixelType::GetType(pixel::Type)>
 800c49c:	6822      	ldr	r2, [r4, #0]
 800c49e:	4601      	mov	r1, r0
 800c4a0:	4822      	ldr	r0, [pc, #136]	; (800c52c <PixelConfiguration::Print()+0xa0>)
 800c4a2:	f7fc ff1b 	bl	80092dc <printf>
 800c4a6:	6861      	ldr	r1, [r4, #4]
 800c4a8:	4821      	ldr	r0, [pc, #132]	; (800c530 <PixelConfiguration::Print()+0xa4>)
 800c4aa:	f7fc ff17 	bl	80092dc <printf>
 800c4ae:	7d63      	ldrb	r3, [r4, #21]
 800c4b0:	2b00      	cmp	r3, #0
 800c4b2:	d030      	beq.n	800c516 <PixelConfiguration::Print()+0x8a>
 800c4b4:	68a0      	ldr	r0, [r4, #8]
 800c4b6:	f000 f8a5 	bl	800c604 <PixelType::GetMap(pixel::Map)>
 800c4ba:	68a2      	ldr	r2, [r4, #8]
 800c4bc:	4601      	mov	r1, r0
 800c4be:	481d      	ldr	r0, [pc, #116]	; (800c534 <PixelConfiguration::Print()+0xa8>)
 800c4c0:	f7fc ff0c 	bl	80092dc <printf>
 800c4c4:	7c20      	ldrb	r0, [r4, #16]
 800c4c6:	f000 f8b3 	bl	800c630 <PixelType::ConvertTxH(unsigned char)>
 800c4ca:	f7fb fe83 	bl	80081d4 <__aeabi_f2d>
 800c4ce:	460b      	mov	r3, r1
 800c4d0:	7c21      	ldrb	r1, [r4, #16]
 800c4d2:	4602      	mov	r2, r0
 800c4d4:	9100      	str	r1, [sp, #0]
 800c4d6:	4818      	ldr	r0, [pc, #96]	; (800c538 <PixelConfiguration::Print()+0xac>)
 800c4d8:	f7fc ff00 	bl	80092dc <printf>
 800c4dc:	7c60      	ldrb	r0, [r4, #17]
 800c4de:	f000 f8a7 	bl	800c630 <PixelType::ConvertTxH(unsigned char)>
 800c4e2:	f7fb fe77 	bl	80081d4 <__aeabi_f2d>
 800c4e6:	460b      	mov	r3, r1
 800c4e8:	7c61      	ldrb	r1, [r4, #17]
 800c4ea:	4602      	mov	r2, r0
 800c4ec:	9100      	str	r1, [sp, #0]
 800c4ee:	4813      	ldr	r0, [pc, #76]	; (800c53c <PixelConfiguration::Print()+0xb0>)
 800c4f0:	f7fc fef4 	bl	80092dc <printf>
 800c4f4:	7d21      	ldrb	r1, [r4, #20]
 800c4f6:	4a12      	ldr	r2, [pc, #72]	; (800c540 <PixelConfiguration::Print()+0xb4>)
 800c4f8:	4b12      	ldr	r3, [pc, #72]	; (800c544 <PixelConfiguration::Print()+0xb8>)
 800c4fa:	4813      	ldr	r0, [pc, #76]	; (800c548 <PixelConfiguration::Print()+0xbc>)
 800c4fc:	2900      	cmp	r1, #0
 800c4fe:	bf14      	ite	ne
 800c500:	4611      	movne	r1, r2
 800c502:	4619      	moveq	r1, r3
 800c504:	f7fc feea 	bl	80092dc <printf>
 800c508:	68e1      	ldr	r1, [r4, #12]
 800c50a:	4810      	ldr	r0, [pc, #64]	; (800c54c <PixelConfiguration::Print()+0xc0>)
 800c50c:	b002      	add	sp, #8
 800c50e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c512:	f7fc bee3 	b.w	80092dc <printf>
 800c516:	6823      	ldr	r3, [r4, #0]
 800c518:	3b0b      	subs	r3, #11
 800c51a:	2b01      	cmp	r3, #1
 800c51c:	d8ea      	bhi.n	800c4f4 <PixelConfiguration::Print()+0x68>
 800c51e:	7ca1      	ldrb	r1, [r4, #18]
 800c520:	480b      	ldr	r0, [pc, #44]	; (800c550 <PixelConfiguration::Print()+0xc4>)
 800c522:	f7fc fedb 	bl	80092dc <printf>
 800c526:	e7e5      	b.n	800c4f4 <PixelConfiguration::Print()+0x68>
 800c528:	0801475b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, lr}
 800c52c:	08014770 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, lr}
 800c530:	08014784 	stmdaeq	r1, {r2, r7, r8, r9, sl, lr}
 800c534:	08014793 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, lr}
 800c538:	080147a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, sl, lr}
 800c53c:	080147bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, lr}
 800c540:	08014514 	stmdaeq	r1, {r2, r4, r8, sl, lr}
 800c544:	08014518 	stmdaeq	r1, {r3, r4, r8, sl, lr}
 800c548:	080147ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, lr}
 800c54c:	08014804 	stmdaeq	r1, {r2, fp, lr}
 800c550:	080147d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, lr}

0800c554 <PixelType::GetType(pixel::Type)>:
 800c554:	280d      	cmp	r0, #13
 800c556:	bfda      	itte	le
 800c558:	4b02      	ldrle	r3, [pc, #8]	; (800c564 <PixelType::GetType(pixel::Type)+0x10>)
 800c55a:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800c55e:	4802      	ldrgt	r0, [pc, #8]	; (800c568 <PixelType::GetType(pixel::Type)+0x14>)
 800c560:	4770      	bx	lr
 800c562:	bf00      	nop
 800c564:	0801505c 	stmdaeq	r1, {r2, r3, r4, r6, ip, lr}
 800c568:	08015028 	stmdaeq	r1, {r3, r5, ip, lr}

0800c56c <PixelType::GetType(char const*)>:
 800c56c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c56e:	4604      	mov	r4, r0
 800c570:	2000      	movs	r0, #0
 800c572:	490f      	ldr	r1, [pc, #60]	; (800c5b0 <PixelType::GetType(char const*)+0x44>)
 800c574:	1e67      	subs	r7, r4, #1
 800c576:	1e4e      	subs	r6, r1, #1
 800c578:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800c57c:	4615      	mov	r5, r2
 800c57e:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800c582:	2b19      	cmp	r3, #25
 800c584:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800c588:	bf98      	it	ls
 800c58a:	f102 0520 	addls.w	r5, r2, #32
 800c58e:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800c592:	f1bc 0f19 	cmp.w	ip, #25
 800c596:	bf98      	it	ls
 800c598:	3320      	addls	r3, #32
 800c59a:	42ab      	cmp	r3, r5
 800c59c:	d005      	beq.n	800c5aa <PixelType::GetType(char const*)+0x3e>
 800c59e:	3001      	adds	r0, #1
 800c5a0:	280e      	cmp	r0, #14
 800c5a2:	f101 0108 	add.w	r1, r1, #8
 800c5a6:	d1e5      	bne.n	800c574 <PixelType::GetType(char const*)+0x8>
 800c5a8:	e001      	b.n	800c5ae <PixelType::GetType(char const*)+0x42>
 800c5aa:	2a00      	cmp	r2, #0
 800c5ac:	d1e4      	bne.n	800c578 <PixelType::GetType(char const*)+0xc>
 800c5ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5b0:	0801505c 	stmdaeq	r1, {r2, r3, r4, r6, ip, lr}

0800c5b4 <PixelType::GetMap(char const*)>:
 800c5b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c5b6:	4605      	mov	r5, r0
 800c5b8:	2000      	movs	r0, #0
 800c5ba:	4b11      	ldr	r3, [pc, #68]	; (800c600 <PixelType::GetMap(char const*)+0x4c>)
 800c5bc:	1e5c      	subs	r4, r3, #1
 800c5be:	1e6e      	subs	r6, r5, #1
 800c5c0:	f103 0c02 	add.w	ip, r3, #2
 800c5c4:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800c5c8:	4617      	mov	r7, r2
 800c5ca:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800c5ce:	2919      	cmp	r1, #25
 800c5d0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800c5d4:	bf98      	it	ls
 800c5d6:	f102 0720 	addls.w	r7, r2, #32
 800c5da:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800c5de:	f1be 0f19 	cmp.w	lr, #25
 800c5e2:	bf98      	it	ls
 800c5e4:	3120      	addls	r1, #32
 800c5e6:	42b9      	cmp	r1, r7
 800c5e8:	d005      	beq.n	800c5f6 <PixelType::GetMap(char const*)+0x42>
 800c5ea:	3001      	adds	r0, #1
 800c5ec:	2806      	cmp	r0, #6
 800c5ee:	f103 0304 	add.w	r3, r3, #4
 800c5f2:	d1e3      	bne.n	800c5bc <PixelType::GetMap(char const*)+0x8>
 800c5f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5f6:	2a00      	cmp	r2, #0
 800c5f8:	d0fc      	beq.n	800c5f4 <PixelType::GetMap(char const*)+0x40>
 800c5fa:	4564      	cmp	r4, ip
 800c5fc:	d1e2      	bne.n	800c5c4 <PixelType::GetMap(char const*)+0x10>
 800c5fe:	e7f9      	b.n	800c5f4 <PixelType::GetMap(char const*)+0x40>
 800c600:	08015044 	stmdaeq	r1, {r2, r6, ip, lr}

0800c604 <PixelType::GetMap(pixel::Map)>:
 800c604:	2805      	cmp	r0, #5
 800c606:	bfda      	itte	le
 800c608:	4b02      	ldrle	r3, [pc, #8]	; (800c614 <PixelType::GetMap(pixel::Map)+0x10>)
 800c60a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800c60e:	4802      	ldrgt	r0, [pc, #8]	; (800c618 <PixelType::GetMap(pixel::Map)+0x14>)
 800c610:	4770      	bx	lr
 800c612:	bf00      	nop
 800c614:	08015044 	stmdaeq	r1, {r2, r6, ip, lr}
 800c618:	08015030 	stmdaeq	r1, {r4, r5, ip, lr}

0800c61c <PixelType::GetMap(pixel::Type)>:
 800c61c:	3801      	subs	r0, #1
 800c61e:	2809      	cmp	r0, #9
 800c620:	bf9a      	itte	ls
 800c622:	4b02      	ldrls	r3, [pc, #8]	; (800c62c <PixelType::GetMap(pixel::Type)+0x10>)
 800c624:	5618      	ldrsbls	r0, [r3, r0]
 800c626:	2002      	movhi	r0, #2
 800c628:	4770      	bx	lr
 800c62a:	bf00      	nop
 800c62c:	0801503a 	stmdaeq	r1, {r1, r3, r4, r5, ip, lr}

0800c630 <PixelType::ConvertTxH(unsigned char)>:
 800c630:	28f0      	cmp	r0, #240	; 0xf0
 800c632:	d010      	beq.n	800c656 <PixelType::ConvertTxH(unsigned char)+0x26>
 800c634:	d807      	bhi.n	800c646 <PixelType::ConvertTxH(unsigned char)+0x16>
 800c636:	28c0      	cmp	r0, #192	; 0xc0
 800c638:	d00f      	beq.n	800c65a <PixelType::ConvertTxH(unsigned char)+0x2a>
 800c63a:	28e0      	cmp	r0, #224	; 0xe0
 800c63c:	d00f      	beq.n	800c65e <PixelType::ConvertTxH(unsigned char)+0x2e>
 800c63e:	2880      	cmp	r0, #128	; 0x80
 800c640:	d113      	bne.n	800c66a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800c642:	480b      	ldr	r0, [pc, #44]	; (800c670 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800c644:	4770      	bx	lr
 800c646:	28fc      	cmp	r0, #252	; 0xfc
 800c648:	d00b      	beq.n	800c662 <PixelType::ConvertTxH(unsigned char)+0x32>
 800c64a:	28fe      	cmp	r0, #254	; 0xfe
 800c64c:	d00b      	beq.n	800c666 <PixelType::ConvertTxH(unsigned char)+0x36>
 800c64e:	28f8      	cmp	r0, #248	; 0xf8
 800c650:	d10b      	bne.n	800c66a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800c652:	4808      	ldr	r0, [pc, #32]	; (800c674 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800c654:	4770      	bx	lr
 800c656:	4808      	ldr	r0, [pc, #32]	; (800c678 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800c658:	4770      	bx	lr
 800c65a:	4808      	ldr	r0, [pc, #32]	; (800c67c <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800c65c:	4770      	bx	lr
 800c65e:	4808      	ldr	r0, [pc, #32]	; (800c680 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800c660:	4770      	bx	lr
 800c662:	4808      	ldr	r0, [pc, #32]	; (800c684 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800c664:	4770      	bx	lr
 800c666:	4808      	ldr	r0, [pc, #32]	; (800c688 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800c668:	4770      	bx	lr
 800c66a:	2000      	movs	r0, #0
 800c66c:	4770      	bx	lr
 800c66e:	bf00      	nop
 800c670:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800c674:	3f480000 	svccc	0x00480000
 800c678:	3f200000 	svccc	0x00200000
 800c67c:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800c680:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800c684:	3f700000 	svccc	0x00700000
 800c688:	3f8c0000 	svccc	0x008c0000

0800c68c <PixelType::ConvertTxH(float)>:
 800c68c:	b510      	push	{r4, lr}
 800c68e:	491d      	ldr	r1, [pc, #116]	; (800c704 <PixelType::ConvertTxH(float)+0x78>)
 800c690:	4604      	mov	r4, r0
 800c692:	f7fb fbd3 	bl	8007e3c <__aeabi_fcmplt>
 800c696:	bb30      	cbnz	r0, 800c6e6 <PixelType::ConvertTxH(float)+0x5a>
 800c698:	4620      	mov	r0, r4
 800c69a:	491b      	ldr	r1, [pc, #108]	; (800c708 <PixelType::ConvertTxH(float)+0x7c>)
 800c69c:	f7fb fbce 	bl	8007e3c <__aeabi_fcmplt>
 800c6a0:	bb18      	cbnz	r0, 800c6ea <PixelType::ConvertTxH(float)+0x5e>
 800c6a2:	4620      	mov	r0, r4
 800c6a4:	4919      	ldr	r1, [pc, #100]	; (800c70c <PixelType::ConvertTxH(float)+0x80>)
 800c6a6:	f7fb fbc9 	bl	8007e3c <__aeabi_fcmplt>
 800c6aa:	bb00      	cbnz	r0, 800c6ee <PixelType::ConvertTxH(float)+0x62>
 800c6ac:	4620      	mov	r0, r4
 800c6ae:	4918      	ldr	r1, [pc, #96]	; (800c710 <PixelType::ConvertTxH(float)+0x84>)
 800c6b0:	f7fb fbc4 	bl	8007e3c <__aeabi_fcmplt>
 800c6b4:	b9e8      	cbnz	r0, 800c6f2 <PixelType::ConvertTxH(float)+0x66>
 800c6b6:	4620      	mov	r0, r4
 800c6b8:	4916      	ldr	r1, [pc, #88]	; (800c714 <PixelType::ConvertTxH(float)+0x88>)
 800c6ba:	f7fb fbbf 	bl	8007e3c <__aeabi_fcmplt>
 800c6be:	b9d0      	cbnz	r0, 800c6f6 <PixelType::ConvertTxH(float)+0x6a>
 800c6c0:	4620      	mov	r0, r4
 800c6c2:	4915      	ldr	r1, [pc, #84]	; (800c718 <PixelType::ConvertTxH(float)+0x8c>)
 800c6c4:	f7fb fbba 	bl	8007e3c <__aeabi_fcmplt>
 800c6c8:	b9b8      	cbnz	r0, 800c6fa <PixelType::ConvertTxH(float)+0x6e>
 800c6ca:	4620      	mov	r0, r4
 800c6cc:	4913      	ldr	r1, [pc, #76]	; (800c71c <PixelType::ConvertTxH(float)+0x90>)
 800c6ce:	f7fb fbb5 	bl	8007e3c <__aeabi_fcmplt>
 800c6d2:	b9a0      	cbnz	r0, 800c6fe <PixelType::ConvertTxH(float)+0x72>
 800c6d4:	4620      	mov	r0, r4
 800c6d6:	4912      	ldr	r1, [pc, #72]	; (800c720 <PixelType::ConvertTxH(float)+0x94>)
 800c6d8:	f7fb fbb0 	bl	8007e3c <__aeabi_fcmplt>
 800c6dc:	2800      	cmp	r0, #0
 800c6de:	bf14      	ite	ne
 800c6e0:	20fe      	movne	r0, #254	; 0xfe
 800c6e2:	2000      	moveq	r0, #0
 800c6e4:	bd10      	pop	{r4, pc}
 800c6e6:	2000      	movs	r0, #0
 800c6e8:	e7fc      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6ea:	2080      	movs	r0, #128	; 0x80
 800c6ec:	e7fa      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6ee:	20c0      	movs	r0, #192	; 0xc0
 800c6f0:	e7f8      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6f2:	20e0      	movs	r0, #224	; 0xe0
 800c6f4:	e7f6      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6f6:	20f0      	movs	r0, #240	; 0xf0
 800c6f8:	e7f4      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6fa:	20f8      	movs	r0, #248	; 0xf8
 800c6fc:	e7f2      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c6fe:	20fc      	movs	r0, #252	; 0xfc
 800c700:	e7f0      	b.n	800c6e4 <PixelType::ConvertTxH(float)+0x58>
 800c702:	bf00      	nop
 800c704:	3da00000 	stccc	0, cr0, [r0]
 800c708:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800c70c:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800c710:	3f0c0000 	svccc	0x000c0000
 800c714:	3f340000 	svccc	0x00340000
 800c718:	3f5c0000 	svccc	0x005c0000
 800c71c:	3f820000 	svccc	0x00820000
 800c720:	3f960000 	svccc	0x00960000

0800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800c724:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c726:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800c72a:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800c72e:	b2cc      	uxtb	r4, r1
 800c730:	490e      	ldr	r1, [pc, #56]	; (800c76c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x48>)
 800c732:	4605      	mov	r5, r0
 800c734:	6808      	ldr	r0, [r1, #0]
 800c736:	6801      	ldr	r1, [r0, #0]
 800c738:	2907      	cmp	r1, #7
 800c73a:	d005      	beq.n	800c748 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800c73c:	4629      	mov	r1, r5
 800c73e:	9400      	str	r4, [sp, #0]
 800c740:	f000 fa7c 	bl	800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800c744:	b003      	add	sp, #12
 800c746:	bd30      	pop	{r4, r5, pc}
 800c748:	429a      	cmp	r2, r3
 800c74a:	f04f 0100 	mov.w	r1, #0
 800c74e:	d109      	bne.n	800c764 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800c750:	42a2      	cmp	r2, r4
 800c752:	d107      	bne.n	800c764 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800c754:	e9cd 1200 	strd	r1, r2, [sp]
 800c758:	460b      	mov	r3, r1
 800c75a:	460a      	mov	r2, r1
 800c75c:	4629      	mov	r1, r5
 800c75e:	f000 fe9f 	bl	800d4a0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c762:	e7ef      	b.n	800c744 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x20>
 800c764:	e9cd 4100 	strd	r4, r1, [sp]
 800c768:	e7f8      	b.n	800c75c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x38>
 800c76a:	bf00      	nop
 800c76c:	20000c88 	andcs	r0, r0, r8, lsl #25

0800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800c770:	b538      	push	{r3, r4, r5, lr}
 800c772:	2400      	movs	r4, #0
 800c774:	4d05      	ldr	r5, [pc, #20]	; (800c78c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800c776:	682b      	ldr	r3, [r5, #0]
 800c778:	429c      	cmp	r4, r3
 800c77a:	d300      	bcc.n	800c77e <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0xe>
 800c77c:	bd38      	pop	{r3, r4, r5, pc}
 800c77e:	4620      	mov	r0, r4
 800c780:	2100      	movs	r1, #0
 800c782:	f7ff ffcf 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800c786:	3401      	adds	r4, #1
 800c788:	e7f5      	b.n	800c776 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800c78a:	bf00      	nop
 800c78c:	20000c84 	andcs	r0, r0, r4, lsl #25

0800c790 <PixelPatterns::PixelPatterns(unsigned int)>:
 800c790:	2901      	cmp	r1, #1
 800c792:	bf28      	it	cs
 800c794:	2101      	movcs	r1, #1
 800c796:	4b08      	ldr	r3, [pc, #32]	; (800c7b8 <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800c798:	4a08      	ldr	r2, [pc, #32]	; (800c7bc <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800c79a:	681b      	ldr	r3, [r3, #0]
 800c79c:	6013      	str	r3, [r2, #0]
 800c79e:	4a08      	ldr	r2, [pc, #32]	; (800c7c0 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800c7a0:	6011      	str	r1, [r2, #0]
 800c7a2:	685a      	ldr	r2, [r3, #4]
 800c7a4:	4b07      	ldr	r3, [pc, #28]	; (800c7c4 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800c7a6:	601a      	str	r2, [r3, #0]
 800c7a8:	2200      	movs	r2, #0
 800c7aa:	4b07      	ldr	r3, [pc, #28]	; (800c7c8 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800c7ac:	6819      	ldr	r1, [r3, #0]
 800c7ae:	4b07      	ldr	r3, [pc, #28]	; (800c7cc <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800c7b0:	61da      	str	r2, [r3, #28]
 800c7b2:	6019      	str	r1, [r3, #0]
 800c7b4:	619a      	str	r2, [r3, #24]
 800c7b6:	4770      	bx	lr
 800c7b8:	20000c94 	mulcs	r0, r4, ip
 800c7bc:	20000c88 	andcs	r0, r0, r8, lsl #25
 800c7c0:	20000c7c 	andcs	r0, r0, ip, ror ip
 800c7c4:	20000c84 	andcs	r0, r0, r4, lsl #25
 800c7c8:	20009c84 	andcs	r9, r0, r4, lsl #25
 800c7cc:	20000c5c 	andcs	r0, r0, ip, asr ip

0800c7d0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c7d0:	b570      	push	{r4, r5, r6, lr}
 800c7d2:	460e      	mov	r6, r1
 800c7d4:	4615      	mov	r5, r2
 800c7d6:	461c      	mov	r4, r3
 800c7d8:	f7ff ffca 	bl	800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c7dc:	2301      	movs	r3, #1
 800c7de:	4905      	ldr	r1, [pc, #20]	; (800c7f4 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800c7e0:	22ff      	movs	r2, #255	; 0xff
 800c7e2:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c7e6:	61cb      	str	r3, [r1, #28]
 800c7e8:	2300      	movs	r3, #0
 800c7ea:	604d      	str	r5, [r1, #4]
 800c7ec:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800c7f0:	618c      	str	r4, [r1, #24]
 800c7f2:	bd70      	pop	{r4, r5, r6, pc}
 800c7f4:	20000c5c 	andcs	r0, r0, ip, asr ip

0800c7f8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c7f8:	b570      	push	{r4, r5, r6, lr}
 800c7fa:	460e      	mov	r6, r1
 800c7fc:	461c      	mov	r4, r3
 800c7fe:	4615      	mov	r5, r2
 800c800:	f7ff ffb6 	bl	800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c804:	2302      	movs	r3, #2
 800c806:	4908      	ldr	r1, [pc, #32]	; (800c828 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800c808:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c80c:	61cb      	str	r3, [r1, #28]
 800c80e:	9b04      	ldr	r3, [sp, #16]
 800c810:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800c814:	604b      	str	r3, [r1, #4]
 800c816:	4b05      	ldr	r3, [pc, #20]	; (800c82c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800c818:	681b      	ldr	r3, [r3, #0]
 800c81a:	610b      	str	r3, [r1, #16]
 800c81c:	2300      	movs	r3, #0
 800c81e:	614b      	str	r3, [r1, #20]
 800c820:	9b05      	ldr	r3, [sp, #20]
 800c822:	618b      	str	r3, [r1, #24]
 800c824:	bd70      	pop	{r4, r5, r6, pc}
 800c826:	bf00      	nop
 800c828:	20000c5c 	andcs	r0, r0, ip, asr ip
 800c82c:	20000c84 	andcs	r0, r0, r4, lsl #25

0800c830 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c830:	b570      	push	{r4, r5, r6, lr}
 800c832:	460e      	mov	r6, r1
 800c834:	461d      	mov	r5, r3
 800c836:	4614      	mov	r4, r2
 800c838:	f7ff ff9a 	bl	800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c83c:	2303      	movs	r3, #3
 800c83e:	4907      	ldr	r1, [pc, #28]	; (800c85c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800c840:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c844:	61cb      	str	r3, [r1, #28]
 800c846:	4b06      	ldr	r3, [pc, #24]	; (800c860 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800c848:	604d      	str	r5, [r1, #4]
 800c84a:	681b      	ldr	r3, [r3, #0]
 800c84c:	608c      	str	r4, [r1, #8]
 800c84e:	610b      	str	r3, [r1, #16]
 800c850:	2300      	movs	r3, #0
 800c852:	614b      	str	r3, [r1, #20]
 800c854:	9b04      	ldr	r3, [sp, #16]
 800c856:	618b      	str	r3, [r1, #24]
 800c858:	bd70      	pop	{r4, r5, r6, pc}
 800c85a:	bf00      	nop
 800c85c:	20000c5c 	andcs	r0, r0, ip, asr ip
 800c860:	20000c84 	andcs	r0, r0, r4, lsl #25

0800c864 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800c864:	b570      	push	{r4, r5, r6, lr}
 800c866:	460e      	mov	r6, r1
 800c868:	461d      	mov	r5, r3
 800c86a:	4614      	mov	r4, r2
 800c86c:	f7ff ff80 	bl	800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c870:	2304      	movs	r3, #4
 800c872:	4912      	ldr	r1, [pc, #72]	; (800c8bc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800c874:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c878:	604d      	str	r5, [r1, #4]
 800c87a:	4d11      	ldr	r5, [pc, #68]	; (800c8c0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800c87c:	61cb      	str	r3, [r1, #28]
 800c87e:	6828      	ldr	r0, [r5, #0]
 800c880:	608c      	str	r4, [r1, #8]
 800c882:	1e43      	subs	r3, r0, #1
 800c884:	005b      	lsls	r3, r3, #1
 800c886:	b29b      	uxth	r3, r3
 800c888:	610b      	str	r3, [r1, #16]
 800c88a:	2300      	movs	r3, #0
 800c88c:	4c0d      	ldr	r4, [pc, #52]	; (800c8c4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800c88e:	614b      	str	r3, [r1, #20]
 800c890:	6823      	ldr	r3, [r4, #0]
 800c892:	b97b      	cbnz	r3, 800c8b4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x50>
 800c894:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800c898:	4298      	cmp	r0, r3
 800c89a:	bf2c      	ite	cs
 800c89c:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800c8a0:	0080      	lslcc	r0, r0, #2
 800c8a2:	f004 fb75 	bl	8010f90 <operator new[](unsigned int)>
 800c8a6:	2200      	movs	r2, #0
 800c8a8:	682b      	ldr	r3, [r5, #0]
 800c8aa:	6020      	str	r0, [r4, #0]
 800c8ac:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c8b0:	4298      	cmp	r0, r3
 800c8b2:	d100      	bne.n	800c8b6 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800c8b4:	bd70      	pop	{r4, r5, r6, pc}
 800c8b6:	f840 2b04 	str.w	r2, [r0], #4
 800c8ba:	e7f9      	b.n	800c8b0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800c8bc:	20000c5c 	andcs	r0, r0, ip, asr ip
 800c8c0:	20000c84 	andcs	r0, r0, r4, lsl #25
 800c8c4:	20000c80 	andcs	r0, r0, r0, lsl #25

0800c8c8 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c8c8:	b570      	push	{r4, r5, r6, lr}
 800c8ca:	460e      	mov	r6, r1
 800c8cc:	461c      	mov	r4, r3
 800c8ce:	4615      	mov	r5, r2
 800c8d0:	f7ff ff4e 	bl	800c770 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c8d4:	2305      	movs	r3, #5
 800c8d6:	4907      	ldr	r1, [pc, #28]	; (800c8f4 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800c8d8:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c8dc:	61cb      	str	r3, [r1, #28]
 800c8de:	9b05      	ldr	r3, [sp, #20]
 800c8e0:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800c8e4:	604b      	str	r3, [r1, #4]
 800c8e6:	9b04      	ldr	r3, [sp, #16]
 800c8e8:	610b      	str	r3, [r1, #16]
 800c8ea:	2300      	movs	r3, #0
 800c8ec:	614b      	str	r3, [r1, #20]
 800c8ee:	9b06      	ldr	r3, [sp, #24]
 800c8f0:	618b      	str	r3, [r1, #24]
 800c8f2:	bd70      	pop	{r4, r5, r6, pc}
 800c8f4:	20000c5c 	andcs	r0, r0, ip, asr ip

0800c8f8 <PixelPatterns::Wheel(unsigned char)>:
 800c8f8:	43cb      	mvns	r3, r1
 800c8fa:	b2db      	uxtb	r3, r3
 800c8fc:	2b54      	cmp	r3, #84	; 0x54
 800c8fe:	d809      	bhi.n	800c914 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800c900:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800c904:	b2db      	uxtb	r3, r3
 800c906:	1e5a      	subs	r2, r3, #1
 800c908:	4258      	negs	r0, r3
 800c90a:	b2d2      	uxtb	r2, r2
 800c90c:	b2c0      	uxtb	r0, r0
 800c90e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800c912:	4770      	bx	lr
 800c914:	2ba9      	cmp	r3, #169	; 0xa9
 800c916:	d809      	bhi.n	800c92c <PixelPatterns::Wheel(unsigned char)+0x34>
 800c918:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800c91c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800c920:	b2c9      	uxtb	r1, r1
 800c922:	43c8      	mvns	r0, r1
 800c924:	b2c0      	uxtb	r0, r0
 800c926:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800c92a:	4770      	bx	lr
 800c92c:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800c930:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800c934:	b2c9      	uxtb	r1, r1
 800c936:	0208      	lsls	r0, r1, #8
 800c938:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800c93c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800c940:	4770      	bx	lr
	...

0800c944 <PixelPatterns::Increment(unsigned int)>:
 800c944:	4a0d      	ldr	r2, [pc, #52]	; (800c97c <PixelPatterns::Increment(unsigned int)+0x38>)
 800c946:	b510      	push	{r4, lr}
 800c948:	014c      	lsls	r4, r1, #5
 800c94a:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800c94e:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800c952:	b930      	cbnz	r0, 800c962 <PixelPatterns::Increment(unsigned int)+0x1e>
 800c954:	690a      	ldr	r2, [r1, #16]
 800c956:	3301      	adds	r3, #1
 800c958:	4293      	cmp	r3, r2
 800c95a:	bf18      	it	ne
 800c95c:	4618      	movne	r0, r3
 800c95e:	6148      	str	r0, [r1, #20]
 800c960:	bd10      	pop	{r4, pc}
 800c962:	b92b      	cbnz	r3, 800c970 <PixelPatterns::Increment(unsigned int)+0x2c>
 800c964:	4422      	add	r2, r4
 800c966:	6913      	ldr	r3, [r2, #16]
 800c968:	3b01      	subs	r3, #1
 800c96a:	b29b      	uxth	r3, r3
 800c96c:	6153      	str	r3, [r2, #20]
 800c96e:	e7f7      	b.n	800c960 <PixelPatterns::Increment(unsigned int)+0x1c>
 800c970:	3b01      	subs	r3, #1
 800c972:	614b      	str	r3, [r1, #20]
 800c974:	2b00      	cmp	r3, #0
 800c976:	d1f3      	bne.n	800c960 <PixelPatterns::Increment(unsigned int)+0x1c>
 800c978:	e7f4      	b.n	800c964 <PixelPatterns::Increment(unsigned int)+0x20>
 800c97a:	bf00      	nop
 800c97c:	20000c5c 	andcs	r0, r0, ip, asr ip

0800c980 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800c980:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c984:	4604      	mov	r4, r0
 800c986:	460d      	mov	r5, r1
 800c988:	2700      	movs	r7, #0
 800c98a:	4b10      	ldr	r3, [pc, #64]	; (800c9cc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800c98c:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800c9d0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800c990:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800c994:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800c998:	f8d8 2000 	ldr.w	r2, [r8]
 800c99c:	b2be      	uxth	r6, r7
 800c99e:	42b2      	cmp	r2, r6
 800c9a0:	f107 0701 	add.w	r7, r7, #1
 800c9a4:	d805      	bhi.n	800c9b2 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800c9a6:	4629      	mov	r1, r5
 800c9a8:	4620      	mov	r0, r4
 800c9aa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c9ae:	f7ff bfc9 	b.w	800c944 <PixelPatterns::Increment(unsigned int)>
 800c9b2:	0233      	lsls	r3, r6, #8
 800c9b4:	fbb3 f3f2 	udiv	r3, r3, r2
 800c9b8:	444b      	add	r3, r9
 800c9ba:	b2d9      	uxtb	r1, r3
 800c9bc:	4620      	mov	r0, r4
 800c9be:	f7ff ff9b 	bl	800c8f8 <PixelPatterns::Wheel(unsigned char)>
 800c9c2:	4601      	mov	r1, r0
 800c9c4:	4630      	mov	r0, r6
 800c9c6:	f7ff fead 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800c9ca:	e7e5      	b.n	800c998 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800c9cc:	20000c5c 	andcs	r0, r0, ip, asr ip
 800c9d0:	20000c84 	andcs	r0, r0, r4, lsl #25

0800c9d4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800c9d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9d8:	4605      	mov	r5, r0
 800c9da:	460c      	mov	r4, r1
 800c9dc:	f04f 0b00 	mov.w	fp, #0
 800c9e0:	4b11      	ldr	r3, [pc, #68]	; (800ca28 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800c9e2:	4e12      	ldr	r6, [pc, #72]	; (800ca2c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800c9e4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800c9e8:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800c9ec:	f8df a040 	ldr.w	sl, [pc, #64]	; 800ca30 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800c9f0:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800c9f4:	6833      	ldr	r3, [r6, #0]
 800c9f6:	fa1f f08b 	uxth.w	r0, fp
 800c9fa:	4283      	cmp	r3, r0
 800c9fc:	d805      	bhi.n	800ca0a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800c9fe:	4621      	mov	r1, r4
 800ca00:	4628      	mov	r0, r5
 800ca02:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca06:	f7ff bf9d 	b.w	800c944 <PixelPatterns::Increment(unsigned int)>
 800ca0a:	eb09 0300 	add.w	r3, r9, r0
 800ca0e:	fb0a f303 	mul.w	r3, sl, r3
 800ca12:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800ca16:	bf94      	ite	ls
 800ca18:	4639      	movls	r1, r7
 800ca1a:	4641      	movhi	r1, r8
 800ca1c:	f7ff fe82 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ca20:	f10b 0b01 	add.w	fp, fp, #1
 800ca24:	e7e6      	b.n	800c9f4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800ca26:	bf00      	nop
 800ca28:	20000c5c 	andcs	r0, r0, ip, asr ip
 800ca2c:	20000c84 	andcs	r0, r0, r4, lsl #25
 800ca30:	aaaaaaab 	bge	6ab74e4 <__stack_size+0x6ab54e4>

0800ca34 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800ca34:	b538      	push	{r3, r4, r5, lr}
 800ca36:	4605      	mov	r5, r0
 800ca38:	460c      	mov	r4, r1
 800ca3a:	4b06      	ldr	r3, [pc, #24]	; (800ca54 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800ca3c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ca40:	6899      	ldr	r1, [r3, #8]
 800ca42:	6958      	ldr	r0, [r3, #20]
 800ca44:	f7ff fe6e 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ca48:	4621      	mov	r1, r4
 800ca4a:	4628      	mov	r0, r5
 800ca4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca50:	f7ff bf78 	b.w	800c944 <PixelPatterns::Increment(unsigned int)>
 800ca54:	20000c5c 	andcs	r0, r0, ip, asr ip

0800ca58 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800ca58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca5c:	460d      	mov	r5, r1
 800ca5e:	f04f 0900 	mov.w	r9, #0
 800ca62:	4a27      	ldr	r2, [pc, #156]	; (800cb00 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800ca64:	b085      	sub	sp, #20
 800ca66:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800ca6a:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800ca6e:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800ca72:	00b3      	lsls	r3, r6, #2
 800ca74:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800cb04 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800ca78:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800cb08 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800ca7c:	9002      	str	r0, [sp, #8]
 800ca7e:	9301      	str	r3, [sp, #4]
 800ca80:	1bbf      	subs	r7, r7, r6
 800ca82:	f8da 1000 	ldr.w	r1, [sl]
 800ca86:	fa1f f489 	uxth.w	r4, r9
 800ca8a:	42a1      	cmp	r1, r4
 800ca8c:	d806      	bhi.n	800ca9c <PixelPatterns::ScannerUpdate(unsigned int)+0x44>
 800ca8e:	4629      	mov	r1, r5
 800ca90:	9802      	ldr	r0, [sp, #8]
 800ca92:	b005      	add	sp, #20
 800ca94:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca98:	f7ff bf54 	b.w	800c944 <PixelPatterns::Increment(unsigned int)>
 800ca9c:	42a6      	cmp	r6, r4
 800ca9e:	d10b      	bne.n	800cab8 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800caa0:	4659      	mov	r1, fp
 800caa2:	4630      	mov	r0, r6
 800caa4:	f7ff fe3e 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800caa8:	f8d8 1000 	ldr.w	r1, [r8]
 800caac:	9b01      	ldr	r3, [sp, #4]
 800caae:	f841 b003 	str.w	fp, [r1, r3]
 800cab2:	f109 0901 	add.w	r9, r9, #1
 800cab6:	e7e4      	b.n	800ca82 <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800cab8:	42a7      	cmp	r7, r4
 800caba:	d108      	bne.n	800cace <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800cabc:	4659      	mov	r1, fp
 800cabe:	4638      	mov	r0, r7
 800cac0:	f7ff fe30 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800cac4:	f8d8 1000 	ldr.w	r1, [r8]
 800cac8:	f841 b024 	str.w	fp, [r1, r4, lsl #2]
 800cacc:	e7f1      	b.n	800cab2 <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800cace:	f8d8 1000 	ldr.w	r1, [r8]
 800cad2:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800cad6:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800cada:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800cade:	0209      	lsls	r1, r1, #8
 800cae0:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800cae4:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800cae8:	4301      	orrs	r1, r0
 800caea:	4620      	mov	r0, r4
 800caec:	9103      	str	r1, [sp, #12]
 800caee:	f7ff fe19 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800caf2:	f8d8 0000 	ldr.w	r0, [r8]
 800caf6:	9903      	ldr	r1, [sp, #12]
 800caf8:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800cafc:	e7d9      	b.n	800cab2 <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800cafe:	bf00      	nop
 800cb00:	20000c5c 	andcs	r0, r0, ip, asr ip
 800cb04:	20000c84 	andcs	r0, r0, r4, lsl #25
 800cb08:	20000c80 	andcs	r0, r0, r0, lsl #25

0800cb0c <PixelPatterns::FadeUpdate(unsigned int)>:
 800cb0c:	4a21      	ldr	r2, [pc, #132]	; (800cb94 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800cb0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb12:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800cb16:	4605      	mov	r5, r0
 800cb18:	e9d2 0704 	ldrd	r0, r7, [r2, #16]
 800cb1c:	460c      	mov	r4, r1
 800cb1e:	e9d2 1302 	ldrd	r1, r3, [r2, #8]
 800cb22:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800cb26:	437a      	muls	r2, r7
 800cb28:	1bc6      	subs	r6, r0, r7
 800cb2a:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 800cb2e:	fb06 220c 	mla	r2, r6, ip, r2
 800cb32:	fbb2 f2f0 	udiv	r2, r2, r0
 800cb36:	0212      	lsls	r2, r2, #8
 800cb38:	fa1f fc82 	uxth.w	ip, r2
 800cb3c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800cb40:	437a      	muls	r2, r7
 800cb42:	b2db      	uxtb	r3, r3
 800cb44:	437b      	muls	r3, r7
 800cb46:	f3c1 4e07 	ubfx	lr, r1, #16, #8
 800cb4a:	fb06 220e 	mla	r2, r6, lr, r2
 800cb4e:	b2c9      	uxtb	r1, r1
 800cb50:	fb06 3301 	mla	r3, r6, r1, r3
 800cb54:	fbb2 f2f0 	udiv	r2, r2, r0
 800cb58:	fbb3 f3f0 	udiv	r3, r3, r0
 800cb5c:	2700      	movs	r7, #0
 800cb5e:	0412      	lsls	r2, r2, #16
 800cb60:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800cb64:	ea4c 0202 	orr.w	r2, ip, r2
 800cb68:	b2db      	uxtb	r3, r3
 800cb6a:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800cb98 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800cb6e:	ea42 0603 	orr.w	r6, r2, r3
 800cb72:	f8d8 3000 	ldr.w	r3, [r8]
 800cb76:	429f      	cmp	r7, r3
 800cb78:	d305      	bcc.n	800cb86 <PixelPatterns::FadeUpdate(unsigned int)+0x7a>
 800cb7a:	4621      	mov	r1, r4
 800cb7c:	4628      	mov	r0, r5
 800cb7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cb82:	f7ff bedf 	b.w	800c944 <PixelPatterns::Increment(unsigned int)>
 800cb86:	4638      	mov	r0, r7
 800cb88:	4631      	mov	r1, r6
 800cb8a:	f7ff fdcb 	bl	800c724 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800cb8e:	3701      	adds	r7, #1
 800cb90:	e7ef      	b.n	800cb72 <PixelPatterns::FadeUpdate(unsigned int)+0x66>
 800cb92:	bf00      	nop
 800cb94:	20000c5c 	andcs	r0, r0, ip, asr ip
 800cb98:	20000c84 	andcs	r0, r0, r4, lsl #25

0800cb9c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800cb9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb9e:	4b12      	ldr	r3, [pc, #72]	; (800cbe8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800cba0:	014e      	lsls	r6, r1, #5
 800cba2:	599c      	ldr	r4, [r3, r6]
 800cba4:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800cba8:	686f      	ldr	r7, [r5, #4]
 800cbaa:	1b14      	subs	r4, r2, r4
 800cbac:	42bc      	cmp	r4, r7
 800cbae:	d319      	bcc.n	800cbe4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800cbb0:	519a      	str	r2, [r3, r6]
 800cbb2:	69eb      	ldr	r3, [r5, #28]
 800cbb4:	3b01      	subs	r3, #1
 800cbb6:	2b04      	cmp	r3, #4
 800cbb8:	d814      	bhi.n	800cbe4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800cbba:	e8df f003 	tbb	[pc, r3]
 800cbbe:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800cbc2:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800cbc6:	fedc 2001 	cdp2	0, 13, cr2, cr12, cr1, {0}
 800cbca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbcc:	f7ff ff02 	bl	800c9d4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800cbd0:	e7fa      	b.n	800cbc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbd2:	f7ff ff2f 	bl	800ca34 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800cbd6:	e7f7      	b.n	800cbc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbd8:	f7ff ff3e 	bl	800ca58 <PixelPatterns::ScannerUpdate(unsigned int)>
 800cbdc:	e7f4      	b.n	800cbc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbde:	f7ff ff95 	bl	800cb0c <PixelPatterns::FadeUpdate(unsigned int)>
 800cbe2:	e7f1      	b.n	800cbc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbe4:	2000      	movs	r0, #0
 800cbe6:	e7f0      	b.n	800cbca <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800cbe8:	20000c5c 	andcs	r0, r0, ip, asr ip

0800cbec <PixelPatterns::Run()>:
 800cbec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbf0:	4606      	mov	r6, r0
 800cbf2:	f005 feb1 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800cbf6:	4604      	mov	r4, r0
 800cbf8:	b9c0      	cbnz	r0, 800cc2c <PixelPatterns::Run()+0x40>
 800cbfa:	4605      	mov	r5, r0
 800cbfc:	4b0c      	ldr	r3, [pc, #48]	; (800cc30 <PixelPatterns::Run()+0x44>)
 800cbfe:	4f0d      	ldr	r7, [pc, #52]	; (800cc34 <PixelPatterns::Run()+0x48>)
 800cc00:	f8d3 8000 	ldr.w	r8, [r3]
 800cc04:	683b      	ldr	r3, [r7, #0]
 800cc06:	b2e9      	uxtb	r1, r5
 800cc08:	428b      	cmp	r3, r1
 800cc0a:	f105 0501 	add.w	r5, r5, #1
 800cc0e:	d806      	bhi.n	800cc1e <PixelPatterns::Run()+0x32>
 800cc10:	b164      	cbz	r4, 800cc2c <PixelPatterns::Run()+0x40>
 800cc12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cc16:	4b08      	ldr	r3, [pc, #32]	; (800cc38 <PixelPatterns::Run()+0x4c>)
 800cc18:	6818      	ldr	r0, [r3, #0]
 800cc1a:	f000 bdb1 	b.w	800d780 <WS28xx::Update()>
 800cc1e:	4642      	mov	r2, r8
 800cc20:	4630      	mov	r0, r6
 800cc22:	f7ff ffbb 	bl	800cb9c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800cc26:	4304      	orrs	r4, r0
 800cc28:	b2e4      	uxtb	r4, r4
 800cc2a:	e7eb      	b.n	800cc04 <PixelPatterns::Run()+0x18>
 800cc2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc30:	20009c84 	andcs	r9, r0, r4, lsl #25
 800cc34:	20000c7c 	andcs	r0, r0, ip, ror ip
 800cc38:	20000c88 	andcs	r0, r0, r8, lsl #25

0800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800cc3c:	b570      	push	{r4, r5, r6, lr}
 800cc3e:	6984      	ldr	r4, [r0, #24]
 800cc40:	f89d e010 	ldrb.w	lr, [sp, #16]
 800cc44:	f814 c003 	ldrb.w	ip, [r4, r3]
 800cc48:	7d43      	ldrb	r3, [r0, #21]
 800cc4a:	5ca2      	ldrb	r2, [r4, r2]
 800cc4c:	f814 e00e 	ldrb.w	lr, [r4, lr]
 800cc50:	b993      	cbnz	r3, 800cc78 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3c>
 800cc52:	6803      	ldr	r3, [r0, #0]
 800cc54:	f1a3 040b 	sub.w	r4, r3, #11
 800cc58:	2c01      	cmp	r4, #1
 800cc5a:	d93e      	bls.n	800ccda <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x9e>
 800cc5c:	b9db      	cbnz	r3, 800cc96 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a>
 800cc5e:	6a03      	ldr	r3, [r0, #32]
 800cc60:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800cc64:	545a      	strb	r2, [r3, r1]
 800cc66:	6a03      	ldr	r3, [r0, #32]
 800cc68:	440b      	add	r3, r1
 800cc6a:	f883 c001 	strb.w	ip, [r3, #1]
 800cc6e:	6a03      	ldr	r3, [r0, #32]
 800cc70:	440b      	add	r3, r1
 800cc72:	f883 e002 	strb.w	lr, [r3, #2]
 800cc76:	bd70      	pop	{r4, r5, r6, pc}
 800cc78:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800cc7c:	00cb      	lsls	r3, r1, #3
 800cc7e:	6881      	ldr	r1, [r0, #8]
 800cc80:	2905      	cmp	r1, #5
 800cc82:	f200 80ff 	bhi.w	800ce84 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x248>
 800cc86:	e8df f011 	tbh	[pc, r1, lsl #1]
 800cc8a:	028400fd 	addeq	r0, r4, #253	; 0xfd
 800cc8e:	038b030b 	orreq	r0, fp, #738197504	; 0x2c000000
 800cc92:	01c1003c 	biceq	r0, r1, ip, lsr r0
 800cc96:	ea6f 039e 	mvn.w	r3, lr, lsr #2
 800cc9a:	ea6f 151c 	mvn.w	r5, ip, lsr #4
 800cc9e:	f082 06c0 	eor.w	r6, r2, #192	; 0xc0
 800cca2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800cca6:	ea43 1396 	orr.w	r3, r3, r6, lsr #6
 800ccaa:	f005 050c 	and.w	r5, r5, #12
 800ccae:	6a04      	ldr	r4, [r0, #32]
 800ccb0:	432b      	orrs	r3, r5
 800ccb2:	3101      	adds	r1, #1
 800ccb4:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800ccb8:	f804 3021 	strb.w	r3, [r4, r1, lsl #2]
 800ccbc:	6a03      	ldr	r3, [r0, #32]
 800ccbe:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccc2:	f883 e001 	strb.w	lr, [r3, #1]
 800ccc6:	6a03      	ldr	r3, [r0, #32]
 800ccc8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800cccc:	f883 c002 	strb.w	ip, [r3, #2]
 800ccd0:	6a03      	ldr	r3, [r0, #32]
 800ccd2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccd6:	70da      	strb	r2, [r3, #3]
 800ccd8:	bd70      	pop	{r4, r5, r6, pc}
 800ccda:	6a03      	ldr	r3, [r0, #32]
 800ccdc:	7c84      	ldrb	r4, [r0, #18]
 800ccde:	3101      	adds	r1, #1
 800cce0:	f803 4021 	strb.w	r4, [r3, r1, lsl #2]
 800cce4:	6a03      	ldr	r3, [r0, #32]
 800cce6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccea:	705a      	strb	r2, [r3, #1]
 800ccec:	6a03      	ldr	r3, [r0, #32]
 800ccee:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccf2:	f883 c002 	strb.w	ip, [r3, #2]
 800ccf6:	6a03      	ldr	r3, [r0, #32]
 800ccf8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccfc:	f883 e003 	strb.w	lr, [r3, #3]
 800cd00:	bd70      	pop	{r4, r5, r6, pc}
 800cd02:	7c01      	ldrb	r1, [r0, #16]
 800cd04:	7c44      	ldrb	r4, [r0, #17]
 800cd06:	6a05      	ldr	r5, [r0, #32]
 800cd08:	1c5e      	adds	r6, r3, #1
 800cd0a:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800cd0e:	bf0c      	ite	eq
 800cd10:	55a9      	strbeq	r1, [r5, r6]
 800cd12:	55ac      	strbne	r4, [r5, r6]
 800cd14:	6a05      	ldr	r5, [r0, #32]
 800cd16:	1c9e      	adds	r6, r3, #2
 800cd18:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800cd1c:	bf0c      	ite	eq
 800cd1e:	55a9      	strbeq	r1, [r5, r6]
 800cd20:	55ac      	strbne	r4, [r5, r6]
 800cd22:	6a05      	ldr	r5, [r0, #32]
 800cd24:	1cde      	adds	r6, r3, #3
 800cd26:	f01e 0f20 	tst.w	lr, #32
 800cd2a:	bf0c      	ite	eq
 800cd2c:	55a9      	strbeq	r1, [r5, r6]
 800cd2e:	55ac      	strbne	r4, [r5, r6]
 800cd30:	6a05      	ldr	r5, [r0, #32]
 800cd32:	1d1e      	adds	r6, r3, #4
 800cd34:	f01e 0f10 	tst.w	lr, #16
 800cd38:	bf0c      	ite	eq
 800cd3a:	55a9      	strbeq	r1, [r5, r6]
 800cd3c:	55ac      	strbne	r4, [r5, r6]
 800cd3e:	6a05      	ldr	r5, [r0, #32]
 800cd40:	1d5e      	adds	r6, r3, #5
 800cd42:	f01e 0f08 	tst.w	lr, #8
 800cd46:	bf0c      	ite	eq
 800cd48:	55a9      	strbeq	r1, [r5, r6]
 800cd4a:	55ac      	strbne	r4, [r5, r6]
 800cd4c:	6a05      	ldr	r5, [r0, #32]
 800cd4e:	1d9e      	adds	r6, r3, #6
 800cd50:	f01e 0f04 	tst.w	lr, #4
 800cd54:	bf0c      	ite	eq
 800cd56:	55a9      	strbeq	r1, [r5, r6]
 800cd58:	55ac      	strbne	r4, [r5, r6]
 800cd5a:	6a05      	ldr	r5, [r0, #32]
 800cd5c:	1dde      	adds	r6, r3, #7
 800cd5e:	f01e 0f02 	tst.w	lr, #2
 800cd62:	bf0c      	ite	eq
 800cd64:	55a9      	strbeq	r1, [r5, r6]
 800cd66:	55ac      	strbne	r4, [r5, r6]
 800cd68:	f01e 0f01 	tst.w	lr, #1
 800cd6c:	bf14      	ite	ne
 800cd6e:	6a01      	ldrne	r1, [r0, #32]
 800cd70:	6a04      	ldreq	r4, [r0, #32]
 800cd72:	f103 0508 	add.w	r5, r3, #8
 800cd76:	bf14      	ite	ne
 800cd78:	554c      	strbne	r4, [r1, r5]
 800cd7a:	5561      	strbeq	r1, [r4, r5]
 800cd7c:	7c01      	ldrb	r1, [r0, #16]
 800cd7e:	7c44      	ldrb	r4, [r0, #17]
 800cd80:	6a06      	ldr	r6, [r0, #32]
 800cd82:	f012 0f80 	tst.w	r2, #128	; 0x80
 800cd86:	f103 0509 	add.w	r5, r3, #9
 800cd8a:	bf0c      	ite	eq
 800cd8c:	5571      	strbeq	r1, [r6, r5]
 800cd8e:	5574      	strbne	r4, [r6, r5]
 800cd90:	6a06      	ldr	r6, [r0, #32]
 800cd92:	f012 0f40 	tst.w	r2, #64	; 0x40
 800cd96:	f103 050a 	add.w	r5, r3, #10
 800cd9a:	bf0c      	ite	eq
 800cd9c:	5571      	strbeq	r1, [r6, r5]
 800cd9e:	5574      	strbne	r4, [r6, r5]
 800cda0:	6a06      	ldr	r6, [r0, #32]
 800cda2:	f012 0f20 	tst.w	r2, #32
 800cda6:	f103 050b 	add.w	r5, r3, #11
 800cdaa:	bf0c      	ite	eq
 800cdac:	5571      	strbeq	r1, [r6, r5]
 800cdae:	5574      	strbne	r4, [r6, r5]
 800cdb0:	6a06      	ldr	r6, [r0, #32]
 800cdb2:	f012 0f10 	tst.w	r2, #16
 800cdb6:	f103 050c 	add.w	r5, r3, #12
 800cdba:	bf0c      	ite	eq
 800cdbc:	5571      	strbeq	r1, [r6, r5]
 800cdbe:	5574      	strbne	r4, [r6, r5]
 800cdc0:	6a06      	ldr	r6, [r0, #32]
 800cdc2:	f012 0f08 	tst.w	r2, #8
 800cdc6:	f103 050d 	add.w	r5, r3, #13
 800cdca:	bf0c      	ite	eq
 800cdcc:	5571      	strbeq	r1, [r6, r5]
 800cdce:	5574      	strbne	r4, [r6, r5]
 800cdd0:	6a06      	ldr	r6, [r0, #32]
 800cdd2:	f012 0f04 	tst.w	r2, #4
 800cdd6:	f103 050e 	add.w	r5, r3, #14
 800cdda:	bf0c      	ite	eq
 800cddc:	5571      	strbeq	r1, [r6, r5]
 800cdde:	5574      	strbne	r4, [r6, r5]
 800cde0:	6a06      	ldr	r6, [r0, #32]
 800cde2:	f012 0f02 	tst.w	r2, #2
 800cde6:	f103 050f 	add.w	r5, r3, #15
 800cdea:	bf0c      	ite	eq
 800cdec:	5571      	strbeq	r1, [r6, r5]
 800cdee:	5574      	strbne	r4, [r6, r5]
 800cdf0:	f012 0f01 	tst.w	r2, #1
 800cdf4:	6a02      	ldr	r2, [r0, #32]
 800cdf6:	f103 0510 	add.w	r5, r3, #16
 800cdfa:	bf14      	ite	ne
 800cdfc:	5554      	strbne	r4, [r2, r5]
 800cdfe:	5551      	strbeq	r1, [r2, r5]
 800ce00:	6a05      	ldr	r5, [r0, #32]
 800ce02:	7c02      	ldrb	r2, [r0, #16]
 800ce04:	7c41      	ldrb	r1, [r0, #17]
 800ce06:	f103 0411 	add.w	r4, r3, #17
 800ce0a:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ce0e:	bf0c      	ite	eq
 800ce10:	552a      	strbeq	r2, [r5, r4]
 800ce12:	5529      	strbne	r1, [r5, r4]
 800ce14:	6a05      	ldr	r5, [r0, #32]
 800ce16:	f103 0412 	add.w	r4, r3, #18
 800ce1a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ce1e:	bf0c      	ite	eq
 800ce20:	552a      	strbeq	r2, [r5, r4]
 800ce22:	5529      	strbne	r1, [r5, r4]
 800ce24:	6a05      	ldr	r5, [r0, #32]
 800ce26:	f103 0413 	add.w	r4, r3, #19
 800ce2a:	f01c 0f20 	tst.w	ip, #32
 800ce2e:	bf0c      	ite	eq
 800ce30:	552a      	strbeq	r2, [r5, r4]
 800ce32:	5529      	strbne	r1, [r5, r4]
 800ce34:	6a05      	ldr	r5, [r0, #32]
 800ce36:	f103 0414 	add.w	r4, r3, #20
 800ce3a:	f01c 0f10 	tst.w	ip, #16
 800ce3e:	bf0c      	ite	eq
 800ce40:	552a      	strbeq	r2, [r5, r4]
 800ce42:	5529      	strbne	r1, [r5, r4]
 800ce44:	6a05      	ldr	r5, [r0, #32]
 800ce46:	f103 0415 	add.w	r4, r3, #21
 800ce4a:	f01c 0f08 	tst.w	ip, #8
 800ce4e:	bf0c      	ite	eq
 800ce50:	552a      	strbeq	r2, [r5, r4]
 800ce52:	5529      	strbne	r1, [r5, r4]
 800ce54:	6a05      	ldr	r5, [r0, #32]
 800ce56:	f103 0416 	add.w	r4, r3, #22
 800ce5a:	f01c 0f04 	tst.w	ip, #4
 800ce5e:	bf0c      	ite	eq
 800ce60:	552a      	strbeq	r2, [r5, r4]
 800ce62:	5529      	strbne	r1, [r5, r4]
 800ce64:	6a05      	ldr	r5, [r0, #32]
 800ce66:	f103 0417 	add.w	r4, r3, #23
 800ce6a:	f01c 0f02 	tst.w	ip, #2
 800ce6e:	bf0c      	ite	eq
 800ce70:	552a      	strbeq	r2, [r5, r4]
 800ce72:	5529      	strbne	r1, [r5, r4]
 800ce74:	3318      	adds	r3, #24
 800ce76:	f01c 0f01 	tst.w	ip, #1
 800ce7a:	f000 830d 	beq.w	800d498 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x85c>
 800ce7e:	6a02      	ldr	r2, [r0, #32]
 800ce80:	54d1      	strb	r1, [r2, r3]
 800ce82:	bd70      	pop	{r4, r5, r6, pc}
 800ce84:	7c01      	ldrb	r1, [r0, #16]
 800ce86:	7c44      	ldrb	r4, [r0, #17]
 800ce88:	6a05      	ldr	r5, [r0, #32]
 800ce8a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800ce8e:	f103 0601 	add.w	r6, r3, #1
 800ce92:	bf14      	ite	ne
 800ce94:	55ac      	strbne	r4, [r5, r6]
 800ce96:	55a9      	strbeq	r1, [r5, r6]
 800ce98:	6a05      	ldr	r5, [r0, #32]
 800ce9a:	f012 0f40 	tst.w	r2, #64	; 0x40
 800ce9e:	f103 0602 	add.w	r6, r3, #2
 800cea2:	bf14      	ite	ne
 800cea4:	55ac      	strbne	r4, [r5, r6]
 800cea6:	55a9      	strbeq	r1, [r5, r6]
 800cea8:	6a05      	ldr	r5, [r0, #32]
 800ceaa:	f012 0f20 	tst.w	r2, #32
 800ceae:	f103 0603 	add.w	r6, r3, #3
 800ceb2:	bf14      	ite	ne
 800ceb4:	55ac      	strbne	r4, [r5, r6]
 800ceb6:	55a9      	strbeq	r1, [r5, r6]
 800ceb8:	6a05      	ldr	r5, [r0, #32]
 800ceba:	f012 0f10 	tst.w	r2, #16
 800cebe:	f103 0604 	add.w	r6, r3, #4
 800cec2:	bf14      	ite	ne
 800cec4:	55ac      	strbne	r4, [r5, r6]
 800cec6:	55a9      	strbeq	r1, [r5, r6]
 800cec8:	6a05      	ldr	r5, [r0, #32]
 800ceca:	f012 0f08 	tst.w	r2, #8
 800cece:	f103 0605 	add.w	r6, r3, #5
 800ced2:	bf14      	ite	ne
 800ced4:	55ac      	strbne	r4, [r5, r6]
 800ced6:	55a9      	strbeq	r1, [r5, r6]
 800ced8:	6a05      	ldr	r5, [r0, #32]
 800ceda:	f012 0f04 	tst.w	r2, #4
 800cede:	f103 0606 	add.w	r6, r3, #6
 800cee2:	bf14      	ite	ne
 800cee4:	55ac      	strbne	r4, [r5, r6]
 800cee6:	55a9      	strbeq	r1, [r5, r6]
 800cee8:	6a05      	ldr	r5, [r0, #32]
 800ceea:	f012 0f02 	tst.w	r2, #2
 800ceee:	f103 0607 	add.w	r6, r3, #7
 800cef2:	bf14      	ite	ne
 800cef4:	55ac      	strbne	r4, [r5, r6]
 800cef6:	55a9      	strbeq	r1, [r5, r6]
 800cef8:	f012 0f01 	tst.w	r2, #1
 800cefc:	6a02      	ldr	r2, [r0, #32]
 800cefe:	f103 0508 	add.w	r5, r3, #8
 800cf02:	bf14      	ite	ne
 800cf04:	5554      	strbne	r4, [r2, r5]
 800cf06:	5551      	strbeq	r1, [r2, r5]
 800cf08:	7c41      	ldrb	r1, [r0, #17]
 800cf0a:	7c02      	ldrb	r2, [r0, #16]
 800cf0c:	6a05      	ldr	r5, [r0, #32]
 800cf0e:	f103 0409 	add.w	r4, r3, #9
 800cf12:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cf16:	bf0c      	ite	eq
 800cf18:	552a      	strbeq	r2, [r5, r4]
 800cf1a:	5529      	strbne	r1, [r5, r4]
 800cf1c:	6a05      	ldr	r5, [r0, #32]
 800cf1e:	f103 040a 	add.w	r4, r3, #10
 800cf22:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800cf26:	bf0c      	ite	eq
 800cf28:	552a      	strbeq	r2, [r5, r4]
 800cf2a:	5529      	strbne	r1, [r5, r4]
 800cf2c:	6a05      	ldr	r5, [r0, #32]
 800cf2e:	f103 040b 	add.w	r4, r3, #11
 800cf32:	f01c 0f20 	tst.w	ip, #32
 800cf36:	bf0c      	ite	eq
 800cf38:	552a      	strbeq	r2, [r5, r4]
 800cf3a:	5529      	strbne	r1, [r5, r4]
 800cf3c:	6a05      	ldr	r5, [r0, #32]
 800cf3e:	f103 040c 	add.w	r4, r3, #12
 800cf42:	f01c 0f10 	tst.w	ip, #16
 800cf46:	bf0c      	ite	eq
 800cf48:	552a      	strbeq	r2, [r5, r4]
 800cf4a:	5529      	strbne	r1, [r5, r4]
 800cf4c:	6a05      	ldr	r5, [r0, #32]
 800cf4e:	f103 040d 	add.w	r4, r3, #13
 800cf52:	f01c 0f08 	tst.w	ip, #8
 800cf56:	bf0c      	ite	eq
 800cf58:	552a      	strbeq	r2, [r5, r4]
 800cf5a:	5529      	strbne	r1, [r5, r4]
 800cf5c:	6a05      	ldr	r5, [r0, #32]
 800cf5e:	f103 040e 	add.w	r4, r3, #14
 800cf62:	f01c 0f04 	tst.w	ip, #4
 800cf66:	bf0c      	ite	eq
 800cf68:	552a      	strbeq	r2, [r5, r4]
 800cf6a:	5529      	strbne	r1, [r5, r4]
 800cf6c:	6a05      	ldr	r5, [r0, #32]
 800cf6e:	f103 040f 	add.w	r4, r3, #15
 800cf72:	f01c 0f02 	tst.w	ip, #2
 800cf76:	bf0c      	ite	eq
 800cf78:	552a      	strbeq	r2, [r5, r4]
 800cf7a:	5529      	strbne	r1, [r5, r4]
 800cf7c:	f01c 0f01 	tst.w	ip, #1
 800cf80:	bf14      	ite	ne
 800cf82:	6a02      	ldrne	r2, [r0, #32]
 800cf84:	6a01      	ldreq	r1, [r0, #32]
 800cf86:	f103 0410 	add.w	r4, r3, #16
 800cf8a:	bf14      	ite	ne
 800cf8c:	5511      	strbne	r1, [r2, r4]
 800cf8e:	550a      	strbeq	r2, [r1, r4]
 800cf90:	6a05      	ldr	r5, [r0, #32]
 800cf92:	7c02      	ldrb	r2, [r0, #16]
 800cf94:	7c41      	ldrb	r1, [r0, #17]
 800cf96:	f103 0411 	add.w	r4, r3, #17
 800cf9a:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800cf9e:	bf0c      	ite	eq
 800cfa0:	552a      	strbeq	r2, [r5, r4]
 800cfa2:	5529      	strbne	r1, [r5, r4]
 800cfa4:	6a05      	ldr	r5, [r0, #32]
 800cfa6:	f103 0412 	add.w	r4, r3, #18
 800cfaa:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800cfae:	bf0c      	ite	eq
 800cfb0:	552a      	strbeq	r2, [r5, r4]
 800cfb2:	5529      	strbne	r1, [r5, r4]
 800cfb4:	6a05      	ldr	r5, [r0, #32]
 800cfb6:	f103 0413 	add.w	r4, r3, #19
 800cfba:	f01e 0f20 	tst.w	lr, #32
 800cfbe:	bf0c      	ite	eq
 800cfc0:	552a      	strbeq	r2, [r5, r4]
 800cfc2:	5529      	strbne	r1, [r5, r4]
 800cfc4:	6a05      	ldr	r5, [r0, #32]
 800cfc6:	f103 0414 	add.w	r4, r3, #20
 800cfca:	f01e 0f10 	tst.w	lr, #16
 800cfce:	bf0c      	ite	eq
 800cfd0:	552a      	strbeq	r2, [r5, r4]
 800cfd2:	5529      	strbne	r1, [r5, r4]
 800cfd4:	6a05      	ldr	r5, [r0, #32]
 800cfd6:	f103 0415 	add.w	r4, r3, #21
 800cfda:	f01e 0f08 	tst.w	lr, #8
 800cfde:	bf0c      	ite	eq
 800cfe0:	552a      	strbeq	r2, [r5, r4]
 800cfe2:	5529      	strbne	r1, [r5, r4]
 800cfe4:	6a05      	ldr	r5, [r0, #32]
 800cfe6:	f103 0416 	add.w	r4, r3, #22
 800cfea:	f01e 0f04 	tst.w	lr, #4
 800cfee:	bf0c      	ite	eq
 800cff0:	552a      	strbeq	r2, [r5, r4]
 800cff2:	5529      	strbne	r1, [r5, r4]
 800cff4:	6a05      	ldr	r5, [r0, #32]
 800cff6:	f103 0417 	add.w	r4, r3, #23
 800cffa:	f01e 0f02 	tst.w	lr, #2
 800cffe:	bf0c      	ite	eq
 800d000:	552a      	strbeq	r2, [r5, r4]
 800d002:	5529      	strbne	r1, [r5, r4]
 800d004:	3318      	adds	r3, #24
 800d006:	f01e 0f01 	tst.w	lr, #1
 800d00a:	e736      	b.n	800ce7a <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x23e>
 800d00c:	7c01      	ldrb	r1, [r0, #16]
 800d00e:	7c44      	ldrb	r4, [r0, #17]
 800d010:	6a05      	ldr	r5, [r0, #32]
 800d012:	1c5e      	adds	r6, r3, #1
 800d014:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d018:	bf0c      	ite	eq
 800d01a:	55a9      	strbeq	r1, [r5, r6]
 800d01c:	55ac      	strbne	r4, [r5, r6]
 800d01e:	6a05      	ldr	r5, [r0, #32]
 800d020:	1c9e      	adds	r6, r3, #2
 800d022:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d026:	bf0c      	ite	eq
 800d028:	55a9      	strbeq	r1, [r5, r6]
 800d02a:	55ac      	strbne	r4, [r5, r6]
 800d02c:	6a05      	ldr	r5, [r0, #32]
 800d02e:	1cde      	adds	r6, r3, #3
 800d030:	f01e 0f20 	tst.w	lr, #32
 800d034:	bf0c      	ite	eq
 800d036:	55a9      	strbeq	r1, [r5, r6]
 800d038:	55ac      	strbne	r4, [r5, r6]
 800d03a:	6a05      	ldr	r5, [r0, #32]
 800d03c:	1d1e      	adds	r6, r3, #4
 800d03e:	f01e 0f10 	tst.w	lr, #16
 800d042:	bf0c      	ite	eq
 800d044:	55a9      	strbeq	r1, [r5, r6]
 800d046:	55ac      	strbne	r4, [r5, r6]
 800d048:	6a05      	ldr	r5, [r0, #32]
 800d04a:	1d5e      	adds	r6, r3, #5
 800d04c:	f01e 0f08 	tst.w	lr, #8
 800d050:	bf0c      	ite	eq
 800d052:	55a9      	strbeq	r1, [r5, r6]
 800d054:	55ac      	strbne	r4, [r5, r6]
 800d056:	6a05      	ldr	r5, [r0, #32]
 800d058:	1d9e      	adds	r6, r3, #6
 800d05a:	f01e 0f04 	tst.w	lr, #4
 800d05e:	bf0c      	ite	eq
 800d060:	55a9      	strbeq	r1, [r5, r6]
 800d062:	55ac      	strbne	r4, [r5, r6]
 800d064:	6a05      	ldr	r5, [r0, #32]
 800d066:	1dde      	adds	r6, r3, #7
 800d068:	f01e 0f02 	tst.w	lr, #2
 800d06c:	bf0c      	ite	eq
 800d06e:	55a9      	strbeq	r1, [r5, r6]
 800d070:	55ac      	strbne	r4, [r5, r6]
 800d072:	f01e 0f01 	tst.w	lr, #1
 800d076:	bf14      	ite	ne
 800d078:	6a01      	ldrne	r1, [r0, #32]
 800d07a:	6a04      	ldreq	r4, [r0, #32]
 800d07c:	f103 0508 	add.w	r5, r3, #8
 800d080:	bf14      	ite	ne
 800d082:	554c      	strbne	r4, [r1, r5]
 800d084:	5561      	strbeq	r1, [r4, r5]
 800d086:	7c01      	ldrb	r1, [r0, #16]
 800d088:	7c44      	ldrb	r4, [r0, #17]
 800d08a:	6a06      	ldr	r6, [r0, #32]
 800d08c:	f103 0509 	add.w	r5, r3, #9
 800d090:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d094:	bf0c      	ite	eq
 800d096:	5571      	strbeq	r1, [r6, r5]
 800d098:	5574      	strbne	r4, [r6, r5]
 800d09a:	6a06      	ldr	r6, [r0, #32]
 800d09c:	f103 050a 	add.w	r5, r3, #10
 800d0a0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d0a4:	bf0c      	ite	eq
 800d0a6:	5571      	strbeq	r1, [r6, r5]
 800d0a8:	5574      	strbne	r4, [r6, r5]
 800d0aa:	6a06      	ldr	r6, [r0, #32]
 800d0ac:	f103 050b 	add.w	r5, r3, #11
 800d0b0:	f01c 0f20 	tst.w	ip, #32
 800d0b4:	bf0c      	ite	eq
 800d0b6:	5571      	strbeq	r1, [r6, r5]
 800d0b8:	5574      	strbne	r4, [r6, r5]
 800d0ba:	6a06      	ldr	r6, [r0, #32]
 800d0bc:	f103 050c 	add.w	r5, r3, #12
 800d0c0:	f01c 0f10 	tst.w	ip, #16
 800d0c4:	bf0c      	ite	eq
 800d0c6:	5571      	strbeq	r1, [r6, r5]
 800d0c8:	5574      	strbne	r4, [r6, r5]
 800d0ca:	6a06      	ldr	r6, [r0, #32]
 800d0cc:	f103 050d 	add.w	r5, r3, #13
 800d0d0:	f01c 0f08 	tst.w	ip, #8
 800d0d4:	bf0c      	ite	eq
 800d0d6:	5571      	strbeq	r1, [r6, r5]
 800d0d8:	5574      	strbne	r4, [r6, r5]
 800d0da:	6a06      	ldr	r6, [r0, #32]
 800d0dc:	f103 050e 	add.w	r5, r3, #14
 800d0e0:	f01c 0f04 	tst.w	ip, #4
 800d0e4:	bf0c      	ite	eq
 800d0e6:	5571      	strbeq	r1, [r6, r5]
 800d0e8:	5574      	strbne	r4, [r6, r5]
 800d0ea:	6a06      	ldr	r6, [r0, #32]
 800d0ec:	f103 050f 	add.w	r5, r3, #15
 800d0f0:	f01c 0f02 	tst.w	ip, #2
 800d0f4:	bf0c      	ite	eq
 800d0f6:	5571      	strbeq	r1, [r6, r5]
 800d0f8:	5574      	strbne	r4, [r6, r5]
 800d0fa:	f103 0510 	add.w	r5, r3, #16
 800d0fe:	f01c 0f01 	tst.w	ip, #1
 800d102:	bf15      	itete	ne
 800d104:	6a01      	ldrne	r1, [r0, #32]
 800d106:	6a04      	ldreq	r4, [r0, #32]
 800d108:	554c      	strbne	r4, [r1, r5]
 800d10a:	5561      	strbeq	r1, [r4, r5]
 800d10c:	6a06      	ldr	r6, [r0, #32]
 800d10e:	7c01      	ldrb	r1, [r0, #16]
 800d110:	7c44      	ldrb	r4, [r0, #17]
 800d112:	f103 0511 	add.w	r5, r3, #17
 800d116:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d11a:	bf0c      	ite	eq
 800d11c:	5571      	strbeq	r1, [r6, r5]
 800d11e:	5574      	strbne	r4, [r6, r5]
 800d120:	6a06      	ldr	r6, [r0, #32]
 800d122:	f103 0512 	add.w	r5, r3, #18
 800d126:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d12a:	bf0c      	ite	eq
 800d12c:	5571      	strbeq	r1, [r6, r5]
 800d12e:	5574      	strbne	r4, [r6, r5]
 800d130:	6a06      	ldr	r6, [r0, #32]
 800d132:	f103 0513 	add.w	r5, r3, #19
 800d136:	f012 0f20 	tst.w	r2, #32
 800d13a:	bf0c      	ite	eq
 800d13c:	5571      	strbeq	r1, [r6, r5]
 800d13e:	5574      	strbne	r4, [r6, r5]
 800d140:	6a06      	ldr	r6, [r0, #32]
 800d142:	f103 0514 	add.w	r5, r3, #20
 800d146:	f012 0f10 	tst.w	r2, #16
 800d14a:	bf0c      	ite	eq
 800d14c:	5571      	strbeq	r1, [r6, r5]
 800d14e:	5574      	strbne	r4, [r6, r5]
 800d150:	6a06      	ldr	r6, [r0, #32]
 800d152:	f103 0515 	add.w	r5, r3, #21
 800d156:	f012 0f08 	tst.w	r2, #8
 800d15a:	bf0c      	ite	eq
 800d15c:	5571      	strbeq	r1, [r6, r5]
 800d15e:	5574      	strbne	r4, [r6, r5]
 800d160:	6a06      	ldr	r6, [r0, #32]
 800d162:	f103 0516 	add.w	r5, r3, #22
 800d166:	f012 0f04 	tst.w	r2, #4
 800d16a:	bf0c      	ite	eq
 800d16c:	5571      	strbeq	r1, [r6, r5]
 800d16e:	5574      	strbne	r4, [r6, r5]
 800d170:	6a06      	ldr	r6, [r0, #32]
 800d172:	f012 0f02 	tst.w	r2, #2
 800d176:	f103 0517 	add.w	r5, r3, #23
 800d17a:	bf0c      	ite	eq
 800d17c:	5571      	strbeq	r1, [r6, r5]
 800d17e:	5574      	strbne	r4, [r6, r5]
 800d180:	f012 0f01 	tst.w	r2, #1
 800d184:	f103 0318 	add.w	r3, r3, #24
 800d188:	6a02      	ldr	r2, [r0, #32]
 800d18a:	f43f ae79 	beq.w	800ce80 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x244>
 800d18e:	54d4      	strb	r4, [r2, r3]
 800d190:	bd70      	pop	{r4, r5, r6, pc}
 800d192:	7c01      	ldrb	r1, [r0, #16]
 800d194:	7c44      	ldrb	r4, [r0, #17]
 800d196:	6a05      	ldr	r5, [r0, #32]
 800d198:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d19c:	f103 0601 	add.w	r6, r3, #1
 800d1a0:	bf14      	ite	ne
 800d1a2:	55ac      	strbne	r4, [r5, r6]
 800d1a4:	55a9      	strbeq	r1, [r5, r6]
 800d1a6:	6a05      	ldr	r5, [r0, #32]
 800d1a8:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d1ac:	f103 0602 	add.w	r6, r3, #2
 800d1b0:	bf14      	ite	ne
 800d1b2:	55ac      	strbne	r4, [r5, r6]
 800d1b4:	55a9      	strbeq	r1, [r5, r6]
 800d1b6:	6a05      	ldr	r5, [r0, #32]
 800d1b8:	f012 0f20 	tst.w	r2, #32
 800d1bc:	f103 0603 	add.w	r6, r3, #3
 800d1c0:	bf14      	ite	ne
 800d1c2:	55ac      	strbne	r4, [r5, r6]
 800d1c4:	55a9      	strbeq	r1, [r5, r6]
 800d1c6:	6a05      	ldr	r5, [r0, #32]
 800d1c8:	f012 0f10 	tst.w	r2, #16
 800d1cc:	f103 0604 	add.w	r6, r3, #4
 800d1d0:	bf14      	ite	ne
 800d1d2:	55ac      	strbne	r4, [r5, r6]
 800d1d4:	55a9      	strbeq	r1, [r5, r6]
 800d1d6:	6a05      	ldr	r5, [r0, #32]
 800d1d8:	f012 0f08 	tst.w	r2, #8
 800d1dc:	f103 0605 	add.w	r6, r3, #5
 800d1e0:	bf14      	ite	ne
 800d1e2:	55ac      	strbne	r4, [r5, r6]
 800d1e4:	55a9      	strbeq	r1, [r5, r6]
 800d1e6:	6a05      	ldr	r5, [r0, #32]
 800d1e8:	f012 0f04 	tst.w	r2, #4
 800d1ec:	f103 0606 	add.w	r6, r3, #6
 800d1f0:	bf14      	ite	ne
 800d1f2:	55ac      	strbne	r4, [r5, r6]
 800d1f4:	55a9      	strbeq	r1, [r5, r6]
 800d1f6:	6a05      	ldr	r5, [r0, #32]
 800d1f8:	f012 0f02 	tst.w	r2, #2
 800d1fc:	f103 0607 	add.w	r6, r3, #7
 800d200:	bf14      	ite	ne
 800d202:	55ac      	strbne	r4, [r5, r6]
 800d204:	55a9      	strbeq	r1, [r5, r6]
 800d206:	f012 0f01 	tst.w	r2, #1
 800d20a:	6a02      	ldr	r2, [r0, #32]
 800d20c:	f103 0508 	add.w	r5, r3, #8
 800d210:	bf14      	ite	ne
 800d212:	5554      	strbne	r4, [r2, r5]
 800d214:	5551      	strbeq	r1, [r2, r5]
 800d216:	7c41      	ldrb	r1, [r0, #17]
 800d218:	7c02      	ldrb	r2, [r0, #16]
 800d21a:	6a05      	ldr	r5, [r0, #32]
 800d21c:	f103 0409 	add.w	r4, r3, #9
 800d220:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d224:	bf0c      	ite	eq
 800d226:	552a      	strbeq	r2, [r5, r4]
 800d228:	5529      	strbne	r1, [r5, r4]
 800d22a:	6a05      	ldr	r5, [r0, #32]
 800d22c:	f103 040a 	add.w	r4, r3, #10
 800d230:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d234:	bf0c      	ite	eq
 800d236:	552a      	strbeq	r2, [r5, r4]
 800d238:	5529      	strbne	r1, [r5, r4]
 800d23a:	6a05      	ldr	r5, [r0, #32]
 800d23c:	f103 040b 	add.w	r4, r3, #11
 800d240:	f01e 0f20 	tst.w	lr, #32
 800d244:	bf0c      	ite	eq
 800d246:	552a      	strbeq	r2, [r5, r4]
 800d248:	5529      	strbne	r1, [r5, r4]
 800d24a:	6a05      	ldr	r5, [r0, #32]
 800d24c:	f103 040c 	add.w	r4, r3, #12
 800d250:	f01e 0f10 	tst.w	lr, #16
 800d254:	bf0c      	ite	eq
 800d256:	552a      	strbeq	r2, [r5, r4]
 800d258:	5529      	strbne	r1, [r5, r4]
 800d25a:	6a05      	ldr	r5, [r0, #32]
 800d25c:	f103 040d 	add.w	r4, r3, #13
 800d260:	f01e 0f08 	tst.w	lr, #8
 800d264:	bf0c      	ite	eq
 800d266:	552a      	strbeq	r2, [r5, r4]
 800d268:	5529      	strbne	r1, [r5, r4]
 800d26a:	6a05      	ldr	r5, [r0, #32]
 800d26c:	f103 040e 	add.w	r4, r3, #14
 800d270:	f01e 0f04 	tst.w	lr, #4
 800d274:	bf0c      	ite	eq
 800d276:	552a      	strbeq	r2, [r5, r4]
 800d278:	5529      	strbne	r1, [r5, r4]
 800d27a:	6a05      	ldr	r5, [r0, #32]
 800d27c:	f103 040f 	add.w	r4, r3, #15
 800d280:	f01e 0f02 	tst.w	lr, #2
 800d284:	bf0c      	ite	eq
 800d286:	552a      	strbeq	r2, [r5, r4]
 800d288:	5529      	strbne	r1, [r5, r4]
 800d28a:	f01e 0f01 	tst.w	lr, #1
 800d28e:	bf14      	ite	ne
 800d290:	6a02      	ldrne	r2, [r0, #32]
 800d292:	6a01      	ldreq	r1, [r0, #32]
 800d294:	f103 0410 	add.w	r4, r3, #16
 800d298:	bf14      	ite	ne
 800d29a:	5511      	strbne	r1, [r2, r4]
 800d29c:	550a      	strbeq	r2, [r1, r4]
 800d29e:	e5af      	b.n	800ce00 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1c4>
 800d2a0:	7c01      	ldrb	r1, [r0, #16]
 800d2a2:	7c44      	ldrb	r4, [r0, #17]
 800d2a4:	6a05      	ldr	r5, [r0, #32]
 800d2a6:	1c5e      	adds	r6, r3, #1
 800d2a8:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d2ac:	bf0c      	ite	eq
 800d2ae:	55a9      	strbeq	r1, [r5, r6]
 800d2b0:	55ac      	strbne	r4, [r5, r6]
 800d2b2:	6a05      	ldr	r5, [r0, #32]
 800d2b4:	1c9e      	adds	r6, r3, #2
 800d2b6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d2ba:	bf0c      	ite	eq
 800d2bc:	55a9      	strbeq	r1, [r5, r6]
 800d2be:	55ac      	strbne	r4, [r5, r6]
 800d2c0:	6a05      	ldr	r5, [r0, #32]
 800d2c2:	1cde      	adds	r6, r3, #3
 800d2c4:	f01c 0f20 	tst.w	ip, #32
 800d2c8:	bf0c      	ite	eq
 800d2ca:	55a9      	strbeq	r1, [r5, r6]
 800d2cc:	55ac      	strbne	r4, [r5, r6]
 800d2ce:	6a05      	ldr	r5, [r0, #32]
 800d2d0:	1d1e      	adds	r6, r3, #4
 800d2d2:	f01c 0f10 	tst.w	ip, #16
 800d2d6:	bf0c      	ite	eq
 800d2d8:	55a9      	strbeq	r1, [r5, r6]
 800d2da:	55ac      	strbne	r4, [r5, r6]
 800d2dc:	6a05      	ldr	r5, [r0, #32]
 800d2de:	1d5e      	adds	r6, r3, #5
 800d2e0:	f01c 0f08 	tst.w	ip, #8
 800d2e4:	bf0c      	ite	eq
 800d2e6:	55a9      	strbeq	r1, [r5, r6]
 800d2e8:	55ac      	strbne	r4, [r5, r6]
 800d2ea:	6a05      	ldr	r5, [r0, #32]
 800d2ec:	1d9e      	adds	r6, r3, #6
 800d2ee:	f01c 0f04 	tst.w	ip, #4
 800d2f2:	bf0c      	ite	eq
 800d2f4:	55a9      	strbeq	r1, [r5, r6]
 800d2f6:	55ac      	strbne	r4, [r5, r6]
 800d2f8:	6a05      	ldr	r5, [r0, #32]
 800d2fa:	1dde      	adds	r6, r3, #7
 800d2fc:	f01c 0f02 	tst.w	ip, #2
 800d300:	bf0c      	ite	eq
 800d302:	55a9      	strbeq	r1, [r5, r6]
 800d304:	55ac      	strbne	r4, [r5, r6]
 800d306:	f01c 0f01 	tst.w	ip, #1
 800d30a:	bf14      	ite	ne
 800d30c:	6a01      	ldrne	r1, [r0, #32]
 800d30e:	6a04      	ldreq	r4, [r0, #32]
 800d310:	f103 0508 	add.w	r5, r3, #8
 800d314:	bf14      	ite	ne
 800d316:	554c      	strbne	r4, [r1, r5]
 800d318:	5561      	strbeq	r1, [r4, r5]
 800d31a:	7c01      	ldrb	r1, [r0, #16]
 800d31c:	7c44      	ldrb	r4, [r0, #17]
 800d31e:	6a06      	ldr	r6, [r0, #32]
 800d320:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d324:	f103 0509 	add.w	r5, r3, #9
 800d328:	bf0c      	ite	eq
 800d32a:	5571      	strbeq	r1, [r6, r5]
 800d32c:	5574      	strbne	r4, [r6, r5]
 800d32e:	6a06      	ldr	r6, [r0, #32]
 800d330:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d334:	f103 050a 	add.w	r5, r3, #10
 800d338:	bf0c      	ite	eq
 800d33a:	5571      	strbeq	r1, [r6, r5]
 800d33c:	5574      	strbne	r4, [r6, r5]
 800d33e:	6a06      	ldr	r6, [r0, #32]
 800d340:	f012 0f20 	tst.w	r2, #32
 800d344:	f103 050b 	add.w	r5, r3, #11
 800d348:	bf0c      	ite	eq
 800d34a:	5571      	strbeq	r1, [r6, r5]
 800d34c:	5574      	strbne	r4, [r6, r5]
 800d34e:	6a06      	ldr	r6, [r0, #32]
 800d350:	f012 0f10 	tst.w	r2, #16
 800d354:	f103 050c 	add.w	r5, r3, #12
 800d358:	bf0c      	ite	eq
 800d35a:	5571      	strbeq	r1, [r6, r5]
 800d35c:	5574      	strbne	r4, [r6, r5]
 800d35e:	6a06      	ldr	r6, [r0, #32]
 800d360:	f012 0f08 	tst.w	r2, #8
 800d364:	f103 050d 	add.w	r5, r3, #13
 800d368:	bf0c      	ite	eq
 800d36a:	5571      	strbeq	r1, [r6, r5]
 800d36c:	5574      	strbne	r4, [r6, r5]
 800d36e:	6a06      	ldr	r6, [r0, #32]
 800d370:	f012 0f04 	tst.w	r2, #4
 800d374:	f103 050e 	add.w	r5, r3, #14
 800d378:	bf0c      	ite	eq
 800d37a:	5571      	strbeq	r1, [r6, r5]
 800d37c:	5574      	strbne	r4, [r6, r5]
 800d37e:	6a06      	ldr	r6, [r0, #32]
 800d380:	f012 0f02 	tst.w	r2, #2
 800d384:	f103 050f 	add.w	r5, r3, #15
 800d388:	bf0c      	ite	eq
 800d38a:	5571      	strbeq	r1, [r6, r5]
 800d38c:	5574      	strbne	r4, [r6, r5]
 800d38e:	f012 0f01 	tst.w	r2, #1
 800d392:	6a02      	ldr	r2, [r0, #32]
 800d394:	f103 0510 	add.w	r5, r3, #16
 800d398:	bf14      	ite	ne
 800d39a:	5554      	strbne	r4, [r2, r5]
 800d39c:	5551      	strbeq	r1, [r2, r5]
 800d39e:	e5f7      	b.n	800cf90 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x354>
 800d3a0:	7c01      	ldrb	r1, [r0, #16]
 800d3a2:	7c44      	ldrb	r4, [r0, #17]
 800d3a4:	6a05      	ldr	r5, [r0, #32]
 800d3a6:	1c5e      	adds	r6, r3, #1
 800d3a8:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d3ac:	bf0c      	ite	eq
 800d3ae:	55a9      	strbeq	r1, [r5, r6]
 800d3b0:	55ac      	strbne	r4, [r5, r6]
 800d3b2:	6a05      	ldr	r5, [r0, #32]
 800d3b4:	1c9e      	adds	r6, r3, #2
 800d3b6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d3ba:	bf0c      	ite	eq
 800d3bc:	55a9      	strbeq	r1, [r5, r6]
 800d3be:	55ac      	strbne	r4, [r5, r6]
 800d3c0:	6a05      	ldr	r5, [r0, #32]
 800d3c2:	1cde      	adds	r6, r3, #3
 800d3c4:	f01c 0f20 	tst.w	ip, #32
 800d3c8:	bf0c      	ite	eq
 800d3ca:	55a9      	strbeq	r1, [r5, r6]
 800d3cc:	55ac      	strbne	r4, [r5, r6]
 800d3ce:	6a05      	ldr	r5, [r0, #32]
 800d3d0:	1d1e      	adds	r6, r3, #4
 800d3d2:	f01c 0f10 	tst.w	ip, #16
 800d3d6:	bf0c      	ite	eq
 800d3d8:	55a9      	strbeq	r1, [r5, r6]
 800d3da:	55ac      	strbne	r4, [r5, r6]
 800d3dc:	6a05      	ldr	r5, [r0, #32]
 800d3de:	1d5e      	adds	r6, r3, #5
 800d3e0:	f01c 0f08 	tst.w	ip, #8
 800d3e4:	bf0c      	ite	eq
 800d3e6:	55a9      	strbeq	r1, [r5, r6]
 800d3e8:	55ac      	strbne	r4, [r5, r6]
 800d3ea:	6a05      	ldr	r5, [r0, #32]
 800d3ec:	1d9e      	adds	r6, r3, #6
 800d3ee:	f01c 0f04 	tst.w	ip, #4
 800d3f2:	bf0c      	ite	eq
 800d3f4:	55a9      	strbeq	r1, [r5, r6]
 800d3f6:	55ac      	strbne	r4, [r5, r6]
 800d3f8:	6a05      	ldr	r5, [r0, #32]
 800d3fa:	1dde      	adds	r6, r3, #7
 800d3fc:	f01c 0f02 	tst.w	ip, #2
 800d400:	bf0c      	ite	eq
 800d402:	55a9      	strbeq	r1, [r5, r6]
 800d404:	55ac      	strbne	r4, [r5, r6]
 800d406:	f01c 0f01 	tst.w	ip, #1
 800d40a:	bf14      	ite	ne
 800d40c:	6a01      	ldrne	r1, [r0, #32]
 800d40e:	6a04      	ldreq	r4, [r0, #32]
 800d410:	f103 0508 	add.w	r5, r3, #8
 800d414:	bf14      	ite	ne
 800d416:	554c      	strbne	r4, [r1, r5]
 800d418:	5561      	strbeq	r1, [r4, r5]
 800d41a:	7c01      	ldrb	r1, [r0, #16]
 800d41c:	7c44      	ldrb	r4, [r0, #17]
 800d41e:	6a06      	ldr	r6, [r0, #32]
 800d420:	f103 0509 	add.w	r5, r3, #9
 800d424:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d428:	bf0c      	ite	eq
 800d42a:	5571      	strbeq	r1, [r6, r5]
 800d42c:	5574      	strbne	r4, [r6, r5]
 800d42e:	6a06      	ldr	r6, [r0, #32]
 800d430:	f103 050a 	add.w	r5, r3, #10
 800d434:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d438:	bf0c      	ite	eq
 800d43a:	5571      	strbeq	r1, [r6, r5]
 800d43c:	5574      	strbne	r4, [r6, r5]
 800d43e:	6a06      	ldr	r6, [r0, #32]
 800d440:	f103 050b 	add.w	r5, r3, #11
 800d444:	f01e 0f20 	tst.w	lr, #32
 800d448:	bf0c      	ite	eq
 800d44a:	5571      	strbeq	r1, [r6, r5]
 800d44c:	5574      	strbne	r4, [r6, r5]
 800d44e:	6a06      	ldr	r6, [r0, #32]
 800d450:	f103 050c 	add.w	r5, r3, #12
 800d454:	f01e 0f10 	tst.w	lr, #16
 800d458:	bf0c      	ite	eq
 800d45a:	5571      	strbeq	r1, [r6, r5]
 800d45c:	5574      	strbne	r4, [r6, r5]
 800d45e:	6a06      	ldr	r6, [r0, #32]
 800d460:	f103 050d 	add.w	r5, r3, #13
 800d464:	f01e 0f08 	tst.w	lr, #8
 800d468:	bf0c      	ite	eq
 800d46a:	5571      	strbeq	r1, [r6, r5]
 800d46c:	5574      	strbne	r4, [r6, r5]
 800d46e:	6a06      	ldr	r6, [r0, #32]
 800d470:	f103 050e 	add.w	r5, r3, #14
 800d474:	f01e 0f04 	tst.w	lr, #4
 800d478:	bf0c      	ite	eq
 800d47a:	5571      	strbeq	r1, [r6, r5]
 800d47c:	5574      	strbne	r4, [r6, r5]
 800d47e:	6a06      	ldr	r6, [r0, #32]
 800d480:	f103 050f 	add.w	r5, r3, #15
 800d484:	f01e 0f02 	tst.w	lr, #2
 800d488:	bf0c      	ite	eq
 800d48a:	5571      	strbeq	r1, [r6, r5]
 800d48c:	5574      	strbne	r4, [r6, r5]
 800d48e:	f103 0510 	add.w	r5, r3, #16
 800d492:	f01e 0f01 	tst.w	lr, #1
 800d496:	e634      	b.n	800d102 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4c6>
 800d498:	6a01      	ldr	r1, [r0, #32]
 800d49a:	54ca      	strb	r2, [r1, r3]
 800d49c:	bd70      	pop	{r4, r5, r6, pc}
 800d49e:	bf00      	nop

0800d4a0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800d4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4a2:	6984      	ldr	r4, [r0, #24]
 800d4a4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800d4a8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800d4ac:	f814 c006 	ldrb.w	ip, [r4, r6]
 800d4b0:	56e6      	ldrsb	r6, [r4, r3]
 800d4b2:	0149      	lsls	r1, r1, #5
 800d4b4:	f814 e002 	ldrb.w	lr, [r4, r2]
 800d4b8:	5ce3      	ldrb	r3, [r4, r3]
 800d4ba:	5d62      	ldrb	r2, [r4, r5]
 800d4bc:	2e00      	cmp	r6, #0
 800d4be:	7c05      	ldrb	r5, [r0, #16]
 800d4c0:	7c44      	ldrb	r4, [r0, #17]
 800d4c2:	6a06      	ldr	r6, [r0, #32]
 800d4c4:	f101 0701 	add.w	r7, r1, #1
 800d4c8:	bfac      	ite	ge
 800d4ca:	55f5      	strbge	r5, [r6, r7]
 800d4cc:	55f4      	strblt	r4, [r6, r7]
 800d4ce:	6a07      	ldr	r7, [r0, #32]
 800d4d0:	1c8e      	adds	r6, r1, #2
 800d4d2:	f013 0f40 	tst.w	r3, #64	; 0x40
 800d4d6:	bf0c      	ite	eq
 800d4d8:	55bd      	strbeq	r5, [r7, r6]
 800d4da:	55bc      	strbne	r4, [r7, r6]
 800d4dc:	6a07      	ldr	r7, [r0, #32]
 800d4de:	1cce      	adds	r6, r1, #3
 800d4e0:	f013 0f20 	tst.w	r3, #32
 800d4e4:	bf0c      	ite	eq
 800d4e6:	55bd      	strbeq	r5, [r7, r6]
 800d4e8:	55bc      	strbne	r4, [r7, r6]
 800d4ea:	6a07      	ldr	r7, [r0, #32]
 800d4ec:	1d0e      	adds	r6, r1, #4
 800d4ee:	f013 0f10 	tst.w	r3, #16
 800d4f2:	bf0c      	ite	eq
 800d4f4:	55bd      	strbeq	r5, [r7, r6]
 800d4f6:	55bc      	strbne	r4, [r7, r6]
 800d4f8:	6a07      	ldr	r7, [r0, #32]
 800d4fa:	1d4e      	adds	r6, r1, #5
 800d4fc:	f013 0f08 	tst.w	r3, #8
 800d500:	bf0c      	ite	eq
 800d502:	55bd      	strbeq	r5, [r7, r6]
 800d504:	55bc      	strbne	r4, [r7, r6]
 800d506:	6a07      	ldr	r7, [r0, #32]
 800d508:	1d8e      	adds	r6, r1, #6
 800d50a:	f013 0f04 	tst.w	r3, #4
 800d50e:	bf0c      	ite	eq
 800d510:	55bd      	strbeq	r5, [r7, r6]
 800d512:	55bc      	strbne	r4, [r7, r6]
 800d514:	6a07      	ldr	r7, [r0, #32]
 800d516:	1dce      	adds	r6, r1, #7
 800d518:	f013 0f02 	tst.w	r3, #2
 800d51c:	bf0c      	ite	eq
 800d51e:	55bd      	strbeq	r5, [r7, r6]
 800d520:	55bc      	strbne	r4, [r7, r6]
 800d522:	f013 0f01 	tst.w	r3, #1
 800d526:	6a03      	ldr	r3, [r0, #32]
 800d528:	f101 0608 	add.w	r6, r1, #8
 800d52c:	bf14      	ite	ne
 800d52e:	559c      	strbne	r4, [r3, r6]
 800d530:	559d      	strbeq	r5, [r3, r6]
 800d532:	7c03      	ldrb	r3, [r0, #16]
 800d534:	7c44      	ldrb	r4, [r0, #17]
 800d536:	6a05      	ldr	r5, [r0, #32]
 800d538:	f101 0609 	add.w	r6, r1, #9
 800d53c:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d540:	bf0c      	ite	eq
 800d542:	55ab      	strbeq	r3, [r5, r6]
 800d544:	55ac      	strbne	r4, [r5, r6]
 800d546:	6a05      	ldr	r5, [r0, #32]
 800d548:	f101 060a 	add.w	r6, r1, #10
 800d54c:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d550:	bf0c      	ite	eq
 800d552:	55ab      	strbeq	r3, [r5, r6]
 800d554:	55ac      	strbne	r4, [r5, r6]
 800d556:	6a05      	ldr	r5, [r0, #32]
 800d558:	f101 060b 	add.w	r6, r1, #11
 800d55c:	f01e 0f20 	tst.w	lr, #32
 800d560:	bf0c      	ite	eq
 800d562:	55ab      	strbeq	r3, [r5, r6]
 800d564:	55ac      	strbne	r4, [r5, r6]
 800d566:	6a05      	ldr	r5, [r0, #32]
 800d568:	f101 060c 	add.w	r6, r1, #12
 800d56c:	f01e 0f10 	tst.w	lr, #16
 800d570:	bf0c      	ite	eq
 800d572:	55ab      	strbeq	r3, [r5, r6]
 800d574:	55ac      	strbne	r4, [r5, r6]
 800d576:	6a05      	ldr	r5, [r0, #32]
 800d578:	f101 060d 	add.w	r6, r1, #13
 800d57c:	f01e 0f08 	tst.w	lr, #8
 800d580:	bf0c      	ite	eq
 800d582:	55ab      	strbeq	r3, [r5, r6]
 800d584:	55ac      	strbne	r4, [r5, r6]
 800d586:	6a05      	ldr	r5, [r0, #32]
 800d588:	f101 060e 	add.w	r6, r1, #14
 800d58c:	f01e 0f04 	tst.w	lr, #4
 800d590:	bf0c      	ite	eq
 800d592:	55ab      	strbeq	r3, [r5, r6]
 800d594:	55ac      	strbne	r4, [r5, r6]
 800d596:	6a05      	ldr	r5, [r0, #32]
 800d598:	f101 060f 	add.w	r6, r1, #15
 800d59c:	f01e 0f02 	tst.w	lr, #2
 800d5a0:	bf0c      	ite	eq
 800d5a2:	55ab      	strbeq	r3, [r5, r6]
 800d5a4:	55ac      	strbne	r4, [r5, r6]
 800d5a6:	f01e 0f01 	tst.w	lr, #1
 800d5aa:	bf14      	ite	ne
 800d5ac:	6a03      	ldrne	r3, [r0, #32]
 800d5ae:	6a04      	ldreq	r4, [r0, #32]
 800d5b0:	f101 0510 	add.w	r5, r1, #16
 800d5b4:	bf14      	ite	ne
 800d5b6:	555c      	strbne	r4, [r3, r5]
 800d5b8:	5563      	strbeq	r3, [r4, r5]
 800d5ba:	7c03      	ldrb	r3, [r0, #16]
 800d5bc:	7c44      	ldrb	r4, [r0, #17]
 800d5be:	6a06      	ldr	r6, [r0, #32]
 800d5c0:	f101 0511 	add.w	r5, r1, #17
 800d5c4:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d5c8:	bf0c      	ite	eq
 800d5ca:	5573      	strbeq	r3, [r6, r5]
 800d5cc:	5574      	strbne	r4, [r6, r5]
 800d5ce:	6a06      	ldr	r6, [r0, #32]
 800d5d0:	f101 0512 	add.w	r5, r1, #18
 800d5d4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d5d8:	bf0c      	ite	eq
 800d5da:	5573      	strbeq	r3, [r6, r5]
 800d5dc:	5574      	strbne	r4, [r6, r5]
 800d5de:	6a06      	ldr	r6, [r0, #32]
 800d5e0:	f101 0513 	add.w	r5, r1, #19
 800d5e4:	f01c 0f20 	tst.w	ip, #32
 800d5e8:	bf0c      	ite	eq
 800d5ea:	5573      	strbeq	r3, [r6, r5]
 800d5ec:	5574      	strbne	r4, [r6, r5]
 800d5ee:	6a06      	ldr	r6, [r0, #32]
 800d5f0:	f101 0514 	add.w	r5, r1, #20
 800d5f4:	f01c 0f10 	tst.w	ip, #16
 800d5f8:	bf0c      	ite	eq
 800d5fa:	5573      	strbeq	r3, [r6, r5]
 800d5fc:	5574      	strbne	r4, [r6, r5]
 800d5fe:	6a06      	ldr	r6, [r0, #32]
 800d600:	f101 0515 	add.w	r5, r1, #21
 800d604:	f01c 0f08 	tst.w	ip, #8
 800d608:	bf0c      	ite	eq
 800d60a:	5573      	strbeq	r3, [r6, r5]
 800d60c:	5574      	strbne	r4, [r6, r5]
 800d60e:	6a06      	ldr	r6, [r0, #32]
 800d610:	f101 0516 	add.w	r5, r1, #22
 800d614:	f01c 0f04 	tst.w	ip, #4
 800d618:	bf0c      	ite	eq
 800d61a:	5573      	strbeq	r3, [r6, r5]
 800d61c:	5574      	strbne	r4, [r6, r5]
 800d61e:	6a06      	ldr	r6, [r0, #32]
 800d620:	f101 0517 	add.w	r5, r1, #23
 800d624:	f01c 0f02 	tst.w	ip, #2
 800d628:	bf0c      	ite	eq
 800d62a:	5573      	strbeq	r3, [r6, r5]
 800d62c:	5574      	strbne	r4, [r6, r5]
 800d62e:	f01c 0f01 	tst.w	ip, #1
 800d632:	bf14      	ite	ne
 800d634:	6a03      	ldrne	r3, [r0, #32]
 800d636:	6a04      	ldreq	r4, [r0, #32]
 800d638:	f101 0518 	add.w	r5, r1, #24
 800d63c:	bf14      	ite	ne
 800d63e:	555c      	strbne	r4, [r3, r5]
 800d640:	5563      	strbeq	r3, [r4, r5]
 800d642:	7c03      	ldrb	r3, [r0, #16]
 800d644:	7c44      	ldrb	r4, [r0, #17]
 800d646:	6a06      	ldr	r6, [r0, #32]
 800d648:	0617      	lsls	r7, r2, #24
 800d64a:	f101 0519 	add.w	r5, r1, #25
 800d64e:	bf54      	ite	pl
 800d650:	5573      	strbpl	r3, [r6, r5]
 800d652:	5574      	strbmi	r4, [r6, r5]
 800d654:	6a06      	ldr	r6, [r0, #32]
 800d656:	0657      	lsls	r7, r2, #25
 800d658:	f101 051a 	add.w	r5, r1, #26
 800d65c:	bf54      	ite	pl
 800d65e:	5573      	strbpl	r3, [r6, r5]
 800d660:	5574      	strbmi	r4, [r6, r5]
 800d662:	6a06      	ldr	r6, [r0, #32]
 800d664:	0697      	lsls	r7, r2, #26
 800d666:	f101 051b 	add.w	r5, r1, #27
 800d66a:	bf54      	ite	pl
 800d66c:	5573      	strbpl	r3, [r6, r5]
 800d66e:	5574      	strbmi	r4, [r6, r5]
 800d670:	6a06      	ldr	r6, [r0, #32]
 800d672:	06d7      	lsls	r7, r2, #27
 800d674:	f101 051c 	add.w	r5, r1, #28
 800d678:	bf54      	ite	pl
 800d67a:	5573      	strbpl	r3, [r6, r5]
 800d67c:	5574      	strbmi	r4, [r6, r5]
 800d67e:	6a06      	ldr	r6, [r0, #32]
 800d680:	0717      	lsls	r7, r2, #28
 800d682:	f101 051d 	add.w	r5, r1, #29
 800d686:	bf54      	ite	pl
 800d688:	5573      	strbpl	r3, [r6, r5]
 800d68a:	5574      	strbmi	r4, [r6, r5]
 800d68c:	6a06      	ldr	r6, [r0, #32]
 800d68e:	0757      	lsls	r7, r2, #29
 800d690:	f101 051e 	add.w	r5, r1, #30
 800d694:	bf54      	ite	pl
 800d696:	5573      	strbpl	r3, [r6, r5]
 800d698:	5574      	strbmi	r4, [r6, r5]
 800d69a:	6a06      	ldr	r6, [r0, #32]
 800d69c:	0797      	lsls	r7, r2, #30
 800d69e:	f101 051f 	add.w	r5, r1, #31
 800d6a2:	bf54      	ite	pl
 800d6a4:	5573      	strbpl	r3, [r6, r5]
 800d6a6:	5574      	strbmi	r4, [r6, r5]
 800d6a8:	07d2      	lsls	r2, r2, #31
 800d6aa:	bf4c      	ite	mi
 800d6ac:	6a03      	ldrmi	r3, [r0, #32]
 800d6ae:	6a02      	ldrpl	r2, [r0, #32]
 800d6b0:	f101 0120 	add.w	r1, r1, #32
 800d6b4:	bf4c      	ite	mi
 800d6b6:	545c      	strbmi	r4, [r3, r1]
 800d6b8:	5453      	strbpl	r3, [r2, r1]
 800d6ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d6bc <WS28xx::~WS28xx()>:
 800d6bc:	2200      	movs	r2, #0
 800d6be:	4b01      	ldr	r3, [pc, #4]	; (800d6c4 <WS28xx::~WS28xx()+0x8>)
 800d6c0:	601a      	str	r2, [r3, #0]
 800d6c2:	4770      	bx	lr
 800d6c4:	20000c94 	mulcs	r0, r4, ip

0800d6c8 <WS28xx::SetupBuffers()>:
 800d6c8:	b513      	push	{r0, r1, r4, lr}
 800d6ca:	4604      	mov	r4, r0
 800d6cc:	a801      	add	r0, sp, #4
 800d6ce:	f005 f921 	bl	8012914 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800d6d2:	9b01      	ldr	r3, [sp, #4]
 800d6d4:	4a07      	ldr	r2, [pc, #28]	; (800d6f4 <WS28xx::SetupBuffers()+0x2c>)
 800d6d6:	085b      	lsrs	r3, r3, #1
 800d6d8:	f023 0303 	bic.w	r3, r3, #3
 800d6dc:	6220      	str	r0, [r4, #32]
 800d6de:	4418      	add	r0, r3
 800d6e0:	69e3      	ldr	r3, [r4, #28]
 800d6e2:	6260      	str	r0, [r4, #36]	; 0x24
 800d6e4:	6013      	str	r3, [r2, #0]
 800d6e6:	3303      	adds	r3, #3
 800d6e8:	f023 0303 	bic.w	r3, r3, #3
 800d6ec:	61e3      	str	r3, [r4, #28]
 800d6ee:	b002      	add	sp, #8
 800d6f0:	bd10      	pop	{r4, pc}
 800d6f2:	bf00      	nop
 800d6f4:	20000c90 	mulcs	r0, r0, ip

0800d6f8 <WS28xx::WS28xx(PixelConfiguration&)>:
 800d6f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d6fa:	23aa      	movs	r3, #170	; 0xaa
 800d6fc:	2203      	movs	r2, #3
 800d6fe:	e9c0 2300 	strd	r2, r3, [r0]
 800d702:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800d706:	460f      	mov	r7, r1
 800d708:	6102      	str	r2, [r0, #16]
 800d70a:	2300      	movs	r3, #0
 800d70c:	2106      	movs	r1, #6
 800d70e:	f44f 7280 	mov.w	r2, #256	; 0x100
 800d712:	4605      	mov	r5, r0
 800d714:	463e      	mov	r6, r7
 800d716:	4604      	mov	r4, r0
 800d718:	8282      	strh	r2, [r0, #20]
 800d71a:	e9c0 1302 	strd	r1, r3, [r0, #8]
 800d71e:	4a16      	ldr	r2, [pc, #88]	; (800d778 <WS28xx::WS28xx(PixelConfiguration&)+0x80>)
 800d720:	e9c0 3308 	strd	r3, r3, [r0, #32]
 800d724:	4b15      	ldr	r3, [pc, #84]	; (800d77c <WS28xx::WS28xx(PixelConfiguration&)+0x84>)
 800d726:	6182      	str	r2, [r0, #24]
 800d728:	6018      	str	r0, [r3, #0]
 800d72a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800d72c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800d72e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800d732:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800d736:	a901      	add	r1, sp, #4
 800d738:	4638      	mov	r0, r7
 800d73a:	f7fe fe11 	bl	800c360 <PixelConfiguration::Validate(unsigned int&)>
 800d73e:	6862      	ldr	r2, [r4, #4]
 800d740:	9b01      	ldr	r3, [sp, #4]
 800d742:	7d61      	ldrb	r1, [r4, #21]
 800d744:	4353      	muls	r3, r2
 800d746:	61e3      	str	r3, [r4, #28]
 800d748:	b111      	cbz	r1, 800d750 <WS28xx::WS28xx(PixelConfiguration&)+0x58>
 800d74a:	00db      	lsls	r3, r3, #3
 800d74c:	3301      	adds	r3, #1
 800d74e:	61e3      	str	r3, [r4, #28]
 800d750:	6823      	ldr	r3, [r4, #0]
 800d752:	4620      	mov	r0, r4
 800d754:	3b0b      	subs	r3, #11
 800d756:	2b02      	cmp	r3, #2
 800d758:	bf9f      	itttt	ls
 800d75a:	69e3      	ldrls	r3, [r4, #28]
 800d75c:	18d2      	addls	r2, r2, r3
 800d75e:	3208      	addls	r2, #8
 800d760:	61e2      	strls	r2, [r4, #28]
 800d762:	f7ff ffb1 	bl	800d6c8 <WS28xx::SetupBuffers()>
 800d766:	f005 f837 	bl	80127d8 <gd32_spi_dma_begin()>
 800d76a:	68f8      	ldr	r0, [r7, #12]
 800d76c:	f005 f8be 	bl	80128ec <gd32_spi_dma_set_speed_hz(unsigned int)>
 800d770:	4620      	mov	r0, r4
 800d772:	b003      	add	sp, #12
 800d774:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d776:	bf00      	nop
 800d778:	080150cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, lr}
 800d77c:	20000c94 	mulcs	r0, r4, ip

0800d780 <WS28xx::Update()>:
 800d780:	2200      	movs	r2, #0
 800d782:	b430      	push	{r4, r5}
 800d784:	4b0b      	ldr	r3, [pc, #44]	; (800d7b4 <WS28xx::Update()+0x34>)
 800d786:	681b      	ldr	r3, [r3, #0]
 800d788:	e9d0 1407 	ldrd	r1, r4, [r0, #28]
 800d78c:	4299      	cmp	r1, r3
 800d78e:	d807      	bhi.n	800d7a0 <WS28xx::Update()+0x20>
 800d790:	2300      	movs	r3, #0
 800d792:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d794:	084d      	lsrs	r5, r1, #1
 800d796:	42ab      	cmp	r3, r5
 800d798:	d105      	bne.n	800d7a6 <WS28xx::Update()+0x26>
 800d79a:	bc30      	pop	{r4, r5}
 800d79c:	f005 b8c2 	b.w	8012924 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800d7a0:	54e2      	strb	r2, [r4, r3]
 800d7a2:	3301      	adds	r3, #1
 800d7a4:	e7f0      	b.n	800d788 <WS28xx::Update()+0x8>
 800d7a6:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800d7aa:	ba52      	rev16	r2, r2
 800d7ac:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800d7b0:	3301      	adds	r3, #1
 800d7b2:	e7f0      	b.n	800d796 <WS28xx::Update()+0x16>
 800d7b4:	20000c90 	mulcs	r0, r0, ip

0800d7b8 <WS28xx::Blackout()>:
 800d7b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d7bc:	4604      	mov	r4, r0
 800d7be:	f3bf 8f6f 	isb	sy
 800d7c2:	f005 f8c9 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800d7c6:	2800      	cmp	r0, #0
 800d7c8:	d1f9      	bne.n	800d7be <WS28xx::Blackout()+0x6>
 800d7ca:	e9d4 2800 	ldrd	r2, r8, [r4]
 800d7ce:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800d7d2:	f1a2 070b 	sub.w	r7, r2, #11
 800d7d6:	2f02      	cmp	r7, #2
 800d7d8:	6223      	str	r3, [r4, #32]
 800d7da:	7018      	strb	r0, [r3, #0]
 800d7dc:	d829      	bhi.n	800d832 <WS28xx::Blackout()+0x7a>
 800d7de:	4605      	mov	r5, r0
 800d7e0:	4681      	mov	r9, r0
 800d7e2:	7058      	strb	r0, [r3, #1]
 800d7e4:	7098      	strb	r0, [r3, #2]
 800d7e6:	70d8      	strb	r0, [r3, #3]
 800d7e8:	4545      	cmp	r5, r8
 800d7ea:	d118      	bne.n	800d81e <WS28xx::Blackout()+0x66>
 800d7ec:	2f02      	cmp	r7, #2
 800d7ee:	bf14      	ite	ne
 800d7f0:	21ff      	movne	r1, #255	; 0xff
 800d7f2:	2100      	moveq	r1, #0
 800d7f4:	69e2      	ldr	r2, [r4, #28]
 800d7f6:	6a20      	ldr	r0, [r4, #32]
 800d7f8:	3a04      	subs	r2, #4
 800d7fa:	1883      	adds	r3, r0, r2
 800d7fc:	5481      	strb	r1, [r0, r2]
 800d7fe:	7059      	strb	r1, [r3, #1]
 800d800:	7099      	strb	r1, [r3, #2]
 800d802:	70d9      	strb	r1, [r3, #3]
 800d804:	4620      	mov	r0, r4
 800d806:	f7ff ffbb 	bl	800d780 <WS28xx::Update()>
 800d80a:	f3bf 8f6f 	isb	sy
 800d80e:	f005 f8a3 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800d812:	2800      	cmp	r0, #0
 800d814:	d1f9      	bne.n	800d80a <WS28xx::Blackout()+0x52>
 800d816:	6226      	str	r6, [r4, #32]
 800d818:	b003      	add	sp, #12
 800d81a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d81e:	2300      	movs	r3, #0
 800d820:	4629      	mov	r1, r5
 800d822:	461a      	mov	r2, r3
 800d824:	4620      	mov	r0, r4
 800d826:	f8cd 9000 	str.w	r9, [sp]
 800d82a:	f7ff fa07 	bl	800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d82e:	3501      	adds	r5, #1
 800d830:	e7da      	b.n	800d7e8 <WS28xx::Blackout()+0x30>
 800d832:	6a23      	ldr	r3, [r4, #32]
 800d834:	b102      	cbz	r2, 800d838 <WS28xx::Blackout()+0x80>
 800d836:	7c22      	ldrb	r2, [r4, #16]
 800d838:	69e1      	ldr	r1, [r4, #28]
 800d83a:	4419      	add	r1, r3
 800d83c:	4299      	cmp	r1, r3
 800d83e:	d0e1      	beq.n	800d804 <WS28xx::Blackout()+0x4c>
 800d840:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d844:	e7fa      	b.n	800d83c <WS28xx::Blackout()+0x84>

0800d846 <WS28xx::FullOn()>:
 800d846:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d84a:	4604      	mov	r4, r0
 800d84c:	f3bf 8f6f 	isb	sy
 800d850:	f005 f882 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800d854:	2800      	cmp	r0, #0
 800d856:	d1f9      	bne.n	800d84c <WS28xx::FullOn()+0x6>
 800d858:	e9d4 2800 	ldrd	r2, r8, [r4]
 800d85c:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800d860:	f1a2 070b 	sub.w	r7, r2, #11
 800d864:	2f02      	cmp	r7, #2
 800d866:	6223      	str	r3, [r4, #32]
 800d868:	7018      	strb	r0, [r3, #0]
 800d86a:	d82a      	bhi.n	800d8c2 <WS28xx::FullOn()+0x7c>
 800d86c:	4605      	mov	r5, r0
 800d86e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d872:	7058      	strb	r0, [r3, #1]
 800d874:	7098      	strb	r0, [r3, #2]
 800d876:	70d8      	strb	r0, [r3, #3]
 800d878:	4545      	cmp	r5, r8
 800d87a:	d118      	bne.n	800d8ae <WS28xx::FullOn()+0x68>
 800d87c:	2f02      	cmp	r7, #2
 800d87e:	bf14      	ite	ne
 800d880:	21ff      	movne	r1, #255	; 0xff
 800d882:	2100      	moveq	r1, #0
 800d884:	69e2      	ldr	r2, [r4, #28]
 800d886:	6a20      	ldr	r0, [r4, #32]
 800d888:	3a04      	subs	r2, #4
 800d88a:	1883      	adds	r3, r0, r2
 800d88c:	5481      	strb	r1, [r0, r2]
 800d88e:	7059      	strb	r1, [r3, #1]
 800d890:	7099      	strb	r1, [r3, #2]
 800d892:	70d9      	strb	r1, [r3, #3]
 800d894:	4620      	mov	r0, r4
 800d896:	f7ff ff73 	bl	800d780 <WS28xx::Update()>
 800d89a:	f3bf 8f6f 	isb	sy
 800d89e:	f005 f85b 	bl	8012958 <gd32_spi_dma_tx_is_active()>
 800d8a2:	2800      	cmp	r0, #0
 800d8a4:	d1f9      	bne.n	800d89a <WS28xx::FullOn()+0x54>
 800d8a6:	6226      	str	r6, [r4, #32]
 800d8a8:	b003      	add	sp, #12
 800d8aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8ae:	23ff      	movs	r3, #255	; 0xff
 800d8b0:	4629      	mov	r1, r5
 800d8b2:	461a      	mov	r2, r3
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	f8cd 9000 	str.w	r9, [sp]
 800d8ba:	f7ff f9bf 	bl	800cc3c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d8be:	3501      	adds	r5, #1
 800d8c0:	e7da      	b.n	800d878 <WS28xx::FullOn()+0x32>
 800d8c2:	6a23      	ldr	r3, [r4, #32]
 800d8c4:	b13a      	cbz	r2, 800d8d6 <WS28xx::FullOn()+0x90>
 800d8c6:	7c61      	ldrb	r1, [r4, #17]
 800d8c8:	69e2      	ldr	r2, [r4, #28]
 800d8ca:	441a      	add	r2, r3
 800d8cc:	429a      	cmp	r2, r3
 800d8ce:	d0e1      	beq.n	800d894 <WS28xx::FullOn()+0x4e>
 800d8d0:	f803 1f01 	strb.w	r1, [r3, #1]!
 800d8d4:	e7fa      	b.n	800d8cc <WS28xx::FullOn()+0x86>
 800d8d6:	21ff      	movs	r1, #255	; 0xff
 800d8d8:	e7f6      	b.n	800d8c8 <WS28xx::FullOn()+0x82>
	...

0800d8dc <net_timers_run>:
 800d8dc:	4b05      	ldr	r3, [pc, #20]	; (800d8f4 <net_timers_run+0x18>)
 800d8de:	4a06      	ldr	r2, [pc, #24]	; (800d8f8 <net_timers_run+0x1c>)
 800d8e0:	681b      	ldr	r3, [r3, #0]
 800d8e2:	6811      	ldr	r1, [r2, #0]
 800d8e4:	4299      	cmp	r1, r3
 800d8e6:	d803      	bhi.n	800d8f0 <net_timers_run+0x14>
 800d8e8:	3364      	adds	r3, #100	; 0x64
 800d8ea:	6013      	str	r3, [r2, #0]
 800d8ec:	f001 be6a 	b.w	800f5c4 <igmp_timer>
 800d8f0:	4770      	bx	lr
 800d8f2:	bf00      	nop
 800d8f4:	20009c84 	andcs	r9, r0, r4, lsl #25
 800d8f8:	20000cb0 			; <UNDEFINED> instruction: 0x20000cb0

0800d8fc <rfc3927>:
 800d8fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d900:	4606      	mov	r6, r0
 800d902:	25ff      	movs	r5, #255	; 0xff
 800d904:	4b18      	ldr	r3, [pc, #96]	; (800d968 <rfc3927+0x6c>)
 800d906:	4f19      	ldr	r7, [pc, #100]	; (800d96c <rfc3927+0x70>)
 800d908:	791a      	ldrb	r2, [r3, #4]
 800d90a:	78dc      	ldrb	r4, [r3, #3]
 800d90c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d970 <rfc3927+0x74>
 800d910:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800d914:	f8d7 9000 	ldr.w	r9, [r7]
 800d918:	f8df b058 	ldr.w	fp, [pc, #88]	; 800d974 <rfc3927+0x78>
 800d91c:	f8df a058 	ldr.w	sl, [pc, #88]	; 800d978 <rfc3927+0x7c>
 800d920:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800d924:	4659      	mov	r1, fp
 800d926:	4620      	mov	r0, r4
 800d928:	f001 fbaa 	bl	800f080 <arp_cache_lookup>
 800d92c:	b190      	cbz	r0, 800d954 <rfc3927+0x58>
 800d92e:	ba24      	rev	r4, r4
 800d930:	3401      	adds	r4, #1
 800d932:	3d01      	subs	r5, #1
 800d934:	ba24      	rev	r4, r4
 800d936:	b2ad      	uxth	r5, r5
 800d938:	4554      	cmp	r4, sl
 800d93a:	bf08      	it	eq
 800d93c:	4644      	moveq	r4, r8
 800d93e:	b18d      	cbz	r5, 800d964 <rfc3927+0x68>
 800d940:	683b      	ldr	r3, [r7, #0]
 800d942:	eba3 0309 	sub.w	r3, r3, r9
 800d946:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d94a:	d3eb      	bcc.n	800d924 <rfc3927+0x28>
 800d94c:	2400      	movs	r4, #0
 800d94e:	4623      	mov	r3, r4
 800d950:	4620      	mov	r0, r4
 800d952:	e002      	b.n	800d95a <rfc3927+0x5e>
 800d954:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d958:	2001      	movs	r0, #1
 800d95a:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800d95e:	6034      	str	r4, [r6, #0]
 800d960:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d964:	462c      	mov	r4, r5
 800d966:	e7f2      	b.n	800d94e <rfc3927+0x52>
 800d968:	20000cb4 			; <UNDEFINED> instruction: 0x20000cb4
 800d96c:	20009c84 	andcs	r9, r0, r4, lsl #25
 800d970:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800d974:	20000cbc 			; <UNDEFINED> instruction: 0x20000cbc
 800d978:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800d97c <_init_tcb>:
 800d97c:	b510      	push	{r4, lr}
 800d97e:	4603      	mov	r3, r0
 800d980:	2400      	movs	r4, #0
 800d982:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800d986:	4293      	cmp	r3, r2
 800d988:	d10d      	bne.n	800d9a6 <_init_tcb+0x2a>
 800d98a:	4b08      	ldr	r3, [pc, #32]	; (800d9ac <_init_tcb+0x30>)
 800d98c:	f640 3268 	movw	r2, #2920	; 0xb68
 800d990:	681b      	ldr	r3, [r3, #0]
 800d992:	8702      	strh	r2, [r0, #56]	; 0x38
 800d994:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d998:	6283      	str	r3, [r0, #40]	; 0x28
 800d99a:	6243      	str	r3, [r0, #36]	; 0x24
 800d99c:	2301      	movs	r3, #1
 800d99e:	8001      	strh	r1, [r0, #0]
 800d9a0:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d9a4:	bd10      	pop	{r4, pc}
 800d9a6:	f803 4b01 	strb.w	r4, [r3], #1
 800d9aa:	e7ec      	b.n	800d986 <_init_tcb+0xa>
 800d9ac:	20009c84 	andcs	r9, r0, r4, lsl #25

0800d9b0 <memcpy.isra.0>:
 800d9b0:	3801      	subs	r0, #1
 800d9b2:	440a      	add	r2, r1
 800d9b4:	4291      	cmp	r1, r2
 800d9b6:	d100      	bne.n	800d9ba <memcpy.isra.0+0xa>
 800d9b8:	4770      	bx	lr
 800d9ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d9be:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d9c2:	e7f7      	b.n	800d9b4 <memcpy.isra.0+0x4>

0800d9c4 <_bswap32>:
 800d9c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9c6:	2204      	movs	r2, #4
 800d9c8:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800d9cc:	4629      	mov	r1, r5
 800d9ce:	4604      	mov	r4, r0
 800d9d0:	eb0d 0002 	add.w	r0, sp, r2
 800d9d4:	f7ff ffec 	bl	800d9b0 <memcpy.isra.0>
 800d9d8:	2204      	movs	r2, #4
 800d9da:	9b01      	ldr	r3, [sp, #4]
 800d9dc:	eb0d 0102 	add.w	r1, sp, r2
 800d9e0:	ba1b      	rev	r3, r3
 800d9e2:	4628      	mov	r0, r5
 800d9e4:	9301      	str	r3, [sp, #4]
 800d9e6:	f7ff ffe3 	bl	800d9b0 <memcpy.isra.0>
 800d9ea:	2204      	movs	r2, #4
 800d9ec:	3426      	adds	r4, #38	; 0x26
 800d9ee:	eb0d 0002 	add.w	r0, sp, r2
 800d9f2:	4621      	mov	r1, r4
 800d9f4:	f7ff ffdc 	bl	800d9b0 <memcpy.isra.0>
 800d9f8:	2204      	movs	r2, #4
 800d9fa:	9b01      	ldr	r3, [sp, #4]
 800d9fc:	4620      	mov	r0, r4
 800d9fe:	ba1b      	rev	r3, r3
 800da00:	eb0d 0102 	add.w	r1, sp, r2
 800da04:	9301      	str	r3, [sp, #4]
 800da06:	f7ff ffd3 	bl	800d9b0 <memcpy.isra.0>
 800da0a:	b003      	add	sp, #12
 800da0c:	bd30      	pop	{r4, r5, pc}
	...

0800da10 <_tcp_send_package>:
 800da10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800da14:	7a0b      	ldrb	r3, [r1, #8]
 800da16:	4605      	mov	r5, r0
 800da18:	f013 0f02 	tst.w	r3, #2
 800da1c:	bf0c      	ite	eq
 800da1e:	f04f 0805 	moveq.w	r8, #5
 800da22:	f04f 0806 	movne.w	r8, #6
 800da26:	f04f 0a00 	mov.w	sl, #0
 800da2a:	4c47      	ldr	r4, [pc, #284]	; (800db48 <_tcp_send_package+0x138>)
 800da2c:	460f      	mov	r7, r1
 800da2e:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800da30:	f100 0108 	add.w	r1, r0, #8
 800da34:	2206      	movs	r2, #6
 800da36:	4620      	mov	r0, r4
 800da38:	f7ff ffba 	bl	800d9b0 <memcpy.isra.0>
 800da3c:	4a43      	ldr	r2, [pc, #268]	; (800db4c <_tcp_send_package+0x13c>)
 800da3e:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800da42:	8813      	ldrh	r3, [r2, #0]
 800da44:	b2b6      	uxth	r6, r6
 800da46:	1c59      	adds	r1, r3, #1
 800da48:	8263      	strh	r3, [r4, #18]
 800da4a:	f105 0904 	add.w	r9, r5, #4
 800da4e:	f106 0314 	add.w	r3, r6, #20
 800da52:	ba5b      	rev16	r3, r3
 800da54:	8011      	strh	r1, [r2, #0]
 800da56:	f104 001e 	add.w	r0, r4, #30
 800da5a:	2204      	movs	r2, #4
 800da5c:	4649      	mov	r1, r9
 800da5e:	8223      	strh	r3, [r4, #16]
 800da60:	f7ff ffa6 	bl	800d9b0 <memcpy.isra.0>
 800da64:	2114      	movs	r1, #20
 800da66:	f104 000e 	add.w	r0, r4, #14
 800da6a:	f8a4 a018 	strh.w	sl, [r4, #24]
 800da6e:	f001 fe3c 	bl	800f6ea <net_chksum>
 800da72:	882b      	ldrh	r3, [r5, #0]
 800da74:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800da78:	8463      	strh	r3, [r4, #34]	; 0x22
 800da7a:	886b      	ldrh	r3, [r5, #2]
 800da7c:	8320      	strh	r0, [r4, #24]
 800da7e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800da80:	683b      	ldr	r3, [r7, #0]
 800da82:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800da84:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800da88:	687b      	ldr	r3, [r7, #4]
 800da8a:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800da8e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800da92:	7a3b      	ldrb	r3, [r7, #8]
 800da94:	8622      	strh	r2, [r4, #48]	; 0x30
 800da96:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800da9a:	079b      	lsls	r3, r3, #30
 800da9c:	bf48      	it	mi
 800da9e:	f240 4302 	movwmi	r3, #1026	; 0x402
 800daa2:	8baa      	ldrh	r2, [r5, #28]
 800daa4:	bf48      	it	mi
 800daa6:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800daa8:	86a2      	strh	r2, [r4, #52]	; 0x34
 800daaa:	bf42      	ittt	mi
 800daac:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800dab0:	4622      	movmi	r2, r4
 800dab2:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800dab6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800dab8:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800dabc:	bf58      	it	pl
 800dabe:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800dac2:	2b00      	cmp	r3, #0
 800dac4:	d13e      	bne.n	800db44 <_tcp_send_package+0x134>
 800dac6:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800dac8:	481f      	ldr	r0, [pc, #124]	; (800db48 <_tcp_send_package+0x138>)
 800daca:	ba5b      	rev16	r3, r3
 800dacc:	8463      	strh	r3, [r4, #34]	; 0x22
 800dace:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800dad0:	ba5b      	rev16	r3, r3
 800dad2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800dad4:	f7ff ff76 	bl	800d9c4 <_bswap32>
 800dad8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dada:	a801      	add	r0, sp, #4
 800dadc:	ba5b      	rev16	r3, r3
 800dade:	8623      	strh	r3, [r4, #48]	; 0x30
 800dae0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dae2:	220c      	movs	r2, #12
 800dae4:	ba5b      	rev16	r3, r3
 800dae6:	491a      	ldr	r1, [pc, #104]	; (800db50 <_tcp_send_package+0x140>)
 800dae8:	86a3      	strh	r3, [r4, #52]	; 0x34
 800daea:	f7ff ff61 	bl	800d9b0 <memcpy.isra.0>
 800daee:	2204      	movs	r2, #4
 800daf0:	4918      	ldr	r1, [pc, #96]	; (800db54 <_tcp_send_package+0x144>)
 800daf2:	4817      	ldr	r0, [pc, #92]	; (800db50 <_tcp_send_package+0x140>)
 800daf4:	f7ff ff5c 	bl	800d9b0 <memcpy.isra.0>
 800daf8:	2204      	movs	r2, #4
 800dafa:	4649      	mov	r1, r9
 800dafc:	4816      	ldr	r0, [pc, #88]	; (800db58 <_tcp_send_package+0x148>)
 800dafe:	f7ff ff57 	bl	800d9b0 <memcpy.isra.0>
 800db02:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800db06:	f106 010c 	add.w	r1, r6, #12
 800db0a:	83e3      	strh	r3, [r4, #30]
 800db0c:	4810      	ldr	r0, [pc, #64]	; (800db50 <_tcp_send_package+0x140>)
 800db0e:	ba73      	rev16	r3, r6
 800db10:	8423      	strh	r3, [r4, #32]
 800db12:	f001 fdea 	bl	800f6ea <net_chksum>
 800db16:	a901      	add	r1, sp, #4
 800db18:	4605      	mov	r5, r0
 800db1a:	220c      	movs	r2, #12
 800db1c:	480c      	ldr	r0, [pc, #48]	; (800db50 <_tcp_send_package+0x140>)
 800db1e:	f7ff ff47 	bl	800d9b0 <memcpy.isra.0>
 800db22:	4809      	ldr	r0, [pc, #36]	; (800db48 <_tcp_send_package+0x138>)
 800db24:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800db28:	8665      	strh	r5, [r4, #50]	; 0x32
 800db2a:	b004      	add	sp, #16
 800db2c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db30:	f004 bcaa 	b.w	8012488 <emac_eth_send>
 800db34:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800db36:	5cc9      	ldrb	r1, [r1, r3]
 800db38:	54d1      	strb	r1, [r2, r3]
 800db3a:	3301      	adds	r3, #1
 800db3c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800db3e:	4299      	cmp	r1, r3
 800db40:	d8f8      	bhi.n	800db34 <_tcp_send_package+0x124>
 800db42:	e7c0      	b.n	800dac6 <_tcp_send_package+0xb6>
 800db44:	2300      	movs	r3, #0
 800db46:	e7f9      	b.n	800db3c <_tcp_send_package+0x12c>
 800db48:	2000187c 	andcs	r1, r0, ip, ror r8
 800db4c:	20000cc4 	andcs	r0, r0, r4, asr #25
 800db50:	20001892 	mulcs	r0, r2, r8
 800db54:	20000c98 	mulcs	r0, r8, ip
 800db58:	20001896 	mulcs	r0, r6, r8

0800db5c <_send_reset>:
 800db5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800db5e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800db62:	4604      	mov	r4, r0
 800db64:	075a      	lsls	r2, r3, #29
 800db66:	460e      	mov	r6, r1
 800db68:	d421      	bmi.n	800dbae <_send_reset+0x52>
 800db6a:	2204      	movs	r2, #4
 800db6c:	f013 0310 	ands.w	r3, r3, #16
 800db70:	f88d 200c 	strb.w	r2, [sp, #12]
 800db74:	d01d      	beq.n	800dbb2 <_send_reset+0x56>
 800db76:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800db7a:	4668      	mov	r0, sp
 800db7c:	f7ff ff18 	bl	800d9b0 <memcpy.isra.0>
 800db80:	9b00      	ldr	r3, [sp, #0]
 800db82:	9301      	str	r3, [sp, #4]
 800db84:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800db88:	4668      	mov	r0, sp
 800db8a:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800db8e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800db92:	07db      	lsls	r3, r3, #31
 800db94:	f04f 0204 	mov.w	r2, #4
 800db98:	bf48      	it	mi
 800db9a:	3501      	addmi	r5, #1
 800db9c:	f7ff ff08 	bl	800d9b0 <memcpy.isra.0>
 800dba0:	9b00      	ldr	r3, [sp, #0]
 800dba2:	4630      	mov	r0, r6
 800dba4:	441d      	add	r5, r3
 800dba6:	a901      	add	r1, sp, #4
 800dba8:	9502      	str	r5, [sp, #8]
 800dbaa:	f7ff ff31 	bl	800da10 <_tcp_send_package>
 800dbae:	b004      	add	sp, #16
 800dbb0:	bd70      	pop	{r4, r5, r6, pc}
 800dbb2:	9301      	str	r3, [sp, #4]
 800dbb4:	2314      	movs	r3, #20
 800dbb6:	f88d 300c 	strb.w	r3, [sp, #12]
 800dbba:	e7e3      	b.n	800db84 <_send_reset+0x28>

0800dbbc <tcp_begin>:
 800dbbc:	b508      	push	{r3, lr}
 800dbbe:	4b0a      	ldr	r3, [pc, #40]	; (800dbe8 <tcp_begin+0x2c>)
 800dbc0:	4601      	mov	r1, r0
 800dbc2:	881a      	ldrh	r2, [r3, #0]
 800dbc4:	4282      	cmp	r2, r0
 800dbc6:	d102      	bne.n	800dbce <tcp_begin+0x12>
 800dbc8:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800dbcc:	b130      	cbz	r0, 800dbdc <tcp_begin+0x20>
 800dbce:	b12a      	cbz	r2, 800dbdc <tcp_begin+0x20>
 800dbd0:	4806      	ldr	r0, [pc, #24]	; (800dbec <tcp_begin+0x30>)
 800dbd2:	f003 f885 	bl	8010ce0 <console_error>
 800dbd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dbda:	bd08      	pop	{r3, pc}
 800dbdc:	4802      	ldr	r0, [pc, #8]	; (800dbe8 <tcp_begin+0x2c>)
 800dbde:	8019      	strh	r1, [r3, #0]
 800dbe0:	f7ff fecc 	bl	800d97c <_init_tcb>
 800dbe4:	2000      	movs	r0, #0
 800dbe6:	e7f8      	b.n	800dbda <tcp_begin+0x1e>
 800dbe8:	20001838 	andcs	r1, r0, r8, lsr r8
 800dbec:	080151cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, lr}

0800dbf0 <tcp_write>:
 800dbf0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800dbf4:	429a      	cmp	r2, r3
 800dbf6:	bf28      	it	cs
 800dbf8:	461a      	movcs	r2, r3
 800dbfa:	2344      	movs	r3, #68	; 0x44
 800dbfc:	b530      	push	{r4, r5, lr}
 800dbfe:	4c0d      	ldr	r4, [pc, #52]	; (800dc34 <tcp_write+0x44>)
 800dc00:	b085      	sub	sp, #20
 800dc02:	fb03 4400 	mla	r4, r3, r0, r4
 800dc06:	6963      	ldr	r3, [r4, #20]
 800dc08:	62e1      	str	r1, [r4, #44]	; 0x2c
 800dc0a:	9301      	str	r3, [sp, #4]
 800dc0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dc0e:	4620      	mov	r0, r4
 800dc10:	9302      	str	r3, [sp, #8]
 800dc12:	2318      	movs	r3, #24
 800dc14:	8622      	strh	r2, [r4, #48]	; 0x30
 800dc16:	a901      	add	r1, sp, #4
 800dc18:	4615      	mov	r5, r2
 800dc1a:	f88d 300c 	strb.w	r3, [sp, #12]
 800dc1e:	f7ff fef7 	bl	800da10 <_tcp_send_package>
 800dc22:	2300      	movs	r3, #0
 800dc24:	62e3      	str	r3, [r4, #44]	; 0x2c
 800dc26:	8623      	strh	r3, [r4, #48]	; 0x30
 800dc28:	6963      	ldr	r3, [r4, #20]
 800dc2a:	442b      	add	r3, r5
 800dc2c:	6163      	str	r3, [r4, #20]
 800dc2e:	b005      	add	sp, #20
 800dc30:	bd30      	pop	{r4, r5, pc}
 800dc32:	bf00      	nop
 800dc34:	20001838 	andcs	r1, r0, r8, lsr r8

0800dc38 <tcp_read>:
 800dc38:	2344      	movs	r3, #68	; 0x44
 800dc3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc3c:	4c1c      	ldr	r4, [pc, #112]	; (800dcb0 <tcp_read+0x78>)
 800dc3e:	b085      	sub	sp, #20
 800dc40:	fb03 4400 	mla	r4, r3, r0, r4
 800dc44:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dc48:	2b07      	cmp	r3, #7
 800dc4a:	d112      	bne.n	800dc72 <tcp_read+0x3a>
 800dc4c:	6963      	ldr	r3, [r4, #20]
 800dc4e:	4620      	mov	r0, r4
 800dc50:	9301      	str	r3, [sp, #4]
 800dc52:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dc54:	a901      	add	r1, sp, #4
 800dc56:	9302      	str	r3, [sp, #8]
 800dc58:	2311      	movs	r3, #17
 800dc5a:	f88d 300c 	strb.w	r3, [sp, #12]
 800dc5e:	f7ff fed7 	bl	800da10 <_tcp_send_package>
 800dc62:	2309      	movs	r3, #9
 800dc64:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800dc68:	6963      	ldr	r3, [r4, #20]
 800dc6a:	3301      	adds	r3, #1
 800dc6c:	6163      	str	r3, [r4, #20]
 800dc6e:	2000      	movs	r0, #0
 800dc70:	e01b      	b.n	800dcaa <tcp_read+0x72>
 800dc72:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800dc76:	4358      	muls	r0, r3
 800dc78:	4a0e      	ldr	r2, [pc, #56]	; (800dcb4 <tcp_read+0x7c>)
 800dc7a:	1817      	adds	r7, r2, r0
 800dc7c:	887b      	ldrh	r3, [r7, #2]
 800dc7e:	5a15      	ldrh	r5, [r2, r0]
 800dc80:	429d      	cmp	r5, r3
 800dc82:	d0f4      	beq.n	800dc6e <tcp_read+0x36>
 800dc84:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800dc88:	435d      	muls	r5, r3
 800dc8a:	1d06      	adds	r6, r0, #4
 800dc8c:	442e      	add	r6, r5
 800dc8e:	4416      	add	r6, r2
 800dc90:	4405      	add	r5, r0
 800dc92:	600e      	str	r6, [r1, #0]
 800dc94:	442a      	add	r2, r5
 800dc96:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800dc9a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800dc9c:	3301      	adds	r3, #1
 800dc9e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800dca2:	f003 0301 	and.w	r3, r3, #1
 800dca6:	8722      	strh	r2, [r4, #56]	; 0x38
 800dca8:	807b      	strh	r3, [r7, #2]
 800dcaa:	b005      	add	sp, #20
 800dcac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dcae:	bf00      	nop
 800dcb0:	20001838 	andcs	r1, r0, r8, lsr r8
 800dcb4:	20000cc8 	andcs	r0, r0, r8, asr #25

0800dcb8 <memcpy.isra.0>:
 800dcb8:	3801      	subs	r0, #1
 800dcba:	440a      	add	r2, r1
 800dcbc:	4291      	cmp	r1, r2
 800dcbe:	d100      	bne.n	800dcc2 <memcpy.isra.0+0xa>
 800dcc0:	4770      	bx	lr
 800dcc2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dcc6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dcca:	e7f7      	b.n	800dcbc <memcpy.isra.0+0x4>

0800dccc <net_memcpy>:
 800dccc:	ea40 0301 	orr.w	r3, r0, r1
 800dcd0:	079b      	lsls	r3, r3, #30
 800dcd2:	b570      	push	{r4, r5, r6, lr}
 800dcd4:	d108      	bne.n	800dce8 <net_memcpy+0x1c>
 800dcd6:	f022 0303 	bic.w	r3, r2, #3
 800dcda:	1f04      	subs	r4, r0, #4
 800dcdc:	18cd      	adds	r5, r1, r3
 800dcde:	42a9      	cmp	r1, r5
 800dce0:	d108      	bne.n	800dcf4 <net_memcpy+0x28>
 800dce2:	1ad2      	subs	r2, r2, r3
 800dce4:	4403      	add	r3, r0
 800dce6:	e000      	b.n	800dcea <net_memcpy+0x1e>
 800dce8:	4603      	mov	r3, r0
 800dcea:	3b01      	subs	r3, #1
 800dcec:	440a      	add	r2, r1
 800dcee:	4291      	cmp	r1, r2
 800dcf0:	d105      	bne.n	800dcfe <net_memcpy+0x32>
 800dcf2:	bd70      	pop	{r4, r5, r6, pc}
 800dcf4:	f851 6b04 	ldr.w	r6, [r1], #4
 800dcf8:	f844 6f04 	str.w	r6, [r4, #4]!
 800dcfc:	e7ef      	b.n	800dcde <net_memcpy+0x12>
 800dcfe:	f811 4b01 	ldrb.w	r4, [r1], #1
 800dd02:	f803 4f01 	strb.w	r4, [r3, #1]!
 800dd06:	e7f2      	b.n	800dcee <net_memcpy+0x22>

0800dd08 <udp_set_ip>:
 800dd08:	2204      	movs	r2, #4
 800dd0a:	b513      	push	{r0, r1, r4, lr}
 800dd0c:	4604      	mov	r4, r0
 800dd0e:	6803      	ldr	r3, [r0, #0]
 800dd10:	eb0d 0102 	add.w	r1, sp, r2
 800dd14:	4808      	ldr	r0, [pc, #32]	; (800dd38 <udp_set_ip+0x30>)
 800dd16:	9301      	str	r3, [sp, #4]
 800dd18:	f7ff ffce 	bl	800dcb8 <memcpy.isra.0>
 800dd1c:	6862      	ldr	r2, [r4, #4]
 800dd1e:	4b07      	ldr	r3, [pc, #28]	; (800dd3c <udp_set_ip+0x34>)
 800dd20:	43d1      	mvns	r1, r2
 800dd22:	6019      	str	r1, [r3, #0]
 800dd24:	6823      	ldr	r3, [r4, #0]
 800dd26:	4013      	ands	r3, r2
 800dd28:	4a05      	ldr	r2, [pc, #20]	; (800dd40 <udp_set_ip+0x38>)
 800dd2a:	6013      	str	r3, [r2, #0]
 800dd2c:	68a2      	ldr	r2, [r4, #8]
 800dd2e:	4b05      	ldr	r3, [pc, #20]	; (800dd44 <udp_set_ip+0x3c>)
 800dd30:	601a      	str	r2, [r3, #0]
 800dd32:	b002      	add	sp, #8
 800dd34:	bd10      	pop	{r4, pc}
 800dd36:	bf00      	nop
 800dd38:	20007b52 	andcs	r7, r0, r2, asr fp
 800dd3c:	20001e68 	andcs	r1, r0, r8, ror #28
 800dd40:	20001e70 	andcs	r1, r0, r0, ror lr
 800dd44:	20001e6c 	andcs	r1, r0, ip, ror #28

0800dd48 <udp_bind>:
 800dd48:	4a0a      	ldr	r2, [pc, #40]	; (800dd74 <udp_bind+0x2c>)
 800dd4a:	4603      	mov	r3, r0
 800dd4c:	b510      	push	{r4, lr}
 800dd4e:	2000      	movs	r0, #0
 800dd50:	4614      	mov	r4, r2
 800dd52:	f852 1b04 	ldr.w	r1, [r2], #4
 800dd56:	4299      	cmp	r1, r3
 800dd58:	d008      	beq.n	800dd6c <udp_bind+0x24>
 800dd5a:	b141      	cbz	r1, 800dd6e <udp_bind+0x26>
 800dd5c:	3001      	adds	r0, #1
 800dd5e:	2808      	cmp	r0, #8
 800dd60:	d1f7      	bne.n	800dd52 <udp_bind+0xa>
 800dd62:	4805      	ldr	r0, [pc, #20]	; (800dd78 <udp_bind+0x30>)
 800dd64:	f002 ffbc 	bl	8010ce0 <console_error>
 800dd68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dd6c:	bd10      	pop	{r4, pc}
 800dd6e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800dd72:	e7fb      	b.n	800dd6c <udp_bind+0x24>
 800dd74:	20001e78 	andcs	r1, r0, r8, ror lr
 800dd78:	080151ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, ip, lr}

0800dd7c <udp_unbind>:
 800dd7c:	4a0c      	ldr	r2, [pc, #48]	; (800ddb0 <udp_unbind+0x34>)
 800dd7e:	2300      	movs	r3, #0
 800dd80:	4611      	mov	r1, r2
 800dd82:	b510      	push	{r4, lr}
 800dd84:	f852 4b04 	ldr.w	r4, [r2], #4
 800dd88:	4284      	cmp	r4, r0
 800dd8a:	d108      	bne.n	800dd9e <udp_unbind+0x22>
 800dd8c:	2000      	movs	r0, #0
 800dd8e:	f640 3294 	movw	r2, #2964	; 0xb94
 800dd92:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800dd96:	4353      	muls	r3, r2
 800dd98:	4a06      	ldr	r2, [pc, #24]	; (800ddb4 <udp_unbind+0x38>)
 800dd9a:	50d0      	str	r0, [r2, r3]
 800dd9c:	bd10      	pop	{r4, pc}
 800dd9e:	3301      	adds	r3, #1
 800dda0:	2b08      	cmp	r3, #8
 800dda2:	d1ef      	bne.n	800dd84 <udp_unbind+0x8>
 800dda4:	4804      	ldr	r0, [pc, #16]	; (800ddb8 <udp_unbind+0x3c>)
 800dda6:	f002 ff9b 	bl	8010ce0 <console_error>
 800ddaa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ddae:	e7f5      	b.n	800dd9c <udp_unbind+0x20>
 800ddb0:	20001e78 	andcs	r1, r0, r8, ror lr
 800ddb4:	20001e98 	mulcs	r0, r8, lr
 800ddb8:	080151f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, lr}

0800ddbc <udp_recv>:
 800ddbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ddc0:	4604      	mov	r4, r0
 800ddc2:	4698      	mov	r8, r3
 800ddc4:	f640 3394 	movw	r3, #2964	; 0xb94
 800ddc8:	435c      	muls	r4, r3
 800ddca:	4608      	mov	r0, r1
 800ddcc:	4915      	ldr	r1, [pc, #84]	; (800de24 <udp_recv+0x68>)
 800ddce:	190f      	adds	r7, r1, r4
 800ddd0:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800ddd4:	5b0b      	ldrh	r3, [r1, r4]
 800ddd6:	4563      	cmp	r3, ip
 800ddd8:	d021      	beq.n	800de1e <udp_recv+0x62>
 800ddda:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800ddde:	fb03 fc0c 	mul.w	ip, r3, ip
 800dde2:	eb0c 0604 	add.w	r6, ip, r4
 800dde6:	440e      	add	r6, r1
 800dde8:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800ddec:	3404      	adds	r4, #4
 800ddee:	4295      	cmp	r5, r2
 800ddf0:	bf28      	it	cs
 800ddf2:	4615      	movcs	r5, r2
 800ddf4:	4464      	add	r4, ip
 800ddf6:	462a      	mov	r2, r5
 800ddf8:	4421      	add	r1, r4
 800ddfa:	f7ff ff67 	bl	800dccc <net_memcpy>
 800ddfe:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800de02:	f8c8 3000 	str.w	r3, [r8]
 800de06:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800de0a:	9b06      	ldr	r3, [sp, #24]
 800de0c:	801a      	strh	r2, [r3, #0]
 800de0e:	887b      	ldrh	r3, [r7, #2]
 800de10:	3301      	adds	r3, #1
 800de12:	f003 0301 	and.w	r3, r3, #1
 800de16:	807b      	strh	r3, [r7, #2]
 800de18:	4628      	mov	r0, r5
 800de1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de1e:	2500      	movs	r5, #0
 800de20:	e7fa      	b.n	800de18 <udp_recv+0x5c>
 800de22:	bf00      	nop
 800de24:	20001e98 	mulcs	r0, r8, lr

0800de28 <udp_recv2>:
 800de28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de2a:	f640 3594 	movw	r5, #2964	; 0xb94
 800de2e:	4368      	muls	r0, r5
 800de30:	4c0f      	ldr	r4, [pc, #60]	; (800de70 <udp_recv2+0x48>)
 800de32:	1827      	adds	r7, r4, r0
 800de34:	887d      	ldrh	r5, [r7, #2]
 800de36:	5a26      	ldrh	r6, [r4, r0]
 800de38:	42ae      	cmp	r6, r5
 800de3a:	d017      	beq.n	800de6c <udp_recv2+0x44>
 800de3c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800de40:	fb0c f505 	mul.w	r5, ip, r5
 800de44:	1d06      	adds	r6, r0, #4
 800de46:	442e      	add	r6, r5
 800de48:	4405      	add	r5, r0
 800de4a:	4426      	add	r6, r4
 800de4c:	442c      	add	r4, r5
 800de4e:	600e      	str	r6, [r1, #0]
 800de50:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800de54:	6011      	str	r1, [r2, #0]
 800de56:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800de5a:	801a      	strh	r2, [r3, #0]
 800de5c:	887b      	ldrh	r3, [r7, #2]
 800de5e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800de62:	3301      	adds	r3, #1
 800de64:	f003 0301 	and.w	r3, r3, #1
 800de68:	807b      	strh	r3, [r7, #2]
 800de6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de6c:	2000      	movs	r0, #0
 800de6e:	e7fc      	b.n	800de6a <udp_recv2+0x42>
 800de70:	20001e98 	mulcs	r0, r8, lr

0800de74 <udp_send>:
 800de74:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800de78:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800dfac <udp_send+0x138>
 800de7c:	461c      	mov	r4, r3
 800de7e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800de82:	4607      	mov	r7, r0
 800de84:	4688      	mov	r8, r1
 800de86:	4616      	mov	r6, r2
 800de88:	2b00      	cmp	r3, #0
 800de8a:	f000 808b 	beq.w	800dfa4 <udp_send+0x130>
 800de8e:	1c63      	adds	r3, r4, #1
 800de90:	d141      	bne.n	800df16 <udp_send+0xa2>
 800de92:	4a47      	ldr	r2, [pc, #284]	; (800dfb0 <udp_send+0x13c>)
 800de94:	2307      	movs	r3, #7
 800de96:	4611      	mov	r1, r2
 800de98:	20ff      	movs	r0, #255	; 0xff
 800de9a:	e001      	b.n	800dea0 <udp_send+0x2c>
 800de9c:	f802 0b01 	strb.w	r0, [r2], #1
 800dea0:	3b01      	subs	r3, #1
 800dea2:	d1fb      	bne.n	800de9c <udp_send+0x28>
 800dea4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dea8:	83cb      	strh	r3, [r1, #30]
 800deaa:	840b      	strh	r3, [r1, #32]
 800deac:	2500      	movs	r5, #0
 800deae:	f8df a104 	ldr.w	sl, [pc, #260]	; 800dfb4 <udp_send+0x140>
 800deb2:	4c3f      	ldr	r4, [pc, #252]	; (800dfb0 <udp_send+0x13c>)
 800deb4:	f8ba 3000 	ldrh.w	r3, [sl]
 800deb8:	2114      	movs	r1, #20
 800deba:	8263      	strh	r3, [r4, #18]
 800debc:	f106 031c 	add.w	r3, r6, #28
 800dec0:	ba5b      	rev16	r3, r3
 800dec2:	f104 000e 	add.w	r0, r4, #14
 800dec6:	8223      	strh	r3, [r4, #16]
 800dec8:	8325      	strh	r5, [r4, #24]
 800deca:	f001 fc0e 	bl	800f6ea <net_chksum>
 800dece:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800ded2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800ded6:	ba5b      	rev16	r3, r3
 800ded8:	8463      	strh	r3, [r4, #34]	; 0x22
 800deda:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800dede:	4632      	mov	r2, r6
 800dee0:	ba5b      	rev16	r3, r3
 800dee2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800dee4:	f106 0308 	add.w	r3, r6, #8
 800dee8:	ba5b      	rev16	r3, r3
 800deea:	bf28      	it	cs
 800deec:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800def0:	4641      	mov	r1, r8
 800def2:	8320      	strh	r0, [r4, #24]
 800def4:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800def8:	84e3      	strh	r3, [r4, #38]	; 0x26
 800defa:	f7ff fee7 	bl	800dccc <net_memcpy>
 800defe:	4620      	mov	r0, r4
 800df00:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800df04:	f004 fac0 	bl	8012488 <emac_eth_send>
 800df08:	f8ba 3000 	ldrh.w	r3, [sl]
 800df0c:	4628      	mov	r0, r5
 800df0e:	3301      	adds	r3, #1
 800df10:	f8aa 3000 	strh.w	r3, [sl]
 800df14:	e037      	b.n	800df86 <udp_send+0x112>
 800df16:	4b28      	ldr	r3, [pc, #160]	; (800dfb8 <udp_send+0x144>)
 800df18:	681b      	ldr	r3, [r3, #0]
 800df1a:	43a3      	bics	r3, r4
 800df1c:	d10f      	bne.n	800df3e <udp_send+0xca>
 800df1e:	2307      	movs	r3, #7
 800df20:	21ff      	movs	r1, #255	; 0xff
 800df22:	4a23      	ldr	r2, [pc, #140]	; (800dfb0 <udp_send+0x13c>)
 800df24:	e001      	b.n	800df2a <udp_send+0xb6>
 800df26:	f802 1b01 	strb.w	r1, [r2], #1
 800df2a:	3b01      	subs	r3, #1
 800df2c:	d1fb      	bne.n	800df26 <udp_send+0xb2>
 800df2e:	2204      	movs	r2, #4
 800df30:	4822      	ldr	r0, [pc, #136]	; (800dfbc <udp_send+0x148>)
 800df32:	eb0d 0102 	add.w	r1, sp, r2
 800df36:	9401      	str	r4, [sp, #4]
 800df38:	f7ff febe 	bl	800dcb8 <memcpy.isra.0>
 800df3c:	e7b6      	b.n	800deac <udp_send+0x38>
 800df3e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800df42:	2be0      	cmp	r3, #224	; 0xe0
 800df44:	d10e      	bne.n	800df64 <udp_send+0xf0>
 800df46:	491e      	ldr	r1, [pc, #120]	; (800dfc0 <udp_send+0x14c>)
 800df48:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800df4c:	70cb      	strb	r3, [r1, #3]
 800df4e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800df52:	710b      	strb	r3, [r1, #4]
 800df54:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800df58:	2206      	movs	r2, #6
 800df5a:	4815      	ldr	r0, [pc, #84]	; (800dfb0 <udp_send+0x13c>)
 800df5c:	714b      	strb	r3, [r1, #5]
 800df5e:	f7ff feab 	bl	800dcb8 <memcpy.isra.0>
 800df62:	e7e4      	b.n	800df2e <udp_send+0xba>
 800df64:	4b17      	ldr	r3, [pc, #92]	; (800dfc4 <udp_send+0x150>)
 800df66:	681b      	ldr	r3, [r3, #0]
 800df68:	43a3      	bics	r3, r4
 800df6a:	d00f      	beq.n	800df8c <udp_send+0x118>
 800df6c:	4d16      	ldr	r5, [pc, #88]	; (800dfc8 <udp_send+0x154>)
 800df6e:	4910      	ldr	r1, [pc, #64]	; (800dfb0 <udp_send+0x13c>)
 800df70:	6828      	ldr	r0, [r5, #0]
 800df72:	f001 f885 	bl	800f080 <arp_cache_lookup>
 800df76:	682b      	ldr	r3, [r5, #0]
 800df78:	4298      	cmp	r0, r3
 800df7a:	d0d8      	beq.n	800df2e <udp_send+0xba>
 800df7c:	4813      	ldr	r0, [pc, #76]	; (800dfcc <udp_send+0x158>)
 800df7e:	f002 feaf 	bl	8010ce0 <console_error>
 800df82:	f06f 0002 	mvn.w	r0, #2
 800df86:	b002      	add	sp, #8
 800df88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800df8c:	4620      	mov	r0, r4
 800df8e:	4908      	ldr	r1, [pc, #32]	; (800dfb0 <udp_send+0x13c>)
 800df90:	f001 f876 	bl	800f080 <arp_cache_lookup>
 800df94:	42a0      	cmp	r0, r4
 800df96:	d0ca      	beq.n	800df2e <udp_send+0xba>
 800df98:	480d      	ldr	r0, [pc, #52]	; (800dfd0 <udp_send+0x15c>)
 800df9a:	f002 fea1 	bl	8010ce0 <console_error>
 800df9e:	f06f 0001 	mvn.w	r0, #1
 800dfa2:	e7f0      	b.n	800df86 <udp_send+0x112>
 800dfa4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dfa8:	e7ed      	b.n	800df86 <udp_send+0x112>
 800dfaa:	bf00      	nop
 800dfac:	20001e78 	andcs	r1, r0, r8, ror lr
 800dfb0:	20007b38 	andcs	r7, r0, r8, lsr fp
 800dfb4:	20001e74 	andcs	r1, r0, r4, ror lr
 800dfb8:	20001e68 	andcs	r1, r0, r8, ror #28
 800dfbc:	20007b56 	andcs	r7, r0, r6, asr fp
 800dfc0:	20000000 	andcs	r0, r0, r0
 800dfc4:	20001e70 	andcs	r1, r0, r0, ror lr
 800dfc8:	20001e6c 	andcs	r1, r0, ip, ror #28
 800dfcc:	080151f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, ip, lr}
 800dfd0:	0801521f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, ip, lr}

0800dfd4 <strlen>:
 800dfd4:	4603      	mov	r3, r0
 800dfd6:	461a      	mov	r2, r3
 800dfd8:	7811      	ldrb	r1, [r2, #0]
 800dfda:	3301      	adds	r3, #1
 800dfdc:	2900      	cmp	r1, #0
 800dfde:	d1fa      	bne.n	800dfd6 <strlen+0x2>
 800dfe0:	1a10      	subs	r0, r2, r0
 800dfe2:	4770      	bx	lr

0800dfe4 <strcmp>:
 800dfe4:	1e43      	subs	r3, r0, #1
 800dfe6:	3901      	subs	r1, #1
 800dfe8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800dfec:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800dff0:	4290      	cmp	r0, r2
 800dff2:	d001      	beq.n	800dff8 <strcmp+0x14>
 800dff4:	1a80      	subs	r0, r0, r2
 800dff6:	e001      	b.n	800dffc <strcmp+0x18>
 800dff8:	2800      	cmp	r0, #0
 800dffa:	d1f5      	bne.n	800dfe8 <strcmp+0x4>
 800dffc:	4770      	bx	lr

0800dffe <strcpy.isra.0>:
 800dffe:	3801      	subs	r0, #1
 800e000:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e004:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e008:	2b00      	cmp	r3, #0
 800e00a:	d1f9      	bne.n	800e000 <strcpy.isra.0+0x2>
 800e00c:	4770      	bx	lr

0800e00e <strcat.isra.0>:
 800e00e:	b538      	push	{r3, r4, r5, lr}
 800e010:	4604      	mov	r4, r0
 800e012:	460d      	mov	r5, r1
 800e014:	f7ff ffde 	bl	800dfd4 <strlen>
 800e018:	4629      	mov	r1, r5
 800e01a:	4420      	add	r0, r4
 800e01c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e020:	f7ff bfed 	b.w	800dffe <strcpy.isra.0>

0800e024 <MDNS::MDNS()>:
 800e024:	b513      	push	{r0, r1, r4, lr}
 800e026:	4604      	mov	r4, r0
 800e028:	a901      	add	r1, sp, #4
 800e02a:	4804      	ldr	r0, [pc, #16]	; (800e03c <MDNS::MDNS()+0x18>)
 800e02c:	f002 ffb2 	bl	8010f94 <inet_aton>
 800e030:	4620      	mov	r0, r4
 800e032:	4b03      	ldr	r3, [pc, #12]	; (800e040 <MDNS::MDNS()+0x1c>)
 800e034:	9a01      	ldr	r2, [sp, #4]
 800e036:	601a      	str	r2, [r3, #0]
 800e038:	b002      	add	sp, #8
 800e03a:	bd10      	pop	{r4, pc}
 800e03c:	08015250 	stmdaeq	r1, {r4, r6, r9, ip, lr}
 800e040:	2000812c 	andcs	r8, r0, ip, lsr #2

0800e044 <MDNS::SetName(char const*)>:
 800e044:	b538      	push	{r3, r4, r5, lr}
 800e046:	4d0b      	ldr	r5, [pc, #44]	; (800e074 <MDNS::SetName(char const*)+0x30>)
 800e048:	460c      	mov	r4, r1
 800e04a:	6828      	ldr	r0, [r5, #0]
 800e04c:	b108      	cbz	r0, 800e052 <MDNS::SetName(char const*)+0xe>
 800e04e:	f002 ff9b 	bl	8010f88 <operator delete[](void*)>
 800e052:	4620      	mov	r0, r4
 800e054:	f7ff ffbe 	bl	800dfd4 <strlen>
 800e058:	3007      	adds	r0, #7
 800e05a:	f002 ff99 	bl	8010f90 <operator new[](unsigned int)>
 800e05e:	4621      	mov	r1, r4
 800e060:	6028      	str	r0, [r5, #0]
 800e062:	f7ff ffcc 	bl	800dffe <strcpy.isra.0>
 800e066:	6828      	ldr	r0, [r5, #0]
 800e068:	4903      	ldr	r1, [pc, #12]	; (800e078 <MDNS::SetName(char const*)+0x34>)
 800e06a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e06e:	f7ff bfce 	b.w	800e00e <strcat.isra.0>
 800e072:	bf00      	nop
 800e074:	2000855c 	andcs	r8, r0, ip, asr r5
 800e078:	08015260 	stmdaeq	r1, {r5, r6, r9, ip, lr}

0800e07c <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800e07c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e080:	f04f 0e00 	mov.w	lr, #0
 800e084:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800e088:	4675      	mov	r5, lr
 800e08a:	4e1b      	ldr	r6, [pc, #108]	; (800e0f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800e08c:	4f1b      	ldr	r7, [pc, #108]	; (800e0fc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800e08e:	780b      	ldrb	r3, [r1, #0]
 800e090:	1c68      	adds	r0, r5, #1
 800e092:	b913      	cbnz	r3, 800e09a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800e094:	7013      	strb	r3, [r2, #0]
 800e096:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e09a:	2b3f      	cmp	r3, #63	; 0x3f
 800e09c:	d91c      	bls.n	800e0d8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800e09e:	7849      	ldrb	r1, [r1, #1]
 800e0a0:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800e0a4:	430b      	orrs	r3, r1
 800e0a6:	6839      	ldr	r1, [r7, #0]
 800e0a8:	f1be 0f00 	cmp.w	lr, #0
 800e0ac:	bf08      	it	eq
 800e0ae:	4605      	moveq	r5, r0
 800e0b0:	5ccc      	ldrb	r4, [r1, r3]
 800e0b2:	3301      	adds	r3, #1
 800e0b4:	4419      	add	r1, r3
 800e0b6:	2300      	movs	r3, #0
 800e0b8:	42a3      	cmp	r3, r4
 800e0ba:	5cc8      	ldrb	r0, [r1, r3]
 800e0bc:	d309      	bcc.n	800e0d2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800e0be:	f04f 0e01 	mov.w	lr, #1
 800e0c2:	4421      	add	r1, r4
 800e0c4:	4414      	add	r4, r2
 800e0c6:	780b      	ldrb	r3, [r1, #0]
 800e0c8:	b10b      	cbz	r3, 800e0ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800e0ca:	f804 cb01 	strb.w	ip, [r4], #1
 800e0ce:	4622      	mov	r2, r4
 800e0d0:	e7dd      	b.n	800e08e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800e0d2:	54d0      	strb	r0, [r2, r3]
 800e0d4:	3301      	adds	r3, #1
 800e0d6:	e7ef      	b.n	800e0b8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800e0d8:	4688      	mov	r8, r1
 800e0da:	18d4      	adds	r4, r2, r3
 800e0dc:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800e0e0:	f802 9b01 	strb.w	r9, [r2], #1
 800e0e4:	4294      	cmp	r4, r2
 800e0e6:	d1f9      	bne.n	800e0dc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800e0e8:	1c5a      	adds	r2, r3, #1
 800e0ea:	4411      	add	r1, r2
 800e0ec:	f1be 0f00 	cmp.w	lr, #0
 800e0f0:	d1e9      	bne.n	800e0c6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800e0f2:	181d      	adds	r5, r3, r0
 800e0f4:	e7e7      	b.n	800e0c6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800e0f6:	bf00      	nop
 800e0f8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800e0fc:	20008560 	andcs	r8, r0, r0, ror #10

0800e100 <MDNS::FindFirstDotFromRight(char const*) const>:
 800e100:	b510      	push	{r4, lr}
 800e102:	4608      	mov	r0, r1
 800e104:	460c      	mov	r4, r1
 800e106:	f7ff ff65 	bl	800dfd4 <strlen>
 800e10a:	4420      	add	r0, r4
 800e10c:	42a0      	cmp	r0, r4
 800e10e:	d903      	bls.n	800e118 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800e110:	f810 3901 	ldrb.w	r3, [r0], #-1
 800e114:	2b2e      	cmp	r3, #46	; 0x2e
 800e116:	d1f9      	bne.n	800e10c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800e118:	3001      	adds	r0, #1
 800e11a:	bd10      	pop	{r4, pc}

0800e11c <MDNS::WriteDnsName(char const*, char*, bool)>:
 800e11c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e11e:	4614      	mov	r4, r2
 800e120:	460f      	mov	r7, r1
 800e122:	1c60      	adds	r0, r4, #1
 800e124:	463d      	mov	r5, r7
 800e126:	f817 6b01 	ldrb.w	r6, [r7], #1
 800e12a:	b946      	cbnz	r6, 800e13e <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800e12c:	1a69      	subs	r1, r5, r1
 800e12e:	7021      	strb	r1, [r4, #0]
 800e130:	7829      	ldrb	r1, [r5, #0]
 800e132:	b949      	cbnz	r1, 800e148 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800e134:	b10b      	cbz	r3, 800e13a <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800e136:	f800 1b01 	strb.w	r1, [r0], #1
 800e13a:	1a80      	subs	r0, r0, r2
 800e13c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e13e:	2e2e      	cmp	r6, #46	; 0x2e
 800e140:	d0f4      	beq.n	800e12c <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800e142:	f800 6b01 	strb.w	r6, [r0], #1
 800e146:	e7ed      	b.n	800e124 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800e148:	4604      	mov	r4, r0
 800e14a:	1c69      	adds	r1, r5, #1
 800e14c:	e7e8      	b.n	800e120 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800e150 <MDNS::CreateAnswerLocalIpAddress()>:
 800e150:	2384      	movs	r3, #132	; 0x84
 800e152:	b510      	push	{r4, lr}
 800e154:	4c0f      	ldr	r4, [pc, #60]	; (800e194 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800e156:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800e15a:	80e3      	strh	r3, [r4, #6]
 800e15c:	2300      	movs	r3, #0
 800e15e:	490e      	ldr	r1, [pc, #56]	; (800e198 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800e160:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800e164:	6809      	ldr	r1, [r1, #0]
 800e166:	f104 0210 	add.w	r2, r4, #16
 800e16a:	2301      	movs	r3, #1
 800e16c:	f7ff ffd6 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e170:	490a      	ldr	r1, [pc, #40]	; (800e19c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800e172:	1813      	adds	r3, r2, r0
 800e174:	5011      	str	r1, [r2, r0]
 800e176:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800e17a:	605a      	str	r2, [r3, #4]
 800e17c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e180:	811a      	strh	r2, [r3, #8]
 800e182:	4a07      	ldr	r2, [pc, #28]	; (800e1a0 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800e184:	6812      	ldr	r2, [r2, #0]
 800e186:	6952      	ldr	r2, [r2, #20]
 800e188:	f8c3 200a 	str.w	r2, [r3, #10]
 800e18c:	1b1b      	subs	r3, r3, r4
 800e18e:	330a      	adds	r3, #10
 800e190:	6023      	str	r3, [r4, #0]
 800e192:	bd10      	pop	{r4, pc}
 800e194:	20008130 	andcs	r8, r0, r0, lsr r1
 800e198:	2000855c 	andcs	r8, r0, ip, asr r5
 800e19c:	01800100 	orreq	r0, r0, r0, lsl #2
 800e1a0:	20008564 	andcs	r8, r0, r4, ror #10

0800e1a4 <MDNS::Start()>:
 800e1a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e1a6:	4c1d      	ldr	r4, [pc, #116]	; (800e21c <MDNS::Start()+0x78>)
 800e1a8:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800e1ac:	4605      	mov	r5, r0
 800e1ae:	6820      	ldr	r0, [r4, #0]
 800e1b0:	f000 fb25 	bl	800e7fe <Network::Begin(unsigned short)>
 800e1b4:	4e1a      	ldr	r6, [pc, #104]	; (800e220 <MDNS::Start()+0x7c>)
 800e1b6:	4f1b      	ldr	r7, [pc, #108]	; (800e224 <MDNS::Start()+0x80>)
 800e1b8:	4601      	mov	r1, r0
 800e1ba:	6030      	str	r0, [r6, #0]
 800e1bc:	683a      	ldr	r2, [r7, #0]
 800e1be:	6820      	ldr	r0, [r4, #0]
 800e1c0:	f000 fb2e 	bl	800e820 <Network::JoinGroup(int, unsigned int)>
 800e1c4:	4b18      	ldr	r3, [pc, #96]	; (800e228 <MDNS::Start()+0x84>)
 800e1c6:	681b      	ldr	r3, [r3, #0]
 800e1c8:	b923      	cbnz	r3, 800e1d4 <MDNS::Start()+0x30>
 800e1ca:	6821      	ldr	r1, [r4, #0]
 800e1cc:	4628      	mov	r0, r5
 800e1ce:	3120      	adds	r1, #32
 800e1d0:	f7ff ff38 	bl	800e044 <MDNS::SetName(char const*)>
 800e1d4:	4628      	mov	r0, r5
 800e1d6:	f7ff ffbb 	bl	800e150 <MDNS::CreateAnswerLocalIpAddress()>
 800e1da:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e1de:	4913      	ldr	r1, [pc, #76]	; (800e22c <MDNS::Start()+0x88>)
 800e1e0:	7830      	ldrb	r0, [r6, #0]
 800e1e2:	f831 2b04 	ldrh.w	r2, [r1], #4
 800e1e6:	9300      	str	r3, [sp, #0]
 800e1e8:	683b      	ldr	r3, [r7, #0]
 800e1ea:	f7ff fe43 	bl	800de74 <udp_send>
 800e1ee:	233f      	movs	r3, #63	; 0x3f
 800e1f0:	6820      	ldr	r0, [r4, #0]
 800e1f2:	4c0f      	ldr	r4, [pc, #60]	; (800e230 <MDNS::Start()+0x8c>)
 800e1f4:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800e1f8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e1fc:	b929      	cbnz	r1, 800e20a <MDNS::Start()+0x66>
 800e1fe:	4413      	add	r3, r2
 800e200:	429a      	cmp	r2, r3
 800e202:	d006      	beq.n	800e212 <MDNS::Start()+0x6e>
 800e204:	f802 1b01 	strb.w	r1, [r2], #1
 800e208:	e7fa      	b.n	800e200 <MDNS::Start()+0x5c>
 800e20a:	3b01      	subs	r3, #1
 800e20c:	f802 1b01 	strb.w	r1, [r2], #1
 800e210:	d1f2      	bne.n	800e1f8 <MDNS::Start()+0x54>
 800e212:	2300      	movs	r3, #0
 800e214:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800e218:	b003      	add	sp, #12
 800e21a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e21c:	20008564 	andcs	r8, r0, r4, ror #10
 800e220:	20000008 	andcs	r0, r0, r8
 800e224:	2000812c 	andcs	r8, r0, ip, lsr #2
 800e228:	2000855c 	andcs	r8, r0, ip, asr r5
 800e22c:	20008130 	andcs	r8, r0, r0, lsr r1
 800e230:	08015260 	stmdaeq	r1, {r5, r6, r9, ip, lr}

0800e234 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800e234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e238:	4c1b      	ldr	r4, [pc, #108]	; (800e2a8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800e23a:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800e23e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800e242:	2300      	movs	r3, #0
 800e244:	f854 100c 	ldr.w	r1, [r4, ip]
 800e248:	4607      	mov	r7, r0
 800e24a:	f7ff ff67 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e24e:	2301      	movs	r3, #1
 800e250:	7bac      	ldrb	r4, [r5, #14]
 800e252:	4616      	mov	r6, r2
 800e254:	4915      	ldr	r1, [pc, #84]	; (800e2ac <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800e256:	4402      	add	r2, r0
 800e258:	4815      	ldr	r0, [pc, #84]	; (800e2b0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800e25a:	429c      	cmp	r4, r3
 800e25c:	bf18      	it	ne
 800e25e:	4601      	movne	r1, r0
 800e260:	4638      	mov	r0, r7
 800e262:	f7ff ff5b 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e266:	4b13      	ldr	r3, [pc, #76]	; (800e2b4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800e268:	1814      	adds	r4, r2, r0
 800e26a:	5013      	str	r3, [r2, r0]
 800e26c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e270:	6063      	str	r3, [r4, #4]
 800e272:	4b11      	ldr	r3, [pc, #68]	; (800e2b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800e274:	f8d3 8000 	ldr.w	r8, [r3]
 800e278:	4640      	mov	r0, r8
 800e27a:	f7ff feab 	bl	800dfd4 <strlen>
 800e27e:	f100 0308 	add.w	r3, r0, #8
 800e282:	ba5b      	rev16	r3, r3
 800e284:	8123      	strh	r3, [r4, #8]
 800e286:	2300      	movs	r3, #0
 800e288:	f8c4 300a 	str.w	r3, [r4, #10]
 800e28c:	89ab      	ldrh	r3, [r5, #12]
 800e28e:	f104 0210 	add.w	r2, r4, #16
 800e292:	ba5b      	rev16	r3, r3
 800e294:	81e3      	strh	r3, [r4, #14]
 800e296:	4641      	mov	r1, r8
 800e298:	2301      	movs	r3, #1
 800e29a:	4638      	mov	r0, r7
 800e29c:	f7ff ff3e 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e2a0:	4410      	add	r0, r2
 800e2a2:	1b80      	subs	r0, r0, r6
 800e2a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2a8:	20008334 	andcs	r8, r0, r4, lsr r3
 800e2ac:	0801525c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, lr}
 800e2b0:	08015279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, ip, lr}
 800e2b4:	01802100 	orreq	r2, r0, r0, lsl #2
 800e2b8:	2000855c 	andcs	r8, r0, ip, asr r5

0800e2bc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800e2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2c0:	4e19      	ldr	r6, [pc, #100]	; (800e328 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800e2c2:	010f      	lsls	r7, r1, #4
 800e2c4:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800e2c8:	2300      	movs	r3, #0
 800e2ca:	59f1      	ldr	r1, [r6, r7]
 800e2cc:	4604      	mov	r4, r0
 800e2ce:	f7ff ff25 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e2d2:	2301      	movs	r3, #1
 800e2d4:	7bae      	ldrb	r6, [r5, #14]
 800e2d6:	4690      	mov	r8, r2
 800e2d8:	4914      	ldr	r1, [pc, #80]	; (800e32c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800e2da:	4402      	add	r2, r0
 800e2dc:	4814      	ldr	r0, [pc, #80]	; (800e330 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800e2de:	429e      	cmp	r6, r3
 800e2e0:	bf18      	it	ne
 800e2e2:	4601      	movne	r1, r0
 800e2e4:	4620      	mov	r0, r4
 800e2e6:	f7ff ff19 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e2ea:	4b12      	ldr	r3, [pc, #72]	; (800e334 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800e2ec:	1816      	adds	r6, r2, r0
 800e2ee:	5013      	str	r3, [r2, r0]
 800e2f0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e2f4:	68a8      	ldr	r0, [r5, #8]
 800e2f6:	6073      	str	r3, [r6, #4]
 800e2f8:	f106 040b 	add.w	r4, r6, #11
 800e2fc:	b938      	cbnz	r0, 800e30e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800e2fe:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e302:	72b0      	strb	r0, [r6, #10]
 800e304:	8133      	strh	r3, [r6, #8]
 800e306:	eba4 0008 	sub.w	r0, r4, r8
 800e30a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e30e:	f7ff fe61 	bl	800dfd4 <strlen>
 800e312:	4607      	mov	r7, r0
 800e314:	1c43      	adds	r3, r0, #1
 800e316:	72b0      	strb	r0, [r6, #10]
 800e318:	ba5b      	rev16	r3, r3
 800e31a:	4620      	mov	r0, r4
 800e31c:	68a9      	ldr	r1, [r5, #8]
 800e31e:	8133      	strh	r3, [r6, #8]
 800e320:	f7ff fe6d 	bl	800dffe <strcpy.isra.0>
 800e324:	443c      	add	r4, r7
 800e326:	e7ee      	b.n	800e306 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800e328:	20008334 	andcs	r8, r0, r4, lsr r3
 800e32c:	0801525c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, lr}
 800e330:	08015279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, ip, lr}
 800e334:	01801000 	orreq	r1, r0, r0

0800e338 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800e338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e33c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e3a0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800e340:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800e344:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800e348:	6869      	ldr	r1, [r5, #4]
 800e34a:	2301      	movs	r3, #1
 800e34c:	4607      	mov	r7, r0
 800e34e:	f7ff fee5 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e352:	4b14      	ldr	r3, [pc, #80]	; (800e3a4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800e354:	f858 8009 	ldr.w	r8, [r8, r9]
 800e358:	5013      	str	r3, [r2, r0]
 800e35a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e35e:	1816      	adds	r6, r2, r0
 800e360:	6073      	str	r3, [r6, #4]
 800e362:	4640      	mov	r0, r8
 800e364:	4614      	mov	r4, r2
 800e366:	f7ff fe35 	bl	800dfd4 <strlen>
 800e36a:	f100 030d 	add.w	r3, r0, #13
 800e36e:	ba5b      	rev16	r3, r3
 800e370:	4641      	mov	r1, r8
 800e372:	8133      	strh	r3, [r6, #8]
 800e374:	f106 020a 	add.w	r2, r6, #10
 800e378:	2300      	movs	r3, #0
 800e37a:	4638      	mov	r0, r7
 800e37c:	f7ff fece 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e380:	2301      	movs	r3, #1
 800e382:	4402      	add	r2, r0
 800e384:	7bad      	ldrb	r5, [r5, #14]
 800e386:	4808      	ldr	r0, [pc, #32]	; (800e3a8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800e388:	4908      	ldr	r1, [pc, #32]	; (800e3ac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800e38a:	429d      	cmp	r5, r3
 800e38c:	bf18      	it	ne
 800e38e:	4601      	movne	r1, r0
 800e390:	4638      	mov	r0, r7
 800e392:	f7ff fec3 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e396:	4410      	add	r0, r2
 800e398:	1b00      	subs	r0, r0, r4
 800e39a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e39e:	bf00      	nop
 800e3a0:	20008334 	andcs	r8, r0, r4, lsr r3
 800e3a4:	01000c00 	tsteq	r0, r0, lsl #24
 800e3a8:	08015279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, ip, lr}
 800e3ac:	0801525c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, lr}

0800e3b0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800e3b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e3b2:	460f      	mov	r7, r1
 800e3b4:	2301      	movs	r3, #1
 800e3b6:	490f      	ldr	r1, [pc, #60]	; (800e3f4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800e3b8:	4606      	mov	r6, r0
 800e3ba:	f7ff feaf 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e3be:	4b0e      	ldr	r3, [pc, #56]	; (800e3f8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800e3c0:	490e      	ldr	r1, [pc, #56]	; (800e3fc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800e3c2:	5013      	str	r3, [r2, r0]
 800e3c4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e3c8:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800e3cc:	684f      	ldr	r7, [r1, #4]
 800e3ce:	1815      	adds	r5, r2, r0
 800e3d0:	606b      	str	r3, [r5, #4]
 800e3d2:	4638      	mov	r0, r7
 800e3d4:	4614      	mov	r4, r2
 800e3d6:	f7ff fdfd 	bl	800dfd4 <strlen>
 800e3da:	1c83      	adds	r3, r0, #2
 800e3dc:	ba5b      	rev16	r3, r3
 800e3de:	812b      	strh	r3, [r5, #8]
 800e3e0:	f105 020a 	add.w	r2, r5, #10
 800e3e4:	2301      	movs	r3, #1
 800e3e6:	4639      	mov	r1, r7
 800e3e8:	4630      	mov	r0, r6
 800e3ea:	f7ff fe97 	bl	800e11c <MDNS::WriteDnsName(char const*, char*, bool)>
 800e3ee:	4410      	add	r0, r2
 800e3f0:	1b00      	subs	r0, r0, r4
 800e3f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3f4:	08015267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, lr}
 800e3f8:	01000c00 	tsteq	r0, r0, lsl #24
 800e3fc:	20008334 	andcs	r8, r0, r4, lsr r3

0800e400 <MDNS::CreateMDNSMessage(unsigned int)>:
 800e400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e402:	2384      	movs	r3, #132	; 0x84
 800e404:	4d19      	ldr	r5, [pc, #100]	; (800e46c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800e406:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800e40a:	80eb      	strh	r3, [r5, #6]
 800e40c:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e410:	f105 0410 	add.w	r4, r5, #16
 800e414:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800e418:	4622      	mov	r2, r4
 800e41a:	4606      	mov	r6, r0
 800e41c:	460f      	mov	r7, r1
 800e41e:	f7ff ff09 	bl	800e234 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800e422:	4404      	add	r4, r0
 800e424:	4622      	mov	r2, r4
 800e426:	4639      	mov	r1, r7
 800e428:	4630      	mov	r0, r6
 800e42a:	f7ff ff47 	bl	800e2bc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800e42e:	4404      	add	r4, r0
 800e430:	4622      	mov	r2, r4
 800e432:	4639      	mov	r1, r7
 800e434:	4630      	mov	r0, r6
 800e436:	f7ff ffbb 	bl	800e3b0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800e43a:	4404      	add	r4, r0
 800e43c:	4622      	mov	r2, r4
 800e43e:	4639      	mov	r1, r7
 800e440:	4630      	mov	r0, r6
 800e442:	f7ff ff79 	bl	800e338 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800e446:	4a0a      	ldr	r2, [pc, #40]	; (800e470 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800e448:	4404      	add	r4, r0
 800e44a:	f852 3b10 	ldr.w	r3, [r2], #16
 800e44e:	1e60      	subs	r0, r4, #1
 800e450:	3b0c      	subs	r3, #12
 800e452:	4619      	mov	r1, r3
 800e454:	3901      	subs	r1, #1
 800e456:	d204      	bcs.n	800e462 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800e458:	441c      	add	r4, r3
 800e45a:	4b06      	ldr	r3, [pc, #24]	; (800e474 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800e45c:	1ae4      	subs	r4, r4, r3
 800e45e:	602c      	str	r4, [r5, #0]
 800e460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e462:	f812 6b01 	ldrb.w	r6, [r2], #1
 800e466:	f800 6f01 	strb.w	r6, [r0, #1]!
 800e46a:	e7f3      	b.n	800e454 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800e46c:	20008358 	andcs	r8, r0, r8, asr r3
 800e470:	20008130 	andcs	r8, r0, r0, lsr r1
 800e474:	2000835c 	andcs	r8, r0, ip, asr r3

0800e478 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800e478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e47c:	4d40      	ldr	r5, [pc, #256]	; (800e580 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800e47e:	b085      	sub	sp, #20
 800e480:	682c      	ldr	r4, [r5, #0]
 800e482:	4680      	mov	r8, r0
 800e484:	460f      	mov	r7, r1
 800e486:	4616      	mov	r6, r2
 800e488:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800e48c:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800e490:	b11c      	cbz	r4, 800e49a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800e492:	692a      	ldr	r2, [r5, #16]
 800e494:	2a00      	cmp	r2, #0
 800e496:	d16e      	bne.n	800e576 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800e498:	2401      	movs	r4, #1
 800e49a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800e49e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800e4a2:	8193      	strh	r3, [r2, #12]
 800e4a4:	f882 b00e 	strb.w	fp, [r2, #14]
 800e4a8:	2f00      	cmp	r7, #0
 800e4aa:	d154      	bne.n	800e556 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800e4ac:	4b35      	ldr	r3, [pc, #212]	; (800e584 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800e4ae:	6818      	ldr	r0, [r3, #0]
 800e4b0:	3020      	adds	r0, #32
 800e4b2:	f7ff fd8f 	bl	800dfd4 <strlen>
 800e4b6:	4607      	mov	r7, r0
 800e4b8:	4630      	mov	r0, r6
 800e4ba:	f7ff fd8b 	bl	800dfd4 <strlen>
 800e4be:	4438      	add	r0, r7
 800e4c0:	3001      	adds	r0, #1
 800e4c2:	f002 fd65 	bl	8010f90 <operator new[](unsigned int)>
 800e4c6:	4b2f      	ldr	r3, [pc, #188]	; (800e584 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800e4c8:	f845 0009 	str.w	r0, [r5, r9]
 800e4cc:	6819      	ldr	r1, [r3, #0]
 800e4ce:	3120      	adds	r1, #32
 800e4d0:	f7ff fd95 	bl	800dffe <strcpy.isra.0>
 800e4d4:	f855 0009 	ldr.w	r0, [r5, r9]
 800e4d8:	4631      	mov	r1, r6
 800e4da:	f7ff fd98 	bl	800e00e <strcat.isra.0>
 800e4de:	4631      	mov	r1, r6
 800e4e0:	4640      	mov	r0, r8
 800e4e2:	f7ff fe0d 	bl	800e100 <MDNS::FindFirstDotFromRight(char const*) const>
 800e4e6:	eb05 0709 	add.w	r7, r5, r9
 800e4ea:	4605      	mov	r5, r0
 800e4ec:	f7ff fd72 	bl	800dfd4 <strlen>
 800e4f0:	300d      	adds	r0, #13
 800e4f2:	f002 fd4d 	bl	8010f90 <operator new[](unsigned int)>
 800e4f6:	4629      	mov	r1, r5
 800e4f8:	6078      	str	r0, [r7, #4]
 800e4fa:	f7ff fd80 	bl	800dffe <strcpy.isra.0>
 800e4fe:	4922      	ldr	r1, [pc, #136]	; (800e588 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800e500:	6878      	ldr	r0, [r7, #4]
 800e502:	f7ff fd84 	bl	800e00e <strcat.isra.0>
 800e506:	4921      	ldr	r1, [pc, #132]	; (800e58c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800e508:	4b21      	ldr	r3, [pc, #132]	; (800e590 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800e50a:	6878      	ldr	r0, [r7, #4]
 800e50c:	f1bb 0f01 	cmp.w	fp, #1
 800e510:	bf18      	it	ne
 800e512:	4619      	movne	r1, r3
 800e514:	f7ff fd7b 	bl	800e00e <strcat.isra.0>
 800e518:	f1ba 0f00 	cmp.w	sl, #0
 800e51c:	d009      	beq.n	800e532 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800e51e:	4650      	mov	r0, sl
 800e520:	f7ff fd58 	bl	800dfd4 <strlen>
 800e524:	3001      	adds	r0, #1
 800e526:	f002 fd33 	bl	8010f90 <operator new[](unsigned int)>
 800e52a:	4651      	mov	r1, sl
 800e52c:	60b8      	str	r0, [r7, #8]
 800e52e:	f7ff fd66 	bl	800dffe <strcpy.isra.0>
 800e532:	4621      	mov	r1, r4
 800e534:	4640      	mov	r0, r8
 800e536:	f7ff ff63 	bl	800e400 <MDNS::CreateMDNSMessage(unsigned int)>
 800e53a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e53e:	4915      	ldr	r1, [pc, #84]	; (800e594 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800e540:	4815      	ldr	r0, [pc, #84]	; (800e598 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800e542:	f831 2b04 	ldrh.w	r2, [r1], #4
 800e546:	9300      	str	r3, [sp, #0]
 800e548:	4b14      	ldr	r3, [pc, #80]	; (800e59c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800e54a:	7800      	ldrb	r0, [r0, #0]
 800e54c:	681b      	ldr	r3, [r3, #0]
 800e54e:	f7ff fc91 	bl	800de74 <udp_send>
 800e552:	2001      	movs	r0, #1
 800e554:	e010      	b.n	800e578 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800e556:	4638      	mov	r0, r7
 800e558:	f7ff fd3c 	bl	800dfd4 <strlen>
 800e55c:	9003      	str	r0, [sp, #12]
 800e55e:	4630      	mov	r0, r6
 800e560:	f7ff fd38 	bl	800dfd4 <strlen>
 800e564:	9b03      	ldr	r3, [sp, #12]
 800e566:	4418      	add	r0, r3
 800e568:	3001      	adds	r0, #1
 800e56a:	f002 fd11 	bl	8010f90 <operator new[](unsigned int)>
 800e56e:	4639      	mov	r1, r7
 800e570:	f845 0009 	str.w	r0, [r5, r9]
 800e574:	e7ac      	b.n	800e4d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800e576:	2000      	movs	r0, #0
 800e578:	b005      	add	sp, #20
 800e57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e57e:	bf00      	nop
 800e580:	20008334 	andcs	r8, r0, r4, lsr r3
 800e584:	20008564 	andcs	r8, r0, r4, ror #10
 800e588:	080137b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, ip, sp}
 800e58c:	0801525c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, lr}
 800e590:	08015279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, ip, lr}
 800e594:	20008358 	andcs	r8, r0, r8, asr r3
 800e598:	20000008 	andcs	r0, r0, r8
 800e59c:	2000812c 	andcs	r8, r0, ip, lsr #2

0800e5a0 <MDNS::HandleRequest(unsigned short)>:
 800e5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5a4:	4605      	mov	r5, r0
 800e5a6:	2700      	movs	r7, #0
 800e5a8:	f04f 080c 	mov.w	r8, #12
 800e5ac:	b0c5      	sub	sp, #276	; 0x114
 800e5ae:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800e670 <MDNS::HandleRequest(unsigned short)+0xd0>
 800e5b2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800e674 <MDNS::HandleRequest(unsigned short)+0xd4>
 800e5b6:	9103      	str	r1, [sp, #12]
 800e5b8:	9b03      	ldr	r3, [sp, #12]
 800e5ba:	42bb      	cmp	r3, r7
 800e5bc:	d802      	bhi.n	800e5c4 <MDNS::HandleRequest(unsigned short)+0x24>
 800e5be:	b045      	add	sp, #276	; 0x114
 800e5c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5c4:	f8da 1000 	ldr.w	r1, [sl]
 800e5c8:	aa04      	add	r2, sp, #16
 800e5ca:	4441      	add	r1, r8
 800e5cc:	4628      	mov	r0, r5
 800e5ce:	f7ff fd55 	bl	800e07c <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800e5d2:	f8da 2000 	ldr.w	r2, [sl]
 800e5d6:	4440      	add	r0, r8
 800e5d8:	1813      	adds	r3, r2, r0
 800e5da:	885b      	ldrh	r3, [r3, #2]
 800e5dc:	f100 0804 	add.w	r8, r0, #4
 800e5e0:	ba5b      	rev16	r3, r3
 800e5e2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800e5e6:	2b01      	cmp	r3, #1
 800e5e8:	d13d      	bne.n	800e666 <MDNS::HandleRequest(unsigned short)+0xc6>
 800e5ea:	5a14      	ldrh	r4, [r2, r0]
 800e5ec:	4b22      	ldr	r3, [pc, #136]	; (800e678 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800e5ee:	ba64      	rev16	r4, r4
 800e5f0:	6818      	ldr	r0, [r3, #0]
 800e5f2:	a904      	add	r1, sp, #16
 800e5f4:	b2a4      	uxth	r4, r4
 800e5f6:	f7ff fcf5 	bl	800dfe4 <strcmp>
 800e5fa:	b968      	cbnz	r0, 800e618 <MDNS::HandleRequest(unsigned short)+0x78>
 800e5fc:	2c01      	cmp	r4, #1
 800e5fe:	d10b      	bne.n	800e618 <MDNS::HandleRequest(unsigned short)+0x78>
 800e600:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e604:	491d      	ldr	r1, [pc, #116]	; (800e67c <MDNS::HandleRequest(unsigned short)+0xdc>)
 800e606:	481e      	ldr	r0, [pc, #120]	; (800e680 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800e608:	f831 2b04 	ldrh.w	r2, [r1], #4
 800e60c:	9300      	str	r3, [sp, #0]
 800e60e:	4b1d      	ldr	r3, [pc, #116]	; (800e684 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800e610:	7800      	ldrb	r0, [r0, #0]
 800e612:	681b      	ldr	r3, [r3, #0]
 800e614:	f7ff fc2e 	bl	800de74 <udp_send>
 800e618:	481b      	ldr	r0, [pc, #108]	; (800e688 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800e61a:	a904      	add	r1, sp, #16
 800e61c:	f7ff fce2 	bl	800dfe4 <strcmp>
 800e620:	f04f 0900 	mov.w	r9, #0
 800e624:	4e19      	ldr	r6, [pc, #100]	; (800e68c <MDNS::HandleRequest(unsigned short)+0xec>)
 800e626:	9002      	str	r0, [sp, #8]
 800e628:	6833      	ldr	r3, [r6, #0]
 800e62a:	b1c3      	cbz	r3, 800e65e <MDNS::HandleRequest(unsigned short)+0xbe>
 800e62c:	9b02      	ldr	r3, [sp, #8]
 800e62e:	b123      	cbz	r3, 800e63a <MDNS::HandleRequest(unsigned short)+0x9a>
 800e630:	6870      	ldr	r0, [r6, #4]
 800e632:	a904      	add	r1, sp, #16
 800e634:	f7ff fcd6 	bl	800dfe4 <strcmp>
 800e638:	b988      	cbnz	r0, 800e65e <MDNS::HandleRequest(unsigned short)+0xbe>
 800e63a:	2c0c      	cmp	r4, #12
 800e63c:	d10f      	bne.n	800e65e <MDNS::HandleRequest(unsigned short)+0xbe>
 800e63e:	4649      	mov	r1, r9
 800e640:	4628      	mov	r0, r5
 800e642:	f7ff fedd 	bl	800e400 <MDNS::CreateMDNSMessage(unsigned int)>
 800e646:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e64a:	480d      	ldr	r0, [pc, #52]	; (800e680 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800e64c:	9300      	str	r3, [sp, #0]
 800e64e:	4b0d      	ldr	r3, [pc, #52]	; (800e684 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800e650:	f8bb 2000 	ldrh.w	r2, [fp]
 800e654:	681b      	ldr	r3, [r3, #0]
 800e656:	490e      	ldr	r1, [pc, #56]	; (800e690 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800e658:	7800      	ldrb	r0, [r0, #0]
 800e65a:	f7ff fc0b 	bl	800de74 <udp_send>
 800e65e:	3610      	adds	r6, #16
 800e660:	f1b9 0f00 	cmp.w	r9, #0
 800e664:	d001      	beq.n	800e66a <MDNS::HandleRequest(unsigned short)+0xca>
 800e666:	3701      	adds	r7, #1
 800e668:	e7a6      	b.n	800e5b8 <MDNS::HandleRequest(unsigned short)+0x18>
 800e66a:	f04f 0901 	mov.w	r9, #1
 800e66e:	e7db      	b.n	800e628 <MDNS::HandleRequest(unsigned short)+0x88>
 800e670:	20008560 	andcs	r8, r0, r0, ror #10
 800e674:	20008358 	andcs	r8, r0, r8, asr r3
 800e678:	2000855c 	andcs	r8, r0, ip, asr r5
 800e67c:	20008130 	andcs	r8, r0, r0, lsr r1
 800e680:	20000008 	andcs	r0, r0, r8
 800e684:	2000812c 	andcs	r8, r0, ip, lsr #2
 800e688:	08015267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, lr}
 800e68c:	20008334 	andcs	r8, r0, r4, lsr r3
 800e690:	2000835c 	andcs	r8, r0, ip, asr r3

0800e694 <MDNS::Parse()>:
 800e694:	4b08      	ldr	r3, [pc, #32]	; (800e6b8 <MDNS::Parse()+0x24>)
 800e696:	681a      	ldr	r2, [r3, #0]
 800e698:	8853      	ldrh	r3, [r2, #2]
 800e69a:	ba5b      	rev16	r3, r3
 800e69c:	b299      	uxth	r1, r3
 800e69e:	041b      	lsls	r3, r3, #16
 800e6a0:	d408      	bmi.n	800e6b4 <MDNS::Parse()+0x20>
 800e6a2:	0b89      	lsrs	r1, r1, #14
 800e6a4:	d106      	bne.n	800e6b4 <MDNS::Parse()+0x20>
 800e6a6:	8891      	ldrh	r1, [r2, #4]
 800e6a8:	b28b      	uxth	r3, r1
 800e6aa:	b11b      	cbz	r3, 800e6b4 <MDNS::Parse()+0x20>
 800e6ac:	ba49      	rev16	r1, r1
 800e6ae:	b289      	uxth	r1, r1
 800e6b0:	f7ff bf76 	b.w	800e5a0 <MDNS::HandleRequest(unsigned short)>
 800e6b4:	4770      	bx	lr
 800e6b6:	bf00      	nop
 800e6b8:	20008560 	andcs	r8, r0, r0, ror #10

0800e6bc <MDNS::Run()>:
 800e6bc:	b538      	push	{r3, r4, r5, lr}
 800e6be:	4d0c      	ldr	r5, [pc, #48]	; (800e6f0 <MDNS::Run()+0x34>)
 800e6c0:	4604      	mov	r4, r0
 800e6c2:	480c      	ldr	r0, [pc, #48]	; (800e6f4 <MDNS::Run()+0x38>)
 800e6c4:	462b      	mov	r3, r5
 800e6c6:	4a0c      	ldr	r2, [pc, #48]	; (800e6f8 <MDNS::Run()+0x3c>)
 800e6c8:	490c      	ldr	r1, [pc, #48]	; (800e6fc <MDNS::Run()+0x40>)
 800e6ca:	7800      	ldrb	r0, [r0, #0]
 800e6cc:	f7ff fbac 	bl	800de28 <udp_recv2>
 800e6d0:	4b0b      	ldr	r3, [pc, #44]	; (800e700 <MDNS::Run()+0x44>)
 800e6d2:	882a      	ldrh	r2, [r5, #0]
 800e6d4:	8018      	strh	r0, [r3, #0]
 800e6d6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e6da:	429a      	cmp	r2, r3
 800e6dc:	d106      	bne.n	800e6ec <MDNS::Run()+0x30>
 800e6de:	280c      	cmp	r0, #12
 800e6e0:	d904      	bls.n	800e6ec <MDNS::Run()+0x30>
 800e6e2:	4620      	mov	r0, r4
 800e6e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e6e8:	f7ff bfd4 	b.w	800e694 <MDNS::Parse()>
 800e6ec:	bd38      	pop	{r3, r4, r5, pc}
 800e6ee:	bf00      	nop
 800e6f0:	20008128 	andcs	r8, r0, r8, lsr #2
 800e6f4:	20000008 	andcs	r0, r0, r8
 800e6f8:	20008124 	andcs	r8, r0, r4, lsr #2
 800e6fc:	20008560 	andcs	r8, r0, r0, ror #10
 800e700:	20008354 	andcs	r8, r0, r4, asr r3

0800e704 <MDNS::Print()>:
 800e704:	b510      	push	{r4, lr}
 800e706:	4816      	ldr	r0, [pc, #88]	; (800e760 <MDNS::Print()+0x5c>)
 800e708:	f7fa fde8 	bl	80092dc <printf>
 800e70c:	4b15      	ldr	r3, [pc, #84]	; (800e764 <MDNS::Print()+0x60>)
 800e70e:	681b      	ldr	r3, [r3, #0]
 800e710:	3301      	adds	r3, #1
 800e712:	d104      	bne.n	800e71e <MDNS::Print()+0x1a>
 800e714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e718:	4813      	ldr	r0, [pc, #76]	; (800e768 <MDNS::Print()+0x64>)
 800e71a:	f7fa bddf 	b.w	80092dc <printf>
 800e71e:	4b13      	ldr	r3, [pc, #76]	; (800e76c <MDNS::Print()+0x68>)
 800e720:	4c13      	ldr	r4, [pc, #76]	; (800e770 <MDNS::Print()+0x6c>)
 800e722:	6819      	ldr	r1, [r3, #0]
 800e724:	4813      	ldr	r0, [pc, #76]	; (800e774 <MDNS::Print()+0x70>)
 800e726:	f7fa fdd9 	bl	80092dc <printf>
 800e72a:	6823      	ldr	r3, [r4, #0]
 800e72c:	b14b      	cbz	r3, 800e742 <MDNS::Print()+0x3e>
 800e72e:	4a12      	ldr	r2, [pc, #72]	; (800e778 <MDNS::Print()+0x74>)
 800e730:	68a3      	ldr	r3, [r4, #8]
 800e732:	6861      	ldr	r1, [r4, #4]
 800e734:	2b00      	cmp	r3, #0
 800e736:	bf08      	it	eq
 800e738:	4613      	moveq	r3, r2
 800e73a:	4810      	ldr	r0, [pc, #64]	; (800e77c <MDNS::Print()+0x78>)
 800e73c:	89a2      	ldrh	r2, [r4, #12]
 800e73e:	f7fa fdcd 	bl	80092dc <printf>
 800e742:	6923      	ldr	r3, [r4, #16]
 800e744:	b15b      	cbz	r3, 800e75e <MDNS::Print()+0x5a>
 800e746:	69a3      	ldr	r3, [r4, #24]
 800e748:	4a0b      	ldr	r2, [pc, #44]	; (800e778 <MDNS::Print()+0x74>)
 800e74a:	6961      	ldr	r1, [r4, #20]
 800e74c:	2b00      	cmp	r3, #0
 800e74e:	bf08      	it	eq
 800e750:	4613      	moveq	r3, r2
 800e752:	480a      	ldr	r0, [pc, #40]	; (800e77c <MDNS::Print()+0x78>)
 800e754:	8ba2      	ldrh	r2, [r4, #28]
 800e756:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e75a:	f7fa bdbf 	b.w	80092dc <printf>
 800e75e:	bd10      	pop	{r4, pc}
 800e760:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}
 800e764:	20000008 	andcs	r0, r0, r8
 800e768:	0801528a 	stmdaeq	r1, {r1, r3, r7, r9, ip, lr}
 800e76c:	2000855c 	andcs	r8, r0, ip, asr r5
 800e770:	20008334 	andcs	r8, r0, r4, lsr r3
 800e774:	08015298 	stmdaeq	r1, {r3, r4, r7, r9, ip, lr}
 800e778:	08013ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, ip, sp}
 800e77c:	080152a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, lr}

0800e780 <strncpy.constprop.0.isra.0>:
 800e780:	233f      	movs	r3, #63	; 0x3f
 800e782:	3901      	subs	r1, #1
 800e784:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e788:	b92a      	cbnz	r2, 800e796 <strncpy.constprop.0.isra.0+0x16>
 800e78a:	4403      	add	r3, r0
 800e78c:	4298      	cmp	r0, r3
 800e78e:	d006      	beq.n	800e79e <strncpy.constprop.0.isra.0+0x1e>
 800e790:	f800 2b01 	strb.w	r2, [r0], #1
 800e794:	e7fa      	b.n	800e78c <strncpy.constprop.0.isra.0+0xc>
 800e796:	3b01      	subs	r3, #1
 800e798:	f800 2b01 	strb.w	r2, [r0], #1
 800e79c:	d1f2      	bne.n	800e784 <strncpy.constprop.0.isra.0+0x4>
 800e79e:	4770      	bx	lr

0800e7a0 <Network::Network()>:
 800e7a0:	4a11      	ldr	r2, [pc, #68]	; (800e7e8 <Network::Network()+0x48>)
 800e7a2:	2300      	movs	r3, #0
 800e7a4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800e7a8:	6010      	str	r0, [r2, #0]
 800e7aa:	2201      	movs	r2, #1
 800e7ac:	e9c0 2100 	strd	r2, r1, [r0]
 800e7b0:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800e7b4:	2200      	movs	r2, #0
 800e7b6:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 800e7ba:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800e7be:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e7c2:	490a      	ldr	r1, [pc, #40]	; (800e7ec <Network::Network()+0x4c>)
 800e7c4:	6102      	str	r2, [r0, #16]
 800e7c6:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800e7ca:	61c3      	str	r3, [r0, #28]
 800e7cc:	f880 3020 	strb.w	r3, [r0, #32]
 800e7d0:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800e7d4:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800e7d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e7dc:	f802 3f01 	strb.w	r3, [r2, #1]!
 800e7e0:	2b00      	cmp	r3, #0
 800e7e2:	d1f9      	bne.n	800e7d8 <Network::Network()+0x38>
 800e7e4:	4770      	bx	lr
 800e7e6:	bf00      	nop
 800e7e8:	20008564 	andcs	r8, r0, r4, ror #10
 800e7ec:	080152af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, ip, lr}

0800e7f0 <Network::Shutdown()>:
 800e7f0:	b508      	push	{r3, lr}
 800e7f2:	f7fa fa75 	bl	8008ce0 <network::display_emac_shutdown()>
 800e7f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e7fa:	f7f8 bcf9 	b.w	80071f0 <net_shutdown>

0800e7fe <Network::Begin(unsigned short)>:
 800e7fe:	4608      	mov	r0, r1
 800e800:	f7ff baa2 	b.w	800dd48 <udp_bind>

0800e804 <Network::End(unsigned short)>:
 800e804:	4608      	mov	r0, r1
 800e806:	f7ff bab9 	b.w	800dd7c <udp_unbind>

0800e80a <Network::MacAddressCopyTo(unsigned char*)>:
 800e80a:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800e80e:	3901      	subs	r1, #1
 800e810:	30a5      	adds	r0, #165	; 0xa5
 800e812:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800e816:	4283      	cmp	r3, r0
 800e818:	f801 2f01 	strb.w	r2, [r1, #1]!
 800e81c:	d1f9      	bne.n	800e812 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800e81e:	4770      	bx	lr

0800e820 <Network::JoinGroup(int, unsigned int)>:
 800e820:	4610      	mov	r0, r2
 800e822:	f000 bee9 	b.w	800f5f8 <igmp_join>

0800e826 <Network::SetDefaultIp()>:
 800e826:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800e82a:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800e82e:	041b      	lsls	r3, r3, #16
 800e830:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800e834:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800e838:	3302      	adds	r3, #2
 800e83a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800e83e:	22ff      	movs	r2, #255	; 0xff
 800e840:	6143      	str	r3, [r0, #20]
 800e842:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800e846:	4770      	bx	lr

0800e848 <Network::Init(NetworkParamsStore*)>:
 800e848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e84c:	b0a5      	sub	sp, #148	; 0x94
 800e84e:	4604      	mov	r4, r0
 800e850:	a80b      	add	r0, sp, #44	; 0x2c
 800e852:	f000 f9b9 	bl	800ebc8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800e856:	a80b      	add	r0, sp, #44	; 0x2c
 800e858:	f000 f9c2 	bl	800ebe0 <NetworkParams::Load()>
 800e85c:	b110      	cbz	r0, 800e864 <Network::Init(NetworkParamsStore*)+0x1c>
 800e85e:	a80b      	add	r0, sp, #44	; 0x2c
 800e860:	f000 fb9b 	bl	800ef9a <NetworkParams::Dump()>
 800e864:	f7fa fa3a 	bl	8008cdc <network::display_emac_start()>
 800e868:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e86a:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800e86e:	9308      	str	r3, [sp, #32]
 800e870:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e872:	4628      	mov	r0, r5
 800e874:	9309      	str	r3, [sp, #36]	; 0x24
 800e876:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e878:	f104 0620 	add.w	r6, r4, #32
 800e87c:	930a      	str	r3, [sp, #40]	; 0x28
 800e87e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800e882:	7163      	strb	r3, [r4, #5]
 800e884:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e886:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800e88a:	bf18      	it	ne
 800e88c:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800e890:	061b      	lsls	r3, r3, #24
 800e892:	bf54      	ite	pl
 800e894:	2300      	movpl	r3, #0
 800e896:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800e89a:	60e2      	str	r2, [r4, #12]
 800e89c:	6123      	str	r3, [r4, #16]
 800e89e:	f004 f96b 	bl	8012b78 <emac_start(unsigned char*)>
 800e8a2:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800e8a6:	2b00      	cmp	r3, #0
 800e8a8:	f040 80bf 	bne.w	800ea2a <Network::Init(NetworkParamsStore*)+0x1e2>
 800e8ac:	497e      	ldr	r1, [pc, #504]	; (800eaa8 <Network::Init(NetworkParamsStore*)+0x260>)
 800e8ae:	f104 001f 	add.w	r0, r4, #31
 800e8b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e8b6:	1c5f      	adds	r7, r3, #1
 800e8b8:	2a00      	cmp	r2, #0
 800e8ba:	f040 80b2 	bne.w	800ea22 <Network::Init(NetworkParamsStore*)+0x1da>
 800e8be:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800e8c2:	18e1      	adds	r1, r4, r3
 800e8c4:	0910      	lsrs	r0, r2, #4
 800e8c6:	2a9f      	cmp	r2, #159	; 0x9f
 800e8c8:	f002 020f 	and.w	r2, r2, #15
 800e8cc:	bf94      	ite	ls
 800e8ce:	3030      	addls	r0, #48	; 0x30
 800e8d0:	3037      	addhi	r0, #55	; 0x37
 800e8d2:	2a09      	cmp	r2, #9
 800e8d4:	bf94      	ite	ls
 800e8d6:	3230      	addls	r2, #48	; 0x30
 800e8d8:	3237      	addhi	r2, #55	; 0x37
 800e8da:	4427      	add	r7, r4
 800e8dc:	f881 0020 	strb.w	r0, [r1, #32]
 800e8e0:	f887 2020 	strb.w	r2, [r7, #32]
 800e8e4:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800e8e8:	f103 0e02 	add.w	lr, r3, #2
 800e8ec:	0910      	lsrs	r0, r2, #4
 800e8ee:	2a9f      	cmp	r2, #159	; 0x9f
 800e8f0:	f002 020f 	and.w	r2, r2, #15
 800e8f4:	bf94      	ite	ls
 800e8f6:	3030      	addls	r0, #48	; 0x30
 800e8f8:	3037      	addhi	r0, #55	; 0x37
 800e8fa:	f103 0c03 	add.w	ip, r3, #3
 800e8fe:	2a09      	cmp	r2, #9
 800e900:	eb04 070e 	add.w	r7, r4, lr
 800e904:	f887 0020 	strb.w	r0, [r7, #32]
 800e908:	bf94      	ite	ls
 800e90a:	3230      	addls	r2, #48	; 0x30
 800e90c:	3237      	addhi	r2, #55	; 0x37
 800e90e:	eb04 000c 	add.w	r0, r4, ip
 800e912:	f880 2020 	strb.w	r2, [r0, #32]
 800e916:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800e91a:	1d1f      	adds	r7, r3, #4
 800e91c:	0910      	lsrs	r0, r2, #4
 800e91e:	2a9f      	cmp	r2, #159	; 0x9f
 800e920:	f002 020f 	and.w	r2, r2, #15
 800e924:	bf94      	ite	ls
 800e926:	3030      	addls	r0, #48	; 0x30
 800e928:	3037      	addhi	r0, #55	; 0x37
 800e92a:	3305      	adds	r3, #5
 800e92c:	2a09      	cmp	r2, #9
 800e92e:	4423      	add	r3, r4
 800e930:	4427      	add	r7, r4
 800e932:	bf94      	ite	ls
 800e934:	3230      	addls	r2, #48	; 0x30
 800e936:	3237      	addhi	r2, #55	; 0x37
 800e938:	f887 0020 	strb.w	r0, [r7, #32]
 800e93c:	f883 2020 	strb.w	r2, [r3, #32]
 800e940:	2300      	movs	r3, #0
 800e942:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800e946:	f000 fee9 	bl	800f71c <net::link_register_read()>
 800e94a:	7963      	ldrb	r3, [r4, #5]
 800e94c:	6020      	str	r0, [r4, #0]
 800e94e:	2800      	cmp	r0, #0
 800e950:	f040 8095 	bne.w	800ea7e <Network::Init(NetworkParamsStore*)+0x236>
 800e954:	2b00      	cmp	r3, #0
 800e956:	f040 80a3 	bne.w	800eaa0 <Network::Init(NetworkParamsStore*)+0x258>
 800e95a:	9b08      	ldr	r3, [sp, #32]
 800e95c:	2b00      	cmp	r3, #0
 800e95e:	d16d      	bne.n	800ea3c <Network::Init(NetworkParamsStore*)+0x1f4>
 800e960:	4620      	mov	r0, r4
 800e962:	f7ff ff60 	bl	800e826 <Network::SetDefaultIp()>
 800e966:	6963      	ldr	r3, [r4, #20]
 800e968:	69e2      	ldr	r2, [r4, #28]
 800e96a:	9308      	str	r3, [sp, #32]
 800e96c:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800e970:	f104 0805 	add.w	r8, r4, #5
 800e974:	f104 0907 	add.w	r9, r4, #7
 800e978:	4643      	mov	r3, r8
 800e97a:	4632      	mov	r2, r6
 800e97c:	4628      	mov	r0, r5
 800e97e:	f8cd 9000 	str.w	r9, [sp]
 800e982:	a908      	add	r1, sp, #32
 800e984:	f7f8 fbe4 	bl	8007150 <net_init>
 800e988:	79e3      	ldrb	r3, [r4, #7]
 800e98a:	b113      	cbz	r3, 800e992 <Network::Init(NetworkParamsStore*)+0x14a>
 800e98c:	2004      	movs	r0, #4
 800e98e:	f7fa f9a8 	bl	8008ce2 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800e992:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800e996:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800e99a:	9304      	str	r3, [sp, #16]
 800e99c:	233c      	movs	r3, #60	; 0x3c
 800e99e:	fb03 f30a 	mul.w	r3, r3, sl
 800e9a2:	4f42      	ldr	r7, [pc, #264]	; (800eaac <Network::Init(NetworkParamsStore*)+0x264>)
 800e9a4:	f8df b108 	ldr.w	fp, [pc, #264]	; 800eab0 <Network::Init(NetworkParamsStore*)+0x268>
 800e9a8:	9303      	str	r3, [sp, #12]
 800e9aa:	79e3      	ldrb	r3, [r4, #7]
 800e9ac:	b373      	cbz	r3, 800ea0c <Network::Init(NetworkParamsStore*)+0x1c4>
 800e9ae:	f1ba 0f00 	cmp.w	sl, #0
 800e9b2:	d02b      	beq.n	800ea0c <Network::Init(NetworkParamsStore*)+0x1c4>
 800e9b4:	9b04      	ldr	r3, [sp, #16]
 800e9b6:	b34b      	cbz	r3, 800ea0c <Network::Init(NetworkParamsStore*)+0x1c4>
 800e9b8:	2104      	movs	r1, #4
 800e9ba:	6838      	ldr	r0, [r7, #0]
 800e9bc:	f002 fa22 	bl	8010e04 <LedBlink::SetMode(ledblink::Mode)>
 800e9c0:	2003      	movs	r0, #3
 800e9c2:	f7fa f98e 	bl	8008ce2 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800e9c6:	2000      	movs	r0, #0
 800e9c8:	f002 fc96 	bl	80112f8 <time>
 800e9cc:	9005      	str	r0, [sp, #20]
 800e9ce:	2000      	movs	r0, #0
 800e9d0:	f002 fc92 	bl	80112f8 <time>
 800e9d4:	9b05      	ldr	r3, [sp, #20]
 800e9d6:	4937      	ldr	r1, [pc, #220]	; (800eab4 <Network::Init(NetworkParamsStore*)+0x26c>)
 800e9d8:	1ac0      	subs	r0, r0, r3
 800e9da:	9b03      	ldr	r3, [sp, #12]
 800e9dc:	4298      	cmp	r0, r3
 800e9de:	db35      	blt.n	800ea4c <Network::Init(NetworkParamsStore*)+0x204>
 800e9e0:	2001      	movs	r0, #1
 800e9e2:	f7fa f97e 	bl	8008ce2 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800e9e6:	2101      	movs	r1, #1
 800e9e8:	6838      	ldr	r0, [r7, #0]
 800e9ea:	f002 fa0b 	bl	8010e04 <LedBlink::SetMode(ledblink::Mode)>
 800e9ee:	2301      	movs	r3, #1
 800e9f0:	7163      	strb	r3, [r4, #5]
 800e9f2:	2300      	movs	r3, #0
 800e9f4:	4632      	mov	r2, r6
 800e9f6:	71e3      	strb	r3, [r4, #7]
 800e9f8:	4628      	mov	r0, r5
 800e9fa:	4643      	mov	r3, r8
 800e9fc:	f8cd 9000 	str.w	r9, [sp]
 800ea00:	a908      	add	r1, sp, #32
 800ea02:	f7f8 fba5 	bl	8007150 <net_init>
 800ea06:	7963      	ldrb	r3, [r4, #5]
 800ea08:	2b00      	cmp	r3, #0
 800ea0a:	d0ce      	beq.n	800e9aa <Network::Init(NetworkParamsStore*)+0x162>
 800ea0c:	9b08      	ldr	r3, [sp, #32]
 800ea0e:	6163      	str	r3, [r4, #20]
 800ea10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ea12:	61e3      	str	r3, [r4, #28]
 800ea14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ea16:	61a3      	str	r3, [r4, #24]
 800ea18:	f7fa f961 	bl	8008cde <network::display_ip()>
 800ea1c:	b025      	add	sp, #148	; 0x94
 800ea1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea22:	463b      	mov	r3, r7
 800ea24:	f800 2f01 	strb.w	r2, [r0, #1]!
 800ea28:	e743      	b.n	800e8b2 <Network::Init(NetworkParamsStore*)+0x6a>
 800ea2a:	4630      	mov	r0, r6
 800ea2c:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800ea30:	f7ff fea6 	bl	800e780 <strncpy.constprop.0.isra.0>
 800ea34:	2300      	movs	r3, #0
 800ea36:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800ea3a:	e784      	b.n	800e946 <Network::Init(NetworkParamsStore*)+0xfe>
 800ea3c:	69e1      	ldr	r1, [r4, #28]
 800ea3e:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800ea42:	4053      	eors	r3, r2
 800ea44:	420b      	tst	r3, r1
 800ea46:	bf18      	it	ne
 800ea48:	920a      	strne	r2, [sp, #40]	; 0x28
 800ea4a:	e791      	b.n	800e970 <Network::Init(NetworkParamsStore*)+0x128>
 800ea4c:	683b      	ldr	r3, [r7, #0]
 800ea4e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800ea52:	f1bc 0f00 	cmp.w	ip, #0
 800ea56:	d0ba      	beq.n	800e9ce <Network::Init(NetworkParamsStore*)+0x186>
 800ea58:	6808      	ldr	r0, [r1, #0]
 800ea5a:	695a      	ldr	r2, [r3, #20]
 800ea5c:	1a80      	subs	r0, r0, r2
 800ea5e:	4584      	cmp	ip, r0
 800ea60:	d8b5      	bhi.n	800e9ce <Network::Init(NetworkParamsStore*)+0x186>
 800ea62:	6808      	ldr	r0, [r1, #0]
 800ea64:	6158      	str	r0, [r3, #20]
 800ea66:	6918      	ldr	r0, [r3, #16]
 800ea68:	2801      	cmp	r0, #1
 800ea6a:	f080 0201 	eor.w	r2, r0, #1
 800ea6e:	611a      	str	r2, [r3, #16]
 800ea70:	bf16      	itet	ne
 800ea72:	2301      	movne	r3, #1
 800ea74:	f8cb 0014 	streq.w	r0, [fp, #20]
 800ea78:	f8cb 3010 	strne.w	r3, [fp, #16]
 800ea7c:	e7a7      	b.n	800e9ce <Network::Init(NetworkParamsStore*)+0x186>
 800ea7e:	b11b      	cbz	r3, 800ea88 <Network::Init(NetworkParamsStore*)+0x240>
 800ea80:	2300      	movs	r3, #0
 800ea82:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800ea86:	9308      	str	r3, [sp, #32]
 800ea88:	2300      	movs	r3, #0
 800ea8a:	f88d 301f 	strb.w	r3, [sp, #31]
 800ea8e:	f10d 031f 	add.w	r3, sp, #31
 800ea92:	4632      	mov	r2, r6
 800ea94:	4628      	mov	r0, r5
 800ea96:	9300      	str	r3, [sp, #0]
 800ea98:	a908      	add	r1, sp, #32
 800ea9a:	f7f8 fb59 	bl	8007150 <net_init>
 800ea9e:	e7b5      	b.n	800ea0c <Network::Init(NetworkParamsStore*)+0x1c4>
 800eaa0:	2001      	movs	r0, #1
 800eaa2:	f7fa f91e 	bl	8008ce2 <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800eaa6:	e763      	b.n	800e970 <Network::Init(NetworkParamsStore*)+0x128>
 800eaa8:	080152b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, lr}
 800eaac:	20009c6c 	andcs	r9, r0, ip, ror #24
 800eab0:	40011000 	andmi	r1, r1, r0
 800eab4:	20009c84 	andcs	r9, r0, r4, lsl #25

0800eab8 <Network::Print()>:
 800eab8:	b530      	push	{r4, r5, lr}
 800eaba:	4604      	mov	r4, r0
 800eabc:	b085      	sub	sp, #20
 800eabe:	4832      	ldr	r0, [pc, #200]	; (800eb88 <Network::Print()+0xd0>)
 800eac0:	f7fa fc0c 	bl	80092dc <printf>
 800eac4:	f104 0120 	add.w	r1, r4, #32
 800eac8:	4830      	ldr	r0, [pc, #192]	; (800eb8c <Network::Print()+0xd4>)
 800eaca:	f7fa fc07 	bl	80092dc <printf>
 800eace:	68a1      	ldr	r1, [r4, #8]
 800ead0:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800ead4:	482e      	ldr	r0, [pc, #184]	; (800eb90 <Network::Print()+0xd8>)
 800ead6:	f7fa fc01 	bl	80092dc <printf>
 800eada:	69e0      	ldr	r0, [r4, #28]
 800eadc:	f004 fb96 	bl	801320c <__popcountsi2>
 800eae0:	6965      	ldr	r5, [r4, #20]
 800eae2:	9001      	str	r0, [sp, #4]
 800eae4:	0e2b      	lsrs	r3, r5, #24
 800eae6:	9300      	str	r3, [sp, #0]
 800eae8:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800eaec:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800eaf0:	b2e9      	uxtb	r1, r5
 800eaf2:	4828      	ldr	r0, [pc, #160]	; (800eb94 <Network::Print()+0xdc>)
 800eaf4:	f7fa fbf2 	bl	80092dc <printf>
 800eaf8:	69e1      	ldr	r1, [r4, #28]
 800eafa:	4827      	ldr	r0, [pc, #156]	; (800eb98 <Network::Print()+0xe0>)
 800eafc:	0e0b      	lsrs	r3, r1, #24
 800eafe:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800eb02:	9300      	str	r3, [sp, #0]
 800eb04:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800eb08:	b2c9      	uxtb	r1, r1
 800eb0a:	f7fa fbe7 	bl	80092dc <printf>
 800eb0e:	69a1      	ldr	r1, [r4, #24]
 800eb10:	4822      	ldr	r0, [pc, #136]	; (800eb9c <Network::Print()+0xe4>)
 800eb12:	0e0b      	lsrs	r3, r1, #24
 800eb14:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800eb18:	9300      	str	r3, [sp, #0]
 800eb1a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800eb1e:	b2c9      	uxtb	r1, r1
 800eb20:	f7fa fbdc 	bl	80092dc <printf>
 800eb24:	69e3      	ldr	r3, [r4, #28]
 800eb26:	6961      	ldr	r1, [r4, #20]
 800eb28:	481d      	ldr	r0, [pc, #116]	; (800eba0 <Network::Print()+0xe8>)
 800eb2a:	ea61 0103 	orn	r1, r1, r3
 800eb2e:	0e0b      	lsrs	r3, r1, #24
 800eb30:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800eb34:	9300      	str	r3, [sp, #0]
 800eb36:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800eb3a:	b2c9      	uxtb	r1, r1
 800eb3c:	f7fa fbce 	bl	80092dc <printf>
 800eb40:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800eb44:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800eb48:	9302      	str	r3, [sp, #8]
 800eb4a:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800eb4e:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800eb52:	9301      	str	r3, [sp, #4]
 800eb54:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800eb58:	4812      	ldr	r0, [pc, #72]	; (800eba4 <Network::Print()+0xec>)
 800eb5a:	9300      	str	r3, [sp, #0]
 800eb5c:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800eb60:	f7fa fbbc 	bl	80092dc <printf>
 800eb64:	4b10      	ldr	r3, [pc, #64]	; (800eba8 <Network::Print()+0xf0>)
 800eb66:	681b      	ldr	r3, [r3, #0]
 800eb68:	79da      	ldrb	r2, [r3, #7]
 800eb6a:	b952      	cbnz	r2, 800eb82 <Network::Print()+0xca>
 800eb6c:	795b      	ldrb	r3, [r3, #5]
 800eb6e:	2b00      	cmp	r3, #0
 800eb70:	bf14      	ite	ne
 800eb72:	2144      	movne	r1, #68	; 0x44
 800eb74:	2153      	moveq	r1, #83	; 0x53
 800eb76:	480d      	ldr	r0, [pc, #52]	; (800ebac <Network::Print()+0xf4>)
 800eb78:	b005      	add	sp, #20
 800eb7a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800eb7e:	f7fa bbad 	b.w	80092dc <printf>
 800eb82:	215a      	movs	r1, #90	; 0x5a
 800eb84:	e7f7      	b.n	800eb76 <Network::Print()+0xbe>
 800eb86:	bf00      	nop
 800eb88:	080152c0 	stmdaeq	r1, {r6, r7, r9, ip, lr}
 800eb8c:	080152c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, ip, lr}
 800eb90:	080152da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, ip, lr}
 800eb94:	080152ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, ip, lr}
 800eb98:	0801530c 	stmdaeq	r1, {r2, r3, r8, r9, ip, lr}
 800eb9c:	08015326 	stmdaeq	r1, {r1, r2, r5, r8, r9, ip, lr}
 800eba0:	08015340 	stmdaeq	r1, {r6, r8, r9, ip, lr}
 800eba4:	0801535a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, ip, lr}
 800eba8:	20008564 	andcs	r8, r0, r4, ror #10
 800ebac:	08015386 	stmdaeq	r1, {r1, r2, r7, r8, r9, ip, lr}

0800ebb0 <Network::TcpBegin(unsigned short)>:
 800ebb0:	4608      	mov	r0, r1
 800ebb2:	f7ff b803 	b.w	800dbbc <tcp_begin>

0800ebb6 <Network::TcpRead(int, unsigned char const**)>:
 800ebb6:	4608      	mov	r0, r1
 800ebb8:	4611      	mov	r1, r2
 800ebba:	f7ff b83d 	b.w	800dc38 <tcp_read>

0800ebbe <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800ebbe:	4608      	mov	r0, r1
 800ebc0:	4611      	mov	r1, r2
 800ebc2:	461a      	mov	r2, r3
 800ebc4:	f7ff b814 	b.w	800dbf0 <tcp_write>

0800ebc8 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800ebc8:	b510      	push	{r4, lr}
 800ebca:	225e      	movs	r2, #94	; 0x5e
 800ebcc:	4604      	mov	r4, r0
 800ebce:	f840 1b04 	str.w	r1, [r0], #4
 800ebd2:	2100      	movs	r1, #0
 800ebd4:	f002 fa88 	bl	80110e8 <memset>
 800ebd8:	2301      	movs	r3, #1
 800ebda:	4620      	mov	r0, r4
 800ebdc:	7623      	strb	r3, [r4, #24]
 800ebde:	bd10      	pop	{r4, pc}

0800ebe0 <NetworkParams::Load()>:
 800ebe0:	b508      	push	{r3, lr}
 800ebe2:	2300      	movs	r3, #0
 800ebe4:	4601      	mov	r1, r0
 800ebe6:	6043      	str	r3, [r0, #4]
 800ebe8:	6800      	ldr	r0, [r0, #0]
 800ebea:	b120      	cbz	r0, 800ebf6 <NetworkParams::Load()+0x16>
 800ebec:	6803      	ldr	r3, [r0, #0]
 800ebee:	3104      	adds	r1, #4
 800ebf0:	68db      	ldr	r3, [r3, #12]
 800ebf2:	4798      	blx	r3
 800ebf4:	2001      	movs	r0, #1
 800ebf6:	bd08      	pop	{r3, pc}

0800ebf8 <NetworkParams::Load(char const*, unsigned int)>:
 800ebf8:	6803      	ldr	r3, [r0, #0]
 800ebfa:	b1d3      	cbz	r3, 800ec32 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800ebfc:	2300      	movs	r3, #0
 800ebfe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec00:	460d      	mov	r5, r1
 800ec02:	4616      	mov	r6, r2
 800ec04:	4604      	mov	r4, r0
 800ec06:	6043      	str	r3, [r0, #4]
 800ec08:	4602      	mov	r2, r0
 800ec0a:	490a      	ldr	r1, [pc, #40]	; (800ec34 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800ec0c:	4668      	mov	r0, sp
 800ec0e:	f001 fc2d 	bl	801046c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ec12:	4632      	mov	r2, r6
 800ec14:	4629      	mov	r1, r5
 800ec16:	4668      	mov	r0, sp
 800ec18:	f001 fc2c 	bl	8010474 <ReadConfigFile::Read(char const*, unsigned int)>
 800ec1c:	4621      	mov	r1, r4
 800ec1e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ec22:	6803      	ldr	r3, [r0, #0]
 800ec24:	689b      	ldr	r3, [r3, #8]
 800ec26:	4798      	blx	r3
 800ec28:	4668      	mov	r0, sp
 800ec2a:	f001 fc22 	bl	8010472 <ReadConfigFile::~ReadConfigFile()>
 800ec2e:	b002      	add	sp, #8
 800ec30:	bd70      	pop	{r4, r5, r6, pc}
 800ec32:	4770      	bx	lr
 800ec34:	0800ed65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, sp, lr, pc}

0800ec38 <NetworkParams::callbackFunction(char const*)>:
 800ec38:	b530      	push	{r4, r5, lr}
 800ec3a:	460d      	mov	r5, r1
 800ec3c:	b085      	sub	sp, #20
 800ec3e:	4604      	mov	r4, r0
 800ec40:	4942      	ldr	r1, [pc, #264]	; (800ed4c <NetworkParams::callbackFunction(char const*)+0x114>)
 800ec42:	4628      	mov	r0, r5
 800ec44:	f10d 0207 	add.w	r2, sp, #7
 800ec48:	f001 fd4c 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ec4c:	b978      	cbnz	r0, 800ec6e <NetworkParams::callbackFunction(char const*)+0x36>
 800ec4e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800ec52:	6863      	ldr	r3, [r4, #4]
 800ec54:	b142      	cbz	r2, 800ec68 <NetworkParams::callbackFunction(char const*)+0x30>
 800ec56:	f023 0301 	bic.w	r3, r3, #1
 800ec5a:	3a00      	subs	r2, #0
 800ec5c:	bf18      	it	ne
 800ec5e:	2201      	movne	r2, #1
 800ec60:	6063      	str	r3, [r4, #4]
 800ec62:	7622      	strb	r2, [r4, #24]
 800ec64:	b005      	add	sp, #20
 800ec66:	bd30      	pop	{r4, r5, pc}
 800ec68:	f043 0301 	orr.w	r3, r3, #1
 800ec6c:	e7f5      	b.n	800ec5a <NetworkParams::callbackFunction(char const*)+0x22>
 800ec6e:	4628      	mov	r0, r5
 800ec70:	4937      	ldr	r1, [pc, #220]	; (800ed50 <NetworkParams::callbackFunction(char const*)+0x118>)
 800ec72:	f10d 0207 	add.w	r2, sp, #7
 800ec76:	f001 fd35 	bl	80106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ec7a:	b980      	cbnz	r0, 800ec9e <NetworkParams::callbackFunction(char const*)+0x66>
 800ec7c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800ec80:	6863      	ldr	r3, [r4, #4]
 800ec82:	1e51      	subs	r1, r2, #1
 800ec84:	2904      	cmp	r1, #4
 800ec86:	bf97      	itett	ls
 800ec88:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800ec8c:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800ec90:	6063      	strls	r3, [r4, #4]
 800ec92:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800ec96:	bf84      	itt	hi
 800ec98:	6063      	strhi	r3, [r4, #4]
 800ec9a:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800ec9e:	4628      	mov	r0, r5
 800eca0:	492c      	ldr	r1, [pc, #176]	; (800ed54 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800eca2:	aa02      	add	r2, sp, #8
 800eca4:	f001 fc96 	bl	80105d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800eca8:	b9e8      	cbnz	r0, 800ece6 <NetworkParams::callbackFunction(char const*)+0xae>
 800ecaa:	9a02      	ldr	r2, [sp, #8]
 800ecac:	6863      	ldr	r3, [r4, #4]
 800ecae:	b2d1      	uxtb	r1, r2
 800ecb0:	29ac      	cmp	r1, #172	; 0xac
 800ecb2:	f3c2 2007 	ubfx	r0, r2, #8, #8
 800ecb6:	d007      	beq.n	800ecc8 <NetworkParams::callbackFunction(char const*)+0x90>
 800ecb8:	29c0      	cmp	r1, #192	; 0xc0
 800ecba:	d00c      	beq.n	800ecd6 <NetworkParams::callbackFunction(char const*)+0x9e>
 800ecbc:	290a      	cmp	r1, #10
 800ecbe:	d10d      	bne.n	800ecdc <NetworkParams::callbackFunction(char const*)+0xa4>
 800ecc0:	60a2      	str	r2, [r4, #8]
 800ecc2:	f043 0302 	orr.w	r3, r3, #2
 800ecc6:	e004      	b.n	800ecd2 <NetworkParams::callbackFunction(char const*)+0x9a>
 800ecc8:	3810      	subs	r0, #16
 800ecca:	280f      	cmp	r0, #15
 800eccc:	d9f8      	bls.n	800ecc0 <NetworkParams::callbackFunction(char const*)+0x88>
 800ecce:	f023 0302 	bic.w	r3, r3, #2
 800ecd2:	6063      	str	r3, [r4, #4]
 800ecd4:	e7c6      	b.n	800ec64 <NetworkParams::callbackFunction(char const*)+0x2c>
 800ecd6:	28a8      	cmp	r0, #168	; 0xa8
 800ecd8:	d1f9      	bne.n	800ecce <NetworkParams::callbackFunction(char const*)+0x96>
 800ecda:	e7f1      	b.n	800ecc0 <NetworkParams::callbackFunction(char const*)+0x88>
 800ecdc:	2902      	cmp	r1, #2
 800ecde:	d0ef      	beq.n	800ecc0 <NetworkParams::callbackFunction(char const*)+0x88>
 800ece0:	2a00      	cmp	r2, #0
 800ece2:	d0ed      	beq.n	800ecc0 <NetworkParams::callbackFunction(char const*)+0x88>
 800ece4:	e7f3      	b.n	800ecce <NetworkParams::callbackFunction(char const*)+0x96>
 800ece6:	4628      	mov	r0, r5
 800ece8:	491b      	ldr	r1, [pc, #108]	; (800ed58 <NetworkParams::callbackFunction(char const*)+0x120>)
 800ecea:	aa02      	add	r2, sp, #8
 800ecec:	f001 fc72 	bl	80105d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800ecf0:	b970      	cbnz	r0, 800ed10 <NetworkParams::callbackFunction(char const*)+0xd8>
 800ecf2:	9a02      	ldr	r2, [sp, #8]
 800ecf4:	6863      	ldr	r3, [r4, #4]
 800ecf6:	b142      	cbz	r2, 800ed0a <NetworkParams::callbackFunction(char const*)+0xd2>
 800ecf8:	ba11      	rev	r1, r2
 800ecfa:	43c8      	mvns	r0, r1
 800ecfc:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 800ed00:	d103      	bne.n	800ed0a <NetworkParams::callbackFunction(char const*)+0xd2>
 800ed02:	60e2      	str	r2, [r4, #12]
 800ed04:	f043 0304 	orr.w	r3, r3, #4
 800ed08:	e7e3      	b.n	800ecd2 <NetworkParams::callbackFunction(char const*)+0x9a>
 800ed0a:	f023 0304 	bic.w	r3, r3, #4
 800ed0e:	e7e0      	b.n	800ecd2 <NetworkParams::callbackFunction(char const*)+0x9a>
 800ed10:	4628      	mov	r0, r5
 800ed12:	4912      	ldr	r1, [pc, #72]	; (800ed5c <NetworkParams::callbackFunction(char const*)+0x124>)
 800ed14:	aa02      	add	r2, sp, #8
 800ed16:	f001 fc5d 	bl	80105d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800ed1a:	b928      	cbnz	r0, 800ed28 <NetworkParams::callbackFunction(char const*)+0xf0>
 800ed1c:	9b02      	ldr	r3, [sp, #8]
 800ed1e:	6123      	str	r3, [r4, #16]
 800ed20:	6863      	ldr	r3, [r4, #4]
 800ed22:	f043 0308 	orr.w	r3, r3, #8
 800ed26:	e7d4      	b.n	800ecd2 <NetworkParams::callbackFunction(char const*)+0x9a>
 800ed28:	233f      	movs	r3, #63	; 0x3f
 800ed2a:	4628      	mov	r0, r5
 800ed2c:	9303      	str	r3, [sp, #12]
 800ed2e:	490c      	ldr	r1, [pc, #48]	; (800ed60 <NetworkParams::callbackFunction(char const*)+0x128>)
 800ed30:	ab03      	add	r3, sp, #12
 800ed32:	f104 0219 	add.w	r2, r4, #25
 800ed36:	f001 fbd1 	bl	80104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ed3a:	2800      	cmp	r0, #0
 800ed3c:	d192      	bne.n	800ec64 <NetworkParams::callbackFunction(char const*)+0x2c>
 800ed3e:	9b03      	ldr	r3, [sp, #12]
 800ed40:	4423      	add	r3, r4
 800ed42:	7658      	strb	r0, [r3, #25]
 800ed44:	6863      	ldr	r3, [r4, #4]
 800ed46:	f043 0320 	orr.w	r3, r3, #32
 800ed4a:	e7c2      	b.n	800ecd2 <NetworkParams::callbackFunction(char const*)+0x9a>
 800ed4c:	080153de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, ip, lr}
 800ed50:	080153bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, lr}
 800ed54:	080153a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, lr}
 800ed58:	080153d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, ip, lr}
 800ed5c:	080153ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, ip, lr}
 800ed60:	080153cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, ip, lr}

0800ed64 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800ed64:	f7ff bf68 	b.w	800ec38 <NetworkParams::callbackFunction(char const*)>

0800ed68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800ed68:	b570      	push	{r4, r5, r6, lr}
 800ed6a:	4604      	mov	r4, r0
 800ed6c:	4615      	mov	r5, r2
 800ed6e:	461e      	mov	r6, r3
 800ed70:	b086      	sub	sp, #24
 800ed72:	3004      	adds	r0, #4
 800ed74:	2900      	cmp	r1, #0
 800ed76:	d02b      	beq.n	800edd0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800ed78:	225e      	movs	r2, #94	; 0x5e
 800ed7a:	f002 f99e 	bl	80110ba <memmove>
 800ed7e:	462a      	mov	r2, r5
 800ed80:	4633      	mov	r3, r6
 800ed82:	4970      	ldr	r1, [pc, #448]	; (800ef44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800ed84:	a803      	add	r0, sp, #12
 800ed86:	f001 fad1 	bl	801032c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ed8a:	6863      	ldr	r3, [r4, #4]
 800ed8c:	079a      	lsls	r2, r3, #30
 800ed8e:	bf5f      	itttt	pl
 800ed90:	4a6d      	ldrpl	r2, [pc, #436]	; (800ef48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ed92:	6812      	ldrpl	r2, [r2, #0]
 800ed94:	6952      	ldrpl	r2, [r2, #20]
 800ed96:	60a2      	strpl	r2, [r4, #8]
 800ed98:	075e      	lsls	r6, r3, #29
 800ed9a:	bf5f      	itttt	pl
 800ed9c:	4a6a      	ldrpl	r2, [pc, #424]	; (800ef48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ed9e:	6812      	ldrpl	r2, [r2, #0]
 800eda0:	69d2      	ldrpl	r2, [r2, #28]
 800eda2:	60e2      	strpl	r2, [r4, #12]
 800eda4:	071d      	lsls	r5, r3, #28
 800eda6:	bf58      	it	pl
 800eda8:	4a67      	ldrpl	r2, [pc, #412]	; (800ef48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800edaa:	f104 0519 	add.w	r5, r4, #25
 800edae:	bf5e      	ittt	pl
 800edb0:	6812      	ldrpl	r2, [r2, #0]
 800edb2:	6992      	ldrpl	r2, [r2, #24]
 800edb4:	6122      	strpl	r2, [r4, #16]
 800edb6:	0698      	lsls	r0, r3, #26
 800edb8:	d418      	bmi.n	800edec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800edba:	4628      	mov	r0, r5
 800edbc:	223f      	movs	r2, #63	; 0x3f
 800edbe:	4b62      	ldr	r3, [pc, #392]	; (800ef48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800edc0:	681b      	ldr	r3, [r3, #0]
 800edc2:	331f      	adds	r3, #31
 800edc4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800edc8:	b949      	cbnz	r1, 800edde <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800edca:	f002 f98d 	bl	80110e8 <memset>
 800edce:	e00a      	b.n	800ede6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800edd0:	6823      	ldr	r3, [r4, #0]
 800edd2:	4601      	mov	r1, r0
 800edd4:	681a      	ldr	r2, [r3, #0]
 800edd6:	4618      	mov	r0, r3
 800edd8:	68d2      	ldr	r2, [r2, #12]
 800edda:	4790      	blx	r2
 800eddc:	e7cf      	b.n	800ed7e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800edde:	3a01      	subs	r2, #1
 800ede0:	f800 1b01 	strb.w	r1, [r0], #1
 800ede4:	d1ee      	bne.n	800edc4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800ede6:	2300      	movs	r3, #0
 800ede8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800edec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800edf0:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800edf4:	7e23      	ldrb	r3, [r4, #24]
 800edf6:	42b2      	cmp	r2, r6
 800edf8:	6861      	ldr	r1, [r4, #4]
 800edfa:	d21a      	bcs.n	800ee32 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800edfc:	9803      	ldr	r0, [sp, #12]
 800edfe:	07c9      	lsls	r1, r1, #31
 800ee00:	4410      	add	r0, r2
 800ee02:	eba6 0602 	sub.w	r6, r6, r2
 800ee06:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ee0a:	d404      	bmi.n	800ee16 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800ee0c:	b922      	cbnz	r2, 800ee18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800ee0e:	9300      	str	r3, [sp, #0]
 800ee10:	4a4e      	ldr	r2, [pc, #312]	; (800ef4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800ee12:	4b4f      	ldr	r3, [pc, #316]	; (800ef50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800ee14:	e003      	b.n	800ee1e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800ee16:	b312      	cbz	r2, 800ee5e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800ee18:	9300      	str	r3, [sp, #0]
 800ee1a:	4a4e      	ldr	r2, [pc, #312]	; (800ef54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800ee1c:	4b4c      	ldr	r3, [pc, #304]	; (800ef50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800ee1e:	4631      	mov	r1, r6
 800ee20:	f7fa fa6c 	bl	80092fc <snprintf>
 800ee24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ee28:	4286      	cmp	r6, r0
 800ee2a:	bfa4      	itt	ge
 800ee2c:	181b      	addge	r3, r3, r0
 800ee2e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800ee32:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ee36:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800ee3a:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ee3e:	42b2      	cmp	r2, r6
 800ee40:	6861      	ldr	r1, [r4, #4]
 800ee42:	d21f      	bcs.n	800ee84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800ee44:	9803      	ldr	r0, [sp, #12]
 800ee46:	05c9      	lsls	r1, r1, #23
 800ee48:	4410      	add	r0, r2
 800ee4a:	eba6 0602 	sub.w	r6, r6, r2
 800ee4e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ee52:	d408      	bmi.n	800ee66 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800ee54:	b94a      	cbnz	r2, 800ee6a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800ee56:	9300      	str	r3, [sp, #0]
 800ee58:	4a3c      	ldr	r2, [pc, #240]	; (800ef4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800ee5a:	4b3f      	ldr	r3, [pc, #252]	; (800ef58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800ee5c:	e008      	b.n	800ee70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800ee5e:	9300      	str	r3, [sp, #0]
 800ee60:	4a3e      	ldr	r2, [pc, #248]	; (800ef5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800ee62:	4b3b      	ldr	r3, [pc, #236]	; (800ef50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800ee64:	e7db      	b.n	800ee1e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800ee66:	2a00      	cmp	r2, #0
 800ee68:	d03c      	beq.n	800eee4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800ee6a:	9300      	str	r3, [sp, #0]
 800ee6c:	4a39      	ldr	r2, [pc, #228]	; (800ef54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800ee6e:	4b3a      	ldr	r3, [pc, #232]	; (800ef58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800ee70:	4631      	mov	r1, r6
 800ee72:	f7fa fa43 	bl	80092fc <snprintf>
 800ee76:	4286      	cmp	r6, r0
 800ee78:	bfa2      	ittt	ge
 800ee7a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ee7e:	18c0      	addge	r0, r0, r3
 800ee80:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ee84:	4936      	ldr	r1, [pc, #216]	; (800ef60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800ee86:	a803      	add	r0, sp, #12
 800ee88:	f001 fad6 	bl	8010438 <PropertiesBuilder::AddComment(char const*)>
 800ee8c:	6863      	ldr	r3, [r4, #4]
 800ee8e:	68a2      	ldr	r2, [r4, #8]
 800ee90:	4934      	ldr	r1, [pc, #208]	; (800ef64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800ee92:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ee96:	a803      	add	r0, sp, #12
 800ee98:	f001 fa8a 	bl	80103b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800ee9c:	6863      	ldr	r3, [r4, #4]
 800ee9e:	68e2      	ldr	r2, [r4, #12]
 800eea0:	4931      	ldr	r1, [pc, #196]	; (800ef68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800eea2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800eea6:	a803      	add	r0, sp, #12
 800eea8:	f001 fa82 	bl	80103b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800eeac:	6863      	ldr	r3, [r4, #4]
 800eeae:	6922      	ldr	r2, [r4, #16]
 800eeb0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800eeb4:	492d      	ldr	r1, [pc, #180]	; (800ef6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800eeb6:	a803      	add	r0, sp, #12
 800eeb8:	f001 fa7a 	bl	80103b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800eebc:	6862      	ldr	r2, [r4, #4]
 800eebe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eec2:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800eec6:	42a3      	cmp	r3, r4
 800eec8:	d21e      	bcs.n	800ef08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800eeca:	9803      	ldr	r0, [sp, #12]
 800eecc:	0692      	lsls	r2, r2, #26
 800eece:	4418      	add	r0, r3
 800eed0:	eba4 0403 	sub.w	r4, r4, r3
 800eed4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800eed8:	d408      	bmi.n	800eeec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800eeda:	b943      	cbnz	r3, 800eeee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800eedc:	4b24      	ldr	r3, [pc, #144]	; (800ef70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800eede:	4a25      	ldr	r2, [pc, #148]	; (800ef74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800eee0:	9500      	str	r5, [sp, #0]
 800eee2:	e007      	b.n	800eef4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800eee4:	9300      	str	r3, [sp, #0]
 800eee6:	4a1d      	ldr	r2, [pc, #116]	; (800ef5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800eee8:	4b1b      	ldr	r3, [pc, #108]	; (800ef58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800eeea:	e7c1      	b.n	800ee70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800eeec:	b32b      	cbz	r3, 800ef3a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800eeee:	4b20      	ldr	r3, [pc, #128]	; (800ef70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800eef0:	4a21      	ldr	r2, [pc, #132]	; (800ef78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800eef2:	9500      	str	r5, [sp, #0]
 800eef4:	4621      	mov	r1, r4
 800eef6:	f7fa fa01 	bl	80092fc <snprintf>
 800eefa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800eefe:	4284      	cmp	r4, r0
 800ef00:	bfa4      	itt	ge
 800ef02:	181b      	addge	r3, r3, r0
 800ef04:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800ef08:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ef0c:	b17b      	cbz	r3, 800ef2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800ef0e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ef12:	9b03      	ldr	r3, [sp, #12]
 800ef14:	4413      	add	r3, r2
 800ef16:	227d      	movs	r2, #125	; 0x7d
 800ef18:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ef1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef20:	9903      	ldr	r1, [sp, #12]
 800ef22:	54ca      	strb	r2, [r1, r3]
 800ef24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef28:	3301      	adds	r3, #1
 800ef2a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ef2e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ef32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ef34:	601a      	str	r2, [r3, #0]
 800ef36:	b006      	add	sp, #24
 800ef38:	bd70      	pop	{r4, r5, r6, pc}
 800ef3a:	4b0d      	ldr	r3, [pc, #52]	; (800ef70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800ef3c:	4a0f      	ldr	r2, [pc, #60]	; (800ef7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800ef3e:	9500      	str	r5, [sp, #0]
 800ef40:	e7d8      	b.n	800eef4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800ef42:	bf00      	nop
 800ef44:	080153e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, ip, lr}
 800ef48:	20008564 	andcs	r8, r0, r4, ror #10
 800ef4c:	08013781 	stmdaeq	r1, {r0, r7, r8, r9, sl, ip, sp}
 800ef50:	080153de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, ip, lr}
 800ef54:	08013778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp}
 800ef58:	080153bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, lr}
 800ef5c:	08013782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp}
 800ef60:	08015397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, ip, lr}
 800ef64:	080153a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, lr}
 800ef68:	080153d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, ip, lr}
 800ef6c:	080153ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, ip, lr}
 800ef70:	080153cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, ip, lr}
 800ef74:	08013794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, sp}
 800ef78:	08013789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip, sp}
 800ef7c:	08013795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp}

0800ef80 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800ef80:	b513      	push	{r0, r1, r4, lr}
 800ef82:	6804      	ldr	r4, [r0, #0]
 800ef84:	b914      	cbnz	r4, 800ef8c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ef86:	601c      	str	r4, [r3, #0]
 800ef88:	b002      	add	sp, #8
 800ef8a:	bd10      	pop	{r4, pc}
 800ef8c:	9300      	str	r3, [sp, #0]
 800ef8e:	4613      	mov	r3, r2
 800ef90:	460a      	mov	r2, r1
 800ef92:	2100      	movs	r1, #0
 800ef94:	f7ff fee8 	bl	800ed68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800ef98:	e7f6      	b.n	800ef88 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ef9a <NetworkParams::Dump()>:
 800ef9a:	4770      	bx	lr

0800ef9c <memcpy.isra.0>:
 800ef9c:	3801      	subs	r0, #1
 800ef9e:	440a      	add	r2, r1
 800efa0:	4291      	cmp	r1, r2
 800efa2:	d100      	bne.n	800efa6 <memcpy.isra.0+0xa>
 800efa4:	4770      	bx	lr
 800efa6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800efaa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800efae:	e7f7      	b.n	800efa0 <memcpy.isra.0+0x4>

0800efb0 <arp_announce>:
 800efb0:	4803      	ldr	r0, [pc, #12]	; (800efc0 <arp_announce+0x10>)
 800efb2:	69c3      	ldr	r3, [r0, #28]
 800efb4:	b113      	cbz	r3, 800efbc <arp_announce+0xc>
 800efb6:	212a      	movs	r1, #42	; 0x2a
 800efb8:	f003 ba66 	b.w	8012488 <emac_eth_send>
 800efbc:	4770      	bx	lr
 800efbe:	bf00      	nop
 800efc0:	20008568 	andcs	r8, r0, r8, ror #10

0800efc4 <arp_handle_request>:
 800efc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800efc6:	2204      	movs	r2, #4
 800efc8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800efcc:	4604      	mov	r4, r0
 800efce:	eb0d 0002 	add.w	r0, sp, r2
 800efd2:	f7ff ffe3 	bl	800ef9c <memcpy.isra.0>
 800efd6:	4b0d      	ldr	r3, [pc, #52]	; (800f00c <arp_handle_request+0x48>)
 800efd8:	9a01      	ldr	r2, [sp, #4]
 800efda:	69db      	ldr	r3, [r3, #28]
 800efdc:	429a      	cmp	r2, r3
 800efde:	d113      	bne.n	800f008 <arp_handle_request+0x44>
 800efe0:	2206      	movs	r2, #6
 800efe2:	4d0b      	ldr	r5, [pc, #44]	; (800f010 <arp_handle_request+0x4c>)
 800efe4:	18a1      	adds	r1, r4, r2
 800efe6:	4628      	mov	r0, r5
 800efe8:	f7ff ffd8 	bl	800ef9c <memcpy.isra.0>
 800efec:	f104 0116 	add.w	r1, r4, #22
 800eff0:	f105 0020 	add.w	r0, r5, #32
 800eff4:	2206      	movs	r2, #6
 800eff6:	f7ff ffd1 	bl	800ef9c <memcpy.isra.0>
 800effa:	69e3      	ldr	r3, [r4, #28]
 800effc:	212a      	movs	r1, #42	; 0x2a
 800effe:	4628      	mov	r0, r5
 800f000:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800f004:	f003 fa40 	bl	8012488 <emac_eth_send>
 800f008:	b003      	add	sp, #12
 800f00a:	bd30      	pop	{r4, r5, pc}
 800f00c:	20008568 	andcs	r8, r0, r8, ror #10
 800f010:	20008594 	mulcs	r0, r4, r5

0800f014 <arp_handle_reply>:
 800f014:	69c1      	ldr	r1, [r0, #28]
 800f016:	3016      	adds	r0, #22
 800f018:	f000 b80a 	b.w	800f030 <arp_cache_update>

0800f01c <arp_send_request>:
 800f01c:	4b03      	ldr	r3, [pc, #12]	; (800f02c <arp_send_request+0x10>)
 800f01e:	212a      	movs	r1, #42	; 0x2a
 800f020:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800f024:	4618      	mov	r0, r3
 800f026:	f003 ba2f 	b.w	8012488 <emac_eth_send>
 800f02a:	bf00      	nop
 800f02c:	200085c0 	andcs	r8, r0, r0, asr #11

0800f030 <arp_cache_update>:
 800f030:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f032:	4e11      	ldr	r6, [pc, #68]	; (800f078 <arp_cache_update+0x48>)
 800f034:	8833      	ldrh	r3, [r6, #0]
 800f036:	2b20      	cmp	r3, #32
 800f038:	d018      	beq.n	800f06c <arp_cache_update+0x3c>
 800f03a:	2400      	movs	r4, #0
 800f03c:	220c      	movs	r2, #12
 800f03e:	4d0f      	ldr	r5, [pc, #60]	; (800f07c <arp_cache_update+0x4c>)
 800f040:	b2a7      	uxth	r7, r4
 800f042:	42bb      	cmp	r3, r7
 800f044:	d80b      	bhi.n	800f05e <arp_cache_update+0x2e>
 800f046:	fb02 5203 	mla	r2, r2, r3, r5
 800f04a:	1d84      	adds	r4, r0, #6
 800f04c:	3203      	adds	r2, #3
 800f04e:	42a0      	cmp	r0, r4
 800f050:	d10d      	bne.n	800f06e <arp_cache_update+0x3e>
 800f052:	220c      	movs	r2, #12
 800f054:	435a      	muls	r2, r3
 800f056:	3301      	adds	r3, #1
 800f058:	50a9      	str	r1, [r5, r2]
 800f05a:	8033      	strh	r3, [r6, #0]
 800f05c:	e006      	b.n	800f06c <arp_cache_update+0x3c>
 800f05e:	3401      	adds	r4, #1
 800f060:	fb02 5704 	mla	r7, r2, r4, r5
 800f064:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800f068:	428f      	cmp	r7, r1
 800f06a:	d1e9      	bne.n	800f040 <arp_cache_update+0x10>
 800f06c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f06e:	f810 7b01 	ldrb.w	r7, [r0], #1
 800f072:	f802 7f01 	strb.w	r7, [r2, #1]!
 800f076:	e7ea      	b.n	800f04e <arp_cache_update+0x1e>
 800f078:	2000876c 	andcs	r8, r0, ip, ror #14
 800f07c:	200085ec 	andcs	r8, r0, ip, ror #11

0800f080 <arp_cache_lookup>:
 800f080:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f084:	2200      	movs	r2, #0
 800f086:	4606      	mov	r6, r0
 800f088:	460c      	mov	r4, r1
 800f08a:	200c      	movs	r0, #12
 800f08c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800f114 <arp_cache_lookup+0x94>
 800f090:	fb00 f302 	mul.w	r3, r0, r2
 800f094:	f853 1008 	ldr.w	r1, [r3, r8]
 800f098:	42b1      	cmp	r1, r6
 800f09a:	d10d      	bne.n	800f0b8 <arp_cache_lookup+0x38>
 800f09c:	3304      	adds	r3, #4
 800f09e:	4443      	add	r3, r8
 800f0a0:	3c01      	subs	r4, #1
 800f0a2:	1d9a      	adds	r2, r3, #6
 800f0a4:	4293      	cmp	r3, r2
 800f0a6:	d102      	bne.n	800f0ae <arp_cache_lookup+0x2e>
 800f0a8:	4630      	mov	r0, r6
 800f0aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f0ae:	f813 1b01 	ldrb.w	r1, [r3], #1
 800f0b2:	f804 1f01 	strb.w	r1, [r4, #1]!
 800f0b6:	e7f5      	b.n	800f0a4 <arp_cache_lookup+0x24>
 800f0b8:	b111      	cbz	r1, 800f0c0 <arp_cache_lookup+0x40>
 800f0ba:	3201      	adds	r2, #1
 800f0bc:	2a20      	cmp	r2, #32
 800f0be:	d1e7      	bne.n	800f090 <arp_cache_lookup+0x10>
 800f0c0:	2704      	movs	r7, #4
 800f0c2:	f8df a054 	ldr.w	sl, [pc, #84]	; 800f118 <arp_cache_lookup+0x98>
 800f0c6:	f8ba 5000 	ldrh.w	r5, [sl]
 800f0ca:	3f01      	subs	r7, #1
 800f0cc:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800f0d0:	d101      	bne.n	800f0d6 <arp_cache_lookup+0x56>
 800f0d2:	463e      	mov	r6, r7
 800f0d4:	e7e8      	b.n	800f0a8 <arp_cache_lookup+0x28>
 800f0d6:	4630      	mov	r0, r6
 800f0d8:	f7ff ffa0 	bl	800f01c <arp_send_request>
 800f0dc:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800f0e0:	f1b9 0901 	subs.w	r9, r9, #1
 800f0e4:	f8ba 3000 	ldrh.w	r3, [sl]
 800f0e8:	d011      	beq.n	800f10e <arp_cache_lookup+0x8e>
 800f0ea:	429d      	cmp	r5, r3
 800f0ec:	d00c      	beq.n	800f108 <arp_cache_lookup+0x88>
 800f0ee:	230c      	movs	r3, #12
 800f0f0:	fb03 8505 	mla	r5, r3, r5, r8
 800f0f4:	3c01      	subs	r4, #1
 800f0f6:	1d2b      	adds	r3, r5, #4
 800f0f8:	350a      	adds	r5, #10
 800f0fa:	42ab      	cmp	r3, r5
 800f0fc:	d0d4      	beq.n	800f0a8 <arp_cache_lookup+0x28>
 800f0fe:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f102:	f804 2f01 	strb.w	r2, [r4, #1]!
 800f106:	e7f8      	b.n	800f0fa <arp_cache_lookup+0x7a>
 800f108:	f7f8 fa0a 	bl	8007520 <net_handle>
 800f10c:	e7e8      	b.n	800f0e0 <arp_cache_lookup+0x60>
 800f10e:	429d      	cmp	r5, r3
 800f110:	d0db      	beq.n	800f0ca <arp_cache_lookup+0x4a>
 800f112:	e7ec      	b.n	800f0ee <arp_cache_lookup+0x6e>
 800f114:	200085ec 	andcs	r8, r0, ip, ror #11
 800f118:	2000876c 	andcs	r8, r0, ip, ror #14

0800f11c <_parse_response>:
 800f11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f120:	2400      	movs	r4, #0
 800f122:	460d      	mov	r5, r1
 800f124:	46a3      	mov	fp, r4
 800f126:	4627      	mov	r7, r4
 800f128:	46a2      	mov	sl, r4
 800f12a:	46a1      	mov	r9, r4
 800f12c:	46a0      	mov	r8, r4
 800f12e:	4e50      	ldr	r6, [pc, #320]	; (800f270 <_parse_response+0x154>)
 800f130:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800f134:	6833      	ldr	r3, [r6, #0]
 800f136:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800f13a:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800f13e:	9009      	str	r0, [sp, #36]	; 0x24
 800f140:	9402      	str	r4, [sp, #8]
 800f142:	9407      	str	r4, [sp, #28]
 800f144:	9308      	str	r3, [sp, #32]
 800f146:	f7f8 f9eb 	bl	8007520 <net_handle>
 800f14a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f14e:	9300      	str	r3, [sp, #0]
 800f150:	f44f 7209 	mov.w	r2, #548	; 0x224
 800f154:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800f158:	ab0c      	add	r3, sp, #48	; 0x30
 800f15a:	a90d      	add	r1, sp, #52	; 0x34
 800f15c:	f7fe fe2e 	bl	800ddbc <udp_recv>
 800f160:	2800      	cmp	r0, #0
 800f162:	d03f      	beq.n	800f1e4 <_parse_response+0xc8>
 800f164:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800f168:	2b43      	cmp	r3, #67	; 0x43
 800f16a:	d13b      	bne.n	800f1e4 <_parse_response+0xc8>
 800f16c:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800f170:	1e6b      	subs	r3, r5, #1
 800f172:	1d69      	adds	r1, r5, #5
 800f174:	4299      	cmp	r1, r3
 800f176:	d12f      	bne.n	800f1d8 <_parse_response+0xbc>
 800f178:	2100      	movs	r1, #0
 800f17a:	ab0d      	add	r3, sp, #52	; 0x34
 800f17c:	181d      	adds	r5, r3, r0
 800f17e:	468c      	mov	ip, r1
 800f180:	460e      	mov	r6, r1
 800f182:	4608      	mov	r0, r1
 800f184:	ab49      	add	r3, sp, #292	; 0x124
 800f186:	42ab      	cmp	r3, r5
 800f188:	d337      	bcc.n	800f1fa <_parse_response+0xde>
 800f18a:	b141      	cbz	r1, 800f19e <_parse_response+0x82>
 800f18c:	4b39      	ldr	r3, [pc, #228]	; (800f274 <_parse_response+0x158>)
 800f18e:	9a07      	ldr	r2, [sp, #28]
 800f190:	f883 8003 	strb.w	r8, [r3, #3]
 800f194:	709a      	strb	r2, [r3, #2]
 800f196:	9a06      	ldr	r2, [sp, #24]
 800f198:	705a      	strb	r2, [r3, #1]
 800f19a:	9a05      	ldr	r2, [sp, #20]
 800f19c:	701a      	strb	r2, [r3, #0]
 800f19e:	f1bc 0f00 	cmp.w	ip, #0
 800f1a2:	d007      	beq.n	800f1b4 <_parse_response+0x98>
 800f1a4:	4b34      	ldr	r3, [pc, #208]	; (800f278 <_parse_response+0x15c>)
 800f1a6:	9a04      	ldr	r2, [sp, #16]
 800f1a8:	705c      	strb	r4, [r3, #1]
 800f1aa:	70da      	strb	r2, [r3, #3]
 800f1ac:	9a03      	ldr	r2, [sp, #12]
 800f1ae:	709a      	strb	r2, [r3, #2]
 800f1b0:	9a02      	ldr	r2, [sp, #8]
 800f1b2:	701a      	strb	r2, [r3, #0]
 800f1b4:	b13e      	cbz	r6, 800f1c6 <_parse_response+0xaa>
 800f1b6:	4b31      	ldr	r3, [pc, #196]	; (800f27c <_parse_response+0x160>)
 800f1b8:	70df      	strb	r7, [r3, #3]
 800f1ba:	f883 a002 	strb.w	sl, [r3, #2]
 800f1be:	f883 9001 	strb.w	r9, [r3, #1]
 800f1c2:	f883 b000 	strb.w	fp, [r3]
 800f1c6:	2802      	cmp	r0, #2
 800f1c8:	d102      	bne.n	800f1d0 <_parse_response+0xb4>
 800f1ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f1cc:	4b2c      	ldr	r3, [pc, #176]	; (800f280 <_parse_response+0x164>)
 800f1ce:	601a      	str	r2, [r3, #0]
 800f1d0:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800f1d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1d8:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800f1dc:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800f1e0:	45e6      	cmp	lr, ip
 800f1e2:	d0c7      	beq.n	800f174 <_parse_response+0x58>
 800f1e4:	6833      	ldr	r3, [r6, #0]
 800f1e6:	9a08      	ldr	r2, [sp, #32]
 800f1e8:	1a9b      	subs	r3, r3, r2
 800f1ea:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f1ee:	d3aa      	bcc.n	800f146 <_parse_response+0x2a>
 800f1f0:	2800      	cmp	r0, #0
 800f1f2:	d1c1      	bne.n	800f178 <_parse_response+0x5c>
 800f1f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f1f8:	e7ea      	b.n	800f1d0 <_parse_response+0xb4>
 800f1fa:	781a      	ldrb	r2, [r3, #0]
 800f1fc:	2a35      	cmp	r2, #53	; 0x35
 800f1fe:	d011      	beq.n	800f224 <_parse_response+0x108>
 800f200:	d808      	bhi.n	800f214 <_parse_response+0xf8>
 800f202:	2a01      	cmp	r2, #1
 800f204:	d011      	beq.n	800f22a <_parse_response+0x10e>
 800f206:	2a03      	cmp	r2, #3
 800f208:	d019      	beq.n	800f23e <_parse_response+0x122>
 800f20a:	b14a      	cbz	r2, 800f220 <_parse_response+0x104>
 800f20c:	1c9a      	adds	r2, r3, #2
 800f20e:	785b      	ldrb	r3, [r3, #1]
 800f210:	4413      	add	r3, r2
 800f212:	e7b8      	b.n	800f186 <_parse_response+0x6a>
 800f214:	2a36      	cmp	r2, #54	; 0x36
 800f216:	d01f      	beq.n	800f258 <_parse_response+0x13c>
 800f218:	2aff      	cmp	r2, #255	; 0xff
 800f21a:	d1f7      	bne.n	800f20c <_parse_response+0xf0>
 800f21c:	462b      	mov	r3, r5
 800f21e:	e7b2      	b.n	800f186 <_parse_response+0x6a>
 800f220:	3301      	adds	r3, #1
 800f222:	e7b0      	b.n	800f186 <_parse_response+0x6a>
 800f224:	7898      	ldrb	r0, [r3, #2]
 800f226:	3303      	adds	r3, #3
 800f228:	e7ad      	b.n	800f186 <_parse_response+0x6a>
 800f22a:	f893 b002 	ldrb.w	fp, [r3, #2]
 800f22e:	f893 9003 	ldrb.w	r9, [r3, #3]
 800f232:	f893 a004 	ldrb.w	sl, [r3, #4]
 800f236:	795f      	ldrb	r7, [r3, #5]
 800f238:	4616      	mov	r6, r2
 800f23a:	3306      	adds	r3, #6
 800f23c:	e7a3      	b.n	800f186 <_parse_response+0x6a>
 800f23e:	789a      	ldrb	r2, [r3, #2]
 800f240:	78dc      	ldrb	r4, [r3, #3]
 800f242:	9202      	str	r2, [sp, #8]
 800f244:	791a      	ldrb	r2, [r3, #4]
 800f246:	f04f 0c01 	mov.w	ip, #1
 800f24a:	9203      	str	r2, [sp, #12]
 800f24c:	795a      	ldrb	r2, [r3, #5]
 800f24e:	9204      	str	r2, [sp, #16]
 800f250:	785a      	ldrb	r2, [r3, #1]
 800f252:	4413      	add	r3, r2
 800f254:	3302      	adds	r3, #2
 800f256:	e796      	b.n	800f186 <_parse_response+0x6a>
 800f258:	789a      	ldrb	r2, [r3, #2]
 800f25a:	f893 8005 	ldrb.w	r8, [r3, #5]
 800f25e:	9205      	str	r2, [sp, #20]
 800f260:	78da      	ldrb	r2, [r3, #3]
 800f262:	2101      	movs	r1, #1
 800f264:	9206      	str	r2, [sp, #24]
 800f266:	791a      	ldrb	r2, [r3, #4]
 800f268:	3306      	adds	r3, #6
 800f26a:	9207      	str	r2, [sp, #28]
 800f26c:	e78b      	b.n	800f186 <_parse_response+0x6a>
 800f26e:	bf00      	nop
 800f270:	20009c84 	andcs	r9, r0, r4, lsl #25
 800f274:	200089a0 	andcs	r8, r0, r0, lsr #19
 800f278:	20008770 	andcs	r8, r0, r0, ror r7
 800f27c:	20008778 	andcs	r8, r0, r8, ror r7
 800f280:	20008774 	andcs	r8, r0, r4, ror r7

0800f284 <memcpy.isra.0>:
 800f284:	3801      	subs	r0, #1
 800f286:	440a      	add	r2, r1
 800f288:	4291      	cmp	r1, r2
 800f28a:	d100      	bne.n	800f28e <memcpy.isra.0+0xa>
 800f28c:	4770      	bx	lr
 800f28e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f292:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f296:	e7f7      	b.n	800f288 <memcpy.isra.0+0x4>

0800f298 <dhcp_client>:
 800f298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f29c:	b087      	sub	sp, #28
 800f29e:	9203      	str	r2, [sp, #12]
 800f2a0:	4a77      	ldr	r2, [pc, #476]	; (800f480 <dhcp_client+0x1e8>)
 800f2a2:	460f      	mov	r7, r1
 800f2a4:	4605      	mov	r5, r0
 800f2a6:	f44f 7309 	mov.w	r3, #548	; 0x224
 800f2aa:	4614      	mov	r4, r2
 800f2ac:	2100      	movs	r1, #0
 800f2ae:	3b01      	subs	r3, #1
 800f2b0:	f802 1b01 	strb.w	r1, [r2], #1
 800f2b4:	d1fb      	bne.n	800f2ae <dhcp_client+0x16>
 800f2b6:	f240 1301 	movw	r3, #257	; 0x101
 800f2ba:	2206      	movs	r2, #6
 800f2bc:	4629      	mov	r1, r5
 800f2be:	4871      	ldr	r0, [pc, #452]	; (800f484 <dhcp_client+0x1ec>)
 800f2c0:	8023      	strh	r3, [r4, #0]
 800f2c2:	70a2      	strb	r2, [r4, #2]
 800f2c4:	f7ff ffde 	bl	800f284 <memcpy.isra.0>
 800f2c8:	4b6f      	ldr	r3, [pc, #444]	; (800f488 <dhcp_client+0x1f0>)
 800f2ca:	2044      	movs	r0, #68	; 0x44
 800f2cc:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800f2d0:	f240 1335 	movw	r3, #309	; 0x135
 800f2d4:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800f2d8:	f7fe fd36 	bl	800dd48 <udp_bind>
 800f2dc:	1e06      	subs	r6, r0, #0
 800f2de:	f2c0 80c9 	blt.w	800f474 <dhcp_client+0x1dc>
 800f2e2:	f04f 0915 	mov.w	r9, #21
 800f2e6:	f8df a198 	ldr.w	sl, [pc, #408]	; 800f480 <dhcp_client+0x1e8>
 800f2ea:	f1b9 0901 	subs.w	r9, r9, #1
 800f2ee:	d11f      	bne.n	800f330 <dhcp_client+0x98>
 800f2f0:	464c      	mov	r4, r9
 800f2f2:	2044      	movs	r0, #68	; 0x44
 800f2f4:	f7fe fd42 	bl	800dd7c <udp_unbind>
 800f2f8:	2c00      	cmp	r4, #0
 800f2fa:	f000 80be 	beq.w	800f47a <dhcp_client+0x1e2>
 800f2fe:	2204      	movs	r2, #4
 800f300:	4962      	ldr	r1, [pc, #392]	; (800f48c <dhcp_client+0x1f4>)
 800f302:	a805      	add	r0, sp, #20
 800f304:	f7ff ffbe 	bl	800f284 <memcpy.isra.0>
 800f308:	9b05      	ldr	r3, [sp, #20]
 800f30a:	2204      	movs	r2, #4
 800f30c:	4960      	ldr	r1, [pc, #384]	; (800f490 <dhcp_client+0x1f8>)
 800f30e:	603b      	str	r3, [r7, #0]
 800f310:	a805      	add	r0, sp, #20
 800f312:	f7ff ffb7 	bl	800f284 <memcpy.isra.0>
 800f316:	9b05      	ldr	r3, [sp, #20]
 800f318:	a805      	add	r0, sp, #20
 800f31a:	60bb      	str	r3, [r7, #8]
 800f31c:	2204      	movs	r2, #4
 800f31e:	495d      	ldr	r1, [pc, #372]	; (800f494 <dhcp_client+0x1fc>)
 800f320:	f7ff ffb0 	bl	800f284 <memcpy.isra.0>
 800f324:	2000      	movs	r0, #0
 800f326:	9b05      	ldr	r3, [sp, #20]
 800f328:	607b      	str	r3, [r7, #4]
 800f32a:	b007      	add	sp, #28
 800f32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f330:	f643 5301 	movw	r3, #15617	; 0x3d01
 800f334:	f240 1807 	movw	r8, #263	; 0x107
 800f338:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800f33c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800f340:	782b      	ldrb	r3, [r5, #0]
 800f342:	4a55      	ldr	r2, [pc, #340]	; (800f498 <dhcp_client+0x200>)
 800f344:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800f348:	786b      	ldrb	r3, [r5, #1]
 800f34a:	fa5f fb86 	uxtb.w	fp, r6
 800f34e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800f352:	78ab      	ldrb	r3, [r5, #2]
 800f354:	4651      	mov	r1, sl
 800f356:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800f35a:	78eb      	ldrb	r3, [r5, #3]
 800f35c:	4658      	mov	r0, fp
 800f35e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800f362:	792b      	ldrb	r3, [r5, #4]
 800f364:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800f368:	796b      	ldrb	r3, [r5, #5]
 800f36a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800f36e:	4b4b      	ldr	r3, [pc, #300]	; (800f49c <dhcp_client+0x204>)
 800f370:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800f374:	23ff      	movs	r3, #255	; 0xff
 800f376:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800f37a:	2343      	movs	r3, #67	; 0x43
 800f37c:	f240 1205 	movw	r2, #261	; 0x105
 800f380:	9300      	str	r3, [sp, #0]
 800f382:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f386:	f7fe fd75 	bl	800de74 <udp_send>
 800f38a:	4629      	mov	r1, r5
 800f38c:	4630      	mov	r0, r6
 800f38e:	f7ff fec5 	bl	800f11c <_parse_response>
 800f392:	2802      	cmp	r0, #2
 800f394:	d1a9      	bne.n	800f2ea <dhcp_client+0x52>
 800f396:	f643 5303 	movw	r3, #15619	; 0x3d03
 800f39a:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800f39e:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800f3a2:	782b      	ldrb	r3, [r5, #0]
 800f3a4:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800f4a0 <dhcp_client+0x208>
 800f3a8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800f3ac:	786b      	ldrb	r3, [r5, #1]
 800f3ae:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800f3b2:	78ab      	ldrb	r3, [r5, #2]
 800f3b4:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800f3b8:	78eb      	ldrb	r3, [r5, #3]
 800f3ba:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800f3be:	792b      	ldrb	r3, [r5, #4]
 800f3c0:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800f3c4:	796b      	ldrb	r3, [r5, #5]
 800f3c6:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800f3ca:	f240 4332 	movw	r3, #1074	; 0x432
 800f3ce:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800f3d2:	4b2e      	ldr	r3, [pc, #184]	; (800f48c <dhcp_client+0x1f4>)
 800f3d4:	881a      	ldrh	r2, [r3, #0]
 800f3d6:	885b      	ldrh	r3, [r3, #2]
 800f3d8:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800f3dc:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800f3e0:	f240 4336 	movw	r3, #1078	; 0x436
 800f3e4:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800f3e8:	4b2e      	ldr	r3, [pc, #184]	; (800f4a4 <dhcp_client+0x20c>)
 800f3ea:	221e      	movs	r2, #30
 800f3ec:	681b      	ldr	r3, [r3, #0]
 800f3ee:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800f3f2:	230c      	movs	r3, #12
 800f3f4:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800f3f8:	9b03      	ldr	r3, [sp, #12]
 800f3fa:	1e58      	subs	r0, r3, #1
 800f3fc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800f400:	f1a2 0e1e 	sub.w	lr, r2, #30
 800f404:	1c51      	adds	r1, r2, #1
 800f406:	bb8b      	cbnz	r3, 800f46c <dhcp_client+0x1d4>
 800f408:	2037      	movs	r0, #55	; 0x37
 800f40a:	18a3      	adds	r3, r4, r2
 800f40c:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800f410:	2006      	movs	r0, #6
 800f412:	4421      	add	r1, r4
 800f414:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800f418:	2103      	movs	r1, #3
 800f41a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800f41e:	210f      	movs	r1, #15
 800f420:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800f424:	213a      	movs	r1, #58	; 0x3a
 800f426:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800f42a:	213b      	movs	r1, #59	; 0x3b
 800f42c:	f04f 0801 	mov.w	r8, #1
 800f430:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800f434:	21ff      	movs	r1, #255	; 0xff
 800f436:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800f43a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800f43e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800f442:	2343      	movs	r3, #67	; 0x43
 800f444:	32f5      	adds	r2, #245	; 0xf5
 800f446:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800f44a:	4651      	mov	r1, sl
 800f44c:	9300      	str	r3, [sp, #0]
 800f44e:	b292      	uxth	r2, r2
 800f450:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f454:	4658      	mov	r0, fp
 800f456:	f7fe fd0d 	bl	800de74 <udp_send>
 800f45a:	4629      	mov	r1, r5
 800f45c:	4630      	mov	r0, r6
 800f45e:	f7ff fe5d 	bl	800f11c <_parse_response>
 800f462:	2805      	cmp	r0, #5
 800f464:	f47f af41 	bne.w	800f2ea <dhcp_client+0x52>
 800f468:	4644      	mov	r4, r8
 800f46a:	e742      	b.n	800f2f2 <dhcp_client+0x5a>
 800f46c:	460a      	mov	r2, r1
 800f46e:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800f472:	e7c3      	b.n	800f3fc <dhcp_client+0x164>
 800f474:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f478:	e757      	b.n	800f32a <dhcp_client+0x92>
 800f47a:	f06f 0001 	mvn.w	r0, #1
 800f47e:	e754      	b.n	800f32a <dhcp_client+0x92>
 800f480:	2000877c 	andcs	r8, r0, ip, ror r7
 800f484:	20008798 	mulcs	r0, r8, r7
 800f488:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800f48c:	20008774 	andcs	r8, r0, r4, ror r7
 800f490:	20008770 	andcs	r8, r0, r0, ror r7
 800f494:	20008778 	andcs	r8, r0, r8, ror r7
 800f498:	03010637 	movweq	r0, #5687	; 0x1637
 800f49c:	3b3a0f06 	blcc	8e930bc <__exidx_end+0xe7d6a0>
 800f4a0:	20008885 	andcs	r8, r0, r5, lsl #17
 800f4a4:	200089a0 	andcs	r8, r0, r0, lsr #19

0800f4a8 <dhcp_client_release>:
 800f4a8:	b507      	push	{r0, r1, r2, lr}
 800f4aa:	2044      	movs	r0, #68	; 0x44
 800f4ac:	f7fe fc4c 	bl	800dd48 <udp_bind>
 800f4b0:	f243 6307 	movw	r3, #13831	; 0x3607
 800f4b4:	4911      	ldr	r1, [pc, #68]	; (800f4fc <dhcp_client_release+0x54>)
 800f4b6:	b2c0      	uxtb	r0, r0
 800f4b8:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800f4bc:	2304      	movs	r3, #4
 800f4be:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800f4c2:	4b0f      	ldr	r3, [pc, #60]	; (800f500 <dhcp_client_release+0x58>)
 800f4c4:	781a      	ldrb	r2, [r3, #0]
 800f4c6:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800f4ca:	785a      	ldrb	r2, [r3, #1]
 800f4cc:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800f4d0:	789a      	ldrb	r2, [r3, #2]
 800f4d2:	78db      	ldrb	r3, [r3, #3]
 800f4d4:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800f4d8:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800f4dc:	23ff      	movs	r3, #255	; 0xff
 800f4de:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800f4e2:	2343      	movs	r3, #67	; 0x43
 800f4e4:	22fa      	movs	r2, #250	; 0xfa
 800f4e6:	9300      	str	r3, [sp, #0]
 800f4e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f4ec:	f7fe fcc2 	bl	800de74 <udp_send>
 800f4f0:	2044      	movs	r0, #68	; 0x44
 800f4f2:	b003      	add	sp, #12
 800f4f4:	f85d eb04 	ldr.w	lr, [sp], #4
 800f4f8:	f7fe bc40 	b.w	800dd7c <udp_unbind>
 800f4fc:	2000877c 	andcs	r8, r0, ip, ror r7
 800f500:	200089a0 	andcs	r8, r0, r0, lsr #19

0800f504 <memcpy.isra.0>:
 800f504:	3801      	subs	r0, #1
 800f506:	440a      	add	r2, r1
 800f508:	4291      	cmp	r1, r2
 800f50a:	d100      	bne.n	800f50e <memcpy.isra.0+0xa>
 800f50c:	4770      	bx	lr
 800f50e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f512:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f516:	e7f7      	b.n	800f508 <memcpy.isra.0+0x4>

0800f518 <_send_report>:
 800f518:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f51a:	491c      	ldr	r1, [pc, #112]	; (800f58c <_send_report+0x74>)
 800f51c:	4c1c      	ldr	r4, [pc, #112]	; (800f590 <_send_report+0x78>)
 800f51e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800f522:	9001      	str	r0, [sp, #4]
 800f524:	70cb      	strb	r3, [r1, #3]
 800f526:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800f52a:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800f52e:	710b      	strb	r3, [r1, #4]
 800f530:	7148      	strb	r0, [r1, #5]
 800f532:	2206      	movs	r2, #6
 800f534:	4620      	mov	r0, r4
 800f536:	f7ff ffe5 	bl	800f504 <memcpy.isra.0>
 800f53a:	2204      	movs	r2, #4
 800f53c:	2700      	movs	r7, #0
 800f53e:	4d15      	ldr	r5, [pc, #84]	; (800f594 <_send_report+0x7c>)
 800f540:	eb0d 0102 	add.w	r1, sp, r2
 800f544:	882b      	ldrh	r3, [r5, #0]
 800f546:	f104 001e 	add.w	r0, r4, #30
 800f54a:	f104 060e 	add.w	r6, r4, #14
 800f54e:	8263      	strh	r3, [r4, #18]
 800f550:	f7ff ffd8 	bl	800f504 <memcpy.isra.0>
 800f554:	2118      	movs	r1, #24
 800f556:	4630      	mov	r0, r6
 800f558:	8327      	strh	r7, [r4, #24]
 800f55a:	f000 f8c6 	bl	800f6ea <net_chksum>
 800f55e:	2204      	movs	r2, #4
 800f560:	8320      	strh	r0, [r4, #24]
 800f562:	eb0d 0102 	add.w	r1, sp, r2
 800f566:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f56a:	f7ff ffcb 	bl	800f504 <memcpy.isra.0>
 800f56e:	2120      	movs	r1, #32
 800f570:	4630      	mov	r0, r6
 800f572:	8527      	strh	r7, [r4, #40]	; 0x28
 800f574:	f000 f8b9 	bl	800f6ea <net_chksum>
 800f578:	212e      	movs	r1, #46	; 0x2e
 800f57a:	8520      	strh	r0, [r4, #40]	; 0x28
 800f57c:	4620      	mov	r0, r4
 800f57e:	f002 ff83 	bl	8012488 <emac_eth_send>
 800f582:	882b      	ldrh	r3, [r5, #0]
 800f584:	3301      	adds	r3, #1
 800f586:	802b      	strh	r3, [r5, #0]
 800f588:	b003      	add	sp, #12
 800f58a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f58c:	20008afc 	strdcs	r8, [r0], -ip
 800f590:	20008b04 	andcs	r8, r0, r4, lsl #22
 800f594:	20008ac4 	andcs	r8, r0, r4, asr #21

0800f598 <igmp_set_ip>:
 800f598:	b507      	push	{r0, r1, r2, lr}
 800f59a:	2204      	movs	r2, #4
 800f59c:	6803      	ldr	r3, [r0, #0]
 800f59e:	eb0d 0102 	add.w	r1, sp, r2
 800f5a2:	4806      	ldr	r0, [pc, #24]	; (800f5bc <igmp_set_ip+0x24>)
 800f5a4:	9301      	str	r3, [sp, #4]
 800f5a6:	f7ff ffad 	bl	800f504 <memcpy.isra.0>
 800f5aa:	2204      	movs	r2, #4
 800f5ac:	4804      	ldr	r0, [pc, #16]	; (800f5c0 <igmp_set_ip+0x28>)
 800f5ae:	eb0d 0102 	add.w	r1, sp, r2
 800f5b2:	f7ff ffa7 	bl	800f504 <memcpy.isra.0>
 800f5b6:	b003      	add	sp, #12
 800f5b8:	f85d fb04 	ldr.w	pc, [sp], #4
 800f5bc:	20008b1e 	andcs	r8, r0, lr, lsl fp
 800f5c0:	20008ae6 	andcs	r8, r0, r6, ror #21

0800f5c4 <igmp_timer>:
 800f5c4:	b570      	push	{r4, r5, r6, lr}
 800f5c6:	2500      	movs	r5, #0
 800f5c8:	2602      	movs	r6, #2
 800f5ca:	4c0a      	ldr	r4, [pc, #40]	; (800f5f4 <igmp_timer+0x30>)
 800f5cc:	7963      	ldrb	r3, [r4, #5]
 800f5ce:	2b01      	cmp	r3, #1
 800f5d0:	d109      	bne.n	800f5e6 <igmp_timer+0x22>
 800f5d2:	7923      	ldrb	r3, [r4, #4]
 800f5d4:	b13b      	cbz	r3, 800f5e6 <igmp_timer+0x22>
 800f5d6:	3b01      	subs	r3, #1
 800f5d8:	b2db      	uxtb	r3, r3
 800f5da:	7123      	strb	r3, [r4, #4]
 800f5dc:	b91b      	cbnz	r3, 800f5e6 <igmp_timer+0x22>
 800f5de:	6820      	ldr	r0, [r4, #0]
 800f5e0:	f7ff ff9a 	bl	800f518 <_send_report>
 800f5e4:	7166      	strb	r6, [r4, #5]
 800f5e6:	3501      	adds	r5, #1
 800f5e8:	2d24      	cmp	r5, #36	; 0x24
 800f5ea:	f104 0408 	add.w	r4, r4, #8
 800f5ee:	d1ed      	bne.n	800f5cc <igmp_timer+0x8>
 800f5f0:	bd70      	pop	{r4, r5, r6, pc}
 800f5f2:	bf00      	nop
 800f5f4:	200089a4 	andcs	r8, r0, r4, lsr #19

0800f5f8 <igmp_join>:
 800f5f8:	b538      	push	{r3, r4, r5, lr}
 800f5fa:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800f5fe:	2be0      	cmp	r3, #224	; 0xe0
 800f600:	d11b      	bne.n	800f63a <igmp_join+0x42>
 800f602:	4911      	ldr	r1, [pc, #68]	; (800f648 <igmp_join+0x50>)
 800f604:	680c      	ldr	r4, [r1, #0]
 800f606:	2c24      	cmp	r4, #36	; 0x24
 800f608:	d01a      	beq.n	800f640 <igmp_join+0x48>
 800f60a:	2300      	movs	r3, #0
 800f60c:	4a0f      	ldr	r2, [pc, #60]	; (800f64c <igmp_join+0x54>)
 800f60e:	429c      	cmp	r4, r3
 800f610:	dc0d      	bgt.n	800f62e <igmp_join+0x36>
 800f612:	f44f 7381 	mov.w	r3, #258	; 0x102
 800f616:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800f61a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800f61e:	8093      	strh	r3, [r2, #4]
 800f620:	1c63      	adds	r3, r4, #1
 800f622:	600b      	str	r3, [r1, #0]
 800f624:	f7ff ff78 	bl	800f518 <_send_report>
 800f628:	4623      	mov	r3, r4
 800f62a:	4618      	mov	r0, r3
 800f62c:	bd38      	pop	{r3, r4, r5, pc}
 800f62e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f632:	4285      	cmp	r5, r0
 800f634:	d0f9      	beq.n	800f62a <igmp_join+0x32>
 800f636:	3301      	adds	r3, #1
 800f638:	e7e9      	b.n	800f60e <igmp_join+0x16>
 800f63a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f63e:	e7f4      	b.n	800f62a <igmp_join+0x32>
 800f640:	f06f 0301 	mvn.w	r3, #1
 800f644:	e7f1      	b.n	800f62a <igmp_join+0x32>
 800f646:	bf00      	nop
 800f648:	20008ac8 	andcs	r8, r0, r8, asr #21
 800f64c:	200089a4 	andcs	r8, r0, r4, lsr #19

0800f650 <igmp_leave>:
 800f650:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f654:	2600      	movs	r6, #0
 800f656:	4f1c      	ldr	r7, [pc, #112]	; (800f6c8 <igmp_leave+0x78>)
 800f658:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800f65c:	4283      	cmp	r3, r0
 800f65e:	d007      	beq.n	800f670 <igmp_leave+0x20>
 800f660:	3601      	adds	r6, #1
 800f662:	2e24      	cmp	r6, #36	; 0x24
 800f664:	d1f8      	bne.n	800f658 <igmp_leave+0x8>
 800f666:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f66a:	b002      	add	sp, #8
 800f66c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f670:	2400      	movs	r4, #0
 800f672:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800f6cc <igmp_leave+0x7c>
 800f676:	4d16      	ldr	r5, [pc, #88]	; (800f6d0 <igmp_leave+0x80>)
 800f678:	f8b8 3000 	ldrh.w	r3, [r8]
 800f67c:	2118      	movs	r1, #24
 800f67e:	9001      	str	r0, [sp, #4]
 800f680:	4814      	ldr	r0, [pc, #80]	; (800f6d4 <igmp_leave+0x84>)
 800f682:	826b      	strh	r3, [r5, #18]
 800f684:	832c      	strh	r4, [r5, #24]
 800f686:	f000 f830 	bl	800f6ea <net_chksum>
 800f68a:	2204      	movs	r2, #4
 800f68c:	8328      	strh	r0, [r5, #24]
 800f68e:	eb0d 0102 	add.w	r1, sp, r2
 800f692:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800f696:	f7ff ff35 	bl	800f504 <memcpy.isra.0>
 800f69a:	2120      	movs	r1, #32
 800f69c:	f105 000e 	add.w	r0, r5, #14
 800f6a0:	852c      	strh	r4, [r5, #40]	; 0x28
 800f6a2:	f000 f822 	bl	800f6ea <net_chksum>
 800f6a6:	212e      	movs	r1, #46	; 0x2e
 800f6a8:	8528      	strh	r0, [r5, #40]	; 0x28
 800f6aa:	4628      	mov	r0, r5
 800f6ac:	f002 feec 	bl	8012488 <emac_eth_send>
 800f6b0:	f8b8 3000 	ldrh.w	r3, [r8]
 800f6b4:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800f6b8:	3301      	adds	r3, #1
 800f6ba:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800f6be:	4620      	mov	r0, r4
 800f6c0:	f8a8 3000 	strh.w	r3, [r8]
 800f6c4:	80bc      	strh	r4, [r7, #4]
 800f6c6:	e7d0      	b.n	800f66a <igmp_leave+0x1a>
 800f6c8:	200089a4 	andcs	r8, r0, r4, lsr #19
 800f6cc:	20008ac4 	andcs	r8, r0, r4, asr #21
 800f6d0:	20008acc 	andcs	r8, r0, ip, asr #21
 800f6d4:	20008b12 	andcs	r8, r0, r2, lsl fp

0800f6d8 <ip_set_ip>:
 800f6d8:	b510      	push	{r4, lr}
 800f6da:	4604      	mov	r4, r0
 800f6dc:	f7fe fb14 	bl	800dd08 <udp_set_ip>
 800f6e0:	4620      	mov	r0, r4
 800f6e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6e6:	f7ff bf57 	b.w	800f598 <igmp_set_ip>

0800f6ea <net_chksum>:
 800f6ea:	2300      	movs	r3, #0
 800f6ec:	f021 0201 	bic.w	r2, r1, #1
 800f6f0:	b530      	push	{r4, r5, lr}
 800f6f2:	1884      	adds	r4, r0, r2
 800f6f4:	42a0      	cmp	r0, r4
 800f6f6:	d10b      	bne.n	800f710 <net_chksum+0x26>
 800f6f8:	4291      	cmp	r1, r2
 800f6fa:	d004      	beq.n	800f706 <net_chksum+0x1c>
 800f6fc:	7802      	ldrb	r2, [r0, #0]
 800f6fe:	0212      	lsls	r2, r2, #8
 800f700:	ba52      	rev16	r2, r2
 800f702:	b292      	uxth	r2, r2
 800f704:	4413      	add	r3, r2
 800f706:	0c1a      	lsrs	r2, r3, #16
 800f708:	d106      	bne.n	800f718 <net_chksum+0x2e>
 800f70a:	43d8      	mvns	r0, r3
 800f70c:	b280      	uxth	r0, r0
 800f70e:	bd30      	pop	{r4, r5, pc}
 800f710:	f830 5b02 	ldrh.w	r5, [r0], #2
 800f714:	442b      	add	r3, r5
 800f716:	e7ed      	b.n	800f6f4 <net_chksum+0xa>
 800f718:	b29b      	uxth	r3, r3
 800f71a:	e7f3      	b.n	800f704 <net_chksum+0x1a>

0800f71c <net::link_register_read()>:
 800f71c:	b507      	push	{r0, r1, r2, lr}
 800f71e:	2201      	movs	r2, #1
 800f720:	f10d 0306 	add.w	r3, sp, #6
 800f724:	4611      	mov	r1, r2
 800f726:	2000      	movs	r0, #0
 800f728:	f002 f806 	bl	8011738 <enet_phy_write_read>
 800f72c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f730:	f080 0004 	eor.w	r0, r0, #4
 800f734:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f738:	b003      	add	sp, #12
 800f73a:	f85d fb04 	ldr.w	pc, [sp], #4

0800f73e <memcpy.isra.0>:
 800f73e:	3801      	subs	r0, #1
 800f740:	440a      	add	r2, r1
 800f742:	4291      	cmp	r1, r2
 800f744:	d100      	bne.n	800f748 <memcpy.isra.0+0xa>
 800f746:	4770      	bx	lr
 800f748:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f74c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f750:	e7f7      	b.n	800f742 <memcpy.isra.0+0x4>
	...

0800f754 <ConfigStore::GetStoreOffset(configstore::Store)>:
 800f754:	2300      	movs	r3, #0
 800f756:	2020      	movs	r0, #32
 800f758:	b510      	push	{r4, lr}
 800f75a:	4a04      	ldr	r2, [pc, #16]	; (800f76c <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 800f75c:	428b      	cmp	r3, r1
 800f75e:	d100      	bne.n	800f762 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 800f760:	bd10      	pop	{r4, pc}
 800f762:	f852 4b04 	ldr.w	r4, [r2], #4
 800f766:	3301      	adds	r3, #1
 800f768:	4420      	add	r0, r4
 800f76a:	e7f7      	b.n	800f75c <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 800f76c:	080153f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, ip, lr}

0800f770 <ConfigStore::Init()>:
 800f770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f774:	b085      	sub	sp, #20
 800f776:	4607      	mov	r7, r0
 800f778:	f000 fab0 	bl	800fcdc <StoreDevice::GetSectorSize() const>
 800f77c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800f780:	4605      	mov	r5, r0
 800f782:	d004      	beq.n	800f78e <ConfigStore::Init()+0x1e>
 800f784:	2500      	movs	r5, #0
 800f786:	4628      	mov	r0, r5
 800f788:	b005      	add	sp, #20
 800f78a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f78e:	4638      	mov	r0, r7
 800f790:	f000 faa2 	bl	800fcd8 <StoreDevice::GetSize() const>
 800f794:	4b3a      	ldr	r3, [pc, #232]	; (800f880 <ConfigStore::Init()+0x110>)
 800f796:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800f79a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800f79e:	6019      	str	r1, [r3, #0]
 800f7a0:	2e00      	cmp	r6, #0
 800f7a2:	d1ef      	bne.n	800f784 <ConfigStore::Init()+0x14>
 800f7a4:	4c37      	ldr	r4, [pc, #220]	; (800f884 <ConfigStore::Init()+0x114>)
 800f7a6:	ab03      	add	r3, sp, #12
 800f7a8:	462a      	mov	r2, r5
 800f7aa:	9300      	str	r3, [sp, #0]
 800f7ac:	4638      	mov	r0, r7
 800f7ae:	4623      	mov	r3, r4
 800f7b0:	f000 fa96 	bl	800fce0 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 800f7b4:	7823      	ldrb	r3, [r4, #0]
 800f7b6:	2b41      	cmp	r3, #65	; 0x41
 800f7b8:	bf1c      	itt	ne
 800f7ba:	2341      	movne	r3, #65	; 0x41
 800f7bc:	7023      	strbne	r3, [r4, #0]
 800f7be:	7863      	ldrb	r3, [r4, #1]
 800f7c0:	bf14      	ite	ne
 800f7c2:	4635      	movne	r5, r6
 800f7c4:	2501      	moveq	r5, #1
 800f7c6:	2b76      	cmp	r3, #118	; 0x76
 800f7c8:	bf1c      	itt	ne
 800f7ca:	2376      	movne	r3, #118	; 0x76
 800f7cc:	7063      	strbne	r3, [r4, #1]
 800f7ce:	78a3      	ldrb	r3, [r4, #2]
 800f7d0:	bf18      	it	ne
 800f7d2:	2500      	movne	r5, #0
 800f7d4:	2b56      	cmp	r3, #86	; 0x56
 800f7d6:	bf1c      	itt	ne
 800f7d8:	2356      	movne	r3, #86	; 0x56
 800f7da:	70a3      	strbne	r3, [r4, #2]
 800f7dc:	78e3      	ldrb	r3, [r4, #3]
 800f7de:	bf18      	it	ne
 800f7e0:	2500      	movne	r5, #0
 800f7e2:	2b10      	cmp	r3, #16
 800f7e4:	d01f      	beq.n	800f826 <ConfigStore::Init()+0xb6>
 800f7e6:	2310      	movs	r3, #16
 800f7e8:	70e3      	strb	r3, [r4, #3]
 800f7ea:	2201      	movs	r2, #1
 800f7ec:	2500      	movs	r5, #0
 800f7ee:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f7f2:	4b25      	ldr	r3, [pc, #148]	; (800f888 <ConfigStore::Init()+0x118>)
 800f7f4:	f8df 8094 	ldr.w	r8, [pc, #148]	; 800f88c <ConfigStore::Init()+0x11c>
 800f7f8:	701a      	strb	r2, [r3, #0]
 800f7fa:	4631      	mov	r1, r6
 800f7fc:	4638      	mov	r0, r7
 800f7fe:	f7ff ffa9 	bl	800f754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800f802:	1823      	adds	r3, r4, r0
 800f804:	5425      	strb	r5, [r4, r0]
 800f806:	705d      	strb	r5, [r3, #1]
 800f808:	709d      	strb	r5, [r3, #2]
 800f80a:	70dd      	strb	r5, [r3, #3]
 800f80c:	f858 3b04 	ldr.w	r3, [r8], #4
 800f810:	1d02      	adds	r2, r0, #4
 800f812:	4403      	add	r3, r0
 800f814:	429a      	cmp	r2, r3
 800f816:	d32f      	bcc.n	800f878 <ConfigStore::Init()+0x108>
 800f818:	3601      	adds	r6, #1
 800f81a:	2e1c      	cmp	r6, #28
 800f81c:	d1ed      	bne.n	800f7fa <ConfigStore::Init()+0x8a>
 800f81e:	2501      	movs	r5, #1
 800f820:	4b1b      	ldr	r3, [pc, #108]	; (800f890 <ConfigStore::Init()+0x120>)
 800f822:	601d      	str	r5, [r3, #0]
 800f824:	e7af      	b.n	800f786 <ConfigStore::Init()+0x16>
 800f826:	2d00      	cmp	r5, #0
 800f828:	d0df      	beq.n	800f7ea <ConfigStore::Init()+0x7a>
 800f82a:	f04f 0900 	mov.w	r9, #0
 800f82e:	46c8      	mov	r8, r9
 800f830:	4631      	mov	r1, r6
 800f832:	4638      	mov	r0, r7
 800f834:	f7ff ff8e 	bl	800f754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800f838:	5c23      	ldrb	r3, [r4, r0]
 800f83a:	2bff      	cmp	r3, #255	; 0xff
 800f83c:	d112      	bne.n	800f864 <ConfigStore::Init()+0xf4>
 800f83e:	1823      	adds	r3, r4, r0
 800f840:	785a      	ldrb	r2, [r3, #1]
 800f842:	2aff      	cmp	r2, #255	; 0xff
 800f844:	d10e      	bne.n	800f864 <ConfigStore::Init()+0xf4>
 800f846:	789a      	ldrb	r2, [r3, #2]
 800f848:	2aff      	cmp	r2, #255	; 0xff
 800f84a:	d10b      	bne.n	800f864 <ConfigStore::Init()+0xf4>
 800f84c:	78da      	ldrb	r2, [r3, #3]
 800f84e:	2aff      	cmp	r2, #255	; 0xff
 800f850:	d108      	bne.n	800f864 <ConfigStore::Init()+0xf4>
 800f852:	46a9      	mov	r9, r5
 800f854:	f804 8000 	strb.w	r8, [r4, r0]
 800f858:	f883 8001 	strb.w	r8, [r3, #1]
 800f85c:	f883 8002 	strb.w	r8, [r3, #2]
 800f860:	f883 8003 	strb.w	r8, [r3, #3]
 800f864:	3601      	adds	r6, #1
 800f866:	2e1c      	cmp	r6, #28
 800f868:	d1e2      	bne.n	800f830 <ConfigStore::Init()+0xc0>
 800f86a:	f1b9 0f00 	cmp.w	r9, #0
 800f86e:	d08a      	beq.n	800f786 <ConfigStore::Init()+0x16>
 800f870:	2201      	movs	r2, #1
 800f872:	4b07      	ldr	r3, [pc, #28]	; (800f890 <ConfigStore::Init()+0x120>)
 800f874:	601a      	str	r2, [r3, #0]
 800f876:	e786      	b.n	800f786 <ConfigStore::Init()+0x16>
 800f878:	f804 9002 	strb.w	r9, [r4, r2]
 800f87c:	3201      	adds	r2, #1
 800f87e:	e7c9      	b.n	800f814 <ConfigStore::Init()+0xa4>
 800f880:	20009b38 	andcs	r9, r0, r8, lsr fp
 800f884:	20008b38 	andcs	r8, r0, r8, lsr fp
 800f888:	20009b4c 	andcs	r9, r0, ip, asr #22
 800f88c:	080153f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, ip, lr}
 800f890:	20009b44 	andcs	r9, r0, r4, asr #22

0800f894 <ConfigStore::ConfigStore()>:
 800f894:	b538      	push	{r3, r4, r5, lr}
 800f896:	4604      	mov	r4, r0
 800f898:	f000 fa16 	bl	800fcc8 <StoreDevice::StoreDevice()>
 800f89c:	4b0b      	ldr	r3, [pc, #44]	; (800f8cc <ConfigStore::ConfigStore()+0x38>)
 800f89e:	4d0c      	ldr	r5, [pc, #48]	; (800f8d0 <ConfigStore::ConfigStore()+0x3c>)
 800f8a0:	601c      	str	r4, [r3, #0]
 800f8a2:	7863      	ldrb	r3, [r4, #1]
 800f8a4:	b11b      	cbz	r3, 800f8ae <ConfigStore::ConfigStore()+0x1a>
 800f8a6:	4620      	mov	r0, r4
 800f8a8:	f7ff ff62 	bl	800f770 <ConfigStore::Init()>
 800f8ac:	7028      	strb	r0, [r5, #0]
 800f8ae:	782b      	ldrb	r3, [r5, #0]
 800f8b0:	b153      	cbz	r3, 800f8c8 <ConfigStore::ConfigStore()+0x34>
 800f8b2:	2320      	movs	r3, #32
 800f8b4:	2200      	movs	r2, #0
 800f8b6:	4907      	ldr	r1, [pc, #28]	; (800f8d4 <ConfigStore::ConfigStore()+0x40>)
 800f8b8:	f851 0b04 	ldr.w	r0, [r1], #4
 800f8bc:	3201      	adds	r2, #1
 800f8be:	2a1c      	cmp	r2, #28
 800f8c0:	4403      	add	r3, r0
 800f8c2:	d1f9      	bne.n	800f8b8 <ConfigStore::ConfigStore()+0x24>
 800f8c4:	4a04      	ldr	r2, [pc, #16]	; (800f8d8 <ConfigStore::ConfigStore()+0x44>)
 800f8c6:	6013      	str	r3, [r2, #0]
 800f8c8:	4620      	mov	r0, r4
 800f8ca:	bd38      	pop	{r3, r4, r5, pc}
 800f8cc:	20009b48 	andcs	r9, r0, r8, asr #22
 800f8d0:	20009b3c 	andcs	r9, r0, ip, lsr fp
 800f8d4:	080153f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, ip, lr}
 800f8d8:	20009b40 	andcs	r9, r0, r0, asr #22

0800f8dc <ConfigStore::ResetSetList(configstore::Store)>:
 800f8dc:	b508      	push	{r3, lr}
 800f8de:	f7ff ff39 	bl	800f754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800f8e2:	2300      	movs	r3, #0
 800f8e4:	4904      	ldr	r1, [pc, #16]	; (800f8f8 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 800f8e6:	1842      	adds	r2, r0, r1
 800f8e8:	540b      	strb	r3, [r1, r0]
 800f8ea:	7053      	strb	r3, [r2, #1]
 800f8ec:	7093      	strb	r3, [r2, #2]
 800f8ee:	70d3      	strb	r3, [r2, #3]
 800f8f0:	2201      	movs	r2, #1
 800f8f2:	4b02      	ldr	r3, [pc, #8]	; (800f8fc <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 800f8f4:	601a      	str	r2, [r3, #0]
 800f8f6:	bd08      	pop	{r3, pc}
 800f8f8:	20008b38 	andcs	r8, r0, r8, lsr fp
 800f8fc:	20009b44 	andcs	r9, r0, r4, asr #22

0800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800f900:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f904:	461c      	mov	r4, r3
 800f906:	4b19      	ldr	r3, [pc, #100]	; (800f96c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800f908:	4616      	mov	r6, r2
 800f90a:	781f      	ldrb	r7, [r3, #0]
 800f90c:	9d07      	ldr	r5, [sp, #28]
 800f90e:	b307      	cbz	r7, 800f952 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f910:	f7ff ff20 	bl	800f754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800f914:	f04f 0c00 	mov.w	ip, #0
 800f918:	4a15      	ldr	r2, [pc, #84]	; (800f970 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800f91a:	1831      	adds	r1, r6, r0
 800f91c:	1e63      	subs	r3, r4, #1
 800f91e:	9c06      	ldr	r4, [sp, #24]
 800f920:	4411      	add	r1, r2
 800f922:	440c      	add	r4, r1
 800f924:	42a1      	cmp	r1, r4
 800f926:	d116      	bne.n	800f956 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800f928:	f1bc 0f00 	cmp.w	ip, #0
 800f92c:	d011      	beq.n	800f952 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f92e:	4b11      	ldr	r3, [pc, #68]	; (800f974 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800f930:	6819      	ldr	r1, [r3, #0]
 800f932:	b109      	cbz	r1, 800f938 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800f934:	2906      	cmp	r1, #6
 800f936:	d101      	bne.n	800f93c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800f938:	2101      	movs	r1, #1
 800f93a:	6019      	str	r1, [r3, #0]
 800f93c:	4b0e      	ldr	r3, [pc, #56]	; (800f978 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800f93e:	6819      	ldr	r1, [r3, #0]
 800f940:	4b0e      	ldr	r3, [pc, #56]	; (800f97c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800f942:	6019      	str	r1, [r3, #0]
 800f944:	b12e      	cbz	r6, 800f952 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f946:	b125      	cbz	r5, 800f952 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f948:	9b08      	ldr	r3, [sp, #32]
 800f94a:	4418      	add	r0, r3
 800f94c:	5813      	ldr	r3, [r2, r0]
 800f94e:	432b      	orrs	r3, r5
 800f950:	5013      	str	r3, [r2, r0]
 800f952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f956:	f891 8000 	ldrb.w	r8, [r1]
 800f95a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800f95e:	3101      	adds	r1, #1
 800f960:	45f0      	cmp	r8, lr
 800f962:	bf1c      	itt	ne
 800f964:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800f968:	46bc      	movne	ip, r7
 800f96a:	e7db      	b.n	800f924 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800f96c:	20009b3c 	andcs	r9, r0, ip, lsr fp
 800f970:	20008b38 	andcs	r8, r0, r8, lsr fp
 800f974:	20009b44 	andcs	r9, r0, r4, asr #22
 800f978:	20009c84 	andcs	r9, r0, r4, lsl #25
 800f97c:	20008b34 	andcs	r8, r0, r4, lsr fp

0800f980 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 800f980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f984:	461d      	mov	r5, r3
 800f986:	4b15      	ldr	r3, [pc, #84]	; (800f9dc <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800f988:	b085      	sub	sp, #20
 800f98a:	781b      	ldrb	r3, [r3, #0]
 800f98c:	4607      	mov	r7, r0
 800f98e:	4614      	mov	r4, r2
 800f990:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800f994:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800f998:	b193      	cbz	r3, 800f9c0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800f99a:	f7ff fedb 	bl	800f754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800f99e:	4a10      	ldr	r2, [pc, #64]	; (800f9e0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800f9a0:	eb08 0600 	add.w	r6, r8, r0
 800f9a4:	18b3      	adds	r3, r6, r2
 800f9a6:	f1b9 0f00 	cmp.w	r9, #0
 800f9aa:	d013      	beq.n	800f9d4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800f9ac:	5990      	ldr	r0, [r2, r6]
 800f9ae:	b988      	cbnz	r0, 800f9d4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800f9b0:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800f9b4:	4623      	mov	r3, r4
 800f9b6:	4642      	mov	r2, r8
 800f9b8:	4638      	mov	r0, r7
 800f9ba:	9500      	str	r5, [sp, #0]
 800f9bc:	f7ff ffa0 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f9c0:	b005      	add	sp, #20
 800f9c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f9ca:	f804 2f01 	strb.w	r2, [r4, #1]!
 800f9ce:	429d      	cmp	r5, r3
 800f9d0:	d1f9      	bne.n	800f9c6 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800f9d2:	e7f5      	b.n	800f9c0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800f9d4:	3c01      	subs	r4, #1
 800f9d6:	441d      	add	r5, r3
 800f9d8:	e7f9      	b.n	800f9ce <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800f9da:	bf00      	nop
 800f9dc:	20009b3c 	andcs	r9, r0, ip, lsr fp
 800f9e0:	20008b38 	andcs	r8, r0, r8, lsr fp

0800f9e4 <ConfigStore::Flash()>:
 800f9e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f9e6:	4c24      	ldr	r4, [pc, #144]	; (800fa78 <ConfigStore::Flash()+0x94>)
 800f9e8:	6823      	ldr	r3, [r4, #0]
 800f9ea:	2b00      	cmp	r3, #0
 800f9ec:	d041      	beq.n	800fa72 <ConfigStore::Flash()+0x8e>
 800f9ee:	3b01      	subs	r3, #1
 800f9f0:	2b05      	cmp	r3, #5
 800f9f2:	d82f      	bhi.n	800fa54 <ConfigStore::Flash()+0x70>
 800f9f4:	e8df f003 	tbb	[pc, r3]
 800f9f8:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 800f9fc:	4b1f2e23 	blmi	87db290 <__exidx_end+0x7c5874>
 800fa00:	681a      	ldr	r2, [r3, #0]
 800fa02:	4b1f      	ldr	r3, [pc, #124]	; (800fa80 <ConfigStore::Flash()+0x9c>)
 800fa04:	601a      	str	r2, [r3, #0]
 800fa06:	2302      	movs	r3, #2
 800fa08:	6023      	str	r3, [r4, #0]
 800fa0a:	2001      	movs	r0, #1
 800fa0c:	e02f      	b.n	800fa6e <ConfigStore::Flash()+0x8a>
 800fa0e:	4b1b      	ldr	r3, [pc, #108]	; (800fa7c <ConfigStore::Flash()+0x98>)
 800fa10:	4a1b      	ldr	r2, [pc, #108]	; (800fa80 <ConfigStore::Flash()+0x9c>)
 800fa12:	681b      	ldr	r3, [r3, #0]
 800fa14:	6812      	ldr	r2, [r2, #0]
 800fa16:	1a9b      	subs	r3, r3, r2
 800fa18:	2b63      	cmp	r3, #99	; 0x63
 800fa1a:	d9f6      	bls.n	800fa0a <ConfigStore::Flash()+0x26>
 800fa1c:	2303      	movs	r3, #3
 800fa1e:	e7f3      	b.n	800fa08 <ConfigStore::Flash()+0x24>
 800fa20:	4918      	ldr	r1, [pc, #96]	; (800fa84 <ConfigStore::Flash()+0xa0>)
 800fa22:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800fa26:	6809      	ldr	r1, [r1, #0]
 800fa28:	ab03      	add	r3, sp, #12
 800fa2a:	f000 f963 	bl	800fcf4 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 800fa2e:	2800      	cmp	r0, #0
 800fa30:	d0eb      	beq.n	800fa0a <ConfigStore::Flash()+0x26>
 800fa32:	4b12      	ldr	r3, [pc, #72]	; (800fa7c <ConfigStore::Flash()+0x98>)
 800fa34:	681a      	ldr	r2, [r3, #0]
 800fa36:	4b12      	ldr	r3, [pc, #72]	; (800fa80 <ConfigStore::Flash()+0x9c>)
 800fa38:	601a      	str	r2, [r3, #0]
 800fa3a:	2305      	movs	r3, #5
 800fa3c:	e7e4      	b.n	800fa08 <ConfigStore::Flash()+0x24>
 800fa3e:	4b0f      	ldr	r3, [pc, #60]	; (800fa7c <ConfigStore::Flash()+0x98>)
 800fa40:	4a0f      	ldr	r2, [pc, #60]	; (800fa80 <ConfigStore::Flash()+0x9c>)
 800fa42:	681b      	ldr	r3, [r3, #0]
 800fa44:	6812      	ldr	r2, [r2, #0]
 800fa46:	1a9b      	subs	r3, r3, r2
 800fa48:	2b63      	cmp	r3, #99	; 0x63
 800fa4a:	d9de      	bls.n	800fa0a <ConfigStore::Flash()+0x26>
 800fa4c:	2304      	movs	r3, #4
 800fa4e:	e7db      	b.n	800fa08 <ConfigStore::Flash()+0x24>
 800fa50:	2306      	movs	r3, #6
 800fa52:	e7d9      	b.n	800fa08 <ConfigStore::Flash()+0x24>
 800fa54:	ab03      	add	r3, sp, #12
 800fa56:	4a0c      	ldr	r2, [pc, #48]	; (800fa88 <ConfigStore::Flash()+0xa4>)
 800fa58:	490a      	ldr	r1, [pc, #40]	; (800fa84 <ConfigStore::Flash()+0xa0>)
 800fa5a:	9300      	str	r3, [sp, #0]
 800fa5c:	6812      	ldr	r2, [r2, #0]
 800fa5e:	4b0b      	ldr	r3, [pc, #44]	; (800fa8c <ConfigStore::Flash()+0xa8>)
 800fa60:	6809      	ldr	r1, [r1, #0]
 800fa62:	f000 f950 	bl	800fd06 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 800fa66:	2800      	cmp	r0, #0
 800fa68:	d0cf      	beq.n	800fa0a <ConfigStore::Flash()+0x26>
 800fa6a:	2000      	movs	r0, #0
 800fa6c:	6020      	str	r0, [r4, #0]
 800fa6e:	b004      	add	sp, #16
 800fa70:	bd10      	pop	{r4, pc}
 800fa72:	4618      	mov	r0, r3
 800fa74:	e7fb      	b.n	800fa6e <ConfigStore::Flash()+0x8a>
 800fa76:	bf00      	nop
 800fa78:	20009b44 	andcs	r9, r0, r4, asr #22
 800fa7c:	20009c84 	andcs	r9, r0, r4, lsl #25
 800fa80:	20008b34 	andcs	r8, r0, r4, lsr fp
 800fa84:	20009b38 	andcs	r9, r0, r8, lsr fp
 800fa88:	20009b40 	andcs	r9, r0, r0, asr #22
 800fa8c:	20008b38 	andcs	r8, r0, r8, lsr fp

0800fa90 <StoreNetwork::~StoreNetwork()>:
 800fa90:	4770      	bx	lr

0800fa92 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fa92:	3804      	subs	r0, #4
 800fa94:	4770      	bx	lr
	...

0800fa98 <StoreNetwork::Update(networkparams::Params const*)>:
 800fa98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fa9a:	2200      	movs	r2, #0
 800fa9c:	460b      	mov	r3, r1
 800fa9e:	215e      	movs	r1, #94	; 0x5e
 800faa0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800faa4:	4804      	ldr	r0, [pc, #16]	; (800fab8 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800faa6:	9100      	str	r1, [sp, #0]
 800faa8:	6800      	ldr	r0, [r0, #0]
 800faaa:	4611      	mov	r1, r2
 800faac:	f7ff ff28 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fab0:	b005      	add	sp, #20
 800fab2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fab6:	bf00      	nop
 800fab8:	20009b48 	andcs	r9, r0, r8, asr #22

0800fabc <StoreNetwork::SaveDhcp(bool)>:
 800fabc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fabe:	2301      	movs	r3, #1
 800fac0:	f88d 1017 	strb.w	r1, [sp, #23]
 800fac4:	2100      	movs	r1, #0
 800fac6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800faca:	4805      	ldr	r0, [pc, #20]	; (800fae0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800facc:	9300      	str	r3, [sp, #0]
 800face:	2214      	movs	r2, #20
 800fad0:	6800      	ldr	r0, [r0, #0]
 800fad2:	f10d 0317 	add.w	r3, sp, #23
 800fad6:	f7ff ff13 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fada:	b007      	add	sp, #28
 800fadc:	f85d fb04 	ldr.w	pc, [sp], #4
 800fae0:	20009b48 	andcs	r9, r0, r8, asr #22

0800fae4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800fae4:	f1a0 0004 	sub.w	r0, r0, #4
 800fae8:	e7e8      	b.n	800fabc <StoreNetwork::SaveDhcp(bool)>
 800faea:	bf00      	nop

0800faec <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800faec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800faee:	2308      	movs	r3, #8
 800faf0:	9105      	str	r1, [sp, #20]
 800faf2:	2100      	movs	r1, #0
 800faf4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800faf8:	2304      	movs	r3, #4
 800fafa:	4805      	ldr	r0, [pc, #20]	; (800fb10 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800fafc:	9300      	str	r3, [sp, #0]
 800fafe:	220c      	movs	r2, #12
 800fb00:	6800      	ldr	r0, [r0, #0]
 800fb02:	ab05      	add	r3, sp, #20
 800fb04:	f7ff fefc 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fb08:	b007      	add	sp, #28
 800fb0a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb0e:	bf00      	nop
 800fb10:	20009b48 	andcs	r9, r0, r8, asr #22

0800fb14 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800fb14:	f1a0 0004 	sub.w	r0, r0, #4
 800fb18:	e7e8      	b.n	800faec <StoreNetwork::SaveGatewayIp(unsigned int)>
 800fb1a:	bf00      	nop

0800fb1c <StoreNetwork::SaveNetMask(unsigned int)>:
 800fb1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fb1e:	2304      	movs	r3, #4
 800fb20:	9105      	str	r1, [sp, #20]
 800fb22:	2100      	movs	r1, #0
 800fb24:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fb28:	4804      	ldr	r0, [pc, #16]	; (800fb3c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800fb2a:	9300      	str	r3, [sp, #0]
 800fb2c:	2208      	movs	r2, #8
 800fb2e:	6800      	ldr	r0, [r0, #0]
 800fb30:	ab05      	add	r3, sp, #20
 800fb32:	f7ff fee5 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fb36:	b007      	add	sp, #28
 800fb38:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb3c:	20009b48 	andcs	r9, r0, r8, asr #22

0800fb40 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800fb40:	f1a0 0004 	sub.w	r0, r0, #4
 800fb44:	e7ea      	b.n	800fb1c <StoreNetwork::SaveNetMask(unsigned int)>
 800fb46:	bf00      	nop

0800fb48 <StoreNetwork::SaveIp(unsigned int)>:
 800fb48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fb4a:	2302      	movs	r3, #2
 800fb4c:	9105      	str	r1, [sp, #20]
 800fb4e:	2100      	movs	r1, #0
 800fb50:	2204      	movs	r2, #4
 800fb52:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fb56:	4804      	ldr	r0, [pc, #16]	; (800fb68 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800fb58:	9200      	str	r2, [sp, #0]
 800fb5a:	6800      	ldr	r0, [r0, #0]
 800fb5c:	ab05      	add	r3, sp, #20
 800fb5e:	f7ff fecf 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fb62:	b007      	add	sp, #28
 800fb64:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb68:	20009b48 	andcs	r9, r0, r8, asr #22

0800fb6c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800fb6c:	f1a0 0004 	sub.w	r0, r0, #4
 800fb70:	e7ea      	b.n	800fb48 <StoreNetwork::SaveIp(unsigned int)>
 800fb72:	bf00      	nop

0800fb74 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fb74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fb76:	460b      	mov	r3, r1
 800fb78:	2020      	movs	r0, #32
 800fb7a:	2100      	movs	r1, #0
 800fb7c:	2a40      	cmp	r2, #64	; 0x40
 800fb7e:	bf28      	it	cs
 800fb80:	2240      	movcs	r2, #64	; 0x40
 800fb82:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800fb86:	4804      	ldr	r0, [pc, #16]	; (800fb98 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800fb88:	9200      	str	r2, [sp, #0]
 800fb8a:	6800      	ldr	r0, [r0, #0]
 800fb8c:	2215      	movs	r2, #21
 800fb8e:	f7ff feb7 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fb92:	b005      	add	sp, #20
 800fb94:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb98:	20009b48 	andcs	r9, r0, r8, asr #22

0800fb9c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fb9c:	f1a0 0004 	sub.w	r0, r0, #4
 800fba0:	e7e8      	b.n	800fb74 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800fba2:	bf00      	nop

0800fba4 <StoreNetwork::~StoreNetwork()>:
 800fba4:	b510      	push	{r4, lr}
 800fba6:	4604      	mov	r4, r0
 800fba8:	f001 f9ec 	bl	8010f84 <operator delete(void*)>
 800fbac:	4620      	mov	r0, r4
 800fbae:	bd10      	pop	{r4, pc}

0800fbb0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fbb0:	f1a0 0004 	sub.w	r0, r0, #4
 800fbb4:	e7f6      	b.n	800fba4 <StoreNetwork::~StoreNetwork()>
	...

0800fbb8 <StoreNetwork::Copy(networkparams::Params*)>:
 800fbb8:	b507      	push	{r0, r1, r2, lr}
 800fbba:	2301      	movs	r3, #1
 800fbbc:	460a      	mov	r2, r1
 800fbbe:	2100      	movs	r1, #0
 800fbc0:	e9cd 1300 	strd	r1, r3, [sp]
 800fbc4:	4803      	ldr	r0, [pc, #12]	; (800fbd4 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800fbc6:	235e      	movs	r3, #94	; 0x5e
 800fbc8:	6800      	ldr	r0, [r0, #0]
 800fbca:	f7ff fed9 	bl	800f980 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800fbce:	b003      	add	sp, #12
 800fbd0:	f85d fb04 	ldr.w	pc, [sp], #4
 800fbd4:	20009b48 	andcs	r9, r0, r8, asr #22

0800fbd8 <StoreNetwork::StoreNetwork()>:
 800fbd8:	4a03      	ldr	r2, [pc, #12]	; (800fbe8 <StoreNetwork::StoreNetwork()+0x10>)
 800fbda:	6002      	str	r2, [r0, #0]
 800fbdc:	322c      	adds	r2, #44	; 0x2c
 800fbde:	6042      	str	r2, [r0, #4]
 800fbe0:	4a02      	ldr	r2, [pc, #8]	; (800fbec <StoreNetwork::StoreNetwork()+0x14>)
 800fbe2:	6010      	str	r0, [r2, #0]
 800fbe4:	4770      	bx	lr
 800fbe6:	bf00      	nop
 800fbe8:	0801546c 	stmdaeq	r1, {r2, r3, r5, r6, sl, ip, lr}
 800fbec:	20009b50 	andcs	r9, r0, r0, asr fp

0800fbf0 <StoreOscServer::~StoreOscServer()>:
 800fbf0:	4770      	bx	lr
	...

0800fbf4 <StoreOscServer::Copy(osc::server::Params*)>:
 800fbf4:	b507      	push	{r0, r1, r2, lr}
 800fbf6:	2300      	movs	r3, #0
 800fbf8:	460a      	mov	r2, r1
 800fbfa:	2101      	movs	r1, #1
 800fbfc:	e9cd 3100 	strd	r3, r1, [sp]
 800fc00:	4804      	ldr	r0, [pc, #16]	; (800fc14 <StoreOscServer::Copy(osc::server::Params*)+0x20>)
 800fc02:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800fc06:	2108      	movs	r1, #8
 800fc08:	6800      	ldr	r0, [r0, #0]
 800fc0a:	f7ff feb9 	bl	800f980 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800fc0e:	b003      	add	sp, #12
 800fc10:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc14:	20009b48 	andcs	r9, r0, r8, asr #22

0800fc18 <StoreOscServer::Update(osc::server::Params const*)>:
 800fc18:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fc1a:	2200      	movs	r2, #0
 800fc1c:	460b      	mov	r3, r1
 800fc1e:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800fc22:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fc26:	4804      	ldr	r0, [pc, #16]	; (800fc38 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800fc28:	9100      	str	r1, [sp, #0]
 800fc2a:	6800      	ldr	r0, [r0, #0]
 800fc2c:	2108      	movs	r1, #8
 800fc2e:	f7ff fe67 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc32:	b005      	add	sp, #20
 800fc34:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc38:	20009b48 	andcs	r9, r0, r8, asr #22

0800fc3c <StoreOscServer::~StoreOscServer()>:
 800fc3c:	b510      	push	{r4, lr}
 800fc3e:	4604      	mov	r4, r0
 800fc40:	f001 f9a0 	bl	8010f84 <operator delete(void*)>
 800fc44:	4620      	mov	r0, r4
 800fc46:	bd10      	pop	{r4, pc}

0800fc48 <StoreOscServer::StoreOscServer()>:
 800fc48:	4a02      	ldr	r2, [pc, #8]	; (800fc54 <StoreOscServer::StoreOscServer()+0xc>)
 800fc4a:	6002      	str	r2, [r0, #0]
 800fc4c:	4a02      	ldr	r2, [pc, #8]	; (800fc58 <StoreOscServer::StoreOscServer()+0x10>)
 800fc4e:	6010      	str	r0, [r2, #0]
 800fc50:	4770      	bx	lr
 800fc52:	bf00      	nop
 800fc54:	080154bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, ip, lr}
 800fc58:	20009b54 	andcs	r9, r0, r4, asr fp

0800fc5c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800fc5c:	4770      	bx	lr
	...

0800fc60 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800fc60:	b507      	push	{r0, r1, r2, lr}
 800fc62:	2300      	movs	r3, #0
 800fc64:	460a      	mov	r2, r1
 800fc66:	2101      	movs	r1, #1
 800fc68:	e9cd 3100 	strd	r3, r1, [sp]
 800fc6c:	4804      	ldr	r0, [pc, #16]	; (800fc80 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800fc6e:	2320      	movs	r3, #32
 800fc70:	210c      	movs	r1, #12
 800fc72:	6800      	ldr	r0, [r0, #0]
 800fc74:	f7ff fe84 	bl	800f980 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800fc78:	b003      	add	sp, #12
 800fc7a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc7e:	bf00      	nop
 800fc80:	20009b48 	andcs	r9, r0, r8, asr #22

0800fc84 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800fc84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fc86:	2200      	movs	r2, #0
 800fc88:	460b      	mov	r3, r1
 800fc8a:	2120      	movs	r1, #32
 800fc8c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fc90:	4804      	ldr	r0, [pc, #16]	; (800fca4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800fc92:	9100      	str	r1, [sp, #0]
 800fc94:	6800      	ldr	r0, [r0, #0]
 800fc96:	210c      	movs	r1, #12
 800fc98:	f7ff fe32 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc9c:	b005      	add	sp, #20
 800fc9e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fca2:	bf00      	nop
 800fca4:	20009b48 	andcs	r9, r0, r8, asr #22

0800fca8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800fca8:	b510      	push	{r4, lr}
 800fcaa:	4604      	mov	r4, r0
 800fcac:	f001 f96a 	bl	8010f84 <operator delete(void*)>
 800fcb0:	4620      	mov	r0, r4
 800fcb2:	bd10      	pop	{r4, pc}

0800fcb4 <StoreRemoteConfig::StoreRemoteConfig()>:
 800fcb4:	4a02      	ldr	r2, [pc, #8]	; (800fcc0 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800fcb6:	6002      	str	r2, [r0, #0]
 800fcb8:	4a02      	ldr	r2, [pc, #8]	; (800fcc4 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800fcba:	6010      	str	r0, [r2, #0]
 800fcbc:	4770      	bx	lr
 800fcbe:	bf00      	nop
 800fcc0:	080154d4 	stmdaeq	r1, {r2, r4, r6, r7, sl, ip, lr}
 800fcc4:	20009b58 	andcs	r9, r0, r8, asr fp

0800fcc8 <StoreDevice::StoreDevice()>:
 800fcc8:	b510      	push	{r4, lr}
 800fcca:	4604      	mov	r4, r0
 800fccc:	f000 f902 	bl	800fed4 <FlashCode::FlashCode()>
 800fcd0:	7823      	ldrb	r3, [r4, #0]
 800fcd2:	4620      	mov	r0, r4
 800fcd4:	7063      	strb	r3, [r4, #1]
 800fcd6:	bd10      	pop	{r4, pc}

0800fcd8 <StoreDevice::GetSize() const>:
 800fcd8:	f000 b916 	b.w	800ff08 <FlashCode::GetSize() const>

0800fcdc <StoreDevice::GetSectorSize() const>:
 800fcdc:	f000 b91c 	b.w	800ff18 <FlashCode::GetSectorSize() const>

0800fce0 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 800fce0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fce2:	ac03      	add	r4, sp, #12
 800fce4:	9400      	str	r4, [sp, #0]
 800fce6:	f000 f91a 	bl	800ff1e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 800fcea:	9b06      	ldr	r3, [sp, #24]
 800fcec:	9a03      	ldr	r2, [sp, #12]
 800fcee:	601a      	str	r2, [r3, #0]
 800fcf0:	b004      	add	sp, #16
 800fcf2:	bd10      	pop	{r4, pc}

0800fcf4 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 800fcf4:	b513      	push	{r0, r1, r4, lr}
 800fcf6:	461c      	mov	r4, r3
 800fcf8:	ab01      	add	r3, sp, #4
 800fcfa:	f000 f91f 	bl	800ff3c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 800fcfe:	9b01      	ldr	r3, [sp, #4]
 800fd00:	6023      	str	r3, [r4, #0]
 800fd02:	b002      	add	sp, #8
 800fd04:	bd10      	pop	{r4, pc}

0800fd06 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 800fd06:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd08:	ac03      	add	r4, sp, #12
 800fd0a:	9400      	str	r4, [sp, #0]
 800fd0c:	f000 f9b6 	bl	801007c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 800fd10:	9b06      	ldr	r3, [sp, #24]
 800fd12:	9a03      	ldr	r2, [sp, #12]
 800fd14:	601a      	str	r2, [r3, #0]
 800fd16:	b004      	add	sp, #16
 800fd18:	bd10      	pop	{r4, pc}

0800fd1a <StorePixelDmx::~StorePixelDmx()>:
 800fd1a:	4770      	bx	lr

0800fd1c <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800fd1c:	3804      	subs	r0, #4
 800fd1e:	4770      	bx	lr

0800fd20 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 800fd20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd22:	2200      	movs	r2, #0
 800fd24:	460b      	mov	r3, r1
 800fd26:	2118      	movs	r1, #24
 800fd28:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fd2c:	4804      	ldr	r0, [pc, #16]	; (800fd40 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 800fd2e:	9100      	str	r1, [sp, #0]
 800fd30:	6800      	ldr	r0, [r0, #0]
 800fd32:	2103      	movs	r1, #3
 800fd34:	f7ff fde4 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd38:	b005      	add	sp, #20
 800fd3a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd3e:	bf00      	nop
 800fd40:	20009b48 	andcs	r9, r0, r8, asr #22

0800fd44 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800fd44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd46:	2304      	movs	r3, #4
 800fd48:	2200      	movs	r2, #0
 800fd4a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fd4e:	2302      	movs	r3, #2
 800fd50:	4806      	ldr	r0, [pc, #24]	; (800fd6c <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800fd52:	9300      	str	r3, [sp, #0]
 800fd54:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fd58:	2207      	movs	r2, #7
 800fd5a:	2103      	movs	r1, #3
 800fd5c:	6800      	ldr	r0, [r0, #0]
 800fd5e:	f10d 0316 	add.w	r3, sp, #22
 800fd62:	f7ff fdcd 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd66:	b007      	add	sp, #28
 800fd68:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd6c:	20009b48 	andcs	r9, r0, r8, asr #22

0800fd70 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800fd70:	f1a0 0004 	sub.w	r0, r0, #4
 800fd74:	e7e6      	b.n	800fd44 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 800fd76:	bf00      	nop

0800fd78 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 800fd78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd7a:	2308      	movs	r3, #8
 800fd7c:	2200      	movs	r2, #0
 800fd7e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fd82:	2301      	movs	r3, #1
 800fd84:	4806      	ldr	r0, [pc, #24]	; (800fda0 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 800fd86:	9300      	str	r3, [sp, #0]
 800fd88:	f88d 1017 	strb.w	r1, [sp, #23]
 800fd8c:	2210      	movs	r2, #16
 800fd8e:	2103      	movs	r1, #3
 800fd90:	6800      	ldr	r0, [r0, #0]
 800fd92:	f10d 0317 	add.w	r3, sp, #23
 800fd96:	f7ff fdb3 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd9a:	b007      	add	sp, #28
 800fd9c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fda0:	20009b48 	andcs	r9, r0, r8, asr #22

0800fda4 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 800fda4:	f1a0 0004 	sub.w	r0, r0, #4
 800fda8:	e7e6      	b.n	800fd78 <StorePixelDmx::SaveTestPattern(unsigned char)>
 800fdaa:	bf00      	nop

0800fdac <StorePixelDmx::SaveMap(unsigned char)>:
 800fdac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fdae:	f44f 7300 	mov.w	r3, #512	; 0x200
 800fdb2:	2200      	movs	r2, #0
 800fdb4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fdb8:	2301      	movs	r3, #1
 800fdba:	4807      	ldr	r0, [pc, #28]	; (800fdd8 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 800fdbc:	9300      	str	r3, [sp, #0]
 800fdbe:	f88d 1017 	strb.w	r1, [sp, #23]
 800fdc2:	2213      	movs	r2, #19
 800fdc4:	2103      	movs	r1, #3
 800fdc6:	6800      	ldr	r0, [r0, #0]
 800fdc8:	f10d 0317 	add.w	r3, sp, #23
 800fdcc:	f7ff fd98 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fdd0:	b007      	add	sp, #28
 800fdd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fdd6:	bf00      	nop
 800fdd8:	20009b48 	andcs	r9, r0, r8, asr #22

0800fddc <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 800fddc:	f1a0 0004 	sub.w	r0, r0, #4
 800fde0:	e7e4      	b.n	800fdac <StorePixelDmx::SaveMap(unsigned char)>
 800fde2:	bf00      	nop

0800fde4 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800fde4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fde6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fdea:	2200      	movs	r2, #0
 800fdec:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fdf0:	2302      	movs	r3, #2
 800fdf2:	4807      	ldr	r0, [pc, #28]	; (800fe10 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800fdf4:	9300      	str	r3, [sp, #0]
 800fdf6:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fdfa:	2211      	movs	r2, #17
 800fdfc:	2103      	movs	r1, #3
 800fdfe:	6800      	ldr	r0, [r0, #0]
 800fe00:	f10d 0316 	add.w	r3, sp, #22
 800fe04:	f7ff fd7c 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe08:	b007      	add	sp, #28
 800fe0a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe0e:	bf00      	nop
 800fe10:	20009b48 	andcs	r9, r0, r8, asr #22

0800fe14 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800fe14:	f1a0 0004 	sub.w	r0, r0, #4
 800fe18:	e7e4      	b.n	800fde4 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 800fe1a:	bf00      	nop

0800fe1c <StorePixelDmx::SaveCount(unsigned short)>:
 800fe1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fe1e:	2302      	movs	r3, #2
 800fe20:	2200      	movs	r2, #0
 800fe22:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fe26:	4807      	ldr	r0, [pc, #28]	; (800fe44 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 800fe28:	9300      	str	r3, [sp, #0]
 800fe2a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fe2e:	2205      	movs	r2, #5
 800fe30:	2103      	movs	r1, #3
 800fe32:	6800      	ldr	r0, [r0, #0]
 800fe34:	f10d 0316 	add.w	r3, sp, #22
 800fe38:	f7ff fd62 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe3c:	b007      	add	sp, #28
 800fe3e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe42:	bf00      	nop
 800fe44:	20009b48 	andcs	r9, r0, r8, asr #22

0800fe48 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 800fe48:	f1a0 0004 	sub.w	r0, r0, #4
 800fe4c:	e7e6      	b.n	800fe1c <StorePixelDmx::SaveCount(unsigned short)>
 800fe4e:	bf00      	nop

0800fe50 <StorePixelDmx::SaveType(unsigned char)>:
 800fe50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fe52:	2301      	movs	r3, #1
 800fe54:	2200      	movs	r2, #0
 800fe56:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fe5a:	4807      	ldr	r0, [pc, #28]	; (800fe78 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 800fe5c:	9300      	str	r3, [sp, #0]
 800fe5e:	f88d 1017 	strb.w	r1, [sp, #23]
 800fe62:	2204      	movs	r2, #4
 800fe64:	2103      	movs	r1, #3
 800fe66:	6800      	ldr	r0, [r0, #0]
 800fe68:	f10d 0317 	add.w	r3, sp, #23
 800fe6c:	f7ff fd48 	bl	800f900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe70:	b007      	add	sp, #28
 800fe72:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe76:	bf00      	nop
 800fe78:	20009b48 	andcs	r9, r0, r8, asr #22

0800fe7c <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 800fe7c:	f1a0 0004 	sub.w	r0, r0, #4
 800fe80:	e7e6      	b.n	800fe50 <StorePixelDmx::SaveType(unsigned char)>
 800fe82:	bf00      	nop

0800fe84 <StorePixelDmx::~StorePixelDmx()>:
 800fe84:	b510      	push	{r4, lr}
 800fe86:	4604      	mov	r4, r0
 800fe88:	f001 f87c 	bl	8010f84 <operator delete(void*)>
 800fe8c:	4620      	mov	r0, r4
 800fe8e:	bd10      	pop	{r4, pc}

0800fe90 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800fe90:	f1a0 0004 	sub.w	r0, r0, #4
 800fe94:	e7f6      	b.n	800fe84 <StorePixelDmx::~StorePixelDmx()>
	...

0800fe98 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 800fe98:	b507      	push	{r0, r1, r2, lr}
 800fe9a:	2300      	movs	r3, #0
 800fe9c:	460a      	mov	r2, r1
 800fe9e:	2101      	movs	r1, #1
 800fea0:	e9cd 3100 	strd	r3, r1, [sp]
 800fea4:	4804      	ldr	r0, [pc, #16]	; (800feb8 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 800fea6:	2318      	movs	r3, #24
 800fea8:	2103      	movs	r1, #3
 800feaa:	6800      	ldr	r0, [r0, #0]
 800feac:	f7ff fd68 	bl	800f980 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800feb0:	b003      	add	sp, #12
 800feb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800feb6:	bf00      	nop
 800feb8:	20009b48 	andcs	r9, r0, r8, asr #22

0800febc <StorePixelDmx::StorePixelDmx()>:
 800febc:	4a03      	ldr	r2, [pc, #12]	; (800fecc <StorePixelDmx::StorePixelDmx()+0x10>)
 800febe:	6002      	str	r2, [r0, #0]
 800fec0:	3230      	adds	r2, #48	; 0x30
 800fec2:	6042      	str	r2, [r0, #4]
 800fec4:	4a02      	ldr	r2, [pc, #8]	; (800fed0 <StorePixelDmx::StorePixelDmx()+0x14>)
 800fec6:	6010      	str	r0, [r2, #0]
 800fec8:	4770      	bx	lr
 800feca:	bf00      	nop
 800fecc:	080154ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, ip, lr}
 800fed0:	20009b5c 	andcs	r9, r0, ip, asr fp

0800fed4 <FlashCode::FlashCode()>:
 800fed4:	b538      	push	{r3, r4, r5, lr}
 800fed6:	4b09      	ldr	r3, [pc, #36]	; (800fefc <FlashCode::FlashCode()+0x28>)
 800fed8:	4604      	mov	r4, r0
 800feda:	6018      	str	r0, [r3, #0]
 800fedc:	2301      	movs	r3, #1
 800fede:	7003      	strb	r3, [r0, #0]
 800fee0:	f000 f812 	bl	800ff08 <FlashCode::GetSize() const>
 800fee4:	4605      	mov	r5, r0
 800fee6:	4620      	mov	r0, r4
 800fee8:	f000 f80e 	bl	800ff08 <FlashCode::GetSize() const>
 800feec:	462a      	mov	r2, r5
 800feee:	0a83      	lsrs	r3, r0, #10
 800fef0:	4903      	ldr	r1, [pc, #12]	; (800ff00 <FlashCode::FlashCode()+0x2c>)
 800fef2:	4804      	ldr	r0, [pc, #16]	; (800ff04 <FlashCode::FlashCode()+0x30>)
 800fef4:	f7f9 f9f2 	bl	80092dc <printf>
 800fef8:	4620      	mov	r0, r4
 800fefa:	bd38      	pop	{r3, r4, r5, pc}
 800fefc:	20009b60 	andcs	r9, r0, r0, ror #22
 800ff00:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 800ff04:	0801553c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, ip, lr}

0800ff08 <FlashCode::GetSize() const>:
 800ff08:	4b02      	ldr	r3, [pc, #8]	; (800ff14 <FlashCode::GetSize() const+0xc>)
 800ff0a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800ff0e:	0280      	lsls	r0, r0, #10
 800ff10:	4770      	bx	lr
 800ff12:	bf00      	nop
 800ff14:	1ffff700 	svcne	0x00fff700

0800ff18 <FlashCode::GetSectorSize() const>:
 800ff18:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ff1c:	4770      	bx	lr

0800ff1e <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 800ff1e:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ff22:	441a      	add	r2, r3
 800ff24:	4293      	cmp	r3, r2
 800ff26:	d104      	bne.n	800ff32 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 800ff28:	2200      	movs	r2, #0
 800ff2a:	9b00      	ldr	r3, [sp, #0]
 800ff2c:	2001      	movs	r0, #1
 800ff2e:	601a      	str	r2, [r3, #0]
 800ff30:	4770      	bx	lr
 800ff32:	f851 0b04 	ldr.w	r0, [r1], #4
 800ff36:	f843 0b04 	str.w	r0, [r3], #4
 800ff3a:	e7f3      	b.n	800ff24 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

0800ff3c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 800ff3c:	2000      	movs	r0, #0
 800ff3e:	b538      	push	{r3, r4, r5, lr}
 800ff40:	4c47      	ldr	r4, [pc, #284]	; (8010060 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 800ff42:	6018      	str	r0, [r3, #0]
 800ff44:	6823      	ldr	r3, [r4, #0]
 800ff46:	2b04      	cmp	r3, #4
 800ff48:	f200 8082 	bhi.w	8010050 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 800ff4c:	e8df f003 	tbb	[pc, r3]
 800ff50:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800ff54:	4b430080 	blmi	90d015c <__exidx_end+0x10ba740>
 800ff58:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ff5c:	6019      	str	r1, [r3, #0]
 800ff5e:	4b42      	ldr	r3, [pc, #264]	; (8010068 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800ff60:	601a      	str	r2, [r3, #0]
 800ff62:	4b42      	ldr	r3, [pc, #264]	; (801006c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 800ff64:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ff68:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ff6c:	4b40      	ldr	r3, [pc, #256]	; (8010070 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800ff6e:	d807      	bhi.n	800ff80 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 800ff70:	2201      	movs	r2, #1
 800ff72:	701a      	strb	r2, [r3, #0]
 800ff74:	f001 fe92 	bl	8011c9c <fmc_bank0_unlock>
 800ff78:	2301      	movs	r3, #1
 800ff7a:	6023      	str	r3, [r4, #0]
 800ff7c:	2000      	movs	r0, #0
 800ff7e:	e026      	b.n	800ffce <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800ff80:	4a3c      	ldr	r2, [pc, #240]	; (8010074 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 800ff82:	4291      	cmp	r1, r2
 800ff84:	d3f4      	bcc.n	800ff70 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 800ff86:	2200      	movs	r2, #0
 800ff88:	701a      	strb	r2, [r3, #0]
 800ff8a:	f001 fe95 	bl	8011cb8 <fmc_bank1_unlock>
 800ff8e:	e7f3      	b.n	800ff78 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800ff90:	4d37      	ldr	r5, [pc, #220]	; (8010070 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800ff92:	782b      	ldrb	r3, [r5, #0]
 800ff94:	b15b      	cbz	r3, 800ffae <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 800ff96:	f001 fead 	bl	8011cf4 <fmc_bank0_state_get>
 800ff9a:	2801      	cmp	r0, #1
 800ff9c:	d0ee      	beq.n	800ff7c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 800ff9e:	7829      	ldrb	r1, [r5, #0]
 800ffa0:	4b35      	ldr	r3, [pc, #212]	; (8010078 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800ffa2:	b939      	cbnz	r1, 800ffb4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 800ffa4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ffa6:	f022 0202 	bic.w	r2, r2, #2
 800ffaa:	651a      	str	r2, [r3, #80]	; 0x50
 800ffac:	e006      	b.n	800ffbc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 800ffae:	f001 feb3 	bl	8011d18 <fmc_bank1_state_get>
 800ffb2:	e7f2      	b.n	800ff9a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 800ffb4:	691a      	ldr	r2, [r3, #16]
 800ffb6:	f022 0202 	bic.w	r2, r2, #2
 800ffba:	611a      	str	r2, [r3, #16]
 800ffbc:	4b2a      	ldr	r3, [pc, #168]	; (8010068 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800ffbe:	681b      	ldr	r3, [r3, #0]
 800ffc0:	b94b      	cbnz	r3, 800ffd6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 800ffc2:	b129      	cbz	r1, 800ffd0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 800ffc4:	f001 fe86 	bl	8011cd4 <fmc_bank0_lock>
 800ffc8:	2300      	movs	r3, #0
 800ffca:	2001      	movs	r0, #1
 800ffcc:	6023      	str	r3, [r4, #0]
 800ffce:	bd38      	pop	{r3, r4, r5, pc}
 800ffd0:	f001 fe88 	bl	8011ce4 <fmc_bank1_lock>
 800ffd4:	e7f8      	b.n	800ffc8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 800ffd6:	2302      	movs	r3, #2
 800ffd8:	e7cf      	b.n	800ff7a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 800ffda:	4923      	ldr	r1, [pc, #140]	; (8010068 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800ffdc:	680b      	ldr	r3, [r1, #0]
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	d0ca      	beq.n	800ff78 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800ffe2:	4b23      	ldr	r3, [pc, #140]	; (8010070 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800ffe4:	4a1f      	ldr	r2, [pc, #124]	; (8010064 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 800ffe6:	7818      	ldrb	r0, [r3, #0]
 800ffe8:	4b23      	ldr	r3, [pc, #140]	; (8010078 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800ffea:	b190      	cbz	r0, 8010012 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 800ffec:	6918      	ldr	r0, [r3, #16]
 800ffee:	f040 0002 	orr.w	r0, r0, #2
 800fff2:	6118      	str	r0, [r3, #16]
 800fff4:	6810      	ldr	r0, [r2, #0]
 800fff6:	6158      	str	r0, [r3, #20]
 800fff8:	6918      	ldr	r0, [r3, #16]
 800fffa:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800fffe:	6118      	str	r0, [r3, #16]
 8010000:	680b      	ldr	r3, [r1, #0]
 8010002:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010006:	600b      	str	r3, [r1, #0]
 8010008:	6813      	ldr	r3, [r2, #0]
 801000a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801000e:	6013      	str	r3, [r2, #0]
 8010010:	e7b2      	b.n	800ff78 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 8010012:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8010014:	f040 0002 	orr.w	r0, r0, #2
 8010018:	6518      	str	r0, [r3, #80]	; 0x50
 801001a:	6810      	ldr	r0, [r2, #0]
 801001c:	6558      	str	r0, [r3, #84]	; 0x54
 801001e:	69dd      	ldr	r5, [r3, #28]
 8010020:	07ad      	lsls	r5, r5, #30
 8010022:	bf48      	it	mi
 8010024:	6158      	strmi	r0, [r3, #20]
 8010026:	4814      	ldr	r0, [pc, #80]	; (8010078 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8010028:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801002a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801002e:	6503      	str	r3, [r0, #80]	; 0x50
 8010030:	680b      	ldr	r3, [r1, #0]
 8010032:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8010036:	600b      	str	r3, [r1, #0]
 8010038:	6813      	ldr	r3, [r2, #0]
 801003a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801003e:	e7e6      	b.n	801000e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 8010040:	4b0b      	ldr	r3, [pc, #44]	; (8010070 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8010042:	781a      	ldrb	r2, [r3, #0]
 8010044:	4b0c      	ldr	r3, [pc, #48]	; (8010078 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8010046:	b132      	cbz	r2, 8010056 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 8010048:	691a      	ldr	r2, [r3, #16]
 801004a:	f022 0201 	bic.w	r2, r2, #1
 801004e:	611a      	str	r2, [r3, #16]
 8010050:	2000      	movs	r0, #0
 8010052:	6020      	str	r0, [r4, #0]
 8010054:	e7bb      	b.n	800ffce <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 8010056:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010058:	f022 0201 	bic.w	r2, r2, #1
 801005c:	651a      	str	r2, [r3, #80]	; 0x50
 801005e:	e7f7      	b.n	8010050 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8010060:	20009b68 	andcs	r9, r0, r8, ror #22
 8010064:	20009b6c 	andcs	r9, r0, ip, ror #22
 8010068:	20009b78 	andcs	r9, r0, r8, ror fp
 801006c:	1ffff700 	svcne	0x00fff700
 8010070:	20009b74 	andcs	r9, r0, r4, ror fp
 8010074:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8010078:	40022000 	andmi	r2, r2, r0

0801007c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 801007c:	b570      	push	{r4, r5, r6, lr}
 801007e:	2400      	movs	r4, #0
 8010080:	9804      	ldr	r0, [sp, #16]
 8010082:	6004      	str	r4, [r0, #0]
 8010084:	4c48      	ldr	r4, [pc, #288]	; (80101a8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 8010086:	6820      	ldr	r0, [r4, #0]
 8010088:	2804      	cmp	r0, #4
 801008a:	d848      	bhi.n	801011e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 801008c:	e8df f000 	tbb	[pc, r0]
 8010090:	22847c03 	addcs	r7, r4, #768	; 0x300
 8010094:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8010098:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 801009c:	6001      	str	r1, [r0, #0]
 801009e:	4844      	ldr	r0, [pc, #272]	; (80101b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 80100a0:	6003      	str	r3, [r0, #0]
 80100a2:	4b44      	ldr	r3, [pc, #272]	; (80101b4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 80100a4:	601a      	str	r2, [r3, #0]
 80100a6:	4b44      	ldr	r3, [pc, #272]	; (80101b8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 80100a8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80100ac:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80100b0:	4b42      	ldr	r3, [pc, #264]	; (80101bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 80100b2:	d807      	bhi.n	80100c4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 80100b4:	2201      	movs	r2, #1
 80100b6:	701a      	strb	r2, [r3, #0]
 80100b8:	f001 fdf0 	bl	8011c9c <fmc_bank0_unlock>
 80100bc:	2303      	movs	r3, #3
 80100be:	6023      	str	r3, [r4, #0]
 80100c0:	2000      	movs	r0, #0
 80100c2:	e026      	b.n	8010112 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 80100c4:	4a3e      	ldr	r2, [pc, #248]	; (80101c0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 80100c6:	4291      	cmp	r1, r2
 80100c8:	d3f4      	bcc.n	80100b4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 80100ca:	2200      	movs	r2, #0
 80100cc:	701a      	strb	r2, [r3, #0]
 80100ce:	f001 fdf3 	bl	8011cb8 <fmc_bank1_unlock>
 80100d2:	e7f3      	b.n	80100bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 80100d4:	4d39      	ldr	r5, [pc, #228]	; (80101bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 80100d6:	782b      	ldrb	r3, [r5, #0]
 80100d8:	b15b      	cbz	r3, 80100f2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 80100da:	f001 fe0b 	bl	8011cf4 <fmc_bank0_state_get>
 80100de:	2801      	cmp	r0, #1
 80100e0:	d0ee      	beq.n	80100c0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 80100e2:	7829      	ldrb	r1, [r5, #0]
 80100e4:	4b37      	ldr	r3, [pc, #220]	; (80101c4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 80100e6:	b939      	cbnz	r1, 80100f8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 80100e8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80100ea:	f022 0201 	bic.w	r2, r2, #1
 80100ee:	651a      	str	r2, [r3, #80]	; 0x50
 80100f0:	e006      	b.n	8010100 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 80100f2:	f001 fe11 	bl	8011d18 <fmc_bank1_state_get>
 80100f6:	e7f2      	b.n	80100de <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 80100f8:	691a      	ldr	r2, [r3, #16]
 80100fa:	f022 0201 	bic.w	r2, r2, #1
 80100fe:	611a      	str	r2, [r3, #16]
 8010100:	4b2c      	ldr	r3, [pc, #176]	; (80101b4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8010102:	681b      	ldr	r3, [r3, #0]
 8010104:	b94b      	cbnz	r3, 801011a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 8010106:	b129      	cbz	r1, 8010114 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 8010108:	f001 fde4 	bl	8011cd4 <fmc_bank0_lock>
 801010c:	2300      	movs	r3, #0
 801010e:	2001      	movs	r0, #1
 8010110:	6023      	str	r3, [r4, #0]
 8010112:	bd70      	pop	{r4, r5, r6, pc}
 8010114:	f001 fde6 	bl	8011ce4 <fmc_bank1_lock>
 8010118:	e7f8      	b.n	801010c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 801011a:	2304      	movs	r3, #4
 801011c:	e7cf      	b.n	80100be <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 801011e:	4a25      	ldr	r2, [pc, #148]	; (80101b4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8010120:	6813      	ldr	r3, [r2, #0]
 8010122:	2b03      	cmp	r3, #3
 8010124:	d91a      	bls.n	801015c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 8010126:	4b25      	ldr	r3, [pc, #148]	; (80101bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8010128:	7819      	ldrb	r1, [r3, #0]
 801012a:	4b26      	ldr	r3, [pc, #152]	; (80101c4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 801012c:	b189      	cbz	r1, 8010152 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 801012e:	6919      	ldr	r1, [r3, #16]
 8010130:	f041 0101 	orr.w	r1, r1, #1
 8010134:	6119      	str	r1, [r3, #16]
 8010136:	4d1e      	ldr	r5, [pc, #120]	; (80101b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8010138:	481c      	ldr	r0, [pc, #112]	; (80101ac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 801013a:	6829      	ldr	r1, [r5, #0]
 801013c:	6803      	ldr	r3, [r0, #0]
 801013e:	f851 6b04 	ldr.w	r6, [r1], #4
 8010142:	f843 6b04 	str.w	r6, [r3], #4
 8010146:	6003      	str	r3, [r0, #0]
 8010148:	6813      	ldr	r3, [r2, #0]
 801014a:	6029      	str	r1, [r5, #0]
 801014c:	3b04      	subs	r3, #4
 801014e:	6013      	str	r3, [r2, #0]
 8010150:	e7b4      	b.n	80100bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8010152:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8010154:	f041 0101 	orr.w	r1, r1, #1
 8010158:	6519      	str	r1, [r3, #80]	; 0x50
 801015a:	e7ec      	b.n	8010136 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 801015c:	2b00      	cmp	r3, #0
 801015e:	d0ad      	beq.n	80100bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8010160:	4b16      	ldr	r3, [pc, #88]	; (80101bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8010162:	781a      	ldrb	r2, [r3, #0]
 8010164:	4b17      	ldr	r3, [pc, #92]	; (80101c4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8010166:	b152      	cbz	r2, 801017e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 8010168:	691a      	ldr	r2, [r3, #16]
 801016a:	f042 0201 	orr.w	r2, r2, #1
 801016e:	611a      	str	r2, [r3, #16]
 8010170:	4a0f      	ldr	r2, [pc, #60]	; (80101b0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8010172:	4b0e      	ldr	r3, [pc, #56]	; (80101ac <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8010174:	6812      	ldr	r2, [r2, #0]
 8010176:	681b      	ldr	r3, [r3, #0]
 8010178:	6812      	ldr	r2, [r2, #0]
 801017a:	601a      	str	r2, [r3, #0]
 801017c:	e79e      	b.n	80100bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 801017e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010180:	f042 0201 	orr.w	r2, r2, #1
 8010184:	651a      	str	r2, [r3, #80]	; 0x50
 8010186:	e7f3      	b.n	8010170 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 8010188:	4b0c      	ldr	r3, [pc, #48]	; (80101bc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 801018a:	781a      	ldrb	r2, [r3, #0]
 801018c:	4b0d      	ldr	r3, [pc, #52]	; (80101c4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 801018e:	b132      	cbz	r2, 801019e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 8010190:	691a      	ldr	r2, [r3, #16]
 8010192:	f022 0202 	bic.w	r2, r2, #2
 8010196:	611a      	str	r2, [r3, #16]
 8010198:	2000      	movs	r0, #0
 801019a:	6020      	str	r0, [r4, #0]
 801019c:	e7b9      	b.n	8010112 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 801019e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80101a0:	f022 0202 	bic.w	r2, r2, #2
 80101a4:	651a      	str	r2, [r3, #80]	; 0x50
 80101a6:	e7f7      	b.n	8010198 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 80101a8:	20009b68 	andcs	r9, r0, r8, ror #22
 80101ac:	20009b64 	andcs	r9, r0, r4, ror #22
 80101b0:	20009b70 	andcs	r9, r0, r0, ror fp
 80101b4:	20009b78 	andcs	r9, r0, r8, ror fp
 80101b8:	1ffff700 	svcne	0x00fff700
 80101bc:	20009b74 	andcs	r9, r0, r4, ror fp
 80101c0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 80101c4:	40022000 	andmi	r2, r2, r0

080101c8 <properties::convert_json_file(char*, unsigned short, bool)>:
 80101c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101cc:	4603      	mov	r3, r0
 80101ce:	7800      	ldrb	r0, [r0, #0]
 80101d0:	287b      	cmp	r0, #123	; 0x7b
 80101d2:	f040 80a2 	bne.w	801031a <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 80101d6:	b17a      	cbz	r2, 80101f8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80101d8:	2401      	movs	r4, #1
 80101da:	461e      	mov	r6, r3
 80101dc:	4620      	mov	r0, r4
 80101de:	2a00      	cmp	r2, #0
 80101e0:	bf0c      	ite	eq
 80101e2:	f04f 0c0a 	moveq.w	ip, #10
 80101e6:	f04f 0c00 	movne.w	ip, #0
 80101ea:	273d      	movs	r7, #61	; 0x3d
 80101ec:	42a1      	cmp	r1, r4
 80101ee:	d850      	bhi.n	8010292 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 80101f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80101f4:	463c      	mov	r4, r7
 80101f6:	e7f2      	b.n	80101de <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80101f8:	2023      	movs	r0, #35	; 0x23
 80101fa:	f803 0b01 	strb.w	r0, [r3], #1
 80101fe:	461c      	mov	r4, r3
 8010200:	2701      	movs	r7, #1
 8010202:	42b9      	cmp	r1, r7
 8010204:	d811      	bhi.n	801022a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8010206:	2001      	movs	r0, #1
 8010208:	461e      	mov	r6, r3
 801020a:	230a      	movs	r3, #10
 801020c:	4625      	mov	r5, r4
 801020e:	f806 3b01 	strb.w	r3, [r6], #1
 8010212:	3001      	adds	r0, #1
 8010214:	462b      	mov	r3, r5
 8010216:	781c      	ldrb	r4, [r3, #0]
 8010218:	3501      	adds	r5, #1
 801021a:	2c7b      	cmp	r4, #123	; 0x7b
 801021c:	d0ea      	beq.n	80101f4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 801021e:	42b9      	cmp	r1, r7
 8010220:	f107 0401 	add.w	r4, r7, #1
 8010224:	d9db      	bls.n	80101de <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8010226:	4627      	mov	r7, r4
 8010228:	e7f4      	b.n	8010214 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 801022a:	f814 0b01 	ldrb.w	r0, [r4], #1
 801022e:	2822      	cmp	r0, #34	; 0x22
 8010230:	d119      	bne.n	8010266 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8010232:	46a4      	mov	ip, r4
 8010234:	461d      	mov	r5, r3
 8010236:	2601      	movs	r6, #1
 8010238:	f89c e000 	ldrb.w	lr, [ip]
 801023c:	4664      	mov	r4, ip
 801023e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8010242:	462b      	mov	r3, r5
 8010244:	4630      	mov	r0, r6
 8010246:	f10c 0c01 	add.w	ip, ip, #1
 801024a:	f105 0501 	add.w	r5, r5, #1
 801024e:	f106 0601 	add.w	r6, r6, #1
 8010252:	d0d9      	beq.n	8010208 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8010254:	3701      	adds	r7, #1
 8010256:	42b9      	cmp	r1, r7
 8010258:	4664      	mov	r4, ip
 801025a:	f805 ec01 	strb.w	lr, [r5, #-1]
 801025e:	d8eb      	bhi.n	8010238 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8010260:	4630      	mov	r0, r6
 8010262:	462b      	mov	r3, r5
 8010264:	e7d0      	b.n	8010208 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8010266:	3701      	adds	r7, #1
 8010268:	e7cb      	b.n	8010202 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801026a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801026e:	d110      	bne.n	8010292 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8010270:	eba0 0803 	sub.w	r8, r0, r3
 8010274:	461a      	mov	r2, r3
 8010276:	eb08 0003 	add.w	r0, r8, r3
 801027a:	f813 eb01 	ldrb.w	lr, [r3], #1
 801027e:	1c65      	adds	r5, r4, #1
 8010280:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8010284:	d04c      	beq.n	8010320 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 8010286:	42a1      	cmp	r1, r4
 8010288:	d911      	bls.n	80102ae <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 801028a:	462c      	mov	r4, r5
 801028c:	f806 eb01 	strb.w	lr, [r6], #1
 8010290:	e7f0      	b.n	8010274 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8010292:	42a1      	cmp	r1, r4
 8010294:	461d      	mov	r5, r3
 8010296:	f893 e000 	ldrb.w	lr, [r3]
 801029a:	f104 0401 	add.w	r4, r4, #1
 801029e:	f103 0301 	add.w	r3, r3, #1
 80102a2:	d8e2      	bhi.n	801026a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80102a4:	462b      	mov	r3, r5
 80102a6:	e7e3      	b.n	8010270 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 80102a8:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 80102ac:	d009      	beq.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80102ae:	42a9      	cmp	r1, r5
 80102b0:	4614      	mov	r4, r2
 80102b2:	f892 e000 	ldrb.w	lr, [r2]
 80102b6:	f105 0501 	add.w	r5, r5, #1
 80102ba:	f102 0201 	add.w	r2, r2, #1
 80102be:	d8f3      	bhi.n	80102a8 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 80102c0:	4622      	mov	r2, r4
 80102c2:	7814      	ldrb	r4, [r2, #0]
 80102c4:	4696      	mov	lr, r2
 80102c6:	2c2f      	cmp	r4, #47	; 0x2f
 80102c8:	462b      	mov	r3, r5
 80102ca:	f102 0201 	add.w	r2, r2, #1
 80102ce:	f105 0501 	add.w	r5, r5, #1
 80102d2:	d81a      	bhi.n	801030a <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 80102d4:	4299      	cmp	r1, r3
 80102d6:	d8f4      	bhi.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80102d8:	2c22      	cmp	r4, #34	; 0x22
 80102da:	bf08      	it	eq
 80102dc:	4696      	moveq	lr, r2
 80102de:	4673      	mov	r3, lr
 80102e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80102e4:	1c6c      	adds	r4, r5, #1
 80102e6:	2a22      	cmp	r2, #34	; 0x22
 80102e8:	d011      	beq.n	801030e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80102ea:	2a2c      	cmp	r2, #44	; 0x2c
 80102ec:	d00f      	beq.n	801030e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80102ee:	2a7d      	cmp	r2, #125	; 0x7d
 80102f0:	d00d      	beq.n	801030e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80102f2:	42a9      	cmp	r1, r5
 80102f4:	d90f      	bls.n	8010316 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 80102f6:	f1a2 0520 	sub.w	r5, r2, #32
 80102fa:	2d5a      	cmp	r5, #90	; 0x5a
 80102fc:	d803      	bhi.n	8010306 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 80102fe:	469e      	mov	lr, r3
 8010300:	f806 2b01 	strb.w	r2, [r6], #1
 8010304:	3001      	adds	r0, #1
 8010306:	4625      	mov	r5, r4
 8010308:	e7e9      	b.n	80102de <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 801030a:	461d      	mov	r5, r3
 801030c:	e7e7      	b.n	80102de <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 801030e:	462c      	mov	r4, r5
 8010310:	f806 cb01 	strb.w	ip, [r6], #1
 8010314:	3001      	adds	r0, #1
 8010316:	3401      	adds	r4, #1
 8010318:	e768      	b.n	80101ec <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 801031a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801031e:	e767      	b.n	80101f0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8010320:	4625      	mov	r5, r4
 8010322:	f806 7b01 	strb.w	r7, [r6], #1
 8010326:	3001      	adds	r0, #1
 8010328:	e7c1      	b.n	80102ae <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0801032c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 801032c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010330:	6002      	str	r2, [r0, #0]
 8010332:	4614      	mov	r4, r2
 8010334:	2200      	movs	r2, #0
 8010336:	80c2      	strh	r2, [r0, #6]
 8010338:	4a1c      	ldr	r2, [pc, #112]	; (80103ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801033a:	4606      	mov	r6, r0
 801033c:	7812      	ldrb	r2, [r2, #0]
 801033e:	8083      	strh	r3, [r0, #4]
 8010340:	f002 0201 	and.w	r2, r2, #1
 8010344:	7202      	strb	r2, [r0, #8]
 8010346:	4608      	mov	r0, r1
 8010348:	4605      	mov	r5, r0
 801034a:	782f      	ldrb	r7, [r5, #0]
 801034c:	3001      	adds	r0, #1
 801034e:	2f00      	cmp	r7, #0
 8010350:	d1fa      	bne.n	8010348 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8010352:	1a6d      	subs	r5, r5, r1
 8010354:	b29b      	uxth	r3, r3
 8010356:	b1d2      	cbz	r2, 801038e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8010358:	1d2f      	adds	r7, r5, #4
 801035a:	429f      	cmp	r7, r3
 801035c:	d814      	bhi.n	8010388 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801035e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8010362:	f04f 0922 	mov.w	r9, #34	; 0x22
 8010366:	462a      	mov	r2, r5
 8010368:	f884 8000 	strb.w	r8, [r4]
 801036c:	f884 9001 	strb.w	r9, [r4, #1]
 8010370:	1ca0      	adds	r0, r4, #2
 8010372:	f000 fea2 	bl	80110ba <memmove>
 8010376:	223a      	movs	r2, #58	; 0x3a
 8010378:	1963      	adds	r3, r4, r5
 801037a:	3505      	adds	r5, #5
 801037c:	f883 9002 	strb.w	r9, [r3, #2]
 8010380:	70da      	strb	r2, [r3, #3]
 8010382:	80f5      	strh	r5, [r6, #6]
 8010384:	f804 8007 	strb.w	r8, [r4, r7]
 8010388:	4630      	mov	r0, r6
 801038a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801038e:	1caf      	adds	r7, r5, #2
 8010390:	429f      	cmp	r7, r3
 8010392:	d8f9      	bhi.n	8010388 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8010394:	4620      	mov	r0, r4
 8010396:	2323      	movs	r3, #35	; 0x23
 8010398:	462a      	mov	r2, r5
 801039a:	f800 3b01 	strb.w	r3, [r0], #1
 801039e:	f000 fe8c 	bl	80110ba <memmove>
 80103a2:	230a      	movs	r3, #10
 80103a4:	442c      	add	r4, r5
 80103a6:	7063      	strb	r3, [r4, #1]
 80103a8:	80f7      	strh	r7, [r6, #6]
 80103aa:	e7ed      	b.n	8010388 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80103ac:	20009b7c 	andcs	r9, r0, ip, ror fp

080103b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80103b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103b2:	469c      	mov	ip, r3
 80103b4:	8885      	ldrh	r5, [r0, #4]
 80103b6:	88c3      	ldrh	r3, [r0, #6]
 80103b8:	b085      	sub	sp, #20
 80103ba:	42ab      	cmp	r3, r5
 80103bc:	d302      	bcc.n	80103c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80103be:	2000      	movs	r0, #0
 80103c0:	b005      	add	sp, #20
 80103c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103c4:	4604      	mov	r4, r0
 80103c6:	6800      	ldr	r0, [r0, #0]
 80103c8:	1aed      	subs	r5, r5, r3
 80103ca:	4418      	add	r0, r3
 80103cc:	b2d6      	uxtb	r6, r2
 80103ce:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80103d2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80103d6:	f894 e008 	ldrb.w	lr, [r4, #8]
 80103da:	0e12      	lsrs	r2, r2, #24
 80103dc:	f1bc 0f00 	cmp.w	ip, #0
 80103e0:	d109      	bne.n	80103f6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80103e2:	f1be 0f00 	cmp.w	lr, #0
 80103e6:	d109      	bne.n	80103fc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80103e8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80103ec:	e9cd 6700 	strd	r6, r7, [sp]
 80103f0:	460b      	mov	r3, r1
 80103f2:	4a0e      	ldr	r2, [pc, #56]	; (801042c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80103f4:	e008      	b.n	8010408 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80103f6:	f1be 0f00 	cmp.w	lr, #0
 80103fa:	d00f      	beq.n	801041c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80103fc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8010400:	460b      	mov	r3, r1
 8010402:	e9cd 6700 	strd	r6, r7, [sp]
 8010406:	4a0a      	ldr	r2, [pc, #40]	; (8010430 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8010408:	4629      	mov	r1, r5
 801040a:	f7f8 ff77 	bl	80092fc <snprintf>
 801040e:	4285      	cmp	r5, r0
 8010410:	dbd5      	blt.n	80103be <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8010412:	88e3      	ldrh	r3, [r4, #6]
 8010414:	4403      	add	r3, r0
 8010416:	80e3      	strh	r3, [r4, #6]
 8010418:	2001      	movs	r0, #1
 801041a:	e7d1      	b.n	80103c0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 801041c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8010420:	e9cd 6700 	strd	r6, r7, [sp]
 8010424:	460b      	mov	r3, r1
 8010426:	4a03      	ldr	r2, [pc, #12]	; (8010434 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8010428:	e7ee      	b.n	8010408 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801042a:	bf00      	nop
 801042c:	08015618 	stmdaeq	r1, {r3, r4, r9, sl, ip, lr}
 8010430:	08015604 	stmdaeq	r1, {r2, r9, sl, ip, lr}
 8010434:	08015619 	stmdaeq	r1, {r0, r3, r4, r9, sl, ip, lr}

08010438 <PropertiesBuilder::AddComment(char const*)>:
 8010438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801043a:	7a06      	ldrb	r6, [r0, #8]
 801043c:	b996      	cbnz	r6, 8010464 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801043e:	4604      	mov	r4, r0
 8010440:	88c0      	ldrh	r0, [r0, #6]
 8010442:	88a5      	ldrh	r5, [r4, #4]
 8010444:	42a8      	cmp	r0, r5
 8010446:	d20d      	bcs.n	8010464 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8010448:	6827      	ldr	r7, [r4, #0]
 801044a:	1a2d      	subs	r5, r5, r0
 801044c:	460b      	mov	r3, r1
 801044e:	4a06      	ldr	r2, [pc, #24]	; (8010468 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8010450:	4629      	mov	r1, r5
 8010452:	4438      	add	r0, r7
 8010454:	f7f8 ff52 	bl	80092fc <snprintf>
 8010458:	4285      	cmp	r5, r0
 801045a:	bfa1      	itttt	ge
 801045c:	2601      	movge	r6, #1
 801045e:	88e3      	ldrhge	r3, [r4, #6]
 8010460:	18c0      	addge	r0, r0, r3
 8010462:	80e0      	strhge	r0, [r4, #6]
 8010464:	4630      	mov	r0, r6
 8010466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010468:	08015629 	stmdaeq	r1, {r0, r3, r5, r9, sl, ip, lr}

0801046c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 801046c:	e9c0 1200 	strd	r1, r2, [r0]
 8010470:	4770      	bx	lr

08010472 <ReadConfigFile::~ReadConfigFile()>:
 8010472:	4770      	bx	lr

08010474 <ReadConfigFile::Read(char const*, unsigned int)>:
 8010474:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010478:	4606      	mov	r6, r0
 801047a:	460d      	mov	r5, r1
 801047c:	4614      	mov	r4, r2
 801047e:	f04f 0800 	mov.w	r8, #0
 8010482:	b0a0      	sub	sp, #128	; 0x80
 8010484:	b33c      	cbz	r4, 80104d6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8010486:	466b      	mov	r3, sp
 8010488:	462a      	mov	r2, r5
 801048a:	4619      	mov	r1, r3
 801048c:	e007      	b.n	801049e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 801048e:	f803 7b01 	strb.w	r7, [r3], #1
 8010492:	1a58      	subs	r0, r3, r1
 8010494:	287f      	cmp	r0, #127	; 0x7f
 8010496:	4615      	mov	r5, r2
 8010498:	dc1d      	bgt.n	80104d6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801049a:	3c01      	subs	r4, #1
 801049c:	d00f      	beq.n	80104be <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801049e:	7817      	ldrb	r7, [r2, #0]
 80104a0:	4610      	mov	r0, r2
 80104a2:	2f0d      	cmp	r7, #13
 80104a4:	f102 0201 	add.w	r2, r2, #1
 80104a8:	d001      	beq.n	80104ae <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80104aa:	2f0a      	cmp	r7, #10
 80104ac:	d1ef      	bne.n	801048e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 80104ae:	4605      	mov	r5, r0
 80104b0:	b12c      	cbz	r4, 80104be <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80104b2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80104b6:	2a0d      	cmp	r2, #13
 80104b8:	d00b      	beq.n	80104d2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80104ba:	2a0a      	cmp	r2, #10
 80104bc:	d009      	beq.n	80104d2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80104be:	f89d 2000 	ldrb.w	r2, [sp]
 80104c2:	2a60      	cmp	r2, #96	; 0x60
 80104c4:	d9de      	bls.n	8010484 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80104c6:	f883 8000 	strb.w	r8, [r3]
 80104ca:	e9d6 3000 	ldrd	r3, r0, [r6]
 80104ce:	4798      	blx	r3
 80104d0:	e7d8      	b.n	8010484 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80104d2:	3c01      	subs	r4, #1
 80104d4:	e7eb      	b.n	80104ae <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80104d6:	b020      	add	sp, #128	; 0x80
 80104d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080104dc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80104dc:	b570      	push	{r4, r5, r6, lr}
 80104de:	4615      	mov	r5, r2
 80104e0:	461c      	mov	r4, r3
 80104e2:	f000 f91c 	bl	801071e <Sscan::checkName(char const*, char const*)>
 80104e6:	b180      	cbz	r0, 801050a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80104e8:	2100      	movs	r1, #0
 80104ea:	5c43      	ldrb	r3, [r0, r1]
 80104ec:	6826      	ldr	r6, [r4, #0]
 80104ee:	b28a      	uxth	r2, r1
 80104f0:	b143      	cbz	r3, 8010504 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80104f2:	42b2      	cmp	r2, r6
 80104f4:	d303      	bcc.n	80104fe <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80104f6:	2b0a      	cmp	r3, #10
 80104f8:	d004      	beq.n	8010504 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80104fa:	2002      	movs	r0, #2
 80104fc:	e004      	b.n	8010508 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80104fe:	546b      	strb	r3, [r5, r1]
 8010500:	3101      	adds	r1, #1
 8010502:	e7f2      	b.n	80104ea <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8010504:	2000      	movs	r0, #0
 8010506:	6022      	str	r2, [r4, #0]
 8010508:	bd70      	pop	{r4, r5, r6, pc}
 801050a:	2001      	movs	r0, #1
 801050c:	e7fc      	b.n	8010508 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0801050e <Sscan::Float(char const*, char const*, float&)>:
 801050e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010512:	4616      	mov	r6, r2
 8010514:	f000 f903 	bl	801071e <Sscan::checkName(char const*, char const*)>
 8010518:	2800      	cmp	r0, #0
 801051a:	d059      	beq.n	80105d0 <Sscan::Float(char const*, char const*, float&)+0xc2>
 801051c:	4604      	mov	r4, r0
 801051e:	7803      	ldrb	r3, [r0, #0]
 8010520:	2b2d      	cmp	r3, #45	; 0x2d
 8010522:	bf08      	it	eq
 8010524:	3401      	addeq	r4, #1
 8010526:	7823      	ldrb	r3, [r4, #0]
 8010528:	bf0c      	ite	eq
 801052a:	f04f 0801 	moveq.w	r8, #1
 801052e:	f04f 0800 	movne.w	r8, #0
 8010532:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8010536:	d103      	bne.n	8010540 <Sscan::Float(char const*, char const*, float&)+0x32>
 8010538:	2702      	movs	r7, #2
 801053a:	4638      	mov	r0, r7
 801053c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010540:	2000      	movs	r0, #0
 8010542:	220a      	movs	r2, #10
 8010544:	7823      	ldrb	r3, [r4, #0]
 8010546:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 801054a:	2909      	cmp	r1, #9
 801054c:	d8f4      	bhi.n	8010538 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801054e:	fb02 3000 	mla	r0, r2, r0, r3
 8010552:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010556:	3830      	subs	r0, #48	; 0x30
 8010558:	2b2e      	cmp	r3, #46	; 0x2e
 801055a:	d002      	beq.n	8010562 <Sscan::Float(char const*, char const*, float&)+0x54>
 801055c:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8010560:	d1f0      	bne.n	8010544 <Sscan::Float(char const*, char const*, float&)+0x36>
 8010562:	f7f7 fbc5 	bl	8007cf0 <__aeabi_ui2f>
 8010566:	6030      	str	r0, [r6, #0]
 8010568:	7823      	ldrb	r3, [r4, #0]
 801056a:	4605      	mov	r5, r0
 801056c:	2b2e      	cmp	r3, #46	; 0x2e
 801056e:	d008      	beq.n	8010582 <Sscan::Float(char const*, char const*, float&)+0x74>
 8010570:	f1b8 0f00 	cmp.w	r8, #0
 8010574:	d101      	bne.n	801057a <Sscan::Float(char const*, char const*, float&)+0x6c>
 8010576:	2700      	movs	r7, #0
 8010578:	e7df      	b.n	801053a <Sscan::Float(char const*, char const*, float&)+0x2c>
 801057a:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 801057e:	6035      	str	r5, [r6, #0]
 8010580:	e7f9      	b.n	8010576 <Sscan::Float(char const*, char const*, float&)+0x68>
 8010582:	f04f 0901 	mov.w	r9, #1
 8010586:	2000      	movs	r0, #0
 8010588:	220a      	movs	r2, #10
 801058a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801058e:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8010592:	d111      	bne.n	80105b8 <Sscan::Float(char const*, char const*, float&)+0xaa>
 8010594:	f7f7 fbac 	bl	8007cf0 <__aeabi_ui2f>
 8010598:	4604      	mov	r4, r0
 801059a:	4648      	mov	r0, r9
 801059c:	f7f7 fba8 	bl	8007cf0 <__aeabi_ui2f>
 80105a0:	4601      	mov	r1, r0
 80105a2:	4620      	mov	r0, r4
 80105a4:	f7f7 ff22 	bl	80083ec <__aeabi_fdiv>
 80105a8:	4629      	mov	r1, r5
 80105aa:	f7f7 faf1 	bl	8007b90 <__addsf3>
 80105ae:	f1b8 0f00 	cmp.w	r8, #0
 80105b2:	d109      	bne.n	80105c8 <Sscan::Float(char const*, char const*, float&)+0xba>
 80105b4:	6030      	str	r0, [r6, #0]
 80105b6:	e7de      	b.n	8010576 <Sscan::Float(char const*, char const*, float&)+0x68>
 80105b8:	3b30      	subs	r3, #48	; 0x30
 80105ba:	2b09      	cmp	r3, #9
 80105bc:	d8bc      	bhi.n	8010538 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80105be:	fb02 3000 	mla	r0, r2, r0, r3
 80105c2:	fb02 f909 	mul.w	r9, r2, r9
 80105c6:	e7e0      	b.n	801058a <Sscan::Float(char const*, char const*, float&)+0x7c>
 80105c8:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80105cc:	6030      	str	r0, [r6, #0]
 80105ce:	e7b4      	b.n	801053a <Sscan::Float(char const*, char const*, float&)+0x2c>
 80105d0:	2701      	movs	r7, #1
 80105d2:	e7b2      	b.n	801053a <Sscan::Float(char const*, char const*, float&)+0x2c>

080105d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80105d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80105d6:	4615      	mov	r5, r2
 80105d8:	f000 f8a1 	bl	801071e <Sscan::checkName(char const*, char const*)>
 80105dc:	bb58      	cbnz	r0, 8010636 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 80105de:	2001      	movs	r0, #1
 80105e0:	e027      	b.n	8010632 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80105e2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80105e6:	2b09      	cmp	r3, #9
 80105e8:	d822      	bhi.n	8010630 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80105ea:	4603      	mov	r3, r0
 80105ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80105f0:	3930      	subs	r1, #48	; 0x30
 80105f2:	4618      	mov	r0, r3
 80105f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80105f8:	2a2e      	cmp	r2, #46	; 0x2e
 80105fa:	d115      	bne.n	8010628 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80105fc:	29ff      	cmp	r1, #255	; 0xff
 80105fe:	d817      	bhi.n	8010630 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8010600:	3401      	adds	r4, #1
 8010602:	2c03      	cmp	r4, #3
 8010604:	f806 1b01 	strb.w	r1, [r6], #1
 8010608:	d119      	bne.n	801063e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 801060a:	2400      	movs	r4, #0
 801060c:	260a      	movs	r6, #10
 801060e:	1d1a      	adds	r2, r3, #4
 8010610:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8010614:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8010618:	d115      	bne.n	8010646 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 801061a:	2cff      	cmp	r4, #255	; 0xff
 801061c:	d808      	bhi.n	8010630 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801061e:	f88d 4007 	strb.w	r4, [sp, #7]
 8010622:	9b01      	ldr	r3, [sp, #4]
 8010624:	602b      	str	r3, [r5, #0]
 8010626:	e004      	b.n	8010632 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8010628:	2a00      	cmp	r2, #0
 801062a:	d0e7      	beq.n	80105fc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801062c:	42b8      	cmp	r0, r7
 801062e:	d1d8      	bne.n	80105e2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8010630:	2002      	movs	r0, #2
 8010632:	b003      	add	sp, #12
 8010634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010636:	2400      	movs	r4, #0
 8010638:	f04f 0c0a 	mov.w	ip, #10
 801063c:	ae01      	add	r6, sp, #4
 801063e:	4603      	mov	r3, r0
 8010640:	2100      	movs	r1, #0
 8010642:	1d07      	adds	r7, r0, #4
 8010644:	e7d5      	b.n	80105f2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8010646:	4293      	cmp	r3, r2
 8010648:	d0f2      	beq.n	8010630 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801064a:	3930      	subs	r1, #48	; 0x30
 801064c:	2909      	cmp	r1, #9
 801064e:	d8ef      	bhi.n	8010630 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8010650:	fb06 1404 	mla	r4, r6, r4, r1
 8010654:	e7dc      	b.n	8010610 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08010656 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8010656:	b538      	push	{r3, r4, r5, lr}
 8010658:	4615      	mov	r5, r2
 801065a:	f000 f860 	bl	801071e <Sscan::checkName(char const*, char const*)>
 801065e:	b1a0      	cbz	r0, 801068a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8010660:	4604      	mov	r4, r0
 8010662:	2100      	movs	r1, #0
 8010664:	220a      	movs	r2, #10
 8010666:	7823      	ldrb	r3, [r4, #0]
 8010668:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801066c:	2809      	cmp	r0, #9
 801066e:	d80e      	bhi.n	801068e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010670:	fb02 3101 	mla	r1, r2, r1, r3
 8010674:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010678:	3930      	subs	r1, #48	; 0x30
 801067a:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801067e:	d1f2      	bne.n	8010666 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8010680:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8010684:	d203      	bcs.n	801068e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010686:	8029      	strh	r1, [r5, #0]
 8010688:	bd38      	pop	{r3, r4, r5, pc}
 801068a:	2001      	movs	r0, #1
 801068c:	e7fc      	b.n	8010688 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 801068e:	2002      	movs	r0, #2
 8010690:	e7fa      	b.n	8010688 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08010692 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8010692:	b570      	push	{r4, r5, r6, lr}
 8010694:	4615      	mov	r5, r2
 8010696:	f000 f842 	bl	801071e <Sscan::checkName(char const*, char const*)>
 801069a:	b1f8      	cbz	r0, 80106dc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 801069c:	2300      	movs	r3, #0
 801069e:	4604      	mov	r4, r0
 80106a0:	461a      	mov	r2, r3
 80106a2:	260a      	movs	r6, #10
 80106a4:	7820      	ldrb	r0, [r4, #0]
 80106a6:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 80106aa:	2909      	cmp	r1, #9
 80106ac:	d818      	bhi.n	80106e0 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80106ae:	fba3 3106 	umull	r3, r1, r3, r6
 80106b2:	fb06 1102 	mla	r1, r6, r2, r1
 80106b6:	3b30      	subs	r3, #48	; 0x30
 80106b8:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 80106bc:	18c3      	adds	r3, r0, r3
 80106be:	f141 0200 	adc.w	r2, r1, #0
 80106c2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80106c6:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80106ca:	d1eb      	bne.n	80106a4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 80106cc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80106d0:	4299      	cmp	r1, r3
 80106d2:	eb70 0202 	sbcs.w	r2, r0, r2
 80106d6:	d303      	bcc.n	80106e0 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80106d8:	602b      	str	r3, [r5, #0]
 80106da:	bd70      	pop	{r4, r5, r6, pc}
 80106dc:	2001      	movs	r0, #1
 80106de:	e7fc      	b.n	80106da <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 80106e0:	2002      	movs	r0, #2
 80106e2:	e7fa      	b.n	80106da <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

080106e4 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80106e4:	b538      	push	{r3, r4, r5, lr}
 80106e6:	4615      	mov	r5, r2
 80106e8:	f000 f819 	bl	801071e <Sscan::checkName(char const*, char const*)>
 80106ec:	b198      	cbz	r0, 8010716 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80106ee:	4604      	mov	r4, r0
 80106f0:	2100      	movs	r1, #0
 80106f2:	220a      	movs	r2, #10
 80106f4:	7823      	ldrb	r3, [r4, #0]
 80106f6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80106fa:	2809      	cmp	r0, #9
 80106fc:	d80d      	bhi.n	801071a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80106fe:	fb02 3101 	mla	r1, r2, r1, r3
 8010702:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010706:	3930      	subs	r1, #48	; 0x30
 8010708:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801070c:	d1f2      	bne.n	80106f4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 801070e:	29ff      	cmp	r1, #255	; 0xff
 8010710:	d803      	bhi.n	801071a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8010712:	7029      	strb	r1, [r5, #0]
 8010714:	bd38      	pop	{r3, r4, r5, pc}
 8010716:	2001      	movs	r0, #1
 8010718:	e7fc      	b.n	8010714 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 801071a:	2002      	movs	r0, #2
 801071c:	e7fa      	b.n	8010714 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0801071e <Sscan::checkName(char const*, char const*)>:
 801071e:	4603      	mov	r3, r0
 8010720:	b510      	push	{r4, lr}
 8010722:	3901      	subs	r1, #1
 8010724:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8010728:	461c      	mov	r4, r3
 801072a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801072e:	b120      	cbz	r0, 801073a <Sscan::checkName(char const*, char const*)+0x1c>
 8010730:	b10a      	cbz	r2, 8010736 <Sscan::checkName(char const*, char const*)+0x18>
 8010732:	4290      	cmp	r0, r2
 8010734:	d0f6      	beq.n	8010724 <Sscan::checkName(char const*, char const*)+0x6>
 8010736:	2000      	movs	r0, #0
 8010738:	e006      	b.n	8010748 <Sscan::checkName(char const*, char const*)+0x2a>
 801073a:	2a3d      	cmp	r2, #61	; 0x3d
 801073c:	d104      	bne.n	8010748 <Sscan::checkName(char const*, char const*)+0x2a>
 801073e:	7860      	ldrb	r0, [r4, #1]
 8010740:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8010744:	d000      	beq.n	8010748 <Sscan::checkName(char const*, char const*)+0x2a>
 8010746:	1c60      	adds	r0, r4, #1
 8010748:	bd10      	pop	{r4, pc}

0801074a <display::timeout::gpio_init()>:
 801074a:	4770      	bx	lr

0801074c <display::timeout::gpio_renew()>:
 801074c:	2000      	movs	r0, #0
 801074e:	4770      	bx	lr

08010750 <Display::PrintInfo() [clone .isra.0]>:
 8010750:	b910      	cbnz	r0, 8010758 <Display::PrintInfo() [clone .isra.0]+0x8>
 8010752:	4803      	ldr	r0, [pc, #12]	; (8010760 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8010754:	f000 bce9 	b.w	801112a <puts>
 8010758:	6803      	ldr	r3, [r0, #0]
 801075a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801075c:	4718      	bx	r3
 801075e:	bf00      	nop
 8010760:	08015657 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sl, ip, lr}

08010764 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8010764:	b513      	push	{r0, r1, r4, lr}
 8010766:	4604      	mov	r4, r0
 8010768:	0a13      	lsrs	r3, r2, #8
 801076a:	7800      	ldrb	r0, [r0, #0]
 801076c:	f88d 1004 	strb.w	r1, [sp, #4]
 8010770:	f88d 3005 	strb.w	r3, [sp, #5]
 8010774:	f88d 2006 	strb.w	r2, [sp, #6]
 8010778:	f001 ff1e 	bl	80125b8 <gd32_i2c_set_address>
 801077c:	6860      	ldr	r0, [r4, #4]
 801077e:	f001 ff13 	bl	80125a8 <gd32_i2c_set_baudrate>
 8010782:	2103      	movs	r1, #3
 8010784:	a801      	add	r0, sp, #4
 8010786:	f001 ff1d 	bl	80125c4 <gd32_i2c_write>
 801078a:	b002      	add	sp, #8
 801078c:	bd10      	pop	{r4, pc}

0801078e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 801078e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010790:	460d      	mov	r5, r1
 8010792:	4604      	mov	r4, r0
 8010794:	f001 ff10 	bl	80125b8 <gd32_i2c_set_address>
 8010798:	4628      	mov	r0, r5
 801079a:	f001 ff05 	bl	80125a8 <gd32_i2c_set_baudrate>
 801079e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80107a2:	2b07      	cmp	r3, #7
 80107a4:	d902      	bls.n	80107ac <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80107a6:	3c50      	subs	r4, #80	; 0x50
 80107a8:	2c0f      	cmp	r4, #15
 80107aa:	d809      	bhi.n	80107c0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80107ac:	2101      	movs	r1, #1
 80107ae:	f10d 0007 	add.w	r0, sp, #7
 80107b2:	f001 ff6d 	bl	8012690 <gd32_i2c_read>
 80107b6:	fab0 f080 	clz	r0, r0
 80107ba:	0940      	lsrs	r0, r0, #5
 80107bc:	b003      	add	sp, #12
 80107be:	bd30      	pop	{r4, r5, pc}
 80107c0:	2100      	movs	r1, #0
 80107c2:	4608      	mov	r0, r1
 80107c4:	f001 fefe 	bl	80125c4 <gd32_i2c_write>
 80107c8:	e7f5      	b.n	80107b6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080107ca <Display::Detect7Segment()>:
 80107ca:	b538      	push	{r3, r4, r5, lr}
 80107cc:	68c1      	ldr	r1, [r0, #12]
 80107ce:	4604      	mov	r4, r0
 80107d0:	7a00      	ldrb	r0, [r0, #8]
 80107d2:	f7ff ffdc 	bl	801078e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80107d6:	7460      	strb	r0, [r4, #17]
 80107d8:	b170      	cbz	r0, 80107f8 <Display::Detect7Segment()+0x2e>
 80107da:	2200      	movs	r2, #0
 80107dc:	f104 0508 	add.w	r5, r4, #8
 80107e0:	4611      	mov	r1, r2
 80107e2:	4628      	mov	r0, r5
 80107e4:	f7ff ffbe 	bl	8010764 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80107e8:	7c63      	ldrb	r3, [r4, #17]
 80107ea:	b12b      	cbz	r3, 80107f8 <Display::Detect7Segment()+0x2e>
 80107ec:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80107f0:	2112      	movs	r1, #18
 80107f2:	4628      	mov	r0, r5
 80107f4:	f7ff ffb6 	bl	8010764 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80107f8:	bd38      	pop	{r3, r4, r5, pc}

080107fa <Display::Detect(display::Type)>:
 80107fa:	2902      	cmp	r1, #2
 80107fc:	b538      	push	{r3, r4, r5, lr}
 80107fe:	4604      	mov	r4, r0
 8010800:	d014      	beq.n	801082c <Display::Detect(display::Type)+0x32>
 8010802:	2904      	cmp	r1, #4
 8010804:	d01b      	beq.n	801083e <Display::Detect(display::Type)+0x44>
 8010806:	69a0      	ldr	r0, [r4, #24]
 8010808:	b168      	cbz	r0, 8010826 <Display::Detect(display::Type)+0x2c>
 801080a:	6803      	ldr	r3, [r0, #0]
 801080c:	689b      	ldr	r3, [r3, #8]
 801080e:	4798      	blx	r3
 8010810:	4603      	mov	r3, r0
 8010812:	69a0      	ldr	r0, [r4, #24]
 8010814:	b9ab      	cbnz	r3, 8010842 <Display::Detect(display::Type)+0x48>
 8010816:	b110      	cbz	r0, 801081e <Display::Detect(display::Type)+0x24>
 8010818:	6803      	ldr	r3, [r0, #0]
 801081a:	685b      	ldr	r3, [r3, #4]
 801081c:	4798      	blx	r3
 801081e:	2300      	movs	r3, #0
 8010820:	61a3      	str	r3, [r4, #24]
 8010822:	2304      	movs	r3, #4
 8010824:	6023      	str	r3, [r4, #0]
 8010826:	2300      	movs	r3, #0
 8010828:	6163      	str	r3, [r4, #20]
 801082a:	e010      	b.n	801084e <Display::Detect(display::Type)+0x54>
 801082c:	2018      	movs	r0, #24
 801082e:	f000 fbad 	bl	8010f8c <operator new(unsigned int)>
 8010832:	4605      	mov	r5, r0
 8010834:	2100      	movs	r1, #0
 8010836:	f000 f89d 	bl	8010974 <Ssd1306::Ssd1306(TOledPanel)>
 801083a:	61a5      	str	r5, [r4, #24]
 801083c:	e7e3      	b.n	8010806 <Display::Detect(display::Type)+0xc>
 801083e:	6001      	str	r1, [r0, #0]
 8010840:	e7e1      	b.n	8010806 <Display::Detect(display::Type)+0xc>
 8010842:	6803      	ldr	r3, [r0, #0]
 8010844:	68db      	ldr	r3, [r3, #12]
 8010846:	4798      	blx	r3
 8010848:	69a3      	ldr	r3, [r4, #24]
 801084a:	2b00      	cmp	r3, #0
 801084c:	d0eb      	beq.n	8010826 <Display::Detect(display::Type)+0x2c>
 801084e:	bd38      	pop	{r3, r4, r5, pc}

08010850 <Display::Display()>:
 8010850:	2304      	movs	r3, #4
 8010852:	b510      	push	{r4, lr}
 8010854:	6003      	str	r3, [r0, #0]
 8010856:	4b0f      	ldr	r3, [pc, #60]	; (8010894 <Display::Display()+0x44>)
 8010858:	4604      	mov	r4, r0
 801085a:	681b      	ldr	r3, [r3, #0]
 801085c:	4a0e      	ldr	r2, [pc, #56]	; (8010898 <Display::Display()+0x48>)
 801085e:	6043      	str	r3, [r0, #4]
 8010860:	2321      	movs	r3, #33	; 0x21
 8010862:	7203      	strb	r3, [r0, #8]
 8010864:	4b0d      	ldr	r3, [pc, #52]	; (801089c <Display::Display()+0x4c>)
 8010866:	2102      	movs	r1, #2
 8010868:	60c3      	str	r3, [r0, #12]
 801086a:	2300      	movs	r3, #0
 801086c:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8010870:	8203      	strh	r3, [r0, #16]
 8010872:	4b0b      	ldr	r3, [pc, #44]	; (80108a0 <Display::Display()+0x50>)
 8010874:	6018      	str	r0, [r3, #0]
 8010876:	f7ff ffc0 	bl	80107fa <Display::Detect(display::Type)>
 801087a:	4620      	mov	r0, r4
 801087c:	f7ff ffa5 	bl	80107ca <Display::Detect7Segment()>
 8010880:	69a3      	ldr	r3, [r4, #24]
 8010882:	b10b      	cbz	r3, 8010888 <Display::Display()+0x38>
 8010884:	f7ff ff61 	bl	801074a <display::timeout::gpio_init()>
 8010888:	69a0      	ldr	r0, [r4, #24]
 801088a:	f7ff ff61 	bl	8010750 <Display::PrintInfo() [clone .isra.0]>
 801088e:	4620      	mov	r0, r4
 8010890:	bd10      	pop	{r4, pc}
 8010892:	bf00      	nop
 8010894:	20009c84 	andcs	r9, r0, r4, lsl #25
 8010898:	000493e0 	andeq	r9, r4, r0, ror #7
 801089c:	00061a80 	andeq	r1, r6, r0, lsl #21
 80108a0:	20009b80 	andcs	r9, r0, r0, lsl #23

080108a4 <Ssd1306::~Ssd1306()>:
 80108a4:	4770      	bx	lr

080108a6 <Ssd1306::SetCursor(unsigned int)>:
 80108a6:	4770      	bx	lr

080108a8 <Ssd1306::PrintInfo()>:
 80108a8:	b410      	push	{r4}
 80108aa:	4906      	ldr	r1, [pc, #24]	; (80108c4 <Ssd1306::PrintInfo()+0x1c>)
 80108ac:	7c44      	ldrb	r4, [r0, #17]
 80108ae:	7903      	ldrb	r3, [r0, #4]
 80108b0:	7942      	ldrb	r2, [r0, #5]
 80108b2:	4805      	ldr	r0, [pc, #20]	; (80108c8 <Ssd1306::PrintInfo()+0x20>)
 80108b4:	2c00      	cmp	r4, #0
 80108b6:	bf08      	it	eq
 80108b8:	4601      	moveq	r1, r0
 80108ba:	4804      	ldr	r0, [pc, #16]	; (80108cc <Ssd1306::PrintInfo()+0x24>)
 80108bc:	bc10      	pop	{r4}
 80108be:	f7f8 bd0d 	b.w	80092dc <printf>
 80108c2:	bf00      	nop
 80108c4:	08015668 	stmdaeq	r1, {r3, r5, r6, r9, sl, ip, lr}
 80108c8:	0801566f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, ip, lr}
 80108cc:	08015677 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r9, sl, ip, lr}

080108d0 <Ssd1306::~Ssd1306()>:
 80108d0:	b510      	push	{r4, lr}
 80108d2:	4604      	mov	r4, r0
 80108d4:	f000 fb56 	bl	8010f84 <operator delete(void*)>
 80108d8:	4620      	mov	r0, r4
 80108da:	bd10      	pop	{r4, pc}

080108dc <HAL_I2C::Setup()>:
 80108dc:	b510      	push	{r4, lr}
 80108de:	4604      	mov	r4, r0
 80108e0:	7800      	ldrb	r0, [r0, #0]
 80108e2:	f001 fe69 	bl	80125b8 <gd32_i2c_set_address>
 80108e6:	6860      	ldr	r0, [r4, #4]
 80108e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108ec:	f001 be5c 	b.w	80125a8 <gd32_i2c_set_baudrate>

080108f0 <Ssd1306::PutChar(int)>:
 80108f0:	b510      	push	{r4, lr}
 80108f2:	f1a1 0420 	sub.w	r4, r1, #32
 80108f6:	2c5f      	cmp	r4, #95	; 0x5f
 80108f8:	bf88      	it	hi
 80108fa:	2400      	movhi	r4, #0
 80108fc:	3008      	adds	r0, #8
 80108fe:	f7ff ffed 	bl	80108dc <HAL_I2C::Setup()>
 8010902:	4804      	ldr	r0, [pc, #16]	; (8010914 <Ssd1306::PutChar(int)+0x24>)
 8010904:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8010908:	4420      	add	r0, r4
 801090a:	2107      	movs	r1, #7
 801090c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010910:	f001 be58 	b.w	80125c4 <gd32_i2c_write>
 8010914:	0801568c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, lr}

08010918 <Ssd1306::PutString(char const*)>:
 8010918:	b538      	push	{r3, r4, r5, lr}
 801091a:	4605      	mov	r5, r0
 801091c:	1e4c      	subs	r4, r1, #1
 801091e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8010922:	b901      	cbnz	r1, 8010926 <Ssd1306::PutString(char const*)+0xe>
 8010924:	bd38      	pop	{r3, r4, r5, pc}
 8010926:	4628      	mov	r0, r5
 8010928:	f7ff ffe2 	bl	80108f0 <Ssd1306::PutChar(int)>
 801092c:	e7f7      	b.n	801091e <Ssd1306::PutString(char const*)+0x6>

0801092e <Ssd1306::Text(char const*, unsigned int)>:
 801092e:	b570      	push	{r4, r5, r6, lr}
 8010930:	7903      	ldrb	r3, [r0, #4]
 8010932:	4605      	mov	r5, r0
 8010934:	460c      	mov	r4, r1
 8010936:	4293      	cmp	r3, r2
 8010938:	bf94      	ite	ls
 801093a:	18ce      	addls	r6, r1, r3
 801093c:	188e      	addhi	r6, r1, r2
 801093e:	42b4      	cmp	r4, r6
 8010940:	d100      	bne.n	8010944 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8010942:	bd70      	pop	{r4, r5, r6, pc}
 8010944:	4628      	mov	r0, r5
 8010946:	f814 1b01 	ldrb.w	r1, [r4], #1
 801094a:	f7ff ffd1 	bl	80108f0 <Ssd1306::PutChar(int)>
 801094e:	e7f6      	b.n	801093e <Ssd1306::Text(char const*, unsigned int)+0x10>

08010950 <Ssd1306::InitMembers()>:
 8010950:	7c03      	ldrb	r3, [r0, #16]
 8010952:	b14b      	cbz	r3, 8010968 <Ssd1306::InitMembers()+0x18>
 8010954:	3b01      	subs	r3, #1
 8010956:	2b01      	cmp	r3, #1
 8010958:	d909      	bls.n	801096e <Ssd1306::InitMembers()+0x1e>
 801095a:	2308      	movs	r3, #8
 801095c:	2204      	movs	r2, #4
 801095e:	2115      	movs	r1, #21
 8010960:	7143      	strb	r3, [r0, #5]
 8010962:	7101      	strb	r1, [r0, #4]
 8010964:	6142      	str	r2, [r0, #20]
 8010966:	4770      	bx	lr
 8010968:	2308      	movs	r3, #8
 801096a:	461a      	mov	r2, r3
 801096c:	e7f7      	b.n	801095e <Ssd1306::InitMembers()+0xe>
 801096e:	2304      	movs	r3, #4
 8010970:	e7fb      	b.n	801096a <Ssd1306::InitMembers()+0x1a>
	...

08010974 <Ssd1306::Ssd1306(TOledPanel)>:
 8010974:	4a08      	ldr	r2, [pc, #32]	; (8010998 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8010976:	b508      	push	{r3, lr}
 8010978:	6002      	str	r2, [r0, #0]
 801097a:	227f      	movs	r2, #127	; 0x7f
 801097c:	80c2      	strh	r2, [r0, #6]
 801097e:	223c      	movs	r2, #60	; 0x3c
 8010980:	7202      	strb	r2, [r0, #8]
 8010982:	4a06      	ldr	r2, [pc, #24]	; (801099c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8010984:	7401      	strb	r1, [r0, #16]
 8010986:	60c2      	str	r2, [r0, #12]
 8010988:	2200      	movs	r2, #0
 801098a:	7442      	strb	r2, [r0, #17]
 801098c:	4a04      	ldr	r2, [pc, #16]	; (80109a0 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 801098e:	6010      	str	r0, [r2, #0]
 8010990:	f7ff ffde 	bl	8010950 <Ssd1306::InitMembers()>
 8010994:	bd08      	pop	{r3, pc}
 8010996:	bf00      	nop
 8010998:	08015964 	stmdaeq	r1, {r2, r5, r6, r8, fp, ip, lr}
 801099c:	00061a80 	andeq	r1, r6, r0, lsl #21
 80109a0:	20009c0c 	andcs	r9, r0, ip, lsl #24

080109a4 <Ssd1306::SendCommand(unsigned char)>:
 80109a4:	2300      	movs	r3, #0
 80109a6:	b507      	push	{r0, r1, r2, lr}
 80109a8:	3008      	adds	r0, #8
 80109aa:	f88d 3004 	strb.w	r3, [sp, #4]
 80109ae:	f88d 1005 	strb.w	r1, [sp, #5]
 80109b2:	f7ff ff93 	bl	80108dc <HAL_I2C::Setup()>
 80109b6:	2102      	movs	r1, #2
 80109b8:	a801      	add	r0, sp, #4
 80109ba:	f001 fe03 	bl	80125c4 <gd32_i2c_write>
 80109be:	b003      	add	sp, #12
 80109c0:	f85d fb04 	ldr.w	pc, [sp], #4

080109c4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80109c4:	2914      	cmp	r1, #20
 80109c6:	b570      	push	{r4, r5, r6, lr}
 80109c8:	4605      	mov	r5, r0
 80109ca:	4616      	mov	r6, r2
 80109cc:	d81c      	bhi.n	8010a08 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80109ce:	7943      	ldrb	r3, [r0, #5]
 80109d0:	4293      	cmp	r3, r2
 80109d2:	d919      	bls.n	8010a08 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80109d4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80109d8:	7c43      	ldrb	r3, [r0, #17]
 80109da:	004c      	lsls	r4, r1, #1
 80109dc:	b2e4      	uxtb	r4, r4
 80109de:	b10b      	cbz	r3, 80109e4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 80109e0:	3404      	adds	r4, #4
 80109e2:	b2e4      	uxtb	r4, r4
 80109e4:	4628      	mov	r0, r5
 80109e6:	f004 010e 	and.w	r1, r4, #14
 80109ea:	f7ff ffdb 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 80109ee:	0921      	lsrs	r1, r4, #4
 80109f0:	4628      	mov	r0, r5
 80109f2:	f041 0110 	orr.w	r1, r1, #16
 80109f6:	f7ff ffd5 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 80109fa:	4628      	mov	r0, r5
 80109fc:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8010a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a04:	f7ff bfce 	b.w	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010a08:	bd70      	pop	{r4, r5, r6, pc}

08010a0a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8010a0a:	b570      	push	{r4, r5, r6, lr}
 8010a0c:	461e      	mov	r6, r3
 8010a0e:	7943      	ldrb	r3, [r0, #5]
 8010a10:	4604      	mov	r4, r0
 8010a12:	428b      	cmp	r3, r1
 8010a14:	4615      	mov	r5, r2
 8010a16:	d30b      	bcc.n	8010a30 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8010a18:	3901      	subs	r1, #1
 8010a1a:	b2ca      	uxtb	r2, r1
 8010a1c:	2100      	movs	r1, #0
 8010a1e:	f7ff ffd1 	bl	80109c4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a22:	4632      	mov	r2, r6
 8010a24:	4629      	mov	r1, r5
 8010a26:	4620      	mov	r0, r4
 8010a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a2c:	f7ff bf7f 	b.w	801092e <Ssd1306::Text(char const*, unsigned int)>
 8010a30:	bd70      	pop	{r4, r5, r6, pc}
	...

08010a34 <Ssd1306::ClearLine(unsigned char)>:
 8010a34:	b538      	push	{r3, r4, r5, lr}
 8010a36:	7943      	ldrb	r3, [r0, #5]
 8010a38:	4605      	mov	r5, r0
 8010a3a:	428b      	cmp	r3, r1
 8010a3c:	d314      	bcc.n	8010a68 <Ssd1306::ClearLine(unsigned char)+0x34>
 8010a3e:	3901      	subs	r1, #1
 8010a40:	b2cc      	uxtb	r4, r1
 8010a42:	4622      	mov	r2, r4
 8010a44:	2100      	movs	r1, #0
 8010a46:	f7ff ffbd 	bl	80109c4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a4a:	f105 0008 	add.w	r0, r5, #8
 8010a4e:	f7ff ff45 	bl	80108dc <HAL_I2C::Setup()>
 8010a52:	2181      	movs	r1, #129	; 0x81
 8010a54:	4805      	ldr	r0, [pc, #20]	; (8010a6c <Ssd1306::ClearLine(unsigned char)+0x38>)
 8010a56:	f001 fdb5 	bl	80125c4 <gd32_i2c_write>
 8010a5a:	4622      	mov	r2, r4
 8010a5c:	4628      	mov	r0, r5
 8010a5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a62:	2100      	movs	r1, #0
 8010a64:	f7ff bfae 	b.w	80109c4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a68:	bd38      	pop	{r3, r4, r5, pc}
 8010a6a:	bf00      	nop
 8010a6c:	20009b84 	andcs	r9, r0, r4, lsl #23

08010a70 <Ssd1306::SetSleep(bool)>:
 8010a70:	b111      	cbz	r1, 8010a78 <Ssd1306::SetSleep(bool)+0x8>
 8010a72:	21ae      	movs	r1, #174	; 0xae
 8010a74:	f7ff bf96 	b.w	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010a78:	21af      	movs	r1, #175	; 0xaf
 8010a7a:	e7fb      	b.n	8010a74 <Ssd1306::SetSleep(bool)+0x4>

08010a7c <Ssd1306::SetContrast(unsigned char)>:
 8010a7c:	b538      	push	{r3, r4, r5, lr}
 8010a7e:	4604      	mov	r4, r0
 8010a80:	460d      	mov	r5, r1
 8010a82:	7181      	strb	r1, [r0, #6]
 8010a84:	2181      	movs	r1, #129	; 0x81
 8010a86:	f7ff ff8d 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010a8a:	4629      	mov	r1, r5
 8010a8c:	4620      	mov	r0, r4
 8010a8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a92:	f7ff bf87 	b.w	80109a4 <Ssd1306::SendCommand(unsigned char)>

08010a96 <Ssd1306::SetFlipVertically(bool)>:
 8010a96:	b510      	push	{r4, lr}
 8010a98:	4604      	mov	r4, r0
 8010a9a:	71c1      	strb	r1, [r0, #7]
 8010a9c:	b141      	cbz	r1, 8010ab0 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8010a9e:	21c0      	movs	r1, #192	; 0xc0
 8010aa0:	f7ff ff80 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010aa4:	21a0      	movs	r1, #160	; 0xa0
 8010aa6:	4620      	mov	r0, r4
 8010aa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010aac:	f7ff bf7a 	b.w	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ab0:	21c8      	movs	r1, #200	; 0xc8
 8010ab2:	f7ff ff77 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ab6:	21a1      	movs	r1, #161	; 0xa1
 8010ab8:	e7f5      	b.n	8010aa6 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08010abc <Ssd1306::CheckSH1106()>:
 8010abc:	b530      	push	{r4, r5, lr}
 8010abe:	4604      	mov	r4, r0
 8010ac0:	b087      	sub	sp, #28
 8010ac2:	2100      	movs	r1, #0
 8010ac4:	f7ff ff6e 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ac8:	2190      	movs	r1, #144	; 0x90
 8010aca:	4620      	mov	r0, r4
 8010acc:	f7ff ff6a 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ad0:	21b0      	movs	r1, #176	; 0xb0
 8010ad2:	4620      	mov	r0, r4
 8010ad4:	f7ff ff66 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ad8:	4b22      	ldr	r3, [pc, #136]	; (8010b64 <Ssd1306::CheckSH1106()+0xa8>)
 8010ada:	f104 0508 	add.w	r5, r4, #8
 8010ade:	6818      	ldr	r0, [r3, #0]
 8010ae0:	791b      	ldrb	r3, [r3, #4]
 8010ae2:	9002      	str	r0, [sp, #8]
 8010ae4:	4628      	mov	r0, r5
 8010ae6:	f88d 300c 	strb.w	r3, [sp, #12]
 8010aea:	f7ff fef7 	bl	80108dc <HAL_I2C::Setup()>
 8010aee:	2105      	movs	r1, #5
 8010af0:	a802      	add	r0, sp, #8
 8010af2:	f001 fd67 	bl	80125c4 <gd32_i2c_write>
 8010af6:	2100      	movs	r1, #0
 8010af8:	4620      	mov	r0, r4
 8010afa:	f7ff ff53 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010afe:	2190      	movs	r1, #144	; 0x90
 8010b00:	4620      	mov	r0, r4
 8010b02:	f7ff ff4f 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010b06:	21b0      	movs	r1, #176	; 0xb0
 8010b08:	4620      	mov	r0, r4
 8010b0a:	f7ff ff4b 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010b0e:	2300      	movs	r3, #0
 8010b10:	9304      	str	r3, [sp, #16]
 8010b12:	f88d 3014 	strb.w	r3, [sp, #20]
 8010b16:	2340      	movs	r3, #64	; 0x40
 8010b18:	4628      	mov	r0, r5
 8010b1a:	f88d 3007 	strb.w	r3, [sp, #7]
 8010b1e:	f7ff fedd 	bl	80108dc <HAL_I2C::Setup()>
 8010b22:	2101      	movs	r1, #1
 8010b24:	f10d 0007 	add.w	r0, sp, #7
 8010b28:	f001 fd4c 	bl	80125c4 <gd32_i2c_write>
 8010b2c:	4628      	mov	r0, r5
 8010b2e:	f7ff fed5 	bl	80108dc <HAL_I2C::Setup()>
 8010b32:	2105      	movs	r1, #5
 8010b34:	a804      	add	r0, sp, #16
 8010b36:	f001 fdab 	bl	8012690 <gd32_i2c_read>
 8010b3a:	2004      	movs	r0, #4
 8010b3c:	aa02      	add	r2, sp, #8
 8010b3e:	a904      	add	r1, sp, #16
 8010b40:	3801      	subs	r0, #1
 8010b42:	d201      	bcs.n	8010b48 <Ssd1306::CheckSH1106()+0x8c>
 8010b44:	2300      	movs	r3, #0
 8010b46:	e006      	b.n	8010b56 <Ssd1306::CheckSH1106()+0x9a>
 8010b48:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8010b4c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8010b50:	42ab      	cmp	r3, r5
 8010b52:	d0f5      	beq.n	8010b40 <Ssd1306::CheckSH1106()+0x84>
 8010b54:	1b5b      	subs	r3, r3, r5
 8010b56:	fab3 f383 	clz	r3, r3
 8010b5a:	095b      	lsrs	r3, r3, #5
 8010b5c:	7463      	strb	r3, [r4, #17]
 8010b5e:	b007      	add	sp, #28
 8010b60:	bd30      	pop	{r4, r5, pc}
 8010b62:	bf00      	nop
 8010b64:	08015683 	stmdaeq	r1, {r0, r1, r7, r9, sl, ip, lr}

08010b68 <Ssd1306::Cls()>:
 8010b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b6c:	4604      	mov	r4, r0
 8010b6e:	2600      	movs	r6, #0
 8010b70:	7c45      	ldrb	r5, [r0, #17]
 8010b72:	00ad      	lsls	r5, r5, #2
 8010b74:	b2ed      	uxtb	r5, r5
 8010b76:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8010b7a:	f045 0810 	orr.w	r8, r5, #16
 8010b7e:	b2ff      	uxtb	r7, r7
 8010b80:	6963      	ldr	r3, [r4, #20]
 8010b82:	4629      	mov	r1, r5
 8010b84:	42b3      	cmp	r3, r6
 8010b86:	4620      	mov	r0, r4
 8010b88:	d80b      	bhi.n	8010ba2 <Ssd1306::Cls()+0x3a>
 8010b8a:	f7ff ff0b 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010b8e:	4641      	mov	r1, r8
 8010b90:	4620      	mov	r0, r4
 8010b92:	f7ff ff07 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010b96:	4620      	mov	r0, r4
 8010b98:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010b9c:	21b0      	movs	r1, #176	; 0xb0
 8010b9e:	f7ff bf01 	b.w	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ba2:	f7ff feff 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010ba6:	4641      	mov	r1, r8
 8010ba8:	4620      	mov	r0, r4
 8010baa:	f7ff fefb 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010bae:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8010bb2:	4620      	mov	r0, r4
 8010bb4:	b2c9      	uxtb	r1, r1
 8010bb6:	f7ff fef5 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010bba:	7c23      	ldrb	r3, [r4, #16]
 8010bbc:	b123      	cbz	r3, 8010bc8 <Ssd1306::Cls()+0x60>
 8010bbe:	3b01      	subs	r3, #1
 8010bc0:	2b01      	cmp	r3, #1
 8010bc2:	d901      	bls.n	8010bc8 <Ssd1306::Cls()+0x60>
 8010bc4:	3601      	adds	r6, #1
 8010bc6:	e7db      	b.n	8010b80 <Ssd1306::Cls()+0x18>
 8010bc8:	f104 0008 	add.w	r0, r4, #8
 8010bcc:	f7ff fe86 	bl	80108dc <HAL_I2C::Setup()>
 8010bd0:	4639      	mov	r1, r7
 8010bd2:	4802      	ldr	r0, [pc, #8]	; (8010bdc <Ssd1306::Cls()+0x74>)
 8010bd4:	f001 fcf6 	bl	80125c4 <gd32_i2c_write>
 8010bd8:	e7f4      	b.n	8010bc4 <Ssd1306::Cls()+0x5c>
 8010bda:	bf00      	nop
 8010bdc:	20009b84 	andcs	r9, r0, r4, lsl #23

08010be0 <Ssd1306::Start()>:
 8010be0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010be2:	7a04      	ldrb	r4, [r0, #8]
 8010be4:	68c6      	ldr	r6, [r0, #12]
 8010be6:	4605      	mov	r5, r0
 8010be8:	4620      	mov	r0, r4
 8010bea:	f001 fce5 	bl	80125b8 <gd32_i2c_set_address>
 8010bee:	4630      	mov	r0, r6
 8010bf0:	f001 fcda 	bl	80125a8 <gd32_i2c_set_baudrate>
 8010bf4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010bf8:	2b07      	cmp	r3, #7
 8010bfa:	d902      	bls.n	8010c02 <Ssd1306::Start()+0x22>
 8010bfc:	3c50      	subs	r4, #80	; 0x50
 8010bfe:	2c0f      	cmp	r4, #15
 8010c00:	d80f      	bhi.n	8010c22 <Ssd1306::Start()+0x42>
 8010c02:	2101      	movs	r1, #1
 8010c04:	f10d 0007 	add.w	r0, sp, #7
 8010c08:	f001 fd42 	bl	8012690 <gd32_i2c_read>
 8010c0c:	fab0 f480 	clz	r4, r0
 8010c10:	0964      	lsrs	r4, r4, #5
 8010c12:	b35c      	cbz	r4, 8010c6c <Ssd1306::Start()+0x8c>
 8010c14:	7c2e      	ldrb	r6, [r5, #16]
 8010c16:	b14e      	cbz	r6, 8010c2c <Ssd1306::Start()+0x4c>
 8010c18:	3e01      	subs	r6, #1
 8010c1a:	2e01      	cmp	r6, #1
 8010c1c:	d929      	bls.n	8010c72 <Ssd1306::Start()+0x92>
 8010c1e:	2400      	movs	r4, #0
 8010c20:	e024      	b.n	8010c6c <Ssd1306::Start()+0x8c>
 8010c22:	2100      	movs	r1, #0
 8010c24:	4608      	mov	r0, r1
 8010c26:	f001 fccd 	bl	80125c4 <gd32_i2c_write>
 8010c2a:	e7ef      	b.n	8010c0c <Ssd1306::Start()+0x2c>
 8010c2c:	4f16      	ldr	r7, [pc, #88]	; (8010c88 <Ssd1306::Start()+0xa8>)
 8010c2e:	4628      	mov	r0, r5
 8010c30:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010c34:	3601      	adds	r6, #1
 8010c36:	f7ff feb5 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010c3a:	2e18      	cmp	r6, #24
 8010c3c:	d1f7      	bne.n	8010c2e <Ssd1306::Start()+0x4e>
 8010c3e:	2300      	movs	r3, #0
 8010c40:	4a12      	ldr	r2, [pc, #72]	; (8010c8c <Ssd1306::Start()+0xac>)
 8010c42:	4618      	mov	r0, r3
 8010c44:	4611      	mov	r1, r2
 8010c46:	3301      	adds	r3, #1
 8010c48:	2b86      	cmp	r3, #134	; 0x86
 8010c4a:	f802 0b01 	strb.w	r0, [r2], #1
 8010c4e:	d1fa      	bne.n	8010c46 <Ssd1306::Start()+0x66>
 8010c50:	2340      	movs	r3, #64	; 0x40
 8010c52:	4628      	mov	r0, r5
 8010c54:	700b      	strb	r3, [r1, #0]
 8010c56:	f7ff ff31 	bl	8010abc <Ssd1306::CheckSH1106()>
 8010c5a:	4628      	mov	r0, r5
 8010c5c:	f7ff ff84 	bl	8010b68 <Ssd1306::Cls()>
 8010c60:	21af      	movs	r1, #175	; 0xaf
 8010c62:	4628      	mov	r0, r5
 8010c64:	f7ff fe9e 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010c68:	2301      	movs	r3, #1
 8010c6a:	71eb      	strb	r3, [r5, #7]
 8010c6c:	4620      	mov	r0, r4
 8010c6e:	b003      	add	sp, #12
 8010c70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c72:	2600      	movs	r6, #0
 8010c74:	4f06      	ldr	r7, [pc, #24]	; (8010c90 <Ssd1306::Start()+0xb0>)
 8010c76:	4628      	mov	r0, r5
 8010c78:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010c7c:	3601      	adds	r6, #1
 8010c7e:	f7ff fe91 	bl	80109a4 <Ssd1306::SendCommand(unsigned char)>
 8010c82:	2e18      	cmp	r6, #24
 8010c84:	d1f7      	bne.n	8010c76 <Ssd1306::Start()+0x96>
 8010c86:	e7da      	b.n	8010c3e <Ssd1306::Start()+0x5e>
 8010c88:	08015944 	stmdaeq	r1, {r2, r6, r8, fp, ip, lr}
 8010c8c:	20009b84 	andcs	r9, r0, r4, lsl #23
 8010c90:	0801592c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, lr}

08010c94 <console_putc>:
 8010c94:	f000 bb4c 	b.w	8011330 <uart0_putc>

08010c98 <console_puts>:
 8010c98:	f000 bb6a 	b.w	8011370 <uart0_puts>

08010c9c <console_set_fg_color>:
 8010c9c:	2807      	cmp	r0, #7
 8010c9e:	d810      	bhi.n	8010cc2 <console_set_fg_color+0x26>
 8010ca0:	e8df f000 	tbb	[pc, r0]
 8010ca4:	0b090704 	bleq	82528bc <__exidx_end+0x23cea0>
 8010ca8:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8010c74 <Ssd1306::Start()+0x94>
 8010cac:	4806      	ldr	r0, [pc, #24]	; (8010cc8 <console_set_fg_color+0x2c>)
 8010cae:	f000 bb5f 	b.w	8011370 <uart0_puts>
 8010cb2:	4806      	ldr	r0, [pc, #24]	; (8010ccc <console_set_fg_color+0x30>)
 8010cb4:	e7fb      	b.n	8010cae <console_set_fg_color+0x12>
 8010cb6:	4806      	ldr	r0, [pc, #24]	; (8010cd0 <console_set_fg_color+0x34>)
 8010cb8:	e7f9      	b.n	8010cae <console_set_fg_color+0x12>
 8010cba:	4806      	ldr	r0, [pc, #24]	; (8010cd4 <console_set_fg_color+0x38>)
 8010cbc:	e7f7      	b.n	8010cae <console_set_fg_color+0x12>
 8010cbe:	4806      	ldr	r0, [pc, #24]	; (8010cd8 <console_set_fg_color+0x3c>)
 8010cc0:	e7f5      	b.n	8010cae <console_set_fg_color+0x12>
 8010cc2:	4806      	ldr	r0, [pc, #24]	; (8010cdc <console_set_fg_color+0x40>)
 8010cc4:	e7f3      	b.n	8010cae <console_set_fg_color+0x12>
 8010cc6:	bf00      	nop
 8010cc8:	080159a2 	stmdaeq	r1, {r1, r5, r7, r8, fp, ip, lr}
 8010ccc:	080159a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, ip, lr}
 8010cd0:	080159ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, fp, ip, lr}
 8010cd4:	080159b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, ip, lr}
 8010cd8:	080132bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, ip, sp}
 8010cdc:	080159ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, ip, lr}

08010ce0 <console_error>:
 8010ce0:	b510      	push	{r4, lr}
 8010ce2:	4604      	mov	r4, r0
 8010ce4:	4805      	ldr	r0, [pc, #20]	; (8010cfc <console_error+0x1c>)
 8010ce6:	f000 fb43 	bl	8011370 <uart0_puts>
 8010cea:	4620      	mov	r0, r4
 8010cec:	f000 fb40 	bl	8011370 <uart0_puts>
 8010cf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cf4:	4802      	ldr	r0, [pc, #8]	; (8010d00 <console_error+0x20>)
 8010cf6:	f000 bb3b 	b.w	8011370 <uart0_puts>
 8010cfa:	bf00      	nop
 8010cfc:	080159a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, ip, lr}
 8010d00:	080132bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, ip, sp}

08010d04 <console_status>:
 8010d04:	b510      	push	{r4, lr}
 8010d06:	460c      	mov	r4, r1
 8010d08:	b280      	uxth	r0, r0
 8010d0a:	f7ff ffc7 	bl	8010c9c <console_set_fg_color>
 8010d0e:	4807      	ldr	r0, [pc, #28]	; (8010d2c <console_status+0x28>)
 8010d10:	f000 fb2e 	bl	8011370 <uart0_puts>
 8010d14:	4620      	mov	r0, r4
 8010d16:	f000 fb2b 	bl	8011370 <uart0_puts>
 8010d1a:	200a      	movs	r0, #10
 8010d1c:	f000 fb08 	bl	8011330 <uart0_putc>
 8010d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d24:	4802      	ldr	r0, [pc, #8]	; (8010d30 <console_status+0x2c>)
 8010d26:	f000 bb23 	b.w	8011370 <uart0_puts>
 8010d2a:	bf00      	nop
 8010d2c:	0801599c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, ip, lr}
 8010d30:	080132bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, ip, sp}

08010d34 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8010d34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d38:	4617      	mov	r7, r2
 8010d3a:	461e      	mov	r6, r3
 8010d3c:	4d14      	ldr	r5, [pc, #80]	; (8010d90 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8010d3e:	4b15      	ldr	r3, [pc, #84]	; (8010d94 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8010d40:	b086      	sub	sp, #24
 8010d42:	6018      	str	r0, [r3, #0]
 8010d44:	4604      	mov	r4, r0
 8010d46:	f105 0803 	add.w	r8, r5, #3
 8010d4a:	2203      	movs	r2, #3
 8010d4c:	4628      	mov	r0, r5
 8010d4e:	f000 f9b4 	bl	80110ba <memmove>
 8010d52:	4639      	mov	r1, r7
 8010d54:	220b      	movs	r2, #11
 8010d56:	4640      	mov	r0, r8
 8010d58:	f000 f9af 	bl	80110ba <memmove>
 8010d5c:	f105 030e 	add.w	r3, r5, #14
 8010d60:	4631      	mov	r1, r6
 8010d62:	2208      	movs	r2, #8
 8010d64:	4618      	mov	r0, r3
 8010d66:	f000 f9a8 	bl	80110ba <memmove>
 8010d6a:	2308      	movs	r3, #8
 8010d6c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8010d70:	230b      	movs	r3, #11
 8010d72:	9302      	str	r3, [sp, #8]
 8010d74:	4b08      	ldr	r3, [pc, #32]	; (8010d98 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8010d76:	9005      	str	r0, [sp, #20]
 8010d78:	e9cd 5300 	strd	r5, r3, [sp]
 8010d7c:	213f      	movs	r1, #63	; 0x3f
 8010d7e:	2303      	movs	r3, #3
 8010d80:	4a06      	ldr	r2, [pc, #24]	; (8010d9c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8010d82:	4807      	ldr	r0, [pc, #28]	; (8010da0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8010d84:	f7f8 faba 	bl	80092fc <snprintf>
 8010d88:	4620      	mov	r0, r4
 8010d8a:	b006      	add	sp, #24
 8010d8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d90:	20009c10 	andcs	r9, r0, r0, lsl ip
 8010d94:	20009c68 	andcs	r9, r0, r8, ror #24
 8010d98:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 8010d9c:	080159c0 	stmdaeq	r1, {r6, r7, r8, fp, ip, lr}
 8010da0:	20009c26 	andcs	r9, r0, r6, lsr #24

08010da4 <FirmwareVersion::Print(char const*)>:
 8010da4:	b510      	push	{r4, lr}
 8010da6:	460c      	mov	r4, r1
 8010da8:	4804      	ldr	r0, [pc, #16]	; (8010dbc <FirmwareVersion::Print(char const*)+0x18>)
 8010daa:	f000 f9be 	bl	801112a <puts>
 8010dae:	b124      	cbz	r4, 8010dba <FirmwareVersion::Print(char const*)+0x16>
 8010db0:	4620      	mov	r0, r4
 8010db2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010db6:	f000 b9b8 	b.w	801112a <puts>
 8010dba:	bd10      	pop	{r4, pc}
 8010dbc:	20009c26 	andcs	r9, r0, r6, lsr #24

08010dc0 <LedBlink::LedBlink()>:
 8010dc0:	b538      	push	{r3, r4, r5, lr}
 8010dc2:	2205      	movs	r2, #5
 8010dc4:	2300      	movs	r3, #0
 8010dc6:	e9c0 3200 	strd	r3, r2, [r0]
 8010dca:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8010dce:	6083      	str	r3, [r0, #8]
 8010dd0:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010dd4:	6143      	str	r3, [r0, #20]
 8010dd6:	4b09      	ldr	r3, [pc, #36]	; (8010dfc <LedBlink::LedBlink()+0x3c>)
 8010dd8:	4d09      	ldr	r5, [pc, #36]	; (8010e00 <LedBlink::LedBlink()+0x40>)
 8010dda:	4604      	mov	r4, r0
 8010ddc:	6018      	str	r0, [r3, #0]
 8010dde:	f240 6004 	movw	r0, #1540	; 0x604
 8010de2:	f001 f87d 	bl	8011ee0 <rcu_periph_clock_enable>
 8010de6:	4628      	mov	r0, r5
 8010de8:	2301      	movs	r3, #1
 8010dea:	2203      	movs	r2, #3
 8010dec:	2110      	movs	r1, #16
 8010dee:	f000 ffdf 	bl	8011db0 <gpio_init>
 8010df2:	2301      	movs	r3, #1
 8010df4:	4620      	mov	r0, r4
 8010df6:	616b      	str	r3, [r5, #20]
 8010df8:	bd38      	pop	{r3, r4, r5, pc}
 8010dfa:	bf00      	nop
 8010dfc:	20009c6c 	andcs	r9, r0, ip, ror #24
 8010e00:	40011000 	andmi	r1, r1, r0

08010e04 <LedBlink::SetMode(ledblink::Mode)>:
 8010e04:	6843      	ldr	r3, [r0, #4]
 8010e06:	428b      	cmp	r3, r1
 8010e08:	d02f      	beq.n	8010e6a <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010e0a:	6041      	str	r1, [r0, #4]
 8010e0c:	2904      	cmp	r1, #4
 8010e0e:	d822      	bhi.n	8010e56 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8010e10:	e8df f001 	tbb	[pc, r1]
 8010e14:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8010e18:	23ff001d 	mvnscs	r0, #29
 8010e1c:	6003      	str	r3, [r0, #0]
 8010e1e:	2300      	movs	r3, #0
 8010e20:	2201      	movs	r2, #1
 8010e22:	60c3      	str	r3, [r0, #12]
 8010e24:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010e28:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010e2c:	611a      	str	r2, [r3, #16]
 8010e2e:	6880      	ldr	r0, [r0, #8]
 8010e30:	b1d8      	cbz	r0, 8010e6a <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010e32:	6803      	ldr	r3, [r0, #0]
 8010e34:	689b      	ldr	r3, [r3, #8]
 8010e36:	4718      	bx	r3
 8010e38:	2301      	movs	r3, #1
 8010e3a:	6003      	str	r3, [r0, #0]
 8010e3c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8010e40:	60c3      	str	r3, [r0, #12]
 8010e42:	e7f4      	b.n	8010e2e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010e44:	2303      	movs	r3, #3
 8010e46:	6003      	str	r3, [r0, #0]
 8010e48:	f240 134d 	movw	r3, #333	; 0x14d
 8010e4c:	e7f8      	b.n	8010e40 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e4e:	2305      	movs	r3, #5
 8010e50:	6003      	str	r3, [r0, #0]
 8010e52:	23c8      	movs	r3, #200	; 0xc8
 8010e54:	e7f4      	b.n	8010e40 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e56:	2300      	movs	r3, #0
 8010e58:	2201      	movs	r2, #1
 8010e5a:	6003      	str	r3, [r0, #0]
 8010e5c:	60c3      	str	r3, [r0, #12]
 8010e5e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010e62:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010e66:	615a      	str	r2, [r3, #20]
 8010e68:	e7e1      	b.n	8010e2e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010e6a:	4770      	bx	lr

08010e6c <Hardware::Hardware()>:
 8010e6c:	b570      	push	{r4, r5, r6, lr}
 8010e6e:	2400      	movs	r4, #0
 8010e70:	4b24      	ldr	r3, [pc, #144]	; (8010f04 <Hardware::Hardware()+0x98>)
 8010e72:	b090      	sub	sp, #64	; 0x40
 8010e74:	7004      	strb	r4, [r0, #0]
 8010e76:	6018      	str	r0, [r3, #0]
 8010e78:	4605      	mov	r5, r0
 8010e7a:	f7f6 fb41 	bl	8007500 <console_init>
 8010e7e:	f000 fa87 	bl	8011390 <systick_config>
 8010e82:	f001 fe4d 	bl	8012b20 <udelay_init()>
 8010e86:	f001 fe49 	bl	8012b1c <micros_init()>
 8010e8a:	f240 701b 	movw	r0, #1819	; 0x71b
 8010e8e:	f001 f827 	bl	8011ee0 <rcu_periph_clock_enable>
 8010e92:	f240 701c 	movw	r0, #1820	; 0x71c
 8010e96:	f001 f823 	bl	8011ee0 <rcu_periph_clock_enable>
 8010e9a:	4e1b      	ldr	r6, [pc, #108]	; (8010f08 <Hardware::Hardware()+0x9c>)
 8010e9c:	f001 f818 	bl	8011ed0 <pmu_backup_write_enable>
 8010ea0:	4621      	mov	r1, r4
 8010ea2:	2002      	movs	r0, #2
 8010ea4:	f000 fb12 	bl	80114cc <bkp_data_write>
 8010ea8:	f240 7004 	movw	r0, #1796	; 0x704
 8010eac:	f001 f818 	bl	8011ee0 <rcu_periph_clock_enable>
 8010eb0:	4630      	mov	r0, r6
 8010eb2:	f001 f96d 	bl	8012190 <timer_deinit>
 8010eb6:	236b      	movs	r3, #107	; 0x6b
 8010eb8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010ebc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010ec0:	a903      	add	r1, sp, #12
 8010ec2:	4630      	mov	r0, r6
 8010ec4:	9305      	str	r3, [sp, #20]
 8010ec6:	f001 f9c5 	bl	8012254 <timer_init>
 8010eca:	4630      	mov	r0, r6
 8010ecc:	f001 fa1a 	bl	8012304 <timer_enable>
 8010ed0:	f001 fadc 	bl	801248c <gd32_adc_init()>
 8010ed4:	2219      	movs	r2, #25
 8010ed6:	230b      	movs	r3, #11
 8010ed8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8010edc:	237a      	movs	r3, #122	; 0x7a
 8010ede:	a807      	add	r0, sp, #28
 8010ee0:	930c      	str	r3, [sp, #48]	; 0x30
 8010ee2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8010ee6:	9407      	str	r4, [sp, #28]
 8010ee8:	940f      	str	r4, [sp, #60]	; 0x3c
 8010eea:	f000 f977 	bl	80111dc <mktime>
 8010eee:	4621      	mov	r1, r4
 8010ef0:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8010ef4:	a801      	add	r0, sp, #4
 8010ef6:	f000 f9e7 	bl	80112c8 <settimeofday>
 8010efa:	f001 fb21 	bl	8012540 <gd32_i2c_begin>
 8010efe:	4628      	mov	r0, r5
 8010f00:	b010      	add	sp, #64	; 0x40
 8010f02:	bd70      	pop	{r4, r5, r6, pc}
 8010f04:	20009c70 	andcs	r9, r0, r0, ror ip
 8010f08:	40001000 	andmi	r1, r0, r0

08010f0c <Hardware::Reboot()>:
 8010f0c:	b508      	push	{r3, lr}
 8010f0e:	2300      	movs	r3, #0
 8010f10:	4604      	mov	r4, r0
 8010f12:	7003      	strb	r3, [r0, #0]
 8010f14:	2104      	movs	r1, #4
 8010f16:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010f1a:	f000 ff1f 	bl	8011d5c <fwdgt_config>
 8010f1e:	4620      	mov	r0, r4
 8010f20:	f7f7 fc68 	bl	80087f4 <Hardware::RebootHandler()>
 8010f24:	2102      	movs	r1, #2
 8010f26:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010f2a:	f000 ff17 	bl	8011d5c <fwdgt_config>
 8010f2e:	2801      	cmp	r0, #1
 8010f30:	bf0c      	ite	eq
 8010f32:	2301      	moveq	r3, #1
 8010f34:	2300      	movne	r3, #0
 8010f36:	7023      	strb	r3, [r4, #0]
 8010f38:	d101      	bne.n	8010f3e <Hardware::Reboot()+0x32>
 8010f3a:	f000 feff 	bl	8011d3c <fwdgt_enable>
 8010f3e:	2208      	movs	r2, #8
 8010f40:	4b0d      	ldr	r3, [pc, #52]	; (8010f78 <Hardware::Reboot()+0x6c>)
 8010f42:	2501      	movs	r5, #1
 8010f44:	681b      	ldr	r3, [r3, #0]
 8010f46:	480d      	ldr	r0, [pc, #52]	; (8010f7c <Hardware::Reboot()+0x70>)
 8010f48:	601a      	str	r2, [r3, #0]
 8010f4a:	227d      	movs	r2, #125	; 0x7d
 8010f4c:	490c      	ldr	r1, [pc, #48]	; (8010f80 <Hardware::Reboot()+0x74>)
 8010f4e:	60da      	str	r2, [r3, #12]
 8010f50:	68dc      	ldr	r4, [r3, #12]
 8010f52:	b904      	cbnz	r4, 8010f56 <Hardware::Reboot()+0x4a>
 8010f54:	e7fe      	b.n	8010f54 <Hardware::Reboot()+0x48>
 8010f56:	6802      	ldr	r2, [r0, #0]
 8010f58:	695e      	ldr	r6, [r3, #20]
 8010f5a:	1b92      	subs	r2, r2, r6
 8010f5c:	4294      	cmp	r4, r2
 8010f5e:	d8f8      	bhi.n	8010f52 <Hardware::Reboot()+0x46>
 8010f60:	6802      	ldr	r2, [r0, #0]
 8010f62:	615a      	str	r2, [r3, #20]
 8010f64:	691a      	ldr	r2, [r3, #16]
 8010f66:	2a01      	cmp	r2, #1
 8010f68:	f082 0401 	eor.w	r4, r2, #1
 8010f6c:	611c      	str	r4, [r3, #16]
 8010f6e:	bf14      	ite	ne
 8010f70:	610d      	strne	r5, [r1, #16]
 8010f72:	614a      	streq	r2, [r1, #20]
 8010f74:	e7ec      	b.n	8010f50 <Hardware::Reboot()+0x44>
 8010f76:	bf00      	nop
 8010f78:	20009c6c 	andcs	r9, r0, ip, ror #24
 8010f7c:	20009c84 	andcs	r9, r0, r4, lsl #25
 8010f80:	40011000 	andmi	r1, r1, r0

08010f84 <operator delete(void*)>:
 8010f84:	f000 b874 	b.w	8011070 <free>

08010f88 <operator delete[](void*)>:
 8010f88:	f000 b872 	b.w	8011070 <free>

08010f8c <operator new(unsigned int)>:
 8010f8c:	f000 b842 	b.w	8011014 <malloc>

08010f90 <operator new[](unsigned int)>:
 8010f90:	f000 b840 	b.w	8011014 <malloc>

08010f94 <inet_aton>:
 8010f94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010f96:	f04f 0c0a 	mov.w	ip, #10
 8010f9a:	2500      	movs	r5, #0
 8010f9c:	ae01      	add	r6, sp, #4
 8010f9e:	4603      	mov	r3, r0
 8010fa0:	2200      	movs	r2, #0
 8010fa2:	1d07      	adds	r7, r0, #4
 8010fa4:	e007      	b.n	8010fb6 <inet_aton+0x22>
 8010fa6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010faa:	2b09      	cmp	r3, #9
 8010fac:	d820      	bhi.n	8010ff0 <inet_aton+0x5c>
 8010fae:	4603      	mov	r3, r0
 8010fb0:	fb0c 4202 	mla	r2, ip, r2, r4
 8010fb4:	3a30      	subs	r2, #48	; 0x30
 8010fb6:	4618      	mov	r0, r3
 8010fb8:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010fbc:	2c2e      	cmp	r4, #46	; 0x2e
 8010fbe:	d111      	bne.n	8010fe4 <inet_aton+0x50>
 8010fc0:	3501      	adds	r5, #1
 8010fc2:	2d03      	cmp	r5, #3
 8010fc4:	f806 2b01 	strb.w	r2, [r6], #1
 8010fc8:	d1e9      	bne.n	8010f9e <inet_aton+0xa>
 8010fca:	2200      	movs	r2, #0
 8010fcc:	250a      	movs	r5, #10
 8010fce:	1d1c      	adds	r4, r3, #4
 8010fd0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010fd4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8010fd8:	d10d      	bne.n	8010ff6 <inet_aton+0x62>
 8010fda:	f88d 2007 	strb.w	r2, [sp, #7]
 8010fde:	b9b1      	cbnz	r1, 801100e <inet_aton+0x7a>
 8010fe0:	2001      	movs	r0, #1
 8010fe2:	e006      	b.n	8010ff2 <inet_aton+0x5e>
 8010fe4:	2c00      	cmp	r4, #0
 8010fe6:	d0eb      	beq.n	8010fc0 <inet_aton+0x2c>
 8010fe8:	2c0a      	cmp	r4, #10
 8010fea:	d0e9      	beq.n	8010fc0 <inet_aton+0x2c>
 8010fec:	42b8      	cmp	r0, r7
 8010fee:	d1da      	bne.n	8010fa6 <inet_aton+0x12>
 8010ff0:	2000      	movs	r0, #0
 8010ff2:	b003      	add	sp, #12
 8010ff4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ff6:	280a      	cmp	r0, #10
 8010ff8:	d0ef      	beq.n	8010fda <inet_aton+0x46>
 8010ffa:	42a3      	cmp	r3, r4
 8010ffc:	d0f8      	beq.n	8010ff0 <inet_aton+0x5c>
 8010ffe:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8011002:	2e09      	cmp	r6, #9
 8011004:	d8f4      	bhi.n	8010ff0 <inet_aton+0x5c>
 8011006:	fb05 0202 	mla	r2, r5, r2, r0
 801100a:	3a30      	subs	r2, #48	; 0x30
 801100c:	e7e0      	b.n	8010fd0 <inet_aton+0x3c>
 801100e:	9b01      	ldr	r3, [sp, #4]
 8011010:	600b      	str	r3, [r1, #0]
 8011012:	e7e5      	b.n	8010fe0 <inet_aton+0x4c>

08011014 <malloc>:
 8011014:	b510      	push	{r4, lr}
 8011016:	b1d8      	cbz	r0, 8011050 <malloc+0x3c>
 8011018:	4a11      	ldr	r2, [pc, #68]	; (8011060 <malloc+0x4c>)
 801101a:	6811      	ldr	r1, [r2, #0]
 801101c:	b971      	cbnz	r1, 801103c <malloc+0x28>
 801101e:	4911      	ldr	r1, [pc, #68]	; (8011064 <malloc+0x50>)
 8011020:	f100 021b 	add.w	r2, r0, #27
 8011024:	680b      	ldr	r3, [r1, #0]
 8011026:	4c10      	ldr	r4, [pc, #64]	; (8011068 <malloc+0x54>)
 8011028:	f022 020f 	bic.w	r2, r2, #15
 801102c:	441a      	add	r2, r3
 801102e:	42a2      	cmp	r2, r4
 8011030:	d80f      	bhi.n	8011052 <malloc+0x3e>
 8011032:	600a      	str	r2, [r1, #0]
 8011034:	4a0d      	ldr	r2, [pc, #52]	; (801106c <malloc+0x58>)
 8011036:	e9c3 2000 	strd	r2, r0, [r3]
 801103a:	e005      	b.n	8011048 <malloc+0x34>
 801103c:	4288      	cmp	r0, r1
 801103e:	d90a      	bls.n	8011056 <malloc+0x42>
 8011040:	3208      	adds	r2, #8
 8011042:	e7ea      	b.n	801101a <malloc+0x6>
 8011044:	6899      	ldr	r1, [r3, #8]
 8011046:	6051      	str	r1, [r2, #4]
 8011048:	2200      	movs	r2, #0
 801104a:	f103 000c 	add.w	r0, r3, #12
 801104e:	609a      	str	r2, [r3, #8]
 8011050:	bd10      	pop	{r4, pc}
 8011052:	2000      	movs	r0, #0
 8011054:	e7fc      	b.n	8011050 <malloc+0x3c>
 8011056:	6853      	ldr	r3, [r2, #4]
 8011058:	2b00      	cmp	r3, #0
 801105a:	d1f3      	bne.n	8011044 <malloc+0x30>
 801105c:	4608      	mov	r0, r1
 801105e:	e7de      	b.n	801101e <malloc+0xa>
 8011060:	20000010 	andcs	r0, r0, r0, lsl r0
 8011064:	2000000c 	andcs	r0, r0, ip
 8011068:	20016000 	andcs	r6, r1, r0
 801106c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08011070 <free>:
 8011070:	b138      	cbz	r0, 8011082 <free+0x12>
 8011072:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 8011076:	4b09      	ldr	r3, [pc, #36]	; (801109c <free+0x2c>)
 8011078:	429a      	cmp	r2, r3
 801107a:	d102      	bne.n	8011082 <free+0x12>
 801107c:	4b08      	ldr	r3, [pc, #32]	; (80110a0 <free+0x30>)
 801107e:	681a      	ldr	r2, [r3, #0]
 8011080:	b902      	cbnz	r2, 8011084 <free+0x14>
 8011082:	4770      	bx	lr
 8011084:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8011088:	4291      	cmp	r1, r2
 801108a:	d104      	bne.n	8011096 <free+0x26>
 801108c:	685a      	ldr	r2, [r3, #4]
 801108e:	380c      	subs	r0, #12
 8011090:	6082      	str	r2, [r0, #8]
 8011092:	6058      	str	r0, [r3, #4]
 8011094:	4770      	bx	lr
 8011096:	3308      	adds	r3, #8
 8011098:	e7f1      	b.n	801107e <free+0xe>
 801109a:	bf00      	nop
 801109c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80110a0:	20000010 	andcs	r0, r0, r0, lsl r0

080110a4 <memcpy>:
 80110a4:	b510      	push	{r4, lr}
 80110a6:	1e43      	subs	r3, r0, #1
 80110a8:	440a      	add	r2, r1
 80110aa:	4291      	cmp	r1, r2
 80110ac:	d100      	bne.n	80110b0 <memcpy+0xc>
 80110ae:	bd10      	pop	{r4, pc}
 80110b0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110b4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80110b8:	e7f7      	b.n	80110aa <memcpy+0x6>

080110ba <memmove>:
 80110ba:	4288      	cmp	r0, r1
 80110bc:	b510      	push	{r4, lr}
 80110be:	eb01 0302 	add.w	r3, r1, r2
 80110c2:	d208      	bcs.n	80110d6 <memmove+0x1c>
 80110c4:	1e42      	subs	r2, r0, #1
 80110c6:	4299      	cmp	r1, r3
 80110c8:	d100      	bne.n	80110cc <memmove+0x12>
 80110ca:	bd10      	pop	{r4, pc}
 80110cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110d0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80110d4:	e7f7      	b.n	80110c6 <memmove+0xc>
 80110d6:	4601      	mov	r1, r0
 80110d8:	4402      	add	r2, r0
 80110da:	428a      	cmp	r2, r1
 80110dc:	d0f5      	beq.n	80110ca <memmove+0x10>
 80110de:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80110e2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80110e6:	e7f8      	b.n	80110da <memmove+0x20>

080110e8 <memset>:
 80110e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110ea:	b1c2      	cbz	r2, 801111e <memset+0x36>
 80110ec:	4603      	mov	r3, r0
 80110ee:	b2c9      	uxtb	r1, r1
 80110f0:	075c      	lsls	r4, r3, #29
 80110f2:	d110      	bne.n	8011116 <memset+0x2e>
 80110f4:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80110f8:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80110fc:	463d      	mov	r5, r7
 80110fe:	461e      	mov	r6, r3
 8011100:	f022 0407 	bic.w	r4, r2, #7
 8011104:	441c      	add	r4, r3
 8011106:	42a6      	cmp	r6, r4
 8011108:	d10a      	bne.n	8011120 <memset+0x38>
 801110a:	4413      	add	r3, r2
 801110c:	429c      	cmp	r4, r3
 801110e:	d006      	beq.n	801111e <memset+0x36>
 8011110:	f804 1b01 	strb.w	r1, [r4], #1
 8011114:	e7fa      	b.n	801110c <memset+0x24>
 8011116:	3a01      	subs	r2, #1
 8011118:	f803 1b01 	strb.w	r1, [r3], #1
 801111c:	d1e8      	bne.n	80110f0 <memset+0x8>
 801111e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011120:	f846 7b08 	str.w	r7, [r6], #8
 8011124:	f846 5c04 	str.w	r5, [r6, #-4]
 8011128:	e7ed      	b.n	8011106 <memset+0x1e>

0801112a <puts>:
 801112a:	b508      	push	{r3, lr}
 801112c:	f7ff fdb4 	bl	8010c98 <console_puts>
 8011130:	200a      	movs	r0, #10
 8011132:	f7ff fdaf 	bl	8010c94 <console_putc>
 8011136:	2001      	movs	r0, #1
 8011138:	bd08      	pop	{r3, pc}
	...

0801113c <strtok>:
 801113c:	b530      	push	{r4, r5, lr}
 801113e:	b910      	cbnz	r0, 8011146 <strtok+0xa>
 8011140:	4b12      	ldr	r3, [pc, #72]	; (801118c <strtok+0x50>)
 8011142:	6818      	ldr	r0, [r3, #0]
 8011144:	b158      	cbz	r0, 801115e <strtok+0x22>
 8011146:	4603      	mov	r3, r0
 8011148:	460d      	mov	r5, r1
 801114a:	4618      	mov	r0, r3
 801114c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011150:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011154:	b924      	cbnz	r4, 8011160 <strtok+0x24>
 8011156:	b94a      	cbnz	r2, 801116c <strtok+0x30>
 8011158:	4610      	mov	r0, r2
 801115a:	4b0c      	ldr	r3, [pc, #48]	; (801118c <strtok+0x50>)
 801115c:	601a      	str	r2, [r3, #0]
 801115e:	bd30      	pop	{r4, r5, pc}
 8011160:	42a2      	cmp	r2, r4
 8011162:	d1f5      	bne.n	8011150 <strtok+0x14>
 8011164:	e7f0      	b.n	8011148 <strtok+0xc>
 8011166:	4613      	mov	r3, r2
 8011168:	e00c      	b.n	8011184 <strtok+0x48>
 801116a:	b914      	cbnz	r4, 8011172 <strtok+0x36>
 801116c:	460d      	mov	r5, r1
 801116e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011172:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011176:	42a2      	cmp	r2, r4
 8011178:	d1f7      	bne.n	801116a <strtok+0x2e>
 801117a:	2a00      	cmp	r2, #0
 801117c:	d0f3      	beq.n	8011166 <strtok+0x2a>
 801117e:	2200      	movs	r2, #0
 8011180:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011184:	4a01      	ldr	r2, [pc, #4]	; (801118c <strtok+0x50>)
 8011186:	6013      	str	r3, [r2, #0]
 8011188:	e7e9      	b.n	801115e <strtok+0x22>
 801118a:	bf00      	nop
 801118c:	20009c74 	andcs	r9, r0, r4, ror ip

08011190 <isleapyear>:
 8011190:	2264      	movs	r2, #100	; 0x64
 8011192:	fb90 f3f2 	sdiv	r3, r0, r2
 8011196:	fb02 0313 	mls	r3, r2, r3, r0
 801119a:	b94b      	cbnz	r3, 80111b0 <isleapyear+0x20>
 801119c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80111a0:	fb90 f2f3 	sdiv	r2, r0, r3
 80111a4:	fb03 0012 	mls	r0, r3, r2, r0
 80111a8:	fab0 f080 	clz	r0, r0
 80111ac:	0940      	lsrs	r0, r0, #5
 80111ae:	4770      	bx	lr
 80111b0:	f010 0f03 	tst.w	r0, #3
 80111b4:	bf0c      	ite	eq
 80111b6:	2001      	moveq	r0, #1
 80111b8:	2000      	movne	r0, #0
 80111ba:	4770      	bx	lr

080111bc <getdaysofmonth>:
 80111bc:	b510      	push	{r4, lr}
 80111be:	4604      	mov	r4, r0
 80111c0:	2c01      	cmp	r4, #1
 80111c2:	4608      	mov	r0, r1
 80111c4:	d102      	bne.n	80111cc <getdaysofmonth+0x10>
 80111c6:	f7ff ffe3 	bl	8011190 <isleapyear>
 80111ca:	b918      	cbnz	r0, 80111d4 <getdaysofmonth+0x18>
 80111cc:	4b02      	ldr	r3, [pc, #8]	; (80111d8 <getdaysofmonth+0x1c>)
 80111ce:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80111d2:	bd10      	pop	{r4, pc}
 80111d4:	201d      	movs	r0, #29
 80111d6:	e7fc      	b.n	80111d2 <getdaysofmonth+0x16>
 80111d8:	080159e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, fp, ip, lr}

080111dc <mktime>:
 80111dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111e0:	4604      	mov	r4, r0
 80111e2:	2800      	cmp	r0, #0
 80111e4:	d043      	beq.n	801126e <mktime+0x92>
 80111e6:	6941      	ldr	r1, [r0, #20]
 80111e8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80111ec:	2b45      	cmp	r3, #69	; 0x45
 80111ee:	d83e      	bhi.n	801126e <mktime+0x92>
 80111f0:	2600      	movs	r6, #0
 80111f2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80111f6:	f240 186d 	movw	r8, #365	; 0x16d
 80111fa:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80111fe:	42af      	cmp	r7, r5
 8011200:	da24      	bge.n	801124c <mktime+0x70>
 8011202:	6927      	ldr	r7, [r4, #16]
 8011204:	2f0b      	cmp	r7, #11
 8011206:	d832      	bhi.n	801126e <mktime+0x92>
 8011208:	2500      	movs	r5, #0
 801120a:	42af      	cmp	r7, r5
 801120c:	d129      	bne.n	8011262 <mktime+0x86>
 801120e:	68e5      	ldr	r5, [r4, #12]
 8011210:	2d00      	cmp	r5, #0
 8011212:	dd2c      	ble.n	801126e <mktime+0x92>
 8011214:	4638      	mov	r0, r7
 8011216:	f7ff ffd1 	bl	80111bc <getdaysofmonth>
 801121a:	4285      	cmp	r5, r0
 801121c:	dc27      	bgt.n	801126e <mktime+0x92>
 801121e:	2318      	movs	r3, #24
 8011220:	3d01      	subs	r5, #1
 8011222:	4435      	add	r5, r6
 8011224:	435d      	muls	r5, r3
 8011226:	68a3      	ldr	r3, [r4, #8]
 8011228:	2b17      	cmp	r3, #23
 801122a:	d820      	bhi.n	801126e <mktime+0x92>
 801122c:	213c      	movs	r1, #60	; 0x3c
 801122e:	442b      	add	r3, r5
 8011230:	fb01 f203 	mul.w	r2, r1, r3
 8011234:	6863      	ldr	r3, [r4, #4]
 8011236:	2b3b      	cmp	r3, #59	; 0x3b
 8011238:	d819      	bhi.n	801126e <mktime+0x92>
 801123a:	6820      	ldr	r0, [r4, #0]
 801123c:	4413      	add	r3, r2
 801123e:	283b      	cmp	r0, #59	; 0x3b
 8011240:	fb01 f303 	mul.w	r3, r1, r3
 8011244:	d813      	bhi.n	801126e <mktime+0x92>
 8011246:	4418      	add	r0, r3
 8011248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801124c:	4628      	mov	r0, r5
 801124e:	f7ff ff9f 	bl	8011190 <isleapyear>
 8011252:	2800      	cmp	r0, #0
 8011254:	bf14      	ite	ne
 8011256:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801125a:	4643      	moveq	r3, r8
 801125c:	3501      	adds	r5, #1
 801125e:	441e      	add	r6, r3
 8011260:	e7cd      	b.n	80111fe <mktime+0x22>
 8011262:	4628      	mov	r0, r5
 8011264:	f7ff ffaa 	bl	80111bc <getdaysofmonth>
 8011268:	3501      	adds	r5, #1
 801126a:	4406      	add	r6, r0
 801126c:	e7cd      	b.n	801120a <mktime+0x2e>
 801126e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011272:	e7e9      	b.n	8011248 <mktime+0x6c>

08011274 <gettimeofday>:
 8011274:	b538      	push	{r3, r4, r5, lr}
 8011276:	4b10      	ldr	r3, [pc, #64]	; (80112b8 <gettimeofday+0x44>)
 8011278:	4a10      	ldr	r2, [pc, #64]	; (80112bc <gettimeofday+0x48>)
 801127a:	681b      	ldr	r3, [r3, #0]
 801127c:	6814      	ldr	r4, [r2, #0]
 801127e:	6013      	str	r3, [r2, #0]
 8011280:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011284:	429c      	cmp	r4, r3
 8011286:	bf2c      	ite	cs
 8011288:	1ae4      	subcs	r4, r4, r3
 801128a:	1b1c      	subcc	r4, r3, r4
 801128c:	4354      	muls	r4, r2
 801128e:	4b0c      	ldr	r3, [pc, #48]	; (80112c0 <gettimeofday+0x4c>)
 8011290:	4605      	mov	r5, r0
 8011292:	e9d3 2100 	ldrd	r2, r1, [r3]
 8011296:	18a4      	adds	r4, r4, r2
 8011298:	f141 0100 	adc.w	r1, r1, #0
 801129c:	e9c3 4100 	strd	r4, r1, [r3]
 80112a0:	4620      	mov	r0, r4
 80112a2:	2300      	movs	r3, #0
 80112a4:	4a07      	ldr	r2, [pc, #28]	; (80112c4 <gettimeofday+0x50>)
 80112a6:	f7f6 fe17 	bl	8007ed8 <__aeabi_uldivmod>
 80112aa:	4b06      	ldr	r3, [pc, #24]	; (80112c4 <gettimeofday+0x50>)
 80112ac:	6028      	str	r0, [r5, #0]
 80112ae:	fb03 4410 	mls	r4, r3, r0, r4
 80112b2:	2000      	movs	r0, #0
 80112b4:	606c      	str	r4, [r5, #4]
 80112b6:	bd38      	pop	{r3, r4, r5, pc}
 80112b8:	20009c84 	andcs	r9, r0, r4, lsl #25
 80112bc:	20009c80 	andcs	r9, r0, r0, lsl #25
 80112c0:	20009c78 	andcs	r9, r0, r8, ror ip
 80112c4:	000f4240 	andeq	r4, pc, r0, asr #4

080112c8 <settimeofday>:
 80112c8:	4b07      	ldr	r3, [pc, #28]	; (80112e8 <settimeofday+0x20>)
 80112ca:	b510      	push	{r4, lr}
 80112cc:	681a      	ldr	r2, [r3, #0]
 80112ce:	4b07      	ldr	r3, [pc, #28]	; (80112ec <settimeofday+0x24>)
 80112d0:	6804      	ldr	r4, [r0, #0]
 80112d2:	601a      	str	r2, [r3, #0]
 80112d4:	6843      	ldr	r3, [r0, #4]
 80112d6:	4806      	ldr	r0, [pc, #24]	; (80112f0 <settimeofday+0x28>)
 80112d8:	17da      	asrs	r2, r3, #31
 80112da:	fbc4 3200 	smlal	r3, r2, r4, r0
 80112de:	4905      	ldr	r1, [pc, #20]	; (80112f4 <settimeofday+0x2c>)
 80112e0:	2000      	movs	r0, #0
 80112e2:	e9c1 3200 	strd	r3, r2, [r1]
 80112e6:	bd10      	pop	{r4, pc}
 80112e8:	20009c84 	andcs	r9, r0, r4, lsl #25
 80112ec:	20009c80 	andcs	r9, r0, r0, lsl #25
 80112f0:	000f4240 	andeq	r4, pc, r0, asr #4
 80112f4:	20009c78 	andcs	r9, r0, r8, ror ip

080112f8 <time>:
 80112f8:	b513      	push	{r0, r1, r4, lr}
 80112fa:	4604      	mov	r4, r0
 80112fc:	2100      	movs	r1, #0
 80112fe:	4668      	mov	r0, sp
 8011300:	f7ff ffb8 	bl	8011274 <gettimeofday>
 8011304:	9800      	ldr	r0, [sp, #0]
 8011306:	b104      	cbz	r4, 801130a <time+0x12>
 8011308:	6020      	str	r0, [r4, #0]
 801130a:	b002      	add	sp, #8
 801130c:	bd10      	pop	{r4, pc}
	...

08011310 <uart0_init>:
 8011310:	2301      	movs	r3, #1
 8011312:	b507      	push	{r0, r1, r2, lr}
 8011314:	2208      	movs	r2, #8
 8011316:	9300      	str	r3, [sp, #0]
 8011318:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 801131c:	2300      	movs	r3, #0
 801131e:	4803      	ldr	r0, [pc, #12]	; (801132c <uart0_init+0x1c>)
 8011320:	f001 fb24 	bl	801296c <gd32_uart_begin>
 8011324:	b003      	add	sp, #12
 8011326:	f85d fb04 	ldr.w	pc, [sp], #4
 801132a:	bf00      	nop
 801132c:	40013800 	andmi	r3, r1, r0, lsl #16

08011330 <uart0_putc>:
 8011330:	280a      	cmp	r0, #10
 8011332:	b538      	push	{r3, r4, r5, lr}
 8011334:	4604      	mov	r4, r0
 8011336:	d10a      	bne.n	801134e <uart0_putc+0x1e>
 8011338:	4d0b      	ldr	r5, [pc, #44]	; (8011368 <uart0_putc+0x38>)
 801133a:	2107      	movs	r1, #7
 801133c:	4628      	mov	r0, r5
 801133e:	f001 f87f 	bl	8012440 <usart_flag_get>
 8011342:	2800      	cmp	r0, #0
 8011344:	d0f9      	beq.n	801133a <uart0_putc+0xa>
 8011346:	220d      	movs	r2, #13
 8011348:	4b08      	ldr	r3, [pc, #32]	; (801136c <uart0_putc+0x3c>)
 801134a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801134e:	4d06      	ldr	r5, [pc, #24]	; (8011368 <uart0_putc+0x38>)
 8011350:	2107      	movs	r1, #7
 8011352:	4628      	mov	r0, r5
 8011354:	f001 f874 	bl	8012440 <usart_flag_get>
 8011358:	2800      	cmp	r0, #0
 801135a:	d0f9      	beq.n	8011350 <uart0_putc+0x20>
 801135c:	4b03      	ldr	r3, [pc, #12]	; (801136c <uart0_putc+0x3c>)
 801135e:	b2e4      	uxtb	r4, r4
 8011360:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8011364:	bd38      	pop	{r3, r4, r5, pc}
 8011366:	bf00      	nop
 8011368:	40013800 	andmi	r3, r1, r0, lsl #16
 801136c:	40013000 	andmi	r3, r1, r0

08011370 <uart0_puts>:
 8011370:	b510      	push	{r4, lr}
 8011372:	1e44      	subs	r4, r0, #1
 8011374:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011378:	b903      	cbnz	r3, 801137c <uart0_puts+0xc>
 801137a:	bd10      	pop	{r4, pc}
 801137c:	2b0a      	cmp	r3, #10
 801137e:	d102      	bne.n	8011386 <uart0_puts+0x16>
 8011380:	200d      	movs	r0, #13
 8011382:	f7ff ffd5 	bl	8011330 <uart0_putc>
 8011386:	7820      	ldrb	r0, [r4, #0]
 8011388:	f7ff ffd2 	bl	8011330 <uart0_putc>
 801138c:	e7f2      	b.n	8011374 <uart0_puts+0x4>
	...

08011390 <systick_config>:
 8011390:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011394:	4b0b      	ldr	r3, [pc, #44]	; (80113c4 <systick_config+0x34>)
 8011396:	681b      	ldr	r3, [r3, #0]
 8011398:	fbb3 f3f2 	udiv	r3, r3, r2
 801139c:	3b01      	subs	r3, #1
 801139e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80113a2:	d20d      	bcs.n	80113c0 <systick_config+0x30>
 80113a4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80113a8:	21f0      	movs	r1, #240	; 0xf0
 80113aa:	6153      	str	r3, [r2, #20]
 80113ac:	4b06      	ldr	r3, [pc, #24]	; (80113c8 <systick_config+0x38>)
 80113ae:	2007      	movs	r0, #7
 80113b0:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80113b4:	2100      	movs	r1, #0
 80113b6:	6191      	str	r1, [r2, #24]
 80113b8:	6110      	str	r0, [r2, #16]
 80113ba:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80113be:	4770      	bx	lr
 80113c0:	e7fe      	b.n	80113c0 <systick_config+0x30>
 80113c2:	bf00      	nop
 80113c4:	20000078 	andcs	r0, r0, r8, ror r0
 80113c8:	e000ed00 	and	lr, r0, r0, lsl #26

080113cc <SysTick_Handler>:
 80113cc:	4a02      	ldr	r2, [pc, #8]	; (80113d8 <SysTick_Handler+0xc>)
 80113ce:	6813      	ldr	r3, [r2, #0]
 80113d0:	3301      	adds	r3, #1
 80113d2:	6013      	str	r3, [r2, #0]
 80113d4:	4770      	bx	lr
 80113d6:	bf00      	nop
 80113d8:	20009c84 	andcs	r9, r0, r4, lsl #25

080113dc <SystemInit>:
 80113dc:	4b37      	ldr	r3, [pc, #220]	; (80114bc <SystemInit+0xe0>)
 80113de:	4938      	ldr	r1, [pc, #224]	; (80114c0 <SystemInit+0xe4>)
 80113e0:	681a      	ldr	r2, [r3, #0]
 80113e2:	f042 0201 	orr.w	r2, r2, #1
 80113e6:	601a      	str	r2, [r3, #0]
 80113e8:	685a      	ldr	r2, [r3, #4]
 80113ea:	f022 0203 	bic.w	r2, r2, #3
 80113ee:	605a      	str	r2, [r3, #4]
 80113f0:	681a      	ldr	r2, [r3, #0]
 80113f2:	400a      	ands	r2, r1
 80113f4:	601a      	str	r2, [r3, #0]
 80113f6:	6858      	ldr	r0, [r3, #4]
 80113f8:	4a32      	ldr	r2, [pc, #200]	; (80114c4 <SystemInit+0xe8>)
 80113fa:	4002      	ands	r2, r0
 80113fc:	605a      	str	r2, [r3, #4]
 80113fe:	681a      	ldr	r2, [r3, #0]
 8011400:	400a      	ands	r2, r1
 8011402:	601a      	str	r2, [r3, #0]
 8011404:	681a      	ldr	r2, [r3, #0]
 8011406:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801140a:	601a      	str	r2, [r3, #0]
 801140c:	685a      	ldr	r2, [r3, #4]
 801140e:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8011412:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8011416:	605a      	str	r2, [r3, #4]
 8011418:	2200      	movs	r2, #0
 801141a:	62da      	str	r2, [r3, #44]	; 0x2c
 801141c:	681a      	ldr	r2, [r3, #0]
 801141e:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 8011422:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 8011426:	601a      	str	r2, [r3, #0]
 8011428:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 801142c:	609a      	str	r2, [r3, #8]
 801142e:	681a      	ldr	r2, [r3, #0]
 8011430:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8011434:	601a      	str	r2, [r3, #0]
 8011436:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801143a:	6819      	ldr	r1, [r3, #0]
 801143c:	0389      	lsls	r1, r1, #14
 801143e:	d401      	bmi.n	8011444 <SystemInit+0x68>
 8011440:	3a01      	subs	r2, #1
 8011442:	d1fa      	bne.n	801143a <SystemInit+0x5e>
 8011444:	681a      	ldr	r2, [r3, #0]
 8011446:	0392      	lsls	r2, r2, #14
 8011448:	d400      	bmi.n	801144c <SystemInit+0x70>
 801144a:	e7fe      	b.n	801144a <SystemInit+0x6e>
 801144c:	685a      	ldr	r2, [r3, #4]
 801144e:	605a      	str	r2, [r3, #4]
 8011450:	685a      	ldr	r2, [r3, #4]
 8011452:	605a      	str	r2, [r3, #4]
 8011454:	685a      	ldr	r2, [r3, #4]
 8011456:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801145a:	605a      	str	r2, [r3, #4]
 801145c:	685a      	ldr	r2, [r3, #4]
 801145e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8011462:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8011466:	605a      	str	r2, [r3, #4]
 8011468:	685a      	ldr	r2, [r3, #4]
 801146a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 801146e:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 8011472:	605a      	str	r2, [r3, #4]
 8011474:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011476:	4a14      	ldr	r2, [pc, #80]	; (80114c8 <SystemInit+0xec>)
 8011478:	400a      	ands	r2, r1
 801147a:	62da      	str	r2, [r3, #44]	; 0x2c
 801147c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801147e:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 8011482:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 8011486:	62da      	str	r2, [r3, #44]	; 0x2c
 8011488:	681a      	ldr	r2, [r3, #0]
 801148a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801148e:	601a      	str	r2, [r3, #0]
 8011490:	681a      	ldr	r2, [r3, #0]
 8011492:	0110      	lsls	r0, r2, #4
 8011494:	d5fc      	bpl.n	8011490 <SystemInit+0xb4>
 8011496:	681a      	ldr	r2, [r3, #0]
 8011498:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 801149c:	601a      	str	r2, [r3, #0]
 801149e:	681a      	ldr	r2, [r3, #0]
 80114a0:	0191      	lsls	r1, r2, #6
 80114a2:	d5fc      	bpl.n	801149e <SystemInit+0xc2>
 80114a4:	685a      	ldr	r2, [r3, #4]
 80114a6:	f022 0203 	bic.w	r2, r2, #3
 80114aa:	605a      	str	r2, [r3, #4]
 80114ac:	685a      	ldr	r2, [r3, #4]
 80114ae:	f042 0202 	orr.w	r2, r2, #2
 80114b2:	605a      	str	r2, [r3, #4]
 80114b4:	685a      	ldr	r2, [r3, #4]
 80114b6:	0712      	lsls	r2, r2, #28
 80114b8:	d5fc      	bpl.n	80114b4 <SystemInit+0xd8>
 80114ba:	4770      	bx	lr
 80114bc:	40021000 	andmi	r1, r2, r0
 80114c0:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80114c4:	e0ff000c 	rscs	r0, pc, ip
 80114c8:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080114cc <bkp_data_write>:
 80114cc:	f1a0 030b 	sub.w	r3, r0, #11
 80114d0:	2b1f      	cmp	r3, #31
 80114d2:	d804      	bhi.n	80114de <bkp_data_write+0x12>
 80114d4:	4b07      	ldr	r3, [pc, #28]	; (80114f4 <bkp_data_write+0x28>)
 80114d6:	4403      	add	r3, r0
 80114d8:	009b      	lsls	r3, r3, #2
 80114da:	8019      	strh	r1, [r3, #0]
 80114dc:	4770      	bx	lr
 80114de:	1e43      	subs	r3, r0, #1
 80114e0:	2b09      	cmp	r3, #9
 80114e2:	bf9f      	itttt	ls
 80114e4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80114e8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80114ec:	0080      	lslls	r0, r0, #2
 80114ee:	8001      	strhls	r1, [r0, #0]
 80114f0:	4770      	bx	lr
 80114f2:	bf00      	nop
 80114f4:	10001b05 	andne	r1, r0, r5, lsl #22

080114f8 <bkp_data_read>:
 80114f8:	f1a0 030b 	sub.w	r3, r0, #11
 80114fc:	2b1f      	cmp	r3, #31
 80114fe:	d805      	bhi.n	801150c <bkp_data_read+0x14>
 8011500:	4b08      	ldr	r3, [pc, #32]	; (8011524 <bkp_data_read+0x2c>)
 8011502:	4403      	add	r3, r0
 8011504:	009b      	lsls	r3, r3, #2
 8011506:	8818      	ldrh	r0, [r3, #0]
 8011508:	b280      	uxth	r0, r0
 801150a:	4770      	bx	lr
 801150c:	1e43      	subs	r3, r0, #1
 801150e:	2b09      	cmp	r3, #9
 8011510:	d806      	bhi.n	8011520 <bkp_data_read+0x28>
 8011512:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8011516:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 801151a:	0080      	lsls	r0, r0, #2
 801151c:	8800      	ldrh	r0, [r0, #0]
 801151e:	e7f3      	b.n	8011508 <bkp_data_read+0x10>
 8011520:	2000      	movs	r0, #0
 8011522:	4770      	bx	lr
 8011524:	10001b05 	andne	r1, r0, r5, lsl #22

08011528 <enet_delay>:
 8011528:	2300      	movs	r3, #0
 801152a:	b082      	sub	sp, #8
 801152c:	9301      	str	r3, [sp, #4]
 801152e:	9001      	str	r0, [sp, #4]
 8011530:	9b01      	ldr	r3, [sp, #4]
 8011532:	b90b      	cbnz	r3, 8011538 <enet_delay+0x10>
 8011534:	b002      	add	sp, #8
 8011536:	4770      	bx	lr
 8011538:	9b01      	ldr	r3, [sp, #4]
 801153a:	3b01      	subs	r3, #1
 801153c:	9301      	str	r3, [sp, #4]
 801153e:	e7f7      	b.n	8011530 <enet_delay+0x8>

08011540 <enet_software_reset>:
 8011540:	4b07      	ldr	r3, [pc, #28]	; (8011560 <enet_software_reset+0x20>)
 8011542:	681a      	ldr	r2, [r3, #0]
 8011544:	f042 0201 	orr.w	r2, r2, #1
 8011548:	601a      	str	r2, [r3, #0]
 801154a:	4a06      	ldr	r2, [pc, #24]	; (8011564 <enet_software_reset+0x24>)
 801154c:	6819      	ldr	r1, [r3, #0]
 801154e:	07c9      	lsls	r1, r1, #31
 8011550:	d501      	bpl.n	8011556 <enet_software_reset+0x16>
 8011552:	3a01      	subs	r2, #1
 8011554:	d1fa      	bne.n	801154c <enet_software_reset+0xc>
 8011556:	6818      	ldr	r0, [r3, #0]
 8011558:	43c0      	mvns	r0, r0
 801155a:	f000 0001 	and.w	r0, r0, #1
 801155e:	4770      	bx	lr
 8011560:	40029000 	andmi	r9, r2, r0
 8011564:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011568 <enet_descriptors_chain_init>:
 8011568:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 801156c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801156e:	4a19      	ldr	r2, [pc, #100]	; (80115d4 <enet_descriptors_chain_init+0x6c>)
 8011570:	d125      	bne.n	80115be <enet_descriptors_chain_init+0x56>
 8011572:	2500      	movs	r5, #0
 8011574:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8011578:	2002      	movs	r0, #2
 801157a:	4b17      	ldr	r3, [pc, #92]	; (80115d8 <enet_descriptors_chain_init+0x70>)
 801157c:	4c17      	ldr	r4, [pc, #92]	; (80115dc <enet_descriptors_chain_init+0x74>)
 801157e:	6113      	str	r3, [r2, #16]
 8011580:	4a17      	ldr	r2, [pc, #92]	; (80115e0 <enet_descriptors_chain_init+0x78>)
 8011582:	6013      	str	r3, [r2, #0]
 8011584:	2200      	movs	r2, #0
 8011586:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801158a:	4916      	ldr	r1, [pc, #88]	; (80115e4 <enet_descriptors_chain_init+0x7c>)
 801158c:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8011590:	600a      	str	r2, [r1, #0]
 8011592:	4915      	ldr	r1, [pc, #84]	; (80115e8 <enet_descriptors_chain_init+0x80>)
 8011594:	600a      	str	r2, [r1, #0]
 8011596:	f103 0110 	add.w	r1, r3, #16
 801159a:	fb0e 4702 	mla	r7, lr, r2, r4
 801159e:	f841 7c08 	str.w	r7, [r1, #-8]
 80115a2:	4594      	cmp	ip, r2
 80115a4:	bf94      	ite	ls
 80115a6:	461f      	movls	r7, r3
 80115a8:	460f      	movhi	r7, r1
 80115aa:	3201      	adds	r2, #1
 80115ac:	4290      	cmp	r0, r2
 80115ae:	e941 6504 	strd	r6, r5, [r1, #-16]
 80115b2:	f841 7c04 	str.w	r7, [r1, #-4]
 80115b6:	f101 0110 	add.w	r1, r1, #16
 80115ba:	d1ee      	bne.n	801159a <enet_descriptors_chain_init+0x32>
 80115bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115be:	4b0b      	ldr	r3, [pc, #44]	; (80115ec <enet_descriptors_chain_init+0x84>)
 80115c0:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80115c4:	60d3      	str	r3, [r2, #12]
 80115c6:	4a0a      	ldr	r2, [pc, #40]	; (80115f0 <enet_descriptors_chain_init+0x88>)
 80115c8:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80115cc:	2008      	movs	r0, #8
 80115ce:	4c09      	ldr	r4, [pc, #36]	; (80115f4 <enet_descriptors_chain_init+0x8c>)
 80115d0:	6013      	str	r3, [r2, #0]
 80115d2:	e7d7      	b.n	8011584 <enet_descriptors_chain_init+0x1c>
 80115d4:	40029000 	andmi	r9, r2, r0
 80115d8:	2000d8dc 	ldrdcs	sp, [r0], -ip
 80115dc:	2000ccf4 	strdcs	ip, [r0], -r4
 80115e0:	20009c94 	mulcs	r0, r4, ip
 80115e4:	20009c88 	andcs	r9, r0, r8, lsl #25
 80115e8:	20009c8c 	andcs	r9, r0, ip, lsl #25
 80115ec:	2000cc74 	andcs	ip, r0, r4, ror ip
 80115f0:	20009c90 	mulcs	r0, r0, ip
 80115f4:	20009cd4 	ldrdcs	r9, [r0], -r4

080115f8 <enet_frame_receive>:
 80115f8:	4a1d      	ldr	r2, [pc, #116]	; (8011670 <enet_frame_receive+0x78>)
 80115fa:	b510      	push	{r4, lr}
 80115fc:	6813      	ldr	r3, [r2, #0]
 80115fe:	681b      	ldr	r3, [r3, #0]
 8011600:	2b00      	cmp	r3, #0
 8011602:	db33      	blt.n	801166c <enet_frame_receive+0x74>
 8011604:	b970      	cbnz	r0, 8011624 <enet_frame_receive+0x2c>
 8011606:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801160a:	6813      	ldr	r3, [r2, #0]
 801160c:	6019      	str	r1, [r3, #0]
 801160e:	4919      	ldr	r1, [pc, #100]	; (8011674 <enet_frame_receive+0x7c>)
 8011610:	6948      	ldr	r0, [r1, #20]
 8011612:	0604      	lsls	r4, r0, #24
 8011614:	d419      	bmi.n	801164a <enet_frame_receive+0x52>
 8011616:	6859      	ldr	r1, [r3, #4]
 8011618:	0448      	lsls	r0, r1, #17
 801161a:	d51b      	bpl.n	8011654 <enet_frame_receive+0x5c>
 801161c:	68db      	ldr	r3, [r3, #12]
 801161e:	2001      	movs	r0, #1
 8011620:	6013      	str	r3, [r2, #0]
 8011622:	bd10      	pop	{r4, pc}
 8011624:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8011628:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 801162c:	d11e      	bne.n	801166c <enet_frame_receive+0x74>
 801162e:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8011632:	3b04      	subs	r3, #4
 8011634:	428b      	cmp	r3, r1
 8011636:	d819      	bhi.n	801166c <enet_frame_receive+0x74>
 8011638:	2100      	movs	r1, #0
 801163a:	4299      	cmp	r1, r3
 801163c:	6814      	ldr	r4, [r2, #0]
 801163e:	d2e2      	bcs.n	8011606 <enet_frame_receive+0xe>
 8011640:	68a4      	ldr	r4, [r4, #8]
 8011642:	5d0c      	ldrb	r4, [r1, r4]
 8011644:	5444      	strb	r4, [r0, r1]
 8011646:	3101      	adds	r1, #1
 8011648:	e7f7      	b.n	801163a <enet_frame_receive+0x42>
 801164a:	2080      	movs	r0, #128	; 0x80
 801164c:	6148      	str	r0, [r1, #20]
 801164e:	2000      	movs	r0, #0
 8011650:	6088      	str	r0, [r1, #8]
 8011652:	e7e0      	b.n	8011616 <enet_frame_receive+0x1e>
 8011654:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8011658:	4906      	ldr	r1, [pc, #24]	; (8011674 <enet_frame_receive+0x7c>)
 801165a:	bf05      	ittet	eq
 801165c:	3310      	addeq	r3, #16
 801165e:	6809      	ldreq	r1, [r1, #0]
 8011660:	68cb      	ldrne	r3, [r1, #12]
 8011662:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8011666:	bf08      	it	eq
 8011668:	185b      	addeq	r3, r3, r1
 801166a:	e7d8      	b.n	801161e <enet_frame_receive+0x26>
 801166c:	2000      	movs	r0, #0
 801166e:	e7d8      	b.n	8011622 <enet_frame_receive+0x2a>
 8011670:	20009c90 	mulcs	r0, r0, ip
 8011674:	40029000 	andmi	r9, r2, r0

08011678 <enet_frame_transmit>:
 8011678:	4a1e      	ldr	r2, [pc, #120]	; (80116f4 <enet_frame_transmit+0x7c>)
 801167a:	b530      	push	{r4, r5, lr}
 801167c:	6813      	ldr	r3, [r2, #0]
 801167e:	681b      	ldr	r3, [r3, #0]
 8011680:	2b00      	cmp	r3, #0
 8011682:	db34      	blt.n	80116ee <enet_frame_transmit+0x76>
 8011684:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8011688:	4299      	cmp	r1, r3
 801168a:	d830      	bhi.n	80116ee <enet_frame_transmit+0x76>
 801168c:	b9e8      	cbnz	r0, 80116ca <enet_frame_transmit+0x52>
 801168e:	6813      	ldr	r3, [r2, #0]
 8011690:	4819      	ldr	r0, [pc, #100]	; (80116f8 <enet_frame_transmit+0x80>)
 8011692:	6059      	str	r1, [r3, #4]
 8011694:	6819      	ldr	r1, [r3, #0]
 8011696:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801169a:	6019      	str	r1, [r3, #0]
 801169c:	6941      	ldr	r1, [r0, #20]
 801169e:	6944      	ldr	r4, [r0, #20]
 80116a0:	f001 0104 	and.w	r1, r1, #4
 80116a4:	f004 0420 	and.w	r4, r4, #32
 80116a8:	4321      	orrs	r1, r4
 80116aa:	d110      	bne.n	80116ce <enet_frame_transmit+0x56>
 80116ac:	6819      	ldr	r1, [r3, #0]
 80116ae:	02c8      	lsls	r0, r1, #11
 80116b0:	d511      	bpl.n	80116d6 <enet_frame_transmit+0x5e>
 80116b2:	68db      	ldr	r3, [r3, #12]
 80116b4:	2001      	movs	r0, #1
 80116b6:	6013      	str	r3, [r2, #0]
 80116b8:	bd30      	pop	{r4, r5, pc}
 80116ba:	5cc5      	ldrb	r5, [r0, r3]
 80116bc:	68a4      	ldr	r4, [r4, #8]
 80116be:	551d      	strb	r5, [r3, r4]
 80116c0:	3301      	adds	r3, #1
 80116c2:	428b      	cmp	r3, r1
 80116c4:	6814      	ldr	r4, [r2, #0]
 80116c6:	d1f8      	bne.n	80116ba <enet_frame_transmit+0x42>
 80116c8:	e7e1      	b.n	801168e <enet_frame_transmit+0x16>
 80116ca:	2300      	movs	r3, #0
 80116cc:	e7f9      	b.n	80116c2 <enet_frame_transmit+0x4a>
 80116ce:	6141      	str	r1, [r0, #20]
 80116d0:	2100      	movs	r1, #0
 80116d2:	6041      	str	r1, [r0, #4]
 80116d4:	e7ea      	b.n	80116ac <enet_frame_transmit+0x34>
 80116d6:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80116da:	4907      	ldr	r1, [pc, #28]	; (80116f8 <enet_frame_transmit+0x80>)
 80116dc:	bf05      	ittet	eq
 80116de:	3310      	addeq	r3, #16
 80116e0:	6809      	ldreq	r1, [r1, #0]
 80116e2:	690b      	ldrne	r3, [r1, #16]
 80116e4:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80116e8:	bf08      	it	eq
 80116ea:	185b      	addeq	r3, r3, r1
 80116ec:	e7e2      	b.n	80116b4 <enet_frame_transmit+0x3c>
 80116ee:	2000      	movs	r0, #0
 80116f0:	e7e2      	b.n	80116b8 <enet_frame_transmit+0x40>
 80116f2:	bf00      	nop
 80116f4:	20009c94 	mulcs	r0, r4, ip
 80116f8:	40029000 	andmi	r9, r2, r0

080116fc <enet_transmit_checksum_config>:
 80116fc:	6803      	ldr	r3, [r0, #0]
 80116fe:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8011702:	430b      	orrs	r3, r1
 8011704:	6003      	str	r3, [r0, #0]
 8011706:	4770      	bx	lr

08011708 <enet_mac_address_set>:
 8011708:	888a      	ldrh	r2, [r1, #4]
 801170a:	4b03      	ldr	r3, [pc, #12]	; (8011718 <enet_mac_address_set+0x10>)
 801170c:	50c2      	str	r2, [r0, r3]
 801170e:	680a      	ldr	r2, [r1, #0]
 8011710:	3304      	adds	r3, #4
 8011712:	50c2      	str	r2, [r0, r3]
 8011714:	4770      	bx	lr
 8011716:	bf00      	nop
 8011718:	40028040 	andmi	r8, r2, r0, asr #32

0801171c <enet_rx_enable>:
 801171c:	4a05      	ldr	r2, [pc, #20]	; (8011734 <enet_rx_enable+0x18>)
 801171e:	6813      	ldr	r3, [r2, #0]
 8011720:	f043 0304 	orr.w	r3, r3, #4
 8011724:	6013      	str	r3, [r2, #0]
 8011726:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801172a:	6993      	ldr	r3, [r2, #24]
 801172c:	f043 0302 	orr.w	r3, r3, #2
 8011730:	6193      	str	r3, [r2, #24]
 8011732:	4770      	bx	lr
 8011734:	40028000 	andmi	r8, r2, r0

08011738 <enet_phy_write_read>:
 8011738:	b530      	push	{r4, r5, lr}
 801173a:	4604      	mov	r4, r0
 801173c:	4d13      	ldr	r5, [pc, #76]	; (801178c <enet_phy_write_read+0x54>)
 801173e:	0192      	lsls	r2, r2, #6
 8011740:	6928      	ldr	r0, [r5, #16]
 8011742:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8011746:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801174a:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801174e:	4302      	orrs	r2, r0
 8011750:	02c9      	lsls	r1, r1, #11
 8011752:	b289      	uxth	r1, r1
 8011754:	2c02      	cmp	r4, #2
 8011756:	ea42 0204 	orr.w	r2, r2, r4
 801175a:	ea42 0201 	orr.w	r2, r2, r1
 801175e:	bf08      	it	eq
 8011760:	8819      	ldrheq	r1, [r3, #0]
 8011762:	f042 0201 	orr.w	r2, r2, #1
 8011766:	bf08      	it	eq
 8011768:	6169      	streq	r1, [r5, #20]
 801176a:	612a      	str	r2, [r5, #16]
 801176c:	4907      	ldr	r1, [pc, #28]	; (801178c <enet_phy_write_read+0x54>)
 801176e:	4a08      	ldr	r2, [pc, #32]	; (8011790 <enet_phy_write_read+0x58>)
 8011770:	6908      	ldr	r0, [r1, #16]
 8011772:	07c0      	lsls	r0, r0, #31
 8011774:	d501      	bpl.n	801177a <enet_phy_write_read+0x42>
 8011776:	3a01      	subs	r2, #1
 8011778:	d1fa      	bne.n	8011770 <enet_phy_write_read+0x38>
 801177a:	690a      	ldr	r2, [r1, #16]
 801177c:	43d2      	mvns	r2, r2
 801177e:	f002 0001 	and.w	r0, r2, #1
 8011782:	b90c      	cbnz	r4, 8011788 <enet_phy_write_read+0x50>
 8011784:	694a      	ldr	r2, [r1, #20]
 8011786:	801a      	strh	r2, [r3, #0]
 8011788:	bd30      	pop	{r4, r5, pc}
 801178a:	bf00      	nop
 801178c:	40028000 	andmi	r8, r2, r0
 8011790:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011794 <enet_phy_config>:
 8011794:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011796:	4d22      	ldr	r5, [pc, #136]	; (8011820 <enet_phy_config+0x8c>)
 8011798:	2001      	movs	r0, #1
 801179a:	692c      	ldr	r4, [r5, #16]
 801179c:	f000 fc70 	bl	8012080 <rcu_clock_freq_get>
 80117a0:	4b20      	ldr	r3, [pc, #128]	; (8011824 <enet_phy_config+0x90>)
 80117a2:	4a21      	ldr	r2, [pc, #132]	; (8011828 <enet_phy_config+0x94>)
 80117a4:	4403      	add	r3, r0
 80117a6:	4293      	cmp	r3, r2
 80117a8:	f024 041c 	bic.w	r4, r4, #28
 80117ac:	d21f      	bcs.n	80117ee <enet_phy_config+0x5a>
 80117ae:	f044 0408 	orr.w	r4, r4, #8
 80117b2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80117b6:	612c      	str	r4, [r5, #16]
 80117b8:	2200      	movs	r2, #0
 80117ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117be:	2101      	movs	r1, #1
 80117c0:	2002      	movs	r0, #2
 80117c2:	f10d 0306 	add.w	r3, sp, #6
 80117c6:	f7ff ffb7 	bl	8011738 <enet_phy_write_read>
 80117ca:	b310      	cbz	r0, 8011812 <enet_phy_config+0x7e>
 80117cc:	2200      	movs	r2, #0
 80117ce:	4817      	ldr	r0, [pc, #92]	; (801182c <enet_phy_config+0x98>)
 80117d0:	f7ff feaa 	bl	8011528 <enet_delay>
 80117d4:	2101      	movs	r1, #1
 80117d6:	4610      	mov	r0, r2
 80117d8:	f10d 0306 	add.w	r3, sp, #6
 80117dc:	f7ff ffac 	bl	8011738 <enet_phy_write_read>
 80117e0:	b1b8      	cbz	r0, 8011812 <enet_phy_config+0x7e>
 80117e2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80117e6:	43c0      	mvns	r0, r0
 80117e8:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80117ec:	e012      	b.n	8011814 <enet_phy_config+0x80>
 80117ee:	4b10      	ldr	r3, [pc, #64]	; (8011830 <enet_phy_config+0x9c>)
 80117f0:	4a10      	ldr	r2, [pc, #64]	; (8011834 <enet_phy_config+0xa0>)
 80117f2:	4403      	add	r3, r0
 80117f4:	4293      	cmp	r3, r2
 80117f6:	d802      	bhi.n	80117fe <enet_phy_config+0x6a>
 80117f8:	f044 040c 	orr.w	r4, r4, #12
 80117fc:	e7d9      	b.n	80117b2 <enet_phy_config+0x1e>
 80117fe:	4b0e      	ldr	r3, [pc, #56]	; (8011838 <enet_phy_config+0xa4>)
 8011800:	4a0e      	ldr	r2, [pc, #56]	; (801183c <enet_phy_config+0xa8>)
 8011802:	4403      	add	r3, r0
 8011804:	4293      	cmp	r3, r2
 8011806:	d9d4      	bls.n	80117b2 <enet_phy_config+0x1e>
 8011808:	4b0d      	ldr	r3, [pc, #52]	; (8011840 <enet_phy_config+0xac>)
 801180a:	4a0e      	ldr	r2, [pc, #56]	; (8011844 <enet_phy_config+0xb0>)
 801180c:	4403      	add	r3, r0
 801180e:	4293      	cmp	r3, r2
 8011810:	d902      	bls.n	8011818 <enet_phy_config+0x84>
 8011812:	2000      	movs	r0, #0
 8011814:	b003      	add	sp, #12
 8011816:	bd30      	pop	{r4, r5, pc}
 8011818:	f044 0404 	orr.w	r4, r4, #4
 801181c:	e7c9      	b.n	80117b2 <enet_phy_config+0x1e>
 801181e:	bf00      	nop
 8011820:	40028000 	andmi	r8, r2, r0
 8011824:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8011828:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 801182c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011830:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8011834:	017d783f 	cmneq	sp, pc, lsr r8
 8011838:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 801183c:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8011840:	faa2b580 	blx	68bee48 <__stack_size+0x68bce48>
 8011844:	0112a880 	tsteq	r2, r0, lsl #17

08011848 <enet_init>:
 8011848:	2300      	movs	r3, #0
 801184a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801184c:	4604      	mov	r4, r0
 801184e:	460d      	mov	r5, r1
 8011850:	4616      	mov	r6, r2
 8011852:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011856:	f7ff ff9d 	bl	8011794 <enet_phy_config>
 801185a:	2800      	cmp	r0, #0
 801185c:	d037      	beq.n	80118ce <enet_init+0x86>
 801185e:	4b3b      	ldr	r3, [pc, #236]	; (801194c <enet_init+0x104>)
 8011860:	4a3b      	ldr	r2, [pc, #236]	; (8011950 <enet_init+0x108>)
 8011862:	6819      	ldr	r1, [r3, #0]
 8011864:	2c01      	cmp	r4, #1
 8011866:	ea02 0201 	and.w	r2, r2, r1
 801186a:	601a      	str	r2, [r3, #0]
 801186c:	f04f 0200 	mov.w	r2, #0
 8011870:	605a      	str	r2, [r3, #4]
 8011872:	609a      	str	r2, [r3, #8]
 8011874:	60da      	str	r2, [r3, #12]
 8011876:	6999      	ldr	r1, [r3, #24]
 8011878:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801187c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8011880:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8011884:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8011888:	6199      	str	r1, [r3, #24]
 801188a:	4932      	ldr	r1, [pc, #200]	; (8011954 <enet_init+0x10c>)
 801188c:	61da      	str	r2, [r3, #28]
 801188e:	6988      	ldr	r0, [r1, #24]
 8011890:	4b31      	ldr	r3, [pc, #196]	; (8011958 <enet_init+0x110>)
 8011892:	ea03 0300 	and.w	r3, r3, r0
 8011896:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 801189a:	618b      	str	r3, [r1, #24]
 801189c:	680b      	ldr	r3, [r1, #0]
 801189e:	4b2f      	ldr	r3, [pc, #188]	; (801195c <enet_init+0x114>)
 80118a0:	600b      	str	r3, [r1, #0]
 80118a2:	d01e      	beq.n	80118e2 <enet_init+0x9a>
 80118a4:	08e3      	lsrs	r3, r4, #3
 80118a6:	0861      	lsrs	r1, r4, #1
 80118a8:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80118ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80118b0:	430b      	orrs	r3, r1
 80118b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80118b6:	2101      	movs	r1, #1
 80118b8:	2002      	movs	r0, #2
 80118ba:	f10d 0306 	add.w	r3, sp, #6
 80118be:	f7ff ff3b 	bl	8011738 <enet_phy_write_read>
 80118c2:	b158      	cbz	r0, 80118dc <enet_init+0x94>
 80118c4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80118c8:	f7ff fe2e 	bl	8011528 <enet_delay>
 80118cc:	e05d      	b.n	801198a <enet_init+0x142>
 80118ce:	4824      	ldr	r0, [pc, #144]	; (8011960 <enet_init+0x118>)
 80118d0:	f7ff fe2a 	bl	8011528 <enet_delay>
 80118d4:	f7ff ff5e 	bl	8011794 <enet_phy_config>
 80118d8:	2800      	cmp	r0, #0
 80118da:	d1c0      	bne.n	801185e <enet_init+0x16>
 80118dc:	2000      	movs	r0, #0
 80118de:	b003      	add	sp, #12
 80118e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118e2:	4614      	mov	r4, r2
 80118e4:	4f1f      	ldr	r7, [pc, #124]	; (8011964 <enet_init+0x11c>)
 80118e6:	2201      	movs	r2, #1
 80118e8:	2000      	movs	r0, #0
 80118ea:	4611      	mov	r1, r2
 80118ec:	f10d 0306 	add.w	r3, sp, #6
 80118f0:	f7ff ff22 	bl	8011738 <enet_phy_write_read>
 80118f4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80118f8:	3401      	adds	r4, #1
 80118fa:	f002 0204 	and.w	r2, r2, #4
 80118fe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011902:	b912      	cbnz	r2, 801190a <enet_init+0xc2>
 8011904:	42bc      	cmp	r4, r7
 8011906:	d1ee      	bne.n	80118e6 <enet_init+0x9e>
 8011908:	e7e8      	b.n	80118dc <enet_init+0x94>
 801190a:	42bc      	cmp	r4, r7
 801190c:	d0e6      	beq.n	80118dc <enet_init+0x94>
 801190e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8011912:	2101      	movs	r1, #1
 8011914:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011918:	2002      	movs	r0, #2
 801191a:	2200      	movs	r2, #0
 801191c:	f7ff ff0c 	bl	8011738 <enet_phy_write_read>
 8011920:	2800      	cmp	r0, #0
 8011922:	d0db      	beq.n	80118dc <enet_init+0x94>
 8011924:	2400      	movs	r4, #0
 8011926:	4f0f      	ldr	r7, [pc, #60]	; (8011964 <enet_init+0x11c>)
 8011928:	2201      	movs	r2, #1
 801192a:	2000      	movs	r0, #0
 801192c:	4611      	mov	r1, r2
 801192e:	f10d 0306 	add.w	r3, sp, #6
 8011932:	f7ff ff01 	bl	8011738 <enet_phy_write_read>
 8011936:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801193a:	3401      	adds	r4, #1
 801193c:	f002 0220 	and.w	r2, r2, #32
 8011940:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011944:	b982      	cbnz	r2, 8011968 <enet_init+0x120>
 8011946:	42bc      	cmp	r4, r7
 8011948:	d1ee      	bne.n	8011928 <enet_init+0xe0>
 801194a:	e7c7      	b.n	80118dc <enet_init+0x94>
 801194c:	40028000 	andmi	r8, r2, r0
 8011950:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8011954:	40029000 	andmi	r9, r2, r0
 8011958:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 801195c:	02c16000 	sbceq	r6, r1, #0
 8011960:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8011964:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8011968:	42bc      	cmp	r4, r7
 801196a:	d0b7      	beq.n	80118dc <enet_init+0x94>
 801196c:	2101      	movs	r1, #1
 801196e:	2210      	movs	r2, #16
 8011970:	2000      	movs	r0, #0
 8011972:	f7ff fee1 	bl	8011738 <enet_phy_write_read>
 8011976:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801197a:	f3c3 0480 	ubfx	r4, r3, #2, #1
 801197e:	0799      	lsls	r1, r3, #30
 8011980:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8011984:	d401      	bmi.n	801198a <enet_init+0x142>
 8011986:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801198a:	4b63      	ldr	r3, [pc, #396]	; (8011b18 <enet_init+0x2d0>)
 801198c:	681a      	ldr	r2, [r3, #0]
 801198e:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8011992:	4314      	orrs	r4, r2
 8011994:	056a      	lsls	r2, r5, #21
 8011996:	601c      	str	r4, [r3, #0]
 8011998:	d50b      	bpl.n	80119b2 <enet_init+0x16a>
 801199a:	681a      	ldr	r2, [r3, #0]
 801199c:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80119a0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80119a4:	601a      	str	r2, [r3, #0]
 80119a6:	4a5d      	ldr	r2, [pc, #372]	; (8011b1c <enet_init+0x2d4>)
 80119a8:	6993      	ldr	r3, [r2, #24]
 80119aa:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80119ae:	431d      	orrs	r5, r3
 80119b0:	6195      	str	r5, [r2, #24]
 80119b2:	4959      	ldr	r1, [pc, #356]	; (8011b18 <enet_init+0x2d0>)
 80119b4:	684b      	ldr	r3, [r1, #4]
 80119b6:	431e      	orrs	r6, r3
 80119b8:	4b59      	ldr	r3, [pc, #356]	; (8011b20 <enet_init+0x2d8>)
 80119ba:	604e      	str	r6, [r1, #4]
 80119bc:	681a      	ldr	r2, [r3, #0]
 80119be:	07d7      	lsls	r7, r2, #31
 80119c0:	d510      	bpl.n	80119e4 <enet_init+0x19c>
 80119c2:	685a      	ldr	r2, [r3, #4]
 80119c4:	680c      	ldr	r4, [r1, #0]
 80119c6:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80119ca:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80119ce:	4320      	orrs	r0, r4
 80119d0:	6008      	str	r0, [r1, #0]
 80119d2:	4852      	ldr	r0, [pc, #328]	; (8011b1c <enet_init+0x2d4>)
 80119d4:	0892      	lsrs	r2, r2, #2
 80119d6:	6981      	ldr	r1, [r0, #24]
 80119d8:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80119dc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80119e0:	430a      	orrs	r2, r1
 80119e2:	6182      	str	r2, [r0, #24]
 80119e4:	681a      	ldr	r2, [r3, #0]
 80119e6:	0796      	lsls	r6, r2, #30
 80119e8:	d508      	bpl.n	80119fc <enet_init+0x1b4>
 80119ea:	494c      	ldr	r1, [pc, #304]	; (8011b1c <enet_init+0x2d4>)
 80119ec:	6898      	ldr	r0, [r3, #8]
 80119ee:	680a      	ldr	r2, [r1, #0]
 80119f0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80119f4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80119f8:	4302      	orrs	r2, r0
 80119fa:	600a      	str	r2, [r1, #0]
 80119fc:	681a      	ldr	r2, [r3, #0]
 80119fe:	0755      	lsls	r5, r2, #29
 8011a00:	d508      	bpl.n	8011a14 <enet_init+0x1cc>
 8011a02:	4946      	ldr	r1, [pc, #280]	; (8011b1c <enet_init+0x2d4>)
 8011a04:	68d8      	ldr	r0, [r3, #12]
 8011a06:	680a      	ldr	r2, [r1, #0]
 8011a08:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8011a0c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8011a10:	4302      	orrs	r2, r0
 8011a12:	600a      	str	r2, [r1, #0]
 8011a14:	681a      	ldr	r2, [r3, #0]
 8011a16:	0714      	lsls	r4, r2, #28
 8011a18:	d508      	bpl.n	8011a2c <enet_init+0x1e4>
 8011a1a:	4940      	ldr	r1, [pc, #256]	; (8011b1c <enet_init+0x2d4>)
 8011a1c:	6918      	ldr	r0, [r3, #16]
 8011a1e:	680a      	ldr	r2, [r1, #0]
 8011a20:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8011a24:	f022 0202 	bic.w	r2, r2, #2
 8011a28:	4302      	orrs	r2, r0
 8011a2a:	600a      	str	r2, [r1, #0]
 8011a2c:	681a      	ldr	r2, [r3, #0]
 8011a2e:	06d0      	lsls	r0, r2, #27
 8011a30:	d506      	bpl.n	8011a40 <enet_init+0x1f8>
 8011a32:	493a      	ldr	r1, [pc, #232]	; (8011b1c <enet_init+0x2d4>)
 8011a34:	4a3b      	ldr	r2, [pc, #236]	; (8011b24 <enet_init+0x2dc>)
 8011a36:	6988      	ldr	r0, [r1, #24]
 8011a38:	4002      	ands	r2, r0
 8011a3a:	6958      	ldr	r0, [r3, #20]
 8011a3c:	4302      	orrs	r2, r0
 8011a3e:	618a      	str	r2, [r1, #24]
 8011a40:	681a      	ldr	r2, [r3, #0]
 8011a42:	0691      	lsls	r1, r2, #26
 8011a44:	d508      	bpl.n	8011a58 <enet_init+0x210>
 8011a46:	4935      	ldr	r1, [pc, #212]	; (8011b1c <enet_init+0x2d4>)
 8011a48:	6998      	ldr	r0, [r3, #24]
 8011a4a:	698a      	ldr	r2, [r1, #24]
 8011a4c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8011a50:	f022 0204 	bic.w	r2, r2, #4
 8011a54:	4302      	orrs	r2, r0
 8011a56:	618a      	str	r2, [r1, #24]
 8011a58:	681a      	ldr	r2, [r3, #0]
 8011a5a:	0652      	lsls	r2, r2, #25
 8011a5c:	d506      	bpl.n	8011a6c <enet_init+0x224>
 8011a5e:	492e      	ldr	r1, [pc, #184]	; (8011b18 <enet_init+0x2d0>)
 8011a60:	69d8      	ldr	r0, [r3, #28]
 8011a62:	69ca      	ldr	r2, [r1, #28]
 8011a64:	0c52      	lsrs	r2, r2, #17
 8011a66:	0452      	lsls	r2, r2, #17
 8011a68:	4302      	orrs	r2, r0
 8011a6a:	61ca      	str	r2, [r1, #28]
 8011a6c:	681a      	ldr	r2, [r3, #0]
 8011a6e:	0617      	lsls	r7, r2, #24
 8011a70:	d517      	bpl.n	8011aa2 <enet_init+0x25a>
 8011a72:	4c29      	ldr	r4, [pc, #164]	; (8011b18 <enet_init+0x2d0>)
 8011a74:	6a1a      	ldr	r2, [r3, #32]
 8011a76:	69a0      	ldr	r0, [r4, #24]
 8011a78:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8011a7c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8011a80:	0400      	lsls	r0, r0, #16
 8011a82:	0c00      	lsrs	r0, r0, #16
 8011a84:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8011a88:	4301      	orrs	r1, r0
 8011a8a:	4824      	ldr	r0, [pc, #144]	; (8011b1c <enet_init+0x2d4>)
 8011a8c:	61a1      	str	r1, [r4, #24]
 8011a8e:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8011a92:	0a12      	lsrs	r2, r2, #8
 8011a94:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8011a98:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8011a9c:	430a      	orrs	r2, r1
 8011a9e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8011aa2:	681a      	ldr	r2, [r3, #0]
 8011aa4:	05d6      	lsls	r6, r2, #23
 8011aa6:	bf42      	ittt	mi
 8011aa8:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8011aaa:	4a1b      	ldrmi	r2, [pc, #108]	; (8011b18 <enet_init+0x2d0>)
 8011aac:	6091      	strmi	r1, [r2, #8]
 8011aae:	681a      	ldr	r2, [r3, #0]
 8011ab0:	0595      	lsls	r5, r2, #22
 8011ab2:	bf42      	ittt	mi
 8011ab4:	4a18      	ldrmi	r2, [pc, #96]	; (8011b18 <enet_init+0x2d0>)
 8011ab6:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8011ab8:	60d1      	strmi	r1, [r2, #12]
 8011aba:	681a      	ldr	r2, [r3, #0]
 8011abc:	0554      	lsls	r4, r2, #21
 8011abe:	d508      	bpl.n	8011ad2 <enet_init+0x28a>
 8011ac0:	4915      	ldr	r1, [pc, #84]	; (8011b18 <enet_init+0x2d0>)
 8011ac2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8011ac4:	684a      	ldr	r2, [r1, #4]
 8011ac6:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8011aca:	f022 0206 	bic.w	r2, r2, #6
 8011ace:	4302      	orrs	r2, r0
 8011ad0:	604a      	str	r2, [r1, #4]
 8011ad2:	681a      	ldr	r2, [r3, #0]
 8011ad4:	0510      	lsls	r0, r2, #20
 8011ad6:	d508      	bpl.n	8011aea <enet_init+0x2a2>
 8011ad8:	490f      	ldr	r1, [pc, #60]	; (8011b18 <enet_init+0x2d0>)
 8011ada:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8011adc:	680a      	ldr	r2, [r1, #0]
 8011ade:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8011ae2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8011ae6:	4302      	orrs	r2, r0
 8011ae8:	600a      	str	r2, [r1, #0]
 8011aea:	681a      	ldr	r2, [r3, #0]
 8011aec:	04d1      	lsls	r1, r2, #19
 8011aee:	d506      	bpl.n	8011afe <enet_init+0x2b6>
 8011af0:	4909      	ldr	r1, [pc, #36]	; (8011b18 <enet_init+0x2d0>)
 8011af2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8011af4:	680a      	ldr	r2, [r1, #0]
 8011af6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8011afa:	4302      	orrs	r2, r0
 8011afc:	600a      	str	r2, [r1, #0]
 8011afe:	681a      	ldr	r2, [r3, #0]
 8011b00:	0492      	lsls	r2, r2, #18
 8011b02:	d506      	bpl.n	8011b12 <enet_init+0x2ca>
 8011b04:	4904      	ldr	r1, [pc, #16]	; (8011b18 <enet_init+0x2d0>)
 8011b06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b08:	680a      	ldr	r2, [r1, #0]
 8011b0a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8011b0e:	4313      	orrs	r3, r2
 8011b10:	600b      	str	r3, [r1, #0]
 8011b12:	2001      	movs	r0, #1
 8011b14:	e6e3      	b.n	80118de <enet_init+0x96>
 8011b16:	bf00      	nop
 8011b18:	40028000 	andmi	r8, r2, r0
 8011b1c:	40029000 	andmi	r9, r2, r0
 8011b20:	20009c98 	mulcs	r0, r8, ip
 8011b24:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08011b28 <enet_txfifo_flush>:
 8011b28:	4b06      	ldr	r3, [pc, #24]	; (8011b44 <enet_txfifo_flush+0x1c>)
 8011b2a:	4807      	ldr	r0, [pc, #28]	; (8011b48 <enet_txfifo_flush+0x20>)
 8011b2c:	699a      	ldr	r2, [r3, #24]
 8011b2e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8011b32:	619a      	str	r2, [r3, #24]
 8011b34:	699a      	ldr	r2, [r3, #24]
 8011b36:	02d2      	lsls	r2, r2, #11
 8011b38:	d502      	bpl.n	8011b40 <enet_txfifo_flush+0x18>
 8011b3a:	3801      	subs	r0, #1
 8011b3c:	d1fa      	bne.n	8011b34 <enet_txfifo_flush+0xc>
 8011b3e:	4770      	bx	lr
 8011b40:	2001      	movs	r0, #1
 8011b42:	4770      	bx	lr
 8011b44:	40029000 	andmi	r9, r2, r0
 8011b48:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08011b4c <enet_tx_enable>:
 8011b4c:	4a06      	ldr	r2, [pc, #24]	; (8011b68 <enet_tx_enable+0x1c>)
 8011b4e:	b508      	push	{r3, lr}
 8011b50:	6813      	ldr	r3, [r2, #0]
 8011b52:	f043 0308 	orr.w	r3, r3, #8
 8011b56:	6013      	str	r3, [r2, #0]
 8011b58:	f7ff ffe6 	bl	8011b28 <enet_txfifo_flush>
 8011b5c:	4a03      	ldr	r2, [pc, #12]	; (8011b6c <enet_tx_enable+0x20>)
 8011b5e:	6993      	ldr	r3, [r2, #24]
 8011b60:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8011b64:	6193      	str	r3, [r2, #24]
 8011b66:	bd08      	pop	{r3, pc}
 8011b68:	40028000 	andmi	r8, r2, r0
 8011b6c:	40029000 	andmi	r9, r2, r0

08011b70 <enet_enable>:
 8011b70:	b508      	push	{r3, lr}
 8011b72:	f7ff ffeb 	bl	8011b4c <enet_tx_enable>
 8011b76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b7a:	f7ff bdcf 	b.w	801171c <enet_rx_enable>

08011b7e <enet_desc_information_get>:
 8011b7e:	2905      	cmp	r1, #5
 8011b80:	d817      	bhi.n	8011bb2 <enet_desc_information_get+0x34>
 8011b82:	e8df f001 	tbb	[pc, r1]
 8011b86:	03091012 	movweq	r1, #36882	; 0x9012
 8011b8a:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8011b8e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8011b92:	4770      	bx	lr
 8011b94:	88c0      	ldrh	r0, [r0, #6]
 8011b96:	e7fa      	b.n	8011b8e <enet_desc_information_get+0x10>
 8011b98:	8840      	ldrh	r0, [r0, #2]
 8011b9a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8011b9e:	2804      	cmp	r0, #4
 8011ba0:	d90a      	bls.n	8011bb8 <enet_desc_information_get+0x3a>
 8011ba2:	3804      	subs	r0, #4
 8011ba4:	4770      	bx	lr
 8011ba6:	6880      	ldr	r0, [r0, #8]
 8011ba8:	4770      	bx	lr
 8011baa:	6800      	ldr	r0, [r0, #0]
 8011bac:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8011bb0:	4770      	bx	lr
 8011bb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011bb6:	4770      	bx	lr
 8011bb8:	2000      	movs	r0, #0
 8011bba:	4770      	bx	lr

08011bbc <enet_rxframe_drop>:
 8011bbc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8011bc0:	4814      	ldr	r0, [pc, #80]	; (8011c14 <enet_rxframe_drop+0x58>)
 8011bc2:	b510      	push	{r4, lr}
 8011bc4:	6802      	ldr	r2, [r0, #0]
 8011bc6:	4914      	ldr	r1, [pc, #80]	; (8011c18 <enet_rxframe_drop+0x5c>)
 8011bc8:	6854      	ldr	r4, [r2, #4]
 8011bca:	6013      	str	r3, [r2, #0]
 8011bcc:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8011bd0:	680b      	ldr	r3, [r1, #0]
 8011bd2:	d009      	beq.n	8011be8 <enet_rxframe_drop+0x2c>
 8011bd4:	b12b      	cbz	r3, 8011be2 <enet_rxframe_drop+0x26>
 8011bd6:	68da      	ldr	r2, [r3, #12]
 8011bd8:	6002      	str	r2, [r0, #0]
 8011bda:	681a      	ldr	r2, [r3, #0]
 8011bdc:	b1ba      	cbz	r2, 8011c0e <enet_rxframe_drop+0x52>
 8011bde:	600a      	str	r2, [r1, #0]
 8011be0:	bd10      	pop	{r4, pc}
 8011be2:	68d3      	ldr	r3, [r2, #12]
 8011be4:	6003      	str	r3, [r0, #0]
 8011be6:	e7fb      	b.n	8011be0 <enet_rxframe_drop+0x24>
 8011be8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8011bec:	4c0b      	ldr	r4, [pc, #44]	; (8011c1c <enet_rxframe_drop+0x60>)
 8011bee:	d006      	beq.n	8011bfe <enet_rxframe_drop+0x42>
 8011bf0:	68e2      	ldr	r2, [r4, #12]
 8011bf2:	6002      	str	r2, [r0, #0]
 8011bf4:	2b00      	cmp	r3, #0
 8011bf6:	d0f3      	beq.n	8011be0 <enet_rxframe_drop+0x24>
 8011bf8:	681b      	ldr	r3, [r3, #0]
 8011bfa:	600b      	str	r3, [r1, #0]
 8011bfc:	e7f0      	b.n	8011be0 <enet_rxframe_drop+0x24>
 8011bfe:	6824      	ldr	r4, [r4, #0]
 8011c00:	3210      	adds	r2, #16
 8011c02:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8011c06:	4422      	add	r2, r4
 8011c08:	6002      	str	r2, [r0, #0]
 8011c0a:	2b00      	cmp	r3, #0
 8011c0c:	d0e8      	beq.n	8011be0 <enet_rxframe_drop+0x24>
 8011c0e:	3310      	adds	r3, #16
 8011c10:	e7f3      	b.n	8011bfa <enet_rxframe_drop+0x3e>
 8011c12:	bf00      	nop
 8011c14:	20009c90 	mulcs	r0, r0, ip
 8011c18:	20009c88 	andcs	r9, r0, r8, lsl #25
 8011c1c:	40029000 	andmi	r9, r2, r0

08011c20 <enet_rxframe_size_get>:
 8011c20:	b508      	push	{r3, lr}
 8011c22:	4b0c      	ldr	r3, [pc, #48]	; (8011c54 <enet_rxframe_size_get+0x34>)
 8011c24:	681b      	ldr	r3, [r3, #0]
 8011c26:	6818      	ldr	r0, [r3, #0]
 8011c28:	2800      	cmp	r0, #0
 8011c2a:	db10      	blt.n	8011c4e <enet_rxframe_size_get+0x2e>
 8011c2c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8011c30:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011c34:	d003      	beq.n	8011c3e <enet_rxframe_size_get+0x1e>
 8011c36:	f7ff ffc1 	bl	8011bbc <enet_rxframe_drop>
 8011c3a:	2001      	movs	r0, #1
 8011c3c:	bd08      	pop	{r3, pc}
 8011c3e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8011c42:	2b21      	cmp	r3, #33	; 0x21
 8011c44:	d0f7      	beq.n	8011c36 <enet_rxframe_size_get+0x16>
 8011c46:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8011c4a:	3804      	subs	r0, #4
 8011c4c:	e7f6      	b.n	8011c3c <enet_rxframe_size_get+0x1c>
 8011c4e:	2000      	movs	r0, #0
 8011c50:	e7f4      	b.n	8011c3c <enet_rxframe_size_get+0x1c>
 8011c52:	bf00      	nop
 8011c54:	20009c90 	mulcs	r0, r0, ip

08011c58 <enet_initpara_reset>:
 8011c58:	2200      	movs	r2, #0
 8011c5a:	4b08      	ldr	r3, [pc, #32]	; (8011c7c <enet_initpara_reset+0x24>)
 8011c5c:	e9c3 2200 	strd	r2, r2, [r3]
 8011c60:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8011c64:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8011c68:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8011c6c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8011c70:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8011c74:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8011c78:	639a      	str	r2, [r3, #56]	; 0x38
 8011c7a:	4770      	bx	lr
 8011c7c:	20009c98 	mulcs	r0, r8, ip

08011c80 <enet_deinit>:
 8011c80:	b508      	push	{r3, lr}
 8011c82:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011c86:	f000 f946 	bl	8011f16 <rcu_periph_reset_enable>
 8011c8a:	f640 200e 	movw	r0, #2574	; 0xa0e
 8011c8e:	f000 f944 	bl	8011f1a <rcu_periph_reset_disable>
 8011c92:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011c96:	f7ff bfdf 	b.w	8011c58 <enet_initpara_reset>
	...

08011c9c <fmc_bank0_unlock>:
 8011c9c:	4b04      	ldr	r3, [pc, #16]	; (8011cb0 <fmc_bank0_unlock+0x14>)
 8011c9e:	691a      	ldr	r2, [r3, #16]
 8011ca0:	0612      	lsls	r2, r2, #24
 8011ca2:	bf41      	itttt	mi
 8011ca4:	4a03      	ldrmi	r2, [pc, #12]	; (8011cb4 <fmc_bank0_unlock+0x18>)
 8011ca6:	605a      	strmi	r2, [r3, #4]
 8011ca8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8011cac:	605a      	strmi	r2, [r3, #4]
 8011cae:	4770      	bx	lr
 8011cb0:	40022000 	andmi	r2, r2, r0
 8011cb4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08011cb8 <fmc_bank1_unlock>:
 8011cb8:	4b04      	ldr	r3, [pc, #16]	; (8011ccc <fmc_bank1_unlock+0x14>)
 8011cba:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011cbc:	0612      	lsls	r2, r2, #24
 8011cbe:	bf41      	itttt	mi
 8011cc0:	4a03      	ldrmi	r2, [pc, #12]	; (8011cd0 <fmc_bank1_unlock+0x18>)
 8011cc2:	645a      	strmi	r2, [r3, #68]	; 0x44
 8011cc4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8011cc8:	645a      	strmi	r2, [r3, #68]	; 0x44
 8011cca:	4770      	bx	lr
 8011ccc:	40022000 	andmi	r2, r2, r0
 8011cd0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08011cd4 <fmc_bank0_lock>:
 8011cd4:	4a02      	ldr	r2, [pc, #8]	; (8011ce0 <fmc_bank0_lock+0xc>)
 8011cd6:	6913      	ldr	r3, [r2, #16]
 8011cd8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011cdc:	6113      	str	r3, [r2, #16]
 8011cde:	4770      	bx	lr
 8011ce0:	40022000 	andmi	r2, r2, r0

08011ce4 <fmc_bank1_lock>:
 8011ce4:	4a02      	ldr	r2, [pc, #8]	; (8011cf0 <fmc_bank1_lock+0xc>)
 8011ce6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8011ce8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011cec:	6513      	str	r3, [r2, #80]	; 0x50
 8011cee:	4770      	bx	lr
 8011cf0:	40022000 	andmi	r2, r2, r0

08011cf4 <fmc_bank0_state_get>:
 8011cf4:	4b07      	ldr	r3, [pc, #28]	; (8011d14 <fmc_bank0_state_get+0x20>)
 8011cf6:	68da      	ldr	r2, [r3, #12]
 8011cf8:	07d1      	lsls	r1, r2, #31
 8011cfa:	d407      	bmi.n	8011d0c <fmc_bank0_state_get+0x18>
 8011cfc:	68da      	ldr	r2, [r3, #12]
 8011cfe:	06d2      	lsls	r2, r2, #27
 8011d00:	d406      	bmi.n	8011d10 <fmc_bank0_state_get+0x1c>
 8011d02:	68d8      	ldr	r0, [r3, #12]
 8011d04:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8011d08:	0040      	lsls	r0, r0, #1
 8011d0a:	4770      	bx	lr
 8011d0c:	2001      	movs	r0, #1
 8011d0e:	4770      	bx	lr
 8011d10:	2003      	movs	r0, #3
 8011d12:	4770      	bx	lr
 8011d14:	40022000 	andmi	r2, r2, r0

08011d18 <fmc_bank1_state_get>:
 8011d18:	4b07      	ldr	r3, [pc, #28]	; (8011d38 <fmc_bank1_state_get+0x20>)
 8011d1a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011d1c:	07d1      	lsls	r1, r2, #31
 8011d1e:	d407      	bmi.n	8011d30 <fmc_bank1_state_get+0x18>
 8011d20:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011d22:	06d2      	lsls	r2, r2, #27
 8011d24:	d406      	bmi.n	8011d34 <fmc_bank1_state_get+0x1c>
 8011d26:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011d28:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8011d2c:	0040      	lsls	r0, r0, #1
 8011d2e:	4770      	bx	lr
 8011d30:	2001      	movs	r0, #1
 8011d32:	4770      	bx	lr
 8011d34:	2003      	movs	r0, #3
 8011d36:	4770      	bx	lr
 8011d38:	40022000 	andmi	r2, r2, r0

08011d3c <fwdgt_enable>:
 8011d3c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8011d40:	4b01      	ldr	r3, [pc, #4]	; (8011d48 <fwdgt_enable+0xc>)
 8011d42:	601a      	str	r2, [r3, #0]
 8011d44:	4770      	bx	lr
 8011d46:	bf00      	nop
 8011d48:	40003000 	andmi	r3, r0, r0

08011d4c <fwdgt_counter_reload>:
 8011d4c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8011d50:	4b01      	ldr	r3, [pc, #4]	; (8011d58 <fwdgt_counter_reload+0xc>)
 8011d52:	601a      	str	r2, [r3, #0]
 8011d54:	4770      	bx	lr
 8011d56:	bf00      	nop
 8011d58:	40003000 	andmi	r3, r0, r0

08011d5c <fwdgt_config>:
 8011d5c:	f245 5355 	movw	r3, #21845	; 0x5555
 8011d60:	4a11      	ldr	r2, [pc, #68]	; (8011da8 <fwdgt_config+0x4c>)
 8011d62:	b510      	push	{r4, lr}
 8011d64:	4c11      	ldr	r4, [pc, #68]	; (8011dac <fwdgt_config+0x50>)
 8011d66:	6013      	str	r3, [r2, #0]
 8011d68:	68d3      	ldr	r3, [r2, #12]
 8011d6a:	3c01      	subs	r4, #1
 8011d6c:	f003 0301 	and.w	r3, r3, #1
 8011d70:	d013      	beq.n	8011d9a <fwdgt_config+0x3e>
 8011d72:	2b00      	cmp	r3, #0
 8011d74:	d1f8      	bne.n	8011d68 <fwdgt_config+0xc>
 8011d76:	6051      	str	r1, [r2, #4]
 8011d78:	490c      	ldr	r1, [pc, #48]	; (8011dac <fwdgt_config+0x50>)
 8011d7a:	4a0b      	ldr	r2, [pc, #44]	; (8011da8 <fwdgt_config+0x4c>)
 8011d7c:	68d3      	ldr	r3, [r2, #12]
 8011d7e:	3901      	subs	r1, #1
 8011d80:	f003 0302 	and.w	r3, r3, #2
 8011d84:	d00d      	beq.n	8011da2 <fwdgt_config+0x46>
 8011d86:	2b00      	cmp	r3, #0
 8011d88:	d1f8      	bne.n	8011d7c <fwdgt_config+0x20>
 8011d8a:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8011d8e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8011d92:	6090      	str	r0, [r2, #8]
 8011d94:	2001      	movs	r0, #1
 8011d96:	6013      	str	r3, [r2, #0]
 8011d98:	e002      	b.n	8011da0 <fwdgt_config+0x44>
 8011d9a:	2b00      	cmp	r3, #0
 8011d9c:	d0eb      	beq.n	8011d76 <fwdgt_config+0x1a>
 8011d9e:	2000      	movs	r0, #0
 8011da0:	bd10      	pop	{r4, pc}
 8011da2:	2b00      	cmp	r3, #0
 8011da4:	d1fb      	bne.n	8011d9e <fwdgt_config+0x42>
 8011da6:	e7f0      	b.n	8011d8a <fwdgt_config+0x2e>
 8011da8:	40003000 	andmi	r3, r0, r0
 8011dac:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08011db0 <gpio_init>:
 8011db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011db4:	f04f 0c0f 	mov.w	ip, #15
 8011db8:	06cf      	lsls	r7, r1, #27
 8011dba:	f04f 0400 	mov.w	r4, #0
 8011dbe:	f04f 0701 	mov.w	r7, #1
 8011dc2:	f001 050f 	and.w	r5, r1, #15
 8011dc6:	bf48      	it	mi
 8011dc8:	4315      	orrmi	r5, r2
 8011dca:	fa23 f204 	lsr.w	r2, r3, r4
 8011dce:	07d6      	lsls	r6, r2, #31
 8011dd0:	d510      	bpl.n	8011df4 <gpio_init+0x44>
 8011dd2:	00a2      	lsls	r2, r4, #2
 8011dd4:	6806      	ldr	r6, [r0, #0]
 8011dd6:	fa0c fe02 	lsl.w	lr, ip, r2
 8011dda:	ea26 060e 	bic.w	r6, r6, lr
 8011dde:	fa05 f202 	lsl.w	r2, r5, r2
 8011de2:	2928      	cmp	r1, #40	; 0x28
 8011de4:	ea42 0206 	orr.w	r2, r2, r6
 8011de8:	d128      	bne.n	8011e3c <gpio_init+0x8c>
 8011dea:	fa07 f604 	lsl.w	r6, r7, r4
 8011dee:	401e      	ands	r6, r3
 8011df0:	6146      	str	r6, [r0, #20]
 8011df2:	6002      	str	r2, [r0, #0]
 8011df4:	3401      	adds	r4, #1
 8011df6:	2c08      	cmp	r4, #8
 8011df8:	d1e7      	bne.n	8011dca <gpio_init+0x1a>
 8011dfa:	2600      	movs	r6, #0
 8011dfc:	f04f 0c0f 	mov.w	ip, #15
 8011e00:	2701      	movs	r7, #1
 8011e02:	f106 0208 	add.w	r2, r6, #8
 8011e06:	fa23 f402 	lsr.w	r4, r3, r2
 8011e0a:	07e4      	lsls	r4, r4, #31
 8011e0c:	d511      	bpl.n	8011e32 <gpio_init+0x82>
 8011e0e:	00b4      	lsls	r4, r6, #2
 8011e10:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8011e14:	fa0c f804 	lsl.w	r8, ip, r4
 8011e18:	ea2e 0e08 	bic.w	lr, lr, r8
 8011e1c:	fa05 f404 	lsl.w	r4, r5, r4
 8011e20:	2928      	cmp	r1, #40	; 0x28
 8011e22:	ea44 040e 	orr.w	r4, r4, lr
 8011e26:	d110      	bne.n	8011e4a <gpio_init+0x9a>
 8011e28:	fa07 f202 	lsl.w	r2, r7, r2
 8011e2c:	401a      	ands	r2, r3
 8011e2e:	6142      	str	r2, [r0, #20]
 8011e30:	6044      	str	r4, [r0, #4]
 8011e32:	3601      	adds	r6, #1
 8011e34:	2e08      	cmp	r6, #8
 8011e36:	d1e4      	bne.n	8011e02 <gpio_init+0x52>
 8011e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e3c:	2948      	cmp	r1, #72	; 0x48
 8011e3e:	bf02      	ittt	eq
 8011e40:	fa07 f604 	lsleq.w	r6, r7, r4
 8011e44:	401e      	andeq	r6, r3
 8011e46:	6106      	streq	r6, [r0, #16]
 8011e48:	e7d3      	b.n	8011df2 <gpio_init+0x42>
 8011e4a:	2948      	cmp	r1, #72	; 0x48
 8011e4c:	bf02      	ittt	eq
 8011e4e:	fa07 f202 	lsleq.w	r2, r7, r2
 8011e52:	401a      	andeq	r2, r3
 8011e54:	6102      	streq	r2, [r0, #16]
 8011e56:	e7eb      	b.n	8011e30 <gpio_init+0x80>

08011e58 <gpio_pin_remap_config>:
 8011e58:	2800      	cmp	r0, #0
 8011e5a:	4a16      	ldr	r2, [pc, #88]	; (8011eb4 <gpio_pin_remap_config+0x5c>)
 8011e5c:	b530      	push	{r4, r5, lr}
 8011e5e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8011e62:	bfb4      	ite	lt
 8011e64:	69d3      	ldrlt	r3, [r2, #28]
 8011e66:	6853      	ldrge	r3, [r2, #4]
 8011e68:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8011e6c:	b284      	uxth	r4, r0
 8011e6e:	d110      	bne.n	8011e92 <gpio_pin_remap_config+0x3a>
 8011e70:	6855      	ldr	r5, [r2, #4]
 8011e72:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011e76:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8011e7a:	6055      	str	r5, [r2, #4]
 8011e7c:	b119      	cbz	r1, 8011e86 <gpio_pin_remap_config+0x2e>
 8011e7e:	0d42      	lsrs	r2, r0, #21
 8011e80:	0112      	lsls	r2, r2, #4
 8011e82:	4094      	lsls	r4, r2
 8011e84:	4323      	orrs	r3, r4
 8011e86:	4a0b      	ldr	r2, [pc, #44]	; (8011eb4 <gpio_pin_remap_config+0x5c>)
 8011e88:	2800      	cmp	r0, #0
 8011e8a:	bfb4      	ite	lt
 8011e8c:	61d3      	strlt	r3, [r2, #28]
 8011e8e:	6053      	strge	r3, [r2, #4]
 8011e90:	bd30      	pop	{r4, r5, pc}
 8011e92:	02c2      	lsls	r2, r0, #11
 8011e94:	bf4d      	iteet	mi
 8011e96:	2203      	movmi	r2, #3
 8011e98:	0d42      	lsrpl	r2, r0, #21
 8011e9a:	0112      	lslpl	r2, r2, #4
 8011e9c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8011ea0:	bf4c      	ite	mi
 8011ea2:	40aa      	lslmi	r2, r5
 8011ea4:	fa04 f202 	lslpl.w	r2, r4, r2
 8011ea8:	ea23 0302 	bic.w	r3, r3, r2
 8011eac:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8011eb0:	e7e4      	b.n	8011e7c <gpio_pin_remap_config+0x24>
 8011eb2:	bf00      	nop
 8011eb4:	40010000 	andmi	r0, r1, r0

08011eb8 <gpio_ethernet_phy_select>:
 8011eb8:	4b04      	ldr	r3, [pc, #16]	; (8011ecc <gpio_ethernet_phy_select+0x14>)
 8011eba:	685a      	ldr	r2, [r3, #4]
 8011ebc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8011ec0:	605a      	str	r2, [r3, #4]
 8011ec2:	685a      	ldr	r2, [r3, #4]
 8011ec4:	4302      	orrs	r2, r0
 8011ec6:	605a      	str	r2, [r3, #4]
 8011ec8:	4770      	bx	lr
 8011eca:	bf00      	nop
 8011ecc:	40010000 	andmi	r0, r1, r0

08011ed0 <pmu_backup_write_enable>:
 8011ed0:	4a02      	ldr	r2, [pc, #8]	; (8011edc <pmu_backup_write_enable+0xc>)
 8011ed2:	6813      	ldr	r3, [r2, #0]
 8011ed4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011ed8:	6013      	str	r3, [r2, #0]
 8011eda:	4770      	bx	lr
 8011edc:	40007000 	andmi	r7, r0, r0

08011ee0 <rcu_periph_clock_enable>:
 8011ee0:	2201      	movs	r2, #1
 8011ee2:	0983      	lsrs	r3, r0, #6
 8011ee4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011ee8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011eec:	6819      	ldr	r1, [r3, #0]
 8011eee:	f000 001f 	and.w	r0, r0, #31
 8011ef2:	4082      	lsls	r2, r0
 8011ef4:	430a      	orrs	r2, r1
 8011ef6:	601a      	str	r2, [r3, #0]
 8011ef8:	4770      	bx	lr

08011efa <rcu_periph_clock_disable>:
 8011efa:	2101      	movs	r1, #1
 8011efc:	0983      	lsrs	r3, r0, #6
 8011efe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011f02:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011f06:	681a      	ldr	r2, [r3, #0]
 8011f08:	f000 001f 	and.w	r0, r0, #31
 8011f0c:	4081      	lsls	r1, r0
 8011f0e:	ea22 0201 	bic.w	r2, r2, r1
 8011f12:	601a      	str	r2, [r3, #0]
 8011f14:	4770      	bx	lr

08011f16 <rcu_periph_reset_enable>:
 8011f16:	f7ff bfe3 	b.w	8011ee0 <rcu_periph_clock_enable>

08011f1a <rcu_periph_reset_disable>:
 8011f1a:	f7ff bfee 	b.w	8011efa <rcu_periph_clock_disable>
	...

08011f20 <rcu_ckout0_config>:
 8011f20:	4a03      	ldr	r2, [pc, #12]	; (8011f30 <rcu_ckout0_config+0x10>)
 8011f22:	6853      	ldr	r3, [r2, #4]
 8011f24:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011f28:	4303      	orrs	r3, r0
 8011f2a:	6053      	str	r3, [r2, #4]
 8011f2c:	4770      	bx	lr
 8011f2e:	bf00      	nop
 8011f30:	40021000 	andmi	r1, r2, r0

08011f34 <rcu_pll2_config>:
 8011f34:	4b04      	ldr	r3, [pc, #16]	; (8011f48 <rcu_pll2_config+0x14>)
 8011f36:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011f38:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8011f3c:	62da      	str	r2, [r3, #44]	; 0x2c
 8011f3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011f40:	4302      	orrs	r2, r0
 8011f42:	62da      	str	r2, [r3, #44]	; 0x2c
 8011f44:	4770      	bx	lr
 8011f46:	bf00      	nop
 8011f48:	40021000 	andmi	r1, r2, r0

08011f4c <rcu_adc_clock_config>:
 8011f4c:	490c      	ldr	r1, [pc, #48]	; (8011f80 <rcu_adc_clock_config+0x34>)
 8011f4e:	2805      	cmp	r0, #5
 8011f50:	684b      	ldr	r3, [r1, #4]
 8011f52:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8011f56:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8011f5a:	d006      	beq.n	8011f6a <rcu_adc_clock_config+0x1e>
 8011f5c:	d803      	bhi.n	8011f66 <rcu_adc_clock_config+0x1a>
 8011f5e:	2804      	cmp	r0, #4
 8011f60:	d10a      	bne.n	8011f78 <rcu_adc_clock_config+0x2c>
 8011f62:	604b      	str	r3, [r1, #4]
 8011f64:	4770      	bx	lr
 8011f66:	2807      	cmp	r0, #7
 8011f68:	d1fb      	bne.n	8011f62 <rcu_adc_clock_config+0x16>
 8011f6a:	4a06      	ldr	r2, [pc, #24]	; (8011f84 <rcu_adc_clock_config+0x38>)
 8011f6c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8011f70:	4313      	orrs	r3, r2
 8011f72:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8011f76:	e7f4      	b.n	8011f62 <rcu_adc_clock_config+0x16>
 8011f78:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8011f7c:	e7f1      	b.n	8011f62 <rcu_adc_clock_config+0x16>
 8011f7e:	bf00      	nop
 8011f80:	40021000 	andmi	r1, r2, r0
 8011f84:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08011f88 <rcu_i2s2_clock_config>:
 8011f88:	4a03      	ldr	r2, [pc, #12]	; (8011f98 <rcu_i2s2_clock_config+0x10>)
 8011f8a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8011f8c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8011f90:	4303      	orrs	r3, r0
 8011f92:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011f94:	4770      	bx	lr
 8011f96:	bf00      	nop
 8011f98:	40021000 	andmi	r1, r2, r0

08011f9c <rcu_flag_get>:
 8011f9c:	0983      	lsrs	r3, r0, #6
 8011f9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011fa2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011fa6:	681a      	ldr	r2, [r3, #0]
 8011fa8:	2301      	movs	r3, #1
 8011faa:	f000 001f 	and.w	r0, r0, #31
 8011fae:	4083      	lsls	r3, r0
 8011fb0:	4213      	tst	r3, r2
 8011fb2:	bf14      	ite	ne
 8011fb4:	2001      	movne	r0, #1
 8011fb6:	2000      	moveq	r0, #0
 8011fb8:	4770      	bx	lr
	...

08011fbc <rcu_osci_stab_wait>:
 8011fbc:	281a      	cmp	r0, #26
 8011fbe:	b508      	push	{r3, lr}
 8011fc0:	d051      	beq.n	8012066 <rcu_osci_stab_wait+0xaa>
 8011fc2:	d806      	bhi.n	8011fd2 <rcu_osci_stab_wait+0x16>
 8011fc4:	2810      	cmp	r0, #16
 8011fc6:	d015      	beq.n	8011ff4 <rcu_osci_stab_wait+0x38>
 8011fc8:	2818      	cmp	r0, #24
 8011fca:	d043      	beq.n	8012054 <rcu_osci_stab_wait+0x98>
 8011fcc:	b368      	cbz	r0, 801202a <rcu_osci_stab_wait+0x6e>
 8011fce:	2000      	movs	r0, #0
 8011fd0:	bd08      	pop	{r3, pc}
 8011fd2:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8011fd6:	d01c      	beq.n	8012012 <rcu_osci_stab_wait+0x56>
 8011fd8:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8011fdc:	d02f      	beq.n	801203e <rcu_osci_stab_wait+0x82>
 8011fde:	281c      	cmp	r0, #28
 8011fe0:	d1f5      	bne.n	8011fce <rcu_osci_stab_wait+0x12>
 8011fe2:	4925      	ldr	r1, [pc, #148]	; (8012078 <rcu_osci_stab_wait+0xbc>)
 8011fe4:	201d      	movs	r0, #29
 8011fe6:	f7ff ffd9 	bl	8011f9c <rcu_flag_get>
 8011fea:	b908      	cbnz	r0, 8011ff0 <rcu_osci_stab_wait+0x34>
 8011fec:	3901      	subs	r1, #1
 8011fee:	d1f9      	bne.n	8011fe4 <rcu_osci_stab_wait+0x28>
 8011ff0:	201d      	movs	r0, #29
 8011ff2:	e008      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 8011ff4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011ff8:	2011      	movs	r0, #17
 8011ffa:	f7ff ffcf 	bl	8011f9c <rcu_flag_get>
 8011ffe:	b908      	cbnz	r0, 8012004 <rcu_osci_stab_wait+0x48>
 8012000:	3901      	subs	r1, #1
 8012002:	d1f9      	bne.n	8011ff8 <rcu_osci_stab_wait+0x3c>
 8012004:	2011      	movs	r0, #17
 8012006:	f7ff ffc9 	bl	8011f9c <rcu_flag_get>
 801200a:	3800      	subs	r0, #0
 801200c:	bf18      	it	ne
 801200e:	2001      	movne	r0, #1
 8012010:	e7de      	b.n	8011fd0 <rcu_osci_stab_wait+0x14>
 8012012:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8012016:	f640 0001 	movw	r0, #2049	; 0x801
 801201a:	f7ff ffbf 	bl	8011f9c <rcu_flag_get>
 801201e:	b908      	cbnz	r0, 8012024 <rcu_osci_stab_wait+0x68>
 8012020:	3901      	subs	r1, #1
 8012022:	d1f8      	bne.n	8012016 <rcu_osci_stab_wait+0x5a>
 8012024:	f640 0001 	movw	r0, #2049	; 0x801
 8012028:	e7ed      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 801202a:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801202e:	2001      	movs	r0, #1
 8012030:	f7ff ffb4 	bl	8011f9c <rcu_flag_get>
 8012034:	b908      	cbnz	r0, 801203a <rcu_osci_stab_wait+0x7e>
 8012036:	3901      	subs	r1, #1
 8012038:	d1f9      	bne.n	801202e <rcu_osci_stab_wait+0x72>
 801203a:	2001      	movs	r0, #1
 801203c:	e7e3      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 801203e:	490e      	ldr	r1, [pc, #56]	; (8012078 <rcu_osci_stab_wait+0xbc>)
 8012040:	f640 1001 	movw	r0, #2305	; 0x901
 8012044:	f7ff ffaa 	bl	8011f9c <rcu_flag_get>
 8012048:	b908      	cbnz	r0, 801204e <rcu_osci_stab_wait+0x92>
 801204a:	3901      	subs	r1, #1
 801204c:	d1f8      	bne.n	8012040 <rcu_osci_stab_wait+0x84>
 801204e:	f640 1001 	movw	r0, #2305	; 0x901
 8012052:	e7d8      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 8012054:	4908      	ldr	r1, [pc, #32]	; (8012078 <rcu_osci_stab_wait+0xbc>)
 8012056:	2019      	movs	r0, #25
 8012058:	f7ff ffa0 	bl	8011f9c <rcu_flag_get>
 801205c:	b908      	cbnz	r0, 8012062 <rcu_osci_stab_wait+0xa6>
 801205e:	3901      	subs	r1, #1
 8012060:	d1f9      	bne.n	8012056 <rcu_osci_stab_wait+0x9a>
 8012062:	2019      	movs	r0, #25
 8012064:	e7cf      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 8012066:	4904      	ldr	r1, [pc, #16]	; (8012078 <rcu_osci_stab_wait+0xbc>)
 8012068:	201b      	movs	r0, #27
 801206a:	f7ff ff97 	bl	8011f9c <rcu_flag_get>
 801206e:	b908      	cbnz	r0, 8012074 <rcu_osci_stab_wait+0xb8>
 8012070:	3901      	subs	r1, #1
 8012072:	d1f9      	bne.n	8012068 <rcu_osci_stab_wait+0xac>
 8012074:	201b      	movs	r0, #27
 8012076:	e7c6      	b.n	8012006 <rcu_osci_stab_wait+0x4a>
 8012078:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801207c <rcu_osci_on>:
 801207c:	f7ff bf30 	b.w	8011ee0 <rcu_periph_clock_enable>

08012080 <rcu_clock_freq_get>:
 8012080:	4b3e      	ldr	r3, [pc, #248]	; (801217c <rcu_clock_freq_get+0xfc>)
 8012082:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012084:	4604      	mov	r4, r0
 8012086:	461f      	mov	r7, r3
 8012088:	b089      	sub	sp, #36	; 0x24
 801208a:	ad04      	add	r5, sp, #16
 801208c:	f103 0610 	add.w	r6, r3, #16
 8012090:	462a      	mov	r2, r5
 8012092:	6818      	ldr	r0, [r3, #0]
 8012094:	6859      	ldr	r1, [r3, #4]
 8012096:	3308      	adds	r3, #8
 8012098:	c203      	stmia	r2!, {r0, r1}
 801209a:	42b3      	cmp	r3, r6
 801209c:	4615      	mov	r5, r2
 801209e:	d1f7      	bne.n	8012090 <rcu_clock_freq_get+0x10>
 80120a0:	466b      	mov	r3, sp
 80120a2:	6938      	ldr	r0, [r7, #16]
 80120a4:	6871      	ldr	r1, [r6, #4]
 80120a6:	4a36      	ldr	r2, [pc, #216]	; (8012180 <rcu_clock_freq_get+0x100>)
 80120a8:	c303      	stmia	r3!, {r0, r1}
 80120aa:	c303      	stmia	r3!, {r0, r1}
 80120ac:	6853      	ldr	r3, [r2, #4]
 80120ae:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80120b2:	2b01      	cmp	r3, #1
 80120b4:	d053      	beq.n	801215e <rcu_clock_freq_get+0xde>
 80120b6:	2b02      	cmp	r3, #2
 80120b8:	d153      	bne.n	8012162 <rcu_clock_freq_get+0xe2>
 80120ba:	6853      	ldr	r3, [r2, #4]
 80120bc:	03dd      	lsls	r5, r3, #15
 80120be:	d523      	bpl.n	8012108 <rcu_clock_freq_get+0x88>
 80120c0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80120c2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80120c6:	4b2f      	ldr	r3, [pc, #188]	; (8012184 <rcu_clock_freq_get+0x104>)
 80120c8:	d00e      	beq.n	80120e8 <rcu_clock_freq_get+0x68>
 80120ca:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80120cc:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80120ce:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80120d2:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80120d6:	3101      	adds	r1, #1
 80120d8:	280f      	cmp	r0, #15
 80120da:	f100 0502 	add.w	r5, r0, #2
 80120de:	fbb3 f3f1 	udiv	r3, r3, r1
 80120e2:	bf08      	it	eq
 80120e4:	2514      	moveq	r5, #20
 80120e6:	436b      	muls	r3, r5
 80120e8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80120ea:	f001 010f 	and.w	r1, r1, #15
 80120ee:	3101      	adds	r1, #1
 80120f0:	fbb3 f3f1 	udiv	r3, r3, r1
 80120f4:	6851      	ldr	r1, [r2, #4]
 80120f6:	6850      	ldr	r0, [r2, #4]
 80120f8:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80120fc:	0080      	lsls	r0, r0, #2
 80120fe:	d505      	bpl.n	801210c <rcu_clock_freq_get+0x8c>
 8012100:	f041 0110 	orr.w	r1, r1, #16
 8012104:	1c48      	adds	r0, r1, #1
 8012106:	e007      	b.n	8012118 <rcu_clock_freq_get+0x98>
 8012108:	4b1f      	ldr	r3, [pc, #124]	; (8012188 <rcu_clock_freq_get+0x108>)
 801210a:	e7f3      	b.n	80120f4 <rcu_clock_freq_get+0x74>
 801210c:	290f      	cmp	r1, #15
 801210e:	d0f9      	beq.n	8012104 <rcu_clock_freq_get+0x84>
 8012110:	290d      	cmp	r1, #13
 8012112:	f101 0002 	add.w	r0, r1, #2
 8012116:	d01d      	beq.n	8012154 <rcu_clock_freq_get+0xd4>
 8012118:	4358      	muls	r0, r3
 801211a:	6853      	ldr	r3, [r2, #4]
 801211c:	6851      	ldr	r1, [r2, #4]
 801211e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8012122:	6852      	ldr	r2, [r2, #4]
 8012124:	3320      	adds	r3, #32
 8012126:	446b      	add	r3, sp
 8012128:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801212c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8012130:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8012134:	3120      	adds	r1, #32
 8012136:	3220      	adds	r2, #32
 8012138:	4469      	add	r1, sp
 801213a:	446a      	add	r2, sp
 801213c:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8012140:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8012144:	fa20 f303 	lsr.w	r3, r0, r3
 8012148:	2c03      	cmp	r4, #3
 801214a:	d815      	bhi.n	8012178 <rcu_clock_freq_get+0xf8>
 801214c:	e8df f004 	tbb	[pc, r4]
 8012150:	110e0b0c 	tstne	lr, ip, lsl #22
 8012154:	2006      	movs	r0, #6
 8012156:	0859      	lsrs	r1, r3, #1
 8012158:	fb00 1003 	mla	r0, r0, r3, r1
 801215c:	e7dd      	b.n	801211a <rcu_clock_freq_get+0x9a>
 801215e:	4809      	ldr	r0, [pc, #36]	; (8012184 <rcu_clock_freq_get+0x104>)
 8012160:	e7db      	b.n	801211a <rcu_clock_freq_get+0x9a>
 8012162:	480a      	ldr	r0, [pc, #40]	; (801218c <rcu_clock_freq_get+0x10c>)
 8012164:	e7d9      	b.n	801211a <rcu_clock_freq_get+0x9a>
 8012166:	4618      	mov	r0, r3
 8012168:	b009      	add	sp, #36	; 0x24
 801216a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801216c:	fa23 f001 	lsr.w	r0, r3, r1
 8012170:	e7fa      	b.n	8012168 <rcu_clock_freq_get+0xe8>
 8012172:	fa23 f002 	lsr.w	r0, r3, r2
 8012176:	e7f7      	b.n	8012168 <rcu_clock_freq_get+0xe8>
 8012178:	2000      	movs	r0, #0
 801217a:	e7f5      	b.n	8012168 <rcu_clock_freq_get+0xe8>
 801217c:	08013234 	stmdaeq	r1, {r2, r4, r5, r9, ip, sp}
 8012180:	40021000 	andmi	r1, r2, r0
 8012184:	017d7840 	cmneq	sp, r0, asr #16
 8012188:	003d0900 	eorseq	r0, sp, r0, lsl #18
 801218c:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08012190 <timer_deinit>:
 8012190:	b508      	push	{r3, lr}
 8012192:	4b2d      	ldr	r3, [pc, #180]	; (8012248 <timer_deinit+0xb8>)
 8012194:	4298      	cmp	r0, r3
 8012196:	d048      	beq.n	801222a <timer_deinit+0x9a>
 8012198:	d816      	bhi.n	80121c8 <timer_deinit+0x38>
 801219a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801219e:	4298      	cmp	r0, r3
 80121a0:	d03c      	beq.n	801221c <timer_deinit+0x8c>
 80121a2:	d807      	bhi.n	80121b4 <timer_deinit+0x24>
 80121a4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80121a8:	d02a      	beq.n	8012200 <timer_deinit+0x70>
 80121aa:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80121ae:	4298      	cmp	r0, r3
 80121b0:	d02d      	beq.n	801220e <timer_deinit+0x7e>
 80121b2:	bd08      	pop	{r3, pc}
 80121b4:	4b25      	ldr	r3, [pc, #148]	; (801224c <timer_deinit+0xbc>)
 80121b6:	4298      	cmp	r0, r3
 80121b8:	d1fb      	bne.n	80121b2 <timer_deinit+0x22>
 80121ba:	f240 4003 	movw	r0, #1027	; 0x403
 80121be:	f7ff feaa 	bl	8011f16 <rcu_periph_reset_enable>
 80121c2:	f240 4003 	movw	r0, #1027	; 0x403
 80121c6:	e017      	b.n	80121f8 <timer_deinit+0x68>
 80121c8:	4b21      	ldr	r3, [pc, #132]	; (8012250 <timer_deinit+0xc0>)
 80121ca:	4298      	cmp	r0, r3
 80121cc:	d00e      	beq.n	80121ec <timer_deinit+0x5c>
 80121ce:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80121d2:	4298      	cmp	r0, r3
 80121d4:	d030      	beq.n	8012238 <timer_deinit+0xa8>
 80121d6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80121da:	4298      	cmp	r0, r3
 80121dc:	d1e9      	bne.n	80121b2 <timer_deinit+0x22>
 80121de:	f240 4005 	movw	r0, #1029	; 0x405
 80121e2:	f7ff fe98 	bl	8011f16 <rcu_periph_reset_enable>
 80121e6:	f240 4005 	movw	r0, #1029	; 0x405
 80121ea:	e005      	b.n	80121f8 <timer_deinit+0x68>
 80121ec:	f240 300b 	movw	r0, #779	; 0x30b
 80121f0:	f7ff fe91 	bl	8011f16 <rcu_periph_reset_enable>
 80121f4:	f240 300b 	movw	r0, #779	; 0x30b
 80121f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80121fc:	f7ff be8d 	b.w	8011f1a <rcu_periph_reset_disable>
 8012200:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8012204:	f7ff fe87 	bl	8011f16 <rcu_periph_reset_enable>
 8012208:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801220c:	e7f4      	b.n	80121f8 <timer_deinit+0x68>
 801220e:	f240 4001 	movw	r0, #1025	; 0x401
 8012212:	f7ff fe80 	bl	8011f16 <rcu_periph_reset_enable>
 8012216:	f240 4001 	movw	r0, #1025	; 0x401
 801221a:	e7ed      	b.n	80121f8 <timer_deinit+0x68>
 801221c:	f240 4002 	movw	r0, #1026	; 0x402
 8012220:	f7ff fe79 	bl	8011f16 <rcu_periph_reset_enable>
 8012224:	f240 4002 	movw	r0, #1026	; 0x402
 8012228:	e7e6      	b.n	80121f8 <timer_deinit+0x68>
 801222a:	f240 4004 	movw	r0, #1028	; 0x404
 801222e:	f7ff fe72 	bl	8011f16 <rcu_periph_reset_enable>
 8012232:	f240 4004 	movw	r0, #1028	; 0x404
 8012236:	e7df      	b.n	80121f8 <timer_deinit+0x68>
 8012238:	f240 300d 	movw	r0, #781	; 0x30d
 801223c:	f7ff fe6b 	bl	8011f16 <rcu_periph_reset_enable>
 8012240:	f240 300d 	movw	r0, #781	; 0x30d
 8012244:	e7d8      	b.n	80121f8 <timer_deinit+0x68>
 8012246:	bf00      	nop
 8012248:	40001000 	andmi	r1, r0, r0
 801224c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8012250:	40012c00 	andmi	r2, r1, r0, lsl #24

08012254 <timer_init>:
 8012254:	880b      	ldrh	r3, [r1, #0]
 8012256:	6283      	str	r3, [r0, #40]	; 0x28
 8012258:	4b26      	ldr	r3, [pc, #152]	; (80122f4 <timer_init+0xa0>)
 801225a:	4298      	cmp	r0, r3
 801225c:	d018      	beq.n	8012290 <timer_init+0x3c>
 801225e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8012262:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8012266:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801226a:	d011      	beq.n	8012290 <timer_init+0x3c>
 801226c:	4a22      	ldr	r2, [pc, #136]	; (80122f8 <timer_init+0xa4>)
 801226e:	4290      	cmp	r0, r2
 8012270:	d00e      	beq.n	8012290 <timer_init+0x3c>
 8012272:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8012276:	4290      	cmp	r0, r2
 8012278:	d00a      	beq.n	8012290 <timer_init+0x3c>
 801227a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801227e:	4293      	cmp	r3, r2
 8012280:	d006      	beq.n	8012290 <timer_init+0x3c>
 8012282:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8012286:	4293      	cmp	r3, r2
 8012288:	d002      	beq.n	8012290 <timer_init+0x3c>
 801228a:	4b1c      	ldr	r3, [pc, #112]	; (80122fc <timer_init+0xa8>)
 801228c:	4298      	cmp	r0, r3
 801228e:	d10f      	bne.n	80122b0 <timer_init+0x5c>
 8012290:	6803      	ldr	r3, [r0, #0]
 8012292:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8012296:	6003      	str	r3, [r0, #0]
 8012298:	884b      	ldrh	r3, [r1, #2]
 801229a:	6802      	ldr	r2, [r0, #0]
 801229c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80122a0:	4313      	orrs	r3, r2
 80122a2:	6003      	str	r3, [r0, #0]
 80122a4:	888b      	ldrh	r3, [r1, #4]
 80122a6:	6802      	ldr	r2, [r0, #0]
 80122a8:	f003 0310 	and.w	r3, r3, #16
 80122ac:	4313      	orrs	r3, r2
 80122ae:	6003      	str	r3, [r0, #0]
 80122b0:	688b      	ldr	r3, [r1, #8]
 80122b2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80122b4:	4b12      	ldr	r3, [pc, #72]	; (8012300 <timer_init+0xac>)
 80122b6:	4298      	cmp	r0, r3
 80122b8:	d003      	beq.n	80122c2 <timer_init+0x6e>
 80122ba:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80122be:	4298      	cmp	r0, r3
 80122c0:	d104      	bne.n	80122cc <timer_init+0x78>
 80122c2:	6943      	ldr	r3, [r0, #20]
 80122c4:	f043 0301 	orr.w	r3, r3, #1
 80122c8:	6143      	str	r3, [r0, #20]
 80122ca:	4770      	bx	lr
 80122cc:	6803      	ldr	r3, [r0, #0]
 80122ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80122d2:	6003      	str	r3, [r0, #0]
 80122d4:	898b      	ldrh	r3, [r1, #12]
 80122d6:	6802      	ldr	r2, [r0, #0]
 80122d8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80122dc:	4313      	orrs	r3, r2
 80122de:	6003      	str	r3, [r0, #0]
 80122e0:	4b04      	ldr	r3, [pc, #16]	; (80122f4 <timer_init+0xa0>)
 80122e2:	4298      	cmp	r0, r3
 80122e4:	d002      	beq.n	80122ec <timer_init+0x98>
 80122e6:	4b04      	ldr	r3, [pc, #16]	; (80122f8 <timer_init+0xa4>)
 80122e8:	4298      	cmp	r0, r3
 80122ea:	d1ea      	bne.n	80122c2 <timer_init+0x6e>
 80122ec:	7b8b      	ldrb	r3, [r1, #14]
 80122ee:	6303      	str	r3, [r0, #48]	; 0x30
 80122f0:	e7e7      	b.n	80122c2 <timer_init+0x6e>
 80122f2:	bf00      	nop
 80122f4:	40012c00 	andmi	r2, r1, r0, lsl #24
 80122f8:	40013400 	andmi	r3, r1, r0, lsl #8
 80122fc:	40002000 	andmi	r2, r0, r0
 8012300:	40001000 	andmi	r1, r0, r0

08012304 <timer_enable>:
 8012304:	6803      	ldr	r3, [r0, #0]
 8012306:	f043 0301 	orr.w	r3, r3, #1
 801230a:	6003      	str	r3, [r0, #0]
 801230c:	4770      	bx	lr
	...

08012310 <usart_deinit>:
 8012310:	b508      	push	{r3, lr}
 8012312:	4b1d      	ldr	r3, [pc, #116]	; (8012388 <usart_deinit+0x78>)
 8012314:	4298      	cmp	r0, r3
 8012316:	d028      	beq.n	801236a <usart_deinit+0x5a>
 8012318:	d808      	bhi.n	801232c <usart_deinit+0x1c>
 801231a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801231e:	4298      	cmp	r0, r3
 8012320:	d015      	beq.n	801234e <usart_deinit+0x3e>
 8012322:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012326:	4298      	cmp	r0, r3
 8012328:	d018      	beq.n	801235c <usart_deinit+0x4c>
 801232a:	bd08      	pop	{r3, pc}
 801232c:	4b17      	ldr	r3, [pc, #92]	; (801238c <usart_deinit+0x7c>)
 801232e:	4298      	cmp	r0, r3
 8012330:	d022      	beq.n	8012378 <usart_deinit+0x68>
 8012332:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8012336:	4298      	cmp	r0, r3
 8012338:	d1f7      	bne.n	801232a <usart_deinit+0x1a>
 801233a:	f240 300e 	movw	r0, #782	; 0x30e
 801233e:	f7ff fdea 	bl	8011f16 <rcu_periph_reset_enable>
 8012342:	f240 300e 	movw	r0, #782	; 0x30e
 8012346:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801234a:	f7ff bde6 	b.w	8011f1a <rcu_periph_reset_disable>
 801234e:	f240 4011 	movw	r0, #1041	; 0x411
 8012352:	f7ff fde0 	bl	8011f16 <rcu_periph_reset_enable>
 8012356:	f240 4011 	movw	r0, #1041	; 0x411
 801235a:	e7f4      	b.n	8012346 <usart_deinit+0x36>
 801235c:	f240 4012 	movw	r0, #1042	; 0x412
 8012360:	f7ff fdd9 	bl	8011f16 <rcu_periph_reset_enable>
 8012364:	f240 4012 	movw	r0, #1042	; 0x412
 8012368:	e7ed      	b.n	8012346 <usart_deinit+0x36>
 801236a:	f240 4013 	movw	r0, #1043	; 0x413
 801236e:	f7ff fdd2 	bl	8011f16 <rcu_periph_reset_enable>
 8012372:	f240 4013 	movw	r0, #1043	; 0x413
 8012376:	e7e6      	b.n	8012346 <usart_deinit+0x36>
 8012378:	f240 4014 	movw	r0, #1044	; 0x414
 801237c:	f7ff fdcb 	bl	8011f16 <rcu_periph_reset_enable>
 8012380:	f240 4014 	movw	r0, #1044	; 0x414
 8012384:	e7df      	b.n	8012346 <usart_deinit+0x36>
 8012386:	bf00      	nop
 8012388:	40004c00 	andmi	r4, r0, r0, lsl #24
 801238c:	40005000 	andmi	r5, r0, r0

08012390 <usart_baudrate_set>:
 8012390:	b538      	push	{r3, r4, r5, lr}
 8012392:	4b11      	ldr	r3, [pc, #68]	; (80123d8 <usart_baudrate_set+0x48>)
 8012394:	4604      	mov	r4, r0
 8012396:	4298      	cmp	r0, r3
 8012398:	460d      	mov	r5, r1
 801239a:	d01b      	beq.n	80123d4 <usart_baudrate_set+0x44>
 801239c:	d809      	bhi.n	80123b2 <usart_baudrate_set+0x22>
 801239e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80123a2:	4298      	cmp	r0, r3
 80123a4:	d016      	beq.n	80123d4 <usart_baudrate_set+0x44>
 80123a6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80123aa:	4298      	cmp	r0, r3
 80123ac:	d012      	beq.n	80123d4 <usart_baudrate_set+0x44>
 80123ae:	2000      	movs	r0, #0
 80123b0:	e009      	b.n	80123c6 <usart_baudrate_set+0x36>
 80123b2:	4b0a      	ldr	r3, [pc, #40]	; (80123dc <usart_baudrate_set+0x4c>)
 80123b4:	4298      	cmp	r0, r3
 80123b6:	d00d      	beq.n	80123d4 <usart_baudrate_set+0x44>
 80123b8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80123bc:	4298      	cmp	r0, r3
 80123be:	d1f6      	bne.n	80123ae <usart_baudrate_set+0x1e>
 80123c0:	2003      	movs	r0, #3
 80123c2:	f7ff fe5d 	bl	8012080 <rcu_clock_freq_get>
 80123c6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80123ca:	fbb1 f1f5 	udiv	r1, r1, r5
 80123ce:	b289      	uxth	r1, r1
 80123d0:	60a1      	str	r1, [r4, #8]
 80123d2:	bd38      	pop	{r3, r4, r5, pc}
 80123d4:	2002      	movs	r0, #2
 80123d6:	e7f4      	b.n	80123c2 <usart_baudrate_set+0x32>
 80123d8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80123dc:	40005000 	andmi	r5, r0, r0

080123e0 <usart_parity_config>:
 80123e0:	68c3      	ldr	r3, [r0, #12]
 80123e2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80123e6:	60c3      	str	r3, [r0, #12]
 80123e8:	68c3      	ldr	r3, [r0, #12]
 80123ea:	430b      	orrs	r3, r1
 80123ec:	60c3      	str	r3, [r0, #12]
 80123ee:	4770      	bx	lr

080123f0 <usart_word_length_set>:
 80123f0:	68c3      	ldr	r3, [r0, #12]
 80123f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80123f6:	60c3      	str	r3, [r0, #12]
 80123f8:	68c3      	ldr	r3, [r0, #12]
 80123fa:	430b      	orrs	r3, r1
 80123fc:	60c3      	str	r3, [r0, #12]
 80123fe:	4770      	bx	lr

08012400 <usart_stop_bit_set>:
 8012400:	6903      	ldr	r3, [r0, #16]
 8012402:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8012406:	6103      	str	r3, [r0, #16]
 8012408:	6903      	ldr	r3, [r0, #16]
 801240a:	430b      	orrs	r3, r1
 801240c:	6103      	str	r3, [r0, #16]
 801240e:	4770      	bx	lr

08012410 <usart_transmit_config>:
 8012410:	68c3      	ldr	r3, [r0, #12]
 8012412:	f023 0308 	bic.w	r3, r3, #8
 8012416:	430b      	orrs	r3, r1
 8012418:	60c3      	str	r3, [r0, #12]
 801241a:	4770      	bx	lr

0801241c <usart_receive_config>:
 801241c:	68c3      	ldr	r3, [r0, #12]
 801241e:	f023 0304 	bic.w	r3, r3, #4
 8012422:	430b      	orrs	r3, r1
 8012424:	60c3      	str	r3, [r0, #12]
 8012426:	4770      	bx	lr

08012428 <usart_hardware_flow_rts_config>:
 8012428:	6943      	ldr	r3, [r0, #20]
 801242a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801242e:	430b      	orrs	r3, r1
 8012430:	6143      	str	r3, [r0, #20]
 8012432:	4770      	bx	lr

08012434 <usart_hardware_flow_cts_config>:
 8012434:	6943      	ldr	r3, [r0, #20]
 8012436:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801243a:	430b      	orrs	r3, r1
 801243c:	6143      	str	r3, [r0, #20]
 801243e:	4770      	bx	lr

08012440 <usart_flag_get>:
 8012440:	098b      	lsrs	r3, r1, #6
 8012442:	581a      	ldr	r2, [r3, r0]
 8012444:	2301      	movs	r3, #1
 8012446:	f001 011f 	and.w	r1, r1, #31
 801244a:	408b      	lsls	r3, r1
 801244c:	4213      	tst	r3, r2
 801244e:	bf14      	ite	ne
 8012450:	2001      	movne	r0, #1
 8012452:	2000      	moveq	r0, #0
 8012454:	4770      	bx	lr
	...

08012458 <emac_eth_recv>:
 8012458:	b538      	push	{r3, r4, r5, lr}
 801245a:	4605      	mov	r5, r0
 801245c:	f7ff fbe0 	bl	8011c20 <enet_rxframe_size_get>
 8012460:	4604      	mov	r4, r0
 8012462:	b138      	cbz	r0, 8012474 <emac_eth_recv+0x1c>
 8012464:	4b05      	ldr	r3, [pc, #20]	; (801247c <emac_eth_recv+0x24>)
 8012466:	2105      	movs	r1, #5
 8012468:	6818      	ldr	r0, [r3, #0]
 801246a:	f7ff fb88 	bl	8011b7e <enet_desc_information_get>
 801246e:	6028      	str	r0, [r5, #0]
 8012470:	4620      	mov	r0, r4
 8012472:	bd38      	pop	{r3, r4, r5, pc}
 8012474:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012478:	e7fb      	b.n	8012472 <emac_eth_recv+0x1a>
 801247a:	bf00      	nop
 801247c:	20009c90 	mulcs	r0, r0, ip

08012480 <emac_free_pkt>:
 8012480:	2100      	movs	r1, #0
 8012482:	4608      	mov	r0, r1
 8012484:	f7ff b8b8 	b.w	80115f8 <enet_frame_receive>

08012488 <emac_eth_send>:
 8012488:	f7ff b8f6 	b.w	8011678 <enet_frame_transmit>

0801248c <gd32_adc_init()>:
 801248c:	b510      	push	{r4, lr}
 801248e:	f240 6009 	movw	r0, #1545	; 0x609
 8012492:	4c21      	ldr	r4, [pc, #132]	; (8012518 <gd32_adc_init()+0x8c>)
 8012494:	f7ff fd24 	bl	8011ee0 <rcu_periph_clock_enable>
 8012498:	2005      	movs	r0, #5
 801249a:	f7ff fd57 	bl	8011f4c <rcu_adc_clock_config>
 801249e:	4620      	mov	r0, r4
 80124a0:	2201      	movs	r2, #1
 80124a2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80124a6:	f000 fc1f 	bl	8012ce8 <adc_special_function_config>
 80124aa:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 80124ae:	4620      	mov	r0, r4
 80124b0:	2102      	movs	r1, #2
 80124b2:	f000 fcb8 	bl	8012e26 <adc_external_trigger_source_config>
 80124b6:	2100      	movs	r1, #0
 80124b8:	4620      	mov	r0, r4
 80124ba:	f000 fc3d 	bl	8012d38 <adc_data_alignment_config>
 80124be:	2000      	movs	r0, #0
 80124c0:	f000 fc02 	bl	8012cc8 <adc_mode_config>
 80124c4:	2202      	movs	r2, #2
 80124c6:	4620      	mov	r0, r4
 80124c8:	4611      	mov	r1, r2
 80124ca:	f000 fc61 	bl	8012d90 <adc_channel_length_config>
 80124ce:	4620      	mov	r0, r4
 80124d0:	2307      	movs	r3, #7
 80124d2:	2210      	movs	r2, #16
 80124d4:	2100      	movs	r1, #0
 80124d6:	f000 fc78 	bl	8012dca <adc_inserted_channel_config>
 80124da:	2307      	movs	r3, #7
 80124dc:	4620      	mov	r0, r4
 80124de:	2211      	movs	r2, #17
 80124e0:	2101      	movs	r1, #1
 80124e2:	f000 fc72 	bl	8012dca <adc_inserted_channel_config>
 80124e6:	2201      	movs	r2, #1
 80124e8:	2102      	movs	r1, #2
 80124ea:	4620      	mov	r0, r4
 80124ec:	f000 fcac 	bl	8012e48 <adc_external_trigger_config>
 80124f0:	f000 fc44 	bl	8012d7c <adc_tempsensor_vrefint_enable>
 80124f4:	4620      	mov	r0, r4
 80124f6:	f000 fc28 	bl	8012d4a <adc_enable>
 80124fa:	2100      	movs	r1, #0
 80124fc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8012500:	f000 fb22 	bl	8012b48 <udelay(unsigned int, unsigned int)>
 8012504:	4620      	mov	r0, r4
 8012506:	f000 fc28 	bl	8012d5a <adc_calibration_enable>
 801250a:	4620      	mov	r0, r4
 801250c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012510:	2102      	movs	r1, #2
 8012512:	f000 bcb4 	b.w	8012e7e <adc_software_trigger_enable>
 8012516:	bf00      	nop
 8012518:	40012400 	andmi	r2, r1, r0, lsl #8

0801251c <_stop() [clone .isra.0]>:
 801251c:	b508      	push	{r3, lr}
 801251e:	4806      	ldr	r0, [pc, #24]	; (8012538 <_stop() [clone .isra.0]+0x1c>)
 8012520:	f000 fdc0 	bl	80130a4 <i2c_stop_on_bus>
 8012524:	f640 73ff 	movw	r3, #4095	; 0xfff
 8012528:	4904      	ldr	r1, [pc, #16]	; (801253c <_stop() [clone .isra.0]+0x20>)
 801252a:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801252e:	0592      	lsls	r2, r2, #22
 8012530:	d501      	bpl.n	8012536 <_stop() [clone .isra.0]+0x1a>
 8012532:	3b01      	subs	r3, #1
 8012534:	d1f9      	bne.n	801252a <_stop() [clone .isra.0]+0xe>
 8012536:	bd08      	pop	{r3, pc}
 8012538:	40005400 	andmi	r5, r0, r0, lsl #8
 801253c:	40005000 	andmi	r5, r0, r0

08012540 <gd32_i2c_begin>:
 8012540:	b510      	push	{r4, lr}
 8012542:	f240 7015 	movw	r0, #1813	; 0x715
 8012546:	f7ff fccb 	bl	8011ee0 <rcu_periph_clock_enable>
 801254a:	4c15      	ldr	r4, [pc, #84]	; (80125a0 <gd32_i2c_begin+0x60>)
 801254c:	f240 6003 	movw	r0, #1539	; 0x603
 8012550:	f7ff fcc6 	bl	8011ee0 <rcu_periph_clock_enable>
 8012554:	f240 6003 	movw	r0, #1539	; 0x603
 8012558:	f7ff fcc2 	bl	8011ee0 <rcu_periph_clock_enable>
 801255c:	4620      	mov	r0, r4
 801255e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012562:	2203      	movs	r2, #3
 8012564:	211c      	movs	r1, #28
 8012566:	f7ff fc23 	bl	8011db0 <gpio_init>
 801256a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801256e:	2203      	movs	r2, #3
 8012570:	4620      	mov	r0, r4
 8012572:	211c      	movs	r1, #28
 8012574:	f7ff fc1c 	bl	8011db0 <gpio_init>
 8012578:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 801257c:	2101      	movs	r1, #1
 801257e:	2002      	movs	r0, #2
 8012580:	f7ff fc6a 	bl	8011e58 <gpio_pin_remap_config>
 8012584:	4620      	mov	r0, r4
 8012586:	4907      	ldr	r1, [pc, #28]	; (80125a4 <gd32_i2c_begin+0x64>)
 8012588:	2200      	movs	r2, #0
 801258a:	f000 fd05 	bl	8012f98 <i2c_clock_config>
 801258e:	4620      	mov	r0, r4
 8012590:	f000 fd7e 	bl	8013090 <i2c_enable>
 8012594:	4620      	mov	r0, r4
 8012596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801259a:	2101      	movs	r1, #1
 801259c:	f000 bd5e 	b.w	801305c <i2c_ack_config>
 80125a0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80125a4:	00061a80 	andeq	r1, r6, r0, lsl #21

080125a8 <gd32_i2c_set_baudrate>:
 80125a8:	4601      	mov	r1, r0
 80125aa:	2200      	movs	r2, #0
 80125ac:	4801      	ldr	r0, [pc, #4]	; (80125b4 <gd32_i2c_set_baudrate+0xc>)
 80125ae:	f000 bcf3 	b.w	8012f98 <i2c_clock_config>
 80125b2:	bf00      	nop
 80125b4:	40005400 	andmi	r5, r0, r0, lsl #8

080125b8 <gd32_i2c_set_address>:
 80125b8:	4b01      	ldr	r3, [pc, #4]	; (80125c0 <gd32_i2c_set_address+0x8>)
 80125ba:	0040      	lsls	r0, r0, #1
 80125bc:	7018      	strb	r0, [r3, #0]
 80125be:	4770      	bx	lr
 80125c0:	2000d8fc 	strdcs	sp, [r0], -ip

080125c4 <gd32_i2c_write>:
 80125c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80125c6:	4604      	mov	r4, r0
 80125c8:	460f      	mov	r7, r1
 80125ca:	f640 75ff 	movw	r5, #4095	; 0xfff
 80125ce:	4e2e      	ldr	r6, [pc, #184]	; (8012688 <gd32_i2c_write+0xc4>)
 80125d0:	f240 6101 	movw	r1, #1537	; 0x601
 80125d4:	4630      	mov	r0, r6
 80125d6:	f000 fd6f 	bl	80130b8 <i2c_flag_get>
 80125da:	b9b0      	cbnz	r0, 801260a <gd32_i2c_write+0x46>
 80125dc:	482a      	ldr	r0, [pc, #168]	; (8012688 <gd32_i2c_write+0xc4>)
 80125de:	f000 fd5c 	bl	801309a <i2c_start_on_bus>
 80125e2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80125e6:	4e28      	ldr	r6, [pc, #160]	; (8012688 <gd32_i2c_write+0xc4>)
 80125e8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80125ec:	4630      	mov	r0, r6
 80125ee:	f000 fd63 	bl	80130b8 <i2c_flag_get>
 80125f2:	b190      	cbz	r0, 801261a <gd32_i2c_write+0x56>
 80125f4:	4b25      	ldr	r3, [pc, #148]	; (801268c <gd32_i2c_write+0xc8>)
 80125f6:	f06f 0201 	mvn.w	r2, #1
 80125fa:	7819      	ldrb	r1, [r3, #0]
 80125fc:	4822      	ldr	r0, [pc, #136]	; (8012688 <gd32_i2c_write+0xc4>)
 80125fe:	f000 fd3f 	bl	8013080 <i2c_master_addressing>
 8012602:	f640 75ff 	movw	r5, #4095	; 0xfff
 8012606:	4e20      	ldr	r6, [pc, #128]	; (8012688 <gd32_i2c_write+0xc4>)
 8012608:	e00c      	b.n	8012624 <gd32_i2c_write+0x60>
 801260a:	3d01      	subs	r5, #1
 801260c:	d1e0      	bne.n	80125d0 <gd32_i2c_write+0xc>
 801260e:	f7ff ff85 	bl	801251c <_stop() [clone .isra.0]>
 8012612:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012616:	4240      	negs	r0, r0
 8012618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801261a:	3d01      	subs	r5, #1
 801261c:	d1e4      	bne.n	80125e8 <gd32_i2c_write+0x24>
 801261e:	e7f6      	b.n	801260e <gd32_i2c_write+0x4a>
 8012620:	3d01      	subs	r5, #1
 8012622:	d0f4      	beq.n	801260e <gd32_i2c_write+0x4a>
 8012624:	f240 5101 	movw	r1, #1281	; 0x501
 8012628:	4630      	mov	r0, r6
 801262a:	f000 fd45 	bl	80130b8 <i2c_flag_get>
 801262e:	2800      	cmp	r0, #0
 8012630:	d0f6      	beq.n	8012620 <gd32_i2c_write+0x5c>
 8012632:	f240 5101 	movw	r1, #1281	; 0x501
 8012636:	4814      	ldr	r0, [pc, #80]	; (8012688 <gd32_i2c_write+0xc4>)
 8012638:	f000 fd49 	bl	80130ce <i2c_flag_clear>
 801263c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8012640:	4e11      	ldr	r6, [pc, #68]	; (8012688 <gd32_i2c_write+0xc4>)
 8012642:	f240 5107 	movw	r1, #1287	; 0x507
 8012646:	4630      	mov	r0, r6
 8012648:	f000 fd36 	bl	80130b8 <i2c_flag_get>
 801264c:	2801      	cmp	r0, #1
 801264e:	d107      	bne.n	8012660 <gd32_i2c_write+0x9c>
 8012650:	4e0d      	ldr	r6, [pc, #52]	; (8012688 <gd32_i2c_write+0xc4>)
 8012652:	4427      	add	r7, r4
 8012654:	42a7      	cmp	r7, r4
 8012656:	d106      	bne.n	8012666 <gd32_i2c_write+0xa2>
 8012658:	f7ff ff60 	bl	801251c <_stop() [clone .isra.0]>
 801265c:	2000      	movs	r0, #0
 801265e:	e7da      	b.n	8012616 <gd32_i2c_write+0x52>
 8012660:	3d01      	subs	r5, #1
 8012662:	d1ee      	bne.n	8012642 <gd32_i2c_write+0x7e>
 8012664:	e7d3      	b.n	801260e <gd32_i2c_write+0x4a>
 8012666:	4630      	mov	r0, r6
 8012668:	f814 1b01 	ldrb.w	r1, [r4], #1
 801266c:	f000 fd1f 	bl	80130ae <i2c_data_transmit>
 8012670:	f640 75ff 	movw	r5, #4095	; 0xfff
 8012674:	f240 5102 	movw	r1, #1282	; 0x502
 8012678:	4630      	mov	r0, r6
 801267a:	f000 fd1d 	bl	80130b8 <i2c_flag_get>
 801267e:	2800      	cmp	r0, #0
 8012680:	d1e8      	bne.n	8012654 <gd32_i2c_write+0x90>
 8012682:	3d01      	subs	r5, #1
 8012684:	d1f6      	bne.n	8012674 <gd32_i2c_write+0xb0>
 8012686:	e7c2      	b.n	801260e <gd32_i2c_write+0x4a>
 8012688:	40005400 	andmi	r5, r0, r0, lsl #8
 801268c:	2000d8fc 	strdcs	sp, [r0], -ip

08012690 <gd32_i2c_read>:
 8012690:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012694:	4680      	mov	r8, r0
 8012696:	460c      	mov	r4, r1
 8012698:	f640 76ff 	movw	r6, #4095	; 0xfff
 801269c:	4f4b      	ldr	r7, [pc, #300]	; (80127cc <gd32_i2c_read+0x13c>)
 801269e:	f240 6101 	movw	r1, #1537	; 0x601
 80126a2:	4638      	mov	r0, r7
 80126a4:	f000 fd08 	bl	80130b8 <i2c_flag_get>
 80126a8:	4605      	mov	r5, r0
 80126aa:	bb08      	cbnz	r0, 80126f0 <gd32_i2c_read+0x60>
 80126ac:	2c02      	cmp	r4, #2
 80126ae:	d103      	bne.n	80126b8 <gd32_i2c_read+0x28>
 80126b0:	4601      	mov	r1, r0
 80126b2:	4846      	ldr	r0, [pc, #280]	; (80127cc <gd32_i2c_read+0x13c>)
 80126b4:	f000 fcdb 	bl	801306e <i2c_ackpos_config>
 80126b8:	4844      	ldr	r0, [pc, #272]	; (80127cc <gd32_i2c_read+0x13c>)
 80126ba:	f000 fcee 	bl	801309a <i2c_start_on_bus>
 80126be:	f640 76ff 	movw	r6, #4095	; 0xfff
 80126c2:	4f42      	ldr	r7, [pc, #264]	; (80127cc <gd32_i2c_read+0x13c>)
 80126c4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80126c8:	4638      	mov	r0, r7
 80126ca:	f000 fcf5 	bl	80130b8 <i2c_flag_get>
 80126ce:	b1a8      	cbz	r0, 80126fc <gd32_i2c_read+0x6c>
 80126d0:	4b3f      	ldr	r3, [pc, #252]	; (80127d0 <gd32_i2c_read+0x140>)
 80126d2:	2201      	movs	r2, #1
 80126d4:	7819      	ldrb	r1, [r3, #0]
 80126d6:	483d      	ldr	r0, [pc, #244]	; (80127cc <gd32_i2c_read+0x13c>)
 80126d8:	f000 fcd2 	bl	8013080 <i2c_master_addressing>
 80126dc:	2c02      	cmp	r4, #2
 80126de:	d803      	bhi.n	80126e8 <gd32_i2c_read+0x58>
 80126e0:	2100      	movs	r1, #0
 80126e2:	483a      	ldr	r0, [pc, #232]	; (80127cc <gd32_i2c_read+0x13c>)
 80126e4:	f000 fcba 	bl	801305c <i2c_ack_config>
 80126e8:	f640 76ff 	movw	r6, #4095	; 0xfff
 80126ec:	4f37      	ldr	r7, [pc, #220]	; (80127cc <gd32_i2c_read+0x13c>)
 80126ee:	e00a      	b.n	8012706 <gd32_i2c_read+0x76>
 80126f0:	3e01      	subs	r6, #1
 80126f2:	d1d4      	bne.n	801269e <gd32_i2c_read+0xe>
 80126f4:	f7ff ff12 	bl	801251c <_stop() [clone .isra.0]>
 80126f8:	2504      	movs	r5, #4
 80126fa:	e04d      	b.n	8012798 <gd32_i2c_read+0x108>
 80126fc:	3e01      	subs	r6, #1
 80126fe:	d1e1      	bne.n	80126c4 <gd32_i2c_read+0x34>
 8012700:	e7f8      	b.n	80126f4 <gd32_i2c_read+0x64>
 8012702:	3e01      	subs	r6, #1
 8012704:	d0f6      	beq.n	80126f4 <gd32_i2c_read+0x64>
 8012706:	f240 5101 	movw	r1, #1281	; 0x501
 801270a:	4638      	mov	r0, r7
 801270c:	f000 fcd4 	bl	80130b8 <i2c_flag_get>
 8012710:	2800      	cmp	r0, #0
 8012712:	d0f6      	beq.n	8012702 <gd32_i2c_read+0x72>
 8012714:	f240 5101 	movw	r1, #1281	; 0x501
 8012718:	482c      	ldr	r0, [pc, #176]	; (80127cc <gd32_i2c_read+0x13c>)
 801271a:	f000 fcd8 	bl	80130ce <i2c_flag_clear>
 801271e:	2c01      	cmp	r4, #1
 8012720:	d102      	bne.n	8012728 <gd32_i2c_read+0x98>
 8012722:	482a      	ldr	r0, [pc, #168]	; (80127cc <gd32_i2c_read+0x13c>)
 8012724:	f000 fcbe 	bl	80130a4 <i2c_stop_on_bus>
 8012728:	f640 77ff 	movw	r7, #4095	; 0xfff
 801272c:	4e27      	ldr	r6, [pc, #156]	; (80127cc <gd32_i2c_read+0x13c>)
 801272e:	e022      	b.n	8012776 <gd32_i2c_read+0xe6>
 8012730:	2c03      	cmp	r4, #3
 8012732:	d134      	bne.n	801279e <gd32_i2c_read+0x10e>
 8012734:	f640 79ff 	movw	r9, #4095	; 0xfff
 8012738:	e002      	b.n	8012740 <gd32_i2c_read+0xb0>
 801273a:	f1b9 0901 	subs.w	r9, r9, #1
 801273e:	d0d9      	beq.n	80126f4 <gd32_i2c_read+0x64>
 8012740:	f240 5102 	movw	r1, #1282	; 0x502
 8012744:	4630      	mov	r0, r6
 8012746:	f000 fcb7 	bl	80130b8 <i2c_flag_get>
 801274a:	2800      	cmp	r0, #0
 801274c:	d0f5      	beq.n	801273a <gd32_i2c_read+0xaa>
 801274e:	2100      	movs	r1, #0
 8012750:	4630      	mov	r0, r6
 8012752:	f000 fc83 	bl	801305c <i2c_ack_config>
 8012756:	f240 5106 	movw	r1, #1286	; 0x506
 801275a:	4630      	mov	r0, r6
 801275c:	f000 fcac 	bl	80130b8 <i2c_flag_get>
 8012760:	b138      	cbz	r0, 8012772 <gd32_i2c_read+0xe2>
 8012762:	4630      	mov	r0, r6
 8012764:	f000 fca5 	bl	80130b2 <i2c_data_receive>
 8012768:	f640 77ff 	movw	r7, #4095	; 0xfff
 801276c:	f808 0b01 	strb.w	r0, [r8], #1
 8012770:	3c01      	subs	r4, #1
 8012772:	3f01      	subs	r7, #1
 8012774:	d0be      	beq.n	80126f4 <gd32_i2c_read+0x64>
 8012776:	2c00      	cmp	r4, #0
 8012778:	d1da      	bne.n	8012730 <gd32_i2c_read+0xa0>
 801277a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801277e:	4915      	ldr	r1, [pc, #84]	; (80127d4 <gd32_i2c_read+0x144>)
 8012780:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8012784:	0592      	lsls	r2, r2, #22
 8012786:	d41d      	bmi.n	80127c4 <gd32_i2c_read+0x134>
 8012788:	2101      	movs	r1, #1
 801278a:	4810      	ldr	r0, [pc, #64]	; (80127cc <gd32_i2c_read+0x13c>)
 801278c:	f000 fc66 	bl	801305c <i2c_ack_config>
 8012790:	2101      	movs	r1, #1
 8012792:	480e      	ldr	r0, [pc, #56]	; (80127cc <gd32_i2c_read+0x13c>)
 8012794:	f000 fc6b 	bl	801306e <i2c_ackpos_config>
 8012798:	4628      	mov	r0, r5
 801279a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801279e:	2c02      	cmp	r4, #2
 80127a0:	d1d9      	bne.n	8012756 <gd32_i2c_read+0xc6>
 80127a2:	f640 79ff 	movw	r9, #4095	; 0xfff
 80127a6:	e002      	b.n	80127ae <gd32_i2c_read+0x11e>
 80127a8:	f1b9 0901 	subs.w	r9, r9, #1
 80127ac:	d0a2      	beq.n	80126f4 <gd32_i2c_read+0x64>
 80127ae:	f240 5102 	movw	r1, #1282	; 0x502
 80127b2:	4630      	mov	r0, r6
 80127b4:	f000 fc80 	bl	80130b8 <i2c_flag_get>
 80127b8:	2800      	cmp	r0, #0
 80127ba:	d0f5      	beq.n	80127a8 <gd32_i2c_read+0x118>
 80127bc:	4630      	mov	r0, r6
 80127be:	f000 fc71 	bl	80130a4 <i2c_stop_on_bus>
 80127c2:	e7c8      	b.n	8012756 <gd32_i2c_read+0xc6>
 80127c4:	3b01      	subs	r3, #1
 80127c6:	d1db      	bne.n	8012780 <gd32_i2c_read+0xf0>
 80127c8:	e796      	b.n	80126f8 <gd32_i2c_read+0x68>
 80127ca:	bf00      	nop
 80127cc:	40005400 	andmi	r5, r0, r0, lsl #8
 80127d0:	2000d8fc 	strdcs	sp, [r0], -ip
 80127d4:	40005000 	andmi	r5, r0, r0

080127d8 <gd32_spi_dma_begin()>:
 80127d8:	b510      	push	{r4, lr}
 80127da:	f240 6002 	movw	r0, #1538	; 0x602
 80127de:	b088      	sub	sp, #32
 80127e0:	f7ff fb7e 	bl	8011ee0 <rcu_periph_clock_enable>
 80127e4:	f240 6003 	movw	r0, #1539	; 0x603
 80127e8:	f7ff fb7a 	bl	8011ee0 <rcu_periph_clock_enable>
 80127ec:	f240 700f 	movw	r0, #1807	; 0x70f
 80127f0:	f7ff fb76 	bl	8011ee0 <rcu_periph_clock_enable>
 80127f4:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80127f8:	f7ff fb72 	bl	8011ee0 <rcu_periph_clock_enable>
 80127fc:	2338      	movs	r3, #56	; 0x38
 80127fe:	2203      	movs	r2, #3
 8012800:	2118      	movs	r1, #24
 8012802:	4831      	ldr	r0, [pc, #196]	; (80128c8 <gd32_spi_dma_begin()+0xf0>)
 8012804:	f7ff fad4 	bl	8011db0 <gpio_init>
 8012808:	4c30      	ldr	r4, [pc, #192]	; (80128cc <gd32_spi_dma_begin()+0xf4>)
 801280a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801280e:	2203      	movs	r2, #3
 8012810:	2118      	movs	r1, #24
 8012812:	482f      	ldr	r0, [pc, #188]	; (80128d0 <gd32_spi_dma_begin()+0xf8>)
 8012814:	f7ff facc 	bl	8011db0 <gpio_init>
 8012818:	2101      	movs	r1, #1
 801281a:	482e      	ldr	r0, [pc, #184]	; (80128d4 <gd32_spi_dma_begin()+0xfc>)
 801281c:	f7ff fb1c 	bl	8011e58 <gpio_pin_remap_config>
 8012820:	6823      	ldr	r3, [r4, #0]
 8012822:	f44f 4060 	mov.w	r0, #57344	; 0xe000
 8012826:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801282a:	6023      	str	r3, [r4, #0]
 801282c:	f7ff fb82 	bl	8011f34 <rcu_pll2_config>
 8012830:	6823      	ldr	r3, [r4, #0]
 8012832:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8012836:	6023      	str	r3, [r4, #0]
 8012838:	6823      	ldr	r3, [r4, #0]
 801283a:	0098      	lsls	r0, r3, #2
 801283c:	d5fc      	bpl.n	8012838 <gd32_spi_dma_begin()+0x60>
 801283e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8012842:	f7ff fba1 	bl	8011f88 <rcu_i2s2_clock_config>
 8012846:	4824      	ldr	r0, [pc, #144]	; (80128d8 <gd32_spi_dma_begin()+0x100>)
 8012848:	f000 fcbf 	bl	80131ca <i2s_disable>
 801284c:	2300      	movs	r3, #0
 801284e:	4923      	ldr	r1, [pc, #140]	; (80128dc <gd32_spi_dma_begin()+0x104>)
 8012850:	461a      	mov	r2, r3
 8012852:	4821      	ldr	r0, [pc, #132]	; (80128d8 <gd32_spi_dma_begin()+0x100>)
 8012854:	f000 fc5c 	bl	8013110 <i2s_psc_config>
 8012858:	2300      	movs	r3, #0
 801285a:	2210      	movs	r2, #16
 801285c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8012860:	481d      	ldr	r0, [pc, #116]	; (80128d8 <gd32_spi_dma_begin()+0x100>)
 8012862:	f000 fc46 	bl	80130f2 <i2s_init>
 8012866:	481c      	ldr	r0, [pc, #112]	; (80128d8 <gd32_spi_dma_begin()+0x100>)
 8012868:	f000 fcaa 	bl	80131c0 <i2s_enable>
 801286c:	f240 5001 	movw	r0, #1281	; 0x501
 8012870:	f7ff fb36 	bl	8011ee0 <rcu_periph_clock_enable>
 8012874:	2101      	movs	r1, #1
 8012876:	481a      	ldr	r0, [pc, #104]	; (80128e0 <gd32_spi_dma_begin()+0x108>)
 8012878:	f000 fb0e 	bl	8012e98 <dma_deinit>
 801287c:	a801      	add	r0, sp, #4
 801287e:	f000 fb27 	bl	8012ed0 <dma_struct_para_init>
 8012882:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012886:	2401      	movs	r4, #1
 8012888:	9304      	str	r3, [sp, #16]
 801288a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801288e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012892:	4914      	ldr	r1, [pc, #80]	; (80128e4 <gd32_spi_dma_begin()+0x10c>)
 8012894:	9206      	str	r2, [sp, #24]
 8012896:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801289a:	aa01      	add	r2, sp, #4
 801289c:	4621      	mov	r1, r4
 801289e:	4810      	ldr	r0, [pc, #64]	; (80128e0 <gd32_spi_dma_begin()+0x108>)
 80128a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80128a4:	f88d 401e 	strb.w	r4, [sp, #30]
 80128a8:	f000 fb1c 	bl	8012ee4 <dma_init>
 80128ac:	4621      	mov	r1, r4
 80128ae:	480c      	ldr	r0, [pc, #48]	; (80128e0 <gd32_spi_dma_begin()+0x108>)
 80128b0:	f000 fb52 	bl	8012f58 <dma_circulation_disable>
 80128b4:	4621      	mov	r1, r4
 80128b6:	480a      	ldr	r0, [pc, #40]	; (80128e0 <gd32_spi_dma_begin()+0x108>)
 80128b8:	f000 fb5e 	bl	8012f78 <dma_memory_to_memory_disable>
 80128bc:	2200      	movs	r2, #0
 80128be:	4b0a      	ldr	r3, [pc, #40]	; (80128e8 <gd32_spi_dma_begin()+0x110>)
 80128c0:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 80128c4:	b008      	add	sp, #32
 80128c6:	bd10      	pop	{r4, pc}
 80128c8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80128cc:	40021000 	andmi	r1, r2, r0
 80128d0:	40010800 	andmi	r0, r1, r0, lsl #16
 80128d4:	00300400 	eorseq	r0, r0, r0, lsl #8
 80128d8:	40003c00 	andmi	r3, r0, r0, lsl #24
 80128dc:	00030d40 	andeq	r0, r3, r0, asr #26
 80128e0:	40020400 	andmi	r0, r2, r0, lsl #8
 80128e4:	40003c0c 	andmi	r3, r0, ip, lsl #24
 80128e8:	40020000 	andmi	r0, r2, r0

080128ec <gd32_spi_dma_set_speed_hz(unsigned int)>:
 80128ec:	b538      	push	{r3, r4, r5, lr}
 80128ee:	4c08      	ldr	r4, [pc, #32]	; (8012910 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 80128f0:	4605      	mov	r5, r0
 80128f2:	4620      	mov	r0, r4
 80128f4:	f000 fc69 	bl	80131ca <i2s_disable>
 80128f8:	2300      	movs	r3, #0
 80128fa:	4620      	mov	r0, r4
 80128fc:	461a      	mov	r2, r3
 80128fe:	0969      	lsrs	r1, r5, #5
 8012900:	f000 fc06 	bl	8013110 <i2s_psc_config>
 8012904:	4620      	mov	r0, r4
 8012906:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801290a:	f000 bc59 	b.w	80131c0 <i2s_enable>
 801290e:	bf00      	nop
 8012910:	40003c00 	andmi	r3, r0, r0, lsl #24

08012914 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 8012914:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8012918:	6003      	str	r3, [r0, #0]
 801291a:	4801      	ldr	r0, [pc, #4]	; (8012920 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 801291c:	4770      	bx	lr
 801291e:	bf00      	nop
 8012920:	2000d900 	andcs	sp, r0, r0, lsl #18

08012924 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 8012924:	4a0a      	ldr	r2, [pc, #40]	; (8012950 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 8012926:	3101      	adds	r1, #1
 8012928:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 801292c:	f3c1 014f 	ubfx	r1, r1, #1, #16
 8012930:	f023 0301 	bic.w	r3, r3, #1
 8012934:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8012938:	f043 0301 	orr.w	r3, r3, #1
 801293c:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 8012940:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 8012944:	4803      	ldr	r0, [pc, #12]	; (8012954 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 8012946:	2100      	movs	r1, #0
 8012948:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 801294c:	f000 bc42 	b.w	80131d4 <spi_dma_enable>
 8012950:	40020000 	andmi	r0, r2, r0
 8012954:	40003c00 	andmi	r3, r0, r0, lsl #24

08012958 <gd32_spi_dma_tx_is_active()>:
 8012958:	4b03      	ldr	r3, [pc, #12]	; (8012968 <gd32_spi_dma_tx_is_active()+0x10>)
 801295a:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 801295e:	3800      	subs	r0, #0
 8012960:	bf18      	it	ne
 8012962:	2001      	movne	r0, #1
 8012964:	4770      	bx	lr
 8012966:	bf00      	nop
 8012968:	40020000 	andmi	r0, r2, r0

0801296c <gd32_uart_begin>:
 801296c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801296e:	461e      	mov	r6, r3
 8012970:	4b63      	ldr	r3, [pc, #396]	; (8012b00 <gd32_uart_begin+0x194>)
 8012972:	4604      	mov	r4, r0
 8012974:	4298      	cmp	r0, r3
 8012976:	460f      	mov	r7, r1
 8012978:	4615      	mov	r5, r2
 801297a:	d03b      	beq.n	80129f4 <gd32_uart_begin+0x88>
 801297c:	d80a      	bhi.n	8012994 <gd32_uart_begin+0x28>
 801297e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012982:	4298      	cmp	r0, r3
 8012984:	d02f      	beq.n	80129e6 <gd32_uart_begin+0x7a>
 8012986:	f240 7012 	movw	r0, #1810	; 0x712
 801298a:	f7ff faa9 	bl	8011ee0 <rcu_periph_clock_enable>
 801298e:	f240 6004 	movw	r0, #1540	; 0x604
 8012992:	e008      	b.n	80129a6 <gd32_uart_begin+0x3a>
 8012994:	4b5b      	ldr	r3, [pc, #364]	; (8012b04 <gd32_uart_begin+0x198>)
 8012996:	4298      	cmp	r0, r3
 8012998:	d02f      	beq.n	80129fa <gd32_uart_begin+0x8e>
 801299a:	f240 600e 	movw	r0, #1550	; 0x60e
 801299e:	f7ff fa9f 	bl	8011ee0 <rcu_periph_clock_enable>
 80129a2:	f240 6003 	movw	r0, #1539	; 0x603
 80129a6:	f7ff fa9b 	bl	8011ee0 <rcu_periph_clock_enable>
 80129aa:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80129ae:	f7ff fa97 	bl	8011ee0 <rcu_periph_clock_enable>
 80129b2:	4b53      	ldr	r3, [pc, #332]	; (8012b00 <gd32_uart_begin+0x194>)
 80129b4:	429c      	cmp	r4, r3
 80129b6:	f000 8084 	beq.w	8012ac2 <gd32_uart_begin+0x156>
 80129ba:	d829      	bhi.n	8012a10 <gd32_uart_begin+0xa4>
 80129bc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80129c0:	429c      	cmp	r4, r3
 80129c2:	d071      	beq.n	8012aa8 <gd32_uart_begin+0x13c>
 80129c4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80129c8:	2203      	movs	r2, #3
 80129ca:	2118      	movs	r1, #24
 80129cc:	484e      	ldr	r0, [pc, #312]	; (8012b08 <gd32_uart_begin+0x19c>)
 80129ce:	f7ff f9ef 	bl	8011db0 <gpio_init>
 80129d2:	2104      	movs	r1, #4
 80129d4:	484c      	ldr	r0, [pc, #304]	; (8012b08 <gd32_uart_begin+0x19c>)
 80129d6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80129da:	2203      	movs	r2, #3
 80129dc:	f7ff f9e8 	bl	8011db0 <gpio_init>
 80129e0:	2101      	movs	r1, #1
 80129e2:	484a      	ldr	r0, [pc, #296]	; (8012b0c <gd32_uart_begin+0x1a0>)
 80129e4:	e025      	b.n	8012a32 <gd32_uart_begin+0xc6>
 80129e6:	f240 7011 	movw	r0, #1809	; 0x711
 80129ea:	f7ff fa79 	bl	8011ee0 <rcu_periph_clock_enable>
 80129ee:	f240 6002 	movw	r0, #1538	; 0x602
 80129f2:	e7d8      	b.n	80129a6 <gd32_uart_begin+0x3a>
 80129f4:	f240 7013 	movw	r0, #1811	; 0x713
 80129f8:	e7c7      	b.n	801298a <gd32_uart_begin+0x1e>
 80129fa:	f240 7014 	movw	r0, #1812	; 0x714
 80129fe:	f7ff fa6f 	bl	8011ee0 <rcu_periph_clock_enable>
 8012a02:	f240 6004 	movw	r0, #1540	; 0x604
 8012a06:	f7ff fa6b 	bl	8011ee0 <rcu_periph_clock_enable>
 8012a0a:	f240 6005 	movw	r0, #1541	; 0x605
 8012a0e:	e7ca      	b.n	80129a6 <gd32_uart_begin+0x3a>
 8012a10:	4b3c      	ldr	r3, [pc, #240]	; (8012b04 <gd32_uart_begin+0x198>)
 8012a12:	429c      	cmp	r4, r3
 8012a14:	d062      	beq.n	8012adc <gd32_uart_begin+0x170>
 8012a16:	2340      	movs	r3, #64	; 0x40
 8012a18:	2203      	movs	r2, #3
 8012a1a:	2118      	movs	r1, #24
 8012a1c:	483c      	ldr	r0, [pc, #240]	; (8012b10 <gd32_uart_begin+0x1a4>)
 8012a1e:	f7ff f9c7 	bl	8011db0 <gpio_init>
 8012a22:	2104      	movs	r1, #4
 8012a24:	483a      	ldr	r0, [pc, #232]	; (8012b10 <gd32_uart_begin+0x1a4>)
 8012a26:	2380      	movs	r3, #128	; 0x80
 8012a28:	2203      	movs	r2, #3
 8012a2a:	f7ff f9c1 	bl	8011db0 <gpio_init>
 8012a2e:	2101      	movs	r1, #1
 8012a30:	2004      	movs	r0, #4
 8012a32:	f7ff fa11 	bl	8011e58 <gpio_pin_remap_config>
 8012a36:	4620      	mov	r0, r4
 8012a38:	f7ff fc6a 	bl	8012310 <usart_deinit>
 8012a3c:	68e3      	ldr	r3, [r4, #12]
 8012a3e:	4639      	mov	r1, r7
 8012a40:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8012a44:	4620      	mov	r0, r4
 8012a46:	60e3      	str	r3, [r4, #12]
 8012a48:	f7ff fca2 	bl	8012390 <usart_baudrate_set>
 8012a4c:	f1a5 0309 	sub.w	r3, r5, #9
 8012a50:	4259      	negs	r1, r3
 8012a52:	4159      	adcs	r1, r3
 8012a54:	4620      	mov	r0, r4
 8012a56:	0309      	lsls	r1, r1, #12
 8012a58:	f7ff fcca 	bl	80123f0 <usart_word_length_set>
 8012a5c:	9906      	ldr	r1, [sp, #24]
 8012a5e:	4620      	mov	r0, r4
 8012a60:	1e8a      	subs	r2, r1, #2
 8012a62:	4251      	negs	r1, r2
 8012a64:	4151      	adcs	r1, r2
 8012a66:	0349      	lsls	r1, r1, #13
 8012a68:	f7ff fcca 	bl	8012400 <usart_stop_bit_set>
 8012a6c:	2e01      	cmp	r6, #1
 8012a6e:	d041      	beq.n	8012af4 <gd32_uart_begin+0x188>
 8012a70:	2e02      	cmp	r6, #2
 8012a72:	d142      	bne.n	8012afa <gd32_uart_begin+0x18e>
 8012a74:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012a78:	4620      	mov	r0, r4
 8012a7a:	f7ff fcb1 	bl	80123e0 <usart_parity_config>
 8012a7e:	2100      	movs	r1, #0
 8012a80:	4620      	mov	r0, r4
 8012a82:	f7ff fcd1 	bl	8012428 <usart_hardware_flow_rts_config>
 8012a86:	2100      	movs	r1, #0
 8012a88:	4620      	mov	r0, r4
 8012a8a:	f7ff fcd3 	bl	8012434 <usart_hardware_flow_cts_config>
 8012a8e:	2104      	movs	r1, #4
 8012a90:	4620      	mov	r0, r4
 8012a92:	f7ff fcc3 	bl	801241c <usart_receive_config>
 8012a96:	2108      	movs	r1, #8
 8012a98:	4620      	mov	r0, r4
 8012a9a:	f7ff fcb9 	bl	8012410 <usart_transmit_config>
 8012a9e:	68e3      	ldr	r3, [r4, #12]
 8012aa0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012aa4:	60e3      	str	r3, [r4, #12]
 8012aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012aa8:	2304      	movs	r3, #4
 8012aaa:	2203      	movs	r2, #3
 8012aac:	2118      	movs	r1, #24
 8012aae:	4819      	ldr	r0, [pc, #100]	; (8012b14 <gd32_uart_begin+0x1a8>)
 8012ab0:	f7ff f97e 	bl	8011db0 <gpio_init>
 8012ab4:	2308      	movs	r3, #8
 8012ab6:	2203      	movs	r2, #3
 8012ab8:	2104      	movs	r1, #4
 8012aba:	4816      	ldr	r0, [pc, #88]	; (8012b14 <gd32_uart_begin+0x1a8>)
 8012abc:	f7ff f978 	bl	8011db0 <gpio_init>
 8012ac0:	e7b9      	b.n	8012a36 <gd32_uart_begin+0xca>
 8012ac2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012ac6:	2203      	movs	r2, #3
 8012ac8:	2118      	movs	r1, #24
 8012aca:	480f      	ldr	r0, [pc, #60]	; (8012b08 <gd32_uart_begin+0x19c>)
 8012acc:	f7ff f970 	bl	8011db0 <gpio_init>
 8012ad0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012ad4:	2203      	movs	r2, #3
 8012ad6:	2104      	movs	r1, #4
 8012ad8:	480b      	ldr	r0, [pc, #44]	; (8012b08 <gd32_uart_begin+0x19c>)
 8012ada:	e7ef      	b.n	8012abc <gd32_uart_begin+0x150>
 8012adc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8012ae0:	2203      	movs	r2, #3
 8012ae2:	2118      	movs	r1, #24
 8012ae4:	4808      	ldr	r0, [pc, #32]	; (8012b08 <gd32_uart_begin+0x19c>)
 8012ae6:	f7ff f963 	bl	8011db0 <gpio_init>
 8012aea:	2304      	movs	r3, #4
 8012aec:	2203      	movs	r2, #3
 8012aee:	4619      	mov	r1, r3
 8012af0:	4809      	ldr	r0, [pc, #36]	; (8012b18 <gd32_uart_begin+0x1ac>)
 8012af2:	e7e3      	b.n	8012abc <gd32_uart_begin+0x150>
 8012af4:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8012af8:	e7be      	b.n	8012a78 <gd32_uart_begin+0x10c>
 8012afa:	2100      	movs	r1, #0
 8012afc:	e7bc      	b.n	8012a78 <gd32_uart_begin+0x10c>
 8012afe:	bf00      	nop
 8012b00:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012b04:	40005000 	andmi	r5, r0, r0
 8012b08:	40011000 	andmi	r1, r1, r0
 8012b0c:	00140010 	andseq	r0, r4, r0, lsl r0
 8012b10:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012b14:	40010800 	andmi	r0, r1, r0, lsl #16
 8012b18:	40011400 	andmi	r1, r1, r0, lsl #8

08012b1c <micros_init()>:
 8012b1c:	4770      	bx	lr
	...

08012b20 <udelay_init()>:
 8012b20:	4a07      	ldr	r2, [pc, #28]	; (8012b40 <udelay_init()+0x20>)
 8012b22:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8012b26:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8012b2a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8012b2e:	2200      	movs	r2, #0
 8012b30:	4b04      	ldr	r3, [pc, #16]	; (8012b44 <udelay_init()+0x24>)
 8012b32:	605a      	str	r2, [r3, #4]
 8012b34:	681a      	ldr	r2, [r3, #0]
 8012b36:	f042 0201 	orr.w	r2, r2, #1
 8012b3a:	601a      	str	r2, [r3, #0]
 8012b3c:	4770      	bx	lr
 8012b3e:	bf00      	nop
 8012b40:	e000ed00 	and	lr, r0, r0, lsl #26
 8012b44:	e0001000 	and	r1, r0, r0

08012b48 <udelay(unsigned int, unsigned int)>:
 8012b48:	236c      	movs	r3, #108	; 0x6c
 8012b4a:	b530      	push	{r4, r5, lr}
 8012b4c:	4358      	muls	r0, r3
 8012b4e:	b909      	cbnz	r1, 8012b54 <udelay(unsigned int, unsigned int)+0xc>
 8012b50:	4b08      	ldr	r3, [pc, #32]	; (8012b74 <udelay(unsigned int, unsigned int)+0x2c>)
 8012b52:	6859      	ldr	r1, [r3, #4]
 8012b54:	2300      	movs	r3, #0
 8012b56:	4c07      	ldr	r4, [pc, #28]	; (8012b74 <udelay(unsigned int, unsigned int)+0x2c>)
 8012b58:	6862      	ldr	r2, [r4, #4]
 8012b5a:	4291      	cmp	r1, r2
 8012b5c:	d0fc      	beq.n	8012b58 <udelay(unsigned int, unsigned int)+0x10>
 8012b5e:	bf2a      	itet	cs
 8012b60:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8012b64:	189b      	addcc	r3, r3, r2
 8012b66:	195b      	addcs	r3, r3, r5
 8012b68:	1a5b      	subs	r3, r3, r1
 8012b6a:	4283      	cmp	r3, r0
 8012b6c:	d300      	bcc.n	8012b70 <udelay(unsigned int, unsigned int)+0x28>
 8012b6e:	bd30      	pop	{r4, r5, pc}
 8012b70:	4611      	mov	r1, r2
 8012b72:	e7f1      	b.n	8012b58 <udelay(unsigned int, unsigned int)+0x10>
 8012b74:	e0001000 	and	r1, r0, r0

08012b78 <emac_start(unsigned char*)>:
 8012b78:	b538      	push	{r3, r4, r5, lr}
 8012b7a:	4605      	mov	r5, r0
 8012b7c:	f240 6002 	movw	r0, #1538	; 0x602
 8012b80:	f7ff f9ae 	bl	8011ee0 <rcu_periph_clock_enable>
 8012b84:	f240 6003 	movw	r0, #1539	; 0x603
 8012b88:	f7ff f9aa 	bl	8011ee0 <rcu_periph_clock_enable>
 8012b8c:	f240 6004 	movw	r0, #1540	; 0x604
 8012b90:	f7ff f9a6 	bl	8011ee0 <rcu_periph_clock_enable>
 8012b94:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012b98:	f7ff f9a2 	bl	8011ee0 <rcu_periph_clock_enable>
 8012b9c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012ba0:	2203      	movs	r2, #3
 8012ba2:	2118      	movs	r1, #24
 8012ba4:	4843      	ldr	r0, [pc, #268]	; (8012cb4 <emac_start(unsigned char*)+0x13c>)
 8012ba6:	f7ff f903 	bl	8011db0 <gpio_init>
 8012baa:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8012bae:	f7ff f9c1 	bl	8011f34 <rcu_pll2_config>
 8012bb2:	201c      	movs	r0, #28
 8012bb4:	f7ff fa62 	bl	801207c <rcu_osci_on>
 8012bb8:	201c      	movs	r0, #28
 8012bba:	f7ff f9ff 	bl	8011fbc <rcu_osci_stab_wait>
 8012bbe:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8012bc2:	f7ff f9ad 	bl	8011f20 <rcu_ckout0_config>
 8012bc6:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8012bca:	f7ff f975 	bl	8011eb8 <gpio_ethernet_phy_select>
 8012bce:	2302      	movs	r3, #2
 8012bd0:	2203      	movs	r2, #3
 8012bd2:	2104      	movs	r1, #4
 8012bd4:	4837      	ldr	r0, [pc, #220]	; (8012cb4 <emac_start(unsigned char*)+0x13c>)
 8012bd6:	f7ff f8eb 	bl	8011db0 <gpio_init>
 8012bda:	2304      	movs	r3, #4
 8012bdc:	2203      	movs	r2, #3
 8012bde:	2118      	movs	r1, #24
 8012be0:	4834      	ldr	r0, [pc, #208]	; (8012cb4 <emac_start(unsigned char*)+0x13c>)
 8012be2:	f7ff f8e5 	bl	8011db0 <gpio_init>
 8012be6:	2380      	movs	r3, #128	; 0x80
 8012be8:	2203      	movs	r2, #3
 8012bea:	2104      	movs	r1, #4
 8012bec:	4831      	ldr	r0, [pc, #196]	; (8012cb4 <emac_start(unsigned char*)+0x13c>)
 8012bee:	f7ff f8df 	bl	8011db0 <gpio_init>
 8012bf2:	2302      	movs	r3, #2
 8012bf4:	2203      	movs	r2, #3
 8012bf6:	2118      	movs	r1, #24
 8012bf8:	482f      	ldr	r0, [pc, #188]	; (8012cb8 <emac_start(unsigned char*)+0x140>)
 8012bfa:	f7ff f8d9 	bl	8011db0 <gpio_init>
 8012bfe:	2310      	movs	r3, #16
 8012c00:	2203      	movs	r2, #3
 8012c02:	2104      	movs	r1, #4
 8012c04:	482c      	ldr	r0, [pc, #176]	; (8012cb8 <emac_start(unsigned char*)+0x140>)
 8012c06:	f7ff f8d3 	bl	8011db0 <gpio_init>
 8012c0a:	2320      	movs	r3, #32
 8012c0c:	2203      	movs	r2, #3
 8012c0e:	2104      	movs	r1, #4
 8012c10:	4829      	ldr	r0, [pc, #164]	; (8012cb8 <emac_start(unsigned char*)+0x140>)
 8012c12:	f7ff f8cd 	bl	8011db0 <gpio_init>
 8012c16:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012c1a:	2203      	movs	r2, #3
 8012c1c:	2118      	movs	r1, #24
 8012c1e:	4827      	ldr	r0, [pc, #156]	; (8012cbc <emac_start(unsigned char*)+0x144>)
 8012c20:	f7ff f8c6 	bl	8011db0 <gpio_init>
 8012c24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8012c28:	2203      	movs	r2, #3
 8012c2a:	2118      	movs	r1, #24
 8012c2c:	4823      	ldr	r0, [pc, #140]	; (8012cbc <emac_start(unsigned char*)+0x144>)
 8012c2e:	f7ff f8bf 	bl	8011db0 <gpio_init>
 8012c32:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8012c36:	2203      	movs	r2, #3
 8012c38:	2118      	movs	r1, #24
 8012c3a:	4820      	ldr	r0, [pc, #128]	; (8012cbc <emac_start(unsigned char*)+0x144>)
 8012c3c:	f7ff f8b8 	bl	8011db0 <gpio_init>
 8012c40:	f240 500e 	movw	r0, #1294	; 0x50e
 8012c44:	f7ff f94c 	bl	8011ee0 <rcu_periph_clock_enable>
 8012c48:	f240 500f 	movw	r0, #1295	; 0x50f
 8012c4c:	f7ff f948 	bl	8011ee0 <rcu_periph_clock_enable>
 8012c50:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8012c54:	f7ff f944 	bl	8011ee0 <rcu_periph_clock_enable>
 8012c58:	f7ff f812 	bl	8011c80 <enet_deinit>
 8012c5c:	f7fe fc70 	bl	8011540 <enet_software_reset>
 8012c60:	4604      	mov	r4, r0
 8012c62:	b138      	cbz	r0, 8012c74 <emac_start(unsigned char*)+0xfc>
 8012c64:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8012c68:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012c6c:	2001      	movs	r0, #1
 8012c6e:	f7fe fdeb 	bl	8011848 <enet_init>
 8012c72:	4604      	mov	r4, r0
 8012c74:	4628      	mov	r0, r5
 8012c76:	f000 fab7 	bl	80131e8 <mac_address_get(unsigned char*)>
 8012c7a:	4629      	mov	r1, r5
 8012c7c:	2000      	movs	r0, #0
 8012c7e:	f7fe fd43 	bl	8011708 <enet_mac_address_set>
 8012c82:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8012c86:	f7fe fc6f 	bl	8011568 <enet_descriptors_chain_init>
 8012c8a:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8012c8e:	f7fe fc6b 	bl	8011568 <enet_descriptors_chain_init>
 8012c92:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012c96:	480a      	ldr	r0, [pc, #40]	; (8012cc0 <emac_start(unsigned char*)+0x148>)
 8012c98:	f7fe fd30 	bl	80116fc <enet_transmit_checksum_config>
 8012c9c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012ca0:	4808      	ldr	r0, [pc, #32]	; (8012cc4 <emac_start(unsigned char*)+0x14c>)
 8012ca2:	f7fe fd2b 	bl	80116fc <enet_transmit_checksum_config>
 8012ca6:	f7fe ff63 	bl	8011b70 <enet_enable>
 8012caa:	fab4 f084 	clz	r0, r4
 8012cae:	0940      	lsrs	r0, r0, #5
 8012cb0:	4240      	negs	r0, r0
 8012cb2:	bd38      	pop	{r3, r4, r5, pc}
 8012cb4:	40010800 	andmi	r0, r1, r0, lsl #16
 8012cb8:	40011000 	andmi	r1, r1, r0
 8012cbc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012cc0:	2000d8dc 	ldrdcs	sp, [r0], -ip
 8012cc4:	2000d8ec 	andcs	sp, r0, ip, ror #17

08012cc8 <adc_mode_config>:
 8012cc8:	4b06      	ldr	r3, [pc, #24]	; (8012ce4 <adc_mode_config+0x1c>)
 8012cca:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8012cce:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8012cd2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8012cd6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8012cda:	4302      	orrs	r2, r0
 8012cdc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8012ce0:	4770      	bx	lr
 8012ce2:	bf00      	nop
 8012ce4:	40012000 	andmi	r2, r1, r0

08012ce8 <adc_special_function_config>:
 8012ce8:	b510      	push	{r4, lr}
 8012cea:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8012cee:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8012cf2:	f001 0102 	and.w	r1, r1, #2
 8012cf6:	b17a      	cbz	r2, 8012d18 <adc_special_function_config+0x30>
 8012cf8:	b11b      	cbz	r3, 8012d02 <adc_special_function_config+0x1a>
 8012cfa:	6843      	ldr	r3, [r0, #4]
 8012cfc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012d00:	6043      	str	r3, [r0, #4]
 8012d02:	b11c      	cbz	r4, 8012d0c <adc_special_function_config+0x24>
 8012d04:	6843      	ldr	r3, [r0, #4]
 8012d06:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8012d0a:	6043      	str	r3, [r0, #4]
 8012d0c:	b119      	cbz	r1, 8012d16 <adc_special_function_config+0x2e>
 8012d0e:	6883      	ldr	r3, [r0, #8]
 8012d10:	f043 0302 	orr.w	r3, r3, #2
 8012d14:	6083      	str	r3, [r0, #8]
 8012d16:	bd10      	pop	{r4, pc}
 8012d18:	b11b      	cbz	r3, 8012d22 <adc_special_function_config+0x3a>
 8012d1a:	6843      	ldr	r3, [r0, #4]
 8012d1c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8012d20:	6043      	str	r3, [r0, #4]
 8012d22:	b11c      	cbz	r4, 8012d2c <adc_special_function_config+0x44>
 8012d24:	6843      	ldr	r3, [r0, #4]
 8012d26:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8012d2a:	6043      	str	r3, [r0, #4]
 8012d2c:	2900      	cmp	r1, #0
 8012d2e:	d0f2      	beq.n	8012d16 <adc_special_function_config+0x2e>
 8012d30:	6883      	ldr	r3, [r0, #8]
 8012d32:	f023 0302 	bic.w	r3, r3, #2
 8012d36:	e7ed      	b.n	8012d14 <adc_special_function_config+0x2c>

08012d38 <adc_data_alignment_config>:
 8012d38:	6883      	ldr	r3, [r0, #8]
 8012d3a:	b119      	cbz	r1, 8012d44 <adc_data_alignment_config+0xc>
 8012d3c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8012d40:	6083      	str	r3, [r0, #8]
 8012d42:	4770      	bx	lr
 8012d44:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8012d48:	e7fa      	b.n	8012d40 <adc_data_alignment_config+0x8>

08012d4a <adc_enable>:
 8012d4a:	6883      	ldr	r3, [r0, #8]
 8012d4c:	07db      	lsls	r3, r3, #31
 8012d4e:	bf5e      	ittt	pl
 8012d50:	6883      	ldrpl	r3, [r0, #8]
 8012d52:	f043 0301 	orrpl.w	r3, r3, #1
 8012d56:	6083      	strpl	r3, [r0, #8]
 8012d58:	4770      	bx	lr

08012d5a <adc_calibration_enable>:
 8012d5a:	6883      	ldr	r3, [r0, #8]
 8012d5c:	f100 0208 	add.w	r2, r0, #8
 8012d60:	f043 0308 	orr.w	r3, r3, #8
 8012d64:	6083      	str	r3, [r0, #8]
 8012d66:	6813      	ldr	r3, [r2, #0]
 8012d68:	0719      	lsls	r1, r3, #28
 8012d6a:	d4fc      	bmi.n	8012d66 <adc_calibration_enable+0xc>
 8012d6c:	6883      	ldr	r3, [r0, #8]
 8012d6e:	f043 0304 	orr.w	r3, r3, #4
 8012d72:	6083      	str	r3, [r0, #8]
 8012d74:	6813      	ldr	r3, [r2, #0]
 8012d76:	075b      	lsls	r3, r3, #29
 8012d78:	d4fc      	bmi.n	8012d74 <adc_calibration_enable+0x1a>
 8012d7a:	4770      	bx	lr

08012d7c <adc_tempsensor_vrefint_enable>:
 8012d7c:	4a03      	ldr	r2, [pc, #12]	; (8012d8c <adc_tempsensor_vrefint_enable+0x10>)
 8012d7e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8012d82:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8012d86:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8012d8a:	4770      	bx	lr
 8012d8c:	40012000 	andmi	r2, r1, r0

08012d90 <adc_channel_length_config>:
 8012d90:	2901      	cmp	r1, #1
 8012d92:	d002      	beq.n	8012d9a <adc_channel_length_config+0xa>
 8012d94:	2902      	cmp	r1, #2
 8012d96:	d00c      	beq.n	8012db2 <adc_channel_length_config+0x22>
 8012d98:	4770      	bx	lr
 8012d9a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012d9c:	3a01      	subs	r2, #1
 8012d9e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8012da2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012da4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012da6:	0512      	lsls	r2, r2, #20
 8012da8:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8012dac:	431a      	orrs	r2, r3
 8012dae:	62c2      	str	r2, [r0, #44]	; 0x2c
 8012db0:	4770      	bx	lr
 8012db2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012db4:	3a01      	subs	r2, #1
 8012db6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8012dba:	6383      	str	r3, [r0, #56]	; 0x38
 8012dbc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012dbe:	0512      	lsls	r2, r2, #20
 8012dc0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8012dc4:	431a      	orrs	r2, r3
 8012dc6:	6382      	str	r2, [r0, #56]	; 0x38
 8012dc8:	4770      	bx	lr

08012dca <adc_inserted_channel_config>:
 8012dca:	b530      	push	{r4, r5, lr}
 8012dcc:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8012dce:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012dd0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8012dd4:	1a61      	subs	r1, r4, r1
 8012dd6:	f06f 0404 	mvn.w	r4, #4
 8012dda:	4361      	muls	r1, r4
 8012ddc:	241f      	movs	r4, #31
 8012dde:	310f      	adds	r1, #15
 8012de0:	408c      	lsls	r4, r1
 8012de2:	ea25 0504 	bic.w	r5, r5, r4
 8012de6:	fa02 f101 	lsl.w	r1, r2, r1
 8012dea:	4329      	orrs	r1, r5
 8012dec:	2a09      	cmp	r2, #9
 8012dee:	6381      	str	r1, [r0, #56]	; 0x38
 8012df0:	d80b      	bhi.n	8012e0a <adc_inserted_channel_config+0x40>
 8012df2:	2407      	movs	r4, #7
 8012df4:	6901      	ldr	r1, [r0, #16]
 8012df6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012dfa:	4094      	lsls	r4, r2
 8012dfc:	ea21 0104 	bic.w	r1, r1, r4
 8012e00:	fa03 f202 	lsl.w	r2, r3, r2
 8012e04:	430a      	orrs	r2, r1
 8012e06:	6102      	str	r2, [r0, #16]
 8012e08:	bd30      	pop	{r4, r5, pc}
 8012e0a:	2a11      	cmp	r2, #17
 8012e0c:	d8fc      	bhi.n	8012e08 <adc_inserted_channel_config+0x3e>
 8012e0e:	2407      	movs	r4, #7
 8012e10:	3a0a      	subs	r2, #10
 8012e12:	68c1      	ldr	r1, [r0, #12]
 8012e14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012e18:	4094      	lsls	r4, r2
 8012e1a:	ea21 0104 	bic.w	r1, r1, r4
 8012e1e:	4093      	lsls	r3, r2
 8012e20:	430b      	orrs	r3, r1
 8012e22:	60c3      	str	r3, [r0, #12]
 8012e24:	e7f0      	b.n	8012e08 <adc_inserted_channel_config+0x3e>

08012e26 <adc_external_trigger_source_config>:
 8012e26:	2901      	cmp	r1, #1
 8012e28:	d002      	beq.n	8012e30 <adc_external_trigger_source_config+0xa>
 8012e2a:	2902      	cmp	r1, #2
 8012e2c:	d008      	beq.n	8012e40 <adc_external_trigger_source_config+0x1a>
 8012e2e:	4770      	bx	lr
 8012e30:	6883      	ldr	r3, [r0, #8]
 8012e32:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8012e36:	6083      	str	r3, [r0, #8]
 8012e38:	6883      	ldr	r3, [r0, #8]
 8012e3a:	4313      	orrs	r3, r2
 8012e3c:	6083      	str	r3, [r0, #8]
 8012e3e:	4770      	bx	lr
 8012e40:	6883      	ldr	r3, [r0, #8]
 8012e42:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8012e46:	e7f6      	b.n	8012e36 <adc_external_trigger_source_config+0x10>

08012e48 <adc_external_trigger_config>:
 8012e48:	f001 0301 	and.w	r3, r1, #1
 8012e4c:	f001 0102 	and.w	r1, r1, #2
 8012e50:	b152      	cbz	r2, 8012e68 <adc_external_trigger_config+0x20>
 8012e52:	b11b      	cbz	r3, 8012e5c <adc_external_trigger_config+0x14>
 8012e54:	6883      	ldr	r3, [r0, #8]
 8012e56:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8012e5a:	6083      	str	r3, [r0, #8]
 8012e5c:	b119      	cbz	r1, 8012e66 <adc_external_trigger_config+0x1e>
 8012e5e:	6883      	ldr	r3, [r0, #8]
 8012e60:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8012e64:	6083      	str	r3, [r0, #8]
 8012e66:	4770      	bx	lr
 8012e68:	b11b      	cbz	r3, 8012e72 <adc_external_trigger_config+0x2a>
 8012e6a:	6883      	ldr	r3, [r0, #8]
 8012e6c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8012e70:	6083      	str	r3, [r0, #8]
 8012e72:	2900      	cmp	r1, #0
 8012e74:	d0f7      	beq.n	8012e66 <adc_external_trigger_config+0x1e>
 8012e76:	6883      	ldr	r3, [r0, #8]
 8012e78:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8012e7c:	e7f2      	b.n	8012e64 <adc_external_trigger_config+0x1c>

08012e7e <adc_software_trigger_enable>:
 8012e7e:	07ca      	lsls	r2, r1, #31
 8012e80:	bf42      	ittt	mi
 8012e82:	6883      	ldrmi	r3, [r0, #8]
 8012e84:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8012e88:	6083      	strmi	r3, [r0, #8]
 8012e8a:	078b      	lsls	r3, r1, #30
 8012e8c:	bf42      	ittt	mi
 8012e8e:	6883      	ldrmi	r3, [r0, #8]
 8012e90:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8012e94:	6083      	strmi	r3, [r0, #8]
 8012e96:	4770      	bx	lr

08012e98 <dma_deinit>:
 8012e98:	4b0c      	ldr	r3, [pc, #48]	; (8012ecc <dma_deinit+0x34>)
 8012e9a:	4298      	cmp	r0, r3
 8012e9c:	d102      	bne.n	8012ea4 <dma_deinit+0xc>
 8012e9e:	2904      	cmp	r1, #4
 8012ea0:	d900      	bls.n	8012ea4 <dma_deinit+0xc>
 8012ea2:	e7fe      	b.n	8012ea2 <dma_deinit+0xa>
 8012ea4:	2314      	movs	r3, #20
 8012ea6:	fb03 0301 	mla	r3, r3, r1, r0
 8012eaa:	689a      	ldr	r2, [r3, #8]
 8012eac:	0089      	lsls	r1, r1, #2
 8012eae:	f022 0201 	bic.w	r2, r2, #1
 8012eb2:	609a      	str	r2, [r3, #8]
 8012eb4:	2200      	movs	r2, #0
 8012eb6:	609a      	str	r2, [r3, #8]
 8012eb8:	60da      	str	r2, [r3, #12]
 8012eba:	611a      	str	r2, [r3, #16]
 8012ebc:	615a      	str	r2, [r3, #20]
 8012ebe:	230f      	movs	r3, #15
 8012ec0:	6842      	ldr	r2, [r0, #4]
 8012ec2:	408b      	lsls	r3, r1
 8012ec4:	4313      	orrs	r3, r2
 8012ec6:	6043      	str	r3, [r0, #4]
 8012ec8:	4770      	bx	lr
 8012eca:	bf00      	nop
 8012ecc:	40020400 	andmi	r0, r2, r0, lsl #8

08012ed0 <dma_struct_para_init>:
 8012ed0:	2300      	movs	r3, #0
 8012ed2:	e9c0 3300 	strd	r3, r3, [r0]
 8012ed6:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8012eda:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012ede:	8303      	strh	r3, [r0, #24]
 8012ee0:	7683      	strb	r3, [r0, #26]
 8012ee2:	4770      	bx	lr

08012ee4 <dma_init>:
 8012ee4:	4b1b      	ldr	r3, [pc, #108]	; (8012f54 <dma_init+0x70>)
 8012ee6:	b510      	push	{r4, lr}
 8012ee8:	4298      	cmp	r0, r3
 8012eea:	d102      	bne.n	8012ef2 <dma_init+0xe>
 8012eec:	2904      	cmp	r1, #4
 8012eee:	d900      	bls.n	8012ef2 <dma_init+0xe>
 8012ef0:	e7fe      	b.n	8012ef0 <dma_init+0xc>
 8012ef2:	2314      	movs	r3, #20
 8012ef4:	fb03 0101 	mla	r1, r3, r1, r0
 8012ef8:	6813      	ldr	r3, [r2, #0]
 8012efa:	610b      	str	r3, [r1, #16]
 8012efc:	6893      	ldr	r3, [r2, #8]
 8012efe:	614b      	str	r3, [r1, #20]
 8012f00:	8a13      	ldrh	r3, [r2, #16]
 8012f02:	60cb      	str	r3, [r1, #12]
 8012f04:	68d4      	ldr	r4, [r2, #12]
 8012f06:	6853      	ldr	r3, [r2, #4]
 8012f08:	6888      	ldr	r0, [r1, #8]
 8012f0a:	4323      	orrs	r3, r4
 8012f0c:	6954      	ldr	r4, [r2, #20]
 8012f0e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8012f12:	4323      	orrs	r3, r4
 8012f14:	4303      	orrs	r3, r0
 8012f16:	608b      	str	r3, [r1, #8]
 8012f18:	7e13      	ldrb	r3, [r2, #24]
 8012f1a:	2b01      	cmp	r3, #1
 8012f1c:	688b      	ldr	r3, [r1, #8]
 8012f1e:	bf0c      	ite	eq
 8012f20:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012f24:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012f28:	608b      	str	r3, [r1, #8]
 8012f2a:	7e53      	ldrb	r3, [r2, #25]
 8012f2c:	2b01      	cmp	r3, #1
 8012f2e:	688b      	ldr	r3, [r1, #8]
 8012f30:	bf0c      	ite	eq
 8012f32:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012f36:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012f3a:	608b      	str	r3, [r1, #8]
 8012f3c:	7e93      	ldrb	r3, [r2, #26]
 8012f3e:	b923      	cbnz	r3, 8012f4a <dma_init+0x66>
 8012f40:	688b      	ldr	r3, [r1, #8]
 8012f42:	f023 0310 	bic.w	r3, r3, #16
 8012f46:	608b      	str	r3, [r1, #8]
 8012f48:	bd10      	pop	{r4, pc}
 8012f4a:	688b      	ldr	r3, [r1, #8]
 8012f4c:	f043 0310 	orr.w	r3, r3, #16
 8012f50:	e7f9      	b.n	8012f46 <dma_init+0x62>
 8012f52:	bf00      	nop
 8012f54:	40020400 	andmi	r0, r2, r0, lsl #8

08012f58 <dma_circulation_disable>:
 8012f58:	4b06      	ldr	r3, [pc, #24]	; (8012f74 <dma_circulation_disable+0x1c>)
 8012f5a:	4298      	cmp	r0, r3
 8012f5c:	d102      	bne.n	8012f64 <dma_circulation_disable+0xc>
 8012f5e:	2904      	cmp	r1, #4
 8012f60:	d900      	bls.n	8012f64 <dma_circulation_disable+0xc>
 8012f62:	e7fe      	b.n	8012f62 <dma_circulation_disable+0xa>
 8012f64:	2314      	movs	r3, #20
 8012f66:	4359      	muls	r1, r3
 8012f68:	3008      	adds	r0, #8
 8012f6a:	580b      	ldr	r3, [r1, r0]
 8012f6c:	f023 0320 	bic.w	r3, r3, #32
 8012f70:	500b      	str	r3, [r1, r0]
 8012f72:	4770      	bx	lr
 8012f74:	40020400 	andmi	r0, r2, r0, lsl #8

08012f78 <dma_memory_to_memory_disable>:
 8012f78:	4b06      	ldr	r3, [pc, #24]	; (8012f94 <dma_memory_to_memory_disable+0x1c>)
 8012f7a:	4298      	cmp	r0, r3
 8012f7c:	d102      	bne.n	8012f84 <dma_memory_to_memory_disable+0xc>
 8012f7e:	2904      	cmp	r1, #4
 8012f80:	d900      	bls.n	8012f84 <dma_memory_to_memory_disable+0xc>
 8012f82:	e7fe      	b.n	8012f82 <dma_memory_to_memory_disable+0xa>
 8012f84:	2314      	movs	r3, #20
 8012f86:	4359      	muls	r1, r3
 8012f88:	3008      	adds	r0, #8
 8012f8a:	580b      	ldr	r3, [r1, r0]
 8012f8c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012f90:	500b      	str	r3, [r1, r0]
 8012f92:	4770      	bx	lr
 8012f94:	40020400 	andmi	r0, r2, r0, lsl #8

08012f98 <i2c_clock_config>:
 8012f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f9a:	4605      	mov	r5, r0
 8012f9c:	2002      	movs	r0, #2
 8012f9e:	460c      	mov	r4, r1
 8012fa0:	4617      	mov	r7, r2
 8012fa2:	f7ff f86d 	bl	8012080 <rcu_clock_freq_get>
 8012fa6:	4603      	mov	r3, r0
 8012fa8:	4828      	ldr	r0, [pc, #160]	; (801304c <i2c_clock_config+0xb4>)
 8012faa:	4a29      	ldr	r2, [pc, #164]	; (8013050 <i2c_clock_config+0xb8>)
 8012fac:	fbb3 f0f0 	udiv	r0, r3, r0
 8012fb0:	4293      	cmp	r3, r2
 8012fb2:	bf34      	ite	cc
 8012fb4:	4601      	movcc	r1, r0
 8012fb6:	2136      	movcs	r1, #54	; 0x36
 8012fb8:	686e      	ldr	r6, [r5, #4]
 8012fba:	4a26      	ldr	r2, [pc, #152]	; (8013054 <i2c_clock_config+0xbc>)
 8012fbc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8012fc0:	430e      	orrs	r6, r1
 8012fc2:	4294      	cmp	r4, r2
 8012fc4:	606e      	str	r6, [r5, #4]
 8012fc6:	d816      	bhi.n	8012ff6 <i2c_clock_config+0x5e>
 8012fc8:	3001      	adds	r0, #1
 8012fca:	2835      	cmp	r0, #53	; 0x35
 8012fcc:	d90d      	bls.n	8012fea <i2c_clock_config+0x52>
 8012fce:	2236      	movs	r2, #54	; 0x36
 8012fd0:	622a      	str	r2, [r5, #32]
 8012fd2:	0064      	lsls	r4, r4, #1
 8012fd4:	fbb3 f4f4 	udiv	r4, r3, r4
 8012fd8:	2c04      	cmp	r4, #4
 8012fda:	bf38      	it	cc
 8012fdc:	2404      	movcc	r4, #4
 8012fde:	69ea      	ldr	r2, [r5, #28]
 8012fe0:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8012fe4:	4314      	orrs	r4, r2
 8012fe6:	61ec      	str	r4, [r5, #28]
 8012fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012fea:	2802      	cmp	r0, #2
 8012fec:	d801      	bhi.n	8012ff2 <i2c_clock_config+0x5a>
 8012fee:	2202      	movs	r2, #2
 8012ff0:	e7ee      	b.n	8012fd0 <i2c_clock_config+0x38>
 8012ff2:	6228      	str	r0, [r5, #32]
 8012ff4:	e7ed      	b.n	8012fd2 <i2c_clock_config+0x3a>
 8012ff6:	4a18      	ldr	r2, [pc, #96]	; (8013058 <i2c_clock_config+0xc0>)
 8012ff8:	4294      	cmp	r4, r2
 8012ffa:	d8f5      	bhi.n	8012fe8 <i2c_clock_config+0x50>
 8012ffc:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8013000:	4351      	muls	r1, r2
 8013002:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013006:	fbb1 f1f2 	udiv	r1, r1, r2
 801300a:	3101      	adds	r1, #1
 801300c:	6229      	str	r1, [r5, #32]
 801300e:	b9a7      	cbnz	r7, 801303a <i2c_clock_config+0xa2>
 8013010:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013014:	fbb3 f4f4 	udiv	r4, r3, r4
 8013018:	69eb      	ldr	r3, [r5, #28]
 801301a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801301e:	61eb      	str	r3, [r5, #28]
 8013020:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8013024:	b90b      	cbnz	r3, 801302a <i2c_clock_config+0x92>
 8013026:	f044 0401 	orr.w	r4, r4, #1
 801302a:	69eb      	ldr	r3, [r5, #28]
 801302c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8013030:	61eb      	str	r3, [r5, #28]
 8013032:	69eb      	ldr	r3, [r5, #28]
 8013034:	4323      	orrs	r3, r4
 8013036:	61eb      	str	r3, [r5, #28]
 8013038:	e7d6      	b.n	8012fe8 <i2c_clock_config+0x50>
 801303a:	2219      	movs	r2, #25
 801303c:	4354      	muls	r4, r2
 801303e:	fbb3 f4f4 	udiv	r4, r3, r4
 8013042:	69eb      	ldr	r3, [r5, #28]
 8013044:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8013048:	e7e9      	b.n	801301e <i2c_clock_config+0x86>
 801304a:	bf00      	nop
 801304c:	000f4240 	andeq	r4, pc, r0, asr #4
 8013050:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8013054:	000186a0 	andeq	r8, r1, r0, lsr #13
 8013058:	00061a80 	andeq	r1, r6, r0, lsl #21

0801305c <i2c_ack_config>:
 801305c:	6803      	ldr	r3, [r0, #0]
 801305e:	2901      	cmp	r1, #1
 8013060:	bf0c      	ite	eq
 8013062:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8013066:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 801306a:	6003      	str	r3, [r0, #0]
 801306c:	4770      	bx	lr

0801306e <i2c_ackpos_config>:
 801306e:	6803      	ldr	r3, [r0, #0]
 8013070:	b919      	cbnz	r1, 801307a <i2c_ackpos_config+0xc>
 8013072:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013076:	6003      	str	r3, [r0, #0]
 8013078:	4770      	bx	lr
 801307a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801307e:	e7fa      	b.n	8013076 <i2c_ackpos_config+0x8>

08013080 <i2c_master_addressing>:
 8013080:	3202      	adds	r2, #2
 8013082:	bf0c      	ite	eq
 8013084:	f021 0101 	biceq.w	r1, r1, #1
 8013088:	f041 0101 	orrne.w	r1, r1, #1
 801308c:	6101      	str	r1, [r0, #16]
 801308e:	4770      	bx	lr

08013090 <i2c_enable>:
 8013090:	6803      	ldr	r3, [r0, #0]
 8013092:	f043 0301 	orr.w	r3, r3, #1
 8013096:	6003      	str	r3, [r0, #0]
 8013098:	4770      	bx	lr

0801309a <i2c_start_on_bus>:
 801309a:	6803      	ldr	r3, [r0, #0]
 801309c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80130a0:	6003      	str	r3, [r0, #0]
 80130a2:	4770      	bx	lr

080130a4 <i2c_stop_on_bus>:
 80130a4:	6803      	ldr	r3, [r0, #0]
 80130a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80130aa:	6003      	str	r3, [r0, #0]
 80130ac:	4770      	bx	lr

080130ae <i2c_data_transmit>:
 80130ae:	6101      	str	r1, [r0, #16]
 80130b0:	4770      	bx	lr

080130b2 <i2c_data_receive>:
 80130b2:	6900      	ldr	r0, [r0, #16]
 80130b4:	b2c0      	uxtb	r0, r0
 80130b6:	4770      	bx	lr

080130b8 <i2c_flag_get>:
 80130b8:	098b      	lsrs	r3, r1, #6
 80130ba:	581a      	ldr	r2, [r3, r0]
 80130bc:	2301      	movs	r3, #1
 80130be:	f001 011f 	and.w	r1, r1, #31
 80130c2:	408b      	lsls	r3, r1
 80130c4:	4213      	tst	r3, r2
 80130c6:	bf14      	ite	ne
 80130c8:	2001      	movne	r0, #1
 80130ca:	2000      	moveq	r0, #0
 80130cc:	4770      	bx	lr

080130ce <i2c_flag_clear>:
 80130ce:	f240 5301 	movw	r3, #1281	; 0x501
 80130d2:	4299      	cmp	r1, r3
 80130d4:	b510      	push	{r4, lr}
 80130d6:	d102      	bne.n	80130de <i2c_flag_clear+0x10>
 80130d8:	6943      	ldr	r3, [r0, #20]
 80130da:	6983      	ldr	r3, [r0, #24]
 80130dc:	bd10      	pop	{r4, pc}
 80130de:	2201      	movs	r2, #1
 80130e0:	098c      	lsrs	r4, r1, #6
 80130e2:	5823      	ldr	r3, [r4, r0]
 80130e4:	f001 011f 	and.w	r1, r1, #31
 80130e8:	408a      	lsls	r2, r1
 80130ea:	ea23 0302 	bic.w	r3, r3, r2
 80130ee:	5023      	str	r3, [r4, r0]
 80130f0:	e7f4      	b.n	80130dc <i2c_flag_clear+0xe>

080130f2 <i2s_init>:
 80130f2:	b510      	push	{r4, lr}
 80130f4:	69c4      	ldr	r4, [r0, #28]
 80130f6:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 80130fa:	f024 0408 	bic.w	r4, r4, #8
 80130fe:	0424      	lsls	r4, r4, #16
 8013100:	0c24      	lsrs	r4, r4, #16
 8013102:	431c      	orrs	r4, r3
 8013104:	4314      	orrs	r4, r2
 8013106:	430c      	orrs	r4, r1
 8013108:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 801310c:	61c4      	str	r4, [r0, #28]
 801310e:	bd10      	pop	{r4, pc}

08013110 <i2s_psc_config>:
 8013110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013114:	4698      	mov	r8, r3
 8013116:	2302      	movs	r3, #2
 8013118:	6203      	str	r3, [r0, #32]
 801311a:	4b26      	ldr	r3, [pc, #152]	; (80131b4 <i2s_psc_config+0xa4>)
 801311c:	4617      	mov	r7, r2
 801311e:	4298      	cmp	r0, r3
 8013120:	bf0c      	ite	eq
 8013122:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 8013126:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 801312a:	4a23      	ldr	r2, [pc, #140]	; (80131b8 <i2s_psc_config+0xa8>)
 801312c:	4605      	mov	r5, r0
 801312e:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8013130:	460e      	mov	r6, r1
 8013132:	4018      	ands	r0, r3
 8013134:	d036      	beq.n	80131a4 <i2s_psc_config+0x94>
 8013136:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8013138:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801313c:	1f99      	subs	r1, r3, #6
 801313e:	2908      	cmp	r1, #8
 8013140:	d82c      	bhi.n	801319c <i2s_psc_config+0x8c>
 8013142:	3302      	adds	r3, #2
 8013144:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8013146:	481d      	ldr	r0, [pc, #116]	; (80131bc <i2s_psc_config+0xac>)
 8013148:	f3c2 1203 	ubfx	r2, r2, #4, #4
 801314c:	3201      	adds	r2, #1
 801314e:	fbb0 f0f2 	udiv	r0, r0, r2
 8013152:	4358      	muls	r0, r3
 8013154:	0040      	lsls	r0, r0, #1
 8013156:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 801315a:	f04f 030a 	mov.w	r3, #10
 801315e:	d124      	bne.n	80131aa <i2s_psc_config+0x9a>
 8013160:	0a04      	lsrs	r4, r0, #8
 8013162:	435c      	muls	r4, r3
 8013164:	fbb4 f6f6 	udiv	r6, r4, r6
 8013168:	230a      	movs	r3, #10
 801316a:	3605      	adds	r6, #5
 801316c:	fbb6 f6f3 	udiv	r6, r6, r3
 8013170:	f006 0301 	and.w	r3, r6, #1
 8013174:	0876      	lsrs	r6, r6, #1
 8013176:	1eb2      	subs	r2, r6, #2
 8013178:	2afd      	cmp	r2, #253	; 0xfd
 801317a:	bf86      	itte	hi
 801317c:	2300      	movhi	r3, #0
 801317e:	2602      	movhi	r6, #2
 8013180:	021b      	lslls	r3, r3, #8
 8013182:	431e      	orrs	r6, r3
 8013184:	ea46 0608 	orr.w	r6, r6, r8
 8013188:	622e      	str	r6, [r5, #32]
 801318a:	69eb      	ldr	r3, [r5, #28]
 801318c:	f023 0307 	bic.w	r3, r3, #7
 8013190:	61eb      	str	r3, [r5, #28]
 8013192:	69eb      	ldr	r3, [r5, #28]
 8013194:	433b      	orrs	r3, r7
 8013196:	61eb      	str	r3, [r5, #28]
 8013198:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801319c:	2b0f      	cmp	r3, #15
 801319e:	bf08      	it	eq
 80131a0:	2314      	moveq	r3, #20
 80131a2:	e7cf      	b.n	8013144 <i2s_psc_config+0x34>
 80131a4:	f7fe ff6c 	bl	8012080 <rcu_clock_freq_get>
 80131a8:	e7d5      	b.n	8013156 <i2s_psc_config+0x46>
 80131aa:	b90f      	cbnz	r7, 80131b0 <i2s_psc_config+0xa0>
 80131ac:	0944      	lsrs	r4, r0, #5
 80131ae:	e7d8      	b.n	8013162 <i2s_psc_config+0x52>
 80131b0:	0984      	lsrs	r4, r0, #6
 80131b2:	e7d6      	b.n	8013162 <i2s_psc_config+0x52>
 80131b4:	40003800 	andmi	r3, r0, r0, lsl #16
 80131b8:	40021000 	andmi	r1, r2, r0
 80131bc:	017d7840 	cmneq	sp, r0, asr #16

080131c0 <i2s_enable>:
 80131c0:	69c3      	ldr	r3, [r0, #28]
 80131c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80131c6:	61c3      	str	r3, [r0, #28]
 80131c8:	4770      	bx	lr

080131ca <i2s_disable>:
 80131ca:	69c3      	ldr	r3, [r0, #28]
 80131cc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80131d0:	61c3      	str	r3, [r0, #28]
 80131d2:	4770      	bx	lr

080131d4 <spi_dma_enable>:
 80131d4:	6843      	ldr	r3, [r0, #4]
 80131d6:	b919      	cbnz	r1, 80131e0 <spi_dma_enable+0xc>
 80131d8:	f043 0302 	orr.w	r3, r3, #2
 80131dc:	6043      	str	r3, [r0, #4]
 80131de:	4770      	bx	lr
 80131e0:	f043 0301 	orr.w	r3, r3, #1
 80131e4:	e7fa      	b.n	80131dc <spi_dma_enable+0x8>
	...

080131e8 <mac_address_get(unsigned char*)>:
 80131e8:	2102      	movs	r1, #2
 80131ea:	4a07      	ldr	r2, [pc, #28]	; (8013208 <mac_address_get(unsigned char*)+0x20>)
 80131ec:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80131f0:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80131f4:	7001      	strb	r1, [r0, #0]
 80131f6:	7042      	strb	r2, [r0, #1]
 80131f8:	0e1a      	lsrs	r2, r3, #24
 80131fa:	7082      	strb	r2, [r0, #2]
 80131fc:	0c1a      	lsrs	r2, r3, #16
 80131fe:	70c2      	strb	r2, [r0, #3]
 8013200:	0a1a      	lsrs	r2, r3, #8
 8013202:	7102      	strb	r2, [r0, #4]
 8013204:	7143      	strb	r3, [r0, #5]
 8013206:	4770      	bx	lr
 8013208:	1ffff000 	svcne	0x00fff000

0801320c <__popcountsi2>:
 801320c:	0843      	lsrs	r3, r0, #1
 801320e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8013212:	1ac0      	subs	r0, r0, r3
 8013214:	0883      	lsrs	r3, r0, #2
 8013216:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 801321a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 801321e:	4418      	add	r0, r3
 8013220:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8013224:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8013228:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 801322c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8013230:	0e00      	lsrs	r0, r0, #24
 8013232:	4770      	bx	lr

Disassembly of section .rodata:

08013234 <vtable for DisplayHandler-0x100>:
	...
 801323c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013240:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8013244:	00000000 	andeq	r0, r0, r0
 8013248:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801324c:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013250:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 8013254:	70797464 	rsbsvc	r7, r9, r4, ror #8
 8013258:	00690065 	rsbeq	r0, r9, r5, rrx
 801325c:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013260:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 8013264:	756f6364 	strbvc	r6, [pc, #-868]!	; 8012f08 <dma_init+0x24>
 8013268:	2f00746e 	svccs	0x0000746e
 801326c:	6f666e69 	svcvs	0x00666e69
 8013270:	6f72672f 	svcvs	0x0072672f
 8013274:	6f637075 	svcvs	0x00637075
 8013278:	00746e75 	rsbseq	r6, r4, r5, ror lr
 801327c:	313a3131 	teqcc	sl, r1, lsr r1
 8013280:	35353a35 	ldrcc	r3, [r5, #-2613]!	; 0xfffff5cb
 8013284:	63654400 	cmnvs	r5, #0, 8
 8013288:	20353220 	eorscs	r3, r5, r0, lsr #4
 801328c:	32323032 	eorscc	r3, r2, #50	; 0x32
 8013290:	335b1b00 	cmpcc	fp, #0, 22
 8013294:	534f6d32 	movtpl	r6, #64818	; 0xfd32
 8013298:	65532043 	ldrbvs	r2, [r3, #-67]	; 0xffffffbd
 801329c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 80132a0:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 80132a4:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 80132a8:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 80132ac:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80132b0:	317b2072 	cmncc	fp, r2, ror r0
 80132b4:	6e552078 	mrcvs	0, 2, r2, cr5, cr8, {3}
 80132b8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80132bc:	1b7d6573 	blne	9f6c890 <__exidx_end+0x1f56e74>
 80132c0:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 80132c4:	6f5f2e00 	svcvs	0x005f2e00
 80132c8:	74006373 	strvc	r6, [r0], #-883	; 0xfffffc8d
 80132cc:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
 80132d0:	76726573 			; <UNDEFINED> instruction: 0x76726573
 80132d4:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
 80132d8:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 80132dc:	6f6e0070 	svcvs	0x006e0070
 80132e0:	4f3d6564 	svcmi	0x003d6564
 80132e4:	53204353 			; <UNDEFINED> instruction: 0x53204353
 80132e8:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 80132ec:	73250072 			; <UNDEFINED> instruction: 0x73250072
 80132f0:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 80132f4:	00642547 	rsbeq	r2, r4, r7, asr #10
 80132f8:	2043534f 	subcs	r5, r3, pc, asr #6
 80132fc:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8013300:	0031206c 	eorseq	r2, r1, ip, rrx
 8013304:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8013308:	37303146 	ldrcc	r3, [r0, -r6, asr #2]!
 801330c:	49004352 	stmdbmi	r0, {r1, r4, r6, r8, r9, lr}
 8013310:	25203a50 	strcs	r3, [r0, #-2640]!	; 0xfffff5b0
 8013314:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013318:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801331c:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 8013320:	6e490063 	cdpvs	0, 4, cr0, cr9, cr3, {3}
 8013324:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013328:	74754f00 	ldrbtvc	r4, [r5], #-3840	; 0xfffff100
 801332c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013330:	00000000 	andeq	r0, r0, r0

08013334 <vtable for DisplayHandler>:
	...
 801333c:	080085b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, sl, pc}
 8013340:	080085db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, sl, pc}
 8013344:	080086b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, pc}

08013348 <vtable for PixelDmxStartStop>:
	...
 8013350:	080085b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, pc}
 8013354:	080085f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, sl, pc}
 8013358:	080085b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, pc}
 801335c:	080085c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, pc}

08013360 <vtable for Handler>:
	...
 8013368:	080085d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, pc}
 801336c:	080085e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, sl, pc}
 8013370:	08008cd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, fp, pc}
 8013374:	08008ccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, pc}
 8013378:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}

0801337c <CSWTCH.72>:
 801337c:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8013380:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08013381 <SOFTWARE_VERSION>:
 8013381:	00342e31 	eorseq	r2, r4, r1, lsr lr

08013385 <gamma10_0>:
 8013385:	03020100 	movweq	r0, #8448	; 0x2100
 8013389:	07060504 	streq	r0, [r6, -r4, lsl #10]
 801338d:	0b0a0908 	bleq	82957b5 <__exidx_end+0x27fd99>
 8013391:	0f0e0d0c 	svceq	0x000e0d0c
 8013395:	13121110 	tstne	r2, #16, 2
 8013399:	17161514 			; <UNDEFINED> instruction: 0x17161514
 801339d:	1b1a1918 	blne	8699805 <__exidx_end+0x683de9>
 80133a1:	1f1e1d1c 	svcne	0x001e1d1c
 80133a5:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80133a9:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80133ad:	2b2a2928 	blcs	8a9d855 <__exidx_end+0xa87e39>
 80133b1:	2f2e2d2c 	svccs	0x002e2d2c
 80133b5:	33323130 	teqcc	r2, #48, 2
 80133b9:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80133bd:	3b3a3938 	blcc	8ea18a5 <__exidx_end+0xe8be89>
 80133c1:	3f3e3d3c 	svccc	0x003e3d3c
 80133c5:	43424140 	movtmi	r4, #8512	; 0x2140
 80133c9:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80133cd:	4b4a4948 	blmi	92a58f5 <__exidx_end+0x128fed9>
 80133d1:	4f4e4d4c 	svcmi	0x004e4d4c
 80133d5:	53525150 	cmppl	r2, #80, 2
 80133d9:	57565554 			; <UNDEFINED> instruction: 0x57565554
 80133dd:	5b5a5958 	blpl	96a9945 <__exidx_end+0x1693f29>
 80133e1:	5f5e5d5c 	svcpl	0x005e5d5c
 80133e5:	63626160 	cmnvs	r2, #96, 2
 80133e9:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80133ed:	6b6a6968 	blvs	9aad995 <__exidx_end+0x1a97f79>
 80133f1:	6f6e6d6c 	svcvs	0x006e6d6c
 80133f5:	73727170 	cmnvc	r2, #112, 2
 80133f9:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80133fd:	7b7a7978 	blvc	9eb19e5 <__exidx_end+0x1e9bfc9>
 8013401:	7f7e7d7c 	svcvc	0x007e7d7c
 8013405:	83828180 	orrhi	r8, r2, #128, 2
 8013409:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801340d:	8b8a8988 	blhi	62b5a35 <__stack_size+0x62b3a35>
 8013411:	8f8e8d8c 	svchi	0x008e8d8c
 8013415:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8013419:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801341d:	9b9a9998 	blls	66b9a85 <__stack_size+0x66b7a85>
 8013421:	9f9e9d9c 	svcls	0x009e9d9c
 8013425:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8013429:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801342d:	abaaa9a8 	blge	6abdad5 <__stack_size+0x6abbad5>
 8013431:	afaeadac 	svcge	0x00aeadac
 8013435:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8013439:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 801343d:	bbbab9b8 	bllt	6ec1b25 <__stack_size+0x6ebfb25>
 8013441:	bfbebdbc 	svclt	0x00bebdbc
 8013445:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8013449:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801344d:	cbcac9c8 	blgt	72c5b75 <__stack_size+0x72c3b75>
 8013451:	cfcecdcc 	svcgt	0x00cecdcc
 8013455:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8013459:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 801345d:	dbdad9d8 	blle	76c9bc5 <__stack_size+0x76c7bc5>
 8013461:	dfdedddc 	svcle	0x00dedddc
 8013465:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8013469:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 801346d:	ebeae9e8 	bl	7acdc15 <__stack_size+0x7acbc15>
 8013471:	efeeedec 	svc	0x00eeedec
 8013475:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8013479:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 801347d:	fbfaf9f8 	blx	7ed1c67 <__stack_size+0x7ecfc67>
 8013481:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 8013485:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013489:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801348d:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8013491:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8013495:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8013499:	0a73252c 	beq	9cdc951 <__exidx_end+0x1cc6f35>
 801349d:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80134a1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80134a5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134a9:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80134ad:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80134b1:	4f000a64 	svcmi	0x00000a64
 80134b5:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80134b9:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80134bd:	616c7073 	smcvs	50947	; 0xc703
 80134c1:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80134c5:	6674000a 	ldrbtvs	r0, [r4], -sl
 80134c9:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80134cd:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80134d1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80134d5:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80134d9:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80134dd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80134e1:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80134e5:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 80134e9:	20505446 	subscs	r5, r0, r6, asr #8
 80134ed:	20206e4f 	eorcs	r6, r0, pc, asr #28
 80134f1:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 80134f5:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 80134f9:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 80134fd:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8013501:	525b2066 	subspl	r2, fp, #102	; 0x66
 8013505:	6f6f6265 	svcvs	0x006f6265
 8013509:	00205d74 	eoreq	r5, r0, r4, ror sp
 801350d:	4f525245 	svcmi	0x00525245
 8013511:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8013515:	000a7465 	andeq	r7, sl, r5, ror #8
 8013519:	70746674 	rsbsvc	r6, r4, r4, ror r6
 801351d:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8013521:	616c7073 	smcvs	50947	; 0xc703
 8013525:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8013529:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801352d:	000a2123 	andeq	r2, sl, r3, lsr #2
 8013531:	4f525245 	svcmi	0x00525245
 8013535:	0a3f2352 	beq	8fdc285 <__exidx_end+0xfc6869>
 8013539:	62657200 	rsbvs	r7, r5, #0, 4
 801353d:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8013541:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8013545:	00237473 	eoreq	r7, r3, r3, ror r4
 8013549:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801354d:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8013551:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013555:	76002365 	strvc	r2, [r0], -r5, ror #6
 8013559:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801355d:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8013561:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8013565:	63616600 	cmnvs	r1, #0, 12
 8013569:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801356d:	 	tstmi	r0, r3, lsr #6

08013570 <s_Node>:
 8013570:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8013574:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8013580:	41730000 	cmnmi	r3, r0
 8013584:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8013588:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8013594:	2043534f 	subcs	r5, r3, pc, asr #6
 8013598:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801359c:	00007265 	andeq	r7, r0, r5, ror #4
 80135a0:	00000000 	andeq	r0, r0, r0
 80135a4:	544c0000 	strbpl	r0, [ip], #-0
 80135a8:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80135b8:	2043534f 	subcs	r5, r3, pc, asr #6
 80135bc:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80135c0:	0000746e 	andeq	r7, r0, lr, ror #8
 80135c4:	00000000 	andeq	r0, r0, r0
 80135c8:	44520000 	ldrbmi	r0, [r2], #-0
 80135cc:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80135d0:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80135d4:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80135d8:	0000796c 	andeq	r7, r0, ip, ror #18
 80135dc:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80135e0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80135ec:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80135f0:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8013600:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8013610:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8013614:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8013618:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 801361c:	00000072 	andeq	r0, r0, r2, ror r0
 8013620:	00000000 	andeq	r0, r0, r0
 8013624:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08013636 <s_Output>:
 8013636:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8013642:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801364e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8013652:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8013656:	00000000 	andeq	r0, r0, r0
 801365a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801365e:	0000006c 	andeq	r0, r0, ip, rrx
 8013662:	00000000 	andeq	r0, r0, r0
 8013666:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801366a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 801366e:	00000000 	andeq	r0, r0, r0
 8013672:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 801367e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8013682:	00006769 	andeq	r6, r0, r9, ror #14
 8013686:	00000000 	andeq	r0, r0, r0
 801368a:	70657453 	rsbvc	r7, r5, r3, asr r4
 801368e:	00726570 	rsbseq	r6, r2, r0, ror r5
 8013692:	00000000 	andeq	r0, r0, r0
 8013696:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801369a:	00007265 	andeq	r7, r0, r5, ror #4
 801369e:	00000000 	andeq	r0, r0, r0
 80136a2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80136a6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80136aa:	00000000 	andeq	r0, r0, r0
 80136ae:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80136b2:	00006c61 	andeq	r6, r0, r1, ror #24
 80136b6:	00000000 	andeq	r0, r0, r0
 80136ba:	20424752 	subcs	r4, r2, r2, asr r7
 80136be:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80136c2:	0000006c 	andeq	r0, r0, ip, rrx
	...

080136c8 <RemoteConfig::s_GET>:
 80136c8:	0800a145 	stmdaeq	r0, {r0, r2, r6, r8, sp, pc}
 80136cc:	00000000 	andeq	r0, r0, r0
 80136d0:	0801353a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp}
 80136d4:	00000008 	andeq	r0, r0, r8
 80136d8:	08009619 	stmdaeq	r0, {r0, r3, r4, r9, sl, ip, pc}
 80136dc:	00000000 	andeq	r0, r0, r0
 80136e0:	08013543 	stmdaeq	r1, {r0, r1, r6, r8, sl, ip, sp}
 80136e4:	00000005 	andeq	r0, r0, r5
 80136e8:	08009619 	stmdaeq	r0, {r0, r3, r4, r9, sl, ip, pc}
 80136ec:	00000000 	andeq	r0, r0, r0
 80136f0:	08013549 	stmdaeq	r1, {r0, r3, r6, r8, sl, ip, sp}
 80136f4:	00000006 	andeq	r0, r0, r6
 80136f8:	080097cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, ip, pc}
 80136fc:	00000000 	andeq	r0, r0, r0
 8013700:	08013550 	stmdaeq	r1, {r4, r6, r8, sl, ip, sp}
 8013704:	00000007 	andeq	r0, r0, r7
 8013708:	0800978d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, ip, pc}
 801370c:	00000000 	andeq	r0, r0, r0
 8013710:	08013558 	stmdaeq	r1, {r3, r4, r6, r8, sl, ip, sp}
 8013714:	00000008 	andeq	r0, r0, r8
 8013718:	080096e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, ip, pc}
 801371c:	00000000 	andeq	r0, r0, r0
 8013720:	0801351f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, ip, sp}
 8013724:	00000008 	andeq	r0, r0, r8
 8013728:	08009b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, pc}
 801372c:	00000000 	andeq	r0, r0, r0
 8013730:	08013561 	stmdaeq	r1, {r0, r5, r6, r8, sl, ip, sp}
 8013734:	00010004 	andeq	r0, r1, r4
 8013738:	0800973d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, ip, pc}
 801373c:	00000000 	andeq	r0, r0, r0
 8013740:	08013519 	stmdaeq	r1, {r0, r3, r4, r8, sl, ip, sp}
 8013744:	00000005 	andeq	r0, r0, r5
 8013748:	08009e35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp, ip, pc}
 801374c:	00000000 	andeq	r0, r0, r0
 8013750:	08013566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, ip, sp}
 8013754:	00000009 	andeq	r0, r0, r9

08013758 <RemoteConfig::s_SET>:
 8013758:	080098ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, fp, ip, pc}
 801375c:	00000000 	andeq	r0, r0, r0
 8013760:	08013519 	stmdaeq	r1, {r0, r3, r4, r8, sl, ip, sp}
 8013764:	00010005 	andeq	r0, r1, r5
 8013768:	080098c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, ip, pc}
 801376c:	00000000 	andeq	r0, r0, r0
 8013770:	0801351f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, ip, sp}
 8013774:	00010008 	andeq	r0, r1, r8
 8013778:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801377c:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8013780:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8013784:	0a64253d 	beq	991cc80 <__exidx_end+0x1907264>
 8013788:	73252200 			; <UNDEFINED> instruction: 0x73252200
 801378c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013790:	002c2273 	eoreq	r2, ip, r3, ror r2
 8013794:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8013798:	000a7325 	andeq	r7, sl, r5, lsr #6
 801379c:	6f626552 	svcvs	0x00626552
 80137a0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80137a4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80137a8:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80137ac:	6f6f6265 	svcvs	0x006f6265
 80137b0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80137b4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80137b8:	6f637200 	svcvs	0x00637200
 80137bc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80137c0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137c4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80137c8:	6b726f77 	blvs	9caf5ac <__exidx_end+0x1c99b90>
 80137cc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137d0:	63736f00 	cmnvs	r3, #0, 30
 80137d4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137d8:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 80137dc:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80137e0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137e4:	00000000 	andeq	r0, r0, r0

080137e8 <RemoteConfig::s_TXT>:
 80137e8:	08009b1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp, ip, pc}
 80137ec:	00000000 	andeq	r0, r0, r0
 80137f0:	08009d8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, pc}
 80137f4:	00000000 	andeq	r0, r0, r0
 80137f8:	080137b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 80137fc:	0000000b 	andeq	r0, r0, fp
 8013800:	0000000c 	andeq	r0, r0, ip
 8013804:	08009b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip, pc}
 8013808:	00000000 	andeq	r0, r0, r0
 801380c:	08009dbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, pc}
 8013810:	00000000 	andeq	r0, r0, r0
 8013814:	080137c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, ip, sp}
 8013818:	0000000b 	andeq	r0, r0, fp
 801381c:	00000000 	andeq	r0, r0, r0
 8013820:	08009b75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, ip, pc}
 8013824:	00000000 	andeq	r0, r0, r0
 8013828:	08009de5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, fp, ip, pc}
 801382c:	00000000 	andeq	r0, r0, r0
 8013830:	080137d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, ip, sp}
 8013834:	00000007 	andeq	r0, r0, r7
 8013838:	00000008 	andeq	r0, r0, r8
 801383c:	08009ba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, pc}
 8013840:	00000000 	andeq	r0, r0, r0
 8013844:	08009e0d 	stmdaeq	r0, {r0, r2, r3, r9, sl, fp, ip, pc}
 8013848:	00000000 	andeq	r0, r0, r0
 801384c:	080137d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, ip, sp}
 8013850:	0000000b 	andeq	r0, r0, fp
 8013854:	00000003 	andeq	r0, r0, r3
 8013858:	00544547 	subseq	r4, r4, r7, asr #10
 801385c:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8013860:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8013864:	0a200050 	beq	88139ac <__exidx_end+0x7fdf90>
 8013868:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 801386c:	43003a00 	movwmi	r3, #2560	; 0xa00
 8013870:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013874:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8013878:	00657079 	rsbeq	r7, r5, r9, ror r0
 801387c:	61003b20 	tstvs	r0, r0, lsr #22
 8013880:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8013884:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8013888:	6a2f6e6f 	bvs	8bef24c <__exidx_end+0xbd9830>
 801388c:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8013890:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013894:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013898:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801389c:	2f006874 	svccs	0x00006874
 80138a0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80138a4:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80138a8:	2f006c6d 	svccs	0x00006c6d
 80138ac:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80138b0:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80138b4:	2f007373 	svccs	0x00007373
 80138b8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80138bc:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80138c0:	736a2f00 	cmnvc	sl, #0, 30
 80138c4:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80138c8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80138cc:	72657600 	rsbvc	r7, r5, #0, 12
 80138d0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80138d4:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80138d8:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80138dc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80138e0:	0079616c 	rsbseq	r6, r9, ip, ror #2
 80138e4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80138e8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80138ec:	6a2f0079 	bvs	8bd3ad8 <__exidx_end+0xbbe0bc>
 80138f0:	2f6e6f73 	svccs	0x006e6f73
 80138f4:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80138f8:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 80138fc:	6f6f6265 	svcvs	0x006f6265
 8013900:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8013904:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8013908:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 801390c:	434f4421 	movtmi	r4, #62497	; 0xf421
 8013910:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8013914:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8013918:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801391c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013920:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8013924:	3e646165 	powccsz	f6, f4, f5
 8013928:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801392c:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8013930:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8013934:	742f3c74 	strtvc	r3, [pc], #-3188	; 801393c <RemoteConfig::s_TXT+0x154>
 8013938:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 801393c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013940:	3e646165 	powccsz	f6, f4, f5
 8013944:	6f623c0a 	svcvs	0x00623c0a
 8013948:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 801394c:	4f3e3168 	svcmi	0x003e3168
 8013950:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013954:	2f3c3e31 	svccs	0x003c3e31
 8013958:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801395c:	2f3c0a3e 	svccs	0x003c0a3e
 8013960:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013964:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8013968:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 801396c:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8013970:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8013974:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8013978:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801397c:	71655200 	cmnvc	r5, r0, lsl #4
 8013980:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8013984:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8013988:	20797469 	rsbscs	r7, r9, r9, ror #8
 801398c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013990:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8013994:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8013998:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 801399c:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80139a0:	6f542049 	svcvs	0x00542049
 80139a4:	6f4c206f 	svcvs	0x004c206f
 80139a8:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 80139ac:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 80139b0:	206c616e 	rsbcs	r6, ip, lr, ror #2
 80139b4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80139b8:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 80139bc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80139c0:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80139c4:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80139c8:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80139cc:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80139d0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80139d4:	00646574 	rsbeq	r6, r4, r4, ror r5
 80139d8:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80139dc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80139e0:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80139e4:	70707553 	rsbsvc	r7, r0, r3, asr r5
 80139e8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 80139ec:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 80139f0:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 80139f4:	7245206e 	subvc	r2, r5, #110	; 0x6e
 80139f8:	00726f72 	rsbseq	r6, r2, r2, ror pc
 80139fc:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8013a00:	434f4421 	movtmi	r4, #62497	; 0xf421
 8013a04:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8013a08:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8013a0c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013a10:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013a14:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8013a18:	3e646165 	powccsz	f6, f4, f5
 8013a1c:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013a20:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8013a24:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8013a28:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8013a2c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8013a30:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013a34:	0a3e6461 	beq	8facbc0 <__exidx_end+0xf971a4>
 8013a38:	646f623c 	strbtvs	r6, [pc], #-572	; 8013a40 <RemoteConfig::s_TXT+0x258>
 8013a3c:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013a40:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8013a44:	31682f3c 	cmncc	r8, ip, lsr pc
 8013a48:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8013a4c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013a50:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013a54:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013a58:	5448000a 	strbpl	r0, [r8], #-10
 8013a5c:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8013a60:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8013a64:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8013a68:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8013a6c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8013a70:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013a74:	6f430a0d 	svcvs	0x00430a0d
 8013a78:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013a7c:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8013a80:	203a6570 	eorscs	r6, sl, r0, ror r5
 8013a84:	0a0d7325 	beq	8370720 <__exidx_end+0x35ad04>
 8013a88:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013a8c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013a90:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8013a94:	203a6874 	eorscs	r6, sl, r4, ror r8
 8013a98:	0a0d7525 	beq	8370f34 <__exidx_end+0x35b518>
 8013a9c:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8013aa0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8013aa4:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8013aa8:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8013aac:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8013ab0:	 	ldrbvs	r0, [r4, #-10]!

08013ab2 <contentType>:
 8013ab2:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013ab6:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013aba:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8013ad2:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013ad6:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8013af2:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013af6:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8013afa:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8013afe:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8013b12:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8013b16:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8013b1a:	2f6e6f69 	svccs	0x006e6f69
 8013b1e:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08013b32 <RemoteConfigConst::PARAMS_DISABLE>:
 8013b32:	61736964 	cmnvs	r3, r4, ror #18
 8013b36:	00656c62 	rsbeq	r6, r5, r2, ror #24

08013b3a <RemoteConfigConst::PARAMS_FILE_NAME>:
 8013b3a:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8013b3e:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8013b42:	00747874 	rsbseq	r7, r4, r4, ror r8

08013b46 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8013b46:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013b4a:	5f79616c 	svcpl	0x0079616c
 8013b4e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013b53 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8013b53:	61736964 	cmnvs	r3, r4, ror #18
 8013b57:	5f656c62 	svcpl	0x00656c62
 8013b5b:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8013b5f:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013b61 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8013b61:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b65:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8013b69:	6f6f6265 	svcvs	0x006f6265
 8013b6d:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08013b6f <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8013b6f:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b73:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 801360f <s_Node+0x9f>
 8013b77:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013b7b:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013b7d <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8013b7d:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b81:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8013b85:	6f746361 	svcvs	0x00746361
 8013b89:	7b007972 	blvc	8032159 <__exidx_end+0x1c73d>
 8013b8d:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8013b91:	7b3a2274 	blvc	8e9c569 <__exidx_end+0xe86b4d>
 8013b95:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8013b99:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8013b9d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013ba1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013ba5:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8013ba9:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8013bad:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bb1:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bb5:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8013bb9:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013bbd:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013bc1:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bc5:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bc9:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013bcd:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013bd1:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013bd5:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bd9:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bdd:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8013be1:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8013be5:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8013be9:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013bed:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013bf1:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013bf5:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013bf9:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013bfd:	616f6222 	cmnvs	pc, r2, lsr #4
 8013c01:	3a226472 	bcc	88acdd1 <__exidx_end+0x8973b5>
 8013c05:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013c09:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8013c0d:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8013c11:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8013c15:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8013c19:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013c1d:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013c21:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8013c25:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8013c29:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8013c2d:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013c31:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8013c35:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013c39:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8013c3d:	7b000a7d 	blvc	8016639 <__exidx_end+0xc1d>
 8013c41:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013c45:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013c49:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8013c4d:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013c51:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8013c55:	7b3a2273 	blvc	8e9c629 <__exidx_end+0xe86c0d>
 8013c59:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8013c5d:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013c61:	4f223a22 	svcmi	0x00223a22
 8013c65:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013c69:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8013c6d:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8013c71:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8013c75:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8013c79:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8013c7d:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8013c81:	69502058 	ldmdbvs	r0, {r3, r4, r6, sp}^
 8013c85:	226c6578 	rsbcs	r6, ip, #120, 10	; 0x1e000000
 8013c89:	656e222c 	strbvs	r2, [lr, #-556]!	; 0xfffffdd4
 8013c8d:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013c91:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 8013c95:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013c99:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8013c9d:	226b726f 	rsbcs	r7, fp, #-268435450	; 0xf0000006
 8013ca1:	6372222c 	cmnvs	r2, #44, 4	; 0xc0000002
 8013ca5:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013ca9:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 8013cad:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013cb1:	6f6d6552 	svcvs	0x006d6552
 8013cb5:	63206574 			; <UNDEFINED> instruction: 0x63206574
 8013cb9:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013cbd:	61727567 	cmnvs	r2, r7, ror #10
 8013cc1:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013cc5:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

08013cc9 <index_html>:
 8013cc9:	4f44213c 	svcmi	0x0044213c
 8013ccd:	50595443 	subspl	r5, r9, r3, asr #8
 8013cd1:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8013cd5:	0a3e6c6d 	beq	8faee91 <__exidx_end+0xf99475>
 8013cd9:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8013cdd:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013ce1:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013ce5:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8013ce9:	6b6e696c 	blvs	9bae2a1 <__exidx_end+0x1b98885>
 8013ced:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8013cf1:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8013cf5:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013cf9:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013cfd:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8013d01:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8013d05:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8013d09:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8013d0d:	20227373 	eorcs	r7, r2, r3, ror r3
 8013d11:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8013d15:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013d19:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013d1d:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013d21:	0a3e656c 	beq	8fad2d9 <__exidx_end+0xf978bd>
 8013d25:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013d29:	0a3e6461 	beq	8faceb5 <__exidx_end+0xf97499>
 8013d2d:	646f623c 	strbtvs	r6, [pc], #-572	; 8013d35 <index_html+0x6c>
 8013d31:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d35:	6165683c 	cmnvs	r5, ip, lsr r8
 8013d39:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8013d3d:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8013d41:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8013d45:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8013d49:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8013d4d:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013d51:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013d55:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013d59:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d5d:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8013d61:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8013d65:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8013d69:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8013d6d:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8013d71:	6f746365 	svcvs	0x00746365
 8013d75:	20227972 	eorcs	r7, r2, r2, ror r9
 8013d79:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013d7d:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8013d81:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8013d85:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013d89:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8013d8d:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8013d91:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8013d95:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8013d99:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8013d9d:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8013da1:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8013da5:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8013da9:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8013dad:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013db1:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8013db5:	20227478 	eorcs	r7, r2, r8, ror r4
 8013db9:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013dbd:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8013dc1:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8013dc5:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8013dc9:	0a3e656c 	beq	8fad381 <__exidx_end+0xf97965>
 8013dcd:	6f663c09 	svcvs	0x00663c09
 8013dd1:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8013dd5:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8013dd9:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013ddd:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8013de1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013de5:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8013de9:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013ded:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8013df1:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013df5:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013df9:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8013dfd:	20747069 	rsbscs	r7, r4, r9, rrx
 8013e01:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8013e05:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8013e09:	6a2e7865 	bvs	8bb1fa5 <__exidx_end+0xb9c589>
 8013e0d:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8013e11:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8013e15:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8013e19:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8013e1d:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013e21:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013e25:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013e29:	 	svcvs	0x0062000a

08013e2b <styles_css>:
 8013e2b:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013e2f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013e33:	63616220 	cmnvs	r1, #32, 4
 8013e37:	6f72676b 	svcvs	0x0072676b
 8013e3b:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8013e3f:	6f6c6f63 	svcvs	0x006c6f63
 8013e43:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e47:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e4b:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8013e4f:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8013e53:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013e57:	6f6c6f63 	svcvs	0x006c6f63
 8013e5b:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e5f:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e63:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8013e67:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8013e6b:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8013e6f:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8013e73:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8013e77:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013e7b:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013e7f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013e83:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013e87:	0a3b7865 	beq	8ef2023 <__exidx_end+0xedc607>
 8013e8b:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8013e8f:	0a7b2069 	beq	9edc03b <__exidx_end+0x1ec661f>
 8013e93:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8013e97:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8013e9b:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8013e9f:	6f6e203a 	svcvs	0x006e203a
 8013ea3:	0a3b656e 	beq	8eed463 <__exidx_end+0xed7a47>
 8013ea7:	616d2020 	cmnvs	sp, r0, lsr #32
 8013eab:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8013eaf:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8013eb3:	70352078 	eorsvc	r2, r5, r8, ror r0
 8013eb7:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8013ebb:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8013ebf:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013ec3:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013ec7:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013ecb:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013ecf:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013ed3:	0a3b7865 	beq	8ef206f <__exidx_end+0xedc653>
 8013ed7:	6f622020 	svcvs	0x00622020
 8013edb:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013edf:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013ee3:	3a737569 	bcc	9cf148f <__exidx_end+0x1cdba73>
 8013ee7:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013eeb:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013eef:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013ef3:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013ef7:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013efb:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013eff:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013f03:	0a3b7870 	beq	8ef20cb <__exidx_end+0xedc6af>
 8013f07:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8013f0b:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013f0f:	0a7b2072 	beq	9edc0df <__exidx_end+0x1ec66c3>
 8013f13:	69642020 	stmdbvs	r4!, {r5, sp}^
 8013f17:	616c7073 	smcvs	50947	; 0xc703
 8013f1b:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8013f1f:	3b78656c 	blcc	9e2d4d7 <__exidx_end+0x1e17abb>
 8013f23:	6a20200a 	bvs	881bf53 <__exidx_end+0x806537>
 8013f27:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8013f2b:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8013f2f:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013f33:	203a746e 	eorscs	r7, sl, lr, ror #8
 8013f37:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8013f3b:	0a3b7265 	beq	8ef08d7 <__exidx_end+0xedaebb>
 8013f3f:	6f622020 	svcvs	0x00622020
 8013f43:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013f47:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013f4b:	3a737569 	bcc	9cf14f7 <__exidx_end+0x1cdbadb>
 8013f4f:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013f53:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013f57:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013f5b:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013f5f:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f63:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013f67:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013f6b:	0a3b7870 	beq	8ef2133 <__exidx_end+0xedc717>
 8013f6f:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08013f74 <HttpContent>:
 8013f74:	080138ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, sp}
 8013f78:	08013e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, ip, sp}
 8013f7c:	080138b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, ip, sp}
 8013f80:	08013f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip, sp}
 8013f84:	080138a0 	stmdaeq	r1, {r5, r7, fp, ip, sp}
 8013f88:	08013cc9 	stmdaeq	r1, {r0, r3, r6, r7, sl, fp, ip, sp}

08013f8c <index_js>:
 8013f8c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8013f90:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8013f94:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013f98:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8013f9c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8013fa0:	6a284e4f 	bvs	8a278e4 <__exidx_end+0xa11ec8>
 8013fa4:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013fa8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8013fac:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8013fb0:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8013fb4:	6a2f273d 	bvs	8bddcb0 <__exidx_end+0xbc8294>
 8013fb8:	2f6e6f73 	svccs	0x006e6f73
 8013fbc:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8013fc0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8013fc4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8013fc8:	20797274 	rsbscs	r7, r9, r4, ror r2
 8013fcc:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8013fd0:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8013fd4:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8013fd8:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8013fdc:	20746961 	rsbscs	r6, r4, r1, ror #18
 8013fe0:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8013fe4:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8013fe8:	0a3b296c 	beq	8ede5a0 <__exidx_end+0xec8b84>
 8013fec:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8013ff0:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8013ff4:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8013ff8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8013ffc:	73657220 	cmnvc	r5, #32, 4
 8014000:	6f736a2e 	svcvs	0x00736a2e
 8014004:	3b29286e 	blcc	8a5e1c4 <__exidx_end+0xa487a8>
 8014008:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801400c:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8014010:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8014014:	6f727265 	svcvs	0x00727265
 8014018:	7b202972 	blvc	881e5e8 <__exidx_end+0x808bcc>
 801401c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014020:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8014024:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8014028:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 801402c:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8014030:	3b29726f 	blcc	8a709f4 <__exidx_end+0xa5afd8>
 8014034:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014038:	0a0a7d0a 	beq	82b3468 <__exidx_end+0x29da4c>
 801403c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014040:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8014044:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014048:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 801404c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014050:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8014054:	20292874 	eorcs	r2, r9, r4, ror r8
 8014058:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 801405c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014060:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014064:	6177613d 	cmnvs	r7, sp, lsr r1
 8014068:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801406c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014070:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8014074:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014078:	0a3b2927 	beq	8ede51c <__exidx_end+0xec8b00>
 801407c:	6f640909 	svcvs	0x00640909
 8014080:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8014084:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8014088:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 801408c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014090:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014094:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8014098:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 801409c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80140a0:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80140a4:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80140a8:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80140ac:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80140b0:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80140b4:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80140b8:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80140bc:	2b656d61 	blcs	996f648 <__exidx_end+0x1959c2c>
 80140c0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014040 <index_js+0xb4>
 80140c4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80140c8:	2b223e69 	blcs	88a3a74 <__exidx_end+0x88e058>
 80140cc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140d0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80140d4:	6f6e2e74 	svcvs	0x006e2e74
 80140d8:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80140dc:	2b657079 	blcs	99702c8 <__exidx_end+0x195a8ac>
 80140e0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014060 <index_js+0xd4>
 80140e4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80140e8:	2b223e69 	blcs	88a3a94 <__exidx_end+0x88e078>
 80140ec:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140f0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80140f4:	6f6e2e74 	svcvs	0x006e2e74
 80140f8:	702e6564 	eorvc	r6, lr, r4, ror #10
 80140fc:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8014100:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014104:	2f3c222b 	svccs	0x003c222b
 8014108:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 801410c:	0a7d0a3b 	beq	9f56a00 <__exidx_end+0x1f40fe4>
 8014110:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8014114:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8014118:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801411c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014120:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8014124:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014128:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801412c:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8014130:	0a7b2029 	beq	9edc1dc <__exidx_end+0x1ec67c0>
 8014134:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8014138:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 801413c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014140:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014144:	6177613d 	cmnvs	r7, sp, lsr r1
 8014148:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801414c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014150:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8014154:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014158:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 801415c:	3b292779 	blcc	8a5df48 <__exidx_end+0xa4852c>
 8014160:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014164:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014168:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801416c:	0a22223d 	beq	889ca68 <__exidx_end+0x88704c>
 8014170:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8014174:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8014178:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 801417c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8014180:	6a624f3d 	bvs	98a7e7c <__exidx_end+0x1892460>
 8014184:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8014188:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 801418c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8014190:	6f746365 	svcvs	0x00746365
 8014194:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8014198:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801419c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80141a0:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80141a4:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80141a8:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80141ac:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80141b0:	6145726f 	cmpvs	r5, pc, ror #4
 80141b4:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80141b8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80141bc:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80141c0:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80141c4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80141c8:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80141cc:	20726176 	rsbscs	r6, r2, r6, ror r1
 80141d0:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80141d4:	203d2065 	eorscs	r2, sp, r5, rrx
 80141d8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80141dc:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80141e0:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 80141e4:	73656c69 	cmnvc	r5, #26880	; 0x6900
 80141e8:	6b5b5d22 	blvs	96eb678 <__exidx_end+0x16d5c5c>
 80141ec:	3b5d7965 	blcc	9772788 <__exidx_end+0x175cd6c>
 80141f0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80141f4:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 80141f8:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 80141fc:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8014200:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014204:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8014208:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 801420c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014210:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8014214:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014218:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 801421c:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8014220:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014224:	0a3b223e 	beq	8edcb24 <__exidx_end+0xec7108>
 8014228:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 801422c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8014230:	6f640909 	svcvs	0x00640909
 8014234:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8014238:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801423c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014240:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014244:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014248:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801424c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014250:	6f746365 	svcvs	0x00746365
 8014254:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8014258:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 801425c:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8014260:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8014264:	3b6c6d74 	blcc	9b2f83c <__exidx_end+0x1b19e20>
 8014268:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801426c:	5f746567 	svcpl	0x00746567
 8014270:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8014274:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014278:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801427c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8014280:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8014284:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8014288:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801428c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8014290:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014294:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8014298:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 801429c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80142a0:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80142a4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80142a8:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80142ac:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80142b0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80142b4:	6177613d 	cmnvs	r7, sp, lsr r1
 80142b8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80142bc:	534a7465 	movtpl	r7, #42085	; 0xa465
 80142c0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80142c4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80142c8:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80142cc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80142d0:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80142d4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80142d8:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 80142dc:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 80142e0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 80142e4:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 80142e8:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 80142ec:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80142f0:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80142f4:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 80142f8:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 80142fc:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8014300:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8014304:	2b22563e 	blcs	88a9c04 <__exidx_end+0x8941e8>
 8014308:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801430c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014310:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014314:	2b6e6f69 	blcs	9bb00c0 <__exidx_end+0x1b9a6a4>
 8014318:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014298 <index_js+0x30c>
 801431c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014320:	2b223e69 	blcs	88a3ccc <__exidx_end+0x88e2b0>
 8014324:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014328:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801432c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8014330:	61642e64 	cmnvs	r4, r4, ror #28
 8014334:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8014338:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801433c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014340:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8014344:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014348:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 801434c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8014350:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8014354:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8014358:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 801435c:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8014360:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8014364:	6f697372 	svcvs	0x00697372
 8014368:	6f622e6e 	svcvs	0x00622e6e
 801436c:	2b647261 	blcs	9930cf8 <__exidx_end+0x191b2dc>
 8014370:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80142f0 <index_js+0x364>
 8014374:	3b223e69 	blcc	88a3d20 <__exidx_end+0x88e304>
 8014378:	0a0a7d0a 	beq	82b37a8 <__exidx_end+0x29dd8c>
 801437c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014380:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8014384:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014388:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801438c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8014394 <index_js+0x408>
 8014390:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8014394:	20296c65 	eorcs	r6, r9, r5, ror #24
 8014398:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 801439c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80143a0:	613d7478 	teqvs	sp, r8, ror r4
 80143a4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80143a8:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80143ac:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80143b0:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80143b4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80143b8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80143bc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80143c0:	3b22223d 	blcc	889ccbc <__exidx_end+0x8872a0>
 80143c4:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80143c8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80143cc:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80143d0:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80143d4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80143d8:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80143dc:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80143e0:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 80143e4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80143e8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80143ec:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80143f0:	0a7b2029 	beq	9edc49c <__exidx_end+0x1ec6a80>
 80143f4:	61760909 	cmnvs	r6, r9, lsl #18
 80143f8:	61762072 	cmnvs	r6, r2, ror r0
 80143fc:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8014400:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8014404:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014408:	6b5b5d6c 	blvs	96eb9c0 <__exidx_end+0x16d5fa4>
 801440c:	3b5d7965 	blcc	97729a8 <__exidx_end+0x175cf8c>
 8014410:	2009090a 	andcs	r0, r9, sl, lsl #18
 8014414:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014418:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 801441c:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8014420:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8014424:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014428:	2f3c222b 	svccs	0x003c222b
 801442c:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8014430:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8014434:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014438:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 801443c:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8014440:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8014448 <index_js+0x4bc>
 8014444:	3b223e72 	blcc	88a3e14 <__exidx_end+0x88e3f8>
 8014448:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 801444c:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8014450:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8014454:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8014458:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 801445c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8014460:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8014464:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8014468:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801446c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8014470:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8014474:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8014478:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 801447c:	0a3b6c6d 	beq	8eef638 <__exidx_end+0xed9c1c>
 8014480:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8014484:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014488:	73694c72 	cmnvc	r9, #29184	; 0x7200
 801448c:	3b292874 	blcc	8a5e664 <__exidx_end+0xa48c48>
 8014490:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8014494:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8014498:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 801449c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80144a0:	0a3b2928 	beq	8ede948 <__exidx_end+0xec8f2c>
 80144a4:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80144a8:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80144ac:	6f697372 	svcvs	0x00697372
 80144b0:	3b29286e 	blcc	8a5e670 <__exidx_end+0xa48c54>
 80144b4:	642f000a 	strtvs	r0, [pc], #-10	; 80144bc <index_js+0x530>
 80144b8:	0031786d 	eorseq	r7, r1, sp, ror #16
 80144bc:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 80144c0:	002a2f31 	eoreq	r2, sl, r1, lsr pc
 80144c4:	2f00322f 	svccs	0x0000322f
 80144c8:	31786d64 	cmncc	r8, r4, ror #26
 80144cc:	616c622f 	cmnvs	ip, pc, lsr #4
 80144d0:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8013975 <RemoteConfig::s_TXT+0x18d>
 80144d4:	2e310074 	mrccs	0, 1, r0, cr1, cr4, {3}
 80144d8:	565b0030 			; <UNDEFINED> instruction: 0x565b0030
 80144dc:	205d7325 	subscs	r7, sp, r5, lsr #6
 80144e0:	47007325 	strmi	r7, [r0, -r5, lsr #6]
 80144e4:	46323344 	ldrtmi	r3, [r2], -r4, asr #6
 80144e8:	69702f00 	ldmdbvs	r0!, {r8, r9, sl, fp, sp}^
 80144ec:	2f00676e 	svccs	0x0000676e
 80144f0:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 80144f4:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80144f8:	6f2f6f66 	svcvs	0x002f6f66
 80144fc:	692f0073 	stmdbvs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
 8014500:	2f6f666e 	svccs	0x006f666e
 8014504:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8014508:	692f006c 	stmdbvs	pc!, {r2, r3, r5, r6}	; <UNPREDICTABLE>
 801450c:	2f6f666e 	svccs	0x006f666e
 8014510:	00636f73 	rsbeq	r6, r3, r3, ror pc
 8014514:	00736559 	rsbseq	r6, r3, r9, asr r5
 8014518:	4f006f4e 	svcmi	0x00006f4e
 801451c:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8014520:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8014524:	20000a72 	andcs	r0, r0, r2, ror sl
 8014528:	6f636e49 	svcvs	0x00636e49
 801452c:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8014530:	726f5020 	rsbvc	r5, pc, #32
 8014534:	20202074 	eorcs	r2, r0, r4, ror r0
 8014538:	20202020 	eorcs	r2, r0, r0, lsr #32
 801453c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014540:	20000a64 	andcs	r0, r0, r4, ror #20
 8014544:	6774754f 	ldrbvs	r7, [r4, -pc, asr #10]!
 8014548:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 801454c:	726f5020 	rsbvc	r5, pc, #32
 8014550:	20202074 	eorcs	r2, r0, r4, ror r0
 8014554:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014558:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801455c:	20000a64 	andcs	r0, r0, r4, ror #20
 8014560:	20584d44 	subscs	r4, r8, r4, asr #26
 8014564:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 8014568:	20202020 	eorcs	r2, r0, r0, lsr #32
 801456c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014570:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014574:	5b203a20 	blpl	8822dfc <__exidx_end+0x80d3e0>
 8014578:	5b5d7325 	blpl	9771214 <__exidx_end+0x175b7f8>
 801457c:	0a5d7325 	beq	9771218 <__exidx_end+0x175b7fc>
 8014580:	42202000 	eormi	r2, r0, #0
 8014584:	6b63616c 	blvs	98ecb3c <__exidx_end+0x18d7120>
 8014588:	2074756f 	rsbscs	r7, r4, pc, ror #10
 801458c:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 8014590:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014594:	3a202020 	bcc	881c61c <__exidx_end+0x806c00>
 8014598:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 801459c:	20000a5d 	andcs	r0, r0, sp, asr sl
 80145a0:	74726150 	ldrbtvc	r6, [r2], #-336	; 0xfffffeb0
 80145a4:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80145a8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
 80145ac:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80145b0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80145b4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80145b8:	 	movwpl	r0, #2675	; 0xa73

080145bb <OscServerMsgConst::START>:
 80145bb:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80145bf:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80145c3:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 80145c7:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 80145cb:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80145cf:	00726576 	rsbseq	r6, r2, r6, ror r5

080145d3 <OscServerMsgConst::PARAMS>:
 80145d3:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80145d7:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80145db:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80145df:	2043534f 	subcs	r5, r3, pc, asr #6
 80145e3:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80145e7:	 	svcmi	0x00007265

080145ea <OscServerMsgConst::STARTED>:
 80145ea:	2043534f 	subcs	r5, r3, pc, asr #6
 80145ee:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80145f2:	73207265 			; <UNDEFINED> instruction: 0x73207265
 80145f6:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80145fa:	 	andvc	r6, r0, r5, ror #8

080145fd <OscServerParamsConst::TRANSMISSION>:
 80145fd:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8014601:	5f6c6169 	svcpl	0x006c6169
 8014605:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 8014609:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 801460d:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

08014612 <OscServerParamsConst::PATH_BLACKOUT>:
 8014612:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8014616:	616c625f 	cmnvs	ip, pc, asr r2
 801461a:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8013abf <contentType+0xd>
 801461e:	 	cmnvs	r0, r4, ror r0

08014620 <OscServerParamsConst::PATH>:
 8014620:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

08014625 <OscServerParamsConst::FILE_NAME>:
 8014625:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8014629:	00747874 	rsbseq	r7, r4, r4, ror r8

0801462d <OscServerParamsConst::PATH_INFO>:
 801462d:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8014631:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 8014635:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

08014637 <OscParamsConst::INCOMING_PORT>:
 8014637:	6f636e69 	svcvs	0x00636e69
 801463b:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 801463f:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014643:	 	strbvc	r0, [pc, #-116]!	; 80145d7 <OscServerMsgConst::PARAMS+0x4>

08014645 <OscParamsConst::OUTGOING_PORT>:
 8014645:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8014649:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 801464d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014651:	69500074 	ldmdbvs	r0, {r2, r4, r5, r6}^
 8014655:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8014659:	20584d44 	subscs	r4, r8, r4, asr #26
 801465d:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014661:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8014665:	6f697461 	svcvs	0x00697461
 8014669:	20000a6e 	andcs	r0, r0, lr, ror #20
 801466d:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8014671:	20737475 	rsbscs	r7, r3, r5, ror r4
 8014675:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014679:	4720000a 	strmi	r0, [r0, -sl]!
 801467d:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8014681:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014685:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014689:	203a2074 	eorscs	r2, sl, r4, ror r0
 801468d:	5b206425 	blpl	882d729 <__exidx_end+0x817d0d>
 8014691:	756f7247 	strbvc	r7, [pc, #-583]!	; 8014452 <index_js+0x4c6>
 8014695:	3a207370 	bcc	883145d <__exidx_end+0x81ba41>
 8014699:	5d642520 	cfstr64pl	mvdx2, [r4, #-128]!	; 0xffffff80
 801469d:	 	andeq	r0, r0, sl

080146a0 <vtable for WS28xxDmx>:
	...
 80146a8:	0800b8a5 	stmdaeq	r0, {r0, r2, r5, r7, fp, ip, sp, pc}
 80146ac:	0800b8c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, ip, sp, pc}
 80146b0:	0800ba19 	stmdaeq	r0, {r0, r3, r4, r9, fp, ip, sp, pc}
 80146b4:	0800ba31 	stmdaeq	r0, {r0, r4, r5, r9, fp, ip, sp, pc}
 80146b8:	0800b8fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, fp, ip, sp, pc}
 80146bc:	0800b8d7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, fp, ip, sp, pc}
 80146c0:	0800b9fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, fp, ip, sp, pc}
 80146c4:	0800ba13 	stmdaeq	r0, {r0, r1, r4, r9, fp, ip, sp, pc}
 80146c8:	0800ba49 	stmdaeq	r0, {r0, r3, r6, r9, fp, ip, sp, pc}
 80146cc:	0800b899 	stmdaeq	r0, {r0, r3, r4, r7, fp, ip, sp, pc}
 80146d0:	0800b89f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, fp, ip, sp, pc}
 80146d4:	0800ba81 	stmdaeq	r0, {r0, r7, r9, fp, ip, sp, pc}
 80146d8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80146dc:	2a2e253a 	bcs	8b9dbcc <__exidx_end+0xb881b0>
 80146e0:	23002c66 	movwcs	r2, #3174	; 0xc66
 80146e4:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80146e8:	0a662a2e 	beq	999efa8 <__exidx_end+0x198958c>
 80146ec:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 80146f0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 80146f4:	4f003e74 	svcmi	0x00003e74
 80146f8:	77726576 			; <UNDEFINED> instruction: 0x77726576
 80146fc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8014700:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8014704:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8014708:	4f007465 	svcmi	0x00007465
 801470c:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8014710:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8014714:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8014718:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801471c:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8014720:	6f724700 	svcvs	0x00724700
 8014724:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8014728:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 801472c:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8014730:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 8014734:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8014738:	00737069 	rsbseq	r7, r3, r9, rrx
 801473c:	31415041 	cmpcc	r1, r1, asr #32
 8014740:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 8014744:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8014748:	4d440032 	stclmi	0, cr0, [r4, #-200]	; 0xffffff38
 801474c:	65540058 	ldrbvs	r0, [r4, #-88]	; 0xffffffa8
 8014750:	70207473 	eorvc	r7, r0, r3, ror r4
 8014754:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8014758:	50006e72 	andpl	r6, r0, r2, ror lr
 801475c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014760:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8014764:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8014768:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801476c:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8014770:	70795420 	rsbsvc	r5, r9, r0, lsr #8
 8014774:	20202065 	eorcs	r2, r0, r5, rrx
 8014778:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801477c:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
 8014780:	000a5d64 	andeq	r5, sl, r4, ror #26
 8014784:	756f4320 	strbvc	r4, [pc, #-800]!	; 801446c <index_js+0x4e0>
 8014788:	2020746e 	eorcs	r7, r0, lr, ror #8
 801478c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014790:	20000a64 	andcs	r0, r0, r4, ror #20
 8014794:	7070614d 	rsbsvc	r6, r0, sp, asr #2
 8014798:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801479c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80147a0:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80147a4:	20000a5d 	andcs	r0, r0, sp, asr sl
 80147a8:	20483054 	subcs	r3, r8, r4, asr r0
 80147ac:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147b0:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80147b4:	5b206632 	blpl	882e084 <__exidx_end+0x818668>
 80147b8:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
 80147bc:	20000a5d 	andcs	r0, r0, sp, asr sl
 80147c0:	20483154 	subcs	r3, r8, r4, asr r1
 80147c4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147c8:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80147cc:	5b206632 	blpl	882e09c <__exidx_end+0x818680>
 80147d0:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
 80147d4:	20000a5d 	andcs	r0, r0, sp, asr sl
 80147d8:	626f6c47 	rsbvs	r6, pc, #18176	; 0x4700
 80147dc:	72426c61 	subvc	r6, r2, #24832	; 0x6100
 80147e0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 80147e4:	7373656e 	cmnvc	r3, #461373440	; 0x1b800000
 80147e8:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80147ec:	4720000a 	strmi	r0, [r0, -sl]!
 80147f0:	616d6d61 	cmnvs	sp, r1, ror #26
 80147f4:	726f6320 	rsbvc	r6, pc, #32, 6	; 0x80000000
 80147f8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80147fc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014800:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014804:	6f6c4320 	svcvs	0x006c4320
 8014808:	203a6b63 	eorscs	r6, sl, r3, ror #22
 801480c:	48207525 	stmdami	r0!, {r0, r2, r5, r8, sl, ip, sp, lr}
 8014810:	00000a7a 	andeq	r0, r0, sl, ror sl

08014814 <CSWTCH.9>:
 8014814:	08014a28 	stmdaeq	r1, {r3, r5, r9, fp, lr}
 8014818:	08014b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, lr}
 801481c:	08014c28 	stmdaeq	r1, {r3, r5, sl, fp, lr}
 8014820:	08014d28 	stmdaeq	r1, {r3, r5, r8, sl, fp, lr}
 8014824:	08014e28 	stmdaeq	r1, {r3, r5, r9, sl, fp, lr}

08014828 <gamma10_0>:
 8014828:	03020100 	movweq	r0, #8448	; 0x2100
 801482c:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014830:	0b0a0908 	bleq	8296c58 <__exidx_end+0x28123c>
 8014834:	0f0e0d0c 	svceq	0x000e0d0c
 8014838:	13121110 	tstne	r2, #16, 2
 801483c:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014840:	1b1a1918 	blne	869aca8 <__exidx_end+0x68528c>
 8014844:	1f1e1d1c 	svcne	0x001e1d1c
 8014848:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801484c:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014850:	2b2a2928 	blcs	8a9ecf8 <__exidx_end+0xa892dc>
 8014854:	2f2e2d2c 	svccs	0x002e2d2c
 8014858:	33323130 	teqcc	r2, #48, 2
 801485c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014860:	3b3a3938 	blcc	8ea2d48 <__exidx_end+0xe8d32c>
 8014864:	3f3e3d3c 	svccc	0x003e3d3c
 8014868:	43424140 	movtmi	r4, #8512	; 0x2140
 801486c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014870:	4b4a4948 	blmi	92a6d98 <__exidx_end+0x129137c>
 8014874:	4f4e4d4c 	svcmi	0x004e4d4c
 8014878:	53525150 	cmppl	r2, #80, 2
 801487c:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8014880:	5b5a5958 	blpl	96aade8 <__exidx_end+0x16953cc>
 8014884:	5f5e5d5c 	svcpl	0x005e5d5c
 8014888:	63626160 	cmnvs	r2, #96, 2
 801488c:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8014890:	6b6a6968 	blvs	9aaee38 <__exidx_end+0x1a9941c>
 8014894:	6f6e6d6c 	svcvs	0x006e6d6c
 8014898:	73727170 	cmnvc	r2, #112, 2
 801489c:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80148a0:	7b7a7978 	blvc	9eb2e88 <__exidx_end+0x1e9d46c>
 80148a4:	7f7e7d7c 	svcvc	0x007e7d7c
 80148a8:	83828180 	orrhi	r8, r2, #128, 2
 80148ac:	87868584 	strhi	r8, [r6, r4, lsl #11]
 80148b0:	8b8a8988 	blhi	62b6ed8 <__stack_size+0x62b4ed8>
 80148b4:	8f8e8d8c 	svchi	0x008e8d8c
 80148b8:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 80148bc:	97969594 			; <UNDEFINED> instruction: 0x97969594
 80148c0:	9b9a9998 	blls	66baf28 <__stack_size+0x66b8f28>
 80148c4:	9f9e9d9c 	svcls	0x009e9d9c
 80148c8:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80148cc:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 80148d0:	abaaa9a8 	blge	6abef78 <__stack_size+0x6abcf78>
 80148d4:	afaeadac 	svcge	0x00aeadac
 80148d8:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 80148dc:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 80148e0:	bbbab9b8 	bllt	6ec2fc8 <__stack_size+0x6ec0fc8>
 80148e4:	bfbebdbc 	svclt	0x00bebdbc
 80148e8:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 80148ec:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 80148f0:	cbcac9c8 	blgt	72c7018 <__stack_size+0x72c5018>
 80148f4:	cfcecdcc 	svcgt	0x00cecdcc
 80148f8:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80148fc:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014900:	dbdad9d8 	blle	76cb068 <__stack_size+0x76c9068>
 8014904:	dfdedddc 	svcle	0x00dedddc
 8014908:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 801490c:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014910:	ebeae9e8 	bl	7acf0b8 <__stack_size+0x7acd0b8>
 8014914:	efeeedec 	svc	0x00eeedec
 8014918:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 801491c:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014920:	fbfaf9f8 	blx	7ed310a <__stack_size+0x7ed110a>
 8014924:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08014928 <gamma20_0>:
	...
 8014934:	01010101 	tsteq	r1, r1, lsl #2
 8014938:	01010101 	tsteq	r1, r1, lsl #2
 801493c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014940:	03030202 	movweq	r0, #12802	; 0x3202
 8014944:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014948:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 801494c:	06060505 	streq	r0, [r6], -r5, lsl #10
 8014950:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014954:	09080808 	stmdbeq	r8, {r3, fp}
 8014958:	0a0a0909 	beq	8296d84 <__exidx_end+0x281368>
 801495c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014960:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014964:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8014968:	12111110 	andsne	r1, r1, #16, 2
 801496c:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8014970:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8014974:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8014978:	1b1a1a19 	blne	869b1e4 <__exidx_end+0x6857c8>
 801497c:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8014980:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8014984:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8014988:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801498c:	2a292827 	bcs	8a5ea30 <__exidx_end+0xa49014>
 8014990:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8014994:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8014998:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 801499c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 80149a0:	3b3a3938 	blcc	8ea2e88 <__exidx_end+0xe8d46c>
 80149a4:	3f3e3d3c 	svccc	0x003e3d3c
 80149a8:	43424140 	movtmi	r4, #8512	; 0x2140
 80149ac:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80149b0:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 80149b4:	504f4e4d 	subpl	r4, pc, sp, asr #28
 80149b8:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 80149bc:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 80149c0:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 80149c4:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 80149c8:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 80149cc:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 80149d0:	7371706f 	cmnvc	r1, #111	; 0x6f
 80149d4:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 80149d8:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 80149dc:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 80149e0:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 80149e4:	8f8e8c8b 	svchi	0x008e8c8b
 80149e8:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 80149ec:	9b9a9897 	blls	66bac50 <__stack_size+0x66b8c50>
 80149f0:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 80149f4:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 80149f8:	afadabaa 	svcge	0x00adabaa
 80149fc:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8014a00:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8014a04:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8014a08:	cac8c7c5 	bgt	7246924 <__stack_size+0x7244924>
 8014a0c:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8014a10:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8014a14:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8014a18:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8014a1c:	efedebe9 	svc	0x00edebe9
 8014a20:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8014a24:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08014a28 <gamma21_0>:
	...
 8014a34:	01010000 	mrseq	r0, (UNDEF: 1)
 8014a38:	01010101 	tsteq	r1, r1, lsl #2
 8014a3c:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8014a40:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014a44:	03030302 	movweq	r0, #13058	; 0x3302
 8014a48:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014a4c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8014a50:	06060505 	streq	r0, [r6], -r5, lsl #10
 8014a54:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014a58:	09080808 	stmdbeq	r8, {r3, fp}
 8014a5c:	0a0a0909 	beq	8296e88 <__exidx_end+0x28146c>
 8014a60:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014a64:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014a68:	0f0f0e0e 	svceq	0x000f0e0e
 8014a6c:	11111010 	tstne	r1, r0, lsl r0
 8014a70:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8014a74:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8014a78:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8014a7c:	1b1a1919 	blne	869aee8 <__exidx_end+0x6854cc>
 8014a80:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8014a84:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8014a88:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014a8c:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8014a90:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8014a94:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8014a98:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014a9c:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8014aa0:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014aa4:	3b3a3938 	blcc	8ea2f8c <__exidx_end+0xe8d570>
 8014aa8:	3f3e3d3c 	svccc	0x003e3d3c
 8014aac:	43424140 	movtmi	r4, #8512	; 0x2140
 8014ab0:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014ab4:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8014ab8:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8014abc:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8014ac0:	5a585756 	bpl	962a820 <__exidx_end+0x1614e04>
 8014ac4:	5f5d5c5b 	svcpl	0x005d5c5b
 8014ac8:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8014acc:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8014ad0:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8014ad4:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8014ad8:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8014adc:	7f7e7c7b 	svcvc	0x007e7c7b
 8014ae0:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8014ae4:	8b898886 	blhi	6276d04 <__stack_size+0x6274d04>
 8014ae8:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8014aec:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8014af0:	9e9c9b99 	vmovls.32	r9, d28[0]
 8014af4:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8014af8:	abaaa8a6 	blge	6abed98 <__stack_size+0x6abcd98>
 8014afc:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8014b00:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8014b04:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8014b08:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8014b0c:	cfcdcbca 	svcgt	0x00cdcbca
 8014b10:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8014b14:	dfdddbd9 	svcle	0x00dddbd9
 8014b18:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8014b1c:	eeeceae8 	vfms.f32	s29, s25, s17
 8014b20:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8014b24:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08014b28 <gamma22_0>:
	...
 8014b34:	01000000 	mrseq	r0, (UNDEF: 0)
 8014b38:	01010101 	tsteq	r1, r1, lsl #2
 8014b3c:	01010101 	tsteq	r1, r1, lsl #2
 8014b40:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8014b44:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014b48:	03030303 	movweq	r0, #13059	; 0x3303
 8014b4c:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8014b50:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014b54:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014b58:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014b5c:	09080808 	stmdbeq	r8, {r3, fp}
 8014b60:	0a0a0909 	beq	8296f8c <__exidx_end+0x281570>
 8014b64:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014b68:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8014b6c:	0f0f0e0e 	svceq	0x000f0e0e
 8014b70:	11111010 	tstne	r1, r0, lsl r0
 8014b74:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014b78:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014b7c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014b80:	1a1a1919 	bne	869afec <__exidx_end+0x6855d0>
 8014b84:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014b88:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014b8c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014b90:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014b94:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8014b98:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8014b9c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014ba0:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8014ba4:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014ba8:	3b3a3938 	blcc	8ea3090 <__exidx_end+0xe8d674>
 8014bac:	3f3e3d3c 	svccc	0x003e3d3c
 8014bb0:	43424140 	movtmi	r4, #8512	; 0x2140
 8014bb4:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014bb8:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8014bbc:	514f4e4d 	cmppl	pc, sp, asr #28
 8014bc0:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8014bc4:	5a595857 	bpl	966ad28 <__exidx_end+0x165530c>
 8014bc8:	5f5e5d5b 	svcpl	0x005e5d5b
 8014bcc:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8014bd0:	6a696766 	bvs	9a6e970 <__exidx_end+0x1a58f54>
 8014bd4:	6f6e6d6b 	svcvs	0x006e6d6b
 8014bd8:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8014bdc:	7b797877 	blvc	9e72dc0 <__exidx_end+0x1e5d3a4>
 8014be0:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8014be4:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8014be8:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8014bec:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8014bf0:	9a999795 	bls	667aa4c <__stack_size+0x6678a4c>
 8014bf4:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8014bf8:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8014bfc:	afadacaa 	svcge	0x00adacaa
 8014c00:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8014c04:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8014c08:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8014c0c:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8014c10:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8014c14:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8014c18:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8014c1c:	eeeceae7 	vfms.f32	s29, s25, s15
 8014c20:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8014c24:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08014c28 <gamma23_0>:
	...
 8014c38:	01010100 	mrseq	r0, (UNDEF: 17)
 8014c3c:	01010101 	tsteq	r1, r1, lsl #2
 8014c40:	01010101 	tsteq	r1, r1, lsl #2
 8014c44:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014c48:	03020202 	movweq	r0, #8706	; 0x2202
 8014c4c:	03030303 	movweq	r0, #13059	; 0x3303
 8014c50:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014c54:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014c58:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014c5c:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8014c60:	09080808 	stmdbeq	r8, {r3, fp}
 8014c64:	0a0a0a09 	beq	8297490 <__exidx_end+0x281a74>
 8014c68:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014c6c:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8014c70:	0f0f0e0e 	svceq	0x000f0e0e
 8014c74:	11111010 	tstne	r1, r0, lsl r0
 8014c78:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014c7c:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8014c80:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014c84:	1a1a1918 	bne	869b0ec <__exidx_end+0x6856d0>
 8014c88:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014c8c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014c90:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014c94:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014c98:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8014c9c:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8014ca0:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014ca4:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8014ca8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014cac:	3b3a3938 	blcc	8ea3194 <__exidx_end+0xe8d778>
 8014cb0:	3f3e3d3c 	svccc	0x003e3d3c
 8014cb4:	43424140 	movtmi	r4, #8512	; 0x2140
 8014cb8:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8014cbc:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8014cc0:	51504f4e 	cmppl	r0, lr, asr #30
 8014cc4:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8014cc8:	5b5a5957 	blpl	96ab22c <__exidx_end+0x1695810>
 8014ccc:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8014cd0:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8014cd4:	6b6a6867 	blvs	9aaee78 <__exidx_end+0x1a9945c>
 8014cd8:	71706e6d 	cmnvc	r0, sp, ror #28
 8014cdc:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8014ce0:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8014ce4:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8014ce8:	8a888685 	bhi	6236704 <__stack_size+0x6234704>
 8014cec:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8014cf0:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8014cf4:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8014cf8:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8014cfc:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8014d00:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8014d04:	bbb9b7b6 	bllt	6e82be4 <__stack_size+0x6e80be4>
 8014d08:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8014d0c:	cbc9c7c5 	blgt	7286c28 <__stack_size+0x7284c28>
 8014d10:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8014d14:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8014d18:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8014d1c:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8014d20:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8014d24:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014d28 <gamma24_0>:
	...
 8014d38:	01000000 	mrseq	r0, (UNDEF: 0)
 8014d3c:	01010101 	tsteq	r1, r1, lsl #2
 8014d40:	01010101 	tsteq	r1, r1, lsl #2
 8014d44:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8014d48:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014d4c:	03030202 	movweq	r0, #12802	; 0x3202
 8014d50:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8014d54:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014d58:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8014d5c:	06060606 	streq	r0, [r6], -r6, lsl #12
 8014d60:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8014d64:	09090808 	stmdbeq	r9, {r3, fp}
 8014d68:	0a0a0a09 	beq	8297594 <__exidx_end+0x281b78>
 8014d6c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014d70:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014d74:	0f0f0e0e 	svceq	0x000f0e0e
 8014d78:	11111010 	tstne	r1, r0, lsl r0
 8014d7c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014d80:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014d84:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014d88:	1a1a1918 	bne	869b1f0 <__exidx_end+0x6857d4>
 8014d8c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014d90:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014d94:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014d98:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014d9c:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8014da0:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8014da4:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014da8:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8014dac:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8014db0:	3b3a3938 	blcc	8ea3298 <__exidx_end+0xe8d87c>
 8014db4:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8014db8:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8014dbc:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8014dc0:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8014dc4:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8014dc8:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8014dcc:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8014dd0:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8014dd4:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8014dd8:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8014ddc:	7372706f 	cmnvc	r2, #111	; 0x6f
 8014de0:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8014de4:	7f7e7c7b 	svcvc	0x007e7c7b
 8014de8:	86848381 	strhi	r8, [r4], r1, lsl #7
 8014dec:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8014df0:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8014df4:	9b999795 	blls	667ac50 <__stack_size+0x6678c50>
 8014df8:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8014dfc:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8014e00:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8014e04:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8014e08:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8014e0c:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8014e10:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8014e14:	dad8d6d4 	ble	764a96c <__stack_size+0x764896c>
 8014e18:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8014e1c:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8014e20:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8014e24:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014e28 <gamma25_0>:
	...
 8014e3c:	01010000 	mrseq	r0, (UNDEF: 1)
 8014e40:	01010101 	tsteq	r1, r1, lsl #2
 8014e44:	01010101 	tsteq	r1, r1, lsl #2
 8014e48:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8014e4c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014e50:	03030302 	movweq	r0, #13058	; 0x3302
 8014e54:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014e58:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8014e5c:	06050505 	streq	r0, [r5], -r5, lsl #10
 8014e60:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8014e64:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8014e68:	09090808 	stmdbeq	r9, {r3, fp}
 8014e6c:	0a0a0a09 	beq	8297698 <__exidx_end+0x281c7c>
 8014e70:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8014e74:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014e78:	0f0f0f0e 	svceq	0x000f0f0e
 8014e7c:	11111010 	tstne	r1, r0, lsl r0
 8014e80:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014e84:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014e88:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014e8c:	1a1a1919 	bne	869b2f8 <__exidx_end+0x6858dc>
 8014e90:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014e94:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014e98:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014e9c:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8014ea0:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8014ea4:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8014ea8:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8014eac:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8014eb0:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8014eb4:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8014eb8:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8014ebc:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8014ec0:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8014ec4:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8014ec8:	53525150 	cmppl	r2, #80, 2
 8014ecc:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8014ed0:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8014ed4:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8014ed8:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8014edc:	6f6e6c6b 	svcvs	0x006e6c6b
 8014ee0:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8014ee4:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8014ee8:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8014eec:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8014ef0:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8014ef4:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8014ef8:	9f9d9b99 	svcls	0x009d9b99
 8014efc:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8014f00:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8014f04:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8014f08:	bfbdbab8 	svclt	0x00bdbab8
 8014f0c:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8014f10:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8014f14:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8014f18:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8014f1c:	ebe9e7e4 	bl	7a8eeb4 <__stack_size+0x7a8ceb4>
 8014f20:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8014f24:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014f28 <gamma25_5>:
 8014f28:	01010100 	mrseq	r0, (UNDEF: 17)
 8014f2c:	01010101 	tsteq	r1, r1, lsl #2
 8014f30:	01010101 	tsteq	r1, r1, lsl #2
 8014f34:	01010101 	tsteq	r1, r1, lsl #2
 8014f38:	01010101 	tsteq	r1, r1, lsl #2
 8014f3c:	01010101 	tsteq	r1, r1, lsl #2
 8014f40:	01010101 	tsteq	r1, r1, lsl #2
 8014f44:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014f48:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014f4c:	03030302 	movweq	r0, #13058	; 0x3302
 8014f50:	03030303 	movweq	r0, #13059	; 0x3303
 8014f54:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014f58:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014f5c:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014f60:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014f64:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8014f68:	0a090909 	beq	8257394 <__exidx_end+0x241978>
 8014f6c:	0b0b0a0a 	bleq	82d779c <__exidx_end+0x2c1d80>
 8014f70:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8014f74:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8014f78:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8014f7c:	12111110 	andsne	r1, r1, #16, 2
 8014f80:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8014f84:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8014f88:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8014f8c:	1b1a1a19 	blne	869b7f8 <__exidx_end+0x685ddc>
 8014f90:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8014f94:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8014f98:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8014f9c:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8014fa0:	2a292827 	bcs	8a5f044 <__exidx_end+0xa49628>
 8014fa4:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8014fa8:	31302f2e 	teqcc	r0, lr, lsr #30
 8014fac:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8014fb0:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8014fb4:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8014fb8:	41403f3e 	cmpmi	r0, lr, lsr pc
 8014fbc:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8014fc0:	4a494846 	bmi	92670e0 <__exidx_end+0x12516c4>
 8014fc4:	4f4e4c4b 	svcmi	0x004e4c4b
 8014fc8:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8014fcc:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8014fd0:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8014fd4:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8014fd8:	6a686765 	bvs	9a2ed74 <__exidx_end+0x1a19358>
 8014fdc:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 8014fe0:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8014fe4:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8014fe8:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8014fec:	8a888685 	bhi	6236a08 <__stack_size+0x6234a08>
 8014ff0:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8014ff4:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8014ff8:	9f9d9c9a 	svcls	0x009d9c9a
 8014ffc:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 8015000:	afadaba9 	svcge	0x00adaba9
 8015004:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8015008:	bfbdbbb9 	svclt	0x00bdbbb9
 801500c:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 8015010:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 8015014:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8015018:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 801501c:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 8015020:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 8015024:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 8015028:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801502c:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8015030:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 8015034:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 8015038:	 	andeq	r0, r0, #100	; 0x64

0801503a <CSWTCH.18>:
 801503a:	02020200 	andeq	r0, r2, #0, 4
 801503e:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8015042:	 	ldrbmi	r0, [r2, -r0, lsl #10]

08015044 <PixelType::MAPS>:
 8015044:	00424752 	subeq	r4, r2, r2, asr r7
 8015048:	00474252 	subeq	r4, r7, r2, asr r2
 801504c:	00425247 	subeq	r5, r2, r7, asr #4
 8015050:	00524247 	subseq	r4, r2, r7, asr #4
 8015054:	00475242 	subeq	r5, r7, r2, asr #4
 8015058:	00524742 	subseq	r4, r2, r2, asr #14

0801505c <PixelType::TYPES>:
 801505c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015060:	00003130 	andeq	r3, r0, r0, lsr r1
 8015064:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015068:	00003131 	andeq	r3, r0, r1, lsr r1
 801506c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015070:	00003231 	andeq	r3, r0, r1, lsr r2
 8015074:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015078:	00423231 	subeq	r3, r2, r1, lsr r2
 801507c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015080:	00003331 	andeq	r3, r0, r1, lsr r3
 8015084:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015088:	00003531 	andeq	r3, r0, r1, lsr r5
 801508c:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8015090:	00003231 	andeq	r3, r0, r1, lsr r2
 8015094:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8015098:	00573231 	subseq	r3, r7, r1, lsr r2
 801509c:	31534355 	cmpcc	r3, r5, asr r3
 80150a0:	00333039 	eorseq	r3, r3, r9, lsr r0
 80150a4:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 80150a8:	00333039 	eorseq	r3, r3, r9, lsr r0
 80150ac:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 80150b0:	00003231 	andeq	r3, r0, r1, lsr r2
 80150b4:	31415041 	cmpcc	r1, r1, asr #32
 80150b8:	00003230 	andeq	r3, r0, r0, lsr r2
 80150bc:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80150c0:	00003232 	andeq	r3, r0, r2, lsr r2
 80150c4:	31383950 	teqcc	r8, r0, asr r9
 80150c8:	00000033 	andeq	r0, r0, r3, lsr r0

080150cc <gamma10_0>:
 80150cc:	03020100 	movweq	r0, #8448	; 0x2100
 80150d0:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80150d4:	0b0a0908 	bleq	82974fc <__exidx_end+0x281ae0>
 80150d8:	0f0e0d0c 	svceq	0x000e0d0c
 80150dc:	13121110 	tstne	r2, #16, 2
 80150e0:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80150e4:	1b1a1918 	blne	869b54c <__exidx_end+0x685b30>
 80150e8:	1f1e1d1c 	svcne	0x001e1d1c
 80150ec:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80150f0:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80150f4:	2b2a2928 	blcs	8a9f59c <__exidx_end+0xa89b80>
 80150f8:	2f2e2d2c 	svccs	0x002e2d2c
 80150fc:	33323130 	teqcc	r2, #48, 2
 8015100:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8015104:	3b3a3938 	blcc	8ea35ec <__exidx_end+0xe8dbd0>
 8015108:	3f3e3d3c 	svccc	0x003e3d3c
 801510c:	43424140 	movtmi	r4, #8512	; 0x2140
 8015110:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8015114:	4b4a4948 	blmi	92a763c <__exidx_end+0x1291c20>
 8015118:	4f4e4d4c 	svcmi	0x004e4d4c
 801511c:	53525150 	cmppl	r2, #80, 2
 8015120:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8015124:	5b5a5958 	blpl	96ab68c <__exidx_end+0x1695c70>
 8015128:	5f5e5d5c 	svcpl	0x005e5d5c
 801512c:	63626160 	cmnvs	r2, #96, 2
 8015130:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8015134:	6b6a6968 	blvs	9aaf6dc <__exidx_end+0x1a99cc0>
 8015138:	6f6e6d6c 	svcvs	0x006e6d6c
 801513c:	73727170 	cmnvc	r2, #112, 2
 8015140:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8015144:	7b7a7978 	blvc	9eb372c <__exidx_end+0x1e9dd10>
 8015148:	7f7e7d7c 	svcvc	0x007e7d7c
 801514c:	83828180 	orrhi	r8, r2, #128, 2
 8015150:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8015154:	8b8a8988 	blhi	62b777c <__stack_size+0x62b577c>
 8015158:	8f8e8d8c 	svchi	0x008e8d8c
 801515c:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8015160:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8015164:	9b9a9998 	blls	66bb7cc <__stack_size+0x66b97cc>
 8015168:	9f9e9d9c 	svcls	0x009e9d9c
 801516c:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8015170:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8015174:	abaaa9a8 	blge	6abf81c <__stack_size+0x6abd81c>
 8015178:	afaeadac 	svcge	0x00aeadac
 801517c:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8015180:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8015184:	bbbab9b8 	bllt	6ec386c <__stack_size+0x6ec186c>
 8015188:	bfbebdbc 	svclt	0x00bebdbc
 801518c:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8015190:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8015194:	cbcac9c8 	blgt	72c78bc <__stack_size+0x72c58bc>
 8015198:	cfcecdcc 	svcgt	0x00cecdcc
 801519c:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80151a0:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 80151a4:	dbdad9d8 	blle	76cb90c <__stack_size+0x76c990c>
 80151a8:	dfdedddc 	svcle	0x00dedddc
 80151ac:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 80151b0:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 80151b4:	ebeae9e8 	bl	7acf95c <__stack_size+0x7acd95c>
 80151b8:	efeeedec 	svc	0x00eeedec
 80151bc:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80151c0:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80151c4:	fbfaf9f8 	blx	7ed39ae <__stack_size+0x7ed19ae>
 80151c8:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 80151cc:	5f706374 	svcpl	0x00706374
 80151d0:	69676562 	stmdbvs	r7!, {r1, r5, r6, r8, sl, sp, lr}^
 80151d4:	74203a6e 	strtvc	r3, [r0], #-2670	; 0xfffff592
 80151d8:	6d206f6f 	stcvs	15, cr6, [r0, #-444]!	; 0xfffffe44
 80151dc:	20796e61 	rsbscs	r6, r9, r1, ror #28
 80151e0:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
 80151e4:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80151e8:	00736e6f 	rsbseq	r6, r3, pc, ror #28
 80151ec:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 80151f0:	626e7500 	rsbvs	r7, lr, #0, 10
 80151f4:	0a646e69 	beq	9930ba0 <__exidx_end+0x191b184>
 80151f8:	50524100 	subspl	r4, r2, r0, lsl #2
 80151fc:	6f6f6c20 	svcvs	0x006f6c20
 8015200:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8015204:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8015208:	2d206465 	cfstrscs	mvf6, [r0, #-404]!	; 0xfffffe6c
 801520c:	6564203e 	strbvs	r2, [r4, #-62]!	; 0xffffffc2
 8015210:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 8015214:	61672074 	smcvs	29188	; 0x7204
 8015218:	61776574 	cmnvs	r7, r4, ror r5
 801521c:	41000a79 	tstmi	r0, r9, ror sl
 8015220:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8015224:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8015228:	61662070 	smcvs	25088	; 0x6200
 801522c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8015230:	 	svcvs	0x0043000a

08015232 <NetworkConst::MSG_MDNS_CONFIG>:
 8015232:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015236:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801523a:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801523e:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08015243 <NetworkConst::MSG_NETWORK_INIT>:
 8015243:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8015247:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801524b:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801524f:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8015253:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8015257:	3135322e 	teqcc	r5, lr, lsr #4
 801525b:	63745f00 	cmnvs	r4, #0, 30
 801525f:	6f6c2e70 	svcvs	0x006c2e70
 8015263:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8015267:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801526b:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801526f:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8015277 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8015273:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8015277:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801441b <index_js+0x48f>
 801527b:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801527f:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8015283:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8015287:	20000a53 	andcs	r0, r0, r3, asr sl
 801528b:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801528f:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8015293:	0a676e69 	beq	99f0c3f <__exidx_end+0x19db223>
 8015297:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801529b:	3a20656d 	bcc	882e857 <__exidx_end+0x818e3b>
 801529f:	0a732520 	beq	9cde727 <__exidx_end+0x1cc8d0b>
 80152a3:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80152a7:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80152ab:	000a7325 	andeq	r7, sl, r5, lsr #6
 80152af:	30687465 	rsbcc	r7, r8, r5, ror #8
 80152b3:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 80152b7:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80152bb:	5f656369 	svcpl	0x00656369
 80152bf:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 80152c3:	6b726f77 	blvs	9cb10a7 <__exidx_end+0x1c9b68b>
 80152c7:	4820000a 	stmdami	r0!, {r1, r3}
 80152cb:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80152cf:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80152d3:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80152d7:	20000a73 	andcs	r0, r0, r3, ror sl
 80152db:	614e6649 	cmpvs	lr, r9, asr #12
 80152df:	2020656d 	eorcs	r6, r0, sp, ror #10
 80152e3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80152e7:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80152eb:	000a7325 	andeq	r7, sl, r5, lsr #6
 80152ef:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80152f3:	20202074 	eorcs	r2, r0, r4, ror r0
 80152f7:	3a202020 	bcc	881d37f <__exidx_end+0x807963>
 80152fb:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80152ff:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015303:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015307:	0a64252f 	beq	991e7cb <__exidx_end+0x1908daf>
 801530b:	654e2000 	strbvs	r2, [lr, #-0]
 801530f:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8015313:	2020206b 	eorcs	r2, r0, fp, rrx
 8015317:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801531b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801531f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015323:	20000a64 	andcs	r0, r0, r4, ror #20
 8015327:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801532b:	20796177 	rsbscs	r6, r9, r7, ror r1
 801532f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015333:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015337:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801533b:	0a64252e 	beq	991e7fb <__exidx_end+0x1908ddf>
 801533f:	72422000 	subvc	r2, r2, #0
 8015343:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8015347:	20747361 	rsbscs	r7, r4, r1, ror #6
 801534b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801534f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015353:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015357:	20000a64 	andcs	r0, r0, r4, ror #20
 801535b:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801535f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015363:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015367:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801536b:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801536f:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8015373:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8015377:	3a78322e 	bcc	9e21c37 <__exidx_end+0x1e0c21b>
 801537b:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801537f:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8015383:	20000a78 	andcs	r0, r0, r8, ror sl
 8015387:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801538b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801538f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015393:	000a6325 	andeq	r6, sl, r5, lsr #6
 8015397:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801539b:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801539f:	 	rsbvc	r0, r9, r0, asr r0

080153a1 <NetworkParamsConst::IP_ADDRESS>:
 80153a1:	615f7069 	cmpvs	pc, r9, rrx
 80153a5:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80153a9:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080153ac <NetworkParamsConst::DEFAULT_GATEWAY>:
 80153ac:	61666564 	cmnvs	r6, r4, ror #10
 80153b0:	5f746c75 	svcpl	0x00746c75
 80153b4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80153b8:	00796177 	rsbseq	r6, r9, r7, ror r1

080153bc <NetworkParamsConst::DHCP_RETRY_TIME>:
 80153bc:	70636864 	rsbvc	r6, r3, r4, ror #16
 80153c0:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80153c4:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80153cc <NetworkParamsConst::HOSTNAME>
 80153c8:	00656d69 	rsbeq	r6, r5, r9, ror #26

080153cc <NetworkParamsConst::HOSTNAME>:
 80153cc:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80153d0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080153d5 <NetworkParamsConst::NET_MASK>:
 80153d5:	5f74656e 	svcpl	0x0074656e
 80153d9:	6b73616d 	blvs	9ced995 <__exidx_end+0x1cd7f79>
	...

080153de <NetworkParamsConst::USE_DHCP>:
 80153de:	5f657375 	svcpl	0x00657375
 80153e2:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080153e7 <NetworkParamsConst::FILE_NAME>:
 80153e7:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80153eb:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80153ef:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

080153f4 <s_aStorSize>:
 80153f4:	00000060 	andeq	r0, r0, r0, rrx
 80153f8:	00000090 	muleq	r0, r0, r0
 80153fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8015400:	00000040 	andeq	r0, r0, r0, asr #32
 8015404:	00000060 	andeq	r0, r0, r0, rrx
 8015408:	00000040 	andeq	r0, r0, r0, asr #32
 801540c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015410:	00000020 	andeq	r0, r0, r0, lsr #32
 8015414:	000001e0 	andeq	r0, r0, r0, ror #3
 8015418:	00000040 	andeq	r0, r0, r0, asr #32
 801541c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015420:	00000060 	andeq	r0, r0, r0, rrx
 8015424:	00000030 	andeq	r0, r0, r0, lsr r0
 8015428:	00000020 	andeq	r0, r0, r0, lsr #32
 801542c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8015430:	00000030 	andeq	r0, r0, r0, lsr r0
 8015434:	00000040 	andeq	r0, r0, r0, asr #32
 8015438:	00000020 	andeq	r0, r0, r0, lsr #32
 801543c:	00000060 	andeq	r0, r0, r0, rrx
 8015440:	00000020 	andeq	r0, r0, r0, lsr #32
 8015444:	00000400 	andeq	r0, r0, r0, lsl #8
 8015448:	00000020 	andeq	r0, r0, r0, lsr #32
 801544c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015450:	00000040 	andeq	r0, r0, r0, asr #32
 8015454:	00000060 	andeq	r0, r0, r0, rrx
 8015458:	00000020 	andeq	r0, r0, r0, lsr #32
 801545c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015460:	000000c0 	andeq	r0, r0, r0, asr #1

08015464 <vtable for StoreNetwork>:
	...
 801546c:	0800fa91 	stmdaeq	r0, {r0, r4, r7, r9, fp, ip, sp, lr, pc}
 8015470:	0800fba5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, fp, ip, sp, lr, pc}
 8015474:	0800fa99 	stmdaeq	r0, {r0, r3, r4, r7, r9, fp, ip, sp, lr, pc}
 8015478:	0800fbb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, fp, ip, sp, lr, pc}
 801547c:	0800fb49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip, sp, lr, pc}
 8015480:	0800fb1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp, ip, sp, lr, pc}
 8015484:	0800faed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, fp, ip, sp, lr, pc}
 8015488:	0800fb75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, ip, sp, lr, pc}
 801548c:	0800fabd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, fp, ip, sp, lr, pc}
 8015490:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8015494:	00000000 	andeq	r0, r0, r0
 8015498:	0800fa93 	stmdaeq	r0, {r0, r1, r4, r7, r9, fp, ip, sp, lr, pc}
 801549c:	0800fbb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, ip, sp, lr, pc}
 80154a0:	0800fb6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp, ip, sp, lr, pc}
 80154a4:	0800fb41 	stmdaeq	r0, {r0, r6, r8, r9, fp, ip, sp, lr, pc}
 80154a8:	0800fb15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, sp, lr, pc}
 80154ac:	0800fb9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, fp, ip, sp, lr, pc}
 80154b0:	0800fae5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, fp, ip, sp, lr, pc}

080154b4 <vtable for StoreOscServer>:
	...
 80154bc:	0800fbf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 80154c0:	0800fc3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, sl, fp, ip, sp, lr, pc}
 80154c4:	0800fc19 	stmdaeq	r0, {r0, r3, r4, sl, fp, ip, sp, lr, pc}
 80154c8:	0800fbf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}

080154cc <vtable for StoreRemoteConfig>:
	...
 80154d4:	0800fc5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp, ip, sp, lr, pc}
 80154d8:	0800fca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, ip, sp, lr, pc}
 80154dc:	0800fc85 	stmdaeq	r0, {r0, r2, r7, sl, fp, ip, sp, lr, pc}
 80154e0:	0800fc61 	stmdaeq	r0, {r0, r5, r6, sl, fp, ip, sp, lr, pc}

080154e4 <vtable for StorePixelDmx>:
	...
 80154ec:	0800fd1b 	stmdaeq	r0, {r0, r1, r3, r4, r8, sl, fp, ip, sp, lr, pc}
 80154f0:	0800fe85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, lr, pc}
 80154f4:	0800fd21 	stmdaeq	r0, {r0, r5, r8, sl, fp, ip, sp, lr, pc}
 80154f8:	0800fe99 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, fp, ip, sp, lr, pc}
 80154fc:	0800fe51 	stmdaeq	r0, {r0, r4, r6, r9, sl, fp, ip, sp, lr, pc}
 8015500:	0800fe1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, fp, ip, sp, lr, pc}
 8015504:	0800fde5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8015508:	0800fdad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, sp, lr, pc}
 801550c:	0800fd79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr, pc}
 8015510:	0800fd45 	stmdaeq	r0, {r0, r2, r6, r8, sl, fp, ip, sp, lr, pc}
 8015514:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8015518:	00000000 	andeq	r0, r0, r0
 801551c:	0800fd1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, fp, ip, sp, lr, pc}
 8015520:	0800fe91 	stmdaeq	r0, {r0, r4, r7, r9, sl, fp, ip, sp, lr, pc}
 8015524:	0800fe7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr, pc}
 8015528:	0800fe49 	stmdaeq	r0, {r0, r3, r6, r9, sl, fp, ip, sp, lr, pc}
 801552c:	0800fe15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, sp, lr, pc}
 8015530:	0800fddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8015534:	0800fda5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, ip, sp, lr, pc}
 8015538:	0800fd71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, ip, sp, lr, pc}
 801553c:	3a434d46 	bcc	90e8a5c <__exidx_end+0x10d3040>
 8015540:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8015544:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8015548:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801554c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8015550:	6f742068 	svcvs	0x00742068
 8015554:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8015558:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801555c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8015560:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8015564:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8015568:	 	cmnvs	r7, sl

0801556a <DevicesParamsConst::GAMMA_VALUE>:
 801556a:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801556e:	61765f61 	cmnvs	r6, r1, ror #30
 8015572:	0065756c 	rsbeq	r7, r5, ip, ror #10

08015576 <DevicesParamsConst::SPI_SPEED_HZ>:
 8015576:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801557a:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801557e:	5f646565 	svcpl	0x00646565
 8015582:	 	strvc	r7, [r0], #-2664	; 0xfffff598

08015585 <DevicesParamsConst::TEST_PATTERN>:
 8015585:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8015589:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801558d:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08015592 <DevicesParamsConst::GROUPING_COUNT>:
 8015592:	5f64656c 	svcpl	0x0064656c
 8015596:	756f7267 	strbvc	r7, [pc, #-615]!	; 8015337 <NetworkConst::MSG_NETWORK_INIT+0xf4>
 801559a:	6f635f70 	svcvs	0x00635f70
 801559e:	00746e75 	rsbseq	r6, r4, r5, ror lr

080155a2 <DevicesParamsConst::GAMMA_CORRECTION>:
 80155a2:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80155a6:	6f635f61 	svcvs	0x00635f61
 80155aa:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 80155ae:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

080155b3 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 80155b3:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 80155b7:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 80155bb:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80155bf:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 80155c3:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

080155c5 <DevicesParamsConst::MAP>:
 80155c5:	5f64656c 	svcpl	0x0064656c
 80155c9:	5f626772 	svcpl	0x00626772
 80155cd:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 80155d1:	00676e69 	rsbeq	r6, r7, r9, ror #28

080155d5 <DevicesParamsConst::TYPE>:
 80155d5:	5f64656c 	svcpl	0x0064656c
 80155d9:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

080155de <DevicesParamsConst::COUNT>:
 80155de:	5f64656c 	svcpl	0x0064656c
 80155e2:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80155e6:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

080155e8 <DevicesParamsConst::LED_T0H>:
 80155e8:	5f64656c 	svcpl	0x0064656c
 80155ec:	00683074 	rsbeq	r3, r8, r4, ror r0

080155f0 <DevicesParamsConst::LED_T1H>:
 80155f0:	5f64656c 	svcpl	0x0064656c
 80155f4:	00683174 	rsbeq	r3, r8, r4, ror r1

080155f8 <DevicesParamsConst::FILE_NAME>:
 80155f8:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80155fc:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8015600:	00747874 	rsbseq	r7, r4, r4, ror r8
 8015604:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015608:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801560c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015610:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015614:	002c2264 	eoreq	r2, ip, r4, ror #4
 8015618:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801561c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015620:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015624:	0a64252e 	beq	991eae4 <__exidx_end+0x19090c8>
 8015628:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801562c:	0a232073 	beq	88dd800 <__exidx_end+0x8c7de4>
	...

08015631 <LightSetParamsConst::START_UNI_PORT>:
 8015631:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015635:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015639:	6f705f69 	svcvs	0x00705f69
 801563d:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8015641:	00000000 	andeq	r0, r0, r0

08015645 <LightSetParamsConst::DMX_START_ADDRESS>:
 8015645:	5f786d64 	svcpl	0x00786d64
 8015649:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801564d:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8015651:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8015655:	6f4e0073 	svcvs	0x004e0073
 8015659:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801565d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015661:	756f6620 	strbvc	r6, [pc, #-1568]!	; 8015049 <PixelType::MAPS+0x5>
 8015665:	5300646e 	movwpl	r6, #1134	; 0x46e
 8015669:	30313148 	eorscc	r3, r1, r8, asr #2
 801566d:	53530036 	cmppl	r3, #54	; 0x36
 8015671:	30333144 	eorscc	r3, r3, r4, asr #2
 8015675:	73250036 			; <UNDEFINED> instruction: 0x73250036
 8015679:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 801567d:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 8015681:	aa40000a 	bge	90156b1 <__exidx_end+0xfffc95>
 8015685:	00eeaaee 	rsceq	sl, lr, lr, ror #21
 8015689:	 	andmi	r0, r0, r0

0801568c <_OledFont8x6>:
 801568c:	00000040 	andeq	r0, r0, r0, asr #32
 8015690:	40000000 	andmi	r0, r0, r0
 8015694:	005f0000 	subseq	r0, pc, r0
 8015698:	00400000 	subeq	r0, r0, r0
 801569c:	00070007 	andeq	r0, r7, r7
 80156a0:	7f144000 	svcvc	0x00144000
 80156a4:	00147f14 	andseq	r7, r4, r4, lsl pc
 80156a8:	7f2a2440 	svcvc	0x002a2440
 80156ac:	4000122a 	andmi	r1, r0, sl, lsr #4
 80156b0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80156b4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80156b8:	50205649 	eorpl	r5, r0, r9, asr #12
 80156bc:	08004000 	stmdaeq	r0, {lr}
 80156c0:	00000307 	andeq	r0, r0, r7, lsl #6
 80156c4:	221c0040 	andscs	r0, ip, #64	; 0x40
 80156c8:	40000041 	andmi	r0, r0, r1, asr #32
 80156cc:	1c224100 	stfnes	f4, [r2], #-0
 80156d0:	2a400000 	bcs	90156d8 <__exidx_end+0xfffcbc>
 80156d4:	2a1c7f1c 	bcs	873534c <__exidx_end+0x71f930>
 80156d8:	08084000 	stmdaeq	r8, {lr}
 80156dc:	0008083e 	andeq	r0, r8, lr, lsr r8
 80156e0:	70800040 	addvc	r0, r0, r0, asr #32
 80156e4:	40000030 	andmi	r0, r0, r0, lsr r0
 80156e8:	08080808 	stmdaeq	r8, {r3, fp}
 80156ec:	00400008 	subeq	r0, r0, r8
 80156f0:	00606000 	rsbeq	r6, r0, r0
 80156f4:	10204000 	eorne	r4, r0, r0
 80156f8:	00020408 	andeq	r0, r2, r8, lsl #8
 80156fc:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8015700:	40003e45 	andmi	r3, r0, r5, asr #28
 8015704:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8015708:	72400000 	subvc	r0, r0, #0
 801570c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8015710:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8015714:	00334d49 	eorseq	r4, r3, r9, asr #26
 8015718:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801571c:	4000107f 	andmi	r1, r0, pc, ror r0
 8015720:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8015724:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8015728:	3149494a 	cmpcc	r9, sl, asr #18
 801572c:	21414000 	mrscs	r4, (UNDEF: 65)
 8015730:	00070911 	andeq	r0, r7, r1, lsl r9
 8015734:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8015738:	40003649 	andmi	r3, r0, r9, asr #12
 801573c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8015740:	0040001e 	subeq	r0, r0, lr, lsl r0
 8015744:	00001400 	andeq	r1, r0, r0, lsl #8
 8015748:	40004000 	andmi	r4, r0, r0
 801574c:	00000034 	andeq	r0, r0, r4, lsr r0
 8015750:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8015754:	40004122 	andmi	r4, r0, r2, lsr #2
 8015758:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801575c:	00400014 	subeq	r0, r0, r4, lsl r0
 8015760:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8015764:	01024000 	mrseq	r4, (UNDEF: 2)
 8015768:	00060959 	andeq	r0, r6, r9, asr r9
 801576c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8015770:	40004e59 	andmi	r4, r0, r9, asr lr
 8015774:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8015778:	7f40007c 	svcvc	0x0040007c
 801577c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8015780:	413e4000 	teqmi	lr, r0
 8015784:	00224141 	eoreq	r4, r2, r1, asr #2
 8015788:	41417f40 	cmpmi	r1, r0, asr #30
 801578c:	40003e41 	andmi	r3, r0, r1, asr #28
 8015790:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8015794:	7f400041 	svcvc	0x00400041
 8015798:	01090909 	tsteq	r9, r9, lsl #18
 801579c:	413e4000 	teqmi	lr, r0
 80157a0:	00735141 	rsbseq	r5, r3, r1, asr #2
 80157a4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80157a8:	40007f08 	andmi	r7, r0, r8, lsl #30
 80157ac:	417f4100 	cmnmi	pc, r0, lsl #2
 80157b0:	20400000 	subcs	r0, r0, r0
 80157b4:	013f4140 	teqeq	pc, r0, asr #2
 80157b8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80157bc:	00412214 	subeq	r2, r1, r4, lsl r2
 80157c0:	40407f40 	submi	r7, r0, r0, asr #30
 80157c4:	40004040 	andmi	r4, r0, r0, asr #32
 80157c8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80157cc:	7f40007f 	svcvc	0x0040007f
 80157d0:	7f100804 	svcvc	0x00100804
 80157d4:	413e4000 	teqmi	lr, r0
 80157d8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80157dc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80157e0:	40000609 	andmi	r0, r0, r9, lsl #12
 80157e4:	2151413e 	cmpcs	r1, lr, lsr r1
 80157e8:	7f40005e 	svcvc	0x0040005e
 80157ec:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80157f0:	49264000 	stmdbmi	r6!, {lr}
 80157f4:	00324949 	eorseq	r4, r2, r9, asr #18
 80157f8:	7f010340 	svcvc	0x00010340
 80157fc:	40000301 	andmi	r0, r0, r1, lsl #6
 8015800:	4040403f 	submi	r4, r0, pc, lsr r0
 8015804:	1f40003f 	svcne	0x0040003f
 8015808:	1f204020 	svcne	0x00204020
 801580c:	403f4000 	eorsmi	r4, pc, r0
 8015810:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8015814:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8015818:	40006314 	andmi	r6, r0, r4, lsl r3
 801581c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8015820:	61400003 	cmpvs	r0, r3
 8015824:	434d4959 	movtmi	r4, #55641	; 0xd959
 8015828:	7f004000 	svcvc	0x00004000
 801582c:	00414141 	subeq	r4, r1, r1, asr #2
 8015830:	08040240 	stmdaeq	r4, {r6, r9}
 8015834:	40002010 	andmi	r2, r0, r0, lsl r0
 8015838:	41414100 	mrsmi	r4, (UNDEF: 81)
 801583c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8015840:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8015844:	40404000 	submi	r4, r0, r0
 8015848:	00404040 	subeq	r4, r0, r0, asr #32
 801584c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8015850:	40000008 	andmi	r0, r0, r8
 8015854:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8015858:	7f400040 	svcvc	0x00400040
 801585c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8015860:	44384000 	ldrtmi	r4, [r8], #-0
 8015864:	00284444 	eoreq	r4, r8, r4, asr #8
 8015868:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801586c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8015870:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8015874:	00400018 	subeq	r0, r0, r8, lsl r0
 8015878:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801587c:	a4184000 	ldrge	r4, [r8], #-0
 8015880:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8015884:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8015888:	40007804 	andmi	r7, r0, r4, lsl #16
 801588c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8015890:	20400000 	subcs	r0, r0, r0
 8015894:	003d4040 	eorseq	r4, sp, r0, asr #32
 8015898:	107f4000 	rsbsne	r4, pc, r0
 801589c:	00004428 	andeq	r4, r0, r8, lsr #8
 80158a0:	7f410040 	svcvc	0x00410040
 80158a4:	40000040 	andmi	r0, r0, r0, asr #32
 80158a8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80158ac:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80158b0:	78040408 	stmdavc	r4, {r3, sl}
 80158b4:	44384000 	ldrtmi	r4, [r8], #-0
 80158b8:	00384444 	eorseq	r4, r8, r4, asr #8
 80158bc:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80158c0:	40001824 	andmi	r1, r0, r4, lsr #16
 80158c4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80158c8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80158cc:	08040408 	stmdaeq	r4, {r3, sl}
 80158d0:	54484000 	strbpl	r4, [r8], #-0
 80158d4:	00245454 	eoreq	r5, r4, r4, asr r4
 80158d8:	3f040440 	svccc	0x00040440
 80158dc:	40002444 	andmi	r2, r0, r4, asr #8
 80158e0:	2040403c 	subcs	r4, r0, ip, lsr r0
 80158e4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80158e8:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80158ec:	403c4000 	eorsmi	r4, ip, r0
 80158f0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80158f4:	10284440 	eorne	r4, r8, r0, asr #8
 80158f8:	40004428 	andmi	r4, r0, r8, lsr #8
 80158fc:	9090904c 	addsls	r9, r0, ip, asr #32
 8015900:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8015904:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8015908:	08004000 	stmdaeq	r0, {lr}
 801590c:	00004136 	andeq	r4, r0, r6, lsr r1
 8015910:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8015914:	40000000 	andmi	r0, r0, r0
 8015918:	08364100 	ldmdaeq	r6!, {r8, lr}
 801591c:	02400000 	subeq	r0, r0, #0
 8015920:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8015924:	263c4000 	ldrtcs	r4, [ip], -r0
 8015928:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801592c <oled_128x32_init>:
 801592c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8015930:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8015934:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8015938:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801593c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8015940:	a6a440db 	ssatge	r4, #5, fp, asr #1

08015944 <oled_128x64_init>:
 8015944:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8015948:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801594c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8015950:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8015954:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8015958:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801595c <vtable for Ssd1306>:
	...
 8015964:	080108a5 	stmdaeq	r1, {r0, r2, r5, r7, fp}
 8015968:	080108d1 	stmdaeq	r1, {r0, r4, r6, r7, fp}
 801596c:	08010be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp}
 8015970:	08010b69 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, fp}
 8015974:	08010a35 	stmdaeq	r1, {r0, r2, r4, r5, r9, fp}
 8015978:	080108f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, fp}
 801597c:	08010919 	stmdaeq	r1, {r0, r3, r4, r8, fp}
 8015980:	08010a0b 	stmdaeq	r1, {r0, r1, r3, r9, fp}
 8015984:	080109c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, fp}
 8015988:	080108a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, fp}
 801598c:	08010a71 	stmdaeq	r1, {r0, r4, r5, r6, r9, fp}
 8015990:	08010a7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, fp}
 8015994:	08010a97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, fp}
 8015998:	080108a9 	stmdaeq	r1, {r0, r3, r5, r7, fp}
 801599c:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80159a0:	5b1b006d 	blpl	86d5b5c <__exidx_end+0x6c0140>
 80159a4:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80159a8:	31335b1b 	teqcc	r3, fp, lsl fp
 80159ac:	5b1b006d 	blpl	86d5b68 <__exidx_end+0x6c014c>
 80159b0:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80159b4:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80159b8:	5b1b006d 	blpl	86d5b74 <__exidx_end+0x6c0158>
 80159bc:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80159c0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80159c4:	205d732a 	subscs	r7, sp, sl, lsr #6
 80159c8:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80159cc:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80159d0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80159d4:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80159d8:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80159dc:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80159e0:	00732a2e 	rsbseq	r2, r3, lr, lsr #20

080159e4 <days_of_month>:
 80159e4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80159e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 80159ec:	0000001f 	andeq	r0, r0, pc, lsl r0
 80159f0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80159f4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80159f8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80159fc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a00:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a04:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015a08:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a0c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015a10:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08015a14 <__exidx_start>:
 8015a14:	7fff3938 	svcvc	0x00ff3938
 8015a18:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08015a1c <.ARM.attributes>:
 8015a1c:	00002e41 	andeq	r2, r0, r1, asr #28
 8015a20:	61656100 	cmnvs	r5, r0, lsl #2
 8015a24:	01006962 	tsteq	r0, r2, ror #18
 8015a28:	00000024 	andeq	r0, r0, r4, lsr #32
 8015a2c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8015a30:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8015a34:	0600334d 	streq	r3, [r0], -sp, asr #6
 8015a38:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8015a3c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8015a40:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8015a44:	1a011803 	bne	805ba58 <__exidx_end+0x4603c>
 8015a48:	Address 0x0000000008015a48 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20015800 	andcs	r5, r1, r0, lsl #16

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000020 	andeq	r0, r0, r0, lsr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000040 	andeq	r0, r0, r0, asr #32
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000060 	andeq	r0, r0, r0, rrx
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000080 	andeq	r0, r0, r0, lsl #1
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000100 	andeq	r0, r0, r0, lsl #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000140 	andeq	r0, r0, r0, asr #2
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000180 	andeq	r0, r0, r0, lsl #3
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000200 	andeq	r0, r0, r0, lsl #4
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000300 	andeq	r0, r0, r0, lsl #6
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000400 	andeq	r0, r0, r0, lsl #8
20000064:	00000000 	andeq	r0, r0, r0
20000068:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000078 <SystemCoreClock>:
20000078:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

20000080 <outptr>:
20000080:	00000000 	andeq	r0, r0, r0

20000084 <RemoteConfig::s_pUdpBuffer>:
20000084:	00000000 	andeq	r0, r0, r0

20000088 <RemoteConfig::s_RemoteConfigListBin>:
	...

200000ac <RemoteConfig::s_pThis>:
200000ac:	00000000 	andeq	r0, r0, r0

200000b0 <HttpDaemon::m_Content>:
	...

20000650 <OscServer::s_aPathInfo>:
	...

200006d0 <OscServer::s_pUdpBuffer>:
200006d0:	00000000 	andeq	r0, r0, r0

200006d4 <OscServer::s_aPathSecond>:
	...

20000754 <OscServer::s_aPathBlackOut>:
	...

200007d4 <OscServer::s_aPath>:
	...

20000854 <OscServer::s_pData>:
	...

20000a54 <OscServer::s_pThis>:
20000a54:	00000000 	andeq	r0, r0, r0

20000a58 <OscSimpleSend::s_Message>:
	...

20000c58 <WS28xxDmx::s_pThis>:
20000c58:	00000000 	andeq	r0, r0, r0

20000c5c <PixelPatterns::m_PortConfig>:
	...

20000c7c <PixelPatterns::m_nActivePorts>:
20000c7c:	00000000 	andeq	r0, r0, r0

20000c80 <PixelPatterns::m_pScannerColours>:
20000c80:	00000000 	andeq	r0, r0, r0

20000c84 <PixelPatterns::m_nCount>:
20000c84:	00000000 	andeq	r0, r0, r0

20000c88 <PixelPatterns::m_pOutput>:
20000c88:	00000000 	andeq	r0, r0, r0

20000c8c <PixelTestPattern::s_Pattern>:
20000c8c:	00000000 	andeq	r0, r0, r0

20000c90 <s_tmp>:
20000c90:	00000000 	andeq	r0, r0, r0

20000c94 <WS28xx::s_pThis>:
20000c94:	00000000 	andeq	r0, r0, r0

20000c98 <g_ip_info>:
	...

20000ca4 <g_mac_address>:
20000ca4:	00000000 	andeq	r0, r0, r0
	...

20000caa <s_is_dhcp>:
	...

20000cac <s_p>:
20000cac:	00000000 	andeq	r0, r0, r0

20000cb0 <s_ticker>:
20000cb0:	00000000 	andeq	r0, r0, r0

20000cb4 <s_mac_address>:
	...

20000cbc <s_mac_address_arp_reply>:
	...

20000cc4 <s_id>:
20000cc4:	00000000 	andeq	r0, r0, r0

20000cc8 <s_recv_queue>:
	...

20001838 <s_tcb>:
	...

2000187c <s_tcp>:
	...

20001e68 <broadcast_mask>:
20001e68:	00000000 	andeq	r0, r0, r0

20001e6c <gw_ip>:
20001e6c:	00000000 	andeq	r0, r0, r0

20001e70 <on_network_mask>:
20001e70:	00000000 	andeq	r0, r0, r0

20001e74 <s_id>:
20001e74:	00000000 	andeq	r0, r0, r0

20001e78 <s_ports_allowed>:
	...

20001e98 <s_recv_queue>:
	...

20007b38 <s_send_packet>:
	...

20008124 <MDNS::s_nRemoteIp>:
20008124:	00000000 	andeq	r0, r0, r0

20008128 <MDNS::s_nRemotePort>:
20008128:	00000000 	andeq	r0, r0, r0

2000812c <MDNS::s_nMulticastIp>:
2000812c:	00000000 	andeq	r0, r0, r0

20008130 <MDNS::s_AnswerLocalIp>:
	...

20008334 <MDNS::s_ServiceRecords>:
	...

20008354 <MDNS::s_nBytesReceived>:
20008354:	00000000 	andeq	r0, r0, r0

20008358 <MDNS::s_ServiceRecordsData>:
	...

2000855c <MDNS::s_pName>:
2000855c:	00000000 	andeq	r0, r0, r0

20008560 <MDNS::s_pBuffer>:
20008560:	00000000 	andeq	r0, r0, r0

20008564 <Network::s_pThis>:
20008564:	00000000 	andeq	r0, r0, r0

20008568 <s_arp_announce>:
	...

20008594 <s_arp_reply>:
	...

200085c0 <s_arp_request>:
	...

200085ec <s_arp_records>:
	...

2000876c <s_entry_current>:
2000876c:	00000000 	andeq	r0, r0, r0

20008770 <s_dhcp_allocated_gw>:
20008770:	00000000 	andeq	r0, r0, r0

20008774 <s_dhcp_allocated_ip>:
20008774:	00000000 	andeq	r0, r0, r0

20008778 <s_dhcp_allocated_netmask>:
20008778:	00000000 	andeq	r0, r0, r0

2000877c <s_dhcp_message>:
	...

200089a0 <s_dhcp_server_ip>:
200089a0:	00000000 	andeq	r0, r0, r0

200089a4 <s_groups>:
	...

20008ac4 <s_id>:
20008ac4:	00000000 	andeq	r0, r0, r0

20008ac8 <s_joins_allowed_index>:
20008ac8:	00000000 	andeq	r0, r0, r0

20008acc <s_leave>:
	...

20008afc <s_multicast_mac>:
	...

20008b04 <s_report>:
	...

20008b34 <ConfigStore::s_nWaitMillis>:
20008b34:	00000000 	andeq	r0, r0, r0

20008b38 <ConfigStore::s_SpiFlashData>:
	...

20009b38 <ConfigStore::s_nStartAddress>:
20009b38:	00000000 	andeq	r0, r0, r0

20009b3c <ConfigStore::s_bHaveFlashChip>:
20009b3c:	00000000 	andeq	r0, r0, r0

20009b40 <ConfigStore::s_nSpiFlashStoreSize>:
20009b40:	00000000 	andeq	r0, r0, r0

20009b44 <ConfigStore::s_State>:
20009b44:	00000000 	andeq	r0, r0, r0

20009b48 <ConfigStore::s_pThis>:
20009b48:	00000000 	andeq	r0, r0, r0

20009b4c <ConfigStore::s_bIsNew>:
20009b4c:	00000000 	andeq	r0, r0, r0

20009b50 <StoreNetwork::s_pThis>:
20009b50:	00000000 	andeq	r0, r0, r0

20009b54 <StoreOscServer::s_pThis>:
20009b54:	00000000 	andeq	r0, r0, r0

20009b58 <StoreRemoteConfig::s_pThis>:
20009b58:	00000000 	andeq	r0, r0, r0

20009b5c <StorePixelDmx::s_pThis>:
20009b5c:	00000000 	andeq	r0, r0, r0

20009b60 <FlashCode::s_pThis>:
20009b60:	00000000 	andeq	r0, r0, r0

20009b64 <flashcode::s_nAddress>:
20009b64:	00000000 	andeq	r0, r0, r0

20009b68 <flashcode::s_State>:
20009b68:	00000000 	andeq	r0, r0, r0

20009b6c <flashcode::s_nPage>:
20009b6c:	00000000 	andeq	r0, r0, r0

20009b70 <flashcode::s_pData>:
20009b70:	00000000 	andeq	r0, r0, r0

20009b74 <flashcode::s_isBank0>:
20009b74:	00000000 	andeq	r0, r0, r0

20009b78 <flashcode::s_nLength>:
20009b78:	00000000 	andeq	r0, r0, r0

20009b7c <PropertiesConfig::s_Config>:
20009b7c:	00000000 	andeq	r0, r0, r0

20009b80 <Display::s_pThis>:
20009b80:	00000000 	andeq	r0, r0, r0

20009b84 <_ClearBuffer>:
	...

20009c0c <Ssd1306::s_pThis>:
20009c0c:	00000000 	andeq	r0, r0, r0

20009c10 <FirmwareVersion::s_FirmwareVersion>:
	...

20009c26 <FirmwareVersion::s_Print>:
	...

20009c68 <FirmwareVersion::s_pThis>:
20009c68:	00000000 	andeq	r0, r0, r0

20009c6c <LedBlink::s_pThis>:
20009c6c:	00000000 	andeq	r0, r0, r0

20009c70 <Hardware::s_pThis>:
20009c70:	00000000 	andeq	r0, r0, r0

20009c74 <last.0>:
20009c74:	00000000 	andeq	r0, r0, r0

20009c78 <s_micros>:
	...

20009c80 <set_timer>:
20009c80:	00000000 	andeq	r0, r0, r0

20009c84 <s_nSysTickMillis>:
20009c84:	00000000 	andeq	r0, r0, r0

20009c88 <dma_current_ptp_rxdesc>:
20009c88:	00000000 	andeq	r0, r0, r0

20009c8c <dma_current_ptp_txdesc>:
20009c8c:	00000000 	andeq	r0, r0, r0

20009c90 <dma_current_rxdesc>:
20009c90:	00000000 	andeq	r0, r0, r0

20009c94 <dma_current_txdesc>:
20009c94:	00000000 	andeq	r0, r0, r0

20009c98 <enet_initpara>:
	...

20009cd4 <rx_buff>:
	...

2000cc74 <rxdesc_tab>:
	...

2000ccf4 <tx_buff>:
	...

2000d8dc <txdesc_tab>:
	...

2000d8fc <s_nAddress>:
2000d8fc:	00000000 	andeq	r0, r0, r0

2000d900 <s_TxBuffer>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
